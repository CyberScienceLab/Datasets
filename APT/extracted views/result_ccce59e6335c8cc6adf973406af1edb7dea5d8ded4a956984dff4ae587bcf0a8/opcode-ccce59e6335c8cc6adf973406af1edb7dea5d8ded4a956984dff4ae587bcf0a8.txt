loopne or add add add add add std add add add add add lock or adc decl adc js xor sbb add add sub mov add outsl mov add or mov add das add or add incb xchg add jae add or xor add add sub sub add add add add and add add add add add add add add add add add add add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add add add add add and add add add jb add add push push outsl push add or add add push pop outsl push add or sub add add push pop outsl push add or add add push push outsl push add or sub add add push push outsl push add or add add push pop outsl push add or sub add add push pop outsl push add or add add push push outsl push add or sub add add push push outsl push add or add add push pop outsl push add or sub add add push pop outsl push add or add add push push outsl push add or sub add push sub sub add pop sub sub add sbb mov add add sub add sub sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub add add push sub add outsl push add or sub sbb addb add lea add add sub add das add or add lods add push add add add add add add sub sub add add push sub xchg add or sub add add push sub add outsl xchg add or sub add xchg add or add sub sub jae add or jae add or jae add or jae add or jae add or sub add push or add outsl scas add or add adc sub add sub sub add add add add add jge add add jnp add add add push add add add add add jge add add jnp add add add scas add jnp add add add sub sub jb adc jo mov add jp add add add add sub add add add sub sub jb adc jo mov add jp add add add add (bad) adc sub add mov add sub add xor add add adc add jo (bad) xor add sub add or pop jb add jo lea add add add add (bad) xor add sub add or add or sub jb add jo adc lea add add add jb add jo and add mov add or add or adc and add adc push add add jae add or add or add or adc sub add sub adc add data16 add add adc jne add add push sub add add jae add or add or push pop outsl daa add or sub add or add or hlt add add sub add sub add or add sub adc and add push outsl sub push adc and add and add add sub add sub add adc add sub add add add add or sub add add add incb or sub add add add xor add add add add add add add add adc add aaa add add add add push mov add jae add or add add add pop sub pop push outsl xor add add jge add add jnp add add pop sub pop push outsl xor add sub adc add aaa add add add add push mov add jae add or add add add pop sub pop push outsl xor add add jge add add jnp add add pop sub pop push outsl xor add sub adc add aaa add add add add push cwtl add push jae add or add add add pop sub pop push outsl xor add add jge add add jnp add add pop sub pop push outsl xor add sub adc add push add add incb mov add jae add or add push lea add jae add or add add add or or outsl xor pop outsl add or add add add jnp add add or or outsl aaa add or pop outsl cmp add sub add xor add add add incb popl add jae add or add push xchg add push jae add or add add add or or outsl xor pop outsl add or add add add jnp add add or or outsl aaa add or pop outsl cmp add sub add xor add add add incb xchg add push jae add or add push cltd add push jae add or add add add or or outsl add or pop outsl xor add add add jnp add add or or outsl cmp add or outsl aaa add or add adc add insl add add add adc incb lcall add or incb sahf add push jae add or add push lahf add push jae add or jnp add add or add or pop outsl xor add or outsl xor add add add jnp add add or add or pop outsl xor add or outsl aaa add or add add xor add add push add adc incb fwait add push jae add or add push mov xor add or incb mov xor add or jnp add add or add or pop outsl xor add or outsl xor add add add jnp add add or add or pop outsl xor add or outsl aaa add or add add xor add add push add adc incb pushf add push jae add or add push mov xor add or incb mov xor add or jnp add add or add or pop outsl xor add or outsl xor add add add jnp add add or add or pop outsl xor add or outsl aaa add or add add xor add add push add adc incb popf add push jae add or add push movsb add push jae add or add push movsl add push jae add or jnp add add or add or pop outsl xor add or outsl xor add add add jnp add add or add or pop outsl xor add or outsl aaa add or add add xor add daa add pop add adc sub cmp add add add add sub add or add or add add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add jae add or add push add sub add or add add push jb add jo add scas inc pop sbb jae add or add or add add push sub add outsl inc add or add add push and addb add add or add or add add push jb add jo inc add or add add push and add add sub add or add or add add push push outsl dec add or add add push jb add jo dec add or add add push pop and add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop fs inc jae add or add or add add push push outsl dec add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add add jae add or add or add add push jb add jo inc add or add add push pop push cmp add or add or add add push pop or add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop push add or add or add add push pop or add or add add push push outsl push add or add add push push jb add jo dec add or add outsl dec add or add add push push push jae add or add or add add push jb add jo inc add or add add push and add and add jae add or add or add add push pop outsl push add or add add push pop or add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop push add or add or add add push pop or dec add or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add add jae add or add or add add push jb add jo inc add or add add push pop push inc jae add or add or add add push pop or or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop imul jae add or add or add add push pop push outsl dec add or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl push add or add add push and push jae add or add or add add push jb add jo inc add or add add push and add sbb add or add or add add push push outsl dec add or add add push jb add jo add mov jae add or add or add add push sub add outsl inc add or add add push and pop jae add or add or add add push jb add jo inc add or add add push and add add and add or add or add add push push outsl dec add or add add push jb add jo dec add or add add push sub add outsl push add or add add push and test add jae add or add or add add push jb add jo inc add or add add push and add sbb add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add pop lock add or add or add add push jb add jo inc add or add add push sbb xor add jae add or add or add add push push outsl dec add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push pop and add jae add or add or add add push jb add jo inc add or add add push and add add sub add or add or add add push push outsl dec add or add add push sbb add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop push add or add or add add push pop adc add or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add add jae add or add or add add push jb add jo inc add or add add push pop push cmp add or add or add add push pop adc add or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl dec add or add add push push jb add jo dec add or add outsl dec add or add add push and add push jae add or add or add add push jb add jo inc add or add add push pop imul jae add or add or add add push pop adc add or add add push push outsl push add or add add push push outsl push add or add add push sub add outsl dec add or add add push jb add jo add sbb pop sbb jae add or add or add add push sub add outsl inc add or add add push pop sub add add or add or add add push jb add jo inc add or add add push and add add and add or add or add add push push outsl dec add or add add push sub add outsl dec add or add add push jb add jo add sbb pop sbb jae add or add or add add push sub add outsl inc add or add add push pop sub add add or add or add add push jb add jo inc add or add add push and add add and add or add or add add push push outsl dec add or add add push sub add outsl dec add or add add push jb add jo add sbb pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add sahf add add add or add or add add push jb add jo inc add or add add push and add add and add or add or add add push push outsl dec add or add add push sub add outsl dec add or add add push jb add jo add sbb pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add (bad) add add add or add or add add push jb add jo inc add or add add push and add add and add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push push and add jae add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and add jae add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and add jae add or add or add add push jb add jo inc add or add add push sbb xor add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub pop add add add or add or add add push jb add jo inc add or add add push sbb xor add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub pop add add add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub mov add jae add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push push and inc add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and inc add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push push and add add add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and add add add or add or add add push jb add jo inc add or add add push pop sub jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add mov add jae add or add or add add push jb add jo inc add or add add push push sbb add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add loopne add jae add or add or add add push jb add jo inc add or add add push push sbb add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and inc add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add and add add add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add cwtl add add add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add rolb add jae add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub cwtl add add add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub rolb add jae add or add or add add push jb add jo inc add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub cwtl add add add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add cwtl add add add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub rolb add add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add rolb add add or add or add add push jb add jo inc add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub rolb add jae add or add or add add push jb add add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add rolb add jae add or add or add add push jb add add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push pop sub clc add add add or add or add add push jb add add or add add push and add add jae add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add clc add add add or add or add add push jb add add or add add push and add add jae add or add or add add push pop xor add or add add push sub add outsl push add or add add push and add add cwtl add add add or add or add add push jb add add or add add push sbb sub add or add or add add push push outsl dec add or add add push sub add outsl push add or add add push and add add rolb add jae add or add or add add push jb add add or add add push sbb sub add or add or add add push push outsl dec add or add add push and add add addb add sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add call inc add or add or add add push jb add add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb add add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add rolb add jae add or add or add add push jb add add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb add add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add mov inc add or add or add add push jb add add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb add add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add mov inc add or add or add add push jb add add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add mov add jae add or add or add add push jb push add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add jo add jae add or add or add add push jb push add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add pop add add add or add or add add push jb push add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add inc add add add or add or add add push jb push add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add sub add jae add or add or add add push jb push add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb push add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add adc add jae add or add or add add push jb pop add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb pop add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add clc add add add or add or add add push jb pop add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb pop add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add loopne add jae add or add or add add push jb pop add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb pop add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add enter jae add or add or add add push jb pop add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb pop add dec add or add add push pop adc add or add add push sub add outsl push add or add add push jb add jo add xor pop sbb jae add or add or add add push sub add outsl inc add or add add push and add add mov add jae add or add or add add push jb pop add inc add or add add push and pop jae add or add or add add push push outsl dec add or add add push jb pop add dec add or add add push pop adc add or add add push sub add outsl pop add or add add push push outsl pop add or add add push pop sub or add jae add or add or add add push jb or jo inc add or add add push and add add adc add or add or add add push push outsl dec add or add add push jb or jo pop add or add pop adc add or add or add push add or add or add rolb add and inc add or pop add or add pop add or outsl addl push outsl pop add or add pop add or outsl addl add or add pop add or outsl jg add outsl pop add or add pop add or outsl jge add outsl pop add or add pop add or outsl jnp add outsl pop add or add pop add or outsl jns add outsl pop add or add pop add or outsl ja add outsl pop add or add pop add or outsl jne add outsl pop add or add pop add or outsl jae add outsl pop add or add pop add or outsl jno add outsl pop add or add pop add or outsl outsl add push outsl pop add or add pop add or outsl insl add push outsl pop add or add pop add or outsl imul push outsl pop add or add pop add or outsl imul add or add pop add or outsl add push outsl pop add or add pop add or outsl add push outsl pop add or add pop add or outsl arpl add outsl pop add or add pop add or outsl popa add push outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl push add push outsl pop add or add pop add or outsl push add push outsl pop add or add pop add or outsl push add push outsl pop add or add pop add or outsl push add push outsl pop add or add pop add or outsl dec add push outsl pop add or add pop add or outsl dec add push outsl pop add or add pop add or outsl dec add push outsl pop add or add pop add or outsl dec add push outsl pop add or add pop add or outsl inc add push outsl pop add or add pop add or outsl inc add push outsl pop add or add pop add or outsl inc add push outsl pop add or add pop add or outsl inc add push outsl pop add or add pop add or outsl aas add push outsl pop add or add pop add or outsl cmp pop add or add pop add or outsl cmp add outsl pop add or add pop add or outsl cmp add outsl pop add or add pop add or outsl aaa add push outsl pop add or add pop add or outsl xor pop add or add pop add or outsl xor add outsl pop add or add pop add or outsl xor add outsl pop add or add pop add or outsl das add push outsl pop add or add pop add or outsl sub pop add or add pop add or outsl sub add outsl pop add or add pop add or outsl sub add outsl pop add or add pop add or outsl daa add push outsl pop add or add pop add or outsl and pop add or add pop add or outsl and add outsl pop add or add pop add or outsl and add outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl sbb pop add or add pop add or outsl sbb add outsl pop add or add pop add or outsl sbb add outsl pop add or add pop add or outsl pop add push outsl pop add or add pop add or outsl adc pop add or add pop add or outsl adc add outsl pop add or add pop add or outsl adc add outsl pop add or add pop add or outsl sldt push outsl pop add or add pop add or outsl or pop add or add pop add or outsl or add outsl pop add or add pop add or outsl or add outsl pop add or add pop add or outsl pop add push outsl pop add or add add jo add xor pop sbb jae add or add or add sub add add push sub add add push sub add add jb or jo inc add or add sub add add jb or jo add or add sub add add add adc or push add add add adc sub sub add add add lock sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add pop lea add and or sub add es push xchg sub push lcall push add add and add sub or orb add outsl pop add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or sub add xor add add add add adc jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsl add or add add push jb or jo dec add add jo add jb or jo jno add outsl dec add or jle add add add add rclb arpl add push sub jb or jo adc jb add sub add add add add add jb or jo lea add add adc sub add add add push outsl je add jb or jo sub add push incb or sub add add push sub add outsl push add or add add push sub add outsl push add or add dec add add outsl pop add push outsl je add jb or jo sub add push incb or sub add add push sub add outsl push add or add add push sub add outsl push add or add add add add add push outsl je add jb or jo sub add push incb or outsl imul push sub add outsl push add or add add push sub add outsl push add or add mov outsl pop add push outsl je add jb or jo sub add push incb adc add sub outsl insl add push sub add outsl push add or add add push sub add outsl push add or add ja add add add push outsl je add jb or jo sub add push incb adc add add push sub add outsl push add or add add push sub add outsl push add or add xor add add add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add jmp outsl pop add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add mov outsl pop add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add pop add add outsl pop add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add adc add add add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add int add add add push outsl je add jb or jo sub add push incb adc adc sub add add push sub add outsl push add or add add push sub add outsl push add or add xchg add add add push outsl je add jb or jo sub add push incb adc or and add sub add outsl push add or add add push sub add outsl push add or add inc add add push outsl je add jb or jo sub add push incb adc add add push sub add outsl push add or add add push sub add outsl push add or add add xor add add add add adc jle add add add add add or sub jb or jo adc jb add sub add add cmp add add add add add push incb jle add add add add add pop or sub jb or jo adc jb add sub add add sub dec add add add add add or sub jb or jo adc jb add sub add add sub dec add add add add add push incb jle add add add add rclb arpl add or push or jo adc jb add sub add add sub adc or jb add or add add outsl daa add push pop outsl ja add add outsl sub add pop outsl ja add add outsl sub add pop outsl ja add add outsl sub outsl ja add add data16 or add add lock sub add pop and add add or add or add orb add dec add add push add add add add dec add add push sub add or sub sub add (bad) orb add dec add add sbb leave jle add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add pop lea add and or sub add or xchg sub push lcall push add add and add sub or orb add outsl pop add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or add add push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or sub add xor add add adc add incb or sub add add push sub add outsl push add or add push add incb or sub add add push sub add outsl push add or add add incb or sub add add push sub add outsl push add or add sbb sbb add outsl sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add add add add add add add add or add adc add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc add add push incb adc adc sub add add push sub add outsl push add or add pop add incb adc adc sub add add push sub add outsl push add or add cmp sbb add or or add add push sub add outsl push add or add sbb sbb add or or add add push sub add outsl push add or add jns add outsl jp add add nop add add sub add add sub add xchg add add add incb adc adc sub add add push sub add outsl push add or add pop add incb adc adc sub add add push sub add outsl push add or add cmp sbb add or or adc outsl sub add sub add outsl push add or add sbb sbb add or add add push sub add outsl push add or add jns add outsl jp add add nop add add sub add add sub add nop add add sub add add outsl daa add push sub add outsl push add or add add push sub add outsl push add or add add push sub add outsl push add or add add push sub add outsl push add or sub add outsl jp add add sub sub add adc or jmp add adc push orb push orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add or cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add or cmp jle add add or pop inc add add add add add add add add addb add add add push jb or jo dec add or jle add add jb or jo sub add add push jb or jo dec add or jle add add jb or jo sub add add push jb or jo dec add or jle add add jb or jo sub add outsl sub cmp add dec add or jle add add jb or jo sub add add add (bad) orb add add add add incb push incb or (bad) incl outsl or add push outsl push add or add add push pop outsl push add or add sub add adc or mov add push add adc add add add push adc xor jo lea add add add add add or push adc inc or jo lea add add adc insl add or pop or jo lea add add add and add adc adc sub add es adc inc or jo lea add add add adc adc insl add or imul or add sub xor add add add add adc sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add pop lea add and or sub add es push xchg sub push lcall push add add and add sub or orb add outsl addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add or cmp sub add add add or or or add adc adc sub add or adc or add and add mov add mov add or or pop or or add and add mov add mov add or or sub lea add add add outsl addl push outsl addb or or add or sub add or gs or add and add adc adc sub add and add add pop and add add or inc add add adc sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add or sub lea add add add inc add add addl or add or sub add or sub lea add add add adc adc sub add or das push add lea add add adc sub add add add push outsl push add or add add push pop outsl push add or add sub add adc or mov add adc add add or fwait add add or add add sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc pop sub add adc push xchg sub add add or push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add mov add outsl mov nop add push add jle add add or or or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add or sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add or mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add or or pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add pop sbb add incb adc or jle (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push adc add incb adc sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add adc add add or add adc add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add add incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sbb push outsl mov sub add sub add outsl push add or add adc incb adc sub mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add adc incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add sub add xchg add push je add sbb xchg add push sub sub push sub add xor add or add add adc sbb and pop or add add sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc pop sub add adc push xchg sub add add or push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add mov add outsl mov nop add push add jle add add or or or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add or sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add or mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add or or pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add pop sbb add incb adc or jle (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push adc add incb adc sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add adc add add or add adc add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add add incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sbb push outsl mov sub add sub add outsl push add or add adc incb adc sub mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add adc incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add sub add add or sbb sbb xchg add push adc cmp add lea add add adc insl add or imul or add or adc push outsl test add or add sub adc or mov add adc add add or fwait add add push pop incb or cmp add sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc add adc sub adc lcall push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add mov add outsl mov nop add push add jle add add pop adc adc or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add pop adc sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add pop sub mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add or or pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add push sbb add incb adc adc cmp (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push or adc or sbb push outsl mov daa add push sub add outsl push add or add jae pop incb adc sub mov sub add sub add outsl push add or add dec or incb adc adc sub sub mov sub add sub add outsl push add or add and adc adc sub sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add or add add add add add add add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add push incb adc adc sub sub mov daa add push sub add outsl push add or add jae pop incb adc adc sub sub mov sub add sub add outsl push add or add dec or incb adc adc sub sub mov sub add sub add outsl push add or add and adc adc sbb mov add outsl mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add or incb adc sub mov daa add push sub add outsl push add or add jae pop incb adc adc sub sub mov sub add sub add outsl push add or add dec or incb adc adc sub sub mov sub add sub add outsl push add or add and adc adc sub sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add sub add xchg add push adc dec push add lea add add add add sub add add add add xor add add adc add add or fwait add add or add add sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc pop sub add adc push xchg sub add add or push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add mov add outsl mov nop add push add jle add add or or or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add or sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add or mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add or or pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add pop sbb add incb adc or jle (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push adc add incb adc sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add adc add add or add adc add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add add incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sbb push outsl mov sub add sub add outsl push add or add adc incb adc sub mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add adc incb adc adc sub sub mov daa add push sub add outsl push add or add jbe add incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add cmp xchg add adc adc jb push add xchg add add sbb push add xchg add add sbb push add xchg add add sbb push add xchg add add sbb push add xchg add add push add add add sub add or add or add or lea add add outsl mov add mov pop outsl mov add mov sbb add or sbb add or sbb add or or add or sub push sub add adc or cltd adc add add add or fwait add add or add add add xchg add sub add add add jo sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc pop sub add adc push xchg sub push push lcall push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add mov add outsl mov nop add push add jle add add or or or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add or sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add or mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add or or pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add pop sbb add incb adc (bad) (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push adc add push adc sub sub mov daa add push sub add outsl push add or add jbe add movups sub sub mov sub add sub add outsl push add or add dec adc adc adc push outsl mov sub add sub add outsl push add or add adc adc adc sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add adc add add add add add add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add add adc adc push outsl mov daa add push sub add outsl push add or add jbe add adc adc sbb push outsl mov sub add sub add outsl push add or add dec adc adc sub mov sub add sub add outsl push add or add adc push adc sub sub mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add adc pop adc sub sub mov daa add push sub add outsl push add or add jbe add sbb sbb push outsl mov sub add sub add outsl push add or add dec adc sbb sbb push outsl mov sub add sub add outsl push add or add adc sbb sbb sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add add adc and add mov add or adc adc cmp data16 or and add sub add pop and add add or add or add inc add add jb or jo lea add add adc sub add es add add jb or jo lea add add add push add add adc lea add and adc pop sub add adc push xchg sub push push lcall push add add and add sub or orb add mov add outsl mov addl push jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or outsb add or add or jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc add add mov add outsl mov nop add push add jle add add push adc adc or or add adc adc sub add adc adc adc or add and add mov add mov add or adc adc pop or or add and add mov add mov add or adc adc sub lea add add add mov add outsl mov addl push outsl addb or or add or sub add adc adc gs or add and add adc adc sub add and add add pop and add add or inc add add push adc sub lea add add add inc add add addl or add or sub add sub add and add inc pop and add add push pop add add adc adc sub lea add add add inc add add addl or add or sub add adc adc sub lea add add add adc adc sub add adc adc das push add lea add add adc sub add add push sub mov or add push outsl push add or sub mov adc add pop outsl push add or push or orb add dec add add dec add add (bad) add jle add add (bad) orb add dec add add xor jb or jo jb or jo jb add mov add addb add inc add add mov add push sub add adc adc cmp add add data16 or and add add pop and add add or add or add dec add add push add add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or sub or add add dec add add ficompl jo sub add push incb mov add sub add sub add adc adc cmp add add jle add add and and pop inc add add add add add add addb add movsb add add sub mov daa add push jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub sub mov sub add jb or jo dec add or jle add add jb or jo sub add mov add outsl mov sub cmp add dec add or jle add add jb or jo sub add pop (bad) or add pop sbb add incb adc adc cmp (bad) ljmp mov add outsl mov or add push outsl push add or sub mov adc add pop outsl push add or add add pop push adc sbb incb adc adc sub sub mov daa add push sub add outsl push add or add jbe sbb incb adc and sbb push outsl mov sub add sub add outsl push add or add dec adc incb adc sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub jbe add outsl push add or add jns add outsl jp add add nop add add sub add add adc add add or add adc add sbb and pop orb add sbb sbb sub add orb add or sbb sub add add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or add add push add add sub add adc adc cmp add add sbb incb adc adc sub sub mov daa add push sub add outsl push add or add jbe sbb incb adc adc sub sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub jnp add outsl push add or add jns add outsl jp add add nop add add sub add add mov add outsl mov xchg add add cmp add add adc incb adc sub sbb push outsl mov daa add push sub add outsl push add or add jbe sbb incb adc sub mov sub add sub add outsl push add or add dec adc incb adc adc sub sub mov sub add sub add outsl push add or add adc incb adc adc sub sub mov sub inc add or add or add jns add outsl jp add add nop add add sub add add mov add outsl mov mov add add and sub add add mov add outsl mov daa add push sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub add sub add outsl push add or sub mov sub push add or add or sub add outsl jp add add mov add outsl mov mov add add sub add mov adc adc adc sub add xor mov add xor mov xchg or xor mov xchg popa add xor (bad) add and add add and add add pushf adc adc xor das les or add sub add adc pop add add adc jae add push or push add jb push add jb add mov add addb add inc add add mov add push sub add or cmp add push outsl lea add add outsl or outsl push add or add add push pop outsl push add or sbb or add or push jb push add jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or mov add push sub add or add or and add inc sub add pop and add add or or and add inc sub add pop and add add or or and add inc sub add pop and add add or or pop mov add or lcall sbb or sbb or add jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or mov add push sub add adc add (bad) add add pop and add inc sub add pop and add add or or and add inc sub add pop and add add or or and add inc sub add pop and add add or or pop mov add or lcall sbb or sbb or add jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or mov add push sub add adc add add pop and add inc sub add pop and add add or or and add inc sub add pop and add add or or and add inc sub add pop and add add or or pop mov add or lcall sbb or sbb or add jle add add jb or jo lea add add add adc adc insl add or fwait or jo lea add add adc insl add or mov add push sub add adc adc sub or and add inc sub add pop and add add or or and add inc sub add pop and add add or or and add inc sub add pop and add add or or pop mov add or lcall sbb or sbb or add adc or xor add add add add add add jb (bad) jo lea add add add popl add jb (bad) jo jno add mov sub add sub xor add add add add add or sub add add add incb or sub add add add xor add add add add add add add add adc add insl add add add adc incb lods add push jae add or add push scas add push jae add or add push scas add push jae add or jnp add add or add or pop outsl xor add or outsl xor add add add jnp add add or add or pop outsl xor add or outsl aaa add or add add xor add add pop add adc rolb add sub add or add or add add or add push add sub add or add add push sub add outsl xchg add or add add push sub add outsl dec add or add add push push outsl xchg add or add add push jb add jo add add pop sbb jae add or add or add add push sub add outsl inc add or add add push pop jo rolb add jae add or add or add add push jb (bad) jo inc add or add add push pop outsl dec add or add add push jb (bad) jo xchg add or add pop or or add or add push add or add or add and add and add add add or pop add or add pop add or outsl stos add push outsl pop add or add sub add add push sub add add push sub add add jb (bad) jo inc add or add sub pop sub add add jb (bad) jo add or add sub add add add add xor add add add add adc jle add add cltd add or sub push sub xor add add add add adc jle add add lcall push sub xor add add add add adc jle add add fwait add or sub push sub xor add add add add adc jle add add pushf add or sub push sub xor add add add add adc jle add add popf add or sub push sub xor add add add mov add sbb (bad) (bad) push or add outsl mov add or cmp add add add add incb or sub jle add add or add sub add or add or or lea add add movsl add or add or add or jae add or add add add or add sub add or test add add sub add sub fidiv add add sub and or add add stos add or add add add adc jb adc jo lea add add stos add or add or or push adc adc stos add or add or jle add add or add sub add or add or faddl add sub push sub add add add xor add pop add add adc add adc add sbb add sub add sub add or sub push sub add xor add add push add adc add add add or add sub xor add add add add adc rorb add add and add or add sub xor add add and add add sub sub push sub xor add add add add adc rorb add add and add or add sub xor add add adc add incb or sub sub add sub sub add sub add adc add add add add adc jle add or incb or sub sub add sub jle add or sub push sub add add add add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs and jae gs sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp jns je insl cs jb ja outsb addr16 imul jae gs cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs insl push jns je insl cs insb outsl bound imul cs jne je jb dec outsb outsw sub insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp jns je insl cs imul inc outsl jb jae inc js outsl jae sub popa je sub push jns je insl cs imul inc outsl jb jae and jb imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc in and dec xlat test sub xchg int3 mov mov mov movsb (bad) movb dec shrl (bad) cwtl mov xorl clc xchg cmp push mov mov inc dec xchg cmp (bad) xchg in pop xchg loopne notl lahf inc xchg xchg inc push pop lcall arpl mov dec sahf inc adc mov xchg mov (bad) repnz and inc test jecxz fildll into outsb cmp lods in fwait push and sahf (bad) mov or mov jns mov fildll subl sti mov pusha and and mov divb out loop mov pop or push sub mov dec cmpsl lods mov (bad) mov int3 cwtl dec mov fdivrs mov out imul mov out scas shr jbe fsubr (bad) fnop (bad) xor scas int3 lods fucom adc fimul loopew dec js add lret loop pushf mov in fdivl ds out mov call (bad) call inc jmp mov das std push lock and leave icebp lock pop repz sbb clc out push pushf stc add test cld mov das (bad) cld inc arpl or pop sbb (bad) mov add dec nop add pop or add add sbb add fs cld add mov jp or mov or pop orl clc out or loope or lds push sbb push jmp sahf xor mov daa (bad) adc ficom leave or adc xchg mov imul int push add push pop inc leave dec pop in push pop xchg sbb scas sbb in sbb les hlt in pop iret pop or inc fild add test cmp inc and mov adc cmpsb int3 icebp xor jge xor inc xor fdivrl bound cmp loopne cmp cmovbe outsl sbb ret cmp inc sub fildl mov inc into mov fild sub dec iret loope push xor mov push add jbe push xchg push fs pop push aad pop dec sets xor pop add add (bad) cs lds (bad) pusha inc or pusha inc addr16 pusha loope shll fwait movsb mov adc imul inc (bad) imul push outsb jecxz dec outsb test mov or and jae mov jae inc push jns push ja mov aam jp dec pop jnp cmp jnp xchg jnp std or adc add push add enter icebp add add or add add push add clc add add add mov pop add sbb add insl adc add add add mov push add loopne add cmp add sbbl add add fadds add dec add add mov add sub add pop or add push add push sbb add incb add mov add mov or add or add add add and add jmp add movlps add add cli adc add pop add or add jge add add add (bad) adc add add popf sbb add add add or add adc add add add adc add add inc add add sldt push adc add add add add cmp add sahf and add sbb add push add sti sbb add add repnz add (bad) sbb add or add push add pop and add pop add pop adc add rolb add add add add add pop add mov add ds add or add sbb add pop add daa push add adc add push or add adc add add add (bad) pop add arpl add adc add lds add std adc add das pop add xchg add add or add adc add add aam add push add add sldt aad add add add add add sbb add add std or add add add add jae add xor add in push add fwait or add sbb add sldt mov add cmp add inc and add add add dec pop add push add add or add adc add sbb add adc add cmc or add and add add jae add cli sbb add add jnp add xchg or add adc add push add mov add cmp add orb add pop add dec adc add adc add pushf pop add hlt adc add add mov push add add add bound add and add addl add loop add cmp add add sbb add push add sbb add bound add and add or add or add add mull add rcll add dec sbb add dec or add add scas push add sahf adc add add add add or add sbb add add clc and add and add add add add ficomp add mov add mov add popf sub add add add jae add add popa add insb add add add data16 add jae add add sbb add add jae add add ja inc add imul add sbb add add jae add jb imul imul lahf add add add add jae add add add popa add add add and je push add add add popa add add popa add insb add pop or add and je push add add add imul add or add add add jae add popa add add or add and je push add add outsb add jo push add inc add imul add and je push add add add jns dec add imul je adc add es je push add add add jns dec add jb add dec add outsl add sbb add xor js inc add add je xor add add popa add insb add add add data16 add jae sbb add push inc add inc add add je xor add add imul add or add add inc add add je xor add outsl add add imul jae mov inc add inc add add je xor add arpl js push add add add add cs add bound add add add add popa add insb add add add data16 add jae sub add sbb add add add add add imul add or add dec add bound add add add outsl add add imul jae lret or add dec add bound add add add add add popa add insb add add add data16 add jae push dec add bound add add add add add imul add or add dec add bound add add add add outsl add add imul jae pop or add dec add bound add add add add add popa add insb add add add data16 add jae movsb or add add bound add add add add add imul add or add bound add add add add outsl add add imul jae inc or add bound add add add add add popa add insb add add add data16 add jae loopne add sbb add bound add add add add add imul add push add and add add add add add outsl add add imul jae jg add xor add add add add add add popa add insb add add add data16 add jae sbb add sbb add bound add add add add add imul add sldt and add add add add add outsl add add imul jae mov dec add bound add add add add popa add insb add add add data16 add jae pop adc add add bound add add add add imul add adc add dec add bound add add add outsl add add imul jae notl add xor add add add add data16 jne insb add add add data16 add jae xchg adc add add bound add add add arpl imul add adc add dec add bound add add add add data16 add jae xor add xor add add add add add add popa add insb add add add data16 add jae rclb add sbb add bound add add add add add imul add adc add dec add bound add add add add outsl add add imul jae outsl adc add dec add bound add add add add add popa add insb add add add data16 add jae or add sbb add bound add add add add add imul add adc add dec add bound add add add add outsl add add imul jae stos adc add dec add bound add add add add add popa add insb add add add data16 add jae dec adc add bound add add add add add imul add adc add bound add add add add outsl add add imul jae out add xor add add add add add add popa add insb add add add data16 add jae test add sbb add bound add add add add add imul add pop add and add add add add add outsl add add imul jae and add cs add bound add add add add popa add insb add add add data16 add jae rclb add dec add bound add add add add imul add sbb add dec add bound add add add outsl add add imul jae pop sbb add dec add bound add add add add add popa add insb add add add data16 add jae cld sbb add add bound add add add add add imul add sbb add dec add bound add add add add outsl add add imul jae fwait sbb add dec add bound add add add add add popa add insb add add add data16 add jae cmp add sbb add bound add add add add add imul add sbb add dec add bound add add add add outsl add add imul jae xlat sbb add dec add bound add add add add add popa add insb add add add data16 add jae je add sbb add bound add add add add add imul add sbb add dec add bound add add add add outsl add add imul jae adc add dec add bound add add add add add popa add insb add add add data16 add jae mov add sbb add bound add add add add add imul add sbb add bound add add add add outsl add add imul jae dec sbb add bound add add add add popa add insb add add add data16 add jae in sbb add bound add add add add imul add push add and add add add add outsl add add imul jae mov add xor add add add add data16 jne insb add add add data16 add jae sub add sbb add bound add add add arpl imul add pop add and add add add add add data16 add jae (bad) pop add xor add add add add add add popa add insb add add add data16 add jae and add add bound add add add add add imul add and add dec add bound add add add add outsl add add imul jae add add xor add add add add add add popa add insb add add add data16 add jae mov dec add bound add add add add add imul add and add dec add bound add add add add outsl add add imul jae aas and add dec add bound add add add add add popa add insb add add add data16 add jae fsubl add sbb add bound add add add add add imul add and add dec add bound add add add add outsl add add imul jae jnp add xor add add add add add add popa add insb add add add data16 add jae sbb add add bound add add add add add imul add and add dec add bound add add add add outsl add add imul jae mov add cs add bound add add add add popa add insb add add add data16 add jae push and add bound add add add add imul add and add bound add add add outsl add add imul jae repz add bound add add add add add popa add insb add add add data16 add jae nop add sbb add bound add add add add add imul add daa add and add add add add add outsl add add imul jae das daa add xor add add add add add add popa add insb add add add data16 add jae int3 daa add sbb add bound add add add add add imul add sub add dec add bound add add add add outsl add add imul jae imul add dec add bound add add add add add popa add insb add add add data16 add jae or add sbb add bound add add add add add imul add sub add dec add bound add add add add outsl add add imul jae cmpsl sub add dec add bound add add add add add popa add insb add add add data16 add jae inc sub add add bound add add add add add imul add sub add dec add bound add add add add outsl add add imul jae jecxz add xor add add add add add popa add insb add add add data16 add jae subb add add bound add add add add imul add sub add dec add bound add add add outsl add add imul jae pop sub add dec add bound add add add data16 jne insb add add add data16 add jae mov dec add bound add add add arpl imul add sub add bound add add add add data16 add jae pop sub add bound add add add add add popa add insb add add add data16 add jae clc sub add bound add add add add add imul add add and add add add add add outsl add add imul jae xchg add xor add add add add add add popa add insb add add add data16 add jae xor add sbb add bound add add add add add imul add das add and add add add add add outsl add add imul jae shrl add xor add add add add add add popa add insb add add add data16 add jae jo add sbb add bound add add add add add imul add xor add dec add bound add add add add outsl add add imul jae rdtsc add xor add add add add add add popa add insb add add add data16 add jae lods xor add add bound add add add add add imul add xor add dec add bound add add add add outsl add add imul jae dec xor add dec add bound add add add add popa add insb add add add data16 add jae call dec add bound add add add add imul add xor add dec add bound add add add outsl add add imul jae xchg add xor add add add add add add popa add insb add add add data16 add jae and add sbb add bound add add add add add imul add xor add dec add bound add add add add outsl add add imul jae ret xor add dec add bound add add add add add popa add insb add add add data16 add jae pusha xor add bound add add add add add imul add xor add bound add add add add outsl add add imul jae pushl add bound add add add add add popa add insb add add add data16 add jae pushf add sbb add bound add add add add add imul add aaa add and add add add add add outsl add add imul jae cmp add xor add add add add add add popa add insb add add add data16 add jae fdivs add sbb add bound add add add add add imul add cmp add dec add bound add add add add outsl add add imul jae ja add xor add add add add add popa add insb add add add data16 add jae adc add sbb add bound add add add add imul add cmp add dec add bound add add add outsl add add imul jae mov add xor add add add add data16 jne insb add add add data16 add jae push cmp add add bound add add add arpl imul add cmp add dec add bound add add add add data16 add jae out cmp add dec add bound add add add add add popa add insb add add add data16 add jae mov add sbb add bound add add add add add imul add cmp add dec add bound add add add add outsl add add imul jae sub add dec add bound add add add add add popa add insb add add add data16 add jae enter sbb add bound add add add add add imul add cmp add bound add add add add outsl add add imul jae addr16 add bound add add add add add popa add insb add add add data16 add jae add add sbb add bound add add add add add imul add add and add add add add add outsl add add imul jae mov dec add bound add add add add add popa add insb add add add data16 add jae inc aas add sbb add bound add add add add add imul add aas add and add add add add add outsl add add imul jae fistpll add cs add bound add add add add popa add insb add add add data16 add jae jl add sbb add add add add add imul add inc add and add add add add outsl add add imul jae sbb add dec add bound add add add add add popa add insb add add add data16 add jae mov dec add bound add add add add add imul add inc add and add add add add add outsl add add imul jae push inc add xor add add add add add add popa add insb add add add data16 add jae hlt inc add sbb add bound add add add add add imul add inc add and add add add add add outsl add add imul jae xchg inc add xor add add add add add add popa add insb add add add data16 add jae xor sbb add bound add add add add add imul add inc add and add add add add add outsl add add imul jae iret inc add cs add bound add add add add popa add insb add add add data16 add jae insb inc add sbb add add add add add imul add inc add and add add add add outsl add add imul jae or add dec add bound add add add add popa add insb add add add data16 add jae test add sbb add add add add add imul add inc add and add add add add outsl add add imul jae inc inc add cs add bound add add add add popa add insb add add add data16 add jae in add sbb add add add add add imul add dec add and add add add add outsl add add imul jae orl cs add bound add add add add popa add insb add add add data16 add jae and add dec add bound add add add add imul add dec add and add add add add outsl add add imul jae mov push add arpl je jne jb add outsl add xor add add popa add insb add add add data16 add jae pop dec add and imul jne jb add outsl add xor add insl add add stc dec add and add arpl je jne jb add outsl add xor add add imul add push add sub imul jne jb add outsl add xor add outsl add add imul jae push push add cmp imul jne jb add outsl add xor xor add add popa add insb add add add data16 add jae mov add and add arpl je jne jb add outsl add xor xor add insl add add push push add es add arpl je jne jb add outsl add xor xor add add imul add add sub add arpl je jne jb add outsl add xor xor add outsl add add imul jae pcmpgtb add push add arpl je jne jb add outsl add xor add add popa add insb add add add data16 add jae lods add and imul jne jb add outsl add xor add insl add add dec add and add arpl je jne jb add outsl add xor add add imul add jo add push add arpl je jne jb add outsl add xor add outsl add add imul jae xor push add arpl je jne jb add outsl add xor add add popa add insb add add add data16 add jae (bad) jo add push add arpl je jne jb add outsl add xor add insl add add outsl jno add add arpl je jne jb add outsl add xor add add imul add jle add push add arpl je jne jb add outsl add xor add outsl add add imul jae xchg jle add push add arpl je jne jb add outsl add xor add add popa add insb add add add data16 add jae xor add push add arpl je jne jb add outsl add xor add insl add add iret jg add add arpl je jne jb add outsl add xor add add imul add std add sub imul jne jb add outsl add xor add outsl add add imul jae test add cmp imul jne jb add outsl add xor add data16 jne insb add add add data16 add jae inc incb add push add arpl je jne jb add outsl add xor add popa add gs incb add add arpl je jne jb add outsl add xor add arpl imul add or add push add arpl je jne jb add outsl add xor add add data16 add jae lock add push add arpl je jne jb add outsl add add add add popa add insb add add add data16 add jae lea add push add arpl je jne jb add outsl add add add insl add add sub add arpl je jne jb add outsl add add add add imul add sbb add push add arpl je jne jb add outsl add add add outsl add add imul jae mov push add arpl je jne jb add outsl add aaa add add add popa add insb add add add data16 add jae pop sbb add push add arpl je jne jb add outsl add aaa add add insl add add stc sbb add add arpl je jne jb add outsl add aaa add add add imul add sub add push add arpl je jne jb add outsl add aaa add add outsl add add imul jae pop sub add push add arpl je jne jb add outsl add cmp add add popa add insb add add add data16 add jae cmc sub add push add arpl je jne jb add outsl add cmp add insl add add xchg sub add add arpl je jne jb add outsl add cmp add add imul add add sub imul jne jb add outsl add cmp add outsl add add imul jae out add cmp imul jne jb add outsl add cmp add add popa add insb add add add data16 add jae mov add and imul jne jb add outsl add cmp add insl add add sub add and add arpl je jne jb add outsl add cmp add add imul add inc add sub imul jne jb add outsl add cmp add outsl add add imul jae fiadd add push add js je inc add js xor add add popa add insb add add add data16 add jae jnp add push push add js je inc add js xor add add imul add inc add and add js je inc add js xor add outsl add add imul jae sbb inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc jae gs cs jb ja outsb addr16 imul add push addr16 or add add add add add add inc add add add (bad) (bad) incl add add add add add add push jns je insl cs insb outsl bound imul cs jne je jb dec outsb outsw or add or pop imul outsb insb jns arpl jo jb dec outsb outsw or je outsb outsw pop outsb jne dec outsb outsw or popa je push imul or insb outsb fs jb insl pop fs je dec je insl or insb je jb dec inc push insl pop outsb popa insl adc jne gs jae jb jbe jb imul add add add and jae gs cs insb outsl bound imul cs outsl insl jo jb dec outsb outsw sbb gs cs insb outsl bound imul cs gs dec outsb outsw and gs cs insb outsl bound imul cs jne bound inc outsl jb popa je outsb outsw daa push jns je insl cs insb outsl bound imul cs popa je push imul popa je outsb outsw sbb gs cs insb outsl bound imul cs popa insb outsb fs jb or add add add or add add add add or add add jg add push add add add add push jns je insl cs insb outsl bound imul cs outsl insl jo jb dec outsb outsw add add push insl pop outsb popa insl or outsb xor dec inc dec inc pop arpl je jb or jb push gs imul or and jae gs cs insb outsl bound imul cs outsl jb push gs imul add add add add or add add gs cs insb outsl bound imul cs gs dec outsb outsw pop add add insl pop insb imul jb je jb insl pop imul outsb insb jns insl pop arpl je jb dec popa insl adc jae outsl insl inc jne je jb dec popa insl or outsb inc popa je dec je insl adc jne gs jae jb jbe jb imul outsb xor dec popa outsb addr16 inc add add add add or or push add add sub or add add add jg add add add add gs cs insb outsl bound imul cs jne bound inc outsl jb popa je outsb outsw and add adc insl bound inc jb jne push imul jb outsb arpl jb jne push imul jb outsb je jb jne push imul jae je jbe push imul popa je jbe push imul bound inc arpl popa insb push gs jb je jb outsb jne bound inc jb jne push gs jb je jb arpl jb outsb arpl jb jne push gs jb je jb arpl jb outsb arpl arpl popa insb push gs jb je jb arpl jb outsb arpl jns bound adc jae inc jne jb outsb arpl jns bound or outsb push jns bound push jo jae je jbe dec outsb imul push jns bound push outsb gs je jbe dec outsb imul push jns bound pop jo jb outsb je arpl popa insb push gs jb je jb jo jb outsb je jb jne push gs jb je jb jo jb outsb je jns bound push jo jb imul outsl insb or popa je jbe inc imul pop fs je dec je insl adc insl bound inc arpl popa insb inc imul jne jb outsb arpl arpl popa insb inc imul jne jb outsb arpl outsl jae je jbe push popa je gs pop arpl jb outsb arpl gs je jbe push popa je gs adc gs gs je jbe push popa je gs push jo jb outsb je outsl jae je jbe push popa je gs push jo jb outsb je gs je jbe push popa je gs adc gs outsb je arpl popa insb inc imul imul jae imul imul outsb insb jns insl pop jne gs jae jb jbe jb imul dec outsb jbe jb popa outsb je jbe insb imul jae inc jae jne bound pop jbe insb imul jae inc jae jne jb outsb arpl pop pop add add add add add add add add add add or or or or or or add add add or add or add add or add push or add add push or add add add or add add push add add or adc add add movsb or adc add add dec push adc add or imul push adc add or outsb imul or add add push add add and add loop mov sbb add add add add add add add add add add add add add add add add or add add add or add add or add add add or add add sbb add or add push sbb add add push sbb add add push sbb add add push sbb add add push sbb xor push add add xor add ss and add add push and add add push and add add or add add add popa insl add or add add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs imul inc outsl jb jae and jb imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp and jae gs cs imul inc outsl jb jae inc js outsl jae sub popa je add add add popa je pop add add add add add lsl add and add add add add or add add add dec add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or inc add add add adc add add les pop add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb pop ljmp (bad) dec (bad) and mov movsb jbe data16 fisttp jo in aas shrb cwtl jnp loope mov rcrb mov aam ja dec fs in push je and xor push xchg inc aad inc jmp test pop hlt scas int3 cld gs add std xchg mov shl push (bad) cld or sbb mov in add fcomps std add add test insl lcall into mov cmp add pop loope and int enter pop pop adc mov pop ret mov rcl xchg and cmp imul cltd lods and cli cmc test loop incl adc mov shrl jno outsb mov cld mov mov sbb imul nop jp push psllq add lock xchg imul pushf mov or divl xchg jg xchg mov aaa ret sti sub fcompl lea mov lock clc mov jl shrl ds dec gs push push sahf loop ret inc push add pop jns fmul stos push jp aas jmp cmpsl dec adc popf add inc lcall pop cwtl in ljmp popl out (bad) daa imul ret sbb mov and cmp sub das xchg lock popf push out jmp dec cmp add pop mov pop test push dec iret sbb rolb add clc outsl pop test mov lea cmc mov xchg in (bad) loopne dec inc ret jle mov push lock xchg sti cmp fsubrs js mov dec icebp ja sub cmc in mov hlt int (bad) aad aas mov dec (bad) push (bad) pop pusha dec les xor arpl mov mov shl aad or data16 pusha fbstp ret xchg or fstps mov add cs fwait add jle jb fstps (bad) pop fwait stos xchg fdivs jae icebp xchg test cs (bad) sbb es leave (bad) (bad) xchg loopne xchg and add (bad) ds scas je xlat pop sbb jae ret xor cmpsl mov mov pop pop pop fsubrl clc addr16 cmp or and movsb add ljmp lahf ds stos pop imul lret in sub sarb outsb aaa jle xchg jg (bad) cmp nop xor loope push pushf imulb lahf mov jne cltd in in daa adc shlb xor icebp pop aaa les test lock xchg pop lock popa push xchg sahf int jb jb mov aam jecxz pop loop jl loop dec bound push and into push pshufw rolb mov lcall repz fwait ret pop pop (bad) and test mov push inc cmpsl imul dec imul aas cwtl pop xchg lods call inc aam cld dec loope or or sub (bad) fucomi adc addr16 (bad) imul sbb pop sar push gs movsb jmp repnz inc jns inc sbb nop push js xor das sti sub mov jbe lock aas ss imul sub (bad) push jnp mov add in pop cmp sbbl (bad) and cmp or push dec mov int imul add gs jb xor jne gs pop fsubr xchg cmpsb ljmp fs jns fldl pop icebp mov icebp xor push or push rcrb sbb fdivrp push loop and jle xchg pop aad mov test pop mov sbb xchg movb les mov hlt lea xlat xchg lcall iret flds mov mov ret pop lcall out aas sub push add iret or jecxz sahf sysret daa cmpsl push add ljmp cmp cld dec mov hlt test pop dec mov adc and mov sub int3 sbb jo jne jle hlt lods movups inc lock subl loopne push out dec mov and inc repnz and fwait mov cmp js int imul icebp scas test jge adc dec jge add mov jecxz aam mov jecxz and je fucomp (bad) xor std imul xor leave loop and add xlat mov or jbe mov movsl jecxz sbb js lds adc inc mov (bad) sbb cmp out jb ds mov jmp pop sub bound mov or jb pop mov ret std fdiv mov sbb ja mov arpl scas imul xchg movsl jne jb cmpsl mov pop mov stos rolb sahf subl jae aam nop jp sbb push pop (bad) mov adc push lock mov icebp adc sub dec cmp or pop xchg xor push jnp in adc movsb xchg and cmpsl aam enter mov int icebp in das in data16 mov mov or clc stos cmp xor insb mov gs std cltd xchg xchg cld iret lods cmp movsl clc xchg incl inc cltd mov test inc call add adc mov repz test sub adc jg (bad) or aas push sub inc (bad) adc mov mov jecxz cli pop daa incl mov push popa ds leave adc mov inc jl fucomi xchg arpl bound add cli push push in adc add mov xchg (bad) adc jp inc test dec hlt adc inc les ret and cld sub xor jecxz push sti test test aas test jg (bad) fyl2x jge lock mov mulb repz out ds sbb (bad) iret pop mov lock xchg daa cltd or xor pusha (bad) ss jmp js ljmp scas mov pop repz mov add popf mov jno hlt add adc push inc adc push inc adc push loop in push sub dec add add mov fidivr fdivr add lock int3 in pop cwtl mov xchg dec leave xor inc or push add push add push pop (bad) (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add sbb add (bad) fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or cmp and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb ret stos iret pop push mov mov fldcw jb outsl out inc aas mov addr16 cs jbe jno xchg mov in std ss push mov jnp xchg sti mov sbb subb outsb push dec adc lcall incl mov sub je sub (bad) hlt or pop mov fnstenv imul imul rol loopne inc mov jno pop test xor mov pusha add lcall mov mov cmp cmp sahf ja lock sar or pop ljmp jge xor out insl shll loope or xor lret inc sub fbstp mov gs mov (bad) pop test nop cmp addr16 sbb add mov ljmp dec push fsubrs imull notl gs std add add rcrb mov add dec add incl mov aad test inc inc cmc cmp lods divb scas and jbe xlat mov test scas das scas arpl jbe jle xchg in push stc sbb sbb xchg xor jl mov incb rorb loopne push lahf mov stos imul jno incl push scas mov cmp imul inc and adc mov ds aad in in pop stc cmpsl cmp neg int3 jecxz loope inc rorl setnp (bad) cli cmc mov scas mov (bad) jbe dec jae (bad) mov scas cmp dec jnp and js xlat mov jge cmp sti add push dec pop fnstenv cmp imul adc mov inc sar pop push cli std mov aam loop and addr16 xlat scas lret xor xchg (bad) idivb movsl outsl xor stos pushf xor pushf jmp dec jae cmp cmpsl icebp xchg xor pop xchg mov mulb repnz pop outsl negb push rcr jae lds test cmpsb popf cltd mov mov rol jno pop ljmp pop mov or movsl pushf sub insb mov xor aam daa mov mov cld inc cmp into pop add cmp stc or cli stc dec and int xor (bad) mov cltd inc sbb mov movsb xchg and add cmpsl es je pusha aas enter mov test and pushf jb mov iret jmp and push dec or jae sub gs (bad) mov aaa or cmp enter lock adc push jp push xchg mov jae insl js sbb inc dec incl sarb adc xor jbe sub sbb add mov lds sub mov jp xor cmp add dec cmp hlt stos mov pop scas sbb or xchg pop int3 adc insl dec inc dec fnstsw sub pusha stos dec push dec cmp imul adc fisttpll enter add hlt pop dec mul mov pop pop xor aad ss push sbb aam or iret test jp cld dec cwtl mov in loopne mov jg inc (bad) fwait and or outsb pop xchg and sbb in out cmp jg cmpl (bad) mov lcall das fldl (bad) daa aaa iret jnp negl imul and int3 jno add mov jle popa andl sarb cwtl xor fistpl lods jp mov mov iret inc sub xchg dec inc xchg jp jb mov imul ja cmp push jge jae lret ljmp push aad fidivrl mov dec pop jge addr16 cmp mov outsb cli cwtl cli test (bad) je jno data16 mov inc call pop fucompp xlat push div cmp inc xor dec pop or pop pop inc sarb arpl and data16 gs jmp push js inc imul insl insl sbb push or pop js fldt (bad) xor loop lret pop shrl xor push ja mull jno or add call stc mov sbb sbb je cmp arpl xlat (bad) cld push push pop cltd xor mov pop repnz push xchg sbb push outsl inc sub mov dec scas inc mov nop inc addr16 cmp bound xor push stos xchg fcoms pop loope das outsl xor sub (bad) mov pop les pop les mov or mov sbb inc out dec pop jne lret adc pop lds gs inc dec adc incb stos (bad) fcomip mov fcomps sti ffree int cmpsl cmpsb dec cmp jmp xchg push dec xlat outsb xor push push dec outsb les nop jno sub loop imul (bad) sarl push stc pop jecxz adc dec out bnd out inc or dec fucomip aaa jne adc ljmp popa xchg gs aam mov or mov xlat ret jp aaa adc ret xorb mov sbb jb xlat and lea jg mov xchg push xchg sub daa sub or mov (bad) push lock push mov xlat dec push jp xor dec gs cmp mov mov in xor rcrb cmpsl fdivrs push pop outsl mov mov pop in and xlat sahf incl ss xor cmp out dec jbe pop mov sbb out repnz jae int3 cmpsb dec xor dec sbb orb movsb mov stos ja push mov pop imul iret sahf shrb mov scas (bad) push lods mov cmp les outsl cmpsl sbb mov pop jg sub sub mov pop test js mov push mov lahf stc jmp xchg gs aad push adc mov fnstcw xor mov lahf push mov roll add incl jmp mov loope cmp jmp movsb sbb push jno cwtl lods cmp lret mov lea sub adc movl fidiv jge cmpsb jne xchg and mov or add mov jae cmp out pop pop fidiv cmc pop xor cmp jmp push inc cli lcall lcall not jl mov incl cmp mov arpl scas xchg push fsubs ret jg mov bnd lds mov scas pusha repz xlat ret adc inc loope arpl rorl inc sti or push aad cmp aas pop jmp das (bad) aam arpl mov (bad) aas fiadd mov cmp daa clc mov out aam mov addr16 or push out push rcr enter push lcall mov int3 arpl ror pop sbb jp call fstpt push pop dec cmp test jle mov aaa mov mov xchg cli inc jmp or repnz ret rorl xchg push xchg (bad) enter out pushf loopne pop xlat cltd out xor mov add jecxz (bad) push (bad) incl sarl add mov sbb fimull sti dec mov add iret ret decb mov icebp cmp pop paddsb (bad) (bad) jns pusha (bad) iret pop lods inc jno (bad) xor cli mov cli jl iret cltd jns les icebp jecxz stc out repz lea aam fisub xchg cld xchg adc xor push xchg mov clc lcall aad lods cmpsl lret mov rol pop mov std pushf adc mov aas ret fs mov mov popa push sub fnstsw (bad) mov mov pop (bad) add ret cmp adc mov xchg pop xchg insl stc std out pop adc mov scas mov add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add inc or add (bad) fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or cmp insb add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb addl scas fildll xchg loope data16 (bad) in clc fwait repz jp pop xor js hlt mov xor rcrl (bad) push mov test xor cs mov outsl mov xchg sar push xchg scas dec aaa push clc xchg xchg sbb jle mov push xchg js in std cs (bad) scas pop xor pop adc repz dec repnz in cmp lods add mov add adc std mov fwait jno,pt rorl les cvtps2pd mov xor das push dec mov jg add cld sub or dec (bad) clc pop dec fdivrl cmpb dec cmp call (bad) mov clc rcll sbb push mov bound outsb loop adc fimull jo call sbb pop jmp sbb sub loope out or dec add xchg add xor xchg xchg test jl test (bad) ja stos mov call into in cmp outsb push sbb cmp pusha push leave (bad) jecxz (bad) (bad) lea icebp lds pop inc sub inc xor pop stos fcomps pop cmpsb rolb loop push in sub push mul es outsl jg lret lret pop adc scas cmp jmp inc jns fsubs cmp lcall lcall lahf inc cmovp fwait mov shrl movsb mov push mov jecxz vmread sbb mov mov ret movq leave mov pop pop js push lock xchg xlat mov cltd imul adc loop cmp (bad) jns add mov fist pop imul xrelease aas nop (bad) mull scas cld inc icebp xchg and mov jge dec push inc popf push (bad) in jns incb (bad) push xchg dec pop sbb movhps loope xchg test xchg faddl pop jnp add and clc push (bad) imulb mov stos pop push imul xchg stos and incl imul add pop pop lea mov mov mov mov mov das jbe aad out dec xor inc add test pop cmp fistl mov sbb cmp xor xorb repnz push insl aaa imulb lods cmc mov dec int (bad) into arpl mov mov dec xchg xor fisttp xchg call pop cmp inc addl (bad) mov insl sub (bad) icebp (bad) js jg,pt lds xchg (bad) das outsl cmpsl sbb inc rclb adcl xchg mov push push mov add sarl push push js dec lahf loope mov iret movsl dec daa es add outsb js (bad) icebp sbb fwait mov mov inc xchg shll and repz aas push call outsl mov jecxz lods imul loop mov (bad) out ja jae or jmp jbe sbb xchg lods aad out shrl in das push mov inc mov in push psraw insl loope lahf pop js imul cltd push mov out mov add fidivr clc xlat dec mov (bad) loopne out inc jle jnp int3 (bad) or test shl or repz mov je or aam pop (bad) fidivr mov push pop dec int3 test or adc les or lcall (bad) jg repz out inc dec push cmp add mov loop mov xchg cmp inc lds sbb or adc add outsb scas jecxz sbb cmpsb test adc xchg cmp addl iret aad fnstenv push sub pop sbb jp cmc iret xchg lahf test insl inc pop mov cmc fnstenv jmp mov and sbb push sbb gs xchg fcmovnb dec jecxz adc fcmovu mov ja fwait fwait js push fisubl test dec inc sub inc insb loopne int (bad) imul imul xchg bound add adc clc add jge test int out outsl adc cmpsb lods (bad) mov cltd movsl add xchg or addr16 test jb pop loopne lock icebp cltd (bad) negb hlt fisttpl mov jb nop xor (bad) sub xchg lret fbstp daa rorl icebp movsl scas fnstsw inc xchg dec xchg loope mov stos pushf dec ss test jo add add hlt fild js loop leave mov lret dec push mov mov dec stos cmp jb cmp lea jp vunpcklps pop and insl pop inc mov jbe aaa fisubr and push ljmp ja add jne inc outsl adc dec and xchg (bad) movsl cltd (bad) mov cltd lock cmp mov mov jbe sbbl clc push inc fstpl out faddl int inc lock jg jmp mov sar add icebp out (bad) cmc jno test (bad) mov push push mov out cmpsb jns lods les imul fisubrl mov loop dec (bad) mov clc pushf cli (bad) leave cmc and xor push rclb xor pop sbb sub and stc pop std in xor sbbl sti ret pop (bad) adc or divb fiadd cltd bswap in out dec loope outsl dec inc scas pop mov ficomp xlat xchg (bad) loop arpl sub lret jle orl pop mov fdivrp ret mov loope mov xchg ljmp push aaa xchg inc ds and out lods lods xchg jle add test jl (bad) cld das jge negb shll cli adc cmp mov dec or imull daa daa mov decb dec mov inc jns xchg lret lret sub lock adc sahf dec scas or fsubr mov aad fisttp jmp mov fisttpll scas xor inc stc cmc dec adc fisttp repnz ds fs adc xor push mov ret jp iret inc xchg loop cmp imul push fldcw lret pop std and xchg je cmp mov push add jns fnstsw push maskmovq mull adc lods xchg (bad) (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add orl jmp add dec inc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or cmp and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb adc sbb test daa rclb sahf sbb ja das fbstp mov mov xchg imul or mov add daa xchg adc push dec mov add adc mov (bad) sub sbb int3 cmp jmp cmp add lahf adc out roll inc mov imul jo adc jne pop imul pop mov add repz xchg lock mov out jg ljmp adc fwait cmp and sbb fdivl in ucomiss xchg out (bad) mov sti arpl neg dec incl test loopne xor out fistpl (bad) aas add inc lock (bad) aaa sbb and mov fdiv ss push mov mov inc sbb daa std or std std mov jg push loope mov jle data16 out sarb xor dec sbb ds xor lahf fs insl or popf mov in add jge popf add jecxz fisub mov and aaa jmp push add arpl sbb and pop fcoml gs shrb sub imul subl (bad) sub insl idivl lods fildl dec out lods (bad) sbb adc xor mov loope lds xchg ret fildll out fisubrl sub outsb sbb xchg adcl jne or fisubrl pop push push sbbl mov pop outsl inc dec xor adc jge push push jl cmp dec stc mov push aad testl rorl sub cmpsl and pop scas jbe jg mov jb xor lcall out je pop pop sbb scas push leave movsb movsb mov pop (bad) mov fstpt cmp sahf dec out in inc repnz int3 (bad) xchg dec cmp fcmovne icebp inc mov jmp idivb stc mov cld imul mov mov xchg ret push popf mov add dec daa mov imul mov movzwl dec lcall mov icebp lahf loop mov jge (bad) cmp scas imul icebp xlat jno dec cmp xchg jns ljmp dec cmp jns popf add sbb mov xlat clc mov loope mov mov gs fstl in xchg sahf and dec movsl jbe adc in insl add in das idivb in pop push in repnz dec out (bad) cltd in outsb out mov xor ja mov pop jl and jle (bad) ljmp fsts xchg rorb sqrtps (bad) cmp pop outsb xlat push lahf pop mov out out lods xchg xor cs add or push push inc or pop push jns stos incl add stos out push js (bad) ficom sub js mov mov adc xchg jno popw add andb cmp aas mov pop lock scas outsl sub mov mov adc (bad) icebp xchg repnz clc cmpsl (bad) cmp aaa cmpl mov mov and out adc pop push xchg daa subl int loop sbb sbb push leave add aam or out push jp movsb jl shr ds cld insw adc scas add jmp xchg or xchg jo push and or add outsl sbb add enter out lahf std ja incl jne fstpt das outsl popf xlat mov cmc (bad) lock lahf lock fbstp aas fidivrl (bad) cld jg std popf js mov sub cld sbb int loope xchg push mov dec into faddp repnz add jno mov dec pop add or sarb or movsb mov loop imul cmp pusha cmp sbb add and fiaddl in add mov incl mov xlat decb cmp sbb push shrl test mov gs inc rcr imul dec std mov imul sub (bad) cwtl dec shlb pusha dec pop xchg scas push push lret lds jp lea or les popa and and mov jne pop adc mov in xlat push xor in icebp faddl ret lea pop (bad) jno add fiaddl mov stc jecxz shrl iret imull pusha push cwtl ds mov stos aas pop fwait inc xchg inc test mov imul ja and inc mov pushf mov add lods jg clc mov dec sti dec xchg stos (bad) negl mov xchg in mov into movsb std or cmp or dec xchg push shrb add sbb xchg shl sahf js push cmp movsb clc mov enter rclb xor mov add add outsl outsl pop hlt or ss loop sub jb mov movsb and and mov arpl shr addps out cmc fisttp int cli jge cmpsb jmp (bad) rolb mov inc lret enter (bad) jb (bad) aad cmp jl icebp push push mov fimul sbb cmp mov jb sub imul lahf mov adc sub call sbb aam push dec sbb mov repnz or leave mov inc ret push inc inc and mov adc xchg push icebp insb jmp ret mov jmp mov mov sub fsubrs xchg jae (bad) cld pop insl jecxz push loope (bad) out pop (bad) leave out push xchg xor testl insb mov add mov dec das add jecxz lea cmp (bad) xor inc es gs push mov orl mov (bad) xchg leave inc push xor jg clc daa icebp pop push mov movzwl (bad) push cmp sbb sub adc sbb cmp pop loope xor mov and negb cmp bound mov cmp mov repnz mov sti ja add js iret call clc mov ja popf hlt adc test cmp xchg xchg shl sbb data16 inc int3 pop adc out (bad) jae lahf lea xchg (bad) pop and xchg push mov sub or pushf (bad) sbb (bad) dec bound cli outsl xchg js incl push add out sub into (bad) mov pop pop cwtl lds dec sbb frstor mov sbb dec hlt mov sub pop pop pop inc sub sub mov mov les push lock (bad) mov cmp adc xchg or div sbb mov mov das lds xor inc stos dec arpl jp jecxz lahf testl mov (bad) mov xchg and out mov inc (bad) dec fwait into mov mov dec push mov lock les mov xchg fwait dec jbe adc fisttpll lahf push sub cld movsl mov (bad) sub inc (bad) sub mov lock (bad) cld int fisttp dec (bad) sti or cli and aas dec add jmp ret mov xor ljmp mov hlt arpl mov loope mov add or mov mov jl add imul popa inc sbb sbb xchg int (bad) out callw bound push push sbb mov xlat mov int fstps add dec stc jb mov jl icebp je sbb aad lret add clc xchg aam in push jg out cs xchg dec fstpl sub icebp xor (bad) sbb insb incl loope aam incl (bad) int and add lret std pop jecxz mov cmp jle jne leave (bad) sub gs sbb testb int orb mov or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor add add fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or testb add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add incl pop rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb xchg rorb mov mov sub mov sub mov sub mov sub mov sub mov sub mov sub add (bad) jecxz sbbb js mov cmp add push ja jp (bad) jp jne fucom fimul inc aaa js js pop push dec fisubr fisubr add push ja aaa mov jne fucom (bad) loop sbb mov push dec fidivr add push ja jp (bad) jp jne fucom fimul inc aaa js popf inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add dec fbstp push push inc add inc add inc add inc add inc add loop ret enter lods jnp pop jmp add fadds mul push inc loope (bad) xchg mov shll inc inc mov fistl loope nop pushf cmpsl insb pop roll mov push je cmp dec jmp lock test push imul (bad) pop xchg ds lods push je dec lret ljmp push sub and mov or cmp mov inc sub mov sub xchg movsl test ficomp pop xchg orb mov orb mov orb mov orb mov orb mov orb mov orb mov orb aas xchg add (bad) scas pop mov and (bad) std out xor sub jmp outsb aad cs out mov ljmp pop fmulp imul cmp cmp lret dec std popf and frndint dec imulb and cmpxchg lret sub cmp add lahf fidivrl ds mov jmp incl sub inc jecxz push (bad) mov inc adc dec jo fisttpl add out or dec jge cs test (bad) xor inc push inc std inc jp incl roll outsl adc js lret gs mov lret jg ljmp sub scas jle ss sbb lcall imul mov push dec lock outsl scas push jbe pop xchg sbb jg in xchg add lcall jmp lahf clc dec jl (bad) dec ja outsl mov out (bad) jbe repz es lods mov add xchg xchg pop xor push adc data16 add push pop xor ret out cli adc lret incl (bad) rolb jne outsl (bad) jg lcall test stc aas (bad) xor jp push xchg push xlat lahf push hlt sti (bad) loope test jb int3 pop sbb dec enter loopne add jle fisttpl test xchg divb xor sub jg dec cmpsl lock push (bad) mov sub cmc jnp shrb pop rol arpl es jp mov fidivrl jl repnz daa fwait (bad) xchg jge sarl jp jecxz (bad) cmc sbb jmp sub push in and enter cmp sbb popl mov lret pop mov cltd cltd pop fsts (bad) lea jmp add cmp fisubr push pushf (bad) cmp ds cmc scas pop mov loop rcll outsb bound in and hlt fsubl xor (bad) jl lock cmp adc pop incl addr16 and ficom aaa cmp ficoml lock in test stc ds inc sub (bad) dec inc mov sub inc test push xchg add jle mov push lods jle cmp aas inc aad jg lret and sbb push cld call lock call incl fyl2x inc aas nop sub outsb repnz cld imul rclb jnp mov xor jl in inc aaa push cwtl cmc out sub jl cmp sbb jne cmp data16 enter mov inc sti inc andl in andl xor ffreep popl xor lds cmpl xor xor imul adc fs pop push shl loopne in (bad) insl and mov xchg xor jns pop pop clc mov mov daa mov jmp lahf int3 mov addr16 add sahf sbb lahf outsb xor xchg pop and adc jo fbld pop cltd mov sub jmp stos jmp jns (bad) fisttpl insb test mulb test (bad) pop pop test lea (bad) mov mov xlat imulb sub push loop push add add lcall test mov xor mov xchg in outsb lret out jnp popa dec jge mov cmc scas (bad) loop shr add push push ficoml daa xchg cmp outsl sub dec fnstsw jns or iret sbb cmc lods lahf test repnz je cli ljmp sub in cs sub xchg sub daa out fstps xchg mov loop or icebp push fwait movsl jns dec fldt mov jbe fnstcw jno jecxz mov incl loope pop jmp jg jge in jge lret sub sti cmp xchg inc shrl xlat lret xchg sbb sbb enter dec std movsl aas in loope cli jmp repnz add fcmovnb das cld and jg sbb incl sahf mov cld xor dec mov in mov and pop and mov add pop lods jge loop jmp add jne cltd push jp inc out ds dec out mov pop sub or add xlat xchg pop mov mov daa xchg negb xor repnz sbb imul jp fmull add or cmovb shrl loope sar clc pop push push mov shl mov xchg (bad) dec aaa cmp fidivr mov pop cli fwait mov fldt in mov pop dec test popa stos pop fcmovb int movsb pop push mov pushf add cmp into cmpsl test jp mov test int movsl rolb mov inc sbb aaa jg aaa incl mov mov pop sbb out insl pop out scas and xchg jno dec lcall jg js sbb dec cmp cs stos and add mov cmp jle loop or jae jl insb sahf ja add in sbb scas mov fstl mov xchg adc jg insb sbbl insl cltd mov add stos into pop lret mov dec cld lea push js jmp shrl sub xchg pop and xchg jge les lock mov xlat and cli incl test fstp pop out pop imul sbb xor popf push ret lcall fmull cmp hlt gs sbb pop and pop push cld jl insl mov xchg scas les mov sbb push adc stc scas dec shll scas push shlb xchg jo push imul mov das fisttpl call out push xlat scas pop jle push mov aaa push es add insb pop cli xor pop or dec or xchg (bad) (bad) popa xchg ljmp or lahf jp clc rcr daa incl test mov mov arpl sti fstpt pop jnp or pop pop ds xchg jae out popa cmp sbb jb and xor push fwait jecxz add and adc movsb adcl mov sbb pop lods loopne fstl shll outsb mov jnp jge jo in sbb add (bad) aam push mov mov xchg push repnz stos adc stc (bad) xor lds dec jle xchg mov cmp mov pop fbstp mov arpl jns mov loop cmpsb clc adc sub mov inc xchg cmp (bad) into cmp pop addr16 mov push mov fimull sbb push (bad) mov inc cs sti pop ja aas ja sahf in mov mov mov jnp (bad) sub push jne mov mov mov repnz mov jno sbb (bad) aad movsl rorl mov push and cltd push (bad) jo and jg pop adc dec rcrl xchg nop or pop lcall movsl ffree arpl sub test dec hlt add out cmp lods test sbb push push mov bound mov inc xchg lcall push icebp inc mov xchg fcompl lahf leave push or mov cmp and jmp xor cmp xchg mov cld les sbb rclb cld add out dec xchg jnp pop outsl repnz cld mov add shr pop rcll xchg mov fcmovb add scas xorl fisubrl outsb call push push arpl xchg (bad) cmp jnp xchg push fistpl jbe cmpsb js ret lcall pop push add enter std inc jl lods imul je xor jne jno in jp lods jo mov inc loopne or ret sti sbb sti push cltd sti incl sub (bad) pushf in (bad) pop cmc iret xlat mov xchg mov (bad) xchg leave dec inc popa scas dec shr sbb mov mov imul int3 fisubl dec icebp sbb jns pop rorl adc jmp adc stos lahf hlt sub add fild mov out pop mov dec sbb std inc (bad) jb inc dec sub (bad) push add push add (bad) sti xor inc cmpsb dec push add jbe ds repz sub and mov mov pushf std (bad) fnsave fildll and cmpsb or rclb jecxz push jg stc addl xchg xchg xchg inc or lahf icebp xor xchg cld sub std mov mov incl insl mov (bad) (bad) imul jno clc or xchg sbb out dec insl leave cmp fstp mov fisubl js jmp incl mov mov cld pop testb add xor sarl fsubrl add lea inc mov mov adc mov out outsb mov cld xor add incl pop std andl dec mov adc cld pop jg dec incl mov add pop neg mov (bad) std popf (bad) std jno push xchg push aad rep incl testl add fstl or int3 out adc nop gs popl fidivl lret enter push (bad) mov add jp sti cmp jbe pop push icebp adc xchg (bad) mov loopne cli adc pop ffreep incl mov int dec mov stc or cmp adc fnstenv add lcall push mov cmpsb clc lea dec mov fcomip and (bad) js ret ficompl lods pop fadd jne cmp push aam gs xlat inc loopne mov out mov movsl jne cmpsl mov pop pop dec sub cmp mov dec fimull ret lock clc ss fmuls add daa cmp jg sub cli rolb pushf jl clc cmp add fild sti push fildl fwait testl jnp mov sahf pop icebp or jge es pusha cmp push push les xor incl and pop sti or add loope cmp loope jg jmp adc cmp stc test enter fild add pop or ret scas mov pop push cmp fs mov dec (bad) das mov add int sub jbe fcmovb jae jno push rcrb mov cld mov (bad) jge incb stc sbb mov add popl mov scas pop xchg xor orb sbb adc jge cmp ds mov mov mov cmp popf in pushf adc movl dec or shll dec in ret cmp clc call lock sbb fldt stos inc jle (bad) sub push out xchg jg aas lock (bad) stos std mov lods mov ret into cmc (bad) (bad) xor xchg mov adc dec lock jnp mov ja jmp incl inc mov call mov dec cld ja add iret testb ds incl cmc pusha lahf mov jp cld xor dec mov in mov cld sub add out (bad) cmc aam jg xor pop repnz addr16 out mov add sbbl lds mov sub stc scas sub jg mov add arpl or pushf movsb test cmp jmp sbb pop cmp pop ljmp sahf pop push aas daa aas cmp add pushf pop pop arpl mov rcl insl sti pop ficompl out xor jl incl test ret idiv and fs push cltd sti (bad) mov fwait jbe leave idivl cmc sarb xor add (bad) add ret loopne xchg and mov scas jl jp cmpb (bad) cld cli js (bad) std fnop pop loopw sbbb (bad) clc outsl push aad add es outsb repz pusha fstpt sbb inc mov das pop fisubrl leave stos (bad) loop insb dec fldcw pop mov and sbb jae lcall add jg jl roll fsubr add mov jg inc imul ficom pop push incl lods mov daa dec notl pop pop fidivr in aas pop xor adc sub mov push fcomps fs mov sti aas in pop addr16 lds fchs and xchg repnz in inc dec test test mov or add clc imul push aad cmc or mov nop incl mov pop (bad) cmpsb cmpb icebp pop test add adc lds adc (bad) cltd stos (bad) incl push xor xchg push mov dec (bad) cmp mov cld and or cmc push insl rcrb dec jg mov sbb adc pop (bad) div mov xchg jmp in dec cld jne add loopne jecxz jl (bad) jne mov je cwtl and fnsave mov xor out or jg pop incl loop mov cld pop testb stc xor mov (bad) in pop push cltd in sub sbb pop cmovp scas (bad) out mov xor jnp mull shl repnz cld sub ds jg sub mov cli xor xchg ret mov lods cmp andl adc add mov mov mov xchg mov ficompl std aas push pop push pop pop into mov mov dec cmp add mov xlat sub pop push loopne mov lea dec aam mov in loop int mov out sbb cmp inc lock sarl pop pop leave js or data16 incl mov call xor hlt sbb lcall mov mov add jo cmp je rorl and mov sbb (bad) lock in mov out mov cld adc imul cmpl and scas add mov push pop cmp inc ljmp sbb daa fbstp (bad) pop jg lcall jmp xor roll jge (bad) incl (bad) push xchg cld jnp jg mov arpl lods rorb fwait (bad) into (bad) jmp add add scas incl divb jle loope push inc jbe pop pop sub maskmovq mull testb push xchg (bad) or pop sbb das xchg pusha cwtl (bad) ljmp lods das (bad) ret pop push sahf movsl loop rorl and inc sbb loop (bad) clc or push icebp es jmp fs and stc imul and cmc stc aas icebp ljmp iret andl adc fiaddl add dec incl jns cmp inc sbb mov clc xlat les data16 xor and xchg je push ss xchg pushf mov cld push lock or mov and add dec push mov push pop cmp fdivp out std or incl fildll negb icebp mov out mov sub add mov ds aas icebp loope push sub scas cmp pop pop incl inc mov adc push xchg insb mov insb jmp lods mov cmpb movsb clc imul dec fiaddl dec inc fldcw imul jecxz add jb lock enter xlat stos incl call sub int lea lahf mov data16 mov pop pop (bad) pop fistpl adc (bad) popa aam pop sti dec jg aas ret mov xchg inc loopne mov mov xor (bad) aad cld jns out mov push incb sbb incl and setle ljmp aas std (bad) lods aas negb clc iret decb incl in adc call sti cmpsb xchg xchg mov call incb jae mov scas pushf sub incl fldcw (bad) mov mov cld xchg aas adc add push jmp add jnp in fnstenv clc imul notl cltd xor hlt add jecxz stc sub incl mov xlat decb jecxz lock mov fnstenv dec cs jb push fcoml loop inc add pop rclb dec mov ret loop mov cltd dec mov adc xchg cmpsl repnz pop aam cmp movsb push and (bad) stos adcl ret sub aad xor or inc adc push or sub jae sbb fwait xlat mov loop xchg pop mov pushf xchg fcoms add test lock (bad) leave xchg cld mov push cld dec mov test mov add xchg fwait xlat popl test mov xlat mov scas dec icebp (bad) lea jbe hlt mov and mov sub js push jmp popa ja mov pop cltd push and (bad) ljmp mov and push jbe pop dec scas loope xchg jns mov jmp test xchg fistpll or push mov out cmc stos cmp (bad) js (bad) jae dec mov sarb icebp pop push popa outsl or push push or fdivl push jnp jo jae mov lahf scas fbld xchg or jp into mov pop imul out popf insl test or cmp stos inc jno in jae iret lret sbb or jbe mov pop lret (bad) jno pop (bad) roll pop pop pop dec aad mov mov xchg stc icebp lds or je cmc lods lahf mov sub out cs xor dec lods mov pushf test pusha add daa repz js mov and addr16 loopne xchg iret loope lahf and out adc xor push jecxz scas outsl lea jle aaa inc test leave aas jbe fild mov sbb dec adc sbb adc add hlt xchg in aaa and je (bad) mov rcll cld inc icebp adc pop mov inc shrl adc dec dec ss add mov aam pusha sti jp jns sti dec sbb std xor pop inc push add mov sbb and fildl fidivrl loop shlb xchg out fstpt (bad) mov push lcall dec mov ret pop ficoml cmpsl dec xchg and dec leave outsl mov cmp pop fnop jg rcll add and insl cmp cmp lock xchg cld cmp cmpsb mov lds clc cld movb icebp leave incl adc icebp das les fnstsw push xchg rorb int3 xchg push push dec sti mov add add xchg test dec ret sti fild js ljmp ret push fbstp (bad) (bad) add ljmp jne mov shr pushf sub into mov sti out clc push (bad) pop and mov and jl cmp add (bad) pushf popf mov cs adc outsb xchg or out lret enter cld mov popw (bad) aad pop add in push add sbb mov fs push jle cli bound push hlt aas sti js add adc addl mov xchg sti inc clc jb insl mov jmp push in lret incl (bad) pop mov iret pop sub lds pop adc ret mov testl jmp push icebp jmp xchg dec clc xchg loope dec pop cmc xchg xchg icebp into mov scas jo push mov inc pop mov mov es in xor push pop sbb (bad) pop (bad) (bad) scas (bad) out subl lds mov aad dec cli test icebp scas push sarl add inc cmp sub dec xor cmp outsl stc cmp aas in pusha mov inc sbb mov add xor dec (bad) das sti add incl mov iret fdivp mov out incl push mov dec loopne xchg popa sub (bad) jae xor lret aam fmull push cld rolb (bad) aam rcrb incl mov incl (bad) xlat sbb cmp push xchg loopne or lods arpl movsb cmp fnstenv jae add xchg in loop add xlat leave xchg (bad) (bad) sti and decb imul jae int3 mov out int pop lock ds add incl (bad) rolb int cmc pop cld fstpt sarb popf jns (bad) out test cmp mov nop in lahf data16 (bad) cmp iret adc incl testl add fimul aad inc std in mov jg push mov jmp cmpsl push scas mov adc aas mov (bad) xor fcomip cmp and rolb xchg repnz push push shr aas xorl mov jmp jle sbb fldt xlat pop push clc adc fiaddl xchg out ljmp lea jne daa add cmc addr16 cltd adc loopne std mov sub dec xchg and repnz push cld sub jg sahf add std scas pop jg sub lds sti fmul stc mov scas xor iret icebp es notl ds and sbb lret rclb dec sbb neg jge add aas addr16 stc repnz fadds std add jecxz mov xchg sbbl (bad) sbb cmp sti jg,pt aaa xchg inc adc add sub imul pop push push cwtl scas insl movsb pop bound or add cmc pop adc pop scas xor stos xchg mov test pop dec push lret xchg sbb adc mov leave test pop cltd or push xlat decb icebp push scas mov push nop insb sahf and dec repnz push in inc out pop (bad) jmp pop fcmovnu sbb pop mov fmulp je hlt das out mov jl lock shrl pop fstpl loope lock mov ljmp push dec jecxz jl dec push bound cmp lock (bad) incb xlat cs mov loopne and repnz stos popa nop push in cmp lods pop lea mov add xchg lcall pusha rep cltd adc test jg jne mov add ljmp rorl cmp ficoml ret pop pusha icebp xor sbb pop dec push add leave scas fcomip je add popa pop aas hlt push push mov sub ds sub dec and in stos xor cmc sti jmp cmp ds lahf cli sub add popl std jne incl rcrb mov jl stos fcomp pop imul xchg int3 adcl das lock decb incl scas mov cli or (bad) in and add push mov add incl mov clc cmpb adcl mov cvtpi2ps add push icebp lret iret jp das (bad) lcall incl ret pop pop xor and mov iret sbb jmp js les xlat repnz (bad) xor adc rcrl jbe fdivrs loopne mov adc add inc xor cmp push (bad) sar sub and adc cmc (bad) repnz fnop imul add mov add push mov lock mov push repz pop (bad) xor stos (bad) jno add xor out ss aad jecxz or push lods int3 (bad) out (bad) jb mov fwait inc movsl jns jge test iret pop push mov cs xchg push aam loope in dec js sub (bad) scas popf push add mov add mov add dec and lods mov icebp enter les jge stos xor (bad) int3 inc sub or cltd cmp add push add push add push add push add push add push add push add push add je (bad) aaa fnsave adc adc inc adc (bad) enter xchg pop and push push leave jge test jno pop pop dec repz daa ljmp mov (bad) (bad) and popf push push imul and sbb mov (bad) cmpsl leave leave aas cli adc jmp sub sarb push (bad) push outsl mov pushf jne imul sbb xchg adcl movsl xchg push pop or outsl call dec test adc cmp insl aas pop mov or pop jae pop cs cmp stos cltd hlt cmp push xchg out push cmp data16 insb xchg fstps into lods xlat nop dec jle mov test push fwait jp movsb shl aad mov push xchg xchg ds hlt xor in rcrl leave jmp into stos js dec hlt lods popa mov mov push push xor sti xlat lods pop pop sub or mov xchg cmp dec push mov adc adc jno add stos add into cmp out mov sbb pop push pop aas test cmpl (bad) repz add test pop push negl and ret shll rcll dec jbe pop movsl bound or mov lcall (bad) pop cmp sub outsb lods fisubl add scas inc les dec or cmp iret push mov in xchg sub xor lds mov mov jb ss incl xchg pop push pop pop jmp gs mov mov ljmp call jae in xchg inc pusha adc (bad) mov imul loopne dec fwait cmp and lds sbb push bound mov scas in scas gs outsb push dec enter (bad) scas scas in andb call lock and add scas dec lret repz (bad) mov xlat ds push daa nop fldl js cmp push mov jns aas mov pop ret ret inc xchg dec adc jns cmp test pop lods (bad) (bad) jns fistpl mov enter cmp bound push inc mov sub push mov cmc test sub mov mov add fdivrl sbb daa sub sub sub vpaddw call loope or int3 aad sub add sub add sub add sub add sub add sub add sub add sub add mov mov mov orb cmp and xor (bad) fisttp mov push (bad) dec and push cmc sub jne psrad cmp subl in test cmp lods pop xchg lret pop mov outsl xchg mov repnz cmp lods cmovl pop ja add fisubrl pop stos popa pop in cwtl fistl sbb or dec push ficomp push sbbb mov mov dec (bad) outsl insl cmc adc loop movhlps in and int3 mov scas jmp testl das sarb mov aaa fbld mov sub (bad) jo icebp cld jmp fisttp jl mov mov xor loopne rcrl pop xchg (bad) mov push sub adc lods xor or lods jge pop mov test les add sbb dec fisttpll idivl sub psubusw ja mov cmp outsb and jne or sbb pop sub adc scas sub jl jnp mov sbb push xchg mov je hlt scas dec (bad) xor xor sub repz jg js jns push fnstsw lcall in daa mov std cmp fwait arpl push cltd xchg mov inc ret mov sbb mov lcall (bad) mov cmp imul fcmovu es pop nop adc arpl jnp or ljmp jmp lock pop jle push cmp pop cli sbb test int dec lcall mov pop or jne dec in pop mov ret pop pop mov scas and dec gs cli and mov xchg cmp dec les ds and jno stc aad fcmovnb xor stos cmp jo push aam rcrb std sub (bad) jo mov mov nop fwait sbb sub int3 xchg add loop xchg ret ja or xor fldcw pop push push and adc sbb mov mov dec adc jno sti ja movsb push cwtl in sbb cli mov jae in cmp stos fcmovb and ja ss and sub xchg pop shrb mov cwtl dec movsl jg xchg lods lods adc xor add push stc mov jnp mov sbb shrb fstpl push xor dec jp subl enter cmp repnz push jge cmp mov add bound pop add mov inc adc inc add sti ret jmp aam out shrd add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add dec fbstp push push inc add inc add das lods out add (bad) ret incb rcl inc (bad) cmovns jb mov xchg push mov mov xchg sbb cmc loopne push aas std push sarb push aad aaa ss daa push daa fimull cmp add stc mov mov out aad dec inc and adc jb cmp daa add lgs lret gs pop push in les jnp insl inc sbb mov mov xlat cmp je (bad) mov jne cmpsb xchg and movsl jge lfs out cmpsl aas push (bad) mov mov pinsrw jo mov add push cmp cmp outsl xor fs cltd and sub dec jnp fidiv xchg mulb mov xchg jns inc jae out sarb mov fiaddl mov pushf arpl (bad) ficomp test dec mov or mov icebp cmc lods stos scas adc cmpsl (bad) adc imul rolb inc sarb xchg pop mov push dec fsubrp jp cli in sub mov and xchg cmp es jbe aam inc mov sub lcall imul adc xor outsl aam out adc jb mov sti ds fwait out mov push xor xchg mov insl scas test cmp cmp mov push divb inc mov (bad) jae movb and ds adc and or jbe jne in scas fs pop sbb out add and repz aas xchg jo imul add cmp or mov lods mov fidivrl stos sbb das nop int3 and cmp pop ficompl mov sub cmp pop pushf sbb lock sbb js cli mov icebp dec mov hlt lret dec cmp and icebp in iret sbb mov sub dec aam dec jae xor cld out test xchg add mov lods xlat inc sahf insl pusha pop pop or and jge cmp push fisttpll inc lock xchg repnz xor scas es xchg scas xor in jl test jecxz and ss leave pop jecxz pop in jmp cwtl mov push inc jb push inc adc mov push bsf mov add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add jge inc adc adc push inc adc push rclb mov xchg dec mov add aas js pop jmp cmp mov jb dec push sahf xor jns cmp add adc jae and sub mov in ret (bad) rcll pop cmp and in xchg lret push lcall and into call xchg fsubp popf mov test (bad) push xor ljmp (bad) dec repnz ret test cmp xchg push push sbb push cmp jne cwtl ss repz ffreep xor xchg movsl cmpsb (bad) ljmp imul loope cld jge popa js dec gs into loope xchg or dec daa cmpsl sbb adc push inc fxch jecxz xor out lahf lret movups (bad) mov data16 lret (bad) adc mov push imul xchg scas int3 stos inc cltd jmp rol stos pop mov add repz sbb sar stos pop js outsl out mov sbb in (bad) repnz bound aam js and push cmp in je mov insl push jp loop pop xchg cli sahf clc jecxz test fst sub cli pop outsb xor es out add outsb repnz push incl les jae push in fbld jno pop (bad) movl nop add sbb shlb dec das out and aaa enter out stc rcll lea dec and mov loope aam pushaw add jbe pushf out rcl stos arpl mov and lret pop movsb or and xor lods lret int dec or xchg aaa jno sub out xchg and daa add push cmp sub sub adc sub add jp fcoml sub push jge push xchg (bad) into mov fwait je mov and inc jmp xchg sti dec sbb int3 fildl cmc test fcmovb mov jo add incl fs or sbb int insl arpl movsb nop cwtl rcr hlt sar push mov cltd mov repnz mov (bad) and hlt fsub xchg mov sbb inc mov movsb add push add inc ds aam add adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc push inc adc add inc adc add adc sub mov sub mov sub mov sub mov sub mov sub mov sub out lcall mov mov add push (bad) xchg mov fnop mov xchg insb push xor push pop sbb dec mov lcall loopne iret cmp js imulb xchg xchg mov pop rsm lcall jecxz jmp outsb movsl jne or insb out insb adc into jbe out or add in push pop hlt stos mov push (bad) mov jne andl mov in in mov push loop mov jg pop test xor adc add sub add pop sub mov mov push andl mov mov repz stc inc inc stc jo cmp jae push jnp (bad) (bad) loope or scas out mov imul push mov pop inc mov cmpsb out ljmp mov mov cs pop loope lock pop add repz shld inc add shrl lahf int3 dec movsb ss cmp out push fistl jg pop in push mov cmp and arpl iret jne mov movsb fcoml adc fs incl pop rcrb pop push in xor cmpsl push sahf incl inc xchg ja jmp sub push das sub or in jge xor aam pop jne xor cli or jb leave cmp movsb (bad) push (bad) (bad) cmp fwait xchg cmc sub sahf jbe outsb and push iret rorl cmp mov adc push add mov dec push test mov test inc mov push insb movsl or movsl movsb sub imul mov adc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add push adcb inc adc inc xor sub orb mov orb mov orb mov orb mov orb mov orb mov cmpsb xchg xchg mov mov mov sub mov sub out dec lcall fs xor movsb int repz ds cltd mov leave xor mov add adc push inc adc mov lcallw pop lods cmp es add lods cld inc loop cmp mov dec mov mov aad pop jg je movsb fstpt sbb xchg jno ss iret inc pop xor lea aas scas pop ljmp repnz jl stos pop or xchg nop pop adc test jns sbb sub dec sub mov imul sub adc and xor (bad) outsb imul mov xlat lea or inc add cmpsb xor gs or push clc mov aas mov pushf loope adc add push add push add push add push add push add push add push add push add push add push pusha adc inc dec add inc adc add mov add mov add mov add mov add mov add mov add mov add or cmp shrb sub loopne aam dec push sbb shrl out sub sub and dec (bad) cmp xchg (bad) enter xchg sub push cmp dec shrb rorl pop jle js lcall add lcall test xlat test push cmp loopne inc pop mov adc cld pop adc mov adc mov sub int es inc and mov mov add sub add sub add sub shrb mov add adc add test adcb dec shr mov push push cs mov sub sub sub mov mov add mov add shlb les loop jle add (bad) jb sub cltd data16 pop sub dec ret cmp aad push dec sti ret or lret repz daa mov test dec dec dec lods cwtl call cmp aad jnp lods ja pop mov mov and shrl add sub insb fs add (bad) sub imul arpl enter push std inc jge xchg pop pop cs xor scas inc gs js dec mov incl cmpsb lods sub (bad) repnz push iret (bad) push ds hlt outsb mov pop mov jno hlt xor sbb int arpl dec stos sbb in push movsb or pop clc jno push jle add inc mov lea and inc loopne cmpsl push test test out xchg dec stos add mov sahf push ret movsb fstpl jg jns sbb mov mov pandn push movsb push xchg stos or in loopne push push inc and imulb aam repnz jnp mov pop sar adc push cltd jno stos dec dec shll dec shl imul add movsl push mov leave sub add or pop in cmp insl cmp mov (bad) repz jge (bad) test jo ja adc mov dec addr16 add add adc inc (bad) mov mov add sub add sub push add sub mov push inc adc add inc add sub add sub int mov cmp xchg outsb sub add push cmpsb cmp repnz sbb dec cld sub dec dec (bad) test jne lea ds and pop call in push cmp xor movsb mov dec or std sub inc inc push inc dec push xchg or cmp push xor pusha pop xchg jp mov jb lods pop fsubs imul adc inc and inc adc add mov add sub xchg adc pop push icebp xchg daa add mov movsl push add push fidivr das adc mov insl arpl bound (bad) jp xchg add lret add in out xchg jl dec and jle int je mov fisubl cmp jl stos leave movsb sahf xor (bad) (bad) cmc stos jecxz fstpl adc jp icebp add adc (bad) aad pop movsl pushw cmp (bad) arpl adc ja add add fcmovnb mov adc pop xchg nop ljmp push mov push cmp pop xor outsb mov gs sub test push (bad) jecxz push aad jmp (bad) adc lret insb lea std inc inc (bad) (bad) iret xor pop pop cmp xchg mov adc mov push ret and xchg aas xchg arpl stos pop inc add adc into bound add sahf aam and adc movsb xchg add adc dec pop ss test push push cmp jae sub mov sbb ffree paddd psubb push (bad) out hlt cmp or arpl out pop leave mov mov scas arpl pop xchg adc out dec stos mov test mov notl in pop aaa iret cmp or mov mov pop push les testl repz mov std les pop push ds add xchg inc and out and ss push std (bad) sbb cmp jp mov pop mov sarb cltd pop pushf ds sub ds sub dec arpl insb mov lcall inc roll or mov mov add sub lds push xchg inc sub mov lds inc add mov aam xchg sbb xor (bad) incl jmp imul inc push lods dec inc xor cld icebp dec fdivrl cmp inc add inc adc add mov mov add add sbb lods mov mov mov dec test scas sbb aad rcrl inc sbb mov push fcmovu es mov lcall adc add adc arpl shll (bad) cmc push xor or sub cmp mov stos das xchg inc lods je or movsb mov int test dec mov cmc push ficom pop sbb fsubrl test dec dec js add jecxz pop jmp push fadd bound sbb inc sub mov sub lcall sahf xchg jl inc cmc movsl (bad) aam sahf mov dec mov stos xchg add push (bad) pop scas cwtl fstpl xlat fidivrl repz adcl push jl cwtl pop pop (bad) push mov push xchg inc lds aaa xor push out sub in push xchg push and push push xor fistl cmp int3 inc push add rcrb sbb push dec inc jae lea push xlat adc or ja arpl jb fcoml cmc daa mov outsb js cld dec incl addr16 xor xchg inc cli lcall icebp mov jecxz jmp out and sub or jne sbb push jo arpl incl lea dec push mov ror mov add hlt loop ja jle pop ficoml hlt outsb xchg or cmp dec adc push mov mov jae imul int cwtl dec pop pop dec addr16 cmpsl mov nop fsubl mov aaa outsb andb add movsb sbb hlt mov lds fnop push sub xor dec push cmp jnp add cmp inc sbb mov adc adc sysenter push es inc add sub orb mov inc push add fsubs push jnp (bad) cltd cmpsb movsl ror cmp push ror push xchg sbb fisubr and sti ljmp or or call pop and pmulhuw std push (bad) int sub pop add sbb stos xchg and add xor paddusw or xor mov scas mov (bad) outsb cmc int jb inc jnp ficomp mov push mov push sub sbb inc adc add push add push add push add push mov push sbb fcmovnu adc xor pop enter in enter push mov mov cwtl sbb xchg sbb mov gs push pop ret pop mov cmp sbb pop mov mov add adc std testl sub lds pop lcall lds popf lods jae aam ds add xchg (bad) ljmp jnp daa cmp mov jno xchg mov xchg out pop or jno or and jbe mov jmp aam cs cmp push imul xor mov pop or leave in pop mov inc arpl inc xchg fsubrs mov fiadd mulb (bad) xchg mov movsb je (bad) adc insb lcall sub xchg in or fstl and fcomps and clc (bad) xchg movsb pop test pop sbb movsl cmp (bad) aad jb test sahf stos push add cmp inc lret mov out (bad) mov mov push repz push popf js cld mov in jnp mov data16 jno lret pop pop (bad) lahf mov pushf rclb ss xor xlat out lcall loop inc dec cmp aam lret jbe mov aad dec ljmp std sub lods in lret stos imul sub and adc jae out xchg jb daa scas pop cmpsb icebp add or cld imul or xor loop cmp adc imul and sub cmp movsb mov sarl add mov mov cmp mov and jp push push pop rcl xor orb mov cltd fiaddl mov mov push pusha fcompl add push dec inc and dec fsubrs loop add imul jmp jne mov (bad) fcmovu int3 popf push aam pop gs adc xor data16 ret je lret adc sbb inc icebp push push cwtl cmp add cld fsubrs push cwtl in (bad) sub fcoml fdivrs dec sub xchg pop dec mov gs aad cli insl fistp stos xor cmpl mov movsb aas jbe mov push mov mov sub mov sub mov sub mov mov mov push cltd mov lcall in add xlat inc push cmpsb xchg gs sbb int inc xor sub push arpl xchg fwait adc subb incl pslld mov mov arpl hlt stos add mov aas popa cli sbb pop notl aam arpl push fsubrl pop enter pop enter jae fidivrl pusha pop mov jne out and xchg daa xchg inc push jle (bad) (bad) or mov xor ja push pop xor xor movsb push push hlt ljmp jp or inc sbb dec (bad) xor xor repz stos dec scas cmp in inc int outsb add mov js lds fwait cmp add jnp negl outsl adc sbb (bad) push sub adc mov int xchg fisttpl movsl jl push hlt or test sbb sub dec lahf sub shll add mov jge stos mov xor imul imul mov adc je popf les js xchg add add pop pop in lods mov bound aaa add fcmovnu pop pop fldt incl daa fisubrl daa cwtl fadds mov adc dec shrb mov and push daa pop mov sub xchg repz iret pop call add outsb and adc pop fcomps inc (bad) fdivs jnp je rcrb sub mov mov je push mov movsl jl mov gs or popf insb das es orl ljmp imul and std lods (bad) int fstp (bad) ficoml (bad) (bad) mov lret out and sub lea aas sbb push add into inc inc insb (bad) jne cmp push xor xor leave fsubrl int mov sbb lods pop mov mov shrb pop mov imul in shl fiaddl into or mov mov cmpsb mov jecxz div cmpsb mov xor outsl lahf cmp inc xor push inc xchg out cmp pop jp xor std sub add pop rcl or xor inc pop jo push sub cld fisttpl (bad) fmull sub (bad) xor jle mov lret iret and inc cmp and sub rorb push jno in add lahf idivb mov enter aas or or cmp mov cld cwtl sbb test sbb sub jle js stos int3 or cmp cmp (bad) das pop jmp cs mov out jmp fwait divl cmp or sahf cmc test pop sbb push cmp test push xchg in or mov in sub sub mov sub mov sub mov dec lds jmp sbb fwait cmp xchg push daa add je inc fisubrl cmpsb xchg sub cmpsl imul aam jmp enter lods jecxz mov test jecxz (bad) mov cmp rcl lock pavgw xlat fisttpll push inc lahf or pop cmp aam or (bad) xor adc cmp in push imul shr data16 jae push mov arpl in fiaddl add mov pop repnz jmp mov or adc inc jae cmp in ror pop fcom jne movsl xchg adc out mov std push incl test cmpsl dec movsl or jo jno mov test out sub jecxz lods lods and dec rol pop pop fist adc shlb incl (bad) lods inc loope sbb cs jg addr16 sub adc jbe add int dec stos pop dec fldcw jge aad pop (bad) mov mov pop lcall mov add inc repz (bad) mov loop jl iret cmp cld dec clc shll jmp imul fsubs fwait pop into stos mov and jns add repz outsb xchg aam mov jae sbb (bad) mov (bad) (bad) stos sub xor cmp inc adc ds mov sbb call sbb (bad) mov adc push int xchg xchg (bad) mov adc daa xor mov jnp mov mov dec cmp adc or (bad) push mov xchg std ljmp mov pop cmp dec xchg sub repz cmpsb xchg sbb jecxz jae xchg lds adc dec int3 xor mov aaa xor mov fcomp ret add jg xor inc lds push fdivp push fs pop rcl mov sbb sbb and adc push push enter daa ds lods and insb jb int pushf xchg imul xchg mov lds cmp jae ret lret mov sahf unpcklps cmp push in rorb pop lods xor xor popa xor into fistp adc fs sbb xor movsb repz stos push xor sahf out jnp pop enter inc dec shll mov xor leave incl jmp dec loope outsl in mov or in fisttp sbb mov sbb shr push fwait jno insl dec push loop scas and pop xchg (bad) movsl fs (bad) xchg mov pop cmp push subl ja mov xlat lods dec test pop mov inc push out inc inc int3 rcll iret or xor jg rcl insb lcall xor push imul xor (bad) out outsb add jne mov pop loope mov daa mov incl jmp aas subl adc mov popa in jecxz outsb jo outsl add inc pop lock lahf gs ror es jb test mov aam add push and xchg xlat ja (bad) jp (bad) mov daa cltd daa dec dec dec pop subl loope adc jb std mov out aam imul or pop pop out lahf adc insl push lahf add pop cmp frstor fwait gs (bad) aam dec popa and inc incl lods (bad) int insl outsl xchg in xchg dec dec lods adc sbb push popa popf add inc enter ficompl ja rorb stos shlb add mov push mov ja adc xorb cmp in sbb lods xor mov mov jo jmp xchg mov xchg in inc push jno movsb pusha sub jg rclb shr leave mov pop jecxz jbe jge pop aaa lods je lea in lods cmp sbb scas push aam inc sahf sub mov fstl (bad) mov movsb xor mov add mov add mov add imul pop xor cmp adc and jecxz lods fucomp pop call call sub fidivrl dec outsl ret test xor in jle lods test movsb mov push dec sbb test mov or push imul add repnz enter loop xor mov divl xor test arpl lds stos les cmp push mov and add xor sbb fisubrl std sarb out fstpl jne pop jge cmc cwtl cli sahf fsubp mov lret movsl jmp xor cmpsl push and popf and sbb mov mov push push (bad) xor pop test add mov cli loop xlat sbb scas sub je push cmp and sti ftst push mov mov in in adc addr16 pop dec or cwtl pushf mov lds adc xor sbb fisub dec adc mov in hlt stos in mov (bad) xor pusha insl int3 or sub aad insl rcrb pop push xor sub (bad) sarb jo adc push push mov lds inc fstpl mov push adc or inc movsl jns mov and nop imul dec fstp add mov lahf lcall push mov lcall rcl lods xchg div push shr jg into pop push mov xor scas mov sar inc mov in push adc (bad) xor imul push cmc (bad) les stc (bad) mov jbe mov cmpsb xchg xor movsl sub dec push daa int3 add pop pop jne jb mov jns and xor mov inc iret adc sti mov arpl pminsw lds dec inc sbb jb pop xlat or mov jnp jo shrb mov xor imul cmpsl sbb lds popa test cmp fcom cltd adc push add sub bound mov add mov dec pop xchg jb stc jmp imul lahf inc imull lcall lods push ja xor inc fldcw push nop nopl testb ss outsl push and jns imul adc xor or xor out pop mov dec push mov rcll jge outsl jp mov add lahf sbb out cmc imull xchg orl movsl dec insb mov mov iret pop lea leave std mov iret aas dec repz daa mov add push (bad) fstl jnp dec int3 or push add fucomi cmp ss divl lods aam ds nop jp (bad) mov sub add (bad) sbb outsb data16 pop fstl push xchg loop cltd and nop mov movsb popa nop jp test add mov inc pop andb fisubrl pop adc or cli push xor loopne lretw (bad) push push mov jecxz mov cwtl lahf mov pop cmpsb mov sti dec leave movsb movsl lret jno and popa inc adc add push add push add push add push add push add push add mov push dec inc shlb int pushf popf or out push mov add push cmp cmpsb test mov leave adc jl cli or push fcom xor push xchg push mov push push into sub mov xchg dec push add aas jnp ja pusha xchg out dec addl lods xchg dec rorl xchg outsb in fwait icebp push test outsl sub (bad) fidivr jmp sbb test and not mov mov xor ret push popf push setnp (bad) xchg fisub xchg rolb push sbb push mov xchg sbbl inc and add push push cli aam mov (bad) or sahf sub enter xlat jl nop pop cwtl xchg xchg mov cmp add in cmp add divl pop and sahf dec dec arpl fwait subl and (bad) mov push (bad) jae lea jbe (bad) cwtl mov push (bad) xor push mov xchg mov mov pop xchg push roll sbb mov stos or int3 mov enter stc xlat and test xchg icebp mov inc ret outsl sub cld imul pop dec into mov iret out xchg out (bad) (bad) xor pop cmp mov aam inc sbb mov mov inc or xchg fistp xchg xor pop cs xacquire movsb pop xor movb jns or xchg mov pop pop roll out popa insl incl test jb mov add scas or (bad) and lea (bad) pop mov xor (bad) sar push lods lret dec rclb jle rcll lahf out arpl sub xchg fwait lods push cmp pop je movl into sub dec and popl test jecxz lods movsb orl sbb mov mov mov fildl xor jo mov cmp lods sub xor fldl2t pop mov adc jno lods imul sbb pop mov dec or or test mov jbe mov rcrb push andl cltd pop (bad) js mov inc add mov enter dec jbe jmp ret xor dec iret cmp adc mov icebp fsub nop loopne mov nop push fs push pop cmp (bad) jo jecxz mov jmp inc in jp xchg stos ret jno and (bad) xchg scas jmp inc mov sbb jmp mov rcl outsl popa jle xchg mov jmp push in pushf sbb jb mull jecxz jge arpl fisttpll add lods adc movsb shr scas xchg js jo sahf mov push mov aaa das mov (bad) jmp xchg in cmpsl lods je enter mov imul imul xor jae popf mov mov lcall xchg cli xlat pop ss and pop aas int3 inc out rclb mov push cld sbb dec rcll call jmp xlat out je dec aad cmp jp mov xchg mov rcrb dec sbb pop insl adc push dec mov adc adc inc add inc add inc add inc add inc add inc add inc add inc and push fimul jno pop and and jo sahf add mov lret add jmp xor xchg add mov stos fisttpll push mov js,pn dec imul add mov dec mov jns mov cmp xchg test out xchg sub inc or sarb enter xor pop test mov fdivrl shrb scas (bad) arpl out movsl dec adc test jne jno jo jge sarb dec mov aas out sar mov dec inc nop dec out (bad) cmc scas lcall adc add xor mov inc and cmp adc subl jne fadd mov adc (bad) hlt shrl jp push cwtl in mov das test lods flds (bad) mov imul mov and je dec fidivrl loopne dec repz push mov pop mov roll nop out adc pop lods adc xor sub sub add xchg dec mov mov mov (bad) leave int pop dec imul sbb fsub inc sbb imull fidivr mov sub ds dec mov dec xchg dec pop mov popa and mov jnp push jnp mov (bad) mov jge sbb xor mov mov jmp fildll stos out hlt stos rcr mov xchg mov mov repz cmc dec insl repz sahf mov sbb ror (bad) xchg (bad) xchg pop lods outsl jno dec lret adc cltd das xchg lret cwtl (bad) or pop in incl cmc ljmp xor mov (bad) bound cmc imulb cmp repnz enter mov repnz stos mov les imul push pop insl (bad) js leave mov and (bad) xchg add outsb xchg fcoml movsb xor sub mov leave xchg dec push movsb jbe sub jbe inc add adc mov inc cmpsl rclb ds adc add jmp mov fchs jae stos (bad) push adc cmp arpl (bad) xchg pop hlt adc outsb ficomp (bad) pushf cmp fst sbb sub push mov repnz stc shll ja int3 pop push aas or imul fsubrs in outsb jmp mov jae mov xchg pop stos popl cmpsb lods mov lock mov outsb pusha pusha std dec leave std push arpl lods aad sub sbb (bad) ret xor sti dec fsubl and ds imul push dec gs iret mov jle push leave (bad) xor or mov fnstsw ret aaa test jae loopne push jnp (bad) cmp fldenv sbb adc inc xor sub orb mov orb mov orb mov nop add cmpsb insl and call into imul mov push xchg mov mov (bad) mov fstps lahf xor pop movsl push xor fcompl mov int sbb cld xor pop aas jbe outsb stos dec fwait push repz ficoml inc bound adc fistpll adc repz add push ret incl lods pop mov sarb fwait push add (bad) stos and pop ror test mov adc arpl dec out inc sbb mov cld push imul jo pop dec lret pop mov dec push test sahf cmp push mov ds pushf aad lods dec mov int data16 mov stos ss cmp lods jnp (bad) loopne outsb fincstp test jb (bad) stos (bad) imul repz pop jle int xchg pop sahf dec (bad) fwait mov jo cltd mov adc ss or jo nop or jp in jp jmp ljmp cmp mov (bad) mov xlat inc movsl int3 mov pop lods or aad jl imul sub stc xchg mov out push pop (bad) (bad) add push lahf loope ja cltd and aad mov inc cmp shrb mov inc cmp addr16 jg (bad) repz arpl loop in jae adc mov into in enter dec inc xor and aaa sub push dec enter cli or mov movb cmc lods mov or maxps scas or jne dec out loopne ret pop scas add dec mov push aaa insl jp xor lock pop add or lock dec bound outsb out in (bad) mov outsl xor sub fbld outsl pop push jle sbbl sub dec sub adc sbb scas fsubl xchg sub nop test mov arpl push (bad) cmc scas mov mov call pop pushf push clc cltd xor lods xor dec jp test mov pop (bad) mov push cmp pop mov cli aad out ret je push out cmpsl xor (bad) sub pop cwtl mov dec push stc push ss xchg ja inc rclb push mov push cmp data16 xor xchg push cmp inc stc fiadd aad je addr16 mov out mov stos (bad) jae or addr16 adc xor or stos idiv mov mov pop jne xchg sbb adc cmc movsb ja push pop mov xchg das push or shl sahf mov push shrb mov mov mov add mov add mov add mov add adc sub mull and sbb imul xchg cld call push push push pop jle sub sahf xchg dec jbe jmp push cmp (bad) jbe mov mov fstpt popa iret pop rcll vorpd aas pop jae pushf (bad) icebp test sbb jmp mov scas fimull xor hlt jecxz jmp mov sbbl call aas pop push jnp cld jmp lcall xchg dec idivl push pop rep sbb cmp ja shrl add pop aam movsb outsb dec inc test shr out push jae lcall mov fisttpl jp lds insl add leave lds lret jne xchg cmp in mov in push pop sbb test fs push in outsb aas nop cmpsl incl ret mov mov xchg loop lahf inc stc push in aas fnstsw xchg jbe ret mov cmp (bad) enter aas outsl jmp add fidivrl dec outsl call lahf jmp jno jp add add and mov sahf psllq xchg ja lcall (bad) stos jg fistl adc xchg ret rcl inc (bad) repnz cmp mov add mov arpl xchg mov scas mov mov sbb sbb ds dec gs notb inc fidiv lahf push (bad) (bad) lock (bad) movsl jbe call stc or call xchg mov hlt scas mov adc aad hlt fildl dec aas and adc mov pop dec (bad) mov mov out or ss outsb aad shrl imull push insl and jle jg cmp pop mov push incl mov pmulhw add repnz repnz (bad) cli mov stos mov sarb cld xchg push shrl sar add (bad) push inc js ficompl cmc mov pop pop faddp mov in (bad) sbb push and pushf dec fisttpl or pop lods fnstsw push sub xor aad xchg cmc test jmp mov imul dec xchg or xchg adc insb aam mov mov dec (bad) fs loopne (bad) bound adc mov pop lock push mov jecxz int arpl and cmpsb addl data16 sub movsb movl aad add bound inc adc mov sub adc sub mov sub mov sub mov sub mov sub mov sub fisttpll add stc stos dec js jge mov mov in lcall push inc mov (bad) test add (bad) stc je rorb pop xor sub jmp inc adc pusha push out or xchg cmpb mov inc cmc scas mov lea mov pop jp jmp dec mov lcall mov out cmpsb leave cmp imul les incl sub lea loope mov fwait testb xchg cmp sahf push mov icebp xchg stc aam insl ds pop aaa out pushf jl fs adc add clc push xchg scas ret jnp adc jg ljmp repnz mov cwtl mov push dec jnp clc imul adc (bad) sbb lret stc adc mov sbb jne sub jae lahf movsl jnp lock pushf xor mov dec jg lods cmpsl xorl cmc repz cmp cwtl sbb bound loopne imull cmp jne es push dec aaa std std xor (bad) sbb fdivrs push clc pop dec sbb sbb js dec push into (bad) out lcall xchg and aas jmp push inc jg mov ret (bad) fcomip fldcw push inc and push push imul lret incl lods push inc out lret inc incl mov mov push sbb (bad) inc xor data16 fcomip int test xlat insb xor rcl fcmovnu call cld int mov pop shr mul pop cmp or dec lret cmpb mov movsl jp (bad) fldl rorl aaa test or bound mov cmp mov leave sahf stc (bad) xchg xchg (bad) ljmp (bad) sub or cmc movsl cmpsl push push int sbb int xor andl fistpl clc push movsl fcomps addr16 xchg xchg pop adc hlt dec mov xor push dec inc adc inc push inc adc add inc adc add push add push add push add push add push add push add push add push add push cmp mov mov push or mov inc add clc test dec fbstp aam pushf sti push ficompl jb cmp lcall xchg mov inc or mov mov add mov xor sti xlat push insl es cmp cmc ds aad andb push rclb dec inc aas push jge cmpsb ljmp xor mov xor lret jp loopne cmpsl loopne fbld mov clc xor add icebp incl nop (bad) cmpsb data16 (bad) fstps jecxz cli push test cmp js jo xchg (bad) sbb test dec in and lock movsl addr16 xor rcrb dec out ds leave (bad) push push mov dec out dec arpl pusha fs pop mov dec xchg (bad) movsb push push jg pop xor adc xchg daa clc dec (bad) mov push mov pop or dec mov pop cmp leave loop xchg inc dec push dec loopne jle push jl jle push pop (bad) cmp cmpsl jno or pop aas dec movsl jne scas mov test dec xchg lret and gs (bad) repz cs cwtl jae push pop stos jbe add xchg das mov out ds data16 xchg dec push inc xor sub add stc cwtl xchg aaa dec (bad) and lcall jb sub inc jle jae dec shrb cmp inc pop sub mov stos lahf movsl push jnp pop xchg repnz int3 fs movsb xor aad ds mov test inc cmp pop sub lahf sbb mov aad fs in imul add xor mov jge xor adc les movb outsl adc pushf out cmpsb jecxz popa out push adc mov add xchg movsb inc mov and and push jnp mov adc sub mov cmc mov out es jns movsb enter push imul mov into push int3 pop xor add jge pop sub (bad) xchg mov lcall push mov inc dec sub push hlt add add mov mov sub mov sub shl xchg orb mov addb push push push inc adc adc adc mov es sub scas aaa xor popf mov sarb mov lea lcall mov fs mov xchg hlt test add push or imul push sub xchg add push insb xor call mov (bad) in jae sbb jbe loop hlt stos subb cmp daa jb ss aas stc or push bound scas jle setge pop bound stos incl in and ja fs mov jno jge push in pop ret cmp push mov incl jb mov enter loop xchg push xor (bad) stc mov arpl enter cmp xchg (bad) xor in and movsb sti push (bad) mov add test xchg gs xchg and cs ljmp cmp repz scas jne or and cli mov cmpl or movsb mov lds xchg dec fnstcw psraw pop and inc (bad) popf push sahf loop (bad) in orl bound xchg lds sub int3 fs lds bound mov aam xchg out lcall pop sbb fwait int3 and (bad) xor add pop and sub ds loop xchg in add dec sbb xchg pop jmp xor test mov dec jmp add js aam xchg adc jg pop jp sbb popa push push iret mov nop add lock aam (bad) cmp mov inc push iret adc mov int3 pop pop pushf in dec inc pop repz test or sti cmpsl repnz repnz xchg ja mov popa adc xchg addr16 add adc xor pop push dec add test adc add imul adc cmc stos push icebp jle add and inc mov xor push jns lahf sbb xchg xor loop or roll cltd push mov push ficom movsb shlb popa movsb fsubrs cltd lds or inc cmp popf inc xor cmp add rcrl mov outsb push pop push pop movsl and mov mov push push (bad) subb out sub sub fmull inc cwtl inc or and das pop inc loop push sbb pop push leave cmpsb nop imul mov (bad) xor inc jecxz pusha dec jecxz sub xchg (bad) sub test mov lods pushf adc inc mov fldl push pop sub call popa xchg jnp ds loop addr16 adc out pushf lcall hlt cmpsb xchg ret je cmp lods push adc in push and jp bnd movsb sti xor dec (bad) xorb jle enter mov mov inc jp fs xor jbe or mov pop inc and sub fistp xchg xchg mov mov bswap scas pop sbb hlt mov (bad) adc int cmp incl cmp (bad) pop mov incl nop xchg mov jecxz jp cmpps cld sub and iret xlat lret jnp inc adc sbb outsb lret adc orb sbb lods fwait sub mov pop ret rcrb sub sub pop cli enter mov jae (bad) dec pop popa pop out inc arpl movsb dec arpl inc aaa push adc or mov fstl fwait xor aam sbb ficomp ret or mov rclb sub cs pop sub xor push inc call inc jl fs push inc adc cmp xor add cmc cmpsb cwtl scas gs jns cld mov rorl cwtl movsb outsl xor aad ljmp pop (bad) xor cmp inc arpl cmc cmc stos bndstx in push les xchg imul sub cmp pop mov int3 pusha mov test sbb cmp (bad) scas cmp mov cli or add mov xchg rcrl add shrl and mov jge out lahf cmpsb dec and fcompl jle in xor hlt (bad) scas mov mov mov and sub das std repz jnp mov sub pop mov movsb mov push push mov stc push sbb test ss sub mov insl sbb xor aad mov jbe pop sbb add aam sub sub dec lods icebp jmp fidiv cmpsb jge mov sbb xchg aad jns adc lcall add mov push mov sub cmpsl mov jb movsl push aam lret lret scas push psllq cmp sbb dec pop mov imul popf jb enter and jle xor dec or and inc addl mov mov push sub stos jle out jle sbb and mov aas mov je xchg inc rolb leave sbb push jb sahf bound xor repnz lret outsl push or dec mov mov pop out pop xchg pop push and cmpsl and out (bad) (bad) pop mov out push int3 cwtl add pusha jp push lret push push sub in cli push bound xor push (bad) dec mov mov sub xor xor push inc test mov sub sub xchg mov lds (bad) shl sahf adc xor push lods cmp lcall pusha add (bad) divb or dec cmp bound jns test fisttpl lea ja lods insb (bad) incl cli aam mov add cli jnp mov je fcomp (bad) outsb dec sub cmp pop xchg adc ret xor and pop subb push jg dec fwait push jge push ja jne cmp rolb push lods adc aam inc and popa ret cmp xor adc xlat or jmp pop pop sub mov lods add mov lret mov add xor adc lret pop mov je roll daa ds lock lcall outsb dec add push adc imul mov mov and push mov mov (bad) rcll pop das inc pop rorb add jge cmp stos (bad) mov dec js push cwtl or and push out insb mov sub pop add es jg xchg sarl sbb sub fsubrs jg add add lret push sub mov mov sub roll inc jno mov leave cmc xor add lods sbb push dec mov (bad) jmp enter cmp lods sub add dec cmc inc shrl add cmc cmp inc pop cld imul mov adc into xor or ja lods movsb lret sbb dec xchg lahf lock mov jl lods lds dec lret sub fistl jp lea push or (bad) jle cmp mov mov int mov lea rcrb (bad) or nop mov mov fcoms dec xchg sbb and sub inc fldcw adc sbb xchg ret imul xchg mov (bad) dec int3 aad push and repz xchg add mov test mov movsl les inc pop movl loope mov xor sbb mov rcl dec jl or push cmp je mov loopne shrb add sbb push les xor push jb add cli xlat inc inc data16 sub (bad) lahf and enter mov cmpsb jecxz shlb addr16 dec push and movl push pop test insl push lahf movsl pop aam pop cltd mov lret imul jns stc push dec mov popf mov xor xchg sbb gs ret xor mov sub cmpsl dec pusha rcll lods inc enter imul add or outsb and and sbb xor jae cmpsb aam ss inc jo test mulb cmp shlb pop out mov mov mov dec aas out lods mov in test daa out push jl,pt mov inc xor add adc lcall sbb nop insb add sbb push bound stos movsb mov cmp dec ret pusha mov hlt adc mov rclb or scas adc xchg dec inc ja test movsl and adc sbb pop adcl or nop (bad) sbb (bad) (bad) sub ret inc ss adc (bad) xor js mov daa incl scas push add push bound (bad) mov inc and lods cwtl lahf and aam ret dec mov mov jecxz fs jecxz pushf and jp mov pop popa arpl push jns mov popf pop push outsl dec dec out pushf insl mov (bad) xor adc xchg push cmpsb and adcb cmp xor fiaddl or lods pop gs xchg and inc andb pop push jns rclb mov shlb dec mov jae (bad) cmp insb pushf jle pusha and pop lods cmp dec xor lcall dec pop mov or xor push leave xor or adc jno mov adc mov cmpsl mov jno aaa data16 sub xchg add inc shrb syscall inc lods cmp cmp xchg push scas pop add jp fidivrl or cmpb adc rorb outsb imul push push pop in mov ljmp xchg pop sarb je mov mov adc int scas ret lahf add mov pop data16 jp test lock je inc sbb jecxz enter pop stos ss xor cmp xchg shl cmpsb mov sahf sbb in cmp adc cltd xor arpl and cmovl sbb sbb movsb cmpsb jns in push int3 cmp mov add mov mov lret aaa test jp push lea mov test arpl mov inc setp inc mov mov dec mov mov mov arpl scas loop shrb pop sti push cmp inc (bad) fisttpl mov fdivs (bad) mov inc movsl jb lcall and popf fdivr add jnp mov push pop imul enter dec push cmc sbb aad out cli fstp imul cmp aas jbe fisttpll adc or out sub sub scas jp (bad) mov fldt jns rcl aaa mov jge ds pop (bad) mov ja daa incl lods dec inc add xchg dec gs in mov jg,pt shrb lds incl divb jg fidivl sub cli incl test pop jecxz adc (bad) imull (bad) xor sbb mov or jg ficompl push clc in add test adc jg push sub idivb xor add and (bad) loop mov add nop jmp in cmp lds xchg or or (bad) mov pushf push mov fnstcw or test (bad) mov fild sbb sbb jecxz lcall pop js insl pop fisubl push and movsl dec adc movsl mov push dec jno cmp mov (bad) (bad) xchg les (bad) lods stc xorb adc outsl xchg in adc xor push and cmpsl dec adc sbb lahf or add out jae addr16 imull in mov clc push movsb jbe xchg push outsb fcoml scas movsl (bad) roll sarl nop xchg mov imul push cmp (bad) push repz xchg sbb rep repz mov fistp std pop psrad ljmp stos add bound cmovp stos cmp outsb and mov sub fdivl cmp pop xchg add imul xor inc bound into fcoml mov cltd inc int3 sub sub addr16 add rcrb enter inc int3 xor movsb sub aam push xchg enter les or and inc or push fildll rclb sub out insb mulb mov in jmp std sar aam mov daa fsub in aas dec rcll cmp in jnp mov cmp push arpl test push fcoml dec push mov xor or ljmp xchg sub mov adc add test or shrb dec jnp or cmp lret add fmuls and ja adc fdivrp sub xor lea mov lea fwait leave add push fs test sbb ficoml xchg add xor in (bad) adc lods adc ja test mov push hlt cmpsl cltd dec (bad) sbb out je cmpsl xchg inc xor dec loopne pop ret lods mov inc pop movsl inc xchg xchg jbe test mov pop jb bound daa jmp repnz jle cmp es stc push add ja in into lahf in jns (bad) xor aaa lock push outsl nop sahf aam jns mov aam mov xor movsl jno mov jle adcb imul scas xchg push sub cmp outsl lds je pushf mov sbb xor hlt test mov push inc dec daa cli xchg jge loope pop or in ljmp jp pop jl gs movsb std ffree lcall repz pop cmp stos jmp xor jecxz xchg adc fst or fdiv enter rorb cmp lods fimul cmp shr fstpl sti insb imul (bad) adc pushf push inc mov (bad) mov daa mov rol cmp cmp sbb adc je xchg push dec out jle popf xor xor mov fcos add imul (bad) incl aaa clc aam fistl sarl (bad) xor inc ret xor std inc addr16 lds pop sbb into push out jl add push (bad) xor outsl mov iret sti out fwait sub or pop pop cmp out in es out mov aaa mov (bad) lahf daa std imulb shll shrb cltd jo and cmp pop pop xchg and push push stc cmpsl mov outsb xor cmc test fwait jns,pt repz nop hlt iret sbb sbb ds mov cmpsl mov push xchg iret lret stc (bad) mov ss dec cli aam xchg xor pop lods inc (bad) mov xor nop lds inc in pop dec mov cli data16 or and inc fisttpl cmp mov sahf pushf out mov pop into fwait movsl and jp pop mov sbb aaa push loopne push mov sbb es sbb cld (bad) repnz cli pop movsb push mov sub out xchg cmp cld inc push aad fldt imul pop xchg cmp mov pop sbb scas mov jno adc loop lock jp jecxz insb insl shlb (bad) and and cld repz mov (bad) push inc pop push push call loopne lea mov add test mov and sbb movsl insl cwtl add and cli shrl sahf and sub push aas dec add lcall push iret insb and push dec jle (bad) push in jbe push push cwtl test inc fwait inc mov insb in and push dec movsl mov (bad) mov mov sbb std or shll mov jno (bad) xchg push cmp sti stos sub repnz sbb ss xchg push inc cmpsl push jb sbb push in out add shlb sbb lods ficoml cmp popf nop bnd push aad dec mov into xchg add addr16 lds sub mov in or mov loop (bad) lret or arpl adcl repnz jmp lahf sub and pop mov dec push pop clc cmpsb cwtl adcb push inc pop repnz jnp push xor sbb jo aam adc and test xor dec jbe mov mov arpl movsl pop cs sub rolb sub out (bad) lods outsl pop push sbb add xchg dec fsubrl lcall daa pop cmp cmp adc jne inc inc mov out cmp sub and sbb adc insl jno loopne imul sarb sub jae or dec popf mov ret dec push ret xor push popa dec cltd push or rcrb dec lds jae inc mov lcall lret push xor cmp dec and add fprem or sarl pop mov xor stos lahf movsl cmp nop movsb push outsb xchg push pushf in insb or adc sbb cmp dec shlb ret (bad) adc ficomp insb jecxz xchg (bad) push imul sub mov daa ja mov (bad) movsl dec adc add fcoml add jecxz pop pop mov lods add pop inc inc movsb push sub movsl push xchg (bad) loopne sub push jno sub jb pop fidivrl jp dec insl arpl mov xor add mov ficoml rcrb inc dec add fistpl ja ja pop sti xor incl add add cltd insb pushf mov out mov test push xchg sub stos adc iret sti add mov popa or nop stos push (bad) jne movsl pop aam int ja bound lods mov push mov sahf add cld sub or add dec mov mov adc test ret movsl pop inc icebp in lret (bad) dec jbe imull add mov in mov jle sbb arpl dec cwtl movsl adc jbe out bswap xorl daa xor add or test sub into add loopne cmpsl pop jno data16 popf fnsave push cmp stos into test mov cmp adc pop cwtl push pop xorl cli push jnp in xchg js icebp daa xchg fcompl inc out inc lods test cmp movsl dec xor fcom scas pop ret jns cli (bad) (bad) dec lcall mov add mov push cmc sub or jg inc sub add or stos jae and (bad) fstps dec cltd mov mov and add pop push inc sbb lds and inc add xor mov ds movsl cmp rcrb xchg arpl inc pop pop mov push sub jecxz dec pop jbe,pn (bad) icebp mov out nop subb adc xor dec jecxz into (bad) jae lret mov inc in inc jb xor jns jp aas js popf lret xchg cmp (bad) pop xchg pop mov dec aas rclb xchg and lahf cmpsl imul fnstcw out pop (bad) das lret jbe sbb mov pop ret cli push sahf pop add adc mov callw jp bound arpl inc lds cmpl mov jp lock mov sub sahf push xor es arpl loope cltd cmpsb pop or pusha jns sub pop adc orl clc into sub stos pop cmpsb data16 (bad) mov fidivl mov adc test stos cmp dec add dec lcall jbe fs cmc cmpsb sbb sbb loopne sub sub psrld mov push cmp cld stos daa fisttpl mov mov cwtl std sub adc (bad) push push xor lea push xchg push mov adc mulb test xor jb pop lahf rorb mov mov adc mov push sbb (bad) xor scas fmuls inc inc sti fbld jge inc adc inc (bad) rclb push or stos push or pop lcall adc popf dec idivb cld mov insb pop inc jmp and dec pushf loopne mov fs mov xor iret mov push or lcall fwait test inc adc add cs imul inc xor imul jo dec lods (bad) xor inc push repnz adc enter mov test push inc xchg push ret adc mov xchg push (bad) stos push mov mov push jl dec dec jb inc adc cwtl aad cmpsl lcall push cmp adc ss xchg dec cmpsb mov mov cmp adc vpor fstl cli push inc es sub (bad) mov xchg and push mov orb mov adc inc enter lahf pop xchg mov sub cmp ficom sub push and lods and inc and inc add cmpsb test push pop fstpt mov bnd mov adc imul cmpsb imul mov or push movsl movl sbb into adc addl add popf pop mov and lods adc mov push fisttp cmc mov xchg jp jns mulb pop mov pop das pop aam xor jg sub jp movsl mov ret inc adc shlb out pop in push xor arpl mov in lds push xor (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add imul jmp add dec inc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or inc add add add adc add add les pop add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb push jae ret dec js mov js subb adc pusha xor mov mov mov push clc mov pop xchg or xorl adc push sbb clc dec dec rcrl in (bad) jge call jge and mov pushf push add mov int3 imul fidivl test sbb inc or jg inc add lods icebp lock mov inc sbb int sub pop sbb mov inc les test jp out dec sti in mov mov and dec cmp incl clc push (bad) and add push push sarb or fwait dec mov les inc jns adc xlat push or or insl aam add add sbb push dec sbb jnp xlat cmc popf and hlt fstl rcll cld lea cld pop xlat scas and adc imul jp stos mov sti scas mov pop pop inc jp out loope adc test idivb jae and push out cmp call xor dec or dec ds add add scas pop mov addr16 sbb jnp (bad) mov sbb adc int3 and add cli mov mov mov in pop (bad) xor fnsave mov xor sbb xchg or maxps pop push jnp pop fisubr insl scas xor or aaa mov (bad) popf add push mov sahf sbb pop mov and jne dec jg stos sbb mov mov lret sahf (bad) mov call push and mov incl mov cmp repz stc sbbl mov cmp cmp loop outsl push rorl jne ret xor sub (bad) mov lock cmpl inc sar add mov sub lds cmp jecxz push jo xchg out mov dec aam in jno fiaddl jg aas aas mov lret push fs push jmp std loope cmc lods push push lods push addl stos js int inc jg js push cmp stos push sbb sbb jecxz loopne nop cmp (bad) or imul add xchg (bad) mov movsl daa lret pop jl (bad) push adc subl cmc jne sbb adc pop mov shrb xor mov out or loop loop jp dec jns push fidivrl repz lock mov dec cmpsb mov lret out pop mov jnp xchg outsl sbb negb push pop dec popf loope jnp mov loop inc cmp adc ja fs ret fldcw sbb nop (bad) adc xor daa xlat adcl inc lods clc addl add aam insl int3 rol lret repz rclb (bad) (bad) movsl jno xchg mov push shlb rol add adc movsl pop fcomip aas push repnz outsb mov mov imul das sbb ja insl scas jmp js cmp js lahf test xlat sbb lret lock idiv scas mov mov sysexit xchg jo sbb sti ret cmp jnp xlat xchg xchg repz or push pop fsubs and pop fabs out imulb sbb xchg ljmp pop or or pop sub xchg dec mov push pop ret (bad) incl push out sarl dec incl or subl (bad) neg data16 pop inc or cli push pop cmp xlat popf push dec loop subl sbb in in sbb sub jmp cld add js ret cmp and and cltd into pop in dec xor in scas add imul pop jnp fisubrl mov add lods add pop sbb or push adcl push inc jle cmpsb lock daa out hlt int idivb adc je mov aad jnp mov (bad) xor mov flds sbb gs jo or lock mov sbb jae nop push inc (bad) dec or jb xchg xor pop icebp pinsrw sbb mov jmp pop xchg inc inc pop jnp add movl mov jne mov jmp mov mov idiv lret cld std sarb cli aad repz test (bad) jb (bad) push (bad) xor push and scas mov dec test lret cltd and cmp inc into cmp jno mov into lahf sti mov dec push stos bound out jmp fs das mov sbb xlat (bad) mov and mov inc xchg pop sub push insb cld addr16 xor int mov sub xorl and fisub fistl frstor mov imul test arpl xchg cmpsb pushf (bad) hlt push incl xchg jns jle movsl mov dec sub scas xchg mov dec dec popa mov xchg pop pusha enter dec out mov (bad) mov mov or push mov push cli lds sub jo scas inc add xchg lret push mov rcrl cmp mov imul (bad) lods (bad) xlat cmp les shll cmp add cmpb xchg jle xlat sub lret xchg cmp push pop rorb pop out decb lret out aaa cmp mov fdivrp add lahf cmpsb jg push in ss add out mov lods jns ficoml lcall incl pop imul sbb not js repnz sub popa in jecxz xchg fstpl imul lcall sub pop fdiv and xchg pop (bad) lret xor sbb mov sub fidivl adc add (bad) mov gs adc scas inc lock pop lock push icebp sub mov cmp mov orb mov cmp repz cmp xor mov shl xchg or out jg jl mov stos pop shll sbb adc xchg pop (bad) call xchg in mov mov enter popf pop mov in shlb xor movsl push push jge (bad) ret sti negb pop std pop sbb ljmp shrb sti test xchg hlt adc mov mov data16 and inc jbe sbb add pop pop aad xlat loope mov imul pop mov int mov cld lret mov xor stos cltd mov sub jge incl iret scas mov les jns or cmpxchg (bad) aam xor icebp sub cltd mov je jbe incl sub pshufw (bad) mov cld pop loop push (bad) jne incl push add stos inc pop and aam xchg in std insl fsub test (bad) clc inc cld dec incl inc (bad) stos incl adcb dec jae enter mov incl gs cmp dec add mov sbbl loop in ja inc incl repz cli cli push fisttpl pop xor dec push push jecxz sahf cli je push jmp out test mov popf mov inc mov cmp (bad) xor lea stos mov imul push idivb nop pop jmp popf inc bound pop push repz mull hlt fs xchg mov mov ds outsl sbb mov ret cmp mov mov sbb mov shlb fsubl cltd movsl mov cmp add shr xchg int3 das fstpl adc adc mov mov push lret fisubr add pop and lods pop mov inc aam mov movl adc jb int dec mov jb jge push hlt xchg mov xchg dec fsubrl mov push inc sbb (bad) iret std repz lea loopne stc push lods incl iret popa inc adc rclb add mov inc adc repnz lds iret cmc scas cmp mov sub mov (bad) (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lock add (bad) fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or inc add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb mov lret sbb pop outsb and fdiv cli push push stos stos push out out pop adcb pop mov jbe pop adc es fistp pop fsub mov and mov arpl jae cmp ficomp xchg loopne scas test (bad) lock repnz rclb inc sub stos scas push sbb mov adcl dec in scas or xchg pop mov xchg pop inc outsb lds out lods arpl scas xchg das sbbl les lahf loop mov mov push clc mov or push mov cwtl nop incl rclb scas imul int3 jp cmp mov push sti (bad) adc add incl rcll jno (bad) lea (bad) dec cmc sub pop cmpsl xor imul (bad) jbe mov popf inc pop cmp ljmp scas je int3 pop divb mov mov adc jle push jnp pop inc mov or sbb sbb loopne or dec mov orb punpcklbw (bad) mov cmp test test (bad) xlat push test (bad) lock jl or mov push inc xchg aas or dec sahf loope sbb pminsw and mov negl lahf lock inc shrl or xchg pusha (bad) lcall mov enter iret outsb pop ja cmpsl cmc arpl jle aaa fcos add out cmp xchg add (bad) test negb repnz mov lods out les rclb outsl cmpsb jl shl sti pop lods mov ret sbb push and bound jecxz hlt imul push jl mov mov (bad) mov pop xchg push mov mov add push (bad) cli out aam das scas and imul imul mov scas lcall cmp cs lods pop addr16 jge or aam add repnz xchg xchg (bad) jne (bad) push pop sbb push xor xor pop xchg jge sub jns incl pop out fwait cmp and (bad) pop jecxz fs inc scas fwait dec icebp inc cmp stos push aas adc adc push or dec stc gs incl xlat lods (bad) movsl pop lret pop jl mov mov pop cmc jne scas xor jge mov shlb pop hlt lods dec aas ret adc das sbb jg das fstpl jecxz iret pop dec xor mov arpl push je lahf sub scas lret adc fdivrs mov and fidiv repnz mov xor xchg nop ret out mov pop outsl pop mov jno (bad) mov lea repz out add mov jecxz mov out mov mov dec and mov xchg (bad) loop out sbb icebp les adc xlat xchg xchg jg dec scas xorl ret push push add xchg mov cmpsl sub mov jl fsubrp dec addr16 pop aas (bad) sti fisubrl lds dec movl lahf xchg jle incl or (bad) cmc sbb (bad) ret ja aaa adc sbb out enter mov jmp mov roll dec xchg fistpl icebp into (bad) jbe gs mov loope add mov dec mov mov insb incl sahf dec in call js out (bad) adc in int sub gs fnsave xchg jecxz mov int lret push mov imul mov jl out lahf mov jae mov jecxz stos and clc add lods clc ja (bad) lock int outsb arpl call xor test pop jl mov aas test popf and jle cmpsl pop das sub xchg iret test pop repz fsubrs sbb sahf or and pop cmpsl mov leave cmc or jbe jno mov lcall insl jb push and dec cmp rcrb mov je xchg (bad) bndstx sub js dec push xchg xchg pop xor or dec pop dec jmp pusha jno leave repnz (bad) fnstsw mov inc (bad) xor mov scas xchg loope push in xor (bad) sbb xor pop lret pop jecxz and loopne,pt cmp mov int inc mov mov jmp sbb jmp mov jnp loop es arpl fsubrl and leave cmpsl aam aaa mov xor jp inc dec lods sahf pop push or bnd jbe sub push or push xchg pop mov out iret test int (bad) push out mov (bad) cmc jg enter mov jne out fnstcw mov in jnp arpl je incl (bad) scas sub mov sbb fistp (bad) sub les jno iret push mov mov add lcall (bad) jge mov mov xchg add xor add xchg adc jno cmp xchg cmp cmp push test icebp cs loopne or push lret xor xchg inc pop dec xchg mov cld lret xchg cmp iret rorl leave jl loop mov gs (bad) pop jge mov jg or sbbl sbb les (bad) int3 les (bad) sti dec mov push aad sbb mov push and pop push cmp cltd aam xor dec xchg incl or add rcrb mov lret pop pop pushf js push test jl jl in aad pop popf lahf test in outsb insb fnstenv pop inc fdivr or xchg (bad) repnz sub pushf pushf lods xlat inc je add lods gs mov xor mov divl fdivrp fistpl test sub sbb mov jne js add pop or clc jns scas mov xor (bad) loope mov cmc iret mov add xorl shrl xor data16 jne push lret xchg dec movsb xchg arpl lret addl sbb out cmp imul cli jge nop xchg mov icebp lcall out pop mov fnstsw mov in lcall mov jns dec inc xchg jl rolb or aam dec adc sbb cli psllw push ljmp inc xor or (bad) js (bad) jle mov fdiv outsl lods mov xchg xchg jp mov cmpsl (bad) mov addr16 les negb or cmp lock pop out js loop mov sub ss cwtl mov pop jmp movsb inc mov or call lret lret sbb clc jae insl jg xlat mov dec mov add out inc xchg sub sahf inc outsb repz mov mov aaa pusha lahf mov inc clc jae (bad) fidivl cmc or push mov inc jge enter and imul mov sub imul inc call mov fadds mov scas out inc mov repz addr16 lock (bad) xor mov jbe dec xchg (bad) fidiv xchg imul mov out outsl sub adc pushf subb jl lock pop pop jmp imulb pop lret imul xor xchg or out push xchg aam loopne cmp push inc loope cmp sahf std outsb jecxz push mov xchg xchg mov cmp mov mov mov jae incl ret xlat cltd jne add out test and loop (bad) incl loope xlat and inc mov dec mov add (bad) icebp adc and push jae daa adc scas in jo jl inc lock jge jne loope xchg add adc add add mov mov imul lods cmc (bad) adc scas dec cmp incl or (bad) lock xor pop (bad) mov jbe sub cltd add jmp shll (bad) push call push ljmp push mov jns ret repz pop clc mul mov aad and pop xchg scas mov or sti insl negl (bad) mov sub or sbb jp js xchg lahf xor cmp nopl addr16 rcl movsb xchg cmc jne scas and adc xchg fucomip xor cs push inc sbb jp test mov xchg out mov mov ds addr16 mov inc mov loope push inc pop aaa inc mov cmc pusha inc push inc adc push inc mov (bad) test loop pop dec sub or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov (bad) fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or inc add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb fsubrp div fsubrs mov fisttpll mov cmp mov mov sub leave iret cld mov mov dec push lret dec mov outsb repz enter cmc popa aad mov jg clc (bad) pop mov out xchg loope cs test rcrb jno shrb sbb sub push mov punpckldq hlt aad pop jno sbb push fild jl in cmc data16 je jae add (bad) mov or ffreep mov mov aaa or cld or hlt incl push cld sub je cmp les mov xor adc and ss mov adc mov into cmp mov jl lock jl nop out mov dec pop jl cltd pop lret clc xchg ljmp aas mov pop imul lock push dec clc xchg mov cmpsb fcompl les pop jl outsl or in or cmpsb fsubl rclb ret loopne test je outsl adc mov pop ret xchg ja jge mov les push fsubl (bad) and dec ja jne fdivl shll xor inc out scas insl mov jmp adc pop fisubrl mov or lcall mov or push sub xchg fnsave lds jb orb iret pop pop in cs mov xchg cld pop pop cs (bad) incl xlat cltd out push xchg (bad) xor adc xor push jecxz dec mov aam jp mov gs pop fcmovnu fld rcrl mov sbb data16 add lods jmp jl mov ret push pop popf dec test xchg stos imul popf lahf mov cmp cmp push pop xchg sti xor xchg mov lahf dec rcrl nop mov mov and push bound xchg jnp add divl dec out sub mull cmc cli cli xlat lods fstpt jmp (bad) imul notb or nop dec push cwtl iret mov lret mov andps push mov divl into rorb cwtl hlt push leave sbb xor scas mov data16 fidivrl xchg imul cmp in and lahf or xchg xchg mov ret inc into inc sarl jno xchg lret rep push add ljmp sbb lock mov pop dec pop xchg incl xor out add sbb push decb dec (bad) jbe cmp (bad) movsl jge mov push bsr icebp and fstpl pop or xor add and outsl or or sub xor imul repnz (bad) push sbb movsb in jmp push and mov pushf cld pop mov add clc xor (bad) jl loope push jl add cmp in xchg repnz lea pusha mov add xchg and or repz loop (bad) jl jg mov pop or xchg fcmovb ja add and out pop sub sub inc stos xchg in rolb adc sahf and (bad) popf mov dec iret fabs (bad) adc inc test cmp add (bad) hlt jnp int (bad) mov addr16 mov fwait xchg jae xor jae fsubs lret jle mov in fnstsw popf incb mov inc and ljmp test jno sbb pop mov pop clc stos repnz dec pusha mov push fiadd add xchg dec aad (bad) imul sahf jge sub sahf repz mov jb sbb xchg and cmpsl adc jb mov shrl aam xchg inc test mov bound icebp mov loope hlt sbb test push pop mov pop pop mov jns xchg xchg mov mov pop stc pushf in xchg test sahf ss xor in push roll dec pop cmp push xchg cmp lret pop dec out push pop add pop and nop icebp pop ret int repz fisttp faddp negb jle jne jmp ret xchg and push xor aas (bad) sbb mov cvttps2pi daa scas iret lcall push cmpsb jmp xor test mov pusha lret gs ljmp jmp inc adc mov mov pop jbe das xchg stc popf jne loop dec mov iret aam das mov fwait sub pop sti inc push jg xchg (bad) dec setne int3 lods mov stos sub add adcl dec addr16 int lea mov shl clc xlat push icebp push sub inc mov mov push movsb arpl scas and and add cmp iret ret rcl idivb jge dec nop fldt lret push pop repnz and lea jns push mov mov mov push cmp mov js ret adc pop sub cli je scas inc js push outsb andl jnp jle jl pop adc inc xlat xor test lea add inc ror nop push adcl and jecxz mov and (bad) ljmp dec cmp sbb (bad) add pusha rol pop xchg push (bad) das in and movsl aam scas sub pusha popa mov fucom inc add stos addr16 sahf cmpl dec mov pop (bad) incl iret xor pop push lods or outsb or (bad) inc aaa repz pop js loope pop push clc ss inc loop cwtl mov fidivrl fmuls mov enter jae pop xor and or push cmpsl or dec shrb cld fdivrs inc push hlt cmp cmp fsubrl leave adc mov int aas pop aam andl incl or pop fdivrl dec scas inc xlat push xor dec imul shl test mov mov lcall cltd inc out dec ficoml mov (bad) jg sub mov test pop imul sahf jno push clc cmp imul jne fs sbb (bad) cmc insl in movsb movl into xor cmp es movsb pop push clc (bad) iret sti arpl mov frstors adc push push (bad) or xor add mov addb icebp sub mov pop push or push pop stos add xchg add movsb test fiaddl push mov out arpl mov cmp fistl mov sahf xor adc ret xor inc push or sbb pusha xor inc lds pop js loop lahf push scas jecxz stc jl scas jmp push fsubrl sbb push push fidiv mov cmpl popf sbb add mov push pop pop dec idivl jbe sub jl aas adc fdiv lods jne aas pop mov leave xor push sbb test stos mov sub pop into cmpsl repnz repnz cld jnp xor mov jg icebp and xor cld shlb das repz stc mov adc adc fldl lea std lahf xor sbb inc std lods cmpsl mov stos sarl xor add jecxz nop add (bad) and cmp xor xchg int test clc (bad) or and or adc sub lahf xor jae scas sbb roll movsl popf mov sub les dec pusha iret movsb jmp call add popw test xor cld packssdw mov enter lret mov xor lock inc cmpsl nop cmp pop pop dec ja sub repz adc cmp jmp inc xlat mov or aaa outsl insl jb imul and insl adc call ja cli inc arpl cmpsl faddl mov pop inc pop movsl dec loop or jp scas fisubl rcr insl cmp sbb scas push and scas xor jge lds out xchg ljmp fist pop les xor out out shll mov push repnz pop lret pop xor in pop mov int3 jb ja cmp scas fwait loop or cmp (bad) out cmp pop and shll test adc xor xchg cwtl iret push cmp ljmp or in mov mov dec ret or sbb rcll (bad) insb mov fwait insl fstpl (bad) mov lret out iret incb faddl out icebp test add ret cli ja mov lock divb std mov repz in les fcmovne cli scas mov xchg mov xchg pop daa fs test lds dec (bad) push fcompl mov pop rclb adc negb (bad) hlt and lods insb ret int add jg or lods int or (bad) cwtl idiv sahf pushf sub hlt inc fildll jne push jecxz add outsb iret bound mov lea mov iret add inc and sub pop sbb lods shll xor xlat pop stos imul pop push mov and sarb ds xchg sbb jne andl sti incl sar lret pop mov jg pop dec jae xor pop pop sub cld imul push push aas (bad) (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov (bad) fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or inc add add add adc add add les pop add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb imulb std push (bad) pop mov adc mov adc xchg sub xor (bad) adc mov daa fcoms pop sbb icebp and ja add xor arpl incl or js ret jno push pop shrl mov push out test xchg adc mov aas mov mov or stc (bad) dec clc imul js incl imul inc cli pop (bad) adc push int3 xor jne sbb xchg out xor add mov xor gs std push clc adcl jmp add in lret lahf adc in adc lret decb fistpl mov cld sub sbb add mov lock clc adc fadds dec mov mov and fstpt jne stc std xchg repz daa mov loop (bad) bound pop loope gs aad gs lahf cmp pop or imul or jo push cltd loop imul push xchg aam xchg xchg loop,pt ret xchg fimull mov fucomi or les and repnz and hlt cmp mov lock mov ret mov lds add les loope dec pop dec (bad) jle xor and mov fimul jne ds sbb ficompl scas cmp lods cmp or mov dec int3 lret mov (bad) pop clc push sti (bad) sahf and (bad) leave sbb daa cmc arpl psubsb mov sbb pop inc mov cmp cmp aaa negl mov xabort movsl inc loopne test ficompl sbb xor scas jge mov xchg daa and cmc repz (bad) imul xor lret mov lods sti lret les fisubrl sbb test mov xchg push jae sub mov jge push mov in jne jo fmul and cmpl sarb xor imul jne outsb jnp (bad) (bad) mov imul cmp imul notl cmp and cmp pop (bad) imul inc mov mov inc in and les mov rcrl add call test pop inc xor xchg mov mov sub in es lods xchg inc sbb or pop sbb ror stos sub dec push mov push xlat pop push inc xchg (bad) jmp pop push imul and and jns ss sbb cmc outsb cmp mov hlt aas movsl pop cmp popf ds jno movsl int fwait jae xchg inc jb scas jl movsb adc nop inc je les lret (bad) mov push mov jge lock mov add sub mov add push pop mov mov cmc cmpsl (bad) je icebp mov jnp sub adc fistp leave incl mov stos in sti lcall sahf cmpsl int3 aam jmp in and ret ja sbb icebp out adc mov add cmp fisubr mov pop andl fldcw xor ljmp cmp insl lods stos lret cmp sti mov gs js mov adc movsl sbb mov jnp lods pop dec shr mov outsl add pop and stos mov xchg (bad) dec xor arpl test mov add jle mov ja inc cmp fdivr jno pop jmp fisttpll lret shrl in hlt cli push pop lea dec xor imul adc jmp mov pop lea push or incl cmc jmp lods fstpt inc imul dec lahf xor notb lods daa dec popf sub in mov out int3 in ret inc jl test inc pop xchg push sahf insl sbb or (bad) fistl es sub inc and addb push cmpsb aam insl or insb mov fisubr fnstsw out cli push adc add (bad) cmp imul xchg xchg enter jle mov lock xor roll push cmpb add mov pusha add ret cmp add push fsubr mov jne stc data16 jb sbb enter test dec mull cmp lahf pop (bad) imul out sbb in mov ret jns daa pop data16 sahf push dec fldcw inc (bad) mov sub dec dec sub hlt adc cmc lret mov test sub test jl test mov jne,pn sub inc aad or imul popf mov mov xor mov jmp mov mov adc mov subl nop out arpl icebp sbb jge out sti mov push frstor out xor fsts inc aam aam jmp mov xorl arpl jg mov mov jo jp xchg cmpsl jmp in dec aam cli mov (bad) loope xor rcrl sub movsb pop es cltd xchg sub xor sub jns inc fisubl cmc inc repz incl or and adc mov pop adc fldt add mov mov call push aad cmp pop add jmp outsb jae pushf sub repz mov mov xor imul stc sahf mov stos (bad) push pop clc pop pop push fisubl sub aaa dec (bad) shlb push (bad) cld and mov mov mov sbb xor xchg and inc movsb incl lahf in add add push inc aam jg lcall incl adc push jg jb mov daa addb inc push ficompl pop (bad) shlb push das test xchg ss xlat adc sub incl aaa (bad) cmp js adc sti leave sub xor add cmp cwtl jns (bad) cmc jno pop mov icebp pop pop push cld cmp mov push push fistl cmpsl testl loop mov sub push lahf pusha fstps gs ja inc outsl mov push mov lock in jno imul fdivrs imulb das jno cmp inc incb push orb inc mov sarl ret mov add sub out (bad) and inc adc repz jle incl mov cmpsl (bad) fwait sub arpl inc adc inc adc push inc adc push inc adc (bad) (bad) add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add adc add add fdivr loopne adc dec inc add add add sub add fildl inc add push push pop push add or or or or sbb adc adc sbb push sbb and daa and sub sbb sub sub xor xor daa cmp xor (bad) fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or cmp outsl add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add decb xorb insl mov cmp movsb fisttp scas and (bad) sarl (bad) sbb fsub arpl sbb mov test es mov shrb fimull fistp (bad) xor add stc pop push mov outsl cltd jbe test xlat push cmp push cs and das aas mov iret lock (bad) jp jl movsl inc int repnz (bad) sub or jp pop push icebp inc int (bad) sub dec aas xchg insb (bad) lock in stos in cmp jns aad loope jg mov adc xchg clc insb mov popa xchg popa jecxz (bad) cld mov clc inc ds jg popf incl xchg cmp pop loope add loope sub (bad) int push mov sti outsl sbb incl and fsubrl repnz das cld int3 ss push loopne push mov imul cs sbb and jle fxch out xor adc mov inc xchg test cwtl mov or shll xchg push mov inc test jno fisttpll mov cli pop ret subl inc and push js (bad) jecxz mov sub push fldl2t insl (bad) mov pusha test mov repz lds shlb test sub pop push sub sub push int out cmpl push sub jg fistp mov lods aas xlat (bad) mov xlat mov mov in push jns adc daa out lret iret outsl mov imul mov xchg jmp fadd enter in lret jge lods gs mov cmpsb xlat test cmp iret adc call leave xchg lea lret aaa loopne xor cmpsb pop inc mov mov enter jb cmp jg dec lods fsub xor enter and out lahf pop xor pop test adc incl xchg in gs es fmull add add add fldt stc sti push leave (bad) cs mov (bad) enter (bad) jb notl cwtl leave inc xchg enter jp or xor and inc adc mov mov leave adc lds daa (bad) lds (bad) daa (bad) popa aaa pop mov in mov out addr16 jnp cwtl jle movsl sti add jmp outsb outsl (bad) mov addb scas aam fisubr mov in xlat lret cmp out pop cmc pop (bad) jae (bad) cld fcmovnbe jg xor std in sbb int3 in mov (bad) mov inc aas adc ffreep ficomp xchg inc mov xor gs jo loopne stos daa sti lods mov test outsl or adc push inc bound scas stos sub mov repnz jne out mov clc xchg push sub fildl aad jecxz xchg pop outsl nop loop pop addl sub push sub cs and cmp imul jnp xchg cmp rolb or jmp insb das and xchg jl js ficomp f2xm1 sti loop (bad) negb dec in or mov pop pushf push leave das mov sbb (bad) pop xlat aaa lret sahf xor lahf xchg sbb popa out mov mov in scas xchg pop jmp mov shll cmp dec dec pop mov cmpsb pop fldenv add rclb mov lods adc add sub imul inc jl aaa cmp gs sbb and mov ljmp xor (bad) out nop mov stc add adc xor and call and jno ljmp jae (bad) sub ss (bad) out xor jge (bad) das out mov xchg lret dec clc add leave iret jle outsl sub movsb mov mov pop jp xor sbb jnp xor (bad) aad dec lcall inc push js or jb cmc in push je jnp outsl adc scas out adc iret xacquire jae cmp jp xchg xchg stos sub adc mov jo sahf mov (bad) (bad) jne jns,pt (bad) mov out clc jl mov arpl test jb pop sti pop leave pop popf jne dec xor cwtl std sahf iret jbe pop rcll cmpsb imul push popf insb pop xchg data16 aaa jno (bad) sbb hlt sbb into imul int3 push push cmp int fs std cmp sub imul outsl ret pop cwtl push inc pop sti adc leave test fisubrl pop dec jbe jp ljmp push scas ds dec in fisub fstl mov std cmp idivb jp jnp lret jp test ljmp in cmp xor les mov push mov cwtl jg sti jp (bad) testb jmp jb or shl jp ljmp push cltd insb mov pop push push xlat movsb mov lock inc and jbe rcrb jae jb enter rcl aas in xchg pop mov xchg lods adc cmc xchg fdivrl pop jl cwtl jge cld imul lods sub push cmpsb imul dec lock mov scas je jmp lcall ret mov jg jmp pop jecxz xor stos cmp out pop lret pushf push push enter aas add loop pop inc cld and add sti jmp push jl fs mov out mov aam test cmp je hlt sti (bad) cmp stc mov jecxz fstl push cmpsb mov sbb add push mov es mov sbb jns sub and dec notl test mov dec dec inc cmpb pop push fisubrl push icebp push fwait sbb pop aas fisubl insl dec xchg pop jnp andl or lods scas das push incb scas sub mov mov rcll notl add cli lods imul xchg xchg jl jb (bad) mov out (bad) scas jo sahf mov push xor dec mov lds cmp dec sub or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs and jae gs sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp jns je insl cs jb ja outsb addr16 imul jae gs cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs insl push jns je insl cs insb outsl bound imul cs jne je jb dec outsb outsw sub insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp jns je insl cs imul inc outsl jb jae inc js outsl jae sub popa je sub push jns je insl cs imul inc outsl jb jae and jb imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp inc push push int3 mov fimul fwait lcall sti mov mov mov sub mov sbb push mov xchg sbb pop sbb test movb and jge xor add add add add add fadds add mov add add add add add xchg add add add push add add add add add add add push add add add add and je push add add add popa add insb add add add data16 add jae add add sbb add add jae add add ja inc add imul add sbb add add jae add jb imul imul lahf add add add add jae add add add popa add add add and je push add add add popa add add popa add insb add pop or add and je push add add add imul add or add add add jae add popa add add or add and je push add add outsb add jo push add inc add imul add and je push add add add jns dec add imul je push or add and je push add add add jns dec add jb add dec add outsl add sbb add ss add dec add inc add popa add je xor add add popa add insb add add add data16 add jae sbb inc add dec add inc add popa add je xor add add imul add or add inc add dec add inc add popa add je xor add outsl add add imul jae mov inc add dec add inc add popa add je xor add arpl js push add add add add xor jne je je outsl add xor add add popa add insb add add add data16 add jae mov add je je outsl add xor add add imul add add and jne je je outsl add xor add outsl add add imul jae sub add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc jae gs cs jb ja outsb addr16 imul add push addr16 or add add add add add add inc add add add (bad) (bad) incl add add add add add add push jns je insl cs insb outsl bound imul cs jne je jb dec outsb outsw or add or pop imul outsb insb jns arpl jo jb dec outsb outsw or je outsb outsw pop outsb jne dec outsb outsw or popa je push imul or insb outsb fs jb insl pop fs je dec je insl or insb je jb dec inc push insl pop outsb popa insl adc jne gs jae jb jbe jb imul add add add and jae gs cs insb outsl bound imul cs outsl insl jo jb dec outsb outsw sbb gs cs insb outsl bound imul cs gs dec outsb outsw and gs cs insb outsl bound imul cs jne bound inc outsl jb popa je outsb outsw daa push jns je insl cs insb outsl bound imul cs popa je push imul popa je outsb outsw sbb gs cs insb outsl bound imul cs popa insb outsb fs jb or add add add or add add add add or add add jg add push add add add add push jns je insl cs insb outsl bound imul cs outsl insl jo jb dec outsb outsw add add push insl pop outsb popa insl or outsb xor dec inc dec inc pop arpl je jb or jb push gs imul or and jae gs cs insb outsl bound imul cs outsl jb push gs imul add add add add or add add gs cs insb outsl bound imul cs gs dec outsb outsw pop add add insl pop insb imul jb je jb insl pop imul outsb insb jns insl pop arpl je jb dec popa insl adc jae outsl insl inc jne je jb dec popa insl or outsb inc popa je dec je insl adc jne gs jae jb jbe jb imul outsb xor dec popa outsb addr16 inc add add add add or or push add add sub or add add add jg add add add add gs cs insb outsl bound imul cs jne bound inc outsl jb popa je outsb outsw and add adc insl bound inc jb jne push imul jb outsb arpl jb jne push imul jb outsb je jb jne push imul jae je jbe push imul popa je jbe push imul bound inc arpl popa insb push gs jb je jb outsb jne bound inc jb jne push gs jb je jb arpl jb outsb arpl jb jne push gs jb je jb arpl jb outsb arpl arpl popa insb push gs jb je jb arpl jb outsb arpl jns bound adc jae inc jne jb outsb arpl jns bound or outsb push jns bound push jo jae je jbe dec outsb imul push jns bound push outsb gs je jbe dec outsb imul push jns bound pop jo jb outsb je arpl popa insb push gs jb je jb jo jb outsb je jb jne push gs jb je jb jo jb outsb je jns bound push jo jb imul outsl insb or popa je jbe inc imul pop fs je dec je insl adc insl bound inc arpl popa insb inc imul jne jb outsb arpl arpl popa insb inc imul jne jb outsb arpl outsl jae je jbe push popa je gs pop arpl jb outsb arpl gs je jbe push popa je gs adc gs gs je jbe push popa je gs push jo jb outsb je outsl jae je jbe push popa je gs push jo jb outsb je gs je jbe push popa je gs adc gs outsb je arpl popa insb inc imul imul jae imul imul outsb insb jns insl pop jne gs jae jb jbe jb imul dec outsb jbe jb popa outsb je jbe insb imul jae inc jae jne bound pop jbe insb imul jae inc jae jne jb outsb arpl pop pop add add add add add add add add add add or or or or or or add add add or add or add add or add push or add add push or add add add or add add push add add or adc add add movsb or adc add add dec push adc add or imul push adc add or outsb imul or add add push add add and add loop mov sbb add add add add add add add add add add add add add add add add or add add add or add add or add add add or add add sbb add or add push sbb add add push sbb add add push sbb add add push sbb add add push sbb xor push add add xor add ss and add add push and add add push and add add or add add pop push outsl outsl insb imul add add add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs imul inc outsl jb jae and jb imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp and jae gs cs imul inc outsl jb jae inc js outsl jae sub popa je add add add popa je pop add add add add add lsl add jle add add add add add add and add cmp xor inc cmp sub sub sub inc cmp xor add add inc and add inc xor or add cwtl push add lods adc add add add add (bad) (bad) (bad) (bad) incl add add add add add add add add inc push push add add add add add add inc popa je inc jb add add add add add dec popa je imul add or outsl insb insb arpl outsb add add add add or push je bound arpl add add incl add add add push je imul add add add add add push popa insb jne add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add add add add add pop add add add add add dec outsb je addr16 add sub add push add add add or add pop add add add push add add add or add pop add add add add add add add or add pop add add add add add add add or add add add add add add add or add pop add add add push add add add or add add add add add add add push add add add add add push add add add sldt add add add add add add add add adc add add add add add add add adc add pop add add add add add add add adc add pop add add add push add add add adc add pop add add add add add adc add pop add add add add add adc add add add add add add add push add add add add add push add add add pop add add add add add add add add add sbb add pop add add add add add sbb add pop add add add push add add add sbb add add add add add add add sbb add pop add add add push add add add sbb add pop add add add add add add add sbb add add add add add add add push add add add add add push add add add add add add add dec mov nop cmp add add add add add inc popa arpl jb jo add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add inc imul add add (bad) (bad) incl add add add add add add (bad) (bad) incl add add add add add add add add add push imul add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add and add or add adc push je push outsl outsl je outsl je add add add or push je push gs add add add add add push gs inc insb outsl arpl add add add add add add (bad) (bad) (bad) (bad) (bad) jmp add push add add add inc outsl outsb je add and add add dec imul je push popa outsb jae push gs data16 add add add add add add add add add add add add add add add add add add add add add add add sldt add add inc push arpl outsb add add add add add add add add add add add add add add add inc add enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) incl add add add add add add add add sub add adc add push add inc push gs add add add add add add add add add add add add add add add add add add add sldt add add add add add sub add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) incl add add add add add add add add das add add add add push je push insb outsl je add xor add adc add or push je jb popa jns add add add add add add add add add cmpb add aas add cmpb add inc add add add (bad) (bad) incl add add add add add add add add add add inc inc add add add add add (bad) (bad) incl add add add add add add add add add add inc inc add add add jo add lock add add add add add add add add add add add add add dec imul add add add add add add add add add add add xor add adc add or push je outsb dec imul add add aas add add lcall aas (bad) incl add xor add adc add inc js jae add add (bad) decl add add add add add add add add add add add add add add inc inc add add add add add add inc inc add lock add jo xor add add add add add add add pushl add add add add add add add add add add add inc add enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add add add add add (bad) (bad) (bad) (bad) incl add add add add add add cmp add push add add add add add add add add add add (bad) jmp add cmp add add add add add add add add mov add add add add cmp add adc add add add add add add add add cmp add push add add add inc js jae arpl gs insb outsl arpl add cmp add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add popa insb jne inc insb outsl arpl add sbb add (bad) (bad) (bad) (bad) (bad) (bad) add add add add add add add add add add add add add add add add add add add add add add add add add add inc add enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add inc add add add add add add add add add add add add add add add or add (bad) (bad) incl (bad) (bad) incl add add add add add add loopne (bad) (bad) cld or add add (bad) incl add add add add add incl add add add add add add inc add add add decl add add add add add add add add add add add add add add inc inc add add add add add add inc inc add lock add jo inc add add add add add add add incl add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add dec add add add add add add add add add add add add (bad) jmp add add add dec add add add add add add add add mov add add add add add add add add dec add add add add add add add add add add dec add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add sbb add or push je outsl jne insb add add add add add (bad) incl add add add (bad) (bad) (bad) (bad) (bad) decl add add add xor add add add add add add add add add add add decl add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add push add add add add add add add add add add add add (bad) jmp add (bad) ljmp (bad) (bad) jmp add add dec add add add add (bad) ljmp (bad) (bad) jmp add add add (bad) incl add add add add add incl add add add add add add push add add add decl add add add add add add add add add add add add add add inc inc add add add add add add inc inc add lock add jo push add add add add add add add call add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add pop add add add add add add add add add add add add (bad) jmp add add add pop add add add add add add add add mov add add add add add add add add pop add add add add add add add add add add pop add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add sbb pop inc (bad) incl add add add (bad) (bad) (bad) (bad) (bad) lcall add add add xor add add add add pushf xchg add add add add add add lcall add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add bound add push add add add add add add add add add add (bad) jmp add pop add mov add or add add add adc add mov add add add add add add add (bad) incl add add add add add incl add add add add add add arpl add adc add decl add add add add add add add add add add add add add add inc inc add add add add add add inc inc add lock add add add add add add add add add jmp add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add push add add add add add add add add add add add add add add add add add add add add add push add adc add add add add add add add (bad) incl add add add add add incl add add add add add add (bad) incl add ret cmc test add cmpb test aas add int int3 cmp add sbb add push add push jne popaw arpl gs add add add add add (bad) incl add add add add add add add add add add inc inc add add add insb add add add add add add add add add add insl add add add add add add add add add add add add add add add add add add inc inc add add add add add add inc inc outsb add add add add add add add (bad) (bad) (bad) (bad) ljmp add push add add add add add add add add add add add add add add (bad) (bad) incl add add jo add adc add add add add add add add add add add add (bad) pushl add sbb add or push je dec imul add add add add add add add add add add add add add add add add add add add inc (bad) (bad) (bad) incl add jb add sbb add add add add (bad) incl add add add add add add add add add add incl add add inc (bad) (bad) (bad) incl add add add add add add (bad) (bad) (bad) incl add add add add add add add add add add add incl add add jo add (bad) inc add jae add or add add add add add add add add enter enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add or add add (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add jbe add adc add add add add add add add add ja add sbb add or push je gs gs add add add add add add incl add add and add add add add add add incl add add inc inc add add add incl add add add add add (bad) (bad) (bad) (bad) js add adc add add add add add add add add (bad) incl add add add add add add add add add or add add add add add add add add add inc inc jns add add add add add add add jp add sbb add push add push gs gs popa bound add add add add add add add (bad) (bad) (bad) (bad) (bad) jnp add push add add add add add add add add add add add add add add add add jl add or add add add add add (bad) (bad) (bad) (bad) (bad) jge add push add add add inc add add add add add add add add add add add add add add jle add sbb add push gs inc outsl jb popa je add add add add jg add add add add add add addb add add add add add add add add add add (bad) add add add or add add add add add (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add (bad) (bad) incl add add add (bad) incl add add add add add add add add add inc add inc inc add jo add add incl add test add or add add add (bad) (bad) (bad) incl add add add add add cmpb add add addb incl add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) lcall add decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add test add sbb add add add add add add add add add and add add add add add add add add add inc inc add add add add add add add add add (bad) (bad) (bad) incl add add add add add add add add (bad) incl add add add add add add add add add or add add add add add add add add add add add add add add add inc inc xchg add add add add add add add mov add sbb add or add add add add add (bad) (bad) (bad) (bad) decl add add add add add add add add add add add add add add add add mov add or add add add add add (bad) (bad) (bad) (bad) decl add add add inc add add add add add add add add add add add add add add mov add sbb add add add add add add add add add mov add sbb add add add add add add add add add nop add add add or add add add add add (bad) (bad) (bad) (bad) call add add add add add add add add add add add add add add (bad) (bad) incl add add add (bad) incl add add add add add add incl add add inc add inc inc add jo add add add add xchg add add add add add add (bad) (bad) incl add add add add add cmpb add incl addb add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) lcall add decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add xchg add add add add add add add add add add add add inc add inc inc add add add add add add incl add inc inc add add add add incl add add add add (bad) (bad) (bad) call add add add add add add add add (bad) incl add add add add add add add add add or add add add add add add add add add add add add add add add inc inc xchg add add add add add add add xchg add add add or add add add add add (bad) (bad) (bad) (bad) call add add add add add add add add add add add add add add add add cwtl add add add add add add add (bad) (bad) (bad) (bad) lcall add add add inc add add add add add add add add add add add add add add lcall add add add fwait add add add add add add pushf add add add add add add add add add add add sahf add add add or add add add add add (bad) (bad) (bad) (bad) lcall add add add add add add add add add add add add add add (bad) (bad) incl add add add (bad) incl add add add add add add add add add inc add inc inc add jo add add add incl mov add add add add (bad) (bad) incl add add add add add cmpb add add addb add incl add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) lcall add decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add mov add add add add add add add incl add add inc add inc inc add add add add add (bad) incl addb add add inc inc add add add (bad) incl add add add add add (bad) (bad) jmp add add add add add add add add (bad) incl add add add add add add add add add or add add add add add add add add add add add add add add add inc inc mov add add add add add add add movsb add add add or add add add add add (bad) (bad) (bad) (bad) jmp add add add add add add add add add add add add add add add add cmpsb add add add add add add add (bad) (bad) (bad) (bad) jmp add add add inc add add add add add add add add add add add add add add test add sbb add add add add add add add add add stos add add add add add add add add add add add lods add add add or add add add add add (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add (bad) (bad) incl add add add (bad) incl add add add add add add incl add add inc add inc inc add jo add add (bad) incl add add add add add (bad) (bad) incl add add add add add cmpb add incl addb (bad) incl addb sbb add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) lcall add decl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add scas add add add add push imul add add add add add add add add add (bad) (bad) (bad) (bad) pushl add add add add add add add add add add add add add add add add add add add add add sldt add add add add add add add add add add add add add add inc add enter add add add add add (bad) (bad) incl add mov add add add add add add add (bad) incl add add add add add add (bad) (bad) incl add add add add add add add (bad) (bad) (bad) (bad) incl add add add add add add add add mov add pop add add add dec imul add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add push imul add add add (bad) incl add add inc add add add (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add add add (bad) (bad) (bad) incl add add add add add add jns je insl sub push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp pop push jns je insl cs outsl fs outsl insl cs gs bound inc je jb bound gs add add jbe insb jne pop pop add add add add add or add fidivr or into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add inc push inc inc push inc mov into add add flds add sbb push add add data16 imul add add add add and or mov repz dec imul stos jg jnp inc add jno cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc sbb mov or test xor cvtdq2ps xor xchg add dec test jb std fcomip mov outsb cmpsl outsl push xor mov data16 add sahf pop (bad) pop outsb mov lods mov sahf or xchg mov aam mov jmp xor cmp mov (bad) loopne mov insl js xor add sub mov adc cwtl add sahf or int jp add add sbb dec push sbb scas or xchg mov in cmc cwtl add sahf cmp imul add add (bad) or xchg mov in cmc cwtl add sahf or lods popa js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in adc or xchg mov add or xchg fwait jns lret jno movsl sahf xchg mov inc and add sub mov in cmc clc add ljmp add aad cwtl mov (bad) xor aaa mov icebp in cmc cwtl add sahf or xchg sbb and or mov jnp mov negl xrelease mov in cmc fadds jno mov inc add add sahf js mov add popa push cmc sahf add sahf popf ljmp mov clc inc cwtl test cltd pop sub in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb int or sbb sub lret jns lds aaa bnd xchg cwtl sti pop das addr16 mov mov add and dec cmp in (bad) inc dec or mov dec lahf dec negb fnsave sbb shrl shr cmc sahf add xchg cwtl repnz outsb sar xor repz dec stc xchg lock xchg mov aaa sbb shrl shr cmc pushf clc xor xor mov ret xor jmp sub mov adc mov cmp add (bad) cmp pop insl mov enter mov inc dec or mov addr16 mov inc sbb fnsave sbb shrl mov adc nop add xchg and out dec jb or iret and jmp xrelease pop leave mov sub pop pop lahf das loope xor cmpsl xchg std cmc xchg add xchg and inc dec add add push xchg sbb ds dec mov out clc dec sahf psllq push mov jmp rep sti scas das adc int3 jbe cmp dec mov and ljmp mov insl std pushf mov sarb mov inc (bad) mov lds inc xchg fidiv mov clc cmp jnp jb arpl jmp mov xor mov sbb mov push add jecxz jge aaa cmc lahf repnz jge dec jne movsl out in push dec adcl sub movsl stc and mov jg fs cmc mov xorl cmp imul inc stc movsl mov jo lea lods dec lods mov push add dec mov fsub sti add jno xor mov fldl jo sub sbb pop sub jbe push lods push ja call cmp ret xor push sbb daa xchg sbb xor cwtl sub lret stc xor lcall pop stos shlb sub decl and jne push jmp push add jecxz movsl pop inc or sbb hlt and insl call movsl and fidivr adc xchg pop rolb pusha mov (bad) in pop inc mov stos sbb or or dec dec sbb iret jno and pop fildll pop xchg xchg stos sbb in loope in hlt xor dec or sbb jmp fnstsw sbb mov loop popf pop adc xor inc js sub mov xchg test push cltd adc xor mov mov cmp out push adc pop jno mov push push popa (bad) add fstpt lahf out inc insl pusha xchg xchg mov stos rolb sbb jbe xlat xor adc loop mov jae pop scas and sub mov or daa push mov out fxch inc mov hlt adc lret pop xor into and dec (bad) stc (bad) or test fist xorw push jno mov dec and xchg sbb sub jns cmp sub cmp (bad) or lahf jno cmp add flds lock sub sub push jno cwtl out bound jg push inc push repnz push mov imul pop stos rolb sbb pop aaa sub lods pop ja xlat out cltd inc jno psllq fstpt (bad) loope outsb xchg insl pop movups pop jno add cld and jmp jl pop jle sub jge sbb mov lea (bad) and add inc sbb inc jl mov sbb xchg testb (bad) repz cltd xchg jo into fstpt (bad) loope outsb xchg insl pop movups pop jno add cld and jmp jl pop jle sub (bad) xchg sbb mov lea (bad) and add xchg mov in xchg cmc cs cmpsl outsb and push xor into cli dec pop push test xchg movsb fsubl inc fwait add inc pop jmp xlat jbe outsb mov xchg add je push divps sub cltd xor cmp cmp cmpsb out cltd subb pop pop push jnp jb js (bad) out cltd (bad) iret aas gs mov insb or sbb xchg testb lret jg mov faddl fild pusha jns test in sub cmp jne push jmp lods pusha lock imulb pop push pop pop jae jb push loopne inc mov mov pop ja mov cmpsb out jmp push movlps mov jnp and lahf mov nop popf stos pop out xchg xchg mov shlb mov (bad) in call xlat sub adc test sbb (bad) clc cmp mov and sbb mov cli xor sti inc pop fs and cmp adc loope in or daa push sub jne add mov cmp add scas push dec loop cmp adc test add (bad) cli xor gs fdivrs mov (bad) xchg divl test xor ret add adc mov bnd fs dec pop push pop pop jae jb push loopne inc mov adc and roll or aad je push adc or decl and addr16 je push scas pop decl jmp inc jmp push fldcw pop decl cmp jnp jge sbb scas out sub outsl xchg cli mulb ja aad fisubl and loopne rcll inc gs add sbb icebp arpl cmpsl loopne mov sarl shll pop or dec push ret mov out push pop push jno sbb rcl mov mov outsl jns sub cmp push iret (bad) test out adc cmp lods insb ja xchg fcompl jo adc movsl inc push mov ret cltd icebp cmp inc push jmp jle sub test or cmpl cmpsb push inc pop dec push jmp shll cmp fimul cltd fdivrl push dec sbb frstor jae inc stos mov cmp lods out lods insl jbe push or outsb adc test outsl xor or jno popa xor loope mov cli or and xchg xor cmp movsb outsl or outsb push cmpsb out sbb sub mov fidivr mov push adc push sbb in lds add cmp pop (bad) pop or push jp xchg pop cli xlat daa lea out xchg popf dec aaa ljmp fbstp mov push decl fstpt jae jb les jne orps test push sbb in jmp mov push cmc xor mov xor loopne cs jns cmp adc push punpckldq sub jns std shrb js cwtl sahf fsubr jno pushf leave xchg iret hlt ja mov push or jno int3 push mov mov push and jb popf push xor icebp push jmp fisttpl and fildl pop movups pop jno add cld and jmp jl pop jle sub iret xchg dec jmp ljmp fmuls and (bad) lret es lret pop (bad) cli xor stos frstor jno fmuls cmp repnz lcall jecxz pop ja outsb (bad) (bad) push es xchg daa out mov push scas cmp dec add jnp or inc std mov cmpxchg (bad) push xor inc pop xchg mov repnz movsb cs cmp outsb cmp movsb push fucomp int3 in dec lret popa (bad) add dec jno loope gs (bad) in jns test out push cmp jo pop jle xor mov xchg xor adc in insb xchg es jb hlt dec dec cltd stos mov in (bad) jmp cmp jg je mov or aad (bad) imul pop mov in push movsb mov cmp ss test or jg arpl mov fcmovnu add push cwtl xchg cmc test push outsb push sti mov shll rclb cld out lret dec pop les adc mov je dec es jno mov or pushf adcb jmp arpl xchg jbe cmp push or pushw sti in inc pop mov fidivrl push jmp mov fs cli xchg mov in cmc cwtl add sahf or mov jg dec add add push hlt xchg and mov lahf push adc jle repnz cmc cli jmp inc ljmp mov add push hlt xchg out and aas clc sahf test mov dec js jle repnz cmc cmp stos test in sub mov add push hlt xchg fwait out cmp xchg mov dec js jle sarb or mov lret popa and int3 subl in push cmp adcl jno cmp fbld xchg or push push pop sahf sbb int insl dec mov out leave stc insl lahf sbb xchg cmp push cmc adc sub vcmpss push shr inc xchg adc mov outsl movsl jmp in repz imul pop leave jmp outsl ss lea add dec sbbb imul add mov add cli push sbb (bad) lret out iret push xchg jbe inc aam sahf jmp mov mov jge cmc cmp adc into cmp mov adc repnz inc cltd jmp push pop out incl or pop mov cmp adc (bad) orl jl mov iret adc xor dec fs add xchg inc dec jecxz inc dec imul sar movl mov dec sub inc mov and testl pop pop dec sub inc xor sub mov insb cmp mov iret jl cld ljmp sbb cmpsl (bad) sti bndstx xor sbb dec jnp inc add std inc lahf sub lods sub dec add xlat inc dec and cltd sub mov push and pop push mov out mov neg adc push mov out push dec xchg aad roll inc cmc cwtl add sahf push lret in dec jb cltd repz sub jmp dec add push in xchg fsubrl (bad) lahf pop arpl lea addr16 (bad) nop enter daa xor test decl popf and jns ja imul inc mov incl (bad) lea mov adc jnp lcall pop jge loope cmc push push fadds mov mov neg xchg popf inc xor out jmp jmp data16 cli punpckhbw sbb and (bad) outsb nop aaa stc js dec push add fidivr lcall push cwtl rclb dec xlat push enter mov repz gs xchg out mov pop lods in mov push sub pop popf sbb xchg popa sbb pop xchg call (bad) sub mov shll stc data16 mov xor int3 out loopne mov xor and iret std movsb mov and mov cmp fwait lea (bad) stc insb shrl push cltd and popf test out repnz pop iret stc insb xchg es push or adc ja test (bad) xchg inc xchg ds shlb sbb push jmp into or sbb jb cmc jg pop int3 xchg in lcall mov (bad) mov std xchg dec (bad) dec mov pop lahf repnz (bad) insb jb mov out in dec dec pop or mov mov cli cli sbb push jbe loop repnz aam divl push adc imul sub cwtl add sahf or push pop jle loopne pop cmp mov and ds sti loopne pop ds lret sbb jb and push mov pop div (bad) and push jge mov pop or ja ja cmc cwtl fnstcw xor and scas mov cmc outsl add sahf insb mov dec mov call lret stos test mov cld dec push and icebp sti mov push xchg clc mov inc or das jle mov pop decl adc adc in sbb ljmp cmp int push (bad) int hlt and inc jbe rolb or push sbb mov inc imul enter rcrb adc gs fadd clc fdivrs imul xor sti das jnp inc add mov stos sbb xchg inc stos inc jecxz inc movsb stc data16 xor add js add sbb push lahf push scas cmp js mov add cmpsl jle repz mov dec incl or sbb jmp mov test aaa push push leave pop shr jae (bad) clc mov stc sbb fwait pop aam pop mov mov or push xchg cmp xchg lea xchg in mov mov push sub inc add decl sub cmc icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov insl cmc sbb aas mov sbb movsl xchg out inc push cltd mov mov push cmc lods xchg icebp dec (bad) or lods loopne stc scas lea mov cmp mov aaa movsb leave xor jmp fyl2x in cmc cwtl add (bad) sub mov jns add add sahf or lods flds add adc nop sbb xchg lea adc ficom clc andl add sub mov add sahf adc mov jnp inc add test sbb xchg cmp movsl xchg std vmovups sahf or mov dec js add add loop loop mov sarl xor jnp inc add add (bad) rcl mov add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in addb sahf or xchg mov add sahf or xchg adc fidiv add out (bad) jae negl xrelease mov int mov jmp sbb xlat in xor sbb xchg push int3 dec add add sahf or (bad) lods mov adc fcmove arpl int fmuls mov mov xchg mov lods cmc fadd mov or xchg mov in cmc cwtl add sub std icebp out icebp popf cli push dec push loope clc push repz jg icebp push into push pop cmp sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add cmp jp mov add sbb movsl ret cmpsb sub ds sub (bad) sub mov xchg push ret iret stos fcomp divb sub dec xchg fistp xor lahf and dec je or jo (bad) ljmp scas cmp nop ror xchg cwtl (bad) stc mov dec pop xorb mov cli dec ret aam repz ljmp cs movb (bad) and ja stos adc enter repz lret inc push mov mov pop jae int pusha test jne and aaa xor pop adc daa push movsl lea sub inc mov dec mov cld das dec test dec inc aam dec dec pop mov jle mov test je sbb sub out jmp pushf (bad) fsts fwait int3 push lea pop add in sbb lock call lret es lods add jne sbb ljmp hlt fnstcw sub xchg lret lahf xor xlat xchg push cmc push sahf xor bnd mov lret push fldl out xor jle jno pop in sub dec into xor xchg jl scas sbb xchg or aaa sbb imul dec push inc xlat jno push xchg dec dec mov sbb in and push insb fwait or push inc sar aas lcall fs mov jno jmp dec popf sub xchg jnp,pn test imul push (bad) icebp psadbw xor pop fstl and test leave dec jle jmp mov jb cmpsl (bad) xchg jmp cli sbb push cmp pop mov lea sbb xchg and xchg inc out sarb imul hlt mov mov in imul bound pop lahf in roll or imul leave push mov adc pop or roll pop jg jne movsb or jb cwtl andl mov js stos das data16 aaa adc std fdivs jnp sbb rclb xor cmp into mov push arpl pushf idiv add add (bad) fistpl cmc jno jle mov lret mov decl pop not into outsb lods push out ret sub jmp repnz cltd mull pop lds or cmp xor dec cmp popl cmp and xchg inc gs punpckhbw mov jbe addr16 sub bound (bad) xor (bad) jno jnp mov push xchg pop or jle xlat adc mov sbbl cwtl stc addr16 jle cltd ret and in mov data16 sub in enter test push cmp jns jbe adc mov rcr adc jmp xchg push fildll adc loop add cld addl push clc dec jnp aam mov orl rcll jae clc lahf loopne popf inc call ffreep lds aad roll es lock inc out fsts cltd enter test cwtl inc fisttp cli jmp data16 push pop jp arpl xor ds cmp mov test xchg add dec inc xchg scas push dec std pop sbb push mov mov frstor jns cltd cmpsl inc inc leave push aas xchg add and ret out add out aad (bad) dec cmp push loopne (bad) sti in in pop in int3 add movsl ljmp xchg pop sbb add push adc inc in dec or inc mov jle push (bad) ret add dec data16 push jl fstp xor jnp jle jns xor adc orl mov (bad) in or mov scas sub mov in cmp ljmp (bad) aaa movsb pushf movsb pop add iret fildll lcall loope inc sbb gs clc (bad) negb mov pushf imul adc jo jne lods xor test dec dec lcall mov (bad) cmc cmc pop mov push incl cli (bad) add out and ret call push sbb outsl outsb mov lret mov je iret repnz fisubr pop or (bad) insl jne inc faddl (bad) mov (bad) sub in and pushf push or lock mov lock (bad) negl jecxz fistl jb xlat sbb adc pop mov xor iret add mov mov sbb outsl xchg cmc and lahf insl dec lock pop push mov les fcomps fnstsw add mov jae adc cmp cmc sbb xor in xor lods inc test arpl sub bound mov sbb lret jae (bad) loopne nop call mov xchg insl xor stc add mov xchg pop hlt es mov inc hlt ja aam aaa and outsl popa sahf xor ja mov (bad) xchg pop pop add pop xchg lcall fsts xor lods push mov aaa (bad) je mov add add push xchg mov fisttp pushf bnd setg inc jb mov test (bad) pop push xchg pop hlt loop push es pop or pop push test (bad) cmpsb dec fs xchg test mov cli jecxz dec or (bad) daa xor addr16 in sbb popf jae lods stos mov mov in pushf enter mov inc repnz add push pusha mov int sbb xchg mov lock cs fdivr aad loopne lahf bound mov jo push lret std call in sbb xor jecxz int dec lret dec js loopne hlt push push testl xchg sti aam aaa gs cmpsl cltd adc sub jae or pop mov pop testl xor cs push mov stc cmp (bad) xor into mov aam mov xor gs icebp jle int and stc scas sti jno mov mov sbb aas ljmp push sub ret imul or mov or bound cli push idivb cld jmp test jb sbb pop cmp or pop clc adc inc test test mov lods imul rcll movsb dec mov cmp mov out sbb out test and xor ret (bad) fnstcw cltd dec cmp icebp jne mov add scas xchg (bad) xor out insl add stos mov jl fisubrl nop shl and mov or les push and mov lcall lret jge clc sbb pop ret inc xchg or cmp gs das in add sbb loopne enter sub lret adc mov dec dec int stos out inc push inc inc in and mov cmpsl xchg inc int pop push out lret sbb mov repz in fstps and cmc std std mulb add out outsb add and fsub movsb popa or subl xchg cmpsl ja sbb ret (bad) dec or aaa test cmp inc aam daa inc adc call scas out roll (bad) lea dec enter xchg jge xchg cmp cmc push stos or mov xor sub insl data16 fidivr or or and inc test mov pop jbe (bad) jnp das out jmp mov jb,pt pop (bad) ljmp cld cmp mov mov jmp out mov fnstcw push jle lds pop mov xor mull xor push shrb inc insl out jp xchg daa xchg insb mov push pop fincstp lds aas jno and dec xor (bad) and scas jecxz mov sub (bad) and sarl and lret daa add push hlt jecxz dec fcmovne pusha insl sub mov cmp mov frstor rcrb xchg mov jns add int test fs push jge loope jge enter lods cltd and mov inc jae aas (bad) mov and outsb jo insl stc aad jmp repz and rcll xchg hlt xchg repz mov push ffreep mov xchg fs and xchg adcl push lock dec push int lret (bad) mov fistl insb ret push xor jmp push inc (bad) mov test cld shrb mov popa outsb sbb xor rorb mov cmpsl jb data16 mov scas sub loop imul das lods ja lcall loope xor inc inc pop jl lea push lock cltd cmp mov or (bad) or or dec or mov xchg push mov mov push cltd jmp sbb xchg jge fwait adc scas out push xchg xchg push jne jge push mov outsb jb outsb pop xor xor fwait mov bound xlat cmp pop repnz xchg es and xchg out popf jmp (bad) mov add xchg (bad) jecxz int3 xor sub adc setae or sub mov roll adc push outsb scas pop aad cmc test push jnp mov adc cmpsb mov fnstcw mov and pop add jl xor xchg lods jae aas mov adcl lahf mov mov mov jb (bad) lret push vmread in xchg test icebp (bad) aas pop dec out mov icebp or pop pop adc scas std mov mov pop xchg icebp jge ds test push dec cmc xchg (bad) iret int3 xor and mov ret inc das loop pop daa jnp pop aas push fmull fistl mov xor loop push add pushf repnz in ja rorl pop stc jmp (bad) ja ret and dec pop fucomip mov outsl ret push jge cwtl cmp and subb xchg cmp mov stc roll sahf cmpsl fcoml push fidivrl movsb xor cmp out inc out adc mov mov add mov paddsb lret pop iret dec in xchg mov test xchg addr16 out cmp in xlat adc sarl das call pop pop or or sub aaa cmc ljmp add orl pop jno aad cltd xchg cwtl movsb jnp leave in aad mov daa mov (bad) mov push out rclb pop fildl lea faddp sbb add pop lods and adc loopne,pn imul xchg xchg test aam icebp jno sti jne pusha movsl pop les xchg sub mov pop out mov hlt icebp dec rorb (bad) ret mov xor xor cmpsb jge outsl push mov jecxz lds mov jno repnz push fistp in mov fnop popf inc and push jns jb ficom (bad) rorb jnp jp ret ret dec push sub mov mov js cmp es movsl inc aam fimull and lds mov add xchg adc cmpl add test pop out pop cmp cmp xor leave inc xchg (bad) mov mov xor nop add dec inc mov add and mov es pop mov sbb cmp fmuls xchg dec cmc test mov mov xchg push push fidivl aad pop out jns push loope sti fs adc js loop jne or push adc xchg arpl outsb loopne rolb adcl ss inc jp aaa stos addr16 inc call aaa fsubrs and push std dec push ret rolb add scas subb loope xor rorb sub xor mov fistl fwait les push insl lahf sub loopne pop insl adc mov out fdivrs popf rcrl push xchg (bad) aad rclb dec data16 and lock xchg gs xlat pusha subl cmp out cmp jmp rcrl jnp dec lods repnz (bad) iret push ljmp bound sbb fsubrs add cmp inc ja je mov int3 cwtl add inc pop mov movsl ss add xchg adc out cmp or sbb mov inc clc hlt nop pop shll pop and (bad) out xchg add rclb int fimull es pop aas nop fimull add js addr16 mov pop dec in sub imul pop inc icebp xchg imul lock add out std xchg cmp shrb add ljmp test adc cli push sub mov mov das push sbb xor push sahf push sub sbb xorb test out cmpsl push into ja cli add jae scas add or and mov adc jle adc enter push lahf inc add fstpt mov and and mov sbb int mov jle add xor icebp (bad) sub add xchg gs out sahf int cmc lods test push mov (bad) adc xchg adc lds push inc test in mov inc adc fst int in call mov mov mov jge addr16 cwtl cmp fisub mov xor fiadd imul jae lods sbb mov shr inc push xor mov out stos jne sbb (bad) jne push (bad) leave add jae icebp inc or cs hlt cmp mov xor inc cmpsb popa sub pop or decb cmp cwtl into mov lret sub jno lods inc mov pop gs mov frstor inc aas cmp mov scas mov mov mov xchg push xor (bad) imulb xor mov xchg push es in pop jno iret imul inc mov push mov and pop push cmpsl mov mov jbe push or jmp icebp xchg aas aas mov shll xchg inc pop fisttpl cmc mov sbb sub jae adc jle sbb mov incb xor lret sarb imul dec adc xchg lock dec sub jno fwait push jne (bad) and xchg faddp and test jne fstpt xchg mov pop sub out push sub dec cmp pop movsl add rclb sub repz cmp or movsl (bad) aad ja insl aad leave pop or pop test (bad) aas icebp (bad) or lcall stos int3 pop popa inc dec sti cwtl dec pushf data16 addl push loop dec add sarb mov mov stc sbbb jmp call inc push (bad) cmp lret loope or nop cmp ja add cwtl mov and ja sbb cmp add jbe sub lcall scas loope (bad) lock sub lret aam sarl cmpsl push jmp push dec mov mov inc inc stc xchg std cmpsl loope,pn xchg stos inc jl (bad) addr16 mov imul fwait imul int mov cwtl jb mov inc ret mov out mov lret ret fldt ljmp xchg out scas mov push loopne jl mov nop das aam xor dec shlb insl lods pusha mov leave cmpb out adc and adc decl mov dec sbb add sub movsb insb ja pushf fsubs mov dec pop and adc sub scas loope faddp repnz mov mov int3 popa adc aam (bad) jl mov lret shr ret sbb xor fisttpl xchg adc mov or mov jae xor push aam adc pusha loope das (bad) leave cld test dec gs stos cltd pop mov xchg inc lock add push add mov jnp xchg popa xor xchg xor outsb or dec sbb xchg jg lcall insl nop cs push popa idiv mov add inc aad imulb push jns inc xlat in les mov aam sbb popfw dec xor push xor dec inc mov out mov jo mov pop jae (bad) xchg xlat ret mov mov xchg adc mov sub dec into xchg and push sbb jno aaa push xchg adc (bad) shrl inc inc movsl (bad) mov dec mov js dec leave push cmp (bad) lea inc mov jl pop jmp scas inc mov (bad) cmp xlat xchg out (bad) shlb push cld jae mov push fdivs loope aaa add mov push stos mov inc cltd adc int jecxz mulb or add icebp or cltd (bad) addr16 dec jns push cmp loop jl jbe mov outsl mov cmp sti fsubrs hlt addr16 jne push push fimul aaa dec repz or lcall lds fldenv or loopne xlat cld sub lret jb and xchg lret lods xor arpl sub push (bad) cld out cmp or outsl fadds lahf fldcw int push sbb jp xchg pusha outsb flds icebp xor and fistpl xchg test xor ret lret add mov push jp (bad) cs mov mov sub or fwait or hlt xchg xchg sbb clc pop and loop xor (bad) or sbb dec iret push cli xchg pop jne inc or mov xchg enter mov je mov (bad) sub fistpl mov dec mov add lods movsl xchg sbb mov mov clc add call push add fwait out xchg and xchg fisttp enter jl dec mov push stos xor and and ret sub sbb (bad) lods and mov test cli cld pop aaa xchg fwait pop outsl xchg add cmpsb shrl mov decl faddp movsb sub lock jle add (bad) xchg add mov inc xor call insl inc sbb or leave push mov add out cmp sub adc fld arpl mov jg dec push jb inc cs stos xor cltd xchg mov movsl popf sub pop cmp push and xchg scas mulb mov dec hlt push fwait loopne (bad) ljmp cmc xor sbb push dec jno and pop aas pop mov or pop inc ret aas mov jo cmc (bad) inc mov popa sbb sub cmpsb mov sbb (bad) jo (bad) cmp pop iret adc in fwait xchg bound add dec aam sub mov push nop jns xchg dec movsl add ss imul jae rcrb pop mov jno loop test popa add test js cld popa call faddl in or xchg scas (bad) jb xor ljmp fistpl xchg std sub pusha jae (bad) negb fimull icebp imul xor cmpsl jmp (bad) dec loopne subl test pop test jge xchg xchg add loop movsb jp adc sbb hlt hlt push or aam mov pop add lret jecxz jbe cmpsb push roll test insl push mov in and aas jge xchg and out mov arpl fistl cmp js jge negl sbb and ret mov test mov (bad) jecxz insb cmpsl push inc xchg test jns cli jl push notl aas movsb in clc jne xchg cmp js in repnz mov xchg xor mov out dec jo mov or push cmpsl inc stos xchg mov scas sub sbb pop insl lret imul (bad) loopne jbe or dec mov (bad) jns xor xchg fnstenv outsl sbbl cli inc and jg lea mov test aaa inc mov popf imul ret adc aam (bad) fisttpl mov xor mov and sub sub mov inc cmp leave fcompl dec arpl (bad) mov movsl enter sbb sbb clc xchg pop dec add mov adc fldl scas js fs mov mov pop dec add (bad) hlt dec cli mov jmp icebp lret fs pushf in dec fwait clc leave or cs xchg stc and stos pop or ds mov adc or jmp or icebp jne sub xor dec xchg outsb leave outsb ret adc test pop cmp and and mov mov pop push xchg repnz arpl mov mov push arpl pop push lock jo and into daa xor adc xor pop push mov or in jnp sub fwait pop (bad) sbb ljmp sbb or sbb lahf ja (bad) outsl in push mov repz or lret dec mov rcrl scas dec jecxz aaa bound fidiv push push push mov rclb subb add mov xchg js imul add imul cmp add test inc sbb jmp cld jmp dec mov and imull sub sbb xor cmp cld repnz xchg subl lea sbb and mov jp inc int adc movb shr aas lock or repz mov sbb dec add hlt mulb sarb scas add ret pop jb sbb movsl clc je scas ja (bad) popa or sarb sahf (bad) jge aad std push jp (bad) mov (bad) imulb or das add xchg aaa mov ljmp fisubrl push rol xchg cmp mov or lcall fistpl shlb push mov in mov cmp vpmullw jmp leave out arpl xchg shll sbb leave aaa aaa aas xchg lret or out test (bad) cwtl push pop add push mov jbe mov dec mov add lock or adcl inc mov pop into (bad) lret out jecxz sbb sbb cmpsl hlt sbb (bad) and (bad) fdivrl fs push push imul (bad) xor into jl ljmp push dec dec stos aam mov and out mov test xchg mov (bad) (bad) lock dec cli adc stos ja (bad) out mov adc ret push push int jg negb fbld in stos jmp pusha popf inc mov mov adc mov xchg loop inc mov rcr inc mov mov lods popf (bad) stc push rcrl pop jo mov pop repnz adc and push jno mov xchg out out rolb dec cs scas cmp or sub adc stos sub mov mov push test jg mov jle out mov ret dec push adc sbb cmp push popa insl std xor sbb orl loopne xchg dec gs rcrl fwait add mov insb jmp pop push xchg in imul int3 cld and ret iret ret ljmp out test mov clc imul mov sub add cmp dec add inc out cmpsb cmp fbstp stc mov adc cmpsl scas mov mov scas cmp std pop adc sbbb ds xchg mov aas int sub cmp jbe jnp int3 or push aam and adc fs jo xchg jo stos dec add negb add mov daa leave fbld (bad) and push dec icebp adc xchg aaa jge and lods and ja aam andl and push dec and in ret push push xlat pop lret or lds push into rclb rcll cmp cltd jnp push addr16 ja lret mov mov mov enter arpl pop std imul adc stos jae lea fs js rolb xlat push and (bad) jbe pushl divl idiv inc icebp aad sti xor cmpsb pop mov and (bad) mov and mov xchg mov stos pop pop xor sarl fdivrs lods add fs jb xchg xchg sub cmpsl hlt scas sub in jo or mov bound pop test jle xor sbbl aas icebp pop mov push xor mov les addr16 ffree adc (bad) test rclb cmp sub jg xlat pop xchg rcr push lds andl cs clc int xchg adc out bound xchg fild mov fiaddl sbb loop push lret movb mull push jnp cmc mov ds mov jecxz push or dec (bad) lock or dec inc xor and mov (bad) xor repz xchg inc ds idivb in fstps cld and sbb sbb mov jmp je mov cmp and and lods pop push in mulb (bad) mov push or sub shlb out push outsl mov scas push adc xchg or mov and push popf pop jg adc dec jae cwtl loop scas xor inc add adc or dec test cmp stc fs pop and mov sbb xchg js xchg loopne lret inc (bad) repz loope push fisttpl lock jp nop push repz (bad) jg es xor popa ljmp pushf add pop movsb iret jo mov jb add or fistp movsb mov jle or inc add mov mov js mov jg fs push inc out jae pushf mov popw lret test jl insb mov pop in xor push gs jnp mov lods mov out adc lcall add pop pop aad and repnz ret cmp xor or icebp nop push mov rolb jp xchg nop xchg jle pop jp fdivl in (bad) hlt or aaa cmp mov ja and mov fisubrl mov jl pop lea cmp xchg test push lods and cmpsl adc mov fistpll dec cld mov mov outsl inc cs dec pushf aas xchg jecxz pop dec mov movl and idivb jg sub add or call scas rolb repnz sbb imul sbb or or sbb inc push js and jg ljmp imul les or sbb xor dec lods inc lret incl jo mov or inc ss adc aaa mov lret call sti xchg fs loop clc push adc (bad) cltd cmp lods shrb mov xorl shll popf jo add cmp into cs adc xchg popl fldcw hlt inc mov in or mov fs add and dec mov stos adc sub jne pop mov mov pop out enter xchg fdecstp jmp push ret pop cmp es inc pop mov xor pusha push pop jge (bad) int mov pop (bad) aaa adc loope mov scas out inc das push mov push mov insl add push cmp sbb push jl sti pop insl mov push sbb and push dec iret das (bad) int3 jnp dec jb daa push and cmp push jecxz bound call sub fs js mov imul xchg cmpsl mov cmc mov ss xchg mov dec rorb push cmpsl outsb subb fdivrl bswap jbe shlb or sub mov call pop xchg mov xchg shr aad inc test call subb lahf mov mov xchg (bad) push or movsb mov repz sub cmpsb ds mov ror mov dec in cs pop cmp addl loope mov pop clc dec jno cmp push adc jns rcrl int or mov push movsl scas add rol mov call inc pop int mov cmpsl mov pop scas cmpsb in call div pop xor jmp cmp sub (bad) (bad) cmp shrb bnd jo loope pop leave push cwtl adc sbb popl pop aad xor pop jl ss cs out xchg lea dec test (bad) jmp fs mov xchg lcall xchg (bad) mov push clc pusha cwtl es mov mov add jge xchg pop and fisubl fidivl mov cmp mov sbb fwait jecxz push outsb mov stc dec push nop sub std push pop jno std jl and or ss push jno inc sbb jecxz (bad) adc hlt inc cmpsb icebp test int daa lods mov fisub rorb add mov jg lret pop mov push pop sbb loop mov inc frstor int lods sti push dec cmp sbb popa int3 mov or sti cmpsl fistp icebp daa jbe mov inc dec lods lods mov rcr push test decl imull add addr16 pusha std xor xchg push mov push (bad) gs hlt stos test (bad) mov cld inc inc jge mov xchg cmp ja in pop sahf aas xor cmpsb sbb and xor ja pop insl or fidivr loope sub shrb inc movsl mov fsubrl sub xor adc mov xor pop imul dec xchg xor mov in test outsb pusha lret loope (bad) jae add cmpsb pop ljmp cmp push jne loopne aaa or sbb lea xchg inc mov clc mov shlb push fcmovbe sbb adcl nop mov stos cmp mov fwait pop gs and and cmpsb in cs gs cmp push push add ret adc adc pushf ficoml shrb mov xchg ja pop popf out xor push js repz push insb pop (bad) push mov fs ja rcr and mov jp es int loop jne adc hlt sbb mov test push or mov sbb and addr16 jb (bad) in cmpsl sbb scas pop push cmp sbb xchg sbb stc cmp in xor bound push dec cmp and cmpsb call lcall mov push jge ficoml pop jno je xor push inc jae in cmp jg ljmp add sub jbe popf mov div add push pop fwait imull mov rcrl and arpl jmp jne xchg clc cwtl int3 push cmpsl sbb xchg inc (bad) cmp adc loop rcrl (bad) adc outsl int3 and test sub fnstsw mov bound mov gs test xchg sbb xlat xor cmp cmp push or scas nop jmp out iret or sbb cmpsb dec and movb ss int3 fcomps sub (bad) loop sbb rolb pop inc or mov call lds push cmp push cmp add out mov and inc xchg pop xchg fs (bad) icebp mov push xchg or addr16 aas sbb cmp leave ficom xor int push mov dec push jl pop xchg fmul fsubrl xor push cmp sbb xor mov push lret add mov xchg js adc (bad) pop out pop out jae scas dec (bad) (bad) cmp mov loopne incl daa jecxz (bad) icebp dec sbb fmull xchg cltd cmp insl push jae mov shrb pop mov inc mov cmp rcll cltd fmull cmpsb ret push adc (bad) (bad) sarl rorl jl lahf inc (bad) fidivr pop cmp push and sub nop push push sti iret (bad) icebp cli or add in dec insl into test out add sar mov movsl ss or mov add in mov pop fstl mov icebp adc (bad) repz mov and (bad) loopne lods and jecxz xor and dec inc ficompl scas sbb mov mov repnz mov jl test insl outsl mov loope fnstenv mov mov xor lret adc (bad) and push push fstp sbb xor loope stos out mov cmp ss pop mov dec xlat cmp outsl jg xchg jno popa sub adc out and out jp xor push movsb jle ret jnp cli cmp int fimull mov and mov sub add mov add fsts inc mov jmp push (bad) mov lea cltd or cmp lret (bad) xor cmp js xchg sub or jge or int mov repz mov insl push fidivrl xchg cwtl popa out jne cli cmp cmp lret inc add xchg lock adc test jae stos js scas into pop aas lea push jp int and push lea sbb push xor pop das aaa rcrb call js js push dec shll movsb icebp in enter mov jae pop mov repnz mov xlat loope cmp or mov xchg mov mov mov out movsb ja ja adc das push add ds xchg call xlat out mov sub sub mov inc fild inc xchg dec sbb outsb xchg iret pop fsubl mov xchg or (bad) xor lahf sbb or pop inc movsb xor dec xchg clc test push dec push sub cwtl push cmp mov mov stc mov icebp insb in inc je shr or inc mov hlt jbe out mov sbb mov jbe fwait rorl sti fs les jecxz or bound (bad) cs pop lods shlb sbb pushf fcmovnb shll je adc inc negb xchg inc jge or dec push xor mov leave dec xor sub fwait cmpsb ljmp cmp xchg shlb push jo (bad) dec jns test cs loope aam outsb sbb pop cmp fstl daa aam (bad) sbb inc (bad) inc xchg repz mov subl mov or movl lock pop add jns adc sub sbb arpl or jmp cld add mov lods arpl mov and add ja add idivl lret push jmp cli lock mov cmp add push into dec inc mov cmpsb shrl cmp xor out test dec xor sub dec inc ja jns sub xor jle inc push sbb lock imul arpl popa jecxz add insb pop into aam lret jp mov xor mov sub aad push pop js dec pushl add repz dec dec es fidivr aam adc xorb (bad) adc xor push sbb into clc stc movsb mov pop mov and mov cmp and loopne,pn pop movsl sub insb and push (bad) mov fmuls jnp fs pusha add push fisubrl iret jbe lods xor jo shr pop or and pop adc mov lock xchg or ja js pop (bad) insl dec in test sbb inc notb add cmp mov cmp in cmp push mov movsb fwait dec es push jp (bad) xor sbb push repnz (bad) daa test xchg fildll sub scas in or jl ret lods sbb jb pusha lods gs jecxz cmpsb divl push adc lea jno,pn pop and loop cmp pop leave mov mov out xchg xor cwtl subl jnp loopne push mov mov sbb add sbb bswap popf cmc leave stos or jns mov xchg inc xchg sarl pop or jp (bad) xor dec cs adc repz cmp sub scas mov jae jecxz scas or push or cld mov sbb dec pop dec xor pushf (bad) cmp (bad) jmp mov inc lahf das or xor sub mov clc push std xchg push mov js xor mov stos faddp pop in sbb (bad) rol scas xor sahf or add in jno xor ja iret lret pop mov jo icebp sub cmp cmp sarl ljmp imul in arpl dec fsubrs xor cmp inc imul fisub inc fdivr xchg out outsl mov scas lret and xor (bad) repz pop outsb push adc mov pop lea enter rcr add enter out push fs mov xorl pop leave lahf out add imul inc hlt pop fwait (bad) rcrl mov dec mov bndstx ds test or int je xchg add es jne (bad) dec xorb fisttp mov xor jno dec mov push add jge cmp and ret sub fbld xchg out clc into imul rcrl cmp mov dec mov dec mov (bad) int or sbb enter cmpsb ret ds (bad) movsb ds lcall push mov lods lahf mov addr16 test pop or cmp stos pop jnp rol mov pusha sub pop mov orl aad jne sub fs test jo jmp jne loope (bad) jmp or push xchg notl cmp into repnz adc add (bad) in jno arpl adc dec sti fcoms fs push sahf pop repz leave out adc mov push stos pop aas sub pop mov dec inc inc int arpl bound sub adc out arpl lea cld aas pop fisubl mov fs stc clc xchg cmp pop mov pop daa sbb jns xor add cmpsb mov cmpsb dec jae adc sbb lcall stos insl rol adc pop sbb ljmp adc sbb jae std sbb sbb (bad) pop xchg (bad) jle pop imul xchg push lods daa push repnz push (bad) in pop sbb fdivrl sbbl jmp fwait call stos add push repnz data16 mov sbb mov out add push in stos lcall and bound dec xchg shr ja pop std pushf xlat call mov mov pop cmp pop push add movsl sbb int xchg cmc imul (bad) in loopne bound or stos mov mov jne inc add sbb pop push or lret divl jne cmc add mov push dec push xchg mov add mov jmp and sub loop sub jnp iret je and inc call leave jg into push pop outsl in stc lahf ss outsl std xchg mov inc sbb and jl sbb stos mov ja hlt int3 inc sahf rcr lcall push xor xchg je cmp lds mov dec xor and rorl sti xchg mov dec test out pushf mov loope in loope push arpl xchg add pop jl jbe adc push mov adc adc pop adc mov cwtl lcall pop in (bad) cltd and lock out mov jl loope imul add inc outsb (bad) mov pushf shrl sub and inc xchg aad xchg leave xor movl and cmp cmpsb pop inc test call cmpsb add sbb divl add dec mov push sub enter stos outsb push mov cmp sbb jb mov sub aam mov jg xchg push aad mov cmpsl sbb loope mov fucomp stos fs mov (bad) cli int3 jmp inc push fisttpl mov mov cmp push iret pop popa mov and es add or ret aad adc add dec not lcall imul sti and pop cld jb sti (bad) movsb addl pop pop push and clc xor scas jbe adc mov (bad) mov and pop loopne xor ficom push xchg pop jecxz aas loop mull cmp or jae popf stos jae nop add (bad) negl sbb mov fmuls cs jmp sbb sub push mov adc mov (bad) and cmp (bad) mov fsubr jl mov out mov mov lahf sbb push cmp mov jmp aas pop inc in data16 in stos addl aas jno cmpsb cmp or xchg mov sub xchg pcmpgtb out and (bad) cltd mov mov sub push mov jb xchg test inc sahf cmp (bad) or int3 pop add lahf mov mov jecxz insb pop jle sbb fdivs faddl sub das mov shll add or add push mov pop ds stos iret mov push cli or cmc xor pusha or push in mov aaa pop cmp sbb fdivp hlt and mov ja popa mov push cmc inc jge cmp push das cmp lret push cltd add inc or adc imul fstpt sarb mov ret imul scas mov or push jo,pt fisttp test (bad) jmp fiaddl sbb (bad) dec mov rcll sarl mov outsb push jecxz lods addr16 aas aaa popa stos arpl xchg js add jl mov push add in lret rcr mov mov cs mov xor and pop mov insl inc cmp lods lret cmpsb inc add gs ficomp inc sbb inc or mov in cmp xor or jbe add (bad) xchg jne ret in pop popa jge cmp jo outsb push or (bad) and mov scas add sub clc (bad) sbb cld ret aad pushf inc cmp outsl data16 fsubrl leave fstpt pop lcall push or inc test mov dec es push repnz dec movsl mov push imul into mov shr lret sbb cmp push stos jno adc or mov and stos cld fs jo cli cmpsl xchg sub insl sarb std imul push cmpsb xor fs scas mov (bad) aas push enter fimull push in mov loop loopne push or jno mov push fbstp jp sub test xchg push or icebp mov jnp xchg add sub mov or lret add push xchg (bad) (bad) ss fs out pop mov rcrl xchg push das sbb fmuls aaa mov ds jp fbstp xchg pop cmpsb adc daa adc andl xchg scas and jl loopne pop aas sub sbb lock mov fwait out into mov js arpl sub dec cltd jecxz icebp sub dec sbb sbb cmp enter jle hlt iret lods cmp mov ret fstl and mov loope (bad) in arpl pushl jl adc je add or mov sub push std mov test mov mov fisub out bound int nop enter sbb repnz adc icebp jne cmp push sbb lret inc pushf xchg cli inc inc cmp mov or cmp fdivrl imul test add fdiv lret ljmp pop mov xor leave out sub cmp xchg scas inc orl mov cmpl clc bnd mov mov xchg test icebp xchg or cwtl pop enter test xchg sbb test cmpsl xchg das jecxz jecxz jp fldl int3 mov mov adc sbb pop data16 sub aas stc fsubrs nop mov hlt mov inc add aam stos push fisttp call ljmp xor ja dec out aaa cmpsl out push cmc in cmc xchg or and aam scas es jb scas sub mov adc sti push push test or cmp cmpsl in sti fidivl in xchg das pop jne add (bad) xor scas fcomps inc lods in (bad) cmp mov fdivrl sbb adc jae (bad) gs test mov in loope xchg jnp push into mov int3 jo xor and std notb mov test aaa mov sbb enter jg mov jns andb lahf dec aad repz js and pop ss hlt aad js jg mov clc hlt subl (bad) ret frstor mov lods xor movsl adc pop xchg shrb fiaddl add cwtl aad insb pushf fsubrl aas lea scas test fs pop jl pop aas enter repnz mov shrb and xchg add pusha push jb push das iret add pusha gs ss add sbb mov adc test stos lcall lcall xchg fcomps cmp and aas and test adc aas jg pop (bad) jl lcall cmpsb mov fcmovu lcall push and fisttpl mov mov inc repz lret ret pusha xchg mov xor imul xchg mov cmpsb pop jno jecxz cltd es lea mov pop xchg push pop ljmp add insl pop jecxz ffreep push daa pop adc clc ret pop neg inc pop imul ret add pop push outsb notl or int clc and (bad) (bad) addr16 xchg sbb mov dec icebp sbb (bad) in dec addr16 popl mov or pop jmp sahf stos scas daa int3 sub outsb stos movsb fwait aas mov test mov xchg shl mov in in xor or mov xchg pop xor ds push adc pop daa pushf (bad) xchg enter xchg loopne ss loopne pop xchg xchg (bad) aad cmc mov and stos mov pop (bad) rclb pop or fadds sbb mov loopne inc lods sub ja dec inc mov mov cmpsl dec lahf sbb pop or mov cmova fild pushf cmp pop aaa test mov push inc add add pop and sbb xor or pop pop scas xchg (bad) and movsl jle or mov mov (bad) jmp jo pop aam imul sbb sub adc loope loope pop rolb jo pop nop test pop dec rcrb adc xor icebp fsubp inc push movsl ret add in mov icebp xlat mov in jae xchg mov cmp sbb jmp (bad) lock out mul cld xor mov mov (bad) out and test (bad) lock imul jle shr lock out push xor mov push xlat lret sbb jne dec mov dec aad outsl dec scas movsb loop and inc jne movsbl inc mov into cli mov lods aad sti jle inc push (bad) xchg inc fs ljmp and stos inc mov stos push and push or jecxz cmp mov mov pop xor (bad) dec sbb lcall mov xchg sbb xchg das pop pop cld mov mov push cmp notb mov pop mov stc adc mov push imul cmp sbb cltd rorl je lahf popw push push cmp bound inc lods das xchg inc add adc mov pop pop pop bound cmp testl repnz notl sbb jmp cmpsb push clc nopl enter pop icebp rorl push and subl jne or pop inc cmp shrb cwtl pop xchg in push push mov cmc fs jbe mov aas pushf (bad) cmpsb mov jl sub sbbb ds insl in jp popl cmp jl mov loop enter xor and addl jnp mov fstl inc fdivr (bad) adc inc xlat dec (bad) int3 (bad) lret or mov pop test dec jb sub pop cs jb addr16 xor dec or sbb add (bad) jb in and mov sbb stc test fsubs mov add xor jmp dec (bad) rolb add sbb xchg inc mov rclb jnp sti or sahf pop add or mov fidivl or add cmp inc or push cmpl pop js mov lret jle sbb les and std idiv fs push sub arpl loop xor stc into jmp cmpl clc add sub jge popf cmp fs pop test dec push xor push xchg mov or iret fild push clc mov icebp subl push cmc inc or pop push and movsl mov test dec (bad) cmpsl add mov xchg jmp fimul (bad) (bad) rcrl push pusha nop aaa mov sbb mov cwtl arpl popf push jnp mov xchg mov push sahf and push mov cld out mov cs and xlat adc lock and sbb clc jge imul xor repz call leave mov ds and xor cwtl out push data16 and mov sbb les mov mov add test jl sbb popf xor movsb aas (bad) pop and adc jbe push aad add or leave jno fcomps xchg mov into push aaa jb or data16 sbb and ffreep jae mov dec dec das dec dec idivl hlt rcll sbb out pop add mov iret push inc loope jae cmp pushf adcl xor hlt jle cmc scas mov sbb rolb and enter adcb out repz xchg in add sbb dec jae push dec jle jecxz xchg cwtl js or mov xchg mov lods xchg adc ss cmpsl mov adc outsl imul (bad) xchg jecxz add rclb fs (bad) lcall ja cld repz sbb xchg pop mov cld popa bound pop and mov sub call jne pop jbe fstps jg jl mulb or inc cmp icebp xorl out enter fwait dec sub cmp pop daa (bad) and (bad) xchg xlat js and pop cmp or in mov iret ljmp sub pusha imul push dec sbb dec xorb mov mov pop jmp jno (bad) push xor push push sbb ret cmp add pop mov lods test ja lods push addl or (bad) lods add es inc push out insl test aaa inc aad mov rcr mov lcall jl xor aad push aaa or out push out pop fcomi push outsb lea insb add mov into sbb sbb push rorb and push add inc fs ret jmp fadds cmp dec sbb inc faddl faddl mov call aam push push lds pop lret xchg ret jge lds and mov xor mov int3 mov pminub jecxz in (bad) int (bad) fldenv imul add insl jge sbb jns clc and cmpsl or imul mov push lahf nop adc pop mov imul lds adc mov lds add adc mov inc int3 xor push mov cmp mov jae push dec cmp ljmp dec repz sub inc mov jne adc ficoml dec lret and inc and adc and cmp std xchg aam xchg cs inc out mov inc mov mov push rolb mov dec loopne dec scas mov cmp mov es (bad) ja insl jle bound xor push mov xor insl mov inc aam and jbe mov xor sarb adc ret xor (bad) pushf test js call rorb cltd pop (bad) or (bad) xor cmpsl inc push push bound or mov daa or mov or sub push repz xchg push mov push mov aas pushf aaa cwtl in mov or sub lea sbb repnz pop getsec or dec xchg movsb enter adc sbb ss push gs add add adc adc xlat iret test mov mov je mov insl test sub jmp movsb inc sbb ja dec pop stc mov cli mov add idivb xchg or into stos popf adc fnstsw push negl cmp push lock sbb mov adc mov dec push jbe scas add pop push shrb or lock test xlat pop mov les iret call and pop sub repnz cli test or jb outsb sbb mov jmp sbb ds shrb (bad) add adc adc sbb (bad) addr16 xchg insl shrl faddp pop pop std sbbl movsl addl pop mov ja jnp ljmp xchg lea int out mov xor mov push fnsave sti (bad) decl inc add inc inc movsl and dec add lahf ja mov loopne push push mov cmp jp jecxz add jecxz mov es movsb mov push sbb inc cmp pop test push mov sbb pop jge popa jne movsl dec (bad) push clc jbe mov sbbl mov dec add dec pop pop outsl aam imul idivl insb stos in in lcall roll xchg fdivrl mov in cli adc push andl mov aam jl mov pop test mov dec mov (bad) xchg aad faddl cmpsb fisub das jp daa lock test pop cmp inc jmp (bad) roll push inc data16 mull enter clc dec fsubs mov test cmp cltd xchg insb xor cwtl cmp cld add loope pop sub sub mov push sar scas out mov mov gs pushf xor incl mov pop stos test ljmp or mov insb das dec mov sbb xor clc shrl cmp dec jle fcmovne mov leave inc nop mov mov mov and or cmp inc xor ja sbb loop mov dec jnp xchg and inc rorl push dec mov and add dec mov ror loop add repz push sub shlb jns mov nop jp cmp nop call lret push (bad) jp dec iret fs add cld sbb mov addr16 sti fsubrs test in cld or add popf jnp cmp ret or shll repz test imul ja push mov iret push mov xor movsl push xchg nop (bad) mov adc loop push aas cs cmp cmp roll test movsl std ljmp fninit push sbb fnstenvs jb sarb mov pop out jle mov call ja lret add ss fnstcw or ret xchg cmp nop lahf pop sub lock cmpsb rcrb push das mov pop repz add outsl mov inc gs dec fldl inc and mov mov test ja push or clc add fldenv pop xlat jl pop pop test iret out leave int incb mov mov (bad) cmp xlat (bad) mov test std ja bound std int (bad) jp sbb jae inc loopne sbb rcll add mov rolb or es or or cwtl pop aas clc scas inc andl and push push fistpll add in jecxz fucompp pop sbb int3 push add pop pop pop pop leave pop lock dec std dec (bad) sbb (bad) repnz push cmpsl outsb sub out std push ds pop insl cmp jg test cmp in dec dec sbb into imulb push std stos mov mov out test pop push iret das les pop popf mov or sub mov dec pop cli ja clc lods movsb jg imul (bad) jl jo mov and cmp jmp pop pushf xor jae sub mov in std pop and popa push sub (bad) icebp push push and push push cmp lea push sbb cmp scas shl xlat or clc test ret cs push es (bad) (bad) mov rorb adc repz mov ret pop movsl jnp and mov (bad) push mov (bad) xchg xor insb adc addr16 cmp insl push and push sbb aas or or sub cmp (bad) gs dec mov xchg and push (bad) dec call test scas outsb xchg push dec jb dec arpl repz ljmp in sbb fnsave adc pusha pop out adc fldl ja fwait subl cmp fimul pop push mov push push or repnz icebp cltd push push cmp popf icebp push inc adc loope ret out sub xchg and sub (bad) popa inc xchg (bad) adc xchg aad xor inc int icebp jge mov es fidiv jge enter add pusha cmpsl (bad) divl repnz es ss fwait pminub pop push (bad) pop adc jp outsl in xor push push inc mov inc push packssdw aaa mov dec pop inc or vcmpps inc test out xchg sbb (bad) xor push test push out clc aam and es in jns (bad) lret mov in cli xorl xor pop xchg addl dec mov xor fwait scas jmp in movsb mov into adc outsb mov add push frndint sti mov pop leave mov dec mov ret aas push out xor movsl jns pop pop fstpt test call (bad) cwtl xor outsb mov sub adc (bad) sub mov scas adc mov pushf jb fs mov das push divl int3 push mov je xor insb outsl movb ret mov pop popa add jge and sarl loope lret dec pushf push sub in test push hlt fwait popa and push out loope ret push int push add inc aam mov lods icebp adc in outsl xchg xor add jne push (bad) cmp dec cmp push popf xor adc push xchg (bad) sub scas mov mov scas std sbb push rcll popf adc sub loop inc inc arpl bound into out outsb jmp sarb mov arpl sub fcomp in push fs sub sbb xchg das test mov jns sbb mov rcrl (bad) and xor push ret add aas addr16 xchg out and lcall je mov sti les add xchg jbe popf lods cmp push mov test dec push int stos adc pop insl pop push pop lock mov in mov lods fdivrs adc sbb pusha cld sub pop add add xor sbb into (bad) loop testb xchg roll fld div cmpsl sarb (bad) out outsb ret loopne ficompl stos push add xchg sbb mov daa in in mov add push or sub call adc int pop sub rcr les pop mov push aaa imul orb inc dec or or movsl fldcw enter das js bound idiv fbld jnp movsl mov pop push dec adc xorl adc addr16 movsl mull or push shlb pop dec (bad) mov cmp push inc mov mov push loop cmp pminsw in pop jp cmpsb cmp cmp in popf sti xor pop cmp jge jmp test sub dec cmp lds clc lret cwtl lret arpl add aad aad ss into rcrb adc (bad) sbb dec mov lahf int lret loopne es (bad) or iret call pop je daa into xor cmp insl xchg sub add mov mov or jnp arpl push lret out xor repnz sub adcl jno add sti lahf lods cmp inc sti mov jmp out lret lcall push insl pop insl jns mov jbe scas inc fsub iret inc mov repz dec in mov dec mov fildl jns mov mov lret in sub sahf rclb icebp pop cs bound adc out cmc outsb popf dec add shll xor cmpsb fnstcw fnsave test adc js nop das mov mov mov scas pop xor repnz aas mov fwait add add (bad) std out jo sbb pop cmc mov jge mov (bad) xlat mov or jnp or mov aaa dec and inc and mov repz adcb sub stc dec cmpsb sbb adc movb pop jle lret mov jg imul fcomp fildll mov dec jmp jp arpl xchg sub cmp testb stos inc lahf adc enter fwait add into fucom xchg roll imul cmp or dec dec sub lret jns and imul out dec pop rcrl stos jge lock add mov inc jae pop mov xchg jbe adc divl jnp scas leave adc jecxz xchg or jbe xchg mov and lds addr16 divb (bad) adc sarl mov xor pop pop sarb xor repz sarl adc push adc int std in jmp push aad movsb sub stos lahf outsl adc fstpt inc dec cmp pop mov jno xor in pushf (bad) into andl push andl out adcl mov mov mov out jnp lret cmp call inc stc ds and (bad) jle inc adc (bad) push pushf shrb mov mov inc sub add test rclb out shrl in (bad) and aam dec (bad) in fcoml add push inc sbb les xchg inc iret sub or pop sub and in pushf sbb cmc xchg repz in add and cs sti cltd cmp jg jb sbb outsb shrl jne testb shlb fistp fsubs hlt in (bad) daa cli out pusha ljmp mov and daa scas shr or pop and adc in sahf mov push xor cmp cld sahf fscale cmpsb das dec push stos pop adc jns push in in outsl loop popf add (bad) lods inc cmpsb xor std mov inc bound repz divl int lcall mov mov dec jnp dec pop insb hlt inc mov push push inc jecxz ret xlat or ret outsl sbb cmpsb jle movsb or ret and fwait cmp int aaa pop cwtl aam mov rcrl rorb imul lods sbb mov cs dec xchg cmpsl shll aas push dec test mov or gs ss push add dec xchg cmp jnp sti jge cmpsb push pop movsl sub pop pop xchg (bad) (bad) rorb xchg and clc sub nop in sub xor ret inc cli mov jo jle cmp sbb std ljmp popf sbb jne xchg mov push sub or fidivr mov (bad) and aad inc shr xchg (bad) jg jnp dec xchg jae xor insl rcrb xchg lret sarb fisttpll and test ja jle xchg adc ljmp add bnd xchg cmp push repz jl mov adc xlat and (bad) mov outsb mov sbb jne ret aad mov mov xor mov pop lods fsubrs xchg je pop (bad) enter inc pushf cs mov inc mov push (bad) push outsl mov sub cs cmp sub or aad and out add pop or les or pop (bad) aas das fsubl sbb rcr jmp pop push inc lods xor out js addb lret and test test mov cmc cs push in shrl outsb push lds xchg and mov mov and xlat out sub je sti sarb push inc stc sub nop idivb outsl cmp test mov mov and pop and (bad) jae loope pop pop loope popa cmp loopne inc xchg test loope xchg (bad) inc stos ds arpl lcall pop hlt je sub mov mov jbe cmpsb pop lods mov xchg arpl ds (bad) or xchg mov stos xchg dec pop cwtl sbb in shrb int les mov xor sahf pop int cmp test aad and sub fadds daa xchg fsubs sub mov inc push mov adc clc push jmp mov dec sbb mov pop mov mov inc pop mov adc dec cwtl xlat fs leave sti je divb ljmp dec jge push jmp lret inc or jp pop (bad) xchg out daa jbe xchg cltd pop in jl dec lods call xchg into pop or mov mov pushf in adc mov pop xchg dec xor mov gs xorl fwait cmp add les xor movsl clc enter mov mov bound lods clc rcll test push out inc jnp pop xchg or add pop call scas jbe or mov enter ja jg aam push sub jbe imul push imul pop push mov cmpsb fistl jge aaa adc xor pop in jle xor repnz out clc loope andl sub push push jmp mov imul int3 cmpsb shll mov sti aad pop test mov nop (bad) push sub cld dec sub inc mov cld (bad) and push and push jns inc and jnp popa cmp cwtl xchg insl or mov pop adc and xchg mov orl js push xor outsl jno popa in std rcll fs pop cmp inc ss lcall sub xchg les movsl lcall int3 adc lds xchg sbb or and fistpl xchg add jle jb rorl aas aaa jae popf mov adc dec test inc pop lds outsb nop jno fstpl cmp js sub call jno iret mov loope stc xor jnp subl xchg inc inc mov add mov data16 mov push dec inc mov push jb negb out ret add bound mov js push xchg fsub js (bad) sub mov cltd and inc inc popf and fdivs (bad) jle lret mov sub mov or cld push cs insl in lock das push repnz dec fisubrl fnstcw sub xor lret rcrb mov ret (bad) (bad) push das data16 or js pushf adc pop leave xchg in jecxz and xchg pop lock xor popf jl (bad) cmpsl xchg jge ja jb mov jo add push or imul je enter notb sbb xor test cli inc mov pushf nop mov and xor roll cmc inc fbld pop or or mov push enter add popf mov lcall jnp mov aam sub mov or popa in adc jne cli fistl push and sbb dec popa mov jns (bad) jp and inc iret lea cwtl xchg lds mov ds into cmpsb test cld or fstl dec cmp or js jno pop and arpl xchg push enter xlat lods push xor sub pop adc pop test sahf jp adc or mov or jp inc mov sbb and cli inc mov loop pop (bad) jns sbb decl jae fistpll mov xor pop cmp shll jno leave pop idivb mov pop (bad) xor insl rorl mov and jb bound fsub (bad) jge stos xor sub xor adc sub mov fisttp jbe dec idivb lds fs pop les mov rcrl test outsl jmp jne cwtl lret rcrl int3 xchg adc pop and pop leave sbb sub xorl (bad) cmc mov aad cmp ja (bad) jne and xchg and std je sub fcoml add sub loop dec sbbl scas sub sub dec call fs lret xchg inc sub or add jge push js fldcw out nop (bad) sti adc mov imul pop int3 mov add cmp mov shll fld jo sahf push pop jb lock or xor inc mov scas push inc mov imul loopne (bad) sbb sbb lods fs sbb xor ds sub insb lahf int3 lods mov fnstenv adc pop sub daa push outsb adc and jo and or aam add adc push mov (bad) pop lods mov pop cmpsl jecxz pop nop repnz jns enter dec iret out daa test xchg ljmp out sahf sbb push mov (bad) lods sub lahf mov push mov enter pop mov sub int3 push unpcklps add inc fs push movsb jae fisubrl cwtl pop sahf pushf ret rclb movsb outsl jo outsb inc adc not dec mov sbb inc xchg int3 clc xor jl push sub les pop jg add clc jb jmp inc sbb outsb sub or popa es shl ja imul pop mov repnz sub rorb jns adc push ja adc out push inc stos (bad) xor scas stos mov inc jne mov jl dec inc pushf es xchg ficoml jb test dec ret jmp jns test pop idivb cmp ljmp jnp mov cmp jl dec adc sub or jle dec sbbl xor arpl add in enter or mov rcrl and stos hlt ffreep pop push and jno dec dec (bad) fnop sbb add push add pop mov test pop out mov addb inc xor xchg pop sbb (bad) adc scas mov or cmpsl add daa lock xor popa pusha sbb idivl faddp xor cld sub mov stc fwait push adc dec lock (bad) pop fldcw js cs sub cli sub jnp adcb push xchg adc mov xor (bad) adc icebp xchg gs pusha mov jmp dec popa fwait mov xchg roll jp pop dec mov rolb das cld insb clc cmp cmpsb cmp arpl push sbb xchg add (bad) aas xchg call mov in in int3 jmp pusha jo adc fcomps int addr16 or sbb jns int sbb movsb andb add jl lea sub jns push xor add jmp mov fsubrs mov shrb data16 shl add cltd ljmp outsb or adc repz ds sub (bad) es mov in jnp es push cmp cmc cmpsb mov xchg rolb lea pop sbb shlb insb inc and pop mov and push adc cmp add orl stos fildl testb imul cmpsb adc popf xor fnop jge in js push mov dec add fwait inc aaa subl jmp inc pop in arpl divb jns call add in push out push xor inc dec fs (bad) lea out xchg add jb push enter mov or and pop (bad) fwait push lret scas or pop test or cmp sbb mov mov stos push das test fisub jnp mov add out stc scas movsl mul js mov outsl nop aaa jecxz and cmp cmpsb mov dec into fcoml movsb pop and stos mov subl xchg lret inc fwait divl cs (bad) xor mov sub inc push and xchg dec sbb pop mov push lods mov mov je sub dec xchg jns (bad) lcall cld xchg pop ljmp cld stos sbbb out adc les dec cmc fcoml or ja jl and dec aas mov fsubrl pop decl scas add pusha pop xor fist mov imul push fidivrl xor je or cmp inc (bad) aas std in push fadd mov jne mov add lock imul (bad) test outsl lods in (bad) mov ljmp jmp or into jecxz movsl (bad) popf aam cmp data16 rcrb dec add mov cmp mov xor xor mov rolb cmc mov xchg mov ret mov cmp idivb adc dec icebp jecxz shl sbb xor jp adc adc pusha dec cmp (bad) xchg dec lret ja mov lods jle call inc mov mov ret sbb xchg outsl cmp popa jnp fstpt mov jge frstor jecxz or pop loope aad addr16 lret test cmpsl notl es sahf imul push cli lret inc sbb push inc jo mov cmp scas mov xor cmc adc sub push int xchg loop jb or jns lret inc (bad) ja (bad) gs ja add cmp in xchg mov cmpsl cmp call xchg mov cltd mov mov xchg mov xchg sub aaa jno xchg loop jb cmc adc jo fldl fstl add outsl and fcmovnb xchg dec (bad) push sbb daa fimull push call andl stos fs outsl out mov ja ds xchg jg data16 pop test gs mov fs dec outsb xchg movsw mov pop xchg mov ret nop mov pushf mov scas pop ds (bad) cs les inc lock cmp mov mov xchg pop sbb in aad test mov pavgb lock dec imulb rolb add mov mov push aam cli xor xor or test pop sub int3 sub sbb mov dec (bad) push lret shrb add xchg inc inc dec sub jmp jle sub pop aam xchg ret push inc xor mov add inc scas test outsb pop mov xchg push add cmc mov pop fistp jmp stos lea lock dec std pusha push jne aas and sbb pop cmpsb mov adcl outsl shrb stos xor imul or popa lahf mov xchg push mov int3 enter movsl fildl (bad) xor lret stos inc shld push jns (bad) repnz cli aas aad (bad) aaa lods mov mov (bad) jnp adc idivl dec mov sbb in push cmp out mov push inc loopne push jnp and repz ljmp sbbl jmp push popf insb mov mov pop cmp push (bad) pusha cld imul mov mov push or aaa (bad) or and aam je mov xchg hlt mov and addr16 mov stos test call push lds xchg lea lods push lods fsubrl cmp aad int3 ficoml loope movsb (bad) sahf das arpl mov test add and lret test adc inc sahf inc push cld out repnz push mov pop ss movsl lea mov add cmp jmp dec nop and add mov lahf pushf dec mov dec fdivp and mov sub mov push cmpsb daa pop (bad) cld dec repnz cwtl push leave outsl sub push movsl dec cwtl stos fsubr imul mov lock scas jno in and (bad) jmp sbb sti mov movsb mov jae (bad) lcall test add int lock mov xchg rol or inc jno enter movsb fcoms call dec js in cmc sub and out xlat sub ds dec int3 es loopne or xchg jmp sar (bad) mov adcb mov lahf int iret arpl pushf lret jae js pop popa iret outsb adc nop dec add repnz fbld nop imul or pop adc mov add hlt or jmp inc xor adc push add rorl (bad) xchg cltd adc pop mov xchg insb enter movsb sbb pop pop mov addr16 loope sub and and pop cld dec adc xlat or (bad) fadd inc inc dec popf mov (bad) icebp movsl les pusha aam add gs repz jo dec cmp push mov jns sbb sub in mov loop (bad) sarb lea or jmp inc shlb lods js fistpll inc adc dec and iret iret lea xchg mov xchg (bad) mov mov insl je dec push adc nop stc repnz stos jmp movsb cmp dec mov adc sub int3 jmp pushf ss push lcall pop iret rorl jmp xlat enter mov addr16 mov dec mov iret pop and fdivs repnz dec (bad) out mov or ljmp inc dec adcl mov test fbld pop syscall jb jno ret add push ror in cmp ja (bad) scas cmp xchg idivl jb jbe fst xchg sbb in pop ficoml cwtl (bad) outsl (bad) out xor and test or out push xchg bnd push (bad) mov insl cmc cmc lret fdivl (bad) aas jecxz ss imul and and popa add fldl (bad) cmp hlt loopne pop mov jge xchg mov mov cmc mov scas jns mov cmpsl leave push mov mov xchg int daa (bad) mov inc out imulb jecxz mov fstps imul (bad) or rorl jl xchg ljmp fwait inc pop sbb jne lock int3 in outsb cmc mov ds mov mov aas bound popf jbe jo pop dec cmpsl push xchg into mov imulb shl ss (bad) fcoml test pop mov or or gs cld (bad) xor sub (bad) stc and jne popa sbb int repz mov cmp lock push jmp dec adc jno pop jmp call fwait push movl insl inc inc popa mov push cmp push test mov cmp jae loop push or aad xchg cld xchg mov cmp mov aam lock arpl jo fdivrl mov test xor dec cs inc popf popf movsb sahf or pop jge push sahf mov cmp sub rcr sahf or pushf xchg lret out shll pop jl sbb (bad) fnsave pop sbb inc aaa (bad) mov into mov loope andb fs pop jo call sub icebp stc inc shrl in sub mov (bad) hlt sbb aam out push js cmp int3 orl push push add in adc xchg adc mov loopne mov int3 mov and sarb enter loope or and les in dec out ljmp iret sbb xor shlb jmp inc mov je int cmc sbb outsb or pop pop daa mov shll mov sahf fnstcw es xor add je cmpsl push mov (bad) jl sbb fmul add xchg jns mov (bad) cwtl insb aas lock into gs xchg push scas push add push sbb mov jecxz ret outsl hlt push in sub jo sub pop xorl or add push adc jecxz cmpsb mov aam scas ret cmp rclb mov scas push mov mov mov xlat push push mov mov cmpsb xchg sub cmc gs mov push add bound fcomi maskmovq (bad) mov iret sbb xlat sahf lahf sbb mov sbb mov sahf and negl mov inc repz mov test popf xorl adc xchg movsl xchg ja mov xchg popa hlt xor inc mov xchg sbb out inc dec fs in xchg xchg jae mov jl dec sub xlat inc popa add repz out and hlt jb movsb bound pop push cmp add sbb push addr16 dec mov lret bound test or pop push loope dec inc sub mov ret dec aaa arpl mov lock or hlt in shr sub out addl xchg sbb rcll (bad) dec rorb loope jns shrb cltd push (bad) sbb imul jae lret sbb mov lods push test add mov adc pop iret call xor inc outsb mov pop test scas sub lods mov in xor inc dec cmpsb shl ret inc pop xorl jne jb mov icebp pop sub cmp js out xor fadd cltd sysret imul xchg not (bad) aas jns enter and cmc popf add cmp dec lahf cmpsl icebp adc jge mov ja cmpsb push sbb (bad) cmp shlb test inc in sti pop arpl sbb aad and scas push ret icebp and pop imul xor push lods sbb sbb leave pop and sarl out imul insl xor sub jmp popa sub ss lock jno mov xchg out inc lcall push mov mov mov mov shrl pop push jecxz mov scas or jae insl mov stos push or jne push xor loopne mov adc cmp inc stc stos stc sub dec pop loopne cli jns inc inc ret and jmp lahf cmp fistl fadds inc loop mov neg cli push fmulp je add fwait mov aad xchg pop add ficomp (bad) enter xchg adc (bad) jmp stc mov push and or out hlt or mov push cmpsb sbb cli popf adc arpl mov sti pop pop jbe xchg out mov imul xchg cmpsb movsb sbb sub mov xor push sbb outsb mov leave movsb add jae mov mov iret ret jmp rcr ljmp pop (bad) test xchg add cwtl lods popl loop jae xchg lret dec jmp lds (bad) add inc mov aaa outsl or lcall mov mov adc and test (bad) mov loop cmpsl movsb loope cmp mov movsl repz cmp sub mov out lods push jb push int std mov push bound ja dec or das sub push (bad) inc ljmp fcmovnbe sbb push out jp push stc xor ret js iret sub (bad) push hlt xchg mulb jnp jle inc fcmove pop ss push in stos and pusha xchg fisttpll jne lret jle (bad) mov dec sti mov (bad) into push stos mov pusha push sbb dec mov cmp cld jg pop cld insl inc and daa test and jp in sub add push add loopne inc scas pop lret or clc pushf xchg fistp mov jg xchg aad mov mov enter sub and into outsl test je pop pop sub jg rorl jmp psubusw mov mov jmp nop jae (bad) inc lcall movsb fs sub mov and lods xor pop aaa jns inc xor popf mov mov mov jnp icebp fcompl scas cmp sub dec subl push ret add sbb jno clc push shlb repnz pop imul test push pusha out fdivrs pop stc sub adc imul mov jnp stos ljmp add jmp push xor imul int jge out (bad) fmul lcall or cmp (bad) in aam jae adc fstpl mov sbb mov and mov push arpl or mov nop jbe ss sbb and imul ror popf rol scas sbb sbb lods jmp jne jmp push cli dec rcrl jmp int3 push frstor fnsave insl loope pop outsl xor out aas test mov test add mov (bad) lret and enter es addr16 cmpsb mov cli cwtl mov mov push sub test adc cmp test xor cmp scas or fiaddl dec cmp cmp aas mov and cli push popf call or enter into in xchg fwait and (bad) sub xor lret cmp ljmp add les cmp pushf dec xchg aaa mov aam js stos insl adc xor (bad) push pop lahf sahf out fwait xor imul cmp cld sti push lods xlat popa unpckhps pop (bad) repz gs adc push pop dec mov mov mov inc xchg jae dec push and jge dec out enter das mov pop adc cmpsl out lds (bad) lahf sub cmp mov ljmp fs int faddp add dec adcb jae sar mov test cmp inc push sbb dec xchg repz sbb fmul sub inc and xorl popf mov loop push shrb adc jle test mov cmp mov push ror cmp xchg loopne jbe jp in push jne or insb fadd add insb mov lcall jg dec icebp out jnp xchg mov mov cmp lcall mov jo,pt (bad) aad adc mov mov add aam cmpsb addr16 ficom ljmp xor out mov stc pop inc mov movsb movsb arpl ret lahf mov addb push stos mov (bad) cmc aaa push insb je push mov cmpsl (bad) push aas out push mov outsb push dec jnp,pn inc mov ds test xlat mov adc ss cwtl shlb lahf cmp xchg repz sub cmpsl push cwtl inc add cli jmp cwtl inc aaa mov lods aas ss mov cmc sub sahf int bnd dec and fldenv imul push xor jae pop mov and cmp cmpsb in pop adc push cmp fstpl cmpsb or psrad mov fs mov divb push mov mov sahf nop (bad) mov add not pop push xchg leave push pop imul push das lcall (bad) pop xchg lret mov notl jl in pop push push aam xor xchg pop xchg xor lret push xchg insb xor xchg xor push (bad) push push lret mov shrl lods pop out xchg (bad) mov mul jmp not fsubrp mov pop xchg add leave push inc fs pusha fidiv das inc gs adc scas mov fwait js aam aaa addr16 add pop cmp push mov mov jge nop popf lea std push inc pop test mov mov into cmp xchg sahf cmp fbstp xchg popf mov and pop xchg mov insb pop pop mov (bad) in cmpsb cwtl imul pop dec insl or xchg dec mov mov jecxz sub cmp and cltd xchg orl movsb movsb int3 adc rcll sbb sub jne dec mov sub pop jl fs gs aas mov jge push (bad) psubsw movsb in or pop aaa test scas stos test jno leave cmpsb test sub clc out or cwtl mov add add cwtl or arpl xchg pop cmp ljmp cmp mov sahf (bad) call and xor gs cmpsl ds imul add (bad) mov lds enter xor and or and mov mov loope cwtl push in lods sub jge sub push sarb fdivrs rcrl iret fwait sbb sbb lds std pop les jp xchg test testb dec mov pop pop inc xchg aaa mov nop cmp sbb dec cmp dec addr16 fsubrl les mov ret test cmp popa test ds jle,pn fwait daa data16 je out or push or xchg inc xchg fdivrl call repz push call aad notl nop push mov (bad) lods aas data16 insl fadd pop mov outsl dec int lret pushf jbe jns pop mov sbb ficoml int3 in jo push rcrb adc outsb or insl or das adc xchg mov mov popa pop jae mov test rcr pop or loopne js cmp clc pop int sahf enter stos je shr cli and push cmp ljmp rolb pop loopne rcrb cmp test iret cmc aaa leave scas test out pushf cmp gs push mov pop pushf fidivrl subl cmp sbb dec jno dec inc cwtl add rolb adc cmp lahf adc gs lret mov push xor lods mov dec mov pop rol xchg je rcll mov push lds int3 mov jne cltd push xchg test (bad) ja outsl xchg fwait push (bad) in xor cwtl inc lock xor cmpb sub sub dec nop xchg dec cmp and xorl lret push inc lock push cmpl scas mov fimull out push jb push dec cmp sarb sbb insl adc test dec dec andl sub lea or push movl repz pushf inc faddl dec lock or pop popf and (bad) stc pop nop push mov orl xchg stc pop mov in xchg push lea inc fwait loop mov xchg cld push xchg fwait cmp loopnew and divb cwtl sbb cwtl stc xchg js sub shll fdivrl inc mov fcoms mov dec pop mov pop cmp ror leave pop rol jnp repz jns jmp sub fmull daa or lods je xlat iret push jp adc mov adc sbb adc jo push and pop repz in sbb pop cmpsb dec (bad) js dec and das popf or push nop cmp pop test test cmp mov xorb out pop test sti dec cmc arpl mov inc sti in cld and xchg xchg fidivr orl lret icebp inc in ret (bad) aas bound ret test iret or lahf fcomi sarb loopne idivb jmp mov and push mov sub imul je aad das mov aas test cmp mov cmp popf adc mov lahf cmp jbe push (bad) sbb add dec or (bad) cld and pop cmp pop mov xlat mov andl add daa sbb bound cmp lcall pop scas divl lret mov aaa daa mov cmp addr16 (bad) (bad) xor push xchg adc push add sub sub pop int3 (bad) push (bad) dec sub mov sbb popa add jmp add prefetch dec aaa aas (bad) mov into pop popa xchg pop outsb adc mov gs jecxz and mov xor stc push mov and pop sub sbb and pop adc mov pop test cmpsl ja cs ss sub cli cltd in adc sahf repz sub pop test ret jle push repnz mov push inc and stos dec fs ss dec inc mov push lahf test fwait daa lock fsubl (bad) fnstenv hlt push stos mov sub stos xor xlat aad sub or xor inc in out cmpsb inc (bad) (bad) inc imul push mov je push aam pop test loopne xor dec jl repz fcomip flds push mov lds shll or repnz mov mov jno pusha gs push pop lods je lea insl mov jge inc mov pop cmp xlat std dec (bad) inc addr16 mov cmp bound mov mov pusha popa or push sub xchg xor xchg jmp or mov inc and cmp movsb pop pusha mov jno jp push daa ret xor fsubs cli iret mov std rorb fsubl pop (bad) (bad) and sti ret and jbe push fdivl jno (bad) jmp fist repz xor mov adc pop mov in (bad) mov mov cs arpl pop cmp imul jbe cmp lret inc jno ds sti addr16 sub je insb outsb in mov jo lock ljmp or mov or xlat (bad) ds dec fildll fisttpll (bad) std mov repz sbb adc pop dec mov jp inc sub out fstps mov mov mull push aas cmp cmp popa jp add sub lret movsb loope repz jmp nop data16 pop cld sahf gs or mov dec out cs lock xor pop push rolb mov mov jae mov mov repnz lds pop add dec stc push nop push inc movsl jo loop arpl adc pop pop dec mov pushf cmp push fcomi insl fidivl xchg xchg xchg cmp or ds (bad) std jnp jg ljmp sbb cmp (bad) icebp sbb aas es dec into int ds mov add mov mov scas push test xor stos xor sub sbb icebp addl or stos push pop lret adc adc add pop ljmp jl daa lret adc xchg mov arpl inc fadd ret cmc aas add push pop push pop ja (bad) mov out (bad) xchg das xor rcrb xchg sbb aas sbb gs or xchg hlt (bad) jle (bad) push add jmp ret (bad) cwtl je push pushf enter stos test xor xor int movsl rcrl mov xchg jb pop lret ret sbb pop clc add push popa pop mov into scas xor lret cli cld aaa and jg dec cmp je fild or push in sub cwtl fsts les xchg jl mov mov lock push cli mov xchg rolb cmp dec bound sub jmp jnp or jb xchg faddl sbb clc lret sbb movsb lea fsubrl mov (bad) mov jl in pop jnp or lods push enter orl dec stos mov and jecxz sub jmp iret test jge in lods mov in mov outsb (bad) decb adc mov xor out outsb pop shll jl push and and mov mov scas in std sub aaa jge or jae mov dec psignb and add sbb ret mov sbb or mov aam jae sub xchg or (bad) inc insb jp insl mov pop mov sub fmulp aas mov fs mov and rorl adc xchg mul enter jae outsb mov loop shll or add push sbb pop dec xor pop jp repz fwait xor xor in lcall inc adc mov mul mov test or jbe mov leave loopne test push or cli repz lcall out or ficoml (bad) mov push popf (bad) icebp push in sub popf sub xchg lock shlb pop push or cmp stos xchg (bad) xor xchg scas push dec addr16 push cmp mov sbb mov push inc dec pushf mov sbb jge adc stos dec add pop pop packssdw inc cmp xchg call dec push pop lds iret shr add jnp rol jmp cmp xchg fdivp cmp in fdivl (bad) insl (bad) je add jmp inc jge push inc jns push test fimull fidivrl and push jnp xchg mov push add rcrl inc ret mov loope cmp aas dec pop xchg xor rcrb mov pusha mov imull inc sub cld and jae roll jbe fidivl sub (bad) aad push cmpsb adc cmpsb pusha pop cmp sbb lcall mov xchg fidivr mov push dec loopne ret xchg cld mov push xorb jbe push mov add jbe rcl push pop dec mov jmp mov pop push pop inc (bad) ds push sub xchg int lret gs and dec pop pop aaa test dec xor inc mov out mov fwait in lds lcall and pop mov bnd stos mov ljmp lcall and cmp in push dec cs mov (bad) iret divb xchg aam aam cmpsb cmp inc mov push (bad) xor mov fisubrl (bad) loope mov aaa arpl pop popa mov fwait jbe rcrb (bad) lods ja sub adc scas adc push adcl push or imul xor xor mov adc les pusha fisubr sbbl mov xchg into push or mov xchg lret mov ja add mov cmc and insl and jbe jmp and xchg cmp mov fldenv in push jno cs mov mov push iret test in mov adc jecxz pop gs stos jbe out lret (bad) mov fiaddl ret test (bad) icebp mov insb and jle sbb xor (bad) std leave addr16 aaa aad icebp jbe sub call mov jbe cltd data16 mov nop xchg push nop inc pop push inc xor jl sbbl outsl int3 ret insl pop in fsubl jecxz les adc (bad) lods fsubrp push xchg push repnz dec cmpsb pop fimull mov push addr16 or (bad) inc in and aas push loopne into mov inc inc cwtl ret dec sarb or aas hlt pop fcomp out test je js std cmp jns xor push push shrb cs jb pop negl (bad) mov inc sbb push imul jle scas jl gs (bad) mov dec call push ljmp call in pop lea xorl stos cmp cs dec mov fadds add mov addr16 ret lods outsl mov js push lcall or mov stos pop or dec test sub cs dec mov call std lahf mov pop cld sarl fsubr sbb (bad) xchg cmc sbb xchg dec fcmovne dec adc xor or jl cmp in ja jmp pop mov lret fbld ds or xchg cli mov pop sbb stc mov nop cmc mov iret mov cmp gs inc out repnz jo (bad) cmp repnz inc nop and loop sbb clc les arpl xchg (bad) jmp stos daa insl xchg in and mov sub repnz mov sarl ret fisttpll call push gs mov ja ljmp mov test test test and outsl jle cmp and stos das jp imul faddl je and dec ret sbb inc test lock roll (bad) lret add ja mov insb aas push pop jno dec (bad) mov daa js ret pusha jns sub fmuls stos mov mov mov enter (bad) mov lret lret cltd scas pop mov js pusha roll lcall (bad) dec push mov xchg adc in stos inc push int lods mov cs lcall pop inc jmp repnz jp mov lods cld adc cmp fnstcw jbe aam lea adc loop inc pop inc ret clc pop icebp daa (bad) jg cmc js das aad pop sbb ret cli cmp dec movsb (bad) pop pusha in sbb das out aad pusha lods data16 fildll js push aas mov inc in add stc dec inc sbb lods cs xchg les xchg fnop mov mov adc lret (bad) xor stos mov push add lods inc inc nop lcall fiadd and out or repz clc js (bad) fs stos gs jns dec mov dec sti (bad) popf jge sbb inc inc mov daa sbb sub jecxz ss das jo lods fnsave out and stos adc lret jae add loopne notb shll mov mov add push rol xor jp in push sbb clc testl pcmpgtd add adc mov mov push jge push ficompl in lods scas lds fwait call dec push add xchg push xor cltd pop push mov adc addr16 adc ret jecxz mov jbe aam add ds cli mov ror jecxz mov in int push fisubr insl mov cmp daa jl hlt mov mov faddl sbb mov mov je push inc adc add sub sbbl cltd addr16 cmp (bad) lock mov cmc dec mov roll dec into decl mov test mov xor or sub add sub adc out ret xchg cmp (bad) in mov incb xor push in sbb fnstenv pop adc cmpsb je xchg dec mov adc fildl pusha ret leave test in sub inc xor ret and mov fistl cmp stc in push jne,pn and movsb inc jmp sub out jo test fidivrl sub lea sbb testb pop jbe pusha mov (bad) fsts lods cmp xchg in sbb cmp mov jl in dec push test ss repz std (bad) loop pushf sub xchg cmp scas xchg popf mull insl imul outsl sub or xor ds aam js jbe sti imul pop (bad) std loopne sub dec test push mov out loop sbb mov int in divl addl insl xchg adc pop lods (bad) adc push idivl mov (bad) imul sarl (bad) mov inc loopne int icebp jbe icebp push stc or (bad) gs inc mov inc int iret sub test push xchg lcall sbb push inc mov cmpsb movsl or mov loopne jne dec int3 dec call iret in sarb jge xor add (bad) dec and scas dec xor int3 mov std test test pop xchg jmp fistl outsl sarl sbb scas dec add mov clc push sarl xchg dec into mov cmp pop xchg jo inc inc das xor sub repz mov test (bad) push mov movsb fwait repnz scas push mov in fistpll out lds les dec aaa in lds iret call sahf loop test jae sub jbe cmp outsl icebp repz mov (bad) mov xor and dec mov (bad) push sahf inc inc sub xorl jecxz out hlt or cmpsl rolb inc mov push xchg pushf push push (bad) cld fisubr lahf inc loop cmp push mov lcall xchg add push sub loope or xchg jae sti sbb and fisttpll and int3 cltd xchg push dec js xchg or xchg mov adc out push fdivs loope mov jae fisubr push lods mov enter int3 mov lret mov inc fnstcw (bad) inc sbb sbb lcall js dec pop nop enter js hlt push rorl mov adc jb,pn imul aad daa jmp cmp rcl repnz aam jge cmpsb sbb or mov pop (bad) imul fidivl mov shrb jo jmp mov mov sbb sbb mov jle outsb mov gs insb std scas lods cmc in loopne or push xchg (bad) jmp nop mov mov pop jo mov aas mov sti cld mov add pop ds in mov jb cld pop or loope lea fisttpll out jp and int3 xor daa push inc scas dec lret push pop inc (bad) pop sbb push shrb push xchg hlt or cmp xor cld nop je clc roll (bad) mov test (bad) push in mov and test sub cvttps2pi pop lods push fidivl add mov insl bound fstpl imul dec inc mov cs shrb adc daa dec shll arpl pop push inc cs pop jmp rcrl lods scas mov xor add test sub dec push lahf mov mov call cmp sub les subb mov push sub mov (bad) cmp mov cmp test sbb mov xchg rorb xchg push iret dec and xlat or inc inc dec dec aad lret imul inc in cmpsb dec inc push xchg fs bound cmp sbb dec lods jmp push or call movsb jle jecxz jae push les aad xor shl pop stos out ljmp mov test lret stc imul adc and add adc cmp cmp adc punpcklwd imul clc cmp or movsl mov inc rcrl shrl lods imul and int rolb jl fisttpl insl or push jns xchg cmp mov gs mov out lds mov pop sub daa push mov cmp xchg fnstcw sbb pop movsl fld lret aaa add aas mov repnz (bad) jns dec adc lcall jle imul shll and out mov xchg cmp jns adc stos ds and lods dec lods ds jne jno movsb bnd jns test imulb dec les and out movsl daa or or sbb jbe mov pop mov cmp sub fsubl outsb stos rorb in ret outsb adc sbb cltd mov push dec and sub mov daa in test fisttpll push xchg mov dec test xor jae cmp jl adc icebp fmuls or mov mov adc imul xchg rcrl cmp cld test faddl (bad) addr16 test fisub loope loop pop fadds inc pushf lock push repnz sub divl aam lret out adc push cld rclb sbb mov xor adc jl or pop ljmp cli sbb pop imul cltd pop ficoml mov lea imul or mov mov ret in xchg push sbb stos (bad) pusha jae loopne pop push iret xor push call sbb inc add jp jmp push jne ss jge push inc mov push xchg imul push ljmp pop sbb xor pop inc push cmp ss clc xchg sbb in into push lahf out aam and popa dec mov std sub push pop xor xor shl imul sub cmp nop mov push addr16 mov jno call cld addr16 mulb jmp sbb insl push out ret inc popf lods std das test lea xlat imul inc das xchg call sbb inc sti xchg cltd or mov loope sub cmp loopne outsb enter adc in xchg shl mov fnstsw aaa add push adc cmc inc ja test std dec inc test in lret sub pop test adc ficoml jp std ret orb das pop jne dec ss inc jp out test pop pop mov and push inc out push popl or mov stos cmpsb push jmp insl mov add push jmp insb out out cmp (bad) mov es test push inc sbb test notl movsl fcom jge jnp outsb data16 cwtl (bad) fisttpl dec jmp or push sub mov and or js hlt xchg hlt pop lods xchg sahf popf mov scas mov (bad) (bad) out and int out dec xor stos aad mov repz test fs xor mov es outsb outsb add in lods sub sbb cli stc sub loope and imul in sbb push aaa xchg inc fcmovnb mov cmc inc jnp jnp test push arpl gs aaa xchg jge lea fidivrl xchg and add pop cwtl mov mov int3 adc std jecxz leave mov lret push xlat out xor lods sbb imul nop inc cmovne cmp xor imul cs inc scas inc or data16 pusha inc mov xchg xchg inc adc add dec call cmc push stos (bad) xchg and lret or stos jne sub fistpll mov mov arpl insb xchg fadds sbb jle imul and ret dec dec push out leave ss pop in int mov xor mov cli pop dec cmp or in gs push (bad) jnp mov cmpl stos dec mov jecxz inc pop fbld or sbb xchg xchg xchg std shll mov (bad) movsl cwtl addr16 mov daa outsb popf lret sbb std fwait mov cmp popa mov push sar dec adc dec push mov xchg imul mov jbe lret pop mov push push in mov pop adc jp imul loop lea mov dec outsb jg pop icebp scas add leave mov or enter aas sbb dec shrl repz push xorl push and xchg pop mov jg sub lds clc pop jb loop xor push push (bad) sbb mov and mov fstpt pop jb mov mov xchg mov (bad) cs lods (bad) clc lods mov xor mov xor dec outsl (bad) out pop fistp sbb inc sub enter add xchg lock sbb std cmp mov mov lods pop mov mov loope dec add and pop test loopne int3 xchg das mov cs pop xchg or sub push (bad) out das fildll jle popf adc stc or (bad) or out inc and ds cmp jp shrl cmp dec ror leave pusha lahf lock imul sbb push and mov jae pop decb mov dec push jo movsb sti jge mov sbb mov xor fwait push mov mov push sti mov push pop dec inc (bad) in sbb jl pop pushf and fldenv repnz jge pop fisub push ss test int rclb mov or imul lcall xchg call push xlat jmp lcall pusha lds mov pop cmc repnz test dec jle into lcall call lret adc mov test gs dec jbe sub in jmp xor pop or subb sahf pop cs (bad) (bad) pop adc pusha dec imul (bad) xchg aad dec lcall scas inc ja jne jg and aas jbe sarl xor mov adc cli xor sub les loope mov xor and jmp mov pmaxub lods add leave jl arpl inc push repz jmp cmovb andl cmpsb (bad) mov mov dec and xchg inc ds and cmp pop jo shl xchg push jbe dec scas fldl mov pop inc into stos jp xchg inc sub imul mov lcall jae adc cmp std pop paddusb mov sub sbb rclb cli and adc mov add sbb dec into sbb pop fdivrp pop mov xchg pop dec ja data16 cli repz xlat (bad) pop mov dec jmp mov popa and inc in lahf add setge mov mov mov ss sub mov lds sbb sbb sbb bound iret mov mov adc aaa xchg dec in mov enter dec icebp or fcompl jge data16 subl ud2 pushf fs inc dec lahf push aas sbb hlt rorl idivl dec add jg sub jns ja jb sub ja imul imull dec push inc pop aaa push les or iret mov or idivl jne pop sbb pop aas xchg loop push cmp add sarl (bad) add pusha lcall lods sbb cld (bad) mov mov (bad) pop inc adc push aas (bad) add icebp push jmp scas cmpsl xchg mov je xlat pop loopne jecxz loope mov jmp inc aas lock xchg lea jle dec leave (bad) les cmc shl mov pop pop dec mov shr inc out aaa arpl stos cmp pusha sti test lods xor sub sbbb ja dec jbe lahf and xchg andb es stc xor stos sbb (bad) popf aam and push rolb mov xchg push inc test or sub mov sub dec popa jge dec or adc fld idivb sub lods push fidiv push pop inc (bad) cmp insb mov sbb fisubr negb shll push mov pop sub (bad) es movsb popa shr stos enter cmp stos idiv push adc popl test jg xor xor mov pop dec xchg arpl mov jle mov ljmp div cmpsl xchg mov loopne std lret adc stos xchg (bad) hlt xor inc mov mov scas aam pop xor fistpl ds mov ds xor mov jp lret dec adc fiadd inc sub jle not mov sbb cmp leave pop fisubr iret daa jl jne popf in xor rolb int3 inc mov mov popa xor or sbb ja sbb jne out push fcmovu insb mov or (bad) out nop ja aam xor stos inc mov mov xlat cmp test sarl data16 shr or nop ja inc mov adc mov ljmp lods push lcall fmul xor and call push and stc fistl clc daa mov push jnp mov das mov popf jae cmp roll sub sti les pop xor inc mov (bad) daa push (bad) sbb ret jne push lock mov shr icebp loop jg stc jo mov mov icebp cmpsl call mov dec sub adc xor aad adc mov sub ljmp xor mov arpl dec push addr16 shll aaa xlat xor shl aam cmp aaa lahf xchg test lock out fcomip cmp dec adc std pop test xchg lods repz in aaa lds scas adc pop inc repz je mov test pop inc mov dec rcl les xchg dec cmp cmp pop ret jecxz adc xchg add or aaa sub insl (bad) xor and or pop test sub (bad) adc lods (bad) out dec addr16 ds xchg fistpll cmp mov pop sbb (bad) and mov and in inc fwait xor push nop popf int3 out jbe pop add add lock ljmp stos jo ret out sarl out sbb adc push and cmp cld (bad) mov fstpl int3 jmp mov ja in mov inc cmp sbb loope scas jns imul mov (bad) lcall push jno mov sub add cwtl xor rcr pop mov mov fisub aaa stc dec xor fmuls js (bad) sahf push push push cli pop xor inc and mov push in hlt stos mov or fwait mov jnp (bad) dec adc and js pop push pop or xor pop movsl hlt (bad) xor iret hlt cwtl mov loope lods daa xchg (bad) pop lret outsb out (bad) pop dec loope imul pop jp xchg jg ret add mov or in das cwtl adcb pop in adc movsb or in push je out inc cmc stc jle mov or out int3 pop ret push jnp mov dec pushf sub popf jo pop aam jnp sti clc xor or push inc add and jmp adc and insb inc addr16 das fwait jmp mov and push pop fwait add sbb gs not subb jb,pt push into fwait mov sub xor pushf mov jg or cmp cli dec stos (bad) sbb dec xchg add cwtl cs or cwtl or inc jle outsb shll jmp loopne ljmp ret mov mov cmp mov test jp jmp cli dec or gs rdmsr ss (bad) je fs loope mov rcll add std add jne fdivr cmp mov jno inc loopne iret and negl push adc leave pop and cmp xchg inc xchg pop mov push lods xor pop dec mov jmp aad repnz shl ficom in push jl xchg add loopne,pn push sub cmp dec adc or arpl (bad) fwait pusha (bad) out es push or rcll lcall outsb xchg fldt xchg aas addr16 mov adc push movsl std ljmp add lahf dec adc add dec cltd call adc mov xchg xchg das sahf mov jno mov fadd repnz mov sbb lahf pop js ficom inc pusha mov push stos fisttpll fxch sti (bad) lods icebp mov inc repz int3 lcall lcall imul jecxz jge pop sub pop int adc bound or add or push push jge sub and leave inc push bound xor cmp cwtl (bad) out mov pop mov pop icebp ret negb les repz push inc cwtl ds push sahf sahf push lahf sub popa mov mov dec test bound adc subb pop xchg test dec xchg addr16 or addr16 or dec aaa adc (bad) mov lret cli aas add cmpsb xchg xchg je xchg adc es and jbe pushf enter jne and in fsts xchg cmpsl insl and sub jb mov jnp and push mov mov jo or mov sub xor dec pop sub add xchg cs push fucomp cmp sub mov test shrl xor outsb jo ret or int3 mov pop jae ss (bad) adc xchg imul fsub jns icebp out into add fsub and adc jns sti cltd cld imul add mov adc test js or ficomp or sub loopne dec cs mov clc mov cld nop stos nop mov lds mov shlb cwtl xchg out cli xchg and and add jne cs (bad) fdivrs loop into mov insb xor daa cmp and push dec scas scas push jns jge jg jl daa sbb js cmp adc in xor inc xor pop jl pusha movsl pop jl hlt (bad) pause fwait pop fdivr mov mov or jb mov rcll jmp pop cmp mov cmp or and dec jle pop lods idivl dec fs (bad) repz stos pop stc mov cld fnstcw rorl xor xor adc pop test add lcall in stc mov in insb sub mov fimull sarl or inc jns clc inc pop daa ret getsec mov pop push lcall pusha (bad) ss push xor xchg loop (bad) pop or xchg inc dec cmp std stos dec out pop and sahf mov mov pop or xchg fadds pop mov repnz dec adc daa push pop mov iret (bad) and fsts repnz mov dec xchg fdivr and mov ds push insb out cmpsb mov out (bad) mov imul pop mov push call sbb push mov loopne insb xchg xlat inc cli inc pushf dec sarb rorb xchg (bad) pusha push xor rcr xlat or out xchg icebp push add mov and lcall imul adc add jge mov cwtl dec das js rolb test dec pusha sub fild pop shll mov js and rorl sbbl mov (bad) adc inc sub mov lods daa popa dec (bad) in and xchg dec lods and push xor jns jno cmp mov popf rolb ficomp cmp popf leave jle hlt sub outsl cs sub les out jb roll out xor mov cwtl test jg mull cld xchg insb mov bound fwait lret insl outsb call xlat xor int dec push push ljmp push test das sub jl jne fs std xchg dec xchg sub cmp push outsl jmp xor mov add enter scas bound cmp mov jb stos lahf mov fisub (bad) jge cmc enter jg mov push sub jecxz mov adc jecxz mov or cmp push or xorl sbb les jg lock jmp add xchg dec int cmp or ljmp fcomp sub dec cmp mov in ret mulb and xor in push mov pushf dec cmp jmp inc inc loopne mov sbb imul cmpsl cmc ret scas mov fsub pop fcoms daa jne arpl ficoml jae mov jbe add cmp xchg mov inc adc vmread jnp lahf gs sub lahf mov add fadd xor push dec loop loope push cmp sub test outsb fisubrl inc popf cltd subl (bad) xor dec nop xchg sahf iret dec cld mov pop jmp xchg jno imul sub sbbl mov mov inc cmpsl outsb stos pop ret fisub dec or mov mov dec add sub in testb lret lret icebp (bad) movsb bound incb add and (bad) repz es pop fbld jg call or cmp (bad) jne cs lods pusha scas out sbb das mov test stc test mov jno and sbb adc mov ja test push mov mov jp loopne mov mov adc sbb dec and mov call outsl adc icebp push popa sbb jae dec or xor xchg ljmp shrl jp cmp push push in mov pop outsb adc insl rcrb sub mov mov lds test lods mov aam add xor xor cmp fimul adc inc fdivrs lds mov jo into test (bad) jle pop jge xchg insl scas mov enter cltd add pop cmp inc aas push aam add lahf jbe or inc add in decb leave mov sub fisubrl adc mov jmp insb les pop mov sarl stos ds aas mov jmp xchg mov xchg inc jo lds sbbl xchg xchg inc mov (bad) aam and and xchg popf cmpsb adc addl hlt and jne rorl mov cmpsb stos flds dec or jl cmp push jecxz imul psraw push rcrb sbb xchg jmp adc test sbb add sbb imul or add cmpsb add imul out es pop scas es mov jle and stos fidivl mov (bad) or jnp pop sarb js push mov sub insb std loopne pop inc stc dec mov cmpsl xchg mov mov cwtl pop cmp scas mov lret or cmp test or lret xor inc or mov add xchg aam imul neg mov or dec cmp mov addr16 inc lret add leave lcall mov push cmpsw aaa sbbl test js and fcmovnu arpl pop rorb or push push xchg fwait or inc push (bad) xchg dec lahf adc arpl dec rorb pop fidivrl pop xor (bad) xlat push xor in xchg xchg inc jmp or push pop push lret ficomp dec push and push or les dec movsl aaa and test mov std push cld lret iret out aad mov mov stos push inc lds arpl outsl push or xchg xchg sbb sub push jecxz int add data16 mov in sbb and sbb add sub int xchg mov not mov mov mov loop add (bad) rcl in add jmp (bad) add mov aam pusha aam mov mov enter push cmp and rolb jb mov outsb sub std std xorl sub inc test push xchg jge sub pop test repz popf sbb push cli pushf xor xchg in into push cwtl sub push movsl das scas fmuls mov sbb sbb std pusha sub dec repz jle pop insl xchg call xor les in mov xchg sahf sbb sub fistpll dec gs jnp lret xchg fistl psadbw push pop pop mov jb (bad) dec ret pop pop mov je xchg lds jo (bad) fidivrl mov adc hlt jg pusha dec sbb pushf push adc add inc jp dec cltd aas push adc lods ljmp add lods cli xor mov ljmp adc mov loope or into aam inc pop cmp not mov sub loop scas bnd pop pop jmp (bad) xor dec in nop push into (bad) jl fnstenv jns icebp out xor data16 push mov push pop pcmpeqb insl lock dec jns cmp mov jne gs pop int3 and pushf xor cmp test out jae divl jl jle test inc pop lret dec clc or mov add xor outsl out daa fidivr loope arpl cli pop (bad) insl adc xchg cmp add sub ret int mov call jnp daa push mov ret push sub rcr xor outsb (bad) sarb lret cmp inc and ret push lcall add lods insl mov std lea stos adc mov hlt or mov popa mov imul inc jae js xor jecxz xor add es sub call fwait xchg adc test sub popa das cli mov addb lret repz es mov and xchg push mov mov bound popf push scas adc lret cmp mov jl dec pop sahf sahf or mov or mov jb inc pop aas mov in rcrb mov mov sub jno push mov fs pop aam lcall imul shlb or push and xor (bad) pop enter mov (bad) jno cmp sbb pop cmp or not xchg enter gs lahf cmpsl mov sti pop adc xchg ljmp stos into push in cli out addr16 fwait lret dec ss xor and imul cmc (bad) int3 mov dec ja stos cmpsl and xchg inc cmovl (bad) sbb push xchg or js inc ret xchg lods test daa (bad) sub cltd inc jne xchg mov push mov rcl jle cmp enter popa push int3 sub dec inc cmc leave and mov fcomps stc mov fsubl fild arpl cmpsl push inc dec xchg lahf std stc daa xchg lods rcrl mov mov mov or pop into lret sbb shll mov pop adc cld adc xchg pop or je mov (bad) je and aaa into mov je insl int3 scas aaa mov rcr mov inc mov xlat dec xor je sti lahf sub xor jae in inc mov jb sbb lret aam cmp mov into (bad) dec out add pop int3 mov jp add cmp scas push adc (bad) sub dec adc mov cmp cltd aas repz cmc jne sbb sbb xchg cwtl pushf inc mov mov pop dec out insl arpl fs imul cmc sub movsb lcall outsl aaa or cmc mov sub mov cmp push add nop imull jle rol rcr mov lret sti (bad) inc and cwtl ret data16 mov mov adc mov adc or add jne fs dec mov xor das jl nop scas push addr16 xchg jno movsl cli push icebp pop xchg dec in cmc pop mov push es jb xchg xlat notl mov ja push inc in jp scas cmp fmull fcompl iret div andl xchg hlt mov mov push add cmp cwtl arpl in cld add inc pop test inc aam push loop cmp dec cli lock jne data16 fwait sbb jns sahf (bad) je inc fucompp pop mov or mov pop ja inc mov ss sbb cld ficom (bad) hlt jg cmp das arpl lods dec jne fs out push and popf jo or out imul push imul sbb and sbb loopne or xchg xchg adc pop cs lcall lds insb mov cmpsb sahf add rclb add test sbb lcall or orl mov cltd mulb gs mov push push movsl mov pop and roll fimul sub sub (bad) repz rclb das andl sub xchg in mov fs cltd pushf or cmp ja loop cmc test ss aam and cltd loope lcall ss sub mov test popf jp cmp xchg ds lods jmp sahf (bad) data16 popa dec add movsl jg xor outsl shlb pop inc mov sub std repz xor movsb repnz stos sub shlb fsubrp push sar mov mov (bad) int3 sbb ja cmc int mov jp xor std xor sub stc movsl mov pop pop add stos mov push movb xchg push pop js clc std xchg cmp adc adc mov mov pop int mov jl dec add std adc adc push jl mov mov adc mov ret cmp (bad) mov mov pop dec mov scas push mov adc ret inc das daa clc sbb lea icebp (bad) js or push sti or add mov ja dec jg lret add mov mov lcall ret cmpsb into es inc inc sbb add or or (bad) gs xor pop xchg add xchg sub or xchg nop adc inc jnp xchg pop pop fbld xchg jl mov dec xor clc aad outsb xchg push xchg cwtl and stc lods xorb and mov iret xchg dec push inc fidivrl mov jbe xchg sarl sbb add cltd (bad) in mov out push xor mov cmpsb andl jge lea mov pop mov aas xlat sbb sbb insb cmpsb stos dec push or sbb jle arpl or fiaddl div dec sub and out inc std lfs jl sbb out or int add cmp movsb (bad) daa inc out dec mov mov enter inc ds loope sub xchg es inc ja xor inc push andb mov push xchg xor enter pop sub sbb xor sub lret cmp mov push dec jb pop adc sub dec jnp or test bound adcl or jo test cmp push cmp aad xor cmp cmp push jmp popf add mov lahf (bad) dec fwait cmpsl pop jnp js sub push outsl roll leave stc xor pop sub (bad) jns (bad) test and cmp sbb sahf pop out sbb addl stc xchg push inc xor addr16 fisttpll test not mov push push or clc sbb cmc scas call scas sti dec inc xchg not shr ret pop mov dec cmp inc loopne and fdivs push aas aam imul in xchg fbstp aas fstpl xor adc jb call enter jns popa scas cmp mov call push addr16 pop aam (bad) sahf out mov lcall pop clc or (bad) lock insb rorl iret push push mov mov bound daa repnz popf sbb out mov inc jmp xchg ficompl inc mov dec mov mov mov mulb jae and repz icebp xchg stos jg adc lods sahf cs (bad) dec jl (bad) inc bound pop mov dec test ret test je xchg or pop test std jno mov repnz adc jb out adc fsubrp jns fmuls jge loop ljmp xorl shlb sub pop repz push js aas lock or in or inc mov popf mov int xor popf adc lcall lcall lret mov and in fcmovnb fistp dec xor aam jno (bad) loopne fildl pop pop (bad) xchg test pop or mov push popf lods mov test mov hlt aaa repz pop (bad) int3 adc lods pop mov adc add stos mov add xchg push push xchg fiaddl sub imul xchg and sbb and add push sbb mov inc mov jbe rclb je sahf jmp jnp push xchg mov dec mov fs sub adc in adc aam imull mov sub mov ss lcall pop sbb rolb ss xchg push mov push fildll pop dec movsl rol push aaa mov mov int3 xchg pop push adc sub add cld data16 mov mov push xor jo (bad) jge and ss push sbb mov cltd xchg mov insl lock sahf add push andl xor cltd in or adc adc sub lock and add pop mov push jno bound nop add clc lcall lret div xor cmc movsl mov das in mov popf mov mov ds mov and push or mov adc push cmp xor mov popf cmp les aaa jb pop daa stos jns sub or sar pop xlat push sbb fsubr push and stos xlat insb sbb mov dec inc test cmp mov and pop insl shrl stc sbb int fist insb jb xor std push test cmp or es mov arpl dec testb mov or fs lock cmpsl outsl push subl (bad) lret adc in mov gs std jae rcrb cmp cmp xchg addb add das and cmc mov dec pop jne ljmp aam es call sub out sbb dec push pop and lret inc out mov mov cmp add nop dec pop sahf or jae or jnp imul add idivl pop leave sub dec test mov mov mov iret out insl xchg scas ss loopne push mov icebp mov or adc out pop std xchg scas mov adc fwait mov or mov ret push jae cmc into cwtl out pop std add pop cmp insl popf daa sub push fiadd scas (bad) dec clc sbb loopne fidiv sbb movsb test gs xor pushf mov pop xchg sub push addl xchg (bad) out or mov pop mov dec cli aas iret add push pop (bad) iret pop (bad) repz mov mov insl xor sub icebp int loope (bad) inc clc cmpsl xchg ljmp movhps or nop mov push fistpll scas inc pop pop sub push jle popl repz pop cmp sub adc push mov adc shrb popa dec dec xchg cmp pop mov cmp mov or and mov test lods inc stos inc out movsl hlt push sbb xor sub sbb mov repz les adc xchg mov mov and adc std fcmovnbe fdivs aad jmp push je add jae int3 lret bound push push imull ret shr stc nop emms ja cli mov popa jo or call (bad) lret fiadd push lea inc sub aas outsb add xchg or sub mov sub mov xchg and sbb sbb popf lahf jg dec popa int iret (bad) aam js fisttpl (bad) cmpsl pop lds imul cwtl out rcll or cmp cmp push int3 add fiaddl xchg and pop jnp jnp je,pt rolb mov rorl adc lods out jne gs pop fsubp cmp mov ret adc (bad) or add out xor ret in mov cs mov icebp mov sbb mov nop fisubr lret (bad) dec (bad) es (bad) push cmp (bad) lahf lock add jg pop movsb and scas xchg dec enter sbb mov loope gs (bad) jb xor ds xchg mov cmc inc add dec outsb xor mov dec and bound shll mov jnp and pop dec (bad) arpl shll push xchg sub in cmp mov sbb lods je sub xor fucomip popf pop or cwtl das dec mov pop adc xchg or pop cmp push rclb xor pop movsw cwtl sahf jmp xchg mov mov xlat jnp inc (bad) pop mov or scas leave jno ftst push (bad) mov (bad) jae jecxz repz push pop jle test adc or in mov rclb pop nop cwtl and movsb test mov jmp mov sbb xorl push nop invd lea movsl es xor sbb (bad) push dec rcrl out sub jns lcall xchg jns fs shlb ret loopne cmp or iret lcall mov test add lea pop mov and jnp mov push push cs adc dec push js inc out in out inc mov add mov mov jo push std notb fisubr mov (bad) inc push fs mov scas hlt cmp aas xchg mov movsl mov cmc (bad) jl sub inc into cmp sub in mov cmp es ret aaa mov cmp inc push outsb lods (bad) sahf push pop mov inc (bad) dec out iret dec lock in add repnz or cmp shrl add jle (bad) inc and std cmp popa push push test xor in adcb lea mov mov mov bound je inc jg fwait loop xchg cmpsb ret adc sub mov in rcr push add cmp fs pop outsl sbb psubsw adc xor and xchg mov clc lea mov adc pop and in hlt xor ds push jno mov rorb mov pop leave rorl repnz clc je mov scas or pop outsl xor (bad) hlt push jmp pushf aad jnp sbb sub and adc aaa mov shll mov cwtl int3 dec inc icebp jae cwtl dec cmp cmp lret xlat add pushf inc (bad) mov gs cmp aad pushf mov sbb pop stos fisttpll (bad) mov and loop push add pop shrl sbb push sub sbb arpl and xchg bound test lods pop cs stc clc mov (bad) (bad) mov push into jne in jecxz cmp (bad) mov int adc mov or scas mov sahf jmp mov out rcr adc inc dec imul nop inc pop (bad) cmc adc add cmp xor repnz jnp mov imul mov sbb pop push jl js or fbld cmp pop ss stos loop das es fbld pop sarb add push inc aas std lret mov fildll pop lock sub repz lahf sub test out adc mov test xor sub stos and pushf add sbb xchg xchg sbb jb push dec adc outsb fcmove sub lods sahf push xor dec cld cmpsb sbb push mov stc lock outsl adc and xchg mov popf mov lods or lahf jnp mov std (bad) dec js ljmp mov add sbb cwtl in fs leave bound push ss dec popf jno or fucom es loopne arpl (bad) mov leave fs das arpl std ret ss push testl jno push imul push arpl scas (bad) mov xchg sbb mov fstpt jbe movsb mov sbb (bad) pop pusha lock jne hlt lret popf xchg xor add lss stos stc sbb sahf pop sarl adc jne shl xchg dec in inc dec xchg dec push ss test addr16 ljmp hlt xor addr16 mov data16 mov stos and es in into xchg or dec daa movsl outsb test loope std sub adc inc and jo rcl jbe gs cltd js (bad) mov mov vcvtps2dq adc test pop ljmp pop cs lds dec shrb pop (bad) pop pop es mov jge jmp xchg inc xlat sbb jnp cmc loop pop sahf fdiv loop push js jecxz add lds outsl jmp jl add and lods leave sub mov out xchg or icebp mov sbb (bad) (bad) clc mov movsl and lret pop push mov lds fcomps xchg out jns push adc das arpl mov or ja mov mov sub xor dec (bad) push xchg idivl xchg cwtl pop pop das lea mulb sbb imul (bad) jmp test inc cli and jl mov stc mov ss lods rcll scas cltd les test lret stos xchg rcrl xchg hlt test pop iret pop ljmp imul inc stc repnz adc push xor mov popa mov test popf sub cmpsb fldt inc imul add jge nop test mov push daa and inc std inc sbb xchg pop adc push das mov ja stos outsb mov inc pop ds cmc mov sub or popa int pop aad fisubl pop (bad) ljmp sub js and (bad) lock in inc pop repz push push or (bad) mov leave in inc sbb jg xor jns in push sbb mov inc jbe and dec sbb xor (bad) dec bound scas nop in xchg popf fcmovnu sbb inc out inc popa imul (bad) out sti rorb xor dec xchg jno push std loop lret xor stos das enter scas mov nop pop mov jmp add cmp cld jl insb push xor mov xor sar cmc outsl out mov imul scas fisttpll stos repz sbbl cmpsl out mov in sub ja leave push jb inc ss mov (bad) (bad) lods lret push adcl push push add (bad) fxch lret subb mov out mov stos xchg faddp popf sub lods testl call cmp movsb mov add into or (bad) and and sbb in dec cltd xor into jge sbbl inc (bad) push push aaa outsb aas das xchg mov fistp mov jmp jge test cwtl pushf dec mov std pop xchg int aas (bad) cwtl mov cld jae sbb mov jp cwtl and sbb xchg xor outsb iret sbb testb js imul (bad) (bad) xrelease sub mov mov or xchg mov fadds pop addr16 outsl mov int3 addb cli out pop xor test and pop faddp sahf pop add push xor sti loop test and mov and ret pop and fucom inc loopne ffree (bad) push fimul mov mov lods or sub test xchg pop les xlat push cmp mov rorl cmpsl jnp mov xchg fcompl aam lods xchg sub push push inc xchg mov mov dec adc in sbb pop cli lret fcompl push cmp cli faddl gs jge lock push cmp out outsl out push movsb pop outsl pop fdivrl je repnz lea test xchg stos jg mov outsl and sbb xlat sbb cs inc addl push dec jb mov pop xor dec mov and dec cmp xor mov ljmp pop mov jmp es jle outsb test sahf (bad) lcall pop sbb std dec mov add aas sbb in lds fsub shl rol cmpsb clc (bad) fnstsw sub jnp adc and cli pop jl dec xchg mov bound inc xchg jecxz adc lret inc (bad) mov (bad) loopne mov push lock jecxz int3 add cmp bound inc push outsl pop xchg push mov rorb adc xchg lret adc jns sti je (bad) fstpl and repnz sahf xchg inc mov push insl sbb lahf push ret test outsb mov mov into mov pop dec sub jecxz popa or ja loop xchg jbe cmp sarb sahf push (bad) lea ja rcrl out mov pusha jl test jp jmp mov xchg mov push (bad) ss mov xchg aas pop cld sbb bound imul jg jmp push ds fcmove mov insb daa call or cltd loope rclb and (bad) xor pop in (bad) out (bad) cmp outsl pop nop test mulb bound cltd push jmp mov fidivl push into pop popa and test pop ljmp pop iret test and xlat shrb je jne sti stc movsb push (bad) repnz add mov lahf cmpsb sub cmp mov pop inc icebp test xor and pusha iret push idivb push arpl xchg bound addl lock or fiadd (bad) and int (bad) push das stos add dec jns sahf (bad) imul push push sbbl mov mov pusha lret jge test xchg or (bad) stc sub sub leave mov sub dec push mov cmc ret orl aad lahf jp aas add cli inc out sbb xlat mov jbe jmp in push pusha ss cmp push jmp sbb mov loope adc dec icebp push aaa in cmpsl cli inc pop into daa jge add add arpl fs jns and xor cmp add push mov stos dec sbb ret xchg xor addr16 mov inc xchg movsb jge fcmove push xchg out jecxz add adc push jg sbb mov dec xchg mov jnp cmc test xchg pop sar clc in movsl inc popa stos adc or aas or mov cmp mov cs pushf std popf arpl push sub adc fcomps cld je mov fdivrp loopne xorl out into adc jmp insb push mov mov aam das (bad) jne into sahf ret cld stos adcl adc scas cmp pop mov js adc (bad) sbb xchg mov movsb adc jae xor push fwait cli xor fs ljmp call imul push adc iret jb dec dec add mov and pop push (bad) mov (bad) mov push aad xor nop pop xchg or jne mov xchg in sub cld es xchg scas push push in lds fisttpl in jl incl push jb and bound jle rcrl sbb out add lea int3 mov (bad) dec cwtl mov popa dec cltd js mov lahf hlt add mov add cli hlt or mov adc mov (bad) push jecxz test xor pop mov jmp fs inc mov nop xchg les adcb inc bound arpl in xor aas popa and repnz fbld xlat or rclb mov dec test stc sbb push push std loope or mov pop daa (bad) xor dec popa xor cmp pusha repnz ret insb dec and jbe sbb mov push dec imul cli fsubl jmp orl add popw out jno pop les mov cmpsl adc push popa in std dec xchg repnz xor xchg dec xchg jmp push aas je fld loopne jg jno xchg mov or cmp add jno imul cwtl xor add call or dec mov dec mov cmpsb arpl adc adc dec xor cmp rcrb xchg jb orb scas outsb adc sbb bound dec pop dec popl cmpsb push in pop cmp test ficom int3 adc adc in mov dec lods inc cmp ljmp jne pop mov rolb in dec gs push lock (bad) das mov or fimul rorl jl mov jecxz xchg xchg cmp in mov pop aam adc jg out lret push cltd jp and test test movsl icebp and jle xor ret (bad) jbe push (bad) outsl xchg je dec cltd mov xchg mov mov imul pop xchg cmp or cmp call imul gs pop pop (bad) (bad) sbb jge sbb (bad) or mov jbe (bad) lret sub sbb adc (bad) jae pop mov sub in repnz (bad) cltd ljmp xchg xlat inc lods xor add hlt xor mov out sub js jo mov jne adc lret (bad) dec popa or or sub mov ret pop push pop cltd mov ror mov pop imul or mov xchg mov lret lods sbb pop xchg mov inc aas mov scas sbb int arpl dec xor stc div imul lahf xor cmp jecxz mov xor (bad) scas cmp outsb test adc sub rolb sub movsl sub lds sbb ret dec dec aad or je pop cmpsb jne inc stos adc and test popa ret mov les pop ficoml lds movb repnz mov xchg and loope ret test iret and cmpsl and leave shrb sub aad pop dec pop arpl mov push (bad) push pop push jno mov push fstpt mov lea lock cmp dec dec dec icebp push mov iret mov cmpsl jne sbb mov mov cwtd xor inc jo adc bound pop mov and and sbb addl loopne xor nop xor cmpsl cwtl dec add cmp pop xor es fdivl pop push int jae cmp imul movsb in fmul mov pop xlat dec pop mov cmp out jp cs in mov mov jmp dec mov stos mov mov out popa sub adc inc scas mov push xchg scas push scas movsb out movsl inc jmp jne lods jbe pop idivb push popf xor nop sbb cmp shrl fildll adc sbb push sub push out sub inc jne cs fisubl cmp scas dec or add dec inc xor xchg cmp or enter sbb jae aam adc repnz mov popf sbbb je popf stc ds mov jmp addr16 mov int3 mov in cmp fsts add or (bad) mov fstps cwtl sub pop lods xchg outsl negl mov (bad) (bad) adc lret inc inc jae mov sarl jnp xor mov fildl mov xchg aas cmp mov repz pusha sbb fwait nop add lahf jp sarl ret lret movsl inc into sub push mov cmpsl xor test int cs sahf push mov adc pop cmp add and mov pop pop jnp xor add xchg or mov je xchg sbb addb lret or mov sbb insb cmp dec and inc scas dec rcrl (bad) (bad) sub cmpsl push mov add loope out jp xchg push lds fs mov mov insb cmp and test dec and pop fldt inc lea imul mov jl fistpll orl adc ljmp cmpsb aas xor adc mov loop rcrl (bad) icebp out cmp pop mov xchg jo insl sub cmpsl push (bad) mov sub bound mov mov int3 aas push leave pop xchg xchg pop in (bad) push or mov xchg iret pop mov (bad) stc inc sbb mov (bad) pop lods insb movsb mov fistl mov mov push lock and push push les test mov inc sub ljmp stc mov push add pusha add jb xchg mov mov loopne movsl imul popf cmpsl in add inc inc out mov push (bad) je mov ja sub bnd sbb (bad) clc pop xor movsb out pop out mov movsl fwait rolb in fstpl sbb mov aaa daa int3 pop cmp pusha dec cmpsb icebp mov insb ss mov xlat xor inc sub pusha mov add sbb into pop add movsb xchg or sbb adc stos push out xchg jp insb jp js clc add jbe (bad) inc daa int loop mov mov dec sub pop test rclb int pop xlat (bad) leave aad sbb stc cs push mov or data16 xchg mov xchg imul sub aaa sbb stc sbb and popa or addr16 jl jecxz (bad) int3 or icebp push push sar lods cld sub inc mov pushf and mov fdivr cmp adc mov xlat jae pop insl xchg stc push pop inc leave push cwtl stos push sub pop scas mov mov pop (bad) repnz out fisub jnp xlat dec inc dec hlt sub fildl adc sahf or lahf mov loope insl sbb lea decl add je inc or icebp stc sbb xchg bound ud2 in sub push inc ret testb cli sub fldt shrb ret adc les ja nop dec daa repz pop rorl divb loope dec xlat stc repz mov inc insb pop aam xchg pop sub insl clc cmp push cld ss and hlt mov inc out imul loope (bad) out pop cmc inc out cmpsb sti ret pop stc cmp inc sbb (bad) shr ja and lea outsl gs js fidivl test daa mov cmpsb outsb loopne aad rorl out sbb data16 adc sbb mov adc push lcall jae mov push loopne xor fcoml aam jmp daa ret aaa dec test jp pop lret in es jle jo fadds test shl dec ja inc test mov xchg mov rol stos inc loop imul push sbb ret jb nop xchg cmp xchg sbb add pop popf xchg rclb mov add sbb scas dec loope xor mov dec lea ljmp aad lret jmp jle fwait sbb cmp lock insl jl mov or sbb data16 outsl lods pop pop aaa sub mov fsubrs or (bad) or add adc mov dec xchg aad dec xor push mov and sarb push cmpb fisubl dec divl sbbl xor mov roll adc mov and nop repz or jb jb arpl outsb lds sub jns (bad) icebp in out cmp pushf sub mov or adc xchg pop xlat clc jmp mov sub xchg push fildll outsl adc mov aam in mov gs subb mov and int3 adc pop fidivl hlt cmp jb mov xchg in scas mov mov inc pop js pop fiaddl or loopne inc add out inc or mov rorb mov loop and jecxz and stc pop out loope sbb xor cmp outsl push adc (bad) xor in adc fs or aam fldenv sbb aas mov fmuls leave xor shrb pop push sbb aas push data16 sub ljmp movsl xchg jbe and daa inc adc push push adc scas (bad) adc pop js jg nop mov pusha cmpsb lds jge mov sarb pop pusha push ss cmp and and jge cwtl cs insl pop cmp add jnp les adc out outsl stos lcall or or out push cmp pop bound adc xor test xlat jl mov push or popf shlb cmp cmp fcoms mov cld mov faddl mov push push test push neg dec xchg lret sbb fstpt pop cmpsl sbb fcoms and outsl mov cmc cmp insb adc test push add mov mov cld (bad) (bad) sub pop mov aad sarb lea js lds cmp or stos in mov faddl (bad) sbb mov inc dec ficompl in xor fsubrs cmc mov xor inc xor mov test push sub push push adc mov ds in lcall mov push lock mov cmp pop loop mov mov ds popa enter addr16 mov fs popf mov mov int mov mov outsl fadds or test repz xchg pop aad mov into sbb call pop add rcl incl dec (bad) cmc mov mov adc cmp sbb adc add mov int3 int3 int3 jp enter lcall scas jnp adc mov roll dec inc and xchg ret mov addr16 icebp push xchg push push mov sub mov insb add sarl pop cli xlat sub pop push lds (bad) jbe dec xchg notb xchg movsl add adc mov pusha pop test aas inc adc (bad) jno cmc stc push stos leave cltd dec or sub movsl jp stos jno repz inc fidivl js sbb inc xor cmpsb int or xchg cmp testb jbe inc pop cmp popf jns sbb xor mov cmp fwait imul inc das adc ja inc arpl pop add dec fcom mov xchg in rcr popa jb nop jg xorl add mov lcall movsb out dec xchg dec (bad) jle mov data16 push mov loop test in cmp shrb sbb xchg loop fist enter cmp popf sub pusha (bad) cmp xor jg repz xchg mov xchg push (bad) fcmovb add test adc xor xchg adc lock movb enter ljmp clc das scas lret stos leave sub js push and dec sub in adc (bad) jmp sub sub aam jg cmc popf orl loope mov xor gs aam pop xor add int das pop test cwtl add sub or cmpsb mov push xor jbe sub sub out pop in arpl ret or insb icebp (bad) btc loope stos pop xchg test aam leave cmpsb sbb test ja xor or dec adc or or sbb rorl xor xor add sub pop jns xlat sbb ficoml push cli fdivl cli nop sbb jmp mov jb hlt push jl ljmp adc shl jmp fdivp jne popf xor bound push inc jge lret fnstsw cmpsb xchg xchg ds ret ja daa pop mov push adc (bad) mov out ret (bad) xor pop cmp mov pop jne push dec xor repnz popf popf add mov call xchg or cmp fild (bad) jp jb xrelease fwait pop inc out ret into pusha clc in ss pop cs scas xlat ficomp repz push inc (bad) add imul cli cmp in push mov ret xchg leave and xchg jnp xchg movsl popa xchg cmp adc imul jl mov push fcmovnbe inc sub orb xor xor pop loope es pop jne inc sub pop mov enter les mov push sbb mov (bad) imul mov in jno cmp dec and push in add jecxz adcb and mov jp shll push xor addb jbe inc stos loop pop scas push int3 idivl xchg xchg test jnp ja pop pop sbb int3 sub mov dec lahf movsb aaa call inc dec rclb xor loop orl rcll sub add into pop mov (bad) add mov outsl push mov or imul or or mov popa cmpsb sbb jp xor lret pop sub daa je movsl insb fcomps add sub int3 inc outsl cmp mov push xchg mov mov sbb jl push out mov inc mov mov cmp jmp cmc mov mov jmp push and jmp pop call jg pop jne jnp dec stos sub (bad) mov xchg repnz sbb jmp cmp jo sbb imul push mov or pushf cld jne ret fsubrl mov xor mov ss mov es (bad) mov mov mov add inc stos fsubs jge jp jae,pn add mov add mov cwtl xor in xor stc inc ds mov loope inc sarl repz sysret jns mov mov and mov jmp add lods and js fdiv jnp dec add shrl sub or add dec xchg repz pushf push fdivs aad push xchg mov mov add ret popa push jl pop xor and adc mov loopne sbb movl js push xorl push inc push add popa iret cmp das push lods mov sbb inc cmp push add scas mov pop bound roll jmp pop push js push std sti aaa or ljmp inc stos push jbe dec mov nop mov add lds in mov rcll cmp sbb clc fwait mov mov adc fwait out pop fdivrs nop xlat pop es insb mov cmp fwait cmpsb push dec inc in jnp jae pop mov xor xchg xchg daa jns roll adc test jl ss mov mov sub cli dec stos or rcll movsb loop xorb sbb mov (bad) fstl push rol cmp adc sub (bad) sarb cltd jmp je popf fiaddl xchg stc enterw rcr and in ja dec movsl xchg fimul stos jne sahf mov mov in loope insl aad pop sub ret pop mov jne mov cmpsl mov shrl movsl xchg stc flds iret pop repz xchg cwtl (bad) nop and inc dec sbb sbb mov add sub clc pop les insl jo js mov inc cltd push jns ljmp push test mov pop cltd jmp jb loopne inc push dec push jl hlt out lods adc pop cs jns or pop jl aas les cmc xchg xor loopne fstpt loop cltd jle (bad) sbb pop push jno jmp loop lret out and mov sub push and push in add mov and iret fwait cmp cmp adc or cmp lods adc pop (bad) movsl push or mov shll xor jns js shlb in cmpl mov sbb jp fsubs inc ljmp aaa notl pop syscall fucomp push std test xor in (bad) hlt jo divb lcall mov (bad) and cld out pop xchg dec and in push cs xor push int push bnd data16 sbb lds popa and pop mov lret mov pop mov out shrl lahf xchg sbb fcmovnu pop sbb test test add fsubrl adcl or cmp mov fmuls fidivr inc push pop xchg cli pop inc fild cvttps2pi push sbb in gs push sbb sub sub jp mov sub mov test pop pop xchg jbe outsl dec cmp mov aas fidivr xor adc push dec push movsl ss nopl int leave mov push pusha mov in push lods jmp sbb mov pop cmp cmp arpl xor (bad) out daa add aam (bad) and (bad) xchg jne mov pop fnstsw pop mov push (bad) jae ret (bad) and movb (bad) cmp cltd inc add into jge pop fs pop lock push sub es xchg jmp insb in hlt test jge xchg jp mov call xchg dec sbb dec shlb sbb (bad) in stos xchg xor and inc (bad) repnz and ret cmp push push add out out ja inc out test inc mov std repz imul adc test popa inc int3 insb pop int push cmp lods outsl xchg sbb inc sub int pop push popf inc daa and dec (bad) aad pop mov ret jg sbb shrl sahf cmpsl (bad) xor movsb jns or or insl sbb and mov and jmp (bad) rorb xchg push je mov cld decl and sbb xchg and mov (bad) notl cwtl stc push push ret scas lret pop imul loope rol test xchg adc and inc lret flds inc imul int3 lods mov lea dec (bad) ljmp add inc mov rcrb mov sti fdivl (bad) jbe jnp fildll movsb push daa rcr and xchg mov cld fs mulps jns lds test dec js bound pop cld fstps sbb xchg repz xlat ja jl mov push cmp mov xor ss sbb xor jb outsl (bad) leave jnp cwtl pop jecxz scas arpl ds xor cmp data16 sub imul imul push push cmp add enter popa sbb adc add mov push and (bad) or mov mov adc jl sbb das mov stos lret xor xchg std das sub and mov fwait push clc add ss es add sbb (bad) cwtl push lea sub pop pop shll jle dec ja orl js lock ror movsl (bad) (bad) test sarl xor or in dec rolb sbb mov pop and adc jo sub push pop xor jl pop test hlt movsb jmp sub push pop inc jb dec into lret fnsave sbb test mov std push loop shrb incb pusha sar dec jl mov int adc cmp and aad adc mov add cmc dec ljmp mov jnp (bad) adc outsb je xor fs pushf js clc adc out sub test int3 xor cld iret test scas sbb mov sub or movsb xchg jb loop push cmp les loopne or js pop inc adc add sbb hlt outsb adc pusha cmp mov ss xchg inc xor insl add imul (bad) pop ds movb movsl (bad) adc xor out push pop sub gs adc jbe add add ss dec and lcall outsb sub mov imul push jl xor in pop insb pop jg mov xchg aaa push ja inc aaa stc inc jp xchg sarb xchg mov imul rorb sarb pop mov lods sbb in test mov rcll not cmp push mov inc cltd jecxz es and das jno sti push arpl mov imul push into es cld sbb cmp mov sti xchg cmp adc cltd cmp add clc std out adc pusha push test mov xor insl imul inc incl mov xchg mov mov or in jmp out cmp mov test xor or push das mov push test mov add and (bad) arpl jle int jns iret dec data16 (bad) add gs xchg pop das int mov fisttpll inc jno inc cmp out (bad) adc mov ljmp js out xor inc cmpsb push jle nop out sbb inc cli inc insb pop dec outsl test sub pop es imull sti es add inc mov and subps ret iret xor push sbb xor inc sahf int add push mov pop insb push dec sub idivb es push gs pop pop movsb gs mov jno xchg sub pop xor bound push out cmp xchg mov adc mov pop pop jecxz loop jbe insl or fcoml mov stos imul popf std sub xlat lcall loope out pcmpgtw jnp and mov imul mov mov stc fs inc sar inc loope stc les fistl sub loope pop popa orb or xchg mov mov insb push sub outsb out aam clc ljmp xlat pop mov and add sbb push sbb outsl shr sub xchg push cmp cld ret shl mov imul in insl movsb fadd (bad) es or pop dec push cmp movsl pop fs pop popf add adc inc and dec pop aad scas xor nop mov or mov in mov jecxz lods sub inc jmp popa popf jb mov ss xchg bound out pop out ljmp pop lret xchg mov sbb fwait into push push push cmc push cmpsl loop push push call xor and ljmp cmp call mov cwtl out jg aas pop (bad) or sub inc jmp mov xor (bad) fist and lods mov call pop fs repz inc mov push imul addl add push jle mov dec or mov mov lock cmp xchg push (bad) or add addr16 sub hlt aaa fdivrs inc xor jge mov aas mov or cltd xor jecxz jp cli in divl mul jns rcl push jmp sub push xor stos lods cltd mov jp mov icebp sub adc xor pop jmp mov stos sub stos out add repz add mov addr16 jle or (bad) fldt aad mov mov cmp inc mov add push or leave push cmp xchg jae sbb cmp ds sub ja xlat sbb lods and frstor add adc (bad) jb inc and xor pop fild jmp test (bad) jge fidivl push jb (bad) fnsave xchg mov sbb push ficompl push sub out xor insl push sbb mov jecxz (bad) hlt ljmp pop mov sti mov dec mov adc insb cli (bad) jl (bad) push es lret dec mov ljmp ret sub insb push inc in jp mov jo or es add icebp mov enter test in in rol pop pusha pop inc ljmp mov mov (bad) jo jle push lods fistpl rolb and in fadds dec aam adc movq jle stc les mov int3 cmp dec and clc xor (bad) dec dec xchg movsb bound mov es es cwtl int adc test sti (bad) dec in xchg jge imul push cmp xchg cmpsb sbb dec stc hlt popf in fsubrp (bad) lret (bad) (bad) jne in or fcoml mov adc ret dec cmpsl jo push (bad) lea or repz xchg xor jmp mov or xor lret jns adc pusha pop mov in dec jo push sarb fild mov dec xor sub pop sarl add mov loop movsb (bad) (bad) cli xlat movsl xchg (bad) jl inc in cmpsb or jno push dec in loopne aas mov fdivrs lods mov jge hlt leave inc rorl pop hlt inc sub xchg sbb in sub jns push push je pop aad and data16 fs sub jle sbb icebp xchg lcallw stc pop or xchg inc or test fcomip pop mov sbb sub (bad) push pusha push into cwtl mov loop push xchg das movsl adc xor icebp mov sbb sub imul es shlb fadds or xchg daa jle cmc sub in js fneni(8087 jle cmp and dec test stc cwtl cs sbb mov fbstp cmpsb push (bad) mov movsl or icebp andl add or adc (bad) popa popf push mov lret xor popa xor cmpsl insb or sub mov cmp push cmp adc or dec test bound fbld cmp in inc aas push adc lret addr16 ret jge cmp ror adc mov mov inc push jbe in aam cmpsb arpl in mov or std inc adc dec shrl push xchg daa inc stos rolb pop incb push add mov mov jle stos cltd and sar sti ret cltd aaa add icebp and ds das mov xor inc or cmp sub adcl sbb aaa cld negb push stc adc mov das (bad) movsb (bad) loop adc xlat mov sub mov stos mov shr outsb out into mov int3 sbb les cmpsb test push out pop xchg lcall testl or pop test shr scas lock js push dec inc cmp vmovupd ret imul jae mov into (bad) iret mov sbb sarb and cmp fmull pop cmpsb scas dec sub jle insb mov mov js jecxz pop push and xchg lods enter lods stos mov hlt or mov test (bad) fwait aad mov pop mov inc test cltd imul push jbe lret sti sbb daa repnz stos test mov jmp push in push xor (bad) dec bound jle or int3 outsl daa jp mov jo sub into hlt gs mov decl pop or dec dec sbb out data16 test mov ja sbb cld in andb and mov nop add (bad) (bad) insb pop test cmp loope rcrl divl lods call aad (bad) imul popa and fadds ljmp mov inc and sub outsb cmp mov fist leave or mov or lods imul adc inc popf sti sub add call test ret sbb repz xchg xchg ficompl or mov and pop mov sbb xchg (bad) push (bad) jl pushf pop ret dec das xchg aaa adc out imul adc repnz xchg jbe je mov jb push add std int cltd dec mov cs dec into je dec jno in adc popf cmp js sarb xlat cmpsb outsl mov mov jmp dec mov neg add leave sub or lds cmp ret jns and mov imul js jle mov (bad) (bad) pop and mov push xchg das mov cmp mov cwtl jo jge cs cltd hlt add pop inc jae call (bad) jecxz out loop cld sbb popf and imul lret out addr16 mov iret fidivrl xchg testl mov push and cli pop (bad) lea leave je or sub out xchg xor lret cltd hlt pop xchg movsl jmp ret (bad) mov sub bound sbb fisubrl dec cmpsb arpl repz cmpb dec addb faddp lds mov jmp leave lret or mov jns sub sub xor pop stc (bad) imull rcrl shlb outsl ret jecxz pop add add or js mov in cmpb mov sti (bad) (bad) hlt leave pusha xlat lock cmp loop mov shlb je sub inc sub adc inc cmp jo stc mov and xchg std (bad) dec ret adc iret popa pusha ret xor cmp inc dec out fildl inc (bad) ret in jmp xlat adc ja adc shl mov cmp stc lods sub loop scas loope pushf rcrb stos enter (bad) jb enter int aad jo scas cmp add andl fcoml and repz or out push xchg aad ds pop jns movsb sub adc add pop adc dec inc adc insl xor inc dec and cmpsb pop les xor aad and push sub stos xchg dec frstor shlb xor sub (bad) ficoml fmull test fdivs cmp es and insb je dec lods imul dec mov mov pop imull or add enter hlt (bad) sbbl pop cmp mov pusha fmul (bad) into add jmp mov stos xor mov pop in shrb scas xchg imul pushf mov fldenv jno (bad) jbe jle mov cmpsb pushf push aam push test push cmpl push inc mov mov scas xlat and dec fnsave mov (bad) jae push jmp pop or rcl cli xor dec or jb test lea std je (bad) hlt stc lds or xchg and add xor ds mov cmp out jle jmp mov and push stc or clc rorb outsl int imul xor (bad) into jns fisttpll mov and cli adc sbb ret (bad) mov into std xchg jo push int3 or jg push (bad) xchg mov ja cmp and int3 xchg push sahf daa rorl outsb push sub dec pop popf pop lods out mov lds jo adc fwait pop popf sub repz aas loop mov cmc pop push mov stos stos ret in lret pop and js ret imul or pop popa stos popf cmpsb inc adc mov xchg push xchg mov inc mov pop cmp mov pop lcall stc fisttpl dec and push push outsl rcrb mov mov sti and dec fs pop (bad) xchg std lahf adc adc adc mov call jg jbe call sbb icebp lcall dec xor adc pop add inc push push cltd out fisttpl in push and sbb lock push lret lahf add pop mov das je fistl neg and in sbb mov and pop add pop mov imul jne dec imul mov dec cwtl fisubl fmuls dec out pop (bad) (bad) outsb aad (bad) cli jae mov xlat push scas mov cmc xor fmull dec xchg push cltd lret lea adc bound inc xchg scas push mov xlat mov xor insl xchg in in mov mov mov pop pop dec add in int3 nop fidivr jecxz inc and ficom int3 lods scas rorb repz cmp adc and and pushf jecxz incl iret push adc andl sub mov jb adc push mov pushf test mov cmp mov and pop mov sub arpl mov xchg push push adc sub xchg pop popf jbe in fisubr ss push test cld sub sbb mov aam push inc movsb sbb cmp aam je mov or pop inc sbb hlt paddw mov mov jge ret rcl out jp int3 popf push or dec or adc inc insb dec dec or push lahf inc xchg lock push insb xchg mov pop mov jmp fwait dec int3 mov psubusb inc jge or adc int3 pop scas dec das sbb cmpsl mov out clc xchg sub jo or pusha mov push cmp and rcrb ss push dec xor ss shrl push mov into (bad) pop xor push lods in test into mov lock (bad) xor jge xchg (bad) sbb enter (bad) sahf xor push test and push xchg leave (bad) sub scas pop sbb dec add adc dec in mov sbb mov pop jp pop cmp mov (bad) jb dec jo xor jae pop sub mov test pop jns cmp daa adc cmp sbb xor sub mov mov icebp jo loop icebp sarl push je xchg add push rcrl dec mov sub int clc adc add inc out imul sbb adc out jl repz stos sub mov push sbb push add or cli dec push inc mov jp je jge xor pop stos pop xchg xchg xor push inc or and cltd xor xor rcrl (bad) cmp mov aam test lock pop sbb pop ljmp push inc xchg (bad) stos les mov in sub xorl (bad) ss mov (bad) dec inc xchg or js cwtl cltd or cwtl jmp bound repz xchg dec rcll jmp popa jo adc dec cs push cli int3 sbb sub pop stos aas dec incl pop sbb aas sub rclb pop pop popf dec addr16 loope insb mov mov xchg cmp (bad) fwait (bad) xlat les cmp add sub mov or pop imul mov clc mov pop repz sbb and dec mov in sbb lods lods push sub divb mov jmp sub pop fcoms repz sbb cmp cld clc sarb mov gs pop push xlat xchg xchg xor fsubrl movsb out dec xor scas daa cmc xor call ret mov call in paddsb push mov lods fldl daa lret mov jae in (bad) mov addl xor dec mov mov dec adc (bad) and pop out psrlq popa and push fdivl pop or sub push or sbb aaa aam aam fcomps adc out pop xlat loopne or mov cmpsl aaa (bad) stos pop sbb mov mov push aam bound out mov out lcall into insl rcrb mov push cmp add clc dec fisttpl push cmp pop popf fstps mov (bad) mov xchg pop adc shlb test mov lret mov cmpsl mov arpl cmpsw pushf sub shll and pop (bad) int3 cmp aaa (bad) dec sub and into imul mov sahf int3 push add das pop (bad) or inc sti in pop pusha dec in and mov or inc xor addl ljmp mov out or push xor jl addr16 sub pop lret and push popa jmp (bad) fstl jmp xor lods je pop ja lret mov int3 dec sub jbe mov mov add mov lret mov lret rcll mov mov fmulp rclb jo cs into jb in clc sub sbb dec pop jl adc fidivrl imul (bad) mov daa sub outsb daa cmp fcmovu cmc bound fcoml or (bad) jbe lea and mov mov xchg ljmp and popa push jo xchg lock pusha mov fdivl js push cli mov (bad) or xchg divb sbb jbe sbb adc add out sti or adc stc fdivs lock addr16 jl inc xor ficom ret xchg xlat sub sub movsl xchg dec sbb ljmp push pop xchg addr16 jge (bad) stc sub imul nop nop test mov stos (bad) mov inc pop out aad lcall xor std scas push jne push mov mov mov inc sbbl mov xlat sub cmp mov add ljmp sub xor scas movsb rolb sub push push fdivr test cmp fisttp mov imul xchg clc jg roll pop or iret mov jae or jb ljmp cmp adc cld lahf test sbb pop pop push js pop push pop push scas push cmpsl (bad) icebp clc mov push jecxz sbb lods jge pop jbe lret adc repz push lea rcll mov add inc test xor out daa cmpsl outsb push cmpsl or xchg and imul inc (bad) aaa loop cmp add int mov test std in imul fs (bad) fbld jb lret lret add sti leave sbb push out jl mov lret xor pop push sub add push jno jge,pn jge dec inc sbb fs pop adc pop mov ret (bad) out sarl repnz push pop adc jbe cs lret fild pop fdivl add mov shll mov sub jecxz out and inc adc push push popf or test inc and insb in adc daa fwait sub adc pop aad movsl jb adc xor mov sub or and push sub cmp xchg or cmp cs stos sbb (bad) rep lahf ret outsl test test sbb cmp mov lods cmp push rorb dec mov dec test rolb subl (bad) cli mov rclb int sbbb or or fnop xchg lret cmp sbb int mov lret xor std push (bad) pop inc add xchg scas scas dec or add xor test lret sbb sub mov push add push out push incl dec in mov icebp lea lea lahf push sbb movsl mov js arpl cmpsl pusha (bad) mov push and pop mov pop out xchg fcmovb js int3 dec inc mov push push rcl (bad) ja ret and dec (bad) sti clc and mov sub pop out mov fstps fsubp mov sbb push sbb sub or dec sbb repnz pop scas push xor dec popf and dec stos inc jmp rorl pop mov jno push push out add lock push fnstsw or xor mov test jecxz sbb sbb ficoml aam pop sbb notb sahf lods push pushf push sbb xchg out incl mov sbb dec call int3 test adc fisubl inc sbb mov pushf pushf out fisttpll scas xchg (bad) fisttp mov push dec in test mov out popa cmp fabs ljmp loope repz lea lcall mov fisttpl out xor adc lods out lods or pusha cli dec jnp (bad) adc mov mov (bad) cmp inc cmpsl pop mov mov imul shlb faddl (bad) jb adc (bad) aas cs aam (bad) aas push (bad) hlt (bad) mov outsb inc push gs mov mov pop push scas pop lods add jbe add push bound cmp dec dec ds mov ljmp out fmul and ss mov fsubrl mov ret lock pusha push das pushf leave in add mov pop sub xchg (bad) in push pop sahf lds sub mov stc (bad) out and daa jp int jnp jb ss fist shrl xor les daa dec push mov add int xlat scas imul mov mov fldt loopne push sub ja and sbb mov fs inc pop clc fmul icebp fsubr fld ret ljmp sbb mov jo scas adc fs out dec sti hlt and test xor test push inc pushl lret call jae sbb xor hlt dec hlt cmp ja xor or xor popf sub mov inc sbb xor aas sqrtps (bad) add lret sub cmpsl (bad) mov incb and mov adc jno cwtl fdivr and add dec mov inc fs (bad) xor xor pop or data16 xor push jecxz or je inc inc rol cmp xchg mov ds or fsts inc (bad) les jle pinsrw pop xchg sub loope dec lods push pop andl (bad) in repnz popf ret dec mov ja fnstcw dec sub push (bad) lcall ds outsl inc xchg mov out inc mul fidivl loop out iret and scas inc xchg aas iret int3 mov ja pop cmp and shl inc shrb test push in popf fldt sub bound mov cli or pop and add xor pop flds pop xor mov xor lods fisttpl inc clc andl add push popf sub adc fcom mov dec stos pop mov fwait mov fsubs jecxz pop mov jne jge outsl cwtl aas xchg jle jge cmpsb ja xor xchg mov adc cmp push xlat movsb jp add (bad) xor xchg insl cmc xor mov jp inc addr16 xor lods adc stos ss je ss ret movsl (bad) imul fwait ljmp mov xchg sti mov in jns dec and push push jl mov and sub lret and mov (bad) out rclb dec inc inc jo add xlat pop std or out popa sbb test jecxz mov or iret xor in pop mov ljmp and xchg xchg aaa notl fnop push pop ja out xchg outsl inc fdiv cmp add adc (bad) dec jp xchg sbb inc fldt cmpsb xor adc aad xchg xchg ret or sarl pop dec mov and and and pop mov scas hlt lret mov xor sbb fnop and pop out stos jg,pn out xchg insb add repz stos pop (bad) lods dec adc xlat xor adc pop mov add repz pop testl ss add adc movsl adc cwtl xchg pop loop sub dec jg lret pop sub inc enter aaa enter ljmp inc inc jle lods loope enter lcall sti outsl lcall add mov (bad) cmp sarb mov (bad) (bad) addr16 in in add pushf lods cmp inc lret sub push push ret lods jne inc add mov push les out sbb pop loop push mov hlt out xor aad pop cmp xor out adc inc cs clc loop je into sahf scas add and pop bound jno mov popa jne mov neg push push cmp pop sub adc add addr16 jp cmpsb popw jecxz inc stc inc mov pop aam xchg lret cmp or or sub pop mov enter adc stc daa stc testb xchg in dec push daa and pop sbb jo leave test test mov inc fisub leave sub jl push inc xlat in jne mov enter repz xchg mov pop cmpsl cmp mov stc mov xor mov inc test test es jno cmp cmp inc popf adc movsl push fmuls ret test cs movb (bad) (bad) sbb ss cmp adc arpl lods cld inc stos inc enter xor mov inc mov frstor imulb clc cmp and mov gs (bad) jns mov ja sub aam mov in cli jno xor push test pusha pop outsl mov pushl incb or push xchg jbe add xor and stos push mov push aas jmp xlat cmp daa cltd xchg jecxz std wbinvd push inc mov aad enter ja dec movsl lock jnp jae sub adc jge mov jp jecxz xchg insl loopne (bad) xor imul jne into int pop sub xor shrb inc sbb leave mov inc movsl ret (bad) out fsub mov pop or mov lret (bad) jmp add shrl xor adc lcall sub xor pop cmpsb popa cwtl push mov mov in fildl imul inc pop shrb out add rolb bound inc lahf jecxz ficoml daa dec sbb mov imul insl add cmp xchg jns aad into popl xchg or enter into mov xchg clc ret pusha in (bad) xor pop or xchg xchg xchg cmp loop push enter repnz add test clc or mov leave and sbb lds cmp xchg fadds or push jmp or (bad) leave ss aad add push aaa ljmp lea add xchg mov push dec dec js jg pop insb test test ficom or cmp (bad) mov inc negb xor pop mov cs push movsb and fidivrl icebp std cld jae xchg or scas xchg xchg sarl pop mov test pop cmp pusha and pop daa fidivl add repz aam mov pop push cs xor nop cltd dec sti ljmp in call fisubl repnz ljmp fcompl aam (bad) out call lea jle xor lds xor inc clc loopne (bad) inc and ret cmc add (bad) mov pop and cmpsb out sbb pop mov mov aam pop js scas add std sbb xchg lret cmp xor cmc test stos inc xor pop and test jae sti icebp daa xor sub lcall fnstenv je jne jns jmp pop (bad) xor std inc pop movsb (bad) loope shl stos es popf popa cmp and int out sarl test out jg inc inc scas cmpsl fadds adc and xor xchg cmp pop add rolb xchg fidivrl mov lods sub and fwait lret push inc cmpsb repz outsb inc mov gs add adc fsubs push mov das cmc cltd push cltd rcrb or inc jo out sbb mov clc sub (bad) cmc cmp fdivp es test jecxz push xchg pop mov fisubr cmp mov sti popa fbld push sub xchg add jbe outsl test stos aam fldcw movsl (bad) aas fwait xchg jp xor mov sbb add std push sbb push sbb (bad) pop dec inc pop fisub fist mov test fs clc pop gs fisubl fwait jle sbb dec addr16 dec int repz lods jb adc jg dec les (bad) sub fcoms sbb imul dec mov mov dec xchg in xor test loopne mov xchg mov mov les jl es arpl mov or shrl mov (bad) test iret push jl fisubr push adc dec and xchg xor loopne push jb xchg mov inc jnp leave lcall adc mov shll popa xor xor add xlat shrl imul std or cmc jnp jb cmpsb sbb pop cld cmpsb jmp inc sbbl jno mov mov imul xchg and pop push out sbb sub add iret pop repz mov imul loopne gs inc push and mov adc mov inc adc lock insb jbe test pop pop jp cmpsl lret daa popl inc loopne push or push xchg cmpsl add lods xchg mov push (bad) je stos (bad) dec inc data16 repz cmp stc and (bad) ja mov cmp mov cmpsl lret popa add push pop shlb or pop or sub pop and add dec xchg out sbb lock push xchg adc fs mov mov add jge stos add jl bnd repnz scas loope cltd add push sbb clc jge mov mov push jno enter jmp repz fbstp pop xor mov xor xor jno xchg fcmovnb test repnz jl aam xchg sti mov test into pushf push push adc pop xchg je ret xorl dec mov pusha ja clc inc ret fisttp sbbl mov out xchg idivb or dec adc pop inc sub (bad) lcall int cmp adc jmp push dec call cmp repz addr16 xor insb out mov and ret mov pushf push ret lds sbb cmp adc add ret ds or push repnz mov mov mov leave dec mov ja pop decl adc (bad) bound and shlb out popa adc add inc leave fdiv popa cmp cmp repz out lock jbe xchg scas mov bound jp jns roll jecxz dec iret inc and cmp mov je outsl leave jecxz sbb cmc xchg sub adc imul and xor aad cs roll add mov jbe icebp mov int sbb lcall (bad) dec mov ds loopne dec lods sbb push dec jo jbe xor jae sbb cmp dec movsl add (bad) out jecxz mov add push add dec clc incl jmp mov mov cmc pop inc aam sub ljmp pop xor dec sub mov repz adc out ret xor shlb mov lods xor notl xor pushf push cmp xor adcl nop addr16 adc push das push pop imul pop add cltd sbb sbb xchg inc fimul into int3 jnp adcl je pop pop mov fsubl cmp icebp inc int3 repnz xor mov data16 aad sarb inc push push lret es or cmp addr16 movsb xchg jg sub mov jns ret push push push pop push dec icebp adc push pop lret jbe adc xchg orl xchg adc in sbb and sbb mov or test scas loop or xor insb xchg fwait cmp lea jge outsl jecxz mov es add cmp lods pop pop jecxz or int cwtl gs mov mov mov scas lock and and sbb sub jns out mov ljmp or ja mov add push adc mov lcall loop js push enter cs call lret in pushf pusha rol sbb stos or push negb mov mov pop cwtl imul xor (bad) mov mov dec jmp (bad) mov mov dec add flds insl pop inc lahf int ret mov xor dec mov pop and icebp pop xor xchg lcall and xchg packuswb mov out clc stos pop leave push jno dec sbb jecxz int3 ror adcl flds sbb sbb sbbl mov test sarl test cmp aad jl jmp mov (bad) jnp repz lods fnstsw (bad) icebp adc add cwtl rep gs pop arpl fisttpll sbb das jmp repnz lods dec or jecxz xor inc cmc out xchg lea idivb mov cmpsb pop add push sbb cmpsl test jle idivb or adc mov leave or jae dec mov sarb push icebp sub sbb scas int in (bad) icebp sub imul push lahf pop push mov dec (bad) incl dec jp int orl test inc mov leave xor je push inc pop popf inc jno unpckhps fnstenv movsb mov add fcoml or ja mov pop movsl enter pop push adc push sti in js ss lods cmpsl and mov adc dec mov ret scas inc mov test rcrl pop iret push pop test cwtl lock pop xor pusha xor sub jmp and cltd push add adc mov loope popf scas xor mov lahf inc and mov lods mov mov popa jecxz sub inc xchg push mov bound (bad) das dec pop xchg and sti inc and scas jmp repnz xor loop cld nop out mov push push fwait cmpsb repnz loope lock ja adc inc sbb xchg pop sub mov popf sti mov push add mov test rcrl mov repnz stos adc loope fidiv inc mov inc push mov pusha sub sti xchg jns xchg add into jl and xlat aaa fsub arpl cwtl testl mov (bad) and sbb dec (bad) mov test adc into lds or cmp sbb mov and pop mov inc das daa mov mov xor fnstenv jo or pop daa adc pop pop mov and jb inc fadd fsubr addr16 insl mov inc outsb mov push dec or test xor jecxz dec je out fdivrp lret popf mov mov ror lea negb push lock pop scas imul cmp ror jae orl xchg hlt push scas loopne,pn mov jnp jns mov fadd pushl gs or add cld add inc inc cmpl and sbb jb add xchg cmp pause mov push pop xchg jmp insl mull pop out xor aas cwtl subb jecxz sahf mov pushf or dec std xor mov jp test xor cltd dec sbb aas xchg and cmp inc lahf add adc andl sub dec cmp dec arpl data16 jecxz cmpsl rcl fadd cltd aas pop cwtl leave xor pop xor mov lcall add out scas int3 sub pop push fisubrl clc popa xor setp cltd dec xor icebp adc add push ret dec cmp sbb or insl add cwtl pop loopne push push sar inc and sub mov ljmp movaps dec adc stos (bad) les ret mov mov jns fisubl daa leave mov lds rcl push je push cmpsb sub insb mov and inc inc iret daa jno ret mov lods add mov sar mov dec or jge or jl fadd cli mov fldt daa push inc cmp mov cmpsl push pop mov and fisubrl loop imul in adc divl cld cmpsl out das lahf xchg roll push cmp sub inc inc mov scas pop pmaddwd mov mov and and xor adc mov cwtl inc xchg arpl loop mov js popa pop lock test cmp lea sbb pop xchg dec pop push mov push fcmovb sub pusha imul jl sbb divb dec std add mov mov in shll insb ljmp loope pusha test jne das arpl lret cmpsl push out fldt inc arpl sti or movsl adc mov xchg adc sbb es test fldcw mov push loopne mov mov lea mov loopne mov fsubl mov xchg adcl dec pop and mov sub adc ljmp pop scas jl mov push cli roll lods cmp jno pop jb sbb int scas mov (bad) push or inc iret adc add je sub (bad) pop add mov add das adc jb push push cmp (bad) mov hlt jnp inc nop dec or in push mov add lock xchg cmp jmp xor lahf jmp nop inc push sbb sub out sub clc sbb pop or repnz xchg jg or cmpsl arpl sbb pop hlt mov insb mov ja,pn ret push movsl mov (bad) es inc shrb inc sbb loop icebp call enter das inc in mov ss and je (bad) cmp in ret mov (bad) cmp fistl cwtl xchg add popf mov inc mov cmpsb les or dec leave repnz or xor jbe or popa popl js mov mov mov xor aad and push lock stos mov and adc push sbbl in loopne repz or mov jo dec adc jo xor add icebp push scas mov sbb hlt xor xchg lahf cmpsl fild sbb mov enter dec rclb jno xor mov mov sbb test lods lahf in aaa in mov sbb clc je inc sub fwait jle fildl pop ret daa mov sbb xchg cwtl fstp jge lock xor push lret jnp sbb sbb iret icebp mov lret lods lcall leave inc std std pusha jl js movsb test (bad) xor pop call sarl adc cmp lret sbb push outsl push push insl das ljmp cmc fistpl mov or out insb add xchg movsl pop inc dec jo jo dec or jl icebp add cmp sbb add sub (bad) jmp and jne add adc jo (bad) imul inc js cli pop sub movsb lretw jbe pop add outsl inc dec idiv scas mov cmp imul aad inc jp xor stos cld mov adc stos mov imul adc mov xor inc pop int3 sti or lods fsubp sti mov mov sub cmp pop mov mov jge mov (bad) jle pop cmp dec mov dec popf mov ja icebp pop lret xchg loop or push xlat pop cmp rcll dec jo dec jmp and mov (bad) xor push inc pop (bad) mov inc movsl loope mov push xchg (bad) fbld dec inc std mov fwait jns jb dec mov std insl in std pushl adc add cmp lds pop lahf xchg adc cmc cmc xor add sbb add fimull or mov arpl pop ja das pushf (bad) (bad) dec lcall inc pop mov icebp (bad) aad push pop or mov xchg rcl sub loop and mov xchg sbb cmp repnz stos (bad) or ficompl jle rcrb and mov pop imul stos dec dec out gs popf fcoml loopne pop and dec pop pop rorb out jbe (bad) leave lret lret inc daa add push xor xor push popa sarb lahf cmp jno mov fldenv add in scas rorl push cwtl popf lock int push outsl dec or and leave dec (bad) jnp jecxz mov add mov data16 insb or pop insl cmp hlt leave inc std out out jmp or cmp pop dec xor fldcw insl movsl mov jecxz out call dec pop dec add xor mov fldl jno mov jmp fwait cltd add sub fs test mov cmp mov mov xchg insl pop mov addr16 jmp cmp and insb jecxz int dec inc fbstp push cmp push pop in (bad) push xchg imul lods (bad) lcall cmp jno aaa pushl push popa (bad) out lret xor xchg movsl push sbb sub jbe adc and sbb (bad) jb in sub mov (bad) ja cmp xchg repnz mov mul sbb inc mov loop es rcrw sbb leave lods movsb lods (bad) mov enter pop mov data16 xor add and fmull jecxz adc xchg xorl loope rorl out push xchg push inc cmpsb loopne dec adc xchg fs inc sbb cs cmpsb dec insb mov sbb xchg add int3 mov push cwtl sub cld dec test scas cmp xchg pop imul lret stc pop ds jnp lahf popl nop sbb xchg fwait (bad) xor and in push adc add (bad) cmp cmp dec mov icebp add cli jmp cmpsb test adc std jmp push inc jno fwait lods or loop mov test pusha outsl mov icebp add pop xor loope adc sti icebp sub outsl mov clc outsb or add sahf les xchg pusha fld1 scas pop cld push (bad) repnz jbe cmpsl shll std mov (bad) mov jne push ret jecxz out (bad) lret lock (bad) imull ja lock adc (bad) ss push cmp out mov stos repnz jmp mov ret xchg dec loop cld xchg mov pop xor push inc unpcklps nopl hlt sar sbb cld pop xlat xchg jmp sub sub mov pop lods push out js xchg cmp adc leave out pushf mov jo repnz jl call fcomi lret add js imul fwait mov pop clc rcrb cs orl lock push inc pop xchg int shrl rcrb mov cli mov mov push cmp gs xorl sbb fyl2xp1 add pop into rolb inc in ret jmp and ljmp stc fs test adc das or cmp addb fnstcw add aad lcall js jp jg pop dec xchg sub push pop cmp add lcall dec dec jg xor psadbw les or inc pusha xor mov jns out inc cltd pop lret mov imul inc cli sahf mov and es lock push jmp rcrl (bad) lock mov js (bad) les inc xor cmp je scas (bad) and jp rclb aas addr16 and inc push xchg cmp jp repz jle ret hlt (bad) insl jg mov (bad) scas fsubrl test pop loope int jecxz xchg (bad) roll js (bad) ds outsb pop dec dec mov mov nop fild cwtl pmullw std cmc sbb xchg scas adc xchg xchg push xor shlb fwait sub pop push (bad) adc divb enter and fldt outsb jbe cld popf jmp push out xor xchg mov into cs aas fisttp (bad) enter jecxz adc inc cwtl sbb out and pop jecxz lea inc push mov je cmp xor (bad) bound jp pop jmp fwait in add mov mov std mov popa in cld popl aam dec and into jl jl (bad) iret jo mov mov jb lods dec push cli mov fnop scas or mov inc fadds roll sbb mov jmp inc popf aam int3 dec loop pop ss xor xchg imul out cmpsl mov pop (bad) mov int3 test inc popf or or adc mov and fdivrs xchg add sub ja hlt jecxz ja dec ret gs scas cmp sub movsl rolb (bad) mov lock fild int3 sbb xlat add jl pop dec xchg cs shrb dec dec add mov rcrb je push sti push bound arpl cmp push ficoml jno cmc xchg mov bound movsb (bad) mov sub sbb add mov cltd jb aam stos (bad) stos call arpl xor lods xor subb in mov add or js pop ror stos incb (bad) xor and jo mov pop push fidivr fist jmp xchg mov push int sub mov xor cld sub pop lods repz (bad) mulb mov ret xchg orl into add mov or cmp and mov rcrb sub mov jmp lahf or or icebp xorl cwtl sysenter ret insb jae jle and mov rcrb adc or addr16 das inc sbb dec adc popa loop bound lret sti push mov ljmp jp mov dec (bad) xor iret insb test add jnp in ret push xor mov shll ret cmp dec sub push add jecxz insl inc lods mov pop jae sbbl mov aas out mov push in add (bad) icebp test rolb lahf xor cltd and sub f2xm1 int3 push mov lock cwtl dec int3 sbb lret jp clc jl lods (bad) mov dec jno data16 mov sub bound mov xchg mov push lret pop out sbb pop movsl inc rolb loopne enter pop or cmp xor and fxch jg jecxz stos in mov push shr sti ror sar jnp sarb mov push dec sbb icebp add (bad) aaa fbld add xor test enter mov lret fnstcw dec enter mov jl bound jnp pop rclb push aam cs sbb aaa mov mov jmp je (bad) mov pop push push les inc inc add je jns xlat and dec jmp cwtl or div int or cmpsb cmpsb xchg movsb xchg xchg pop lea pop fiaddl cli inc cld enter sahf sub int3 fldenv aaa push mov out pop int3 push mov scas mov sbb call aaa out or sahf js xor push add das cs mov stos push inc das mov data16 push decl mov xchg cmpsb call lock ss dec cld sub xor jle and mov mov dec xor and scas sti (bad) pop pop cmp mov inc dec cwtl fs xor sbb push xchg dec adcl xchg fisubl enter sti js sbb jne xlat dec call push stos cwtl jecxz ljmp test scas bound lods aaa cmp rcll aam push icebp ret mov inc lods test inc adc fidivl pusha adc jae xorl and sub pop sarb arpl inc and roll mov out cli mov push pop dec xor loope rcrl xchg iret (bad) sub movsl cmpl mov mov std mov mov addr16 mov push fistl fistpll stc xlat insl je (bad) jae lock in xor repnz mov cmc rcll enter fisubr gs push push add sbb das inc mov ret ljmp push cmp les push push mov mov inc test rcrb sbb mov frstor (bad) sti and jl,pt mov mov lea andl sub pop ds jmp (bad) call jmp pop lret and inc jmp add cwtl aaa pop inc out cmc push clc sbb or imul bound or xor adc enter sbb loop sbb sti xor shl clc mov adc mov ficoml in hlt dec dec fdivr xor pop xchg rcl stos aaa dec js subl mull mov pop pop addr16 cmp add mov lret movsb cmpsl inc mov outsl ss xor dec ret adc jg (bad) icebp addr16 frstor cli inc xchg mov adcl imul (bad) xchg push jge cmp and and lods inc mov or cld stos in or fild push popa mov or inc nop xchg cld pusha (bad) in mov in dec sub dec inc cmp insl dec push push and mov mov fldt push or (bad) cltd pop push loop add in dec movsb adc push cmp imul and stc aad ret fwait pop movsb mov stc dec pop dec (bad) ljmp sub sub add aam inc pop or daa orl std adc test or scas das fdivs sbb leave and cs lret mov pop lds les jo roll stos inc test cmpsl sbb fwait push emms scas xor (bad) mov je adc and cmpsl stc fldt cmp bound scas ljmp insb jne mov jp rcll shl stos dec sbb nop adc inc sarl inc push aam inc mov mov lea push mov stos sahf (bad) daa jns mov fstl xchg (bad) call pop and xor lock mov mov xchg cmp jo loopne bound jecxz mov xor lea dec ja fdiv push and sbb hlt or mov repz mov jl out adc pop (bad) pop xchg lds outsl or mov rorb (bad) pop sbb pop xor and jl inc adc push and sbbl pusha in imul mov jne push lea mov xor std sbb sub adc inc mov xlat (bad) bound shlb scas adc lcall inc jo,pn sarb stc dec aaa or cli out adc dec (bad) cmp and imull sub push call jns mov arpl rorl cs mov push pop jo cld dec or (bad) aaa mulb flds popa test dec in pop lods fisub sub mov pusha adc sub dec mov xchg push aaa xor js ds or aaa in inc insb or cmp pop (bad) cmp xor cmp aaa jns fistpll bound xor push sbb cmpsb mov xchg add outsb xor jbe (bad) fadds roll push push mov and stc adc cmp fistpl add out sub cli cmp mov sbbl lcall dec dec add inc sbb pop or enter adc mov into inc lods lds inc pop lret push out push xchg aam int3 clc out jl pushf fisttp popa cmpb rcr mov out roll daa sub xor push push jno mov sbb ret dec mov mov scas dec sbb je lock jne push es out out aam dec sbb in js push pop rclb mov test arpl inc adc jnp mov sbbl mov xor mov repz xor pusha cwtl fwait leave mov rcl mov xchg outsb ljmp inc int3 jns hlt sub rdtsc and jns cmpsb shrb dec shrb (bad) sbb mov (bad) (bad) mov mov insb mov das xor or pop sbb je mov pop fsubr push pop cvttps2pi lock (bad) std pop insb and cli loopne pop fwait fs loop in push sbb sbb loopne dec cld push lods mov dec loopne cmp call addr16 lods lret jp or pop (bad) out xchg adc repz fldt mov gs in movsl mov xor push push or mov sbb pop pop dec imul mov jl jecxz stos pop xlat les lret pop in sub pop mov xor mov xchg outsb int sbb add dec and rclb rorb add aam icebp inc or xchg xor cmp jae and inc and ret mov pop bound stos push inc jns notl pop sbbb dec push adc sti mov out loop outsb enter int add cmpsb lds xchg movsl pushf dec in nop add pushf mov sub mov ficom cmp arpl jp insb dec push out jge ret mov jge and nop call jns out in mov cmp test movsl and or and xor ja,pn outsb enter and cltd jecxz shlb push sbb ficom mov or pop jo,pt xchg or dec (bad) es xor and sbb outsl sbb push mov insl je nop adc dec clc sbbb cmp or cmp inc int3 sub pusha icebp mov dec insl cli push repnz cmpsb adc dec or loopne xchg or push xchg xchg es sbb shlb sti push adc repz mov cmp xlat inc les push mov divb sbb adc pop stos popa jmp adc ja sbb xor fisubr cmp fwait es sub out lock scas cld nop es cmpsl jae pop xorb xchg fwait call outsl and loope fwait js jge stc in dec mov out movsl test dec push pushf clc sti xorb cmp xchg ljmp (bad) xor stos jne inc sbb ret sbb push cmp pop jbe mov movsb lcall arpl dec pop mov sbb (bad) out jecxz addr16 dec sub data16 mov jns push mov test sti sahf mov scas pop inc mov aaa cmp push mov or jb (bad) cmp enter scas adc mov test (bad) mov popf jno mov push roll or jnp adc push mov push or dec faddl cmp pushf push popa or inc or mov mov je (bad) scas jl adcb mov in inc adc adc adc clc jns in aam test loopne xchg mov jg in dec add xor mov cltd out stc hlt test inc dec xchg dec cwtl xchg and loop ss enter pop add sahf push aas js push sbb (bad) loopne adcl out ljmp adc pushf add in push xor icebp cmpsl pushf gs mov repnz pop or mov nopl sub add cmc aam push (bad) es int3 pop adc mov add int fmuls xchg push add cmp lea mov mov mov push mov in adc push stos pusha cltd fisub mov mov pop cmp xlat lods into cmpsb aad sub push mov outsl test ja aas dec push push lds ret jbe inc ficom mov mov and sbb cwtl es mov cmp sbbl jecxz lods aaa insb xor sbb xchg xchg dec push adc int cmc mov sub xchg cmpsl lcall lods imul fsubrs pop pop mov (bad) outsl js movsb mov jle sub sbb std arpl test repnz xchg imul lcall adc shrb xchg rclb push or cwtl fsubrs inc jecxz and sub in dec in in push cmp jle mov or xorb push icebp push lahf test cli jae loopne cmpsb (bad) loopne sub cmpsb and leave nop add es dec mov fcmovnb or xor pop dec movsl sti std sbb pop test stc mov mov mov add inc shlb sub mov mov sbb push xchg test gs js,pt inc inc ret scas aad add negl popa stc or mov (bad) mov stc call bound insb add ds std into cmp pushf push xchg xor and adc nop cld jle (bad) cmp or dec fcoml das cmp and add lret mov dec imul push popa pop sub jge pushf xchg lret xchg scas cmp lods pop js xchg sbb xchg dec inc popa mov mov lahf pop outsl lock mov call fdiv push push jb ja xor (bad) pop ljmp ret ds add xchg (bad) mov pop and sbb movsl pusha xor mov loop pop fwait popf clc rorb scas push sub push je repz test add movsb sbb mov fstpl adc fcompl cmc popa inc outsb jle dec andb xchg xor pop lods je jge xchg icebp enter or cmpsl out cwtl movsl loop cltd lods addb scas push les outsl faddl jo xor pop inc mov (bad) push cld aam bound inc outsl (bad) (bad) loopne mov popf add xor inc mov push out inc inc sbb or fcmovnb js jnp pop sbb add fistp ret arpl cmp (bad) push xchg (bad) mov (bad) xchg outsl je imul inc std xlat dec enter mov divl xchg mov push in xor push movsb pop jp pop mov clc movsl sbb leave adc pop orl divb cmp (bad) xor and xor outsl insb mov cltd dec (bad) int iret imul into cmp inc jge pop push jmp int3 sti aad mov fisubrl pmaddwd xchg loopne push adc inc xor lods jne and test xor (bad) aad in pop mov inc imull pop jl (bad) jno inc dec mov xchg mov pop les ss sbb inc fldt sbb jo idiv stos push jp xlat leave (bad) lock addr16 aad pop jno popa fwait add xor push into or das aam xor adc sub lock pop js movsl xchg sub xor add add push push out sub dec clc mov ds mov push cmp add xchg out sub pushf testl out into cltd pusha sbb push cmc popl jbe aad mov lods add xor add dec scas push stos mov add cmp fnstcw insb out push xor fldt cmp mov adc cltd mov add mov cld mov movsl test or int out mov or shrl xor mov outsb cli mov dec mov add and adc sub dec dec mov pop into ja mov cmp jle adc xor mov add loop imul icebp out daa xchg or xchg push repz jo jmp push sbb add dec xchg sbb dec mov es fistpl fs add ret movsb stc mov dec mov stos mov in mov loope push aad in xchg es inc out lods cmp mov jae push negb and dec pop jecxz fbld cli in iret push clc into dec sub fs pop or add test mov xchg jbe push and fdivs daa jbe mov ror popa jns repz stc test (bad) std ds movb enter clc push xchg dec inc jle (bad) out xor loope ja rcr xchg gs xor sub aad sahf jp push dec pop ret (bad) shlb (bad) cmpsl xchg add inc gs push loopne mov fidivrl xchg jbe adc mov push out aas inc pushf xchg cmc into jl fdivr or and adc or dec movsb stos adc adc cmp or jns popf dec pop lret insl sub test loopne inc addr16 stc leave adc and cs dec outsl cmp frstor pusha sub push outsl dec push mov lcall jmp inc or sub sub push jmp xor dec pop js mov pop mov mov mov mov fistpll sti cmp jb (bad) mov cmc test js inc pop fnstenv adc pop scas outsb gs jo pop or and (bad) jb scas mov movnti pop add jp in enter push nop outsb inc shr mov rcl fistl jg pushf popa cwtl sub loope rol xchg (bad) (bad) push cwtl and loop movsl imull ret outsl outsl jecxz pop out sbb jge xchg xchg call shlb mov or pop pop pop mov or sbb (bad) sbb ficom lahf imul and mov lret call (bad) icebp xchg cli dec push pop scas iret stos std test and pushf xchg pop pop sbb adc dec fnstsw data16 jb out out out pushf dec fistp jno imull jle mov inc mov inc insb inc arpl adc mov jge sti fisttpl inc lcall test mov rorl sar pop inc rcrb movsl cmpsb nop and outsl dec xchg jbe inc repnz add xor mov stos (bad) and mov xchg jbe out or push fidiv mov inc loope cmc fidiv jo fwait aad js (bad) in or mov dec test sbb sub cmpsl xor inc fisttp loope adc or jnp (bad) (bad) push sti jo loopne sub aas fwait pop inc aad sahf or lret (bad) xchg scas or ss jle fldl adc mov test icebp (bad) loope (bad) jecxz repz adc mov fdivrs adc jle jp sarb jb or or scas cmp jge fistpll pop bound or into pop scas cwtl add bound in mov add mov mov insb add es fwait xchg fcmovbe inc sub and jbe sbb sbb sbbl sub push push push push movsl je xor leave enter (bad) cld xor jns mov cmpsb xchg xchg in fwait dec sub jo movsb mov inc mov or inc jl jbe shlb rcll loop sbb insl nop les rcr push xchg outsl adc (bad) lds jecxz pop jle icebp and fwait (bad) icebp xor aaa fs pop cwtl cwtl sub add test lds push sbb int3 into sahf pop jb dec (bad) cmp xor shlb ret cmp mov ret inc xchg jbe mov add stos fs stos nop and js xorl mov fnstenv mov xchg lock sahf push js inc js (bad) aad in or sarb cmpsl movsl dec into test jecxz ss or jb push frstor mov xchg and pop int inc xchg mov and adc mov mov (bad) mov fistpl pop mov dec adcl mov daa int mov push decl adc pop xchg or (bad) mov jae das loopne push pop mov add (bad) imulb leave mov push dec xchg sbb stc mov mov xor mov cmp dec pop bnd aas cmp jb icebp cld imul ljmp inc mov or push xlat nop lea or add xor fistpll ret push rol dec movsl mov inc xchg and lcall (bad) pop xor stc ss dec add decb jg dec mov and mov jae or dec aaa ret sub xchg cmc mov test sub mov (bad) hlt push lcall shr repnz push mov pushf (bad) mov pop rcr xchg hlt xchg mov cmp push xorb es in mov add cltd rol jmp mov jo daa lock popf jg xchg sarl mov outsl jg sub mov mov pop cmp sarl outsl popa (bad) mov mov in popa sub mov add pop add icebp add sub mov daa rol cmpsb adc outsl addr16 into in mov or inc roll and insb push jo xchg call or (bad) push test sbb jnp dec lret (bad) test pushf ljmp or mov icebp imul and xor xchg push fdecstp arpl jecxz or dec int adc push mov sub inc mov add test jg cmp adc loopne ljmp dec in in add jg cmpsl sbb sbb jmp and (bad) ljmp es arpl out push cmp movb lret repnz or dec popa fbld fnstsw rol mov pop test inc inc cmp sub sub inc ficomp popa loope,pn add push mov mov mov mov into sub fcmovnu in xchg jbe mov mov iret jnp or es mov sti popa inc push mov and mov jle pop sbb aam and hlt pop and lahf jns aad or cmp in inc lods sbb pop or enter rorl xor test data16 jp dec fsts loopne pop jge pop mov mov (bad) and push mov add js (bad) adc andl sub or ret sahf insl add sbbb das mov mov dec imul xchg inc ss scas aas adcb xor loopne dec (bad) rcl xor js rcl test mov xchg push cld and xor stc clc incl adc push jg lods cmpsl bound btr notb xchg jle pop mov sbb mov add inc pop mov mov push pushf adc out pop cmp imul jbe mov dec xor jecxz sahf push rcrb pop movsl jmp aad mov pop (bad) jg cmp or inc push pop sub fdivrp lret push fcompl push xchg lea enter cmpsl push lret dec (bad) test add mov cmpb cmp pushf les cwtl cmp jmp xchg sub add sti adc into mov movsl xor lock mov push push adc leave movsb and jmp push push fmuls popa mov jg int outsb sahf lret pushf mov mov add pop lods sti sbb and in mov in mov xchg icebp mov push out shll out aad outsl dec shlb fadds adc imulb jecxz repz add ret xor add aaa or ficomp sub pusha clc mov xchg add lahf mov ret adc imul xchg jp dec hlt mov add xchg dec pop jb popf icebp xor fnstcw mov push (bad) push sbb das test push sub inc push mov aad sub inc xor push popf int jmp out subl cmp imul pop out in dec sub mov pop je xchg sbbl test pop ja (bad) mov cmp hlt nop xor dec sbb lock in loop xchg fcompl xchg dec xchg clc (bad) out ja push sbb inc (bad) jmp add daa stos mov adc dec mov lock ljmp pop arpl hlt in scas lods shr cltd push sub jg jg dec (bad) mov jmp pop bound sbb xchg or push pop jns or lock data16 jnp sbb lea and clc (bad) jle gs lcall mov arpl lcall push pop mov pop mov mov pop ret shrl cld rcrl movsb bswap loop mov mov jmp aaa mov lcall fimul aad sbb cmp loope xchg or mov movsl fildll in mov cmpsl mov std pop flds ret and inc movsb cmpxchg xor pusha pushf sub push (bad) mov cmp test dec cli jg cmp mov adc adc adc test jae dec test lret lret fistpl jns ffreep xor sub xchg add mov test movsl outsl out (bad) clc push xor lods pop nop cmp stc push jecxz sub daa push push out rcr divb in cmp sbb cltd pop movsb or (bad) sub inc jns or cmpsl and mov aam jecxz pop xchg xor cmp les outsl outsl ja cmc js loop push add inc push ds test sahf pop dec adc (bad) lods ss cmp sub test inc jmp push jle adc mov mov xor psllq and (bad) popf test push add add (bad) dec iret xchg inc lea clc data16 popa jbe test push fidiv xchg push sti cwtl ret cli jge cli mov sti pop jp mov inc repnz insl mov out in cmp add movsl popa push cmp call sub mov or push sarl inc mov fcoml iret rcll cmpsl adc jp adc iret ret xchg sub lock int3 sub dec fsubrp les add jge aas dec and and inc ret jne popf push (bad) jbe fidivrl or adc sub in push push lcall fmulp mov aas leave test std ja fdivs lret xor push or and icebp loop enter loopne jmp adc inc and lock enter stos in and sbb lock (bad) cli mov jno int3 fistpl fsubl repnz rcr orb mov arpl loop push xor jnp jecxz cmp xor adc ljmp push mov (bad) movsb pop xor sbb and mov aas daa and add add fwait sub push jecxz push sub cmp loope in xor lods leave test pop cmp mov dec sub mov out or out adc xchg int3 sarl sbb std in test test lds pushf test cmp nop lret mov xlat into mov xor cmpsb push inc pop les mov push std outsl test push pop add sub imul add push adc les sbb push lahf push sub push cmp fs sbb pop out dec test mov repnz pop or mov xor mov push jb stos daa aam pusha shrb xor aam mov outsb push and adc sub lea neg lcall dec jmp inc push sub jmp add and jg fs mov mov mov inc fwait jae and mov inc notb jbe sti (bad) je movsb mov hlt dec dec (bad) adc push mov lret xor add loop addr16 rcrl repnz ds out das mov std outsl or pop xchg in sbb mov in (bad) xorl out mov movsl inc push mov pusha xchg push or pop push ret jp imul aam ja mov push jb jmp mov jmp subl aas jo pop sub mov sub movsl fadds or fwait mov xchg (bad) stc mov cld and sbb imul pop sub daa out sbb mov fdivp and mov xlat jnp cmp icebp mov fwait jno out sub fwait xchg std mov dec mov jno mov sub or iret mov cli aaa (bad) adc clc ja ja aaa pop ss cmp insb xchg aas dec and xor or ss scas jno mov popl ljmp inc and insl (bad) mov jle fsubrp pushf stc sub cmpsb insl lret xchg stos enter inc imul push sbb dec dec in test pop dec into cmp (bad) lret xor cmpsb inc ret cmp (bad) mov loope call test mov dec push mov sahf scas and nop xor and add jno adc add ss adc mov sub and lahf jne and and xor cmpsb sub dec sub out int mov adcb pop lahf sub add fdivrl je pop movsb mov jmp imull int xchg cmp pop dec cmpsb xor adc jno cmpsb push cmp dec mov dec sbb cmp bound in cwtl negl test jns jae mov imul dec xor insb mov push movsb jne lock cld sti dec mov push inc adc int3 push sub mov mov imul add (bad) loop js daa mov and pop lds out pop (bad) sbb adcl jbe pop ljmp std jmp or pushf out or dec (bad) jno iret jae lea (bad) fnstsw sbb clc inc sub loope ret (bad) das adc jns aas fs pop pop xor mov (bad) seta sub mov pushf daa stos leave lods pop xchg xchg jnp neg dec xchg jns imul adc push test (bad) stos lods jnp cmp mov jns push mov jno out sub mov inc cmp dec addr16 ficompl add jns inc leave lret out jg js adc push xchg mov cltd adc in out jecxz or lea cs xchg dec or in mov jnp push lcall add or imul lcall ficoml mov dec (bad) (bad) or hlt inc jno enter in sahf iret jb inc rcrb adc xor aad mov jmp cmpsl mov je pop cmc xchg xor icebp jg pop inc push nop mov xor data16 push dec movsb repnz jb lret aaa mov push xchg xchg imul (bad) xor dec add sbb xlat adc cltd inc mov fcompl aad out fmull imul push aam cmpsb adc jo popf dec arpl mov or inc repnz loop inc sbb outsb scas push (bad) divl imul clc iret jecxz xchg dec in adc nop stos push sub insb mov jno cltd loope add dec cli push sbb xor pop out or mov lods lahf jmp std push mov into loopne push xchg insb xor shrl daa xor adc push inc outsl adc mov outsl cmova jno mov (bad) ds cmp aas scas (bad) neg add ret pop lods cli and pop push fs xor sbb js imul repz paddusb jno idiv and idivl cld and cmp mov xor adc xchg mov jno popf mov mov icebp rcl addr16 in jge mov insl test scas frstor xchg or or sbb hlt adc mov fldl outsl outsb out (bad) std inc fsts (bad) dec xchg lods out das or jb xchg xchg cmp cmpsb stos arpl mov bound mov test int3 fs pop add add orl out and call cmp sbb dec shrl sti mov push xchg cli jge mov sub pop sub dec lahf push xor sub sahf push icebp test jl cld xchg jmp and (bad) cmp (bad) in std incl mov inc push sub mov out sub ds bound out (bad) fldcw dec mov mov test das test xor push lret and iret jns rorl rcll lret sbb (bad) js fmuls cmp push mov (bad) mov cs push adc outsw nop push mov cli and movsl dec and jo sbb and loope jmp cld in subl push out fwait pushw rol cmovo pop (bad) mov aas jns dec add or (bad) sub xchg mov inc loope fs nop mov inc aas push popa (bad) test xchg nop mov jle nop pop xor pushf into testl cmpsl pop ficomp cmp adc in movsl stos cmp loopne add push movsl inc add sbb cmp dec xor pop addr16 dec rcll cmp dec jge xchg fwait call iret mov or inc std iret xorl mov (bad) mov clc enter insl icebp pop stc mov fnop inc es pusha push mov xlat cmc cwtl jne lahf xchg gs jae nop rol in add in aaa (bad) outsl (bad) mov or idivb push (bad) jb mov jbe bound iret stos cmp pop adc orl insb add mov popa pop pop jge lret xor movsl repz movb pop (bad) mov inc jnp xchg mov xor imull std fsts or popf inc lret push mov mov inc ror fstl icebp aas cmp or popa mov fldt xchg sbb xor shlb adc loopne adc add lret add xchg in or (bad) jg and and inc sub ljmp pop push cld cmp adc sarl arpl js mov and and xor hlt mov addr16 mov sub lret loope (bad) or lock ljmp aam bound fdivrs (bad) pop test xchg pusha ficompl pop add lods jno clc pop mov push jne mov shll int3 dec pop sbb shlb repnz and inc sbb imul sbb arpl lds mov inc push rcl imul nop test xorl push insl insl int mov jae sbb mov fldenv stos loope sahf sbb bnd (bad) and cwtl inc daa fbld inc cli sub arpl jno dec call ds pop mov or jle dec cmpsl loopne gs jge push dec js mov pop movsl or shrb mov out lret add lret test adc jnp popf jb inc lcall sub shrl push dec mov stos mov pop lds or in inc and aaa push (bad) dec nop push dec sub sub js rcrl pop xor les stos lock fldl mov mov repz ds lods add xchg cmp adc sbb push imul pop dec adc mov xchg push mov dec lret sbb icebp nop or adc std lcall ss adc mov push mov outsl stos fiadd hlt orb aaa stos data16 stos mov or mov adc cmpsl mov sbb sbb ror push dec push mov jg mov push xor scas lock mov loop fcompl out mov dec xchg push add imul xlat and cmp xchg ja das ffreep (bad) sbb sbb sti (bad) sub push sub xchg (bad) outsl push rcr xor insl lcall push xchg cmp and (bad) xchg mov sbb add test inc jecxz ja mov mov adc stos test inc (bad) pop mov mov out or push cld sbb add adc stos out or std enter jge ficomp xor lret out xchg jb xchg lret xchg loopew pop add mov and clc inc and or mov dec int and arpl dec daa inc pop push inc add sbb cwtl pop xlat subl push xchg dec pusha aas test insb jb inc mov fistpll mov fs ret xor pop pop das fildl xchg fimull fisttpll mov mov loop mov insb stos add mov fcmovb ret (bad) and dec push mov shl sbbl sahf test cmc bound les mov test (bad) in push xchg sbb push (bad) ss sbb add jb inc cmp sub jl mov mov sub movsl mov cmp push adc mov sahf dec sti movups add adc xor push (bad) test pop push sbb mov adc sbb xchg cmp (bad) jno das jnp push jne bound sub daa cmpsl jge imul rcrl and sti (bad) je pusha mov mov into call jo xchg enter add or xor sbb dec cmp mov adc dec pop fistp inc aad ja in test push xchg (bad) mov fsubrl inc sahf imul cli jecxz ficoml dec jp xchg dec inc mov in stos push xchg aam pop fidivl inc dec jg pop mov jo mov cmpsb dec pop inc (bad) or jmp sbb outsl xchg popa push lock xchg fldcw into jb fcmovnb sbb inc add and jne push aad stos ds xchg mov or push shrb adc sub push outsb mov adc dec jo lahf or in or jmp rol inc rcrl nop imul mov into lcall insl xor adc xchg and data16 xor subl jg pop cmpb insb mov add dec fsubrs insb popa lods scas pop jp sbb int3 pop outsl inc adc (bad) jl inc sahf and arpl push aas push xchg adc outsl push and ficompl (bad) mov sub shrb sbb sub xor xor dec leave in ret fwait dec jae sti outsl push xor pop repz sbb aam mov adc mov stc stc mov cli iret and roll aaa test mov test fist pop xlat push sbb ret insl jmp fsub add cmp mov xor mov (bad) sbb test dec xor movsb popf and test push ret lahf adc cmpl push jp lods push add sbb sub mov sbb clc clc mov stos sbb mov cmp adc stc add ret lcall mov loope repnz ds cmp imul loopne mov pop pop push add (bad) pop test mov sub inc mov push fsub cmp addr16 push (bad) jo and sar pop je or or (bad) popl sub sub adc cmp aam inc sbb dec stos sub mov int3 call push pushf out out stos sub or ss cmc iret push psrlw rclb xorl mov das aas dec fisttpll sub into pop pop xchg xor jb lds and jbe xchg mov mov push int3 gs mov dec frstor lock int3 popf sbb jo (bad) ljmp mov std cmpsl pop sti daa enter pop inc jo gs adc (bad) scas repnz pop loopne int loopne enter pop cmc fldcw stos xor dec std clc mov fdivs mov jge jp add inc movsb push jae jecxz dec cmpsb lea sahf cmc lret notb lret pop repnz lds and cltd mov jb cmpsb notb jecxz mov hlt mov je in xlat bound mov (bad) pop mov iret xchg icebp inc andb pop out mov mov sub mov cmp dec jnp mov inc mov dec mov mov mov aad mov push mov idivb hlt and xchg and cmp push and pop adc lcall sub into pusha push outsb xor nop testl jno popf push add insl in jle cltd or mov scas sub lock xchg push pop fstps lods cmp pop jbe mov scas daa inc cmpsl repnz pop aaa es imul cmp xor pop data16 and adc loope push or mov addr16 stc lahf mov push cmp fdiv inc call lcall push pop movsb sub in int3 hlt rorb imul xor clc adc xchg fldenv (bad) lret pop in push cmp jge xchg mov cmp push and pop fcmovu insb add repz icebp jle mov test dec loop lea pop sbb pop out adc cmp hlt mov push or insl and shll jb je jbe mov adc loope,pn add pop shrl int3 dec popa into in mov and xchg adc push insl lds pop idivb movsb or xchg leave xor js push jecxz popf notb lea inc orb cmp in outsl jae pop adc incb push enter jo (bad) ljmp xor mov (bad) xor inc ss out ss jg test fwait in decl mov loop lret insl dec (bad) test daa out nop sbb stos add add stos push jle pop imul sbb test pushf mov xor sbb dec cwtl insb mov out stc sub xchg mov xchg pop push fisttpl dec inc xchg mov dec (bad) cld sub test push out inc adc movsb (bad) mov sbb cld lods mov fdivr mov sahf repz dec jno inc adc cmp rcrl cmc lods and adc pop and adcl dec popa fstps sub jae (bad) rol repnz sub repz lret int3 dec cmc add fcom in (bad) (bad) push mov ret xor adc jo stos (bad) pop jo jns or sbb pop xchg xor das adcl in cmp mov sub add movsb stos ret mov jmp pop jbe fiaddl mov xor adc jl jno loope sbb dec sub jbe xor sarb icebp lcall push jge sbb loopne mov cmp or jle dec hlt in adc mov dec or fidiv xor pop les sti dec (bad) cld hlt lcall push in fldcw cld jns cli icebp cmp (bad) and jno cld sub sbb dec mov sarl inc sub aaa rorl push ret mov aas scas addb lock out xor xor gs fwait jae movsl pusha out pop (bad) ja test aas fsts adc pop cmp lret mov push rclb inc inc sbb add ds arpl xchg mov jnp dec ror fwait push mov mov cmp mov daa fwait clc mov scas mov jmp rcr xor lahf dec (bad) and test imul lods xor pusha cs pop and mov jne aad xlat imulb push jp aaa mov fs orl jb add insb out lret cltd cltd pop sbb (bad) scas push mov xchg idivl jecxz add in push or jb jae fwait subb jg lcall mov mov and mov rcrb cltd or xchg inc ljmp jge out xchg xchg inc int3 (bad) lock test push jecxz sub test lds xchg popf stc aaa adc lock inc pusha clc pmullw adc sbb outsl call or xor or iret pop loopne out inc out stos lea test xchg push mov adc cli sbb push aas out mov cmp or inc jmp sbb pop mov inc jbe je cld loope and mov xor stos movsl ret loopne inc dec pusha or cmp push jbe adc popa jecxz push jb inc adc fucomi xchg stos nop adcb les fs sub in pop adc jle inc cmp (bad) call hlt adcb jp jmp push pop cltd test stos push add mov fisttp mov add inc push sub xchg mov inc mov (bad) dec out out jo and testl lods sub push jne icebp xchg push xchg (bad) cld jp jle mov mov mov fnstenv stos jns add add test in mov jge out insb pop jge pusha in pop ds bound cmc ds mov sub addr16 jnp add cwtl dec imul call int cmp arpl out lea xchg push mov add fsts sbb push adc xchg and sti popl call addr16 neg push fild hlt (bad) rolb lods mov clc les int3 jp xchg fcmovb icebp shrl test mov out daa (bad) into std lock mov (bad) xor pop sub mov dec fistpl test popf int cmp je mov pop sbb sub fisttpll mov inc in rolb cli lock movsl mov arpl jl mov scas jp dec cmpsb frstor sub add cmp mov adc add cld or leave pop xchg fcmovu roll cmp sti jmp cmp sub sub mov xchg jne push nop mov pushf (bad) stos and int3 adc push push movsl popf sub test mov aam repnz call inc sbbl and adc add (bad) lods (bad) imul jno pop nop flds or daa pop jecxz pop xchg in adc (bad) pop mov pop pusha add (bad) or or mov mov pop add ss sub jg popa icebp mov popa fidivr imul adc imul lods mov inc dec int3 add es mov lret sbb sbb (bad) xor loop aaa add sub push mov jg inc dec mov mov icebp cmc imul (bad) fsubrl and sbb xchg subl jp mov cmpsb dec pop cltd stos arpl (bad) xchg push mov stos cmp fldenv ret dec ficom mov pop jnp push fnstcw test (bad) xchg ja pop (bad) cmp jge add jecxz mov imul push mov or ja xchg mov (bad) mov mov in jo sub inc fmuls sub dec test lds repnz iret out jl add or cli pop rcr clc mov pop ss mov push push and addr16 rorb rolb fisub loop dec jnp adc arpl xchg jb push cmpsl jp sub push pop notl adc add aas inc pop lods mov pop call ja popa cs mov dec push fs push leave mov push sbb fistp fdivrl mov fisubr loope in lcall add jecxz outsl pop icebp lods std jbe test lods pop xchg push xchg jp or out aam jle cld dec mov pop mov jmp jns dec adc mov mov push stc lret leave xchg movsb lods push mov loope test fisttpll xorb inc mov pop mov aam sub pop mov push cmp (bad) xor imul test sub out sbb mov push (bad) jecxz add cltd push sbb mov mov pop lds pop addr16 lahf mov mov pop packssdw out (bad) fildll or or aam add mov xchg mov (bad) jno mov je add in and sbb iret aas cmpsb and dec mov movhps insl enter mov sbbl cld cmpsl es xchg sbb mov pop lret mov inc mov outsl mov ja and or or sub and bound leave xchg dec mov stos dec lock das in add fwait jbe pop push adc imul add (bad) scas fdivrl dec aas or xchg daa aad lcall xchg iret sbb jne and (bad) mov sbb jecxz imul ja addr16 in mov ja or add and lods pop cmp mov jp or sbb andl push imul xor lret mov push inc stos ljmp jne inc adc or add inc or pusha add mov sbb mov jno cmpsl out outsl push and cmp and and inc xor iret hlt inc inc in mov loope mov adc or pushf jl inc ljmp test push scas hlt push sti push es xor add fs inc popa xchg xor jns pop push jp push cwtl sarb pushf pop (bad) into mov sbb cmp pop out sbb xorl mov hlt pop jp jae mov sbb add rcrl inc ja jle sti inc xor (bad) in loope clc xchg or pop jo add int3 stc imul or jle xchg cs loopne popa pop add imul sub into cmp out icebp mov xor lret aam data16 lods les stos cmp and and rcr mov sub jno mov repnz cmpsb pusha imul xor push and (bad) out pop cmp stos lds inc das or fldl cli dec fsubr sub pop mov or push xchg jg repnz outsl cli push cmpsb outsl sub dec dec sub bound mov xchg pop mov xor scas or jb insb pop or cmp fadds xchg sub enter fnstsw sbb inc out push stos mov inc test repnz jl sub jbe pop pusha xlat sbb out sub pop inc mov xchg cmp xchg lods popf adc orl jo pop xchg sarl jl cld in pusha addl pop jns adc and mov pop dec push loope psrad leave (bad) test jns fsubs jae xorl movsl cmp xor fwait xchg mov idivb adc std lock cmpsb jl in stos mov (bad) cli (bad) in in pop xor adc fdivrl lea into in adc (bad) inc jne insl test push or in xor push sub pop loope and mov dec or xor jb fdivrs jg in gs bound add dec adc sbb daa and (bad) (bad) add popl pop and shl (bad) lcall jns bound push pop btrl (bad) cmc out inc sub pop (bad) bound mov jnp (bad) movsb in mov mov (bad) stc dec adc lret adc sbb or xor fabs mov push jl push mov fcomi mov int3 mov es jns mov push mov xor sahf or (bad) fcmovb fstpl push mov verw insl mov stos test jl les mov cmp loope sub (bad) jne cmp int rclb or push mov rcr jle fnsave fcoml and into mov test dec sbb out arpl scas inc sbb jp dec inc stc movsb xor dec sbb sub sub jne cwtl xor gs mov xchg adc bound popf outsl push xchg sub jns insl in jnp mov xchg test or push cmpsl out out push xchg hlt xchg or das or fldenv pop mov cmpsl push inc jg push jp (bad) jmp ss pop (bad) jo rorl dec cltd xor loope lret sub add cli mov lea xor jne pop push push add inc adc xor out lret js jmp stc (bad) jbe push rorl loope mov rcll xchg jg imul je xor adc cmpsb mov hlt cs fucom mov push inc aaa mov ret or pop je hlt ficom in inc movsb (bad) lcall pop stos fwait aaa dec insl sub clc jne inc (bad) mov test dec adc in push pusha (bad) arpl mov enter jmp popa cs bound cmc adc dec xchg nop cmp sarl out push sub pop jmp je (bad) fadds ret jmp sub push aam xor adc sub pop lea jl cmpsl xchg dec push sbb mov xor imul sbb inc jne sub cmc push inc cmp add sti dec cld pop iret int ret sub sub pop sub xchg inc imul (bad) es inc sub lret lret das sbb xchg mov lea rcrl popa pusha sbbl aam out movsb mov mov mov inc repnz rcr xchg cmp movsl cld adc sbb inc mov or pop fwait xor cwtl inc ret add outsb in loop adcl or mov lcall sbb xor es xchg repz xchg cltd repz mov add push cltd jb in lret in xchg xor and test sub (bad) sub sarb dec clc into cmp mov sti pop andb insb imul mov xchg cmpsb (bad) scas sub dec or or pop sahf cs mov repz mov fs pop (bad) cmp mov mov icebp mov jne or std shrl movsb in mov mov adc inc out insl jecxz pop sbb lret hlt ja jne pop mov sbb adc sbb (bad) imul decl adc jp xchg sahf add mov cmp pushf and jmp dec orl scas mov je push inc cmpsb cld xchg clc inc loope mov cmp orl mov and lret inc test fdivp mov xchg clc insl lret push pushf mov dec jns dec sbb out jg jg jne pop lahf scas mov sbb mov inc in mov stos jnp xchg out repnz arpl test loopne dec into mov cld imul cld not mov imul adc jecxz (bad) mov jne cmp adc push jl and shll lcall or add lock repz loope lea mov cld mov aam out (bad) lods lcall dec xchg pop enter fmull push jge inc mov xchg inc roll mov lcall stc pop lret dec out dec jmp cs movsl pop fdivr jecxz icebp push pop mov mov roll push fxch scas mov inc mov rorb stos adcl pushf sub dec icebp (bad) pop push dec (bad) jge es adc inc sub and add lods lea mov popf inc idivl pop int3 pop xchg lahf fadd cltd test leave push data16 mov adc sti int3 fstps repz lock mov mov push or mov in mov test jle imul sub push sbb in push sbbb sub dec or cmp pop push test push idivb mov popa insl cmp dec or sub jae dec stos mov jns adcb pop js fisttpll pop stc xchg adc orb jb dec inc loopne outsl data16 mov mov or add mov push (bad) mov in fadds sub rcl repz rol or or and insl aam sbb movsl cmp bound clc adc into sbb popa sbb idivl cltd mov jmp stos ds (bad) pop or pop dec inc jl sbb dec ret insb sbb sub lret in and mov ret (bad) cmpl adc in aad mov xlat cmp mov hlt inc adcl add movsl xchg sbb ljmp or xchg cmc lret (bad) dec adc pop lea test insb push pop stc rorl cltd (bad) imul ja stos fwait cmpsl push push ja imul in aas out lods mov push ljmp pop mov xor popf add adc push scas sbb jg dec hlt pop push aaa aaa add dec and das mov push cmc dec ds push cmpsb ds out xchg jl sahf mov pop sub or jnp push inc cmp fwait mov mov lea cmpsl mov dec inc addr16 sub test xor scas and lret movsl cltd dec les cmp decb dec scas aad dec mov or ja inc pop in xchg enter dec cmp sarl subl out jmp add mov ret int3 and hlt test mov call lret jne jnp or nop sub scas jo bound ljmp jp cmpsl push lods inc push jae gs or inc ret (bad) pop mov in dec mov push mov sbb cmp out add arpl or mov dec cmpsb inc mov fdivl bnd mov test mov loopne xchg or xchg jbe jmp xor cli sbb mov test mov sahf or pop mov insb cmp cmp inc mov jnp mov sti pop outsl outsb mov sub push cmp mov adc mov pop adc dec es sbb xor imul mov sbb stos lods dec cs adc sub insb stos int3 sti in call mov movb aad sbb les push mov adc cmp (bad) add mov add out inc (bad) mov jnp pop scas ret jne mov loop daa arpl jge pop arpl int inc ja xchg mov sarl lods (bad) push sbb and ss push xchg dec in pop jno cmpsb cmp add in lahf mov movsb jecxz test aad rclb adc push pop xor adc enter push jae xchg pop pop pop xor popa cwtl xchg icebp jbe mov push xlat insb cwtl ss add adc xor xlat test mov test pop gs dec cmc push jecxz pop jne data16 call or stos add das jl test test jmp loope arpl notb in lcall lock sbb scas (bad) add mov fimull mov cmp pushf clc adc int3 jne arpl add dec outsl out cmp jnp mov and nop push inc imul decl xlat (bad) pop xchg icebp cmp jbe push sub pop lds (bad) int or or loope loope out adc inc jl cmp pop insb daa jle in hlt fcomps mov lods lods or jl jmp mov fs pushf mov into mov xchg sbb mov adc arpl bnd js xchg add and mov movsb imul adc xchg and out and aam or lret cmpsb rorb push fwait or jg pop aam xlat sbb into sub xor dec push push je push sub sti sub call stc addr16 or lea jnp orl jae or push xchg scas adc push ret rcrb add cld xlat dec into xlat mov mov mov fcomp bound push lret push (bad) (bad) (bad) inc test ljmp cmp and push inc lea mov xor sti repnz (bad) pop loop andl push jbe push mov cwtl int3 and scas lods mov mov xchg cmc nop push push aam test or mov in inc or (bad) neg lods addb test mov lods decl jge xorl cltd adc cmpsb mov jle out insl gs jno push pushf aaa mov push jl or mov pop gs and stos fs xchg push into jbe mov fs inc lods or and xchg (bad) pop mov sahf and xor push stos popf push pop movaps inc dec addr16 es and shlb mov push jmp xor fidivrl sahf sub popf mov cmp push loopne,pn dec sahf xchg mov jl or jne stos enter stos jne dec test dec mov lods (bad) jmp decb fdivr pusha pop ret test in jne in mov pop lods adc jecxz fs nop (bad) repz ja pop and mov adc cmpsb out pop cmpsl inc aas cmp sbb jb fsubl dec bound (bad) mov xchg gs ficompl (bad) or and aam testl orl or ss add dec mov inc jmp push lcall cmp or pop dec dec mov cmp imul arpl fsubrs xchg stos test ja das mov pop and imul outsl (bad) mov jp jb out mov push dec and inc pop lods xchg dec es test paddd mov inc or mov shl sub test lods mov jle sub mov ret movsb or fdivrl imul std push mov (bad) and hlt xchg dec (bad) call (bad) push xlat sbb and xor dec jp in out leave mov mov leave adc pop scas mov mov out sub sub fsts imul int3 mov scas sbb (bad) fist mov rorl les mov mov insl sub fstps fdivp push sbb push xor lcall movsl xlat sahf and lahf mov lods test push push xchg mov jmp cmc outsb push dec lods push test xchg inc loop cmp fild mov mov jnp ficomp fsubl pop daa or mov ljmp mov ret nop les fnstcw icebp (bad) mov and push xor out (bad) mov out loope push insl cltd iret inc sub mov lea mov xchg mov lods std addr16 push int3 clc add jns cmp pop or sub xchg pop addb fucom pop test addr16 pop jno insb push inc aad leave push xchg mov jle cmp in das jb adc xchg mov cmp adc jp jg lock shll scas xor sub or shr xchg in xchg push cli xor (bad) mov negl int xchg cltd insb jnp scas pop adc inc inc iret sub lods cmp loopne xchg loop push addr16 jg out xor leave mov xchg imul xor imul movsb pop outsb mov pop mov sub jp (bad) dec pop out mov add and pop mov repz sub stos pop dec fsubrl mov dec repz push call out es mov clc in and shll sub subb idiv test lahf push dec jbe repnz hlt xor in xchg gs sar lea ret pop mov hlt pushf sbb add sar jecxz add mov ljmp fcmovb andb lcall mov inc and test push ret mov xor push push fwait ret inc or out inc rclb xchg loope inc inc adc or inc enter lods and sbb loop call pop lea int3 ds in jb xor (bad) insl cmp push add enter cmp and fstps mov loop push inc js,pn push push cld push mov (bad) je inc pop je mov mov xchg dec mov mov mov pop jle cmp xlat xchg pop push or ficompl fldl ljmp xorb in ret out mov dec leave mov or xor or ljmp inc pop cwtl mull (bad) xchg mov aam mov pop leave cmpsl mov test call pop cmp iret mov pop stos or ret jne mov mov mov insl test test ret mov xchg cmpl aam pop dec movsb cmpsl gs jge mov es aad or es mov int3 cli lcall rolb mov and cltd (bad) fsubl jmp fwait (bad) shl mov push cmp push cmpsb add in mov data16 xchg add sbb rol xchg sub (bad) ds sahf mov popa xor popl xorb push mov cmp xor pop mov mov push in mov push daa jb sub push popa jmp aad pop xor inc faddl sbbb out jmp outsl les cwtl mov add xchg add push insb sub mov ss jne cld popf dec out inc jg into inc pop xorl in inc xchg and enter je mov jne and mov out pop js pop fbld mov int cmp push out cs inc push je jo shrb call in cmp inc subb sub xchg jo iret divl into jae aas subb movsl pop push mov adc (bad) je sbb loope pop jp cmp and lock pusha lret dec cltd fcoml stos push and inc fisttp inc jl imul lret push and pop aad stc test jnp in pop sti (bad) mov jecxz and int jecxz test (bad) int3 and popf jb fwait (bad) fsubs andl jmp mov inc cmc popa ja pop data16 pop sub stc and mov mov and push jb clc xchg addr16 pop mov jmp aad add std push imul add hlt pop mov mov adc (bad) popf mov nop movsl out (bad) jae js aas push sub add inc decb mov aaa jb lock mov pop andb pushf aaa lods fcmovnbe insb cmpsb fstl lahf dec inc pop pop les call test sbb sbb arpl (bad) out into and inc sub adc sub sub xchg jle mov (bad) pusha not mov les (bad) mov add mov add xchg cwtl or sbb xlat push scas mov mov hlt (bad) repnz pop push xor sbbl push icebp pop data16 mov sub cmp push aad leave sub out push data16 jo cmp dec lock les add (bad) mov mov sub mov mov ds lcall stc aam in popa loop jne (bad) bound bound test fsubrs (bad) int3 mov adc imul or out pop xor movsb dec movsl fnsave mov (bad) mov (bad) (bad) inc rorl adc push add xor sahf mov jg pop dec (bad) sahf xor or (bad) xchg loopne cmpsb jecxz mov fstps add mul add lahf pop sub inc insl dec jb bound addr16 data16 and ja and push lods mov into sub xor and xchg stos rorl jecxz,pt inc insl jns vpunpckhbw ret rcrb dec jnp test jne iret imul mov ficoml aam sub pop stos mov mov rorb insl jmp xchg push out inc push icebp mov bswap mov or int3 (bad) push and imull mov lds (bad) ja fcmovnbe xchg (bad) mov lea adc adc pop les inc pop test adc xor sbb pop pop bswap dec test fnsave jns pop ret lret sbb cmp lcall adc pop xor cli (bad) mov jp pop sub loope cwtl cmpsb and jb (bad) dec sarb jnp mov movb popf orb sbb lods iret int stos xor mov mov std bound int jne mov mov add adc ja popl xor sub xchg push xor xor add mov inc adc mov aad mov xchg sub fwait addr16 xlat push inc xchg lahf rorb ftst stc mov iret pop gs dec lods icebp into add cmpsl add jmp jg js mov jno mov jmp imul push inc (bad) fisttpl out daa out or add mov sub push ja add xlat xchg popa (bad) mov out jl cmp ljmp inc sub scas popf int (bad) sbb jbe cmp repnz sub dec enter imul out sub xchg mov cs cmc cmp or xchg lds dec fsubs mov cmp pushf jp sub pop xchg ss dec jno push clc xchg jb out int3 mov lods mov das ja or rcll mov push (bad) xor aad loop (bad) or out imul pop mov insb xlat sub xor enter add adc (bad) cmp ds add push cmp imull nop mov dec inc cwtl xchg mov (bad) lods (bad) push sub cmp lret repnz push xor dec add push jecxz sub mov add out cmpsb cmpsb and jecxz cmp push mov (bad) mov xchg xor xchg dec sub xchg mov lret scas rep out insb (bad) jns es fldl cld pop mov mov jecxz adc adc arpl pop pusha jg out mov xlat dec daa push sub leave leave cmp mov add jo push ret lea adc jg adc shlb push test iret aas adc pop loop and push push and inc inc lods add mov mov xor jmp scas push mov jns pop add (bad) or lea pop mov ljmp jmp int3 (bad) jg jo mov or push xchg imul adc mov cmc jge (bad) outsl cmpsb push xchg test xor and mov xchg int3 mov xchg es rolb pop inc push neg (bad) frstpm(287 pop dec cmp call ss mov rcrl clc (bad) lods xor jo (bad) imul mov out pop mov mov pop xor js pop fcmovnu cmp jecxz das inc push int3 and stc inc mov ds out das cwtl stos mov ret ss jge faddl loop push dec lods jge xchg fst lds xor cmpsl popf inc (bad) std lods pop mov sub into movsl jle lcall jo push gs sub adc in mov mov sub cmp aam stos sti xchg inc js pop aad scas lret sbb loopne pop fbstp out push bound sbb push ficom adc mov mov and cmp mov cmpsl sub int3 jbe xor add xchg movsb pushf ss cmp or adc dec and mov ljmp dec xchg mov mov aas loope test xchg mov xchg addr16 xchg imul mov xor adc xor jae xchg in cs push dec ja pop imulb xor in ficomp ds out pop pop leave loop xor mov mov test inc sar fildl push test or std or inc in subb xchg adc cmc nop mov jo or shrb outsb lret jmp in mov inc mov dec jo fistpl xor mov sti fldt stos adc add ljmp movsb stc inc sbb (bad) sbb mov in fwait cmc lds aam mov push lret lock cmp jno cmp arpl cmpsl rcr icebp jo loope jl mov test outsb or cmpsl jg je cltd into xchg adc adc dec sbb mov insb nop scas dec lock movsb sub jo pop stc addr16 adc mov int3 stc insb xchg xor jle bnd pop jge xchg ror arpl das lods aad ja push fsts jns je stos ror addr16 xchg ljmp imul pop adc adc mov movsb add iret mov test xor mov scas mov add and jnp sub mov pushf add out and mov in pusha insb in jno int3 inc dec test ret push cmp mov jle mov sub jge pop mov in loope (bad) xor dec ss lret or out xor fimul fwait or mov xchg test (bad) sub mov pop je jno cmp movups pop imul bound repnz pushf mov adc mov test jbe or arpl sbb stos xor bound mov pop mov or andb inc into mov movsl inc (bad) or (bad) mov xchg pop stos pushf fwait roll and fldl adcl adc in aas out mov mov sti mov add je and cltd cltd pop or sbb dec adc es sbb mov sarl clc pop je call jne or push dec idivl cmp and xchg fs pop mov nop dec jecxz ret dec cltd push int3 add xor es mov cmpb push addr16 mov iret xchg aas or jno js insl mov decb inc mov rcr cmp out rorb mov push decl add mov push push mov (bad) xchg inc sbb pusha inc push ss (bad) jmp and adc stc pop sub andl and test lret loope loope stos and or aad push jae jmp mov xchg dec mov dec ds cmpsb mov push lods dec loopne mov cmpsb push sahf mov je adc test adc jl push add or outsl stos add push test push cmp pop out (bad) xchg je call fidivr mov (bad) and xor and insl sub icebp or xchg xchg cli push (bad) iret outsb xchg sbb (bad) fwait js enter jo fsts sbb pop mov ja scas mov mov outsb out xor sub (bad) in (bad) sub out jnp loop call adc push out jmp test cld jl nop (bad) cmp or pop stos push dec notb push mov mov push cmp add pusha pop test dec enter fcmovbe xchg jge add push aad jl cmpsl xor and movsl (bad) shrb mov out jo push mov lret push shll dec xlat icebp xor add xchg mov popf arpl and imul sbb push jae sbb test xchg insl mov imull add or add pop jmp jl loope mov xor fwait std leave cmpsl addr16 xchg mov bound aam movsl xor mov inc sti cmp cltd pop mov sub mov nop fdivrs sbb push pop pop (bad) jb enter nop mov cmp cmp mov in fisubrl pop test adc xchg cs sbb (bad) mov add fimul jbe sub inc pop fcomip mov scas mov cmp sub imul mov or pop jmp pusha and lock xchg sbb dec mov dec push pop pop insb jl repz cli out push add lea sahf push mov inc (bad) lods dec inc test cld xlat mov or jb mov xchg aad adc loop cmp mov xlat (bad) or lods and jmp repnz cmpsb insl adc sbb iret adc xchg sbb loope push sbb push inc ljmp or daa mov sar hlt insl les jge pushf out fidivl push push pusha inc xor stos aam adc push cs imul sbb sbb or sub xor les push or (bad) movsl cmp jge ret mov xchg lods dec xor mov jg push in out mov test ret je scas (bad) jp fldl2t cs push dec les std in inc cltd sbb push addb cli sti adc rorb mov mov or lahf pop and (bad) add ret mov in insl jo inc jbe dec jp and add inc fst mov jl imul mov jae pop xchg scas xchg push cld pop repnz add pmuludq mov push or repz pop vpmulld test arpl push and gs dec mov adc test (bad) pushf fstl sbb sbb fdivl sbb aam mov into mov jbe mov dec cmp inc jle and pop movsb mov jge xchg stos cmp jnp insl dec shrb sub icebp fcmovnb cmp sahf dec popf repnz and fdivrs fcomps js dec inc push mov hlt sti push out shll insl add mov mov ds sbb daa or push pop repnz and aam xchg int3 aas leave adc add jno cltd pop lret fnop mov lahf call ja jle mov cld xchg enter sub sti xor loopne mov adc add push (bad) fdivl insl decl pop cmc dec (bad) cmp cmpsb out pop jnp mov xchg push ret insl pop in sub mov int3 cmpsb pop popa enter or cltd push inc lea sbb push or sbb and pop inc and xor rcll int and test push out inc lret pop dec sti jbe incb add jge popf pop dec in int pusha mov (bad) cmpsb cwtl repz insb adc outsb xchg pop pop fisubrl int lcall es add xlat xor popa das popl leave cmpsb push sub mov mov mov and cmp mov lods pop arpl mov (bad) iret test test mov fs fldcw adc shll ja cwtl iret sti cmpsb scas push dec cli push xchg subl ret sub stos (bad) or jl jmp push mov mov insb dec mov push mov inc mov adc icebp mov les ss lahf sbb popa push sub mov call add mov pop cmp test jnp lret cwtl (bad) rcrb repnz leave and icebp inc and xchg sbb add imul outsb pop negl enter jno das loop sarl pop sbb hlt aaa and (bad) test fwait pop cmpsb xchg push push ret rol inc or dec xlat aaa and jge stos sub mov divl fcomi and pop leave adc xchg push xlat mov jae fincstp fisttpll jbe into mov mov add mov mov adc mov imul js lret add inc ret pop mov dec cmp xchg xlat les pop (bad) lock jle xchg push push inc insl sub xchg test fimul mov (bad) hlt daa mov mov bndldx ret loopne inc xchg fstp jno clc out out (bad) mov add enter nop pop loopne pusha pop adc (bad) or sub mov xlat ja mov xchg xor stc ficompl jne cmp je sbb jge pop (bad) jne (bad) dec pop xchg xor fadds mul xchg mov out sbb lcall out xlat loope test xchg xchg iret ss arpl dec sbb jle addr16 sub push jge add sub roll sbb mov mov jl sub dec iret jge lret add movb shl inc (bad) dec xor cmp shr inc xchg test adc addr16 popf ret stos stc mov xchg jno sub fbstp jnp push arpl fcoml (bad) imul xor sbb (bad) jns ret jge cmc (bad) fcom ss mov cmp jo xor sahf sbb push out cmp sub sbb loope mov test ss mov popf insl dec mov xchg stos jmp push aad sub inc sub cwtl cs jbe xor cmpsl mov jns lret sub adc push adc mov imul ja dec inc mov aad imul mov jmp (bad) add setns pop jae out (bad) sub icebp add data16 bound test (bad) mov jecxz adc push push test cmp or and repz jns or push push add mov ficompl out mov cmp xchg adc test hlt inc repnz fisttpll sarl xor or bound pop nop aad push call enter ret jbe sbb (bad) (bad) xor pop fist or data16 jg,pn mov mov mov lea repnz dec xchg mov sub inc sbb scas loopne rol pop arpl in insl leave sbb bound sti xchg rorb pop adc mov push (bad) sbb dec (bad) lock icebp push pop dec es inc add sub add xchg dec ljmp pop repnz xchg sets pop dec loopne mov xor xorb dec inc inc lods sarb psrld mov or sub mulb cmc test popa mov pop inc jle lahf out mov std jo mov lret arpl push fisubr jmp or std inc stos pop and inc mov dec (bad) lret aad in push pmulhw daa lahf test icebp inc xor aas mov repz adc loop movsl je jecxz addl arpl or aas fdivl adc iret mov push es push add je stc mov hlt xchg mov dec jl mov push xor jae test inc out ljmp ss push test iret xlat out push mov int leave inc fnstcw mov test insb jle loope pop xor jae push inc cli paddw or scas xchg mov pusha fsub cltd pop mov int3 lock frstor adc xor add dec data16 in push xchg jmp cmp hlt insb dec mov pop and inc xchg ljmp sub inc inc pop out dec sbb sbb or clc aaa or mov jne clc add into pop das sub in mov scas adc (bad) enter fwait jns mov mov lcall add test outsl sbb out shr fistp data16 iret je fcoms add sbb std xlat dec or and sub loope adc (bad) sbb dec xor mov icebp xchg sti xchg inc movsl popf or ret (bad) and pushf repz pop jnp pop inc pop jl dec push dec popf or dec addr16 or mov add stos icebp xchg (bad) adcb mov pusha xchg fistpl sahf test inc addl pop rolb scas sub add fcoml out cmp outsl pop dec aaa or jns mov leave sbb xchg pop cmp mov adc (bad) loop xchg jo movsl fbstp push loopne jecxz xchg pop cwtl xor out sbb xor pop popf adc adc daa fnstsw ret sub add pop jno gs cmp aaa lahf fiadd and mov add into movsb mov or push (bad) sbb out and jecxz cwtl adc xor nop or outsb add ss imul sbb clc push cld es mov dec arpl bound (bad) daa repz lret pop push int leave push mov mov fistpl and jbe insl adc lods stos imul rolb out jle fild sub sbb lret mov imulb icebp sub pushf dec addl (bad) cwtl arpl fistl xchg daa mov inc rcll pop test lret bound mov fiaddl sbb add and (bad) xor jne (bad) enter (bad) inc xchg mov lods mov and or (bad) cmc cld je pop rcr cltd mov jne ror lock pop mov mov lds outsb dec dec mov pop or loop inc pop inc ss or mov stos inc add lods xchg test sbb in cmp aam shrl sub cmpsb enter repnz xchg sbb ljmp sub dec inc lods add mov dec mov add idivl loop push into push fnstsw incl lods (bad) sbb ljmp mov mov cwtl adc bound jge pop outsl clc (bad) push mov test popa pop call dec test inc loopne nop push (bad) mov mov push test pushf fsubs push test cmp xchg cltd rcrb jl imul mov push push dec mov int mov loopne (bad) rcll jmp je neg ja mov flds push xchg pop dec clc ljmp pop int3 cwtl lods inc fmuls push push adc push and cmc sbb popa in mov fdivrs push add insl sahf ret cmpsb (bad) enter outsb jno push adc inc mov push fstpl dec or adc mov lods aaa outsb mov xchg lock adc push shl sub pop inc leave mov xchg (bad) scas (bad) popf xchg push or pop fimull mul nop (bad) int3 icebp jns pop add repnz jle daa lods repnz testb das leave or test ffreep mov xor (bad) sbb xor (bad) imul subl pop inc fnstsw push lods nop js adc and iret xchg sub test sarb jcxz loope cli dec cmc or mov mov cs and add (bad) jae ja es or dec push pop lock aas mov push xchg out add jecxz xor in movsb ljmp or push push lods (bad) inc int3 or invd fiaddl cltd xchg or or stos push jnp mov arpl pcmpgtw jle mov lods xor and pop cmc xor xor (bad) je inc jo gs test jmp test lret mov mov xchg ss dec imul push inc nop or or popa insb jne fucomip faddp jne cmc mov inc fmulp inc pop push dec (bad) daa clc mov out push out xchg sub xor in lcall or arpl popa xor pop stos jb fsubrl mov adcl (bad) pop ss mov sub loope int repz clc scas inc xor sbb lea cli int jmp loope cltd mov mov pop push outsb pop cs mov push jmp dec xor aas cmp scas adc push sti xchg cmp rorb fimul dec subl mov insl jne stos movl fdivr pusha xor jne push sub lahf fstpt ret (bad) jg negb dec in shl (bad) cmp iret mov pop sub or gs mov sbb popa subb fdivr repz xlat xor xchg cmpsl mov ss (bad) int ds je or je popa mov add jb data16 mov pushf push (bad) sbb xor in jbe repz pop jmp push sub movsl add or test ret cwtl add jne mov adc dec adcl bndldx mov add adc pop das repnz scas xor mov nop loopne pop jbe lahf jecxz dec stos pop jne pop ljmp ljmp mov frstor jle sti (bad) lock cltd lret xchg or out and call sbb out push outsb std fidivr cltd div fisubl fidivrl adc mov hlt mov and mov mov or mov dec fildl inc sub ss jnp jle notl insb daa in pop scas pop dec pop shr push cmpsl adc stos nop cmp adcb add jge sbb adc nop mov cmp addr16 pop cmc jns sub adc mov push mov xchg test mov addl pop xchg out mov inc in mov pmulhuw dec out fcompl jno add repz xchg xor jo dec je rcrb lds mov nop mov push push aaa mov jle push scas adcl mov inc mov out test mov jae sbb cmp cmpsl ficomp stos jge aas jmp xchg pop lea pop inc outsl addr16 mov arpl adc xlat repz adcl insb xor xor dec fnstcw cmp out pop jmp or mov mov imul push sbb rcr (bad) and in hlt mov sub lcall jbe pop jmp ss lds fisubr out adc pop in loopne push in mov aas cmpsl adc hlt das je fist pushl ret adc sbb daa rol jae movsb dec cmp inc sbb aaa dec sub xlat jmp ret fildll repz rorb (bad) dec cmp lret fdivl aad mov outsl pop add and loope and mov xchg lds sbb jg pusha push fprem (bad) cwtl pop stc adc fcmovnb add out insb ret repz (bad) aam stc stos mov (bad) and jne test push sbb xchg daa movsb sub mov cmp xor pushf enter rolb xchg scas mov xchg ret fiadd lods cmp pushf xchg pop stos pusha dec lcall push enter (bad) push out cli out out pusha fimull dec adc out or cmp adc daa test add mov clc fnstcw shrb stc movsl mov rep jecxz add lret push aad lahf aad push fdivrl sub out out repz adc mov xchg dec es jb adc add mov push xchg lea jg fs cmpsl xor stos mov sub lret lea jne sub add jle call add push jecxz dec sti movsl xchg push dec pop and jecxz jg (bad) ss fwait cmpsl scas scas ficom ret cltd mov aam sbb scas mov inc cwtl xor (bad) dec sub sub sbb inc inc pop shrl pop aas sbb or (bad) sti or xor push push out icebp xlat or mov pop push lahf mov leave pop cmc scas inc ficompl stos adc jle rcll xchg outsl dec adc inc mov jmp outsb in push aas mov rorb not and stos (bad) cwtl and out push mov mov pop mov loop inc hlt ret popa dec jg xchg add test mov xlat jo (bad) bound dec xchg test daa rcll xor ret or sub pop gs and cld inc insl hlt dec testl addr16 cmp nop ds movsb or insl inc shll sbb lret dec push jo pop cli sbb sub test sti push pop cmp test pop (bad) repnz mov sub adc xchg loop or rcr iret cmp addr16 cmc jnp cwtl sbb inc loope xchg cmp sbb stos outsl clc mov sbb gs push cmp inc jbe hlt cmp fisub std fwait cmp push jp outsb add (bad) fistl aas fmul inc pusha aas mov je jne mov adc mov sbb mov cmc mov add sbb outsb mov fbstp outsb mov mov in mov js xchg xchg lods jns (bad) test inc sbb sub or test sbb jns dec jp adcl leave ja jne insb push js jbe fnsave jl icebp (bad) sti cmc (bad) push mov mov iret (bad) data16 push jns jmp ret pop test aad scas aas cltd push mov jbe xchg mov in mov and (bad) jns inc cltd cmc arpl js sahf jne pop xchg sti jle cld push rcrb clc fidivl arpl aaa sbb inc inc adcl (bad) push add ret out push mov jmp fistl lds sbb test jecxz jb imulb cmpsb mov sub (bad) rorb sarb iret jb popf pop pop inc xor outsb inc inc in push cmp mov in mov fwait (bad) imul jge xchg clc adc daa (bad) jae sbbb ss push int mov aaa out stos adc int3 xor stc addr16 pop sbb inc sub and adc xor push xchg inc or pop push adc fsubl add push add sbb fldlg2 les shrb into dec jb dec pop pop mov cld adc aad (bad) adc pop xchg mov pop jbe jle (bad) test das out jp scas je xchg dec adc idivl mov sub or mov (bad) imul sarb dec or mov sub mov and adc rorb push jp xchg clc pop jbe addl divb pop xchg (bad) cli mov hlt xchg ljmp cmp andl imul fbld mov sub insb fbstp and fwait and mov (bad) push pop lea push mov repnz lea mov sti sahf cmp in mov lcall iret pop imul xor xchg nop xor aaa test ret cmp push pushf scas inc jo or adc inc xchg std pop xor jge out aam sub into inc sahf scas and imul and xor out pushf dec push je add test lret pop out faddl jno fwait jnp mov rcll fs and pop add in das add sub sub and aam icebp jg (bad) popa add lods fyl2xp1 cld sbb lret das push mov cmp cmp dec jns lods mov fcoms xchg mov outsl insl pop shr bound inc xchg add inc xchg push insb cmp jp xchg cmp (bad) lahf arpl (bad) jne dec fistpll jns xor mov imul aas scas (bad) ss sti ss push cld sarb hlt sbb xor xor and pop or push jno dec dec dec fsubrl sub (bad) enter loop insb xor xchg in int lret sub jle imul lea xor xchg (bad) movsb popf add mov cmp jb,pt inc sub mov bound xor js mov jecxz into mov jmp (bad) xor cmp push sub mov daa bndstx loop push add mov and and xchg data16 lret shl out pop pop jg sbb nop add cltd xorl cmpsl rolb add jg aaa jg xor mov xor nop enter frndint mov sbb adc mov pusha (bad) aas int mov gs std repnz add fistp push dec (bad) outsl jbe adc and jp lods mov aas xor mov sti cmc dec cmp (bad) or sahf sub fnstcw shlb setle iret js add or test mov jns outsl cmp cmp sub or ds xchg dec call (bad) lock add push inc push xchg mov shll sbb xor insb push fwait add arpl and pop cmp xchg ds mov inc in sar push sbb push fldl ror leave mov in xchg (bad) outsl cmpsl push in shll in dec ret xor aam sahf mov adc int3 lret cmpsl xor mov rcrb pushf push arpl and pop inc jae jp aad pop cmpsb or and gs sahf dec sbb (bad) in xor add out push push push cld cmpsb shrb mov xchg sub ss jmp sbb add sbb fs adc (bad) pop or lahf cmp mov push mov out test add mov fs insb imul inc xchg rcll lods pop cli sbb pusha xor call stos lahf mov mov gs or (bad) and or or les mov fadds test (bad) xchg sbb mov adc jb ja movsl fmuls mov pop inc jno into mov mov nop jp dec push test es test imul stc rolb ficoml pop pop data16 cmpl lods stos xor pop xchg xchg ljmp leave dec lcall and xchg hlt loopne mov add lds mov cwtl divb dec sbb lret and mov rcrl jae add cwtl sub addr16 mov aad push jmp xchg addr16 fbstp fistpll xchg sarb (bad) popf popf in and adc push pop pop inc mov leave mov sub sahf rcr int3 test mov push test std inc mov ret cltd sahf xor loop and mov cmc lods cmp pop sarb jg out mov cmc out pop jno pop adc push subl lahf scas push cmc in mov int3 rorl out mov or loopne sbb das divb xchg push cmp or jmp fstl in ja,pn sub out (bad) (bad) mov and xchg cli add inc cmp cmp mov data16 daa fistp dec sbb arpl cmpsb xor ffreep inc mov pop mov adc and pop ds dec ja cld add enter fdivrl push add (bad) mov and rorl pusha jecxz fs addr16 dec mov xor testl dec mov push and jbe popf mov pop std mov leave adc pushf ja jne mov jns add (bad) std inc lcall in test fisttpl mov les (bad) std outsb mov xor fistp int3 je andl xchg lcall or adc sahf test iret insl mov dec jge (bad) insl and lods (bad) loopw mov dec cwtl js add add adc or aad push das icebp xor adc test bound jbe aad cmp out pusha dec mov or sbb mov cltd das bound ljmp push imul pop popf jb mov add daa adc cmc bound aad mov dec sub arpl jg lea jo lods jmp adc jl loopne out pop (bad) loop fstpl in and xor mov inc sub aam jo aad mov mov add bound and push jae (bad) mov daa std into inc push call cltd sti popf push enter cld pop nop stc pop divl and cld xor push mov pop call sbb std int3 in and push lcall test movsb push aam xor lret pop mov cld xchg (bad) dec sahf sub adc fdivrl daa pop dec enter enter jo push (bad) adc inc xchg push pop arpl insb mov or mov nop dec es lds inc mov pop inc add inc fcoms outsl xchg int push fwait dec in popf in add push lea lahf addr16 and ja popa or test dec (bad) cmp roll ffree push loope dec mov stos pop mov push mov int3 hlt les inc mov mov aad mov bound and jecxz (bad) in lds addr16 (bad) loopne jnp mov lret ret std test out adc push pop and and add (bad) jmp leave stos dec add adc sub ss movsb xchg (bad) cmp mov imul add pop test ds xor data16 sbb xor negl loop (bad) xchg mov hlt repnz pop repnz mov mov mov pop mov xor xchg bnd pop cmp cmp pop popf push scas jnp push xor outsb clc cmp loop ss inc mov ficoml dec imul inc mov sub ss stos dec jb in mov xchg daa mov inc mov xchg sbb cmp adc adc shr add xchg xchg lods incb dec and jge sbb inc inc es add out mov das inc push xchg pop xchg add jno in jmp adc pop adc fisubrl in add pusha cs jnp shr or add out fdivs out adc arpl cmp call outsl mov xchg sub loope mov add dec loope (bad) clc loop lcall cli add jmp inc mov xchg xchg outsl inc lock sub out loope push xlat mov loopne lea loopne dec mov fidivrl push mov pop mov fwait pop cltd repz jecxz push mov mov jmp out lock lods lcall out out insb ljmp lret jmp xchg sub mov enter jnp cltd pop cmp outsb xor lods inc or jno enter push push push stc mov pushf pop pop cmp outsb pushl movsb into stc sti and lock rcrl and add lret jg call dec nop lret push repz shlb int xchg jno xchg in mov fistpl je fcoml fs sub ret pop mov dec cmp add adc dec sub adc push sbb mov dec or jp xchg insb jg cltd dec push xchg out sti js shlb xor cmpsl or outsl ss inc or dec (bad) mov sbb fisttpll aaa ds mov les adcl in mov push mov cmp pop push aam mov loope sbb std ret lods out ds pop popf adc mov dec gs jno mov not pop adc adc mov jnp mov rorb push dec add loope test dec inc mov loope roll leave mov push das mov and aad sbb xor mov inc or inc addb push and cmp rorb lret sar ljmp sbb cld out sub inc (bad) lock inc inc jno pop inc popf lea jne je outsl (bad) test fildll loope mov pop in cmp out aam adc adc cmpsl add xchg push pop xchg xchg inc or inc dec sub sbb pushf divl outsb push ljmp jl repz or shrl pop xor call lods jle xchg (bad) and pop cmp mov xchg add imul nop inc xchg repnz push push aam out popa dec xchg push movsb cwtl adc jb cltd lods cmpsb icebp cmp test aas push cltd fldcw loop cltd dec das sbb dec mov addr16 notl pop pop ja lcall cmp push push push paddusb iret mov push add cli mov push ficomp jae xchg fwait imulb cmp fucomi xlat mov add push jno je shlb aas mov std jns popf xor push or rorb mov aaa or iret or jg aas push mov loop outsl jecxz push ds and sti out and fcmovb insl cltd (bad) jns ror aaa dec adc fdivrl mov add pop adc fs pop jge sub fsubl addr16 xorl stos sub es lret sbb outsb and out mov cmc cltd and hlt daa dec stc jl iret inc ret loope ud1 jp jb aaa (bad) loope rol dec and outsl ljmp or aaa popa insb mov pop mov out fisttpl sbb jae out ret arpl add iret sbb push adc xor sbb stc or repz add dec das xchg (bad) lret repnz push leave xchg divb (bad) repnz xchg cld (bad) out push pop push jp mov push test push xchg sbb mov aam andl xorl push inc sbbb jp push inc (bad) (bad) cmpsl cltd leave out loopne lods insl fcoml or jge iret mov int3 fadd jb jle xchg clc scas sbb cli out mov or and (bad) inc pop sar and repz leave inc (bad) pop lret and add jecxz rcll arpl popl mov (bad) xor xchg jo fldenv mov cmp lds dec pushf test jae jno out jbe lods add add push movsb rclb test cmp mov enter dec outsl pushf icebp cmpsl mov in cmp int3 xchg stc iret sbb inc iret das cmpsl fcoms std sub cs inc add aaa and adc pop mov or mov cmp ret push repnz popa adc sti mov insb mov push call scas cltd push (bad) aad out imul aas fsts dec (bad) pushf fist popa push mov pushf dec mov movsl dec mov sub in scas roll cmp adc gs mov pop xlat imul test jb fisubl inc ret shll (bad) push pop sarl jmp icebp in (bad) or ja mov push pop cli mov in jno mov es lret mov es cwtl lea dec clc movsb adc test js shrb out aas xchg inc add iret movsl fistpl pop ss fcmovnbe push xchg out pop jmp cmp jb cmp ss addr16 xor jmp mov pop lret push jmp rclb push stos fnstsw scas inc inc push pusha xorps ret xchg inc sbb lcall mov mov push imul jle outsb dec xor push outsl (bad) and adc ja mov aaa out and push (bad) dec dec xor ficom pop sub setnp clc mov pop (bad) outsb arpl xchg xor mov movsb sub rcrb aam out pop add push decl push hlt dec xchg mov fwait das mov nop int3 push dec in mov push jge inc (bad) mov xor mov xchg mov sti mov pop vunpckhps inc cltd scas add add jb jo pop jo insb jb mov jns jo xchg aam out jne scas cmp rolb push imul xchg cs lahf rol pop jb pop (bad) popf mov jnp addl nop xchg cmp sti inc stos adcl data16 fs je or pusha xor cmp addr16 icebp and (bad) jg,pt nop mov scas lret daa movsl movsl mov test push pop iret inc int das aas and aaa mov jno pop jb adc imul or mov int fs xor stos or stc mov repz ss sub pop fbstp mov (bad) jb mov andb jo xorb jg xchg cmpsl repz in jge and fwait sub mov aaa addr16 out mov mov (bad) and xchg xchg pop stos out sub pop and sub adc dec inc push cmpsl fistpll and sbb pushf flds pusha pop pop jns and stos push mov sbb scas inc out inc lret movsb add orb pop xchg sahf out mov push xor (bad) xor rolb or aaa ss jno xchg idivb mov mov rclb inc mov inc pop xor xchg scas inc sbb or xchg xchg adc dec mov mov lahf xchg lret or stos addl push es ja xor mov cmpxchg clc cmpsl cmp fwait xor pushl lds and (bad) mov push pop xor movsb dec test pop je adc jmp xchg cmpsl dec lods sbb jmp xor cs sahf push mov sub inc (bad) push jb xchg xchg fcmovbe (bad) xor aam imul cmp push fsts push (bad) dec in xchg mov push mov jo shll mov or ljmp insb lcall (bad) imull movntq loop pop lret mov bound test out or cmp arpl les pop mov nop aam pmaxsw xchg mov adc jecxz pop cmpsl (bad) cli jge push xorl fidivrl mov lret movsl mov adc sbb jno sub dec arpl mov xchg xchg enter (bad) push push mov enter xchg mov stos xor fnsave mov mov cmp in loopne stos ja xchg (bad) ss mov popf cwtl push cmpsb ret xchg dec pop rorl andl and push data16 lock out jbe jne mov sub mov mov pushl jmp push mov (bad) mov rcrl push ds (bad) repnz pop adc rolb aam enter mov out jne mov xchg (bad) aaa mov mov or repz popa mov pusha (bad) pop pusha pop mov and (bad) pop (bad) jne add pop fldcw jns mov pop push test mov aam or xchg (bad) notl adc mov adc sbb dec pop adc push xchg jmp pop add ror mov xorl adc cmp nop push scas xor pop mov fisubr ljmp pop lock mov mov negb aaa and and dec jp,pn add js jmp (bad) roll push push (bad) fsubrs xor dec mov sarb out xchg mov xchg iret push xor sahf arpl jae leave fxch push dec xchg fwait xchg incb (bad) stos out mov adc sub cmp (bad) dec pop xlat push or mov aas cli xor das inc outsb sbb dec std jae jg out cltd jmp xor ljmp push fs mov sti xchg jo xchg adc (bad) (bad) (bad) data16 (bad) test (bad) or fcoml jecxz pop mov xchg gs push (bad) jle es (bad) iret adc stos mov enter daa loope je xchg pop in (bad) lock pusha dec sahf or pop pop or jmp dec jmp mov addr16 shrl scas out stos shll jno pop mov mov mov or jge push mov and push pusha push mov bound jbe push (bad) (bad) push fwait (bad) ss mov sbb popf loopne or pop test push rclb xor test and mov inc xor inc js scas push (bad) addr16 lcall ds lcall pushf repnz lock jmp jp (bad) (bad) stc (bad) cld mov ret outsl mov fidiv mov push jecxz push jecxz cmp shrb imul in lds pop xchg outsl shll pushf xor in xor pop dec inc adc repnz pop push pop push test (bad) scas bound xor call lds out xor adc jne adc data16 mov test cmp movsl int3 sbb cmp xchg mov loop adc and add (bad) cmpsl xchg inc mov mov dec push out inc and cld inc lahf jge in jnp adc mov stc jb bound ds mov dec in xchg sub jbe arpl sub enter lods mov test cmpsb jne inc inc decl daa mov cmp outsb inc std add mov data16 add mov sbb pop addr16 adc mov mov jl pop push add sbb cmp sub dec add jb mov outsb lods xchg sub inc jp lods mov es xchg or in (bad) xchg mov sub inc adc adc mov push fcomps jp mov pop jg fwait dec js mov jo sbb mov outsl sti int data16 dec inc aad inc adc shr jae mov sti mov aad sub stos xchg imul arpl adc xchg repz or into mov mov shl jne gs jge xchg xchg je js push jno or xchg add (bad) xor mov call aas jle fsub cltd mov int push mov pop mov dec lods test jp cmp or sbb adc stos jns out sbb xlat push mov (bad) sti and js lods xor or add add or dec mov jg sar hlt pop stos std (bad) mov shlb push pop leave sbb lds cmp sbb jecxz outsb shrb lret mov (bad) out popa ljmp imul fistpll es test rcrl push mov test movsl ds sbb sbb cltd fsubs ja movsl push cmp jnp jg mov stos std stos dec iret jne fwait pop mov sbb mov jecxz repz adc lahf int test insl xchg in push pop mov mov sbbb out mov addl ret scas push fs scas dec data16 loop daa test xor test data16 (bad) add pop lret mov and push loope dec push fbld mov fdivl das push (bad) mov mov sbb hlt shlb xchg icebp cmp (bad) sti or inc xchg push fs mov insb bnd cmp cmp pop lods sub mov adc jp cmp sbb sbb mov fldt cmp stos imul sub imul clc or xor mov jge xchg notl aad cmc mov push pushf sub pop les (bad) rorb nop lret mov jecxz rolb adc dec cltd add or push dec add icebp jmp jne or mov lods sub push or roll scas fiadd addr16 les xchg xor push or (bad) mov lret mov (bad) cmp cmpsl lahf push lret sub adc cli out sbb adc dec outsb outsb xchg in lcall repnz add xchg out xchg lds adc push cld cmc in push fidivr in push cmpsl and loope mov mov jbe cmp in dec outsb adc daa xor xor cmc push cmp lods adc mov cmp icebp jb outsw (bad) fmull sbb (bad) xchg push or lods jb js mov loop mov punpckldq fucomi sbb bound stos (bad) mov gs sbb dec pop jmp stos sub fldenv sbb mov and cmc jbe enter pop push pop repz int dec lret ret (bad) push (bad) cmpsl mov mov jge cmp faddl fwait sbb fsubr dec outsb or stos ret cmpsb fsub push adc sahf jb shll push xchg or fisub int push icebp dec cmp dec test dec hlt push adc mov stos aam push xchg out pop clc adc dec xor push prefetch test shlb rorb cmp fwait in mov mov xchg pop icebp mov and mov inc cmpl and stos lret (bad) jne and jp arpl lret jl xor out fs popa scas (bad) fidivl mov stos pop scas mov add mov lcall cltd ss in pushl fistp mov and push out gs sbb popa sti add dec mov fldt repz mov cli ja inc mov stos fcomps movsb push jge cmp orl adc test das mov lea and gs mov push and and or xchg push push adc ret repz or mov mov stos cmp sub imulb aaa cmc push dec imul movsl ret pop divl xchg lock pushf cltd sub cmp sbb mov aam push dec cs and adc jg andl shrl lret sbb or jle inc sti dec lahf mov jno mov mov frstor rcl sbb pop add (bad) inc (bad) xchg (bad) cmp inc das jp iret enter fwait dec cmp les call push scas and mov jmp mov scas lcall mov push mov aam mov push jbe fiadd jno leave jmp push xchg dec aaa xchg ror jmp aas mov out cmp das mov sub jno daa inc push jmp xchg lock andl jo add adcb fs lret pop aas lds in stos (bad) mov mov stc sbb fistl movsb mov or xchg adc pusha into imul mov insb jbe ret outsb cmp cmp jmp pop hlt cld lea add in jne pop jmp idivb imul (bad) add push lret outsl js cmp or cmp xor jo ja (bad) ficompl xchg leave pop xlat aas jo mov aad cmp or data16 out imul mov outsl jae push cmp mov inc push out inc cs xor call andl test push jb mov adc rolb lret inc cmp push xchg clc int dec pop mov mov mov out or pop or popa stos mov mov ljmp xchg lods fcmovne pushf cmp push enter dec lods pop xor jl (bad) or pop xor adc (bad) je sub scas inc (bad) nop lods adc mov dec pop je mov mov pusha sti pop in jo mov dec mov push cltd pop aad mov scas leave mov pop mov les or cmpsb and loop add fsubrs xor xchg xor push pop out mov add xor xchg rorl xchg mov push lret sbb sub nop pop lahf mov jb adc jns sbb in repnz sub mov jge adc (bad) fdivr xchg (bad) xor cmp insl insb shrb jg divl dec stc call mov pop imul mov int mov xor je jp sbb pcmpgtb dec repz jbe ret out stos mov mov adc imul mov repnz xor cmp cmp mov int3 cld mov mov and inc xor sub pop out icebp jmp cli (bad) xchg ficom pop scas pop loope mov mov dec sub push icebp addr16 pop adc lret mov test jmp dec xchg inc into mov (bad) int3 push mov cmpsl (bad) cmp lret divb jae pusha loopne std scas ljmp bound or push pop arpl rcrb jle mov sub push test and mov test inc cli or call outsl cmp pop inc jno mov sub push movsl cmp mov ja in xchg or add movsb rcr add into cwtl dec int3 out xchg loope in insb inc push fisubl loopne repz mov lods dec in test jp into out cli pushf sbb cltd dec add xchg sti sub jb adc icebp outsb stos inc out pop mov pop inc cmpsl (bad) jmp nop add movd scas inc mov jp (bad) push sbb dec mov (bad) push and push mov fnstsw mov jge call dec les dec xchg jge add (bad) addr16 leave jecxz and (bad) mov push cs arpl pusha mov mov lock xchg aaa lock pop jecxz orl sbb mov int stos insb sbb iret jmp out adc inc in dec stos jle cld inc adc adc sbb xor (bad) fistpll mov out add lds or add stos (bad) sub jno mov or mov in xchg pushf or and or lahf ljmp add les stos movsb sbb xor rolb pushf push adc loope scas (bad) cld iret std add push and xchg outsb imul and (bad) clc or inc sub jmp pop pop xlat push cltd loop cmp push mov push mov mov adc cmpsb jl mov jge sbb nop iret jp adc das cmp movsb je cmpsb insb cmpsb jg jle push icebp pop or loopne gs das sub (bad) pushf stos pop push dec out sub jne push data16 mov (bad) repz pop mov inc push mov dec or add test test sub cli nop leave pop xchg mov in xor lds cmp add sbb add jne inc stc repnz mov push in mov or lahf sub pop or inc ja pop push lahf pop push clc shrl addr16 (bad) stos and scas or fdivrl mov cs sbb aam fcomps pop jb lods push mov inc mov sbb xor and test fidivr lret sub add lcall and adc pop call lock es fist xor data16 xchg ljmp outsb push add repz or shrb in out popl fsts lcall and cmp or pop mov stos and jne imul xchg cmc or cli adc (bad) out stos rol fwait (bad) fildll inc xchg add test repnz adc mov pop scas call repz into test jne jnp pop mov cs xor mov mov pushf lds xchg outsl push fndisi(8087 jno cmpsb test mov shrb int3 iret imull fucompp popa xlat adc sub jmp test data16 sarb js mov cmp jae xor sbb (bad) cmp jne stc jne mov push sub loop scas into cwtl mov into pop leave mov sbb mov ret aam cmp mov dec movsb mov and push (bad) aad fcomi stos das scas mov enter rcll fisubrl xchg jnp mov cmp loop adc mov fistpl pop test cld push testb cmp or cli sarl fisubrl lods cmpl rorl (bad) cmp push adc jbe rcrl pop das lcall push int es xchg push fsubs cmp mov leave fimull fiaddl mov dec push add mov fs inc aaa xlat jne or mov loop sub push fcomps in jle jle and lret cmpsl sbbl xor daa mov in and sbb sub mov scas (bad) ret enter lcall jl int3 scas inc cwtl int3 push cmp decl data16 in test mov js pushf cwtl xchg inc scas pop aas (bad) scas leave push or (bad) cli sub lret sub (bad) sub add dec xchg ret mov pop mov test jl mov adc xchg adc out pop xchg lea sub inc push sub or mov (bad) cmpsb pop fsubrl insb jae pop pop push xchg dec sbb shrb cmp jnp add mov xchg iret ficom fldl jecxz dec pop ret ljmp rorl ljmp aaa aad ficoml and dec test les jg test xor (bad) stos and push popa cmp add add pop mov push (bad) pop decb inc lods aaa inc mov fildll pop push mov arpl iret insb fildll cs sub hlt inc mov js lret pushf jae iret fsubl or lcall xor add add mov movsb lahf dec imul mov inc pushf mov add and jecxz ljmp das fisttp movsl add add or xchg fist and (bad) test jmp push mov and js,pn fsubrs dec popa xor scas cwtl sub in jge lods lcall push (bad) fadd adc loop sbb jno flds xor dec mov lahf ds inc ret or shr popf dec sbb sub sub insb mov xor fiaddl test pushf cmp mov xor test add xchg dec out out mov aam or dec pushf and xchg cmp sub aas push sub add jecxz mov icebp sub roll fsubr fmull cli pushf adc pop je (bad) mov add mov push xchg ja cs sub xchg add dec testb and xchg decb jbe adc push pop cmpsl xchg xchg stos fs shl add add stc jmp movsb insl je fldenv inc mov (bad) sub xchg outsb inc jl and mov push xor mov sbb scas popf out lahf rclb fs (bad) xor xor outsl frstor inc in js es mov repz jl add subl or call int lret addr16 ja bound sub push mov pop or stos jl mov xchg and aaa lcall dec (bad) scas (bad) repnz pop dec inc ja push adc mov lea rcrl loope sbbl clc xchg inc (bad) jl mov mov fwait dec jmp push leave or outsb aas xor rcl xor and jne pushl sti popf sbb xor arpl jae pop mov (bad) pop stc stc test loope xchg push jl test cmpxchg icebp int3 daa pop or add shl (bad) rorb cmp pop repz jae std fs ret aam push lcall loope divl outsl jmp fstps mov js pop (bad) adc push idivl add push fldenv cli cwtl fildll and mov ja fnstsw cmp adc fbld or icebp xchg scas negb rolb dec jo or rorb mov mov arpl dec sub out mov push xor (bad) cmp lods clc imull mov mov and mov jge xchg sahf mov gs jno les xchg cs push dec ret push pop mov (bad) mull cwtl mov test addl aad cli daa test not mov pop in insl aam jb mov ljmp pushf push and lods cs sbb fild insl dec dec fs lahf icebp je inc aam popa pop outsb es fs dec inc hlt loope int rcll fbstp and inc sbb mov imul (bad) or xchg pushf push inc divl ud2 (bad) outsl stos jns mov fiadd jo cltd jbe and ffreep dec (bad) push inc sbb jge adc pushf insl fcompl xchg fisubr xchg cmp (bad) adc je fnstenv mov xchg inc (bad) jno and xor rcll outsl sub xor xor sub xor (bad) mov jbe mov cs shl mov adc call ret jecxz test test lret push or or sbbl pushf dec call cmp mov and outsb or lods mov (bad) bnd mov dec fiaddl js and xchg push fisttpll add sub (bad) jns dec mov cli fisttp stc cmpl test or xor inc lea out mov mov jmp cmpsb sahf loop mov ljmp hlt (bad) imul xchg pusha push loopne rolb (bad) decl dec leave jo mov leave sub dec aad cmc inc icebp or (bad) and divb jbe imul and in sub pop dec jns movsb nop sub scas ja imul inc push pushf fistp inc jmp gs gs add xor inc fst fcmove pop ss jge fnstcw rorl dec add sub bound wbinvd jl inc adc out aad jmp jg bound pop cld push mov stos dec sahf mov push jbe scas mov mov xor push pop ja scas scas or aam ss les enter bndldx inc mov sbb xchg sar popf mov or js xchg ds adc ret (bad) cmp jne sub sub fsubl xor loopne adcw (bad) aas outsb mov inc mov adc popf in dec mov xchg mulb jmp das xor bound and enter or dec and mov orl fwait mov cmc mov mov maxps pop out and cmp jg stc fild dec xchg sub push test in movsb add into fprem1 push je pop jno sbb sbb int cld fisub xlat jo mov cli dec popa loope mov mov and sahf repz mov inc mov out pop xor shll clc push mov dec sahf jg jmp enter pop and push xor cmp push repnz pop mov mov lcall xor rorl in jl jno push sub (bad) cmc roll (bad) out adc daa aas or outsl jnp movsl pop adc xchg dec data16 dec xchg jns jae push cld pop add xchg add mov roll inc cli and add shr loop sbb imul inc xchg inc jle inc jl fcmovbe popf cltd ret outsb (bad) mov andb lahf lcall dec fdivrl pop jbe popf into push iret rorl push arpl mov push (bad) ret fs push xorl jo (bad) sub adc bound test dec les cmp aad fcoml add pop inc into pushf aas test fmul in xchg pop push aam and aam bnd pop mov or dec mov lcall ljmp in test sub call dec add insl push sub pushf or xor cli lods adc mov in add sub in or sbb aaa (bad) jg cwtl iret jmp inc xchg (bad) xchg orl (bad) inc es mov lret inc fsts popf shrl in ljmp xchg mov xlat push fistp jo cwtl sub or mov mov faddl inc sbb inc lods das push test es aad xchg mov dec repz insb fsts cwtl xchg push lock add push lret xor push sbb pop sbb (bad) jmp dec rorb mov push and sbb in xchg js sub add ja (bad) cmp sbb pop imul jb add ja and movsb and test rol add fmulp ret in pushf jmp out pop jne cmp jns out jne gs mov in fsub xchg repz jp push sar and adc adc lds fildl icebp daa stos pop push int push sahf adc loopne sub and add popa sbb negl aaa push xchg cmc (bad) adc es fldt xchg fimull orl loop ja rsqrtps mov ret lret sbb jne sub notl mov pop outsl fmul sahf mov mov jb mov scas roll mov pop nop daa sbb mov (bad) xchg ljmp call inc or pop jge mov sbb repz inc push aaa ficom sbb stos lods jmp and stc mov xor mov inc dec iret sahf sub insb int movsb sub xor ret sbb icebp rcr push mov mov mov (bad) xacquire testb cwtl and jae jo es arpl pop and pop idivb loope movzwl loop inc pop popa fnstenv xchg mov cmpsb mov fs imul (bad) ja or jge icebp fistpl into xchg jg pop push repz (bad) dec call insb enter or push push in mov fldl push (bad) mov imul push xor pop (bad) shr mov mov aaa iret mov call int fiadd adc push subl rorb mov jnp cltd xchg movsb inc icebp push cmp mov pushf inc es (bad) sub loope dec fdivrl sub sar and sbb dec orl adc xchg sbb pop ret ljmp mov dec pop nop or inc inc hlt jge or mov cmpsl daa sbb bound mov mov xor jno xlat jmp sbb mov cmpsl cwtl inc xchg mov pushf adc sub addr16 repz lods repnz inc scas lahf jb (bad) push nop enter mov sub push into aad clc mov test sbb inc int3 or in fnsave xor jne cs scas add lret repnz push mov push ds std imul cmp pop push fucom cmc scas dec (bad) popf (bad) mov jg lock mov mov and and sub cmp fcmovnu lret sti int3 sahf clc xchg xor fadds outsb mov cmp sub aam and and lods inc push mov cmp in and xchg ror out jg mov loopne jmp movsl inc ret jns pop sub sub out jbe mov imul decb sti mov add xchg mov mov jecxz adc xchg mov cmp int3 out jo imul fimull orl pop aad shll dec sub pop ljmp test icebp push add aaa xchg out mov xchg loopne jge jne or sub xchg ss adc std mov mov rcrb jg sbb daa shl mov pop (bad) xchg or (bad) dec jmp ja je pop int clc and in push call inc popa sub jb iret mov mov inc sbb jns jmp loope out dec jns out push lods lods bnd jnp fldcw xchg or out sti fucomp lods mov xor push sub sub and dec fwait in inc mov test fdivrl sub andb loope out nop and dec inc dec pop loopne in or iret js adc mov cmp cmpsl adc popf cmp (bad) popf cs cmp add or jns mov (bad) dec xchg dec pop jg mov or mov xchg push (bad) mov mov lock fstps lods test fldl dec cli or jbe sbb dec test popa out inc aaa ja and in dec aaa mov or mov stos or pop (bad) cmp stos push (bad) out xchg fmuls xor ret jecxz sbb rorb or lds cli mov jecxz outsl lret daa dec or xor aas pop mov out adc leave pop aad add cmp imul cld jae add pop fst xor push jo sub in xchg iret outsb inc xlat mov jo lds or adc xchg gs adc mov adc lret (bad) sbb jne mov mov loope xchg pop push mov inc sub or sbb iret add mov mov cmpsl imul fnsave mov lret or addl xchg dec push xchg pop pop mov ja mov add (bad) repnz xor xor (bad) and push inc sahf sub in push (bad) push push daa ja mov mov pushf (bad) cmp xchg cmpsb adc xchg scas movsb das or leave pushf int adc mov jbe incb scas xor aaa pop cmp addr16 das sbb lret sbb or and iret jae mov jmp mov adc mov cmc inc push push or push xlat shlb mov test hlt cmp sbb push lahf inc (bad) xchg lret sbb hlt (bad) out dec add push and mov mov rorl inc ffree std rclb adc das mov imul jp inc call cmp mov and les lret loopne jne stos mov into les sub mov or inc (bad) cwtl mov repnz out mov pop jle xchg pushf ljmp arpl scas mov hlt shl stc imul scas in stc sbb mov add fildl jge mov aad sti cmpsl mov mov js and and mov adc fadd or xorl je aaa lods rclb inc xchg sarl sub sbb (bad) (bad) xchg cld inc cmp icebp dec enter inc push stc stos les inc pop ret sub dec leave daa jno jns inc movsb sub ds mov imul dec out push insb inc std outsb jno int3 and sub jae add mov cmpb pop inc push and and dec inc inc push (bad) or pop mov int or and arpl xchg arpl dec push push sub lock ret push mov mov ljmp and faddl mov jnp adc jle and bound sbb cmp adc sahf aam sbb xor mov in fwait ja dec movsb jbe cmp xchg cmp fcos imul add fstl daa inc jne pmuludq xor adc jp iret cmp cmp jns mov and lock push push popa repz mov cmpsb in cmpsb jl and jnp add nop daa pushf rcrb into cmpsl lahf cmp leave lret mov or mov in je mov (bad) std sbb xor xor outsb and inc dec cmp mov sti lds jo shll and pusha push adc (bad) int3 lods mov sub out fs fs or lcall leave (bad) or mov rcl out cmp sbb jp cmp mov iret shlb (bad) dec notl sub sub aam add inc ljmp mov fbld fstpl icebp jecxz add add or push push test in and outsl lcall int jecxz repnz sbb xchg ret fidiv in (bad) aam pop xchg outsb push pop mov decl push js jno imul sbb mov mov push pop inc jecxz repnz (bad) sarb sub mov bound mov pop mov int pop imul mov leave fmuls pop dec es (bad) mov sbb mov das in or aad (bad) mov sbb and bound sub xchg into mov lret sub stc in xchg pop adc sarb cmp addl leave sub divps movsl pushf jbe add xchg pushl ja sar imul mov out jg ficom jb jno imul push sub das push inc mov sti or inc scas adc mov xor out stos fst add jmp imul out loopne ja jne mov imul cli push jp xor sub push ss repnz test sub aad pop push push push xchg call in (bad) mov test fs pop xchg cli cwtl xchg mov jecxz xor mov pop fs cmpl adc fidivl cld sarl pushf cmp aad dec jecxz ja scas mov cmpsb imul outsb fimull fimull ficomp jp (bad) adc addr16 xchg push push cmpb das jecxz sti fdivrl sbb jle gs jo out dec pop push loop pop mov adc gs bound addr16 cmpsl lods mov pop mov lock (bad) mov mov sbb push mov dec repz inc shlb pop sub jmp add pop mov (bad) cmp mov loopne test (bad) fs mov pop push lea call call outsb jbe loope cmpsl fstpl mov and lcall xorb lret scas adc (bad) fwait mov cmpl xchg dec mov jecxz int3 inc pop jo (bad) aad or andl dec inc iret pop cmp fisttpl jmp dec mov test pop xlat jnp mov xchg (bad) repz push fwait nop cmp (bad) mov ljmp (bad) jmp aas int xchg mov nop/reserved cmp cmpsb das mov scas cltd xchg push xchg pop pop (bad) xor xchg adc and adc pop int3 dec mov sbb jmp scas pop (bad) lret pop std pop jno testl jnp enter ljmp pop popf mov (bad) bswap fs hlt in mov push mov adc jle je pusha imul cmc mov inc push push fsub je into test out and add or in or mov aam cmp jae cmc mov push (bad) mov push hlt cld mov and pop and aas (bad) (bad) xchg (bad) andl sub dec (bad) adc lret cmp xchg int3 xchg ja in pop pop (bad) movsl dec repnz mull push xchg out fcomps ret pusha fwait push movsl test cmc sbb cli test cmp push inc cwtl mov and jmp fildl call sbb jb pop and xchg rclb arpl sub ljmp es pop popf data16 imul loop xor jns push std bound push loopne lcall je sub mov into mov mov jno (bad) sub cmp mov dec in pop dec int3 xchg in jl ds xor mov aaa stc sub and sub xor sub adc aad push pop ss int jg cs (bad) popf cmpsb cwtl push xor popf mov fcomps loop loope ja mov jp sub pop dec stos (bad) push push ret rorl inc stc je out outsb sbb aam adc push pop imul in (bad) mov repz sub sub mov int or divb dec out out arpl (bad) pop jno imul cltd sti push or mov test test sub fisttpll mov sahf std popf pop jl dec mov mov and insb sub xchg test mov or adc mov mov pop dec rcrb pop gs mov xor mov icebp and movsb fcomip das mov test daa push jb mov inc (bad) mov push enter aam cs in mov xor dec lods out sti inc or pop mov popa cli or pop sbb mov pop jle inc xchg mov ds in mov nop pop aad in push push jo jno scas out in pop fnstcw sbb sahf lahf pop mov dec push jae popf fnstcw ucomiss (bad) ljmp jle dec out pusha iret cltd jg repnz fbld cmpsl js (bad) out (bad) ljmp add sub lods outsl add inc outsl jno ds push test sub sti sbb inc aaa stos add mov or icebp cmove aaa and sub sbb inc bound inc mov inc cmp jg mov shrl fidivrl lea pop or xor pop ljmp sti mov popf rolb sbb sti fwait outsl ret clc lcall add inc xchg or fdivr stc inc mov lret sbb lds adc jns fucomi shll aad fistpl idivb pop fwait xchg in add inc and mov push cmc dec cmp flds xor jmp sbb push xorb dec inc sub sbb aaa ljmp jnp push add int3 dec add loope divb stos mov xor sarl pop fisubl xchg cli inc fmuls jg rcl scas inc imul outsb iret fisttpll loope adc cmp push jl (bad) xlat loopne iret inc insl pop icebp ret faddp cmp mov dec lcall cmp sbb imulb (bad) repz ja mov jmp or cli fcomip (bad) push into fldcw or add es mov aas xor inc push jo fidivl sti decb enter fs (bad) pop dec push jmp and imul pop in pop add and add dec int insb push sub xchg (bad) push out push stc (bad) (bad) mov test xchg into das and lret mov (bad) mov pusha insb iret and xchg rcl mov (bad) pop (bad) movsl ds pop lcall mov imul scas rep aas sbb enter je push mov outsl sahf scas ret out or adc push mov mov shrb (bad) mov mov sti dec call jmp inc out xor or shrl jbe inc inc movsb pop cs pop pop add aam cmp add mov mov and inc cmpsl fsubs ror cmpsl lret jo sarl adc pusha stc test and test dec or enter cld clc jo sahf ror scas dec sub push push and lahf (bad) inc mov inc or push lret jecxz stc (bad) xor outsb push int or ja mov pop ret shll push push add mov divb push jae (bad) xor fs dec inc jle sub fmull mov fisubr out and xchg gs mov ds (bad) stos jbe xchg jg or cmpsb pusha or es mov or pop insb xor adc sub inc push push les and xchg shrb int call aam mov xor aaa gs js das fdivs push loope in (bad) jecxz ds jl mov mov gs out and rclb add jle pop xor pusha icebp mov and scas cmp (bad) gs imul xor (bad) and adc outsb mov adc fnstcw loope aas clc lea dec cmp xchg pop mov mov fnstsw adc xor push xchg jbe mov xlat xor out sbb cmp push shr sti push andb push loope outsb xor sbb jg cwtl push mov pop movsl push or add loopne (bad) xor add dec fimul mov jae dec loop mov test mov cmp repnz add mov cltd aam push fcompl pop jae cmp mov mov (bad) push inc divl adc pop outsl jbe lea pop and jge iret js pop push dec inc pop adc (bad) call leave aad jmp pop mov js sahf das idiv cmp dec nop fidivr dec (bad) iret pushf inc sub lock jb clc (bad) in sti test push das jne inc push (bad) xchg lods push cmp pop mov ljmp xlat cs mov ret xchg mov into stos ret xchg nop push mov cmc mov xchg (bad) hlt mov xor cmpsl fidivr ja (bad) and xchg jb loope and pop and (bad) paddsw jb int sub rcll mov scas push (bad) lret add push push or cmp std js dec push lods aaa loope arpl lea mov daa pop nop divb repz xchg jecxz pop pop inc add jle out rolb or gs jmp add inc add mov addr16 lods push or icebp cmpsb test inc outsl or sbb sub push lods jnp test outsb or out mov orl pop negl xor insb push int cwtl mov cmp sub (bad) add adc fstpl fcmovbe dec push test add fwait jp cmp les and inc nop sbb es jns repz cmpsb loop ljmp cs loop in sti jb mov xchg ljmp in dec inc hlt jl pusha lret jl outsb or or mov xchg cmc lds mov jl out mov push (bad) mov cwtl mov mov push sbb jb push xchg rep imul out mov and clc cmp pop mov xchg push loopne lea cmp mov adc into fnstsw mov mov cmc in loopne xchg xchg adc xlat mov xlat (bad) mov jecxz insl arpl pusha sbb (bad) pop (bad) cmp lret xchg jl movsb int3 testl sub xor dec lods sbb inc mov lcall dec ss and jl mov fcomi jmp push sub pop mov dec inc (bad) in lods xchg jnp mov cmp cmp inc push ret ret inc mov ret leave add stos xchg ljmp mov int mov mov leave dec fs jge out fs mov inc (bad) fadds ja xchg nop cmp into (bad) dec dec push into pusha jb push dec xchg nop sbb push dec out pop ljmp in leave test pop or xor lahf mov xchg mov or scas pop pop xchg mov push ret jp cmc sub mov jnp mov mov movsb adc xchg xor sub frstor clc pop popa int repz sbb (bad) pop sbb popa repnz imul mov mov movsl push lahf push sbbb scas pop mov push pop outsl sbb rcll add mov inc ss in push sti sub repnz dec mov call jne fsubr pop nop jae leave fdivrs mov ljmp jno jmp pop loop mov outsb (bad) or mov cld (bad) mov pushf hlt das mov in stos dec mov mov mov push sub aas (bad) add dec dec mov and lea xchg imul adc ret sbb jno add sbb push mov cmp jmp inc cmp xor (bad) push adc (bad) das xor int3 jmp push cmp sbb adc fwait scas lds and pop sub shr mov mov ljmp rcl mov dec or cmp arpl idivb popa lds inc xchg xchg scas mov imulb adc mov push les jbe jmp into pop mov cltd xor inc xor jnp cmp jns pop popf dec sub mov inc call cmc pop sub aas xchg js imul dec movl popl sbb mov shr sub lods fisttp mov insl sbb int sub mov adc sub xchg popa pop (bad) and xchg add adc xor ss lahf jae adc sub jbe hlt push mov dec adc stc or push sbb lcall cli cmp sub cmpsl add sbb aas dec pop cs test subb cld (bad) jmp mov fs or (bad) xor xor cmpsl scas fdivrl sahf sub sub and push jmp loope jbe pop es adc shrb aad fidiv leave daa mov pushl inc adc xchg nop in movsb inc int3 data16 mov push push mov inc test mov inc add lds out pop ds movsl adc std enter sub pop xor test fistpll out cmpsl out stos cli pop dec lret push mov mov push push lock add out sub out sub fildll adc int3 add jle mov cmp (bad) or push xor imul mov fadd pushf adcl mull mov add lock sub and rcl or xor sti pusha jmp lcall mov das iret scas adc dec jp out lock mov cs adc pop lret fsubl vcvtsi2sdl mov jmp shrl sub jb cltd aas jb pop jb cmp out test jg dec sbb call mov sub push jg or aas or cld addr16 push jne mov dec cld xchg jae pop mov inc out rorl lea (bad) (bad) pusha sbb sbb movsl mov movsl mov pop xchg ljmp out adc ret (bad) pop (bad) jge icebp or push dec scas dec outsl adc push xor mov pop add pop push loope int and mov in sub fild lret or lods cmc js ret in inc (bad) ja jb ja jb push imul js into mov push push out and or mov jns loop nop clc (bad) sbb push lea arpl fistp adc sub add lods xor mov lahf jmp mov and out mov jb or lahf or pop xchg jae push add jecxz adc scas imul xlat or or stos jns mov popa sahf loope aad add mov dec movsl sti lds das adc pop mov sbb mov icebp test dec cmp inc xchg outsb jne movsb icebp xor ret xor cwtl faddl adc fnstcw notb pop sarb mov mov pop jbe scas loope dec fwait (bad) cmpsb stos leave cwtl or js (bad) icebp lods fbld loopne push enter push imul (bad) adc pop and mov add jae cmpsb fwait jmp shrl jnp mov push clc pop sarl jle mov int3 push shr test sbb mov loopne scas cmp mov outsl icebp popa sub pop mov lahf mov sbb add js pushf sub shlb xchg mov push cmp in mov arpl mov loopne cs dec lahf in mov sbb (bad) fucom ret cli popa push and test pusha test xor int3 aad dec cmp dec xlat mov pop aad adc movsl test sub jmp cli rcll or test cmp sahf push pop jne push mov stos inc cmc clc jb inc (bad) lds (bad) scas cmp (bad) mov imul mov movsl jle in gs sbb fmul aad lods mov cs (bad) loopne and jnp push scas ret lret pusha push cmp loop mov cld adc fnsave pushf inc mov rolb andl add data16 es nop stos adc mov sub sarl sti xchg lahf mov jns mov fbstp dec pusha cmpsl cmp aas xchg data16 fstpl pop adc ret and add aad mov adc and xor xchg mov ja add jne loopne loop inc mov lahf int3 and sub scas add or dec out mov xor stos iret movsl sahf in (bad) loopne (bad) fsubs dec mov lock xchg loop inc dec dec cmpsb or sbb pop cmc cli cltd xchg sbb pop lock rorb and rcl loop inc mov das scas cmpl mov jmp mov adc jle jmp in and jae inc icebp (bad) push cmp arpl xchg cltd push cwtl add aaa add sbb loope add xchg pop stc xchg leave lea pop into xlat cmp mov add cltd push sbb and sub mov mov into adc pop iret lods cmp subb pop (bad) sbb sub stos inc jb cmp mov mov decl sub dec xor das and testb add insb insl data16 pusha xchg cmp push dec sti pop outsl testb daa push sub mov push jne jle lcall fisubr xor cmp out sbb jp xor pop cmp and in dec test mov inc add fnstcw xchg jg fsubrl test dec push or or pop mov fisubr movsb xchg icebp dec pop (bad) out cmpsb dec add jae shr push jo outsl vmovlps test mov jbe popf ror push (bad) mov roll mov sti data16 push mov xor inc push adc fisttp xor popf call sub dec in cmc pop pop or pop xor mov mov pop int3 lahf dec imul cmpsl sti imul loop (bad) xchg jns mov call mov and stos cmpsl mov inc fiaddl adc sub test pusha stc adc xor (bad) mov iret mov and daa fs mov shrb es add mov pop sbb xor aaa cmpsb stos test out aad repz cli sub js out jmp sarl sub pop les dec mov cmpl mov je xlat lock shl xchg push adc mov pop push xchg es push and add add aad (bad) out push lea push data16 push xlat xchg mov sahf repnz jnp fldenv and int3 pop jb popa mov sarb push jmp xorl xchg mov (bad) xor fsts mov (bad) aaa incb sub pop xchg inc leave inc test jo push pop repz pop and idivb pop mov xor and loop mov pop sbb mov test add insb or pop mov mov push mov sbb adc lret jnp outsl mov test jmp or or clc inc xor pop std push sbbl callw push adc xchg ret jp and sub add xor sub sub mov and or data16 aas sbb cmp aad xchg jl inc addr16 sbb jnp push add adc cmpsb jns pop insl jo xchg pop mov repz into jo jmp adc xchg rclb in fisttpl add sbb gs shl (bad) pop push fstp jl (bad) push lcall jge in and cmp pop xor arpl mov gs dec out fnstcw fdivrl fwait ret lret pop or pop mov les daa sub fstl sbb (bad) xchg xchg daa lea shl sete mov pop lock push mov icebp das and dec popa out fsubrs sub jecxz into sub and aam mov push and inc fidiv push push xchg dec dec push and cmp fisubrl movl dec push mov push xor insl jno,pt xorl jle pop fucomi or daa data16 xor pop push pusha stc (bad) push lret rcl ret fwait mov or push leave xchg mov jns mov mov jns jg sbb dec xchg ret ret out xchg pusha testl push mov nop imul add xlat xchg lock rcr or pmaxsw enter int push enter and icebp push push insl ret sarb movsb mov push sbb jnp adc xchg push aam xchg dec outsl out jo pop add jne sub or pushf or lahf daa pop xlat fnstenv scas cmp dec or and (bad) xchg cli les pushf sbb pusha (bad) mov ds outsb push jl dec cli adc pop std cwtl push xlat gs cmpsb push jbe inc ljmp sub sub imul pop xchg mov not shrl stc (bad) sub xchg lock movsb stos xor pop (bad) cmp mov test (bad) cwtl inc lcall in or ret decb xchg fs call insb jnp imul (bad) js lcall mov loop and xor mov jo xchg jp dec sti aas test dec and mov and xor outsl das enter popf xchg sub jmp push inc mov push sub mov js mov ffreep pop (bad) test in call pop fsubrs sbb pop enter cld aaa notb aas and push pusha jle lret mov xchg inc pop jnp push adc or mov (bad) iret lods xchg pop xchg or into cmc (bad) icebp aaa jecxz push push lock pop xor movsb sub adc add cld out mov gs mov mov and pop adc int xor xchg mov adc (bad) loop lock movsb je dec aad loope test insl xlat pop ja out (bad) leave mov scas adc dec adc add (bad) dec fs xor adc mov sbb pop rcrl dec addr16 xchg sbb divl fidivrl push popf dec push dec mov repz xor mov or dec adc sbbb lea or popa clc rcll scas adc lods xor rcrb xor outsb adc je or shrl jbe mov dec test pop adc and mov fistp jecxz stc sub add (bad) mov sbb push nop mov pop cs clc mov lds (bad) adc push mov insl je pop inc insl call (bad) fadd jmp or or scas daa lds orb cld or pop add cmp mov mov fstpt jge int3 ss loope test add popa xor sahf sbb pop test repnz add std std mov adc mov and add frstor jmp lea fistl cmc cmp in push movsb loopne and fs ret and mov (bad) std adc (bad) push dec sbb or inc aaa icebp xor push sbb or sbb in sbb popa stos pusha cwtl test cmp inc aad out push mov js hlt (bad) aad rcll inc sahf jbe fimull lods lahf dec pop popf in add push jbe xchg mov dec arpl fistpl push or negb mov nop lods ja data16 test notb cmpb cmp (bad) lods ja cmp cmp mov sub jb mov setno fistpl dec xchg clc ds bound add iret insl sub outsb push pop mov dec pop adc (bad) cmc mov inc xchg jp mov pusha (bad) addr16 pop adc jge in and ret dec adc dec mov (bad) mov xchg (bad) shll into cmp std test les shrb lret mov xchg notl push dec mov scas sahf or rolb aad cmp sub lods lahf dec sub mulb subb shrl pop lret repnz push mov xorl xchg into lret test xchg lds test push movsb in aaa xor cmp push lret and jmp and jbe imul push call dec jns xor xor jnp rorb lds fnsave xchg aaa mov xchg mov in test mov jl enter sbb or pop jge add fstpl addr16 cmp add and mov mov pop fwait dec xchg pusha loop outsl adc and (bad) idiv lahf jns js out (bad) ljmp jp sub sbb popf gs cmc xorl enter dec insl xchg add sbb and mov pop pop aas cltd mov sahf mov mov mov (bad) repnz cmp push cld test cmpsb inc data16 push xor lret rorl push rcrl push icebp mov add out rol in add cmp ret (bad) ja ds adc dec xchg pusha das sub shrl or jae and sub add pop test imul push cld adc aas movsb addr16 sub mov pop fs nop fild push jne fcmovne (bad) fbld and aad xchg mov jle pop add mov add add fsubl sub ss push das cmpsb xchg outsl rcr pop (bad) jle or jp mov sub mov popa std imul mov popa mov cltd push div push mov outsb sub mov cltd pop pushf or mov sbb xlat repnz cwtl xchg xchg mov xchg ds leave mov add mov stos into test mov js push xor enter or cmp shll inc mov sbb hlt lods jl cld cli lret icebp cmp dec hlt popf mov mov (bad) sbb fsubs sbb mov add xlat or dec jge cmovge movd out push add icebp fnstenv adc push js xchg loopne jp and pop movsl push (bad) dec sbb sahf push in jmp jg sbb jg pusha out mov out in clc push pop jno btc rorb mov rcr sub inc jb push mov leave ljmp xchg roll or adc test iret jae cltd lods and pop (bad) out scas push inc jmp sbb scas js xchg (bad) das mov sbb aam div xchg stos dec lret popf ret (bad) inc cmp sahf mov mov lea xlat inc cmc xchg mov bound (bad) cli iret icebp mov adc pop jmp sub adc xor lea fidivr test inc lds jmp pop jecxz gs repnz stc mov lds dec cwtl lahf mov mov adc scas and push xor lret inc in cmp adc ficoml mov push mov inc ss pop test dec stos pop mov mov adc gs notl xchg mov push test pusha imul push pop iret std add jp loopne test mov rclb jne mov rcrl adc repnz sahf xchg sub mov cmp inc inc ficom (bad) repnz mov popa and add jp pop mov dec insl (bad) pusha lods jp loope and ret or jl (bad) jb and mov xor add iret push inc add jmp adc sarb fimull mov loope fstpl aaa shlb inc pop adcl mov pop and cmpb fild fsub aaa out ficomp mov cmp mov xchg xor jp push and or sub mov mov (bad) jne (bad) push (bad) divb fsubrs or fisttpl and sti xchg int sub inc push xor mov jae call test mov inc xor inc outsl sub jo ret mov add pop (bad) std pop mov les sub (bad) enter push jb mov movsl stc mov in fs pop sub outsl and inc or test push xor push das pop ficompl lock imul icebp imul rolb pop sar aaa ja push pushf cld mov xor pop in fcmovne (bad) lret repz xor push sub cmp cli push mov out rcrb adc inc xchg mov mov roll loopne popa int lods repz mov leave rolb cs lea pmulhuw repnz push loopne pop loopne (bad) inc pop mov nop dec out imul lahf leave (bad) mov mov cmp (bad) out leave mov movsl leave mov rcl sarl out (bad) aad dec mov (bad) push mov sub arpl mov bound addl mov pop jle popf cli cltd mov mov sbb xchg xchg mov outsl mov push xchg stos in into jne je and (bad) push inc bnd jae cmc aam xchg fs aad sar adc push mov adc aam add push dec xor mov jae jecxz cld repz je loop jecxz or movsb sbb mov cs mov xor pop xchg jmp xchg les push lahf jl mov mov mov std in imull cmp mov add xchg inc inc inc outsl fwait sbb sbb or jnp pop sub sti lock shrl inc xor inc mov movsl dec inc xorl sbb stos cmp rorb andb mov push push mov dec pop or adc adc fwait cs dec and fcompl mov test mov dec or adc lods push out xchg iret movsb push xchg inc and pop lret xchg into (bad) (bad) rcll int3 test pop cld fwait int3 daa (bad) mov (bad) pusha pop and or aad test xchg sbb stc xchg mov jnp (bad) inc pop leave in pop lret data16 test lret add xchg out in test aas xchg mov ret clc daa sbb es scas loopne jns ss inc daa push aaa add popa mov push test mov iret pop cmp xor xchg cmpsb xchg mov jne icebp dec push fnstcw (bad) xor negb xor sahf cs mov (bad) ror mov das mov add add ds call or cmp jae or and cltd dec arpl pop mov scas mov mov adc cld addl jle stos (bad) mov bound inc icebp out and xchg xchg ror cmc sti or ret fistp int (bad) pop sbb add ja fwait jecxz test dec pop jg arpl jnp cmpsb aad jns out add mov pop mov mov lods lret fidivr xchg mov daa sahf or and sub xor pop adc cwtl xor imul loopne jmp lock xor xchg dec jl outsl xchg sbb pusha mov hlt loope aam mov in loope push jbe sub iret mov scas stos mov int3 popa movl jns test fwait inc xchg inc xlat sti dec sub in scas inc mov pop mov push add bound sbb xchg ret dec popf mov hlt inc jg adc cmp cmpb or dec dec xor cwtl std (bad) pop jns fwait mov aaa dec nop sbb or inc stos mov sbb cmpsl push push inc aad pusha (bad) aaa test inc stos push mov and shl cmp loopne js xchg stos and pop xlat dec (bad) dec in bound jnp (bad) inc mov mov (bad) fstp inc mov dec movsb jns push imul jmp push aam and nop lcall lea sbb lods pusha mov fsubrs test rcrb cmpl daa popf push inc nop lret enter call out jp nop imul sub inc push arpl push out test inc inc fdivs mov out inc in stos adc in mov es leave sbb fldl xchg es jno (bad) (bad) jns lret jle nop movsb mov mov lahf mov mov mov xchg dec fistpll fdivs sti es (bad) or cmp add sub or loope and outsb mov sbb cmpsb stos inc pop mov rclb jns mov aaa out dec aam push stc dec push or rcrb scas push and int3 in push lret (bad) enter ret mov popa fwait mull inc outsl aas mov sub or cli xor inc sub sub cmc cmp sahf push dec mov lea scas jl dec add adc insb jae fdivs stos xchg xor dec jae (bad) ficom or sbb pushf insb adc std mov out push mov test xchg xor aaa scas ficompl fiaddl jecxz (bad) add sbb ret dec cmp inc into adc movsb lahf btr mov ret push in daa or in popa ss lahf pop sub mov and scas jb and pop insl pusha or jl push mov mov ljmp xlat emms xchg inc dec (bad) adc cmpsl lea and cmp cmp jmp or fildl jno cmpsb out add or ror aaa out add scas push jbe cmp or mov popa mov addr16 cmp or push lock mov lea and xor mov push mov xor sub push repz cmp pop add int3 movsl mov testl testb popa push hlt mov out lret sbb cmc add int xlat push adc (bad) (bad) xor jb inc jae jge int xchg adc outsl popf dec sub or aam shl mov daa push jne insb sbbb and cmp (bad) (bad) or sbb push dec imulb push sbb fidivr inc xor aas mov inc popa push pop imul and out mov lea cltd jne xorl inc inc in adc or std int3 out xor pop scas dec push xchg push enter aad cmp cli aam je call add xor pushf fsubs gs pop mov sub pop xlat aas xor repnz or jg fnsave sahf sub in push stc cmp outsb adc out aam jmp mov add test pop or rclb pop push or mov and mov or dec mov popa mov fimul scas jne or mov dec iret lcall (bad) movb loop imul jbe or out xor sub pop xlat int ljmp mov push push dec test or call add test xchg pop (bad) hlt mov and lret dec outsb inc mov not lds cwtl xor ret lock les add movsl mov stos fsubl pop adc jg imul jno stos aam test (bad) in ret push mov xor cs je pop ret and mov hlt pushl in inc loop jb,pt rclb jbe jno mov pop pop mov inc mov movb mov push sub lds imul rcl mov imul mov lret mov xchg mov aam mov fsubrl repnz cmp xor push insb inc lods jge lds fsubrl cld or mov gs push cmp fs xchg or stos jne (bad) pop mov iret jnp test les mov xor dec jb test jno scas jae mov data16 add and or nop and ja aam mov cmp jne shrb call add test out sbb shll mov jnp jl inc movsl rorl cmpsb sub sub aad jne cmp mov or sti rolb push stc out fwait lods icebp sub out inc lret insb popa hlt addr16 (bad) jne call lret xor les cmpsb pop and jae fisubl xlat xlat out sahf fnsave sahf and pop imul aas loopne sub cmp insl mov repnz mov cli push sub rcrb insl in mov pop loop popf mov pop and lea fisttpl lock outsb into cmp js imul in xchg push pusha sub addr16 rcr mov and mov xor (bad) jecxz repnz push fwait addr16 aas lret mov sahf cs mov mov jge movl notb fwait call (bad) cwtl call cltd das inc mov and int3 fidivl mov (bad) jg sbb movsl lds scas fsubrl sub leave mov (bad) inc adc stc add dec jnp fisttpl mov popf rclb or mov sub adc lret mov inc in cmp (bad) repz dec out pop mov dec sbb and pop lock push sub jecxz inc xor cli pop mov bound mov mov push shll jb into jle jae (bad) xchg add (bad) sub cmp je jmp or xor subl movsl mov push mov mov adc mov scas sbb test in pop cmc inc lods imul fsub cmp sub sbb or data16 push mov test (bad) scas jmp (bad) mov pop mov enter stos xchg add popf enter mov jno pop sbb aam push inc mov jb mov cmp mov dec outsb lcall and mov stc clc pop test rorb (bad) insl inc push movsl bnd cwtl aam mov movsb mov bound mov inc xor push bound movsl test xor push cmp sbb cmp mov cmp aam lcall ficom add dec sbbl call push add loopne jns (bad) outsb dec jbe push (bad) mov in xor or ja inc mov subl push ljmp test mov xchg xchg push mov test faddl fild js or and mov or arpl stos in mov sub or movsl pop mov inc add lods sbb and mov les (bad) aad aad fiadd xchg mov (bad) repz repz sub out lret icebp rorb sahf iret lds xchg mov sbb shrl popa inc (bad) rorl dec mov jns sbb mov jno sbb icebp inc cmpsb mov cmp insb pop into xor (bad) mov test dec loop or loop push fs sbb xor dec insl fist and inc jmp inc dec mov sub adc popa jmp inc or pop mov push sti imul loop sub sbb aas xchg imul pop mov dec xor push ds dec ss dec push xor or pop bound lea sub or aas sub add fs jmp jmp jp pop addr16 js sub test jge sub out mov xchg jb or inc sbb fnstenv lea in xchg iret cmp into sti add sti sahf nop lea inc pop jmp andb or jp add jnp pop xchg aas idiv pop movsb xchg les (bad) vmread ret mov adc mov jmp mov sub mov test call shll or notl or add js add mov or ret loope pop jae (bad) test xchg push into xchg jecxz pop dec push sahf push sbb mov push push mov push into adc xchg xchg xor xlat out out lods clc push (bad) cmc ficoml xchg test inc mov leave movsl out lea mov sbb mov mov out xchg jg xorl movsb stos aad pop andl aam pushf mov ljmp lea mov sub (bad) and jg xchg repnz add in rcrb enter inc cmp cmovns stos lods movsb push dec inc (bad) das dec xchg xorl inc jo xchg push fisttp pop test pop jle lods mov outsb pop mov cld test ficoml pop or call cld xor pop push mov xor cli inc in aad cmp andb ret inc shrb pop iret sbb fcmovb incl in or fimul sub jbe lret lret mov clc sub jae push in sbb pop or xchg cmpsb (bad) hlt lods lea mov std jno xchg sub sahf xor push jne hlt push push out sub into shlb movsb test aad jge mov cmp pop or mov loope cs mov ret shl sarl out je lcall mov insl fwait sbb xor dec mov jno dec xchg pop mov repnz in std ret jl xchg sub sahf out bound mov sub repz cmp lods jg (bad) fld cmpl or mov pop sbb pop aas std fdivp pop mov movsl jl popf lock cmpl pop data16 add pop frndint iret sbb std dec pop cmp adc call enter push lods pop ds lahf int3 lret adc into int3 mov aad mov ljmp jb ds inc lahf jmp xchg and leave mov dec addr16 insb je cmp cmpsl or scas sbbb out loope iret mov (bad) aas mov push lcall mov icebp cmc xchg xchg stos fwait push mov and lea mov dec bswap pop ficoml xchg and mov insl xor pusha movsb pop insl jg stc pop jno fs and test int3 and stos movl lods shll into inc cwtl xor dec fs fucomip ljmp faddl mov sbb in (bad) xor inc fisttp shrb sar mov (bad) xor cli popa (bad) flds add lcall xor dec pop push cmc movsb cs or mov xor repz push mov cmp mov mov out (bad) cmp xchg loop daa sbb mov mov jge lods (bad) xchg push cmp (bad) fistpll pop pop call mov js test adc popa jecxz fs lods enter stos add insl mull sub pop repz jno jne ja gs movsb ds push aas insb in xchg jl push and or xchg lods cmpsb imul jp dec xchg sub fdivs in add or inc scas or lds sti mov mov ja cwtl sbb enter or (bad) push scas shlb test fnstsw sub flds and mov adc mov dec mov mov mov cwtl sub in push inc aad movsb (bad) jbe push (bad) not xchg scas les mov xchg and push add xchg jb (bad) xchg andl mov and cmp pop lahf (bad) out aad clc and por pop pusha (bad) dec or pop jnp sub iret mov xchg inc dec sub (bad) lods clc xor cltd shrl adcl cld shll jns bnd add push mov jne inc jecxz (bad) divl rcrl xor add call dec sbb in dec ds test cmc or sub and daa add jg jnp sbb add pop push push lea lods inc add xchg iret mov xor out scas loopne jecxz das popa leave dec test aam inc repnz add jne es cmp jg (bad) and mov mov je icebp or fmulp lret pop cltd push pop adc mov adc fldenv cmpsl aaa add push mov push lock ljmp adc pop out pop clc in idiv ds test jge lcall sarb imul pop jg (bad) cmp ror add adc pop cmpsb cmp loopne mov dec pushf movsb mov or jne inc sub outsl mov movsb sub clc gs push push rcll push pop mov jecxz lock xor xchg sahf jae xor jne popf xchg mov pop mov or push mov arpl xchg icebp and mov and pop fstps jo fdivl (bad) rclb sub fiadd or sbb mov mov pop mov mov pusha sbb mov push mov int3 aad int jbe add es ret jl inc je mov push addr16 imul xor mov sub sbb push pop jle fidivr cmp cmp mov repz adc dec mov and lea push ret or pop imul lahf lods jle lahf xchg inc push dec add pop and push push stos pop jnp aad shlb call and decl mov cmp pop in addb clc jge inc subb inc shr mov lea orb push scas das dec test mov movsb or dec xbegin fnstcw jl imulb mov jle call mov xchg pop (bad) adc in enter aaa fmuls in adc mov or push outsb xor mov aas cmp cmpsl push repz int3 sbb ljmp mov lcall and mov lret mov les stc test cltd cmp ss cmc pop dec call mov sub cli xchg xchg lcall jo push add jp ss and xchg addr16 cltd ss ficoml or add xchg mov xor mov lret inc sahf fdiv pop jge mov mov pop pop outsb sub mov bound inc pop lahf (bad) mov sbb arpl in pusha push pusha jbe nop jge mov mov sbb rorl pop pop pop imul push sbb and lret imul mov cltd (bad) mov lea mov pusha in mov pop inc int3 hlt pop fisttpll lcall out mov sub and adc loope inc and bound jp int3 (bad) sbb push call call and (bad) add cmpsl pop outsb popa and xchg xor lea subl aad cmp iret scas test or rcpps jno fsubl dec mov jo arpl movsl mov or jbe jmp mov dec or jnp daa ds cmc inc imulb jns icebp out and sbb loope leave es imul mov jae pop sti movsl js jno aam loope sbb repz loopw es add lods inc insl repnz int3 cmp mov imul in fsubrs notl out mov (bad) popa imul or aad fcoml mov pushf cmpsl mov pop pop stc pop mov pop inc mov aad sbbl aad imul sub addr16 sub jp sub jle mov ljmp mov pop xchg movsl out mov dec adc cmp sbb mov mov jg (bad) sbb pop jne mov test aam inc xor sbb (bad) sub lds sbbb jle cmpsb xorl cwtl lock push adc cmc cmp cmp xorl iret es les dec and xor jle test xchg sbb pushf repz scas mov push fdivs cmp xor inc icebp push mov movsl out pop push or hlt push sbb add or loope add int xchg lock loope je insb mov cld mov mov xchg or inc pcmpeqd cmpsl xor pop jns insb dec out mov inc clc enter movsb pop stos cli and fnstcw cmp sub mov loop dec stos xor js fisub mov jno daa (bad) icebp outsb xchg inc fldenv mov push pusha in add fwait aas dec cmp jne jmp jns xorb inc fdivrs sbb movsb popf mov fwait nop inc jno and lea push pop insl sub push or in inc into idivb mov fucomi scas fidivl inc adc testb mov inc or inc shr add sub lcall rcrb in (bad) stos push cmc cmp pop xor adc out adc sub adcl jge mov outsb cltd std cmp mov test sub jg loop add mov mov jno inc pop cmpsl add pop sbb cmp xorl test adc gs push jne scas mov (bad) fimul push mov inc cmp insb lds dec dec jno fild hlt and cmpsb imul add add inc lods xor imul sbb xor cmp les pop jecxz ljmp dec cmp fmul enter push mov lret enter loopne movsb mov dec mov stc mov add ret repz and mov pop lods xchg jne jecxz scas push lret roll ljmp xchg nop add notl (bad) aad jae jmp jne aaa xor les enter (bad) fdiv fcom xchg mov fs sbb jmp push push pop das xchg inc jg push mov pushf mov mov clc (bad) out pushf xchg jno push popa push das cwtl jle jae push imul (bad) xlat inc mov lret sarb inc push (bad) and jle insb add movsl sub xchg jae popa pushf push and or mov imul mov mov pop enter test in xor push test sbb bound mov fistp jo ss fisttp cmc jecxz jecxz xor repz push xlat jge mov push mov push xchg in aaa cmc or sbb (bad) cs pop inc std pop fistp dec push bound cmp jb imul or lea ljmp sbb insb mov into xchg sub pop dec inc pop xor dec cwtl fisubr test cmp pop enter adc cwtl lods dec sub push adc es (bad) add insb testl jmp mov jns add gs or cmpsl ljmp mulb mov cmp das lock inc stos ss enter mov pushf xchg fstpl push mov cwtl aam popa mov jbe jae aas shlb out xchg add inc dec push call inc cmpsb push cwtl push dec xor add call int (bad) mov stos sbb mov (bad) into nop mov inc (bad) xchg cmpb pop or add rcll iret pop lock mov call fisttp lods ret cmp sbb ret cmp pop dec dec imul or loop jecxz in sti push bound add mov jmp xchg jp cltd ror sti ret mov adc fidivr sbb mov push mov aaa mov in icebp cmc mov jno add add mov pop and shrb xor jno les push cld fnstsw jp lock mov pop in or (bad) lock mov ljmp out in ja js in pushf mov sub mov jecxz cs ret int3 mov cmp jbe inc inc mov cltd repz (bad) ficomp test xchg in fs lret in js sbb xor sub das test mov outsb push rorb int3 (bad) movsl inc out int3 jle aad sub jg sbb push and or mov dec hlt pusha cwtd xlat in call hlt fidivr rolb adc imul aam xor hlt leave data16 mov jo jo test insl enter fldt ds addb mov cmc xor imul (bad) jbe mov cmp mov stos cmpsl push dec out mov div stos nopl mov test out outsb cli fcompl mov push cmpsl (bad) les mov inc cmp stos imul xchg push daa dec sub gs jae xor mov stos insb lds and pop sub and mov or pop jle mov mov testb xor sbb xor xchg mov and xor inc and adc xor mov add fwait test sub or scas ljmp (bad) jns mov loop push dec into and sbb fcomps dec add xchg cmp fmuls (bad) (bad) cwtl outsl cli xchg stc loop popf int3 es sbb (bad) mov (bad) leave jg fcomps or xchg push mov aad sub push push inc sti mov das sub mov scas sub fs sbb push enter push rcl mov or hlt mov xor sub in mov pop jo xchg jle pop and push roll sub mov adc (bad) xchg add mov dec add and adc (bad) mov dec jmp mov rcll jmp es mov mov icebp movsb fneni(8087 repz lret inc vpaddusw sbb addr16 (bad) xchg ret sbb xor dec dec sub ds mov mov rol lcall hlt int xor std push leave add lcall cld cmpb test test inc cltd jg fst or cmp mov jg mov fsubrs sub dec popa fs mov cltd std cltd jle test push lret dec out adc inc cwtl aaa outsl adc fs dec (bad) loopne jmp mov incl jmp and cmp mov sub or cmp fidivr insl and outsl stos push pop fistpl fisubl js popf cltd and arpl lock cwtl (bad) jo fsubs push sbb xor or dec cmp dec or movsb rorl sti push inc fcoml insl movsb mov xor cmc jne popf in cmp fisubrl xchg aam sbb rcrb (bad) rorl out xchg fs insl jns in xchg pop sahf pop test iret xchg mov outsb cld insb mov jb ds out int popf cmp mov js mov pop pushf std and sbb cmp xor dec (bad) jbe call repz xchg test mov xchg cmp adc mov stos jbe jnp mov mov mov out ficomp xchg scas test lock sahf push mov nop in aam enter pop xor data16 cmpsb cli cli push mov lods out test mov popf icebp mov mov jl sbb jae popf ja lcall lods and scas (bad) push cmp cld push inc pop (bad) rolb and frstor stos hlt fucomip ret notb (bad) fdivrs in lds push ja lods lods fsub cmpsl lock push sti out lods ret mov inc push ficom scas mov and dec and mov add mov mov out pop pusha es or inc fisttpl icebp (bad) mov cs push sbb or add mov stos mov cmpsb mov xchg push movsb add adc fucomi mov mov mov inc insb adc push loopne mov or cmp pop mov lods jbe movsl adc mov xchg jle mov sbb int3 adc in inc sub mov mov stos or or mov or add mov lods ret pop and bound push aas pop add mov mov xor and loop sub or (bad) sbb push fdivrl int3 xchg mov mov adc cmp adc cmpl cltd cltd sbb cli pop inc push mov int3 ds es mov xor pusha (bad) and xchg aas mov jle stos pop xor mov jmp jmp mov sub gs jge inc ja cld mov xor jp mov das ret xor push sti inc fisttpl fwait cmp imul ss cmp cmp cltd adc sub lcall adc sahf dec shrl fmuls pop sbb pop lods push inc and fwait (bad) pop outsl cmp movsb add adc mov insb int3 sbb xchg mov xor int3 push jb jb lods sub stos dec lea outsb mov jl scas mov pop cmp mov mov stos mov dec sbb mov xchg mov aad roll mov clc jmp inc cmc and jo cmp and dec add imul mov aas push mov inc cli inc outsb mov ficom cmpsb clc xchg push (bad) mov adc and jns cltd retw out or mov int repnz mov mov fsubr out sub or aam stos and fstps lcall mov sbb rolb cltd adc cltd push cli addr16 push fimull stos mov adc xchg inc push mov inc sub scas mov dec mov bound (bad) mov push shll das push aad xor or sub cltd stos fistp insl or fucom or aaa sti (bad) pop jmp pop xor xor insl mov mov and pop sub imul mov push adc jae test fistpll mov das mov enter fimull subps push or je,pn pop sbb adcl mov loop outsl sbb mov mov lods mov popf aas mov and push in lea imul sub out mov dec enter add xchg rolb mov inc (bad) nop aam ljmp xchg xchg data16 loop mov pushf pop and sub xchg insb iret inc gs and cwtl mov and in or iret rcr sub fiadd and mov je clc cmp imul lds push add mov outsb movsl sbb mov inc jns mov mov cmp ret shll movsl pop inc push lahf add mov out sbb mov push dec cld aam fcomps fcom and push test test in inc out sahf inc pop xchg jnp cltd aam lods inc dec mov sbb xchg jb das or pop sub aaa aam test xor push rorl les fucomp xor mov fadds dec mov fldenv nop imul cmp xlat mov cmp daa jl testl popa js pop jbe cmpsl jae and loope fisubr loop mov push les jmp inc in or (bad) sbb fisttp ljmp int3 or add cmc std add test aam sbb push mov pop push mov inc adc mov adc stos jb popf push pushf cmp shlb push orl cld add push mov pop (bad) fsubr enter std movsl xor iret adc pop jnp add jo xchg jmp push push into cmp push ret in and data16 jns jbe imul stos sti jge pop stos sbb jmp xor pop push lahf dec push jae adcl int3 repnz jmp mov outsb sub ds jb jb push xor xlat in and adc or sbb cltd sbb pop mov cmc xchg pop xchg sbb in jne popf fisubrl xchg mov in nop jl add pop xchg in fcoms (bad) and jo (bad) or xchg iret or sub adc cmp ss mov inc dec into frstor lcall push xchg cli pop push mov inc ror repnz dec addr16 push xchg cld sub andl out jns out addr16 in or mov jbe pushf out ss sub outsl adc mov stc mov jno nop rclb out mov sbb mov test xchg imul adc mov xor mulb mov bound (bad) cltd adc fstps pop sbb lret test shll int cs jg pushf (bad) pop jl sub sub pop mov loopne insb sahf add xor clc push mov das gs jns cmpsb in pop sbb or push pop xorl stc lret dec shrb ret sbb push cmpsb add in movd fsubrl scas dec xchg cli lds ja mov pop fst mov lds bound je leave mov scas mov rcll ffreep cmpsb addr16 sub ljmp push mov lock push push scas xor test sarl out or dec imul aam fs add addr16 adc jp je pop adc dec into js mov ja push enter pop lea js inc jmp lods stos xor jle lods (bad) jg pop push xor adcl sbb pop push xor xor orl push in pop rcl (bad) push inc mov aaa rcrl sti in aad sbb dec cltd pushf cmp add adc xchg jecxz loope (bad) in pop hlt jbe adc test jb xor mov or fwait outsl neg jb dec pop enter push ret int3 mov movb xor outsl movsb adc mov sub int cmp jg dec lret jge xlat mov inc cmp arpl push (bad) in into dec jp pop push movsb adc mov cmpsl and call xchg mov cmpsl sbb fidivrl insl add cld stos imul int3 out dec mov add mov test xor mov mov lret popf dec xor cmp inc xor insl test add sti and push dec in (bad) xor xlat jne push ret pop pop mov and mov xchg in push jmp lret stos mov in das push repnz or pop dec sub ss sub jp scas (bad) sub fidiv cmp sahf out sub jns call roll mov (bad) sbbl sub sub jbe inc dec (bad) fmull ret or xor dec (bad) jmp pop stos roll cmp pushf cmp in fmull xor stos punpckhbw (bad) push arpl fsubp pop out pushl mov mov or sub cmp ret jge (bad) mov iret std or sbb in iret xchg mov out lods mov mov mov mov pop push mov out lock fsts inc and mov lock aad lods nop push jl outsb sahf sub inc sete adc scas push fild adc adc dec dec mov push (bad) mov mov sbb inc push jb ret loopne mov sbb sub mov imul inc mov mov dec sbbl aaa xlat xor cmpsb push xchg fwait add jle scas cmc mov fwait push iret adc pusha xlat mov cltd in je mov scas cmp mov pop mov mov imul mov mov dec mov mov fwait cmc ds insl fcmovne incb or aad jns (bad) test and mov xchg inc and mov js sbb dec add xchg cmpsb pop lods rorb into push dec lahf fwait imul mov pop mov pop mov es out push dec data16 xlat xchg je push (bad) push jle sbb stos and mov cwtl cmp push inc sbbl mov cmp mov jp sbb aas add imul pop mov push out js jno (bad) dec clc arpl les outsb int3 rolb pop add data16 test movsb scas inc sbb ss jecxz push (bad) mov cmpsl and aam mov inc sub mov adcl lcall inc ficomp test jge mov outsl sub enter leave (bad) cmp fs je nop mov sbb jmp out sub leave xchg inc xor andl cltd imul inc in dec jo pop push cmp fistl pop lret mov mov mov scas std push (bad) jbe mov inc xor inc fisubrl lods test mov push mov jae or sbbl dec dec and xchg mov rorb lea aam insl xor xchg movsl push xchg idivb pop xchg xor xor fs and mov sbb das in xchg xchg js fsubl mov hlt ds mov pop or mov mov mov add pop repz cmc jp lds dec and sub les push dec cltd jp inc in xchg xor clc pop insb scas lods sub or mov cld adc pop ljmp push pop scas popl add test sti cmp xor or mov loope cmp inc (bad) ret fnstcw int3 dec mov (bad) or je sbb lods cmc lods or lds and je add xchg jo pop mov mov sub and cmpsl (bad) jno lock and pop lahf mov aaa cli adc mov jnp xlat stos xlat (bad) cmp mov inc cltd out add js rclb (bad) nop notl popf sub icebp shrb out jl (bad) (bad) loop push sti mov cmp lods in nop xchg out xchg pop bnd push push cmp mov push andb das in ja cmpl icebp movsb sbb aad sti repnz push je pop push out sti js out (bad) mov cld ficom inc mov mov inc iret and (bad) stc ss nop pop jne mov dec cmpl push sbbb popa decl mov repnz repnz mov (bad) xor aaa or outsb or push rcr mov push xchg clc inc roll fildl rcr mov adc cld push fidivl insl or in lcall pop xchg push dec dec dec lahf mov mov pop mov int jo gs sub mov and repnz and or stc ljmp jmp add mov faddl loop cltd sub xchg xlat push int dec popf jmp xor clc test sbb fistpl lret mov mov fadd cmp int3 lret rorb xchg mov mov fwait int3 test sub adc fsub lret pusha outsl mov daa mov cmpl pop push repz fucomp (bad) xlat lret mov cli lock mov jbe dec mov sahf dec add fs sbb xor jp sub scas xchg mov mov out dec inc xor shrl ficomp pop aad test hlt faddp xchg add xchg xchg jb xor jmp sti in mov push mov xchg push sbb mov aas shrb mov subl dec cltd mov ret sub out lods ja movsb or popa xor and arpl addb (bad) fdivl xchg out cvtpi2ps bound xor (bad) jb or mov aaa mov loope mov pop popa or mov imul es (bad) cmc cltd inc xchg mov rorl add dec imul push or mov and test mov stos mov mov xchg addb lret lcall sbb cmpsb clc int in out mov imul push add push lods xchg lock sub xchg in mov xor sub mov cmp enter mov sbb push pop movsl test cmp lret jl mov imul popf lret sarb push js ss movb aam aaa cmp cs popa push pop out jecxz outsl push not int3 repnz sub lea in jnp insl mov mov add popf gs inc rorl aaa movsl sbb int cmp mov xor stos jo fldcw pop or test (bad) das xchg mov repnz mov in adc sub jne scas sbb push mov mov sbb rolb leave mov pop jg (bad) pop negb pop dec repnz in cmpb xchg xchg jl and add popf and aam fnstcw sbb iret ljmp fldt mov es jnp loop dec mov scas stos loopne and or sub fbld mov pushf pop ret test cld push sarb sbb push pop push xchg xor inc dec out popa imul imul les jnp nop lock mov dec adc dec add dec push ret xchg jns cltd jnp lock out lods iret push in ljmp or dec mov (bad) test ljmp xchg mov fisubr test xor ljmp push sbb bound ds repz cmp bound sub arpl sub pop dec cmp mov sbb jnp leave arpl lods bound jp xor inc repz add loopne adc pop push fcomps stc (bad) loopne push (bad) add mov leave test pusha cld and mov push popa pop (bad) fidivl cmovne aam sbb shrl xor mov lock test (bad) inc int3 jno lret andl cmp jno cld movb lahf xchg and bound or add inc mov hlt (bad) lock into lea dec rcrl daa jnp enter scas insb cmpsl fnstenv mov clc test aas popf out push adc lcall jecxz sahf loope fstpl fs repnz out pop mov mov jnp (bad) addr16 lcall push push dec test lea xor fmulp inc pop pop mov xor add cld dec cmpsb adc dec (bad) inc add sbb xor adc push imul mov pop shrl aad xor lds aam add push shrl hlt jecxz cmp cmp outsb jo adc pop cmp and push cwtl jl in mov leave dec repz std or mov inc (bad) outsl pop popa clc xchg adc (bad) or jge and das std add mov xor push xor push fildll adc arpl mov dec sbb loopne icebp adcl adc xchg popa std pushf call outsb pop les add insl and (bad) pop arpl dec or jge pop shrb ficomp mov or add pop nop out bound jp mov daa es mov and sarb sbbl mov and push xor sbb repnz jge std loop (bad) es pop in in lock leave mov push inc pop xchg repnz addr16 jne cs lret fldl mov xlat mov inc lea mov in adcb cmpsl mov push loope lahf shr lcall or idivl data16 jbe jle pusha mov xchg cmpsl push fwait pop (bad) ss mov pushf or cwtl sub push loopne jno repz pusha movsl ljmp daa sti pop ja je lahf std jmp aad mov stos stos das mov stos push mov rcr pushf adc outsb in sbb addr16 test adc push push dec xchg sbb push push aaa popf push mov imul test xchg std sub gs add inc fisttp addr16 nop dec inc xchg out jp push fsubrs (bad) outsl rcll movsb mov dec mov call and adc jp mov iret aad sbbl rcll imul aad pop cmp ffreep ljmp (bad) cmp or sbb (bad) xor inc fistl out push aam or xor or inc addr16 adc pusha sbbl xor mov jmpw mov test mov xchg push dec sub adc push or cmp adc inc subb dec into add xor cwtl faddp mov dec jmp popf in fsub aam lret lods shrl or imul fstps add fistpl mov divl jmp imul sub cmp (bad) leave mov shr punpckhbw nop clc cmp ret xor inc scas pop sbb pop dec mov dec or inc mov std popf mov lock popa (bad) (bad) xor insl (bad) dec jne jo iret (bad) loopne lcall sub jecxz loopne xchg cmp out pop in fsubrl dec mov mov pop xlat iret xchg enter scas dec popa rorl mov pushf jmp xchg xchg jbe and mov rol and jle mov inc stc sbbb jmp mov lret sahf in xor xor (bad) imul jl add add mov popa add jmp jo push sbb (bad) into (bad) repz pushf add test lock test (bad) cmp xchg mov mov (bad) andb adc fucomip adcb bound mov test or xor adc adc xor adc aam or movsl in and mov rcll mov aam loopne les (bad) stos cmp addl push cmc dec sub mov or stos cmp lahf (bad) in nop mov lahf cmpl dec loope ret mov sbb pop sbb xchg lar xor and or testl ja pop push xchg jl or movsl (bad) frstors xchg pop and and jg aad out add mov repz out jl lahf movb jnp mov mov mov stos fstpt sub pop xchg inc lret add mov out sarl out lea inc jne pushf and icebp inc mov sbb mov mov (bad) outsb jno (bad) xor mov xor push xchg mov push lods clc sub (bad) in sub dec sahf iret xchg div rcl fdivr hlt and les xchg xor or rcl call lret dec mov jl pop push mov loope pop push mov lods push pop jne add (bad) sti mov (bad) mov push dec les dec ret push push lret push jb jbe icebp xchg sub in lret add or inc stos in pop addr16 push test leave dec cmpsb xchg sub and jae jno or fs sub (bad) fstpl dec cwtl popl mov mov xchg shl mov xlat inc jns mov pusha cmp lret push ffree and mov mov lret clc ret xchg leave cmp xchg rorb jb rcrb or add push push inc in into repnz jae sub repz leave in int3 inc inc push idivb mov into mov xchg lea daa xchg loope fcmovbe cld mov into xlat sub push gs int outsb cmpsb and mov neg test and and mov pop fistl push and repnz add xchg fcompl push sbb pop in cmpsl movsl int3 add cmp fdiv xor add mov mov mov mov or fcoms and call mov mov sbb scas out push xor push fs shr call xchg mov loopne mov fcmovnbe daa xchg pushf and or andl mov fiadd fstl loope cmpb bswap (bad) in dec ja jo (bad) bndldx call push dec (bad) int mov lcall orl push out sub iret mov loope mov dec mov mov shll nop fsubrl mulb cmpl adc or pusha mov in and and movsb pop xchg sbb shl sbb mov int3 packsswb mov iret (bad) dec push repz rcrb xor xor push pop mov cwtl mov adc dec loop pushf mov or in ret pop mov sbb loop nop imul adc popf mov out push dec inc movsl mov dec cmp sub cltd dec rolb mov sbb inc sbb addb jo ja cmp lahf or std ss ss push push aam enter mov sub (bad) adc out cwtl mov sbb lcall lea aam dec rolb push fsubrl fdivs nop (bad) aaa out sbb push mov mov test lds fwait pop je (bad) xchg stc rclb push jle or pushl sti mov sbb (bad) testl jno cmp js push xor sti xlat sahf leave and cltd xchg xchg ja mov ljmp sub stos fsubp lret and jl mov aad out iret int3 std push and jecxz push loopne sub (bad) (bad) ljmp addl xor stc sub test aas mov aas pop push rcll sahf fwait jge adc data16 lret in push es pop add out je inc imul add xor adc pop mov test subl repnz or xchg (bad) or lea call int fcoms adc mov or cwtl dec into lods daa lea (bad) icebp mov stc ljmp cmp adc pop or stc xchg mov mov in lds or pop movsb out lods addr16 jl cmpsl (bad) daa xchg testb push jbe pop sub and clc or push cmp addr16 aam in xchg pop add pop jge negl jbe mov les mov stos inc lds sbb mov lar outsb push js mov test jo lcall pop movsl jge adc and or cld push mov pop test into insb pop insb popf xchg pop xchg add push fnstcw out jl add imul xchg pop mov inc mov xchg insl jnp adc (bad) xlat cld and mov adc mov fsts push mov int adc outsl loopne pop inc es ret sahf mov orl or xchg lods cmp mov fmull ret ret and scas out ljmp mov xchg inc scas sub cmp inc dec mov fiadd sbb dec push test sbbl add dec pop out (bad) xor sbb mov js jmp lret dec int add fsave ja push sub subl hlt inc mov jae call (bad) iret xor int push lahf std sti out mov or in pop insl aam ja adc jg fstl jle movsb add push push dec xchg pop and push mov cmp enter sbb pop out pop aaa adc repnz cwtl mov adc aam sub lcall inc in add fs xor les sbb xchg and mov cwtl iret pop cmp (bad) cmpsb aam pop jmp stos leave push mov call and add dec (bad) mov mov mov push clc ja je cli icebp jle inc xor jp enter push and ja mov mov pop (bad) mulb jnp add mov xchg or dec fmuls subl (bad) mov add scas daa push jb arpl cli or add xchg (bad) mov push xchg stc and or js mov jmp adc jl repnz je dec test pop fstpt lea leave fdivp outsl adc arpl call sub divb (bad) rolb pusha mov pusha inc push das sbb iret dec jnp and (bad) les ret nop popf and rclb mov adc roll pop jp fwait out fs in out sub in mov dec sub insb jle notl movsb scas ret andb mov test leave mov pop xchg aas cmp xchg insl lea leave stos imul mov mov inc pop jecxz fmulp sub test stos pop insl and mov inc sbb addb pop pop pop cmp dec cmp pusha in hlt js outsb xchg mov xor mov add push (bad) or dec dec or jge mov ljmp mov xchg (bad) movsb mov test sar sub or aas cs mov je ja inc dec sarl dec and add mov loope dec mov push dec ljmpw ja clc xor into mov arpl mov mov jge mov push jecxz push cs cli (bad) (bad) in movsb or push mov xchg jecxz test xchg lcall adc ret cltd sti out jle pop repnz fmulp xchg aam popa insl jp cmp adc xchg cmp inc rcll xchg lcall jae inc pop mov ror xchg inc adc mov js (bad) in imul (bad) sbb loop lock mov icebp jg jnp cmp mulb bound mov insl xor bnd addr16 mov rcll sbb mov push cmp loopne (bad) xchg flds sbb loopne dec jno inc or push cmp insw mov add push cmp je cmpsb rcl adc sahf inc xchg lcall fscale xchg aaa jns add cli push sbb push adc je xor adc test xchg xchg adc inc pushf adc push sub jne fdivr and xchg ficompl ja stos ja adc xchg xchg mov push gs inc lahf xchg popa xchg jle sarb push testl (bad) int3 fs out jb lret xchg dec sub inc xchg aaa ds and call mov inc loope xchg sbb into push jns mov xchg push pop bound and aas fisubr xor sub xchg add mov push pop imul popa cltd ljmp je sub dec loopne lret popf into adc inc jmp adc jae pop inc clc jg adc rcr andl sub ret dec iret pop jl add or add sbb jae andb ret sbbl or cmp out fiadd ss leave xlat mov adc cmp mov sub or loopne mov stos mov aaa mov inc xor int3 out nop inc push push test xchg dec mov sbb insl lcall es mov clc xchg (bad) or mov mov dec sub rcr push lgs push addr16 sbb xor notb js add or mov cmp mov imul enter lds mov loope xchg push (bad) aad mov out inc lds shll xchg adc popa in xor rcrl xlat xchg sbb jne jbe das push ljmp (bad) roll movsb and out lds ret out ret cwtl (bad) dec or iret mov lahf aad movsl jl xchg adc scas enter sbb push adc imul mov sbb lea jo (bad) xor movsb inc fnstenv mov xchg jge lahf lret mov add je imul enter adc jae xor (bad) jmp ljmp fmuls cmpsb ds dec mov dec loope jecxz mov push jno sbb rcrl xor push mov addr16 scas or push cwtl xchg stos fidiv ret push stc cld stc mov shlb sub mov int inc add cmp xor popa cwtl aad sub jle gs repz popa lret scas jmp iret cli xchg xorb and mov lods xor dec jl sub jmp adc fnstsw jmp xchg mov add xchg jle jle hlt and (bad) lahf loopne mov jge cltd in pusha data16 (bad) add or jecxz mov les mov shll inc mov pop loop ljmp hlt mov xlat sbb int3 add out imul jl (bad) dec push cli mov fiaddl cltd jl sbb out shrl mov push inc mov xchg and jecxz dec cmpsl fs and mov (bad) in jo jp jp add jmp add jo outsl stos mov gs int3 or or add insb and xchg push repnz mov jg test xchg push mov fmull inc out sub xchg and or fnstsw and mov dec mov imul xchg femms inc sub cmpsb hlt xor mov or (bad) aam pxor jl aam mov push and stos pusha rclb aas cs xchg jne inc lods js push nop dec rol aaa test dec cmp jb mov (bad) int repnz xchg leave aas push mov jne push lcall lods data16 sub xchg fisttpll bound push inc fisttp push push movsl out xchg out jnp,pt jecxz push popa call push jb hlt out mov dec sub fs scas jb ret inc repz push sahf fisubl push sub out out xchg aam es rol addr16 imul jmp xor dec push add add xor mov or stc mov inc in mov add outsb jg in mov push inc clc mov sub js inc imul mov xchg mov xor loopne mov cmp add inc test pop adc cmc jle imul lock sahf int3 push inc push adc les cltd jge jge and mov cwtl imul xor pop ret add pop or adc xchg and mov ljmp mov push lret ja mov lret aam jnp aaa inc shll sub jecxz loop add addr16 jae aaa pop push add and test mov in inc xchg sahf cmp setge inc adcb aad push dec imul scas sar add leave popa push fildl fistl mov xor std mov (bad) in push je mov mov jge arpl inc fidivrl push xchg mov imul sti xchg js xchg mov int3 cmpsl add ret sbb into sti push push mov shll xchg sbb in loopne sub push jne mov out xor dec or sub or mov rorl and lahf push loope jmp pop push and shll incb inc leave test cmc dec mov lcall (bad) mov sub ds stos adc mov dec lcall jecxz cld leave popa push neg cwtl enter arpl mov data16 sbb cli ds add pushf mov or push mov (bad) bound pop dec bound ljmp jo imul mov cld jnp scas jns jmp subl adc jmp repz dec or push rcrl jmp jecxz and icebp pop jecxz and fisttpll xor push or mov inc sbb insb js aaa incl or mov jno push shrl (bad) ljmp xchg sahf xor and mov fidivr divl lds mov mov xor repnz sbb mov cmp jp dec lea cs out and rol jno mov addr16 cld iret lods js cld mov add push push fdivrp andl xchg inc xchg loop aad rcrb call mov mov das popa or inc jae and loopne dec in test dec mov daa fnstcw adc pop insb mov pop mov sti push leave mov mov push mov loope mov sarb shl in lea mov (bad) inc lret lahf or adc loop fnsave sbb xchg subl lahf mov (bad) repz orl adc xor or test cmp nop push mov insb scas (bad) cmc add stos aaa jmp mov adc test lahf out nop fsubs das clc mov jecxz dec (bad) fcmovbe fcmovnb mov inc (bad) (bad) (bad) test and pop jns mov cmc xchg out xchg add mov lret bsf ja cld icebp sub push pop mov cmpsl cmpsb popf sahf adc (bad) leave addb dec stos sbb aad sahf add inc jae cmc jnp repz push rorb xchg push insl xchg push cmp shll or out cltd gs jne insb dec sarl repz xchg (bad) cmpsl loopne (bad) xchg (bad) in xor loope imul scas add xchg sub xchg jg dec sub add xor outsb cmp jmp cltd fwait sub int dec push push mov rcll jp mov jle fsubr jo adc int3 xor cli push daa leave adc daa sbb mov leave jo scas dec jl rcrb test add cmp jb xor aam dec cmpsb imul jp ss insb mov loope add nop and cmc insl push icebp leave cltd xchg dec add js push cmp out cli mov add mov cmp adc xor aaa loop icebp push pop movsb insb inc mov daa push int3 pop mov lcall pop (bad) aam adc cmp cld je push add xchg or jae jp outsl (bad) cmc aam xchg xchg out (bad) fwait add or pop add cmp outsl iret (bad) pushl mov jg cld mov sti pushf aas (bad) xor fcoml sahf pushf mov push (bad) dec das insl in sbb imul in scas rcrb int scas pop dec xor push scas cwtl jb dec jne int3 pop aad xchg fs (bad) pusha xor mov fnstcw or mov sub ja cvttps2pi xor lcall inc nop adc in cmp and movl xchg in ja enter mov sbbl lret hlt sub sub mov out xor mov das pop inc loop push mov mov cmp cmc or fld1 mov adc mov inc mov fsubl and enter bound mov xchg addr16 mov mov insl rorb cltd aad jbe stos adc data16 sbb out sbb imull mov sbb dec mov lds sub adc outsb dec sarl leave jnp je dec shll inc (bad) ds stos (bad) mov inc ds in insl lret gs jae cwtl adc outsb int cli sub pop (bad) cltd (bad) rcrb pop lret mov cmpl pop call inc out in add push das pop out pop mov je xchg (bad) in add rcrl sbb ret je es push sub enter cmp add aad lcall das ret mov jb scas repz adc (bad) sbb xchg jmp pop leave popa dec (bad) stos inc dec inc inc pop cmp cmp pop cs (bad) movsb sub xchg pop sarb push fdivs mov mov push fisttpll pop (bad) lret into xchg fwait mov imul adc push mov xchg adc sub xor fsubl jge and enter jecxz call lcall adc (bad) fdivl sbb andl pop pop sbb aaa xchg (bad) dec ret cmc and loopne,pn divl adc jmp inc jle sbb test cmc out lahf mov arpl sbb test aaa lahf aas mov jmp out into ret cld (bad) xchg adc pop jbe ret test adc push pop inc xchg xor xor cmp imul or xchg sbb jmp movsb rorb outsb mov (bad) sub cmp jp call mov adc ss mov cwtl or mov ss mov sti jnp jecxz stc cs test xchg pop stos rcll mov ss test sub test jns push pop insb inc sahf jns andb and sub test fildl jb add jge fmul push (bad) and in clc jae in xor and pop push cmp xchg insl mov sub int3 addb dec mov mov out xor ret mov dec add pop in mov mov je test popa rorl rcl push add addb adc test inc lock add fstp lock sub push pop test xchg inc push clc add das ficom lock inc adc xchg mov aam cmova out xor xchg mov mov jne adc mov ds cli xchg mov fs mov push pop xchg mov push shrb hlt xchg les lcall leave cs push push (bad) sbb out cld aam cs fcmovnb add insb or dec push pop sbb push xchg pop push push mov fwait icebp pop test rcrl loopne mov mov cs mov cwtl push mov rcrb push inc mov pushf xchg int add pusha xchg jnp and mov mov add mov arpl lret dec fcmovne std imul in jge push mov ljmp aas lods ljmp push and je ss dec (bad) shrb sub cld dec enter fimul movsl mov scas rorb addr16 jno ljmp stos bound decb inc scas push cmp mov cltd adc ss mov cmc sbb (bad) sbb mov stos xor push out fcmove js lds adc mov sub cmp xor dec fwait es in adc aas mov sahf inc (bad) repz xchg xchg xchg scas ds ret outsl dec stos stos xchg icebp rcll arpl in dec mov jae sbb adc xor sub lea dec xchg mov int push fiadd mull test stc mov push adc cli fsubl mov mov and pop adc rorb dec or hlt sti jbe into inc jecxz mov jge sub mov jno (bad) loop cltd fs loope push in xor (bad) fcmovbe push das (bad) jns push gs mov adc xchg lea adc add loop popa iret inc shr adc xchg inc jne mov addb insl jle incb lcall (bad) bound (bad) jmp inc jge mov jle mov dec adc and cli and out dec dec push movsb (bad) sbb (bad) fmul sarb or scas inc adc (bad) dec adc outsl stos adc mov jl sbb push stos adc mov mov inc sbb sub xor inc movsb xchg mov daa jno jnp dec out bound (bad) out (bad) int3 pushf push mov orl dec lea clc lret xchg push fistp cld rcrl (bad) sub out mov repnz addr16 je or mov (bad) (bad) cmp sub adc (bad) adc push fisubl mov rorl jmp pop hlt mov xchg lretw sbb jge adc mov std lock and mov inc mov stos mov es scas test stos pop sahf hlt test xchg xchg cld pop enter leave (bad) sub arpl jne jmp mov loope test popa dec or push xor dec pop lock lret mov or and js cli xchg adc je mov rcll adc cli ret jnp loop fucomp push shrl cwtl fadds nop (bad) pop mov pop into or and xchg call out fsubrl pop cmp pop ret sub fwait out mov xchg stc jge in popf mov inc mov or mov dec out neg cmpsl data16 scas test sahf sbb push and sbb mov popa xor loopne insb icebp movsb and outsl int cmp out sbb js mov lods movsl movsb push mov xchg sbb adc inc ja insb push mov adc movsb pop dec and add ret add (bad) mov (bad) nop ret jbe and fidiv das aam daa outsl outsl xchg arpl jo push add cli andl push shll (bad) dec mov cwtl (bad) or xchg lahf jge jp pop push pop and sbb cli push pop data16 popl aas fmuls mov dec cltd sub lds stos lret bts adc mov pop sub fistl js mov mov imul (bad) scas mov pop push fwait jecxz mov cmp xor int3 jmp shlb sub jge sub fisttp pop in lock add pop dec rcrb dec lods call adc outsl pop push xchg adc popf dec cmp or jmp outsb cmpsb cs sbb jmp mov stos std mov insl test mov push bound mov xor mov mov xor jecxz mov cli jns negl add jns or push jo negb push add cltd cmpsl xor (bad) out jle mov jns xor lods dec ss ret iret mov (bad) pop mov jecxz sbb or cs jb repnz cmp adc xor jecxz cld das loopne loop jp ret ficomp pop bnd dec and cli sub ds lods adc pop xchg or mov hlt pop (bad) cmp mov cmpsl outsl iret push mov jl xchg es sbbb in add cmp sbb (bad) stos je xor test outsb lahf pop cli test pop dec add jbe test addb push loope data16 cmp mov sbb and sbb fdivl sbb xor faddl leave incb scas xchg adc xor daa push out call or scas nop out daa imul dec bound jns add insb mov stos jmp loopne jg (bad) mov bound jg (bad) sbb push or fs enter mov cmp ret insl or sti loop inc mov mov aad in mov hlt pop ret mov lret jge cmp pop test mov push cmc out or mov mov daa hlt (bad) adc aas stos call xchg outsb loope addl je (bad) push sub xchg xor mov out movsl mov into or dec cld lock cmp cmp push movsl leave cmpsl leave in ja xor (bad) loopne andl sti je xchg push stc ljmp in sub add outsb or mov cmp lock daa jo xchg pop lds mov stc and in insb pop lods dec push jnp mov sbb mov xchg adc mov cmp pop into or xor and mov pop iret pop xor insb (bad) xor enter sbb in add inc faddl cmp mov add push pop popa pop push gs add adc mov mov and adc add xchg lock mov insl pop inc hlt jns cmp cli pop lods mov lock shlb (bad) (bad) lock pusha jp sub xchg scas fnsave sub or push dec pop lods inc (bad) mov pop push outsl cmp inc mov mov sahf jae test loopw adc jl aaa insl sub xchg jl (bad) dec or sti xchg pushf pop xor test arpl or mov ror and or jb dec cmc movsl jb faddl add les idivl dec adc dec jecxz pop add mov pop adc jns lret loopne fwait adc push jns push lahf call pop and mov push cmp fdiv push add pop and mov fninit add in and push adc bound dec scas cmpsl clc test push fcmovu mov push sub popf pushl repz into add dec jbe sbb sbb xor orb stos aad or jbe cld jo in repz mov or outsl add dec rorb inc xor imul insl adc loopne add jge int3 jne bound add add xor pop mov gs sti into fidivl daa pop cwtl and adc jns lcall add push int3 ret dec and and push push sub mov fildll cmpl mov int3 loopne xor test loop adc push call ret adc sbb call daa xchg leave fcmovnu add xchg enter shlb out scas add jb xor call (bad) sub ja fdivs ljmp xchg rorl mov cs jl fdivs fistl dec lds and dec jnp push cmp adc adc sub mov addr16 addr16 lahf mov cmp sub loopne dec jne add dec das and cld sub jb push mov fistpl mov in pop imul and jg pop neg sbb sub inc sub push insl mov dec ret into xor pop std enter les or mov mov js inc cmc loope fwait lock xor xor (bad) xchg pop punpcklwd addr16 jp and pusha popf int3 inc push repnz push push mov enter xor ds adc pop xchg jp pop mov pop sbb pop cmp out mov jno test repnz lods sti push jne je xchg mov dec mov sub arpl jnp mov and out push inc test mov ret mov xor and aaa and ret mov movsl xlat mov jmp or shrb (bad) (bad) ja (bad) lock sub aam xlat adc je es das inc sbb mov or push lods call push sub pushf push or mov xchg daa sub subl dec cmpsb inc pop sub xor xor (bad) mov rclb sbb push mov ss test dec out or (bad) shrb jns hlt pop cmp dec repz jo push and add cmp stc xor cmc inc mov jecxz jge inc sbb add iret (bad) gs mov outsb popa push jle rclb sbb in leave sbb out jecxz (bad) jbe xchg out lret cmpb rcrl mov jae into movsl mov jbe enter lret xor imulb (bad) adc out push jno cmp or fs (bad) xchg xor lret cmp push mov adcl jo pop sarb jb or inc or sub rcll jecxz add lods fnstcw cpuid movsl cli pusha outsb mov stc add data16 in mov arpl push or push (bad) loopne fsts sub addb xchg (bad) xor addr16 lret mov adc iret ss ljmp and dec cltd xchg push push sbb sub mov mov adc cs jbe adc jnp fs ja jmp cmpl xchg (bad) inc loopne into ljmp mov cld adc repz (bad) mov adc enter jge sahf push ds stc or stos sbb mov movb mov (bad) (bad) mov mov jmp xor inc push mov add out in mov repz hlt jge mov pushf fnsave loopne rcr pop aam (bad) dec mov mov push and rcrl (bad) sahf inc inc stc out outsb add clc fdivs enter insb cmc movsl adc push push fiaddl jo addr16 mov mov movsb (bad) jae cmp repz insl (bad) mov mov aad sub mov fdiv loop pop movsl fdivrs mov push int3 aam int3 dec sbb fisttp pop repz rorl test adc push (bad) jae jns ljmp push shll shrl clc outsb jp ds add and add shrl mov jnp jo leave pop in sub dec jns jecxz mov test jne xorl mov rcrb popa test xchg call mov ljmp fstl (bad) mov mov imul mov cmpsl xor (bad) or mov js test movsb bswap jb es mov lret inc jns and push popa lahf cli mov jg jecxz jnp rcll sub fstpt aam adc and xchg (bad) hlt push jns adc out xchg pop pop movsl ret add fcmovb arpl (bad) fild cmp (bad) add mov and insl mov nop and sub mov popf mov push dec in jmp scas cmp xor or xor subl jnp pop rcll xchg sbb add push jle dec adc lret pop and enter jecxz pop mov dec or push sub sbb lods dec xchg (bad) adc xchg dec push mov mov mov enter jno or mov fdivrp xchg out pop jle sarl fadds xor mov sub fisubl sub in stos pop loope mov das and aaa xorb xlat stos push movsb in mov cmp or xchg fistpll pop push pop pop pop in sti test jno js xchg fldl mov push inc mov and out dec push sub mov fnop scas call push rcll loope pop (bad) ds test push mov pop call xchg jmp sub jne adc stc fwait js loope and mov cmp sbbl add lret mov jae xorb sbb push inc test cmp inc jmp pushf ficoml fcompl in add data16 mov jo scas and mov jmp (bad) mov pop lock pop mov fnstcw (bad) popf out and xchg into (bad) jbe xlat sbb push pop cli iret add sbb fcomp xchg es gs (bad) lret clc jp dec dec aam (bad) lock or xor aad jp mov aaa sbb in cwtl mov pop dec sar test xlat or add jp mov inc aam inc stos lret adc add mov inc dec pop xor lods mov push aam nop (bad) jecxz dec (bad) jnp push (bad) sti mov loope lret movsl inc cmp (bad) (bad) (bad) mov repnz and and dec inc xchg in jl sub stc hlt repz and out std pushf or jnp (bad) rolb xchg ljmp imul (bad) data16 popf in int3 lcall aaa xchg and lret das mov loope push lea push pop stos outsl idivb jne movsb xchg and mov xchg fimull dec imul test or jne inc (bad) jmp add inc mov es imul js inc dec js jne and std inc dec lock popf mov loope xchg dec pop mov (bad) pop rcr sbb cld sbb shll cmpsb into pop push mov pop leave mov xor sub arpl es iret adc jne pop fimul cli push and pop (bad) mov (bad) push shrl mov or rclb lock fidivrl jp loope js and movsl mov test rclb fsub daa sub jo add mov movmskps cmp int out push jnp out repz mov mov mov dec adc les aad hlt sub test push pop xchg mov lcall pop push test (bad) push mov aam test repz into cmp xchg dec push cmp mov pop jo push sub pop and lds enter xor pop jle pop dec and cmp pop jle xchg in jl pop inc cld (bad) arpl daa mov sbb insl (bad) jne data16 mov pop aaa dec dec push enter iret xchg hlt in aaa jnp or hlt daa aam stc mov xchg cli mov adc sbb out lret sub (bad) cld leave das addl jg inc push enter in cmp jo in push cmpsl push push push roll ficoml jl enter adc ja,pt loopne (bad) dec aad into test pop test xor repz dec bnd add orl jmp mov popa ret jg,pt adc dec fcoml pop adc outsb clc xor std jae xor addr16 jo xor mov (bad) mov inc inc push cmp sarl insb sbb daa sbb jo call rorb mov and jmp and xchg loope imulb pop loopne mov fwait pop sub jnp push popf sbb insb xchg jns int out push data16 jno daa fnop push adc (bad) fist sub and xor dec or push inc pushf xchg jne push shl pusha shr ljmp cmpsb mov pcmpeqb mov insb mov lods out jp sub xor sub inc and jno cmpl (bad) ret out xchg push out jo call push xchg test adc pop dec sub adc push cmp loopne mov jns fisub ljmp repnz lret rorb push mov pushl cmp pop dec shrb loope mov fcoms iret sbb xchg inc stos cwtl sbb lock mov mov popa pop mov mov sbb les jnp sarb out cmc mov fstpt jo bound dec pop mov push imul jo in divl jecxz xchg sbb or rorb xchg cmpsl inc mov cmpsl dec lcall xor gs inc jle std add lcall inc mov insb test or ljmp insb inc push adc mov mov test ljmp negb outsl dec or push fstl push cmpsb addr16 xor es pop js (bad) and leave xchg inc and mov sbb fxch daa dec jg (bad) push mov mov mov inc pop pop add je sbb scas jb ss test stos pop dec push lret frstor adc (bad) dec add fimull (bad) sahf xor jmp cmp insb repnz outsl gs cmp ja inc sub lret idivb xchg jl xor cli mull arpl jp jge push xchg push sbb pop push or cmp lret add xchg test dec out sub ffree push stc mov imul adc pop dec cmc sub imul xlat xor push xchg mov inc xchg mov sbb or iret lahf outsb inc call inc int3 mov push call xchg lahf mov and adc mov mov pop stos test bound in sbb mov in inc dec mov int3 ja fstl sti ret int mov scas jl cmp jne or and sbb les cli jge inc test push sbb into sbb sbb repz mov cli or jge or xor loop dec sbb or push bndstx call leave in jmp jl jo push cmpsb dec push jns cmp inc sbb xor aas (bad) xchg lea cmp jge jmp iret cltd xlat (bad) jge xor mov repnz push mov push pop xlat mov mov sahf jg insl test shlb or push std lock cmpsb dec js mulb mov dec or jmp loope lds inc sbb sbb dec call jmp jnp sti js je bound scas je pop cmpl scas sarl pop cwtl cmp jge and int mov push test imul lahf popa push leave dec nop cwtl cmpsl leave (bad) das jmp decb add jne and roll mov and xchg jg sbb mov adc stos mov jmp sbb xchg js adc mov fs pusha enter mov lret cld dec and (bad) dec mov mov aam xchg push flds dec push es repz enter aam push pop jg (bad) loope cmp push aam pushf test es xchg mov hlt add ss outsb (bad) fs push push cmp jae push cmc aas int inc pop sub fucompp insb loop cmc fnstenv inc sti or mov lods fistp int stos mov mov daa cli (bad) stos mov loopne and ret call dec sbb push xchg out jno and lods imul push xor jmp sbb (bad) out jge stos mov dec sub test and jne and pop pop jne sbb and or sbb std pop lret mov inc push fprem inc fstpt popa pusha inc adcb jnp pop or mov sub in sbb (bad) (bad) sub xchg jmp and imul mov xchg dec movsl fsubrl aad push lods (bad) push xchg xorb cmpl cs test pop jecxz push xor (bad) jnp outsb int3 insb add xor jae mov dec pop dec mov fbstp mov hlt lds hlt test mov imul jle sbb cltd mov out sbb test test cltd mov jle jno lea stos xchg es mov subb loopne pop das push dec popf adc inc sbb lcall or dec fisttp lahf dec xor xchg imul int3 lods cltd xchg and ljmp movsb cld arpl mov xchg pushf xor test outsl (bad) lods xchg jnp push out jns mov scas push and add dec hlt or lret sti mov das mov xchg iret push ret rclb xchg mov and cmp jns stos or scas and sbb js xchg movb pop add lea add fnstenv (bad) mov shll fisubrl sbb dec pop and dec cs mov xor mov lea mov mov push jbe and adcb cmpsb push aas add jge mov scas repnz xchg test xlat pop pusha add mov add mov sub out dec ljmp loop stc or jg dec xor dec xchg outsl cmp jg cltd and or movsl or push sar fwait pop in jo mov sbb dec lret inc dec pop mov cmp jmp or pop stc fildll sub cli outsb adc mov ss xchg push dec nop scas cld cmp push cmp xor dec (bad) imul mov lods mov mov add aam or push sbbl loope (bad) and adc cmp push push mov jge push cwtl cs repnz ret pop sub mov test mov pushf cs or lret mov repnz mov out call rclb (bad) jo mov cld mov adc mov in in or ds rcrb rclb arpl les insb mov cli mov lret push hlt mov lret mov pop xchg mov cmp and int3 mov ret xchg fiadd (bad) or or mov inc jne push or jl pusha mov xlat jl adc cmp jae sub cmc (bad) mov pop inc iret call mov into pop push dec or dec add xchg mov stos sbb adc fdivs mov or add fsubr mov out test sub jl,pt loope sbb inc aas add sahf mov adc loope add (bad) shr jns push mov shrl mov pop orb (bad) dec pop sbb setns and add in inc push imul shll and mov inc jns into xchg push les (bad) xor cmp sub and mov stos jg lds es shrl mov push popf push push mov dec push test les outsb sbb inc (bad) (bad) and stos mov (bad) out xchg inc dec inc pop fsub mov mov scas push jns mov es lock cwtl enter mov push adc (bad) xchg test push outsb mov jle push (bad) cli mov jns (bad) insb add icebp repnz fbld inc adc rorb xor scas fisub xor ljmp int cmp ljmp mov mov loopne incl lcall hlt xchg cmp dec adc movsb mov xor jns ds or mov nop pop hlt pop sub pop push es push adc jecxz push lret and xlat in dec mov sub and mov xor sbb movsb fdivl mov xor aas mulb mov pop mov loopne fadds or popf aas or sbb push and mov out jnp xchg jne pushf std sub jnp or adc mov adc or test ds mov je adc and pop mov test jbe repz lods int3 mov inc push outsb loopne adc jp fucomi shl ds (bad) je push es addr16 pop add loop lret pop out jg frstor add clc (bad) fstpl movsl lcall add ljmp ret notb mov adc jl push xchg push jle mov adc imul jl shrl sub int3 gs lahf xor mov andl ficomp ret insb adc jmp mov lods arpl mov pop push repz (bad) test int cltd mov sbbl mov xchg mov call add dec mov cld insb pop cmp test push xchg enter sbb push out (bad) (bad) test mov sub stos push leave or cmp movsl pop test adc pop (bad) aaa mov movsl jnp adc data16 dec lea adc jg adc push sbb ret rorb pop (bad) jl int or stc repnz mov jne dec loop pop pop aaa ljmp add jb test or push aas test push nop xchg push xchg xchg xchg movsl jecxz enter inc test int cs inc xchg data16 mov xchg insl fmull cmp sbbb mov into arpl pushf aas cmc (bad) jne push dec aad sti das aam lock inc call and sbb jo adc cmp test dec test xchg lret rcl sub dec inc push test loopne xchg mov add sbb push mov and cmp jae push std (bad) repz jbe repz scas mov rcrl (bad) mov repnz or (bad) mull mov sub mov sub pop mov mov mov jo into mov push pop arpl inc xchg iret scas dec fsubrl cmp fwait and xor inc bound ret sbb and push pop dec jp ret outsl dec stc push pop mov shll fstp shrb outsb lock cld cmpsl lahf shrb inc lret cltd dec or or rcrb mov mov hlt jbe push mov pop insb ret arpl jno mov push adc inc mov inc in pusha je js jge arpl stc and fwait sbb xchg pop cmp sbb out inc ret push cmp mov stos or sub (bad) jge arpl jne jnp jbe aam call adc xchg mov mov test (bad) xor bound das imulb cmp cmp stos std stc mov sub mov inc test xchg and fist inc mov leave pop lcall fmulp sub inc lods mov outsl fcompl cwtl fstps or adc sub test or popf jae mov xor pop push and add sub stc jae rorb mov in mov mov adc ljmp stc ret push out inc xchg je or push (bad) stos mov mov xor pop lea (bad) js xchg and push pop test pushf das scas stc and sarb cmp fcomp sub dec and mov cmp arpl (bad) cmpsl in shld bound xchg sbb stc mov dec xchg movsl (bad) pusha lds mov jmp movsb or movsb pop aas out int3 cwtl (bad) xchg int fstp shl jb and int3 add mov in cmpsl sbb push sub and sub inc jb xorb mov scas mov or sbb add and pop xchg in jmp jmp xor (bad) in and out push cltd cmp ja and add pop arpl enter and movzwl cmp subb mov (bad) fcoml int jns (bad) or sbb inc jg,pt xchg mov push adc notl (bad) or test repnz dec lea (bad) aam dec lods dec jmp mov and nop mov dec mov jecxz sbbl cltd dec imul or ficompl cli icebp lcall and fdivl movsl jp out sub mov adcl cmpsb mov mov dec in gs dec pop xchg test aaa subl mov int3 dec je mov mov inc loope adc pushf xor jecxz fstl sub fisubrl frstor repz gs inc pop outsb mov inc mov dec push popf scas int3 jne adc mov or adc inc test push jnp into pop in xor pop nop pop push (bad) fnstsw arpl pop fnstsw add (bad) mov into pop add sub push adc popf stos sbb loopne xchg stc push adc adc xchg (bad) jmp lods lods push popf add aam mov dec xlat push jae ja cmpsl in dec pop js repz inc add fisttpl ljmp js inc xor jg stos outsb push mov ret popf std inc sti in dec aas mov pop jl xchg je pop jmp pop jo inc pop cmp sbb enter jp aaa xor mov cltd adc sbb push repnz (bad) cmc jne pushf pop fwait cmpsb mov test cmp rcl mov xchg add lods add mov pop int3 mov (bad) aaa stc stos in sub mov rolb xchg xchg fcom stos mov scas mul jb gs fisttpll cmp pop sbb mov lock fnstsw dec mov call sub xor sbb cmp xlat sbb xchg mov push test dec or lods sbb cmp into (bad) rcrb mov dec ret cmp lds sbb xchg mov sarl dec stos movsb loope rcrl hlt sbb inc inc pop xor mov div shrb nop mov outsl sbb pusha xchg xchg cs add sbb orl (bad) jae dec dec mov loop std pop rclb orl mov in and das add add jl xlat insl xchg subb mov adc adc mov xchg dec movb xor leave mov repnz sub inc cmp push loop js in clc ljmp sbb pop jmp jns jmp fisttpll mov mov lods roll dec lods and in inc bound jg mov xor lahf in sahf loopne scas and shl dec cmp mov and pop hlt shl mov out popa dec xchg add outsb ljmp jae loopne pusha call gs or fnstcw movsb daa leave sub jl sahf xchg (bad) call adc test lret mov mov xlat adc (bad) ds pop shlb mov mov push (bad) inc scas hlt inc mov push mov mov test addr16 stc in lock test outsl data16 pop or daa loope (bad) adc xchg jnp fwait xchg pop and and add mov mov push xchg gs sub imulb (bad) loope or pop jl fnop popf jbe shr out in out ss mov out lcall add (bad) out mov negl mov mov jns mov jno fidiv cmpsl test fiaddl xchg shr dec xchg and add stos mov mov fbstp or xchg inc rcrb adc push jne mov mov sbb xchg frstor jnp hlt fistl sub outsb bound cmp out or popf inc (bad) adc and je (bad) mov fwait jnp movsb das lea fnstsw into movsl dec or push test pop mov (bad) iret push outsb add mov lods fildll add push subl rcrl sbb int gs cld xchg xchg mov mov mov inc jbe jae adc mov push movsl aam je in mov (bad) adc mov pavgw je xchg xlat cmp cmpsb xchg loopne scas mov or sti nop fdivs mov sub xorb add bnd sti bswap in jo adc fwait adc xor inc insl and xchg mov repz cs in mov jg cmp into rcll inc fidiv js cmpsb pop mov lds int3 push xor pop xchg movsl cmp sub mov cmp add xor pop sahf outsb aaa dec test int3 shlb mov xor shlb mov fbld (bad) jle xchg or les cmp in dec iret pusha in addr16 lea or mov inc mov cmpb cmpsl es outsl movl jnp mov std (bad) sarl movsb pop dec jo cs mov fidivr xor push aad jbe loopne cs (bad) xor (bad) cmp arpl xor xchg xor nop push and inc scas inc pushf dec adc aas inc mov adc pop aaa jae stos mov ja jle mov sbb mov add xor add xchg adc cmpsb aas mov xor jle adc add popf (bad) sti aad (bad) leave add adc gs scas add push or test mov in pop lret sub out mov jmp adc imul inc jg inc inc dec les jmp and jbe pop mov xlat pop mov in pop jnp movsb test push inc outsl sbb or sbb xor rorb push xor and mov or sti inc mov and mov pusha nop inc fldt push fildl in arpl sbb inc xchg dec add mov inc fidivl scas stos lret add jns pop jp data16 pop jae out inc mov aam cmp test movsl popl std dec dec add mov xor addr16 push jns imull mov jnp cmp fwait negl test int daa inc xchg in lods xor subb dec inc icebp stc insb push add lcall inc roll ja push rorb mov je loop push mov and fpatan push mov sub inc inc push lods cld mov mov xchg aas inc mov mov jge mov (bad) mov push idiv and out xor cmpsl adc dec ret fs lods inc sarb not push les dec push or (bad) repnz out mov int3 fldenv scas ficomp mov outsb jno bound (bad) (bad) dec (bad) xor mov add shrl cmp lds frstor sub add and adc cld fwait inc sahf arpl push lock ja cmp sbb sub out daa inc nop rcrb adc ds jns sub xor arpl push ret das push gs loopne jae sbb pop jecxz sbb das iret mov aad sub gs (bad) dec push adc int (bad) aas scas repnz cs (bad) addr16 aas pop cmp xchg cmp push sbb popa pop push pop (bad) mov shrl aas lea and mov (bad) fimul and mov popf je sub xlat push push push cmp test ret inc leave es (bad) mov mov push test into lret (bad) xor insb mov aam jmp add lock adc add sbb faddl jle xchg (bad) iret test pushf (bad) in stos call out dec mov pop (bad) imul negb jns dec inc pop shlb in lahf lcall fdivl mov sbb xor rcrl rolb (bad) lods adc (bad) cmp dec adc adcl push std add dec aas xor jne mov sub cmpsb loop jns repnz cmpsb mov inc dec mov push or and xchg scas js xchg lret outsb xor gs fcmovnu gs clc loope jns push and jno xchg push ja insl xchg imul outsl es pushf lahf mov aam lock sub cld fdivs fdivl loop mov mov pop (bad) loope jae roll pop xchg sbb into push cltd in or shlb sbb sbb jmp jno adc mov and or pop mov mov mov outsb pop mov fidivrl xchg dec mov popa xchg pminsw aam mov jecxz pop loopne int3 pop (bad) push add add mov mov aaa pop insl inc inc mov dec or xor enter inc test (bad) inc sti (bad) (bad) in or fidivl je arpl add ja int inc adc ja mov add add ret fs jae push jbe out imul push popl (bad) cld sub jno inc and inc in data16 dec dec sbb sbb add xchg sbb popa addr16 jne pop inc in sub jb aas cmp push imul dec push push in lcall sub roll jp xchg pop (bad) mov je sub iret and cmpsb stos arpl test scas push ja mov cltd push sub (bad) mov adc daa cmpsl adc xor mov adc pop out push in pop aaa push dec adc dec add dec mov ss int lcall sahf adc xor jecxz (bad) inc sub mov or fnstsw xor imul push mov adc (bad) dec pop pushf add dec lcall push ret stos mov ljmp (bad) xchg enter (bad) sub jp dec cwtl rorb jo dec xor out add xchg loopne aaa sbb repz pop xor rcrb leave lret pop mov dec cmpsb xchg mov fisttpll mov adc fisubl pop ja in sarl xchg jnp out loopne cmp out adc stos inc pop lcall mov stc mov ja pop out bound mov mov aad in push push dec push add xlat xor fdivl out lahf (bad) sub pop das jnp pop movsl xor (bad) xor xor or jne pop jg dec xor mov (bad) pop cmp dec setp xor dec xchg pop fldl add xchg pop cmp pop lock daa vpshab push jmp mov gs push (bad) sub mov gs stos aam jg (bad) lock add cmp push lahf cltd push nop cmp mov test cmp push je (bad) mov xchg nop jl jle call movsb push (bad) xor test pop inc icebp sub lock lea cmp inc xchg mov scas stos jg push mov sahf dec adc adc jecxz aas push dec arpl sub add (bad) jmp loopne fistl dec pop repnz aam repz lea loop (bad) in push xor divl aas scas cmova in mov inc push mov mov out ljmp mov and xor cltd cmc cltd xchg push adc (bad) (bad) sub loope inc ret movsl sub cmpsb mov loope xchg jno sbb imul mov inc dec mov jbe je sbb mov aad mov imul iret dec add xchg movb pop mov sbb jl popf push fcomip cmp xchg repnz xor stc dec scas pop pop stos out lock insb or clc andl push push out imul cmc push mov mov ffreep xor ljmp and leave pop add xchg adc cmp mov enter mov mov push ljmp ja (bad) cld dec sub pushf stos sbb fmuls dec mov ja roll shl add (bad) cmc mov sub ss adc pop aad int sub lods dec scas cmp mov inc or push jno test xchg aas sti and outsb idivb xor pop xchg sbb or icebp psubusw inc loopne sub jmp push adc and jne loopne arpl inc jbe xchg leave or xor pushf sub nop xor inc cmp mov xchg sahf mov adc sbb ffreep and xchg addb in cwtl xor xor out (bad) and inc stos call (bad) jo or mov push xchg mov or xor mov iret fldcw cmpsl (bad) adc fwait in xor iret popa xor sti jp aad stc fcompl popf addr16 push jno jmp fsubs xor lea mov rol jmp sbb sub jnp inc jae lds rep sub loop movb inc pop xor test dec mov icebp cs lods dec dec or add pushf fistpl pop shlb ljmp test test bound iret and lahf push jne ljmp xchg and shrb cmc scas jge xor or fimull andl dec or std (bad) movlps pop daa popa icebp es mov dec pop in gs les out mov cmc and mov dec push aam lcall xlat mov and iret dec repnz jns mov push add (bad) jg adc lods push (bad) (bad) fmull mov pushf dec aad jae cmpsb jns addr16 mov cltd rorl icebp mov pop clc sub pop mov cli ficom orw andnps add aas dec in popf pop cmp xorl mov popf xchg mov gs test mov xchg sbb adc call je sub pop pop sub idiv pop cmp sub test fimull push pusha xchg sbb push mov xchg jae fisub mov imul mov and jno xor jne (bad) dec int mov jae int clc gs outsb cs iret outsb or or push cld (bad) or mov jne sbb mov test cli jae inc pop mov mov jecxz aaa sarl fnstcw cli pop dec jecxz mov aam dec sub lret pop push (bad) inc mov sub mov and sarb fimull lahf jecxz out inc test adc ret (bad) adc xchg outsl mov mov je sbb dec mov ja aam fidivr ret clc mov add in cwtl inc sbb movsl aad aam data16 loop jp jge pop cmpsl jne add mov rorb fmul lds movl addr16 sub jae mov dec (bad) cli mov sub mov add (bad) sahf or xchg rorb sub rcrb jge fnstsw mov add mov ja adc in hlt (bad) or aaa sbb cmp scas cmp adc das sub jle adc imul clc mov pop or iret sti xchg jg jnp xor dec mov add add test sub aas mov test repz push daa test inc shlb push cld pop fimull push shl mov std and push sbb sbb fild movsl (bad) mov add rcrb out mull sbb stos jmp gs lret enter inc sub and mov add sbb sbb ret bound insl xor sbb push fcomip cmc jae cmp stc dec inc push jp (bad) jb inc lea sbb test sbb mov mov movsl (bad) cmp int sbb dec arpl sbb outsb cmc sbb insl and add fsubr pusha iret ret shlb mov pop sub xchg leave inc fs lea push cmc mov gs mov cmp push push imul or push pop push mov fcoml push fistp xor int in es lret and mov rorb lret aas sti loopne (bad) sbb repnz lret inc xchg xchg jp je add lods data16 jbe sub mov mov jbe mov or loopne and daa jl pop aas cmc or dec jle push shr in js fimull inc lcall fnstsw data16 or outsl lods movsb std push mov out xlat in rcl sahf and dec scas repnz (bad) xchg int3 lods (bad) notb aam inc jp pop jg lret adc (bad) or and jge cli push xchg xor jo add xchg test mov mov cmp and ljmp out jne insl lahf pop jne inc lret stos fimul lds movhps cltd fs sbb cmp and jge push lods push outsl mov mov mov (bad) sub push dec mov add add cwtl (bad) jae xor xchg imul push and mov das xchg xor es (bad) mov push sub in jne inc and in (bad) xor pop out in fistl add sahf mov dec rorl je pop dec dec and incb mov mov sbb rorb call jg aaa jmp (bad) mov xchg out cltd adc sti pop xorl jo jae in andb and data16 cmp jp dec outsl movsl add push (bad) or xchg sar mov ss scas ss lcall sub dec mov or mov jle out sub sub jne push push pop sub stos pop das loop imul insb and in sub lret imul pop sbb inc and aas dec xchg sti inc mov add jp out lock in xor in xor sub sub mov iret add adc xchg dec mov loope inc nop sub add or mov ss mov pop pop jecxz repz jno or dec jmp (bad) mov sbb push shll mov dec pop mov pop jmp les sar loope loopne push pushf pop sub and aad inc mov sbb cmpsl push sub sub outsl push das loop dec sub imul push or aam fnstcw int3 (bad) and pop or cmp mov scas cmp jl xlat pop ss fisubl inc mov movsl sbb sbb fbld ret in jp mov inc ss mov fadd in ss movsb push or je or push aas enter push fsubrl push pushf xor mov push lods icebp sbb push leave pop mov and imul add jp mov xchg sub cmc pop and cltd cltd or fidivr cmc push test jg push mov ljmp int xor push jl iret in add fidivr or cmc inc aad inc xchg jbe sbb mov mov adc dec out pusha add sbb ror scas out xorl mov lcall aad and lcall push out das andl pop arpl fimull dec lret push or arpl int cmp sbb sahf jp push test sub and rorb add and push loop mov cli pop fcmovne pop es (bad) xchg aad and xor jmp ret or hlt (bad) jo push mov add pop fdivrl mov xor clc rorb test ja je popa loop imul push mov sbb pop lods pop and or inc or test sbb pop jge inc mov lock and loop cmp cmpsb sti xchg loope in mov mov sbb jb xchg fwait je mov (bad) into iret addr16 movsl xor xchg jne (bad) sub jae stc mov xchg cmpsl sarl call cmp adc pop addb addr16 (bad) adc leave adc jae inc jp shr int3 mov mov sbb icebp mov or mov movsb mov inc mov insb out mov inc test dec sbb es sti adc sbb or xor push xor (bad) aam call inc lcall sub out push xchg mov mov (bad) out mov sbb fwait std adc cmc mov test movsb jns nop pusha adc cs hlt jg movsb mov cmpsl das lret xor imul push (bad) aas mov clc (bad) popa inc (bad) leave (bad) repz mov lret sbb fdiv jge (bad) mov mov sbb adc sbb bound scas cmp popf sbb lahf cli pop jle jmp mov mov sbbl lret mov and mov mov cmp dec pop sub mov add add mov or shl aaa imull push lret push push cmp (bad) aam stc mov push js mov test iret sub stc push aaa clc das jno ret lods lret mov repnz ja (bad) out in add push clc in dec adc pop jne xor lods adc aad xor sub sbb aam cs sub in sti in push add daa stc mov jns pop inc jbe xchg cmpsl jecxz xchg mov sbb xchg add insb pop daa (bad) mov cmp hlt rcrl (bad) jmp xchg mov and dec mov call jl imul movsl sbb cltd sti mov rcrb in xor lock ror xchg inc dec push mov rorb int3 out imul mov cli add mov sub pop push test cmc pusha popa gs xor (bad) and pop push mov enter jb leave xor xchg or xor mov sub pop popf jge loope lret inc gs imul inc or popa dec mov (bad) ficompl or (bad) (bad) sbb movsl mov pop mov js mov xor imul ret cmpsl mov aam stos fwait clc pop mov sub test lahf jecxz sbb stc pop sbb pop or dec hlt sub xchg lods sbb enter aas daa cmp mov scas xchg inc inc popa cmpsb cmp loop push aad negl sub xor out pop fwait mov movsl dec daa flds ss jle cld and inc seto pop fistpll add arpl mov push mov xor adcl insb movsb jge xchg inc arpl lods inc dec and sub (bad) mov push imul mov sub (bad) jbe and enter cmp stos jns inc jo imul (bad) pop subl push lret cmpsb inc mov outsb (bad) into push xchg cmpsl sub cmpsl es (bad) mov out adc cmp dec rcr inc xor mov in xchg or mov cld cltd into inc mov jne add pop pop jmp pop mov js cmp mov ljmp movsl and mov fmuls or (bad) data16 ffree push or stos clc lock jp movsb add mov test ljmp movsl lods add (bad) add cmp pop xor shrl adc lahf movsl lahf add mov sbb lret bound ret mov inc push stc es (bad) pushl dec repnz adc sahf push je xor inc mov (bad) mov adc out mov enter push cmp cltd fsubs jo imul es aaa adc pop mov mov jecxz or push cmpl aaa divl mov mov or flds call inc ljmp adc dec mov movsb mov aam mov lds mov inc pop xchg mov ret cmp or adc xorb and push insl mov iretw movsl jg mov (bad) mov lahf cmp pop pop push sarb jo add into jmp and outsb (bad) std mov daa in and jne (bad) mov cmp sub adc ja fbstp sub rorl mov (bad) int3 xorl in cmp mov mov xchg inc test jl jne (bad) loope jl jg sti jg xor cmc int3 inc (bad) xor (bad) jo pop sub push iret (bad) cmp or mov popa mov gs inc inc iret push shr jg pop es iret std dec push pmaxub cmp xor cltd push inc and fs cmp flds add inc repnz push (bad) cld push dec dec mov (bad) or mov sarl xor lret jecxz fistl cmp cmp jg lock xor mov popf ja jo add insl adc and ret out ret lret jae and or imull dec jmp cmpsb push int3 lret xor dec cmc dec std mov add pop push (bad) or push popa mov fsubrl subl repz sub cs mov jne pop rcl mov es je jno cmp add imul or aam in lahf repnz repz jmp fincstp mov sub je (bad) fimull jb jnp movsb jae pop les das pop daa rol jge xchg mov and sub mov mov popf cmp cmc popf cltd sbb dec mov mov inc hlt outsb (bad) lock lret test ficoml or mov jnp mov call gs inc outsb int push rclb and jns lcall lods loop mov sbb dec aas aad dec jns push (bad) fcmovu pop les ja and clc loop add sbb enter xor cmp xor pop cmc sbb sbb fadd aad mov push inc mov mov jge or test pop cwtl jnp (bad) in iret add aad mov aad orl ja mov stos pop adc (bad) cmp lods xchg in sti sbb addl jo aas dec and stos or in rcrl (bad) mov scas mov sarb push shrl out faddl and loop mov jecxz gs popa sbb rcll mull popf adc cmp inc inc lods jmp pop cli add mov mov sub xor movsl iret cmp scas sub jl (bad) dec daa insb cwtl or lahf out sbb add sub fldcw and ss mov xor push mov sahf jne les mov cld (bad) rorb movsl mov ret pop adc xrelease sub mov in (bad) adcb in or fistpll jne jnp sbb shll ret lret mov bound cs idivl and adc jl mov pop ficom (bad) aas fwait idiv orb leave adc adc jns or pop mov popa dec jle fimul sub leave rorl addl inc fmuls push add inc scas outsb in jne jae addl mov mov cmp mov mov mov pop dec cld js cmp (bad) push add mov (bad) mov adc jge adc cmpsl jmp dec ss stc gs stos mov xlat mov fwait sbb fadds cmp in xchg pop sub cltd jmp pushf test das pop push inc cmp jns cmp sbb fdivrp imul int3 fmul mov add push add inc jmp aad popa jg xchg mov add imul add mov repnz out notl sub xchg or in (bad) pushl fstps xchg repz cmp lock (bad) adc dec inc lahf out stos mov xchg jmp lret andl ret sub stos cld lods ds (bad) imul mov pop sti lock paddusb pushf inc cmpsl mov ret jnp lea (bad) xor (bad) dec add jl imulb cmp fbld orl stos popf mov leave sbb sti lods jge sahf (bad) jae inc lods lea dec adc (bad) out mov pop outsb aad stc mov adc cmp sar jns dec pop ficompl inc xor xchg jecxz iret mov sbb adc flds push cmp ficompl (bad) and data16 xlat fs out rcl push inc cli mov fnstsw jnp sbb and scas addr16 insl lods test xlat inc jae out aad mov cltd jo popf dec xchg sub insl adc push (bad) in subl movl pop sbb xchg or dec stos cld fist sbb imull sti clc mov pushf jae cli jns sbb mov or cmp or mov add xor ret aam mov xor sub xor mov fs pop add sbb fcomi mov das adc sub int add repz (bad) add decl sub inc inc jb dec adc pop inc in mov cli dec jge sbb pop shl sbb sub or movsb movsb cmp mov in push mov mov fs mov jne sub add out push pushf lods cmp repz inc shl test shlb sub push adc sahf mov sub fbstp jno pop clc je call adc popf mov and fmul or mov jno push enter xchg jmp sbb negb dec sbb gs fcmove int3 and inc adc repz enter lcall cli icebp cmp or leave cs clc or nop popa cli mov xor int3 mov cmp push mov jae mov jnp daa shrb dec xchg idivl fs jne cmpl sbb sbb inc aas cltd mov mov xor sub inc std jecxz das mov push rcl lods cli lcall inc jbe dec in test sbb jns mov push adc iret outsb out pop movsl in mov ds inc lret clc and popf jbe sbb leave mov insl mov mov cmp mov cmc sbb dec fdivl mov (bad) out (bad) (bad) aaa clc xchg or jg sub jmp dec fdivp je pop test mov fstps lret xchg mov jg cli push iret pop adc jl mov dec popa add inc push gs lock jns ja xchg daa push cmp and lret sbb mov popf xor push mov push xchg push ljmp push js je movl rcl sbb js adc pop jae lret and cmp movsl psrlq jg pop out rcll (bad) mov int loop xor scas in cmp sub cmpl mov push xchg ja mov ret adc mov mov cmp xor loop inc sbb in push sub jne jns mov cmp out (bad) stc js cmc stos or mov mov xchg cmp jo mov hlt inc jmp decb xor ret iret sub (bad) fstps leave pop scas xor and (bad) jo mov add call out test stc mov dec cmp dec dec jne and or add and push stos rcrb (bad) scas xor outsl add jle jbe mov enter test in cmpl push aaa popa mov cmp mov (bad) fcomip lock and shrb call add arpl mov bound nop lcall push mov dec loopne sbb add fist aas insl cli ljmp push sub mov pop lret clc jle push mov cld sbb xchg testl enter push inc jmp mov pushf adc sbb xor or push sbb cmp (bad) mov bound add cmp popf lcall mov jl xchg and out push (bad) dec shrb inc push fsts sarb or and out sub cmpl test repz push push (bad) mov arpl lock sub dec inc sub mov cmc dec xor aad jg shlb pop sub pop jp and (bad) imul and sahf dec push jno fnstsw mov cli mov and ljmp sub xchg inc pop aaa push xor sbb jns jo cmp sbb cmp nop aas add popf sbb ljmp fild call jmp jp cmp inc fcoms addr16 jbe out add (bad) push insb ljmp pushf dec (bad) mov lcall inc push jmp neg pop (bad) sbb adc xor inc pop xchg cld pop xchg cmpsl mov lds mov out adc clc dec int3 cmp mov cmpsl inc out cwtl test lods mov mov xchg ret es xlat lods and lcall test std (bad) mov push push mov or mov mov ret std or sub pop les cmpsb lea xchg pop aaa push inc imull lea dec lea gs mov cmp inc (bad) je add loop jbe cli nop loop (bad) loop pusha pop inc jmp mov ss mov imull pop stc sbb rcl jbe into jmp fimul push xchg pop adc cmp lea in dec pop jmp mov movsl sahf jmp lods mov sar mov push je (bad) fsubr push mov daa jle lods mov sbb ret cltd push dec loop adc ja push js js outsl call jp push lods imul ret imul adc mov pusha rcr jp,pt scas sbb out aaa ljmp inc fstpl cld or pop gs leave sbb mov lds (bad) je int3 ret int ficom or notb iret std out xchg daa push and loope jl and repz cmp push adc cmp dec sahf out imulb into and cmp inc add sub dec sub sbb mov stc icebp mov lds push loop mov aad push fwait mov into pop lock enter ds mov (bad) cmpsl mov iret dec xchg movsb lods mov cmpsb push mov pop ss xchg jne addr16 imul or std fwait loope jns nop inc dec sahf aas inc ljmp dec fistpll sarb stos (bad) sbb test jg fxam push mov es iret jge out mov lret movsl xor insl loop lcall fdivrp xor sub cmp cli push addl dec adc stos icebp push nop test add (bad) scas stos daa xchg lods jmp (bad) movsb addr16 leave stos fsub pop je aam xor pop mov cmp popf mov test cmc into outsb (bad) int3 pop shl mov push sub mov (bad) and or popf push sbb insl push inc repz cmc scas lret push test xor mov inc mov lds fldl shrl cltd lds std xchg add and push in or insb xchg dec cld lahf fcomip xor out repnz test jecxz add stos push mov out frstor daa mul sub mov prefetchw xor adc push fsts mov fstps aad mov fidivr xchg fs out (bad) fs sub imul (bad) jns dec mov sub js mov xlat je xchg leave movsb scas insl mov pop (bad) imul in push pushf jge xchg ljmp int xchg cmp ret test seta daa outsb out mov dec pop test in sub mov jl mov test inc pop adc xor iret jle sub call dec add scas jb pop (bad) inc rol addr16 loope mov stc aaa inc fmull pop insb sub or pushl js sub pop mov cld fmul mov scas js cltd mov loopne add cmp lock out jne jmp add xchg cmp xlat es sbb jg shrl test push xchg test mov ljmp push das lods mov inc push sbb jle adc xchg adc (bad) jb push jge xor shll sbb push jne in pop xlat inc mov out jp rcrb bound mov dec push mov popa cltd jb imul das jecxz mov gs jmp push loopne ljmp cmc imul fisubr (bad) and cmp nop (bad) divb sbb mov aas lea into xchg xchg jns mov test jbe inc inc push push jl xor test jle xchg popa or cld lret xlat xor movsl out xchg ret imul jle,pt cmp out sbb mov std adc push pop faddl aad fs leave mov jno shr sub lret cmp add scas add sub test push loope imul (bad) bound jae xchg loope or adc jecxz push shrl (bad) mov push mov scas xchg rorl dec add mov scas ss in pop sub fdivl mov sti (bad) das orb movsb cmpsb mov fisttpll sbb out jle imul cmc and ljmp stos push (bad) in pop outsl test and jno mov xor or sbb xchg repnz les adc test or ss (bad) (bad) mov jmp xchg push xchg rcl out ss rolb push inc mov sub aas inc lea push jge nop xchg icebp in (bad) cmp and outsl jb or out movsb push push xchg xchg ret push js fstpl jmp aam lcall mov adc jae jb xchg xlat inc xorb shll lret inc or rcrb enter (bad) lret loope add mov addl ja or cmc outsl daa mov push mov sub and outsb (bad) jecxz rolb fst mov mov outsl pop (bad) xchg mov repnz lds shr xchg jge and and adc pusha lods cmp insb (bad) fsubl test mov xor test (bad) iret or clc (bad) lea pop fidiv xchg push add clc insl pop into fistp lret mov add aam call out pop cmpsb add fimull push orl fsubrs sbb xchg or mov mov add adc dec das jnp into fldenv cmp outsb repz xchg test loop daa pop das inc xchg and je shr mov xor xchg (bad) jno (bad) notb (bad) (bad) mov mov rorb leave jnp not cmpsl pop mov cmc lcall and adc (bad) out movsl jl sub fildll mov loopne pop pop call iret pop insl in cmpsl sbb or rorb ljmp mov ss xchg mov add jnp pop pop mov icebp es cmpsl jle cmpsb imul pop sahf add pop cwtl sbb dec mov mov les cmpsl xchg add fiaddl lea popa test (bad) lcall xor das mov and ja fldenv inc sar adc xor push stos or in out pushf mov out sub aaa pop sbb (bad) pop dec push sub xor and jg inc pop sbb sahf or std shll dec ja loop adc roll aad int3 pop fwait cmp ret mov loope addb inc cltd dec aaa enter pushf mov jno jns ret mov nop inc adc out mov aaa dec fs dec inc les sbb cltd push jmp add aaa xchg scas out mov jno pop icebp test xchg ljmp sub pop std imul dec popa fldl lock ss xchg or bound push out xor xchg cmp jecxz xchg outsb push movsb lds out mov adc dec les pop ja xchg push pop sub cs dec faddl push xchg out mov imul and fwait rcll push outsl out mov add ret add aas imul mov mov daa pop mov or cli pusha aad or jb mov jo movsb (bad) stos pusha inc xchg mov fidiv add mov fdivr fs or outsb test or push dec jl ja mov jns sub movsl inc in add clc in mov outsb or or movsl fst (bad) es imul lret xlat inc hlt loopne or shll push or (bad) xor cld out cmc pop jae js sbb loop jmp lods inc or jae lea fcomp or inc add xchg pushf movsb fwait (bad) loopne dec xor jp xlat mov xchg mov xor cmp hlt dec pop les loop icebp (bad) lock fs in adc aam mov and adc pop cmpsb sbb dec pop repnz inc imul and pop cmp inc xchg inc aam int popa mov xchg gs aad adc (bad) jl mov inc push stos out jo,pt cmp sub pop into sbb sbb cmc jno es insl in clc cmp sub loopne addl dec retw sbb repz jbe pushf dec jno icebp pop stos sbb dec ficompl arpl pop test fstps adc lret sub repz pusha (bad) mov nop insl idivb cwtl dec add jns (bad) (bad) cld stos dec mov inc movsl inc (bad) mov jp outsl push insb cmp mov les hlt xor call insb adc pusha into cmp imul pop adc fimull xchg mov and fstl jle fldl2t jnp gs push aas add test push ret xchg and push sub and cmp inc nop dec dec fcmove popa ret outsb or push std push jo dec sbb ss jle cmpsb add pop leave jge and push ret jg call aad std xchg sbb in push dec sub aad lods push out nop insb fistl pop cmc ljmp mov sbb insb gs cmp dec inc mov and or popf sbb pusha lods jnp aaa mov xor adc es jb cmp jo aas mov (bad) mov fwait mov mov jg (bad) mov cmp mov and sbb into dec xchg pop daa lea pushf in rolb mov add push dec mov cld cmp add mov adc sub mov pop std imul (bad) stos (bad) cwtl divb dec fildll (bad) dec pop inc loop xchg icebp push call (bad) jmp cmp in cmp pop pusha and mov fisubl divb pusha fiaddl dec mov cmp inc cmpsl sub fcomps and inc dec sbb scas xchg or or jge dec (bad) mov psraw in addr16 lds xor adc adc lret jno movsl adc jl or cmp (bad) int3 (bad) fs add fcoml dec mov add fidivr out add hlt iret xchg mov cmp jo jl cmp inc fwait dec and in (bad) fmul jmp cmp push jae jmp and movsb sbb mov mov sub jle and mov jmp cli mov mov pushf pop mov mov cmc jecxz sub fadds gs xor or fwait adc fwait stc (bad) jo push in mov std in sub scas push je and fnstenv cmp notb bound fildll out push xchg jmp fildll xchg add popa inc cs jae and maskmovq (bad) mov (bad) sarl and inc cli pop mov sub dec push fsubl fxch sub and imul sub (bad) stos or sub xchg pop or cmp mov mov outsl mov or repz dec flds faddl fs and lahf call jmp loop lahf ss les es lret out push push mov ja dec lock repz in add adc fldenv push mov iret int xchg vmptrst shlb movsb sub shl iret stos fcoml mov les nopl dec and adc jb inc ret out outsb ljmp out jmp nop cmpsb neg lret lahf pusha push es lock fsubrp lcall jecxz push mov mov (bad) pop aad cmp add negl out sub mov add (bad) insb out cmp mov bound xchg aam mov fldcw jl insb mov push stos inc leave aas lock or test into lods mov pop je push ror xor lock jmp lcall sti sub lret cmp or add sbb loop push jge lahf cmp cmpl popa cmpsb adc dec repz inc jle imul std outsl lods les jmp dec mov (bad) cs addr16 xor add out pusha jo scas (bad) mov std mov fbld mov dec pushf inc mov xchg ds mov dec sub fwait dec imul xor (bad) scas sbb pop (bad) jg stos lock das int lret repz (bad) dec aaa movsb push lret jmp lret movsl stc (bad) movsl ds pushf arpl xor inc lret or mov xchg mov jl mov test in fwait mov fildl jae aaa xchg pop lret incl sub fiaddl cli jb or fidivl mov addl jp adc pop ja xchg or push lods jne pop and dec mov xchg imul jns push aas sbb cmp (bad) mov xchg lods adc push mov push test enter repnz mov push xchg sbb test add xor arpl lock (bad) fmuls cmp outsl add sbb pop adc ss les xchg fistpll push adc or rcl mov dec fcompl pop ljmp push jge jmp adc cli mov scas push std pop scas fbstp in addl jns adc imul fs je dec int cs fldt sub insb mov pop add imul (bad) insl scas fldl sahf dec (bad) imul mov mov sub ljmp scas mov ds and cli push xor scas rorb rol and xchg std outsl insl (bad) pushf push int dec and imul xchg pop mov sbb pushf mov lahf xchg and lret lods dec aam cmc daa or imul lss pop lods addr16 dec mov mov inc rol push pop mov dec outsb sub gs push adc aad imul fsubrs bound fld mov mov dec add mov add rorl dec ds repnz sub jp and push (bad) movb add xor cmp fimull negb add adc sub test push in pop mov pop je mov mov mov xlat sarb cmc xlat xchg xor jo std sub mov mov xchg data16 pusha addr16 andl in push jnp leave sub inc xchg int3 aaa inc adc mov mov add or pop xchg in daa movsl sbb mov clc add and xchg inc fidivrl inc xchg xor pop movl lock add and push adc or add loope mov xor daa clc stc insb divl int mov mov sub jo imul enter xor dec arpl xchg push cmp mov out push lret sahf outsl ljmp (bad) movups int3 mov out jp dec push mov in adc push in insl adc sbb mov cwtl sbb pop cmp sub ret push xchg add loop cmp loopne insl aad jno pop addr16 fldlg2 cmp pushf jae hlt popa iret mov pop adc push sub cmpsb sahf insl sbb dec mov sub mov scas in sti outsb nop xchg (bad) jecxz mov icebp cmp xor pop push stos cld sarb sub mov add push mov xor int inc lcall sbb cld mov out xchg add clc fdivp daa mov cmpsb push jbe ret push xchg jno fstps sub cmp cli sub cmp or mov gs sarl sub mov mov in xchg dec jp jmp cld add xor lret in add test lcall cmpsb fs adc lds mov xor lods mov cmp jae in pop aas popf jbe push xchg xchg mov sbb pop mov fcmovbe jb popf movsb mov pop ret and cmpl fwait leave xchg push sub push push xor loopne jle popa xchg loope inc loopne xchg fdiv add mov ret jb push out xor ret inc out sti xchg lcall (bad) dec inc scas jmp test mov imul adc sbb ja ret mov loop inc loop js mov out int jnp and add cmpsl cltd les cld hlt (bad) scas dec ljmp daa int loope leave add push js lcall adc aaa mov test lods aaa inc push sub jo cli and lds xchg stc xor jae cli cmp cmp xor xchg clc lods mov fs jno mov push popf push fisubrl (bad) fiaddl mov repz vpcmpeqd mov lds js stos add mov pop aam jae jns,pn xchg and into push test (bad) xor lret (bad) jecxz lock dec dec (bad) stos xchg jecxz rol inc push scas sub pop test mov xor mov test xchg dec jecxz dec std push sub aas inc mov pushf je and popa jo inc xor lahf mov fldcw jl in bound sub in mov pushf add test adc pop mov loop ss out jge notb jecxz test ds inc mov loope stos lods xor sub call mov sbb test cmp xor push int (bad) rorl inc icebp dec pop mov push mov enter adc pop stos iret mov arpl fnstcw dec jmp add hlt xchg xchg add int in fidiv lods and jae repnz xchg test fsubrl (bad) xor jbe (bad) adc xor add je inc pop rclb pop mov icebp inc js mov insl cli cmpsb inc mov jmp mov mov hlt cmpsb jge mov jecxz pop inc mov mov inc mov fisubl mov iret stos xchg mov lock pushf and jge push insb fsubp xchg es push cmp outsb cmp add gs (bad) cld aad inc (bad) mov aas adc imul in movntq or stos clc cmpsb popa xor pop ficom jge pushf mov insb jbe imul popf mulb cmp daa arpl pop add les int pop and inc push pop inc shll leave cltd pop cmp mov leave or jp hlt dec lods xor xlat adc cld inc jmp (bad) and pushf sub pop push fnsave sarl or mov and test js xchg fsub push stc xchg (bad) and pop outsl ljmp imul fstps mov xchg sub mov fs shrd jg fidivr ss cmc cmpsb shll lea test loopne jmp pop dec push or loopne cltd arpl das sbb xchg push or add mov (bad) aaa int mov fildl not loop clc fistl jae sbb sbb aad mov into lret mov and xchg ficompl push cmp mov loop sub pop mov cmpsb jg shrl aaa xor imul shl test sbb add sahf xor (bad) mov pop xchg pop je mov mov js jmp int3 inc mov cmpsb js ret dec in and push cmp cld and cmp push sti (bad) xchg fbstp xor test enter pop aas and pop mov (bad) enter xchg push ret sub lods aaa jno ret bound pusha xchg std test ret dec hlt jns ljmp push subb push push xchg or add fstpt ja les (bad) jge shr pop push xchg jo cli (bad) mov cmp fwait fwait mov dec pop and mov adc mov push inc sub adc shr es dec dec (bad) lcall inc arpl sub lods js lods pop popa push pop sti add loope (bad) stos dec lods mov cld insl pusha push sbb inc jns pop ret int jo mov ja outsb test rcrl aam xor mov inc ja rorb insb inc jle pop mov inc out js stc xor in push aad inc in cmp gs pop jmp pop stos leave inc stc iret inc jmp push fcmovnbe fsubl pop das int3 and ss mov mov lods sbb xor cmpsb (bad) out clc xor pushl xchg imul sahf fnop ja sbb cs insb fucomi mov sahf mov in xchg dec pop je jbe jbe sbbl rolb sbb xchg int3 mov mov lea jmp pop inc pop int3 repz test repnz stc pop push (bad) ljmp popa aam ja nop test testl loope mov inc insl or push in es dec popf xorb punpckldq cmpsb push xchg les add stos aam jno mov push push adc jecxz imul mov js iret jbe inc adc mov jge das lock enter test or adc jg into loop xchg out mov or or mov adc xchg jmp (bad) nop mov jge push (bad) jl mov insb shll fidiv sbb mov sar mov or pop pop (bad) cmp pop cmc loopne xor mov mov clc xor and std inc xchg and pop cbtw lahf int3 test insl outsb mov scas sub sub adc scas daa cmc mov clc jmp push (bad) lea cmp les pop or into pop es imul jo fsubs lods and push loope cs movsb mov mov cmp scas sub cs les retw out xor in movb sub (bad) cli imul sub mov cmp movsb mov hlt or jg jle cmp ret xchg jge xchg in das in pop negb cmc add sbb push cmp push or pop out (bad) cmpsb inc nopl fsubrl std (bad) sti ret sbb cli into mov outsl ret jp jle push sbb cmp sbb add test sub scas add sbb and mov push mov jecxz or jle xor aam sub decl mov pusha enter notl dec cltd fldlg2 stos scas fbld xchg cmc add xchg hlt and jl and dec push cmpsl in mov mov adc add xor dec int3 mov lcall sbb loopne xor push add mov jle stos jbe call inc pusha jg push mov les iret sahf out push xchg and ljmp jp mov cli les call mov xchg sbb cltd adc or add sahf and repz faddl es outsl mov movsl cld fsubrl mov xchg mov sub mov test movsb mov rorl xchg or jp add (bad) xchg xchg xor lds rcrb (bad) xchg mov pop jmp clc call pop mov leave jp lods dec in jmp loope pop jp pop stos jne mov add call push push mov test iret aad inc mov add inc call movsb mov mov (bad) inc add (bad) or loopne std mov xchg rcll mov mov lods popf mov cli mov pop xchg pop mov lea xor test push push mov dec cltd jo inc stc pop and add pusha sti adc sti jnp xchg lods je cmp (bad) out aaa pushf test jmp fadd (bad) hlt int3 jge pop add jecxz lock ja (bad) lock and push cmc loop lret adc xor add or (bad) les popa add (bad) jae add mov jmp add fcomps sub in out cmp or insb lcall pop jecxz mov jae sarb push push mov subl push sbb pop cmp jmp test daa xor pop (bad) (bad) mov and jne mov cld fs test xchg rorl mov or sub jg or push sub out repnz fs into ja test out adc es into mov jp add andl ficomp mov sub movsl repnz jle leave js cs xor adc dec scas dec cmc xor mov out push mov inc (bad) jb or fnop in or in cmp push out jle sbb inc movl pop clc push cmc jo xor mov je mov and loop push call (bad) bound mov xchg xchg sub das jmp rol in scas jge or je mov scas dec push add imul cmpsl out rcrb in pop inc mov out test inc push pusha or jmp loop stos leave cmc imul sbb pop mov outsl icebp xchg mov orb insb into rorl sub or jp mov clc pop loop dec loop (bad) sub inc dec jge notb cltd out and inc sub inc imul jne dec dec pusha data16 mov repz bound pop insb repnz test adc (bad) cli lret and cld add pop cmp or mov push cmp ret mov push pop outsb arpl dec adc out xor inc loope push shrl dec sbb (bad) mov movl mov mov mov int3 sbb in fs jmp mov outsl out out and inc fsubs mov mov lcall xchg mov jmp sub sti int3 xchg outsl mov xchg push stc xor cmp inc icebp or jo cmc add mov inc nop stos fwait movsb dec xchg push push pusha push add jno sahf mov outsb jmp lock stos imul push fcoms ret push dec jnp jbe xor mov outsl popa mov or out gs test in das outsl jmp outsb cmpsb mov push lret ret cmpsl scas ja outsb (bad) icebp sbb dec xchg sbb outsl pop cmpsl test xor dec je jp stos out dec rcrb mov xor data16 les add ffreep in fdivrs inc fnstcw lods idivl flds movsl xchg pop mov jp adc iret out xor jne adc sahf and imul add jae clc shrb out lea repz insl inc push mov mov testb pop xor inc (bad) mov aam jns mov das cmp insl mov xlat pop adc push sahf cli push loope mov inc inc jns adc dec cmp out aad pushf (bad) out xor mov jne mov cs (bad) clc (bad) push out sbb and (bad) pop lea ret xchg xor cmpsl test add js dec lcall test inc mov dec cmp jge loopne pop or adc fidivrl add movsl xchg mov mov fsubs xchg mov ficompl rcrl and loop xchg leave cmp add data16 test fimul xor xor mov (bad) sub mov roll push sbb lock xchg icebp pop in lret push (bad) lock mov xor (bad) lock xchg nop test sub jae stc lea je stos imul xor cmpsl sbb mov pop mov push pop mov in insb ja xor sahf das lea cmpsb repnz pop cmp fcoml test pop (bad) push dec cli xor or mov gs negl gs lods cmp push sub jmp shll out (bad) cld (bad) mov mov xor pop adc pop jb push movsb orb dec test scas ror pop jg jo inc (bad) pop lret orb ja out mov pusha jmp outsb popl nop call cs or shll popf int xchg push out mov cmp mov (bad) fnstenv icebp push jo jns loopne inc jno dec pop mov dec xchg sbb cmpsl xor ja aad insl sti mov inc popf and cmp leave dec xor dec subl jge sti es lea sarb jle ja xor in xchg movsl pop in push mov mov mov test jae stc movsl out pop (bad) out mov sbb shlb or ss ret and leave sub nop cmp or sbb inc jnp or gs rcrb stc out lock les fildl test sbb xchg sti into (bad) jne daa dec pop icebp sbb bound fdivr cld mov jo aaa xchg jb push jbe decb cmp popf cmp ret and or jmp in repz sub mov xor add inc pop fimull cmpsl push pop mov insl cmp inc test xchg imul mov push mov sub mov jns enter push call shrb add mov int3 aaa sub cltd or arpl insb das mov icebp cmpsb bound stos jo xchg cs jo shll xor stos xor push xchg pop dec mov sbb int out stc lahf jno cmpsb add xchg inc jl adc add cmp sahf aas jge adc pop ret mov mov data16 ljmp cmp mov out sahf mov and sahf push icebp or ret mov and sub arpl push mov jge clc or jnp jmp repz xchg or cmp pusha ja push incb push sbb insl cs inc add sbb or aas mov popa flds popf sti pushf stos inc fisttpl jb pop roll ret and sub cmpsb or jno mov loop pop mov jo dec mov and rcrl cmp adc ja cmc int push mov lods add mov mov in cmp lods (bad) jge mov aam dec ret decb xchg inc ss mov je jns fwait sub xchg mov inc movsb bound aam jbe fwait jne (bad) push loope std dec cmp bound mov fnstsw adc ds sub mov mov lret jecxz rolb pushf (bad) mov sbb lret into lods rorb aas stc push pop or push lea jecxz lock xchg mov mov sti (bad) loope loopne xchg jl cmp mov and mov push inc insb flds mov xor mov cli mov or dec test and and push xchg loope mov or sub mulb int3 popf (bad) pop out and pop orb pop jl in (bad) dec and stos nop mov inc fldt and mov (bad) push mov xchg dec mov js shl lods data16 and xchg mov rclb dec idivl jns and stos or data16 rorb movsl inc push call fcomps test add xchg sub and dec mov mov test add push jo fild push or or maxps js inc and inc and stc push xchg pop (bad) ficom pop fmul out and aas insl jmp addr16 aad lahf repz rcrb fisubrl push cmp pop insl cmp scas or dec lret bound fildl xchg clc push mov cmp xchg mov cmp fwait jo sub adc (bad) mov (bad) outsl and in test push fbld sbb pop mov xor insl adc lods mov mov sub and dec sahf mov pusha jne frstor push call ss fnstcw stos lcall insb xor stc ret cmp or mov fdiv sub cwtl gs shll rorl push and pop sub enter shlb add sub dec popa add call out das fimull mov lods mov fs dec and stos mov in aam pop jns pop leave addr16 test fwait mov adc repnz (bad) (bad) sti ret jne jp mov push mov mov push push mov xchg mov cmp sub jge mov xchg lods inc mov dec jle imul lret popf push inc cmp aam dec mov pop mov mov or dec (bad) dec inc cmp xchg fidivr cmp sbb push or lock add jge je fs hlt xor dec iret cmpsl in adc fucomp cmp out in mov or sbb sbbl add cmc repz fstps mov pop mov sub rorl lds dec ds (bad) test sbbl fsubrl and (bad) imul addr16 into imul cmp xor push adc cmp sub fucompp jl std cmp pusha lcall ficompl inc dec jl cld inc in (bad) aad mov or pop data16 inc xlat jle call pop data16 jo scas adc outsl mov xchg jns mov (bad) fstl lods pop lods adc js mov cmc rcll inc inc popf shl adc addr16 insb inc pop ljmp jge cs dec sbb add or (bad) lcall jg sbb or sub cli arpl test (bad) mov (bad) (bad) test and jne cmp xchg dec push aas or outsb xor add lods add lea xchg xchg lds cli pop jp (bad) or mov inc aas adc stos mov lock xor pushf popa push popa xchg addr16 popa push add movsb scas lret (bad) sub inc rcll test xor icebp mov dec dec inc and push mov add rolb mov jae lods xchg fwait sahf adc xchg sbbl mov daa jbe dec mov mov ja js pop aaa fbld jg stc fbstp (bad) es push sbb fisttp mov jg push xchg mov pusha loop xor jns cmp stos ret cmp movsl in daa out mov popa xchg fimul insl daa push sti aam mov hlt mov lahf sar outsl imul pop lret mov ljmp pop and and (bad) sub jne jb pop lods add mov ja pop mov inc test (bad) xor leave rcr pop loop movsb orb add mov outsb insb cltd (bad) (bad) jo adc xlat mov imul stos cs fsubrl dec pop jge (bad) in imul repz fcompl sbb sahf push inc xor clc add frstor imul mov cmc sub xor fwait mov leave (bad) fisttpl lods dec xchg push jbe fcompl adc aad sbb loopne xchg push scas in cmc xchg push sbb cmp imul mov sub lods adc int3 add test in ss push cmp mov enter pop push (bad) xchg les or dec enter lret (bad) jmp enter scas faddl xlat das xchg into jl add int popf shlb inc mov not jp je lds dec push dec sahf test dec fstpl cmp inc add addr16 movsb lret inc push imul add push je lock add jne lret ljmp jg je in mov or test mov cmp lret in loope push add jne jge bound divl dec add cmp push mov enter inc int3 loop outsb jns stc dec push daa sub call mov dec dec sbb dec xchg mov mov sub xchg cmp testl jb lea mov xchg testb push cli xchg stc push or xchg mov cs mov dec (bad) and negl jae mov js xor lds dec xchg popf mov (bad) add lret mov cld ja sub sub push push jns push imul xchg mov jno adcb adc fimull fmuls jne bound repz jbe aaa inc outsb (bad) lock add dec sbbl lods int pop dec iret jp xor mov dec push and xor fadd mov sub or mov sbb cmp test inc out rcl aam pop cmpsl loope call fimul nop rclb xchg (bad) mov lods mov mov jmp dec lret ja mov push into sub bound inc xchg mov jnp ljmp mov (bad) cmc fcompl fs lods int fmuls xchg js sarb icebp pushf mov (bad) push mov and arpl mulb hlt mov sahf in or jnp aam stos mov out std mov out push xchg movsb xlat cmpsl push mov test aad xchg divl mov xor add xor int adc adc xchg sub sbb stos out add cld dec insb lock inc ja jmp push int sbb or inc iret push pop dec fdivrs repnz mov xchg ja fisub jmp movsb adc dec inc and dec scas xchg nop mov dec loope mov mov jns mov test enter cmp mov aam outsl mov xchg test mov and cmpsl in adc cli decb xor mov (bad) mov lea aam (bad) rcr lcall cmp and std pop nop mov test fstl or addl int jecxz stos sbb frstor mov dec lcall dec adc out sahf call ss pop inc jbe jno dec cmp sbb inc push mov enter or lret adc lods mov insl ds lods cli sub mov sub mov test fnstcw push jl insl adc xchg aaa or sbb (bad) xchg lret push in add (bad) mov xor out push dec (bad) data16 xor cmp mov adc mov imul fimull fs sub xchg popf popl mov hlt mov std jmp dec scas push ljmp fdivr push call jp cli cmp or pop cmpl jp jo imul pop inc fbstp xor add daa adc js sbb popf popf lret sbb call cmp ljmp xor in sbb jecxz insb xchg enter mov inc sub call xor pop fwait xlat (bad) ds jl and and jg test nop inc jbe (bad) xchg imul mov pusha jge push add jno and fstpt push push sti dec pop mov imul mov gs out sub pop mov push lret aad xorb dec or outsb jne in cmpl and and add pop test sub sahf (bad) push dec push lock psubd sbb aad xchg xchg mov or mov cmp outsl push mov sub loopne es addr16 inc cmpsl loop sbb jle fnstsw cmp into mov xchg pop jbe or sar mov ficom mov push mov imul pop fstps push sbb shrb lds cltd lea decl push pop mov and jl and mov dec adc push aas xchg popf or cwtl mov out add icebp dec sbb in mov push and mov data16 incb jmp jne mov jae loopne fcoms addl sub (bad) in inc lds sbb push popf add push jmp mov insb and mov pop cmp mov xlat ret clc fisttpl out out push cmc imul push rcll and cmp stos scas inc pop or fcomp mov in mov dec inc mov xchg fwait and inc dec adc les adc adc test sub cmpsb xchg mov jo adc out sbb mov push sub insl dec popf addl jb lcall ljmp test ret xchg (bad) in add push push mov and or adc sbb pop cmpl call mov (bad) aam adc int and push mov lea mov cmp and pop dec xchg jecxz jno pop push pop mov dec mov popa inc (bad) jecxz js iret cmpsb int3 scas cmp mov push or (bad) ljmp inc mov loop push fnstcw test decl pop cmp push inc cmp cmp insb mov test push stos pop or mov xchg ret fidivrl xchg lock sbb ficomp test (bad) mov in jp lret inc fwait addr16 mov push mov fcoms test sub dec push jle xor ds aaa push les sub push or jbe movsb jae sbb and xchg xor arpl clc pop lahf mov pop xchg daa popa sub sub std pusha dec gs es mov into xor das daa sahf imul xchg in jae je adc sahf and push data16 mov aad inc and movsb xor popa xor push xorl adc mov out scas xor cld pushf lea out and into sub loope addl ret rcl fs fs push int3 adc fimul (bad) mov cmpsb sub pop ljmp jecxz aam das jnp es pop pop outsl sub cmp inc hlt mov push pop mov xor arpl dec (bad) out sub lahf pop pop lahf fsubl pusha mov mov push ljmp fnsave xor rcrl adc jne adc dec xor jecxz imul data16 rorl jl xchg and and sbb dec adc enter inc cmp jmp sbb pop jecxz adc loope sbb dec cmpsb dec addr16 or call gs jb pop dec js imul cwtl add nopl sbb loop cmp stc int3 into fwait test repnz rcr sbb mov orb fcoml scas xor sub imul pop inc dec outsb into sahf cmp out sub sub dec cwtl or ret mov fcmovnbe rclb add sbb adc pop enter int and inc femms and add sbb cmp inc enter add jle xor and or test adc int xor popa pop lock in in mov dec adc hlt or mov (bad) xchg ja lret imull mov aam into or outsl lahf js leave in (bad) or fistl pop aaa sbb mov arpl dec loop fs inc sbb xor cltd in and fbstp xchg ljmp pop dec or lea movsl icebp and pushf lods inc rcrl rcl sbb mov xor xchg sbb jae inc dec dec ss mov jne cli jnp insl cld ret (bad) xchg jbe sub je ret fs xchg aad imul xor inc jno sahf push inc lods lcall adc sbb repz iret or cltd jbe push ds xchg add dec mov or (bad) xchg stos lds mov and fwait adc stos push pop cmp dec insb inc add jmp (bad) scas adc adc mov add pop call pop pop xor adc push mov psadbw cmp dec and (bad) sub (bad) ja adc push sti daa imul sub out adc scas jnp sub aad enter loop xchg pop or adc lcall jge mov pushf aaa imul ret mov sbb outsb (bad) pop jge inc push jnp jbe or pop or fs cmp push aaa call adc sti and pop push into in jle sub mov or stc imul and lret dec cmp (bad) mov jne in (bad) pop pop (bad) adc lods test cmp dec ss mov imul push inc imul jmp xchg clc repz pop jb (bad) mov je inc xchg cmp mov divl xchg cmp and mov aad or mov push aam out jp sbb loopne (bad) sbb ret mov rcl jl xchg mov repz fnstcw pop outsb or or cwtl pusha (bad) xlat aas in inc sbb jo or loop in fstps mov xor out ss (bad) lea or xchg xchg adc nop or imul je jp mov fwait or jg xchg sub fs pop cmp rcll ret andl aaa sub sti xor aas sub addl pop rcrb inc iret cmp aas xor test in ljmp stos add js mov fucomp add push loopne std dec xor dec test ljmp popa test mov sbb je xchg sbb andl movsl cmp fistp mov les jge cmp push loop cli push dec nop mov ret addl (bad) loopne (bad) fdivrl mov mov mov cmp std testl pop jne xlat xchg popa lcall (bad) or lret not lea mov out inc push push testl pop dec scas pop cmp mov dec arpl sarb js cltd push cmp and push jl cld mov das sub sub mov inc ljmp data16 push xor add or out lock add mov fidiv outsb lods addr16 js loopne xchg add mov jecxz pop aam dec fmull outsl jmp sti dec add (bad) outsb sub aaa jns fs lret loopne mov xor es push mov lock mov jo aad outsl jle sbb aam iret pop xchg enter mov jbe add int3 jl jmp sub and xchg (bad) daa dec insl xor mov lea rorl cmp adc add xlat jae mov lods pusha dec mov xchg pop das cs xor (bad) xor pop mov and jnp cltd scas sub cmpsb ja andl loope mov sub movsl jns ljmp mov pop movsb pop fs inc add (bad) hlt (bad) ss pop and insl (bad) int iret sbb add and stc xor or xchg insb mov daa pop dec xchg in inc dec cld sbb dec ret mul push idiv mov popf lock or mov add leave das cltd pop outsb jl mov pop (bad) push out psrlw jle push lds inc neg sub jp or outsl adc pusha jne xchg fiaddl dec jbe adc arpl mov insl dec je xchg jno mov (bad) outsb std push mov mov mov mov std scas cld fisubrl jns pop cmp repnz shrl iret ret rcr (bad) (bad) hlt enter dec mov pop outsb or mov adc into scas icebp mov loop dec sub sub int sahf roll xor fnstcw lods js sti dec cli fistp repz dec stos insb push das imul push lods xor hlt fwait jp incl jne push scas (bad) js loopne popl cmp aad and ret sub in mov lret cmp push jecxz gs add mov mov nop out xchg push jp and jecxz pop sub inc jmp movsb ficom inc addl stc test imul pop (bad) stos and xchg xor lcall add and bound aas adc xor xor mov dec (bad) je (bad) jnp pop in out lock cmpsl inc push mov xor (bad) fisttpll test cld sar cmp hlt jbe repz lea push xor pop stc dec lea sub mov sub fsubs sbb ja jo insb imul cs mov dec test mov data16 testb pop jns jno cmpsl inc stc mov xchg mov dec push ja addl cs stc pop loop and repz sarb aaa cld push mov dec adc push inc addr16 lea jo push (bad) mov movq pop add adc and lcall neg sbb cmc dec add dec movsl mov lret cltd cmp dec dec fistp push cmp sub jns popf inc and jmp cs cs dec pop mov pop out or add gs xor xor cmpsb mov add push ret push mov dec je ret inc sub and js jnp sub xor or sti mov xchg dec pushf mov das dec xor mov outsl aam into mov push (bad) or lcall pop fst jb inc icebp inc out sub mov bound mov pop cmpb push lea imul and shrl jae push inc outsl jae rclb cwtl add adc sub ds adc (bad) or adc stc rcrl xor aam aaa mov int por (bad) fsubs dec vpsllq out adc movsl ds rolb add dec repnz or dec out mov push out or sahf js cmpsb push dec scas sbb popa int dec adc mov test push nop jb sbb pop inc xlat push es popf repz jo lds lods daa dec insl mov mov cmpl hlt xlat (bad) or or shll mov cwtl std cmpsb sub jo pusha (bad) mulb push test std inc (bad) cmp adc inc push mov jg push scas ja dec inc pop int3 push jb and ret pop loopne fidivr xorl pop cmpsl push dec or cmp jno pop sbb lods fs ss cli mov popf add mov mov sub xchg jns inc pop pop movsb lock jb stc xchg mov out xchg xlat gs mov subb sbb adc inc inc jle pop fsts popf aaa repz jge insb daa pop loope lret push mov xchg ficoml jmp mov ds xor icebp inc mov ret or movsl sbb in add jno idivl xchg inc and xor push lret jge dec jp fildll add jae inc out mov mov or bound xchg mov adc lahf movsl aam jno fsubl pop pop xor xor jle call mov sub pop adc cmp cld jns pushf xchg or test popa add cmp cmp popa lods push push shrb cltd mov fdivrl aam add mov mov sahf je in lcall jmp pop xor out jns cmp xlat and mov push in pusha xchg jb mov aad movsb add aam clc mov cmp (bad) pop cmpsl (bad) jl adc xor mov les fbstp pusha dec dec jo mov arpl (bad) std test sbb pop stos es leave ljmp and ffreep sbb xor mov sbb aas jne pop dec cli adcl xor jmp or add imul cmpsl das clc mov lret cmpsb add fistpl test (bad) mov aad (bad) mov mov out sbb sahf dec imul pop dec mov out push scas repnz pop clc push cltd sub jnp iret lahf imul mov in xchg pop pop pop xor in shlb pushl imul sti sub inc data16 dec addl or adc mov sbb sub cmp dec adc add inc ret inc mov mov stos cmp movsb pop jo pop out xchg jl xor xor jno fildl or mov mov insb or xchg int push pop jno push inc aas inc mov jl mov add mov mov or data16 movsl insb jbe je jmp mov push sub mov mov rcrl inc dec ficom jnp jg repz into iret cld les push and pop aas out and mov xchg movsb daa xor mov jbe fnstenv xchg pusha fadd lods or mov nop ficom and adc mov jo inc pop in push lcall and and hlt inc int3 into pop cwtl inc jno arpl mov das inc pop es jo cmp loopew push inc xor clc sahf daa mov mov dec lods jae (bad) mov fldcw adc cld shrb or mov cmpsl das divb jbe push cmp or push sub ret shr pop mov xor shrl icebp mov and movsb jmp ljmp inc adc nop sub pop movsl cld fadds dec mov jp mov and mov test lea sub sub mov stos inc sti loopne jge ljmp mov push std mov iret pop jbe cli stos jo mov add xor xor adc xor cli add ret or mov stos sbb xor push cmpsb xchg es cld shlb xchg cmp test push cmpsl jg and mov xor cld lds out gs jo daa inc cmp pop pop inc and jmp jl ljmp pop mov add stc pop adc jo out sahf dec push out imul push xchg push ja jmp and mov addr16 outsl mov movsb lcall leave movsb xchg rcll xchg mov mov sbb and dec sbb popa cwtl stos in mov sbb pop arpl popf mov sub sbb int3 fistp sbb mov arpl sbb test sub lds fs je arpl insb dec leave aas jmp or cmc (bad) iret sbb lods mov jo idivb cmc add rcll or das inc in push sbb pop adc (bad) mov pusha xchg add es les jb iret jg xor fsubrs inc mov in jns ja icebp sub xchg xor clc test adc xlat xor sub mov fist sub jne xchg push mov mov dec jle fdivr jae sub or adcl pop dec or popf push sbb (bad) sub (bad) push push mov in je mov lret idivb bound out int3 sar movsb scas lds pop fimul dec add cmp test movsb or repz ret pop sub (bad) sub xchg test xor scas xor insb scas fnstsw cmp mov mov and mov mov pusha sahf or cld push clc (bad) js or xlat loop aas ss dec ss cmp cs scas movsb jbe lods lret add fidivrl test push and pop sub xor mov and push int3 outsb sbb rclb sbb pop (bad) mov mov fnstenv adc aad popa lahf push lret scas decl mov or icebp fwait xchg push push test adc mov jge and mov sar mov jle insl loope xchg arpl or add hlt mov fsts xchg jecxz (bad) mov lock inc mov pushf push test mov mov mov lcall jne mov mov xor lea adc fwait dec movsl jecxz sub pop rolb jp jecxz ffree cmp ds push mov mov dec lahf mov jns loopne cltd arpl adc cmp stos cli xor fldcw xchg (bad) dec mov mov inc cs push xchg inc push mov out adc (bad) movsb pop test dec adc (bad) jg fistp (bad) mov loop push rcrl or mov jns call fldenv mov das and (bad) insl ss hlt mov out push test sarl mov psadbw dec jae and adc mov cwtl adc jl adc mov clc pop fisubrl pop ret xor mov fwait cmp sbbl xchg sbb push negl inc and frstor jno cmp pusha sub mov push pop lcall sub xchg hlt js pop cld mov jecxz xor loope mov repz mov adc pop jp add push and inc loop sub js test mov inc inc fsubs adc push aas mov int3 push (bad) (bad) adc add js mov insb loop sbb sahf dec pop fbld cmpsl not daa jg cmp jp dec sbb shll loopne testl inc iret jno insl cwtl repnz outsl shll repz sbb mov stc scas cmp or nop cmpsl add sbb das xchg mov fwait adc mov imul loop or push pop mov push (bad) loopne inc pop push lods ss push sbb arpl jle ss fstpt dec iret fsubs mov add lods dec cmp cwtl add pop mov jnp popf xchg into popf popa dec xor imul lock loop cltd cmpsl popa push loopne js xor pop push aam cmp imul xchg mov inc push mov iret and aaa push adc cmp inc iret cld mov sahf int mov lods scas lods push enter gs mov lahf (bad) jno sub adc fstps push push push jne sbb insl mov fstps push test lock add xchg call push xor mov pushf stos nop out nop lock mov stos jae es dec je loopne int jecxz rorb push (bad) pop jne lret movsl cs out outsb loop add and pop mov jecxz mov and or xchg int3 jmp or (bad) mov inc mov aam inc and lret mov jns add lock orb jmp outsl adc cli and pop cwtl jno into loopne je dec (bad) adc inc aas push jecxz sbb stos cltd int3 in sbb aam call int int3 or pop ds push jbe jmp rcrl jge (bad) repz fwait ss mov arpl fcompl dec or out or out xor stos loop ljmp cs mov les mov jb push cmp xchg sub sti add lret or mov add mov (bad) shlb xor and gs aas and mov cmp leave out test int xor push pop push nop and adc xor (bad) shrb gs jns adc enter jecxz sbb sahf pop cmp (bad) xchg xor and cmc adc lahf lock pop xor mov xor adc in xor mov (bad) and ret movsl ret scas ljmp adc call outsl js pop push gs int3 popa dec mov mov mov fsub rcrb mov jecxz aaa and into cmp insl lock imul cli (bad) cpuid mov pop push insb pop fnstenv mov popf cmc adc loope int aam lea outsl lret cmp fs jle and mov scas adc jle shrb add je cld jl sbb push int3 js xor loopne into jo dec or leave in in jle fistpl jno insb adc jl aad xchg clc sub mov jge rcll add mov adc sub int3 dec xchg scas sub jo aaa push inc ret push mov (bad) inc out pop sub push fwait pop hlt xor mov push (bad) mov call dec cmp aas rorl ljmp popa iret mov xchg add dec fwait nop bound mov jae enter lods mov cwtl mov xlat out shrl push in push xor sbb sarl push cmpsb ret rcrl xchg int3 and pop push and pusha scas jl xchg push loopne mov add sub lret adc add loop (bad) mov sbb mov cltd scas jno addr16 mov out (bad) jp lret mov insb sbb pop mov xor inc fwait roll or add mov in mov lret ss and daa (bad) loop pop outsb leave push or popf mov add inc mov fldln2 (bad) jl add and lret xor fwait std sub pushw (bad) aas rclb jge cmpsl test neg leave pop lret jns pop ljmp lret test xor inc cmp cmp push insl inc or lret enter inc hlt mov cltd adc mov cli sub dec int jb fisub adc inc xchg xchg xor (bad) mov xchg cmpsb (bad) pop xchg push cmp ficoml lock inc xchg loop push jb fistp sbb aaa daa movsb jae in inc in cmp fistpll push xchg xor (bad) icebp in or ret inc add push add cwtl fisubr je cmp stos stc movsl push insl out mov and ficom mov loop fild (bad) repnz push inc add popf xor cmp adc adc dec in cld dec es ret pop out xchg pop in sbbb addr16 inc dec lods or inc add xchg iret in pop sbb xor out pop cmp jns cltd and dec aaa (bad) xchg nop cmp xchg and (bad) out aad loope (bad) xor loope add int3 cld sahf push mov das pop inc test aad std outsb or dec jle push out xor mov in xchg inc fs jp mov dec movb test cltd and xor fs repnz sub ret mov sub (bad) cmp inc xchg sub pop cltd sub xorl jb out jb jb add dec add and int adc mov aad sbb ja ljmp dec pop bnd mov enter leave dec pop nop sahf adc push (bad) je roll test mov jnp mov loopne cmpsl push cltd imul sub test das push sub push xchg int3 adc sub pop xchg adc and cs add sbb or test cmp into xchg outsb dec inc add or mov in (bad) and mov fs popf inc mov mov dec pop enter cmp sub jno in hlt adc mov and xchg cmc cmc xchg test out in xor stos add inc int3 int adc cmpsl (bad) data16 dec push mov js and sub jmp pop jae lock dec test lods xor ds addr16 or repnz mov mov pop dec lods scas mov mov pop das dec call dec jmp cmp pop out sbb pop out mov repz jmp fisub push pushf sbb jbe or (bad) lret outsb hlt add jbe cmpsl sub dec out test aas pop (bad) lret cwtl out out push out mov mov int iret push push ficom adc aaa in push adc and movl pop xchg xorl dec xor pop mov mov mov lret xchg nop in add popa xchg inc das jg adc je mov and mov fs mov or add rorl scas cmp int3 dec or inc enter jl pop adc push or std mov inc sbb xchg xlat lds cltd arpl mov mov xor xchg adc into fdivr movsl leave fimul aad sub imul movsl pop xor pusha stc adc pushf push xlat cmp sub imul icebp enter mov mov sub pop repz pop outsl in fstpt gs xchg jae ret iret push arpl insb add xchg int3 cmp mov mov dec in pop (bad) repnz push das in stos mov mov pop test jnp std mov imul xchg mov in repz fmulp sub lods (bad) jo addr16 jecxz scas jns stc pop mov out or pop xchg inc scas push cmp pop inc mov aaa ljmp call in sub dec in les push fistpl popf and push fs push sub dec sbb dec lock mov mov dec push jle mov or mov cmp cmp xchg xor sbb cmpsl int xchg jmp or sahf cmpl dec je and lods xor (bad) jp push rorb cli (bad) lret push jae mov sti inc fstps fimull subb jecxz bound (bad) and rorl cld cmp insl and mov add test mov dec (bad) xor xchg leave mov icebp fdivr and stc push data16 nop outsl lret xchg in inc mov inc and xchg adc in mov mov dec sub push out outsb outsb adc sahf sbb dec mov outsb mov jl outsb jmp je andl stos add and movsl subb pop mov jae rclb ror les iret cs cs icebp xorl add push adc and sub cmpsl jle push bswap dec (bad) jg inc sub sar and mov scas inc push cmp mov mov lcall or cli push push push xor addr16 fcmovu (bad) xor sub stos inc pop inc jle subl leave bound pop add imul in lds lock push aas inc sub lcall aam loopne jnp popl cmp jne sbb lret movsl clc push outsb push sub inc push (bad) lcall (bad) pop mov pop lret test aam fidivr xor test (bad) mov inc mov mov mov mov push sar loope and test das dec lcall mov sub jo pop fs inc pop lods repnz xchg dec xchg push pop sbb fnstenv sub add dec adc mov data16 dec push lods shl lea pusha mov out ss inc lahf (bad) je mov xchg test mov sar cwtl or iret or mov dec sarb pop mov sub cmp inc lcall sub sub jle adc mov pop aad xor gs movsb xor dec push outsl ret outsb gs inc mov dec xchg fwait jns add pop addl int sub stc dec fildl jbe test bound or add mov jbe imul nop xor pushf push rcll jne clc cltd and or cltd pop lret jae ret (bad) xchg ss or insb sub sbb mov add loop inc sti push insl aaa mov cmc fnstsw outsl sbb sub jne push es aas jg mov xchg push into or inc xor fdiv xor mov das mov push test jmp pop aad ret lds sub or dec jne pop xlat vmovdqu64 loope sarl daa out jmp xor nop loopne out inc push aad mov loop (bad) pop pop or dec icebp xchg dec loope push mov and stos and xchg mov mov pop fistpll in push imull adc mov inc mov xor insl cmp jp (bad) cmp xor fsubl rclb xor jp dec mov test pop xor repnz jg ss nop dec xor dec nop lea xor lock repnz cmp inc jno in cmova dec int3 fstpl lds cmp into popa (bad) int jecxz mov sub scas push inc pop pusha fisub jnp out xchg xchg add sbb decb ficom stos cltd loop aas test and enter sbb rorb and ja push ret mov cmpl mov mov fadd icebp lds cmc xchg dec fldcw jmp adc mov repz cld scas push mov icebp adc popl fidivl mov lcall rcrl hlt pop push mov mov or push rclb jle inc mov mov ret rcr mov sbb rcrb fcomps adc (bad) fisubrl inc mov movsb dec test inc add (bad) popf sub jb lods and pushl das inc inc and hlt cmpsl dec push dec mov mov xor sub or bound es nop xchg inc ret mov jmp xor (bad) int3 movb push jo mov mov inc push jmp push test stc in iret loopne mov mov push sahf cmpl pop add not push cmp rorb pop into push sub lea stc pop pop aas arpl sub push negb bound push outsl test cmp pop pop and mov sbb in push lahf add sub push adc push (bad) les mov push pop pop add dec fsubl loope inc insb push and loop aas mov jo imul lods jae and std add sub stos xchg fcomps inc cli stos dec lock jg inc aad adc addr16 and add mov mov clc pop ficomp in mov dec adc jnp,pn popf enter mov (bad) leave mov jb out sbb push (bad) mov mov xchg mov (bad) xchg (bad) dec xchg jg jae fisttpll shr into push jp (bad) fcmovnb sub jecxz jecxz dec ss and jg inc (bad) jbe xchg and mov dec mov sbb xor adc xor and jo mov lods sub cmp add loopw fsubs aam call js mov int add mov (bad) pop and xor je ficom xchg cwtl pop sahf lahf cmp add pop aaa repz scas or rclb mov mov pop sbb sub mov test ss or stc adc sub xchg negl sub insb xchg scas and daa xor inc call lcall btc mov imull out stc fadds cld add mov push pop pop sbb pop or pop dec outsb arpl aad pop mov sub cld xchg and cmp xchg pop aam cwtl adc mov inc sti test aaa mov addr16 iret xor mov lods push mov cmpsb out lock pushf push adc (bad) cmc cmp cmp loopne aaa xchg imul test loope sbb js (bad) jb mov roll lret inc inc or daa mov cwtl fcomp xchg test in pop fisubrl gs dec cmp inc cmc outsl add pop mov cmc (bad) jae test iret xchg insl mov push xlat lahf push mov das pusha int3 fisttpl rcrb jbe rcrb repnz out das or pusha test (bad) mov movl mov xchg sbb xor mov jbe cmp push xor sub daa fwait fwait or xchg add adc dec cmpl inc sbb sub aad mov cmp ljmp aam sub daa out mov imul icebp leave pop dec fldl pop xor inc nop pop pop test sbb mov push inc (bad) mov push push cmp sub mov jns out jae pop (bad) dec insl out xchg or inc sub cwtl fisttpll jne mov sub or mov stc or sti push sub sub xchg rcrb mov outsl jo dec (bad) push or shrb jnp roll lret sub pop mov jmp sub pop mov adc xchg insb nop enter sbb xor (bad) sub push pop jle add enter es mov and inc cld pop mov out xchg push insl stos das mov cs bound pop mov mov int pop mov data16 sub mov mov pop lret (bad) sbb and or and test repz mov int cwtl xor ret mov rclb js pop sbbb hlt xchg add dec dec (bad) (bad) xchg dec jmp cmpsl pop or scas add cmp or xchg test or push add mov push popa cmp pusha sbb mov sbb mov jge fstpt ds iret inc out ja add cmp popa fidivl pop fdivs mov push xor cmp and mov scas int3 int3 pop and idivl mov dec arpl xchg in pop push cli das or leave xchg test jae les pop sbb test pop pop outsb pop pop xchg lea push xor (bad) aad std mov and loopne,pn fldcw cmp fsubl mov aam xchg add lahf xchg dec (bad) push hlt arpl cmp lret xor push mov mov mov push pop fist adc addr16 leavew or xchg inc inc sub jo (bad) rcll fadds fs xchg rcrl rcll adc test mov bound adc cmp inc pop mov loop jno fistpll jp xchg cmp test call push sbb mov call xor ret lcall out divb adc or shl add jmp and or push pop cltd test fnop jo mov sub xchg mov lods push fist divb dec stos cmpl jno dec sahf cmp jnp dec into jno pop pusha lret cmp repz lcall je scas mov mov inc sbbb push stc data16 adcl fcoms push sbbl addr16 xchg clc stc lea adc andl imul out xchg mov in push sub imul ds dec fldt (bad) cmpsb sbb mov cmpsb pop scas cmp fwait mov mov inc ljmp scas mov xchg xor push pop sub popf outsl push jg (bad) adc lods xchg fbld lock xor jmp jns mov es sbb push adcl sbb push push les lds fcomps sub push dec cld sub loope inc imul fldl les dec jns repz sahf jo and mov pop shrb xchg rcr jno mov jbe cmpsl sbb in int3 sarl leave cmc mov cld mov pop ja mov bound push push cmp cld sub fsubs cmp mov icebp lahf loop hlt (bad) add in das es dec cmp ficompl mov stos mov nop outsl sbb mov add jle push out fwait push pop js mov xchg repz push fmull add xor roll sub imul rorl (bad) or inc jecxz jo insl into mov test cmp xor adc dec mov and xchg popa addr16 mov push jo jle sbb mov adc es imul sbb mov call repnz pushf cmpsb mov pusha (bad) dec xchg scas mov jne enter jbe pop adc jmp and mov das lds addr16 sub outsl test outsl xor jno pop pop mov sub push pop mov and sbb ret mov inc decl xchg lea inc lret mov add jmp or jae imul movsl mov pop frstor iret mov inc adc fcomip out jp cmpsl or or xor xchg push or jge jle lea mov adc and jg sbbl pop jecxz,pt xchg imul in inc dec inc fwait lea in fidivr adc adc pop jmp scas (bad) xor mov dec add mov mov lret and cs mov cmp test add dec dec push (bad) push (bad) nop in xor nop (bad) fcompl sbb (bad) inc loopne inc enter jae push sbb cli sbb adcb bound sub sub or jmp jp mov and lret cld rorl inc pushf and in les mov mov mov dec leave mov ret pop inc lahf popf inc add pusha sub mov adc mov ficoml jmp cli call mov mov popa jge scas or mov (bad) or jmp inc sahf sbb jg push insl or jle dec add pop cmpsb or add jb sub mov rcrl cmp xrelease cmp enter test push movsb sar loop lods cmpsl lahf int aad cld xor lock vpsubd (bad) mov ficoml jecxz in mov fnsave imul (bad) push adc test pushf mov cld (bad) jbe into cmp dec xchg in add inc mov aas ret push in pop les inc sbbl cmp and js lods (bad) mov les add rcrl push mov mov enter out mov sub fwait mov mov push das aas icebp imul rcrb mov loop xchg in inc std mov les and jnp,pt add adc cmp jl int3 mov loop mov xchg adc enter cmp mov int push sbb mov sarb test mov rcrb mov dec dec cmp test in shrl mov or xchg movb shr loop dec push xor fs (bad) sbb mov (bad) fldt xlat ja push subl push (bad) xor andb aaa lea xchg jns dec add jp jle mov xchg sub test push or into dec pop inc mov fdivrs pop dec stos jno (bad) scas sti ret daa or stos movsl aad psubusw mov shrl stos mov enter and in add sahf fsubrs mov hlt adc cltd (bad) xor ss sbb scas inc cmp sbb fadd inc cmp dec dec mov pop push adc mov sti sarl push lret jg movsb nop push or adc and lcall ljmp or fwait and xlat lret scas scas dec shlb das mov dec cmpsb push push inc or jmp pop std xor stc dec int3 sub jns sub or and mov sbb push push add jecxz imul mov loop lcall ss push mov mov imul call popf sbb mov std fsts sbb mov repz cmpsb jl push inc test pop jl cltd sbb adc push (bad) or rol xor ds mov in adc mov mov js in sub cwtl push xchg movsl icebp lea lds jle mov mov lcall adc das aas cld incl clc sub into pop sub push fidivl subb dec or xchg (bad) jl lods je ret jno dec mov xchg mov pop in cltd add sbb mov ret ss mov dec add les mov adc idivb jp bound call lock icebp mov jae and sarb cmc push fcmovnb bound push sub xchg sub push test mov nop dec cmp arpl fucomip inc aad sbb faddl cmp fidivr outsl pop lds add dec pop addr16 sub jbe and lret test add adc imul lock mov sub or shl pusha imul lock (bad) icebp and rclb inc sarl push cmp mov sbb xor sub sub add xchg cmpsb push cs dec mov inc movsl sarb xor mov push cmpsl sub popf sti jbe sbb or aas jb or and xor pop push jp fstl ds inc popf out xchg adc mov aas stc fisttp inc inc js push mov sbb iret sub psubb outsl leave repnz ja jecxz test cltd jno cmpl cmpl add out push jecxz xorl insb (bad) sahf sub jl sub mov xchg lock push imul mov ss xchg fimull stc mov jnp std inc test outsb push jne stc inc pushf (bad) lock in pop mov xchg jmp shl fistpl xor cltd icebp inc inc or cmp bnd add and inc lods sub xor int3 xchg pop pop add push cli add ficoml fisubl mov push aas out insb stc mov leave sub sbb mov test mov popl push mov push aam mov inc add loope leave shrb pop aad push repz scas mov in jecxz and aaa jmp mov inc dec cli pusha ss stc clc fidivl mov adc cld lods inc cmp popf fsts ljmp mov xchg mov out cmpsb bswap roll xchg sub rorb and adc fwait mov and (bad) mov int xor outsb mov xchg repz dec mul repnz imull push pushf xchg xor jecxz lret mov mov icebp adc or pop loopne les or jl mov daa pop jne loop pop add dec outsb movsb scas add ficomp cmp xor aad clc ret mov mov pushf aam lahf ljmp jb fisttp repz in in sub mov lea ret pop xor dec ja mov ret sbb call addb loope xchg mov clc mov push and mov movsb out mov cltd adc das stos test and cltd xchg cmpsl lods pop sub push arpl sbbb ret repz mov push ret xchg clc inc ss fild (bad) outsl add fs add and adc xor xor scas jmp in bound fimull (bad) out xchg sub adc mov pop mov mov pop lret popf pushf out sbb push cmp ficomp int xchg jl push xchg jae cmp rcrl push or shrb jecxz pushf xchg xchg add cmp pushf int mov pop in (bad) repnz mov push add scas leave jnp inc dec pop and inc cmp jl cld (bad) sar lds cmp jns (bad) mov je jecxz sbbl out adc jle sub adc mov dec pop mov mov mov jg jne push mov iret xor dec daa loopne mov enter pop pop push jge mov fstps test stos scas adc (bad) out sbb (bad) jecxz mov rorb idivb (bad) pop mov (bad) adc rorl jle pop xor or xor dec mov dec add das insb enter dec int3 loop push mov cmp je dec jne xor sbb lock adcl cmpsl fnsave cmpb add jle test pop mov fadd fiadd jnp dec (bad) jo outsb pop cmp test jb pop rcrl adc lahf pop and push dec lss inc cmp pop xor pop mov mov mov cmp push lods scas call sbb or dec out mov dec mov xchg fistpll inc inc jmp cmpsl ret xchg int3 outsb leave outsb std inc push dec lods sub test ljmp insb lret fisttpl pop xor cltd imul pop add sbb pop lahf lock cmp xlat rclb stc popa push cmp sub xor cld mov xchg scas sub out popa push es mov xchg inc ss lds pop sbb xchg cmp fsts movsl es ss jne aaa push or outsb or mov data16 js fwait sbb in out push and les lcall push pop or mov rcll in ds dec xchg lods mov and cmc mov aam rcll jmp mov js test pusha jl imul neg rclb sub je (bad) cmp mov sub push fs sub mov dec inc xchg in jo,pt js and mov xor push mov mov (bad) mov js das scas xchg push lock or adc dec (bad) in jge mov add out jp lahf or je pop cmp or int push jg cmp push mov mov ret addr16 mov loope xor clc lahf sub lcall sbb jge repnz mov push std iret inc inc jg (bad) hlt fstpl (bad) push sbb or mov jnp xchg nop imul dec clc sahf lods test jnp xor sub lods imul sbb ja pop loope cmp subb rcll (bad) aaa mov aam fistpl sti dec add cltd sub cli clc outsb add and lea pop pop xor data16 and sub test mov scas jmp xchg push pop push and (bad) jae lret cmpsl daa sahf (bad) (bad) enter lret int3 and cmp adc ficompl jno (bad) mov out mov mov gs inc mov outsl into scas lret aam pop aad jae subl sahf mov fistp sti xchg jbe movsb into ljmp fidivrl enter lods bound dec movsl add (bad) imull aaa lods mov cwtl cmp or jns and jno pop test scas sub pusha ja fsubrs adc mov and dec dec jnp jae push dec adc in out mov scas lock das add (bad) push mov jae xchg push neg out push xchg jl (bad) cld cmpsl cwtl lods imul mov (bad) jnp sbb pusha popa jl mov lret int3 push and cld test in sub pop fs test mov xchg mov pop aas fcompl mov ja cmp sbb xor loop shrl push xor scas pop mov dec sub ficom adc lahf dec out dec xchg mov ja inc mov inc fmulp ds lea outsl dec xor and lods push ret and sub cmpsb icebp stc popa push aas pushf push data16 adc push dec ret or (bad) cmp adc sbb lea aam lret mov (bad) stc add sub lods adc dec loopne lret pop pop ss fmull mov mov aam mov mov mov lret movsl out sarb stos jbe adcl jg mov mov lea mov cmp adc (bad) mov and push xchg push jp cld pop or fist clc (bad) fsubr push mov jae test sbb mov fnstcw jns addr16 nop addb push outsl cmp pushf call and lock cli xor and adc out in jbe pop xchg cld cmc lods dec or push add imul jae dec push icebp adc (bad) or mov fimul add scas dec ljmp (bad) pop xor sahf mov test bound pop imul mov es fldln2 cmp mov jle insb jnp cmpl ljmp (bad) lea push lods add sub aaa ljmp (bad) in popa loope pop push (bad) sub ret pop push div xor test cmp pop dec bound dec add jecxz mov or sti jle fwait adc (bad) stc icebp xchg pop jmp mov push ret xor push push and mov jl mov lcall sbb sbb mov lods and and mov fs jle sub xchg (bad) mov push sti loope andl or and lods scas mov lcall jne push das outsb xchg mov mov lock pusha gs xchg aaa sbb ret scas int cltd cmp lret dec xchg xchg outsb cmp jns fs jmp xchg (bad) cmc mov cmp add pop out mov out mov iret lahf mov jge push pop jo push (bad) fsub mov popf sbb pop push pushf mov ret imul mov imul jecxz push pusha jo cli and ror jno xchg imul lahf lahf mov xor aaa data16 xor xor push scas jno push inc mov lods iret push inc dec mov frstor stc mov and cmp cmp fcos (bad) dec jbe ljmp jp aaa xchg nop sbb int das (bad) mov jge les and mov sbb jl cmp stos pop or imul push aad out cld sbb ret es inc (bad) pusha add pop cwtl jp pop fwait leave das dec adc stos ret pop je sub (bad) push add out js test loopne repz inc aaa es push inc xor dec (bad) xor dec aad or data16 dec popf inc movb jge popf test (bad) adc xchg push xchg sbb sub sub ss xchg jne add jle sbb mov js xor or adc test lods test jnp test push push inc mov mov enter test pop ror or mov shrb or call jb mov mov pop jge fcmovu mov cmp xor es (bad) lret lret lods ljmp loop jecxz shll fisubl leave test push pop mov aas fnstcw int lret cmpsb out out jbe xchg mov mov jl addr16 mov pop jmp jmp adc cmpsb ss (bad) pusha xor cltd outsb or loopne fistp roll dec xchg loope loopne inc inc mov (bad) inc push sub mov pop fisttpll pusha cmp and fmul jle lock je popa mov and jnp fnstcw (bad) movsb and and xchg mov pop lds inc pop mov jnp and jns pop cltd scas add or lcall insl insl fisttpll dec enter ja add pop jbe scas adc inc pusha dec ja mov ljmp adc sub imul dec pusha jb sbb rcrl pop inc iret mov and mov or dec sub loopne in mov jp cmp sahf add arpl xchg sub dec std loop push es hlt add leave sub push out stc cld ss dec adc inc popf fbld sub cmc and mov add stos int3 push rcrb cmc jl mov mov or bound sbb out push xor sub hlt push mov loop pusha pusha xor addr16 sub adc xchg pop les jge pop add inc and adc lret jmp push mov cmc sahf out push dec dec xor icebp sub sub push mov pop xor js push or ret xor cld mov dec arpl add and (bad) lock scas dec cltd cmp mov outsb icebp adc jnp shlb and add (bad) icebp out lds loopne call bound pushf jl nop fwait jae xchg lret mov leave scas lret (bad) loop cmp imul aam leave aas imul mov je dec xchg jne in mov js and jb pusha pop xchg xchg or loopew jb in ret jmp test hlt xchg lret inc jge roll div push jbe fimul and sub sbb in mov cltd stc jne and jge jmp aam imul mov insl imul push fiaddl inc adc push inc mov lahf out pop mov push enter lret lea push pop je fwait xchg popa mov mov inc data16 lods mov jecxz jle icebp xchg push cld sub ret cmp stc jo aam lods or fsub jns xorl sbb sbb inc lods mov loop push cwtl cmp dec or push ds push (bad) xor stc mov jl dec cmp cld fwait jnp aaa push cmp ficompl mov aad aas cmp rcll pusha pushf xor inc xchg push dec in mov cwtl pop js jmp xchg mov ja test xlat push jno xchg mov dec inc (bad) out popa or cmp sbbb imul lods add aad sahf in imul add pop test inc xchg mov pushl inc inc sahf xchg ss pop call mov les or or shll sarb xor repz ja repnz mov mov add out mov mov ds stos test cmp pop or popf loopne daa scas sub cld inc xchg ljmp jo adc push push mov jo mov stos into bound sub adc cmpsl sub xchg cmpsl mov lods jns das lcall push mov adc dec je add jno mov mov pop xchg not stos je inc xor add shl or outsl mov and movsl ret psubusb mov cmp out stc push cmp push push cmp loope jecxz xor rolb push dec aaa stc add test inc (bad) jnp movsl sbb movsb mov inc cli xor scas imulb mov fs sahf ret ljmp dec add aam shr push or test movsl sbb push push push scas mov call jo adc mov jns movsl dec add inc (bad) push test aaa ljmp scas cmc adc jne push inc push fimul pop xor or outsb xchg xor cmpb (bad) mov jno dec (bad) js pop xchg outsl add adc sub ror cmp out sbb lret push push (bad) lret cmp fisubl stos jge pop fidiv jg cmpsb aas lahf dec dec add test pop pushf testl add or test jns enter aad outsl aam pushf (bad) enter aas mov hlt (bad) xor rcll (bad) aad inc pop push stc in mov pop sbb cmp adc in sub cmp sub mov int push cmpsb addr16 daa cmp cmp push inc aaa dec fiaddl imul test (bad) and xchg in js adc adc cld aas adc ljmp mov mov aas fs int3 stc lret xchg inc xchg jnp and cmpsl adc aad lret jns inc jno xchg ret cli mov (bad) xchg test inc loopew (bad) pop pusha iret daa add daa jl cmp jne repz rcrl ret inc in enter jne xorb sbb andl adc ja or dec xchg pop scas or iret inc loop add rcr cmp imul fdivp mov lcall test out rcrb pop dec xchg cli jne out and nop mov sub sbb rcll jg dec sti ljmp cwtl mov das push cmp aad movsl cmpsb push cmp fistp inc fisttpll sub movsl add test rcll dec sbb icebp pop aas mov and cltd cmpsb lods aam dec push rcrl jp mov adc ss jmp arpl lock fwait pop je les cmp fwait call or and xor or mov fsubrl mov movl or (bad) jle inc push or mov sbb cmpsl sub sub lret jbe inc mov in sbb jl cltd imul jge,pn adc or rorl movsl shr and fcomps mov push jbe (bad) rcr mov xchg inc xor sub popf insb push out mov aad pop mov dec call dec dec test int imull push mov or push fwait stc (bad) repnz inc (bad) jmp xlat sub inc jo dec or xchg lea jo inc dec xor cmpsl add xchg ss and mov or dec jo dec push mov mov fsts or aad in cmp inc dec insl xchg in adc dec inc lea divl xor repz (bad) std (bad) lcall scas stc (bad) mov pop mov mov push int3 mov xor cmp sub cwtl adc in es arpl add lahf fsubrl dec sbb add pop hlt mov mov cwtl js cmp mov inc jo loop mov or xor jne xchg ret cwtl mov enter jnp shr adc cmp in clc imul dec scas adcl sub sub icebp fdivrp js xchg sti (bad) hlt adc xchg inc and jmp jne adc rcll popf jae sub pop push dec sbb cmc adc xchg inc pusha movsb in dec mov inc fbld pushf mov jbe dec ret xor std add out aad adc clc call cmpsb outsl mov mov and push movsb js xlat out xchg push out rolb lods clc dec xor lcall jmp cld popf xchg and pop pop adc cmpsb pushf sbb loope jb mov inc and cmpsl pusha stc loope dec cld fwait mov movsl imul add loopne fwait test xor jl mov push hlt cs or add or jge pop popa mov xchg xchg add icebp sbbl push testb out jo dec push imul nop rclb int3 xchg inc and mov add pop test fcmovnb call aaa push insb fs (bad) testl sbb inc (bad) pop or gs mov cmp (bad) mov cmpsb sbb sub push push int3 pop jnp mov and inc aaa fldt xor cmp (bad) mov test xor pop sub jno scas stos xchg ss mov leave das sti lods ljmp mov push mov push jne testl test in sbb cmp jp fwait outsl pop cmp xchg sarl push frstor imul pop cmp iret lds jmp cmpsl lret jb or fwait sub cs inc out scas mov iret out out dec and sahf in pop aad ret mov pop jle jecxz flds jbe fcoms ljmp or jae xlat mov inc adc in add popf addr16 mov (bad) xchg push mov es imul fnstcw dec test (bad) or clc cmp fs push lcall outsb pop add mov dec bound and or xchg mov sbb push (bad) sti andl fxam mov mov jge mov pop xchg jo xchg jecxz sbb mov pop roll (bad) rorb rorb neg cmp cmp imulb mov stos or out rcll aas sub and (bad) mov adcl mov push scas (bad) test add or push cmc or inc lret in fwait rclb incl fwait cli lea or sbb jge mov int3 cmp outsb sbb or das ds int3 mov fadds nop (bad) lcall pusha int3 sbb into fldl jbe add repz hlt push cmpsl push and jb ss inc push cmp in shrb stc loopne pop sub pusha mov cmpsb mov jp and cmp test xor cli inc test xchg adcb movsb stos xchg push repnz mov lcall xor (bad) ja cltd outsb mov pop cltd in cmp add int3 pop popl xchg xlat xor in (bad) and fstpl and push lock mov and (bad) je insb inc insb fiaddl rcrb pop rcll aad xor inc fmuls stos cltd jae rolb das inc bound sbb cmp mov popf daa add jg pop xor mov aas repz repz fcmovb jne jae popa rorl (bad) idivb int ret lcall imul fcmovnu in xchg adc xchg cmpl pushf lahf cmp in xor fmuls imulb imul xchg mov mov popa pop pusha push sahf dec add loop in movsb mov add std inc std fnstenv mov pop mov into and nop popf movsb shll mov js lret leave dec es out lret (bad) cli imul xchg fucom bound (bad) sbb jns shrb xor aam jmp dec leave xchg add in hlt scas std xor ljmp pop push gs mov loopne scas xchg repz jae arpl adc cmp inc testl stc js je clc jbe dec scas xorb and enter call fs out dec out mov jmp insl mov js xor fsts std pop jnp jecxz and stos and and shrl arpl sub push mov xchg imul xchg aad mov push mov idiv mulb rcl repz push out test pusha sub sbb out or repz aas sub shr push js mov in cwtl inc cmpl mov cld cmpsl jle push out mov js bound xlat roll fwait (bad) jg mov rcll in faddp pop cmpsb js cmp or (bad) sar cmp pushf (bad) cltd xchg dec test js in inc mov imulb cld int rorb enter xchg fcmovb xlat cwtl cmp jb xchg out mov or addr16 adc mov xor mov push cmp dec jae pusha jge adc data16 dec ljmp cmp jge pop mov jl stc pop ja dec or adc jl adc adc and xchg out sbbl push lods (bad) and ljmp and fwait sti out repz jns cmp sbb mov sub ja int lods inc mov ljmp jle ss mov sbb or xlat sub stos in cmp (bad) mov push ljmp sub imul fnstenv pop stos fsts mov xor xchg enter (bad) adc nop jno xchg dec xchg aam xchg jg icebp dec lods cmp push push or fmull in mov or mov mov add or pop sub imulb out pop mov jle pop sub cmp mov cltd fld repz sbb dec and test ret lods cmp popl mov push in ret pusha shr fildll sbb push inc push mov mov stos xchg jmp stos pushf movsb xchg jo jl test stos cmp inc sbb sbb add lea xchg mov mov (bad) repnz test inc xor inc test jnp xchg xor adc in jg or (bad) imul cmc cmpsl iret mov add mov sbb cmp mov ss mov lahf add (bad) rorb mov in mov mov mov sub adc jl fldenv cmp cmpsl xchg outsb push mov xchg cmp dec and (bad) mov xor loop mov sub xchg xor cmp dec aaa sub push sbb mov fisubl nop jb add or mov mov or pop stc push push xor push push dec mov mov xchg jl out aad add jno xor or ljmp xlat pop xchg adc jnp mov imul pop lcall lea insl or adc pop pop mov push lods ror jbe mov dec push scas std les cmp sbb popf add xchg lret iret push dec sti mov shll fucomip pop adc sbb fstps xor mov sbb mov sbb push xchg pop (bad) cltd or fnstsw sbb int cmp stos push test sbb xchg iret or cmpsl mov push (bad) push fimull xchg cmp inc gs mov arpl mov pop and stos (bad) mov jmp fist imul mov stc add jb dec push or ficompl (bad) or and repz pushf clc xor push data16 jg icebp (bad) (bad) (bad) insb dec dec dec pop (bad) pop mov mov int3 cmp jno fsubl imul aad cmpsl loopne dec cwtl bound jbe adc orl mov xlat (bad) aad push ror mov push and aas jo ja fld and jg push pop xor gs mov aas mov jns out faddl adc js inc mov (bad) (bad) icebp xor std xchg fdivrs xchg and mov inc mov lods jne and pop and sub or mov mov (bad) jg push fisubrl mov xor fwait lahf popa push popa and and mov mov fisubr cwtl jecxz pop cmp jg (bad) mov mov dec mov sbb mov pushf ret cltd jl jo mov xor ret out xor fdiv inc nop pop jb gs sbb mov ss sub pop lds pop lds rcrb ret xor pop fwait (bad) out imul loope pop push jmp sub movsb sarb test imul adc jge cmpb je mov dec mov in lret mov mov xlat add leave inc lahf (bad) test adc push in push mov jns mov test pop std inc (bad) jge rclb push imul jnp jno js add add pop mov icebp xor fld adc shll cwtl dec cmpsl inc mov mov xchg call aas inc xchg shrl insl add (bad) sbb pcmpgtw adc pop out add lret fsubr ret in icebp shrl sub insb loope cltd pop push test int jns inc xor push popl loop xchg lock rcr stc lods xchg scas xchg in xchg out jnp out cmp push ja pushf cld pop fstpl js negb cs mov xlat testb mov mov add inc shrl fistpll sarb lahf push in or cli fcompl int outsl lods add fwait addr16 iret movsl nop pop mov movsl rolb movsl mov popf mov int3 jle rcll sarb dec adc aas xor fdivs das gs and push ds lods dec pusha rcrl sub cmp jbe stos ds nop inc add out push out mov out insl sub hlt (bad) and xlat push sbb mov ret pop adc addr16 mov sbb jmp cmp adc and push and xchg sti cld pushf sbb jnp inc imul loope and decb sub cmp lds in cmp adc adc je arpl add nop sub add jns sti add stos mov cli pop push push bound pop sbb fcmove les pop ret and scas ja sahf je xor scas jbe pop push pop inc push rolb push sub insb jae lcall sahf icebp pop xchg js add mov test in sbb pushl fsub fwait jno lcall sub add push (bad) xchg mov push aam mov aas sub push xlat aad loope loopne mov dec mov or add jnp mov addr16 shrb dec mov xchg mov imul cmp mov lock sub and movsb lds lods mov aas add push push xor iret push rcrb test add shlb cmc mov dec dec add adc shrl mov lock mov push insl xor mov dec cmc pop push push js push dec popa mov xchg adc cs es stos lock push ljmp or push jge or pop xchg gs movsl loopne movsl jno inc (bad) insl addr16 xchg lret mov xchg xor add stos mov adc mov pusha pop add (bad) mov mov ds adc (bad) sbb jno and add pop sbb mov into jg or cmp and sub pop mov aas inc jmp test enter mov mov sub dec xchg mov (bad) lock inc adc jle cwtl outsb mov adcl jo lahf and aas push cmpsb mov push inc dec jae hlt mov xor (bad) adc in test mov test jae push push mov or leave pop mov cmpsb adc cmp stc jno repnz pop fisubl xlat sub xor into lahf lret and inc dec hlt fs aaa or sub jne and adc popa push iret sub repz cmp mov mov ret pushf adc ret xchg cmp insb inc int3 sbb dec xchg jne mov std xchg sub sub rcrb or xchg or cmpl pop in sbb ficom add adc ficoml negb ja xor gs sbb adc adc incb cmpb or mov dec subl sub sub leave mov in jp lods push push test adc pusha pop jb sti in aam add inc stos cmpb push push jmp mov pop cli xor out outsb pusha sbb sbb and aas cmc stos popf push xlat jp pop jae xchg es leave sub test mov aaa adc aaa fdivl sub xchg mov lea xchg aad loope cwtl xor es faddl dec push leave loop imul mov mov mov mov sar pop add push xchg and and mov sub pusha popa or push cld sub mov in int imul inc mov popa movsl (bad) mov sub aad push lahf pusha inc cmp test mov inc mov adc adc and je push cmp cwtl loop (bad) push adc aad push lods hlt lcall retw sub orl incb inc push fmuls cmpsb dec idivb cmp jno leave gs jecxz xchg adc cmpsb fsts mov in shr int mov push movsl mov call mov xchg pop and in xchg push add xchg lret xor adc cwtl xchg movsl inc jmp sub xchg shl add imul imul jb pop fs cmp arpl and mov rclb xchg pop mov mov xchg sahf aam add ss pushf push les jb mov cmp push mov sub or push mov push aaa xor mov and (bad) mov mov add dec fwait test push daa xchg into scas cwtl and loopne scas arpl push or (bad) push ss xor jno mov sub (bad) sbb outsb ret inc and lret push data16 add dec cmc test dec add push push fcoml lea sub (bad) hlt sbb ss jp pop fmuls movsl push mov arpl or and dec mov test jno sbb push (bad) cmp cmp lcall je mov mov bound pop pushf lods imul movsb cwtl dec outsl cwtl out sub daa add xlat pop sbb les sahf xchg jp cmpsl (bad) lock cmpsl div cmpsl (bad) fnsave loope dec lea sub aaa cmp call ljmp lock mov or dec (bad) pop neg fistp jne aad into clc (bad) jg addb insb xor jp hlt mov pop (bad) loopne sub mov sub mov dec mov out mov std inc ljmp adc mov push adc repz adc xchg (bad) jb fsubrl ja mov mov outsb mov xchg ret enter je xchg pusha dec enter lcall orl inc mov xor pop pusha test ljmp or and mov push leave shr popf xchg loop outsb inc pop lret add or lret scas dec movsl push sbb stc in dec pop ret lock fbstp movsl xchg arpl sub cwtl (bad) sub or add jne arpl orb notl hlt pushf pusha dec xchg xor bound cmp sub pop cmp fistp mov dec adc ljmp push (bad) loope adc (bad) pop imul xor (bad) ljmp push lock enter xor lea sarb xchg xchg loope cmp ja hlt and cli ret dec aas pop cs jne sbb mov (bad) xchg dec sbb int and mov stos in sbbl mov rcl hlt pop mov aam fild into jae jno fnop sahf adc xor cmpsl ss cmp mov scas sub mov pop pop add xor repnz lcall mov ljmp lock pop cmp xchg call insb push xor add push mov ret outsb jo pushf aad mov adc test fnsave sub push adcb fdivrs jbe ss and bound pusha fwait push mov adc sarl or rcll aas xlat add xor aam add shlb mov lret faddl popa mul popl jg mov lret addr16 jg jno push or loop sbb jmp loope rcrl sbb xlat sbb popa test inc pop rorl es imul cmpsl sarb sti jno int push shll fnstsw xchg xchg call push enter or lret aad jl xchg jbe xchg adc or cltd (bad) adc pop lret ljmp int3 jb out cwtl adc hlt or inc xor (bad) lods xor push mov cmp inc stc shlb lods push divb pop (bad) add xchg (bad) mov fisttpll pop (bad) mov add aad incb out enter jl add cs repz pop push sbb shlb fimul lock mov lods repnz loopne dec push aam aad out cld dec adc scas xchg push push psubq pop xchg push in dec fst mov fldt cmp pusha fdivrl fbld push xchg and out xor and aam cmp fdivl aam (bad) mov rorb dec sbb sarl jge ja push pop mov bnd dec cmc mov mov cli mov jle cmp xor lcall xor fsub push int pop and xor mov hlt leave scas xor out test push inc test push scas push stos push pop jns insb out stos paddq js scas push test jne cltd sbb push cmp mov inc lahf sbb lds pop test js or int fucomp in adc pop mov incb (bad) lahf movsl aas pop jns inc rcll imul mov repnz inc jae aaa or outsb notb add mov mov (bad) loop std fcompl ljmp je push in loop mov add in imul ds ja push std call add adc adc and sub jnp add push jmp in mov push push and negb std add pop lods sbb lret loope pop push (bad) cmp inc xchg in mov push addr16 and jns xor jnp out xor xchg and push mov out mov mov cmp shl rcrl out inc fwait mov fisubrl addb jle stc addr16 dec call cmp add xor into into imul out fidivl fcmovu pushl loop inc lcall or jmp push mov mov mov mov (bad) jo aad rolb icebp (bad) mov fs xor fwait nop pop inc (bad) lock mov sbb dec xchg leave cmpsl stos insl or or pop jns push mov movsb hlt data16 cmc jl aas xchg and lret sti pop aaa fwait nop jno (bad) loopne movsl pop sub fisubr insl xor ja xor inc cmp mov ret call jge popf gs fildl ret inc addr16 push xchg xchg mov rcrb jl sub in and jle push jge shr cmpsl pop out lods sub fwait ss addb add test daa cmovno mov sbb push out imul inc xchg xchg (bad) pcmpeqd mov test inc std sub push pop sbb push sbb enter or adc add cmp xchg push mov test mov mov gs or rol aas hlt ljmp xor jle inc xchg lret mov xor xchg xor jg sub add xor cmpsb repz hlt mov sbb mov test enter incb pop mov stos lea fs push in push insb shrb std mov dec loopne cwtl insb lods sub orb xchg cmp fldcw xor cmc scas mov jne mov in mov lret (bad) jge mov lea add mov and je inc pusha sti cmp sahf dec sahf mov dec je push pop test aam rcrl cmc mov incl inc xor cwtl xor test mov and lret sahf cmp call clc enter push je not lcall int3 xchg sbb mov mov or std push test and test jp pop stos jecxz jle test inc scas scas gs stos add dec sbb call bound mov mov push xchg lret dec inc xchg and cld popa mov jmp (bad) loope sub es out xlat add jbe shlb (bad) ja xchg fisttpll dec inc pop stc icebp lds mov enter in gs gs adc cmp fwait sub push test imul ljmp ds pop scas fdivl stos arpl push jmp adc fbstp test mov mov mov cli std dec (bad) mov mov int jbe push movsb call movsl mov (bad) in into jnp cli mov jge pop fdivrl scas imul in xor (bad) adc pop mov adc or sub jg dec (bad) jp adc in jne sti pop hlt mov sub sbb pop mov push add inc pop lock cmpsl sbb imul push out pop lahf aam xor adc dec stc xchg fcos (bad) les leave bound std dec pop ret or xor ljmp inc push jle js push mov add push mov mov arpl (bad) mov xor adc ret icebp ss sub sub lods mov cmc call (bad) push sub adc (bad) or enter jo mov es push imul or aaa push push pop scas xchg xor cmp dec mulb sahf mov sti inc fwait pop push daa enter cmc test push or iret popa fs sub add mov dec ss sbb dec outsl xchg pusha sti xlat push out sbb cli push mov cmp call adc sub and push out aad inc or lcall int3 mov mov cmp insb popa repz rcll mov into iret sbb xchg cmp add iret add sub pop sbb call xor aaa rol pop push inc dec movsl cmp fmuls fimull xchg mov rcrb pop daa push sbb in (bad) clc scas out (bad) adc jmp mov jp insl lea add cmp ja push rol fimul test inc mov (bad) add jae xchg fidivr and or jmp pop pop outsl (bad) jmp hlt cmpsl inc and mov cs lods mov pop inc mov adc jp adc adc cmp cs mov sub mov aas and xor aas (bad) (bad) in ja aam mov shr scas shrb mov std lock or xor pop cmp push jmp gs test cmp jbe lahf pop sub pop jmp mov cld pop or gs push mov test mov inc in mov aad sbb mov pop and lods movsl in ds inc add ret pushf cmp stc xor leave push (bad) out stc mov aad (bad) xor bound jle lret and std and lea and repz imul cmp daa (bad) lods ret stos cli jo fidivr dec into xor jle mov lahf sub adc dec mov pusha mov out (bad) es mov (bad) cld xor push cltd addl cmc flds add adc cli mov imul je test inc push test sub add xor adc dec dec lcall pop nop inc in mov mov mov lahf out add xor aaa out fsubp fdivl cli xlat ss iret inc stos or cmp add sarl jne sbb sbb mov (bad) lods outsb outsl jp fs xchg (bad) std mov ja inc fidivr jae cmp loop notb or ds repz in pop mov or dec sub fwait stos sub (bad) aaa sub push cmpsb pop or pop out and xchg lock or sbb add fldenv lods test dec shlb scas in inc mov cs mov push jb mov ds push fwait std xchg notb (bad) into stos mov outsb outsb mov xor mov addr16 mov push scas xor pusha jb fistpl mov repz ljmp inc ret imul xorb pop repnz jg ljmp cmp pop mov push mov add gs sahf adc jo int pop js lds push sbb enter mov push shrb ljmp fwait sub nop leave xchg leave lods add leave movsbl jp les add and aas outsl push pop inc icebp cwtl loop lret dec nop adc (bad) fcomps fsubl add lods push inc notl pop push inc loop mov xchg xor or sbb jb int and sub divb divl inc lds push ret lock cmp aas arpl (bad) mov add rolb (bad) inc leave shrl cmp mov ljmp jl add cmpsl add push jg xchg call cs std dec dec push cmp cmpsb pop cmp popa testl scas push icebp insb cld int loopne sub cmp shll sbb mov les test mov pusha jmp sbb repz dec daa push push sub pop scas gs mov or inc xchg adc add lret repnz scas (bad) pop (bad) and jle xchg daa rclb sbb jnp jecxz and mov xor jecxz xchg push or or inc and add call js jno mov vunpcklps fcomi mov sbb stc cli imul sbb out movsl push rorl repnz test cmp out fsub leave push mov sub sub and test sarl leave mov rolb test nop (bad) sti cmp idivb sub shufps (bad) shl outsb pushf (bad) sub aam int3 push ds lret mov hlt add (bad) pusha push gs mov mov jecxz inc outsl jg xchg (bad) call jle ss insb clc pop mov movsl fisttp and rcll in in daa push dec jns (bad) push test lcall not cmp lock adc call pop cmpsl push inc jae sub mov dec lds pop xlat mov xchg dec push push ja mov bound jnp fnstcw lods repz mov cld stos icebp sti mov scas imul mov xchg daa insl add cmpsl (bad) mov mov ret xlat xchg fimul jne ret mov inc dec mov push inc repz icebp decb ficomp or cld (bad) cmp mov pop push xchg js stc inc or mov and xchg sar xchg dec icebp nop cld lock xor mov ret xor into and pop mov mov (bad) jns mov jbe add push sbb in xchg adc gs jns mov popa mov pusha les lret push mov shrb mov enter cmpsl cmc xchg (bad) mov lret repz mov inc or clc data16 sbb je inc mov mov jg in dec jg push movsl pop loop mov gs clc pop push cmp dec add addr16 jmp pop cmp push rcr push push (bad) pop mov cltd int mov jmp xor or inc xchg inc nopl adc (bad) stos pop std sub add dec push jle rolb aaa sub or mov das aaa dec jnp or fbstp aaa jnp aaa xchg lea xchg lahf clc js xchg scas gs lods sbb aam test fadds jmp xor sbbl decl rclb cmpsb lahf mov test ljmp inc call inc dec jo xchg fild loop cmpsb nop and into je sbb data16 or xchg and jmp jmp push cmpsl in or cmpsl subb xor int mov data16 sub imul test int mov cs cwtl stos pop jmp xchg mov jne push (bad) nop (bad) jo jg sbb iret in sbb pop fnop loopne lret rcrl lock icebp xor sbb jl mov jmp or jge mov inc test mov cmp stc imul insl and imul or xlat shlb and push cltd push jno fmull mov in negl loopne stos mov or add test adc mov inc stc (bad) cwtl adc imul in pop lock cwtl push mov xchg out xchg pop leave inc xchg cltd mov addl mov pop clc xchg (bad) (bad) in and ficom mov or les jb aaa add cltd push daa xchg lret cld mov sub push cmpsl push sbb insb sbb scas inc imul int3 cld xor or out mov js ret fisttpll adc ss cwtl dec cmp aaa clc aam je (bad) aaa jge xchg incl inc mov xchg ret xchg aam addr16 cs nop aad mov repz (bad) inc inc or ret mov push xor xorl stos mov out or or push imul call dec clc outsl cmp mov or mov dec insb es jecxz mov mov loope xorb cwtl dec in mov scas std cltd push (bad) mov insb xchg xor sbb jne jmp inc pushf xor inc mov hlt pop xor insb mov pop dec xchg pextrw and mov mov or stc cmp das sub loop scas cmp mov hlt sarb adc mov sbb dec dec xlat cmp es ss imul xchg push test push ja sub pop les test call cmp rolb cmp mov add arpl aas inc fiaddl mov imul (bad) sub test mov (bad) hlt inc inc in (bad) test leave mov sub and movsl fstps jge mov lret or negb jg xchg popa mov jle pop (bad) dec adc jo outsl and fistpll sub ret jnp xchg and add and insl inc jae daa push jmp lock dec sti push int3 sbb cmp insb aaa xchg cmp (bad) jg lahf jb (bad) repnz mov pop lods (bad) mov shlb dec iret (bad) aad pop or mov fwait sbb mov adc movsl cli jne fs mov add mov mov xor push pop nop clc mov add or pop out add cmc or cmp repz sbb cwtl cwtl sub fcomps and orl pop mov nop std into mov push and mov dec jbe xchg cmp dec data16 mov mov in mov loope xchg pusha bound inc mov dec rcrb cld orl mov in les ficompl inc arpl ds dec and pop and fcmovb aaa or or lds insl sub lahf dec std jg jno mov sbb (bad) push xchg xchg inc out pop jbe xor jmp imul nop pop inc and jle outsb jb pusha add popa push mov sbb icebp loope cwtl in in and cmpsl push gs out inc xchg cmp and (bad) cmp mov out cmp jl arpl xor xchg adc loopne jae int inc xchg fmuls cmp or xchg (bad) jae movsl ljmp test jns mov movsl stc cmp mov mov mov jmp outsl (bad) xor push lods mov push cmp ficoml sbb repz inc inc lock fnop sbb test popf pop jecxz push xchg xorb adc ret pop mov rol rcl mov jne cmpsb jns test loopne jo pop xchg xor out push xor lret xchg jmp fwait add stos dec and fwait and movsb (bad) or loopne out add hlt dec mov jnp movsl xchg out push xorl pusha fs fbstp dec xchg mov aam sahf and mov cmp cmpsl jp pop mov xchg and xchg push pop dec push xchg push xor orl mov pop mov incl adc cmpsl les push es int loopne xchg sub sbb test add xor pop scas rcrl mov sub ficompl (bad) clc jo lds dec and pop mov pop lds iret sub inc leave lock fwait jmp cmp int3 adc cld shlb pop push (bad) xchg mov sar (bad) notb movsl test cmc imul fmuls (bad) icebp xor add jo js sbb imull adc fildll cmpsb in (bad) sbb mov add inc jg lahf mov std scas clc xchg or scas sub ficompl and jg mov sahf nop or and inc jb pushf pushl fisubr push add push rcll div jg lcall loope test lahf enter in lods sub outsl fsts jb push mov lcall inc sub pop sbb movb mov add xor jne add insb xor xorl xor adc inc (bad) jae gs pusha jmp push inc in and sub mov outsl xchg subb mov xchg cmp (bad) in imul repnz xchg add dec cli das mov jmp popl adc inc jns hlt push cli fisttp in xchg and push test jecxz pop cli adc les adc pop mov push push pop push cwtl stc sbb push xchg out xchg aam pop xor mov popa dec movsb clc sub int shlb jp sub ds add inc or faddl sahf mov add outsb es je loopne and movsb xor scas xlat adc push mov fstp pushf repz mov pop out jbe push mov xor push push push ljmp ss decl jl sbb mov scas jo mov pop shl pop jbe outsl jg out icebp xor lret add (bad) add lea push aaa notl dec mull dec or enter xchg xchg cmp push adcl (bad) hlt dec ret pop lods shrl fcmovnbe movsb movsl inc xor mov repz dec xor or push push movhps or cmpsl shrl or pushf push cmp dec hlt add push or fmuls adc mov mov mov popf shll fadd cmp icebp insl or in inc mov jbe test repnz call rorl rep (bad) push or jne cwtl or dec or cmp adc in jno sbb cmp jl sti dec jnp ljmp jl xchg dec sbb lret call outsb or add out ret add or pop mov loop testb pop mov aam fisubl sbb out (bad) outsb inc push in xor dec lret jno aas push xchg fiadd int cmp add mov in mov pop sahf sahf std int mov (bad) lods mov jb inc fisubr repz add (bad) jno and out push jmp cmp in xchg jp sbb sbb roll lcall mov mov inc jecxz sbbb mov pop rcrb arpl add int3 mov (bad) add mov aaa mov daa pop insb jae daa add lcall ffree sub pop pop jo push iret inc rcll xlat aam pop push loop cmp mov xchg ficompl adc (bad) mov das or cmp push mov inc ret fldt orl (bad) clc mov jns dec pop lcall pushf pop mov or lods jle ret les (bad) into inc add pop pushf jae inc add call xlat jae dec sahf ja enter pushf decl sub frstor aad push leave sub xchg cmpsl xor ljmp lret cmp xchg cli repnz shl sub cmp int push sar rcll ds mov mov and dec push lds cmpsb xlat int3 pop fnsave cmpb cmp and inc sbb cmp pop mov ret mov xor or aam jl adc add in jnp push xchg cld das std scas loop jns int3 xchg xchg inc imul jle mov push jge jge cmp lock movsb dec or fisttpll cmp pushf and out mov data16 dec xor push sub push outsl mov adc xchg movsl xorl jp mov jle in cmp cld adc subl push clc popf loopne sbb outsb push mov testl adc push cmp icebp pop sub dec in xlat jb jl push push mov xor jp popf pop into loope in outsb dec pop stos fild sbb cmp das in pop ja je xor ret daa and lea jnp lods push (bad) ret push inc lea inc inc movsb ret ret mov adc pop adc insl adc je mov jb jp imul inc loopne sbb fsubrl aad and sbb pop in shlb subl repnz in add mov sbb dec inc (bad) stc scas bound imul stos or inc mov xchg add mov icebp sahf roll add xor and mov (bad) jecxz fwait (bad) pop mov sub scas repz out or das push addl imulb push xor mov xor std mov negl stos (bad) in ja sti pop mov xor popf aam dec push lahf mov sarb cwtl sahf ljmp adc icebp in hlt mov (bad) mov sbb sub in ljmp lahf dec adc dec (bad) pop and jns xchg insl xchg or mov mov sub dec ficompl sub xor es cltd stos dec call popf nop lret xor xchg sbb in sbb fild incb sbb iret repz dec and out stos and and jae stos dec sub pop sbb gs arpl sti xchg mov scas cld outsl loope ds xlat out mov mov or test jge addr16 aaa xchg xchg jo sub sbb jl,pt cmc pop les and cmp push clc xor cmp mov gs inc int3 adc sub dec or fwait repnz das ljmp inc xor shrl lods in add add pop xchg cmc mov jmp popa lsl fldenv cmp fdiv pushl jbe sbbb in je aas jno ficoml pop xchg cmp jno sbb out mov ret int add add popf gs push mov pop cld cmc dec test sarb cs lret out ds fmull jp push sub inc leave xchg ret add mov mov mov xor sbb xchg pop test inc mov pop push shrb cmp xchg pop (bad) ljmp lcall pop inc xchg jns pop cli xor and adcl in repnz stos repz or cmp cmpsl shrl cltd push (bad) dec mov into stos jle aaa xchg mov (bad) (bad) aad lea (bad) js sbbl cmpsb aad rorb mov cs and les aas ja sbb xchg xlat sti in sub std inc jmp pop cmp stos xor dec push pop pop test fsubrs lods xchg and incl dec adc lahf repz std sti add je outsl negl sbb or sbb stos in addr16 mov test jmp cmp popa add pop dec (bad) pop mov fnstsw and (bad) out jg lahf scas data16 pop xchg hlt add and cmp inc or sarl js cli cmp fadd lcall add mov mov dec jmp jmp stc test fwait pop mov out (bad) lods call and mov std jns mov in in or pop xor xor push shrl movsl mov scas daa fistpll dec mov pop mov fcmovb insl ret scas dec mov aas aaa rcrb xor sub lea xchg mull stos ficoml xchg divl into aad aas jb sbb imul sbb inc subps inc pop push lret and rcrb test and fs add mov push xchg arpl movsl cld xchg fiadd sbb pop dec in (bad) int jae jmp rcll jg pop lods sahf sub push push inc icebp es out add mov sahf dec mov and adc xchg outsb scas add or in test (bad) or adc (bad) pand cmp and push pushf inc mov (bad) mov cmp pop test aas insb mov je mov sub xor dec sub pushf ss sbb repnz xchg mov mov push iret xchg cmp mov jns jo (bad) negb pop jb jl push mov es std test or scas jle cmp xchg pop sub sub jo sub push adc lret mov sbb dec pop adc mov (bad) mov sub rcl negl sbb (bad) int3 negl shrb rcr mov lock xor dec inc lret push ret out fsts pop (bad) mov mov ret dec stos lock andl out rclb inc (bad) sub addl fnstenv xchg data16 test fisttpl fldt mov mov dec out movsb jb cwtl and test testl sbb sub push jne fisubl iret dec xor jg into ljmp (bad) out dec pop stos jp ds add hlt fwait out das push cmp cld (bad) mov pop xor icebp mov adc out shrl es insb fdivl mov pop inc mov hlt (bad) pushl push (bad) adc cli shrl imul cwtl in ret jo adc or repnz inc push aas pop clc clc sbbl xchg out movsl lcall jbe hlt xchg mov sub mov mov or jecxz cli mov xor subl mov scas enter shlb jo cli and jno (bad) cmp and pusha mov adc cltd xchg xor jno jmp push enter lret js in in insb lods lret imul iret out stc std fs mov ja and push and mov sahf test adc inc inc into clc fs adc mov pop or rclb push dec sub call pop add (bad) out jo js fidivrl mov out add repnz stos outsl (bad) push mov fldcw add jbe xchg adc out jecxz or (bad) lret sbbl push inc insb dec fmulp or (bad) js in add movsl and sub addr16 jb imul test push stos lods nop or add leave scas mov ss or js inc or jle mov fwait insb add movl fmull leave fiadd sub pop and test cmp and push jl mov popa pusha out cmc pop ret inc fucomi push pop cmp pop mov test dec cmp mov mov js fistl xchg xchg fidivr stos aaa xchg arpl pop vpsrad and out push outsb jb enter test and imul jle dec dec mov mov roll cmp loopne (bad) adc out movsb sub and in dec adc dec sbb iret xchg mov insl mov lahf adc out cld add push imul lea test sahf addl and mov sti push out stos or sbb bound mov push and push rorb xor adc sub xchg (bad) daa jl push les jge test icebp cmp aas js xchg adc scas cmp jmp inc mov (bad) aam xor std scas sub jbe adc jne xchg dec adc repz mov jl add fdivl xor jo cmpsb mov add test idivb jb cmp and cwtl mov das lret loope hlt into cmp popa aam mov popa in adc pop bound push or sub stc mov gs fsts xchg popf (bad) stc sub cli ret or cmp add loop jg (bad) in ja xlat pop mov or cmpsb pop mov sbb (bad) lret mov enter jmp imul sarl test (bad) mov jg imul adc cmpsb sbb imull adc les hlt inc stc shlb ljmp (bad) mov fstl dec mov pop ret je add popf movsl ss fisubrl jne mov pop cmp (bad) mov jno sbb xchg jnp xor repz sti out lods (bad) jo mov popf push cmpl push lcall and popf cmc fcmovnu sahf fs pop pop jae iret push lret or leave loop push pop rcll out mov mov sub enter bound rclb imul orl lret push pop sub stos insl push (bad) shll dec scas add inc jmp dec xor notb sub mov or je mov sub add and mov loope pop lret ss xchg dec lods push push into out lret mov (bad) in mov sbb fist push adc add std loopne (bad) or jg loopne popa xchg or inc cmp out dec popf push pop orb ss sahf and sub adc mov sbb adc mov ret xchg sbb or add testl test je sub neg or insl cld push sbb inc adc (bad) in push xor test push add jmp fiadd jl je subl enter cmp fmuls inc dec sub sub xchg jb sbb faddl fnstcw (bad) xchg mov xchg outsb xlat out lods int3 in push mov loope pop jbe outsb daa xchg mov push (bad) sti xchg sahf and inc movsb aaa dec arpl ds cmpsb mov inc ljmp pushf pop dec xchg and adc addr16 pop cmp add clc adc jnp (bad) icebp push and xor mov out gs sub mov xchg loop (bad) cwtl and shrb ss pusha mov push int3 lds sbb incb push loop (bad) mov inc mov icebp data16 out mov aaa sbb push sarb adc leave push aad add in xor mov test sbb pushf cmp sub (bad) jae loopne (bad) divl xor add (bad) lret pop jmp pop repnz notl imul sbb mov mov add ds mov bound jmp xor shr add sbb call sbb mov dec popa loope push sub pop movsb jg push mov push inc outsb sbb lea and fucomi cltd pop jl cmp jg lahf out cltd into mov xchg or mov mov xchg lret cli pop aas aaa out cmp jmp lods out sbb jne pop (bad) mov arpl pop sahf loop pop sbb outsb jae adc aam mov (bad) roll jle jbe xor jbe sbb and adc dec sarb clc or hlt ret or aaa test js inc (bad) lods push xchg push add cmp (bad) mov rcll and mov push sbb es (bad) mov out mov call mov pushf hlt mov add push push xor lcall cli dec push lods in dec fdivrl iret inc arpl lahf insl add jge add out es roll cmp push fdivs push jp mov jae mov (bad) repnz jmp cmp adc xor adc xor (bad) xchg push push test sub mov xor adc and sbb scas mov aam fiaddl lcall mov fcmovnb pop add push test bound and sti leave mov lods jo lds pop inc jbe sbb pop inc lcall adc mov into or sbb imul dec (bad) cmp das les pop stos sub call sbb fsub jns shll int add imul cli jbe stc fdivrs pop lcall cmpsl int inc cmpsl sarb xor pop aam ret sub loop and cmp mov xlat mov pusha js adc fisubl (bad) xor jnp scas cs jmp lods jge dec and nop loop das loope xchg daa loop out push push fwait repnz jmp jnp ss inc rolb add cmp jmp push cmp pop aam and out adc adc arpl icebp es dec outsl xor xchg pop and ret push mov or (bad) in fstpl enter and pusha test hlt out and mov pop sbbl sub (bad) adc or jns and jmp mov insb add sub dec (bad) test sbb cmp push jae dec push sbbl adc inc cwtl xor add sbb sbb loop nop and push adc ficom push add push and data16 push adcl add add aad inc jb xor lea jmp arpl test sbb sqrtps cmp subl bound push sbb add test (bad) cmp add sub out cmc push push push pop mov aaa arpl and jne aad je mov sbb data16 loop aam dec mov xchg test mov mov mov or mov jb adc xor aad lcall arpl cli lcall adc out mov insl cld ficompl out jle pop ret xchg xchg xor jbe sub adc lea adc addl xor repnz ret xchg mov addl mov ja pop adcl jb loope ret aam and pushf cmp sub mov imul mov xchg test das mov sub and sahf push addb sub cwtl mul push pop scas imul or jne dec aad lds inc rcl mov fwait test popf faddp dec mov stos and jae push adc sbb jmp insb push hlt or sub repnz movsb ret push xchg loope jns sub (bad) mov ror push jb mov mov fimull dec scas in cmp sub xor clc outsb push mov push lea jp dec mov insb in jns inc push sub in es mov adc loopne shlb cmpsl push push repz sbb mov add popf adc (bad) popf imul sub faddl pop rcrb mov and andl fs jmp into andb repnz les mov mov lods fwait cmpb mov stos push cld xor push inc dec stc repnz jno int mov (bad) mov call fisub and movsb pusha sti int3 mov mov pushf js mov sub fcoml stos data16 popa stos aaa int3 inc sub je hlt push ret jo lret sub dec pop fucom jle push (bad) mov mov repz jnp inc inc stc mov fsub mov icebp push mov stc inc imul daa adc negb mov cmp jbe movsb cmpsb mov icebp add sbb fiaddl jae stos lahf ds mov pop and lods notb sub mov test fwait jne add cmp mov cmc rolb push cmp in mov cmp mov cmpsb enter jns jp mov push lcall and (bad) xor cmpsb pop sbb jmp sub rolb sbb fwait pop and adc ret aad cmp push sub mov xchg dec jno pop mov xor stc daa sbbl push xchg test jmp shrb pop pop sbb dec sbb xor ret rorl push mov repnz ljmp and mov jno fstpl mov in pop inc nop and pop inc inc cmc adc lock jb mov loop mov dec stos adc mov fisubl (bad) and pop jns mov and sub cld xor sbb sub cmp inc push cs sub (bad) push mov jmp mov int (bad) and mov stos push mov push inc push jecxz jnp pop adc dec mov sub xchg fstpt pop jecxz gs cltd xor jp jl fisubrl (bad) pop ss cmp mov in mov cmpb (bad) repnz jg inc sub mov jecxz and xchg sub dec pop push out arpl dec adc dec jno push mov pop xchg push mov lods imul add (bad) xchg push inc lods xchg fsubrs add mov pop push pop fcmovu and lods jg lret pop jmp and xor pop inc dec xor xor xor jecxz ss push insb int add add pop test and rorb daa test rcll and cmpsl mov dec cmp sbb push xor mov xorl pop push jmp add mov repnz or fxch fisub mov scas sti mov cmpsb sub jo or xor mov mov addl (bad) jae and test movsb mov mov mov cltd push mov or dec xchg iret je outsl into xchg and cld jl xlat fwait les mov inc inc inc xchg into and mov jmp sub or sub aas adc sbb xchg loop push push pop mov pop loopne (bad) cmp inc xor jmp out cmpsb push dec dec loopne dec and mov xchg inc push aas ss clc shll popf pop dec scas xor insb aam out sarl jmp push or cmpsl xchg pop sub mov mov pop fisubr add scas aad cmp aad scas push notb in adc fist jle sub mov insb out (bad) cmp inc push jbe cmp mov div dec into and adc sub xchg fwait es das pop mov cmpsb push mov or pop xchg inc cmp sub pop js or sahf adc inc daa ror adc (bad) inc and pop popa push cmp sbb cmp popa pop mov xor outsl andl or int3 (bad) push nop push loope shlb sub stos pop in sbb mov push into cwtl adc clc add pop mov dec bound (bad) mov mov jo xlat aaa mov int arpl aas cltd call sbb lret enter xchg (bad) cli inc sub push aad or cmc dec xor pop in mov mov mov xchg out jl xor fiaddl and inc xchg pop je (bad) icebp mov jno xor cmpsl add xor push shll push mov arpl imul fdivrl jno sarl stos ret aam out jne pop mov stos outsl mov jg dec cmpsl (bad) cmp divb xchg add mov test dec sbb in mov fsubl pop sbb push cmpsl inc cs pop fsubrl les inc sbb cmp mov dec dec inc push jp jnp sub add xchg xor addr16 push rdmsr xchg (bad) sub adc lcall dec sarl cmp cmp jmp xor (bad) mov and cli add jno add mov ret cmp cli fwait or daa mov mov sub cmp jo aad into outsl xchg (bad) sbb sbb or xchg sub decb or test push test dec popf add add shll lret daa ljmp lods xchg cwtl lods sbb push popf push jne sub mov mov mov das mov cld cmc cmpsb outsl mov roll sbb jecxz dec sysexit dec xchg xor aas jmp mov mov call jge jns xchg mov scas jmp ljmp dec int cmp cmpsl int3 outsb push negl sub fcmovne xor pop (bad) pop leave cmp jo popf nop pop loop test out push push imul xor sub mov in or ret inc push lea mov lods push inc out lahf adc rcrb aaa (bad) movsl lock sub mov int aam (bad) repnz push or adcl add sahf ds jo xor adc das sti mov in enter pop aas leave in sub stc sbb or aas xchg ret mov (bad) xchg movsb jns scas dec dec or cld push or lock xor xchg in outsb imul (bad) push mov scas xlat push add insl pop dec (bad) mov or pusha or jmp rcrb popa mov mov cs les aas adcl imul xlat push mov loope icebp test pop cli repz mov (bad) sbb pop mov ja pop daa scas and xor jae les add aad mov pop je cltd mov mov int idiv clc cmc push cmp mov gs jmp sbb cmc cmpsb test cmp push subl incl cmp jnp xor mov xchg ljmp and fldl xchg sbb inc mulb cs (bad) daa fidiv test ljmp xchg mov cs cs dec incb push push push outsl cmp leave bsr je rcrl test popf jle jbe repnz test xor cmp inc sub iret jns pop stos inc std xor cli cwtl stos out insb (bad) jnp jo into ljmp jecxz jle mov nop or popa cmp and shl jge or mov jne in cmp sbb pop jecxz add xchg icebp arpl mov and lock fnsetpm(287 dec mov int3 inc pop xchg adc adc cltd adc xor and aas and imul add frstor fdivrl push sub lar sarl xlat pop add (bad) lcall mov dec dec ret mov pop mov hlt mov xor xor cmp add pop nop push cmp pop jbe in movsb adc jl mov and (bad) pop pop sbb jb dec adc mov push jge insl inc pushf lret (bad) xchg sbb xorl or out push dec mov aad mov mov cmp call inc push xchg flds cmp jmp sbb mov incl rcr push dec (bad) cmp mov lret bound jnp jl or xchg push int3 xor loop add add xor enter push nop (bad) dec cmp pop mov cmc xor int3 sbb sbb ljmp push pop jmp xchg pop cmp mov and pop js fadd insl xor or xchg (bad) cmpsl cmp loopne lock pushf test (bad) dec (bad) cmc push xacquire (bad) inc imul nop lds stos cmp out dec (bad) and fild mov push movsl push jle mov movsb sub ljmp addr16 out inc mov or dec mov movsl nop lret push inc jp push adc insb cmpsl mov movsb fcmovne push cmp mov xor dec and xor ficoml mov lcall insb je mov repnz xor fs int3 and aam aaa repnz lret inc cmc and bound dec cli xchg es push fnstcw daa sbb pop faddl cmpsl fimull push adc scas ljmp js xchg faddl adc jno xchg popa ljmp xor sbb stos test sub stos leave sbb hlt das stos pop jb mov scas add mov les lret pushf fmuls test insb mov jae repnz sub cmp jns mov mov and nop jmp sahf test jg mov jo inc mov scas push add or int cmp push out mov cltd data16 jae stos dec mov (bad) daa jmp loopne fwait loop mov xchg push mov xchg mov ss jge push jo faddl jae adc push lret jl imul mov inc aam or fmuls cld push push xchg ja mov imul out cmc insl das jecxz sti dec cltd and rclb and mov cmp push cli ret in mov (bad) ds js in pop movsl sub pop outsl dec mov inc mov jp pop and sbb mov add sahf in and loopne xor mov imul repnz mov fdivrp aaa lea jp test stos faddl dec data16 test sub xchg xchg jnp icebp pop xchg mov pop mov aas inc data16 adc lahf scas mov jmp popf inc (bad) int sub jecxz xchg outsl add out cmp sub lds or (bad) mov mov jno xor dec ss loope jnp xchg test loop data16 fwait adc and int mov nop fistl int pusha icebp test jae mov aaa inc (bad) sahf in (bad) xor xlat roll arpl daa or dec daa sub ret jg mov cwtl inc ret mov or ja (bad) mov in pushf pop inc jl dec out enter and xor scas in xorb cli call in test sbb test pop lods dec xor daa pushf xchg push cmp adc or push hlt loop outsb fistpll les clc mov test pop fld sub es xchg cmc cmp mov mov ficoml (bad) xchg adc sbb xor ret add and into mov cli pop or jle mov pop cmp push add xor fcmovnu out cmp push iret mov sub or xchg cmp xchg jecxz push mov inc mov jno xor adc and jmp mov dec nop aam pop (bad) cmc sbb mov sub push dec pop xor push push cmp mov js pop push daa popa cmp nop xor xchg cmc mov fadd xchg mov adc pusha lock jecxz sub (bad) outsb mov adc mov (bad) cmp dec sbb dec push adc jl inc jno ret and fldl mov dec aad std pop mov in pushf mov mov cmp jo xor dec sar mov inc loop daa mov js movsb fcom loop mov xchg pop mov outsl es cmp loopne mov (bad) xchg ljmp aas test cli shr (bad) jns,pt inc iret std jnp nop pop div jbe mov push mov int fsubr cmp dec fwait (bad) addr16 cmpsl (bad) daa mov mov pop (bad) aaa std mov lret lret (bad) imul jnp push push addr16 je loop lret cld sbb add pop sti pop jl sbb add and xchg push add jmp xor mov adcl xorpd fdivrl popf enter mov jecxz mov add ss mov adc push push mov in mov push stos divl ja cmp ret cmp push ss push add dec out mov xchg daa mov xchg (bad) cmc xor pop or sbb pop xor hlt call sbb inc jmp cs popf ss mov cmp fidivrl adcl inc add dec (bad) add std std adc sbb push fs cmp stos jl xor (bad) or cwtl mov push or test jecxz pusha sbb sbb lods pop test lock push dec bound fcoms lret inc outsb repnz xchg outsl das lods and std lods xor or mov loopne hlt jns mov sbb decl cltd push ffree outsb arpl xor roll push adc scas inc js fistpl outsl xor lret cmpl pop ss push out imul stc stos lcall cmp add movsb rolb mov adc mov mov stos xchg testb push xchg or jge xor mov adc push (bad) sbb ret pop xorl mov inc jb adc lock loopne nop das cmpsl jae ja loopne dec sbb xorb shrl mov ds enter sbb les mov dec xchg add das pop fildll inc pop or call lds in xor jno mov and sbb ret pusha lods sub out cmpsl sub addr16 pop pop or pop shr mov and mov sbb loope imul xor (bad) dec sub mov jnp out and into cmp cmpsb test mov xchg jp,pt js cmp and scas ja mov outsl rcll mov adc rcr pop in mov roll aad pop (bad) loop xlat imul pop inc lods xchg or cmpsl lock sub not mov and or mov xchg movsb (bad) or xchg fnstenv ljmp pop (bad) aaa aam and mov test adc xor ss sub rcl xchg stos cmp lcall rclb sub (bad) mov xlat rorb sahf jno pop in popf mov push fwait push add mov loope sbb jns popa mov sahf (bad) in push sbb (bad) fnstsw xchg out or hlt out inc cmc gs sbb or jecxz sbb lods sub flds cmp insb mov insl stos test imul add xor mov movsl das inc pop and push lahf xchg lcall or add imul lods cmp (bad) cltd cmp xchg test and (bad) jns ss cmp pushf fwait repnz call popf dec inc jl (bad) jmp cmpsl push clc fadd xchg add adc add inc fdivrl and lods mov call adc loop or mov inc dec aam test std incl fildll scas xor out xchg call pop aam adc cmp notb pop data16 cld jl icebp xor movb pop xchg mov ficoml sub mov inc insb jns xchg jno mov add (bad) insl cs push cmc xchg mov das push push add xchg (bad) sbb in and lahf mov scas push fsubrl roll push (bad) imul mov lods lods icebp jg fsubs mov imul pop xchg or mov mov test cwtl sbb cld and add test aam call inc addb xor lahf sub push cmp aam ljmp (bad) mov fistp pushf mov pop push leave aaa lahf nop add das cmpsb cld lods outsl test into push (bad) in mov notb dec data16 or push and out mov popf push lds clc jns push jecxz sti sbb inc xchg add (bad) call repnz out mov add int3 adc mov and mov popa ficompl fcmovnb test adc jecxz popf adc out inc es pop sbb lahf adc lock pop (bad) mov ja loopne push pop jge rcl fsubrs lock negb lods inc cli (bad) jno adc jg xchg stc js nop add xchg stc sbb (bad) cwtl (bad) (bad) fisubrl or or and sub adc dec faddl pop sbb jl cltd sbb jae shrl inc repnz and imul cmp or inc jb hlt and lds sti hlt jb cs adc mov mov add mov mov xchg in bound popl sti imul xor loop addr16 lret sahf aas repz dec insb push cli mov ds fisttpl xchg sub push cwtl mov les mov xlat pop dec int cmp arpl neg xchg mov aam cmp dec jbe orb clc ljmp inc icebp lds jl lds jnp add mov add fsubl in inc push mov mov mov aad or dec outsl test cltd scas rorb inc lret insb sub mov loop mov sbb mov jmp movsb (bad) mov mov xchg xlat pop pop dec in or sub outsl loope arpl (bad) movl or jl div cmp mov or mov adc xlat push test (bad) xor test (bad) push sub (bad) repz push and je mov push dec cmp jns mov push loope dec imul rcr jecxz or xchg movsb icebp fmulp cmp jb frstor jle xchg pop push mov mov ret nop enter xchg xor pop dec jmp add (bad) bnd dec shrb enter cmp add fcomi enter icebp pop out mov mov ja mov movsb jbe jb je pop mov inc mov inc loope int jmp push fwait in cld push cmpsl int jmp sbb jns in loopne xorl test dec push push jnp leave (bad) out aas mov and stos subl andb mov (bad) fcmovnb je mov xor jp push add arpl ds test js repz jl (bad) mov xor cmp lock or movsb scas repnz sti dec roll pusha frstor jnp out jo dec push add gs roll das cs into ja mov test insb movsb lea add insb xchg nop ficomp and jo jecxz in jnp jg mov cld mov outsb jmp mov jge fs add inc jnp fistpll ds mov data16 imul add add sti jl jle (bad) mov or das mov test or sub inc cmpsb cmp stc lcall xchg xchg ret fwait lret call stos adc push xchg in test pop jb and js fldl popa ljmp dec mov push enter and jl dec dec test arpl cmc arpl imul insb lods sub sbb inc mov mov mov adc mov subl popa sbb es adc and push je jne or cld add dec mov in in lods decl ficompl lahf stc push int dec cwtl faddl and out mov imul xchg pop and ror ljmp pop fadds mov sbb pop in adc (bad) xor xchg or lcall jno jns xor jmp mov (bad) mov dec xorl jge cmpl outsl sub sbb movlps ret dec call jns jno mov lret or and ds sbb sti sbb int test in jle test or je sub (bad) mov out popf cmp insb xchg jo mov hlt mov sbb mov cltd push aad pop fwait jae push cmp mov push cmc fstpt pop jmp push mov mov aam dec int3 test jecxz cli lods (bad) jo icebp xchg sbb shlb jmp push mov sub xchg xchg rcrb push xor sbb ds (bad) xor repnz test ljmp xchg dec outsl ret adc outsl mov mov xchg scas out jnp mov add jmp and stc jmp inc adc dec loopne imul scas and into clc and fwait (bad) pop (bad) cmp mov inc loop or jbe rolb (bad) ja or clc cmovns pushf jl test inc sub jmp sub sahf std jge loop ds cmc sti mov cltd mov and insl push and cwtl add lock imul ja or ljmp js sbb mov xor sbb shlb mov in dec push pusha push jo fucomip sti or or xchg test stos imul loope xor in repnz clts or fnstenv xor jge and lods pop test jmp or pop ret (bad) repnz xlat inc gs call pop ror hlt and pop fs dec scas pop mov test leave shlb dec test add test gs out mov mov cmp int out sub shrb scas lahf jns sub in mov inc in xchg mov jo stc dec loop getsec enter jge sbb push fs (bad) jb push pop in (bad) cmp add lret push gs lods decb jmp mov iret imul dec mull bound enter (bad) stc inc adc jge ds mov push jle movsl je dec (bad) loopne mov and (bad) mov or lock cmp xchg dec cs mov inc je movsb (bad) mov clc fsubrl inc xchg xor or stos in data16 xchg imulb push dec jecxz pop push and lods push pop test or cltd pop ss pop jg mov es sub inc xchg out xchg xchg stos lcall push int3 mov xchg sub inc mov (bad) dec shlb ljmp pop mov (bad) mov shll pop leave lahf daa jge dec cmp enter xchg daa dec dec (bad) jbe addr16 add xchg aam in push dec (bad) stc jge scas stos mov pop add arpl sbb mov adc test out mov js cmp fiadd inc xchg loopne or and icebp xlat xchg mov mov inc imul sarb into sub gs dec jle jg into jne xchg arpl cmp rorl xor es rcrb lods sti cmp nop pop inc xchg rolb dec push jmp or jmp aas mov dec sub mov fbld push jno mov cmp shlb adc in mov outsl or loope ret cltd orl jno cmpsl mov jp in (bad) cmp fucomp iret outsb fsts ss cmp in mov data16 xor push enter fadd enter out popa jle cmpsl dec cmp xchg mov xchg cmp sbb inc call stos dec or nop gs fcmovu inc (bad) cltd dec nop outsl dec in out fs movb insl mov jg scas lahf push les jae fldl out outsl enter adc add inc clc dec pop xlat xor je cmp mov mov jle pop push lea movsb iret js insb pusha mov andl jmp or mov not stos xchg out leave cltd jmp cltd inc shlb pushf test (bad) gs mov dec ret sub clc mov (bad) fnop and inc mov mov std (bad) and out ss arpl in shrl inc aaa clc mov dec xchg mov lahf leave test mov xchg jno dec lea fidivr jle lret pop hlt mov in or les pop imull iret mov push inc pop mov add mov xchg xchg sub (bad) dec cmpsb cmp rcll cmp cli add push aaa dec xor loopne dec in mov jle scas addr16 mov inc std inc sbb dec jp stos mov lret mov or mov pop (bad) pop mov stos mov fwait sti mov mov dec fwait jns dec cmp roll mov gs pushf (bad) xor inc xor into sar fs xlat mov addr16 adc (bad) jmp push in loop test add gs cwtl cli je call cmp js out jb jb pop sbb sub int push rcrb cs sbb push xchg outsb inc cld pop lahf popa jg stos imul lods loopne popf div and jb das jl in cltd push jl jl add add xor orl arpl pop sbb enter mov mov call andb dec insl fwait adc (bad) xor imul jl popa shlb in std mov arpl and shrl add sub cmp ret shlb cmp jle icebp out jp cltd stos test aam inc mov lods sub sarl out nop add faddp hlt pop out mov jo jp test jmp dec int3 dec add dec lahf bound inc mov push imul insb mov jle adc stos mov je mov push inc fdiv lock mov mov or xor (bad) std js xchg clc mov addr16 jne in sbb add cmpsb sbb push int3 loopne iret aam ljmp xcrypt-cbc cmpsl push mov sarl cmp mov (bad) mov loope sarb xor cmp std and push sbb dec push aam mov xchg lcall or das pop cwtl dec test pop lea pop sbb negl mov test cmp das popa orl stos (bad) in scas cltd push iret and inc sti addl js (bad) mov or cld mov dec adc (bad) xchg jp add mov test fwait and aam nop arpl pop adc hlt pop js xchg fadd jle scas jns sbb push lods jb icebp pop add mov push gs inc (bad) outsl in aad cmp jmp xor xor xor cmp ss insb cmc das inc fs mov mov cld scas ret jne jmp xor xchg xor or out and test fdivl mov jno cli and test hlt daa aaa aad les and repz pop cltd stc fimull sbb mov cmpsb mov jae sbb cmp out jle and popa dec aas and xchg lods adc add test pop mov mov fistl ds ss adc cmp fwait sub sub mov (bad) mov scas test xor rcrb push push rol push ja popa adc stos sahf xlat and jnp xor pop dec cmp sub mov (bad) pop push push fnsave stc sbb sbb in sub shrb ret pop xchg pop fdivrp mov and jl mov or inc pop add pop movsb or and push jg mov gs pop pop scas arpl cs clc and mov or dec or add jo cmpsb dec pushf mov ftst or (bad) dec or push imul es push in fidivr mov int and mov dec adc bound ss lret scas adc bound mov stos and gs je cmp movsl sub shl sub or inc orb out outsb test xchg clc jg cmp dec outsl dec outsb out mul addl adc lea xchg clc mov sbb sbb iret cltd (bad) mov sbb jmp xchg inc jae pop es xlat inc pop loopne inc push stos repz inc repnz cltd fsubrs sub adc aam stos fcoms mov loope pop test daa data16 mul pop lret xor es mov dec jae push jbe je mov insb (bad) std cmp (bad) pop and sub inc pop incb mov add mov inc push sti jno,pn aaa mov cmp cltd mov push cmpsl mov jno fbstp fnstcw push xor jmp mov ret mov addr16 jmp movsl mov popl in fnstcw or sbb jmp jle cmc xor pop cmp std seto ja fsubp xlat mov ljmp or leave jl mov dec sub (bad) xlat cmp ret or push mov ljmp mov scas jmp cmp cmp jp cmp add sub add nop in lahf cmp mov jle in negl jno cmpsb jg ja dec rcl leave stos xchg jnp ficoml cwtl push pop mov jecxz sub loop hlt xchg repnz decl jp adcl ds jno push inc jl push inc jecxz into scas and inc dec push aas les das faddl xchg call or mov mov mov sbb xor gs add outsb cmp ret std jns mov jg cmp cmp and fnsave mov aad in mov imul jo mov lahf test mov aas pop je cmpsb pop xchg cwtl or add test mov mov aam pop or xchg jmp js or (bad) mov mov pop sahf sub int3 inc push es xchg into je xchg pusha cmp xor mov xor add dec sub cmp rcrb cmc xchg mov pushf enter stos data16 mov (bad) mov adc sub dec in sub push xchg arpl aaa cmpsb in hlt fldl xor mov jno lods lea sbb les (bad) xchg rdtsc in mov xchg dec sub push fs jmp scas sbb pushf xor inc out dec pop in scas mov sti pop pop mov imulb out in jo mov je jnp nop sbb sub jns pop pop pop inc mov jae and pop movsl nop ss xchg xor dec aam into pop out fs aas push mov jmp or inc jg aaa mov cltd aad aaa push xor lods nop mov popf pop sub mov cmpsb das je mov pusha lcall fimul add mov repnz jecxz xlat or insl aam xor fs das push jge dec in cmc fisttpl and xor xchg cli cmp jl add fucom push and adc inc adc je dec mov xor sbb xor outsb sti xchg (bad) je adc mov jl sbb call inc push inc jo add out xor es lret movsl (bad) ds ja lahf jo pop daa ret xchg sahf pop movsl xchg test pop mov adc cltd mov sub imul pop cmpsb aas push jl lds stos jne xchg push or cmpsb daa sbb mov sub ret xchg ds mov pop fistpll sti (bad) out in cmp pop cmc jp xchg es fildl jmp (bad) nop jp dec push cmp out pop ret add xor cld dec ret add leave ds jge mov inc in push rcll std mov adc ret cmp data16 jle movsl jno into pop or (bad) pushl in popa mov icebp dec mov mov push addr16 imul (bad) cwtl out shlb je or mov sub std ja movsl push bound fisub sbb push (bad) cs or out repnz dec mov outsl out rcrl rep fidiv out stc je (bad) jl or cmp push push xchg inc jne mov cld lret cld xor notb pop cmpl call add lret int3 arpl mov jnp pusha jg mov (bad) repz or or imul pop push and cmp (bad) cmc in shr mov fmul imul js cltd imul jb fsubrs shlb sbb out mov push pusha out jo or jno cmp mov push pop lods mul jne aaa clc icebp lods pop inc mov ret cmpsb pop dec nop mov pop loop dec pushf xor jnp dec add addl lret int push add popf and push xor jb xchg clc cmc push xchg xor inc (bad) or mov les push mov cli mov sub iret (bad) jo cltd incl adc in jbe outsl sub add nop jns stc jns aam shr push fsubrl mov adc xor lea xor stc cmp jg jae pop mov dec mov pop inc xchg sub aaa or dec rclb sbb lods jbe (bad) loopne mov jmp aaa mov mov hlt test cmp add sub add xchg fcmovu adcl punpckhdq les xchg scas mov mov inc bound mov push scas sub outsl mov fimul das adc xorl sahf mov mov dec jne (bad) clc or rolb or sbb pushf or xchg dec mov out cld jnp dec scas movsl cs cmp mov loope jbe adc flds jo xor insb (bad) aaa xor cmpsl outsl sub xchg sbb ficom inc fistpl xor loope cltd fiadd jno (bad) aas pushf mov (bad) sub lret call xchg lcall shrl cmp int in mov jge dec sub pop mov xchg adc pop fimull mov scas bnd ret mov les or mov ja movsl loop push pusha enter xchg sub xchg sbb or pop add mov andl xor wrmsr and cmp inc push adc pop fs mov js dec add sub lcall addr16 sub add lods mov dec xorl inc rclb or push int pop js stos mov mov or ficoml js daa sub cli xchg add or push sub push add ret cmp or and in adc outsl pushf lahf add fdivrs xor add inc adc jno les jmp cld lahf and into push in dec test push adc jne,pn lret das jne cmp xchg js xor repz or adc lds dec and xchg cltd lahf xchg push data16 pop test cmpsl mov mov xchg in xchg movb std ror fisttpll ljmp imul adc out sub xchg jb enter add ljmp dec in mov xchg sbb and les fs leave mov or cmp jle in imul insl cmp jmp je push inc jge mov cwtl int3 (bad) fidivrl inc xchg jge mov repnz shll dec mov mov jl or cld sub test cld popa jbe cmp mov test sti mov mov cli xchg pop pop push and (bad) mov push (bad) leave jne (bad) lock outsl jo (bad) push aad push in lcall and xlat mov sub mov add mov pop xchg mov repz add test nop or hlt sti xlat jb add pop sbb pop push loope dec pop or rorl mov mov sbb enter pop cli xchg push (bad) in pop dec or sbb mov pop out jge popf push push sbb sub in or (bad) push in lahf rcrl sub outsl jns in loop sub jb out outsb sub push sbb in xchg mov int lods xor pop mov scas and sbb jl shlb pop in mov xor arpl push xchg sbb push pmuludq cli pop lea outsb xchg mov in cmc ror pop and xor adc pusha loope in mov cwtl clc sub inc mov sub inc xor mov addr16 repz scas std adc mov ljmp mov aad push mov movsl xchg sbb adc movsb fbstp xlat pop repz fcmovb mov imulb mov data16 pop jmp add mov jecxz stc loope xchg mov ret adc cmp pop sbb xchg ret test addr16 ds lcall lret or add dec pop rcrl or ret adc lds dec mov or les or addr16 pop inc pushf aaa xor fs xor icebp in repnz push xchg movsb add jnp sbb xchg cmc ds fdivrl jl cmp repz add and dec push xlat in mov or pop inc pop dec test jecxz icebp sbb roll xor mov dec add sub or mov and mov dec inc adc dec mov add add std xchg pop xchg mov sub and stc sub pop mov aad fsubs pop ret push sbb test jp stos fcmovne ret add lcall jge test lds mov aaa xor in mov mov pop aad shrb getsec in rorb aaa pusha and lret inc mov mov mov sbb and pop add lahf lds fwait and pop or sub sub ret inc or out add enter (bad) fldenv ret adc imul and mov mov xchg aaa popf iret mov insl sahf hlt jg ret inc add pushf lcall sti bound xchg mov push es mov movsl cmpl js xchg add mov scas and xlat mov pop aad push jl lock ss mov loop cli dec int cmp mov cmpsb jo or push pop fdivrs outsb or lock mov jp adc inc cmp in sub add jmp int3 ds dec and loope (bad) or mov iret xor sub mov fldl mov jl adc or divl add das fsub inc sti movsl leave (bad) xchg mov jae push jge mov out cmp mov dec or jle jle adc aaa clc jle xor jp and roll add test stos inc xchg sti in dec add and fs xor jbe fidiv push fucomi lret subb dec repz outsl icebp dec lock dec adc and out fisub rorl or inc xor adc aad movsl (bad) push mov daa subb in xorb or mov lock push inc sbb inc je fs xchg bound cmpsl rcll dec add stos fdivs sub stc dec adc mov test xor fst sbb xor scas xchg pop jg das cs add les or cmp inc and loop sbb inc (bad) (bad) popw pop push jae adc aad and mov fs movaps cmp xor sbb cmp inc int inc mov clc xchg sub cltd inc pop pushaw push xchg mov push jmp xchg adc clc sub sbb cmp mov shrl in into adc xor cmp (bad) in and sub aas add imul sub or outsb push cmp push sub jecxz lods xlat push fidivl push pop shll mov jge mov push lahf test sbb lods sub out add int imul cmpsl and lahf js and or lods rorb (bad) insl ja cmc scas xchg push mov (bad) (bad) mulb jae adc jl loop aaa faddl lods mov bound push xor out lds mov cmp dec sti pop sub cmp lods lods test jne add decl mov sub jmp or fs sti pushf je popa jns fisttpl lcall insw loopne (bad) jle sub in cmp sti pop fcoms jbe cmp mov jmp cmp (bad) movzbl (bad) js push icebp sarb push and out es out xor popa inc shrl mov std xchg add pusha icebp das andb scas pop mov aam pop inc sbb sub sbb int aam inc sub lods fdivl outsb leave cmpsb pop inc mov lcall push sub jge cltd or fildll popf sbb (bad) cmp xchg fwait sub dec push ss sub pop lahf push jmp (bad) sbb add lea sbb or fsubp xchg lcall sub or js adc andl sbb xchg outsb ficomp outsb or push mov scas cmp jo adcb and arpl push jae mov cwtl rclb lds jns subl ds mov jge in std cmp mov je xor and insb jb test insl cmp out in xchg mov (bad) mov mov jb ret iret cwtl out dec repnz ret dec test add out push cmp xchg adc xchg mov not call mov adc clc jae mov shr mov lea mov lock aaa scas jmp das fsub xor inc push add aas test pop subl stc push mov jne lret test in mov dec outsl push dec inc adc rclb loop and push adc sbb jmp enter dec loopne in imul inc jnp and pop and jns insl add and or aas repz pop clc push (bad) mov push push repz aam mov sbb cmp and cmc sub jns and or sub (bad) je inc in and push jnp aas xchg bound mov lock (bad) sarb jp jp dec repnz add fnstsw ficomp das push test add xchg xor mov xchg pop inc imul fldt nop ret mov in leave pop cmp das sub fidivr sbb lods fcmovnu sub xor inc sbb (bad) iret push add sub push call (bad) mov fs cli cmc in lret loopne xor loope cld mov add out cmc mov cmpsb pop jae sub pop jle cwtl push gs mov push jge cld ja mov push jmp jns xchg cli push mov xor jmp (bad) test sbb outsl mov xchg push lahf outsl push jmp psllq xor add lahf enter aam sbbl add push adc xchg push insl or jb push xchg adc mov xor addl mov cli inc repnz ret and sbb pop or cli test pop test add (bad) movsl ljmp jg pop fs out cmp and fwait imul dec add cli or imul pushf aad or cld cld mov sbb inc jnp xchg ljmp shrb mov sub inc (bad) pusha cwtl mov push gs cmp add mov adc sub fisttpl mov loope jp stc jmp xchg sub cwtl cmp fild rclb lods aad loop test and mov inc mov int3 je cld repnz addr16 mov cmpsb lcall ja in mov jns jg (bad) adc or cmp dec daa xchg cmpsl fcmovnbe mov push dec inc cltd mov int mov jge or test push jno lcall cld jp push repz call dec jle repz mov js insb in xchg sti clc in gs add (bad) ss popf push add js sub push mov daa lret sbb and jge inc mov jo aas fwait jb adcl mov xchg jbe inc inc dec repnz inc push jp cld jmp pop jge xchg inc pop cmpsl cmp inc jb xchg cld (bad) repz je push dec xchg add xor inc int cmp ret push push clc ja,pt xor repz aas and sahf (bad) mov cld and xor fcomp add popf dec (bad) (bad) mov aam sbb push sub sub push dec stos xlat cwtl cmp jo call xor mov cli inc test mov cmp jmp in sub adc jle mov mov (bad) iret mov cwtl pop and inc pop mov (bad) sti cltd in cltd dec cmp imul sti sbb sbbl jg icebp out negl adc dec lds xor jnp sbb fdivr jecxz mov sbb jg (bad) adc cli fldt push loope movsl push push out negl cmpsl push or lahf or icebp add adc subb imul sbb notl and jg (bad) adc lock xchg ds fdivrs je jg icebp out negl data16 and push pop dec les xor scas fildll sub movaps sub or xchg fiadd jbe test mov (bad) mov bound mov negl adc dec lret scas out stc sahf add sahf or test push rcrl cmp imul ljmp xor inc jg (bad) adc ds fdivrs je (bad) push jmp sbb xchg lock add push jp and out mov data16 out repnz pop pushf leave mov cmp adc and adc mov jg icebp inc shrl or int3 js add test ret add int js jg icebp cmc jmp push mov lods jp mov cmpsl cli xchg fcmovnb mov jl lahf cmc cmp xor add dec mov push fldcw xor add sub mov fwait cmp out std push cmp pop mov cwtl mov adc outsl mov into and or xor icebp mov jnp lcall inc mov push sub inc adc fistpl lea push push int3 sub imul pop xchg lcall and aad inc test rorl rcrl push xor ret adc jcxz mov test push jb clc insl and ljmp (bad) scas loop mov xor or in ja pop setno repnz add adc jge cmp xor jge shll out shlb clc stos orl insb imul testb jbe add icebp mov xchg into sub movl imulb rcrb dec inc push add test xchg add lahf xor shrb cmp add outsl jl cmp sahf arpl call add addb sahf sbb sahf sub inc out cwtl cmc imul add add or sahf dec in into aad lock imul (bad) push (bad) pop out out and cmpsl (bad) or test das xor cmp mov sti icebp cmp fsubrp sbb test dec inc jne cmpsl jbe mov enter mov sbb mov mov pop dec cld mov test jns in (bad) cli repz jle push enter xor xor jne lret stos dec lret sbb add into aad mov xchg add mov lret xchg lods add jmp out pop ret cmp jg adc pop add or andb fisttp inc std cmp ret cltd enter leave loope addb in into pop inc jle mov push in xchg or popf xor xchg inc fildl and sti std div mov push mov outsl negb adc dec xchg loopne adc push or jb mov and xchg sti int icebp lea jle mov (bad) (bad) repz push xchg cli int inc inc mov or fucom notb lret movsb jno lea or in mov popa in imul and es jno fidivrl aaa in xchg adc loopne xchg rcrl cmc lret or in repz mov lret mov dec mov sub adc fwait clc dec div (bad) dec pop inc mov mov adc xor jo mov out out lret leave lock test rclb sbb data16 sub adc mov pop adc int pop fstpl cmp push or jp xchg dec aas add jno cmpsl shrb inc sbb movsb sbb cmp push or xchg cmp add pop push lret or adc push mov xchg inc mov push dec mov pusha imul loopne jp adc sti push sbb cli pop mov hlt jmp imul ss out cld add mov out ds stc jmp jo sub and outsb stc xor sub push sub xor es in int add jbe sbb mov inc dec jp mov inc jb or loop jne out stos stc mov jg adc bound push enter out adc movsl pop lret stos pop ret pop and ret cmpsb push cs dec mov pop lock cmp ret jo ljmp insb sbb pop sub mov mov or outsb fldenv sbb mov add inc stc cli stos ljmp dec push and sbb es cwtl and jns cmc icebp mov test in dec add push test adc cmp push dec out push mov xchg in idivb enter in cltd mov adc xchg push xor add subl int mov add clc sub jae pushf scas js sbb shll cld cmpsl push mov mov ret movsb ret (bad) dec jns jp mov pop (bad) incb aas popa repnz mov (bad) pop stos push (bad) gs das xor in xchg adc rorb jb pushf push lret outsb sahf mov and (bad) int xchg imul shrl mov add cmp jne stos cs xchg out push cmp cmp mov hlt fistl mov adc nop out jl popf mov ljmp jge addr16 fwait lahf out and test cmp pop out (bad) cmc jmp lcall jp and cmpsl jne inc jo add dec cltd sub mov pop push sahf stc test add mov imul push xchg xor repz cmpsl int adc push fstpl add nopl inc aas sahf xor mov mov xchg jle (bad) jmp sahf add xor mov sbb cld or negl or dec add testb stos lahf (bad) jmp sub lea and lcall adc push mov fcomi add mov sub shl adc pushf sub push mov sub ds lret (bad) jo lcall icebp outsb jbe scas imul hlt mov add or jo lcall icebp outsb lea xor mov jo popa fs scas lahf add test dec mov insb fidiv ret xorl mov cli xor inc mov inc xchg push jmp cmp xlat (bad) cmp jg adc mov adc jns sub jnp jns add cld mov repnz scas and (bad) lahf loope mov int3 or pop int gs mov leave shlb repnz xchg test sbb std or outsl mov and cmovbe enter dec adc add mov fiaddl inc std push addr16 jp inc loop aaa stos fmull sub inc jns add mov adc rcrl inc repz js aas inc cli dec sbbb mov mov sbb mov pusha fs cmc lret mov or adcl xchg push sub and ja out mul icebp push mov ret or jle pop xor mov fs mov sub test mov add or ret test mov add or mov mov jns movsb dec dec jmp (bad) ss mov aad xor scas insl int3 (bad) pop lock scas mov shll jo or or (bad) and add out stc xchg cmp inc pushf movsl cmpsl lock add stc add es test mov dec push or push cmp dec data16 cmpsl dec jmp and loopne mov addl idivl imul or (bad) into push mov mov sub push data16 nop mov push aad cmp add cli sub (bad) ja addb xor aam imul or gs (bad) leave jnp add xor jae sub pusha fidiv or push jl xchg inc inc leave stos out in outsb cmpsl sbb push das inc pushf mov (bad) mov xchg sub jb add (bad) and pop mov (bad) cld jmp negb mov fcomip xchg out hlt pop dec and clc mov mov sti (bad) fsubs cmp test test in lods out mov xor mov mov jmp fiaddl push inc fistp cmp and popf fistl sti fwait add out sbb lret enter jecxz push jns jg hlt mov and mov xor inc jg hlt mov aas fcmovnb mov fs jge ficomp clc pop pop loope sub jp movsl stc inc sti add pop (bad) cmp imul rorl mov push lods add imul or fimull mov mov jge (bad) out sar inc or jno inc jmp adc enter mov cmp xchg add jns xlat cmp cli pop aad push dec icebp mov xchg sub cmp mov mov lock test mov pop xor mov (bad) mul outsb dec js lods pop and pop dec or jmp cli rcll inc jg hlt mov addb movsb dec dec jmp jae pop popa xorb movsb dec dec jmp jb pushf push sub pushf push out (bad) mov inc (bad) ljmp cmpsl add rorb cli lods xchg and cwtl mov jmp inc andb xchg push mov jge ficomp clc pop pop loope sbb lds mov sbb pop pop loope sub iret addr16 xor pop mov adc mov lods out jecxz cmc test popa mov in or lea out fidiv cmp jne push lahf clc lret pop loop jnp jo mov test jmp sub mov jmp dec ds pop lahf cmp jecxz add sarb cmp push or or rcll mov sub in popf in inc fs lret mov add dec rclb aaa sahf push add mov xor mov mov or out (bad) lcall adc lret outsl cmp push cld inc and fwait jns mov test jecxz push xor clc sbb mov and and (bad) mov popf mov out es aam mov fcomi gs fs bound (bad) mov jnp adc mov and dec push mov (bad) sbb sub adc lahf cmpsb aaa sti push or andb pushf in cmpsl push lods or jecxz loopne pop (bad) addr16 (bad) jne jg test push xor and test lahf mov dec jae mov iret mov mov xchg xor cmp xor ljmp mov (bad) adc inc jns push pusha mov (bad) daa xchg xor dec mull es jl mov xorb in xchg stc scas sbb mov stc xchg xor fildll cmp repz pop mov iret addr16 xor pop mov imul jge std out sbb lret enter or jl pop dec xchg dec negb pop fnsave dec jge std out sbb lret enter sbbl sbb mov out sbb lret enter xorb jmp inc andb or inc adc lcall pop hlt stos jp mov cmp scas cmp mov jmp sahf lea inc jns mov lcall cmp insb mov pop arpl aaa adc (bad) mov lret aam jp idivb or sub mov jle push jns add (bad) sub outsl sub ds jmp int3 js xchg out jno inc or dec jl hlt mov add or jo lcall icebp outsb lea xor mov jo popa fs scas lahf add test dec mov insb fidiv das lea mov cmpsb lock cmp mov add data16 push and das push shl lea push gs mov scas push jmp sahf icebp xor sub sahf pop (bad) into xchg jb adc (bad) push (bad) repnz sub sub in push cmp aad dec add loop idivb add sub mov dec add sub out and cmpsb add enter popl into add xor cmpsb lahf inc xlat and out mov rcr cmp loope mov or mov lods cmc mov nop (bad) mov inc scas das stc leave adc push mov push aas push fstpl (bad) ffree (bad) jle cld pop mov adc xor pop repnz loopne insl sbbl lods or lods mov push mov das repnz mov sub arpl scas (bad) xor jecxz inc andb cmc add jmp inc andb or jmp xor fildll cmp xorl testb pushf sub push mov sub popa fucomi out stc xchg xor fildll cmp addr16 stos jmp xor fildll cmp mov sub cli sbb cmpsl ljmp icebp out dec add xor jno adc out sti add leave iret insl mov and out sar inc or jno inc jo mov xchg xchg mov (bad) jns add outsl repnz mov (bad) mul outsb dec insb test das sub ds mov aad jmp bound jl jecxz outsl xor subl add cwtl icebp adc or xor push lcall mul clc xor or jbe xor nop arpl cmp repz dec jg in mov xchg stos adc xchg and scas lahf add mov dec jbe sbb and cmp gs mov leave sarb or inc clc arpl mov add pushf sub push mov sub popa fucomi out stc xchg xor fildll cmp addr16 stos jmp xor fildll cmp mov sub cli sbb cmpsl ljmp icebp movl add xor push enter jmp mov and inc jns add mov and xchg mov insb inc push in mov and add (bad) xor push pop test fsts cmp loope push mov xchg hlt cmp arpl xor es rolb lcall xor arpl pushl push call inc jmp pop into xor subl inc in sbb test xchg movsb insb or jmp aas add xor test mul ficom inc sti sbb add pop xor testb andl push lock inc push pop pusha sbb adc adc sbb fwait es pop pop jae mov es add enter pushf cli sbb cmpsl ljmp mov out sbb lret enter sbbl sbb mov out sbb lret enter xorb jmp inc andb or rcll (bad) (bad) cld or lea pop ret sub mov cli test lods cmc mov int std push outsb jp out or xlat mov dec jmp xor fildll cmp repz pop mov iret addr16 xor pop mov imul jge std out sbb lret enter or jl pop mov mov or jp jecxz icebp pop adc cmc mov push into mov or out clc fs pop stos sub punpckhbw lret mov sti cld fdiv mov ja mov out xchg cmc inc dec xchg cmp add bnd mov add sbb mov mov pop add adc cmpsl adc xor xor mov (bad) mov mov movsl xor out mov in dec push sub cmp rcrb jae fstpl add in ljmp mov scas lods add ffree or sub jecxz mov out or sbb xor add or add out sbb lret enter jecxz push jns jg hlt mov and mov xor inc jg hlt mov aas fcmovnb mov fs jge ficomp clc pop pop loope sub jp out inc sbb icebp push mov push lock inc jg outsl test mov nop fmull scas loopne nop pop orps push dec dec mov testl sbb dec (bad) fs lret sbb call movsl push je cli pop imul lcall inc and dec or loope les (bad) xor xchg and incl icebp sub pop add mov aad ja or xor repz push out jnp jge repz jg neg dec adc call add repz dec xchg jns pushl repz call repz lods mov repnz xchg add inc or jge repz or jns jle repnz add pop cs sbb push jns jge repz mov jl jae pop cmc push lret (bad) jle repz jne push adc cmc pushf mov sti xchg mov inc daa ret pop pop repnz repz lock xchg dec insl ret mov orl loope popa enter lcall loope mov clc adc fldenv pop nop test inc cmp jge or adc add push lcall xor mov int3 or mov lcall jo mov (bad) cmpsb clc test cwtl lcall aaa je pop push sbb push insl (bad) mov or out mull scas pop hlt cs jnp jmp jg sbb pop stc mov pop mov loope and push and cld push inc add stos adc jge sub push insl jge xor loopne lret loopne and adc xchg add rcrb jge lcall mov sti (bad) icebp push mov xchg xor test aas mov scas icebp dec adc adc (bad) mov jmp xchg dec jg (bad) cmp (bad) mov jnp arpl lret fwait mov push mov jae xchg adc lcall lret stos (bad) fdiv and and mov mov dec es cmp mov mov cli lock mov xchg xor stos inc aas mov (bad) pop movsb icebp pop jg mov sti fmuls mov mov push cltd std mov orb inc insl add sub ret insl xor jl cmp add mov or test dec fstl xor sbb xchg add (bad) mov xchg mov sti mov daa into clc inc dec je int3 push jbe inc imul dec mov inc repz icebp lea cmpl jg jmp out cld xor (bad) flds aas (bad) and clc mov inc imul outsl mov lds mov sbb cli hlt ret dec mov push lret outsb repnz icebp ret cmp in or std xlat cmc add cli mov push cmp dec out ret imul out test (bad) daa or xchg lcall cmp out (bad) jo sbb sahf out ret imul adc imul scas enter push ret cmc arpl lcall push add call push icebp cmp stc fs mov adc or lea dec scas into and jne mov imul pop fidiv adc lcall jle or loop aas enter in mov pop jg,pt js mov jecxz andb jnp xchg jmp mov mov dec imul icebp xlat outsb (bad) lock fdivs push hlt xor xchg adc rorb dec mov rcpps mov and add fbld ficom jg pop dec fwait push mov cmp mov gs insl sub mov add in repnz fimul mov push dec mov (bad) xor icebp inc mov fist or dec fwait push clc mov push xchg or mov inc (bad) push add mov cmp outsb and imul mov stos mov add lcall add repz mov mov cmp imul push mov pop jmp jp jecxz pop out adc jge and add cmpsl mov in jb lds repnz sub pop in add out push mov dec int cmpb or ficom lahf and mov (bad) jecxz mov sub dec fildll pop pop mov gs cmpsl hlt sti xchg cli sbb xor and push pop mov jne xchg mov jbe jno mov les xor sti jnp nop jp push lcall jmp mov lea test lds lahf inc stos popl cwtl and pop clc xrelease jp add test cs bswap ret jg mov xchg popa jne mov mov (bad) icebp out negl pop (bad) xor fildl lods or cmc mov jp inc xchg scas jle stc loope mov loopne addr16 loop and test adc add jp mov sbb and mov pusha js add clc xchg sahf mov xor jle out pop sahf xor test push sub jge cmc or scas sahf sub scas sub mov out sarl cmp fdivp dec jge dec sahf ljmp (bad) xor pop pop sbb and nop lahf (bad) pop sub cmp mov adc outsl push xlat nop inc test fwait sarl ds dec dec loop jg das and dec jb dec aad inc adc fwait xchg ret xor xorl push mov mov repnz popa bound popa sub mov lock inc popa mov icebp push push and lods mov loope stos aad inc sti push push add pop or mov je icebp dec jge ret cltd or (bad) out mov aad cmp or pop add xchg dec jge insl test clc aad arpl mov xlat (bad) mov jg lcall pop aaa cwtl inc (bad) pop mov (bad) repz jge fcoms xor lret (bad) loopne in loop imul or mov pop mov js add insl xor xor aad adc xchg cmpsb jae mov in pop jnp insl jle imul xor pop (bad) dec jo jne mov adc mov lret add inc out into adc inc js mov inc sub clc out nop mov xor in sarl cmp fdivp dec jge dec sahf ljmp (bad) xor jle loopne mov and mov add and subb imul std nop hlt pushf cli cs lahf movsb ret adc jbe add inc xor mov push je add in sti lahf icebp sub outsb in xchg mov (bad) jle pop jb out xor add add sub popa adc or jp add repnz jno mov scas jp cmpsb bound test cmp in push dec xor es adc test jne xor dec repz sbb sub cwtl sub jp cmc xabort ds mov loop mov sub pusha xlat xor sub mov mov sbb inc xchg inc push or cltd pop fstpt fisttpll loop ret cmp or xchg jnp inc push mov out ds fldt data16 mov ret subl xor jmp mov fs fs adc fistpll xor ror lock pop jmp push push mov xchg xchg jmp ds adc int3 jbe add arpl bound (bad) pushf add sahf adc mov inc int3 push or jl dec sbb je xor les add enter cmp addb clc mov sub sahf jecxz cmc lret cli outsb sahf add int mov pop dec aas dec xchg aam xor and lcall jecxz lods (bad) cmp cs out js (bad) imul rcll and in xor xor inc clc inc pop dec imul movl movsl or test xorl inc jl cmc test pop movsb in and fistp aad outsb inc imul xor sahf addb das xchg push and jg dec (bad) mov or mov (bad) mov ss xor in (bad) and scas pop test mov adc rorl mov out inc add sahf adc mov dec sub (bad) pop mov cmp jnp fiadd sub mov jo pop mov dec cwtl add cmp dec inc inc and add lahf adc adc jg fcomi pop mov mov test mov ds inc arpl cmp sub jp in mov in aas adc mov and movl int ss xchg xchg mov int3 mov mov das sbb stos sub sub xchg pusha hlt daa mov cli pop popf jae fs icebp fcoml iret pushf insl ja (bad) cmpsb sub pusha hlt push gs mov push push out (bad) icebp xor jp test jle stc loopne lret xchg jp pop stos push fmull mov lret aaa sahf arpl out jns inc add clc jge aam sub ret pop push push add sub xchg and outsb (bad) xor js stc xor test push cmp jge push or ss jecxz iret or jg out inc adc add inc xor mov cmp push cld cmp repnz rcr das adc cwtl lods popf out adc int push sbb mov negl add stos jns mov xor (bad) dec aas lock or dec int3 pop cltd mov mulb add lea imul arpl jns inc add lock rorl mov or inc or addr16 test jle stc loop outsb xlat xchg cld mov dec pop cmp jge lcall inc adc cwtd mov push imul mov orl mov outsb imul jle stc sahf fdiv hlt sbb jecxz std (bad) mov outsl or icebp pop incb in mov sub pushl jp push xchg sbb xor add xchg inc and in arpl dec jns jl push (bad) aad test mov stc in sbb cmp cli out mov out (bad) mov push sub sub push clc and cwtl jmp imul sub mov cmc aad mov mov mov pop sub ret mov mov inc jne stos sbb pop sub and mov (bad) icebp cs pop in les int inc inc pusha negb shlb iret repnz shr cwtl (bad) sbb popf or cmc adc add pop lret je jno xchg and test or test in (bad) icebp pop mov notb in lods prefetchw add jno jle stc jmp push shrb mov push push xor mov sbb mov negl adc and push pop dec les cmp in add push out jle add xchg decb (bad) mov (bad) leave add push mov negl (bad) lea xor cmp inc repz scas dec jns lcall ret adc push dec sub adc jp (bad) mov mov aad cmc add repnz inc jg push data16 (bad) jns sbb (bad) lea mov mov into out lahf mov jp in xor push jnp testb mov mov scas movsl stc mov push (bad) xor mov sbb out add test add push gs lods cld sar out sbb cmp inc pop pop je dec daa ljmp in sub sbbl repz xchg loope xor or sub mov repz popf cmp mov fisttp std jmp push test sbb cmp cld xor jl mov outsl adc push ret inc xchg jmp sbb push movsl xchg stc xchg jnp pop std dec cmp in insl (bad) jp push pop flds mov scas mov arpl les lock addr16 add out int imulb data16 ret push xor jle repnz push in sti lahf icebp xor mov minps icebp cs or fsqrt cmc in xor int cmpsl cmp push leave fwait in sbb cwtl xor inc out mov int3 fmul in push jle (bad) jge mov int movsb mov pop (bad) jns inc insl test inc mov sbb xor mov lahf (bad) lea sbb mov adc push push out negl mov leave cmp and sbb int js jg (bad) (bad) pop lock aas sub adc movsl rolb sbb sub adc mov adc cwtl and pop clc (bad) pop push jno cmp mov movsb iret pop ss pushf test add addr16 iret sub hlt xor pop xchg jge add fwait xchg lods push pushl bound fsubr add imul and xchg mov mov jmp mov inc pop test sub fwait sub and push testb mov add or fisub sub mov clc or lock mov and out mov jp xchg out rcrb mov fs push mov adc or mov jnp inc push mov lret pop lcall shll mov jl testl xor lds ds inc pop sub cmp pop xor push xor push std xor cld xor dec neg ret cwtl xlat push add mov adc and pop sti mov and push dec mov test adc stos sub pusha repz xor in xor cld inc jae rol add add test andl inc jnp testb mov in xor in mov and aad int ljmp or lret cmp or divl add or pop cmp xor lods popa inc mov negl cmc lea ret inc jge subl js mov mov jbe adc push mov cmp jl popa or xorl lods mov loop jno fdivrs inc jno mov sub dec fist in push scas push imul push adc add sub sbb xchg add int3 je pop ja fcoml out call outsl cmpsl neg (bad) cmc pop (bad) jp and xor bound jle test pushl pushf xor out dec gs int inc (bad) and jp and addr16 push out lock ljmp xor or pop (bad) vmwrite jnp jns cld pop lods sub rcl arpl push and mov and or adc lcall dec cmp mov sti repnz jns push sahf jge test pushl pushf xor out dec gs data16 les mov (bad) and aaa mov clc pushf lock add subl mov mov xchg cld je mov loope jmp (bad) cs xchg fsubrl decw movsl cli mov push pop xchg add popa outsb or inc pop fidivl add cltd leave mov rclb cmp adc adc test in sub sarb mov rcl ljmp jb popa mov pop stos ljmp cmp mov add clc into test xchg add div xor test sub repz add pop pop subl (bad) jle jmp stc sub (bad) or je add adc int3 subb mov sbb outsb jle imul ss mov (bad) repz xchg testl sti push jle pushl test adc pusha js add sbb dec add adc inc xor jne add pop and sahf ret loopne sub xor add aad addr16 rolb add adc cmpsl lahf jecxz pop add sub outsl or test push jle or mulb aam jp imul xchg add outsl xchg add sub inc inc outsl mov add add insl clc jne (bad) aam mov mov arpl xor das outsl push dec inc sarl sbb jg inc pop icebp sub or mov add mov xchg and jmp scas das xor jge data16 frstor jge int3 cli outsb shlb xchg mov sbb xor push and add xlat and (bad) mul sbb jg jg lret pushf jmp xchg repz jge adc out mov inc jle jo jnp add cmpl jb cld mov scas dec cmp or dec jo cmpl mov lods add mov add test mov xor repz fnstcw or dec add insl inc call scas dec lods aad dec jo sbb arpl adc jb mov cltd inc test pop (bad) jbe jl sbb xor dec push std (bad) pop pop sub pop mov adc ja ret repnz lea xchg movsb inc push xor scas add jae in inc lcall xor pop in and mov mov ja xchg les cld test push xlat mov sub data16 xor mov jne cmpsl jns icebp push jle hlt ljmp adcb mov inc mov push in and mov cmpb sub cltd xor ss or mov jne cmpsl jns mov clc push loope sub mov lea or daa inc inc in jle add adcl or aas and loopne sti orb or jo inc cmc mov sub or push pop add (bad) push insl xor or clc ret std pop aad rol stos add imulb lret jg jg lret pushf shlb push pop cmp ss test push or out jmp leave xchg lcall push inc jne test jb mov out mov mov push aas mov aam pop test dec iret in das loop pop add cmc lock dec loopne jnp loopne insb popa and dec mov icebp inc out mov je or das or add pop lret out cs mov xchg ret ja lcall out lods add mov add push pop sub sbb das sub jae add cld add das (bad) and ret sub aad or or adc add negb inc jbe xor out pop cmp sub jle xor jno mov in xlat xor shll push cmpb lods (bad) mov pop negl or movl cmp xor pop in lea sub jmp decl movsl push mov scas sub adc dec aaa jae (bad) enter mov enter dec scas push lret std mov out outsb dec fildll fadds outsl or roll inc lcall inc and push lock push push or lods addr16 ljmp jg in iret fimull scas out sub arpl xor fisub cmp lds pusha in lods add mov add add (bad) dec inc imul cs jbe test fistpl ds in sub int3 and and cmp cmp jno push adc xchg add jl ljmp adc rol mov mov sbb (bad) lods fnstenv js pop push mov dec int (bad) jno out hlt jmp xchg add push pop sbb cli or in fwait loop cmpsb push rcr or (bad) enter mov xchg push in inc lcall xor pop in and cwtl dec fstp (bad) loopne push xchg mov push lret ds jg loope cmp mov stc out lcall lret jg jg lret pushf shlb push add ss fsubs idivl outsl push leave mov (bad) cld pop xacquire js mov loopne mov inc xchg enter push (bad) jmp add mov add add (bad) dec inc outsb mov aad mov popf movsb xchg outsb jle,pn mov mov jmp jnp loopne push inc fcmovb pop sbbb pop xchg mov add xchg mov dec out mov xor pusha jb cld fs push xor scas add xchg or negl not mov inc push mov test ficompl push fdivrl pusha stos push xor jb,pt je dec jo imul iret cld cld cs mov xchg jno or sbb cwtl mov sarl out es mov pushf or pop inc fwait and xchg pushf es dec and (bad) xor call push adc cmp sbb rcl sbb mov movsl loopne mov adc movsb mov gs jle push jnp insb inc cmpl jmp push ret inc xor jge sahf adc (bad) pop xor and ret pop dec outsb xchg xor xchg les sub arpl test mov stos inc (bad) and pop jo sub (bad) std (bad) icebp jecxz dec inc inc mov dec xor lahf imul inc stos add pushf sbb xchg cmc test lods and pop mov hlt pop mov out and les xor pop cmp and popa nop jae xor push in fwait and push out add mov enter fs addr16 mov int3 xchg cmp pop (bad) (bad) jecxz sub iret mov push adc or cld js xor lcall dec push jns iret pop cmc mov ret mov stos xchg leave cmp sarl or and add sbb or add (bad) ljmp and dec sahf pop (bad) repnz mov lret outsb js js add icebp cli pop lea and sbb js andl add lahf enter sbb out xorl mov addr16 jb push pop mov out lret incb stos leave icebp cmp lock fwait push xchg (bad) insb push mov enter mov addl in mov xchg ret and (bad) ljmp mov inc inc outsb les lods aas sbb iret mov mov in push std es cwtl push icebp mov jnp in jmp mov sbb outsb call icebp out negl sti sbb push stc mov cmp sahf add lret mov in xor loop call inc push sbb add (bad) pop insb repnz pop fs es jo aas add adc sbb arpl xor aas fsubs ret orl test repz jp inc xchg cmpsl push and add xchg jp sub into push pop (bad) test inc or mov adc cwtl scas int or ljmp imul les ss aaa mov xchg adc lock jnp push hlt inc sbb icebp mov stos adcl cmp mov loop mov jecxz jne adc icebp mov jnp cld xchg lock in shl cmc sub ret shr cmp mov cmp (bad) dec mov pusha int add cmpsb add icebp add pmuludq xchg scas or stc clc out mov stos (bad) and and inc in xor inc mov dec xorl add pop repz mov test jle icebp xchg loop test mov js jg icebp cmc jne mov pushf jg cmp jbe jbe push adc lock mov (bad) xor mov lcall cli cmp push rolb imul fidivrl pop mov jp and pop adc sbb adc rcrb sub pop in aaa sub aad stos (bad) sbb sbb (bad) xchg sub test jp arpl iret dec push mov adc pop data16 in or mov dec jg test pushl pushf xor adc cmpl rcr int jnp cmp cmpsl (bad) jecxz mov sbb jg (bad) adc pop iret adc inc mov adc cs cmp inc jg push (bad) cwtl xchg xchg mov in inc mov ret inc and inc mov or mov xchg js jg insb dec push pushf sti and or inc ffree pop cmpb push lea push andl sub jo mov in repnz xchg add loop loopne sub inc lahf pop loope jmp decl ss adc push dec xor lds cld add outsl cmpsl xor and adc jp gs cmp pop inc mov int3 int3 ljmp xorl cs lods mov repz or enter xchg sub xlat inc jg fxch inc mov in jne out mov jp repz add bound add dec les xor aas (bad) int3 fimull out scas pop xchg push enter aad add add push sbb ja adc jl lcall inc gs cltd inc sbb (bad) lea addr16 xchg (bad) orl mov bound xchg test xor int3 sahf inc scas outsb (bad) ja xchg mov (bad) std (bad) pop lock add inc ja in inc loopne xor popa inc (bad) in in aaa xor fwait stos inc jp imul mov pop xor mov jl (bad) adc jmp mov lret mov cli (bad) out stc sbb jecxz pusha test mov and add mov jl and inc dec addr16 fnsave xchg jmp aas sub jo and orl sub mov movsl fdivl inc test out xor mov push xor mov call cld inc (bad) jmp cmc lods (bad) or lods sub cld add stos xor mov fisttpl or adc lcall pop fisub xor sub clc aaa mov xor and aad es sbb inc (bad) xchg jl stc cwtl in mov lret xchg cld stos mov inc sti push push bound jle dec cli es clc mov xor add adc lret pop pop pop adc sub sti lcall cmp aad sub imul (bad) xlat xor sub les mov add add sahf sbb test cmc inc jl or arpl test div push pop (bad) test xchg dec xchg jnp inc push mov adc cwtl (bad) xor fdivr push dec push jmp inc je insl jne mov sarb sarl mov sbb fdivr in pop cwtl (bad) rolb movsb inc popf xor add test sub movsb jns mov std add inc dec jae (bad) out xchg nop test ret hlt sub jno arpl sti aaa je ljmp jg cmp dec (bad) lods hlt aaa mov add mov adc push test sub aas push xchg jle stc das in ds sbb dec (bad) lods push ret xchg add sahf or xchg repz std in or and call jp pop or dec outsb jne mov jg (bad) adc push jmp (bad) pusha jge pop out dec addb xchg daa sarl shll icebp add sbb subb imul pushf adc sbb ret sahf (bad) mov inc xchg add movaps jnp lea mov cltd or and hlt mov cmp add mov gs andb mov fiadd add repz outsl mov jmp cld xchg xor fs jl shr cmp not dec add push xchg cmp ss jmp rolb inc pop fsubrl mov or cmp mov jp stos push shlb or push cmp mov adc shll clflush adc add sbb mov iret aas pop mov cs cwtl push sbb sbbl (bad) mov scas xchg arpl fsub or sbb push adc add (bad) (bad) ds lock adc dec mov negl and push mov jnp mov cli cwtl popa xor or inc mov push adc pusha les jnp inc push mov adc cli xrelease mov adc ljmp inc (bad) push add inc sahf repnz push mov cmp add and cmp (bad) (bad) gs cs outsb adc (bad) loope add subl fdivr mov fmul imul imul div negb subl mov adc dec or testb loop sbb test inc lahf pop jecxz jmp std out (bad) adc cmp or pop cmpsl push sub cltd sbb mov lock inc pop (bad) xlat test pop mov int ret outsb add (bad) mov mov adc cwtl add push dec ret (bad) int xorl sbb pop cmp in lods test fisub add jo subb imul fs test jb in jp pop in xchg adc test or dec testl negl pop xchg pop mov jl lahf (bad) adc xor mov xor push fsubs imul test xchg or ret imulb or mov sbb or mov adc fsubl cwtl sub dec jno fcmove push sbb icebp xor mov out cmc mov ljmp mov out test out fmuls xchg xchg mov aas xchg ss (bad) ficompl and push stc lahf adc sub test jne aad fstps add stos outsl clc pop out lods cld loopne jmp pop divb out push int nop sahf push jle repz imul pop push sti loopne insb outsl fcoml adc fxch jb xor sub imul jp das int3 cmp push mov test pop addb mov jmp jbe lcall fs sbb cmpsl lock pop jmp and clc adc imulb add mov or repz jp inc xchg mov stc xchg loopne jl daa cmpb je mov mov push cmc cmp sahf push or sub jns decb cmpsl pushl jno call add push or cmpl or arpl dec call (bad) sub es sbb xor push addr16 aam test jecxz mov sub push gs aad or add sbb mov (bad) int3 sbb cld cld push push push sub push sub idivb (bad) mul clc loopne rclb mov jge ret inc or out xor lea ss or pop lcall lea adc sbb add popf shll daa sarl lret dec rclb ds pop add jge xor adc lret js push lret mov jae pusha stc and int jecxz repz subl repz popa jns add icebp ljmp repz (bad) jp rdtsc jp inc jle repz stos mov stos add out ljmp mov retw loopne pop div push cwtl mov divl fstpt push or sets stos (bad) std cmp mov (bad) dec push addr16 mov mov int andl push mov aaa xchg das or (bad) mov dec je (bad) xchg outsl add nop push mov jmp mov ja decl aad mov scas (bad) xor mov out xor mov dec loopne popf imul inc push sub jae fs mov test movsb add jp fcompl mov lcall mov inc pop rcl insl pop (bad) fistl adcl add test (bad) cs add sub dec lcall cli push sbb cld es js sbb rcll inc jg (bad) adc push lret mov inc pop (bad) xchg aaa jg lcall movsl ficom ror data16 mov push cmp fisttp or testl subl pop jge lcall mov add xchg xor fldl (bad) es shll push dec jae inc outsb lea pusha test insb or push mov mov orl insl mov jp inc xchg mov stc test lahf pop repz jge lds xor cmp sarl pop or fwait add inc (bad) xchg dec jge inc add push push adc pop mov push mov test into scas adc or clc (bad) jmp in mov mov arpl jg (bad) adc gs (bad) stos add ljmp icebp out negl jbe xor jo add movsb mov fs cld imul into clc sbb pushf or xchg ret in or test subl xor dec jp movsl rorl sahf xchg cmp xchg mov mov inc xchg jg push stc ljmp or sub cld cmp test test movsb out sahf les sub xor mov xchg cltd into mov sbb sbb test negl mov push cwtl shl add mov xor xor mov xor lods int sub std xor xchg mov add push sub push repz imul mov add jecxz and out pop inc sahf jmp outsb ja mov insl js jg (bad) adc sub bound sti lahf add sahf or xchg jle mov (bad) orl cmp imul adc dec outsb jbe rorl js jg (bad) jp jae cmp xor lods xor insl into stos cmpsl add xor sbb mov or cmp push pop js mov stc (bad) clc dec outsb jbe mov outsb js jg (bad) jne push cs and push pop dec lret scas jmp addl sahf or add call push dec outsb jbe mov outsb js jg (bad) jne push xor and push pop dec lret scas jmp addl sahf or add mov inc nop ljmp outsb jbe mov outsb js jg (bad) jne jle xor and push push dec iret scas cmpsl adc add mov jnp inc fs mov cwtl loopne and pop inc or icebp push pop (bad) test (bad) mov jnp mov xor or into dec mov pop cwtl enter repz into int inc orl pop mov jnp test rcl xlat xchg addb sub jnp add cmp cmp inc fsubrs les (bad) adc popf das inc aad outsb or fimull mov xor pusha xor out in sub mov jge les adcl pop ljmp mov add or gs sbb add xchg cwtl cmp add call out cltd cwtl movsl or movsl adcl mov sub mov adc daa int3 lock mov lods dec mov mov faddl xor cmp xor (bad) sbb das inc dec push addr16 in cmp pop mov push add xor jg gs daa push decl fildll xchg cwtl adc pop aad inc xchg popf jno jmp add mov cmp std gs sbb add cs cwtl in pop dec dec jnp push (bad) (bad) out negl or inc add inc cmp push je add icebp out negl setge inc aad outsb or in jecxz cli dec sbbb add ret negl mov shlb and jecxz mov and jg (bad) adc xor lahf cwtl ds fdivrs je jg icebp out negl add jnp mov orl cmp imul xchg jl into or sbb jg (bad) adc xor lock push push out negl popf jns jno mov lret scas out sti lahf add sahf or xchg outsl fwait ja (bad) orl cmp fs mov sub outsb je lea insb js jg (bad) adc xchg fnsave or scas out sti lahf add sahf or xchg mov sahf ja (bad) orl cmp imul cld sub (bad) push dec outsb jbe test jp inc jg (bad) adc ds fdivrs push out negl mov lea mov les xor scas sbb pop mov cmp imul test (bad) push dec outsb ja mov arpl jg (bad) adc cli add lock push je jg icebp out negl sbb dec lret scas out sti lahf add sahf or xchg and ja (bad) orl inc sahf adc imul sbb and aam cmpsb xor xor scas out sti lahf add sahf or xchg scas loopne jnp mov orl cmp sub incl sub cwtl ds fdivrs je jg icebp out negl cmp das imul mov stc add mov jnp inc sbb dec push mov lret es or mov cmp add mov jge inc add add pop aaa repz pushf push sbb cmp es mov sub cmpsl jg sar iret add movsl sbb in pop fnstsw mov lcall js dec lret scas call sahf or test dec inc dec add ss push repz imul mov mov cmpsl imul popf loopne loopne sarl das movsb dec xchg (bad) push data16 subb cmc ret xor clc pop gs mov cli sub xlat xchg out push mov imul aaa or mov xor subl mov enter sti das (bad) dec fildl test xchg out in cld mov xor mov push xor push fcomip enter inc pushf xor mov sbb daa cmp leave test cmp push xchg mov test loopne xchg lahf loope orl cmp fs aaa cmpsl jmp outsb jbe test jp inc jg (bad) adc jl lcall lcall icebp sbb and adc jns cmp cmc test cld ds mov incl xor mov movsl push push out negl popa mov imul ds mov incl xor mov movsl push push out negl mov jns scas out sti lahf add sahf or xchg imul movaps sub or xchg fiadd je lea insb js jg (bad) adc xchg fnsave or scas sbb sahf or adc scas ret das test lods xchg push jae shrl xchg add or cmp imul test dec outsb jbe test mov jne data16 xor jnp je jg icebp out negl sbb and push pop dec lret scas out stc sahf add sahf or test push iret fwait add or subb imul fwait add jg subb imul aaa popa adc push roll inc sub push movsb dec movsb enter js cmp add mov loopne or pushf aam in xor (bad) push jl out add nop push imulb lcall add cwtl xchg ret push adc push inc gs dec push or lahf dec outsb ja mov add (bad) iret outsb or addb (bad) mov loope ret jmp sbb pop dec les and (bad) roll xchg add cmp lods test adc add adc inc push pop test vmovapd inc add pop hlt repz dec icebp fcmovnu add or js decl or lret jbe inc aaa push and mov pop xor lods fstpt mov jle bswap sbb (bad) roll mov xor out test mov xor xor ret outsl fstl les xchg or jl add cmp add dec ret mov mov mov pop lock pop int and add or fbstp adc cmp je jnp mov and (bad) fwait cs in icebp or sbb (bad) dec out or aad push jmp sbb shrb push stos add stc lret (bad) jmp stc imul clc dec les insl es rcrb sub pop popa rcrb or ljmp xor js jg (bad) (bad) mov lock mov (bad) mov cwtl push inc sub into jnp,pn dec (bad) dec dec adc cwtl add gs inc push mov fmull mov or pop iret push push outsb xchg xor sbb mov cmc fcmovne mov mov mov jns sub pop enter icebp js in push int (bad) xor inc xchg jno push pop jae repnz (bad) stc sbb lahf out loope jmp outsb das lret xchg jnp inc test ja and and jg (bad) adc ds fdivrs je jg icebp out negl adc and push pop dec lret scas out stc sahf add sahf or test push rcrl cmp imul fidivr push dec outsb ja mov arpl jg (bad) adc xor lock push je jg icebp out negl cmp and push pop dec lret scas out stc sahf add sahf or test push rcrl cmp imul cmpsl inc push push dec outsb jbe mov outsb js jg (bad) jp jae aaa push inc xchg mov dec lret stc sahf add sahf or test push iret fwait add jbe subb imul xor pushf inc mov xchg jg add mov loopne inc inc idivl inc fild add add mov fistpll jg repz scas add lods and cli xchg cld fcmovb aad push pop jno mov inc or cmpsb mov stos js add icebp xchg lds add jge hlt xchg lret sub std push repz add or jns jp cld stc sbb add stc jp jge repz sbb xor or insl add push inc movsb mov and daa shl sub pop and push (bad) jl mov test sbbl mov push inc movsb mov enter pop xchg mov clc jle mov das cmpsb call jmp add orl cli or jp clc ljmp fcomip enter ficompl pop mov and (bad) sbb sub push iret inc ret xchg lock add testl cli sub cwtl adc mov jecxz subb xchg cwtl xchg mov in jb adc lock add stc or sbbl cli sub cwtl sub arpl jecxz daa mov test rorl jle insl add push inc movsb movsl rorb jb xchg (bad) loop sbb cmp out push cli daa mov test imul pusha and enter aam pop (bad) out (bad) enter ficompl ja shrl (bad) jmp add jbe xchg fwait (bad) (bad) out lret add stc dec ja imul push std xchg jecxz enter ficompl aaa test mov sub lcall xchg sub or imul imull xor popa rcrb xor pop cmp fidiv xchg mov out sbb test add aad push cwtl sar mov jnp jae data16 mov xor and hlt cmc fidiv xchg fidivl sbb jmp mov and cmp pushf fisttpl das add pop jg (bad) cmp inc jns cmpb inc sub test sbb sbb das jge mov lock xchg out mov mov lods cmp gs pop pop lret jmp cmp mov or mov gs pop lahf das jmp push mov addr16 pop jg mov pop cmpsl lea cli ret mov out arpl stos cmpsb or sbb loope jnp aam hlt xchg push std gs sti ds clc test inc outsb cmc outsl pop add cmp imull jnp xchg add or sbb loope jnp cmpsb xchg sahf jnp dec sarb test pop mov in imulb jnp fldt loopne bound dec (bad) (bad) shll repnz mov xchg pop jp cmpsb mov divl inc repnz sub mov sbb (bad) out repnz les addr16 push mov cld inc daa divl out arpl sub lods loop int sub mov lock adc and xlat adc jl sub and add in pop es ret insl add push inc movsb mov sbb imul sarb mov das push jmp add xchg mov xchg dec pop fistpl ljmp fcomip enter ficompl (bad) fucomip sbb inc lret pop cwtl stos mov fwait out sbb test add aad sub pop push dec sub in or test stos dec fsts and add push cmp test fcompl mov cli push and and push das sbb out xor mov lea std (bad) cmc cmp sahf call (bad) lcall and movsb imulb (bad) push and sbb das adc dec push ss daa ss jle xlat outsb push es xor gs dec push mov mov cmp das mov in cmp mov xchg daa lock cmp inc insl scas loope add cmp jle movsb add in lock (bad) mov cmc jnp call aaa mov adc jae aaa pop (bad) popf fiaddl cwtl (bad) xchg loop test in xchg cmp fmull sbb data16 leave lods pop jp or inc mov xor (bad) adc cwtl fstpt popa pop xor das jae or mov xchg sub sbb subb in cmc cwtl add mov jne mov lds xor jnp enter jecxz mov sbb jg (bad) adc xor lock push je jg icebp out negl jp and push pop dec lds xor jnp leave insb sub add outsb ja mov arpl jg (bad) adc aaa (bad) xor push loope movsl push push out negl jl cmpsl jno mov lret scas out stc sahf add sahf or adc or add adc subb imul stc or add lock push push out negl jno cmpsb jno mov les xor scas or mov xor sahf push repz imul ljmp xor inc jg (bad) (bad) xchg lahf rcl pop inc xchg add push sub mov dec imul xor pushf inc sbb jnp mov adc or pop fnstcw fisttpll jle add xor mov adc repz out cmpl pop mov aam out add aaa sbb jge sub xlat mov sbb adc cmp out sbb mov sbb jae jmp (bad) push icebp dec add (bad) cmp xor lock ficom pavgw pop (bad) in mov std outsb mov mov (bad) aaa mov cmp das jle push add xchg insl call test cld cmpsb invd stc ljmp pop (bad) jp cmp das ds aad cmp mov daa mov in add ret xor mov mov and jmp pop add outsb stos in push pop inc ficoml sti pop je bound (bad) imul mov clc popa xchg imul popf cwtl test out test mov push jne push or js xchg xchg mov les cli stos adc fdiv inc jmp inc adc mov add or add push imul popa shll cmpsb sub dec inc xor inc pop mov sar lcall push fwait jae push mov sub inc adc ljmp or fprem fnop add or (bad) aaa mov repz dec xlat dec incb mov adc repz shll cs adc mov cmc scas or adc jl les inc xor inc and adc or xchg dec dec cld test icebp scas jno jnp xchg xor daa inc sub scas idiv dec push imul add jne inc das inc add dec into sub sub (bad) cwtl add insb jbe pop dec stc xor or pop push hlt scas lea mov icebp int xchg mov pop scas push mov and xor mov dec inc jg repz sbb or mov ja mov loopne xlat cmpsl push sahf das add lret mulb and ret js pushl add mov jnp inc add add jge ret js add repnz idivb data16 movsb sti clc cs add popf in lahf adc push xor inc or or xor movsl cmpsl inc sti mov pop xor and inc cmp mov into clc sbb and lea adc (bad) aaa xor fistl adc ja adcb out xor xor data16 xchg inc outsb mov ja,pt adc aad (bad) jmp add incb dec inc inc not rcrb dec fwait xchg push test sbb cmp outsl push dec aaa pop and pop fbstp push ss or cwtl ret xlat stos inc or jno in popf lods incl xchg arpl mov adc (bad) mov imul xchg cmp add dec and in pop jp clc hlt mov insl inc es mov in enter mov cmp clc notb cmpsb xor adc (bad) roll cs xchg inc gs xlat and push push and sub mov add lds (bad) xchg push lock aas push add fistl inc mov imul int (bad) or pop sbb iret out in insl nop jnp imull mov loopne mov jno mov mov mov adc pop or out mov and (bad) ljmp insb mov add adc pop push lods inc inc bound pop movb mov rcrb movsb fnsave lds cmp outsl push dec pop cmp and leave mov xor icebp push mov (bad) inc xchg in jl and pop jle jmp (bad) and es adc dec and pushf daa insl dec jmp (bad) jmp (bad) mov pop in adcl and in jnp mov dec ss mov out and jge cld mov aam out cmc aam add mov inc sti ss ss add mov jmp adc jne testl out jle sub ja cltd xor les or in lret pop in adc cli ljmp sbb add testb inc or push and mov pop mov test push lods popl cwtl and pop clc loopne das jnp inc sbb repnz cmc mov cmc xor xchg (bad) mov adc fcomip scas repz sahf or xchg xchg and scas add jle repz jne scas push into lods xlat int add mov ja bound xchg dec add add jnp int pop js fisttpl jl push (bad) gs test dec sub pop aad leave rorl lret cwtl add mov enter and scas mov gs in mov inc mov jnp scas arpl in rorl add push jge pop push call (bad) adc loop fs dec pusha mov or dec ss adc xchg sub mov out cmc mov loop sub pop push jmp std in dec mov repnz pop dec enter and pop add xlat std xor jg fldl adc sbb gs clc jg mov jmp mov scas sbb inc adc xor outsl pcmpgtw daa cwtl push inc push stc loopne lahf sbb in lds inc jge inc movsb syscall mov inc push or clc cmp jle out or or mov pop xor cmpb dec inc add movsb cmp pop push pop rcll in jns daa movsl aad sbb xchg loop idivl pusha (bad) ja lods jmp cwtl and cmc or push inc and jecxz mov add pusha in sti out add push jg (bad) jns jg (bad) adc mov fcos test xchg jle jge or pop mov mov sbb dec fucomi out clc cmp daa mov (bad) (bad) sbb xchg loopne xor jnp jg and inc push xchg test xor or (bad) fisttpl inc dec (bad) dec mov sub mov dec mov xchg cld dec std adc outsl rcll mov (bad) cwtl mov je ds pusha popf mov in icebp or negl push mov sub inc sub arpl int cld xor imull cmovno notl push insl lret repnz loopne dec int inc jne (bad) ss icebp push pop sbb pop rcrl imul and dec movsb dec mov fisubl push sti sbb pop mov scas xor jle stc aaa pop out sti imul pop nop or inc pop jg jle pop pop sbb xchg pop cmp cli mov push push fwait ljmp xor mov das adc xlat mov aaa aad sub jns xchg mov lret add addr16 add repnz repz in mov mov ss mov push test and cmp addr16 push xchg push xor lahf inc mov cld sahf mov pop js cmp add js lock mov adc dec fsubrs lds pop sub mov ret sub sbb mov push pop add mov pushf dec (bad) mov add fnstenv pop mov sub add aad xor (bad) aam mov lea call dec adc add lea sti loopne jnp lds sti insl data16 leave fwait daa sub mov ss or xchg push aad xchg dec dec mov outsl cld pop test cld cmpsl aam imul inc push fdiv mov sbb scas sti cltd in aaa lret ret mov (bad) push push xchg push pop xor mov jl repnz xchg icebp ss adc dec dec lcall add leave (bad) in negl and lock loopne aad cwtl mov mov dec jge jo jo (bad) out ret add sub adc sti jmp mov sbb cmp sahf inc testb in sub xchg cmp out mov inc popa mov jbe pushf mov jl inc subl clc int data16 mov push cwtl icebp xor jnp mov outsb cwtl sbb or dec and mov dec dec add cltd mov inc and sub leave and cmc cwtl sbb mov push mov cmp loopne adc inc push mov xchg inc lods jle pop in cmpsl ljmp sub pop andl cmpsb or inc cmc push jns fnstcw xchg idiv in std inc mov mov xchg in sub lret or jl movsb push xchg (bad) enter mov loopne loopne in sbb sbb push jg add mov icebp movsl fiadd loopne mov add jnp pop pop lahf cmp aam gs gs mov add fildl or inc imul jb cmp dec dec mov or idivb mov nop xchg jge pop dec jnp mov (bad) aas jmp gs mov jne sarb jge out or or mov pop xor (bad) mov push inc add add push hlt sub cltd jns add icebp pop shr add push jl mov add (bad) jmp cld in pop dec data16 sub out cmp inc aaa sahf xor inc inc add (bad) or repz add bound mov notb es cs les popa lock cli pop or sub dec push fwait int3 cli sub imul cli xchg and adc adc xor sub lods sahf fiaddl xlat sub xchg mov jo adc xchg push adc cmp dec mov pop jg mov or cmp add clflush fdivr cmp pop loope mov cmc ljmp sbb mov xchg sbb and gs cmpsl mov popa std lret jp or inc mov xor mov les ss push gs and movl notb jbe dec xor aaa jle mov push add add mulb mov push adc addl xrelease mov loop test cmp pop hlt mov addr16 add repnz hlt mov data16 cmpsb sti clc cs (bad) js xchg cmp (bad) xchg or push pop cmp jns rorl sti in inc clc xchg xor dec xchg in mov jmp xor add imul mov inc xor push sahf xchg mov and movsb and (bad) loope sbb xor xchg out mov jb in dec push add cli cmpsl jp ljmp xchg insl push mov or add mov popl mov sub push addr16 aas mov push mov dec loopne push push ss or mov mov les stos fldenv aad sbb clc in hlt jne fldl gs test outsl mov (bad) cmc xchg call mov nop push push xchg and xchg js cltd or add pop pushf stc repz (bad) mov inc loope push fildl ljmp icebp in cmc cwtl add adcl mov shr add push jl add push js add (bad) adc mov and pop lret adc insl mov jmp dec int3 xor mov negl aas cmp loop sbb (bad) jp sbb jmp xor cltd cli mov lahf xor nop sbb xchg cli pushf or xchg movb mov mov in repz stc ljmp lock ret inc or aaa mov xor lds out (bad) stc adc sahf or pop cmp (bad) repnz repz imul sub adc sub outsb jbe test mov jp sti test mov sbb mov negl mov mov push mov les xor scas add movaps sub or xchg fiadd ja mov arpl jg (bad) adc xor pop push loope movsl push je jg icebp out negl bound and push pop dec lret scas out sti lahf add sahf or xchg mov ja (bad) orl cmp imul fcomps outsb jbe test jp inc jg (bad) adc adc std fdivrs je add icebp sbb inc jno sub scas out sti lahf add sahf or xchg mov ja (bad) orl cmp imul ljmp sub mov adc xor das push loope movsl push je add icebp sbb push test dec lret scas out sti lahf add sahf or xchg mov aam mov cmp imul mov dec outsb jbe test jp inc jg (bad) adc insl and xchg ds fdivrs je jg icebp out negl mov dec lret scas out stc sahf add sahf or adc clc iret mov orl cmp sub or adc punpckhbw repz push push out negl pop and jno mov lret scas out stc sahf add sahf or adc into sarb orl cmp sub or adc punpckhbw repz push je jg icebp out negl xor and push pop dec les xor pop loope,pn mov cmp imul xor dec outsb jbe test jp inc jg (bad) adc imul xchg ds fdivrs push out negl pop cs push mov lret scas out sti lahf add sahf or xchg jmp ja (bad) orl cmp sub or cmp punpckhbw repz push push out negl jae int3 jno mov lret scas out sti lahf add sahf or xchg stos inc ja (bad) orl cmp imul sbb outsb jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl adc dec lds xor jnp lcall add outsb jbe test jp inc jg (bad) adc ds fdivrs push out negl adc and mov adc cmc aaa mov xor clc test xchg xchg push test loop jns es pop sti xchg aad fs sti sub mov pushf sub outsb jle mov dec js jg (bad) adc xor mov fldt and cmp add add test repz push je jg icebp out negl sbb and push pop dec lret scas out sti lahf add sahf or xchg fsubrl orl cmp imul sub outsb je ds lret jns jg (bad) adc fsubl xchg cmp xchg (bad) dec dec push cmp gs adc cmp mov ret xor std jnp inc sbb mov mov lods mov cli cwtl dec inc cmp rol pop add cld repnz lds dec in add (bad) repnz push lcall negb push dec push enter out outsl fstpt mov pop enter or aaa adc (bad) stos xor test sub jp push pop xor leave add mov jge rcll rcrl stos jo clc fsts pop ss or ficoml jbe stc fcoms jle pusha lock in jmp std lds jmp push adc add mov aam cmpsb add mov outsb pop pushf out sub loope das add out inc scas out sahf repz mov fadds out xor fbld stos or repnz jle rcr lret clc sti aam jg out test aam cmpsb add add and jnp lret mov into lahf ficompl mov outsb xchg push test in jne jg aaa or mov insl push mov insb pop pushf (bad) and ffreep hlt and pop jno pop push sbb mov lret negl outsb ljmp xchg out ret incl popa orl outsl or sub xchg daa icebp mov jnp mov lret scas out sti lahf add sahf or xchg fisubl sub adc subb imul les es punpckhbw repz cld add into aaa mov shlb sub scas cmp les sbb sahf cli data16 cmp add std lods jle rcrl aas imul push add cli mov sub aad fmul pop (bad) jo xchg jbe adc push jnp jp imul add jmp xor aam cmp or jns xchg add lock add xchg add adc inc ljmp sub jns add out inc stos mov imul subl sub sbb mov test mov cmp js stos mov dec and jg ret loopne outsl pop clc sbb sahf cli data16 cmp add std lods jle fucomi data16 xor pop mov in in sub outsb jno negb iret into ror rorb pop mov push sub insb in pxor lret or (bad) sti test int out icebp lcall push insl inc lods jl jl and arpl pop pop addb repz xor or mov icebp xor sbb data16 mov les xor cmp js popa adc lret jbe test jp inc jg (bad) adc dec sub xchg ds fdivrs push out negl in fcoml inc neg test cmp cmp ret loop incl divl ja cmp shlb pop adc xor adc jne std test xor pushf jl loop addr16 cltd pop faddl mov mov add dec mov mov aas bound in add sahf or xchg add mov loop movaps jg subb imul hlt inc stc add daa push jmp push sti jb cmpsl shll add mov dec ja add mov pop stos jle repnz cmc (bad) fiaddl xchg xor or push test and das add addr16 lret xchg and or mov popf idivb rolb into dec out and cmc xor add mov arpl jg (bad) adc cli push pop xor loope movsl push je jg icebp out negl xor and push pop dec lds xor dec sbb inc hlt push and xchg sub xor adc std jne pushf fsubr lahf push jns mov int3 clc leave cmp sub js cld imul and pushf adcl in jecxz lea (bad) (bad) lea and pushf cli mov aam lea mov xchg mov es in pop inc mov push pushf cli mov aam lea mov dec mov jne mov pop cmp mov outsb mov add lods scas mov stos jns mov xor cmp mov loop movaps sub mov aad xchg shl pop notb test xchg add lods or dec testl negl dec xchg (bad) rcrl sbb outsb mov repz and xchg pop das movsb inc or add aam or xor (bad) inc data16 cmpsb sar call aad aas mov in pushl cmp xor sub test es mov and sbb jg (bad) adc cli dec popa xor loope movsl push push out negl adc and movb test mov aad or mov xor gs out ret incl popa orl outsl or sub xchg and mov jnp mov les xor add ret pop insl sahf xchg fmul cmpsb mov ret popl push mov aaa mov lock flds les xchg inc (bad) jnp inc jnp ds cmp xor popf fwait enter push adc enter repz ds dec jbe fdivrs inc addb addb addr16 imul mov sub add outsl mov call and mov inc sahf (bad) jbe mov mov jge (bad) cmp xor dec inc adc xor mov call das shr dec data16 rol sbb mov cmp cmp pop mov jbe shlb cld out pop cmp repz mov mov inc mov rorb aaa std loop in cld xor outsb mov ss sbb mov dec insl push sbb xor in sub adc subb imul (bad) pop int (bad) cmp jbe test jp inc jg (bad) adc cs jnp je jg icebp out negl xor dec lret scas mov sti add sahf or test nop clc push dec mov sahf movsb (bad) xchg lods and dec and sbb or aad adc icebp adc xchg add mov (bad) (bad) in mov iret ljmp mov test push inc inc sbb call fisub out (bad) sub mov adc add mov pop ret xchg (bad) sub add inc mov cmp jae (bad) mov insb cmc popf ret jbe aad stc in and leave int jns xchg dec aas in aad pusha xor cmp in in pop cmp sahf add ficompl fildll enter pop cltd cmp ret mov mov mov jbe or dec fs je aam lods dec add je add inc pop fisttpl std fbld out pop clc dec arpl add push push (bad) mov popa (bad) idiv adc outsl outsb xchg shl jne rcll pop jg and pop aam xor push data16 int3 xchg jnp adc lock test add mov or sbb lods fs enter stos clc sub imul insl cmp push fildl and cmc mov add add fstps add aad insb push pop leave mov les cmpsl fadds add outsl mov in cmc cwtl add insl fcmovne out mov scas push int or pop sub add sub pop arpl add inc mov cmpsb gs mov bswap sbb lods bound ficompl sahf push repnz sub xchg inc push cli cwtl add inc jnp inc dec mov adc pusha aad cmpsb or and push mov add sbbl ds lds push xchg cmpsl sahf cmp sub xchg mov sbb cwtl pop test sbb push mov and adc jae lret movsl xchg pop mov fidivrl or mov push add stos clc adc or push mov inc and lods lahf add test stc xchg xor and (bad) cmpsb iret dec fcoml or fstpt loopne into or sub xchg jae std adc add push jl popf lret fdivrl jg (bad) jne push (bad) cmp add mov pop es xor call rolb sub mov sbb popf push mov lea push dec sub dec int3 xor inc inc mov adc cwtl fildl or add inc pusha mov adc pusha enter and xor call movsb or and jl addb (bad) loopne mov repz pop and xchg xor cmp or in imulb js push or js repnz and xor popa (bad) shll dec add inc popf mov sbb lret out lods mov mov mov int or push fadds cld in push or int sub xchg jnp inc push mov adc ret hlt add mov adc pop xor loopne ret aad or sub cmpsb xor push les xor scas push sub mov sub mov imul add add cmpsl loop in jmp sub outsb ja push shrl (bad) (bad) push cmp xchg outsl loopne loope lea mov fstpl les and and leave mov js add lcall adc std lcall mov push and add pushf aas or imul xor sub push in mov push cmpsb mov mov jnp je jg icebp out negl sub jge loope orl subb imul punpcklwd pushf xor shll bound repz out jo fistpl jns add push sub outsb jne mov insl js jg (bad) adc xchg and sub mov xor pop loop nop pop (bad) (bad) int3 (bad) mov ficom aaa lds aas sub sbb or stos xor js add cld sbb cmp mov (bad) ja lock ret xor movsb inc mov loope push mov xor stc inc pop mov adc cltd add sahf or scas cmp scas cmpsl int3 das add sbb loop nop or cmp (bad) jmp cmpsb mov pop scas mov adc cltd push dec pop fwait mov and cmp or js jle or jne dec repz iret icebp cld sbb repz xor mov repz cmp push or cmpsl roll mov add add jp jge pop mov xor xchg cmp pop movsb push repz dec cmp in inc pop in add cld pushf cmp ret or aad js cld mov (bad) clc jne test in add cli pushf cmp and cld imul push pop xchg xchg or push popa xor mov or sub (bad) (bad) test xchg (bad) bound ja mov xor push hlt cltd in xchg into dec inc pop add push es cld adc mov mov outsb js cli clc in in fdivl ss ss cmp dec hlt or adc xor add pop inc movsb dec cltd push and lret cld sbb jge repnz push lret icebp sbb je (bad) jg leave sbb adc out call mov hlt out ljmp xchg arpl xchg pusha div push pop (bad) test inc or mov adc out movsb or mov jnp inc jo jmp aaa mov adc sub push dec xchg and int3 cmpsl cmp dec and and ret loop popa dec aaa jnp jecxz es adc (bad) into aam pop ss fmuls mov add repnz xor jbe,pt imul out pop subb and mov mov rolb test mov add jno in jl push pop xor hlt in add (bad) xor sbb push sub xor jbe cli fdivrs push out negl sbb xor pop cmpsb pop clc pop lds sbb mov iret (bad) jb scas push inc adc mov int3 push fwait jl cmp bound out test xor arpl mov clc sub pop fs mov push push out negl fldcw jge jbe pop adc and into or sbb add (bad) in mov push adc jge out fcomps jmpw jg push mov (bad) sub pop fs mov push je jg icebp out negl cltd test push jg sub jmp cs jecxz mov icebp mov and test out push les sbb repz adc (bad) sti aad xchg aam and hlt fsubs mov xchg cli pop in lret add aad in add mov cmc push movsl (bad) dec imul (bad) cli fldt andl sbb or inc scas adc jb clc mov pop fcomip sbb repz imul stc cmpxchg sub add pop and hlt sti (bad) dec cmp xor clc into xor mov fadds lret daa mov lock fucom gs mov mov hlt in mov lsl jg jb in add daa nop cltd ljmp outsl mov in cmc cwtl add clc aas lods pop jne mov les xor pop ret mov cmp imul xor dec outsb jbe test jp inc jg (bad) adc inc cs xchg ds fdivrs push out negl cmp jno mov lds xor jnp andb add outsb ja mov arpl jg (bad) adc cli inc jne push loope movsl push push out negl aas push jns mov xor scas dec mov lods movaps sub or xchg fiadd jbe test jp inc jg (bad) adc pop sub xchg ds fdivrs push out negl adc and test rclb and aaa xlat sahf mov aas bound sub push pop das add jge push xor sub cmpsb leave dec mov mov fisub (bad) psllq xor js addl add lods pop js sbbb dec repnz or jg push push inc add add xor shll (bad) ljmp movsb ret cmp mov xchg leave clc mov sbb jmp inc addr16 test sbb add jmp cltd xchg out repnz in mov add xor jbe cld adc dec (bad) mov add mov inc out sub mov add outsb cli lcall push scas jb pop lea cmp inc inc mov mov leave test pop xor or cli sub lret data16 je pushl icebp out negl cltd test js mov loopne sbb lret and cmpsl adc repz cmp add mov sbb add add mov push insb sbb stc (bad) mov les addr16 mov out pop cwtl add xchg fistp push loop and and adc cmpsl xor ficoml in call inc inc fildl stc adc sahf or adc pop stos or movaps jl stos xor xor inc sbb je adc cmpsl or xchg jl out ljmp insl jne movsb add cli repnz pop jle or mull jp add sub pop clc (bad) or pushf in mov in xor jne cld (bad) loopne mulb adc or ljmp aam es call nop mov pop dec js sub in adc inc push imul sbb mov or xchg jl out add xor arpl jle adc stc cli data16 fstps sbb std cwtl cli inc mov (bad) mov jnp inc icebp mov out mov cmp dec clc aaa xor loope movsb mov out dec cwtl enter hlt mov subb push iret inc sub enter jle cbtw imul int3 add mov adc cld sub add jbe adc sub dec mov pop or pop sub inc nop adc arpl jmp fadds scas jle popf fcoms imul mov cltd enter mov cmpsb or sbb and adc cmp fcompl xchg rcrl dec xor loop add mov sub jns mov iret mov test xchg pop loop lret push add sub add lock and cmp sub jge jo pop cmp inc inc xchg in sbb loopne lret outsb in sti ret mov push dec add call test aas and movsl or jecxz dec test and popf cmpl sub sub mov inc sbb dec and mov jns push jne jl clc xchg fdiv add mov mov fsubrs jbe pop cmp xor fdivrs je cs sahf add sti xchg jle addl sub rep cmc sarb pushf das scas js cltd cli add xor cmp inc mov adc adc aaa cmpsb jae xchg mov xchg lret and adcl xor aad xor xor and jno pop stos jp pop loop and scas sub or pop mov push jno and clc add leave mov lea mov sub gs mov fcomip enter sahf cltd sbb stos out sub mov je jno mov or (bad) jmp (bad) outsl cmp inc inc mov out jmp and fcoml ljmp in mov sub mov push cmp rcl or fcomip enter sahf cltd daa adc push outsb xchg in mov adc ljmp cltd mov pop aaa div fdivp test mov cltd jb in in sbb inc shrl sub repz jns in pushf fisttpl cmp ljmp or and push push das daa mov xor xor inc jg (bad) adc pop cs xchg ds fdivrs je jg icebp out negl adc sbb pop dec rcrb sbb add nop push mov in shr (bad) lea imul push dec inc mov ret icebp fldcw clc sahf (bad) repz js jo push icebp xchg loop lret jle repz mov test jg repnz int sub fwait jno,pn movsb bound aad divl insl loop sti sub outsb mov insb out in add and lock inc mov cli nop or mov outsl push mov hlt clc (bad) lock add scas pop adc adc cwtl (bad) test mov lahf sti insb out xor insl aas mov sub aad jo xchg pusha loopne loope sbb ljmp sbb pusha xlat sub add lds sub pop pop incb push mov add add dec lock inc mov cli nop or mov outsl push mov hlt clc (bad) lock add aad push ret call mov inc xchg faddl jg in fistpll das xor inc lret sub dec pushf jnp shlb punpcklwd (bad) stc fstps mov dec sub rcrl iret and clc pop sbb sub mov jns mov cmp das lods cltd xor cmpsl data16 sub mov pop mov aam fwait add div scas sub imul xchg pop cmp jns xchg jg (bad) or ret ljmp dec lods xchg inc pop hlt cwtl scas int or int3 jnp inc sbb jae adc inc add mov jae push add lds pusha mov hlt cltd es ss push rcll and dec call aad xchg xor xor push aam xchg and ficom and imul mov jae push movsb sub cmp scas inc jp push insl push std xor mov fstl xchg mov (bad) vcmpss push in sbb pop sub cmp jg test cltd pop int push (bad) and daa jo ljmp hlt incl imul or sub and and bound sbb add adc pop sarb out xor jmp xlat es clc icebp or lret out inc pop or mov and movsb xor js add cld sbb mov pushf xchg jg cltd cli ss leave mov out andb sbb sbb push xor push mov jecxz js repnz xchg fs mov sbb sub adc subb imul lock mul stc cmp repz push je jg icebp out negl pop inc and push pop dec lret scas out sti lahf add sahf or xchg sub ja (bad) addl inc sahf push repz imul stc or clc add lea add mov xor jnp stc in jge jecxz mov and mov jp jae cmp push out negl inc push jno mov lret scas out sti lahf add sahf or xchg aaa or mov cmp sub or inc cli punpckhbw repz push push out negl adc and xchg add fldenv push mov xor add add sahf call test (bad) or sub jp pop into out pushf iret aaa push jbe mov dec ljmp out negl cltd test or cmp ds movb xor sbb adc icebp mov and jle gs cmp add sbb or cmpsl scas push pop imul test push ljmp mov fdivl dec into js scas inc pop xchg fld aad xchg mov mov (bad) or xlat pop dec (bad) lods sub scas add pop xor test push push pop inc pop movsb jns cld and dec push jb cmpsb out js inc bound (bad) xor repnz enter (bad) xchg xor inc rolb cmp adc jge xor cli mov out pushl ja (bad) adc jge mov pop dec xor xor das xor shlb xor xchg inc fidiv repz pop jno inc movsl movsl inc mov ds push sbb pusha xchg inc out mov aaa xor imul sub jge jle movsl or cmc aaa daa outsb sti jno mov pop inc cli and pop dec pusha inc push pop lret xchg sarb push scas jmp inc shl or cmc (bad) int3 jne push dec movsb inc dec mov mov or pop mov ret lea dec jg sbb push bound jle dec push and or sub dec dec (bad) mov dec mov rcl xchg pop lret es out push div mov inc aaa add leave or push pop cmpsb or inc mov mov lret mov pop out push sbbl or das jne leave inc mov xlat dec xchg inc or clc pop push cli dec sbb cmp sbb test jmp lahf xor popa leave mov sbb test adc add (bad) rcll inc add imul mov shrb push xchg loope dec jb,pn cld mov (bad) xor dec cld pop aad call (bad) jb (bad) mov jl call dec push enter cmp in ja ja in push testl into loopne call jle push dec aam inc xor sbb inc clc inc imul scas sbb mov mov and lds mov (bad) in std dec mov mov mov or xchg mov xor lahf xor and add (bad) and cltd out test push loop lret movsb sbb cli pop mov jno clc out test icebp divb aam icebp sbb jno shr xor insl pushf int3 xchg cmp out and daa jecxz test movsl inc sub dec out xchg jo lock mov or into stc es div lea iret pop pop sbb inc lds divl pop test xchg ss or fs jnp (bad) cli mov cwtl cmpb dec fdivrl dec or mov data16 sbb jmp lods in lcall daa push jo icebp mov mov out aam xchg xor fwait xor jnp ja mov jl adc fcmove or pop aaa add notl cmpsb bswap inc mov mov push inc (bad) ds rorb fs xor lret lods aas inc or imul inc or loopne adc in add or call clc outsb dec in sub xor fdivr mov xor push or das pop xchg cmp add add and cmp sarb test out ljmp loop dec ror aam jle dec call push and mov push dec xor jnp or pusha mov jno inc pop mov cld jb je inc pop cwtl out pop sti mov mov jmp imul cli adc test dec sahf les mov aaa (bad) in out cs repz inc mov mov out jl ds xor and mov xor jp outsl pop lods jno mov mov and or xor adc sbb stc ds iret inc xchg jno cmp mov pushf leave jbe dec pop (bad) jno inc jo pop rcrl icebp (bad) dec mov pop jb,pn lds dec std dec mov push outsb loope sub aas arpl jae aas test out mov add insl sbb dec inc clc jp loop jnp push ret sub fidivr out inc mov stc xor xor jne test (bad) imul lea cmovp xor scas imul out pop pushf mov fnstenv mov or repz or sub and mov lret scas adc lcall sbb bound shr add sahf or xchg mov jge fstpt or push mov (bad) lea scas out sti lahf add sahf or xchg or sbb mov cmp imul dec test outsb jbe mov outsb js jg (bad) jp repnz push mov sub adc pop dec lret scas jmp addl sahf or adc lods lds hlt into or sbb dec adc movsb jg (bad) movl adc in adc cltd xor adc fs lds mov in sbb and clc jecxz mov and mov (bad) adc sbb mov negl adc jno sub int addr16 add add movsb popa cli mov lods (bad) lret inc mov cltd enter cmp dec xchg xchg push or inc dec cmp or add jmp mov mov dec in clc or inc adcb int cmp lret aas dec enter icebp or mov gs push adc inc movsb and frstor mov fnstcw pop jmp xor mov inc dec inc add inc mov push push out negl fwait and xor or icebp sbb and xlat dec imul in add and js pop ds push jb fcoml sub or add (bad) lret out add jmp orb mov or imul inc arpl je sub sub xchg cwtl sti jo in sub subl adc sub divb cmc jg rcrb arpl popf mov leave inc aas mov adcl jl rcrl data16 jo imull js and outsl xchg mov mov adc mov cmp lds sbb add in (bad) lret or fsubrs dec lock mov mov xor testl jp mov mov sbb jne mov jle adc xchg xchg repnz mov xchg (bad) mov in ds mov fwait in aaa mov mov clc pop pusha and cmp jecxz (bad) in cmc cwtl add mov data16 jl repnz test and push je jg icebp out negl sbb sbb pop dec lret scas out stc sahf add sahf or test push rcrl cmp sub or jp punpckhbw repz push push out negl adc jno sub int3 mov add add nop pop ljmp or cltd pop fwait inc mov lods add gs clc mov cmp inc fiadd or cmp jns rorl les cmp mov enter xor sub mov dec adc mov shll pop push repz fs sbb xor movsl ljmp jle or fwait into inc es out into cwtl enter icebp xchg jnp or adc inc cmp cwtl xor inc xchg shll (bad) pop mov arpl stos enterw shll and mov adc sbb sub shr test xchg sub adc cmpl inc jg xchg mov arpl repz add std lods jle add cmp pop sbbb out stos mov push or mov xchg mov lods repz outsb jb shll std lods jle add add das fcompl (bad) clc xor xchg ja popf lods popa inc push inc add or cmp jb shr mov adc cwtl add outsb jbe test mov jp repz mov sbb mov negl adc push pop dec les xor scas loope out xlat out or and sbb subb imul adc cmp adc mov add add lea cmp sub or fisub sub inc fnsave test js call inc pop mov adc jo push xchg dec mov xor js xchg (bad) inc xorl and mov nop cs cli es clc movsb cmc mov xlat in pop ret cltd pusha lahf jmp fisubr popa rcrb xor int jp (bad) cmp pusha or daa inc xchg sbb lods repnz push loop push fsts in enter adc divb outsb aam or and pop pop mov test sub mov jnp ljmp clc loop in nop lds fisubr hlt cmp push sbb push pop push test movsl mov mov enter xor cmp loopne repz push cmpsl ljmp jg movsl aaa mov xchg int aaa out imul inc mov sbb mul scas icebp mov jecxz ficompl mov pop mov fwait int3 jnp stc sarb and push repnz mov adc add pushf aad inc push push lahf cmp insl jne adc xchg cs fdivrl or lahf arpl loopne jo inc pop pusha push call lahf arpl sub cli js nop fildll dec jge (bad) popf sub jae and xor test jge (bad) enter cwtl mov push call and sbb fidivr fs (bad) jg lods cmp cltd test enter cmp jg test ret dec xor popf mov xchg jmp mov hlt sti fmuls call mov hlt cwtl fdivp dec (bad) mulb (bad) dec pushf sbb int inc gs dec and sub mov in incl stos xlat mov (bad) ljmp lcall xor mov (bad) clc inc jo add mov xchg inc nop pop mov pop data16 pushf int3 sahf in jp (bad) pop mov push lahf sti or cmp insb (bad) mov int daa les mov adc clc insb (bad) mov das push pop pop sub cmp lcall popa mov push imul lea jecxz enter pusha xor ret mov inc xchg iret out sub add cltd pop add (bad) lcall mov dec xor sti jo insl in dec pop sub add xchg sbb sahf or xchg inc repnz add mov jne scas push ficompl add sbb loop nop cs mov in add lock insb mov mov push lret andl (bad) scas mov clc push sub mov out cmc std push push sahf outsb repz add mov mov cmp mulb out jmp ja outsl jg (bad) jl mov mov sub fs in out or adc mov inc push adc inc fdivrs gs xlat dec adc es fcompl adc outsl js pop out icebp (bad) xor imul pop daa lock pusha cltd adc sahf pop pop mov repz hlt clc inc insb cmp pop movsl or or push imul add insb (bad) mov cmc fcoml bswap sti jg (bad) add out mov pop sahf aas cli and mov pop xor popf aam dec fdiv lods cltd add andl aaa div (bad) xor jg test fdivrs pop xor popf aam dec fdiv lods cltd sahf (bad) and or dec sti jg test fdivrs pop xor popf aam dec fdiv xlat (bad) ljmp mul loop popa xchg in push fs mov jb xchg pop stos jnp popf dec push gs dec adc adc inc ja sbb popl cwtl das into pop clc loopne das jnp inc sbb ds add mov add pop jg sub out or mov sarb dec push xor mov cmpsl pop lds xor jnp inc and adc loopne ds adc je stos in dec and mov mov imul push iret fwait scas jmp xor sahf or jns or jg icebp mov jle xrelease mov in cmc cwtl add dec xchg jns cmp add push mov gs xor (bad) iret outsb cmp add dec (bad) push mov repnz push std pop fs inc adc js xchg cmpsb imul fmull imulb cmpsb outsl clc dec fmull cmp sub jns fild mov int3 sub mov testb in sub add jmp in fs decl add int3 adc pop xor push pop cmpsb and lret ds cltd cmp cmc fisub dec fdiv mov mov cmp cmp pushf int3 push out push lret mov out out cltd adc jb push leave sarb mov js mov clc or lcall out mov pusha cltd dec inc cmp cmpsl xor mov inc dec add lods cmp mov mov repnz xchg pop add dec (bad) mov inc mov mov dec fdivrl mov pop test inc mov adc (bad) outsb jae mov (bad) ljmp sub or mov add iret cli bound pop cmp icebp outsl xor dec cmp and outsb cwtl lret lea jg inc inc mov lods sub pop (bad) mov mov and add cmp (bad) ljmp push fwait pop mov inc out sbb xor les leave adc push into jb cwtl (bad) fdivr (bad) in add mov dec sub jle fsts mov sbb out mov lods cmp jle xor and movsl mov inc dec pop cli dec push dec rorb ja adcl push aas hlt insb cmpsl sti into xor mov je cmpb or jb cmpsl xor es pop adc outsl jmp mul test pop mov adc lock push add nop sub pusha call sub push pop inc pop ficom addb iret mov push pop dec sbbl pop fildll inc sahf dec or sbb xor xchg dec sub mov pop mov push repnz nop mov mov cmp test rolb fisub inc loope xlat and mov es hlt scas inc push (bad) in jecxz lock leave aas push mov adc sub data16 xchg rol loop or mov pop adc mov cli and add push (bad) in cmc cwtl add sahf or dec test xor xlat jmp repnz cld mov sti sbb cltd test fidivrl aad (bad) stc xor inc das repz mov xchg jmp dec and test add pop ret sbb int3 sbb xor push sbb fsubl add loope mov pop xor leave mov mov test stos and push sbb sbb cs in cmp or push (bad) in std inc dec mov js,pt test jecxz lock push fisttpll mov adc sbb rol mov dec movsl or sbb aam xor adc dec fldenv cli lcall push shll cwtl ljmp cmp aas mov daa mov (bad) cmp adc cmpsb out add jbe adc xor call cmc fs ja (bad) adc nop mov inc cli stos pop and (bad) push add add clc and push dec inc ficomp imul fs mov jg mov addl pusha inc push (bad) push push pop and push dec nop mov push xchg push sbb cmp adc pusha (bad) mov push psubw (bad) call adc out pop xor xor inc jns ret and ja inc jno and and xor mov push inc jg repz sbb das pop mov mov popa xchg test xor sahf inc dec xchg sbb js mov push in mov lret test push faddl xor fisttpl aad jnp add call mov test out and mull inc (bad) xor sahf or cmp js lcall add inc xrelease mov in cmc cwtl add push jmp add clc icebp pop shr add push jbe pop push xchg jns jg (bad) adc loop jb call (bad) mov lods dec jp or jnp mov imul push jb and mov in add rolb jnp mov xchg cwtl into dec mov fwait pushl xor cltd ja jnp inc pop mov pushf xor add push stos lock lods mov mov jne ret sbb mov mov push or add dec fwait aas nop inc movsb mov lods aad mov and aaa mov push das add (bad) sbbl orb aad adc inc xor (bad) cld sub mov subl mov xchg cmp fdivrs lds ret xor addr16 cmpsl adc pop mov xorl xor inc rcl ss or cmp and addb pop jg cli inc xchg sti push std int3 jns es jae jnp mov mov loop push cmp arpl loop cmp rcr jle adc loop dec ror jno add divl jae add in out clc cmp jb js and mov add int3 adc jg pop pop mov inc add inc (bad) shlb dec push int3 mov inc outsb (bad) mov sub adc (bad) and xor ds mov sub sub push into dec xchg or aas mov into and and icebp add psllq data16 cmpsl (bad) push push dec outsb jbe test mov (bad) push mov sbb mov negl in lea add lods in loope add sahf or xchg jbe or out ljmp xor mov jp xchg sti cmp je jg icebp out negl jle and push pop dec les xor scas mov cli mov cmp imul cld lret push push dec outsb ja mov arpl jg (bad) adc xor cmp push loope movsl push push out negl (bad) out sub mov les xor scas mov out or cmp imul ljmp sub mov adc xor mov movsl push push out negl adc jb,pn mov lret scas out sti lahf add sahf or xchg stos inc je (bad) orl cmp sub or xchg fiadd ja mov arpl jg (bad) adc aaa or push loope movsl push push out negl or xor mov les xor scas subb movaps sub or xchg fiadd ja mov arpl jg (bad) adc xor xor loope movsl push je add icebp movb bound out add sahf or xchg dec mov xor sbb jg (bad) adc xchg dec js decb dec lret scas out stc sahf add sahf or test push rcrl xor adc push add sub mov inc xchg push jno inc jle jmp adc or pop push xchg lock jmp push add popa fistl stos out stos repnz add fidivr sub jg dec push fstpl data16 or (bad) test add sub sti dec rcrb push (bad) fcomps push je sub cmpsl repnz movsl xchg adc pop ret xchg int lea ljmp cld in inc sbb add lret dec mov cwtl (bad) jno int3 push jo fwait cmp imul xlat add push adc sub mov add in sub mov int int in fs (bad) add adc outsb adc shll jbe sub or daa insl and in xchg add mov mov xchg sub jae ja int3 mov outsl push jne (bad) inc or cmp ds iret aaa mov fstpt or arpl pusha nop lahf out arpl mov out insl add ja or out push int3 adc pop frstor sub sti dec rcrb jbe add inc icebp ljmp push mov (bad) xchg xchg jecxz hlt jmp in call insl mov cmpsb rol jb fs test xchg mov cs scas adc ret sbb pop or ret ret add cmp sbbl loope in cmp enter pop cmp fistpl sahf call in iret in jmp data16 push leave push mov popa xor fbld dec or inc jle add mov in imul sub push inc mov iret stc nop jge movsb in movsb je xchg fwait repz out xor add cli jle push repz cmc cmpsl iret xchg cmp mov in std sti icebp cmpsb orb in cmc and lret add pop push push stos lea data16 push inc inc mov mov nop mov por push insb sbb ror test adcl push stc push andb jmp hlt imul stos sbb int adc sahf and and outsb lock (bad) ljmp out and pop in cmp add or xor adc inc sti xchg cmc sub jae dec inc in (bad) ds xor jne movsb and ret dec not daa (bad) push repz rorl into cwtl add mov enter cmp xor pop dec xor jecxz fcomi xor scas lds daa out push icebp push mov fimul mov xor sbb repnz mov mov mov jae jo xchg daa out ret push cmpsl sub push ror fsub ljmp into mov out adc jle push jbe inc (bad) in movhlps xor pop mov xchg test jp imul add int push xchg xchg mov mov clc inc out sub sbb nop (bad) jge jecxz or adc add adc movsb and jmp push add js mov push xchg xor jl mov push cltd ds sti addr16 out lds test xchg xchg sbb sub cmp push sub dec cmp out mov gs ret sbb (bad) sbb and add das cmp lods or xchg mov xor add mov in inc jge repz in dec cld loop in inc ds pusha popa in xor mov fisttpl aad jnp add in pop dec cwtl adc xor mov sbb inc cmpsl into push push mov int3 add jae mov out scas jmp ret imul iret lods pop jp or mov jnp inc add enter lods jo jns mov stos sbb jecxz sarb push dec (bad) cmpsl test cmp push jb mov (bad) xor aas test inc add add leave cmp mov icebp in cmc cwtl add sahf or cmp js jg repz les xrelease mov fadd fildl cmp pop jnp jg icebp sub pop add lahf or xor loope aam stos icebp outsb sti add jle xrelease mov nop testb push jge hlt inc mov jl jg icebp in cmc cwtl add sahf or xchg mov add mov jne scas push shrl xor pop out mov cmc clc xchg push push and dec outsb jno loope in push mov fwait lret mov in into cltd xchg mov repz mov into cwtl xorl jnp mov cli cwtl add sahf or jno jnp xor pop sbb andl lahf xchg icebp jne enter mov add cli and stos jb movsb add in sub insb mov cltd aam fidiv iret jge,pt popa xchg mov inc cmp dec mov add sbb popa mov mov ffreep daa sub fistpll mov xchg lds sbb pop sbb (bad) (bad) jno adcl divb xor sbb mov inc popf aad mov xchg sbb pop xor hlt sub (bad) jmp je inc jns add xlat call adc rcrb dec xchg jle xor aad adc cmc ss inc iret mov lods popa or or and das add lret std adc fstl in pushf xor and clc out push mov pusha xorl or imul dec loope mov push sub mov jnp inc add add jb mov addr16 add repnz repz imul ljmp dec repz jg (bad) adc push xlat mov dec (bad) scas xor dec dec sub jnp mov call or mov pop mov adc pusha enter out cmp in daa mov push add lcall bound sbb cmp and adc mov cmp jg hlt (bad) dec push pop inc fidiv inc lahf add imul subl cmc fcomip fs repnz clc mov cmp aaa icebp testb icebp xor outsb inc xor dec daa push and jp fisttpll pop cwtl add stos fwait int aaa mov adc cwtl (bad) outsl fldenv test push push pop add lahf add add cli mov ret cld cmc loope adc adc addr16 and clc mov xchg and stos cmp ss movups pop mov arpl sbb mov (bad) icebp out negl outsb inc xor jecxz cmpsb mov cli punpckhbw repz push je jg icebp out negl adc imul leave and or xchg inc pop push mov add loope cmpsb mov add mov adc loop or aas sahf adc imul cmpsb (bad) vpaddusw lds push or mov xor pop das aaa js push das sub add add ss cmpsb adc pop mov xor add repnz dec sahf push repz or inc add rcll mov movsb lock mov mov negl ljmp les xor xchg nop mov sarb js and jg (bad) ljmp stc fdivrs je jg icebp out negl cmp imul out sti lahf add sahf or test out cmp mov orl lea adc aaa clc xchg add pop aaa sti (bad) pop jno mov inc xchg rcll dec into (bad) insb pop (bad) int inc mov add test fs js pushl aad rolb repnz mov js jg icebp cmp dec add mov std sub mov (bad) push mov adc daa shr test cmp clc push jb or orl add fucomi mov sbb cmpsb loope jmp mov mov and mov sbb ret sub jb xor push cmp or stos jbe std scas and cld cs add pop inc mov neg jle mov or test ljmp popf call cmp (bad) mov pop push cld lea addl imul ret addr16 scas addr16 cmp orl imul fildll add pushf pop jb xor add cmp or imul mov pop cltd sbb roll cmp lods dec pusha mov lods mov cwtl dec inc stc (bad) jnp add xlat xor cli test inc imul sbb imul jmp ss mov sub fcomps insl xor inc xchg andb inc inc dec fwait (bad) insl testb jp mov ljmp imul or ja add push inc into mov jbe pop ja gs mov mov pop adc xchg lods add cmc xor mov and mov sub push xchg daa dec rcl and add pop push jl pushl sahf les adc fdiv inc fsubr jle mov es in push arpl xchg dec jge outsb mov aad mov rclb mov push roll push add leave popf xchg mov out je icebp test and inc js xchg sti mov xor out mov sub sbb pop mov mov in mov xor dec fidivr das test xchg fdivrl xor fidivl mov fwait nop lahf mov mov mov lret outsb jbe xor lds or mov (bad) rcrl cmpsl sub dec jns outsb mov rcr out inc aad jmp mov sbb pop and and add ljmp dec jg mov inc pop fs fsubl (bad) out and mov insb aas imul adc xor loopne andl lret int3 jg dec jl addr16 add mov xor or sahf mov mov sbb mov jns jg (bad) (bad) repnz cmp xchg shl cwtl imul es inc divb jnp mov adc mov mov sub or xchg gs js add repz sbb daa sbb and sbb mov pop sti sti mov cmc pushf jmp lahf push push ljmp into push mov inc xor (bad) sub in dec bound js inc enter add pop mov addr16 mov fs mov in (bad) pop dec push add icebp add sahf or or mov icebp inc cmp push add dec iret mov dec xor xor mov lock jmp mov sub push frndint inc sahf fldt fimul add jnp push cwtl add jecxz jmp add dec and icebp dec push aaa push jmp and (bad) push cli mov sub mov or sub xchg push inc std adc add push je movsl sub lea icebp (bad) (bad) jmp cmc cmp inc mov pusha xchg cmp jmp sub sbb movsb in jecxz mov sbb int js jg (bad) adc cmp push pop andl mov push add icebp scas neg add mov sbb add sub adc pop test pop cltd adc xchg in xor cli pop mov mov cmpsb loop ret or add mov pop ds or push iret ljmp cwtl fdivr mov and sbb jg (bad) adc sbb aad popa inc mov orl cmp sub or xchg fiadd ja mov arpl jg (bad) adc cli rcrb psraw movsl push je add icebp (bad) mov add mov xor scas lret rcl lods or cmp imul es (bad) push dec outsb jns mov mov (bad) mov bound mov negl xor dec lret scas out sti lahf add sahf or xchg push mov sub psllq adc clc (bad) push dec outsb jbe test mov (bad) movsl pop cmp bound mov negl sub dec lret scas out sti lahf add sahf or xchg mov ja (bad) orl cmp imul ljmp xor mov (bad) enter mov sbb mov negl mov add scas out stc sahf add sahf or test push rcrl cmp imul repnz push push dec outsb jbe test jp inc jg (bad) adc ds fdivrs je add icebp sbb lahf and dec lret scas out sti lahf add sahf or xchg outsl outsl jg mov sbb xor subb imul adc clc sahf add outsb dec push mov mov xchg xor push mov bound and repz push je add icebp out negl jbe xor sub mov loop movaps pop repz imul add loop cmp fdivl and ffreep jae xor sub lods sub push adc or mov addr16 test xlat stc xchg mov xor (bad) aaa ret jecxz repnz enter pop dec (bad) mov jbe adc mov sbb sub repnz adc push xlat fstl arpl (bad) repnz adc into jnp,pn inc push mov out ds add stos fwait and sbb (bad) xlat inc push or or lea mov js loopne push aam sub or addr16 dec mov inc jmp inc adc ljmp bound lds (bad) jno mov aam arpl sub pushf jp imul outsb je or repnz adc push xlat push insb push out adc push int3 mov dec into jnp,pn inc or sub jg adc mov ret (bad) cmp pop mov jle in scas inc xor adcl lock int mov dec je sub push mov inc ds lock push lret (bad) push xor popf jnp in or sbb frstor push inc (bad) out imul outsb je or repz adc push xlat adcb xor outsl xor adc adc into jnp,pn inc add fisttpll or xor mov ret cli push sub push add mov push lods mov pop out (bad) insl add sub inc fnstcw popa add test aaa in orb push icebp mov popa sahf fisubl pop mov mov fcom aam lock mov sub outsb je loopne mov popl repz adc push xlat dec movsb cmp cmp adc pop dec dec adc dec into sub adc xor cwtl and pop clc movl pop adc mov mov jge in repz dec dec ss push std inc fnsave xchg jns push movsb push cli lds addr16 mov push jle add jge sarl adc or mov nop inc push stc cwtl call add inc fimull adc cwtl fisttpl or imul lock les or scas mov jmp inc adc cmove pop dec mov (bad) bound leave nop flds or xchg fdivrs push hlt or mov jno sbb mov fidivrl faddl (bad) pusha call notl movsb mov negl enter bound push push push cld sbb divl or and sahf iret out pop das out push xchg cmc and push test gs js imul inc adc or push shlb sub mov lret scas (bad) push outsb (bad) jl pop out dec fwait leave mov les xor clc xor aam fildl lods or cmp imul lcall ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl mov adc pop dec les xor jmp adc sahf xchg fmul cmpsb mov fnsave or mov xor addr16 xchg jmp outsb in ds inc mov cwtl inc mov clc cli jle jnp inc test cwtl jg or jnp mov in xchg mov dec jnp pop aaa mov cmp push add mov jge rorl je in mov or enter repnz aam add pushf je mov adc add inc jnp arpl adc into sub jne jb push xor scas sahf ret push addr16 lcall imull or loopne lods loopne mov divl mov mov lds popa lret dec jmp inc fldl add pop inc sub pusha pushl mov inc pop jge mov cwtl sub mov in repnz mul test adc mov lea daa mov pop and push adc lcall shrl add sahf or xchg inc mov (bad) insb les out ja mov out dec cmp or gs add icebp enter ds addr16 sbb pop sti divl xor fwait lcall mov int rorb sbb pop cmpsb negl mov xor jmp adc push pushf shlb inc sbb inc dec aas sub sbb or mov add cld sbb (bad) test mov jmp sahf test cs add adc mov sbb jg (bad) adc jo xchg lea add stos jns lods cltd in ds sahf or xchg sub mov cli push inc xor cmp inc (bad) adc push mov popa ret mov (bad) push cmpsl cs leave std jne jb and (bad) jmp aad sub aaa sub adc pusha adc inc ror inc lahf shll add test cmpsb jae push and push and imulb je lds jmp add insb inc push pop sti pop xor xchg xchg roll lock xchg sbb cmp or popa ret mov int loope xor add stc jg movsl xor cli xchg mov sti sub adc pop xchg xor cmc enter jb xor and div xchg sbb sti push pop jne outsl das mov popa ret mov inc or xchg test movsb test push jnp sbb cmc scas fisubrl (bad) je les sub sbb ret outsl xlat xor xchg stos out clc in rolb and loop int3 popf or arpl jecxz mov rcrl insl add sti sub ljmp jecxz enter jb xor pop push or stc cmc xchg sbb sti cmpl imul iret push popa ret mov mov (bad) das movsb test push shll fisubrl (bad) je (bad) in popa jne sahf rdtsc (bad) xor xchg stos out clc in rcrb xor or arpl jecxz (bad) popa movsl inc adc gs push mull fsincos sub or test pop mov xchg ret xchg xor clc lods push cmc xchg sbb ja jle,pn fnsave add iret push popa ret mov inc (bad) xchg rcrb das movsb test push mov scas fisubrl (bad) je (bad) movsb jp mov (bad) xor xchg stos out clc in rclb ret out cmc cmc or arpl jecxz jmp daa inc ljmp fsincos sub or cmp iret mov (bad) enter jb xor inc and cmc xchg sbb ja xor add test sbb push popa ret mov sub movsl jg subb test push push jl push hlt scas fisubrl (bad) je (bad) fcmovnb cwtl (bad) ret insb lret popf (bad) xor xchg stos out clc in rorl push lea in mov inc cmp jo mov sbb test sbb push popa ret mov int dec adc int sbb inc ror jns cmpsl xor dec es add fsincos sub adc sub fld negl fcmovnbe dec divb push dec je cmpsb mov lret mov imulb je lds add mov xchg insb inc push pop sti pop xor sahf xchg mov xchg sbb pop in add inc lods cmpsb or inc aaa sub jb push add lcall in (bad) mov cmpsl insb loopne sbb test sbb ljmp inc out popa pop add mov scas pop subl jae imul xchg push push fs call iret or sbb jbe lock jb xor js cmp xor insb jb and sub adc inc adc stos out clc in rcll es mov les mov jnp or icebp cli jmp iret push popa ret mov int xor pop and xchg bound and adc xchg ss or push pop sti pop xor sbb ja add icebp ss lahf sbb dec shl in cmc movsb icebp loope push inc sub dec into sub fmuls dec insb adc cwtl add jp jno xor shr jecxz pop lcall bound cltd pop xchg jp dec dec lret fs xchg jg jmp sbb (bad) shrb jns xor adc push adc mov mov mov mov jns mov test cld cwtl into dec mov jnp mov lea mov inc sbb stos enter jg jnp inc mov repz fwait lods mov or es cmp pop scas jp cmp loope lds dec xor jo,pn dec push mov pop cmp je mov aad sbb mov cld mov call jb das xor xorl mov pop pusha inc cmp pop imul fwait xor rorb cld or mov popf mov lahf and test cs jp cmp insb or mov push fucom mov jae push mov fldt jo pop mov (bad) popf and mov pop xchg (bad) xor jnp,pt fdivl loope idivl mov iret inc bound xchg mov pop div mov jo popf rcr mov pop jae xchg mov cltd fidiv imull loopne rorb ret mov pop cmp jns push iret mov dec flds push pop mov pop ss daa lret (bad) mov mov mov or dec jno inc scas jle clc lret rcrl xor scas ss mov mov out test push rcl and jb sarb mov lcall sbbl lahf aaa or fs pop add cld adc cmp scas and lods mov add sbb pop push sbb push jmp icebp pop shr icebp xor xchg push xor dec (bad) repnz rcll or inc rcrb aaa mov repz dec imul hlt icebp push fcompl sbb mov inc mov xchg in repz or fimull xor push sarl mov or xor out dec and xor int3 ret sub mov push push scas neg icebp xor mov jno sahf testl add and mov xor cld pop push xchg jnp mov repnz jns pop or mov jnp mov push or outsl aaa xchg out xchg mov bswap xor mov addb dec cmc insb or jecxz xchg or mov bound lcall xor add test pop pop call enter jns imul dec gs cmp std test or add pop and jno test or movsb pop adc lret cld push insb dec fcompl mov mov lock daa or ljmp sbb inc out push jmp int3 pop inc xor outsb inc fidivr loopne pop (bad) xor sbb xchg cmpsb jae ret test push jmp add hlt lahf sub outsb jge and cwtl jns jg (bad) (bad) nop cmpsb cmp xlat test pop adc inc and and xor dec rcll js mov aad (bad) mov jnp inc mov cwtl xlat cmp popf jnp xchg mov icebp int mov xor jge add mov cmp or cmp stc add jge jns test dec jbe sbb shll fdivp mov mov lcall dec lret (bad) popf pop (bad) lahf pop imul mov mov into jnp fsubl sub adc xor lret or dec aaa sbb pop popf fild pushf xor jle stc mov popa push movsl hlt stc leave xchg adc cmp cmpsl mov movsb or test das test sbb xor adc popa adc shlb in insl (bad) scas pop dec ud2 int3 pop in aas add lea mov xor aas inc pop add in in not dec gs rorb fisttp cs add sbb movsl idiv push fsubrp in or push mov (bad) orl inc imull in lret addr16 xor inc and adc or xchg dec dec adc icebp jno sbb cs or outsl adc mov sub in jno into or sub xchg xchg add es andb mov jp xor and lahf aas mov lea loope imul pop pop lds sub inc adc cli test sbb or scas cmp out cli addb lcall in test xor popf inc je clc out mov sbb adcb in in popa xchg xchg sbb out sub ret addl pop cwtl cmpsl stc xchg mov jnp out cmp pushf jmp add out push je mul xchg imul cmp pusha cmp dec jmp fisttp cmpsl mov push cmp fildl jle jecxz sbb fstps xor and aam std mov push pop mov pop call ljmp int adc inc fbld pop pusha out cmp enter out sub sbb cmp jge ffreep push push jns pop test cmp lret out mov or mov aas pushf mov adc cmp and cld hlt sahf sub cmp jmp inc dec outsb jg lods icebp cmc lods push and xchg sub push dec mov lock ret push dec inc mov pop mov push add mov push cmp sbb sub idiv mul mov aaa sub dec insb mov pop xor mov mov xchg aas sbb cli iret jne fistp mov cmp lcall mov push stos jns in aas mov pop push cwtl sub push add cmp and mov and xor lret dec push insl mov cmp sub dec dec and sbb jne pop jne pop mov dec inc push cltd les loope adc mov cmp pushf jmp add mov pop jo mov and stos addr16 sbb mov rcrb or loop cltd fstps jmp in (bad) (bad) adc and xor inc pop insb mov mov push cmp mov jnp pop lods jno mov jp xor add mov jg in fwait ret adc in shlb vmwrite cmp ja or add outsl xchg lcall fwait push popa ds add ja,pn push fldenv insb mov inc sub dec int3 xor inc fimull adc cwtl ret mov or xchg jnp js or mov mov push cmc lds push movsl leave sbb pop pop dec jmp dec js mov fdivp dec (bad) ja xchg pop mov mov cmp popf inc fimull cmp push (bad) repz adc loop cmpsb xchg xchg out ror sub adc mov out dec lods xchg inc pop hlt cwtl add mov xorl xor (bad) jnp dec into dec inc je adc aaa mov and arpl jo dec aaa mov repnz push (bad) sti mov jl orb cmp rcll movsb push xor fs imul in jae add test or mov mov lods aas adcl fildll pushl xchg cs jge jecxz loop xchg xchg adc pop and dec or loopne xor sub mov xlat sub stos dec push mov mov test orl jb rep xor push stos stc test ret jge aas xchg pop sar jae cwtl mov push cmp fisttp into or dec sahf das rep sub mov test lcall mov (bad) lds lcall out mov lret js inc fs add mov or outsl sub lahf xlat ljmp pop (bad) cltd (bad) mov add ljmp shrl jne dec add test push mov xlat jp mov jecxz mov add jb call cs jle les cli (bad) fnsave test pop mov popf adc mov adc enter icebp sbb out add sahf or addr16 test push xor xor pop or mov pop fldt sbb inc add les jl push out negl xchg pop xor inc dec in fs add cmpsl pop jo gs cmp popf inc mov cld sbb repz add add dec repz aam mov or push addr16 imul mov cmp mov mov add push inc popa add jbe jns stos xor js xchg jge pop xor mov test jmp or cmp fs movaps push repz imul rcrb sbb add dec lret scas out sti lahf add sahf or xchg ja ja (bad) orl cmp imul arpl push dec outsb ja mov arpl jg (bad) adc xor sub psraw movsl push je jg icebp out negl push enter pop dec lret scas out sti lahf add sahf or xchg inc adc loope orl cmp imul aam stc (bad) clc dec outsb jbe test jp inc jg (bad) adc cs jnp je jg icebp out negl outsb popa xor cmp scas out sti lahf add sahf or xchg jae jge loope orl cmp imul aam stc (bad) clc dec outsb ja and test jg (bad) adc lret daa jo cmp pop mov outsb in and mov jno out xor add (bad) push sub mull cmc cmc lcall addr16 cmpl into aaa push xchg inc nop insl ljmp ljmp cmp jnp inc jns xor cltd stc in jp std jmp aad in jne push push (bad) fdivl xchg lcall fcomip xchg loope jbe nop insb inc adcl xchg insb or inc leave jecxz cltd std (bad) and jbe test jp inc jg (bad) adc cs jnp je jg icebp out negl jbe xor cmp scas out sti lahf add sahf or xchg add jge loope orl cmp imul in stc (bad) clc dec outsb ja scas xor mov adc fsubl xchg push repnz and inc jg jo mov add orl lahf push pushf sarb js and jg (bad) adc cs jnp push stos stc fdivp xor addr16 cmp (bad) stc add add imul imul int xor push jle cs pop lds xor fdivrl sbb lods xor xor sahf push nop jge jnp mov lcall lods imul ret or or jp pop out mov push arpl clc jmp cmp in test cmpsb add pusha xlat sbb leave loopne mov add mov cld out or pusha jge pop mov mov push lock mov sbb out push xor sbb fwait xor mov fidivl in test jl icebp add psllq xchg mov push cli (bad) clc dec outsb ja data16 xor (bad) cld (bad) adc pushf or add mov addr16 push xchg ret add imul jbe aad stc in mov pop xor gs inc lret test enter rcrb cld inc loop push in in inc cmp sahf push nop bound mov les decl xor cmpsl in scas iret insl sahf leave pushf hlt daa enter add stos das sbb cli test cmp xor or push cmp pop iret outsl fldt mov out imul dec push ss and sahf push xchg push add (bad) mov pop xor dec in repnz or repz dec int adc mov mov cmp (bad) push stc lahf sbb jno sbbl subb imul lods loop add es lcall (bad) call out negl adc and sar sti xchg cmc sbb ss mov lods jno mov test insb adc lcall in test ja lcall rolb xorl nop xchg pusha xor xor sbb pop fdivrl cmc into or sbb dec adc inc jg (bad) (bad) push cmp xchg xor dec push pop icebp test mov scas pop jo xor sti in xor ror leave enter push inc movsl inc int cmp js xchg mov in popf cwtl test or xchg jnp and mov jg repnz dec add insb test movsb les pop loop nop and push clc dec in and pop dec addr16 shlb jle das cs pop and (bad) lock jmp xlat pop imul cs pop sbb pop cmp ds and mov lea push mov add cld mov imull jecxz insb mov mov bnd fistpl jns inc or popf imul mov stos cmpsl test adc negl outsl outsb mov xor shlb rcrb lods cld pushf in and mov imul shrl xor movsb addr16 test and lds pop (bad) xchg cmpsb insl or push imul cmp subl fdivr sbb dec xor fs (bad) sbb scas jno rclb pusha or push ss fnsave push inc xchg loope add loop inc pusha lret sbb adc sub dec fs pop fstpt fisttpll negl xchg inc mov dec (bad) dec inc in in cwtl (bad) jmp jb lods jno inc sti mov divl pop cld mov scas stos data16 fwait xor fisubl mov inc xchg mov cmpsb adc xor ljmp or and add cld jecxz mov xor sarb xor lds ljmp inc flds popf repz xor xor and movsl mov dec xchg sub adc push jl or push mov nop aaa push mov add shr negl sbb cmp xor sbb sub or lea repnz xor jo and out adc stc and jl sti ret cmpb inc mov mov popa mov imul jne cs fsubrs cmpsb xlat (bad) mov adc mov pop outsb or repnz into or xor rep popa cli mov mov pop and xor insl mov fistl sub inc divb jnp mov add aam arpl inc xchg xchg mov or jnp (bad) js fucomi add loopne inc or lret (bad) xor xlat sub out and fdivrs sub cmpsl pop pop (bad) inc add int out adc push add mov out idivb xlat adc cld and pop mov mov jl xchg fdiv xor loopne cld inc sti pop or pop (bad) out fstps push push (bad) xor pop loop cmp or xlat sbb xor rorb out mulb aas (bad) fimul jecxz sahf add sahf call xor (bad) and or bound loope pop cmp mov push fnstcw test adc add jle repz jp inc add add adcl sbb repnz sti lahf add sahf or xchg mov mov icebp add xor mov (bad) repnz repz inc xchg mov adc sahf (bad) das lret sbb mov push icebp cmp mov or add in xor inc xchg cmp adc or outsl adc xor clc insb pop cmc outsb add sahf outsb repz add add sub push cmp js adc insl pop subb js std inc mov jno aad clc mov or pusha aas inc test (bad) stc clc push in js jmp push add xor iret push lds gs jne sar repz dec ljmp dec lret sbb cmp clc xchg insb or rol inc jp mov xchg arpl and sbb xlat stos mov adc fisub mov mov aaa xor adc ss or arpl in xchg adc mov out icebp xchg cli add xor stos dec fcoms jnp push add jp (bad) shll andl in in xchg out add lock sbb or dec xor aad mov out cmc (bad) jg das scas pusha (bad) inc jp mov xchg pop pusha lret mov push gs in std aaa stos xor add mov gs inc shr addr16 cmp js xor add sti mov cli je mov push (bad) xchg std mov adc pop shll xchg push jbe adc arpl (bad) clc and jp int3 ret scas and cld ljmp jb loope fwait out (bad) stc adc sahf por add icebp add aas hlt into stos scas imul movb in dec popf cwtl and call mov add adc pop dec inc test cld pop icebp xchg iret adc repz fidivrl cmp add dec xchg js add icebp sub jle repz fiaddl mov sbb add adc arpl lea or lea test sbb pop jge movsb pop add xor sub xlat pop pop jg mov rorl fildll fs sbb sahf les jb xor repz fst outsl dec pop cmpsb repz addr16 scas cmp xchg jg out in jle repz inc mov rcrl jae,pn daa or sub xchg mov cmp das int cmp and cmp fisubl jp mov data16 not mov mov jge (bad) ret int3 jno,pt aas xor loope fdiv push cmp (bad) jmp cmpsl cmpsl roll loop mov and jg (bad) adc shrl jp ds fdivrs je add icebp sbb add scas out sti lahf add sahf or xchg mov sub psllq mov (bad) push dec outsb ja mov pusha js jg (bad) fcomp mov mov fisubl sbb orl subb imul out (bad) xor sbb pop loope jno dec in mov pop xchg pushf cmc clc pop arpl add cltd pop lahf inc xchg pusha cmp mov cmpsb bswap sbb jns mov cmc clc pop arpl add sbb mov (bad) inc xchg not adc cltd mov cmc cli out addr16 stc sub fsubs push adc in not pop inc cwtl mov push fisttp jg ljmp mov aam in not mov jnp cmpsl mov hlt std mov hlt xlat xor pop shlb xchg push aad in rcrb sbb in add ficompl adc (bad) xchg das jmp jns inc xchg loopne adc add fstps scas xor and out sbb xchg addr16 ret lcall adc pop loope dec in not mov das insb in jno add outsb xchg mov pop into sahf pop aaa fadd cmc mov sub xor and dec inc cmp and sub pop outsb stos lock mov jmp xchg and adc jecxz mov hlt std xchg jge xor inc (bad) xor pop aam push stc leave dec ds cmp adc jecxz mov hlt std inc pushf xchg cwtl (bad) xor pop shll cs cmp sbb xor mov test (bad) addr16 movsl pop stc leave dec cs cmp add and call dec pop into addr16 cmpsl pop stc mov cmpsl sub fs in add ficompl adc pop mov cli out std or pusha inc push adc aaa xchg pushf shlb add xlat jge adc mov jge rclb negb (bad) add out mov jo cmp xchg mov pop into jmp stos test sbb or xor and dec inc cmp and (bad) lea dec ret popa daa mov jmp movsb cmp adc jecxz mov iret jae lods cmp je jg icebp out negl pushf mov mov cmp sub xchg in add loopne ds sarb sub repz mov inc popa addl dec xchg sub inc xor pop mov out xchg cwtl lds mov inc (bad) mov out cli cwtl xor sbbl add (bad) xor ljmp ret popf lods cld lds xchg out jno and xchg dec sub lcall mov stos (bad) cmp sub addr16 sbb mov (bad) cmc add inc or fstps hlt jo mov int daa add daa mov inc mov add iret and fcmovnbe mov pop pop jecxz jmp mov addr16 and and fcompl ja in xchg jp notl mov fstpt imul pushf (bad) xor sbb adc daa sub push dec jbe clc ret addb cltd jg addr16 repnz jle mov mov aam test cmp inc and aas add mov mov out cmc xor or fist and sti cli pop sahf das mov stos (bad) (bad) notb (bad) fiaddl scas das adc add mov mov mov ds dec insl aaa adc sub xlat jg sub ret into adc cmpsb pushf stos out mov iret arpl add hlt pop add lret or adc add mov or adc mov xor leave cmp xor inc push sbb sub sub negl enter mov pop ljmp negl test pop ror dec jle push cmp pop sarl or mov in mov fsts movsl scas cmc add add mov mov inc out and xchg cmp and xor notb imulb je aam divl imul clc jno inc add pop xchg fisubrl dec mov push int3 pop (bad) sti or ja cmp jb mov (bad) stc loop adc mov mov and sbb push pop iret and (bad) mov dec push aam dec or in jp imul cmp add push dec lods jle mov push push out negl xchg jae or adc mov xchg not and fwait add push repz imul out and and mov (bad) sub test mov sbb pop sbbl icebp daa inc push pusha pop fisub inc bound out mov xchg inc mov xchg xor ret or xchg fs rol dec xor call inc dec add jmp dec pop cmp xor adc aad stos mov loop add or icebp push in add lcall inc arpl (bad) out icebp xchg add inc dec repz fs inc add push cmp push je addl icebp sbb dec (bad) mov dec xchg jno popa pop std adc inc inc int leave rorl ljmp mov mov insl pushf loop lahf das loope aas cmp loop loopne aaa lock pop insl aas and jecxz enter sub sbb cmpb faddl cmp subl dec cmp es fmuls jmp cs mov xor dec and (bad) or loope xor roll or inc dec cmp or add jmp movsb (bad) divl dec test ret lea into inc std mov jle and in mov add in lret loopne xor in aad mov jae clc inc movsb and push and jl inc and xor fiadd jl pop fcomip out repz xor pop cs cmp add inc inc out xchg mov lret scas jmp addl sahf or test pop (bad) adc cmc into or and jg (bad) (bad) dec ds push sbb imul movsl out les jg push add pop lea (bad) cmc clc cmp inc add mov cmp and cmc mov in xor fnstcw add sahf (bad) hlt inc aad sti lahf add popa jns gs int3 sahf xor scas sub in cmp sahf inc inc aas fnstsw cltd ret in icebp fmuls aas (bad) xor dec sub pop xlat sbb pop dec loop sub mov fsubrp add push push push ja imul sub push lock cwtl icebp xor mov lea adc (bad) cli repnz imul cwtl jle cld xor xchg mov inc dec or dec cmpsb cmp or mov cmp repnz fdiv cmpl ja sbb and xor sbb rcrb repnz daa (bad) xor leave push cmpsl dec xchg movsw pop cli in in mov xor lret clc add push mov mov jp or inc jnp inc add enter xor xor adc xchg dec push sbb repz loopne dec jns xchg mov ljmp hlt ret js add repnz repz imul cli mov test movsl cmp cpuid add outsb jb lods sub mov iret fnsave sbb enter pop cltd (bad) xchg shll push mov xchg imull and bound loopne add push add dec xacquire sbb movsl sbb mov and repz repz push in lret (bad) adc sbb jg and mov jbe ret sbb mov repz push es lds push movsl cmp call iret mov out in xchg cs scas mov stc mov sbb div mov lock out mov imull mov adc mov loope jnp cli movsb or dec testb ss negl es in add mov xchg decb test jecxz push mov int3 adc pop aad mov pop stc leave jae int3 cmp mov inc lcall jb subl jne int push cmc loop cmpsb or sti push jnp push sub add outsb jbe mov mov (bad) pop push int adc je add icebp out negl or inc push sub cmpsb or adc les mov and mov orl pop xor subb imul mov ds or (bad) repz sub (bad) add outsl jns movsl cmp je (bad) jl fst sub daa and mov inc xchg loope enter pop pushf sbb add mov sbbb mov pop stc icebp lods cmp cmp add stos int mov sub movsl mov fldl jb call and xor inc xor mov out or test mov adc cwtl (bad) pop test test pop aad ret add pop test cld pop push out jmp xor pushf and out push push dec sub enter or imul leave mov loope stc jns or cld adc xor push dec iret scas push and pusha mov dec lahf mov mov or adc xchg mov clc mov and sbb mov aas add and mov mov pop xor scas adc stc add dec push cmc popf or push dec pop mov cld pop push xchg fs mov test je mov push mov movsl cwtl add mov mov repnz clc mov (bad) add (bad) mov jmp stos ficoml sti es mov (bad) or xchg imull cmp lods shlb mov adc adc (bad) sti jg (bad) in add pop sbb addr16 dec mov inc sbb movsb dec mov push jno mov outsl dec pop ljmp and push pop cmp loope sti jle and jbe jns inc ljmp lcall push les adc adc out mov inc clc and loope dec lods negb dec push out pop add push sahf adc lahf hlt xor das push loop roll mov mov xor or push mov add add sbb (bad) mov movsl adc movsl pop dec scas lcall (bad) jmp jmp mov in mov mov dec sti and or es shrl jmp sub jae icebp push in sbb or mov (bad) jae xor adc xchg sub insb push icebp or mov jne mov test or sbb fucomip add jo jns xchg mov add push adc add repnz hlt cmc int imul pusha lcall mov insb aaa (bad) enter fldt clc xchg lret loop jge in adc fs loop out aad jb xor sub movsb lahf in movsl add and jge inc outsb mov mov pop rolb push mov repz fs adc pop dec mov mov mov mov imul jae add stos sti or inc in pop test jle dec movb daa (bad) iret dec lahf push push popl mov add jnp and adc or xchg dec push pop push xchg (bad) cs out hlt in scas push xlat xlat mov stos lret jecxz bound and (bad) push data16 add icebp out icebp lcall cmp cmp pusha fucomp pop mov popf adc and test fwait add jecxz dec cmp repz sub add rcr push jmp sub xor jae cld addr16 mov movsb adc or xchg jae sub adc mov jp or (bad) dec jnp inc add enter leave cmpsl repz sub scas clc and fmull mov inc sti jne mov push jno inc popf popf stos dec sub jb jns loopne pop push lods or add in or fmul push sub xchg jnp inc push and sub cmp sub cmp (bad) cmp leave xorl xchg or ret popf push addl fcomip scas mov or pop int js add icebp xchg lds add jle xrelease mov adc xchg add jle repz jne mov icebp in cmc cwtl add sahf or mov dec repnz les add jle repz jne scas push iret scas mov mov dec lahf mov sub imul imul divl dec outsb in loop lods dec dec or shlb inc fstpl fucomp add sahf or jle out pop jle icebp enter push test sahf sub out mov or adcl cmp cli sbb jl mov and shr and jbe ljmp faddl outsb add mov pop jne xor test sbb xor xor ljmp mov imull (bad) mov pusha loopne out add imul aam iret out mov sahf push adc sub insb push icebp or sub or imul (bad) xor adc jne leave jg enter inc xor jbe add inc adc xor scas mov mov (bad) xor mov addl (bad) xchg jne cmpsb jl lret or pop int3 ja mov adc jnp rorl into cwtl add mov enter aam dec xor sub cmp popf fisttpll insb dec leave insl xchg mov rcll das in pop push xlat sbb jg and pop mov pusha mov data16 add icebp out icebp lcall cmp cmp frstor mov adc push lcall inc xchg jecxz dec cmp repz sub add xchg pusha nop sbb xchg std dec les push mov (bad) movsl jb icebp sub insb stos xor js mull cmpsl pop lds xor mov jp push jecxz adc fcompl pop (bad) cs jecxz push sahf xor mov pop outsb push push sub int outsl push lds lret or movsl sub mov push lret sbb add mov fs sarl mov lret or movsl inc fmuls mov push addl fcomip scas fildl xor in sub push icebp adc xchg add jle xrelease mov mov pop icebp repz inc jns add icebp pop shr add lahf or mov jle repnz ds or inc xrelease mov jmp sahf add mov fdivrs jg icebp pop shr add push jb lods sub mov iret pop and (bad) add (bad) cmp icebp or cltd (bad) mov push mov xchg imull and bound and add loope xchg sbb mov push pop jg and movnti cmp stos ss jmp sub outsb jge jmp decl (bad) (bad) push cmpsl cmp xorl jmp push test lcall scas mov mov (bad) push rclb lods or sbb cld in or fmul jg cmc xchg and jp cs icebp movsl clc xor scas cs jp sub cmc push cs inc popa sub sahf and test dec fmulp mov dec jp data16 stos cmc clc and pop add mov jo cld test xlat js inc and push aad dec rcrl lret xchg add or test repnz fcmovu sub repz and subl lret and (bad) rcr inc mov in jle push cld adcl push stc mov or fs lcall sahf enter cs mov iret push pop imul stc cs int je mov (bad) stc mov int and xlat pop add mov cmc out sti inc mov sub lds mov inc out sub adc mov imul std aas mov aaa inc mov cmpsb stos add jge adcl pop ljmp (bad) iret or jp insb loopne icebp sbb sarb mov xor adc fidivl clc and lods cmp mov add scas (bad) and mov ret dec push adc lret xchg sahf cli data16 cmp subl fsubr outsb (bad) mov in in xchg sub adc out mov into push fs sbb (bad) fxch out pop inc and sub dec into sub sub into cwtl add inc sbb cmpsl jno add stc sbb imul jge loopne and push xor (bad) cmpsb mov pop xor dec aad add mov add add mov enter into dec sti scas clc xor icebp or je rol and mov (bad) pop dec pushl and xlat loope xchg fsubr add mov test and sbb out add push adc add add jae cli enter (bad) jns hlt or xrelease mov add push cmc mov addr16 add repnz cmc sti aad imul jmp push cwtl add addl fwait inc popa xor and stos cmp mov mov sbb dec add test mov mov sub or lahf pop or sub lods (bad) out insl push les arpl clc mov repz and sahf or pop or (bad) jno xchg lock clc fstpt lret push sub cld enter ficompl pushl out ljmp sub gs mov popf (bad) xor mov stos jmp add jne (bad) dec loopne jle rcrl enter jmp adc mov mov lahf and mov adc push add dec ret jns aam loop cld fmull adc rorb dec xor and cmpsb in mov std fsubrl mov clc daa mov sbb cmpsb mov aam sti push sub mov xor movsl std loopne jle lock cld addr16 fstpl mov jl pop add mov int3 jbe ljmp xlat jg lret push adcl test or sub sub xchg xor adc sbb sbb fdivr mov sbb mov pop imul dec iret cs out or xor mov adc js push loopne add inc insl scas mov hlt cmp adc (bad) bswap xor push clc fbstp mov adc ror repz xor and cmpsb in mov repz cmp test push stos sti push mov insb cld jp sub add (bad) (bad) jge mov rcr xchg and mov repz sahf or xchg (bad) repz xchg add dec jne mov lret scas out stc sahf add sahf or adc jne mov orl cmp sub or xchg fiadd jbe test jp inc jg (bad) adc ds fdivrs je add icebp sbb roll sub scas out sti lahf add sahf or xchg push je (bad) orl cmp sub or xchg fiadd jbe test mov jp lcall jnp je add icebp (bad) pop sub sub scas out sti lahf add sahf or xchg aaa add (bad) orl cmp sub or xchg fiadd ja mov arpl jg (bad) adc xor lock push push out negl mov int lahf or icebp add push repz imul ljmp xor inc jg (bad) adc ds fdivrs push out negl fwait movsl xchg mov lret scas out sti lahf add sahf or xchg mov popf je (bad) orl cmp imul ljmp xor inc jg (bad) adc ds fdivrs je jg icebp out negl push loopne sbb pop dec lret scas out stc sahf add sahf or test push rcrl cmp imul test (bad) push dec outsb jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl pop in sbb pop dec lret scas out sti lahf add sahf or xchg jbe je (bad) orl cmp sub or xchg fiadd jbe test jp inc jg (bad) adc cmp std fdivrs je add icebp sbb icebp dec mov add lods in loope add sahf or xchg jbe popf insb (bad) adc sub outsb jbe test jp inc jg (bad) adc xor cltd xchg ds fdivrs push out negl cmpsl stos sbb lahf or icebp add adc subb imul stc mov mov sbb mov negl pop in and push pop dec lds xor jnp (bad) in xor and jg (bad) adc ds fdivrs push out negl cmpsl scas and lahf or icebp add adc subb imul sbbl xor inc jg (bad) adc ds fdivrs je jg icebp out negl xor dec lret scas out sti lahf add sahf or xchg sub orl cmp sub or xchg fiadd ja mov arpl jg (bad) adc cli xchg loopne psraw movsl push je jg icebp out negl jns and push pop dec lds xor jnp lret es add outsb jbe test jp inc jg (bad) adc xor test ds fdivrs je jg icebp out negl cmp and push pop dec lret scas jmp addl sahf or test pop in test outsb mov aaa sub js decl (bad) (bad) sbb sbb mov dec repnz and pop or mov mov push mov mov fnstcw neg adc test pop dec in xchg mov nop pop das xor mov jns inc dec cmp or add cmpsl mov pop adc or add push jae add mov out icebp cld cld cmp data16 mov lret scas out stc sahf add sahf or test push rcrl je jns stc aad imul cmp lret fdivrl sbb leave (bad) cmp sbb mov jbe cwtl and movsb gs mov mov int3 lods fimull jg gs mov repnz (bad) xor mov mov out std lcall pop cmp mov test or or (bad) mov mov mov jg mov mov sti mov jnp inc cwtl mov adc mov lret fadds mov push cmp or mov mov push lock mov dec mov lcall jns mov xchg lahf inc mov or push cld fs mov add mov or mov dec mov aad mov jge sarl mov cli sahf hlt aas xchg push cli mov out mov and lret jg push xchg lock icebp leave repnz sbb cld add out addr16 or fmull outsb adc jmp add mov jmp mov ret jns sbb mov lods sbb dec and sub ds jp call mov xchg mov fbld cmp mov mov lock fidiv repz outsl and mov fucom mull stos fs sub xchg pop or cmp push or daa repnz lds add aaa mov or add dec adc fidivrl mov (bad) sub cs out iret sub sbb cmc lret incl push pop loopne movsb add fisttpll test test xchg push cmp loope mov addr16 lds lahf icebp adc pop mov xor add jnp pop lods jno push daa mov sbb popf add push mov mov lds dec jno cli mov mov test xchg mov jbe mov cmp stc add clc lock hlt xlat repz push pop insb in add mov add insl addr16 jns inc jnp cmp cmpl xor lock int mov xor popa add add xlat or ret (bad) icebp sub sbb int inc pop sbb mov cmp sahf push dec and pop lret lretw arpl in into pop call xchg lock fdivs jns pusha negb cmp mov mov bound fs fcomp test xchg jmp int3 jns dec jl push jecxz push pop jbe or xchg sbb and dec push jmp cmp lods pushf ficom sbb adc in add add lcall xchg push jne mov xorl mov inc icebp pop jne mov push adc fimul clc adc loope mov push dec mov push mov cmp jnp out enter fisttpll in add inc pop lcall lods sbb in and fdivr xchg pop pop shr data16 enter jecxz and lret fwait stc ret inc (bad) lcall int3 adc call or jmp sti jg cmp les js push cmc lret cmp das outsb mov mov xlat outsl push popa idivb dec imul js es xchg sbb ds das cltd cmc xor pop orl dec xchg sbb clc pop mov or xchg (bad) gs dec push adc cli xor push dec cli subl leave sbb adc add (bad) xor pop repnz scas stc leave sbb out rcrl enter sub imul and sbb cmp sahf xor dec jns cs jnp lock adc jle jl cli ljmp mov stos pushf jecxz pop cmp stos dec cmpsl rolb addr16 adc es daa xchg cmc push xchg es enter clc and cmc repnz scas push xorl xor add scas (bad) std jnp mov aad leave or or cmpsl outsb sbb aam fwait inc (bad) je nop cli mov stos movsb lret shlb enter jo jne in movsb mov nop jns mov ror and pop pop jns outsl sub add cmp xchg push icebp mov jecxz (bad) lods out cs (bad) ljmp ljmp add xor xchg divl cld imul loop clc lahf imul add cmc imul lcall inc jg adc xor (bad) in loopne cmp add in jp insb cmp ljmp movsb add mov pop dec or xor faddl in test ret (bad) icebp sub gs xchg aad sub xor pop addr16 mov scas lds fistp clc pushf fstl fidivr not pusha and ret cmc loopne xor lret adc push gs in add sbb push addr16 inc add mov arpl psubq cmp lea pop xchg cli addr16 les sahf je imul mov cmpb pushl (bad) mov dec stc mov dec sti xchg inc pop jae and pop in test lock out ljmp lea xchg arpl dec lcall xchg imul inc mov sub push pop insb in add mov add jbe int add push or mov clc lock cmp je mov aaa ja int gs clc aaa xor xchg sbb jb sub mov jnp insb (bad) xor push jmp inc jg adc loope outsb test jl mov icebp cmp (bad) in push push cli les xchg movsb dec adc and jns push test not cmp mov cli popa adc int3 repz push insl push in pop popf sbb leave cmp mov sub pop cmp js daa fnsave test ret fdivrs add inc adc shrb adc outsb test not push sub cmc in xor cmp (bad) mulb inc mov sub fs mov pop mov mov sub push jge push cmp not push sub cmc in inc push jb jne test push pop addr16 and add mov jp js hlt pop mov loopne cltd (bad) loop jge push jg cwtl add sahf adc inc add sbb mov (bad) repnz lcall lock jae push shrl lret mov hlt mov sbb loop cmpsb dec lock ss pop out push and in rorl cmp loop jge popf cld nop mov xor jno out addl hlt pop pop bound movsb sub and in sti lcall aas adc pop mov and jle call sbb xor mov ffree cs add mov push ja (bad) jmp add ret es (bad) inc clc in xchg cmp scas inc pop (bad) jle xchg and dec daa scas stc leave sbb out jae jnp popa bound in and xchg outsl mov or add mov decb push repz movsl push cmp andl repz les scas test mov jnp sub push (bad) in cmc cwtl add sahf push repz jbe cli hlt or repnz push je add icebp sbb xor sub mov xor scas add (bad) rcl lods or cmp imul xchg push push dec outsb jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl pop push and push pop dec les xor scas add lods or cmp imul out xchg clc (bad) push dec outsb jne mov insl js jg (bad) adc xchg and sub scas out sti lahf add sahf or xchg mov (bad) orl cmp imul fstpl outsb jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl adc dec lret scas out sti lahf add sahf or xchg mov (bad) orl cmp imul xchg popf clc (bad) push push outsb mov xchg sarl or into push negl xchg dec adc fcomip enter cmp sbb push adc sbb mov out cwtl sbb dec cmp repz sub mov push add or loope outsb mov lods push (bad) sbb rcrb je sbb in add test inc pop dec jno and dec repz fcoms push and adc jp or popl jp add enter or movsb inc sti inc mov cltd cmp mov pop cmp (bad) cmc dec sbb adc add ljmp lcall stc xor jbe mov decl add jbe or or stc push scas add inc fildl sar xchg add sbb ficompl (bad) sub push push cmpsb popf ret bound xchg jnp (bad) scas or dec testb (bad) mov negl or push jp xchg mov jbe pop dec xchg rcll or push test cmp dec inc xchg jne sub inc sbb adc adc inc sbb or jecxz inc (bad) or test pop sub outsb subl mov lock push add sub cltd fstpt inc or mov sbb clc sarl fwait (bad) lret add inc sub fisttpl pop idivl cld lahf sahf cmpsb hlt and in and repz loope pop lahf test or mov adc cmpsb push jo insb cmp dec sbb imul push inc sahf inc sbb add push call push push sbb ljmp adc or xor in or (bad) lds repnz dec push into or adc add push lock not xor pop loop sar fsubp in loop xor jae int aaa pop mov or jmp xor push hlt sub aad sbb push mov in jl jmp lock dec fwait sbb jl jb xchg lock add sub (bad) jae lret inc add cs jns lcall xor loope dec in pusha insb in fnstsw adc aas add adc arpl das ljmp jmp jbe inc test mov add mov enter or mov pushf fisttpl ds inc scas aaa dec loope dec cmp jge decl sub add loop inc mov pop xor scas mov stos xchg pop popf sbb mov dec in add iret (bad) xor xor scas mov mov out inc mov in ljmp add add dec js mov jne repnz subl dec inc cmp lock dec fwait xor aam pusha popa inc add fsubp ficomp cs enter add ret lds dec fs out push cmp add aam out push add mov mov xchg push add cmp jmp adc fsubrs add xchg jl or inc popf xchg mov or mov cmp imul sbb or ja hlt out sbb icebp test (bad) sub jbe sub push mov adc sbb inc negb les (bad) je cli aaa mov jb insl add inc sbb adc mov out mov (bad) adc jmp push mov or jne in (bad) pop in and fcmovnb add in icebp inc mov leave jnp bound sbb out lret inc inc pop call rol mov out sbb (bad) notl gs out add imulb (bad) fiadd cli adc jle in out dec push rcr cmp or fcmove in push add sub mov add jne xor adc and sar loope xor add fisub push inc add fidivr stos sbb xchg pop test jg xor cwtl add outsb jb cmpsl sub imul and inc dec aad out sbb das inc fwait and pop pop push pushf test ds mov movsl das rcll cmp pop inc jae xchg shrl js decl icebp test loopne jg push hlt and add push sbb repz xor add jle repz xchg roll mov divl dec sub cmp xlat mov dec dec in xchg cmc (bad) fcomps testb call xchg addr16 or add xor adc das mov ret loop add xchg mov out inc imulb pusha out cmp enter add push add pop dec into stos cli and jle mov adc and xor out pusha adc sar insb jecxz outsb int3 loopne aas test gs sar leave add lods and adc adc stos stc jns jl pop mov jne,pn pop inc mov push mov leave loopne jnp ja enter divl adc outsl cmp lods ds gs sub xor jl movsl mov (bad) mov idiv call test inc std ljmp inc inc dec xor scas mov mov sarl jg adc mov (bad) int sbb xchg sub sbb inc xchg popa in test int3 stc push inc dec jb dec iret ret cmp cmp jge or sbb xor dec daa gs jmp adc xchg or adc pop dec mov je (bad) (bad) clc jbe cmpb jge lret stos xchg cs jecxz enter inc fwait xor lods sbb mov int3 stos addl es adc xchg inc push mov pusha sbb mov mov and jg (bad) adc ds fdivrs je jg icebp out negl jno and push pop dec lret scas out sti lahf add sahf or xchg ljmp push sub sub or push punpckhbw repz push push out negl arpl jns mov xor jnp sub dec in xor sbb jg (bad) adc xor pop psraw movsl push push out negl js (bad) jb mov lret scas out stc sahf add sahf or adc cmc sarl movaps sub or xchg fiadd jbe test mov (bad) stc sub mov sbb mov negl pop and jns mov xor scas lods xor or cmp imul jg clc (bad) push dec outsb jbe test jp inc jg (bad) adc ds fdivrs push out negl cmpsl inc bnd or icebp add adc subb imul stc mov mov sbb mov negl pop sub jns lods icebp cmp add jle mov cli push aam pop sbb add xchg fldl2t fcmovne pop subl inc inc push int sbb inc cmc clc lret mov jl repz mov sub hlt mov (bad) ja pop push xchg fsubr or (bad) xchg repz ds add pop repz xor add mov jl lcall testl les fsubl sbb das fisub mov and mov je lahf push xor in addb mov jmp mul push dec add insl stos push mov xor popf out inc mov fimul adc sub mov xor outsb mov cli adc xor xchg pop imul or fadds mov mov cmp into xor mov push inc and sub dec int3 xor mov sbb cmp mov enter (bad) in mov or and pop mov jne fnsave repnz in inc cmpsl ja add sbb outsl xor or shrb mov shl or add sti imul out aam xchg call inc xor (bad) aaa nop jmp test adc nopl or jg push xchg mov mov add xlat cltd out cmp inc push lds xor insb push fidivl mov xlat mov adc adc jp lea outsb mov push add xchg jne dec xor repnz jne xchg stos ljmp xor and das pop js sub mov push mov or sbb or outsb dec out mov in push cmp mov cltd dec das pop shr xor or mov test xor sub push in cmp fimul icebp or dec sahf push repz div xchg push add dec int sub test aam or sub mulb lock leave repz push js jle repnz test and jnp inc add add popa (bad) hlt ret js add repnz repz imul sarb xchg fiadd jbe test mov (bad) push daa mov mov push je add icebp out negl fdivrl shll lea js sbb push imul repz pop xor mov or out xor add cmc test sahf jle ljmp cmp fwait cmc cmp sahf inc add or pop adc cmp pusha sbb mov in push xor dec mov xor and adc push xor pusha inc push adc xor call fnstcw sub ss xlat cli mov cmp mov jle jecxz xchg jbe nop mov cltd adc lock adc inc pop xor pop xchg shrl and add (bad) or inc jg imul mov sbb or cs jnp inc pusha aas out in or loop sub jg pop push mov dec movsl fwait cmp imul or out icebp add test mov sub adc cs movsl jmp outsb xlat add ds aam fwait mov ss (bad) movsb cwtl mov xor loop push adc cmp sub push xor es dec int3 xor mov negl cmp mov enter jge call xor cmp xchg add pop loope cmp mov ja xchg ljmp dec fsubl out enter jmp cmp scas sub out popa jns dec aaa mov rcl mov push xor (bad) mov sbb jb test icebp or pusha js add outsl js and mov cmp add hlt jg cmc daa add sub dec cmc test xchg mov jl in lock adc mov (bad) cld dec inc in lea sarb and inc or push cmc rclb imul call add cli loop psubusb mov cmp push (bad) stc sub scas jnp mov ljmp fnstcw sbb ja stc test adc mov xchg and js inc cmpsb cld pop mov lret daa mov stc sub daa jnp cmp ret push xor mov aam push daa fldt test imul xor (bad) int and mul outsl loop inc mov insb pop or insl dec insb jbe dec mov jmp hlt cli jmp push mov cmp mov push pop mov aam into mov popf rcrb jno popl sbb movsb add in in xor xlat mov ss incb cmp jge adc add loop popf cmpsl dec call es xchg xchg xor jne mov lcall sbb mov push xor popf jmp mov cld mov or jbe addl add in in pusha sub push adc adc clc sbb packuswb sti xor scas (bad) and xchg dec jb scas xor mov jae xchg lahf clc gs cmp subl fsubr data16 jno dec mov adc sub and xor aam dec daa or (bad) std ret and ds ljmp icebp mov incl jmp loopne shrb icebp in cmc cwtl add outsb jbe test jp inc jg (bad) adc js rcll push je jg icebp out negl pop and sbb pop dec lret scas out sti lahf add sahf or xchg mul je (bad) orl cmp imul arpl je mov jg (bad) aad adc ljmp shr xchg test fwait cs jnp push out negl fldt jge fs inc lea mov xor imul push fucomip add sahf or test popa lods mov xor das jmp (bad) mov pop fcomip add cmp jecxz mov iret lea jl int3 lret add mov adcl roll sbb mov pushl add or jns jle repnz mov add add or xchg pop lods repz or jg icebp adc mov repz inc outsb mov (bad) jae add icebp push (bad) or aad sbb sbb and jnp or leave decl lcall pop (bad) mov pop dec adc dec mov lods adc in xor lret insl add stc es fdivrl jb or iret addl cmpsl sti sti mov mov adc inc loop mov nop cmp mov ror mov lds stos out xchg xor repz icebp sbb mov xor idiv xchg (bad) popl mov xor hlt sbb add popf repnz lods mov xor scas mov lods pushf (bad) in icebp ss sbb push mov loop icebp mov iret mov push pop cmp dec outsl push dec fsubl sbb xor sahf jecxz pusha inc push adc or adc cmp add xlat roll adc pop and mov lods addr16 sbb push stos outsl pop mov hlt cmp xor scas mov lods xchg call xor sarl dec inc or push jp cwtl clc push aas jmp sbb and int loope pop jmp out xor or inc jo data16 push call sub xchg cld mov stc or arpl les cld repnz fdiv mov insl push add lods sbb jmp std add int enter add mov add adc subb imul and in xchg fiadd ja add in inc jg (bad) adc fsubl xchg cmp dec into (bad) mov adc xor out aas cmc mov or add sbb pusha jbe adc in sub test lret xchg cmp inc push out lods dec js fwait adc inc je out xor stos aaa insb xchg push inc hlt inc (bad) ljmp jae outsl ret jnp jmp mov sbb push imul ljmp dec ret inc cmpb xlat xlat mov jp fnstenv xchg xchg icebp test data16 jne xlat mov (bad) stc and sbb mov negl lea adc pop dec lret scas out sti lahf add sahf or xchg (bad) dec jp loope orl cs imul imul pop sub dec jp add cmp je mov jg (bad) adc push xchg lods popa inc mov cli clc movsl fsubp add je lcall icebp adc sbb mov test jmp (bad) inc and xor sbb inc jnp inc jno sub sub and fs mov add inc pop jnp inc cmp mov aam rolb fs mov or jmp sub fnsave pop inc sub insl mov or push xor or and mov cltd lahf pop shr cld (bad) cmpsb loop add and mov push in mov fwait cs mov mov or lds pop jle adc fwait std (bad) or divb or negl out mov adc and xorb pushf (bad) stc insl insl stc outsb mov inc jge or in sbb dec jecxz call daa sub int xchg xchg jge rcrl lahf adc pop dec out call adc xchg inc sbb inc outsb sub push out loopne add test imul aas inc add push mov adc (bad) jcxz dec cmp stos in les cmc out mov jle lods jle push jb adcl jmp push and jle aas mov mov xor xor pushf adc addr16 xor xor (bad) in mov xchg jb (bad) jge rcrb insb mov add lcall xchg jmp mov btc pop test or je,pn mov mov loope popa xor xor cmc movsl adc call fisubl mov icebp (bad) mov pop (bad) fild das push cmp dec add sub inc pop loopne pop mov mov jge pop insl mov sbb pop push imul stos pop je out scas loope aas cmp dec out mov mov out mov xchg mov push inc pusha jecxz jle lods jge jae pop je (bad) mov mov mov imul sbb cmp inc rolb add fmuls cmp (bad) mov je out mov mov pop xchg cmp ss xlat cli pop mov inc inc mov dec arpl inc hlt xchg enter mov setge cmp jbe test mov jp jp cmp bound mov negl cmpsl in mov or icebp add adc subb imul and and punpckhbw repz push push out negl (bad) pushf push mov or icebp add adc subb imul stc or (bad) pop insb sub loope movsl push push out negl js sub cmc cwtl dec jns lds adc pop dec les xor addr16 xchg jge jno cli rclb sti ret cmpb and repz push push out negl (bad) fs dec mov add jbe cmp imul push fucomip add sahf or test popa cmp push rdtsc andl jmp lock inc xchg pop fcomip add adc subb imul cmp sarb cmpb ror (bad) icebp xor xor cs bound aam mov (bad) cmpsb push fldenv and int sub popf push call inc and andb pop test out outsl (bad) mov xchg leave das in into lcall xor (bad) jg inc int3 inc cwtl cmp in in push xor lahf adc les imul push out (bad) icebp inc jmp repnz xchg rcll xchg xor cltd js sub mov movsb cmc mov jecxz mov cli arpl out pop push push mov mov adc in dec fildl pusha ret dec nop cmp out lods repnz jne lock ss mov mov sbb sbb or in imul fs or add insl dec pop jo insb mov jbe out (bad) lods loopne mov xchg dec push (bad) mov fcoms pop sbb lock sbb or mov fcmovnbe jl sti fdivr cmpl push insb mov jne jb dec jmp sub je,pn mov jbe jb fwait push push mov mov adc add js jmp adc fsubrl mov xor test sbb mov sti push xchg inc sbb imul and cmpl dec sbb add adc mov fwait or jno jae jno and inc xor dec xor cmpsl sub mov inc imul add mov cld cmc stc pop dec nop jl push xchg adc je jae add pop jl mov push movsl sbb lret cltd in ss sub cld push lock inc xchg mov out int loopne cmpsl sub (bad) push or cwtl add sahf or mov jge repz xchg add mov push je jg icebp out negl adc sbb pop dec les xor pop fnstsw stos rcl lods or cmp imul adc clc (bad) push dec outsb jbe test jp inc jg (bad) adc ds fdivrs push out negl or cs fsubrs aaa sub (bad) mov cltd nop fdivrl lret clc add inc (bad) adc (bad) mov divl jecxz xchg loop cld nop add pop push or mov cmp add push mov add icebp out icebp lcall lret add mov jmp pop clc or mov pusha sbb and cli (bad) das sahf add push ret fstpt int cmpsb cmpsl sbb xor stos pusha adc idiv test add stc gs mov loope push dec push dec dec sti aad out jg loopne out add adc mov mov (bad) stc adc sahf adc daa lods mov stos or aaa sub lods pop imul fimul push mov addr16 cltd aad (bad) out xchg mov cld imul mov inc xor sub jg repz or mov mov stc jno pop leave sub fisubl or adc push in mov ljmp xchg clc leave mov mov mov pop sbb jns movsl sub inc mov or adc cmpsl test sub (bad) into or sub test xor add outsb jb cmc rorb (bad) jp adc in mov pop sbb jecxz inc and jbe js adcl repz mov lcallw dec cmp and test js or add (bad) lcall repz add repz lret int xor sub fisttpl inc loop ja cwtl push xchg insb and popa inc add jns in data16 loope xchg xchg and xchg sub in (bad) jp push scas aas adc ljmp shll sub (bad) (bad) std andl adc fstpl rclb dec outsl out je nop popf mul add call jno xorl loop jno jp jb out sub sub stc sbb push mov out mov (bad) in add pop add mov hlt (bad) stos push lods sbb cmp sti fcmovnu add mov xor or loopne jmp bound pop xchg out push add icebp sbb imul orb or adc xor lret out sahf dec adc int push outsb mov add stos jns adcl cmpl cs dec cwtl hlt fimull sbb and mov notb cmp and fsubp mov sbb (bad) or fisttpll pop jae add andl aad rorl stos arpl aaa sbb sti loopne mov xchg rol mov loop mov and adc push jg mov div fstl push lds jg imul mov lea inc pushf or xchg movsl mov xor xor add (bad) mov or xchg jnp inc inc mov in jmp jae cmp jg std adc loopne pop jecxz push xchg mov jecxz sbb inc and push imul add push test pop mov arpl imul test aas sbb dec adc bound (bad) mov pop inc int3 outsl inc div out movsb push movsb add scas loopne stc call xchg push movl mov inc clc ret loope cmpsb lods rorl xor xor add add mov enter sbb sti xchg cmc inc mov push push sbb cmp lcall xor bndstx sbb inc add add sub mov icebp in cmc cwtl add sahf or xchg sbb add dec jne mov lret scas out sti lahf add sahf or xchg jecxz sti je (bad) orl cmp fs aaa cs outsb jbe test mov (bad) sub mov mov sbb mov negl jns and push pop dec les xor addr16 xchg movl xor sub jns stc and and bound leave (bad) add imul iret js mov ja add xor inc pushf inc and cli call fwait push sbb outsb sbb mov aas dec enter icebp sbb out add sahf or addr16 test imul jl adc inc movsb xchg lret mov inc ss add sbb push jge pop sbb inc add in inc mov pop push mov lock cs dec dec in das xchg cld cld popa outsb sbb insl mov ret or (bad) or or rol dec xor call jnp add insl dec idivl sbb jae iret inc call or ljmp cmp inc dec repz fs mov lret scas out stc sahf add sahf or adc mov mov orl cmp sub or xchg fiadd jbe test mov jp push cmp bound mov negl cmpsl pop rcll add psllq mov (bad) push dec outsb jbe test jp inc jg (bad) adc ds fdivrs push out negl outsl jmp push mov lret scas out sti lahf add sahf or xchg out add sub repz imul inc xor mov pop jl and or dec testb mov sbb test inc xchg out push out leave std or fidivrl and cs scas popf lods arpl cmpsl clc add jg mov xchg popf aam jecxz call mov lds push pop insl add pop scas add inc gs jne jo cld aas ljmp (bad) adc dec mov test in icebp pushf fldt js push repz fdiv ljmp repz in js out icebp add hlt cwtl popa xchg popf insl xchg test jne stos movsb pop cli out in out leave adc ss mov sbb dec inc sub mov subb add mov (bad) (bad) inc mov and sub dec jne mov cs inc mov jnp and pop cld lret and pop jo fwait aas mov fsincos jb and cmp push repz and out inc int push sbb lock inc inc pusha repz fs mov push je add icebp sbb add scas out sti lahf add sahf or xchg aaa test (bad) orl cmp imul add clc (bad) push dec outsb jbe test mov (bad) mulb inc cmp je jg icebp out negl pop inc and push pop dec lret scas jmp addl sahf or adc stos cli mov cli (bad) clc dec outsb jbe test mov jne jge ss sbb xlat ljmp icebp (bad) sarb rolb lods and imul sbb sub push sub sbb or jae jg cs outsb cs stos xor lods push xlat and inc mov cld mov mov aad adc icebp (bad) sub das mov stos js (bad) out jb roll fwait and xchg daa dec dec stos xor leave mov sub push cwtl and adc (bad) cmp test cmpsl inc mov inc or or movsb pop inc (bad) add push jl ss xlat ja and xchg lds pop jne push xchg js mov shl in test and stc clc dec push add mov pusha or in (bad) or adc inc dec mov cmpsl jge popf popf sbb push ds stos cmp add shll dec sbb mov ljmp icebp mov push (bad) sarb rolb aaa xchg xchg rorl out pop cwtl and sub mov sbb jl jbe xor popf imul or pusha fs add mov pop aad leave rorl ljmp xchg jnp sub sub inc movsb repz out ds cli mov or lcall dec inc add icebp lahf std sbb mov jge repz or adc inc jp es dec popa pusha int and pop outsb imul sbb scas add sahf aas or mov cli ss pop or sub (bad) cmc es sahf repnz push mov sub cltd add sub inc and inc jg out sub dec hlt and aam inc push aam mov lahf dec mov pop fucomip lret loope sub es cmpl dec bnd test adc sub mov pop stos sub dec gs pop mov adc dec addr16 je faddl mov popa or arpl pop jae adc inc imul into ljmp add jle (bad) xlat cmc jecxz mov jecxz push hlt faddl (bad) cmp cmc (bad) or push xchg outsb (bad) popa adc dec cmpsb or fmuls cmp fistl xchg mov ds mov (bad) call mov das arpl push xchg ret jge cmpsb cltd ret adc cmpsl jecxz aas pusha xchg add mov in push test push leave dec xor stos inc sti test mov add fwait movsb movsb arpl xchg jle inc push add push mov mov push jne jl stos sub lahf push add or xlat aaa aad ss shlb mov xor pop dec int3 xor inc fisttpll adc cwtl add inc jnp adc lahf cld xor fsubp add andl sahf rolb inc jne xchg xor mov movsl call pop fcomip scas repz sahf or xchg popa repnz and add repz jne mov lds xor inc lock notb call loope mov jecxz lcall add orl cmp imul out and sbb jg (bad) (bad) cmp mov pushf ss pusha push mov in test xor mov mov cmp jbe mov mov adc dec sub fwait xor cs pusha push mov in test xor in js mov (bad) cmp jbe mov mov adc dec and fwait xor fisubl mov in test xor fcomps jp mov cmp jne inc push xchg js lcall (bad) aad adc add jns xchg push in dec dec adc into jnp,pn dec (bad) dec inc adc cwtl jnp or rol dec jnp mov adc add cwtl sub xchg adc test and jle lret fs in and adc cmp fbstp xlat (bad) jne fdivrs or sub outsl test in fisubr int or cmp lods cmp sbb adc pop pop jbe fdiv adc test cmpsb clc adc sarl fs fsubs inc popf xchg jno sbb and les dec jns popa push jne sbb dec rcl fmull ss int stos out add jb test pop cli jp mov sbbl dec scas pop mov notb les movsl mov adc call dec test xchg or jae pop adc inc add add sahf fisttpl aad lods fistl scas mov xchg enter pop or or dec jl sub push cs outsb (bad) mov sbb cmc leave xor sub or xor add jnp and adc or xchg dec scas scas xor loope sti stos push bound pushf test les pop mov push mov fs cmp add std lods jle fsub cmp jmp shrb cmpl cmp sbb xchg adc ret lds mov ljmp jmp lods pop jp or mov xor mov int fistpl (bad) pusha ja jo pop das jmp xchg cmp mov inc in push push out jg test xor xchg jl sahf or cmpsb sub js add add jle xrelease mov sbb xchg add push sbb push js jg icebp in cmc cwtl add sahf or mov jne sbb pop icebp ja xor or inc xrelease mov loope test ficompl repz icebp in cmc cwtl add sahf or xchg jmp stc push mov and jne scas push into lods adc add jae test pop cli jp mov sbbl pop pop (bad) mov sbb pop xchg xor shrb stos mov test jo js subb stc (bad) add sahf or scas xchg (bad) jne mov fidivrl xor mov inc fidivrl mov sbb popa cmp mov pop xor dec dec sub jnp inc fimull adc cwtl call lcall sbb jl lahf cld sub mov pop adc inc fsubr mov in icebp imul je int3 or (bad) (bad) out icebp xchg clc sub dec cmc icebp fs inc add add jl je andl icebp ss add ds xlat mov adc jmp lods push add jmp out lret fs ljmp lds xor jnp inc and cmc loop cmp sbb setp shlb call sub data16 add orl fildl loope xor imul cmc cwtl add dec mov push int movsl adc add je test pop cli jp lahf pop mov adc popa out fdivs fildl inc (bad) call out fnstenv loope jecxz call jl cmpsb lahf repnz add pushf in out sub xorl mov jp or mov jnp inc add enter aam (bad) or jle (bad) pop iret mov pop cmpsb ljmp ret cmp (bad) out push pop mov cmpsl pop lds xor mov jp imul and mov movb cmp mov outsl call sub in sbbb and cmc test repnz mov or mov or (bad) mov and in dec cmc in or xchg (bad) xor add add mov enter mov xchg sub xchg fidiv es scas movsl enter mov enter cli les out stos push or dec mov loop dec cmp repz sub out add (bad) test ret adc jae inc add imul out icebp lcall xor xchg add icebp hlt or repz (bad) icebp (bad) sub inc jle repz js add add mov std js add repnz xor gs add icebp xor jnp ficomp repz js add add sahf or (bad) xor jns jle repnz (bad) fldl and push push out negl sub jb,pn mov add sbb jecxz xchg repnz das in sbb pop outsb inc jl adc idiv add cwtl mov add sbb stos and fwait and (bad) push add lds iret cmp dec dec cltd sub out (bad) std pop inc pop cmp inc dec mov rcrb call mov lret mov mov xor xor fiaddl push rorb enter icebp push (bad) xchg add sahf or (bad) sti test imul leave cmp mov mov cltd add xchg nop jecxz jg sub ljmp mov add pushl or mov jnp cs lret (bad) push stc sub cmp jg jmp push xchg (bad) xchg mov push mov xchg (bad) mov popl mov add jnp and adc or xchg dec scas scas xor loopne add scas adc add stc xor dec les mov add fs popf leave jge lahf clc gs cmp andl fucom cmp jmp ret cmpsl dec push popa mov cmc xchg adc ret lds add xchg fdiv lea mov jp or mov xor mov int fistpl (bad) pusha ja outsb scas sub pop aas or push inc in push push out sbb aam fbstp mov sahf fisttpl aad jnp add loope push test dec jge data16 mov ljmp pop sub ror clc mov or sub or loop test push pop imul push adc add add push repz int js add hlt or repz repz jo cmp rcrb repz js add add jle repz fidivrl jle repnz xor gs add add gs fcoml js add add sahf or aas dec std jns jle repnz (bad) fldl and push je add icebp sbb add mov xor scas jge leave rcl lods or cmp fs mov call outsb jbe test jp inc jg (bad) adc push and xchg ds fdivrs je jg icebp out negl adc sbb pop dec lds xor jnp ja test jecxz mov sbb jg (bad) adc xor pop push psraw movsl push push out negl dec outsl sti jb mov les xor scas ljmp or cmp imul lea outsb je lea insb js jg (bad) adc xchg fnsave or scas out sti lahf add sahf or xchg push je (bad) orl cmp sub or xchg fiadd jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl lea dec lret scas out sti lahf add sahf or xchg out je (bad) orl cmp sub or xchg fiadd ja mov je inc jg (bad) adc mov and pusha sbb and cli jecxz mov sbb jg (bad) adc fsubl xchg push repnz (bad) dec inc push int add cmpsb repz mov aam dec push clc mov (bad) adc cmc fist xchg lret jns sbbl add mov gs add icebp pop aam cld sbb sti xor cwtl mov push dec inc dec adc cmp fwait push (bad) cs iret push mov mov sti jmp mov lock (bad) mov adc xchg mov jne pop cmp aad lods iret or outsl jae or dec roll xor push add dec rclb sub and push jp jmp es das pop mov add mov fs or push test in pop cwtl and push cwtl cmp xor lods lahf add mov push sub movsl add in cmpsb daa cmp test lods aad pop pusha loopne movsb push addr16 data16 mov pop sbb cmp sti cld dec jp mov push inc addl cmpsb and push fs and dec stc ds dec jns jle (bad) aaa call xchg ret sar dec push sbb shll pushf aas lock and ret mov cld xor push je jg icebp out negl in ficoml add sub mov orl subb imul in (bad) daa sbb push je add icebp out negl adc inc mov cmpsl jg sub mov add dec (bad) lods add out add sahf or xchg inc push insl fisttpll jae or das push psadbw data16 push iret fwait add sbb subb imul les xor stc inc mov adc ljmp cs sahf adc imul stc adc pop int3 out call mov (bad) scas out jecxz add sahf or xchg addr16 std xor into or sbb jg (bad) adc xchg add nop add sub das xlat rcl push imul mov push je jg icebp out negl sbbl lret scas out sti lahf add sahf or xchg (bad) push jp loope orl cmp imul sbb cli (bad) clc dec outsb jbe test jp inc jg (bad) adc cs jnp je jg icebp out negl lea dec lret scas out sti lahf add sahf or xchg negb lahf loope orl cmp imul sbb cli (bad) clc dec outsb jbe test jp inc jg (bad) adc cs jnp je jg icebp out negl xchg sahf adc pop dec lret scas out sti lahf add sahf or xchg (bad) pop jp loope orl and sbb subb imul xor (bad) pushf add inc xchg pop fcomip add daa hlt subb imul add inc rol pushf mov fwait in and out cld pop push xchg jnp mov cli cwtl ja adc fwait jae inc mov out push cwtl xor cmpsl jnp jge xor ficoml jp (bad) cmp out dec fwait adc rcll push or sub pop lods jno stos sti iret (bad) jmp lahf push es fcoml cmc xor push test lcall test sbb xchg mov inc xchg popf (bad) and sbb adc popf (bad) lock pop int mov jno test sbb mov xor (bad) jae daa or mov mov or rcll jnp rclb xor or dec push cmp jne sub cmp sarl das add xor jl lahf (bad) cmp aad or lods push pop ja xchg and aas jp out leave je ss or leave jle mov repnz fcoms pop repz xor inc mov and inc sahf ss or mov jmp inc jg sahf cmpsb popf call jns jno dec push dec push pop mov out or ds outsl leave popf shll imulb inc test sub cli xor xor outsl inc cmc ljmp pop mov gs in push incl or shll cmp test lcall cmpsl jg leave cmp xchg fsubl loop or iret dec stos jge cwtl xor inc stos jns jno mov lock sbb lods addr16 (bad) cmp jne sub dec jb xor dec out pop stos and xor cmpsb iret fistpll jne sub dec jb ja jmp shrb and into (bad) out rorb dec fwait push xchg xchg iret jo xchg dec in xchg out jbe jp fwait push in add jg lds jmp inc jg lcall fidivrl rcrb addr16 popf cli push or pop jo mov repz in add xchg add mov push je subl icebp adc inc pusha inc push sub sbb loope clc sub pusha push cmpsb rclb jmp xor fwait mov xor popf pop sahf pop pop in out rolb aam and xchg cld xchg sub iret xor (bad) notl clc call test inc push mov andl cmp cmc pop enter lea add dec int cmp ja inc jle add je cld mov xchg lret inc fsubp jnp push or aad ds pop int xor fdivrl fs dec mov push xor lea ror pop in in push cmp sahf push adc jne cmp xchg pop dec pop lea sbb gs pushf adc adc xor mov (bad) in dec pop ja jnp call rcl xor lret inc fsubrp lahf loopne xor sbb nop or movsb pusha ja cmpsb gs cmc test sbb leave inc jle,pt fwait pop aaa roll jnp (bad) out std (bad) lock stos push cmc fstpl mov jb push and mov xorl loope (bad) and dec pop cmp adc and mov jg into adc push dec pusha push imulb dec sub loope adc cmp mov ja xchg mov dec stc stos cmp add out mov repz push push out negl adc inc mov cmpsl jg sub mov or scas out sti lahf add sahf or xchg sbb and sub daa repz imul xchg clc popf add lcall sub mov jo and or xorps ljmp add mov das adc ds sarb int scas icebp mov inc sub data16 icebp sub loope fistpll fild dec cwtl add add sub dec cmp sbbl inc mov cwtl mov icebp pop rol and arpl out leave cmp int3 (bad) push add (bad) (bad) jp inc cmp pushf cmp call ljmp mov leave xchg sub clc lea add sbb and pop pop aam hlt insb daa std ljmp pop jecxz sbb pop cmp addr16 push xor jbe and sub xor mov iret add or mov or xor test es pusha in xchg out (bad) cmc pop pop jb scas mov lods fs xorl push adc xchg into lea jmp mov (bad) stc adc sahf or push mov mov mov sub int imul in pusha in ljmp inc sbb mov addr16 repnz repz enter aas cmp mov fstps aad (bad) jmp dec pop inc imul cmp xchg sub aad pop jns adc cmpsb or sti sub les and and fsubs int sbb imul in divl push iret fwait out (bad) stc adc sahf add call (bad) icebp add and subb imul imul lret cmp ds aad in aas cmpsb mov cli pop fs mov push je jg icebp out negl repnz sbb push or and repz imul xchg arpl add pop cmp push pop subb inc xlat dec jp add pusha cmp je add call mov sub add sub adc dec or out xor add popa push cmc sahf add sahf fdivr dec aad (bad) popf add adc clc add das movsl push jle adc enter repz jmp loopne (bad) fisttp iret pushf (bad) call stos inc sub ss mov cmp lea jnp adc and repz das jge jbe out sbb xor addr16 test cmc inc dec pusha lods jge pop mov pusha jecxz xor jle fdiv movsl push push mov data16 ss (bad) cmp cli sub mov mov cmp insl notl out xor sbb push insb sahf add js add pop and rolb je mov mov aam (bad) jbe inc xlat adc lds xchg lock or pop add pop negb xor xor test ja cwtl push cwtl xchg movsb pushf pop ss inc add in (bad) xchg lea popa js in or mov mov stos add dec cli adc adc mov aam cmc lret icebp mov ss adc stos mov lret inc decl xor mov dec dec je or mov out jns pop cmp push xchg aam lcall inc adc imul and test mov adc fwait (bad) sbb mov ret cmovae ss adc lcall xor sub sarl adc repnz aaa add jno mov roll inc fucomip rcrb xor xor mov adc daa xor ja xorb inc cld mov out add pop xchg xor mov movl xor mov out adc mov orl xor out adc jne test mov mov ss xor push call inc sub inc adc xor adc inc mov pusha jg inc (bad) cmp lods add stos xchg mov pusha lea xor jl rorl outsl stos dec push or test jo lds inc (bad) mov mov movsl test or jnp mov (bad) sarl push and push sbbb jno andb pop mov xchg lcall clc jns jns test fsubr sub jmp sbb jnp sti pop mov repnz js outsb dec cld add or lock ficompl mov mov pushf mov lahf stc and (bad) xor and and adc xor mov cmc inc repz sbb leave and (bad) jnp mov jae ss test scas xor xchg rorl dec adc pop call gs mov in xor fcompl cmp loopne loop aas imul pop (bad) insl ds cld mov fwait std jmp ss push inc cmpsb cmp in pop sti dec xchg addr16 lock inc jg cmp inc push add mov jbe mov lods (bad) (bad) (bad) or xchg dec add mov scas xchg les ret movsl add out mov dec add (bad) (bad) pop add mov sbb std popf or mov cmp (bad) jmp push or pop push sub insl cltd (bad) mov cmp push clc fs mov or xorl insl rcr bound loope push lock mov aad (bad) mov lds stos and cs and or lea js fiadd out imul movsb mov mov fmul (bad) loope push out cmp and lret push add sub ja xor mov in cmp push out int3 into fildll loop sbb repnz sub pushf mov push cmp gs call pop inc push mov push into cld xchg jno ja (bad) jmp cmp int3 imul bound jecxz inc dec in loop js insb adcl or or sub jg in xor repz adc stc aam (bad) lret xor inc push insl add in adc xorl stc outsb lock addr16 insl inc mov and cli mov mov adc xor cwtl imul or mov cmp (bad) call push inc jmp adcb stos mov decb test xchg or adc rorl push sbb (bad) rcll cmp mov cmc test aas loope mov xor pop loope mov leave xor or jnp loopne scas loope or cmc idivl inc inc mov int3 cld or jo mov sti int3 and xchg ss out and and pop xor mov push pop bound xor shll repz rolb test fisttpll ljmp lods cmp and loope mov test jp push icebp clc pop mov roll adc or mov test mov add jbe js lods jp jbe roll cmp fsts cmc popa mov and jecxz bound popa call dec int3 mov sub ret sbb cmp stc insl xchg mov fdivrl push and fcos xor or or mov test les xchg add loope and cmc ss mov imul stc or cld or pop dec sbb jmp jl pop imul (bad) jmp jmp sahf aas (bad) icebp or inc pop cli mov lret mov cmp loope paddd repz cmp arpl cld rclb adc mov xchg insl mov pop loope push lock sub (bad) lahf cmc aas mov jno mov js js fmull sbb test xchg dec add jo fwait lret insb add dec and pop sub pushf mov push cmp inc insb fisubr ljmp dec xchg int3 (bad) jae fiadd out imul movsb mov mov fmul (bad) loope push out ss push push add scas xor sbb lea push loope cmp pop jbe xchg inc imul popa mov lods jp jbe roll push addb rorb xor jo imull movsl hlt fucomp repnz sub pushf mov push cmp sub test jns lock xchg ja adc cld xchg jno ja (bad) jmp je (bad) inc rcll lcall aas dec iret aaa std xor inc ja jnp lds insl mov ljmp inc push stos ja loope push lock dec inc int pop ds jg repnz jg mov xor (bad) in push and push repnz inc xchg pushf cmpsb jmp in dec cmp loop mov jecxz dec das sbb cld ja jns jae stos add cli cs mov push mov push mov xor in inc and sar (bad) jg mov loop jg (bad) mov lds out repz loope mov stc push mov out push cwtl fstpt jbe rolb inc cmp jmp hlt inc pop imul out sbb int3 fldenv mov ret and or ret xor subb inc adc fdivrl fstps and lea xor xchg adc sub in inc mov xchg sub and inc cli inc pop pop sbb inc add add mov fstpt add pop shr add push jbe test mov jp repnz mov sbb mov negl or jns scas call sahf or xchg jbe jle cmp xchg fiadd jbe test jp inc jg (bad) adc mov std fdivrs push adc fwait icebp xor pop add push es aad mov sub push stos nop inc push stc cwtl sub pop clc (bad) into push jnp inc add fldt dec loop xchg jle in out daa pop mov dec push bound dec test loopne mov mov rcl add scas out sti lahf add sahf or xchg cmpsb insb cmp mov orl cmp sub or xchg fiadd jbe test jp inc jg (bad) adc ds fdivrs je jg icebp out negl gs adc pop dec les xor clc lock or cmp imul gs cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl jne adc pop dec les xor clc repnz cmp imul imul sub mov adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc cld cmp lods or cmp imul jne cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc (bad) xor or cmp imul or (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl test adc pop dec les xor clc call add psllq xchg cmp cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl xchg push adc pop dec les xor clc ljmp or cmp imul sbb (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc hlt cmp lods or cmp imul add dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc divb cwtl mov add psllq xchg pop sbb (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl test adc pop dec les xor clc loopne lcall cmp imul add dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl xchg push adc pop dec les xor clc loop pushf mov add psllq xchg sub insl cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl and adc pop dec les xor clc in cmp lods or cmp imul push (bad) cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl and adc pop dec les xor clc out xor or cmp imul imul sub mov adc sbb shr push je jg icebp out negl gs adc pop dec les xor clc cwtl lds or cmp imul push mov (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl jne adc pop dec les xor clc lcall or cmp imul jns cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl sub adc pop dec les xor clc in cmpsb mov add psllq xchg adc clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl sub adc pop dec les xor clc out test fildl lods or cmp imul jns cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl gs adc pop dec les xor clc nop lds or cmp imul gs outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl jne adc pop dec les xor clc xchg cmp cmp imul imul sub mov adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc pushf cmp lods or cmp imul jne cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc sahf xor or cmp imul or outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl test adc pop dec les xor clc mov mov fildl lods or cmp imul jne cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl xchg ss pop dec les xor clc mov mov fildl lods or cmp imul sbb outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc xchg cmp lods or cmp imul add dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl lea adc pop dec les xor clc xchg xor or cmp imul sbb outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl test adc pop dec les xor clc add mov add psllq xchg add dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl xchg ds pop dec les xor clc (bad) cmp cmp imul or outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl inc adc pop dec les xor clc mov lods or cmp imul push scas cli (bad) clc dec outsb ja mov arpl jg (bad) adc sbb shr push je jg icebp out negl insl inc adc pop dec les xor clc mov lods or cmp imul stos idiv (bad) push popf outsl cs jb gs add add adc mov cmc cmp pop je dec push leave in subl mov loope jle in cmpl jp cwtl add mov mov popa fstl cmpsb (bad) jp (bad) stc icebp test xchg mov jno dec dec insb pop icebp in cmc cwtl add sahf or stc xchg cmpsb cmp mov inc (bad) pop pop sub subb js call add or jl pushl repz hlt push push call bnd sahf add lret push js add add mov push js (bad) js sbb in add sahf psllq cmp add sahf or (bad) sub mov clc add repz je inc add add sahf or subb (bad) out into add sahf add jp or (bad) xchg bnd cmpsl icebp sbb in call enter add add sahf add test or std adc addb mov lods cmp cltd hlt (bad) cld lods mov ljmp in insl (bad) (bad) mov and cmp cld cmpsl cld jmp lret xchg in call or jle jae mov cmp test mov inc fs xor sub adc and (bad) inc add sti and mov jmp pop cwtl dec fcoms inc fwait movsb outsl xor push cmpsb mov (bad) xchg lcall test cltd cmp push mov lcall pop (bad) cld rcl rcrl sub jg add cld dec pop mov and cmp cld jmp add insl sub inc fs lret jb sahf jmp adc jb jne ljmp fidivl stc pop sub pop pop mov out mulb inc mov add out pop arpl jmp xor and shl mov jbe sahf cltd je mov mov and pusha mov test mov pop lcall in push pop mov jp cwtl outsb in jmp push pop ret (bad) cmpsl cld dec and test or xchg mov sbb sahf xchg mov mov adc call leave dec mov jns sub jno mov jnp add sti js mov and movsb iret (bad) cmpsl cld jmp pop push adc sub inc mov cmp lret and jns inc enter in lret xor cwtl mov adc push jns sub fistpl jl inc add jo fiadd jbe add ljmp out stc cmp and ds jbe fnstenv sahf mov cmc pop clc rol jmp std sahf into cmp mov mov test hlt lcall pop pop xor cmc cmp test jmp sub inc leave stc mov in sbb adc xor pop in out aaa or sahf and lods aaa sub in add mov out mov subl or adc test cld xor stos cmp test mov call jne es inc xor movsb pop roll movsl pop and hlt gs xchg pop out add add sahf mov test add sbb cwtl mov mov cs stc cmp push daa insb mov jnp add jg test xor dec movsb jecxz insl mov out mov clc xchg jge lcall data16 sahf and movsl add bound sbb xor xchg adc mov into jno pop faddp mov inc popa cli fmull and hlt jae jns stc mov push adc xchg gs dec insb sub cmp or adc mov fwait testb mov xlat test cld insb in lea add ljmp repz (bad) dec aas scas xor stc add sbb call pusha pop sub cmpsb sub outsb fcmovbe inc push sub inc stos cmpsl xor jnp xchg cmp xchg xchg fwait insb mov jnp add out leave call and int gs sbb sbb fimull bound iret inc inc xchg inc xchg das mov cmpsb cmp out scas jg mov dec jnp shl xor jno xor push cld test cmc les faddp mov mov jmp jg or jae jns leave mov lahf pusha jmp inc test xchg add sahf dec add add loopne xor jno push xlat inc roll xchg pop iret out add cwtl sbb xchg incl inc add sbb sbb ret xchg and (bad) in stc (bad) (bad) lea gs adc mov sub sahf inc repz jb or in jmp mov imul lahf jnp sbb faddp mov sbb xchg add lcall jecxz stc ja repnz call sub sahf negl ds imul mov in inc pandn xor or (bad) pop jmp into subl movsb std setg jmp jbe pop loope xchg bnd or inc pop fmull pop sub sub fmull lret aaa sahf mov (bad) pop jle std cs leave fcomip mov fistpl out pushf cld cs iret iret lahf clc fstl mov lea icebp push sub dec in cmp ds (bad) and pop jge cmp in aaa sahf scas aas fimul xchg out addr16 shl (bad) xchg (bad) sub rolb xor (bad) shlb add push mov ret add loop and (bad) cmpsl cld jmp xor ds cmp mov gs xor jne data16 sahf mov ljmp std jge cmp fistp (bad) mov pop insb push (bad) cld (bad) mov adc xchg in xlat movsb std setg jmp cmc mov add pop sbb jl call fisub xor sahf sbb or test add jecxz pop repnz mov mov dec pop inc shrb sarl push scas mov mov and mov cld jmp xchg sbb jle or dec inc mov cmp lret aaa sahf dec or add in hlt fisttpll loope pop loopne nop add incb jb stos adc (bad) mov and sub jmp fstps add xchg gs insb pushf nop pop mov inc add push cmpsl popf lods and xlat cwtl mov (bad) cltd or lods into xchg add pushf movsb aad push stos adc fildl xchg push repz adc repnz outsb and add xor inc mov sub mov jnp inc enter push pop fnstcw xor jae xlat test cld loope cmpsb enter xor fistp mov jmp dec clc and jmp (bad) adc fwait lods pop add add sahf cmp adc dec jns mov jmp xchg push mov (bad) push cmp pushf cld dec pop dec fisubrl sarl loope imul sbb or mov mov inc in fwait push (bad) dec and adc mov push movsl jmp sahf aas sub mov std scas sub ljmp pop insb push out add push sub xchg incl inc add and and xchg sbb push jb sub jno daa mov adc popf adc mov fidivrl call xchg cld jnp sub rcll out push fcompl jmp out daa (bad) cmpsl cld jmp mov call push xchg mov inc addr16 cmp flds sti pushl loopne sahf or mov decl jns mov cld jne xor lahf clc fstl mov fiadd xrelease mov in cmc cwtl add sahf push repz jb jae sbb sbb jmp sub stc jge leave cwtl add sahf xor (bad) xor stos xchg cmp sahf or lods xor js jg repz inc in cltd or xchg cmpsb in cmp in add sub xlat cmp mov es jnp inc add add popf daa adc clc cmp inc add (bad) cwtl sahf inc jmp dec push add cmc sti cli inc pop insb jmp xor test cmc cwtl add pop push jmp mov jnp jle xor in cwtl add sahf xor cli xor int3 repnz mov aas xor es addl mov xchg adc add jle xor jg in out shrl add mov jnp inc add clc mov ljmp das lcall sub icebp in cmc sti cli xor adc xor sub fadd in cmc cwtl add popa or aad jnp jle add sahf sub test imul push hlt sarl repnz (bad) lret sahf mul or xchg jb fwait negl dec xchg mov pop xor jmp js add jae pop adc aam dec adc pop xchg cmpsl inc add add pop lods xrelease mov in cmc sti cli aaa jle jmp sub loopne in cmc cwtl add push inc inc jle cmc hlt dec cwtl add sahf (bad) repz test jle repnz dec push xor (bad) les stos (bad) adc xchg push push or xchg lea ret add sub leave outsl imul add add jnp inc add xchg fiadd orl rolb mov es cld and repz outsl flds sti cli jge push adc outsb js loope adc cmc cwtl add mov std lret fdivrl jle leave dec popf cwtl add sahf sub jnp jg repnz js xor jge test (bad) lret dec outsb iret or xchg sbb loope cwtl add jmp js jg repz into xchg add lahf aad scas out js add pop repz push sahf push hlt out mov inc add cld fwait inc sub subl mov in cmc push add sub fs cwtl add sahf pop adc sbb jle xor cwtl add sahf (bad) repz push jmp gs repnz push (bad) xor mov fcomi out imulb inc add xrelease aaa repnz cltd add rcll jnp pushf jg jecxz mov sub lock inc add add repz add add dec repz (bad) mov in cmc sti cli lds add mov movsb in cmc cwtl add fdiv popa push adc mov xor into sti clc add xor mov cld out cmc out and pop or xchg jle je cwtl add mov jnp pushf jg loope adc add sahf cmp push add add jecxz sub mov ret cli addr16 xchg hlt subb icebp in cmc sti cli lret pop cmp or fs mov insb in cmc cwtl add aam ret inc inc add stc stos cwtl add sahf sub jnp add cli xor mov cld push aad push add sub enter cltd add arpl loop sub xor xor fs add sub roll or test add (bad) lahf mov mov icebp in cmc push add xchg or gs jmp cwtl add repnz ss inc add inc xchg repnz add sahf xor outsl lods test pop mov xor in add imul cmc cmp cwtl mov xrelease imul dec inc sub jg arpl fsts rorb jle jmp pop decb or les mov ret add mov (bad) mov in cmc and push mov addr16 cmpsb dec lret cwtl add or jle ss push cltd add sahf gs roll xchg add pop xor add imul cmc leave sahf out decb xrelease into add cmc fwait add sub mov xor pop xor fs add jae and hlt push jmp mov (bad) daa pop add jl hlt subl pop int mov in cmc push add sub jns adc fldz cmc cwtl add sahf rorb lret push jp add sahf jnp cltd add sahf sub mov xlat pop fnstcw sahf or lods xor jnp jl repz cmc cmp xrelease popa js icebp cltd add mov subb loop cmp add sahf sbb and fs add push cmp sub inc add add pop xor mov iret fnop fdivl cli gs dec or fwait nop push out cmc cwtl add cmp divl adc test sahf sub cli nop add call lods xor ja std sbb out cmc inc add sub fldl inc cli cltd add mov jnp pushf jg cwtl jge add out gs add add orb inc add cli ret cmc mov out sub adc cli push mov data16 imul cmc cwtl add or xor rcrl sahf sub mov mov rep xor inc out movsl lock cmc daa lds rorl xchg sar adc lcall sub jne aas aam push xor gs add pop dec test hlt addl icebp mov sub mov sub push shll icebp in cmc and jb nop or addr16 cwtl push (bad) out cmc cwtl add or (bad) mov sub lcall push mov repnz data16 xor dec cmp cli adc lcall inc mov dec out add sub mov test lahf orl sbb fdiv mov imul pop lcall dec xchg insl mov in cmc testl sbb outsl jns adc out cmc cwtl add pop test cmpsb dec jnp jle testl mov mov add jge sahf or dec stos sbb push cli sbb adcl xrelease push jp stc cwtl add sub insb out aaa ds xor gs add sti mov dec adc les icebp ret pop ds mov subl mov in cmc sti cli and jnp push and cwtl add mov cmp call icebp (bad) and repz xor adc call lahf pop aam div fsts inc fsubr mov push or add pop push mov ljmp jne jnp push xor test or mov add arpl lea push mov push mov pusha lock push mov fild pop push mov popa ljmp inc aad pop push mov pop in push leave mov add in push pop (bad) xchg or inc push fistpll mov pop rclb mov loope arpl xchg push leave pop push dec sbb adc lret xchg inc sub push inc pop mov inc rcr test push pop jp pop push xor mov xchg mov int3 inc add lcall xchg sbb or fwait cmp jae push pop mov push xor gs ret pop cs jb inc push xchg inc sub lahf jno cmp es push inc push int mov insl imul inc call sub push fs and test jl scas sbb addb xchg inc sub xor lret or dec add sbb xor push mov add pop push cmp mov cmp mov dec lds push lret fst aas add and dec sti rcrl rcrl cmp dec sub mov or (bad) movd push arpl pop jmp or mov push xchg jb outsb pop add js mov xchg jp cmpsl loop cmpsl call pop sbbb loop nop out add adc push rorl xor sub mov or pop shll add js or decb imul stc inc lret iret decb addr16 or inc (bad) mov iret scas inc outsb pop add js insl imul fs or movsb sbbb mov add outsl cmc movsb or jp add outsb pop add js push test or out or test xor mov sub dec adc les imul xorb lea sub dec out addr16 or test bound dec mov or test lods fs lea sub dec fwait out or test push movsb rorl or sbb rorl xor cli je pop pop sbbb pop inc fwait jl loop je or outsl popl and js jno inc push pop loope addb jl loop je or in inc test iret adc inc push cmpsb rcr cld cmpsl inc jl (bad) adc cmp xchg sbb pop jl fadd sbb roll mov lret xor jl fnsave push dec lcall lret adc inc popf mov dec jmp cltd sbb addr16 nop jb or or js jno push add imul inc sub cld mov xor int and push add ja,pn xchg lret ljmp cmpsb lea jns lcall add dec inc dec mov roll test test into daa sbb out add dec jae fldl sub inc push pop and scas inc bound outsb pop add dec jl pusha leave mov mov or jp push and dec or out adcl mov imul cld inc iret mov shrl rorl push and daa add cli sub xchg xchg out add cli sub xchg ja outsb pop add dec jl or dec adc cld lahf pop rorl push and in or lock mov xchg dec (bad) or lock mov xchg dec dec out or lock jp push and push mov ret sub insl mov inc fwait dec daa shll and fwait dec xchg or ret outsl fs lea (bad) xor test mov inc fwait dec jmp pop mov ret jb mov mov jns,pt sbb out pop rorl push and cli je les sbbl or (bad) sub dec aam mov sbb iret scas push popf mov fistp adc add repz inc fs add outsl and incb jb inc jl sbb push rorl push and fild jo push stc pop mov lock arpl pop mov jbe and mov jae or outsb pop add dec jl es or imul cmpsl and ds mov cmp test out or addr16 icebp cmp test xchg or loop mov aaa test pop bound jl jecxz (bad) jb inc push push popa pushf add int cmpsl daa iret stos add or add xchg mov jno ret sbb or adc std inc aas sub dec pop int lods and dec cld jns mov jp outsb pop add dec jl movsb mov dec int dec aam add test sub add dec or and or scas out (bad) lahf or test ja jmp pushf or bound subps cmc test adc cltd add and inc out test xchg add and (bad) js mov mov xor mov loope push popa pushf add daa (bad) push xor lret (bad) mov pop mov mov push ret lds js and push or and dec jp or lahf icebp shll (bad) push pop test jmp and dec add cmp push imul dec (bad) jb ds sbb cld pop push xor in inc sub cld xor repnz push xor (bad) inc sub cld sub in push sbb (bad) dec outsb pop add dec jl lock sbb fsts cmc adc mov mov push sbb fsts rclb xchg mov mov push sbb fsts mov movsb fnstenv mov push sbb fsts cmpsb xchg mov xchg mov sub push or xlat mov push sbb fsts jg loop mov mov push sbb fsts push adc fnstenv lock dec outsb pop add dec jl scas cmp mov mov ja jmp shrb dec stos nop cwtl loop test or iret shlb (bad) xor popf jecxz iret scas push ror enter cmp outsl or in jae test call adc push push dec and cwtl fwait leave scas sub xchg pop and push push shrb adc pop enter pop mov shr mov or enter sarb fidivl or inc or iret mov ljmp mov add outsl dec push push sbb mov push pop (bad) push pop test xchg mov jo les dec (bad) xor xchg mov push (bad) xor mov orb dec (bad) xor lea js mov jb outsb pop add dec jl xchg sarl icebp or ss jno lods mov cmp cmp or test jno lods mov aad cmp cmp or xchg es lods mov aad cmp cmp or lods mov stc lock cmp or add daa cmp or add daa cmp or frstor jno lods mov stc xor cmp or es lods mov mov icebp or std es lods mov mov icebp or mov es lods mov arpl cmp or sbb jb dec jl hlt out dec mov (bad) jae dec jl rcr ds push and push cmp dec jl mov aas pop push and add jae ds mov pop pop pop push xchg inc ret (bad) jae push add xor pop push xor in inc sub cld xor repnz push xor (bad) inc sub cld sub in push sbb (bad) dec outsb pop add dec jl push dec pop cmp call fcomps xchg jb cmp call fcomps repz adc cwtl adc mov fistpl sbb adc cwtl adc jne add cmp call fstps xchg sub sbb adc cwtl adc popf push dec pop cmp call fstps repnz pop cmp call fstps mov pop cmp call fstps repnz pop cmp cwtl push imul push add test jge inc sub cld std jo popa push xor repz jae ds adc and (bad) or or iret mov fs (bad) or adc or adc push xchg inc sbb or push pop push xchg inc and or add push xchg inc sub or negb push xchg inc xor lock or add mov leave jmp or imulb push xchg inc inc or aam or out push push xchg jb outsb pop add dec jl inc in pop mov dec (bad) jae pop add mov push and push fldcw hlt std lea rclb out jnp sub std lea adc rclb inc xchg xchg fldcw hlt std (bad) rcll adc sub std lea rclb xchg xchg (bad) fldcw hlt std lea rclb add (bad) sub std (bad) call adc sub std (bad) jecxz xchg push dec rclb rclb add mov push and dec out pop out lea lcall pop out lea sub jno daa adc pop out lea lcall pop out lea lcall pop out or pop push nop js clc jae es scas push xchg iret jp (bad) xor andl add sbb jp (bad) xor pushf fs scas push fcomp cli jp (bad) xor mov add sti adc lret xlat js stc iret gs scas push and sub (bad) xor out es scas push sbb push nop js stc std and dec add notb dec (bad) xor adc iret scas push push (bad) xor daa gs scas push pop (bad) cmpl nop js jns and dec add lret xlat js stc arpl adc popf (bad) ret jnp lret xlat js testl jnp lret xlat js ja and dec add (bad) clc jnp push nop js ja gs scas push xor push jl (bad) xor fsubl adc adc cmp xlat js testb and dec add lret xlat js jbe data16 dec add je nop lret xlat js jbe data16 dec add lea xlat js hlt push data16 dec add lret xlat js hlt js and dec add sbb jl lret xlat js jbe data16 dec add aad jl lret xlat js jbe data16 dec add stc adc nop js not jg adc das xor jge (bad) xor hlt jg iret scas push je pop jge push nop js jne jg adc push aam jge lret xlat js ja jg xor jge lret xlat js cmc bound xor jge lret xlat js ja jg xor adc test and shrb movsl adc sub sahf xlat sahf clc test adc lods mov lock cmp mov scas mov stc mov sub leave imulb xchg (bad) ds inc repz sub sbb (bad) dec repz pop adc loopne inc adcl sub ss mov std mov sub mov scas mov cld dec test sub sbb test ljmp icebp sbb test out sub jp mov pop in test imulb or sbb xchg std sub icebp sbb xchg out sub jp mov icebp xchg imulb aam mov aad stc loope test add or sbb mov std sub inc scas mov hlt fimull dec or scas mov std push mov enter icebp sbb mov fsts mov (bad) push mov ljmp icebp sbb mov fsts mov decl outsb repz icebp sbb mov mov scas mov jmp sbb pushf lret outsb mov icebp adc repnz sub inc stos mov icebp adc ljmp cwtl ret bound xchg mov sub or mov add xor sub icebp adc repnz scas fwait or sub sarl push scas fwait or sub push les repz cld xor leave mov jmp scas mov jb leave mov jmp xchg sub mov leave mov repz sub pop int3 mov sbb sahf mov scas (bad) int3 mov cmc or les int3 mov out mov (bad) ss icebp nop repz testb cld cmp into mov out adcl mov jmp push sub dec sarb loop cwtl sub mov sarb in cwtl sub mov sarb in jle loope pop sub mov lret mov sahf sub mov sarb sbb sahf sub mov sarl rcrb mov adc aam icebp nop repz or mov mov mov rcll mov in ja aam icebp nop repz ljmp mov rclb movsb or pop xchg mov fisttpl sub sbb loope icebp adc rorl movsl sbb fcmovb loope icebp nop repz xlat repz mov icebp nop repz jae sub mov jecxz icebp nop repz enter ljmp mov sbb sahf sub mov in icebp nop repz lret fldt inc loope out icebp nop repz cmp repz out icebp nop repz (bad) mov adc out icebp nop repz xor adc out icebp nop repz dec dec repnz sub xor nop lret mov sahf sub mov out icebp nop repz and sub mov out icebp nop repz mov sub bnd cmp sbb push repnz sub adc mov lret dec add sub xchg mov repz add inc popf sbb mov enter or sub popf cmpsb ljmp std mov repz jmp icebp nop repz leave jns sub mov in mov (bad) cmc mov or sub sahf sahf in mov lret addr16 mov ret jo out sub xor nop lret mov sahf sub mov out mov int3 imul mov into loop sub mov out mov (bad) pop mov pushf or mov iret fidivrl cmp out mov mov mov out mov rcl insl ljmp mov sbb sahf sub mov lock sbb sahf sub mov lock adc sub lock int3 sbb cmpsb repnz lret into lock les sub or mov int ret lods ljmp mov lds sub lret xchg lock into or sub mov xlat daa mov pop sub aad repnz mov enter sub mov icebp or sbbl adc sub test insb sub push jp mov mov leave in ljmp mov mov lret jbe rcll sub push mov jnp imul scas mov mov lret inc repz xor mov mov jg dec inc fdivp mov test int3 or test pop adc repz mov int3 adc mov arpl repz lods and or cltd aaa (bad) aam repz mov int or repz scas add pop or repz stos xchg sub movsb aaa iret push dec repz mov out xor (bad) aaa fwait add repz stos jle sub mov repz mov (bad) xor mov repz lods jp cmp xchg lcall mov (bad) lock xor test cmc dec lods jb in ljmp mov mov (bad) repnz inc inc (bad) mov mov insl xor div mov mov leave in ljmp mov mov lret jnp inc xchg hlt mov mov js mov icebp push xlat daa mov inc xor xchg cmpsb hlt mov mov enter xor mov icebp or sbbl les aad mov sarl xchg lcall scas data16 lock xor test cmc imull xchg xor leave imulb jae (bad) aam repz jb inc hlt mov test jle xchg sti insb scas pop (bad) inc loope xor mov sbb sahf sub stos xor icebp add lods or pusha adc xor mov mov fstps (bad) xor mov scas push fisubl in xor mov mov pop das smsw idivb test pop das mov icebp sbb (bad) sub mov pushf hlt faddl lret xchg sbb mov scas insl fsubrl adc push cmpl aad cmpsl jmp das repz inc idivb scas fnstsw das daa les aad cwtl (bad) or mov adc sub mov sbb sahf sub test ret xchg xchg idivb lods out loope adc das fild sbb loope or jnp lret icebp add push scas jb mov xor jmp or sbbl js add mov cmp add mov and idivl cltd mov leave icebp jno je inc add mov out icebp jge insb add idivl clc test ds push stc add mov xchg iret out jmp push adc lcall popf dec out jmp push imul sbb nop xchg lret call or stc mov sahf inc call add icebp sbb jmp and sbb jmp cmp icebp sbb jmp pop dec lret icebp sbb ljmp fdivrp mov xchg mov push jno repnz mov popf cmp in jmp push cli mov xchg mov xchg repz mov mov mov in xchg repz js add sbb sahf stc adc dec js add mov in repz add pushf xchg in pop call inc add mov push jle mov icebp or sbbl lea cli mov adc sub xor mov xchg and add jmp or sbbl dec inc cli mov clc test ds sub js add (bad) sbb pop sti lea icebp sbb (bad) and cmpsb xor mov sbb lock test aad subb pop adc sbb or xor mov andl mov mov inc adc xor leave imulb repz fdivp inc repz mov jmp aad xchg pop repz call or aad test hlt dec call adc icebp sbb hlt pop adc xor mov sbb cmc fs inc add (bad) out push sbb xchg and mov mov pop or add sbb ds xor mov adc xor mov sbb sahf sub les mov clc test ds xor mov test stc ds xor mov lea jae sbb ja lods or xchg cli outsb repz xor mov or mov outsb repz mov xchg cli jae pop sbb or popl jl add or jl cld ds sub mov test nop lock sub (bad) icebp ud1 icebp sbb out jge std mov and imul fldcw pop std outsb repz test adc jle push xchg repz dec pop sub push mov xchg in aad mov jle push lahf or mov (bad) mov jns pop test stos jge mov js add jmp push mov jo add stos and aad jns add sub aad jno add scas stc mov jp add or adc jl add call push adc jno add call jmp aad jns add or push ljmp xchg jb add add scas mov jp add jmp dec flds sbb add icebp mov mov icebp sbb add dec xchg and mov jae add jns push add jl push ds dec dec stos movsl adc je push fmull xchg dec xchg push adc jge pop jecxz mov adc jne pop fmull xchg dec lea loope mov jle or or cltd stos jne mov jbe or lock and icebp sbb or loopne dec icebp stos sbb aad jae or add adc push mov inc adc jne or or adc imul add rcll icebp adc je or bts cmc test mov je or psrlw mov adc insl fs jne adc jge loopne push or dec pop xor sbb cs push jmp icebp sbb cs in mov fsts mov outsl cmp xor in xorl mov es add mov outsl xor sub lret push cmp adc aad push repnz lods sti lea icebp sbb adc or dec (bad) xor sbb adc sbb je adc mov adc sbb fs adc add adc or add icebp sbb adc icebp mov push in adc or adc pop push mov icebp sbb adc in push inc xor adc xor push paddsb rcll sbb sahf mov hlt or (bad) cmp sbb repz dec add imulb fsubrs sbb repz addr16 adc data16 sbb out (bad) dec jle push adc outsl jne (bad) icebp lahf dec or sbb sbb push idiv adc sbb sahf mov cmpsb and (bad) cmp sbb repz push sbb imulb cwtl sub inc repz push imul mov pop test pop ja dec adc icebp sbb and pop insl pop add sbb and add sbb and imul iret nopl push outsl js add js es mov adc icebp push xlat mov sbb in cmpsl push xchg mov sbb push pop mov jae xor imulb test daa inc repz addr16 adc pop lods sub out test loopne sbb push sub (bad) pop xchg dec xor sbb sub seta je adc mov and inc testl sbb sbb sahf in jl push mov push sbb sub decl and push mov pop and hlt (bad) dec or imulb and sub repz push adc adc push push sub out (bad) pop daa loopne sbb dec lcall mov sbb sub pop bound aad dec jbe add mov sbb push repnz into (bad) lea mov jmp or sbbl loop sbb push sbb sub std push hlt and mull (bad) push or imulb jmp dec xor sbb icebp sbb xor and adc aad inc inc ss pop fwait pop xor icebp sbb rorl cwtl pop xchg insl cmp mov inc ds bound aad dec mov pop insl bound mov inc ss into divl sbb sbb sahf cmp sti push cltd lods jno mov gs sbb repz adc out mull bt mov push sbb sub loope mov dec sbb dec sub inc push out mov dec sbb dec stos cmp divl adc inc es divl sbb dec mov lods mov icebp jmp or sbbl scas cmc sbb clc test ds lods (bad) sbb and incl jmp lods insl cs fsts jnp mov jae movsl sbb mov inc testl mov sbb inc es pop push mov cmp inc cmp push scas cmp icebp sbb inc cmp imull icebp sbb inc cmp or mov inc popa inc cs and mov loope,pt pop or scas mov add inc pop inc ds lods mov icebp jmp or sbbl pop loope mov clc test ds lods mov icebp sbb inc xchg repz lods mov icebp jmp or sbbl fwait xchg push mov clc test ds lods gs push stc mov cmp lret scas jno mov mov xor inc aad lcall icebp jmp or sbbl fwait or mov adc lods sbb mov sti xchg inc iret dec sub out inc pop fldenv mov ss dec dec push sbb mov sbb sahf sub out lods pop icebp and clc test ds lods or icebp push xlat test xchg adc lods gs push stc mov ss dec lret scas jno mov mov ds dec aad lcall icebp jmp or sbbl pop popa and clc test ds lods mov icebp push xlat pop aas jp fmull subl push xlat les cli dec jae lods mov dec and xor outsb repz mov sub dec outsb repz and xor outsb repz daa sub xlat hlt sub outsb outsb repz mov push popa and xor outsb repz scas push std daa mov sub outsl popa push or mov sub scas lods aad imul xchg and popa xchg or aad sub push jae lods or icebp sbb push ljmp daa mov xor scas lea scas mov sub lods cmc hlt xchg adc sbb push pop pop add and icebp sbb push push mov sbb push arpl pop scas insl inc push stc mov sub subl icebp sbb push aad (bad) scas loope push cli mov cs push xchg repz cmp icebp sbb push lahf or aad jge mov das xchg push scas call cmc and icebp sbb push imul scas in stc and icebp sbb push imul scas leave sub push mov sub nop lods icebp adc aad and cs or icebp sbb pop scas call and icebp sbb pop jp dec scas test aad das negl or scas mov push add daa jae ds lods sub lds icebp jmp or sbbl mov adc stc sub pop sub out stos out lea icebp sbb pop and int es jle icebp sbb pop cmp cld scas lcall aad sbb cs mov icebp or sbbl push pop sub clc test ds stos push push icebp es sbb ds stos rclb es and jle adc stos inc pop in mov sbb jle adc stos xchg aad and leave lods mov push add sbb loopne shrb sbb jg lock scas mov scas mov push sub or stos push fcompl aad cmpsl pusha jae sub mov pop and repz stos bound sbb popa jae sub mov adc bound negl scas stos xor jmp or sbbl pop inc sub clc test lea inc mov push int mov adc arpl cmp icebp push xlat cltd and xchg mov mov push sub cmpl icebp sbb fs add dec fnstenv mov pop and push sarb sbb gs xchg rcl cmp jle icebp sbb inc adc into enter mov push mov shr enter icebp sbb addr16 push (bad) (bad) xor lds mov push (bad) push add sbb push sub insl xor or imul dec jno mov adc scas rolb mov mov sbb sahf sub adc push dec fldcw mov clc test ds lret sub insl cs pop repnz adc xor lds mov pop outsb imul loop insb (bad) cltd aaa mov cltd mov adc loopne jge test idiv adc insb adc jmp stc mov or lret iret dec ret mov adc insl aad mov fwait xchg leave xor icebp sbb insl cmp adc xor icebp sbb push cmp adc sarb sbb sahf sub sbb repz icebp xor icebp push out and adc int adc xor icebp adc xchg pop rorb repz mov icebp jmp or sbbl shll xor icebp sbb add test mov gs push popa xor icebp sbb jo or scas mov or jo or mov or int3 jg add aad adc sarl icebp jmp or sbbl adc flds clc test adc int add cmp adc jb or push cli mov or int je adc or daa jae mull sarl icebp jmp or sbbl adcb icebp sbb add test adc int stos jne mov add je lock xchg pop adc mov lahf je or mov add jne or adc or iret jnp mov aad add jbe or cmp or jbe unpcklps pop inc fnstsw mov add add jmp and mov or cli iret xchg add push or adc int xor jmp or sbbl inc icebp cmp clc test adc int dec imul fiaddl add in sbb jg jge mov stc xchg jns in or pop or sbb jp cmc or jmp and mov add jp or iret xchg add or adc mov mov add and pop int cmp adc int xor jmp or sbbl xor jmp or sbbl mov mov clc aam adc sarb mov push xlat leave add add (bad) cmc or mov jne rolb aaa mov push xlat icebp add add fdivrs icebp push xlat jge enter out sbb jno mov std inc test in mov mov dec mov add inc scas push ret mov aad (bad) cmp scas out in mov push mov scas bnd dec mov (bad) xor scas ljmp aad pop mov jo dec mov xor aad pushl xchg lock aad clc lods test lock icebp sbb mov or mov mov inc mov stc rorl stos mov inc mov repnz xchg mov jae inc mov neg xchg cmp mov lcall push or mov xor aad neg mov and mov lock mov dec mov mov inc mov bnd mov mov inc mov sti push mov jae inc mov std loope insl or mov repz mov cld push mov xor aad hlt in jl outsl mov repz icebp sbb popl mov aad incl mov mov dec mov call imul pop lock mov loope stos jp add jmp sbb mov icebp fsts cmpsb pop adc repz xor mov mov repnz (bad) dec imul div dec xchg sbb or mov in lret in mov xor aad in jns mov repnz dec mov hlt cmc nop stos add mov hlt xchg adc fucomi jne pop pop ds pop je adc push cmc icebp xchg inc imull scas push adc aad out insl xchg xor add mov imul xchg pop or lods mov icebp sbb xchg sbb or mov sbb sahf sub pop stos fidivl sbb inc out hlt cltd sbb or mov push sub mov xchg sub fsts jmp add mov loope fwait aas adc mov xchg and mov ljmp lods jp add loop cwtl aas adc mov stos mov loope imull mov mov loopne pushf aaa or jbe in push mov call jbe lahf xor jmp shl test mov icebp jmp or sbbl mov push mov loope mov lret cmc jno mov fidivrl repz mov loop mov jnp gs mov fstpt repz mov (bad) mov lahf and push mov out mov movsb hlt movsl push mov fsubrp mov mov cmp icebp sub mov push inc jecxz mov daa or icebp out (bad) dec fcomip movsl es daa icebp adc out test jmp mov mov (bad) mov mov xor clc jmp and hlt bswap mov arpl cmp push sbb sub xor mov in cmpsl push add popa bound mov (bad) cmpsl push add jge in pop mov fdivs data16 mov mov aam movsb pusha jecxz mov mov fnstsw jbe jb mov sub icebp sbb test int cmp aad fdivs outsl repz sub sbb cmpsb jb jbe in gs mov fldcw jecxz mov mov shr stos mov lahf mov and aad fisubl or pop mov shl test jmp mov mov (bad) jo dec mov bound aad rcr lods mov lahf mov lods dec pop mov fcompl and mov mov (bad) stos mov lahf mov in icebp pop mov xlat push scas mov outsb mov mov (bad) scas cmp push mov sub push mov xlat dec scas xchg add test sbb lods xchg or pop mov aad mov jmp mov mov int mov testl mov aad mov or mov jp add into cmpsl dec aas adc mov insl sub aad (bad) and jmp rcrl sbb mov jmp mov mov xlat pop mov or mov js add sbb sahf stc adc mov js add mov in stos add add pushf xchg in mov js add mov fstpt jmp or sbbl sub sub push mov repnz adc xchg repz ret cmp cmp bound aad lret xchg mov xor pop mov sbb sahf in add shr sub pop mov into push ficom add pop mov (bad) rol adc push xor outsl sub loope iret dec ret sbb scas mov mov mov push xor outsb sbb icebp jmp adc inc shlb xor push movsl pop mov mov pop cmp cmp jmp sbb inc (bad) loopne dec pop fstpl jmp xchg nop xor popa pop mov ret cmc pmulhw movsl flds loope les (bad) sub pop mov call xchg xor imul sahf sub sub loop std pop mov loope mov inc pop fstpl icebp jmp (bad) jge repz stos sbb stc rcr mov repnz inc arpl mov sub push xchg jne mov (bad) lods (bad) das or cmp mov out divl sub xor push dec mov divl loop cmp leave mov (bad) dec fcomip movsl inc loop cmp sarb mov fdivs dec add dec pop cmp idivl and push sbb subl mov push push or mull sbb pop or jno icebp out mull add outsb mov (bad) mov and sub imull sbb ja xchg pop imul xchg lret jle mov jae icebp test sub bndstx lret mov push sbb sub pop dec lock sbb enter push pushf bound mov mov jge movsb ret mov aad mov int or dec add xchg adc scas mov jo jo rorl sbb lret xchg dec and xor mov mov mov xor sbb iret xchg or jae icebp sbb iret mov scas push fsubr cltd pop mov test int3 sahf jmp push cmp adcl dec imull aam and mov test cmp jp add mov sarl adc mov add aad stos int cmp push pop or aad mov out mov mov jae icebp sbb rcrl ljmp inc scas imul add dec cmp std adc test rclb insl sub aad mov add pop mov test enter loope mov mov push dec cld js add sbb sahf stc adc dec cld js add mov in test int3 push (bad) js add pushf xchg in mov js add mov xor (bad) out icebp or sbbl js add mov in test cmc cmp ljmp in mov js add mov xor js add sbb sahf stc adc sub mov mov in test loop cmpb mov pushf xchg in mov js add mov push in push inc jo icebp jmp daa mov or aad jo icebp jmp mov or pop lahf xchg jmp loope mov or aad jo icebp jmp stos stos mov push aaa push adc icebp jmp xlat mov xchg pop ret adc jmp push stos lahf fnop cli adc lahf xchg jmp jecxz mov or push cmp icebp jmp or sbbl xchg in jne icebp jmp jnp pop loopne or jne icebp jmp out (bad) jbe mov jne icebp jmp arpl movsb dec icebp add jne icebp jmp out lcall sbb icebp jmp or sbbl xor jmp or sbbl js add mov inc pop xchg js add mov inc pop xchg js add mov in fsts add mov fwait mov js add mov gs xor mov out fnstenv add mov mov add mov mov ss add rcrb fisttp js add fldenv fisttpll js add sbb sahf stc adc xlat or add mov in imul inc add pushf xchg in imul fnsave js add mov fsubl icebp scas loop xchg (bad) repz loope mov les jne icebp into loop fwait or rorl cmp jb icebp scas loop xchg xchg enter jbe insl jb icebp into loop pushf pop cmc rolb sub mov clc test adc ja icebp jmp or sbbl xchg (bad) je icebp jmp lods loope mov arpl jns icebp jmp pop mov mov or out test jmp mov mov mov lods add mov mov cmp push imulb mov mov fucom jnp iret mov mov test hlt mov adc mov mov cmp test mov test stc jo shrb sbb stc cmp test mov xchg negb push xlat jp add mov aas adc ss and lods pop (bad) aad mov mov jmp fcos mov addb icebp or ja std (bad) mov (bad) cwtl clc (bad) or iret xor jmp or sbbl dec add mov clc aam aas adc (bad) mov js cli fisttpll and (bad) mov mov (bad) fisttpll and (bad) mov sbbl (bad) mov mov cld fisttpll and test mov and test (bad) xchg cld fisttpll and test mov fisttpll and test sub mov adc (bad) mov xchg fisttpll and (bad) mov mov push fisttpll and xchg xchg fisttpll and xchg (bad) fild fisttpll and xchg js add or mov adc fisttpll and mov jns add cmp lods mov mov add inc repz loop dec add jmp leave xchg mov add or xchg test fisttpll and mov (bad) les fisttpll and mov xchg fisttpll and lea mov sti mov sbb lcall lods shr dec xchg mov (bad) mov lods sbb xchg mov xchg fisttpll and xchg mov js push add addr16 daa stc xchg mov jo push sub lea mov jns or or xchg mov jno or fcomp mov mov je or cmpsb mov jno xchg mov jl or ret mov mov jne or and cltd pop mov jge or popf popa adc aad jbe or lods mov mov jle or sarl icebp sbb (bad) or mov mov aad jg rdpmc fcomp mov mov push xlat mov mov insb cmp loopne mov mov jg adc or add icebp sbb adc jecxz and movsl cltd mov jo outsb add mov mov je je,pn idivb icebp sbb adc or mov jo dec mov jne adc or mov loopne cltd mov outsb mov mov mov jbe adc and mov popa mov mov mov pusha dec adc mov mov push insb mov jp add popa dec pop aas adc adc imul mov sbb mov bound cmp fidivl mov push adc jmp mov mov bound adc or cltd mov imul int mov aad insl xor xchg add mov mov pusha lods push fisttpll das mov and xchg mov push cmp add xchg mov arpl mov mov outsl aaa sbb mov sbb sbb imul in push sbb xor icebp sbb sbb push jecxz xchg mov fs sbb mov sbb sbb loopne mov mov arpl rorl sub icebp sbb pop aam push mov mov pusha push sbb call mov mov outsb in in mov dec fwait mov addr16 and and fwait mov outsl shlb clc jb sbb lea icebp sbb ds or (bad) stc fwait mov pusha mov mov mov pop cmp cmp mov mov popa mov jmp popf mov mov arpl mov mov pop test mov mov fs mov mov pop movsl and and icebp sbb and inc loop fwait mov fs xchg rcrl fwait mov push arpl adc mov fwait mov push cli daa sbb mov fwait mov push mov cmpxchg xchg bound fwait mov pop pop and ud1 shrl sbb sub out rorl sbb sub out rcl dec cwtl mov pop nop es pop scas shr pop cwtl mov push or sub mov icebp jmp or sbbl sub sbb inc out hlt cltd fisttpll das mov insl mov mov jecxz mov mov dec xchg aaa push out ror mov icebp or sbbl pushf dec popf mov inc cltd xor or mov sti lea icebp sbb xor or (bad) stc fwait mov dec xchg cmp ja scas mov inc push cmp cmpsb mov sbb mov dec mov cmp fidivl mov inc push ss add mov inc cmpl or mov daa mov push dec (bad) cmp out jne jns mov cmp fs in lds sbb cmp jle mov leave cmp jno icebp shrl sbb cmp mov sbb cmp xchg dec cmpsl mov dec and xchg or mov icebp sbb aas xchg add mov dec sbb fisttpll das mov shll and cwtl cmp movhlps leave es aad cmp cmp nop add icebp sbb inc nop out shll adc pop cmp popf out rcrl pop mov cmp pop test push xor aad inc bound out rcrl cmpsl mov cmp cmp push push pop cmpsl mov inc pop inc cmpsl out sub cmp aad fiaddl or jp add inc push inc aas adc sarb sbb sahf sub mov jno popa cmpsl mov inc cltd xor or mov sbb push xlat ja push inc (bad) or lds inc xor push sub and mov inc enter jbe xor adc fs inc push or sub loopne les add into mov icebp sbb inc cmp mov aam mov mov aas mov xlat mov sbb adc inc inc loope jle and aad mov cmp dec (bad) or into cwtl mov sbb dec xor (bad) or and mov cmp int jp add xor inc aas adc scas mov cmp inc stos pop xlat sub inc adc or fcmovne xor cltd pop mov cmp cmp push icebp sbb dec nop out xlat fmul std scas mov sub xlat pusha mov aad xor dec mov bound fwait mov sub xlat or sbb cmp pop sub mov pop mov sub shrl icebp sbb dec jo int hlt shll push sub xlat push icebp sbb dec xchg or rorl mov pop sub dec pop out xlat push sahf xor aad jmp int3 rcpps mov icebp sbb push shl jge dec ficomp mov ss fsubr arpl pop into jge mov outsl outsb out imul mov xor shrb sbbl imul movsl scas mov xor push in psrlq pop test aad sub push cmc out xlat sub sbb push sti out xlat hlt (bad) lods mov xor xchg ror lods mov cs fmuls repz aad sub shrb lea and push adc mov lods mov sub fcomps sub adc lret (bad) xor jmp or sbbl leave insl lods mov and pop fisttpll push into enter mov sub fcoms stc mov icebp sbb push fisttpll push into in or push sub push cmp mov ss and das into test rorl sbb pop jo int rorb sbb pop mov sbb or and mov outsb pop sbb xchg int jp add daa out pop aas adc sub dec das push jo int or sub cli sbb pop outsl repz lret xor adc jbe bound or scas mov sbb pop (bad) or into pusha mov out and adc sarb sbb sahf sub mov add sub cmp xor or inc aad mov icebp push xlat insl es pop (bad) or into mov icebp sbb popa cmp mov pop stos jne mov daa sub jmp pop adc nop das test push or daa mov sbb jo into int3 mov popf sub cwtl and int3 dec and mov sbb arpl fcomp aam in cltd pop mov and xor icebp sbb pusha xor ret inc xor aad sbb pusha aas out rcl hlt xchg adc pop and lods shrl icebp sbb gs out rcl ret mov aad and or jns sbb aad push popf bound (bad) into mov icebp sbb addr16 out enter inc adc mov neg roll popa mov icebp push out and adc sarb sbb sahf sub mov loope xchg mov icebp push xlat cmpsl sbb int3 popf push test (bad) sbb data16 push int3 cmp fnsave inc cltd xor or jns adc scas sbb data16 call adc pop sbb lock pop cmpsb imul mov or sub sub adc add int3 test icebp sbb push xor icebp sbb insl push or cmpsl mov adc flds icebp jmp or sbbl (bad) mov icebp or sbbl add mov daa mov jmp mov inc push nop insb arpl jmp mov fisub lock out add mov icebp jmp dec pop insb jno out add inc ret mov adc push js xor dec iret fnstsw mov or push sbb dec push cmp adc jae push pop (bad) xchg mov sbb jae push pop (bad) xor mov aad adc jo in jecxz adc cltd mov or imul and mov adc jne out (bad) cmpl aad or push aas (bad) sub icebp sbb jb add aam and aad or jb add aam ds aas mov adc int into imul or sbbl jle aas mov sbb int3 push push cmp mov sbb data16 pop int3 jno in aas mov pop mov (bad) cltd mov sbb xchg pop mov (bad) popa adcl mov add data16 adc adc or into inc cmpsb imul add xor or lret cli sti pop ds or adc lea add js out fadd sti jge mov or adc sbb jge out outsb fdivs repz aad add loopne cmp lods mov push sbb (bad) fdivs xchg and mov push xchg jp or ds unpckhps icebp cmpsb int or sbb jg repz and add add lret fidivl jmp or sbbl jnp ds clc aam mov add push cmp ds sti sbb into cmpsb icebp leave xchg mov add cmpl mov sbb sahf xor lret xchg and mov add sahf and cltd int jp add std pop lahf inc adc pop mov add daa rcr xor jmp or sbbl mov sbb inc out hlt cltd fisttpll pop into cs sbb mov ficomp lds add xor jle cmpsb icebp leave xchg mov std push cmpl and mov add lret fdivl in cltd pop mov (bad) push (bad) mov (bad) pop (bad) mov push int3 (bad) pop out mov pop mov decl inc adc (bad) mov pop les xor sbb test out mov (bad) mov repnz jbe (bad) mov sti inc test out ficomp inc test icebp or sbbl (bad) fld mov div xchg add les ljmp sbb scas loope add les imul xchg in jecxz icebp in les cli mov in (bad) xchg xorl cmpsb (bad) adc in mov les icebp lcall jno les jmp hlt jecxz je adc and test leave mov ljmp sub icebp sbb mov (bad) insl leave mov sbb sahf sub mov leave mov imulb push in jecxz lock leave mov repnz lods popa in cmp xor (bad) mov jmp lods push add aaa sahf lock (bad) mov repz aaa push mov sbb scas jns jmp (bad) mov hlt in push sbb ss (bad) mov in popa scas fs out ret (bad) mov jmp in mov xchg adc fdiv addr16 pop pop fsubrs lock out and adc lret mov repz add pop lret mov hlt pop xchg mov push sub repnz enter fnstcw xlat xchg mov push sub and mov cmc push xchg and subl jnp add in iret xchg inc adc sarb sbb sahf sub mov enter (bad) testl cs mov mov testl sbb insl iret mov out ret xchg pop in jmp iret mov call xor mov sbb sbb mov inc stos jg iret mov call pop xor mov loope xchg fisttpl inc das mov ror mov jmp cmp icebp sbb add mov mov mov sbb or mov xchg in cmp ds int3 mov ljmp pop push sbb xor stos cltd sahf in ds stos std sarl jmp cltd sahf in push sbb adc mov in lcall adc mov in lcall mov mov in and scas lock aad out pushf fwait pop in sbb aam icebp sbb fwait pop in sbb cltd mov loopne mov pop dec and aad fdiv mov cmc ss mov loope mov shll aam icebp sbb mov in jbe aam icebp sbb mov cmp sbb mov add icebp sbb mov xchg fistp mov fldl mov jno dec lods mov out mov sub icebp sbb mov (bad) scas mov (bad) jbe icebp setp (bad) lods mov fptan mov jns mov aad (bad) jb icebp setp iret jge mov (bad) mov and icebp sbb mov inc and mov (bad) mov adc fnstcw aam movsb aam lea xchg mov fsub movsb xor test mov aad movsl fstp mov test sbb movsl out add and mov faddl pop jne inc adc pop aam cmpsb dec mul dec (bad) jbe les fnstsw inc in pop push xchg and mov aad cmpsl and mov add fidivr inc adc dec mov lea (bad) cmc test out push std and fnstcw fbstp aam lea xor mov xlat in test leave and fnstcw shrb jmp lods pop xchg popa insl fnstcw enter pop pop push imul sbb stos add mov sbb sbb stos pusha loopne push loope jno mov rolb pop cld mov fnstcw sbb sahf sub fmuls loope fnstcw sbb sahf mov and mov lret mov sbb pop out jge mov aam dec adc int3 pop cli and stc pushf aam dec sbb and fstpt aam dec daa cld lds mov insl fstpt aam dec cs cmp mov jmp pushf aam dec aaa fcompl inc int mov mov aam dec cmp and mov aam dec inc cld in cmp (bad) fdivrs int3 mov sbb mov jmp or mov dec cld push pop and xchg mov aam dec push add push into sbb int dec dec clc adc inc loop fdivrs aad dec fisttpl outsl dec dec lock aad into movsl mov in cmp popa sbbl push es out and fdivrs cltd (bad) jbe xor and fdivrs roll mov or push xchg fdivrs int3 xorl mov aam mov or push mov jmp lock mov or mov aad mov or push push sub jmp clc into jne hlt or mov (bad) icebp mov push insl in mov iret insl mov sbb jmp jl jmp dec mov icebp jmp or sbbl sub fidivrl sbb sahf push fsubl xor in mov mov mov lock aad ret pop in cmp dec and aad mov in pop lods and aad ret pop mov xchg mov mov mov inc pop dec loop pop mov les pop mov icebp sbb fdivl xor subl loope lds aad jns mov lds ret cltd lods loope icebp jmp or sbbl cltd mov mov sbb sahf jl dec pop xor icebp imul aam dec push fsubrl pop pop stc fidivr (bad) or sbb pop xchg jecxz icebp sub push mov mov (bad) fwait mov mov mov pop popa aas sbb loopne icebp out not movl xchg loop fdivrs mov xorl icebp sbb les sbb add leave xchg mov mov les or mov mov mov xor mov mov lds sub icebp or sbbl jns add xlat add repz ret mov icebp fwait stc mov fsubr shll fwait stc cmp or push sti cmc ret inc add shlb loopne jns add shrl in sbb push loop jns add shrl in sub sbb mov icebp fwait stc out lret jecxz mov xor enter fildl pop jns add mov das ret inc add lret loopne fsubp hlt mov jns add lret jo dec sti push mov xor mov pusha ret inc add mov mov push jns add into std shrb jne stos jns add int3 test gs jns pop jns add iret or aam jns add iret xchg shrl fcomps inc add into and ja mov push jns add (bad) lods rolb jns add mov push xor jns add mov xchg in inc add mov out sti mov stc jns add mov js in jns add mov jae hlt jns add rcrb push cmc jns add fldenv push idivb add aad rcll jns add (bad) mov (bad) lret jns add enter add (bad) jns add ret cmc aad add add sarl in xor jns add int3 add cmp icebp fwait stc movsb int3 (bad) (bad) pop add cmp jns add leave sbb mov push cmp icebp fwait stc mov cmpsb xlat lret add pop xchg jns add sarb dec sti lahf pop xchg jns add mov roll pop pusha call icebp fwait stc pop mov sub jns add int3 fcmovnu gs mov add into fs fldt pop sahf jns add (bad) (bad) pop pusha nop jns add sarl sti bound icebp fwait stc arpl inc mov jns add mov dec mov jns add mov in fstps add into out cld gs test add mov push mov xor aad (bad) neg bound xor iret paddw jmp inc add add outsb ret inc add cli sub sbb mov cmp icebp fwait mov sbb mov aas jns add incl and mov xor add cld aam sub mov xor cli arpl sub mov fstpt add pop icebp loope fcmovu mov xor std jl and inc add mov loop or add (bad) xchg loop fcmove ret ret jns add mov fcmovnu (bad) jns add sbb sahf stc adc sub add mov in pop loop fcmovnu jns add pushf xchg in pop ficompl jecxz jns add mov cmp add sbb sahf stc adc jle inc add mov in data16 inc js inc add pushf xchg in pop fimull inc gs add mov inc data16 add sbb sahf stc adc dec jp add mov in insl cli push pop dec jp add pushf xchg in jg push bound inc add mov pop jb inc add sbb sahf stc adc jne inc add mov in repz add pushf xchg in pop call inc add mov xor jp add sbb sahf stc adc add mov in mov jge or inc add pushf xchg in pop fisubrl inc add add mov push imul icebp or sbbl jp add mov in mov pushaw insl jp add pushf xchg in pop ficoml adc add mov dec push aaa mov icebp or sbbl addr16 loopne icebp sbb in sar xlat fcmovbe pop dec out loopne icebp sbb in sar (bad) fsubs push loope mov orl das mov adc jns stc ljmp adc (bad) inc cli aaa psraw mov jp cli cmp in mov mov cmpl dec repz mov popa inc adc jnp sti (bad) out mov cmp rorl sbb sbb add mov pop jge mov jl sbb cli test push rcrb icebp sbb sbb mov icebp sbb sbb je xchg in mov xchg ret jge mov jle push (bad) aad adc sbb pop mov push mov icebp sbb pop clc loop ret and mov js add or mov out adc push jo add ss ss aad jns add add mov jno add (bad) mov aaa mov icebp or sbbl dec shr mov (bad) sar add loop loopne xor fsts add xchg repz bound mov jns add add ljmp stc add stc icebp mov mov jp add or mov jb add repz scas aaa mov icebp or sbbl or mov test or or ljmp xchg or leave cltd ljmp adc hlt or mov js or enter icebp jmp dec jo or ljmp mov jns or or out mov jno or or out mov jp sub out lea mov jb sub or out mov jne sub jmp cmp loope jge sub xor shr icebp jmp out jbe cs or mov jle cs ljmp mov ja das mov dec or loope jg das outsl ljmp mov push scas int mov loope jo adc or in mov imul iret lahf dec fucomp mov jno adc or mov imul int dec test mov jb adc or in mov push adc mov loope jae adc ljmp mov imul mov dec push in mov je adc ljmp mov insb es pmovmskb xor jge mov jne adc pop pop add mov insl push adc adc movsl in mov jbe push hlt or in mov outsb sbb mov lret mov ja pop hlt or icebp mov outsl adc mov or icebp mov push scas enter icebp mov pusha push sbb lret mov imul icebp mov popa push sbb lret mov push sbb inc rcrb icebp jmp ja add (bad) psubusw sub popa icebp mov imul ljmp mov arpl sbb pminub inc lret mov insb pop cmp ljmp mov fs cmp pandn jnp mov mov insl push cmp adcb mov gs cmp pop adc jmp jmp dec outsl ljmp mov lretw paddusw mov outsl inc aas outsl ljmp mov addr16 pmaxub mov push and dec test aad out mov bound scas das push push out mov imul out ljmp mov arpl test mov imul hlt or mov aad out mov fs and xchg mov loope insb sub hlt or mov aam repz outsl movsb and push int mov and outsl ljmp mov pusha mov mov adc repz pop sbb outsl ljmp mov pop xchg and movsb xchg sbb loope arpl and mov loope pop xchg es pextrw scas (bad) repz fs stos loop pop repz pop mov (bad) shufps icebp jmp pop gs test push add mov pop test (bad) bswap scas pop aam repz add outsl ljmp mov pop jge (bad) pinsrw icebp jmp dec addr16 sub je lods push (bad) lock push jns (bad) bswap mov pop in mov pop cmc sub jns xchg lock push jno (bad) bswap mov xlat or loope pop in sub jp mov icebp jmp call bswap mov xchg xor loope pop leave int3 outsl ljmp mov push inc int bswap mov pop pop lock pop ror ljmp mov push inc into (bad) bswap iret insl push add loope pop mov lret cltd lock push cmp (bad) bswap int xchg lods lock pop mov outsl ljmp mov push xor (bad) psllq mov icebp jmp add mov outsl ljmp mov push sub int inc xor or test (bad) cmc (bad) adc loope push and xlat addl movsl xor ljmp mov dec and mov inc push cmc mov push popf xor (bad) rol push gs mov dec sbb (bad) maskmovq roll jns mov push cltd xor or sarb (bad) cmc mov dec adc aad xchg loope push xchg xor sbb jmp pop dec or iret push inc leave repnz push lea out ljmp mov dec or mov add repnz push test outsl ljmp mov push (bad) aaa (bad) psubq out sbb mov inc jle outsl ljmp mov dec cli cmp pmuludq fadd (bad) repnz inc jbe adc or cmp icebp jmp jnp repnz loope in add mov inc jb outsl ljmp mov dec out cmp psubd (bad) xchg repnz inc push adc push in xchg movsl repnz dec out sbb push in cmpl pop outsl ljmp mov inc cmp (bad) psubb jl in mov dec mov cmp mov dec xor loope cmp mov sbb sahf mov jp jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf xchg test cwtl jnp inc add jle pop cwtl add sahf pushf jl cwtl jnp inc add jle pop cwtl add stos movsb loop jnp inc add add sahf enter jnp inc jg push xchg xor jnp inc jg jb pop cwtl add cwtl jnp inc jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf push mov inc add pop dec jmp add sahf test loop jnp inc add or pop cwtl add sahf enter jnp inc jg dec gs add sahf pop fbld pop fs jg icebp in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg in gs add sahf pop fbld pop fs jg and mov js jg sahf mov sahf push mov inc add pop dec jmp add sahf or xchg mov in cmc cwtl add sahf push mov inc add pop dec jmp add sahf test loop jnp inc add or pop cwtl add sahf enter jnp inc jg dec gs add sahf pop fbld pop fs jg icebp in cmc cwtl add sahf or xchg in gs add sahf pop fbld pop fs jg and mov js jg sahf mov sahf push mov inc add pop dec jmp add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf psllq jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sahf mov xchg fs add add sahf movsb adcl pop cwtl add mov js jg add xor jnp inc jg jne pop cltd add sahf pushf jns xchg fs jg add xor jnp inc jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc call xrelease mov lock scas or js jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc call xrelease mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov add sub mov add sahf push xrelease mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl loopne mov jnp inc jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov add sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf psllq jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf psllq add add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl loopne mov jnp inc jg icebp in cmc cwtl add sahf or xchg mov add sub mov add sahf push xrelease mov in cmc cwtl loopne mov jnp inc jg icebp in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js add add sahf psllq add add sahf adc xchg mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov add sub mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc cwtl add sahf or xchg mov in cmc lahf add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sub mov add sahf or xchg mov in cmc cwtl add sahf jg iret xchg gs add sbb lcall xchg gs add add xor stos movsb loop jnp inc add add sahf enter jnp inc jg mov lcall xchg gs jg adc xor xchg fs jg icebp in cmc cwtl add sahf or xchg rorb xor gs jg add xor cwtl jnp inc jg or pop cwtl add sahf enter jnp inc jg mov lcall xchg gs jg add xor jnp inc add add sahf sahf mov xchg fs add add sahf movsb adcl pop cwtl add mov js jg add xor jnp inc jg jne pop cltd add sahf pushf jns xchg fs jg add xor jnp inc add add sahf xchg test cwtl jnp inc add jle pop cwtl add sahf pushf jl cwtl jnp inc add jle pop cwtl add stos movsb loop jnp inc add add sahf enter jnp inc jg push xchg xor jnp inc jg jb pop cwtl add cwtl jnp inc jg icebp in cmc cwtl add sahf or xchg xor xchg pop lcall xchg fs jg and mov js jg sahf mov sahf test inc add xor jnp inc add add sahf test inc add xor jnp inc add or pop cwtl add sahf enter jnp inc jg sbb sahf cmpsl adcl cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add sub mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov add or js jg icebp in cmc call xrelease mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg push repz jmp xrelease and shrl add pop jle xchg fidivr or mov dec adc decb test (bad) out add pop scas repnz mul mov cmpsb mov js das adc test dec ja out call jle pop out (bad) mov mov aad add mov es mov push jnp adc aad add (bad) mov push jnp jae aad add (bad) mov push jnp adc aad add (bad) mov aad sub inc aad add (bad) mov push jnp xchg push aad add (bad) mov adc stc push pop (bad) pop outsb (bad) mov mov aad add pop out mov jnp arpl dec or js jg sets sub adc neg (bad) mov mov aad add pop push pop scas (bad) mov mov aad add pop es into mov push jnp in lret add into mov mov shrl add jl adc add icebp addl loop dec adc sub fidivl fistl in dec push es inc ficompl clc cmp sub shrb daa jbe push fcmovbe std (bad) xchg shl push daa imul subl jns mov lock xor and xor jecxz sahf iret adc cld fisttpll xchg aam add mov mov add push mov or push add add sbb push out (bad) add ret jmp (bad) xor (bad) xor jecxz push (bad) cs sub in xor jecxz test xor repnz jne pop adc jecxz test dec fistpl pop jbe (bad) sub sarb pop (bad) (bad) cld mov leave popa inc hlt fcom sbb (bad) cmpsb mov jmp jecxz pop inc adc mov inc add dec or cmpsl and push sub adc adc int js jg sbb pop inc jmp int js jg loope shrl add pop push or int js jg cmp pop cmp nop pop (bad) fcomi mov pushf jb inc pop push pop dec xchg mov (bad) pop ja (bad) or pop jmp jp decb js or lods mov push lods adc repz repnz (bad) mov in pushf mov jle mov push jnp testl cmpsb repz repz and ljmp sub mov (bad) repz ljmp leave popa test jle mov (bad) call cmp fisubrl sbb fs jge jae mov mov and adcl in dec xlat sbb mov stos imul adc int js jg xchg cmpsl out in mov mov sar xor lea sub out int js imul adc adc std in lea mov pop inc out subl xchg (bad) in pop add ss mov push clc inc inc in sahf cs mov sbb arpl jmp jle push stc clc ljmp ficoml cltd adc repz cmp test sub push push and ret add pop cs lret pop jmp xchg in test stc or and imul xor idiv push insb and sbb sub adc testb jb jp sti sahf add popa in lcall mov shrb add pop pop adc data16 cmp ja nop jp pop and scas fidivr cmp out jp pop out insb ficompl jge push cmpsl mov pop push fmulp (bad) push jmp loop nop push jecxz push xchg lods out pop movsb pop cwtl aam fsubrp cld mov insb mov adc int3 daa fsubrp cld rclb sub out mov inc fsubp cld in adcl xor fcomps cmc pop lret push jnp adc shrb add pop sahf adc popaw fwait (bad) sbb jo mov mov and out imul mov or mov pop repz cmpsb insb ficompl out pop adc int add (bad) cmp out lods dec sbb push movsl out jp ljmp fldl leave popa mov fwait movb jge mov dec in out mov sub mov push mov (bad) jp or in cmp xchg xor sbb or outsl pop (bad) std cmp inc shl mov jne call shrb add aad and leave pop addr16 mov insb and (bad) icebp dec out jp or mov or sub fcoms pop or mov addl mov jno jge rclb fdivrs in dec inc inc fsubs and mov cli repz pop or fsubrs push push hlt int push pop pop or clc testl push call mov fmuls ss dec insb fiaddl mov dec jnp or push fcomps js sbb xor inc jbe sbb inc fcoms sbb mov sub test lods or out fwait stos shrb add pop ficom push out stos add pop in pop out fdivr out jo shrl add pop ds pop jbe and call add leave popa pop in out (bad) scas (bad) cld popf mov (bad) sub int mov (bad) popf dec sub (bad) pop push in pusha repz and imul (bad) popa pop in push dec ret imul mov jmp outsb sub mov (bad) mov sub push cmp mov cmc std sbb inc inc fsts jle push mov add aaa push (bad) mov repz shrb add int fptan cli mov icebp cmc neg out mov inc ficoml push sbb pop sub (bad) iret mov mov inc shl pop sub (bad) flds out jo (bad) movsb dec push push and enter dec jmp xor insb mov adc dec dec fcoms clc xchg push ret fldcw xchg clc imul dec out mov mov mov cwtl hlt jmp add xchg int3 fldt add lret cmp icebp sbb outsb ljmp and aaa imul adc cmc (bad) dec cld and addr16 in add ljmp or mov nop ljmp cmp out cld rclb ds out mov dec fsubs fldt add pop ss iret mov push jnp loope pop cmp repz add pop jno and out movsl (bad) nop jp cmc pop addr16 and jnp loope push xlat ljmp inc and out test jno (bad) cmpsb sub push iret mov push jnp loope sti inc ljmp cmpsb fincstp jmp dec ljmp mov jne fldt add pop data16 pop cmc push and insl dec (bad) in popa jmp mov in mov outsb std aaa jg cli (bad) jmp dec js or or inc add loop dec and js jg imul lods and incb nop jp jmp add in js aam (bad) jp or addr16 and addr16 es or cli enter xor add movsl and mov (bad) std push push ljmp pushf and addr16 xchg sbb jl cmpsl inc xor js pushl jmp popa dec push add and push data16 or ret lea leave popa pop mulb dec cld sub cld jne push dec pop in or jno sub in push in fldt add pop jle and sbb cld fisttpll stc cmc (bad) jbe sbb xor negl jecxz outsb mov addr16 loopne in mov dec call jne out cmp data16 sbb iret mov mov and sbb addr16 fcoms mov (bad) clc mov or push pop sub andl std fnsave sub stc ret pop aam rcrl sub cld adc frstor sub rcrl sub ja loope testl add mov ja,pt add sub inc or icebp mov pop fldt add pop (bad) jmp int js jg popa push out sti in inc pushf punpcklbw mov push jg popa and push in fs fstps int3 mov sub dec ret in mull lods out pop push repnz sub (bad) cs out mov sti imul mull imul mov popa or addr16 add (bad) movsb dec jo out sub add xor sub adc adc add loope in in leave popa jne cltd inc inc sub stos sbb in cmp push sub inc xor in leave popa mov js jg insl test sub adc adc fs sub adc in dec ja cld (bad) iret mov mov jnp adc jg xor add jns sti test inc in outsb mov mov leave decb cld adcl leave popa lea sub es cld add mov sbb arpl cmpsb (bad) mov pop addr16 sub add test (bad) es inc sub ja repz xor (bad) repnz jmp xchg lahf icebp sbb es repnz stos pop adc sub insl push es fs cmp mov adc test out cmp test mov es icebp mov aam add bound jbe popa sbb shr insb inc ret lret (bad) or sub xchg jne lcall les repz mov insb (bad) movsb dec ja pop repnz or pop pop push out ficomp jmp fdivrp std (bad) jbe sub inc add jno les ret fs sbb adc jmp fdivrp in outsl and push out mov fs sti add xor push inc jmp daa out cld mov cld mov mov push jnp (bad) fwait stc or and push ret in or (bad) in out inc sub sub fidivrl jae fs pop fsubr mov push int fdivrp popf mov (bad) sub shlb add jae add xlat out test dec icebp pop int3 sahf daa and aam add add test (bad) (bad) outsl xchg in dec out leave popa adc daa leave call add add fadds sub in sub (bad) mov sbb aam add pop sahf or lds mov sub mov fwait gs mov adc pusha sub pop aaa adc and dec cld and xor jecxz mov andb ljmp mov xchg xchg jo stos mov popa xchg or add leave (bad) es nop daa adc pop pop and push jg sahf push clc int3 loopne bound inc push and repnz scas mov cmc mov jb adc (bad) xchg int3 repnz and lock stos sub es mov adc test (bad) mov out sti mov xchg es cld cmp imul out jns mov js jg adc out sti in cmpsb inc add inc and lock mov (bad) loopne add push divl loopne mov mov cmpsb (bad) sub and add and aam add pop out call mov and loope popa sub xchg bound fstps inc icebp cltd imul mov sub sub adc adc repnz mov push pop neg imul (bad) mov int mov mov and aaa loop and push shr adc aas bound mov mov inc and loop fwait cmpsb aam add pop scas cmc fisubl xor mul or loope xchg aam test mov (bad) shrb add dec and aas shl nop jle or and cmp movl xchg out or add nop jp or push and dec or aam add mov or or aad and arpl dec (bad) popa lea loopne xchg and add and and faddl popl shr sti mov fwait es and sbb pop jnp loope mov mov out sti in cmpsb lret sub mov mov cs fsubrl push pop push (bad) (bad) out add pop (bad) add mov add add jl jle jp jmp stc bound divl scas xchg fdivrl mov xor jo jo pop out ss (bad) sub jl jle push sarb inc mov add add popa lahf call adc and (bad) divb stos (bad) pop repnz js (bad) and inc jmp add rolb inc cmp testb shlb jbe out add dec mov mov dec icebp fiadd lahf jl decb add pop mov add add add add push mov sub xor add idiv pop sahf and mov jg jns jmp jbe xlat sub pushf add adc in lods sub push in ucomiss cmpsl (bad) push icebp cs jl decl cli fs xor mov add mov jne vmovupd inc mov mov sbb lods (bad) je xor dec jns jmp jnp pop lret sarl add addr16 pushf adc or out jp jge in out add (bad) xchg jmp cmp out (bad) jmp mov mov add mov pop stos cmp out out clc (bad) mov loopne je adc ljmp add pop cmp (bad) test push add loope pop add xor mov and (bad) cld or stos inc jl call insl jo mov dec jl (bad) (bad) sbb mov sbb add jg (bad) lods sub push in cmp fwait mov inc push es sti aas hlt popa std loop push repz dec xorl or jg int3 add lahf idiv lods sub push in call loopne mov cld or (bad) jmp dec sti imul jno or dec into jle fstpl add aaa fildl or iret pop ret adc sub inc (bad) push in iret mov xchg push (bad) std (bad) xor ja ss lcall push xorl hlt out cmp jecxz xchg push paddw add inc xor mov xor incb xor inc push jg in rorl test andb mov pusha add cwtl stos std push sub jbe or or aaa xchg add jnp mov mov lret (bad) enter in adc int3 inc add jae bnd test insl and pop syscall lcall dec bnd inc rcr mov out or add std inc add int3 mov repnz test gs sbb jg in loopne cmp xor push in ret mov dec idivl cmp (bad) jmp ret movsb or add ss pop out cmp adc inc add loope add sti mov dec push das xor jl jp nop je rolb cmpsb les push add add popf cli pop push cmp repnz ljmp xor adc add xchg hlt add cmpsb adc outsb mov mov add xor (bad) das (bad) and inc ret lods (bad) call jl cli jnp or popf mov jae or push arpl in (bad) push getsec roll and ret test push add xchg inc aad pop call mov das in ret or (bad) pop cmp add mov jg lret add sbb (bad) and pop push hlt jl jnp jge jmp xor mov add out cmc aas xchg loop loope test out leave pop scas sarl repz sbbl idiv fldl push ljmp cwtd xchg pop (bad) sub es sbbb das inc test push in push pop out rorl stos lock adc sbbl push outsl xor dec movl fisttp (bad) fstps les insb pop jbe adc mov sbb adcb push dec pop cld decl mov rcll or dec loope ret addr16 js and hlt outsl outsl mov outsl xor inc or rcr iret test or cld jns pop stos pop jg or pusha jo mov out sub lahf adc es xor jno sbb or jmp out xchg and out inc pop mov (bad) in cli mov xchg adc jno jge xchg xor sub xchg scas jmp xchg xor movsl aas (bad) cld jmp lods xor lea pop cli aad jl (bad) xor repz pop push cmp cmp cli imulb loope mov inc fistpll sti hlt sub (bad) sbb outsb mov xor inc add pop dec call es mov sti bound adc mov cs cli mov gs lret cltd cld iret lret fucomp or icebp dec push pop stos pop add add lds clc push cmp dec mov push push cli push nop push and (bad) rcr or insl in mov stos ds sbb mov jmp cmpsl add insl repnz aam push cli mov jg pop xor incb dec repz add push (bad) mov push push gs sbb jmp and push mov pop inc cli xor xor lahf sbb rorl notb lcall (bad) mov lret repz loop pop mov and jae movq insb arpl aad into and xor repz push aaa lcall loop fsubr cmp fstl jg or in mov insl gs inc cli aad int3 and jg jge jae push sub pop or (bad) fucomp cmp fist xor jmp sahf mov movq outsb addr16 inc cli aad into es xor repz pop sub pop or mov jmp gs loope aad pushf (bad) xor jmp lahf mov movq outsl imul daa (bad) xor repz pop sub pop or mov jmp gs lret movsb aad pushf xlat addr16 or in dec std movq push aad fisubr (bad) xor repz scas cmp pop or mov jmp gs int aad pushf enter jmp popf dec (bad) sti imul fsubrl (bad) xor repz scas cmp pop or mov jmp gs iret cmpsb aad pushf leave imul decl jg push jp cli aad fisubr (bad) xor repz push cmp mov inc shll imul mov add aad jg cli add (bad) xor cmp notl mov out jmp inc mov std ret mov call fisubl and inc cli adc ds int repz insl push lcall imul cmp out cmp in fs jp sarb jae xor mov mov cmpb lea out loopne aad sbb jmp cmp jp call adc stos (bad) adc repnz aad lcall (bad) int3 cmp cmp out fnop aad sbb jmp cmp or jg (bad) loop inc cli push sub test adc repnz aad lcall or out fdiv aad sbb jmp cmp push movq in inc cli push das or mov adc repnz aad lcall or jmp out fdivp aad sbb jmp cmp or jg mov mov cli push sub xchg adc repnz fisttpll idivb jmp out loopne aad sbb jmp inc repnz jg (bad) call sub cmp repnz sub xchg inc jmp out dec add aas sbb jmp or jg mov fadds push sub mov xchg jge repnz sub test inc jmp out dec add out or fs or jg pop flds push sub mov xchg jge repnz sub test inc jmp out dec push aad sbb jmp cmp pop movq (bad) fiaddl push es mov xchg jge repnz aad lcall jnp inc jmp out push pop aad sbb jmp xor jp enter push sub mov repnz aad lcall jp inc jmp out dec sbb aas sbb jmp xor push movq ret cli push and lea cltd jge repnz aad lcall jns inc jmp out dec sbb aas sbb jmp xor push movq (bad) fldl push daa sbb lods jb jge repnz aad lcall js inc jmp out dec sbb aas sbb jmp xor push movq (bad) fiadd push and (bad) (bad) xor lods jb jge bnd xchg lcall jg inc jmp out push sbb aas sbb jmp cmp push movq enter push and cmp bnd mov in jmp out pop or aas sbb jmp or ret cli push and xchg (bad) xor mov jge out inc nop ja iret (bad) fcmovne pop jo push mov mov std mov outsl js jle jo in mov xor push js add out lds push cmp pop jp sub push pop inc mov das jp and jmp rcl cmp or (bad) stos mov mov mov mov add pop shr imul test jg loope (bad) hlt (bad) cmp pusha or lods jmp xchg (bad) push cld mov mov test ljmp adc jle jmp push data16 xorl and adc mov les sbb cs or (bad) xor cmp (bad) cmp (bad) mov push lock mov outsl std sbb ss cmpsl jle adc jb stos jg pop out (bad) xor mov add std repnz jle jmp int test scas xchg ret iret pop add sahf adc cmpsl js cmp rcrb sbb push xchg repnz imul addr16 lcall mov jno lods add out add sahf dec jmp lods cmpsb inc jl repz mov sub or aad inc jns fstpl movsb mov dec cmp sub (bad) nop jle repz or mov (bad) inc sub push inc jb aam lret mov (bad) into repnz sub lock jl mov xlat dec jmp into popa xor xchg notl jmp (bad) pop cmp pusha negl add das adc div lahf out jecxz jmp cmpsl xor sti mov sub xchg mov or xor adc mov in lods iret aam jecxz xor adc mov fstps xor ficoml pop pop je inc popf mul hlt add and mov stos rcrl lock xor (bad) int3 mov and mov jmp rcrb mov mov (bad) ds loope aaa or in clc rcrb sub cmp adc add loope pop test dec cmpps or aaa add loope push add dec cmpps fnop stos add loope push cld sub imul stos add loope push hlt sub cmp (bad) lods add loope push lock dec cmpps (bad) lods add loope push call cmp enter cmp insb push les dec cmpps or scas jmp dec mov cmp inc mov jae loope dec mov dec cmpps push mov loope dec stos xor cmp inc mov add loope dec mov cmp inc scas mov jae loope or push cmpps fimull loop adc dec incl hlt adc test je out jae outsb or loope (bad) dec xchg mov aas cmp mov lcall or mov test stos fstl or inc dec add decb or mov mov sahf fistp push cmp inc add movsb loop mov xor je daa andb mov push cmp add incb inc sub xor inc ss jo cmp and add inc cs add (bad) and push inc stc add inc sbb in push jo sub push inc cmpsl jecxz xor dec add (bad) (bad) xor inc stc add orb dec add (bad) fnstenv or fcompl cmp mov ret mov (bad) xor inc stc add mov (bad) dec add dec xor fs jge les ret xor inc pop fcompl cmp lock adc mov hlt xor inc cmpsl jecxz xor adc mov cld xor dec cmpsl jecxz xor adc mov in jecxz cmpsl jecxz xor adc mov in xor dec pop fcompl cmp cmp int add (bad) xchg xor fs aas ret lret mov pushf ss cmpsl jecxz xor adc mov ja jbe movsl jecxz xor adc mov add daa insl cmpsl jecxz xor adc mov or and jecxz xor adc mov xor sbb jecxz xor adc mov cmp pop push cmpsl jecxz xor adc mov and sqrtps mov rclb mov sub push pop fcompl cmp movsb pop aad sti mov (bad) xor xor cmpsl psrld ret and push pop fcompl cmp jbe xlat adc mov repz push cmpsl jecxz xor movsl out daa (bad) sti and push cmpsl jecxz xor movsl out daa (bad) jecxz call xor movsl out aas mull adc les add adc mov jge pop add cli ds sub xorl fsub adc sahf pop rep push dec jp add mov out add mov mov xchg jg std mov idiv inc sahf jl call jmp add sub inc push add std pushf fist or sar xor inc pop dec sahf jmp js jg xchg out icebp in das inc and mov add add pop inc cmc mov add std (bad) push add push add sub repz icebp and js xor cli leave scas push bound jmp adc adc testb std (bad) in and addr16 jbe or inc push incl lea (bad) push clc andl jle,pt inc in jg mov sbb popl dec clc jbe (bad) mov popa push icebp sbb or or mov sub movsl mov hlt inc xchg mov or mov xchg es adc add add sahf add lea leave fildl sub sbb xchg iret mov or pop inc and popa jbe imul inc outsl repz cli mov iret xor add mov mov mov enter sahf pop loopne (bad) scas inc pop cli cmp push gs xchg enter add inc push sti add jg push cld sub cmp cmp icebp stc mov testl leave cld cmp xchg icebp mov mov (bad) repz enter add jns or lcall cmp inc repz cltd cli (bad) sahf mov mov jge xchg (bad) xor dec dec lret sti add outsb add incb dec repz stc cli into sahf xchg imull jge xchg insb icebp adc repz or add mov out push add testb repz pop mov jge out icebp insl (bad) xor repz or add fwait ret aas add into inc test adc pop test jge idivl mov and push or add jmp (bad) add xchg add dec and idiv dec xchg js jge xchg mov or add sti add push add sahf add add inc xor cli out sahf mov jmp jge pop mov jne mov push scas dec repnz mov das add xchg add xorl add cli negb daa js jge addr16 dec (bad) mov lret push scas enter fwait ret lcall mov (bad) dec sub jg jb sbb (bad) sahf rcll scas das js jge ja icebp inc (bad) mov mov enter jmp iret inc add lcall test loope cli push sahf leave idivl iret aaa js std cmp movsb icebp pop (bad) mov (bad) dec mov enter jnp fildll pop pop sub (bad) repz jns push sahf (bad) imull iret aas js std sub lods icebp push (bad) mov shr mov add ret out push add mov les sarl sahf fsts cmp cmp icebp lods (bad) mov ljmp add ret aas jle in mov push les adc cli push sahf loope sub sub icebp movsl (bad) mov mov mov add add data16 pop fistl jbe movb sbb es jmp js std cmp (bad) icebp mov repz add add dec add pop jmp jle fiadd xor cs icebp imull fistpll std test int3 icebp mov and cs or das inc add sahf (bad) repz jg xchg inc add jmp sub hlt adcl xrelease arpl (bad) in clc dec mov cmp add cld and or cld mov (bad) jecxz (bad) movsl push jmp sub jl sbbl clc sarl imul lods inc add loop cltd add or jnp mov mov xchg ret fwait ret inc push shlb das cmovp iret pop outsb scas push aam add scas jg mov lret jns push mov loopne inc decb and dec cld fs mov or cmp sbb out negl mov nop jns inc jle std inc js push test mov adc inc (bad) jmp aam subl jecxz mov cwtl add or mov and add repz icebp les cltd add mov gs jle sbb imul add arpl notb test rcrl fs cld xchg adc cmp adc inc jg repnz and mov (bad) sub cmp in stc sahf add pop movsb les inc inc jle hlt sbb push repnz mov cli or inc (bad) sub lret cltd add jns inc aad pop inc jg jle add mov subb mov adc cltd add jnp pushf mov mov cltd stos fbld sahf or shrb out neg sti enter (bad) sub clc mov push xor inc in jmp mov cmpsb in mov subb std movsb xor add adc js jle je mov or lock imul das sti mov sub push sahf mov xor mov repnz les iret call cmp xor std je out mov repnz das into sbb sahf pslld lods (bad) cmc jno mov sti js in dec subb jnp clc fimul or in add popf inc jg decb xlat or xchg push mov adc lahf stc bound cltd and loopne les repnz mov (bad) in (bad) xor push or subb jnp clc and push cmp jnp inc jg repnz cld or (bad) sub shr testl js jle push arpl imul sub es mov sti jmp adc sub js xchg add addl repnz mov repz sub jge daa sub adc fwait add mov jle hlt xchg lods or sahf or xor shlb call imulb mov in push xchg cmpsb and adcl repnz (bad) rcrb ret jge and add mov addr16 ja add ficompl mov jne adc add sahf or mov mov push and fidiv sahf or test mov in cmc cwtl add mov jnp inc add add sahf or xchg inc dec inc xor or test mov in cmc cwtl add mov jnp inc add add sahf or xchg iret mov xor gs add add stos fsub inc fs add add sahf or xchg inc fdivs cltd add sahf or test mov in cmc cwtl add mov fs add add sahf or subb js add add add sahf or xchg mov fstl loop pop daa repz sub inc jg icebp adc pushf cli xor xor mov sti xchg add sahf psllq jg loope imul add and xorl inc inc jg lahf adc testb mov inc js add adcl cld dec mov sbb repz lock mov pop cmp rolb sahf test or aaa jg repz ret repz inc popa adc add (bad) sahf xchg jmp lods out mov jmp movsb adc lods cmpl xor cli mov (bad) stos mov arpl pop (bad) repz mov mov sbb sbb les jmp mov mov std cmp enter push mov mov loope incl and mov icebp cld sbb xrelease xor add jle add cmp inc add rdtsc sahf or ret mov or icebp sbb push pop cmp push jg mov and mov icebp or and xchg or in cmc cwtl add ja js add dec xor fildl js mov in cmc jecxz daa pop pop cmp enter pusha push dec testb pop sbb xchg push (bad) push lock (bad) out mov fwait xchg and loop mov cld mov gs push adc call scas outsl mov enter adc (bad) fwait movsb pop shrb and cli xor and dec dec hlt repnz or mov adc mov adc repz (bad) xor ret cld sbb push adc outsl clc je daa loope iret leave cld inc xchg shl fcoml add (bad) popf mov pushl or lcall inc push in and stos aas call imul sahf loop mov imul sbb sbb cmp pop push push mov cltd and jno jb andl pushf addr16 (bad) pop xlat cwtl loopne jbe xor sub sub das add das fs imull push aam xchg repz lcall insb mov icebp lahf and cmp xchg mov lcall (bad) fwait loope mov push rol jg sub jl repz jge out mov mov in ljmp repnz addr16 mov cwtl rclb jle sub sub jle and pop pop inc mov lods sub mov and sahf retw sti nop les sub dec mov mov (bad) (bad) pop pop mov das jl lock js loop jmp aas call arpl daa mov lcall sarb std or jl and xlat jns repz in daa insb lea rorb pop cmp and lcall mov add repz jg rorb xchg clc mov (bad) sbb inc push mov jmp fisubr push andl mov in je or rcrb add cmp and inc pop mov out push in inc lods outsl xor mov jae xchg sub popf addr16 mov nop les jns sub or cmc and jge out mov lcall (bad) andl (bad) cmp mov or sarb std insl xchg insb shr test mov hlt sahf push pushf ret sbb fsubrl sbb sbb jl das pop fdivrs loope push mov iret mov lock fs lea mov or sarb push sub pop adc mov in and stos xor lea and sahf addr16 mov cwtl (bad) divl rol jg sub add cltd mov in imul das (bad) and das pop fstpt mov lods and jmp mov popf inc daa (bad) pop sub xor sub ljmp add xor repnz jge out mov lods dec lds xor (bad) lea (bad) popf data16 lea std (bad) (bad) pop addr16 push ds add hlt das pop fistpl inc mov cmp jl and pop push push mov cltd inc leave add mov repnz shrw jbe in push cmpsl pop pop mov or jle and pop pop inc mov lods sub mov std lahf and mov jns sub and aad out push roll and insl mov shl jecxz dec pusha add movsl aas cs (bad) movsb mov fcomip adc push cmpsl fwait stos adc sub or inc add das pop fistpl inc mov lods sub mov lahf inc ret xlat cltd loopne mov in push cmpsl pop pop mov sub jle and xlat jbe hlt push out sub mov cmp pop xlat cwtl loopne je adc jl sub push jns,pt cs jl dec sbb mov cwtl inc shrl int dec and pop cmpsb inc mov lcall insb mov xchg lahf dec and xchg mov in imul and sub jg repnz cltd dec lds ds lea lcall cwtl mov push mov das pop jge xor aam out mov cltd dec lds xor ljmp lock and cmpsl stos adc mov (bad) add add aad xchg repz lcall mov xchg lahf dec and stc je (bad) shrb std or pop add cmc and jae out mov lods and stos cmp jbe (bad) es popf fs fwait loope (bad) and push cmpsb jl sub or and sub jl loopne gs and dec mov sub push cmp call lcall daa xlat cwtl fist (bad) jg sub add adc cmc and jp out mov cltd inc iret add imul xchg imul fwait loope je push rol jg sub xor js loop roll inc shrl in jmp mov std pushf arpl stos daa aam sub or iret push cmp std stos lock pop ss (bad) mull pop (bad) jnp loope addr16 sub jno jb andl mov xlat cwtl fist sub (bad) push sub pop jno,pt mov out mov fwait daa insb mov insl xchg mov sahf fs loop leave and push mov or mov mov lcall movsb cmp xchg imul xor ljmp lahf lahf inc (bad) mov shlb adc pop pop lea add inc pop xor (bad) hlt das pop fstpt push aad sub outsl mov adcl xchg mov psrlq pop pop mov or hlt and js loope push mov addr16 mov sahf popf inc and fdivrs xchg lahf dec and divl rol imul sbb push jle and aam out mov lea rorb pop cmp arpl lea xchg or sarl ljmp pop pop add repnz pop mov out mov lahf inc leave add rorb lcall add nop ret xchg mov or (bad) jg sub add lods cld or out dec cltd test sub (bad) out scas mov daa aad (bad) pusha pop cmp fdivrs (bad) mov stc add lret dec or add dec push rorl lcall pushf loop je or (bad) jl sub or arpl and mov push push push roll inc iret add jmp mov cld popf and xchg mov adc pop pop mov jle repnz and js loope push lods mov mov popf dec and mov or sub insl fnsave jbe psrlq js sub sub pop adc fstps inc push aad sub lea pushf popf inc and cmc test out push mov add jl and pop push push push in mov mov sahf and nop les rcrb sbb and cmc sub jg add sbb adc cmp jp loope cwtd inc jbe aas call andl mov xlat cltd fist lds mov (bad) jp and fcomps push mov lahf sub mov xchg lahf dec daa mov pushf ret sbb fldt sti add jle and sub pop push push push jmp pop imul xor in inc lods outsl pop addr16 mov lahf lahf inc and xchg mov push rol jl sub push aas jle and dec pop mov arpl jmp outsl mov test std lahf arpl lea decl rol jl sub or cmp jns repz roll inc lods outsl cmp jae test icebp pushf push jl fidiv jae lcall pop aad loop mov xor sub sub sub pop adc cmc sub js loope cbtw sub mov sahf popf inc and xchg mov jns sub sub jge xor mov push push mov lods dec lds pop imul jne xchg sub lahf data16 mov xlat cltd fist mov dec mov cwtl sar std or sarl add cmp and fnstcw repz in mov jbe test icebp lahf lea cltd fist cmpsl jns sub cmpl lcall movsb xor mov and lahf addr16 jecxz leave and rol jl sub or jl das jg and shrb xor pop ds cmp dec pop mov lcall or call imul stos daa shlb in imul adc mov fwait repz mov dec insl nop mov sahf push lcall mov add cmp dec pop mov aad and dec and jge out mov cltd sub (bad) test std lahf arpl mov aad loope (bad) and imul adc jge out mov outsb xor ljmp lcall nop les jl sub add cmp jg repz jmp aas jmp mov lock and mov sub popf data16 (bad) sub (bad) (bad) pop pop (bad) std or inc pop xor hlt inc pop mov fwait loopne imul jne pop cmp pop shlb in push cmpsl jns sub add jge and and jp out mov lods dec lds aas call data16 lock and xchg mov adc js dec mov nop ret xchg mov push rol pop mov or aam pop aam out mov lahf and ljmp sahf popf inc ret sti nop (bad) hlt jbe call sub daa and hlt dec pop mov cmpsb dec mov lods and movsb xor ljmp cld popf fs (bad) shlb or (bad) std or pop adc jns jl sub or jge xor inc sbb mov lahf dec lds cmp jb cltd and pop shlb or lds sub sub jns das jg hlt dec pop mov lcall mov insb arpl shrl (bad) and rol jl sub or jg hlt dec sbb mov mov int dec dec pop mov cmpsb inc push aad inc shrl call bound (bad) lea mov in push cmpsl jle sub or inc pop xor hlt dec pop mov fwait hlt mov cltd inc lods outsb ds bound daa mov loope mov or sub daa and pop push push mov movsb xor mov push bound std inc lods outsl cmp jmp mov popf dec and xchg mov pop pop popl (bad) jl and mov push xor mov lcall nop ret xchg mov in imul and fcomps inc push in dec lds push dec insb outsl mov (bad) and sahf imul (bad) cmc test xor inc shrl (bad) and push mov push ds adc (bad) jp out mov lods inc jbe pop imul xchg push inc (bad) mov negb (bad) (bad) jl sub or jp das jge repnz jnp loopne push lods sub mov cld popf and stc je or sub sbb (bad) jl sub push jl,pt and aad xchg repz jmp push dec insl outsb mov sub negl out push mov or pop xor and inc and jns loope push lods and stos pop addr16 xchg mov popf and stc je or sarb push sub jg xor cmc das pop (bad) out mov cltd and cmp dec sbb push in inc lods outsb xor mov es pushf push cltd fist cmpsb jl sub sub pop ss cmp jge out mov cwtl inc lods outsl push dec insl nop mov lahf arpl lods add cltd loopne mov in push mov or (bad) and dec pop mov fwait repz fwait sub mov xor dec jecxz mov cwtl fist (bad) jns sub jge repnz pop fstpt loop push mov in jmp mov sahf popf inc and xchg mov js sub or pop add fstpt repz lods daa insb mov dec mov lock fs (bad) cmp je (bad) sarb cld or jl repz sbb jle or inc add dec pop mov cmpsb dec mov lods inc leave add in jmp mov pushf data16 xchg mov push rol jg sub jle,pn repnz jbe repz lcall insb mov xchg lahf inc ret cmc pushf rcll jg sub or fs testl mov cwtl and movsl xor or push aam pop inc mov mov jmp insl mov icebp lahf addr16 (bad) pop cmc pushf rcll jns sub add and aam pop inc mov cwtl inc leave add call push arpl stos daa aam jecxz mov push rol pop pop mov add cmp and jbe repz lcall mov std pushf arpl xchg std cwtl cmp jmp mov hlt sahf push popf loope mov xor sub lea or and das pop fistpl push mov lods and stos push dec insl jno jb push xchg icebp pushf push nop les jg sub add cmp jge out mov lods daa insb mov call andl mov xlat cltd loopne jbe (bad) (bad) js dec mov cwtl rclb fldt and hlt inc pop mov pop inc mov cltd inc iret or rorb push xchg std pushf arpl (bad) ds loop je psrlq pop pop mov or inc add repnz pop mov cbtw and mov nop popf dec daa mov jecxz mov or (bad) jle sub daa and jns jl sub or and cmc sub jnp loope in sub mov popf and cwtl loopne mov xor sub (bad) call and aam pop inc mov cwtl mov mov es popf inc int3 mov sub call sub ss (bad) mull pop fnstcw loope in and cli add (bad) imulb pop ret fadd leave pop jb ljmp aas jl and fnstcw mov lods daa insb lea rorb and pushf addr16 lea cwtl mov imul cmp add jp loop imul jne andl mov sahf jecxz test push rol pop mov pop adc das pop fstpt loope push mov mov mov push pop pop adc aam xchg repz aad and jmp mov cltd and daa hlt sahf ret xchg mov psrlq js das sbb push pop add hlt dec pop mov fs sub outsl mov test lock fs mov hlt sahf ret divl rol imul add cmp pop xor mov cbtw inc shrl imul xor jbe repz mov jmp xchg mov lahf inc and loopne test or (bad) jle sub daa and inc and pop push push mov cwtl inc shrl in jmp mov sahf popf inc and cltd mov or sarl std das pop jge xor hlt das pop fdivrs loop rorl mov mov daa nop popf dec daa (bad) pop aam add pop sbbl mov or lds mov add jle and fistpl push mov mov imul insb jl sub sahf push lahf jecxz jbe or sarl ljmp pop jp and repz jbe repz lods inc iret add addr16 outsl mov xchg pushf gs sar (bad) call sub insl fnsave mov call sub or jnp das fs hlt das pop fdivrs loopne aad sub (bad) xchg (bad) inc xchg popf gs mov sahf jecxz jbe psrlq pop pop (bad) sbb pop inc pop xor and and jbe hlt push rorl jbe ds lea lcall aam jecxz mov push rol pop pop mov (bad) pop add mov test add jge repz pop push push mov lcall mov std pushf arpl lods add mov in push mov add and cmc and jp loop addr16 and ljmp icebp pushf push pushf loop jbe xor sub sub or pop setg sbb mov lods daa insb mov iret mov push mov cwtl and movsl push dec insb (bad) pop cmp shrl je or sarb decb aas jl das lahf jl dec pop mov push and movsb xor lea jae pop xor data16 mov aam jecxz test or sub cmpl out push in and dec mov icebp lahf addr16 mov aam sbb pop sbbb xlat cltd loopne xchg out push mov xor pop movq out mov lods daa insb mov insb insl mov pushf popf inc (bad) lea lcall (bad) js sub add cmp inc pop mov push push mov lods inc jbe pop addr16 fwait mov xchg xchg lahf inc (bad) mov hlt sahf ret hlt jbe push rol jg sub insl fnsave mov or lds (bad) decb jns,pt jl,pn repz pop mov pop inc mov cltd and dec (bad) pop xor cmp leave and imul cmp and pop push push mov lcall insb mov nop popf dec and xchg mov js das sbb pop jle and repnz jg add cld or jl repz sbb mov fwait mov mov test lock fs aad loop je in push cmpsl pop pop lea cs jl inc sbb push out inc shrl call andl mov cwtl loopne (bad) and push cmpsb jl sub or and mov push inc jbe xor jmp imul jp loope push pop imul jbe test nop popf dec and xchg mov jns sub (bad) jnp das jg cmc and pop push push push jmp ds mov (bad) popf addr16 mov sahf ret cltd mov psrlq jle sub add fdivs out mov lods inc jbe ds lea icebp pushf addr16 aam add xchg sub lahf data16 xchg (bad) and rol js das std das pop pop adc fnstcw mov fwait daa insb lea rorb andl lahf addr16 loopne jbe xor sub sub sub inc pop xor jnp loopne push sub mov repnz data16 (bad) pop hlt sahf ret hlt jbe psrlq pop pop (bad) std insl jb (bad) xchg dec test mov lahf lahf inc and divl call cld or mov xlat jns repnz lcall jno jb cltd and popf and pushf rcll addr16 add (bad) (bad) dec pop mov imul push imul nop (bad) divl push cmpsl pop pop (bad) decb jge,pt (bad) xor leave and push mov or mov mov push cmp jbe test lcall pushf rcll fldt add xlat pop pop inc mov lods and insl jno jb inc xchg pushf gs mov shlb xor sub mov push aas jle and repnz sbb mov cmp cmp and pop cmpsb inc push aad sub mov icebp pushf shrl loop mov imul decb aas jge and das pop fdivrs out mov mov imul insb push and test or (bad) cld or pushf jl and jp out mov lahf sub (bad) mov push jmp inc les enter and push sub jl and xlat jl loopne push lods mov mov sahf addr16 mov fist lds sub or and (bad) pop pop inc mov lcall insl mov lock gs mov shlb call (bad) push sub jl das mov aam lcall add imul pop pop inc mov lcall mov cld popf and xchg mov xor sub sub xor jge and cmc and jae out push jmp aas call bound daa (bad) pop cmc pushf ret pop psrlq pop mov or adc xlat jbe hlt push jmp xor lea data16 std lahf arpl xchg std cwtl push dec insb mov lcall cmpsl ficom mov or arpl and aad fwait out mov fwait daa insb mov jmp mov test (bad) popf and cmpsl ficom sub (bad) push sub pop add mov push push mov lods sub mov andl lea lcall sub dec mov sahf ret sbb call call push jl dec pop mov gs sub mov icebp pushf push fwait loope mov in push cmpsl pop pop mov xor inc add mov addr16 lea lock fs (bad) ds loope mov js sub sub jle and das jg and fsubrl adc xlat pop push push mov lods and in mov lcall popf loop (bad) and sarb ljmp add and cmc and jns loope arpl rorb and pushf push cltd loopne jbe or mov (bad) inc add repnz jns loope imul pop (bad) pop push push mov lods inc jbe push dec insb mov sahf popf inc and ficom imul and sbb cmp and jl loopne aad and dec outsl mov adcb aam loop (bad) and push mov add jl and repnz pop push push mov cltd sub xchg mov popf inc and call xchg xor mov cmpsb (bad) je or lds das std das add mov fdivs repz cltd and movsb ds push inc ret aam jecxz je in imul jl,pn lock pop cmpsb inc push jmp aas call andl mov hlt sahf ret and sarb mov mov adc pop pop mov sub jl and hlt das pop fstpt repnz cwtl inc jbe cmp xchg mov repnz addr16 mov aad loop xchg push rol jns sub lahf jl and jae out mov lods daa insb mov iret mov jb inc xchg xlat cwtl loopne mov (bad) (bad) jl sub push aas jg xor jns pop pop mov adc cmc das pop fdivrs loope aad dec lds xor in fwait mov addr16 xor lea lahf jecxz mov psrlq jl sub mov mov lcall mov xchg imul popf loop je or sub and aam fwait loopne push lods sub and pop push push push jmp xor mov jb andl sahf and cwtl loopne mov xor sub sub add cmc and jg repnz cltd mov mov nop popf dec (bad) mov cmc pushf ret decl rol jns sub xor jns das andb and pop push push push aad inc lods outsl cmp insb imul pop imul push bound daa mov nop (bad) xacquire in imul add fdivrs repnz cltd inc iret or call mov (bad) popf and pushf ret decl rol jg sub (bad) inc pop xor sub pop pop inc mov cwtl inc lods outsb aas call mov xchg lahf inc daa (bad) pop xlat cltd loopne mov or (bad) js dec mov mov in push mov or cmp pop pop inc mov lcall jno jb pop xor fs loope je adc imul add cmp xor fstpt loop roll and ljmp xchg lahf dec and xchg mov push rol jl sub or jg hlt das jg cmp add cmp adc and dec pop mov aad and ljmp lcall sub in push mov or jge repnz jge out push aad mov jae pop adcl xchg mov pop pop lea (bad) jnp das (bad) and sub jbe hlt mov cwtl and dec sub jns loopne cbtw inc lods outsl pop imul xchg addr16 xor lea cwtl loopne test or sarl or repnz sbb mov mov in jmp mov pushf gs loop mov adc imul cld add and xlat pop push push push jmp xor mov jae andl popf and call inc xchg sahf push lcall mov das add cmp xor mov fwait loope push lods daa insb lea rorb fwait and sahf and xchg leave and imul add mov fs dec lds xor ljmp lock fs (bad) xlat cltd loopne test or (bad) js dec mov pushf ret add imul add fdivrs loope gs daa insb mov insl (bad) andl lahf gs loop test xor sub das sti add jl sub jp loopne rorl mov mov es lahf and cmpsl fistp sub sub sub jg xor cmc das jg and fsubrs sbb push pop adc das pop fstpt loope imul insb addr16 xor mov (bad) fwait loope mov or sarl decb aas jge and xlat pop pop inc mov lcall fwait mov push data16 xacquire in imul and sub jge out push aad sub dec das pop fistpl push push jmp xor mov xor inc shlb or sarl std or jl das jge repnz jns loopne fs and mov (bad) popf data16 lea cwtl fist mov or jp das sahf jl sub jg repnz lods mov mov pushf and jmp mov xchg aad loop xchg push rol jle sub daa das jle cmc sub jbe repz cltd sub mov lahf lahf inc and xchg mov push rol pop addr16 add cmp das pop fdivrs loope gs dec lds xor (bad) (bad) xchg imul lcall addr16 hlt sahf imul rclb jg sub add cmp jge out mov cltd dec lds cmp insl imul pushf rcll fsubrs cld or mov mov fwait out mov lods mov xchg imul mov sahf jecxz je xor sub cld or sbb (bad) pop pop (bad) ljmp pop pop add fistpl mov lahf and jno jb andl sahf data16 mov shlb in imul and mov xchg repz roll sub mov lock fs lea cmpsb (bad) je or (bad) jns sub or aas das jge repnz pop mov pop inc mov lcall mull pop (bad) pop pop inc push in inc iret or call imul cwtl (bad) xacquire xor sub (bad) sti add (bad) mull pop (bad) jae out mov lcall insb mov cld popf fs rcll jg sub (bad) jge and cmc and jp out mov lahf and movsb ds mov icebp addl mov mov sahf push pushf loop mov xor sub sub or jl and jp loop in dec lds cmp xchg mov pushf popf inc shrl mov jns sub xor arpl and jp loop arpl imul dec data16 xchg lahf inc ret sti nop (bad) hlt jbe xor gs mov negb (bad) (bad) pop mov or cmp jns loopne cwtd sub mov lahf inc daa mov loop (bad) and jmp jle sub sub inc pop xor mov push lods inc jbe cmp xchg imul stos daa aad loop je or sub and rol pop pop lea or jns das jg hlt dec pop mov cmpsb dec mov lcall mov lahf lahf inc and hlt jbe (bad) sarb push ds add xlat pop push push push aad inc lods outsl ds (bad) xchg imul mov (bad) lcall sub sub sub inc add mov xchg repnz lcall repnz jns repnz lcall fwait mov andl (bad) cmp je adc jg sub xor jl and das pop (bad) out mov mov imul jbe test icebp pushf push sahf loop mov (bad) sarb add cmp add and jns loope out and movsb ds imul inc jbe xor mov es lahf inc and xchg (bad) and imul and aam push push mov lods sub mov mov popf and xchg mov psrlq imul add cmp pop xor cmp pop pop inc push jmp aas jmp mov repnz addr16 mov loopne mov xor dec (bad) mov sub or (bad) jl sub fs (bad) dec pop mov xchg repz lcall xchg mov lahf inc lea fwait loope mov in push mov xor pop adc aad xchg repnz lahf and movsl aas jmp fwait mov mov lahf lahf inc daa mov lcall sarl cld or sbb (bad) jns sub add jl and jns loope jmp xor ljmp lahf lahf inc and loopne mov in imul setg pop mov imul jb fwait and popf fs (bad) pop shlb psrlq jl sub sub pop add repz jae out mov lahf and and sub jp out mov cltd and insl mov pushf popf inc int3 mov negl push rol pop addr16 xor jl and xlat jl out mov lods inc lods outsl pop addr16 (bad) xchg addr16 sub popf shrw mov jl sub sub jg xor fcomps push in sub mov icebp addl mov lahf and leave and rol pop mov das loopne daa and xlat jnp loope in and movsl xor (bad) (bad) xchg data16 lahf lahf inc (bad) (bad) xlat cltd loopne mov adc jg sub xor repz jge out push jmp ds data16 sahf popf inc and mov xor addr16 lea and jmp jl sub add cmp sub pop pop inc push jmp aas jmp outsb mov inc xchg cmp jbe or sarl (bad) pop adc aad fwait hlt mov mov imul jbe pop cmp and mov or shrl call xor push mov add and repnz jp loop push mov out (bad) xchg (bad) inc xchg pushf shrl mov jle sub aas cs jl sub jp out mov fwait inc jbe pop imul xchg imul popf loope mov jg sub push jge,pt xor (bad) pop push push push aad and (bad) mull pop (bad) pop pop inc mov lcall lea sahf popf inc and xchg mov jle sub daa and repz jns repz cwtl sub insl mov xchg lahf inc and hlt jbe call sub das pop pop add dec pop mov aad sub mov icebp addl mov xor (bad) cmp leave and push cmpsb jns sub or ds (bad) and sub jae out mov lods sub lea cld popf and xchg (bad) and rol pop pop (bad) call das andb dec pop mov cbtw inc lods outsl ds insl mov nop popf dec daa (bad) pop aam jecxz (bad) and mov add popf and sahf jecxz jbe psrlq jl sub sub jl and aam push push push roll inc shrl imul xchg (bad) inc xchg lahf data16 mov xlat cltd loopne xchg push rol imul add cmp pop xor and inc and jge out push aad and stos ds imul mov xlat cwtl fist jns sub or sbb lds das sti add cmp jnp loopne cbtw and movsb ds imul pushf loop je or (bad) jg sub (bad) inc add cmc and jg repz cwtl and movsl pop imul push imul pushf ret sbb rol jle sub add repnz pop mov out mov cltd and jl inc and jae out push roll sub mov std lahf and test psrlq js das sbb push inc add sub pop pop inc push in sub mov test pushf popf inc and xchg mov push rol pop pop mov add jnp jg,pn hlt sub jae out mov fwait mov mov andl and movsl cmp insb mov xchg lahf dec int3 mov aad loop je adc pop pop mov or jl and aam out mov mov jmp outsb mov pop adcb sti nop les sub sub or repnz jp loopne push mov call push gs (bad) lcall addr16 lahf addr16 mov sti nop (bad) stc je out push mov or jl dec pop mov imul jne push mov pushf arpl mov sub adc jl sub add jnp jg,pn hlt dec pop mov push mov imul xchg xchg std lahf fs mov xlat cwtl loopne jbe psrlq jns sub sbb (bad) pop pop (bad) decb jge,pt xor repz pop fdivrs repz movsb pop addr16 mov cld popf gs mov cwtl loopne mov push rol jle sub and xlat jae out mov lods mov mov mov inc shlb or sub adc (bad) hlt and jns repz jmp test hlt dec pop mov cmpsb inc push jmp pop addr16 outsl mov cmp gs (bad) fwait loope mov in push cmpsl jle sub or jns jle,pn repnz pop fdivrs repz lods sub mov data16 icebp lahf push cmpsl fist sarb std das pop arpl and fistpl mov fwait and insb nop mov addl mov xchg xor mov loop mov pop pop mov sub jns jle,pn cmc sub jns loope arpl addr16 lea lcall hlt sahf ret hlt jbe push rol jl sub add cmp and pop pop inc push roll inc leave add mov pushf popf inc and cltd mov xor inc and xacquire or (bad) pop pop lea sub jp das jg hlt dec pop mov out mov lahf and ljmp lahf lahf inc and xchg mov push rol jg sub add xlat jp loopne rorl mov mov xchg lahf inc and xchg leave and rol jle sub or jge and imul loopne add aad fwait out mov lods and jmp mov sahf data16 mov negb call mov or pop adc aam pop inc mov outsb push dec insl mov lahf lahf inc and hlt jbe in imul jl,pn repz sbb mov cltd and and and pop cmpsb dec mov lods and insb mov std lahf and je out push mov das jmp and (bad) jbe hlt mov cwtl and jmp mov in pushf popf inc and xchg (bad) and imul add dec pop mov out push out dec lds cmp jmp mov addl mov popf and xchg mov or (bad) jle sub sub jle and mov fwait loopne addr16 and mov sahf popf inc and divl rol imul std das pop pop ss cmp jge out mov cltd inc leave add mov in lcall fwait loope fdivrs std pushf arpl mov xlat cltd loopne mov or das add cmp and cmc and pop cmpsb inc mov lods mov mov xor and hlt jbe or sarl sbb add fstpt loope gs and mov std lahf arpl mov shlb or sub add (bad) and rol js sub or pop add cmc das pop fistpl mov mov rorb sub popf and fwait loopne mov xor sub mov add jl sub pop pop inc push rorl jbe xor mov dec push and mov jns sub jl repz pop fistpl inc mov cmp and sub jge out mov lcall jno jb andl mov cmpsb ficom (bad) jl sub add jl sub jae out mov cltd inc leave add rorb inc xchg lahf and xchg (bad) and sarb add cmp and aam out mov fwait and lea inc les outsl pop addr16 outsl mov mov aad loop mov or sarb (bad) pop setl pop (bad) pop pop inc mov cwtl sub insb mov lcall cwtl mov imul cmp aaa xor inc pop mov pop inc mov lods and stos xor (bad) fwait mov push arpl (bad) pop hlt sahf ret xchg fdivrs lahf lahf inc shrl je or lds sub or arpl and repnz pop mov imul xchg mov sahf popf inc and xchg mov in imul das mov aam xchg repz roll dec lds xor ljmp sahf popf inc daa mov fist sarb or xor push mov das lcall (bad) and inc and jg repnz cwtl sub nop mov sahf gs mov lcall sub mov add jl sub jbe hlt push in inc jbe pop addr16 lea pushf popf inc lea lahf loop mov or mov das add and jnp loope dec cmp cmp and pop cmpsb inc push jmp push dec insb (bad) pop sbbl xchg mov jle sub adc cmc inc pop mov fwait out mov lahf inc leave add mov sahf and cltd mov in imul das fs imull pop fstpt loope push lods sub mov mov lcall outsl mov (bad) es lahf push cwtl fist (bad) pop pop (bad) sbb push jp das cmpl fwait loopne imul jne fwait and pushf gs negl or (bad) pop pop (bad) sbb push inc add mov out sub nop mov popf inc and xchg fdivrs hlt sahf push lcall mov sub sahf jl sub pop pop inc mov cltd daa insb lea call push arpl lea cmpsl fist sub sub add jl sub pop push push mov lcall xchg mov sahf push pushf loope mov call sub or xor rol jle sub push ds add dec pop mov cmpsb inc mov cltd inc lods outsl push dec insl (bad) pop cmp add lahf loop mov adc pop pop lea or cmp and jbe hlt push rorl jbe pop imul jne push mov sahf and shlb or (bad) imul sti add jl and jg repz cmp jl and jae out mov mov call addr16 xor lods and fwait loopne (bad) and push mov or aas jl,pn repz jp loopne in and dec mov icebp lahf push cwtl (bad) divl rol jg sub and mov xchg repz movsb xor ljmp out mov lahf inc shrl call mov hlt sahf push pushf loop mov push rol jns sub das pop pop adc repz pop fistpl push mov stos xor mov push imul popf loop mov or mov sub inc add jp loopne push lods and jmp in cld popf and fisubr imul mov shlb call mov and hlt inc pop mov lcall stos aas call push arpl (bad) pop negl out push mov das lcall adc repz pop pop inc mov lods sub mov pop cmp and stc je push rol pop pop (bad) std insl fnsave je adc jl sub xor inc pop xor mov out push roll sub insl mov hlt sahf push cwtl (bad) hlt jbe push rol js das cld or fs mull pop (bad) jge out mov cltd inc shrl imul xchg xchg pushf popf inc int3 mov aad loope mov jg sub or and hlt sub jg add push sub jg xor dec pop mov push mov dec insl (bad) test std lahf arpl stos daa negb out push mov add and das pop fdivrs loope push xor jmp mov inc xchg lahf and xchg mov call sub add cmp das pop fstpt push out inc shrl iret mov dec mov cltd mov jne pop sbbb pushf loop test or sub or inc pop xor fnstenv repz cwtl sub nop mov lahf addr16 mov xlat cwtl loopne jbe (bad) (bad) jns sub or jl das pop fdivrs loopne in sub mov std lahf arpl lods add jl rorl nop popf dec and loope mov call mov das add and fdivrs loopne push pop addr16 fwait mov (bad) inc xchg sahf push popf loop xchg adc jl sub xor jnp cs jl dec pop mov push mov jmp fwait mov imul nop ret xchg mov out push mov insl fnsave test xor sub sub xor pop add hlt dec pop mov imul xchg imul mov sti nop ret xchg mov or sarl std das add xor hlt inc sbb push jmp xor mov cld popf and xchg mov push rol jg sub push aas inc pop xor sub jg add std das add xor cmp jnp loope arpl jmp mov lcall cwtl mov rol pop addr16 push aas jnp das jge repnz pop mov jmp xor mov mov cmp (bad) and sub das add andb and jns repz movsl push dec insb mov sub aad inc iret add dec outsl (bad) xchg jl sub popf fs mov cmc pushf ret (bad) in push cmpsl jns sub das jge repnz pop mov fwait loopne arpl call data16 nop popf dec (bad) (bad) cmp je or rcrb sbb and inc and pop push push mov cltd mov push mov icebp lahf addr16 aam sbb pop cmp pop aam jecxz xchg adc jle sub xor fstpt loope in and movsl cmp jmp mov jl sub pushf fs mov pushf loop je or sub add jge and repz jge out mov cwtl sub mov andl (bad) pop aam loop mov pop pop (bad) std insl fnsave je psrlq jle sub add inc pop mov out mov mov jmp xchg mov lahf gs (bad) ds jecxz test or (bad) jg sub xor jl das jle cmc and jp loope cwtd mov mov std pushf arpl lea sahf loop (bad) and sub or jl and repnz pop mov test add add cmp and jg repz cltd inc lods outsl ds mov xchg lahf inc (bad) lea lcall (bad) jg sub add cmp and jbe hlt push in inc iret add out jno jae in pushf popf inc int3 mov shlb or (bad) jg sub or cmp inc sbb push out and stos ds sub push mov call push inc lea fist sub (bad) cld or lahf jl and jge out mov lahf dec lds push dec insb (bad) lcall pop aad loop mov xor sub mov or pop adc fstps push push jmp xor mov mov sahf lea add andl pushf gs lea cmpsb fistp (bad) jg sub (bad) jge and and pop pop inc mov lcall (bad) xchg xchg lahf lahf inc and xchg mov or (bad) pop addr16 sub pop ss cmp pop pop inc push in inc leave add mov lahf inc and xchg mov in imul pushf loop mov psrlq jns sub mov fistpl inc push out inc leave add mov andl sahf and xchg mov push rol jns sub sub jg xor repnz js loop push lods mov mov popf and cltd mov or (bad) jg sub xor jns das jg hlt das jg cmp sub sub jle and inc and pop push push mov lods and stos xor mov and lahf addr16 mov aam jecxz test out push mov sub jl and repz and pop cmpsb inc push out and stos xor in (bad) xchg arpl int3 mov sub or (bad) jl sub (bad) pop add fcomps inc push jmp xor or pop xlat jnp loopne fs inc lods outsb ds data16 icebp lahf and pushf ret pop push rol jns sub add jge and repz and pop cmpsb dec mov mov call imul pushf loop xchg or sub sub jg xor repnz pop mov aad inc jbe xor ljmp cld popf and dec mov repnz data16 lea cwtl loopne test xor sub sub or daa das pushf jl and pop push push push aad sub mov popf fs (bad) pop negb or (bad) jns sub das pop pop adc mov push lods and call lcall pop sub in imul cwtl rclb imul cld add add mov fs and dec (bad) xchg (bad) inc xchg popf and xacquire or rcrb decb aas jg xor hlt dec pop mov pop inc push roll sub insb mov xchg lahf inc (bad) (bad) cmp jbe or mov sub pop adc jns jl sub das add and dec pop mov xchg repnz lods inc jbe pop addr16 jno jb push mov lahf gs (bad) pop aad loope leave and push mov sub inc add pop pop inc mov mov out (bad) xchg sub lahf arpl stos pop cmc pushf rcll jns sub sahf jl dec sbb mov cltd sub dec dec pop mov xchg repnz mov call push and lahf jecxz mov or sarl add cmp das jg cmc and js loop arpl imul jbe test lcall cltd fist sarb std or jp das cmpl out mov cwtl inc leave add in ljmp lock and call andl mov negb call (bad) sti add jnp mov aad out mov lcall fwait mov (bad) inc xchg lahf gs mov xlat cwtl loopne mov in imul cs jl inc and jp loope push sub mov lcall aad loop mov or (bad) js loopne jmp jmp add mov out sahf inc pushf (bad) call (bad) pop ret aad sub test or mov xor popf shll imulb jl in cmp inc fwait out mov push into adc cmpsl nop cli xor rcl pusha xor loopne push mov and and popf loope leave and rol pop pop mov push ds add xlat jp loope cwtd mov mov std pushf and mov xor sub mov xor pop adc aam fwait hlt mov lcall mov lahf lahf inc (bad) lea cwtl loopne test adc pop pop mov insl jle (bad) stc mov (bad) sbb mov cmp fdivl adc int3 sub mov repnz lds push mov add cmpsb fist (bad) js das sbb jl,pn repz sbb mov mov call imul cltd loopne je or mov push jl inc pop mov lcall outsl pop imul dec jl sub sahf fs lea sahf jecxz mov call sub sub jge (bad) xor leave and rol jle sub sub jp das pushf jl and pop push push mov lods and stos xor mov std lahf arpl stos pop (bad) lcall sub das sbb xor mov fwait out mov lods and stos xor lea xchg cmc pushf ret and rol jl sub (bad) jge and (bad) pop pop inc mov cmp cmp js loop push mov jmp lea nop popf dec and stc je push rol jl sub sub jns das cmpl aad sub outsl mov sub lahf and stc je push rol jle sub add (bad) jl loopne aad inc leave add in ljmp lds movsb push dec insl insb mov lcall aad loope mov psrlq pop pop mov (bad) inc add mov fwait loope gs sub mov popf dec and xchg (bad) and (bad) push sub inc pop xor fcomps inc push out and jmp mov std lahf arpl mov (bad) fwait loope fsubs into sbb add add cmp sub jnp loope arpl addr16 xchg mov popf inc and divl push cmpsb jg sub or jns mov fdivrs repz aad mov mov icebp lahf and lcall sarl std or pop add mov gs inc jbe push dec insl mov sub loopne push pop imul xchg andl mov lcall (bad) pop pop (bad) sbb xor sub js loop addr16 nop mov popf dec and xchg mov jle sub ds mov xlat pop push push push roll and dec mov pushf popf inc (bad) mov aam sbb cltd and popf and cmc test xor sub mov xor jle and hlt dec pop mov push push push rorl jbe ds data16 std lahf and xchg mov or (bad) ljmp pop jp das jl lock and js loop addr16 inc lods outsl pop imul jae (bad) and sahf push cmpsb fist jns sub insl fnsave je or lds lea and repz pop fstpt loope push inc shrl dec insl mov lahf lahf inc and xchg mov pop pop mov add jge and repnz pop pop inc mov cltd and stos pop imul xchg bound and xchg leave and imul ds add cmc and jg add sti add jl dec pop mov xchg repnz mov dec insl mov repnz and lcall mov lea add jle and cmc and jbe repz lahf sub outsl mov in cld popf and xchg mov pop pop mov xor pop add repz and jl out mov cwtl inc iret or call sub out and stos pop imul xchg (bad) inc xchg and lahf jecxz jbe or sub das pop jl and mov fwait loope roll sub mov icebp pushf addr16 mov negl push rol pop mov jp and (bad) pop cmpsb inc mov lcall nop mov lahf fs mov aam sbb andl lahf and xchg mov jle sub pop xor fnstcw loope push lods mov insb imul lods add pushf rcll pop pop (bad) std das add xor cmp pop push push mov lahf and dec (bad) xchg arpl (bad) mov hlt sahf ret hlt jbe push rol jle sub aad loope (bad) and rol jns sub or jp das cmpl fwait hlt mov lods inc jbe xor (bad) mov pushf popf inc shrl mov or (bad) jle sub add inc pop mov push push push aad sub insb mov std pushf and (bad) and rol jg sub add jl inc pop mov test jle or pop adc mov push mov out insb mov lcall negl in imul xor aad out push out inc shrl in ljmp xchg lahf dec and xchg leave and push cmpsl pop mov or pop add dec pop mov push mov int dec inc sbb mov fwait daa insb lea call arpl and xchg mov js das add cmp and inc sbb mov lods and stos push dec insb (bad) test lahf lahf inc and jecxz jbe (bad) (bad) pop pop (bad) push sub pop adc aam out mov stos pop addr16 insb mov sahf popf inc and ljmp (bad) popf data16 (bad) cmp mov out push mov add jnp das fs imull push aad out push roll inc iret or in ljmp icebp pushf push lahf loop mov pop pop mov sub pop add fistpl inc mov stos aas jmp insl mov lcall negl xor sub dec mov mov or lds mov or ds jl repz pop mov xchg repz roll dec lds ds imul stos pop aad loope leave and sub add jle and aam push push push in inc lods outsb ds imul mov aad loop mov push rol jle sub ss and das jg and shrb sub jg xor mov fs and dec mov cld popf shrl jbe or sub xor inc add hlt sub jae out mov stos xor (bad) mov xchg lahf inc shrl je or das sbb sbb jl dec sbb mov cwtl sub dec and jp loopne jmp ds push and cltd mov or sub xor inc add inc pop mov push push mov test mov lahf inc shrl leave and push mov add and mov fwait loopne fs inc leave add in jmp mov (bad) popf and mov adc sbb (bad) ret pushf mov fadd mov leave add mov sahf gs mov cmc pushf ret and sub sub jle and repz pop pop inc mov lods and stos xor mov and pop negb psrlq jg sub xor jg xor mov addr16 mov sahf popf inc ret aad loop fcoms pop mov xor jle and hlt inc sbb mov cwtl inc iret or in in mov lcall aad loop je push rol pop pop (bad) cld add ds lock jp loop push mov out xchg mov pushf push lahf loop mov xor sub mov or jl and jl loopne out and movsl xor or pop (bad) pop pop inc mov lods and stos pop imul jbe in xchg lahf dec and cmc test (bad) (bad) js das push sub jnp das fs hlt das pop fdivrs loopne push mov jmp xchg mov popf lea lahf jecxz (bad) and imul cmp cmp jp loopne arpl dec insb jno jae (bad) and sahf and stos movsb jg sub loopne push lods and jmp mov lahf lahf inc shrl test adc jns sub or ds jl dec pop mov out mov cltd mov mov pop cmp gs lea mov xor sub mov xor jnp das cmpl push lods inc jbe pop addr16 outsb mov push xchg icebp pushf addr16 mov aam and lea les push (bad) xchg mov cltd loopne xchg push rol pop addr16 sub jl and fistpl inc mov lcall mov sahf popf inc daa (bad) pop xlat cltd loopne je call mov add and sub pop push push mov cltd daa insb lea call arpl and xacquire xor sub (bad) sti add cmp dec sbb add add cmp jbe hlt push in sub mov popf fs loopne mov or lds mov add cmp jbe repz lahf sub lea nop popf dec daa mov cmpsb ficom pop addr16 add cmp das pop fdivrs repnz cwtl and call in sahf mov sbb imul jae pop xor push popf loope (bad) and imul xor repz and pop pop inc mov mov in jmp mov repnz addr16 mov hlt sahf ret xacquire in imul and cmc and pop pop inc mov cwtl inc jbe xor ljmp sahf popf inc and xchg mov out push mov shrl mov pop pop mov add jl and jbe hlt mov cltd and stos push dec outsl lea std lahf arpl jecxz je push rol jl sub sub inc add aam pop inc push out inc leave add mov std pushf fs mov sahf jecxz mov or sub add adc cmc das jg and fsubrl ljmp add and repnz sbb mov cwtl and movsb aas call xchg icebp pushf addr16 mov (bad) lcall cmpsb pop pop mov add jle and fcomps push mov lcall lea sahf popf inc (bad) mov xlat cltd fist jg sub sub inc pop xor pop pop inc push out and dec inc and jp loopne imul insl push gs (bad) pop (bad) lcall sarb or pop add aam lcall movsb push dec outsl mov xchg lahf inc and divl rol jg sub push aas jle and (bad) jp out mov lcall xchg mov lahf arpl xchg inc mov repz cli mov cmp mov add push out and dec mov cld popf and divl imul and xlat pop push push mov cwtl and movsl cmp call inc xchg sahf push sahf ret xchg mov push rol jg sub and and jp out mov lcall lea cld popf fs (bad) pop hlt sahf ret xchg fdivrs lcall sahf jecxz mov or lds mov or mov mov cmpsb dec mov lahf sub lea pushf popf inc daa (bad) pop (bad) lcall cmpsb jns sub or cmp dec sbb mov cltd inc iret add imul jne pop xor addr16 mov pushf rcll jl sub das pop jge (bad) xor (bad) and rol js sub xor pop adc jnp loopne cwtd and stos pop imul jne andl lahf and cmc test xor sub sub daa and fdivrs repnz lcall outsb mov pop adcl xchg mov xor sub sub add jl sub jbe hlt mov inc mov imul dec mov pop pop mov sub pop add repz pop push push mov lods dec lds aas call push inc (bad) lea cwtl loopne mov push rol pop pop (bad) decb jns,pt das (bad) and and jge out push roll and mov pushf popf inc and mov (bad) shrb push sub inc pop xor mov push xor or sbb push aad inc leave add mov xchg icebp lahf addr16 mov cmc pushf rcll js das sti add jl and jg repz movsb pop imul insb addr16 sub popf data16 (bad) pop (bad) fwait loope je in push cmpsl pop mov or andb and jae out push jmp aas jmp outsb mov and lahf and ds jl sub popf and cltd mov in push mov sub jl and aam pop inc push rorl mov mov popf inc (bad) lea cwtl rclb out std or jp das jge repnz jg repz jmp pop imul xchg xchg sahf popf inc ret aad loop jbe or (bad) js dec mov lcall (bad) pop mov (bad) jns jg,pn hlt sub pop cmpsb inc mov lods sub mov popf inc and hlt jbe xor sub das add cmp xor aam out mov cltd inc iret or in ljmp std pushf fs mov cmpsb fcomip xchg or lds mov mov jns pop pop (bad) push sub jl and hlt inc pop mov pop inc mov cltd inc leave add mov icebp lahf push lcall mov sub or lahf jl dec sbb push aad sub mov icebp lahf addr16 mov aad loop mov in push mov add (bad) imull push aad fwait hlt mov mov int dec inc pop mov push push push rorl insb lea in ljmp pushf popf inc and xchg mov call (bad) cld add cmp and pop pop inc mov cltd sub mov icebp lahf and cmpsb ficom sarb das incl add pop push push mov cwtl inc iret or in ljmp std lahf arpl xchg std lahf xor ljmp icebp pushf addr16 jecxz mov or (bad) pop mov or adc mov fwait loopne push mov rorb xor lods add lcall (bad) pop addr16 add and (bad) jl out mov cltd and mov xchg lahf inc lea fcomip test (bad) (bad) js dec mov cmpsl fist mov add cmp das pop fistpl inc push out inc lods outsb xor mov mov popf and xchg (bad) and rol jns sub (bad) jge xor (bad) pop pop inc mov stos pop addr16 insb mov std pushf and xchg mov in push cmpsl pop pop mov or inc add repnz jg and shrb sub arpl and dec sbb mov mov imul xchg (bad) inc xchg sahf imul loop mov in push mov sub pop add jbe hlt push roll inc iret add jmp nop mov popf inc and xchg (bad) and imul cmp add xlat jbe hlt push in sub dec inc sbb mov cltd inc shrl jmp (bad) xchg mov lahf lahf inc and stc je or (bad) jl sub setl pop aad fwait loopne push ds data16 std pushf arpl (bad) pop sub or shrl sbb push jns das fs testl mov fwait and jmp mov es popf inc and call test repnz and (bad) fwait loope mov (bad) (bad) jl sub push arpl and mov fwait repz fwait and stos aas jmp fwait mov arpl shrl (bad) and push cmpsl jle sub or pop add hlt and jnp loope addr16 sub mov lahf lahf inc int3 mov aam loop (bad) and rol js dec mov sahf jecxz mov or sarl add cmp xor cmc and pop push push mov mov rorb sub popf fs mov shlb push rol pop pop mov sub pop ds cmp inc sbb push rorl jbe xor mov jae lcall pop sub push rol jns sub or jl das jg cmp add cmp aaa xor aam xchg repnz lcall mov icebp lahf addr16 (bad) pop aad loop jbe call sub add cmp das pop fdivrs out mov lods inc iret add jmp jno jb pop cmp pop sub or lds mov or cmc dec sbb mov cwtl inc iret add int dec sub pop cmpsb inc mov add out mov lcall xlat cltd loopne mov in push cmpsl pop pop lea lahf jl and pop push push mov lods sub mov jl sub lahf arpl (bad) pop aad loop mov or (bad) jle sub ss cmp jge out mov lcall (bad) andl pushf and call push mov sahf push cmpsb fcomip test or lea sub pop adc mov push lods and ljmp std lahf fs mov aad loop je in push mov or pop adc fstpt repnz lods mov mov pushf arpl stos add lahf loop mov js cld pop dec xchg jg xor jl out mov cwtl and in fwait mov mov std pushf arpl ficom sarl sub pop add aam fwait hlt mov cltd dec lds ds jno jae in icebp pushf shrl rcll fsubrs add cmp setle pop mov gs and ljmp lds add test mov repnz addr16 mov xlat cwtl loopne jbe xor sub mov add cmp dec sbb mov cwtl inc lods outsl pop imul jb push mov lahf and je xor sub cld or pushf jl dec pop mov lcall mov insb insb mov (bad) popf data16 lea fdivrs std lahf arpl lea les sub (bad) sti add jge and inc and jns loope jmp cmp dec jl sub negb xor sub mov sub jl das mov xlat jge out mov lods and dec mov hlt sahf imul jecxz mov or (bad) pop pop (bad) sti add xchg (bad) and push cmpsl pop pop mov xor cmp jns repz in inc jbe xor (bad) mov icebp pushf push sahf ret push or mov push ds add fstpt loopne push mov addr16 fwait mov imul pushf ret pop in imul adc cmp jnp loope dec cmp cmp jae out mov lods mov mov lcall negl or sub add repnz jl out mov lods and insb nop mov sahf imul fist sub sub add jge and xlat jg repz lcall nop mov pop das jg jmp xchg ljmp inc sub sbb call (bad) jle sub arpl and hlt and js loop jmp xor lea dec imul fwait loopne leave and rol jns sub or and sub jns repnz cwtl sub mov nop popf dec (bad) lea mov psrlq pop pop mov sub jnp cmpl xchg repz lcall mov aam mov or mov cs push inc or mov cmp jg sub add cmp jp loopne jmp pop imul jbe cltd and shlb xor sub sub add and and jns loope jmp xor lea jb push xchg hlt sahf push cwtl rclb out and sbb cmp jnp loope roll inc lods outsl xor or and jge out mov mov rorb daa cld popf and stc je xor sub sub daa and xlat jl out mov fwait and stos aas call jl sub lahf lea cmpsb ficom rcrb add cmp aaa xor sub pop push push mov cwtl inc lods outsl ds insl mov hlt sahf push aas jmp mov lcall negb in imul xor fstps push mov cltd dec lds xor ljmp xchg lahf dec and mov xor sub sub or jl and repnz pop mov push lods inc iret add dec insb mov xchg lahf inc shrl mov xor and jbe or das sbb and das pop fstpt loope fs inc shrl iret (bad) mov nop popf dec daa (bad) pop xlat cltd loopne je adc jle sub add cmp sub pop push push mov lcall mov lahf lahf inc ret negb push rol jl sub sub jl and rol jns sub sub jle and fnstcw repz aad and movsb ds xchg std pushf arpl stos pop xlat cwtl loopne je or das push sub pop setl pop mov lcall stos xor mov pushf popf inc and mov push mov or mov (bad) out mov mov lahf jl sub jns repz in inc leave add call (bad) inc xchg pushf addr16 (bad) ds fwait loopne mov jns sub or cmp and jns repnz cltd daa insb lea in in lea std pushf arpl stos pop aam loop mov push rol js sub or pop add and pop push push mov lcall mov lds mov in in mov cld popf gs mov loope mov psrlq imul ljmp pop jl and and js loop imul jae inc xchg pushf shrl jbe in imul and (bad) jp loopne aad and call andl (bad) cmp lea std pushf and xchg (bad) and rol js das sti add cmp inc and jp loop in sub nop mov sahf data16 lea test or sub push aas jnp das andb and jnp loope out inc lods outsl xor (bad) (bad) xchg push fs lea sahf jecxz je (bad) sarb std insl fnsave mov out push mov (bad) jg xor repz and pop pop inc mov fwait mov mov lahf and xchg mov push rol pop pop mov sub jl and xlat jae out mov cltd sub mov std pushf fs mov lcall sub sub or jp das jge repnz pop mov call xor inc sbb mov lahf sub outsb mov and sahf and je or (bad) js das add cmp add hlt dec pop mov fwait loope gs sub mov test repnz and nop les (bad) jg sub add jl inc sbb mov add rorb push push push in inc leave add mov sahf popf inc and xchg mov or (bad) sti add and and pop push push mov cltd and stos ds nop mov lahf addr16 (bad) fwait loopne (bad) and sarl (bad) pop add mov aad sub jno jae test sahf popf inc and ljmp lcall mov xor sub cld or cmpl push lods and stos xor mov push push and xchg mov js sub or pop adc repnz pop mov addr16 dec lds pop addr16 fwait mov push push pushf loop mov or sarb mov lcall sub lea or jl inc and jp loopne imul dec data16 hlt sahf push lahf jecxz je or (bad) jg sub or jg xor and pop pop inc mov lea rorb lcall ds fwait loopne mov jg sub (bad) jp and repnz jg cmp sub xor pop adc das pop (bad) out push out sub outsb mov cltd and negl or rcrb add cmp jl and jp loope push mov imul jbe in icebp lahf and cltd loopne test or lds mov or pop xor cmp jnp loope aad and or push xlat jl loopne out and stos pop addr16 outsl mov xchg sub shlb push rol js das sti add jl dec pop mov addr16 and insb mov icebp lahf addr16 (bad) fwait loope mov or lds mov or pop xor and jp out mov cwtl and (bad) mov (bad) popf and add es aad outsl or dec jmp mov inc (bad) cmpsb dec adc (bad) and sub pop mov ds xchg mov dec push inc mov mov sahf popf inc and cltd mov or lds std das pop pop add xlat jp loopne out and call in (bad) popf and lahf loop mov js sub or jge xor cmc sub pop pop inc mov lcall nop mov sahf lea cmpsl fcomip test or dec mov cwtl mov imul jnp,pt mov mov addr16 inc shrl in jmp mov popf inc and mov or sarb sti add cmp and js loop addr16 inc lods outsl xor mov daa sahf popf inc and xchg mov out push mov (bad) pop ss cmp and loopne cld or jg hlt sub pop push push mov lahf and call xchg sub cmp lcall (bad) jl sub or add mov push push mov cltd inc jbe push dec insb outsb mov push mov pushf and xchg (bad) and rol pop pop (bad) decb ds add fstpt nop sbb push cmp (bad) lcall ja mov out sub cltd mov mov es popf and xchg (bad) and ljmp cmp cmp pop cmpsb inc push jmp xor mov sub popf and xchg mov js das add cmp and jl loopne jmp xor mov xchg repnz data16 xchg mov js dec mov fwait loopne (bad) and rol jl sub sub pop adc cmc and pop push push mov cwtl inc iret or in jmp mov lcall hlt sahf ret cltd mov or mov push aas jle and aam fwait loopne cbtw and mov lahf lahf inc and ret xchg mov call sub or mov jns jle sub ds cmp and pop cmpsb inc mov lods mov mov lahf lahf inc and divl ljmp push jl das cmpl fwait hlt push rorl mov mov popf gs mov xlat cltd loopne (bad) and mov or aaa xor cmc inc and jp loope cbtw and dec inc pop mov out mov stos pop addr16 mov lahf lahf inc and ret decb mov sub pop add repz and jbe hlt push jmp pop addr16 mov nop popf dec ret sti nop ret xchg mov out push mov add (bad) testl push out daa insb lea rorb daa sahf popf inc and ljmp xchg lahf dec and xchg leave and mov push aas jl das mov mov push inc leave add mov popf inc (bad) mov shlb xor sub mov or aam push aam out push jmp cmp xchg push lea loope (bad) and rol js ffreep pop and push lret jbe ret les add jnp shrl pop cmpsb inc push jmp ds mov nop popf dec and xacquire adc js sub or pop adc mov push push mov lcall lea sahf popf inc (bad) mov sti nop les sub (bad) sbb and (bad) jns loopne push sub mov xchg sub aam and clc push lods idiv inc ljmp test enter mov call cmp and js loop gs inc leave add call xchg hlt sahf imul loopne (bad) and rol jl sub sub pop ds cmp and pop push push mov cwtl mov mov lcall pushf ret adc imul xor (bad) jg repz aad mov jae mov loop add stc movsl inc test pop xor dec or dec mov cmc push test xor pop negl or mov sub pop adc mov push lods daa insb lea in in mov std pushf fs mov aad loop mov or lds (bad) sti add inc pop xor cmp js loop roll sub outsl mov test std pushf arpl mov cmc pushf ret lock mov xor pop ss cmp and fsubrl add inc sbb mov cltd and mov icebp lahf lea pushf rcll pop addr16 push aas jge and fstps push mov add mov and popf and cmc test in push cmpsl jl sub push ds add cmc sub jp loopne jmp xor jmp cmpsb repnz into jp and fadd mov in mov aam push push mov lahf inc iret or call arpl and loopne (bad) and push cmpsb pop pop (bad) cld or (bad) and dec pop mov push lods inc lods outsl xor mov sub popf fs negb or mov sub pop adc mov push push mov add rorb sub addl mov and pushf and xchg mov jle sub ss cmp jns loope roll dec lds xor (bad) (bad) xchg xchg nop popf dec and cltd mov in push cmpsl js das add cmp daa and xlat jp loop arpl dec insb mov lcall lcall addr16 popf inc lea mov out push mov add jnp mov mov push and stos aas call arpl and xchg mov in imul and repnz pop pop inc mov mov jmp nop mov lahf lea cltd loopne je in imul xor push mov or aam push xlat jae out mov cltd inc iret add dec insl insl mov sahf popf inc and xchg mov pop pop (bad) call add cmc das pop fdivrs loopne in inc lods outsb xor mov jb push mov aad loope (bad) and imul ds adc (bad) jnp loope dec imul jbe or push lods sub (bad) (bad) and sahf fs (bad) pop cmc pushf ret and (bad) call jg,pn cmc and jns loopne push mov mov pushf and divl push cmpsl js sub or daa and cmc sub pop push push mov mov in jmp mov (bad) popf and jl rorl icebp pushf and popf loop xchg or sarb std or jl and fstpt loope in dec lds cmp jmp mov sahf data16 lea sahf ret stc je in imul adc hlt das pop fstpt mov lahf inc leave add mov sahf push sahf ret stc je or sarb std insl fnsave test or sub add ds jge repnz jnp loopne cwtd and dec mov (bad) popf and cmpsb fcomip test in imul xor (bad) jae out mov lods inc jbe xor mov dec push inc int3 mov sub out push mov or pop adc cmc das pop fstpt add or pop setg pop mov out mov cltd and mov hlt sahf imul loopne mov or lds (bad) cld or sahf jl and jns repz rorl dec outsl mov xor pop sub in imul and fistpl push mov cltd mov imul jg repnz mov in jmp mov (bad) and sahf push cmpsb ficom (bad) js das sbb sbb jl and pop pop inc push rorl jmp mov in std pushf arpl loopne je or mov or jns das fs hlt inc and jl out mov lods sub lea xchg lahf inc daa (bad) pop aam sbb push mov lahf addr16 (bad) fwait loope mov psrlq jle sub push aas jle and aad out mov lcall fwait mov addr16 xor mov sub or (bad) imul add cmp jle,pn cmc inc sbb push in dec lds ds insb mov nop popf dec lea rclb jl sub insl fnsave mov imul std das add andb das pop fdivs repz fwait mov mov push data16 lea lcall sub sub lahf jl inc sbb push out daa insb mov call xchg sub popf and xchg mov push rol pop mov or ss cmp and fsubrl decb ds add repz pop pop inc mov lcall mov std pushf arpl lea cmpsb fcomip xchg in imul xor mov arpl in jmp mov inc xchg lahf gs (bad) pop negb xor sub mov xor pop setl pop fstpt mov cltd and stos xor or pop (bad) pop pop inc mov lcall mov lcall shlb psrlq jg sub xor jg xor mov fwait loope gs inc iret add dec insl insl mov std lahf arpl lods add cwtl fist (bad) jl sub add inc pop xor fstpt loope push lods and movsl cmp dec mov icebp subl xor mov inc xlat xor sti cld mov mov int pop cmp leave sbb sbb mov fnop inc inc xchg in (bad) cli adc mov cmpsb std (bad) mov scas add push js lds (bad) mov sti or ret and enter in xorl cmpsb bsr das movsl out jne jb fcomip sbb jbe lock sarl or xlat lock test inc jbe xor ljmp sahf popf inc and cltd mov out push mov or pop adc mov arpl dec insb mov nop popf dec ret shlb (bad) (bad) jl sub das add mov mov xchg repz jmp push dec insl nop mov popf inc daa mov fcomip je xor (bad) pop or add add rol pop pop (bad) call and das pop fistpl inc push aad daa insb mov insb jno jb inc xchg pushf gs (bad) pop sti nop ret xchg (bad) and rol jle sub or jge xor repnz pop mov xchg repnz cltd and stos xor mov mov pushf arpl lea std or sub daa and fdivrs repz cmp cmp sub jns repz out mov mov lahf arpl stos pop negb push rol jg sub add cmp and pop cmpsb inc mov movsb push dec insb mov lock and xacquire or (bad) jg sub push ds add (bad) jns loope out inc lods outsl aas jmp mov lds or (bad) movsb push dec insb insl mov (bad) popf addr16 mov sub adc js sub or jp das mov aam out mov lahf inc shrl jmp mov lcall cwtl loopne je push rol jl sub das pop jl and mov in inc iret add imul jne xchg sub lahf gs loop fdivrs cld popf fs lea cmpsb fcomip test or lds sub or mov xlat jae out mov cltd inc jbe push dec insb mov (bad) popf lea (bad) cmc test push rol js sub or jp and cmc das pop fstpt repnz lcall mov icebp lahf addr16 ficom (bad) pop pop mov add movsb (bad) mov out aad lods pop test pop divb mov dec xchg arpl and pop pop inc mov lods and stos pop imul dec push inc and cltd mov or sarl or fs hlt and jbe hlt mov mov addr16 (bad) xchg arpl and divl ljmp jnp,pt cs jl and jns loope in inc jbe pop addr16 xchg mov push jmp aas jmp mov std pushf arpl mov hlt sahf ret divl rol pop pop mov or adc cmc and jl loopne arpl call imul cmpsl fist imul ljmp pop jl and and jnp loope jmp pop imul insb imul fwait loope fdivrs lock fs xlat cltd loopne je xor sub mov push aas jl das pushf jl and jnp loope jmp aas jmp (bad) in pushf popf inc (bad) lea and rol jg sub or add mov in and insl nop mov pushf push sahf jecxz mov adc jl sub xor rol jns sub xor inc add fstpt loope arpl imul xchg mov xchg lahf inc and stc je (bad) sarb ljmp add and xlat jns loopne push dec lds cmp call pop cmp inc xlat cwtl loopne mov in imul cmpl fwait loope dec cmp jl das pop fstpt mov lods inc jbe xor mov es fs (bad) shlb or rcrb call xor fdivrs out mov cltd and movsl xor mov jae pop cmp fs rclb jle sub or jge and aam lcall movsb ds imul das pop bound mov pop lock push or jecxz movsb loope test fistpll mov lcall jge push adc add das mov mov or jg xor hlt das pop fdivrs out push aad and jno jae (bad) es popf fs (bad) pop cmc pushf ret std or (bad) jle sub ds jl lock jge out mov lods mov mov lahf dec and xchg (bad) and popl (bad) jp das pushf jl inc sbb mov lcall dec and pop push push mov lods sub mov imul pushf loope mov or sub adc hlt and jns loope aad inc shrl call mov std pushf arpl lods add pushf rcll jns sub sub jl and sub pop pop inc mov cwtl and movsb xor lea dec (bad) inc xchg inc mov or int mov adc jmp xor rol pop pop (bad) decb aas jg xor cmc and jp loop addr16 and movsl pop imul insb imul cwtl fist mov sub or adc mov out and movsl cmp call in lcall pushf loop xchg or sub or jl repz jg xchg sbb or call xlat ret call sbb addr16 and ret call jmp jp cmp ret testl arpl imul xchg imul lcall (bad) jg sub or andb das pop fistpl mov mov out outsb mov andl lahf gs les (bad) pop mov or aaa xor fnstenv out mov insl xor ljmp xchg lahf inc and xchg fsubrs pushf idiv mov inc jecxz,pt push lock mov out and cmp pushf mov fbld pop icebp push or jg and addl les insb ljmp cld fbstp cmpsb cltd pushf sub mov cmpsl fist jle sub or jg xor repnz pop mov cmpsb inc mov cwtl inc lods outsl ds insb mov icebp pushf push lcall rcrb add cmp jl dec sbb mov cltd dec lds pop addr16 mov nop popf dec ret sub out push mov (bad) jle and jns jns sub xor cmc inc pop mov fwait repz fwait mov mov and daa negb push rol jns sub or jl das jge repnz pop fstpt mov cwtl daa insb lea rorb xor mov shlb or (bad) js das push sub jnp das cmpl push mov int dec inc pop mov fwait repz lcall xchg mov popf and xlat cltd fist (bad) jns sub xor mov pop inc mov cltd sub outsb mov and add pushf rcll fsubrs add cmp and repz and jg repnz cwtl and movsl ds mov hlt sahf push cmp xchg andl mov sahf ret xchg mov push rol jl sub sahf jl sub jae out mov cltd inc shrl iret mov and pop aam jecxz test psrlq imul sti add cmp jl loopne imul xchg mov icebp lahf push fwait loope xchg in push cmpsl js dec mov sahf jecxz test push rol jg sub sub jl and hlt das pop fdivrs loopne push lods inc jbe xor ljmp nop popf dec and xchg (bad) and jmp pop mov (bad) inc pop xor aam out mov cwtl inc lods outsl ds nop mov pushf addr16 mov negl or rcrb add cmp and das jg and fsubrs ljmp pop jl and hlt dec sbb mov add mov sub lahf push sahf jecxz je call sub or cmpl push lods inc iret add dec insb outsb mov es sahf push sahf ret push push rol imul add cmp cmp sub jns repz in inc leave add dec sbb push out and movsb aas call jl sub cmp je (bad) (bad) pop addr16 or sahf jl sub js loope push inc leave add mov sahf and xchg mov pop mov or jl repz pop mov push mov call andl xchg std lahf aas call andl mov sub (bad) (bad) pop pop (bad) std das pop inc add aam out mov or call xchg repnz data16 lea sahf ret xchg mov out push mov das add jge,pn repz jg repnz lcall xchg mov popf fs aad loop je or dec mov sahf ret push or sub add cmp das pop fistpl push in sub insb mov sahf popf inc shrl leave and sub or jns cs jl inc sbb push out and movsl pop imul jb andl pushf data16 xacquire in push cmpsl pop pop mov xor arpl and jns pop pop mov add jl das jg hlt and pop pop inc mov lcall outsl mov mov popf and pushf loop jbe or sub (bad) arpl and dec sbb push in sub mov sahf imul ret sbb fsubrl std or jge xor fstps push mov cwtl inc iret add int dec and jns loope imul push mov icebp lahf addr16 mov shlb or lds push sub pop adc fstpt loop jmp ds imul cltd fist (bad) pop pop (bad) cld add and and pop push push mov cwtl inc iret add addr16 mov sahf popf inc and dec (bad) xchg push and lcall sub sub adc fistpl inc push out and outsl mov cmp data16 xchg mov out push mov or mov mov fwait hlt mov cltd inc jbe aas call imul mov negl psrlq js dec mov mov (bad) (bad) jg sub or jl and jae out mov mov rorb and sahf addr16 mov (bad) lcall mov or and cmc inc sbb mov lcall (bad) push mov ds nop les mov das add and pop fcoml nop cli jae dec pusha add movsl jno xchg inc push ljmp pop or mov mov addr16 lea nop popf dec ret cmc pushf rcll pop pop mov or and cmc and pop pop inc mov fwait daa insb lea rorb daa pushf popf inc and xchg mov jns sub or add cmc dec pop mov push lods mov insb data16 nop popf dec and fdivrs hlt sahf imul fist cmpsl jg sub jge repz pop pop inc mov mov addr16 (bad) xchg sub popf data16 (bad) pop sti nop (bad) cmc test call sub ss cmp jp loop push mov call push gs cmc pushf ret add rol jl sub or xor mov js das sti add cmp pop push push mov cltd inc leave add mov std lahf arpl (bad) pop aam jecxz je in imul xor and and jg repz roll dec lds pop imul dec imul popf loop xchg xor sub decb jns,pt mov mov out mov cmp cmp dec sbb mov lods sub mov xchg lahf inc and jecxz mov (bad) (bad) pop pop mov xor cmc inc pop mov lcall stos xor mov and sahf push pushf ret add rol pop pop lea or arpl and cmc sub jp loopne arpl imul xchg imul aas jmp insl mov lcall sti nop ret xchg mov pop mov or jg hlt sub pop push push mov cwtl dec lds xor (bad) mov cld popf fs (bad) je call mov lahf jl sub jae out push jmp xor ljmp lcall cmpsl fist lcall pop aad loope mov pop pop popl or ds jg hlt dec pop mov in sub mov pushf lea sahf ret cmc test in push cmpsl jl sub das pop arpl and mov cwtd and stos push dec outsl mov hlt sahf push nop (bad) divl rol jle sub push jge,pt (bad) xor push mov or fs testl mov lods dec lds pop imul dec xchg nop popf dec and xchg mov adc pop pop lea or inc add cmc inc pop mov fwait loope roll inc lods outsl cmp insb imul cmpsl fist mov mov xor inc pop xor mov dec outsl jg (bad) mov test cmp nop insl inc pusha ss mov sahf ret cmc test or (bad) jg sub jg hlt inc sbb mov lods inc jbe ds jl sub sahf gs mov loopne jbe push rol jg sub lahf jl sub pop cmpsb dec mov lcall nop mov lahf inc and jecxz (bad) and jmp pop pop mov add jl dec pop mov sbb cmc jp mov leave call lock jns das andb sub jl loopne imul dec bound and xacquire or (bad) pop pop mov or pop adc hlt das pop fdivrs out push out and outsb mov es popf dec (bad) lea cmpsb (bad) je in push cmpsl jl sub or and fdivrs loopne push and ljmp les stos pop imul jae cltd and lahf gs (bad) pop (bad) fwait loope test or lea or cmp inc and jp loop jmp pop addr16 fwait mov addr16 xor mov cmc pushf ret pushl jmp jg sub mov fstpt mov cltd inc iret add imul jb xchg sub lahf gs negb shrb nop popf dec and mov push rol jns sub sub pop adc aam out mov mov call (bad) inc xchg lahf push mov xor sub sub add fstpt loop aad daa insb mov insb mov icebp lahf lea popf loop je or (bad) jle sub push jge,pt (bad) xor jmp pop pop mov sub jnp das cmpl arpl call data16 xchg lahf inc and hlt jbe push rol jle sub or jnp das fs hlt and jns loopne push mov jmp xchg mov lahf addr16 (bad) shlb in push cmpsl js das and sbb (bad) (bad) dec pop mov lcall adc dec sbb push jmp xor mov cmp data16 mov pushf loope mov in imul add jbe hlt push aad dec lds aas jmp nop mov popf inc (bad) mov hlt sahf ret xchg mov in push cmpsl pop pop lea or pop add dec pop mov in mov imul pop push push mov lcall outsb mov push mov popf and mov or lds das sbb xor repnz jp loop addr16 outsl mov and pushf and xchg mov jns sub push aas jge and fdivrs loope fs inc shrl dec outsl lea repnz data16 sub and mov inc imul addl fcomps inc mov stos aas call data16 nop popf dec int3 mov sub push rol jns sub sub pop adc fcomps mov cltd and jmp mov icebp lahf push cmpsl fcomip test xor sub mov or ds andb inc and js loope push inc iret add addr16 lea icebp addl mov lahf dec and hlt jbe (bad) (bad) jl sub add add repz pop push push push jmp ds insl mov repnz lea fwait loopne mov pop addr16 add cmp pop push push mov lcall mov cld popf and jbe xor push pushf loop mov or sub and cmc dec pop mov fwait loopne arpl in ljmp nop popf dec and cltd mov out push mov xor jle and jns repz in and dec insb mov icebp lahf shrl rclb js das sti add jl das sbb mov mov (bad) jnp das fs hlt and pop cmpsb dec mov lcall (bad) xchg arpl daa mov lcall cmpsl pop pop (bad) push sub pop ss (bad) (bad) dec pop mov roll inc shrl dec insb xchg mov sahf data16 (bad) pop xlat cltd fist jl sub sub pop adc (bad) jbe hlt push jmp test mov cwtd mov mov imul cwtl (bad) hlt jbe call (bad) sbb and jp loopne aad inc iret or call data16 lahf lahf inc int3 mov xlat cwtl loopne (bad) and sub sub arpl and repnz pop fstpt loope cbtw sub xchg mov addl mov lcall pop negl or (bad) jle sub or daa das jge repnz pop mov in sub nop mov popf inc daa mov in test or das std das pop pop setle push xlat pop push push mov cltd inc leave add mov popf dec and cmc test xor data16 divl push mov add jge and aad out push jmp aas call addr16 xor stos daa negb or rcrb std das pop jns mov mov out and insb nop mov lahf arpl (bad) pop negb out push mov das (bad) jl and push cmpsl jg sub or cmp dec sbb mov cltd sub jno jb push xchg repnz addr16 mov sub or lds sub daa das mov aam push push mov lahf inc shrl rorb mov xlat cltd fist mov sub xor jns cs jl dec pop mov arpl jge repz jbe hlt mov lcall mov hlt sahf push nop ret xchg (bad) and popl or repnz pop mov pop inc push roll and dec lea hlt sahf push mov xor sub sub daa and aad out mov mov dec mov icebp addl mov lahf arpl lea je in imul mov aam out push out sub mov repnz and lahf loop leave and sub add jl das pop fistpl push mov lods sub mov pop sbbl (bad) and mov pop hlt sahf imul (bad) xacquire xor sub sbb add js loop gs and stos xor lea sub popf data16 xchg mov jl sub add jl das pop fdivs repz lods and stos xor mov xchg lcall mov in push cmpsl pop mov das lcall adc push mov push arpl and and pop cmpsb inc push out dec lds pop imul xchg jl sub pushf addr16 (bad) cmp mov jns sub or and repz pop push push mov cltd sub fwait mov andl (bad) pop sub out push mov add jl and pop push push mov lcall mulb pop (bad) pop push push mov or call inc xchg lahf and test adc js sub add jl sub jge out mov mov call addr16 sub cmc pushf ret add rol jg sub add jl dec pop mov push xor jmp mov sub leave adc mov push xor rol inc cld aam int addr16 dec das pop fistpl push mov cltd mov xchg (bad) inc xchg lahf and xacquire or das sbb sbb jl and jge out mov cltd sub mov lahf inc shrl mov js sub or pop xor cmp pop pop inc mov lods and movsl cmp jae lcall inc mov mov (bad) cmc clc scas popl bound mov adc jg sub add cmp dec sbb mov mov jmp outsb mov sub ds loop mov in imul cmpl xchg repz jmp xor mov (bad) popf and cmpsl ficom cmpsl pop mov das loopne pop xor and sub jg mov int3 dec add cmpsl jne or and popf inc and xchg leave and rol js das sti add cmp inc sbb push jmp cmp call in std pushf and jbe or (bad) pop pop lea or daa and repnz sbb push roll and movsl aas jmp jno jb andl lea test or sarb call xor xlat ret addl sarl lcall stos ds mov lcall hlt sahf ret sbb loopne ljmp pop jns cs jl and js loope fs daa insb lea rorb and pushf push cmpsb fcomip je or (bad) jl sub das pop jge xor repnz pop mov push inc leave add call arpl and jl call xor sub in pop in fwait xor imul das jg cmc and jns repnz cwtl and stos cmp xchg push addr16 mov (bad) lcall lds mov or cmp dec pop mov cmpsb inc mov lcall (bad) xchg push inc ret aam jecxz mov in push mov xor jl and aam fwait hlt mov cmp and and pop cmpsb inc mov stos push dec insb insl mov xchg lahf inc daa (bad) pop (bad) lcall sarb or ds mov fstpt mov cltd inc leave add mov lahf fs mov loopne (bad) and rol jg sub sahf jl and pop push push push jmp pop imul sub icebp inc hlt mov xchg jns cs jl sub jp loop jmp xor lea jb fwait and aas sub push rol imul std das pop jge xor xlat jge out mov mov imul push imul lods add cwtl loopne test or (bad) imul sbb pop inc pop xor mov gs mov mov mov mov dec insb outsb mov push mov pop negl out push mov xor jnp das (bad) and dec pop mov out mov cltd daa insb mov dec mov repnz data16 (bad) cmp mov call mov xor jge xor (bad) out mov lcall insb mov (bad) popf and sahf jecxz fdivrs repnz addr16 mov loope je out push mov push aas inc pop xor and das pop fdivs repz cltd inc shrl imul push data16 xchg lahf dec int3 mov hlt sahf ret xchg mov or sub (bad) jg xor aam push push mov mov call imul (bad) cmp je or lds sub xor jge (bad) xor rol pop pop (bad) sti add jnp jge,pn repnz pop fdivrs loope imul xchg (bad) inc xchg lahf and hlt jbe in push cmpsl js das add cmp cmp sub jbe hlt push roll dec lds cmp insb push inc shrl jbe in imul xor xlat jns loope dec cmp cmp jge out push aad sub insl mov (bad) popf and cmpsb ficom pop pop (bad) cld add jl and jns repz cwtl sub jno jb pop sbbl mov out push mov das loopne pop xor repz jae out mov cltd dec lds aas jmp xchg mov mov lahf inc shrl imul jbe xchg sub xlat cwtl loopne mov push rol pop pop lea movd pop inc mov movsb push dec insb fwait mov mov icebp lahf addr16 (bad) cmp jbe or (bad) jle sub push jge,pt xor mov push push mov cltd and stos pop imul jne fwait and lahf addr16 mov shlb shrb pushf popf inc and ret xchg mov push rol jg sub sub pop add hlt and js loop arpl call arpl and xchg (bad) and sub xor mov in inc iret or rorb xor mov aad loope leave and rol jle sub add je push rol jle sub daa das mov aam out push in and stos aas jmp insl mov icebp pushf addr16 lea adc push mov or arpl and dec pop mov arpl call mov lcall mov or mov add jle and xlat jg repz cmp jl and jnp loope in inc jbe xor mov and lahf arpl stos add popf loope mov in imul and mov rorl mov mov pushf popf inc daa mov nop les mov sub inc pop xor dec sbb push roll and ljmp les pop imul push imul mov or lds lea or and jns repnz lahf and movsb xor ljmp hlt sahf push sahf jecxz je in push cmpsl pop mov or jge repz pop fdivrs loope out inc leave add mov imul mov lcall test lcall nop (bad) xacquire xor sub mov or add xlat js loop arpl dec insb fwait mov push addr16 (bad) cmp (bad) and push cmpsl pop pop lea (bad) jle and repnz pop fdivs repz cltd sub mov lock and mov xor sub mov or xor call cld add jl dec sbb push rorl jbe xor ljmp nop popf dec and divl jmp jns sub add and fnstcw loopne push and movsl xor (bad) (bad) xchg mov pushf popf inc and xchg (bad) and imul and jp loop dec inc stos psllw sarl adc les push dec insb xchg mov pushf fs mov loope mov or sub or pop ds jl inc and js loope push and insl mov icebp lahf and sahf jecxz (bad) and push cmpsl jle sub and mov fs inc jbe aas call imul (bad) pop aam jecxz fdivrs std pushf arpl ret xacquire in push mov sub jl and xlat jbe hlt mov test mov mov xchg lahf dec int3 mov shlb psrlq imul sbb push jl and repz and jg repz lcall nop mov pushf and stc je adc pop pop popl (bad) jge (bad) xor mov (bad) (bad) jl sub add cmp pop cmpsb inc mov lods sub mov test xchg lahf inc and fist jns sub add cmp jns loope in and movsb xor jmp mov popf gs mov negb xor sub (bad) cld or jle repnz pop push push mov cmp jl das pop fdivrs loope push mov iret mov dec imul (bad) pop aad loope leave and imul and repnz pop mov xchg repz cwtl sub mov (bad) popf data16 (bad) cmp mov js sub push ds add xlat jns repz aad inc lods outsl pop imul dec imul xor mov jb xchg sub sti nop ret xchg mov jg sub or and mov push xor ljmp sahf popf inc shrl mov xor sub mov add jl and jg repnz lcall lea (bad) popf and xchg fdivrs nop popf dec shrl mov jle sub add mov addr16 lea lock fs fist cmpsl jle sub ds repnz pop cmpsb dec mov lcall xchg mov sahf and xchg (bad) and rol jle sub add cs pusha data16 in xchg iret outsb in ret int jmp xchg sbb push pop xchg sbb int jae push cmpsb pop pop lea sahf jl das pop fstpt push aad inc jbe ds (bad) inc xchg pushf and mov xor sub sub daa and mov out mov lcall insl mov xchg lahf dec int3 mov shlb push rol pop mov or jl and jbe hlt mov cwtl and mov cli sti es sti nop (bad) divl call std das pop pop ss and and pop push push push out and movsb xor jmp mov icebp lahf push sahf ret and sub adc (bad) pop pop inc push in sub nop mov pushf and xchg mov jl sub xor jl and repnz jg fcoml imul fildll ret popl xor out jbe fwait mov stc cmp (bad) and stos aas call push inc and cmc test (bad) (bad) pop pop mov sub arpl and jge out mov fwait inc jbe aas call mov pushf popf inc daa (bad) pop aam jecxz (bad) and sub or pop add aam pop inc push aad inc lods outsb aas call addr16 sub lahf addr16 (bad) pop negl xor xor inc call cmpsb imul jb test cmp push cltd fwait xchg push and unpckhps inc xchg sarl data16 lock shrl xchg push rol jg sub das jge repz pop fstpt loope push mov iret (bad) mov hlt sahf push cmpsb ficom sub sub ds pushf jl das pop fistpl inc push aad and dec insl mov lcall mov or (bad) pop pop (bad) std insl push mov mov dec fs rorb std push push andb ss cmpsb ds pushf push mov cmpsl test xor jbe data16 adc mov cli xor shlb rolb mov out aas fdiv jmp (bad) inc aas stc lds es movsb xchg sub daa push and pop repnz mov in mov in adc mov cli xor shlb cli add cltd in enter push hlt lahf jmp xchg xchg sbb scas push xchg pusha push inc and movsb jne inc pop popf pop pop ss stos inc pop aas push les cmp sub sbb add rol cli loope sub je mov add test iret cmpsb mov insl jmp shlb hlt sahf push fwait loope mov xor sub decb aas jge and fstps inc mov cwtl and insl insb mov nop popf dec daa mov sahf loop (bad) and push cmpsb pop pop mov jle repnz pop pop inc mov cltd inc leave add mov popf inc lea loope je call sub xor jge arpl push lods add fistpl xchg pop push xor mov rol js das push sub inc add aam out mov mov out xchg mov popf inc and divl rol js das add cmp cmp dec sbb push jmp xor mov mov sahf and xchg mov out push mov (bad) jl and repnz pop mov push push mov cmp (bad) hlt sub pop pop inc mov cltd inc shrl in ljmp hlt sahf push cmpsb fcomip xchg push rol js das add cmp ds jl lock pop push push mov fwait mov mov pushf data16 mov lcall lds mov das add and and jp out mov cltd daa insb lea rorb mov cltd and mov and pushf and leave and imul cmp ds jge repnz pop mov out daa insb mov insl outsb mov andl stos and lahf jecxz mov in imul adc mov out inc shrl imul jbe test xchg lahf inc and xchg fdivrs (bad) popf data16 (bad) cmp mov pop pop (bad) push sub arpl and cmc inc and pop pop inc mov cltd sub insl mov lock fs lea mov push rol pop pop mov sub inc pop xor pop cmpsb inc push in inc shrl rorb mov aam jecxz (bad) and push mov add mov xor sub mov sub arpl and fcomps inc mov add in in lea lahf lahf inc daa mov cmpsb ficom sub mov xor jnp das (bad) and and pop pop inc push roll and mov (bad) popf shrw mov pop pop mov (bad) jp and aam fwait hlt mov cmp cmp inc pop mov fwait hlt push jmp xor lea jb push xchg repnz addr16 mov shlb or (bad) jns sub or jl dec sbb mov cwtl daa insb lea in ljmp lahf lahf inc int3 mov (bad) lcall (bad) pop pop mov or pop xor repnz pop pop inc mov stos ds imul je rorl std pushf fs mov negb or rcrb call and mov push push mov lods inc shrl call bound (bad) lea (bad) and rol jl sub add jg xor (bad) jnp loopne cbtw inc lods outsb xor mov xor fs (bad) ds fwait loopne mov or rcrb std insl fnsave je or lds sub or aaa xor repnz jae out mov lcall (bad) xchg push push popf loope mov push rol js das add cmp aas jle,pn cmc sub pop push push mov mov rorb xor and xacquire xor sub mov or cmp sub jg add xor jge xor cmc das pop fdivrs repnz cltd and dec mov std pushf and xacquire in imul and repnz sbb push roll and dec nop mov popf lea rcll jg sub or jle repnz and pop push push mov lods inc jbe xor jmp imul jns loopne cbtw inc lods outsl xor mov andl mov shlb out push mov das add xor (bad) out push in sub mov xchg sub add mov xor sub (bad) cld or sahf jl dec sbb mov lcall mov (bad) popf lea sbb push mov popf gs mov sub psrlq jle sub xor jg xor repnz pop mov cmpsb dec mov fwait and stos aas jmp (bad) xchg andl lods daa (bad) lcall mov sub or pop ss (bad) hlt and js loop jmp xor in mov lcall (bad) fwait loope (bad) and push cmpsl jle sub sti nop ret xchg leave and jmp pop pop (bad) cld or (bad) and das pop fistpl mov lcall outsb mov and popf and cwtl rclb jg sub or cmp das pop fistpl mov cltd inc lods outsl ds xchg mov pushf addr16 in xchg or mov or jl and repnz jg add add cmp ds sahf jl inc pop mov out push jmp aas jmp (bad) xchg imul mov shlb or rcrb std das add and mov cbtw and mov xchg lahf dec and cltd mov xor sub mov das add and (bad) jge out mov lcall mov sub push mov rorb inc xchg popf fs mov sub or lds (bad) and sbb add repnz pop fdivrs repz out sub mov lahf lahf inc and stc je or sub add cmp jae out mov lcall (bad) xchg bound and fidiv jb push xchg repnz data16 xchg mov jns sub or pop setg pop mov xchg repnz mov jmp jno jb inc xchg popf data16 xchg (bad) and push cmpsl jns sub (bad) jp and dec sbb mov stos push dec outsl lea repnz data16 (bad) cmp mov in imul popf loop mov or sarb das pop jl and mov push lods inc lods outsb xor jmp mov (bad) es lahf and sahf ret sbb fsubrl add cmp jg hlt and pop cmpsb inc mov cwtl dec lds pop imul insb data16 std lahf arpl mov hlt sahf ret xchg mov or mov jg cmc and jg add cld or sahf jl inc and pop cmpsb dec mov mov dec insl xchg mov popf fs rclb pop pop mov add and jge out push jmp push dec insb mov lock and xchg (bad) and rol jns sub sub jnp cs jl das pop fstpt loop addr16 and movsl cmp xor in and stos xor mov (bad) popf and sahf ret stc je or (bad) and sbb adc aad xchg repz movsl cmp xchg bound and xchg mov xor sub das sbb sbb cmp sub jg repnz lods sub xchg mov lahf and fisubr mov cld popf and hlt jbe or (bad) js das push sub arpl and hlt dec pop mov aad and lea mov lock and xchg mov pop pop mov xor jp das lahf jl sub pop pop inc push aad sub outsb mov pop adcl xchg (bad) and jmp pop pop (bad) std insl fnsave (bad) and rol jl sub or add (bad) jp loopne arpl jmp fwait mov mov repnz and cmpsb fcomip je or sub or jg cmc inc and jns loopne push sub mov lahf fs mov negb push rol jl sub or jp das jle cmc sub jg add cld or sahf jl sub jg repnz cltd daa insb mov dec mov std pushf fs mov pushf rcll jg sub or ss and dec pop mov jmp ds fwait mov andl lea rclb pop pop (bad) std das add sahf jl inc sbb mov cltd inc jbe cmp xor out sub mov and pushf arpl stos pop aam loop mov psrlq jns sub sub jle and hlt and jae out mov lods inc shrl iret mov sub popf addr16 mov loop test in push mov xor jle and repz pop fstpt mov cwtl and mov std pushf arpl stos pop aam sbb pop cmp and xchg leave and rol jle sub add mov roll and (bad) xchg mov cld popf fs ficom rcrb std or pop adc mov out mov cltd sub mov std pushf arpl lea rcrl jle sub (bad) lcall (bad) jl sub jge repz jns loopne cbtw sub mov lcall cwtl loopne xchg adc imul cld add and mov push xor ljmp icebp pushf lea cmpsb fcomip je push rol imul push sub jl and sub jg add push ds setle pop mov lcall movsl push dec insb mov icebp lahf shrl ret add rol pop pop mov xor hlt inc sbb mov lods mov insb imul (bad) cmp mov xor sub sub add repnz sbb mov lods and mov sub out inc lods outsb xor mov es popf gs mov cwtl mov rol jns sub push aas jnp cs jl sub jp loope push lods inc jbe ds (bad) test icebp pushf addr16 (bad) xlat cltd loopne je adc pop pop mov add jle and aad fwait loopne out and ljmp (bad) popf and jl rorl cld popf fs ret decb rol jg sub push ds adc (bad) jbe repz fwait inc jbe xor (bad) (bad) xchg mov nop popf dec shrl mov (bad) (bad) js das add cmp daa and cmc and jns loopne fs and (bad) xchg andl (bad) pop cmc pushf ret sbb call std insl fnsave mov psrlq jl sub or jge repz pop pop inc mov cltd sub fwait mov push inc (bad) (bad) xlat cltd fist lds sub (bad) arpl and (bad) jae out mov lahf dec lds pop imul jbe test nop popf dec and (bad) and sub or pop jno,pt mov test add or mov xlat js loope cbtw sub nop mov lahf gs loop mov xor sub das add cmp mov (bad) js loop arpl in ljmp icebp pushf and cltd fist sub sub add cmp dec sbb mov mov jmp mov inc (bad) lret into arpl add paddusw inc pop sub cld cmp and insl mov lcall cwtl loopne xchg or popl (bad) jl and sub jns loopne cbtw and movsl ds outsb mov cltd and pop shlb or sarl decb aas jle and aam cmpsb dec mov lods daa insb mov jmp insl mov hlt sahf push pushf loope leave and push cmpsb jg sub insl fnsave je push rol pop pop mov (bad) and sub pop cmpsb inc mov lcall mov sahf popf inc (bad) (bad) cmp je or sub add cmp inc sbb push roll and in lea lahf lahf inc daa (bad) pop aam loop mov in imul and dec sbb add or add mov jmp cmp jmp mov popf inc (bad) (bad) cmp mov pop pop (bad) sti add jg xor aam out mov cwtl inc leave add rorb xor push sahf ret push or sub ds fs mull pop fstps push mov cwtl sub mov sub push daa insb mov dec jno jb pop cmp and (bad) and push mov or pop adc fdivrs out mov mov addr16 mov std pushf and xchg mov in push cmpsl jle sub daa das jg hlt inc sbb mov mov imul ja (bad) es lahf addr16 aam sbb xchg xor lods add cmpsb fist jg sub or daa and aad out mov lcall fwait mov mov pushf popf inc (bad) mov shlb out push mov or jl and and jp loop in and movsb ds mov lock gs mov (bad) fwait loope mov (bad) sarb insl fnsave mov jl sub sub pop adc mov out and (bad) xchg arpl and xchg mov jns sub add jle and jae out mov cwtl inc jbe push dec insb fwait mov push dec (bad) mov negb in imul xor fstpt add push sub jge and dec pop mov out mov lahf sub (bad) xchg xor mov (bad) lcall (bad) jl sub sub jle and aam pop inc push out and movsl push dec insb lea icebp pushf push cmpsl fist js sub push jl,pt and jae out push roll and movsb xor jmp imul pop cmpsb dec mov lcall lea (bad) popf and aam jecxz (bad) and sub pushf jl and jae out mov (bad) pop imul push imul stos daa shlb or (bad) imul add cmp adc fdivrs mov lods inc leave add in jmp mov mov lahf addr16 aam sbb andl lods add lahf jecxz xchg or (bad) jns sub add and dec pop mov out push in inc lods outsl cmp call push mov sahf push fwait loope mov or sub sub inc pop xor aad out push in inc leave add mov sahf addr16 mov pushf loop jbe or (bad) std insl jp (bad) or mov nop (bad) cmp mov pushf ret std or (bad) js sub add jl and pop pop inc push jmp xor (bad) mov sahf popf inc daa mov fist cmpsb pop pop mov (bad) jle and (bad) jns loopne push lods and jmp mov popf lea mov psrlq jle sub daa das mov jns imul add cmp add (bad) jge out mov cwtl sub lea lahf lahf inc int3 mov aam jecxz mov out push mov xor jl das sahf jl das pop fdivs hlt mov cltd sub mov sahf addr16 mov aad loop mov or mov or jg xor cmc sub js loop aad and movsl xor or pop fistpl mov lods mov mov pushf data16 mov loopne leave and rol jns sub andb sub pop pop inc push out and insl mov nop popf dec and xchg mov call sub sub jns das (bad) and das pop fistpl mov lcall nop mov lahf and insl outsb mov push mov sahf push lcall mov sub add jge and aam pop inc mov cwtl inc jbe cmp insb imul cwtl loopne mov out push mov or jp das mov mov fwait repz lahf and movsb aas call mov hlt sahf push popf loope mov js dec mov pushf loope leave and ljmp cmp cmp jns repz lcall fwait mov imul cmpsl fist sarl or jle cmc dec pop mov lcall movsl cmp call (bad) es lahf inc (bad) lea (bad) and jmp pop pop mov das pop pop adc repnz jg cmp mov or jl and repnz jae out push aad inc iret add imul xchg mov pushf popf inc (bad) lea sahf ret xchg mov call mov or daa and and jae out mov fwait daa insb mov dec mov lock fs (bad) xacquire xor sub das sti add and and pop push push mov lcall dec sub jns loope out inc iret add addr16 outsb mov andl mov xlat cwtl fist jl sub add jnp jge,pn repz pop pop inc mov lahf dec lds aas call mov xchg lahf inc daa (bad) pop aam loop mov pop pop mov add hlt inc sbb mov mov imul xchg andl xchg std lahf xor jmp mov lahf inc and mov xor sub std or jp and fnstenv out push in and movsl pop imul xchg mov lcall (bad) fwait loope mov push rol pop pop mov add ds mov (bad) pop push push mov outsb xor jmp mov xor mov (bad) fwait loopne (bad) and dec mov lcall sub sub or jg hlt dec pop mov out mov fwait inc jbe aas jmp outsb mov andl lahf inc and xchg mov or lds mov das add xor cmc and jns loope push mov out mov xchg lahf inc and xchg mov out push mov das loopne daa and jns pop pop (bad) decb aas jnp das jg cmc and jns loope imul xchg andl (bad) ds loop leave and rol jl sub or adc repnz pop mov cmpsb inc mov cltd inc jbe aas call bound and xchg mov xor sub sub daa das jl repz pop mov pop inc mov cltd inc shrl int dec and js loope push sub lea (bad) popf and pushf rcll jg sub or pop ds cmp and jg repz out and movsb xor mov mov pop xlat cltd loopne jbe push rol jl sub or inc pop xor mov fwait repz lahf dec lds aas call imul xchg std lahf xor ljmp (bad) popf and xacquire or lds mov or add mov addr16 (bad) xchg jl sub pushf push fwait loopne mov or rcrb cld or mov mov arpl in ljmp hlt sahf push cmpsl fistp sub dec mov sahf loop mov xor sub sub or jl inc and jg repz in dec lds cmp jmp mov popf dec (bad) mov aad loop je or sarl sbb sbb and and jl loopne imul dec imul cmpsl fcomip je or rcrb sbb sbb cmp and fsubrl aas das fs mull pop fstps inc mov cwtl and dec outsl mov xchg lahf gs loope test push rol jns sub add jg xor repz jnp loope out and mov std lahf arpl mov (bad) lcall mov sub sub jnp jl,pn lock pop pop inc mov cwtl and or push aam push push mov lahf and dec outsb mov sub pushf addr16 loopne mov pop pop (bad) cld add and cmc dec pop mov jmp aas call imul lods and mov push rol js das and sbb ds jle repnz pop fdivrs loop jmp xor ljmp xchg lahf inc and insl jno jb inc xchg pop aam jecxz je xor sub sub add add hlt dec sbb mov cwtl inc shrl jmp mov icebp lahf addr16 fist (bad) jle sub push jge,pt xor fistpl inc mov lods and xchg mov popf and hlt jbe in push cmpsl js dec mov nop les jg sub add jl and hlt dec sbb mov cltd and mov lcall lcall (bad) pop pop lea add jg xor dec pop mov fwait loopne out inc lods outsl ds outsl mov es popf and xacquire (bad) (bad) jle sub or aaa xor jns jle sub daa and xlat pop pop inc mov cltd sub (bad) xchg mov repnz data16 mov xlat cwtl loopne je in push mov (bad) jge and repz pop push push mov or rorb in std lahf arpl stos and popf loope leave and rol jg sub or pop adc pop push push push in inc lods outsl xor or pop (bad) pop push push mov cwtl inc lods outsb aas call imul cwtl mov rol pop pop mov or cmp and js loope push sub mov lahf addr16 mov aad loop jbe or (bad) js das sbb pop inc pop xor aam cmpsb inc push jmp pop addr16 fwait mov jl sub sahf push xor ljmp cld popf fs (bad) lcall (bad) jns sub or arpl and and jl loopne addr16 dec lds pop imul xchg mov lcall shlb call sub (bad) jp das lahf jl and jl loopne out inc iret add dec insb insb mov lcall lahf jecxz je in push cmpsl js dec mov mov (bad) (bad) pop pop mov das add jge repz pop push push push jmp ds mov std pushf arpl (bad) pop (bad) lcall sarb add cmp mov mov push mov jmp outsb mov fwait and and cwtl (bad) xacquire push rol js das sbb das mov jns jl sub add ds jge repz and jp loopne imul jbe xchg xor mov sti nop ret xchg mov out push mov or jp das jle cmc inc pop mov xchg repnz cltd inc lods outsb xor ljmp std pushf fs mov aam loop mov psrlq jg sub or jl and repnz sbb push jmp xor or sbb mov cltd and jmp (bad) es lahf inc and (bad) stc je psrlq pop pop mov or jge xor repnz jns loopne push lods inc jbe xor lea jae xchg sub popf and xchg mov psrlq jg sub jle cmc sub jbe hlt mov lcall outsb mov daa lcall cwtl pop imul push andl mov xlat cltd fist (bad) pop pop lea or daa and hlt inc sbb mov lea rorb and pushf shrl je psrlq jle sub ds fstpt loope arpl in ljmp std pushf arpl lods add sahf ret divl rol js dec mov popf loop (bad) and push cmpsl jg sub or lock jns loope roll dec lds pop imul push imul sahf ret hlt jbe or lds sub or pop add repz jl loopne in and jmp andl popf dec (bad) mov xlat cwtl fist cmpsb pop pop mov (bad) pop adc hlt das jg cmp sub daa and mov out push in dec lds xor in mov icebp lahf push cwtl rcrb jl sub jg cmc and jae out mov lea rorb mov sahf data16 hlt jbe (bad) (bad) js sub or arpl and xlat jbe repz cltd and dec dec pop mov jmp xor mov sub popf and (bad) lcall (bad) jle sub add aad xchg repz out inc lods outsl cmp call lcall and mov or (bad) jg sub or pop adc repnz jae out mov lods and stos xor jmp mov lcall xor ljmp std lahf arpl mov aad loop mov or sub or add fdivrs loopne arpl in jmp mov (bad) es lahf inc (bad) mov negb or sub or ds fwait loope roll and (bad) (bad) xchg data16 cld popf and xchg leave and rol js dec mov lcall mov add cmp jbe hlt mov fwait mov mov xchg sub lahf and divl rol jle sub and mov push mov mov test std lahf and xchg mov or sub push jl,pt and jns jle sub add fnstenv repz lods sub mov andl lea cltd fist (bad) jg sub sub jge and jg repz out sub mov pushf popf inc (bad) mov xlat cwtl loopne je call sub and mov arpl int dec and js loop push lods sub mov sub pop aad loope mov or sub or repnz pop fdivrs loop in inc lods outsl push dec insl mov (bad) popf retw aad loop mov push rol pop pop lea sub inc pop xor cmc inc pop mov out mov or dec imul xchg std cwtl aas jmp mov nop popf dec and divl rol jl sub or repz and jp out mov cltd sub mov sahf popf inc shrl mov pop pop mov push aas jg xor cmc and jp out mov cltd inc leave add rorb xchg hlt sahf imul jecxz jbe (bad) (bad) js dec mov sahf jecxz jbe push rol jle sub aas das jg cmc and jns loope gs daa insb mov jmp fwait mov arpl and xchg mov adc jle sub daa and repnz pop mov out mov lods inc jbe xor ljmp icebp lahf addr16 lea mov adc jns sub or jp and jns pop pop mov (bad) arpl and mov out push jmp aas jmp mov sahf popf inc (bad) mov aam jecxz je in imul adc mov out daa insb mov insb lea repnz and cmpsl fist shrl decb ds ds jl das pop fistpl push mov mov int shr jmp test out cmp push aas jle mov lock and stc je out push mov or and aad out mov mov rorb and pushf gs sub or (bad) jl sub (bad) jnp jle,pn cmc dec sbb mov fwait mov mov nop popf dec daa (bad) pop cmc pushf ret std or sub push jge,pt popa fdivl jge sub loopne push sub outsb mov andl (bad) pop aam loop (bad) and rol js sub xor jl and (bad) jns repnz mov dec outsl mov std lahf fs mov (bad) fwait loope jbe or rcrb sbb (bad) cmp das pop fistpl mov stos cmp xchg imul mov jl jae xor cmp decb arpl and repnz pop mov push inc iret add dec insb fwait mov mov lahf lahf inc and je call sub das pop arpl and aam pop inc mov cwtl dec lds ds mov std pushf arpl lea sahf jecxz je in push mov or add hlt dec pop mov lcall add sub jns repz roll and dec xchg mov pushf arpl lods add pushf rcll pop pop mov sub inc pop xor repnz and pop pop inc mov fwait and stos ds nop mov lahf push sahf loop leave and mov or add fdivrs repz in daa insb lea in jmp mov repnz and dec nop mov sahf and xchg mov psrlq pop pop mov push ds add repnz sbb mov cwtl inc shrl rorb es and cwtl (bad) hlt jbe or (bad) jl sub or pushf jl dec pop mov pop inc mov lods daa insb mov jmp fwait mov data16 lock and xchg leave and jmp js fcom jno or cld cli fcmovnbe cmp icebp loopne gs jae or xchg or mov mov or fadd in add and xchg mov sbb sub cmpsl stos lcall loope sub fwait jecxz lock je cmp mov add out test stc fisubl mov push mov add jl sub jbe hlt mov cwtl sub mov repnz and shlb (bad) sarb sti add (bad) hlt and js loop aad sub insl mov std lahf fs mov sub or (bad) js das cld or lahf jl and jp loop gs and cmp jbe repz lods and ljmp icebp lahf addr16 mov shlb adc js sub or jns cs jl sub jp out mov fwait mov mov in lcall pushf ret sbb rol jns sub xor jl das jge repz jns loope out mov mov daa icebp addl mov xor mov sti nop ret xchg (bad) and jmp pop pop mov (bad) pop adc inc pop mov lcall movsl cmp call push mov sahf gs mov xlat cwtl loopne je out push mov add jle and aam push push push aad and mov sahf popf inc and xchg (bad) and mov pop hlt sahf push mov psrlq jg sub or cmp and jp loop arpl jmp fwait mov push inc daa mov pushf ret decl rol jl sub sub arpl and jns loope in and stos xor lea sub cmp mov jle sub push aas jl das sbb shrl decb arpl and fstps inc push jmp ds (bad) xchg mov xchg lahf inc daa (bad) pop aad loope mov push rol jle sub and and pop pop inc push out inc iret add iret (bad) mov icebp pushf addr16 ret hlt jbe or sarl cld add cmp jns loopne push lods and cmp inc and pop push push push aad and jmp test icebp lahf push nop ret xchg leave and imul sbb and dec pop mov fwait out mov lods and movsb xor mov and shlb or lds (bad) std das pop inc add repz and jp loop aad and stos push dec insl outsb mov and addl mov fwait and sahf shrl je or lds mov or (bad) imull push xlat pop push push mov lcall insl mov lock fs mov xlat cwtl loopne mov push rol pop pop mov push jp,pt and inc sbb mov lcall (bad) xchg arpl daa (bad) pop negb xor gs (bad) cmp (bad) and imul aas jg xor and pop pop inc push rorl test mov and pushf arpl lea rclb imul std or jnp cs jl inc pop mov out mov mov call mov icebp lahf push popf loope leave and rol pop pop mov xor jge (bad) xor rol imul sbb pop jle and aad out mov fwait sub mov data16 icebp lahf addr16 mov aam loop mov psrlq jl sub add cmp dec sbb push in mov mov mov popf shrl test or sub or ss cmp jg add xor jns das jge repnz pop mov fwait repz lahf dec lds cmp push data16 repnz lea loopne leave and shrl push sub jle and mov aad daa insb lea rorb test xchg lahf dec and mov adc jns sub jge repz pop pop inc mov cwtl and stos xor jmp imul pop pop inc push in and (bad) xchg push dec (bad) mov xlat cltd loopne jbe or lds mov andb and jns loopne cbtw and (bad) (bad) xchg addr16 sub popf and xacquire out push mov xor jl das jge repz pop fdivrs out mov cwtl inc jbe ds xchg mov popf and jl fisubr dec imul lcall lds sbb sbb cmp pop cmpsb inc mov lcall fwait mov imul pushf loop jbe adc js sub or jp das jge repnz sbb push aad and stos push dec insb lea icebp lahf addr16 mov shlb or sub hlt sahf ret stc je push rol jle sub aas cs jl inc sbb mov mov dec insb nop mov popf inc lea (bad) xacquire or (bad) pop pop mov sub pop adc (bad) jg repnz lods dec lds ds lea nop popf dec daa (bad) pop aam jecxz jbe xor sub sub sub jge xor mov std das pop jge xor jg repz out daa insb mov dec outsl mov (bad) es popf fs (bad) cmp mov jg sub das add xor repz and jge out push jmp xor mov jae fwait and sahf data16 (bad) pop hlt sahf ret xchg mov psrlq jl sub add and and jp loop addr16 inc lods outsl cmp call js loope fs and mov push imul cmpsl ficom (bad) js das sbb push pop adc fstps inc push out and stos xor mov mov lahf lahf inc daa (bad) pop hlt sahf ret xacquire or (bad) pop mov jns das andb sub jnp loope jmp push dec insb insl mov cld popf fs (bad) pop aam add push mov inc cmc pushf ret decl rol pop pop (bad) cld add cmp and jg repnz fwait and stos xor jmp mov lcall sub out push mov or jno,pt (bad) jl out mov cltd sub lea sahf popf inc (bad) (bad) cmp mov jle sub (bad) lcall mov xor pop adc aam xchg repnz cltd inc lods outsl ds xchg mov popf inc and xchg leave and push mov das pop inc add cmc sub pop cmpsb inc mov lods and ljmp lock shrl je or sub or jnp das (bad) and sub jg add add cmp aas das jg cmc inc and jns loope rorl test mov test std lahf arpl mov shlb (bad) (bad) pop mov (bad) pop add repz js loope push lods dec lds xor mov jae xchg xor lea ret pop or sub jge repnz jns repnz cwtl sub mov push loopne stos xchg and stos push dec insb outsb mov and lahf and pushf loop test xor sub sub jge,pn repnz pop mov push push mov add mov push fs (bad) ds fwait loope test xor sub sub add and sub jg repnz mov imul jae pop sbbl cmc test xor shrl leave and ljmp pop jl das mov aad out mov fwait and dec fwait mov xchg lahf lahf inc and xchg mov psrlq js sub add and das pop fstpt loop gs sub mov test hlt sahf push cwtl mov rol jl sub xor mov cli or rorb jp sub inc test notl inc jno cmp fbstp in decb inc add lds adc repz or xlat repz add mov add shlb pop aam push push push aad dec lds pop addr16 mov lahf lahf inc and xchg leave and push mov or mov xlat jns repz roll sub (bad) pop xor push cwtl (bad) cmc test or sarl add cmp aaa xor xlat jl out mov lods daa insb mov int dec inc pop mov out push roll inc lods outsl push dec insl xchg mov pushf addr16 loopne xchg psrlq jle sub movd push push mov mov call jl sub popf fs loopne mov or lds mov das pop pop ds cmp sub jns loope imul xchg xchg lahf lahf inc and ljmp xchg lahf inc lea mov or sub ds (bad) and sub jnp loope push mov dec insl mov lcall cwtl mov rol jns sub add cmp jp loopne arpl rorb xchg lahf gs negb xor sub dec mov cwtl rclb js sub or cmc inc and jg repz mov call push and xchg mov jg sub push ds add dec sbb mov lcall (bad) cltd and lahf and xchg mov jg sub sub jnp jg,pn hlt das jg cmp sub adc repz jbe repz cwtl and jmp mov lock fs mov negl in imul and aam out push in sub xchg mov popf inc ret sti nop (bad) hlt jbe psrlq jns sub add jl sub jp loop imul pop (bad) pop pop inc push out sub mov icebp lahf and pushf loope (bad) and rol jle sub adc xlat jns loope addr16 and jmp mov lahf inc and mov push rol jns sub push ds add repnz pop pop inc push in inc lods outsl cmp dec xchg lcall aas call mov std lahf arpl stos pop (bad) lcall mov sub or (bad) and das pop fstpt repnz lods sub mov popf inc shrl mov xor sub (bad) sti add cmp inc pop mov fwait loope push mov rorb xor mov loopne (bad) and rol js dec mov cwtl (bad) hlt jbe or sarl add cmp add repnz jns loope aad and call andl mov sub psrlq pop addr16 or jg xor fstpt repz out inc iret or call data16 pushf popf inc (bad) lea sahf ret push push rol pop addr16 sub arpl and das jg and loopne decb jl,pt and repnz pop cmpsb dec mov mov imul xchg imul cmpsl ficom sub sub push jl,pt and xlat pop pop inc mov mov rorb sub popf shrl (bad) and rol jns sub or pop setle pop xlat jns repnz lcall dec dec sbb push rorl mov mov popf inc int3 mov sub or lds sub pop xor repnz jns loopne cbtw and jno jb andl pushf and xchg or sub or jl and (bad) jns loope addr16 inc leave add mov data16 (bad) popf and call xchg xor mov fist (bad) jle sub or inc add hlt inc sbb push in inc shrl iret (bad) fwait mov arpl and fist mov ljmp pop jge xor mov lcall movsb xor jmp mov popf inc (bad) (bad) xlat cltd loopne mov (bad) (bad) js dec mov nop ret xchg leave and (bad) push sub arpl and cmc inc and jp loop arpl jmp (bad) pop xor data16 (bad) cmp je push rol pop pop mov sub jns cmpl push push mov add dec insb jno jb push xchg icebp pushf addr16 lea jbe or lds sub or pop add jns jle sub or pop adc fdivrs loope push lods daa insb lea call imul mov aam loop leave and rol jg sub das pop pop add hlt dec pop mov aad mov mov std pushf arpl lea cwtl loopne mov psrlq pop pop lea or jl sub pop pop inc mov lods and cmp inc pop mov fwait loopne in dec lds xor (bad) (bad) xchg arpl ret aad loop xchg xor sub sub push aas jnp das fs hlt and jae out mov lods inc shrl addr16 jno jb inc xchg lahf and test or (bad) jle sub add jl and jns loopne push lods and mov inc lds and stos ds mov icebp pushf push sahf jecxz (bad) and imul xor mov addr16 mov hlt sahf push cwtl fist mov sub or adc xlat jp loope push sub xchg mov lahf and xchg fdivrs hlt sahf push lahf jecxz test or (bad) imul decb ds add xlat pop cmpsb inc push roll dec lds cmp call test lcall (bad) lcall sub sub adc hlt sub pop cmpsb dec mov lcall jno jb pop adcl xchg (bad) and rol jg sub or xor rol jg sub or pop adc inc and pop push push push aad inc iret add dec insl insb mov nop popf dec and mov pop pop mov xor pop add repnz jg repz in inc jbe ds jno jb andl mov negb out push mov add ds cmp das pop fstpt add sub jl and mov push inc jbe xor mov push (bad) inc xchg ds nop (bad) hlt jbe or sub sub arpl and hlt inc sbb mov lcall outsl mov and pushf arpl mov (bad) fwait loope je xor sub (bad) cld or lahf jl inc sbb mov lcall mov sub imul insl addr16 xor lea sahf ret pop or mov jg cmc and jns repz in dec lds xor (bad) mov icebp pushf and lcall lds sub push jp,pt das jg cmc das pop fdivs hlt mov cltd and stos ds addr16 xor stos pop aam sbb inc xchg sahf fs ret sbb addr16 sub jnp cs jl and jge out mov cltd and movsl ds nop mov sahf data16 xchg (bad) and rol jg sub add adc mov cmpsb inc push aad and movsl cmp xchg push arpl lea fwait loope test or sarb std insl fnsave mov or lds mov sub jle and cmc and pop cmpsb inc mov mov jmp nop mov sahf and xchg mov or (bad) jg sub push ds adc mov aad inc iret or call mov lahf lahf inc and xchg mov or sub das loopne pop xor cmp jg add push aas jle and fnstcw repnz lods and mov cld popf gs mov cwtl rclb imul and sbb jl and pop pop inc mov mov dec insb xchg mov lahf gs (bad) cmp leave and rol jl sub or arpl and pop push push mov cwtl inc lods outsl ds mov sub out mov lcall insb mov std pushf arpl lea fwait loope mov or sub or cmp pop pop inc mov lcall mov nop popf dec and xacquire push rol pop pop (bad) sti add jl and jge out mov fwait and dec xchg mov sahf push jl ficom and sahf push lcall sub das sbb pop jg xor cmc and jns loope roll sub outsl mov adcl xchg mov xor sub sub add jl sub jns loope imul xchg imul lea (bad) hlt jbe or (bad) std insl fnsave mov psrlq jle sub daa and fistpl inc push roll sub mov lcall cmc pushf ret add rol js sub push ds add fistpl mov fwait mov mov xchg lahf dec and je push rol pop pop (bad) call add mov add cmp ss cmp pop pop inc push aad and stos cmp xchg push dec and xchg mov adc js das sbb push jg xor repz jl out mov mov dec insl insl mov std lahf arpl lea rclb loopne std or jg xor hlt sub jg repz lcall mov sub push cmp jmp mov sahf and xchg (bad) and jmp jle sub or pop add xlat jp out mov cwtl sub mov nop popf dec shrl leave and jmp jg sub add cmp das pop fistpl inc mov cltd mov mov fwait and sahf push push dec insb outsl mov test cld popf and xacquire or (bad) jle sub add repnz and jbe hlt mov lcall outsl mov (bad) and sahf fs hlt sahf ret xchg mov xor sub sub and (bad) jns repnz lods and movsl pop addr16 xchg mov pushf data16 xchg mov xor arpl lea loopne mov jns sub add cmp sub pop pop inc mov movsb xor lea jae lcall pop hlt sahf ret xchg mov or (bad) pop pop mov sub inc add mov push mov in in mov icebp pushf and cwtl fist pop pop mov das add sbb mov sub (bad) jp das pushf jl and pop pop inc mov lea in jmp mov cld popf fs loope jbe out push mov (bad) jl and fdivs hlt mov stos cmp xchg jl sub pushf arpl mov aam jecxz (bad) and jmp jle sub aas das jge repnz pop fdivrs repnz cltd and jl sub pop pop inc mov lahf dec lds push dec insb mov std lahf and mov jg sub push jge,pt xor jnp loopne push mov jmp outsb mov inc xchg lahf addr16 lea sahf loop leave and rol pop pop mov or and (bad) jp loop jmp ds imul mov mov mov icebp lahf push cltd fist shrl add cmp ds jl inc and jge out mov cltd daa insb mov dec mov repnz data16 mov xlat cwtl fist lds mov push jge,pt xor hlt dec sbb push out and dec xchg mov popf and hlt jbe xor and mov out push mov add cmp inc and jl out mov lcall xchg mov pushf arpl (bad) cmp mov or rcrb cld add cmp das pop fistpl push push jmp ds lea std pushf arpl stos daa shlb (bad) (bad) jg sub add push cmpsb js sub push aas jle and xlat jge out mov mov call arpl (bad) (bad) ds loope (bad) and sub or jl and jnp loopne push xor mov mov lahf arpl (bad) pop (bad) lcall mov mov and repz jp loope push test cmc sub jl out mov lods inc leave add mov sahf push fwait loope je or sub or add mov imul xchg imul fwait loope mov or lds mov add ds jl and jae out mov cltd inc shrl rorb push mov addl mov mov and popf loop mov xor sub sbb push pop adc sub js loope push lods and insb mov lcall cwtl (bad) divl rol jle sub xor jl and and jl out mov lcall xchg mov pushf fs mov (bad) lcall addr16 lahf inc daa (bad) pop sub out push mov or ds (bad) and inc and jae out mov lcall fwait mov (bad) inc xchg shlb (bad) (bad) pop pop mov mov mov out mov lods mov mov pushf and xchg leave and push cmpsb pop pop mov or arpl and imul and (bad) jl out mov lods and movsl cmp call xchg xor lods add sahf ret hlt jbe psrlq pop pop (bad) and sbb cmp and jae out push rorl mov sub ds lcall sub sub sub jg xor aad fwait loope gs and cmp jl out mov lahf and dec mov lcall negl out push mov or and xlat pop push push mov lods sub mov push data16 mov loop mov adc jg sub cmpl arpl dec insl mov icebp addl mov sahf push sahf ret and rol pop addr16 add (bad) hlt and jnp loope addr16 and outsb mov and inc sti nop ret xchg mov or lds mov (bad) inc pop xor jge out push roll inc iret add jmp mov nop popf dec and xchg mov xor and mov out push mov (bad) jge xor xlat pop pop inc mov cwtl and stos pop imul insl data16 lcall sahf ret cltd mov or mov xor arpl and (bad) jns loope jmp aas jmp outsl mov and pushf arpl stos daa hlt sahf ret and imul cmp ds cmpsb jle sub and hlt inc pop mov xchg repnz cltd and jmp mov xchg xor mov pushf loop je or sub lahf jl inc and jge out push out sub fwait mov mov sahf popf inc (bad) (bad) cmp je in push cmpsl js sub add (bad) imull pop fdivrs loopne out and (bad) (bad) dec sbb push aad inc leave add mov popf inc daa mov ficom js das std das pop jp das jg cmc and jp loope push inc jbe ds (bad) xchg push fs cmpsl fcomip jbe in imul cmpl pop inc mov cltd inc leave add mov pop xor add xor ljmp lahf lahf inc (bad) (bad) ds fwait loopne mov or sarb add cmp and and pop push push mov cwtl and insl mov (bad) popf and sahf loop mov js das sbb add (bad) jp loop aad sub mov sahf and cmc test xor dec (bad) lea cwtl rclb pop pop (bad) cld add repz js loop out and outsb mov pop sbbb aam jecxz (bad) and rol jg sub or aam pop fstpt loop jmp aas call mov xchg lahf inc daa (bad) pop negl or (bad) jle sub and push cmpsb pop pop (bad) and sbb xor (bad) pop pop inc mov cltd mov mov and lahf data16 xchg mov in push cmpsl pop addr16 xor jg xor repz jp loopne jmp pop imul jbe andl mov sub in push cmpsl jl sub or mov fnstcw out mov cltd and cmp jns loope aad inc jbe cmp xchg imul sahf jecxz jbe in push mov add jge and cmc sub pop pop inc push aad mov mov sub popf data16 (bad) xlat cltd loopne mov psrlq pop pop (bad) std or jge and pop push push mov cltd inc jbe cmp insl addr16 sub addl mov popf inc lea mov in imul xor xlat jns repnz cwtl sub mov sahf retw shlb or das add cmp ds jge repnz jns loopne push lods inc lods outsl pop addr16 fwait mov imul stos pop aad loop test xor data16 mov pushf loop mov or sub sub inc add repnz pop push push mov cwtl and insl mov icebp lahf push lahf jecxz mov push rol jg sub add jg xor repnz jbe hlt mov lcall mov xchg lahf inc (bad) (bad) ds fwait loope test out push mov das pop pop add rol jg sub (bad) jns jg,pn hlt dec sbb mov lcall outsl mov mov shlb adc jle sub xor jns jg,pn cmc das pop fistpl inc mov fwait and stos push dec insb outsl mov sub lahf push lcall (bad) pop pop mov adc repnz sbb push roll and and and jae out push rorl jbe pop addr16 nop mov pushf addr16 negb or sub add cmp dec pop mov imul push push addr16 (bad) ds loop mov js sub xor jle and repz and jp loopne addr16 inc iret add imul xchg imul and movsl push dec outsl mov (bad) popf and nop (bad) cmc test xor sub sub das pop jp das cmpl out mov cltd sub insl mov cld popf fs loop je or sub or jns das (bad) and and jns loopne push sub (bad) xchg push dec and xchg mov xor dec (bad) (bad) cmp mov psrlq imul ljmp pop jp das jg hlt inc pop mov push push mov mov jmp mov lock fs fist sub mov or and dec pop mov out mov lcall fwait mov mov repnz data16 (bad) cmp xchg psrlq jle sub and rol pop pop (bad) sbb add fnstcw out mov cltd inc jbe push dec insl mov hlt sahf push lcall (bad) jl sub add repnz pop pop inc mov lods sub mov xchg lahf dec and xchg leave and rol jl sub or cmp and jns loopne push lods and cmp inc sbb mov lcall (bad) andl (bad) pop sti nop (bad) cmc test in push mov sub jle and repnz jg repz stos aas jmp mov sahf popf inc lea mov xor sub sub sub pop adc (bad) pop pop inc mov cltd sub mov icebp adcl or orl dec addb xor jae rorl lcall sahf jecxz jbe adc js das cld or jg cmc sub pop push push mov lcall insl mov lock fs mov call das sti add jl das jg hlt and jnp loopne cbtw and movsl ds insl mov sahf popf inc int3 mov cmc pushf ret decl rol jns sub insl fnsave mov or sub or jge repz jp loop addr16 inc lods outsl pop addr16 jno jb cltd and sahf data16 xchg mov pop pop (bad) cld add adc cmc dec sbb mov cltd inc lods outsl cmp call xchg xor lea cmpsb fist mov sub sub arpl and repnz sbb jle xor arpl and fnstcw out mov cltd mov mov lahf gs loopne mov (bad) sarb or pop setg pop (bad) js loope push and call (bad) es popf fs loopne leave and rol pop pop mov das pop pop ss (bad) hlt das pop fdivs hlt mov mov rorb js loop in inc iret add dec insl jno jb push mov pop (bad) lcall sarb std das pop pop adc aad out mov lcall jno jae test (bad) popf and mov psrlq jns sub push jns,pt jge,pn repnz pop fdivrs loopne roll dec lds push dec insb mov xchg lahf inc (bad) (bad) cmp (bad) pop cmp arpl stos pop aam jecxz mov out push mov or ds jl inc pop mov lcall add out (bad) xchg mov icebp pushf shrl mov rol pop pop (bad) cld add cmp and jae out mov lods and stos aas call jl sub pushf gs (bad) cmp mov or (bad) pop pop mov insl insl mov and cmp push gs sub (bad) (bad) pop pop mov or jns mov xlat jge out mov stos ds imul mov ret xchg (bad) and imul pop jl and cmc inc and jns loopne push lods and mov dec andl lea cltd fist (bad) pop pop lea (bad) xor (bad) and sub or aas mov fnstcw loopne push mov rorb mov and cltd loopne mov psrlq pop mov or movq lcall or call xchg (bad) popf addr16 mov loopne mov xor sub sub add jnp jle,pn cmc dec pop mov xchg repz pop mov mov lods iret rclb popw jp movsl popf lock add ret les jge and fnstenv out push roll inc lods outsb aas call arpl and leave and push cmpsb jl sub add cmc and jns loope in inc jbe ds push and xchg mov pop pop mov jge repnz jge out mov fwait and outsl mov push pop cmp out hlt sub popf and (bad) jle sub or jg xor cmc sub jns loopne push lods and jmp mov lcall (bad) lcall mov mov sub inc add mov out and movsb xor (bad) mov lahf lahf inc and (bad) and rcrb call das cmpl gs and hlt add mov idiv stos xchg inc out out ret dec imul sti mov adc jge (bad) inc xchg pushf push mov adc imul sbb push jle and aam out mov fwait mov mov popf gs mov loope (bad) and rol imul std or jnp jg,pn hlt and jns loope imul xchg bound shrl mov or mov or jge (bad) xor rol js sub or pop add mov addr16 inc iret add jmp insl mov sahf popf inc and cmc test or sub or add and jae out mov cwtl dec lds pop addr16 mov sahf popf inc and cmc test psrlq jl sub push aas jnp mov aam xchg repz inc mov add mov div inc popa lock mov cmc idivb cld add and mov fwait repz cltd sub mov fwait and sahf lea lahf jecxz je in imul and pop pop inc mov add mov lahf and xchg mov jle sub xor arpl and das pop fistpl mov lods inc jbe xor or pop (bad) jp out mov lods inc jbe xor mov jae cltd and popf and lcall sarl push sub jns das cmpl fs mov jae andl sahf fs (bad) ds jecxz test xor sub sub (bad) pop add (bad) js loope fs daa insb mov dec mov std lahf arpl xchg std lahf xor ljmp cld popf fs shlb in push mov or and inc pop mov push push push roll inc leave add call mov sahf popf inc and xchg mov or sarb or and aam fwait loopne gs and outsb mov and daa aam jecxz (bad) and sarb mov fwait loope mov xor sub mov das add xor cmp jns repz out and movsl ds mov pushf popf inc lea jecxz je or mov sub jl and repnz pop pop inc push aad dec lds pop imul push arpl daa (bad) pop cmc pushf ret sbb rol jns sub or andb das jg and fsubrs and sbb jl dec sbb mov or call fwait and pushf and cwtl fist pop pop mov or hlt and jnp loope imul xchg push fs mov (bad) fwait loopne mov adc imul add cmp adc repnz pop pop inc mov cltd and or and pop pop inc push roll dec lds aas jmp mov sahf popf inc lea loopne jbe in push mov push aas jle and mov push mov dec insb insb mov (bad) popf addr16 mov cmc pushf ret (bad) out push mov or jns das (bad) and inc and jg repz mov addr16 mov nop popf dec and in fwait mov push inc and test psrlq imul sti add jl inc and pop pop inc mov cltd mov mov lahf inc (bad) mov negl out push mov or cmpl gs and movsl cmp jmp mov lahf addr16 (bad) cmp mov (bad) (bad) js dec mov cwtl loopne je or sub add mov out mov lods and insb jno jae lcall pop aad loope mov in push mov sub jle and mov imul xchg push inc daa (bad) pop shlb or sarl add cmp and fsubrs push sub inc pop xor mov xchg repz in and fwait mov mov lcall sub or sub or cmp jae out push out daa insb mov dec (bad) pop adcl xchg mov pop pop lea add cmp and jns loopne fs sub and jp loope push lods inc leave add rorb mov xlat cltd loopne mov or (bad) jle sub or jl and cmc and jp loopne jmp xor ljmp icebp lahf addr16 aam jecxz (bad) and rol js das add cmp adc pop cmpsb inc push out and lea and pushf arpl xchg std cwtl push dec insl mov icebp pushf addr16 (bad) lcall sub and sbb and mov push push mov lcall mov xchg lahf dec and cmc test xor sub das std das pop jge xor (bad) pop pop inc push roll and dec mov cld popf fs (bad) cmp mov psrlq js mov jno leave add (bad) in imul and repnz pop fdivrs loopne arpl iret (bad) lea lock and xchg mov push rol imul decb jp,pt das pushf jl and jbe hlt push jmp xor mov mov (bad) fwait loopne mov or mov sub jge xor repnz jns repz cmp (bad) testl mov mov in jmp mov xchg and cmpsl fist (bad) js das std das add and sub jp loop push lods and stos pop addr16 mov hlt sahf push cmpsb ficom mov or jg hlt dec sbb push roll and in fwait mov imul xor mov jb pop cmp and hlt jbe push rol imul add cmp adc fistpl inc mov test mov std pushf and hlt jbe out push mov das lcall fs hlt sub pop push push mov lcall jno jae (bad) es popf dec and fdivrs cld popf gs mov xlat cwtl fist lds sub das add and hlt sub pop cmpsb dec mov mov iret mov lcall aam jecxz xchg call mov or (bad) imull push aam fwait loopne push lods and lea imul cwtl loopne test push rol jl sub insl fnsave jbe out push mov sub jp and repnz jp loope push mov imul xchg jl sub lahf and xchg mov xor sub lea sub jle and aad out mov lcall mov cld popf and xchg leave and rol pop pop mov or daa das mov xlat jg add and sbb jl and jp loope push pop imul xchg mov (bad) popf retw shlb xor sub mov das add xor mov fwait hlt mov cltd sub fwait mov (bad) inc xchg lahf arpl loopne xchg or shrl sbb add fstps inc push rorl mov imul pop push push mov cwtl and mov std pushf arpl (bad) cmp mov pop pop (bad) std das pop pop adc jae out mov cwtl inc shrl jmp jno jb xchg xor mov sti nop les jns sub push jns,pt das jg cmc and jbe repz lcall fwait mov mov lcall aam sbb test icebp pushf shrl loopne je xor sub sub xor jp das mov mov fwait hlt mov cltd and dec mov lcall xlat cwtl loopne je adc jle sub add hlt inc sbb mov lahf sub outsb mov push mov negb adc js das std insl jo jno vdivsd rol jl sub or hlt das pop (bad) out mov cltd sub mov repnz data16 (bad) ds fwait loope (bad) and push mov sub jge xor repz jns loope addr16 mov lcall mov or mov push ds add fstps mov cwtl and jl inc sbb mov cwtl sub mov nop popf dec daa (bad) pop aad loop je psrlq pop pop mov add cmp pop push push mov lods inc iret add out lea lcall pushf loope mov psrlq pop pop popl (bad) jg xor fnstcw repnz cwtl inc shrl in ljmp icebp addl mov popf dec and xchg (bad) and imul xor (bad) jns loope roll inc iret add out mov (bad) popf addr16 mov fist cmpsl js sub sub jnp das jg cmc and pop push push mov lcall xchg mov pushf addr16 mov shlb xor data16 lea and mov or jge xor cmc inc sbb mov lahf sub xchg mov pushf and cmc test push rol pop addr16 add cmp dec pop mov addr16 outsl mov lcall pop shlb call mov xor jl das sbb lds lea (bad) jns jl,pn repz pop mov fwait loopne arpl rorb push mov sahf and xchg mov psrlq jg sub add and das pop fdivrs out mov cltd inc iret or rorb xchg hlt sahf imul loopne mov imul decb jns,pt das jge repnz pop mov push push mov cwtl and cmp sub pop push push push out inc lods outsl push dec outsl mov nop popf dec and xchg leave and ljmp ds adc aam push push mov lcall mov lahf lahf inc and stc je in push mov or add fdivs out mov cwtl and movsl xor (bad) lea icebp addl mov sahf gs mov xlat cltd fist jle sub ds cmc dec sbb mov lods dec lds xor ljmp lcall sti nop ret xchg (bad) and imul cmp cmp jge out mov cwtl sub mov lock fs (bad) cmp mov xor dec ret sub in imul xor js loope cbtw and jno jb push mov lahf addr16 (bad) cmp (bad) and push cmpsl jl sub sub jge and (bad) jns repz cwtl inc leave add in ljmp repnz shrw leave and rol jl sub or inc add jmp pop pop mov cs jl sub pop push push mov fwait and stos pop imul xchg imul popf loope leave and rcrb decb arpl and repz and jnp loope addr16 (bad) xchg addr16 sub pop hlt sahf ret adc rol js das add cmp xor xlat pop push push push out and cmp jp loop in inc jbe push dec outsl mov (bad) popf and cwtl fist mov add jle and fnstcw loopne push pop addr16 insl mov lcall (bad) fwait loopne mov jns sub or cmpl arpl in jmp mov addl mov hlt sahf push pushf loop test or (bad) jle sub pop xor fstps push push in inc lods outsb xor in mov repnz data16 mov aam jecxz mov in push mov sub pop adc inc pop mov cmpsb inc mov cltd sub xchg mov popf gs mov loopne mov xor inc and xchg mov push rol jg sub or add xlat jp loopne gs and (bad) xchg (bad) inc xchg aam jecxz mov push rol pop mov or cmp das pop fstpt loop push mov dec insb mov pushf popf inc (bad) lea nop (bad) divl rol jl sub add add jmp jl sub add (bad) mull pop (bad) jp loop in and jmp xchg sub lahf gs aad loop (bad) and push cmpsl jg sub (bad) inc pop xor (bad) testl push in and (bad) (bad) xchg imul lcall mov mov (bad) jge and dec sbb push aad and and dec pop mov xchg repnz lods inc lods outsl aas jmp outsb mov and lahf gs loopne xchg or (bad) jg sub or pop ds jl sub jl out mov lods and stos xor ljmp hlt sahf push fwait loope xchg or lds (bad) sti add inc pop xor and and pop push push mov cwtl and movsl push dec insb nop mov adcl jns cmp test mov mov jl sub add add mov out push in and stos xor mov dec arpl daa mov nop les lds add cmp ds jle cmc dec sbb push in inc leave add mov popf and xchg mov jg sub das pop pop add hlt and jp loop dec cmp jl sub pop pop inc mov cltd sub outsl mov mov pushf arpl mov shlb push rol jg sub add cmp dec pop mov in mov insl jl sub pushf fs mov lcall cmpsl pop pop popl (bad) pop adc mov jmp push dec insb mov sub gs sub mov hlt sahf push fwait loope mov or lds (bad) call das fs (bad) dec pop mov addr16 mov std lahf arpl ficom sub sub add cmp pop cmpsb inc mov cwtl sub insl mov cld popf fs (bad) pop aam add test cld popf gs mov shlb or lds sbb xor repnz pop push push mov lcall insb mov sahf popf inc shrl mov xor sub std das pop jl and aam push push push in and outsb mov and lahf and je or lds (bad) std insl fnsave (bad) and rol jns sub or jl and js loope fs and movsl cmp jne andl mov pushf ret and push cmpsl pop addr16 xor jg xor jns loope out inc lods outsl aas jmp outsb mov and popf and xchg (bad) and rol jns sub or and inc and jg add push sub inc add xlat jnp loopne push mov rorb test lcall lcall sarb sbb pop jge and sub jge out mov lods and call in repnz data16 (bad) pop (bad) lcall mov sub and cmc and jae out mov lahf inc iret add dec insl mov sub repz jmp pop imul push xchg repnz and xchg mov or (bad) decb ds add mov cmpsb inc mov mov imul insb andl lods and lahf jecxz test xor sub mov or jnp mov fnstcw repnz lcall nop mov popf inc daa (bad) pop aam sbb push xchg std pushf and cmc test or lds sub add jl and jl loopne push mov iret mov push jl sub lahf arpl fist mov sub push ds add jp loope push lods dec lds push dec insl xchg mov popf gs mov aad loop mov adc js das std insl fnsave je or mov add (bad) imull pop fdivs hlt mov cltd inc shrl rorb daa pushf popf inc and cltd mov adc jle sub xor jp das jge repz jae out mov lcall lea cld popf and xchg mov adc js das and sbb and jg add sti add jl and jp loopne gs and stos xor mov push addr16 xor lea add rol pop pop mov sub jge xor repnz pop pop inc mov lcall xchg mov pushf arpl lea decl rol js sub or pop setg push aam lcall mov in jmp imul jg repz cltd and jmp mov sub lahf and xchg mov push rol jg sub or cmp and jp loopne addr16 sub vfrczss hlt sahf push cltd loopne xchg adc pop pop lea add inc pop xor aam cmpsb inc mov movsb pop imul jne xchg xor mov aam sbb push mov pushf and xchg mov js das cld or (bad) and sub jl loopne roll sub lea xchg lahf inc (bad) mov negl or sub daa and and pop push push mov cltd and movsb xor lea es pushf arpl lea rcrb jns sub insl fnsave mov or sub xor cmp js loop aad inc iret or call data16 (bad) popf and lcall sub sub and mov lcall or dec outsb mov and pushf addr16 mov aad loope (bad) and rol jg sub or pushf jl and jg add push ds ds cmp and jp loopne rorl dec mov repnz addr16 mov pushf loop je or sub or and cmc sub pop pop inc mov cltd daa insb lea in ljmp lcall cmpsb (bad) je or (bad) pop pop (bad) std das add and aad out push in and mov loope cwtd inc jbe cmp call push mov sahf gs mov hlt sahf ret xchg mov in imul adc repnz and jp loop roll dec lds pop addr16 mov repnz lea cltd fist jg sub or jg hlt inc sbb mov lods inc jbe ds addr16 xor xchg std cwtl pop imul jbe in lock and divl call sbb and xlat pop push push mov cltd inc jbe xor jmp mov lahf fs mov sti nop les (bad) jl sub add cmp pop pop inc mov lahf and nop mov sahf data16 (bad) pop aam loop mov out push mov ret hlt sahf ret xchg mov call sub or andb sub js loope push pop imul xchg mov icebp pushf addr16 (bad) cmp xchg out push mov (bad) pop adc hlt inc pop mov out push roll inc iret add iret mov push xchg lock and cltd mov call sub xor jns pop pop mov or daa and mov gs mov insb addr16 xor (bad) pop shlb adc jle sub pop xor xlat jns loopne push and movsl cmp xchg mov std lahf arpl lea cmpsb ficom mov (bad) and sbb add aam out mov stos xor or pop (bad) out mov lahf inc shrl addr16 jno jb pop cmp and mov out push mov add cmp jns repnz mov in jmp mov inc xchg lahf gs lea sahf jecxz mov or (bad) pop pop mov add cmp jbe repz cltd and mov cld popf and insb mov std pushf arpl lea mov xor sub add cmp cmp jns loope out inc iret add imul jbe test pushf popf inc and xchg mov out push mov add adc mov roll inc leave add mov push mov xlat cwtl loopne mov push rol js dec mov lcall mov or jp and fnstcw loope push lods and movsb ds imul cwtl fist mov or ds jl lock and pop cmpsb inc mov fwait and outsl (bad) xchg arpl lea ret xchg (bad) and rcrb std or jge xor jns pop pop mov push aas inc pop xor cmp jp loop jmp aas call imul pushf loop mov push rol js sub or pop adc mov out and jmp xchg sub aad loope mov psrlq js das cld or pushf jl and js loop jmp xor or push aam out mov cltd and (bad) in std lahf fs mov pushf loop jbe xor sub lea sub jge xor fnstenv repz lods inc jbe xor mov dec push arpl mov negl or sub push aas jnp jl,pn lock and pop pop inc mov movsb xor mov and pushf arpl xchg dec cmpsl fsubrs out les xchg int3 inc sbb addr16 mov or cwtl loopne mov or lds mov add jl inc sbb mov lcall mov std lahf arpl lea sahf jecxz (bad) and jmp jle sub and repnz jbe hlt push jmp push dec insb mov icebp pushf push cmpsb fistp cmpsl jle sub daa and adc pop mov fidivl sub dec sub jl out mov mov dec insl outsl mov mov lahf and cmpsl ficom js das std das pop jge xor hlt dec pop mov cmpsb inc mov cwtl sub mov std lahf arpl lods add lcall (bad) pop pop (bad) push sub pop add xlat pop push push mov mov iret (bad) lea cld popf and jmp mov xchg repnz retw xlat cwtl fist (bad) jle sub add repnz pop pop inc mov lcall jno jae in xchg lahf inc and xchg mov xor sub sub das pop pop adc jae out push aad inc iret add imul xchg bound (bad) mov (bad) lcall (bad) js loopne roll (bad) push mov add xor imul jl,pt and inc sbb push jmp pop addr16 outsl mov and pushf data16 divl rol pop addr16 das pop pop add cmc and pop pop inc mov mov jmp insl mov hlt sahf push cwtl mov push cmpsl pop pop lea or repz pop push push mov cmp cmp pop push push mov mov iret (bad) lea sahf popf inc and xchg mov or rcrb add cmp xor aad fwait out mov lcall mov pushf popf inc ret aad loope mov out push mov or jl das pop fstpt loopne push cmp call mov lods and outsl (bad) xchg imul popf loop jbe xor sub mov or pop ss cmp pop pop inc mov lcall outsl mov in lcall (bad) lcall (bad) pop pop (bad) sbb das lahf jl sub pop pop inc push rorl mov mov mov repnz data16 xchg fdivrs icebp lahf push lahf jecxz mov push rol pop pop lea or jl and jp out mov lahf inc iret or call data16 std lahf arpl lea popf loop xchg adc pop addr16 sub pop add mov pop inc mov lods daa insb mov dec mov sahf popf inc and xchg mov xor sub (bad) cld add cmpsl adc leave (bad) push add fs sbb sbb jns loope addr16 vfrczss nop popf dec daa mov lcall (bad) jl sub push jns,pt cs jl inc and pop push push push in inc leave add mov popf dec (bad) (bad) cmp mov (bad) shrb add cmp daa das mov aam fwait out mov lods and ljmp xchg lahf inc and ficom and pushf addr16 (bad) shlb or sub xor jns das jg hlt sub pop push push push aad inc jbe xor ljmp icebp pushf addr16 lea (bad) and sub daa and repz jp loopne in sub outsb mov fwait and lahf arpl lea cwtl mov rol js dec mov pushf rcll pop pop mov add jg xor (bad) jae out mov fwait and stos xor lea daa nop popf dec (bad) (bad) cmp mov jl sub or mov mov out mov mov in ljmp lcall negl or (bad) pop pop mov (bad) jge and das jg jbe inc mov aad into dec jbe ficom and lahf arpl lods add nop les mov (bad) std das add and fdivrs repz lods sub mov xchg aam loop mov pop mov or mov mov cmpsb inc mov lods mov insb jl sub shlb psrlq jl sub insl fnsave (bad) and ljmp aas jnp das jge repnz pop mov in daa insb lea in ljmp std pushf arpl stos and cmpsl fcomip je (bad) (bad) pop pop mov or pop ss cmp jnp loope out sub mov test pushf popf inc (bad) lea pop psrlq jle sub daa and inc and jg popf sbb pop push xor sub sbb repz lcall inc shrl call jl sub sahf data16 mov hlt sahf ret pop push rol js das and sbb jl and pop push push push roll inc shrl out outsb mov push xchg lock and stc je or mov or and repz jp loop gs dec lds xor (bad) (bad) xchg andl mov negb xor push arpl loop pop (bad) lods nop or sub mov lcall sarl call xor repnz pop push push mov mov imul xchg mov lcall cmpsl ficom (bad) pop pop mov push aas jnp cs jl sub jl out mov cwtl inc jbe xor jmp mov xchg sahf and hlt jbe in push mov or add jns pop addr16 add jl and xlat pop pop inc mov fwait daa insb mov dec mov std lahf and divl rol pop pop lea (bad) jl das mov fistpl inc mov mov out mov repnz lea lahf jecxz mov or sarb decb aas inc pop xor cmc das pop fdivrs out mov cltd and dec das pop fistpl mov lcall jno jb push mov sahf and stc je or sub xor jnp mov aam lcall outsl pop imul jae xchg sub daa xlat cwtl fist sarb sbb adc hlt dec pop mov gs sub (bad) cltd and std cwtl cmp xchg arpl and mov in imul and pop push push mov cltd sub xchg mov popf fs (bad) pop aad loop mov or (bad) jl sub add jg xor fnstcw out push in and movsl ds nop mov popf data16 (bad) cmp je push rol js dec mov mov (bad) (bad) pop pop mov add add repnz pop push push mov lcall mov pushf popf inc and divl ljmp cmp and and jbe repz cltd and ljmp pushf popf inc and loope mov xor sub sub sub jge and jns js sub xor pop add repnz sbb mov lods inc shrl jmp mov repnz and cmpsl ficom sub mov add and jg repnz cwtl and stos pop addr16 mov lcall lahf loop mov or (bad) jns sub or ss (bad) hlt and jp loopne out sub dec inc pop mov out mov fwait and jmp mov lcall lcall lds das push sub jl and repnz pop pop inc mov lods and stos pop imul xchg mov lock and divl call add cmp and mov lcall movsb aas call imul mov mov xchg xor lods daa negl or sarl cld or sahf jl das pop fistpl inc mov lods sub mov bound and cmc test xor sub sub sub pop add dec sbb mov lcall insl mov sahf popf inc lea lahf loop mov add lahf inc shrl jbe in push cmpsl jg sub or jnp das cmpl push mov out mov (bad) popf retw cmc pushf rcll jl sub push ds adc dec sbb push aad and movsb aas call arpl and jecxz mov (bad) shrb cld add add leave mov adc mov mov xor nop dec cltd test sub mov or into (bad) hlt sbbl add mov mov jl sub sub jl and aam out mov lods sub mov icebp lahf addr16 (bad) pop cmc pushf rcll js das cld or cmpl lcall add out nop mov sahf data16 xchg (bad) and push mov sub jg xor pop pop inc push in daa insb mov int dec sub jbe hlt mov cltd and xchg mov popf inc (bad) mov (bad) fwait loope je or (bad) sti add cmp jns loope addr16 inc iret or call arpl and xchg mov adc imul and sbb jl and pop push push mov fwait mov dec bound and jmp xchg xor mov aad loope mov or sub or (bad) and das pop fstpt repz jmp aas call data16 lahf lahf inc and xchg leave and push cmpsb js das sbb sbb jl dec pop mov aad dec lds cmp xchg push lea mov in imul sahf jecxz mov or (bad) jle sub sub jl and cmc and jbe repz lcall insl mov lahf lahf inc lea fist pop addr16 sub arpl and repnz pop cmpsb inc mov cltd sub mov lahf inc daa (bad) pop aad loope leave and imul cmp jl das jg cmp lea (bad) pop add mov pop inc mov cwtl inc iret add jmp xchg mov sahf gs mov aad loope mov pop pop mov add setle pop mov jmp push dec insb fwait mov push inc and je psrlq pop pop mov sahf jl and pop pop inc push in inc leave add das pop fistpl inc push out sub mov and cmp jbe or lds sub or jl and repnz pop push push mov cwtl inc iret or call imul popf loope mov push rol jg sub add jl and jp loop aad inc lods outsl xor mov dec imul ds outsb mov and sahf data16 (bad) cmp mov jle sub xor jl and cmc inc sbb mov outsb push dec insb (bad) xchg data16 lcall aam loop mov xor sub sub or jl and mov gs dec lds ds imul stos pop hlt sahf ret xacquire xor sub dec mov mov push rol jl sub das add mov fistpl push mov lods and insl outsl mov and pop aad loope mov jg sub das pop jge xor cmc and jbe repz lahf inc lods outsl ds (bad) pop cmp and fwait loope (bad) and push cmpsl imul sbb sbb and das jg cs hlt scas sbb stos cmc ja sahf and iret jp aas fisubr jae andl popf inc daa (bad) pop negb push rol jg sub sub jl and repnz jp out mov lods inc iret add jmp outsb mov sub popf and xchg mov in push mov add jle and dec pop mov push xor mov xchg lahf inc lea ficom mov sub hlt sahf ret pop out push mov das lcall adc and and js loop gs inc lods outsl pop imul xchg imul mov or lds mov add cmp dec pop mov push push mov cltd daa insb mov jmp mov sahf popf inc shrl mov adc jg sub or cmp dec pop mov std or jge xor xlat jp loop imul xchg xchg std lahf arpl (bad) pop hlt sahf ret xchg mov or mov or ss and das pop (bad) out mov lods and stos cmp call in lock gs mov nop les js sub sub jle and jp loop gs and movsl cmp xor addr16 (bad) (bad) es lahf arpl (bad) cmp mov pop pop mov cmpl in and movsl pop addr16 mov icebp lahf addr16 (bad) pop sub push rol jg sub sub jge xor inc pop mov pop inc push out mov mov sub pop aam adc pushf sub cmp notb rolb sahf not sub js das sti add and dec sbb mov mov out insl mov (bad) popf addr16 mov sub xor sub mov sub pop add hlt inc sbb mov lods mov mov cltd and sahf fs mov xlat cwtl loopne jbe or rcrb add cmp and jp loope push mov int adc rcrl (bad) inc adc (bad) repnz sbb (bad) sbb rcrl mov sbb xchg (bad) inc rep cmp rolb stc ret and lds ss mov pushf rcll pop lea sub jl and cmc inc sbb push out dec lds cmp call lcall pop aam jecxz mov or mov or (bad) and inc sbb mov mov out insl mov pushf popf inc daa (bad) pop negb adc jl sub xor jnp mov aam test add add cmp dec pop mov addr16 sub insb mov nop popf dec and xchg mov in imul xor mov out mov mov out mov lahf lahf inc and hlt jbe in push mov add and sub jp loop jmp xor jmp imul pop push push mov cltd inc iret add dec insb mov lahf lahf inc and xchg (bad) and sarl sbb add repz jns loope out and jmp fwait and daa sti nop les mov sub jge xor jp out mov cltd mov xchg arpl shrl outsl mov lcall negb out push mov add and sub jae out push rorl jbe ds andl mov cwtl rcrb jns sub sub arpl and hlt sub js loop addr16 lea lcall cwtl mov push cmpsb js das std insl fnsave mov or (bad) pop pop mov add cmp sub jge out push jmp ds mov lock gs mov cwtl loopne mov in push mov or jl and mov xchg repz stos aas jmp outsb mov and and popf loope leave and rcrb ljmp pop jge xor repnz jg add cld or cmpl aad and stos aas call imul cmpsl ficom sub sub sub jg xor das pop fistpl inc mov lcall outsl mov mov popf addr16 mov sahf jecxz mov psrlq pop pop mov add jge and repz pop push push mov mov dec insl mov rcrb mov (bad) jg sub dec sub jl loopne jmp ds (bad) xchg imul lcall shrb ljmp add xor cmc and jge out mov mov out mov nop popf dec daa mov sahf jecxz mov or mov or inc add mov push cmp push xchg xchg lahf inc and dec insl mov pushf popf inc and xchg mov js das sbb push pop adc jns repz aad and movsb aas call push gs mov lcall sarb or jge repnz pop mov push push mov cwtl sub mov icebp lahf push pushf loope mov adc js dec mov mov or sub xor inc pop xor cmp pop cmpsb inc mov cwtl and (bad) test (bad) popf and popf loop xchg call mov sahf jl sub pop push push mov cltd and movsl ds (bad) xchg sub aam loop leave and rol jg sub (bad) and das jg and fsubrs add cmp add repnz jp out mov cwtl and movsl pop addr16 (bad) xchg jl sub popf and hlt sahf ret stc je psrlq pop mov jnp das cmpl arpl call xchg lock and xchg mov xor sub sub sub pop adc sub jns repz cwtl and movsl xor or pop (bad) pop push push mov lods and stos cmp xchg push inc and (bad) xacquire xor sub sub aas cs jl and jns loope addr16 inc lods outsl pop imul xchg mov lcall xlat cwtl loopne mov xor sub mov push jp,pt and fdivs hlt mov cltd daa insb lea rorb test lock and call push mov aam loop mov jl sub adc sub pop pop inc push in sub xchg mov pushf fs mov (bad) lcall sarl sti add inc pop xor fdivrs loopne push lods and stos xor mov jae andl popf and xlat cwtl loopne xchg in push cmpsl js dec mov lcall mov sub add add mov gs inc jbe push dec insl insl mov xchg lahf inc (bad) (bad) ds fwait loopne mov psrlq jg sub or pop add sub jae out mov lods mov insb imul pushf rcll pop (bad) decb aas inc pop xor and das jg cmp sub add cmp and jbe repz lahf dec lds push dec insb nop mov sahf push sahf ret sbb rol jg sub sub pop add inc pop mov pop inc mov mov in ljmp lcall pushf ret add rol jg sub or cmpl push xor or pop mov jmp aas call imul lea nop les sarb sbb push inc pop xor (bad) testl mov lods daa insb mov jmp (bad) xchg mov lahf lahf inc ret aam jecxz (bad) and das add cmp and mov xchg repz cltd inc jbe cmp call lcall std lahf xor mov sub lahf push cmpsb fist sarl add cmp daa and sub jns repz cwtl dec lds cmp jb push mov pushf data16 xacquire psrlq jg sub or jl and jns repz in daa insb lea in in lea icebp pushf push cwtl sar (bad) out push mov and ret cltd mov or mov and aad xchg repz jmp ds mov lock fs (bad) pop shlb or (bad) sbb cs jl sub pop push push mov lods and mov std lahf fs mov nop les (bad) jg sub jg hlt das jg cmp (bad) push sub jl das jg cmc das pop fstpt mov movsl ds insb mov icebp lahf push sahf ret xchg (bad) and ljmp pop inc pop xor xlat pop push push mov movsl aas jmp lea cld popf and xchg mov (bad) (bad) pop pop mov xor pop adc mov fwait loopne arpl mov (bad) jns repz out sub lea icebp lahf and sahf loop leave and rol jle sub xor jg xor repnz jg repnz lods and mov sub daa cmc pushf rcll imul sbb xor cmc inc and jge out mov mov out (bad) xchg mov icebp addl mov in repnz and cltd loopne mov push rol jns sub add ds pushf jl and js loop addr16 inc iret add imul jbe push mov shlb or sarb and sbb jl sub jp out mov mov call jl sub lahf and hlt jbe xor fs loopne leave and jmp pop pop mov sub inc pop xor and das pop fdivrs loop arpl dec outsl mov (bad) popf data16 mov sub or (bad) pop pop lea (bad) pop add mov lcall stos aas call mov lahf lahf inc lea loopne mov jg sub and imul add mov push mov addr16 nop mov lahf and cltd mov out push mov or jg cmc and pop push push mov cltd and jmp lcall pop aam jecxz mov adc jl sub xor pop add jae out mov lcall mov dec test sub cltd test mov aad dec lds ds addr16 sub popf and popf loop mov or sarl das pop pop add hlt and pop push push mov mov iret mov imul mov xlat cltd loopne mov push rol js das sbb push inc add aam lcall or rorb push mov addl mov andl lahf addr16 (bad) cmp mov psrlq js das add cmp add inc and jnp loope gs mov jne pop cmp gs (bad) pop hlt sahf ret hlt jbe xor sub sub add cmp inc pop mov push push mov lcall outsl mov xchg pushf shrl fdivrs std pushf arpl lods add popf loope (bad) and imul cmp and fnstenv out push jmp ds insb mov lcall cltd fist pop pop (bad) ljmp pop jl and aam out mov cltd sub mov pushf popf inc and xchg mov in push cmpsl pop mov (bad) jge (bad) fmuls mov cmc mov sbb sbb cmp dec sbb mov cltd inc jbe ds jno jb fwait and pop aam loop mov pop pop popl or add (bad) pop push push push jmp pop imul dec imul sahf ret and rol imul sti add cmp inc and jnp loope in sub imul sub inc mov xor mov bound int3 mov (bad) fwait loope mov or sub aaa xor mov jmp pop imul push (bad) inc xchg sahf push pushf loop je in imul add repz pop push push mov mov rorb test cld popf fs aam jecxz je or sarb mov popf loope mov pop pop mov or and jnp loopne push cmp dec mov lcall aad loop xchg in push cmpsl jl sub push aas jle and repnz and jae out mov lcall xchg mov lahf inc and loope mov js das sbb add ret in add pop testb xchg xor call sbb push pop adc aad out mov mov iret mov mov popf and jbe (bad) sarb add cmp jg hlt dec pop mov push sub mov daa icebp lahf and popf loop test xor sub sub and fnstcw loop dec cmp (bad) hlt and jnp loopne cwtd and stos push dec insl (bad) cltd and lahf arpl stos and fwait loope mov psrlq jle sub push aas jge and aam lcall insl aas call mov std lahf arpl mov aam loop mov adc imul add cmp cmp sub jbe hlt push roll sub outsl mov inc lds jns lds pop imul jne fwait and popf and lcall lds mov add cmp sub jae out mov cwtl inc leave add call mov lahf lahf inc and cltd mov push rol jg sub add and repnz jge out push roll inc lods outsl cmp push push and jl rorl std lahf and xchg (bad) and push cmpsl jg sub or movd fwait hlt push out and dec (bad) xchg xor mov negl psrlq js das cld or (bad) and and js loope push lods and movsl cmp xchg arpl (bad) lea sahf jecxz mov out push mov insl fnsave mov jl sub sub jp das mov fdivrs out mov cwtl inc iret or rorb in repnz lea cltd fist sub sub or pop add and pop pop inc mov lcall mov std pushf arpl mov hlt sahf ret stc je or lea xor repnz pop mov and sbb add repnz sbb mov cwtl inc iret or call addr16 sub popf fs (bad) ds fwait loope test out push mov or andb das pop fstpt mov lahf inc lods outsb xor jmp mov popf dec (bad) mov aam loop mov or sarl push sub pop add das pop fstpt loope cwtd daa insb lea call sub arpl in jmp mov popf inc shrl mov or lds cld or (bad) and and pop cmpsb inc mov cwtl inc iret add iret mov and pushf addr16 (bad) pop negl in imul xor aam out push aad daa insb lea call mov icebp pushf push jl fimul sub pop aad loop (bad) and push mov das add mov mov pop inc push rorl test mov lahf lahf inc and xchg mov jns sub or jle and sub jns loope aad mov mov (bad) and pushf and mov push rol jl sub insl fnsave je out push mov add jge and sub jg repz aad and movsl pop addr16 mov lock fs (bad) pop (bad) lcall cmpsb pop pop mov and xlat pop pop inc mov cltd inc iret add dec insb xchg mov popf inc int3 mov aad loope mov pop pop mov or and repz jg add add cmp adc and js loop addr16 inc shrl call addr16 xor mov fist sub mov add cmp inc and pop pop inc mov cltd inc leave add in jmp mov andl stos daa aad loope (bad) and sarl and sbb and sub jns repz out and jmp jl out mov mov in ljmp std lahf and mov xor sub lea (bad) jge xor xlat jp out mov lahf inc shrl call bound daa mov pushf loop mov push rol js das sbb pop jnp jle,pn cmc das pop fistpl push mov cltd dec lds aas jmp jno jae xchg sub lahf and rorl icebp pushf push mov in imul xor cmc and jl loopne in and dec mov std pushf arpl mov hlt sahf ret xchg mov xor sub sub sub jge and inc and pop cmpsb dec mov lcall nop mov pushf and mov xor sub dec mov sahf loop mov or sarb add cmp cmpl cmpsb dec mov fwait and stos xor mov and popf and xchg (bad) and push mov or jge xor mov push inc shrl jmp jno jae (bad) es lahf and pushf loop jbe in imul das (bad) and das jg cmp mov push ds adc jg repnz lods sub outsb mov and pushf and xchg (bad) and imul adc repnz jl loopne push mov call jl sub pushf addr16 lea sahf jecxz je psrlq jl sub das pop arpl and fnstcw loope gs mov inc pop mov xchg repnz lods sub fwait mov mov (bad) popf and popf loope mov xor sub mov and xlat jbe hlt mov mov call bound int3 mov shlb or (bad) jle sub sub jns jl,pn lock jp loop addr16 inc lods outsl cmp jmp mov lahf inc and jmp pop cmp pop aad loop jbe xor sub sub or jl das cmpl lcall add imul dec imul lcall cmpsl pop pop mov or pop adc das pop fstpt push out and movsl aas jmp fwait mov andl stos pop hlt sahf ret sbb cmp pop aam jecxz xchg adc pop pop mov push ds setg pop fstps inc mov lcall (bad) xchg bound and cltd mov or (bad) jle sub xor jl loopne imul xchg arpl (bad) mov cmc pushf rcll fsubrs cld add ds jg hlt das jg jno inc cmpl add nop dec add test lcall (bad) lcall mov add add repnz and js loope push and jmp push mov sub or (bad) pop pop (bad) cld or mov mov fwait loopne roll and (bad) lea std lahf arpl lea mov or (bad) pop pop lea (bad) jge (bad) xor push mov or repnz jns loopne fs and outsl mov and and cmpsl fist (bad) jns sub (bad) pop adc and jp loop jmp xor lea sub lahf and cmpsl ficom cmpsl js das sbb add repnz sbb mov cmp cmp and jge out mov cltd sub mov pushf popf inc and je in imul add mov fwait out mov lods and mov hlt sahf imul (bad) cmc test or sarl std or inc add and jge out mov cwtl daa insb mov jmp mov inc les xor ljmp hlt sahf push cwtl mov push cmpsl pop mov or testb jg repz cltd and lea es pushf addr16 (bad) cmp jbe or mov jg cmc and jbe hlt mov cwtl inc iret add addr16 outsb mov sub pop shlb shlb lcall sti nop les mov lea sub jl and mov pop inc mov cltd sub mov sahf imul loope jbe psrlq jl sub (bad) jge and repz and jl loopne gs and movsl pop imul push addr16 sub (bad) fwait loope jbe in push cmpsl js sub or jge (bad) xor jmp pop pop mov add and cmc dec sbb mov cltd sub mov xchg lahf inc ret (bad) fwait loope jbe or sub or jle and and jp loopne gs inc iret or call bound and xchg mov call sub or jle and jns loope dec cmp cmp jnp loopne push lods and stos pop imul insb andl lods add cwtl fist (bad) js das sbb and aam out mov cwtl inc leave add rorb es lahf inc (bad) mov aad loop (bad) and rol jl sub push aas jle and inc pop mov push push mov outsb pop addr16 mov les mov in ljmp xchg lahf dec and cltd mov push rol pop pop (bad) sbb sbb and dec pop mov out mov lahf inc shrl rorb sbbb cmc pushf ret decb rol jle sub xor arpl and aam fwait out mov cwtl inc leave add rorb inc xchg pushf and lcall cltd and sahf and popf loop mov out push mov sub pop add xlat js loope cbtw inc leave add mov xor mov shlb in imul adc fstpt repz in daa insb mov insl nop mov popf fs xlat cltd loopne mov or (bad) jg sub sub jge (bad) xor leave and rol pop pop mov sub pop add aam pop inc mov lcall (bad) andl pushf push pushf ret std xor sub sub push jge,pt xor fstps inc push aad sub outsl mov sbbl divl rol pop pop mov or lahf jl and jns loope dec cmp cmp pop pop inc mov lahf inc shrl in in mov (bad) popf data16 lea sahf jecxz xchg psrlq pop pop lea add (bad) hlt sub pop cmpsb dec mov lods and stos pop imul jbe test icebp lahf and mov in push mov or jge repz jp loop out inc lods outsl cmp insb imul cli cmp (bad) lcall pop hlt sahf ret stc je or popl (bad) jge xor mov arpl out (bad) xchg mov xchg lahf dec and xacquire or sarb or jge repnz jns repnz cwtl inc shrl jmp outsb mov sub aad loop mov push rol js das std insl js fmuls cmpsb scas push add popf data16 mov sub or (bad) cld add cmp jns repz lcall lea sahf popf inc (bad) mov sub psrlq jg sub add jl and pop pop inc push jmp cmp jae push mov sahf fs fist (bad) pop pop mov add ficom pop lea or jge xor dec sbb push out inc lods outsb ds jl sub sahf addr16 mov aam jecxz mov (bad) sarb decb aas jg xor xlat jnp loope addr16 and mov xchg pushf fs mov nop (bad) hlt jbe out push mov das jmp and pop pop inc mov lcall xlat and jl out mov lcall (bad) xchg xor mov loop leave and imul xor xlat pop push push mov cwtl sub mov icebp lahf addr16 (bad) cmp mov or sub add hlt sub jns repnz lods and insl mov icebp addl mov lahf inc (bad) lea mov xor sub sub add jl sub jg repnz lcall insb mov std lahf arpl mov (bad) fwait loope (bad) and push cmpsb jl sub das add cs jl sub pop pop inc mov cwtl and jmp mov xor push cwtl (bad) cmc test xor and xchg mov (bad) shrb call and hlt and jns loope jmp push dec insb (bad) xchg imul mov shlb call sub or jns cmpl push push push jmp xor (bad) mov sahf popf inc and cmc test xor sub mov add ficom pop (bad) std or jl and repnz pop mov lcall outsl aas jmp mov pushf popf inc and mov in imul xor (bad) jns loope arpl call mov lcall fwait loopne mov push rol imul sti add jge and repnz pop (bad) out mov mov cmpl in and mov xchg lahf inc (bad) mov shlb call mov add ds cmpl out push aad inc shrl iret mov jae xchg sub lahf and (bad) and jmp jg sub add and inc sbb mov cltd sub (bad) test icebp addl mov xor (bad) pop negl in push cmpsl pop addr16 das pop jns jg,pn hlt and jl out mov fwait daa insb mov outsl lea pushf popf inc and xchg (bad) and imul das mov mov fs and (bad) push mov inc sti nop ret xchg mov xor inc and cltd mov or (bad) js das and sbb jl and jbe hlt push in sub outsb mov andl popf addr16 mov xlat cltd loopne mov (bad) (bad) jg sub das pop jge xor and jl out mov lcall (bad) test hlt sahf push lahf jecxz je or sub and ljmp cmp daa and fcomps inc mov lahf and (bad) xchg mov lock gs mov sahf jecxz je xor sub mov or xlat das pop fistpl inc mov lods sub mov xchg sub lahf push sahf ret stc je or das sbb das cmpl fwait out mov lahf and cmp das pop fistpl push push in inc leave add mov sahf shrw xchg push rol jle sub push arpl and mov fwait hlt mov lcall outsl mov and sub in push cmpsl jl sub add cmp jnp loopne push mov call andl lret push cwtl xor stos ss fsubrl cld add ds jge repz pop fdivrs loope gs sub insb mov icebp pushf addr16 lea (bad) and jmp js das add cmp cmp and jae out push in inc leave add rorb and pushf push cmpsb ficom mov sub sub pop adc aam push push mov cltd inc lods outsl xor or push aam out push aad and movsl push dec outsl mov std lahf arpl loopne mov in push cmpsl pop pop mov add ss cmp jnp loope out mov mov push mov pushf gs les cmpsb pop pop mov add and mov fwait loope jmp aas call (bad) inc xchg sahf push aas jmp mov std lahf arpl stos pop aam loop mov adc jg sub sub jnp das jg cmc inc and pop push push mov cltd inc iret or call bound and divl rol jns sub xor pop adc cmc and jl loopne gs and stos ds xchg icebp lahf lea cmpsb fcomip xchg xor sub dec mov pushf loope mov jg sub sub jg xor aam out mov lcall nop mov popf inc and xchg mov or das sbb add aam pop inc mov fwait daa insb mov jmp outsl mov xchg lcall lahf jecxz mov adc pop pop mov or add jns pop mov or cmp das pop fdivrs loopne arpl out xchg mov lahf addr16 fcomip je or (bad) pop pop mov add jl dec sbb mov lcall lea repnz data16 xacquire or (bad) jle sub daa das mov mov lcall movsl xor or sbb push jmp xor ljmp std pushf and cmc test or (bad) jns sub (bad) and and jp loop roll inc iret add out mov cld popf fs lea lcall (bad) jns sub or jge xor xlat jge out mov lods and stos xor mov lcall cmp jmp mov xchg lahf inc and stc je or sarl add jg xor repnz sbb mov lcall (bad) xchg imul fwait loope xchg psrlq jle sub xor mov push lods inc jbe pop addr16 nop mov pushf fs mov xlat cltd loopne je out push mov int3 mov shlb xor sub sub add add (bad) jbe hlt mov lcall mov pushf popf inc daa (bad) pop cmc pushf ret add rcrb cld add add inc sbb mov lcall outsb mov lcall negb or lds mov sub inc pop xor jns js das and sbb adc mov cbtw inc leave add mov daa pushf popf inc and rclb pop addr16 add jl and cmc sub jns loopne push mov in jmp mov xor mov xlat cwtl fist sub sub daa das jle repnz jae out push rorl jbe xor or pop fistpl inc push jmp xor mov and pushf push lcall (bad) imul sbb and das pop fdivrs loopne addr16 inc lods outsl cmp call xchg sub popf shrw mov adc imul add cmp aas mov mov push mov jmp (bad) andl lahf inc and insl outsb mov sub lahf and xchg mov out push mov add cmp jge out mov cltd inc iret or call andl lea pop adc pop pop mov or pop adc xlat jp loopne addr16 fwait mov bound and xchg (bad) and imul fwait loope test in imul and repz jnp loope imul push mov lahf lahf inc (bad) mov aam loop mov xor sub (bad) sbb add pop push push push roll inc shrl jmp (bad) xchg mov lahf lahf inc and xchg (bad) and rol pop pop mov sub arpl and repnz jg and fsubrl ljmp pop inc add pop pop inc mov cltd and mov jb andl lahf inc and xchg mov psrlq pop addr16 or arpl and cmc and jbe repz cwtl dec lds cmp insb push addr16 (bad) pop hlt sahf ret sbb fsubrl and sbb jl dec sbb push out mov int3 es (bad) dec sti xor lahf mov test arpl ret (bad) lcall sarb std das add cs jl dec sbb mov lods mov mov std pushf fs mov hlt sahf ret sbb fildll sbb sbb cmp dec pop mov push push push out and insl outsb mov inc xchg pop negl push rol pop pop mov or jge (bad) xor rol pop pop mov xor pop setg pop fdivrs repz mov out mov pushf popf inc and xchg or (bad) pop mov das lcall adc cmp jns repz fwait sub mov xchg sub lahf and (bad) and rol jle sub daa das cmpl fwait loopne dec cmp jl das pop fistpl mov cwtl daa insb mov dec mov (bad) popf addr16 mov loop (bad) and popl or and (bad) pop push push mov lods and stos aas call push fs lea test psrlq js das add cmp add pop pop inc push jmp ds imul pop imul xchg imul mov psrlq jle sub push arpl and jbe hlt mov lcall insl mov lcall aam loop (bad) and rol pop pop (bad) sbb push jge and jp out mov cltd sub mov sahf popf inc and xchg fdivrs nop popf dec (bad) lea pop (bad) sarb or jge repz pop pop inc push aad sub mov popf and cwtl loopne xchg xor sub sub daa and mov push inc jbe xor jmp mov std lahf and mov push rol jle sub add xor rol jle sub push aas inc pop xor cmp jg repnz lcall mov icebp lahf addr16 mov shlb xor sub mov push ds setg sbb push rorl jbe xor lea push addr16 xor mov negb xor sub sub or jnp cs jl inc sbb mov cmp and das pop fstpt mov mov addr16 nop mov popf fs (bad) pop xlat cltd loopne xchg or (bad) pop pop mov xor pop adc cmc and jp loopne aad sub xchg mov lahf push nop les jns sub add jl das jg hlt inc pop mov out mov cltd and dec nop mov push jmp push dec insl mov lcall nop ret xchg mov pop mov or pop ss and sub pop push push mov lcall (bad) xchg arpl and xchg (bad) and imul cmp adc aad xchg repz out inc shrl in jmp mov pushf popf inc and xchg fdivrs std lahf and je in imul xor xlat jns loope jmp xor mov jb push mov pushf and cwtl rcrb jg sub sub inc add repnz and pop pop inc mov cwtl dec lds xor mov mov lahf gs shlb xor sub sub insl fnsave mov out push mov or adc aad fwait loope push mov call bound and xchg (bad) and sub or jg xor (bad) jns loopne cbtw inc iret add dec insb outsl mov xor push popf loop jbe out push mov or ds fs imull jg and fsubrs ljmp add xor jl loopne in sub mov push mov pushf lea lahf jecxz (bad) and rol jl sub sub jge xor jp loop gs and jmp test icebp lahf and pushf ret lock rol imul ljmp pop pop adc mov fwait out mov cwtl sub dec inc sbb mov cltd sub mov (bad) popf and stc je or (bad) jns sub (bad) jge xor and pop pop inc mov lahf sub xchg mov sahf and xchg mov or sarl das (bad) jp das jg hlt inc sbb mov mov dec insb (bad) xchg sub std lahf xor lea push arpl daa (bad) pop (bad) lcall sarb sbb sbb cmp pop push push push aad sub mov lahf addr16 (bad) pop negl call mov or ds jl lock jae out mov lcall outsb mov and pushf arpl (bad) cmp mov push rol js dec mov sahf jecxz (bad) and ljmp cmp add mov fwait loope imul insb push and xchg leave and sub or jl das lahf jl dec sbb push in inc lods outsl cmp call xchg sub negb or sarl call das jg hlt das jg cmp sub sub jns cs jl inc sbb push roll inc lods outsb xor jmp mov lcall pushf ret (bad) call sub das pop pop add xlat pop pop inc mov cltd sub xchg mov popf inc (bad) (bad) cmp mov or (bad) js das and sbb cmp sub jnp loope aad inc shrl int dec dec pop mov aad and movsb xor ljmp sahf popf inc and xchg mov pop pop (bad) sti add cmp inc and jge out mov lcall mov pushf popf inc daa (bad) pop cmc pushf ret add jmp pop addr16 or mov mov imul xchg imul ds (bad) xchg mov lock and divl push cmpsl jns sub (bad) arpl and cmc sub pop push push push in inc jbe pop imul push jl sub popf data16 (bad) ds loope (bad) and sarl ljmp add and mov cbtw inc iret add jmp jno jae (bad) es popf and mov in imul cwtl loopne (bad) and rol pop pop mov xor jge and repnz jl loopne addr16 fwait mov push arpl mov (bad) lcall cmpsb jle sub aas das cmpl push mov out mov nop popf dec and fist (bad) jl sub add and das jg cmp mov sub jle and mov fwait loopne aad and movsl aas jmp (bad) xchg mov std lahf arpl mov (bad) lcall mov sub sub jp das pushf jl sub js loope push and movsl push dec insb fwait mov mov icebp lahf and fwait loopne leave and rol jle sub and aad fwait repz lcall dec inc and jns loopne push pop imul xchg imul cmpsl fistp (bad) jle sub xor pop add cmc sub pop cmpsb dec mov lods daa insb mov jmp mov cld popf fs ret xchg mov jl sub (bad) pop movd out mov mov jmp jno jae lcall std cwtl pop imul jbe andl mov jecxz mov or lds sub add repz jl loopne aad and stos cmp call test nop popf dec and xchg mov adc jl sub or add mov fwait loopne push lods and stos ds jl sub pop cmc pushf rcll cmp add mov push rol jl sub das fs hlt das pop fdivrs repz cwtl inc lods outsl push dec insb insb mov sahf popf inc and xchg mov js das add cmp jl das pop fdivrs out push rorl jmp mov sub popf addr16 mov sti nop (bad) xacquire push rol pop pop (bad) sti add cmp das jg cmp sub push arpl and repz jge out mov lcall xchg mov pushf gs fcomip test xor sub das sti add (bad) imull push aam out mov or call imul mov negl or (bad) js das add cmp and dec pop mov lcall stos xor or sbb mov mov dec insb nop mov popf dec daa mov lcall sub mov and (bad) jp loopne addr16 sub (bad) test std pushf and (bad) and ljmp push jge and fnstenv out push rorl insb mov dec mov std pushf arpl xchg std cwtl aas jmp lea xchg lahf dec and xchg mov jg sub add jl das cmpl fwait out mov lahf inc iret add imul xchg push push sahf jecxz mov or sarl add cmp das pushf jl inc pop mov out push out and movsb aas call andl mov loop leave and rol js dec mov cltd fist sub sbb push jp and repnz jns repnz fwait sub mov xchg (bad) popf data16 (bad) pop (bad) lcall mov or pop adc sub pop pop inc mov lods and dec xchg mov popf and xchg mov psrlq jg sub or jg hlt das jg cmp sub or jle and xlat jns loope roll dec lds aas jmp insl mov lcall (bad) lcall (bad) jle sub add das pop fdivrs loopne push mov call imul pushf ret (bad) xor sub sub sub jp and dec pop mov lcall movsb xor or push aam lcall stos pop addr16 (bad) push mov cmp leave and imul cmp daa and xlat jnp loope jmp xor mov lahf lahf inc and divl rol jl sub or and and jns repz rorl jmp mov imul xor jmp mov nop popf dec and hlt jbe in push mov sub jge xor aad out push aad and mov sahf popf inc daa (bad) pop xlat cwtl fist (bad) js das add cmp jl das pop (bad) out mov cltd and stos cmp jmp mov xchg sub and nop les js dec mov mov in imul add fistpl mov cltd inc jbe ds (bad) inc xchg pushf push lcall sarl add cmp push jl sub jae out push out daa insb mov call test sahf popf inc and stc je or (bad) jl sub sub pop setle jg cmp mov sub jl and aad xchg repnz mov addr16 (bad) cltd and lahf arpl stos daa aam loop mov or (bad) imul sbb and fistpl inc push in daa insb lea rorb es lea fwait loope je psrlq pop pop mov or jp das lahf jl das pop fstpt mov lods sub and js loop imul insb imul (bad) pop shlb xor sub cld or jg hlt inc pop mov cmpsb inc mov lods inc jbe cmp jbe fwait and pop sub in imul xor fnstenv out push out and movsl ds insl mov sahf popf inc and ljmp pushf popf inc daa mov pushf rcll jle sub add repnz pop mov xchg repz lcall xchg mov lahf arpl lea lcall sarb or (bad) and sub jp loopne gs sub mov icebp lahf shrl ficom (bad) js ffreep pop and push push sbb or jge cmp dec dec pop mov pop inc mov cwtl inc iret add out insb mov std pushf and xchg push rol jg sub add jge and fdivrs out mov mov call imul nop les sub sbb push jle and repnz pop mov lcall movsb push dec insl nop mov lahf inc and test in sub dec adcb jle cmc sub pop pop inc mov cwtl sub nop mov pushf arpl (bad) cmp jbe or (bad) jns sub add cmp dec pop mov push and movsl pop addr16 (bad) push mov pop negl in push cmpsl pop pop mov or pushf jl dec pop mov push push push out and movsl pop addr16 outsl mov inc les xor ljmp icebp pushf and cmpsl fist cmpsl pop pop mov sub jnp das jg hlt dec sbb mov lcall (bad) push mov daa aad loope mov jns sub das pop pop add cmc and pop push push mov cltd inc leave add mov lahf gs (bad) pop xlat cwtl loopne fdivrs lcall lahf jecxz je push rol imul cld add ds lahf jl inc pop mov xchg repz cltd daa insb lea call imul cmpsl fist jle sub setg pop mov push inc jbe ds (bad) xchg jl sub pushf data16 mov cmpsb fist jle sub add xor mov xor sub das add cmp adc and and jl loopne imul insb jl sub pushf and je xor sub mov push aas jg xor hlt and pop cmpsb inc push in inc leave add mov push push cwtl mov push cmpsl js das push sub pop ss cmp jbe hlt mov cmp jl dec pop mov push push mov fwait inc jbe xor mov imul mov hlt sahf ret adc rol jle sub daa and (bad) pop cmpsb dec mov cwtl and mov addr16 sub pop aad loop je call sub (bad) jl and repnz jg repnz cwtl inc lods outsl cmp dec imul cmp call inc xchg popf data16 (bad) cmp leave and push cmpsb jns sub add inc pop xor fstps push push in inc lods outsb xor jmp mov lahf push sahf loop mov xor sub das cld or jl lock pop pop inc push aad and dec xchg mov popf retw hlt sahf ret xchg fdivrs nop popf dec (bad) lea cwtl loopne mov or (bad) pop addr16 add jg xor mov lcall stos push dec insl jno jae lcall pop aad loop test (bad) sarb std or pop ss and and pop pop inc mov cltd and movsb xor jmp mov xchg sub xlat cwtl loopne jbe or lds sbb (bad) xor mov xor sub sub xor inc and jg repz aad sub insb mov (bad) popf shrw mov xor sub sub or daa and fistpl push mov lods mov xchg mov xchg lahf dec and mov adc imul add cmp daa and jg repz cmp cmp and jnp loope rorl call cltd and sahf fs mov negl in imul das andb inc sbb mov lcall insl mov icebp pushf addr16 (bad) ds fwait loopne leave and rol jl sub sub jge and dec sbb push jmp aas call imul xor ljmp icebp lahf lea fwait loopne mov jl sub or adc mov fs inc shrl in jmp mov sub sahf push pushf loop je adc jle sub adc aad xchg repnz mov in in lea lcall aam jecxz fdivrs std lahf fs mov (bad) lcall mov sub or pop add inc pop mov cmpsb inc mov lcall outsl mov lcall ds loope leave and push mov (bad) pop ds jl inc and pop pop inc mov fwait inc jbe aas jmp (bad) andl lahf dec and xchg mov or sub xor jge (bad) xor rol jle sub setl push aam lcall movsb xor mov es popf inc daa (bad) pop sti nop (bad) divl push cmpsl pop pop mov or arpl and fdivrs loope arpl jmp (bad) xchg addr16 sub popf retw negb or (bad) jg sub add (bad) mull pop (bad) pop push push mov cmp cmp js loop in and stos xor (bad) mov std lahf arpl lods add cwtl rcrb pop mov das loopne daa das jle cmc inc pop mov out mov lods mov mov fwait and pop aam jecxz xchg or sarl sbb push jns cmpl xchg repz roll and movsl push dec insl mov lds and movsb aas call imul (bad) pop negl xor sub sub daa and cmc and jnp loopne push mov rorb daa xchg lahf inc (bad) lea lock imul and pop cmpsb inc mov lcall fwait mov data16 lahf lahf inc (bad) (bad) ds loop fdivrs icebp lahf lea nop ret xchg mov imul sbb pop jl dec pop mov imul jb push mov and cmpsl fcomip test in push cmpsl jns sub jl repz jbe hlt mov mov in jmp mov std lahf arpl stos and mov psrlq jg sub add mov in push mov or jl das pop fistpl push push aad and stos push dec insb mov lock fs cltd loopne mov in imul and cmc das pop fstpt loope push and stos push dec insl mov lcall hlt sahf ret divl imul das (bad) and sub pop push push mov cmp jl inc and jge out mov cltd sub insb mov lahf lahf inc and leave and sub add repnz sbb push out and call (bad) es popf inc and xchg mov js sub or arpl and mov gs inc shrl dec outsl fwait mov imul aas call imul lahf jecxz mov adc jl sub sub pop add hlt dec sbb push out inc iret or rorb and sahf and xchg (bad) and imul and fstpt push rorl test mov hlt sahf push cmpsb fist fwait and popf and nop ret xchg mov jg sub add jge and fnstcw out mov lcall outsl mov test lcall negl push rol jl sub cs jl inc sbb mov lcall jno jb xchg sub cmp (bad) and rol jl sub or jge (bad) xor rol jl sub jg hlt sub jns loope arpl out mov cld popf and xchg mov psrlq jg sub or pop adc aad out mov lods mov xchg mov lock and xacquire call das add cmp daa and (bad) jl loopne dec cmp cmp inc pop mov xchg repz aad and movsb xor jmp mov pushf arpl mov sti nop (bad) stc je in push cmpsl jns sub or fs (bad) dec sbb push jmp xor jmp mov repnz retw shlb psrlq jg sub sub jge xor dec pop mov push xor mov inc les (bad) pop imul insb addr16 xor mov nop les sub mov or cmp jge out push in sub (bad) xchg mov hlt sahf push lcall sarb std das pop jp and fstpt repnz cltd inc leave add mov es popf dec lea loopne fdivrs xchg lahf dec and xchg mov or lds mov or inc add xlat jge out mov mov imul xchg push gs (bad) pop (bad) fwait loopne leave and push mov or cmp dec pop mov push push push rorl test mov sahf popf inc and divl rol js das std das pop jge (bad) xor mov jns sub push jl,pt and xlat jp out mov lods sub mov nop popf dec ret aam jecxz test or lds mov or inc pop xor cmc das pop fstpt repnz lods dec lds xor jmp mov lahf lahf inc and loope jbe or mov or jl and mov dec cmp cmp pop cmpsb dec mov lods sub mov push mov sahf addr16 mov sub adc pop pop lea and mov pop inc mov mov dec insl jno jb andl mov loopne je (bad) shrb and sbb cmp jbe hlt mov fwait daa insb mov jmp mov push in inc jbe push dec insb lea pushf popf inc shrl xchg or mov sub inc pop xor xlat pop cmpsb inc mov cltd and jmp push mov sahf fs loopne xchg in imul adc fnstcw loop jmp ds addr16 xor mov (bad) lcall inc xchg add lcall sarb ljmp pop jge xor xlat jae out mov cltd inc iret or call andl (bad) pop shlb or rcrb std or jp and hlt dec pop mov out mov outsb aas jmp mov lock fs lea lcall (bad) pop pop (bad) push sub jge (bad) xor rol pop pop mov xor jns das andb inc pop mov lcall lea rorb test xchg lahf inc lea cmpsl ficom mov add and fdivs hlt push out sub mov pushf arpl fist jl sub or pop add aam lcall ds jl sub jp loope push xor mov and sahf push fwait loope jbe or lds sub adc fnstcw out mov cltd sub (bad) push mov lahf addr16 mov aad loop mov push rol pop pop mov or arpl and cmc inc and jnp loopne push xor jmp mov lds or dec mov icebp pushf addr16 rclb jle sub sub jp and aam cmpsb dec mov lcall insb mov pushf popf inc daa mov cwtl loopne mov call sub xor fstpt repz in inc leave add mov sahf gs mov cwtl loopne fdivrs hlt sahf push pushf rcll jl sub fs hlt das pop (bad) out mov lcall (bad) test lcall sahf ret stc je in imul and repnz pop mov push xor mov daa xchg lahf inc and xchg mov or (bad) pop mov or xor rol pop pop lea (bad) pop add repnz sbb push out daa insb mov outsl mov lahf lahf inc and xchg (bad) and ljmp sbb adc fnstcw out mov cltd mov xchg push shrl mov pop pop (bad) decb aas jle and fdivrs loope dec cmp cmp jnp loope gs and stos ds imul nop (bad) cmc test call sub or pop add dec pop mov lcall stos push dec insb mov icebp pushf addr16 mov sti nop ret xchg mov or sub aaa xor mov pop inc mov cwtl inc shrl call imul cmp jbe xchg sub cmp mov pop mov jge and mov fwait hlt mov mov call push addr16 lea (bad) and rol jg sub or hlt dec pop mov in and lea dec jl sub and cmpsl fist andl mov negb or (bad) pop pop mov or jl and cmc and jp loop arpl out jno jae test (bad) popf data16 (bad) ds loop je or mov or cmp and jp loop out and stos pop imul push andl lea sbb pop mov das pop jge (bad) xor imul das andb dec pop mov lcall or insb mov (bad) popf and mov in push cmpsl jns sub add cmp jnp loopne push mov rorb push mov pop sub push rol jl sub xor arpl and and jbe hlt mov cmp jl and jae out mov cwtl dec lds pop imul insb mov sahf popf inc daa mov loop mov psrlq pop pop (bad) std or jnp jge,pn repz pop pop inc mov fwait mov mov lcall aam jecxz mov or lds sbb pop inc pop xor fdivs repz cwtl inc jbe xor mov imul push dec insb outsb mov push mov sahf push popf loop mov or (bad) call xor mov addr16 mov sahf popf inc and xchg (bad) and jmp pop pop mov sub jl das jle cmc sub jns repz rorl insb mov dec fwait mov data16 (bad) popf and pushf loop fdivrs (bad) popf and xchg mov or sub or inc pop xor cmp jge out push out sub xchg mov pushf gs loope mov call lea or ds cmpl out push in and jmp mov push mov lahf and xchg leave and rol js sub or jge (bad) xor rol js sub or jp and aam fwait loopne push xor mov sub pop negb out push mov or hlt and pop push push push in inc shrl addr16 outsb mov xchg xor (bad) pop shlb call lea sub jge xor dec pop mov push push mov cmp cmp and jns loopne push ds (bad) xchg push gs lea cwtl loopne mov call mov das pop jl and fistpl push mov lcall insl mov std pushf arpl lea ret push or rcrb cld or sahf jl and jbe hlt mov lcall outsb mov mov js lds xor ljmp lcall lcall sarl std or pop add xlat jge out mov lods and dec nop mov sahf fs rclb fldt sti add cmp jns loope aad sub insb mov xchg lahf inc lea rcll daa xchg lahf inc (bad) mov sub or mov add jl and jns repnz cwtl inc jbe xor jmp mov popf inc and leave and imul adc xlat jp loop out inc shrl dec insl insl mov nop popf dec (bad) mov xlat cltd loopne mov (bad) (bad) pop pop mov or xchg adc cli cmp or pop js imul lcall mov add inc pop xor hlt inc sbb mov lcall outsb mov push xchg lock gs mov ficom mov sub add cmp dec pop mov out push out and mov (bad) popf addr16 mov negl in imul gs movsb (bad) cmp (bad) icebp push xchg and mov mov lcall sti nop les sub sub xor jg xor repnz pop mov lcall test mov and sahf push cmpsb ficom lds sub andb inc sbb mov outsl pop imul xchg push arpl lods add lcall lds out (bad) loope adc mov mov sbb hlt (bad) sbb cmc jp pop xchg out push mov or jge xor repnz jns repz roll inc lods outsl push dec insl outsb mov inc xchg popf data16 mov hlt sahf ret cmc test xor sub sbb sbb cmp sub jbe hlt mov stos ds imul mov aam jecxz xchg adc jg sub sub inc add xlat jnp loope roll and mov idiv inc ljmp cmp pop jb rol js das push sub jp and repz jnp loope imul dec push inc and xchg mov js das sbb pop jnp das jg hlt inc sbb mov lcall mov repnz and cmc pushf ret sbb rol jl sub add cmp jl out mov cltd and lods xchg add lret hlt add add add decb rol pop pop lea or add repnz sbb push in and movsb xor jmp mov popf and cltd mov push rol imul ljmp pop pop add (bad) pop push push push aad inc shrl in ljmp (bad) popf and xlat cwtl loopne test xor sub sub add (bad) pop pop inc mov pop mov insl and leave cmp stos fbld sub mov lock gs mov (bad) fwait loope mov or sub (bad) pop add mov fwait out mov mov imul xchg push dec daa (bad) pop sub adc jns sub or mov mov fwait loope rorl insb mov jmp (bad) xchg imul mov ret xchg (bad) and mov dec mov shlb mov sub (bad) cld or cmpl arpl rorb and lahf fs mov aam loop mov pop pop (bad) push sub inc pop xor cmp jp loope push pop imul push addr16 xor stos add cltd fist sub (bad) sti add cmp dec sbb push out and cwtl ja or pop test and test ljmp add lahf movsl mov push into mov jle mov mov (bad) popf and popf loope mov out push mov das pop jns cmpl xchg repnz mov jmp insl mov lcall cwtl fist (bad) js sub sub jns das (bad) and and pop pop inc mov cwtl inc shrl dec outsl lea pushf popf inc (bad) (bad) ds jecxz je or (bad) js lret stc adcl inc sbb lock dec int3 pushf mov pushf rcll jl sub sub jg xor mov fwait repz lcall (bad) xchg arpl (bad) lea sahf ret cmc test call mov sub arpl and mov push cmp dec jl sub inc negb in imul add jns js das sti add cmp js loop arpl dec insb xchg mov lahf inc lea cltd fist sub sub add cmc and pop push push mov lods inc shrl jmp mov icebp lahf addr16 (bad) cmp (bad) and ljmp cmp cmp pop pop inc mov add inc sbb mov lods and stos xor lea std lahf arpl mov hlt sahf ret cmc test out push mov (bad) pop adc fnstcw repz in daa insb lea rorb push xchg std pushf and xchg (bad) and rol jle sub or pop add fnstcw loop imul xchg push and jmp mov sahf fs lea (bad) and rol jle sub adc aam out mov cltd inc iret add imul xchg (bad) inc xchg popf and xchg leave and mov or jl and hlt das pop fistpl inc mov cltd daa insb mov jmp jno jb andl mov aam jecxz mov or dec mov lahf jecxz mov or sub or pop add hlt sub pop push push push jmp push dec insl nop mov lahf inc and xchg mov jns sub add jle and repnz pop mov lcall mov insb mov std lahf arpl lea mov out push mov (bad) jl and hlt das jg cmp sub sub arpl and repz jbe hlt mov add in ljmp lahf lahf inc and xchg mov jg sub sub pop ds cmp das pop fdivs hlt mov lods sub mov addr16 sub pop xlat cwtl fist sub cld add jl das pop fistpl push mov cwtl sub dec inc and jl out mov lahf inc shrl out nop mov pushf data16 xchg mov jg sub sub pop ss and and jae out mov mov dec mov icebp pushf addr16 mov negl xor sub mov or and repnz pop push push mov stos aas call mov icebp lahf and idivb dec cmp imul cmp adc loopne xor jp add lock lahf repnz pop jnp jle lcall sub or jle stos adc jmp push into daa inc lret ss jecxz cmp add pop aam or xchg cli mov adc shrb inc lret cmp sbb add loope rcrb mov sub aaa mov aas jmp add inc hlt sarb gs lret sub ss test or lds cmp dec mov sbb mov adc out repnz aaa lds or iret (bad) mov xchg lahf inc ret shlb or mov push ds ds jl dec sbb push aad inc jbe xor jmp mov sub add cmpsb fistp mov sub add ds (bad) and sub jl loopne arpl imul xchg push fs lea fsubs xchg leave or or pop cmp popf mov xchg mov pop pop mov add (bad) jae out mov fwait mov mov popf and sahf jecxz (bad) and jmp jle sub daa and fistpl inc push out and movsb xor lea and and pushf ret decl rol jns sub or sahf jl and jnp loope dec cmp cmp and jbe hlt push jmp xor ljmp std pushf arpl mov shlb or sub daa and and jnp loopne cbtw inc iret add imul insb mov icebp lahf addr16 (bad) cmp test push rol imul cld add jl sub pop cmpsb inc push aad inc iret add jmp lea lds stos xor ljmp lcall (bad) fwait loopne (bad) and imul xor fdivrs loope cbtw sub insb mov nop popf dec and xchg mov push rol imul std das pop pop add mov xchg repnz mov imul jae andl lods and cmpsl fist andl sahf gs mov loope jbe psrlq jl sub push jl inc pop mov xchg repnz cltd inc lods outsl cmp xchg (bad) inc xchg pushf push mov in push cmpsl pop pop lea (bad) pop ds cmp and js loop out inc shrl imul xchg bound and xacquire adc pop addr16 xor jge (bad) xor mov jg sub (bad) jge and repz jns repnz lahf sub insl mov icebp pushf addr16 mov xlat cwtl loopne je xor sub sbb pop jnp das fs imull push aam push push push rorl jbe xor in lea hlt sahf push sahf ret cltd mov or shrl sbb sbb cmp jae out mov cmp cmp inc sbb push aad sub xchg mov pushf and lahf jecxz xchg or sub push aas jg xor repnz js loop addr16 inc leave add mov in lcall aam jecxz je (bad) (bad) pop pop (bad) decb aas jg xor sub js loope push lods inc leave add mov mov lods and call (bad) lcall cmc pushf rcll jle sub xor inc sbb mov fwait daa insb mov jmp (bad) xchg mov lahf lahf inc int3 mov cmc pushf ret pop adc jg sub or add fistpl inc mov lcall (bad) push mov aas aad loop fdivrs lock fs cltd loopne mov or mov xor pop setle pop (bad) jbe repz lcall mov icebp lahf addr16 aad loop jbe call sub and aam cmpsb dec mov lcall mov xchg lahf dec and xchg (bad) and rol jl sub add jbe call sub add jle and xlat jp loopne arpl call bound and xchg mov or rcrb add cmp and mov aad and call (bad) es popf inc and xchg mov in push mov sub pop add mov dec cmp cmp and jns loopne push lods and movsb xor mov daa xchg lahf inc ret hlt sahf ret xacquire xor sub mov push arpl and dec pop mov roll inc lods outsl pop imul jne push mov pop cmc pushf ret add rol pop pop (bad) cld or mov fistpl push mov lea in ljmp lds or call arpl ret negb or sub or fs testl mov lcall mov lcall xlat cltd loopne mov push rol jle sub or daa and and pop pop inc push aad inc iret add out nop mov popf and xchg fdivrs icebp lahf addr16 fcomip jbe (bad) (bad) pop mov (bad) jp das pushf jl inc and jbe hlt push roll inc leave add mov and sahf and xchg mov out push mov (bad) jl and hlt sub jae out push in sub mov and sahf gs mov cwtl loopne jbe xor sub sub xor mov xor sub mov sub jl and and pop pop inc push out daa insb lea in ljmp std pushf arpl stos pop shlb in push mov xor jge and jl loopne aad dec lds xor (bad) fwait mov imul popf loope mov imul add cmp adc aam out mov cmp cmp pop pop inc push in and stos pop imul push push and hlt jbe (bad) sarb cld or jg hlt dec sbb mov lcall xchg mov pushf shrl fcomip je out push mov add jnp cs jl inc sbb mov lcall outsb mov mov jns lds pop imul insb mov pushf popf inc (bad) (bad) sub adc jle sub sub pop ds cmp and pop pop inc mov lods inc iret add out mov repnz and negb in imul mov mov cbtw inc lods outsl xor mov xor imul jecxz fdivrs cld popf fs mov rol jns sub add and fdivs hlt push roll sub mov sahf popf inc and xchg or sub and repnz jl loopne out and jmp mov lahf arpl lea je or (bad) js das add cmp (bad) xor rol pop pop mov add jg xor xlat jp out mov cltd dec lds xor mov lcall (bad) lcall cmpsl jg sub add cmp and jp loop aad sub outsb mov cltd and pop sti nop (bad) xacquire adc jl sub sub jge xor hlt inc pop mov out mov cmp and das pop fistpl push mov lcall lea xchg lahf inc lea mov (bad) sarb add cmp jge repnz pop push push mov cwtl inc shrl in in lea (bad) popf shrw jbe adc js das sbb push jg xor mov fwait loope out daa insb mov jbe mov lcall (bad) xchg imul cmpsb fcomip xchg in push cmpsl jle sub add repz jnp loope push mov jmp mov icebp lahf lea nop les sub std das add and cmc das pop fistpl push mov movsb cmp xchg xchg sahf popf inc and xchg fdivrs icebp lahf push nop les jl sub das add xor (bad) imull push aam xchg repnz mov jmp mov repnz and xchg mov jns sub push aas jl das pushf jl inc pop mov push push mov cltd and call in lock fs ret xchg mov jl sub insl fnsave mov push rol jl sub or add sub jg repz (bad) push dec outsl fwait mov bound and xchg mov jle sub daa and xlat pop push push mov cltd sub xchg mov sahf data16 mov (bad) fwait loopne leave and push cmpsl pop pop mov (bad) jnp cmpl test add (bad) arpl and fdivrs loop addr16 inc iret add imul push data16 lock fs cmc pushf ret sbb fldt add cmp jge repz jp out mov mov imul insb imul pushf loope mov or lds popl or add (bad) jbe repz lahf sub mov out ljmp add rclb cwtl inc lea or sarb out sub mov xor mov push mov daa (bad) lcall mov add jge and fnstcw loopne cbtw sub xchg mov pushf and mov js das cld or lahf jl sub pop pop inc mov fwait and stos cmp call test (bad) popf and cmpsl fist shrl call pop rcrb (bad) lock xlat lods add in adc mov mov fwait loope aad and in mov lock and stc je in imul adc xlat pop push push mov lcall (bad) xchg mov hlt sahf imul ficom mov sub xor jge xor (bad) pop cmpsb inc push jmp pop imul push jl sub popf and jl push nop or lea lret leave pusha out ret jae rol jle sub xor pop ds cmp sub jae out mov cwtl inc lods outsl cmp call pop cmp and xchg mov (bad) (bad) pop pop mov or jl inc pop mov pop inc mov lahf inc lods outsb xor lea jae cltd and pushf arpl mov negb push rol jg sub sub jnp das jg hlt sub jp out mov mov cmpl fwait hlt mov cltd sub (bad) xchg push inc and xacquire push rol pop pop (bad) std das add jl lock pop fdivrs repz lcall mov hlt sahf push pushf loop mov xor sub sub add cmp pop push push mov stos xor (bad) mov icebp addl mov inc xchg popf gs mov pushf loop test in imul xor repnz pop pop inc push in and fwait mov push fs (bad) pop (bad) lcall sub popl (bad) pop add das pop fstpt repz lcall mov repnz data16 (bad) pop aam jecxz mov xor and xchg mov jl sub or inc pop xor sub jns repnz lods inc jbe cmp jb push mov lahf arpl mov xlat cwtl fist sarb or pop ds jl dec pop mov roll sub nop mov pushf arpl lods add lcall mov add jle and rol jle sub and fdivrs repz stos xor mov sub cmc pushf rcll imul decb jl,pt and aam fwait loopne aad and movsb xor mov sub pop (bad) lcall (bad) jle sub ds lock and jge out mov lahf and jl dec sbb mov lahf inc iret or in ljmp xchg lahf inc and stc je or sarb sub jg xor mov push mov out vfrczss xchg lahf dec daa mov pushf rcll pop mov add cmp sub pop pop inc mov cltd and jmp mov icebp addl mov imul nop les (bad) jle sub daa and repnz jp loop jmp pop addr16 jno jb push mov lahf data16 xchg (bad) and jmp pop pop mov xor inc pop xor pop push push push in daa insb mov call push mov pop sti nop les addr16 lahf arpl mov shlb or das sti add cmp sub pop push push mov lahf dec lds aas jmp (bad) xchg andl mov aam jecxz xchg xor sub (bad) cld or fs mull pop xlat js loop addr16 inc leave add in ljmp std pushf and jbe or das add cmp ficom pop mov xor inc add repnz jae out mov cwtl and movsl push dec insb mov lock and xchg mov pop pop mov (bad) jle and repnz pop mov cbtw inc leave add mov in icebp lahf addr16 negl or (bad) imul ljmp add and xlat jnp loopne push test cmc dec pop mov cwtd and stos xor ljmp nop popf dec (bad) lea lcall sub das add cmp add (bad) out mov (bad) cmp insb jl sub popf and cmc pushf rcll js das and sbb jl das pop fstpt mov lcall mov lds mov dec nop mov popf and xchg (bad) and jmp jle sub pop xor mov push lods daa insb mov dec mov lcall aad loope leave and sub add and dec sbb mov mov call mov std lahf arpl stos pop cmc pushf ret mov nop popf dec (bad) lea push in push mov or and (bad) jl out mov cltd mov mov pushf popf inc (bad) mov xlat cltd loopne mov push rol jns sub add and inc sbb mov lods sub mov repnz and lcall cmpsb pop pop mov (bad) xor mov in imul cs jl inc pop mov push push push jmp push dec insl mov lcall shlb or mov or ds cmp sub jns loope in and outsl mov test std lahf arpl stos pop (bad) lcall sarl das lcall fs hlt das pop fistpl push mov cmp cmp jns loopne push aas call push push mov adc imul add cmp cmp das pop fstpt loope addr16 xchg mov lahf push lcall sarl add cmp and fdivrs repz roll and movsl cmp jne mov lods daa insb lea rorb pop cmp aas sub out push mov or jge repnz pop pop inc mov fwait and dec mov nop popf dec and mov or lds sub or jns cs jl inc and jp loop push mov out nop mov lahf inc daa (bad) pop xlat cwtl loopne fdivrs nop popf dec and loopne mov xor sub sub das pop pop add fstpt loop addr16 sub xchg mov popf and cltd mov adc jle sub aas jge,pn repz jl out mov lods and call push mov pop sub or mov add divl rol jl sub or aam pop fstpt repnz lahf inc lods outsl pop imul xchg imul nop (bad) cmc test push rol jg sub jl lock jge out push in and fwait mov jl sub lahf and pushf loop (bad) and rol pop pop mov add jl inc pop mov test add or add xlat jbe repz cltd inc shrl dec insl jno jb push mov negl or (bad) jns sub (bad) jp and and jbe hlt push in and dec mov lcall aam jecxz jbe in push cmpsl jl sub add hlt inc sbb mov stos ds sub repz lcall outsb mov andl sahf fs mov xlat cltd loopne mov xor sub add cmp and mov out mov movsb xor mov jb inc xchg lahf addr16 fist cmpsl pop pop (bad) cld add add fdivrs loopne fs mov mov mov pop aam sbb test nop popf dec (bad) (bad) sub adc js das cld or jge repz pop cmpsb inc mov fwait and stos xor mov dec bound (bad) (bad) cmp mov psrlq pop pop (bad) std das pop jp das mov aad out mov outsl cmp insb mov lcall cmpsl ficom sarl std insl fnsave mov psrlq jg sub sub inc add jge out mov cltd mov jae andl lahf data16 xchg mov pop mov add jl sub jns repz in inc jbe xor lea push imul mov negb psrlq pop mov add jl das jg cmc and jg add sbb sbb and sub jnp loope out and insb (bad) pop cmp and lahf jecxz jbe xor sub sub xor jp das jle cmc dec sbb mov lods sub mov xchg lahf dec daa mov pushf rcll jl sub or cmpl lcall movsl aas jmp mov sub push xor mov lcall pushf loope mov pop pop mov add cmp das pop fstpt loop aad inc shrl call mov lcall aam jecxz jbe push rol pop mov das loopne aaa xor jp loopne jmp ds mov pushf popf inc (bad) mov aam sbb pop xor shrw mov xor sub sub sub pop add (bad) jl out mov lcall mov lahf lahf inc (bad) mov aam loop leave and push mov das pop jns das andb inc pop mov out mov lcall outsb mov cltd and cmp lcall (bad) jns sub insl fnsave mov or (bad) jl sub (bad) pop adc fstpt repz jmp cmp call push mov lahf and xchg (bad) and ljmp cmp jl repz pop mov cmpsb dec mov cltd and stos cmp xchg (bad) inc xchg lahf arpl lods add pushf loop mov or (bad) jle sub and sub jg add push sub jl and repnz pop push push mov cltd sub mov lcall negl or sub or sahf jl inc pop mov lcall movsb push dec outsl (bad) xchg xchg sahf popf inc (bad) lea sahf loop (bad) and imul add add and jbe hlt push jmp aas jmp mov sub imul xchg mov std pushf arpl (bad) cmp xchg call sub sub jns jge,pn repnz sbb mov lods mov xchg (bad) inc xchg sahf imul fist (bad) pop mov or lock pop fstpt mov cltd inc shrl call imul jl rorl lahf lahf inc and xchg mov or sarb sti add jl das cmpl out mov cwtl inc lods outsl ds insb mov (bad) popf and sahf jecxz mov push rol jle sub sub jnp das andb and jae out mov (bad) cmp xchg andl lea lahf jecxz je out push mov insl fnsave je or lds mov das add jle cmc dec pop mov arpl addr16 outsl mov test sahf popf inc ret aam jecxz je adc jns sub xor cmp pop pop inc mov cltd sub jno jb pop xor xlat cltd loopne (bad) and sarl std das pop jns cmpl test add cs jl sub jae out push out sub mov lcall cmpsl ficom rcrb sbb add aad fwait loopne out and mov nop popf dec ret (bad) fwait loope mov adc jl sub sub jl and repnz jp loop out and dec mov sub gs inc leave add mov push inc ret aam jecxz mov push rol jns sub or jnp das cmpl push mov jmp mov repnz and cwtl (bad) xacquire adc jl sub sub pop adc hlt inc sbb mov lcall mov hlt sahf push cmp xchg imul sahf ret push call sub (bad) jl and sub js loop arpl out fwait mov mov pushf popf inc shrl xchg push rol pop pop (bad) std or inc pop xor repnz pop cmpsb dec mov lcall jno jb andl pushf push fwait loopne leave and rol js dec mov lahf jecxz (bad) and imul xor cmp jl loopne imul xchg jl sub pushf arpl mov xlat cltd loopne xchg in imul and fstpt repz in inc iret or in ljmp pushf popf inc and xchg mov jg sub add cmp das jg cmp mov add jl das pop fdivrs loopne push ds mov (bad) popf and lcall mov xor jnp jle,pn repnz jnp loopne fs inc shrl out insl mov lock fs mov xlat cltd loopne mov push rol pop pop mov or cmp sub jae out mov cwtl and or pop fdivrs repnz lcall mov (bad) popf and nop ret xchg mov adc js das sbb push jp das lahf jl sub jbe repz cltd inc jbe cmp call in repnz addr16 mov sub push rol imul add cmp daa and repnz and jp loopne in mov mov xchg lahf inc and dec xchg mov lahf arpl stos pop (bad) lcall cmpsl jle sub push aas jg xor mov push push push aad and stos cmp xchg mov lock gs mov loope test in push mov das (bad) jge xor mov lcall stos pop addr16 outsl mov and sahf imul loop (bad) and rol js dec mov lcall (bad) pop pop mov push aas jge and inc pop mov out mov lcall outsl mov test xchg lahf inc (bad) (bad) cmp mov xor sub sub push aas jl das jl repz sbb mov mov in jmp mov pushf addr16 (bad) lcall sarb push sub pop ds jl das jg and fsubrs decb aas inc pop xor aam out mov lcall fwait mov imul mov shlb push rol pop addr16 add and mov addr16 and outsl mov lcall pop sti nop les (bad) jg sub sub inc add hlt dec pop mov fwait loopne imul sbb mov lcall lea icebp lahf addr16 (bad) cmp (bad) and push mov das pop pop adc mov push push mov mov rorb es popf and xchg mov out push mov add cmp pop pop inc push jmp ds mov (bad) popf and dec (bad) pop cmp and cltd mov or sub or pop adc fnstcw repz aad and stos push dec insb fwait mov arpl and mov push rol pop pop mov das pop jge xor aam xchg repnz lahf inc lods outsl pop imul xchg mov lcall cwtl fist sub loopne mov mov cwtl xchg lret inc xchg sub jmp adc scas ret leave jb mov mov sbb test add inc sbb xor rol jns sub sub pop movq push push mov mov dec (bad) lcall cmp mov pop pop lea or shrb push xlat pop push push mov lcall mov cld popf fs (bad) cmp (bad) and rol js das cld or cmpl lcall pushf sti incl cmpsl adc leave (bad) push add das add xor repz jg repz lcall nop mov sahf push fwait loope mov in push mov or cmp dec pop mov push push push in sub mov sahf and xchg (bad) and imul cmpl out mov lods sub mov sub push lods and stos ds (bad) xchg bound and xchg mov in push mov das pop pop setl pop (bad) jg repnz mov jmp jno jb fwait and add cwtl loopne je in push cmpsl jg sub (bad) jle and hlt dec sbb mov stos pop addr16 insb mov lcall jl fimul adcl cltd mov push rol pop pop mov or aaa xor mov arpl dec insb jno jb xchg sub and fwait loope jbe or rcrb sbb push arpl and jg repz lods sub mov imul mov xlat cwtl loopne xchg push rol jns sub insl jae cmc pushl orb rol stc inc addr16 std sub mov lcall cmpsb fcomip jbe call sub sahf jl sub jnp loopne cwtd inc jbe cmp xchg mov std pushf and (bad) and rol pop pop mov add adc aam xchg repz lcall mov xchg lahf inc and xchg leave and mov pop lock gs mov (bad) fwait loope jbe push rol jg sub sub pop adc hlt inc pop mov pop inc mov mov in ljmp (bad) popf and cmpsb fist rcrb call das andb sub jg repz add in ljmp icebp pushf lea sahf ret xchg (bad) and rol jg sub add jge and ljmp loope daa and mov cwtd inc jbe push dec insb jno jae test sahf popf inc lea loopne je or lea or adc mov lcall stos cmp jne pop sbbl xchg mov pop pop mov or and hlt sub jns repnz mov jle repnz jp out mov mov out mov (bad) popf and aam jecxz mov xor sub call xor dec pop mov push push push out and stos ds andl lea nop ret xchg mov js das std das add cs jl das pop fistpl inc mov cltd daa insb mov dec outsl mov (bad) es adcl xlat aas lcall inc leave add call andl mov loope xchg psrlq jg sub or jns das fs mull pop (bad) jnp loopne cwtd and stos cmp xchg xchg nop popf dec and stc je or (bad) jl sub add jge and aam xchg repnz lods sub mov std lahf and mov xor cmp sbb in shll lds add movsb xor mov and sahf fs (bad) cmp mov out push mov das add pushf jl dec pop mov aad inc lods outsb aas call jl sub pop shlb xor sub sub or arpl and mov push mov iret (bad) mov icebp lahf addr16 negb xchg mov in popf lret sub or ds icebp pushf addr16 aam jecxz mov or (bad) jns sub or jl das jle cmc inc pop mov push push push jmp pop addr16 mov sahf popf inc (bad) lea lcall sub sub push aas jge and fcomps inc mov lcall jno jb pop cmp and xchg mov xor sub sub add push cmpsl pop pop lea or adc cmc dec pop mov xchg repz or insb mov std pushf fs mov (bad) lcall lds sub or adc repnz pop fdivrs loope jmp xor jmp mov popf inc int3 mov (bad) lcall (bad) jle sub add cmc das pop fdivrs loope gs and cmp jns loope roll inc shrl in jmp mov sahf data16 mov xlat cltd loopne je call das add cmp (bad) and and pop cmpsb dec mov lcall lea lcall sahf jecxz mov push rol pop pop mov xor jge xor cmc and pop push push push aad dec lds xor ljmp icebp addl mov repnz retw aad loop je or (bad) jle sub and xlat jl loopne jmp pop imul insl jl sub sub adc js das sbb push jge and repnz jp loop push mov rorb pop sbbb cmpsl fcomip xchg xor arpl ficom mov sub jge xor fnstcw loope push cmp call pop xor push cmpsl fist js das push sub jg xor xlat jae out push jmp xor jmp mov popf and xchg mov jns sub (bad) pop adc rol jl sub or jle repnz and jbe repz lods inc jbe xor ljmp pushf popf inc and je push rol pop mov or pop adc pop pop inc push out and insl nop mov popf dec int3 mov shlb or mov xor jg xor das pop fstpt mov lahf and cmp and jg repnz lods daa insb mov call lcall pop aam jecxz je adc js das std das add xor repz js loop imul push imul pushf loop jbe or sub jg hlt and jns loopne cbtw inc lods outsl aas jmp jno jb andl addl mov lahf inc and xchg mov xor sub sub add jge and hlt dec sbb push jmp ds outsb mov es addr16 mov aam jecxz mov in push cmpsl jg sub sub jp and fdivrs loopne in dec lds cmp jae inc xchg cmc pushf ret mov lcall sahf ret xchg mov or sub add setle pop (bad) pop push push push out daa insb lea in jmp mov and sahf and divl rol pop addr16 sub jg xor mov addr16 and insb jno jb andl sahf data16 lea lcall sarb std insl fnsave test or sub (bad) jge xor hlt and jp loope push lods and in lea cld popf shrl mov or mov or repz js loop gs and movsl aas jmp mov xchg lahf dec and xchg mov or mov push jns,pt das (bad) and das pop fstpt add sbb pop jge and aam lcall mov jmp mov pushf popf inc daa mov jecxz (bad) and rol jg sub or adc fstps push push aad daa insb lea call bound (bad) lea mov or lds sub das add pushf jl dec pop mov pop inc push in and out sarb dec dec xor push dec outsl mov std lahf fs mov aam jecxz mov out push mov add jl and pop pop inc mov stos ds mov lcall xlat cwtl fist jns sub or jle and (bad) out mov cltd inc leave add in ljmp lahf lahf inc daa (bad) pop shlb or lds in fcmovnb sbb (bad) mov test andl mov hlt sahf ret xchg (bad) and rol jl sub (bad) jg xor aam xchg repz mov out mov std lahf and xchg mov push rol pop mov add jg xor fnstcw loop jmp xor mov dec bound and xchg leave and sarl or jge outsl aad lcall stc cmp stc out ret dec xchg adc mov mov jp inc rorl icebp lahf addr16 ret cltd mov or sarl decb jl,pt and xlat jbe repz cwtl inc jbe push dec outsl (bad) xchg push gs lahf loop leave and sub push ds add cmc and jns loope rorl test mov (bad) popf retw xlat cwtl loopne mov or sub insl fnsave mov xor sub mov sub jns mov aam lcall add mov pushf gs (bad) divl imul sbb cmp inc pop mov push push mov cltd inc iret add out mov nop popf dec (bad) (bad) ds jecxz mov push rol jl sub or jge and repz jg add sti add cmp das pop fstpt loop gs inc leave add call xchg lcall aad loope mov out push mov add jl and jl loopne jmp push dec outsl mov lcall aam jecxz je call sub aas das (bad) and sub pop cmpsb inc mov fwait mov imul jbe repz mov jmp nop mov popf and sahf ret xchg mov (bad) (bad) pop pop popl (bad) jge and mov arpl imul xchg xchg icebp lahf push fwait loope mov or das sbb and (bad) pop push push push roll sub lea (bad) popf and jl rorl lahf lahf inc and xchg mov call (bad) cld add jl dec sbb mov lahf and jmp xchg xor mov shlb push rol jle sub pop xor mov out mov test mov imul pushf ret sbb pop (bad) std insl outsb mov cld rcrb inc xchg pushf gs lea mov xor sub mov or jl repz sbb mov cltd mov push mov lcall (bad) fwait loope je call mov sub jl and fdivrs out mov cltd inc jbe ds mov std lahf and (bad) and rol jns sub (bad) jge popa (bad) adc pop pop iret mov adc cmp xchg arpl and xchg mov psrlq jle sub adc fdivs hlt push roll and nop mov sahf push cmpsb ficom sub ljmp add and aam out mov lods inc jbe ds outsb mov and popf and sti nop ret xchg mov or dec mov sahf loop mov jl sub (bad) jge xor pop push push push roll inc leave add mov sahf lea cltd fist sarb add cmp xor fdivrs loope arpl imul xchg push inc ret negl push rol jl sub das mov es inc cmpl lret repnz (bad) mov sub add or add xlat jp loop in sub mov daa (bad) popf addr16 mov pushf ret std xor sub add cmp aaa xor fnstcw repnz lahf and outsb mov daa nop popf dec (bad) lea cmpsb ficom pop mov (bad) jl das sahf jl and jae out mov mov dec insb mov sub addr16 mov sahf popf inc (bad) mov xlat cltd loopne (bad) and rol jns sub or shrl pop fstpt loop arpl in jmp mov pop xor push cwtl loopne mov push rol pop pop lea sub jl and cmc dec pop mov fwait loope push lods and insb xchg mov lahf arpl lods add jl rorl lcall cwtl fist jl sub das andb and pop pop inc mov cwtl inc lods outsl aas jmp (bad) xchg mov repnz data16 (bad) cmp mov or rcrb std or jl and hlt dec sbb push aad inc lods outsl xor mov sub popf addr16 mov nop ret xchg mov jle sub aad loop mov or rcrb add cmp adc xlat jns loopne push mov rorb inc xchg cmp mov xor sub sub xor inc add fdivrs loope aad inc leave add mov std pushf arpl stos daa aad loope mov jg sub (bad) jns jle,pn cmc sub jg add sti add cmp and jg repnz lods and mov lcall cmc pushf ret push in push cmpsl pop pop (bad) push sub jp and hlt sub pop push push push aad and movsl cmp call in std lahf arpl lea sahf ret xacquire xor sub std or jle and mov out push rorl test imul pop push push mov lods inc jbe xor in mov lock fs (bad) pop negb or lds mov or pop adc jae out push aad inc jbe ds imul stos daa aam loop mov push rol imul std or jns jge,pn repnz jnp loopne push pop imul insl push addr16 aam add lcall and sahf ret xchg (bad) and push mov sub jnp das cmpl jmp pop addr16 xchg mov popf dec and ret std xor sub sub xor pop adc xlat jns loopne push xor ljmp lock shrl mov (bad) (bad) js dec mov cwtl loopne jbe or (bad) jns sub or and mov fwait out mov lcall mov repnz addr16 mov cmpsb ficom js sub xor jle and fnstcw loopne push mov imul push imul cwtl loopne je or mov sub jge and repnz jg cmp push sub jnp mov (bad) jbe hlt mov or rorb cltd and pushf fs mov cmpsb fist sarb call and hlt inc pop mov cmpsb dec mov cwtl inc iret or call (bad) inc xchg lahf fs mov loopne xchg (bad) (bad) js das add cmp xor xlat jp loopne push mov int dec sub jp loope push push dec insb (bad) push mov pushf and xchg (bad) and jmp js sub add aad push aad fwait hlt mov mov call andl (bad) pop aam jecxz xchg adc jns sub sub pop ss and sub jl out mov mov addr16 fwait mov andl xchg std lahf xor jmp mov es popf inc daa mov sahf ret xchg (bad) and rol jle sub adc repnz jns repz in inc iret add addr16 mov lcall aad loop je or sub sub jl and xlat js loop out and mov icebp pushf addr16 lea lcall mov dec mov cmpsb fist sub sub sub jp and repnz pop pop inc mov cwtl inc shrl rorb test xchg lahf inc shrl mov js sub or aaa xor sub pop push push push jmp aas jmp outsb mov push mov popf fs fwait loope mov xor sub mov xor jl and es cwtl inc lea xor out enter add dec pusha jmp mov (bad) aam jae sbb in pop inc fisubr dec addr16 sub lahf push lcall cmpsl pop pop mov or jle repnz pop cmpsb dec mov cltd sub nop mov sahf data16 mov (bad) fwait loope (bad) and push mov or cmp dec pop mov push push mov cltd inc leave add mov repnz data16 hlt jbe xor sub std insl jo out enter add dec jo push xlat add into push les outsl aas jmp outsb mov xchg xor mov (bad) fwait loopne mov push rol pop pop (bad) call das mov aam out mov lcall nop mov pushf arpl (bad) ds jecxz mov or sarl decb arpl and sub jns repnz cwtl sub xchg mov popf gs mov aam jecxz fmuls in inc sti cmp ret in lret and jnp xchg mov sub jle cmc sub pop cmpsb dec mov lods mov insb andl mov mov in push mov or jp das lahf jl sub pop cmpsb dec mov cltd and stos aas jmp mov std lahf arpl (bad) pop xlat cwtl loopne test or sub and das pop fistpl push jmp xor mov icebp subl in ds hlt in add insb adc ret xchg xor rol jle sub jno,pt fdivrs loopne fs inc iret add addr16 mov pushf popf inc (bad) lea mov or lds mov sub jge xor xlat jp loopne imul xchg imul stos pop sti nop ret xchg mov psrlq js sub sub jge xor cmc and jbe hlt mov cmp cmp pop cmpsb inc mov fwait daa insb mov push mov hlt sahf imul loope (bad) and mov sub pop ds cmp sub pop pop inc push out inc leave add mov es sahf imul ret cltd mov xor sub sub add jge and inc sbb mov lods inc jbe pop imul xchg imul xor in lea nop popf dec (bad) lea nop ret xchg leave and rol jg sub or jge xor aam fwait loopne fs mov mov sahf retw negb push rol pop addr16 sub jl and repz pop fstpt repz out sub mov popf gs mov loopne fdivrs icebp lahf push cmpsl ficom (bad) jl sub sub jge xor cmc das pop fistpl push mov mov in jmp mov lahf dec and xchg mov jns sub xor xlat pop push push push in and call andl lahf arpl mov hlt sahf ret and rol jle sub add mov loopne fidivrl hlt icebp bound lea lcall hlt sahf ret pop in imul and mov fwait loopne cbtw dec lds xor jmp mov test icebp lahf push fwait loope mov or sub add hlt dec sbb push jmp ds arpl and leave and ljmp fnsave (bad) and rol jns sub das jge repz jp loop jmp aas call arpl and xchg (bad) and rol pop addr16 add adc mov gs dec lds xor (bad) mov std pushf fs mov (bad) fwait loope mov (bad) (bad) jl sub (bad) jp das pushf jl inc pop mov test add or and (bad) jbe repz lcall jno jb andl mov aam jecxz mov adc jns sub (bad) arpl and mov fwait loopne in and stos ds lea lcall (bad) lcall (bad) jg sub or inc add mov push inc jbe aas call sub imul jne xchg sub lahf push mov or sarb push sub inc add fstps mov lods sub mov lock and xchg leave and rol pop pop mov sub pop adc repnz sbb mov lcall mov sahf popf inc and rorl popf shrl leave and rol jl sub jge repnz jns repz mov out fwait mov imul sahf ret pop or (bad) decb jns,pt jge,pn repnz pop pop inc push aad daa insb mov insb outsl mov xchg xor (bad) cmp mov call sub insl fnsave mov or sub (bad) jge and repnz jnp loope jmp cmp call xchg sub and lahf loop (bad) and rol js sub xor jl and repnz jns loope jmp push dec insb mov nop popf dec lea rclb pop pop (bad) cld or andb sub jg add sub inc pop xor mov out mov fwait mov mov inc xchg and lahf loop mov pop pop (bad) sbb sbb and and jae out mov fwait daa insb mov jmp outsl mov mov and cmpsl ficom jns sub add and inc sbb mov cwtl sub mov sub imul xchg mov lahf lahf inc and cltd mov xor sub sub sub jnp jg,pn cmc sub jns repz cltd and stos aas call bound daa (bad) pop hlt sahf ret xchg mov or (bad) jl sub (bad) jnp jle,pn repnz jns loope addr16 dec lds cmp xchg xchg sahf popf inc and rorl lcall popf loope mov jl sub add inc pop xor fnstcw loop in inc lods outsl cmp dec arpl and cmc test adc jns sub or jp das jle repnz pop pop inc push aad sub (bad) lcall inc aad loop mov xor sub (bad) std insl fnsave leave and rol imul add cmp xor mov addr16 inc lods outsl xor (bad) (bad) xchg imul lea mov push rol jg sub add cmp sub jg repz aad and in fwait mov push and pushf rcll pop pop mov add cmp inc pop mov test add adc cmc das pop fstpt loop addr16 insb mov std pushf arpl mov (bad) fwait loope mov in imul das mov fdivrs loop gs sub mov lcall lahf loop mov jle sub add hlt dec sbb mov cltd inc iret or in jmp imul jg repz out sub (bad) lcall pop (bad) lcall sarb add cmp and cmc inc and pop pop inc push out and (bad) xchg imul cwtl loopne je xor sub das add cmp and hlt and jp out mov lods and ljmp std lahf arpl mov aam add push xchg repnz and shlb psrlq pop addr16 sub jge xor xlat pop push push mov fwait inc jbe xor mov dec addr16 sub pop aad loope mov pop mov or jl and hlt sub jnp loope jmp ds xchg cld popf and xacquire or rcrb std insl fnsave test push rol js das add cmp daa and hlt and jae out mov cwtl and call (bad) es popf fs cmc pushf ret std push rol jns sub sahf jl inc sbb mov cwtl inc lods outsl cmp jne andl popf and xchg mov jg sub (bad) pop add hlt and jg add or pop add aam lcall add mov sahf shrw xchg or (bad) imul sbb push arpl and fcomps inc mov lods inc leave add mov popf inc and xchg mov (bad) sarb call add (bad) pop pop inc mov lcall mov sub loope addr16 dec lds ds nop mov popf dec (bad) lea sahf jecxz mov or sub aaa xor repz pop push push mov movsl pop addr16 fwait mov mov nop popf dec (bad) mov sti nop (bad) cmc test xor sub sub and fstps push roll inc leave add rorb sub aam sbb (bad) and sahf fs (bad) sub psrlq js das add cmp adc fdivrs out mov lcall mov std pushf arpl stos daa aad loope mov js das add cmp adc fcomps push push in mov dec mov lock fs mov aad loop mov xor sub (bad) std insl fnsave je push rol js das add cmp ds jge repz jbe repz mov in ljmp lcall cmpsl fcomip test or (bad) sbb and cmc dec pop mov fs and mov sahf popf inc int3 mov (bad) fwait loopne mov in push cmpsl js das std das add xor rol jns sub add and sub pop cmpsb inc mov lcall outsl mov test pushf popf inc and loop mov out push mov add jl sub jns loopne push and jmp andl mov pushf loope (bad) and push cmpsb jl sub xor pop add cmc and js loop roll and cmp jae out push jmp push dec insb fwait mov push inc shrl je adc jns sub push ds adc fstpt mov lods mov mov popf dec lea cmpsl fcomip je xor sub das sbb push jg xor xlat jp loop arpl dec insl mov icebp addl mov test lock and xchg mov xor sub mov or jl inc and jl loopne push mov jmp (bad) xchg xchg lock fs lea (bad) and imul cmp and (bad) jns repnz cltd and movsl pop imul dec addr16 sub shlb xor push lcall (bad) jns sub or inc add mov fwait loope in inc shrl jmp mov lahf lahf inc daa (bad) pop sti nop les lds sub and repz and js loop aad dec lds cmp jmp mov jl sub popf addr16 mov loope leave and push mov or jge (bad) xor rol pop pop (bad) sti add cmp and jns loopne push inc lods outsl push dec outsl mov xchg lahf dec and (bad) and imul and fstps inc push in inc jbe pop imul push imul cmpsb (bad) je or (bad) js das add cmp jl and pop push push mov cmp cmp sub pop push push mov fwait and ljmp icebp pushf push mov or das std das add and aam fwait hlt mov lods mov dec push retw shlb push rol jns sub or setg pop mov fwait loopne addr16 dec lds xor lea inc lds or rorb xor addr16 mov cmc pushf ret add rol pop pop mov or adc aad fwait loopne fs sub mov adcl xchg mov or (bad) js sub or daa das mov fnstcw loope rorl test mov lcall lcall test xchg lahf dec and divl rol jns sub push jp,pt das lahf jl inc pop mov out mov lcall insb mov (bad) popf and xlat cwtl fist sarl push sub pop ss cmp jp loop arpl in ljmp nop popf dec daa (bad) pop hlt sahf ret sbb fsubrl ljmp pop jge (bad) xor mov pop pop mov sub inc pop xor cmp jp loope fs and dec xchg mov sahf and xchg mov adc jns sub (bad) jl das pushf jl das pop fstpt mov lods and ljmp xchg lahf dec and cmc test or (bad) js sub add ds aad fwait hlt mov cmp cmp jp loop arpl imul push mov lahf lahf inc and xchg mov in push cmpsl pop addr16 xor jge xor repnz pop push push mov cwtl inc lods outsl cmp jae cltd and pop xlat cwtl loopne mov or sarb or pushf jl dec pop mov gs and movsb xor mov pop insb sub stc icebp bound aad fwait out mov lahf and fwait mov arpl and ficom sub (bad) ljmp add andb and jnp loopne fs and movsb xor mov es lahf inc (bad) lea leave and rol jns sub sub inc pop xor cmc das pop fistpl push mov mov jmp lea std pushf arpl xchg std cwtl cmp insb data16 sahf popf inc shrl xchg adc jg sub or jnp das jg hlt sub jbe repz lahf inc shrl rorb push mov popf and aam jecxz (bad) and rol pop pop mov lahf jl and jp loopne imul xchg mov std lahf and hlt jbe xor sub dec mov cwtl loopne je xor sub mov add jg xor fdivrs mov cwtl inc jbe xor (bad) fwait mov imul nop ret xchg leave and sub sub jp das mov aam pop inc mov lcall mov std lahf arpl stos pop aam jecxz mov in push mov or ds sbb cmpsb pop pop (bad) and sbb add aad fwait loope in inc jbe pop imul xchg addr16 sub xlat cltd loopne mov (bad) (bad) jl sub or add cmc dec pop mov xchg repz lcall mov std lahf and hlt jbe push rol pop pop (bad) cld add and xlat pop push push push aad and jl dec pop mov push mov jmp mov xchg lahf dec int3 mov sub in push mov or jg xor fdivs out mov lods inc lods outsl aas jmp mov lock fs ficom cmpsb jg sub push aas jg xor aam cmpsb dec mov cwtl and lea icebp addl mov repnz data16 lea (bad) and mov or add dec pop mov pop inc mov mov jmp mov lcall fwait loope xchg push rol jl sub or jl and mov out and jmp mov std lahf arpl lea cwtl fist addr16 lahf dec and xchg mov xor sub sub add add dec pop mov arpl out outsl mov xchg lahf and cltd mov adc jle sub push jns,pt das jg hlt inc pop mov pop inc push in sub mov hlt sahf imul loope je or (bad) jl sub add mov jl sub mov fdivrs loope push inc lods outsb aas call push inc (bad) (bad) cmp leave and push cmpsb jns sub sub pop add mov lcall test mov nop popf dec daa (bad) pop negl adc pop pop mov jg hlt das pop fstpt repz cmp cmp dec pop mov out mov lcall insl mov cld popf fs (bad) ds fwait loopne mov or (bad) jg sub push jge,pt xor hlt and pop push push mov lods daa insb mov jmp mov cld popf fs lea mov in push cmpsl pop pop mov or jl and pop push push push out sub mov mov jp lods outsb xor jmp mov pop adcb (bad) fwait loopne (bad) and rol pop pop (bad) std or jl and aam pop inc mov cwtl inc iret or call imul fwait loope mov or (bad) jl sub adc fistpl push push aad and jmp xchg xor mov negb (bad) push fs mov xlat cltd fist cmpsb jg sub or cmp and pop cmpsb inc mov fwait daa insb mov dec lea cld popf fs negl push rol js sub or pop xor and sub jg repnz mov rorb in sahf popf inc and xchg mov or mov add mov push rol pop pop (bad) call das sahf jl dec pop mov fwait loopne push lods mov mov pushf gs mov cmc pushf ret (bad) in imul das jle cmc dec sbb mov cwtl inc iret add dec insb fwait mov bound and xchg mov or sub daa and repnz pop mov xchg repz dec mov add lds push lods mov mov lcall rcrb push sub jp das mov mov arpl out mov nop popf dec and les mov or lahf jl inc sbb mov fwait inc jbe xor (bad) mov lcall lcall (bad) jg sub or jp das jg cmc and jg lahf prefetcht1 sbb jno jns jbe clc aas mov add xor call cld add and repnz pop mov pop inc mov fwait daa insb lea call imul lahf jecxz mov or sarl sub pop adc (bad) jge out mov lcall insb mov (bad) popf and cmpsl fist jl sub push jge,pt xor dec sbb mov outsl jg or dec sarl shll or pop add mov push ds bound lea fwait loopne mov xor sub (bad) push sub jp das pushf jl and pop cmpsb inc mov cltd and stos ds mov nop popf dec and xchg mov or sarl push aas jnp cs jl sub jp loop imul xor push sub outsb mov xchg sub shlb adc jns sub sub jnp cs jl sub jge out mov cltd and movsb xor mov jae cltd and pop shlb adc jl sub jg cmc and jge out push jmp xor jmp mov popf dec (bad) (bad) cmp fwait mov push data16 mov aad loop (bad) and jmp jle sub sub pop add repnz jnp loope jmp pop addr16 mov nop popf dec and cltd mov (bad) (bad) jle sub adc mov push mov out outsl mov xchg sahf fs ret and push mov insl fnsave (bad) and imul xor xlat jl out mov cwtl and stos push dec insl (bad) xchg sub popf and xchg mov push rol js das and sbb and fstps push in inc lods outsl cmp jb push xchg icebp pushf push sahf loop mov or (bad) imul add cmp mov jns pop pop (bad) std or jge and dec pop mov rorl insl jno jb xchg sub sti nop ret xchg leave and ljmp push jns cmpl xchg repz fwait and jmp mov sub aam loop (bad) and mov or aas das andb and jns repnz lods inc jbe xor or push xlat pop cmpsb dec mov mov rorb pop cmp data16 mov sahf jecxz test (bad) (bad) pop pop (bad) sbb sbb cmp dec sbb mov lods and stos xor in mov icebp pushf shrl jecxz je xor sub sub mov mov out daa insb lea call mov lcall lahf aas call mov icebp pushf push lahf loop mov push rol js das add cmp daa and aad out push roll sub insl mov pushf popf inc and xchg mov or (bad) jg sub das pop jl and repnz pop fistpl push in and stos aas call mov (bad) popf and fwait loope (bad) and mov add lahf arpl (bad) pop negb xor sub mov xor and dec pop mov cmpsb dec mov lods inc shrl dec insb mov nop popf dec lea (bad) divl push cmpsb js sub or pop ss cmp pop pop inc mov cwtl inc shrl dec insb mov xchg lahf dec and xchg mov out push mov add ficom out sbb push pop add repnz sbb push aad inc lods outsb xor mov jae xchg xor (bad) cmp mov or sub add sub jns loope out and mov std pushf arpl lea loop mov jle sub push jp,pt and xlat pop pop inc push aad and jl das pop fistpl inc mov lcall (bad) xchg sub pop xlat cltd loopne mov or sub add add hlt dec pop mov push mov imul xchg andl mov negb push rol jl sub and inc and pop push push mov lods mov mov mov addl mov nop popf dec and leave and jmp pop pop mov sub jns jle,pn cmc inc pop mov fwait loope out sub nop mov lahf fs mov fistp sub (bad) and sbb add repnz sbb mov cltd and movsb xor ljmp std lahf arpl lea mov xor inc lea cltd fist mov sub or ds repz jg repz fwait mov xchg mov cld popf fs lea mov psrlq pop pop mov or daa das jge repz jl out mov mov iret mov and lahf addr16 (bad) pop sub (bad) (bad) pop mov (bad) arpl and ljmp cmp add mov pop inc mov cltd sub mov icebp lahf lea cltd loopne jbe psrlq jg sub xor pop adc repnz sbb mov lcall (bad) cltd and popf shrl mov js das sbb setl pop mov push push mov cltd and and das pop fistpl inc mov lcall mov xchg lahf inc daa (bad) pop negb or sub add jl das pop fdivrs out push rorl mov mov popf dec (bad) lea cwtl loopne mov psrlq jns sub or lahf jl das pop fdivrs loopne push xor (bad) mov icebp addl mov xor lea leave and rol js sub add ss and das pop fdivrs repz lcall outsb mov xchg xor mov ret cltd mov push rol jg sub add testl mov lods inc jbe cmp xchg imul jl rorl cld popf fs fist sub sub jge repnz pop mov xchg repz lcall nop mov pushf and hlt jbe or (bad) jl sub or sahf jl sub js loop out and movsl pop imul xchg arpl int3 mov cmc pushf ret sbb loopne std insl fnsave (bad) and rol jl sub xor jge xor xlat pop pop inc mov lcall insb mov (bad) popf addr16 mov loope (bad) and push cmpsb jg sub or pop adc fstps push mov lods sub xchg mov lahf push cmpsl ficom (bad) jle sub xor jg xor mov sbb push pop adc pop pop inc push roll inc iret add iret (bad) mov hlt sahf push nop ret xchg (bad) and push mov or inc add pop push push mov lods sub mov icebp lahf shrl loop jbe or (bad) std or jnp das jg hlt sub jg repnz mov rorb out mov lcall (bad) xchg push inc shrl mov push rol jg sub add jnp cs jl inc sbb mov cltd sub insb mov lock and xchg mov in imul add mov imul insb push and pop imul xchg mov icebp pushf push cmpsl fcomip test in push cmpsl pop pop (bad) sbb sbb jl dec sbb mov lcall jno jae lcall cmp mov call sub or jg cmc and jl loopne gs daa insb lea call imul pushf loope (bad) and ljmp and sbb and or repnz data16 lea nop les mov sub add jge and aad fwait repz cwtl and insb jno jb push mov pop aam loop mov pop pop lea (bad) jp das jl lock pop fdivs repz cwtl mov mov lahf fs mov fist sarb std or pop adc push mov add (bad) hlt das pop fdivrs loopne imul insl jl sub popf shrl mov or (bad) jl sub andb and pop cmpsb inc mov cltd and jmp mov and sahf push lcall (bad) jl sub sub jnp cs jl inc pop mov cmpsb inc push aad and cmp jae out mov lods and stos aas jmp jno jb pop sbbb lcall (bad) jl sub or jl repz jl out mov fwait and call test lcall aam loop leave and push cmpsl js das add cmp aaa xor repnz pop mov imul jae test icebp addl mov lcall shlb or (bad) pop pop (bad) push sub jle and mov out dec lds xor mov xchg daa cmc pushf rcll pop pop mov push jns,pt mov xlat pop pop inc mov lcall outsl mov and sahf imul les addr16 std pushf fs mov xlat cltd fist cmpsb pop pop mov add and and jge out mov lcall (bad) push mov pop cmc pushf ret (bad) in imul and hlt dec sbb mov cltd and stos aas call addr16 sub aad loope (bad) and push cmpsb pop pop mov das pop jns cs lds lea or jns jle,pn cmc inc pop mov xchg repnz lcall fwait mov data16 pushf popf inc int3 mov xlat cltd fist sub (bad) sbb sbb jl das pop fdivrs out mov cwtl and movsb xor ljmp cld popf fs (bad) pop shlb push rol pop pop mov sub pop adc sub js loop out and and dec sbb mov lcall (bad) xchg xchg cld popf fs lea nop ret xchg (bad) and rol pop pop mov add cmp and pop pop inc mov cwtl mov mov popf inc and hlt jbe or lds sub or jl lock pop push push mov cltd daa insb mov insl insb mov icebp addl mov lock and mov js sub or pop xor cmp jl out mov lods and in (bad) xchg mov std pushf arpl lea ret (bad) call sub jno,pt aam lcall movsb xor jmp mov lcall cmpsl fcomip je xor inc int3 mov hlt sahf ret adc push mov add jl and pop pop inc mov mov iret (bad) mov (bad) popf and lcall mov sub pop adc repnz jnp loopne push inc iret or call imul stos and lahf loop mov in push mov das pop jge (bad) xor mov xor sub mov or jl sub pop push push push jmp xor in lea icebp pushf push sahf ret sbb pop mov sub jge xor xlat jl loopne arpl out lea sahf popf inc (bad) (bad) shlb or (bad) jg sub push aas jge and (bad) jae out mov cmp jl inc sbb push jmp xor jmp mov pushf popf inc daa mov loope je (bad) sarb add cmp pop xor and and jae out push roll dec lds aas call bound daa (bad) pop xlat cltd fist rcrb sti add and dec pop mov roll dec lds aas jmp fwait mov imul aas jmp mov (bad) popf retw shlb (bad) shrb add cmp adc hlt sub jbe repz lahf dec lds aas jmp nop mov popf inc and hlt jbe or lds (bad) sbb xor fnstcw loop roll inc iret add imul dec mov std pushf arpl (bad) cmp fdivrs std lahf arpl mov sti nop les cmpsl js sub or jnp cmpl out mov lea call arpl and stc je out push mov add cmp jp loop jmp pop imul xchg data16 xchg lahf inc shrl mov pop pop mov or jge (bad) xor mov push rol jns sub (bad) jl das mov fstpt repz in and mov std lahf and cltd mov push rol jns sub or add aam out mov lahf inc lods outsl pop imul jb fwait and pushf and xchg mov or sub aaa xor pop pop inc mov cmp cmp and jns loope out and stos push dec insb xchg mov pushf and xchg mov jg sub add jg xor pop push push push aad sub mov and daa negl psrlq jns sub das pop arpl and cmc inc and jge out mov lods inc shrl iret mov inc les add rorb cltd and pop xlat cltd loopne mov xor sub sub or pop jno,pt fdivrs mov cwtl inc lods outsl cmp jbe in std pushf fs mov shlb out push mov push aas jnp jle,pn cmc sub js loop out inc leave add in jmp mov (bad) popf and cwtl loopne fdivrs icebp lahf push cmpsb ficom (bad) jl sub or pop xor repnz jp loopne in sub insl mov lcall aam jecxz jbe or sub xor jle and pop push push mov cwtl and insb jno jb push mov popf data16 (bad) pop aam jecxz mov or (bad) jl sub or jbe push rol pop pop mov xor jnp das (bad) and and jp loopne imul jne cltd and pushf gs mov aad loope (bad) and sarl ljmp pop pop add aam xchg repnz lahf inc lods outsl pop addr16 mov std pushf arpl lea mov jl sub or and cmc das pop fstpt loop dec cmp jl and jnp loopne push lods inc jbe pop imul insb push shrl xchg xor sub sub or ds jl repz jae out push in and dec mov lahf lahf inc and xchg (bad) and push mov or pop add hlt sub jg repnz fwait mov insb imul aas call (bad) inc xchg pushf fs mov ficom sub mov das pop arpl and fstpt loop roll inc iret add iret mov dec push and xchg (bad) and imul jl,pn lock jg repnz lods inc lods outsl push dec insb mov lcall nop les (bad) es popf and popf loop mov psrlq js das push sub pop add and pop push push push out sub mov sub popf gs mov aad loope mov or sarl cld add cmp dec pop mov push mov in ljmp lcall aam jecxz mov xor sub sub sub jge push faddl mov push mov push dec pop dec pusha jmp xchg mov pop pop mov or repz pop pop inc mov mov jmp insb mov std pushf and xchg mov xor sub sub sub jle and fnstenv out mov lods inc leave add in ljmp repnz data16 (bad) cmp mov xor sub sub add add mov dec push pop add mov sub mov inc add xchg sub adc sub pop negl (bad) (bad) js sub sub jp das mov mov push lods and stos pop imul jb fwait and cmp mov or (bad) jns sub or jge and xlat jns loopne push inc shrl jmp outsb mov push mov lahf and lahf jecxz je xor sub mov das add mov jns pop pop mov or pop add xlat jge out mov lcall mov icebp lahf push fwait loopne mov jl sub or (bad) and dec pop mov pop inc mov mov call arpl ret aam loop mov pop pop mov sub inc add jp loopne jmp xor or sbb mov lcall insl mov hlt sahf push nop ret xchg mov call sub add jl and pop cmpsb inc push aad and jmp pop cmp arpl mov (bad) fwait loope mov in push mov xor jge xor mov pop inc push jmp push dec insb lea lcall cwtl cmp call xchg xor mov ret and rol jg sub or and repnz jge out push out inc lods outsl push dec outsl mov sahf popf inc (bad) mov aad loope leave and mov add cmp and jns repz fwait inc jbe push dec insb mov xchg lahf inc (bad) mov hlt sahf ret hlt jbe xor sub fist ljmp std lods sub pop pop mov jle repnz pop fdivrs repz cwtl inc leave add mov lahf inc int3 mov aam loop leave and rcrb add cmp add cmc and jl loopne imul jne pop cmp gs popf loop jbe xor sub mov or aaa xor fcomps push mov cltd inc iret add int dec and pop push push mov cltd mov mov pushf arpl ficom mov xor inc add cmc and jge out mov mov out fwait mov data16 lcall cmpsl fcomip je xor sub sub daa and dec pop mov fwait loopne push pop imul xchg arpl and dec mov lahf lahf inc and xchg leave and push mov or (bad) and and pop push push mov mov addr16 xchg mov popf inc shrl mov pop pop mov or daa and fistpl inc push jmp ds mov std lahf and divl jmp js in ljmp popf ljmp ror in dec jno (bad) and stos aas jmp mov lahf lahf inc (bad) lea sahf ret pop xor sub std das add xor (bad) pop pop inc mov mov call imul mov or (bad) pop pop lea (bad) and das pop fstpt push jmp aas call push and divl mov add lahf addr16 loop leave and push cmpsl pop pop mov jge repnz jg repz aad sub mov sahf popf inc and xchg leave and push cmpsl jle sub or jns cmpl pop inc mov lcall fwait mov imul mov negb xor sub mov add ficom fsubrs and sbb jl and jge out push roll dec lds aas call push data16 mov sub or (bad) imul sti add jg xor fistpl inc mov cltd and stos aas jmp xchg mov pushf gs fist lds std or jg xor fcomps inc mov lahf and jl inc sbb push out and movsl pop imul jne inc xchg lahf shrl xchg or (bad) pop pop (bad) and sbb cmp jnp loope out and movsl pop imul dec imul lahf loop mov pop pop mov (bad) jg xor fstpt repnz lods inc iret add out (bad) fwait and addl mov pop cmp arpl mov xlat cltd loopne mov call sub das pop pop ss cmp jl out mov lcall nop mov pushf push popf loop mov in push mov or aaa xor aam out mov lods and stos ds andl mov aam jecxz mov xor inc lea ficom (bad) pop pop mov or adc xlat js loop roll inc lods outsb aas call push dec daa (bad) pop cmc pushf rcll jns sub sub jl and repnz pop mov out mov lahf inc lods outsb aas call mov xchg lahf inc (bad) (bad) cmp mov or (bad) imul add cmp ficom out sbb add fnstcw out mov lahf and insl mov std lahf arpl mov aad loop test or mov xor mov aad daa insb mov jmp outsb mov inc xchg aad loop jbe adc pop pop lea add cmp jp loop gs and cmp and pop cmpsb inc push roll inc leave add mov sahf popf inc and fistp sarl and sbb cmp pop pop inc mov (bad) aas jmp mov lock and cltd mov xor sub das sbb sbb cmp jp loop out and insl mov icebp addl mov xchg sub lahf gs loopne xchg or lds and sbb and repz jg repnz cwtl and stos pop imul xchg (bad) inc xchg lahf gs fist mov sbb push inc pop xor repnz pop fdivrs out mov lods and dec (bad) cltd and add popf loope mov add popf dec and xchg mov or lds (bad) decb jp,pt das jl lock pop pop inc mov lahf and mov std lahf arpl (bad) pop (bad) fwait loopne leave and rol pop addr16 add xlat sub pop push push mov cltd dec lds xor mov cmp inc (bad) lcall (bad) pop pop (bad) std das add sbb sub sub add and das pop fdivs hlt push aad inc leave add mov and negl or lds mov xor jge and inc and jbe hlt mov mov rorb xor lods add lahf jecxz mov push rol imul push sub jnp das fs imull push aad fwait loopne arpl pushf jl sub pop pop inc push jmp xor (bad) lea std pushf arpl mov cmc pushf ret and ljmp add mov (bad) jbe repz cltd sub fwait mov arpl daa (bad) pop xlat cltd fist sub sub or jl repz sbb push aad sub (bad) test icebp addl mov cld popf and divl rol js das and sbb add hlt dec sbb mov lods inc jbe cmp jmp mov sahf push pushf loope mov jle sub and repz and jg repnz mov addr16 insb mov (bad) popf and cmpsl fcomip xchg xor gs mov xlat cwtl loopne mov psrlq js das sbb sbb jl das pop fdivrs repz aad inc jbe ds nop mov sahf push fwait loope je or (bad) imul sbb sbb and dec pop mov fs mov jbe xchg sub negl in imul adc jmp jg sub sub inc pop xor and and pop pop inc mov cltd mov mov fwait and shlb call (bad) sbb sbb cmp dec pop mov out mov cwtl inc leave add in jmp mov pushf arpl stos pop shlb or (bad) jl sub or cmp jp loopne arpl cmpl out push out daa insb lea call addr16 sub lahf arpl fist (bad) jns sub (bad) jl and xlat jae out mov lcall insl mov lcall negl adc jg sub add cmp and jae out mov mov in jmp mov icebp addl mov bound shrl jbe or sub sub jp das lahf jl dec pop mov pop inc mov cwtl sub outsb mov and lahf gs lea and imul sbb cmp inc pop mov xchg repnz lods sub (bad) xchg imul cwtl (bad) hlt jbe xor inc and cltd mov push rol pop pop mov push ds add inc sbb push jmp xor in fwait mov push inc and mov psrlq pop pop mov add (bad) hlt and pop cmpsb inc push in and dec (bad) xchg arpl and stc je push rol jl sub insl fnsave mov adc jl sub add jl and pop push push mov cltd sub (bad) in cld popf and (bad) and push mov (bad) jl and cmc sub jg repnz cwtl and ljmp icebp pushf push pushf loop je or (bad) jl sub or and and jg add sbb push jl das mov mov out mov lods and jmp mov pushf arpl stos pop cmc pushf ret add ljmp loope aaa xor cmc and jns loope jmp cmp push xchg hlt sahf imul loopne (bad) and sub daa and cmc das pop fstpt loopne cbtw sub mov sub push lods and jmp mov mov sahf popf inc and mov or (bad) jns sub add cmp das pop fdivrs out mov cwtl dec lds pop imul jbe lcall pop shlb xor sub sbb add aad fwait hlt push in and movsl aas jmp mov sahf popf inc and fimul mov pop hlt sahf ret pop in push cmpsl pop addr16 sub arpl and hlt sub pop push push mov lcall mov repnz data16 (bad) shlb push rol js sub add adc mov out push in and outsl mov es popf inc and xchg mov push rol jl sub insl fnsave xchg adc jg sub add inc pop xor cmp pop pop inc push aad and mov es pushf addr16 loop mov (bad) (bad) jl sub and fstps inc mov fwait mov mov xchg lahf inc and loope mov psrlq jg sub (bad) jg xor sub jg add or jp das mov fistpl inc push in mov mov cltd and pushf gs lea xchg in imul xor and jns loopne push lods and stos pop imul jae inc xchg lahf push mov adc pop pop (bad) decb jns,pt cs jl and pop pop inc mov lcall mov sub in and jno jb inc xchg negb or sub push aas jl das cmpl xchg repz aad and dec outsb mov pop xor fs loopne je call mov or jns jl,pn lock jnp loope imul xchg arpl int3 mov aam add push mov add cmpsl fist sub sub das add xor xlat js loop jmp ds addr16 xor stos daa sti nop ret xchg mov or sarb ljmp add and (bad) pop push push push aad inc jbe push dec insb outsb mov xchg xor lea fwait loope test xor sub mov insl fnsave je push rol pop pop (bad) cld or jl repz sbb push jmp aas jmp jno jb push xchg std pushf arpl loopne je or lds mov sub pop adc repz jp out mov lcall jno jae test cld popf gs mov aam loop mov imul sbb sbb and inc sbb jle or pop xor cmp jnp loopne push mov iret mov and pushf addr16 (bad) cmp je adc jg sub sub inc add jns repnz lods inc jbe push dec outsl mov icebp lahf addr16 mov (bad) lcall mov sub inc add repz jp out mov lods inc iret or rorb fwait out mov lahf and movsb xor ljmp lahf lahf inc (bad) lea sahf ret stc je in push mov das add cs jl sub pop cmpsb inc push out and movsl pop imul dec imul lahf loop mov js sub add and and jns repz aad inc shrl rorb push mov popf shrw mov pop jp mov (bad) add movsb cmp decb aas inc pop xor cmp pop pop inc push jmp cmp call test hlt sahf imul rcll jle sub pop xor and dec pop mov push mov dec insl jno jb inc xchg negl psrlq jl sub sub jl das cmpl fwait hlt mov cltd sub dec das pop fistpl push mov cltd inc leave add mov es popf inc shrl mov xor sub sub or add hlt sub jl out mov fwait sub mov es lahf inc and xchg mov call mov sub jl das sahf jl sub jns loope arpl rorb and pushf arpl xchg std cwtl push dec insb mov hlt sahf push mov psrlq jle sub aas das andb and jl out mov lods daa insb lea rorb cmp gs negl call sub add cmp pop push push mov lahf and dec outsb mov and negl adc js dec mov pushf loop jbe or sub das lahf jl das pop fistpl push mov lahf and mov es popf inc and xacquire or sub or ds lock pop cmpsb inc push aad inc lods outsl cmp insl data16 lcall hlt sahf ret cmc test psrlq js das add cmp ss cmp and fsubrs and sbb ds jge repz and pop cmpsb inc mov lcall (bad) in repnz shrw mov or rcrb call movq dec pop mov out mov cltd and stos cmp insb mov lcall aad loope mov pop pop popl (bad) pop add fistpl push push jmp xor or pop fistpl inc push in inc iret or rorb xchg sub popf addr16 mov loope mov or sarl cld or jg hlt das pop fdivrs repz aad sub mov push xchg lock fs cltd loopne mov xor sub das push sub pop adc aad out push aad mov dec mov icebp lahf and xor (bad) fwait mov push and mov or (bad) pop pop mov xor cmc and jp loopne jmp xor mov hlt sahf imul loopne xchg call sub or daa das jl lock pop cmpsb inc mov mov call push arpl (bad) pop xlat cltd loopne jbe xor data16 mov aad loop mov out push mov or jl and jbe hlt mov mov iret mov lcall nop les jg sub sub pop ds jl and jp loop in and jmp mov popf data16 xchg mov or lds sub or pop adc imul cs jl inc pop mov fwait hlt mov movsl xor (bad) mov pushf popf inc and stc je call mov or jl lock jns repz cwtl and movsl cmp call pop cmp aas (bad) fwait loope mov (bad) sarb decb aas jg xor fistpl push mov cwtl and cmp jnp loopne push lods and stos push dec insb mov nop popf dec shrl mov call sub add jnp das jg hlt inc pop mov cmpsb inc push aad sub mov hlt sahf push cmpsb fcomip xchg or mov sub jl and hlt sub jnp loope in inc leave add rorb andl addl mov cld popf shrl mov jg sub das pop pop ss cmp jae out push rorl test mov adcl cmc test psrlq js das sbb push jl and hlt dec pop mov push push mov lods and outsl mov xor push fwait loopne mov xor dec shrl leave and rol jl sub add mov lcall (bad) push dec outsl fwait mov imul pushf ret push xor sub mov or jp das jl lock jns repz cltd and ljmp lahf lahf inc daa (bad) pop negl or mov das pop inc add jmp jl sub (bad) jle and aam lcall or dec (bad) xchg (bad) inc xchg xlat cltd loopne (bad) and sarb sbb sbb and inc pop mov pop inc push in and outsl mov icebp pushf addr16 lea cwtl fist sarb das lcall adc jp loopne addr16 and mov je ds test cmp add jo add adc lds test mov lahf addr16 mov hlt sahf ret cltd mov adc js sub or jl and cmc and jl loopne gs and ljmp std pushf and (bad) and jmp js das add cmp daa and jl out mov mov imul insb mov cld popf fs lea lcall xchg sub lahf arpl lea mov or rcrb decb aas jl das lahf jl das pop fstpt loop out daa insb mov dec mov nop popf dec (bad) lea lcall sub sub or and repz pop cmpsb inc mov cwtl and movsl cmp push jl sub sahf and pushf ret add sub sub jge (bad) xor rol js das sbb push pop ds jl dec sbb mov lcall insl mov xchg lahf dec daa mov fist (bad) jns sub push ds ss cmp js loop addr16 inc lods outsl push dec insl nop mov popf fs ret xchg mov jle sub and repnz sbb mov cmp cmp sub pop push push mov lods mov mov sahf lea fist lds sub xor hlt inc pop mov out mov fwait sub mov popf shrw mov in imul and hlt and jg repnz lods sub mov mov lods dec lds pop addr16 insl mov std lahf fs mov lcall sarl sbb push jns das jge repz and pop pop inc mov outsb push dec insb (bad) push mov pushf arpl stos pop negl out push mov or jp das sahf jl and jns loopne push push dec insb fwait mov push imul loop fdivrs icebp pushf and cwtl (bad) xacquire adc imul add cmp cmp das pop fdivrs loope cwtd mov mov cld popf and cmc test push rol pop pop mov or pop add fdivrs loopne in daa insb lea in jmp mov xchg lahf inc (bad) (bad) xlat cltd fist jle sub sub jge (bad) xor leave and rol jle sub daa and pop push push mov lahf inc shrl rorb mov popf fs mov aam jecxz je xor sub popl (bad) jl and cmc sub pop cmpsb inc mov lea call mov sahf popf inc and xchg mov or (bad) jle sub daa and xlat pop pop inc mov cmp and and pop pop inc push in inc leave add rorb andl mov shlb call sub xor fistpl inc mov mov dec outsl fwait mov imul pushf rcll fildll sub jg xor aam xchg repz fwait inc jbe xor (bad) lea lds or iret or rorb sub lahf and mov call sub add cmp sub jl loopne jmp xor ljmp nop popf dec ret aam loop leave and rol jg sub sub jp das mov mov push lods and movsl cmp call xchg sub popf data16 xchg fdivrs lcall lcall (bad) pop pop lea or inc add mov push inc shrl imul dec arpl ret aam jecxz je or mov add inc pop xor cmp pop pop inc push aad mov mov sahf popf inc (bad) (bad) cmp test or (bad) jl sub add (bad) and sub add add fstps mov mov in in mov (bad) popf lea cltd fist sarb das (bad) jl and jns loope imul dec arpl lea rclb pop lea add jg xor repnz pop mov out mov pop stos imul fisttpl push scas out nop dec push les sbb fildl jl out mov lahf dec lds push dec insl mov (bad) popf data16 (bad) sub xor sub mov push ds adc (bad) js loope cbtw and movsl cmp jmp mov imul lahf jecxz (bad) and rol js das cld or mov aam push push push aad and fwait mov imul jl ficom sub pop cmc pushf ret pop push rol jg sub (bad) jns das (bad) and dec pop mov push mov jmp insb mov lcall pushf loop (bad) and imul jl,pn lock jg repz lcall lea lcall negl or (bad) jle sub hlt sahf ret divl rol jl sub add jg xor fstps inc mov fwait inc jbe push dec insb mov lock fs loope mov or lds das add cmp cmp sub jp out mov cltd and call (bad) and pushf data16 mov hlt sahf ret cltd mov xor sub (bad) decb aas jge and repz and jg add sub jg xor mov jmp xor (bad) (bad) xchg arpl (bad) lea mov push rol pop pop mov add jl sub jbe repz lahf dec lds xor in lea (bad) popf data16 (bad) sub adc jg sub or jle cmc inc pop mov cmpsb inc mov mov dec insl mov sub out mov fwait mov mov pushf and stc je (bad) (bad) pop pop mov sub jl and mov lcall insl xor ljmp cld popf gs mov cmpsb fistp cmpsl js sub or pop xor and inc pop mov fwait loopne out inc iret or rorb daa std lahf and nop mov lahf and cwtl mov rol jl sub or ds mov fistpl inc mov add jmp insb mov cld popf fs lea mov adc pop addr16 sub jns das jge repnz pop pop inc push aad dec lds aas jmp outsb mov andl sahf imul loopne jbe adc pop pop (bad) std insl fnsave mov jg sub das pop pop ds cmp das pop fstpt repz fwait mov mov sahf data16 lea (bad) call sub or jge xor repnz pop cmpsb inc mov mov imul insl jl sub cmp test out push mov add add sub jg add sbb push jl das mov (bad) pop push push mov outsb aas jmp outsl mov xchg xor stos pop negb push rol js sub sub pop adc mov fwait out mov cwtl inc leave add mov sahf push cwtl loopne mov xor sub sub push aas inc pop xor and inc and jns repz aad and movsl cmp call pop pop inc mov lcall mov repnz lea fwait loope je (bad) shrb std or inc add inc pop mov lcall insl xor jmp mov test lahf lahf inc and loopne mov jns sub push ds adc jg repz lcall jno jae (bad) es lahf inc shrl xchg mov lahf arpl stos daa negl xor sub das sbb push arpl and repz jae out mov outsb xor ljmp nop popf dec and divl imul cmp jge,pn repnz jbe repz lods daa insb mov iret mov push data16 nop popf dec and mov (bad) sarb std insl fnsave mov in imul and aam lcall outsb cmp xchg imul lea loop mov or sub add cmp js loop roll inc lods outsb aas call data16 std pushf fs mov sti nop (bad) hlt jbe push rol pop pop lea or imull pop fstpt add std das add and aam out mov cwtl inc lods outsl pop imul xchg andl mov negb push rol jg sub sub jl and aam pop inc push out and movsl push dec insb xchg mov popf dec ret (bad) lcall mov sub or pop add aad out mov mov rorb push push mov cwtl inc shrl in ljmp xchg lahf inc and cltd mov (bad) (bad) pop pop mov (bad) pop adc aad xchg repnz fwait and jmp push mov pop aad loope leave and push mov sub jnp cs jl and jl loopne in sub mov icebp pushf addr16 sbb fwait and pop cmc pushf ret std or rcrb cld add cmc inc sbb push in and jmp (bad) es popf dec daa mov fist mov sub or pop add sub pop cmpsb dec mov cltd sub lea lahf lahf inc and rcll pop pop mov insl fnsave (bad) and imul adc (bad) pop push push mov cltd and insl mov nop popf dec and mov pop pop (bad) std das pop pop add aam fwait out mov cltd and (bad) xchg imul stos pop negb or (bad) pop pop mov add and repnz and jg add add cmp cmp inc and jns repz lcall mov lock fs (bad) fwait loope test or shrl sbb push pop add mov gs sub xchg mov sahf shrw xchg or mov das jg hlt sub jg repnz lcall mov sub imul insb imul fwait loope mov or sub add jge and repnz pop pop inc mov lcall xchg mov popf inc and ret xchg mov jl sub or and mov out mov cwtl and mov addr16 xor (bad) cmp mov xchg lahf dec and stc je adc js sub or inc pop xor repnz jge out push out mov mov inc xchg pop aam jecxz je or lds call adc inc pop mov fwait loope gs and movsl ds insl mov repnz data16 lea sahf loop (bad) and rol pop pop (bad) std insl fnsave test (bad) (bad) pop pop mov sub jp das jl repz sbb mov lcall lea hlt sahf push pushf loop mov xor sub sub or jns cs jl dec pop mov arpl dec insb xchg mov popf inc int3 mov cmc pushf ret add rol pop mov or lahf jl dec sbb add das pop inc add mov out mov lcall mov icebp lahf push lcall sub mov (bad) and and pop pop inc mov cltd and stos pop imul push xchg (bad) popf data16 mov (bad) lcall sarb decb aas jle and inc sbb mov lahf sub mov sub push lods and dec nop mov popf and pushf loop xchg psrlq pop pop mov push aas jle and (bad) pop cmpsb inc mov lods sub mov pop cmp data16 xchg mov or sub add cmp and jp loopne imul dec push push jl ficom es popf retw aad loope mov in push cmpsl jg sub add and dec pop mov arpl call arpl daa mov jecxz (bad) and rcrb std or pop adc repnz pop pop inc mov lods sub mov push inc and xchg leave and jmp imul std insl fnsave xchg in push cmpsl jg sub xor jge and and pop push push mov lods dec lds pop imul xchg imul fwait loope je psrlq js das sbb adc fnstcw loope out and insl mov lock fs aam loop (bad) and rol jl sub or add aam test jle or aaa xor repnz pop fdivrs loop out dec lds aas call mov icebp lahf push sahf loop (bad) and rol js das cld or jle repnz pop fistpl inc mov lcall insb mov lcall aam jecxz je in push cmpsl pop pop mov or pop ss and sub pop cmpsb dec mov mov out mov sub addr16 inc lods outsl cmp insb data16 lock and xchg (bad) and rol js sub add ds cmc dec pop mov push push mov cwtl inc lods outsl cmp call andl pushf gs mov shlb or (bad) imul sti add jge and and jnp loope aad inc lods outsl push dec outsl fwait mov jl sub inc aam add (bad) and pushf data16 xchg mov in imul and cmc sub jg repnz lcall outsb mov fwait and pushf push lahf loop mov push rol jle sub daa and fistpl push roll inc leave add mov lahf dec and xchg mov push rol imul std insl fnsave xchg in push mov xor jg xor (bad) pop pop inc mov cltd and (bad) lea hlt sahf push sahf ret xchg mov or lds sub das add das jg hlt and jge out mov cltd inc iret or call push and xchg mov or (bad) imul sbb pop jge and jns js sub xor arpl and repnz jg repz mov addr16 fwait mov addr16 sub lahf arpl (bad) shlb adc jg sub xor hlt and jae out push jmp xor jmp mov xchg sub daa shlb call das push sub pop adc (bad) pop pop inc mov cwtl and movsl xor or sbb mov lcall mov repnz and sahf ret xchg (bad) and push cmpsb js das sbb push pop ss cmp pop pop inc mov lcall mov nop popf dec (bad) lea cmpsb ficom sarl add cmp sahf jl dec sbb mov cwtl inc lods outsl xor (bad) (bad) xchg addr16 sub std cwtl pop imul insb addr16 xor mov xlat cltd loopne (bad) and push mov das (bad) jl and aam fwait loopne addr16 mov pushf popf inc and ficom rcrb add cmp add inc sbb mov cltd inc shrl out outsb mov daa lcall xlat cwtl fist sarb mov fwait loopne mov in push cmpsl js sub xor jnp jge,pn repz jp out mov cltd inc iret add imul xchg arpl and xchg mov in push cmpsl jg sub mov mov push mov iret (bad) lea icebp lahf addr16 (bad) pop xlat cltd fist jl sub or jge xor jns pop addr16 push aas jl and and jl out mov cwtl sub mov repnz lea (bad) xacquire xor sub mov xor pop ss cmp jnp loopne fs and movsl cmp jne push mov sti nop ret xchg mov pop pop mov sub jge and repnz pop push push mov lods and movsl xor or and pop push push mov cwtl and (bad) test sahf popf inc shrl mov jg sub or jns mov fstpt repz mov jmp lea repnz data16 (bad) cmp mov pop pop mov or and dec pop mov out push out and xchg mov addl mov pushf arpl (bad) sub out push mov sub pop ss and dec pop mov addr16 sub lea lcall sahf ret xchg mov (bad) (bad) jg sub add and das pop fistpl push mov lods sub mov popf fs (bad) ds loop mov xor inc (bad) mov aam loop leave and jmp jle sub add add mov cmpsb inc push aad and mov std pushf and hlt jbe in push cmpsl pop addr16 push aas jle and repnz pop fistpl inc push roll sub mov lcall aam jecxz xchg out push mov or ds mov mov add ds (bad) pop pop inc mov lcall mov std lahf and hlt jbe push rol jl sub or arpl and hlt inc sbb push roll inc lods outsl pop addr16 (bad) pop sbbl xchg mov jl sub or lahf jl dec sbb mov lcall mull pop (bad) pop cmpsb dec mov lahf and xchg mov popf inc (bad) mov aam jecxz mov push rol pop pop (bad) sti add jl and hlt dec pop mov out mov lahf sub nop mov popf inc daa mov cmpsb ficom cmpsl jle sub or jl das mov (bad) out push out inc shrl imul push data16 icebp addl mov cld popf fs lea cmpsb fist (bad) pop pop popl (bad) jl and xlat js loop imul insb andl mov xlat cwtl loopne mov psrlq pop pop popl (bad) inc add hlt dec pop mov lcall stos xor ljmp std pushf and divl mov pop lcall fwait loope mov adc js das sbb add cmc dec sbb push aad and call push mov popf addr16 mov aad loop je or sub add and aam xchg repnz cwtl inc lods outsl xor mov daa std lahf arpl lea loop mov or lds mov or inc pop xor rol jl sub das add xor jg repz outsl cmp dec xchg xchg lahf inc lea cltd loopne mov psrlq imul std or inc add xlat pop push push mov cwtl daa insb mov insb insb mov std lahf arpl mov negb or sub add inc pop xor fnstcw repz roll and cmp and pop push push mov movsb xor ljmp xchg lahf dec daa mov jecxz mov jle sub xor inc add repnz pop fdivrs repz cltd sub mov lahf inc int3 mov aam jecxz mov or sub or inc pop xor and das pop fstpt loopne push inc iret add dec insl jno jb push mov andl and jp loop addr16 mov lcall lahf jecxz je xor sub sub add aam out push in mov insb bound shrl mov jle sub ds mov (bad) jnp loope in daa insb mov outsl (bad) xchg xchg repnz and dec xchg mov popf inc (bad) (bad) ds loop mov jl sub add cmp jp loopne roll and insb mov pushf popf inc and divl rol jl sub add and xlat js loop arpl out vfrczss xchg lahf inc and fist sarb mov lahf jecxz mov in imul jl,pn lock and pop cmpsb inc push rorl jbe pop addr16 (bad) andl lahf dec and xchg mov or sub or jp and xlat pop cmpsb dec mov lods daa insb lea in ljmp lahf lahf inc (bad) (bad) cmp mov in imul and jns jle sub pop xor fistpl mov cwtl sub outsl mov cmp pop aam jecxz jbe or sub sub jle and xlat pop push push mov cwtl inc shrl in ljmp cld popf and xchg mov (bad) (bad) pop pop lea or cmp jae out push rorl insb mov int dec and pop pop inc mov lcall (bad) test pushf popf inc and stc je or lds sub push aas inc pop xor cmc and jge out push out inc shrl jmp mov lock and xacquire in imul and hlt sub pop pop inc mov cwtl dec lds ds outsb mov fwait and popf and call test xchg lahf inc ret xlat cwtl fist sub std or jl das jg hlt and pop push push mov cltd mov mov sahf imul rcll jns sub or pushf jl das pop fistpl mov lcall xchg mov lahf data16 xchg mov adc js dec mov cmpsl ficom lds mov or and dec pop mov pop inc mov lcall nop mov pushf and je xor sub mov or jge and jnp loope jmp push dec insb insl mov std lahf arpl mov sti nop ret xchg (bad) and imul ds add sbb (bad) (bad) mov xchg imul sahf jecxz mov or lea add jnp cs jl dec pop mov out and lea lcall shlb or sarb sbb cs jl das pop fdivrs repz cltd mov mov pushf arpl stos pop xlat cwtl loopne xchg xor push mov in push cmpsl pop pop mov or ds jl and jbe repz lods and ljmp pushf popf inc int3 mov shlb or lds sub xor jle and hlt dec pop mov xchg repz in sub mov daa xchg lahf dec int3 mov sti nop ret xchg mov pop pop mov or jge and call call pop jl dec sbb mov fwait mov dec bound and xchg (bad) and imul ds adc mov out push out inc leave add mov mov aas (bad) fwait loopne leave and jmp jle sub add hlt sub jg add sti add and and pop push push mov stos push dec insb mov sahf popf inc (bad) (bad) cmp test xor sub cld add cmp dec sbb mov cwtl sub mov xchg lahf inc (bad) (bad) xlat cltd loopne xchg or sub lahf jl inc pop mov out mov mov out mov sub push mov dec insl xchg mov lahf arpl (bad) pop (bad) lcall (bad) jns sub or inc pop xor repz pop pop inc mov lods and insb mov icebp pushf and lcall mov sub sub jp das cmpl fwait hlt push aad dec lds aas jmp (bad) lcall pop aam and repz sbbl aam mov push push jecxz adc aad adc add mov dec push cs mov jl les ja jmp fwait xor mov (bad) sarb or jnp mov mov xchg repz lcall mov icebp pushf addr16 (bad) pop shlb in push mov add jge and xlat jp out mov cwtl sub insb mov sahf popf inc (bad) mov negb call sub xor pop adc mov dec cmp cmp das pop fdivrs loope push cmp insb jl sub pop negl push rol pop pop mov sub jns das jge repnz jns loopne cwtd and stos xor ljmp pushf popf inc and xchg mov call das add cmp and mov in inc shrl call imul push dec outsl (bad) xchg imul cmpsl fist sub (bad) cld add and sub pop push push mov lods sub mov fwait and pushf lea cwtl mov imul adc fnstcw loop out sub outsl mov xchg pushf fs mov aam sbb inc xchg sahf push cmpsl ficom cmpsl pop addr16 sub pop adc hlt sub pop pop inc push aad inc leave add in ljmp lcall cwtl fist mov sub add jl inc pop mov out push roll and outsb mov fwait and popf gs mov xlat cwtl loopne jbe xor sub fisubl out repnz add mov jno repnz ret dec lcall fsubp out leave repnz lahf sahf in (bad) std inc insb (bad) mov insb xchg icebp pushf push cwtl (bad) divl ljmp loopne add mov out and stos aas call mov hlt sahf imul ficom jg sub push ds add jns repnz lods and jmp mov xchg lahf inc and rclb xlat and loopne or (bad) push push pushf ret pop xor sub sub or mov mov xchg repz jmp xor ljmp icebp lahf push sahf ret xchg mov or (bad) jl sub or ds jle repnz pop pop inc mov movsb pop imul insl arpl and xchg (bad) and ljmp cmp xchg mov out push mov or mov fstps inc mov cltd inc shrl rorb pop cmp gs mov sahf jecxz je or shrl decb ds adc hlt dec sbb mov lcall fwait mov imul mov loopne mov in imul das pushf jl and jl loopne dec cmp cmp inc sbb push aad sub mov daa sahf popf inc shrl mov jl sub (bad) arpl and jp loop gs and ljmp pushf popf inc and hlt jbe xor sub sub or pop xor and dec sbb push out inc leave add call imul cmp insb jl sub pushf and xacquire or shrl call and cmc dec pop mov imul xchg addr16 xor mov hlt sahf ret pop xor sub mov das pop pop adc (bad) pop pop inc mov mov dec insl xchg mov lahf inc daa (bad) pop aad loop fdivrs std lahf and stc je xor sub sub daa and xlat jge out mov cwtl inc iret add jmp mov (bad) popf addr16 mov cwtl loopne je or lds mov xor arpl and pop push push mov cwtl mov mov data16 lock fs lea sbb rol jns sub (bad) xor mov jle sub daa and xlat pop pop inc push aad inc iret or rorb xor stos add mov out push mov das loopne daa and cmc inc and pop pop inc mov lods sub mov lcall lcall (bad) jl sub or pushf jl sub jbe hlt mov cmp jl inc pop mov fwait out mov cwtl sub (bad) xchg mov repnz and pushf ret decb rol jl sub or and repnz sbb mov lods inc jbe xor mov std pushf fs mov shlb call sub sub jge xor cmc sub js loope push lods and (bad) (bad) xchg imul out into dec jae push cmpsl js sub push jge,pt xor sub pop pop inc push aad sub insb mov icebp pushf addr16 (bad) ds fwait loopne mov push rol pop addr16 xor pop ss and dec pop mov lcall movsl pop imul xchg (bad) inc xchg sahf imul fist sarl or and (bad) jbe hlt mov cltd and cmp sub jp loop addr16 inc lods outsl cmp push (bad) inc xchg lahf shrl mov xor sub mov add add mov cwtd mov mov pushf popf inc int3 mov shlb or sub push aas jnp cs jl dec pop mov imul jbe test icebp addl mov std pushf arpl mov aad loope mov or sub sub jl and hlt and pop pop inc mov lods and stos xor (bad) lea xchg lahf dec daa mov jecxz mov xor sub sub or arpl and aad xchg repz aad mov xchg mov pushf popf inc int3 mov aam jecxz mov xor and cltd fist sub mov add inc pop xor mov in sub mov lcall hlt sahf ret stc je or lds das sbb push jg xor fdivs repz lahf inc iret add addr16 mov repnz shrw mov adc pop mov add ficom shrb sti add jl dec pop mov gs and insb lea xchg lahf inc shrl je out push mov xor pop adc inc pop mov out mov cltd mov mov pop cmp fs mov hlt sahf ret xchg mov in push cmpsl pop pop popl (bad) pop add cmc dec sbb mov lahf and jl and jns loope push mov jmp jno jb andl lea loop mov (bad) (bad) js sub sub jle and and jp loopne out daa insb mov dec insb mov lock and jbe in push cmpsl pop pop (bad) std or arpl and mov aad and insl mov icebp andl repz in and insl nop mov lahf addr16 (bad) divl rol jle sub add jl and pop cmpsb inc push out and movsl pop imul jbe pop sbbl mov psrlq jg sub or pop add dec pop mov pop inc push out and (bad) fwait and pop aam sbb push xchg hlt sahf push lcall sarb std das pop inc add cmc das pop fdivs hlt mov cltd sub mov std lahf arpl loopne leave and rol js das sbb and xlat jae out mov lahf sub mov lock fs ret xchg mov or sub insl fnsave mov xor sub sub or jl and repnz jbe hlt mov mov rorb es popf dec daa mov nop ret xchg mov jg sub or pop adc mov fs inc iret add jmp insl mov nop popf dec int3 mov aam loop mov js das std das pop jns das (bad) and sub jg add or pop add aam lcall stos xor mov jb andl lahf push fwait loope je push rol pop pop mov xor jg xor (bad) js loop imul push imul cmpsl fist (bad) pop pop mov xor jl das jle repnz jge out mov lcall mov sub aad daa insb mov dec mov sahf popf inc (bad) (bad) cmp je push rol pop pop mov xor pop adc xlat jl out mov cltd sub mov and pushf addr16 mov aad loope mov or (bad) jle sub xor jl and aad xchg repz cwtl and movsb xor ljmp lcall aam sbb xchg sub add mov or sub or mov mov out mov mov dec insb jno jb xchg sub (bad) lcall sub sti add and das pop fistpl push mov (bad) cmp call xchg sub cmp mov jl sub insl fnsave mov pop pop mov xor jp das jge repnz jl loopne imul insl arpl ret (bad) lcall (bad) jle sub aaa xor mov xchg repz outsb push dec outsl fwait mov arpl and hlt jbe push rol pop pop popl (bad) jle and (bad) jg add sti add cmp dec pop mov out mov lods and stos xor jmp mov lcall pop negb out push mov or inc pop xor fdivs hlt mov lcall insb mov lahf lahf inc (bad) lea sahf ret hlt jbe psrlq jle sub xor jg xor jns loope addr16 mov sub out mov lahf inc shrl imul insl data16 lock and xchg mov (bad) (bad) js das sbb xor fdivs out mov cltd inc iret add out mov std pushf arpl lea cltd loopne (bad) and rol pop pop (bad) and sbb and aam out mov cltd inc leave add mov icebp pushf addr16 aam add in hlt sahf push sahf jecxz mov call sub add cmc dec pop mov xchg repz cwtl and movsl pop imul jbe push mov lahf arpl mov shlb xor sub das std das add jg hlt and jg repz aad and dec (bad) andl stos daa aam jecxz je call (bad) std insl fnsave xchg xor sub sub add sub jbe hlt push in mov mov sahf imul loop mov js das sbb sbb cmp sub pop push push push out and call in repnz addr16 mov lcall lds sub or jg xor mov test add das add cs jl inc sbb mov cltd inc leave add mov xor fs loope (bad) and push mov xor pop adc hlt dec pop mov push push mov cwtl inc shrl imul xchg bound lea fwait loopne mov or (bad) pop pop lea add jl dec pop mov xchg repnz lods and mov out push rorl insb mov dec xchg mov popf shrl (bad) and push cmpsl jl sub das pop arpl and fnstenv out push roll inc shrl dec insb (bad) test xchg lahf inc (bad) mov sub xor sub mov add mov push push dec outsl (bad) xchg data16 std lahf arpl sbb push mov pop shlb or (bad) pop pop mov or mov aam push push mov stos xor lea and pop cmc pushf ret decl das sti add jl and jns repz cwtl inc leave add in ljmp lahf lahf inc daa (bad) pop (bad) fwait loope test in push cmpsl pop pop mov insl fnsave mov in push cmpsl pop pop (bad) ljmp pop pop adc aam out push in sub vfrczss pushf popf inc and hlt jbe or rcrb std das pop pop ds jl das pop fstpt repz lcall insb mov pushf popf inc and cmc test or mov add jl and fstpt add sti add jnp das jge repnz pop mov lcall stos cmp jmp mov lahf lahf inc ret aam loop mov xor sub sub sub pop ds jl dec sbb mov lods sub mov sub popf lea popf loope mov jle sub or daa and hlt sub pop pop inc mov mov out mov sub in inc iret add out vfrczss repnz addr16 mov aam jecxz mov or lea or aaa xor fnstcw loop arpl jmp mov xchg lahf inc daa (bad) pop (bad) lcall sarb sti add inc pop xor repnz jns repnz lahf inc iret or rorb xchg xor mov aam sbb xchg sub lahf gs cmc pushf rcll js sub push ds adc xlat pop pop inc mov mov jmp xchg mov pushf gs (bad) sub xor sub sub or inc add mov out push in and in fwait mov imul (bad) pop aam jecxz mov or (bad) std insl fnsave mov jg sub mov xlat jp loop gs and ljmp lcall (bad) fwait loopne mov pop pop mov add mov push inc leave add mov xchg lahf inc lea ret stc je in push cmpsl jle sub add and jg add push sub jp das jle cmc das pop fdivrs loope imul xchg imul fwait loope mov xor sub cld add jl inc pop mov cmpsb dec mov fwait and dec fwait mov imul mov adc imul std or jge and repnz pop mov push push push out and mov sub repz jmp ds addr16 sub aam loop mov jg sub sub jnp mov mov out mov fwait sub mov lahf inc and xchg mov out push mov add cmp jl loopne arpl jmp jno jae (bad) es popf inc int3 mov aam sbb test cld popf and xchg (bad) and sub xor aad fwait loopne push mov rorb sub and lcall (bad) jl sub or jle and hlt inc pop mov xchg repnz lcall insb mov icebp pushf push lcall sub sub insl fnsave (bad) and push mov or pop add repnz pop mov cmpsb inc push aad mov mov repnz data16 xchg mov out push mov add inc pop xor pop push push mov mov rorb and pushf push sahf loop mov call mov and repz jg add add ds jl and jns loopne push mov addr16 lea lcall aam jecxz mov in push cmpsl pop pop (bad) std das add xor (bad) hlt and jge out mov lcall (bad) xchg push inc and cltd mov or sarl std or jge xor cmc and jp loope push mov int dec das pop (bad) out mov cltd sub nop mov lahf lea cltd fist (bad) pop pop mov add jnp jg,pn cmc inc and jns loopne push and jmp mov popf and cltd mov or (bad) jl sub or (bad) and inc pop mov out mov mov out insl mov lcall aas call andl mov in xchg out push mov or jp and (bad) pop pop inc mov cltd and jmp mov pushf popf inc (bad) (bad) sub or (bad) imul add cmp adc mov fwait loope out daa insb mov iret mov xor and mov in push cmpsl js dec mov sahf ret sbb pop mov or and sub jp loopne in and movsb xor ljmp pushf popf inc ret (bad) fwait loope je xor sub sbb sbb cmp sub jnp loopne cbtw inc iret add jmp xchg mov popf inc lea rcll out std das pop pop adc jns pop pop mov or jl and pop pop inc push jmp xor lea std pushf arpl (bad) ds loop mov jg sub xor jle and repnz jl loopne addr16 and movsb xor ljmp icebp pushf addr16 loopne (bad) and rol pop pop mov das add xor cmp pop push push mov cltd inc leave add and jnp loopne push and jmp mov popf inc lea fcomip je xor sub sub or lock jl out mov cltd inc jbe pop imul push imul cltd fist rcrb push sub pop adc aam cmpsb dec mov mov dec insb mov lock and dec mov repnz data16 (bad) cmp mov jl sub add and fistpl inc mov lcall lea (bad) popf data16 mov aam jecxz mov adc imul sbb push jge xor repnz pop mov fwait repz lods and call pop xor fs (bad) xlat cltd loopne je in push cmpsl js in bound xchg mov imul push out inc jbe ds lea lahf lahf inc daa (bad) pop aam loop mov or sarb sti add jl and jp out mov cwtl inc iret add jmp (bad) xchg push arpl loopne test xor sub mov xor (bad) jae out mov lahf sub insb mov xchg lahf inc shrl fdivrs lcall cltd loopne test xor sub (bad) and sbb xor (bad) pop pop inc push out mov insb andl mov loopne test xor sub sub setg sbb mov lcall fwait mov imul fwait loopne leave and push cmpsl imul add cmp (bad) xor (bad) and ljmp sbb cmp sub pop cmpsb inc mov mov rorb (bad) es popf gs mov sahf jecxz (bad) and sub add jnp jle,pn cmc inc sbb mov lcall nop mov lahf inc (bad) mov xlat cltd loopne je adc jg sub (bad) pop add (bad) jge out mov imul mov pop out js test cmc sub pop push push mov lcall xchg mov lahf fs mov aad loope (bad) and ljmp sbb cmp jbe hlt mov fwait daa insb mov outsl mov std lahf and cltd mov or sub or inc add jp loop out and stos xor in fwait mov imul pop imul insb (bad) inc xchg cmc pushf rcll pop pop (bad) cld or jge repnz pop mov pop inc mov lcall fwait mov jl sub lahf data16 xchg mov in imul and cmc dec sbb mov cltd daa insb mov jmp mov lock fs shlb xor fs (bad) lcall (bad) js das sti add jg xor (bad) pop push push mov cltd and in lea hlt sahf imul rcrl jg sub sub jnp cs jl and pop pop inc push in inc iret or call bound (bad) (bad) ds fwait loopne leave and rol js sub xor jge (bad) xor mov or lea or add cmc and jbe hlt push roll dec lds push dec insb mov (bad) popf data16 lea lcall cmpsl jg sub sub inc pop xor mov push xor ljmp (bad) popf addr16 mov sahf loop leave and push cmpsl pop pop mov sub pop add aad fwait loopne dec cmp cmp and jns repz cltd and in mov pushf popf inc int3 mov xlat cwtl loopne mov or sub or add fstpt loopne push lods and stos aas call imul sahf jecxz xchg or sub xor pop movq das pop fistpl inc mov lods sub mov mov cltd inc jbe xor (bad) fwait mov push push cwtl mov rol js das cld or sahf jl and pop pop inc push jmp pop imul jne push mov sahf and cmc test out push mov sub inc add cmc and pop pop inc push in sub jno jae (bad) and pushf push sahf jecxz fdivrs hlt sahf imul mov push mov add cmp jns repnz lods and movsl cmp call andl lahf inc and xchg (bad) and sarl call and xlat jns repnz cwtl inc leave add mov pop cmp arpl lods add cwtl loopne mov call mov add je or (bad) std das add xor xlat js loop jmp xor in mov lahf lahf inc daa mov pushf loop jbe or lds mov xor jg xor jp loope push aas call (bad) inc xchg pushf arpl lea lahf jecxz mov or (bad) js sub add and dec sbb mov cmp cmp jns repz mov in ljmp icebp lahf push lcall (bad) jle sub adc jns repz rorl mov mov lahf gs lea cwtl loopne je adc pop addr16 add (bad) testl push jmp cmp xchg imul xor mov imul lods daa aad loop xchg push rol jns sub xor jl and hlt and jge out mov lcall mov repnz and xchg mov (bad) shrb push sub pop movd push push mov cltd inc iret add jmp nop mov sahf and xchg fdivrs nop popf dec and hlt jbe push rol pop pop lea or cmc and pop push push mov lcall jno jb pop cmp pop xlat cwtl loopne test call sub or jge repz jg repz lods mov xchg mov cld popf fs (bad) ds loope mov jle sub xor jge (bad) xor rol jns sub das cmpl xchg repz lea in jmp mov test lcall lcall cmpsb pop pop mov add cmp das pop fistpl push roll inc shrl call mov lahf lahf inc (bad) mov negl call sub add jl and hlt dec pop mov dec pop mov mov rep or cmp sahf mov jecxz push cmpsb ret mov cmpsl fcomip je or sub xor arpl and xlat jnp loopne push xor ljmp lock fs lahf jecxz mov adc jns sub or (bad) hlt das pop fistpl inc push in inc shrl out lea sahf popf inc ret aad loop je or (bad) jl sub add jle and es dec mov ljmp jae imul sbb cmp dec sbb mov lcall mov lcall xlat cltd fist pop addr16 or jnp mov aam xchg repnz cltd sub mov lcall cmc pushf rcll jg sub xor pop setl sbb mov lcall repz jbe hlt mov lods sub mov lahf fs mov nop les pop pop (bad) decb ds add repz jnp loope imul jb xchg xor lea nop ret xchg leave and imul das lahf jl dec sbb mov mov jmp mov icebp addl mov sahf data16 mov sub call sub push jl,pt and and jnp loope imul xchg addr16 xor lods add fwait loope mov push rol pop mov or inc add (bad) jge out mov lods inc jbe ds insl mov (bad) popf and cwtl fist addr16 popf gs mov cwtl mov push cmpsl pop pop mov or jg xor cmc inc and jns loopne push lods inc jbe xor mov sub popf fs ficom sub sub adc repnz pop fdivrs loop out inc shrl addr16 insl mov hlt sahf imul (bad) stc je or sub sub inc pop xor ljmp jns,pt jl,pn repz pop fstpt repz cltd daa insb mov call push mov lahf and xchg mov adc imul cld or cmpl gs and stos xor mov push arpl and hlt jbe xor sub popl or cmp sub jp loope push test fnstcw loopne in inc leave add mov xor addr16 loop mov push rol jl sub or pop xor and inc sbb mov lcall outsl mov lcall cmp mov push rol pop pop lea and fstpt push jmp cmp dec arpl std and mov std pushf arpl loope jbe or (bad) jle sub or jle and aad fwait hlt mov add mov lahf data16 xchg mov pop pop mov sub pop jno,pt aam out mov fwait daa insb lea rorb push mov and popf loop mov xor gs xlat cwtl loopne mov push rol jle sub and repnz and jg repnz mov imul xchg andl lods daa aam loop mov jns sub or sahf jl and pop cmpsb inc mov lcall mov lock and xchg (bad) and rcrb call cs mov sub push aas jle and mov jmp cmp insb imul sahf jecxz je call sub setle sbb mov movsb cmp ja (bad) es popf inc daa mov nop les sub (bad) cld or jg cmc and jp loop imul and pop pop inc mov mov rorb push mov popf shrl mov jle sub and hlt dec sbb push jmp xor mov and sahf retw xlat cwtl fist pop pop mov add cmp dec pop mov cbtw and movsl cmp jmp mov addl mov es popf dec daa mov cwtl mov rol pop pop mov or jg cmc and pop pop inc mov cwtl inc iret add jmp nop mov sahf and cltd loopne mov (bad) (bad) jl sub sub pop add inc pop mov fwait hlt mov cltd inc iret or rorb andl popf inc and ret xchg mov xor inc int3 mov negb out push mov or aaa xor sub pop cmpsb inc mov cwtl dec lds pop imul xchg (bad) inc xchg lahf arpl stos pop aad loop mov psrlq pop pop mov push aas inc pop xor cmc dec pop mov push lods inc lods outsl cmp xchg bound and xchg leave and rol jg sub add inc pop xor rol jns sub push arpl and inc pop mov fwait loope rorl ljmp std lahf arpl lea (bad) je push rol jns sub sub jl and repz pop pop inc push out inc jbe xor mov mov pop sub psrlq jl sub add cmp and jl out mov cwtl and cmp and jl loopne gs dec lds aas jmp mov sahf popf inc daa (bad) pop negb out push mov das add jl lock and pop pop inc mov or dec outsb mov push mov popf and aam jecxz (bad) and rol jg sub xor jns jge,pn repnz pop pop inc mov lods daa insb mov insb lea icebp addl mov lcall pop xlat cltd loopne mov (bad) (bad) jl sub add cmp dec pop mov pop inc mov lods and mov xchg lahf dec and xchg mov jl sub add ds jl repz jl out mov lahf and movsl ds (bad) cltd and pop (bad) lcall addr16 popf dec and loopne mov or sub or cmpl out and movsl cmp call push mov lahf arpl stos daa xlat cwtl fist pop mov das loopne daa and (bad) jp loope fs inc shrl rorb and pushf gs ret pop xor sub mov add add rol jg sub or and fdivrs loop aad inc iret or rorb xchg lahf arpl lods add nop les cmpsb pop pop mov xor jl and mov in sub mov sahf and xchg mov out push mov or jge repz pop cmpsb dec mov lcall repnz jns repnz lcall nop mov sahf fs lea mov pop pop mov or jl das sahf jl dec pop mov push mov dec insb mov std lahf arpl stos daa aad loop (bad) and mov or jl sub jns repz mov dec insl jno jb andl and stos ds arpl and hlt jbe push rol jl sub add repnz pop fistpl push mov lods inc iret add imul xchg push arpl (bad) je call sub (bad) pop adc sub pop pop inc mov lods and stos xor jmp mov pushf popf inc (bad) lea mov xor arpl lea ret xchg mov push rol jg sub or pop add mov push mov rorb (bad) es lahf push lahf loop mov or (bad) push sub pop add xlat jp out mov cltd mov mov (bad) popf lea cmpsl fcomip test push rol pop pop mov add ficom mov das (bad) jns cs jl inc sbb mov cwtl mov mov lcall lahf loop leave and sarb cld or jl repz sbb mov cltd inc lods outsl aas jmp mov std pushf arpl (bad) cmp mov js das add cmp xor repnz pop mov gs and jl dec sbb push jmp cmp xchg mov cld popf gs mov lcall sub sub xor jns cs jl sub pop pop inc mov lcall outsl mov mov sahf imul jecxz je out push mov or pop adc fdivrs loopne out inc shrl in jmp mov addl mov and lahf lea nop ret xchg mov psrlq pop pop popl (bad) arpl and repnz pop mov xchg repnz cwtl inc iret add jmp insb mov nop popf dec int3 mov hlt sahf ret divl rol jns sub jge repz pop pop inc push roll sub mov lahf lahf inc and xchg mov pop lock gs mov xlat cwtl fist sarb std or jp and aam push push mov lcall (bad) pop cmp data16 (bad) cmp leave and imul add cmc dec pop mov rorl jbe xor jmp mov test hlt sahf push cwtl loopne (bad) and rol jg sub or ficom fldt decb aas jnp das (bad) and das pop fstpt mov cwtl and insb (bad) xchg imul popf loop xchg adc pop pop (bad) std das pop jp das cmpl out push rorl test mov lahf and nop (bad) cmc test (bad) (bad) pop pop mov (bad) jge and (bad) pop pop inc push out and cmp and jl loopne jmp xor jmp mov std lahf and stc je out push mov or and sub jl out mov cltd and mov and popf and xchg leave and popl or add repnz pop mov out mov lods inc shrl out jno jae (bad) es addl mov lahf inc (bad) (bad) shlb or sub or jge repnz pop mov fwait loope push mov dec insl jno jae xchg xor mov cmc pushf ret decb rol jle sub and aam out mov cltd sub (bad) lcall cmp lcall addr16 lahf push cmpsb fist (bad) jl sub sub jge xor inc pop mov pop inc mov cltd inc iret add imul insb jl sub pushf gs rcll jg sub xor inc pop xor cmp pop push push mov lcall outsl mov mov pop aam jecxz mov or (bad) pop pop mov or aaa xor imul jns,pt das jge repz jp out mov cwtl inc iret or call imul stos and mov or sarb sti add cmp pop pop inc push aad sub mov pushf popf inc and mov pop pop (bad) cld or jge repnz sbb mov lcall (bad) dec sbb mov lods inc shrl in ljmp (bad) popf lea mov jmp pop pop lea add (bad) imull pop fstpt loopne push lods inc jbe push dec insb mov icebp pushf lea lcall sub mov (bad) jl and mov xchg repz out sub mov icebp addl mov popf fs mov (bad) fwait loope mov xor sub call adc repnz jge out mov lods sub nop mov lahf arpl mov negl push rol pop addr16 or inc pop xor and and jl loopne addr16 sub insb mov lcall shlb xor inc int3 mov (bad) lcall (bad) jle sub and cmc sub jp loopne jmp xor ljmp (bad) popf and popf loop mov out push mov add cmp pop cmpsb dec mov cltd and dec lea std pushf and hlt jbe or sarb or arpl and rol jle sub add mov fs sub mov icebp lahf push cwtl loopne mov out push mov das add and cmc sub jp loopne imul insb andl mov aad loop test or lds sub or inc pop xor fdivrs out mov cltd and cmp jge out mov mov out insb mov cld popf and xchg (bad) and das sbb push jle and mov xchg repnz lahf and jno jb inc xchg lahf arpl (bad) ds loope mov in imul and fistpl inc mov lcall insb mov icebp addl mov es and aad loop mov or sarb sbb sbb cmp dec sbb mov lcall insl mov pushf popf inc ret xlat cltd fist sub sub or jg hlt das pop fdivrs out mov mov call bound and xchg mov pop hlt sahf imul mov rol jg sub or pop adc and pop push push mov lods inc jbe push dec insl (bad) (bad) es popf inc lea popf loope mov psrlq pop mov jnp jle,pn repnz pop fistpl push mov lea rorb and popf and xchg (bad) and ljmp cmp ds mov sub jge and repz pop pop inc push jmp aas jmp mov nop popf dec and xchg mov or (bad) cld or pushf jl and pop push push mov lods inc shrl jmp (bad) xchg xor (bad) pop xlat cltd loopne mov xor sub das std das pop pop adc pop push push mov cwtl and cmp pop push push mov mov dec insl insl mov repnz and xchg mov or lds popl (bad) jp das mov (bad) jns loope roll inc iret add addr16 insl mov cld popf fs aad loop jbe xor sub sbb sbb jl and jl loopne out and movsl aas jmp mov icebp addl mov xchg xor mov cmpsb fist js das std das add xor cmp jp loopne aad inc shrl jmp insb mov lcall aad loope mov or lds sub sub arpl and xlat jp loopne jmp xor mov xor and pushf loop je xor fs jecxz mov call sub (bad) jge xor (bad) jnp loope addr16 (bad) in pushf popf inc int3 mov sti nop ret xchg mov push rol jns sub and and jnp loope arpl rorb es popf inc and xchg mov xor sub das sbb push jg xor jmp pop pop (bad) ljmp pop jns das andb inc and pop cmpsb inc push jmp ds (bad) lcall pop xlat cltd loopne test or (bad) jg sub or aaa xor fdivrs loope cwtd sub mov test xchg lahf dec and xchg mov pop pop popl or adc fistpl push mov cmp cmp inc sbb push aad and outsl mov icebp pushf addr16 mov shlb in imul xor mov fwait out mov mov jmp fwait mov push arpl (bad) cmp xchg xor sub (bad) and sbb and repz js loope cbtw inc shrl imul xchg imul push dec insb (bad) pop sbbb cwtl mov push cmpsb pop pop lea and repnz jp loopne aad and dec outsl mov es lahf arpl mov aad loope mov pop pop mov add cmc inc and jge out mov mov jmp jno jae (bad) and sahf imul les test icebp pushf and cwtl rclb pop pop (bad) sbb pop inc pop xor and pop pop inc mov lcall mov nop popf dec and divl ljmp add mov fdivrs loopne cwtd sub mov push mov sahf fs mov cmc pushf ret sbb pop lea or xchg or sarl add jl inc and jae out mov fwait and stos pop imul jbe xchg sub inc negb psrlq js sub sub jle and repnz jnp loopne cbtw inc lods outsb xor jmp mov (bad) popf retw negl (bad) (bad) jns sub (bad) jl das lahf jl and pop pop inc mov cmp cmp jl loopne push mov out mov pushf popf inc (bad) lea nop (bad) xacquire (bad) (bad) jg sub (bad) pop add cmc and pop pop inc mov lods and stos aas jmp insl mov hlt sahf imul fcomip je or (bad) jg sub (bad) jl and cmc sub pop push push mov cwtl and fwait mov imul pop imul insl jl sub pushf fs mov ficom (bad) js sub xor jge xor fistpl mov mov in ljmp hlt sahf imul jecxz leave and ljmp cmp ds pop inc push jmp ds addr16 sub pop aam jecxz fdivrs cld popf and xchg mov or das add cmp and cmc dec pop mov push mov out lea (bad) popf and cmpsl ficom mov or pop adc hlt dec pop mov gs mov mov mov shlb in push mov or jge (bad) xor push cmpsb pop pop lea or ds (bad) jp loopne aad inc leave add mov xor and cwtl loopne je push rol pop pop lea add jl sub jns loope push lods daa insb mov iret mov std pushf and je adc jl sub add jl das pop fdivrs repz cmp and inc sbb mov mov dec insb mov nop popf dec and xchg mov call sub jg hlt dec pop mov arpl jmp insl mov xchg lahf dec and cmc test xor sub sub (bad) pop ss cmp js loop out sub mov inc lds outsl xor mov dec mov xchg lahf dec and xchg mov pop pop mov or jp and hlt dec pop mov out mov cwtl inc shrl rorb pop xor imul mov rol imul std or jp and fistpl push push rorl ljmp sahf popf inc and jecxz fdivrs nop popf dec ret xlat cltd loopne test call (bad) std or jge and mov pop inc mov fwait and stos pop imul xchg bound and cltd mov out push mov or inc add aad fwait hlt push aad inc iret add jmp mov repnz shrw je push rol pop pop (bad) sbb push jge (bad) xor rol jns sub das pop jns mov (bad) jg repz in and ljmp std pushf arpl mov sti nop les lds sti add jl and jp loop aad and call pop cmp aas xlat cltd loopne mov in push cmpsl pop pop (bad) std das pop pop add cmc and jp loop dec cmp cmp jns loope gs inc leave add call data16 icebp pushf addr16 (bad) pop aam jecxz je in push mov sub pop add and jns loopne push lods and stos ds push addr16 sti nop ret xchg mov pop pop mov or jge xor pop pop inc push out and stos xor or and pop push push push jmp ds imul lahf jecxz mov (bad) sarb add jnp jl,pn repz pop mov xchg repz in and movsb ds imul pushf loop mov out push mov (bad) jge and mov addr16 and mov std lahf arpl xchg std cwtl push dec outsl mov pushf popf inc (bad) (bad) cmp (bad) and push cmpsl jns sub jge repnz pop fdivrs loop gs mov mov hlt sahf push sahf ret hlt jbe psrlq jns sub push ds movq dec sbb mov lea in jmp mov es sahf imul loop je psrlq js dec mov cmpsl fcomip jbe call das push sub arpl and hlt das pop fistpl mov cltd and (bad) xchg imul sahf ret cmc test in push cmpsl jg sub (bad) arpl and repnz jnp loope imul jae test std pushf arpl mov hlt sahf ret xchg mov xor sub cld or lahf jl das jg and fsubrs push sub jnp mov mov addr16 mov lahf lahf inc and xchg mov or mov or aaa xor xlat jge out mov or dec lea nop popf dec and xchg mov jl sub add add repnz pop fistpl inc push in inc leave add sub pop push push push aad dec lds xor jmp mov sahf and xchg (bad) and sub (bad) and dec sbb mov cwtl and movsb aas call arpl and mov or sub add jle and mov out mov lahf and dec fwait mov mov (bad) popf and jmp xchg xor (bad) pop aad loop mov or lds mov or aas cs jl das pop fistpl push mov lcall (bad) test std pushf fs mov lcall cmpsl jl sub add cmp dec sbb push in and movsb xor (bad) mov cld popf gs mov lcall sub dec mov cwtl loopne mov call sub or jg hlt das pop fdivs hlt push roll inc leave add in jmp mov lahf and cmpsl fcomip jbe or sub or cmpl fwait repz lods inc lods outsb xor mov jae in lock fs mov xlat cltd loopne je adc pop pop mov xor pop setg jg cmp mov (bad) jl and mov out push aad sub mov lock and xchg mov jns sub add and inc and jns repnz lcall fwait mov push imul les (bad) jns sub or arpl and fstps mov lods and stos xor or pop fdivrs out mov lcall insb mov hlt sahf push cmpsb fistp cmpsb pop pop popl (bad) jnp das jg hlt inc pop mov xchg repz aad and lea lcall fwait loopne (bad) and sub cmpl lcall add mov xchg sub std cwtl cmp call pop adcl xchg leave and imul and jae out push roll dec lds xor lea jb fwait and sahf imul in je xor sub mov sub jns mov fdivrs loopne push lods daa insb mov dec mov sahf popf inc and xchg mov or (bad) js dec mov cmpsb fist sarb or jg xor repnz pop mov out mov cwtl mov mov lahf arpl loope jbe push rol pop pop mov add cmp sub jp loope cbtw inc lods outsl ds mov lcall pushf ret sbb ljmp cmp das cmpl pop pop mov xor (bad) pop pop inc mov lcall jno jb push mov lahf arpl mov xlat cltd loopne je or (bad) js das push sub pop setle push xlat jae out push aad sub mov pushf push mov or lds mov fs hlt and jl loopne out sub dec sub jns loopne cbtw and movsl pop imul ja test std pushf fs mov cmc pushf rcll jl sub sub arpl and mov cwtd daa insb mov iret (bad) mov icebp pushf addr16 loope mov or (bad) pop pop mov or jp das cmpl pop inc push out dec lds cmp jmp mov lahf arpl xchg std lahf xor jmp mov lahf inc and loop je psrlq imul ljmp pop jns jl,pn repz pop push push mov cwtl inc jbe push dec insl insb mov std pushf arpl lods add cwtl (bad) cmc test or sub adc repz jns loopne cwtd and mov icebp pushf addr16 lea nop ret xchg leave and imul adc push lds out rorb ret push jnp mov pop scas (bad) divb sub std ljmp shrb mov loop xchg sub daa lret inc cmp std pop fildll xorl dec push jb dec adc push sbb xchg mov ljmp cmp push dec push add std add movsb sbb fnstcw sub jge lret (bad) xchg inc rolb inc add jge mov mov mov mov stc xor pop xchg (bad) shr cwtl push dec xchg cmp sub push pop addr16 mov repnz data16 (bad) pop hlt sahf ret divl rol pop pop lea lahf jl inc pop mov out mov stos xor mov push push inc lea les jle sub sub arpl and mov xchg repnz fwait sub mov es popf shrw xchg mov pushf addr16 (bad) cmp mov or mov add cmp sub jge out mov mov rorb in hlt sahf push cmpsl ficom sub sub add (bad) jnp loopne fs and stos xor ljmp icebp lahf addr16 lea cwtl loopne mov out push mov insl fnsave jbe or sub and repnz pop mov cmpsb inc push in inc shrl in ljmp lcall (bad) lcall mov and sbb adc js loop in inc leave add mov (bad) popf shrw mov push rol jg sub push aas jle and repnz jg cmp call xor repz and pop pop inc mov cltd sub xchg mov lahf arpl lea nop ret xchg mov jns sub add ds mov xlat js loope push lods and stos aas jmp fwait mov andl lods daa aam jecxz (bad) and imul xor mov addr16 dec and jns loope in and movsb xor jmp mov xchg popf fs mov shlb or sub sub jle and and jl out mov cwtl inc leave add mov lahf arpl mov aad loop jbe xor sub (bad) call das sahf jl dec sbb mov cltd inc shrl call bound and jmp mov es popf fs (bad) cmp jbe or sub (bad) pop adc fnstcw loope push lods sub mov lahf gs lea mov (bad) (bad) jns sub or ds jl inc pop mov pop inc mov cwtl inc shrl dec outsl lea pushf popf inc (bad) mov sti nop les sub dec mov nop les mov mov (bad) and sub jns loopne push lods inc iret or in jmp mov in hlt sahf imul loopne (bad) and jmp pop pop mov cmpl push push mov cwtl sub insl mov pushf popf inc (bad) mov shlb xor sub ljmp pop pop adc hlt das jg and loopne sbb pop jl and hlt sub pop pop inc mov mov call mov std pushf and hlt jbe xor sub sub or jl and hlt das pop fstpt loope out inc lods outsb xor ljmp std pushf arpl (bad) pop (bad) lcall cmpsl jns sub push aas jl das jle cmc inc pop mov pop inc push aad inc iret add int hlt mov mov negb pop dec push cmpsb addr16 loope mov call insl mov nop popf dec and hlt jbe out push mov xor jl and fdivrs loop jmp cmp jmp mov std pushf fs mov (bad) fwait loope (bad) and sub and and jp loopne addr16 dec lds pop addr16 mov xchg lahf inc daa (bad) pop shlb xor sub std insl jp repz enter mov scas mov cmp das pop fstpt mov lcall (bad) xchg arpl (bad) (bad) cmp mov call sub add inc pop xor repnz pop mov out push aad mov mov lcall sub psrlq jg sub or fs hlt and jnp loope in sub mov pop push adc lahf sahf jnp pop dec (bad) lret inc testl clc xor mov xchg repz lcall outsl mov sbbb popf loop je or sub or jle cmc dec pop mov rorl mov jb inc xchg pushf shrl fcomip xchg call sub das add and repnz and jns loopne push pop addr16 mov icebp pushf and jecxz pop mov pop jne pop es (bad) mov aad loope mov jns sub or daa and repnz sbb push in inc lods outsl cmp jmp mov sahf push sahf jecxz (bad) and ljmp jge,pt and fdivrs loope in inc iret add out insl mov lahf lahf inc (bad) (bad) sub or sub sub pop add das jg and out pop cmp popf inc xchg pop out into adc sbb or adc push jmp push dec insb outsb mov es sahf push cmpsl ficom sub sub xor inc pop xor (bad) hlt and js loope push mov addr16 outsl mov in repnz and pushf ret push or lds lea or jl and mov push lods mov mov lcall cwtl loopne fcoms movsb push pop xor or aam shrb jp out mov lahf inc shrl addr16 (bad) xchg push data16 mov cmc pushf ret sbb fsubrl sbb push inc add fstps mov fwait inc jbe push dec insl outsb mov and pop sub out push mov (bad) jle and (bad) out mov mov out outsb mov and sahf imul and lea xchg sub pop mov cmp push bound ret aad loop mov out push mov add cmp jbe repz cwtl sub mov xor fs (bad) pop aad loop mov push rol imul std or jge and cmc das pop fstpt mov cltd inc leave add rorb (bad) es lahf push lcall sub out (bad) loope adc mov mov adc std inc or cwtl ds mov lock fs (bad) cmp mov or lds (bad) push sub inc add aam push push mov fwait sub mov andl lea loope jbe call das sti add cmp das pop fstpt loope aad and lea sahf popf inc and xchg leave and call adc adc or popf inc and mov in imul adc (bad) pop pop inc mov cltd inc shrl jmp insl mov lcall lcall sub lea add jl das pop fdivrs loope push inc lods outsb ds addr16 xor lods daa aad loope mov or sarl cld add and into mov push xchg mov cld popf and divl push mov add cmp jl out mov cltd and (bad) andl lahf and mov xor sub call and repnz pop mov out mov cwtl inc jbe ds push gs mov lcall fcmovbe aaa mov adc cmp mov ds lcall cltd loopne test or lea or pop add inc sbb mov add mov popf inc int3 mov hlt sahf ret xacquire out push mov (bad) jg xor mov pop inc push roll and mov sub aam jecxz je adc pop pop mov push aas jge and mov ss imul pop fstps push push jmp cmp jne inc xchg pushf addr16 lea mov (bad) (bad) pop pop mov (bad) jge and cmc sub jg repnz lcall insb mov xchg lahf inc and cltd mov or sub or inc add cmc inc pop mov cmpsb inc push out inc lods outsb aas call imul stc aad push cmpsl movsl cltd in test and fsubrl sti add and sub jnp loope imul xchg mov icebp lahf addr16 (bad) pop cmc pushf rcll fsubrs sbb pop jl sub js loope push mov jmp (bad) xchg mov cld popf fs loopne mov psrlq pop pop mov add hlt inc sbb mov fwait and stos xor clc adc int3 mov out repz sti sbb dec and jns repz cwtl inc lods outsl push dec insb jno jb andl mov cmc pushf ret and push mov or sahf jl and pop pop inc push in sub insb mov icebp lahf and lcall cmpsl jg sub sub jge xor fstpt push aad and jmp fwait and adcl cmc or out movl and hlt sub jbe hlt mov cwtl inc iret or rorb in cld popf and xchg leave and push cmpsl imul sbb xor cmp jnp loopne cwtd and stos ds xchg mov popf data16 (bad) cmp mov or (bad) jg sub or aaa xor inc sbb mov lcall mov in (bad) pop push aas icebp sbb cmp jno jb pop xor imul les (bad) jle sub and mov fs inc iret or rorb (bad) es lahf inc and xchg mov js sub sub inc pop xor (bad) hlt and pop pop inc mov cwtl dec lds cmp jmp mov popf inc daa (bad) pop negl or sarb insl pop xchg adc sbb cld or cli cmp stc mov cmpsb push pop (bad) inc bnd clc xor aam lcall stos xor mov and sahf push cwtl loopne je or sarl cld or jl repz jnp loope out sub mov (bad) es popf fs popf loope (bad) and rol jns sub add jl dec sbb mov movsb xor in mov cld popf and imul rclb fdivrs scas dec mov add lahf inc shrl mov pop pop (bad) std das pop pop ss and and pop push push mov lods and stos pop imul jne pop cmp gs (bad) cmp mov imul push sub jp and dec pop mov push push mov lcall jno jae (bad) es lahf inc (bad) lea cmpsb fist cmpsl pop pop mov sub jnp cs fnop repz pop pop mov cmp jmp mov lahf push cwtl rcrb jle sub add (bad) jnp loopne push mov rorb push mov sahf and cltd loopne je or das sti add (bad) imull pop fstpt loope in daa insb lea rorb and pop (bad) lcall (bad) mov sahf (bad) popa push lods rcrb or lds mov add and and jns loopne push lods mov mov lahf lahf inc int3 mov shlb in push cmpsl pop pop (bad) std das pop jge xor jbe hlt mov cwtl and movsb xor mov sub popf and nop ret xchg leave and jmp imul cld add and dec pop mov fwait loope push mov sahf stos adcl enter jno (bad) sub mov fwait and and lcall mov add ds hlt dec pop mov jmp pop imul jne push mov pop negl push rol pop addr16 or jle and aam xchg repz lcall xchg mov pushf addr16 lea test xor lret out or js xor xchg divl add das add and and pop pop inc push out sub (bad) test xchg lahf inc and loop mov psrlq jg sub jl lock jae out mov lods sub mov lahf lahf inc and xchg mov xor sub (bad) sbb pop jge and xlat jnp loope roll sub mov inc hlt lret test out push sti lret stos sub and popf and leave and das sti add jl das jl lock js loop push lods sub mov and lahf arpl loope je adc js das add cmp xor xlat jns repnz fwait inc jbe ds push inc (bad) lea mov pop pop lea or movsb adc mov lret test out push sti lret stos sub mov pushf gs mov sti nop ret xchg mov or (bad) jg sub jle repnz jge out mov movsb aas jmp insb mov cld popf and xchg (bad) and rol jl sub add jl sub pop pop inc mov lcall fwait mov bound and divl rol jle sub fstps lods scas cltd sti or (bad) cmp cmpl cbtw and movsb xor lea and sahf push fwait loope (bad) and push mov add repnz pop mov cbtw inc shrl call imul cltd fist mov add and and jae out mov cwtl inc jbe ds andl jmp sbb mov mov aas lds add or call mov lcall cltd loopne jbe or lds sub and hlt sub jp loop gs and movsl ds lea lcall xlat cwtl loopne test or lds mov (bad) jl and and jnp loopne cbtw and mov lock fs lea fmuls mov dec mov jmp outsl mov cmp cmp mov pop pop mov or pop ds cmp and js loop gs sub xchg mov sahf fs jecxz (bad) and ljmp aas inc pop xor mov push push mov stos xor mov cmp daa negb in imul add xchg jmp sub mov mov or sub xor jge and mov out mov cltd and jmp (bad) es popf dec (bad) mov negb or sub aas jle,pn cmc sub jae out mov cwtl and mov lcall aad loop je or sub or fs imull jg cmp mov ds jbe mov sub jmp aas jmp (bad) pop xor and mov psrlq pop pop mov or arpl and and jbe hlt push in and in (bad) xchg mov hlt sahf push sahf jecxz test adc js sub push ds add repz pop cmpsb dec mov lahf sub insl mov std pushf arpl lea and hlt cmp mov inc cld dec push fstpt (bad) pop jb call sti add cmp inc and jp loop out and movsl aas jmp mov cld popf fs lea sahf jecxz mov push rol pop pop popl (bad) jle and cmc dec pop mov cmpsb inc push out sub jno jb fwait and pushf push cltd fist sub sub or pushf jl and js loope push and pop popf adc mov (bad) repz imul mov xchg sub pop (bad) fwait loope mov (bad) sarb sti add jl sub jbe hlt mov cltd and dec insb mov lcall aam jecxz mov (bad) (bad) jle sub sub pop adc fstpt loope arpl out insl mov std lahf arpl lea loop xchg or sarb std insl outsb mov mov add fcmovb sarl jae rcr xor push mov add cmp jg repz aad and stos push dec insl mov pushf popf inc (bad) (bad) shlb call sub sub arpl and repnz pop push push push jmp ds (bad) andl lahf shrl mov push rol imul cld add jno,pt mov out mov pop mov add shl push in rol stc inc cli ljmp fisubr jl sub (bad) fwait loopne leave and sarb add cmp daa and (bad) jl loopne imul insb andl mov jecxz jbe or sub or ds cmp dec pop mov out push out mov mov sub add cltd fist sub sub repz sbb and movsb lock arpl and fdivrs mov lcall insl mov pushf popf inc and xchg mov in imul and repz js loope push lods mov mov fwait and inc negl or sub or pop xor hlt sub jp out mov lods inc jbe cmp xchg imul jecxz test in hlt cmp jle sub ds repz pop fstpt mov mov dec insb xchg mov lahf inc ret negb psrlq jg sub or ds mov mov out daa insb lea call push dec lea rclb pop mov or jg xor xlat jl out mov lods mov out popa mov (bad) (bad) in add mov ljmp cmp and mov push pop imul insb andl lods add lahf jecxz jbe push rol jl sub das add and repnz sbb mov cwtl inc iret add iret (bad) (bad) xchg mov icebp lahf addr16 hlt sahf ret sbb fsubrs sti add jge and xlat jns repz aad and scas test or out stos push xor jmp cwtl xchg xor rol jg sub xor jl das jle cmc inc pop mov fwait loopne cwtd mov mov xor push cltd fist sarl push sub jns cmpl out mov cltd and call pop cmp and xchg mov jns sub jg cmc sub jbe hlt mov imul cmpsl cltd dec and mov mov es popf inc lea jecxz mov push rol js das and sbb and fistpl push mov cltd sub outsb mov es data16 lea cwtl loopne mov or (bad) imul call setg push aad out mov lahf and movsb xor lea and pushf arpl (bad) pop cmc pushf ret sbb rol js (bad) aad in lret add xchg dec mov movsb mov mov popf loop jbe or sub xor pop push push push jmp cmp jne cltd and xlat cltd fist sub mov or aam sbb push roll and movsl pop imul push push inc and xacquire out push mov or (bad) and das jg addr16 dec out or push icebp ljmp (bad) inc insb vmovapd insl mov lcall (bad) lcall (bad) pop pop (bad) sbb push jge xor repnz sbb mov lcall mov std pushf arpl mov negb out push mov sub inc pop xor cmc das pop fstpt loope cbtw sub (bad) pop cmp pop shlb xor inc adc dec adc cmpsl (bad) push mov and fsubrl add fdivrs loopne push xor mov daa std lahf fs mov loopne mov in imul and xlat pop pop inc mov lcall xchg mov lahf addr16 (bad) fwait loopne (bad) and rol pop pop mov or jl and hlt and js loop rorl cli add pop inc arpl push adc repnz jae out mov mov dec insb insb mov icebp pushf addr16 lea cmpsb fistp (bad) jle sub and repnz pop push push push in dec lds xor ljmp icebp lahf addr16 mov shlb push rol jg sub add jnp das andb and jns repz cwtl sub insb mov push push fstpl cmpsb mov lret (bad) sub mov cwtl rclb fsubrl call add aam fwait repz lods sub mov std pushf arpl mov negb in push cmpsl pop pop lea or daa and aad xchg repz mov jmp mov std lahf arpl stos daa sti nop ret xchg mov jle sub adc insl add sbb add jecxz movsb loope test lds pop imul insb imul fwait loope mov push rol jl sub (bad) jge and repz pop fstpt repnz cwtl mov mov xchg xor lods and fwait loope test psrlq jle sub add mov fwait loopne push mov imul jbe xchg xor mov hlt sahf ret xchg mov xor (bad) clc (bad) loopne sbb add test lock or mov cmc dec sbb mov lcall (bad) cltd and pop (bad) fwait loope mov (bad) sarb and sbb ds jg hlt inc sbb mov outsl push dec insb (bad) xchg imul mov aad loop xchg xor sub (bad) std or jg xor hlt dec pop mov cwtd and stos xor jmp mov icebp orl fwait and cmpsl jp in push and lret out push aad dec lds pop addr16 nop mov popf shrl mov or lds (bad) and sbb ss cmp jg repz lods inc jbe pop addr16 mov lcall fwait loopne (bad) and rol jle sub xor hlt inc pop mov cmpsb inc mov cltd inc shrl out fwait mov mov (bad) popf and rorl lahf lahf inc (bad) (bad) cmp mov jns sub add inc pop xor aam pop inc push out sub (bad) xchg andl lods daa (bad) lcall cmpsb jl sub das pop arpl and mov out and outsl mov lcall cmp sahf jecxz mov or (bad) js das std insl fnsave mov in push mov sub pop add mov fwait loope gs inc jbe push dec insl nop mov popf and cmc test in push cmpsl jg sub add jl dec pop mov fwait out mov cwtl and stos xor (bad) mov cld popf shrl (bad) and rol pop pop lea or and mov test add or and sub jnp loope roll sub mov nop popf dec (bad) (bad) ds fwait loope je in push cmpsl pop mov or inc add aam xchg repz in inc jbe xor mov mov lahf arpl lods add lcall mov push ds add cmc dec sbb push out inc jbe cmp mov pop out aaa add lcall (bad) jns sub sub jge and jnp loope rorl insb lea call bound and xchg mov (bad) (bad) jg sub sub jg xor fdivrs repz movsb xor mov es pushf push cmpsb ficom sarb add cmp jno,pt jns jns sub add (bad) testl mov lcall insb mov std lahf arpl in xchg call mov or jg cmc das pop fistpl push mov lods and (bad) xchg (bad) inc xchg pop negl push rol js sub or hlt dec pop mov gs daa insb mov int dec and jns loope arpl call jl sub sahf gs mov fist (bad) pop pop mov mov mov xchg repnz cwtl sub fwait mov mov icebp pushf push lcall mov sbb push jle and fdivrs loope push lods mov mov sahf and in mov hlt sahf push cwtl loopne je in push mov add jle and repz pop fistpl inc mov fwait and ljmp std pushf arpl stos pop negl in push mov or jge repnz sbb mov fwait inc jbe push dec insl xchg mov lahf inc and xchg (bad) and rol js dec mov pushf ret lock sub cld add ds jl das pop fdivs hlt push aad sub lea hlt sahf push lahf jecxz (bad) and ljmp pop pop adc repnz pop (bad) out mov stos xor (bad) (bad) xchg imul stos daa aad loope mov pop pop mov or jg xor das jg and loopne decb ds adc inc sbb mov fwait sub mov hlt sahf push cmpsl fist cmpsl jg sub or cmp jp loope cbtw and movsb xor ljmp repnz and popf loop (bad) and sub push aas jl das cmpl cmpsb dec mov lods sub hlt (bad) aaa dec jle adc popf loop hlt std inc dec dec and das mov call mov add mov dec and mov jne cltd in into cli add aaa dec jle add test dec mov jle inc jp setg (bad) xor dec pusha mov int adc cld adc pop cmp mov outsl push mov lret repz inc test in sti dec jge stos or pushf out jmp or dec lret sub add popa push in lret jmp sbb pop dec sbb jl sti and add ja sahf sti icebp hlt pop cmpsb or and adc aaa mov push dec lret sub add pop sbb dec shrl push or pushl outsl inc or jg andl mov and int3 xor sbb out sub out or lret (bad) adc addl cmp cmp daa mov dec imul mov inc lods int jne push mov lods addl int push pushf push add lahf addr16 xlat cwtl fist mov xor jle and hlt das pop fdivrs out push out inc leave add mov nop popf dec and xacquire in push cmpsl jle sub and pop push push mov fwait sub mov inc xchg sahf shrw jbe or sarb cld or sbb mov mov or ds cmp and jns loope roll dec lds aas jmp mov cld popf gs mov negl psrlq pop pop popl or and fnstcw loope jmp ds lea sahf popf inc (bad) lea sahf loop mov call sub or lahf jl sub jge out mov mov mov aad out mov mov dec outsl mov repnz data16 lea sahf jecxz je in push cmpsl jle sub adc repnz jg repnz cltd inc shrl iret mov xor push cwtl fist sub mov das add cs jl sub jns repnz fwait sub mov and addl mov std pushf arpl (bad) cmp mov in imul and aam fwait loopne push mov out mov std lahf arpl mov cmc pushf rcll jl sub das pop jns cs jl das pop (bad) out mov lods inc shrl addr16 fwait mov arpl (bad) lea nop ret xchg mov add popf inc and xchg mov call (bad) std das add jge,pn repnz sbb mov lcall (bad) xchg mov xchg lahf dec and xchg mov call sub pushf jl dec pop mov push lods inc leave add call push dec lea lahf loop leave and ljmp cmp and imul cmp add cmc inc pop mov push push mov or insb insl mov sahf popf inc (bad) (bad) cmp mov or lds sub xor cmc inc pop mov push push mov mov call jl sub and cltd loopne mov push rol jg sub or pop ss (bad) imull push aam out mov mov cmpl out daa insb mov dec mov pushf popf inc and xchg (bad) and imul sbb (bad) testl mov lods and stos push dec insl (bad) xchg sub pop xlat cwtl loopne mov or (bad) jle sub sub jle and mov imul jne push mov addl mov push inc int3 mov sti nop (bad) cmc test adc js das std das add jl,pn repz jg repz jmp pop addr16 (bad) pop cmp fs sub or sub or and repnz pop mov fwait hlt mov fwait and dec xchg mov sahf gs mov cwtl loopne (bad) and mov pop lock and divl rol jg sub or jge xor mov lcall stos xor ljmp repnz data16 xchg mov call mov add cmp and jae out push out inc iret add imul insb data16 nop popf dec and stc je or lds mov or jns cs cmpsb js das sbb pop jle and hlt sub jae out mov lcall insl mov repnz data16 (bad) cmp mov imul push sub jle and mov cbtw and jmp mov daa cld popf and xchg (bad) and mov or cmp jl loopne imul push aam out mov cltd inc shrl jmp (bad) pop cmp gs xlat cwtl loopne je or lds sub daa and xlat pop cmpsb dec mov lods sub insl mov hlt sahf imul loop leave and sub or andb and jae out push in and stos xor ljmp icebp addl mov pushf popf inc and xchg (bad) and push cmpsl pop pop lea (bad) arpl and hlt dec sbb mov lahf inc shrl dec outsl fwait mov addr16 xor mov cmc pushf ret add das std das add cmpl push push mov lods sub mov sahf popf inc and cltd mov xor shrw mov jle sub daa and repnz pop mov addr16 sub insb mov lock and mov jg sub jl repz jl loopne addr16 nop mov lahf push lcall sub sub das pop jns cs mov mov or pop xor (bad) imull push aad fwait out mov lods and jmp mov xchg inc cmc pushf ret std xor sub sub push ds setl pop (bad) js loop aad daa insb mov iret (bad) lea cld popf fs mov shlb or (bad) pop pop (bad) sbb push pop adc cmc dec pop mov pop inc mov cltd and and das pop fstpt loop aad inc shrl addr16 mov icebp pushf addr16 lea lcall mov (bad) sbb pop jle and mov out mov mov imul dec push and mov push rol jl sub add adc jp out mov lods daa insb mov dec mov icebp addl mov cld popf fs ret sbb ljmp pop pop adc cmc and pop push push mov lods inc leave add mov pushf arpl lea sahf jecxz jbe push rol jle sub add das pop fstpt loope push mov xchg arpl (bad) mov cmc pushf ret adc mov pop icebp pushf push pushf loope mov jg sub (bad) pop adc and jae out push out inc jbe ds bound and xchg mov call sub and fistpl inc mov lods and stos cmp xchg mov lock fs mov sub or (bad) jle sub and rol jns sub das jg cmc and jp loop rorl mov mov in lahf lahf inc (bad) (bad) cmp mov or (bad) pop pop mov xor jl and mov fs and movsb xor mov es popf inc and xchg mov psrlq jns sub or (bad) sub js loope push test xlat jp loopne out daa insb mov jmp outsb mov es lahf inc and mov pop pop mov (bad) inc add xlat jns repz jmp ds bound daa (bad) pop (bad) lcall cmpsl jl sub or xlat inc pop mov out mov mov jmp mov icebp addl mov sahf data16 (bad) cmp (bad) and rol jle sub sub jg xor mov push mov jmp jno jb push xchg lcall cmpsl ficom (bad) jg sub push ds adc (bad) pop cmpsb inc push aad inc shrl imul xchg bound and xacquire xor dec ret shlb push rol js das cld or cmpl xchg repz stos aas jmp (bad) xchg sub pop sub or das and sbb adc jge out push in sub mov cld popf fs mov negl or mov sub arpl and rol pop addr16 add jle and mov push lods and mov xchg popf shrl je out push mov add ds cmpsb dec mov lahf inc leave add in jmp mov andl sahf and xchg mov or sarl or (bad) and das pop fistpl inc mov mov jge repnz pop mov push push mov mov out insl mov icebp lahf lea lcall mov xor jg xor cmc and jg repz mov rorb and pushf and cltd mov or mov das pop jp and repnz pop mov out mov mov dec insb outsl mov inc lds or iret mov cmp gs rcll pop lea sahf jl and js loop push mov jmp outsl mov test lcall pushf ret add push cmpsb pop pop lea or pop add jnp loopne push lods and stos pop addr16 nop mov popf dec int3 mov aam jecxz fdivrs nop popf dec (bad) lea sahf ret stc je xor sub sub aas cs jl dec pop mov push push push out sub outsb mov pop cmp and (bad) and das cld or jg hlt dec pop mov aad inc shrl jmp jno jb pop xor push cwtl loopne (bad) and rol jg sub sub jge push in push push sbb rcrb push std test addr16 add lahf icebp push sub pop aam out push aad and stos ds outsb mov sub sahf push pushf loop test psrlq jg sub or pop ss cmp jge out mov lcall xchg mov sahf and cmpsl ficom sub mov mov fstps inc mov mov out (bad) xchg push and jmp fwait and popf shrw mov call (bad) push sub jle and sub jae out mov cltd inc leave add in ljmp nop popf dec and mov imul std das add xor mov arpl in jmp mov xor push lcall (bad) js jmp icebp pop int3 cltd fimull adc jns xchg cmp mov inc pop and fsts call inc and lea leave aaa inc add stc and dec inc or loope decl dec arpl add bound xchg ret in xchg repz mov inc bound lret (bad) loop loop inc inc xor pop (bad) cmp mov pushl inc cmp cmp dec jl jle cmc jmp jecxz jl repz jp loop out inc lods outsl push dec insb outsb mov xor mov sti nop (bad) divl rol pop pop mov sub pop add (bad) jp loopne aad and jmp test std pushf arpl stos add lahf jecxz xchg or (bad) pop pop mov das mov aam cmpsb dec mov mov out outsb mov andl and movsl pop imul jbe pop cmp arpl lods add popf loop mov or (bad) jl sub or daa das cmpl pop inc push aad inc shrl call imul nop ret xchg mov adc jns sub (bad) inc add mov pop inc push jmp ds mov lcall xlat cwtl loopne fdivrs lock and mov adc pop mov or jns das jg cmc das pop fdivrs repnz lcall insl mov lock and xchg mov call mov sub pop adc mov out mov movsb push dec insl xchg mov popf data16 (bad) pop aam loop (bad) and rol pop pop lea or (bad) and push cmpsl pop pop mov das (bad) and and jg repnz lods sub mov lahf lahf inc (bad) lea sahf loop leave and sub or jg cmc inc and jnp loope gs mov xchg imul lods and lahf jecxz xchg or (bad) js das and sbb ds mov aam pop inc mov cmp jl dec pop mov xchg repnz lcall outsb mov xor mov aam jecxz mov or sarl xor jl and aam push push mov cwtl inc leave add mov daa icebp lahf push cwtl loopne xchg or sub or aas das jg hlt and pop push push mov lcall nop mov mov lcall lea cld popf fs loop xchg in push cmpsl jg sub das add das jg hlt and jns loopne push and jmp cltd and pushf arpl mov aad loop je or (bad) pop pop mov xor jl and cmc das pop fdivrs loope roll and mov lock gs mov aam jecxz fdivrs std lahf arpl (bad) pop cmc pushf ret push psrlq jns sub das pop pop add aam lcall stos cmp call xchg sub popf and divl rol jl sub mov xlat jge out mov cltd inc iret or rorb es fs (bad) cmp test or lds mov sub jge (bad) xor mov or (bad) js das sbb push jnp mov mov xchg repz mov jmp outsl mov cmp gs jecxz test (bad) sarb add jl and jbe repz mov jmp (bad) (bad) es lahf inc lea ret cltd mov or mov add jl and pop pop inc mov cmp and inc sbb mov cltd and dec insb mov std lahf arpl stos add cmpsl ficom sarb or daa and cmc inc and pop cmpsb dec mov cltd and dec insl mov (bad) popf data16 xacquire psrlq jns sub or adc (bad) jl loopne jmp aas jmp outsb mov mov lcall nop mov sahf data16 mov hlt sahf ret cmc test in imul and fcomps push mov cwtl sub (bad) xchg imul mov lcall (bad) jg sub adc fnstenv out mov fwait sub mov popf inc and xchg fdivrs nop popf dec and xchg mov psrlq jns sub sub jle and fistpl inc mov lcall mov std pushf and xchg mov jns sub (bad) jge xor aam fwait loope aad inc leave add mov lahf lahf inc and ret adc das sti add xchg mov jg sub sub jl and aad xchg repz cltd sub jno jb push xchg lcall cmpsl ficom sarl add cmp das mov mov out push in sub insl mov hlt sahf push lcall sub sub add add repz pop pop inc mov cmp cmp and jp loopne addr16 inc iret or in jmp mov repnz data16 (bad) pop sub in imul xor and pop pop inc mov lods sub mov repnz addr16 mov xlat cltd loopne jbe out push mov or jge repnz pop push push mov cwtl and movsl pop addr16 insl mov lds or rorb cltd and sahf and negl xor sub mov sub pop adc repz jp loopne addr16 sub mov std pushf fs mov shlb or sub or and dec pop mov jmp cmp jb inc xchg sahf fs (bad) pop aam jecxz fdivrs hlt sahf push lcall sub (bad) std or pop adc hlt inc sbb mov cltd inc shrl out insl mov (bad) popf and lcall lds mov add and (bad) jl loopne jmp ds xchg icebp lahf addr16 mov (bad) lcall (bad) jle sub add xor mov jg sub or jge xor repz pop cmpsb dec mov lcall xchg mov pushf addr16 mov aad loop xchg or sub or pop adc aam fwait hlt mov cwtl and insl mov lcall pushf ret sbb fsubrs decb aas jge and aad xchg repz cmp cmp sub jp loopne rorl test mov lahf inc daa (bad) pop negl xor sub sub pop xor cmp jl loopne push mov call mov cld popf shrl mov jl sub add repz jns repz cltd inc lods outsb xor in (bad) xchg imul pop imul insb mov sahf popf inc and xchg (bad) and sub (bad) jl das mov fstps push mov lcall insb mov icebp pushf push nop les (bad) pop pop mov or (bad) and sub jnp loope imul jbe in sahf popf inc daa mov sahf jecxz fdivrs lahf lahf inc ret cmc pushf rcll jg sub add and repz pop push push push in and jmp mov pushf gs hlt sahf ret xchg mov or mov or daa das cmpl fwait hlt push jmp push dec insb lea icebp pushf push pushf ret sbb out add cmp add xor ljmp loopne daa das cmpl out mov lcall mov pushf popf inc and xchg (bad) and push mov sub pop adc repnz jl out mov lcall mov std lahf arpl mov aad loop mov or sarb push sub jp das mov mov dec cmp cmp jp loope fs dec lds xor mov mov lahf and mov psrlq pop pop mov add jl and pop push push push jmp pop imul push arpl and xchg adc jg sub das add xor cmc dec pop mov cbtw inc shrl in ljmp push pop cmp loopne cmc fcomps ds popf inc and xchg mov or das std das pop inc add fstpt loopne push mov dec insl mov lock and xchg (bad) and push mov or ds lahf jl inc sbb push rorl mov mov xchg lcall aam loop mov js das push sub jge and rol jg sub (bad) jl das pushf jl sub jl out mov lcall mov pushf popf inc and xchg (bad) and jmp pop pop lea sub jge xor xlat pop pop inc mov lcall xchg mov popf inc and loope mov push rol pop pop lea sub pop adc (bad) jp loop roll and jl das pop fstpt repnz lods and stos ds arpl and xchg leave and push mov (bad) pop movd out mov mov in in mov cld popf shrl xchg psrlq jns sub add ds repnz pop fstpt repz lods inc jbe pop addr16 outsl mov sub addl mov sahf lea (bad) cmc test call mov xor jge xor fdivrs out push jmp xor lea dec xchg sahf popf inc shrl mov push rol pop pop mov jno fnstcw out mov cwtl dec lds pop imul xchg xchg repnz addr16 mov loop jbe xor inc and loope xchg psrlq jg sub or and repnz jg repz mov rorb test cld popf and xchg (bad) and jmp pop mov or cmp and jns repz out and call lcall pop cmc pushf ret and jmp imul add cmp adc rol jns sub add jl inc pop mov out push out mov insl imul fwait loopne (bad) and imul cmp xor repz and pop push push mov add rorb and pop negl push rol pop pop mov sub jle and repz jns repz aad and add xchg insb imul jmp add xor cmp stc mov mov (bad) je sub in pop int3 call mov dec jo add out shlb scas clc mov (bad) sbb add dec insb or or out shlb sbb push icebp cmp add adc sarl loope cmp sub mov rorl xor mov (bad) std imul mov jnp lock popf or ss popa aaa sbb mov int aas xor cmp jb mov mov aad cltd inc pop pop lahf or inc mov stc mov sahf and mov adc push scas fwait aam movsl stos adc into mov je incb or ror call out lock out jg enter and test test push cmpsb sti and xor mov (bad) lcall in cli lret pop repnz mov dec xchg cmp in mov int loop cmpsl mov fcomip jmp lcall dec xchg sub leave (bad) jmp inc dec xchg cmp lret leave (bad) jmp out movsl in clc mov push or (bad) push mov adc adc out jbe cwtl mov mov (bad) ret arpl out sarl jno hlt xor push inc imul fisubr ret (bad) out or in ret test cmp ja inc adc scas xchg cmp in out sbb out push nop adc push mov sbb in lret dec adc imul inc loopne adc (bad) int fwait in mov ret repz mov dec call lret jecxz cmp add out sub mov bound jge mov arpl scas lods clc push arpl jbe mov push lods add fnop (bad) loopne emms add add cmpsl popf mov (bad) pop jae in mov push jmp jne and leave mov or mov mov pop inc pop sub stc jmp inc sbb decb out test stc scas inc push cs dec push ljmp pusha stc scas inc mov sbb into sarl adc enter sbb (bad) testb loop mov out jg xor fnstcw or fstl out jg xor fnstcw or adc test mov push inc test sbb js in pop xor mov stc sbb dec das pop fdivrs out mov lods sub mov sahf addr16 mov loopne mov push rol pop pop (bad) sti add jl das cmpl lcall stos xor mov cld popf fs lea sahf loop leave and rol js das sbb sbb cmp dec pop mov xchg repz in and movsl ds xchg mov popf and call xchg sub lahf push cmpsb ficom mov or cmpl push lods sub mov xor data16 (bad) cmp je xor sub sub ds jl inc sbb mov lods and jmp fwait and sahf imul ret pop or lds dec mov cmpsl fist cmpsl pop mov add cmp dec sbb mov lahf inc iret or rorb cmp and mov in push cmpsl pop mov das lcall add repnz sbb mov lcall insl mov std pushf arpl (bad) cmp mov push rol pop addr16 push jp,pt das sbb mov sub or pop add aam lcall movsb push dec insl outsb mov xchg xor mov xlat cltd fist sarl sti add (bad) hlt and pop push push push out and insb mov nop popf dec (bad) (bad) cmp jbe in imul xor sub pop pop inc push roll and cmp jl loopne aad inc lods outsl pop addr16 mov (bad) popf data16 mov shlb push rol pop addr16 push jl,pt and repnz pop cmpsb dec mov lods and stos push dec insb insl mov lcall xlat cltd fist sub mov sub jl and fstps inc mov lods and stos aas jmp insl mov icebp addl mov (bad) es lahf inc (bad) lea cmpsb (bad) je or shrl sbb sbb and inc sbb push aad inc iret add out outsb mov es lahf arpl stos and popf loope (bad) and imul adc mov aad inc leave add call mov icebp lahf and lcall addr16 lahf and xchg xor sub lea xor fdivrs out mov cltd and call xchg sub inc aam jecxz je or sub push jge,pt xor cmc inc and jp loopne jmp xor ljmp std lahf arpl stos daa aad loope (bad) and rol jle sub add rol jg sub jl lock pop cmpsb inc push aad and jmp (bad) es lahf inc (bad) lea test or (bad) ljmp pop pop add mov cwtd inc jbe pop addr16 fwait mov mov (bad) popf data16 lea je or (bad) js das std das pop pop add mov fwait loope addr16 and cmp and jnp loope aad daa insb lea in ljmp lahf lahf inc and xchg mov or (bad) pop addr16 das add and repnz pop mov out mov lcall jno jb xchg xor mov aam jecxz test out push mov push arpl and aad out push in inc shrl dec insl nop mov mov cwtl inc lods outsl cmp push mov cld popf shrl (bad) and imul (bad) jl and cmc and jge out mov lcall jno jae (bad) es lahf inc lea fist sub sub or jns cs jl and pop push push push aad sub insb mov hlt sahf imul fist in hlt sahf push sahf jecxz mov call sub push jl,pt and aam out mov or rorb test cld popf gs mov cwtl (bad) cmc test or (bad) pop pop mov xor arpl and mov push sub mov lock gs mov aam loop (bad) and rol jg sub sub jge (bad) xor ljmp cmp daa and hlt dec pop mov aad and stos ds (bad) xchg xchg (bad) popf and popf loop test push rol js das push sub inc pop xor hlt inc pop mov fwait repz lahf inc lods outsb xor mov dec arpl and xchg mov call sub add jnp cs jl inc sbb mov cmp (bad) mull pop fnstcw loope push inc leave add rorb push mov lahf and cltd mov adc jns sub das add pushf jl das pop fistpl push mov lods inc lods outsl push dec insb (bad) pop xor push nop ret xchg mov jns sub or cmp pop pop inc mov lods and stos pop imul xchg imul push dec insb mov lock and xchg mov pop pop mov or jg cmc inc and jg repz cltd mov mov xchg lahf gs loopne mov or lea or jp and repz jp loop arpl rorb mov (bad) lcall inc xchg sahf push nop ret xchg mov pop pop mov das add jge repz jge out mov movsl ds jno jae in nop popf dec (bad) lea lcall sub sub or and hlt sub jg repz in inc iret add dec insb (bad) xchg arpl daa (bad) pop hlt sahf ret xacquire out push mov or jge (bad) xor (bad) and rol pop pop mov (bad) pop ss (bad) (bad) dec sbb mov cltd and xchg mov sahf imul jecxz xchg or mov push aas jle and cmc inc and jge out mov lcall fwait mov mov repnz retw cmc pushf rcll pop pop (bad) sbb sbb cmp inc sbb mov cmp jl and jns loope push mov in in (bad) xchg data16 (bad) popf and cwtl loopne je adc pop pop (bad) std das pop inc add aam xchg repnz lods inc leave add mov lcall sti nop les jg sub or pop ds jl sub jg repz lcall insl mov les aas jmp outsb mov andl sahf imul loop mov or mov sub jg xor hlt inc pop mov fwait loopne jmp push dec insb (bad) xchg sub popf and xchg mov in push cmpsl pop pop mov xor pop add fcomps push push in inc jbe xor jmp mov pop cmp fs (bad) pop shlb shlb cld popf and hlt jbe or rcrb sti add cmp das pop fdivrs loope arpl rorb andl pushf and nop (bad) hlt jbe call das sti add cmp sub jp loope fs sub mov std pushf fs mov cwtl loopne xchg or (bad) jl sub add cmc test call sub or add xlat jp loope push mov in in (bad) xchg bound and cltd mov psrlq imul sbb das lahf jl and pop push push mov mov call imul cmpsb fistp sub decb aas jle and mov dec cmp cmp and jp out mov lods and stos xor ljmp xchg lahf dec and xacquire adc pop pop mov or and sub pop cmpsb inc mov lcall fwait mov arpl (bad) (bad) sub in push cmpsl pop pop (bad) sbb pop jl das sahf jl dec sbb mov fwait mov mov mov lcall outsb mov fwait and pop xlat cltd fist sub sub or pop add and js loop aad inc lods outsl push dec insl xchg mov pushf gs mov (bad) sarb or and cmc and jbe hlt push jmp cmp xchg (bad) inc xchg cmp fdivrs std pushf fs mov shlb call mov das pop pop ss and inc sbb mov cwtl and call xchg sub pop shlb push rol jle sub add add aam pop inc mov stos pop imul dec imul fwait loopne mov jns sub sub jge (bad) xor mov jg sub add and aam push push push jmp ds outsb mov pop xor and negl call sub (bad) jg xor hlt inc sbb push out inc lods outsl pop imul xchg xchg repnz data16 (bad) cmp mov adc imul sbb push jl and repnz pop mov dec cmp cmp jbe repz cltd dec lds ds bound ret sub in imul xor dec sbb mov mov call mov lahf lahf inc ret cmc pushf rcll pop pop mov jl repz pop mov out push out and mov inc lds movsb pop imul xchg mov sahf popf inc int3 mov aad loop mov or mov jge repz pop pop inc mov mov iret (bad) (bad) xchg bound daa (bad) pop aam jecxz (bad) and rol pop addr16 or inc pop xor cmp pop pop inc push in sub outsb mov es popf dec (bad) (bad) ds loop fdivrs std lahf arpl stos pop aam jecxz mov push rol jg sub das add and inc and jns loopne push lods and jmp pop sbbb aam jecxz test xor sub sub add jnp cs jl and jp out mov lcall insb mov lcall sub or shrl push sub jge (bad) xor rol imul ljmp pop jge xor xlat jp out mov lcall mov sahf popf inc int3 mov sub or sarb sub inc pop xor mov out mov lcall nop mov pushf and test or sarb push sub jg xor repnz jbe hlt mov cmp cmp and jl loopne imul xchg bound (bad) lea add imul add repnz pop mov fs daa insb mov dec mov repnz lea ret push out push mov or pushf jl and jl loopne out daa insb lea rorb mov cwtl sub mov lahf push mov adc pop pop (bad) and sbb add mov addr16 insb mov hlt sahf push lcall shrb ljmp pop jp and mov jmp xor mov dec imul fwait loope fdivrs sahf popf inc and mov imul loopne daa das jle repnz pop pop inc mov cltd inc iret or call data16 lock gs mov aam jecxz test psrlq pop pop mov or jge repz pop fdivrs loop in and movsl pop imul push arpl and je call sub push jge,pt (bad) xor call add cmp xor mov lcall add mov lahf inc ret aad loope mov or das sbb pop jge and sub jg repz lcall mov sahf popf inc (bad) lea cwtl loopne xchg or sub sub jnp jle,pn cmc dec pop mov dec cmp cmp dec pop mov roll and movsl cmp jmp mov lahf push cwtl loopne xchg xor sub mov or aas jle,pn cmc das pop fstpt loopne push cmp jbe test lcall (bad) fwait loope xchg push rol js das sbb sbb cmp sub jae out mov cltd inc jbe push dec insb outsl mov inc les xor lea jb push mov pop (bad) lcall sub sub pushf jl inc and pop push push push jmp xor (bad) mov icebp pushf push cwtl rclb addr16 das add xor cmc sub jge out push in and call push mov pushf fs mov sahf jecxz fdivrs icebp lahf push cwtl fist mov sub and (bad) jge out mov mov out xchg mov lahf inc shrl mov jl sub xor jnp das jg hlt dec sbb mov lahf sub mov lahf lahf inc and divl rol pop pop mov sub jge (bad) xor rol pop pop mov add cmp and jl loopne in dec lds aas call mov repnz retw hlt sahf ret divl ljmp pop jp and and jae out mov mov imul push mov lcall aad loop mov push rol jns sub sub inc add xlat jns repz cmp and and jns loope in and movsb xor in mov icebp lahf addr16 (bad) pop xlat cwtl fist sub das add cmp and das pop fdivrs loopne fs dec lds xor mov es and xchg mov xor sub mov and mov jmp xor mov imul xor jmp mov pushf arpl mov aam loop leave and rol pop pop mov jge repnz jp loop push lods daa insb mov insl jl sub sahf and xchg mov js das push sub jl and sub pop push push mov lcall xchg mov lahf dec and xchg fdivrs hlt sahf push sahf loop mov jg sub sub pop adc aam push push push jmp push dec insl mov std lahf arpl loope mov xor sub mov or fs (bad) dec pop mov aad inc leave add mov lahf push cmpsb ficom cmpsl jg sub xor rol pop pop mov xor jg xor cmc and pop pop inc mov mov dec insl xchg mov lahf gs mov aam jecxz je or sub and hlt and jae out push out mov jae pop sbbl mov xor sub sub sub jl and repz js loop dec cmp jl and jns repz lods and jmp mov popf and xchg leave and ljmp push jp and fdivs hlt push roll inc leave add mov and add cltd fist (bad) jg sub and aam out push in mov mov mov mov call bound ret negl in imul and mov addr16 inc lods outsl pop addr16 mov hlt sahf imul loop mov jl sub or cmp dec pop mov push lods and stos ds xchg mov popf inc and xchg fdivrs (bad) popf and nop ret xchg mov or lds mov or pop setg and js loop aad and outsl mov cmp pop sub or lds das and sbb cmp jp loopne imul xchg andl stos add fwait loopne mov jle sub add xor rol js sub or jns das jge repnz pop mov push lods mov jbe lcall pop sti nop (bad) cmc test or das push sub jge xor (bad) pop pop inc mov lcall lea pushf popf inc and xchg (bad) and push mov or jp and mov lcall add xlat jp loopne imul jbe lcall cmp pushf loope mov in imul and fnstcw out mov cltd and insl insl mov icebp lahf shrl loop leave and ljmp cmp add fdivrs loop roll and call mov cltd sub mov (bad) popf shrw mov pop pop (bad) sbb push jge xor das pop fstpt loopne push mov rorb andl lahf arpl lea lcall (bad) pop pop lea add jge and mov push mov in jmp mov (bad) popf lea mov (bad) mov std lahf arpl (bad) pop (bad) fwait loope jbe push rol js das sbb push jg xor (bad) pop cmpsb inc mov stos xor jmp mov push xchg repnz data16 xchg mov pop pop mov and fstpt loope gs dec lds push dec insb mov xchg lahf dec and xchg mov jle sub add xor jmp jns sub push jge,pt xor (bad) jp out mov cwtl daa insb mov dec outsb mov es pushf lea cwtl mov rol jl sub add and and jns repz cwtl sub insl mov lcall sub push rol js sub or inc add jg add sbb and fnstcw loopne gs daa insb mov dec mov cld popf fs aad loop je in push cmpsl pop pop mov sub arpl and fstps push mov cwtl inc leave add mov pushf popf inc and rclb jg sub add jl and pop pop inc push rorl insb mov dec mov sub loopne push mov in jmp mov nop popf dec and mov or lds mov das add xor cmp pop push push mov lcall outsb mov push xchg hlt sahf push cmpsb fcomip jbe or (bad) js sub push aas jnp das (bad) and sub js loop push mov addr16 mov xchg lahf inc and sbb in icebp pushf and cmpsl fcomip je in push cmpsl jg sub push aas jl das jge repnz pop cmpsb dec mov cwtl and movsb xor ljmp pushf popf inc and xacquire or sarl std das add and repnz jns loope addr16 fwait mov imul (bad) pop cmc pushf ret and ljmp fnsave mov or (bad) std or jle and (bad) jnp loope arpl addr16 insl mov std lahf arpl jecxz je or sub or and mov fwait loope in and movsl cmp xchg mov cld popf gs mov ficom lds lea or adc xlat jg add sti add jle and jns loope imul jbe push mov lahf and xchg mov xor sub (bad) sti add cmp jp out mov lods sub mov icebp pushf addr16 (bad) pop (bad) lcall mov sub add inc pop xor (bad) jbe repz cltd inc jbe pop imul xor jbe repz fwait mov mov icebp lahf and mov in imul xor cmp jnp loope jmp ds mov cld popf and xchg mov or (bad) sti add jnp cmpl cmpsb inc mov mov dec mov icebp lahf push jl rorl (bad) popf and sahf jecxz (bad) and push mov add jnp das cmpl fs and stos aas call imul cltd loopne (bad) and jmp imul and sbb and (bad) out push aad daa insb lea rorb in std pushf fs mov aad loop (bad) and rol js dec mov fwait loopne (bad) and push mov sub jl and fstps push mov mov out mov (bad) popf and mov psrlq pop pop (bad) cld add xlat and jl loopne in inc shrl in in mov icebp pushf and cwtl mov push mov add jge and jns pop addr16 or inc pop xor (bad) (bad) dec sbb push jmp push dec insb nop mov lahf push cltd loopne mov push rol pop pop (bad) std das pop jns cs jl das pop fdivrs loope arpl rorb and lahf arpl fist cmpsb jns sub or cmpl xchg repnz lcall dec sub jbe repz mov iret mov and pushf and mov adc jl sub add jl sub js loop in daa insb mov jmp mov (bad) popf addr16 mov jecxz mov out push mov add jl das mov fstps push push jmp push dec insb jno jb andl xchg std cwtl push dec insb outsl mov xchg sub pop (bad) lcall sub sub add adc fnstcw mov lods sub mov xchg icebp pushf addr16 mov aad loope mov jl sub or pop movq dec pop mov xchg repz movsb cmp jmp mov lcall add cmpsl fcomip test xor data16 xchg leave and rol imul sti add and inc and jnp loope aad inc leave add mov std pushf arpl stos daa cmc pushf rcll jl sub sub inc add hlt das pop fstpt repz jmp ds mov lahf lahf inc and xchg mov or sub push aas jnp cs (bad) js das cld or lahf jl sub jp loop imul jbe inc xchg pushf push lcall sub (bad) sbb push jg xor repnz pop mov fwait hlt mov or iret mov imul stos pop negl (bad) sarb cld add ss cmp jl loopne push mov jge repz and jnp loope jmp xor ljmp lock fs mov shlb or popl or ds mov xlat pop push push mov cwtl inc iret or in jmp mov and pushf data16 mov shlb xor sub add cmp aaa xor and jp out mov cwtl and lea icebp addl mov icebp pushf push fwait loope mov or sarl cld or lahf jl sub pop cmpsb inc mov outsb xor mov cmp pop xlat cwtl loopne (bad) and rol jle sub sub jle and repnz sbb mov cltd daa insb mov iret mov jae test lahf lahf inc int3 mov aad loop (bad) and mov pop hlt sahf imul loop jbe push rol jg sub push jp,pt and repnz pop mov lcall or call andl mov xlat cltd loopne mov push rol pop pop mov push jns,pt cs jl sub jl loopne imul insb (bad) inc xchg shlb call mov or jl and ljmp loopne aas cmpl cmpsb inc push in sub mov pushf shrl mov out push mov add cmp and jnp loope aad inc jbe pop imul push push and cltd mov or (bad) js das add cmp adc and pop push push mov lcall aad pop (bad) jg repz lcall mov (bad) popf and cltd loopne je or sarb cld or jge repz pop fistpl push mov cwtl and insb mov xchg lahf inc ret hlt sahf ret pop out push mov or inc pop xor (bad) jl loopne addr16 inc lods outsb xor jmp mov xor (bad) movsb cmp xchg xchg pushf popf inc and cltd mov or sarb add cmp ds andb dec pop mov roll sub mov std pushf and cltd mov in imul add mov fwait loope rorl test mov icebp lahf and cmpsl ficom addr16 icebp pushf push pushf loop mov psrlq js sub sub jl and fdivrs repnz lcall mov nop popf dec daa mov nop (bad) divl push cmpsl jns sub push aas jg xor cmc and js loop imul dec push addr16 loop leave and sub das pop inc add imul xor repz jg repz insl xor (bad) mov repnz data16 (bad) pop (bad) lcall (bad) pop pop (bad) std das add jle,pn cmc dec pop mov jmp xor (bad) fwait mov arpl daa mov cmpsb fist sub mov das pop jl and and jns repz roll and jl and jbe hlt mov cltd inc shrl iret (bad) lea std pushf fs mov cmpsb ficom cmpsb pop pop (bad) cld or mov aad fwait loopne in inc iret add dec insb nop mov sahf imul jecxz mov xor sub sbb push jl and fdivrs repnz lcall xchg mov addl mov repnz data16 (bad) cmp mov or sub adc (bad) jl out mov lcall mov icebp lahf push nop ret xchg mov imul ljmp pop arpl and sub jg repnz lcall jno jb pop cmp arpl fcomip je xor gs mov cmpsb fistp mov or jge xor repnz and jns repnz lcall jno jb andl pushf addr16 (bad) pop aam loop mov jle sub add mov out push roll sub jno jb push mov pop shlb xor sub sub xor pop add rol jg sub and dec pop mov pop inc mov lods sub mov cmp add sahf ret push push rol jg sub sub jnp mov xlat jae out mov lahf inc shrl call imul pushf loop mov call mov or and jp loope fs and (bad) imull push aam fwait loopne push lods sub mov lahf dec and xchg leave and imul add and hlt sub jbe hlt mov cltd sub xchg mov pushf gs cmpsl fcomip je push rol jl sub sub inc add repz pop push push push in mov mov addl mov popf dec int3 mov aad loope mov or sub xor jg xor (bad) jg repz roll inc iret add jmp (bad) xchg imul mov sti nop les jle sub add sub jnp loopne push lods sub mov sahf and shlb xor shrl jbe or (bad) pop pop mov or jl sub jl loopne aad inc lods outsl push dec outsl lea repnz shrw mov in imul add fistpl push mov lcall nop mov popf and lahf jecxz mov adc js sub sub jle and push cmpsl jl sub xor jl and hlt sub jl loopne roll sub nop mov popf and je xor sub mov or and hlt and pop pop inc mov cltd mov mov push inc (bad) lea (bad) and push cmpsb jns sub or testl mov lcall lock jg repnz lods inc leave add mov lcall sahf ret xchg mov or (bad) jl sub sub jp das mov aam xchg repz lcall xchg mov popf inc and xchg mov push rol jl sub xor das pop fistpl inc mov cwtl inc jbe xor mov sub addl mov hlt sahf imul loop mov xor sub sbb and mov arpl rorb fwait and lahf push lahf jecxz mov push rol jl sub add jl and hlt das pop fistpl push push in mov dec mov std pushf and je xor inc and xchg mov in imul and aam fwait repz lods inc iret add dec insl xchg mov pushf arpl mov sub out push mov or imulb push aam out push out daa insb mov call in (bad) popf and negl or sub sub jp das sbb (bad) jns sub or jge repnz pop mov out mov cltd inc lods outsb xor ljmp std pushf fs mov sti nop les sarb call and aam xchg repnz lcall xchg mov lahf and cwtl loopne je adc pop pop (bad) sti add jg xor aad fwait loopne push lods and cmp dec sbb mov cwtl and mov std pushf and xchg mov out push mov or pop adc cmc and jp out mov cltd and movsl pop addr16 mov std pushf fs mov negl out push mov sub jl and fstpt loop in inc jbe xor mov and addl mov fwait and pop shlb xor sub sub or jle and inc and jp loop in inc lods outsl pop imul xchg push and cltd loopne je xor sub push sub jp and repnz pop push push mov lahf and mov xchg aas sub xor imul loopne mov jns sub (bad) jge xor cmc and pop push push push out mov mov xchg (bad) popf data16 mov aad loop mov or lds add cmp adc and das pop fdivrs loopne push lods and stos aas call andl lods add mov push rol js das push sub inc pop xor rol jle sub aaa xor repz pop pop inc push jmp cmp call cltd and negb adc pop pop (bad) push sub pop add repnz sbb mov lods sub mov push inc daa (bad) pop sti nop ret xchg (bad) and push mov or jle repnz pop cmpsb inc push out and cmp jp loope fs sub mov icebp lahf push mov or (bad) jl sub or pop adc cmc sub jp loop addr16 and dec outsb mov pop sbbl mov or lds sub and repnz jnp loopne push mov call imul sub mov and sahf fs xlat cltd loopne test or lds push sub jnp jge,pn repnz pop mov addr16 fwait mov mov sahf popf inc and xchg mov adc imul add cmp pop xor (bad) (bad) dec pop mov cbtw and movsl pop addr16 mov (bad) popf and cwtl loopne xchg xor and hlt jbe adc js das and sbb and inc and jnp loope out inc shrl rorb mov pop (bad) fwait loope mov (bad) (bad) jg sub sub jg xor repnz pop mov out push jmp pop imul xchg (bad) inc xchg pushf and popf loop mov or lea adc rol jl sub or jl repz pop pop inc mov mov rorb fwait and sahf fs lea lcall mov add cmp adc jnp loope aad mov xchg bound and mov in push cmpsl jns sub das pop pop ss (bad) hlt inc and jp loope push test aam out mov cwtl and insl nop mov lahf arpl (bad) pop aam jecxz mov out push mov or andb sub jns loopne push lods and mov nop popf dec (bad) mov (bad) fwait loope mov psrlq jns sub or jl and xlat pop push push mov lods sub (bad) cltd and addl mov push mov and lahf jecxz jbe call mov push aas inc pop xor jp loopne arpl addr16 jno jb andl stos pop sti nop ret xchg mov js das push sub jge and mov gs inc shrl in jmp mov (bad) es lahf and pushf ret add mov add lahf fs mov sahf ret xacquire out push mov xor jge xor mov addr16 jno jb pop cmp arpl (bad) cmp mov in push cmpsl pop pop mov or daa and xlat jge out mov cltd and mov lock shrl jbe psrlq pop pop (bad) cld add ficom pop (bad) sbb push jl das mov mov aad and xchg mov lahf inc ret shlb or (bad) jg sub xor and jg repz in inc lods outsl aas jmp fwait mov push and xchg mov psrlq jle sub add cmc and jbe hlt push aad and cmp jbe hlt push aad and movsb xor jmp mov test repnz data16 lea cwtl loopne mov push rol pop pop mov or jg cmc and jbe repz cltd sub mov std lahf arpl lea popf loope (bad) and (bad) cld or jg cmc and jp loop arpl in in mov icebp addl mov and pushf and xchg (bad) and rol pop pop mov push aas jge and cmc and jbe repz cltd inc leave add call mov xchg lahf inc daa (bad) pop sub out push mov xor pop adc repnz jae out mov cltd inc iret add jmp mov repnz data16 mov xlat cltd loopne mov xor data16 mov xlat cwtl loopne mov or sarl add cmp aas cs jl inc pop mov out push in inc leave add mov lock fs lea jbe call mov or jns cmpl out mov fwait daa insb mov xchg imul lods add lcall mov sub jg xor rol js das add cmp daa and hlt sub jg repnz lcall mov icebp lahf addr16 aad loop je or rcrb add cmp cmp das pop fstpt push jmp xor ljmp sahf popf inc and xacquire psrlq jg sub or add mov dec cmp (bad) hlt inc and jg repz jmp aas jmp nop mov lahf and xchg mov or (bad) jns sub or add mov cbtw and mov std pushf and cltd mov xor sub sub add jg xor repnz sbb mov lods sub (bad) mov lods daa insb lea rorb daa icebp lahf push lcall sarb add cmp aas jle,pn cmc dec pop mov push push mov lods inc jbe pop imul jne xchg sub lahf shrl jecxz je call sub or aas mov (bad) out push aad sub mov sahf popf inc (bad) (bad) ds jecxz fdivrs nop popf dec lea rcll pop mov or cmpl out push jmp pop addr16 xchg mov popf inc and xchg mov adc jl sub or jle repnz pop fstpt repz in and mov and popf and stc je (bad) (bad) pop pop mov add stc je or sarl cld or pushf jl sub jns loopne push lods inc lods outsb xor lea and popf and hlt sahf ret adc lea sub jnp jle,pn repnz jge out mov lcall insl mov repnz data16 (bad) ds loop (bad) and ljmp cmp and mov dec cmp jl and jg repz cltd daa insb mov jmp mov popf and xchg leave and imul das mov mov rorl mov insb (bad) inc xchg lahf arpl lods add lcall sarb push sub jnp das andb sub jl loopne push mov in jmp mov push rorl mov mov popf inc and xacquire or sarl sbb pop jle and aam fwait loope addr16 and (bad) pop cmp gs lea mov or sub push ds ss cmp pop push push mov lcall xchg mov popf gs mov hlt sahf ret xchg fdivrs std lahf arpl lea jecxz mov out push mov or cmp dec pop mov lcall movsb push dec insb (bad) xchg data16 lock fs mov xlat cwtl loopne mov push rol jle sub xor inc pop mov lcall mov jmp mov xchg lahf inc (bad) (bad) cmp (bad) and sub (bad) xor mov pop pop (bad) cld or fs imull pop fstpt loopne push lods inc iret or call jl sub pushf data16 mov sahf loop mov jns sub add jl das jge repz jp loopne out and stos xor jmp mov mov popf addr16 mov aad loop je xor sub sub adc xlat jae out mov cmp and das pop fdivs repz cwtl inc leave add mov and pushf gs ficom (bad) jg sub (bad) jl and cmc das pop fistpl inc mov mov out xchg mov sahf and hlt jbe push rol jle sub pop xor cmp pop pop inc mov lcall dec das pop fdivrs loopne push inc iret add dec insl (bad) (bad) and sahf imul (bad) je adc jl sub sub pop ss and and pop pop inc push roll inc iret or in jmp mov xchg lahf dec and xchg (bad) and imul cmp daa das jle repnz jns repz in sub lea (bad) popf and jmp mov pushf gs (bad) pop aad loop xchg or sarb cld or sahf jl and jge out push in daa insb lea in jmp mov push mov lahf push pushf loop je xor sub sub or jl and xlat jp out mov cltd dec lds aas call mov icebp pushf and cwtl rclb js dec mov lcall lds sbb add pop cmpsb dec mov mov out jno jb inc xchg lahf arpl lea nop les pop mov or jg hlt inc pop mov fwait loope arpl in ljmp lcall negl in imul cs sub sub or arpl and jge out mov lahf inc leave add mov lcall hlt sahf ret adc push cmpsl jns sub or jl and cmc dec sbb mov lcall xchg mov popf inc (bad) mov shlb xor sub sub add cmp sub jae out push out and and dec pop mov out mov lcall mov (bad) popf data16 xchg mov (bad) (bad) pop pop mov das mov aam xchg repz out and movsb xor mov std lahf and mov jg sub or pop ss cmp jns loope arpl rorb xchg sub addl mov and sahf data16 mov xlat cltd loopne mov or sub or jnp cs jl inc sbb mov cwtl and movsl cmp call fwait and pushf gs xlat cltd loopne xchg or sub add cmc inc and jns loope push lods sub mov test hlt sahf imul fist (bad) es lahf addr16 (bad) cmp je or sub daa and (bad) pop pop inc mov (bad) cmp call xchg sub popf fs ficom mov sub mov xlat js loop out and in mov lock and stc je push rol jle sub add xor mov call sub or jle and repnz pop push push push in and movsb aas call (bad) inc xchg pop negb psrlq imul call and mov xchg repnz mov addr16 mov icebp lahf and lcall sub sub add cmp sub jp loop dec cmp cmp pop push push push aad inc lods outsl push dec outsl mov xchg lahf dec and mov or sub add cmp and jp loopne arpl in in (bad) xchg push arpl (bad) xlat cltd fist cmpsb jns sub and (bad) jbe hlt mov cltd and stos cmp jmp mov imul ds push gs mov xlat cltd fist lds mov or pop setle sbb mov cltd and mov cmp shrl mov or mov adc (bad) jnp loope rorl dec mov std pushf and fdivrs repnz and aad loope mov jle sub ds jg hlt dec pop mov in mov insl addr16 sub lahf and xchg mov or lds mov or pop adc fdivrs loopne fs daa insb mov insl mov std lahf arpl loop mov jl sub (bad) jge (bad) xor rol pop pop mov or aas jle,pn cmc dec sbb push jmp cmp jae push mov lahf push cmpsb ficom (bad) pop pop (bad) decb jge,pt xor and jp loop gs inc iret or rorb xchg sahf data16 (bad) cmp (bad) and rol pop pop mov or jge xor jae out mov cmp jl inc sbb mov lcall (bad) xchg imul cltd loopne (bad) and jmp jns sub or jg hlt dec pop mov push push mov cwtl mov mov hlt sahf push mov adc jl sub sub jns cmpl out mov cltd sub outsl mov inc lds stos xor in mov std lahf fs mov xlat cwtl loopne mov in push mov add cmp and jp loopne rorl test mov lcall hlt sahf ret divl jmp js das sti add jl and jae out mov mov dec insb mov lcall shlb movl aam jecxz mov psrlq jg sub or jp and inc sbb push aad and fwait mov imul cmpsb fist cmpsb jl sub sub inc pop xor repnz pop pop inc mov lods sub mov nop popf dec shrl je xor sub sbb sbb xacquire in imul and fstps inc push in inc lods outsl cmp jb xchg xor lea loope mov jl sub or jge repnz pop mov lcall stos aas jmp (bad) xchg mov lahf lahf inc and cmc test xor sub lea or jp das jge repz jge out mov cmp cmp inc sbb mov lods inc jbe pop imul jbe lcall daa negb in push cmpsl pop pop mov xor inc add cmc sub jp loopne addr16 and (bad) xchg arpl lea ret xchg (bad) and imul and repnz js loop aad sub outsl mov inc lds add insl xor jmp mov repnz data16 (bad) pop aam loop (bad) and rol jl sub push jp,pt das jle cmc inc sbb mov cltd and jmp mov daa lcall xlat cwtl loopne jbe (bad) (bad) jle sub pop xor cmc and js loop aad dec lds pop imul jbe test lcall sub (bad) mov lock fs (bad) pop aam loop mov psrlq jns sub push jl,pt and xlat jge out push rorl insb mov dec insl mov nop popf dec and stc je or (bad) jg sub das pop jns jle,pn cmc sub jg repnz lahf dec lds ds nop mov sahf fs (bad) pop sti nop les pop pop (bad) std das pop jge (bad) xor imul cmp add hlt inc pop mov lcall or call jl sub sahf push pushf loop xchg xor sub sub or jge xor repnz pop mov in and stos cmp call xchg sub add cltd fist (bad) jns sub or lahf jl and jbe hlt mov cmp jl inc sbb mov cltd inc leave add rorb pop xor and xchg leave and sarl decb jge,pt xor hlt inc pop mov cmpsb dec mov lahf sub mov icebp pushf addr16 mov aam jecxz mov psrlq pop pop lea sub inc add mov in sub mov sub hlt push roll dec lds cmp call pop adcb negb (bad) (bad) js das sbb pop jg xor mov out dec lds aas jmp outsl mov test nop popf dec and stc je or (bad) pop addr16 or jle and hlt dec sbb mov mov out mov lcall aam sbb pop adcl xchg (bad) and rol js das sti add jg xor repnz pop cmpsb dec mov fwait sub mov popf data16 (bad) cmp mov or sarb das pop pop movd cmpsb dec mov lahf sub fwait mov imul sahf ret sbb fsubrs std insl fnsave je push rol jns sub add cmp pop cmpsb inc push out sub mov pushf popf inc int3 mov aam jecxz xchg (bad) sarb call das jle cmc sub jp loopne addr16 (bad) xchg imul stos daa aad loop je or sub sub jl das sahf jl and jg add add cmp add (bad) jbe repz lods inc leave add mov fwait and lahf push lcall (bad) pop pop mov das add and aad xchg repnz lcall mov xchg lahf inc (bad) mov shlb adc jns sub xor jnp jle,pn cmc sub pop push push mov mov iret mov repz jmp pop imul xchg mov lock and xchg mov jl sub xor jl and and jl loopne rorl jbe ds insl mov cld popf fs mov psrlq jns sub andb sub jae out push aad and dec insb mov lock and fwait mov mov xchg lahf dec and mov xor sub sub das lcall fs hlt inc and jge out mov cltd inc jbe xor (bad) lea lcall mov or (bad) pop pop mov xor jge and xlat pop cmpsb dec mov lods and stos aas jmp insl mov lock fs (bad) pop aam jecxz je call sub insl fnsave jbe or mov xor pop ds jl sub pop cmpsb dec mov fwait sub mov push mov pop negl psrlq pop pop mov or aaa xor mov addr16 mov pushf popf inc shrl je or lds mov das pushf jl dec pop mov sti add jge and repnz sbb mov lahf and jmp push mov lahf arpl mov aad loope mov xor sub sub add jl sub pop pop inc push aad daa insb mov insb (bad) xchg imul cltd fist mov (bad) cld or jge repnz jl loopne rorl mov imul jns repz cwtl inc lods outsl xor mov lock fs lea cmpsb ficom mov das sti add jl inc and jge out mov lcall insl mov lcall xlat cwtl loopne mov xor sub lea add jl inc and jbe hlt mov cltd sub vfrczss icebp pushf shrl sbb cltd and (bad) fwait loopne mov pop mov pop adc aam xchg repz in inc leave add mov arpl int3 mov shlb or mov sub pop add xlat jns loope roll and dec (bad) push mov lahf addr16 aam jecxz mov out push mov insl fnsave leave and rcrb sbb push pop adc repnz pop mov aad and dec (bad) xchg xor stos add fwait loope je in imul and mov pop inc push out sub (bad) push mov xlat cltd loopne jbe psrlq js sub sub jge and aam test add add repnz and pop cmpsb inc push out sub mov icebp pushf addr16 (bad) pop cmc pushf ret std or lds sub or cmp and jg repz cltd inc iret or rorb cltd and popf gs mov cwtl fist sarb push sub pop adc aam out mov mov jmp mov sub arpl call data16 icebp pushf shrl mov rol js sub or jge xor mov fwait loope jmp cmp jne push xchg hlt sahf imul jecxz je adc jl sub add jnp jge,pn repz and jp out mov lods and stos aas jmp lea icebp lahf addr16 aam sbb test lock fs popf loope leave and rcrb decb aas jge and fstpt loop in and movsb xor ljmp xchg lahf inc and loope mov or sub sub jge and aam out mov cltd inc iret add addr16 mov icebp pushf push cmpsb fist mov insl fnsave xchg (bad) (bad) jl sub sub inc pop xor hlt dec pop mov push mov in ljmp std pushf arpl jecxz je xor sub push sub jp and repnz pop mov fwait repz lods and stos push dec insl nop mov popf inc (bad) (bad) sub or sub xor pop adc aam test add or and fistpl push mov cltd inc leave add mov std pushf and xchg mov or rcrb add cmp cmpl jmp cmp call in (bad) popf addr16 mov cwtl loopne je (bad) shrb decb jp,pt das mov aam xchg repz in and stos cmp xor addr16 sub mov nop popf dec and xacquire or lds popl or ds fs hlt and jp out mov lcall mov xchg lahf dec and (bad) and rol pop pop mov lahf jl and jnp loopne push xor (bad) mov repnz data16 fidiv jb pop xor push lcall mov (bad) pop adc pop pop inc mov mov in ljmp cld popf fs jecxz mov jns sub or mov (bad) pop cmpsb inc mov insl aas call push push lcall sarb std insl fnsave mov pop pop mov or fs hlt and jl loopne aad mov insb (bad) inc xchg aam jecxz (bad) and rol pop pop mov or and jns repz jmp pop imul push imul cwtl (bad) xacquire call sub ss (bad) hlt sub jg add push jl,pt and mov fs inc iret add jmp mov icebp pushf push lcall sub sub or pushf jl and pop push push mov fwait sub mov lock and xchg mov or (bad) jg sub or jl repz pop mov fwait loope aad inc iret or call sub fs and mov (bad) inc xchg pushf addr16 rcrb pop pop mov push ds adc fistpl inc mov lahf sub nop mov pushf data16 hlt jbe or sarb std das pop jl and xlat jns repz out inc lods outsb xor lea jl sub popf gs mov jl ficom and pop shlb push rol jns sub sub arpl and inc and js loop push lods sub mov lcall shlb out push mov (bad) pop add pop pop inc mov lcall nop mov popf inc and xchg leave and rol jle sub aam jecxz mov call sub adc fnstcw mov stos ds bound and xchg mov or (bad) jl sub (bad) jl and hlt inc pop mov pop inc push jmp ds mov std pushf and mov push rol pop pop (bad) call and repz jg add sbb and mov in inc jbe pop imul jbe andl lahf shrl jbe push rol jl sub or and and pop pop inc mov lcall mov repnz and lcall (bad) jl sub push ds add cmc sub jnp loopne fs and mov sub cbtw inc shrl call push addr16 mov cmc pushf rcll pop pop (bad) ljmp add xor cmc and pop pop inc mov lods dec lds push dec insb lea sahf popf inc and xchg mov out push mov das lcall jg cmc and jl loopne roll inc iret or call push and jl fimul and sahf data16 mov (bad) fwait loope je xor sub and sbb adc fstps mov cltd inc iret or in ljmp pushf popf inc (bad) lea je or lds sub push aas jg xor repnz pop cmpsb dec mov lods inc lods outsl cmp jmp mov lahf inc (bad) (bad) cmp je or (bad) jg sub insl fnsave je push rol js sub add and mov push ds mov hlt sahf push sahf jecxz mov or (bad) js sub or inc add aam out push in inc iret or rorb pop xor push mov xor sub mov sub jg xor xlat jg add sub jl and fdivrs repz mov jmp nop mov popf inc and xchg mov xor sub mov jge repnz jns loope aad mov push xchg hlt sahf push pushf ret push out push mov add jl inc and jns loopne fs daa insb mov dec mov sub out and call pop xor addr16 mov hlt sahf ret push call sub sub jge xor (bad) pop push push push jmp xor in mov xchg lahf inc ret cmc pushf ret lock jg sub or jl das sahf jl dec pop mov xchg repnz cltd and stos xor jmp mov nop popf dec and dec (bad) xchg mov hlt sahf push cmpsb ficom sub sub add add (bad) pop push push mov lods and jmp mov and pushf push pushf loop mov or (bad) jg sub add jge and aam fwait loopne out and dec mov (bad) popf data16 (bad) pop aam loop mov js dec mov cwtl mov rol jle sub add hlt dec pop mov out mov mov jmp outsl mov lcall pop shlb (bad) (bad) pop pop mov das add xor jl out mov mov rorb mov cmp sahf ret and imul xor repnz jg cmp mov push aas jge and (bad) jg repnz cwtl mov mov popf inc and xchg mov push rol pop pop (bad) cld or sahf jl and jl out mov lods dec lds pop imul xchg (bad) inc xchg sahf imul rcll pop pop lea andb sub jp loop jmp xor or pop fstps inc mov cwtl and stos ds imul stos and cltd loopne mov (bad) (bad) pop pop lea and mov fwait loope roll inc lods outsl pop addr16 (bad) xchg mov nop popf dec and divl push cmpsb pop pop (bad) decb arpl and hlt inc pop mov out mov cltd sub mov xchg popf and ljmp lahf lahf inc (bad) lea cwtl loopne jbe in imul xor repz pop push push mov outsl ds nop mov pushf and nop ret xchg mov js das sbb pop jle and fstpt loope arpl imul xchg xchg lcall sti nop (bad) xacquire or (bad) js dec mov fwait loope (bad) and rol pop pop (bad) cld add and inc pop mov xchg repz roll and call in (bad) popf and pushf ret (bad) call sub pop xor and das pop fdivrs repnz lods inc lods outsb xor ljmp icebp lahf push cwtl loopne (bad) and rol jg sub das cmpl cld add (bad) testl mov lods and ljmp nop popf dec (bad) lea mov or lds sub or mov (bad) jp loopne in inc leave add call imul sahf loop mov jg sub das pop jl and aam out push jmp xor or sbb mov cwtl daa insb mov insb mov lahf lahf inc (bad) mov xlat cwtl fist lds sub or adc xlat pop pop inc mov stos cmp jmp mov sahf fs mov aam jecxz mov xor sub std das add jl lock jnp loopne fs inc shrl jmp mov icebp addl mov lahf arpl stos daa hlt sahf ret xacquire psrlq jle sub xor mov push lods daa insb lea rorb and pushf shrl je call mov add jge and pop push push mov mov rorb and pushf arpl lods add mov xor xor out mov and add aad jnp mov in aas shr (bad) pop mov and hlt scas mov out push pop xchg jbe adcl adc sub dec leave dec pushf pop xchg sahf sub add pop mov sbb lret cmp lret (bad) jecxz cmp in outsl clc imul iret (bad) inc cmc aaa sbb je int dec cmpsb (bad) fistpl cltd pop popa sub jmp icebp scas mov jno cmc clc scas (bad) stos adc pushf mov ret imul sbb cmp jecxz inc adc ror lds fdivrs scas dec mov mov das imul dec scas (bad) cmp jno dec in mov fistpl pushf push dec push sbb ljmp xor cmpsl cmp adcl in or or in loop push push adc arpl mov (bad) cmc clc scas (bad) stos pop mov lahf mov ss add ss roll lahf aad cwtl iret in in hlt sbb std pop mov dec lock push or xlat inc fadd clc test jnp cmp dec add mov call loopne nop int dec cmpsb (bad) fistpl pushf push dec push sbb ljmp icebp mov addl or mov (bad) outsl das int3 push les pop in in loope mov (bad) cmc clc scas (bad) stos and add inc xor inc popa pop ret into jl mov dec sbb cmc testb (bad) in cmp jae sbb loopne mov push xlat (bad) cld ljmp mov push repnz (bad) leave pusha (bad) sub int3 leave cli mov rcl out and sub push add jecxz cmp into insl call or cmp jecxz inc adc lahf mov lahf clc test push sar push fidivl lds pop adc bound add and mov insl insb push sub add cld test leave push xor pop in or jge add push mov sub repnz aad les mov lea cmp (bad) stc lret mov test dec testl or lds test fisub ret mov lods adcl adc cwtl out scas mov stc (bad) dec test push adc dec xorl mov inc inc mov das imul scas mov cmp lret cltd inc jno cmp in loope mov (bad) cmc clc scas (bad) stos sbb lods sbb std pop mov dec mov shll xor inc mov das imul mov out test iret inc adc mov shl cmp or stos sbb call repz (bad) xor jmp mul adc aaa sub push add jecxz cmp aaa xor scas mov in inc (bad) fldl mov mov or adcl in or and pushf push mov push aas lds fldt mov (bad) cmp cmp xchg shr mov cs xchg aam fcmovnb int mov (bad) and (bad) cmc test add xor ljmp and pop push ss dec cmpsb ror push xlat jg fstpt or movsb ror insb pop scas (bad) sbb ds xor jo movsb out flds hlt inc push loopew les and (bad) jmp cvtps2pd outsb pop pop ret subl insl mov (bad) add push cli mov aad and scas xor jle push (bad) cld push push push mov ret testb jg cli sub iret sbb and icebp sti sbb add jae test flds cld xchg mov adc mov jl into movsl lods adc cmpsl fadd mov mov sahf in push push push imulb or (bad) loopne pop outsl pop test js pushf cmc pop mov inc sti cld in pop in lea push aaa pop mov dec test fstps or xchg sahf inc sahf mov sbb lret insl pop fsubrl jbe and fistpll mov sub dec mov adc xchg outsb push pop ss aad adc (bad) push sti and inc (bad) and daa mov cmp sarb dec and lret mov xor cmc fstpt (bad) or xchg scas frstpm(287 (bad) pop mov bound mov mov test mov push adc lret mov cwtl sub pop and std sbb icebp call mov rclb inc sbb (bad) adc or aad cmc aaa mov loopne in icebp cmpsl mov inc hlt inc cmc cmpsl sub mov call sahf mov sbb sbb mov pop adc xchg loope subb dec push cmp push mov out iret movsl xor nop sub lret les lods sbb inc mov fisubl (bad) mov cmp xchg sahf repz cs dec jo cs aaa mov les leave xor mov rcll or in in pushf and sbb int3 inc and movsb mov fimul lahf xor or adc dec pop sbbl div jp rol xchg stos cmp repnz jbe (bad) jg loopne xchg loopne pop lahf aad sti cmp sbb xorb fnstenv pop adc jbe movsb pop sub dec stos xor enter divb stc xor mov pop add or inc mov push add sbb scas mov (bad) icebp ds push xchg xor insb xor or sarl and out fist lock mov out shll mov jp cmp ret testl inc add icebp jns xlat test mov xor fdivr lods dec mov repnz push cmp loop add test mov test add ss idivl lea add and pop int3 and (bad) adc (bad) add dec and test ret and lret loope cmc mov shrl mov fnstenv and popa xor popf iret into or mov sbb sahf mov sahf lret (bad) int3 pcmpgtb cwtl enter or int xchg push and xchg xor call (bad) add rcl pop mov push jb subl int mov mov sub inc iret lahf mov cmp cs (bad) mov dec in and adc sahf test jg in or sbb repnz inc pop divb out notl int (bad) sub push loope mov xchg sahf mov pop cmp ffreep mov in negb loopne stos repnz pusha (bad) xor cli push mov push dec inc mov adc insl negb dec repz scas in cmpsb iret into or add cltd pop push aaa sbb and in inc aas or sbb repnz cld lods mov add test push adc testl mov pop add int sbb jne cmc and int mov cmp mov mov add sarl mov xchg fistp cli mov mov test inc mov adc cmp push or lds or push inc outsb (bad) sub in push cmpsl stc int and cmp push aas pop insl sahf fcmove jmp (bad) push or mov leave scas orl sub lods pusha xchg push inc or xchg mov call mov jmp sbb add ret cmpsb sub mov test mov pop mov mov mov and pop inc subl xchg xchg lods jge sub pop sub stc jmp iret stos in mov pop arpl xlat into sbb sbb (bad) sbb repnz xchg mov into es push jnp into int3 sub adc movsb lods mov iret inc adc (bad) out xor push xor mov pop cmp test sti dec lods test adc roll test test mov mov repnz mov ret mov pop ss imul mov jbe or (bad) cli mov iret inc xor addl fnsave mov out add in out aad xor xchg xchg andl inc push dec frstor inc add xchg dec scas push divb jo mov fucomp popa mov test dec test (bad) push test or sbb test xor loope aam add ljmp in inc cmp repnz (bad) repz scas add scas fsubrl cmp adc aad mov mov lahf mov jmp mulps pop pop lea adc mov les repz and movb les loopne mov sub lret lret repz pop cld jecxz sub pop and cld cmpsl rol xchg int xchg sub inc cmp cmc mov inc push into push push fcompl fstps jg into mov addb and xor mov cmp fnstcw lds movsb add sbb repz lcall stos push movb xchg mov pusha inc sbb add aad lret adc mov int3 aaa (bad) mov xchg dec stc test mov sbb cmp je pushf int3 call cmp inc xor (bad) dec xor stos sub jne jmp scas mov inc fincstp cld mov icebp jp bound or stos mov add enter mov push out dec movsb (bad) fucomi leave (bad) cli push bound mov jle dec lods mov xor xchg lods (bad) jle dec sahf das jo call push adc pop xor movsb out (bad) repnz mov push jecxz (bad) into mov test and les jno fdecstp ljmp cmpsb sub inc add ret in and shrl (bad) mov or mov sub sbb add mov jle push inc idivb aam mov movsb hlt inc subl mov stos push cmp fadd sub push sbb iret adc (bad) jl and rclb std fstpl nop idivl subl mov arpl push and mov xchg adc jg aad pop pop lock push or (bad) or jp adc popa cld sub push xorps out insl adc out movsb out ret inc inc and fwait shlb adc dec roll outsb movsl adc rcr (bad) sub loopne sbb loop stos inc mov rcll lret out (bad) dec sahf jnp pop ret push sbb jl test pop xchg int3 mov sbb push or add lahf andl push into sbb (bad) mov mov out and push sub (bad) sbb mov and lcall jecxz add movsl mov cmp push inc pop adc add cmc and inc adc iret sti (bad) fs lods sub inc mov test flds pop sbb cmpsb lock cmp mov mov mov shlb pop dec or pop pushf fdivs in leave rcrb mov fbld inc push sahf not fnstsw pop in jl jg xchg and sahf mov xchg out lods sub fisubrl movsl dec pusha and test xchg inc repnz add mov mov scas (bad) in or or mov sbb adc sbb lods push (bad) aam inc aas in push sbb sub hlt cmc out jbe inc mov es add out (bad) shl lds adc sub leave cli sub fs sub out cmp bound or mov add mov call sbb iret pop adc lea dec jl push int3 out into les and aas sbb lret lret mov or push cs lahf cmp or out repnz fs sub pop inc pop aas jmp cmp (bad) out and xchg dec inc fwait or data16 adc insb data16 ret into js rorl mov adc les adc jl daa dec add loop imul add or mov pop xor push inc idivb cmc mov rcr stc loop sub pop cmp sarb out lret ljmp cmp mov push cmpsl mov fwait outsl mov mov pop test sub leave mov cmpsb aaa sahf aam inc sub ret (bad) mov adc aam inc sub ret (bad) mov or sub in (bad) mov mov pop inc fs xadd sbb push dec inc and mov lods sbb es inc pusha cmp or out es mov insb in in sbb xchg push inc sbb pop daa (bad) (bad) icebp lock dec repz test mov repnz imul lea int3 test dec dec cmp mov aad and push and orb mov mov mov cmp push repnz pop leave cmp in inc jne test (bad) lods pushf fwait (bad) xlat icebp cmp dec mov cwtl mov dec push lret sbb cli data16 mov push pcmpgtb aam inc jecxz,pt add (bad) adc aam mov int3 lret xor mov fidivrl pop sbb cld in mov push shl sub xor mov (bad) sub loopne sbb mov cli inc imulb cmp sub test cmp aad xsaveopt push out dec scas ret in or pop in mov ret push jl js xchg inc imul mov and loopne dec sbb bnd aad hlt sahf cs imul in and pop xor pop xlat (bad) push adc test mov iret insb mov inc add mov dec push cmc inc cmc cmp adc mov dec enter (bad) add mov cmp cmpsl lea test jg fs mov pop int3 mov int and jne and enter sbb repnz pop fmuls mov stc xchg loopne mov inc repnz inc cmpsl les sbbb scas andl pop or (bad) mov stc sahf mov pop cmp iret sbb rolb scas jae imulb mov push sbb jo,pt and (bad) into nop dec sbb xorl and cmpsb sub xchg cli (bad) mov flds lods mov push movsl mov adcb arpl hlt push into jns push push out (bad) fistp or loopne dec loop pop adc mov mov pop pop dec aaa out inc push mov rcll adc xchg out shrl cltd pop dec inc add repnz or xchg xor sub sbb mov sbb jb or fstpt aas enter inc (bad) xor or inc mov adc pop push add add pushf pop outsl pop lahf lret push cmp mov xor dec jo out xchg shlb les and add loopne jmp rorl imul shlb push dec lods (bad) call jge lds or mov inc test cwtl pop notb out mov mov fs pop in mov fwait sti inc cli sbb pop fstps ljmp mov inc in lods fisttpll mov js sub test rcrb call push add mov adc pusha (bad) sub sub loop in xchg out fcoms xchg lods in sbb mov ffreep mov pop sbb adc push xor lret hlt jbe testb push sti addb sahf pop in scas sub sbbl push je (bad) sub inc jl call dec mov imul in pop and dec jne jne and addl inc pusha pop test js dec add rcll paddsb leave inc insl js outsl scas icebp out pushf repnz xchg dec inc jg std adc out jecxz mov cmp mov enter xchg pop cmp pop inc jle (bad) or icebp push dec test gs add in leave xchg and dec sbb outsb adc loopne mov imulb outsl (bad) push sbb adc outsb scas lods mul mov das mov jae mov int3 call repz or adc xchg and jmp jns out fstl in fidivrl jle mov ret repz xchg add dec push mov bound pop dec sahf das imull add ljmp pop pop aas fs lock mov push mov push cmp pop cmp es sbb aad inc (bad) popf add imul sti inc inc cmp jg and sti mov and jno push (bad) sbb (bad) repnz pop xchg outsb cmp xor xlat xor mov gs and add jmp add mov or mov adc pop jge cmc aas fsubp repz and mov dec mov pop (bad) icebp push dec lods or (bad) push inc outsl cli je negl or mov lock or scas nop into xchg mov test inc cmp pop jg (bad) in pop (bad) fdivs xor inc push jns enter mov int3 fnstenv int3 adc out mov out or mov ja mov enter mov bound dec dec adc in add jne xor add jmp add loope jns cmpsl dec outsl cmp dec (bad) fcmove jae push dec ja sbb pop loopne xor or inc adc cld in clc add mov adc out iret push loope xor cmp cmpsb cs push mov in flds xchg addl jnp jp lock leave pop cmp stos pop js lcall imul repnz repnz pop push gs shrl lret adc xor sub jo clc add test mov ja inc or sti sbb push cmp cmp aad add xchg inc push push dec lahf sahf (bad) mov enter xchg add std dec jle (bad) ret mov cmp outsb mov cmpsb pop jg xor dec mov int push xor cs les hlt fs ret jns mov cs hlt cmp divb add jp movsb inc fcoml cmpsb rorb and pop mul clc jmp cmpsb dec mov mov mov jo xchg xchg and out dec inc insl cmp sub and shrl xor (bad) aam adc loope add hlt movsb xchg inc outsl cmp test ss cmp mov repnz jmp lods or movsb pusha inc dec inc pusha mov stc and jg mov dec in hlt lahf cmc mov adc xchg or pop cmp pop jle mov icebp out cmc pushf sti cmp jg inc jns add sub adc inc add je sub inc cltd add sbb xor addr16 jg std in sti cwtl add xor inc or add xchg lods test add loop lds test dec jnp jne (bad) adc icebp push inc test repnz dec mov loope add mov cmp outsl inc mov stos andl cltd or xorb adc ds mov aam mov jb push mov js cli ret scas xchg cwtl inc sbb sbb pop adc xor dec pop lods inc (bad) ds mov jge cmp sti cmpsb in (bad) aad lods fnstsw and xchg je xorl push stc cmp testl clc in aas orl test add xchg aas (bad) sbb stos cmp out outsl out pop jp ss or jle (bad) out cli popf hlt mov dec loope cs out jecxz lods cmp mov addr16 hlt mov push je and push scas xchg das out imul adc mov and faddl mov fcompl adc mov ret fnstsw xchg outsl sub call jmp in leave add mov dec jle xchg iret stc out xchg cld pop or mov lret sti out mov mov ljmp aaa adc rcrl jmp lret mov outsl cmc aas fs pop xlat jmp mov test xor jbe ss test sub add mov fildll lock insb jmp mov test das test push mov or xor add jle stos mov dec add adc mov cltd movsl movsb inc mov adc add mov jg aas mov in pop mov (bad) add mov fucomip sarb xor add (bad) add mov xchg sbb orl xor mov dec inc mov add pop clc mov movl cmp xchg test jns outsl inc mov xor mov adc dec js les inc loop sarl mov lds adc idiv out xchg mov xor js mov into jb leave popf add addl cld sbb call adc inc jp lds test mov mov mov jno mov clc lahf divb scas sbb outsl cmp xor cmpsb or fbstp dec add or xchg cmpsb in fs push inc bound jmp iret cmp inc fcmovnu lea pusha add mov push stc xor insl out and xor or fwait dec mov xor sti int (bad) call inc mov in dec cmp lods jle or lcall sub add mov mov fidiv sbb cmpsb jle jmp xor cmpsb js into jge mov xor lret in adc out xchg cmp call mov fmuls aaa mov mov inc or std gs or jne aam lcall jl test add adc xor xchg cmpsb fdivs jns mov lds push adcl mov or (bad) scas adc js xor adc mov ljmp ffreep add xor (bad) pop repnz cmpb lods sub lds sbb mov xor notl roll mov fnstcw xor dec (bad) cmp test (bad) adc mov mov pop xor xor aad ret and repnz daa jmp xor push xchg cmpsb fnstenv cmp mov mov sbb cmc mov fdivrp iret push push cmp pop popf and mov or add pop push xchg cmpsb cmc inc inc cmp les add pop mov les add fsubrl inc inc or movb loopne lret sbb cmpl sti add jb test faddl lea bound xor adc mov int3 test mov mov adc cmp insb push std push fwait jns pop pop push add pusha mov jecxz popl ror mov (bad) sbb and pop pop xchg test cmpsl adc cmp pop test js inc inc xchg fbstp inc cmp xor mov xchg cmpsl (bad) xor (bad) cmp and mov cld adc test mov mov stc mov mov jle jbe mov (bad) and pop in int call bound add lret jecxz add ss mov mov mov mov sub mov pusha sub outsb jnp mov jp jecxz cmc pushf lock xchg divl ja sti in stc popf cli cmp add cmpl inc mov ret lret in xor addr16 add std jmp cwtl sub lret repz jg mov dec adc add push (bad) mov pop push xchg cmpsb in push js mov sbb inc rcll add test jp sbb add insl adc sbb arpl dec cmp loope and das or lea jae adc shr js pop orl pusha sbb jg,pn push or aas cmp stos loopne pop js repnz and inc divl jno xchg (bad) loopne repnz inc dec test les into out add mov gs std aaa push popa pop test les xchg mov divb xchg test movsl mov aad inc sti lcall lret mov lock insl xor subl aam jg ljmp test cmp xor (bad) notl sbb les push (bad) iret pusha pop inc mov cli xchg repz lods adc into pusha outsb add mov pusha cld xchg jns icebp loop fs xor adc pop push (bad) xor es mov sbb mov mov pop inc inc mov outsb daa push jno cmp std (bad) push test jge cmp jmp or sbbb pushf pop xchg or lahf cwtl popa sbb push sahf sub jno add add cmp mov adc orl in push test jno aas psubw stos aam and pop adcl xchg xchg clc mov js or notl popl inc test push test jle or cld adc cltd stc inc xchg and xor jno sub sahf xor or or in cld and dec dec lock xor xchg out ja dec cmp and (bad) push stc and ret js cmp xor shrb add jecxz jge inc pusha mov xchg jle lds lods test mov add add loope mov js pop cmpsl loope rolb subl lods dec dec sar out xchg adc add adc popa inc and add inc mov cmp push js mov scas mov in ret js and aas ret ss pop movsl cs outsb pop (bad) adc dec test test les xchg or dec inc sbb movl pop inc and ljmp jp (bad) icebp loopne push mov les xchg mov insb lods cmpsb mov mov jl jge cwtl push xchg jmp mov repz mov lea cmp cmp xlat mov js adcl adc clc inc mov and xorl cmc cmpsb push push mov into mul adc inc or jns in ret js sub add cs (bad) loop mov in les sub mov dec subl cmc out xchg loop add stos mov inc mov sbb or loopne lods test outsl lods adc pop xor lret test les (bad) mov movsl inc repz sub mov pop and shrl inc js mov mov hlt sub repz sub mov add xor fidiv out repnz xor jg mov push lods or lods cmpsb cmp xchg clc sub or push in sub movsb outsb jle cld enter mov clc xor call outsb xchg sub pop test mov je mov sbb add test (bad) push xchg aas cld scas push and jo add push or xchg sub mov int in cmp insl mov pop arpl and cmp mov lea arpl cli xor popa test and sbb int3 ret mov or outsl into xchg xchg push jnp inc inc pop and int mov push jno shlb dec inc jge test cmc pushf in cmp pop dec js push call in mov jnp sti adc popf incb aad push jg mov cmp cmp popl mov lock mov inc inc ljmp lahf (bad) and test and or je cltd sti loop (bad) aaa mov cmc int3 xchg lock cmp mov mov push jnp hlt sbb jecxz int3 fdivr (bad) jl jns test sbb or fidiv adc (bad) add mov push add push inc test cld xlat inc bound je mov test cmpxchg jge inc pop mov jae enter xor lods adc jo andl add adc clc add adc jg popf cld out or pushf es rcrl pop jg lock mov xor xor cmp cmc notl xor xlat inc bound jno imul popf mov push add sti inc stos dec repz sbb jmp (bad) out in cmp mov xchg js icebp jmp lds dec cmpsb psubsw lds sub add lahf icebp cmp pop cmp xchg (bad) adc popf (bad) stos inc (bad) lret js push dec add movsl fldcw das cmp test inc ss adc (bad) jle (bad) mov add inc ret maxps or int arpl mov data16 or mov cli xor (bad) cmp negb add pusha cmp mov in stc sahf add sahf or (bad) xor mov add xchg sub mov js mov loopne lock cmc xor fadds sub push clc aaa xchg aas cld (bad) xor test mov cli xor xor mov int3 hlt pop sub xor and xor dec cmp push pushf adc dec dec cs inc pop dec dec jbe stc in cmc cwtl out dec pushf push repz rcll and scas or cmpsl xchg popf faddl rcl arpl js mov fnsave mov add icebp in cmc cmp lahf or test push fstpt ljmp mov mov (bad) int sysenter mov mov xchg xchg stc cmp aad les xor repnz inc or fs (bad) divl adc fcmovnb out xor test data16 subl movsl xchg (bad) stc sub cmp daa mov lret push loope rcll int3 roll push ljmp mov mov sahf jecxz call imul xor cwtl loop rcll sbb out nop dec jno and (bad) mov addr16 xchg dec add lret mov jbe xor adc aad sti dec sub or clc lret movsb movsb cld xor jecxz dec xor into out adc push push pushf cmc pop mov test push movsb mov test test int3 or mov xor xchg ljmp ret (bad) cmp cmp (bad) ja outsl mov pop dec dec mov aad into dec es (bad) repz int popa bound sbb add adc cmc pop mov test cltd fidivr mov pushf adc inc dec xchg xor pop xor xor fidivr (bad) call pop mov xchg mov pop int test push mov pushf dec nop mov or jecxz in into int3 (bad) adc jb leave pusha cld int cmp scas imul adc or out sub into dec xor or cmc inc outsl add add xchg mov stos sbb fnstcw push pop test add push inc mov jl cmpsl inc pop push add dec aas sbb push sbb cmpsl adc jp out add and ret cld sub mov daa add push ss push popf aad xor mov pusha mov arpl jp xchg add sub mov jg repnz sbb repz mov cmc mov dec jg fs aas mov cmp sbb jle mov cmp mulb jb xchg (bad) repnz adc sub lret sub mov pop pop fwait sbb lret dec dec jo add push cmp jmp popa inc jns push std adc mov insb dec lods imul inc cmp sub stos push sbb call add scas icebp or popf and jnp inc add out or stc push dec pushf and orl xchg cmc jmp adc add in adc mov push mov or xchg adc cmp lcall mov xlat clc cmovnp push cmp mov or xchg repnz xchg pop mov push mov sub out lds imul mov (bad) not (bad) lock mov ret in ss loopne inc test or adc scas (bad) int adc aaa or sub scas nop lock in div rcl sub dec jb mov out mov xor xor mov in int3 or pusha cmc cmpsb and jp add (bad) and test cmpsb cmp adc jnp xchg mov fbstp nop dec clc cld sbb lret sbb sahf add add xchg dec and or (bad) ja xchg mov ljmp ret mov lret xor stos pop fs xor fwait idivl mov lret loope lds mov sbb popf mov out push and shrl aaa jge mov add or xchg inc or repz xchg add dec dec mov dec xor out loopne aaa mov gs into imul inc mov push mov jb fisttp mov (bad) movb sbb push sahf pop out (bad) xor ja fadds sbb and push jne mov popf popa andl adc repnz xor xchg pop inc (bad) or (bad) xchg push ja dec orl popa inc add push sbbb mov jp jb push data16 pop sub sbb dec dec jge jg popf out loopne cmp pop jb add sbbl dec rolb addr16 jg mov call push imulb add sbb pop xchg stos sbb mov xor xchg dec out add stc push cwtl daa fwait bound cmp adcb hlt mov pop adc push add sbb scas aad push and sub mov adc jmp or vmovlps out pop inc mov inc mov or xor sbbl pushf daa ss sub cwtl inc dec jno jo xchg adc cld add xchg stos add push sbb sahf testb adc dec dec dec test dec mov cmpsl sbb push xor inc (bad) adc in cmp sarl out adc icebp lods fisubl or (bad) lock xor mov inc sti scas add out pop pushf adc dec cli inc add stc inc mov cmpsb mov dec dec inc je sub inc xor mov jb mov push loope and xchg pushf (bad) adc outsb cmp and sub ja or sbb sahf adc outsl addr16 dec jge sahf inc imul sub (bad) pop insb inc add ret out mov mov sti loopne jmp inc in fisubl xor inc js (bad) push out adc (bad) mov inc jae sub mov (bad) inc mov xchg add fnop icebp mov cwtl xchg jp add push das dec cmp mov ja popf pop out xchg loope cmp pop pop inc xchg xchg movsl (bad) aam adc clc push xchg cmp rclb jmp test pop (bad) or push xor cmc mov incl inc fdivs mov sbb dec (bad) push xchg mov jp mov mov mov (bad) cmp mov lds and repnz in pop mov popa pop fs ljmp leave cmp test cmp lahf in aam or and dec (bad) lock xchg icebp jnp inc mov mov or cmpb pop mov js jno lods adc xor cmp mov aad fdivl dec sub mov jle mov jmp and shrb imul and jnp mov ljmp int3 (bad) in mov cmp aaa jge cwtl adc in adc repz clc stos sub ret mov cmp rolb mov ss iret stos test mov mov lcall push lcall or xor js outsb cmp mov loop cs push scas in lods (bad) iret push jns xchg icebp int3 idiv dec sub stos xor into popf adc loop ss dec ja sub popf clc hlt sarw or in pop leave stc or or mov xor xor out (bad) sti cmp les mov mov sbb add push inc sbb aad dec dec ret nop cmp les int3 push inc dec mov and mov stc inc and hlt xor cmp sahf push xor pushf add ds aas push jne shrl push sub jle imul enter mov lret dec call xchg stc push aad stc mov mov in mov roll mov adc jg in in out loopne rorb jle mov aad add mov add addr16 mov dec cmpsb je stc imul jp divl int or xor fdivrs call adc and je loop push icebp pop dec and (bad) stc bnd inc add jmp (bad) pop lds mov sarl jg adc add adc popf pop add mov clc ret add jp fistl sbb sub mov push lret aam push dec xchg test xchg je loop xor cld ret fild add in mov stos daa fcmove sub cmp push popf cwtl add fwait sub addb mov xlat jl cwtl sbb scas inc pop js mov xchg js icebp loop addr16 push mov sahf jns outsl sbb sbb jne add pop js xor out ds add dec outsl sbb xchg push xchg push out xor and jb inc inc das mov adc pop mov mov popf jno das sbb or push xorl aam sub add les xor cmpsb cmp sub add cmp in push pop js mov xlat jmp ss inc daa mov jge sbb dec xor ljmp int3 loopne out mov xor stc fcmovnbe (bad) sub xchg sub sbb mov stc hlt sbb jg mov sarl outsl jnp arpl orb stc or push sub dec xor std jp out repz divb or test mov dec mov sbb (bad) and in dec js sub push rorb out jp out lock jns adc dec or addr16 out cmp sti or mov inc ret call lea out lods adc popf jp (bad) adcb pop dec inc inc jno xchg jmp out xchg xor sti test or loopne push sahf or mov imul scas adc loopne xchg add mov insl mov test pushf ss lret cltd lret out push dec adc xchg sbb cmp movsb mov mov aaa and cmp push inc pop xor js add add mov xchg les adc xchg adc jmp in cmc cwtl add or mov in cmc cwtl add sahf or xchg mov jge mov xrelease mov in cmc cwtl add sahf pop mov sbb add sbb inc mov in cmc mov cmp adc sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add pop lock lods add mov (bad) cmc fadds dec mov inc xorl repz js subl xrelease mov add sahf or cvtps2pi clc inc xorl xrelease mov dec xor or xchg mov add sahf or pop dec xchg js add add sub mov and sahf or xchg mov add sahf or jg xor inc cmp aad in testl aas jl aad in testl and aad in testl repz clc mov xchg or movsl js add icebp xor mov pop mov mov push cld aam popf (bad) cmp in test ret cmp scas lock sti hlt (bad) xor pop mov (bad) aad cwtl sbb mov mov ud1 fucom push bound push aad cmc pop pop xor dec out or add push mov in (bad) cmp sbbl loope,pn and inc dec je pop and sub jg xor dec cltd data16 xchg cwtl test cli cli cs xor loope frstor add sub fwait out out jno mov fstpt mov packssdw loope xor jne inc outsl stc addr16 inc rcl jo (bad) fcmovne sub scas push jmp pop mov outsl dec cld fwait mov cld rorb mov dec sub out ljmp xchg or lcall sub cltd or cs nop xor or aad aam inc imul dec mov std outsl xchg fs sar xchg push cmp inc sbb (bad) jbe movb loope rolb out add test add aam mov pop jno aaa cltd cmc pushf fcmovbe mov sbb pop lods xor push les xchg and sti aaa pop out loopne and out adc jns cmp data16 add and and sarb or add js mov push inc mov jns dec pop and test fstpl or push ss lret inc imul js stos jno lahf mov nop push cmc or pop pop sbb sub push inc iret jl mov push loopne xor outsb inc (bad) rolb fldenv jl fs inc lea xor sahf pop (bad) ds pop or sub fcomps mov add sub repnz adcl or push (bad) loopne aam stos arpl or aad lods push cwtl add adc flds mov aaa cmp cmp jns sbbl dec jmp iret test pop inc pop jns adc xchg and pop xor andl rclb sbb sub push je (bad) fisubl sub push adc dec in sbb mov fistpll cld (bad) and lds in loop cmp mov sub loope lcall ljmp (bad) jns cmpsl imul push sahf xor jmp movsb das fldenv (bad) (bad) ljmp loope mov out lcall divb int3 pushf repnz xlat pop xchg stos incl xor push jg mov xchg movsl roll mov mov push (bad) dec popa pop jne pop dec mov scas mov popa or fiadd add test xor push mov sub jns adc lock in inc pop sub cmp popf mov inc or adc push add mov push movsb test ret frstor xchg fs cmpsl daa loop insl lret push sub (bad) cmpsb out (bad) ret andl adc notl nop xchg push and jnp test scas test pop imul fstpl pop mulb sar push sub push mov faddl subl sub je icebp cmpsb or hlt sbb pop enter inc inc mov adc shlb (bad) fdivrp add push cmp lock jg cmp push outsb cmp iret mov mov mov mov xor pop and fmuls push mov cs push push repz negb mov push inc hlt mov mov arpl dec sti and xchg leave pop sbb mov xchg adc cmc dec enter push ja dec jg jmp icebp fwait roll mov cld movsl cmpsl cli roll xlat cmp fisubr add jae add adc xchg xor mov pop lock scas dec jne lods pop jne jnp leave sarl dec add pop loope sub rorl pop fnstsw xor adc or cmp iret jge adc push lea popf cmp mov mov jns daa cmp sub fdivl movsl xor outsb dec push cli gs push or fld inc orl lret sahf nop jmp mov les inc insl sbb pop incb cmpsl jmp lods pushl add sahf push xrelease mov add sahf or mov mov in cmc cwtl add sahf or xchg stc icebp out not cld cmpsb pop xlat adc mov mov or arpl lds jmp sub aad adc sub xchg jle repz mov inc addl (bad) pop fldpi in sub add add sahf push adc aad test inc insl sbb and sahf pop aad jo xchg clc cwtl addl adc subb cmp mov in adc lcall add repz neg push mov mov mov adc lret add sahf or movsl sub stc jg sub cli scas jle repz mov jecxz or xchg sahf or xchg loopne out test jmp mov clc cwtl ljmp add pop loope dec aad mov jnp cwtl add sahf or xlat dec arpl jg jge daa sbb or mov test arpl sub cld lahf sahf or fisttp add add in or ds lods mov jg arpl sub clc enter inc mov mov cld aaa adc rcrl cmc int mov push adc pop ja es mov fdivrs gs pop insl repz jg popa idivb push (bad) mov int push stos cltd test adc mov aad js add add sahf dec jmp mov test cmp fldl ret jmp mov mov cli and push movsb sahf or xchg in xchg (bad) neg (bad) xchg jle repz mov mov sub aad jo mov dec (bad) cmp aas std add mov dec lods mov insl pop xor jmp add pushl add aas std add pop sub subl dec outsl sbb xlat or (bad) aas jae cmc cwtl add sahf or fistl js jg adc adc les or mov pop subl push lret pop shr js inc js add in or pop jmp push imul neg add mov mov add roll xchg test sub add jle jmp dec or in or mov fiadd ja xchg ja add push jl ja mov cmp lret add cmp cmc icebp bound adc and out je dec jne les call jne (bad) adc shll sbb mov push or inc pop (bad) insl inc nop testb jecxz inc sti jmp divb cltd (bad) repnz gs test push push ljmp (bad) rcll add cmp xchg popf icebp push jne xchg mov dec pop repnz inc push arpl cmp stos inc mov clc mov (bad) mov or dec dec dec sbb in repnz mov test ljmp lret xor test push or inc pop (bad) insl inc nop testb jecxz inc sti jmp divb cltd (bad) repnz gs xchg pop movsl mov shr lods sti in push push jno out jle jae pop shr lods sti clc inc in (bad) adc add scas dec cmpsb and mov les dec popa add repz xchg sbb stc jp or int3 fs insb cmc and lock xorb popf icebp push jno cmc sbb mov push loop movsl out mov scas insl lock mov les (bad) ret bound pop pop push and test faddl test xor in dec xor and xor repz lods iret jmp cmp repz xor cmpl ljmp lret call dec das aam fwait mov mov jecxz sbb pop inc aam mov ror lds xlat in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std inc xchg sub scas xor mov adc in std std jb mov icebp into xchg xor jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add pop dec repz retw jno mov add cmp jle sbb inc add inc xor jnp inc add add sahf or xchg mov in cmc cwtl add push or daa push int3 push cmp lcall add scas cmp in fldenv aas pop (bad) (bad) cmp lods sub pop popf mov call mov dec mov scas push adc xrelease or mov (bad) js and clc inc mov or add cmp sub cmpsl sub mov in xor push repz mov in stc addb or xchg mov out cmc cwtl add pushf or inc adc lock jnp inc jno sub sahf or xchg daa insb jne cmp in cmc fadds jno movsb mov inc add add sahf or xchg vpaddsw cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc clc add sbb xchg mov in std clc or cwtl cmp add lret lds xchg mov xchg icebp or sahf push repz cwtl add mov add (bad) lods fsubr add dec repz sub lods and sahf or xchg xor xlat mov mov loop jnp inc add jno cmc sahf add sahf sbb popf sub mov in cmc cwtl add pop mov lds mov in cmc cwtl add sahf or xchg mov in mov or mov cmp adc add xchg es xor mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg adc inc daa mov jecxz and inc cmpsb or fnsave sbb mov mov add jnp ljmp enter xchg test or push int3 test mov stc (bad) clc pop scas push and inc jle repnz dec mov xor jno dec push or xor cli inc jge push inc clc xchg fimul push and inc jl cld push dec xchg cmp dec push or xor pusha movb add xchg fimul push and sub inc jp negb shr (bad) xor jmp mov shrb popa cwtl push ljmp mov cmp xchg fimul push and inc js lock daa or ss xor xlat inc jno dec push or xor insb xor mov adc scas sub xchg gs mov dec in fwait mul rorl pop sbb outsb xor adc xchg sbb mov inc jg ljmp cmp or fbld int3 sti jecxz cli adc mov gs mov mov out adc roll insb inc push dec popf outsl into xchg (bad) cs jmp test int3 sti jecxz cli adc xchg jnp mov dec in out movsl out mov mov shrb (bad) (bad) dec mov fisttpl div jmp pop sbb push push add jle stc xchg fcompl (bad) jp sbb lea cmp inc ret repz maskmovq jne push cltd xchg push mov jle test das repnz inc jg jo bound sbb addr16 dec adc es xchg inc fucomp dec jno mov decl ljmp mov jne dec iret in loop or sbb hlt dec inc jg sub bound clc mov lods mov cmc inc std jmp xchg add testb sub xor lock popa mov fwait add and xor mov or add fdivl fbstp (bad) jmp jae cltd pop adcl jp inc push int3 cmp xchg sbb mov inc push inc jae lcall fcmove fldt push fnsave mov aad sbb adc push iret fwait in imul add or xchg dec push mov lret gs push xchg sbb decl loope cmpsl push movsb xchg cwtl or test repz or cld mov addr16 mov cld inc sbb stos iret cmp mov add or jbe xor loopne cmp push sub pop cmp pusha ja mov jge mov and push gs mov xchg int3 push outsb clc pushf aam inc push adc adc mov push pop frstor jge adc jbe add pop sub xor mov xor pushf sub inc xchg xchg pop sbb jle add popa pop ljmp mov add sahf hlt mov or bound fs (bad) cmp add lahf or xchg jnp inc mov add pop rolb jnp mov cltd lcall cmp mov adc sub or inc sarl test mov lods mov in adc (bad) dec xchg (bad) aaa xchg mov (bad) sbb adc mov test push xchg mov mov aaa and and (bad) popf jecxz cwtl add mov jnp inc jne std in int sbb cwtl or xchg sbb push leave fwait in cld orb pushf or xchg gs jp imul std cwtl or addl jnp jg repz lock add pushf or xchg mov cli inc cmp mov jnp mov sub mov sbb mov stos orb mov lret mov dec aad sbb jmp jle pop cmp in pop xor (bad) mov push into orb mov int3 mov idivb adc mov mov sbb loope jne sbbl xor shll fmull test adc push inc or xchg setnp xor out inc mov andb dec or out lock into mov add adcl jnp insl insb mov dec ret adc or inc xchg xor add addl jnp jg repnz cmc cwtl flds sbb gs jle icebp in out clc add sub inc outsl mov out sub and mov icebp xorl dec cmp loop add fwait sbb mov fs mov out hlt dec lea repz inc jb in (bad) clc adc lahf or mov lock and dec add inc add mov es or int xor mov out lods jbe cmp and fsubrp (bad) cwtl popa xor sahf orl ljmp sub dec popa add mov nop push mov inc jnp inc jmp clc adc jg push cmpsl sub popa adc cwtl jge lret xchg pop push inc imul out lcall mov or inc es int mov lret push insb inc sub repz insb fstpl insl aad in mov lret push andl mov jmp sbb in icebp fadds js cld mov outsb xor sub dec out and xrelease inc sub (bad) push sahf or subl mov add cwtl and sti inc push mov cmc cwtl add mov (bad) icebp in sti call cli (bad) cltd movsb xor mov adc or pop pop add inc jnp inc jmp clc popf cmp das mov scas cmp adc ds xchg lods mov aaa inc rclb or orl (bad) lock jb ret mov cmc cwtl push cmp aas sub sti xorb sub mov jnp inc (bad) xor out negb repnz mov jmp lcall sub mov cmp mov xchg sub dec inc test sbb add inc ja loopne dec adc subb es lds cmp cmp cmp mov (bad) out inc int xor sbb sbb pop in mov dec aam mov inc inc fistpll dec xchg inc adc and cmp xor xchg inc leave aaa push adc stc pop mov es cmpl adc data16 stc inc push xchg das mov mov shlb sti inc xchg inc mov sbb add ss dec cmpsb ljmp inc mov in mov int3 pop adc and je sti or enter ret sbb and inc xor or xor push mov sbbl test mov das jl les pop inc js sub cmpsl sub xchg (bad) sbb adc cmp jne pop stos mov rcll cmp mov dec or rcrl adc cwtl lods xor movb mov add push fs inc sti mov fadd push adc clc pop mov xchg movsb sbb inc lds push xor xchg inc adc inc inc adc mov aaa (bad) gs inc fnstenv cmp (bad) sbb fistl adc sub imul cmp testl ret cwtl push lds sbb in pop sbb inc cmp (bad) adc js xor and inc into dec stos out ljmp mov pop adc push fnstcw inc data16 pop mov adc js xor pop fs (bad) in inc fadd jmp lds fistl inc push int adc js (bad) xchg inc fimul out hlt xor imul mov lock in dec push test adc addb js cwtl inc lret ss pop cli ret dec clc and xchg inc inc leave and dec cwtl push cmp gs add stc xor xor mov pop pusha in inc imul mov stc sbb xor jnp inc add mov lcall inc add sti inc mov xrelease jnp inc add add xchg sbb cmpl cmc in cmc cwtl add sahf or xchg gs inc icebp mov in cli cmp pushf or (bad) xor inc add cltd lock fs fs mov int3 scas pop cmp fs add cli rorl inc mov add lret pop enter add xor iret lock lods jb push je inc xchg imul inc daa mov add adc test sbb sub mov stos mull xor shlb (bad) dec jl sbb repnz gs ss idiv mov int inc xchg or loope and daa sbb dec add in data16 and jmp adc iret stos ja push int mov cmp or shll xchg dec test or cmpsl nop cli xor shlb insb and mov mov mov or ret hlt iret stos ja push int mov enter jmp mov and int3 inc sbb outsl jmp jge les fimul arpl adcb mov jns in rcrb jo inc call and rcll test adc sbb fildl enter push adc shll sub mov sbb mov ret scas lcall data16 cmc mov mov shrl add daa (bad) xchg fwait cmc and sahf or ja add cwtl xchg lret inc icebp mov negb js adc dec sub call stos testl inc ret imul scas ljmp cmp sbb sbb pop mov arpl mov sbb xchg inc movsl xchg cmpsl sbb movsl mov sbb stos loopne inc cmpl aaa movsl (bad) or lds dec test add in (bad) dec bound (bad) in add lret xchg jle loop cmpsl mov dec gs sub mov jne add add xchg push or (bad) sbb sbb jb sbb movsb xchg add xchg push or (bad) cmp cmp xlat popa lret sar push lcall fist addl rcrb int pop lret jbe ret inc sub loop sbb mov fcmovnb sbb out out loop xchg cmpsl addr16 push rclb out movsl ret subl pop mov or (bad) stos cmpsl lahf int3 dec cwtl inc lea cmp (bad) stc lret mov test dec imull lock push leave mov in mov dec (bad) outsl sub inc call mov xchg cmpsl sub vpmuludq in addr16 adc mov adc jl sbb in add fld mov leave sub mov add add fs popa lcall negl repz clc sti mov out push add addl mov or mov js out lret fs mov test ds cld mov pop mov icebp adc add lds addr16 (bad) xor ds das and psraw imul out jae lock push or loope rol movb push cld leave adc (bad) mov xor bound sbb jnp sbb loopne mov push xlat and movsl jno lret mov mov mov mov xchg dec test add stc cmpsl fadd mov ficoml adc lahf lahf or scas in je mov xor xlat pop pop cmp xor repz mov call adc imul popf cmpsl sub push add xor xchg icebp aas mov nop les rolb and fadd jmp adc repz (bad) xor ret cld sbb push adc outsl clc je es push mov cmp sbb sbb loope push cmpsb clc push cli xor add or aad les mov mov sub (bad) pop mov (bad) cmc clc scas (bad) stos adc mov (bad) std inc jae (bad) push shrb out xor sahf out lret sub lret (bad) jecxz cmp (bad) jb (bad) cmpsl test (bad) dec std dec push enter xchg sahf mov jno and icebp xor xlat (bad) push push sbb cli into shll mov sub xchg xchg adc (bad) lea jmp in dec in mov aad jge out pop iret xchg out loopne or add (bad) stos jae mov shrl sbb mov push pop dec aaa out xlat ret dec rorl and pop aaa cmc pop lcall fwait testb fcomps mov push adc add enter sbb sbb adc or inc pop pop push std movsb es (bad) mov scas pop adc popf mov sub fdivs mov cmp push bound mov and mov pop test and int3 and out mov or adc xor test and aas sbb xor in mov or ficom adc lahf mov cltd push sbb (bad) lea int loopne mov sbb adc lock mov pop es stos fcomi inc mov outsb push sti adc mov ja pop inc ljmp stos mov push call ret into jl rcll push pop dec repz pop out arpl popaw movsl std pop mov dec mov xor loope xlat (bad) lock ljmp jle cltd xchg jl or push ss sar sarl pop js add int enter test cmp clc adc js push fstpt jl cmp (bad) push mov inc jbe pop lds jno movsl mov (bad) dec or sldt aas fadd out clc dec jnp and idivb int mov cmp in add icebp leave pop call sahf mov adc add pop call mov test push out inc out mull push push mov mov int stos setae dec adc mov call mov jl jns in add mov repz adc push jno cli and enter push out inc dec js adc ljmp sbb mov ja test dec mov adc popf cmc aas out sti xor es dec jne push (bad) lret repnz fs sbb iret dec jb dec popa mov repnz jae mov jmp and mov dec imul inc daa add jg icebp in cmc loopne dec xchg pop jl pop mov pop pop jnp pop sarl imul icebp jmp hlt icebp push movsb sub adc (bad) mov pop inc jno or hlt out in sub adc ljmp aaa add cmp add and add lock or mov and leave out (bad) xchg pushf add jns xorl (bad) lock jle,pt rcrb outsl add xchg scas or inc inc mov negb repnz jle or lods sbb mov add sti push mul adc andl sbb ds aad pop mov pop (bad) je (bad) idivb sub mov push out sub xchg pop or outsb or jns mov test aam and jbe cmp add mov push push push push pop mov dec test outsb sub (bad) loope pop dec adc add clc adc loope sbb repnz jp inc add pop pop (bad) or in roll jne lahf sti cli sahf repz jnp jb sbbl jle inc add pop xor js test out or inc js mov rorl mov jnp fwait add icebp mul clc pop push xchg test sbb cmp in mov jnp inc arpl mov imull or fs pop out jne jl out syscall les mov mov add add cwtl add sahf or xchg pusha jbe add add sahf or xchg mov in cmc cwtl add mov jnp inc add add sahf or xchg or jmp xchg inc in int3 (bad) cmc push mov sahf scas (bad) insb xor cmp inc mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg pop dec inc popa mov insl int sbb inc js pop sub mov in cmc cwtl add sahf or subl xor add sahf or xchg mov out negl pop pop sub mov in cmc cwtl add sahf or subl mov in cmc cwtl add sahf or xchg mov out negb addl (bad) test xor stc movsb adcl inc out cmc cwtl add sahf or xchg sbb xor js int test or imul xchg xchg idivb mov mov in xchg hlt aam insl push repnz mov in cmc cwtl add sahf or xchg icebp in stc addb push hlt xchg mov in cmc cwtl add pop mov xchg gs hlt aaa or in ffreep pop fdiv dec (bad) in mov pop cwtl add mov jnp mov cmp icebp mov fdivr inc mov dec outsb adc add sahf or inc push int hlt pusha push mov (bad) idivb movsl in faddl in add sarl cmpsl inc mov out negb adc dec sbb inc jge (bad) adc xor mov sbb mov add mov mov inc or sbb rcrl jg jnp inc popa mov in in sub push mov mov sub call out jno movsl test in push dec pop push push mov jmp push stos xor add or fmuls aas cwtl movsl mov in stos pusha stc mov jae dec mov pop cwtl add mov sbb out jge xor xchg jns fwait mov test je cmp call sbb lds int call mov clc dec js and and mov aaa addr16 daa add or movsl test xor mov and fs push mov in idivl int enter movsl mov lahf cmp js mov (bad) cmc jns mov notl xor push dec pop push push in (bad) cwtl ret out inc shll in cmp xor test dec mov inc imul dec push push mov xor xor sahf or xchg js les int cmp pop xor rol mov inc or mov pushf or push es sub (bad) or rcrl (bad) mov ret push pop push sub outsl jecxz cmp call jg bound and std xor pop sub repnz loopne mov aas pushf dec dec xor add jo cld inc cmpl push push (bad) in shlb fld inc repz xor fbld dec (bad) sbb mov xor jo inc jge fldl shrb leave pusha cld shrl lret lods es mov xchg scas or dec mov dec js xor or add adc (bad) adc bound and std xor pop sub repnz loopne mov aas pushf dec dec xor out xchg inc subl call mov pusha mov adc (bad) std lods dec mov scas lods sti dec add jp jge movsb je add shrb mov mov repz cmp in sub sarb nop sbb popf repnz xor fistp add jecxz lds idivl imulb into rcrb dec add lds mov or push sbb sbb test dec leave or aam gs fldcw lods mov sti clc inc in movsl std fidivl ret mov add int3 sarb pop insb jno jb pop mov xor xor rolb and xor daa rcrb lcall inc inc das aam cmp jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg vpaddsw or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg sti test sahf add mov or add sahf dec repz sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov push inc add mov xor and pop rorb add mov mov call push jp leave mov lods xor (bad) pop movsw inc cmc stos sub in aas cmp stc (bad) xor mov add add orl sbb sub add sahf ret jne sbb mov out push cltd add dec rol dec jnp inc add add sahf add mov mov out xchg cltd add sub divl aad lock dec push in cmc call xrelease rcrl (bad) sbbb aaa lds mov in cmc cwtl add sahf or xchg mov out ja clc cmp je js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or (bad) dec jae dec add add sahf adc iret dec mov mov mov in cmc cwtl add sahf sub iret xchg xor sbb iret clc push fs add add sahf or xchg fildll sahf jl add pop mov adc cwtl fimul xrelease mov in cmc fadds jno stos mov rcl int pusha mov xorb or xchg jnp mov cmc cwtl add sahf or xchg cmp in cmc cwtl add sahf or xchg sbb add sahf push repz sub outsb dec lret push jo hlt pushf add (bad) sub inc das xchg aas inc add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg test and xchg add sahf or cmpb pop inc jno and inc sub jne dec nop cmpsl dec lcall pop hlt lock inc daa mov (bad) dec dec cmp mov jns inc outsb mov adc cwtl and jg hlt mov inc push nop add loopne div sub test mov pop ja sti in xor cmp inc jno testl push repz sub push in sbb sti in cmc add mov and int jle repz clc es xchg sbb adc adc pop or test ret adc cmp mov lahf das sbb mull ja nop repnz pop mov ljmp popf popa loope out inc jne xchg xchg cmp js lea add jl cmc mov push push bound jmp cmp add mov inc pop ds mov and add pop sub jnp push arpl jnp (bad) push and popa lcall stc pushf shlb push jno dec sub push cmp add pop xor mov and fs ret adc inc dec add jmp mov pop imul add scas cmpsl mov in aaa cmc in (bad) inc dec sbb xchg sub mov into jne add sbb sbb dec fs bound jmp inc sahf add xchg inc pop xor mov sub xchg dec std lods and mov das cmpsb xchg std cmc nop add xchg es bound cmp mov in adc js add lahf xor and mov jmp lock dec sbb xchg sub mov lret add adc fs bound stos (bad) mov xchg mov mov xchg sti pushf mov sarl jmp inc mov add xchg fwait mov inc cli jmp jno lea push not das mov or xchg push cmp es push or adc xor or lret xchg mov pop (bad) sti push or jg mov imul push or pop xchg mov gs xor stc jns fwait push jne subl aad and loope (bad) sbb (bad) fdivs jo cmp pop mov xchg lret cs pop xchg jg jl aaa push rcrb popl xor mov movl loop xor mov enter mov icebp mov dec jl adc repz mov lret pop push add cmpsb out aam addr16 (bad) in cmp inc push pop daa add in in dec pop jge adc pop inc mov lcall fidivr in mov ja aad leave out sub aaa cmc mov add shrb lods jne xchg mov icebp jb sub incb lea mov inc mov in jbe cmp cmp fldenv test dec mov bound mov sbb sub sub mov adc dec mov ss push (bad) leave sbb xchg out sti icebp adc (bad) je push std out xor or push jle in inc jae jle (bad) jmp roll mov add jne xchg mov push adc mov dec adc jbe xor cmp in mov or cmp mov add jne xchg mov daa cli fldt les push aaa clc jnp cltd loop (bad) adc push push (bad) fs aad ss hlt cmp xor jae jb je popf jmp fstpl xor mov add mov mov daa sub mov xor add mov jo test das push push pop inc add sub lcall inc xor aaa scas inc cs cmp xor mov adc in sub mov pop loope loop jmp into push cmpsb lret mov adc jle xor decb in sbb (bad) mov dec jb cmp divl inc push cmc mov outsl and and dec pop decb ja loopne in vandps jno cmpsl or out add mov jmp mov add cmpsb adc fimul repnz xchg adc jle out jmp cwtl dec cmpsl sub scas out cltd cmc sub jns scas pusha inc stos push lret notb or push pop cmpb scas test mov cmc sbb test pusha movsb icebp sbb pop cmp (bad) mov stos leave pop add pop add mov or cld pop dec popa ret daa imul or mov add mov adc mov call adc jp cmp sub insb jl mov adc sahf popf xor pop cmpsb jecxz (bad) push adc pop and xlat jle (bad) jmp icebp dec cmc sbb or lock jmp mov jnp xchg lcall inc push mov xchg lods mov bound iret sbb sub cmp leave jp or (bad) sbb scas xor inc mov mov lea add and dec insl inc mov (bad) dec test (bad) clc dec jnp inc add (bad) cmc cld sti pop xor add add xlat inc dec xor scas sub mov adc sub sbb mov xor dec adc sar pop mov cmpsb jb add cli enter bound test add adc lcall dec push lahf cltd out in psllw fidivr outsl jb push out movsl cmc or ret mov lea jae push arpl mov mov jnp push lcall xor pop dec mov js xchg bound into iret jnp repz repz aaa addr16 testl aaa cmpsl pop in out dec jno rorb cmp loope fsubrs inc adc push adc repnz int3 movsl sbb aaa jge adc cltd dec ja insb rcrl xchg and xchg cmp dec mov std clc lahf dec sbb pop aad jle mov jmp push movsb mov mov pop push (bad) in push aas mov rolb incl push leave je std mov adc pop xchg xchg or push jmp mov pop out dec lcall dec incb xchg cmc sahf add sahf jmp dec inc add or push test test cmp (bad) jmp sahf jmp xchg jb scas lcall aaa cmc in (bad) inc dec sbb xchg sub mov in sbb inc lret das jg jle or out pop in (bad) inc dec or inc dec outsb mov leave repnz xchg dec std lods and mov das cmpsb xchg std cmc cltd incb es push sti outsb jp popa loope out movl adc js add adc dec fs bound test cmp xor xor mov out sarb cmp das div pop lods hlt inc hlt inc in sti mov dec inc jge fimull push mov mov pop xchg in sbb push jno lods mov flds mov adc inc push add adc mov adc mov (bad) dec test ret adc js add adc dec fs bound jmp inc sahf or mov inc cmp shll cmp mov das mov add xchg add ja mov jmp lock dec pop or mov gs push sub cs fs inc jg sti enter orl pop mull mov jmp stc inc ret adc add add lahf arpl jmp stos imul (bad) repz cmp lock stos pop inc xchg ja xor sbb (bad) push mov cmp xor push rorb pop (bad) jb or test pop mov sub cld nop add aas pop scas mov cwtl lret or mov sub and stos adc xlat cld xor js add inc jne xchg faddl jo push add cmp sahf or xchg out cmp push popf or jo push popa mov cmc xlat add and lahf sub cld outsl pop cmc adc (bad) sahf push or sub mov add sahf sbb nop sub shr cmc fwait cli ds or subb std out cmc lahf add sahf add mov mov cld aaa sahf or inc inc add clc xor lret jp (bad) cmp push (bad) mov sahf sti jmp sbb mov adc jp pop js out inc add cmp ret mov sbb stc or bound cld test ds fcomi mov pushf pop and jl es inc xchg xor add jnp in fbld add movsl jmp mov cltd push mov sti insl jle loope out out icebp xlat dec aad jae outsb sbb cli stos or push jecxz add es bound add push lahf out jmp xor push mov repnz mov es xchg outsb or inc or mov mov xchg add xchg out imul sub mov ret add pop scas ret out mov jmp cmp xchg jp in or (bad) fmuls mov dec pusha cli push fwait stc loopne lock inc inc add jge (bad) ljmp push inc jg addb xchg test push push dec lcall repz movsb out sbb test inc cmp test sbb scas aas std insb lds in add add push dec inc jb repnz stc loopne decb and jo adc add addr16 decb cmp inc test enter test hlt push mov inc je push push pop lret mov and jecxz mov aas jbe pushf push xor xor sbb push add lock cmc add test sub inc jle repnz jmp inc repz mov sbbl rcrb sahf push repnz mov adc cmp cmp jg (bad) mov repz test xor scas push cmp jecxz cmc cwtl add pusha add aaa jmp repnz (bad) cld hlt jmp inc inc xor dec jg icebp xchg iret roll mov jle in clc fild jl sub sahf xor int3 hlt (bad) cli scas not clc push pop and xchg fs add jae in loop pop popf or js jg jecxz sub scas repz xchg xchg add addl mov jmp clc adc ljmp xor jp mov or jle jmp push push inc inc jle add sahf push repz xor adc lock add (bad) sahf dec ljmp push xchg xchg out fldl jp or jns jg jecxz in ret lahf (bad) repz sub repnz loop add push loope add mov in cld push arpl jl mov xorl add add push into adc dec out xchg xchg popf xchg push add mov dec popf add sbb dec mov cmp cld jle jns cli (bad) std adc aaa push cmp xor fadd pop add lret push dec je mov cli jle or mov out pop std clc (bad) std scas mov push enter sahf mov (bad) cmpsb sbb add pop cwtl adc clc cwtl out lock repz add std mov sahf add pop pop out dec mov adc sbb int dec inc call cmc lahf add lea mov mov add mov movsb test sbb test in icebp cli les jnp mov (bad) hlt mov insb cli push popa cmpsb adc sub lock outsl clc aaa frstor cmp mov and sahf adc scas dec mov fiadd xor addr16 cwtl add mov or (bad) jp pop xchg in cmc (bad) in icebp mov push js mov jmp push adc xchg jmp xchg stc sbb test mov add sub mov ja push mov and rolb inc adc sub cmp mov in dec mov mov std (bad) mov pop or push add add jae pop cwtl add inc jmp mov pop cmp in icebp mov sbb and repz push inc add (bad) cli adcb xchg mov out into inc clc cmp or pop sub or jmp or mov sub jmp or xor fcmovnb or sbb out and dec js fstps cltd in cmc inc (bad) das mov cmpsl (bad) xor jecxz add arpl pusha inc add incl mov jnp xchg lock scas fsubl sbb or sbb or mov cwtl popf imul loopne xor jae fnstcw ljmp fdiv lahf mov jns (bad) pop lcall shr cltd dec lcall jecxz cli (bad) cmpsl jmp popa inc add clc stc mov jnp inc jg add lds sbb mov add inc fldl2t cmpsl or xchg lret adcl fildll xor out dec stos jg icebp in cmc popf push cmp and push add call cmp xchg push dec js add add mov jg js lock cmp xrelease xchg and sahf or xchg mov cwtl out adc add sahf pop repz into xchg cmc cwtl add sahf inc loopne lods push fiadd icebp icebp in cmc popf push cmp push icebp adc (bad) push jg adc cmpsb js add add leave sub idivb lock add movsl push xrelease xchg and sahf or xchg mov repnz fsubrs xor push add sub cwtl add sahf inc loopne lods push inc lock adc in cmc popf push cmp xor icebp adc (bad) push jg repnz ljmp popa and out sub idivb lock sbb xrelease xchg and sahf or xchg mov in inc xor add sahf pop repz xchg pop cmc cwtl add sahf inc loopne lods jae adc popf push cmp sbb adc (bad) push jg adc add add stc sub idivb lock sti xor sub xchg and sahf or xchg mov push xor push add xchg cmc cwtl add sahf inc loopne lods bound in cmc popf push cmp mov icebp adc (bad) push jg jmp inc add add adc idivb lock mov xorb pop mov push push mov in sub fs jnp imul idivl rep mov repz dec xchg jns jg loop negb subb cli or mov push hlt inc add sahf mov cmp cmp je out pop or cmpsb lahf or xchg shrb jns jg or negb sti subb mov pop mov mov sahf cli or fs cld mov out testl jns jg jae negl cmc xchg bound or or jmp inc lcall ljmp push inc mov std xchg add ja ljmp mov add sahf cmp int jns push divb lock (bad) ljmp aas jp add stos negl decb or or sahf sub mov repz in idiv jp adc lret inc mov hlt lahf add xchg pop incl jle repz pop or sahf xlat fsubrs jp ljmp cld nop test jns add jmp sti cmp subb cld pop or add sahf cmp idivb fs je in icebp lods cmc sbb or add add imul push jge push add sahf mov inc div mov hlt pop xchg cli lds sbb testb mov pop mov add or sahf push add sub xorl testl sahf rolb jg add mov test mov cwtl jle repz (bad) out xor fs je in icebp lods cmc sbb or add add push pop cs mov mov int xor jns xorb out (bad) dec testl sahf rolb jg add mov test adc gs repz (bad) out xor fs (bad) and ljmp cmp add push inc lock add jb incl jle std pop out or sahf add sahf cmp or repnz idivl std lahf lahf push repz fiaddl push jmp sti pushf clc pusha pop ja subb test or out xor fs jae std out icebp dec std out or inc mov fs xchg js jmp mov mov cmc xlat fisttp sahf mov inc div mov ljmp jmp inc jg pushl push sti incb pop mov and pop out cmp add sti cmp mov lahf mov pushl push sti incb pop mov and pop out cmp jae std out icebp dec std out or sub (bad) jle add push insb loope push xchg js jmp mov mov or sahf cmp js jg notl icebp or scas stos mov js jbe out (bad) dec stc shll std inc mov (bad) add pop into sbb stos fdivl flds push arpl mov pushf clc jb pop test cmpsl xor pusha decl add pop mov xor push xor fimul or and loop push jbe out divl stc ret inc jmp adc dec idiv out mov pop fdivrp mov push mov add inc cmp cmp ja out aaa xchg stc out xchg dec es sbb ret and hlt ss les add cmp rcrb sti add adc (bad) fs xor lea vmovntpd add sub pushf pop (bad) add ret sub js cld adc sti xchg andl push add clc movsl pop mov xor push scas addl aam and sbb out div stc out xchg adc es adc sbb add lahf orl mov lret test cmp cmp shr leave popf adc adcl call xchg insl imul jmp mov push inc inc clc mov cli loop cmpsb adc jle repnz jno pop ja es sub out xchg or or jge or cmp sti add jg adc (bad) sahf pop adc dec sbb xor mov xchg dec pop mull test cmc fsubs jno hlt aad push lock leave arpl mov nop leave sar hlt xchg aam dec pop cmp mov inc test fiaddl fsubs repz iret mov or jp dec sub mov jne xor negl add jge icebp (bad) rep push cwtl bound jno nop or call push repz jecxz or adc outsl cwtl cmp negb mov add clc mov repz loope psllq cwtl dec aad adc mov loopne mov sub ljmp cmp negb imul (bad) mull roll movb dec cs add cmp push xchg mov add cmp jge pop pop fcomi xchg mov inc and stos xor adc ljmp or cmp push iret pop sbb daa dec jp and sub or arpl push mov stc xchg out adc add jb cmp add or js call add arpl jmp mov sub lret xor add jp cwtl dec mov dec mov cwtl add decl lret add lret add xchg scas push cmp js ja hlt mov popa add aas cmpsb andl fcompl mulb xorl notb mov icebp (bad) push inc inc push push pop inc sar lret mov aaa in pop dec mov push jle jae sub stc cmp lret js jb divl pop pop inc xchg jns andl ds cli iret pop xlat in out scas fiadd mov or stc mov mov clc pop jp repz mov inc pop cmc clc push sub mov call jmp mov pop add jb jne xchg pop sbb stos dec or mov cmc cwtl add mov jnp test adc cli nop pop ficoml inc shrl inc test sub sub or mov repnz addl sahf or test mov add sahf sbb mov (bad) cmc adc stc std pop (bad) cs cmp aad xor addr16 packssdw mov mov (bad) les cs add std repnz js add (bad) cmp push out pop sti popf add sahf sbb inc mov aad cli inc sahf sbb xorl inc mov mov push xor sub js jg std cmp xchg add pop cmp ret mov add fwait repnz add dec arpl adc sub inc xorl xrelease xor xor jnp lods jg sahf loopne cwtl add sahf adc xchg mov lret pop dec lahf or mov mov in cmc cwtl add xor js add add sahf or mov add icebp in cmc cwtl add sahf or pop test leave jecxz in addl sahf sbb mov jg in pop aad add mov inc inc mov fucomp add mov inc inc mov (bad) in pop (bad) cmp or or mov les js or cmp or mov cld sbb or jge or mov (bad) loop negb ljmp rcll xor dec adc jle bnd xorl fcoms xor sbb add add adc cmc cwtl mov add mov xchg mov or scas (bad) stc (bad) fistp mov rclb dec sub adcb outsb lcall test andl xchg sarb cli call mov push aam xchg push mov std mov mov daa cmpsl cltd dec and mov xchg dec arpl out xchg push gs (bad) sbb cld or mov xchg pushf lods jge jecxz faddp lods scas mov jle and in and jo hlt imul divl push jnp jae decb (bad) std add (bad) aaa dec jle or pushf out jmp or dec iret fcmovne push dec xor into out adc push push pushf cmc pop mov stos or xchg jle loop cmpsl mov dec gs sub xchg inc mov dec mov (bad) (bad) ds lods in fadd insl pop adc or xor pop (bad) mulb rcrb mov add std pushf ss mov scas enter (bad) mov lret scas mov rcll cmp push add decb ret push fcomps add mov rcrb subl fcmovnb repz push dec sbb andps or into out outsl insl sarb sti adc idivb sub adc mov cwtl jmp mov dec add mov test repnz repnz sub lret sub or fcomp ja xor stos mov xchg ret lcall jne adc lods xchg ret lcall pop popf adc lods xchg ret lcall pushf mov movsl push push inc pop or mov (bad) lea jp xor out lret and xchg stos ss inc or xchg xchg aam ja sbb or mov out add das in adc or fcmove stc mov into fs rcll pop inc mov sbb lds xchg cwtl xor push pushf fdivs int3 test inc jecxz sub into add adc mov dec ljmp dec out inc (bad) mov adc lds jl xor fnsave fxch roll push ljmp mov leave adc adc sbb push imul pop sbb das mov outsl cmp pop sar pop and ljmp xor mov mov in cmpsb ss add xor (bad) dec test ret imul in cmp cmp inc ret imul sbb test sbb icebp fsubl xlat nop (bad) cmp les adc test lret enter stos adc xchg mov stc jge mov outsb sub jmp and xor dec xchg ds in mov scas enter sub sub lret (bad) jecxz cmp out add andl mov aam in push xlat xor mov push les inc nop int dec cmpsb (bad) fistpl cltd pop dec inc sbb push jnp pop add outsl adc repz (bad) xor push adcl in or jge add push mov sub repnz aad les mov sti aas sbb imull jmp sbb loopne mov push xlat push ret les (bad) mov mov das sub lret (bad) jecxz cmp rclb mov jbe adcl adc mov mov jle mov nop or and roll lahf aad cwtl iret in in hlt sbb std pop mov pop scas mov stos scas sbb cmpsb xchg mov dec cmp jecxz inc adc (bad) repnz mov out or sub lret (bad) jecxz cmp sub out mov xchg divl jecxz inc adc int3 leave cli mov cmp adc or stos pop sar inc inc mov das imul dec scas (bad) cmp je into jbe xor lret (bad) jecxz cmp cli adc inc pop popf prefetch adc repz (bad) xor lret out shr pop cld jno movsl std pop mov pop scas mov stos pushf sti add mov and dec add mov fistpl nop les rolb and fadd jmp adc repz (bad) xor lret mov ret popa lock mov or aas inc dec mov fstl hlt sbb adc pop or cli push sub rep add jle inc dec mov fstl hlt es sub sbb mov faddl cli mov add or das pop into add jb (bad) fnstenv into leave lods cmpsb mov adc push pop xchg and inc (bad) and sbb movsl adc loopne mov push xlat and jl into movsl lods sbb inc negl add movsl std pop mov pop xchg mov sti outsl cmc or out sub pop ljmp sahf repz cs dec jo cs aaa mov xchg nop imul push lods stc lret dec aad mov pop es xchg mov cmp xor fsubr movsl in cld inc test sbb (bad) icebp xchg jmp (bad) jo sub fdecstp or test pop xlat (bad) push push ss mov lret fdivr xor xchg xchg inc mov (bad) inc cld aas ret lock (bad) popf pavgb pop in push mov jbe xchg out xor inc pop push lock push or loope rol movb push cld leave adc cmp xor negl pop sbb fbstp iret cmpsl aas push clc xor (bad) sbb jno mov lret stos jle sbb cmpsl movzwl jle shlb xchg pop ret into data16 mov mov lock sub arpl jge push mov mov ret imul scas aam inc dec dec dec sbb in repnz mov ljmp fimul fwait scas or nop dec cltd test sub mov mov ret lock cli mov add lret (bad) mov push add lret in or xlat les or add lock mov dec cwtl inc lea call cmpsl fwait add pop popa inc jle sub lret mov into shlb push jge cmp clc mov fbstp sbb les xchg addl data16 sub sbb lret mov cwtl and and lcall ss loopne mov lods mov ss xchg clc stos pop lret mov bound and add pop scas mov movsb mov in cltd shr pop dec subb sbb or xchg ljmp pop addr16 outsb mov and sub adc xchg pop mov mov mov xor sahf dec ret (bad) cmp dec jo sti jns rcll add and adc scas xchg loope rcr sbbl inc repz or sbb rclb dec pusha jmp mov das sti and out les ret lahf mov js push pop sbb cmp sbb mov shll aas fs dec mov add lahf imul mov add adc mov mov repnz into and pop rcrl loopne sbb call and cs and add inc adc loopne jbe inc insb push in les adc les mov mov mov push or aaa mov (bad) hlt lret cmpsb test inc cmp pop repz inc push sbb jle clc fwait jne lock push or (bad) xor (bad) mov in mov repz les (bad) pusha cmp clc dec mov shrl lret inc icebp mov sbb js adc mov repz jnp rorb (bad) call push jmp add mov out sahf inc pushf (bad) call out das mov lock cli push sub in xor lds mov cmp xor lret adc iret out dec fwait shl fcoml add (bad) mov mov or ret hlt iret stos ja push int mov cmp add ret jl lret mov call sbb addr16 pop fcomp xchg cmp add ret jl lret mov call sbb addr16 inc mov lds cmc nop mov movsl xor cmp icebp mov adc sbb shr jle sbb cmp sbb repz pushl mov loopne or leave push xlat jg sbb adc test iret inc adc (bad) jmp inc fmul call adc push js int3 test mov pop add xchg aad dec add (bad) hlt cmc mov inc cmp lods sbb push punpckhdq sbb ret repnz in fld imull push jmp iret pusha cli mov jbe pop in ljmp les push mov jnp mov cmp js mov push dec enter or int3 addb push push xchg aad notb push jl lods in (bad) jb mov js adc popa inc mov jo inc test adc hlt std sarb dec icebp sub lret scas mov fldl dec das out ret (bad) mov add rcl mov adc or cmpsl or fnstsw mov dec int3 jmp push jle mov cmc and mov rolb jb mov adcb cld adc fwait outsb pop dec enter sub in je pop ds loope cmp icebp jb,pt in mov push or xchg rcrl and iret lahf mov cmp push mov shlb (bad) cmc aaa stos dec (bad) jmp mov sbb stos (bad) cli mov hlt jecxz mov jno,pt inc outsl insb scas les or scas ror scas adc cmc lret jge sub mov out fstps cld movsl dec pusha sbb (bad) dec jl push aad lret subl movsb leave aad ds adc fbstp mov inc push test lahf fidivl xor inc aaa mov inc sub mov loopne in icebp cmpsl mov push out dec mov ret cmp imul ljmp mov cmp clc lds lret (bad) addr16 sbb lret sbb mov sbb adcl push je or mov add out or ret repnz in fld negl adc fnstenv xor cmpsl add in ljmp inc jmp enter addr16 jecxz add scas in inc pushl jae negl adc push cli mull inc inc adc xchg add aaa jae negl repnz xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl fdivrs stos in inc pushl cs iret add mov sahf in mov or pop shll idivb int push mov lds adc out or jl addl add out pusha sub aas xchg mov lret out fsubs mov test push adc js mov andb in enter scas xchg icebp mov movl pusha adc xchg xchg or aaa xor test add add aaa jae negl add mov aaa add negl cmc mov mov cld inc testl mov aad clc inc pushl jae negl add stos in inc icebp dec jns negl add stos sti movl sbb mov xchg dec shl clc inc pushl jae (bad) js mov xchg add aaa jae negl add inc int clc inc pushl jae adc xchg add aaa jae negl add lods in inc pushl jae adc xchg add cmp out negl add stos in inc pushl jae negl add scas in inc pushl jae negl add stos in inc pushl jle sbb sbb stos in inc xorb out negl add stos in inc pushl jnp lcall repnz xchg wbinvd mov cmp sbb mov mov add aaa jae negl push mov stos in mov negl add stos in inc cld cmp sbb mov xchg add aaa jae negl add stos in inc repnz movups add mov xchg pop mov roll aaa jae negl add stos in inc testb stc sbb sahf xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl imul sahf xchg add aaa jae negl stc rorl clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc xchg jae negl add addb inc pushl jae negl add stos in inc pushl jae negl add sahf xchg add aaa pop adc xchg add aaa jae negl add stos in inc std cmp out sbb fcmovb mov sbb out negl pop mov int clc inc pushl jae adc xchg add aaa jae negl add mov aaa jae negl add stos in inc pushl jae negl add stos in inc std cmp negl add lahf test adc sbb mov in inc testl mov xchg add aaa jae negl add mov clc inc pushl jl cld add mov xchg add aaa jae negl add stos in inc pushl jae negl add lods in inc pushl jle cli sbb leave mov fwait lahf inc cmc inc add jecxz add sahf test inc fstpt adc negl add stos in inc pushl jae jecxz push mov xchg add cmp out negl add stos in inc pushl jae negl add stos in inc pushl jae negl repnz xchg add cmp out ret js lds fwait xchg inc loope and negl add add aaa jle cli sbb mov xchg add cmp out negl add fxam clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc sti aaa ja negl add mov clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc out xor cs xchg add aaa jae negl hlt mov xchg add aaa jnp lcall add popa sbb out negl enter ljmp aaa addr16 jecxz add scas sti incl aaa jae cmc add shll clc inc testb lock mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl cld lds in inc test add fxam clc inc std cmp sbb clc sub test aaa jnp jecxz add mov aaa jae sarb sahf xchg add mov out (bad) sbb mov xchg jns in inc rolb out jecxz jmp nop push clc inc pushl inc adc add mov push incb aaa jae stc sbb mov call in pushl pop in xor mov out add cmp in scas sbb leave test in inc dec inc sub iret sbb mov lahf sti sarb sbb mov ret test inc lret in xor mov xchg add cmp out negl adc js les cmp out cmc add lds sti sarl sbb mov (bad) or test cmp add mov mov mov aaa jae lock mov test aaa jae sti sbb mov xchg add aaa jae sarb sahf xchg add mov out (bad) sbb mov xchg jns sti stc inc rolb out ljmp or aaa inc adc sbb aas lods fwait fwait inc xorl add mov in inc sarl adc loope add lcall out stc sbb mov les sub push add mov loope mov out leave pusha es push (bad) or inc (bad) cmp in sbb mov push rolb jae stc sbb sahf xchg jl cmp sbb xchg add aaa jae negl add test cmp or mov mov mov aaa jae lock mov test aaa pop adc sbb mov xchg add aaa jae sarb sahf xchg add mov out (bad) sbb mov xchg jns in inc rolb adc sbb mov push clc inc pushl inc adc add mov out aas lods fwait fwait inc jmp adc negl add mov sti movl sbb mov call in pushl pop in xor mov out add cmp in scas sbb leave cmpsb enter in inc dec inc sub iret sbb mov lahf sti sarb sbb mov ret test inc lret in xor mov xchg add cmp out negl adc js les cmp out cmc add lds in inc pushl jg lret js mov xchg add aaa jnp lcall std leave fwait cmpsb mull aaa jae negl add mov addr16 jecxz repnz (bad) or stos in inc cld cmp sbb add scas in inc pushl fs pusha sbb stos in inc fstpt add adc mov ret fwait cwtl inc xorb out negl add mov in inc leave cmp adc pusha sbb stos in inc fstpt adc negl cld lds in inc xchg mov or mov aaa pop adc pusha cmp das (bad) push setb pop adc pusha and push (bad) or mov out add fdivr ret mov or mov aaa jle adc and pushf xchg jns in inc pushl jg lret js mov xchg add aaa jnp lcall cld lds in mov negl add ret mov lcall push mov stos in inc cld cmp sbb mov or cmp adc pusha sbb stos in inc flds in or or add inc jne loope add fxam clc inc cli xor add mov mov adc sbb mov xchg jns in inc std cmp sbb xchg add aaa jnp lcall stc (bad) mov sbb stos in inc cld cmp loope add scas in inc movb sub in mov cmpsb icebp inc aam les (bad) mov (bad) or (bad) pushl jnp loop inc mov clc inc pushl (bad) in pop js mov stos in inc fstpt adc mov xchg xor cmp adc mov (bad) or mov jae negl stc rorl les icebp sbb lea icebp popf in inc pushl jae stc sbb mov push clc inc pushl inc adc sbb aas lods fwait lcall sbb lods in inc leave inc add mov testb mov add (bad) sbb mov stos in inc cld cmp in cmpsb sbb mov mov or cmp in sub in mov test inc bound xor scas sbb leave mov lcall sbb mov xchg or inc and mov test inc bound xor scas sbb leave lea cli inc leave cmp out into sbb lds in inc pushl or icebp sbb lds fwait in inc xchg jae hlt add mov mov aaa jg out add push and insl adc in mov cmpsb xor xchg sti (bad) mov out add dec out add cmp sbb add mov cmp adc sbb mov xchg add jne loope add in fcmovnb mov (bad) sbb mov xchg add cmp in stos sbb mov mov or cmp in sub in mov test inc bound jns in sbb or sti lcall sbb mov mov inc fdivr movb and mov test inc bound jns in sbb negl cmp mov negb inc fucom clc inc pushl or sbb cmp (bad) testl aaa jae cmc add mov data16 stos in inc pushl inc adc add mov cmpsb add stos in inc sarl ja push js lds mov pxor add mov (bad) or stos in inc sarl sub loop push mov cwtl idivb movsb fwait cmc inc pushl jae cmc add lds sti les negl add iret fcmovne inc pushl jae stc sbb lds in inc std cmp jmp push lds in inc pushl pxor sbb lds in inc loopne push out adc mov (bad) pop add add negl stc (bad) mov sbb stos in mov hlt add mov lahf sti sarb sbb mov mov xor loopne scas cmpsb add stos in inc ljmp mov xchg add dec jae daa sbb mov cmpsb add stos in inc xchg mov pop mov xchg add aaa pop in punpcklbw stos in inc fadds out repz mov pop add pxor sbb mov xchg dec ret fwait jmp xorl cld lds sti loop mov leave adc xchg inc iret fwait out test add negl add mov in inc out cmp in sub in mov test inc bound jo repz mov pop add jg sti sbb mov xchg xor cmp mov clc xor mov cmc inc in cmp in or mov cmp pop sbb lds add (bad) out loopne cld mov mov lds mov xchg inc jae mov out jecxz out inc fcoms cmp inc push out jecxz out inc fcoms cmp aaa adc sarb mov push cwtl inc pushl jae stc sbb mov mov cmp push sbb or cmp loope add in fcmovne mov lret js leave lea loop mov fsts in add fxam clc inc cld cmp repnz inc jmp lret aaa jae sarb lahf mov dec loop lret cmp adc js mov mov or inc adc enter mov sbb adc pusha and push (bad) or mov into pusha or mov aaa popa adc xchg add xor clc mov lahf sti sarl js mov jl mov out repnz add (bad) cmp adc mov test xor fcmovnbe inc out cmp bnd mov mov and sarb mov xchg jae stc sbb mov out xlat inc aad aaa out cmpsl js mov xchg add mov adc sbb mov xchg jns fcmovne mov std sbb mov out dec shl clc inc std cmp hlt pusha pop mov clc or xor clc mov lahf sti sarl js mov into fwait icebp mov sarb mov andl out stc sbb mov mov cmp push sbb or cmp loope add in fcmovne mov into pusha add lea loop mov fsts in add fxam clc inc cld cmp repnz inc lock inc pushl jae negl push mov movsl (bad) out call cmpsb xor stos fcmovnbe mov int or lcall out (bad) sbb mov lahf sti sarb sbb mov (bad) fcmovnbe mov hlt js mov push lcall sbb sahf xchg add mov in scas sbb mov xchg jns in inc pushl jae negl add int3 sti movl pusha and push (bad) or mov into pusha or ret mov or cli mull aaa push adc js mov xchg xor inc adc mov (bad) std dec addl out stc sbb sahf xchg xor aaa push adc xchg add inc sub roll or add cmp adc std mov stos in inc xorb out out ss scas in inc cld cmp in stos sbb mov xchg add aaa jae sarb sahf xchg aaa add fstpt adc negl add add lret cmp out negl add add (bad) aaa jae negl add xchg movsl cwtl inc jecxz adc negl add (bad) fwait cmc inc pushl or (bad) js mov xchg add aaa add (bad) sbb int xchg add cmp sti sbb mov mov or mov or add cmp out ret pusha and push (bad) or mov out add les or jmp or sahf xchg add dec or in add add dec or in add mov xchg add inc popa adc xchg add inc add lds in inc leave cmp adc js mov cmpsb add mov inc push out adc mov (bad) or pop add jae negl std leave lea les pop cwtl loopne dec out add cmp in add lds or stos in inc fstpt (bad) in sbb pop xchg test out sti sbb mov cwtl lock aaa jae icebp sbb lds in inc pushl (bad) in sbb lds sbb stos in inc rorb adc pusha push mov xchg add cmp mov stos in inc xorb adc loopne dec out add aaa inc adc js mov xchg xor cmp adc mov cmpsb add cmpsb sti movl sbb leave popf cmpsb add stos in mov pop cwtl loope xchg sti inc xorb adc js mov xchg xor cmp iret sbb mov (bad) adc mov aaa jae sti add mov xchg jns in inc hlt dec jge loope sub stos in inc fadds out in pusha pop mov xchg add aaa imul sahf xchg xor aaa add negl add imul push lds in inc pushl arpl out pop mov stos in inc xorb out out xor xchg arpl in pusha or mov aaa jae out xor mov aaa jg sti sbb rcrl clc inc std cmp in stos sbb mov mov or aaa inc adc sbb mov xchg aaa mov cmp out negl add mov in mov lldt mov cmpsb add stos in inc aam and sarl mov xchg add aaa jae negl cld lds in inc cld cmp pop pusha sub mov aaa jae negl std leave mov sbb stos in mov pop cwtl loope mov in inc cmpl in mov cmpsb xor xchg sti (bad) mov lret sbb mov int clc inc pushl add repnz mov testb fcomp fldl aaa jae stc sbb popf mov xor aaa pop adc js mov (bad) std dec iret in inc pushl jae stc sbb xchg cwtl das iret mov into inc pushl jae sti add mov lahf sti (bad) mov or rcll int pushl jae cmc add mov mov cmp out negl add cltd movsl cwtl inc pushl jae stc sbb mov data16 fucom clc inc pushl inc adc push into inc pushl jae sti add mov xchg setb jg add add fdivr ret inc jno add cmpxchg in inc pushl jle adc and xchg cwtl das iret mov leave inc pushl jae sti add mov (bad) or in inc fadds adc xchg add aaa jae negl add (bad) movsl pushf inc cli xor push mov xchg iret sahf in inc pushl jae lock mov test lds aaa insl adc sbb mov xchg add aaa jae sarb pushf xchg ja in inc pushl jae cmc add mov (bad) or in inc fadds adc fmuls mov lds aaa jae stc sbb mov scas in inc pushl add (bad) sbb lds in inc cld cmp pop pusha sub xchg fwait std inc pushl jae negl add stos in mov pop cwtl in mov cmpsb add stos in inc xorb in mov or dec out add cmp add lds in inc pushl inc adc (bad) or inc pushl or cmc pusha aaa mov out add dec lret in stos sbb mov xchg add cmp out (bad) sbb mov xchg inc jb mov out loope cld mov ja inc inc cltd aaa add negl add mov dec lret in stos sbb mov xchg add cmp mov xchg jns (bad) out loopne stc mov notb dec fsincos out mov sti sbb mov xchg add cmp mov xchg jns in inc sti cmp in lods add mov xchg add cmp out fdivrs mov (bad) or inc lret adc in mov test inc bound jo ljmp inc mov mov add scas in inc aad lret in stos sbb mov xchg add mov pop mov xchg add cmp adc sbb mov xchg jns in inc pushl or (bad) js xor (bad) jecxz fxam clc inc pushl pop adc js xor movb aam iret mov fisub mov mov or cmp mov cmpsb add stos in inc xorb adc in mov cmpsb add stos in inc cli cmp in roll add add xor sub stos in inc fstpt adc pop cwtl in mov cmpsb add stos in inc sti inc adc mov xchg add cmp mov xchg inc iret fwait jmp icebp aaa add negl add mov in mov sti sbb mov xchg add aaa inc adc xchg inc ret fwait incl cmp out negl add mov cmp sahf in inc pushl jae stc sbb sahf xchg setb adc sarb sahf mov cmp aaa insl adc js mov out jno movsl jecxz repnz add negl add mov in inc jno jae negl cld lds sti sarl sbb mov (bad) or cmpsb sti movl add mov mov xor aaa jae lock mov test cmp negl add stos in inc pushl jae negl add test adc negl add mov fcmovne inc pushl jae stc sbb xchg cwtl and inc lock push adc sbb lds in inc pushl or leave sbb mov clc sub stos in inc pushl inc adc xchg jns sti sarl sbb mov (bad) or test aaa and mov adc mov clc inc pushl jae lock rcll add inc popa adc js mov xchg add aaa jnp add (bad) or stos in inc fidivrl adc icebp sbb mov mov lret aaa jae stc sbb sahf xchg xor inc push out jecxz add fxam clc inc (bad) inc gs punpcklbw stos in inc fstpt adc icebp sbb mov mov leave inc pushl jae stc sbb sahf xchg add cmp lcall add int3 sti movl add mov out (bad) lcall adc pusha sub mov in inc fstpt adc negl cld lds in inc std cmp sbb (bad) std dec mov lahf inc pushl jae stc sbb sahf xchg add dec popa adc js shll cli inc rorl out icebp sbb sahf xchg add inc shr sbb mov xchg inc frstpm(287 clc inc leave cmp out negl add cltd movsl sahf inc pushl jae stc sbb mov mov aaa or stc js rcll cli inc rorl out hlt add mov xchg add inc adc lcall add frstpm(287 sti inc fidivrl adc negl add fwait test inc pushl jae negl push mov test lds cmp sbb mov xchg add aaa jae sarb xchg cwtl das iret pushf in inc pushl jae sti add mov mulb cmp aaa inc adc sbb lds in inc loopne push out adc mov cmpsb add mov aaa jae negl add stos in mov pop cwtl in mov out add cmp in lock sahf xchg add inc jne loope add in fcmovnb mov sti sbb mov stos in inc pushl add (bad) sbb mov mov or cmp out (bad) sbb mov xchg pop mov loopne clc aaa add negl add mov fwait cmc inc pushl or (bad) js mov test lds cmp sbb mov xchg add jae sarb xchg cwtl das iret mov aaa jae sti add mov divb xor in inc pushl inc adc sbb lds in inc loopne push out adc mov cmpsb add mov aaa jae negl add stos in mov pop cwtl in mov (bad) or stos in inc cli cmp in sti add mov xchg add inc jne loope add in fcmovnb mov lcall stc rorl clc inc pushl pop adc sbb mov mov or dec or call xchg add aaa jg sti sbb mov xchg dec xchg and negl add add lret out negl add (bad) fwait cmc inc pushl or (bad) js mov test xor add mov aaa jae sarb dec out aaa add lret out negl add lahf sti movl js mov out add aaa add cli add mov lahf sti sarb sbb xor mov add sahf test adc sbb mov xchg inc (bad) sbb out stc sbb mov int clc inc pushl or cmc pusha aaa mov (bad) or stos in inc sarl and negl cld lds mov add (bad) sbb mov scas in inc pushl inc adc sbb mov mov or dec ja out add mov fs into js mov test iret mov into inc out aaa add negl clc mov nop test inc pushl jae stc sbb leave popf cmpsb (bad) cmp (bad) sarl sub mov enter pushl cs xchg add cmp adc xchg add lds out leave pusha es push (bad) or inc icebp cmp out clc add leave xchg lods inc xorl add test lds aaa jae adc sbb (bad) lcall in sbb leave cmpsl (bad) or stos in inc fadds out loope cld mov mov icebp mov loope or sahf test mov xlat js mov xchg add cmp sahf xchg inc ret fwait icebp mov negl add mov ljmp cmp adc sbb mov clc and scas in inc pushl arpl out add addb inc xorb adc out mov xchg add dec js lock mov xchg add cmp sahf xchg jns (bad) jmp sbb mov xchg jns in inc std cmp sbb add add xor or and pop aaa fs jae negl add mov out inc (bad) cmp frstor lds mov pop adc mov xchg add cmp in push clc repnz xchg add xor clc mov lahf sti sarb add dec add movsl xchg dec or mov cwtl cli add cmp loope add test ret inc out cmp negl jmp data16 xor mov aaa (bad) in sbb int (bad) or stos in inc (bad) aaa sub lcall add scas cmpsb out ret inc pushl jae stc sbb mov out inc vpavgw dec and lret sbb mov xchg inc ret fwait lock negl add mov ljmp aaa jae negl add dec call roll inc adc mov xchg add aaa jg sti sbb mov mov inc mov fwait mov negl add mov cmp push add jae stc sbb xchg cwtl loop loope repnz sarl cmp mov (bad) jecxz (bad) fwait cmc inc out aaa add cmc add lds sti repnz xchg jae negl add test aaa arpl push loopne mov mov dec loope into inc pushl jae negl add test cmp in in cmp int clc inc pushl jae lock mov test cmp in scas sbb mov xchg add aaa jae sarb sahf xchg push and sbb lcall add rcrl adc negl add mov sti sti mov pop cwtl loope xchg cmpsb sti xor cmp out fidivr mov clc inc cld cmp loope cld lds test inc pushl jnp add out add cmp out negl cld lds fcmovnb mov lcall push mov stos in inc pushl insl adc sbb mov mov or cmp mov (bad) or stos in inc flds adc mov xchg add inc jne loope add fxam clc inc cld cmp adc mov cmpsb add cmpsl in inc pushl jae negl add add aaa add icebp sbb lds in inc pushl inc adc sbb lds in inc loopne push out adc mov cmpsb add mov aaa jae negl add add aaa push in lret mov cmpsb add stos in inc xlat inc popa adc pusha xor add inc jne loope add in fcmovnb mov sti sbb add aaa cs stos sbb mov mov or inc popa adc in mov xchg add inc jne loope add in fcmovnb mov lcall push mov stos in inc pushl sub scas sbb mov mov or cmp mov (bad) or stos in inc flds adc mov xchg add inc jne loope add fxam clc inc cld cmp adc mov cmpsb add cmpsl in inc pushl jae negl push mov stos in mov icebp sbb lds in inc pushl inc adc sbb lds in inc loopne push out adc mov cmpsb add mov aaa jae negl push mov stos in mov lret mov (bad) or stos in inc xlat inc popa adc pusha xor add inc jne loope add in fcmovnb mov sti sbb add cmp sbb mov mov or inc popa adc in mov xchg add inc jne loope add in fcmovnb mov lcall cli roll clc inc cld cmp jecxz add scas in inc rorl adc add add xor add inc mov inc popa adc add add inc jne jmp out or cmp push js mov cmpsb add lods in inc loopne push out adc mov (bad) or mov aaa jae negl pop mov stos in mov cli add mov inc and adc (bad) sbb mov mov inc (bad) in xchg aaa adc (bad) sbb mov mov inc fucom repnz jecxz adc negl cld lds in inc test add fxam clc inc std cmp sbb clc sub test cmp iret sbb mov xchg add jae sarb xchg cwtl cs pushf sti lds aaa jae stc sbb lds in inc cld cmp cmc pusha and push (bad) or inc enter out sbb lds in inc std cmp jmp repnz cmpsb add stos in inc rorb out movsb sbb mov xchg add inc jne loope add fxam clc inc std cmp sbb (bad) std dec addl out stc sbb sahf xchg add xor cmp stos in inc rorl out cld add mov xchg add cmp sbb xchg pop nop movsl pushf inc xlat inc (bad) in and xchg add aaa jnp add xchg add cmp out icebp sbb mov clc and mov clc inc pushl or iret sbb mov xchg jns mov add (bad) sbb inc and sbb stos in inc std cmp lcall add scas in mov cmpsb sbb mov xchg add push out out push mov xchg jno korb cmp pop sbb sahf xchg add inc adc mov xchg add cmp mov xchg inc jo scas mov negl add cmpsb in inc pushl jae stc sbb dec push (bad) or inc fildl out stc add int mov clc inc pushl jae lds mov fsubs aaa pop and add negl add test aaa jae stc sbb mov in fcmovne inc lock jge adc mov data16 fwait sti roll jae sti add mov push stc inc pushl jae stc sbb mov (bad) fwait call out negl add mov in mov stc js lds in mov leave pusha es push (bad) or inc lret inc push out loop add mov scas mov negl add pop and add negl add ret fwait call out negl add mov cmp popf sti ret inc pushl jae stc sbb sahf xchg add (bad) jecxz icebp sbb sahf xchg add (bad) jecxz cli add mov clc or cmp adc js mov mov or cmp in cmpsb sbb mov xchg add cmp in cmpsb sbb mov xchg pop mov jmp out negl add mov movsl mov adc xchg jns in mov cmpsb sbb mov xchg pop push and add negl add test aaa jae stc sbb mov out jno in inc pushl inc adc cwtl das iret fwait sti roll jae sti add mov (bad) std dec (bad) in inc pushl jae stc sbb mov out inc fucom clc inc pushl (bad) in sbb mov stos in inc fstpt adc negl adc sub adc mov les fisubl mov clc or aaa pop adc sbb (bad) lcall adc cwtl loop loope clc inc std cmp sbb test add aaa jnp lcall add dec out pextrw inc dec cmp out sarl sahf xchg add cmp pop pusha sub xchg fwait repz pushl jae negl cli (bad) mov sbb stos in mov negl add fxam rolb or out add mov xchg add aaa ja icebp pusha add mov sbb inc fstpt sub stc js mov add fdivrl adc negl add fwait in inc pushl jae stc sbb sahf xchg setb adc icebp sbb inc testb movsl loopne pushl jae stc sbb xchg cwtl loop loope clc inc std cmp sbb xchg add aaa jae negl add test cmp add sub sahf xchg jns in inc pushl jae lock mov scas in inc hlt dec insb out stc sbb sahf xchg add aaa jae sarb sahf xchg aaa popf fwait in loope and negl add mov cmp push sbb out cmc add mov xchg aaa popf fwait in cwtl aaa jae negl add mov cmp push sbb out cmc add mov xchg aaa popf fwait in mov add negl add mov cmp pop sbb out cmc add mov xchg aaa popf fwait in loope and negl add mov cmp push sbb out cmc add mov xchg aaa test cmp out negl add mov in inc jmp sbb mov xchg xor (bad) in cmp in into sbb rorl xor cmp out negl add mov sti loop mov lret sbb mov xchg jns in inc roll in (bad) js mov xchg add cmp sbb add mov aaa add negl add mov in inc jmp sbb mov xchg xor (bad) movl mov (bad) or stos in inc std dec adc stos sbb mov xchg add cmp out negl add mov sti in inc mov ficom loope add fxam clc inc roll in (bad) js mov xchg add inc aaa out fnstcw mov xchg add aaa fs pusha and mov sbb stos in inc aad add cmc pusha adc pop sahf test in cmpsb sbb mov xchg jns in inc roll in push clc repnz xchg add cmp mov out xor cmp sarl scas cmpsb add stos in inc cmpl adc sbb mov xchg jns in inc xchg mov and mov aaa fs pusha and lahf cmpsb add stos in inc aad add mull mov xchg pop sahf test adc sbb mov xchg jns in inc roll in push clc repnz xchg add cmp mov clc push imull cmp sbb xchg jns in inc jmp cmp fdivrs mov xchg add aaa fs pusha and lahf cmpsb add stos in inc fildl in punpcklbw mov xchg add cmp out icebp sbb mov clc xor mov aaa je loopne dec xor cmpsb add stos in inc fwait cmp out ret pusha ss xchg add aaa fs pusha and lahf cmpsb add stos in inc fildl in punpcklbw mov out add cmp out icebp sbb mov clc or in inc pushl or fnstcw mov test testl sbb mov xchg add cmp out negl add mov sti loop mov lret sbb mov xchg jns in inc roll in sbb hlt mov xchg add aaa xor lret sbb mov cwtl stc pop mov aaa add negl add mov in inc jmp sbb mov xchg xor (bad) movl mov (bad) or stos in inc roll out in add mov (bad) or stos in inc fstpt adc clc sbb mov push clc inc pushl inc adc (bad) cmp push add jae cmc add mov xchg test inc pushl jae stc sbb sahf xchg aaa test cmp out negl add fs jl out or stos in inc pushl inc adc (bad) cmp push add jae cmc add mov nop mov push in adc and sahf xchg add cmp adc add fxam sti inc xchg mov and mov aaa fs pusha and add dec add jecxz add pop sahf test adc sbb mov xchg jns in inc roll in add divb lods in mov add sub jb jmp mov clc inc std cmp in ss xchg add cmp sbb xchg jns in inc jmp cmp fdivrs mov xchg add aaa fs pusha and add inc insl in aaa pusha or stos in inc fstpt adc icebp sbb mov clc add in inc pushl je loopne dec xor out add cmp out ret mov xchg add aaa jnp leave js mov cmpsb std xor inc js lock shll hlt mov add add stos in inc fstpt adc sarb lods cmpsb and mov jae stc sbb sahf xchg xor mov add fxam clc inc (bad) inc add loop std roll inc pushl jae adc cmpsb pop or cmp js mov xchg add aaa inc in aaa pusha or stos in inc fstpt adc icebp sbb mov jmpw in inc pushl inc adc sbb mov clc add in inc pushl je std pusha or stos in inc fstpt adc icebp sbb mov jmpw in inc pushl inc adc sbb mov clc or in inc pushl je std pusha or stos in inc fstpt adc icebp sbb mov jmpw in inc pushl inc adc sbb mov clc xor mov aaa je std pusha or stos in inc fstpt adc icebp sbb mov jmpw in inc pushl inc adc sbb mov clc sbb mov clc inc pushl je std pusha or stos in inc fstpt adc icebp sbb mov fmuls fwait sti lds inc jnp in pop mov cmpsb add stos in inc fstpt adc icebp sbb mov fmuls fwait sti lds inc jnp in or stos in inc fstpt adc icebp sbb mov push sbb out stc sbb sahf xchg aaa test aaa add negl add mov in inc jecxz adc negl push mov test lds aaa insl adc sbb mov xchg add aaa jae sarb mov push inc in fcmovne inc pushl jae sti add mov (bad) or in inc fadds adc movb mov lcall sbb mov xchg add cmp out negl push mov test lds aaa insl adc sbb mov xchg add aaa jae sarb mov push inc in (bad) pushl jae sti add mov (bad) or in inc fadds adc clc sub test cmp sbb mov xchg add jae sarb mov and pop and push adc sbb mov xchg aaa lods fwait cltd mov negl add mov in mov negl add iret lds out leave pusha es push (bad) or inc enter adc cmpxchg (bad) pushl jae sti add mov (bad) inc icebp push add jae stc sbb sahf xchg add mov adc scas in inc rorb adc js mov xchg add xor clc mov lahf sti movl js mov add xorl out negl add mov aaa jae negl add mov in inc std cmp sbb clc sub test lds aaa insl adc sbb mov xchg add aaa jae sarb mov push inc ljmp out sti add mov (bad) or in inc fadds adc movb mov lcall sbb mov xchg add cmp out negl push mov test lds aaa insl adc sbb mov xchg add aaa jae sarb mov push inc jmp lret aaa jae sti add mov (bad) or in inc fadds adc movb mov lcall sbb mov xchg add cmp out negl push mov scas in inc clc cmp sbb mov xchg add aaa jae negl add test aaa add negl add mov in jmp sbb mov xchg aaa mov aaa add negl add mov fwait in mov negl add cmp jae stc sbb mov clc pop (bad) lcall adc pusha or stos in inc fstpt adc sbb xchg add inc aaa out xor xchg add inc ss add divb lods in inc scas mov add iret fwait xchg mov negl add mov test out sti sbb mov mov xor (bad) addl mov xchg jns movsl in std cmp sbb clc sub lods sti stc inc hlt dec push adc sbb mov xchg add aaa jae sarb xchg cwtl hlt cmp aaa jae stc sbb mov data16 mov aaa jae stc sbb mov (bad) movsl mov xchg aaa jge in add ret inc xorb adc add shrl cli inc fstpt and cmc pusha push sarl cli inc aad and fild clc mov xchg add cmp adc js mov clc xor rcr aam cmpl adc adcb inc pushl inc adc clc or mov adc xchg jns in inc lret inc jno xor (bad) mov add stos in inc fstpt adc (bad) sbb mov push clc inc pushl inc adc pusha push mov movb icebp cmp out negl add mov sti repz addl mov xchg jns fcmovnbe inc fildl out clc add mov mov nop inc stc cmp in punpcklbw lds in inc aad and movb mov xchg add cmp adc js mov xchg roll pop out adc sbb add inc push out in or movsb sti movl sbb mov xchg jns in inc test add fxam repnz test add shlb out clc sbb inc fucom sti inc fadds adc test add aaa jae negl add pop xchg adc sbb adc mov clc inc in cmp pop pusha sub mov jae negl cld lds in mov jmp (bad) or stos in inc fstpt or add mov stos in inc fstpt (bad) in stc sarl les aaa jae lock mov mov cli inc addl mov xchg jns in inc scas mov out lret sbb mov xchg inc iret fwait xchg cmp out negl add mov sti iret mov out or xchg cmpsb adc int movl sbb mov xchg add aaa pop adc js mov xchg icebp (bad) in inc pushl jae stc sbb sahf xchg inc aad repz scas mov adc sbb mov xchg jns in inc xchg mov add mov cmp out adc xchg add cmp adc pusha push sarl cli inc fadds out loopne sti mov rcr aam icebp cmp fdivrs mov mov iret dec add fcoml in add mov mov out negl add mov in mov add adc jge cltd inc test add in fcmovne inc icebp aaa add sarb scas cmpsb out sbbb inc pushl jae stc sbb pushf xchg dec test scas inc pushl jae stc sbb pushf xchg dec test scas inc pushl jae stc sbb xor stos in inc icebp aaa push adc js mov xchg xor aaa jg lret js mov xchg add aaa cs stos sbb mov cwtl add ret in inc fisttp out negl add pusha sbb out negl lret lds adc rcrl sbb mov xchg add aaa jae negl jecxz mov add (bad) adc add mov cmpsb sub lods (bad) addl adc mov lea jle pop pusha sbb test mov and test bswap (bad) (bad) cmp adc sbb xor cmp out fdivrs roll xchg inc lcall leave mov icebp inc addl adc mov cmpsb and xchg test out sti pusha and mov jecxz jecxz add loope sub (bad) xchg aas push inc or xor aam push (bad) and addr16 adc xor aad mov mov imul add stos cwtl or inc lcall mov push pop mov fdivrs lds add adc fadd mov mov push out out aaa int test cmp push inc xchg jecxz lcall mov push clc fcmovb movsl cmpsb sub mov adc std js mov callw test adc js leave mov add sub idivl mov cmpsb or into (bad) addl adc mov lea jne sldt mov mov clc inc pushl jae negl add stos in inc pushl jae negl add lods sti hlt inc lea jno icebp sbb mov mov add inc pushl jae negl aad mov repz inc adc cmp lahf sti lds aaa jae negl fadd mov in inc stc cmp loope jmp aas imul inc (bad) cmp in fisubl mov test mov and test pop fwait idivb or lgs add or lldt mov fwait mov push adc js leave mov mov mov or aad xchg inc out inc jno or or push test in aaa pusha or dec sbb jmp and mov jecxz mov jle sti add mov xchg sbb inc jae or sbb mov mov sbb clc js shll loop cmpb adc clc fcmovb dec (bad) clc ja fwait xchg inc cmpsb mov in xor test pop mov mov mov and xor test out sub fcmovb pop clc xor insb sbb adc js int xchg or xor pop mov mov cmp adc pusha and mov mov test pop clc aam push (bad) or xchg mov (bad) out mov idivl dec sbb mov xor repnz mov test mov and test pmovmskb testb sbb rcrl mov xchg add aaa jae negl add stos in inc pushl jl sarb mov (bad) sti aaa adc sarb mov stos in inc sti aaa js repz pop mov (bad) adc inc pushl jg sti sbb mov xchg add aaa imul sahf xchg pop pop sbb in fsubs leave mov test mov das loopne mov xchg add aaa pxor sbb mov xchg add xor adc sahf xchg add cmp out negl jmp cmp inc push adc pusha adc add mov sbb js addl and negl add mov lret inc sarb and negl adc jno (bad) or cmp icebp pusha sti mov mov jae negl push mov stos in inc std cmp jmp (bad) mov (bad) cld inc pushl jae negl sbb data16 dec shl clc inc repz inc adc xchg add inc jbe add (bad) mov or stos in inc pushl jae negl add test aaa jae lock mov cltd movsl loop icebp aaa push adc add mov xchg add inc pop out cld js mov mov xor in inc pushl jg sti sbb mov xchg pop mov jae negl add add cmp adc add mov stc inc pushl jae negl lock (bad) or stos in inc cmc dec inc adc sbb mov xchg add aaa jae negl dec mov clc inc pushl pop adc xchg add aaa jae negl clc mov stos in inc cld cmp sti sbb mov xchg add aaa jae negl add stos in inc pushl jnp lcall add scas in inc pushl jae negl add stos in inc pushl pop adc xchg add aaa jae negl add lea sub mov xchg add aaa inc adc xchg or aaa sbb iret sbb mov out or aaa sbb iret sbb mov movsl test inc out aaa push adc xchg aas stos test inc out aaa sbb iret sbb mov test aaa push adc movb mov aaa ds stos sbb mov cmpsb (bad) cmp cmp out iret sbb mov lods test inc leave cmp out iret sbb mov out cmp aaa sbb iret sbb mov les cmp sbb mov mov ret cmp sbb int out add cmp sbb mov xchg add cmp sbb rcll add aaa or iret sbb inc or in inc movb iret sbb shrl out inc lock ds stos sbb mov (bad) sbb inc leave cmp in stos sbb lods test inc leave cmp in stos sbb shll ljmp sbb mov mov aaa sbb iret sbb dec insb xchg inc mov cmp out iret sbb leave popf cmpsb loope aad roll inc and iret sbb lds out dec jbe mov lret out iret sbb lds fcmovnu inc xorl (bad) mov (bad) loope aad clc inc xorl adc mov cmp sbb (bad) out jno test inc out aaa push adc (bad) out jno test inc in cmp iret sbb leave inc (bad) out lret inc icebp cmp iret sbb mov out jg test inc icebp cmp iret sbb fsub incb aaa sbb iret sbb mov xabort lds sbb iret sbb shll in inc out aaa sbb iret sbb leave lcall inc icebp aaa sbb iret sbb mov lds push adc (bad) cli inc lret fwait testl sbb mov (bad) jecxz in fcmovne inc cld cmp sbb (bad) les cmp out iret sbb inc jbe jecxz iret test inc out aaa sbb iret sbb mov (bad) clc inc lret cmp in stos sbb leave movsb movb lret test inc leave cmp out iret sbb mov cmpsb (bad) dec roll sbb iret sbb mov roll push adc xchg dec iret fwait testl sbb leave stos xchg dec roll sbb iret sbb mov (bad) std dec roll push adc out dec iret fwait testl sbb xor out dec roll add iret sbb lds test inc lock push adc out dec hlt fcmovne inc pushl or iret sbb mov xlat test inc out aaa sbb iret sbb mov mov aaa or iret sbb leave push out jno in inc xorl aam push icebp jno in inc out aaa sbb iret sbb xor (bad) test inc leave cmp out iret sbb cmp xlat test inc in cmp sbb int cmpsb xor xchg sti ret aaa or iret sbb mov out (bad) nop test inc in cmp sbb (bad) cmp jg cltd mov sbb out (bad) sahf in inc (bad) cmp in stos sbb mov pushf in mov stos sbb mov pushf in mov stos sbb rorl (bad) mov stos sbb lds test inc leave cmp in stos sbb lds test inc leave cmp in stos sbb mov mov ret sbb cmp sbb sahf in inc pushl or iret sbb shll in inc out aaa push adc xchg icebp sahf sti sarb sbb lds fcmovne inc pushl inc adc cmpsb sub mov aaa inc adc (bad) xor mov aaa or iret sbb xor cmp cmp out iret sbb inc and aas icebp cmp cmp out iret sbb add mov out iret sbb rcll inc out aaa sbb iret sbb leave mov movsl in mov iret sbb mov fcomps add mov out iret sbb lds test inc out aaa sbb iret sbb mov clc sub push add cmp iret sbb mov push add cmp iret sbb lds sbb push add cmp iret sbb mov fcomps add aaa push adc mov pop fwait testl sbb rorl or aaa or iret sbb mov mov clc inc enter iret sbb mov fcomps inc lret adc fcomps inc fstpt adc sbb xor call inc out aaa sbb iret sbb inc fcoms aaa fwait fwait incl cmp loop add mov in inc pushl or iret sbb mov mov clc inc xorl dec lcall inc xorl jecxz dec test aaa lret fcmovne mov iret sbb rcrl xor cmp out iret sbb int clc and mov or iret sbb mov test xor cmp out iret sbb lds in inc lret cmp out iret sbb cmp clc and mov clc inc lret cmp out iret sbb mov mov cmp cmp out iret sbb mov mov cmp out iret sbb int fcoms cmp cmp out negl add test lds aaa jae negl add test lds aaa jg sti sbb mov xchg add cmp sbb dec mov sti stc inc pushl jg sti sbb mov cmpsb add stos in inc pushl jae negl cmc mov pop add js sti sbb mov (bad) or lods in inc pushl jae lock mov mov fldl xor pop mov test aaa pop adc sbb mov cmpsb pop or cmp jecxz add mov aaa pop adc sbb add add negl loop push in inc cld cmp out lret sbb mov aaa pxor sbb mov xchg pop pusha add jae negl pop mov mov cmp in cmpsb sbb mov xchg or dec je (bad) sbb int out add inc adc out add aaa add negl (bad) mov (bad) or stos in inc cld cmp out lret sbb cwtl fwait cmc inc pushl jg sti sbb mov test inc cs cmpsb sbb rcrl roll sub stos sbb mov xchg or dec gs sti sbb cmp mov cmp jecxz icebp mov (bad) or stos in inc in cmp negl add or stos inc clc cmp in cmpsb sbb mov lods sti lds aaa jae lock mov xchg add xor pop mov mov rolb aaa add lret sbb mov mov incl cmp in dec lcall inc aam or jecxz dec lcall inc aad add leave lcall inc aad xor cmpsb sbb mov rcr inc rolb adc cmpsb add pop add jns adc add test lds mov in cmpsb sbb mov test movl sbb mov mov fldl lds rcll roll push adc sbb rcll cltd inc jmp pusha adc sbb rcll cmc inc call sbb mov mov incl cmp in add mov aaa adc sbb mov cmpsb add pop sbb in cmpsl sbb mov cmpsb add test les cmp adc sbb mov cmpsb add fwait test inc into cmp adc sbb mov cmpsb add cmpsb in inc (bad) aaa shr cmpsl sbb mov cmpsl in inc xchg lret shr enter xchg cmpsb add pop add das adc sbb mov popf test inc lret inc jo pop sbb mov pop sbb adc sbb mov test inc shr sbb cmp std xor in inc pushl jae negl push mov les jo jecxz add mov cmp out negl add mov inc inc adc sbb mov test lds aaa jae sbb xchg pop movsb in inc cld cmp jecxz lret lds pop or aaa jnp lcall icebp mov xchg dec shl clc inc pushl jae negl add (bad) roll cmp sbb out pop sahf test inc mov jae negl add mov cld inc lret in cmpsl sbb lds sti incl inc inc adc add mov xchg add aaa or (bad) js xor out or aaa addr16 jecxz (bad) stos xchg dec shl clc inc pushl jae negl push mov les jo jecxz add stos in inc mov jae negl add mov cmp out dec cmpsl (bad) or scas sti incl dec inc adc add mov xchg add cmp jmp cli mov movb gs addr16 jecxz add aad clc inc pushl jae negl push mov ret fwait cmc inc aad arpl adc out add aaa add negl add mov inc dec adc sbb mov scas sti incl xor xor stos in inc cld cmp jmp fidivl mov addr16 jecxz call jno in inc pushl jae negl add (bad) add adc sbb mov out add aaa add negl add lods in inc xorl ffreep mov sti incl inc pxor js mov xchg add cmp sti sbb mov cltd movsl cwtl inc pushl add (bad) sbb mov xchg inc fucom clc inc pushl jae negl add mov mov add cltd test inc sarl and negl add lods in mov adc std lds in inc cli xor xor stos in inc sti aaa pxor sbb int movb lods test inc pushl or iret sbb mov fucom clc inc pushl jae negl repz (bad) rdtsc mov aad jecxz add sahf test inc sarl and negl add mov incl inc inc adc add mov mov inc push adc js mov xchg add aaa pxor sbb mov pusha sbb adc sbb mov xchg inc fucom clc inc pushl jae negl repz (bad) rdtsc cltd movsl pushf inc mov add mov testb and negl add scas in inc iret aaa or mov out add dec push adc js mov xchg add inc outsl out jecxz (bad) mov addr16 pop adc xchg inc fucom clc inc pushl jae negl repz movb mov clc inc mov add addb mov negl add mov cmp sbb ror inc (bad) or mov xor xor sahf xchg add aaa jg sti sbb mov xchg movsl loopne pushl inc adc sbb rcll clc inc pushl jae negl add (bad) roll cmp sbb (bad) or xchg jae negl add scas sti stc inc cmc inc inc adc int mov repz dec push adc js mov xchg add aaa or (bad) js xor out or aaa inc adc xchg add aaa jae negl add (bad) roll cmp sbb (bad) or mov jae negl add mov cmp sti add xor (bad) or mov inc push adc add mov xchg add cmp sbb leave lcall inc pushl insl adc sbb roll clc inc pushl jae negl pop mov sar les dec imul sbb add aaa add negl add mov cmp sbb out add dec or out sbb mov xchg add cmp sbb mov cmpsb adc mov cmp sbb mov xchg xor aaa jae negl pop mov fcmovnu faddl aaa imul xchg les cmp out negl add mov inc inc adc cmpsb pop or aaa ja pop sbb mov xchg add cmp sbb lds sbb sahf mov push adc sbb mov xchg xor aaa jae negl pop mov mov cmp enter dec out (bad) in inc loope adc negl add mov dec adc scas add int (bad) or inc cli xor sub stos in inc cld cmp sbb mov (bad) sbb mov rolb jno jecxz adc add aaa jae negl add (bad) roll inc pop adc sbb lds in inc clc aaa add negl add scas sti incl xor ror stos xchg or cmp xor sub add aaa addr16 jecxz cmc mov mov cmp loope (bad) mov xchg dec loope clc inc pushl jae negl push mov les jo jecxz std leave lea mov out negl add lods in mov adc std lds test inc lock js loope xor sahf xchg add cmp sti sbb mov mov roll cmp in adc (bad) lcall out negl repz xchg aaa xchg movsl in loopne and rcrb leave popf cmpsb add popf test mov negl add test lds dec dec adc add lds test inc lock js in sub stos in inc sti aaa jnp out add (bad) mov add inc in cmp in stos sbb cmp stos in inc std cmp negl repnz out dec jmp cmp enter cmpsl (bad) push punpcklwd scas mov negl add mov stc inc lret cmp add into mov mov aaa imul sahf xchg add aaa jnp out add mov sar stc inc in cmp mov in inc pushl jae negl repnz out inc mov stos inc into cmp in scas sbb leave mov lock negl cli roll stc inc nop mov out stc add xor xchg or dec fs out js mov xchg add aaa jnp out add rcrl repz ljmp mov mov or cmp negl repnz out dec aad out inc sarl and enter lcall mov negl add test lds inc inc adc add xor xchg test inc cld cmp (bad) js mov xchg add aaa or iret sbb int cmpsb loop cmpsl mov push out (bad) sbb lds clc inc pushl jae negl add pop sbb out hlt sbb int (bad) or sahf test inc clc aaa add negl add mov aaa pop adc sbb dec push (bad) or inc repnz inc adc add add cmp jmp icebp shrl incl dec bound adc xchg or aaa jae negl push mov lds movlps sbb int xchg jl aaa add negl add mov inc jp lock mov pop add add adc cs xchg add aaa or (bad) js xor out or xor push mov ret in inc pushl jae negl push mov xchg movsl lahf inc enter stc sbb int cmpsb add push sbb out negl add mov dec adc aad add cwtl cmpsb sti xor scas inc repz inc adc add mov xchg add cmp jmp or rcrb adc sbb mov xchg add inc jae enter sahf xchg add dec pusha out clc sbb mov xchg add cmp out add add aaa pop adc add add cmp mov xchg add dec jno into add add dec jno into add add cmp mov xchg add cmp mov xchg add cmp add push mov xchg add cmp add push mov xchg add inc jae enter sahf xchg add cmp add push mov xchg add cmp out lret add mov xchg add cmp add push mov xchg add cmp out lret add mov xchg add inc jae enter sahf xchg add cmp add push mov xchg add cmp out lret add mov xchg add cmp add push mov xchg add cmp out lret add mov xchg add inc jae enter sahf xchg add cmp out lret add mov xchg add inc jae enter sahf xchg add cmp out lret add mov xchg add dec push adc add mov xchg add inc inc adc add mov xchg add dec inc adc add mov xchg add dec popa out jecxz push mov xchg add dec sub stos add mov xchg add inc inc adc add mov xchg add dec inc adc add mov xchg add dec popa out jecxz push mov xchg add dec sub stos add mov xchg add inc inc adc add mov xchg add dec inc adc add mov xchg add dec popa out jecxz push mov xchg add xor push mov xchg add inc inc adc add mov xchg add dec inc adc add mov xchg add dec popa out jecxz push mov xchg add aaa pop adc add mov xchg add dec sub stos add mov xchg add inc jae enter sahf xchg add cmp out les pop mov xchg add dec dec adc add mov xchg add dec dec adc add mov xchg add dec dec adc add mov xchg add dec dec adc add mov xchg add dec jl int clc mov xchg add xor push mov xchg add dec dec adc add mov xchg add dec sbb lods add mov xchg add dec dec adc add mov xchg add dec sbb lods add mov xchg add inc jae enter sahf xchg add dec jl int clc mov xchg add xor repz xchg ud1 fcmovnbe inc in cmp sbb cmpsb add xchg test inc cld xor icebp int xchg add test out jecxz dec popl les inc (bad) out jecxz dec popl aad std aaa jae cmc sbb mov mov rolb aaa push adc sbb int xchg pop (bad) movsl in inc std aaa popa adc sbb int xchg pop mov cmp stc sbb int xchg pop pusha add pop adc sbb roll add stos inc cli cmp in mov cmpsb clc ud1 fcmovnbe inc jmp sbb int xchg (bad) in inc sti cmp adc lret cmpsb clc (bad) in inc (bad) cmp adc add nop cmpsb clc bts ret inc clc inc adc test adc add hlt inc stc inc outsl out std sbb mov cmpsb add movsl in inc jmp sbb mov cmpsb clc ud1 fcmovnbe inc out es movsb sbb mov cmpsb add xchg and rcrb mov cmpsb add pop sbb out rcrb mov cmpsb add mov aaa and rcrb mov cmpsb add pop add add rcrl mov cmpsb add mov dec pop adc sbb cmp mov aaa adc icebp sbb inc js clc ud1 fcmovnbe inc fbstp lret sbb scas cmpsb cld aaa mov cmp sbb cmpsb cld aaa mov cmp sbb cmpsb cld aaa mov cmp sbb cmpsb cld aaa mov cmp sbb cmpsb clc ud1 fcmovnbe inc in cmp sbb xchg ud1 fcmovnbe inc in cmp sbb xchg ud1 fcmovnbe inc in cmp sbb xchg ud1 fcmovnbe inc in cmp sbb xchg ud1 fcmovnbe inc in cmp sbb xchg ud1 fcmovnbe inc in cmp sbb xchg (bad) sti int xchg xor adc xchg (bad) sti int xchg xor adc xchg (bad) sti int xchg xor adc xchg (bad) sti int xchg xor adc xchg (bad) sti int xchg xor adc cmpsb cld aaa mov cmp sbb cmpsb cld aaa mov cmp sbb cmpsb cld aaa mov cmp sbb repz cmpsb cld aaa mov cmp sbb divl pusha sbb adc sbb mov cmpsb add lea test roll cmc mov cmpsb add mov mov ljmp in inc mov in dec cmpsb cld aaa mov cmp sbb cmc mov cmpsb clc ud1 fcmovnbe inc in cmp sbb cmpsb clc (bad) in inc stc inc push in lods add mov cmpsb add inc lea fnstcw lea sahf in roll fstpt popf fwait std inc mov fstpt mov stc mov in loop dec cmpsb cld aaa mov aaa or call cmpsb pop or cmp jecxz repnz cmpsb add andl out stc sbb (bad) mov push jle cmp sbb cmpsb clc ud1 fcmovnbe inc in cmp sbb cmpsb add xchg movsl pushf inc mov cld lds mov aad jecxz cld lds in inc mov fadd mov fcmovnbe inc fidivl ror mov fcmovnbe inc in cmp sbb xchg movzwl fldl lds int cmpsb cld aaa mov aaa and rcrb mov cmpsb cld aaa mov cmp sbb xchg (bad) in mov jmp xchg push in mov adc cmpsb add lea push adc sbb mov mov push adc sbb mov mov push adc cmpsb add xchg fwait repnz cmpl jmp movsb cmpsb clc punpcklbw inc adc cmpsb add lods sti cli mov sti add mov mov cmp out repz mov cmpsb clc ud1 fcmovnbe inc fdivrs sub repz mov cmpsb add cmpb adc sbb roll or mov out stc sbb mov mov cmp in stos add xor pusha add jno loopne or pop sbb loopne faddp test fcmovnbe inc in cmp in stos add mov stos sti (bad) mov ljmp add (bad) in cmp ljmp add aaa popa adc sbb roll aaa mov (bad) mov clc add mov cmpsb clc rsm in mov ljmp (bad) fcmovne mov in call or mov out clc add mov cmpsb clc ja inc add int3 add mov cmpsb add andl adc xchg add test out jecxz fcmovnb stos xchg pop mov aaa jae cmc sbb lds in inc sti cmp adc pop cmp fcmovnbe inc in cmp sbb cmpsb clc ud1 fcmovnbe inc in cmp sbb cmpsb add mov and rcrb (bad) mov clc ud1 fcmovnbe inc in cmp sbb cmpsb clc ud1 fcmovnbe inc in cmp sbb cmpsb clc ud1 fcmovnbe inc in cmp sbb cmpsb pop or inc imul pop cmpsb cld aaa mov cmp out stc sbb mov cmpsb pop or cmp in roll jmp or mov adc add or roll cmp out stc sbb mov cmpsb push (bad) in mov int3 add mov cmpsb push (bad) fcmovnbe mov pop sbb (bad) mov add mov pusha adc add aaa xchg movsl out fldl adc add aaa cmpsb test mov rcrb leave mov movsl out fldl adc add inc js cld aaa mov cmp in stos add mov cmpsb stc xor xor stc mov cmpsb lock mov xor cmc int cmpsb clc (bad) fcmovne mov int3 add mov cmpsb cld aaa arpl mov into aaa and clc add mov mov dec pop adc add int cmpsb add mov pusha adc add mov cmpsb pop or mov cmc mov cmpsb pop or inc jns sbb cmpsb lock rcr inc in cmp in stos add mov cmpsb pop or shr movsb add mov cmpsb pop or test int3 cmp in movsb add (bad) mov add stos in mov in fmulp mov in mov in cli rcll stos mov cmc add lds sti into mov sbb icebp leave lcall mov int ljmp fcmovnbe inc in cmp sbb cmpsb lock rcr inc in cmp sbb cmpsb sti xor mov (bad) xor fdivs mov sarl add mov cmpsb cli aaa mov xor fdivrl movsb test mov lds fidivr popf fwait stc mov stc add (bad) mov stc xor cmp pop add (bad) mov stc xor cmp in test aam mov sbb out lds out mov mov ret mov add fdivs fwait mov outsb out loope rol mov lock test cmp in test aam mov add pusha out stc add int cmpsb lock rcr inc in cmp sbb cmpsb lock rcr inc in cmp sbb inc cwtl cmpsb add mov clc mov int ljmp mov or jmp enter clc ud1 fcmovnbe inc (bad) pop out std add mov bound insb adc fnstsw mov cmp sbb cmpsb add mov clc mov adc enter add nop mov push adc cmpsb stc xor mov adc lret cmpsb lock rcr inc in cmp in stos add mov cmpsb clc jge aaa add loop sbb add roll cmp cmp fcmovnbe inc call sbb cmp rcr inc in cmp sbb cmpsb lock rcr inc in cmp sbb pop inc js lock rcr inc in cmp sbb add pop (bad) inc in cmp sbb pop mov cmpsb adc (bad) inc in cmp sbb stc mov (bad) inc in cmp sbb sti mov (bad) inc in cmp sbb std rcll roll cmp sbb inc cwtl cmpsb adc (bad) inc in cmp sbb icebp leave lcall inc in cmp sbb std roll in lock pop adc sbb lds fcmovne inc in cmp in test (bad) or cwtl fwait hlt inc loopne lret add leave cmpsl (bad) or cmpb in scas sbb seta inc adc sbb cmpsl (bad) or nop fwait cld inc loopne lret add leave cmpsl (bad) or pop add ret sbb ja inc pop adc sbb cmpsl (bad) push setg js (bad) sbb cmpsl (bad) or cmpsb sti movb jae jmp (bad) or mov add repz add cmp in rcrb add punpcklbw push leave cmpsl (bad) or mov aaa (bad) rolb icebp leave cmpsl (bad) or mov aaa lret add mov xchg jg dec pop adc sbb mov out add scas inc cmc dec jge leave sbb mov out (bad) sti incl inc or lds divb ret fcmovne inc in cmp in lods add rcll movl sbb rcll scas inc repz sub movsb sbb rcll iret inc lock pop adc sbb roll add scas inc cmc dec jge leave sbb roll (bad) sti incl inc or lds in dec cmpsb add ret fcmovne inc jmp pxor add mov xchg pop adc sbb mov mov incl inc or lds fidivrl mov incl xor fidivrl stos sti movl sbb (bad) mov add ret fcmovne inc jmp ds roll ror lods xchg ja dec pop adc sbb int out add scas inc cmc dec jge leave sbb int out punpcklbw or call cmpsb add ret fcmovne inc call add mov pop add jge leave sbb mov lods sti movl sbb mov pop add jge leave sbb mov pusha add jo in or jne call inc lock pop adc sbb cmp out add scas inc cmc dec jge leave sbb cmp out add aaa (bad) rolb push mov xchg aaa mov movl sbb scas cmpsb pop or xor add dec out aaa xchg mov pop adc sbb dec out or add adc add dec out or scas inc cmc dec jge leave sbb mov cmpsb pop or (bad) xor roll movl sbb rcll in lret adc sbb rcll incl xor cld (bad) mov sbb arpl jge leave sbb (bad) mov sbb inc lret adc sbb (bad) mov adc xchg mov pop adc sbb lds sti incl (bad) xor mov xchg aaa mov movl sbb mov out or pop adc sbb mov cmpsb pop or (bad) xor rcll movl sbb roll aaa xchg mov pop adc sbb roll or add adc in roll aaa mov xor loopne inc out imul movl sbb roll movzwl incl xor fidivrl mov movl sbb mov mov add adc fidivrl arpl sub movsb sbb mov mov cmp (bad) sbb int xchg aaa xchg mov pop adc sbb int out movzwl incl xor ror push out or add adc ror push out aaa xchg mov pop adc sbb int out imul movl sbb mov xchg mov pop adc sbb cmp in aaa mov movl sbb cmp sti movb jne lds or or scas inc repz sub movsb sbb sahf xchg aas mov movl sbb scas cmpsb stc xor dec inc adc add mov cmpsb stc xor scas inc repz sub movsb sbb roll scas inc cmc dec jge leave sbb roll movl sbb rcll movb inc adc add mov xchg xor scas inc cmc dec jge leave sbb mov cmpsb stc xor inc jbe int ljmp fcmovne inc fbstp lret sbb rcll scas inc cmc dec jge leave sbb mov addr16 jge leave sbb int xchg xor scas inc cmc dec jge leave sbb mov addr16 jge leave sbb mov mov movl sbb cmp loopne mov movl sbb cmp jmp inc cmc dec jge leave sbb sahf xchg mov dec pop adc sbb sahf xchg cmp scas inc cmc dec jge leave sbb roll movl sbb roll scas inc cmc dec jge leave sbb mov xchg mov dec pop adc sbb rcll movl sbb mov imul out leave sbb mov mov dec pop adc sbb int xchg mov dec pop adc sbb mov imul out leave sbb mov mov dec pop adc sbb cmp in cmp scas inc cmc dec jge leave sbb mov outsl add jge leave sbb cmp add outsl add jge leave sbb sahf xchg inc cmc dec jge leave sbb roll scas inc cmc dec jge leave sbb mov xchg inc cmc dec jge leave sbb rcll scas inc cmc dec jge leave sbb mov jae scas inc cmc dec jge leave sbb int xchg inc cmc dec jge leave sbb mov mov dec pop adc sbb cmp cld aaa mov dec pop adc sbb sahf xchg inc lods mov pop adc sbb roll in lock pop adc sbb mov xchg inc movsl mov pop adc sbb rcll in lock pop adc sbb mov lods mov pop adc sbb int xchg inc lods mov pop adc sbb mov lods mov pop adc sbb cmp rolb mov pop adc sbb sahf xchg dec mov in lock pop adc sbb roll in lock pop adc sbb mov xchg dec mov in lock pop adc sbb mov xchg ja mov pop adc sbb rcll scas inc repz sub movsb sbb rcll in lock pop adc sbb mov cmpsb lock push and and lret mov cmpsb (bad) cmp inc push out out fdivrs push scas inc mov lret mov push scas inc xchg xor adc int pusha out pop lret inc lea int3 shll pop mov (bad) jmp cli add int cmpsb or mov mov iret lds push setl sub scas add xor into (bad) xchg lret mov stos add mov out or cmp out hlt add leave mov fwait cld inc loope jp sbb fdivs add xchg lret lock scas add mov out xor inc sub lds (bad) mov (bad) sti incb dec bound pop add mov mov cmp out std add mov mov ret inc lea or test lds aaa pxor sbb mov (bad) or mov aaa pop adc sbb mov aaa inc adc out add aaa sub scas sbb add aaa and cmpsb sbb mov stos in inc pushl imul insl out add dec inc adc sbb mov stos in inc stc cmp out leave sbb mov stos in inc icebp dec jne lds fnstcw stos in inc icebp dec imul sbb mov stos in inc repz pop adc sbb mov stos in inc icebp dec sub test cmpsb add stos in inc cld cmp out jmp dec (bad) or inc out xor out lds in inc out xor fdivs scas in inc repz jg cmc add cmp sbb inc repz cs movsb add cmp scas in inc lock je leave add inc or clc inc lock sub test or cmp sbb inc out xor sti mov mov clc inc testb repnz xor xor add cmpsl movb mov clc inc cld cmp sbb xor aaa pop adc out add aaa inc adc sbb mov cmpsb add test aaa inc adc out add aaa insl adc sbb test aaa imul dec out add aaa and cmpsb sbb add aaa cs stos sbb add cmp in cmpsb sbb add cmp negl push mov test lds cmp sti sbb mov test cmp lcall push mov test lds cmp jecxz push mov test lds cmp out lret sbb mov test cmp mov test lds xor pop mov test xor pop mov test xor clc mov test lds xor clc mov test lds xor clc mov test xor clc mov test xor stc rcrl lds xor stc rcrl cli inc cli xor stc (bad) mov sbb test xor cli rcll lds aaa ja negl cli rcll cli inc sti aaa pop out (bad) sbb (bad) mov sbb test aaa add lret sbb lds fcmovnbe inc hlt dec inc adc sbb leave push out add or lret sbb leave mov push aas xchg movsl lcall sbb cmp mov cmp adc sbb int cmpsb adc insl add ja repz mov xlat fcmovne inc call add mov xchg sti add aaa jg sti sbb mov xchg add aaa jae negl add stos in inc pushl jae negl cmc mov mov clc inc pushl add (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jg sti sbb stos in inc pushl jae negl add mov in inc pushl jae negl add stos in inc pushl jae negl add mov fcmovne inc pushl jae negl add scas in inc pushl jae negl add stos in inc pushl jae negl add test lds cmp call xchg add aaa add (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jg sti sbb mov out add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add mov aaa add negl add scas in inc pushl jae negl add stos in inc pushl jae negl add test lds cmp in cmpxchg in inc pushl add (bad) sbb mov xchg add aaa jae negl add stos in inc pushl inc adc (bad) ds sahf in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg pop mov cmp out negl (bad) mov stos in inc pushl jg sti sbb mov xchg add cmp out negl add scas in inc pushl or iret sbb mov xchg add aaa add (bad) sbb mov aaa jae negl push mov movsl in inc sti aaa pxor add add cmp in scas sbb mov movb pushl jae negl cli rcll incb cmp out negl push mov pop add pxor add add xor repz movb testb incb std roll repz mov fmulp inc movb mov jne lret add int out add mov loopne das out lret sbb mov xchg mov bound out enter sbb pop add or lcall stc rcrl incl cmp in cmpsb sbb mov xchg add aaa jae cs in mov jns (bad) mov cmp sbb dec (bad) or mov mov or aad xchg inc icebp cmp adc add mov cmpsb hlt aas mov mov adc dec fsubs add inc (bad) in cmp mov sahf test adc js mov cmpsb cmc cmp inc pop in add in mov test adc sbb mov fwait mov cmp adc js mov cmpsb sub inc scas mov sub sahf test in sub adc mov fwait mov mov xor mov add daa out sbb out popf push mov inc ja cmp fcmovb mov in mov adc mov (bad) inc icebp xchg test adc icebp mov xchg rorl inc in aaa out (bad) js mov mov cmc mov sbb lds fcomi inc addl sub (bad) mov cmpsb hlt aas xchg mov and les mov cwtl icebp aaa xchg mov adc (bad) shll nop mov call cmpsb hlt aas imul mov in pusha or lods movsl xchg inc addl push add lcall inc cmc dec sub adc lgs leave jbe (bad) inc popf cmp xor mov xchg ja mov jnp add lgs or mov cmp out aam or mov cmp out repnz mov data16 xchg stc adc sbb mov movsb test adc clc aad mov fwait in inc pushf mov or test fwait inc mov or testb mov data16 stos fwait jecxz sti aaa or iret js mov cmpsb sub inc scas mov sub sahf test in sub adc mov fwait mov mov cmp xchg mov test pop clc aam push (bad) or xchg mov and iret js mov cmpsb sub inc scas mov sub sahf test in sub adc mov fwait mov mov xor mov add pop adc add mov push dec inc cmc inc or str mov out pop test cmp sldt mov scas fwait mov inc jp xor mov xchg rorl mov cmp aam mov test adc js mov (bad) inc icebp xchg test adc clc aad mov add test cmp adc sbb lods fwait nop inc in dec sub sti pusha sbb mov cmp adc js mov (bad) adc cltd fwait popf inc mov jne pop pusha es mov mov cmp sbb sarl mov mov inc mov sbb mov jbe str mov out pop mov repz mov cmp mov mov fwait in inc in aaa out (bad) js mov mov out cwtl inc jnp loop adc dec cmpsb hlt aas xchg mov inc in aaa pusha or (bad) mov clc out lret sbb leave mov mov sub (bad) js mov mov icebp test xor scas add mov cmpsb or xchg movsl cltd mov fildl out mov mov stos inc testb pop sbb mov cwtl or inc clc cmp push loopne mov data16 pop fwait mov cmp scas add mov push popf inc (bad) cmp push clc (bad) mov cmpsb and xchg test out rcrb repnz mov (bad) in sub sub aad xchg inc scas mov adc lcall mov push clc fcmovb movsl cmpsb sub lcall adc sbb mov data16 xchg mov adc cld js lds mov or adc push testb fldln2 sbb data16 add cmp adc js mov (bad) or lods sti out cmc inc jp xor mov xchg leave je mov (bad) js mov xchg icebp xchg test or adc pop fwait mov push adc js mov (bad) and mov inc into in cmpsb sbb mov scas mov aaa out sarb scas push lods mov (bad) js mov callw mov js pop sbb mov push out loopne push adc add mov scas mov jle jecxz repnz push mov inc ja cmp fcmovb mov in mov call cmpsb hlt aas imul inc stc cmp add mov cmpsb sti sahf inc mov pushf out aad or fwait mov adc jmp sbb xchg aas lods fwait mov inc or and aad mov test mov call cmpsb hlt aas imul mov in pusha or lods movsl xchg inc addl lcall jmp xchg (bad) sbb test pusha or aad xchg inc movsb mov (bad) mov cmpsb and xchg test inc stc cmp out les pop mov mov fwait mov call cmpsb hlt aas imul mov in pusha or lods movsl xchg inc addl lcall idivl xchg mov adc sbb mov xchg mov str mov (bad) or mov mov adc js lds fcomi inc jmp push in xor adc pop int3 (bad) cmc inc aaa out sbb (bad) mov cmpsb or fwait mov adc sbb mov mov inc aaa out (bad) js mov mov fwait inc lea cmp aam jecxz dec cmpsb push aaa mov inc iret out fdivrs mov movsb test adc in stos cwtl icebp aaa test inc (bad) in and adc xor mov fadd mov dec lods mov add str mov fsubs aaa mov xchg inc movsb mov cmp jl mov sbb lds fcomi inc addl sub (bad) mov cmpsb hlt aas xchg mov lcall (bad) and cltd mov jno call data16 aaa mov xchg inc xchg cmp adc js mov xchg cpuid test in sbb push dec inc mov cmp ret pusha ss xchg aaa mov inc iret out fdivrs mov mov dec lods mov add str mov fsubs aaa mov xchg inc movsb mov cmp lods mov sub lods add mov data16 stos fwait jecxz sti aaa or jmp sbb xchg aaa mov inc into in fnstsw mov cwtl cmc aas xchg mov sub lods add mov data16 stos fwait jecxz sti aaa or (bad) pusha lock push inc mov or sti add mov (bad) and fwait mov push adc add roll mov mov or xchg mov lcall data16 mov cmp adc pusha and mov fwait mov inc sub cmc pusha or stos test out (bad) js mov mov jmp in aaa out (bad) js mov cmpsb add rol inc sti aaa pop in ss or xchg mov or verw pop scas fwait xchg inc scas mov or movsl mov xor mov data16 pop xchg mov or lldt mov mull cmp mov movsb test lret sbb mov mov cmp adc pusha and mov fwait mov cmp cmp adc pop scas fwait mov mov cmp lods mov lret in dec clc fld mov test adc pusha sbb xchg aaa mov inc iret out mov cmpsb (bad) jg test adc and movsl cmpsb cld packsswb push inc (bad) cmp out (bad) sbb mov mov push inc cmpl cmp mov mov jecxz stos xchg setns adc pusha adc xchg xchg or inc dec in xor lds sti ljmp pusha ljmp mov add cmc pusha sbb movsb test out lock mov xchg dec lods mov sub (bad) sbb lds sti in inc cmc dec or shll xchg inc mov or jmp sbb mov pop xchg movsl addb adc adc adc xchg mov aas imul inc incb adc js roll (bad) inc fwait inc ja pop add dec lods mov pop in ss or xchg mov or verw jg sti cwtl inc cmc dec adc lds mov jbe cmp adc or mov push mov mov loopne loope gs xor mov xchg leave fwait in inc mov cmp mov mov ja sti cwtl inc lcall lds sbb in and mov icebp mov testb js pop clc fcmovnb stos cmpsb add xchg fwait pushf inc scas mov and test or mov fadd mov aaa lahf mov ja pop add ja in inc cmpl sub dec lods mov sub test out mov test adc clc aad mov (bad) cmpl fcmovnb stos cmpsb add mov cmp out repnz aas xchg mov sub test out mov test adc clc aad mov (bad) cmpl fcmovnb stos cmpsb add mov rolb sbb aaa clc (bad) mov (bad) in jg movsl lea adc sub aas mov cmp adc clc fcmovb cmpsl cmpsb cli packsswb push mov out js rorl (bad) sbb mov or enter dec (bad) adc cmpsl fwait xchg inc addl adc shll out sti aaa adc and movsl cmpsb cld packsswb push inc test xor repnz mov cmpsb or test cmp sbb cmpsb cli packsswb push mov out js rorl (bad) sbb mov or in or mov cmp out aam or mov cmp out repnz mov data16 xchg stc adc sbb mov movsb test adc clc aad mov fwait std inc stc cmp pusha sbb lods fwait mov cmp adc js mov (bad) and pushf movsl test inc push in sub lgs sbb lahf fwait mov inc add add data16 mov or jecxz ljmp sbb cmc inc (bad) in sub or pop fwait mov and in pop rorl jns in inc std aaa sbb clc pusha or jbe addl sbb mov xchg or aaa or icebp sbb mov movsb test adc clc aad mov (bad) cmpl fcmovnb stos cmpsb add mov mov sbb lods fwait mov cmp adc js mov (bad) and pushf movsl test inc push in sub lgs sbb mov mov sbb lods fwait mov cmp adc add mov out pop mov mov aam mov fwait xchg inc call clc fcmovb mov in mov in pusha pop roll lahf inc mov lret add mov xchg movzwl cmp mov xchg fxsave xor cmpsb sbb mov test mov sbb icebp jnp addb adc in sbb mov mov pushf inc xchg adc pusha or xchg mov add idivl mov data16 mov mov pop lds sbb ret fucomi mov push clc fcmovb movsl cmpsb sub mov test ret mov xchg icebp xchg test out sbb in mov movsl xchg inc (bad) cmp in hlt mov cmpsb repnz lods fwait mov dec sub out sbb mov cmpsb sub inc sti cmp adc sbb lea cwtl out testb mov fsubrs pop movsl fwait std inc sti aaa pop in ss push mov mov xchg inc cmpl adc rdseed sahf inc mov pushf out aad or jp xchg dec sub (bad) sbb mov scas mov add adc add mov mov jmp aaa cmpsl fwait xchg inc movsb mov inc mov sbb jecxz aaa out add loope lcall inc addl in or scas mov add adc add mov mov cmp xchg mov sub mov cmpsb hlt aas xchg movsl popf mov aas loopne mov test xor idivl mov dec inc fwait aaa or xor cmpsb sub inc mov in pop sbb mov cwtl or inc sti aaa js sub aad mov fwait mov cmp adc fsubs (bad) sbb cmp out ret pusha and lcall inc addl in pop mov fsubs (bad) sbb cmp out ret pusha and lcall inc addl in pop mov fsubs (bad) sbb cmp out ret pusha and lcall inc addl dec clc loope inc (bad) inc icebp push sbb out mov mov pop inc jecxz aaa out add loope lcall inc addl in or xchg xchg emms sbb sahf aaa js in pusha or scas in inc scas mov fadd mov pop fwait mov or ret mov data16 dec mov cmp out mov cmpsb hlt aas xchg movsl popf mov aas loopne mov test xor jmp xchg (bad) sbb cmpsb mov adc js roll testl clc loope inc (bad) inc icebp push sbb adc js lds mov (bad) in sub or fwait mov or ret mov data16 dec mov aaa or xor cmpsb sub inc testb add out pop stos in mov aaa clc (bad) mov push cwtl inc test js mov cmpsb hlt aas test inc outsl adc add mov (bad) cs fwait mov adc hlt add mov test aas popf mov push adc sbb jg test adc js mov fcomps pop pop add jl out adc mov fwait std inc sti aaa add lds jmp (bad) or movsb sti cwtl inc hlt inc or adc push mov pop sbb adc js roll testl clc loope inc (bad) inc icebp push sbb adc sbb mov outsl sbb mov lahf in sarl cltd mov pop fwait mov or ret mov data16 dec mov cmp out js roll testl clc loope inc (bad) inc icebp push sbb adc pusha jmp aas imul inc (bad) cmp in fisubl mov test mov and test pop fwait std inc clc cmp or lgs add or lldt mov movsb test and (bad) or xchg test adc pusha or lea aaa out into sbb mov (bad) or ret fucomi mov push clc fcmovb movsl cmpsb sub mov fucomi add rorl setle jns or xchg jg fwait mov cmp adc add mov xchg sbb inc jae or pop mov cmpsb sub inc ljmp lds fwait mov add adc cmpsl cmpsb repnz push inc or xor aam push (bad) and mov mov fadd mov aaa xchg mov test pop clc aam push (bad) or xchg mov push adc pusha push shll addl add lds mov cli adc js mov test fwait inc mov or jmp mov mov mov pop mov test fwait inc mov or sti add mov xchg sbb inc jae or sub aas insb add (bad) adc add mov cmpsb sub mov mov push mov cmpsb fimul add add sub (bad) mov cmpsb and xchg test inc sti aaa jl ljmp ja fwait xchg inc movsb mov (bad) mov cmpsb and xchg test adc clc aam mov test adc sbb sarl out stc cmp adc add lds adc pusha add or leave sbb mov fmuls aas imul inc cmpl adc stos cmpsb add xchg add adc push lds mov sub bnd lds in inc cmpl adc pop mov call out int or push test mov lock mov push addb adc in sbb mov lods sti out lea adc pusha sbb popa sbb cmp sldt mov scas fwait mov inc jp xor mov xchg dec lods mov sub roll out lds mov js pop clc icebp mov xchg pop fwait mov add and (bad) mov cwtl or mov mov fadd mov aas xchg mov or idivl mov (bad) hlt dec mov std inc clc cmp sldt mov scas fwait mov inc jp xor mov mov aas insb add (bad) adc add mov cmpsb sub mov in inc xchg inc arpl or adc pop scas fwait mov inc jns adc cmc mov xchg test cmc pusha or mov cwtl inc cmc dec sub adc lgs or mov sbb in pop mov push dec inc cmc dec sub (bad) sbb lds sbb test sbb mov xchg jns inc sbb xor divb lods mov sub rcrb out mov mov out inc stc cmp add mov cwtl sti out inc mov out adc js mov mov out testb sldt mov cwtl sti out mov jmp mov mov aaa xchg mov cmp sbb fadd mov mov jp and cwtl cmc aas xchg mov sub rolb in sarl mov mov aad mov add ret fucomi mov push clc fcmovb movsl cmpsb sub mov adc mov int xchg inc xchg cmp scas add mov push mov cmp cmp lgs or xchg mov adc (bad) js roll std inc clc cmp sub (bad) mov fsubrs pop scas fwait mov cmp adc sbb lds test adc js mov xchg dec lods mov das out negl or cltd mov or pop sbb mov cwtl or inc sti aaa jl push sbb pop mov in popf cmp clc icebp mov xchg dec lods mov sub mov push sahf inc mov pushf out aad adc mov fwait xchg inc jmp jbe cmp adc ja dec mov or push mov (bad) cs fwait mov (bad) in ss pop lds sbb ret fcomi inc addl lret add mov push xchg inc incb adc js rorl ja mov push adc loopne mov xchg mov sub adc lgs jg test adc add lds adc pusha add or (bad) sbb mov mov in inc sti aaa jl and aad mov mov sub idivl roll dec inc mov cmp ret pusha sbb jns xchg inc mov or jmp mov mov inc jg mull mov cmpsb sub inc lcall mov fmuls aas imul inc cmpl adc stos cmpsb add xchg fwait in addl in or jbe mov inc jbe cmp adc mov cmp adc js mov jo dec inc lcall mov cwtl cmc aas xchg mov sub mov mov nop mov adc mov dec inc mov cmp mov push lahf inc sti inc push in or xchg pop ret fucomi inc xchg inc ja cmp fcmovb xchg xchg icebp push add xor lds in inc scas mov fadd mov aas xchg movsl cmpl sbb dec ret mov xor xlat mov xchg or mov fadd xchg (bad) jb addl cmp mov data16 stos fwait out inc sti aaa or out sbb inc mov mov dec push adc js mov mov fwait in cmpl sbb packsswb push mov out js rorl (bad) sbb mov or cmc add lds sbb scas mov out push (bad) inc icebp push add jmp mov xchg pmovmskb call adc clc fcmovb stos cmpsb add ret fucomi mov push clc fcmovb movsl cmpsb sub mov test icebp sbb pop mov mov cmp out scas add mov push mov cmp cmp lgs or cmpsl sti ljmp add mov (bad) adc arpl push inc (bad) cmp adc add mov push xchg inc testb aaa clc (bad) mov (bad) in jg movsl lea adc sub aas insb add (bad) adc add mov cmpsb sub mov cmp adc add mov (bad) inc icebp mov inc in sub or pop mov out (bad) cmp adc clc fcmovnb xchg dec lods mov insb in or xchg pop fwait mov add sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add ret (bad) mov enter mov icebp aaa xchg mov adc rcrl mov movsb test adc clc aad mov in inc mov push adc sbb dec stos mov jae out loope scas push jmp scas mov sub jns xchg inc test or sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add mov out (bad) cmp adc clc fcmovnb xchg dec lods mov add push clc fcmovb mov (bad) xchg inc arpl in pusha or test xchg inc testb aaa clc (bad) mov (bad) in jg movsl lea adc sub rorl (bad) adc pusha or jg cmpl inc mov push inc cmpl in sarl xchg inc fild out scas add mov push mov cmp cmp lgs or xchg mov adc (bad) js roll std inc clc cmp push clc fld mov movsl mov inc jae add pop mov jns (bad) mov cmp sbb pop outsl sbb cmc inc (bad) in sub or pop fwait mov pop in or xchg bsr loopne mov std adc clc (bad) mov xchg bt inc cmpl sbb pop outsl sbb cmc inc (bad) in sub or pop fwait mov adc enter hlt pop fwait mov cmp scas add mov push mov mov push mov fsubrs pop mov mov push mov xchg leave mov inc jg adc lds in inc mov push adc js mov xchg dec mov inc push in punpcklbw mov (bad) cs mov inc or clc js mov cmpsb lock fs or mov mov (bad) mov repnz mov fsubrs pop sar mov str mov cwtl or scas fwait mov mov idivb mov cmp adc pusha and mov mov jbe cmp adc pop scas fwait mov mov idivl cwtl test adc clc jecxz mov sbb mov or mov fwait mov dec adc aas loopne roll mov aaa pusha or mov sahf inc mov cwtl out sbb (bad) mov (bad) inc icebp xchg test inc stc cmp add mov cwtl sti out inc mov repz js mov data16 mov mov sub cltd mov aaa fs sub idivl mov cmpsb or aam call adc add mov xchg shld in cmp sub dec lods mov add xor enter cld cmpps inc cmc inc aaa out ret mov xchg shld in cmp sub aas lods fwait mov dec sub out sbb mov cmpsb sub inc sahf mov divb imul inc cmc inc (bad) in ss pop lds sbb rcr mov or push mov out pop cmpsl sti ljmp js lds fwait mov add adc mov sbb cmc inc (bad) in ss pop lds sbb movsl sti in inc cmc dec adc pop sbb mov xchg jg movsl lahf mov add lgs packsswb dec inc mov cmp ret pusha daa mov mov xchg inc addl daa clc (bad) mov cmpsb and xchg test inc sti aaa jl sbb xchg jg sbb incb adc pusha or mov cltd inc cmc inc adc adc or mov sti in inc cmc dec or shll xchg inc mov or sarb push (bad) inc icebp xchg test adc loop lods xchg packsswb push inc xchg or cmc add mov xchg mov or idivl mov push hlt mov cmp in stos cwtl icebp aaa test inc adc in sbb mov test xchg inc cmc inc aaa out (bad) js mov xchg dec lods mov sub rcrb in mov (bad) inc leave jp addl loopne roll mov aaa pusha or mov sbb in or test mov or stos cmpsb add mov sahf inc lcall mov fcomps inc mov shr xor adc pop sar inc repnz add in pusha or mov cmp out aam or mov mov pop mov xchg icebp xchg test out sbb icebp mov xchg rorl inc sahf mov or mov sahf inc mov fucomi sbb lds sbb mov cmp ret pusha es mov push inc cmc inc (bad) in sub or pop fwait mov add out add mov (bad) and fwait mov adc fld mov fwait xchg inc cmpsb mov adc clc aam mov fwait xchg inc call clc fcmovb stos cmpsb add ret fucomi mov push clc fcmovb movsl cmpsb sub mov adc mov int xchg inc xchg cmp lods sbb mov fsubrs pop fwait mov aaa out frstor mov test popf mov sub adc mov in inc pushf mov sbb mov cmp adc js lds sbb inc arpl out js rorl (bad) sbb mov or sti add mov push mov cmp cmp lgs repnz lods mov adc cld js sarl mov aaa jl sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add movsl sti cld inc cli cmp mov cmpsb or test cwtl inc incb adc pusha or xchg fwait repz sti aaa push in and xchg lfs xor repnz mov (bad) adc arpl dec inc scas mov jmp xchg (bad) sbb test clc aam push fcoms aaa xchg mov sub (bad) sbb mov cmpsb or mov mov repnz mov (bad) adc arpl dec inc scas mov cmc mov push sbb aaa xor testb mov mov aaa adc idivl mov data16 mov mov or mov inc sbb aaa clc (bad) mov (bad) in jg movsl lea adc sub icebp xchg test adc loopne mov xchg ja fwait xchg inc movsb mov icebp mov mov aas xchg mov jl sub aam mov fwait xchg inc call clc fcmovb mov mov ja pop add dec lods mov sub aad call (bad) jbe addl sbb roll out inc cmpl sub ja fcomi inc jmp push in xor adc add cmp adc sbb mov test adc sbb mov fwait mov cmp adc add mov je xchg inc xchg xor idivb mov cmp adc pusha and mov fwait mov inc sub lret sbb mov mov cmp adc pusha and mov fwait mov dec add sti sbb mov cmpsb sub inc mov push adc js shll popf inc mov or lret pusha inc movsl cmpsb loop sarl out (bad) sbb mov push sahf mov sbb mov mov inc (bad) in cmp mov data16 pop mov inc or clc js mov cmpsb lock fs or lds sbb test add mov mov inc or clc js mov cmpsb lock fs or lds sbb test js mov cmpsl fwait xchg inc addl adc shll xchg inc mov push adc sbb cwtl test adc js mov push call out fbld mov data16 pop xchg mov inc in aaa pusha or mov sbb in or cmpsl fwait xchg inc mov or sbb mov mov lock shll out inc cmpl sub icebp xchg test adc js mov sahf test adc divb ja dec mov clc pusha or lret fwait mov dec add sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add ret fucomi mov push clc fcmovb movsl cmpsb sub mov arpl pop sbb nop push xchg inc loop and sarb scas push mov lret pusha cmc mov mov out clc cmp adc mov ret inc clc cmp sub aam scas data16 mov sub int3 add sarl mov (bad) sbb mov push push inc test pusha pop roll dec inc mov cmp ret pusha ss cwtl cmc aas xchg mov sub aad call (bad) jbe out testb sldt mov mov out inc xchg in xor sub aas xchg mov sub mov cmpsb lock lods sti in inc hlt inc sub adc add xchg fwait in addl in or xchg xchg emms sbb mov sbb mov outsl sbb mov cwtl out movsl sbb sarl out testb sldt mov mov jmp scas mov call aas push cmp loope call jg test adc sbb roll sahf inc mov fucomi add mov (bad) or mov sahf inc mov cwtl out sbb fld mov test adc add mov push push inc cmc inc aaa out fnstcw mov cwtl cmc aas xchg mov sub test out dec mov in mov sbb mov xchg pinsrw inc mov xor repnz mov fmuls aas stos fwait mov mov cmp pusha add sub mov push popf inc test aaa out aam adc xchg xchg or mov fadd xchg punpcklbw sub mov push popf inc test aaa out aam adc xchg xchg or mov fadd xchg aas cmpsb test adc pusha or stos fwait xchg mov lret sbb mov push mov in pusha or lods fwait mov cmp cmp adc pop scas fwait mov mov jmp xchg (bad) sbb test pusha or movsb test in pop js mov mov aaa xchg mov cli adc pusha push lds mov cmp pop clc aad movsl xchg pop mov inc jae add lgs fwait cwtl mov sub xlat mov callw sbb adc cmpsb sub inc mov jle call xchg ja mov adc call cmpsb sub mov adc jmp push xchg inc movsb mov ljmp movsl mov mov adc js mov cmpsb hlt aas test cmp add mov mov testl clc icebp mov xchg rorl (bad) adc pusha or jg cmpl inc mov push inc cmpl in sarl xchg inc fild out rolb jecxz dec test aas xchg mov adc (bad) js roll std inc sti aaa fs js mov mov addl jmp lds test in jb divb lods mov sub rolb out mov test out negb or mov mov out xchg xchg emms sbb mov sbb mov fsubrs pop fwait mov add sbb xchg jg fwait mov cmp adc add mov push in scas mov std lds add or (bad) sbb mov xchg mov aaa out add fnstcw jo dec inc lcall mov xchg mov aaa out add cmc mov mov aas insb add (bad) adc add mov cmpsb sub mov testb jbe sub aam push (bad) in jg sbb xchg cmp out scas add mov fsubr jg test out hlt add mov (bad) adc mov inc dec adc sbb mov xchg pmovmskb incl mov enter or mov in mov js mov scas mov add call data16 aaa mov xchg inc xchg cmp adc js mov xchg rcrl je adc push mov pop sbb mov rclb str mov fsubs aaa mov xchg inc movsb mov hlt mov (bad) inc icebp push sbb mov adc adc lgs or movsl sti std inc popf mov enter or mov in popl adc sbb mov fmuls aas xchg movsl xchg mov xor aaa push cmp mov mov cmp adc pusha and mov mov or (bad) sbb mov cmpsb sub inc mov std adc js mov (bad) std inc int jecxz test clc fadd xchg (bad) (bad) inc sahf mov in or or lods mov js sub leave mov test aaa pop in and push in lcall mov (bad) in jg sbb cltd cmp in cmpsb sbb mov push mov inc ja cmp fcmovb cmpsl cmpsb (bad) ja mov lret sbb mov mov cwtl inc incb adc sbb mov push mov hlt add mov test cmp mov fadd xchg dec mov aaa or lret pusha jmp rorl sbb clc js mov cmpsb hlt aas mov cmp pusha or mov dec inc cltd cmp in cmpsb sbb mov push mov cmp adc js mov jns xchg inc mov or jmp mov mov icebp sbb pop mov cltd inc cmc inc adc adc or mov in inc (bad) cmp adc push mov pop sbb scas mov repnz push mov cld js mov scas in inc cmc inc aaa out ret mov (bad) adc cltd fwait in xchg in andb movsb test out lock mov mov pop movsb test out fdivrl lds inc icebp mov sbb (bad) js mov (bad) adc sahf test in add roll jmp mov clc in andb movsb test out lock mov xchg aas mov cmp adc clc fcmovb cmpsl cmpsb or mov xchg inc movsl mov enter or mov mov cmp adc pusha divl (bad) mov clc out xor loopne xchg push inc cmc inc (bad) in ss pop lds sbb mov out addl adc lds mov pusha in and (bad) and test cwtl inc incb adc add lds sbb inc arpl out js rorl (bad) sbb mov or icebp sbb roll addl add lds movsl addb aaa out pop clc fcmovnb xchg ja (bad) cmc inc aaa out frstor lds sbb (bad) aaa or sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add mov cmp adc add mov (bad) and mov xchg inc movsb mov fnstenv fwait mov outsb out jecxz repnz mov in (bad) cmp out iret sbb mov cwtl (bad) jno in inc test clc fadd xchg setns stc adc pusha sbb ja add adc add mov scas fwait mov inc jp xor mov (bad) adc cltd fwait in mov or lret pusha jmp leave je lea inc arpl in pusha or mov push inc (bad) cmp out (bad) sbb lds sbb cmpsb mov adc sbb pop (bad) and mov cmp sldt mov scas fwait mov inc jp xor mov mov cmp clc icebp mov mov aas xchg mov sub lret sbb mov movsb test adc loop inc (bad) clc ja fwait mov adc mov fsubrs pop movsb test adc sbb mov push popl mov fnstenv lret fucomi mov int3 sbb mov js lea mov out ret pusha sbb sahf test adc pusha ljmp mov adc add mov xchg movsl lea mov daa mov mov xchg dec sub enter mov movsl lea cmp adc js mov xchg jbe cmp out mov cwtl or inc xchg cmp out sbb aad pop (bad) or mov out (bad) cmp adc clc fcmovnb xchg dec test inc jbe cmp sbb pop outsl sbb cmc inc (bad) in sub or pop fwait mov add adc adc setge aaa in ss pop lds fwait nop inc xchg cmp adc js mov xchg aas lods fwait mov inc or out adc arpl dec inc mov cmp ret pusha sbb scas test in and xchg jg fwait mov dec or mov movsb test adc clc aad mov in mov clc pusha or int xchg inc test je adc mov mov mov sub or aad xchg mov add out mov test adc clc aad mov in mov cmp mov mov loopne loope pop adc clc (bad) mov fsubrs pop scas fwait mov cmp mov test xchg inc scas mov or lret inc loop and les sarl mov inc sbb movb mov (bad) adc cmpsl fwait xchg inc addl punpcklbw mov (bad) add (bad) out popf inc or clc js mov cmpsb lock fs or mov mov in (bad) cmp out iret sbb mov cwtl xlat jg in inc mov js cmp adc test xchg inc scas mov or arpl push mov out js rorl (bad) sbb mov or lcall in mov lods movsl xchg inc testb aaa clc (bad) mov (bad) in jg movsl lea adc sub setns stc adc pusha sbb ja add arpl pop sbb lds fwait xchg inc incb adc js mov mov push inc cmc inc (bad) in sub or pop fwait mov jl in js mov push xchg inc jmp jbe inc loopne mov push mov out js lds sbb testb aaa clc (bad) mov (bad) in jg movsl lea adc sub setns stc adc pusha sbb ja add arpl in pusha adc nop cwtl or mov sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add lods sti out scas mov push mov cmpsb lock mov aaa je adc mov mov (bad) inc cmc dec arpl add out mov test adc clc aad mov in inc testb adc cmpsb sub jae addl dec in push add lds mov (bad) in xor mov lret fwait mov dec add sub aam mov fwait xchg inc call clc fcmovb stos cmpsb add lods sti out scas mov push mov cmpsb lock mov cmp adc js mov sarl adc clc (bad) mov (bad) in jg movsl lea adc sub aas imul mov std add mov (bad) or mov inc or daa clc fcmovb mov in mov xor fcmovb dec (bad) and mov xchg inc movsl mov enter or fwait mov aaa out testb mov mov mov pop lds add out adc pusha or aad xchg inc movsb mov (bad) mov cmpsb and xchg test mov mov std lds fwait mov add adc mov test adc js mov callw test adc js mov mov dec rcrl adc pusha or mov inc jnp loop adc dec cmpsb hlt aas xchg mov inc in aaa pusha or mov inc aaa out (bad) js mov test or inc adc std js mov callw test adc js mov xchg add aaa jl lcall std mov xchg test inc stc cmp in scas sbb mov xchg pop mov (bad) out lcall in movsl xchg pop pusha add jge negl ljmp mov sub stos sbb roll jmp in stos sbb mov xchg pop pusha add jge negl ljmp mov jge negl in push sbb mov or (bad) sbb roll stos inc stc cmp in scas sbb roll movb sub scas sbb mov xchg pop adc sbb mov (bad) or mov jae sub fstpt lahf fwait jmp stc cmp dec (bad) or mov inc (bad) out lcall jecxz mov add xchg fwait std inc clc cmp in scas sbb mov mov gs jecxz in mov add xchg test inc testb jecxz loop dec cmpsb add pop sbb out lret sbb mov (bad) or mov inc (bad) out lcall jecxz mov add mov incl inc (bad) out lcall jmp stos cmpsb add xchg or (bad) sbb lds in mov adc loop dec cmpsb add mov aaa pxor sbb mov out pop xchg test inc stc cmp in cmpsb sbb mov out pop xchg mov fs jecxz jmp stos cmpsb add mov pop adc sbb mov (bad) or mov cmp mov (bad) or mov stc inc testb adc out pop mov jp negl in movsl xchg pop lahf fwait jmp stc cmp in scas sbb mov (bad) or stos in mov lcall loop dec cmpsb add test pop adc xchg pop mov inc adc xchg pop stos in inc stc cmp in scas sbb mov xchg fwait repz pushl jae lock mov xchg icebp mov inc jbe lret sbb mov pop sbb in scas sbb mov (bad) or xchg fwait repz pushl jae sarb xchg xchg pop mov inc adc xchg pop stos in inc stc cmp in scas sbb mov xchg fwait repz pushl jl jecxz test xchg pop popf fwait cmc inc stc cmp sti sbb mov out pop pop add add (bad) sbb mov cmpsb add mov aaa add lret sbb mov (bad) or popf fwait cmc inc testb jecxz jmp stos cmpsb add mov outsb out jecxz ljmp mov arpl loope ljmp fwait jmp out lret sbb mov (bad) or lods sti lds aaa inc adc cmpsb add mov stc inc stc cmp out iret sbb mov (bad) or xchg fwait std inc sti aaa jae sti sbb mov cmpsb add mov push adc sbb mov out pop pushf test inc stc cmp out iret sbb int xchg add cmp out lcall loop dec cmpsb add test pop adc xchg pop mov inc adc xchg pop stos in inc stc cmp in scas sbb mov xchg test inc pushl jae loop (bad) mov (bad) or mov inc (bad) out lcall jecxz mov add xchg fwait repz pushl jae sbb pop mov out pop mov inc jp negl loop dec cmpsb add mov add (bad) sbb roll stos inc stc cmp in scas sbb roll in inc stc cmp in loop dec cmpsb add sahf test inc stc cmp lcall jecxz insl out pop xchg (bad) out lcall jmp fwait xchg add mov adc sbb mov cmpsb add mov cmp out (bad) sbb mov out pop pop add outsb out jecxz repnz cmpsb add sahf test inc testb negl jecxz mov fwait jmp stc cmp jecxz ljmp sbb adc sbb mov out pop mov xor std leave cmpsl (bad) or mov cmp mov out pop mov inc jbe lret sbb mov (bad) or test or mov out add aaa jae negl fdivrs mov inc out add mov cmpsb stc or add in dec clc leave rcll or fcmovnb inc mov add lcall fnstsw mov inc insb adc add or in inc lods xor cld mov (bad) fcmovne inc (bad) dec push add add add aaa jae lock mov test dec fdivr ret inc push out aad push mov cmpsb pop or aaa pop out lret sbb mov cmpsb pop or cmp mov xchg or aaa jae sarl test lds sbb and lods test xor aaa jae negl push mov enter fildl out aad or mov aam xorl add mov cmp out fsubl mov fdivrp sarl add mov xchg add aaa pop adc add mov xchg movsl lcall pusha pop mov xchg add inc pusha adc or int ret inc xchg jg lds mov mov rolb fs jmp lgs in mov sbb clc mov xchg add aaa adc iret sbb mov mov xor (bad) xorb adc fdivr dec aad hlt inc xchg jae sarl mov cli mov sbb inc xchg sarl sbb shll iret mov hlt sbb shll pushf inc pushl pop adc pusha sub lods sti sarl sbb mov out xor (bad) divl adc in sbb xchg movsl lcall sbb popf movsl sahf inc cld cmp add add cmp out in add mov mov xor inc push out jecxz add stos in mov cli add mov fcoms cmp cmp adc out add aaa jg loope add xor cmp pusha aaa mov (bad) or test cmp out aad push lds (bad) cli aaa ds aad or xor cmp js mov test xor dec add out push mov xchg cmp je out js mov test xor dec add loope add test inc add adc mov cmpsl in inc pushl addr16 cld sbb mov test into mov rcrl or rol mov push js rorl clc inc (bad) inc add das clc idivb mov aaa cmp scas sbb mov mov dec les leave in mov add fwait test or korw aaa pxor js int test dec out fcmovnbe inc pushl add sarl mov test (bad) xchg in inc idivl je push loopne mov test int in cmp clc idivb stos fcmovnbe inc pushl add sarl leave cwtl test (bad) xchg in inc idivl je push loopne mov test int in cmp clc idivb xchg sti iret inc xorl add xor cmp pusha aaa mov out dec iret in mov aad push lds (bad) sti cmp js mov out dec iret in mov adc mov mov incb inc leave in lods add mov xchg xor dec outsb adc sbb mov fsubrs or korw aaa pxor js int cmpsb sub andb out push add mov test enter sbb aad push mov cmpsb pop or aaa sbb in add mov test xor inc lret add roll xchg inc xchg add in sbb lods in inc leave cmp out fnstcw mov cmpsb (bad) cmp dec adc iret add roll lds aaa pop out jmp cmpsb pop or aaa ja loope cld mov fxam hlt inc xchg jae sarl mov movsl sahf inc out aaa pxor js mov cmpsb (bad) cmp dec xor stos add roll (bad) mov jmp cmpsb pop or aaa sbb in add mov (bad) or mov clc add roll ret mov scas add lds (bad) xorb out in add mov mov aaa lods sti int3 inc (bad) cmp adc (bad) dec (bad) mov inc add int pop mov out xor (bad) test adc (bad) sbb mov mov aaa leave fcmovne inc xorb out negl push mov (bad) sti stc inc pushl jg hlt sbb mov fxam incb aaa jae sarl cmpsl cmpsb adc mov rolb gs js mov out xor (bad) mov jnp std add mov movb mov testl sbb mov (bad) or mov incl push mov xchg add aaa add iret sbb mov mov xor inc push out aad push mov cmpsb pop or aaa sbb iret sbb mov (bad) or mov cld add roll iret inc pushl pop adc add roll lds inc sbb icebp sbb scas cmpsb in in iret inc pushl pxor add mov (bad) or inc xorl sbb cmpsl in inc xorb out lock roll inc xchg jg hlt sbb rorl sahf inc out aaa pxor pusha adc or aaa imul mov fcmovnbe mov sbb pop mov cwtl in inc xorl push mov xchg cmp aaa jnp jecxz push mov xchg or sub mov cmpsb pop or cmp mov cmpsb pop or pop out jmp cmpsb pop or pop out jmp cmpsb pop or aaa pop out jmp cmpsb pop or imul sahf xchg or aaa jae negl add mov cmp mov into sti lds aaa (bad) in adc jecxz dec test pop fwait mov or loop sbb mov mov jb jmp fcomps lahf test mov fsubs mov xchg add aaa add icebp sbb sahf xchg add aaa jae sti add mov cmpsb add stos in inc pushl or fsubl mov fdivrp sarl add mov xchg movsl lcall sbb mov fsubrs or (bad) xchg jg lds mov aam aad fiaddl adc sbb mov mov cmp sbb lods test xor aaa pop adc sbb mov in incl cmp mov xchg add cmp js mov xchg inc lret mov lret add mov out or aaa add in sbb test aaa jg sti sbb dec add or adc mov mov push mov cld js mov xchg add aaa add std add mov leave test out or scas mov sbb idivl mov push clc inc pushl imul sahf xchg dec lret sti in mov mov push lock pushl jae cld add mov cmpsb add mov inc pop adc (bad) inc icebp mov jle jecxz add mov lds aaa das out rolb jecxz mov sub cmpsb (bad) inc (bad) cmp adc pusha inc mov sbb mov jbe str mov out add aaa inc adc sbb mov aad incl cmp lds sti ret inc out aaa or out or mov cmp adc sbb mov cmpsb or ret in inc fnstcw int3 in rolb pop rcrl icebp inc xchg jnp clc sbb roll mov sti sbb shll incb cmp mov xchg xor in inc out aaa pxor js mov mov icebp inc xchg jae sarl mov sti sti inc xchg jnp clc sbb mov mov xchg mov lods sbb mov clc pop iret sahf in mov stc sbb int test (bad) xchg in inc fnstcw sbb stc sbb inc lret inc loopne adc cli add mov out or aaa pop adc sbb mov ret inc lret out loope add scas in inc out aaa ds rolb add cmpsl (bad) out aaa add enter andb mov cmp adc pusha and mov fwait mov inc sub cmc pusha or stos test out (bad) js mov mov lahf inc in aaa out (bad) js mov test aaa mov inc adc adc or mov mov xor mov data16 pop xchg mov or lldt mov idivl cmp js mov xchg icebp mov cmp int3 add mov cmpsb sub mov call push xchg inc adc in jecxz mov sub cwtl sti in mov call push popl mov daa mov (bad) inc icebp mov jle jecxz add mov ret inc (bad) inc xor mov (bad) adc lods sti lds xor jmp aas imul inc (bad) cmp in fisubl mov cwtl movsl in loope add str mov fsubs aaa mov xchg inc movsb mov ss mov test adc pusha pop roll xchg inc jmp pusha divb mov inc or aaa clc (bad) mov xchg aas cmpsb test adc pusha or xchg test adc pusha pop roll idivb adc and movsl cmpsb cld packsswb push inc test cmp int3 add mov cmpsb sub mov call push xchg inc pop adc add mov mov mov mov adc mov icebp cwtl sti in inc cmc dec or shll xchg inc test cmp int3 add mov xchg add inc push out aad or mov iret inc pushl add leave sbb lods test cmp aaa insl adc sbb mov test aaa pxor sbb mov xchg add inc push out aad push lds (bad) cli aaa push adc add mov mov or (bad) xchg dec inc adc sbb mov mov cmp stc sbb xor mov aaa xor lods sbb mov xchg iret lods (bad) sti cmp out aad ljmp sti sarl sbb mov sar sti mov mov (bad) push movzwl fldl cmp pusha xor xor cmp clc idivb mov stc inc pushl jg loope add mov in inc xchg jnp clc sbb mov lea insl adc sbb mov mov cmp adc clc mov int leave mov sbb or out (bad) sti cmp clc cli mov (bad) out jno fcmovnbe mov jmp fcoms xor inc lret add roll repnz xchg pop adc js mov mov sarl js mov test iret lahf sti sarb js mov test iret sahf in mov stc sbb cmp xchg movsl pushf inc cld cmp in stos sbb xlat in mov mov bswap popf cmpsb icebp inc in (bad) out aaa pxor pusha or sar repnz loopne adc sarl mov in inc in cmp in sbb mov mov push mov sbb sbb mov ret inc jo pop sbb mov out inc sar sti mov mov (bad) icebp jno sti sarl sbb add dec adc enter mov icebp inc loopne adc sti add mov (bad) or mov in sbb lcall out lock mov (bad) ds cltd sti ret inc pushl jnp stc sbb mov jecxz enter sbb fsubl mov sar sarl add mov clc cmp leave (bad) sti cmp clc idivb int enter ds rcrb push mov iret in inc xorl add lcall mov sbb xchg xor aaa jnp jecxz pop mov out or aaa sbb negb or cmpsb fwait in xchg jnp std add roll sarl clc repz (bad) sbb test lds cmp adc sbb mov cmp mov movsl movsl sahf inc out aaa pxor js mov pushf in inc xchg jg hlt sbb mov movsb sti int3 inc out cmp mov test rolb sbb lock mov test xor cmp into sbb mov fcomps mov inc inc cmp adc sbb inc add in inc push cmp adc sbb mov pop mov cmc sbb dec jl adc mov ret inc in cmp std add mov xchg inc lret mov pop add roll sarl js mov (bad) testl dec add mov (bad) sbb mov ret inc in cmp in add stos in mov enter mov sti sti mov push add test std inc hlt cmp ljmp add xor inc xchg sahf inc lock ds test lock sahf inc icebp cmp in stos add mov lods sti stc inc in cmp cli sbb mov cmpsb in ffreep lock scas sbb mov aaa pxor add mov cmpsb or movsl movsl sahf inc out aaa pxor js mov (bad) sti icebp inc xchg jae sarl mov ss lahf sti stc inc pushl jg push add mov cmpsb sub xchg in inc xchg addr16 push add mov test (bad) lahf sti sti inc xorl inc xchg incl aaa pop out ret mov out jns in mov push add mov sahf fwait hlt mov stos add rcrl lock leave add mov cmpsb sub lods (bad) cltd inc jnp clc add mov xchg or aaa pop out testl add mov dec adc mov xchg test mov negl push mov scas in mov out js roll testl clc loope inc (bad) inc icebp push sbb out negl push mov scas in mov out js roll testl clc loope inc (bad) inc icebp push sbb out negl add or cmp adc add mov mov mov cmp lods sti stc inc pushl jnp stc sbb roll inc xchg jae sarl dec test jno sti sti inc xchg jnp clc sbb mov mov repz sbb or leave fcmovnbe mov lds add inc lret mov add add nop fwait jmp in cmp mov mov loopne loope pop adc add mov push dec inc cmc inc or str mov negb mov out inc mov test fnstcw mov negb mov call adc pusha or mov cmp adc enter cld setbe adc std js mov callw test adc sbb mov les push adc js mov clc cmp scas test mov fsubs leave mov in inc pushl pop adc test xor cmp cli sbb shrl sahf inc out aaa pxor js mov mov ret cmp out sarl leave mov cli inc rolb adc sbb mov xchg dec (bad) loope mov jbe adc sbb lods fwait nop inc in dec sub sti pusha sbb mov cmp adc js mov insb add inc in aaa pusha and mov movsl (bad) inc xchg adc pusha or stos test adc clc aam mov test adc add lds fwait xchg inc test add mov (bad) dec leave mov testb sbb aaa clc (bad) mov cmpsb sub inc mov rclb adc mov (bad) hlt dec mov aaa sbb (bad) js mov xchg btc ljmp add mov (bad) adc arpl dec inc scas mov push leave xchg test add cmp in fsubs leave mov in inc pushl add into sbb mov test xor aaa jg sti sbb dec add add sldt mov scas fwait mov inc jp xor mov xchg add aaa jg hlt sbb mov cmpsl fwait jmp out sti sbb mov out or aaa jae negl add addb inc xorl add stos in inc loopne sbb mov cmpsb add rol inc (bad) inc adc (bad) js mov (bad) adc mov inc aaa out ret pusha daa mov mov xchg inc addl daa clc (bad) mov cmpsb and xchg test in ss mov mov fwait std inc jmp sbb mov xchg jno test adc pusha pop mov fcoms aaa (bad) mov push adc clc aad xchg data16 movsl fwait out mov sbb lgs or stos fwait mov mov fnstsw scas test mov (bad) js mov (bad) inc icebp jg test cmp cmp sbb mov test adc pusha or scas in mov mov fcoms aaa (bad) mov push adc clc aad xchg data16 movsl fwait in mov inc in cmp mov xchg ja mov xor repnz mov cmpsb or mov test in mov scas in inc cmc inc add out pusha push lds fwait mov inc or pop add pop mov sahf inc lcall mov fsubs add inc arpl in pusha adc dec (bad) in jg test adc sbb mov xchg inc mov hlt mov jmp and mov out inc pushl jae out xor andl out leave xchg test jno add or int mov add stos mov adc test inc mov cmc mov pop sbb lds bnd fwait loop idivb or add adc pop clc sbb sbb adc lds sub imul sbb mov mov or dec mov xchg inc test clc jmp xor jge out js leave xchg stos inc pushl jae iret js mov cmpsb add mov mov pop lds add out adc pusha or aad xchg inc movsb mov (bad) mov cmpsb and xchg test mov negl add mov adc negl add stos in inc pushl jae negl add inc and adc negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl or xchg xor in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc clc cmp out rolb out xchg data16 mov cmp adc add shll in inc stc cmp out fdivrs roll fwait inc (bad) cmp lds test inc pushl jae negl add dec and add adc xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add scas sti ljmp js mov xchg add aaa jnp lcall add mov aaa jae negl stc roll clc inc cld cmp sbb push mov xchg pop mov mov adc pusha adc aaa ja ss dec inc into out mov xchg jno sti cltd inc clc dec adc mov shl mov cmp mov xchg pop mov std mov jecxz jmp push test in in add lds mov (bad) in sub or xchg data16 ja in inc addl in js mov xchg test adc aam dec cmpsb lock mov inc or adc push mov pop sbb addl sbb or insb add adc clc pusha push roll inc cwtl inc or adc lgs pop ja fwait xchg inc jmp push in add clc mov jle push inc xchg aaa add adc adc setge adc aam dec cmpsb lock mov inc or adc push mov pop sbb addl adc mov xchg pop xchg movsl loopne pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add scas in inc pushl addr16 jecxz add popf test inc pushl jge icebp sbb add cmp negl add mov aaa jae negl loop mov in mov adc xchg add aaa jge icebp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add test aaa jnp lcall add mov rolb aaa jge icebp sbb mov out add inc jle negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov cwtl and mov inc inc adc xchg sti add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov cmpsb add stos in inc icebp dec jns negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov cmpsb add stos in inc out xor add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg add cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg add cmp lock mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg add xor add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg add aaa ja lock mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jg sti sbb mov xchg add cmp lock mov xchg pop movsb in inc scas aaa jae negl pop cmp mov clc inc pushl jae negl add stos in inc pushl jae negl dec adcb inc std cmp push sbb mov xchg add aaa jae negl add stos in inc clc cmp and xchg add aaa jae negl add stos in inc pushl jae negl add mov add negl pop cmp mov clc inc pushl jae negl add stos in inc pushl jae negl fdivrs shl clc inc icebp dec dec adc sbb mov xchg add aaa jae negl add stos in inc icebp dec inc adc sbb int xchg add cmp out iret sbb mov xchg mov or iret sbb mov cmpsb add mov cmp sbb mov cmpsb add mov aaa and stos sbb roll pop movsl sti int sti aaa and stos sbb mov (bad) or mov aaa jae negl add push add movlps cwtl in mov xchg add aaa jae negl add stos in inc pushl jae negl add test lds aaa jae negl add inc and jae negl add stos in inc pushl add (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl repz xchg add aaa jg sti sbb mov xchg (bad) out lcall repz (bad) or lahf fwait jmp stc cmp in jmp stos cmpsb add movsl sti int stc cmp mov or mov aaa jae negl add andl add rol inc testb lcall ljmp test inc testb jecxz jecxz mov mov or (bad) sbb mov cmpsb add mov cmp sahf xchg add aaa jae negl aam mov add mov rolb adc negl add ret fcmovne inc testb (bad) sbb mov (bad) or lahf fwait jmp stc cmp inc out pop scas in inc stc cmp sbb jecxz mov mov pop adc sbb mov (bad) or mov sub scas sbb mov xchg add cmp out negl add popf test inc cli xor dec mov out inc cli xor dec popl loopne cli xor add mov cmp (bad) sbb mov cmpsb add scas in inc stc cmp sbb jecxz mov mov pop out (bad) sbb lds fwait std inc stc cmp jecxz in pop (bad) or lahf fwait jmp testb negl in movsl xchg pop lahf fwait jmp stc cmp in scas sbb mov (bad) or stos in inc pushl jae negl idivl lahf fwait jmp stc cmp fwait xchg pop mov inc inc adc sbb mov out pop lods sti lds inc jp negl in mov test inc stc cmp sbb ljmp mov or (bad) sbb mov cmpsb add mov cmp lcall inc cli xor add addb inc sti aaa pxor sbb mov cmpsb add lcall out lret sbb mov mov (bad) out lcall in push sbb lahf fwait jmp stc cmp in scas sbb mov (bad) or stos in inc pushl jae negl dec lcall inc cli xor std leave cmpsl (bad) or popf test inc std cmp in stos sbb leave mov clc inc sti aaa pop out (bad) sbb mov test lds aaa pop adc sbb mov (bad) or pop sbb out lret sbb mov (bad) or mov cmp sti sbb mov xchg pop cmpsb in inc stc cmp sti sbb mov cmpsb add mov jae negl idivb pop sbb out lret sbb (bad) mov or mov stc inc stc cmp inc out pop xchg test inc testb sbb in mov sbb out lret sbb mov (bad) or lahf test inc stc cmp mov mov jae negl hlt mov xchg add aaa jg sti sbb mov mov push adc sbb shll ljmp sbb mov out pop sahf test inc testb sbb in pop (bad) or lahf fwait jmp stc cmp adc loop mov sbb out negl repnz out pop mov inc jp negl out mov add xchg test inc stc cmp sbb jmp inc out pop xchg or (bad) sbb roll jmp std cmp negl cli roll lock cli xor dec lcall inc pushl jae negl cmc mov mov aaa jg sti sbb mov xchg test inc stc cmp sbb jmp inc out pop lahf fwait jmp stc cmp cmpsb cmpsb add lcall out iret sbb mov cmpsb add lcall out lret sbb mov (bad) or xchg and cmpsb sbb lds in inc clc cmp sbb mov pop add jns lcall repz cmpsb add mov cmp jecxz in pop (bad) or pusha add jp negl in movsl xchg pop mov (bad) out lcall std leave cmpsl (bad) or mov inc adc cmpsb add stos in inc sti aaa pop adc xchg add cmp negl in pop (bad) or mov cmp out (bad) sbb mov test or (bad) sbb mov xchg and cmpsb sbb lds in inc pushl jae negl idivl lahf fwait jmp stc cmp fwait xchg pop mov inc inc adc sbb mov out pop lods sti lds inc jp negl in mov test inc stc cmp sbb ljmp mov or (bad) sbb mov cmpsb add mov cmp lcall inc cli xor add addb inc clc cmp negl in pop (bad) or mov cmp out (bad) sbb mov test or (bad) sbb mov mov (bad) out lcall in push sbb lahf fwait jmp stc cmp in scas sbb mov (bad) or stos in inc cli xor std leave cmpsl (bad) or popf test inc std cmp in stos sbb leave mov in inc cli xor add pop sbb adc cmpsb add lods sti lds inc outsb out jecxz in push sbb mov and cmpsb sbb (bad) mov or lcall adc sbb roll into inc stc cmp mov (bad) or xchg fwait std inc stc cmp sbb jecxz insl out pop mov aaa jae negl dec lcall inc cli xor std leave cmpsl (bad) or popf test inc std cmp in stos sbb leave mov clc inc std cmp adc xchg add aaa jae negl repnz xchg add aaa jg sti sbb mov xchg add aaa jae negl fdivrs mov clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add lods in inc pushl jge icebp sbb mov xchg add inc jnp negl fdivrs stos in inc testl mov lods in mov negl fdivrs lods in inc repz jp cli sbb mov stos in inc out xor add mov aaa jle inc cmp push out cmovs jae negl adc out cmovs adc sub call mov scas sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jl and xlat mov jl push mov inc clc xlat mov jl push mov inc clc xlat mov scas in inc mov add les divl shl inc mov add les divl shl inc mov add mulb mov test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp test stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp dec sbb mov cmp pop push jmp xor out adc cmp pop push jmp xor out adc sub sets add lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor ljmp xchg (bad) jno in inc lahf inc inc out pop sbb sarl cwtl inc lahf inc inc out pop sbb sarl sahf inc mov add mov xchg pop shl inc mov add les divl shl inc mov add les divl scas in mov sbb icebp mov fsubp icebp mov sbb icebp mov fwait in inc clc inc sbb mulb mov xchg out loopne popl inc push adc xlat lds out loopne popl inc push adc xlat lds out call aaa jl hlt add mov xchg pop shl inc mov add les divl shl inc mov add les divb stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add dec and out adc cmp pop push jmp xor out adc cmp pop push jmp xor out adc xorb stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae lock mov stos in inc out or negl add mov clc inc pushl jae cli add mov stos in inc xchg lret out adc cmp pop push jmp xor out adc cmp pop push jmp xor jno adc xchg add aaa jae negl cli roll clc inc pushl jg sti sbb mov xchg add aaa jae negl enter repz aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add lods in inc pushl jge icebp sbb mov xchg add inc jnp negl fdivrs stos in inc testl mov lods in mov negl fdivrs lods in inc repz jp cli sbb mov stos in inc out xor add mov aaa jle inc cmp push out cmovs jae negl adc out cmovs adc sub call mov scas sbb mov xchg add aaa jae negl add mov mov xlat mov jl push mov les divl shl inc mov add iret sbb mov xor out adc cmp fs dec loope test adc cmp pop push jmp dec sbb mov cmp pop push jmp xor and add push jmp xor out adc cmp fs dec loope test adc cmp pop push jmp dec sbb mov cmp pop push jmp xor and add push jmp xor out adc cmp fs dec loope test adc cmp pop push jmp dec sbb mov sbb sarl cwtl inc lahf inc inc in add xchg out loopne popl inc push adc xlat lds in inc mov add les divl shl mov negl add stos in inc pushl jae negl add stos in inc pushl jae negl add dec and and negl fdivrs stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add scas in inc out xor loopne sahf xchg cmovs and negl add test lds aaa jnp lcall cli roll inc pushl jg sti sbb mov xchg js cmp out negl add mov cmp sbb mov cmpsb add scas in inc std cmp push sbb mov xchg add aaa jae negl add stos in inc icebp dec add pavgb dec jnp inc mov sarl rcrl addl js mov push test fmull out out pusha and mov addl sbb scas fwait mov inc jns dec clc repnz incl inc lret loopne sarl sahf mov call xchg setle cwtl out testb mov cmpsb cld aaa push inc jle or sbb fwait sti ret inc (bad) dec jae xor data16 xchg mov or ljmp pop arpl dec inc mov js add mov clc pop (bad) jb lea in pusha and mov mov push adc pusha sbb cmp cmp sbb icebp mov in aas clc in leave xchg cmpsb hlt aas lods fwait mov xor or mov add add and addb inc hlt inc (bad) in add lds sbb adc js mov push mov dec lret in into sbb leave cwtl cmpsb sub nop test inc fmull in xlat add mov (bad) sbb lea jle in js mov push xchg inc jmp jbe inc loopne mov cmpsb or fwait mov sub idivl mov mov mov adc js mov push mov dec lret in into sbb leave cwtl cmpsb sub nop test mov jmp and mov mov adc pusha push lds popf mov add in mov test adc sbb mov fwait mov inc aaa out repnz mov cwtl cli add dec (bad) in xlat add mov (bad) sbb lea or clc js mov imul inc sti cmp mov imulb pop arpl dec inc mov js add mov clc pop (bad) jb lea in pusha and mov mov push adc pusha sbb cmp cmp sbb icebp mov in aas clc in leave xchg cmpsb hlt aas lods fwait mov xor or mov or pop sbb mov (bad) cmp nop in inc test jge adc mov ja fwait in (bad) cmp sub aam push (bad) in jg sbb mov add lea jge adc mov ja test adc fcmovnb mov sbb (bad) cmp adc js mov (bad) in jg sbb mov js cmp push lds fwait cmc inc incb in xor mov xchg inc cld cmp sub aam push (bad) inc iret push sbb scas mov or movsl cmpsb sub jb lea inc fucomi fisubl mov cmpsb hlt aas mov mov adc dec fsubs add mov and mov fwait pushf inc mov cmp adc out leave mov and dec and push adc add roll inc test jge adc mov ja test adc fcmovnb mov sbb (bad) cmp adc add mov cltd mov sbb idivl mov push out inc addl sbb push mov xchg pop lcall adc add mov mov (bad) jb mov inc jg in in mov fsubs aaa mov mov xor mov add or sbb push lahf inc out fucomi into sbb lds adc sahf test adc and iret fwait sti ret inc flds out adc xchg add xor or stos fwait pushf mov std js mov xchg movsl sahf mov out js mov les insb in and clc push iret fwait sti ret inc flds out adc xchg add mov cwtl mov adc push test adc in dec (bad) cmp nop in inc test jge cs hlt leave sti data16 pop movsb test adc jecxz mov movsl xchg dec (bad) in xlat add mov fmuls dec rcrb jg adc cmpsb sub jae addl dec adc out mov fxam clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl imul sahf xchg add cmp out negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add cmpsb sti test (bad) xor mov (bad) dec rcrl push xorl mov movb cmpb adc sbb inc test out add xor lcallw ja or mov mov addb add adc mov daa mov inc cli xor add dec (bad) jmp inc movsl inc pop out daa add int call popa (bad) cmp pusha or mov addb add adc leave cmpsb (bad) jecxz mov mov clc inc ljmp call mov mov ja cmp daa mov (bad) in jg fwait mov sub sti dec lods mov rcll pusha daa mov (bad) cld dec fsub cwtl mov push add shll setns ja cmp sbb shl repnz addb push js mov roll adc add mov call test in sbb mov call mov in sub (bad) or xchg fwait mov mov imul sbb leave dec movb rcrl add adc (bad) sbb cltd mov ja cmp cmp jg pop mov and (bad) jecxz jno mov or or lock mov pop mov aaa adc adc rcll dec sar lahf mov sbb (bad) testl (bad) sub sbb int mov jns fwait mov fistpll mov mov add in int push (bad) jmp mov sub outsb jbe out icebp inc mov mov mov add sbb rcll mov adc add leave push (bad) dec (bad) imul adc dec (bad) dec mov dec dec adc pusha or inc (bad) idivb movsl pop inc add sub jp mov int3 mov ret cmc dec int mov adc jno loop adc repnz (bad) jmp rcll pop js add call cmp dec adc add sbb icebp aad pop inc mov and xor jecxz ss test mov cmp insb inc pop imul cli mov push push cmp mov enter sbbl movsl lret (bad) in cmp or fst sbb pushf sti mov mov cmpsb xchg push push movb add sbb add je sub out loope push outsl mov xchg inc std dec jne fnstsw int enter lods push mov in repz cmc cmp jnp dec push orb xchg cmp jne inc add mov movsb xor js jno push cmp sbb jnp inc inc daa push lret cmp int3 add (bad) or or jne leave jge,pn push push mov sbb xchg daa fwait cmpsl mov js stc adc jmp dec test add (bad) icebp jmp xchg inc push mov out mov cmp mov enter out test inc dec dec inc insl cmp insl addb lcall dec adc in push in arpl ss pop push dec imul loope mov jnp (bad) lock loope and mov pop js jne out sub andl cmp push pop mov (bad) xor and les addr16 inc jp adc std push test call inc addr16 sti mov rclb dec add add cmpsb daa inc push pop add in fldl2t divl lods push idivb fcomp mov ss sbb mov int in push rcrl icebp outsb dec imul or bnd out out call mov pop enter mov xor mov sbb mov sbb jp data16 cmp xchg loop inc fwait sbb mov push mov or in fsts mov inc in adc out xchg (bad) (bad) or mov popa ret xchg adc les push adcl add hlt jl push ret lods adc sub jno adc mov sub mov adc sti test add clc inc movsl cmp mov add add dec xor dec imul cmp push or fsubrl adc xor je mov sub adc addr16 hlt or hlt repnz push sub lret push dec add mov push push js mov cmpb sbb mov loop lret mov in clc or mov ret sub ficomp in add sarl daa sub test (bad) pusha addr16 or mov add sbb jg fs xchg or xor cmpxchg jmp xor cmc inc mov loop push paddq ss mov orl popf sbb (bad) lea bound out jl xor fwait sub add mov pop pop test and es mov lcall cmp mov aad mov xchg xchg and jge test (bad) decb scas pop xor push jle mov adc push mov add pushf cli xor call ret loope adc fisttpll insb inc adc hlt out call repz stos aaa fistp arpl ljmp push ret pop pop pop mov addr16 jle icebp in addb push cmp jp,pn inc add (bad) fcoms into jmp mov lea xchg aas lret add adc lea mov or (bad) fidivrl imul mov fnop mov loope push aaa dec xchg or aad (bad) out xor js enter mov idiv mov dec (bad) (bad) in shlb jecxz out das loop push test scas loope xlat stos cmp clc dec jb into cmp mov scas int inc sub jecxz sbb test jnp inc pop mov out cmc cwtl add inc loope outsl fwait lea add cld mov movsl add dec movsb jmp lods sbb add (bad) cltd (bad) sarb imul xor add call adcl adc pusha cs imul jge fdivl adc int3 sub push mov into cmp inc ret adc ss test (bad) dec insb pop mov inc sbb mov lods fldcw pop aad add mov fcmovnb mov lcall repz push inc pop clc fsubl mov inc inc push (bad) (bad) les lea sub cmp jbe ret inc and adc adc out lcall subl stc loop cmpsl mov dec gs pop add leave mov sub push scas enter sbb dec loopne jns int3 or loop pushf inc mov int push or loopne cmp mov sbb pop (bad) and ret popa mov sub bound (bad) mov fcmovu and sbb cld or push xor or stos lds dec xchg iret testl mov mov (bad) in jae sbb add es aad outsl mov mov jmp cmp xchg into sbb cwtl loop rcll inc fcmove shrb xchg stc cmp dec mov out cld xchg mov adc insb mov in xchg sbb int3 mov xchg dec test clc in lret aas or inc add xchg jle xor mov (bad) jle adc xor push jmp fidivr jl int dec or pop xor into (bad) cli ret cvtps2pd jmp and inc aad les into sbb mov ret dec test mov mov jbe adc out dec cld repz adc mov mov notl jno fisubrl push jno push rcr inc scas pop in mov inc cld dec push cmp orb xchg mov scas lret xchg add cmp dec addr16 aad pop xor dec jnp jle stos dec cmp (bad) push gs out mov pop mov ja ss int add push clc hlt (bad) lock (bad) in mov xor ds push int3 mov imul cmp push out vcmpps sbb add inc sub js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc fs enter sub add test cltd loopne mov jnp inc add add sahf or xchg mov in cmc cwtl add sahf or loop or jns cmp lds gs pop xor sarb cmc cwtl add sbb pop int js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg cmpsl xchg std cmc clc add and xchg xorl xrelease mov out cmc rolb push or sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov out cmc xor cltd push or sub mov in cmc cwtl add sahf or xchg and cli and jnp inc add leave pop mov addr16 int3 les sub adc bound (bad) sahf cltd jmp ror clc mov jmp add sahf mov ss jg icebp out negl repz js add xor fs add add sahf or xchg mov (bad) dec add mov arpl sub cld les xrelease mov add pop lret jmp lret mov cli daa add into pop jbe xchg cltd ja negl or mov xor jne (bad) pop shr sub addl pop orb rorb cmp mov in adc lcall jg repz repz lret pop (bad) jmp mov test cmc cwtl add sahf repz lcall outsl adc adc jmp lret xchg les aas std add sahf or xchg mov add pop shr sub dec jg adc stos jle or test cmc cs mov imul add add pop shr pop aad mov stc daa add into pop jbe xchg mov repz adc add cld mov fldpi jp popl jmp into jmp sub and sub cli scas jle jmp sub enter outsl cli mov mov les pop addr16 pop enter mov jg sub add stos scas test xor dec repz dec add lahf add testb push repz mov mov loop cmp xchg jle repz mov mov add addr16 lods jle xrelease lea jg lds pop stos scas test aaa adc repz lods mov jecxz or xchg sahf push adc int mov sbb xor (bad) xor pop sbb test fdiv jbe loope scas (bad) cmp aas std add sahf push adc int mov sbb xchg bound scas mov sbb push cld stos pop fistl inc lret (bad) mov jnp iret add adc xor mov sbb sahf adc shrl jae das or pop in adc sub sub adc bound (bad) pop fldpi in sub mov repz adc bound stc negb xrelease lret inc mov mov scas rolb dec sbb mov add mov and (bad) bound cmp scas stos lret movsb movsl clc xor (bad) adc mov not es cld mov dec xchg clc push stc mov xchg sbb stc jp or int3 fs insb cmc and lock xorb cmp ja lock push add rolb dec sbb sbb loope mov ror call dec bswap dec mov int3 xlat xchg addl popa cld int mov lds sub mov (bad) cli or bound inc sbb jb xchg jg mov test out mov xchg sbb stc jp or int3 fs insb cmc and lock xorb popf icebp push jno icebp mov shrl jae icebp push jno cmc sbb sti jns fildl sahf xchg sub lret push into sahf lods pop mov sti mov xor add add scas add mov adc or add push mov mov ret loope sahf mov pop lods sti in imul cmp (bad) (bad) jmp mov in test ret bound pop lods adc push xlat adc ror in bound jl xlat ret pop divb mov (bad) pop xchg inc xorl adc aaa out nop gs mov cld dec mov lock jmp cmc jns (bad) dec pushf pop std push dec in mov idivb cmp add mov nop roll ljmp xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov out aaa xchg clc cmp addr16 inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg add and mov rolb fnstcw stc and out mov xor cli mov mov lds ret mov notl add sarl lret loope push ss jmp std lea mov mulb (bad) lahf xchg nop cld or lods adc fwait xchg lds rorl sub sbb sbb shr push hlt push adc outsl clc pop jle jmp roll es negl xrelease cmpsb xchg sti into adc sahf inc mov inc jg icebp in cmc xchg clc cmp (bad) icebp inc pushl inc out cwtl add jno adc cwtl jge push test inc mov in mov sbb ficom adc (bad) jae sahf hlt divl add xor sub adc jg mov in mov sbb push inc in dec cmc cwtl add sahf push repz push scas cld cld cwtl or gs popl js add jge cmc cltd incb pop adc sub xchg repz and xchg sahf sbb sahf sub mov out cmc lahf add sahf pop adc add cli ss pop repz sub mov add sahf add mov mov push xor pop repz sub mov add sahf and xchg shlb xchg add cmp sarb dec mov int3 into (bad) negb xor pushl pop jmp sub fnstenv push and push dec mov mov cmp add mov repz add cmc mov rorb push sahf mov (bad) sub dec ljmp decb pop in mov jle lcall (bad) or cmp (bad) lahf mov cld xchg inc xor xchg cld dec lahf pmuludq or push sbb mov mov test adc ret fbstp xchg lahf pop add push popa dec inc cmc inc adc add iret sbbb cmp cmp shr dec fldenv adc sub xchg or out ljmp pop fadds sub xor jmp popa mov dec bound mov mull add in ljmp xchg lahf pop pmaxsw dec ja adc cli loope (bad) mov and add adc jne (bad) cld fwait push loopne aad xchg lods pop add (bad) xor lea xchg lahf outsl out jmp and repnz std push std out dec pop in cmp sub (bad) push or cltd shrl (bad) cmp (bad) lea (bad) and popf or xchg ficomp loope inc mov push cmp fcomi shll xchg xchg jle icebp lret sub sahf adc mov in cmc lahf add sahf or xchg jmp add sahf or fisttpll add jg repz lcall push outsl js jg (bad) in clc popf add push repz insl js add cli mov jae inc jle xchg test por add add fwait cli dec sahf pop or add icebp loop cltd clc and sub mov lret js add add adc js jg loope and mov xor int3 loope hlt addl sahf aam test xor push add clc adc stos cli push sahf xor in mov cmp mov add pop jae adc cld adc push pop adc movb js sub mov add dec aaa div add (bad) mov pushf inc inc jp repnz fld add mov jg lahf js mov cmpsl fisubl fimul mov test xchg rclb add divl mov (bad) jno push in xchg bound adc daa dec dec add outsb rol add test mov add cld xchg add sahf insl push test cmpl jne mov addr16 adc jg push das or lock xor mov add mov inc or add stc stc push sti lcall mov push push icebp xchg xor mov add push adc stc push push or and loope ds sbb jle in clc fdivr mov xor xor push add pop sti pop adc lock in sbb jle in clc fdivr mov xor xor dec or mov lods adc pop xchg jl xchg dec and push enter xor adc push hlt test sahf dec push roll aas pop fs lods inc sti clc or jno test inc and push mov icebp (bad) push mov mov jle or aas movsb mov mov inc inc jbe gs pop je flds ret negb stc insb jge (bad) lret stc lds cmp cs add aas shll cmc inc or imulb and sahf add (bad) dec push jns jg popa and cmpsb pusha add dec ja vpaddsw out ljmp clc sbb and or xchg fistp inc add add mov js ja jo sbb xchg (bad) jle divl repz stos dec cmp sbb out andb sahf inc loope xor stos loop push cwtl add mov inc xchg pop jmp in cmc ret sahf mov fwait mov mov push xlat sub fwait pusha jle in cltd sbb mov (bad) das add dec jnp inc imul clc mov sub mov loope mov mov push add icebp jns mov xor push dec dec add repz rolb outsl mov cld js pop in in cmc xchg cld add xor jns std popa inc fptan sti push movsl push jmp and popf lret add in sahf psllq popa pop sub add (bad) clc mov push xchg rclb xor dec in (bad) jge push cmc cwtl add enter add add int3 or icebp insl cmc outsl loop mov jbe inc add adc mov jnp roll repz lods push or sti js pop pop pop dec and push push xchg mov in lret jne or mov pop inc lods add je xor cmp dec add add sahf ss lods push adc push leave lahf in cmc lahf add xor sub icebp out neg std dec bound sbb popf addr16 add or pop (bad) les jnp inc add or fmul cld outsl adc adc cli push test cmp jmp arpl sbb out idivl clc cwtl orb jns cmp inc jg jg out adc pop not (bad) dec jnp inc add add sahf pop or sub js cli sub out icebp or stos addl jnp add pushf lock add ja test mov add sub js jp cld out divl and jg cld xchg lock clc xchg testb repz addl sbb lcall cmc out (bad) int3 (bad) outsb (bad) push repz jl jg mov stc lahf add sub xor add mov out lods jns,pn cltd jp notb repz stc arpl adc jg jp in std push mov lods add addb pop add xor adc lret dec pop push add xor ljmp rclb push mov jp sbb popa repz ja in pmaddwd xchg jp add cmp mov ljmp loopne test or adc mov jecxz daa fild pop xchg jb sti dec mov rep cmp add dec out cmp jle loope (bad) lods add xor mov add aam add inc inc adc dec popf mov push arpl idivl imul jle incl inc sti add repz adc (bad) je sub in push ja xchg cli popf into sbb mov jbe mov in add aas leave jne je fcmovne decb rclb add cmp jge arpl push repnz pop insl add or insb (bad) inc cmp ja ja (bad) adc andl push sub daa xchg pop repz dec in dec or jnp xor or pop (bad) mov push cmp notb ds pop add (bad) jns sti push nop pop loopne mov (bad) mov add int3 fsubr mov ds jb je sbb jmp cmc test sbb sub push lcall cmp cmp pusha or jno jne cwtl jnp sbb fadds push jns jl divl repnz pop (bad) mov adc int3 inc test or push sbb cmp loop inc jg ja out or cld push pop push divl dec or pusha push pop pop clc pop inc adc test add jle outsb scas sub icebp jle dec imulb cmc jmp mulb sub dec cmp icebp xor sbb dec or jp icebp add pop jae std clc jecxz out jno ja mov dec xor push sbb push mov jge dec loope add arpl call push add loope (bad) dec add sahf inc adc add fsub leave add jle repz jnp add jno clc xchg add push repnz movsb clc xchg xor stc rep sub out sahf cld in loopne add hlt pushf aad (bad) xchg add mov testb jle ljmp lret (bad) mov sub and jle insl jno xchg add arpl repz add add inc sahf adc sub cmp in into es mov sub imul loopne stc fdivrs jecxz iret jle jb int add ljmp jg negl ss add bound mov jp fidivrl adc pop lock stc dec in mov jmp pop and add sahf mov inc sub ret pop add inc test jno inc repz push cmpsb popa aas hlt xchg lret pop mov cltd pop rolb sahf lods jmp sti incl repz ret inc add lret dec add jg call or sub mov repz mov add decl adcl add subl call jmp sbb aam in pop lods (bad) fnop dec pop mov mov js sti inc jb aam pop pop sahf lods hlt mov add and stc mov mov pop sub pop loopne pop push pop mov adc sti jmp pop fcompl push jp jg sbb sahf mov jg (bad) xor in add mov mov mov inc add jle adc lods fnstcw sbbl xor add mov js jae cmp cmc xchg clc je pop repz dec and lcall add sub mov cli cmp js mov icebp fwait decb mov inc sub add or aad mov stos xchg (bad) push pop jge sub repnz dec test test mov cli adc lcall push incb add jb sbb std pop test repnz xor mov lock mov adc add sahf or xchg mov or jae xor sub mov out notl repz mov in cmc cwtl add sahf and xchg sub mov add sahf or subb (bad) pushf jle icebp jmp sahf or xchg sbb sahf or subb js jno push push (bad) sti cmp test jg icebp out stc (bad) clc aas sahf sbb mov data16 add loope out popf add push repz add add sbbb mov mov sbb xor inc mov mov xchg stc cwtl int3 hlt dec xchg or or inc adc in imul and icebp lahf clc test push sar push fidivl lds sahf les imul scas aam add iret lahf ret into js shll loop dec mov push (bad) negb js adc mov or or test adc sbb fildl jbe inc lcall or movsl in clc mov inc sbb dec inc inc sbb lds icebp ret jnp jne ja andnps pop mov (bad) jge cmp add or dec cmp stc movsl inc test mov mov test ret jnp jecxz stos icebp pop mov mov std mov (bad) sbb jmp into scas mov inc mov adc hlt iret stos ja push int mov cmp or shll xchg dec test or cmpsl nop cli xor shlb insb and mov mov mov or ret hlt iret stos ja push int mov enter jmp mov and int3 inc sbb outsl jmp jge les fimul arpl adcb mov jns in rcrb jo inc call and rcll test adc sbb fildl enter push adc shll sub mov sbb mov ret scas lcall data16 cmc mov mov shrl add daa (bad) xchg fwait cmc and sahf or ja add cwtl xchg lret inc icebp mov negb js adc dec sub call stos testl inc ret imul scas ljmp cmp sbb sbb pop mov arpl mov sbb xchg inc movsl xchg cmpsl sbb movsl mov sbb stos loopne inc cmpl aaa movsl (bad) or lds dec test add in (bad) dec bound (bad) in add lret xchg jle loop cmpsl mov dec gs sub mov jne add add xchg push or (bad) sbb sbb jb sbb movsb xchg add xchg push or (bad) xor enter inc mov jnp fdecstp adc mov sbb addr16 sbb add int test clc push xlat push mov lcall mov in lcall pop int mov test or mov jmp sub lret push mov xchg ret sub loopne lock aad mov (bad) insb mov cli sub aaa in or xor test bound out jo jae adcb test lds int fadd dec scas aaa enter mov in mov mov mov loopne add adc scas mov adc repz ret xchg pop jge cli cmp js into xchg leave std in fnstsw lret sbb xchg aas mov std mov cmp incl and fdivrl enter add pop mov lahf ss push jecxz or addr16 adcb pop jno and mov cmp mov mov test push dec insb adc hlt (bad) mov sbb xor (bad) sub xor lcall iret jecxz (bad) sub psubsb leave push xlat jg mov fmul call out js mov push add dec lret xor sub jne add mov clc mov cmp push daa jne push mov lods sahf or clc add pop mov mov add xchg xor cli push jbe lahf xor or sub pop inc jge cltd out jecxz scas or and adc movsl or and adc or aaa dec jle add test dec mov jle inc jp setg (bad) xor push gs icebp ret es lahf mov push fidivl lds sbb mov je or in ret mov sbb lret popf in push aaa nop leave sub xchg jno iret pusha jbe or mov ret jle sub popa rclb jle or fmuls xchg adc mov mov adc or in mov inc jnp scas add scas lret or into stc mov ficom sti sbb addr16 out test pop movsl ja test scas fsubs (bad) xor mov (bad) xlat pop and clc data16 or mov not and mov mov adc int3 roll push ljmp in hlt mov das sub xor incl ret inc lods rcr fidivl sub ss mov sub and push cld add push pop push jecxz or jl push mov (bad) mov insb adc xchg dec mov out jecxz jecxz insb sbb cmp fadd loope and xor mov push stc stc mov xor mov mov loopne or (bad) xchg pop cmp ffreep sub pop call scas mov (bad) xchg out arpl and (bad) sbb lret xchg pop rolb std and flds xor sbb dec ret adc sahf or sub insb loop add xor mov dec cmp or out int3 xchg jle pop into pop divb xlat imul add xchg mov cmc dec adc jns test sub adc jo or xchg xor hlt (bad) mov xor sbb mov inc jle jmp inc xor ret clc sbb mov inc pop divb stos add aas add (bad) cmp adc mov sub sbb adc jg add (bad) popa imul or sarb mov insl sbb cmp icebp sub cmc hlt cmp push clc in faddl das mov loop lret push imul mov cmp rolb xlat and movsl jno xchg cmp push leave or ret mov adc add js adc icebp scas mov jno cmc clc scas (bad) stos adc stos push leave mov fnop add je (bad) and pushf and push add mov mov sbb adc out xlat jle shl pop repnz dec mov fstl hlt or iret adc (bad) sub sbb or mov mov adc fmulp mov ljmp pop mov pop xchg xlat (bad) dec add sbb cli cld lds cmp xor mov cmp sbb sbb std pop (bad) repnz mov out or sub lret (bad) jecxz cmp sub out mov xchg divl jecxz inc adc fld mov adc push cmpsb mov xchg sub dec inc sbb lea mov dec mov into adc push and dec mov cmp xor shr rcr int3 inc stc dec cs in xor lds movsb mov jecxz ret stos (bad) mov add push lods mov shll mov xlat inc fadd clc fisubrl pop pop sub icebp mov xor xchg sahf hlt (bad) movsl xchg cmc cld cmpsb adc push cmpsl fwait stos adc std inc sbb (bad) sbb cld or xchg push or (bad) cmp dec jge pop inc xchg jmp sub push add jecxz cmp in addr16 pop fcomp xchg aas push adc in adc and mov insl jne sbb aaa test pop lret cld sbb loopne mov push xlat movsl ret xorl (bad) loope adc repz (bad) xor int3 inc stc in in sarl mov lods adcl adc mov aam mov out imul pop push cmp cmp scas pusha jbe jo sbb jp in pop dec ja out adc scas pushf push notl inc add icebp jns xlat test mov sbb addr16 xchg sub adc mull add pusha push lock push or inc cmp mov fs pop ret outsl push sbb int3 out (bad) shll iret insb gs aaa lea mov dec loop jo xlat (bad) mov cmp sbb and sbb sbb shr sahf push clc (bad) cmp lret out sbb push cmc bswap ret out inc sti lods das mov mov leave cli sub fnsave in xchg pop sbb cmp add push or lahf mov and test shll pusha add add enter mov dec cmpsl (bad) iret mov ret mov pop pop jno adc icebp scas lcall sahf mov sbb mov mov shrl in pop add adc stc mov (bad) sbb mov cmp fdivl adc int3 sub mov repnz xchg or mov stos mull xor (bad) and or stos cmc ja mov in fistl hlt test in (bad) dec std dec push rclb leave fldl xor cmc mov mov rcr sbb add stos scas js dec enter and jp mov mov lret xor lret cmp xchg mov inc lret leave icebp cmp leave lret cli ds (bad) sub dec enter push cmp add hlt sub inc std loop je xor xchg ljmp fucomp jmp xchg sarb int3 les stos (bad) adc js lods (bad) fisttp shr mov je cmp fidivrl add xor xchg ljmp pop je stc out jecxz test in das mov (bad) stos test cld out xchg aaa xchg xchg dec mov icebp mov add push and aad lcall stos dec loopne in fs shlb aam dec jne (bad) pop push nop enter jecxz stos aaa jecxz out mov mov add push mov mov (bad) push mov inc addr16 sub sarb test dec pop inc or xor test xlat aam mov pop sbb repz es stc xor shrl add sbb xor fmull push cmp pop out js xchg sahf mov pop cmp dec rorl imul jecxz ljmp pop out (bad) lret mov xor cltd into out fidiv xchg push leave lcall fdecstp sbb jbe or daa mov ljmp test ret adc xor loope es push adc pop or sti dec push ret push pop mov fadd stos popf ds pop jmp adc sbb pop mov iret pand cmpsl stos pop push in lds out cld sar iret adc push or out xor sahf out lret sub lret (bad) jecxz cmp sbb cld scas pop fwait or loopne mov push xlat in push push push mov pop outsl (bad) loopne mov add adc jp jmp add popl fimul lahf xor out rcl fwait or dec mov sbb mov rolb and and mov lods pop rcrl sbb icebp xlat into hlt pop scas jae add int3 sarl or lods (bad) cmp mov adc dec sbb jae inc sub xchg movsb xchg fcmovbe fbld sbb cmp lret (bad) jecxz cmp and sub pop sub cmpsl mov adc push or orb sbb jecxz test in hlt rcr pop mov repnz les test xor mov das inc adc mov cmc lds cmp icebp mov push mov into lock daa cmpl adc jge lods stos imul jle sbb les rol xchg dec jno (bad) jo ds push add jecxz cmp and insb or push push arpl sub clc ret or dec add pushl add aas std mull addr16 int clc mov fldt mov mov jnp jae jl cmp aam mov jns mov cli int aad ja pop ja adc jno lcall clc mov mov les rcl lcall clc test jmp jle ljmp mov mov lock icebp adc enter or dec insl cmp mov adc inc pop xor lods enter pop shr or pop les std xor inc pop sub cmp addl inc jle jmp sbb sub jg jge out cld ret sahf jge aad push add xorl cli test repz movsb mov cli daa or mov int ja adc jge out cld ret sahf jp cld mov les lret cwtl sahf xchg repz das outsl sbb add pop pop sub les sub out aad add sahf xchg jmp stos loopne inc (bad) cli mov jle adc push ja inc incl cmp add inc add ret mov dec jae int add pop aam loopne jmp arpl xor rcrb adc lods test fildl enter jbe mov add std jno mov mov mov add push clc lea xchg test adc test cmp inc popa jns xor jmp stos mov dec decl fsubs out pop stos mov mov out dec pop shr jno mov mov aas pop ss clc lret pop (bad) ljmp sbb stos jle adc stos mov dec sbbl repz lods mov or add cmpsb mov pop sbb ljmp ljmp pop inc xchg dec stos mov inc pushl pop imull or stos jle or shl mov call jle or mov test aas sbb lods jle jmp int clc mov sub clc ret or dec add pushl add aas std loope inc mov test inc insl sbb and pushf pop fist push mov test adc stos stos andl inc addl cwtl jle adc mov (bad) aaa adc lret test jle test push (bad) js mov inc mov mov fiaddl and jl mov add orl push jnp stos or sub add xor mov push (bad) jbe inc add mov pop lock dec or lds mov test or dec add mov aam call in sbb mov call lret mov add int out jns mov add in sbb int enter test adc pusha pop mov call mov lahf cmp js mov (bad) cmc jns mov js xor sbb inc mov pop mov cmp or movsl xchg xor mov adc (bad) ja mov in fiadd lock inc enter shl xchg aaa or sbb es rcr mov cmp push js mov (bad) fwait lods inc mov cmp add inc stc cmp into pusha or aas mov mov or add mov mov aaa add into add shll xchg in inc jnp lds mov xchg or inc sbb lret cmp test out es mov movb lahf jo pop popa cmp adc sbb mov lods in mov in in faddp cltd cwtl repz in mov movsl js mov rcr sti mov ljmp mov in inc test push adc add mov (bad) hlt dec (bad) fwait nop mov and add iret test adc pusha shll xchg mov push sbb addl in mull shll mov ljmp dec addr16 rorb movsl mov sti xor inc inc movb lahf pusha cmovle faddp xchg test add in mov in clc lds fcmovnb inc stc dec outsb adc and push push sub pop inc add in sbb int enter test out or or outsl call mov ja fmul mov sarb and add (bad) fwait popl inc jnp pop loopne dec pop push cmp mov in xchg xchg or mov and (bad) lock movsl pop mov dec adc ljmp dec mov mov icebp mov (bad) pop adc cs inc pop inc add in sbb int enter test out or or outsl call mov ja fmul mov sarb and add (bad) fwait popl inc jnp pop loopne dec pop push cmp mov in test fmuls movsl sahf inc int jno push clc push dec mov gs add enter movsl mov idivb cmp int3 sbb int (bad) ljmp aaa adc add pop (bad) sbb mov sbb hlt mov (bad) cmc dec mov mov idivb or ret jmp inc test loop insl sarb mov inc inc xor pop inc sub out cmpsl cmpsb (bad) jno mov ja pop js leave xchg xchg xlat jno movsl mov (bad) dec or sldt call xor enter out jns movsl stos mov or pop leave inc call ss add mov adc add scas fcomi inc ljmp mov jl movsl inc xchg aaa (bad) loop insl jmp inc shlb adc scas (bad) mov in mov out xor pop xchg push pop iret (bad) inc (bad) dec adc out (bad) lret ljmp inc or pop clc xor jp lret mov or xor pextrw or aaa (bad) out out mov scas (bad) out jns movsl outsl inc xor in rcll mov xchg jae mov jp pop dec mov out inc sub dec scas in dec xchg ljmp xor or lods or pop lcall aad push cli addl mov inc dec mov (bad) pushf sbb out xor cmp ret stc out cmc dec lods sub int3 pop inc je push mov call mov ja mov iret lock dec (bad) push loop cmp test into out xor adc lret pop adc mov adc or push jl inc sub mov sbb (bad) dec jne mov (bad) fsts call inc sbb or cwtl pop dec inc mov xchg jge inc pop mov (bad) xor jns jo mov out test xor jle dec jge sti ljmp sti mov add rcll adc or mov data16 add add lcall inc adc add xor mov loope sub lods cmp fisttp jns fs adc in sti pop xchg sub mov jo mov clc call add lret sub lcall inc dec inc inc add add xor inc jle icebp adc lcall xor mov in xor push call inc and test push add stos sub mov add lcall inc jg clc iret cmp sti subl mov adc xchg jmp dec push ljmp inc jb ret int3 lea or aad cmpsb jno mov out adc icebp inc mov pop push test (bad) pushf sbb mov xor sbb ret hlt adc icebp push inc sbbl jge pop divb (bad) xchg cmovno pop mov jbe repz std notb test or int add sahf fldl2e enter mov stos mull xor mov pop mov mov fsubp sbb fwait add adc mov and dec inc enter out add and xchg xor push mov mov out fwait (bad) dec jg push aam mov (bad) in std aaa inc inc mov dec (bad) (bad) call adc or mov les push cmp not outsl icebp cmpsb mov xchg les adc into test pop lods xchg ret cmp pop (bad) mov scas inc lds pop stc dec jne into add sub or mov add sti push int3 loope sbbl inc jnp lock cmc cwtl add int jae inc outsb xlat or push and and mov sbb jmp sub out sbbb out adc mov xor sbb xor add mov add fwait adc mov and mov cmp inc fld pop fcomi cmp sbb mov jg mov ret hlt out test adc inc mov movl mov jle test pop jecxz inc inc dec add inc jb cwtl repz in dec dec jmp dec or pop mov push inc inc dec add inc jb hlt adc and jle pop mov pop outsb mov int adc std or or stos push dec dec test pop cmpsl xchg movsb data16 mov add add push and jo xor inc jns cltd push loope adc cld push dec dec dec and movsb faddl mov int ljmp fidivrl arpl mull out pop sub xchg jbe and add adc or (bad) push jno cmp pop dec pop movsl mov sti repnz fxch sub pop sbb adc add out pop clc sbb jbe fisub cmp mov pop mov testl jge or sti push lret test lock jnp hlt add in sbb inc pusha pop fisubr pop pop bound inc adcl push leave fildl test xchg sbb out dec mov lret push lret out pop gs inc daa in mov or adc sahf push or pop sbb inc nop enter ret dec rorl les testl adc xchg lret mov xor jnp inc add add sahf or xchg mov add sahf or loop or jns cmp lds gs pop xor sarb cmc cwtl add sbb pop int js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb xchg sub lods add cmc rolb push or sub mov in cmc cwtl add sahf push repz jno cmc cwtl add sahf or xchg mov out cmc xor cltd push or sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc push xchg in lea cmp mov in cmc cwtl add sahf loopne add jle icebp in cmc cwtl add sahf xor iret push outsl js cmpl cld lret adc lret iret clc inc decl add outsb add sahf nop jmp mov js add out loope pop (bad) xor jnp inc add add sahf cmp mov add add sahf or xchg mov in cmc fdivr jne or cli aad mov int3 daa sbb repz mov test cld clc pop sahf or sti aad test cmp push adc mov stos cmpsl test cmc cwtl add sub call adc popa add pop shr sub jae,pt out cld lds jmp sub mov (bad) adc push cmp and clc pop sahf or lret mov push std addr16 cmpsl jle repz mov cli daa add into pop jbe xchg test js mov je lods mov add jg lret pop shr js inc js add add adc xor test jns mov popa aad mov sbb adc repz mov mov in add mov jmp int mov aaa icebp cltd add mov dec mov mov (bad) sub add stos scas test cmc clc add inc adc call sbb mov stos mov arpl sub xlat repz mov mov in add mov jmp int mov sbb xchg bound scas mov sbb push cld stos pop fistl inc lret (bad) mov jnp enter adc xor mov sbb sahf adc shrl jae das or pop in adc sub sub adc bound (bad) pop fldpi in sub mov repz adc add (bad) clc ret gs xlat xchg addl popa add pop pop adc mov adc cmpsl pop mov inc sbb cs ljmp xchg imul imul jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub enter outsb or sbb scas mov ffreep (bad) lret inc add fisttpll jno jb js jmp inc xor cld cld cmpsb inc mov add xchg add mov lret cmp sub cmp mov lock cli push cld int into inc lods mov daa push mov mov ret jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub fdivl cmc sbb cli jne add xlat ret call div sbb mov push loop movsl out mov lret ret mov pop mov inc xorl jns jg aaa (bad) iret repnz pop std or jmp add mov push add cmc adc ljmp repz lods sti clc inc in (bad) adc add scas dec cmpsb adc mov call xor (bad) push mov lret iret mov sbb pop btc scas push sbb xor iret ret lods mov mov in cmc fs or xchg sub lret push into sahf lods cmp pusha mov fisubrl mov daa pop mov cmpsl scas cmp (bad) mov loope mov arpl fildll mov aaa jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or or add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf mov add add add inc push dec inc add add add add or add jbe xor xor xor cmp add add add daa add and add add sub add and jb outsb addr16 add add add adc add push push add add add add inc push dec inc add add add or add inc insb outsl bound add add add add add push xchg mov add cli and add add add add or add add add add add mov add mov add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xchg jns adc (bad) cltd cmpsb cltd adc dec lcall cmpsb cltd push add mov mov add add lods lar add lods or or or push scas nop scas push add add scas fldcw add push add scas xor push add scas xor push add scas or or or xor push add add scas fldcw xor push add scas lar add mov scas adc and cmp push add jp push add add add mov scas adc fdivs lock mov add mov cltd push add add nop scas push add mov scas push add mov mov add mov add add mov add add mov add add mov scas push add mov add lret add add mov add add mov add add mov add add insl mov add cmp push add add add add mov mov add mov mov add mov mov add add jns or pop mov add add lahf mov add clc mov add add push mov add add add add add mov cltd adc repnz cltd push add mov add add cmp push add lar add mov add add mov add add cmp adc js jns adc mov cwtl mov cltd adc mov cmp push add lar add or xor xchg mov add add mov add add mov add add jns or and add or cmp push add add add mov adc sbb add push add add add add add add add add or add add add adc cmp add and inc add add add add test add add std cwtl add sub push add add cltd add sub add add add add and push add add add mov add add and pop add add stos add and pop add add add add add int3 add add add lods add cmp add add add lods add inc add add add add add add add add cmp add mov add add add add xor lods add sub aaa add add and aaa add add sbb aaa add add adc cmp add mov cmp add add add add or add add aaa add add or add add aaa add add or add add aaa add add or pop push aaa add add push aaa add add aaa add add getsec add add aaa add add adc add add aaa add add cmp aaa add add xor aaa add add sub add add and pushf adc sbb aaa add add adc aaa add add or aaa add add add aaa add add add add sbb add add add add sbb add add add add sbb add add aaa add add sbb add add aaa add add sbb push push aaa add add push aaa add add aaa add add pop aaa add add aas add add add mov mov (bad) popl push add add nop popl push add add xchg xchg add add sbb xchg xchg lcall add add or xchg popl add xchg add add add add lcall lds xor out int adc push add pushf fldl adc mov pop add add add add mov es add add lods jae pusha and add add add add daa add add xchg add sub add jo add add xchg add add add add add add push add and add add add add push sbb or add in add add les inc and add pushf and add add lds dec add add add inc and add scas and add add mov add add and inc or and add mov add mov push add pusha sub add add xor add ret and add add lods and add add add sub int add add inc or add and add add and pop add add and add add popf es add add and add add sbb pop add add and add add xchg daa push add add and add add adc pop add add and add add lea push add add and add add or pop add add and add add (bad) sub or and add and inc or sub or sub add add inc or dec add add and add add imulb dec add add and add add jb dec add dec and add add out sub or push and add add push dec add add add out dec add add add bound outsl and add add fisubr js add add inc or push add add sub add add (bad) cs add add add push das push add add add and inc or das pop add add inc or push add add add (bad) xor adc xchg and add add inc xor adc or add and inc or add add cmp dec add add inc or add add xor dec add add add add scas xor adc mov add add inc or xor add add add cmpsb xor add add add and enter and inc or add and add add sbb dec add add and add add xchg ss add add and add add adc dec add add and add add mov dec add add and add add or dec add add and add add xchg dec add add and add add add dec add add add and inc or dec add add add cli cmp sbb daa and add add jbe dec add add and add add repnz sbb cmp add and inc or dec add inc and add add out dec add add add arpl and add add fistpll add add add and inc or dec add add add add inc or cmp jae add and inc or dec add add add add iret ds add add add dec aas dec add add add (bad) aas dec add add add inc inc dec add add add mov add inc or inc dec add add add mov dec add add add xor add add and add add lods inc dec add shlb add and inc or inc dec add (bad) add add inc or in add and inc or inc dec add add add pushf inc dec add add and add add sbb add add and add add xchg inc dec add add and add add adc add add add add inc or push and add add or add add and add add test add add and add add add add add and add add jl dec add add add add clc dec dec add add add add inc or add add add and inc or dec dec add add add add inc or add push add and inc or dec dec add jae add add inc or add add add loopne dec add add add pop dec dec add add add fmuls add add push dec dec add add add rorb add add inc or add add add enter xor mov add inc dec dec add add and add add rorb xor shlb add add inc or dec add add and add add mov add and add add xor dec add add and add add lods push dec add add and add add sub add add add add movsl push dec add or add add and add add add popf push dec add add add sbb add and add add xchg push dec add add and add add adc add add and add add lea add add add add or add add add and inc or add add add inc or push dec add add add and inc or dec add add add add inc or push dec add add add add jb dec add add add add inc or pop dec add add add push dec add add add out dec add lcall or dec add mov add ficomp add add add pop pop dec add add add (bad) pop dec add add and add add push pop dec add add and add add into pop dec add add and add add dec pop dec add add and add add (bad) pop pop add out add and inc or arpl inc add sub add add mov add add add add cmp add and add add add pop or inc add add add add or inc add add add add add pop add add add xor jo inc add and add add add add add sub imul add add add test imul add add add and imul add add add mov add add add add sbb or dec add arpl add add add add add add push add lods outsb add add push add add add add sub push add add add add add add add jns push add add add add andb push add add add add cld imul add add add js imul add add add hlt push test add add add insl imul add add add jmp add add add imul add add add loope imul add add add pop imul add and add (bad) imul add add add imul add add add into insb imul add add add dec insl imul add add add ret insl imul add add add aas outsb imul add add adc pusha add add clc sahf add add push add xchg sub outsl add add sbb or outsl add lahf add add les inc and outsl add add sbb jo add and inc or in lahf add add add mov add add add xchg imul add add add mov mov add add add add add push sbb or ja xlat add add push sbb or ja push mov adc pusha popf in ja insb mov adc fstps mov adc push sahf out add movsb mov adc rcrl shlb or stc add loope add add adc pusha add add fsubl adc cmp and ja adc add add add add add push sbb or jns add add add movb movsl xor jns and add add movb movsl cmp jp cmp add add addl cmpsb cmp jp pop mov movb cmpsb inc add ss add add push or add push daa add add push or cmpsl dec add insb daa add add push or dec add cwtl daa add add push or add add add movb movsl xor jl and add add movb movsl cmp jge jo add add addl cmpsb cmp jge pop mov movb cmpsb inc add mov adc cmp and jge les add add add mov add add add push sbb or jg mov add or add add add push sbb or jg into daa add add xchg push add jg add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or push add add add add add cmpsb cmp inc add cmpsl inc add add add add add add add add add or roll push add flds push add loope push add jmp add add ja stc add cmp add add add or sbb push add add add or sub push add add add or dec add or push add ja pop add and add add push add jno std mov push jno sub xor inc mov pop addl mov pop jns push add pop jns insl mov add jle sub jns test xchg mov pop test pop test pop jns mov add mov pop adc push add add pop adc out dec pop roll and add add dec pop leave add mov pop leave add add mov pop leave add pop leave add dec pop flds mov push add add add add or xor push add add add add xchg leave add mov pop stc add mov pop leave add mov pop add push add mov pop leave add mov add add test leave add mov pop leave add mov add add mov add add mov pop sbb push mov pop leave add leave pop roll jno rolb sub xorl add add add add mov pop leave add mov pop stc add mov pop stc add mov pop stc add mov pop cmp int mov mov pop xor es add add mov pop adc int mov mov pop leave add repz dec add pop adc push add pushf mov add add es add add mov add in sub popa add mov or std mov or push mov or sbb inc mov or or addr16 or or or or or or add add add lret pop leave add mov add or add mov or add mov add add mov pop mov or or or dec mov or add add lds leave add push or add or roll fs or add add or adc fs or lods mov or add cwtl or (bad) mov or or or add mov add or or push add add add mov pop stc add mov es add add mov inc mov inc mov push add add push add add mov add add add add add or and push add add push add add push add add push add add add inc pop imul adc mov push add imul imul and sarl mov ljmp mov push add mov mov add or cmp push add dec add stos add add add adc daa add add add add sub add or add add add add add jl add jl add add add add add hlt add add lret add (bad) add mov add add add add add add add add add add add add add add add add add push add add add add add add add push add add add add add add add add add add add add add add add add add add sub add add add add add add add add xchg inc add add add add add add add jl pusha add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add fwait add add add add add add add mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add loope mov add add add add add add and and and and inc add inc add inc add inc add pusha add popa add popa add popa add addb add addl addl mov add mov add add rolb add roll add loopne mov add loope mov add add mov push xchg add add add push fwait add push mov push fwait add push xchg add add push mov push mov push fwait add push xchg add add push mov push mov push mov push fwait add push xchg add add push mov push mov push fwait add push xchg add add push mov push xchg add add push mov push fwait add push mov push mov push fwait add push xchg add add add push mov push fwait add push xchg add add push add pop mov pop fwait add pop xchg add add push add pop mov pop fwait add pop xchg add push add mov pop fwait add pop xchg add add push add mov pop fwait add pop xchg add addb add add add add add push add add add push add pop mov pop mov pop fwait add pop xchg add loopne mov pop mov pop fwait add pop xchg add add mov or or or or or add add push add jecxz loop pusha or or add add push add push mov add push rorb add add or or or or or or or or or or or or or or or or or or or or or add add or or add add push add or add add push add mov or add add mov or or or or or add add or add add mov or add add add add or add add or add add or and inc or pusha or orb or rorb or add mov push mov push mov push mov push mov push mov push mov push mov bt push add bt push add mov bt push add add add bt push add bt push add adc adc adc adc adc adc adc pusha adc adcb push roll push add push lret add add push add roll push add add add push roll push add pop roll push add pop roll push add roll push add lret add add enter lret add add enter lret add add push add sbb add add sbb add add roll push add lret add add push add add push add add push add sbb add add push add sbb add add sbb add add sbb add add sbb add add push add roll push add lret add add add or call pop pop pop bound insl pop jnp push or mov xchg or or or or or pusha or adc and sub cmp inc or lea xchg or or add inc add add or inc add add add mov add outsl test add mov test add das jo add add add jno add add add jb add add add jae add add add je add add add jne add add add jne add add addb add jbe add add addb add ja add add addb add js add add addb add jns add add addb add jp add add addb add jnp add add addb add jl add add addb add add jle add add add jg add add add addb addb add addl add (bad) addb add adc mov or test test test test xchg xchg xchg xchg mov mov mov mov mov mov mov mov mov mov cwtl scas add add lahf incb add inc mov shll mov mov add pop add add add lods outsb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmp add aas add add add cmp add add add add aas add add inc add add inc add add inc add add inc add add inc add add inc add add add add inc add add dec add add dec add add dec add add dec add add dec add add dec add add add add dec add add push add add push add add push add add push add add push add add push add add add add push add add pop add add pop add add pop add add pop add add pop add add pop add add add add pop add add popa add add popa add add arpl add add add push add add add add add add add add imul imul imul add imul add insl add add insl add add add add outsl add add jno add jne jno add js jae add ja jae add jp jne add jns jne add jl ja add jnp ja add jle jns add jge jns add addb add add jnp add (bad) add add addl test jg add addl add add add add add add mov mov add mov mov add roll add add add add add add add add add add add or or jbe pop add add mov or or xchg pop add or or or or add pop add add add add and leave push add add add jecxz add add add add adc add add add add add jns add add add add add lar add add add add add add add mov lahf mov add add add add add add add pop jno add add add movsl add add add mov add or pop add add add add add or add adc adc mov add mov add mov add add add add jo sahf or mov or mov or add add add add add dec imul gs add arpl insb imul jb jae dec insb fs jae inc je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul je jb cmp outsl fs gs arpl outsl jb loop (bad) loop mov orb loop lods loop stos loop stos loop stos loop lods loop stos loop stos loop lods loop lods loop stos loop scas loop lods loop scas loop (bad) loop lods loop lods loop scas loop stos loop scas loop scas loop lods loop (bad) loop (bad) loop stos loop mov orb loop lods loop (bad) loop scas loop scas loop (bad) loop scas loop scas loop scas add subb lods loop stos loop stos loop lods loop stos loop lods loop (bad) loop (bad) loop lods loop mov subb (bad) loop scas loop scas loop stos loop lods loop lods loop lods loop stos loop stos loop lods loop stos loop stos loop lods loop scas loop stos loop mov subl lods loop scas loop (bad) loop scas loop (bad) loop mov subl jp daa push dec pop xor pop and and dec dec and push jns je insl cs imul inc outsl jb jae inc outsl jb add subb lods loop lods loop scas loop stos loop mov subl lods loop stos loop mov subl scas loop stos loop scas loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop (bad) loop lods loop scas loop mov subb loop mov subl loop mov subl jns je insl add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add subl lods loop stos loop mov orb scas loop stos loop lods loop mov orb loop lods loop lods loop mov orb mov subl loop stos loop stos loop scas loop (bad) loop scas loop mov subl (bad) loop mov subb stos loop scas loop scas add gs add orb lods loop mov subb lods loop lods loop lods loop lods loop stos loop lods loop lods loop mov subl scas loop (bad) loop mov orb stos loop lods loop lods loop stos loop scas loop mov subl loop (bad) loop stos loop lods loop mov orb lods loop scas loop scas add arpl gs outsl js loop stos loop mov subl mov orb mov orb mov subl lods loop lods loop stos loop scas loop lods loop lods loop lods loop lods loop scas loop (bad) loop mov subb lods loop lods loop stos loop stos loop lods loop lods loop lods loop mov orb loop stos loop scas add subl scas loop lods loop scas loop (bad) loop lods loop stos loop (bad) loop scas loop mov subb lods loop lods loop scas loop stos loop scas loop lods loop lods loop stos loop mov orb scas loop scas loop stos loop stos loop lods loop stos loop scas loop mov orb stos loop lods loop mov subl orb mov subl mov orb scas loop mov subl scas loop lods loop stos loop scas loop scas loop lods loop stos loop lods loop stos loop lods loop mov subb mov orb (bad) loop stos loop stos loop lods loop stos loop stos loop mov subl scas add orb scas loop mov orb stos loop mov subl stos loop (bad) loop (bad) loop lods loop (bad) loop scas loop scas loop stos loop (bad) loop scas loop (bad) loop stos loop scas loop mov orb lods loop lods loop scas loop mov subl mov subl scas loop (bad) loop scas add subl (bad) loop scas loop stos loop lods loop scas loop scas loop lods loop (bad) loop mov subl mov subl mov subl lods loop mov subl (bad) loop lods loop mov orb stos loop mov subb lods loop (bad) loop lods loop scas add subl loop stos loop stos loop stos loop scas loop scas loop mov orb lods loop (bad) loop scas loop stos loop scas loop stos loop lods loop stos loop scas loop mov subb stos loop scas loop lods loop lods loop scas loop stos loop stos loop scas loop stos loop stos loop (bad) loop mov orb stos loop stos loop scas add subl loop mov orb loop lods loop (bad) loop mov orb loop scas loop scas loop stos loop stos loop lods loop stos loop lods loop lods loop lods loop lods loop mov subb lods loop stos loop mov subl lods loop lods loop (bad) loop lods loop stos loop mov subb subl mov subl lods loop scas loop stos loop stos loop lods loop scas loop mov subl loop lods loop lods loop stos loop lods loop lods loop lods loop lods loop lods loop mov subl mov orb loop scas loop lods loop (bad) loop mov orb scas add subb (bad) loop lods loop stos loop lods loop scas loop stos loop lods loop stos loop stos loop scas loop stos loop stos loop scas loop lods loop stos loop stos loop (bad) loop stos loop stos loop lods loop lods loop lods loop mov subl lods loop (bad) loop lods loop stos loop mov subl stos loop lods loop scas loop lods loop scas add subl mov orb mov subl stos loop lods loop mov subb loop lods loop scas loop (bad) loop mov subl stos loop mov subb mov orb mov subl scas loop mov orb lods loop scas loop scas add orb loop stos loop mov orb lods loop scas loop mov subl lods loop stos loop lods loop mov subb scas loop stos loop scas loop lods loop scas loop scas loop scas loop mov subb lods loop scas loop scas loop stos loop mov subb scas loop stos loop lods loop scas loop scas add orb mov subb lods loop mov subb loop scas loop stos loop lods loop lods loop stos loop (bad) loop stos loop (bad) loop lods loop lods loop lods loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop scas loop stos loop stos loop mov orb loop scas loop stos loop stos loop scas loop (bad) loop scas add subl loop lods loop stos loop scas loop (bad) loop lods loop lods loop (bad) loop stos loop lods loop mov orb stos loop (bad) loop scas loop lods loop lods loop stos loop lods loop lods loop mov orb (bad) loop stos loop lods loop mov subl lods loop scas loop mov subl scas add subl scas loop mov subb lods loop scas loop lods loop scas loop mov orb lods loop scas loop stos loop stos loop scas loop lods loop lods loop scas loop scas loop lods loop stos loop scas loop stos loop lods loop mov subl (bad) loop (bad) loop lods loop stos loop mov orb scas add orb loop stos loop lods loop lods loop (bad) loop mov subl loop scas loop scas loop mov subb loop stos loop stos loop scas loop mov subb scas loop stos loop mov subb loop mov orb mov subl scas loop scas loop scas loop scas add orb (bad) loop stos loop stos loop (bad) loop lods loop scas loop stos loop (bad) loop mov subb loop stos loop mov orb lods loop lods loop scas loop (bad) loop lods loop scas loop mov orb scas loop (bad) loop lods loop mov subl loop stos loop (bad) loop stos loop (bad) loop mov subb subl loop lods loop lods loop mov subb scas loop mov subb mov subl mov subl scas loop mov orb stos loop lods loop stos loop stos loop stos loop scas loop stos loop lods loop (bad) loop mov subb scas loop stos loop scas add subb lods loop stos loop lods loop scas loop lods loop scas loop stos loop scas loop mov subb scas loop (bad) loop lods loop (bad) loop scas loop (bad) loop stos loop stos loop mov orb scas loop mov subl scas loop stos loop lods loop scas loop scas loop lods loop stos loop stos loop scas loop (bad) loop stos loop scas add subb mov subl stos loop lods loop scas loop stos loop lods loop mov subl scas loop (bad) loop scas loop mov subl lods loop lods loop stos loop stos loop lods loop lods loop scas loop stos loop mov orb stos loop mov subl lods loop stos loop scas add orb lods loop mov orb (bad) loop scas loop stos loop scas loop stos loop stos loop mov subl lods loop (bad) loop (bad) loop (bad) loop lods loop stos loop stos loop stos loop lods loop lods loop stos loop scas loop mov orb stos loop mov subl stos loop scas loop stos loop mov subb subl stos loop lods loop lods loop mov orb stos loop mov orb loop stos loop (bad) loop lods loop stos loop scas loop stos loop scas loop scas loop scas loop stos loop stos loop stos loop scas loop lods loop mov orb lods loop stos loop scas loop mov orb loop mov subb subb scas loop stos loop mov subl lods loop lods loop mov orb stos loop scas loop lods loop stos loop mov orb scas loop stos loop mov subb loop (bad) loop stos loop lods loop scas loop stos loop mov subb mov subl orb mov subl lods loop mov subb (bad) loop stos loop scas loop stos loop stos loop scas loop scas loop lods loop (bad) loop (bad) loop mov subb lods loop mov orb mov subb loop mov orb scas loop stos loop lods loop lods loop stos loop scas loop scas add subl loop stos loop mov subl lods loop lods loop scas loop lods loop scas loop (bad) loop lods loop mov orb mov subb stos loop lods loop scas loop stos loop (bad) loop mov subl lods loop lods loop lods loop (bad) loop scas loop mov subb lods loop scas add subb loop lods loop stos loop mov subl mov subl lods loop lods loop scas loop stos loop mov subl stos loop stos loop lods loop scas loop lods loop mov subl mov subb loop lods loop scas loop stos loop lods loop (bad) loop mov subb subb loop (bad) loop (bad) loop scas loop mov subb stos loop (bad) loop stos loop scas loop stos loop lods loop (bad) loop stos loop stos loop lods loop lods loop scas loop stos loop (bad) loop stos loop scas loop lods loop stos loop stos loop (bad) loop lods loop lods loop stos loop mov subl lods loop mov subl subl loop lods loop lods loop (bad) loop mov subl lods loop lods loop lods loop stos loop (bad) loop scas loop scas loop stos loop lods loop scas loop stos loop scas loop mov subb scas loop lods loop stos loop lods loop lods loop mov orb lods loop stos loop lods loop mov subb subb stos loop scas loop scas loop lods loop lods loop mov subl lods loop stos loop lods loop mov subl loop (bad) loop lods loop mov subl scas loop stos loop lods loop stos loop lods loop (bad) loop mov subb scas loop scas loop lods loop lods loop scas loop scas add subb loop mov orb mov subl lods loop mov subl stos loop (bad) loop lods loop (bad) loop stos loop lods loop stos loop lods loop mov subb stos loop mov subl lods loop (bad) loop scas loop lods loop scas loop stos loop stos loop stos loop mov subb subb (bad) loop mov orb lods loop mov orb loop lods loop mov subl mov subb (bad) loop stos loop stos loop stos loop lods loop lods loop scas loop mov subb mov subb lods loop lods loop scas loop mov subl scas add subl mov subl (bad) loop scas loop stos loop scas loop scas loop (bad) loop stos loop mov orb stos loop mov subl stos loop scas loop stos loop (bad) loop lods loop mov subb loop lods loop (bad) loop mov orb lods loop (bad) loop scas loop lods loop scas add subl mov subb lods loop mov subb scas loop mov subl lods loop stos loop scas loop lods loop (bad) loop lods loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop scas loop stos loop stos loop lods loop stos loop mov subb stos loop stos loop stos loop scas loop scas add orb stos loop (bad) loop mov subl mov subl lods loop stos loop stos loop lods loop stos loop stos loop mov subb stos loop lods loop stos loop stos loop scas loop lods loop stos loop lods loop stos loop stos loop (bad) loop lods loop mov subl mov subb scas add subl stos loop lods loop lods loop scas loop lods loop lods loop scas loop scas loop scas loop stos loop mov orb stos loop lods loop mov orb (bad) loop mov subl lods loop (bad) loop stos loop lods loop stos loop stos loop lods loop lods loop lods loop scas loop stos loop stos loop scas loop (bad) loop scas add subl stos loop scas loop stos loop scas loop lods loop stos loop stos loop mov subl loop lods loop mov subl mov subl loop stos loop stos loop stos loop lods loop lods loop mov subb loop scas loop stos loop stos loop (bad) loop (bad) loop lods loop scas add subl scas loop stos loop lods loop lods loop scas loop lods loop lods loop lods loop lods loop lods loop lods loop mov orb scas loop stos loop stos loop mov orb mov orb (bad) loop lods loop mov subl lods loop stos loop mov subl stos loop mov subb subl stos loop stos loop mov subb mov orb lods loop stos loop mov subl mov orb mov subb stos loop mov subb stos loop scas loop (bad) loop lods loop stos loop stos loop stos loop lods loop (bad) loop scas loop mov subl subl stos loop (bad) loop stos loop lods loop stos loop mov orb scas loop stos loop lods loop mov subl lods loop scas loop (bad) loop mov subb (bad) loop scas loop (bad) loop lods loop lods loop stos loop lods loop lods loop scas loop mov subb loop lods loop scas loop scas add subb (bad) loop stos loop lods loop stos loop stos loop scas loop mov orb (bad) loop (bad) loop (bad) loop lods loop (bad) loop stos loop mov subb mov orb lods loop stos loop mov subl stos loop lods loop stos loop stos loop stos loop stos loop lods loop stos loop scas loop lods loop (bad) loop scas add subl scas loop stos loop lods loop stos loop stos loop lods loop lods loop lods loop scas loop mov subb (bad) loop scas loop scas loop mov subl scas loop stos loop mov subb loop stos loop lods loop stos loop lods loop stos loop stos loop lods loop scas loop scas loop stos loop lods loop stos loop scas add subl scas loop lods loop scas loop mov subb loop mov subl lods loop scas loop scas loop lods loop mov subl lods loop lods loop lods loop mov orb (bad) loop mov subb stos loop stos loop stos loop stos loop lods loop mov orb scas add subb lods loop mov subb loop stos loop (bad) loop scas loop scas loop mov subl stos loop stos loop scas loop stos loop (bad) loop lods loop stos loop lods loop mov subl loop scas loop mov orb lods loop scas loop lods loop scas loop lods loop lods loop mov subb subb (bad) loop (bad) loop lods loop (bad) loop mov subb stos loop scas loop lods loop (bad) loop (bad) loop stos loop lods loop scas loop (bad) loop mov orb scas loop lods loop lods loop (bad) loop mov subb stos loop lods loop mov subl mov subl (bad) loop (bad) loop scas add subb mov subb mov orb mov subl (bad) loop scas loop scas loop mov subb stos loop stos loop (bad) loop lods loop stos loop lods loop mov orb mov subl lods loop stos loop mov orb mov orb mov subb orb scas loop scas loop stos loop scas loop lods loop lods loop mov subl lods loop scas loop scas loop stos loop lods loop scas loop stos loop scas loop scas loop (bad) loop (bad) loop stos loop stos loop lods loop stos loop (bad) loop mov orb loop (bad) loop stos loop lods loop mov subl scas add orb scas loop scas loop (bad) loop mov subb lods loop scas loop stos loop mov subb stos loop scas loop lods loop stos loop (bad) loop mov orb loop lods loop (bad) loop lods loop (bad) loop lods loop scas loop mov orb mov orb mov subl mov subb subl lods loop lods loop stos loop (bad) loop lods loop scas loop stos loop lods loop (bad) loop stos loop lods loop stos loop lods loop scas loop scas loop scas loop (bad) loop stos loop scas loop stos loop stos loop lods loop stos loop (bad) loop stos loop scas loop (bad) loop lods loop lods loop mov subl loop lods loop lods loop scas add subl stos loop scas loop mov subl (bad) loop lods loop stos loop scas loop stos loop scas loop lods loop lods loop scas loop scas loop scas loop mov subl scas loop stos loop scas loop scas loop (bad) loop lods loop stos loop lods loop mov orb stos loop scas loop stos loop mov orb subl lods loop stos loop stos loop stos loop mov subl scas loop lods loop (bad) loop mov subb stos loop stos loop stos loop stos loop lods loop scas loop scas loop lods loop lods loop stos loop mov subb loop mov orb stos loop lods loop (bad) loop stos loop mov orb subl lods loop mov subl stos loop stos loop stos loop scas loop (bad) loop scas loop lods loop mov subl loop lods loop lods loop mov subl lods loop (bad) loop mov subb lods loop mov subl mov orb scas loop scas add orb (bad) loop stos loop lods loop lods loop scas loop scas loop (bad) loop scas loop lods loop scas loop stos loop (bad) loop lods loop lods loop lods loop (bad) loop lods loop lods loop mov orb lods loop (bad) loop mov subb mov subl stos loop lods loop (bad) loop stos loop stos loop mov subb subl loop lods loop mov subl scas loop (bad) loop mov orb scas loop stos loop scas loop mov subl stos loop lods loop stos loop lods loop lods loop scas loop mov subb (bad) loop lods loop lods loop (bad) loop scas loop lods loop stos loop stos loop lods loop lods loop scas add orb loop mov subb (bad) loop lods loop mov subl (bad) loop lods loop mov subl scas loop lods loop scas loop stos loop (bad) loop (bad) loop (bad) loop (bad) loop stos loop (bad) loop lods loop (bad) loop lods loop lods loop mov subb scas loop lods loop mov subl subb stos loop lods loop stos loop mov subb stos loop scas loop scas loop stos loop scas loop stos loop scas loop scas loop scas loop lods loop mov subb stos loop mov subb (bad) loop stos loop lods loop stos loop lods loop lods loop lods loop mov subb lods loop lods loop stos loop scas loop lods loop scas add orb lods loop stos loop (bad) loop mov subl loop (bad) loop scas loop scas loop mov orb (bad) loop scas loop mov subl scas loop scas loop (bad) loop stos loop stos loop scas loop mov subl stos loop mov orb stos loop (bad) loop lods loop stos loop scas add orb lods loop stos loop lods loop (bad) loop scas loop lods loop stos loop stos loop (bad) loop mov subb lods loop scas loop mov orb scas loop stos loop lods loop scas loop scas loop stos loop stos loop stos loop mov subb stos loop (bad) loop stos loop stos loop lods loop lods loop mov orb lods loop scas add subl lods loop mov subb scas loop mov subl (bad) loop stos loop stos loop scas loop lods loop mov subb loop mov subb scas loop mov subb mov subl stos loop lods loop lods loop scas loop stos loop scas loop mov subb subb mov orb lods loop scas loop lods loop stos loop stos loop stos loop mov subl stos loop (bad) loop (bad) loop lods loop lods loop lods loop (bad) loop mov orb scas loop (bad) loop scas loop lods loop scas loop stos loop scas loop (bad) loop stos loop lods loop lods loop lods loop stos loop mov subl (bad) loop scas loop mov subl loop mov subl lods loop (bad) loop mov subl scas loop stos loop stos loop lods loop mov orb loop scas loop lods loop mov orb lods loop stos loop (bad) loop lods loop stos loop stos loop lods loop lods loop scas loop scas add subl scas loop lods loop scas loop lods loop lods loop lods loop mov subb stos loop mov subl stos loop (bad) loop scas loop stos loop scas loop lods loop scas loop (bad) loop stos loop lods loop scas loop lods loop scas loop mov subl scas loop stos loop stos loop lods loop mov subl subl lods loop stos loop stos loop (bad) loop scas loop (bad) loop mov subb scas loop stos loop (bad) loop stos loop scas loop stos loop lods loop stos loop stos loop lods loop stos loop scas loop scas loop mov subl (bad) loop stos loop lods loop (bad) loop mov subl mov subl inc outsl js loop lods loop scas loop lods loop (bad) loop lods loop stos loop lods loop (bad) loop lods loop mov subb stos loop mov subb loop lods loop stos loop mov subb loop stos loop mov subl loop scas loop scas loop lods loop mov orb scas loop (bad) loop lods loop scas loop stos loop scas add subl loop mov subl mov subl loop mov subb mov subl stos loop stos loop lods loop (bad) loop lods loop (bad) loop scas loop scas loop scas loop (bad) loop lods loop scas loop mov subl mov subb stos loop scas add jo jae add subl stos loop (bad) loop (bad) loop stos loop lods loop mov subl (bad) loop (bad) loop lods loop lods loop lods loop stos loop mov subl lods loop mov orb stos loop stos loop (bad) loop mov subl (bad) loop scas loop (bad) loop mov subb scas loop scas add subb loop stos loop mov subl loop mov subl stos loop scas loop stos loop lods loop lods loop stos loop lods loop scas loop lods loop stos loop lods loop lods loop mov orb lods loop lods loop scas loop mov orb scas loop lods loop (bad) loop stos loop mov orb subb stos loop lods loop scas loop mov subl (bad) loop mov orb scas loop scas loop scas loop mov orb scas loop lods loop lods loop scas loop scas loop stos loop lods loop mov subl (bad) loop mov orb stos loop lods loop stos loop stos loop lods loop scas loop scas add subl scas loop scas loop scas loop stos loop lods loop (bad) loop lods loop (bad) loop lods loop mov subb stos loop lods loop mov subl scas loop (bad) loop lods loop lods loop scas loop stos loop lods loop stos loop (bad) loop scas loop scas loop stos loop mov subb stos loop mov subl subl loop scas loop stos loop mov subb lods loop lods loop lods loop (bad) loop mov orb lods loop (bad) loop scas loop mov subl lods loop (bad) loop lods loop stos loop scas loop lods loop scas loop scas loop lods loop stos loop (bad) loop (bad) loop stos loop mov orb stos loop scas add subl stos loop stos loop mov orb loop lods loop mov subl (bad) loop lods loop stos loop mov subb lods loop scas loop lods loop scas loop lods loop stos loop scas loop stos loop (bad) loop (bad) loop mov orb mov orb stos loop lods loop mov subl subl loop mov orb mov subl lods loop stos loop mov orb stos loop lods loop lods loop stos loop scas loop stos loop lods loop stos loop scas loop mov subl stos loop (bad) loop mov subl lods loop stos loop mov subl scas loop stos loop (bad) loop stos loop (bad) loop mov subb scas loop stos loop scas loop mov subl scas loop mov orb loop (bad) loop mov subb loop lods loop mov subl mov subb stos loop scas loop scas loop mov subb scas add orb stos loop lods loop scas loop (bad) loop lods loop lods loop scas loop stos loop (bad) loop (bad) loop stos loop stos loop stos loop mov subl lods loop mov subl scas loop stos loop lods loop (bad) loop lods loop (bad) loop mov orb loop stos loop stos loop (bad) loop stos loop stos loop lods loop scas add subl scas loop (bad) loop scas loop scas loop stos loop (bad) loop mov orb loop scas loop stos loop (bad) loop mov subl lods loop lods loop lods loop (bad) loop lods loop scas loop (bad) loop scas loop stos loop lods loop stos loop lods loop (bad) loop scas loop stos loop scas loop scas loop scas loop lods loop lods loop scas add subl lods loop lods loop mov subl stos loop stos loop stos loop scas loop stos loop stos loop mov subl (bad) loop mov orb loop scas loop mov subl lods loop lods loop mov subl lods loop lods loop mov orb scas add subb lods loop lods loop lods loop mov orb stos loop stos loop scas loop mov orb loop stos loop lods loop lods loop stos loop lods loop lods loop mov subb stos loop mov subl scas loop lods loop lods loop scas loop (bad) loop (bad) loop lods loop scas loop (bad) loop mov orb orb stos loop lods loop (bad) loop mov subb stos loop lods loop lods loop stos loop lods loop stos loop scas loop mov subl lods loop lods loop stos loop (bad) loop lods loop lods loop scas loop stos loop mov orb loop scas loop stos loop scas loop mov subb lods loop lods loop mov subb subb stos loop stos loop lods loop stos loop (bad) loop stos loop stos loop mov orb stos loop stos loop stos loop lods loop stos loop (bad) loop scas loop lods loop scas loop stos loop lods loop stos loop scas loop scas loop (bad) loop stos loop stos loop scas loop stos loop stos loop stos loop stos loop stos loop scas loop lods loop (bad) loop lods loop scas add subb scas loop scas loop lods loop mov orb (bad) loop stos loop mov subb mov orb lods loop stos loop mov orb stos loop scas loop stos loop (bad) loop scas loop scas loop mov subb mov subl lods loop scas loop stos loop stos loop scas loop scas loop scas add orb stos loop scas loop stos loop stos loop scas loop lods loop stos loop (bad) loop lods loop stos loop lods loop scas loop mov orb mov orb lods loop mov orb lods loop lods loop mov subb loop mov subb lods loop mov subb lods loop (bad) loop scas add subl mov subb loop scas loop mov orb loop mov subb stos loop stos loop lods loop stos loop mov subl lods loop mov subb mov orb lods loop (bad) loop stos loop stos loop stos loop lods loop lods loop mov orb scas add subb stos loop lods loop lods loop lods loop mov orb stos loop scas loop scas loop stos loop lods loop stos loop lods loop (bad) loop lods loop mov subb mov orb scas loop lods loop (bad) loop scas loop mov subl loop stos loop mov subl (bad) loop stos loop scas add subl lods loop (bad) loop stos loop stos loop scas loop lods loop mov orb loop mov orb stos loop mov subb loop scas loop stos loop lods loop mov subl scas loop scas loop mov orb loop stos loop stos loop mov subb scas loop scas add subl stos loop scas loop lods loop (bad) loop stos loop scas loop stos loop lods loop (bad) loop lods loop scas loop stos loop mov subb scas loop (bad) loop mov subb loop scas loop lods loop (bad) loop scas loop mov subb lods loop scas loop scas loop lods loop stos loop (bad) loop mov orb scas add subb scas loop stos loop stos loop lods loop mov subl stos loop mov subl loop lods loop scas loop stos loop mov subl scas loop lods loop lods loop stos loop scas loop lods loop mov subb scas loop mov subl mov orb scas add orb stos loop (bad) loop mov subl (bad) loop lods loop scas loop mov subl (bad) loop lods loop mov subb (bad) loop stos loop (bad) loop mov subl scas loop mov subl (bad) loop lods loop stos loop (bad) loop mov subl add orb lods loop lods loop (bad) loop (bad) loop mov orb scas loop scas loop scas loop (bad) loop stos loop scas loop stos loop scas loop (bad) loop scas loop scas loop stos loop stos loop mov subl scas loop scas loop mov subl stos loop (bad) loop (bad) loop (bad) loop stos loop (bad) loop scas loop stos loop scas add subb loop stos loop (bad) loop scas loop scas loop mov subl mov orb loop lods loop mov subb loop stos loop scas loop stos loop (bad) loop lods loop stos loop stos loop mov subb loop lods loop stos loop (bad) loop scas loop mov subl lods loop scas add subb scas loop scas loop stos loop (bad) loop mov subl loop scas loop lods loop stos loop scas loop lods loop (bad) loop scas loop scas loop stos loop lods loop lods loop scas loop (bad) loop lods loop mov subb loop lods loop mov orb lods loop scas loop lods loop lods loop (bad) loop lods loop lods loop scas add subl mov orb loop mov orb (bad) loop stos loop mov subl scas loop scas loop stos loop stos loop stos loop stos loop stos loop scas loop lods loop stos loop scas loop scas loop lods loop scas loop lods loop mov subl loop stos loop lods loop lods loop stos loop scas add subl stos loop mov orb lods loop stos loop stos loop lods loop mov subb stos loop lods loop stos loop lods loop stos loop stos loop stos loop stos loop stos loop (bad) loop scas loop stos loop mov subl loop lods loop stos loop (bad) loop (bad) loop scas loop lods loop stos loop (bad) loop stos loop scas add subl stos loop lods loop stos loop lods loop lods loop mov subl stos loop lods loop lods loop lods loop (bad) loop (bad) loop lods loop scas loop stos loop stos loop scas loop scas loop stos loop mov subl mov subl mov subl scas loop scas loop lods loop scas add subb loop lods loop lods loop lods loop (bad) loop stos loop stos loop scas loop scas loop (bad) loop scas loop (bad) loop (bad) loop scas loop mov subl lods loop lods loop stos loop stos loop lods loop stos loop (bad) loop (bad) loop mov subb lods loop lods loop scas loop lods loop scas loop mov subl scas add subb mov orb scas loop lods loop stos loop mov subl scas loop lods loop scas loop mov subb loop scas loop stos loop lods loop (bad) loop scas loop stos loop mov orb scas loop stos loop (bad) loop lods loop stos loop mov orb stos loop lods loop scas loop (bad) loop scas add subl mov subl loop stos loop scas loop lods loop mov subl loop stos loop mov orb loop lods loop scas loop (bad) loop scas loop mov orb scas loop lods loop stos loop scas loop mov subl scas loop scas loop stos loop mov subb subl (bad) loop stos loop mov subl lods loop lods loop lods loop stos loop lods loop scas loop stos loop scas loop scas loop stos loop stos loop (bad) loop stos loop lods loop stos loop stos loop lods loop lods loop stos loop lods loop stos loop scas loop scas loop lods loop lods loop (bad) loop scas loop mov subl subb loop mov orb loop stos loop stos loop (bad) loop scas loop mov subl mov orb loop (bad) loop (bad) loop (bad) loop scas loop stos loop (bad) loop stos loop lods loop stos loop stos loop mov subl stos loop mov orb (bad) loop lods loop lods loop scas add subb (bad) loop stos loop lods loop (bad) loop lods loop (bad) loop (bad) loop stos loop stos loop scas loop stos loop stos loop mov orb (bad) loop mov subl loop mov subb mov subb stos loop (bad) loop scas loop scas loop lods loop lods loop mov subl (bad) loop scas add subl lods loop (bad) loop lods loop stos loop mov subl scas loop stos loop stos loop mov subb loop lods loop stos loop scas loop mov orb scas loop lods loop (bad) loop scas loop scas loop lods loop scas loop stos loop stos loop scas loop lods loop lods loop mov orb lods loop scas add subl stos loop lods loop lods loop mov subb loop mov subb mov orb scas loop stos loop stos loop scas loop (bad) loop mov subb lods loop (bad) loop stos loop stos loop scas loop mov subb scas loop scas loop scas loop scas loop stos loop scas loop scas loop scas loop scas add subl (bad) loop scas loop lods loop mov orb stos loop stos loop mov subb lods loop stos loop scas loop lods loop stos loop lods loop stos loop stos loop scas loop stos loop stos loop stos loop scas loop stos loop scas loop lods loop lods loop lods loop scas loop scas loop (bad) loop scas loop scas loop lods loop stos loop stos loop scas add subl (bad) loop stos loop mov subb lods loop mov subl lods loop (bad) loop stos loop scas loop lods loop (bad) loop lods loop lods loop scas loop lods loop lods loop (bad) loop lods loop mov subl lods loop lods loop stos loop lods loop scas loop stos loop scas loop lods loop lods loop lods loop scas add subb loop scas loop scas loop mov subb stos loop lods loop mov subb mov subl stos loop scas loop scas loop stos loop lods loop lods loop stos loop lods loop stos loop lods loop stos loop scas loop lods loop stos loop scas loop scas loop scas loop scas loop lods loop scas loop scas loop lods loop stos loop scas add subl scas loop lods loop (bad) loop lods loop stos loop stos loop mov subb stos loop scas loop lods loop lods loop mov subb lods loop mov subl stos loop mov subl mov subl scas loop mov orb scas loop stos loop scas loop scas add subl loop lods loop mov subl scas loop scas loop mov orb stos loop (bad) loop lods loop lods loop mov orb mov subb loop stos loop lods loop stos loop mov subl loop scas loop mov subb lods loop mov subb orb scas loop lods loop lods loop stos loop lods loop stos loop lods loop (bad) loop stos loop mov subb scas loop scas loop lods loop scas loop stos loop lods loop scas loop scas loop stos loop scas loop stos loop stos loop mov subb scas loop scas loop stos loop lods loop mov subb scas loop mov subl scas loop scas loop scas loop mov orb (bad) loop (bad) loop stos loop mov subb loop mov subl loop (bad) loop lods loop lods loop stos loop lods loop stos loop mov subb stos loop mov subb lods loop lods loop lods loop mov subb mov subl subl mov subl stos loop stos loop (bad) loop stos loop scas loop stos loop scas loop (bad) loop stos loop stos loop (bad) loop mov orb stos loop scas loop mov orb (bad) loop stos loop (bad) loop stos loop stos loop stos loop lods loop stos loop lods loop lods loop lods loop stos loop mov orb subl mov orb stos loop mov subb loop mov subl lods loop mov orb mov subl scas loop stos loop scas loop mov subl (bad) loop scas loop mov subl scas loop stos loop mov subl orb mov subl lods loop mov orb loop lods loop lods loop mov subb scas loop lods loop mov subb stos loop mov orb loop mov orb stos loop scas loop (bad) loop stos loop mov subl scas loop mov subb subb (bad) loop (bad) loop (bad) loop scas loop lods loop stos loop lods loop lods loop mov subl stos loop stos loop lods loop lods loop scas loop mov subl (bad) loop scas loop (bad) loop stos loop (bad) loop scas loop stos loop stos loop (bad) loop scas loop stos loop lods loop (bad) loop stos loop mov subl stos loop stos loop (bad) loop lods loop mov subb mov subl mov subl lods loop stos loop scas loop scas loop mov subl stos loop scas loop lods loop (bad) loop stos loop stos loop stos loop lods loop mov subb lods loop stos loop mov subb add orb lods loop mov subl stos loop lods loop scas loop scas loop scas loop lods loop mov subb lods loop lods loop (bad) loop lods loop lods loop scas loop scas loop stos loop mov orb (bad) loop stos loop lods loop scas loop lods loop stos loop scas loop stos loop mov subl loop scas add subl (bad) loop lods loop (bad) loop stos loop lods loop scas loop stos loop scas loop (bad) loop mov orb stos loop scas loop stos loop mov subb lods loop stos loop mov orb loop lods loop (bad) loop stos loop scas loop lods loop scas loop lods loop (bad) loop mov subb scas loop mov subb orb (bad) loop mov subl (bad) loop scas loop stos loop lods loop mov subl mov subl mov orb mov subb loop stos loop stos loop scas loop stos loop stos loop scas loop lods loop mov subl stos loop lods loop scas add subb mov orb mov orb loop scas loop lods loop lods loop mov subl loop lods loop stos loop mov orb loop (bad) loop scas loop mov orb lods loop lods loop lods loop mov subb lods loop stos loop lods loop lods loop scas loop mov subb orb loop (bad) loop stos loop stos loop stos loop stos loop stos loop stos loop lods loop lods loop stos loop scas loop scas loop lods loop stos loop mov subl stos loop scas loop (bad) loop scas loop stos loop stos loop lods loop lods loop mov subl lods loop (bad) loop (bad) loop mov subl subl lods loop mov subl lods loop (bad) loop stos loop lods loop mov orb (bad) loop mov subl stos loop stos loop stos loop lods loop mov orb scas loop scas loop scas loop scas loop mov subl loop stos loop stos loop (bad) loop scas add subb loop stos loop lods loop mov subl scas loop scas loop (bad) loop mov subl mov subl lods loop lods loop (bad) loop scas loop lods loop scas loop lods loop lods loop mov subb mov subb scas loop (bad) loop stos loop stos loop mov subb subb scas loop lods loop (bad) loop stos loop scas loop mov subl (bad) loop lods loop stos loop lods loop scas loop lods loop stos loop scas loop stos loop lods loop mov subl (bad) loop stos loop scas loop scas loop mov subb mov subl lods loop stos loop mov subl subl mov orb (bad) loop scas loop mov orb lods loop (bad) loop scas loop lods loop stos loop scas loop mov orb (bad) loop lods loop lods loop stos loop scas loop (bad) loop (bad) loop lods loop stos loop scas loop stos loop scas loop mov subl loop lods loop stos loop scas add subb stos loop scas loop mov subl lods loop mov subl stos loop lods loop lods loop mov subl (bad) loop scas loop mov subl stos loop mov subl lods loop stos loop stos loop lods loop (bad) loop mov subb scas loop scas add orb scas loop mov subb scas loop scas loop stos loop stos loop lods loop scas loop mov subl lods loop lods loop stos loop scas loop scas loop lods loop mov orb (bad) loop mov subl stos loop scas loop scas loop stos loop scas loop stos loop lods loop stos loop mov orb lods loop scas loop (bad) loop (bad) loop lods loop stos loop scas loop lods loop lods loop stos loop lods loop mov subb mov subl mov subl (bad) loop lods loop stos loop mov subb stos loop lods loop stos loop (bad) loop mov orb loop stos loop (bad) loop scas loop lods loop scas add orb scas loop scas loop scas loop (bad) loop lods loop mov subl (bad) loop lods loop stos loop lods loop (bad) loop (bad) loop lods loop scas loop lods loop (bad) loop (bad) loop stos loop scas loop mov subb scas loop lods loop lods loop lods loop lods loop scas loop lods loop (bad) loop mov subb lods loop stos loop scas add orb loop mov subl loop lods loop mov subl (bad) loop (bad) loop lods loop (bad) loop lods loop mov orb scas loop stos loop scas loop lods loop mov orb mov subb loop scas loop stos loop mov subl loop mov subb orb lods loop lods loop (bad) loop scas loop stos loop lods loop lods loop stos loop stos loop stos loop mov orb lods loop stos loop lods loop lods loop lods loop lods loop (bad) loop stos loop mov subl (bad) loop stos loop stos loop mov orb lods loop scas loop lods loop mov subb scas add subb mov subl (bad) loop (bad) loop stos loop stos loop scas loop stos loop (bad) loop scas loop stos loop scas loop scas loop mov orb stos loop lods loop scas loop lods loop lods loop lods loop lods loop lods loop stos loop stos loop (bad) loop stos loop lods loop stos loop scas loop lods loop (bad) loop mov subb scas add subl scas loop lods loop lods loop mov orb scas loop mov orb stos loop stos loop stos loop stos loop (bad) loop stos loop stos loop stos loop stos loop mov subl stos loop mov subl loop (bad) loop stos loop scas loop mov subb stos loop stos loop scas add subl loop (bad) loop lods loop mov orb mov orb loop scas loop lods loop mov subb lods loop lods loop stos loop scas loop stos loop mov orb scas loop lods loop scas loop scas loop stos loop lods loop scas loop mov subl loop lods loop stos loop scas add subl loop stos loop scas loop lods loop stos loop (bad) loop stos loop (bad) loop lods loop lods loop lods loop mov orb lods loop scas loop (bad) loop scas loop stos loop lods loop stos loop (bad) loop scas loop mov orb lods loop (bad) loop scas loop scas loop lods loop stos loop stos loop lods loop stos loop lods loop scas add orb mov subl mov orb loop scas loop lods loop stos loop mov subl loop scas loop scas loop scas loop mov subb scas loop mov subb lods loop mov subb lods loop (bad) loop scas loop lods loop (bad) loop mov subb scas add orb loop lods loop scas loop (bad) loop scas loop scas loop mov subl lods loop scas loop lods loop scas loop stos loop (bad) loop lods loop mov subb scas loop scas loop mov subl scas loop stos loop mov orb stos loop stos loop mov orb scas loop lods loop scas add subl lods loop lods loop mov orb (bad) loop mov subb loop mov orb mov orb lods loop stos loop mov orb scas loop mov subl lods loop lods loop mov subl lods loop (bad) loop mov subl stos loop mov orb scas loop stos loop stos loop lods loop mov orb stos loop mov subl lods loop scas loop lods loop lods loop mov subb loop lods loop stos loop (bad) loop stos loop stos loop stos loop mov subl scas loop stos loop lods loop lods loop mov orb subl loop (bad) loop (bad) loop mov orb scas loop scas loop lods loop mov subl mov subl lods loop (bad) loop scas loop lods loop mov subb loop scas loop stos loop mov subb scas loop mov subl scas loop lods loop scas add orb (bad) loop scas loop stos loop scas loop scas loop scas loop (bad) loop scas loop mov subl lods loop lods loop scas loop (bad) loop stos loop mov subb (bad) loop scas loop lods loop (bad) loop stos loop lods loop mov orb (bad) loop stos loop mov orb lods loop mov subb scas add subl loop stos loop (bad) loop lods loop mov subl loop mov subl stos loop scas loop (bad) loop mov subl stos loop mov subl stos loop mov orb mov orb loop (bad) loop stos loop stos loop scas loop scas add subl lods loop scas loop mov subb stos loop (bad) loop mov orb stos loop mov orb mov orb mov subb lods loop mov subl stos loop stos loop scas loop scas loop lods loop mov subl (bad) loop scas loop mov subb subl loop lods loop stos loop scas loop (bad) loop mov orb mov subl stos loop stos loop scas loop lods loop scas loop (bad) loop lods loop scas loop stos loop scas loop stos loop stos loop lods loop lods loop mov subl mov subb lods loop lods loop lods loop scas add subb lods loop mov subb lods loop stos loop lods loop stos loop scas loop (bad) loop mov subl scas loop scas loop scas loop mov subb lods loop (bad) loop mov subb loop lods loop stos loop lods loop mov subl lods loop stos loop lods loop lods loop lods loop scas add orb stos loop (bad) loop stos loop lods loop stos loop stos loop scas loop stos loop mov subb stos loop (bad) loop stos loop stos loop (bad) loop stos loop lods loop mov orb stos loop mov orb stos loop stos loop mov orb lods loop scas loop stos loop scas loop stos loop lods loop lods loop (bad) loop scas add subb loop lods loop lods loop stos loop stos loop lods loop mov subl stos loop lods loop mov orb stos loop lods loop stos loop mov subl loop scas loop scas loop lods loop lods loop (bad) loop scas loop lods loop lods loop mov subl lods loop stos loop mov subb subl (bad) loop scas loop lods loop scas loop stos loop mov subl (bad) loop lods loop (bad) loop lods loop lods loop (bad) loop stos loop mov subb (bad) loop mov subl (bad) loop mov subb stos loop lods loop stos loop stos loop scas loop mov orb scas add subl loop mov orb loop lods loop lods loop stos loop lods loop mov orb scas loop lods loop scas loop stos loop scas loop stos loop stos loop (bad) loop stos loop mov subb (bad) loop lods loop mov subl lods loop lods loop stos loop (bad) loop stos loop stos loop lods loop scas add subb loop scas loop lods loop mov subl stos loop mov orb loop stos loop (bad) loop lods loop (bad) loop stos loop mov subl mov subb loop scas loop scas loop stos loop lods loop stos loop stos loop mov subb mov subb lods loop scas add subb loop stos loop lods loop lods loop lods loop mov subb loop lods loop stos loop scas loop lods loop mov orb stos loop scas loop scas loop scas loop stos loop lods loop stos loop mov orb scas loop stos loop lods loop lods loop scas loop stos loop scas loop lods loop stos loop scas loop scas loop stos loop scas add subl mov orb scas loop stos loop scas loop lods loop stos loop mov orb loop (bad) loop (bad) loop lods loop mov subl mov subl lods loop lods loop stos loop (bad) loop lods loop stos loop stos loop (bad) loop scas loop stos loop stos loop mov subl orb stos loop stos loop stos loop stos loop scas loop mov orb (bad) loop stos loop lods loop stos loop lods loop stos loop mov subb (bad) loop scas loop stos loop lods loop mov subb stos loop mov subb scas loop stos loop mov subl loop lods loop lods loop lods loop scas add orb (bad) loop mov subl mov subb mov subb scas loop stos loop stos loop lods loop scas loop scas loop stos loop stos loop scas loop mov subb stos loop stos loop lods loop (bad) loop mov subl (bad) loop lods loop stos loop lods loop stos loop (bad) loop stos loop scas add subl (bad) loop (bad) loop lods loop scas loop lods loop lods loop lods loop lods loop mov orb lods loop stos loop stos loop lods loop mov orb loop scas loop stos loop scas loop stos loop mov subb (bad) loop mov subl mov subl scas loop lods loop scas add subl (bad) loop lods loop lods loop scas loop mov orb stos loop stos loop lods loop (bad) loop scas loop mov subl scas loop stos loop (bad) loop stos loop (bad) loop scas loop scas loop stos loop lods loop scas loop lods loop stos loop scas loop mov orb lods loop mov subb scas loop scas add subb scas loop scas loop scas loop lods loop stos loop scas loop scas loop (bad) loop mov subl loop scas loop stos loop lods loop lods loop mov subb lods loop (bad) loop stos loop lods loop stos loop (bad) loop stos loop lods loop (bad) loop stos loop stos loop scas loop (bad) loop lods loop stos loop scas loop stos loop lods loop scas add orb mov subl lods loop lods loop scas loop lods loop (bad) loop lods loop mov subl stos loop stos loop scas loop (bad) loop (bad) loop stos loop stos loop (bad) loop scas loop lods loop scas loop (bad) loop stos loop stos loop (bad) loop stos loop scas loop (bad) loop scas loop mov subl lods loop scas add subl mov subb lods loop (bad) loop mov orb lods loop mov subl stos loop mov subb lods loop stos loop scas loop mov subb loop lods loop lods loop scas loop stos loop scas loop lods loop scas loop (bad) loop lods loop stos loop (bad) loop lods loop stos loop scas add subb mov orb lods loop stos loop scas loop stos loop mov subl scas loop scas loop mov orb lods loop mov subl stos loop scas loop lods loop mov orb stos loop lods loop scas loop mov orb (bad) loop stos loop scas loop stos loop lods loop scas add orb (bad) loop mov subl stos loop lods loop lods loop lods loop (bad) loop lods loop lods loop scas loop lods loop stos loop lods loop mov subl stos loop scas loop stos loop lods loop lods loop mov subl mov orb mov orb loop scas loop lods loop scas add subl loop stos loop lods loop lods loop scas loop stos loop lods loop scas loop mov subb scas loop lods loop lods loop (bad) loop lods loop stos loop (bad) loop mov orb loop stos loop scas loop stos loop mov subl (bad) loop scas loop scas loop scas loop stos loop stos loop lods loop lods loop scas add subl scas loop lods loop mov orb mov subl loop scas loop scas loop mov orb loop stos loop lods loop stos loop stos loop mov subb stos loop lods loop stos loop lods loop lods loop scas loop stos loop lods loop scas loop stos loop lods loop stos loop lods loop mov subb orb loop (bad) loop stos loop (bad) loop scas loop (bad) loop scas loop lods loop stos loop mov subb stos loop (bad) loop stos loop stos loop lods loop scas loop mov subb lods loop (bad) loop lods loop stos loop stos loop stos loop stos loop stos loop scas loop stos loop mov subb loop stos loop stos loop scas add subl stos loop (bad) loop scas loop (bad) loop (bad) loop lods loop stos loop stos loop stos loop mov orb mov orb loop mov subl scas loop lods loop lods loop scas loop (bad) loop mov orb lods loop mov subb stos loop lods loop lods loop stos loop stos loop scas add subb stos loop (bad) loop scas loop mov subb scas loop (bad) loop scas loop (bad) loop (bad) loop stos loop stos loop lods loop (bad) loop (bad) loop stos loop mov subb stos loop lods loop stos loop lods loop lods loop stos loop lods loop stos loop lods loop scas loop lods loop lods loop (bad) loop scas loop (bad) loop mov subl subb scas loop stos loop mov orb stos loop mov subl (bad) loop lods loop scas loop stos loop mov orb lods loop stos loop stos loop scas loop (bad) loop stos loop (bad) loop stos loop lods loop stos loop lods loop stos loop stos loop lods loop scas loop mov subl loop scas add subl stos loop mov subl mov subl stos loop scas loop scas loop stos loop (bad) loop scas loop (bad) loop stos loop stos loop stos loop (bad) loop scas loop mov orb scas loop stos loop lods loop lods loop lods loop stos loop stos loop (bad) loop stos loop scas loop stos loop stos loop stos loop scas add subl stos loop lods loop (bad) loop stos loop (bad) loop stos loop scas loop mov subl stos loop mov orb lods loop (bad) loop stos loop stos loop scas loop stos loop (bad) loop mov subl loop stos loop lods loop (bad) loop (bad) loop mov orb stos loop stos loop scas loop scas add subl scas loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop mov subl stos loop stos loop stos loop (bad) loop stos loop lods loop stos loop stos loop stos loop scas loop lods loop mov subb lods loop lods loop (bad) loop stos loop mov orb lods loop stos loop stos loop lods loop mov subb orb lods loop lods loop (bad) loop mov subl scas loop stos loop stos loop lods loop mov subb loop lods loop stos loop mov subb loop stos loop mov orb stos loop lods loop lods loop scas loop scas loop mov orb stos loop stos loop lods loop scas loop scas add subl lods loop lods loop stos loop lods loop scas loop stos loop lods loop stos loop lods loop lods loop stos loop scas loop lods loop lods loop lods loop scas loop stos loop scas loop mov subb loop lods loop lods loop scas loop scas loop stos loop lods loop (bad) loop mov subb stos loop lods loop lods loop scas loop stos loop scas add orb (bad) loop lods loop stos loop stos loop lods loop scas loop (bad) loop lods loop mov subl scas loop mov orb mov orb mov orb mov subb scas loop mov subb scas loop scas loop scas loop scas loop lods loop mov subb scas loop scas add subb (bad) loop mov subl (bad) loop mov subl loop mov subl (bad) loop lods loop stos loop stos loop scas loop lods loop scas loop mov orb scas loop (bad) loop (bad) loop mov subl loop lods loop stos loop (bad) loop lods loop mov subb subb mov subb lods loop lods loop stos loop stos loop mov subl loop (bad) loop stos loop mov subl scas loop (bad) loop lods loop scas loop stos loop mov orb lods loop lods loop mov subl mov subl lods loop scas add orb stos loop stos loop scas loop stos loop lods loop scas loop stos loop stos loop stos loop lods loop scas loop stos loop lods loop mov orb lods loop stos loop scas loop mov subl scas loop mov subb loop (bad) loop scas loop lods loop mov subl stos loop scas loop stos loop scas add subl stos loop scas loop stos loop lods loop mov orb mov subl stos loop (bad) loop scas loop mov subb lods loop mov orb scas loop mov subb mov orb (bad) loop mov subl mov orb scas add orb (bad) loop (bad) loop mov subl mov subl (bad) loop stos loop stos loop lods loop scas loop (bad) loop stos loop stos loop stos loop scas loop mov subl mov subl scas loop mov subl lods loop mov subl scas add orb scas loop stos loop scas loop scas loop scas loop (bad) loop mov subb scas loop mov subb mov subb loop scas loop mov subl scas loop lods loop mov orb mov subl loop lods loop scas loop mov subb scas loop scas add subl mov subl scas loop stos loop lods loop mov orb scas loop stos loop scas loop scas loop lods loop scas loop lods loop lods loop mov subb lods loop lods loop stos loop mov subl scas loop lods loop scas loop lods loop scas loop stos loop lods loop lods loop scas loop scas add orb loop mov subb stos loop stos loop stos loop mov subb mov subl loop lods loop lods loop (bad) loop (bad) loop stos loop stos loop scas loop lods loop stos loop lods loop stos loop stos loop lods loop lods loop stos loop scas loop scas loop mov subb loop (bad) loop mov subb subl loop lods loop lods loop lods loop (bad) loop scas loop lods loop stos loop lods loop mov subb scas loop mov subl mov subb loop lods loop scas loop scas loop stos loop mov subl scas loop stos loop lods loop scas loop (bad) loop lods loop (bad) loop scas add orb lods loop (bad) loop (bad) loop scas loop stos loop stos loop (bad) loop mov subb lods loop scas loop lods loop stos loop mov subl (bad) loop stos loop lods loop scas loop stos loop scas loop mov subl lods loop stos loop lods loop scas loop scas loop lods loop (bad) loop stos loop scas loop stos loop scas add subl (bad) loop mov orb loop stos loop lods loop (bad) loop lods loop stos loop lods loop mov orb loop stos loop scas loop stos loop stos loop (bad) loop lods loop (bad) loop lods loop mov subl loop stos loop stos loop mov subl lods loop mov subl subb lods loop scas loop (bad) loop mov subl stos loop stos loop scas loop (bad) loop (bad) loop mov subb loop lods loop scas loop scas loop mov subb stos loop lods loop scas loop scas loop scas loop scas loop stos loop mov orb stos loop stos loop lods loop (bad) loop lods loop scas add orb lods loop (bad) loop scas loop stos loop scas loop scas loop (bad) loop scas loop stos loop stos loop mov subb stos loop (bad) loop mov orb loop scas loop stos loop scas loop mov subl mov subl (bad) loop lods loop (bad) loop lods loop (bad) loop stos loop lods loop mov subb subl stos loop mov subb lods loop mov orb lods loop scas loop mov subl stos loop scas loop lods loop lods loop stos loop stos loop stos loop lods loop (bad) loop mov subb mov subl loop stos loop lods loop stos loop (bad) loop scas loop scas add subb lods loop stos loop scas loop stos loop scas loop scas loop scas loop scas loop mov subb (bad) loop stos loop mov subl (bad) loop stos loop scas loop scas loop lods loop lods loop scas loop (bad) loop lods loop lods loop lods loop stos loop lods loop mov subb scas loop (bad) loop lods loop stos loop (bad) loop scas add orb lods loop mov subl loop scas loop stos loop scas loop stos loop lods loop scas loop lods loop stos loop mov subb (bad) loop (bad) loop lods loop lods loop lods loop lods loop stos loop lods loop lods loop lods loop scas loop mov subb scas loop (bad) loop scas loop lods loop stos loop stos loop mov subb subl lods loop scas loop mov orb stos loop lods loop lods loop lods loop scas loop mov subl scas loop lods loop stos loop mov subb loop (bad) loop scas loop lods loop scas loop stos loop mov orb stos loop mov subb stos loop (bad) loop (bad) loop scas add subl stos loop scas loop stos loop mov orb scas loop scas loop mov orb mov subl lods loop stos loop lods loop stos loop stos loop stos loop lods loop stos loop (bad) loop lods loop stos loop lods loop mov subl scas loop mov subb scas loop stos loop scas add subb scas loop stos loop lods loop lods loop lods loop scas loop stos loop (bad) loop mov subb stos loop scas loop (bad) loop mov orb mov subl lods loop scas loop stos loop mov subb lods loop mov subl loop stos loop lods loop mov orb scas add subb lods loop (bad) loop mov subl lods loop lods loop (bad) loop (bad) loop lods loop (bad) loop stos loop (bad) loop scas loop scas loop mov orb scas loop stos loop stos loop stos loop stos loop mov subl lods loop stos loop (bad) loop scas loop scas loop stos loop stos loop lods loop scas loop stos loop scas add orb lods loop scas loop scas loop stos loop lods loop stos loop scas loop stos loop scas loop lods loop scas loop scas loop scas loop lods loop lods loop lods loop scas loop lods loop stos loop (bad) loop scas loop mov orb mov subl mov orb stos loop mov orb mov subl subl scas loop mov subl scas loop mov subb lods loop stos loop mov subb scas loop stos loop (bad) loop lods loop scas loop (bad) loop scas loop lods loop scas loop scas loop scas loop scas loop lods loop lods loop stos loop scas loop (bad) loop mov subb lods loop lods loop scas loop scas add subl mov orb (bad) loop stos loop (bad) loop stos loop lods loop scas loop lods loop lods loop stos loop stos loop lods loop lods loop lods loop stos loop stos loop stos loop (bad) loop lods loop lods loop lods loop mov subb lods loop mov subl loop stos loop lods loop stos loop stos loop scas loop scas add outsb je jb jae loop stos loop scas loop lods loop stos loop lods loop stos loop stos loop (bad) loop lods loop lods loop scas loop mov subb scas loop scas loop lods loop scas loop stos loop scas loop mov subb loop stos loop stos loop stos loop stos loop scas loop stos loop (bad) loop mov subb scas loop scas loop lods loop stos loop stos loop stos loop scas add subl stos loop lods loop stos loop lods loop (bad) loop scas loop mov subl loop scas loop stos loop lods loop lods loop mov subb mov orb stos loop lods loop scas loop stos loop stos loop lods loop scas loop mov subb lods loop lods loop lods loop (bad) loop stos loop stos loop scas add subb (bad) loop lods loop stos loop scas loop mov orb (bad) loop mov subl lods loop lods loop lods loop stos loop stos loop mov orb stos loop scas loop lods loop mov subl mov subl (bad) loop scas loop scas loop mov subb mov subb orb stos loop scas loop lods loop lods loop stos loop stos loop stos loop (bad) loop stos loop lods loop (bad) loop mov subl loop lods loop lods loop stos loop mov subl (bad) loop scas loop lods loop mov orb mov subb lods loop lods loop lods loop lods loop scas loop scas add orb lods loop mov subl mov orb lods loop mov subl loop scas loop mov subl lods loop (bad) loop stos loop (bad) loop stos loop stos loop scas loop (bad) loop (bad) loop mov orb lods loop stos loop stos loop mov subl scas add orb stos loop mov subl loop scas loop lods loop stos loop stos loop stos loop lods loop stos loop mov subb lods loop scas loop (bad) loop stos loop scas loop lods loop (bad) loop (bad) loop lods loop mov orb lods loop stos loop scas loop mov orb lods loop scas loop lods loop lods loop scas add orb stos loop scas loop stos loop stos loop mov subb loop stos loop lods loop stos loop scas loop lods loop lods loop (bad) loop stos loop stos loop lods loop mov subl loop (bad) loop stos loop stos loop scas loop scas loop stos loop scas loop mov subb scas loop scas loop stos loop stos loop (bad) loop scas add orb (bad) loop lods loop (bad) loop stos loop lods loop scas loop scas loop mov subb loop scas loop (bad) loop scas loop scas loop lods loop lods loop scas loop scas loop stos loop stos loop stos loop mov subl stos loop scas loop mov subl (bad) loop scas loop stos loop stos loop lods loop stos loop scas add orb (bad) loop scas loop (bad) loop scas loop mov subb stos loop scas loop lods loop mov subl lods loop stos loop (bad) loop scas loop lods loop lods loop stos loop stos loop stos loop mov orb lods loop scas loop scas loop mov subl mov subb loop stos loop scas add orb mov subb mov subb scas loop mov subl lods loop stos loop (bad) loop stos loop stos loop mov subb lods loop lods loop stos loop lods loop lods loop lods loop lods loop (bad) loop mov orb (bad) loop stos loop stos loop (bad) loop lods loop (bad) loop (bad) loop mov subb orb stos loop lods loop (bad) loop stos loop scas loop (bad) loop lods loop scas loop stos loop mov subl lods loop scas loop scas loop scas loop mov subb mov subl scas loop scas loop scas loop stos loop lods loop lods loop lods loop lods loop stos loop scas loop mov subl orb lods loop stos loop mov subl stos loop lods loop lods loop lods loop stos loop scas loop stos loop lods loop mov orb scas loop (bad) loop scas loop mov subl lods loop (bad) loop scas loop mov orb loop scas loop lods loop lods loop lods loop lods loop lods loop mov subb orb stos loop lods loop mov subl stos loop lods loop stos loop mov orb loop mov orb mov subb scas loop (bad) loop scas loop scas loop scas loop lods loop mov subl scas loop scas loop stos loop lods loop mov orb scas loop scas add subb loop lods loop lods loop stos loop stos loop lods loop mov subl loop mov subb scas loop mov orb loop mov orb mov orb stos loop scas loop lods loop lods loop stos loop mov subb loop scas loop stos loop mov orb stos loop stos loop mov subl mov orb loop mov subb loop lods loop (bad) loop (bad) loop stos loop lods loop lods loop stos loop (bad) loop scas loop scas loop stos loop stos loop (bad) loop mov subl lods loop mov subb (bad) loop lods loop stos loop (bad) loop lods loop scas add orb stos loop stos loop mov subl (bad) loop stos loop scas loop scas loop stos loop mov subb lods loop lods loop stos loop mov subb scas loop scas loop lods loop stos loop lods loop scas loop scas loop (bad) loop mov subl mov subl lods loop scas loop scas add subl stos loop mov subb scas loop lods loop scas loop lods loop lods loop scas loop mov subb mov subb lods loop scas loop scas loop lods loop lods loop (bad) loop stos loop mov orb stos loop (bad) loop (bad) loop stos loop lods loop mov subb mov subl orb loop mov subb stos loop mov orb loop stos loop lods loop lods loop lods loop scas loop lods loop stos loop stos loop stos loop scas loop (bad) loop stos loop scas loop stos loop mov subb stos loop scas loop mov orb scas loop lods loop lods loop mov subb loop scas add subb lods loop (bad) loop scas loop lods loop mov orb mov orb mov subl mov subb scas loop stos loop lods loop scas loop stos loop stos loop mov subb (bad) loop lods loop lods loop (bad) loop scas loop mov subl lods loop mov subl subl mov subl mov subl loop scas loop mov orb scas loop lods loop lods loop scas loop scas loop mov subb loop lods loop scas loop mov subb scas loop mov subl loop mov subl orb stos loop mov subl lods loop (bad) loop scas loop stos loop (bad) loop mov orb stos loop stos loop lods loop mov orb (bad) loop stos loop stos loop stos loop stos loop mov subl stos loop lods loop mov subl (bad) loop lods loop lods loop scas add subl stos loop mov subl mov subl lods loop scas loop stos loop stos loop scas loop lods loop stos loop stos loop stos loop mov subl stos loop mov orb stos loop mov subb loop stos loop (bad) loop mov subl scas add orb (bad) loop stos loop (bad) loop scas loop mov orb loop lods loop lods loop scas loop mov subl lods loop stos loop scas loop lods loop scas loop (bad) loop scas loop stos loop stos loop scas loop mov orb (bad) loop (bad) loop lods loop scas loop (bad) loop (bad) loop stos loop scas loop lods loop lods loop scas add orb stos loop scas loop (bad) loop stos loop lods loop lods loop (bad) loop stos loop stos loop (bad) loop scas loop mov subl lods loop scas loop mov subl (bad) loop stos loop scas loop scas loop lods loop mov subb loop stos loop mov subl stos loop lods loop scas add subl stos loop scas loop lods loop mov orb mov subb lods loop scas loop (bad) loop stos loop lods loop scas loop lods loop stos loop (bad) loop scas loop stos loop lods loop mov subl scas loop (bad) loop lods loop stos loop scas loop stos loop scas loop mov orb mov subb orb mov subb loop stos loop mov subb mov orb scas loop stos loop (bad) loop (bad) loop mov subb mov subb lods loop stos loop scas loop stos loop mov orb loop mov orb loop stos loop stos loop scas loop (bad) loop lods loop scas add subb mov subb mov subb (bad) loop stos loop lods loop scas loop scas loop stos loop stos loop stos loop mov subl (bad) loop stos loop scas loop mov orb lods loop mov subl stos loop stos loop scas loop lods loop lods loop lods loop lods loop stos loop stos loop scas add orb scas loop lods loop lods loop mov subl scas loop stos loop lods loop stos loop lods loop mov orb mov subl mov subb (bad) loop (bad) loop (bad) loop lods loop stos loop stos loop lods loop (bad) loop lods loop mov subl (bad) loop lods loop lods loop scas add subl stos loop mov orb stos loop mov subl loop mov orb scas loop stos loop stos loop (bad) loop mov orb stos loop (bad) loop scas loop scas loop (bad) loop stos loop lods loop mov subb loop mov subb stos loop lods loop scas add subl lods loop lods loop scas loop stos loop lods loop stos loop scas loop scas loop (bad) loop lods loop mov orb scas loop lods loop mov orb lods loop (bad) loop (bad) loop (bad) loop (bad) loop mov subl mov subb lods loop stos loop (bad) loop (bad) loop stos loop lods loop stos loop scas add subb scas loop (bad) loop lods loop stos loop stos loop lods loop stos loop scas loop lods loop stos loop stos loop stos loop lods loop lods loop stos loop (bad) loop (bad) loop mov subl scas loop scas loop stos loop stos loop stos loop mov subl (bad) loop lods loop stos loop stos loop lods loop lods loop scas loop lods loop scas add orb mov subl mov subb mov orb mov subb scas loop scas loop (bad) loop lods loop stos loop lods loop stos loop stos loop mov subl (bad) loop scas loop lods loop stos loop lods loop stos loop lods loop mov subb mov subl orb lods loop stos loop stos loop mov subl stos loop scas loop (bad) loop scas loop scas loop lods loop (bad) loop (bad) loop scas loop mov subb (bad) loop stos loop scas loop lods loop scas loop scas loop stos loop lods loop scas loop lods loop scas loop (bad) loop stos loop mov orb scas loop stos loop stos loop scas add subb lods loop (bad) loop mov subb stos loop stos loop lods loop lods loop stos loop (bad) loop stos loop stos loop stos loop lods loop lods loop stos loop scas loop lods loop stos loop scas loop mov orb loop lods loop scas loop scas loop lods loop mov subl (bad) loop stos loop scas loop lods loop stos loop scas add orb lods loop stos loop stos loop scas loop stos loop stos loop stos loop lods loop (bad) loop lods loop scas loop lods loop scas loop stos loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop (bad) loop scas loop scas loop mov orb stos loop scas loop scas loop (bad) loop lods loop scas loop lods loop mov subb (bad) loop mov subb subb loop (bad) loop stos loop scas loop scas loop stos loop lods loop lods loop (bad) loop stos loop lods loop mov subl scas loop stos loop (bad) loop mov orb stos loop mov subb stos loop scas loop scas loop mov subb loop stos loop lods loop mov orb scas add subb mov orb lods loop lods loop stos loop stos loop stos loop scas loop stos loop scas loop (bad) loop mov orb mov orb mov subb loop mov subl (bad) loop lods loop scas loop scas loop mov subb mov subl mov subb orb mov orb stos loop stos loop (bad) loop (bad) loop stos loop stos loop mov subl loop (bad) loop lods loop (bad) loop lods loop lods loop stos loop scas loop mov orb loop lods loop scas loop lods loop mov orb stos loop stos loop (bad) loop mov subl subb stos loop scas loop lods loop scas loop scas loop scas loop (bad) loop scas loop lods loop scas loop lods loop lods loop lods loop stos loop (bad) loop lods loop (bad) loop stos loop stos loop scas loop mov orb mov orb (bad) loop scas loop scas loop scas loop scas loop stos loop mov subb stos loop lods loop stos loop scas add subl lods loop scas loop mov orb mov subb stos loop lods loop stos loop scas loop scas loop lods loop lods loop lods loop scas loop lods loop mov subl lods loop lods loop scas loop scas loop lods loop stos loop scas loop mov subl lods loop (bad) loop lods loop (bad) loop scas add subl scas loop stos loop stos loop lods loop lods loop mov subb scas loop stos loop lods loop (bad) loop stos loop lods loop scas loop mov orb stos loop lods loop stos loop lods loop lods loop stos loop lods loop scas loop lods loop lods loop scas loop lods loop scas loop scas loop lods loop stos loop stos loop lods loop (bad) loop scas add subb loop scas loop (bad) loop lods loop lods loop stos loop (bad) loop lods loop scas loop lods loop lods loop mov subl mov subl stos loop mov subl mov subl (bad) loop stos loop lods loop scas loop scas loop (bad) loop scas loop (bad) loop lods loop stos loop scas add subb (bad) loop stos loop lods loop stos loop (bad) loop mov subl stos loop scas loop (bad) loop lods loop lods loop mov subl stos loop (bad) loop stos loop stos loop (bad) loop mov subl loop scas loop lods loop (bad) loop scas loop mov subl scas loop (bad) loop scas add subb stos loop lods loop stos loop mov subl stos loop lods loop mov subl loop lods loop scas loop scas loop mov subb lods loop scas loop (bad) loop mov orb stos loop scas loop stos loop (bad) loop stos loop scas loop mov orb (bad) loop mov subl subb stos loop stos loop mov subb lods loop stos loop (bad) loop scas loop stos loop mov orb scas loop lods loop (bad) loop lods loop lods loop scas loop stos loop scas loop mov subb (bad) loop (bad) loop scas loop scas loop mov subl loop stos loop lods loop (bad) loop scas loop scas add subl (bad) loop lods loop lods loop (bad) loop lods loop (bad) loop scas loop mov orb scas loop (bad) loop lods loop mov subb (bad) loop scas loop lods loop mov orb scas loop stos loop mov subb mov subb scas loop stos loop stos loop scas loop stos loop mov subb (bad) loop mov subb loop (bad) loop lods loop lods loop lods loop lods loop scas loop lods loop (bad) loop mov subl lods loop (bad) loop mov orb lods loop lods loop (bad) loop stos loop scas loop lods loop scas loop mov orb (bad) loop scas loop lods loop scas loop lods loop stos loop mov orb subb lods loop scas loop scas loop stos loop scas loop scas loop stos loop (bad) loop lods loop lods loop (bad) loop stos loop lods loop stos loop scas loop lods loop stos loop stos loop mov subb stos loop lods loop stos loop lods loop lods loop mov orb lods loop lods loop (bad) loop stos loop stos loop lods loop scas loop scas loop stos loop scas add subb lods loop lods loop lods loop mov subb scas loop lods loop scas loop scas loop lods loop mov subl stos loop lods loop (bad) loop lods loop (bad) loop mov subl loop (bad) loop lods loop mov subl stos loop stos loop lods loop scas loop mov orb scas add subl mov subl stos loop stos loop mov orb loop stos loop scas loop mov subb scas loop lods loop scas loop (bad) loop lods loop stos loop mov subl stos loop lods loop (bad) loop (bad) loop scas loop (bad) loop lods loop stos loop lods loop mov subb scas add subb stos loop scas loop scas loop stos loop lods loop stos loop mov orb stos loop stos loop mov orb stos loop scas loop scas loop lods loop lods loop stos loop (bad) loop lods loop scas loop (bad) loop scas loop lods loop scas loop mov subb (bad) loop scas loop lods loop scas loop lods loop lods loop stos loop scas loop scas add orb loop lods loop (bad) loop mov subl loop mov orb stos loop lods loop scas loop lods loop stos loop mov subl lods loop lods loop stos loop mov subl loop scas loop (bad) loop stos loop mov subl lods loop lods loop (bad) loop scas add subl mov subb mov subb mov subb lods loop scas loop lods loop mov subb loop lods loop stos loop lods loop stos loop scas loop scas loop scas loop lods loop (bad) loop lods loop scas loop (bad) loop lods loop lods loop stos loop stos loop lods loop mov subl scas add subl (bad) loop mov orb mov orb stos loop (bad) loop stos loop scas loop stos loop lods loop stos loop lods loop lods loop stos loop mov orb loop lods loop mov subb lods loop lods loop stos loop lods loop mov subb mov subb scas loop scas loop scas add subl mov subb scas loop mov subl scas loop scas loop lods loop stos loop scas loop scas loop (bad) loop mov orb stos loop stos loop stos loop stos loop lods loop mov orb stos loop lods loop scas loop lods loop (bad) loop mov subl stos loop mov subb subb lods loop (bad) loop lods loop scas loop scas loop stos loop (bad) loop mov subb mov subb lods loop scas loop scas loop mov subb scas loop lods loop scas loop mov orb mov subb loop scas loop lods loop lods loop lods loop stos loop (bad) loop mov subl orb scas loop (bad) loop mov subb lods loop stos loop stos loop mov orb (bad) loop (bad) loop mov orb lods loop lods loop mov subl (bad) loop mov subl scas loop mov subb lods loop mov subb loop scas loop scas add subb stos loop stos loop scas loop scas loop stos loop lods loop scas loop scas loop lods loop lods loop scas loop mov subb stos loop (bad) loop lods loop stos loop stos loop stos loop scas loop mov subl loop lods loop stos loop lods loop mov subb stos loop stos loop lods loop stos loop lods loop scas loop scas add subb (bad) loop stos loop mov orb loop (bad) loop scas loop stos loop mov orb (bad) loop (bad) loop stos loop stos loop stos loop (bad) loop stos loop lods loop scas loop mov orb mov subl mov orb scas loop lods loop stos loop lods loop stos loop lods loop stos loop scas add subl (bad) loop lods loop scas loop stos loop (bad) loop stos loop stos loop stos loop stos loop mov subb lods loop (bad) loop lods loop stos loop scas loop lods loop scas loop mov subl mov subl lods loop scas loop lods loop stos loop stos loop lods loop stos loop mov orb scas add orb loop scas loop scas loop mov subb stos loop stos loop lods loop lods loop lods loop scas loop scas loop mov subb (bad) loop mov orb mov subb lods loop scas loop lods loop stos loop (bad) loop scas loop stos loop mov subb loop scas loop stos loop lods loop (bad) loop scas add subb loop lods loop stos loop lods loop mov subl loop (bad) loop scas loop stos loop mov orb lods loop stos loop lods loop mov subl mov orb scas loop lods loop stos loop mov subb stos loop (bad) loop mov subb lods loop lods loop scas add subb loop (bad) loop scas loop scas loop stos loop mov subl scas loop (bad) loop stos loop (bad) loop (bad) loop lods loop stos loop stos loop scas loop stos loop lods loop mov subb lods loop scas loop scas loop (bad) loop scas loop scas loop stos loop mov orb loop mov orb lods loop scas add subl (bad) loop stos loop (bad) loop lods loop scas loop lods loop stos loop stos loop lods loop scas loop mov subl (bad) loop lods loop (bad) loop stos loop lods loop mov subb lods loop scas loop lods loop scas loop stos loop scas loop stos loop mov subl scas loop mov orb scas add orb stos loop lods loop (bad) loop stos loop scas loop lods loop stos loop scas loop stos loop stos loop mov subb lods loop stos loop lods loop scas loop stos loop (bad) loop scas loop lods loop stos loop scas loop scas loop stos loop mov orb scas loop mov subb scas loop mov subb lods loop (bad) loop scas add subl lods loop scas loop stos loop lods loop mov subl mov subb mov subl lods loop scas loop lods loop (bad) loop mov subl (bad) loop mov subb lods loop (bad) loop lods loop stos loop stos loop stos loop mov subl scas add subl stos loop scas loop scas loop mov orb scas loop scas loop scas loop mov subb scas loop stos loop scas loop (bad) loop stos loop lods loop stos loop stos loop stos loop mov subb mov subl (bad) loop mov subl mov orb scas add subb scas loop stos loop scas loop scas loop lods loop (bad) loop stos loop mov subl lods loop scas loop stos loop (bad) loop scas loop stos loop stos loop mov subb lods loop scas loop stos loop lods loop mov orb (bad) loop mov subb scas loop lods loop (bad) loop mov orb scas add subl scas loop (bad) loop (bad) loop scas loop scas loop mov subb loop scas loop lods loop lods loop stos loop (bad) loop (bad) loop mov subb loop stos loop lods loop mov orb scas loop lods loop scas loop (bad) loop lods loop (bad) loop mov subl stos loop lods loop lods loop scas add subl stos loop stos loop lods loop scas loop scas loop stos loop lods loop lods loop mov subb stos loop mov subl stos loop lods loop lods loop stos loop stos loop stos loop stos loop lods loop lods loop scas loop scas loop scas loop lods loop scas loop stos loop scas loop lods loop scas loop mov subb scas add subl stos loop stos loop scas loop (bad) loop scas loop stos loop lods loop scas loop stos loop lods loop lods loop mov subl stos loop scas loop (bad) loop mov orb mov subb lods loop (bad) loop lods loop stos loop stos loop stos loop lods loop (bad) loop scas loop stos loop stos loop lods loop stos loop scas add orb loop (bad) loop mov subb stos loop scas loop lods loop lods loop mov subl (bad) loop (bad) loop scas loop (bad) loop stos loop (bad) loop scas loop stos loop lods loop lods loop stos loop stos loop mov subl scas loop lods loop lods loop mov subl lods loop scas loop scas add subb scas loop mov subl (bad) loop mov subb lods loop lods loop lods loop (bad) loop mov subb mov subl loop lods loop scas loop stos loop lods loop mov subb loop mov orb lods loop lods loop (bad) loop stos loop lods loop stos loop scas add subb loop stos loop stos loop (bad) loop stos loop scas loop (bad) loop scas loop lods loop lods loop stos loop lods loop stos loop scas loop (bad) loop stos loop mov orb loop stos loop stos loop scas loop lods loop scas loop lods loop lods loop (bad) loop stos loop mov orb stos loop lods loop scas loop scas loop stos loop scas loop scas add subl lods loop stos loop scas loop lods loop scas loop stos loop lods loop stos loop lods loop (bad) loop lods loop mov subl mov subl stos loop scas loop stos loop (bad) loop mov orb loop stos loop lods loop (bad) loop lods loop scas loop lods loop lods loop stos loop stos loop scas loop scas add subb mov subl mov subl loop lods loop lods loop stos loop scas loop mov orb lods loop (bad) loop stos loop scas loop stos loop scas loop stos loop stos loop stos loop lods loop scas loop (bad) loop lods loop stos loop scas loop scas loop stos loop lods loop mov orb (bad) loop scas add subl lods loop mov subb mov subb (bad) loop stos loop lods loop lods loop stos loop mov subl lods loop scas loop lods loop stos loop lods loop (bad) loop stos loop (bad) loop mov orb stos loop lods loop scas loop stos loop scas loop mov subb mov subb subl (bad) loop stos loop lods loop (bad) loop lods loop stos loop (bad) loop stos loop lods loop lods loop mov subb loop lods loop lods loop scas loop lods loop mov subb stos loop (bad) loop scas loop mov subb loop scas loop stos loop lods loop lods loop (bad) loop lods loop stos loop stos loop scas loop scas add subl stos loop lods loop (bad) loop lods loop scas loop stos loop stos loop stos loop lods loop lods loop scas loop (bad) loop lods loop mov subb lods loop lods loop stos loop (bad) loop stos loop scas loop stos loop stos loop scas loop lods loop stos loop mov orb stos loop scas loop lods loop mov subl scas add subb lods loop mov subl mov subl mov subb stos loop lods loop lods loop scas loop stos loop scas loop (bad) loop stos loop scas loop scas loop mov subb mov subl mov orb scas loop scas loop mov subl scas add orb (bad) loop lods loop (bad) loop scas loop scas loop scas loop stos loop scas loop mov subb scas loop (bad) loop stos loop scas loop stos loop mov subl mov subb mov orb mov subb scas loop lods loop scas loop scas loop lods loop mov subb scas loop scas add orb stos loop stos loop scas loop (bad) loop stos loop mov orb loop scas loop lods loop mov orb loop stos loop stos loop stos loop mov subb lods loop mov subl (bad) loop stos loop (bad) loop mov subb loop stos loop lods loop scas loop mov subl subl mov subb scas loop scas loop scas loop mov subl loop scas loop lods loop stos loop lods loop scas loop mov subl lods loop mov orb mov subl mov orb stos loop lods loop (bad) loop scas loop scas loop scas add subl scas loop mov orb (bad) loop lods loop scas loop scas loop lods loop lods loop (bad) loop lods loop scas loop lods loop stos loop lods loop (bad) loop stos loop mov orb mov subb loop mov orb mov subb stos loop scas loop stos loop mov orb scas add orb loop mov orb mov subl loop scas loop stos loop lods loop stos loop lods loop stos loop scas loop lods loop stos loop scas loop stos loop stos loop mov orb stos loop stos loop mov subl stos loop mov orb loop scas loop mov subl orb stos loop mov subb lods loop mov orb stos loop lods loop scas loop mov orb lods loop lods loop stos loop stos loop (bad) loop (bad) loop stos loop scas loop scas loop scas loop lods loop mov subl scas loop lods loop mov orb lods loop scas loop stos loop scas add subb stos loop scas loop lods loop mov subl lods loop mov subb loop stos loop lods loop scas loop scas loop scas loop lods loop mov subb loop scas loop scas loop lods loop stos loop (bad) loop mov subb mov subb stos loop scas loop (bad) loop mov orb orb loop (bad) loop scas loop (bad) loop lods loop mov subl (bad) loop mov subl (bad) loop mov subb mov subb (bad) loop mov subl lods loop scas loop lods loop stos loop mov subl mov subl add subl stos loop stos loop stos loop scas loop (bad) loop (bad) loop lods loop mov subb mov orb lods loop mov subb lods loop stos loop lods loop scas loop scas loop scas loop mov subl scas loop scas loop mov subl scas loop (bad) loop lods loop stos loop scas add subl stos loop lods loop stos loop stos loop (bad) loop lods loop lods loop stos loop stos loop stos loop lods loop stos loop mov subb loop stos loop scas loop stos loop lods loop stos loop stos loop stos loop lods loop lods loop (bad) loop lods loop stos loop lods loop (bad) loop stos loop mov orb mov subl (bad) loop (bad) loop mov orb mov subl mov orb lods loop scas loop stos loop (bad) loop lods loop stos loop scas loop mov subl lods loop stos loop stos loop lods loop (bad) loop stos loop stos loop scas loop stos loop scas loop mov orb scas loop lods loop (bad) loop stos loop scas add orb scas loop lods loop stos loop lods loop stos loop scas loop lods loop lods loop mov subl (bad) loop stos loop stos loop mov subb mov subb stos loop scas loop lods loop (bad) loop lods loop stos loop scas loop scas loop mov subb scas loop mov subl stos loop scas add subb scas loop (bad) loop lods loop (bad) loop scas loop lods loop stos loop mov subl mov orb loop lods loop mov orb scas loop lods loop mov orb stos loop lods loop mov subb mov subb mov subl scas loop mov subb subl lods loop (bad) loop lods loop lods loop scas loop stos loop stos loop scas loop stos loop lods loop lods loop scas loop scas loop stos loop (bad) loop mov orb (bad) loop stos loop mov subl mov subl stos loop scas loop lods loop scas loop lods loop stos loop stos loop scas loop scas add subb lods loop lods loop stos loop stos loop stos loop (bad) loop scas loop lods loop stos loop stos loop (bad) loop mov orb loop lods loop stos loop stos loop mov subl lods loop scas loop scas loop scas loop scas loop stos loop scas loop lods loop lods loop mov subb loop lods loop (bad) loop scas loop scas add push arpl orb loop lods loop lods loop lods loop stos loop (bad) loop lods loop mov subb mov orb loop lods loop (bad) loop stos loop scas loop (bad) loop stos loop stos loop mov subl stos loop lods loop stos loop mov orb mov subl stos loop lods loop mov subb subb scas loop lods loop mov subl scas loop stos loop (bad) loop lods loop stos loop stos loop scas loop lods loop mov orb scas loop stos loop (bad) loop stos loop lods loop mov subb stos loop scas loop lods loop stos loop lods loop lods loop scas loop (bad) loop mov subl scas add orb (bad) loop (bad) loop stos loop lods loop stos loop lods loop stos loop stos loop stos loop mov subl loop stos loop stos loop scas loop scas loop lods loop lods loop stos loop lods loop stos loop mov subl mov orb scas loop mov orb (bad) loop lods loop stos loop lods loop scas add subl lods loop lods loop (bad) loop lods loop mov orb scas loop mov subb loop lods loop mov subl (bad) loop scas loop mov subb scas loop (bad) loop stos loop mov subl (bad) loop stos loop stos loop stos loop mov subb lods loop scas add subl loop lods loop mov subl (bad) loop mov subb loop lods loop stos loop stos loop stos loop (bad) loop lods loop scas loop lods loop stos loop stos loop lods loop lods loop lods loop mov orb (bad) loop mov subl (bad) loop stos loop scas loop stos loop stos loop scas add subl lods loop stos loop (bad) loop lods loop scas loop scas loop stos loop mov orb scas loop mov orb mov subb lods loop stos loop (bad) loop (bad) loop mov subl loop lods loop mov orb stos loop mov subb mov subb scas add subl stos loop (bad) loop stos loop (bad) loop stos loop scas loop lods loop stos loop stos loop stos loop stos loop lods loop scas loop scas loop lods loop mov subb lods loop lods loop lods loop lods loop stos loop stos loop stos loop lods loop (bad) loop lods loop stos loop lods loop scas loop stos loop scas loop stos loop lods loop scas loop scas add subl loop lods loop stos loop lods loop lods loop (bad) loop lods loop stos loop lods loop stos loop mov subb (bad) loop scas loop scas loop scas loop lods loop stos loop lods loop (bad) loop lods loop stos loop mov orb stos loop lods loop lods loop stos loop stos loop scas loop lods loop stos loop scas loop scas loop lods loop scas add subb (bad) loop stos loop scas loop stos loop stos loop lods loop lods loop (bad) loop mov subb loop stos loop scas loop mov orb scas loop scas loop stos loop mov subb stos loop scas loop lods loop lods loop mov subb stos loop mov subl mov subl subb scas loop stos loop lods loop mov subl lods loop mov orb loop mov subb (bad) loop lods loop stos loop lods loop scas loop stos loop (bad) loop lods loop (bad) loop scas loop mov orb stos loop stos loop (bad) loop mov subl lods loop stos loop scas loop scas add orb stos loop stos loop stos loop lods loop mov subb lods loop stos loop scas loop lods loop mov subb scas loop mov subb stos loop stos loop scas loop scas loop lods loop (bad) loop lods loop stos loop scas loop stos loop mov orb stos loop stos loop lods loop (bad) loop lods loop mov orb subl stos loop lods loop mov orb loop stos loop mov subl stos loop lods loop lods loop scas loop stos loop scas loop (bad) loop lods loop stos loop scas loop stos loop (bad) loop scas loop mov orb scas loop scas loop mov subl loop stos loop stos loop stos loop scas add orb lods loop scas loop scas loop mov subl loop lods loop (bad) loop mov subb (bad) loop (bad) loop stos loop (bad) loop scas loop scas loop scas loop stos loop mov subl stos loop lods loop stos loop mov subl loop mov subl lods loop scas add subl lods loop scas loop stos loop stos loop lods loop lods loop scas loop mov subl mov orb mov subl loop (bad) loop mov subl lods loop lods loop stos loop scas loop scas loop lods loop stos loop lods loop lods loop lods loop stos loop lods loop stos loop scas add subl stos loop lods loop (bad) loop stos loop lods loop stos loop stos loop scas loop lods loop lods loop scas loop lods loop mov orb stos loop (bad) loop stos loop mov orb loop lods loop stos loop lods loop stos loop lods loop stos loop lods loop scas loop lods loop scas loop lods loop scas loop scas loop lods loop stos loop scas add subl stos loop stos loop scas loop scas loop mov subb scas loop (bad) loop scas loop stos loop lods loop (bad) loop stos loop scas loop scas loop mov subl scas loop scas loop lods loop (bad) loop mov subb loop stos loop mov orb lods loop lods loop stos loop stos loop stos loop scas add and aaa js sub pop pop jbe dec fs and sub outsl add orb (bad) loop (bad) loop scas loop mov subl loop lods loop stos loop scas loop (bad) loop stos loop stos loop stos loop scas loop stos loop stos loop (bad) loop lods loop stos loop stos loop stos loop lods loop lods loop stos loop stos loop stos loop lods loop lods loop scas loop lods loop stos loop stos loop lods loop scas loop mov orb je outsl outsb add subb scas loop scas loop scas loop mov subl lods loop stos loop stos loop mov subl (bad) loop stos loop mov subl lods loop stos loop stos loop scas loop mov subl lods loop scas loop stos loop mov orb mov subl add orb (bad) loop (bad) loop lods loop stos loop scas loop mov orb lods loop stos loop lods loop lods loop mov orb scas loop stos loop stos loop lods loop mov subb stos loop scas loop (bad) loop scas loop stos loop (bad) loop lods loop stos loop mov subb loop lods loop lods loop scas loop mov subb orb (bad) loop mov subl stos loop scas loop stos loop scas loop scas loop stos loop scas loop stos loop mov orb scas loop mov subl loop stos loop lods loop mov subb scas loop mov subl lods loop lods loop lods loop scas loop (bad) loop scas add subl scas loop stos loop mov subb lods loop (bad) loop mov orb lods loop stos loop lods loop scas loop lods loop lods loop lods loop (bad) loop lods loop stos loop mov subl scas loop scas loop lods loop mov subl lods loop mov subl scas add subl stos loop stos loop lods loop (bad) loop lods loop lods loop mov subl mov subl stos loop lods loop stos loop scas loop scas loop scas loop lods loop (bad) loop (bad) loop mov orb (bad) loop (bad) loop scas loop mov subl stos loop scas loop scas loop lods loop scas add subl stos loop stos loop scas loop stos loop stos loop (bad) loop scas loop scas loop stos loop mov orb (bad) loop mov subb mov subl scas loop stos loop mov subl scas loop stos loop (bad) loop mov subl loop lods loop lods loop stos loop scas add orb scas loop lods loop mov subl stos loop mov orb loop lods loop mov orb (bad) loop scas loop lods loop scas loop (bad) loop (bad) loop mov subb (bad) loop stos loop lods loop stos loop lods loop mov subb stos loop lods loop stos loop mov subl imul je push imul jae arpl inc outsl outsb jae insb gs jo insb imul inc popa jae add arpl jae data16 push imul jae arpl inc jo insb imul push gs imul scas loop scas loop scas loop stos loop lods loop mov subl mov subb stos loop mov subb stos loop scas loop lods loop lods loop (bad) loop (bad) loop scas loop stos loop lods loop mov orb stos loop (bad) loop mov subl loop lods loop lods loop mov subl insl jo je jb dec imul je push imul jae arpl inc gs arpl add subl loop lods loop stos loop scas loop (bad) loop lods loop mov orb mov subl (bad) loop stos loop lods loop mov subb mov orb stos loop stos loop lods loop mov subl mov subl loop scas loop lods loop scas loop scas add subl scas loop lods loop mov subl loop lods loop mov subb mov orb loop lods loop mov subl stos loop (bad) loop scas loop scas loop lods loop stos loop lods loop scas loop (bad) loop scas loop stos loop (bad) loop stos loop mov subl scas add subb stos loop lods loop lods loop stos loop lods loop stos loop lods loop scas loop scas loop stos loop mov orb lods loop scas loop stos loop mov subb stos loop stos loop scas loop mov orb mov subl stos loop lods loop (bad) loop mov subb lods loop stos loop stos loop scas add subb stos loop mov subb stos loop stos loop lods loop lods loop stos loop lods loop (bad) loop mov orb loop scas loop stos loop stos loop stos loop lods loop lods loop stos loop mov subl stos loop stos loop mov orb lods loop stos loop mov subl (bad) loop scas add gs loop mov subl (bad) loop (bad) loop lods loop stos loop lods loop stos loop (bad) loop mov orb loop mov orb loop lods loop stos loop lods loop lods loop stos loop (bad) loop stos loop scas loop stos loop stos loop mov orb stos loop mov orb stos loop lods loop lods loop lods loop scas add subl loop lods loop (bad) loop stos loop mov subl loop mov orb loop stos loop mov subl mov orb mov subl (bad) loop scas loop stos loop mov subb lods loop scas loop (bad) loop scas loop lods loop stos loop scas add subb lods loop scas loop stos loop (bad) loop lods loop (bad) loop mov subb lods loop lods loop lods loop lods loop mov subb scas loop mov subb scas loop (bad) loop mov orb lods loop scas loop stos loop (bad) loop stos loop stos loop mov subl mov orb subl loop lods loop lods loop mov subb mov orb loop scas loop (bad) loop scas loop lods loop scas loop scas loop lods loop mov subl lods loop scas loop lods loop mov orb lods loop lods loop mov subl (bad) loop lods loop (bad) loop stos loop scas add subb loop mov orb scas loop scas loop lods loop (bad) loop scas loop mov orb lods loop lods loop stos loop scas loop stos loop scas loop lods loop scas loop stos loop mov subb mov subl stos loop stos loop scas loop mov orb stos loop stos loop scas loop (bad) loop scas add subb scas loop mov subb scas loop stos loop stos loop lods loop stos loop lods loop stos loop lods loop lods loop stos loop lods loop lods loop lods loop mov subl scas loop stos loop lods loop scas loop (bad) loop scas loop scas loop stos loop stos loop stos loop scas loop lods loop mov subb lods loop lods loop scas add subb stos loop lods loop mov subl lods loop (bad) loop mov orb mov subl mov subl scas loop (bad) loop scas loop mov subl scas loop (bad) loop lods loop (bad) loop lods loop stos loop mov subl mov subl orb lods loop (bad) loop lods loop (bad) loop lods loop (bad) loop (bad) loop lods loop stos loop lods loop lods loop mov subb (bad) loop lods loop scas loop stos loop mov subl mov orb scas loop lods loop (bad) loop lods loop (bad) loop lods loop lods loop scas loop lods loop lods loop lods loop stos loop scas add subl mov subl (bad) loop lods loop scas loop stos loop scas loop mov subl lods loop (bad) loop lods loop (bad) loop scas loop scas loop mov subl (bad) loop mov orb loop lods loop stos loop stos loop lods loop scas loop lods loop lods loop stos loop lods loop scas add orb loop scas loop (bad) loop lods loop mov subb lods loop scas loop mov subl mov subl lods loop mov subl scas loop lods loop lods loop scas loop scas loop lods loop lods loop lods loop mov orb stos loop lods loop lods loop (bad) loop stos loop scas add subb loop lods loop scas loop mov subl stos loop lods loop lods loop stos loop stos loop mov subb loop mov subl lods loop (bad) loop lods loop mov orb (bad) loop stos loop stos loop lods loop scas loop stos loop scas loop lods loop mov subl scas add subb scas loop stos loop scas loop lods loop lods loop lods loop scas loop (bad) loop mov subb stos loop (bad) loop mov subb lods loop (bad) loop (bad) loop (bad) loop lods loop (bad) loop mov subb stos loop mov orb lods loop scas loop lods loop stos loop (bad) loop stos loop scas loop lods loop mov subb orb mov orb lods loop scas loop stos loop lods loop mov orb mov subl mov subl stos loop mov subb mov subl stos loop scas loop lods loop lods loop stos loop mov subl mov subb subb loop (bad) loop mov subl loop scas loop stos loop mov orb scas loop lods loop lods loop stos loop lods loop stos loop scas loop lods loop scas loop scas loop scas loop mov subb scas loop stos loop (bad) loop lods loop (bad) loop lods loop mov subl scas add jae je bound push jns je insl cs outsl insb insb arpl outsb jae loop lods loop stos loop stos loop (bad) loop stos loop lods loop mov orb lods loop lods loop (bad) loop lods loop mov subl loop lods loop lods loop lods loop stos loop lods loop lods loop stos loop mov orb stos loop stos loop mov subb scas loop stos loop lods loop scas loop stos loop stos loop stos loop scas add subb stos loop mov subl lods loop stos loop lods loop stos loop stos loop lods loop scas loop lods loop (bad) loop stos loop mov subb loop mov subl lods loop stos loop stos loop mov subl mov subb (bad) loop stos loop stos loop mov subl subl lods loop stos loop (bad) loop scas loop (bad) loop mov orb scas loop stos loop lods loop lods loop stos loop scas loop lods loop stos loop stos loop (bad) loop stos loop lods loop mov orb lods loop (bad) loop scas loop stos loop mov orb loop stos loop mov subl add add orb loop scas loop mov orb lods loop mov subl loop mov subl lods loop stos loop scas loop stos loop scas loop scas loop scas loop mov orb mov subb scas loop stos loop lods loop mov subl loop scas loop scas add subl stos loop lods loop lods loop (bad) loop lods loop lods loop lods loop stos loop (bad) loop stos loop stos loop scas loop scas loop stos loop scas loop stos loop stos loop stos loop stos loop (bad) loop stos loop lods loop stos loop scas loop mov subl lods loop scas loop stos loop stos loop (bad) loop scas loop scas loop (bad) loop mov subb insb jae loop lods loop mov subl stos loop stos loop lods loop mov subb mov subb mov subb scas loop scas loop mov orb lods loop lods loop mov subl stos loop (bad) loop mov subb scas loop mov subl stos loop stos loop scas add je popa jae inc outsl fs subl mov orb mov subb stos loop stos loop scas loop (bad) loop scas loop mov orb loop (bad) loop (bad) loop scas loop stos loop stos loop lods loop scas loop mov subb (bad) loop (bad) loop mov subl mov subl scas loop stos loop scas add gs subb loop scas loop mov orb loop mov subl lods loop scas loop scas loop (bad) loop lods loop lods loop scas loop stos loop lods loop scas loop stos loop scas loop lods loop lods loop (bad) loop lods loop scas loop (bad) loop mov subb stos loop lods loop stos loop (bad) loop (bad) loop (bad) loop (bad) loop scas add je imul loop lods loop lods loop mov subb stos loop scas loop stos loop lods loop stos loop lods loop stos loop stos loop mov subl (bad) loop mov subb lods loop (bad) loop mov subl scas loop (bad) loop stos loop lods loop lods loop mov subl scas loop stos loop (bad) loop scas add subl lods loop lods loop lods loop (bad) loop mov orb mov orb lods loop mov subb stos loop (bad) loop stos loop stos loop scas loop mov orb loop mov subl (bad) loop (bad) loop scas loop lods loop stos loop (bad) loop mov orb stos loop scas add orb stos loop (bad) loop lods loop stos loop lods loop lods loop lods loop stos loop lods loop mov subl lods loop scas loop stos loop mov subl scas loop mov subb mov orb loop (bad) loop (bad) loop lods loop scas loop mov orb lods loop scas loop stos loop scas add subl stos loop mov subl mov orb scas loop lods loop lods loop scas loop stos loop stos loop lods loop stos loop lods loop lods loop (bad) loop scas loop lods loop stos loop mov orb stos loop scas loop mov orb scas loop mov subb stos loop stos loop stos loop scas add orb stos loop stos loop (bad) loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop lods loop mov subl scas loop mov orb lods loop (bad) loop mov subl mov subl (bad) loop mov subb stos loop stos loop lods loop (bad) loop scas loop lods loop scas add subl lods loop lods loop stos loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop lods loop mov orb mov subb loop lods loop scas loop lods loop lods loop scas loop (bad) loop mov subl lods loop lods loop mov orb scas loop stos loop (bad) loop lods loop scas loop scas add subb mov orb loop lods loop scas loop stos loop lods loop stos loop mov subl mov subl (bad) loop mov subl scas loop stos loop (bad) loop lods loop lods loop lods loop stos loop scas loop stos loop mov orb stos loop scas loop lods loop stos loop scas add orb lods loop stos loop mov subb scas loop lods loop scas loop mov subl scas loop stos loop scas loop scas loop scas loop mov subl stos loop mov subl stos loop scas loop lods loop stos loop stos loop mov subb loop stos loop mov subl scas loop scas loop scas loop stos loop stos loop lods loop lods loop (bad) loop scas loop lods loop lods loop (bad) loop scas loop (bad) loop scas loop lods loop scas loop scas loop lods loop lods loop stos loop mov subb loop stos loop stos loop mov subl mov subb stos loop stos loop stos loop (bad) loop scas loop lods loop scas add orb (bad) loop scas loop scas loop lods loop (bad) loop lods loop stos loop (bad) loop mov orb stos loop mov subl mov orb stos loop scas loop mov subb lods loop stos loop stos loop lods loop scas loop scas loop stos loop lods loop lods loop lods loop scas loop stos loop lods loop (bad) loop scas add subb loop (bad) loop lods loop scas loop lods loop lods loop lods loop stos loop lods loop scas loop mov subl loop lods loop mov orb stos loop mov orb mov subl (bad) loop scas loop stos loop lods loop scas loop mov subb lods loop stos loop scas loop scas add subb (bad) loop stos loop stos loop lods loop lods loop lods loop scas loop stos loop mov orb loop stos loop scas loop stos loop stos loop stos loop stos loop scas loop mov orb stos loop mov orb loop stos loop stos loop lods loop scas loop scas loop scas loop lods loop stos loop stos loop lods loop mov subb inc xor xor inc cmp inc xor aaa xor inc ss cmp inc aaa inc cmp xor xor add subb stos loop scas loop mov subl scas loop stos loop (bad) loop lods loop lods loop mov orb stos loop scas loop stos loop scas loop scas loop lods loop mov subl stos loop stos loop scas loop lods loop scas loop mov orb loop lods loop mov subb scas loop scas add insb jne push jns add outsb data16 gs jns je jb bound add je imul imul add jae insl bound jb fs popa jb inc je jb bound add jae gs cs gs arpl outsb add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs je je jb bound add addr16 jb insl gs jb inc je jb bound add jae gs cs jne je insl gs gs imul inc jne fs je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul push inc outsl insl jo imul jb bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae push jne je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound gs jb jo imul imul jae gs bound imul imul arpl jae gs push push gs jns je jb bound add jne addr16 jb ja popa bound je jb bound add jne addr16 jb ja popa bound je je add insl jo insb gs outsb gs je fs je jb bound add inc push push inc je jb bound add jne addr16 je jo push push imul je outsb fs jb dec outsl fs gs je jb bound add arpl jae data16 push imul jae arpl inc outsl insl jo insb gs gs imul outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add jne addr16 imul jb bound add fs outsl fs gs popa insl gs je jb bound add insb jo gs outsl jb inc je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs cs gs outsb add inc jb jne inc outsl insb insb arpl outsb inc je jb bound add gs fs je je arpl je imul outsl insl push imul je jb bound add aaa inc jp daa push dec pop pop xor pop and es dec dec and jb jae jne arpl add and aaa js sub pop pop jbe pop dec fs and sub outsl jb,pn jae jne arpl add push popa imul dec inc pushw push gs jne arpl add je outsl fs outsb outsw add gs add jae gs cs push imul imul je inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jb outsb add je gs outsl add outsb arpl add je outsl fs popa jae add jbe imul popa imul popa jb insl gs jb jp fs push push je jb add je dec jae popa arpl jb jne add popa jb add je inc jne jb outsb je push add gs inc bound addr16 addr16 dec jae je popa arpl add dec outsl addr16 pop dec jae insb imul insb imul add outsb add outsb je popa outsb fs gs popa fs dec outsl popa add imul insb add outsb je outsl insb add insl outsl jbe pop dec outsl jne gs outsl jbe jb popa fs dec outsl jne gs outsl jbe jb jb insl outsl jbe pop dec outsl jne gs gs jbe add insl outsl jbe pop inc insb imul pop dec outsl jne gs gs jbe add fs inc insb imul outsl jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add outsl push arpl je add fs jo add jae outsb fs popa jns jne add jae gs cs jb ja outsb add outsb je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je inc outsl insb outsl jb addr16 push gs je inc outsl jb inc outsl insb outsl jb push outsl imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add je push gs inc insb imul je outsb je insb imul add jb outsl jb add je dec popa outsb add jb outsl jb jae je inc jne jae jb inc gs bound arpl insl popa add je dec insl popa add je push popa bound outsl jo jae je push imul add arpl gs outsl js imul add je push imul addr16 push push jae je inc popa arpl outsl insb outsl jb addr16 dec insb imul insl inc jb bound addr16 inc insb popa arpl push gs inc outsl js popa jae add je inc outsl jb gs je insb add jb gs je insb add je inc jne outsl push arpl gs popa jae push imul pop inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add add je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add je dec popa js insl imul jae je dec imul inc outsl js jae je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add jae insl gs popa jns jne add dec popa je add outsb outsl insl imul add outsb jbe jb imul add je add jne add ja popa je inc imul dec popa je inc popa insb insb add je xor inc outsl outsl insb gs outsb add outsb je insl gs gs jo jb add je bound arpl insb jne add outsb jbe jb imul popa outsb addr16 jns add gs gs push outsl inc outsl jne insb add je jb arpl outsb add addr16 outsl js dec jae inc outsl js gs insb je dec jae inc outsl js je insb add imul gs add gs je jb add insl jo jb push je imul pop dec jb outsb add je inc outsb popa bound add outsb imul outsl insl jo jb dec bound arpl jne insb add je inc arpl gs outsl jb add data16 jae add je dec imul jo jb dec bound arpl je jno popa insb add fs bound arpl outsl inc outsl outsl insb gs outsb add gs gs push imul outsl outsb arpl outsb popa je dec bound arpl jae gs bound dec outsl popa add jb jns imul pop dec je insl add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl addr16 inc jae gs bound inc jns add imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add outsl ja push jne je popa arpl push arpl gs push je jb jne push popa je add je outsl outsb inc popa jae add je inc insb popa je je insb add popa je je insb add je push push push popa jae bound add outsl jae add je dec popa jbe add addr16 outsb jbe arpl imul jo imul pop dec jae imul add outsb je imul push je insb jae inc gs gs jne arpl je imul popa insb imul imul jo imul imul inc jb popa je dec outsb jae popa outsb arpl push gs jb push arpl jb jb inc js gs imul pop dec outsb outsb gs js gs imul pop dec gs popa add insl outsl jbe add insl jo outsb outsb je inc jb jne outsb je js gs imul add push add sub je inc add jbe imul outsb add add je push add jb imul insb add add xor add pop add dec add inc add add push add dec add dec add add inc add or jb imul add bound add add adc push add add add add add sub add arpl je jne jb add outsl add xor add insl add add add push add arpl je jne jb add outsl add xor add push add arpl je jne jb add outsl add xor add insl add add add push add arpl je jne jb add outsl add xor add push add arpl je jne jb add outsl add xor add insl add add add push add arpl je jne jb add outsl add xor add push add arpl je jne jb add outsl add xor add insl add add add push add arpl je jne jb add outsl add xor add push add arpl je jne jb add outsl add xor add popa add add pop push add arpl je jne jb add outsl add xor add arpl je jne jb add outsl add add add insl add add add push add arpl je jne jb add outsl add add and imul jne jb add outsl add aaa add add insl add add add push add arpl je jne jb add outsl add aaa add or bound add add or bound add add sbb dec add push add add dec add inc add and cmp add bound add add or bound add add sub imul outsl add outsl add je and push add outsb add and push add jb imul dec add bound add add and imul jne jb add outsl add cmp add insl add add add push add arpl je jne jb add outsl add cmp add push add arpl je jne jb add outsl add cmp add insl add add add push add arpl je jne jb add outsl add cmp add arpl je jne jb add outsl add xor xor add insl add add add push add arpl je jne jb add outsl add xor xor add bound add add or bound add add or bound add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add dec add bound add add add bound add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add dec add bound add add add bound add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add dec add bound add add add bound add add add cmovl popa add add add add cmovl popa add add add add cmovl popa add add add add sbb and and push add add add add add add add sub add bound add add add sbb and and push add add add add add add add sub add bound add add add sbb and and push add add add add add sub add bound add add add pop xor add add add jo add add add add add add add sub add bound add add add pop xor add add jo add add add add add add add sub add bound add add add add add add add jo add add xor xor xor xor sub sub add bound add add add add add add jo add add add add add add add sub add bound add add add and add add add add jo add add add add add add add add sub add bound add add add and add add add add jo add add add add add add add add sub add bound add add add and add add add add add jo add add add xor xor xor xor sub sub add bound add add add and add add add jo add add add add add add add sub add bound add add add and add add add jo add add add add add add add sub add bound add add add and add add add jo add add add add add add add sub add bound add add add daa xor xor add add add jo add add add add add add add add add add sub add js je inc add js xor add add inc add insl add add dec add insb add add outsb add jb add add popa add add adc outsl add add imul je add dec add jbe add or add add add push add add add push add insb add add or outsb add xor add inc add jae xor add inc add jae xor add inc add jae xor add outsl add outsb add or push add add add add add inc add outsb add jb popa add add add add outsb add and je outsl add add outsl add and add dec add jbe add add je add add add add add add add sub add add add add add add add sub add add add add add sub add add add add add add add add sub add add add add add add add add sub add add add xor xor xor xor sub sub add add add add add add add add sub add add add add add add add add add sub add add add add add add add add add sub add add add add xor xor xor xor sub sub add add add add add add add add sub add add add add add add add add sub add add add add add add add add sub add jb jns and push add jb jb jns sub and pop add jne and dec add jbe add add add add add jbe add add add add outsl add jb and push add je popa add add insl add jne outsb add add jae and xor add add jb jns and push add jb jb jns sub and pop add jne and dec add jbe add add add add add jbe add add add add outsl add jb and push add je popa add add insl add jne outsb add add jae and xor xor xor xor xor add add jb jns and push add jb jb jns sub and pop add jne and dec add jbe add add add add add jbe add add add add outsl add jb and push add je popa add add insl add jne outsb add add jae and xor xor xor xor xor xor add push add outsb add add outsb add inc inc add and pop add jne and push add popa add add and push add outsb add add add add jae add add add add add or add add add inc add outsb add add je add adc popa add popa add je add jae add dec add popa add or jb insb add outsb add adc jb insb add outsb add add arpl jae add imul add push inc add and pop add jne and push add popa add add and push add outsb add add add add jae add add push add and inc add add jb imul add add sbb outsl add add add and inc add imul add or push add or imul push add imul je add push add add imul and add add and insl add and outsb add insl add and imul add and and add or insb add jns add push add imul add dec add add add outsb add and dec add add add cmp add push add add add jae and je push add imul je and popa add jae ja add and and add dec add add insl add add adc add add jb add add aas dec add and and add add add outsb add and jns outsl add and popa add add add outsl add add add add imul add add or imul add je jb jns jo outsl add outsb add or jbe outsl add add pop inc add jb add add data16 pop push imul add add add push add data16 push data16 imul inc add inc add dec add data16 add add and pop add jne and push add popa add add and push add outsb add add add add jae add add jne add add arpl add add outsl add add add add sbb jne add add arpl add add outsl add add or jo add add add outsl add imul jb cmp add jb outsl add outsl add je add add add dec add inc add add add add add add add add outsl add jb arpl add add add add popa add add add add cmp push add jb jae imul and push add arpl jne jb imul and dec add data16 cmp add add add inc add je je outsl add xor add add push add outsl add add add sbb jne add add arpl add add outsl add insb add cmp imul outsl add insl add pop add add jne jb jae imul inc add jb insl add jb add je add xor outsb add outsl add insl add pop add add dec add outsb add jb inc add arpl add je imul add add outsl add add je jns and arpl popa add and outsl add insb add and bound add add add add add add outsl add add outsb add add add je push jg dec test sub je or xor mov and add add add add adc outsb data16 gs js jbe xor xor add add add add sbb push adc add adc add add add add adc adc add adc adc sbb sbb and add sbb or add sbb add sbb sub adc add add adc sbb push sbb push sbb push add or push or add add and adc and jg aad cmp push adc sbb push adc adc push adc xor push adc and push adc and add adc add add adc add adc add add and add and or adc add add adc or adc add add and add and push adc add adc pop adc add add add xor add adc add add sbb and or add cmp and push add add or add adc or adc add or add adc push adc add add add add add push adc add add push add add add cs inc push inc jb insl gs jb sub gs imul xor add inc jb insl gs jb inc imul popa insl adc dec inc push and popa insl gs jb and add and cmp inc xor inc aaa xor sub sub xor xor inc xor add add add popa or add add add add add add push add push jb jo outsl outsb inc js gs imul ja add add or add add or add dec popa bound xor add and add addb add add adc add push imul outsl js add adc add push imul outsl js add adc add push imul outsl js add adc add push imul outsl js add adc add push imul outsl js add adc add push imul outsl js add adc add push imul outsl js add or add dec popa bound xor add add push dec popa bound xor add add push dec popa bound xor add add push dec popa bound xor add dec popa bound add adc add push imul outsl js add adc add push imul outsl js add adc add imul outsl js xor add add push dec popa bound aaa add or add dec popa bound cmp add add push dec popa bound cmp add add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add add dec popa bound xor add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add add dec popa bound xor add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add add dec popa bound xor add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add or add dec popa bound xor add pop dec popa bound xor add pop dec popa bound xor add or je outsl js add or add inc jne je outsb xor add push sbb add dec jns gs jo popa je or xor xor xor xor add and add sbbb add add adc add dec jns inc outsl insl jo je jb add add push dec jns inc jo insb imul add or add dec jns push jae jb add jns inc outsl jb jae add add push dec jns push bound jb imul and push push push push pop add sbb jae gs cs imul inc outsl jb jae inc outsl jb adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop adc cs jns jb push arpl outsl jb jae add add jns je insl cs bound push gs imul outsl je arpl jae push outsl popa jo je jo insb imul je arpl adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop add add pop push push adc adc sbb pop add adc adc adc cmp push push and sbb sbb add add sbb and add adc and add mov cmpb add add add add add or and add sbb pop add add pop add sbb adc sbb sbb adc sbb sbb sbb adc jmp adc or add xor cmp push and add xor add adc add cmp and add or and add addl adc add orl adcl adc sbb push and add adcl add adc push and add andl andl and add subl adc sbb add or add or add add sbb adc push sbb adc sbb add push add sbb adc adc pop sbb adc push sbb adc sbb push sbb pop push add add add add add add add add add push or push push push or add adcl push add or push add pop add add add pop add sbb add add add pop push add add or add add add add add add or pop add add add add sbb sbb add sbb add add pop add add add cmp sbb adc or add sbb add sbb pop sbb or or sbb add add add add add add add add add adc pop sbb or or sbb add add add add add add add add adc or and sbb sbb add sbb sbb add add add add add add add add and sbb or or sbb add add add add add add add add adc push push adc push add add gs and add adc adc or push cmp xor add sbb add add add add add add add add add add add add add add add add add add or or add adc or pop adc add add add push or fstl sbb sbb and adc adc push adc sbb add adc adc adc pop add xor adc xor add and adc and add and adc and pop pop push add add adc push add add push push sbb add add add add add add add adcl add push adc add pop add add add cmp pop add add add or add adc add add adc add adc add add add rolb add add add out test add test add add outsl jb js dec popa imul jb gs insb add add add and 