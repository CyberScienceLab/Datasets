add add add add add add add add add add cld add push or add fcoms add xor add add add add adc add push sub es and add add nop add add lret add imul cmp add add add cmpb add push add add or add add sub add push pop sub pop add add and or inc add add inc add add or add cmp add add and add cmp add and insb add push and add add add xorb add jge (bad) jmp add add decb add decb add add add (bad) lcall (bad) (bad) (bad) jns (bad) pushl (bad) (bad) decl add add add add cmp (bad) (bad) ljmp add adc or or add add add sub es add sub add push sub xor add add adc add push and add add adc add add add or and add add cmp add add adc and mov int cli popa cmp add push pop jae add or pop and add add or add cmp add add and and add add add cmp add add or add cmp or add rorl addr16 hlt sub and add pop or adc add and add add or mov add adc and mov inc push popa cmp add add adc add pop aas pop bound and add pop cmp add adc and and sbb add adc pop adc or add and add add add add or lock lahf pop and icebp sub mov push adc adc or sldt push and add add or add cmp add add push push and add add cli add add or repz xchg xor data16 add or sbb adc add and add add roll add cmp sub add or or add cmp or call and ds adc sub add adc and xchg sub pop and sub popa cmp add add sub add push adc add xchg add and sub pop sbb and pop inc push add add (bad) decl (bad) (bad) call (bad) (bad) incl add add (bad) (bad) call (bad) ljmp (bad) (bad) in (bad) (bad) decl (bad) call add add or or add cmp (bad) (bad) jmp and add add push add add sub add push pop or cmp push add add push or decb add add add (bad) (bad) (bad) fdivr (bad) (bad) fdivr (bad) (bad) fdivr (bad) ljmp (bad) (bad) (bad) jns (bad) pushl add sub (bad) jmp (bad) (bad) decl add add add add (bad) lcall (bad) pushl std (bad) ljmp add and add add movsl (bad) (bad) jmp insb mov imul fstl and (bad) decl imul adc and add add jnp (bad) call or jbe inc mov and mov popa cmp (bad) (bad) call adc add add sub add cmp (bad) jmp sbb je add or or inc (bad) (bad) call or sti inc cli popa pop and cmp push sub adc or add add sub es and add add popf add add or repnz cli pop and mov mov pop add add or clc sbb (bad) sti movsl push cmp add push adc adc push add and cmp add add push dec loope and add adc pop adc sbb add cmp add pop adc and add add ss add or sahf push or pop and mov add add or adc mov add add cmp add add or push sub pop and test jecxz cmp add add pop sbb pop sbb sahf and add cmp add add or pop sub aaa jo repnz cmp pop pop or pop pop or or or popa sahf and add add cmp adc sarb mov cli push popa cmp add adc adc xchg adc and xchg add add or fxch push test and mov push add add or test rorb inc call inc add add adc add or pop add add adc jbe cmp pop and push push popa cmp add adc adc and adc rcrb cmp add add notb mov cmpsl popa and pop inc sub add outsb add add cli add add add movsb (bad) (bad) ljmp (bad) (bad) call (bad) call add add add add add roll add add add add add (bad) (bad) decl add aas add add std (bad) (bad) incl add data16 add push add daa add add add in add add add jae add and (bad) (bad) incl (bad) ljmp add add (bad) call (bad) (bad) lcall add and add pop add add add add (bad) (bad) jmp pop add add outsb add add cld mov push add add ficom cmp (bad) (bad) call pop pop or pop pop or popa sahf and add sub add cmp add add adc sti sub imul popa cmp (bad) (bad) call adc and sbb add adc lahf cmpsl daa and fild fdivr (bad) call pop pop adc pop xchg or xchg popa sahf and add add out add add or icebp arpl push xor popa cmp pop push adc push xchg or xchg popa sahf and add add movb add or jp subl xchg (bad) decl or or popa or add mov es (bad) and add nop xchg aam and (bad) jmp jp dec jg and add add jnp add and inc nop (bad) cmp call pop sbb pop sbb sahf and add add pop add add mov lret sarl (bad) (bad) call pop push adc push xchg or xchg popa sahf and add add cmp add adc mov and stos mov popa cmp std (bad) decl adc sahf and add add sbb add adc icebp or mov popa cmp std (bad) call or adc lcall add cmp add add or test cltd gs and cmp pop sbb pop sbb or add add cmp add add push adc cmp and add cmp or jno sbb pop and pop jl cmp (bad) call pop adc pop adc sahf and add add mov add adc dec mov ficompl xchg dec std (bad) call or push and adc pop adc and add add pop add add or in stos rcrl int3 fsubrp sub cmp std (bad) call or mov and lds cmp sbb pop sbb sahf and add add and add and in cld (bad) decl or sbb cmp add add adc add decb or add add add add add sti (bad) inc cli (bad) call std (bad) pushl (bad) inc cld (bad) jmp add stos add add (bad) (bad) stc cli (bad) push cld (bad) decl (bad) (bad) pushl sti (bad) (bad) std sti (bad) ljmp add add add in cli (bad) call std (bad) call add add add add (bad) incl add or add sar (bad) decl std (bad) decl add cli add add add add add add add inc std (bad) ljmp (bad) call add add sti (bad) (bad) out add add add add (bad) call (bad) (bad) decl (bad) push std (bad) pushl add sahf add add add add sub fs (bad) jmp and add add sbb (bad) call or ss lret and mov sti (bad) call or fsubs inc jg and mov (bad) sti (bad) call add adc std (bad) jmp sbb add cmp (bad) (bad) decl or sbb or add cmp (bad) (bad) jmp adc jne jl pop and outsl xor popa cmp or push and adc push rcrb cmp pop pop movups pop setne pop setne and add add cmp adc jnp movsl cmc pop and cmp (bad) decl adc popl add and add or add add and add add cmp (bad) jmp adc mov or pop and cmp mov cmp sti (bad) call pop pop or xchg or or sub add cmp or rorl aam popa test in (bad) lcall adc arpl add or add add cmp (bad) (bad) call pop sbb pop sbb sahf and add add ljmp fcmovu leave push pushf push popa cmp adc and add add lret call or pop adc and add cmp or xchg aam or stos pop popa outsb popa cmp (bad) call add inc add add and add pop cmp adc push jp sub push fistpll cmp (bad) call or adc add addb add xor add sub add cmp (bad) jmp and xchg adc add add adc or cli (bad) call pop sbb or add xor mov (bad) call add add add cmp std (bad) jmp adc idivl pop jl ret popa cmp stc (bad) call or pop adc and add add cli cld (bad) jmp out scas cmpsb stc cmp stc (bad) lcall adc arpl add adc and add add (bad) (bad) call or push and adc pop sbb and ret cld (bad) call pop pop or pop pop or popa sahf and or add cmp adc pop or pop pop or popa sahf and add add or add cmp push sbb sub push adc and add add jo (bad) call or jbe pop bound negl cmpsl popa cmp stc (bad) lcall adc arpl add and add push add push or and add cmp (bad) call pop pop push adc pop push xchg or push xchg popa sahf and add add cmp cld (bad) jmp sub adc push add add add add push add inc cmp jle and adc add push or push mov push movsl inc popa and pop inc push add add add cmp (bad) (bad) pushl add add add push add sbb add pop add add add add add add add add pop add add add add sub add or add or add or push jle add add adc push adc pop sub add or push movsl add add or pop and and fcompl cmp (bad) incl outsb sbb or add and cmp add add sbb dec and (bad) incl outsb sbb or add and test cmp add add imul adc and popa cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and hlt cmp pop and dec popaw cmp (bad) (bad) incl outsb pop push or add and cmp add add scas sbb cmp pop and enter xchg inc fldenv popf (bad) (bad) incl sbb add pop and in xchg pop and cmp lea add sbb add or (bad) sbb add sbb push add or push mov or pop and add jge cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc jae pop and mov cld std (bad) call pop and (bad) xor add popa cmp std (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop add or add add or add or or add movsl add add or pop and mov sub jb popa cmp (bad) call add adc add (bad) (bad) (bad) aas pop adc adc and mov jo and int3 mov popa cmp (bad) incl sub add adc push add add add add push add cmpl mov push popa adc and shrl pop pop divps add add add add add jns add rolb add popa add add add add add add add add add add add add add add je add adc movsl add add or pop and and and popa cmp sbb add outsb push push or add and cmp add add sbb jno adc and iret loop pop popa cmp (bad) call pop and and dec ljmp popa cmp (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop add or add add or add or or add movsl add add or pop and jae add mov xchg (bad) popa cmp (bad) (bad) incl and (bad) (bad) aas pop adc adc and and xor cmp (bad) (bad) (bad) jle add add or (bad) sbb add sbb push add or pop and lea cs and test jle cmp pop push or add adc adc and pop jo pop and cmp outsb sbb or add and adc es add insl xchg pop sub (bad) decl push mov or pop and pop dec sub jns sbb (bad) (bad) incl outsb pop push or add and jnp push and add adc cmp (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc sbb add add outsl add add adc or push jle add add adc push adc pop sub add or pop and mov and cmp lea add sbb lds ja popa cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and and cmp std (bad) incl sub xor add add add add push add repz dec inc shll add loope mov sti cmp pop push pop inc push add add add add addl add mov add add add add add add add jns add aam add std add add popa add add outsb pop push or add and daa jp cmp add add mov cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and stc xchg push pop and cmp (bad) (bad) incl pop push or add adc add (bad) (bad) (bad) aas pop adc adc and or lahf negl cmp add add or (bad) sbb add sbb push add or push mov or pop and mov pop and ret cmp (bad) (bad) incl sbb add pop and mov mov sub iret (bad) (bad) call push movsl add add or pop and xor scas pop and mov (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc sbb add add outsl add add adc or push jle add add adc push adc pop sub add or pop and in pop and in popa cmp (bad) (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and push cltd xchg pop and dec fwait popa cmp std (bad) incl outsb sbb or add and inc jmp cmp add add xor lock xchg mov xchg pop popa cmp pop add or add add or add or or add movsl add add or pop and inc mov pop cmp std (bad) incl outsb push push or add and or add mov cmp (bad) call lea add sbb into out pop and jp sbb push std (bad) incl sub add adc push add add add add push add add xchg pop and mov add pop push or add adc add (bad) (bad) (bad) aas pop adc and into mov outsb rcrb and pop inc adc add (bad) add add add jbe add mov add add add add add add add add add add add add cmpsb (bad) (bad) lcall add push add add add add test add jle add add or (bad) sbb add sbb push add or push mov or pop and and pop out popa cmp (bad) incl outsb sbb or add and adc add add pushf mov es (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and and in into popa cmp (bad) ljmp pop add or add add or add or or add movsl add add or pop and and mov fs cmp (bad) (bad) call lea add sbb jno ret pop and cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop and imull fld sub push sbb add pop and dec shrb and cmp (bad) call pop and pop ja pop and push pop popa cmp outsb push push or add and jl inc and add sbb aaa dec and (bad) incl outsb pop push or add and sbb and add jae pop mov and popa cmp std (bad) call push movsl add add or pop and scas scas pop and and std (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc sub adc test (bad) call add add sub add or add or add or push adc and lret xor pop fs cmp (bad) (bad) jle add add adc push adc pop sub add or pop and or jno mov cmp pop and sbb mov (bad) incl sub add xor add add add add push add inc (bad) mov std rol popa adc and imulb ficoml pop inc popa and pop inc sldt add add add add out add add add jns add pop add add add faddl add scas (bad) (bad) decl add add add add je add push outsb push push or add and scas jo and add iret xor and (bad) incl and (bad) (bad) aas pop adc add bound add outsb sbb or add and or dec and add mov sbb pop and popa cmp (bad) call lea add sbb xor aas pop and pop popa cmp add add or (bad) sbb add sbb push add or pop and and pop and mov popa cmp (bad) (bad) call add add sub add or add or add or push jle add add adc push adc pop sub add or pop and in pop and cmp (bad) (bad) incl outsb pop push or add and push add add xchg rcr pop and (bad) incl pop push or add adc adc and and cmp add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc shrb xor add popaw cmp (bad) call push movsl add add or pop and fmuls dec add sub (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb adc pop and fcomi rcrl adc xlat std (bad) call pop and and pop and popa cmp std (bad) (bad) jle add add and loopne jle add add and loopne push bound add add and loopne pop adc jle add add and loopne pop sbb or pop add or add add or add or or add movsl add add or pop and mov int3 or jno cmp (bad) decl push mov or pop and jae pop and cmp std (bad) incl sub sub es add and add sub sub es add add add sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add or add or add or add sub add or add add add add push decb add decb add decb add decb add decb add outsl das add push sub add xor add add add add add add push decb add outsl or add sub add xor add add add add add add push decb add outsl or add sub add xor sbb add add add sub es decb add decb add decb add decb add outsl or add add or adc add add add sub es decb add decb add outsl xor add sub add xor add add add add add add push add or add add add sub adc or adc add add add sub es add add add add add adc or out add add add adc add push pop push cmp add pop and mov xchg pop and adc popa cmp add add and add bound add add cmp add add and fidivrl and sti lods popa cmp add add add add add bound jnp add add sbb add and push add add or add and add bound add add (bad) add add and add jnp add add fs jge add add sub add push and add sbb add (bad) (bad) call sub add es add add add add inc add add inc add add idiv (bad) lcall or sbb add and add pop inc add add idiv (bad) jmp add add add or add add or or push add add imul and sahf pop and fs and add add add inc jp add sbb add add (bad) (bad) call cmp add add dec push hlt and add or or or add int3 (bad) (bad) decl add add jne add lahf (bad) (bad) (bad) mov add add add add add add sbb add and add and inc add add idiv (bad) jmp push cmp pmaxsw and scas loopne es and jo cvtps2pd mov add add add bound jnp add add sbb add and push add add cmp (bad) jmp sbb jp add pop and testb pop and dec (bad) (bad) incl and add pop jge add add or push cmp add add and add add add add add add sbb add add sub and fstp pop and cltd cmp push (bad) (bad) incl jnp add add inc (bad) (bad) (bad) lcall add (bad) (bad) (bad) cmp push or inc adc add xchg std (bad) (bad) sti (bad) (bad) jmp (bad) call (bad) (bad) jmp (bad) ljmp (bad) (bad) (bad) (bad) jmp (bad) incl add add (bad) (bad) incl (bad) dec std (bad) decl (bad) call add xor add sbb mov and add pop jge add add sub jnp pop and cmp (bad) incl push jge add add adc xchg and adc xor popa cmp (bad) call sub pop mov sbb dec (bad) (bad) call sub add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add or add xor and add add add sub es sub es add jge add add pop add pop pop bound jge add add add add xor and add push add adc add push sub add push and add and inc add add idiv (bad) call sub add es mov add and mov pop or and sbb mov or pop add push and add sbb add add (bad) (bad) jmp pop and dec adc jae in popa sub jnp add add pop pop bound xchg add add inc add add idiv (bad) lcall adc ljmp pop inc push add add (bad) (bad) pushl add adc add jle (bad) ljmp add sbb sub gs and and push add add add loopne add add sub dec (bad) (bad) lcall or inc or add cmp (bad) jmp (bad) call (bad) (bad) cmp (bad) ljmp (bad) (bad) pushl (bad) (bad) incl add add sub and dec mov or cmp (bad) ljmp add adc or cmp add pop add adc add push sbb pop add push and inc add add idiv (bad) call sub add es pop pop or sub cmp add add push cmp sbb add add (bad) (bad) (bad) cmp add sbb add push add add add add add add add add add mov add add sub add add add sbb lret ret xor inc stc popa and add (bad) (bad) incl add add (bad) (bad) ljmp add add and add and add and inc add add idiv (bad) jmp sbb push push and enter sub jnp add add loopne add add add push add push and das (bad) (bad) jmp pop pop cmp lcall inc add add idiv (bad) jmp pop or cmp (bad) jmp or mov decl and gs and cmp (bad) incl pop add add add pop pop bound adc or mov add adc add push sub add push and add and inc add add idiv (bad) call sub add es or inc and in jmp in and inc pop add add (bad) (bad) incl add sbb add xchg add add add add add call loope add es pop or push pop or add add add add add add mov (bad) incl add add add push add add add add add add add add pop sub add add (bad) (bad) jmp pop or sub pop outsb mov cs popa cmp (bad) incl or pop pop pop bound pop or xchg adc cwtl sub loop aam popa cmp (bad) (bad) decl add add add jo inc add add idiv (bad) lcall cmp (bad) call or cmp (bad) call add mov and jp popa cmp (bad) (bad) incl pop bound pop or pop add push and (bad) lcall add (bad) (bad) jmp sub or pop cmp (bad) lcall inc add add idiv (bad) jmp or pop or cmp (bad) (bad) jmp mov sub and cmp jnp add add loopne add add add push add push and cmp (bad) (bad) jmp lahf dec pop jmp xchg (bad) (bad) incl sub xor xchg add add add adc add push sbb add add pop pop or mov pop sub adc adc cmp jbe popa cmp add add add add add idiv (bad) call sub add es sub push or cmp add add inc or add add add jp (bad) incl add add add add add (bad) pushl add and add mov add add sub and das ljmp push cwtl and or pop pop pop bound pop or cmpsb push pop bound pop or sahf push or sub sub add push and inc add add idiv (bad) jmp adc xchg adc dec mulb add pop loopne add add add push add push and cmp (bad) jmp je imul popa and inc pop add add add (bad) (bad) pushl (bad) dec (bad) (bad) pushl add add (bad) (bad) pushl and add and add and (bad) lcall inc add add idiv (bad) jmp push push cmp (bad) (bad) lcall inc add add idiv (bad) jmp and mov test popf push or and add and (bad) lcall idiv (bad) jmp adc (bad) sub or (bad) (bad) incl sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add adc add push sub es add sub add sub adc or mov add or add sub es pop or cmp add add idiv (bad) call sub add es mov and or add int3 add add add fiadd add int3 (bad) (bad) jmp add add add testl add sbb cmp add add idiv (bad) jmp pop and and stos push add jge add add sub add push and add sbb add add (bad) (bad) jmp push pop sub add add (bad) (bad) jmp and aam and (bad) sub outsb (bad) (bad) call or or sub add add add sub add push and inc add add idiv (bad) ljmp or add add push pop or inc or add dec (bad) (bad) jmp add add (bad) (bad) inc (bad) (bad) jmp add add add jge add ret jmp add add sub cmp and and cmp (bad) (bad) incl pop pop or sub and pop and cmp (bad) (bad) incl add add add bound jnp add add add push and push add add pop cmp (bad) lcall idiv (bad) jmp and aad push cmp sbb and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) jmp sbb inc (bad) (bad) incl and pushf jl pop and (bad) popa cmp (bad) ljmp adc or adc add add add sub es add add add or add adc or or add adc add push push sub add add bound add add stos add add or inc pop add add add add add outsl add add add add (bad) (bad) (bad) mov sub cmp pop out cmp mov or pop inc add add fdivr (bad) jmp add add add sub add push and inc add add idiv (bad) call sub add es xchg cmp add add add add bound jnp add add add push and push add add push (bad) (bad) jmp sbb cmp (bad) call inc add add idiv (bad) jmp and jno sarb jl (bad) incl jnp add add add add xor sbb add add (bad) (bad) lcall cmp (bad) (bad) lcall inc add add idiv (bad) jmp and cmp lock cmp (bad) (bad) ljmp add add xor stos add add add adc add push pop movhps flds add sbb add add (bad) (bad) call sub add es add jmp (bad) fs cmp pop or cmp jnp add add pop or add or cmp add js and out (bad) popa cmp push bound jnp add add add push and pop or sub add and inc add add idiv (bad) jmp pop push pop pop pop adc sub add cmp and xchg popa cmp add pop push adc pop pop pop or or sub sbb add add (bad) (bad) jmp adc mov and outsl push add add pop pop or adc adc inc adc add sbb add add add add (bad) (bad) cmp add add (bad) (bad) call add add add add add (bad) (bad) incl (bad) (bad) incl add add (bad) (bad) lcall add pop sub xchg pop pop and cmp push bound pop adc xchg and add add add jnp add add push sub add push and (bad) lcall add (bad) (bad) jmp cmp add add and add add aas sbb add add (bad) (bad) lcall dec (bad) (bad) decl pop bound adc pusha or sub add push and add sbb add add (bad) (bad) jmp push cmp (bad) jmp pop mov jecxz sub and add fsubl fs mov popa sub add jge add add adc cld (bad) (bad) jmp aas cmpsl in repnz and pop inc or (bad) (bad) (bad) jp (bad) jmp (bad) (bad) pushl (bad) (bad) lcall (bad) (bad) pushl add mov (bad) ljmp add add add add (bad) (bad) lcall add add cmp jge add add push cmp stos sbb sub in mov pop and push or xor sbb add (bad) (bad) lcall adc jb (bad) call add adc and xchg pushf xchg push or jmp pop or push (bad) (bad) jmp das mov push and aam lea (bad) decl sub add or or add add add push add add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add adc add push sub es sbb add jae add push jge add add adc movb add sub add push pop push cmp pop or lea add add add add or movsb add add pop or lea add add add add or popl add push pop pop or adc xor add and add sbb add add (bad) (bad) call sub add cmp add push or sub add and add sbb add add (bad) (bad) (bad) cmp add add jae add push jge add add (bad) add add jae add push jge add add gs adc pop add add (bad) add add jnp add add popl add add sbb add addl cmp add add pop or lea add add add add adc xor add and add sbb add add (bad) (bad) jmp add or lea add add add add cmp add add jae add push jge add add or mov add add rolb add lea add add add add adc cwtl add add push push jne (bad) lcall inc add add idiv (bad) lcall push sub add push and add sbb add add (bad) (bad) jmp add rolb add lea add add add add sub add push and (bad) lcall inc add add idiv (bad) jmp pop or push and inc add add idiv (bad) jmp add add push jge add add sub add add sub add add jge add add iret (bad) (bad) lcall add add (bad) (bad) jmp std (bad) (bad) cmp (bad) jmp (bad) (bad) (bad) cmp add out (bad) (bad) inc std (bad) pushl (bad) lcall (bad) dec (bad) (bad) pushl (bad) jmp std (bad) incl std (bad) pushl (bad) (bad) (bad) (bad) (bad) (bad) sti std (bad) incl (bad) (bad) call add add (bad) lcall add pop adc push and inc add add idiv (bad) jmp add jb lea add add add add sub add push and (bad) lcall idiv (bad) jmp add add push jge add add pop cmp (bad) call inc add add idiv (bad) jmp sub add adc or dec add add add adc add push sbb sbb add add add sub es add add jmp add sbb or add add add add add add add add add add add add add add add sub add push and inc add add idiv (bad) call sub add es add add add add add sub add and inc add add idiv (bad) jmp add add add cmp inc add add idiv (bad) call cmp incl and leave lods mov loopne popa sub add add add sub add push push cmp (bad) jmp pop lds sbb popa and add (bad) (bad) inc (bad) (bad) ljmp add add (bad) lcall add push sub add push and inc add add idiv (bad) jmp sbb incl and sub das pop and add cs sub add add add sub or jne (bad) jmp sbb ljmp dec push aas pop and sbb popa sub adc or adc add add add sub es add add add add aaa add push sub add xor add add add add adc add push sbb xlat add add and in pop and sbb sub adc sub add push sbb mov add pop add pop pop bound sub add push and add and inc add add idiv (bad) call sub add es cmp add add idiv (bad) jmp and scas mov or pop inc add add (bad) (bad) (bad) incl add daa add add (bad) (bad) ljmp cmp add push and inc add add idiv (bad) jmp pop and and xchg popa sub jge add add pop sub add add (bad) (bad) jmp sub add add add sub add push cmp (bad) lcall or add add (bad) jmp (bad) incl (bad) (bad) lcall (bad) (bad) jmp add add sub sub add xor add add add add adc add push pop sbb mov and or add xchg push movsl push popa cmp jnp add add loopne add add sub sbb add and mov sbb cmp add pop pop or sub and push cmp jae cmp add add add add loopne add add sub or ss or sbb xor add add cmp pop jb adc add sbb add (bad) (bad) call sub add es add add sbb add add pop add add add add add add add add add sbb add and (bad) decl (bad) incl add add add nop add add add (bad) (bad) decl (bad) pushl add push add add (bad) (bad) ljmp add dec add add add add add out add sbb add (bad) add add add add add add push add add add add sbb js (bad) incl jnp add add loopne add add sub sbb pop (bad) (bad) decl and out pop and sahf jmp add add add cmp add pop adc jmp add std sub pop pop or (bad) (bad) (bad) incl jnp add add loopne add add sub adc adc (bad) jmp cmp xchg stos and sub int sub push sbb pop or cmp (bad) (bad) jmp jnp shlb pop cmp and inc pop add add add push add add add add add pushf add add add and (bad) lcall (bad) decl (bad) (bad) decl (bad) call add xor add xor add add (bad) (bad) incl add xor add cmc std (bad) ljmp add add sub add and add sbb add add idiv (bad) jmp push cmp (bad) decl and arpl pop and cmp incl jnp add add add add add cmp add pop or jmp jbe in and int3 fcompl (bad) (bad) incl jnp add add loopne add add sub or xor add and (bad) lcall inc add add idiv (bad) jmp and mov push and push and (bad) incl jnp add add loopne add add sub push sub add and (bad) lcall idiv (bad) (bad) cmp mov mov cmp sbb (bad) lcall inc add add idiv (bad) lcall cmp jl add add sbb add pop push cmp and and cmp or inc sbb add add (bad) (bad) lcall adc cmp (bad) lcall inc add add idiv (bad) jmp and lcall pop pop or adc cmp inc add add idiv (bad) jmp and or and inc push and (bad) call or or cmp add add idiv (bad) jmp or add jo pop and cltd mov (bad) call or cmp cld (bad) decl and and cmp std (bad) incl jnp add add cmp add pop adc lret cld (bad) decl and in hlt pop and jge popa cmp std (bad) incl jnp add add loopne add add sub add push pop adc mov jnp add add sub add push pop sbb cmp add add idiv (bad) jmp or js stos movsl pop and test popa cmp (bad) call or or data16 (bad) decl and clc mov push or cmp (bad) incl pop pop or push cmp (bad) (bad) cmp cld (bad) incl jnp add add cmp add cmp sti (bad) jmp sbb sub and sub pop and pushf push aam cmp std (bad) incl jnp add add loopne add add sub cmp cld (bad) decl and and jbe popa cmp std (bad) incl add add add lock (bad) lcall add (bad) (bad) lcall pop push cmp sti (bad) lcall add (bad) (bad) jmp sub add xor add or add add sub es pop pop sub add and add sbb add add idiv (bad) call sub add es lret add add adc add inc add add idiv (bad) lcall cmp add and hlt test and xor mov add add add add or inc add push and add add jnp add add sbb add and cmp xor add adc and xor pop and mov bound add pop or or sbb loopne mov mov repnz and add pop add add add push sbb dec add push and or and out add and mov cmc cmp add add mov (bad) sub add add adc sbb rolb adc and pop ja pop and inc pop fsubl out add add or pop cmp cmp in cmp add add add push pop and cmp inc add add idiv (bad) jmp adc and andl lock popa cmp add add add push and add pop inc add add idiv (bad) jmp and mov push and shlb add add add add sub add push and pop cmp mov std xlat xchg pop and and xor push add add add jnp add add add jnp add add sub add push and add and cmp xor add and add sbb add add (bad) (bad) jmp or add in (bad) jmp pop adc les add and jne inc mov pop cmp cmp add adc add cmp add bound add inc std (bad) (bad) cmp add ljmp add add pop (bad) (bad) ljmp pop add mov add add add add pop add pop or add push add popl add adc add std (bad) decl or add pop add icebp std (bad) (bad) mov add add add jecxz add push or add (bad) (bad) lcall std (bad) decl add lret push add and (bad) decl (bad) (bad) lcall pop add dec add add arpl add in add cli or add add add xchg add add add add or add add add (bad) ljmp (bad) lcall daa cmp add add or add adc add add and add sbb add (bad) (bad) (bad) cmp pop stos daa and fadd ss (bad) dec add (bad) (bad) call mov mov pop and insb dec popa cmp add insb add push pop sub pop add add jnp add add inc add push push push cmp add inc add add idiv (bad) jmp cmp add adc adc sbb add add mov mov jbe and mov (bad) (bad) incl jnp add add jnp add add push sub add and adc std add add mov test enter lods add popa cmp (bad) (bad) call add jo add pop sub faddl add push push add add add mov dec fildl lret (bad) std (bad) call add add add add mov imul push cmp adc and sub pop popa cmp std (bad) call or mov add and in repnz std (bad) incl jnp add add add add add popl add add jnp add add push add push and (bad) lcall inc add add idiv (bad) lcall inc cmp add and repnz (bad) incl jnp add add add add add bound or popl add add jnp add add push add push and add sbb add add (bad) (bad) lcall xor add add and sub and fisubl (bad) decl or add add adc push pop pop pop bound pop sub roll add adc and add and aad popa cmp std (bad) incl jnp add add add add add popl add add jnp add add push add push and add sbb add add (bad) (bad) lcall xor add pop inc add add idiv (bad) jmp adc and pop lods leave pop and cmp adc cmp sub sbb add add (bad) (bad) jmp and stos iret and mov icebp and aam mov cld (bad) incl jnp add add add add add popl add add jnp add add push add push and (bad) lcall add (bad) (bad) (bad) cmp (bad) lcall pop adc adc inc inc add add (bad) lcall (bad) (bad) incl (bad) jmp (bad) jmp (bad) call add sub (bad) ljmp (bad) ljmp (bad) incl add out (bad) jmp add sub add add (bad) cld (bad) incl (bad) call add add cld (bad) jmp sti (bad) push add add (bad) (bad) cmp add sbb (bad) jmp add (bad) push add add add push add add add add addb add cld (bad) jmp add ret add (bad) (bad) call cld (bad) (bad) cmp (bad) call add add add add stc (bad) lcall add add std (bad) push add add add add add add add add add sar (bad) incl sti (bad) push add add add mov add jmp sti (bad) pushl cli (bad) call (bad) decl sub xor add and (bad) lcall add (bad) (bad) jmp and cmc and and popf and (bad) incl jnp add add or inc add push pop and xor add and (bad) lcall idiv (bad) (bad) cmp dec call and rcll and popa cmp jnp add add inc add push pop (bad) (bad) (bad) call mov cmp ds cli (bad) incl jnp add add inc add push pop xor inc (bad) (bad) call or sbb aaa (bad) (bad) call mov mov lods pop and mov popa cmp (bad) incl jnp add add jnp add add add inc add push and sub call mov mov rcrb pop and xor (bad) incl or sbb xor add and (bad) lcall inc add add idiv (bad) jmp and fisub inc cmpsl sahf std and (bad) call add jno add and add sbb add add idiv (bad) call sub add and (bad) lcall inc add add idiv (bad) jmp pop adc mov (bad) jmp enter cmp stc (bad) call add insl add push pop adc jb (bad) call or (bad) lcall idiv (bad) lcall inc cmp (bad) call mov cmpl dec popa cmp mov xchg pop (bad) pop and cmp decl adc cmp call mov ss pop and mov popa cmp (bad) incl jnp add add jnp add add or cmp sbb or cmp cld (bad) call mov (bad) mov (bad) mov popa cmp jnp add add jnp add add sub add push and add push sub add push and (bad) lcall idiv (bad) jmp and clc (bad) call add add add adc pop xor xchg cld (bad) call mov xchg adc pop and push xchg popa cmp clc (bad) call add outsl add push pop push cmp (bad) call adc das cmp (bad) call add stc (bad) lcall inc add add idiv (bad) lcall and push cld (bad) jmp fucomp mov (bad) call mov mov lods es xchg popa cmp (bad) call add adc cld (bad) incl add add push pop adc push cld (bad) call mov icebp shll pop xor inc clc (bad) call or cmp sti (bad) incl jnp add add add add add bound or popl add add jnp add add push add push and (bad) lcall inc add add idiv (bad) lcall aaa cmp sti (bad) jmp xlat imul sbb add jnp add add sbb es or and cltd sti (bad) call mov cmp or push bnd popa cmp idiv incl outsb adc lcall idiv (bad) lcall and (bad) lcall inc add add idiv (bad) jmp adc and popf pop dec pop and cmp add add add jnp add add or cmp es adc pop inc cmp push and daa and loop pop and push imul (bad) call add outsb add push pop or decl or cli (bad) jmp nop sarl and out sub in xor pop popa cmp add insl add push pop xor cmp cli (bad) lcall idiv (bad) jmp adc and movsb (bad) dec pop and lock incl jnp add add add add add (bad) loopne add add add add add push add push and cmp dec pop sbb cmp jnp add add adc jnp add add push sub add and cmp (bad) call or (bad) (bad) lcall inc add add idiv (bad) lcall xor xor add and (bad) lcall inc add add idiv (bad) jmp adc and aam pop and cmp (bad) call add adc pop adc jmp add out and call adc and imul popa cmp (bad) incl jnp add add pop sub push pop or xlat stc (bad) jmp mov lcall dec mov add (bad) incl add add add sub (bad) lcall inc add add idiv (bad) lcall cmp mov mov test xchg xor aam (bad) decl adc aas cmp mov cmp scas pop and cmp jnp add add add add add popl add add jnp add add push add push and cli (bad) lcall inc add add idiv (bad) lcall cs cmp stc (bad) lcall idiv (bad) jmp adc and sub pop and sbb popa cmp (bad) incl jnp add add adc sub add pop push cmp stc (bad) call mov jmp xor ss adc cmc (bad) call add idiv lcall inc add add idiv (bad) lcall or fdivrp (bad) jmp push out lea adc add xor or add or add push pop sub add and add sbb add add (bad) (bad) call sub add es or test add add xchg pop or push cmp add adc pop or push and inc add add idiv (bad) jmp cmp adc sub add pop or dec push adc movntps push and lret push pop and add lea addl add adc push and mov pop and sub add add sbb add add (bad) (bad) ljmp dec pop or pop adc inc adc add aaa (bad) (bad) (bad) mov (bad) (bad) incl (bad) (bad) inc add add add add add add add pusha (bad) (bad) (bad) js (bad) pushl (bad) (bad) push add add add incl add add mov sbb mov inc and pop inc push popa and inc or add daa (bad) (bad) ljmp add add (bad) (bad) decl (bad) lcall (bad) (bad) call add pop or jbe (bad) incl push xchg pop or sbb xor add and (bad) lcall inc add add idiv (bad) jmp and mov pop pop cmp (bad) lcall idiv (bad) jmp adc and xor pop pop and jp (bad) call add pop adc push pop pop pop pop bound add push push cmp (bad) lcall add (bad) (bad) jmp pop sbb sbb idiv (bad) jmp jae in and iret aam and (bad) incl or sub push cmp (bad) (bad) lcall add (bad) (bad) jmp add push sub add pop or mov push and aad and inc in popa cmp (bad) (bad) ljmp add add xor add add add add adc add push push sub add push and inc add add idiv (bad) call sub add es xor add and inc add add idiv (bad) ljmp add pop decb add sub sbb sub pop adc and sahf inc xor pop inc add add fdivr (bad) jmp add add add jno add sub sbb pop inc push add add (bad) (bad) incl add add (bad) (bad) jmp add add sub sub sbb sbb add add (bad) (bad) lcall pop sub add add (bad) (bad) jmp and sub and mov and pop les pop popa sub inc movsb pop pop and add popa cmp (bad) lcall sub xor add add add add add add push add push add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add add sldt or xor add add add add sub es add outsl pusha add push sub xor add add add add push add add push add push sub add add or or add add add sub es add outsl dec add push sub xor add add add add sub es add outsl and add sub xor add add add add add add push add add push sub add or or add add add sub es add add push sub add or or add add add push add add popa add push sub add add or sldt add add add add push add add dec add push and xor add add add add add add push add outsl data16 push and add or add add add add push add add push add push add push and add or or add add add sub es add add push sub add or adc add add add sub es add add outsl push add push and or or add add add sub es add add push sub add or or add add add sub es add add push sub add or or add add add sub es add outsl add push sub xor adc add add add sub es add add push and add xor add add add add add add push add sub add push and add or or add add add push add add add push sub add add or push add add add add add push add outsl and sub add xor add add add add adc add push sub es push sub add and add sbb add (bad) (bad) call sub add es sbb adc pop sub add add adc sub or inc or add sub add (bad) (bad) (bad) incl add add add add add add add add add add add aam pop adc lea add add add add pop sub add add (bad) (bad) jmp add dec add push push sub lea add add add add sub add push jge add add fsubs sbb mov add adc or insl add add add adc add push push sub and push pop and xlat sbb add add pop pop or sub pop and inc dec pop pop and (bad) or cmp add add sbb add add idiv (bad) call sub add sub push or inc or add mov add or add mov add add add add add mov (bad) (bad) jmp add add lods add add sbb lret fcomps pop and xlat scas (bad) popa sub add add add loopne add add sbb add push addl or lahf cmp (bad) jmp mov mov push push or add dec (bad) (bad) ljmp add add (bad) (bad) (bad) cmp add xor (bad) incl dec add push and add and inc add add idiv (bad) jmp sbb dec (bad) (bad) incl jnp add add sbb cmp (bad) (bad) lcall inc add add idiv (bad) jmp sub add add add cmp (bad) (bad) jmp and sub and cmp (bad) incl jnp add add loopne add add sbb add push addl cmp (bad) (bad) jmp roll cwtl cmp (bad) ljmp add add xor add add adc add push push cmp and clc lcall add add add add loopne add add sub add push sbb add sbb add add (bad) (bad) call sub add es add push pop pop or sub add and add sbb add add (bad) (bad) jmp push sub and and sub (bad) popa cmp add add add add add sbb add add (bad) (bad) call sub add add add loopne add add sub add push sub push or inc or add push add add add add (bad) (bad) jmp add add add gs (bad) pushl (bad) decl (bad) (bad) call add add pop sbb lds jl add add adc sub add and inc add add idiv (bad) jmp and insl adc popa and or add or (bad) (bad) incl (bad) lcall add adc (bad) dec (bad) (bad) (bad) cmp add add imul jmp push sbb mov les and push mov mov mov jl add add adc or inc (bad) (bad) incl and loopne pop and nop sub popa sub sub (bad) jmp and lods and insl push and (bad) incl jl add add sbb add pop or cmp (bad) lcall idiv (bad) jmp sub adc or lock add add adc add push push cmp js pop inc sub jnp add add loopne add add add sbb add and lods add stos pop and adc popa sub add add add loopne add add add sbb add and or dec add push and add sbb add add (bad) (bad) call sub add cmp add and out pop and jg popa and inc or add mov (bad) (bad) decl add arpl add fs (bad) incl add fiaddl add cmp add (bad) (bad) (bad) ljmp dec add push and add and inc add add idiv (bad) jmp sbb add sbb add add idiv (bad) jmp pop and and pop and cmp push xchg insb pop and cmp (bad) lcall or pop es lcall cld adc imul pop or sub add and add sbb add (bad) (bad) jmp add add sub add push and inc add add idiv (bad) lcall sub mov jl add add sub add push and inc add add idiv (bad) lcall sub jp sub and xor and ret pop popa cmp (bad) (bad) incl add add sub add and cmp or inc or add or (bad) (bad) (bad) jl (bad) lcall (bad) (bad) pushl (bad) (bad) (bad) cmp (bad) (bad) jl (bad) lcall (bad) decl add add push sub sbb add add (bad) (bad) jmp pop and xchg sti mov adc (bad) (bad) incl sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add adc add push sub es add pop add push sub adc or movl add sub es sbb sub pop inc add add idiv (bad) call sub add es add add add jnp add add pop pop pop bound sub or add cmp add lds add adc add mov add ljmp add add add add adc add lds add jns add cmp add mov add add add sub add cmp add es or push add push and inc add add idiv (bad) jmp cmp add pop pop pop or or push add push and inc add add idiv (bad) jmp and push out add push repz dec (bad) ss popa sub push loopne or add jge add add sub add and (bad) lcall inc add add idiv (bad) jmp or sbb and mov sub add add add cmp (bad) (bad) jmp lods inc aad sub add add add inc mov inc add add idiv (bad) lcall push push cmp (bad) (bad) lcall inc add add idiv (bad) jmp and mov mov and inc or add jle (bad) decl (bad) call (bad) (bad) pushl add add add add add add add mov add add add add add sbb stos (bad) (bad) jmp mov add and cli and and and fs sub cmp lcall jnp add add loopne or add sub add sbb arpl (bad) jmp loopne mov and pop add and dec mov popa cmp (bad) incl jnp add add cmp (bad) (bad) call inc add add idiv (bad) call sub add and (bad) lcall inc add add idiv (bad) jmp add pop or or (bad) incl jnp add add int (bad) lcall inc add add idiv (bad) ljmp push add push and add and (bad) lcall inc add add idiv (bad) jmp pop or sar (bad) decl and (bad) repnz pop and lds (bad) (bad) incl push inc adc inc add add idiv (bad) lcall cmp pop add pop pop bound pop jge add add or decl and and mov pop popa cmp or mov sub pop and or popa cmp (bad) ljmp add xor add add push add adc add push sbb or pop pop or in add add or add lret (bad) (bad) call add popl add mov add add add add add add add add sub and push mov xchg popa and push add add add (bad) add add add scas add add (bad) (bad) call sub add and inc add add idiv (bad) call sub add es xchg and cwtl add mov test add add inc add add idiv (bad) lcall cmp (bad) call add add add jnp add add pop pop pop bound sbb ljmp je jnp add add loopne or add sub add cmp (bad) (bad) jmp push sub add and (bad) lcall add (bad) (bad) jmp and cmp and pop mov and cmp (bad) (bad) call or push cmp (bad) (bad) lcall inc add add idiv (bad) jmp and lods shlb bound cmp (bad) (bad) ljmp add adc or and add adc add push add jnp add add add add add pop pop bound add add add pop pop pop arpl add add xor and add add add sub es add add add add sub add and add add sub add and xor and add adc add push add add add add sub add and add add push add pop add push and add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add adc add push add add add lea add add add add add add xor add add adc add push sbb ds pushf mov sub pop pop or pop sub add add (bad) (bad) call sub add es add add jnp add add popl add add adc sub or inc or add push add add add add add add add xor add sar incl fwait sbb aad cmp push ja xchg and and add (bad) (bad) call add add add je (bad) lcall test and and sbb add sub push and add add inc pop inc add add idiv (bad) lcall sub add and add and inc add add idiv (bad) jmp push pop cmp (bad) lcall inc add add idiv (bad) jmp and ja xchg and and and (bad) ljmp add add xor add add add add adc add push sbb push push and add add add add add (bad) (bad) call sub add es sub sbb add add idiv (bad) jmp cmp pop bound jnp add add loopne add add add push add push and mov or inc pop add add add add add and add mov add add add sub pop or pop add push and add and inc add add idiv (bad) jmp sbb mov repz and add add loopne (bad) (bad) jge (bad) lcall add add jae (bad) jmp sbb xchg and mov and int3 inc mov push shrb add add xor add add or add sub es sbb movl lahf out arpl aas shlb and sbb pop or test jns shlb and cmp or or add cwtl add add add add add add add add add add add add add and add pop cmp add or dec inc cmp pop and sub cli lods pop and xchg dec pop popa sub jnp add add loopne add add add push add push and or and add cmp add pop or ss add (bad) (bad) call sub add es sub add and inc add add idiv (bad) jmp sbb in add add jle push and cli stc lods and jge stos pop popa cmp (bad) incl (bad) add add dec or push and outsl pop and (bad) incl and add add (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) jmp push cmp or or test add and sbb cmp (bad) (bad) decl and and cmp (bad) (bad) incl and add add cmpsb sbb add add (bad) (bad) lcall sub add and inc add add idiv (bad) jmp add add add pop pop push bound pop loopne add add add push add push and and and negl incl sub popa cmp incl pop bound pusha or mov adc add or (bad) (bad) jmp (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) cmp (bad) incl (bad) (bad) ljmp (bad) (bad) lcall (bad) (bad) incl (bad) call sub add and inc add add idiv (bad) jmp and int3 aas pop cmp (bad) incl shrb add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add adc add push sub es add imul push sub adc or and add add add sub es sbb push cmp inc add add idiv (bad) call sub add es jge add add sub add and add sbb add add (bad) (bad) jmp cmp add add add sub push and add push and inc add add idiv (bad) jmp and add mov sbb add add popl add mov add add (bad) (bad) lcall sub add add sub push and and int3 dec popa sub add jge add add sub or inc or add inc (bad) (bad) decl (bad) (bad) decl add add add add (bad) (bad) pushl add cmp (bad) (bad) jmp push sub add add add cs add idiv (bad) call sub add and inc add add idiv (bad) jmp sbb mov add push (bad) (bad) ljmp add add xor add add add add adc add push sbb data16 bound add pop sub and and or jb,pt lret popa sub add jge add add sub add and inc add add idiv (bad) call sub add es fwait mov or pop inc add add fdivr (bad) pushl add add add sub or inc or add jp (bad) call add add add add add add add jno (bad) pushl add add add add aas sbb sub sbb add add idiv (bad) jmp add jge add add sub add and inc add add idiv (bad) jmp sbb cmpsb add sub add (bad) (bad) lcall add jge add add sub test pop and scas shlb (bad) (bad) ljmp add adc push add add adc add push sbb cmp add sub add and add and inc add add idiv (bad) call sub add es sub add add add sub add and or inc push add add (bad) (bad) call (bad) (bad) incl add add add add add add add sbb fldl jnp add add pop add push and add push and add add add add add pop add push and add push sbb stos sub adc or test add push add adc add push sbb add sbb rorb inc push jmp and rcrb pop popa sub add jnp add add sub add or cli add add jmp push jge add add cmp add add or sub cwtl jmp or inc push add add add jno add mov (bad) jmp (bad) (bad) inc (bad) (bad) call sub add and add sbb add add (bad) (bad) call sub add es add add jnp add add or sub add and add sbb add add (bad) (bad) jmp sbb jne dec and push and and jnp (bad) ljmp pop and mov mov andl push cmp (bad) (bad) lcall idiv (bad) lcall sub pop inc add add idiv (bad) jmp pop and inc cmpsl aam and cmp (bad) (bad) incl jnp add add jnp add add jnp add add sub add sub sbb add add (bad) (bad) (bad) call add add (bad) (bad) lcall (bad) lcall add add (bad) (bad) jmp add sbb rolb jnp add add jnp add add push (bad) (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) jmp sbb lods sub add adc push add add push add adc add push sub add and add and add sbb add add (bad) (bad) call sub add es xchg add add mov sub and or dec and push inc pop add add inc add add idiv (bad) lcall or ss cmp cmc pop test popa and inc or add xchg add add (bad) (bad) call add add add out add and add adc add adc add jg add sbb sub call sub and lea mov and and in sub mov add add or add mov add add add add (bad) (bad) call add add (bad) pushl add add add add add add add push add add or sub sbb add add (bad) (bad) jmp cmp add push add add add cmc add add inc add add idiv (bad) call sub add and inc add add idiv (bad) jmp or clc mov or mov popa cmp (bad) (bad) incl pop decb add pop or push cmp call inc add add idiv (bad) jmp and adc cmp (bad) (bad) incl add add add scas (bad) (bad) lcall inc add add idiv (bad) lcall cmp (bad) (bad) decl and sub and cmp add add add or cmp pop or push (bad) (bad) incl jnp add add pop pop pop or cmc (bad) (bad) incl jnp add add jnp add add ret lcall inc add add idiv (bad) lcall or sar (bad) decl and push inc adc cmpsb out int3 in cmp (bad) incl sub add push cmp mov fisub sbb and enter popa cmp (bad) (bad) incl jnp add add and add or pop jge add add loopne jnp add add and xchg pushf sbb insl (bad) (bad) jmp imul popa and lret movsb sub (bad) ljmp add add xor sbb add push add adc add push sub add and add and add sbb add add idiv (bad) call sub add es and out add add add add jnp add add inc sbb add (bad) (bad) ljmp xor or inc pop add add add sldt add add insl add add add add add add push sub sbb add add (bad) (bad) jmp and sub and mov and add cwtl pop popa sub add arpl add sbb scas and mov and pop inc add add fdivr (bad) call add sar (bad) ljmp (bad) (bad) cmp (bad) jmp sbb cmp (bad) lcall inc add add idiv (bad) jmp add add add and add or pop jge add add loopne pushf sbb cmp (bad) lcall inc add add idiv (bad) jmp pop and and mov sub add xor add add add add adc add push sbb lods add add cmc pop repz fdivrs or pop inc add add pop add add add roll add fdivr (bad) lcall cmp les cmp test jne es and popa sub push add add add or push es sbb add (bad) (bad) call sub add es add add pop pop pop or push sub add and inc add add idiv (bad) jmp push sub sub add add add xchg sbb add add idiv (bad) ljmp and or inc pop add add (bad) (bad) pushl (bad) (bad) lcall incl add add (bad) call push (bad) (bad) jmp sbb sub sbb add (bad) (bad) jmp pop and pop dec es and and popa cmp (bad) (bad) incl jnp add add loopne sub add add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor push add add add add add push add add outsl adc add sub add xor add add add add add add push add push add or add xor add add add add sub es add jge add add adc or js add add add sub es sbb sbb add and (bad) shll daa cmp xchg add add push and inc push jns and adc popa cmp and add pop jge add add cmp add add sub add add jge add add jb add and add and inc add add idiv (bad) call sub add es cmp test mov sub add add pop jge add add cmp jnp add add xor sbb add add idiv (bad) call sub (bad) mov scas and and or add dec (bad) (bad) incl add add add push (bad) jmp (bad) (bad) dec (bad) (bad) lcall push and inc add add idiv (bad) jmp push and adc and add lods add add add or (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) lcall pop inc or add pusha (bad) (bad) ljmp (bad) (bad) ljmp (bad) (bad) push (bad) (bad) decl (bad) (bad) stc (bad) (bad) incl add add sub push and jmp pop and cmp (bad) ljmp push and push inc fs and cmp adc or sub add add add sub es add jnp add add aaa pop sbb add add (bad) (bad) call sub add es or add add adc or sub add add add sub es add jnp add add aaa pop sbb add (bad) (bad) call sub add es or add jge add add adc or sub add adc add push add jnp add add aaa pop sbb add add (bad) (bad) call sub add es or add or add add add add xor add add add add adc add push add add add incb xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add adc add push sub es add addl push sub adc or and add add add sub es sub add and add and add and add add addb push and adc add add adc add push jle add add push and stos mov fldenv adc pop or inc or add mov add add add add add add add add add rolb add add add add add add cmp add pop adc and push mov pop and lods lahf lds mov add add add leave add add add add add add add add add dec add add add add add jmp add add xchg xchg cmp (bad) call adc loop mov and rcll (bad) call or xor dec test and cmp (bad) call push and and adc add leave jge pop and push repnz popa cmp (bad) (bad) call pop pop inc xchg and add pop adc les (bad) (bad) (bad) call jbe add and lahf fistpll out (bad) (bad) call or sar call (bad) incl popa pop imul add sbb mov enter adc and and aaa xor popa cmp sub add pop or add incl mov add sbb jp add and pop popa xchg and add incl pop pop or sub add mov or jle add add je xor add je add pop jle popf pop pop xor sbb add add (bad) (bad) call sub add sbb add call pop push xchg and add pop sub sbb add incl sub add and pop jne and add pop adc incl add adc sldt add adc add push jle add add add sti and push mov pop or inc or add mov add add add add add add add add add add add add add add add add jle add add push adc and mov mov sub adc and and sub pop sub add add push lds (bad) call add or add sbb add add add add add add add add add add add incb add mov (bad) inc add add mov mov (bad) call pop and and dec add (bad) (bad) decl add popa sbb popa inc add add push add add out cmp cmp (bad) (bad) call ja add and in jo cmp (bad) (bad) call pop and and ss adc pop arpl pop adc mov int (bad) call pop and jne pop pop and jl popa cmp push and and inc add pop sub sbb adc add add add sbb mov add sbb add jnp add and add add pop pop or or add add jle add add xchg jle add add inc xchg pop and add add pop or add imul cmp (bad) (bad) decl sbb and inc add add idiv (bad) call sub add adc test add add mov sub pop sub adc xchg (bad) (bad) incl add adc or addl add add adc add push jle add add add sahf push inc insl and and pop inc or add add add add add add (bad) (bad) call add add add add test or cltd cli sbb sbb sub mov jbe lods adc int3 (bad) (bad) (bad) jp add movl add xchg add dec add add add dec add add add and jle sbb js (bad) call add ret lock pop adc mov js,pt popa (bad) (bad) call or mov out or mov cmp (bad) lcall and sbb pop and cmp (bad) incl push popa inc add add or add and dec fdivrs call sub xchg and add pop adc pop (bad) (bad) incl mov add sbb sub push push pop pop or lock add pop or cmp add pop sbb pop xor add idiv (bad) call sub add adc xchg add pop adc adc (bad) lcall adc adc inc add add add add add add add add add add add js add sub pop (bad) (bad) incl adc or popf add add add adc add push jle add add push cmp jns out and bound popa and pop inc or add push add add add add (bad) (bad) lcall add add add add add add add add movl inc or add xchg add add add add add add add add add add add add js cmpsb lock mov test sbb add (bad) call adc stos cmp (bad) call or push pop arpl add add mov dec (bad) (bad) lcall adc mov ficompl mov cmp (bad) (bad) call jns add and sub (bad) incl add pop xor add add sbb subl (bad) (bad) call pop and and cmp (bad) (bad) call sub or adc incl mov add sbb jge add and add incl pop pop or lock add or add sbb pop xor add idiv (bad) call sub add adc pop jo and xlat add pop adc call push pop sbb add pop sub pop sub add and add incl add adc or or add adc add push add test add and add xor add add add add adc add push add add test add and xor add add add add sub es add sub adc or or add adc add push add xchg add and add xor add add add add push add movsl add push and add xor add add add add add add push add sub sub add xor add add add add add add push add add adc add and or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add push add add or add xor add add add add add add push add add adc add and xor add add add add sub es add outsl adc add sub xor add add add add push add add or add xor add add add add adc add push sub es add xchg add push sub sbb push add add adc add push sub sub es add add add (bad) (bad) call sub add es xchg add push and inc add add idiv (bad) jmp adc add ret and nop jp popa sub add add popl add and sub add add (bad) (bad) jmp jle add add or push sub sbb add add (bad) (bad) jmp sub jle add add or mov adc add add (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) mov add add sub and out sar and inc add add jns (bad) ljmp (bad) (bad) ljmp test push sub add and add and add sub add sub add push or or data16 push and add push and add and add add adc (bad) and and inc add add add add add (bad) (bad) ljmp add add add add push adc add add inc add add add add add cmp add adc add and mov adc (bad) sub add and inc add add idiv (bad) jmp dec inc lret mov sub and ss and sub or outsb add push and add fcompl adc and enter cmpsb out sar and inc add add add add add add add (bad) (bad) jmp add sub pop inc push add add add push add add add push add add add pop add add jg adc add push and inc add add idiv (bad) jmp jge inc mov add sub add add pop adc and enter jne (bad) call or or pop sub pop sub add and add fcompl adc and cmp out sar and inc push add add (bad) (bad) ljmp add add add xor add add add insl add add imul inc push add add add add add add add data16 add add adc add and inc cmpsb lahf sub out pop cld sub add and inc add add idiv (bad) jmp popa adc sub and cmp (bad) call or mov and (bad) aad cmp (bad) call or xchg and in add pop sub add and add fmull sub add and add pop jle add add pop xchg jle add add and add pop popf sub add inc dec add add add std add add add add add add add add add testl add scas add add add add add add add add add add add add xor adc add adc add sub es pop (bad) add add or add add and add add sub cmp add add idiv (bad) call sub add cmp add add stos add add mov add es push cmp add add arpl rcll cmp add add push pop jno adc pop jno pop adc add cmp add mov add and cmp add add out add or sbb xor inc add add idiv (bad) ljmp sub sbb movsb add add adc add pop sub push and and and dec add pop adc add add push pop jno and adc add sub sbb cmp add and push mov pop adc and adc jo,pt sub add pop pop push popa inc add add loope add sbb add sbb add add (bad) (bad) jmp jle add add push push pop cmp add add inc add add idiv (bad) jmp and cmp add add dec mov dec and out xor pop or inc or add mov (bad) (bad) ljmp (bad) (bad) (bad) mov add add add push add add (bad) call add add sub cmp (bad) (bad) lcall idiv (bad) jmp pop adc cmp inc add add idiv (bad) jmp cmp add add pop pop or or cmp add sbb add add (bad) (bad) jmp and add cmp (bad) call pop and sub addr16 imul pop or push jle add add pop or and sub ret iret jns les cmp (bad) lcall adc pop cmp pop and and adcl (bad) (bad) lcall sub pop or add lcall movlps adc inc adc (bad) (bad) pushl (bad) jmp (bad) (bad) jmp std (bad) call (bad) (bad) lcall (bad) decl add add std (bad) call add lcall incl (bad) lcall std (bad) incl std (bad) ljmp incl (bad) (bad) jmp add add push sub sbb add add idiv (bad) jmp and push addl call add add add add std (bad) (bad) mov add add (bad) (bad) mov std (bad) decl (bad) (bad) incl (bad) dec (bad) (bad) incl std (bad) lcall or push (bad) (bad) call pop and xor out mov inc (bad) (bad) call or or xor (bad) ljmp movsb adc or sub add adc add push sbb add scas add add sbb add aas mov add sbb add add (bad) (bad) call sub add sub sbb mov add cmp pop pop or cmp or pop adc cmp inc add add idiv (bad) jmp and add adc sub cmp add sbb add add (bad) (bad) jmp and push sbb into add add mov add es pop adc pop cmp add push cmp add adc pop pop xchg and sub pop sub adc pop adc add add pop pop or and sub and (bad) add add or or add adc sub add sub adc adc inc push add add add add (bad) (bad) incl (bad) pushl add roll add add jae (bad) inc (bad) (bad) call add jle (bad) jmp (bad) (bad) decl add add (bad) (bad) fldl add sbb (bad) push (bad) (bad) (bad) call add add add add xchg add push and add and (bad) lcall add (bad) (bad) jmp pop push cmp (bad) (bad) jle add add or or push and (bad) lcall inc add add idiv (bad) jmp adc push xchg and dec add pop adc sbb dec (bad) (bad) call or ss push push in popaw cmp or push inc dec add or add add or jle mov rcrl add pop and and add pop adc and mov or sub es (bad) (bad) call inc add add idiv (bad) jmp sbb push pop adc xchg add push and (bad) lcall inc add add idiv (bad) jmp and jae sub adc pop or mov (bad) (bad) cmp add dec pop push popa inc add add mov (bad) lcall or cwtl (bad) (bad) jmp inc sub dec and pop imul pop inc or add xchg (bad) (bad) lcall std (bad) decl add add add (bad) incl (bad) lcall (bad) jmp (bad) (bad) (bad) mov sub cmp (bad) lcall add (bad) (bad) jmp and inc push sub cmp and xchg add push and sbb or push mov mov cmp (bad) call push inc or add (bad) (bad) pushl (bad) lcall std (bad) ljmp std (bad) pushl (bad) ljmp (bad) jmp (bad) (bad) lcall movaps es std (bad) lcall add (bad) (bad) jmp sub or add add add sub es jae add or add adc or or add add add sub es add xchg add push sub adc or or add add add sub es sub sub xor add add add add add add push add sub sub add xor add add add add add add push add add lret add push and or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add push add pop add or add xor add add add add add add push add add or add xor add add add add push add sbb add and add xor add add add add adc add push sub es add mov add xor add add adc add push sub es sbb incl add pop or adc testb add (bad) mov clc cmp add sbb adc lahf add push and add sbb add add (bad) (bad) call sub add es mov and cmp add sub add and add popf sbb lahf add push and add sbb add (bad) (bad) jmp jle add add add or addb add add cltd pop and sahf popa cmp add add inc or add push add add add add add mov add add add aam add sbb push and inc add add idiv (bad) jmp and inc jge cmp cwtl add push es sub adc lea gs push loopne cmp or add add adc adc inc sbb add gs (bad) call add add add add add (bad) jmp add add (bad) lcall add add add pop add add add or (bad) decl add add add add add add mov add clc add add (bad) (bad) lcall add add adc dec or sub push sub add and pop add popf pop pop cmp (bad) jmp out and mov in popa and pop inc adc add add (bad) (bad) ljmp add xchg (bad) (bad) call (bad) lcall add sbb add addb add (bad) (bad) jmp add add add add add add add add add (bad) (bad) (bad) cmp add sti add add or push and (bad) lcall inc add add idiv (bad) jmp adc xchg pop and lods mov (bad) (bad) call add xchg add add add pop or lret jmp ljmp (bad) incl sub add and adc add (bad) (bad) lcall add (bad) (bad) jmp adc lock and jo popa cmp (bad) (bad) incl sub add and add push cmp (bad) (bad) cmp pop xchg and or cmp (bad) (bad) jle add add pop movaps cmp (bad) lcall inc add add idiv (bad) jmp adc fcompl fidivrl push popa cmp sub add and and push std (bad) jmp pop or adc (bad) call add add and jo xchg popa cmp dec sub push and add add sahf add push subb loop (bad) call add sbb push or pop (bad) (bad) incl sub add and sub add std (bad) jmp iret sub (bad) incl sub add and or add cwtl std (bad) lcall inc add add idiv (bad) jmp and inc jge cmp (bad) (bad) lcall sub push and je (bad) jmp std mov movsb cmp std (bad) lcall or pop add push and add lahf add push and add and (bad) lcall inc add add idiv (bad) jmp pop cmp std (bad) ljmp adc and and pop pop gs cmp add sub and lcall popa cmp sub add and sbb add cld (bad) jmp mov cmp incl sub add and sub add cld (bad) jmp mov pusha std (bad) ljmp add add xor add add adc add push add pop add push and jmp add and add sub add adc or add add adc add push pop adc add adc cmp add add nopl xchg and add pop sub adc pop add push and add and sub or push cmp add add or cmc adc pop punpckldq or jo add and pop pop adc adc sbb inc add add idiv (bad) call sub add es adc push pop or add add or pop adc pop adc push cmp add adc pop adc add add pop adc inc and add add add jle add iret (bad) (bad) (bad) stc (bad) (bad) call add add add cmpsl add add (bad) (bad) cmp (bad) (bad) call add add add add add add add add add add add test add add add add add lea add push add add add add add add add add add xor add inc (bad) (bad) call add add sub cmp (bad) call inc add add idiv (bad) jmp cmp add pop add push and or jo add and pop pop adc pop xchg popa adc sub add and or pop adc or popa shrl pushf add push and cmp adc mov and adc pop and cmp (bad) (bad) call inc add add idiv (bad) jmp adc and and sub add push sbb cmp (bad) (bad) lcall inc add add idiv (bad) jmp adc and and cmp add add adc and add add push inc adc add xchg add add add add (bad) dec std (bad) ljmp add xchg add add add add std (bad) pushl add add add (bad) (bad) pushl (bad) (bad) incl (bad) pushl add add sbb dec (bad) (bad) lcall adc pop or cmp (bad) (bad) lcall add (bad) (bad) jmp adc and add bound jno (bad) es cmp lcall sub cmp inc add add idiv (bad) jmp adc pop pop pop adc and incl add arpl pop pop or cmp std (bad) lcall inc add add idiv (bad) jmp pop adc cmp add add pop sbb cmp std (bad) call inc add add idiv (bad) jmp adc and pop pop mov xor popa cmp add add adc sti (bad) (bad) decl sub add and jo add and add jo add and adc adc sub sub es sbb add add (bad) (bad) jmp pop push cmp (bad) ljmp mov adc es and cmp add add and xor popa add pop sub cmp inc add add idiv (bad) jmp and xchg lret and xchg mov add sbb or test pop sti cmp add jle add add adc and cmp cld (bad) call inc add add idiv (bad) jmp cmp call or pop ds cld (bad) lcall inc add add idiv (bad) lcall cmp cld (bad) jmp push mov add jle add add pop add push and or add add idiv (bad) lcall adc sahf cld (bad) (bad) cmp std (bad) call push pop and sub (bad) lcall inc add add idiv (bad) lcall cmp (bad) jmp inc std pop jecxz jmp sub push cmp (bad) call or jo add and adc cld (bad) (bad) cmp or jo add and add and pop sbb xor or push add push and pop xchg adc push cmp cld (bad) call adc mov add xchg adc and pop adc pop and add (bad) call nopl and add pop adc sbb cmp sti (bad) lcall add (bad) (bad) jmp cmp fwait add push and push pop cmp sti (bad) lcall inc add add idiv (bad) jmp pop or push sbb mov (bad) decl sub add and or sbb pop popa or pop push cmp add add idiv (bad) jmp and test and nop xchg sti popa and pop inc or (bad) (bad) jmp add add std (bad) incl jmp std (bad) pushl (bad) (bad) (bad) call std (bad) pushl add add (bad) (bad) incl cld (bad) lcall sbb cmp sti (bad) lcall idiv (bad) jmp adc and or dec pop and imull popa sub fwait pop add or test sub adc or (bad) lcall adc pop sbb (bad) jle add add pop add push and push add push and cmp cli (bad) (bad) jle add add nopl sub es cli (bad) lcall inc add add idiv (bad) jmp cmp cld (bad) decl sub add and adc or or add add add sub es jae add or add adc or push add add add adc add push add sub sub add xor add add adc add push add add or add xor add add add add sub es add sub add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add add add push add outsl sbb add and add or or add add add push add add or add sub add adc or sldt add add adc add push sub es add stos add push sub adc or sbb add add add sub es and out add je add and add add cmpsl add push sub xor add add add add adc add push pop adc fldl add push pop pop or or push and add sbb add (bad) (bad) call sub add cmp pop adc and or pop and or add add push popa inc add add cmp add sbb add push inc add add add add add add add inc add add (bad) add add jg push or inc pop or sub aaa push sub adc xchg and inc add pop or push and add and add sbb add add (bad) (bad) jmp push cmp add add cmp dec loope popa and pop inc or add (bad) (bad) (bad) incl (bad) (bad) lcall (bad) (bad) decl add add add cmp (bad) lcall adc test es add add inc add add idiv (bad) jmp sbb add add inc add add idiv (bad) jmp add add and add add and and add add pop or cmp xor add add or test add cmp add add sbb dec sbb add add idiv (bad) lcall or insl and jg cmp (bad) call pop and jl int popa cmp (bad) (bad) call or sub cmpsb add push es adc sub sbb add add idiv (bad) jmp sbb add sub sub adc pop adc sub add add (bad) (bad) jmp cmp add test add cmp (bad) (bad) lcall adc or or add add (bad) lcall add mov (bad) jmp (bad) (bad) incl add add add add (bad) (bad) call (bad) call add add (bad) incl add add (bad) (bad) incl (bad) jmp (bad) (bad) clc std (bad) jmp (bad) (bad) lcall (bad) (bad) incl sub cmp (bad) (bad) jmp pop or lcall pop and adc test sbb fs (bad) decl inc or add inc (bad) (bad) pushl (bad) call (bad) (bad) ljmp (bad) (bad) pushl (bad) pushl std (bad) incl (bad) ljmp (bad) (bad) incl (bad) (bad) lcall push cmp (bad) jmp pop or dec cmp or add and (bad) lcall inc add add idiv (bad) jmp sub test (bad) incl add adc or or add add add sub es add sub xor add add add add sub es add sub add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add push add add or add sub add add or or add add add push add add sbb add add xor add add add add adc add push sub es add rolb push sub adc push add add sbb add sub es and add add pop add add mov add add add add add push and mov and add add or add sub add sub add and inc add add js add sub add and add and add and mov add and add sub xor add add adc add push jle add add add jp mov jno popa and pop inc or add scas add add add pop add add add add add add (bad) (bad) ljmp add add lds add adc and add ret popa sub or mov and jns add lahf adc jp add cmp add flds add pushf add add add flds add pop add add add add lcall (bad) (bad) jle add add push adc and and cmp (bad) lcall and push dec pop and cmp (bad) call or enter cmp (bad) (bad) call add test add add arpl out cmp (bad) (bad) incl pop push popa inc add add or add and std (bad) (bad) lcall sub adc inc jecxz add add dec (bad) (bad) incl mov add sbb sub pop pop or mov add or dec or mov sbb pop xor add idiv (bad) call sub add adc pop pop xchg and adc (bad) (bad) (bad) lcall adc adc inc add add add add add add add add add add add mov add sub pop (bad) (bad) call xor add add adc add push jle add add add add stos push mov jl popa and pop inc or add adc add add (bad) (bad) incl add add add add add add add add add add fiaddl add adc and mov jge aad sub and mov pop inc pop push popa inc add add lods add add pop dec sub sub add add add fildl add movsl add add add add add add add add add mov (bad) jmp push dec (bad) (bad) call push and ficomp stos add or ss (bad) call mov add es (bad) repz cmp (bad) (bad) call or in jecxz out sbb (bad) call add stos in add pop adc push and and lcall (bad) lcall and lahf insb js and cmp (bad) (bad) lcall or xor (bad) (bad) jle add add push adc inc (bad) (bad) incl mov add sbb mov add sbb mov or adc sub (bad) incl pop pop or or pop adc adc (bad) decl sbb sbb inc add add idiv (bad) call sub add sbb add hlt (bad) (bad) lcall or cmc pop sub add inc add add add fdivr (bad) incl adc or scas add add add sub es pop adc dec add add aaa add add add sbb popa inc add add daa add add push cmp add add inc add add idiv (bad) call sub add es inc add add add add add add add add lock add pop adc testl pop or or cmp add add inc add add idiv (bad) jmp jle add add push sub es sbb add add (bad) (bad) jmp pop or add sbb add add (bad) (bad) jmp adc xchg add add add cmp sub pop or or xchg add add cmpsl add add sub cmp and pop sub sbb add add (bad) (bad) lcall or sub add add (bad) (bad) jmp push or push sub xchg test and dec fidivr and pop inc or add loopne add cmc add add (bad) (bad) inc (bad) (bad) jmp add add add add add add push or sub pop cmp add add or jne (bad) lcall adc or or add add add add (bad) ljmp add add (bad) (bad) call (bad) (bad) call (bad) ljmp (bad) (bad) lcall (bad) (bad) call (bad) lcall (bad) jmp add stos (bad) (bad) jmp (bad) (bad) (bad) incb add pop or mov es sbb add add (bad) (bad) jmp or sub pop or sub mov cltd mov cs cmp (bad) (bad) call pop and and cmp (bad) (bad) call or sub cmp (bad) lcall add (bad) (bad) (bad) cmp (bad) jmp popa fwait mov jmp (bad) decl pop xchg and or cmp in cmp (bad) (bad) (bad) jle add add add cmp (bad) (bad) ljmp xor sbb push sbb (bad) (bad) call mov add es adc add (bad) jmp in popf sahf imul adc and inc inc pop and ficom popa cmp inc or add push (bad) (bad) ljmp (bad) (bad) lcall (bad) (bad) inc std (bad) lcall (bad) call (bad) ljmp (bad) (bad) ljmp (bad) lcall cmp cmp (bad) incl adc or fiadd add sbb add push pop movhps add add (bad) (bad) call sub add es mov cmp or push inc addr16 and jns outsl popa cmp mov add es or sub adc pop inc outsb scas cmp cmp add add add add cmp movlps adc inc push add add add add add add add add add push (bad) (bad) ljmp add (bad) add add add jnp (bad) call add add add add add add add add add add add add add in add lods add add add add add add sub add sub sub add and add sub push pop pop or adc ja (bad) ljmp and mov or cmp (bad) lcall adc (bad) jmp xchg (bad) dec mov add add add add sub add inc add add add add (bad) (bad) pushl (bad) (bad) call (bad) (bad) dec add add cmp (bad) (bad) jmp pop push jne cmp add and popa inc add add in (bad) call cmp (bad) (bad) (bad) cmp (bad) (bad) call or push cmpsl test pop and push sbb fbstp or push and (bad) lcall inc add add idiv (bad) (bad) cmp pop pop pop xchg and add pop adc jmp pop push cmp sti add add cmp mov mov xor and pop inc or add data16 (bad) incl (bad) (bad) pushl (bad) call (bad) (bad) (bad) aas (bad) (bad) decl (bad) inc (bad) (bad) incl (bad) (bad) lcall adc push (bad) (bad) jmp out add or sbb xor inc add add idiv (bad) lcall or mov cmp (bad) lcall inc add add idiv (bad) jmp adc and and adc (bad) (bad) call adc call pop pop cmp and add pop sub sbb add ljmp add add (bad) (bad) jmp jle add add push pop adc mov es std (bad) lcall idiv (bad) jmp jle add add pop sub sub es (bad) (bad) lcall inc add add idiv (bad) jmp pop or xchg std (bad) (bad) cmp (bad) (bad) incl add xor add add adc add push add add push add or add add xor add add add add sub es add sub add push sub xor add add add add adc add push add sub add push and adc or or add add add sub es add sub add push sub xor add add add add sub es add sub add push sub xor add add add add adc add push add add lds add and xor add add add add adc add push add movb push sub adc or or add add add sub es sub add push and or sldt add add add add push add add mov add and xor add add add add push add fildl add and add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add sub es add outsl pop add or add or push add add add add add push add outsl and add and add or or add add add sub es add outsl and add sub xor add add add add sub es add sub add or add or sldt add add add add push add add and add and xor add add add add sub es add sub add sub xor add add add add push add and sub add adc or sldt add add adc add push sub es add leave add push sub add or or add add add sub es add push add or add xor add add add add adc add push sub es add aam add sub sbb push add add add add adc add push pop sub add push and add sbb add add (bad) (bad) call sub add es push add add add sub add push and inc add add or mov add and inc or add pop add add add add add add (bad) pushl add add add add rolb add and add sbb add add idiv (bad) jmp and mov sub add and add and add sub sub add push and add sbb add (bad) (bad) jmp and js (bad) call or add and lea incl sub add and mov or add and add add push add sub (bad) es sub mov inc push add add (bad) (bad) jmp add add (bad) (bad) (bad) mov sub and adc (bad) call or (bad) mov jno cltd lock cmp (bad) (bad) incl and out add sub add sub sbb or or add add (bad) decl (bad) (bad) call (bad) (bad) js (bad) call (bad) (bad) jle (bad) lcall add add sub add push and (bad) lcall idiv (bad) jmp sbb shlb in mov cmp int3 add add adc lock and inc push add add (bad) (bad) (bad) jle add das add add add add add add jns add adc add add add add add add pop add add add add add jae add and mov or sbb mov pop and sub add and inc add add idiv (bad) jmp pop aad mov or fbld (bad) call push pop push xchg and adc ret (bad) (bad) call push and and sub push sub add and add fcompl adc sub sbb or or add add add add std (bad) incl add add add add add add add sub sbb fsts or add add add add add add push sub pop inc add add idiv (bad) jmp jle add add push pop pop sub add add (bad) (bad) jmp pop sub add and add or xor add or jle add add fs pop and add add sub add add add cmp add outsl add add add add add add xor add add adc add push jle add add add fsubl (bad) xor or or or add add add add add add mov add (bad) (bad) (bad) decl add add add add mov add push or or jge sub mov mov add xor add or dec cmpsb lock nop stos popa sub add push adc and and mov jl (bad) lcall adc or pusha jns mov cwtl hlt popa cmp (bad) call add or add or add sub add jne (bad) incl add cmp add sub add jne (bad) pushl add add test xor (bad) incl popa pop push pop push popa inc add add or add and push (bad) (bad) lcall lcall adc movsl add rolb add push pop pop or test pop inc or jecxz add pop sbb pop xor add idiv (bad) call sub add adc pop xchg and in add pop adc pop (bad) (bad) call add add add xchg jle add add jno cmp add jno add jl sahf pop sub sub adc adc inc add add add add add add add add add add add int3 add push sub ds (bad) incl add adc or mov add adc add push jle add add add mov dec ja pop popa and pop inc or add mov add add add add add add add add add add add (bad) add add add add in add adc mov xchg mov and stos or add add add add add add add add add add add add add iret add add add add add add ret push push (bad) lcall or inc dec adc and dec popa cmp incl push popa inc add add insl add add lcall (bad) call or pop cmp int add and mov (bad) call or or cmp (bad) (bad) call add add sbbl xchg popa cmp (bad) (bad) call add pop pop and inc jg popa cmp (bad) (bad) call add in pop and imul or lcall adc jno and or incl mov add sbb sub add push and cmp (bad) (bad) incl pop pop or sbb sbb inc add add idiv (bad) call sub add es cmp (bad) (bad) call add mov add xchg and dec add pop sub sbb incl sub add and cmp add adc or or add adc add push add add add or add add xor add add add add adc add push add aad add sub adc or or add add add sub es add (bad) add push sub adc or push add add add adc add push add sub add push and add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add add add push add add or add xor add add add add add add push add add or add xor add add add add add add push add outsl and add and adc or cmpsl add add add adc add push sub es sub add push and add and inc add add idiv (bad) call sub add es and mov jmp or pop inc add add push add add add add (bad) (bad) ljmp and or inc push add add (bad) (bad) incl add add add add add add adc sbb sub sbb add add (bad) (bad) jmp sub add fiadd add sbb movb jecxz add pop sub add and adc sub adc or movl add sub es sub es sub add push and add and inc add add idiv (bad) call sub add es in add and inc add add idiv (bad) jmp sub add loopne add sub or inc pop add add add add add add (bad) (bad) incl add add add add add add add sub sbb flds and xchg add and sub add fiadd add sbb roll jecxz add pop pop sub add add (bad) (bad) jmp and fnstcw pop and loopne popa and add add loopne (bad) inc (bad) (bad) incl sub or mov add add add sub es push sub add push and add sbb add add (bad) (bad) call sub add es inc cmp add add pop add add out add and add sbb and jmp imul mov pop inc add add loopne (bad) decl add (bad) (bad) (bad) ljmp rcrb pop inc push add add add add add add add add (bad) (bad) lcall add add sub sub add push sub sbb add add (bad) (bad) jmp push and and std into popa sub xor add add add add adc add push sbb add adc or sub add add add sub es sub add push and add and add add or add and add push and add sub add xor add add adc add push pop or mov add adc test sqrtps je mov add sbb and push (bad) cmp add add inc pop add add add add add add add data16 add add roll add dec add add sbb add add add ljmp pop add add add add inc jle add add inc xchg jle add add dec xchg pusha and add add pop or xor add and std fwait shlb push lods iret and add or pushf add add add insl (bad) (bad) incl jnp add add dec sbb add add (bad) (bad) call sub add es cmp add add lret jle add add push sub add push and add sbb add add (bad) (bad) (bad) cmp add add pop pop xchg or pop xchg pop or and (bad) lcall sub add add add loope add sbb push and add sbb add add (bad) (bad) (bad) cmp xor add sbb (bad) add add in insl mov mov and inc push add add (bad) (bad) ljmp call (bad) (bad) (bad) cmp add mov (bad) inc (bad) (bad) lcall or push sbb sub add push and add and (bad) lcall inc add add idiv (bad) jmp sbb sub pop inc add add idiv (bad) jmp and test jmp (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) lcall or add add add (bad) (bad) call (bad) (bad) call (bad) call (bad) call (bad) jmp (bad) (bad) pushl (bad) (bad) cmp (bad) ljmp (bad) (bad) fdivr (bad) call add add sub add push and inc add add idiv (bad) ljmp mov add adc or adc add add add sub es add loop add and add add adc or or add add add sub es add jmp add sub adc or or add add add sub es add sub add push sub xor add add add add adc add push add in add push sub adc or or add add add sub es jae add or add add or or add add add sub es add sub add sub add or push add add add add add push pop sub add xor add add add add add add push push sub add sub es add pop add push sub xor add add add add add add push add add mov add and xor add add add add push add jne add and add xor add add add add push add add cltd add push sub add add or or add add add sub es add sub add or add or or add add add sub es add add or add xor add add add add sub es add outsl sub add sub xor add add add add add add push add add or add xor add add adc add push sub es sub add push and add and inc add add idiv (bad) call sub add es sub jae add push jge add add adc sbb sub add add (bad) (bad) jmp add hlt add push sub sbb pop inc push add add (bad) (bad) incl add add (bad) (bad) (bad) mov add add sub add lock push sbb xlat sub add adc verr add add add adc add push pop or sbb cmp add add sub add add add xor add icebp add push cmp add sbb inc jle add add push push sub pop inc add add idiv (bad) call sub add es dec dec in cmp add add ret add add idiv (bad) (bad) cmp adc add or add stos (bad) (bad) incl add add (bad) pushl add xor add out add add (bad) incl add add add sbb int3 or inc xor in and (bad) je cmp add add sbb add and flds add or sub adc push popa popa cmp add add inc pop add add (bad) (bad) call add (bad) (bad) call (bad) (bad) call (bad) call sub add push and (bad) lcall idiv (bad) jmp and sub push and dec jle and sbb add jle add add jle add add xchg jle add add inc xchg pop and add add pop cmp (bad) incl jnp add add xor add scas (bad) (bad) lcall inc add add idiv (bad) ljmp testb push and add and (bad) lcall inc add add idiv (bad) jmp sbb loopne (bad) incl add testl cmp (bad) (bad) jmp loopne adc and or add add (bad) (bad) lcall (bad) decl add add (bad) (bad) call (bad) (bad) (bad) call (bad) (bad) lcall cmp (bad) (bad) lcall pop cmp adc or dec add add add adc add push sbb add add inc add add add add and add or add sbb add sbb cmp lcall or fadds add es sub and sbbl push add repnz push and add add sub add and add lret add add or add jle add add add pop add add (bad) (bad) jmp add add add add add add sub and mov (bad) les or add add call add sar (bad) decl (bad) (bad) jle (bad) incl add add sub testb push and (bad) lcall idiv (bad) call sub add es je (bad) jmp add mov add add mov add sub add sub or push (bad) (bad) jmp inc dec mov sbb inc mov xor push add add add add clc add push and add sbb sub (bad) decl and in adc pop and push add dec (bad) (bad) ljmp add xor add add add add adc add push add stc add push sub adc or or add add add sub es jae add or add adc or or add add add sub es add sub add push sub xor add add add add add add push add add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add sub es add sub add or adc add add add sub es add add lcall add or or add add add sub es add add or add xor add add add add sub es add outsl das add or adc push add add adc add push sub es sub add and add and add sbb add add (bad) (bad) call sub add es push and add sbb add add (bad) (bad) jmp and add add sub add and and mov xor sub mov sbb add add add add add mov sbb add add add add add mov and xor and add add add add add mov mov xor or add add add sub mov cmp xor and add add add add add mov xor add add add add add mov aas mov xor add add add add mov add dec add add add add (bad) decl add add add add add add add add add sahf add add add sub add push and inc add add idiv (bad) jmp and mov cmp pop push sub sbb add add (bad) (bad) jmp and add add incb add and add or add add and (bad) lcall inc add add idiv (bad) jmp cmp add add inc add (bad) (bad) jmp (bad) jmp add add cmp (bad) call or sub add push and (bad) lcall idiv (bad) jmp and jmp out sub or repz iret pop and push pop sbb daa sbb add add add add add add xorb add or stc (bad) (bad) jmp sbb int3 mov out and inc or add adc add xchg (bad) (bad) call (bad) (bad) ljmp (bad) (bad) call (bad) jmp std (bad) incl add (bad) (bad) (bad) cmp (bad) jmp sbb mov (bad) jmp push mov add incb xor add jae add or or add and add and add cmp sbb mov add xor add add add add adc add push sub add push sub add push sub adc or add add push sbb stos add add add icebp pop and cli and cmp add jns and (bad) ljmp add add add enter and popf add add lahf add add or add and sub flds add adc sub es insb inc sgdtl add inc add add idiv (bad) call sub add es or xor imul std cmp faddl add and incl add and adc cmp mov add adc inc sbb push adc inc push add add (bad) (bad) pushl add add (bad) (bad) ljmp add add add add add add add addb add ljmp add add add add sbb and and cmp add or add pop (bad) (bad) ljmp (bad) (bad) call add (bad) (bad) (bad) decl add add add add (bad) ljmp add add sub add push and (bad) lcall inc add add idiv (bad) jmp and movsb aad pop sbb add adc push and add and add sub add push pop or inc (bad) (bad) jmp or jmp cmp fldenv adc sub add push and (bad) call inc add add idiv (bad) jmp push cmp (bad) (bad) jmp adc push mov pop or inc or add jno (bad) inc (bad) (bad) (bad) mov add add (bad) (bad) jmp (bad) pushl (bad) incl (bad) lcall (bad) (bad) pushl (bad) decl add pop or (bad) (bad) (bad) lcall adc cmp iret (bad) and add and incl add and add push and xchg (bad) (bad) call add sbb ss insb popa cmp (bad) lcall cmp (bad) (bad) ljmp add add pop or ljmp add adc or or add add add sub es jae add or add add or sldt add add add add push add add mov add and xor add add add add add add push add add mov add sub add xor add add add add add add push add add add push and sub es add fiaddl add sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add add lcall adc or adc add adc add push sub es add sgdtl push add or add sub add adc or push add add add adc add push push pop and add add int add sub add sub add xor add add add add adc add push sbb push add push and add sbb add add (bad) (bad) call sub add es ja and add sub inc pop add add add dec add add add add add add add add cmp add add (bad) add add sub add add (bad) (bad) lcall sub cmp add add idiv (bad) jmp and inc or sbb add jle (bad) pushl add sar (bad) ljmp add add add add cmp add or aad add pop and fldt or push ret jl and ja fsubl mov or mov add sub add add add lahf add add inc add add idiv (bad) ljmp push add push and add and add sbb add add idiv (bad) jmp push sub and int cmp gs (bad) lcall sub add or add and add mov (bad) (bad) incl add cld (bad) (bad) incl add add add add add (bad) (bad) lcall lcall add pop or lret jle add add sbb push add push and inc add add idiv (bad) ljmp scas or push xchg and or movsb (bad) (bad) call sub add add add or add sub sbb mov add adc add pop or cmp lcall inc add add idiv (bad) jmp sub add adc or roll add add add sub es push sub cmp inc add add idiv (bad) call sub add es pop sub add add (bad) (bad) jmp cmp pop and add add lods add add or add sbb or es add add (bad) (bad) jmp and xchg xchg pusha js and add add push add add (bad) (bad) ljmp and or inc push add add add add add add add add (bad) (bad) jmp add add xchg sbb sub add add (bad) (bad) jmp add or add and add sub push and cs pop and repz popa sub or or add add add sub es add adc add sub adc or or add add add sub es jae add or add add or sldt add add add add push add add push sub add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add cmp add sub add or or add add add sub es add sub add or add or or add add add sub es add add or add xor add add adc add push sbb popl add jle add add add add add sub add push and add sbb add add (bad) (bad) call sub add es adc movsb add add add movsl inc add pop sub pop sub add and pop sub pop adc adc add or add adc and jnp ficompl cli adc in add add add xchg add pop adc jge pop jge aad add add popa pop pop pop push popa inc add add int add sbb add sbb add add (bad) (bad) jmp adc pop adc add add cmp add add adc add or jle add add sbb add add sbb pop jb popa and sahf pop cmp (bad) lcall inc add add idiv (bad) lcall sub add push and add sbb add add (bad) (bad) (bad) cmp add and cld adc sub add add pop adc sub add push and add sbb add add idiv (bad) jmp pop or cmp jnp faddl sub pop or add adc sub add and call push jns popa and pop inc or add scas (bad) (bad) (bad) ljmp pushl add mov add mov add mov add add add add (bad) (bad) dec add add (bad) lcall adc cmp add add inc add add idiv (bad) jmp sub push pop pop or lea add es cmp add add pop and aad mov add popa sub add add (bad) lcall add add add add (bad) (bad) ljmp add (bad) (bad) pushl (bad) (bad) lcall add (bad) lcall or add sbb add (bad) (bad) jmp and cmp cmp (bad) (bad) call adc add es or push add pop or sub cltd add adc or adc sub sbb add add (bad) (bad) jmp adc and and cmp (bad) (bad) call push pop push xchg and add pop cmp (bad) (bad) (bad) jle add add sub adc adc inc push add add (bad) (bad) ljmp add push (bad) (bad) pushl (bad) pushl add adc (bad) jmp std (bad) pushl (bad) (bad) incl (bad) (bad) js (bad) pushl add cmp (bad) (bad) ljmp add add (bad) (bad) (bad) fdivrp (bad) call add add std (bad) lcall (bad) (bad) jns (bad) jmp (bad) (bad) decl adc sbb add and inc add add idiv (bad) jmp sbb add adc sub sbb add add (bad) (bad) jmp and dec (bad) (bad) call pop and mov xor ret fsubl aaa (bad) (bad) (bad) jle add add push sbb sbb add and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) incl and xor (bad) call pop and lods cs and or push popa cmp std (bad) call or or adc (bad) (bad) cmp (bad) incl add xor jo add sub add sub es jle add add add int3 fimull lods xchg popa and pop inc or add xor add mov add push add add (bad) (bad) call add add add add add add mov or mov pop and (bad) dec popa sub pop and add add jl add and jmp sub rcrl pop and out fcomps popa sub jno xchg leave test xor ja (bad) decl inc or add pop add add add add add add add add add inc add add add add add inc add add nop stos cmp (bad) (bad) lcall or mov xor (bad) call or or mov call add test add xchg and add pop sub pop or add add add push push pop pop or add pop or add pop or or incl sbb sbb idiv (bad) call sub add es or call sub sub adc adc inc add add add add add add add add add add add adc add sub in (bad) (bad) call xor add add add add adc add push jle add add add adc add and cmpsb in pop popa and pop inc or add mov add add add add add add add add add add add add add push add add loope add sbb js mov add cli pop and push cmp mov add (bad) add add add scas add add add add add into add add add cmp add daa add add add into add add sbb popa (bad) (bad) call add in and jge es cmp (bad) lcall or ror pop and cmp (bad) (bad) call add test mov cmp (bad) (bad) incl add pop push pop push popa inc add add cmp add and or (bad) lcall or repnz pop and cmp (bad) (bad) call or test jle jmp adc add and mov (bad) (bad) lcall cmp (bad) (bad) (bad) jle add add adc pop xchg and add pop or incl mov add sbb pop add push and pop or pop or incl pop pop or and add add cwtl add add add add cwtl add add pop das xchg pop and pop sbb and inc add add idiv (bad) call sub add adc inc xchg and add pop or lcall sub adc and pop or incl sub add and or incl adc or or add adc add push add sbb add and add xor push add add add adc add push add add sub add push sub add xor add add adc add push add sbb add and add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add sub add or add or push add add add add add push add add outsl adc add sub add xor add add add add push add add or add xor add add add add adc add push sub es add push add push sub add or or add add add sub es add cmp add sub add or sldt add add add add push sub es add and add sub or or sldt add add add add push sub add push fiadd fiadd sub add add add add pop or add add add sub es add sub add sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add add add push sub es add dec add push sub add or adc add add add sub es sub es jae add or sub sbb or sti add add add adc add push sub add push sub add and add and add and sub or xor add and inc add add idiv (bad) call sub add sub pop or and or inc pop add add add add (bad) (bad) incl add add add add (bad) (bad) incl adc sbb sub sbb add add idiv (bad) jmp fnsave add push jb add jo das add push and inc add add idiv (bad) lcall push sub sbb add add (bad) (bad) jmp push jb add jo das add push and inc add add idiv (bad) ljmp xor add and add and inc add add idiv (bad) jmp sbb cmp (bad) lcall inc add add idiv (bad) jmp fiadd fiadd fiadd push sub sub add add add add lock add or xor add add add add add add push sub add push adc push sub add jae add or xor add fiadd fiadd sub adc add add sbb add xor add add adc add push pop or sgdtl add add sub add and xor add and add sbb add add (bad) (bad) call sub add es sbb add add sub add and add pop sbb movb add pop or outsl add push and aas pushf add add inc add add idiv (bad) lcall sbb mov adc pop or cltd add add add or pop sub adc cmp jnp add add cmp add and add sbb add add (bad) (bad) lcall sbb arpl adc pop pop lcall adc adc pop pop sub add and sub or pop lcall aaa sbb add add idiv (bad) jmp push adc pop sbb and push and add add add push and add and pop or push adc inc pop add add (bad) (bad) std add add add add add add (bad) (bad) push add add (bad) (bad) call (bad) call (bad) (bad) (bad) sti (bad) (bad) jmp add fdivr (bad) lcall add add add add add add (bad) (bad) pushl add add add add add enter jo (bad) (bad) jl add pop (bad) (bad) (bad) mov add add add add add add pop cmp (bad) lcall inc add add idiv (bad) jmp adc pop jp cmp add and push incb adc push (bad) (bad) lcall add (bad) (bad) jmp sub es sub add push and add and pop cmp (bad) (bad) lcall idiv (bad) jmp cmp (bad) decl adc lcall and inc add add idiv (bad) call pop cmp (bad) (bad) lcall inc add add idiv (bad) jmp cmp add add pop sbb pop sbb (bad) (bad) call or je cmp add and push incb adc pop adc cmp (bad) (bad) lcall idiv (bad) jmp adc or outsl add push and aas out add sbb add add idiv (bad) (bad) cmp add add pop (bad) (bad) (bad) call add sub add push and sti add add inc add add idiv (bad) lcall adc cmp (bad) lcall inc add add idiv (bad) jmp jle add or add push cmp (bad) call adc (bad) (bad) call add pop sub add push and sub add push and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) call add cmp add and inc add add idiv (bad) lcall or add (bad) pushl add jo sub push and adc pop sub adc sub add push and cmp std (bad) call adc pop or ljmp xor or pop adc pop pop cmp std (bad) (bad) cmp (bad) (bad) decl adc lcall and inc add add idiv (bad) lcall call add cmp add and add add inc add add idiv (bad) lcall (bad) std (bad) (bad) jle add add adc add push pop push cmp (bad) (bad) jle add add add inc add or inc add add idiv (bad) (bad) jle add add add inc add or sbb add sub add push and inc add push and or testb add inc add add idiv (bad) call or inc add push and adc je add and or or inc add push and sub sbb add add idiv (bad) call or push and lods add add push adc sub add add (bad) (bad) call or push and or pop adc fiadd es adc fiadd adc cmp add inc add add idiv (bad) pushl add jo inc add push and inc add push and sub adc sub add and adc adc dec add push and outsb sbb adc add add add add add add (bad) (bad) pushl add add add xchg add add add add add loopne add push sub adc adc jnp add add push add jo dec add push and pop sub add add (bad) (bad) jmp adc adc sub add push and xchg adc adc pop add push and add push sub pop or cmp (bad) lcall idiv (bad) jmp adc sub push push cmp (bad) call unpcklps sub add push and sub add push and (bad) lcall add (bad) (bad) jmp adc sub add and inc add add idiv (bad) ljmp xor add and add and inc add add idiv (bad) jmp sbb xor add and (bad) lcall idiv (bad) (bad) cmp (bad) (bad) call adc dec add push and add fiadd jle add add add push outsl inc add or push adc fimul or adc dec add push fcoml adc sub add inc add add add push add add add add add add add add add add add or add add add add add add add add add add roll add or add add add in add add add add add or or add add add push add and sub add add or or add add add push add add or add xor add add add add push add add or add xor add add add add push add add or add xor add add add add add add push add add push add push and xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add inc add or add xor add add add add sub es add outsl inc add or add or or add add add push add add or add xor add add add add push add pop add or add xor add add add add add add push add outsl dec add or add or push add add add add add push add sub add and add or push add add add add add push add outsl dec add or add or or add add add push add add or add xor add add add add add add push add outsl dec add or add or push add add add add add push add outsl dec add or add or sldt add add add add push add add dec add or xor add add add add add add push add outsl push add or add or or add add add sub es add sub add sub xor add add add add push add push add or add xor add add add add add add push add outsl push add or add or or add add add push add add or add xor adc add add add sub es add add outsl or sub xor add add add add add add push add sub push and add or push add add add add add push add sub or add or or add add add push add push add or add xor add add add add add add push add add push add or or push add add add add add push add sub add and add or adc add add add sub es add add add push and or push add add add add add push add sub add and add or push add add add add add push add sub add and add or push add add add add add push add add outsl adc add sub add xor add add add add add add push add add or add xor add add add add add add push add sub add and add or or add add add sub es add sub or add or or add add add sub es add push add or add xor or add adc add push sub es sbb push add push and add sbb add add idiv (bad) call sub add es add add sbb add pop add push and add sbb add add (bad) (bad) lcall or add jb add jo pop add push and add sbb add add (bad) (bad) (bad) cmp add es push cmp add add pop push sub add and add cmp add cmp add or add or or push add push and add sbb add add (bad) (bad) (bad) cmp add add jnp add add xor add pop add push and inc add add idiv (bad) lcall add pop pop movaps add and add or mov add add push sub add and add jge add add adc push add push and add sbb add add (bad) (bad) jmp adc pop adc or js add add add or add add cmp add add add or add add cmp add add add or add add adc push add push and add sbb add add (bad) (bad) jmp sub add add adc push and add sbb add (bad) (bad) jmp add add add aas add add push cmp add add inc add add idiv (bad) jmp adc sub add and (bad) (bad) call inc add add idiv (bad) lcall pop sub add and add sbb add (bad) (bad) jmp add sub push and pop sub or pop add push and cmp sub add and xchg add add jle add or add add cmp idiv (bad) incl jb add jo pop add push and (bad) call inc add add idiv (bad) lcall push sub add adc push add add or add add push add push and add and (bad) lcall add (bad) (bad) jmp pop adc sub sahf (bad) (bad) incl jb add jo pop add push and inc add add idiv (bad) (bad) cmp std (bad) lcall adc add add (bad) lcall (bad) (bad) incl (bad) incl (bad) ljmp (bad) (bad) (bad) (bad) (bad) pushl (bad) ljmp (bad) jmp (bad) ljmp (bad) (bad) jmp std (bad) decl (bad) (bad) (bad) jmp std (bad) jmp (bad) (bad) pushl (bad) incl (bad) incl (bad) (bad) call (bad) (bad) call std (bad) incl add pop movntps adc or in add sub add push sbb push add push and add sbb add add idiv (bad) call sub add cmp add push jb add jo push add push and cmp add push add add add push add push and push add push and add sbb add add idiv (bad) jmp push add add add push add push and inc add add idiv (bad) incl jnp add add add jo push add push and cmp add push jb add jo push add push and es sub add and add sbb add add idiv (bad) jmp add pop (bad) (bad) call inc add add idiv (bad) call cmp add add add or push cmp add add add push add push and inc add add idiv (bad) incl jnp add add add jo push add push and test add push jb add jo push add push and sub add and inc add add idiv (bad) ljmp pop add add add lods add add push add push and (bad) lcall inc add add idiv (bad) call sub add and (bad) lcall inc add add idiv (bad) jmp sbb inc add add idiv (bad) jmp push add add add push add push and (bad) (bad) lcall pop inc or (bad) (bad) ljmp (bad) call (bad) inc (bad) (bad) incl (bad) (bad) in (bad) (bad) incl (bad) (bad) incl (bad) decl (bad) (bad) decl (bad) (bad) pushl add add sub push outsl sbb add and or push add add add add add push add outsl pop add or add or sldt add add add add push add add jbe add and xor add add add add add add push add outsl pop add or add or or add add add push add add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add outsl dec add or add or or add add add push add add or add xor add add add add add add push add outsl popa add or add or push add add add add add push add outsl push add or add or sldt add add add add push add add push add push and xor add add add add add add push sub es add pop add push sub add or or add add add sub es add cmp add sub add or sldt add add add add push sub es add pusha add push sub add or or add add add sub es add cmp add sub adc or xor add add adc add push pop or imul push and add sbb add add (bad) (bad) call sub add es sub cmp add sbb add add (bad) (bad) call push sub sbb add add (bad) (bad) jmp add imul sub add and insb add push and add sbb add add (bad) (bad) jmp push sub add imul sub add and or or inc pop or add (bad) (bad) (bad) pushl add xor add push add add add add add mov (bad) decl add add push sub sbb add add idiv (bad) jmp sub or bndldx add add (bad) (bad) lcall test pop or sub sbb popf pop jle add add add jle add add add and (bad) lcall inc add add idiv (bad) lcall cmp (bad) decl pop sub push and sbb add add (bad) (bad) lcall or pop (bad) (bad) call sub xor add add das add adc add push jae add or add pop sbb add add (bad) (bad) call sub add es add sub add and add sub add and push sub sbb add add (bad) (bad) incl sub add faddl sub add add add or das cmp adc add add xor add add xor add sub es jae add or add pop sbb add add (bad) (bad) call sub add es add sub add and add sub add and push sub sbb add add (bad) (bad) incl sub add faddl sub add add add or das cmp adc add add xor add add adc add push pop xor pop add add adc je add and add add jns add adc pop cmp add add jno add and cmp add add push sub add and add sbb add add (bad) (bad) call sub add es add movhps add add add idiv (bad) lcall xor mov add adc nopl bound add sub add adc je add and sub add and add sbb add add (bad) (bad) jmp adc push dec add push add add inc add add idiv (bad) lcall cmp bound add push pop cmp add add inc add add idiv (bad) ljmp insb add push and add and add sbb add add (bad) (bad) jmp pop adc cmp add add inc add add idiv (bad) jmp adc sub push and (bad) add add sub push and sbb std add add sub add and cmp add add add jo add or sub add and cmp add add sub push and adc imul push and add sbb add add (bad) (bad) jmp adc sbb add add idiv (bad) call cmp adc pop add push and add push and pop cmp add sbb add (bad) (bad) jmp adc pop cmp add add adc adc adc adc add add push dec add pusha (bad) (bad) lcall inc add add idiv (bad) lcall cmp add or je add and xor sub add or jae add and sub sbb add adc adc aas mov inc add add idiv (bad) lcall sbb insb add push and add sbb add add (bad) (bad) jmp or adc pop add push and add push and cmp add add sbb sbb mov pop sub add and sbb push and adc adc idiv (bad) call sbb outsl add push fdivl add jo add or sub add pop daa pop cmp add add idiv (bad) jmp jle add add or add push sub push and cmp add cmp sub add and pop cmp add or jae add and add add pop cmp xor add push sub push and add add jns add adc sbb adc or xor inc add add idiv (bad) lcall and incl add adc sub push and or in add add adc je add and add add jns add adc pop xor add adc pop and add sub push and sbb add adc adc adc sub add and cmp or ds add add inc add add idiv (bad) lcall pop cmp pop push cmp add add idiv (bad) lcall or jo sub add and sub bound adc adc sub add and sub jo add and sub cmp (bad) lcall add (bad) (bad) lcall xor sub sbb add add (bad) (bad) jmp cmp pop sbb movhps adc or push adc cmp add add xor push adc inc cmp sti (bad) inc (bad) (bad) ljmp (bad) call (bad) lcall add call (bad) (bad) ljmp add inc add add cld (bad) lcall cld (bad) decl add add add pop add add std (bad) dec std (bad) incl (bad) call (bad) (bad) in cld (bad) incl cld (bad) call add add add add add repnz (bad) lcall cld (bad) pushl std (bad) decl (bad) (bad) pushl (bad) (bad) jmp sti (bad) call std (bad) (bad) cmp (bad) ljmp std (bad) (bad) faddl add xchg cld (bad) decl cld (bad) jmp sti (bad) (bad) fdivr (bad) lcall add add (bad) dec cld (bad) pushl std (bad) incl (bad) (bad) (bad) stc sti (bad) (bad) jg add repz (bad) call (bad) lcall (bad) (bad) (bad) mov add add add add add add or decl adc push adc sub add and cmp (bad) (bad) lcall add (bad) (bad) jmp or jae add and das push cmp (bad) (bad) lcall inc add add idiv (bad) jmp adc sub push and xor mov (bad) call prefetchnta add add inc add add idiv (bad) lcall and cwtl (bad) (bad) call add add push or sbb mov (bad) call sbb sbb sub add and push sub push and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) decl sub add and cmp (bad) decl sub add and add push and je add and or sub (bad) call adc push adc aaa sub add and (bad) lcall inc add add idiv (bad) jmp adc or or pop add push and add push and cmp std (bad) call add jnp jge inc inc cld (bad) lcall inc add add idiv (bad) lcall and sar (bad) call or je add and sub add and (bad) lcall idiv (bad) jmp push sub push and add add jns add adc pop sbb xchg std (bad) call sbb sbb mov pop sub add and sbb jl add and adc sub sbb add add (bad) (bad) call sbb outsl add push fcoml nopl sti (bad) call inc add add idiv (bad) lcall cmp (bad) decl sub push and pop adc xor (bad) call push adc pop sub add and push cmp std (bad) decl sub add sbb add add push add add add pop add ja push add add add or adc add add add sub es add adc lods add add jg add and or adc add add add sub es add add jg add and or adc add add add sub es add add jg add and push add add add sub es jae add push or cmp add add idiv (bad) call sub add es add push or addb push and sub add and add pop pop jg pop sbb add add or pusha adc sub add and pusha adc sub add and pusha adc sub add and adc sub add and outsb or add arpl add and add add jns add adc adc push adc add sbb add pop and xchg popa and add add xchg adc push fs adc adc pop pop and fstps idiv (bad) call push adc and add addl adc (bad) add push push push sub push sub or addl push sub sub add and push sub add add sub es add jo test add and adc sub push and add push push push sub adc push adc sub push and add push pop add xchg add sub add add sub push and adc sub adc or xor pop inc add add idiv (bad) incl adc push adc test add pop sub es pop inc add add idiv (bad) incl sub xor add add sub push and adc push and push push xor sbb add (bad) (bad) incl adc test add pop sub es sbb add add (bad) (bad) incl sub adc push and add sub pop adc (bad) add push push pop adc (bad) add push push push sub push sub or addl push sub adc imul push add add push adc sub push and add push push push sub push sub push sub push sub push sub push sub adc push adc sub push and add push push and add add push push sub push sub pop sub pop sub pop adc sub push and addl push adc sub push and adc pop imul push push sub adc push sub es adc imul cmp add pop inc js add sbb add add idiv (bad) incl and jge sub add add push adc cmp add add (bad) lcall add mov adc lea add and add and adc adc push adc sub push and add push push sub add and push sub adc sub push and add push jae add push adc adc adc sub xor add je add and adc adc xchg add and adc inc add add idiv (bad) incl adc adc push adc sub es sbb add add (bad) (bad) call adc mov add sub add je add and adc push sub adc adc push xor sbb add (bad) (bad) incl adc push adc sub adc mov add and inc add add idiv (bad) incl sub add and adc sub adc sub imul push adc sub adc adc pop add push and adc adc mov mov inc add add idiv (bad) (bad) cmp add add sbb js inc add add idiv (bad) incl and jge sub pop adc lods add add jg add and add add and sbb sbb adc sub push and add push and adc push adc sub push and add push fisttpll sbb sbb add add (bad) (bad) call sbb outsl add push faddl sbb jne inc add add idiv (bad) incl and jge sub pop adc lods add add jg add and add add and sbb sbb pop add push and add push and adc push adc sub push and add push ficom adc add add idiv (bad) call sbb push faddl sub sub add push sub adc ficomp adc jb add jo pop sub sub addb add sbb and add inc dec add add add fiadd add add add add add add add add add pop add add xchg add add add mov add mov add push add add add add xor add add add add push add add or add xor add add add add push add add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add add outsb add or xor add add add add add add push add add outsl add or xor add add add add add add push add add or add xor add add add add push add jo add and add xor add add add add push add push add or add xor add add add add add add push add add popa add push and xor add add add add push add add push and add xor add add add add push add add push and add xor adc add add add sub es add add outsl or sub xor add add add add push add add or add xor add add add add push add add or add xor adc add add add sub es add add outsl cwtl add push and or or add add add push add add or add sub add add or adc add add add sub es add add arpl add and or adc add add add sub es add add outsl jb add and or push add add add add add push add sub push and add or adc add add add sub es add add bound add and or or add add add sub es add add or add xor adc add add add sub es add add push and add xor add add add add push add pop add or add xor add add add add sub es add outsl inc add push sub xor add add add add sub es add outsl inc add push sub xor add add add add push add pop add or add xor add add add add add add push add outsl dec add or add or push add add add add add push add add outsl adc add sub add xor add add add add sub es add outsl call add or push add add add add add push add outsl jmp sub add xor add add add add push add add push and add xor add add add add add add push add add push sub add or or add add add push add add push and add xor add add add add push add add push and add xor add add add add add add push add add jae add and xor add add add add add add push add add je add and xor add add add add push add add add or add add xor add add add add sub es add outsl jne add sub xor add add add add add add push add add or add xor add add add add push add add or add xor add add add add push add add or add xor add add add add add add push add add js add and xor add add adc add push sub es sbb jg add add cltd add push push sub cmp inc add add idiv (bad) call sub add es sub add add (bad) (bad) jmp add add add push add pop add push and add push sbb lods add push jge add add sub es add add (bad) (bad) jmp add add push jge add add sub or inc or add add add stos (bad) (bad) lcall call add add (bad) (bad) call add add sub add jge add add xchg sbb lret sub adc or out add add add adc add push sub es sub sub sub add add (bad) (bad) call sub add es pushf add push and inc add add idiv (bad) jmp pop sbb push and add add stos add push addb add pop sbb push pop push sub add and add add stos add push addb add push sbb push inc pop add add (bad) (bad) call add add add add (bad) (bad) decl add sbb pushf add push and inc add add idiv (bad) ljmp leave pop sbb push and add add stos add push addb sbb lods pop push sub add and add add stos add push addb add sub xor push add add add sub es sbb test push cmp add add idiv (bad) call sub add es adc mov add add or add add cmp add push sub jle add add push add add and add add sub add add add add add or push add add pop pop and add cmp add add inc add add idiv (bad) (bad) cmp add add push cmp jnp add add jnp add add lahf add push and adc add add add add xchg jge add add and incl add adc add (bad) add add add mov add add fwait add push and add and inc add add idiv (bad) jmp pop and fwait add push and add sbb add add (bad) (bad) jmp push sub jle add add xchg jge add add adc pushf add add jnp add add ds (bad) call inc add add idiv (bad) lcall and jg add add or add add pop cmp add add jge add add pop cmp add pop and add add add add inc add add idiv (bad) lcall sub cmp add sbb add add (bad) (bad) jmp add add add and add add jge add add or add jnp add add jnp add add jnp add add mov or std add add sub jnp add add jnp add add mov sbb jecxz add add add adc aad add pop push cmp (bad) (bad) lcall idiv (bad) lcall (bad) add add sbb add add cmp jnp add add xor add (bad) (bad) lcall push push cmp inc add add idiv (bad) jmp or das mov inc add add idiv (bad) lcall sbb jne add pop sub jle add add and add add jge add add adc pop add add push add add jnp add add sub sbb add sbb add add (bad) (bad) jmp add add add jnp add add mov es add add and add pop jge add add or cmp add pop inc add add idiv (bad) jmp add add pop jge add add sbb cmp add add inc add add idiv (bad) jmp add add add push add add adc add jnp add add jnp add add mov es sbb stos add add add add add or or fwait add add push cmp std (bad) lcall inc add add idiv (bad) lcall sbb addl add jnp add add popf add push and sub sbb add add (bad) (bad) jmp pop sub jnp add add jnp add add lahf add push and add (bad) lcall lock (bad) call inc add add idiv (bad) lcall push sub push and add add cld (bad) lcall inc add add idiv (bad) lcall and sbb dec add add jnp add add mov jmp (bad) lcall add add add std (bad) (bad) cmp (bad) incl cld (bad) decl (bad) (bad) dec (bad) (bad) ljmp cld (bad) jmp (bad) (bad) call (bad) (bad) (bad) mov sti (bad) incl (bad) dec cld (bad) decl (bad) pushl std (bad) call pushl (bad) (bad) (bad) (bad) (bad) decl (bad) ljmp std (bad) pushl (bad) (bad) ljmp (bad) decl (bad) mov sti (bad) ljmp (bad) call cld (bad) jmp std (bad) decl (bad) (bad) decl cld (bad) incl add add push cmp (bad) call sub add adc or stos add add add push pop adc push and add sbb add add (bad) (bad) call sub add es add add xlat add add idiv (bad) lcall or popa add jge add add movhps add add (bad) (bad) jmp add or inc add add push sub add jge add add adc sub pop inc add add idiv (bad) jmp push pop pop cmp add add add (bad) (bad) lcall adc sbb inc add add and add pop adc inc and (bad) (bad) lcall add add (bad) (bad) incl (bad) (bad) lcall add add add add add add adc add add add adc add xchg add inc add add add add (bad) ljmp (bad) (bad) ljmp add cmp add mov add add add mov add add add add add add (bad) jmp add add add inc add add add add add pop and pusha (bad) (bad) call sub add add add cmpsl add push and add or inc (bad) (bad) call sub jnp add add adc mov adc cs (bad) incl jnp add add pop and and (bad) incl push das ficompl idiv (bad) lcall pop cmp (bad) (bad) call add add sbb add add (bad) (bad) (bad) cmp add add pop or cmp (bad) (bad) lcall inc add add idiv (bad) jmp push push cmp add add idiv (bad) lcall pop cmp (bad) (bad) lcall inc add add idiv (bad) jmp add add add adc mov or and fwait add push and (bad) lcall idiv (bad) jmp add add add jnp add add jnp add add movsb add push and fwait add push and (bad) lcall idiv (bad) jmp cmp add add add add movsl add add inc add add idiv (bad) call cmp (bad) incl pop jge add add or ljmp dec add add push jge add add adc and (bad) decl sbb or add (bad) (bad) (bad) decl add add (bad) (bad) lcall (bad) jmp add ljmp add add add add add add add add add sbb in (bad) call sub add add add adc mov es add add sub cmp inc add add idiv (bad) (bad) cmp sub jnp add add sub or pushf add push and add and (bad) lcall inc add add idiv (bad) jmp pop push cmp (bad) incl sbb add add or pushf add push and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) incl pop arpl add and dec std (bad) incl and add pop jge add add cmp sub jnp add add sub push cmp std (bad) (bad) cmp (bad) (bad) incl jle add add push add add cmp std (bad) (bad) cmp (bad) (bad) incl jnp add add mov cmp cld (bad) incl sbb add add sbb incl jle add add push add add sbb aam (bad) call add add add mov (bad) (bad) decl pop sub cmp inc add add idiv (bad) jmp add add sbb lcall jnp add add movsl add push and sub jnp add add jnp add add cmpsb add push and (bad) lcall inc add add idiv (bad) lcall sbb cmp (bad) lcall inc add add idiv (bad) jmp add jnp add add test add and add sbb fwait add push and (bad) lcall inc add add idiv (bad) jmp push sub jnp add add adc mov adc adc (bad) incl sbb add and add (bad) incl sub sub sub sub adc or addl add add adc add push sbb mov or or cltd add add jnp add add or inc sbb add add (bad) (bad) call sub add es or jne add add add add stos add push and add add add (bad) (bad) lcall or push add pop decb add sbb dec add add add or call inc add add idiv (bad) call sub cmp inc add add idiv (bad) jmp pop push sub sbb add (bad) (bad) jmp add add sub or inc or (bad) (bad) call add add add add add push add add add add (bad) (bad) (bad) jge (bad) ljmp (bad) (bad) lcall pushf add push and inc add add idiv (bad) jmp add add add add sub or dec (bad) (bad) jmp push sub inc add add idiv (bad) lcall sub cmp (bad) lcall inc add add idiv (bad) jmp push pop pop or sub cmp (bad) lcall idiv (bad) jmp push sub sub es (bad) (bad) call inc add add idiv (bad) lcall or cmp (bad) (bad) lcall inc add add idiv (bad) jmp push sub add or or add add add sub es add push add or add xor push add add add add add push add add outsl mov add sub add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add push and add xor add add add add sub es add outsl mov add or push add add add add add push add outsl into add push and add or push add add add add add push add outsl lods add push and add or or add add add sub es add outsl scas add push sub xor add add add add push add add mov add add xor add add add add add add push add add push sub add or sldt add add add add push add add mov sub add or or add add add push add add push and add xor add add add add add add push add outsl fadds add and add or or add add add push add add push and add xor add add add add push add add push and add xor adc add add add sub es add add outsl ret push and or or add add add push add add push and add xor add add add add push add add or add sub add add or sldt add add add add push sub es add mov add xor add add add add adc add push sbb pop adc push add add jnp add add and add or pop jge add add xchg and add add jnp add add and add or pop jge add add xchg and add add bound jnp add add pop pop bound push add add daa sbb inc pop add add add dec add add add add add (bad) (bad) pushl add sbb faddl and add adc push add add sub add add add das push sbb add add (bad) (bad) call sub add es sub es sbb add (bad) (bad) jmp push sub add jnp add add sub (bad) call inc add add idiv (bad) (bad) cmp (bad) (bad) jmp sbb outsl (bad) (bad) incl jnp add add pop add pop pop bound pop push imul and add add add sub es add add pop pop pop fs add add and add pop jge add add add or or add add add sub es add add add add xor add add add add add add push add add add jnp add add add add add arpl add xor sub add add add sub es add add jnp add add pop pop pop pop fs add add and add clc pop jge add add add or adc add add add sub es add add add jnp add add add add xor add add adc add push pop adc sub pop inc add add idiv (bad) call sub add es add inc add add idiv (bad) (bad) cmp adc add fiaddl add mov add add add add add inc add add add add add dec add add add xchg (bad) (bad) ljmp add add add addb add add push add add add scas add add sub es add add (bad) (bad) ljmp xchg add add pop jge add add sub es add add (bad) (bad) jmp pop adc imul incl decb add push cmp (bad) incl add sbb add add (bad) (bad) lcall dec (bad) (bad) incl jnp add add jnp add add pop pop cmp add add inc add add idiv (bad) (bad) cmp add add push cmp (bad) (bad) incl and add fs add add cmp (bad) (bad) incl push jge add add adc std (bad) (bad) incl add sbb add add (bad) (bad) lcall or in (bad) incl and add pop jge add add cmp (bad) (bad) incl jnp add add jnp add add add sub adc mov (bad) incl jnp add add ds (bad) (bad) lcall inc add add idiv (bad) lcall or cmp inc add add idiv (bad) jmp push pop pop or incl add pop or incl sub jnp add add jnp add add or or pop (bad) (bad) ljmp cmpsb add add add add add pushf sbb inc (bad) (bad) call or or cmp (bad) incl add add add and add or pop jge add add xchg and add add push add add sub cmp (bad) (bad) lcall inc add add idiv (bad) (bad) cmp std (bad) incl add adc push add add add add adc add push add add push and add and add and add jge add add add xor add add add add adc add push sbb addb add push jge add add or push and add sbb add (bad) (bad) call sub add es jge add add push cmp add sbb add add idiv (bad) jmp add add pop jge add add or sub add push add pop add push and add add inc add add idiv (bad) lcall or cmp add add add (bad) (bad) jmp add add add jnp add add outsb sbb add add (bad) (bad) call sub es sbb add add (bad) (bad) jmp pop or leave add add add push add add sub cmp inc add add idiv (bad) jmp add cmp pop inc add add idiv (bad) lcall pop cmp inc add add idiv (bad) jmp jae add or add es sub es add add (bad) (bad) jmp push add inc sbb add add idiv (bad) lcall or push add add add pop pop decb add xchg and add add jnp add add pop pop bound push add add push sub sbb add add idiv (bad) jmp jae add or pop pop cmp inc add add idiv (bad) ljmp mov or inc push add add (bad) (bad) incl (bad) inc (bad) (bad) lcall (bad) (bad) (bad) cli (bad) (bad) pushl (bad) lcall (bad) ljmp lcall (bad) (bad) jmp (bad) (bad) decl add add inc add add idiv (bad) jmp sub add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor add add add add add add push add push add or add xor add add add add add add push sub es add add add push and add sub add push sub add adc or int add add adc add push push sub add push and add sbb add add (bad) (bad) call sub add es sub and add (bad) jg add pop add add sub and add or pop jge add add sub and addb xor sbb add add (bad) (bad) lcall push sub sbb add add (bad) (bad) jmp jae add or jnp add add and add or pop jge add add add pushf sub or inc pop add add (bad) (bad) (bad) mov add add (bad) (bad) call insb (bad) (bad) jmp sbb sub add add (bad) (bad) jmp sub add adc push add add add add adc add push push sub add push and inc add add idiv (bad) call sub add es cmp inc add add idiv (bad) jmp sub add and add or pop jge add add add add add and add xchg pushf sub sbb push add pop pop decb add push xor sbb add add (bad) (bad) lcall lds add and inc add add idiv (bad) ljmp and add add (bad) jg add pop add add sub add (bad) jg add or add mov or inc pop add add (bad) decl (bad) (bad) decl (bad) (bad) (bad) mov add add pop sub add add (bad) (bad) jmp sub xor add add add add adc add push pop or cmp add sbb add add (bad) (bad) call sub add es addb add pop or pop jae add or jnp add add pop and jg add pop or pop add add cmp add add inc add add idiv (bad) lcall sub add push and inc add add idiv (bad) jmp add sbb add add idiv (bad) ljmp inc pop or add add sldt add (bad) call add add add add add (bad) (bad) (bad) (bad) jnp (bad) pushl add add add add add add add add (bad) pushl add add push add add pop sub pop inc add add idiv (bad) ljmp lds add and add and inc add add idiv (bad) jmp push sub add add pop jge add add or jne (bad) decl and addb ds (bad) lcall add (bad) (bad) lcall push cmp (bad) lcall inc add add idiv (bad) jmp sub push add mov push sub add push and (bad) lcall inc add add idiv (bad) jmp add add pop and add or lds add and (bad) lcall add (bad) (bad) (bad) cmp (bad) (bad) ljmp add add add and add or add add add add add and pushf sbb cmp (bad) (bad) lcall inc add add idiv (bad) jmp add add push xor add idiv (bad) lcall cmp push add add add add add jnp add add sub add push sbb (bad) (bad) (bad) ljmp add add xor add add add adc add push sub add push and add and add sbb add add (bad) (bad) call sub add es add add push add jnp add add add pop sub add push and cmp add add add pop add add sub add push and add push and add and add add dec add jnp add add jnp add add sub add push and cmp add add idiv (bad) jmp add add pop jge add add or cmp add sbb add add (bad) (bad) jmp add jnp add add pop and jg add pop add add or lds add and inc add add idiv (bad) jmp add jnp add add jnp add add sub add push and sub (bad) (bad) lcall idiv (bad) ljmp aam sbb push push pop xor add idiv (bad) (bad) cmp (bad) (bad) lcall or inc or add jecxz (bad) pushl (bad) (bad) ljmp (bad) (bad) jmp (bad) (bad) lcall add add (bad) (bad) (bad) cmp (bad) dec (bad) (bad) call add pop or (bad) and addb add add add or mov sub adc or add add adc add push sbb addb decb add sub add add add add add leave (bad) (bad) incl add outsb add add add outsb add add add add sub add push and add pop inc add add idiv (bad) call sub add es sub add add (bad) (bad) jmp add and addb pop pop decb add sbb xchg add add pop add add sub or and addb xor sbb add add (bad) (bad) call cmp (bad) incl add jnp add add add push sub sbb push (bad) (bad) incl jnp add add xor pop inc add add idiv (bad) call cmp (bad) (bad) ljmp add add or adc add add add sub es and addb add add add sub add add or or add add add sub es add add add add xor add add adc add push pop or add jnp add add sbb add pop inc add add idiv (bad) call sub add es add pop jge add add cmp add add jmp push pop or sub add push and add sbb add add (bad) (bad) jmp sbb movl add add add jnp add add add add pop or cmp jnp add add or add pop cmp inc add add idiv (bad) jmp add add add add add sub add push pop cmp add add add movsb sbb add add idiv (bad) lcall sub push add add add sub add push pop or inc add add add cmp add add inc add add idiv (bad) lcall movntps or add add pop push decb add sbb pop or xor add idiv (bad) (bad) cmp (bad) lcall or add add (bad) (bad) decl (bad) (bad) lcall (bad) jmp (bad) jmp (bad) push (bad) (bad) call (bad) (bad) ljmp (bad) (bad) call (bad) (bad) call (bad) (bad) incl add pop or mov js add jp sub xor adc add adc add push add push and add jge add add add add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor add add add add add add push add add je add and xor add add add add push add add push and add xor adc add add add sub es add add outsl mov add and or or add add add sub es add push add or add xor clc add add add adc add push sub es pop adc rolb add and add sbb add add (bad) (bad) call sub add es pop and pushf sbb loopne add pop pop and push sbb add add (bad) (bad) lcall or lret add and add add addl add add idiv (bad) lcall iret add push and add sbb add add (bad) (bad) jmp push or push cmp add add idiv (bad) jmp sub pop or pushf sub cmp add inc add add idiv (bad) jmp pop and add add push sbb add (bad) (bad) ljmp rolb add and add and inc add add idiv (bad) jmp sbb cmp and add add ret add inc add add idiv (bad) lcall adc and and add sub push and adc movsl push pop and pushf sub inc adc add addl (bad) (bad) mov add add (bad) (bad) call add add add add (bad) (bad) incl (bad) incl add sub add pop add add (bad) (bad) pushl (bad) (bad) jmp (bad) (bad) decl (bad) (bad) decl or stos push jae add push sbbb add or sub add add (bad) (bad) jmp pop and je add and addl int3 add push sbbb pop adc jno (bad) (bad) cmp (bad) (bad) incl pop and pushf pop cmp (bad) incl and gs (bad) lcall inc add add idiv (bad) lcall (bad) cmp incl pop and or (bad) call or cmp (bad) (bad) ljmp add or push add add add add add push sub es add roll add add sub add push sub add xor add add sub es pop and add add adc pop or lock add inc add add idiv (bad) call sub add es cmp add add adc push and add adc lret add add adc pop pop cmp add add inc add add idiv (bad) jmp adc adc xchg pop adc push pop pop pop pop bound add or pushf add add nopl cmp pop inc add add idiv (bad) lcall or iret add push and add sbb add add (bad) (bad) jmp push adc pop sbb add add cmp add or and push add add mov add add push xchg adc sbb inc add add adc adc pop pop pop bound adc sub xor add pop adc adc pop adc mulps pop pop bound pop or add adc pop and lar add push rolb add inc add add idiv (bad) lcall adc testl adc adc pop pop adc push pop pop pop pop arpl add add adc sbb adc pop xor rolb add adc add or add add or pop adc sbb mov add cmp add pop adc adc pop xor mov add rolb add and push cmp adc adc pop pop pop bound adc add jnp add add adc push sbb punpcklbw pop sub add add movlps pop sub pop add add add adc xchg pop adc or pop pop bound add pop sub add push and add pop inc add add idiv (bad) jmp pop adc xchg and adc sbb sbb adc cmp add or sbb or add adc pop pop adc push cmp add add or xor cmc add add or or aam inc add add idiv (bad) lcall sub fiadd add adc and add add push (bad) (bad) lcall inc add add idiv (bad) lcall sbb cmp add add inc add add idiv (bad) jmp or sub push and add add inc add add idiv (bad) lcall and add or adc pop or pop pop bound or daa cmp add adc add add inc add add idiv (bad) lcall push sub push pop (bad) mov (bad) call inc add add idiv (bad) ljmp iret add push and add and add sbb add add (bad) (bad) jmp pop sbb xor (bad) add add inc add add idiv (bad) lcall adc adc maxps pop pop bound adc sub adc or add and adc adc add add std (bad) decl (bad) pushl (bad) (bad) inc cld (bad) lcall (bad) (bad) decl (bad) (bad) cmp add add add (bad) call std (bad) pushl add add add add std (bad) decl add sub (bad) decl cld (bad) inc std (bad) ljmp cld (bad) dec add add add rolb add idiv (bad) incl (bad) dec std (bad) call cld (bad) ljmp (bad) (bad) jl add xor (bad) lcall add add (bad) pushl lcall std (bad) lcall ljmp std (bad) jmp add xchg (bad) pushl std (bad) decl (bad) (bad) jmp cld (bad) decl (bad) (bad) decl add add (bad) lcall (bad) (bad) (bad) mov add add or rolb add and (bad) lcall inc add add idiv (bad) jmp pop adc imul or sub add push and (bad) lcall inc add add idiv (bad) jmp pop adc imul or adc rolb add and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) call adc adc mov add sbb add add (bad) (bad) lcall sbb stos (bad) (bad) jmp add add adc (bad) (bad) call push add pop add push and cld (bad) lcall inc add add idiv (bad) lcall xor jl (bad) incl adc xchg adc sub outsl (bad) (bad) (bad) cmp or pop (bad) (bad) call add cmp add or inc (bad) (bad) jmp pop xor dec (bad) (bad) decl pop pop or and cmp (bad) lcall inc add add idiv (bad) jmp add add add adc adc or adc sbb punpcklbw pop sub (bad) cmp sti (bad) incl jnp add add adc incl add pop xchg adc pop cs std (bad) call push pop pop adc pop das push cmp std (bad) lcall add (bad) (bad) jmp and add add or adc cmp std (bad) lcall inc add add idiv (bad) jmp cmp std (bad) incl jnp add add or push and sbb or popf pop or sahf std (bad) incl or and add pop orl cmp adc or mov add adc add push push sub add push and add sbb add add (bad) (bad) call sub add es add push and add add sbb cmp inc add add idiv (bad) jmp add pop maxps aam add pop adc add pop or roll add and aas jle add sbb add (bad) (bad) lcall pop add add pop pop maxps aam add pop adc cmp add sbb add add (bad) (bad) jmp pop pop maxps add inc sbb add add (bad) (bad) lcall or rolb add and add sbb add add idiv (bad) (bad) cmp add add pop pop maxps aam add pop push cmp add add inc add add idiv (bad) jmp pop sbb adc add push and adc fiadd add pop pop maxps push and add and (bad) lcall inc add add idiv (bad) jmp sbb add jnp add add xchg and pop inc add add idiv (bad) lcall adc cmp inc add add idiv (bad) jmp pop sbb pop sbb or pop cmp add sbb add add (bad) (bad) jmp add add add push pop or xchg or or pop pop push aas pop add add idiv (bad) lcall or sub sbb add add (bad) (bad) jmp add add add push pop or xchg or or maxps add add inc add add idiv (bad) lcall adc adc adc roll add and push adc adc inc push add add (bad) (bad) lcall (bad) (bad) call add adc add inc (bad) (bad) lcall (bad) (bad) lcall (bad) (bad) jmp (bad) (bad) js (bad) incl (bad) jmp (bad) incl add xchg (bad) (bad) (bad) sti std (bad) call (bad) (bad) call (bad) (bad) push std (bad) pushl (bad) (bad) jmp add pop adc lahf add pop maxps aam add sbb xchg add add add xchg or sub add push and xor pop inc add add idiv (bad) lcall or rolb add and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) incl sbb add aad add and push cmp (bad) incl sbb adc xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add add add push add push add or add xor add add add add add add push add sub add push and add or push add add add add add push add outsl lods add push and add or or add add add sub es add outsl scas add push sub xor add add add add push add add push and add xor add add add add add add push sub es add fildl add sub adc or lds add xor add sub es sub es sbb outsb sbb imul and add loop add sbbb add fild add and add and inc add add idiv (bad) call sub add es fild add and inc add add idiv (bad) jmp sbb imul and add loop add sbbb add and or inc push add add add add (bad) (bad) incl add add (bad) inc (bad) (bad) ljmp add add add push sub pop adc imul and add loop add subb add push sub pop inc add add idiv (bad) jmp sub add adc or add add sub es push push cmp inc add add idiv (bad) call sub add es add add cmp add add inc add add idiv (bad) lcall sbb loopne add and add sbb add add (bad) (bad) (bad) cmp add push sub and add add add pop jge add add adc cmp add add (bad) (bad) jmp push push cmp add add add idiv (bad) lcall and and add add jge add add sub push and add sbb add add (bad) (bad) jmp add jge add add xor cmp add add inc add add idiv (bad) jmp push sub pop adc outsl sbb add (bad) (bad) lcall push cmp add add jnp add add jnp add add add add inc add add idiv (bad) lcall sub lods add add sbb add add sbb lahf add add jnp add add jnp add add fildl add sbb add add (bad) (bad) lcall adc cmp add idiv (bad) jmp add pop adc add add cmp add add jnp add add jnp add add jge add add sub inc add add add add add int3 add push jge add add cmp add add or faddl add and cmp add add pop adc je add and add cmp add add jnp add add add or fild add and add sbb add add (bad) (bad) jmp cmp add add add add and add adc add add add adc jge add add push pushf pop or push and add sbb add add (bad) (bad) jmp or add add jnp add add pop or lea add sbb add (bad) (bad) jmp pop sub sbb add add xor jb add or cmp add add inc add add idiv (bad) lcall sub pop add add add cmp std (bad) lcall idiv (bad) lcall or inc add add pop jge add add xor xor push cmp (bad) (bad) lcall add (bad) (bad) lcall and sbb jnp add add push add jnp add add push rcrb adc inc xor add mov (bad) (bad) incl add add add std (bad) pushl (bad) jmp add add add add add cld (bad) call add add add (bad) jmp add call cld (bad) call (bad) (bad) call (bad) (bad) jmp (bad) (bad) jmp add add add fadds add js add or add cs (bad) lcall add add (bad) (bad) (bad) fadds add dec std (bad) decl add add add adc (bad) call add add add add add inc (bad) (bad) lcall (bad) inc add add add add pop pop cmp (bad) (bad) lcall inc add add idiv (bad) jmp push sub or fldl add pop and or (bad) incl sbb fldl add pop daa sub add push and (bad) lcall inc add add idiv (bad) jmp cmp std (bad) incl add sub add push and add adc cmp (bad) (bad) lcall inc add add idiv (bad) jmp add jge add add or mov (bad) call sub and add pop jge add add or fild add and (bad) lcall inc add add idiv (bad) jmp add add add cmp add add inc add add idiv (bad) lcall push sub add push and (bad) lcall idiv (bad) jmp add sbb faddl add and add fild add and add and add sbb add (bad) (bad) jmp pop cmp (bad) (bad) incl push jge add add das sub add push and (bad) call inc add add idiv (bad) jmp add sub add push pop sbb push and (bad) lcall idiv (bad) jmp adc in (bad) lcall add insl (bad) (bad) ljmp add add pop cmp std (bad) incl sbb fldl add sbb mov adc (bad) incl sbb faddl add and cmp add add add je add and add cmp push jge add add cmp (bad) incl push jge add add push cmp (bad) incl add sub add push and add sub push std (bad) (bad) cmp jnp add add and add adc pop pop jge add add pop add add add pop sbb loopne add and (bad) lcall inc add add idiv (bad) jmp add add add jnp add add popl add sbb add add (bad) (bad) lcall sub cmp cld (bad) lcall inc add add idiv (bad) jmp push sub and add pop jge add add sub add push and (bad) lcall inc add add idiv (bad) jmp add add add pop add add and (bad) lcall idiv (bad) jmp push sub sbb fldl add pop adc incl sbb add add sbb cmp inc add add idiv (bad) jmp pop sub jnp add add sub add push and lock cmp (bad) lcall inc add add idiv (bad) (bad) cmp cld (bad) jmp pop cmp (bad) (bad) jle add add jnp add add or adc fild add and (bad) lcall inc add add idiv (bad) jmp or cmp pop inc add add idiv (bad) lcall (bad) lcall add (bad) (bad) jmp cmp cli (bad) incl add adc or add add push add add add je add and pusha add add push push add add add loope add push jae add push sub add adc or add add push add add add je add and pusha add add jnp add add push add add add loope add push jae add push sub add xor add add add add add add push add push add or add xor add add add add add add push add outsl lods add push and add or or add add add sub es add outsl scas add push sub xor add add add add add add push add outsl into add push and add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor add add add add push add add or add sub add adc or lds add xor add sub es sub es push sub add push and inc add add idiv (bad) call sub add es ljmp sbb adc jae add push jge add add pop push or inc pop add add (bad) (bad) dec (bad) (bad) (bad) cmp add iret (bad) (bad) inc (bad) (bad) jmp add sbb jmp add and inc add add idiv (bad) jmp add adc add add in add push and add and inc add add idiv (bad) jmp sbb movsb add jnp add add and add jge add add sub add push and inc add add idiv (bad) jmp sub add add or or add add add sub es add add add add xor add add add add sub es add add or jge add add add or xor add add add sub es add add add push xor pop inc add add idiv (bad) call sub add add add add in add push and add add xor add add add add add add push add add add out add push and add or adc add add add sub es add add add sub add push sub add adc or lea add xor add sub es pop sub jnp add add hlt add push sbb dec adc or add sub or push sub add push and inc add add idiv (bad) call sub add es add add adc add add idiv (bad) (bad) cmp add pop adc add add add add add or add cltd add add add or add add add add add add (bad) decl add movsb add add (bad) (bad) mov add add add add add add (bad) call (bad) (bad) (bad) jg add lds add pop or pop adc xchg add add push jge add add sub test add sbb add add idiv (bad) lcall adc push (bad) incl sub push and adc in add push and (bad) lcall idiv (bad) (bad) cmp (bad) (bad) cmp add add jnp add add sbb adc add sbb add add idiv (bad) lcall or and (bad) incl cmp add sbb add add (bad) (bad) lcall adc or (bad) incl pop adc add add cmp (bad) (bad) (bad) cmp (bad) incl jnp add add pop or repz push pop adc loope (bad) decl pop pop sub jnp add add adc xchg sbb add (bad) (bad) lcall jmp add and (bad) lcall idiv (bad) jmp add add add push cmp add add idiv (bad) lcall incl or pop adc incl jnp add add jnp add add pop push incb push incb add add add pop push incb push incb sub add push and inc add add idiv (bad) (bad) cmp (bad) (bad) jmp pop or inc (bad) (bad) incl pop push jge add add push cmp (bad) (bad) lcall add add add repnz push and pop adc or sbb jnp add add push pop sub add push and push (bad) (bad) incl or pop sub add push and inc add add idiv (bad) jmp pop movhps in (bad) lcall inc add add idiv (bad) jmp sub add add xor add add add add add add push add push add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add push and add xor add add add add push add add push and add xor add add add add sub es add outsl sub add sub xor adc add add add sub es add add outsl aas add push and or sldt add add add add push add add sub add and xor add add add add push add add push and add xor add add add add push add add cmp add add xor add add add add add add push add add push sub adc or jo add cmp add sub es sub es pop push cmp add add or xlat add add or or into add add add add jle add add pop xor pop push bound add es pop push sub add push and add sbb add (bad) (bad) call sub add es jns add and add add pop sbb add and jno add push pop push aas daa add add inc add add idiv (bad) lcall sbb pop add add and add add xor inc add add idiv (bad) lcall adc add add and add sbb add add idiv (bad) (bad) cmp add add pop pop or sbb push add add les add add pop test pop push bound add es cmp add add pop or add add and add sbb add (bad) (bad) (bad) cmp add add and add add dec (bad) (bad) lcall inc add add idiv (bad) lcall adc leave add add and cmc (bad) (bad) lcall inc add add idiv (bad) lcall adc lods add add add add and pushf push cmp and add add fildl add sbb add add (bad) (bad) lcall sub add push and add sbb add (bad) (bad) jmp and add add je add and add adc sub push and add adc inc cmp (bad) (bad) (bad) jle add add push pop or add es pop or sub add add (bad) (bad) jmp jle add add sbb add add and pushf cmp (bad) lcall push or inc sbb add jp (bad) pushl (bad) (bad) push (bad) (bad) jmp add add (bad) pushl (bad) inc std (bad) decl add add (bad) (bad) inc add add (bad) decl (bad) (bad) jp (bad) ljmp add dec add add add add add add (bad) (bad) (bad) mov std (bad) pushl (bad) (bad) jmp (bad) (bad) ljmp (bad) (bad) call add add push sub sbb add add (bad) (bad) jmp and add add add push and add pop cmp (bad) (bad) jle add add and or add and (bad) lcall inc add add idiv (bad) jmp pop adc imul and add add add subb add or lcall adc je add and add add add add xorb add sub add push and (bad) call inc add add idiv (bad) (bad) cmp (bad) (bad) lcall push sub add and add push cmp (bad) (bad) lcall inc add add idiv (bad) jmp jle add add and pushf pop adc mov sbb (bad) (bad) jle add add and (bad) (bad) incl pop pop or add es pop sub add push and (bad) lcall inc add add idiv (bad) jmp push cmp (bad) ljmp adc or add add adc add push sub es pop sub add push and inc add add idiv (bad) call sub add es cmp add push add add add add pop (bad) adc add jge add add cmp add add add fldenv sbb add add and add sbb add add (bad) (bad) jmp add add add je add and add or pop add pop adc sbb push jge add add sub and inc add sub add and add sub add push add push sbb push and inc add add idiv (bad) jmp add pop push pop pop (bad) adc add jge add add stos pop or inc or add mov (bad) (bad) decl (bad) jmp (bad) decl (bad) (bad) (bad) jp (bad) incl (bad) jmp incl add add shrb add or cmp add add add sub es jle add add pop maxps jo add sbb maxps jo add push arpl maxps jo add pop or xchg pusha push add add add add add add push add jge add add push jge add add add xor add add adc add push pop push cmp add sbb add (bad) (bad) call sub add es incl add xor inc add add idiv (bad) lcall sub push das inc sbb add add (bad) (bad) lcall add add and add add sub add push and add and inc add add idiv (bad) jmp sbb adc or add sub sub sub pop or inc or add (bad) (bad) (bad) pushl (bad) call (bad) (bad) incl add add (bad) (bad) call (bad) (bad) incl add add les push sub push add add xor add add adc add push push sub add push and add sbb add add (bad) (bad) call sub add es push sbb sub add push and add and inc add add idiv (bad) jmp sbb xor sbb ficompl inc add add idiv (bad) lcall and or sub add push and inc add add idiv (bad) jmp add arpl or add and or inc pop add add (bad) call (bad) (bad) incl add add (bad) (bad) incl add add test push add adc or mov add cmp add sub es pop or add add and inc add add idiv (bad) call sub add es add add jnp add add or add pop push pop sub add add (bad) (bad) jmp push or mov add pop or pop inc sldt add add add add inc add add add add add add add add add add add add add add add add add add sub add push and inc add add idiv (bad) ljmp test add jnp add add or add sbb xchg push pop pop or or lea jnp add add pop add push sbb ljmp imul jno add jnp add add jle add outsl add add xchg xchg sbb or add pop sub add push and inc add add idiv (bad) jmp sbb inc (bad) (bad) incl jnp add add jnp add add addb add pop sbb or add sbb and (bad) incl jnp add add pop add push pop or (bad) (bad) incl add xchg pop inc add add idiv (bad) (bad) cmp (bad) jmp push cmp (bad) (bad) incl jnp add add sbb sub add push pop cmp (bad) (bad) incl jnp add add jnp add add addb add add add pop sbb or add pop or (bad) call inc add add idiv (bad) jmp add add add pop add push sbb lahf (bad) (bad) ljmp add add xor add add push pop or jb add add add sub add push pop adc inc add add idiv (bad) call sub add es or adc daa push pop pop or jno add pop adc pop pop bound pop pop adc or add sub or inc push add add add push add add add add add add add push add add add xchg add dec (bad) (bad) incl add add (bad) jp add jbe (bad) incl add mov add lahf add add add add add leave add add add add inc add add pop push pop sub add add (bad) (bad) jmp adc cmp sbb add (bad) (bad) lcall sub add push and (bad) lcall idiv (bad) jmp push add add add (bad) add add inc add add idiv (bad) lcall or add add and (bad) lcall inc add add idiv (bad) jmp adc ds add add inc add add idiv (bad) call cmp (bad) (bad) cmp (bad) (bad) incl jnp add add sub add push pop or add (bad) incl jnp add add sub add push push sub add push and (bad) lcall inc add add idiv (bad) jmp sbb (bad) (bad) (bad) cmp (bad) incl jnp add add xchg and add add pop or mov add ds (bad) (bad) lcall inc add add idiv (bad) lcall adc cmpsb (bad) (bad) decl and mov add (bad) (bad) lcall cmp jnp add add add push pop (bad) (bad) (bad) incl jnp add add pop adc pop pop bound pop pop adc or add push cmp (bad) incl or cli add push and cmp decl and sbb add adc cmp (bad) incl pop sub add push and cmp (bad) (bad) incl jnp add add xchg or adc sbb (bad) call add adc cmp (bad) (bad) ljmp adc or fldl add xor add sub es pop sub add add cmp or inc or add ret decl add add add add add add mov add jge add add add sub add clc add push push sub add add add add push pop inc add add idiv (bad) call sub add es sub pop sbb or add sbb mov add push push sub add or add sub add push and add and inc add add idiv (bad) jmp sbb (bad) lcall inc add add idiv (bad) jmp add add add add sub jae (bad) jmp sbb inc (bad) (bad) ljmp add add xor add add push pop sbb add jnp add add push add push pop and push add add jnp add add pop adc add add add push sbb xor add add add add jns add jp add adc add pop (bad) add add push cmp sbb add add (bad) (bad) call sub add es sbb hlt add add adc adc cmp add add inc add add idiv (bad) jmp cmp add add add jge add add jle add add add pop pop or add and add sbb add (bad) (bad) jmp pop and mov jnp add add push add or add idiv (bad) call sub pop pop sbb or add sbb jp add pop pop pop or sbb outsl add add sub add push pop adc sub add add (bad) (bad) jmp adc push add add je (bad) lcall inc add add idiv (bad) lcall and aas add xor sbb add add (bad) (bad) lcall sbb sub add pop daa sub sub or add add inc add add idiv (bad) lcall sub push adc add sbb inc sub add and add cmp add mov (bad) (bad) jmp (bad) (bad) pushl add add (bad) (bad) (bad) in add add add add (bad) decl (bad) (bad) incl (bad) (bad) decl (bad) inc add add add add (bad) (bad) in (bad) (bad) ljmp (bad) (bad) jmp (bad) lcall add add add roll add xchg add sbb add add add jmp add add (bad) lcall (bad) (bad) ljmp (bad) (bad) incl add outsb add add add mov add add pop cmp call add add add inc add add idiv (bad) call sub add push and (bad) lcall add (bad) (bad) jmp add add add push add push pop and push and (bad) lcall inc add add idiv (bad) jmp add add add jnp add add lar push pop sbb in (bad) (bad) incl sub add push push sub add push and (bad) lcall inc add add idiv (bad) jmp adc pop adc add add and (bad) lcall idiv (bad) jmp adc pop adc or mov or sbb lcall add add jnp add jl add adc add pop and cmp (bad) lcall inc add add idiv (bad) jmp pop adc sbb push and (bad) lcall inc add add idiv (bad) jmp add add add jnp add add lar push sbb inc (bad) (bad) incl pop pop or push cmp jnp add add push add push pop push cmp (bad) (bad) decl or (bad) (bad) lcall inc add add idiv (bad) lcall push cmp (bad) (bad) incl jnp add add jge add add add (bad) push add add add pop push add es cmp std (bad) lcall inc add add idiv (bad) jmp pop push push sbb add add add adc add and jb add adc add and jae add adc add and js add or or xchg std (bad) incl sub add push push cmp sbb sbb pop std (bad) lcall add (bad) (bad) lcall pop cmp (bad) (bad) cmp incl jnp add add jle add outsl add add xchg xchg push ds (bad) lcall inc add add idiv (bad) lcall cmp (bad) decl or or aaa std (bad) ljmp add add add push add or add idiv (bad) call sub pop pop sbb or add sub pop or or (bad) (bad) cmp add add add jge add add add add pop or push and (bad) lcall inc add add idiv (bad) jmp add sub add push pop adc cmp cld (bad) lcall inc add add idiv (bad) jmp sub xor add add add add push add add add add add add incb sub add adc or roll add cmp add sub es sub add push and add and inc add add idiv (bad) call sub add es pop add add add and add or pop jge add add add pushf sub sbb pop inc push add add add add (bad) (bad) incl add add add add add sub sbb sub sbb add (bad) (bad) jmp add add add jnp add add popf pop sub add push and inc add add idiv (bad) jmp add add add jge add (bad) push add add add pop push add pop sub add add (bad) (bad) jmp add incl add and xor fiaddl add aaa add adc add push sbb cmp inc add add idiv (bad) call sub add es add add jnp add add push cmp add sbb add add (bad) (bad) jmp add add add jge add (bad) push add add add pop push add stc add add pop sub and add add sbb inc add add idiv (bad) call push sub sbb add (bad) (bad) jmp add pop pop sub add push and pop push and jmp add idiv (bad) ljmp inc sbb add lods (bad) (bad) pushl add push add add (bad) (bad) lcall add add add mov (bad) (bad) pushl (bad) lcall (bad) (bad) incl add in add pop sub add push and (bad) lcall inc add add idiv (bad) jmp sbb test and add sbb pop pop jge add add or push and inc add add idiv (bad) jmp add pop sub add push and outsb (bad) (bad) incl and add and sbb jge add add cmp (bad) incl sbb outsl sbb add add (bad) (bad) lcall sub add push and (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) incl jnp add add and add or pop jge add add add pop rcrb (bad) incl jnp add add jge add (bad) push add add add pop push add or (bad) (bad) incl sub add push and add or push add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add or add sub add add or push add add add add add push add sub add push and add or or add add add sub es add push add or add xor add add add add add add push add add push sub add or or add add add push add add cmp add add xor add add add add sub es add outsl sbb add sub xor add add add add sub es add outsl adc add sub xor add add add add add add push add add push sub add or or add add add sub es add outsl cmp add sub xor push add add add add add push add add outsl cmp add sub add xor add add add add add add push add add push sub add or or add add add sub es add outsl sbb add sub xor add add add add push add add push and add xor add add add add push add add adc add sub add adc or roll add xor add sub es sub es sub sub add and inc add add idiv (bad) call sub add es cmp add sbb add add idiv (bad) jmp add jge add add dec sbb sub add add (bad) (bad) jmp add add push and add sub add sbb add sbb add imul jge add add pop sub add add (bad) (bad) jmp add add sub addl add mov or inc or add cltd (bad) (bad) jmp (bad) (bad) dec (bad) (bad) inc (bad) (bad) decl (bad) (bad) ljmp (bad) incl add add sub sub add or sub add add add sub es add add add jno add jnp add add xchg and incl add jnp add add xchg sub add push sub add or adc add add add sub es add jge add add add jle add add xor add add adc add push sbb cmp pop or sub add add (bad) (bad) call sub add es jnp add add push add add inc add add idiv (bad) (bad) cmp add add add add add add add add add (bad) pushl add add add add add xchg (bad) (bad) ljmp add add add add add add add add add add add add add sub pop (bad) dec add add add pop adc add pop pop pop bound dec add add sub es sbb add (bad) (bad) jmp cmp jle add xchg adc cmp (bad) incl jnp add add imul or or push (bad) (bad) call add ds (bad) lcall inc add add idiv (bad) lcall push sub add and (bad) lcall inc add add idiv (bad) jmp or pop or sub cmp inc add add idiv (bad) jmp pop or (bad) cmp (bad) (bad) incl or sahf pop cmp (bad) (bad) call or cmp (bad) (bad) incl add add add xchg pop invd pop pop pop pop bound pop adc sar (bad) call or (bad) decl add add add dec (bad) (bad) call inc add add idiv (bad) lcall adc lods (bad) (bad) incl jnp add add push adc pop xchg sub add push and (bad) (bad) jmp pop or mov (bad) incl add add add imul and add (bad) (bad) (bad) call or cmp (bad) ljmp add adc push add add adc add push pop push cmp add add and add add add add or pop xchg adc cmp pop or add add pop pop push sahf sbb test add add or pop xchg adc add inc add add idiv (bad) call sub add es or (bad) add add sub add and and add sbb add add (bad) (bad) jmp or cmpsb add add idiv (bad) lcall and dec add add jnp add add sbb add adc cmp jnp add add or pop and lock add add (bad) (bad) lcall and sbb add and add sbb add (bad) (bad) jmp push or add add jnp add add jnp add add pop (bad) dec add add add pop orl cmp add add pop pop sbb pop sbb lds add adc add add add sub add (bad) (bad) lcall stos add add or aad (bad) call inc add add idiv (bad) lcall sub add add sbb add add adc adc and or add add add pop adc push add or push sub pop adc sub adc add adc sbb add and inc add add idiv (bad) jmp or add add add pop adc pop pop pop pop bound pop sub in add add inc add add idiv (bad) (bad) cmp push adc adc inc add add (bad) (bad) decl std (bad) jmp (bad) (bad) call (bad) (bad) (bad) cmp add cmp add cmpsb add add add pop add add add add add adc add push add add (bad) (bad) call add es (bad) call add add (bad) (bad) jmp add add add inc add add add add (bad) decl (bad) (bad) ljmp (bad) inc std (bad) call add add add add (bad) (bad) decl std (bad) decl add add (bad) (bad) fdivrp (bad) pushl add jno (bad) (bad) jle (bad) call add add sub cmp (bad) (bad) lcall idiv (bad) jmp cmp add or xchg pop adc sbb cmp (bad) (bad) lcall inc add add idiv (bad) jmp add add add push pop sbb cld (bad) (bad) lcall pop pop adc pop adc (bad) lcall inc add add idiv (bad) jmp or sub add pop inc add add idiv (bad) lcall adc sbb add and (bad) lcall add (bad) (bad) jmp sub jnp add add pop adc pop sbb (bad) lcall idiv (bad) jmp add jnp add add imul and add and cmp incl sub add and or sub insl (bad) (bad) incl jnp add add or and add pop orl cmp incl jnp add add jnp add add pop (bad) dec add add add pop orl cmp pop pop or (bad) (bad) lcall inc add add idiv (bad) jmp sub jnp add add push sahf pop push sub add and (bad) lcall idiv (bad) jmp add add add adc adc rcrb push and (bad) lcall idiv (bad) jmp adc add push pop sub mov (bad) decl push cmp sbb add add (bad) (bad) lcall or popf std (bad) decl add add add xchg idiv (bad) lcall pop sub add and (bad) lcall inc add add idiv (bad) jmp adc push cmp sbb add add (bad) (bad) lcall cmp (bad) call or jnp add add pop aas (bad) (bad) lcall add (bad) (bad) call pop cmp std (bad) lcall inc add add idiv (bad) jmp cmp adc adc lcall inc add add idiv (bad) lcall pop cmp std (bad) call or pop adc pop adc std cld (bad) call or sbb sbb add and (bad) lcall inc add add idiv (bad) jmp adc pop pop adc pop or aad (bad) incl jnp add add or pop and add add add pop orl cmp jnp add add pop pop pop (bad) dec add add add pop orl (bad) cld (bad) decl pop pop or sbb sub add and (bad) lcall inc add add idiv (bad) jmp pop movhps arpl (bad) lcall inc add add idiv (bad) jmp sub xor add add sub es pop inc cmp add pop adc pop inc cmp push add adc pop adc pop pop sbb adc xchg xchg adc xor add add idiv (bad) call sub add es inc cmp add adc sub add and add sbb add add (bad) (bad) jmp cmp add or aas sub add sbb add add (bad) (bad) lcall pop push cmp add add idiv (bad) jmp cmp add add adc pop adc xchg sahf sbb jle add adc sbb or sahf pop and insl add push add adc pop pop or xor inc add add idiv (bad) lcall sbb push add pop adc pop adc xchg sahf pop or push and add sbb add (bad) (bad) jmp pop adc pop adc xchg sahf pop cmp push and add sbb add add (bad) (bad) jmp add or push add push pop inc cmp add add or pop pop adc adc xor in add add push push ds add sbb add add (bad) (bad) lcall or aam add adc and xchg add add inc add add idiv (bad) lcall push cmp adc sbb push and add sbb add add (bad) (bad) jmp adc add inc add add idiv (bad) lcall push cmp or sete incl add pop adc adc and add add and add and adc pop add add adc xor cmp add sbb add add (bad) (bad) jmp pop adc pop adc xchg sahf sbb cmp add adc adc sahf push cmp add adc adc add push xchg push bound adc add pop inc add add idiv (bad) jmp adc pop and cld add add adc adc and add sbb add add (bad) (bad) jmp pop or pop and pop or sbb es add add inc add add idiv (bad) jmp adc and popa add add add idiv (bad) lcall and cmpsl add add adc xor inc add add idiv (bad) lcall adc xchg add add adc adc adc xchg add push sub or and or add push and add pop inc add add idiv (bad) jmp sub or (bad) (bad) lcall inc add add idiv (bad) lcall sub cmp or adc or sete or adc pop adc adc sahf pop or push add add push xchg adc pop and adc add adc pop adc xchg xchg adc pop adc pop pop xchg xchg ds (bad) call inc add add idiv (bad) lcall aaa sub es add add inc add add idiv (bad) (bad) cmp add add or pop sub add and cmp sbb add and add sbb add (bad) (bad) jmp adc adc pop sub cmp inc add add idiv (bad) (bad) cmp add aas lods add add idiv (bad) lcall adc add or or pop cmp add push or add add adc sbb pop add add data16 (bad) incl adc pop adc xchg sahf pop xor inc add add adc sub cmp add or aas jle (bad) call inc add add idiv (bad) lcall sbb sbb cmp add add inc add add idiv (bad) jmp push adc add add sub add and cmp add add push xchg adc sbb cmp add add inc add add idiv (bad) jmp cmp (bad) incl jnp add add add adc movb add add (bad) (bad) jmp adc pop pop adc pop cmp or adc xchg xchg adc pop adc pop pop xchg xchg ds cld (bad) lcall inc add add idiv (bad) lcall adc mov add adc pop pop adc pop sbb add jnp add add adc pop pop sbb adc xchg xchg adc lcall inc add add idiv (bad) call sub add and add sbb add (bad) (bad) jmp pop daa sub add and add sbb add add (bad) (bad) jmp add pop pop add add add and add and add cmp add add or inc sub es add add inc add add idiv (bad) (bad) cmp add add or adc pop pop sbb adc xchg xchg adc cmp pop inc add add idiv (bad) lcall xor movb add or adc sbb cmp inc add add idiv (bad) jmp add add add imul add add sbb add pop adc cmp mov add adc sbb pop adc pop cmp add pop adc adc pop and outsb add add adc pop pop pop adc pop inc sub add pop adc inc sub add sub es sub sbb add and inc add add idiv (bad) jmp sbb pop pop pop sub add and das sub adc sbb adc setle cmp sbb adc pop adc pop aas sub push adc cmp cli (bad) lcall inc adc adc inc dec add add stc (bad) call add add (bad) lcall (bad) lcall sti (bad) decl (bad) incl clc (bad) (bad) cmp add pusha std (bad) dec (bad) (bad) jmp cli (bad) jmp (bad) incl cli (bad) incl add add (bad) decl std (bad) incl sti (bad) jmp stc (bad) pushl add push sti (bad) incl cli (bad) (bad) fdivrp (bad) pushl (bad) call std (bad) dec cld (bad) (bad) fprem (bad) lcall add scas cli (bad) incl cli (bad) call (bad) (bad) out stc (bad) jmp (bad) call (bad) (bad) (bad) std cld (bad) call std (bad) dec sti (bad) call cld (bad) incl (bad) jmp (bad) call cli (bad) ljmp (bad) pushl sti (bad) jmp cli (bad) ljmp std (bad) lcall cld (bad) (bad) mov (bad) (bad) jmp cli (bad) ljmp (bad) call (bad) decl (bad) pushl (bad) incl stc (bad) pushl (bad) (bad) incl (bad) call adc cmp (bad) (bad) lcall inc add add idiv (bad) jmp adc or pop stc (bad) call inc add add idiv (bad) lcall (bad) (bad) (bad) call or adc mov pop cmp sbb add add (bad) (bad) call pop cmp inc add add idiv (bad) jmp adc (bad) lcall idiv (bad) lcall xor gs (bad) decl and push pop sbb push (bad) (bad) incl adc adc sahf pop cmp dec (bad) (bad) ljmp add adc or mov add adc add push sub add and add and add pop inc add add idiv (bad) call sub add es sub add add (bad) (bad) jmp pop pop pop or sub add add imul add add (bad) (bad) lcall pop sub push or sub sub push add add add xchg add add add xchg pop pop or sub or add add (bad) (bad) call add add (bad) (bad) lcall (bad) (bad) lcall add add xchg sbb sbb add and inc add add idiv (bad) jmp push sub add adc or insb add add add push pop adc outsl add add add add inc add add idiv (bad) call sub add es sbb dec add add jnp add add adc and add pop push add sbb sub add and pop adc sbb cmp add add add (bad) (bad) jmp add add add add adc add push and add pop inc add add idiv (bad) jmp add add add adc and add pop push add pop cmp add add adc add add (bad) (bad) lcall sbb scas add add pop pop and add add inc add add idiv (bad) lcall cmp or push cmp out add add add add adc and add pop push add or add add cmp add sbb add add (bad) (bad) lcall or dec cmp add add add pop adc sub push or sub add and add sbb add (bad) (bad) jmp pop adc inc add add idiv (bad) jmp adc push adc pop adc mov adc inc sbb add add (bad) push (bad) (bad) call add sub add mov (bad) (bad) lcall (bad) (bad) (bad) cmp (bad) call (bad) (bad) pushl (bad) (bad) call add add (bad) decl add inc add add (bad) (bad) ljmp add jb (bad) inc (bad) (bad) (bad) std (bad) (bad) call add pop (bad) (bad) jmp (bad) (bad) (bad) js add sbb sbb cmp (bad) lcall add (bad) (bad) jmp or jnp add add add cmp (bad) (bad) lcall inc add add idiv (bad) lcall or sbb cmp (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) lcall or push cmp (bad) (bad) incl jnp add add add add add pop push add movaps cmp (bad) (bad) lcall inc add add idiv (bad) jmp adc add push and (bad) lcall add (bad) (bad) jmp sub pop or sbb add (bad) (bad) lcall call adc adc mov movsb (bad) (bad) lcall sbb sbb cmp inc add add idiv (bad) jmp adc jnp add add push sbb add add (bad) (bad) lcall sbb sbb add and (bad) lcall inc add add idiv (bad) jmp or cmp (bad) (bad) lcall inc add add idiv (bad) lcall cmp (bad) call add jnp add add fistp inc add add idiv (bad) call cmp (bad) ljmp mov aaa (bad) (bad) incl jnp add add (bad) push add add add push add add mov (bad) jmp pop or paddd ljmp adc or jnp add xor add push pop or movsl add add add jnp add add push add add inc add add idiv (bad) call sub add es and jle add or add add idiv (bad) lcall or push add add inc add add idiv (bad) ljmp sbb add and add and add pop inc add add idiv (bad) jmp sbb and pop sbb sub add add (bad) (bad) jmp or pop and add add idiv (bad) (bad) cmp add add or push adc inc and add xchg add add add add add add (bad) decl (bad) (bad) stc (bad) (bad) incl add loopne add stos add add (bad) (bad) ljmp add add add add add aaa add add add add add add add add add add add add add add add add add add (bad) jmp add add (bad) (bad) inc add add add add pop or push and (bad) lcall add (bad) (bad) jmp cmp adc and add cmp add add sbb inc (bad) (bad) incl pop adc and add pop adc ss (bad) (bad) cmp or rcrl inc add add idiv (bad) lcall adc call adc cmp (bad) (bad) call add jnp add add push sbb add add (bad) (bad) lcall sbb cmp (bad) (bad) lcall idiv (bad) jmp adc pop adc push cmp (bad) (bad) call or (bad) (bad) (bad) lcall or pop cmp (bad) (bad) incl adc push pop sbb mov jnp or decl pop cmp add add idiv (bad) lcall adc cmp inc add add idiv (bad) jmp add add add jno add sbb sub add push pop adc je (bad) incl jnp add add add adc (bad) (bad) ljmp xor or and add pop or sbb add and (bad) lcall inc add add idiv (bad) jmp adc (bad) (bad) lcall or das (bad) (bad) decl and xor sbb add add (bad) (bad) call pop cmp (bad) (bad) lcall inc add add idiv (bad) jmp adc cmp (bad) (bad) lcall add (bad) (bad) jmp cmp (bad) (bad) call add pop adc sbb in (bad) incl jnp add add jno add sbb sub add push pop push sub es std (bad) lcall inc add add idiv (bad) (bad) cmp or (bad) decl cmp (bad) lcall inc add add idiv (bad) lcall adc xchg std (bad) (bad) cmp cld (bad) call or adc mov (bad) decl add add add add mov inc add add idiv (bad) lcall push cmp incl jnp add add jno add pop or sub add push pop sbb (bad) lcall inc add add idiv (bad) jmp add adc and add push cmp std (bad) ljmp add xor add add add add add add push add push add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add cmp add add xor add add add add add add push add sub add push and add or sldt add add add add push add add jnp add and xor add add add add add add push add add je add and xor add add add add sub es add outsl adc add sub xor out add cmp add sub es sub es sbb push add jae add push jge add add sub add add add sub add push and add sbb add add (bad) (bad) call sub add es pop add add add sub push and add xor or inc or add xchg (bad) (bad) incl add add add add (bad) ljmp add add add add add pop add add sub add add add push and add add add push and add adc push pop sub add add (bad) (bad) jmp add pop and add jge add add or addl sub cmp (bad) ljmp add add or add add add add push add jnp add add jnp add add sbb jnp add add jnp add add pop xchg popa jge add add add adc or mov add adc add push sbb inc add add add bound jnp add add jnp add add pop xchg popa and jg add push sub add jge add add sub jnp add add add add add popf sub or inc pop add add add add (bad) (bad) dec (bad) (bad) incl add add (bad) (bad) lcall add add mov add add add jnp add add (bad) jg add jnp add add xchg and add push and add and inc add add idiv (bad) call sub add es xchg push and incl add add adc or add add adc add push pop or push add add and addb aas daa add add inc add add idiv (bad) call sub add es cmp add add and add add mov add sub add push and add sbb add add (bad) (bad) jmp sbb incl add add add add mov add push cmp add add and addb xor pop inc add add idiv (bad) lcall adc int add sub add add add xchg and incl add pop push cmp inc add add idiv (bad) jmp add add add mov add (bad) add add jnp add add pop and addb das or add idiv (bad) call sub pop and addb pop push pop or or pop or or das add push and inc add add idiv (bad) jmp add add add add mov add and addb sub add push pop or sub or es (bad) (bad) incl jnp add add xchg and incl add sbb clts pop pop or mov (bad) lcall or add add adc add sub add add add es (bad) (bad) mov (bad) (bad) (bad) mov (bad) (bad) decl (bad) jmp decl (bad) (bad) ljmp call (bad) (bad) (bad) ljmp decl add add sub add or add sbb add add (bad) (bad) call sub or add popf sbb mov or or push and (bad) lcall idiv (bad) jmp sub add xor add add adc add push pop or cmp add add add (bad) (bad) call sub add es add push pop push cmp jnp add add jnp add add jnp add add jnp add add jnp add add push sub add push sbb add push and add sbb add add (bad) (bad) jmp add add add jnp add add rolb add sbb add (bad) (bad) lcall lea add aas ja add sbb add add idiv (bad) lcall or and add pop movntps and add pop jge add add push sub sbb add (bad) (bad) jmp add add pop jge add add mov or pop inc adc add jbe add xchg (bad) call (bad) (bad) incl (bad) decl (bad) (bad) (bad) mov (bad) (bad) incl (bad) call add sti (bad) (bad) incl add add (bad) jmp add add add add sub add cli incb add cmpsl add add idiv (bad) lcall or lcall add add add add add add add add or or das add push and (bad) lcall inc add add idiv (bad) jmp push add add add jnp add add mov inc add add idiv (bad) lcall cmp (bad) incl and add pop jge add add (bad) (bad) (bad) jmp pop cmp (bad) (bad) incl jnp add add jnp add add or sub add push and inc add add idiv (bad) jmp pop or add (bad) incl jnp add add push add add (bad) (bad) lcall inc add add idiv (bad) lcall pop cmp (bad) (bad) call inc add add idiv (bad) jmp sub xor mov add adc add push pop and add add adc add inc add add idiv (bad) call sub add es sbb add adc aas mov inc add add idiv (bad) lcall pop pop cmp add add inc add add idiv (bad) jmp add pop adc or add jnp add add xchg add add add xchg inc cwtl add add inc add add idiv (bad) (bad) cmp add add pop and add push push aas stc add add add (bad) (bad) lcall adc imul pop cmp add add inc add add idiv (bad) lcall push cmp add add add add add and add add sbb pop and xor add add add add pop pop and mov add add pop and adc (bad) lcall inc add add idiv (bad) lcall add jnp add add add add pop pop pop adc pop sbb cmp add add inc add add idiv (bad) jmp add push add add add xor add and add sub lds add add add add pop pop and mov add add pop and movsl (bad) (bad) call inc add add idiv (bad) lcall or xchg add add jnp add add add or push cmp add add add movl add add idiv (bad) lcall add push and add sbb add add (bad) (bad) jmp add add add adc pop pop pop xchg adc xor inc add add idiv (bad) lcall sbb xor add add add add sub add push and cmp add add jnp add add pop and cmp add sbb add add (bad) (bad) jmp or and jg add and incl add decb add adc ds inc add add idiv (bad) lcall pop cmp add add jnp add add pop pop and mov add add pop and mov (bad) call inc add add idiv (bad) lcall or movsl add add jnp add add pop adc cmp inc add add idiv (bad) jmp add add add pop pop and mov add add pop and imul lcall inc add add idiv (bad) lcall adc pop add add jnp add add pop pop xchg add add add pop pop xchg inc inc (bad) (bad) lcall inc add add idiv (bad) call cmp add add jnp add add pop (bad) add add sbb pop adc cmp add add idiv (bad) jmp push pop pop and add pop inc add add idiv (bad) lcall sbb add push and add sbb add (bad) (bad) jmp add add add add cmp add add adc add add jnp add add jnp add add adc add and add sbb add (bad) (bad) jmp add add add pop pop and mov add add pop and jle (bad) lcall inc add add idiv (bad) lcall or jno add add add sub jnp add add add or daa sub addb add push sub add push and (bad) lcall add (bad) (bad) jmp pop sbb xor jnp add add pop pop and mov add add pop and adc (bad) lcall inc add add idiv (bad) (bad) cmp (bad) (bad) lcall and or or add add sti (bad) pushl (bad) inc std (bad) dec sti (bad) ljmp (bad) (bad) lcall std (bad) lcall (bad) (bad) jp (bad) pushl add add (bad) call cld (bad) decl std (bad) jmp sti (bad) dec cld (bad) ljmp (bad) (bad) inc add add cld (bad) (bad) mov (bad) (bad) jmp (bad) (bad) decl (bad) ljmp (bad) pushl (bad) (bad) (bad) sti (bad) decl (bad) (bad) jle add out (bad) lcall (bad) (bad) incl add add std (bad) decl (bad) (bad) jmp add stc (bad) (bad) push add add or dec (bad) (bad) incl jnp add add pop push cmp (bad) (bad) incl jnp add add cli jle add sub add push and sbb sbb jnp add add pop pop and mov add add pop and std cli (bad) lcall inc add add idiv (bad) lcall cmp (bad) (bad) decl add add add adc pop and cmp (bad) (bad) lcall inc add add idiv (bad) jmp and pop sub das add push and (bad) lcall add (bad) (bad) (bad) cmp jnp add add adc pop xchg adc inc fwait cld (bad) lcall inc add add idiv (bad) lcall adc incl jnp add add pop pop and mov add add pop and imul lcall inc add add idiv (bad) lcall cmp (bad) incl jnp add add incb incb sub add xor add add sub es pop pop cmp xchg add add jnp add add jnp add add jnp add add jnp add add add xor add pop xor pop add add jnp add add jnp add add jnp add add pop xchg and add add xor add and push cmp inc add add idiv (bad) call sub add es add add sbb add add (bad) (bad) lcall or add sbb add add idiv (bad) jmp add add push pop xor out add add add add jnp add add or add add add add xchg add add inc add add idiv (bad) lcall (bad) add add jnp add add incb sub push adc jnp add add jnp add add jnp add add adc xor add pop and add pop inc add add idiv (bad) jmp add add pop jge add add adc mov add pop and jle add sbb add add (bad) (bad) call sub add push and add sbb add add (bad) (bad) jmp pop sub xor sbbl add add idiv (bad) lcall adc add push and inc add add idiv (bad) jmp pop sbb cmp pop adc add add add add add add add pop (bad) (bad) incl add add add add add add add add add add dec add add add add add add add (bad) (bad) inc add add add aas add add add add add add (bad) (bad) call add add add add add inc (bad) (bad) ljmp add fwait add add (bad) (bad) lcall (bad) ljmp add add add add add (bad) (bad) ljmp add add std (bad) pushl add add add loop add dec add add add add add pop sub cmp (bad) (bad) lcall inc add add idiv (bad) jmp add add add jnp add add jnp add add pop xchg and add add xor add and cmp (bad) (bad) incl and add pop jge add add push cmp (bad) (bad) incl jnp add add pop sbb lret (bad) (bad) incl sbb add add or mov sub jnp add add cmp add sbb add (bad) (bad) lcall push cmp inc add add idiv (bad) jmp add add pop jge add add cmp and add pop jge add add fsubl pop adc push push jge add add adc pop (bad) (bad) incl jnp add add cmp sbb add add (bad) (bad) lcall push cmp jecxz add add add add bound add sbb add add (bad) (bad) lcall sub sbb (bad) incl sub es and or (bad) incl jnp add add jnp add add pop push pop pop sub es and in std (bad) incl pop pop and (bad) (bad) lcall inc add add idiv (bad) lcall cmp std (bad) lcall inc add add idiv (bad) jmp add add add xor add add idiv (bad) call sub add push and (bad) lcall inc add add idiv (bad) jmp add scas add add inc add add idiv (bad) lcall and cmp incl and add pop jge add add pop cmp (bad) incl sbb add add push cmp (bad) incl sbb and (bad) call inc add add idiv (bad) lcall cmp (bad) incl cmp inc add add idiv (bad) lcall xor cmp std (bad) lcall idiv (bad) jmp add add pop jge add add sub cmp std (bad) call inc add add idiv (bad) jmp add jge add add pop cmp cld (bad) call inc add add idiv (bad) jmp adc incb sub jnp add add push add add (bad) (bad) lcall add (bad) (bad) lcall xor das add push and (bad) lcall idiv (bad) (bad) cmp or sub add and (bad) lcall add (bad) (bad) lcall sbb decl cmp (bad) (bad) lcall inc add add idiv (bad) lcall and jns (bad) incl jnp add add cmp sbb add add (bad) (bad) lcall incl and add pop jge add add or dec cld (bad) incl jnp add add jnp add add and adc add sar (bad) lcall inc add add idiv (bad) lcall sub add push and (bad) lcall inc add add idiv (bad) jmp add add add aas mov inc add add idiv (bad) lcall cmp sti (bad) decl pop pop or sti (bad) incl jnp add add xlat (bad) (bad) lcall inc add add idiv (bad) lcall or lret sti (bad) incl pop jge add add sbb das add push and (bad) call inc add add idiv (bad) (bad) cmp jnp add add aas scas std (bad) lcall add (bad) (bad) lcall daa sub add push and (bad) lcall inc add add idiv (bad) jmp push sub jnp add add cli incb add mov add sbb add add idiv (bad) lcall sbb push sti (bad) incl jnp add add add push and (bad) lcall idiv (bad) lcall and xor (bad) incl sub es cmp sti (bad) incl add add add mov add sub incl jnp add add push add add (bad) (bad) lcall idiv (bad) lcall adc add push and (bad) lcall inc add add idiv (bad) jmp add add add pop das sub add push and (bad) lcall add (bad) (bad) (bad) cmp sub add adc or fldl add inc add adc add push pop pop sub add add (bad) (bad) call sub add es add add aaa add push and add sbb add add (bad) (bad) ljmp imul sub add push sbb and jnp add add jnp add add add add or pop add sub add and pop or inc or add mov (bad) pushl (bad) (bad) (bad) mov (bad) (bad) jmp add add add push sub add push and inc add add idiv (bad) jmp push sub add add (bad) (bad) lcall mov add idiv (bad) call sub add push and (bad) lcall inc add add idiv (bad) jmp sbb mov sub add adc or addl add add adc add push sub add push and add and inc add add idiv (bad) call sub add es or push jge add add and or inc push add add add push add add add add add xlat (bad) (bad) ljmp add add add pop sub add sub push and add add pop sub add add (bad) (bad) jmp add jge add add sub or adc add add add sub es add add add jnp add add add add xor add add add add add add push add push add or add xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor add add add add add add push add add jnp add and xor add add add add add add push add add je add and xor add add add add add add push add outsl add add and add or add add add add push add add push add incb add sub xor add add add add add add push add add add add and xor add add add add push add add push and add xor add add add add push add add push and add xor add add add add add add push sub es add add add sub push and add sub add sub add adc or cmp add cmp add sub es add add add and add or pop jge add add add pushf add add add and add or pop jge add add add arpl pushf sub add or add add add add push add jnp add add jnp add add sub add add add pop jge add add add xor add add add add add add push add add add add xor add add add adc add push push sub add add add and add or pop jge add add add add add rcrb inc or add xor (bad) (bad) call add add add add add or add add jge add add sub add jge add add in sbb inc add push and inc add add idiv (bad) call sub add es add add xor sbb add add (bad) (bad) lcall mov jnp add add and add or pop jge add add add add add pushf pop sub add and inc add add idiv (bad) jmp sbb cmp (bad) lcall inc add add idiv (bad) jmp add add add jo,pt (bad) lcall inc add add idiv (bad) call cmp (bad) (bad) ljmp adc or add add adc add push push sub add and add sbb add add idiv (bad) call sub add es add add add add pop pop bound cwtl add add cmp jnp add add adc icebp add add inc add add idiv (bad) call cmp and add pop jge add add cmp and add adc cltd add add or outsl add add add and add or pop jge add add add add add rcrb jnp add add adc add add mov add push and inc add add idiv (bad) jmp add add add and add or pop jge add add add add add pushf sub push or inc or add add (bad) ljmp (bad) (bad) jmp jmp call (bad) call (bad) (bad) decl add add inc add push and add and inc add add idiv (bad) jmp sbb mov add add or push add add add add add push add add add incb sub add xor add add adc add push pop or pushf add add jnp add add jnp add add add sub add sub push sub add and add sbb add add idiv (bad) call sub add es add pop jge add add or jge add add or inc add push and inc add add idiv (bad) jmp add jge add add sub add add fs add add sub add add add jnp add add decb add cmp (bad) lcall or pop inc push add add add add (bad) pushl (bad) call add and add test (bad) (bad) decl add add add xor add daa (bad) (bad) ljmp or mov add jnp add add jnp add add add sub add sbb mov add add pop jge add add or xchg add add jnp add add xor sbb add add (bad) (bad) lcall jno (bad) incl jnp add add and add or pop jge add add add add add pushf push cmp incl jnp add add xor add idiv (bad) call sub add and (bad) lcall inc add add idiv (bad) jmp sbb sbb (bad) incl xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add add or add add xor add add add add add add push add push add or add xor add add add add add add push sub es add dec add push sub add or adc add add add sub es sub es add push sub add sub add add or and add add add sub es add and add add sub add add push arpl incl add pop shrb dec add push sub add or push add add add add add push add sub add add pop adc inc add push sub add xor add add add add add add push add dec add push and add push and sub xor add add add add add add push add dec add push and add push and pusha sub add add or or add add add sub es add outsl jl add sub xor add add add add add add push pop sub add xor add add add add add add push push sub add xor add add add add push add add or add xor add add add add add add push add push add or add xor add add add add push add add add add sub add push add add add push add add add push add add sbb push add add add push add add sub add add sub add sub add sub add push add add sub add add sub add add add push add add sub add or add sub add add add push add add sub add add add push add add sbb push add add add push add sub add sub add sub add push add sub add add add add add jg add sub add add sub add sub add add sub add add sub add sub add add add sub add add push add add sub add add sub add add sub add sub add add sub add sub add add add adc sub add and add addl add mov add jnp jge pop add adc stc lcall lea pop mov outsb fistl xchg cmc inc dec test add jb enter jge or stos xchg pop push cmc enter test dec xor arpl imul mov inc cld cmpsb push loopne imul add mov lods xor adc mov add inc sbb (bad) sbb adc mov adcl outsb sub adc imul in adc add sbb mov pop sub shrb mov sti aam popf nop test push xlat int pop push jns add aaa leave dec mov fwait xchg sub addr16 cmp leave in mov lret mov jmp mov shrb push popa mov pop sub push gs inc mov loopne rcl pop adc sbb loope fcmovnbe lcall cwtl icebp inc pop cli fwait das add sub cmpsb jne mov cmp shrb pop lea dec in std out (bad) xor andb popa rcr (bad) (bad) jle mov lcall scas jle fnstsw into mov loop sub inc jno xchg or icebp mov sar mov insl and out sbb fldl out mov (bad) pop (bad) shrb fs pop mov nop decb cmc mov pop mov jae (bad) lods je fbld or and xchg and add dec mov rol dec mov sahf mov sub mov pop out mov mov push hlt dec movsb je adc and jne pop pop imul ss inc sti sbb insb dec lahf mov sbb inc pop xor add scas or dec push jle imul lods xorl sar cmp sub out daa push jnp cmp jo scas outsb mov pop bound jne push mov movb popf ja and sbb push js dec inc pop push test xor add push xchg push xchg clc clc pop js sarb cld mov xchg in dec (bad) sbb into or ja stos xchg dec jb cmp jmp fidivr popf push lock mov sub in lea fwait mov cwtl aam lea lods mov lcall pop jbe cli (bad) mov js mov pop xchg jmp addr16 in sbb push xchg loop cltd pop stos sbb test gs xchg sbb in lret jg xchg cmc and lea clc mov fistp stc sahf adc inc (bad) jp loopne mov test jge push cmp into and adc jo cltd adc je lcall mov mov insb dec mov sbbl sub dec call cltd addr16 (bad) out push (bad) mov fsubrl test notl jl add cld rcll fisubl sbb mov test aas movsl cmp mov loop dec sti adc lahf repnz stc mov cli ds jae xchg mov dec je xor aam lret jge stos jmp jecxz test stos sub scas mov fs mov sub test or sbb rcr mov hlt jae sub add repz clc ds adc pop (bad) pop pop popf push mov lea and sbb dec pop dec or and stos into pop push xchg dec pop stc (bad) in outsl sub push push mul inc stos roll or popf arpl lds cld adc lcall imul xor scas loope dec sub je sbb jl out jnp mov ffreep jb addb push jp aaa (bad) mov mov or pop aam dec push repnz (bad) (bad) sub mov push mulb cli repz loop lret push inc cmp pop hlt xchg dec jle push jbe mov cld sarl xor aam and mov cmp int add repnz inc gs inc daa push inc push dec cmp dec mov insb pusha pop int3 enter xchg mov jnp stc xor daa mov icebp mov cmp icebp cmp adc imul int3 mov mov mov test push add lods lahf or data16 mov popf push dec lods aad xchg pop push jno xchg push cmp and dec scas jg mov fdivl ja mov xor (bad) adc sbb cmpl inc arpl fisttpll fwait sbb cs dec aad out cmpsb out shll ror fdivs jno jns jl xchg rcrl xorl fstpl mov adc jecxz rcrb push xchg lock not stos lods mov lcall cmpsl das mov push mov sbb sub dec and push add xchg (bad) mov adc pop aad jmp pop insb adc rorl inc mov fnop jne int add cmp cmp addr16 bound fsubr (bad) adc orb cs ljmp or nop leave inc dec mov dec std or mov test arpl cmp fcomps fmuls insb adc loopne fs call mov ss push aaa xchg lret fistpl push push mov xchg pop pop lret sbb pop xchg mov mov ss mov rcrb dec stos clc pushf scas pushf xchg push sbb and stc sub adc jb jp (bad) mov mov sahf mov je sub repnz dec sbb push xchg out sti mov xchg sbb mov (bad) aam je push jns pop xchg in out mov pop (bad) or in jmp sbb cmp inc stos pop inc xor std mov into mov imul cltd test fxch xchg in arpl adc add repz fdivrs iret pop inc aas in jno sbb push mov mov xor mov ljmp data16 stos push mov lret mov sahf inc mov cltd shr mov jb xor mov inc mov imul aam das add fs aam push aas popf (bad) out and stos mov out rolb aam xlat stos pop lahf push sbb test je repnz mov jno mov jp dec iret int add sub inc dec and sbb push fidivrl cmp xor pop add pop xor mov adcl loop popf xchg mov call pop int mov repz pop lret xor mov adc lea inc cmp xchg pop repnz push adc pop jns xor (bad) jo xlat pop mov cs test stc outsl jbe (bad) push adc mov icebp rcrb cmp pushf dec loope out ficomp fstpl push mov (bad) xchg shll mov dec daa ljmp jp dec fwait mov jne push sarb (bad) or std push popf enter in add mov push lahf dec push lcall mov cli inc xchg mov mov fmuls in sub icebp sbb lods fsubr sub iret mov jl cmpsb into aad (bad) sbb std movsl in jle push dec aad shlb mov sbb jg lods xchg inc mov pop xor sub jge fimul add pop dec push gs push (bad) xchg xchg jae sub mov clc jb xchg repz scas cmp insl dec lret sub xor lcall cmpsl ret push sbb and std jbe push addb sbb add dec fcoms push ljmp inc or bound idivl aaa insl cmp xor scas sub dec cwtl js repnz dec adc mov enter lret test jg adc pop pop ret push imul repnz pusha cmp imul sub ds out sub daa pop mov je rolb sub sbb lret stc pop and adc popa mov inc mov loopne xchg popf dec cmp cltd sbb inc xor pusha adc cmpl mulb pop push mov push push mov in incb lcall loop test pop int3 das push jecxz getsec cli xor out and nop or pop or je aam loope xchg loop cmp fistpll xchg test xchg cmpsl lods or leave shl mov push inc test loop mov jbe sub fwait nop arpl mov or mov in mov mov jbe pushf aas or xchg push dec fdivrp ficom in les bound or cmpxchg ret inc (bad) lods jg or add in cli cmc mov ljmp enter or (bad) insl (bad) inc inc xchg add xchg jbe or mov xchg das popf pop inc mov jmp or lcall mov ret stos mov sub insb pop jge andl pushf xchg pop popa dec cmp daa push imull lcall in test outsb lea pop or jp lods imul hlt cmpsl xchg or sbb jge popa cmp lahf mov test icebp mov jne pop adc (bad) repnz ret mov mov rol and jno mov ja push test inc call jle out mov out movsl int3 pop popf fdiv scas sbb sbb out icebp and in inc and sbb or push cmp into pop lret mov mov and clc cmp dec out push jno jne sbb clc (bad) xchg push aad mov gs add cmp mov movsl or jno pushf ret xchg gs push clc sbb std rolb insb outsl pop cmp mov cltd mov mov mov cmc mov fidivrl lea lea dec push mov shl hlt incl in popa incl test xlat cmpsl push and adc stos xchg adc enter fadds das xchg and adc loope aam dec stos cmp xlat mov scas jle rcl cmp insb scas mov pop xor cmp cmp popf rol in fildl add jmp mov arpl mov adc mov and (bad) insb je and ret out push mov fdivl inc bound and push and shll sub add jg int3 push jmp js add adc out cmp cmp cltd in pusha ds sub lcall add adc fisttpll leave and sbb mov jns pushf in pop in and sbb inc lock out mov cmpsl cs testl ror (bad) push andl int3 sub pop stos sbb jl test in pop movl sbb lods push cltd subb fimul and push add arpl cmpsl adc notb pinsrw cs push xlat mov push xchg sub cmpsl negl push aam stc fisttp jo fldl xchg es cs lret in vaddss fildl (bad) fadds push pop lea and mov out mov repnz pop mov insb aas out or push xor inc call mov pushf scas std sub js or das add ja sti dec addr16 ljmp dec daa and (bad) inc addr16 inc shlb sub enter jne test add push ficoml xor mov xor hlt jae and iret push testb add das in xchg dec adc jns push ficoml pop xchg pop mov mov leave hlt mov xchg insl in jle in icebp loopne or popa stos inc pop scas inc pop cmp fwait mov imul cmp (bad) ja push xchg xlat mov jp in dec xor lods imul movsb repz arpl scas jge mov cs daa setg cwtl xchg push loope in jb push dec pushf out push xchg dec ljmp unpckhps pop jecxz adc pop lret sub loop mov les adc jle inc xchg cmp pop add and lods xchg (bad) jge mov inc out dec enter xor pop (bad) rol push inc mov lods pop mov jb lods jbe loopne pop test dec mull rclb or mov inc jecxz aam insl push imul inc mov mov adc mov sbb (bad) dec inc leave mov sub in and pushf ficomp mov gs and lcall jns sub aaa dec out movsb inc sub mov mull rcrb ja out mov daa add mov jnp dec dec xchg or loopne sub cmp imulb sub std jne ret fld pop pop rclb dec leave movsl rolb push roll jnp lods pop lret jbe xchg iret sub dec jae sbb fidiv test ret (bad) and dec push pushf add mov sti sub mov subl mov mov lret (bad) dec mov mov fnstenv pop outsl sbb gs cmc adc mov mov sbb inc xchg pop stos dec pusha je mov jge push mov fbld xchg mov out xchg and mov pop xorb xorb jle aad pop mov (bad) loopne mov xchg pop adc sbb jns xchg sbb mov adc adc stos mov push scas ficompl mov jle out shll xchg push call dec roll xor jbe pop loope mov push push mov pop push push (bad) lods xchg xchg sti adc out dec std xor push jno mov jp enter andl jnp test mov xor lods test movsl adc dec outsl cmc jmp sub sub pop xchg test sub mov sbb imul nop pop or mov xchg stc sbb negl push push imul inc mov sbb sbb mov mov imul or mov call lret fnstcw iret (bad) insl inc and and out inc repnz pushf aas lds aad test lcall mov repz xchg xor es xor xor push fs repz inc (bad) test das cmpsb rol daa xchg push push arpl xchg (bad) jle loopne push push (bad) lret push xchg xchg imulb arpl push stc (bad) loopne (bad) iret fdivrs xchg outsb stc ja mov xor mov inc or mov cmp jb cmp adc loop push je jmp adc sub add jbe repnz lock add and jmp outsb mov insl outsb aad test pop test inc inc mov dec dec mov je stos pop stos mov adc mov sbb enter fidiv (bad) mov xlat mov and fwait pop add aad out std arpl jnp mov sarl mov loopne cmp push mov orl scas test cmp in sti (bad) adc fsubp xchg push cmpsb loope mov ds and adc sbb fs push lret or lahf ds inc pop mov jo dec pusha movsl and sub ja ds mov mov sub xchg or lret jl jmp lcall and lods adc test das lods xchg fs jno and fs sub aad insl enter aas xor jp mov jne test imul pop jle fucom mov ja or rorb jecxz (bad) mov fildll ret iret scas ficoml orl and lds rcll dec xchg xchg sub adc js sbb icebp and mov ljmp aam je movsl cli ror jb fisubl scas pop in or pop adc es dec insb sub xchg xor add int lahf ja jbe test push ljmp popa mov lret (bad) mov (bad) mov fsts mov in mov dec das movsb fsubrs mov outsl or sbb lret cli mov cmp lret jo ja fstp data16 stos mov sbb fcomps cltd sarl mov mov in mov daa push ret or test orl mov sub push lods cmp xor push (bad) subb pop fldt insb ret mov cmp gs jnp (bad) in adc addl int stc mov ss inc dec pop mov mov push push xor jl test dec ficompl rorb or push sub mov into pusha or sbb sub xchg inc daa loope fldenv cld test idivl xchg push dec push bnd in dec xchg push jge adc jmp inc mov jnp lret jne mov scas ss cli ss mov jbe dec push or popa dec sbb sbbl cmc ficoml cmp mov jno add sub and fimul xchg mov sti xlat cld lahf inc fcompl sub xor shl sahf xchg and ret adc pop nop cmpsl outsb daa stos or dec repnz fwait xchg and push pop repnz js jno push push icebp xlat out mov pop aas inc mov je jno push adc rcrl dec lahf loope mov rolb jbe mov sbb fistpl movsb inc lret lock cmp fsubs jecxz test sbb fcmovnu cmc or das xchg test dec xor ljmp mov pop mov mov push xor imul push sub je dec and ret in imul movsl xchg adc pop cmpsl mov xlat adc and pop aaa jb jmp aad mov inc in mov mov test and idiv inc xor dec iret lcall arpl or inc adcl out or sub jle jg mov (bad) loop mov mov cltd add push call rcl andl push adc call and or sub mov and cmp std sub test outsb std lcall mov xor cli ds xchg ror roll pop pop fcompl nop mov add adc enter (bad) jne adc lahf loopne xchg fisubr bound add jnp lock loope pushf sub leave jns and outsl push inc cmpsb (bad) xchg fs push adc ja dec xor scas adc inc dec fmulp dec jl,pt jno ljmp sbb popa add jp iret pushf sahf ffreep adc xor jo sub jbe mov (bad) xor inc (bad) insb sub add negb mov adc outsb sti rcr mov ljmp lds cmpsb mov cmp daa in loopne fistpl imul clc xchg js out mov shll daa jle mov cmc push inc repnz jb pop push loopne fwait std jmp cs ds jecxz cmp nop ljmp outsl ret lds cmp mov sub or sbb sbb mov mov push aam jne dec push hlt adc icebp jle pop push push aas sub inc fstp mov mov add (bad) fidivr (bad) push dec sbb mov loop inc clc (bad) mov adc cmp mov cmpsb add sbb iret push jp lcall push out imull je pop mov xor mov dec jge ljmp jecxz pop inc subl push dec hlt pop adc sbb push mov adc push sbb mull jmp or adc xlat stc mov dec sub sbbl cmpsl mov dec sub enter pop mov popf popf inc std repz out xor and dec ja gs jg pop sbb jle mov into loop xchg cmpsb inc sbb push repz mov inc fwait loop insl add or pop mov insl mov in das xor push aaa lcall and cld inc (bad) push jno rclb stc and push xor das loop inc in sub sub mov out (bad) jae fnstcw cmp mov push int mov sti shlb imul jl hlt sbb mov jns mov cwtl push call inc sub popf push cli stc fisubr das in std cmp inc das mov push fisubl xchg (bad) jbe bound add pop and pop (bad) push cmp lcall movsl inc cltd push inc mov addr16 xchg cli jo push mov arpl lret jbe andl ret pusha insb jg ret scas jnp cmpsl sub das test testb xor xchg mov gs cmpsl insl mov fidivr (bad) dec and lcall stc ja mov mov mov and mov adc push ja adc mov mov jmp xchg (bad) mov pop std sbb xchg cltd fwait sbb icebp lcall jb mov xchg jbe mov and loope lret arpl push sub test (bad) iret mov jne sbb and inc sub xor and cmp inc (bad) lock mov mov repz jle xchg sub jbe adc test test loop mov inc or or sub sbb inc scas (bad) adc xchg pusha cmpsb jl jae imul inc pop imul adc test rcrb xchg xchg ret imul pushf cmp gs lea inc push push (bad) mov aad or jl jo push shr movsl shrb pusha push cwtl mov sbb mov jge push cmc mov iret lock cwtl sub mov mov ss mov cmpsb fcomps pop cmp jbe cmp out popa jns,pt test into out les out js xor add and adc pusha out insl sub mov cmp repnz push fucom and sub sub pusha or xchg dec std cs dec push mov dec add and mov ss xchg add shrl jecxz add or inc sbb and cmpsb roll xchg iret std xchg (bad) cli jnp sbb pop cmpsb cli jne ret es jnp repz scas in test mov jb xchg ja mov adc inc mov stc out sub xchg fisubr rcll and lret fstps xchg gs int3 mov aad jo mov sti int inc cmp sbb mov hlt addb xchg push inc (bad) mov cmp dec xchg xchg pop dec arpl dec xor addr16 xor add popa xor frstor loopne aaa sarb divl (bad) and jle test adc mov jne scas (bad) lock ja xchg adc clc idivl adc aas aam pop scas dec xor cld xor imul jne jmp mov jg fs mov cmp pop add add lcall dec cmp and in std nop rcll pusha cli ja aam rcrl adcl cs dec pop jle out fild xchg xor jne push adc ljmp popa cmp lds cli jb es xchg pop mov cmp and in lods mov sbb dec rcrl sarb (bad) cmp popf mov pusha lock jbe decl jmp loop jae mov cltd sub rorb xchg pop sub loopne sub mov fwait dec inc push popl pop outsl fcmovbe popa add pop jno cmp hlt sbb cltd cmp icebp mov xchg fildl movsl stc xor jae stos sti mov push hlt dec sbb out fdivs push ret call ret sarb pusha sbb loope xchg push adc (bad) aas sub pop ljmp sbb or mov fwait push arpl cli (bad) pushf xchg fnstsw test sbb add mov or inc inc sbb fdivrl cli iret xchg pusha jb push pushl jecxz dec jge pop push subb add daa subl adc push test mov mov loop xor cmovb xchg leave rorb cmp pop mov xor sbb clc cmpsl push pop adc and in int3 insb out gs insl sbb pushf mov pop mov add push and je icebp (bad) push xchg inc pop adc fistpll int3 mov lods jmp mov mov and shrb insl ret xchg inc mov mov cld jle xor push mov xor xlat leave cmpsb insl push xor loope push data16 and jl enter bound pop pop lods movsl xchg and add pop ja das cmp push cmp adcb and pop push xor mov xor jnp push addr16 adc int mov xor adc lea add pop icebp icebp mov xchg pop push scas push arpl or xchg shrb icebp push sbb enter lahf dec out dec mov int iret mov loope mov mov out loop push pop in jmp xchg out (bad) imulb and fs (bad) mov (bad) pop loope and or inc mov out arpl scas dec fidivrl jae das int jg test (bad) out sbb push std clc dec dec mov mov ja push lret fs pop push cli outsl push xlat dec dec sub sti add aad nop (bad) repnz test cmp pop xchg mov mov cli xchg (bad) insl fldl sarl lret sbb dec lds pop popf inc int ja and jne push sbb mov daa pusha fsubr push stc jmp xchg sbb cmp sub dec sub loopne sub push mov adc fild lcall mov outsb add lcall cld pop imul lods sar mov pushf dec sub cmp xchg pop loope gs xchg leave pop sub cmp sarl hlt aaa add and out js out test dec inc cmp dec hlt lods out aad dec sub adc in sbb loop pop mov mov inc arpl jp inc scas push xchg mov cmpsl or jae pushf add xchg mov roll pop ret scas imul mov mov inc xchg js pop ret jae jle jo notb loope jnp adcl imul sbb shrl push (bad) mov sub stos roll adc (bad) fidivr scas mov xor push ret push call adcb sbb xchg iret pusha push int3 adc lds push push stc inc das sar popf jnp lahf and aad mov fisttp lcall mov add xor popl push lahf mov xor in inc ja mov (bad) adc dec xlat or cmp pop addl imulb xchg fimull cltd pop stos add pop pop (bad) bound xorl test push add jns push ud1 movsb jmp cmpb mov inc popa test aam pop lods mov inc push or les insl mov jecxz subl (bad) loopne jl dec lods daa lods and icebp pop jmp shrb insl xchg aad pop aaa rcrl xor cmpsl loope mov dec ret fcoml cmp jbe and adc inc and xchg imul aas into aam cmp (bad) nop test fsubs js in cmp xor call dec js mov int jae sub sub push inc icebp jp jle ds cmpsl jge repz test mov adc out data16 outsb outsb outsb mov cs mov mov jae and aam mov (bad) sub sub pop xor sbb out or push rclb insb lret mov xchg and cmp mov repz divl test pop push into cwtl or cmp lea push ja pusha loop jmp jb jge mov jp inc add add push sub cmc arpl test push repnz jle negb cmc adc shll stc pop xor inc fdivr outsl out sub mov add pop add cltd dec jbe stos sbb sahf imul (bad) cmp test fstl dec fstps pop mov mov pushf cwtl and pcmpgtw jp cmp test lods mov xchg fimul rcrb push jl push jb xchg mov fwait add inc imull ret jge fiadd xchg sbb jge or negl and (bad) leave mov fsubs icebp es cs mov sahf lret inc daa mov push outsl jmp xor (bad) out dec repz mov cwtl dec test in push or jb push cmp sub test std stos cwtl aaa mov dec repnz and in cmpsl pop lods jae imul or dec mov dec ret vpmaxub stc mov rolb test mov cmp imul add mov sarl sti xor push nop stos lock sti decl push pop jmp jmp sbb push clc sti aas mov xchg sahf test sbb pop mov lcall xor jne jne xor jb,pt mov or jnp dec mov or (bad) xor push roll data16 mov inc dec jmp rorl push mov and dec popf (bad) fldcw (bad) sbb dec stos and enter lock icebp pop adc inc mov dec ficompl and bndstx cmp sub jne sahf pushf push and test out jle imul jmp (bad) (bad) lock icebp add popf mov shrb sbb outsl dec test loope loope movsb jg (bad) mov lock xlat and mov xchg scas call push xor cmp fisubl js scas mov je insb repnz aaa mov and outsb sbb dec loopne pop push mov adc inc sub fiaddl sub jo lret js (bad) dec lret jb jnp cmp ret cmp inc jae mov and iret lcall and xor lock adc fbstp (bad) std cmp pop adc (bad) mov shr ja xor dec mov aas cld in mov add xor mov je outsl in popa cmpsl jno push fisub sub das in add sbb mov adc popf xchg lods push jb mov call mov xor lds not xchg or pop mov jp jmp xchg rolb xor bound push cmp (bad) xchg aad inc or mov sbb mov (bad) lcall icebp sbb push movsb int xchg sahf ja lods jmp fadd adc (bad) inc fcomps iret dec push decl enter sub xchg or sbb (bad) or fstps pop mov xchg xor lret cli jecxz mov nop lahf test mov or fstpl sbb or mov push das ds ret push pop mov lds pop inc mov add test (bad) iret (bad) rcl mov scas shll mov test pop ss lahf lea stc ja movsb (bad) and dec push push movsbl out loop cmpsl pop mov fnstcw lcall mov jecxz nop mov pop (bad) fcomps out add or mov pop inc int loopne mov sbb insb test scas (bad) lret push xchg push scas es lret mov mov inc repnz jmp repz loop aaa dec test mov xchg xor int roll imul cmc pop vpaddusb ds ljmp insb jbe xchg lods jae ljmp int3 std mov sbb je mov ret lea mov es rcr dec lea cmp cwtl mov ljmp ret mov jmp xchg mov xor lods xor inc add sbb push mov sbb or mov add cmpsb les mov add xor ljmp dec xchg xchg push mov es dec mov aaa (bad) lcall cli push push or imul dec ficomp adc lret inc cli push stos repz adc cmpl popa pop push fbstp roll jnp lret fsubs mov outsb cmp and daa pop adc sti and (bad) test xor jae or lret sbb fstps sahf pop mov (bad) inc mov jno and sub pop pop add mov fildll sbb xchg mov mov fsubrs xchg clc cmpsl push insl lret xchg imul or add (bad) push mov data16 enter rcll xchg push push sarb mov int sbb rol scas pop jne mov fnstcw in cmovle pop mov push cmp pop repz add adc xor inc pop mov sub stos pop adc enter dec test addr16 scas jge jae mov xor ffree aad int3 sahf fcmovu jl es xchg dec sbb lret jb cltd add negb mov push rorb imul push shll add and stos into (bad) ret sahf adc sbb es dec aas rcrb mov xorb sub mov pop repnz mov xchg fiadd and add adc shrl lds aaa loope jbe imul dec es cmpsb sub mov mov (bad) pop push fucomi push jno,pt mov add xor (bad) add test icebp sbb out (bad) xor fisubl xchg ds pop mov sbb aam hlt jns cld les ja in outsb jnp cmpsl in push insb aaa push test sahf aas pop inc cs and test lods pop pop jne fs into xor or test out out in das inc gs lahf out jle cmp cwtl pop push sub xchg mov in push and sub fldl arpl cmp adc inc dec xchg stos test sahf push sbb sbb in imul mov ret adc or fcmovu jle rclb mov pop test (bad) mov les sub dec ds jge xor pushf xor (bad) mov or jno repz mov test pushf adc pushf sbb pop js add cmpsb jno jl jle mov aam test loop push pushf test into frstor (bad) add mov shr dec xor aas bound test mov xchg mov mov push scas sbb push and enter push add adc adc out mov lds arpl inc int fwait push clc rcll shrl push push andl pop ja movsb xor inc mov daa sub cmp dec dec popf or dec inc pop xor arpl mov test arpl imul rcl (bad) (bad) jl mov aaa xor or pop inc into imul faddl or pop lock imul lods ljmp jb iret aam ljmp rcrl aam sub or fbld in jbe into jecxz cwtl mov fiadd pop fidiv jge mov sbb sbb push testb pop or iret and and push xchg insb ja repnz in xchg enter (bad) cwtl aad inc lret mov mov movsb jns adc ds lea add loopne insb jp jecxz lods mov inc cmp (bad) cmp or stc adc jmp push imul rcr insb inc cmp orl shrl pop jnp push inc dec dec mov imul or mov mov (bad) inc gs xchg icebp adc in xchg (bad) notl test in scas cmp data16 cwtl sahf push push dec ds push cmp cmp jl (bad) mov xor hlt outsl mov inc std popf sub data16 sahf daa fs inc outsb xor pop loope xor pop (bad) jne mov push jmp in aaa into xlat or xchg mov cltd sbb inc sbb mov ret ret inc dec ficoml or mov sbb ret mov xor jne fimull aam cmc (bad) cs fcmovnb fldl enter insl xor jl adcl sub out push xchg mov dec scas mov sub daa (bad) or push sbb cwtl imul pop out jmp sub shlb and jp out pop das lods lret sbb les rorl mov cmp cltd scas push push xor rolb outsb adc popf in and dec fimull push mov in inc xchg jns pop sub test (bad) dec addr16 cmpsb cmc cs mov shlb inc ljmp sbb sub sub sbb or fisub mov xchg inc and jb sub fwait jnp xor jp cmp ret xchg pop sti fildll mov xlat sarl push xchg pop arpl inc gs adc xchg fsubs add lods push mov push jecxz (bad) cmp pushf xchg test inc insl test fsubs push push sub sub mov or dec insl mov mov and cmp jo cmovne and mov das xchg lahf jle cmc ljmp push clc cmpsl push inc push adc outsb mov jae jno lahf cltd in push xlat enter and mov cmc movsl cld jle test sbb mov xchg in jp dec push cmc rcrl cli sbb sub dec inc (bad) aad outsb cmpsb addr16 imul enter imul (bad) mov (bad) push pop (bad) jns pushf flds cmpsl jns faddl jns cmp lds jecxz daa mov xchg in mov in movsb and fisubr jns add jbe mov nop (bad) mov adc jae and pop fiaddl xor ror test pop mov xchg jbe,pn inc pusha dec jne in sub roll xor xor cmp test xlat pop and (bad) dec daa jo out lock hlt push cmp clc jbe (bad) mov pop addr16 push lea lret xor cmp fwait sub jp movsb std and inc mov andl scas jle into add mov pop ss xchg outsb scas test jae mov xchg aaa inc sbb insb xchg cs cmp mov inc mov inc add imul or sbb lods jmp add cmpsl cmp cmp xchg pop mov jmp daa iret (bad) jle cmpsl jecxz (bad) jmp cmp outsl nop ret dec ljmp jnp idivb inc out mull pop mulb fdivs cmp vpmadcswd enter repz pop lock xor gs jbe jmp adc lahf ljmp pop dec mov fmuls rcr enter pop aam push (bad) cli cltd in cmp or mov ss dec int pop lds pop lock cmp inc xchg pop lret sub mov in (bad) sub or xlat add jno test std mov pusha dec test popf jae (bad) outsl mov sub sbbl jg cs in sub data16 adcb cmpsb idivl (bad) ror cld ret push insb test cmp cmc mov test dec pop nop in or add imul push or adc pop loopne in fsub pop jp negl xor pop mov mov sbb mov scas (bad) int loopne add add arpl dec add push mov pusha insl popf xor dec out cmp and bound sub bound fmull and (bad) leave mov add mov xor lcall pop push inc xchg xchg mov inc jno aaa mov rcll push (bad) dec jl outsb add shll jmp mov sbb sub ficom or aam dec jb in push adc sub sbb inc cmc cmp aaa and fbstp out popf fs lods cmp or sbb push inc rcrb lcall inc repz jbe jge or (bad) je adc cmp mov mov or xchg (bad) pushf cmp clc lcall cmp xchg bound hlt sub loop cltd rcrl push std fmuls mov and push cli push mov in push pop gs and cmp add cmpsb int3 adcl sub sbb mov inc mov jp xchg add ss dec mov mov mov in std mov test dec enter dec movsb xchg jmp dec adc (bad) enter lahf test jp ret mov (bad) fild (bad) inc xor lcall (bad) cld mov mov adc hlt pop or arpl iret lahf pop mov cmp cmp xor cld dec and mov xorl les jnp cmp std insl loopne out jbe setle mov push in shl leave sbb pop lods mov cmp popf data16 in test mov push ss scas sbb lea bswap xor cmp pop xorl cltd jae mov out mov and std pop lock pop js and inc scas fstps (bad) cld sub inc pop test mov add push jne gs call adc mov pushf xor inc outsl or and pop or xlat test pop movsl loope push outsl roll scas jp imul or cld adcb inc popf cltd xor push pop sub js pop cmpsb loope xchg test (bad) loop mov add je push mov mov imul leave mov rcrb nop pushf xor out or pop loope inc iret cmc cmpsb dec loope dec or mov or adc push ficomp xor out mov cmp add xchg hlt mov fld1 push sub in imul push cltd pop sbb jb fcmovne arpl adc dec aaa add cs cmp aam xchg xlat mov rorb mov clc test in cmp test mov pop cmp and fisub xor lock jmp pop cvtps2pd fs imul mov push imul mov scas add mov xor aad in leave xor xchg in dec pushf add cmp cmpsb mov dec scas bound inc xor jmp stos mov fdivs scas ficompl push push pop lret fs push push lea stos je sub std clc scas daa or cmp gs or out sub loop popa xchg lea sub cmp out and adc or push push adc lea (bad) stos jge in incl fstl lods fsts add ljmp lds xchg out and or and in imul rcl rolb cmc pop sbb fdivrl cwtl sub ret pop cmp or faddl pop pop icebp add adc fsub adc mov mov mov jmp stc pop sub (bad) or adc std jmp push sahf push notl in and leave test lods pusha ret mov inc rcrb pop push mov mov repnz es arpl mov in int3 dec jge pop jcxz in sbb movsb push enter repnz pop icebp cmc stos test fldcw mov (bad) mov lods in movsb dec jmp cltd jecxz sahf loope inc xchg jo in dec test insb cs mov xchg pop dec xor jns mov dec xchg sti insb fcomps xchg dec push outsb or fistpl push hlt loopne xchg jg stc cli push jo mov in and (bad) sbb fwait mov xchg cmp sub movsl sbb adc dec mov sbb pushf (bad) fimull sbb out push mov int mov mov xchg mov out mov push add dec fwait sub pop add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc rorb rorl ret rol movsb rol movsb rol movsb rol movsb rol movsb ror movsb ror movsb rclb and aad movsl and aad push push jg add add add add add nop add add add add add add add daa add add add add add add add add add add add push add add add and aaa add add popa add xor xor sub add add sub add add add add arpl aaa add add popa add xor xor sub add add sub add add add and add add add popa add xor xor sub add add sub add add add add and add add add popa add xor xor sub add add sub add add add add and add add add popa add xor xor sub add add sub add add add dec add and add add add popa add xor xor sub add add sub add add add add and add add add popa add xor xor sub add add sub add add (bad) je add arpl aaa add add popa add xor xor sub add add sub add add add and aaa add add popa add xor xor sub add add sub add add arpl aaa add add popa add xor xor sub add add sub add sub arpl aaa add add popa add xor xor sub add add sub add add arpl aaa add add popa add xor xor sub add add sub add add int add arpl aaa add add popa add xor xor sub add add sub add add arpl aaa add add popa add xor xor sub add add sub add add hlt add and aaa add add popa add xor xor sub add add sub add add data16 add add xor add add add sub add sbb add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in aad inc xchg or jmp sub movsb sbb out xchg cwtl je mov sbb mov sbb jmp inc jnp aas loope jb add hlt push pop andb cmp xchg mov scas sbb ss sub mov fs push fisubr mull and mov xor rcrl (bad) mov out les or adc fbld dec imul xchg xchg test jmp (bad) out mov loopne xor and insb stc lea inc cmp int3 push push daa push mov cmp mov mov push sub xchg mov mov sahf das xchg repz mov fistp rorl sbb jne testb cmp fist stos in sbb adc test jnp inc and rclb sahf std inc xlat cmpsl (bad) addr16 scas inc inc adc out push pop jb jae lds pop xchg out cmp sub push jne dec adc inc dec jo into mov sti mov xchg lcall add pop push pop jb mov in or test or aaa mov jo pop xchg jo lods adc outsl add and lods mov idivl and fs mov stc into popa lahf pop add jo insb push (bad) gs stos nop inc hlt jge in fldcw dec ljmp jl out dec sahf nop xor cmp mov into mov xorl dec inc push test mov scas paddd and lret jo mov and sub sbb adc test cwtl xor clc pusha (bad) jle (bad) cli les out sti into dec inc jl lods nop xchg jg (bad) push mov and gs mov and inc sbb push dec movsl test sub leave jge cmp pop fnstsw mov inc shlb idivl add in std jb mov (bad) xchg add pop aaa xchg and xchg imul leave mov clc push pop jecxz dec jo push add call pop std leave inc rcll or dec ret xor jns push repnz insb mov incb inc and cli (bad) pop dec adc dec and outsb repnz out jle in (bad) mov out cmp mov jne push aaa cmpsb or les je cmp pop sub mov dec fisubl repnz jmp aas insl arpl cmp or mov sub sub fstps mov mov repnz (bad) es mov sub pop imul inc cld cld xchg pop xchg icebp jecxz jg fwait push jns adc shlb in cmp (bad) call dec mov (bad) roll rorl mov sbb xor leave mov out (bad) mov jne idivl pop pushf xor push or insl ds jg mov mov mov jle cmpsb fwait js ss adc ljmp jno push jge adc push aaa sub repnz inc (bad) shl xor pushf cwtl cmc (bad) xor add call pop inc adc lods and fist push je xchg mov rcrl push mov jle add lahf iret jne adc stc arpl int3 lret mov cltd mov sub lods sub test inc jbe push push or mov xchg inc jae pushf fadd lahf jle lods mov (bad) add das fidiv fsubs mov mov pop xor pop push jg insl add fisub jl jno das pop loopne or pop inc cs (bad) pop leave stc pop add jae addr16 and enter pop aad xchg jg pop cmp pop cmp cld mov enter cld in data16 sbb rorb lcall or stos test stos gs xor rcr mov sbb inc inc pop mov sbb lret mov or cmpsl insl popl test leave and daa mov call loope xor inc sbb mov mov jae into sub adc fisubl hlt dec imul lods lds xchg lds or mov lds xlat (bad) or mov jge dec andb jl lahf adc adc jp stc sub ds stos add imull sahf jbe dec imul repnz negb push push jbe mov push push dec jmp jg cmp xor xchg inc stos inc testb cmpsl loope xchg xchg int std call jns mov shr xlat xor les push shlb jmp push (bad) repnz cmpsl imul ret pop fnsetpm(287 pusha sub lret lods out pop arpl xlat stos aad push fdivs and and sub cld mov push sub sbb iret dec clc adc rcr pushf cmpsl cmpsb (bad) cmc pop xchg mov mov (bad) rcl adc frstor fidivr dec jmp xrelease cmp repz popa hlt sub and and xor rcrb insb cmp or pop jns push xor les and outsb push rcrl cltd stos arpl xor mov lret je mov (bad) in mov jne lcall add dec popa daa mov mov jg add dec arpl (bad) xchg and (bad) js sub (bad) (bad) jg ret adc sub daa mov shr lret jno xchg pop in (bad) pop xchg movsl mov mov enter fs out int xchg in mov pop push (bad) cmp stos inc or imul cmpsl xor into add gs sti jmp adc imul (bad) pusha sbb out cmpsb cmp ljmp es mov cmpsb push dec dec (bad) cli and lret icebp je cmpsl in push pop fdivr sub les rclb faddp dec mov dec test or imulb adc repz stc pusha (bad) sbb aad lret push dec inc and inc mul mov push pop aad aas pop xchg bound popa rolb out lods shr mov jno jb inc movsb lret je mov and (bad) fnop dec (bad) or in in je jae out dec arpl fisubl mov popa xchg lahf mov lea push xchg fcoml ds rorl add nop mov mov or lret mov sbb test bound (bad) (bad) cmp repz movsb jnp enter (bad) push insb xor enter xchg insl ss pop mov aam jecxz mov dec mov push lods jbe sti sbb popf sub mov int sahf xchg in cwtl cmp xchg jns jb jns les out and sbb jmp imul hlt dec fidivrl out in mov sqrtps pop push in pop (bad) lret out inc mov jmp (bad) daa pop repz mov ret ljmp (bad) dec fisubl orl xchg std mov mov mov cltd por lret push cmp push imul xchg cltd push mov daa int3 xchg cmp pop xchg mov rclb xchg mov daa in les stos jp inc sti push sbb test out fistpll jo jns sbb or cmp mov jo dec mov fstl pop mov in mov push mov aas inc fisubr or lods cmp jb loopne sub adc fwait and jg loop cli mov or sub inc sub addr16 ja jne push clc arpl scas inc lret push les jecxz shl rcrb gs mov outsb fsub jb and insl mov hlt or pop cld insb (bad) push lods mov push inc push push pusha fidivrl push outsb dec popf sbb add mov adc and leave ds xchg dec aas mov jns adc xchg adc sub ljmp mov push lds pop pop adc xchg fldl sahf fidiv jle stos mov sub cltd dec jae ficomp mov rcr cmp lea xor (bad) std int test jge push jae inc ljmp mov (bad) mov imul mov adc pop rclb push loop aas adc shrl and mov push ss dec mov or fcmovnbe (bad) fistp add pop mov pop ja push roll adc push jge xchg int3 aad jnp fdivl jnp mov and xor sub dec sti mov cmc xor mov add dec rorl pop aam movl mov stos outsb loop pop roll (bad) jp test sti js pusha and lret adc scas in fdivl cli (bad) enter xor gs inc movsb add xchg sub and sub xchg push subl pop fild js push cli and orl xor insl dec lret pop outsb sub sub add or mov andl test mov std inc cmp xchg rorl test repz push lret jg jle xor jl aad pop lods jne je addr16 mov ret pushf mov (bad) adc sbbl daa movsl pushf sub orl data16 cmp stos adc (bad) xlat lds mov sub sub mov in cmc xchg insb sti mov pusha and push adc in loope in mov and push mov jnp ja pop or adc leave add or das xor insl out jecxz ljmp out das nop out or ret sti imul sub pop divl or out loop xchg mov mov sub xchg cmp sub cmpsb xorb outsb movsl aaa sbb mov in (bad) xchg jnp popf fsubrs pushf inc mov or repnz pop lahf adc sub push lahf sti push or nop sub jmp scas nop insl or mov jbe xchg icebp test testl fdiv push pop jae dec lods cs insl lret aad ljmp push addps outsb jmp in sub pushf subb mov xchg add cmpb daa sbb fdiv sub dec shll pop ficom or in std es test lret xor push or cmp xor imul jmp addr16 lret cmp jnp pop sub inc (bad) int std ds pusha cmp push push jp divb mov xlat or jae cli mov jecxz cs inc int3 sets fcompl jge js sahf or rcll imul xor sahf xor mov push lret mov push es cltd inc lods shrb (bad) cmpsl fisttpl dec or icebp rcr fidivr mov mov les xor cmpps insb pushf mov xchg movsl adc sarl sbb mov jmp adc jmp dec push xor scas leave xor mov mov push mov cmp jbe nop mov xchg cmp push lods in push push cld inc push pop int add fdivrs mov pop test sub xchg or das idivl cmpsb sbb pop xchg cmpsl mov xchg cmp cmp sub or mov int inc push xchg and sbb dec movsb icebp push rolb push out mov bound pop rorb cmpsl ja ljmp sub (bad) das bound lea movsb pop popf (bad) dec lcall inc jo bound les xor out xchg add rcrl ljmp pop mov lods or int3 test jp adc int fldcw pop add popa inc clc hlt mov cmpsl push rolb in xor push in in in lcall push iret xor (bad) out pop lret js xchg jno inc (bad) ja fldcw inc sub push jl inc cmpsl and (bad) fcomip mov and std gs mov push sub in fs orl sub mov lret mov gs (bad) cwtl outsl aaa (bad) adc inc out addr16 cmpsl mov or mov dec mov adc mov pop xchg icebp push test (bad) frstor jo popa xchg in movsb and (bad) (bad) push inc adc js fxch out bound pop fs cmp or add adc lcall mov cmp ds pop sar out sbb cmpsb andl pop sbb or push (bad) int pop jmp mov pop or (bad) imul orb clc stos cmp cmp inc arpl lret adc add imul push pop pop push dec jo data16 not gs mov push (bad) cli cmp (bad) out mov and sub xor sub adc pop and mov push imul (bad) push lret rdmsr jns mov cmpl scas sub dec or inc xchg into dec lods push adc xchg popl cmpsb mov repz sbb movsl dec mov into stc or lret inc mov test and gs bswap aam sbb adc xchg cs cwtl dec outsl jbe clc sbb je xor sbb fidivrl or mov pop sbb push and repz add fistl xlat cmpsb orl test mov xor pop notl sub mov fmull pop push imul xor add cmpsb pop test sbb test adc nop and das adc mov repnz shl das mov and test clc sbb fcmovu pop shrb das movsb les inc insb lock outsb sbb push cmp (bad) ljmp xchg addr16 pop shl mov jb mov lock ss cwtl cmp jg jns sbb daa dec pushl or fs fwait pop movsb push ficomp (bad) cmp sub test insb push pusha lods mov sub (bad) pop fwait std xor ret xor xor rep and punpckldq mov push sub jl repz jbe pushf mov mov mov lock clc scas incl adc dec loopne cmp dec loopne mov dec add sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb inc sbb add loopne mov mov fnstenv jne sub loope insl sub pop mov mov mov xchg ret loopne mov add cs std imul ja dec jle (bad) loopne fcompl (bad) mov in jnp mov cmp pushf lret ficomp rcll icebp pop sub in mov xor jnp or fwait mov scas cmp fnop (bad) pusha js xchg or and cld ljmp (bad) fdivl pop cwtl (bad) push xor hlt pop stos lret sahf cmp movsl push addr16 pop cmp loop push pusha je cmp (bad) jb jle mov mov push clc dec into cmp dec orl mov js inc popf ljmp scas xchg mov aad fiaddl push cmp movsl sub xorl je cmp fs nop fcoms mov rorl jb aad cmpsb mov test jp popa pop mov sub rcll sbb test dec pop mov movsl push scas rclb in push xchg or out lcall stos ljmp repz (bad) test (bad) or das push dec jae inc hlt sbb inc negl push jne mov xchg pop mov arpl (bad) mov xchg clc (bad) jb dec jae in int mov lcall lret loop pop cwtl mov sbb andl dec xchg add add sub push mov nop mov mov test (bad) ljmp or sub cwtl insb int3 dec pop int and adc imul shlb jnp (bad) fsubs lcall add dec test adc lds mov notb xchg aas out push leave lahf ljmp adc pop xor mov sti pop mov outsb aaa dec cmpsl add jb lods movsl ds sbbb inc imul scas pop jg imul in dec mov repnz leave stos xor mov daa gs ret rcrl pop adc push pop adc pop test lahf aam aaa and mov imul sbb pop adc ret inc cmp in jge nop repnz pop jno ret push pop rcrb inc push clc adc int push out fsubs subb mulb repz sahf cwtl xchg sbb xor xor iret and ja xor ds lock sbb jmp sbb int in bound mov jbe aaa test pop (bad) mov cmp and inc movsl jge jmp adc out push (bad) test das jns (bad) cmpsb stos popf in cli aad (bad) bound push into in iret repnz hlt scas scas xlat sbb sar dec dec fld1 cltd sub (bad) imul int lock sbb sub cwtl adc jb,pn imul inc (bad) mov mov outsb xchg ljmp scas push jbe lods jo cmp or pop lods out movsb cs add adc add iret into aaa fs mov fwait adc test push rorl add add icebp mov cltd adc adc xchg and cmp mov icebp rcll stos add push xor jl xor mov repnz mov lret mov dec sub sarb (bad) cmpsl jno jns sub js pop dec and xchg imul scas jne inc jle (bad) pop sub push stos jo leave xchg xlat pop inc xor dec (bad) push scas cmpsb lds mov adc push in mov jb getsec inc xchg and cs sti push push or jmp jb xor pop xchg pop lock add mov jg xor and iret xor mov mov sub (bad) loop mov fisubl adc data16 test mov lods pop sub test and fistpll cmp mov iret jne cmp lahf pop popa ss std inc outsl push adc adcb mov cmp out mov (bad) hlt outsb sbb leave inc fcmovnb xchg push jge imul xchg jo faddl movsb pop mov jns les test cmpb xchg ljmp les shrb rcr addr16 inc outsl call stos (bad) push or mov orl out and push fildl movsb dec ret mov int out sbb js sub jno push int cmpsl cmp jmp mov sub mov xor enter or cmp push or fs push push loopne rol scas imul imul pop add daa inc dec pminsw push and std adc jg or mov gs mov jmp aaa cmpsb mov mov (bad) mov jne push jbe,pn (bad) fisttpl repnz jns notb lahf xchg sbb out push dec xor dec enter dec inc addr16 bound dec xchg or sbb xor lcall int3 mov jp inc bound adc sub add xor imul and mov or xor outsb bound mov jbe mov fucomp (bad) sub fidivr in lds push outsl pop ret arpl or movsl aam sub cmpsl mulb stos insb mov dec repz divb in cmp xor jns push cmp repz cltd insl mov je push addl cmp xchg push mov ds (bad) aas ljmp dec mov push fwait movsl cmp xorl (bad) aas fs dec cltd xor in push add daa push mov sbb stos scas and mov lcall je leave mov int3 xchg je mov lods sub cmp out gs and fs jae loope or (bad) mov loop pop mov cmp cmpsb cmpsb mov push push sbb push aad pop jmp lea push bound xor push jns mov repnz add leave jae sbb test (bad) gs mov sub adc inc ficom cld movsl sbb mov (bad) jmp imul lea ja xchg popa fisub sti gs ret (bad) inc sbb inc add (bad) dec push (bad) in aam jae or repnz jp lock push sbb mov dec ret add ds daa test or ljmp les mov (bad) adc mov (bad) jecxz popf out jns enter out fimull adc push and mov stos jmp lea stos nop shlb hlt sub mov (bad) dec jns mov sahf push repz jns xor mov mov lds jne dec jmp pop fist (bad) push imul subb out fidivr subb in sub shll std and icebp cld mov inc pop mov mov (bad) js sbb stc rep cmp (bad) push add mov dec mov mov sahf mov adc aad das je outsb loopne fldl cmp in lock mov rcr hlt jne xor add out cmp dec inc jno or jo in xor push in mov es out mov jmp mov lahf and lock sub mov (bad) int3 js add popf mov mov ficoml lock and out aad std mov sarl test add cltd cmpsb jns mov jp cmc fisttpl mov outsb fimul (bad) sahf pushf clc sub inc sub xlat cld jbe adc mov sbb imul lcall adc and (bad) in xor xchg shrb iret mov fisubrl xor or mov mov sbb xor adc stc pop (bad) dec imul stos dec jo or addr16 jg or jae lret jo mov cmc push rcl mov ja out push stos test dec adc inc out aam scas xchg add mov add rcrb repz sbb mov push (bad) mov rcrl scas shrl mov xchg push xchg out sbb or and push (bad) fwait into xchg pop push mov jo inc (bad) and pop or ficomp xchg out mov mov les dec and mov mov mov lret push aaa int ja inc sbb jle mov imul push mov scas push stos pop int fmull dec cld xchg insb andl lcall pop sub lahf add (bad) test pop pop push push fmul out pop outsb mov jecxz test (bad) je outsb jp int mov add dec mov sahf lret ret push cmp (bad) movsb fiadd sub lar add enter lret mov xor stos out es mov shlb mov mov and repnz lret mov and popl aad mov scas xor or lret dec loopne cs xor loope stos mov (bad) xlat mov xchg push xchg les add movsl pop movsl les pushf xor pop pop mov ficom mov aad pop es (bad) out clc mov fucomp dec jp insb clc push dec cmp jnp out call jp pop enter stos pop pop (bad) aam jl imul xchg xchg push jbe sub xor decl jl dec xlat out insb pop sub jle sbb cmp lea mov jno mov bound jne adcl mov push loope xchg or fildl xchg push popa cmp (bad) mov fisub push mov xchg (bad) jmp flds (bad) (bad) pop jnp fsubl iret nop testb mov cmp cmp in and aam shlb sub (bad) jno pop lea xchg aas cmp jmp ret xchg and xchg scas mov call fistpll push xchg lods jecxz cmc mov adcb sar daa xor and out and shll lcall push es repnz (bad) jl mov stc movsb aad sbb movsb (bad) jae xchg repz xor mov push loopne sub lods dec js mov xchg xchg adc cmp imul dec lcall push jge sub insl mov xor lahf xchg int3 pop sub lods outsb sahf cmpsb and nop mov hlt mov sbb sti lds xchg fnop mov jge fcomps dec dec mov mov mov jns mov sub dec pop ja sub push mov (bad) or test push or jmp fist lock sub cmpsb mull cmpsb scas insl fwait inc and cwtl out outsl xchg jg mov stc (bad) or loope cmp mov shlb cmp inc mov rolb shl js lcall cmp and push sbbb xor rorl jl lods daa mov gs push mov arpl sahf push data16 mov insl out in xchg xchg push int cmp and icebp mov xlat (bad) xor xor xor add (bad) fdivr inc ret (bad) push (bad) js pop fcomps dec xchg ds sub sub popa pop daa stc jmp cmp add loope cmpsb pop sub xor enter cmp xchg pop test mov adc fcomp xor pop xchg push cmp jb xchg sbb jo mov add lret jbe sbb push (bad) into and aad lcall sub add adc bound mov das imul mov fisttpl push fisubr ret inc pop or addb adc jge add fsqrt dec mov in pop inc inc aas in mov gs std cltd pop pop and cmp xlat aas test push into jecxz cmp xchg pop xchg xor popa or js cmpsl inc fwait mov mov sub xor roll daa inc out cmp loop xchg aaa push imul adc je mov arpl add clc pop repz sbb repnz push sub adc neg ret out push jge andnps cmp (bad) addr16 ret mov test sub enter and cli shlb ret cmpsl pop xchg lds movsb movsl jbe (bad) mov mov scas push out push jmp pop add out imul loopne jno imul scas repz repnz and mov fwait clc sti mov cmpl out cmc rcrl lret in xorb add mov add fwait pop loop cmpsb and xchg or rclb inc cld mov ljmp daa inc jb bound jmp push fwait push jno adc or aad cwtl push test sarl test insl lds push xchg push push and movsb scas (bad) stos or inc sub fsubr add scas popa cld (bad) sbb out jo das lock add jb sbb (bad) jns fisubl imull xor fist push push mov add mov xor sbbb mov lret outsl iret cld sbb daa int (bad) mov xchg inc aaa jne scas jae mov js test lods lahf negl es xor dec sub lahf mov lods cmp and fwait sarb stc push mov insl adc mov xchg pop rolb mov scas jle pop mov stc or sbb lret mov shll stos and sahf push push int3 xchg pop adc fist das or addr16 fdivr cmp inc fadds imul and divl add push repnz aam outsb ret pop in out loopne mov (bad) push imul movsb sub ret sub ljmp shlb mov lahf ss lret (bad) sub nop cmp cmp (bad) fucom adc xchg cs outsb lock add gs clc inc in (bad) lock ja es fs fsubl out add xchg sbb xchg ret jl scas pop js js stc cmpsb pop push cwtl mov repz out mov push mov push xchg xor mov leave cmc in outsb cmp dec nop stos sbb lahf jg incl decb lock loopne sar sar fistpl jmp ret add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push pop inc in xlat cmc and (bad) jecxz icebp pop dec out dec dec dec dec mov imul cmpsb cmpsb cmpsb daa cmpsb cmp sbb imul out ds pop dec in repz aas mov fistp xlat add stos lds paddusw jb push xchg push push outsl inc call and ljmp enter pushf mov mov ret mov mov adc daa lock push jg cmp cmp popa pop adc jns clc jo nop fucomi imul int3 pop test outsl insl inc addr16 mov and pop imul lock cmpsl div pop xchg icebp icebp imul pop hlt xor cmp mov cmpsb mov lods (bad) mov mov or test inc push mov adc xchg dec inc xchg imulb fldt fisub mov cmp sub xchg mov iret sub sub aad les ljmp dec ss rcrl mov int3 (bad) xor ljmp loopne lea dec int3 stos in xor dec or cmp pop fs push bound mov cmp out cwtl ja aam movsl rcrl dec push iret xchg mov xchg rolb leave inc add int pop mov pop fmul xor pop (bad) dec hlt sub (bad) cld jne and pop add lea pop out popf jl fmull (bad) xor mov push (bad) idivl lods xor cmp test inc iret mov adc xchg (bad) (bad) sub stos add stos lock sub dec mov les mov adc (bad) jle fucomp fsubl mov xor jmp sbb data16 sbb mov test dec sub jnp nop into push mov jnp cld test lret imul inc adc addr16 push out mov xor dec mov or pop or cmpsl push jg into stc loope lahf daa imul scas xor addb cltd adc mov out mov push adc mov cltd jp xor pusha aam mov lods shrb mov xchg and xor mov sub (bad) data16 adc xlat ss mov sbb fldt js inc outsb push lret negb aad popf inc mov push rcrl aaa pop mov sbb stos add mov mov xor mov test ret iret fwait cld dec and cwtl mov in in iret xor sub inc inc push mov lcall or xor dec mov addr16 inc aam mov mov call or push test cld mov mov pop (bad) pop push adc es stos test sbb mov xor lds xlat mov add clc and xchg les push mov decb fildl sub js adc cmpsb sbb inc shll push fwait pop aaa mov lods repnz push movsbl aaa stc ja inc xor loopne adc xor imul inc loopne rclb pop xchg pop out jno divl add movsl cld pop push inc xor sub sub cmp add push push dec dec jae mov rcrl push mov stos or ds enter xor dec es sub push loopne shrl jmp push push sbb (bad) pusha insl insb add nop movsl test or jge adc cs sbb sub push pop pop clc mov cmp (bad) xchg sub cmp int pop add or xor cmp dec cld outsb push orl push out xor mov pusha mov mov mov lods pushf sahf sub or mov lcall add call sub jg mov jp mov bound jl neg lea cli ja fcmovnu lea jmp ficompl addr16 xchg enter xchg mov insl and (bad) (bad) ljmp mov inc jno or stos (bad) push pop jmp in jns mov and cmp aad aas cmpsb in notl dec call push lock jp xor (bad) repnz rcrb and dec adc sahf pop dec cmp ljmp pop mov cli shll inc adc repnz aad lea mov jecxz popf dec lods dec ss and loop xchg cmp mov scas sbb sti out repnz mov aaa xchg (bad) xor mov into imul test mov mov mov sahf ret sbb sub and xor or push roll pop cmp sti jne mov sbb andb adc lds flds and out and fdiv ljmp icebp pop mov scas lret and jb or push movsl jp pop mov pop push adcl inc jne push mov mov testb je mov fnstsw clc lret and mov (bad) xchg (bad) out pop jecxz pop jne adc rcrb mov add out (bad) adc or or js pop pop adc lcall or pop lea jge js js mov popf pop jg xor mov (bad) jno or fisub inc or pop in xor jbe es sbb (bad) cmc aam sahf cs or xorb push mov and mov lea aas xchg mov sbb dec repz das add mov mov mov (bad) out mov test divb loopne add lret xlat stos or neg std sbb mov aaa fcoml test push cwtl jbe dec add or clc inc mov push leave in int (bad) lahf xchg lods rcrb dec adc adc imul fwait pop ror jns add xor add in sub fadd pop jecxz,pn je sahf es outsl mov movsb (bad) leave xlat lods aam aas aas fldenv push xchg (bad) mov lret xchg sbb popa int mov mov push lea cmp nop or roll scas lret push cli sti push jns popf mov aam sar xor les insb inc push cs icebp xor (bad) jo js mov xlat inc inc xchg jge inc adc stos mov lock sti cmp xor out std mov jl test dec xor bswap aas pop rolb dec jo push int3 jb mov xchg xor and dec (bad) clc push fwait sub (bad) or andl imul addr16 int3 in push insb mov xor mov sub dec push fimul outsl sub sub lds flds mov pop lea aas mov mov sarb mov sarb cld mov sti ja rolb mov inc ficoml mov mov pop dec cmpsb sub lahf jnp cwtl (bad) mov mov xchg fiaddl fldt jg cltd xor ja pop pop push jno repnz lret add adc adc aas out lods imul cli add in mov bound mov sub cmp cmp loopne insb movsb push (bad) mov fs xor mov mov mov sarb add pop fisubl ret jno cmp bound or addl push mov repnz and or and test fdivl fistpl xchg fistl adc cld cmpsb pop push pop xchg adc inc (bad) xor mov (bad) sbb mov (bad) xchg or inc jns rolb ret push pop push cmpsb xchg add daa pop xlat push loope ja jle mov push inc inc lods sub test in fisttp lods mov repz enter ja push js sbb xchg cmc addl sbb iret cmp cli (bad) xchg cmpb aam inc sbb mov into cmpsb xchg push aaa (bad) inc and insl jmp xchg in pop jnp push cmp push les in loopne,pn cmpsl cwtl int3 mov sbb jbe mov hlt mov cltd jo std mov dec xlat sti cs lds lahf sub mov popa dec xchg jne rol (bad) in mov aaa adc cld xor mov popa and jle mov dec xor jbe jbe testb and inc cmp (bad) pop das fs or popf out (bad) push mov cmp xor rorl loope adc (bad) cli ret cmp ljmp push sar cmpsb sub aam fsubs lret imul bound mov inc jns int xor push ljmp syscall insb mov loop (bad) outsl (bad) mov xchg lock pop xchg test mov dec mov fsubl loop sbb fstps not jb sbb lret adc (bad) pop mov jecxz adc xchg add shr push int3 cmp dec mov dec jmp pushf or push mov xchg inc into push (bad) aam into test push adc xor xor dec ds lea xchg fisubl movsl cmp add lret fisub clc in iret add or js stos rclb (bad) hlt or push push leave stos fisubl jp add mov imull push dec sbb pop sub mov jge daa adc fildll adc push mov adc sbb fisubl cmc js insl pop mov cmp mov sarl or fnstcw addr16 cld ja mov mov jge ret jbe outsb ds xchg out stc cmp inc xchg xor xlat aas addr16 sub jg,pn sub xchg (bad) lahf xchg inc cmovno inc mov cmp dec call push push mov cmc fdiv leave mov xchg out out pop aas push xchg cwtl xchg ljmp push sbb gs mov iret push jno cmpsl and push dec inc popf adc sbb xlat insl add or inc jnp and sbb in aaa xor std xchg cmp sub cmp dec pushf loope or (bad) popa or ret dec mov xchg movsl jno ss (bad) mull pop js cmc sub or jle fistpl push stc ss add mov cltd or dec and lods xchg sub pusha push lods or adc aad mov mov mov nop sbb push es jnp cld stc fs xor push repnz (bad) outsl mov adc mov mulb pop or sbb lcall sahf mov pop (bad) xor push add incb mov inc es cmp mov (bad) add gs (bad) cmc fstps adc ud1 mov in fsubrs jmp or test jecxz xor fidiv lcall mov (bad) mov test daa (bad) fwait jge jge (bad) pushf cli xchg rclb call mov cmp sbb xor stc push ftst inc xchg (bad) cli pop sahf xchg mov outsl inc sbb xor pop cmp xor subl xor and push xchg pop ljmp (bad) sbb xchg mov lahf mov pusha out mov inc mov cwtl push popf jne out mov je repz aam pusha adc cli pop push shrb lcall mov or lret cmpb adc or in movsl stc cmpb sub (bad) imul xor inc mov daa mov jmp lahf mov mov int test mov ja lret mov pusha data16 test lock into cmp pop test loope or pop pop pop test adc mov pop pop mov loop adc lock arpl (bad) jmp aad xchg fildl and pop mov repz mov sbb in pop mov cwtl xchg inc ljmp mov jb bound sub inc aas xor cltd push xor xchg lahf sub jno sbb jno out or xchg pushl (bad) aam mov sbb fadds xor mov lea cmp jo xor and dec mov xchg cmc rcrl (bad) and sub pop pushf jo mov (bad) imul jle sub lea mov movsl loop out pop pusha pop ss fldenv out nop sarl rcrl mov mov sbb es fs sub jmp pop xor xorl mov clc jo repnz rcrl insl dec into sub or mov and or bound cs test test jo add push popf cmp (bad) das or scas mov fidivr ljmp outsb les mov mov ror int3 scas jo cmpsl dec mov cli jp dec sub xor jno pop sub rcll dec aaa (bad) (bad) or xchg cs test imul sahf (bad) or mov push int sbb add xchg dec (bad) mov push test test jmp mov (bad) mov cmp pop loope cmp test cwtl lea jge dec ret (bad) mov ret mov xchg sub arpl aam (bad) sbb dec and pop and sahf fwait packuswb mov rcrb daa sub mov pop ja lods fmulp int3 (bad) int3 pop fwait ja aaa cmp (bad) mov fs inc or pushf sbb xor fstpl repz rolb mov mov push or das cs imul bound fnsave cmp xor mov cmc js fistpll insb stos pop xorl xor or mov mov cwtl pushf lcall popf add (bad) mov stos pop xchg and fdivrl jge fdivl sbb or sub sbb push jecxz test push and mov adc and dec mov cmpl fs dec and xor mov xchg imul lret dec xor inc inc or je jae cmc mov dec loopne in and inc sbb add inc les rorl mov repnz je imul add movsb in jecxz add lret mov sub data16 or scas and push add fsub add sub dec fstpl data16 jmp or add cmc dec loopne sarb jg incl or adc jg lock or sti push lret add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add rcrl jmp jmp outsb push mov es sbb jecxz (bad) xor enter cmp add add out inc push test (bad) es push adc int dec lock sahf pop (bad) cli or xchg push sub std xor out ljmp add in nop lret aaa push int3 pop dec dec jle cmp push push shr imul mov push pop addr16 or jle call notl fnsave cld cmp scas cmp fsubl mov or arpl lret or fcmovnu mov ja pop push (bad) or inc sub cmp xor scas data16 pop inc mov lods cmp adc rorb in aam cmc outsb and or loopne mov mov sub pop repz (bad) rclb mov xor adc enter pop decl jge cmpsl std dec sahf or mov inc or gs pop divl leave push jge pop xor in jg cmp cmp mov mov and push movb icebp xchg subb cmp pop aam cltd (bad) jae leave movsl icebp and dec xchg jne stos cmp shrl fs add xor dec jne cwtl cli je adc fdivrl les (bad) push xchg sub or cmc xchg and (bad) cltd xchg je pop and cli xor aam jge clc mov mov and mov into lcall mov xchg push insl jle int call pop dec push sti mov mov push popa cwtl out xor push cs nop (bad) mov or stos mov cmc das cmpsl loopne lds pusha sub xorl adc fstps test dec iret aam mov mov stos sarl jo mov dec dec inc mov ja ljmp and jo jns pushf scas mov add or jge mov rcrl xchg push xchg ja mov jnp mov xchg or repnz sub xor push mov ja ja mov inc out shl sahf pop cwtl inc mov add or lods jmp repz adc or out push mov push mov (bad) icebp into data16 mov scas or mov or xchg out mov lcall mov (bad) es loope imul fsubrs sub mov hlt mov arpl test sub lods adc push push mov pop jecxz in stc adc xor in clc mov jp test notl std mov insl test sahf outsl in cmpsb std sarl stos andb ss mov sub mov daa push pusha ljmp mov mov jecxz ret fisttpll ss aam popf (bad) lahf lcall or inc mov scas pop cmp push mov lretw ss movsb popa jb gs sbb lods js imul push scas mov fidivrl dec cmp (bad) stos xchg in dec (bad) aam jae xchg jmp sti inc mov jmp adcl jle jne roll inc xchg lods stos sarl (bad) sahf xchg push sub (bad) insl xor push mov jmp xchg and dec test inc out bound hlt add jl jp and pop rcl xlat shl das pop sbb js,pt (bad) mov (bad) ja add (bad) xchg mov insb mov add leave insl mov mov jno es dec and (bad) shr or ret adc fdivl aas shlb stos test pop sbbl mov mov add dec mov dec (bad) jmp and or repnz xchg push adc xchg loope jns sub jmp (bad) sbb xlat sub push fstpl daa jle inc xchg cmp add push mov arpl push mov mov or int lcall cmp sub cmp push in xchg xor out and stc je xor adc sbb xor mov pop xlat cld fsubp or ss pop push mov sub rcrl push ret rolb or inc je and imulb mov pop nop adc idivb incb aas mov jp mov fsts faddl int fidivrl pop cli lcall sbb inc jno lods pop popa ss xlat sbb je inc ds jnp movsl andnps frstor insl pop dec out cli cmp xchg sahf sar mov scas pop aam loop daa or ffreep out mov subl insl inc add mov lcall inc ljmp sub jecxz mov pop out and pop push movsl add out cltd movsl loope addr16 popf sahf jmp add or cli (bad) pop sets out fmuls test xchg pop xchg xchg jbe push sbb icebp lea mov aam sub mov enter mov mov punpckhbw jle icebp adc clc dec xchg into push cmc mov (bad) cmpsl mov out (bad) jb sahf push outsl pop and push inc (bad) cmp shlb (bad) and je outsb sub jle fnstenv in xor leave inc out fwait sarl mov jno enter bswap xor mov xchg out sub pop and sbb clc call lea lods xchg mov adc mov les sbb and push arpl shlb aas outsb jbe fwait outsl cmp popa idivl xchg repnz dec adc inc clc sub add rclb pushf fs adc aam cmp mov mov jge mov ljmp or mov mov in mov sbb lcall cs imul out out test push dec repz sub jae (bad) push outsb movsl sahf pop xchg aaa inc mov and lcall xor pop mov mov mov cmp arpl adc subl add jae pop andb xchg mov fcmovb loop imul cmpsb sbb sbb call push cmp call xor and inc imul push aam aas adc cli (bad) jl scas push push jns jecxz iret adc push lock pop jmp repnz mov ds jbe pusha je mov mov fbld xchg mov jo gs xor sbb mov neg test inc xchg sub mov sbb bt sub subl rorb adc hlt pop aaa sub push push or in ret jns xor movsl push loopne and lea popw scas insb push xlat gs mov out into repz push jge aaa push inc mov or sbb loopne cmpl ljmp sub xorl (bad) mov adc je jnp jno sar mov mov popa int popa popa mov mov lret sbbl stos insb pushf push sub mov fisttpl add arpl dec insl adc mov mov int3 nop xchg mov stos insl cli or stc movsl mov xchg sti cmpsb insb sbb inc lahf push pop fisub cs (bad) push pop sbb mov out call in pop fld rep or xor pushf sbb ret outsl pop loope xor cmp fldl rcrb add xor and add ds add sub cmp add imul push jle daa cmc js into push cs jecxz jmp test mov inc cmpsw scas das loop mov jmp ds lock das sbb (bad) xor xor dec mov (bad) mov addl sbb mov mov mov mov out mov adc stc stos cmovge fistp cmpsl les and push (bad) ja popl out in outsl in or outsb add mov jb fcomip push cmp aad jbe inc shrl sbb ret mov push enter addr16 push push lret iret push pop std xchg fiaddl adc ja mov loope scas nop imul outsl push fwait addl sbb movsb dec int hlt lret stos push fcmovne lds popa repz mov into xchg and mov fucomip sahf rorl enter out or shl cld loope aaa sub call mov fadds sbb push mov sbb xor sti hlt or push xor imul dec test enter push mov aad mov jb xor push (bad) add cltd jae cmpsb subl sbb mov outsl sub sub cmp mov add iret ficom insl out daa repnz outsl and fnstcw sub icebp cmpsl push in dec xchg (bad) mov out cmp int3 mov scas repnz jbe dec mov adc test jno clc jb jnp icebp vpcmpeqw leave lock lock cld add (bad) push leave mov daa test add xor cwtl mov idivb jecxz andl in (bad) mov stos rolb fstl mov mov jge cmp aad enterw stos mov into pop (bad) xchg lods fsubs lods cmp xor push scas test sub icebp push jle dec icebp xor in sub xlat mov pusha or test sbb jns mov scas dec mov cmp jp addr16 sahf cmc push jno jp push lds movl add sbb sub sete push aad arpl pop adc xlat sbb mov movsl or pop lods cld dec cmp js xor je sbb or (bad) faddl mov out push pop mov mov and ror pop test pop add inc push repz add ret add pop xor dec push mov xchg lcall rol or imul (bad) mov and sti fnstenv dec fisubr add sar and push pop stos iret bound std test push dec cmp mov pop pop fisttp and ret push lds call mov dec xchg mov ret incb sbb push cmp lret popa pop cmp lock (bad) inc nop xchg pop pop inc fisub push mov lahf popf loop scas mov es xlat sti out pushf stc in mov jno jae jl mov mov dec cli cld loop repz xchg lods or jl pop fs inc sti inc scas aam push sarl (bad) mov adcl xor cmc loopne sub dec popa push loop sbb fsubp clc call (bad) xchg cmp sbb mov inc mov in mov pop push fiadd stos aam sbb pop pop sahf call inc scas jno xlat mov sub fildll fs cltd test push (bad) fldcw mov and dec mov daa cmc ljmp test mov fcmovbe sahf and movsl shrb xor test into popa or les (bad) push xor cs jb,pn mov arpl es xor sbb js lods xchg jno cld mov mov and andb (bad) repnz xor cmp push mov ss fisttp dec push xlat aaa sub gs mov sbb rcrl (bad) sti jno push mov add inc jge jge out addl div dec mov inc add insb rcrl fnstenv sub push and notl and sarl or or dec pop add push push stos inc xor jecxz lret jae inc jp mov (bad) sub subl adc dec iret dec cmc jp dec mov add mov add bound dec add imul xor popa adc rcll lahf call sub mov and mov push pop add imul ss xor cli es leave sahf xchg stc ja neg push outsb shr push pop popw test pushf and aas mov test scas adc (bad) mov cmpsb divb outsb stos outsb adc cltd int3 sbb jno data16 aaa or jae jb mov ficomp repnz xchg lahf adc xchg je call mov xchg jge dec push push outsb and sub outsl jns cli xor jmp lock cmp dec stos jle hlt lods jns or lahf and and xor repz dec and sub out ljmp or inc add repnz cmp je stos pop ror or sbb aas daa xor cmp cmc jecxz int and adc lret adc push aas sbb mov xlat mov and xor cli jl pushf sbb sub sub cli or jns push or inc ffree loope insb or inc push iret vaddps push into cmp mov xorb gs xchg pusha sbb or fcmovnb aas and das pop (bad) jns in test inc in sbb xor lock add xchg xchg xor pop das in movsb sbb adc sub xor hlt (bad) rcrl test pop (bad) mov push jg mov xchg jae out movsl cmp popf (bad) jbe cli sarb xchg inc lahf push or lcall jge test repnz and inc mov pop or pop adc aas sub push mov pop call out fs in push scas test neg and and mov mov lret stc adc in sub push inc (bad) fwait lea les inc jecxz aaa pusha fwait aam imul out xlat lret and jecxz aad jmp jnp aas ret or jg push push pop fs shrb test ja scas out and data16 dec fidiv mov cmp xchg popa stc inc lret clc (bad) popf enter mov add repz lds mov mov pop cmp sub ret cmp inc xchg cmp imul mov jl inc movsb push int3 add xchg cwtl ficoml mov xor mov clc jl jl je push mov movsb mov sub mov idivl es (bad) lods add jle add stc aaa lock loopne sarb decb jge xchg test add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in aad inc rorl je mov mov fsubr out dec and shrl dec jmp and sub repz dec clc cld jno add jo cmp adc mov ret in lds add and pop addr16 (bad) and repz sub push dec cmp out nop les xor repnz orl push imul push ror add aam (bad) test jae lcall jg sub push jg dec jae lahf scas sub fnsave pusha movsl push out cltd rcll inc stc hlt jns mov push or js rcll scas dec push fstpl sub pop mov jne repz pop fisubrl outsl fdivs and inc call cld aaa cmpsl mov cwtl and mov in bound cmp xchg stos xchg rcrb lods in (bad) jl inc jno ljmp test mov dec sub sti mov sub mov aad ret dec ret sahf mov test pop push aaa hlt push mov idivb (bad) das cs mov lret icebp outsl mov xor sub outsb inc lret dec aam sub push add in jns sub dec mov sarl pop push push push lcall push (bad) notl push outsl movsb or mov lahf add inc hlt inc add icebp (bad) repnz mov jb imul pop mov daa jb (bad) sti ja push lcall jecxz inc add push dec repz test in outsb icebp fadd mov push lock ja pop aaa xor inc dec mov xor jno lds cmp or jg movsl (bad) idivl sub dec fsubl mov dec mov (bad) sbb xor loope or pop cmpsl dec loope cs or pop xor push xlat (bad) imulb aaa shrl xchg aaa sub incl inc mov lea (bad) inc dec xlat and sahf pop or fwait push (bad) popf mov add pop (bad) or daa lds dec sti or xchg cmp pop jb loope outsl sub ret (bad) cmc and jno add mov push ret jmp dec repz cmc rcrl pop notl jno cmp outsb (bad) pop seto iret iret std popa xchg mov and add test push sub add into mov and sub push cmc jb (bad) jno das mov inc xchg repnz pop into jmp addr16 xor push pop fsubrl repz inc fcoms repz mov fidivrl cmpsl lods (bad) ja movsl sub mov ss repnz in int3 inc inc mov repz inc sub jae inc pop stos jbe jmp jns dec pop push std inc stos and inc mov gs int sahf add pop push push sub sbb pushw in sbbb fstpt dec cmp cmp jle lds and push in cmc mov movswl push add sbb sub add dec push insb mov lock aas lret daa xchg mov mov jb xor negb mov mov push inc jno mov std movsl in and cmc pusha pop xchg popf mov and std or xchg out test pop call push les mov xchg mov pushf mov mov loop jae aam arpl sub clc push mov dec adc pop adc fisub lds mov es rol push subl ror ss jl pop rcr imull cli fcom push xchg in pop sub cmpsl das int3 or cmc dec lcall jo sbb mov push cmpsb dec sbb adc test ja or pop iret (bad) mov push and add pop loopne loop adc repnz imul mov fwait out stc push adc pop jns js stos cld dec cmpsb imul lock out fildll xorb lret sbb mov mov jmp mov cmc mov movsb lret mov inc jp pop test mov das cmpsb stos fcomp ljmp je jne xchg lret popf cmp mov test arpl xor xor push jns or cmpsl or xchg and xchg mov or test push mov pop mov fs movsb fwait adc or fld test lods dec or sbb daa or (bad) mov lret leave ljmp dec mov jb xlat mov aam in mov adc rcl xchg adc sahf or mov push pop mov xchg (bad) mov inc clc sub mov add les std mov xor lods movq xchg int3 adc push or jo xor cmp adc mov sbb fstps push aad cmp shr inc movsl enter mov mov cmc mov jmp inc push or sub mov out dec jnp cmp test push popf cmpsl mov mov imul call jne daa cs xchg rcrb imul xchg pop ljmp imul inc fcom fnstcw pushf popa and clc adc (bad) cltd lcall and stos (bad) popa das test pop mov call push aas lock adc xor cltd in xchg stos ss mov sbb adc pusha aaa mov cmpsl (bad) ljmp mov adc imul sbb mov sub jno adcl mov mov lcall dec (bad) xchg or lret jae mov dec cmpsb dec dec xor jne mov push aam daa repz ljmp shrl scas dec xchg push adc cmp lahf mov fmuls fcoml roll push pop dec inc push xchg mov repnz cmp je stos into or jne mov jg sbb loopne out cmpsb cwtl mov sti jmp out test ds push pop lea stos cmp sbb std movsl inc jl fcompl idivl call mov inc pop les iret mov mov int3 mov pop fdivs mov sti pop pop push pop inc mov jl xchg lahf adc or stc xor xchg jmp push (bad) test popf cmp add lret pop add adc je int jnp or fwait inc pop sub stc cmpsb rol iret cltd mov outsb jnp jns xchg mov cmp bound mov add (bad) lret push push es mov sub mov leave fldl mov insl adc std (bad) sbb dec pop pop dec sahf cli add out or sti xor enter push test cmpsb sbb pop loopnew pop leave and (bad) mov in imul cli subb dec mov pop dec jmp pop adc aad dec mov mov es icebp fsts xchg push or in inc add xchg push dec cmp xor shrb xchg cmpsb imulb add shl pop pop sbb stc jb mov fsubs jae in (bad) ja es add cld ret and lahf adc sbb popa (bad) hlt cltd add mov imul inc adc inc jl lea cld lock enter ret das lea out and (bad) loope loopne negb jecxz stos xchg xchg mov aas mov push xchg dec xchg cmp gs ljmp sub icebp popa decl adc repz mov fdivrs (bad) mov out test xchg dec stc std mov add ljmp mov (bad) icebp jl fbld mov aas and mov mov js aas xlat xchg sub nop or and jo and pop loopne cmp dec jb jmp movsl xor push xor sub stc pushf fdivp pop ja dec push aad xchg push jns pop sbb inc xchg mov je xchg xlat pop mov das jmp fsts lahf dec stc push es fimul xchg xchg mov inc test pop inc xor ds mov js inc jle test repnz jns fstps hlt push mov pushf inc cmp (bad) aam mov jb in ret push jne in fldl hlt pop adc bound and sub shrb xor sti lahf out rcr popa data16 sub sub mov pop (bad) xchg push mov stc pop stos sahf add rcrb mov call xchg (bad) push addl lds stos int3 adc dec xorl mov inc hlt gs add mov sub pop (bad) int xlat inc push adc lods xor and sbb mov aad xchg dec jle mov aaa stos sbb testb lods in ss mov (bad) mov xchg out ret push sub sbb loop fist lds testl inc jns or cmova mov incl das inc mov roll sti pop adc fiadd sub push sub mov push imul push pop push imul lods inc imul push cmpsl insl sub push aas pop sub mov jns (bad) mov rolb xor inc dec xor push lret mov jnp fsincos xor xchg adcl and sbb int3 xchg or add loopne xlat mul inc lods (bad) mov aas dec jae xchg outsl cmpsb imul jecxz lods add xchg test scas and iret fcomp push pop jns ja pop mov lcall loope out push mov jno rcrb push sub sbb sti sbb jae lret sub aad cwtl nop push std scas js clc push xchg stc subl enter (bad) mov mov mov mov mov enter cmp add rcrb test mov push adc and jmp pop xor test adc push out in (bad) sbb pop mov in mov mov dec repz out jno and fcoml mov mov jne (bad) aaa sbb test fsubrs popa dec ret sbb cmc push adc and (bad) mov and xchg data16 push pushf jo jge int test fiadd loop jne add mov inc jnp lcall xchg xchg mov out addr16 sub mov in mov push outsl inc repnz stos mov sbb cli cmp les xchg popl xchg mov iret mov scas pusha xor repnz out sbb inc dec icebp sub jae inc rcll out test in imul jp xchg sub sub inc dec aam dec ja in in jns sbb (bad) aaa movsb dec frstor lea test (bad) jne (bad) lock dec insl mov mov xchg clc pop jl ret push push and lcall in xor stos cmp repz sti in sub nop jmp pop popf add xor outsb sub inc movsb dec bound js mov cmp shrb and icebp into xchg push mov jecxz lods cli mov xor xor data16 sub stos pop mov pusha push into imul cmc fildll jmp sub xchg mov and inc mov sub std push pop cmc push mov out lock addl std mov push mov je sbb xchg inc rcll cmpsb push xchg cmove sti scas (bad) enter insb xlat fadds ret stos pop xchg loop pusha cmpsb lock repz adc hlt push aas dec imul clc clc push movsb xchg sti popa std push jno xor mov iret inc ret call cs loopne dec push mov pusha enter stc imul and aad rcrl dec mov daa sti mov (bad) movhps jae cs ret push inc mov mov lret pop xchg stos fwait out sbb decl dec ret xchg inc data16 mov cmp cmp push xor inc fs mov stos push xor rcrl mov cmpsl outsw stc f2xm1 jp (bad) popf ret jg xchg (bad) clc jbe daa cmp xor aad ret add inc add loop in les push fcmovnb jmp mov lret jl adc ljmp stos js inc popa rcll sbbl shrb addl addl push lcall stc int push fwait int pop ret loop push cmpsl mov adc pop in ljmp js repz jnp push es xchg or jo sarb sub aam repnz lahf push jae bound mov lock loop or cmc and movsl inc mov enter fbld (bad) (bad) aam (bad) mov daa aad dec clc sbb divl pop mov and adc gs add pop pop (bad) cld cmc js popa loope push fwait mov mov cmp mov (bad) jle das jo sub or inc cmp xor cld shrb fstps lcall and popf ret rol mov inc dec int3 aam mov inc lods sub push shr adc movsb jp ds loopne mov (bad) (bad) sbb inc bound mov mov ss mov inc fs push clc dec add cmp test imul outsw mov inc inc pop inc aas (bad) sub mov xchg mov pusha push jl pushf add pushf xchg and out sub jg dec repz rcrw mov adc jecxz jl and sbb jge add clc jb in and and sbb mov jo pop gs pop sti pop cld mov mov cltd xor subb clc pop shlb ss jmp mov test lcall xor int3 jge pop sbb (bad) push mov lea leave push xor sub or nop frstpm(287 mov jnp je divl push int jecxz mov sarb js pop push xor jo fsubl ljmp in (bad) sub sti dec pushf xchg fdivs push or push or push (bad) or repnz (bad) xchg jnp mov lock loopne sarb jg incl lahf or pop in daa or xchg xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add fwait ss dec push outsb ret or je cmpsb mov ss mov into jmp ja fnsave sti and sahf lahf lock test cmp dec adc mov dec ds addr16 dec mov lock lods xchg clc push push hlt (bad) mov (bad) inc in inc mov bound addr16 mov inc and add loop into ljmp inc enter addb adc pop xor push dec clc rcl cltd clc add rcrl in movsl outsb cmpl lods cmp mov repz movsl fildll xchg aas push fiaddl sub (bad) sti (bad) nop or mov pop and sub adc adc push insl mov adc addr16 dec sbb jl (bad) adc sbb es cltd pop cmpsb cmp mov mov jl push out sbb jae mov (bad) mov mov mov sbb push mov jne cwtl mov inc idivb loopne fimull jbe add and outsl loop out pop mov mov sub jne xchg ss aam add jae jnp in mov jno dec sbb scas ja cmp (bad) push add mov mov mov cmp in insb mov push dec test or pop inc xor mov lods scas pop cmp iret je loope add dec stos mov xorl pop cmp adc (bad) loopne lret or std loope js clc jae xor or xchg xchg cmp les sub push sub jo adc pop mov ror sub (bad) dec push outsb and test and push ds ljmp jmp mov adc cmp adc (bad) fisttp ljmp xchg maxps push xchg cmpsl (bad) and leave mov dec movsb lods mov fist jecxz add mov mov ret cmp sti ja (bad) shll mov push push adc inc push rcrb movsb sub adc out or fstl or sub ss fsubr outsb gs adc xor sarl repnz sti aam cltd insb lea mov pop cmpsb adc add push sarb out jecxz insb ret adc ror cwtl and pop pop inc or jmp loopne jne xor lds xchg out mov adc pop dec adc mov (bad) mov test mov or or adc or sub xor jnp jg sub in movsl lods in outsb jno sbb pop pushf push out (bad) shl fstl sarb sub jg lock enter (bad) cmp pop jno or movsb ret (bad) add test pop or iret push push xor jbe mov pop mov lods popf out sub lret jne fdivrl rcl mov pop movsb fldl (bad) fmul push add xor cmp lock or mov sbb lods mov rcrb mov movsb adc pop inc push jo (bad) push test mov pop sub sbb or dec in stc cmp leave lret jno cs inc jbe int3 mov xlat pop dec fistp loopne in lock cmp adcb xor xor lret mov insl mov insl pop add cmpb imul sub imul js push dec inc int3 pusha mov mov stos stos ficom and bound fldt dec ret xchg adc inc pusha les sti lret push pop std inc enter jbe imul jle int add sbb sbb xchg clc es xchg and mov test pop push decl or jno sbb xchg inc loope fs cmp push bound fisttpll outsl in jne xlat xor jnp and bound divps jmp fwait aas cld jge,pt or cmp pusha test pop sub cltd or mov dec pop sub push mov rolb repz mov dec jb push in dec jno clc add sub pop mov popf fdivr jbe or inc cltd mov xor or out cmpsb pop lea xchg int mov lahf nop lods sti nop mull ljmp inc or dec out cmp xchg js sti inc xchg (bad) and (bad) mov inc ret cmp fwait cmp pushf (bad) aaa cmp int inc aaa sub cmp and roll mov gs divl cmp mov pusha jg add dec lock loope (bad) sub es or test xchg arpl (bad) sub arpl (bad) fsubl js lahf mov push sti movl lret sbb sub xor (bad) pop push sbb xchg scas outsl repz popa clc or mov fs rcll popf scas jne mov fstpt mov jbe or loope mov sbbb and mov xchg mov ss call sub xchg addl cs mov fimull sub and mov sbb jbe mov loop nopl lret dec or scas xchg popa xor inc lods pop sbb insl out mov push ljmp jmp mov fnsave in sub mov mov fdivrp push lea aad inc pop lcall mov inc (bad) cmpl mov int mov lahf mov mov cmp aam add and mov in push dec push jb mov sbb mov or jbe aam push lods sub mov sbb movsl and inc sbb js test mov cmp insl out sahf mov out and das fstpt fnstenv inc clc inc push in add push adc xor or adc sbb cmc and outsl mov inc cmpsb cmp cmpsl fbld sar xchg cmp xchg sub bound rol mov (bad) mov icebp movsb ret inc (bad) sub in or iret xlat cmp lret in adc mov jo add insl icebp jp daa mov pop lret mov ret sbb xchg lret push jp jne out dec jns add adc lock arpl ss dec ljmp ljmp inc xlat and cmpsl repz cld test in xchg pop iret les push rorb mov into sub in adc fdivl or add fwait imul nop mov jg out xchg imul mov scas or pop mov fwait je sub and (bad) and insb icebp aam out cmc hlt jmp int3 fs jns jge arpl aad leave popa stos jp aaa inc xor out fwait rcrb rol and push cwtl test or andl pop xabort outsl movsl daa aad pop popf adc jl andb je test cmp gs loop movsl ret jmp mov mov cmc jns test lods daa cli dec (bad) mov (bad) pop or xlat inc addr16 imul or mov push dec push mov jmp insl adc (bad) dec cltd jnp and pop fnsave lods inc lahf mov pop sub push cltd in lock mov out add dec push pop inc (bad) push inc or add sub outsl (bad) jmp mov cmp xchg lahf mov scas and cmp dec pop std jecxz inc jb je mov stos orb jo dec or dec xlat jge fldl cmp add jo push stc sub fwait add cmp sub fstpt jo lds test movsl pop jnp jg test jecxz fdivs or popa push ss pusha mov repz setnp clc stos dec outsl or mov add pop sbb insb xlat dec mov and (bad) nop outsl loope xchg es dec jbe arpl mulb lock out cmp inc mov push pop jmp adc jp adcl push mov das stos cmp xchg scas pop sub sbb xor fcomps insl loopne je cmpsb jmp adc jmp and pusha mov jp imul notb repz mov and inc test pop jns jle cs cmpsl nop push (bad) insb dec mov xor xchg sbb loop adc xlat sub lret js adc rcrl outsl push jbe push mov dec mov ret cld mov nop or lods mov or or notl push mov in or jno cmp push popf das dec lods lods add sub sbb xchg xchg loop adc mov xlat add ret stos xor outsl adc inc mov cmc lods add jle mov jmp sti test and pop ds lret shrb test jnp es xor or data16 inc lds scas push sub mov sbb sub bound subl ret (bad) push mov into mov lock jmp dec jl mov cmp pop push repnz jbe outsl scas xchg sub sub push ds add imul adc pop rcrl je or mov jecxz in mov incb and adc fsts inc inc sbb mov adc inc data16 add je test fnstcw jnp cmp xchg dec or cltd pop and push push sub sbb imul aaa lods les aam fnstenv sbb call fisttpl divb loopne push cld pop xor mov lret shlb jecxz dec jg lret jle jae add pop sub fsubl push ja into jno (bad) mov cltd frstor sbb or popf sahf loop cltd xor xchg xor (bad) mov xchg mov flds in or mov cmpsb test rcrl dec mov xchg imul xor and ret mov fsubr out xor mov jns pop push cmc scas data16 pop mov cmc out xor push mov clc cld push lahf addr16 aaa sbb out bound in mov add inc pop sbb or mov cli dec fwait xor sbb int3 pop adc or sahf pop (bad) dec adc stos pusha xchg scas sarl cmp divb dec jo push or stos stos loopne rorl jo adc setg fs or mov data16 jo fstpt nopl fwait mov xchg arpl push and loopne mov rolb pop sbb movsl mov (bad) cmp lock sub sbb xor lret mov sub push addr16 xor or pushf jg fildl push sub adc jp aad xchg xchg and in xchg add iret xchg cmp leave xchg lods mov inc push pop nop andb jle cltd pop pop push pop sbb scas outsb push gs add ret mov (bad) adc setb addl fnstcw pop inc (bad) cmp lahf push popf jne test cmp sbb out test jmp jae test sbb out int lds gs repnz rorl notl setge leave fldl gs roll fstps dec into pop sbb push stos cmp popa movsl call (bad) jle call jge popa pop int push dec sbb shr fldcw fnstcw fwait jmp sbb xchg pop stos mov push cwtl dec lret xlat xlat xchg mov arpl push aas loopne addr16 (bad) loope push and jae pop jb and push mov mov mov cmp pop push daa out fwait inc int push jno push sub sbb adc (bad) xor push adc rorb sub stos cmp add mov inc and inc adc sub cmp sub mov cld lds xor sbb pop std and dec mov mov stc xchg addb xchg add scas sahf push fdivrs jns test xlat les lods mov push add jecxz test or mov je xchg mov push cmp lea movsl sbbb add mov cmp pop mov mov arpl shlb inc lods jg subb adc sti outsl stos (bad) (bad) loope or mov xchg lea jmp out xchg test push or jle call push insb cmp jae ret iret mov pushf aad inc pop insb xchg cmp loopne rorl jp (bad) (bad) ja fsubr sti mov ja or in push adc insb push xor pushf xor js in and pop sti mov lods jp cwtl xor mov jecxz push cmp cmp out sahf sub jmp aas icebp or jns addr16 cmp pop in mov lcall adc pop fisttpl mov aas pop dec sar add in out stos gs pop dec pushf call cmc out js fbstp and cmp jp mov inc push imul rolb sbb cmp sbb inc mov lea pop sbb es jmp xor cmpsb mov hlt aad xor into repnz sub adc dec pusha sbb inc dec sbb lds jne sbb faddl pop mov in fwait out into dec pop decb adc sub xor pop sub push jle inc sub xchg fisttpll mov scas int out push mov jge (bad) jl mov adc mov or outsl mov lea mov arpl inc adc sti xchg cmp fstps int3 rcrb test fs inc inc dec fbstp jb mov stos clc lret pop inc js mov mov dec icebp jmp mov mov sahf mov sbb xchg inc lea gs insb repnz jb dec int3 cmp xor js add nop sbb cmp add fstpt (bad) mov mov jo or fidiv mov in jle sti movsb mov mov jne (bad) mov aaa sbb inc adc leave push adc push jae cmp (bad) lcall scas push or out mov das sub and adcl cmp xor xor stos pop cwtl call sbb push sbb jg incl decb lock loopne jl jg mov leave lea add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat or add mov inc or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add or inc push pop inc in rolb and add lock sbb inc outsl (bad) mov repnz and out lahf in ret leave push mov xor mov dec out insb mov fwait (bad) pop in mov pop (bad) jp add lea mov and aaa imul bound imul jnp,pt jo lea call dec inc push inc call mov (bad) cmp sbb push arpl mov imulb daa ja outsb (bad) mov sbb loopne test mov cwtl (bad) and and jns out jbe dec cwtl mov addr16 aad outsl sarb mov cmp jecxz daa inc add add in lods jb mov push pushf punpcklwd xchg dec mov jb jne aam leave mov push enter xor imul lock cmp add repz insb jne add je cmp xor inc jle cmp lret lcall and or or or add lea xor lds outsl sub sahf das imul in incl shl dec addb out jno mov arpl mov cmp out imul dec mov jmp and push fmuls fwait ds pop mov add test adc cmp lods pop cltd popa (bad) mov mov cmp push imul jmp (bad) negb popa rorb jo jb inc add loope xchg scas jg lods add sbb push sbb jo or test xor and xchg adc addb adc (bad) out mov je aaa stos mov push adc int mov jp cmp lcall cvtpi2ps dec jb xor aas inc jp dec sbb mov lcall daa inc arpl bound xchg and js jecxz dec dec leave jno xchg in aam or sub pop enter jb mov xor repz jbe scas cmp jno mov add sti je cmpsb icebp push addr16 xor add sbb inc cmp movsb (bad) xchg leave add cmpsl arpl jp ret xchg stc lahf jae (bad) sti push aas sbb xchg or test out fimull sbb push outsb (bad) pop nop mov inc mov cs out mov fmul es dec mov xor adc push loopne cld outsl and mov bound xchg out sub stos mov jne add sti inc adc adc js xchg sbb jnp pop loopne push inc add pop test adc (bad) lock pushf ret aad mov sbb xchg ljmp testb jno adc dec mov andl fs les (bad) mov in xchg cmpsb jmp ficom das lahf data16 fidivl mov rcl adc (bad) into mov adc (bad) movsb or movsb into mov call adc inc xor sti int loopne inc fwait xchg (bad) lea test ret (bad) cmc out jecxz std bnd sub xchg stc cmp out adc and sub mov int3 repz pop ficomp adc sub xor pusha scas xlat adc fdivs test lcall dec out test add xchg lds sbb out scas mov out jb jge pop neg mov sub xchg pusha stos rol dec cltd shl and cmp xor lahf push sbb fidivl jmp inc dec sbb sbb fsts push push sbb jb or insb sbb (bad) repnz scas lock dec jb cltd mov pop and pop (bad) notl and xor fidivr stos rcrl xor (bad) pop mov cwtl notb or lea xchg imulb lock dec push cmpsl xlat shr xor lret ds jo pop clc inc (bad) fcomps idiv inc loop cmp xor mov pop pcmpeqd sahf mov out in lret stos push imul incl jo in nop sub lea mov (bad) adcl cwtl gs in inc push sub out jecxz shlb mov cmp lcall lcall jb cli jl inc icebp popl pop andl push lock mov cmp mov sub roll jecxz call sub mov or ret loope xchg int jl in mov (bad) xchg cmpsb adc ds xchg and inc push lock mov or dec xor leave mov outsb movsl jmp cmc adc repz into scas pop or test daa jge sti and test add pop mov enter jl dec cli fisubrl mov repnz or mov insl xchg stos xor push popf mov sbb es adc or pop in mov mov daa push pop data16 rolb add mov lock mov pop dec aaa adc jg push xchg push (bad) lret jecxz rcll mov mov cmp sbb ds jp fwait (bad) xor loopne ljmp dec xor xchg push sbb add or (bad) idiv cmp adc xor and mov rorb ret inc icebp daa push add mov dec stos mov int inc jb,pt fsts cmp dec pushf dec fiaddl push gs and scas stos sahf cmpsl daa add lea fsubrl dec or test cmp sub out stos iret mov sbb adc jle xchg or inc (bad) push loop push jno pusha or xchg les and pop adc in jnp jecxz push adcl adc gs mov sbb rcl stos xchg and into (bad) movsl mov mov adc jmp dec jg or (bad) dec bound cltd cltd testl mov xchg gs sub je pop cli mov (bad) or sqrtps jg inc lods lcall jbe mov (bad) call andl add std movsb mov int3 addr16 iret enter sbb jmp (bad) bound fmull lret rclb push (bad) dec pop das sahf inc sbb jp mov lods pop fsubl mov or mov pop mov cmc adc sub (bad) jg pop xchg inc scas test jp add xchg cmp jno cld cmp lds scas cmp imul into jnp pop in insb cmp inc lret jle shr enter mov rclb sti or cs pop aam adcb (bad) mov adc das int3 mov inc sub dec push add popf in jb jae dec pop xor out push adc pop mov mov lret lret inc lock repnz cmpsl inc xor xchg dec jp mov insb xchg mov lcall push mov std repnz test mov xchg insb inc jmp adc scas shr aas (bad) pushf lret mov (bad) inc sarl sub mov xchg inc and fidivrl push aaa lock mov sub xchg in inc mov pop cltd stc push cmp cmp fistp lret aam fmul ficompl adc fwait fwait int pusha mov lret (bad) push pop or push outsb jmp sub dec mov das dec mov add pop (bad) icebp cld mov fdivl pop or (bad) adc scas and add fiaddl insl xorb sbb add ss sbb add add test add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add lahf into imul cwtl outsb jbe arpl cmpsb imul adc les les (bad) xor pushf mov ds movsb adc mov add rorl xchg push cwtl add aad xorb out sub jge cld jbe push sub negb cmp lods xchg pop inc out jecxz and rorl and mov mov fisubr xor stos dec sub repnz mov pop (bad) cli outsb adc call and and insb je sarl jp incl rcr dec xor inc gs pop add mov push loop stc pop loope jns inc cmpsl mov icebp jnp push loop gs leave adc and adc push jns dec rol push mov mov aas cmpsl adc lea adc inc xor pushf mov daa push in inc sbb daa cwtl ds test jge icebp (bad) dec push scas dec ror cmp (bad) les xchg mov scas cli push sbbl cmpsb mov add mov cmp sub add dec sbb sub push fadd jnp sub js or mov add insb loopne insl inc add mov js mov or loop aad sbb push pusha cwtl xor insl out mov lahf cmp mov xchg aam orb sbb call enter movsl or out cmc xchg mov jge popa ret ljmp sub xor ss cmp xchg je mov ja sub leave xchg xchg rolb dec xor divl and aad cmp mov cs inc into mov nop int3 mov popf jo dec push cmpsl mov fmuls int repnz stos jle sbb (bad) cmp mov mov lods fstl add imul inc test dec into jbe rcl loop jb dec shll sbb push inc and push les cltd (bad) pushf sub test std imul data16 repz repz mov int or out and jne popl inc fist test pop (bad) into cmpsl daa inc push vpcmpeqb push jg jmp cmp adc cmp mov xchg jle aas (bad) push xchg push mov xchg xor push pop stos sarl xor inc adc inc sub sti test loope jns pop gs cmp movsb popf aad sahf push and mov lods pop push lea mov pushf add int3 sub mov ficoml outsb lret scas adc mov rcrb and jnp outsb pushl xchg jp inc sarb push fisubl jle inc ffreep aam jmp pusha jbe mov test scas push lods mov loop xor clc cmp jo jns mov call es (bad) lods popf mov lods sbbl mov jle xor and repz mov fildll jnp (bad) mov insb inc data16 out out shll mov (bad) test notb mov mov leave pop mov in fildl jle dec mov orl je stos in push mov fbld add insl jp xor mov pusha shrb pusha xor xor out popa jge repnz stos cmpps push push and imul popf and call pop stos sbb push out xor daa sbb push ror adc mov out outsb xchg repz aad adc das mov xchg mov movsl sub fs int adc shr add or jecxz leave js fstpl les mov push sbb decb jmp ljmp cmp ret or sysenter jbe jl ljmp aam fidiv jae sbb xor pushf push lret mov xchg adc shr mov dec mov sbb addr16 std add push (bad) jne ja and cld lcall adc outsb mov inc cmc loop sarl mov and push outsb movsl dec aas psubq push out daa test in pop (bad) je cmp cltd ret inc xlat mov pop add aam cltd lock lret sub and cli sbb push xchg adc mov xchg out push in sahf add je jg ljmp push cmp xor lret fs lcall arpl mov mov push pop cmp dec cmp loope jnp mov xor mov data16 (bad) and in pop int3 xchg in sub mov lcall std repnz aaa jne adcl jp inc je ljmp call fidiv and push outsb mov mov push ss add testb cmp popa sub jecxz popf out enter cmpsb or out mov xor xchg movsl cmp loop loop cmp dec fdivrs sub fstpl rcrb jb sub ds mov gs pop inc inc leave xchg lret jbe jne add push pop jmp mov push lahf add mov push pop inc sbb int3 (bad) bound fwait repnz sbb or lret movb push lods xchg jo sbb sbb lcall rol arpl fdivp sahf lsl push das outsl cmp idivb jo test int aad repnz fdivs mov xor sub clc xchg lahf sbb cli sahf dec idivb cwtl pop or mov imul xchg push inc loop inc add jmp std mov pop dec cld int mov subl into nop mov bound mov lods stos xchg lret dec sub pop inc jl (bad) add or push roll out push clc add in (bad) or and mov mov fwait test call outsl mov pop sbb dec shl sbb lahf push outsl fild repz push pop or outsl jb push sbb lcall adc arpl mov push cmpsb push repnz lock shrl sbb jmp mov aad pop icebp es jo (bad) or cmp into sub jg xor mov data16 mov out pop mov nop mov sub and jmp dec jne dec mov inc rolb add mov sbb arpl movsb repnz xchg or mov sub sbb xchg mov xchg lret adc push push bnd push xlat mov sub int pop ds fnstsw fldenv xchg in adc mov daa fidivr lcall mov mov jg aaa dec push inc mov mov hlt aad fadds out xor cld cltd cmp out jbe jg ljmp xor clc movsb fnop xchg shl insl ret das imul int3 ja in push sar mov js imul pop fstpt (bad) mov mov dec jle test pop push lahf push gs mov rcrb enter les mov (bad) insl lahf xchg gs lock outsl pop mov bnd mull push rol out call pop jb stos test leave adc sub fild pop mov cmpl jmp xchg shrb (bad) stos cwtl xchg push int3 cmp loope nop js mov cmp (bad) adc icebp jne fsubrs push push in pop les xlat jno stos imul jmp mov out daa xchg push cmp fdivl cld mov jns movl in and aas adc sub in repnz (bad) sarb fmul or cmp ja sub sarl pop aad pop hlt mov xchg xor dec icebp in pop lret jbe mov mov popa mov mov inc pushf stc push pop or sarb jne cmp mov cli push bound in test (bad) rclb dec xchg mov push push arpl out cld dec mov and add xchg xchg jo mov xchg sub mov sahf push pop sbb xor aad dec cmpsl mov (bad) mov cli enter cmc fadds push cmp (bad) arpl mov insl inc sub scas enter adc sbb ss inc lcall aad lods cmp mov cs rclb mov cmp push mov xor das scas std xor fidivr lock lea add dec xchg xor ficompl out shrl cld cs incb dec lcall inc movsl nop pop mov aas push mov mov or insb ret push mov lea push inc xor sbb test ja jbe mov jg aaa jno cmp push jg inc push mov sbb mov or jle cmp or sbb cmc test testl sub sub shll rorb lods in nop js mov out xchg aad out popa cmc adc xchg (bad) insb jecxz or imul mov adc lods pop outsl cmp pushf mov sbb push cmpsb (bad) int3 sbb je out inc insl xchg mov jmp divb aas add pop dec push hlt xor dec pop xchg lods xchg lock add push push jg scas loopne nopl mov daa test pop sbb jno test push add test pop loope test (bad) mov jnp inc cmpsl jne mov xchg xchg push movsl cli outsb in push in into shrb cmp cs jnp mov rcl mov std stos sbbl sub mov dec push mov pop sbb cvtps2pd sub (bad) jne adc cmp cmp and test mov cli pop xchg push (bad) ret loopne cmp mov (bad) in loope mov neg orl and enter iret push lea push (bad) mov stc cmpsl cmp loope data16 fwait test fsubrp add cli iret mov imul sbb imul pusha jp test repz out mov or xchg in out pop jg cltd outsl out in jmp xchg lea (bad) cmp push push daa push (bad) ja sub and dec test mov cld inc xlat fsts bound in cmp dec loope adc jb inc inc sarl jge and test xor inc cmpsb mov push xor arpl les int3 pop (bad) aad add rorl nop xchg xchg inc dec lret rorb jb and jmp xchg fidivrl lock loop push rclb xor mull fldt sub in loopne cltd adc pop mov inc in and jmp in aam aad sarl and insl jge (bad) fldl iret gs sbb das js cmp xchg (bad) icebp imul cmp xor jl in cltd shrb inc std (bad) fs jp mov inc test out inc por sbb jbe xchg inc lds push jnp inc lea scas dec and nop sbb adc fisttpl sub clc arpl div test mov lods inc mov bound cltd cmp mov (bad) jno sti sub xchg mov adc fsts aaa mov repz sarl lds sub mov dec sti add ja jge mov push inc push (bad) cmp clc adc or mov mov inc in xor loope inc dec icebp mov mov push (bad) gs or sub jns adc fabs dec jo cmp jle xchg (bad) pop in push loopne lahf mov adc xchg jne pop popf xchg out and aad push adc enter lods enter aaa pop jnp sbb inc out dec cmp aaa fnstsw mull pop dec xchg dec inc mov lods movsl lcall push mov adc pop scas or stos outsb addl xchg cli test dec scas dec push (bad) xor enter adc mov cmp js clc in jo xchg pop iret mov inc adc or jns cmpl mov loope pop mov aaa movsl xor aas bound push jbe pop shll popa imul jo dec mov outsl fcoms xor dec adc sarl idiv xchg jns mov xchg push inc or or jp aaa test ja xchg mov mov fwait movsl sub jne lret in outsb adc jbe and add or inc dec ror jns fwait adc xor lock lret pop and pop stos jae in xor pusha cmp call loop xchg insl (bad) cld sub xor and orl push ljmp outsb adcl dec movsb mov shll inc dec (bad) or stos ds add dec hlt aad stos xor jae xchg mov fimull push push sub pop sbb jmp jbe (bad) cli shlb dec add popa es das shll addr16 mov add or sub fsubrl xchg mov push push and xor pop mov loop icebp stc pushf int mov ljmp sub jle dec out inc mov fisttpll outsl aas (bad) repz and inc inc or scas sarb inc mov imul inc mov pusha sub add fldl push leave cmpsb push mov loopne jo insl mov xchg repnz xchg lahf fs pop ja mov ja fcomps jbe dec fldt sbb hlt je xchg es loopne in aas int3 into nop xchg loope outsl push cmp stos loopne push xor jns and daa cmp mov mov and scas and lea iret adc inc cmp fwait cmp aas mov inc in aad pop sub push inc jns jns dec test repz fmul jns pop push fstl ja pop mov (bad) std sti out in mov or push mov scas pop rcrb mov gs pusha test push jg lods pop pusha jle xchg inc ss inc sbb test addr16 mov ds pop out dec lods mov paddd add dec test and call hlt xchg (bad) stos mov imul or xchg xor xor iret mov push decb lock loopne jl jg in ljmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in (bad) cmc and (bad) jecxz icebp xchg ss popa cmpsb fsubp int3 sbb in sahf sbb (bad) cmpsb (bad) dec ja dec divl pushf sbb jmp mov jmp cmc aas add test scas (bad) icebp scas mov gs cmpb xchg push dec jns xchg add xchg enter imul pop aas inc mov and imul jb mov sbb mov xor mov jnp jbe stos lcall pop adc pop scas stos loop roll insb xor mov jp jg sti mov xchg jg ss xlat pushf jl movsb test ss mov fnstcw cmp xlat call hlt sbb fistp sub adc enter push ja div jne ret out clc xchg xor inc fdivr xchg jmp lret mov pop mov dec bound arpl es test xchg jb (bad) pop cmp test fwait sub and xchg dec mov mulb out xchg fadd cs lods daa push loop mov jmp loope mov sub jnp push pop sbb fs xor mov xor jg inc cmp loope aad enter dec dec rcrb xchg xchg cmp add sti subl sbbl inc xchg movsb adcb rcr aaa jp lds lahf rclb inc dec mov push movsb jb mov pushf rorb and fdivrl outsl lock out inc je (bad) loopne sbb mov mov movsb or push jae js pop mov (bad) xor (bad) cmp xlat cmp add inc jns ret sbb and (bad) jno pop add inc sub mov mov xchg push cmp jge fldl2e scas dec dec icebp test pop mov stos inc jmp and mov ror ficoml stc (bad) in mov adc xchg xchg sub sbb sti dec cmc dec jo std movsl mov xor inc ret jns int lahf pop xor adc mov or sub out fcoml xchg xchg mov shr aaa jmp mov fldcw xor cs push std xchg push sbb mov xchg or mov mov jge arpl mov lret (bad) lret leave mov in pop stos mov out insl js repnz jb test ret cwtl push in das mov push jecxz je add sbb rorl pop sub dec (bad) fbld jno push es push cltd mov (bad) mov into push cli andb dec mov scas pop sar xchg xchg jmp jl outsb into mov jae data16 mov add jp jne jne insb stos lret out in pop jmp xchg insb mov pop pop popa dec dec cmpsb icebp movsl pop jbe sub adc sahf ds push xchg cmp and popa jge sbb dec (bad) jne notl sbb xor lods inc jae mov add popa xor mov movsl roll or sub cmpsb jae push dec or jo out mov xlat scas cld xlat into add (bad) xor push (bad) jae cmp adc ret dec sbb mov loop push adc sbb call and fcoml mov add scas jns xorl dec mov mov push inc inc fistpll test mov daa test lea or dec (bad) pmulhw inc test mov pusha mov test ret clc xchg xchg paddusw das jb sbb pop ds and lahf (bad) fcoml mov push pop movsb stos repz test add cmp push add mov add fsubrl dec ja in std jecxz mov adc leave nop mov dec cmp cmp adc xor imul out inc add push test xor pop pop inc mov repnz bound dec cmp inc hlt (bad) rcrl sbb dec popa cld rcl ret and je push xchg inc out mull iret (bad) pop les (bad) (bad) les les fsubl ret push dec cmp jle addl mov lret test mov mov jecxz pop das sub mov stc jb imul jle cmp dec or xor xlat sbb ficomp sbb xor insb sahf fwait sbb insb xchg clc das xor fs pusha (bad) adc jecxz (bad) adc lods gs dec mov int3 pop dec lret aam aad cmpsl sub xchg add sbb and loopne mov sahf cli xchg mov test xchg xlat outsb jmp inc fsub xchg pop cmpsl mov mov mov adc push sbb pop stos mov dec mov cli sbb xchg xor in adc mov mov sarl mov in (bad) in dec fs lahf aad sbb (bad) xchg mov add pop and fwait aas stos es lds inc pop data16 jmp jnp xchg enter lock stos xchg pop (bad) ds cltd (bad) insl iret mov loop xor adc xor fisttp push inc jp clc jb mov pop sub iret dec pop lret or or repz call mov loop into enter roll or xchg fs dec jle cmp push cmp cmp xor xor pusha push pushf sbbl mov pop popf stc pushf cmpsb or mov pop mov push pop inc sbb int (bad) popa std loope ljmp xchg mov repz setbe pop bound jbe sti (bad) ljmp and stos cmp bound loope jecxz gs fucomp mov xor loop lahf sti lret test fs movsl leave push mov adc push (bad) movsb xor pop mov dec inc mov test ds out pop inc xchg (bad) and and rep mov data16 lock je push and stos leave lcallw lods fidiv xor adc cld cs sub int jg outsl ljmp sbb push pop shl and xchg mov sbb scas std mov add push repz push arpl in push jno push xchg ret cli fcmovnb cmp and add dec out inc (bad) jae or sbb cltd jg out lds pop sub cmpxchg mov insl cmp daa mov sbb rcll or adc mov mov sbb test (bad) lcall and sbb sub adc sub gs mov aad fs cmp jnp icebp lret popf push dec inc adc loop test aam push popf movsl sub cmp cmp int jno cmovb push sbb mov insb es cmp xchg test in lds arpl xchg das push mov sti outsb jmp dec push fwait rolb pop cmp aaa jns and scas xor xchg scas call enter insb fdivp jecxz jp dec mov hlt fdiv pop movsl mov mov add lock push jecxz decb icebp add cmp xchg stos cmp in add pop cmpsl and lcall iret int3 jbe enter sti insl push mov xchg jbe (bad) dec pop pop lods fimul and add jle inc mov outsl push test push lahf stos dec loop test add sbb mov imul cmc icebp dec arpl lock push or xchg inc pop in sahf jmp imul scas mov xor adc push pop in int3 xor xchg push dec daa clc sbb js into mov fucomi fwait push sub popa jnp cmp add popa cltd hlt xchg xchg cmp enter outsb imul mov xor jmp mov (bad) negl mov imul adcl mov ljmp sub xchg int cmp jg mov fadd test pop and push cmpsb (bad) out mov (bad) mov jns jg sbb sbb lcall (bad) out mov (bad) jbe call mov imull in ss pusha imul fcomps push adc (bad) out mov iret mov or add dec jge outsb dec adc push mov push mov adc (bad) fisub stos inc adc (bad) iret lods add stos jge es ret mov xchg mov mov inc stos mov lds cmp add jecxz push (bad) fucomi pop sarb adc mov xor mov jl jb popa add xorl and mov (bad) bound aaa enter cmp pop mov mov xlat rorl inc addr16 lock dec stos pushf mov adc shrl mov inc repnz and test popf or and sbb pop or out mov ds inc jae jmp inc xchg inc outsb out jge inc mov pusha sub ror or sti addr16 rorl pop int3 (bad) mov mov lret in mov jo mov imul mov or mov dec fsub add dec fsub jge jae das jns fisttpl xchg pop push mov mov cmpsl mull dec jge dec or ret mov mov (bad) cld mov inc ficom mov sub or jge int3 lcall dec test mov cmp and push cmpsb push (bad) hlt xor jo (bad) (bad) cld (bad) or rclb clc and push iret loope loopne mov orl add fild inc sub gs mov jnp mov movsl movl mov adc push sahf cmp into dec sbb mov mov mov test xchg jo pop mov xchg jle loope push icebp data16 mov lret nop jp int arpl cli sub adc mov enter and icebp sti add rolb fstl cmp adc ds pop clc cmp mov cltd xchg outsb pop (bad) mov xchg ret ret xchg mov (bad) pusha (bad) xor jo sub adc stos xor dec imulb sub (bad) mov or dec cli dec push insl cmp (bad) cmpsb stc add fnop xor push aas mov xchg aaa dec bound pop push mov pop clc loope sbb test mov xchg jle rolb mov jae dec inc mov inc pop nop (bad) loope out fs xchg icebp mov cmp and in inc mov ds arpl sbb mov sbb js mov dec sti dec subl es sub pop lea pop test push sub push pop fidiv js les test sarb rol sub mov fmull (bad) jg lret shl mov cmpsb add int push jae dec or pop clc xchg push ja rcrl sahf push inc xchg sti andb jb cmp lret mov cmp into xchg outsl mov xor stc lcall add scas add sbb insl pushf jb test xchg mov mov rcrl leave pushf mov push clc iret rdtsc mov mov js sub pop cmpsl int3 iret (bad) pop (bad) push pusha lock sbb out or xor js mov mov jno sbb jbe mov inc xor lcall aam jo iret popa sahf sarb mov das outsb push or and addb sahf cs and es sahf mov or mov fstl dec dec dec lods dec cld loop mov fstpt sbb lds xor jnp sbb fcompl sub cld cmp dec jae test scas lret xchg in (bad) ljmp leave hlt sub aas fdivrs loope mov in movsl stos and outsl dec std push jns xor xchg test mov test push xor jne movd bnd lods clc rorb or dec or mov mov out aam inc in inc rolb mov out cltd fstpt or inc push scas test das cmp (bad) int push adc lds and outsb scas push or (bad) sub and push rcl push cmp fldcw sbb jp insl xchg mulsd cs push notb fyl2xp1 lods dec sbb inc pop mov cwtl mov jecxz xchg dec mov bound outsb xor iret (bad) xchg or dec jecxz cmpsl scas popa mov call mov mov jne imul aad scas test push out mov mov xor das xacquire pop add pop repnz shlb pusha push (bad) dec mov fcmovb push push xchg xor xor or insl mov dec (bad) imul retw data16 xchg push sbb cmpsb push pusha or popf out lods mov inc mov or das clts xchg xor mov mov and outsl jecxz mov ret push cmc pop add mov cmp push enter negb ret pop icebp mov dec dec hlt outsb jno inc cmc push hlt cs out push fldcw and mov dec (bad) lret fistpll mov adc inc inc mov mov sbb pop (bad) aam test push pop xchg mov lcall cmp or lret cli sbb insb lods xchg dec rclb lret jecxz mov dec out xlat je popf mov (bad) cmpsb ret jg mov lods jp loope in xor insl adc test cltd jl mov dec cwtl imul ljmp (bad) movsl clc sub leave xchg mov mov xor ret add cltd daa call pushf or daa inc out mov nop aam lahf fnstenv pop imul repnz notb sub iret push add (bad) cs (bad) mov rcrb adc aam lock jge popf cld fimul xor popa int3 sbb push andl inc cmpl enter fdivrs sub fldl mov add icebp or mov cltd xchg cmpsl xchg mov xlat adc push pop jmp leave fisub ljmp add sahf fldenv cld adc daa lock loopne sarb jg dec add cli in mov mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add sarl adc dec int test cmpsb cmpsl jae mov cmp outsb mov sahf cli jle mov daa cmp add mov ja mov dec mov call sbb lds es push loopw add out int adcb inc pop lea jns in in arpl xchg xchg fwait xor ret sub js push das mov fcomps pop pop mov fldl out cmpsl jns call sbb ss std sub cs out push ljmp push rclb dec out push xor jl and nop add mov mov xor inc scas mov xchg jae lock cmc ljmp ss ret ja lcall loopne es (bad) xor add pop xchg xchg pop fdiv or add xchg popf push or aad fidivrl pop in js test repnz (bad) test push or sub xor jb hlt or cwtl and push mov dec fdivs dec data16 scas cmc (bad) cmc out pop push out mov pop in fwait sub orb repnz mov and repnz pop ja mov decl sub jne mov cmp in cmpsb jg mov outsl push xchg mov push lods pop mov add imul push jle dec xchg rclb and mov jns cmp std add in cli inc sbb les arpl add (bad) push cmp stos xor jg out jmp aad aam mov insb std popf pushf mov adc insl mov out std out test ret lds loopne fstl mov lds fimull xor mov add adc leave mov push je iret addr16 jbe and xchg out push pop cs push mov inc lret xchg inc sub add inc xor dec shr xlat mov sti ret push out or xor test xlat xchg mov lds dec xchg in or adc loop add shlb aas jmp scas in mov dec cmpsl push arpl dec fcmovnbe mov jno fcompl (bad) enter mov in sub aad cmc stos dec mov cmp fsubrs mov nop mov dec fsubr add fwait cli ss leave clc lods std (bad) xchg in pop xor fidiv insb scas jp scas lds (bad) jns xchg xchg andb cmpsl andl push in cmp inc popf sub sub shrb xchg daa add xor mov lret mov cmpsb mov add loop rcll ret mov sub out jg lock fsubl movsb cwtl and pop ja ljmp xorb imull push std mov daa and mov leave push adcl lods cwtl add mov outsl lret mov push (bad) (bad) out lahf aaa rcrl xchg jp sbb inc shrl xchg push jp ucomiss pop insl pushf mov repz and out mov out in mov aas cmp dec lods adc out popa aaa sbb inc mov dec pop sti adc dec and mov (bad) mov testb adc sbb fidivl iret dec insb pop int3 add mov jle imul imul cmpsl in or fadd adc cmp mov into mov mov scas scas adc js inc xchg pop cmp sub movsb les aaa je push repz add add scas xchg sub and mov xchg cs out pop stos loop sbb in ds mov and cmp pop shrb inc xor int aaa js cmp enter cmp xor dec dec mov mov sub adc (bad) mov (bad) pop adc sbbl lock insl fcomp sub icebp push sbb xchg imul pop fldcw out mov mov adc jo pop mov mov and fmull les add mov ret push fimul shrb les inc push add sbb inc dec fwait or clc aas mov inc adc jge mov adc mov or jne popw mov imul add mov clc cltd mov prefetchnta adc icebp (bad) mov jp cmp repnz popa xchg adc and mov dec cld or enter sub sub imul clc sti lods setbe or jecxz cmc add pop fiaddl inc mov xchg loop mov jns repz fsubs xlat cmp (bad) mov pop inc sub sahf mov cmp lock adc pop cmp pop imul jp xchg lret inc into bsf (bad) (bad) or ficom movsb jae add stc repnz or sbb les push call jge dec std int3 lods fchs insl push cmp mov cmp or pop add scas and std mov ss fist fsubrl push jno outsl cmp sbb pop nop and cmp gs ss push sarb sub scas sbb int3 sub inc orl push pop lret inc xor loop je mulps jae fcom push rcll sti pop lret sahf or repz and fsubrl inc movsb (bad) mov xchg ds or sahf pop sbb mov lea les icebp push arpl mov or dec add inc out dec cli out test loop jne es icebp inc cmpsb inc inc inc add sub (bad) jns (bad) xchg add inc cld jg outsl pop cmpsl mov addr16 out jmp xchg cmpsl lcall pop jl cmp sbb sti pop mov mov aad shll sub (bad) cmp add dec cmp cmpsl aam inc xor cltd xchg std (bad) sbbb pop pushf push dec xchg push std shrb (bad) movsl xor gs fs sub popf dec jne add xor (bad) incb sub xchg (bad) cmp negb push fistpll bound ffree mov add pop cltd mov jnp pop data16 or ds or lea pop mov and scas sbb push pop test int movsb add cli movsb cmpsl and sbb sarl sti add fdivr bound ret mov mov and in cmpsb dec test cmc stos pop push scas inc mov inc adc clc pop dec (bad) in movsl or fiadd cmpsb fdivl mov mov push ljmp sbb cltd sub addr16 xlat dec sub insl add sbb aas push xor xor fidivl clc add (bad) sbb inc sahf add fisubl lds out add cltd stos loop popf xchg mov push cld lahf (bad) mov aas lea mov pushf les arpl mov mov std mov movsb mov jmp push inc lret jle inc xor push rorb add sbb je push loope xchg pop mov sahf shlb mov and and (bad) push mov aad call pop cmp fisub xchg mov xor xchg pop test pop popf push insb mov cli inc divl int pushf dec mov xor movsb int xchg add mov in cld shr leave or xchg jb mov mov gs arpl inc xor lods xchg shll negb arpl rolb jecxz sub inc popf xchg xchg add out inc addb ja fbstp add mov (bad) jp test add dec adc jbe sub arpl sub add add inc jo jnp aaa das or movl repz mov pop mov in stos cmp (bad) idivb popa cmp sahf push dec leave fcmove iret fisubrl pop push sub jnp out fcoml and fstps sbb xor insb pop pop sysexit clc push ss pmuludq fsubs or xchg imul xchg xor sub aaa test or sbb adc inc sub loopne std arpl xlat mov or les cmp inc stos mov subl dec jne push inc dec mov (bad) jno scas (bad) call pop jno div add je xor add mov push (bad) testb aam int3 fcoml mov pushf scas cmpsl (bad) in xor adc push repz and and cmc dec test jns dec cmp sbb imul xchg xchg cmp in push pusha inc dec mov ja sub mov push add xor out and test out fildl xor jp in orl scas enter loope dec loop popa and push (bad) enter cltd jno pushl out push loopne push mov jl mov mov ja jno push and jne orb cs add enter pop out adc test loop roll fidiv add pushf cmpsl xchg adc sbb stos std pop adc sub fidiv adc in jns nop dec nop (bad) inc sbb sbb in dec std divb dec dec arpl insl cli jnp shl rolb fistpll pop jmp fcoms ficompl (bad) lds lock pop mov jp adc scas push insl jge add and sbb push xchg sub jns clc pushf inc sti adc repz jae push jle pop jne cmp mov ljmp pop es fsubrs jge (bad) sub push movsl imul xor sbb xor mov pop push in pop repnz loopne ret xchg lds jno cltd lret sbb in sub sarl push outsl int jns (bad) and incb sahf stc push fnstcw adc sbb fcmovnbe out je push lret pusha inc hlt adc stc cwtl mov push dec or sub mov mov or lods add sbb and dec orl add clc xchg mov mov jl dec pop push fist orl mov push lock or (bad) xchg mov dec int mov pop pop or scas sub mov cltd nop ja and cmp ss or es sbb jnp fnstenv pushf cmp sbb (bad) movsl adc adc (bad) into aas or sub mov out xchg fldcw lods dec mov mov loope pop mov push pop or enter arpl cmp shll stc xor (bad) pop sub mov (bad) idivl sub nop call dec repnz fisubrl mov push xchg add add lahf cmp lock xchg stos loope shr inc lds (bad) push stos pop xor push (bad) in or lahf mov push xchg jne pop cmpsl xor movsb cmp stc push adc jl cmc sti aad cs jmp xchg test addr16 loop inc sbb jno arpl or ds (bad) cmpsl mov push sub jbe popf popf (bad) in adc xchg fsubl mov sbb jne (bad) imul push imul movsl or xchg out data16 inc (bad) in mov jb (bad) mov pop ljmp (bad) xor add jmp jbe divl adc dec inc and jmp xchg sub push popf ss in pop lods pusha pop faddl sub mov cmpsl fcoms loop aam or pop jns cltd mov cmp xor lods enter (bad) test cwtl daa fdivr push pushf (bad) ja mov (bad) sbb adc outsb cmp or gs outsl mov mov sbb cmp loope repz push xlat les push mov call jo or mov movsb leave adc rcrb vmovntpd pop or mov mov in mov out xor sahf in lret icebp mov sub mov mov adc mov sbb mov insb sub sub sub lods es sub add jne push xchg fsubr sbb adc (bad) ss in pop xor sbb jmp xchg ds insb dec or fidivrl stc cmp fcomp repnz hlt outsb mov fwait jnp ror cld enter lret adc dec xor cmp into fbld mov cs shrl fs leave xchg mov pop xchg push sbb xchg mov iret pop loopne or xchg mov pop scas and mov jl shl rclb dec or fisub push lock push (bad) stc xor mov pop push stc fsubrl cli jns outsl mov inc test cld iret out or and xchg mov mov sahf mov jbe movsb xor mov cmp xlat test jmp jg mov push das xchg fcmove sub and inc pop xor cld and ret int3 jae fldenv mov jae (bad) movsl insb aam pop add popf xchg dec std and mov sti (bad) adc aaa testb in nop test stc mov out mov push dec inc add arpl mov js popf sbb into push sbb jnp addr16 negb mov push jge fdivrs (bad) lods insl aas jp dec addl notl cmpsb loopne cmpsl add mov mov out hlt push out repnz xlat hlt or jle fcmovbe gs jp dec test mov (bad) (bad) sahf dec popf xlat adc dec les roll (bad) in shl lods inc int push (bad) inc test sub mov jle out mov jbe mov nop mov pop xchg add cmp sbb std (bad) (bad) clc push shrd js xchg jmp push cmp dec inc nop xor push sub int mov and aad repnz out ds ret es pop push jns jns cmp shr push fdivr mov in mov aam add jb negb and mov fcmovnb and cmp dec sub (bad) cmc inc cld or mov clc scas stos sub rclb and adcl sub or data16 pop or (bad) lcall jno or xor aaa sub pop mov mov and iretw cmp negl lock mov push decb lock loopne jl jg add xchg (bad) cs add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in roll (bad) icebp dec push cs push (bad) inc negb fnstenv sub test fcmovnbe call sbb xchg int pushf mov xchg in idiv pop dec out aas loope push add xor jno cmp xchg xchg mov sbb outsb sbb lea lahf decb dec fldcw and push outsl sub xchg jecxz pop add cmp mov ljmp pop and cmp out cmpl cmc insb test adc pop sbb sarb lret ficom movsl and outsb cmp enter lret mov xchg sub cld fs mov and and aas cmpsb in icebp mov (bad) arpl or in or mov es adc lret lods xchg dec sbb mov (bad) mov and xor pop mov inc fildll out add lock enter adc imul in js sbb add add bound mov xchg shr jg leave xorb adc xor rorl sub mov adc and pop jl mov (bad) js (bad) jnp insl inc jp jo test xor into push enter mov imul jge int3 sbb pop ss jne or lods sbb cmpsb ret roll xor lret xchg jle mov mov add adc mov loopne out dec mov iret jle stos or jnp jg mov loope fcoml test shl ljmp (bad) cltd iret jmp sbb xchg insb jp or mov cmp pop (bad) cli mov and xchg (bad) clc lods cmp shlb inc dec pusha mov imul add test xchg rcrl sbb (bad) mov inc push ret inc dec jo jb xchg test ds loop cmp cwtl sub jecxz sbb mov shrl add bnd sbb jmp xchg rcll push push pop mov (bad) jmp idivl inc inc jae push test xor mov movsb (bad) add cmp xor pop adc into xchg sets in xor sbb aam jg loop enter inc push cmp adc aad mov lahf cmp push out xchg xchg dec int3 iret dec xchg xor in test addr16 out pop popf ja hlt lret add adc (bad) or cmc xor sub and fimul adc sbb outsl pop shl stos and add mov jmp or jle ss cmp mov jb mov ja jnp push ds mov popf mov pop xchg xchg cmc cmp push jp cmpsl pop sub pop aam jo das js xchg and loope inc pop js add mov pusha fs fldenv and xorb add lret into add mov mov popf scas insl imull pop dec test jns xchg and scas pop push xchg inc jbe,pt outsl movsl cmpl pop addr16 cmp lret je mov and and test aas inc xchg in jge mov fcomp cmpsb adc ret loop jmp js test test xor ja pop adc mov int add lods and xor cmp outsb popa in mov cmp enter pop mov jbe sub fs and add mov std and lock adcl loop incl jns aam mov xor inc jecxz mov lahf cwtl jge (bad) cld test scas pushf mov xchg pop sti in mov mov movsb sub lds push jne pushf dec bound jl insl addr16 cmp and loope jle jne jmp roll sbbl fsubl rorl push fdiv aam rcll xor xor in popa ret jo add add daa mov lds dec dec jne dec mov adc cmpsl lock std fstl cs in cli xor lds sub push mov sub lret push lds sbb sbb sub scas gs sahf stos rorl in cmc sub ret sbb outsb fs mov pop test fsts mov inc pusha insb or (bad) imul xlat repz xor jnp repnz jg cld xorb lret lcall popf mov jae insb mov ret mov aad push out leave xchg iret lcall xor dec or mov push sub cmp pop int dec rolb fwait sub jne in push in sub and pop jl jecxz test aam aam ds mov fbstp xlat (bad) pop sahf int inc imul mov clc loope movd push cmp add lds out mov std das ret mov mov fwait (bad) cs xchg jmp ds inc hlt mov sub mov mov dec pop dec mov push adc enter icebp test jbe (bad) jns push jb ds add xor icebp dec scas jno jb and pusha push (bad) mov or cltd add in jnp lret inc rcr sub xor nopl xor adc dec insl leave stos dec aad in (bad) push mov adc pop sub xor fcoml sahf imul mov data16 addr16 popa fisttpl mov mov addr16 cltd lret sub aad fistp imul jb inc and lret lods dec xchg cs lods xchg add sbb jne fildll mov pop mov mov jo outsb jae fdivrl add xor int3 inc imul add out lret pop stos dec and pop mov mov sbb stos sub sbb push and fs gs cmc ljmp add mov cli fist dec sti push aaa mov daa or popf adc cmp add inc clc jae sub jo lods adc adc add jno cmc (bad) jne or push imul shl cmp push or ljmp mov push mov jp (bad) mov xor mov pop sub mov movsb dec in mov (bad) testl or or (bad) repz jb or mov jge mov andb scas cwtl nop test mov ret push out cmpsb push mov cmpsb inc sub mov ds cwtl mov cmpsb sub pop dec popa cmp mov dec push mov shlb test inc mov stos adc xor sbb sub mov lret adc into add ds imul and pop (bad) (bad) inc and dec sub ficompl cmp in and scas add (bad) jbe insb mov pusha mov ret gs imul (bad) outsl dec jp fldcw and bnd jmp jbe pop sbb sub hlt sbb js (bad) ret aas inc lods and rorl cli nop and mov hlt lcall jge popf and cmp daa sbb adc cmc adc mov mov mov xchg inc int lea nop roll (bad) cwtl cs scas jno nop or ret aaa xor pop xacquire outsb xor push and (bad) push scas mov insl jne,pt pop push stc mov ss mov (bad) aam jge popf pop lea cmp cmp jp insb mov mov neg notb push sbb push psllq in xor mov xchg dec push dec jge jp push add sub mov inc sti xchg arpl adc dec xchg mov mov xchg xor ret cltd lock (bad) out lods stos adc and cli fstp mov adc repnz or jbe shrd iret js dec xlat mov sub hlt xchg add aad push ret mov fwait cmp outsl or pop test out cmp sbb ret int cmc lock imul jne out xchg popa ds hlt mov fidivrl pusha popa leave mov cmp cli mov fidivrl dec xchg fcmovb push cmp movb inc das xlat sbb test scas sbb shlb add xlat mov mov xchg mov sub adc in nop push xor jl arpl jno jp mov (bad) fsubr xor and push dec in or sbb xor pop mov push inc inc mov xchg adc push fwait mov ret int3 sbb adc lods fldenv inc pop push sub into es push or ds popf repnz mov jo dec or jno pop les call jae leave sbb dec sub xor pop int3 sub in in jl and or loopne xchg sub das std push push cmpsb jno add arpl ja lock xor xor pop jge pop mov push cmp shlb scas mov stos mov fcmove aad inc push in dec mov loopne mov add and stos data16 bnd mov and mov and push pop mov lods inc dec sub push ljmp push and mov shl mov cwtl scas fistl sbb out push jo rcrb outsl xor mov and sub cmp (bad) (bad) roll or mov pop icebp jmp divb add int3 push adc gs push fsubl scas xor in scas inc fidivr jnp mov (bad) movsb aaa xor push cmp dec inc rorl aas test xor in and bound imul lret jle inc fmuls out cltd mov in sub fwait hlt xchg ret jecxz scas push je movsl sbb outsb jl adc arpl lods push repz cmp jmp scas repnz xchg push dec mov add test pop pop pop xchg xchg adc or cmp adc xchg xchg push leave sbb inc js xchg call dec ljmp push mov cmp adc test mov js and fild rcrl sbb cmp popl jp repnz scas jbe mov mov dec (bad) push mov inc and xchg pop jg jmp das cmp loop mov xor fldcw shl js xor push mov sub in lea iret sbb sub mov mov mov pop movsb cs ds dec sahf mov movsb xchg rcrl ret fs fs cld mov int xor outsl ss jno mov gs aad das xor sarb inc mov or mov cmp xchg adc inc xor aad or (bad) or cwtl jae mov pop jge loope jne sarl push dec mov bnd data16 mov decb pop out xchg popa sbb (bad) push ret xor sbb insb decb outsl xchg mov cmpsb xchg xchg movsl lret ja dec fidiv jnp cld xchg cwtl hlt jmp repnz sbb fs or mov inc repz mov sub lret outsb and mov inc in push or mov sahf dec aas sub mov inc (bad) scas jne pop cmp faddl popf dec fidivr clc int pop cmp xor test or insl push fstpt jle (bad) mov or js dec pop and adc inc mov push jo es add lods inc push cmp jp dec mov icebp jnp pop in outsb mov xlat xor mov push xchg jne sbb frstor leave fdivs jecxz jnp add ss fisubr sti add out adc shrl ret insl sbb add and inc aaa and movsl lahf jl cmp pop xchg adc jecxz push adc fsubs mov dec movsb sbb int3 es push mov add dec (bad) push mov adc jb pop push dec sbb cmp clc ljmp add push mov popf mov mov add jle adc sub pop xor in add cmp inc jl outsl add sub inc mov movsl lods adc mov mov push andl insb push push lock scas decb int pop aas sahf mov xor xchg fwait inc and loop sbb ret sub sbb data16 push cmp dec cmpsb in aam popf cmp outsb adc xor test push aam fsts lcall xor or jne cltd pop sub inc flds sahf pushl lret aaa inc mov or push cmp sbb gs and or insb push pop mov clc jmp cmp cmp inc test jno sbb mov popf mov pop jmp fidivl cs arpl outsl lock lods movsl cmpsl fwait icebp iret in or jns pop sbb repz jp xlat jb fsubs inc jp mov inc add lock or mov inc mov stos xchg imulb push inc clc or xchg push cs and mov jns movsb cmp add ss xchg push ds ds adc fucomi cltd cmc or dec xchg sub pop adcb test loopne mov jne (bad) (bad) xchg dec dec jbe sbb sbb add inc xorb inc mov xchg dec sub push call data16 jle jno cmp add dec pop pop in jle mull lcall scas xchg pushl test mov out mov imul pop in out mov in pop inc cmpsb leave loope std std lods stos pop iret (bad) fndisi(8087 dec push ror or cld repnz int sub adc insb dec mov arpl and inc shrb push adc dec sarl push xlat pop dec popa xor push and cltd pop push pop movsb incb loop jg insl push sarb cmc mov call (bad) pop push or dec inc and inc push int3 xlat xor sub cmp arpl aad ror jns bound (bad) lcall pop test imul jmp rcrl push mov mov shrl loopne mov sarb adc lods fnstcw and das xor test call sbb outsb sub add inc lods add cli daa lock loopne sarb jg incl or aas pop clc pop sbb push mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add roll ret jmp jecxz popf jno xchg les cbtw sbb loop mov fidivrl or add pop push or sub mov dec push sub push mov inc fwait aad popa jae adc mov lret dec xor (bad) negb dec mov push dec clc sbb mull or jae inc and jmp fwait mov out add cwtl fdiv xchg aad push xor das lret lret ret fwait loopne pop mov mov movsl pop jp jge push dec dec push lods int aad mov ljmp adc and pop popf adc inc insb inc in mov fild loope ja lret sbb mov xor or add mov pop (bad) mov xor mov sbb jecxz pusha out and sub pop mov rcrl and pop stos mov arpl push sbb jmp lea aad in aas les sbb clc inc imul jae push inc imul leave jmp pop push outsb add clc jge out es pop sub mov mov mov mov push scas push icebp fisttp mov lea xor mov outsb cli xor lock mov dec jb add mov outsb push hlt jo arpl cmpl and (bad) dec push (bad) fstps xchg inc ja mov mov (bad) hlt jno fdivp hlt dec rcll mov test cltd mov mov outsb mov lock and icebp neg add mov jl lods ja out aam xchg movsl xchg jbe sbb mov test scas cmpsb cmp (bad) sub outsl pop sbb (bad) sbb add xchg out lret bound push fwait repz psubsw insb ljmp pop test inc adc movsb sbb jmp (bad) repz rcr sbb popl outsl fcomps xchg sub int insl addr16 mov sbb aad rolb inc push scas loope add pop lods ljmp arpl lret jl push leave ljmp ret subl pop cmp pop jno xchg clc sub popf call adc inc cld mov hlt and pop icebp adc hlt pop sub mov das lods fnstcw scas xchg push push inc sbbb or das lock stos sub jnp push sahf lods (bad) pop std out mov cmpsl pop fwait or iret lea cli and mov outsb out or push mov sbb popf pop in inc jmp nop mov cmp add loop push (bad) mov push cmpsb and and fcoml xchg fisub cmp outsl xor test dec xchg loop (bad) clc incl nop sbb ret data16 outsb add cmp outsl xchg jno dec repz insb adc cmp jp icebp cmp jmp dec lock cbtw in outsl (bad) in xchg (bad) mov fs inc cmp popa (bad) icebp sbb icebp pop xchg mov (bad) (bad) sbb movsb aas stc (bad) fwait cmp test sbb (bad) jle push mov dec out cmp mov imul pop mov xchg inc (bad) scas (bad) or enter lock je cmp enter add mov stc jae push cmp fidivr and test push incl imul cltd fstl cmp lret bound dec gs movsb addb test add dec aaa push sub iret mov jmpw pop add dec pop xor adc ret push inc fwait insb pusha inc push add lcall pop dec jno das clc jb jb call sbb jecxz fabs enter xchg pushf add pop mov pop movsl adc sub mov push mov xchg ja adc arpl pushf inc imul outsb inc pusha dec push aaa (bad) fs jae pop pop pop nop sub dec mov mov in mov sti loopne popf inc ss push pop cltd test rcrb test mov scas mov iret mov ljmp lret inc test addr16 cld mov xchg iret mov and inc and push rclb inc jno jne pop stos les push lods mov cwtl fwait add pushf jns push popf imul decl insb or jbe pop aam xor (bad) cltd call hlt cmc inc xor imul in sub repz repnz pop scas shl daa jge fisubl or mov jbe rep sti mov sti (bad) mov and sbb int3 jmp rcrl loop or loopne in loope ds push inc add fcomps push sub loopne orb and sbb int3 adc xor lock aas iret fcmovbe nop mov fwait mov xchg dec pop insl add and jle jnp mov out leave add rorl cmpsb xchg push mov scas push sub lods sub fbld test push sbb sti aad fsubrs xchg pop dec xor push and in ficomp roll lock xchg dec xchg fstpl out outsl sbb pop pop jns add mov add xchg or mov sub imul fwait mov lret xchg mov out mov ljmp cmp dec mov js xor mov mov mov mov das push jecxz jno mov outsb pop push inc xor mov lds imul jne out iret mov jle lea bound xchg js orb sub lahf mov ljmp dec ficoml insl adc cmp (bad) cmc aad sarl out jg mov push pop push xor imul rcrl (bad) jne sub iret xchg add cmp (bad) and (bad) mov jns ss test inc loopne inc dec xor icebp inc mov jge das sti addr16 xorl jl jge dec push and add xchg push pop stc xchg adc add stos int pop imul es lret mov jbe cli outsl push movsl adc pop scas inc outsb adc sahf (bad) push lds in push nop jne push pop lods push xorb test mov sbb jmp popf push fsubl push fcoms jp movsb dec fimull fwait dec mov push cli adc sti dec fbstp popa lods and cmp mov aas test mov pop push fildll loope out negb jnp adc pop push pop and mov push (bad) clc xlat jg cmc js mov xchg push xchg adc int3 outsl adc sub mov dec push (bad) icebp xor sbb lods les dec ss out test addr16 (bad) sub mov mov inc inc shll call inc (bad) mov mov cmp stos aaa mov cmc ss cmp and les inc add xor ret push and mov repnz test add or jns clc fmuls (bad) leave fstl mov jl loopne push xchg jo xor cmp jl (bad) int3 pop sbb insb into out movsb js push jb stc mov adc out add add add cmp test mov push out mov jp int jecxz mov jo xor mov or iret shrl mov pop cmpxchg push xchg jecxz,pn test scas lret and lds hlt in or fdivp dec test cmp xchg stos jp in ss jns adc pop dec in mov cmp repz jnp rolb lods push inc xchg (bad) push imul leave sbb daa pop cmpsl outsl pusha hlt jbe push adc xchg mov jnp push push mov rorl cmp cmpsb rol jge scas ds mov jle fildll call fwait mov adc js pop imul cltd mov (bad) jge popf xor sbbl sub loope cmp or add fidiv aad js jl and inc hlt (bad) xchg sub scas push shll add lret rclb pop aam jmp push (bad) je lods loope cmp pop xchg and das vmovhps into roll mov icebp pop jne xlat (bad) arpl cwtl repnz or sub jns out fisttpl scas mov and fidiv loopne xchg mov (bad) or jne fnstcw xor pop jecxz fist push fistpl or sbb adc shr push sti in push (bad) dec leave bound mov sbb (bad) add inc cmpsb (bad) divl jle cmp jbe fsubl test xor andl inc bound flds call xor add stc sar push imul or sub ja sub not push cmp in fidivl lret out mov pop xor pop inc jmp or in call js lock call pop jno loop pushf cmp insl scas out mov sub mov jno sub and int3 in pop pusha fcoms jecxz push neg (bad) xor inc mov dec jecxz jo hlt lods stos or push aaa sbb in cmp sbb push inc aad ret sbb in enter repz sbb mov daa sub enter fisubr or test pop out int3 scas test pop mov pop cmp cmp cmp add cmp xor push enter mov cld dec stos xchg clc pop mov and scas add pop pop add sti lcall xchg mov sti es sbb (bad) fdivp cmp jbe adc push sbb gs test sub (bad) ja lods inc sub xor fildll sarb pop xchg aad imul pop dec mov lods (bad) rcll daa cltd push and push ljmp fildl lret pop inc pop push js cmc jecxz ud1 cltd mov pop fucom insl fstps cltd into inc arpl movsl scas icebp daa and (bad) fsubrs cmp ficomp outsb cmp push icebp ja add mov daa dec jae movsl imul cmpsb pop dec aam enter sub das lahf cltd push popa fstpl insb mov mov pop pop jae pop xchg or jns xchg jae sbb test jno fsts es sbb pop dec mov movsl into dec fwait pop jl bound push mov call cmp pop (bad) adc sbb js cmp adc push lock or mov mov shl stos mov xchg inc (bad) dec jl les popf in leave xchg adc cs push sub pop sub mov sbb jge cld lods ret mov jns (bad) adc addr16 fucom mov pop push jg aaa icebp dec popf movsb pop lret nop test arpl mov dec dec mov cmpsl cltd jnp xchg (bad) mov push jge out pop dec lret ja cmpl ja and outsl call jae mov xor and inc jmp pop inc push rcrb stc popf dec outsl inc (bad) fsubrs movsl and lock mov xchg imul in pop pop lret test ds sbb imul jno rorb xor call mov ja sbb orb (bad) inc clc cmpsl jl dec leave fldt sarl jp je inc push fsubrs int jo inc mov roll dec arpl xchg mov insl xchg das sub call fucomip popf sub js sub or push sub sarl cmp inc dec fimull leave sub mov repnz fldl out jge sti stos sti jmp dec mov movsl jp ja test inc in xchg int pop stc xor pop fisttpl xchg js pop data16 mov out sbb xchg cmp repnz lock sbb in insl add into sub jg outsb xchg fmul cmp loop and outsl (bad) fimull rcrl fsubl cmp dec mov mov lcall xor mov dec or pop pop lods bound lret push int push loop enter sub xor loope xchg std data16 icebp xchg xchg in pop sbb jbe in fdivs inc repz aas mov adc imul orl push add int3 stc xchg roll test lret and aas sbb fbstp jg outsl clc lods mov jl aam sub ss lahf (bad) das inc rorb sub mov lea movsb push fbstp aas mov xor or fxch scas (bad) inc xor cmp pop push or mov sub jmp out imul push sbb pusha (bad) mov aas push cmp shlb into add lret loope and mov jnp push mov leave push push or aas mov and push sub and scas outsl icebp int3 and jns cs stos sub test inc imul push int add and xchg out push sbb add mov (bad) inc imul push (bad) scas jl cld (bad) mov phaddubw or adc sarb or loope repnz es clc stos cmpsl icebp aam ret pop loop,pn mov lret into mov ret scas ret int lods (bad) mov lock shr andl dec inc (bad) inc stos mov cmc mov inc loop outsb (bad) (bad) mov add fistp mov outsl iret lods xchg xor jg inc iret daa outsl ljmp sub decb (bad) jbe cwtl mov stos gs bound adc sbb add test dec cs (bad) cld xor push ret out ja jb popf js xchg xor cmpsb rep idivb xor push int3 fldt add pop jle mov (bad) sub cmp aas adc mov popf je mov pushf jl cmpsb mov lods lret fs push daa scas es sub jmp inc inc lods xchg gs ds stc hlt dec (bad) insb jge inc aaa xlat or outsb jle jae add fsub ja sbbl push xor sbb outsl mov fcoms bound dec xlat jmp pop push daa pop jno push (bad) out jge fucom and jmp mov pushf or aas jno bound insl or lock sbb sub mov hlt mov or mov mov sub cmp test pop fs xchg and ljmp sbb aaa lock loopne sarb add add mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb add popl xchg outsb ss sbb lahf cwtl mov adc outsb sub inc ficoml xor dec ja add repz add jo in pop push sysexit mov push sarb dec xchg mov leave jecxz sbb and repnz fsubrp mull inc mov sbb mov sub test jne in gs jg mov cmp pop xchg inc mov insl pop adc dec outsl ret or jbe inc daa scas (bad) or mov iret (bad) aas cmpsb add (bad) shll outsb loope not stos hlt imul inc adc icebp mov sub es sub aaa cmp aam inc iret stc ret cmp addr16 negb mov sbb jmp rolb xchg push stos mov sbb mov sbb sub jecxz sub sbb xorl fist iret insb dec jp lock inc fwait jp sbb aad xchg and cltd loop arpl push stos pop cs pop xor int stc mov jl gs cmc jb inc rolb xor mov mov push lds mov (bad) stc stos jmp jbe fstps arpl arpl cwtl (bad) cmc push adc or (bad) sub je aas or lcall add mov or stc aad mov sti lret ss je arpl ja sbb (bad) icebp xchg cmc cld sahf lock push jb push int xchg pop inc inc data16 aad dec push dec mov (bad) movsb cmp cld popa inc std shl mov inc out test int3 mov mov ret fwait mov mov cmc (bad) pop je gs push lods cwtl inc in xchg mov xchg arpl dec in push outsl pop xor es jne push sbb pop xchg xor sar call mov push outsl jge cmp mov jno cmp sub in jnp add nop (bad) cwtl addps das lea adc fwait sarb imul (bad) mov call dec ja dec cltd insb pop call adc dec and dec lods ja push lock imul mov fistpll xchg mov imul stc sarb inc jmp mov push test jle mov add popa add push mov dec jbe jp add xor dec jno and pop sub ja add xor fidivl pop inc pushf dec fwait pop push inc ja jecxz adc xchg push pushf inc push notb insl or clc and inc lret in jb and jo rol mov aad pop and lods fidiv dec jb dec cmp cmpsb pop inc int jmp mov sub rclb imul addb jns out pop rclb jp iret xchg popa mov adc jp cmpsl or pop adc sbbl decb push inc xchg and add sbb adc orl ror cs int3 aam dec jo push gs fldt and cltd pop inc sub aad push xchg mull aam jl dec mov outsb mov mov stc jo das movsl cmpsl add jnp div jp dec cmp pop lods repz mov adc inc mov ss and (bad) dec mov outsl push ficompl popf cld jnp mov and dec pop lods outsb aaa or daa dec imul jb outsb jno xor fwait xchg xlat out and xor ret (bad) lods lcall ds decb push pop negl sahf in sahf mov rcll mov fs mov stos adc xchg or dec xchg xor add icebp loop jmp push xchg jnp aad int3 jbe lcall or pop pop in jp mov out stos push bound mov push jg cwtl add (bad) mov std in out nop test sbb mov jg movsl xor cmp sub movsb ret mov inc pushf popl (bad) subl cmp dec into shll aaa or cld sub aam push sub pop fbld stos (bad) icebp add ja orl pop mov adc (bad) jmp aam dec clc add iret and push movsb sbb (bad) jge cmp push jns ret jl pop mov sbb test adc xor jmp sub mov gs xchg aad push loope int inc ffree adc lcall fiadd jge or cmp xchg jg lcall jecxz push jbe sub pop (bad) push mov cld shrb push add pop sub int3 popf jbe lcall cmp divb sbb mov pop push push jmp loopne jle sbb cmp pop cmpsl or mov xchg fcmovnu test stc cli pop cmp je pop imul xchg adc fs dec lcall inc insb adc cmp (bad) or pop mov (bad) mov cmp sub loopne shrl xor in out lcall inc arpl dec ss cwtl push xlat movsl jae xchg xor cmc scas pop mov mov mov dec cmpsb pop cmp aad xchg les dec decl sub mov push aam popa enter popf push and movsl pop scas push mov add (bad) cmc jno fwait stc fcompl or xor mov xchg scas mov daa das mov clc insb das cmpsl (bad) into int aaa pop pop mov lea jbe (bad) loop sub push inc leave int3 adc jmp mov je xchg loopne inc sbb jge mov push (bad) dec stos sub in outsl mov out mov add orl push mov sbb xchg pop mov dec roll cmc sarl push aaa aam jne bound stos dec pop inc in push das loope adc mov cmp mov div jp sub xor mov daa or add jbe fsubrs std cmpsb cmp jecxz insb push mov inc pop rclb add sbb shl sub es decb inc and mov inc into jnp xchg cmpb enter mov or mov push cltd pavgw out cmpsl sub add lahf push or loope imul adc lods xchg jbe and dec cs (bad) dec push inc mov in or cltd jnp pop es push shr ds (bad) imul mov fs clc adc sbb scas (bad) jne clc pop cld sbb sti or pop ss xchg decl outsl loope lcall fcomp dec xlat lea dec jecxz cmp jp,pt mov std jp mov or (bad) push mov (bad) push xor or test xchg fadds jecxz stos movsb imul adc in popa sbb shrl mov jo (bad) mov (bad) ljmp mov iret addr16 cmp or sub rorl mov push push mov ret fsubr call mov addl gs sti jmp push dec jge hlt add cwtl jg mov dec jbe imull lods enter bound mov mov mov adc loopne rcr push mov push add imul jo mov mov insl rol or push (bad) test repz out fs daa stos adc in sub gs repnz inc pop sub and mov test mov jae fwait mov cli imul sahf or push frstor xor or into fsubs lcall outsl test pminsw xchg in xchg dec sub (bad) dec rcl push push push in lahf dec (bad) repnz sarb lahf jne loope push rcrb icebp outsb add scas sahf (bad) cmpsl push cmp fstpt hlt (bad) xchg and add int xor fldl (bad) addr16 push push lahf fmull inc out cmc mov loopne stc mov adc push (bad) jb (bad) outsl (bad) cmp test outsl push loope (bad) sub mov pop sahf mov jg sbb repnz cmpsb sbb das mov pop cwtl mov pop sub cwtl dec sub jl testb inc jmp or (bad) in push mov cmpl xorl lds or (bad) js daa (bad) fildll test les mov ja mov and je mov notl mov lcall test cmp jb hlt mov adc adc sbb jae stc in jnp push push xor clc (bad) out jle adc inc leave in (bad) lahf ljmp sbb call mov push cltd lds aaa imul lahf inc xor insb xlat jg stc lods jnp pop loopne xor jge les pushf mov lret or lock inc dec dec inc iret cmp xchg test pop (bad) sti ja mov xchg mov mov sbb shlb repz movl ds sub dec mov mov into pop inc fadds cmp fld or repz aam jle (bad) mov xchg cs and aam out xchg xchg inc mov push jmp lds xor ret imul cmpsl push fimul ds jb cmp mov pop (bad) loope movsb (bad) mov rcr out fisttp jmp cmc cmpl adc cmp int3 xchg (bad) mov xchg outsl xchg lds xor aad aaa insb outsb das das adcl xor lods fisub push movsl cld (bad) mov pushf rcl mov shrb sub (bad) mov pop and sti cli xor test jl adc mov movsb add mov lret xchg je icebp or dec inc cld ret jg pop xchg or pop jns inc xor in sub adc test cltd add call sarb gs lods fdiv gs dec ret std stos mov mov repz mov xor sti and scas xor call push das pushf stc inc mov pop xchg adc js or movsl and loop fdiv fldcw hlt ror arpl (bad) cmp push and (bad) cwtl les sbb push xchg repnz lret cmp push xchg fwait dec leave scas out push mov lcall lcall cmc sbb lret jae add mov lods push mov les rcrb push pop adc xor mov (bad) repnz cmp jne jb ljmp fs shr fimull adc aad clc cmp and outsl xor or xchg mov xor push roll stc subl inc fwait push pop jnp mov ja bound pop insb mov jno ret cmp add push adc pop push inc jp das sti dec incb frstor fildll mov mov pop push jnp js call pop fs mov pusha ss add gs outsl dec es or sarb (bad) xor xchg lret out fistpll int mov xor xor pop push jge sbb ficom negl mov sub leave fs jmp xchg (bad) xchg xchg add mov mov enter or fwait addr16 push outsl (bad) jle out lret (bad) stos pop pop fstpl test lret dec in mov je cmp clc jne bound cmp gs mov dec mov (bad) xor lea rolb mov pop fildl push pop pushf sbb call punpckldq cmpsl xor test pop jge and xor xchg add mov xor test xor jge outsb cmp cmp push lahf outsl into or push stos in xchg push mov pop je mov and scas cmp into enter (bad) out push mov int3 in cmpsb mov sbb push ljmp dec jnp lahf fdivrs adc loop cmp (bad) sub xchg pop dec arpl (bad) stc lods sahf je add mov xlat test ds xor mov push xor pop mov pop push fisttpl cmpsl mov jmp add inc lds jg pop lret and dec test xlat ja popa and jg je xlat jl aad clc add adc mov or adc sub test in jns,pn adc xor pusha arpl and pop adc mov mov mov xchg lods (bad) insl dec test out or pop mov sbb pop mov outsb mov pop and je clc fsubrs int3 mov fiadd lcall insl inc int3 pop mov mov add push outsb mov pushf dec aas aaa rcll jnp pop call mov leave and jb hlt call enter sahf ljmp add mov mov es xchg xchg outsb data16 daa decl push cmp dec xlat lea adc es xchg mov dec jne in outsb in or mov and jne inc sbb popf lock mov adc hlt aam clc out mulb fcmovu popa stos adc inc lods sar daa mov pop pop lods ja inc xchg lock cmpsl cmp fcomps sti xchg mov or std xchg clc pop push sub push xchg sti ret popl loop stos cmp roll (bad) cmp js fimull idivb mov pop sbb mov sub jp pop lods push mov mov mov jl push in into mov cs sahf mov rcl pop insb mov mov jl sub test mov nop mov (bad) into xchg sti and lods push popa shrb or jae inc insb lods popa lahf or shr dec mov arpl shrl xchg xor in int3 lods xor out das aam js in pop fcoms pop dec and in (bad) loope inc outsb test lahf push notl sub (bad) pop imul sbb push hlt je sbb and cmpl int lcall inc out xor ss into mov fistp jl ret push bt imul jle scas jae movsl shr jge,pt cmp sub ret push in jp shrl pushf fcompl (bad) adc lods push adcb or ffreep mov push decb pop clc pop pop in sbb mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in (bad) test sbb jecxz icebp arpl rorl dec dec xor dec popf mov cmp mov adc cmpsb cltd ss inc outsl out aas loope js pop (bad) pop add jne or jg mov and xchg dec sbb dec popf jmp cmp push insb (bad) and aad mov stos cltd push and jne jmp (bad) std popa xor fdivrs inc imul cmpsl inc add outsb dec xor xor xchg cmpsb inc leave mov (bad) pop cld sti mov into add mov fidivrl mov sub xchg push scas into xchg sar mov xchg cmp subb jge leave inc outsl mov jp cmpsb test sub push xlat add dec xchg daa dec lcall and pusha mov es sti rol xchg les fisttpl dec pop pop xor and in xchg pop jmp popf push ret loop,pn stos sti jp les jl or lock cmp clc mov cmp push dec jg das add unpcklps stos pop adcl loopne lods lret insl ja sarb pop cli pusha inc pop ss cltd data16 mov push movsb pop lahf xor repnz pop ds push mov das xchg out in aas sub xor outsb or in mov mov mov lahf jae add stos imul cmpsl stc ja sub das hlt sahf mov jo or cmp dec mov jge dec dec shrl lea add inc dec jp mov lds (bad) in fldl les test add jmp pop cli test pop dec adc ss les cmp aam sbb dec xchg pop imul cmp sub xchg stos stc adc fist and lahf or mov clc aam aam nop lods pop xchg mov mov es lret lods xchg push es or insb jp or or and int bound outsl xchg and or into push outsl pop addr16 push cmpsl leave and je js (bad) out adc cmp mov test xchg cmp push lea (bad) mov jnp outsl je mov jmp mov lret xor xchg outsl cmpsl jae mov and xchg cmpsb sub out aam jae repnz and fs das lds push sub testb sbb mov mov xor idivl pop adc outsb or pop xchg cmp add mov loope (bad) xor ficom int dec or jne push inc lds ret cmp lods lds xchg mov test int xor in push mull sti stos fnstcw je ret mov cmc hlt mov or shrb mull inc aas mov jp pop ss xchg ret nop xor fildll pushf (bad) das pop xchg loope and enter scas movsb jmp or insl adc out xchg popf push push ss arpl sti cmp sarl cmpsb (bad) inc mov addl sub add jb dec in (bad) cmp test mov aad lahf mov dec cmp xor flds dec inc jge cmp and repz cli sub sub xchg ficoml sub imul fs xlat jbe dec xchg outsb pop ja inc xor xor rorb mov mov sub mov iret cmp pop fsubr or mov inc xchg add cmc orl push xchg (bad) (bad) leave sbb xor in mov add mov push loop push sbb inc hlt pop in cs pop insl cmp sbb nop dec mov inc loope fwait inc idivl cmp jb cmc pop mov rol int3 bound repz and mov in pop push push xchg (bad) (bad) cmpsl dec lea mov pop add mov gs stos ret mov pop imull enter jp (bad) xor and cltd call addr16 out jbe sub xchg shrl inc in sarb bound les ret cmp (bad) xchg andl dec arpl xlat dec push imul jo aas lock ja xlat stc add add sub in inc cmpsb mov outsl mov sbb outsl add popf int mov sbb in add mov int3 addr16 inc loopne xor (bad) mov mov imul aas adc imul stc call pushf sti dec fdivr jmp jmp jp mov scas push xchg inc rcrb outsl subl push xchg mov adc int3 mov push mov cs xor pop sub inc fidiv pop rcr mov mov test int3 adc hlt cmp add fisub dec mov sub pop mov loope xchg jl mov in stos dec mov lret sub mov cmp sub mov fldenv and xchg ljmp mov mov popf adc scas mov addb sub stos in dec insb outsl pop std movsl and xlat adc adc jns add mov sub push push rorb pushf adc and cli rorl aad icebp ja pop sub pop inc sub mov (bad) fildll imul les popf jecxz ljmp jo xchg scas das sbb or inc mov rcrb (bad) lods jecxz mov cmpsb or enter mov push cmp xchg test cli rorb sub xor sub mov push sub push popa outsl pop cmp loop cwtl cmpsb xchg pop sub sub xor icebp divl scas mov jnp and mov pop dec xchg push test cmpsl test lahf sbb jle sahf dec push xor (bad) xor jb (bad) lret subb rolb loope pop loop scas out push dec cs dec into in sbb add shll cmc dec daa adc jecxz rcr lahf xchg push lods lcall iret fcmovnbe fcmovbe jge hlt fs daa out pop mov inc mov lods xor add or add xor dec outsb jl loope jp lds outsl pushf ja xchg pop cmpsl pusha add pop push popf ljmp inc lahf repz sbb repnz inc jle push stos (bad) or sbb jg sub pop shl sub (bad) sbb mov imul dec xchg ljmp cmp clc add pop hlt mov icebp pop mov xchg add shrd call arpl aad mull push or test (bad) push xor and adc adc movsb sub cmp push xlat repz (bad) xor sbb imul fcoms or repnz sub addl push and sarl enter mov out ja sbb lahf inc lret adc scas movsb pcmpeqd bswap (bad) or mov inc pushf pop inc insl test cmp add and es mov mov (bad) fwait dec popf adc jle jae mov mov (bad) sub (bad) and mov lret mov int3 outsl adc stc js mul insb and inc pop cmp (bad) inc jecxz dec jne jmp clc aam aam scas jge insl or (bad) push hlt cmc inc jb or or cmp shl xchg dec ljmp cmp shr movhps (bad) cmp push icebp jnp inc xchg daa dec and imul ss cmp pushf xor and fisttpll out add in fbstp aam push sbb scas fs cmp ret jb cmp dec inc js and je push sub jnp in push div inc pop int3 fildl popf jns and repz or or sbb out addr16 sub leave mov int3 sub ljmp push test xchg sbb cli push mov mov push push inc rclb insl xor push xorl fwait mov sarl and (bad) (bad) cli pop cmp add les or ja mov lcall imul (bad) jmp (bad) fstps adc cwtl jg ror imul cltd insb in xor movsl sub test out add jmp (bad) xor in mov stos add mov push pop cmpsb lret push lcall mov mov dec fsubrs dec jl sbb cwtl push or shl inc stc out xlat push ret cs lds xchg pushf jp jne rcrl xor adc or in pxor add dec add std pop sbb push (bad) push data16 jge pop jne add xchg jmp cmpsb jge dec jge (bad) cmp test xor mov data16 pop movsl mov icebp pop call mov je dec (bad) or or mov mov adc dec cltd jo dec mov mov fstpt mov pop mov imul sahf pop shl xchg aaa aam xor adc lahf fidivrl xlat test bswap into pop dec xchg call (bad) ja adc lret leave fistpll inc mov sahf int3 or inc pusha pop aas pop adc sbb bound push stos cltd loop cs cmp jne in in bound lahf pop mov ret in mov cmp lea adc mov mov arpl fnsave (bad) inc jbe loop xchg stc fildl add ficoml test fidiv sbb inc pop pop (bad) mov imul xor jns xor sbb psrld fdivrl fiadd and adc les jecxz adc mov xchg stos int3 adc (bad) addr16 out lahf mov fnop or xchg hlt push pop or inc adc sub cmp xchg mov add mov xchg sbb mov jnp push dec stc rcl sbb out outsl ds and nop icebp mov std xlat pop adc xorb adc stos icebp jle sbb mov dec aas and xchg jle mov push inc rcrb out mov cltd pop orl aad mov rol sti fisubr in popf mov mov pop lods adc das jno jne cmc push jae repz mov mov sbb pop dec (bad) shrl (bad) cld sarl cmpsl push in pop lds ds test inc rcr cmp cwtl lcall jmp mov ja outsb jnp mov test push cmp out pop pusha mov jns mov push shrb les stc push out outsl test lods add adc jnp mov sbb cmp mov mov jge in fiaddl push popf sbb das cmp shlb dec cmp cmp xor jecxz adc jae imul stos movsl lret jmp repz daa jnp lock mov mov out push imul adcb lret clc hlt pop mov outsb pop cmp pop (bad) cmp add (bad) pop cmp sub imul mov cmp call fild dec stos xor ss (bad) ffree xor js fimul sbb lea aad pop xchg test or shrb fisubrl dec je jmp test sub pop pop dec or pop xor xor fwait (bad) xchg out mov imul mov (bad) pop pop mov in cltd and mov push aaa push jae (bad) icebp (bad) hlt pop pop fs and mov add enter adc in adc cmp cmpsl xor fdivs into jecxz xor mov adc daa dec lock jnp push xchg mov push cmp mov lret xor gs push sbb ds xchg in imull inc xor hlt and inc daa inc dec rol mov cmpsl (bad) push test je inc add cli rcrl sub or jp scas pop fildll rol mov pop stos cmp sbb repz in mov lds mov (bad) cli lods rcrb scas xor and jbe das lods adc cs fwait into mov or mov sbb and call xor mov dec xchg jl out ja icebp addr16 lods pop jge inc mov sub sbb adc sub arpl mov (bad) data16 (bad) roll xor push push aaa arpl pop xor imulb jae cmp dec and lret jle fidivrl cmc into ds mov xor enter pop xchg dec cli outsb mov test popa out stc mov mov or mov cwtl aad pop dec push mov pop push insl pop lret sbb mov pop pop scas inc add cmc push enter mov (bad) bound fdivr dec mov aam packsswb inc sti ja lds xchg push fnstsw lods sbb adc std loop xchg das ret add cwtl test call mov adc scas jo sub fcompl fistl stc stos sub adc ror lret pop std test pop dec cli cld outsl int3 mov (bad) mov push gs cmc cmp sarb leave inc push cmp fs fsubl in data16 and sub test outsb mov stos rcrl sbb xlat lahf imul cld cmp lahf mov in (bad) (bad) mov xor lods stos and push outsb mov jae mov mov lods xchg lcall mov or cld mov pop mov mov dec mov jecxz jle (bad) adc cmp fadds jl jg cld jmp add out mov fstps mov mov sub ret insb dec sbb pop jmp popa in cmp (bad) xchg out and xchg jnp sub (bad) data16 xor inc inc mov mov jns nop dec cmpsl mov lods int3 rolb int3 cld push or push cmpsl aam ja in xlat mov popa sahf loope sub les cmp cs push jne (bad) mov inc pop jns push pop dec mov scas push mov mov mov sub test dec mov add stos sbb lods mov out stc outsl add pop lods es in pop mov mov inc xchg scas xchg clc scas les pop fistp aad jmp cltd imul outsl add out imul xchg add cs mov mov (bad) dec loopne sarb jg incl or adc jg lock out add add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add pusha outsb rolb add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push pop inc in rolb (bad) icebp rcr shr je xchg rcl mov cmp fldl je xor insb jae into jmp mov lock cld add xchg sbb insb (bad) jne imul in pushf ja fnstsw sbb cld inc call loopne inc mov jbe jb xchg jno outsl cmp (bad) jo pop mov das xor bnd sbb call push mov and int test adc mov jne lcall pop imul or ret aad ds mov push cmc sub ljmp push movsl aam das pop cmp add in sub lods cltd leave ret add (bad) call aam jecxz mov xor test jg sbb jb out pop adc enter or js pop out mov jne,pt pop add sub pusha add les aas ljmp jmp pop gs std sbb push mov mov popf dec mov add cmp loope dec test add push in jae pop jne in mov dec hlt pop loope and fiadd jg sbb sub or jp loop ds dec jbe push mov repnz sbb out ja das push mov or es dec inc pop clc pop pop mov inc scas es pushf cli push pop mov jg mov or and jb push sti xor in dec inc adc mov lret mov lods imul es sbb adc repnz scas inc bound fistpl loop imul shrb shl jp popa addr16 pushf js pop repz mov outsb (bad) jae shrl pop jns adcb imul cmp fadd movsl xchg daa shll inc push ljmp xchg je cld jle inc push inc mov leave jle in pop adc pop out sub cmp int xor in out test shlb xchg xor idivl pusha ljmp inc mov in stos push in pop ja push and test aaa insl out lea mov xchg insl adc popa outsb push sbb xor int3 dec into mov loop xchg push mov imul jbe sahf js imul pop das test adc sub dec (bad) mov outsb rolb cli mov js jmp sub sub cmc repz jecxz adcl cmpsl add xor inc pop sub out enter jmp pop fstps rcrb rorl pusha cmc pop popf imul dec clc lcall cmp adc mov jecxz sub pop divb adc cmpsb jnp cmp mov cmpsb push mov (bad) mov and mov rorl jmp and aaa test decl fwait push popf jl mov ds or jge dec cltd repz pushf sti xor xchg dec ret orps mov insb (bad) push lcall push scas add sub mov or xchg xchg dec xchg rclb sbb cmp xor sahf aaa stc add ja das das data16 test or adc cld lret mov mov outsb mov fistp xlat push std pop mov push cltd sub xor dec add arpl push pop insb arpl or add loop int jmp movsb jno mov mov pop cltd popa mov inc mov int3 mov adc jbe lret inc push or shlb es imulb xchg xor push cmpsl ret or xorb (bad) je mov pop loope subb add insb out ficoml adc cs pushl (bad) int jmp jmp and in movsl jb shr or das jg mov cmp cmp jbe sbb dec cmp in insl int cmp pop sbb mov (bad) xor pop pop jb xchg adc pop xor push pushf push addr16 fbld jbe mov sbb cli jbe mov pop mov cltd pop cmp pop cs fldt fnstenv or (bad) repz bound imul push xchg lahf push jmp (bad) sbb outsb leave jge mov in movsl or (bad) xchg xorl jg (bad) repnz xchg enter jne and popf adc cmp in pop lea inc mov addr16 jne xor mov dec pop mov mov lret xchg mul dec cmc jns push cmpsl jg ds pop inc sub cmp idivl cmpsl xchg jecxz popl mov jge cwtl adc add inc cmp inc mov outsl jecxz data16 ja or push mov enter ss aas xor mov jnp mov bound shr ror mov dec cmp bound hlt cmp jo rcl subl inc and or (bad) mov lret (bad) addr16 push shrl lret fidivrl mov mov (bad) ja pushf rolb js enter jbe adc inc xchg jle dec cmpsb xchg call push ret (bad) pop adc into push (bad) es outsl (bad) sub xor xchg cmp (bad) hlt sarb push jle add aaa or std push lods pop je dec jg xor cli adc and (bad) aas addr16 (bad) and aam aas loope das inc xchg pop sub push popf sub cli ret push mov pop xchg mov jae dec xchg dec pop loopne dec movsl arpl jle in mov jge mov aam into repnz pop pop (bad) sbb pop fdivr cmp adc ficoml es fdivr fsubs mov xor pop in push cmc push or hlt (bad) jl mov mov pop lret sub inc mov lock adc sbb jecxz in in bound icebp rcrb adc in lea fwait daa stc mov cmp jle dec xchg in xor push pop scas (bad) sahf iret pop jo sub dec stos adc fist adc adc insb fisttpl jno push pop push push mov push mov pusha lcall pop lea mov out push lcall pop push mov arpl cmp aam ret push std ja imul xchg or push sub or add and inc mov pusha vpsrad cld jo push sub push aad popa movsl xlat in (bad) push rol jbe rol in scas pop add aas addb loop divl inc adc fnop test jb test mov loop mov fstl mov out sbb icebp xchg cld or shrb cmp pop outsl adc dec out (bad) xlat repnz inc inc cli (bad) sub mov cmc xchg cs out pop add xchg imul aaa pop sub ja outsl popf sub lock out shlb enter and push pop scas inc pop out stc popf push fdivrl shll (bad) adc add repnz xor int inc lcall mov aad sbb (bad) cltd ljmp cmpsb push and movsb mov mov sti add lcall mov dec popa pushf ret pop fwait scas aaa xor jb outsb sub int and jle loop hlt cs mov fbstp sub dec stc pusha bound xlat sbb into test mov inc sbb movsb xchg jle dec pop jno (bad) ja das jp adc into int mov idivl test mov aam add movsb imul jo sbb mov jns in cld shlb dec cmc mov ds inc mov out sub push add int cmpsb inc sbb pop xchg push add or and outsl rcrb or pop push inc cwtl popf add icebp ja adc clc (bad) (bad) jmp (bad) xor jg xor je mov mov shld test stos ret dec xor stc mov jo fstpl es mov cmpsl lcall (bad) lret or or sarl add mov repnz and iret mov mov sub jo push mov ss xor jmp push lock mov fidivr jmp movsl sar test push add mov push adcb (bad) stc mov daa repnz mov and hlt fildl into mov mov in sub in jns lods outsl xor int3 inc ficom cmp cmp pop out pushf popf push inc lea xor sbb mov scas add push pop xor nop xlat push fcomp addl jne lds mov cs pop gs and leave addr16 (bad) out (bad) pop popf shr jo push push pop inc test xor add and int3 mov mov adc add sti es mov insl sub cmc cs xor adc sbb add mov add (bad) xchg jg imul xchg scas outsb je dec mov sbb fdivrl sub aad mov lods arpl ret and imul cmc (bad) inc xchg int adc jge (bad) aad xchg or mov mov xor aad mov das dec xchg loope mov sub cltd sbb xor pop ljmp cmpsl jne mov cmp sbb push or (bad) xor icebp daa les jno sahf ss and cmp js mov sub rcrb pop dec jno pop test lock fcomps push xor ficomp mov mov in bound ret xorl cltd out cmpsl insl das push in sbb inc fnstenv fldcw ljmp outsb fs jmp daa sub orl add add mov pop and sbb dec fsubrl test lock and scas (bad) adc lock cmp test ret outsb xor inc je push cmpsb jne in out push notl push mov mov adc outsl icebp xchg scas (bad) jl cmp mov mov mov cmp call jg adc xchg dec ds scas icebp aas loop dec mov or push test jae out mov sub and scas push mov xchg mov pop xor repz andb imul sub in pop add and int3 (bad) cmpsb repz mov xor fldl js lcall push mov push xor sub (bad) fistpl cmpsb pop xchg pop push test jmp add dec cmp fmull push fwait mov mov nop inc sar stc adc inc out je mov and mov movsl fidivl test push inc daa daa cld iret sbbb mov sti sub pop push stos sarl loop xchg xchg fwait sbb adc xchg mov pop js iret mov or cmc lock and in jns xchg mov popa int cmp mov mov pop ret lods (bad) (bad) mov mov jge sub out cwtl int3 ret lds add pop sub or lds dec pop inc insb out mov push cli dec mov push mov jge inc jmp ss dec aas sub push or or dec jne popf mov push out stc lock mov jl jp inc data16 push daa hlt xor out lcall lret push inc sbb popf mov inc gs and roll push in and xlat cmp lock cli mov jbe xchg mov mov int3 in push rolb add stc jmp adc jno adc into test pop sub add mov mov xchg sbb fildl lock rol je or ljmp jb ret in or mov push idivl (bad) xchg mov cmp add and ficomp enter cmp in std stc push sbb sub mov test add stos inc cmp sub aaa cmpsl push lds sti pop outsl add jmp jbe add adcl out test xchg (bad) aad xlat rcrb icebp or or mov imul fldl pop mov jb jnp cmp pop loop dec xchg push clc rcrb imul fcmovbe fcompl sbb pop adc out aad into xor scas ds jno xchg (bad) (bad) loope lock mov pop add xor fisub shrb lahf sub xchg sub stc sbb xor add dec scas xor fcomps (bad) jo ljmp bound neg sub outsb lret enter icebp xor pop test jae (bad) (bad) in mov aaa gs dec pop ret add xchg stc or xlat jge cmp shrl adc lods into or adc pop mov jbe (bad) int3 add dec arpl cmp and mov out ret lods outsb rcr hlt aaa scas imul xchg mov mov xor je mov mov (bad) cmp pop xchg outsl mov fisub jmp add insb add pop xlat xchg mov cmpsb xchg xchg enter dec and sbb push mov pop or pusha ja lcall add movsb xchg negb push popa mov push sub dec and ds outsb push iret sub and cmc lcall jb cmp or sub js pop cltd dec mov pop sbb xlat adc cmc pusha test sub loope push out mov jno dec dec stos nop movsb lret shl mov cmp push popa ja (bad) repz mov pop jb cwtl lock lret cmc fistl pop and xchg dec insl push xlat push and data16 daa push int out cli pop fldt in movsb add and aam into movb sbb hlt mov push jecxz mov jbe adc rcr mov jmp ret out out xchg adc lods int3 cmp pop loope mov pop mov pop mov xchg xchg lods jg outsb (bad) fadd and fsubp inc or fcomps push loopne add jb cmp cmp xor pop inc lods and or (bad) std (bad) cmp cmpb (bad) cmc dec loopne sarb jg incl or adc aas pop clc pop out out inc sbb add add dec inc scas inc pusha (bad) or push stos inc dec cmp pop pop dec sub cmpsl dec decl (bad) dec ret inc repz push inc out jmp movsl pop inc fwait sti mov jno cmpsl dec adc cmpsl dec inc mov dec inc (bad) call (bad) idiv stc mov lock int (bad) push jecxz (bad) leave stc xchg ret lock dec (bad) pop jecxz pop adc jne jb inc imul sbb sbb sbb pop scas add std stc std mov (bad) sti out clc out (bad) out rol imul lret lea ja ja pop jg fadds fwait lcall xchg adcb add add add sub sbb or dec push xchg or dec pop cmp imul pusha sbb and pop pop lret (bad) outsb adc jbe insl in stos sub pop xor inc and or cmpsl imul repz std adc push mov in cld stos pushf lret jge out lahf sbb in xlat add mov dec iret cwtl xchg (bad) cltd sub mov scas fdivr inc testl jl add xor xchg call push sbb ret cmp pop les test mov icebp rol test pop pushf and xchg test and mov inc push lods push add in addr16 gs cmpsl inc fistp ficompl ret jb (bad) (bad) xlat mov repnz pop inc xlat rcll flds fmulp lds lret dec stc ret out std movsb jecxz adc or (bad) fcmovnu xlat leave ret lret push call inc in dec sbb sub mov cld aad pop arpl inc fistp pop mov ret jae xor cltd push jmp inc iret add sete jecxz lea add dec add inc mov add mov add add lret add add or add add cmpsb xlat add push mov add daa add mov test add add (bad) stos add pop test add push add cwtl mov add pop add cltd or add add cmpsb lds add mov add add movsl cmc add je add (bad) xchg add inc mov add add leave lock jo add cmp add fcomi add stos testl add add add fwait add leave and add add xorb jp add mov add add sub add sbb and add xor add add jmp xor add add sbb xchg add add fwait push add xor add xlat aad add add pushl add dec js add add test add sbb add mov add add add sbb add add movsb popl add pop add (bad) mov add dec add pop pop add jg add arpl add jne add ret rolb add add add test add popa jbe add adc add cmp add inc add xchg jne add aad add movsl add mov add insl fildl add js add xchg add sbb push add or add mov add add sahf and add add sub dec add adc sbb add int3 add arpl adc add add add xchg sbb add xor leave add (bad) movl add push add cltd add cmpsl aad add and add xchg add pop add test fildl add dec add push mov add jnp add mov add fstps add ret sbb add xor add mov pop add icebp sub add daa add into rolb add mov add stos stc add push jmp add or add add fldl add outsb incl add out add fwait add jg add movsb fwait add iret inc add out add iret lret add and add mov add or add leave sub add movl add add pop xor add arpl add roll add cmp add mov add add sub add std xchg add adc add cmc aad add add mov add sarl add add fldenv adc pop push mov dec enter and xchg movsl mov daa or mov (bad) xchg xlat movsl push popl (bad) or pop cmp aaa cmp jo (bad) dec sbb dec mov (bad) js mov mov bound repz in aas add cltd outsb std jo mov stc notb cmp out pop in jl repnz cs in fmulp cmp jecxz idivb cltd sbb jmp jge mov sti sub pushf pop leave inc aam insb daa out pop xchg movsl loop out bound mov xlat pop add jne dec push dec paddd outsb and push (bad) (bad) out xor or cltd pop (bad) lea sub (bad) push mov (bad) repz fld push pop mov cmp das dec cmc lret xchg cmp cmp mov test sbb sub add add pop cltd packsswb rcl nop rorl outsl xchg sbb int3 frstor adc loopne xor mov or pop outsb xor scas push (bad) hlt push stc loopne cmp xchg pop daa push fdivrp test inc rolb fisubl repz sub xlat xchg jle movsl fdiv xorl mov xchg dec es sahf ret ljmp mov mov in ret ljmp mov push mov sbbl popf ljmp sub test jle jb dec push test pusha xor cltd mov arpl cmp decl int3 adc pop ljmp mov sbb fsub pop orl ss sub test push fsubrs lret (bad) cld out sahf mov outsl mov jo jg sub push push imul and jmp xchg addb xchg mov cli add and sahf mov sarl cs xchg outsb frstor adcl cmc les inc gs push mov loope lods cmp cltd rorl mov mov sub sub stos pop lahf mov popa push pop or mov cmpsb fildll iretw nop xlat lods imul fcompl sub jp cmpsl js mov xchg rolb outsl pushf out kmovw mov jl push and jae out cmp (bad) jge in out outsl jle test (bad) jl insb add ret movsl inc jge repz ss fwait mov inc aas or jecxz add in (bad) daa xchg fnstsw sub ret clc out add sub nop fidivl sahf call test dec pop mov lret fcompl add sbb xchg xchg rolb aad cli dec sub sub nop mov les fidivrl aaa enter fsub jbe dec add test mov aad int adc xor punpckldq jecxz inc jmp orl movsb jo sbb jle loop lock xchg hlt sub ja add dec dec sub jg jae or jnp je (bad) aam cmpb in ljmp mov jno imulb fisubr inc push and and fs mov mov sub push ja lods das mov fisttpl and xchg sub adc xchg fdivrs xchg jl cmp (bad) loopne test popf stos daa lret fstpt aaa fisubl mov into movsb out mov call (bad) hlt popf out inc cmp jle rorb (bad) lods jle imul fxch adc cmp add mov lds jle sahf push fildll andb push imul int inc bound jge mov add xchg out aad pushf clc outsb inc pushl (bad) fdivl cli jns cmp push fstps call es mov ljmp jno daa imul pop (bad) ficoml idivb ret je popf lret dec inc and insb ja,pt push shr pop adc (bad) fs pop sub mov and mov dec icebp out mov lcall sbb mov out ja sar push loope xchg js sbb push cli jb aad aad mov fscale insb dec inc xor dec test and bound inc dec daa mov add ret inc pushf das hlt jle xor popf and xchg or fwait gs pop insl mov sub loop xor jns jnp add mov jge sub push stos (bad) dec inc mov pop mov or dec in ficoml fnstcw sbb out lods ja test fabs icebp sub lods mov and add pop add faddl fs add jg lahf sahf ss pop sbb stc cltd addr16 ss xor cld (bad) push dec mov jl rorb jle push cmp in test cmp inc jne fiaddl ljmp xor imul sbb movsb fnop mov lcall push sti (bad) xor mov mov inc fistl lea push cld stc jno das mov outsl cmpsb outsl inc bsf dec adc push fst stos sub and (bad) jp nop sub imul out shll fidiv jle imul push cmp fldl arpl xor dec aad mov lcall xchg pop mov shl lret inc jb imul add iret ja fs pop aas cld push add cwtl addl jl fsubrl jl cmpsb jmp pushf nop test xlat and sbb mov or add imulb nop jnp,pt mov jle sti scas sahf mov jno xchg xchg out or xor xchg xchg out add mov mov or mov lcall outsb sub sti cmp loopne push sbb aas and push inc adc push ror mov imul mov jae xchg xor mov push movsl push adcb jl pop fldenv adc push andb pop stos mov push addr16 repnz mov mov add mov mov arpl fsin sti adc jns inc and sub int3 xor push mov out repz push in int3 mul stc aam inc notl fdiv pop outsl adc scas fwait cmp jnp out push sbb (bad) dec lret jl pushaw es pusha decl aas outsl icebp xor or inc push repnz dec sub fisttpl mov adc jmp enter mov cmp pop dec das push imul ss outsl sbb sub mov imul mov addr16 sbb in push cmp or insl das loopne lods ret loopne or mov dec and xor cmp jne xchg add in adc ljmp addr16 jmp stos or xor inc orl sub jmp mov push adc push push ja adc int3 jecxz push orl adc mov fcompl rcll test add pop push jns dec movsb insb or sbb cmpl hlt xchg xchg js fbld lds or daa xchg push sub andl out cmp xlat fs cwtl lea jae xchg lock shll sub sti inc push cltd sbb jns sub sub mov dec dec xchg imul sbb enter fsub fs roll inc stc std push es int sub in inc lret cmpsb mov in pop out popl ja mov rol push jns sub sbb mov test aas mov mov sub and cmpsl dec je pop cmp lods pop sub movl cmp xlat mov jns cmpsl stc cmp pop (bad) jo push lds adc popa into xor fistp inc mov clc sbb ljmp ja dec fwait sub mov fwait cmp stos adcl lods push mov aas mov scas test inc mov ja movups adc repz dec inc test call adc mov xchg jnp lds nop sub pop dec mov and je loop lods loopne dec xchg xchg sbb lret and (bad) fcompl xchg es push sti hlt lret pop mov push push sub or std cmpsl in jno push cmp inc inc fldl (bad) sti dec mov cmc sbb pop sbb jge ret pop vcvtsd2si test fucomi pushf xchg lcall xchg stos cmp std add pop ret and jl (bad) ds (bad) xchg stos loope pop int cmp jae pop mov adc sub inc ret xchg dec insb pop sub pop test inc push repnz arpl mov mov test mov and (bad) aad pop (bad) mov movsb cli push movsb stos fs ficoml popf cwtl mov and arpl jecxz lret sub in outsl bound or adc sub imul cmpl pop popa in sbb xchg pop fisubr clc xchg enter rorb clc inc and fnstenv outsb push pushf fcomps sbb pop xchg dec mov mov (bad) (bad) das dec ret pushf fs push xor fsubrs lcall fsubr mov stc pop dec jle repz pop mov jb insb xor mov pop jp ret (bad) adc sti push imul ljmp sbb push cmp inc pushw imul ss cmc test jno mov fwait scas aam jne inc test clc in rolb jmp push dec lcall mov insl push ljmp push push repz insl imul ficoml mov enter fimul xchg push xchg inc push add roll xor test stos loope jb aad adc rcll out pop xor pusha jge hlt into cmp into or push dec mov aaa js sbb rcrb push push fbstp mov mov lock xor (bad) js jb mov in (bad) into and cmp aam or inc movsb xor jb mov in dec dec and test lret jle repnz and pop repz lods sbb daa outsl out inc sbb jno push xchg pop lcall div ja rcr push lret nop or xor mov in mov xchg scas cmp enter xchg repnz outsb push hlt cwtl (bad) cs lahf int lea pop inc js jae stc mov (bad) xchg lock mov mov les popf lods scas mov into cmp fnstenv std cwtl adc int3 fsubs sub fildl cmp shll or hlt xor mov scas pushf adc or jg out lret leave lret and push stos mov pop sbb movsb pop dec scas sahf fiaddl add (bad) fild out fiadd pushf pop aam loope sti sarl push hlt scas loope testb push insl std stc add add sbb das fcoms stos ret cmp xchg data16 pop out mov xor insl sbb sbb push cmp adc loopne divb xchg test xchg ja or dec pop lods sbb mov mov mov lods and out mov pop into dec das adc mov inc inc nop xchg sbb bound jno push js faddp push pop and (bad) ds mov mov push fwait pop div mov (bad) xor cmp xor jmp mov inc mov xor sub (bad) fnstsw fnop pop mov mov ja jp frstor pop push push cmp xchg add mov xor sbb jae (bad) dec aaa test cmp out aad lods or pop jp xchg mov aad cmp xchg lds adc ss jne mov push push sbb jno and ret add and xchg std pop rol push lock int push ds pop (bad) int push jl jp mov lret adc cmp mov push lcall sbb sbb lea sub into lods (bad) sbb mov xchg add shrb mov pop xor imul fs mov lods push bound inc sbb imul mov add add pusha pop push pop mov xchg test xchg ljmp xor leave lret add push push das pop jae adc das call in jp test or (bad) dec (bad) mov insl mov mov add sbb aad mov lahf mov jae hlt out xor loop cwtl lea insb xor sbb mov mov mov adc inc insl inc std add mov (bad) stc push in ja jb pop sub sbb fdivl loope dec cld test jg push xchg jns or fisubl pushf jg std gs pop std lds js sub out xchg push (bad) pop xchg fldt cmpsb xchg pmaddwd gs push lcall sbb into cmp loopne cmp int mov xor jle (bad) int xor jno and subb inc xor push dec loop pop adc dec lcall cmp outsl aad xor es cmc jle aas dec mov sbb sub xor push sti or mul pop or (bad) std orl std pop mov cmpsb and andl ljmp mov shrl push xor jmp dec pop ljmp jmp fidiv outsl jbe xchg mov (bad) cmc mov outsl cmp mov shll xlat cmp inc cmp mov adc addr16 inc pop rolb jae ret mov lret dec xor stos push sbb mov aaa and popf jno adc xchg mov jl push dec jp add cmpsl mov daa addr16 sbb nop in sahf in mov call dec mov or lahf insl mov loope or mov imul mov fsts push je stos in test sbb dec cmp imul enter repnz iret cmc leave pop mov xor (bad) xchg stc stos das adc xchg adc ret lahf lods pop push out push mov jb int3 mov inc dec rol in jle mov push fmul sbb ljmp lret adc lret fildll loope push (bad) xchg push pop es push out ret ss fsubs sbb (bad) jmp add or jbe and lcall pop mov jmp pop or pop (bad) hlt loope mov dec out outsl je cmp movsl movsl dec cmp fnsave jge sub lods in scas cmpsl cmp fsubr addr16 je (bad) repnz subb or sub dec xor jge fidivrl nop sbb std int pop scas fisubl xchg sbb scas or jmp sub pop mov ret in js aad into out std mov adc orl and fbld rolb (bad) insb cmp test cwtl shlb add mov pop xchg jo rcrl shlb inc or insl iret loop xor out sbb ss hlt fdivs in or pop sti dec jle and xchg (bad) (bad) lret xor mov ss (bad) scas xlat pop xchg cltd sbb sbb (bad) insb pop (bad) shrb and daa outsb jp xchg cmp dec mov and gs xor iret xor pop dec into push pop icebp stos (bad) hlt stos sbb push dec dec sub lret mov inc enter push mov arpl mov pop std leave stos fcoml arpl cs lods inc js ss jmp adc test pop repnz rclb xchg aam push enter dec (bad) mov (bad) lcall inc sbb (bad) aad aaa push sbb cmp pop add jbe mov and stc mov into mov fwait jge xor sub mov sbb adc jge and mov sub sbb (bad) aaa imul sub xchg sti negb fidivr add add and popf fmuls add adc mov and mov jle mov adc (bad) popf ret xor out pop pop sub pop jl loopne inc push movsb xor xor aam jge cwtl cmc inc or xor xor pop (bad) jnp or or mov sbb call or mov lret dec inc jl int3 stos fisubr popa (bad) push inc add pop cmp push outsb inc xchg pop addl rcr stos (bad) mov lret jne in cmp jg cmp sahf cmp add fisttp or mov mov mov xor mov fsubs aas (bad) mov jbe loopne nop rcrb stos adc cmp aam adc cmp iret adc mov cwtl dec out ljmp (bad) jo inc data16 adc sub jle sub sbb dec add test roll mov dec jecxz pop xchg mov jge jl out jecxz lods mov nop jns jae dec das jo push dec dec or mov aas iret xchg mov sbb mov imul pop mov pop cwtl and test movsl ret xor inc cmp push mov push (bad) or sbb jl (bad) jno stos and es nop addr16 cltd cwtl mov gs mov jns xchg xchg add jmp cmpsl or or inc sub rol ljmp popl (bad) sbb and xor lret cmp inc pop or cld mov loope inc rol ljmp cmp mov pop lds aaa xor xchg (bad) ficom iret jb jecxz pushf push or loope jnp cmpsl push cli or mov in pop cmp mov daa adc dec loop adc sub fdivrs gs xchg pusha add fs in test sub outsb addl jbe out inc aas add dec xchg fucomp pop hlt sahf xchg mov sbb ficomp mov daa cmp xorl int and inc mov jae mov cmpsb sbb mov stc enter std je rol rcll in out nop push out fldenv ja,pt jns into fldln2 ljmp lock test push add pop das and loopne test inc push loope mov xchg (bad) rorl fs ja mov in rcrb aas sub aam sub mov call mov int3 jmp xor cmp psllq sub int3 push adc pop push sub push xor jae lea aam xor inc push sbb loope push lret push push shrb cmp cmc pand push or cmp in push sti pushf mov mov jmp mov lock insb adcl adc fdivrp inc push les dec movsl xchg pop add push aad inc sub nop push mov stos ret xchg cmc inc or sbb or insb push sbb xlat dec movsl or fdivrp scas sub mov std mov lods (bad) adc jp mov pop or jmp push xor loopne adc rclb mov cmp add sub mov in pop es cmp addr16 add pop cltd mov jnp xchg sbb repnz scas inc mov insb jns pushl fwait (bad) sets sbb out mov loop add dec (bad) lea (bad) dec aad or je mov add mov or gs pop jl xlat ret addr16 sub lret lock scas loopne cmp or insb hlt js int3 push pusha ret mov dec dec mov inc bound shrb jmp cli mov call push cltd adc push inc sbb push icebp shrl insl sbb dec gs or push pop insb pop and (bad) xchg mov cmpsb add scas pop and cmpsb xor daa mov loopne sbb jne cmp orb rorl push dec cmp bound mov push xchg mov jae sbb sub mov xor call dec es push jnp mov push test incl sub fistp sbb loopne mov sbb stc cmp std addr16 mov inc push inc jns sbb (bad) (bad) pop iret dec add mov sbb mov std jbe pusha pushl pop sub mov das ja push mov sub sarb mov cmpsl loop adc pusha fs fsubr int dec and vmovdqu and dec aaa mov test inc ss enter push iret test fidivl outsl ret jp aad (bad) lods daa fisttp cmp or xor dec add or nop ljmp mov cmpsb out inc xchg push (bad) push mov adc sahf test insb xlat lock stos lods dec cmp mov int3 add jae adc and fcmovnbe adc add movsb je mov jmp adc pop imul ficompl outsl and aas jmp sti jnp int3 cltd (bad) fiadd or jne lret xchg xchg sbb int mov repz loope lock pop (bad) mov push cli enter int icebp push mov imul mov cmp test (bad) xor scas add std fld scas fwait cmp fwait lea sti fist repz call or xor out ljmp std in cmp xchg in inc sbb jns fwait aas or call jmp mov imul test in dec lock mov and jnp nop mov incb dec xor dec jno push sub sub push and mov dec jle jns pop dec daa add jp pusha in xchg int3 (bad) dec popf push adc jmp test lods movsl mov jno (bad) mov test fistpl ds inc cmp sub dec mov cmp pusha ja sbb mov mov pop push pop jne roll jecxz je jne and mov cmp fwait xchg mov and jae sbb (bad) je cld mov rol aas imul xor lock sbb mov out popa pop and mov aam daa mov in (bad) rolb adc cli js lock jbe out cld loop push pop js test or xchg iret stc lods jbe inc mov dec add inc scas xor into inc mov pop mov add add xchg mov int3 and xchg sahf aaa cs es rclb ja jno xor test mov lds adc xor inc cmp jnp dec cwtl test push adc mov jo xchg push and fmull cmp pusha jecxz adc (bad) lock mov out daa jne pop data16 inc inc sub (bad) sbb stos repnz jnp sbb xchg lds sub dec popf mov rcrb dec mov pop add jne jnp arpl push repz (bad) push sub dec sbb and int dec mov mov dec mov pop lods (bad) in jle mov mov pop fildl outsb xchg jmp aas sub fldenv shrl fs mov outsl jl inc iret test jle dec ja (bad) push cmpsb aad ret push xchg dec push adc cltd ss addr16 fwait add inc or into les dec shr mov movsb pop fs stos flds sub daa and stos sub (bad) rclb stc jmp pop push mov mov dec and and stc scas lret popl pop in cmp sub ret dec xor (bad) xchg and fist mov push pop mov xchg je pusha push cmp gs repnz dec cmp sub fiadd shll (bad) cli je push in (bad) cmc cmp mov icebp ret add repnz inc pusha add fcom adc loopne inc and mov pop in stos xchg xor negl test jp jle jmp jp insb jbe jp cmp sbb push dec mov adc adc adc call add push pop sbb adc adc cmpsb pop mov xchg add cli ret fisubrl out cmpsb inc cwtl orl pushf mov nop dec addr16 adc mov jl jge ret jp push cs outsl adc adc or sbb pop rcl sub iret mov mov adc dec push ljmp je xor pop mov icebp decl adc enter lret xor js mov aas pop and icebp lods les rclb add orl mov in dec and daa shl xor data16 xor sub hlt cmpsb rcrb pusha adc push cli mov sbb arpl in mov fildl int (bad) cmpsb jbe sbb sti cmp or fimul movsl sbb popa cmc data16 jns xchg xor inc in push cmp dec or mov adc lea mov push add and lock aas mov cmp lods inc inc pusha and mov adc mov std incb sbb add movsb ror fmull adc addb dec out loop cmp repz mov mov jg (bad) or adc push je and inc mov push cmc pop scas lds inc push sti mov fisub cmp ljmp ret and enter pop cmc leave js comiss aad xorl popaw repnz outsb aam out (bad) in or sub cmpsl push or (bad) fwait aam pop xlat arpl dec sub hlt xchg dec mov pop mov popf add jae movsl ds push pushf jg inc lret test xor rcll mov ret cli test rcrl mov notl pop cmpsl in out lcall clc push sbb add dec xchg push or jbe adc jnp repz fcmovnu push pusha push inc mov stc loop add inc and loope out outsl or addr16 cld js push lods and stos movsb jnp mov rol rclb cld pop push jge mov adc cmp inc hlt popa cmp inc mov in arpl add aam sub sub gs xor mov pushf xchg and aam test (bad) push push sub cs sub or or dec iret mov fsubrp jne,pt insb pusha mov sub ds sbb xor repnz jae push inc adc or xor xor mov sar sub test pop mov fistp (bad) enter les daa lahf imul xchg jne cli or repnz or dec mov sbb imul push fsubs outsl lds pop mov lods data16 notl lods and pop (bad) cmp daa loope dec jno cltd data16 pop sub js and leave jmp lcall lods test test mov cmp add enter cmp cmc xchg mov mov xchg sub arpl movsb push movsb imul stc insl jnp adcl aad or (bad) cmp fisubr mov mov mov cmp xchg mov pop insl in push enter add push cwtl std cli cs lods pushf stc jge inc cmp int3 push push cmp mov mov mov (bad) pusha call xor shlb loopne cmp in inc inc lea mov lock mov xor out cmpl fdivrl xlat loope adc fucom xor jmp dec dec cmp and add call adc aas cmc push mov xor imul lret sub es int3 add xchg xlat out cmpsb mov or (bad) stc sbb pusha fidivl iret sbb lahf and fbld adc cmp into adc mov push xlat mov mov xor ja cwtl loopne mov xor inc pop cmovle mov mov test mov or sahf adc fwait pop or (bad) mov push inc push aas pop push add pop or lahf sbb loop sahf cltd inc pop or fstpt movsb test lret xor (bad) cmp jle and add dec iret leave xchg sarl mov in jp or les inc dec int and and lods sub lret jle es dec fisubl adc dec add jne fildll cltd flds movsb insl add cmp push in mov aaa int mov insb hlt stos retw lods in stc ret pop ja out pushf stos lds xor jge or inc push sarl jne loop adc out rcr xor mov mov cltd mov pop push mov jo ljmp jno pop sbb outsl pop fildll or fidivrl push dec sbb ja sub and jo in pop movsb ret sub fwait aaa push pop stos mov jle adc jg cld sub popf sbb or inc icebp fnstenv mov jnp enter mov jnp lea aaa sub or aas leave adc dec std adc sbb cltd xchg popa mov fisubl sahf pop push adc mov pusha or and mov rorl data16 les sub daa push (bad) (bad) iret mov push sub sbb ret pusha inc mov leave xchg mov inc inc and call xchg pop push mov mov orps xchg insb subb cmp ds ss jno nop js add pop jno aaa adc enter test mov xchg fcmovbe fcmove pop pop lods movsb push mov cld clc push stos pop xor push pusha cs arpl clc subps and mov insb daa jb sub mov cltd cmp dec mov sbb aas jb xchg test push pusha cmc call je sub mov in test repz sti in (bad) sub push pop pop inc mov in (bad) add mov (bad) scas aam xor sbb cmp (bad) pop outsl and outsl stc inc fildll (bad) jb add and js or add cmp mov pushf mov mov mov cmpsl cmc adc negb mov push pop inc xchg imull test in out adc mov lret push out ret push in sbb xor sbbl insb cltd into (bad) mov xor jb and xchg fiadd stos dec in lcall or ja mov mov aas das aad add xlat push jne (bad) pop mov (bad) aad int3 jb imulb mov or push out pop or lea mov mov test imul and aam lods or push dec push in imul xchg push popa add jno test or sbbl negl fiaddl jne movl cwtl sti in mov ret sbb push shll mov arpl sbb push lods push mov fiadd adc push cmp imul loop push pop in sahf mov cltd popa adc mov inc sbb (bad) fiadd movl cmc aaa dec xor mov cmp adc inc aas (bad) out add scas js mov pop push xchg cmpsb lret jecxz das inc and add inc and and cmp push jnp add adc mov bound mov out loope pop enter lds add jae xor dec pop cmp roll std mov xchg adc jl sub inc sub cmp icebp push cld xor push negl xchg xor and add inc out nop or inc int3 mov jge mov arpl fidiv outsb gs arpl push mov dec mov icebp add cmp inc adc stos dec mov dec (bad) ret jno xchg dec jne inc popf test mov test addr16 mov js imul rcll leave repnz cli sub sub mov cwtl fdivr aad lcall fldl xor dec (bad) xchg popa push and nop cmp add mov dec pop and push jg cmp push mov xchg fcomip push pushf jecxz jne cwtl test push or inc (bad) orps scas jmp dec and mov aas mov ds movsl adc adc push js icebp leave sbb mov (bad) jns dec mov cmc mov js insl int3 test jecxz nop hlt inc and leave jge xchg dec lahf pop mov dec cmpsb and inc jmp mov cmpl jg mov cli mov mov push jno in lret lcall pop test test sub clc push inc fild cmp ds shufps fwait lret (bad) pop fimul xchg out fimull mov fsubrs push inc xchg cmp popf mov xchg jno stos sbbb cmp and mov cli pop ret movsl cmp popf out and inc adc mov add shlb cmp jecxz daa jp loopne add push (bad) mov add xchg push repz cmpsb adc jl in in mov inc rclb pop call mov outsl adc lahf div cmp hlt dec xor fstl mov push loop shrl stc push xorl je repz mov cmp roll fistp and xchg mov aaa les sar fnstcw fisubr loopne push pushl add test rorb aas lds mov mov inc sti inc dec pop pop call push aas or lea pop add or inc test dec loopne pop je je sub divb das pop bound ds mov or int3 cmp cs lret test mov mov test lds int add dec mov xlat sub aad xor popf mov popf das inc inc jmp push nop xchg xchg popf or scas movsb xor or ret mov or in (bad) int push lods push xor fisttp popf add arpl inc jno sti clc fwait jecxz push mov rep in icebp push enter jno lret cmpsl aas fistl (bad) pushl dec aas mov arpl add push xor into stos cwtl pushf mov ds jb in sbb lret cmp ljmp jmp cmp pop mov xor std shrl stos add aad push cmpsb outsl scas pusha jae (bad) or mov mov lret push push jb in and cwtl add andb fstl pop adc mov pop inc lret jns out out (bad) (bad) aaa scas out jecxz ljmp gs lahf push sbb dec repz sub movsb cmp hlt jns in js sbb add xorl (bad) pop into xor imul (bad) xchg cmp cmp and dec or push pop dec pop mov jp mov mov fnstsw das aam loopne loop inc loopne pop imul dec or sbb jno mov aas xchg (bad) adc cltd push pop push leave aaa aad cmp xchg lods xor jecxz pop cmc inc and jae cmp sub push push je mov fdivr js ffreep or adc xchg (bad) mov mov push inc daa pop cmp inc lea or sub dec pop out pushf mov mov movb jns xor add mov pushl std cmp push mov call js sub das mov out in sub ja pop rorb or daa ds lahf sub push sbb iret fdivs cltd sub xchg sbb cltd repnz hlt cmpsb movsl (bad) hlt push dec pop jmp leave inc xor adc call mov cmp xor or push aas add insl mov xor (bad) adc scas loop (bad) (bad) cmp je or rorb leave lcall sti lret mov fildll nop inc mov in sti sbb inc mov jb int3 mov jne pop (bad) push data16 pop and rolb out cmp cmp xchg fsubl addr16 sbb inc xor mov xchg (bad) das adc sbb insb ss pop lret pop inc push inc jge stc lahf or adc dec stos and push (bad) add fcoml orb out adc ret xchg pop stos cmpl inc pop enter cmc and je sub push sbb mov call flds fwait pop adc sbb bound jbe test stos push adcb mov ljmp xchg aas sbb dec xchg pop cld mov insl std stc sub mov push xchg inc push xchg dec pop arpl dec adc and dec push mov ret rol mov pop mov or cmpsl loopne movsb sub push xchg js inc test dec push aaa pop jnp dec inc xor cli fisubrl (bad) jbe test or cmp jbe pop iret xor (bad) loopne inc sub into stc jo (bad) shr mov jb jl push cmpsb jmp aam and int3 sub add lret hlt mov loopne xor jecxz cmpsb (bad) aam outsl hlt xor test cltd inc jmp (bad) mov xchg std out pop fwait repz out notb xor push cmpl mov jns stos push fstps ds xor pop xor aaa jae xchg (bad) xchg call push (bad) lds mov imul or outsb cs inc jg in dec lcall mov or sbb inc push in mov lahf ret jge shll repz pop mov lods or mov add call inc mov pushf pusha mov jo in inc (bad) (bad) inc mov repnz inc inc out jnp mov lods mov dec out shr (bad) outsl pop aad xchg xchg push sub mov push out ret leave aas sbb (bad) ret adc mov clc cmp ds pop bound clc xchg (bad) shll mov lods xor ljmp cmp rorb mov daa int pop outsl or fs dec test ds lret pushf and popf imul lahf out das and (bad) and in repz mov stc or sbb stos xor mov xor mov mov push adc or push pop std rcll and xchg inc in loope mov daa xchg adc test cmp hlt lcall pusha out adc neg dec add jle sub je mov sub dec (bad) jmp nop adc das push insl inc popa cmc pop sub lahf xchg gs ret xchg bound jle ror inc sbb mov je fsubl jge stos xorl out aad stc push cmp dec loop xchg aad pusha icebp pusha sub and mov mov mov rcrl ljmp push push pushf xchg jo add je jecxz aaa in iret adc or jge loope inc mov (bad) jmp cmp mov xchg outsb fimull xchg mov sysret sar xor mov insb sub mov xchg push mov cmp sbb push pop cmp add leave sbb inc mov mov sarl stos jne cltd mov aas cmp push cwtl inc cs std out in inc sub mov jne fisttpll mov in mov dec cmpsb xchg inc dec test into loop xlat lock insl (bad) add mov ret movsb jb cli bound and jo cmpsb xor mov mov fistl mov add dec outsl aam in in aas inc jno xor imul jl dec adc ljmp (bad) jns lahf add xor (bad) jb jno lcall loop pop rorl hlt xchg jmp scas clc mov in aad cmc add jno add aad das dec addl push fwait dec cli xlat sub rcrb (bad) xchg leave shrb out sbb and inc pop (bad) mov in popl inc gs rol cmp and aas and (bad) jge xchg stc add and xchg add mov imul aaa and ds (bad) sub mov mov pop flds sbb call (bad) mov scas mov sbb add sbb (bad) outsb dec in test (bad) shrb std movsb pop mov movsl pop sbb and dec mov cmp push adc mov aad push fiadd jle pop and jle jno sub les or loope fmul lret lods push push and push stos or aam pop add xchg jmp aad divl inc sub mov ret dec in mov (bad) fnstsw shrb jne xlat in inc xchg imul js clc jle adc subb idivb jbe jo icebp xchg out mov cmp adc inc int mov leave ret (bad) and popf mov in xchg cmp or std adc xchg stos adc xor sbb (bad) fs fwait shl mov in push daa subl pop ja push (bad) in test or cld rcrb test push pop pop xor and mov inc adc (bad) jb or mov dec ljmp jo ljmp sbb xchg stc in xchg xor add add dec push ret adc jnp fsubrl jp imul fsubrs enter scas lcall ds les adcl ret xor (bad) sub pop pop xor and out fdiv adc mov cltd sub lcall stos lods pop xchg xor iret inc popa xlat inc test mov or mov mov push jl int adc stc xchg roll int scas mov out sub stos xor sbb mov roll mov fadd or xor lds jecxz xlat xchg repz loope push sub stos icebp adc movsb (bad) jns mov int3 or dec or fldenv jb leave std cmp subl dec cmpl sub faddl and fwait mov mov out pop lods sarl stos aad mov popf mov sub cli adc pop or cmp rclb sbb sbb fwait aas sub cmp popa adc out jo icebp mov lea insl andl dec ss stc push pop js scas xor and push scas xor imul mov or enter xchg (bad) cld mov loop push repnz jg inc test call add add fcmovnbe pop pop add (bad) lret inc loopne cld mov pop icebp mov inc int3 mov xchg stc mov mov ljmp int add xchg cmp fucom push jbe stos stc (bad) scas or jl dec mov pop and xor push cmp test xchg add sub and push cmc aam xchg mov xchg test xlat mov jo imul fld aaa shrb cmpsb inc mov xor test adc dec push mov mov ja repz xchg clc out mov out (bad) dec jmp scas jns mov cs dec addb scas jns xchg cmp mov jae clc pop mov std and xor test iret ds rcr lret xchg fsqrt or jb jle out cmp adc adc popf jno sub sbb push stos jecxz cmp add repnz sub pop lret repz mov dec popf rcl inc dec pop jne inc inc (bad) xchg lahf dec (bad) jmp shrb pop insl push ss xchg sub and mov push push mov sub dec dec xor xor and jbe push push dec in xchg adc xlat inc (bad) icebp rcrb por loopne xchg push sbb iret adc dec shl test add out dec inc aad mov clc inc sub mov lea mov xor sahf movsl aas mov jae push jae jne or hlt adc jg sub in jbe (bad) cmp add (bad) sbb jp xor push stc cmp xchg mov vphaddwd popa int out and sub imul pop mov pop inc inc out dec int3 cmpsb cmpsb pusha rol jns jbe int3 sbb adc xchg iret shlb add sub lods sbb enter sbb and lahf pop sub jo mov xor sbb fwait dec jecxz addl pushf mov lods scas mov aad cmc adc push ja dec inc rcll mov mov push dec aaa dec inc std add jnp lods dec mov clc xchg jg loop cmp adc sub in loopne shrb rclb pop repnz push popa fdivs data16 push lds js aad and push xor mov popf fadds jb inc test mov xchg hlt in cwtl daa fwait pop stos shlb in fucom daa arpl ss ret jmp mov in rorl pop or lods scas push jno xlat cmc call bnd push sub rorl sbbl adc add mov mov test sub lods dec fildl push xor cwtl arpl iret xor jmp insl jae pop arpl mov mov sub mov push sti int3 mov mov push adc hlt (bad) pop mov push lcall in test add fcompl dec xchg popa jo sbb push stc out adc stos xchg dec pop sub test xchg sub pop mov sub sub cli rcrl dec push dec sub (bad) xchg (bad) (bad) mov in shrb adc (bad) fdivr lea inc insl push mov add xchg inc fistp sahf mov dec in jns scas sub push cmp dec je lods imul out jecxz pusha mov mov inc jo icebp daa push mov mov imul dec add aad mov adc and pusha mov mov dec mov jb inc mov fcmovb lahf push dec or push fs inc pop out mov rolb (bad) inc mov or mov adc fistpll push adc shrl or (bad) ljmp sbb fldcw mov cli insl outsl mov rcll (bad) mov or mov ret jo ret out notl dec aas ds aas mov in or movsl mov push or fcoml loopne pop mov fsts xor test jae xchg xor adc and mov inc fwait push lods rorl repz push fdivs insb popf sbb fwait pop dec xchg mov call iret dec xor jp mov (bad) les jp in pop push and into mov jne mov and push stos mov and xchg xor outsl xchg dec cmp cmpsl lcall xor pop cmp es jge pop inc add int popf sarb cmp inc lcall ja or (bad) stc mov push imull add and popf lret pop sub outsb stos mov and fmul sarb xor pop cmp xor add sub inc add ficom jae je push mov (bad) (bad) ljmp jecxz sbb add pushl (bad) out or push (bad) mov in js dec sbb dec xchg popf xor bound push les xor dec jecxz,pt and jb push rcrb or in pusha cwtl xor cmp fsubr pushf jp adc jb,pt inc sub js mull push loop push cmp or fdivs inc sbb mov push test dec mov add (bad) jne (bad) mov sarl or mov pop mov mov popa jnp (bad) or dec int3 fwait (bad) pop sti push adc sub repz les es (bad) mov mov mov scas xorl ficoml test fimul xor lea aam mov push gs jmp rcrl sub in aam js mov dec (bad) lock call les and and test test les test lret add rorb aaa les gs loop add jmp mov xor mov (bad) jge cmc pushf in gs xchg pop sbb sbb xchg loope call and mov loopne aam add inc ds loope add mov ficoml aad mov clc jl xchg aas sbb sub mov cmpsb lret iret dec sub mov cmp call fistp aas xchg aaa xor inc cld mov nop mov shll outsl insb dec stos dec adc insl jp inc or aaa out mov (bad) add cmp fisttpll test int dec xchg or int fdivrl lret adc cmpsl (bad) push adc jae adc add jl mov pop cld and sbb lds cmp lcall jmp push rcrb pop rol fcom movsl sub and xchg sub xor inc jns xchg xchg xchg jecxz push sti pop int3 in imul adc ljmp push jo (bad) xor mov int3 sbb mov iret inc scas mov daa dec dec (bad) in dec sbb insl sub mov dec sarl jne push xchg pop aad xor imul mov push call movsb push inc mov add fwait popa jb (bad) out nop in aad arpl jle xor scas aaa mov fwait pop out push jnp push pushf mov dec sbb shrl rorb in xchg add dec (bad) dec inc bound jo and pop gs push aas cld xchg icebp or sub sub std stc fwait addr16 rorb sbb pop push push adc dec dec pop movsl cmp pop negb cmp lods je imull inc das jle xchg cmp add mov lret sbb mov and xchg lods dec push cltd ret mov (bad) into clc and and inc sub jg mov into adc dec or xor xor dec jbe loope enter out pop pop xchg or push and ret test (bad) pop inc jo call paddq pusha xor sub push into and movsl mov pop insb fs push adc mov mov mov rol (bad) mov out jge jmp das arpl pop out cmp loope lcall or jae mov lea xchg adc push (bad) sti mov jno sarl xchg cmc leave xchg imul dec xchg add xor xchg xor add aam sub cs mov xlat cld pop xchg das loopne out sbb repnz xchg push call scas test add sub xchg mov stc int3 or xlat xor mov add addl sbb mov in insb mov cmp push out aam xchg sbb mov xchg call push adc xor inc std pop mov cmp cmp mov inc orb nop dec lods lret jp add int (bad) mov rcll sbb (bad) xor fcmovne lods je mov cwtl js jecxz cmpsb pop xlat dec sub mov lcall push push push push xor adc jne push and addr16 sbb scas jge or inc or jle ret (bad) sbb mov pop mov inc lods insb daa popa mov inc scas push (bad) mov push mov lret hlt aas imul ret dec and xor aaa lock lahf and in mov fidivrl jnp xchg mov movsb out jecxz xchg lcall or xchg lret pop mov hlt gs into push pushf and mov xor xor pop mov fs aad mov cmp stos fidivl pop out or jl jecxz mov test mov sub outsl dec cmp add mov pop cmpsb mov push inc xchg into pop inc shrl fstpt mov nop adc andb loope mov add cmpsl mov pop stc test (bad) mov jnp (bad) push inc repz js inc add add bound (bad) and jmp repnz push adc mov push inc lock enter jns and cld sub cld out (bad) enter xor mov add sbb and jecxz imul dec pop cmp xchg mov mov mov dec cmc or xlat mov xrelease in jg mov mov and mov cmp repz cmp jge add inc (bad) cli test sar inc mov push jo sarb pop rorl imul mov push fs push js div or dec in pop jmp and add adc fildl sub and cmc jl repz jmp shll jo xor cmc push imul mov pushf gs outsb xchg andl pop jg movsb sub inc xchg movsb pop mov mov push and pop shll jle adc push adc jge test xchg mov imul cmp es outsl fwait cli jns sbb fstps xchg mov dec pop dec out sub cwtl mov and push (bad) test stos cmpsb iret (bad) pop (bad) pop lock mov outsb rol inc (bad) adc out mov cli mov incb mov push and xor dec and pushf xor je mov nop jge add pushf bound push xor jmp dec fwait mov cs add lret mov js pushw jnp mov outsb popf xor stos addl dec aad push jbe fldenv addb cmp fnsave inc aam outsl (bad) mov test mov (bad) out aam cmpsb (bad) inc pop test sti imul int jns pop xchg jo into scas fs repnz mov mov push loopne leave and mov xchg movsb in ficom popa jmp mov xor rcrl push and lcall or loope (bad) mov addr16 push jnp cli out clc lahf loop inc shrl incb (bad) xor or ja fisttpll and stos int3 jmp fstpt dec push add aam inc test cmp leave mov (bad) mov test add xchg dec cs sub jg or xchg popf or std aad mov ret repnz sbb or aaa maxps cwtl xchg mov mov xchg popl stc sub bound xchg pusha dec rorb mov lds mov xor mov jp stc and dec adc push out push add ret int test notl std xor fs lea daa add mov aaa add cs test loop jecxz jmp xor sbb outsb cmp jbe xor xchg fwait inc repnz push inc add (bad) in and cmp int xchg je jge cmp and add loopne addr16 loop into rcrb (bad) mov aas mov dec xor mov insl lea mov outsb dec int3 ficompl rcr inc cmpl inc aad jb sub dec popf pop add sub sub in imull inc sbb in rcr dec jg in dec add fiaddl arpl fmull outsl xchg gs hlt and jae scas sbb xchg mov jns enter scas ss sbb in daa in in data16 or pusha cli cmc dec movsb inc stos and jge shrb pop movsl lret and fcoms clc test sbb xchg xchg sub lods cmp ljmp pop es ret mov dec insl rcrl shlb loopne pop in mov popw das ror xchg push pop sub aas and cmp mov cmp inc fidivr add or stc outsl push cli (bad) mov stos loopne mov jae mov lea cmc xor jo xchg mov push cmpsb sub mov xlat add sbb add sbb xchg in cmp les int3 andl push fildl lea daa xchg inc xor mov jb loop sub mov xor xor sbb cmc int mov push mov call test push cmp fnstsw (bad) and gs in jns ljmp lea sbbl or hlt ds adc sub cmc fistp xor lret push push out inc pop pop push je fwait sub in fidivl sub sub imul sahf mov sub inc sbb push lods fsts push ljmp inc jns in lea and jle mov sub scas int3 aas mov push cld ds mov cmc xchg ja enter outsb inc xchg sbb movsb imul push mov (bad) arpl pop (bad) out insl pop push jge aas stos shll aad cmp addr16 jp inc test fiaddl pusha xor outsl fidivr ror mov or xchg adc cmc dec imul fadds dec leave push push and addr16 inc cs push aas test mov push stos xchg mov ja sarl fistpll aas jg lock mov loopne idivl fistl aad ret stos out and mov pop jns pop add sahf imul mov inc sub push push pop cmp jecxz push add not pop fimul dec adc xchg lahf les jg dec mov cmp mov imul sub fstps cmpsb fimul mov xor mov lods aas push jnp repnz sub ret xchg out je inc pop push pop sbb sahf xor mov shrb add outsb fmuls push fsubl xchg fmuls pop mov pop aam xor cmp and lock mov pop cmp pop sbb or xchg xchg adc lcall (bad) mov fistpl cwtl out sarl das out (bad) jno cltd or mov xor and dec jmp sti xchg scas jns push insb out mov pop xchg daa mov or (bad) mov ss cli xlat mov scas mov int cmp and mov mov push push xchg or aas lods outsb and or repnz mov add xor jecxz mov ret mov push das adc (bad) pusha pop out arpl fwait xchg xchg popf jle mov icebp mov sbb adc jmp out pop dec ror sbb adc repnz aad inc add jo sbb cmp sub add shrb pop push adcl mov imul clc cld xchg (bad) sub (bad) push jbe (bad) adc lock jmp and or out xor fdivrs adc dec jle pop into dec lods pop insb es (bad) mov pop xchg add dec and xchg and pop mov (bad) mov sahf icebp pop (bad) xor or jle out or adc xchg pop mov nop xlat cmp fist fildll and lods icebp ljmp mov mov inc test sar scas jle (bad) pushaw add or dec (bad) mov push mov mov sbb adc mov cmp pop xchg jmp add bound cmp push push enter inc push ret inc jmp ret push adc jecxz insl (bad) lods popf in lods enter es mov jo xchg mov mov dec daa inc cmc test popw aaa cmpsl add cld push sti scas ljmp lret in (bad) fidiv mov xchg repz ficom sbb sahf push add je inc (bad) fsubrs lret hlt pop xor mov lea and cmovs sbb pop in pop inc adc pop lret ret push inc mov fsubrs mov pop clc or sub addb xchg lcall iret xchg out rorl sbb pop pop mov and jno add pop fstpl dec xor in pop push cmp and xchg push (bad) cmp icebp mov stc das (bad) div sub mov loopne aas pop into rorb mov jmp push lock xchg clc popa cmp (bad) jns inc xchg adc cld mov lea mov dec jb ret or or outsb in jp loope jg repz out inc sti push push jl (bad) push fwait push push sub dec inc js and pop and (bad) cmpsl jg mov push add out push dec or mov (bad) jne gs push fstpl dec sub rcll push jne arpl sub xchg push pop mov test aas popa notl out dec xchg xchg xor rcll jnp jl adc es adc test out inc (bad) test or jmp gs dec faddl stos lea jecxz je jle test or push in mov cltd test mov scas gs jb popf out arpl adc (bad) pushf xchg nop movb loope mov pop push mov mov add cmp js sbb add stos cmp push icebp push fwait dec arpl mov int3 add iret call and xor popa mov mov inc mov lods (bad) in dec jg jmp sub ljmp mov lret push lock jne loopne daa iret or fildll mov iret lods ffree nop int3 jl movsl xor test xor cmp mov sbb (bad) dec in xchg shrl bound test (bad) hlt adc ror cmpsb enter sbb idivb mov xchg cwtl xor popf inc pop test out cmp fwait negl lret pop call aaa xchg fnstenv mov pop adc dec aaa or (bad) mov add cld fcomps popf push push jno cmp dec mov inc mov add ret subb inc loopne sbb int3 (bad) stc repz xchg adc sbb xchg fistl mov ret test ror mov je ret cmc push xchg enter or outsb mov leave push adc mov cmp inc fwait mov repz pop sub out lock fs into lret into mov rcll (bad) aad mov cmp (bad) test fwait and stos mov fcmovnb iret mov repnz fisub in xchg jb pminub mov xchg es inc and mov inc outsl jle fdivrs mov fisttpl inc mov out inc std notb cmpb (bad) movsl push jmp push test push and xchg outsl jmp cwtl es xchg ja test add jle cmp sub mov mov xchg cli inc test lods lods cmpsl xlat pop and xor ja push enter mov loopne adc jae sbb cli lods push jb leave inc pusha pop xor push fistpll stos jp dec add ret or test xor add add movsb pop mov push sbb mov jb in and ss aam popf roll (bad) fildll inc dec dec xor xchg loopne lea sub and ss mov movsl push scas bound adc mov popf sbb outsl iret cmp mov sbb call pop test pop test sarb sbb fdivl out lcall ja mov xor ljmp sbbl xlat out push or aas rolb aas sbb ljmp xchg and add adc movsb xor fwait adc push cmp cld or pop sub dec repz push mov mov enter pop (bad) stc in inc lcall scas mov jo xchg ret push sbb aad mov jo dec pop ja mov fcmovnbe pop cmpsb dec lods adc aad jno xchg fidivrl movsb fidivl adc outsb cwtl cmp jecxz clc dec add (bad) enter mov adc test out fiaddl xor add mov mov call repnz adc pop dec aas clc stc pop xor mov jbe inc xor (bad) xchg rcll push icebp xor adc mov push mov add xchg leave push icebp pop and fwait fs jmp jp xchg lret adc icebp (bad) hlt push inc push sub in loope sub sahf test xor cpuid pop jb pop jnp xchg mov in jmp adc cmpsb push int or sbb ficoml mov jg push cmp xchg sbb jns dec or inc icebp ja das lsl mov xchg repnz pop and sti jb dec fmuls bound addr16 insl lea cmp inc fwait lret popf aam int popf pop leave sub std movsl nop (bad) push adc fisttpl and popf xchg add push mov jnp cwtl sti cmc jne mov (bad) shlb ret push out subb adc dec jmp cmp mov ret xchg inc insb mov add insb dec das push (bad) or gs test mov cmc ljmp xchg lods ret imul sub (bad) jne es ss inc jno pop ljmp rcl mov add loopne mov mov xchg mov adc movsb lahf mov cmovge xor xchg cs mov mov adc rolb and add jmp movsl mov push push mov fiaddl orl les xchg movsb jne or fadds addb or dec cmpsl sub sub cli and es adc dec and mov inc pop aas xchg cmc out cmp mov cwtl and stos (bad) aam enter mov fwait push push test pop aaa cs call addr16 (bad) xor mov nop fs popa mov xchg (bad) das insb (bad) jne push jns fdivr cld mov push andl imul jbe mov sub inc fistpll outsl subb mov or std ficoml enter ret iret cwtl push mov inc scas mov std fmull add pop and (bad) and mov and std fistpll ret inc mov mov and dec rcl pop mov outsl stos mov cmc lea xchg sbb or repz cld repnz lea mov std ret jae sub cmp aaa hlt ror (bad) inc repz lret xlat sbb inc lods pop mov cmp sbb inc dec sub add fcmovbe fwait push pop test jae ja push jmp iret fimul pushl and mov xchg lods mov out dec sahf leave rorl mov out xlat les cmp aad sub sub add in cmp clc sbb mov or pusha test push push imul push incb cmpsb cmp in xchg cmp js mov add pop adc mov push jns,pt inc ljmp ret fldt mov stc mov popa sbb sub or decl mov roll and push aam arpl cmpsl std fbld pop pop pop or dec dec mov faddp xchg fnstcw rcll dec dec (bad) mov mov cs sub jb aas sbb aam testb int movsl ret stc out xor jp xchg int3 xor mov cmp xchg mov pslld arpl mov push cmpsb and pop mov inc xchg notl int cwtl xor (bad) divl or stos nop xor adc cmp (bad) mov hlt jns xchg loopne cs xchg jns insb repnz mov inc gs fistpl out inc xchg test dec mov xor cmp xlat push jmp popf adc daa adc repnz ljmp adc dec sub xchg add lock inc sub jmp fisttpll rclb xchg flds sub push jbe inc in cmp mov push push push dec repz pop xchg lea jle add add add aam stc pushl pop in mov gs push mov mov f2xm1 xchg sbb push push xchg mov inc outsb cmp and out cmp mov mov cld iret prefetch xor sbb test cltd and jp add jne or xor mov sti xchg sbb outsl mov out aam mov or daa ja movsl sub imul pop sub fdivr je into addr16 add mov iret mov lods in hlt popf call mov aas adc or scas enter imull lret inc adc test jno daa hlt push or loopne aad adc mov sbb hlt in jo push or adc aaa lods dec nop orl cmp in inc mov cmp jg sub or add adc xor xor out sub pop xor sbb loopne pop cmc or leave push cmpsb mov (bad) fimul int3 inc lret sti xchg pop loopne inc xchg loop ja push push js loopne and cmpsb fistl and pop (bad) mov jmp repz icebp push ficomp jle cwtl sarb lret out jmp xchg pop shlb ds pushf pop lea addr16 mov sbb outsb xchg jb test jae outsb push daa mov dec pop scas adcb push sbb gs test jae push mov or push fiaddl (bad) in fdivrl xchg xchg mov pop test fdivr xlat pop adc pop sub push arpl sbb cli loope sarl push fdivrl pop cwtl mov xchg lock jae push aad xor in lea xor cmp mov mov adc dec add jne and dec insl mov aaa and dec or mov stos aad cmpsb mov lcall test mov adc adc in xor jns mov pop sbb cmp test xor loopne inc sti fisttpl sub daa cmp int3 lods add lret cli cmp popf sahf jg sub inc cltd mov addr16 push cmp out dec cmc in dec jbe ret les in iret sub add jne mov xor inc push scas xor mov mov fcomi push mov loopne idivb xor sbb mov dec mov dec aad jle fnstsw jecxz and add push xchg fadd mov sbb enter ficompl push (bad) (bad) mov cmp sub cmp aad shll in sbb xor xor aaa out aam jae or pcmpgtb xor in inc lcall cmp add scas aaa test pop aam scas jno jg or movsb fwait (bad) fadd repz pop jns popa ja mov shrl orl outsl xchg scas test xchg jbe shrb gs push jnp pop sub adc xor (bad) jl (bad) fildll mov or cs repnz lods push popa call ficompl sub cwtl pop sub push test dec nop sub add imul push dec lds cmp add outsl ffree loope fistl jp (bad) cmp cmp jnp fdivs mov addr16 adc or fstps jg prefetchnta lret xorb cmpsl cmp lret ftst push lcall push test jo imul repz jnp out jo std adc fcoms push or xchg jge scas add xchg ljmp adc fs movsb pop mov lds mov sbb outsl and loope pop adc add std mov cld mov rolb (bad) lods mov xor lret adc sbb pop sbb stos cmpsl inc adc lea arpl lds scas push insb push push xchg and rcrb cmpsb xor cld mov in or mov xor (bad) xor (bad) (bad) dec (bad) mov movsl dec sub xchg jae or test divl inc sbb mov mov pop pusha push aaa xor mov adc jo lods imul xorb fsubl inc push mov leave mov inc adc int3 mov adc stc xor xchg insl mov jns push scas push testb aad lea imul adc mov aam rcll stc pop loop dec out jb fidivr adc pop aas icebp mov lahf stos js jns arpl adc into sub or (bad) aam jno mov data16 pop jg mov mov iret orl repnz lcall dec call cli push flds mull push imul and mov lcall sub cltd mov aaa adc adc fcomps or rolb mov rep int3 sub movsb sub inc test xchg fs jge or (bad) xor xor jbe mov ret mov xor push cmp popf lcall push xchg pop add daa aas movsl adc fmul (bad) scas mov dec inc cmc mov das ret mov bound fiaddl mov xchg fsubrp or push cmc gs dec xchg aad mov sbb push sub add jno int (bad) aad jbe xor movl mov inc pop xchg aas inc mov insl (bad) mov fld adc dec cli js mov lret and adc xor or scas inc xchg test cwtl jecxz xor mov mov out jo xchg or xor and mov fistl repz mov (bad) push push jg add dec or cmp xor lahf std cld xor xlat js out pop outsb imul (bad) out fwait push in mov ret sub repnz sub jge testl pop lret sahf jge adc cmp das scas mov lods scas lea lods addl and mov xor lahf sub movsb aaa jb jl out cmpsl hlt mov sbb add loopne sub leave les imul mov push mov call pop shrl std daa dec push push xor je xchg mov (bad) dec mov inc pop aas pop jns test push mov arpl xchg add mov leave mov inc inc mov enter add lret inc xchg xchg inc imul ror or push pop pop add adc repz cmp push adc scas sbb (bad) xor cmpl pop (bad) repz stos rcrb aad push int3 adc pop mov pop xchg mov sar loop push subl jmp mov lahf je testl cmp and xchg push push daa aam mov and lahf push jo (bad) mov jecxz in js in fcos and inc pop mov in pop call int fiaddl jbe xor mov cmpl xor mov inc ss dec or jge movsl push mov mov push test xor mov lods sbb jae and inc push test push cltd les (bad) fidivr push pop lods pop leave inc fnop aas mov ds iret lea mov mov inc stos sub movsb push daa leave ss clc outsb jecxz sti sbb loope pop push loopne mov push pushf inc jmp cld adc jb lret mov roll shlb icebp pop ds pop xor pushf leave pop dec cmp push cmp repz sahf or dec movsb xor popa add (bad) mov push mov movsl or ja pop xor mov stos add sub je sbb push add or mov xor sub push jns push enter inc fiadd sbb and insb pop hlt sub pop out out sti xor cmpsb in aad dec jbe (bad) (bad) cmp test into ljmp or jge inc pusha jecxz ljmp pop dec cli cli es ret in sbb cld pop in insl dec add adc sahf add jb jo arpl mov fstps divl mov ss sbb push pop pop mov add jge scas cmpl dec pop (bad) push fist js lret push fdivs lret mov lds (bad) enter aam bound add sbb push daa fs inc lahf stos and pop (bad) cmp push rolb dec repz loop mov mov out pop es cmc imul or and test aaa jle into jb xor xlat mov lret mov xchg jo movsb push dec inc outsb shll (bad) mov or and fs xor xchg add inc scas fs pop sub xchg sbb outsl xchg and or out aam push sbb nop push adc lea inc inc cmp jge jno out push aam bound mov mov jns cld xor loopne lds bnd hlt cmp fs inc je mov in jo jb sub outsb js inc mov stos adc out ret inc outsb rcrl idivl test sub mov mov mov test push adc (bad) out or pusha mov lock mov scas and fildll test push jmp mov add pop or leave jg sarb sub (bad) jae (bad) ja aaa cld fs outsb lahf fneni(8087 xchg hlt sub jbe lret (bad) idiv jge sub dec and dec dec loopne push cmc xchg mov and cmp out jecxz ficom and inc cmp popa push add dec adc daa (bad) xchg ljmp sub pop js jno std mov sbb push popf sub add xchg out mov sub mov sub push and sbb enter lods nop cmpsb push pop cld pop dec les ret xor popf in shrl ja stos sub icebp push mul push daa into cmc mov xchg dec (bad) lcall push inc in les shrl bound loop inc fildll cmc inc stos lea in dec and loopne aad int cli mov mov adc inc mov xchg xchg test jmp mov add fwait loopne lea fs clc xlat xorb cltd or fstl icebp jno addb adc jl jge mov out pop adc jl test push (bad) ss fdiv int pop repnz mov dec mov arpl cltd push mov adc nop mov pop mov lock (bad) pop subl adc dec fidiv xor jae sbb neg sbb add pop xchg mov stos lods xchg inc sar into js (bad) mov pop pop scas (bad) ds xchg or xor je sub test xchg mov sbb out push or jnp xorl sub push mov (bad) pop xor sbb out lcall cmpsb in js jb movsb dec pop mov add xor xchg cltd push dec iret jbe outsl (bad) mov add dec inc jp int pop xchg in xchg int jnp or lock mov adc dec or int push repnz sub lds jle lock mov stos je ret mov xlat jge lds mov vmread mov push adc out out out push mov fsubl sub js dec xchg (bad) or (bad) push (bad) xchg cmpsb (bad) xchg shrb notb push shl data16 fistpl (bad) mov xor aaa xchg and cld push cmp das or jl mov les sbb jnp push pop (bad) aaa out mov js aam rcl sbb arpl xchg ret mov dec jae cmpsb pop popa icebp incb mov and or mov incb pop or call mov mov mov or (bad) cmp jg les push enter sbb fist stc jb mov sub fwait mov cltd inc cltd dec push sbb test add ror data16 fisubrl cltd push data16 imul lea int3 std scas test jae repnz popf fidivrl and ret ss xchg cwtl outsl adc cwtl es cmpsb pop int3 xchg cs xchg int jl rorb aad aam or mov addr16 pop test loopne mov inc xor movsl loope mov mov lret ret mov cli sbbl xchg jno mov sub lds push lods ss pop cmp sub rcll scas test jbe,pt fidivr test pop jno or (bad) mov rorb hlt push sahf out xlat mov push jbe test adc and dec mov fnsave in movsb or movsl dec xchg mov push ljmp xor orl andl jbe push fmuls xchg cmp js jnp,pt (bad) mov sbb leave add mov pop dec xchg adc cmpsl xor scas and and imul cmp xchg lcall fnstsw xor sub dec sbb mov notl hlt sub repnz js popf mov stos xchg cmp fisttp xchg jnp ja loope dec inc dec add xchg popa (bad) lods imul adc jae lock cmpsb movsl mov negb loop in push shr jb ss sbb jmp sbb sub rcl cmp sbbl adc sbb xchg fnstenv scas or mov test in movsb push cmp insl jne inc push iret movsl idivb inc loopne js xor fs divl nop pop rclb add fcoms leave mov mov and push jns inc sbb sbb lcall push std aam mov and scas jb dec outsl inc xchg ret out popa and fwait inc stc inc add out test test popf mov and inc or jmp and imul dec push ret mov xchg repz jecxz in xchg push cmp fbld sub push shl test rcl sub ret or (bad) popa enter cwtl dec push inc mov or mov jmp jb push hlt jmp add addr16 js sub mov and mov enter lods bound cwtl jne add fsubl fmulp rclb in sar lret fildll adc in loope in mov (bad) mov cmp sahf inc and mov cmp mul hlt lds adc push pusha sarl stos outsl mov jae movsl movl cmpsl stos xor pop js shl push mov test loop mov mov cmpsl divl in icebp out rolb fisubrl xor pop xchg cmp (bad) jbe inc cmp mov sub jnp pop lods fisttp mov rol stc (bad) inc jl pusha jne xchg push push mov scas sub dec jae push xchg enter dec (bad) or out inc cltd jp pusha test push xchg scas jle adc or pop pop xchg mov lock dec mov push fildll push push (bad) adc je jns push mov xchg scas xorb sub jge in xlat dec xor aad sbb cltd xchg inc ljmp mov lcall dec xchg js push mov and jno sbb test daa inc or cwtl int3 mov cmp lods rcr sar (bad) js add jbe ss inc mov xchg and int mov dec xchg xchg sbb xchg (bad) jno movsl sbb repz xchg adc adc push push adc sbb (bad) jmp pop pop (bad) hlt aas in mov call cli fisubr push (bad) mov pop lods ret ret pop fstpl sub sub sbb sarl mov mov sbb rorl iret pop loopne and ljmp cltd aad push mov adc subl in int3 jnp lahf int3 sub jp movsl rclb xor dec sbb xor fnstcw repnz pop xchg sub data16 andl mov ja inc cs sti int mov xchg lock lds insl xchg outsl fwait in mov imul sub cli lea aaa lea in or pop loope jnp mov inc out mov fwait pop mov shlb jo sub sbb (bad) ss or add cmc les pop (bad) out test inc jle push cmp inc adc jg lahf mov inc push mov inc test repnz scas iret stos es out imul cmp loopne cmp cmpsb inc add fiadd xor xor outsb pop and push or cmp jnp fcompl bound cmp call xchg data16 sbb pop xchg scas test adc test das jecxz jl frstor mov mov or push jp testl fcmovnu pusha (bad) loopne aad mov cld mov xor add (bad) es dec ja or mov cmpsb loopne lock aad into or sbb xor in outsl pop movsb push mov adc pop mov lods int fmuls pop xchg (bad) in in (bad) and push cmpsl movsb and pop stos loope (bad) int3 mov jbe add rcll lahf cmc push jl add inc mov pop cwtl in lea stos addl or push lret icebp out mov push jbe jecxz pop sub addr16 rol cmpsl lcall jecxz mov es frstor pusha loopne insb mov ja imul mov fildll outsb test out or pop sbb pop mov mov stos cmp push xchg cwtl jmp loop test mov lock and or push jg mov jl cmp or mulb hlt fs data16 iret shrl shl div cmp cmpsb lods test or xchg or mov icebp lods (bad) jle mov mov (bad) sahf (bad) cli xor int3 cmp pop movsb jno ja rolb iret mov pushw in push jno fldt xlat mov push dec call repnz xchg dec mov xor mov (bad) pushl sbb loope leave icebp mov pop bound cmp dec dec (bad) addl jb xor lret push xor adc cmp inc push sub adc aaa push arpl cs adc lea add fnsave mov (bad) test push jg cmpsl mov mov add xchg test dec movsb mov cs adc fcomip mov mov dec jns das cmp ret divb xor leave cmp das sbb mov dec push push jbe test aaa es aam cltd hlt ljmp rcrb insl jae int3 sbbl xor insl mov insb jo xchg repnz push jle das int or pop mov roll mov mov mov mov cli mov inc mov rclb int mov iret push or push cmc sbb dec loope imul or rcrl xchg xchg or shl mov and mov ljmp (bad) insb int mov call sar fildll adc mov mov arpl cmp test xor cmpsl sub mov pop sub and cmp lea int3 mov jne (bad) sti outsl adc xchg and imul push xor outsl inc sbb mov adc insb cld mulb add stos jle cmp ret loopne push and les adc push jg mov icebp cmc test mov mov fiaddl sbb call test scas adc scas aad and jno,pn pop aas lods scas sbb jecxz gs popf inc dec lret ret mov lret sub sbb sbb sub stos xchg fsubl scas sub (bad) in mov iret call xchg cmp cltd (bad) jae mov arpl or jp clc xchg add adc or scas add inc insl cmc jne std ret mov scas pop (bad) pop shl mov fwait pusha in daa pop andps pop inc cmc sub push out cli add and std in mov or std push inc jg out dec imul dec cli or pop das in jmp jmp mov pusha inc lods mov jno push mov adc aas or mov jnp pop lods adc mov add inc sbb push cs dec fldcw loope inc (bad) and lahf in repz inc cmpsb outsl xchg jno mov add insb int hlt mov clc popa stos lret mov enter mov arpl shrl cmp scas jecxz (bad) stc dec jne mov adcl popf and and roll dec insb ljmp outsb or inc dec inc sub lods jmp add sahf xchg or aaa adc lret test adcb test cmp daa out mov pusha dec cmp jo fstps sbb inc test rorl adc cmp pop add ror mov sbb sbb sti mov js inc sbb ret repnz mov jl cmp outsl cwtl out xchg aad xchg cmc loopne and cmpsl jle xchg xor fldcw jbe incb test push ss xchg mov and add xor xor jecxz mov dec lock inc mov and hlt inc lds mov add jge mull sbb xor data16 xchg frstor subb fs clc mov mov dec jb push call sarb (bad) cmp fistpll (bad) mov das iret std xor mov adc push pop jno xchg jg ss mov arpl ss jo or cmp ja push out mov sbb imul test pop out and xchg bound call (bad) push cli (bad) jp sub ds movsl cmp les out lea add pop xor and cmp jbe lds sub inc mov dec lahf in and test xchg repz jg xor push subb ss in inc cmp and or mov (bad) sbb adc mov or lahf dec adc test sti adc adc test sub aam ljmp mov fisttp fs mov loop dec in cmp jb jnp pushf sarl add jo sbb loopne add jae or test xchg roll hlt add cs stos sbb js cwtl js outsl mov jno jp aaa (bad) cmc mov lahf or stc enter pop loop lret mov xchg out std mov in shlb inc test cmp or cmp andl scas lock pop sbb mov mov dec mov pop pop mov sub jp mov push (bad) ss out add xor xor cmpsb scas jae (bad) int or cmp and lds loopne jecxz into and push sbb dec (bad) push sub sbb das in mov and (bad) jne sub jns xorb mov mov and jge lods xor int xchg xor mov jns xchg lods outsl xchg or cmp out int3 or mov add and cld out push lret pop das xor cwtl imul xchg jbe jmp dec movsl fstp xlat mov in xchg repnz lahf stos adc outsb dec hlt rcl pop inc fidivr push jp fnstcw (bad) jne xchg mov fisttpl lret loop xchg xor movsb jecxz shrl negb jb aaa xchg and dec xor repz xlat inc adc test sbb xchg call cmp gs int3 xchg mov sub cmp sub push ss ret repnz mov mov jle sub xchg call add stos dec jb xor inc stc mov xchg and scas mov lcall mov addr16 xor xchg scas ss add enter mov test dec xchg out sarl pop mov aas jne aad add (bad) jo dec int3 mov imull sbb and in mov push mov (bad) sbb pop xor or outsb out jle out sub mov (bad) jg jg loope push sbb inc sub sub shl in and (bad) fnstenv sbb xchg add aas mov push pop loop aas dec mov ja,pt xchg push dec int3 xor mov lea hlt aaa mov out ja push ss or imul aas cmpsb outsl xchg mov out adc sar lahf lea mov lds fadds arpl mov rcrl push adc cli js pop xchg add insb pop mov lea and push mov sbb inc in push out and fdivrp or jecxz jmp (bad) jmp mov sbb pop xchg jns das fidiv jb iret fadd mov xor mov sbb lea lea sub shll stos sbb pop push mov loopne fstps shr (bad) or idivb dec repz jg cmpsb jnp call loopne pop cli sahf ljmp jl popa (bad) out push mov dec pop add pop ret mov jbe mov sub das cwtl xor mov sbbb es mov mov mov jno or adc popf push test mov jg mov cmp out cmc sub xchg int int3 jne neg xor (bad) mov sub into fsubs in iret test shlb xor imul (bad) fucomi or mov ss mov stc (bad) jo js pop dec inc popa rorl into adc xor sbb sahf inc loop shll stc neg out dec fiaddl iret push cmp jmp aaa into xor push sahf outsb pusha mov and jmp cmp cwtl dec mov add xchg (bad) je adc repz and in fstpl xor js jne fwait out out mov dec imul insl xlat dec outsb (bad) or (bad) cwtl cmp sbb sub cmp fidivrl pop mov and mov divl lahf inc insb jge dec dec mov dec cmp push push scas insl stos int3 and jle test int loope rcrb cmc out sub mov inc jmp push outsb cmpsl outsl sub repz es xchg dec daa out mov jae jmp stos cmpl cs mov mov in add cmc hlt mov sub jge rcrb pop inc push xchg out push pop adc lret js lahf leave ret int fisubl mov mov fs pop xchg push pop popf pop xor in push lea mov insl js repnz icebp sbb pop cmp lds nop xchg es sarl mov icebp ds (bad) stc cmpsl movsb xor sub loop or ss jle pusha pop (bad) jge cwtl jb and or out outsl hlt or imul jne call lea add mov and and call and pop xor sub push cld jae push mov cmc mov mov out mov shll fistp mov mov pop sub sbb lcall ret (bad) je hlt mov aas ljmp and lea add push jo jns add aad sub pop push adc dec xor jmp push addr16 or loop mov xorb iret pop int add dec iret mov in jp xchg enter data16 fbstp test pushf cli fcmovne mov jae pop pop cmc loopne xor imul fadds frstor ds xor dec lcall outsb ja loope or aad mov repnz adc push (bad) sub sbb jno add xchg fs sub cltd xor adc dec mov dec fldpi push push inc or fldl data16 sbb mov jb add add mov iret or pop lds mov movsl sahf shlb iret in into (bad) sahf push mov xchg xchg sarl jne add or shrl jbe test mov mov cltd imul push cmc cmp shr or in (bad) gs enter (bad) notl cmp or fisttp jns lcall (bad) cmp lea mov sbb je dec and pop cmp pop imul jge adc inc and adc mov loop mov and icebp add dec (bad) push (bad) adc jne adc lea aam dec pop add jo scas popl addr16 repnz lret push jp sub mov xchg lret fimull int in fimull mov int3 repz pop pop xchg push repz stos inc xchg sti push mov (bad) mov aam xchg adc lret mov jo icebp rcrl jb loopne xchg fidiv jbe pop in in cmp popf lods mov ljmp out push mov mov jl orl es mov sbb insl test fiadd enter dec lods and push sbb xorl push add imul adc jmp sub leave icebp ret jl cmpsl jmp les int mov push mov (bad) into testl sub orl fdivl adc push insb dec mov sub ret cli ljmp sub pop sbb mov push int3 loope sbb dec or (bad) jnp push add push adc push cmp insl xchg mov imul hlt fs cmpsl jle fadds roll sub mov add data16 fnstsw sahf pop aas stos bound stc dec out lds xchg mov mov loopne mov inc push mov aad adc add cld mov stos xor (bad) mov pop sub into xchg iret jl inc jmp or pushf pop xor mov sub xchg lret lret push cli les push sub push shlb xor (bad) dec mov push mov jge xlat fildll push lret xchg shlb test or and (bad) cmp sbb int inc xchg cld test fcom mov push sti cwtl pop lret mov outsb adc add xchg sub mov imul stos in mov cmp in push mov mov xor rcr clc clc fdivrs xor mov or hlt pushf sbb test (bad) cmp xchg outsl lea fcompl out pushl add test iret jecxz (bad) sbb adc loope ror insl das mov lds ds divb cmp xchg fidivl adc sbb in adc mov mov cmp aam push xor push push or mov sahf and mov inc (bad) mov aad and dec sarl jle xor cmpsb cmp inc sbb (bad) jb adc sbb push imul imul test nop je adcl inc scas cmp cmpsl jnp sbb cmp lahf dec push and pop fs adc (bad) add pop and inc mov loop add test cmp in adc jp mov stc lret ret addr16 pop dec add jae sti mov or icebp andl std sbb lea or jne rolb pop sbb fdivrs sbb mov inc sub cwtl mov ret in stc cmp ret sbb (bad) push addr16 rcl aam dec push push push shrl repz lock push push dec cmc mov push fiadd mov sbbl mov push jmp add pop mov or enter pusha (bad) iret test pop cmp insb (bad) jns aas adc (bad) imull pop xchg pushf xchg outsb icebp push icebp dec scas cmp pusha add jbe sub push inc insb in adc pop push xchg mov dec cld sub sbb test pop or sub scas cmpsb pop fstps imul ds push xchg inc shr in push sbb push fstpt or cmp int inc and add jle cwtl jle sub nop sub mov movsb test and daa inc sahf lahf push nop pop ss leave jne gs imul add adc adc imul mov enter push mov mov test mov push push andl loop inc cmp roll sbb sti jmp xor pop mov loop mov dec rorl mov sbb cltd rclb sub xchg add test cltd jg xor xchg jmp inc pop pop fcom lret mov arpl scas lret xchg mov cmpsl inc addl cmc jmp jno or cmp cmp and jecxz xchg (bad) jb out arpl test movsl test jg addr16 dec lea mov fs insl dec fcmovbe aam out pop mov cli insl inc jp jnp sahf imul (bad) arpl ds sbb out add movsl stc shrb iret adc aad shlb aas xchg pop push daa lret adc xor and mov sahf and sbb sub mov push rcr notb adc mov or adc rcrb imul test std ficoml popa inc in mov xchg in pop lahf inc xchg dec jae pop inc sub sbbl dec inc aam jae ds mov dec mov add sub sbb adc lods adc inc nop or aas movsb ja xor sub leave jg xchg cli lahf adc movsb push popa incb fistp push in cmpsl lcall sbb xor dec movl mov sbb stos inc mov popf jo xchg pushf inc hlt jae (bad) lods enter in sub push inc or jmp xchg inc (bad) out stos push push jno popl cmpsl lret jae lea dec jecxz adc xor rorb mov (bad) pop add lea out mov sbb hlt mov (bad) xchg loopne mov pusha mov cmp xor jmp lcall xor mov push add cli in push push push sub ret inc hlt scas outsl scas push repnz jg xchg test cmpsl mov sbb cli adc lahf xor iret out dec lahf loop clc les add ds imul mov int3 mov xchg outsb mov ss sub jecxz xchg (bad) mov (bad) outsl (bad) ss cmp pop call mov mov cmpsl lahf mov ljmp mov lret lret call or cld push push cltd daa adc in mov mov sbb and xor mov mov (bad) mov push xchg xor sti xchg test push cld mov dec cmpsl outsb js jle xor push xchg stos (bad) and (bad) in out mov outsl lods mov mov in xchg sub sub mov insb mov mov (bad) xor inc pop xchg dec mov rcll (bad) imul (bad) dec pop cli pop bound sub mov fisttp mov jmp cmp pop and sub in xor adc outsl and mov repnz mov jnp scas ds sub repnz sub pop jge xchg push dec sub jo ret xchg fadds adc pop adc out sbb adc adc icebp xor rorb mov movsb mov into scas inc push lret cmpl divl xor sti dec mov fs pop test hlt (bad) rcl mov scas in xchg and fs xor orl mov repnz mov dec sbb scas aas or push aad xor mov push sub mov pop pop jne ss xor jbe push mov fsts das pop add lds faddp fcmovnu in int3 mov nop inc sbb (bad) inc jbe mov rcll adc ds dec ja pop (bad) lret lds gs inc and mov mov fbld or addr16 lret dec jb fdivrs (bad) pusha xor cmpsl xchg xlat std and lret das xor cmpsl out jae roll push lods mov adc jb repnz cld lahf sub dec sti aam fs popf and lods cmp ds push add mov push repz sbb mov xor cmp jbe adc addl and cmpsl movsl dec stc sub and add jb dec or xchg push mov cmp cmp (bad) pop sub ret fsubl mov cmp adc mov loopne movsb and lea push jmp mov mov mov fstps jns xchg cwtl hlt jle mov sub lods (bad) dec mov shl push sub shl outsl insb push jmp cmc stc inc call loopne es dec dec jecxz (bad) jle fisub cmpsb dec jl sub add popf setl test mov jp xchg arpl sub xchg mov sub xlat or lcall fnstsw loope dec mov (bad) cmpsb das enter mov jecxz loopne push lods adc xor push adc cmp repnz jo (bad) jb (bad) loop lods mov xchg dec mov sbb sbb xor ds scas xor dec add mov jno gs loope cs jae dec or dec dec fcmovnu lds pop (bad) clc sbb mov mov mov pop jae mov test sbb nop dec push sbb mov mov mov roll fdivrl enter add insb lds jb pop hlt mov mov loopne xor stos adc je sahf lds pop push mov gs adc dec mov inc sub inc add sbb std sbb jae xchg sub jg push cli cwtl jae and arpl repz fxam repz mov xchg sub inc imul jp cmp cld icebp xor mov add iret cmp jp jne mov sbb inc cmp adcb inc iret int scas pop mov cmp and stos mov xchg mov add dec (bad) lahf add add push add inc fbstp pop jg cli int3 fisttpll out gs fisubrl mov push das pushl jne dec jno push xchg and lods test pop test insb add fisub inc xor xor and xor ss push and dec xor jp loope cmp jecxz mov lock mov stos sub call imul sbb mov daa loopne mov xor sub xor out jl scas stos int sbb xlat popa ds jnp push cmp mov mov lock leave mov push leave mov and pop sbb sbb inc int3 mov mov in add je leave popa repz movsl cmp clc pop sbb inc xchg fisubr fcoml (bad) cmp xchg cwtl cmpsb push dec mov sbb jno inc idivl (bad) js mov stos cltd cmp (bad) repz jno push fildl mov (bad) pop repz mov test mov imul inc xchg xor int in arpl pop mov rorl mov and fistpl mov push clc fdivrp jne fcompl mov lcall nop mov aas outsb add push add shr push mov call and inc adc fcmove cmpsl inc stos sbb mov jg shrl sub lods in rolb flds cmp (bad) iret lock lock mov gs inc in aas pop ds icebp jmp mov inc xchg out (bad) fidiv outsb pop pop sub xor enter adc mov ret mov dec and lds xor les loopne xchg lock adc outsl mov xor cmp sub ja pop mov jg (bad) or cld enter aaa in dec cmpsl subl jmp add es idivb dec sub stc pop xchg sarl (bad) xchg dec xchg adc arpl sahf aas out rcrl pop xchg mov fs or xchg repnz insb pop and bound mov into int3 mov movsb je mov inc dec push add imul mov jo add loop dec pop xlat loop repnz jae mov lret inc xor add pop mov xor out insl shrb aam mov out fistl and dec movl push aam and ja pop pop aas mov stos push mov add or xor push xchg push stos lock test in cs test cmpsb jo dec dec shll jbe sbb sbb sahf dec paddd sbb movsb lret scas xor cwtl ljmp ret xlat ljmp push repnz icebp call (bad) mov adc mov ror and jge dec jge fsubrl xor ljmp adc insb aam mov (bad) lahf mov jns out or mov mov lea mov mov xchg jl loope xor fdivrs xchg xlat cmp fild inc xor dec lods cmc repz sbb sub cli mov iret inc pop inc ret loop sub fisubr subl out adc xlat xchg (bad) mov xchg cmc pop outsl int mov jb push les pop std test lahf das mov mov imul add stc andl push sub aam pop faddl sub out mov bound dec ret lock dec sbb xchg and repnz mov jle cld jge mov cli xor shlb scas movsl movsl enter pop add xchg jne jnp rorl push loope push adc mov lods subb lea fistpl fnop adcl mov in push pop out mov dec mov pop sub test push sbb xchg cltd pop mov adc or mov push jne leave stc (bad) jmp xchg mov and push mov test dec idivb cmp icebp inc inc je push in xor (bad) xor movsl lcall and int3 imul mov dec daa ss mov push imul dec or sbb xchg insl insl aad cmc sub push js iret jnp mov xor mov sbb pusha mov in add (bad) fnstsw je dec dec aaa (bad) sbb lods addr16 cmpsb mov jno ret mov push leave (bad) push jns push mov (bad) repz test lret cmpsl jmp dec jo jno imul daa ljmp ret mov pop cmp push push test into sub imul in pop test inc scas mov mov pop repnz or or icebp std movsb cs ffreep in mov xor or push add pusha xor add mov jo jmp jecxz xor out insb sbb hlt in loope subl push xchg out dec mov push mov icebp and dec inc addr16 addr16 rclb xor loopne divb mov cs (bad) sarb clc out pop mov mov lahf ss in and jne mov mov dec jb cmp add inc push jno mov (bad) inc xor popf inc jl pop adc sub out adc fs inc jae push jecxz cld or mov and pushw in xchg rolb pop mov ret inc xorl mov aad xchg jae test ret dec xchg xor or lahf xor mov push sbb pop jecxz xlat mov and jne inc lods ret add enter pop movsb and scas ret leave jbe outsl aad cmp (bad) popf dec xor nop jp (bad) or arpl cmp and adc leave dec xchg nop push ret dec (bad) cmc in fiadd fcomi cmp sub mov xor mov outsb out test jo ret into gs mov inc (bad) add les aam dec jb pop sub lea repnz scas mov jge aaa lahf das pop (bad) dec insb rcrb daa repnz mov leave mov aad and cmc lock lods jle test mov push jb adcl and outsl popa cltd fsubp push test andb je pop xor adc cmpsb nop jg cmc in jb push add or fs hlt mov popf out add jmp mov push cwtl pop divb fildll pop push pop xchg push push lret cmp add int3 iret mov jmp loop pop mov mov fsubrl and pop jg xchg add and scas (bad) mov je sub incl push stos jecxz xor sbb xchg insb xchg shrb dec int push push imul clc imul adc or aaa push xchg and test imul lahf hlt xlat jecxz popa pop shr aam mov xor inc fdivrs adc mov or mov or jbe xor or pop jae jae sti ffreep popa out and out psubw clc add inc jge call mov cmp jae mov mov in push (bad) mov sbb jo test fistl xor bswap mov mov lret jnp xlat sbb pushf mov sbb pop cmp mov pop stos ljmp sti or cs pop xchg fst pop mov fs or sbb out and mov add inc cmc xchg pop repnz xor loop sub inc dec push movsb add mov (bad) pop lock dec cmp pop lods into fdivr pop and rcl stos (bad) push ret mov ss xchg cli push insb icebp mov out pop rorl stc inc cmp sarl jmp stos ret rcl dec mov dec adc or adc mov es rol cmc jp notb mov xchg push fdiv fldenv popf mov jp out mov mov orb mov js (bad) in cmp fwait out fsubrs pop fstl lret inc enter rorb mov cmpsl mov (bad) hlt int3 fstpl dec cmpsl jl mov sbb inc pop inc stc dec enter loopne add sahf in jnp xchg inc dec popf pop jbe xchg mov in (bad) out pusha sub inc insb or into lret fild lods scas sub sbb xlat (bad) hlt sbb cmp pop mov cmp pop inc fwait in fwait leave adc stc pop or jbe xchg jl inc ljmp sbb xchg fidiv jp pop and pop jbe jmp notb roll enter stc jp cmp addr16 (bad) iret push xrelease jo or jae scas push ss insb or inc add in pop bsr dec xchg mov cmpsl ja popa cmp xchg inc int push outsl inc sub inc or cwtl imul pop cs out cmc cmp adc push bound and fimull mov repnz push push lret rol outsl lods mov in jnp orl stc inc jecxz pop push pop pop addb cltd hlt (bad) jmp jmp mov loop dec or dec jo lret dec insb inc fdivrs xlat js pushf incb pushf jecxz ljmp idivl pop xchg and push sub addr16 or int3 mov imul or lea or ret repnz push jg jbe test ljmp or outsl aad lock inc sahf arpl xchg mov insb jae cmp add and out sbb nop shll and lds xchg sbb jns push jl mov int add stos push cmp push push xor mov lock insb js lcall out cmp adc aam sti mov fnstsw sbb jae sbb jp jle dec daa mov add inc in ss dec (bad) sbb cmc cmp fwait jp test mov fmuls xchg dec cwtl lahf fbld mov sub or and jae repz aas sub dec inc xchg mov xchg out sbb aaa in lret mov fsubrs pcmpeqb dec jg mov movsb ret cltd dec push incb movsl dec aaa int3 sbb lock xor aaa fsubl mov insb sahf adc pop out mov and aas xor stos mov (bad) out sahf sub cli arpl (bad) enter shlb sbb repz mov add scas inc jne dec add push das mov outsb std icebp outsb int sub fcomp or fcomp dec shlb adc fnstenv dec cwtl adc fdiv ds in xchg push lock push jnp insl movsl lea int3 and jg repnz sub mov and add jp and sub or leave sub sbb dec mov mov dec cmpsb sub mov (bad) push dec out xor jmp icebp mov pop or sbb or cmp cmc stos inc sti and mov xchg mov arpl inc stos adc dec push aaa fwait adc addr16 fdivp cmpsl jg loop mov cld add or mov cltd and sub mov push mov push or ljmp push int lods (bad) or divl push idivb lock push pop pop push loop add mov enter dec adc add push arpl cltd stos lret jno adc lahf inc or pop cmp xchg lea pop and xchg push dec mov mov dec out add xchg push fldenv inc mov xchg push adc mov xchg stos shll (bad) (bad) xlat add out addr16 and xlat icebp sub mov and mov dec jle dec test fisttpll sub es sti push pop and cmp (bad) adc push inc (bad) loope repz cmp stc sbb test ljmp lds pusha data16 add out (bad) out adc sub scas jp mov ret xor dec dec aam popf xchg push es push ja add inc push mov jae jl ret mov popl outsl and mov nop pop dec pop gs icebp push andl mov xor cmp fcomps jp notl add movsl les les pop lea or test mov push mov out aam push divb push frstor inc aaa in leave mov hlt mov pushf sub cmpsl xor push ret jle mov and push jb fidivr push (bad) or gs cmpl gs stc in sti in rcrb or xchg cmc (bad) sub stc push pop loopne pop add mov out int daa aam (bad) xchg fs mov push sbb imul (bad) out and test jmp (bad) into setge inc jns insb push cmp mov push mov mov and iret lods stos push or loop sbbl or aam test mov (bad) push add push jle sbb xor sub aam jns dec test fsubrl xchg pop shr lret push xchg in jne ret test sahf out pop add jg out dec lcall enter push jmp jecxz hlt inc and out jb add mov mov movsb ret mov fisub add test xchg test mov into divb xchg sahf cmp cs pop jnp (bad) iret (bad) call sbb (bad) sahf sub leave andl out cltd dec jnp xchg sub lret jae aaa pop add in outsl lock fldcw popa xchg sbb mov cwtl jecxz push int3 lods push mov std xchg ret or loop pop xlat sbb dec fsubrs or loopne sub add and or push xchg sbb movsb lock push imul add inc lock mov imul scas dec pushf inc push pop out mov cli popf push inc jo push mov dec pushf (bad) push pusha negl adc int int3 insb add push clc cmc or lock sbb push les (bad) mov (bad) mov incb mov push add and fcompl popf pop and or mov mov rol or (bad) jbe,pn loope dec std lds and push ds xor or mov jns adc xchg xchg add bound insl lret imul mov inc clc add repnz dec mov xor dec aad (bad) jbe dec and cmpsl mov mov pop xor rolb xchg daa push xor or mov mov lods mov mov sbb jmp sahf sub into int push dec xor push push cwtl add fisttp mov mov cmp fidivl cmp cmp xor xchg jnp data16 stos test (bad) push mov addr16 jecxz testb sub dec adc fcompl pop out jnp js roll sub adc cmc inc push push repz loop lea subl jns sbb jp dec iret int3 repz mov xchg cmp sbb in xor add jge dec push xchg jb bound int and jne jo stc pop popa imul mov out mov pop mov push xchg mov push pop int3 xor jne dec mov sub loop xchg add divl sub jecxz jns cmpsb sub jl lock jne or (bad) mov aaa sti lea das aam iret inc lods push add (bad) or adc xchg cwtl or push pop hlt cmp xchg loope lret incl and xchg push cmp add aam and mov xor add fsubrl lock pop les adc scas mov mov sti cltd adc sub jecxz clc aas add adcl into loop sub inc add leave outsl rorl cmp imul add jge cwtl mov cmp add insl iret sub (bad) or out (bad) jo push jmp adc mov xor loop ja repz int lcall sbb pop xchg enter mov add pop jns,pt push popl cld aas jle aas ret icebp lret inc ret mov stc xor mov mov addl stos xchg out sbb hlt notl out push mov mov adc inc and cmp sbb ret adc mov mov mov cld mov pop stc cmove mov fistpll test push mov pop push cmp loop out sbb leave inc bound cwtl rolb inc adc jmp lret mov or push mov xchg out xchg mov icebp fstpl sbb sbb mov jae xchg insb dec dec pushf test repnz subb into mov pop sub cmp lret xchg loope inc fildll xor push call sbb lret gs ds add mov divl xlat mov aad in mov push pop ficoml dec jl add pop mov jb dec xor inc iret loop jns mov clc inc jp mov jg jo add and pop fst (bad) pop adc sub out sub into mov sub out sbb outsl (bad) inc roll lcall mov push and and nop mov stos or push pop loopne mov loop dec or and cld fs (bad) and cmp adc ja xchg adc jp xor outsl dec mov into lcall stc cmpsb sub or jb cmp jmp aad stos sub and xlat jecxz inc nop mov daa or and pop adc add sbb add das push pusha xlat push xchg dec (bad) int shrb cmp std add insb jmp jge sub lds jecxz dec push and (bad) out aas sbb mov call data16 sub scas aas jmp inc ret scas out repz mov ja push sub pop dec add pop test xchg clc or sub repz pop or adc (bad) (bad) sbb fs loopne push xor push daa or (bad) mov sub jne push subl mov dec pop ss adc or push test fisttpl mov (bad) add xchg push popa mov dec repnz dec ret jbe lds jns js jbe jecxz add jp jle addr16 inc or test add cmp cmp daa jnp call sub aad xchg lcall loope std cwtl mov mov inc xchg andb aam test fbstp push push (bad) lods sub mov int sub lock inc and push push jle xor cmp rorl xor pop xchg mov sub frstor cmc mov push mov xor mov flds cmp loope mov out in adcl gs add scas jbe xchg jno xor int3 cmp add sbb fsubrl aad sbb outsb sub pushf dec jnp aad aaa out fdivrs test xor jo cmpsl lret mov push pop inc or push jae fcom sub fiaddl data16 into jmp scas ret inc test xchg nop jne (bad) (bad) jae ljmp cmp jno nop xor mov shrb mov jl dec fldl enter adc mov into jae movsl cmp repnz inc adc fwait push add sub and dec fldenv gs jbe insl mov notl ljmp into (bad) enter cmp hlt or jp les jecxz push push jg jbe xlat jecxz loope cmp or lret je iret pop stos mov fst decb push mov ss sbb iret inc inc ds shrb out ficoml pop push jo enter jb adc mov adc xchg mov and sarb lahf or cmp neg addr16 mov xchg lods jns mov cltd adc mov xor xchg lcall mov nop out jne fist test aad adc mov fcmovu adc jmp cld xor out dec pop loope movsl jecxz mov decl mov push xor sub mov mov push dec loop pop scas addr16 loope int outsb insl call push mov cli shrl lret or jno mov or sahf jnp and scas fisubr lret in out dec repz adc test fwait mov lods or mov mov data16 mov mov push rep repz adc (bad) in ret sub pop stos cltd and mov mov pop pop mov (bad) or insl pushf pushf xchg push ret bound and or aaa jl data16 repz int3 cwtl and lahf addl mov scas insl rclb (bad) xchg sahf mov test adc add adc mov ret pop xor pushf xor push fdivrs out jbe pop and add imul (bad) xchg ljmp sub imul pushf loop add pushf call sub into (bad) mov and into xor test or pop ret and dec fildl pop add mov pop je jo shr pop or out inc andb or mov outsb (bad) std xchg rcrb cmpsl jnp bound lret rcrb push imul fldt mov dec mov bound sarb cli int shl aaa or pop in stc cld movsb outsl in mov shrl push or and (bad) (bad) and pusha add push addr16 ljmp icebp mov (bad) adc adc push je insl sub mov lret sbb xor cmp jno out pop mov fdivl insl sbb jmp inc push int3 outsb std xchg mov hlt and inc shll sbb or cmp (bad) push cmpsl aam lahf xor pop cmpsb sbb jno scas mov (bad) repnz stos fwait mov gs sbb xchg movsb add fidivl mov (bad) xor jo cmp sbb stos xchg sub out orb (bad) sbb xchg loopne out (bad) pop xlat sbb xchg enter cltd push mov sahf stos push out add mov adc xor mov dec test and push pushf jmp lea stos ret adc adc subl mov shll ds daa sahf push and dec push cmp push test movsb loope insb jno out dec mov inc adc push inc fsub outsl sbb mov xchg mov daa outsl jle push mov dec lods fsubrp pop mov in fimul inc cmp js imul xchg add sbb test mov push loope iret mov in cmpsb lcall mov outsb leave push inc mov mov daa int3 ret pop aam out cmp in jmp xor aas out jmp xchg es icebp mov sbb sbb rcrl inc jno cmp loop inc xchg insb dec shrl sbb lds add push call in (bad) mov popf and bnd pop in nop mov mov jge shll and push cmpl test aad push cli lret scas movsl dec jmp loopne imul movsl jmp jecxz inc jo popa dec lods or push int fs add in xor mov enter add jne lods add ret sub push mov adc pop cld dec and pop incl (bad) inc insl repnz shr nop cmp cld mov enter stos (bad) or lods ja dec bound jae lahf push xchg mov inc js adc std push jmp mov daa popa cs pop repnz dec popf xor lcall inc stc aam jbe xchg push pop push nop (bad) xchg aam inc fstps outsb cmp mov adc mov mov loopne lahf (bad) jno sbb pop (bad) testl test mov jno lock jmp lods pop inc or repz add std das inc pop lret lock ja adc das std or das pop (bad) adc lods cmpsb or arpl into mov add ret jecxz inc loop mov movsl adc and inc loop icebp add mov dec or cmpsb out iret pop bound in scas repnz loop aas int movsb in adc mov mov mov dec mov mov cmpl jmp pop imul cmp daa rorb push lods enter xor icebp ds pop ljmp nop pusha rcl fcmove inc dec push std inc call add loopne push xor pop xchg mov jae push or or sub mov pusha jmp out mov imul outsb clc cmp xchg leave ret add pop xchg cmp inc pop cld pop mov mov dec cs and adc jle jg mov pop sbb loopne,pn sbb jne adc clc in movsl sub mov sub jmp or aas nop mov fnsave pop xchg sbb lock (bad) dec out jbe cld cld test push inc cmpl cwtl addr16 dec sub cmp pop loope test dec sub jle sub xor stos pop paddsw fiaddl push dec jg push sbb int loope jg sub push stos repnz pushf test push fs je adc enter adc data16 outsl aaa sti sbb js jp,pn dec cmpsb adc add mov xor scas in mov push push sbb adc xchg cmp mov sbb and pusha mov lahf (bad) ja data16 lahf lret xchg movsl data16 mov outsb mov xor jne and jnp (bad) icebp cmp sahf push (bad) cwtl out fdivs adc mov loopne (bad) mov divps je in insl div andl aaa mov movsl mov gs test adcl fstl stos sbb sbb in out xchg push push xchg jae pop dec int3 lcall lret add mov mov sub sbb adcl inc inc decb mov popf cwtl adc lods rcr addr16 das cmp push push pusha cmp sbb rcrl (bad) bound sti inc jae lds sub test xor push ljmp jg sub jg in fwait es int3 cs push jle das (bad) adc xor das mov sub loope sbb push aam lock or and xchg inc adc outsb outsb mov xor out inc mov das clc test pop movsl das clc or adc inc add das aaa xchg or xchg push cmp js adc jle jo lods mov sub fnstenv lods adc pop rorb fdivrs test cli xchg pop mov push jge or loope fild inc lods lahf cs mov cmovbe mov scas arpl add cmp inc mov movsb das (bad) sarl or cvtps2pd adc mov sbb mov cs incb stc sbb arpl or in rclb mov bound jne in pop mov cmp fidivrl out in repz in icebp enter aaa cmpsb jo jns,pn push xor aam fdivrs popf jns sbb xchg pause repnz subb mov cmp jp mov jns lock dec mov ds shlb and cwtl dec dec xchg leave cmp arpl imul rcrl stos imul inc push sbb push (bad) jno push push sbb pop sub dec pop mov jne mov repz adc xchg dec (bad) out dec flds lods sbb fisubrl lcall repz lea mov inc dec mov dec add xchg call subl js mov mov sbb rclb dec jl je test jl mov fwait pop inc add push icebp idivl je nop ljmp lret xor inc jp mov pop adc xchg stos push jno cld pop out clc add pop or cmp (bad) or push mov lcall dec xchg mov jae and cmp mov aas cmpl data16 and orl call inc vmovdqa lahf mov pop xchg mov pop das sbb and push xchg inc movsb pop push jge das pop scas xchg into cmpsb insl aad jle (bad) ja jl adc scas fcompl mov xor xor nop lods loop jmp aaa inc pushl adc fdivrl mov outsl add loope fldenv xchg fwait dec fcompl jl adc mov repnz dec add dec fstpt cld pop fisubr scas sub push pop insb (bad) inc jae sub mov or add jge sub sbb push fistpll imul adc pop push nop xchg sbb mov sub add mov outsb negl rorl xor jno aaa sub push jbe adc in xchg (bad) mov pop sub or inc (bad) pop push jb push jb inc add mov dec jle je or sti popf (bad) mov (bad) jg jo (bad) adc out jb test xor ss jle adc scas jno in dec out loop cmp popa loop xor lods or sarb test jno pop dec jmp jmp fwait xchg (bad) mov inc pop daa mov (bad) test add inc in or xchg lret jo pushf clc lcall adc sub xor out movsb cmpsl sbb lods push push mov (bad) and aam inc mov pop push (bad) stos push mov xchg ret mov (bad) xchg xchg call sub lcall cmpsb xor shrl xor (bad) and sub xchg inc loope mov sbb push pusha ds or push shrl xchg adc ds add sub xor scas mov ret or mov pop (bad) fsub inc (bad) xor enter movsl lods dec int3 sbb add mov sub lcall std dec or ds jne mov cltd jbe push mov cmp test je roll jl (bad) mov movsb subl (bad) fdivrl xor inc ds ss lock mov dec cmp inc rolb xchg clc xchg aas andl or int3 bnd je push lods aam iret add cmpsb cmpsl mov mov push and xchg and dec test or jae xor rcrl mov xchg andb in mov test pop fisttp int3 out pop pop pop arpl jne imul scas ret arpl pushf xabort mov inc mov mov mov pop pop test sti pop push mov sti aaa and data16 fwait cwtl mov out shrb sub pop in jbe xchg repnz daa insb in sbb sbb leave dec lahf stos mov inc aas (bad) jb dec frstor or cltd add popa mov popf popa add pop out jle pusha dec repnz mov inc pop das cmp and mov pop divb jmp sbb dec adc xor mov mov pushf ljmp ret lcall mov into int3 icebp sbb mul fnstsw popw or mov popa dec inc outsl fcomps into jp jo or inc jmp and dec int3 ljmp push insl leave mov dec ret mov jno test push push loopne cmp in push fwait adc jmp xor mov stc das add pop es xor push lret xchg xor cmp push adc dec repnz stos into insb ret pop sbb mov sbbw pop add jnp cld mov int scas lock mov adc jg pusha jg into cmp xchg xchg shll int (bad) out shld lea dec mov xchg cmp add call xlat mov movsl out ljmp in jo,pt sub rcr pusha in adc or push sbb inc js,pn ret mov mov adc sbb call mov mov aaa stos (bad) cli mov or xor inc push dec jecxz ds sbb fnstenv repnz shr xor mov adcl fsubrl xchg sbb imul xchg and fildll mov insb imul adc add stos add test lret orb pop push xor inc mov lods repz out or pop cltd pop adc in jne pusha push stc outsb arpl (bad) mov push iret jle (bad) mov mov jge aad in test das mov adc arpl sbbb adc pop (bad) sub mov in sbb mov add pusha or cmp cmc mov pushf xor pop lock adc data16 push aaa (bad) xor jl jle jg (bad) imulb lock push jbe clc push mov xor sar or sbb into inc push push dec dec mov cmpsl int3 sbb movsb pop lds push lea mov daa push adc cmp push add daa ret cmpsl xor inc jne jecxz insl movsb loope in mov scas mov mov sub mov mov cmp jl mov ja aad (bad) into mov imul mov les shll push pop sub jge sub add sub call shrl aaa xchg inc cmpsb int3 mov gs (bad) into pop or shlb cmp (bad) jmp test fsubrl (bad) dec inc dec lods mov dec add movsl add or lcall lahf dec mov and movsl adc or jb inc shrl pop (bad) mov mov lods push push push sbb hlt or mov mov sbb xor (bad) push fcomps xchg scas push pop sbbl rclb int (bad) xchg aas (bad) jne mov inc jmp add clc mov mov cmp movsb mov addr16 xor and pop mov or fucomp xor pop sbb ret inc adc (bad) push jnp popa adc mov pop lahf sbb adc fwait or cld imul dec dec inc or scas inc jl or pop cwtl ja cs or push lds mov dec ret out or cmpl stos repnz arpl mov pop (bad) mov dec mov or lods in popf fnstcw or jp lret loop aad scas xchg xchg cs aaa xor push jge popa mov pop out scas adc hlt jl and gs adc andb sbb add mov data16 test or popf outsb mov or push (bad) fs cld mov or add out mov aas test sbb aam sub cmp push push adc fidivrl sub and je test pop arpl in shrb sahf and lcall dec add sbb fstpl test mov sbb (bad) adc out sub pxor js or bound and sti mov bound or mov pop add or adc (bad) xor push jns scas ss add xchg cmpsl mov idivb add inc add iret dec imul inc xchg cltd mov daa adc sub mov inc mov jle jb ret ret shlb jbe stos jg loopne clc sahf in addr16 loope and push mov mov jbe aaa rclb insb ss fcmovnbe pop mov jb (bad) push mov jno mov nop loope rcrb (bad) mov not xchg push xor pop aam xor sbb push cmp imul daa and imulb push hlt fucomip sbb xchg in js mov (bad) in fidivl dec mov jne sub (bad) or sub pop add fnsave repz (bad) sti and lret (bad) inc les and cli jecxz xchg (bad) mov adc add mov (bad) mov jbe jge leave js jo sti ds loope mov ret xlat iret (bad) mov jae adc ret aad sub repnz pop sub mov sarb icebp int inc jp repnz iret sub push leave cs mov mov decl cmpsl cmp jns push loope or (bad) ss xchg int mov sarb and out addr16 jle xchg iret xor inc mov mov roll insb fwait in stos add jno ljmp sbb cmp arpl lret test fcoms pop jmp xor and sub pop pop sbb and jae sub mov lcall subl xor arpl loope cld fldcw xor lret add or dec mov pop out cmp outsb lret jne repz sub add or push adc std fistp fdivs hlt adc add inc or int3 loopne lret pop cs mov add stc sahf movsl in mov movsl sub xor fst dec pusha jmp mov lods in faddl test adc inc jbe (bad) call mov pop test aam add push or dec leave or addl mov inc jmp arpl mov sub les cmp (bad) jecxz clc mov or push jmp push push push sbb jbe dec rorb in mov pop cmpsl inc push repz and lahf jnp mov (bad) aad insl cli decb xchg xchg std outsb inc ja push dec ss mov or shrl (bad) fimul pop negb inc mov cmp aaa loop mov popa dec ret adc popa mov fisubr fs xor sub or xor add pop mov and mov in aaa (bad) ja pushf (bad) testb rol sar (bad) fcomp mov add jne loope,pn dec hlt loop mov sti (bad) pusha (bad) jns jp (bad) scas jl mov pop inc push sub xor (bad) jns fs sub pop loop idiv dec mov sahf mov repnz dec mov fwait mov fldt push mulb adc enter xor cld inc push lods scas add js sbb lcall dec jno pop mov stos int add cmpsl cld xchg call pop push push adc int3 sub adc inc pop clc outsl mov pushf jb ret sub test inc mov dec jbe insb and pop xchg ret pop push popf jge lods jb pop scas cmp sub fldenv rolb icebp ror repnz and fs xchg adc aad pusha xor xlat mov in dec mov cli xlat cli xchg outsl add fcmovnu dec mov test xchg (bad) lea fwait jmp (bad) mov iret cmp sti xor sub xor pop push mov decb sbbb popa aaa loope pushf or mov xor fcom add dec jg imul daa popf and cmp je xchg rorb fisubr ret mov cmp xchg sub add shll mov sub and mov mov sahf movsl adc mov pop sbb rolb or lock jbe loopne sar test aas enter jg add hlt xor mov add mov xchg movsl idiv enter mov push sbb dec int out mov xchg insl pslld loope leave xlat mov cmp mov std outsl (bad) sub mov mov or rclb mov mov cltd mov or dec fimul xor dec push fs xor add call (bad) mov sahf xchg lea enter cmpsl mov out adc jl mov adc lret mov jp aaa mov cs sahf addl out push lcall adc jae and iret jle sbb mov repnz pop nop lock adcl cmp lret or jae loopne cmpb je loop pop mov or movsb add inc les loopne repz jo xchg xchg cmpsb xchg jne imul loop cwtl pop pop lret and xchg inc fdivs cli mov xchg ss into (bad) jae pop scas push pop clc pop leave fsubs adc xchg (bad) or add push fdivrs aam icebp pop add inc push push pop push fstpl xor push cmp sub sub add gs mov mov insl inc mov or mov and subb and pop clc sub hlt inc jmp inc and jp cmpsl cmp or lret (bad) fdivrl mov popa cmp leave adc ror sahf jg inc ljmp arpl dec lahf jecxz jne test sbb or ljmp cmpsb adc dec pusha mov mov int movsb fs das sub mov sbb inc inc pop and inc lret pop in jg jl and ja jno (bad) xchg inc stc mov je push movsb andl out jle mov stc sub lahf pop adc jmp xor adc jnp in jne cmp lods xchg (bad) movsl sti and mov stos dec push (bad) pop push popa and imull xchg (bad) fbstp and iret js mov sub mov clc imul mov mov stos out sbb jle mov out in mov lods or push fs cli push mov mov inc push cltd or test cmc lock pop push (bad) gs clc cmp lds xchg fistp bound cs jmp (bad) mov out arpl mov xchg fmuls or or and sahf cmp stos lret ss cmp data16 cwtl mov clc mov pop cmpsl fneni(8087 xor pop jae cmp pop inc adc adc xchg push loope push mov mov and jno xor xchg shrb ret mull insl cmp out repnz sbb add xlat mov mov mov int popa dec imul mov xor (bad) lahf das int xchg push add lcall sarb xor out out cli inc loopne clc and cli ja test loope sbb jle lea (bad) scas stos mov (bad) pusha mov hlt sbb cmp pop cmpsl sbb aam sub dec mov test test or sbb dec lahf out pop pop pop mov xchg and cmp fucomip mov or fsubrs and iret ret fdivr enter fwait daa push jl mov jne xorl pop xor popf in or mov dec jbe pop or adc mov fisttpll push popa decb loope dec loopne mov push test (bad) adc inc xchg ss xchg mov cmpsl daa movl scas mov jno xchg xchg adc pop sub rolb gs cmp jg push pop ret aas xor mov mov cli pop mov sbb mov fdivl dec ljmp sbb add jnp fs add inc dec lods dec cmp jae pop arpl mov mov and or mov lret aas rol push insl xor cld adc push pop cmpsb ret mov adc enter movsb jmp push lds insl push ret mov addr16 xor les sbb add (bad) pop add leave adc dec subl add test lret fistpll iret aam push sub fcoms adc sti fsub movsl movsl pop insl call outsb (bad) cmpsb mov jne loope cld in repnz sbb hlt add dec mov cmp mov xor adc (bad) (bad) adc ret sbb (bad) jge (bad) mov mov and ja ljmp je inc jmp outsb ja cmp into fwait js stos inc notw and outsb cld cld mov lds cmp outsb xchg test test pop inc enter sbb add sub fwait into and mov sub insb xor xchg std flds adc ljmp mov push cmp outsl mov inc sbb in fbstp data16 xchg pop add out jne js dec data16 push mov addl (bad) imul cmpsl cmp or lcall leave push jae les lea xchg sar pop enter icebp stos js push push and jge dec dec cmp inc es ljmp push outsb jb frstor jge mov jno dec ja push xchg and int push mov pop push xorl dec sub rcr dec inc mov xchg std mov dec mov in mov mov gs ja xor mov pop (bad) mov ret int cmp adc in push mov jno shrl iret iret bound adc jo popa out (bad) mov push inc ret mov cmp ljmp mov xor adc push mov pop movl or dec sbb xor rol gs out sub lret clc daa push jmp inc sbbl aam mov (bad) push ds adc aaa xor adc jmp lods adc (bad) xor mov ret or mov inc jge push push sarl (bad) mov insb or or push rcll mov push inc lret loope xlat fstl dec xchg mov xor dec or loope icebp clc arpl push fstp add mov xchg insl pop mov loopne mov stc adc sbb pushf sub mov aaa mov idivl fs js test imul fcomip jp aam fisttpl inc (bad) ds jmp shrb push lea inc rcll pushf data16 or in cmp lods shr xchg popf paddq enter leave shl in push push ret lahf jnp inc pop test lea mov pop dec jecxz pop and mov mov dec inc stos ret aas sub int sbb mov outsb fstpl mov (bad) mov inc xchg mov stos mov add xor in iret add out cmpl test (bad) mov fbld stos (bad) add jns stos es cmp mov addr16 sub popf roll adc sar xor sub popa xchg lsl mov jb jbe call mov test movsl xchg jmp or or jns mov in mov mov fisttpl outsl mov arpl or (bad) mov loop dec xchg push inc and (bad) and lret push jge sub adc push outsb cmp pop stos movsl cmp outsl addr16 jge fisubr scas lea mov loope cwtl jle xor mov jmp mov cmp mov jns mov sbb sbb mov (bad) pop mov adc stos jae aam cmp mov push std cmpsl cmc and push mov jle fs aad fwait (bad) out stos push bound call pop inc repnz add jmp stos push imul (bad) mov sub mov dec jp (bad) fcoms push push les push push pop dec enter adc mov inc pop inc (bad) shrb fs xchg int lods scas ror aad mov stos mov jmp or fistpl jg cmpl divl pop xor outsl xchg xchg (bad) imul xchg sbb mov mov cmp dec jnp andl xlat inc mov pop cmp scas cmpsb movsb stos push sub mov loop and out inc mov jl and xchg push ss push cmp xor jp mov pusha mov dec jl jmp in push jl mov cltd iret xchg dec add ret inc xchg adc loopne push movsl adc (bad) dec jo out pop add aaa push dec outsl inc fisub shl dec xchg jge and add insl sub stos int3 arpl int3 sub inc push (bad) ds mov rcr insl std sti or (bad) imul movzbl int3 xchg stos jmp test and dec ljmp (bad) sbb dec lock cmp (bad) xchg (bad) fdivrp sbb ss sbb inc pop mov and mov xor mov cli lea mov inc xchg roll sarl (bad) jge inc jbe xor mov or (bad) dec mov sbb xor mov push mov inc cmp mov in jle test sahf cmc mov (bad) sbb ret push cmpsl push out inc popf mov and adc aaa mov xchg out (bad) cmp scas cli mov ret sbb mov push jb adc popa pop int3 rcrb mull arpl mov inc loope pop push mov (bad) mov out rolb das xchg addb mov add and imul dec fcoml (bad) cmp shlb mov cmp (bad) jae loop test inc lods in cmp sahf les dec xchg xchg cwtl pop push fldcw je mov sbb pop add lock sahf (bad) sahf and xor cltd and cmp enter ja mov icebp jno or andb aam cld into sub rorl pop jmp mov adc incl xor push and and xchg dec jb cmp mov mov sub test xchg dec fcom jnp dec out inc scas nop aam adc inc repz or cld aas sbb sub out inc (bad) jmp adc je bound xor in test sahf mov cltd sbb rorb sarl inc jecxz mov pop xor stc popf cs leave add aaa fdiv jns mov and stc mov arpl adc cli xchg cs int3 inc fldl insl mov jnp sbb fldl (bad) les push pop cmp cmp inc add push mov cmpsb dec dec add sti xchg test mov into adc lds xor or xor adcl das cmp mov sbb clc (bad) rcrb arpl in or mov in sbb or mov mov dec adc lcall add mov mov test mov mov int3 popa ja push ss ret dec mov sbb add inc bound stos test xadd into nop fsubrp jae leave jbe enter repz (bad) testb xchg or and arpl dec js or xor (bad) ret leave mov loope int ret and dec test cmp movsb fstpt mov mov sub jle xor mov stos aam jmp test mov negl ficompl sub jb mov enter jnp xor in xor ret cld test push popa (bad) hlt mov add fsubl sub es leave xor mov stos in adc fwait sti (bad) sbb inc jp in mov add aam lret pushf cli dec scas outsb (bad) xor es push jge sub test insb fiaddl mov imul dec imul clc popa ret inc add pop xchg insb test cmp iret int xor iret push daa rorb jbe call and int3 mov mov int popf jb jle mulb insb dec mov aaa jnp cmpsb int3 lods ja or addr16 push sub movsl adc loop xchg sti inc push and bound mov ljmp hlt cmp cld jecxz sbb mov outsl pop push jle xor xor cld (bad) pop mov xor (bad) sub add aad adc and pop cmpsb insl rcl pop test jle jae jne pop push inc aad es rcl push adc enter loopne mov jp lret inc push (bad) xor mov mul mov lret insb inc loop push push mov sbb and sub sbb sub jne adc ljmp enter dec data16 rcrb push int push inc xchg adc or add movsb add stc ds lret leave mov pop sub into lcall das push outsl loope subl fild cmp int3 popa or dec insl mov pop bound push push rcrl jb lods sub imul js or pop cltd sub jnp inc jmp gs (bad) or int3 xchg sub mov sbb addr16 sub cmpsb sbb mov or gs xor add sti dec (bad) clc shlb pop jbe and stos push xor ja sbb push mov sbb inc xchg xchg jno adc cmc (bad) dec adc pop add mov ss mov pop mov shrb inc fisttpll push sbbl fs pusha aaa jb jne pop hlt xor loope xor push jmp lods or xor je (bad) lret xchg lea test out mov pop push pop jl arpl aaa cmp out inc xchg rcrb fidivr xchg clc or sub inc rcrb mov fildll push aas inc idivb mov xchg stc orl cmp inc addl push out mov sbb fadds fnstsw pop push sbb jle mov test sbb xor ja incl mov xor mov adc mov sarb ljmp add sub pop jae cmp mov pop push repz jecxz fidivrl mov test mov xchg mov jmp ljmp aas movsb sbb bound ljmp xchg sbbb sub in cli cmpsb repnz lret fsub or push call insb test arpl sub mov or stos cmp (bad) push loop adc aam in lahf jmp in mov (bad) lock into mov cmpsb aaa aaa push out mov xchg add mov mov adc lock sbb push jge pusha sub mov xchg jbe loop sbb mov sub push jle rcrl test cmp (bad) inc dec ret adc fild cld xor cltd (bad) pop lret and (bad) xlat clc sub dec test cmp jmp xlat in sbb pop sub imul frstor scas loopne sub cmp pushf cmc stos test pop xchg mov xchg ja inc fadds stos stos cwtl les mov int3 inc stos xlat lods into dec out testb pop inc dec mov sbb cmpl addr16 xchg fstpl xlat adc xor stc dec in jle xchg stos add push (bad) cmp dec (bad) cmc mov mov mov (bad) in or ret (bad) add addr16 xchg rorb sub xchg loopne popa es cmp mov and inc insb (bad) mov fs mov popf aad adc je mov dec lea std test test lahf (bad) icebp jnp repz (bad) xchg test mov movsb sub mov lds popa mov pop adc pusha mul jb mov bound mov test (bad) (bad) clc mov lock and cs mov pop push push cmp and or out push jb or into push imul add or subl or rcl cmp faddl inc push repnz jns test mov mov push scas dec std adc jo repz imul scas adc add (bad) xlat xorl and repz push pop mov fmuls jns xor shl fcomps mov ret mov mov test icebp or movsl adc out mov fsubs inc test fdivrl mov mov out (bad) daa imul outsb shr das push (bad) push xchg sub mov mov jno not shrb in mov push mov shll andb or into int mov sbb jns mov push je hlt out lds xchg test test lock scas stos xchg popa in mov add mov lods push mov jo dec jae adc dec and (bad) loop subb sbb dec ror pop les hlt pop outsb or in cmp sub test out dec mov outsl cmp lds subb ror fxch pusha or pop or test int3 std (bad) xchg sbb fisttpll scas pushf cmp divb lret mov mov sbb test (bad) lock loop xor lods out xchg pusha (bad) mov cmp xchg ss mov xor out fsubs imul cmpsl mov sbb rcrl fistpll adc xchg movsb cltd fimull cmp jl push xor bsf or adc (bad) std sarb and popa (bad) es das (bad) repz arpl dec test (bad) aaa push sbb aas dec xchg and lock jbe das xchg (bad) push push (bad) fwait cmp jnp aad fildl test js fisubrl sub hlt cli decb aad fwait sbb scas adc rcll pop push xchg jnp (bad) mov cli in cmp mov incl or mov inc and fwait add aas and push inc stc and loop insb gs ss lcall ficoml in test (bad) fistpll mov inc jo sub mov sub cs pusha stos insl push inc aas mov jle pop pop sbb mov sahf fcoml (bad) rorl xchg and pop xor in xchg mov loopne xchg push add jle inc andb cltd arpl sahf cmp pop xchg mov jp fnstenv bound adc mov test xlat in (bad) lahf loope sahf aad push and cld mov jns xlat sbb repz sbb lods mov xchg sub jle lock scas repnz jbe dec inc out xchg add inc xchg xchg pop sbb push in dec int sahf aad mov and dec xor jecxz lods jp and jge in jne clc mov dec pusha cltd (bad) jo repz inc es hlt dec lahf mov mov rcrb cld lods lods jmp dec jbe and cmp jns or or je into xchg jbe and jne lret mov xchg cmpb ret ret rcrl js fsub mov xchg adc subb jp sub push movsb adc rolb inc (bad) int jno xchg adc lds dec pop int movsb pop jne push mov adc dec xchg or lea in inc testl data16 mov (bad) icebp loopne inc pop jecxz or dec mov jecxz faddl xor push movsb lret xor popa mov fidivl or sbb gs cmp loope sub mov push pushf repz jo repz clc ret mov scas sbb shr jbe imul push sub and lcall rolb pop ror xchg (bad) mov mov cmp shrb mov rcll xchg xor nop cmpl mov mov popf mov xchg cltd cld fucom loopne xchg pop (bad) (bad) pushf inc xor lods idiv shrd gs out out aam xchg ret loop or aaa dec xchg fmull lcall and push xchg mov mov addr16 push add addr16 ret ja jbe mov xchg add repnz dec mov and cmp aad and outsb lret xchg add adc and or jg xor pop and arpl out add push sti fadds push xchg pop flds push cmp sarl sahf nop (bad) pop jns out jmp test fistp lods rolb xchg repnz sbb add inc jmp test sbb jmp jge test dec mov xchg xchg sarb and push push out xor shrl and mov (bad) (bad) add push xor push stc xor mov ja leave out jmp lret mov daa adc and jmp outsl ficompl sbbb or cmp inc cwtl mov and ret out std jmp sub xchg xchg push pushf stos add cmp sti test (bad) addr16 int3 jbe roll adc popa cmp ds jb add aam and lret add sahf and subl xchg xlat int3 add lods fidivrl mov stos inc mov mov sbb out (bad) sub dec mov sahf scas stos jnp les dec stos jmp adc popa movb fstp iret jecxz in or push xchg mov in inc out stos andl and (bad) jne jbe fild jle addr16 out jo fcmovnu jecxz add push bound dec mov insl andl pop rcll popa mov inc jo lods push arpl fdivp and in pusha mov cs arpl dec or (bad) icebp (bad) xor out cmc test jl or mov gs aam inc xchg sub xor inc pop mov ja sub push lahf push mov into lret lock add jmp dec sbb sbb test (bad) stos into jg dec cmpsb roll (bad) mov or push pushf movl iret cmp push mov imulb pop fcoms inc pop pushf push arpl jb cmp inc sbb jmp into mov (bad) popa pop fwait and push add xor int fdivl aam sbb loopne outsb rclb push gs pop incb lock lcall stos test int sbb jecxz mov mov sbb pop out test (bad) cli (bad) or pusha mov out clc scas leave adc aad addr16 add shr cmp cmp mov daa js sub jae pop xchg cmpsb in (bad) add mov mov inc xchg mov shll repnz in repz (bad) mov (bad) loopne inc sbb popa aaa mov sti lcall sbb hlt scas mov (bad) xchg jbe int mov push test and int inc mov jecxz pop or lods lret je jbe jae add jp out jb xchg sub push js jl add (bad) in jne xorb mov mov arpl (bad) sbb mov aam inc push daa aam mov int mov or cli int mull mov ficom and push icebp setae cwtl mov cmc adc lea mov mov inc add rol dec (bad) icebp mov xchg loop sbb lret lcall negl hlt xor push iret imul mov pop fnstenv push mov cmp gs dec test mov imul enter sub pop jbe pop inc sub hlt imul mov dec dec leave rcr scas jbe sbb add xchg xor fildll adc inc rclb jno ret mov into and ret mov mov fs or pop push clc stos stos cmp cmp pop and sub cmc push lret xor add or jmp lcall pop insl roll xor gs mov in std sti dec cmp sbb push jbe cmpl jmp jb dec sbb xchg jns,pn (bad) repz push bswap pop sbb push ret add sub cld test xor push mov and pushf hlt pop sahf pop pop pop xchg addr16 fbld ret iret xor xor nop or xchg lret jns cmpb pop leave xor fwait inc dec aad pop lock movsl push adc hlt loope negl lods inc xlat daa sahf hlt (bad) mov test push pop inc pop in and repnz sahf icebp jo mov inc inc sub dec loope insl jmp jns repz xlat add pushf xchg std ret inc jae inc in and bound dec lds dec mov mov stos neg push adc in adc ljmp jp sub push addb bound jmp sub push sub clc dec call sbb xor and xchg dec ljmp pop push add xchg data16 lods cmp movsl fidivr pusha add mov test mov int3 jmp mov jb pop xor mov sbb (bad) xchg mov jns,pt dec aam repnz sub jo jg pop ret mov mov jp pop pop inc stos mov outsl data16 dec test sbb push sbb in ficom fdivl daa xor and lret into push and inc stos pop sbb xorl test add xlat pop int3 add stc inc cmpsl or push mov fsts cmp jl gs repnz or int3 push in shlb (bad) sub mov ja loop pop addr16 add sub outsl enter sub pop sub out inc scas fistpl das sahf sahf movsl dec jmp pop int mov lds push adc xor push pop push aad mov bound add insb or mov xchg out mov or pop (bad) hlt jl xchg cmp mov sbb inc repnz imul arpl mov dec mov xchg repnz push inc mov mov mov ja aaa and loop mov or dec in sub ja bound ret popf lcall lock pusha sub xchg pop imul push inc test sub push inc test cmpsl bound lcall (bad) xor xor fs xor repz in cltd push (bad) xchg pop in mov cli cmp flds mov add sbb lods lcall pop cli push xchg in ret fs push adc inc push sub cmpsl leave and jp in push or lret nop (bad) int3 rcrb lea lds jle inc popf ret sahf outsl insl jle or das dec aam mov sbb push or cmp adc ret ljmp fnstenv (bad) mov andl xchg jp (bad) (bad) sti repz add fcmovbe out into jp insb shll cmp dec pop fs jae adc repnz xor leave push stos rcll lds test sti mov sbb aaa sbb or bound mov push pop enter mov hlt lea mov cmc xchg cld lahf pop sbb in gs xchg push fimul and js mov jecxz jg insl xor mov in (bad) arpl push or aad mov jb enter mov mov in push stos adc xchg mov iret sbb sarb rep push mov mov pushf imul mov les (bad) ja pop pop orb pop and fdiv pop or stc into jle pop out out or adc inc out inc xchg mov sub mov pop test mov ja pop ds (bad) (bad) cld and mov pop xchg sbb adc or adc loopne hlt xlat jns mov dec sarb in rorl push subl mov mov insl cmpsb ljmp fwait lahf xor out mov fsubrs pusha (bad) mov and pop dec xor cld adc pop aam mov sbb dec rorb mov push adcl xchg inc (bad) icebp nop outsl ficom xchg cmp dec repnz (bad) mov pop jno mov ja mov pmulhuw mov mov inc shrl jmp clc (bad) lret bound cmc pop sti out cmc int3 jg mov popa jne xchg das lds mov and in addb pushf repz cwtl stc xor pusha pushl jbe add xchg sub (bad) fisubrl xlat adc lock int mov jp push dec pop mov sub mov out loop jo ss fstps rclb pop add or (bad) test inc xchg shrl cld (bad) std (bad) push add rcr and add cli lds iret xchg stos inc dec (bad) addr16 adc das movsl add push jge push bound iret roll into adc mov in fcom xchg lcall inc add xchg popa repnz inc jmp pop dec cld sbb push xchg arpl outsl inc aaa sub sbb sbb dec ja pop sub mov iret push jo sbb in (bad) jge (bad) lret mov adc pop dec xchg cmpb daa push fs pop xchg pop scas mov xchg inc popf jb dec ret sbb sbb cwtl cmpsb xchg pop movsb ds mov push sti lea adc lcall popa lahf adc xchg jle push inc inc jae sti test scas call push je rorl movsb insl (bad) or ffreep ja lods mov mov dec push mov sbb mov push das and add out in repz xchg push into fmul cmp (bad) les adc adc pop fwait mov jo xchg iret push sub jmp loop es cmp jge mov notl push xor lock push int3 or cmp rcl dec pop jb data16 jb cmp mov sbb loop jp jl dec jg xchg xor inc pop mov (bad) xchg ret dec repz mov jmp jne lock mov xor subl rorb imul clc outsb call clc sub cmp push loope cmpsb xchg dec sub (bad) stos out adc sub push push andb shl pusha push mov out call pushf inc add ljmp adc outsl mov test mov or jmp sub cmc cmpsb lcall xchg xor popf adc dec outsl or adc jecxz dec insl mov scas push test lret cmc jmp or inc test outsb or jbe cmp ja fdivl bound popa cli ljmp pop aad and addr16 mov call dec in or cmc jnp std cmpsl (bad) js movsl dec jae jae lret adc test in fild and push push cmp dec fnstcw and sub rolb sbb add jge mov sbb es inc lret jo cli enter jne call andl add inc ror das pop jbe nop orl jle fcoml cmp mov insl cmpsl test mov in sbb mov stos add jns imul sbb sub lods xor fimul ret mov dec jl inc mov dec and mov fmuls push cmp add inc out xor push push insb mov fs movsl add aaa rclb sub neg push and mov stos nop cltd jnp in orl xchg adc pop popa loopne adc fcomps (bad) mov pop lods call outsl cmpsb call les shll js push dec shr lds cs jno cmpsl sub cmp xchg (bad) incb xor pop rclb mov test mov pop dec jecxz sub jle or shrl es push fisttpll xor add and (bad) fstps cld ljmp pop enter push push inc ds aas inc cmc (bad) ds outsb push jge jecxz (bad) lock hlt adc xchg sub inc into sub xchg (bad) lret gs stc shll scas cs mov xor inc pop xor movsb mov jo push and jnp adc sbb iret pop into jp scas sub (bad) adc in lret sub inc push pop pop lret cwtl imull (bad) fdivp dec inc push mov xor inc mov shrl repnz inc mov mov daa idivb pop aad sbb pop scas es in ret mov icebp add sbb repz imul pop xchg mov icebp jg jae inc jge jno (bad) dec ja lock cmp push insl das dec or jns mov pop cmp or pop cmp lret push cmc (bad) cmp iret lods dec pop fisubl fisttpll inc in push mov adc call xor rorb out loopne arpl lcall daa (bad) scas enter dec test les mov xchg or xor cmpsl outsb leave push bnd inc push mov adc lret push sub jecxz push frstor aaa jle inc sub ret dec loop inc sbb and inc fwait stc xchg push fisubr dec gs jmp (bad) inc (bad) fidivl push cmp negb adc test scas xchg mov inc cmp sbb push xor cmp jmp sahf mov test adc aad sbb mov mov push lcall in add loop add loop dec ss xor dec lds adc jae jmp outsl jp popf xlat divps imul les fnstenv xchg mov pop loopne xchg sahf adc notl mov mov and push int insb lods les pop (bad) push lahf jne fdivrl (bad) cmp sbb jmp ljmp jb xor ret mov push ds xchg lea (bad) scas das jne and add mov imul mov imul outsb (bad) cmpsl push jae inc jne mov imul push (bad) movsl mov ja jmp sbb and lret inc push fcmovnbe sbb xchg aam cmp mov sub dec dec fmuls sub pop mov jg adc or push lret in repnz and dec pop xor jb sub call hlt aaa sahf jl (bad) xchg rcrb outsl jmp sbbb mov (bad) and jae mov xchg ret (bad) mov movsl (bad) mov std testb fwait jns push (bad) mov and daa stos nop scas cmp mov out in or fcomi pop cld xor hlt dec out push shlb jmp push mov into (bad) xchg repz add fistl call cwtl sti push popf fs dec pop les in repz pop dec mov test pop gs test xchg mov das pop mov stc adc or mov mov arpl xchg push repz (bad) push pop cwtl pop lods and mov rol xor lcall adc jmp jb mov enter mov xchg jns rcll (bad) aas in cli loopne and test mov adc loope add mov xchg adc in push sbb xlat cli mov sbb and or mov and jmp sti and mov fist fwait inc (bad) in mov insl mov icebp xor dec mov (bad) cld pop roll out pop clc jmp cli inc add jns stos (bad) ljmp mov aaa inc sbb int mov mull lahf pop add aam stc mov decb pop sub push hlt add jl push jne dec imul mov pusha stos int movsb andb loopne in mov adc daa clc mov fstps sbb stc cmp push add sti sarb gs xchg lea cmp pop icebp or dec (bad) lret popa insl outsb out ficom movsl dec push dec inc clc aad dec and pop add mov adc dec mov enter or loop stos sub inc xchg mov aaa and ror or jg lods stos mov popa (bad) mov mov (bad) jb push mov sub rol bound movsb mov mov popf loope push mov lahf dec sarl mov dec add mov loope lock ror inc fs fnsave sbb mov cmc and hlt stc pushf pop loopne dec mov add sbb add lds jne test sbb daa fisttpll inc mov or mov xchg mov test insb sbb push test cld inc sub outsb in lds lea int3 adc lcall or add or aas mov popf stos out cmp mov fsubr mov aaa rolb mov xchg sbb xlat loop push aam xor arpl mov cmp in daa popf fistpll sub ja add clc test or lcall scas or aas cmpsl and pop add dec mov mov and mov std pop inc das or lahf inc dec push adc adc jo xor ljmp popa shl add adc outsl ret stos or jmp xchg insb sar xorb push xchg jg jecxz lret jg out xor push push dec pop xchg dec icebp push push repnz ret fimull rcrb mov mov lret pop rol lods sbb loopne (bad) iret sahf in sti clc addr16 jno jg out xor (bad) fs or sbb data16 rdpmc stc jb loope adc (bad) adc mov jge pop testb popf dec fnop mov jl jns adc in mov shl and lock gs sbb imul adc push roll xchg (bad) cli mov dec cs enter out cmc pop lods lret ljmp dec xor xchg or out daa inc loopne push and mov aaa into int mov leave rorl sub fnstcw popa lods ljmp and xor arpl mov sub dec pop (bad) sub mov push mov outsl sub std in jl gs push scas jmp jp jecxz outsb lret lea and adcb cs into rorl mov cmp push jne pop inc inc mov sbb fs inc xchg hlt pop (bad) mov bswap cmpsb (bad) adc cmp cmpsl sbb jg adcl mov push outsb orl mov fadd stos jae jno dec pop ljmp outsl jnp jo mov add xchg xchg fsubl lret mov cwtl out mov mov xchg lds mov push jne orb data16 mov xchg adc js adc adc mov add xchg popa xor insb xor push hlt mov add dec adc ret xor xchg add ljmp pop mov jae pop cmpsb fs test popf push push xchg xor out cmpsb jge pop fcmovbe lea inc xchg (bad) sub adc cwtl jae lods mov dec pop sbb dec test insl and sub mov sub xchg inc xlat into out mov pop jae ss ret xor pop ljmp mov (bad) in add mov gs jg adc out int div jecxz cmc in pop pop mov movsl push sahf mov xchg nop xchg sbb iret inc dec aam xor loop sahf popf aaa popa pop pushf fisubl mov rolb in cmp sub or mov adc nop jp xor push push sbb ret mov fsub pop sbb les add mov pop ja sub sbb inc lret mov dec cmc mov dec nop cli and mov inc and lcall sbb addr16 sahf xchg clc xor push jmp push pop out mov lcall pop xor pop dec mov mov inc mov stos pop mov inc dec cld test pushf (bad) mov aam int3 and mov jmp fwait mov pop mov sbb lea ljmp adc mov push bound dec mov int stos arpl and mov push pop inc sub int3 add clc add lahf (bad) movsb popa imul adc sub (bad) ljmp add loop repz lahf test mov cmpsl hlt xchg (bad) cmpsl cltd jp gs test mov test ss push aam cld insb aam lret and adc dec in dec and fsubrs adc gs divb mov dec jne addr16 jo movsb loopne pushl mov mov lods pop adc idivb ss repnz xor icebp inc mov add hlt out test push inc adc mov pop sub xorl or or sub xchg fs mov adc lods lahf pop sbb lods stc (bad) jns movsb hlt cmpsl pop mov cmpl jnp (bad) (bad) adc mov outsb xchg pop cli je loopne inc jnp scas test mov push cmp mov lock and out jnp xchg enter inc jnp loopne inc ret push rcr adc fdivs dec notl (bad) mov (bad) push xchg leave jno jge dec (bad) (bad) jp dec jne aaa cwtl mov sti and sbb fadds jns mov adc cmpsb mov in hlt movl fwait dec ljmp push divl inc xchg addr16 jl (bad) xor mov adc call pop xchg ret cmp dec out mov test cmpsb mov into pop mov xchg xor fsubrl inc inc js inc and inc jb mov mov addl mov xchg cs adc lret push out mov loopne mov xor lods adc mov xor and push (bad) aad leave adc fidivr cmp out es sarl mov cltd jno je mov int dec aad cmpsl les mov (bad) dec and cs cwtl fisubr pop sub js sub popa nop adc xchg mov out fidiv nop icebp (bad) and out xchg push dec push jnp mov jmp cmc or pusha movsb push xor (bad) int3 add inc add jp push pop xor cmc xchg xor fwait or pop push repz psubb push leave pop xchg (bad) jg inc movsl sub hlt shrl pop jae andl vpshufhw test jmp es push sbb aad push sbb ss shrl mov mov dec arpl add jno push test setl dec out cmp add mov mov movsl lahf insb hlt mov out xor mov out dec add ljmp push cltd mov push sbb xor leave cmp xchg adc mov icebp sarl inc push dec fsubp mov sub push sahf push sbb lcall mov je ror movb jmp pop adc cmp gs and dec inc int3 outsl mov insl repz jg dec jmp and rorl add lods add adc into lea mov stc fnstsw inc jg imul and push mov (bad) mov sbb cmp movsl bswap pushf out sub pop push stos xchg sbb add fbld jns mov inc sub jns sar cmp push dec int3 clc mov sbb push push inc rep fs movsl and test xor and mov mov mov pop mov sub mov or pop daa sub adc lret jecxz cs out outsb inc sbb hlt adc cwtl cmp lea pop fldenv test notl out sub ljmp mov jb fsincos mov sub call xchg jg mov or push add push inc fcoms nop jae xor ds or jl add xchg mov fcmovnbe jp jecxz inc xor dec ljmp (bad) in add out jnp jmp dec or xchg adc stc add and inc cmp imul dec or cmc dec push pop sbb ds sbb dec cmp in (bad) pop sub test xor push mov mov fstpl aas jns ljmp jp cmc arpl adc mov pop cmp xor mov aas inc inc (bad) icebp rorl xchg int3 jo fcoms pushf mov sarl neg ja xchg (bad) push push cmp or sub stc cmc push cltd inc imul jnp icebp xchg outsl push addr16 add aad cltd dec mov repnz xchg mov cmp jmp inc cmp mov jne mov (bad) mov insb gs and (bad) mov out ret pushf push mov ret out pop mov push push add aad fstps mov xor mov arpl mov scas sarl pop sub rolb or aas mov gs flds push inc repz mov data16 fildll (bad) out les and test fwait xor xchg sbb pop sahf xchg fcomp push sbb fsin stos (bad) in push jl fwait xor (bad) push pushf movsl insb stos pop rcrb xchg cli cltd add ljmp cltd pop out dec mov lods mov aad xchg pop pusha jno and adc push lret pop sub fdivr fwait stos add enter or leave inc (bad) fnstcw arpl lret mov pusha push clc mov enter pop rcll cli or adc popa mov daa ret mov ret pop aad mov aam int3 sbbl ss cltd lcall sub movsb ja aas pop cwtl roll jno mov add out pop out push adc add adc adcl in dec xor mov and ljmp or dec scas mov aam cltd das mov or sbb imul sbb push les in xchg inc js xor lock push out test fstp test and (bad) or dec xor hlt fisubrl mov cld mov rcll pop mov cld sbb cltd mov and adc ja mov mov sub (bad) fs shrb insb scas push aad xchg cmp xchg cmp into fucomip sbb or arpl cld fucomi imul pop dec sbb push mov push add mov imul xlat mov ficoml fiadd loop aaa call rorb mov or cli sub or mov and push add sub inc ja jl sbb aaa xchg cltd xchg addr16 fistp mov shl loope jl ror dec push mov jb ljmp es push jge mov xchg and je push lock mov call mov xor sbb (bad) loope in les (bad) adc scas mov xchg push fldl jmp gs out pop and outsl cmp mov add mov popf cmpsl movsl xchg scas mulb arpl push cltd sbb popf dec or (bad) (bad) pop jg (bad) movsb fcompl pop jne xor add test cmc mov inc xchg ss shr loopne jl push (bad) add xchg cltd int3 pop lcall mov in cmc (bad) pop test dec fnsave cmp std fs mov sarb mov leave shl cmp push sbb and or (bad) fnstsw mov mov and ds push jmp add icebp and xor cwtl mov or in or lea lds dec out aad in jl inc divb jae sub add cmp mov dec jmp inc imul lods push hlt mov xor jp repnz push inc push fstps ljmp jg jo inc fwait cltd (bad) movb aad rcll les jecxz mov or jns adc add out outsb add mov (bad) out add test jmp lret lahf mov and pop inc in iret hlt (bad) jge xorl ljmp xchg rclb pop sarl xchg xchg out stos mov xor bound mov test (bad) out adc push mov std pop (bad) es std jae leave xchg mov jg mov push inc or mov stc movsl movsb cmp inc int imul push mov dec jb cmc mov mov add cmp xor mov jb stos and daa jmp dec scas jecxz arpl push decl nop push dec mov inc xchg jp mov or xchg xchg xor xchg stos fidiv jp mov and repz aad pop and out sub push fs mov push pop dec mov shrl pop inc aam mov adc movsb dec cli cmp fwait in jno jg jae xchg or jo cltd in jae pop dec jmp (bad) cmp rcr or cmp pop ss jnp cld in popa push insb add enter subl cmc cmp pop jns mov sub in mov lea fstpl push scas or mov adc jp or scas nop add outsb std sti pop mov fdivl mov pop xor push dec ljmp je stc inc jnp cli pop inc fild lock add cmp (bad) int or xor fmuls and mov loope out sub mov jecxz ret sbb mov mov ds dec cmp jmp out out cmc mov xor je stc xchg push in (bad) sbb or pop dec loopne sbb outsl cwtl cs cmp std pop push in rcl lret mov lods xchg ds add popf shlb aas iret dec or and inc shrl inc mov push rorl or xor dec lret dec add mov add cmp dec pop jmp and pusha xor into das cli add dec or pop orl das dec loope das rcl xchg pop pop bound mov stc aaa fisub mov inc aaa lods push inc cmp movsl push ret mov mov loope mov push leave mov pop repz rcrl mov lds aad mov ss leave push push fstpt iret ficompl iret mov les aas int3 adc pop stos js gs pop dec lock scas cs sbb xchg sub pop mov inc adc cmp enter int cli push and ret adc push fucomi adc jb add mov jae cld aaa jae mov pusha loope pop aad ret xchg rcl out inc lock outsl sbb das lcall adc cltd dec stos sub in lds jle loope mov xor or push lods jle movb or sub push mov hlt jns loop pop pop add dec push and mov xlat pop jp or sub dec add stc mov pushf aas cmc sbb sbb out or negl scas ret inc std je sub movsl xchg int3 popa je sub cltd lds (bad) lret xor cmp (bad) mov xchg jle hlt out jae (bad) pop adc mov jae es cmp ljmp insb je jne mov daa icebp dec jb cmp test fistl adc fidivl adc add push push fisttpll mov rcrb (bad) es or out adc push adc insl jmp movsl pop lret movsb mov inc pop and pop dec ja push rclb out xchg je adc pushf mov int3 mov cmp outsb sub popf mov sub (bad) sbb xor jle fistl mov dec xor push sbb sahf (bad) jno cmp nop xor or (bad) mov adc push out jp push adc mov (bad) imul pop popa pop ds adc pop cmp arpl fbstp inc stos xor adc adc xchg mov repz jae adc pop jb jne std bound loop and lock nop mov cwtl push popa outsb mov in lds daa cmp cmpl mov das sbb xor shl pop xchg push faddl pushf fwait add (bad) mov adc add pop clc pusha cmp inc mov cmp imul and cmp mov fucomi cmp inc or push add jnp les mov adc ss es pop mov add cld mov sbb add xor hlt loopnew popa divb hlt mov xchg mov repnz push test cmp call xchg jnp xor hlt leave and (bad) pop mov push cmc jmp xor scas push out xchg xchg rcl cmpsb enter add add stos jbe test xchg pop xor sub int cmp es adc adc pop pop inc push mov jg push xchg enter sbb mov fildl pop mov fldcw push lds xchg or cmp dec xchg sbb js scas mov sub or lods cmp es inc int3 push into aad inc mov (bad) bound mov aas mov insb hlt pop idivb iret add repz inc inc sbb mov lahf mov mov imul mov imul mov adc mov je icebp rep les fnstenv lahf or xchg xchg mov and sbb aas mov lahf pop cmp fild dec les dec jp aam sub enter (bad) test pop call stos and daa clc jmp push push dec pop sub xchg out jecxz call add mov (bad) fcmovbe cmp jo jb xchg (bad) in (bad) mov loop jb jl das loop arpl add int jge xchg lahf fldl pop mov or das xchg scas mov sub pusha inc psubsb out rolb lods int3 pop push cmp sbb inc dec jl sub sbb push xor push movsb rolb leave mov add sbb aaa insl sbb mov in call cmc loopne jns dec test pop and or pop ljmp (bad) xchg pop cltd fistpll mov push inc (bad) pop push shrl jns sbb add (bad) mov repnz add cltd daa sbb outsl aam or lock mov pop mov push (bad) in (bad) imul je push lds mov cs (bad) ljmp imul lahf cmc mov xchg dec repnz in add jae (bad) movsb dec xor push dec insl push out add jecxz scas cmc (bad) in adc dec outsl lods push xor push sbb pop pop xchg jg xor adc adc xchg dec cmp cmp jl in cld pop ret test ss movsb std data16 out ss cmpsb inc or adc or je out xor mov mov jl or cmpsl jg mov sbb pop dec adc mov sbb jnp sbb clc (bad) sbb and dec lods clc xchg dec jne incb lods pop and nop mov and shlb frstor shld pop int popf adc outsb out (bad) sahf sbb stc je ret mov sbb imul mov in sbb mov cmp mov shlb daa push sbb pop ret test mov lahf cli test clc icebp int3 pusha ret icebp or in push sub and rcrb pop and mov jg shrb dec fldpi loope add lcall push lret fstpt js inc in cmpsl cmp lret ret sub mov shl dec mov pop jle mov sbb mov fidivl (bad) loopne mov insl ss sbb js or cltd imul (bad) sbb xchg cmpsl stc or sub dec lret call mov fldenv pop pop xor mov out shl pop jns pop pop int3 jmp test ljmp ljmp lcall lcall jno inc and or cmc mov jnp mov out push mov out mov push (bad) out gs gs pop jne aad inc hlt xor insl push pop int3 fcoms push (bad) lock sub mov push or clc test (bad) pop inc dec std enter lret int or fsubrl xchg jb mov int dec cmp imul scas clc pop (bad) sbb xchg xchg adc adc dec fimull xchg shrl sti repz push fmuls cld add xchg push lock ficom (bad) cmp jl sbb pusha iret mov es add adc push lods cmp push dec fisubrl inc pop ffree push pop sbb lcall jae jno dec lahf xchg leave sbb (bad) xor int3 clc and xchg xor pop les fidiv ja loop xor adc jg jno dec cltd shl cmp femms popf sub push dec xor in sub dec push and ret aam (bad) push inc sbb bnd shll dec mov fimull inc fdivp inc dec outsb call loope push lcall sbb shufps or pop movsb dec (bad) push cmpsl cmp jbe cmp pusha mov dec scas in mov or out adc push pop xlat or cld and enter gs cmp in xor sub sub mov cmp fadds adc adc into sbbb js inc sub sahf inc inc (bad) pop jo jno pop jns sub repnz arpl test testl or (bad) scas std daa xchg movsb mov mov (bad) or push xor lret xor fwait loopne xor inc sbb push mov xchg push fldcw mov out sub out (bad) pop xchg aaa stc mov subl ret and imul add cmp lds and nop frstor mov test sbb les (bad) out push leave enter movsl (bad) lcall mov in xchg mov sbb xchg int3 mov daa pusha dec ret cmp shlb orl cld arpl (bad) stc test test bound adc sub cmp dec cmp dec loope test or fistl sub (bad) (bad) insl jge lods ficom aad pop jne fistp andl jbe lods jge aaa ss aam hlt jo hlt test push cmc xchg in lret enter pop in jmp inc add sahf aas shll sbb jnp imul movsb adc test jb pop out dec je mov mov mov test adc ficompl mov or sbb push lret pop sti out inc push dec loope loope hlt fisttp jecxz push insb mov inc mov jae sbb rcl ljmp pop push call orl mov jl fldenv and in jmp xchg mov loope add sub inc test (bad) nop aaa dec popf mov test shll lods sub lahf cs sub hlt adc or xchg fs arpl iret mov jnp mov mov jae fistpl sub imul test aas inc jb je stos imul orl and lods inc add sarl xchg sub addr16 ja (bad) je popa imul jns cmp mov pop mov dec fwait shll aad fdivrl inc js sahf xchg push inc xorl pop fldcw push add outsb mov sti (bad) or jmp xor jnp in into loope aaa mov fnstsw dec push sub push cltd sbb dec push imul jp (bad) ds push into iret push xor jmp (bad) je mov lret mov or and iret call cmpsl ds dec ds insl dec shll cwtl mov xchg sbb cltd cld aaa aaa jg dec in pop cwtl popl mov sbb mov repnz ss jecxz push jecxz leave movsb cmp pop out in mov pop adc xor clc dec (bad) fisubl pop mov ficoml push out in mov jmp push cli in add inc inc mov ja addr16 mov push inc (bad) fiadd sub jg inc lret xor and notl push pop (bad) lea mov out shrb aam mov mov adc mov push pushf fwait push aas scas iret mov jl out dec sbb (bad) xor and cld xchg jns add arpl cs test std loop lods data16 inc sarl (bad) xor adc lock cli int3 out int xor add (bad) jmp arpl jnp dec xchg addr16 cmc lds in outsb cmpsl add outsl xchg outsl add lret xor add dec push lods das testl xor or mov fnstenv mov (bad) aaa jno (bad) mov aas ss mov lcall inc repz push int3 xor cmc xor or jmp test lock loopne and divb mov rcrl ljmp pushf xchg shlb vpsubusw lahf aas sbb fs iret pop inc jg hlt mov jnp mov jnp fnstcw xchg insb jb scas ss push mov mov or loopne int3 (bad) popa hlt mov sub mov mov rcll fdivr fwait push aam daa pushf loope addr16 cltd and leave add fs mov mov outsl insl xor pop repz or test js jno imul test sbb sbb lea aaa sbb sub daa mov sarb mov mov xchg fs cmp test mov jb int3 xchg mov cmc push sbb mov movsl push leave push cmp jp jl jnp movsb xchg aam in pop fisubr push loopne fcoms adc xchg lock scas xor xchg jns mov aad pop lret mov (bad) scas lods dec insb jno fisttpll jno mov dec and popf or jp dec mov cli sub pushf leave jmp cmpsl or iret movsb xchg adc cmpsl stos icebp (bad) pusha mov (bad) (bad) cli in and int3 jp es rcrb js loop mov xchg mov jnp mov movsb mov daa inc mov data16 xchg daa sub dec xor ficoml xor sub jbe adc add add out sbb pop adc push sub sub xchg jg orl push pop mov popa inc dec repnz xor sti shll mov insl push loopne jle sub nop xor hlt add lcall in popa push adc xchg dec pop push push (bad) int push lds icebp hlt mov imul dec sub xchg mov ds pusha jecxz push inc inc std test pop mov pop fwait dec popa lds dec fcompl lahf mov inc jge sbb mov ds imul pop jno vunpckhpd cmp cmp pop push jno aad sahf insl dec adc cmp ja aaa fwait ljmp je (bad) jle xchg (bad) mov in inc push imul and dec sbb xchg push add jle sub insl dec in and subl add mov (bad) cld test out lds addb adc int shrb mov and loop dec mov mov pop rclb push (bad) xchg inc nop inc mov add lds insb mov int3 enter (bad) dec cwtl inc lret and ret xor cli or fnstenv add test std jno add int3 mov je lret xor call pop shr push xchg push or sbb (bad) mov mov pusha xor mov rclb push and or mov pop dec ja adc add cwtl test in in push add push dec sbb sbb loop fadds inc test or ficom adc aaa mov out loopne data16 push lret das out mov ja push enter lahf fcoml (bad) lret call sbb shrb into iret add pop and dec mov fldt push mov xchg and xor cmp lahf (bad) cmp push loopne call mov sub mov aaa neg insb gs jne data16 popa mov clc shrl shrb aad (bad) inc lds lods jp push jl push sbb lods movsl lahf mov fldl in adc in test add xchg in aaa pusha sub pusha fidiv and outsb add mov dec pop test mov out inc or out mov into cmpsb mov mov mov jle xor dec xor lcall dec mov jl mov scas rcr xor fidivl pop mov scas sub dec mov lahf loop fnsave sbbl mov int movsl pop xorl and add repnz mov lds pop sub xchg bound insl leave xchg and pop movsl loope jbe mov imul xchg into xchg js fs iret adc jnp sbb lahf lock cmc lret ds cmp pusha divb std xchg dec adc cltd arpl les dec scas cmpl inc ret push ret aam jo fstl mov rorl jl xlat or adc in in scas adc lock popf xor pop pop inc lret outsl popa insl xchg daa or pop inc push iret lods add mov sahf or imul push loopne sbb shrb xor repz pop ret loopne pop push incb imul mov ja insb xchg dec sbb mov add mov nop mov sub and cmp and xor repnz xor jns cmpsl outsl ret outsl or (bad) pop xchg lcall xor pop stos outsb cmc sbb fcmovbe and lods mov das subl mov mov jnp nop xchg push adc ss sbb loopne adc ss inc mov sub mov cmc mov outsb or inc xchg test push sahf adc mov mov jno xchg pushf fs dec sub cmpl jno (bad) in std mov inc data16 addr16 and mov xchg pop (bad) jg mov jae pop aad mov xorl or rorl jns pop jg in mov ljmp inc inc jae jp mov push inc add addb cmp jae xchg imul xchg xor xor sub sbb push pop mov cmp lock (bad) aaa xchg cmp push jbe mov sub and pushf rorb cmp ret mov rcrl dec cmp dec in push inc mov lret insb (bad) and int3 fisub pop and out jb jmp movsl mov mov push xor int mov and (bad) aaa repnz xchg mov mov loop out mov mov mov and decl scas outsl dec pop cwtl mov int jb add pusha dec mov add je iret xor and pop adcl fildl lock xor (bad) sbb cmc inc imul pop adc lods sub mov rorl xlat adc mov (bad) fiadd shll sub jmp ficoml adc adc mov test sub ja jb inc test (bad) push ljmp je cmp add dec mov repz ds mov loopne popa pop fldt ror lods leave mov adc push sahf unpckhps xchg or adc mov addl mov or out aas add jl pusha fsubl dec push (bad) pop sti insb clc (bad) not scas repnz add ret xlat mov add fidivr aad sbb jae shrb inc je push in sbb out imul test push inc sub push scas lods lcall insb dec arpl sarl (bad) iret inc pop mov shrl xor (bad) jle jmp pop adc jns ret adc cmc aad ss sar sbb scas add inc adc sarl xchg mov mov divb mov test pop push xor and in and scas call dec inc pop fidivrl ror push jbe or dec jb daa pushf mov push dec cmp hlt sbb rcrb jle,pn movsb fnstenv mov inc decl sbb int mov mov mov push scas lcall adc mov lret pop sub or arpl scas jns mov sbb push cmp xchg mov aaa cli fiadd cs cmp push add xchg cli gs push pop xchg inc pop outsl xchg cmp xor stos ret test adc push push test std inc pop scas jns lods sub sbb aam fidivl in push push push notb and in cvtps2pd and inc popa (bad) pop out sbb inc test fdivr cmp testl xchg call lcall in inc (bad) fwait lea ret cmp xchg dec (bad) xor push add (bad) in cli mov push xor into (bad) into push roll (bad) cmp aam lock pop lea arpl mov clc mov mov popf pushf push popf mov dec push xorl mov mov scas (bad) sbb mov (bad) stos pop imul ret in lcall adc sub test mov sbb fbld sub into xchg sbb hlt stc and jg lock mov add jno xchg cli out das jmp lock je lret and push and lds push lcall (bad) cli adc push add sbb mov fidivrl orl dec out rcrl cld mov cmpsb push mov mov and stc popa dec imul pushf cltd mov mov sbb mov xchg lods fstl mov pop push sub sahf (bad) xchg xchg mov into push mov mov xchg in jle stos xlat rol pop aas jo mov addr16 aad cmc mov stc inc mov out inc sbb jge mov repz movsl inc push out mov aam (bad) xchg pop bound adc dec inc pop mov xor imulb pop xor push add sub and cmp push lds sbb mov pop gs rcll push push test xlat mov inc mov dec cwtl xchg sub pop negb aam call mov repnz pushf xor mov push mov mov (bad) scas xor jg jae inc mov add add cmp pusha bound lods dec imull jge inc xchg pop add mov test fcomip jb sub dec outsl mov addr16 or popa lahf push pop sub xor and sbbl push add popf add fdivr mov or and fldenv sarb mov in jo mov call push pop aad int lcall jmp xchg or lahf inc jne addl sub xor pop cld mov pop fs lods negl ret xor inc jo sbb or xor push xlat ret cmp mov bound xor clc es xchg ds pop test sbb mov cmp and cli jl xor cltd inc jecxz mov push mov or inc jne mov xchg pushf fildll or mov (bad) jne out jl jb adc add out (bad) outsb divl gs out mov xor push cmp mov push es cltd popf adc mov aam into lods jg je pop add std inc ficompl hlt shr mov jmp pushf into cmpsb int3 mov push and out fwait in cmc orl jo ret daa stos adc xor xor ret push inc mov stos or test adc dec and dec das push cmpsb add lods lods jnp pop orl pushf lods inc adc nop imul sahf cmp and jo cmp adc (bad) mov cltd daa fistl ds dec dec mov mov dec mov push cmp sbb cmc push out or movsl aas jp es cwtl iret mov addr16 jo cld mov mov sub pop add mov jnp cmp aad or lds adc leave cld push hlt mov pop dec call mov in aas jbe das out sbb sbb dec into aad fbld sbb lcall ret or imul cmc and int3 or (bad) fwait subl punpcklwd clc or xor jno scas insl adc jo (bad) adc lret ja push lcall mov inc lret push ret dec cmpsl and xchg das jp push sbb popa in cmp leave adc cltd fsts (bad) xchg lods fldenv mov imul cmp jmp or movb pop mov xchg push push and enter dec hlt cs adc stc js fimul add adc fcmovu xchg xchg (bad) sub fadds test test cltd cli sbb rol (bad) out jge adc dec cld mov inc movsb ret push or idivl pop pusha out sbbl pusha or bswap sbb lock enter sbb mov cmpsb inc sub and iret mov pop lret out adc cmp sub fcoms rcll cld fcmovbe stos hlt jo add sti stc jbe mov test scas fstpt add pop dec add sbb cld push outsb mov addr16 frstor fs add sahf loop xor test xchg mov push ja les pushf inc imul push mov push dec dec mov push add jg (bad) sbb add dec sahf (bad) jge lea (bad) jbe imul les lahf add cmpsb lret dec fcmovnb cwtl aas sbb subl jbe cli mov sbb fcomi addl pop mov mov pushf jns xor jg cmp aam or or mov pushl or aas dec lret loope push out cmc inc fcomp out mov rorb cmp insb (bad) sbb inc mov dec jb cwtl mov in push daa dec ds daa add nop lret popa fwait push and mov (bad) (bad) xor jne in jns test iret push stc call (bad) and or and sbb jecxz rclb add add pop mov and inc clc sub outsl test divl scas dec sbb fstps out (bad) ds int inc into aaa jne xchg js add xchg pop dec std cmp jno add cmp rolb adc sub outsl pop cmp leave dec inc (bad) sahf xchg in pop outsb nop ret std faddl pop jne addr16 cmp xor sbb mov pop fs mov scas mov sub sbb cmp jecxz bound andl mov fsubs sbb aas jbe push xchg fwait iret cmp insl jbe mov clc call cltd out push sub xlat pop mov movsl arpl jecxz stos mov mov cs cli push cmp popf dec lahf pushf enter dec sub sti push cmp sbb lock pop in enter ss cs std or std in push mov pop sbb enter push jecxz fmuls (bad) and (bad) hlt mov adc sbb xlat inc cmp pop nop add dec push jmp lcall jl mov add add jle cli and xlat stos inc push ret jmp add mov (bad) jecxz scas sub cwtl popf loope mov stos adc lods dec mov enter pushf lods repz sub mov dec pop ss ja dec lock scas cwtl xchg fs (bad) popf mov push jns or repnz mov ss sbb mov cld push inc inc call sub gs fsubrs push ljmp jns jmpw mov or shlb push (bad) loopne add cmp sub rcrl sub jae dec cmc pop in pop les loop arpl mov or aam xchg xchg dec lock (bad) xchg jl imul call sub sub jns pop data16 daa cs test adc andl lods jno pop jb (bad) (bad) pop (bad) in inc mov cmp in mov push (bad) lock inc jp add (bad) and mov mov xor xchg imul xchg lods adc xor add insb mov sti daa ljmp xchg push adc xchg rcll int jns and in rcl cmp (bad) mov out mov ja inc aas jg rcll addl xor mulb dec loope cmpsl (bad) shlb adc pop mov or lret mov inc jbe lret and jl xor rorb jl in and xor (bad) sub addr16 inc add xchg fwait (bad) in jle mov lahf fsubrs inc add pop cltd outsl mov popa cmpsb fisub in mov jne mov orb stc and inc sar cli sti test test sbb jo lock ret repnz movsb xchg aaa into push dec fsubrs cs ljmp sub cs adcl in (bad) mov int cmp cmp aas pop (bad) cli mov cli jae rcr repz daa (bad) cmp jb repnz aaa fdivl jne pop test test out nop js jecxz push stc and adc aas cld lds ss fcmovnbe stos pop mov outsl mov pop (bad) rcl into cmp dec dec stos arpl pop mov enter mov sbb daa call inc incb fidivrl int3 or inc adc pop inc (bad) cmp mov jbe popf bound xor les mov mov lret mov ss dec int hlt jp sub dec aas mov cmp ja mov cli dec pop mov adcb sub ret mov or dec jb std dec inc mov cltd inc lods sbb test pop xchg insl stos inc jge jmp test mov (bad) jle out clc in rol ret adc fidiv push adc dec pop or cld insl fcompl push enter popf dec js fstpl pop sahf dec xor dec pop ss mov or mov inc (bad) xchg pushf rol cwtl push and xchg aam sbb (bad) pop xor clc nop jle and dec lods push dec lods and and pop adc imul xor neg aaa sti adc push mov pusha stos lahf dec aad aad inc mov lret sbb sar mov xor jo mov mov inc mov push jb dec mov push stos dec lret inc in sub pop add mov inc loop sub mov inc sbbb ja outsl aam pop add mov and pushf push push mov xchg test icebp push mov (bad) arpl xlat inc clc outsb xlat xchg xchg fistpl xchg xor fstl mov push insb out repz scas xlat cmp gs pop (bad) fadds mov cmpsl popa lret lds xor pop mov mov inc or fwait test dec sbb test into pop fisubrl push pop (bad) mov (bad) push test ja lret push fcoml lret inc sub and sbb inc and inc and repnz jl ror inc (bad) mov insb outsb pop std inc test stos std push dec pop outsl mov int enter (bad) cmp push sti icebp cs pusha sub sub mov fldenv enter xchg imul imul fwait sub out dec xor loopne mov pop out add inc in lcall cli xor and aam add incb inc in pop push push cltd call daa in xchg mov sub xchg cmp sub push jl test loope mov sti pusha stos xchg nop out push outsb cld arpl pop sub imul pop pop cli push jecxz or push cld cmpsb bound aad pusha pop jl and xchg jp in xchg pop (bad) adc arpl nop and mov add ret jne inc stc cli fldenv jl nop popf lods push cwtl jge rcrl mov xor cltd jb cmc jae rcr in mov mov cmpsb dec addl mov (bad) cmp sub and fldln2 mov lds scas inc inc inc jecxz nop xchg inc imul jns dec dec mov xor mov and sub or in mov les jne mov gs hlt mov inc out add in repnz decb test push shll inc lods add xor jb xchg add ja mov roll jg add es sahf push sub mov or mov adc out inc cmpsl mov fldt inc xchg xchg dec (bad) out gs ret xchg mov cmp mov xchg mov jle or je xor xchg xchg pop daa test loop xchg sbb scas xchg repz addb xchg je push and push in push and and dec jp (bad) hlt jnp pusha jo cs or push push or test in mov pop movsl pop jge mov cmp (bad) mov enter stc repnz hlt xor data16 xchg sub jbe cmp test or rorl pop add xchg adc aas lock (bad) rorb inc ret pop mov setns pop sti mov mov and push loope decl mov jecxz push sbb in mov leave imul pop out or fwait cmp jle pop and int3 mov ret jne ja rclb add (bad) mov imul cwtl test scas cmpl scas cmp and and mov hlt sahf test icebp add mov stc ror push fmul xor xor dec dec repz push fwait aam sub jae sahf lret add and pop mov imul pop and iret orl shll repz int3 fwait sbb inc arpl xlat ja pop pop inc pop pop inc and cmp push nop lret insl or and pop int pop mov inc out add xlat insl sbbl sub mov in rclb roll stos arpl and inc jecxz loop mov lea sar push mov mov or add repnz jg or xchg cwtl xor sbb data16 fidivl clc xchg fcompl js fldl ljmp data16 sti fwait pop xchg shrb lds push popa bound (bad) mov loopne lods xor xchg cwtl cmp fidivrl ret (bad) push mov lea push hlt push inc js ja pop xchg and xor jecxz addl aas jge ljmp xchg aaa mov fimul cmc sbb popf fcoms cmp fstl xchg inc cmp in dec pop pop jno in nop divb or cmp (bad) cmp fildl lret daa aad das test out pusha mov adc test in mov in ret and mov add ss sub roll pop mov fmuls sbb mov imul cltd dec outsb adc dec hlt insb mov lock insb pusha pop adc jno mov aas movsb aad cld xchg fidivl loopne mov fdivrl jle jl mov push or mov in mov notl cld jmp lods in and sub call hlt lcall and rcll push cmc aam (bad) in mov test nop adc icebp adc movsb test ss xchg and mov xor sarl xchg lock rol xchg iret sub pop xchg fwait cmp into mov pop xchg aaa or cmc jne push (bad) lahf nop flds pop nop mov mov mov xchg int3 and pop (bad) fstl cltd sahf cwtl mov dec je pop call dec push (bad) push cmp xor push xor sahf sbb xchg (bad) mov movsl mov inc pop push push lock dec sti test pop sbb cmp jae xor shlb fisubrl xchg xlat in out pop inc sbb xchg daa sub stc imul or scas mov push in ret mov pop mov (bad) lret test les test lock xchg mov test int3 scas lds pop and pushf sahf add mov ret cld in fdecstp sbb mov push imul std (bad) loop mov les lret pop sahf mov lea into ja push lret pop dec xchg sbb jbe push dec das mov inc pusha adc jge lock mov jl sub into loope jge push icebp ret test pop or lret imul lret rcr (bad) mov sub cmp add test js cmpsb pop es clc dec or xchg insl dec lods mov push and mov imul repz sub (bad) adc call repz push and loop sbb jbe sbb mov pop pop out push in (bad) maxps icebp int adc or ficomp add xor or pop add xchg loope lds movsl adc jbe and jae fdivrp push push sub or inc in popa rolb mov ss mov (bad) enter popa ffree xchg jnp icebp stc out xchg sti sbbl xor xchg sahf push fistl aaa mov ret aaa clc fcompl or mov adc aam push ret call lret sahf js jp jl jnp (bad) iret lods fildl insl lahf sub iret fidivrl sub and and cmp inc push scas fistpll jp fldl2e out sub mov hlt xchg loop dec jmp (bad) xor sarb (bad) (bad) dec enter out (bad) adc xor aaa inc jle pushf ja fistpll mov ljmp dec cmp inc sbb call inc mov lret test jl cmp mov lret aaa mov int ret mov (bad) mov dec lods lea lds mov jnp in pop jge xor inc mov cltd (bad) cli rorl xchg arpl orl leave push enter dec data16 inc cmp pop test xchg icebp pop test dec aad in inc pop cmpsb es fcomi inc push arpl rorl cmc mov mov mov ss push (bad) pop test push dec test gs je enter jmp mov das xlat mov and mov test add add fwait addr16 mov sub (bad) cli jb mov shr jnp mov jb sahf push stc lret adc add das add stos outsb cwtl mov outsb jmp mov or int sub push dec cwtl out ja fsubrp pop aas outsb mov push sbb mov popa push mov xchg into outsl jbe mov xor stos negb adc movq movsb (bad) das lds add xchg loope std pop pop xor pop jge stos mov scas stc aam jno jp jne pop dec or ret and pop push and mov movsl leave repz stc cmpsl ret lods adc sub cwtl xchg mov sarb into iret cmp push jle cmp fsubr sub mov clc (bad) addr16 add stos xor pop push sahf sbb (bad) mov stc jne fwait stos inc fwait hlt mov ret mov push sub sahf dec stc xchg orb shll and xor divb rol add lret and jbe add mov (bad) mov ja mov push sbb data16 xchg pop je jb push mov stc push adc push sbb js sahf jl sub mov and (bad) ja push (bad) cmc push xor inc je test subl sub push loope cs pop out imulb adc xchg inc inc cmp outsl inc pop push mov adc loope cwtl dec dec inc hlt dec ret addr16 push push jmp fbld push mov lods lock push push loope ucomiss pusha stos fwait push push dec rcll cmp fs mov cs xor cmp into dec push pop std aad lret push mov or jno mov into je add ljmp addr16 mov pop fbstp mov xchg mov sbb cs out jo leavew lcall sbb pop scas xor xchg sub ljmp pop mov push cmp inc hlt jnp call imul ds repnz lods mov or int push ret pop jecxz aas cmc ljmp test mov or xor hlt loopne sub xor mov mov ret into xchg push sti stos out (bad) xor enter cwtl xor and js out pop clc jno pop dec inc sub jns or outsb call push incb push push loop les shll xor mov dec aam test lret frstor and cmp sub fisttpll pusha inc jbe cs pop stc xchg and xchg fpatan fs ficomp push lcall or cmc es fsubrl ljmp (bad) cmc xchg stos pushf daa pop push xor inc fisttp xchg xchg sub sbb lods cli cmc lcall leave or cmp pusha push sbb aaa jns mov jg cmc mov mov mov cmp stos loope rcrl bound jbe cmp sbb (bad) sahf jae xchg push pop std pop push sub nop repnz into dec and insl addr16 movsl hlt jns jns sahf push (bad) imul scas jb icebp loop movb enter add out inc dec cmp cld jae adc or push scas ja push push lcall xor out andl sub push sti pop jo cmp rclb pop sub sbb mov xchg (bad) fisubl pop sub pop adc rolb fsincos adc jg push adc jp add push out call js out fcoms aam loop dec nop dec ljmp nop lods xor cli cmp dec fwait push jb fisttpll push aaa stos loop (bad) es mov pop dec mov adc add mov push mov stc sub add rcr dec int fsubl mov xorb xor fdiv jle in loop add ret jno sarb push or mov sbb mov inc movsl std xchg pop xchg out dec shrb cltd inc loopne inc nop pop jne das cmp insl sub repnz fs loop push and bound sarb fwait inc mov icebp xchg push out (bad) or imul inc pop or sbb fsubp addl out ja fdivs xchg in insb cli ficoml sbb outsb dec fs cmp dec fdivr out jp loopne fcomi jge movsb add xchg iret test xor stos imul mov xor bound dec sar arpl fiaddl in outsl orl adc inc pop mov mov lea sub fdiv aaa lretw in std add outsb fnstsw subl (bad) push inc push or jae cmp jae inc xlat int lcallw test arpl mov adc jle outsb cmp arpl adc loop (bad) fistpl outsl push ljmp dec dec sub mov mov scas mov xchg push dec aaa pop imul idiv (bad) in inc lret cmc nop jo inc sbb lock scas lea (bad) cmp es xchg out nop lea loope adc and repz leave cmpsl test pop std (bad) dec popf mov ret (bad) cld in jecxz mov faddl sbb stc adc gs cmp testb jno loopne sub jo mov jnp push fwait push add cmp xchg lds pusha lret ljmp cmp mov data16 xlat lret pop xchg add inc stc xor mov aas push cli jnp pusha aas dec loop repz pushf (bad) ret outsl cld rclb pop pop or aam (bad) mov (bad) aaa pop popa test call sbb push jle popa aad dec jae fnop loope out dec cmp dec dec out nop popf push sub popf subl outsl (bad) enter (bad) int3 mov inc scas sub popa in gs cld stos jg clc test pop xchg or push dec mov fs loope dec movsb jb cmp (bad) fstps inc loopne xchg and test pop pop (bad) lock out push mov and ret jmp mov ljmp adcl psubusb movsb arpl outsl int jb mov cmpl jg inc push int3 cld lcall fucomi cmp jge mov in outsl dec adc loope xchg scas or pop int pop lods aad mov lea enter inc inc add cmp dec adc xor adc outsb and jb pop xchg cmpsl push aaa mov rorl push dec cmp sbbb adc xchg loope nop mov lahf cli push add and mov lcall lods (bad) adc icebp cwtl je cld adc into inc adc and add jge lods cmp cmp xchg fs in sub sti cmp sub in aam pop (bad) sub pop popf out jbe push adc add and mov (bad) jnp stos xchg adc and xor dec insl insb dec mov mov pop pop cmp sbb insb movsb xchg cmpsb mov sub ljmp add cwtl push loop clc repnz mov (bad) mov dec dec mov sub or (bad) jmp (bad) fiadd stos outsl mov mov xchg (bad) loope sbb fwait sub dec xchg or mov push test test out ret into push xchg sti outsb cmp and inc pop cmp push pop jp out xor mov add cmp mov out mov and (bad) adc pop adc jl push in gs mov sub cmp arpl (bad) psubw sbb mov mov imul aaa movsb sti sub imul dec fldt fsubl dec mov xchg mov (bad) into mov add cli repnz xchg mov xor mov in rolb cmpsb pop call push dec xchg lahf mov xor jns mov int push dec pop cmpsl inc stos leave repz loope or js push xor fisub cmp adc dec pop bound mov sbb push popa daa and cwtl icebp sbb push add pop push jp cmp xchg sub fwait test lods cmp mov xor sub mov ja fisubr or jae xor xor and pop and sbb cld lods (bad) adc adc aad and sub sbb leave mov push daa loopne cld cmp xchg jo (bad) (bad) mov jle push mov add mov jg mov test dec fwait cmpsb cmp popa int in sub mulb inc fmul testb stos jne mov hlt sarb test fnstenv fldcw cmp fidivrl jo sbb roll sar pop lea cwtl mov daa lods outsl imul cmp jg or inc repnz add ficompl mov or in xor mov adc mov mov in int3 mov or xchg ss popf push je loopne out add jl xor mov push and lcall ljmp sub popf jns leave cmc shrb pop xor jbe ds (bad) cmpsl ficompl imul mov into sub jae les adc ss and pusha js jmp sub add xchg sub mov out stos (bad) sbb xlat xchg mov mov add adc xor cmp sbb ds push mov in push fidivl rcll scas push loop popa xor sbb sti adc insl jle jbe leave sbb fidivl jno mov push aas shrb and xor ja call cs lcall mov testb movl sbb cmp pop fnsave je mov je xchg les pop (bad) aaa pop fs ret mov cmp push lods adc cs insl out test out pop and xchg push xchg fucomip xlat mov sbb das pop inc xchg xlat mov pop mov imul fsubrp pop ucomiss xorb xor sbb int3 mov out ss leave ss (bad) or pop jns add icebp rorl rcrb sub adc sbb or sub xor int3 xorb and inc pusha sub xchg or and (bad) bound les xchg movsb js sbb mov repz jne cmpsl cltd push int3 jae cwtl ljmp rclb and cwtl (bad) repz cs clc pop lsl aas adc lcall fild ja adc pop lea push jno mov iret jno cltd xchg jns push test fsubrl imul jbe sbb sti or in outsb lahf ds cmp mov fdivr pop lret mov sub arpl mov mov lock push loope jnp mov rorb adc dec pop ficoml inc xchg ljmp mov push js fwait out push mov addl insl jge mov pop int3 or lods outsb xor test stc xor mov push scas mov xchg outsl stos jge leave js lahf outsb dec lret add cli or xlat loopne stos pop rcrb test push xlat repz and lahf adc adc fcomp cwtl cmp mov enter add pop bound int3 leave outsb sbb (bad) addl call push cmp cli mov rorb mov push fcompl outsb sbb dec sbb loopne sbb sbb push iret outsl xlat push ds mov adc mov andb das rcrb dec fld movsl dec jecxz xchg xor pop sti jae divl in pop int3 pop mov pushf or rcrl xlat frstor mov (bad) sub jb sbb pushf ja add decb repnz fistpl adcl loop and pusha test imul pop inc lods (bad) sbb jnp cmp inc repz ret mov cmp repz (bad) push pushf icebp data16 cmp or lea push adc jbe fnstcw fcmovne (bad) jns movb dec push test leave lods aad sbb pop sbb push addr16 push dec enter sbb jle mov test jne out enter std les jae jo sbb inc push or xlat stos adc cmp in dec loopne fcmovnu or lds mov test scas pushf cltd scas cmp inc outsb xlat dec dec pop inc outsb imul into (bad) in lahf shrb push mov in inc faddl jae pusha cmp mov in js es js bound scas xor repnz leave pusha sub fiaddl and jle ljmp aad adcl test or or xorl dec rorb sahf leave lret pop rcl mov sub popf ficompl and lds pop sbb lock shlb pop sub in daa scas enter cmp add xchg outsb movsl and and lea and jge inc and pop addr16 inc pop imul xchg mov xchg xchg (bad) lock sub (bad) jno push sbb sub jo data16 leave mov outsb je mov xchg xor xor jb push jle (bad) flds xlat into rclb outsb mov testl dec inc into push ds dec mov pop cmp and sti rclb jg push clc call shrl adc scas xor (bad) inc sub insb push movsl int3 hlt push xor jns sbb insb aas (bad) jne icebp aaa xlat pushf cmc rorl pushf mov stc sub or dec outsb std fistp in adc cld sti into inc ljmp cld xlat out in (bad) mov jl mov (bad) into xor fdivp mov jne lret inc mov int3 mov and rcrl add sbb cmc aam fstp or mov cmp mov pop shlb push dec cwtl loop and pushf xor push xlat imul les mov fidivl cwtl sahf add sbb nop fsubrs out pushl lret cwtl xor lock adc dec gs push pop xchg stc sbb std inc dec repz mov popa push shll mov jmp smsw add je shrb sbb icebp push jo pop and xchg xchg fsts and (bad) mov pop and daa push test fimull shr jecxz lret arpl out pusha mov push sub adc mov xchg ja test xor dec out and (bad) pushl cmp int3 daa or hlt repnz jl inc outsl mov movsl out movsl cltd jbe fist sbb mov fdivrs pushf imul loope test out lds repz nop ds cmc add or jge in cmc enter orb test fld1 pop out icebp cmp push inc jno ret inc (bad) in stos out dec daa push xor add jge test lcall and iret icebp sub xlat stc and cmp fwait dec mov out mov dec mov add outsl xor jecxz fcoms sub inc stos push repnz mov cwtl cmp xor mov xchg inc pop cmp cmp scas fwait push cmpsl mov adc push into les pop inc lods test xor dec and mov lret pop jns inc ss push sarl xor xchg adc addr16 fnstcw mov cmp mov clc dec sbb (bad) mov pop or (bad) pushf cmp pop sbb jbe jg out (bad) sarb sahf rol cltd ss test xchg (bad) popa jbe ss loope mov or fstl leave movsb loopne lock jg cmp xor jg xchg add andl call mov cli ss sub data16 out cltd imul jnp cmc jg jbe add dec push arpl test mov aad or out push mov sub xor clc loop push and xorl std pop sub dec fmuls shl (bad) jle or pop fs dec out lret pop jmp lods jmp dec stos cmp and xchg jl or (bad) pop mov ret dec jmp jo or add cwtl push stc jecxz inc loope clc push and adc popf movsl bound sbb inc cld jle mov test or sub mov (bad) out mov mov (bad) xor dec xchg pop lret int3 and dec adc xor mov int3 mov stc push (bad) mov imul sahf out jmp call idivb cmp sbb or fisttp ljmp and clc jns std ret std pop cwtl mov in (bad) adc jne int3 pop mov nop shrb in andl repnz dec adc aam (bad) cmp sub xchg call and jge xchg mov fwait xchg bound insl add mov cmp pop imul pusha adc fisubl add fldl in inc jge lcall xchg std cmc jb adc stos mov (bad) ss xlat or fwait cmp and mov or out xlat les jbe arpl cld (bad) andb jae ss lods push test xor (bad) fiadd xor loopne jp jl cwtl in mov pop pop aad jge and dec fdivrs out sub push mov cmp movsl pop and daa insb and push dec inc pop sub clc sti fistpll mov jmp push pusha xchg sbb jle inc cwtl nop mov insb ds movl inc cld movsb rorb repz mul in add jae push pop pop outsl push sbb sbbl cmp sahf repnz int3 repnz imul sub scas pop mov push (bad) pop pop xor loopne outsl or pop add xor negl add add xlat xchg add inc movb ja ja push adc (bad) ja pushw enter cmp les mov dec lods ret arpl cltd jge xchg and xchg or xchg dec loopne mov jne mov sub adc xor ret xchg mov in dec sbb mov mov push out adc shrl (bad) mov es sbb inc cmp lds pop pop push mov rolb xchg loop mov dec lret ret mov push clc mov add dec stc push (bad) gs cmc aad das xor shl stos and push out jecxz aaa sub hlt pop in mov pop mov imul cmp push (bad) mov fidivrl mov push mov dec mov sub sti jg mov mov xchg push push and aas dec mov addr16 dec cmp cmpsl test xchg in pop inc cltd in mov or dec test lods mov jno inc sub adc in imul (bad) cli cmp cli push cmp es scas or mov in cld mov sti mov inc int3 sbb (bad) out pop cmp scas mov int inc je jbe daa add in add inc xor inc or adc add mov aam jno iret rcrl (bad) or (bad) stc jae push push (bad) sub test in outsl sub test (bad) hlt setl cld inc mov adc lcall xchg movsb movsb xor and cmc shr mov xchg mov ss nop bound (bad) inc add sarl xchg xlat gs mov in test sub mov stos cmp jmp lret (bad) xchg bound xchg mov pop dec push sbb xchg clc stc adc clc fs inc xchg nop push inc loope test xchg outsb sahf idivl lds mov addr16 push js test ljmp cwtl cld sub pop arpl sub push imul icebp imul int3 inc js fstps aas push cmp test stos xor es sti adc rclb sbb pop mov mov jmp xor test cwtl das mov sahf push dec inc adc movsl rorl jae bound push dec insl mov inc cwtl movsl sti xor dec mov adc dec pop mov add add mulb insb xchg imul mov or mov notb sbb xor popa pop in push popa fisubrl add and jge out and mov fildll fs sbb call clc xchg fstps and out lock or push in mov mov unpckhps mov loop mov lahf lds xchg in int3 add cmp imul inc iret mov pop sub test push lds sahf and push inc push pop lret cmp sbb pop pop mov pushf mov in adc test dec jno clc fnsave dec xchg imul mov push fs inc clc mov mov orl movsb fnop pop xchg sbb xor sub insl (bad) push in cwtl pop add and xor add sti inc and mov (bad) adc stos cmp jl push pop add cmp push push xor inc mov aaa cmp xchg and insl mov aas jge pop xchg push jle jne sub push imul or in mov mov icebp rclb xor test inc fistp sub xchg pop xor in sbb mov ret leave pop pop insl push inc in stc ja test lret sahf jbe cmpsb push or sbb shlb mov push pop lock fcomp push sbb or xchg imul xor (bad) xlat mov data16 xchg aam adc xor sbb lods std add stos leave insb gs andl das scas mov ljmp fwait sub lcall lahf lcall xor add test movsl enter jp in sbb adc gs push xor fildll jl mov add push clc adc sub jecxz pop stc pop (bad) and roll out jl jmp arpl dec into test stos pop jl lea dec mov rol xchg fs int3 inc cs das aaa sar lock lea aad cmpl pop in sahf or or jmp mov dec mov add insl xchg jmp inc movsl fsin push jp mov mov inc add mov and xchg add aaa je mov in or push leave jo in sahf adc jae cmpsl dec mov jno test mov jl (bad) aam loopne cmp out inc pop cmc lcall sub popf je,pn test (bad) jno pop mov pusha mov xor or mov mov jecxz mov dec inc (bad) mov xchg jmp jbe int3 sub test movsl (bad) adc stc in jae sbb and push mov and dec fwait ljmp sbb or push (bad) xor shll xchg and ret dec insl out push push xlat in scas idivl mov ret xchg dec rol xchg adc test mov mov loop mov dec sahf outsb es inc lods sahf (bad) ss pop jns jge mov (bad) push add cmpsl mov or ffree inc dec mov and mov movb (bad) jne and pop mov jno xchg push lahf sub movsl mov cli loopne lods rclb aad pop push (bad) sahf nop dec out test movsl xor jae loopne push adc cmp dec jae add aaa nop movsb push jle dec mov push imul cmc push movsl jae push popa or inc jns sub daa das cltd pop cmc pop dec test or and in push pop mov mov aas test or mov sahf push popf fisttp cmpsb push sbb ljmp (bad) out or jne xor dec and mov subl in cmpsl movsl adc scas rclb cmpsl hlt scas mov or insb orl ret out or les add mov add jb xor sbb adc fs sbb xlat aam cmp mov jno je inc pop lret xchg mov mov cmc repz jle cli jge mov inc xlat shl sbb xor testb add sbb bound out sbb repz sub outsb ss mov fcoml mov sub insb mov mov out outsb test add fist clc enter sahf mov xor adc insb inc xor jb mov jne push ss adc icebp jae xchg cld mov repz adc xor mov (bad) fistl add lods mov jne pop add loop test outsb mov dec arpl roll or xor subb pushf push call comiss push fdivrs mov adc fimull insb inc andl rclb jp cmp pop jnp ret xchg mov rcl mov and pop popa lods mov xchg push fstpt add fmulp arpl addr16 ds fs dec adc xor xor popa aaa jl mov testl (bad) ja sub mov loop (bad) push xchg sbb test cltd cmpb into repz jns mov js popa jmp inc push rcll pop je sbb add pusha fsubl jnp loopne cmp push scas push xor xchg inc lcall test sti outsb enter sub pop je clc por dec or xchg cmp (bad) jo sub loopne movsb jne mov sub frstor mov mov inc loop jg mov (bad) leave push mov sbb insb inc adc lahf xchg inc xchg leave fwait insl hlt dec sub or jns imul aas arpl ss cmp stos pushf arpl cmp sbb xchg test scas lea (bad) mov sbb push cmpsl arpl iret arpl aad push inc xor imul ret pop push jecxz xor pushf add jo adc scas push clc mov in sti dec cld stos sub bound stos (bad) out and pop xor sbb jmp scas sbb push lods pop dec (bad) repnz scas and gs repz and pop lahf test repz inc stos and jl test sub jns (bad) sahf xchg inc pop mov (bad) add inc (bad) jbe mov gs loop je arpl fwait pop imul out je enter sahf pop push (bad) jae aaa jne lds cmpl (bad) bound dec cmc insb push popf aas mov aas hlt xor sbb fs add popa mov or in inc std das shlb gs xor lahf bound (bad) in fsts rorb push sti int sub push jmp add push mov jnp and mov pop fidivl mov jno jo sbb test pop dec push push mov (bad) in push or push cmp sub movsl pop mov dec test shlb or bound cmp bound mov es dec cltd xchg xor in test cli je sub sti fcomip divl dec fsubrl mov aam lret push add fldcw int push push cmp in popf out andb dec xchg adc xchg mov mov (bad) xchg (bad) loopne mov pop movsb test dec jno ret and cmpl mov ljmp pop out sub inc xchg jle jae add fistp mov sub out mov pushf jl mov outsl or or orb mov inc and fld push dec push jmp inc or xchg (bad) or push pop pop cwtl lea in mov (bad) (bad) aaa mov mov lock incb into xchg (bad) mov not jns pushf lret outsb sahf fs mov pop pop (bad) mov lods stos adc popf and fiadd pop cmp jp fbld sub orb dec cwtl pop pop cmpsl and loop lret and (bad) push (bad) sarb sarb cld inc mov sbb lods sahf xor xor ss es fcompl xor out insl jae pop mov bound or jmp aam push pusha data16 xor fmulp mov lock test mov jns shrl mov cli scas fistpll test or movsl bound and icebp sbb in cli scas push stc in sbb cli xor and lea fs xchg push dec movsl out push js jo xchg jg (bad) fidivr (bad) loope sub push jge test push cmp imul push push fcoms adc ljmp es jae in xor das rorl push lcall pop mov jl push idiv or push mov (bad) and movsl jmp repz add pop pop fdivrs push dec cmpsl inc mov negl sti push or and test test loop inc adc xor push dec rorb cmp movsb daa or jbe into imul jns pop cmp ss je insl data16 push fneni(8087 pusha inc (bad) jp lret (bad) xlat mov in xchg mov push add fidiv jns test nop push jne and mov fldt add xchg jg lods (bad) lods loope dec (bad) hlt push fisubl out and push insb and iret loopne ja adc lret lea ljmp xor mov repnz push gs inc jp xchg loop jb inc mov (bad) (bad) cmp and push inc gs mov enter xchg lret pop stc push clc rcll jle sub nop mov imul repnz jl pop and mov cmp mov stc scas xchg xor rorb insb imul cmpsl or (bad) sahf cld sub xchg mov call vaddpd cs dec xor mov sub lods adc dec fisttpll xchg mov fiaddl jnp jne,pn dec xor shrl aas add inc mov jl in outsb popa scas inc and jo inc inc cwtl test dec inc aaa and xchg rorl fwait add sub jo insl (bad) sti push mov add enter stc push push cmpsb mov inc mov dec push pop cmp insb out xchg fsubrs insb out xlat mov sbb sub push cmp add das dec inc in jb lahf je rorl or add xor xlat push pop pop mov clc mov jnp lods pop sub xor xor xor mov sub (bad) not popf mov (bad) loope mov inc daa pause cmc dec addr16 mov sub dec popa insb push mov cmp xorb mov faddp adc and inc sahf inc mov mov jo adc lods dec mov aas (bad) xchg jg jae aam repz xor js daa pop (bad) cmp lret mov add adc add loope andb mov out lods (bad) or xchg adc mov dec aad jmp dec xchg jbe test xchg add stc sbb iret xor sbb jl push pushf lods loop xrelease sbb (bad) imul push imul imul fnop movsb dec add cmp out lret sahf fcompl cs xchg jg xchg adc inc sbb andb es ret push in xchg in xchg sub jg and jb stos push mov ds push push adc pop cltd inc sahf pop add cmp sbb ds xchg out lcall mov cmpsl scas push mov je call xor xlat push adc mov fucom sub cmpsb cmp addr16 sbb roll mov or imul mov fcmovu cltd sbb loop pusha sbb fucom lret mov popa dec mov fstp roll pop and inc rorb popa sub orb fcomps stc and add push jno jmp push mov mov mov cmpsb loop push or dec add clc cltd adc jnp dec jnp adc sub mov push xchg jl neg rcl movsl lea outsb fmuls pop mov daa cmp incb inc lea jo inc loope movsl (bad) adc sti jp mov in (bad) aad pop dec fcmovbe add jae out das into ret rorb roll pop ja inc stc xchg jnp addr16 int3 jne fcmovne repz les sbb or mov jmp sarl cmp mov mov sbb xor jp stc dec je mov sbb push xchg pop inc sub mov out in addl js stc pop pop ds add icebp cmp jno hlt data16 or enter push enter enter outsb cmc mov ds cmp xchg and bound inc inc jmp cmp insl cld sub andl inc pop (bad) push test movsb push daa mul dec outsb or jecxz fdiv mov pop sub xchg stc mov jbe dec cmp mov mov cmpsb and test mov adc add or pop add leave mov int3 pusha mov mov adc add loop outsl insb ja jbe dec aam or sub inc popa outsb mov gs mov lcall (bad) mov xchg jcxz lahf mov stos add sub inc push mov pop cwtl loop xor roll pop mov add xchg cmp es fstps test cmc lods jno lret ljmp movsl sbb or sahf lea aad orb mov jne in and daa lret sub mov xchg daa es mov insb xor push mov mov inc cmp xor mov push pop ds test xchg stos in and inc jae add mul xor dec push jno sub sbb aad sbb xchg stos push jne inc jmp or mov (bad) ficomp xchg adc lcall addr16 adc mov sub outsl mov sub jb xlat cmp iret repz mov rcrb int fidivl cli outsl push mov sub push jg add xor xchg imul pop add out xor lea jecxz mov stc (bad) (bad) pop jge jb mov add arpl inc (bad) mov xor (bad) xor pop out lret jecxz loopne inc stos fldl insl jl push jno xchg dec dec mov cli addr16 inc mov mov fistl aam addr16 imul mov and stc adc jg sar jle les inc mov adc push and aad idivb das out cmp imul addps cmp ficomp insl sub add jmp push in xchg or mov (bad) or cmp outsl idivl dec sub ret cwtl inc jmp jl mov mov icebp test ds push jp mov pushf push add out jl (bad) and pusha and add sub popf mov mov xchg mov push cmpsb push or (bad) movsl cli cmp dec out jg scas mov jge icebp cld lods sub sub mov or xor imul or pusha ja cmp jnp (bad) mov ret decb in push sub (bad) jg jg mov push int3 pop xchg mov je add cmp ficomp jno test jmp dec cs mov xchg daa popa jae mov (bad) shl lret adc addl jl xor adc xchg out es mov gs push xchg jl daa ret shrl in push (bad) stc sbb adc mov les in stos xor push adc mov sbb faddl xor je mov xchg jecxz xchg sub scas add not shrl and test es iret add add push mov lret lea mov xor xor sbb cs jae xchg pop enter push pop dec mov leave mov addr16 scas cli stos cltd insb jns (bad) lods pop out lock cltd stos call push gs loop outsl daa sub mov scas push xchg addl ret mov loope adc sub jmp ss xchg pushf sbb repnz ja popf stos les inc stc hlt mov jbe aaa shrl fstpt arpl add push cmp push hlt orl mov in sbbl std test clc das into popf test push lahf daa idivb adc dec sbb scas cmp mov cmp mov jno mov pop push clc mov mov mov cmpsl outsb push inc mov fisubrl xchg mov xchg inc popa fwait mov stc jle call insl (bad) and pop lods mov lcall lret cmp xor sbb test mov fs add push lcall pop xchg (bad) jb xchg int mov testl inc add xor pop pusha pop loopne or in xchg rcrb pop outsb lahf pop jecxz and outsl jns pop mov loopne push fnop cmp jg dec aaa movsl xchg jge lea push jecxz rdpmc shrb jmp jo scas lret out subl mov fmul lret xor adc mov push xchg les xor jecxz jg xorb push das xchg mov out mov inc xorl imulb cmp cmpsb icebp or xor mov mov add es aad je bound and (bad) push jp and mov in push mov cltd adc (bad) lods push xchg imul enter xlat loopne clc hlt and fsubs sbb lret sub js or call xor fwait xchg sub les pop adc cs std xor out inc (bad) outsb call push add and push push xchg xchg sbb ljmp (bad) cwtl cmpsl dec mov xor mov cmpsl outsb (bad) fcom pop data16 xchg (bad) fsubrs inc lcall repz es mov lods jne xchg cs xchg mov (bad) cld push jmp pop lods adc inc and pushf je dec sbb rcrl add cltd push (bad) cltd sbb jb imul enter dec ret jno push idiv lahf (bad) fldenv dec pop or inc stc inc inc inc mov mov mov mov fs xchg in adc icebp and push jge pop inc in or enter stc fcoml sar repz jge sahf ljmp scas pop arpl jp sbb mov mov imul lret jp sti push push mov mov add imul add aam fnstsw test xchg jo sahf push je clc cld ss sbb lods bnd (bad) fstps clc add stos or jecxz mov mov push inc xchg mov adc mov sub add dec ja mov cmpl mov xor dec xchg das cld mov mov outsb std outsl bound jae addl pop inc xchg aam clc jp repnz in pushf push xor sub mov add and aad in cwtl test mov adc je sub xchg inc popa aam repnz gs (bad) aam call mov imull divb cmc mov test jae inc (bad) icebp imul inc fistpll (bad) sti daa add aaa (bad) adc fbstp mov mov mov add imul rorb mov aaa dec mov xchg mov lds or aad push cmc xchg xchg iret mov inc (bad) dec add std cmp fistl mov and cmpsb jge jno bound adc mov std xchg mov push stos and leave mov mov movd cmp jle addr16 or ret mov mov push inc ja mov les inc pop sbb mov jl enter sub xchg xor daa or inc lea push (bad) movsb cmpsb stos out jno mov fmull addr16 xor xor int mov push repz jae or fisttp adc xchg cmp popf dec out call inc enter mov movsb pusha xchg mov mov add sbb loop loopne xchg mov stc xchg sahf push fwait jns loope negl (bad) or mov jmp and inc xchg addr16 aas mov ret (bad) xchg movsb into imull imul cmpsl dec xchg dec push repz xchg les xchg push adc div iret sti (bad) icebp adc scas xchg inc mov mov (bad) ljmp push jge pop cld bound loopne cmpsb pop sub popl (bad) scas fldenv out repnz mov das adc ret bound aaa mov mov in fnstenv xlat insb jp cmp mov aas mov les pop pop subb xchg pop cltd (bad) jno mov enter ljmp xchg cmp mov popa out in popf js jae jne mov lods iret bound mov int sub mov push mov jo ds stc lahf lods popf cmp stc add pop fwait mov ret or and mov add mov (bad) loop (bad) insl (bad) loop sub loop into stc push (bad) fld ficom loopne or nop mov pop and jl loop fs (bad) jle outsl test pop adc andb mov cli clc ret ljmp adc fsubs dec xchg (bad) mov (bad) lret mov stos and inc push fs jl fidivrl cmp jns es sbb repz sar sbb lods inc rol loopne lock popf cmc test ret jnp,pt jb lds push jmp sub pushf mov sub out mov mulps mov pop or xchg push add inc jecxz scas fidiv aad jo or leave loop sub int iret rcrl es cmp mov sub and aad ret sub scas sbb addr16 rcll or mov fisubrl rclb cmp pop scas popf jmp push and or test ja push frstor cmp int inc mov (bad) jbe orb jecxz push push fimull xchg (bad) dec cmpsl imul pusha sarl stos sbb or (bad) aas cmp loope or je gs adc enter es pushf xor cwtl pop pop jns out in pop in cmp xchg js adc or mov xor pop rorl lods jae sub mov rol xchg fistp scas shrl cmp sub mov jae daa fucomip push and dec xchg fisttpl add dec mov fcmovu lcall popa fimul insb jecxz xchg hlt outsl aaa mov sarl dec stos fdivr (bad) or jecxz lret lods cs lds aaa and out das add push xor push jmp int3 or fdivrs clc sub fnop lret pop ja cwtl ss inc call or pop fwait mov mov adc fcomps call jbe jle nop aam aam jns mov movsl sub sub popf xor lret push bound ds dec shrb sbb sahf mov insb data16 mov cli mov imul sub les movb (bad) inc jbe test rclb xchg loopne addr16 daa cli sbb mov fdivrl (bad) call nop inc lcall decb dec lret ret faddp and (bad) fldt stos pop data16 into jno nop and inc jmp icebp lods (bad) sbb or hlt jmp scas imul mov sbb les ficomp xor mov or faddp sbbb divl insb popf lock aad testl dec and nop mov out pop scas mov pop xor jg jo (bad) scas and adc sbb in push iret cli and int cld icebp xchg push scas pop cmpsl shr mov or xchg iret incl mov imul rol notl shrb ret push aad fstl popa pusha dec adc mov xor pop sub test sbb (bad) aaa test dec pusha add test icebp jno jg push test scas in xchg xlat jae xchg or ret pop jg outsl xchg push pop fbld ja cmpsb mov leave ljmp fwait std test push jb push popf push cmpsb adc push mov or cltd scas add ljmp jbe (bad) jmp mov xchg pushf notb sbb rcrl sti out cmc (bad) sub ficomp pop ret inc push scas out mov cmc cmp xor pop outsl jno cs add lock cmc fwait mov incl outsl sbb inc cmp pop mov sbb pop and icebp ret mov add sub dec sub out jecxz insl test bound inc sbb push add lods push jge leave mov add inc (bad) outsl pusha fwait repnz mov sahf (bad) punpckldq mov jnp dec push xchg jno mov fild add (bad) dec cmp mov clc ret cmp ljmp mov cmp add js and jnp popa add push pop push ljmp mov adc icebp xorb cmp jno adc pusha fwait js pop fdivrl loope das insl cwtl pop sbb insl and pushf pushf repnz sbb mov and inc mov outsb mov mov aad lret ret je xlat movsl lcall and mov fisubr push push cmpsb stc dec repz inc mov sahf push aas and cld mov cmpsl or icebp adc push scas mov sbb inc rolb (bad) push mov jbe inc sbb cmp push mov repnz cli push lret xorl pop loope cmpsb pusha sub frstor push sub (bad) ret shll xor xchg jo fdivrs dec lret (bad) stc insl in dec inc jecxz push out inc int3 movsl jno mov dec addr16 jo mov cld or data16 add push in and (bad) iret push mov imul insb xchg mov loopne jo popa fisttpll dec std imull jcxz pop cli adc movsl mov fidiv xchg aad mov nop xor xor and popa lods jnp adc scas push out sub cmp lods js mov pop fadds push aas nop inc loope into cmc sbb fsubrs xchg std popl div pushf mov stc cwtl adc rcrb inc sti (bad) sub or (bad) das fucomip xor jp arpl pop push or inc dec cs xchg std cmc cmpsb rolb scas in push scas push imul (bad) sub jo notb js rcll mov xchg jnp mov stc mov push and mov iret cld inc cmp roll and jo push xor icebp mov and xor xchg mov (bad) aam call jp insb imul aam subb mov cmp rclb mov adc mov push es leave sbb lahf fwait push xchg dec pop xchg mov or and push xchg adc xchg mov mov lds shl mov sarl insb sahf loope outsl aad in pop adc lret insl sahf (bad) lea daa mov mov push pop inc cmp test pop dec pop popa add mov adc inc jecxz pop fdivs dec jns rcrb add mulb cmp mov (bad) jnp cmp sahf mov fsubr mov push xlat leave pop adc inc and push or adcl sub pushf aas (bad) mov insb sbb dec fsubs sbb ds pusha imul add push and (bad) sar aaa repnz pop bound clc push mov aas or xlat pop cs inc (bad) jmp je add and fidivr push (bad) jns sub xor mov adc sti xchg mov jb stos cltd mov adc movsb testb or push add mov rcl cmp push outsl cmpsb mov mov je in sbbb pop jecxz int cmpsb scas inc mov dec jnp xchg jo jmp loope xchg loopne jle mov pop mov fdivrl in movsl cs decl mov jl add dec pop push movsb popa mov sbb icebp andl (bad) lahf ds jle adcl xor mov orb adc cmp (bad) dec popf repnz sti mov xchg mov mov in outsb std pop outsl leave pop imul jecxz lods cwtl xchg pop aad add mov xor jo (bad) dec pop iret pushf test rorb mov enter jge or incl lock jl or push jnp xlat pop lret add in mov imul and or push test sbb and out push iret dec (bad) dec dec data16 sub (bad) xor cmp xchg pop sbb loopne dec enter in insl jno aas fs xor or pop test sub push imul pop icebp and jmp xchg sub and mov sub adc cmp jns data16 out cmp decl jecxz sbb dec pop push movsb dec pop hlt call cmp repnz mov mov dec jmp lret jno aam push mov mov add pop or pop jmp and cmp pop (bad) xor jnp gs xchg xchg push inc and ret imull in dec sti lods xchg jbe xchg test test fldl popa or push js aaa (bad) fidivrl hlt pop fdivrs push mov stos daa mov fdivrs mov adc push clc cmp pop aad cmp (bad) xchg dec lcall dec mov lcall int3 mov push (bad) scas aad addb pop aad push movsl ljmp lods inc push orl and sbb (bad) repz push push shrb add mov js xor (bad) out lods test jno jecxz mov cltd cmpsb orl mov cmc cmp xchg mov fisub aad push push mov cmpsb or mov xor mov sbb or fwait mov xor sub jns cs ljmp mov aas mov movsl (bad) fimull mov add inc sub sbb in sub push dec and mov inc xchg push cltd mov jne add push (bad) push (bad) push ss and out adc pop jmp in cli fstl and in mov mov dec add jecxz mov or test sbb mov and sbb push add icebp imul pop flds push jge leave mov lods clc jg fnsetpm(287 insl lcall std (bad) ja mov inc ds lahf out add test int cmp xorb lret mov int3 push fcmovbe roll add mov jae dec imulb push out insl dec dec fisubr inc sbb sub mov movsb xor das (bad) std sbb sub xchg lahf call addr16 push adc (bad) jae and jecxz cld sbb aaa jae outsb mov aaa cld dec (bad) mov push (bad) (bad) ss mov mov fwait adc mov pop out hlt repnz mov jl jno (bad) ror push loop dec jb cs notl push and mov (bad) neg test cli or and sub inc xchg inc mov pop (bad) push and push mov push clc enter hlt or sbb mov lret or push and push add imull and push add sbb mov lods (bad) daa ds xor jmp jmp adc sbb mov xchg mov sbb cmp push (bad) mov dec xchg loope pop mov shrl scas cmpl xlat xchg mov push lea clc (bad) lcall cmpsl (bad) xor dec mov pop xlat (bad) hlt xchg jmp xchg loop sub lret push mov xchg or (bad) loopne insl test (bad) dec sub xor mov mov icebp or xchg sbb adc cmp add cmp mov and mov popa xor int3 loop lret orl cld pop test jne and pop andl jae lods mov push mov dec dec pop data16 insl cmp sar lret mov adc push stos push or dec (bad) xchg xor loope (bad) loopne mov xchg adc mov ja lahf arpl scas mov dec fmull fwait xor xor je mov and fidivl dec mov jecxz push xchg jbe adc mov xor cmc pop adc out add out inc xor sub stc adc jns mov xor rcl (bad) repnz (bad) sub fistpll out add sub leave mov addr16 jge add pusha dec test jb lret aam rcrl cmp nop imul inc xor lret cwtl jno sub sub pop xchg ss or jp js adc add pop stos jp rorl dec cmp outsb and mov gs in (bad) mov pushw cmp mov rcl int3 mov cmc mov jge mov lret not cmc aaa mov push ret inc sub and pop div repnz enter adc xchg jnp dec mov lret inc push adc mov fwait ljmp loope push outsb jmp gs stos (bad) jmp inc inc or repnz dec cs or cli hlt test cmp fdivrs or mov (bad) mov fisttp jae aad mov adc mov cltd test (bad) pushf or inc int3 jae outsl cwtl xchg add aas adc lods dec inc out test lret insl test imul andl mov or cli jp lret sbb sub dec push push aaa ret fistpll jecxz movsb cmpsl mov test shl jae lods push jae out test mov int mov (bad) jbe mov idivb cmpsb test int3 cmp xchg inc dec pushf pusha sbb dec cmp jbe xchg negb push ret (bad) sarl pop add inc push lret mov popl mov inc icebp aas xor adc dec gs sbb rolb jmp cmp icebp in (bad) int subl push ss mov or xchg xchg xlat cmp outsl push inc mov daa out mov shlb pop inc rcrb inc inc loope mov inc and adc shl mov sbb (bad) inc xor pop rcrl push adc mov jmp add roll dec adc ret push rcll scas (bad) or mov lds mov test sub aas pop mov pop lods jo sbb sahf rcrb lock jle or ja add mov test or rorl arpl call scas sub stos push mov fbstp lret es cmp imul fwait cmpsl mov iret mov rcll div ret adc sbb (bad) cmp rolb out mov push jle mov clc das sti pop fwait dec push xchg jne,pn test cmpsl popa bound xchg (bad) jp,pn mov inc push inc or sbb lahf stos imul pushf xchg out arpl sbb in popa push and daa lds (bad) leave daa nop (bad) das adc lods lret push xchg sub (bad) (bad) mov sub or test cmpsb scas rclb mov xchg arpl fstpt shrd pop add mov in mov jmp mov cwtl in inc pop xor lahf push cmc xchg cli sbb pop fidivrl or cmp mov stc ja sub sub push int3 xchg cmp (bad) ja out stos xor mov pop scas in fs nop mov push ja lods popfw mov insl xor mov mov bound test je (bad) jno pushf aaa push dec fadds mov mov je jle and xchg enter sub ficomp rolb popf lcall ficompl sar std jb push inc js mov mov out mov jmp aas xchg cmpsb inc lahf push jo fiaddl sbb mov (bad) mov sub ret imul inc ds push sbb std sbb inc loope lahf fdiv mov mov fnstsw lahf popa cmp imul or and push das scas jae or fidivrl imul enter fst loopne add adc mov jne adc out jae mov xchg mov pushf cltd loop pop sarl sub ficompl loope xor test jnp push xchg movsb inc xchg aad in cwtl dec subb out adc sub stc lcall cmp pop das sub scas dec xchg mov adc out mov mov sbb dec sub xor ja notl cs js dec add adc loopne lahf pop out mov push lock mov jne xchg fcoml outsb or fldenv mov clc dec inc add pop or sub lret mov jmp out pushf popa jno dec mov or pop xchg mov adc pop xor mov cmp pushf push (bad) int3 push jns cmc xlat outsb fisub insb pop and fcoml outsl xchg fistpl and popf push mov sbb cmpsl fistpl sti out popa jecxz push push mov and mov sahf out jmp repz sti cli imul mov push inc mov push sub xchg in mov jns add and enter movsl out lcall mov insb sahf push add js sbb and cwtl cmpsb out iret cmpsl (bad) int mov aas hlt repz mov sbb mov mov fsubr pop call das add dec jmp jl ss int3 cmc lods or mov cmpsb fbstp pusha mov test jp (bad) repz xor pop push fsubs mov outsb and pushf mov pushf out jbe push in lods (bad) xchg in out test and and add fwait dec add mov mov pop mov or mov ja or iret das jb inc rclb push inc repnz xchg jae and les jbe popa arpl divb aad adc sub push fwait inc es push fwait (bad) popa mov aas ret pop fnstcw add add and pop jp movsl jb mov jmp pop jp xor add xor fwait leave pop pop sub ret pushf push and (bad) lea scas mov xchg mov (bad) mov clc mov jbe (bad) or cmpsb into jb inc xor mov jge jnp lahf clc dec adc stos (bad) es cmp push pop std imull stc jle pop fwait pop ja rclb sbb cmp cli mov adc fcomps sahf add aad insb cmp mov add and and sbb add dec ljmp xor cwtl pop mov mov xorl xor inc test lcall xchg cltd das sub outsb mov sbb stc outsb adc ljmp mov dec jmp pop pop sbb sahf cwtl lods (bad) jbe aas jbe movsb imul mov mov cld push sub repnz cmp push iret push hlt push inc jg outsb test in xor mov (bad) sub popf gs adc leave imul imul xor lcall xor and arpl insb sub jb shlb (bad) cli mov mov cmc sub (bad) (bad) stc mul jns int3 in push dec pop sbb (bad) notl and imul cmp sahf adcl dec adc sbb mov dec and inc mov jmp into aaa pusha jecxz rclb xor jge xor push stc xchg into test rcrl aaa jmp fistl sbb jbe leave shlb pop cltd or stos cmpl shlb jle jle cltd mov or aas pmaddwd xor fidivrl ljmp and xchg mov hlt mov cmp rcl (bad) mov lods int push aaa inc es dec vmwrite xchg fimul push test addr16 rol jo mov pop dec xchg mov jmp fs loopne mov pop lds and push cltd pop sbb dec gs pop je popf (bad) outsl arpl in sbb mov inc (bad) jge cmpsl sahf sub mov inc aad gs mov idivb and inc sbb adc cmpsl adc dec outsb inc adc aam pop ss add cs (bad) ret sahf in mov out cwtl sarb jb fwait mov insb sub or mov les mov sbb pusha push icebp xor adc aad cmpsl inc lahf fcmovne xchg in push aam jns pop or cli and inc lods stc mov idiv xor xchg cmp cmp sbb gs and sbbl dec mov out repnz dec sub sub insb xchg fisubrl mov mov xchg in sub bound jb push push aad push add (bad) bnd scas cmp pop mov pop js push in orl push fs jbe pop es xchg nop pop xchg and dec aam jo mov push imul imul pushf jae test xor pop lret repnz cld insl fldt dec outsb mov mull sub push ja jg jmp ja adc inc mov lods push push adc mov mov mov (bad) mov (bad) pop pop push iret lock fistpll push xchg fstps loopne pop inc push cmpsl adc mov jmp popf push stos stos adc fistpl sbb push pusha fldcw sarl outsb jle aad daa hlt test sub loopne ja xor or (bad) iret add xor sub jp mov cmp ss add mov fnsave add jbe fwait stos out mov push mov sbb xor aas repz ficompl jnp xchg das arpl jecxz rcr dec inc (bad) dec mov lods push ficomp and adc lock xchg mov inc in arpl sti lret test int3 or cmp mov orps daa xchg test push jle,pn sub sti sti lods xlat jle mov xor cmp lahf adc lcall pop lock lods sub inc pop es out pop (bad) leavew leave dec sub inc fstpl mov jno jp rcrb lcall cwtl orl adc jno push add je imull mov xor jbe or aas pop rclb insb subl sub rclb shr leave sbb mov inc jge xchg out mov push jnp dec popf in or int3 (bad) inc cmp mov inc or xchg inc fldt pop test jae inc hlt pusha (bad) pusha (bad) test jns or mov xchg jp jbe adc cs lret xor movsb int aaa lahf cld inc (bad) xor outsb jmp test imul mov mov hlt (bad) ljmp enter cmp inc popa jg retw outsl pop adc cmc xchg dec sub cmp or stos mov out test push stos imul cmc in aam sar imul dec scas mov movaps test shrl lods mov (bad) sbb into loope (bad) jne lcall jns lods (bad) or les mov pushf ret movsl sarb (bad) mov mov pop popa push aaa lds inc mov xor es pmaxsw je xorb daa cmc sbb pop push adc int (bad) dec outsb inc imul pop jb mov rcl je mov cmp out (bad) or sub jae pop push mov sub (bad) mov ja in xorb call xchg xchg or movsb and insb cmpsl cmp xchg xchg push stos inc popl jle and imul xor (bad) es or jo lahf and xor sub (bad) (bad) xor inc xor lods mov pop rolb iret (bad) mov daa xchg (bad) mov xchg nop lea popa call xchg bound mov pop lea xlat push push xchg push xchg lahf pop sahf addr16 shrl jno leave mov jg adc aaa xor sbb ja cld mov jnp xor jmp inc sbb jno mov scas pusha push jnp jns cmp out jns enter ret call pushf sub or iret popa inc fcmovu inc mov xchg jge pop push xor test mov sahf xchg outsl fisubrl ja ret dec int sbb icebp ret mov pushf xchg mov es fistpl sub mul pop xor push sbb mov ljmp (bad) xchg into loope (bad) cmc test je mov scas int3 jno test sahf iret in cmpsb imul shll jno or and push mov into lds repz aaa shrb jnp jle sbb scas mov push adc push inc es sbb sbb outsb mov push push stos lahf imul jns movsb mov add repnz pop mov mov sub (bad) imull icebp xor ds sub dec fstp out jge or xchg or jne mov push push mov pop jns mov mov les or pop inc in add mov mov cltd psubq cmp fwait sahf mov aad cli push stc sub mov cwtl sti mov xor daa pop cld inc fidivr mov lods jns push pushf (bad) test sbb sahf jno sub fcmovnbe aas (bad) test jl adc stos into subl jo fs mov pushf test mov dec add nop daa push add fwait jb mov mov ficomp nop adc jl (bad) cmp into push xchg sahf fidivl add lock popf dec ror xchg nop mov movsl mov jno xchg xchg dec ljmp insl xor xor push pop stos pop dec rclb movsl fsubr jl mov jp mov pop sahf out arpl dec pushf fdiv pusha loop jns xchg movsb push pop and test sbb xorps (bad) mov mov pop lcall xchg push mov ds inc inc sbb movsl jge mov xor addr16 jle das cmpsl lea or mulb mov aaa rcll and add cmpsl notl push int3 in insb mov add mov jne or mov dec mov jnp fdivl movsl es pop fs call jmp call add push lahf inc xchg push in cmp cmp push movsb imul and popf adc xchg mov pop sbb dec cs shrb test fimull add es adc sbb sbb repz fwait int3 add shlb scas ss (bad) add adc les jnp mov (bad) pop fldl2t loopne mov add movsl popa push not (bad) cmp sub (bad) xor dec push pop aad test xlat sbb int lret mov sbb rsm cmpsb bound xor dec mov cld out inc inc imul xchg (bad) xor in push mov adc (bad) repnz push nop dec xchg xor dec push push xchg movsb fs bound cli mov (bad) je in dec pusha cmpsl and js xchg loope push outsb movsl jbe dec cmp test loop pop xor imul (bad) nop outsb pop mov lock mov mov sbb call mov sbb push xchg jnp mov dec push es adc xor jnp ljmp push std insl xchg shl jl fcomps leave stos insl js movsl jae in cmp movmskps lcall (bad) aaa ss jmp and and repnz pop rclb into faddp or outsl (bad) lcall sbb incl push fdivl fdivrl mov pop lods pop and ja,pn loope mov lock mov rcrb fcompp sbb mov fcmovbe enter (bad) fcmove icebp in mov aad ret ds mov or bound dec and sbb addr16 dec clc sahf lea (bad) es in adc push lds pop test es inc jecxz test cs jb jl jge sub in jecxz push adc xchg jmp jns dec push or pop loop mov mov cmp ret sarb sub mov jge mov pop mov lods xchg fdiv adc lahf lcall (bad) lock adc sub jmp or jo mov or and test mov mov sub pusha push cmp jns cmp mov daa pop cmpb pop mov mov fst push mov adc cmp adc mov shrl loop dec xchg xor dec int push mov fs dec rcll incl movsb cmp sbb dec std repz aaa nop lret dec mov jne xor xchg (bad) std mov call pop dec lods mov imul or mov stos fstpt (bad) or in cmp fwait mov sbb (bad) ljmp push int3 mov hlt cmp pop jmp xor lods mov mov adc adc scas lods test ja cmp sbb or cmpsl or cs push cwtl add sti mov push push lcall sti mov pop jg jl add sti xor mov cmpsl dec loope sub ljmp into xchg lahf ss cs lds cs lock xor and dec scas mov lahf fsubrs fimull mov dec and jmp push push push movsb push adc fmull dec pop pop in xor fisubrl pop sbb jae into lret movsb jp insb xchg pop int3 add mov das test jge mov inc test imul clc dec adc dec in sub xor pop pop cmp fdivl adc sbb in sub int3 mov pop fidivl shrl in mov jmp sbb into in cmp inc fisubl sub mov and cmp (bad) xor and frstor xlat dec and push ljmp push mov xlat mov sbb lcall jl pop cs mov imul fldcw adc add popa lahf jecxz rclb cmp arpl xor cmc call fs out fisttp jb pop pop sbbb fisub mov add pop cltd sub or leave outsb test dec pop push ds sub add lret lods divl xor lock ljmp les and or imul faddl loope (bad) jg xor les subl push or push and in bound lret in test mov leave xorl sub push stos jbe loope clc jmp and jge sbb movsb fucomi lfs fbld call sbb jmp jp lcall add (bad) cmp daa ret mov cmp mov inc mov xlat popa or out mov jl insl cltd dec adc rcrl (bad) mov dec stos and mov xchg or movb sub dec fidivr and mov fimull adc mov and fs mov test stos enter cmp add sbb aaa (bad) std mov in dec cs loop sahf push ret sbb sbb push add or pop jl test inc stos adc shlb fldt int3 scas add inc jne in divl sbb add mov jne sub add idivb imul inc xor cmpsl jecxz jbe pop mov pop mov data16 pop jne lds xorl fisttp js test xor (bad) sti pop (bad) push jnp push stos cld add xchg mov iret jge in mov mov (bad) aam data16 mov mov xchg push pop cmpl fdivrl outsb dec push into mov xlat arpl leave pop (bad) jnp jb fild arpl xor inc cmp cwtl xor aad mov out scas xchg movsb xchg ret sbb sbb out sub pop pop lret addr16 mov mov or mov cmp dec adc adc jge cmp pop add lods push mov aad mov enter test repz popw xchg lret outsb stos push xor daa notb dec mov movsb pop js dec inc ljmp jge xor es stos icebp push roll arpl ljmp cmp popf (bad) xchg pop std dec arpl mov adc nop iret adc xchg stc pop and pop and arpl das and ret outsb jo pop out cmpsl decl mov xor mov xchg and mov push daa negl ljmp mov hlt (bad) ljmp stos jae or fisttpl or xchg aad xor cmp push push push rclb push inc xor pusha adc mov mov outsl sti lahf add sub pop push jnp mov in enter or add (bad) scas stc mov cmp bts bound subl sub fiadd sbb pushf xchg (bad) sbb sarl mov jecxz dec pushf or (bad) inc xor aaa push and stos mov out daa aaa xor adc es xor sarl scas in rcl add test cs adc cmp sub mov sahf sub mov xorb xchg iret movsl add jl cmp roll jns cmpsb mov and jle stos scas loopne or fdiv mov mov sti dec mov push mov push sub and fidivl inc (bad) sbb cltd rorb icebp std inc rcll (bad) pop push hlt cmpsl inc mov jg pop mov adc divl jmp mov test xchg loope aad cmp pop pop adc fsubrs lret (bad) (bad) lock push test sbb mov cmp cmp test and andb ret sahf cmc lret lcall icebp lods cld outsl daa mov mov in or mov adc inc (bad) in loop xlat add pop cmp mov mov (bad) fisttp xchg push cmpsb xchg outsl dec mov add stos mov lds dec cmpl adc ret xchg dec arpl ljmp stos std sbb xor pop aas or fadd test insl inc int fbld adc fnsave movsb cbtw fdecstp jae mov push push aam mov mov ss mov pop xor rcrb sbb stos and mov lds das icebp repnz pop ljmp xchg fdivl scas jno lods nop or sub repz xchg (bad) daa xlat or push call mov lods xor push inc xchg cld loop inc jl mov lea imul popa ja xor mov das mov int or inc and ljmp std add fildl sub (bad) mov (bad) jmp inc mov imul enter in loopne aad aas jp xor sub adc cmpsb ljmp and imul gs repz and je xchg xchg in test xor in mov pop rorl and out mov pop and ret inc dec into mov dec sbb inc hlt mov dec push arpl stos add add mov fsubrs in hlt fistpl sub xor js and lea add mov push dec mov scas fsubl xchg (bad) mov (bad) cmp scas daa pop jno std std xchg stos inc mov clc xchg sti sub mov or enter adc out mov js mov xchg and add jb jle sbb push mov cmp ja jb cmpsl sahf jbe movsl rclb popa sub mov xchg jbe and movsb sub pop sbbl xorl jns (bad) jo out and dec cli mov cmp push cltd orb fist testl adc and dec in (bad) pop mov into jmp pop mov xchg cwtl add sbb cmp (bad) (bad) xor push inc aas xor cmp loop and push xchg aas mov (bad) pop in mov pop xchg repz pop mov xchg mov push xorb dec daa mov std rcrb or jbe lods cwtl xchg outsb lds test adc lcall aaa push dec insb je mov aam gs repnz decl (bad) xchg xchg pop mov lods dec inc iret repz lods insl aaa xchg fidivrl insb test popf sarl ficomp pop repz mov rcrb cmp inc repnz stc movsl sbb and test cli cmpsl mov mov mov ljmp xchg lret mov push test jecxz popa mov ret xchg (bad) jae mov push shlb (bad) std aaa call jmp lods and xchg xchg adc mov push mov call out nop jmp popa pop adc push in adc mov dec mov cmpsl dec xchg fistpl add xor into fcom xor loope imul dec jo jae and pop push mov jp push push stos sub inc and jo dec shll mov mov mov dec leave into aad lahf inc test sbb mov clc jge stos add (bad) das push dec test sti stos lods or mov adc and loope sbb pop mov fbld call pop jp sub lods push cwtl inc dec jb dec stc addr16 mov fidivl pop jne ds fistpl mov adcb jo inc out fisttpl daa xchg sbb jb mov int3 mov (bad) pop mov hlt sbb enter mov out or les enter dec pop (bad) adc lret scas xchg (bad) fcmovb sub ja xor outsl out loope mov xor jecxz popf add (bad) enter jns outsb inc sbb lods stc aam aad add mov bound mov dec daa push cmpsl (bad) incb aad xchg pusha pushf inc je ret cmpsb enter sahf stos js (bad) mov mov or or add cltd cltd repnz fstpl test mull pusha dec add lock pop cmpsl loop lock mov bound iret xor lea addr16 daa mov lahf mov mov jp ret jnp push stc leave aad out repz inc ds das jo pop dec ja mov jbe clc inc jae gs cmp push in add mov shrl mov mov bound xchg xor mov sub fdiv jp lds inc jmp sbb jle jp insl in outsl xor fcompl cmpsb fcomp xchg pop movsb inc lret or xrelease js repnz shlb test mov aam push dec out rorl pop mov push pop pop xchg xchg das dec stc lods mov js xchg sbb sti popa lock fwait in sub out mov xor imul rorb adc rclb mov push test sub in cs dec add ss push imul out cmpl popa cwtl add scas mov cs jecxz pop cmp sahf cmpsb xchg inc int3 cmpsl jno test lds push or testb mov add mov in js sub jbe dec pop mov mov and sbb sub (bad) movsb or jmp mov cmp adc xchg or push out and adc xor mov jmp adc scas test sbb (bad) jg sub cltd pop test lret dec fwait xlat in inc rol push lret xor (bad) pop pop test sub lret cmp call cld mov fs shr pop (bad) in xor add das stos mov push or jg lret repnz gs (bad) sarl push mov push dec push mov mov das mov cltd lods (bad) cmc mov icebp outsb and jmp adc lcall mov sub insb pop and lods call stos cltd in imul je cmp pop push jl xchg mov aaa test xchg repnz call push or push mov sub ss sub aaa sbb pop test push lods (bad) je mov jle xchg leave or loopne mov insl mov dec jl movsl add dec adc lods mov sub and pop in sbb cmc or mov cmp jno dec mov sbb scas aas movsl sbb hlt outsb das xchg add jne pop mov jnp pop test mov and sbb fwait mov mov pop push sbb cmp sub rcll pop popa imulb mov mov pop pop jo or pusha rcr (bad) add mov test leave jns jbe rcrl lahf popf dec jle (bad) inc stos cmp or jge (bad) add iret jmp adc sbb gs pop sub ljmp sbb xorl ret mov clc lahf jbe dec imul mov xchg xlat add hlt daa popa (bad) adc sub push out mov fnop fiaddl jne xchg test aam stos fldenv cld sbb mov sahf (bad) hlt repnz repz add orl mov enter aad cmp cmp sbb pop xchg mov test mov mov adc jo fwait jecxz bound pop push out cmpsb lea xchg mov xor mov adc mov test pop pusha push stos out sub ret mov push sbb jbe in adc fstl sbb scas movb push cmp outsl sub xchg mov mov out cmp or inc and lods jno dec mov jecxz test sub or push int3 lret or xor int3 jae stc cwtl fs add sub or test mov cmp gs lret into nop and int add dec ret push rcl out or jns ret xor test nop fsubl mov jno sbb mov push cltd ds fbld int ja in movsl or test dec bound hlt jl push (bad) pop sbb jb jae fcoms aaa inc lods out push enter inc fwait roll pushf enter es pushf daa repnz mov stos or mov arpl icebp shrb rol daa xchg push fs xor idivb xchg fild in outsl inc mov fnstcw mov rolb xchg lods int mov call fidivr in mov fs adc repnz lcall jb xlat sbb xchg arpl gs in lcall pop js les icebp cmpsb mov pusha int stc xchg add mov ljmp and in push loopne and jg mov mov fisubrl and test insl shl stc cwtl jo adc pop aam movl and add fcmove push dec mov in xchg cmp stos ljmp sub or mov mov mov fstp cli rcl inc ret xlat push or mov xchg mov fcmovnbe addr16 subl test mov jge cmp pop dec jo cwtl jb mov das insl movsl mov in test sub mov js mov insl incl xchg out push fcmovb stos mov dec push mov jbe xchg ja ds scas ds sub adc mov loopne repnz subl ds mov pusha add sbb push (bad) sbb repnz enter sub fisubl jmp xchg in mov push ret inc loop (bad) jecxz orb mov iret xchg mov (bad) pop jmp pop call addr16 repnz pusha jno pop cmc test mov dec (bad) pop jno popa jg loopne je aas push sub and push dec add test inc in sbb sbb fsubrl and sbbl repnz movsl cmp inc movsb xor and std out push aam sahf call push sti (bad) jp jp in loope inc enter jl mov in mov push jbe (bad) popa gs cmp (bad) push test jno jp dec push mov sbb mov stc insb ret imul fisttpll arpl fwait jno adc mov xor xchg mov bound pop mov enter fcoms add xchg xor xor lret rep and insl popf and mov call mov and sub mov bound xchg dec popa (bad) cmp (bad) outsl js inc stos fwait stos and mov mov scas inc mov ja shrb and push gs scas sbb xchg outsb (bad) sti and cmp sub sti mov lds dec pop push add ret arpl mov push jp cmpsb and inc in in sub inc notb (bad) incl or movl adc into (bad) pop or popf hlt hlt mov push loop dec shrb sub (bad) fucom fcmovnu push mov out lret rclb in movsl test and leave rcrl in mov mov bound jae sbb cmpsl adcl xorb fistp fwait adc lret test pushf mov xor gs jl mov dec jnp jbe lock sarb xchg push pop (bad) mov js cltd mov stos adc xchg (bad) call gs sbb push stc mov shrl pop scas in dec push push sbb jl loope imul cld push cmp fisub cli xchg jge push test pop mov mov stos and repnz sub or pop jp push addr16 dec mov xchg movsl sub fwait mov gs aad aas out mov sbb push loope iret inc pushl outsb cmc ja mov xchg pop mov dec pop push lods rolb imul and and jbe and adc les fldcw cltd bound push xchg ss out jp mov xor (bad) mov loope fcmovu pop (bad) push in mov jge or aad cli fsubl sbb fstp test enter sbb xchg mov into add jle push fs sbb cmp or jae daa cmp dec push clc cmp and mov jge lcall nop sub inc jg sbb fisttpll pop and rcl push jle fwait mov jmp jle dec scas and sbb icebp pop cmpl dec pusha add push mov sub pop pop push sbb pop push fwait mov popa stos mov leave (bad) mov adc dec call push lret xor adc xchg sti sub and scas in icebp jo jg fstpt mov stos pop mov fmuls jp dec out sbb xor icebp iret hlt test inc jle cmpsb and mov enter push sub out push ja pop and divb push daa push les dec sub in sub cli data16 dec mov xchg in fsubl gs xchg or jl jl subl loopne sti jnp ds scas push adc enter fildll jne inc cmp and add xchg push imul lock or mov add mov jne adc sub ljmp arpl ja xchg pop stos test xchg shlb xor push data16 cmp jp sub mov fcom xlat ja (bad) jae sub pop popf inc cmpsb and test xor (bad) and dec jl xchg xor jg popf mov add (bad) and push fimull dec fdivs mov fimul xor test divl bound pop jnp xchg outsl jecxz jge aam jne pushf adc scas out fwait insb rol pushl out mov cmp jbe lds sub adc pop (bad) enter les mov inc mov xchg cmp sbb lods arpl mov mov jge xchg movlps rorl mov cmp icebp xor lret adc lds movsb xor insl jle in add pop and xchg or or lret pop dec seto xchg sub out cmp ficompl test mov (bad) dec dec dec sub fimul mov fnstcw xchg stos mov stos sbb or data16 or jnp mov hlt hlt clc das sarb mov outsb push mov rorb jmp out jns jns cltd xchg (bad) inc int clc rorb jmp mov into leave pop je addr16 movsl adc into (bad) cwtl mov sbb icebp iret aaa imul inc and add ret std sbb mov out and stc adc xchg xlat mov jnp mov xchg dec fsubl dec push xchg cmc add xchg cwtl lds jns mov popl xlat jno outsl (bad) (bad) pop fsubr xchg cmp (bad) mov xchg push lds lods xchg mov jmp popf jle pop xor and pop dec mov (bad) nop rcr test (bad) cmp dec movsb jne fwait push clc insl dec add subb rcrl xor mov int3 dec dec fmull bound and (bad) push dec push mov data16 mov rorb or mov mov outsb mov and loop data16 xor mov fcomps mov or iret jnp pushf lods popa dec mov lret sti sbb inc clc (bad) dec xchg int3 loop jl and cld stos pusha mov add cs repnz cltd push jb or mov mov inc test pushf mov jecxz dec clc mov stos and (bad) out in and in loop push lock int xor in mov lea jmp cmpl (bad) adc push jne fdivrs or dec sbb insb mov cwtl mov pop jecxz adcl test mov test in addb dec add jecxz or jns mov pop adc aaa cmp test or mov testb in fdivp mov xchg popl inc sub cmp iret sahf std andb push imul adc std cwtl dec jg pop xor out (bad) enter push xor mov and mov mov dec popf rcrb xchg mov scas mulb dec and mov out dec dec rcrl test aaa rolb push mov fistpl repnz xor (bad) stc jo (bad) lock pop call pop lret lret movzwl sbb int3 xor jb ret inc jb ljmp push lcall dec nop out into xchg hlt popa pop data16 lcall cmp pop arpl test sbb ret lahf ss rolb jae pop mov lods ds fisttp jmp mov sbb push popf ret stos nop clc xor and in jge sbb leave aam dec cmp nop sub sbb xchg subb sbb rsm nop jno bound mov dec or pop sub out test lret fisubr clc test rorl jbe xor pop js std mov xlat xchg mov push mov adc scas fldl es (bad) push mov xchg inc in sub fsubl flds and movl fcoml cltd ret xor je stc lds out xchg mov sahf push iret iret xor mov jae cmp mov xlat hlt movsb xor sbb inc mov out xchg xchg setle push fcmovnbe (bad) sub nop and outsl dec das mov cmpl fstps int3 sbb dec xchg add repz push sub or int sub sbb xor fwait insl scas lcall jl into dec cmpsb fwait sbb fisttp pushf out inc in gs push (bad) js push sub xchg test scas fistpl jmp and lea jl xchg lret dec jae mov or jno std nop jnp in (bad) xor inc sbb jae sar inc (bad) idivl adcl (bad) lret stos adc (bad) hlt test mov or push pop lret orl fildll xchg adc dec test push sbb js cmp mov ret inc dec push (bad) out stos js popf popa mov push jge dec dec rcrb jl add sbb jbe cltd (bad) and adc arpl jnp and pop dec out jb mov xchg (bad) cld rcr mov inc test bound movsl adc sbb fcoml into xchg push lock cmp sub or outsb (bad) icebp dec sbb dec push or gs loope imul mov insl aam and test lret movsb sub aam mov push ss sub xchg stos xor imul lods cli push jo xor pop or rcr mov stos xlat lods fcomi jp shll test mov and call jns cmc xor mov cmp ja cmc mov aaa sub adc out add inc shlb das sub ds imul sub jge (bad) mov pop push es lea pop xchg or push ficomp cli pop adc or inc xor jb pop addr16 cs cli fimull repz xor xor add inc mov cltd cmp push je cmp jp lock pop push xor mov aaa les jmp pop das sbb stos inc test mov xor jne loope (bad) inc sub mov outsl push jge mov inc add cmp pop pop pop cmp xor rcrl push ds in mov jne divb ja ficompl cmp shrb loopne mov pop mov sarb (bad) mov mov jmp loop inc pop and jl cmc pusha dec pop pop adc lods cmp dec jno aad insl mov inc ljmp imulb push jb xchg xchg xchg insb lock sub push loop jnp in push popa or push mov dec (bad) xlat out xor outsb std pop mov cmp pop or mov je out js or loopne or gs lea pop in dec and push cmc jo mov fcomip icebp iret outsl out int jbe mov (bad) xchg fwait mov mov mov enter enter jae xor sbb gs push cltd xchg jbe and sbb xor (bad) test shrl sbbb adc mov mov sahf in ss repz fs int3 push mov dec mov stc push xor gs push or jge adc sbb lcall ret push adc stc and int3 repz sbb in lcall pop mov (bad) jp (bad) pop pushf retw test dec sbb data16 (bad) xlat sbb dec push sub loope insb inc mov push or push pop mov rcrb inc cmp push leave fldl jge and outsl mov in lds ficoml adc fs pop popf pop xchg mov xchg and rcll mov and mov and jg inc pop lea mov enter add mov mov xchg jnp xor (bad) add jbe insb inc cs mov ret scas mov push mov mov fsubrl addr16 test sub inc xorl loope pop add cmp dec pop lcall pop pop pushf lods xor pushf add ljmp iret into lods sub ja dec pop in rorb fdivrs insl dec push lcall test out ljmp mov inc (bad) cli movsl jmp loope enter push ficompl loope cmp test xchg lret jge and cmc mov mov movsl mov repnz xor dec cltd cmpsl xor cmp sub pop in loop jmp mov ficompl mov popf xor dec push cmp rcrb push mov loope fistpll lock and lods repz ret les xchg xchg shrb mov cmp sub int push and jmp or ljmp addr16 push lcall movsl aam fdivl adc mov cltd repnz mov sub shlb outsl mov or cmp xor fsubrp push sbb sub (bad) pop push imul adc xor fldz pushf dec xchg add insl ret arpl mov mov dec sbbb aas daa xor ret (bad) mov inc aam call fidivrl int3 add andb xor cld int js scas jno stc ss mov lret sub adc push testl sbb and aas enter sti fcmovb jo aaa ja pop xchg ss jno test pop rol out mov idivl inc lock sub pop scas or pop xchg pop hlt pop adc push test call mov icebp and adc xlat or xchg mov jne inc ja pop and or xor or mov lret and pop mov insl mov mov sbb adc fcmovnb stc in lcall rcrb out (bad) (bad) in and xchg mov je sub addb sbb and mov sub frstor mov das hlt lcall mov pop adc cld mov push pop leave popf stos fidivl adc pop add cmpsb push ret mov dec aam cmp les sbb arpl imul lock int mov jp movsl xor dec in xor adc sti cld sbb popa mov pop dec out pop popf icebp stos mov lahf addr16 and xchg les dec cmp cmp or sub lods lods icebp adc cmp iret fstpt sarl dec loope push aaa in mov push dec daa jecxz jo int3 jle mov sbb jo mov mov mov test cmc add inc int3 adc push dec mov int3 inc push inc sbb inc je inc (bad) arpl ret xchg pop sub cmp xchg repz add mov sbb and shl mov push lods jno dec push add inc push clc aam cmp sub jmp dec fisub dec out sarl and and fs test les mov inc repnz jb cwtl cmp (bad) test fsubs sbb lods fimull push xor lea scas xor mov cs (bad) loopne das xor out rclb (bad) outsb cmpsl (bad) sahf push rorl pop dec scas add jae or adc test dec jno test nop outsl dec mov sub bound xchg mov scas dec jmp jae push mov mov sub sub mov jno mov mov add adc inc loope rorb and xor sbb lods enter enter xor fistpl (bad) imul test adc lods cmp sub ds aam and xchg mov fucom iret cmp or out bound pop or jg ret pop in popa jl ret dec ds loopne fistpll lock and sahf mov mov and inc cmp cmp ja cld xor jne push cld pushf pop call pop mov xlat stc cmp scas jle mov aad fwait push sti repz adc lahf mov int3 ret cltd bound int inc pop aam xor lret in stos les cmp pushf pop imul test inc mov dec jmp and or sbb mov or jl inc ret xchg jnp pop add adc pop xor cs aad fdivs lods jb and cmp pop xchg add into ljmp inc std scas sub add pop aad (bad) jns inc xchg xchg xchg out sbb test movsb ret push lcall fnstenv sbb and mov adc fstpl adc xchg push popa aaa and jmp ret pop lock mov jns es (bad) mov jnp,pn mov addr16 (bad) xchg sbb pop lds test mov fcmovnbe push daa daa pop addl aam mov loope aaa xor push les lret pop cmp lods insb mov mov fcompl or xor test adc mov pop cmp and fnop xchg icebp test inc shr add or cld cltd movsl aad sarl orl dec add aaa repnz xchg call bound xchg sbb push scas xorl inc dec and pop xchg lea ljmp divb (bad) jne arpl add push pusha mov fyl2xp1 cmp pop movsb das call rcl mov add pop dec xor adc cmpsb inc pusha aaa xor fistl pop std andl pop pop inc jb jns outsb and repz mov dec stos add xchg ds imul mov mov data16 pop outsl dec mov mov push or jns pop imul rcrl (bad) pop cld addr16 add dec pop jae (bad) jne test (bad) gs insl repnz sub mov dec jne pop xor xchg cmpsl jge dec lds mov sbb (bad) jbe fstpl int push lret xor (bad) ret xchg cli ret in mov mov sub inc push add les stc push (bad) out or ror xor pop mov sub mov fistpll stos sahf jbe xchg loope lahf iret popa xchg fwait sub and and xlat jp inc mov sub xorl jge mov sbb jl pop mov pop call mov adc jns (bad) push xor adc aas mov mov das add push (bad) mov adc or cmpsl and xchg cmpl imul pop mov lods mov iret pop xor es mov cmp in inc data16 imul (bad) out das and (bad) stc cwtl scas xchg sub repz fistl cmpsl sbb sbb pop adc xchg repnz test bound sbb add mov jmp jp aam jecxz and add xchg hlt jmp pop dec dec and mov jne jo stos cmp int cmp inc pop fldcw pusha ja or insl add xor fwait scas int mov push sbb and repz xor xor sub adc and repnz mov ja sub inc scas test stos repnz es push test xor push test das dec nop pop or sub fs mov pop sti jnp rol enter jecxz mull sub lods mov imul lods (bad) fwait rcl popa mov sbb repnz nop sbb push add fs or pop fstpt or cmc jo sub lret jmp mov jle popa aam rclb and add stos push push test pop adc jnp add and stos cmp push (bad) mov ret xchg stos aaa enter and dec xor mov rcll cmp jl cmp fwait scas out (bad) repz jo cmp mov adc mov inc push inc xlat cmp xchg mov popa aad add aas incl ja inc sbb leave fcoml negl loopne fwait xchg shrb subb and test mov mov lea hlt dec jnp clc and lods add adc bound adc fdiv outsb mov mov mov mov ljmp mov xchg sbb daa stc pop ret (bad) movsl std pop mov lods lret inc xchg fldl nop hlt and pop add hlt add ljmp push cmpsb mov mov les sub inc inc pop cli rolb cmpl mov add cmpsl mov mov loop cwtl pushl add mov in pop cmpsl adc mov fnsave loop dec push or (bad) (bad) mov nop mov (bad) adc cmp cmp push ljmp xor fs mov je dec dec inc inc mov push sbb ror ljmp sub xchg dec adc repnz (bad) jle arpl jg in dec sub fcoml mov nop jne into or popa mov jne sbb xor sahf loope push popa sub mov enter movl xchg test fstps xchg nop pop stc jecxz dec pop or fwait shr pop push xor in pop jne dec shl cld pop mov jns mov daa (bad) xlat mov in cld dec das adc out adc dec mov xor mov cmc cmp add sti mov shrl fsubrs test xor mov mov aam cltd cmp iret mov out adcl movsl insb xchg mov push add lret lret fild int jmp xor dec inc iret fldpi aaa push jp les jnp add inc lock push jp jle inc test adc leave push sub lahf sbb idivb push adc popf cmp xorl fisubr pop lahf xor sub (bad) ljmp jp and adc push idivb insb addr16 stos test aas lea pop or call mov dec xor xchg fmuls stos enter mov xchg es pop and push mov mov xor sub lock insl mov fisttpll mov sbb push pop sub aas pushf push xor jno ja xlat sub jp imul jns sub (bad) pusha movswl cmp ret int3 or or xor testl and jg inc sbb scas jmp xchg xor adc ljmp pushf mov jno idivl cmc mov pop in add ja push sbb mov fiadd mov mov vpmulhw add int call mov inc pop inc sbb ja test inc or cld aas ficoml aam xchg xor call fwait mov xchg jo dec lods add xchg mov js inc push push cmp scas lcall add in xchg xchg jp ja lahf imul mov inc bound test push sti loope cwtl mov cmpsb jbe xor nop repz mov fistl or jle inc cmp dec sbb iret aaa out mov mov push ret fbstp icebp imul ret xchg sbb scas leave sbb pop pop inc js pop ss pop dec push fisubrl pop test pop cwtl (bad) sbb pop push push lcall aaa aaa mov push lods les sbb movsl dec dec dec sub lds mov sub cmpsl mov xor stos scas aam (bad) inc jmp bound xor sub stos and test int scas leave loope out (bad) lock or sub fcoml aas mov push mov lret mov add and cmp jo pop daa negl mov add cld cmp arpl and lea sarl mov loope ljmp xchg lock fs push loopne out ss inc cltd cmp aaa mov jg cli mov sbb xorl jae verw jmp mov cmp in (bad) stc inc (bad) ss dec (bad) in addl out movsl fwait xchg fs inc loop enter adc jl icebp scas mov dec add xor push mov loopne sub ja lea xchg pop cmc dec inc dec mov fisubl sahf test in sbb loop mov fwait cmp mov xchg dec mov adc mov push in in xchg push dec jl fst push pop pop push dec cmp inc mov (bad) les bound sbb pop outsl arpl fisubl imul or mov push adc psllq and mov fldenv clc pop xchg nop jno stos add push rclb jge dec mov inc repz cltd push inc dec in jl lods data16 dec pop adc add ds xchg xchg stos pop pop sub jle cmpsb insl cmp xor imul pop cld stc cld adc dec cmp sbbl dec rclb outsb dec les imul jb lea or movsb and fisubl push jae les dec xchg sbb dec outsl dec int3 clc mov imul imul mov or (bad) mov xchg cld add dec dec lods inc mov int3 pop jae fist xchg pop mov jo mov xchg xchg fsub cmpsl mov sbb ret add sbb stos push add js xchg (bad) and lods lock mov sbb push pop test pop adc repnz dec xchg pop sar cmp cmp jmp popf push and lods mov loopne pop sub test sbb hlt (bad) inc aas inc scas call adc jg mov (bad) fldcw insb pop imul xor sub repnz dec mov es ljmp enter sarb scas sahf mov loopne pop shlb mov fnop fdivrl pushf push jl jge ss cmc jnp sbb add or pusha cmpsl jmp adc out cmpsb cmp int push (bad) push xor nop stos pop mov repnz sub sti jnp outsb push or and pop push mov outsl push xchg shr in adc stos lods mov adc ret outsl add int push add scas mov cltd jns arpl mov fbld adc nop ds fstl lcall xor test bound mov mov cmp fucomi adc sub sbb push push je dec sbb or out dec mov mov xchg sbb mov (bad) cmp outsb push enter mov jno xor xchg jmp adc gs test cmp lcall cmp mov inc insl xchg push (bad) popa inc enter movsb lret sbb xchg jle push mov insl jmp aam pop cmp mov push divl cltd cmpsb push add loopne scas sbb jns dec cli imul arpl cli sbb rorb (bad) push sub faddp sti mov loope jmp and inc ret cmp push mov nopl push lahf mov rcrb mov arpl hlt xor (bad) addr16 hlt mov cmp arpl dec pusha out cmp test ljmpw mov add or out movsl out push mov mov and push fiadd jb mov xor sbb lea jmp jns pop pop pop leave pop pusha fnop mov sbb push ljmp popf lods addr16 ljmp xchg mov fwait mov (bad) and test test sbb xchg daa add adc (bad) mov and push and cmp (bad) lea (bad) lret popf dec or es int cmp mov jns ds xor int ljmp xor stos jne in jne cmc icebp (bad) inc add das loopne cmc sub enter aas fstpl or mov (bad) push std loope or and arpl mov lret inc iret lret sahf scas ljmp aam adc fldenv fldl test nop movsl test xor mov test lret rolb or xor arpl pop in xlat cs push sub insl movsb cmc jne pop and jge push jne outsl aas sbb add insb in sbb push sub jp sbb (bad) bound bound pop loopne (bad) xor sub jae mov lret xchg push stc leave cli nop aad (bad) es lock out cld sbb jp mov scas (bad) test and out jb test ss mov pop cltd dec dec sahf sarl hlt (bad) xor sub mov shrb sti push int3 add fiaddl sub adcl xor movsl icebp mov lahf push aad repz (bad) je mov jb aaa ja loope frstor cli (bad) int3 adc cmpsl dec decl ja decb and test imul (bad) es int pop mov sub and test dec pushf jl rcrl insb cmp adc pop jae (bad) sub sub push add or aad (bad) adc mov dec mov or add cs mov dec dec mov fs adc outsb (bad) movsl adc addr16 adc les in mov adc ret add stos mov jno lock (bad) and js push roll or dec int rcr (bad) neg add outsl insl add push fsubrl jle daa in or pop (bad) mov cltd movsl adc pushf cmp sbb pusha clc mov out icebp or nop (bad) fisubl dec push mov fwait lcall jmp ret addr16 lods push aaa cmp jge rorb mov mov jns jecxz push (bad) fldl cmp xchg test pop or loop out js cmp xor cmpsl stos mov call out adc sbb lods cmp nop out es push dec fisttpl push jo jge repz fadds xchg pop or sbb jbe mov ljmp push dec nop fsubr adc inc fnstcw push jmp xchg cvtps2pd pop push sbb out das imul mov mov add repz rep lret jns mov (bad) and jbe lcall movsb daa out pop into dec ljmp push js pop data16 in hlt ljmp xchg insb orl stc int mov jp xchg and movsb (bad) dec and cmpsl jns jno inc pop or sub (bad) lock jp into or nop divb sbb int or (bad) in lahf or lock loop lods cmp and push or mov (bad) jp dec fcom (bad) (bad) pop sbb mov dec fsubl cmpsb sbb bound inc mull mov cmc mov pop and xchg sti sub xchg cmp inc xchg inc or leave cmpsb pop add adc ret gs mov in hlt lock and sbb pcmpgtb jbe cmc jns dec or lahf fsubrp pushf jge pop mul fcmovnu into aas popf adc in imul sub mov test push or pusha push in add xor jmp or inc push roll pop inc mov jno (bad) xlat add adc xor dec and jg fisubrl xchg push dec mov rolb (bad) stc loopne jg push mov sbb cmpsl sbb jo in inc clc and addr16 mov push nop jl pop pop xor lret fcmovb popf inc aad cmpsb sub mov mov call out cltd rcr pop cmp ficom xor loopne inc dec pop stos test jle lcall push int push sbb sub into sub jo cwtl (bad) in pop sub scas mov mov mov sarb cli lret xor xchg mov add fwait dec inc dec inc stc fs push lcall (bad) xor sarb sub sub js and cmpsl movsb sub xor enter jmp adc leave push (bad) aad pop mov dec pop fiaddl popa jae jg push ficompl sti cmp mov xor sarl repnz fs mov sbb in push pusha movsb add (bad) jne paddusw adc stos pop popf mov stos cmp and cmp fdivl or push xor dec orl (bad) cmc mov outsl repnz arpl adc sbb and cmpsl inc pop lret jle xor stos lret pop std outsb cmp or push (bad) and push cld jmp add mov inc xchg test addr16 out mov mov movsl imul adc stc call sub xchg mov data16 fbld daa cmp lock inc and jbe aad or ljmp mov jne dec fbld lahf xchg loope dec mov mov (bad) sahf pop inc jl mov jne (bad) nop xorl clc xor les std mov adc in lods iret cmp inc inc pop dec mov sti and pop jno in pop sbb outsb cmpl mov add addr16 int3 test mov ret mov xchg insl or cltd (bad) int jecxz cld movsb dec pop test fcoml (bad) sbb sbb adcb mov push pop movsl mov ss mov loope aam dec ss push das push xchg xchg fs pop jmp jns dec xchg sbb fdiv shrl in clc xchg sub jge xchg lahf mov lcall jbe mov ret insb in mov je ja mov ljmp push mov dec jo std cmpsl jle xchg (bad) daa xor mov repnz cltd (bad) lods cmp sti leave adc mov aad jns mov pop mov mov xor lret adc and out jp movsb mov out sarl mov fidivl clc rcr jno sahf sbb test mov adc lahf repz xchg jae and popa jge cmp lcall js imul movsb cltd push popf aaa loope outsb fistl sub popa inc mov jle cmpsl jns jo inc data16 fsubs add cltd dec sub xchg mov sub test divps push add call icebp dec fadds sub loop pushf push mov mov xlat pop bsr adc and sub lret mov jno mov js and dec data16 push jl pop inc xor mov lock stos lahf not cmpsb xorl fstps pop aas sahf repz cmp (bad) mov in jle mov or sbb inc not in sub jae rclb not mov mov out (bad) aam fwait mov mov jnp adc mov int3 inc sub xor (bad) icebp repz bound les xchg sbb loopne pop xor sahf pop push xor push std test cmp push shlb jb or cwtl mov sbb or mov gs mov mov mov lea leave mov int3 xchg cmp out pushf lock jbe pop (bad) xor ficompl mov lods fisubl dec xor mov cmpl movsl out repnz cmpsb lahf das movsl test les lahf sbb sbb fbstp adc out in mov loopne fwait hlt stos test in xchg jp xor and inc sahf mov idivb outsl out lods pop pop stos inc push out xchg pop add inc roll mov lock cwtl xor stos jb fistpl inc add mov mov sbb imul sti sbbl (bad) lret cmp xchg pop mov pop pop mov jl or mov stos and jne dec sbb cld lock mov repz out or adc mov mov sahf (bad) and pop lods sub fcompl inc imul scas or into movsb (bad) pusha or sarl leave (bad) dec fcmovbe push pcmpgtb cmp sahf push repz daa push rcr stos cmp dec fwait (bad) or outsb cli js addl push cs aam lret mov std pop mov push pop lods mov mov adc and sub fstl mov shrb sub sub push jl popa cmp xorb loop and push push xor mov dec mov pushf push les jecxz mov pop mov movsl sbb push push idivb (bad) test sub fidivr jae xchg cmovns sub push xchg movsl or bound cmp cwtl inc pop out xchg std add inc popa lods xor sub add jmp scas cmp dec xchg jle jae lea dec stos into stos mov in inc sete ja (bad) push xor lcall dec aas xor movsb insb push sbb adc or pop inc movb inc imul inc sti inc iret int3 and pop xor pushf pop imul lds rcll xchg pushf pmullw (bad) lock push (bad) lods push (bad) mov loop xor lahf cmp repz in cld and pop adc push pop les popf add stos sub dec stos incb mov sbb mov in insl (bad) lret xchg pop sti fbstp jecxz dec push jmp fcmovu pop pop andb xlat in and xor out shl in mov insb in inc (bad) jmp cmp adc test fcomip jmp dec (bad) repz lock idivb cmpsl stc mov insl jbe pushf cmp (bad) jge dec inc xor lock rcrb in mov stc xchg push rcrb testl jg scas iret mov cltd or jp lods xor jne mov mov xchg jp out movsb leave dec repz push addr16 sbb inc sbb cmpsb mov push inc cmpl mov xor xchg pop mov xchg ret and add testb lret mov in (bad) in inc aas fildl lods lret and xor pop jo fnstcw or xor adcl jnp pop aad fs add sti jl js test mov hlt scas or sbb xchg jno jp dec ja cmpsb nop mov pushf lret cwtl jp pop push inc cmp pop xchg movsl arpl push stc cmp out inc adc inc push xorb push mov mov rorb bound mov fsubs mov xlat imul xchg cmp or pop push dec lea push clc repnz jl jns and rcrl cmpsb lcall popf jle push mov sub dec pusha push cmpsb or repnz push subl pop inc outsb popf aam fistpll mov jp mov pop pop outsl sub pop repz add stc (bad) bound inc pushl sub out adc scas cmp add and pop xlat xchg clc pop push ret shrb dec sahf xchg mov sub mov mov cmpsb mov (bad) in adc hlt fisttpl fmul mov stos jnp arpl jg gs mov fucomip mov dec xor sbb pop xor mov inc js sti outsb xchg stos call pop mov or in jb addr16 jae mov xchg push dec fld stos lahf push ficom add xor push (bad) cld sbb sbb data16 (bad) popa lret mov insb loop fiadd sarb fimul enter xor and imul dec push xchg xchg sbb push mov sub or push mov mov pop sbb dec or loop daa or lods jnp sub jno adc sub mov xchg aad into add adc inc mov aaa xchg (bad) sub sahf jb push stos fldcw jl out cmc movsl xor out sbb xchg mov dec scas (bad) popf cwtl inc xor cli lds and mov lret jae push fcmovne sti inc adc xchg or adc mov cmc das frstor xchg test sti adc dec das jns (bad) push loop aaa (bad) movsb xchg sarb lret xchg adc push xchg mov inc cmp mov sarl nop dec (bad) pop xor (bad) dec hlt sti in inc and sti mov xchg repnz repz push add pop xchg fidiv adc sub popf repz insb pusha arpl lods (bad) ja xor inc jne push cld out push inc stos sub repz adc xor hlt cmp push aaa andb mov push test jo jae test xchg leave sub into es hlt shrl or in sbb scas jne test push jmp xor mov hlt or (bad) mov or stos idiv pop or int3 adc fisubl in stos out insb xor cmpsl scas push push mov mov dec stos mov bnd incb add fdivs pop push ljmp mov sbb cld das cld push push mov iret mov cmp sub rol ds scas adc movsb or (bad) adc or sbb jmp cmc imul sbb sbb mov sub inc scas dec adc loopne xor or jmp repnz cltd dec lahf mov arpl adc sbb lock loope dec mov add lcall sub (bad) jbe lods loope mov push sbb pop xchg push stos adc pop sub jne int3 xchg mov or inc push out ljmp scas aaa cmp xor roll sbb push jns int sbb xor popa fwait aaa out xorb fistp ret stos and call cmc ror pop cltd push adc lcall mov add mov adc jle test sbb int3 sti ljmp lret fsubr sub xor xchg xchg lock sarl sarb lea das dec scas adc mov xchg lahf (bad) out mov test inc dec pop out mov stos xor and cmpl mov xor dec sub mov bound pop leave push aad call sahf mov jb lods rcl dec imul pop cmp xor std or pop (bad) and popa loop xorl sub out (bad) fsubrl cmp les xchg sbb fwait dec or ret arpl sbb clc insl pop dec (bad) fwait orl or pushf lret movsb adcl sarb arpl test cmp sti fldt orl and sarb jnp and add mov dec jl mov jge cltd loop jl cvttps2pi into xchg (bad) mov dec int3 dec jae cmpsl xor fldcw ss inc int3 int imull dec cwtl icebp (bad) mov and xor and in hlt (bad) or push xor cmp dec lret fistp pop test inc sarb out push repnz pushf (bad) pushf or inc push inc and push inc daa adc inc imul pop dec fwait inc add mov gs leave sbb ds out iret inc sarb sub cwtl pop xor fbld mov or mov arpl test jl rcrb insb mov addl mov sub sub scas enter fisub das push cs or pushf insl aam mov nop xor dec add jnp,pn mov jae call (bad) mulb gs jecxz mov or idivb mov lds aas repz or outsl shll dec fisttpl mov push (bad) enter adc cmp fnop les xlat mov dec xchg adc mov mov mov push adc imul jnp sbb mov mov xchg (bad) adc fmuls pop scas sub adc insl xchg xchg jp adc aam scas mov add leave dec (bad) jnp or test pop jno sub push ljmp and ja xor pushf das out cld mov es mov out shl mov fmull xchg mov lcall mov out leave pop in insb stos lock or aaa adc inc xor rol jo sbb xchg and je hlt fidiv cmp cmpsl dec dec mov cmp dec test cmc cmp jg xchg (bad) ss push arpl xchg sub fildll add dec mov mov mov cmc cmp dec inc mov iret jl dec pusha jae aam daa test xchg fdiv dec sti int jae fistpl jo mov push cmp xor out mov fstpt lods xchg rorl xchg out xor stos fmulp lahf and xor sbb imul push xorw mov xor mov (bad) jl mov addr16 or adc sbb xchg jg xchg fwait in (bad) sub rep mov jmp stos pop fstl cwtl scas or sub sub dec sbb xor leave lods jae es js fistp mov scas movsb (bad) jmp dec sub aad stos mov xor mov or mov lods stos insl jp cmp or mov lea xchg daa les fcompl pop cmpsl add push push scas fwait cmpsl adc das in inc in jno scas or lock lahf dec sub inc jge dec clc sbb sub subl fsubl jl ja xchg sbb sbb and jecxz add adc xchg mov jg clc xor fist fdivp shlb and xor adc aam cld ds test (bad) add enter adc ficom enter xchg out xor cs cwtl pop pop pop push mov dec push adc jge and jmp sub lods jno iret (bad) mov lods fsubrs les mov push fwait inc int push lock push stc jb (bad) mov dec nop xlat sub loopne dec push pop xor mov inc ficom push add fmul add ret aaa mov outsl pusha mov push popa mov lret xor dec add pop scas loope in imul jnp loop loope xor sbbl lock lds outsl and inc js pop push sti into fcmovbe sti pslld mov adc sub dec jnp and (bad) xor arpl jle rcrl test movb push insl push add cltd subl movsb adc fildll mull cmp jae xlat das pop sarl xor push push or sub pop popl push xor ret xor out cmp xchg sub data16 add xchg jp lcall sub xchg cmp jnp icebp rclb mov sbb loope movsb mov push out or insb add cmp jle,pt hlt scas imul pusha int xchg jle mov clc nopl jo (bad) std adc jae call je out push xor mov inc sub nop jge xchg or mov loop andl icebp lods inc dec sub sbb mov dec pop cmpl mov in cld rcrl jns dec pop add loop xchg lock xorb data16 cld (bad) xchg pop andl push or mov mov sbb xor loope movsb cmp xor aad insl jo sub data16 cmpsl outsl mul ret mov or movsb push push jnp jns call cmpl inc cmp inc mov adc shrb shl fdivrl ret dec out leave add add xlat in mov lds js inc mov jo les in fistpl push add sbb rol cmc in xchg mov aam pop cmp push jg test or lret jle aad xor in xchg xor cmpl mov and or repz mov iret pusha mov xlat test (bad) out adc inc sbbl add repnz testl stc mov cmp dec adc cmpsl (bad) jmp pop ret or adc jns pop sub enter das mov lods xchg dec repnz or loope push (bad) dec mov jae and sub mov movsl xchg jns jno sbb (bad) push and std movsb (bad) push mov jmp add ret fildl movsb add insl repz fistl incl cwtl sub fxam push sbb addr16 lret fisttpll sub inc int3 shll jmp pop sbb or and mov fwait jmp pop adc cmpsl add pop mov imul jno imul mov ds dec mov adc sbb lock arpl and mov divl jmp fs fcom lret (bad) fs mov dec lods rolb lret je cmpl sbb mov mov ret roll gs pop pop lcall fldenv pop mov xchg or rclb sub and lea jne in push test aam sahf and pop popf outsl mov loopne jl shr gs lock bound dec arpl clc xlat aas popf popl jg jecxz cmp iret pop aaa mov dec mov rcl imul push mov cld js in mov cmp dec aam push aam mov stos sbb push faddl aas dec aas out jg push push das or sahf sbb mov ds add or fcoml mov scas and lock aas jl jo sbb sahf repz (bad) (bad) lcall push xchg push pop test rclb imul jo sti mov push push test clc and (bad) (bad) stos loop jnp aam sahf push add add mov or pop and adc xor pop clc lds aas lcall add pop mov pop sbb stos imulb mov cpuid sbb mov bnd pop popl dec frstor lret add leave mov jne out cmp push xchg adc inc jmp mov lock jg or xchg aam cmpsl mov clc cld call xor xchg out add mov lock arpl mov cmp sub cmp sub nop sub test divl inc pop aam push fadds add mov repnz lahf icebp dec (bad) jo arpl adc rorb mov jmp add xlat mov mov and movsb xchg add out stos popf cld dec push cmp sbb cmp cmp mov incb aas ficompl ss loop test xchg out movsb (bad) lahf xlat sbb mov daa mov out icebp lods cli movsl sbbb sbb jnp mov js sbb xor (bad) jne arpl (bad) push mov dec fldt pop push adc lcall imul stos shrl jns stos aas dec dec push js jl sub jle cmp insl push fimul fdivrs inc aad or inc out cs jns mov push icebp fiaddl jp aad or int3 mov or test arpl lds jg xchg mov add les mov pop je cmp scas vhsubpd mov movsl lret fdivl arpl ret movsl (bad) xchg push xor jmp add clc (bad) std add jle push dec (bad) and xor pop (bad) sbb jle ret pop push call mov push in je or lods cmp push adc sahf std inc mov std add pushl int aad loope js mov xchg stos lea test and adc js divb sbb dec lret sub aam add pop dec sub lret and xchg dec arpl and dec xchg push or out xor ret in (bad) das cltd and cmpsl jnp imul out pop loopne push lcall push movsb pop fmuls push push sub jle push repnz sub fistp inc shrb icebp out ret sti pop fs cmp aam iret jmp fcompl scas into add lea push cmc ret fiadd inc std and jecxz ret cmpsb inc push fs (bad) sti fstp jecxz dec xor daa mov xor sbb out dec jg and int arpl mov mov fadd xchg insb fidivl insb pop fs jnp mov dec and mov imul cmp (bad) add pusha push popf xchg sub addb add dec jbe int3 push xchg ljmp (bad) fldcw mov fs lods cmp aad xor ja sbb mov stos xor ret dec (bad) sti cld mov int3 push xor int add arpl sub push mov (bad) xchg mov es dec out or fwait loopne loopne scas loopne pop lock outsl data16 mov sbb bound mov lcall inc adc jmp mov dec mov lret sub pop mov js mov rolb mov lock sbb (bad) clc jbe and mov (bad) ja scas push push lds mov scas stc sub lds dec jg rorb xor into into (bad) xchg xchg add cmp push jp pop ja scas cmpsl dec pop rcrl aam rcr js insb icebp mov outsb push aam xchg cmpsb roll push and pop sub (bad) cmp gs pop push add or xchg xor or jmp rcrb and icebp xchg mov (bad) cmp inc ret lock and push mov or nop pop and cmp push mov inc dec mov (bad) fadd fistpll mov cmc xor xchg iret ljmp fmull adc int3 mov xchg inc mov pop fadds (bad) (bad) xor push add sub inc faddl inc push in pop pusha fs in jg popf or mov sbb mov mov mov js shlb and ja das dec mov stc pop lret iret mov in (bad) jne in sbb leave jl jmp int adc add mov fcomps or nop roll xor fsin es hlt sti ja push ret push pop xchg ret repnz cmc cli push iret (bad) (bad) xor loop ljmp pop and mov push push int3 sbb pop push mov fstpl dec adc ficomp pop cmp cmp dec (bad) xchg adc dec jp lds push (bad) or inc fadds xchg jl test adc sarl push jbe add xor in cmc (bad) lea xchg mov mov adc jno sbb jbe iret lret push cmp add daa fadds xchg es xchg cltd or ja (bad) adc adc xor stc mov mov adc jno aaa in std dec lods mov push jo mov js addr16 pop jg jmp mov mov outsl xor cmc cmpsb out in add ljmp std jno (bad) or adc imul cmp sub rorl test dec idivl fs xor mov fs lods call sbb incl sbb je popf inc jecxz inc outsl call or inc pop fdivrl repnz movsl push inc add push jae jb adc adc or in scas dec fs and daa sbb mov lea adc push jmp aaa or jne pop push sub insl (bad) (bad) mov and idiv fwait push jae lods xchg imul xchg jne and pop push iret test popf mov xchg cmp xor lock mov sub imulb sub sub movsb xchg inc xlat std xchg xor imul ret int3 (bad) dec int3 pop jge and int3 add push les sbb lods (bad) jecxz cmp mov inc xor in iret pop and or mov mov or es jo das mov pop lahf adc mov push sbb pusha push out and dec aaa push inc lret mov xchg icebp fs dec scas mov or scas testb cld (bad) mov repnz cmpsb jmp inc lds scas lcall fcomip ss dec int mov pop and sbb cli or ljmp ret imul cmp (bad) jo and insl or dec pop add mov mov ret jecxz scas insl pop lcall fcomps adc loop mov xlat or mov mov fildll lcall pop (bad) sub daa mov or lret test int or push mov mov pop enter data16 je push xor pop add popf mov (bad) mov mov aam add mov es mov ds sahf (bad) inc sbb mov add out movsl and cmp das arpl cmc shrb fwait and (bad) repnz mov cwtl jae insl insb push in pop jecxz adc cmpl fs stos dec push imul lea stos out xchg imul jecxz ss (bad) ja imul push or loope xor scas out leave push ja insb mov mov je and lock push jno push jne rcrb outsl arpl (bad) dec mov ljmp loopne mov stos add out pop pop cmp outsb push sub test push out inc jns aam sbb (bad) mov mov pop push icebp lret nop pop cmp xchg pop std fist lods push mov mov sbb mov data16 mov inc je jns pusha xor xchg ljmp mov push sub pusha mov std and or mov enter inc movsb fmuls or sbb pop arpl jbe jl aaa in js rorl push jle inc out hlt movl xchg popa inc adc dec pushf into in or push mov or insl adc adc and cltd int sub push ret pop sbb outsl pop jmp mov dec jbe pushf xchg sbb loop jmp ffreep imul mov adc movsb arpl (bad) jo push int or pop dec arpl inc lahf xor xchg mov jns push mov leave or sahf fldt push or add mov nop adc mov cmp sbb popf add out test adc push sub jecxz xor test xchg sub inc and ret push idiv mov cmp popa test xchg cld xchg sbb or mov add add add add add add add add add add add add add add add add add add popa push out mov les (bad) hlt push xor xchg fs xor fdivrl jmp rclb mov sub mov sbb dec jno repz test ficompl jmp (bad) mov hlt movl imul std in leave mov add insb push arpl psubd or outsb cmp imul addr16 add aam dec std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne fild or shrl cmp ficom push xlat enter mov and mov cltd xchg mov mov or or and or adc stos sbb data16 inc fdivl jno add aad mov mov movsl in lahf xor mov js stc add mov push loope or insl or pop arpl hlt push imul insb sbb xor dec add in xchg push insb jnp add (bad) hlt or (bad) fnstenv adc mov mov bound ficoml gs aam pop popa mov into push mov je mov aam movsl fisttp xchg fdivrs sti hlt (bad) shrl imul mov sarb add in add pop dec or cmp add daa adc or and test or mov popa into push stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov in mov mov add inc aad scas ja popf adc push fdivl or test fs ds or or push in decl xchg daa scas add mov pop jge xchg (bad) shlb add inc push imul xorb sbb push imul aam loopne rorl int3 dec frstor fistpll mov mov aad mov call xchg shll push repnz addr16 cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns imul andl shrb ss push xchg ja int3 add mov das es lds or sub mov cmpsl call ret (bad) mov sahf fldcw ret es pushf mov insl add ss jmp addr16 jb push add adc mov jnp sbb xchg or out fdivrl fisttpl aam roll clc mov push int mov mul ja outsl ja mov out or lret pop or adc sahf gs scas (bad) clc sar imul insb push js or push addl mov cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild cmp aaa push scas mov fidivr mov jmp repnz lret mov cmpsb mov sarb sub push mov jp mov dec popa les sbb xchg sub aaa mov or sbb add sub add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add jae add addl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add popa add add add add add add add add add add add add push add add add add add adc add sbb add and add xor add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add or add add add add add add add add or add push push add add cmovb inc add add add add or add jbe xor xor add add add add add and add add and jb outsb addr16 add add add add add push push add add and dec inc add add add and outsl bound add add add push xchg mov add cli add add add add add pop add add add scas add add add lsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add add push add add add add add add add add add add add push add cmp add add add add add add add add add add add sub add push add sub add add add add add add add add add add add add add add add cmp add add add sub add add add add add add add add add add cmp pop add jg imul fwait add mov add add add faddl jecxz out add clts push add push cmp push cmp push sub push add push add add add add add push clts push add push cmp push call pop call pop cmp pop nop add add add add movb add add pop incl add call or add add call or add add add or or or or or or add add or add add or or or or or or add add out add add add add or add add or add add or or add or add add or push add or add or push add add add add add add add add add add add add add add sbb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add je addb add add add add add add add add add add add add add add add add add xor add add add add xor xor movsb add add add add add add add add xor add add xor enter adc sub xor lret add add add add add add add out add add xor add add add add add add add add add xor add add add add add add add add add add add add add add add add add add push add xor add or add add add add adc rorl add add pop add add add or add add pop add or add add or add add or add add or add add or add add or add add or add add or add add add add add xor add or add add or add add or add add add add add xor add add add add xor test push add add add add xor test push add add add add add add add add add add add add add add add test push add add add add add add add add add add add add add add add add add add add add add add add add stos add add add cmpsl or add add add add add add add add add add stos add add add mov add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add or add add add add add add or add xor add add add or add add add add or add add add add or add add add add or add add add add add xor add add add or add add add add or add add add add add add add or add add add add or add add add add or add add add add or add add add add add xor add add add or add add add add add xor add add add add xor add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add and ret add and ret add and faddl add and ret add and ret add and iret add add ret add add ret add add add add add add add add roll out add add add and iret add add ret add add add add add add add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xchg add add add xchg add add add xchg add add add adc iret add xchg add add add xchg add add add xchg add add add dec push adc iret add push push adc ret add add pop push add add add pop push add add pop push add add xchg add add add xchg add add add push add add add add add add add add add add add add add add add add fild xchg add add add xchg add add add xchg add add add push add add add add add add add add add add add add push add add add add add add xchg add add add xchg add add add xchg add add add xchg add add add add add add add add add add add add add add add add add add add add add add faddl push add add add push add add add add xchg add add add xchg add add add xchg add add add xchg add add add xchg add add add add add add add add add xchg add add add xchg add add add xchg add add add add add add add add add xchg add add add add add add push add add add xchg add add add add add add add add add add roll push add add add add add add add add add xchg add add add add add add add add add add add add xchg add ret add push add add add add add add add add add add add add add add adc iret add adc ret add adc ret add adc iret add adc ret add adc iret add adc ret add adc iret add adc ret add adc iret add adc roll data16 add add add add add add add add add or add add add inc or add or xchg sbb add add or adc mov pop add add add add add add add add add add sub add add add add add add add xchg add add add add add add add add add add add add add add add add xchg add add add add add xchg add add cmp add add add add cmp add add add add add or xchg add into add add add or xchg add add add or xchg add add add add add addl add add add cmp add add add add xchg add add aas add or xchg add add aas add or xchg add add add add inc add or sbbl add add add inc add or addl add add pusha inc add or addl add add movsb inc add or addl add add add add add add inc add or xchg add add inc add or xchg add add inc add or sbbl add add add add or addl add add add inc add or addl add add add dec add or addl add add add add or addl add or in add or xchg add add add add or xchg add add dec add or xchg add add dec add or xchg add add or add add add add dec add or addl add push add add or addl add verw add or addl add add add add add add add add add push add add add add add add add or xchg add add sbb andb or xchg add add data16 or xchg add add data16 or xchg add add data16 or xchg add add data16 or xchg add add data16 or xchg add add add or xchg add add add sub add add add add add or xchg add add daa add add or xchg add add add add add add add add add add add xchg add add add add add or xchg add add xor add add add add push xchg add add cmp sbb add add add add push xchg add add add dec push xchg add add add add add or xchg add add push xchg add add add mov add add mov add add mov add add add or add add add int3 insb add or addl add add enter or xchg add add outsb add or xchg add add outsb add or xchg add add dec add outsl add or sbbl add add outsl add or addl add dec add jno add add add dec jae add add add jl add or addl add add lods jae add add add loopne add or xchg add add jae add add add or or xchg add add push add je add add add inc je add add add pop jne add add add inc jbe add add add js add or xchg add add js add add add mov add add mov add add in jns add add add jp add add add cwtl jnp add add add sub add or addl add pop add add add rolb addl add popa add addl add add addl add add (bad) add or xchg add add bound xor xchg add add add add or xchg add add imul (bad) add or addl add add (bad) add or addl add add test add add add test add add add test add add add test add add add test add add add test add add add test add add add test add add add test add add add add xchg add add add add add or adc ret add add or adc ret add add mov add add add add mov add add add add mov add add add add add lock add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add popl loopne add or adc ret add xchg add cwtl add or adc ret add xchg add cwtl add or adc ret add xchg add add or adc ret add cwtl add or xchg add add add or xchg add add cwtl add or xchg add add cwtl add or xchg add add cwtl add or xchg add add cwtl add cwtl add or xchg add add cwtl add or xchg add add cltd add add or xchg add add add add add add add add add add add add add add add add add or adc ret add add add add add add add add add add add add add add add add add add add add or xchg add add movsb add or xchg add add movsb add add add add add add add add add add add add add add add add add test add add add add add add add add add cmpsl add or xchg add add cmpsl add or xchg add add test add add add add add add add add add add add add add add add add add test add add add add add add add add add add add add add add rolb scas add or adc ret add add add or adc ret add add or adc ret add mov add add add add mov add add add add mov add add add add mov add add add add mov add add add add mov add add add add mov add add add add mov add add add add mov add add add add add or xchg add add mov add add add add add or xchg add add add add add or xchg add add add add xchg add add add add xchg add add add add xchg add add mov add add add add mov add add add add add or sbbl add add add mov add add add add mov add add add add add add add add or adc ret add add add or adc ret add add add or adc ret add out add mov adc ret add icebp add mov adc ret add add add or adc ret add mov xchg add add mov xchg add add mov xchg add add cmc add xchg add add testb mov xchg add add testl or xchg add add add add mov xchg repnz add add xchg repnz cli add add add add add or xchg or add add add add add les ret add sti add add add add rolb or adc ret add rolb or adc ret add rolb or adc ret add incl adc add or adc ret add add or xchg add add add inc roll or xchg add add roll or xchg add add roll or xchg add add add add add add add add add add add xchg add add add add roll or xchg add add roll or xchg add add pop add roll or xchg add add add add ret or xchg add add or sub add or xchg repnz add add add add add or movsb les add add add cld lds add add add add or adc add or adc ret add add or adc ret add add add or xchg add add lidtl add add add add add or xchg add add movb or xchg add add movb or xchg add add add add or xchg add add adc add add add add movb or xchg sbb add add add add leave add or xchg add add add add int3 add or adc ret add push sbb xor add or xchg add add sbb dec int3 add or xchg add add sbb push add push sbb add add add add add add add xchg add add int3 add or xchg add add add add or xchg repnz add add int3 add or xchg add add add add les ret add and in into add or addl and int3 iret add or adc ret add and in add or adc ret add add or xchg add add and sbb add or xchg add add rolb add add add add add or xchg add add sub pop rolb add add add add or xchg add add sub mov add or adc ret add sub and add or adc ret add das add adc ret add add or adc iret add xlat add or adc ret add xlat add or adc ret add xlat add or xchg add add fadds add add add add fadds add add add add add or xchg add add aas add add or xchg add add add insb fadds add add add add or xchg add add inc add add add mov add add call add add hlt fadds add add add or add or xchg add add flds add add add xor add or xchg repnz add push flds add add add add add addb and add push inc add add or xchg or add add add (bad) fiaddl add add pop dec add loope add add add loope add add add loope add add add test add or xchg add add add mov add pop dec add xchg add add loope add add add in add or xchg add add add add add or xchg add add add sbb add or xchg add add add xor add or xchg add add add loop add add pop push add add add add mov add or xchg add add add xchg add add add shl add add pop pop add loop add add pop pop add loop add add pop pop add add or xchg add add add add jecxz add add add dec jecxz add add add jecxz add add pop add add add pushf jecxz add add add mov add add aam add or xchg add add add jecxz add add add or add or xchg add add in add add add inc in add add add pusha in add add pop je jl add or xchg add add add cwtl in add add add mov add or xchg add add jp int3 in add add add call add add in add add add sbb add or xchg repnz add add or xchg ret add pop jg and add or xchg add add add add or xchg add add pop (bad) add add add pop test js add or xchg add add add add add add add add add add add pop xchg fsubr add or xchg add add add add add pop mov adc add or xchg add add add add add or xchg add add pop mov dec jmp add add add add add add add add add add add add add add pop xchg add in add or xchg add add or or xchg add add or add add add add add add add add add add or xchg add add add add or xchg add add sti add or xchg add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop scas add xchg add add add add add add add add add add add add add add add add add add add add add add add or add add or add add add add xchg add add std add or xchg add add lret std add or xchg add add std add or xchg add add incb add add or add add or xchg add add or add add add add add add or xchg add add add add add add add add add add add or add incb add add pop fldl call add add add incl add add pop fild sbb add or xchg add add add add incl add add or add add add or add add or xchg add add out nop incl add add or add add add add incl add add add add incl add add add add incl add add pop lock add or xchg repnz add add add add add add add add add add add add add add add add or add add add add xchg add add testb or add add add add or add add add add or add add add add or add add add add xchg add add or add xchg add add or add or xchg add add add push or xchg add add or add add add add mov xchg add add pop add add or add xchg add add add or xchg add add pop or hlt or xchg add add add add push add or xchg add add add add add or xchg add add add add add or xchg add add add fs add or xchg add add push add or xchg repnz add add xchg ret add or add add add add sgdtl or xchg mov clc sgdtl or xchg add add adc add add add add add or xchg mov js add or xchg ret add add add adc add add add clc adc add add add fcoml add add add add adc add add add add xchg add add pop add xchg add add and cmp add or xchg repnz add add add add add add or add pop add or xchg ret add sub inc sbb add add or add sbb add add add add add add add sbb add add add add sbb add add add add xchg iret add add add add add add xchg add add sbb xchg add add xor lock xchg add add or add add or xchg add add add add push add or xchg add add add add add add add add add add add pusha and add add add test add or addl inc add add or xchg ret add inc add sub add add add loopne add or xchg add add sub add add add or add or xchg add add inc add sub add add or inc sub add add or pop sub add add add js add or xchg repnz add xchg sub add add add push add or xor add or xchg ret add xor add add or lods xor add add add les add or xchg add add dec add xor add add or clc xor add add or adc add or xchg add add xor add add add cmp add or xchg add add push add add add add js add or xchg repnz add dec xor add add add xor add add add test add or xchg mov les add or xchg add add xor add add add add add or xchg ret add add or xchg add add pop add add add add or xchg add add add or xchg add add add or xchg add add add or xchg add add add xor add or xchg add add add dec aaa add or xchg add add aaa add or xchg add add add test add or xchg add add aaa add or xchg add add imul aaa add or xchg sbb add add or xchg repnz cmp add add or xchg cmp add add add mov add or addl outsb add add add or sub add or xchg ret add add call add add dec inc add or xchg ret add inc add or xchg iret add inc add or xchg ret add jns sbb add add or clc dec add or xchg iret add dec add or xchg add add dec add or xchg add add dec add or xchg add add dec add or xchg add add jle inc dec add or xchg add add jg pop dec add or xchg add add addb dec add or xchg add add dec add or xchg add add add or xchg add add or add add add add add or add add add add add add add add add add add add add add or add add or add add add add add or add add add add add or add add add add add add add add or add add or add add add add add add add add add add add add add add or or xchg add add or add add or add add or add add or add add add or addl lods add addl lods add add add or addl lods add add add or add add or add add add add add add add add add add add add add add add add add add add add or add add or add add or or xchg add add mov add add or add jp add add pop movb jp add add pop movl or xchg repnz add add add add add add xchg ret add leave add jnp add add add add jnp add add add add jl add add add add jle add add add add add add add add jg add add add add add or xchg add add addb or xchg add add roll cmp xchg add add (bad) add add or xchg repnz add add add add add add xchg ret add add add xchg iret add add add addb or xchg ret add add add add or xchg iret add add add add or xchg add add add add add add add add add or xchg add add addl add add add add add add add add add add xchg add add add add addl add add add add xchg add add addl add add add add xchg add add addl add add add add addl add add addl add add addl add add (bad) add add xchg add add (bad) add add xchg add add (bad) add add xchg add add (bad) add add xchg add add (bad) add add xchg add add or add (bad) add add xchg add add add add (bad) add add xchg add add or add (bad) add add xchg add add or add add add xchg add add add add add xchg add add or add add add xchg add add or add add add xchg add add push testb (bad) add add xchg add add or add add add or add add add or add add or add add or add add or add add or add add or add add or add xchg add add or add xchg add add add mov add or add add add add (bad) add add xchg add add add (bad) add add xchg add add or add (bad) add add xchg add add or add (bad) add add xchg add add add add xchg add add or add (bad) add add xchg add add or add add or add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add ret add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add roll add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub add jne sub sub jl or aaa add add add cltd add xchg mov add add dec add add imul test roll imul jno call add add mov repnz add add add add aad add add add add add add add add add add cmp add add add or add cmp icebp add add add add add add add add add add add add add add push add repnz add add add add add add add add add add add add add add add lds (bad) add repnz add repnz adc addl mov dec push ss mov repnz add add add add add push sbb sub mov mov add add repnz add add add add push pop and add or and or sysret and adc add and pop fldl dec add add add add add add add pop stc add pop dec pop dec add pop push pop dec add lret add pop push pop dec add pop bound dec add pop insl pop dec add pop jp add pop or jns or add or jns jge sahf push or inc or or or or or or add cwtl or or sub repnz add int flds inc add pop dec add add add add pop inc add add add repnz add repnz add lret add add or add add lret add lret add lret add xchg or jnp mov test or or cwtl or pop add add add or or fmull fimul pop add or or in or add add repnz add repnz add add mov jno call add dec add stos or or push dec add or or add or or clc or xchg add add add add add roll roll roll jle leave add add add roll roll roll roll orl add add or add add or add add or add add or add add or add (bad) add add add adc add sahf or add lret or add sahf or add add add pop inc add add pop jecxz fildl xchg add push mov xchg add push mov xchg add jnp jnp adc adc adc add add add add add add add add add add add add add add add add add out add add add add add sub add sbb add adc add xor add add add add add add add add add xor add or add xor add dec add add add add arpl cmc add add add add add add add pop add add and ds add add add add lods add and dec push pop push jno mov aad fildl mov ret pop add invd pop or out or or or or or or js mov fimul call or or or adc add add add add add add add add or add add or add add or add add add or add add or add add or add add or add add add add add add add add add add add add add add add add add add add add add add push add add sbb adc outsl add jb dec add add lret or or add rolb add in add add and add das add add add cmp sub add cmp cmp add lcall add add pushf add add popf add add sahf add add lahf add lret mov add add add add movsl add lock add cmpsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add popa add add add add add add add add add add add add add add add add add add add add add add add add add add add add and and add add add add add add add add add add add add and sub add add add add add add add add add add das add add add add add add add add add add add add add add add add add add add add add add add add add add add add add ret add add add ret add add add iret add add add add add add add add add add add add add add add test lock add add add add add pusha add push add push out add push push add pop add or push add add add add or xor add add verw add add ret mov add lds cs add mov add lds add arpl insb imul gs cs imul inc outsl jb jae push jns je insl add jae gs cs outsl jb add jae outsl popa add jb gs xor add cmp xor data16 sub sub sub sub cmp cmp xor xor jge popa cmp xor ss sub gs jne arpl jb,pn jae jne arpl add xor xor xor add add add arpl outsl jb inc jb popa jns push jne je insl gs imul fs add insl outsl jb push je gs insl add jae gs cs dec add arpl add outsb je xor push jns add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl inc jne data16 inc insb outsl arpl outsl jo add arpl imul je insl cs gs add je push push inc cmp inc gs je imul imul gs add add add xor push popa ja push data16 imul add je jo jbe pop dec push jbe arpl push xor dec bound inc inc js dec arpl push add xor inc insl pop inc aaa cmp push pop dec inc dec add outsb je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul inc jb popa jns inc push pop ss dec imul popa xor imul dec outsb push arpl inc pop js inc xor push je gs insl add je dec outsb addr16 add push pop ss pop jbe dec xor add popa fs jns add push dec jae xor dec xor inc pop push dec add popa add inc ja arpl cmp push cmp insb popa ss inc xor dec push xor gs dec add je inc inc xor je push jo outsb pop jb or push popa insb jne push jns add add add dec bound arpl str popa je add js (bad) lldt imul lldt lldt sldt jae insl bound push jns je insl cs gs arpl outsb add jb jo outsl push jb outsb jae outsl jb add jae gs cs arpl imul je addr16 jo jns push arpl imul jb je arpl inc je jb bound add jae gs cs arpl imul imul add je outsl fs popa jae add je outsl fs outsb outsw add insl insl gs imul imul outsl insl add gs je inc arpl jo outsl jb dec gs add je push popa fs pop inc outsb je jns outsl imul dec inc imul insb add push fs gs add gs imul pop dec outsl ja inc imul inc jb popa je add str outsl insl jo jb bound push je imul fs push outsl push je imul outsb add lldt sldt inc outsl insb insb arpl outsb dec outsl fs add insb insb arpl sldt imul jae inc jne outsl push arpl gs outsl fs outsl arpl jae push jns je insl cs imul imul xor cmp inc gs jbe inc jns gs inc outsl outsb je imul je outsl insb add je dec gs inc gs jns gs jae je dec push add je inc jne outsl push arpl gs outsl fs jbe imul push add jae gs cs push imul gs inc gs jne jb outsb je jb arpl jae add add sldt jns je push je gs insl add jns je push je gs insl dec outsl fs jne push insb inc insb outsl arpl adc insl jo outsb outsb je push jns je insl cs outsl insl jo outsb outsb je outsl fs add outsl outsb je imul je or dec inc outsl insl jo outsb outsb je inc outsl outsb je imul imul je inc fs sldt jb add outsb je outsl insb add je push gs add sldt je add jb add outsb arpl add jne gs bound push jns je insl cs imul arpl inc outsb jne gs bound xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push outsl inc jb popa jns push push inc push push inc je jb bound add gs jo outsb add je push outsl je insb dec imul outsb fs sbb add gs outsl outsb je outsl insb add sldt popa jae xor dec outsl popa add insl jo insb gs outsb gs je fs je jb bound add add ltr str sldt je imul sldt arpl je outsl outsb add add je outsl outsb popa jb pusha xor dec outsl jbe inc imul jae insb jbe inc jbe outsb je popa outsb fs gs inc imul insl add jo jns inc outsl outsb je imul addr16 dec je insl add je dec je insl add insb gs outsl popa fs js gs imul dec insl popa addr16 outsl jb popa je js gs imul pop dec popa imul add outsl arpl jae outsl fs add je dec outsl fs gs popa insl add outsl ja jb inc jo inc outsl insl popa imul inc jne jb outsb je outsl insl popa imul inc jae gs bound gs insb jbe add jae insb jbe inc jbe outsb je jb jae addr16 dec popa insl add outsb jbe jb add popa jae ss je imul imul push dec outsb fs data16 bound jb outsb add outsb imul gs inc gs js arpl imul insl bound inc gs popa outsb imul jae jne arpl je gs insl add je add je gs jo popa je add jb popa je inc imul jns inc jb popa je inc imul jns inc imul jns outsb outsw add insb add imul outsb push jb je add outsl jae add fs imul add lldt jb imul insl add popa jb jae imul je jb bound gs jae addr16 je jb bound add je imul jb gs add add push fs gs dec popa outsb popa gs push inc jb jo outsl push gs imul imul insl popa je js gs imul pop pop gs jb addr16 dec outsl outsb je add je inc popa jns addr16 dec outsl jne add je dec imul gs push arpl add je popa insl add jae insl bound popa insl add je jne insb imul jb popa je inc outsb arpl jo outsl jb inc gs popa insb insb imul insl bound addr16 push outsl jae je outsl outsb add outsb jae outsl jb inc imul arpl push gs gs imul jae je push outsl jae je outsl outsb add jne push pop dec gs popa add ltr verr je or dec outsb jbe insb imul imul jo imul jne outsb je jne dec push popa outsb addr16 js gs imul jns sbb add je xor and add pop add pop add je add pop add pop add pop add pop add imul adc add pop add pop add add pop add pop add push add pop add push add push add add add push add push add push add pop inc jno popa insb imul push add push add push add pop add push add push add push add add add pop add push add pop push jne je popa arpl outsb add pop add push add pop add push add outsb arpl add pop add push add pop add push add pop add add add popa jb sbb add push add pop add push add pop add push add push add pop add push add add pop dec outsb gs popa insb imul push add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound gs jb jo imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound imul imul outsl insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add imul jne add jae insl bound imul outsl outsb inc je jb bound add jae insl bound jb fs je je jb bound add sbb jae jo outsb add je pop add jo add js add adc xor ja jo add js add or add dec add push add cmp push add add xor push add add push add pop add add pop add push add add insl add jae dec add inc add add dec add popa add dec add add insb add bound xor je insb add push xor jne add js jae sub pop add pop add cmp cmp cmp xor xor data16 add add add add add add data16 add add add add add add add add add add add xor jge add jnp xor jge jnp xor jge pop add or add add or jne insb add adc add jae imul cmp add jne je jb popa add pop push add bound insb add arpl dec add jns push add imul add cmp add insb add add add add add jne insb add add add add add jne bound insb add arpl dec add jns push add imul add cmp add add add jae imul cmp add outsl add add add add add jb and push add add popa add add add sbb imul add ja outsb add add add add jb add popa add add add push add add add add add add add add add test fisttp fistp or cmc jne add mov pop push sbb mov push sbb sub pop add or add add pop add pop add add add or or or or or add add sbb add pop push or or or or or push pop or push add sbb adc push add adc add adc add add adc add and and push sbb add push push push adc add add add add push add add or add or add add add add sbb and or add sbb and or add sbb or add sbb add sbb add or and add or adc sbb or add or pop add or or pop push or or or or add sbb adc add adc or add sub or or or add add or add sbb push adc add adc push adc push sbb adc add add push adc and add add or pop add or and add sub adc sub or or or or or or and adc or or or or or or add or or or add add or add add add add or or or add add add add add sbb sbb push add add or or push adc push and or adc add sbb add or or add adc or adc or add add and add sub add or add add or add or pop and add add sbb or add add add add cmp sbb or or or add adc add push add add add or or or sbb or add or or or or or sbb or add push add dec push or or adc or or add adc add or add adc push pop add or pop or pop add add push adc add adc cmp push add sbb add add add inc add or add or or dec push add add dec add add push adc push sbb pop sbb or or sbb add or add push add sbb pop or adc or or add adc or pop or adc or or sbb or add adc add add or adc add adc add sbb sbb add add add sbb push adc pop pop adc sbb or adc sbb adc or imul adc or or add push or or add insl pop add adc insl add and push add add sbb and adc add add add or or sbb or add or jno push push add add adc pop add add add jns add adc push pop or or or sbb or or add push add jge add pop pop or or sbb add adc add add or or or or add add push or pop or sbb or or or add adc and add sbb add addb add add push sbb sbb or add adc add sbb dec sbb sbb add add add addl adc and sbb add or jge add add jge and sbb sbb sbb add sbb or add xchg add add sub or add pop or or or sbb or or add add add push or push or or add or or add adc xchg or add adcb adcb adcb and add sbbb or push or sbb or add add add add addb sbbb add andb add and add andb or add or or add or add mov add add subb or or add push push pop add or or add xorb add sbb sbb add adc push add push add push add add add add sbb cmpb add adc add or or add pop add add pop or add add adc push adc pop add or add adc pop or sbb or sbb or add adc or or or or or add add add or pop push or or add sbb add add adc add adc push add sbb and sbb adc cmp fldl push adc push push or or pop pop adc push push add or or adc cmp in cmp sbb push adc push add add and adc adc pop and add add add add adc add xor add add add cmc push and add and and sbb add sbb add push sbb sbb and add add or add add add or add sbb or add add or push add add push add push push sbb push add adc add push add add sbb add adc add cmp add adc push push sbb or or add add push add sbb and add push and add sbbl add add outsl add add add pop add add push pop add push adc add adc sbb pop pop add andl cmp add or or add or or adc add sbb add or pop and cmpb or or sbb sbb sbb movsb sbb or sbb add sbb sbb sbb sbb and adc adc add add sbb or add or add sbb or pop add sbb sbb add or sbb and or adc or adc or or add or or pop add or push or or or or pop or or or or or or add or or add or pop add or or add or sub or sub add and add or pop pop add or and or adcb or sbb adc or or or or or or or or or and or adcb push add or or or add adc sbb adc add add sbb add sub or and add xorb or add add or or add add sbb and adc pop and add pop push sbb or adc invd or or or or or or or pop or or or or or or or or or push and add subb sysret or or or or push or or add add add or or add or push add add or adc add push adc or push adc adc add adc add sbb add adc add popa sbb add sbb add push add sbb add adc add sbb add sbb sbb push add sbb add adc add adc add add add or push push push push add adc add sbb add adc sbbb add add or push add or add add adcl adc add push push push add adc add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add or inc and outsl jne and add add adc imul jb outsb outsb gs outsb je add add add add and jb insb gs and je imul je popa outsb jae arpl outsb and add inc sub xor xor add sub add popa xor sub sub sub sub data16 xor add sgdtl or xor add or jo arpl insl add add add xor add add add xor add xor add add outsl jb js dec popa imul jb gs insb add add add and 