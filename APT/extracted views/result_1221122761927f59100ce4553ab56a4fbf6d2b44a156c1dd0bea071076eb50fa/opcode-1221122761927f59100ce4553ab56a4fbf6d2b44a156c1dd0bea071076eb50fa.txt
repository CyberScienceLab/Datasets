xchg pcmpgtd int3 or xchg jo dec int3 or sub push bound mov inc or data16 ret or je or xor data16 add pushw add data16 xchg pcmpgtd bound data16 or std mov pcmpgtd xchg pcmpgtd inc push data16 pcmpgtd jle mov pcmpgtd and dec sbb and sub data16 data16 add test data16 xor or data16 data16 popfw sbb in out push inc xchg pcmpgtd sbb push data16 imul add add add add add inc add add add loopne imul push sub add lock add add add add add add add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add ret lret dec lahf push mov insl add add add add add outsb fs gs jb arpl imul add add add dec xor add xchg mov hlt sbb dec pop xchg pop leave sbb loop mov nop add lods and cltd iretw adc pusha rcll inc add add add add add jne bound outsb xor or outsl insb outsl outsb xor sbb add and and add insb outsl outsb xor xor bound add pop add add add inc add add pop add add inc add add add inc xor add or or add push inc add lock add (bad) decl add add add add add jmp adc add inc add add addl add mov add inc outsl je gs outsb je bound add arpl imul add add push add add xchg mov hlt sbb dec pop xchg pop adc add lahf add add add add adc dec add add add xor inc inc or adc add add addb add add add add lods daa inc add add pop xchg jge jns test or jnp inc ljmp add add add add add or add add add xchg and add push add add mov aam xchg jno mov xor add add add add add add add add add add add add add pop and add add nop mov (bad) incl add add inc add add add adc add aam inc add add add and add add fcoml add in inc add add add adc add in inc add add add inc add inc add add add fstpt in inc add and inc add add add add inc add (bad) (bad) incl add add add add inc add clc jnp adc inc add (bad) (bad) pushl push inc add add add adc inc add inc add inc add add add add add add add add scas cmpsb add subl jmp add hlt add add inc add add add inc add icebp inc add add or inc add adc add inc add inc add add add add add inc add add add mov (bad) incl add add inc add add add add jnp js inc add add add add add add inc add add add add add add add add add add sbb xor add add add and inc add adc xor add aam inc add add add sbb push clc jnp in inc add add add adc cmp add aam inc add add add inc add jnp lock add add add pop add add add inc add (bad) (bad) incl add add add add clc jnp adc inc add (bad) (bad) incl add add sbb push adc je inc add sbb push adc je inc add sbb add inc add inc add inc add add add add inc add add add mov (bad) incl add add inc add add add add sub les inc add add add and add les inc add add add sbb add add enter add add int3 sbb add mov push sbb add inc add add add jle sub inc add adc xor add aam inc add add add add jnp in inc add add add adc cmp add aam inc add add add jnp lock add add add pop add add add inc add (bad) (bad) incl add add add add jnp adc inc add (bad) (bad) incl add add sbb dec sbb push adc je inc add sbb dec sbb push adc je inc add inc add add inc add inc add add add add inc add add add inc add (bad) (bad) incl add add and sbb inc add add add jnp adc inc add add add add adc inc add add add push inc add add add inc add add sbb inc add add add adc add add inc add pop add add add inc add (bad) (bad) incl add add add add clc jnp adc inc add (bad) (bad) incl or add add dec pop inc add jnp les add add add adc cmp add aam inc add add add clc jnp in inc add add add adc inc add add and add add add pop inc add jnp lock add add add add add push inc add adc outsb adc je inc add inc add adc outsb adc je inc add inc add adc outsb adc je inc add sbb inc add inc add add inc add mov (bad) incl add add inc add mov add inc sbb add add lods and andb add add add add add add add add add add (bad) (bad) incl inc add add add add add add add add add add add add (bad) (bad) (bad) cld and add add push sub (bad) incl add add add add (bad) (bad) decl inc add add and jnp (bad) incl add add add sbb (bad) (bad) (bad) decl inc add add add es (bad) incl add add add arpl imul add add jne bound outsb xor add push imul outsb gs xor add jne popa jno add add inc jb outsb fs jb xor leave sbb loop mov nop add lods and sbb out inc cltd out lret mov stos mov mov cmc xor adc mov sbb lea xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add sbb inc add add add add add add add inc add inc add add add fdivrs or add insl jae bound xor add add add add je gs xor cwtl and test inc add add or inc add or je jmp push mov call jmp add add add add gs xor add outsb fs gs popa addr16 popa insb insb bound imul add call and add add sbb add or je jmp push mov call jmp add add inc add add add add add push add outsl add je and push add insl add add add add add inc add add add add add or add je add jo add add or add push inc inc ss dec dec add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs je add add pop pop jbe popa push je push popa jb popa insb add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa push je push popa jb outsl jbe add jbe popa push cmp je xor add add jbe popa inc jb gs popa jb add add jbe popa push popa jb jne add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa dec xor jb add add add sub inc test gs mov inc push add add inc mov cmc dec xor inc inc or adc sub jno xchg call inc xor dec in xchg dec lods xor or stos add xchg dec insb gs imul add fimull xor or stos add xchg dec popa bound insb xor add add bound insb xor add add dec add aad inc mov mov cmp leave pop outsl fsts inc aas ja xchg pop xchg jge jns test or jnp inc ljmp (bad) inc cmpsl repz (bad) or dec add and addr16 jmp cs mov xchg cli lcall and mov pop mov aam xchg jno mov xor push add mov adc dec xor add jge jns test or jnp inc ljmp mov mov mov cmp xor or stos add xchg scas add add add add add jne popa jno add outsb imul jae add add inc add add (bad) (bad) (bad) jmp add imul jae add add call add add inc add add add add or dec popa bound insb xor add or dec popa bound insb xor add lahf push scas add add add add or dec popa bound insb xor add or dec popa bound insb xor add daa push push add add incl add int3 xor add mov aam xchg jno mov xor and addr16 jmp cs mov xor or stos add xchg mov add pop add add or inc jb outsb fs jb xor or jne arpl popa je jb push add inc add add (bad) (bad) (bad) jmp add bound jb je jb push add adc add add cmp add inc add add add add or dec popa bound insb xor add or dec popa bound insb xor add lahf push scas add add add add or dec popa bound insb xor add or dec popa bound insb xor add daa push push add add incl add dec xor add testl xchg cmp out movb gs mov cmp xor or stos add xchg call add add push add addr16 imul add outsl jb outsb je outsl jne add add inc add add (bad) (bad) (bad) jmp add jb outsb je outsl jne add add adc add and adc add add add add or dec popa bound insb xor add or dec popa bound insb xor add lahf push scas add add add add or dec popa bound insb xor add or dec popa bound insb xor add daa push push add add incl xor add add add insb gs imul add add xchg add insb je add xchg add add push xchg add add add add add add add add add add add add add xchg add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp and pop jmp mov push sub pop push or pop lods push sub pop cmp je push or pop mov push or pop inc nop cmp jne push sub pop mov push add pop inc push or pop cmp jne push or pop xor nop push push or pop push nop push push or pop push nop push push sub pop push push sub pop push push add pop push push sub pop mov push or pop call nop add push or pop ret xor xor nop push or pop nop push sub pop push sub pop mov push add pop push sub pop push or pop xor nop ret push or pop nop push sub pop mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call jae gs insb xor add jne push call movl push add pop push or pop movl jmp pop push sub pop mov push sub pop mov push or pop mov push sub pop mov nop dec push add pop cmpw jne push or pop mov push sub pop mov nop inc push or pop cmpl jne push or pop cmpl jne push add pop sub nop pushl push or pop call nop mov push add pop mov push or pop rep push sub pop mov nop nop push or pop push add pop call dec dec dec dec jge nop jmp push or pop call push push dec outsl je data16 arpl inc add cmp mov and ljmp push push mov push xchg adc loopne dec xchg cli adc xchg cli or or and push sub jecxz loop jge ret add enter into and push jp daa xor jbe xor pop (bad) mov cmpsb xchg push and cld and push and stos and push (bad) cmp cmp jp and ret add push and jp and arpl aad fsts adc jp push and push stos ret add (bad) xor sub xor cmp or cmp jmp daa inc inc push dec jno mov add push mov add imul mov xchg ss add jno imul xchg popa arpl test or push xchg pusha add aas scas test adc pop push sub cmc xor add cmp and push dec add xor add out fisub add xorl push lret jp xor mov nop and push fcoml add fcoml push xor add imul in (bad) and adcl push lret inc xor xor add push add fcoml xor aad adc add xor sti dec inc movl push mov push and jge and cmp add dec add jnp and jg and (bad) and andl stos inc dec mov xor into xor mov sbb adc jns sarb and daa xor sarb and cltd sub xor push fdivrs inc pop mov ss xor mov push test outsb (bad) adc jns sbb and daa xor (bad) xor pop (bad) push sub jge out add jle and popa sub mov xor adc and jno add add add push and xchg sub xor xchg out mov push and das cmp add xchg and and push jns xchg cmp jae mov and push jns cmpb cwtl divb and xorl push cmp repz lods and pop sbb test movsb and ljmp cli xchg iret test dec cmp mov test and add add add dec cli xchg sub push lret cmp enter mov or movsl jl and js and jns and jl and jne in fsubs and ljmp add jmp fldenv mov cmp adc push lret xor pop xchg inc sbb pop iret adc das add fcoms xor mov sub cmp xor and out mov add push jnp fs push jp pop or xor das cmp (bad) sub and inc sub outsl repnz lods jo pop orl push test jecxz jnp outsl daa and gs push push inc mov xchg and push jns clc cmp add push and shlb add push enter jo push mov and mov iret fdivr xchg inc pop add xor add or mov add das cmp (bad) jmp das add stos push add jo addr16 adc xor mov xor xchg xor push cmp xor lds and jp and or mov mov hlt and push mov mov aaa and cmc cld and push int3 inc loope jecxz push stos (bad) jle and push stos (bad) jb and test mov and xor xor bound inc mov jae (bad) dec sub lods sbb cmp xor add fnsave sub jmp pop arpl add add push fdivl add fcoml mov add jmp and cmp push adc cmp jno in xor add cmp cmp push jp lods sbb in sub fnstsw add xchg xchg or pusha xor ret and jle and bound and push jb frstor add bound and xor outsl jle stos (bad) jmp and push jo (bad) cmp add push mov popf push and in xor add loope and push cmpsb lds ss jp and push adc cmp movsb add in xor add push xor popf xor add adcl and push fsubrs add data16 push cmc xor add cmp and dec mov faddl (bad) hlt sub data16 push cmc xor add cmp and mulb out stc outsb jp stos and xor cmp add push pop pop imul addr16 xor popa lret add add loope das xchg push lods or outsl mov add dec mov and cmp add pop push fldl add push jecxz es (bad) jno add bound and sub jae xchg iret jbe xor lods add and mov and fnstsw add bound and iret fcoml mov and std xor add jb and cmp stos push mov loopne orl xchg repz sub int3 pop (bad) adc xchg shrb add jne mov fs push xor mov insl xor jg mov stos mov xor add xchg mov dec jecxz das xchg mov adc stos loopne add loope daa in push and add push (bad) jecxz dec in add and xchg xor test xor push or jne mov or fisttpll arpl push test outsb fstps lods cmp add sbb xor add dec add add pop push arpl aad enter jge cli xchg mov xor bound and jne add addl jp xor mov cmp add inc and add push fdivl mov (bad) add add fstpl push push add jg cli pop iret jbe loope ja push in imul loope fdivl push push xchg inc daa mov cmp sub fdivl and push dec add ds push add addr16 pop iret je jmp movsl and loope and outsl push xor test and push sub mov and xchg inc xor arpl add mov fcoml mov add push inc pop or inc xchg jg ret and mov sub push lret sahf insl xor cli sbb iret push add aas cmpsb sbb and add (bad) jmp outsl xor push loop cmp (bad) jmp lds add jmp xchg add outsb mov stos push loope push in mov fcomps add fdivl mov daa cli mov mov pop push mov add daa xor call (bad) and jmp iret repz xor push add dec add sbb iret adc aas push in push and loope push in call fdiv add dec add sbb aad enter imul add push mov xor mov mov fiaddl popa test (bad) iret adc mov xor push imul or or cli xchg mov stc xor add push test outsb (bad) or jns sbb and push test outsb fsts or jns xor and push test outsb xor stos (bad) ljmp add xor add in mov add push stos std outsl mov fcoml jmp xor or movsb and imul cmp mov add nop (bad) add push sub cmc xor add push cmpsl xchg push and scas and push push sbb jecxz out dec and push adc push cmp xor lds pop push add mov add push jge inc mov or in jge push push mov add in xor add ljmp xchg imul add and push dec add movsl mov push dec pop push and (bad) xchg xchg imul cli std dec and xchg iret loopne imul test xor mov xor add push enter and iret xchg popf imul cli frstor jns xor out mov xor mov xor add push fcoml sbbl xor mov add jmp push add xor outsb pop and outsb mov fcoml mov and repz add xor sub xchg subl and xchg add push or add repnz add push fcoml loope mov xor test arpl xchg xchg mov xor add pop iret jbe subl cli xchg pop and iret jbe mov addr16 pop iret jbe xorl or js jno jle push xchg adc bound ljmp adc jo xor xchg xor jno cmp int3 loopne sub pop or jno pusha jb mov or hlt xor ljmp xor es jmp push fdivl mov pop push jl or cli lret xor pop loopne stos add and push and out fbld add jle push push cmp cli mov imul ret popf jmp (bad) xor add aas int3 lds ljmp aas int3 les aas pop (bad) sub mov add xor xchg imul push and out cmpsl and loope pop adc mov (bad) push xor xor mov add xor xor add xor mov xor sbb adc lea bound inc cs jmp and xor pop loop fmull mull imul add lods repnz add stos add xor add sti test loopne or das sbb and add pop ds es jo mov loope push insb xor mov add xor add ret and in ss sbb and pop data16 add xchg inc arpl and and data16 add xchg inc addr16 pop xor add test arpl add push stos vcomisd push and push stos pop add pusha inc ljmp add xor add mov or jo mov pop sub sbb cmc data16 pop ljmp shrl fcoml andl xchg fsts mov and jo mov stc js and jecxz and (bad) fcos add jnp insb flds xor data16 cmp and test xor xor data16 sub and dec jbe dec insb xor xchg add ss lods ss lods ss lods add ss lods ss lods ss lods ss lods ss lods outsb inc xorl in js and pop and inc aaa outsl push and aas pusha lret adc and push and sub sbb data16 add push and pop and pop and aas adc test je aas add or sbb mov add inc fcoml mov bound imul jge mov daa sbb es sub and pop ss (bad) sub test data16 add push and pop and pop and aas adc test and inc daa test je aas adc cli aas sbb insl xor cli jmp add jnp push and inc aaa outsl push and aas pusha test jb sbb xchg iret lret add and pop int3 fdivr sbbl add jmp adc cli xchg fldenv iret inc movsb pop xor add sub xor mov mov cmp push lock lret incb jb and sub test and and mov aaa push pop shrl mov pop imul int3 loope pop or fs lds mov ret outsb and jl or fs or out stc push push loopne stos push sub andb inc movsb pop xor add sub add push jge push push rolb xor loope xor outsb pop mov and loope pop mov and jecxz mov lds lret and dec mov push loope mov add xlat js mov jo ds and ds and mov add push cmp insl push daa add pop and push and test xor add outsl repnz add jb and imul daa mov cmp add loope and popa mov popa loope pshufw push sarb addr16 outsl mov mov jmp repz xor mov sub pop xor add sub add jge and jp aaa push loope cmp mov mov insw jecxz mov add push xor aas push jnp and dec bound and lods xor (bad) test xor mov or fisttpll arpl push stos std outsl xor add xchg xchg or push and or dec icebp xchg iret mov add adc add jmp pop gs inc jno mov and xor lds outsl mov add adc and jmp pop inc push arpl mov and xor inc push or add adc add jmp pop inc push jecxz dec mov and xor lds daa mov xor sub and push and mov add rcll and loope das test arpl jo fmuls xchg iret test data16 add jmp and push jo pop xor add xor push in bound xchg and jle pusha inc ljmp or mulb sbb dec add add dec pop add and dec mov mov add sbb mov add dec fcoml mov and push dec add xor cmp and iret jbe test mov faddl xchg outsl (bad) bound test dec xor push push fsts pop stc bound pop enter cmp cs push jecxz mov add push and aas push jns ss ret imul adc mov loope test jp arpl stos mov cmp push and dec and dec dec cmp out repz push add out outsb arpl cli xchg loopne std push cmpsb xchg push and cs push cs inc push repz call or add inc iret test xor jo jmp mov add push and jecxz fadd sub fwait inc ljmp add inc cmp sub in xchg mov pop stc pusha test push decl pop add inc rolb and imul cli mov mov xor inc outsl mov add sub sub inc mov pop dec xor inc dec xor inc dec cmp test mov jmp shlb sarb loopne pop stc fwait add xor inc sub xor push mov jno mov (bad) roll sub fwait mov lret (bad) mulb sarb fiaddl mov xor pop dec cmp inc sub loope push (bad) sbb sub mov add imul add (bad) jne cli xchg arpl ds push outsb sbb inc jge xor push xchg iret fsubrl sub fs push add cmp dec and push das adc and add push push jno inc add dec add dec xor sbb inc inc fs push add cmp dec and adc and pop ja dec adc or jo adc adc add bound daa sbb and dec js dec daa insb jo or push sbb dec add push pop inc jno addr16 imul push jbe jae ja push dec jno push push jbe pop dec pop cmp daa dec pop push and cmp push inc push and adc and push adc sub pop inc and push sti cld xchg iret or pop pop add push pop add cmp push inc push and push push (bad) xchg iret outsb add sub jne daa xor add es add push and je inc push and and xchg iret ja das xor cmp push add or add push and push and xor add push and xor add push and xor push push and push and mov add inc push dec imul insb sbb jno je ja push push pusha push xor pusha or jo push push ss xor push xchg faddl inc dec push add fs addr16 imul push jbe fmuls call sbb adc imul push add xchg ja jno push push outsb push pop push push add push xor cld or push add inc jne pop inc jb push gs push push and dec fcmovnu cli and imul fdivrs out xchg iret fs push jno sbb sbb arpl iret fsubrl inc dec pusha push add add xchg arpl es push jno inc push push xor mov cmove sbb dec add (bad) leave cli xchg dec ja inc inc imul jne add xchg dec ja inc inc imul push push inc adc lret adc sbb jno jbe imul fcmovu cli cmp jbe imul iret fcoml push inc inc add (bad) push leave cli xchg ja jno pop dec pusha cmp pusha push shr xchg iret pusha imul xor xor inc outsl push push jae push pop insl fs push bound xchg ja jno pop dec push add push push lahf ljmp push pusha cmp cmovae push cwtl hlt xchg iret fs push jne insb push jae popa punpcklbw or jbe fcom in xchg iret ja sbb imul inc push sbb pusha sbb in movsb rcr cmp pop push inc rsqrtps das inc inc imul lret into fwait iret faddl pop push insb add inc inc rsqrtps das inc inc imul lret lea push inc jne fsubs out xchg iret push insl subps pop xor incb push dec imul inc inc inc push mov xchg iret dec jno pop dec add xchg jle pop add popa das dec inc popw inc dec push xor inc test fmull addr16 insb push push jne sbb push jge push (bad) and cli xchg jle inc cmove add inc jge fs ja push inc add xchg jle inc sbb jno jbe imul iret fmull pusha push push push inc jno pop push jno push dec dec minps xor sub iret fmull arpl sub jno dec push push add fs xor jl iret fmull bound pop pop inc push add fs xor aam iret fmull gs push cmova push inc jno pop dec add xchg je addr16 push bound pop push pusha cmp cmovae (bad) daa lret gs pusha sbb adc xchg jne jo addr16 imul push jbe fsubrs or imul ror xchg push push ss xor call mov (bad) cli push and xchg xor add xchg iret and or push dec addr16 (bad) push lret ja out inc push das pop mov xchg fdivr push push cmp and mov jecxz xchg insl inc xor rcll rcr xor pushw lods cltd (bad) mov ds jmp aad insl sub test in je scas out inc dec mov scas shrb rcrl lods mov arpl xchg pop cld cs bnd fsts mov sbb cwtl jle enter ret mov pop movl add stos cltd (bad) cmpsb (bad) inc mov arpl test lcall int3 cli (bad) in mov cwtl mov add ja jge into fisubl inc jmp out es add mov lret addr16 (bad) xor mov popf xor or mov aad xchg iret and (bad) iret faddl imul cli ss dec jne push inc sub dec inc add xchg xor add xchg iret and sahf iret faddl popa ret fdivr push and xchg xor add xchg iret lret push push lret bound movsb and push and push and push and mov and push and push and push and push and push and push and push and push and mov and push and mov and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and push and xchg iret and jmp je mov pop xchg stc push rcrl mov xchg rsm or mov bound inc incl jp repz or jle in dec sub push inc cltd out mov pop arpl cmp pusha clc jnp pop ljmp inc xchg cmp imul cli mov jb xchg fstpt nop xlat out rolb lds sbb cli xchg mov nop pusha aaa (bad) js pop (bad) ja imul stos jp inc push jmp adc int3 sbb sti cmpsb push add jle xchg adc mov aas enter sub mov jp scas data16 mov adc dec std push jns and loopne andb and mov test xlat mov imul push test add xor xchg inc jo fldcw mov adc mov cmp mov push xlat pop enter inc repnz mov pop dec mov push push mov rol decl imul mov fisubrl add out scas pop inc mov push push call xor loopne sbb das popl jge inc sub mov xchg mov inc cmp adc xchg and adc mov mov mov mov jne push jno inc repnz fxch inc push bound cli cmp aam in sarl mov pusha or popa mov sar movsb or int3 mov (bad) mov pop popa lret (bad) mov fcmovu and xlat sub shrb repz lret sbb xchg jns or lods dec daa (bad) (bad) mov and stc inc inc hlt mov sbb inc mov sbb xchg aas clc jle mull adc loopne sub es lock test aam mov aam jbe shrb in pop leave rolb mov dec ret out ds xor cmpsl and cwtl and cmp (bad) ds xchg (bad) mov in dec add mov mov ret or push gs pop sbb cwtl rorb fsincos push jne cmp stos and (bad) jbe mov sbb mov mov call aam sbb inc clc adcb mov leave mov push rcrl shll push sub in in daa pushf rolb and fwait iret push add jbe pop or neg arpl xchg insb sbb ret ss cmp fisubl test (bad) xor les test jbe sub subl mov mov aam or mov addr16 idivl inc mov pop and hlt insb adc dec sahf mov mov icebp fadds inc jae test loope ss shll insl rclb fimull adc inc mov sbb sbbl jae dec mov jo std pushf mov pop fildll dec jmp mov push sarb ljmp xor sbb push dec or ss push sub ss jno mov icebp cmpsb inc inc inc gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) xchg inc or add stos mov lock loopne jne les int3 mov aaa les or fwait movntq daa or ljmp out mov pop push pop adc pusha into out fcoml aam pushf sahf mov iret mov mov mov scas fisttp and movb imul inc sbb or aad fisttpl jp cmp loopne jecxz decl jle pop jmp in or or mov lds pop pop jle adc std jp imul out inc test mov cmp mov jge iret pop push or mov clc ror imul bswap inc inc out insb fldt test clc jge clc jno cmc pextrw jmp dec push leave mov pop jge adcb in ret mov mov aad arpl bts pushf cmp or jne inc imul sbb dec xor sahf je sub int3 push sbb subl mov lods jp and stos sti add jae sub xor xchg lahf inc and xchg cld push cmp cmp rcrl and xchg inc and lock sub inc mov js cmpsl rcr ljmp dec aad push and fsubs and scas nop arpl (bad) xor mov mov je jno or adc ror mov stc or test adc add adc xchg push mov inc jmp loopne inc loope mov xchg push pop out iret lret cld cmc repnz repnz inc sti je mov cmp (bad) jmp lcall xchg push xchg dec push mov mov jo fwait add mov mov mov xor dec pusha fildll (bad) push push and dec dec les cmp cmp movb add pop jne int3 push push rcrl sub (bad) or cmp pop xor sub xchg fldt (bad) repnz inc mov or xchg mov mov xchg inc sar jbe push or ret loopne int pop add push or fcmove movsl mov adc push aam loop outsb push lods testl lahf lahf out inc enter sbbb sub pusha inc gs test push and mull pusha imul into add jl mov fmuls dec daa in mov xor jmp int sub lods test (bad) mov xchg ljmp jns in nop divl outsl fcompp and pusha cmc lods enter scas int gs (bad) adc adc xor jns das push adc mov xor movsb out mov mov xchg movsl xor ret dec sub push cmp mov push inc mov out cmp jnp push mov inc stos out aam ret repnz adc pop fisttpll daa cmpsl (bad) gs das jmp mov pop cli es (bad) jp cwtl leave mov imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cld aaa (bad) lahf cs lret les movsl and jmp imul popf sbbb in fistpl js sub jo je push aas push add inc mov call mov shll stos or jmp sbb fstl adc mov cmc jle test ss cwtl mov xor pop test fstps adc pop vpsrld pop mov adc out mov faddp cld jo or icebp mov cwtl loop aaa or nop jecxz (bad) xchg idivl jnp push or mov negb adc mov sub hlt sub pop out lahf mov jae xlat mov and je mov push xorl inc push fxch sub sub int3 sbb xor or cwtl mov or add lahf into jae pop xchg inc jg shll mov fucom ret test and add std pop cmc sbb inc cltd cmpsb push lahf pushf clc in inc shrl add popa sbb cld fsubrl dec imul idivb push cwtl ds scas and xlat xorb jns push popf daa pop fsts in scas out inc pop test ljmp or into imul pop ja jecxz push (bad) std adc dec jmp sbb nop gs adc dec lock rcrb jg and xor rcll jo scas cmp fisttp xchg jb (bad) dec loopne mov inc hlt jge,pt sarl stos inc ljmp jnp sahf dec mov push aas stos push jne push and and mov pop imul clc inc cmp xor and adc dec push std test loope movsl xor test cmp push push cld popf mov insb cmp mov mov jl out ret popf stos cmpsb adc xlat jecxz sbb fwait daa negb jecxz out and cwtl or xor out lods mov pop or sub dec (bad) jae fmul sti cli ja cs fcompl hlt out ljmp ja push sub mov cli lahf movsb (bad) and and ds aas mov or sbb aam inc xor fcomps jbe mov (bad) ljmp test dec xchg mov pop stos inc xor mov jecxz jecxz sbb shrl dec xchg sbb add push test (bad) mov xlat xchg out mov jnp adc (bad) pop and in ljmp call (bad) repz mov inc dec sbb (bad) xchg insl inc (bad) aad jo mov les stos mov or adc xor scas repnz cmp or mov push rcll inc (bad) fidivl in lahf jp repnz push cmp dec pop ret (bad) bound sbb inc je sub in fsubrs jns lods mov rcr push loope mov orl jno jne sbb sbb outsl jb shll and adc mov push cmp add pushf in ret sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and outsl out and (bad) sbb scas mov mov jns push out scas shr scas mov sub lock cs sub mov mov cwtd sub jmp icebp xor shll das movsl les xchg lahf dec mov insl call scas xor (bad) pop cli push mov cmc aaa incb sub int3 jo pop push jmp imul mov push fsub xor or imul aad push roll fnstcw and lds loopne push push loope ret dec pop les scas cmp gs mov aam adc pop lods stc gs cmp inc test sub fcoms pop inc add cmp xchg movsl pop xchg loop out sarl dec je jge clc mov mov or roll js xor (bad) lock lock insb ret enter pop add mov scas cltd push cwtl ljmp adcl in cwtl adc or hlt mov sub or adc aas sbb sub into and cmp sbb imul inc jnp xlat xor insl adc ljmp xor insb loope sub in scas xchg js xchg bound (bad) les loopne popf jns loopne clc lret jnp mov jle addr16 test cwtl (bad) dec in xchg sbb jle imul test push ds jno mov out sub fisub push out test ficompl push mov loope or fcomps out adc xchg mov out repz mov cmpsl push push imul sahf das (bad) jmp leave nop (bad) mov mov sbb fmuls xchg in jbe mov inc mov sahf pop and pop shrb dec push gs jns xchg cmp xchg jmp cli cmp pop enter cld jmp into es mov cld out das push lret xor lea mov cmp es cwtl bound fs lret lods adc add aas pop push adc cmpsb push xchg or imul pop mov inc jbe push lahf jp mov pushf (bad) iret pop test xchg push and and cmp pop sbb and xlat clc rorl pop les xchg cmp rorl add outsl xor lret mov pop pop lret cmp push and fstl mov out imul pop pop out push adc pop out aas push lods jle mov movsb lock xchg adc pusha jle negl outsl lods dec (bad) aad movsl dec icebp xor (bad) daa mov pop jno dec sbb jecxz sbbl xor xchg xchg push icebp pop call dec jecxz and lods jg std pop add adc cmc pop rol cmp add cmp sub inc and mov inc and adc sub push jne lahf mov push sub int3 jp out xor push andb imul call cmp mov xorl sub out xchg hlt fstpl xchg js inc shr les mov fldenv mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push in add js fadds fiadd inc push dec push mov push push and push popa add loop stos xchg js sarb stos enter ror out pop xlat fwait inc sbb add sahf pop jae repz nop ret daa xor bound mov add mov mov aas in xchg push mov flds lea lods jg scas bound jae lods fsubl push pop cmp sbb and xchg adc jno dec lahf arpl add cmp add clc mov dec fwait aaa shl stos or inc pop pop into movsb mov rcrl dec jp in test xor sub dec subb xor stos adc sbb fisubrl mov or (bad) mov test xchg iret push push pop ret sub xchg ss push ret (bad) js call sub or (bad) pop push mov cltd jp mov xchg mov dec mov adc imul xchg inc bound cmp imull jecxz ja lcall sbb mov cmc or pop loope (bad) mov pop xchg mov int push mov stos or dec inc loop pop jne loopne sbb stc loopne stc push clc jge adc sub mov push loop mov sbb lahf notl fistl daa sub inc pop stos jae arpl sbb mov mov daa insl lods jns push push or fbstp idivl pop inc mov mov push or push fldl xlat adc ret and je rclb xchg rolb sub jle in dec sub xor push pusha xor pop je iret mov and add imul jp mov dec cmpsl add aam fbld mov ss add or push jg cld xor pop cs enter addr16 fisttp push jns jbe jnp mov push in mov jg add adc jge (bad) push lcall imul xchg ret xor push xlat mov (bad) mov pop push mov loop cli sbb xor cwtl xchg test pop stc mov pop xor ds inc lods mov shrl jns stos add sub and dec sub add jae mov rcrl daa lods out lods adcb lret roll sbb lods jp xor es sbb mov mov mov es sub call inc jnp push sti imul sbb dec dec sub mov mov dec sarl jo enter jmp lret add dec jl je inc sub lahf mov adc mov mov push mov xlat fwait mov or cmc xor or fmulp and cmp in (bad) clc rcrb jmp jbe incl sar jb insb pop jg inc xchg ljmp sub mov adc aas and jl jo push loopne (bad) mov pop popa mov dec xlat push scas out sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) mov aam push loop mov (bad) pop enter rcll pop insl xchg dec fiadd xor (bad) fbld mov dec jmp shll cmp test adc into push add push lods fistpl fisttp outsb test dec ret and stos cmp out std and aaa stc push push cmp cmc mov dec xlat cs mov push xor pop insb inc mov xchg fbld cmp dec out and cmp pusha cli shlb sub and and lea push fstpt and mov movl push pop push fs insb fistl push inc mov cmp dec pop inc fdiv inc cmp sahf mov pushf test xchg push sbb jle movsl push nop fsub xchg js jae mov mov cmp in cmp mov push cld xchg add pop mov into cltd or addr16 lock sbb xor loope les cmp movsl sbb or ret cwtl xchg xchg bound push inc imul jge inc fisttp jge jl cmpsl test movsl sub mov aaa ljmp lret (bad) inc aas push push adc nop or push outsl inc insb lods jmp xchg es fcmovnb inc jecxz mov cwtl fiaddl mov fisttp adc mov hlt fucom popa xchg xchg mulb sub adc xor mov mov psubq mov sub pop or outsb add fs adc xchg add jge iret jmp neg inc iret adc repnz leave push loopne xor data16 aas mov pushf lret sub push jne xor outsb lock fistp mov jb andl xor add movsb fisub mov jge or adc push dec xchg add and mov aaa daa mov jb sbb rcrl outsb dec gs cmp mulb xchg mov in mov mov mov es dec cmp mov dec mov lahf cld jns cmpsb mov ret (bad) lods js fucom sub mov push fadds push xor std push dec jne rcrb cmc popa xchg mov xor mov (bad) aaa mov mov inc mov add xchg sbb jg pop mov out in mov (bad) (bad) xor xchg mov in fmuls scas inc movsb bound leave ljmp xor enter adc mov inc mov jle sub repnz imul push jl loop add dec add ficom bnd mov push sub fisttpl push jge in jne add add sub sub fwait mov pop leave mov adc dec clc outsb fwait or test outsb fidivl or mov lds sbbb aas aaa dec and pop push addb cld std jmp dec xor int (bad) dec std ja push int scas push or scas fstpt stos pop xchg mov sub out lock lcall sub jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jl out mov inc aam and lahf mov push lret std setne into or or cwtl cld les push call and xor shll lcall push (bad) mov and lea flds stos shrb lahf imul sbbb or pushf rorb daa (bad) repz xchg mov ljmp les add jecxz and lods cmc cmp pop and jecxz sub cmp add (bad) pop adc roll daa push mov add pop pop call dec mov (bad) (bad) mov push call sub stos lret inc sbb xchg push cmpsb sbbl sbb or addb in sub clc sub popl mov xor scas stos stc cltd mov lds lods and insl cmpsb or pop adc fildll enter adc shlb rcr pusha sub movsb inc test shlb rorb call xor enter and add aas test cwtl add cmp mov (bad) xchg imul sarl sbb ja (bad) sub jno xor push in cwtl sub fs (bad) sar (bad) mov jno adc push cmp adc jl (bad) cmc add nopw push repz call mov xlat fwait mov in cwtl mov xor xor pusha xor ror pop fdivrl jl sti repz sahf fxch push pop jg mov dec (bad) sub jle test mov mov scas lock cwtl mov (bad) fistpll movsb cwtl xchg mov gs mov xor mov dec inc adc xchg cmp cmp xchg sbb out lock (bad) ds mov pop push (bad) jnp add xor in add in (bad) xchg mov inc pop leave mov lret cmpl xchg popf add mov mov and lds insb out mov jecxz inc cmc movsl je das addl jl out pushf cltd loopne sub xchg adc mov inc jl push mov push test xor ret add lret fwait add addl fidivr movsl mov mov inc int3 push add aaa jno push cmpsl aaa push in ja jnp lds cltd repz push jo sub insl movsb and ret inc insl loop jns popa test sbb cmp outsl fmul les pcmpeqw mov xchg push dec adc jne mov mov pop arpl push sub fnstcw insl ds mov push xor push (bad) nop and mov sti xor and xor sub mov pushf push insb mov ret mov bound in mov add cmp imulb xor dec sub adc jge sahf imul ffreep mov (bad) lock mov push jne mov popa sub stos fnstsw jge clc lcall sub push add sbb add sub dec xchg test jl xor popa mov enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aaa movsl scas fnstenv or sub adc and add jae arpl or pop (bad) xor loopne push mov scas ret fisttp je jmp push es mov dec aam (bad) ds int mov mov jo add mov movsb pop cmpsb ss mov mov ret leave cmp and dec and inc arpl inc (bad) jo inc emms pop dec fs fs loopne insb je jnp mov imul adc (bad) repnz cmp mull xchg dec pop int3 neg idivl jge mov pop inc cltd inc pop in imull inc fistp mov int or and jl xchg mov mov mov scas mov jge movb mov pusha add mov out je and rorl xchg and iret fmulp ja loopne aad ja mov pushf mov cmp stos or xlat mov xor dec jl fdivl rorl popf push jno push pop mov inc insl jne jno clc dec cmpsb sbb add iret dec je in icebp xlat or aam shll int3 xchg mov xor sbb jns das enterw addr16 cmp cmpsl jnp mov xchg call cmpsl mov mov or jg test (bad) mov dec jge adc xcrypt-cfb cmpsl out stos test insb icebp push add outsb sub aad pop push insb cmp sbb sub jmp mulb dec push jno pop add xchg in idiv sti mov daa mov (bad) imul mov dec inc iret mov sbb leave mov fidivl xchg cmp scas sub rcrl cmpl pop xchg in jge dec fistpl jne adc jp xor jnp hlt cltd adc xchg xor fimull stc lea cli ljmp pushf jb mov push pop addr16 jge outsb xchg inc or cmpb add cmp mov cwtl movsb test xchg (bad) nop outsb fst dec enter push cmc lret add or xchg jecxz in popa sbb or test int3 or pusha lret dec or xor out mov test fwait jb aas push lds data16 cmp fcmovnb mov ret ljmp inc ret xchg add add sbb mov push inc (bad) xchg cmp or enter adc push (bad) out xchg dec and cs scas fiadd push xchg push add adc cmp xorl stos ljmp ffreep jp (bad) cmpsb scas mov xor cmp mov sub xor or movd xchg faddl cli sub xor mov fist jbe stos mov push mov jg or sub arpl adc lea dec jle mov fdivrl aaa repnz mov test sbb mov jmp pop or jnp push out and fcoms pop sub into ret sub xor repnz sub mov mov cmpsb out cmovb mov nop insb fistpll xor (bad) jp mov aas insl push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl movsb add push add sti out jge icebp jle repnz (bad) (bad) insl fcomi nop stc xchg mov cmp icebp xor mov mov sub mov cmp inc aam pop scas aaa xchg sbb xchg cmpsb mov in xchg add pushl fimull mov fisubr sbb (bad) jo push cld decl fisttpl stos push jns inc clc pop sub jle push pop cmp pop test mov mov dec or mov pop sub sub gs outsl mov scas iret mov movsl xor mov ret stos mov lret ret pop cmp std mov sub cmp push mov lcall scas pop inc pop mov pop push push add xchg cltd adc adc out imul pop xor sbb repnz and divl rcrb out xlat inc sbb insl sbb sub lcall pushf jae push js mov test pusha cmpsl ja push mov aas les jecxz jmp popa inc xchg xchg push iret xor int3 xchg sti dec jb cwtl outsb jg popa pop push mov addl sti dec jne fs sahf mov fsts add into jns pop xor imull inc cld data16 cmp sbb int dec sbb out repnz aam xor aam jo nop lea gs sub std scas jp insl divb mov popa ja jo push adc lret push or imul daa cwtl push push and push ja (bad) or or sub xor lock lret xor iret das cli push xor lods adc fldcw call (bad) lret mov sbb ds pop ljmp push mov sbb mov and push adc stos cld sarb out rcr mov sbb sub cmc cmp jns sub lret jle js in push ja fldl pop repz out pop xor (bad) ror sub xlat xor mov lret (bad) imul stos and ret push lods jnp mov jl inc dec sbbb divb rcrl (bad) repnz inc sbb xchg mov pushf xchg xor popf pop xorl (bad) roll invd ret jg sub mov aad inc loop xor cmp inc sub pop out cmp js pop je imul push push mov loope xchg xorb xor or jb jmp fimull and mov mov add adc sti in dec jns loopne and dec adc subb (bad) mov jmp ret mov mov xor int3 and adc inc repz mov push jne notl push xor xchg mov (bad) dec inc lods push adc addr16 push cmc leave outsb jno les or xchg jge out (bad) sbb cmp pop inc mov cs cmp add cltd add or push (bad) push in mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc stos jns sbb (bad) adc (bad) loop adc idivb inc imul mov and pop cmp (bad) cmp cwtl mov movsb out fistpll addl mov xchg mov xchg imul push and push pop adc jbe jmp mov (bad) fsts (bad) mov jb xor inc xchg jne xchg rorb mov rcr xchg jne xor pop ret dec repz push dec loope mov xchg fild xor push sub mov xchg and repz addr16 test jl pop sbb fsts jl outsb jbe inc data16 (bad) cmpsl pop cltd sub and (bad) adc (bad) add imul push bound std jp add into mov xor pop comiss pop sahf add das inc scas int xor or mov jae inc das inc push int3 sub push gs les sti outsl dec movsb sbb add fist test cli add lahf add xor cmc aas mov out sub sbb mov pop add outsl and push mov test fcmove mov mov bound inc (bad) cld in lods das or mov dec xchg lahf pusha gs movsb and xlat orb (bad) dec add jmp in ficom pop (bad) jl loope insb movsl sbbb mov pop ret jle pop mov es jge stc imull mov movsb mov clc inc mov or sub test lea jge mov pop sahf xchg popf les sub mov fistl lret push mov adc call test and in movsl add add (bad) negb add pop ss das fidiv test push shll les fnop shll fadds sub fist clc sub sbb jmp xchg faddp add movsb pop repnz stos cmpsl mov outsb lcall not mov push fsubrl roll add fildll push out test mov sub or jno pop xor pop inc push sub xchg adc inc mov je xor sbb mov arpl mov (bad) stc bound mov enter lret imul out pop jecxz fistpll shl aas pop (bad) neg xchg cmp (bad) fidivr and add mov das fwait out xchg out jae (bad) xor and inc call ss sbb push sub ret inc mov lret adc xor lahf dec inc sarl shlb jle bound gs in xor push cld clc dec in out mov lds clc jo int3 std mov sbb push outsl jo jmp lea push fs mov mov gs imul test or out shr pop inc jbe cmp xchg je adc cmp pop pushf inc mov cmp mov lea xchg sbb insl jl test lods (bad) cmp xchg mov mov bound inc fmull sbb movsl cmp sbb jg jmp aad xchg pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fstpl and push bound jne mov repnz inc mov leave adc lock fnstcw adc lea fnstcw push dec insb mov or mov xchg clc pop mov popa sbb dec push dec daa fdiv clc out inc aas mov xlat adc sub dec sti les mov pop push pop dec push scas mov pop lock je push xchg sub fucomi fdivrs insl sbb aam movsb or inc cwtl push or stc mov pop push lock dec daa jbe ss pusha inc in mulb xchg dec test dec pop add mov cmp cmpl jno xchg jge popf jg mov jb lock push ds in mov push movsb mov mov faddp cwtl ss jne int and pop pop xchg add test or mov mov pop pop dec xchg or sub pop fcmovne inc and xchg cmp pop aad loopne add lods test push fstps inc pop das das (bad) repz bnd mov cmp in and divl fcoms inc mov add in or inc xor lret andl add cmc nop aas loope lcall sbb or mov mov push dec rcll movsl adc icebp mov pusha enter pop std iret shrl mov movsl repnz fstpl aam push lret xchg jae ds and (bad) mov push dec mov cmp (bad) cwtl int3 mov scas sti inc and stos int3 dec lret rcrl and insb jb inc rolb outsb rolb (bad) mov or movsb adc mov leave lods adc imulb int imul add pushf pop sbb test sbb pushf dec and lea xchg mov push adc and jl mov xor dec mov daa adc mov nop cmpsb mov mov pop lret test xor jg jb lods lds test je dec add mov jecxz jns (bad) scas lods pop cli fstpl sub dec adc push push push jl push mov ja aad add clc int3 pop or in lret mov daa sub fs adc dec or mov jae mov das cmpsl jno test out fs sub int3 push xchg adc xchg push inc scas popa ljmp mov fst js scas xlat jno jg sbb pop adc mov mov pop push mov mov loopne mov popa loopne mov insb mov into icebp push mov xchg mov pop xor fisttpll ljmp mov mov lret dec ja mov iret add jmp lds sub dec in fisttp jecxz add ds in cmpsl lods dec pop cs test cmp bound and mov (bad) mov insl scas js loope sub movsb loop sub popa mov push and xchg stos mov lods cmp popa es mov fimull mov fmulp push popa inc lods (bad) aaa stos fbld push adc fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec out cmp (bad) js inc mov fmull lock mov scas push xor out fidiv xchg sbb int and movsl adc mov mov jle sahf test fcoml lahf inc stc out dec stos mov or sbb pop test jp pop insl sub mov jae and ffree push jg jp sarb and mov mov pop inc sbb (bad) lods ret test mov out les stos xor sbb inc and push icebp leave mov cmp or or mov int3 sub jl mov imul inc xchg mov jne pop mov xor and mov outsl dec pusha and sbb mov dec in stos pop loopne xor out mov add xor mov push dec aad aad inc fnstenv lret pusha lods daa sbb ret das jp (bad) push jo cmp mov and dec xchg jne xor inc mov mov test push das roll mov mov sbb push das fcmovbe push add and push lods add (bad) sti cmp xchg mov xchg push inc call mov fcmovnb gs dec cmpsl ret (bad) rcrl sbb inc rcll out ret ret push xor std or jae lcall out cmp xor dec test cmc loope lahf je pop xorl adc sub test aaa xor notb pop mov inc fcoms xor push push and cs adc ret push sti push or aas jns jb pushf mov jb sub loop (bad) stos daa (bad) cmp icebp pop movsl das int3 mov mov aad xchg mov mov mov or dec mov lea pop imul mov cmp icebp ss mov jle mov jp push sub jp sbb es (bad) lret repnz (bad) fidivrl cltd fiaddl out cld push adc bound addl inc out push or jecxz mov outsb addb test xlat js xor xor (bad) xor mov mov xchg dec adc xchg mov ror xor mov cmpsb scas mov xchg ja add xchg cmp mov roll hlt inc roll mov push je xor out cli mov pushf jg mov addr16 lret and lret rcll xor mov lea pop (bad) lock fadd add inc mov cmp sbb jo jecxz sub jno out call clc pop std in das insl repnz or xor sbb dec xchg pop inc add cmp mov and out mov mov clc scas add or aad out adc frstor aam idivb sub dec jl aas pop js je mov inc lret fdivs jbe cmovb push xchg pop pop mov loop aam xor popa (bad) xor negl ss loop push push sub sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call iret lock mov cmc mov mov jnp (bad) cmc cmp or cltd pop outsl ret mov pop push ret adc idivb enter add (bad) int3 mov cwtl jle cmp xor fldl inc inc (bad) int pop jbe add fisttp xchg test cmp xchg xchg (bad) mov popa pop and dec imul sub (bad) sbb or mov push dec cmp pushf and iret xor xchg pop out es or inc decb and pop and sub in and stc iret ss je xor xchg into icebp mov push dec les push mov xchg ret gs gs jle pop sub jnp mov sahf mov rcrl cltd xlat imul xchg jns pop mov xor cld ret sub mull sti sbb xchg push clc dec adc dec jle pop popa and mov pop jmp int3 imulb or jo roll inc lret or imul add xchg push neg and lods dec enterw sub mov clc inc sbb insb lcall int pop mov xor lock pop mov push adc das call hlt inc repnz add adc push mov mov movsl add mov push mov mov shlb xor mov std cltd and repz jl roll add out movsb (bad) and (bad) cmp sbb mov dec test jmp iret push loope xlat sub imul inc push or adc ret mov imul lahf fucom inc push in lcall adc mov mov push js nop mov push sarb out jmp arpl ss adc insb push jecxz stos pop add jg xor adc dec aam mov loopne xchg in outsb xchg loopne mov sahf fcompl movsb lret ljmp jge push (bad) sbb adc repnz data16 in jp inc and hlt or xchg xchg pop or leave and aas mov pop pusha sbb cld xchg stos add push mov in lahf cwtl loope das cmp pop inc lea (bad) pop push addr16 inc or or add (bad) enterw push (bad) aad scas ds subl sbb movsb scas push lahf ror adc or jp addr16 and lock add xchg push clc sub jb (bad) pop dec pop xor out mov xchg das (bad) popa jp jo mov push cltd cmp mov int3 mov (bad) pop insb shlb adc int jbe cs repnz mov repnz dec sub xchg je xchg ret test dec clc jb dec push rcl jnp fidiv or or movsl pop je call dec pop pusha adc (bad) cli rcrb or jnp icebp push sub mov fucomp aas fisttpl inc daa fisttpl mov fcmovnbe imulb stc xlat pushf ss int daa push das xor push pop das mov in or outsb lods int3 mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lds ret mov fmuls push (bad) stos pusha mov jnp mov orl stos (bad) (bad) shll inc sub add sbb (bad) mov gs and aas inc push subb jno add lods je mov into fdivrl fs inc push mov fidivrl fadds inc rcrb pop pop ss mov push jg data16 and sbb jmp pop cmp dec cltd fwait xlat push rclb outsb adc push cld (bad) pop fiaddl xor test dec jge mov mov mov jmp fldenv jecxz dec cmp or mov insl jnp insl enter inc inc out sub mov push dec adc pop push loope dec bound xor repnz fwait mov xchg lock add add cld adc mov fisttpll or dec and xor call cmpsl mov mov mov jb (bad) and es imul imul inc add xchg adc pop xchg movsl icebp imul out scas stos jns (bad) (bad) dec es pop cmp push xchg push or mov gs inc divb xchg scas push in sub in rclb pop mov mov aam leave arpl sti xlat push test inc pushf and xchg fiadd cs ret jecxz ret adc lcall and xchg ss ljmp movsl adc push test in jnp push inc xchg out stos inc cli fisubl iret aaa btrl and push adc xor or mov push stc push pop cmp cmpsb cmp notl pop adc ret in call int pop xor sti add mov jb cmp loopne fisttp sbb jae adc lahf push pop cmpsl sbb pop in push sub pop into hlt rcll aas enter push xchg xor clc (bad) lret ja (bad) bound mov in bound rclb sbb pushf inc xlat push mov outsl cwtl inc fs sub xor sub idivl lods adc add push test push mov pop xor iret sbb iret xchg push dec cwtl dec pop into das repnz push insl and lret mov mov or or frstor or inc xchg call cmpsl insl lret cmp add jmp jae loope out ljmp in scas clc jle out lcall mov hlt inc lods cmp cmp mov mov cmp push xchg jle and in inc adc adc pop sub rcl insl sti sti xchg outsl (bad) daa push lds ja xor cmpsb arpl adc xchg mov rcrb and add fimul jl lahf inc pop aas jnp mov mov clc adc cmp js and das insb inc hlt push aam push icebp int mov in cmp arpl mov int fcomi jmp push push pop insb xchg repz cwtl add into es test pop jge scas nop mov addr16 sbb jns mov xchg sub movsb push jne inc push mov fist xchg or cltd enter and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp ret adc xchg ds sbb out and pop rorb sub dec pop push and xchg movsl leave nop nop stc sbb xchg fldl xor lahf ret add jo jnp daa xchg inc adc sbbb ja in hlt (bad) popa popf addr16 push int mov stos mov add lcall jbe ret das das xchg (bad) mov jp adc xchg popf shll pop outsb (bad) int int mov dec (bad) pop pop insl fisubr sar and mov arpl sbb push clc sub mov vmovhpd xor (bad) sti es jp fcompl (bad) je sub mov aad mov inc cmc ret sub cmp jp lds cmpsb or mov xor scas sarb sub xchg push push or xchg xor sti cwtl pop xlat lods adc stc mov fbld lret out sub push stc dec clc cmp cmp inc push add rcrb mov imul jb arpl bsf inc push push pop (bad) les (bad) aam xchg mov add insl adc rol pop fmull lret mov int call or cli ficoml inc bound mov enter shlb add sti inc test and sub xchg xchg jp mov mov adc jl test cli arpl nop sub ss sbb fidivl or add movsl test push aam ret shlb fldl nop add jge adc mov pop pop mov aad xor mov popf adc jg jnp,pn into daa push push jb xchg imul push or (bad) int mov or repz aas push xor js dec fstp rcl pop inc in ret test adc mov pop inc sub es sub (bad) (bad) lret ljmp mov lods leave pushf js lret enter sub add push mulb jnp out into pop xchg jg mov adc aam inc rol jo jmp test adc lea jle xlat cmp cwtl mov pop ret shrl inc sub sarb dec inc mov (bad) or mov pop (bad) mov dec mov iret push cs lahf push jl jge xchg inc jo mov xor aas jae repz mov pop dec xor dec mov mov test jne mov test insl test pop cmp and cs adc jne sub sqrtps icebp sub sbb hlt inc idiv add (bad) sbb outsl iret test dec sub sbb xchg adc cmp ja inc xchg adc (bad) decl jno sub push int3 pop push xor scas fadds sub jl mov imul sub sub cmc mov scas and dec mov int3 dec adc add push xchg fldcw scas cs lret adc xor iret cwtl mov mov (bad) icebp repnz hlt mov xchg pop fucomp xchg jb cs lahf xor xchg mov (bad) pop insl data16 outsb in incl dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jp andl (bad) push and mov inc cltd popa mov dec (bad) cwtl and xor push xor out mov sub lods sub imull cmc mov mov sbb jge enter shrl sub xlat (bad) arpl mov mov dec add negb (bad) aaa (bad) out dec imul loop cmc pusha cmpsl xchg lea fadds mov int3 xchg (bad) sbb aad inc jo xor push inc sub jmp aaa mov aad test rorl lea add or xchg out cltd jbe mov or cmp mov out and mov or js pop mov cmc adc movsb adc xor sbb push or daa (bad) sbb mov loope lea xchg dec xchg test (bad) aad addr16 cs sub adc and add iret push sub addr16 cmp mov aaa jg fiadd stos test rol xchg imul scas sub xchg mov add jecxz jne add xor cld mov roll push and gs cmp sbb stos push and fldenv xor ret or mov lods push push xchg into into pop and inc sub adc inc cmp or ljmp jle fadd fdivrs push and hlt insb jnp push mov mov xchg sub aad jp lods dec inc pop and cmp insb fimull movsl or out rorl hlt pop dec sbb jbe xchg out fs fild mov jns lods rcrb sbb data16 cmp sbb pop and fs xchg fsubrl xor cmp push test xlat mov test in in xor ds mov in arpl sbb push (bad) jbe xor mov push cli inc adc xchg insb lock jle les push adc cwtl idiv rclb gs nop loop mov push xlat test xor outsb hlt out push pop push rcl sbb scas daa add int pop pop jbe mov jg xchg add cmp mov data16 push sbbl (bad) aas pop add cmp in icebp push popa iret test into jge mov push rcrb cmp stos sbb ljmp cmp xlat in pop mov (bad) add fild out lahf mov pushf pop imul in push lea and dec push gs mov inc mov mov sbb lds sub dec (bad) lock push fmuls mul or xchg enter and sub add xor aam cmp lock (bad) jns lcall aam mov cmp call pop rorl (bad) pop sahf (bad) mov dec mov or shll sub repz sti enter jns push repnz cld mov mov mov cld jmp mov test div xor into aaa movsl movsl repz jl ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and in int mov adc mov cmp std nop xchg cli fisubl in sahf pop xchg loopne sub push enter sub add sub inc iret fcmove push jno cmpsl dec roll movsb and daa or xor subb insb rorl pop cmp add mov sub pop xor ja push test fldt push pushf jl in addr16 xchg lahf dec jecxz and fldl int xor mov fsubl lods cmc adc push mov scas shr loopne pop or aas (bad) push out mov cmp out jno addr16 xchg add jle repz push push lret pop or dec daa cmp push in insb xchg aas idivl cmpsb mov gs dec maxps adc fbld mov sti adc push or aam jns cmp and fsubrl out jmp aaa dec pop enter pop ret testb push in psrlq adc jmp mov or inc fcoms dec out adc ljmp xchg cmp xchg push xor mov or cltd lds push jae adc jae mov outsb (bad) jg ja jp ljmp (bad) arpl cwtl or mov bound xor mov xor mov out test out ds xor sar out and orb mov (bad) pushf sub lea stos shl out pop mov adc dec mov sub push repz xor push or pop mov arpl fldt cmp inc pop add in (bad) in orl imul adc loopne scas inc mov jl pop mov pop daa push inc aaa sahf pop xor fiaddl (bad) pop push ret pop incl mov (bad) lods scas enter dec cli fcoms xor mov in imul cmp xchg push cmp push in (bad) outsb push lds mov push mov setnp negb mov xchg int3 bound inc movsb cmpsl ret in and add inc xor pop mov mov loop leave insb nop scas inc int3 pop cmp add pop jmp adc or popf pop jae movsl inc pop push jnp ret andb sbb cmpsl inc aaa sarb xchg push mov jecxz orl imul fs jns xchg dec arpl imull (bad) sub jbe mov adc cli pop ret push xchg les je scas int loope mov sub lds adc gs sub mov jp sub fwait add shl stos imul add rorb in dec mov scas mov xor push sbb sbb add and lods mov ret shl ss fldt cmp outsb dec push fwait iret ret rcl loopne js mov ftst cld fucomp ja imul cwtl es test push mov adc dec fidivrl pop pop or mov sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno imul jbe aaa cmp orb imul mov add pop addr16 repnz mov ja jns mov scas shl jno add sbb repnz lds push mov mov fsubrl shlb push sbb mov addb in fldlg2 insb jbe popa pop addr16 in ja in add dec imul cwtl mov xchg clc into lret xchg xchg mov fist mov fwait jge xchg lahf jbe mov adc mov sbb xlat cltd fisubr jmp lods out clc add push mov das int int3 imul and rclb popa das pop aas jae insb dec loope (bad) mov mov adc xor cmpsb and lea std shlb or mov cmp ud2 cmp cmp cli and es and sbb cltd pop shrl mov out and fs cmp and inc pop (bad) dec clc das sbb push popa fucompp mov into jae sub pop in into mov or push add mov shlb adc jmp mov xchg cs mov sbbl sbb movsb dec mov inc les enter dec imulb je lret lds mov js pop sub cmpsb push push and lret das negb adc out pop inc mov jp and adc jne lods ret or sbb inc insl add cmp xor jge mov outsb adc scas stos dec cltd add mov jl cltd outsb jge (bad) dec mov mov add jb cmp daa pop dec dec (bad) stc popw int pop inc pushl mov std pop rcll mov ret xorl gs xor loope movsl (bad) jae out dec fmull adc xchg add scas aad add jmp mov xchg inc or xchg outsb cmp jnp (bad) fstl and es jp ret jl test xchg xor scas loopne sub sub fdivl (bad) call orb xor aad pushf xchg mov mov dec ja andb or pushf fisubl in push icebp fwait call daa addr16 xchg cmp icebp adc add stc jbe hlt sub jbe and in outsl push xchg sti jge rcrl xchg cmp mov mov and jae nop or xorl sbb sub mov lret push mov ret xchg pop dec or cltd cmc icebp test pop and pusha lock cmova inc hlt js lock mov fwait mov cmp popa and in pusha andl lret daa jo cmp pop data16 pop popf adc sub mov sub inc outsl jnp (bad) decl ljmp divb pop mov jp fwait push imul xchg daa fsubrp and (bad) mov (bad) inc test cmp adc test cmpsl pushf xlat pop (bad) insb inc outsb push je xor or sbb repnz (bad) mov and outsl sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push gs loopne xor dec iret pop pop inc mov mov mov outsl mov push sbb xor gs xchg mov out cs jbe sub (bad) fisub inc jmp push xchg nop popa mov mov roll sti xchg and lds adc bnd inc inc mov mov xchg or push push jbe and cmp sbb repz cwtl or adc cmc lds pop xchg jge daa mov add cmp pusha xchg mov movsl mov out pop fisubrl inc mov (bad) adc inc sbb add sub cwtl lea mov or xchg cmpl add movl cmpsb inc inc les pop in icebp dec dec xchg adc lahf daa lcall fcoml mov pushf or adc loopne mov dec repz pop daa out loop inc sarl mov add xchg fst leave les sarl inc push cs nop dec scas dec push fdivrs cmpsl in cli movsb (bad) int3 jns xchg mov inc daa mov adc imul add jle (bad) sbb adc loop pop add jne sub push jo inc cmpsb stc pop xor pushw out fsubl in or sub sub push repz pop mov or pop jl enter jae adc add pop jp mov (bad) aaa jb mov test pushl pushw test pop add push cltd xor xor sbb sub pop push sub cmp dec cmp and cmpsb clc dec stc cld mov aad mov outsl stos mov pusha mov cmp enter and add jmp shll jo push push psllq jne or movsl stos push cmp stc (bad) mov arpl add ret jmp add cmp sbb lret movsb or dec test cmpsb test cld stos or in xor sub cmpsb sub jge out mov pop out test pop or mov ds dec add lret jp les in out jle std fcomip jbe and icebp cmp loope fsubrs call mov mov fsts lods mov test popa cmp data16 xor lea cmp mov adc cmp push cltd xchg sbb enter shrl push out lock xor int and inc xor repnz test test xor sbb scas cs cmpsl daa xor stos sbb add cltd cli scas pop fsub sbb stc sub insl mov nop dec test lret fmull stos push xor mov out popa dec ret add sub mov adc sbb push ss loop push jmp addr16 sub jge inc loope jp in stos setnp fidiv rorb clc xchg in adc pop mov (bad) mov push not push pop insl inc adc les add inc out xchg pop fsubrs or daa push push ret adc adc add sub pop int3 inc jb gs jge sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp js lret add bnd add ds enter popf jp jecxz enter mov (bad) mov rclb mov inc inc jge mov iret jmp mov dec outsb imul loope and arpl movsb icebp fisubl out and mov push mov adc push adc leave jg imul pop je js pop test sti inc mov outsl pop test xor sbb push sti sub gs dec mov push xchg jae pop sti mov pop pop mov ficompl jg dec (bad) mov dec fcmovbe aad daa cmp adc inc cmc leave jmp dec and jns (bad) punpcklbw xor sub imull ds push imul push sbb mov mov push pop stos insl and or mov outsb out inc das cmp pop lret jae out addl xor sbb clc ret dec out lcall pop nop mov sub pop xor inc insl or push cs add pop xor push mov scas mov xchg lds sub xorb and pop adc add lahf cmp dec stc hlt sbb int3 ds or aaa ret es loope (bad) cli add incb fdiv add push push cmpsb iret push jl outsb xor rcl xchg mov mov rclb pusha jmp jo sahf loop stos sbb in jne dec pop xchg inc mov sahf outsl inc loop dec mov xchg inc pusha pop mov movsl xchg in dec js inc jne ror dec rolb mov inc insl scas jns cli xchg cmp (bad) stos fmul cltd push push inc jle insl mov inc mov shl ret xchg and sub sub fisub dec xor mov sti xchg lea shrl mov or push test pop test inc sub sbbl push arpl inc out lret pop out sub or mov jge push add fidiv adc fcompl (bad) jg dec push inc inc adc mov xor or lret mov cmpsb dec sbb (bad) sub mov push pop sub scas fs das jns nop sbb iret adc jae lahf vpcmpeqw adc cmp xlat cmp push jb cmpl xchg sbb dec dec push and out inc jg cmp jle jo sub cmpsb out cmp inc insl out and mov push ds pop xchg mov mov mov push lcall mov mov pop popl aaa pop std gs addr16 enter lret mov mov in adc imul mov jl cmp mov les cmp mov jne cmpsb inc xor loop inc pop mov popf popa add xor enter adc adc sub adc push and xchg xchg jno and bound pop sub inc pusha rcll mov add cmpsb add stc ja sbb hlt lds dec mov mov das decl push insb (bad) pop pusha (bad) add arpl sahf (bad) repz push xlat mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and and push insb sub sbb sbb sbb jns clc pop loop aad jbe repz pop dec jae lahf add or xchg pushf mov inc fsts pop popa mov insl dec cld fwait mov aas inc cmc inc adc (bad) cmp loop imul stos lret push in es lods (bad) gs loope nop add mov inc (bad) sahf (bad) adc mov inc stos mov adc push mov add les pop sbb or push fs ret push cmp adc mov ret ror aas ret shrb fnsave xchg pop xor roll in (bad) jne jo pop ret out mov inc les mov jno push jmp leave lret mov xor repnz jecxz jl and adc (bad) xor lock jo ficompl inc add cmpsb mov inc cmpsb fwait adc push and ss sbb dec leave enter pop mov xchg ljmp dec cs loopne sahf pop stos xchg inc out mov cwtl lcall lods jle cmpl jns xor sahf fisttpl popa cld push jl movsb mov jo cmpsb adc sahf or xor push test bound add mov in xlat add lahf sub stc xchg xchg int3 adc mov adc fstpt push testl (bad) adc inc test mov gs rcll mov mov lods in and pop pop lods adc repnz push out addb out fbld mov mov sbb (bad) ficom test sub je pop std pop mov popf pusha leave int3 ljmp jge (bad) ret push int out ss out xor call ret cmp jo (bad) mov pop xchg jno cmpsb shl test aaa (bad) fstl cmpb inc mov inc jp mov lret adc fcoml mov ljmp pcmpeqb dec mov dec dec scas cs es mov addr16 adcl lret out mov xor pusha (bad) dec cmpsb push cs stos xor push frstpm(287 push stos (bad) push test popf xor fdiv shlb loope cmc or roll jmp or inc insl (bad) xchg mov xchg (bad) xchg imul pop xchg daa dec dec je ret jae sbb mov jp pop in mov or out sbb mov cmp push mov jo sub scas mov jo jge jmp adc fldcw push or mov std jo adc mov outsl jae testl int3 int mov pop sub rcrl cmp mov cs cmp call cmp push push push push pushl call dec or xor call add icebp cmpsl sub dec loop push adcb mov ds mov xor push cli cmpsb push jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop test xchg jle into sub (bad) and addb xchg icebp lea adc test sbb add (bad) jle cmp pop pushf mov je sbb xchg and push enter pop popa test arpl cmp pop into push in add pop in rcl lods bound inc out xor pop aad mov xor (bad) rorl sti lds ret subl sub cs add in inc dec xor cmpsl fisubrl movb xchg adc fdivr add fidivl xchg lods xor mov sbb jns cmp call mov repnz nop cmp or add mov mov scas pop mov mov dec pop stos pop add insb outsb in test mov fs mov push xchg repz mov xor dec jp xor or xchg push sub pop repnz jp out jo fistpll or xchg stc inc inc and sub das pop loope xchg int3 sub sbb push jne lahf or je dec and or add mov (bad) data16 xchg push loope cwtl cmp cltd mov push sub sbb sahf jecxz pop push gs (bad) dec cmp cltd sbb xchg (bad) or push xchg xchg negb repz mov notl sub or cmpsl cwtl je mov bound cli (bad) mov xchg xchg lret cmp jmp lret je fldcw mov or repnz stos inc aas repz std mov shlb xchg lds mov sti cmc sbb add mov imul xchg pop jp pusha aaa idiv mov js sbb xchg push ds mov stc fcomps aad cmp insb pusha (bad) jbe fmul push divb je mov add cmp xchg aam cmpsb sbb mov jl in mov call imul pop sbb xlat nop loopne sarb in push cmp ret mov dec mov aaa das in inc adc add or sti pop fcmovnu cltd jne cmp cmp cmp mov adc push cmp fldt fisttp or bound fidiv and jb in leave fsub adc mov imul inc add mov fstpl lret ret mov psrad les mov pop add (bad) (bad) mov xchg rolb jecxz flds dec jge (bad) fdivl fsubrl jbe test adc aad jecxz cmovo scas out nop add in mov inc ret das les aad insl or mov fdivrs pop shrb cmc dec cld add pop xchg push xchg sub dec lock out inc or mov pop pop je repnz xchg fcmove cs out mov pop xchg fdivs push and xchg cmpsb jb push push add popa je mov fsubr ss xor mov std ffree pop add add push js stc cs add lahf movsl (bad) mov pop push xchg cld lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall lds rclb pop mov or lock adc inc pop adc mov push jae mov cmp sub jne pop pop stc fcomps jb xchg sar dec (bad) popf nop sub cltd rcrb ret jmp fisub or (bad) inc mov mov addr16 cwtl outsb add loopne ret dec test lea int mov pop push mov jmp sub dec loop adc fimul and mov outsl cmpl adcb loop (bad) ja pusha imul add inc nop mov push faddl adc cmp into (bad) jbe cmp sahf adc xchg flds outsl (bad) sarl mov push rcrl out jle in leave sbb sahf test mov xchg push enter xchg push sbb adc (bad) fwait ljmp sub pusha mov pusha loopne je fwait div or nop imul (bad) sub scas or (bad) mov xor or mov out mov pop test dec adc fldl cmc dec push adc fstpl fdivrp subl fucom clc hlt shrb ja fnstcw xor adc jne lds cmp inc pop xlat mov (bad) xor mov loop cmpsl push add shl mov popa cmp pop movl les jo sub push jo jle xchg popf popf (bad) je lahf movsb xor stc aad cltd mov mov mov test in sub jmp rclb or jae sbb lahf arpl je ds inc inc sub clc pop inc inc xor jne mov sbb jae stos test call stos pop cmc adc and loopne pop pushf mov lods lock clc aas xor jge cmpsl cmp push mov mov mov cld fmull xchg xor xchg xor and pop lahf push addr16 xchg ja lods mov pop std add icebp cmpsl (bad) xor aam mov push add int out mov test lcall sbb mov gs iret fcomip add insl aad ss cmpsl test pop pop in dec movsb fucomip aaa in lea in fwait inc dec inc cmp dec (bad) xchg in mov cmp jecxz xchg mov pop pushl and mov fs and ret inc sbb mov sub clc push mov sbb dec inc loope pop xor aaa dec fmuls dec cmp ds push adc cltd ftst imul sbb pop inc decb es es cmc outsb sti xchg and sbbl push scas imul fnop sbb cmc add push mov add es xor mov insl pop and inc (bad) test dec adcb pop outsl mov stos mov mov xchg mov repnz in daa mov mov loope jecxz mov (bad) lahf mov mov xchg and mov scas int3 fild ret or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sbb inc inc mov in mov imul addr16 adc push cltd jmp or xor jecxz es repz fistpl sub jne add fsts les cmp push sbb pushf jle and (bad) or mov hlt dec fisub push notl in clc aas sub xchg mov maxps das shl mov mov push lcall dec push movsb sub ret pop add imul lds cltd rcrb push sbb jae sub inc es movsb inc cwtl test mov add dec inc lcall (bad) divb push push cmp call sbb push adc push sbb pop call adc aad adc or push add test cmp fcompl insl mov ret mov sti test adc loop idivb loopne cli mov insl push aaa repnz bound insb adc loope sub insl mov mov cmp (bad) loop push push dec lock rorb cmp (bad) jecxz push sbb pop test xchg inc add mulb add pop arpl mov movsb xchg adc jmp incb negl dec iret pop adc fbld stos sbb dec scas in lcall es ret mov clc inc mov rolb mov push andl (bad) or push scas cwtl mov jne,pt mov push sahf pop nop add xchg fisttp stc jg std mov das mov sub and loop push pop nop add fisubrl push ror mov mov sbb sub xchg (bad) xchg jg cmpsb adc loope pushl cmp push pop xchg call mov arpl movsl pop imul push jp cmp out jg mov lods add jne imul arpl mov in movsl or push xor je cmp jp cmp into clc addr16 dec mov cmp in jge inc jne cmp test roll xchg cmpsb mov pop lret xchg inc gs sbb stos in mov or lret inc mov mov push out cs add movb stc hlt mov cld cmc push push shr add cmpsl dec sub mov push push lcall mov jmp mov cmc pop test mov sti adc callw idiv pop in pop cmp dec (bad) mov cmp gs lcall ds inc inc pop in rcr mov outsl mov out dec mov mov ja imul mov scas sahf lahf (bad) mov add xor and dec orl pushf xchg sbb in stos pop xchg mov or fwait (bad) jl mov out test clc fwait mov jle pushf pop add addr16 lcall inc push neg sahf dec mov fidivl andb or push add icebp xor jg ror add mov mov adc outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp leave scas sbb push sbb (bad) dec sbb in (bad) out loope aas mov mov in out xchg fs movsl add in add inc fld sub ret mov push push sub lock test adc adc clc xor sbb inc push stc pop mov repz pusha mov mov insl cmp cmp mull mov pop mov mov inc pop lods out push call stos push lahf mov scas out inc lcall xchg or inc divl xor or mov mov roll or push sti aad jae sbb ss rorl mov and sahf aam cltd cmp mov or add xor sub lcall mov xor in fwait jp push fsubs aam faddl sub movsl mov rcrb pop sahf fstp cmpsb mov pop add pop sub jg test les mov rcrb es adc sbb loope cmpsl inc sbb add inc push and push test add push sub add jae (bad) fsts mov nop out sti sbb mov mov es dec push dec mov sub pop mov mov sbb lret sar sub jl cmp mov out lea or fstps in (bad) xchg cli mov xor (bad) cmp popf test call adc cmp scas cmp pop jnp in inc outsb int lods inc gs jbe nopl scas jge int arpl and sbb xor or sbb stc mov cmp lahf lret dec xchg outsl out dec jns fdiv (bad) fs cmc lea outsb mov rorb push sbb call pop jp mov or push rcrl jo pushf xchg stc test mov jns mov test leave cwtl add (bad) jle jo out inc adc sub cmp dec push test mov inc dec lret mov push mov outsb insl jbe push mov gs loop ja shl mov sbb cmp push mov pop push dec or test aas addr16 das cs jb out test jo rcr jo les lds xlat ljmp mov cmpsb insb cltd testl dec mov scas xchg int3 xchg adc cltd (bad) into lock aam pushw out dec (bad) push or pop and fmul dec mov jns fcompl ds mov fs jg jecxz ficompl aad jb (bad) ror (bad) mov pop cmp pushl mov rolb inc pop xor outsb enter (bad) mov mov and (bad) inc jo sub lds fdivl mov push incb and dec mov cmpsb mov push idivl mov xor sbb (bad) ja int3 mov cmp icebp xchg xchg test lds sbb adc push xor mov mov or push outsl mov jno call sub mov aad movsb lods aaa call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out (bad) mov cmp cwtl add rol push cmp ds scas popa add notb and repz inc mov pop xlat movsl push aam push imul stc cwtl out pop in cwtl insl xor insb iretw clc ret vpcomb into repz imul dec push (bad) cmc push xor pop popa (bad) loope xchg aam clc xchg in add fwait pop push mov int3 xchg pop mov xor adc cwtl mov and mov pushf jne mov jo jne pop xor mov repz ffreep cmp xchg inc out sbb daa jl pushf xlat mov mov sub movsb pop sbb ljmp (bad) mov or popf mov cli fidivrl pop (bad) cmpl xchg mov inc xor jno out mov xchg add fimul add outsb in lahf add mov sub (bad) xchg loope call outsl push addr16 pusha mov inc das adc or in pop sbb test fisttpll or mov pop mov std jne jno push xchg sbb outsl add loop int sub (bad) into inc push aad and push push stc iret pop xchg in pop cmp fs stos pop sub add (bad) lods (bad) std push arpl rcrb (bad) pop mov pop jae nop imulb mov push inc arpl fwait clc push mov push push daa push and xchg cmpb cwtl sub sbb mov pop mov push dec sbb hlt pushf xchg sub cltd mov lea aad or jl sub sbb inc cmp insl in aaa lahf es cmp jmp cmp add jno jecxz or aad jne cmp xlat mov dec mov jnp jnp cmp lock lock fild (bad) loopne clc lds in shrl cmp adc cmp negb cmp (bad) push mov jno mov push testb jg pop aad out pop jno clc cli ja loopne sbb dec sub fwait sbb nop rclb int3 inc sti rcrl stos out add sar test (bad) sub lods inc aaa fwait ljmp ds loop sub pop lahf cltd stos adc add sahf idivl jae xor pop mov mov pushf test fisubl jnp jb and (bad) add lahf pop imul push lods mov xor push cld fdivrp mov lods rcrl movsl nop push sub and iret shr ret and inc sti mov or or test add dec mov rcll add cli nop outsb or xlat (bad) cmp add les std pop bound iret xor rorb je and mov in inc jb daa (bad) icebp mov (bad) pop mov aam mov jecxz iret pop pop out mov and stos js imul out insb aad enter pop jae mov adc fisub cmp push inc or cmpsl fs bound insl push sbb arpl push pop push inc shufps repz pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb arpl aad add popf mov ss lods mov and xchg faddl adc sub stc or jnp pop pop pop enter orl cmp or push movswl dec fidivl in or dec cmpsb or mov cmp push sti imul (bad) inc fimul adc lcall lcall stc (bad) dec mov sub nop iret lds ss lds jmp sbb push and rorl xchg inc add ss lock adc mov stos or mov aaa dec loopne je ljmp mov fistpll push les xor mov sbb insb jae lods imul inc jo xor pop ficomp or idiv mov mov pop lcall es out mov jecxz js pop imul fstps lcall dec sarl popf cwtl subl pop sbb lock cmp sub aaa adc les icebp gs xchg mov push mov pusha imulb xchg jle lods into inc sub cltd sti jno sub mov scas pop ficompl mov insl inc push xchg mov fsubrp (bad) jecxz divl outsl mov jnp repnz ss and add cwtl loop push push cmpl mov hlt scas aad (bad) daa add xor inc add or test testl or call inc cwtl dec cmp stos or jo jno decb addr16 lret jne movsb imul jbe adc inc stos mov scas mov loope lret rdpmc ret jns mov lods mov test icebp pushf int3 add mov mov adc fs or sbb repnz fcmovnu ja stc test push jl ja xor dec ss inc arpl out mov push leave lds imul outsl (bad) movsl inc xor cwtl fldl mov dec mov les test jp fdivs xchg sbb mov and mov inc mov jbe xchg cli popf das insl out sub xor jmp fisttpll push sub negb cmp lcall ficomp frstor (bad) add xor lret ret mov scas call mov or jp sbb xor mov shr inc xchg sbb cs inc cs mov push fcompl mov lret in xor stos aas ds test mov in pop loop fistp shlb push hlt fildl lahf ljmp dec les arpl ret inc inc test (bad) scas mov inc fcmovne jge push dec clc addb jo mov ja (bad) (bad) mov rorl add xor (bad) fcmovu std mov dec jb nop call leave push mov sbb inc xchg nop push cmp lock adc cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl std fistl cmpsl and fwait call xlat mov fdivrs lcall in sub clc lods mov pop stos rcr fldenvs sub test rorb adc dec rorl daa cli fsts xor pop lcall addr16 sub mov push in gs and push push mov cmp sbbb xor pop mov ljmp rol or cmpsb test inc mov mov (bad) int (bad) in scas xor inc jbe fptan fstps or mov add mov (bad) adc movsb add pop test jae inc jnp mov pop loope lret pop outsb stc adc int3 roll pop mov ljmp mov jle out mov xchg jle xor ja (bad) pop mov aas out je xchg mov outsb addl dec stc rcrl jnp mov (bad) or push adc cmp lock imul cltd pop rol lcall mov sbb ljmp push imul dec add push inc or shll rclb and sbb jle repz arpl nop adc add fsubrl (bad) movsl in jae cmpsb pop cld adc insl sub fsub imul push mov cli jb jmp andl sub adc mov mov adc rep call or mov xchg inc inc pop mov pop cmp ret jae add xor and les test inc xor jbe repnz mov (bad) enter xor mov std dec aaa sub sub fwait sub (bad) iret push dec pop (bad) arpl sbb sbb sbbb popl push mov lea (bad) (bad) jnp iret dec gs lcall nop sbb inc inc push dec call mov fs call sbb cmp (bad) and lock jbe (bad) sub jl mov fsubl pusha mov imul dec arpl xchg popf push jp lods xchg fisubl outsb push movsl rcrb push mov mov in loopne popf arpl dec je ljmp insb and xchg inc mov inc lahf test jl jne shll jb loopne mov ficompl inc sub call and mov int (bad) out push ret jge xor inc in call loop mov insb out out fmuls sub out jmp test jmp mov push out inc mov dec mov ret and xchg xchg nop cmp inc in pusha test insl jecxz cltd sub xor mov push cmpsl aaa imul movsl popf cmp aam je andl test in pop enter cltd adc pop add (bad) int3 jg push loop jg (bad) jg sub rcl scas pop test in (bad) dec cmp in lahf jmp insl xor fist std adc mov mov cmp enter (bad) xlat cmp sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl repz (bad) xor or (bad) in cwtl sahf das jmp fnsave dec and mov push outsb pop fistpll aam ds call mov mov ss enter cmp pushf or (bad) mov mov cli push adc in icebp (bad) jnp aad inc jbe call or sub jb cmp ficoml ret inc add icebp (bad) data16 shr xchg sbb xchg jo sbb or sbb xor jge or js mov incl mov xchg mov mov or nop push jns jg lock pop mov jecxz xor scas pop sahf fisub int3 mov xchg jp fs cld jmp data16 xor stos inc adc add icebp pop sar cltd xchg jp xchg imul call mov aaa mov and idivl das xchg test mov push mov cmp icebp xlat push shlb push adc sbb add cmp jns inc bound sub pushf dec outsl lahf push pop aam adc xor dec mov ret mov orb ficomp push (bad) mov adc push cmp addl insl rorb jae nop sbb ss sub cmp mov sbb jmp adc jge dec pusha pusha jno aaa enter enter and (bad) or test jge add movsl xor xlat push popa cwtl jb int movsb lods rolb xor enter add mov sbb cmp dec nop inc inc adc stos xchg rol orl jle stc js loopne mov stc cmpsl pushf push mov dec pop lods lods (bad) inc mov jnp inc xchg dec mov sub inc stc rol inc dec lahf mov out mov mov je (bad) cld push pusha lcall out inc orb xchg xchg pcmpeqd jg adc xchg int3 popa pop imul rol pop mov aas lret inc mov pop dec push mov (bad) xor sahf mov imul cmp pop sbb enter gs sti mov push adc mov test test daa mov sbb in mov stos addl mov pop out jno mov or fimul fstpt fnstenv mov sbb les outsl jae jge roll pusha out pusha dec dec adc jg push pop insb sahf mov pop lock jnp cld mov (bad) stc int3 data16 mov faddl or mov mov adcl pop xchg push xchg push xchg popa out mov or loopne int fs inc xor aaa lea inc jmp and clc sbb push inc sbb out std repnz adc std imul hlt in or push and pusha (bad) lock ret cmp or pop jb push jo ss out mov push cmp mov scas pusha or add cmp push lret mov scas push jp scas push mov fisttpl (bad) mov pop icebp leave and xchg fsubl mov fimull imull sub gs and push repz out cld hlt mov add push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec dec jne jae dec movsl test adc cmp jmp popf pop dec sahf sub popa mov mov adc test mov icebp loope dec repz outsb fbld xor sub mov iret das inc ja shll aad xor adc mov mov sub icebp pop mov (bad) cmc int jle roll pop fucom xchg roll (bad) add cld adc pusha pop mov cltd adcl sbb fisub xchg inc ljmp or pop or bound dec (bad) pusha hlt push cmpsb stos data16 xor pop fmull mov pop sub push mov fs pusha adc inc repz xchg or cmp mov bound scas adcb or or test mov pop pop daa mov fstl js inc pop sub pop mov les dec xor jb add mov inc ret push mov adc dec pop pop pop jge aaa xchg and mov lcall jns pop pop add push fnstcw cmpsb add out popf mov sub mov in pop ja mov pop out lds mov mov popa add inc ljmp fcmove inc add idiv repnz cmpl sub icebp gs lcall add (bad) push out jne dec hlt loop sbb outsl outsb shrb cwtl or fstpl (bad) out popf roll mov or and shrb or shl pop call sahf jne and scas or daa loopne fcomps add fdiv arpl adc mov sub in (bad) rclb aam shll dec mov cltd clc mov enter negl push pop stos cmpsl xchg idivb or dec (bad) jge lcall mov mov adc mov sbb jae js mov push movsl repnz mov cmp in add mov je xor xchg dec arpl jge jp push (bad) jg fldl xor mov or test and or (bad) mov cwtl jmp add loope iret mov mov inc (bad) xchg push mov pop out cli aas pop decl mov adc inc xor and and inc sub lret movsb iret push pusha jle inc aad scas sbb lret inc add jb loopne sbb add icebp push dec or ss dec fld xchg add pushf mov fimull mov scas push pop jbe mov nop jo sub inc (bad) or cwtl addr16 movsb ljmp add push cmp sub into mov mov popf inc sub loopne or mov repnz in dec mov jb xchg ss in addb push cmp out jmp jno sar xchg mov cmp cmpsl xchg inc xor lods sub or cmpl fldt out adc test inc das push enter add mov shll (bad) mov mov loope ss out or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std jp cmp jno pushl push mov sbb nop xchg mov lahf repz push or enter or xor jae xlat adc icebp dec es xchg xchg clc test ss popa add push cmp leave xchg xor or loopne repz mov (bad) int3 orb add xabort scas add call mov insl or push mov sbb popa sbb es push lods hlt imul push cmpsb loop mov pushf cwtl cmpsb sti inc sahf pop jmp jp cmc in ljmp popf std loopne imul andl out negb je mov jle aaa jb in jnp add xor cmp pop jmp jno sbb mov loope fdivs outsl mov jge lcall mov cmpsb xor in pop in fsubrl push xchg xor or sbb aaa aam cmp sub pop pop incl mov xlat jge test out clc xchg lods nopl pusha push or test (bad) sbb btc mov test aad outsl jno inc cmpb cld cmp pushf repnz or inc jl sbb cmp push fdivl cmp push ds xor ret ljmp mov inc mov dec pop js mov mov cld pop loope jecxz mov aam xchg push hlt and sti push jg push hlt mov icebp xor push int fisubrl movsb roll lea push ficoml cld outsb daa mov jno ds in lahf mov mov sbb enter cmp push sub inc jo and das lret add xor leave mov aam inc imul push mov outsl cmp in movl dec jo nop lods (bad) mov add out ds push pop mov insl inc test test lods push lahf test movsl fwait xchg and and cmc xor sub jp xchg lret mov cmc outsb outsb xchg scas (bad) rcll push cmc idiv and mov jnp,pt subl int mov ljmp (bad) mov (bad) cmc jb icebp les or in ljmp (bad) out loop and pop inc and pop daa or insl sahf pop sbb xchg dec sbb fild (bad) push cltd (bad) arpl mov stc ret jnp cmp scas imul sbb fsubrl popl xor scas and push sbb xchg fisttpl rorl pop call sub pop dec and insl shrb mov jns jmp call ss or les xchg fnstsw aad adc ja dec lds shlb mov fcomip into insl xor repz push test in fistpll aam and cltd fmull pcmpeqw (bad) mov ret cmpsb int leave mov inc clc lea int3 test insb jae mov push jecxz cwtl addr16 shlb lret test dec addr16 stos cvttps2pi inc faddl lret mov in push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns test fisttpl mov popa scas push (bad) xor cmp and pop or pop adc (bad) sub lret mov mov cmc jb inc inc test call clc mov cmp push sub xlat stos cmp inc mov neg mov das ljmp push lds pop je arpl mov xchg add mov lahf mov and mov shl xor jno sbb mov or xor test jae mov daa call push in imulb (bad) insl sbb mov je pop add ficomp in fdivl pop inc (bad) hlt scas aam push call clc or or test test sahf push pushf aas test adc inc shrl adc rcrb scas add mov push idivb sub sub push lds rcrb mov pop mov inc sbb adc rcll sbb popf mov in enter shlb sarb inc xchg sbb mov cmp pop test das mov je test push test test mov sahf (bad) imulb mov ret je push repz lret xchg add dec xchg pop push jns push sbb adc (bad) pop xor adc xor and in sub pop inc rcrl adc out insb xor push dec cld sti jg mov aad jle and insb xchg xor fwait stos addl dec mov mulb cld cwtl imul mov jecxz cli dec xorb adc mov xor testb jbe (bad) in mov dec iret push push push push shrl pop mov arpl notb jl scas in cmp inc adc testb push xchg xchg xor sbb icebp or fmull rcll dec movsl adcb (bad) xchg jmp pop sub sbb (bad) pusha pushf aad lods sbb leave loopne (bad) dec xor fwait cld sub aad (bad) mov sarb cs scas xor imul jbe mov test jb inc add outsl arpl push push repnz cmpsb pushf or add jle jg icebp movb daa sahf into sub in add jo out xchg cmpsb inc xlat push xchg dec xchg fstpl sub mov ss aam mov xchg addr16 xchg inc (bad) fisttpll fcompl push cltd fisttp add or cmp push xlat xchg lret es or stos fsubp mov (bad) xor jge lods fisubl sti out lods fwait jmp jl mov inc hlt aaa (bad) (bad) cld in les daa xor test cmc adc (bad) fsubrs inc dec std insl and (bad) sub inc popf sbb lods (bad) mov add (bad) lock mov lock cmp aas fs imul (bad) xor repnz in mov push xchg gs sub adc orl push cmp mov dec ss adc aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnstcw aas stos xchg int and or (bad) push pop push sub lahf movsb or jne fwait rcpps int3 pop push repz pop movsl mov scas je sub sbb mov gs movsb inc lds sbb jecxz mov fs dec mov pop push inc aas imul add lods lret push cmp push loope and (bad) push cmpl lahf fistpll (bad) in mov push mov xchg add outsl cmp je fdiv push mov (bad) in dec loop (bad) loope int fisttpll push mov adc out (bad) (bad) mov (bad) xor ljmp in xchg push (bad) icebp dec fs xor (bad) or rcrb (bad) ja mov aad fwait mov or or xchg dec test cmp push sub sbb les xor pop xor xor imul xor rcr enter mov popf lods movsb jmp rcrb (bad) jp jno mov insl loope xor sub inc rcrl mov dec xchg adc dec mov add mov mov (bad) jg inc in jge mov fs call sub xor lret fstpl stc js pop adcl xchg (bad) jne shld mov jbe nop imul jae mov (bad) cltd mov in add mov dec sub scas sbb dec mov pop rolb adc ds mov cmpsl lcall sarl test (bad) xor xchg test mov mov xor pop lahf aam jo cmc pop fisubrl jge cld fldenv sahf mov loop out xlat outsb mov or jecxz idiv add in pop inc pusha rorl daa ja cmpsl insl sbb jmp push movsl mov test xchg or mov iret cmp scas push mov out nop pop sbb adc dec aas (bad) mov stos mov mov int ja (bad) std lret xor mov and repz popf inc jns jp cs test mov data16 enter dec push dec xchg sti ror mov inc mov dec (bad) popa jecxz stos in in cmp data16 cmpsl in mov movsl scas ja pop stos add movsl in mov das (bad) loope (bad) or icebp and int fimul cld and in push sbb aas insb and into mov scas add push mov or idivb mov mov les ljmp add gs mov dec cmp dec pop (bad) push xor stos (bad) xor mov jecxz clc int fsubrs push pusha daa mov int sub mov rorb pop mov jbe dec mov (bad) and push stc lds xor jle or pop xor jbe push sbb mov je mov jmp aas push mov imul loop dec aaa mov outsb sub scas shrb push lahf sub adc mov addr16 inc lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) sbb dec loope mov rorb (bad) xor cmp mov mov pop shrl xchg sbb dec xchg shl push xchg rorb xor pop mov in decl and loop stc jns inc test pusha add push push mov loop mov pop dec mov (bad) push mov dec mov fisubrl enter outsb add and sub and jae jb jp ss adc in out (bad) fstpt loope test dec hlt adc call dec idivl cmpsl fsubr stos cld push ljmp add and mov sub jbe rcr out and push and sub fwait mov insb and dec test dec sub xor cmpsl out (bad) repz iret inc repz mov sub xor inc rcrl leave mov jnp cld jmp fs pop lds fmul sub out pop orl xchg mov xchg es pop aas unpcklps push push mov mov icebp aam mov scas adc xchg jl (bad) (bad) or imul cmp pop std add fstpt bnd cmp inc xor out ret (bad) pusha lret add iret cs popf or mov jge lods outsb test sahf cmpl mov inc sbb cmp mov adc cmp nop lds in inc mov enter or mov cmp test sub mov les ljmp pushf mov dec inc xchg lods in add das dec dec fnstsw push mov or xor or jecxz iret adc pushf push loopne xchg fwait imul push jg,pt loop pusha data16 xor in push sbb mov jne repnz and mov out jns mov call mov push lcall mov rolb fstl xor adc aad (bad) les inc pusha jp (bad) lods cld popl subl movsl dec (bad) shufps mov xor js push inc push (bad) mov ja push fwait push leave mov push pop cmp scas outsl ret add mov mov dec sub and insb addl or dec jp call inc adc test popf sbb ds int mov inc daa into jmp dec mov or clc repnz mov push icebp popf sbb dec call push mov sti loop jecxz into out cmp ror ror leave cmp and xchg sbb xchg cmp mov push mov adc and loope in mov jbe pushf push sbb xchg arpl push inc test pop mov (bad) jg push push (bad) mulb dec clc sti cmpsb inc adc std mov fsubs int3 xchg andl pop cmp (bad) (bad) or test int adc jae cs dec sar fiaddl cmp into fldlg2 adc notb add cmp iret inc out jp fscale or das mov inc sbb fisubl push sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall stos mov scas pop movsl mov jbe pop fwait cli enter jecxz adc jae and sbb mov fst cmp dec and outsb icebp in out push jbe inc fildll xchg clc or jnp xlat pop mov or mov dec cs inc mov jb cmc mov call (bad) arpl ds shll call jle dec mov in or cmp xor or dec pop test clc mov push mov xor sub adc xchg ljmp jnp lods mov sbb dec fistpl or or ljmp and cmpsb mov icebp iret xchg jnp outsl push pop in pop int or xorl fistpl sub cwtl or mov aam in mov lods lock add jmp stc jmp jbe into cmp rcr mov imul fwait or ror mov ret mov retw outsb xor divb mov (bad) jnp lret movaps push lock sub movsl cld add and out push jbe mov fbstp jne jb jb mov (bad) jl aam mov popf inc and jmp and mov lods imul mov roll cld std repz and enter hlt cmp xchg rorl push ret xchg gs mov inc mov sub ja push loope aam sbb icebp push aaa sbb (bad) mull aaa adc int adc inc mov xor mov mov mov xchg xchg adc rcr add sarb push jge out mov (bad) lds scas cmp and dec out pusha adc sub testl or aad imul insb mov ret js sbb and or ja bound (bad) mov pop mov mov push loopne push enter inc in ja mov inc je outsb add mov xchg stc (bad) mov inc mov psubq mov xor jp fidivrl jnp xchg loopne popa jg push es mov mov jne jge je sbb in fxch int pop mov inc add mov pushf sub dec mov push jmp inc enter cs jmp mov std fwait mov xor (bad) sub ret insl sahf dec jmp jmp adc arpl je cmpsb jecxz gs sub lds push mov fldenv pushf movsb mov inc and mov pop inc outsb mov pop dec pop jmp dec into pop jp push jg sbb jbe insl xlat xchg shrl data16 mov out mov mov inc in cmc adc out icebp out mov and aas fs daa lds push mov out push sbb movsb lods mov (bad) aaa add jge dec mov mov sti dec repz inc ljmp ljmp test push icebp jl outsl out das rcr or inc or jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov sarl fnstenv pop cmp loopne fimul mov sub pop inc inc add icebp and and lret jne jnp jecxz aam arpl lea push pop adc lcall ss or lock pop pop (bad) mov sahf dec xchg ja jl ja cmc dec lock call jge push xchg xchg jecxz daa out jno cmp test inc or loopne ss loope lcall ret stc or or sub das sti std adc jmp jbe lahf movsl jmp hlt pop aaa movsl xor xor sub and or cmp mov (bad) ja push jne cltd xor push int rcl mov inc movsl push fcmovbe and mov push sbb ljmp out mov inc xor gs xor pop cmc scas fmuls sub inc rorb adc push mov mov add pop aad push scas mov push pop push mov das scas xchg jno or test in add push lods sbb fcoml or pop push test bound fidivl jo add sbb in lahf mov push and push push xchg je jge outsb and imulb rolb jb xlat jne jle xchg add rorl aam push jl pop out dec out lods fdivrl push push add cmp cmpsb jecxz int3 xchg cld dec rcrb jne pop pop test jge xor jnp imulb outsb les inc outsl ret sub pop inc or adc (bad) test xor jno jl push jmp in jge test cli mov lret ret scas push mov jg repnz sub imulb cli jp adc je xor add js pop stos movsl mov inc mov mov jg mov in lcall pushf push testl push cmp xchg mov lcall jecxz dec test push pop xor dec out repz cmp add stos nop mov arpl jmp jl sbb test or mov pop mov data16 ljmp lds int aad popf lock jnp push mov jmp addr16 sub jmp mov rcrl xor in into push pop jae fstp jmp xchg mov add ret cmc or fwait push xor cmp jae sbbl stos mov mov xchg inc mov (bad) xchg mov clc push clc push nop pop jg mov xchg inc add shl xor xor jo aam repnz xor aas cmp or pop adc push out out add cmp add inc inc cmc or (bad) loop mov outsl pop sub push test mov jp and dec mov dec adc cwtl data16 ds ret cmp repnz mov inc mov movsl pushf outsb and sub jo (bad) repz das pushf jge (bad) ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg xchg mov dec std inc (bad) out xor push dec and aas test lods addr16 or pop and jbe cli mov aam (bad) mov (bad) pop push cmc mov mov stos out or (bad) jnp fdivrs dec out push mov mov pop std jnp jg cs cmpsl inc mov das adc insb sti test jo dec fisubr repnz sub mov xchg shr adc or inc fnsave lahf mov pushf xor in mov and adc pop cmp fmull mov cmp mov iret outsl aad mov dec cmpsb sbb (bad) ret gs pop xor lretw jns aad lahf inc xor stc add daa mov xlat fsubp in jb xor xchg pop inc cld out fwait nop mov push add jne dec sbb mov icebp (bad) jecxz push and mov fidivrl mull and lret movsl (bad) adc outsl jnp jae pop loop add cmc mov push movl pop movsl mov cmc inc dec xor xor cmp lea adc mov add mov outsb cmc jmp inc test sti xchg pop (bad) cmpsl push cmp adc jmp sbb push addr16 mov mov enter movsb jl imul loopne cmpsb cmpsl mov fdivl sub insl sub dec push hlt lock cwtl fstps sbb sub cli aas test out xchg add movsb xchg icebp aaa mov ret mov dec repnz add or and and orb out incl fwait or mov sbb faddl pop cmp addl iret cmp jno testb xorl push push add mov ljmp cmpsl mov es jge cmp je adc imul hlt push in in (bad) test iret adc fisttpll jno or sub cld stos popa mov outsb mov xor fadd sbb insb cmp loop xchg mov cmpsb pop jnp dec add mov pushf mov add shrb sub adc loope cwtl pop jo aas dec and fcmovb and lret aam in xor pop in test xor popa pushf rol aad test test mov add dec (bad) (bad) repz bound ja mov push sub adc and (bad) mov adcb sahf cld push out xor (bad) ss or fcmovb nop add jg mov xchg icebp mov jecxz punpckhbw xor pop out addr16 into rcr xlat lods int mov and fidivr insb hlt and aam push cwtl pop out adc mov and cmp mov and imul (bad) ja push xlat inc sub pop mov cmp xchg xchg sub inc mov add sbb test inc sbb jo inc std inc xor pop jae pop adc cmpsl mov xor push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmpb inc imul popa dec push xor dec dec dec add xor mov pushf std dec stos pop (bad) adc mov iret or jae rol call adc rorb in mov faddl add test movsl sub mov xchg xchg insl scas ds lcall js dec xor jmp movsb mov lret add xchg (bad) ficompl ja jns (bad) push nop or pop movsb or adc lods jge (bad) psubsw negl mov fxtract sbb jns cmp clc ja adc jae lds or (bad) sbb les fisub sub adc test stos std dec push mov es es adc push cmpsl int popf jp mov dec daa leave add in sub (bad) mov clc std sbb int3 fist adc into es ret sub jns xor cmp xor fwait push test stc jle vmwrite adc rcrb (bad) adc add ljmp cmp pop ds ret sub gs pop cmp orb jnp adc mov das xchg xor sti and push cmp xchg pop aas cmp sbb xlat in testb mov jne dec inc imul lods mov cmp ljmp (bad) loope les cmp jae dec stos mov push cmp inc push sub cli inc jbe xchg sub iret loop repz sbb or outsb mov stc inc test add mov jmp test pop pop xchg inc iret lcall xchg jl out cmp cmp out mov es (bad) push mov cs mov push test xchg pop push iret call mov ds dec arpl js enter add pop daa push and add das stc push repnz push adc jge stos jecxz push lahf movsb cli ds in lret imul jecxz (bad) jl ret sub aad lock xor (bad) adc push xchg xchg sub dec arpl iret mov or into call int and lods jl push in out js mov or jbe lret (bad) sbb movsb negl xchg dec mov std (bad) jmp lcall dec mov mov mov imul inc es adc sub adc or sbb dec push cmpsb push dec repz aaa push add add in xchg lods shll in jecxz arpl stos cmpsb jae and push adc xchg fistp fptan (bad) mov sti mov mov pop mov or out sahf push cwtl cmp js cmp sbb push add ss lea push pushf mov or stos fildl cmp cmp int3 and adc jns mov and adcb test cltd dec sbb out xchg or dec or gs aaa orb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ror add sbb cmp push jecxz fldl dec cld xor add xchg std cmp fisub in jae je pushf and or loopne test sbb mov mov leave test (bad) jecxz sbb jl inc pop fistl ficompl cmpsl dec cli icebp and or add dec shrb sbb add xchg out rcr inc xchg fidivl push mov mov lock leave rcr xchg xchg jbe data16 and dec lahf xchg gs outsl push pop dec push out xchg sahf dec pop pop cmp jmp repnz adc mov ss test cmp mov int3 inc mov adc outsb xlat pushf int jecxz ret pushf int cmpsb (bad) dec mov (bad) sub fsubl jno pop mov sbb pop pop (bad) mov sub data16 sbb mov cmpsb and dec sahf mov insb xchg pop cmp in ljmp ret cmp sbb xchg fildll dec orl out lret aad loop adc mov sbb (bad) lock (bad) push stos mov mov jle fadds mov cltd jnp cld mov int3 xor repnz cwtl inc fwait jp gs imul adc int3 ret test inc imul std dec cwtl adc fmull xchg and mov and cwtl mov inc outsl add ds and mov fiadd lea adc xor jge cmp pop mov add outsb jge cltd js jnp das pop jno mov ss inc bound popl xchg (bad) sub popf sub push xchg aas and mov mov repz js test push cmp repnz in cmp in fnsave leave jno popa ss sbb das and xchg xchg insb enter pop fdivrl jno rcr sub xlat inc or sahf mov or jnp scas lods xor adc jecxz scas mov rep repnz dec clc xor stos cmp pop mov subl push loope adc and gs sub std sub nop mov sahf xor dec rclb outsl enter and jnp leave loopne cwtl clc mov adc es (bad) repz pop cmp out mov inc scas mov mov cltd sbb mov push sahf jnp mov push jp ror xor pop sbb and xor mov cwtl in cmpsl xchg lcall inc sub mov lcall aas lods int3 into out cs and pop orb lret (bad) loopne (bad) mov cmpsl popa and xchg rcr out xchg movsb mov push sqrtps jo pop out mov outsb add inc pop ret xor mov pop dec and arpl xorl push or sbb inc sbb sub in test sbb xorl cmpsl andl and jle mov mov outsb cmp jl cmpsb dec or imul xchg fimull inc dec inc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test stos fwait test push adc stos das dec push gs mov cmpsb daa pop adc or cmp cmp in adc jg data16 (bad) or js popa mov in xchg sbb cmp mov imul icebp test test cmp adcl int3 xchg cmp inc scas mov sub lret pop xchg popf ds std push je ret (bad) pop xor sbb adc xchg loope cwtl sbb mov dec mov add outsl scas (bad) and popf sti mov das cld sub ss fs bound and sar imul enter andl out push xor and xor lods bound rorl xchg and xor jo out add dec mov mov pushf jo call sub xorl mov xchg mov inc jp mov pop push es in insb sub pushf fnsave sub aad gs repnz xchg mov outsl cmpsb sarl out mov mov out mov das lret inc les icebp cmc fnstenv arpl mov mov mov push dec jae or ljmp xchg insl aad lea xor (bad) pop push mov jp scas fistl and fisub popa add ret push sbb nop mov mov pop mov mov mov sub mov xor push not jns insl movsb sub ja insb sbb cld imul cmp ret mov adc dec inc cld mov lods rorb jnp nop pop shrl aaa dec and xor and addr16 jb ficom into stos adc aam cld pop stos enter int pusha push stc inc fisttpl movsl xor iret dec mov mov insl mov add push adc aam in addr16 sub stc in sete jmp adc or add sbb mov push lea push push dec push inc adc clts mov and bound add xchg jmp hlt mov loopne and popf push push in jo mov test sbb and jmp push aaa cld movsb mov lret cs repz or dec rcr arpl dec out imul jmp out dec push cld jg clc mov or in inc xchg test cmp cmp pop dec fwait mov push adc push mov xchg test jns push sbb xchg push movsb mov imul popa cmpsl push pop rolb (bad) and mov xchg shr out loopne into rorb xor mov xchg bound aam cmp ja sbb popf inc push push push xchg jle movsl popf loopne das arpl aam mov adcl loope fidivrl bound jne push dec aas and scas fmuls movl loopne fdivr add xor ja sub push std sub mov inc rorl adc shrl adc inc js sahf or xor out xor cld into sub (bad) adc out loop ds jne push sbb loope and fs jg sub into out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg pusha lret dec test ljmp sbb xchg aaa push pop call sub (bad) cmc mov adc mov (bad) ret in mov jae cmp or arpl lock or sub mov lods loop popa int3 dec lock mov jp mov xchg and jno stos scas or lea mov inc and outsl xchg and leave inc mov add std adc das push hlt xchg push jle mov push fistpll (bad) dec fsubs adc push lcall test xchg shl lods mov je je mov xlat inc xchg mov pop pop loop mov mov clc xor mov cmpsb sbb adc push inc repnz int les adc mov stc push test notl in xor cmp and pop xchg jae aaa or scas jb repnz xchg pop cmp into xchg cmp outsb xor cmp adc inc in sub (bad) in arpl add add shlb flds loop add jne add (bad) mov and dec fs jecxz xor cmp hlt (bad) aad stos rol ljmp push inc ret out fsubl in xchg repz push lahf insl push subb sbb roll add (bad) xor (bad) pop loopne rcrl lock lret or jmp icebp cs fsts pop (bad) xor adc and inc add mov push lods add xor lds sbb mov pop mov or mov inc inc sbb push mov mov pop jns popa rclb repz mov pop cld testl adc dec ds mov ret ljmp inc mov xchg and adc lock jb arpl cltd dec cmc dec pushf fstps add cltd inc cmc fldcw mov pop sarb ja push stos xchg pushl inc inc pop dec pop add and iret mov adc xor inc std jecxz (bad) or movsb addr16 imul sub xchg (bad) mov jnp lea adc mov adc mov test insb sub sbb popa (bad) in xchg adcl loopne push push outsb mov cmpsb lret scas std int3 sbb scas lret xchg pop mov loop ja sub scas imul into mov lret loope arpl lcall xor add jb fdivr imul ret ret push fldl jb push repz dec mov std jne cmpsl ret insl pop jno xchg rorb add jns mov fstl push mov imul movsl and inc inc stos add pop mov stos popa out cmp jge in jae or addr16 pop gs fcom pop jns dec popf mov add (bad) stos mov mov or mov daa int3 adc dec aad and sbb cmp sti icebp nop movsb in cmp sbb mov xor cmpsb mov cwtl or les cmp mov std das test bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov xchg sbb dec jl je jns (bad) pop inc fcmovnbe mov lods adc cmp xchg call ds fnsave xchg inc mov cmp fimull pop dec outsl in jb mov mov push (bad) popa xor mov lahf sbb mov inc ficompl leave fcom (bad) jnp jp push cmpsb bnd call dec test aam daa mull loope lea fdiv xchg fcomps or pop fwait cmp xchg jae cmp jmp jecxz insb add mov jmp aad cmp fisub mov sub fsubs cli mov sbb ficom loop fdivrl mul jae push xchg inc sub dec add je lods push xor orl lahf or into stos cwtl push xchg cmpsb outsl or in mov fadd (bad) test pop dec cmp xchg pop sbb rclb addb xor mov push cltd adc or adc or unpckhps insb out mov dec in push popa jecxz (bad) mov xchg (bad) mov jns jae rclb add dec fidivrl out cs adc jge adc jno add arpl aad and or inc or cmc or xchg sbb lea mov mov sbb (bad) std icebp les mov mov movsb cmp xchg (bad) lods je dec les out and push les sbb aaa icebp pop pop cld (bad) jmp pop test es fbld push test shl mov pushf and mov leave sti ret cld xor lods aas cwtl push mov rcl and daa cmp imul dec push ss aaa xchg xchg add or adc lock inc jecxz sbb sub or repz add xchg scas fdiv xor inc fmul dec push ret loope sbb jmp pop cmp scas aas jno aaa loopne lahf mov rcl jb mov xchg js cmpsb stc mov ljmp xchg (bad) fmuls je je enter lock or test adc stos sbb adc adc sub mov sti jbe clc jp enter xchg xor out pusha sbb xchg ret push imul and jne sbbl pushf loop pop sub lahf outsb stos jg mov rorl in out int mov arpl (bad) mov sbb outsl data16 sbb scas push xorl mov mov ljmp push mov push roll mov popf in adc stc or pushf inc xor sub xchg hlt repz push movsb cs out iret fiadd mov cwtl loop pop sbb mov movsb fcoml test jecxz inc adc cs mov gs xchg cmp cmp out pushf fstps pushl and movsl dec push in lds mov aad inc not into jp fdivr loopne mov inc dec push mov inc lds fldenv sub clc leave pop jle and ljmp rorl inc sbb (bad) ds push imull pop xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret sbbb add pop rcrl push lds ljmp sbb aad sar sub aad leave mov ficomp push ss imul sub loop scas loop sbb dec fucomi test pushf andl fisttp inc or fs xlat data16 nop sbb gs test adc (bad) inc insb inc mov jecxz push arpl js pushf daa aaa test jae sub movsb mov xor or test inc repnz xor xlat jne push jg xchg add adc ljmp movsl cwtl (bad) stos dec ret ficompl lret outsb xchg ljmp jecxz popl popf and bound inc cwtl jo and into arpl out clc mov jecxz pusha sbb mov scas inc add mov mov in inc sbb cmp or stos ret inc mov jbe adc orb (bad) aas and xchg dec xchg (bad) outsl xchg push xor mov ljmp addr16 push mov and (bad) outsl insl leave cmp xor lods mov sbb push or fnstcw lods std and push stos (bad) pop mov cs adc mov imul test arpl pop lret js sub in (bad) add cmp cmpl adc cli inc rcrl adc mov movsl fiaddl push loope dec je sub push aaa push adc sbb and jge arpl lods inc mov pop pop mov pop adc lret xor mull in pop shll jns mov and mov push cmp push mov out add xor lret mov dec push hlt sbb rclb sbb xor mov sub inc stos jnp cmp std push dec sbb and cltd fs jg rorl sbb iret clc pop lret stos ret pop pop lods dec jnp or (bad) push sub sbb xor cli cli cld rolb rcll adc add and adc mov movhps jmp jnp cmpsl mov pop call lcall push mov jb (bad) repz xchg xchg jns push aad lcall daa cmp std adc dec int jns ljmp inc cmpsl jle movsl insb sahf scas dec leave arpl inc icebp cltd lods cli aaa jg aaa mov stos repnz fdivrl lret dec jmp pop sbb iret inc sub jl adc and and clc sbbl stc ficom ss jno ret insb outsb fsubp sbb dec push cltd ds sbb lods pop jge stc call dec adc shlb mov (bad) lret push int jae out push lods dec mov jl push add ljmp outsb fsubs mov push dec mov pop outsb popf xor push pop mov mov mov cs push mov enter fnstcw ds jl ret sbb stos or sarb sbb xchg sbb mov arpl sub and (bad) jnp dec insb push cmp movsb push sbb ljmp cli pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl repnz adc xchg icebp dec jl jg pop jne add pusha scas xchg loop mov pop aaa test mov repnz mov mov mov jecxz (bad) cmc xchg push jne mov push jmp idivb pop jb sub loopne enter out nop lods outsb xor test hlt dec dec fsubl insl pop fadds pusha inc dec cmc jbe ss push sub mov es add cmpsl std inc xor push iret mov std cmpb cmp ljmp adc daa dec movb sub iret adc or xchg outsl mov dec push jmp imul (bad) and jle mov add rclb sti incb in (bad) and xchg adc lahf pop add call jecxz sbb movl mov orl xchg adc imul imul movsb dec jbe,pn fs xor sbb add cmpsb imul mov hlt outsb stc mov gs pop pop sbb adc jae adcb mov inc sbb fstl loope xlat bound cmc push pop sbb rcrb push inc dec jl mov pop movsl push es mov das sub jge into sub pop imul dec mov (bad) icebp cmp mov sbb sub je movl into stos inc addr16 pop jg pop push cmp pop (bad) int sbb lret mov xchg andb sub das and mov add dec pop ffreep scas xor je cmp out adc jmp stos or mov ret jmp adc fcoml fnsave jo push js popa lds dec push or pop cli flds mov xchg sub les cmp hlt scas (bad) pushf inc dec imul mov hlt out rorb daa add add and xchg rcrl popf jecxz lahf xadd jmp aam test adc aad mov xor inc inc (bad) icebp mov fsub jle jne or pop out js sbbb pop push pop test js push inc xchg ljmp sahf test fstpt pop adc dec flds and ja cmc addr16 add rclb pop jl and inc jge push xchg test outsl fcmovne dec scas addr16 xor lret xlat iret jp lods pop gs sarb (bad) lret mov add cmp sub pop dec repz clc mov sbb (bad) in sti ja ficom push dec mov movsl fdivr cld sbb mov pop or xchg scas push xchg jae mov test pop mov add mov dec xchg fstps ja or imul jge cmp inc std push or test xchg imul lahf sar test xor xchg and jmp arpl cmp lret adc lock jp mov repnz sahf jg dec jo push rolb je (bad) mov mov (bad) pop bound jno mov cmc insl mov cmp mov ret dec mov int3 clc push ret cmc jnp jb push scas mov int3 xchg cmp imul jb pavgb (bad) fimul pop lret lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge xchg push sbb rcrl add pop sti lock stos sbb adc cmpb aam mov out add xorl sbb sub sub adc fcomip jl adc mov pop lahf test dec xchg mov (bad) ljmp arpl dec mov adc adc stos (bad) adc es jl sub cs loopne or movl out sub mov and mov xchg lret adc ss cmp adc loope mov lods xor pushf sbb int cld inc adc sub adc inc fldt gs and xchg pop xchg lahf xor iret ds push add inc jb cmc push or mov out stos add jo in cmp test mov or js ret pop inc pushf push addr16 out dec insl pushf sbb inc push cmc pop push out sbb cltd mov fs loop pusha push cmpsl rclb les adc in imul loopne lds pop and hlt dec (bad) out pop dec movsl push fwait push pop ljmp in lds stos or xor (bad) jge les adc cli call pop inc xchg mov daa xor div shll pop frstor cmp outsb js mov mov jno decb lds mov aas arpl add dec in mov lea pop cld sahf dec int je sbb (bad) rcrb lock inc fistl or jp (bad) sbb cmpsl mov mov sub test mov imul pop add xor mov jg lods cmp pop int3 pop xchg or sbb xchg and push (bad) jl mov push sbb loopne rcll out xchg push mov test jnp inc in es mov dec mov rcll test loop cmpsb gs add test add and fidivrl scas (bad) xor add add fsts jo push outsl fildl shr inc mov cmp mov les aas sbb mov xchg and mov or stos dec movsl cmp cmp mov cmp adc jmp ljmp aaa fildl loop xchg push cmp mov out jge adc add js lods push push mov jnp in push insl mov and xor adc jo iret mov add cs or aaa adc lock movsb int (bad) jae hlt push fisttpll jp aam pop push sbb and rcr and cmp inc inc lret jb or xor xchg cmc aad in decl mov out icebp xchg cwtl pop ja test sub sbb scas sti xchg mov (bad) inc dec mov leave movsl rorb xchg imul pusha mov mov fisttp cmp bound pavgw popa icebp (bad) stc and stos pop pop and add sbb dec adc sub xor out popf out ljmp inc shrl int3 add loop and lret je adc pop add mov cmp ret cwtl or in sub popf sbb xlat push mov add jne orb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp mov mov jb sbb into sarl insb popa xor sbb xchg push inc (bad) push or arpl mov rolb dec in adc pop mov and or rolb mov out ds leave arpl (bad) mov leave jbe icebp (bad) cltd push lods stos andl movsb push inc test rol jb mov fsubl std cmp inc push mov adc add sti cmp jp pushaw ret and hlt std jnp sub push jmp add add pop mov mov (bad) sti push sti and fxch in cs lock mov out fild les cmp cmp or loop lds pop imul stos fldcw dec lods or lock cs in fbstp pop sub inc add stos cs test dec (bad) xchg js test js mov (bad) sbb les les push xchg cwtl adc cmp arpl jmp xchg fistl insl cwtl cmp xchg imul repnz andl imul jecxz push jge dec cwtl lods jo flds sub add jecxz popf mov xor loopne cmpsb jge pop jbe mov pop leave divb push icebp lods mov ds lahf (bad) mov out mov xlat inc xor push pop shll mov in lods sub mov inc or or cmpsb dec stos sti mov in in dec pop sahf mov (bad) push jl mov in (bad) mov jp sahf lret inc push pop jnp aam addr16 lds aam mov add xchg in icebp mov sub js mov in pop test and (bad) gs lock aaa adc dec xor sub and xchg xor inc jg daa enter inc push mov mov ret lds imul pop int outsl mov int3 lds scas dec movsl outsl sbb push jns cmp (bad) mov jle xchg inc shr and mov fwait pop inc or (bad) and ret xlat clc mov popf and (bad) xlat lods imul jae cmc je fsubp sbb jo mov xchg fidivl outsb in (bad) test xchg adc sbb adc shrl and aam sub and mov mov mov hlt fwait nop pop fbstp movzwl mov add xor push fldcw rclb or pop and fs cwtl hlt imul ds add imul mov fld sbb inc scas cmp xor das in mov daa push push inc sub jmp add insl jb xchg mov mov xchg and loope push imul movsl mov jns lea icebp mov adc lret push adc mov addr16 loop jl sub movsb xor sbb shrl cmp stos inc jp mov (bad) push and test mov xor cmp push push or jecxz out push insb cmpsl jmp mov inc push push lea out adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) iret test into push mov mov push imul mov shll mov or inc push loop cmp xor jbe gs pop adc adc cltd mov xchg aad inc (bad) jmp in stos add ret ljmp fdiv popa pushf lahf mov test adc inc pop mov sbb xchg mov (bad) (bad) xchg xchg push or test push mov mov xchg jne js dec fsubs mov lea (bad) jno sti xor and movsb inc outsl (bad) mov sbb mov pop fsubs lea nop sahf mov and mov pusha xchg aad adc xlat mov mov mov subl insb fsubs or mov es mov (bad) jge push dec add mov or (bad) xchg movsb les scas pop mov ret jb add fwait push arpl adc repz bound sahf fnsave imul xor cmp fisttp lahf push inc ret clc les lds mov push mov xchg nop lods fsubr andl scas hlt bswap xor dec jle repnz jnp data16 cwtl repz jp dec or fldz cmp lea nop dec or inc sti inc or lods cmp and cs jnp inc test push and in lea insl mov (bad) sub insb cmp gs ds fwait add out cwtl xor jnp repz pop stos insl xchg test lods adc or push out mov or cld adc mov sbb (bad) sub mov pop popf sbb or popf iret push aad dec pop cltd shrb rorb (bad) in out jmp push cmp imul aaa xchg fdiv xchg fwait push pusha (bad) cmc xor repz lahf out add add jg sbb int dec into call jo aas stos mov and xor fistl aad push or inc mov push in pop movsb in (bad) ret jne rcl pop les call iret cmp rorb inc xor cltd or mov fmuls mov outsl cwtl rol (bad) mov imul mov adc repz dec push push xchg sbb jns or subl xor rcll mov xor jg push popa cmp fnsave or and call cmp rorl iret stos enter dec push push movsl arpl in jmp loopne mov and push pop jnp cmp mov push cli out bound pop pushl and aaa jo nop push aaa (bad) call test pop adc inc mov mov outsb repnz outsb mov andb and push cmc loopne rorb mov sub int and std push push sbb daa jge xchg repnz jb popf xchg (bad) in xchg xchg clc inc xchg and mov es lods bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge adc adc push sub pop sub push enter mov mov xchg lods loopne mov and xor pushf lret das insl adc sbbb leave lret mov pop imulb ret mov ret loope outsl push dec push je pop dec (bad) in mov orl push xchg fdivr (bad) mov jg (bad) jns inc pop imul mov mov out lret (bad) int3 mov ljmp lock out xor decl shl repnz repz cwtl imul sbb mov mov jnp aas sub sbbb xchg sub insl adc rorb (bad) stc xor lcall repnz aaa jb mov inc xchg pushf mov sti pop jmp rolb shrl sub std mov xor ret mov mov mov push mov fidivrl jg xchg jbe fs mov add dec or fldenv fcoms sarl pop jmp pop cmp outsb cld jg lret inc pop test push std das sub mov xor (bad) iret pop dec adc push mov call dec pushf sub push ja (bad) mov nop movsl notb mov or andl pusha pop aaa jp in inc ljmp sbb movsb mov or fisttp out rorb pop mov scas xchg mov fcmovb inc mov and lods pop adc ret mov adc jb mov ja leave push test push movsl gs pushf icebp inc jbe xor shrl cmp add aad stos xchg icebp mov add aam in jp hlt ficompl aam mov fcoml cmp mov nop or ss out jb mov in pop push or dec sub pop jbe stos les sbb jbe or or xor xchg lock and mov xor adc insl mov in es add dec mov and jge in inc or adc in imul adc (bad) lret lcall shrl test cli loope popf and mov push pushf dec mov mov divl iret add je or mov and fbstp mov sbb mov mov push jae push cmc dec pop inc fcmovnu scas (bad) pop and js test mov add ds xchg sbb sbb pushfw xor notl paddq (bad) ficoml (bad) hlt out jp and mov dec mov adc or xlat (bad) and cmp leave push cmp pop adc cmp pop aaa out push mov leave ljmp jns mov pop sbb ret xchg stos adc das incb adc dec sub imul loope or xchg pusha dec pop pop test dec leave gs cmpsl cmp fdivs push adc loope push mov jg mov pushf or test xor xor pop adc rep jmp fnstcw push cmpsl xor jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl idivl pop fwait test shl jle mov data16 imul push popf push shrl cwtl cmp and outsl or lcall fs sbb inc mov add into aas shrb xor (bad) mov frstor mov push and dec mov mov jne cli xchg ret jno ret adc dec push and ds pop mov cld test jge cmp xchg ljmp mov fcmovbe add fild inc rol mov loopne pop pop outsl test push jb popf push mov movsl dec cmpsb lock jns into xor sbb dec mov push xchg add inc mov jle push mov stos pop fistpl ja lock jl adc fidiv (bad) push lret dec loopne add (bad) jne sbb test sti pop ja arpl test mul xor push mov test xchg xor (bad) inc add and mov or mov stos das cmp fsubs pop xchg lret mulb mov cmpsl xchg (bad) and int mov inc push add jge out mov dec mov xchg (bad) dec dec dec shrb ret or insb xor xchg shrl test inc sub xchg pop xchg sub pop rorb push mov adc or lods call push sbbl enter lea mov testl pop sub sbb rcrl out or cltd cld addr16 fmuls push (bad) (bad) push push ss lahf cld nop nop inc movsb mov sub xor loopne cmp xor sub outsb jl outsl add sbb jns and sbb pop scas fsubr mov in jno hlt sbb fs xchg add add shr xor dec fs dec cmp test daa out or or mov push scas xor int3 xor ficoml pop dec push xchg sbb leave mov and pop mov push mov fsubr sbb daa sub and xchg cmp xchg xchg arpl cmp cmp jl and add scas arpl movsl mov movsb inc or pop mov sti push inc pop shrl xchg or add xor call scas addb mov dec mov testb sbb call dec inc enter mov jb cltd cmpsl fcmove enter in loopne sbb fildl pmulhw pop jg xchg jmp mov pushf cmp inc jns out mov jge xchg mov sub jne into ljmp in mov insb or xchg sbb xchg es and add arpl xchg int3 xchg inc popf insl out leave pop add bound jmp inc imulb movsb mov mov jo mov fmull pop js decb pop int xlat mov repnz arpl (bad) ret (bad) mov imul gs iret jl mov imul pop test sbb cmpsb jmp andl (bad) je mov or ret pop fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov xchg pop std (bad) fdivr mov lds mov (bad) xor sbb pushl fwait and ja cmp inc or adc jb das (bad) lahf mov pop sub icebp movsbl lea stc cmp in fisttp lahf adc aam insb imul stos lret and or (bad) or imul and mov inc stc jno mov push inc xor push pop sti add cmp fist push push pop sarb adc inc jl xor ret mov loopne movsb pop pushf and popa adc ja mov dec xor cmpsl sub outsb pop pusha dec test push test push jb pop fidivr jge,pt sarb cmpsb pop lods sbb or or cmp sbb adc in (bad) jno (bad) pop mov (bad) lea or xor repnz xchg or repnz mov sub cmp add int push gs jns data16 out aad test ret in inc sub jge xchg in mov xchg push and pop insb fildl mov lcall int3 mov cmpsb popa out scas adc ficom cli or xchg lea outsl or cmp lret (bad) jns cmc mov mov nop dec popl fistpll cld inc adc and dec enter dec cmp data16 divl mov mov lods sti mov inc movsl cli or lods lods push lods push sub push jp test aas push roll inc xchg push or ljmp pop jne faddp push push rcr mov cmp scas inc (bad) lea ret je sbb test insb rcrb pop add pop mov into mov inc push dec inc mov rorb ret cmp pop pop xor aaa and arpl inc add xlat loope cli sarl (bad) scas fcmovnbe xlat jns jne sahf test fist sub inc dec dec xchg cmp xchg (bad) outsb repnz fild push stos inc icebp outsl jne lea out shrl fsub pushf mov dec divl jecxz xchg mov xchg out sbb stc in jne scas lods imul push popf dec mov mov xor xor in sbb mov mov xchg mov push pop icebp test sahf sbb loop mov fstl (bad) pop push pop jb pop dec nop adc lock iret cwtl cmp mov xchg push jl cmc xchg cmp ja push lds sub iret pop adc lret fimul xor inc sbb mov or daa jle pop add adc jns sbb insb pop ds movsl (bad) xor sbb stos (bad) pop das mov clc rcrl sub (bad) mov shr jl lock jg fmull inc mov mov test inc test and pop mov bound ja cwtl cs or adc adc xor sbb das stos bound ds sbb scas cltd sti and xlat xor pop push adc arpl jne inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc data16 cmc mov out (bad) outsl lods aam add out out aas cmp enter out mov stos mov dec adc out mov (bad) xor inc mov icebp xor sahf nop xchg mov and pop and ret fdivs sbb xorl jno leave adc dec call cli sub lds nop cmp sbb mov dec mov cmp adc cmp or outsl mov in jecxz pop inc nop push inc outsb ret test add jp out mov and jo fildl push insl insb sbb adc xchg movsb movsl cmp stos sub push addr16 dec in (bad) dec into scas (bad) sbb or sahf ja cmp mov mov jmp in (bad) cmp mov fisubrl sub (bad) xor insb or inc insl dec (bad) fisubl push push mov rcr shrb or lahf push push adc out inc or mov pop dec xchg mov push xor (bad) mov popa stc sbb mov mov adc es daa insb pop cmpsb mov and loope sub xor xor lcall pop test lcall adc fdivrs adc inc sbb (bad) pop inc or mov xchg add outsb enter (bad) leave dec dec scas incb je inc push pushf sbb popa notb aas out fs cltd mov sbb jg aaa pushf ds fwait inc xchg movsl test lret jl jno lea jne test test aaa mov pop decl mov push dec (bad) arpl ret data16 imul lldt insl out les xlat mov mov add adc call scas (bad) bnd push and cmc and mov or pop ret pop sub jle rcr sbb nop mov (bad) xor in loop aam (bad) jo or clc or ret test lea insl leave mov adc (bad) or das daa (bad) cmp push or adc xor lods adc xlat sbbl sbb mov jno ljmp mov shlb shr int addr16 loope in lods pusha in cmp fyl2xp1 popf sbb inc pop xchg mov mov inc and pop push sub into xchg adc loopne adc push inc xor inc jecxz outsl xchg sti repz and fldt or mov stos inc es test outsb out test sub popf add mov and push mov shrl or dec mov mov sub xor sub cltd pop fwait adc cmp fisttp dec add jo push aas mov hlt mov mov inc sbb jecxz xorl dec push adc addr16 sbb jp dec inc bound cmpsl and mov jle aas xchg js popa orl mul decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jmp jne and (bad) lahf and int dec dec adc or add sub (bad) jbe dec data16 cmp cwtl pushf adc adc int jmp (bad) sti loop inc mov mov mov pusha lret mov lret push sub push andl xchg rcr pop jo inc imul adcl addr16 or inc roll pop jo mov jno fcoms repz daa in (bad) jae rcl jp movsl add enter pop arpl adc cmp push (bad) imul in leave mov push mov fcoml sub fistl add cmp fidiv lahf lret xchg js jo cmp out xlat dec rcrb jo mov push or or pop or inc pusha push fucomip divb and mov sub sti inc mov mov xchg imul out cli sub sub mov sub scas pop xchg inc pop cmp addr16 inc mov aas mov fs popa jle sbb popf mov add fcomps mov xor pop mov ret pop and mov daa lods push outsl cmp and sub cmpsb inc jae add outsl pusha mov loope sahf iret mov int stc (bad) rcrb (bad) cmp xor inc sub jle pop mov stc xlat xor mov es xor imulb orl cmp inc add sbb icebp push sahf (bad) out sub and push xor adcb enter xchg xchg xor into inc jge sti or shrl push inc hlt push lcall xchg xchg js and fbld jp fidivl push cmp cmp adc (bad) sti jno add notb popa out in out push xchg mov mov repnz xor lret leave push cmpps xchg sbb ljmp ljmp mov mov test and sbb sbb in xor cmp xchg cld sar adc insb pop xchg lods ds daa aad fsubl push jg xlat stos repz call daa pushf movsl mov dec arpl iretw sbb sbb push leave sbb mov pop add cmpsl xor sub adc stc out push or or dec xor sbb adc lcall add fwait loop inc pop jae sub iret out out push pop stc pop ficom fsubr decl movsl and jo dec addl test dec dec jmp mov add inc dec stos sbb aad imul aaa in aad (bad) sahf xchg insl sarl sub inc das adc lods rorl stos pop dec cmp adc sahf cmpsb int push add dec dec pop mov mov data16 fadd aas int3 lea frstor aas cmc psubsw pop js lock mov dec sbb fwait ret sahf mov sub add and iret bound repnz das push fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov cmp push arpl js jecxz mov pop cld and les les xchg dec xor push ss mov push push jae popf mov or or cmc mov xchg fistp mov or or mov pop sbb xlat dec mov sbb lods dec daa bound enter pop and es sub mov cmpsb cmp mov arpl rorb popf insl xchg mov adc (bad) (bad) (bad) xor (bad) divl insb mov cltd popf imul sbb movsl dec mov out mov push push mov stos (bad) mov clc loope sbb std mov mov and mov mov adc sbb dec hlt in jg pop cmpsb dec aad adc lahf sbb jae cmp stos aad inc daa std ljmp push adc fsub sub rolb fs and stc xchg std fdivs mov repnz push mov sub flds and fsub leave add sub aaa xchg imul mov dec inc repnz test pop jns dec inc imul mov adc js jecxz add aad sub popf hlt pop arpl mov adc xor jmp or jl pop xor ret stos mov mov movsb jge push aad pop jno (bad) and cwtl mov (bad) call sbb adc sub leave xchg lea jg (bad) out jnp lock mov mov xchg es addr16 lahf fnstsw fnstsw mov push in lret xchg xorb sub xor lods mov xor jmp and inc fwait mov test shlb push daa inc imul nop lock and bound xchg (bad) xlat inc cmp push add xchg fistp jmp xchg clc xchg in stos ja add push sbb sub in and pop or inc lret popa inc xor push aad fdivs cmpsb jp inc outsl leave mov (bad) and cmpsl jmp push jo xchg xlat or dec insl mov es push inc xchg cmc leave movsl pop (bad) cmp and repz xchg mov in push cltd cli sbb dec stc leave pop inc arpl out jecxz dec ja inc stc ret int3 js loopne mov add inc jmp mov add les dec rcrb mov loop std fbstp mov insl mov mov into dec push sub lea xchg sub ss pop add outsl fmuls (bad) (bad) mov and fdivr in cltd dec adc dec jmp pop mov jae xor xchg nop and jne aam jl lock leave and clc (bad) and cmp sbb mov add inc mov jle out add das sbb mov test cmp mov mov jns icebp in cmp cld sti jbe or cltd adc stos push icebp int3 movsbl stos adc ret popa xor fisubl negb (bad) pop adc push aad adc xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cs and xchg lcall sbb cltd mov daa mov xor aad mov ss (bad) and mov out ljmp les sub repz adc ss cld pop mov repz insb sti jp daa xor cmpsb aam daa in sarl lea test jp (bad) std or pop sub push mov cmc dec mov pop sbb jge daa test push mov dec arpl leave scas test push pushl xchg out mov test cmpsb and cmp lods adc lea rcrl cltd xchg or loope and ret jns aad sbb push mov in es xlat scas int3 aam (bad) pop (bad) loope xchg sub or cmp sbbl mov jl push ficomp mov push mov pop and into movsl mov addr16 and push jbe mov in imul push clc lret pop jns cli push call sbb sti sbb into nop add dec aas adc mov fcomip imul test push cmp cmp lods mov ret lret push sub xchg cmc jg fdiv push push cmp sbb mov and sub (bad) cmp jo fidiv xorl fadds cli lods xchg nop xor push ds inc cmp aas jmp and incb sbb divl sbb push mov sub test ja fwait and or in push scas stos icebp jle jae mov fsubrp aam fdivr lock shll dec xor scas in mov repnz testb stc mov pop pop or repz test push aas stos pop addr16 mov sbb pushf jo pop pop shrb adc xchg jo orb mov ret insb out cmp sbb popf jmp pop movsb xchg repz pop (bad) or fs or (bad) repz rclb out aaa adc out adc outsl fsubr add inc pop dec add inc dec push inc shr xlat sarl out mov push jae pop leave in cli mov push outsl jmp and pop mov mov cmpsb jnp jno xor sarb mov adc mov push popa pop mov push and lods xlat test inc loope pop adc hlt fdivl ja stc (bad) insl sti xchg fldcw jne adc sahf mov (bad) cwtl mov inc sahf or testl test popf cmpsb or repnz flds and jb test cmp add pop (bad) mov insl lahf pop arpl gs stc fstpl jmp push bound push xchg sbb pusha dec pushf pushf ret mov inc mov mov mov das mov fwait or mov xchg popa pop ss out cltd sahf loopne dec push and int3 (bad) test adc inc jo dec sub (bad) les int leave xchg mov repz add lcall fdivs mov mov mov xor sar and mov (bad) pop faddl adc int3 xor enter orl notl inc mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aas dec cltd cltd push and repz and fnstcw lods push sbb subl dec lcall cli mov jo jmp sbb shl xor mov pop pop call (bad) lea clc data16 movsl dec lea imul outsb dec cltd ljmp iret andl jbe (bad) mov orl (bad) xor rolb (bad) pop sub shrb bswap sbb in dec (bad) iret test aad and es or mov sbb ja aam push arpl inc les pop pop xchg fdivr sbb sub ficomp out pop or fsubrl sbb sub cmp stos orl push push clc push xchg mov ljmp mov and mov xchg repz jg mov daa out xor mov enter sbb adc decw jae jo xchg pop js adc sahf or enter pop loopne stc jmp sbb inc mov into xchg xchg xchg inc fist jecxz rolb leave mov push sub mov insl add add lea mov (bad) adc mov aaa jnp sub mov cmp comiss fstps je pop in aam mov lock mov sub mov popf repnz adc in mov loop loopne movsb repnz (bad) std pop add add imul and adc lcall (bad) idiv mov sub mov lods push push dec in mov and leave cwtl cld push add popf cmp iret mov mov rcrl (bad) mov ss push sarl sti fs sub xor xchg movsl ret mov sbb es mov push pop lods push out sub repnz or mov or repz pop xor cmpsb (bad) dec loope mov fistpl pop out test insb icebp adc jne jge sub movsl inc pusha test xor lret sub push mov loope inc push xchg pop repz inc sbb movsb push mov mov push roll adc fs and jmp mov or jno pop mov push push scas xchg fldcw pop stos cwtl jno jecxz rcll cmp xor int push mov sti push push outsl mov mulb xor in not xchg cld push rcrb xor loope sbb orb or adc sbb dec sbb scas and jl inc xor pop xchg jne or sub mov jle test mov inc jno mov inc repz mov mov and stc gs pop inc jecxz das lret pop adc ficoml clc mov test mov sbb (bad) mov and fs mov mov mov inc imul push dec mov sub mov mov push mov sahf scas or popa pop imul cwtl inc jno mov cmp mov xchg test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall out fsubl mov cmp pop out cmp cmc bound std stc mov les lock (bad) out adc fild mov (bad) in jbe out jno mov ja xor mov pusha xor xor ss mov call scas sub daa add jp push mov sahf repz pop (bad) mov out jp in popa fbstp data16 cli mov cmp insl addr16 xchg sub ret mov push xchg pop lcall pop imul or add inc lods adc cmpsb mov aad sbb ljmp dec sub pop dec jns dec sarl push xchg mov sbb add ret mov into lock jg push add (bad) fistpl aas add in std imul icebp ficompl dec ja xlat scas ss aad adc insl jp add adc dec int3 mov xchg xchg dec aaa or jecxz and cmovp stos jle stos adc push or lds call fimul enter into mov inc and push pop xchg dec aad lcall push ret inc aas pop out in loope inc mov daa mov pop hlt inc cs cmp pop push das jmp xchg and into pop pop mov jecxz adc aam lods rcll or xchg xor les ss jb cmp (bad) push sub sub pop or out xchg xchg pop fisttpll adc bound xlat out pop push xor sbb pop jmp dec jle cmp inc cltd repnz stos stos out fbld mov lret add movsb xchg push jae mov mov and mov dec insb in cs pop stos stos mov xchg lcall lods test rorl ret lcall inc fwait popf mov jno sub dec int jp (bad) mov push jb push fucom insl daa sbb enter jno das push jnp sub cwtl test jno mov cs jp pusha insb pop cld xchg cli xchg int test mov cmp nop push cmova scas cs sbb into mov sub cmpsb enter cwtl mov ret cld cs inc (bad) dec pushf mov xchg jo cmp and mov mov stos outsb cmpsb jnp mov add and test in repz daa mov pop arpl pop xlat add xor nop add mov xor into push flds and mov fidiv andl sbb dec dec (bad) mov cmc rorl push push scas sahf cmc mov cs sub inc fs add xchg pop fild xchg dec mov js xor lcall mov scas xor cltd outsb pop inc cmp repz es jae xor lret or ds scas out enter clc push insb add mov (bad) fwait or test adc rclb lods rcr or pop mov stc imul aaa sub sub insl scas mov jp push sbb shll jbe mov sbb movsb and lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loope cmpsl mov test in lcall sub outsl aaa push outsl lcall call loop push adc pop pop loopne (bad) (bad) xor ss jbe sub sub cmp mov mov jbe xchg in sub xlat sbb mov or std sbb mov and mov mov mov ret xchg cmp dec inc push add ret outsb jp xchg push dec xchg push dec push mov into xor xchg fbld sub add xor shrl mov ljmp xor js mov ja mov and mov stos popf scas nop mov inc shlb cmp rclb stos sarl pop mov stos xchg stos lret mov cwtl les loopne shrb mov xchg fild loop or pop out pop in jp iret inc push mov mov fwait cmc inc aas inc dec xchg mov push cmp push xchg jae lods inc xlat je clc ret pop loop or enter mov cmpb in lods add iret mov jecxz xchg ret mov push push inc add sub js lea fucom xor xchg mov mov push cmp (bad) push adc push ror mov push cmpsl xchg push mov in enter mov inc push push dec stos out rol mov subb test or imul hlt push fcmovne xor xor pop sbbl cmc cmpsb inc fstpt rolb mov pop jecxz lock (bad) adcl mov cmc mov les movsl push xor test sbb nop shlb outsl fstps mov insl dec popa insl movsl flds mov outsb rclb cmp rcll xchg (bad) imul jmp xor imulb in lcall (bad) mov test lcall or (bad) idivl insl fdivrs mov inc jmp jle pop (bad) jmp sarl mov add insl dec xchg push pop mov cmpl dec cmpsl and loope or jl ds inc mov adc mov movsl jge xchg sbb inc sub jp xchg scas cmp hlt lods push ljmp dec jmp cmp push sbb (bad) push cld xchg xchg jae push inc or and sbb dec call mov or sub test xchg bound adc iret enter pushf xchg xchg repnz jp decb into fist push (bad) jecxz arpl xchg or dec ljmp in in cs mov push test sub mov mov sbb in xchg pop adc mov mov sarl fildll cmp xor jmp lods mov jecxz arpl jno push dec sbb pop add mov jne out or cmp mov call fcmovb insl push lcall sub jns (bad) mov out and out adc pop fstl mov ja dec mov xchg adc adc xchg movsb loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas xor and dec push rolb test mov adc sar nop mov pop test add and sti aaa lahf cmp arpl lret xchg xchg adc test out enter repz push std ds scas in fidivl push mov fs jecxz mov insb hlt jmpw ret cltd (bad) out push (bad) add in ds adc into sbb popa dec stos mov lock jae push mov inc into mov imul xchg sbb sbb mov sbb mull add pop std ljmp cmp imul push cmc imul mov lcall pop mov mov outsb in dec movsl dec dec mov xchg aam (bad) sbb sbb lea insb out mov pminub cmpsb (bad) sub (bad) push inc es jl or out pusha mov sub push fdivl sbb push movsl ret pop scas clc jbe jno cltd dec mov and push pusha into xchg adc (bad) pop clc jp pop test push (bad) adc enter jnp jg mov mov xchg mov push es pop out mov fs cmpl add fnstenv xchg out (bad) push pop inc test insl jmp fcoml pushf sub pop hlt hlt pop pop leave test or mov fwait rorl lods mov arpl cmovs xor xor mov divb pushf ds push adc jnp add pop mov or cmc sub ljmp sbb push lea sbb push repnz mov data16 and mov loopne (bad) (bad) iret jge (bad) mov push mov stos imul in jle pop adc cmp mov loope mov nop xor ret inc roll loope xchg mov inc test cld gs aam mov aad sti imull rclb das or sub out lock ret xor lods sub outsl jns sbb fisttp dec add xchg es pop notl push shlb sbb mov mov ja ret aam repz sti addr16 push cmp add cmpsl nop notl sbb ret pop (bad) out or mov sti loop mov aaa fisub mov shr dec jmp js hlt lret xor movsl dec push int repnz pop mov hlt aaa rcrl jmp mov aas stos jl cltd xor mov push xchg outsl sub cli (bad) xchg rcll rorb push pop subb popa pop lods imul pop add cli dec push out adc test rcl and push push or in mov stc in jp push push xchg cmp test in lods mov push stc cmpsb xchg loop inc cltd and add aaa es mov mov roll and loopne push pop jo fs mov iret lock nop (bad) mov test cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov pushf sbb dec push xor icebp daa xor adc adc dec mov test jne adc sbb sbb imul inc inc xor cmpsb clc insb lret sub lds jbe daa mov sbb push loope mov push fsubs loope scas ss stc repnz sbbb (bad) leave mov inc aam negl inc aas fs push mov mov push hlt xchg pop loope inc mov fidivl cmpsl and lock lret dec xor and pop add cltd icebp dec ljmp clc xchg (bad) xor inc stos and cmp sbbl scas mov rcrb xor push jb int and sbb mov adc inc or adc loop jo xor xchg addr16 dec inc imul push inc mov idiv xor adc cmp pop xchg (bad) sti mov add jmp inc stc xor dec es jns mov (bad) xor mov fmull gs stos xchg sbb jle add or nop (bad) (bad) loop clc xchg fs (bad) jae cld movsb dec es cs cmpsb insl or pop dec cmp (bad) and dec loope pop (bad) aas xchg dec jecxz sbb sub jo insb xchg and sbb xor (bad) mov loope adc aaa pusha push mov and inc rorl cld ds lock out std fsubrl mov inc lret insb lea push gs dec push je out dec in xor nop jge jae pushf arpl (bad) lret jb dec cmp lret test dec (bad) cmp jae add push in sbb cmovae jae out cwtl add add call ret mov pop push icebp shrl lods jecxz (bad) repz lcall outsl (bad) jne (bad) mov or or and mov jp lret sub adc inc sbb (bad) movsb xchg push fs popf clc fildll icebp pop xor ss add test je xor and push mov call jno dec cld lods into or pop mull (bad) cmp and pop mov clc push ret jg popa pop pop negl push (bad) jo jns sti mov dec addr16 add std negl lea sub adc dec in jno xlat aaa push push add and daa rorl dec imul cld mov dec inc inc push cwtl xchg les sbb ljmp mov xchg dec lock test mov mov test rol sahf cmpsl push andl or leave jnp dec loop jo xlat pop mov xor pop ja leave pop xchg cmp adc sub mov es mov cmpsl jg mov enter fsubrs repnz push or or icebp push pop lret fxch mov cmp push sub movsb movsb mov push out push stc insb dec (bad) les xchg cltd adc stc sbb pop or (bad) clc xchg fisttpll xor sbb jecxz out xchg push (bad) seto jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp bound sub pushf inc ss xor dec in jmp sub (bad) jecxz (bad) jmp popf cmpsl sub pop pop pop shrl jb and fwait ja xchg adc movsl call pop lahf dec adc mov sub cmp and and sbb xchg js es loopne push jl add aad loop jg cmp add pop xchg or dec js sub fstl in add in rcll lods jp lods movsl pop sbb fidivr mov sub xor push cmpsb ret jl jg ja cmpsb stc sub mov pop out imul (bad) faddp movsl push jl cld sbb ss aas daa sub (bad) jo pop mov fsubl sahf int3 ds shr dec cltd push aad fnstsw xchg adc cmp jb dec mov mov add inc or xor int or int3 adcl insb mov data16 xor out andl rclb xchg mov mov nop pop pop mov ja (bad) pop shll in mov xor push pop loopne mov mov (bad) shll cmpsb or add enter pop sub ret pop mov imul lods adc fst test push adc inc icebp or imul or sub add cld sti xor cmp or sub jnp lahf loop jo fs sti fdivrp cltd ret dec (bad) and xlat ror in stos test stos aad sbb insl leave out and ret cmpsl mov ficom and add iret pusha shll push or and sub bound mov fadds jb and cltd std jmp js xchg (bad) outsb cmpl mov jg aad fsubr std push sbbb stc or das push orl jg leave xchg push mov or das sub fmul dec in andl lahf xor lock insl xor rorb lods rcrl sub int cmp mov je je mov jp,pn gs aad or push (bad) imul cld jge aas push lock negl add leave cmp int3 adc sbb lss jne inc jg cs mov push or mov daa movsl and rcr jnp push inc mov repnz or lea jb stc inc cmp adc jae imul push popf movsb movsl hlt mov pandn inc out ret call ja mov inc std pop dec icebp or push (bad) repnz cld cmp imul cmp sbb inc aas mov xor sbb or mov xor addr16 sbb push repnz ficompl dec adc in sub test mov daa lret lds lret jmp pop fwait xchg push (bad) xor (bad) or bound and sub xchg sti dec call push jno xchg jb test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns out addr16 cmpsb hlt and stos (bad) loopne xchg fucomi push jmp mov stos push pop and lods dec adc xor stc sbb lahf out pop mov sub jle or sbb fcmove rcrb insl and dec pop inc out enter push push sub rorl and mov mov adc and insb add addb adc pop xorl fwait mov popf in push jns add sti push cmp repnz fstps jecxz rclb bound movsb mov push cmpsl cmp or push lahf mov push mov jp dec sbb or and sbb ljmp out shld out (bad) lds mov das icebp imul jl cmp lret dec outsl add sub xchg lea add pop aad pop inc and sbb push cltd or jp pop or lds insl clc xor cmp (bad) int3 stos inc dec and sbb mov push (bad) xchg movsl push in lods jo mov xor push scas sub mov and adc adc sub adc and sti cmp cli sbb inc loope inc fwait mov in stc bound push push cmpsl xchg lock test push fsts aad pop jp mov pop jge cmp fldpi push xchg cld pop popa push cli sbb pop popa (bad) out in pop lret ss sbb int3 mov je xchg xor xlat jle cmp xchg pop es andb xchg jnp jmp cmp sbb aam lahf mov jae shlb mov or imul adc addr16 sbb pop jmp sbb dec push mov inc adc push or out or je cs pop pop push or inc inc cmp push into imul dec lock mov hlt sbb xchg aad mov pop xchg sub mov push iret imul cld mov pop pop jno out dec shl add pop sbb and mov sub repnz ja clc (bad) xor sbb stc dec or mov sub push pop (bad) repz lret in adc pop mov out (bad) jo rcll inc cwtl ds sub (bad) mov fs fstl sub loop sbb sahf addr16 or adc cmp push cltd mov out invd adcb xor and daa repnz in mov adc pop xlat mov sbb int3 jp outsb mov pop out inc mov cmp fisttpl loop fs xchg mov nop pop repz icebp adc icebp mov notb movlps (bad) xor or lods pop xor jb cs push call xor sub pop repz jmp mov test cmp push js inc aaa jge aam fcoms inc fcomps lret divps pop mov jmp loope pop inc loopne aaa add xchg rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp lahf loopne or arpl xchg push jl sub inc in add sub imul adc insl pop movsb xchg aaa ds xor pushf inc mov mov inc cmpsb (bad) mov add out or sbb call dec fildll cmp loopne inc iret adc push aaa mov sub and push outsl push cmpsl xorb hlt notl cli mov xor push push loop pusha mov es scas subl or jecxz aaa out mov sbb mov mov jae xorl adc pop (bad) xor mov sub pop mov repz pop inc repnz mov cmp xchg sbb sbb pop xchg scas imul add mov or sub imul pop pop or inc xchg jmp mov hlt data16 loope outsl test lods push daa aas js ss cs and pop cmpsb test mov imul and push sub push pop cmpsl xor mov enter xchg pop xor pusha dec mov aad lahf fadds cmp adc (bad) push testb fcoms mov movsb sbb call int3 mov pop dec and jae pop stos mov xchg imul rcrl push pop fisttp movsl cwtl movsl pop fs (bad) pop jmp rolb push add jmp pusha dec push lods add outsb ret cmp pop and nop dec jge adc movsl scas fsubl sti aam cmp xor pop in mov pop cmp adc push add cmp mov add mov test movsb jbe imul mov stos and or jl bound ljmp adc pusha hlt cwtl pop pop int jnp je cltd push lods rcll mov stc xchg lock mov lock push cld fwait add daa jecxz cltd sub out jns,pn call addl dec cltd pop outsb pop es fimul test adc xchg test pushf pop rorl jge fwait cmp je mov add push pop xchg dec cmpsb dec insl cmp or add test xor movsb add (bad) imul pop sub xchg fsubr mov xchg fs cmp lock xchg (bad) jp xor in sub mov ljmp test out jae adc jae and (bad) add xchg lcall cmp mov fxch mov cmp xor xor lcall sahf mov (bad) jbe xchg lods xchg lds mov insb push xchg jmp popa mov xor adc pop add (bad) and push out shlb adc insb out daa sbb sbb call lds xchg sahf mulb xor fsub pop gs adc mov in scas lods aam jns xchg test pop push dec addl dec sub loop cli jp cmp imul jle cmp ss pop fisttpl roll xchg push adc ret in imul (bad) mov fidivl fcompl mov lods xchg bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov fnstcw xchg cmp push (bad) repnz aas xchg fist push push rolb cmpsl lcall nop lret arpl mov push hlt pusha lahf or and enter cld fs loopne ja (bad) sbb inc ljmp xchg lods fiaddl push lahf mov jge xchg test ret pop scas repnz adc out ret mov push push rcrb xor daa add sub dec xchg xchg test dec dec and xor mov cwtl sub push sub in sub xchg leave push dec test (bad) dec or shrl cmp (bad) icebp pop dec loopne addr16 mov sbb pop pusha sub nop imul adc cmc add repz xchg pop or and mov out aad jbe (bad) mov addr16 rclb js scas sbb pop insb or sub lahf xchg dec inc repz cltd xor test add or fs dec (bad) imulb test dec pop push inc cwtl into lods (bad) stos mov mov add das jno mov icebp jge dec cmc (bad) (bad) je ret add pop outsb adc addr16 xlat movsl fcompl cmpsl imul mov jae or fnop (bad) lahf jb inc add fildl sub repnz cs cmpsl imul movsb and dec imul (bad) mov mov fcomi out dec loopne dec mov dec add sbb or popf add or mov int or push dec ret and hlt js jmp mov mov mov jge shl lahf in dec (bad) mov adc pop repz push pop fsubs cwtl push leave inc dec movsb mov xchg push in jae test pop pop pshufw adc dec mov inc pop (bad) cmp cltd xor jo mov imul push xor xor xchg mov adc dec mov pop adc sbb fwait ret jae sbb rolb test stc ret push outsb push mov int3 jae add mov sbb mov in into int3 cs out ja fmuls pop dec test pop loop adc mov or inc je les dec lds add rorb push mov mov lret pop aas je lcall mov aad add push xchg jnp ljmp cld pushf jnp sbb xor das insb cmpl mov jne dec sbb stos popa cmp or xchg dec pop scas push mov add and jl aas xchg cmp add out add add xchg sbb call sahf mov lea mov jno mov aad mov mov rol leave ljmp scas push lods jno gs push movsb mov cmpsb cmp adc pop (bad) in repnz xor int (bad) mov in mov jno fcomip fisubl mov mov adc xchg mov aam ds cwtl stos (bad) push leave dec jbe outsl sahf dec inc fs sub fwait cmp dec pop dec jno xchg sbb mov pop daa and cs or jnp or imul sahf jae sbb mov pop push ja idivb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb mov insb sub sbb and mov scas cltd (bad) icebp fcoml sub xorl cmp push pusha pop (bad) fidivl in addr16 push fidivrl xor inc lods mov insl movsb ret cmc icebp in mov nop xchg adc inc out fcmovu icebp push out out sbbl lcall mov cltd jne gs xlat pop adc pop sahf mov xchg (bad) pop (bad) (bad) int3 sbb dec push hlt adc int3 push xchg inc shlb adc sbb inc (bad) cmpsb loop pop and aas cltd cmove out icebp adc dec cs mov mov pop xchg add xchg adc (bad) pop fs xchg inc mov dec pop xchg push cmpsb pop sbb mov iret xor js out push pop pop xchg das pop mov fcomps in out hlt add mov cmpsl sbb and mov add fwait lods jb jp daa jge dec (bad) mov repz or pop dec fiadd or pop (bad) push mov jnp out mov push and jg adc sbb mov pop ljmp sub lods frstor stos adc push pop arpl push sub cmp aam bound (bad) xchg xor dec push loope enter mov cmp dec loop xchg mov cmp pop stos and sar mov pop ja scas leave lahf mov add add xor jne mov cmc test and mov in push add lds adc outsb das stos push lahf sub fnop pushf dec fcmovne cmpsl sbb mov mov (bad) and inc into mov sub sahf and or inc push add jmp inc dec cmp in mov xor mov aas mov mov insb xor in hlt or jmp aad movsb inc or in movsl and push cmp mov jne or in mov mov mov push xchg add lret add mov sbb and cmpsb ret out (bad) shll sub (bad) iret add xchg xchg mov es aas cmpb arpl fbstp mov jmp mov jge sarl and (bad) adcl pop pop insb sbb or fisttp mov cmp stos add shll fdivr add xchg adc adc inc addr16 (bad) jno dec or cld xor dec outsb sti into aas mov das sub es mov popa lret cmc mov lahf push pop mov mov sahf xchg mov pop lret fistp jne loopne test nop push aad movaps dec mov inc cmp jmp xchg add xchg dec les push mov psrld mov iret out lds and icebp jg jno int3 test push leave adc sub mov or push push scas call insl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp leave insb push cmp movsl fist dec cmp push xor test out push jbe cmp (bad) mov imul pop ficoml or inc cmp inc sbb inc mov pop jecxz push subl test xchg mov sarl sub ret stc dec lods mov and in imul pop and inc xor dec outsw sub aas pushf sub pop mov xor mov cltd icebp jmp mov add fisttpl xchg dec add das daa rolb pushl (bad) xorb xchg out insl pop movsb push out test jne icebp pop popf icebp test push sub and inc stos hlt roll mov sub dec popf je dec mov loope inc xchg dec dec lahf out mov lcall repz repz xlat inc xchg lcall repnz movsb xchg sbb test xor lret andl push inc in in xchg inc hlt add push mov fnstcw stos cmpxchg jecxz into cmp rorb es inc sbb add ljmp idivl inc addr16 pop mov inc mov inc inc clc fstpt inc ss fwait stc fdivrl mov fldl movsl sbb loope repnz mov xchg fdivrp mov mov test cmp (bad) push jae jge sub jl and jb xchg sti dec adc cmpsl jo jno mov fadds daa je adc (bad) sub sub jbe pop pop fwait xlat shlb and popa push shlb pop add lret xchg jb and inc das sub fwait mov jecxz cmp repnz out jge adc jb sub sbb int sub movsl xchg pop jae cli push in xchg leave jmp jae sahf (bad) pushw jmp or lea cli sbb xor and in daa mov pop push movsl mov mov push and (bad) sub pop sub outsb and dec mov divb pop cld popf es and and cmp aas fbld jmp sar jecxz xchg push lods pop stc and data16 mov mov mov gs stos out decl push jl addb mov mov sub in adc push push adc add push enter push cwtl les cmp add xor mov repnz shrl leave jge ret and xchg mov mov inc in push sahf sbb (bad) mov or dec idiv test mov or jb inc mov clc int repnz xchg push adc mov mov mov int dec dec mov popf dec pop jge pop out dec (bad) lahf movsl mov dec push jb mov push cli jo lahf mov outsb (bad) adc xor cmpl adc push cmp scas int fcoms sbb or es arpl sbb mov sbb pusha xorb push int3 mov mov fs pop lock cltd divb add lahf inc xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ds mov clc movl rolb movsl add (bad) cmp push xchg imul (bad) ret hlt jmp aaa out xchg les addl adc or or cltd dec xchg xchg xor and mov nop hlt pop dec lds lcall imul mov mov outsb out jmp je and push cmp or pop push (bad) and jne mov ja fadds mov fs cmp cli push mov sub push or das fisubl xchg or push sbb mov sub or cmp cld fwait push and xor xchg xor roll cmp add flds testl mov lods cld mov mov push fs scas cld pushf adc push ficompl pop shll aam push lea imul insb insl cmp ljmp mov add divb cmp mov imul out fistp idivl sbb sub cld in add push pop movsl inc inc es mov test in movsb stos push hlt fbld dec mov jmp (bad) call jnp lods or (bad) in daa es loope sub mov iret and inc add or mov jecxz das adc sub push mov add sarl pop mov in dec or inc push dec ljmp mov fistpll mov sbb push sub or test pop lods mov hlt cwtl lret nop adc dec mov xor movsl pop fcoml cmp sbb test push cmp xchg mov ror hlt mov sbb sub js push bound sub dec pop mov mov mov test sbb jo aad repz mov inc jnp push jne lcall in xchg cwtl mov ret sarb sbb inc fldl xchg pop test bound fyl2x movsb lahf mul inc insb inc lret popa out sbb inc and add sub push insb push mov inc out jmp and rorb aam add mov sub mov js enter sti adc cmc inc imul add jno mov dec or adc mov jnp sbb inc lcall add mov popa xor xchg sub mov sti fiaddl fsubrs push jnp xchg jae dec outsb out insb push nop adc cmp ds (bad) hlt and mov jne repnz jo and push mov aaa inc dec adc cmpsl cmp mov mov imul test or aaa (bad) stos mov rcrb or ss lods gs xor dec mov das jmp cmp lret xor je mov pop push xchg add mov (bad) scas insl fld shll pop mov xchg dec ss stos xor aaa adc orb xor or mov sub test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp shrd jbe,pt (bad) popa add or mov (bad) or test cmp lcall popf ret sahf jbe repnz pop jbe jle,pn jae jo mov movsb enter into lret lahf or mov scas cmp xor js loope,pt push push iret sti pop loope in pop aad mov xlat mov adc cwtl lret pop std inc in xor or (bad) push mov insl cmp arpl shlb ror std push dec push xchg test mov mov scas mov xchg (bad) or xchg jge (bad) and out push xchg fiadd xchg and fcmovu adc mov int3 shlb call dec dec and mov pop cmp xlat fs inc adc imul xorb (bad) lahf adc inc dec addr16 xor push mov cmp jae jns cmpsl sbb sub lods popf pop icebp out push test and inc ficom sub arpl xor js stos rolb movsb lcall movsl fdivs adc je sub out inc adc ljmp and mov sbb inc and push aas mov int3 daa jmp scas int3 shl sarb add jo movsl test xchg decl xchg cmp in sti jb outsl pop add pop inc shr inc outsb cmp ret pop fs mov push repz les push mov add movsb add mov cli xchg outsb xor xor fild cmc mov dec gs inc pop test mov (bad) and movsl mov jae xor cmc mov and jle sti mov imul xchg out lods push test loop mov lds xor inc pop pop in jnp icebp mov cli lock jbe cli ss push xchg subl test mov scas leave mov test sub mov and rcrb xchg and jno outsl add sub or repnz jb adc in lcall jbe add (bad) and cli dec cmc mov (bad) cs stos (bad) fisubl in out and xor inc mov xor inc jns jo into add pop sub ja fs cmp mov outsb (bad) push cwtl movsl in leave xchg mov cltd mov inc sub pusha mov sbb (bad) (bad) decb jne mov xor js addr16 (bad) add add outsb out lea shrl pop mov lahf sbb decl pop insl and outsb outsb and mov (bad) popf pop daa dec mov fnstsw pop aam aaa popl and ss jo push add stos and repnz aad ja (bad) cwtl and loop mov adc insb xchg aad ret cmp fcom fcoms push dec fs mov repz fildll adc in ret pop test cmpsl mov mov cwtl imul fildl mov daa les leave movsl arpl push (bad) stc hlt jo pop test pop rorl mov nop shrb pop xchg jge pop cmpsl jae out and pop fimul dec xor lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov cmp ret adc repnz jbe mov push sbbl add jo mov cmp or inc xor je jp or adc dec cmp shr or inc or scas cs mov repz imul rcrl pop cli shrl icebp icebp or ffree out stos fildl add push cmp push fstpt jle jge xchg add out push mov sub (bad) hlt adc mov xor das fdiv jmp mov jae sub imul cmp fidivl adc jl xor hlt push test dec adc or pop ljmp movsl jo jnp mov push mov dec pop sahf out fs data16 or in mov sbb lcall adc inc adcb test roll cltd dec dec and adc or mov fisubl cmp or push inc cmp pop inc adc cltd push shrb cli fimul les das push fildl sub cld adc es jno push std jmp das dec fisub dec jecxz inc iret pop push repz aas outsb rorl dec jo jge bound fsub mov add sub push push jg fnsave repnz xor adc cmp xchg mov dec mov cld cmpsb cld test out in xor pop push and sub ljmp jnp adc add cmp pushf or ja (bad) lret lcall mov sarb adc pusha dec js ja call popa jp lret sbb pop push js cmp pushf ret enter mov lods sub sbb lret (bad) lods repz pop pusha dec push insl mov mov stos psrad in mov and sbbb push je idivb xchg int3 nop pop (bad) add mov mov mov jb fbstp jno ja cmpsl inc ja nop adc sahf cmpsb xlat pop out dec push rorb lock enter outsl (bad) push or test lods mov xor jns lret (bad) cmp shrl jae and inc and xlat jg pop popf adc sub arpl fldpi data16 ficoml sub and je jbe sub sbb push stos aas stc outsl fsubrs scas adc fisubl mov enter ljmp loop mov push mov std sub test sub rcll cltd jnp int3 ds insl mov xor mov outsb jb (bad) hlt cmp jecxz stc pop fwait or sbb or xor inc insb ret fsubs mov pusha mov jmp sarl mov bound dec arpl nop pop lret or add xchg jmp cli jo (bad) ret adc lret je mov pop fidivr sbb das sbb jnp test les adc inc sbb sbb xchg mov (bad) xor mov add mov dec jge mov mov popa in aaa mov pop sub enter dec repz int3 int3 cmpsl insl xlat subb popf decl push add sbb or fcomp (bad) pop stos out addr16 adc ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov jo push int push leave in add inc cli data16 sub test xchg leave jle pop sbbl pop cmp cmp sub andb cmp ror adc push push lock sets rclb out aas cmp mov cmpsl mov xor pop cltd and jbe (bad) and pop push xor pop cmc insb add xchg flds push inc movsb flds fnstcw mov pop mov jae jg cli mov fbld xchg pop imul es scas inc (bad) mov (bad) sub mov xor (bad) push pusha in lcall xchg pop js and dec fscale (bad) sub jbe xchg jmp pop neg pop dec mov stc pop mov mov sarl add cmpsb notl xchg scas les icebp dec push sub js fnstsw add pop mov mov lods mov cmp (bad) push dec es lahf sub shrl jns lret iret addb or aaa idivl mov in xor lods push sub out add dec fldenv sub shr cltd imull scas loop mov adc cs jno (bad) pop fsubs cmp cmpsl popa push test cld (bad) out aam jmp sub stos popa outsl lret or or xlat inc jae test mov inc shll ljmp push addr16 jne dec xchg inc mov movsl out inc sub jle daa (bad) out xlat push jmp mov (bad) lds shll (bad) ja jae jecxz and and sbb push pop mov ret mov ljmp add das mov dec sbb scas test push xchg sbb lret cmc stc outsl cmp loopne mov fcom repz xor es sbb stos mov adc xchg movsb lods push ret fucomip pop rolb or mov lret cmp decb test pop or inc je outsb or sbb mov jnp leave mov add imul xor jb add test inc pop cmp sbb icebp (bad) mov roll outsl rclb aaa mov cmp fwait inc repnz dec xchg sub mov std divb push jno imul inc pop sahf push imul inc push (bad) sbb push movsb fild mov outsb nop mov jmp inc pusha xchg mov ljmp mov mov sub rorb jl aam mov pop sbb in mov dec add mov ficomp sbb mov popf inc and and outsb pushw inc mov out dec xor jg popa mov das stc jo fucom mov mov dec leave xor xor inc mov push mov xchg or xor vmptrld inc add mov xchg inc pusha cmpsl jne mov and imul add push int dec mov xchg imul inc xor mov lcall fsubs fldl lds stos adc cld fdivr sub cmp js inc pop xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in xchg fldl fmull out inc outsb adc je clc push fmull add leave jecxz fwait ret scas pop and or bound sub add lds push arpl push (bad) in ja push mov mov cmp push push dec shrl pop inc push sub jmp mov and popa adc jnp mov repnz mov mov cmpsl bound ret int scas (bad) sub xchg push sti fimul xchg lock stos (bad) lcall jle aaa in xor icebp jmp out fldenv cmp cmp neg xor push int3 in bound mov je pop lds jae loop popa dec sbb pushf jae into xchg adc mov fnsave xor lret adc cmp mov sbb in push es hlt mov out (bad) sbb fmuls add inc ret jnp in jl jl (bad) mov inc cmp mov add shlb mov in out das lahf xor stc out outsb insb xchg xor test notb jg mov jbe sub inc lret cwtl mov add inc je inc fwait jb xlat jl dec inc popa xor mov xchg pusha push adc into ljmp scas loope jo push xchg in mov xchg pop mov std sahf add out xor cs add js fcmovnb inc test xchg dec adc enter adc loopne jmp inc ja or jae sahf sti mov mov pop out jp and lahf cmp xor xor jno sub test (bad) xchg dec rolb dec adc fstpt int3 scas cmp cmc shrb shll rcrl fucomip mov and loopne sub stc lods dec ljmp mov mov outsb loope lret cld sub cmpsl push in jl iret xor mul dec jne dec push adc xor mov int inc enter leave xchg movsl stc mov daa xor cmp sti jae (bad) lret fist xor dec jno mov mov pop lcall in xor test xor dec (bad) bound push je sub insb (bad) (bad) je lds cmpsb in mov sahf add bound scas push push adc jo jp adc in sbb inc cli in scas add fnstcw jo mov rcl mov inc add lret push mov jno or dec inc sbb mov sub inc cmp ja pusha add push jle sbb sahf xor movsl ret test loope lahf xchg cmpsb mov outsl call dec cmp cmpsl ja or (bad) int3 push adc xor rorl mulb sbb xchg or cwtl insb (bad) and lock adc out test xor jmp jo sahf nop lret push movsb lds scas data16 push push aaa adc (bad) pop outsb mov outsb lret and sub pop mov cmp sbb js sbb (bad) jbe into sbb dec adc lcall (bad) mov test and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and les xchg mov maxps mov jmp pop addl xor add ljmp mov jnp xor pop sbb xchg push mov jmp rclb inc or inc jg and stos sbb mov adc jne test mov cmp add out inc shr add fcompl (bad) ss inc mov dec mov cmc adc stc mov xor data16 lcall packsswb and (bad) mov daa jl ja in push movsl repz pop test das inc roll jle (bad) mov cmp loop push mov dec pop lret dec loope hlt mov sbb or je popf fdivrs sub dec clc inc push mov rcr mov xchg repnz fucomip in fcompl jle (bad) imul push orl sbb cltd mov jbe jg sub out sbb and repz mov in stos lcall lea sti dec dec outsl nop jbe jae jo mov in mov push pop xchg mov sbbl adc lods out sub rorb (bad) xor imul cs lret test pusha cld insb lods cmp je cmpsl jo call ss sti or add push pop cmp jge lods or out addr16 call inc imul std mov popa mov int3 mov xchg les rclb add ficomp daa xchg mov out adc pop stos adc sub push scas aaa dec jmp xlat into jae and mov in imul es jae pop dec add dec fisttpll sbb pop jne,pt iret sahf outsb cmc push (bad) aaa int pop mov lret cmp prefetchnta or mov inc (bad) fimul ret pop lcall frstor and loopne mov push insb rolb xor scas adc mov cmpl out repz cwtl fsub repz cmp pop or test fistpl cmp sbb dec std neg lea ret pusha ljmp mov cmpsl inc xchg xchg test or pop mov fs inc push jge ds mov lret mov pusha lock enter mov xchg sbb dec xor push jle out (bad) mov lret jne push or inc cmp les add outsb jmp sub jl mov test bound jp xchg pusha out mov xor je sbb cld fstps (bad) pop sub (bad) ds pop daa (bad) aad mov test adc jl mov popa lret aas jl mov cli std or add push and cmp sbb sub push adc push jnp mov push push add es in adc push mov mov mov stos lea cli rorl xor add cmp (bad) fisubl and dec daa pushf dec inc mov ljmp addr16 mov sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov subl mov push and mov repnz pop xor ret jg scas shlb jns repz in push mov pop loop fwait ljmp jmp hlt scas and and dec and mov push dec andl cmpsl mov mov in jl rcll or daa in sbb out test dec pop sub js add repz pop push ss push sbb cmp pop adc push dec xchg test inc xchg xor push nop in (bad) cltd (bad) inc enter or xor fs cwtl in xchg loope cltd or (bad) fildl shrl xor push mov xchg sub mov ror mov inc inc xor jle inc cmpsb cmp fwait (bad) jecxz loope jns repnz (bad) outsb and push lahf xor jl jmp mov movsb lret sub and sti roll stc jp dec adc push sub daa xchg pop sub rorl dec mov inc stos jne les mov sbb dec outsb jg dec xchg dec cmpsl sbb insl sub leave add sbb (bad) jle out aaa (bad) int3 repz lret push repnz push int push sbb adc ret js nop fwait inc push jno bound iret jge add mov pop xchg bound mov cmp pop popa jp jno add xchg dec fiaddl jl xchg test frstpm(287 dec xlat mov adc add jne xchg cwtl cmp adc ljmp gs repnz mov sub mov rcl test jne xlat cltd pushf movsl mov imul aad pop nop pop (bad) ss ljmp cmp push ret dec adc popa js in cli (bad) fwait xchg or mov in mov cltd stos mov lods sbb sub dec and add xlat mov (bad) inc push stos jb adc lret or xchg out sbb cmpsb push in nop mov xor push imul mov mov cmp cmp xchg (bad) stc inc movsb in and add xchg aad (bad) mov addr16 mov enter lods outsb fsubl push and mulb jp jne add jg mov fnsave mov and popf xor sbb xchg mov push das (bad) xor cmp (bad) cltd sbb gs pop daa call mov jns imul adc cmpsl mov inc or lret mov jg push or sar pop xor fs mov stos inc data16 (bad) adc lret in sub xchg xchg aam mov scas xchg jbe ljmp jge enter lahf xchg and inc cmp scas push call fld add jge inc rolb push xor sti pusha cmp stc jnp call lahf add pop (bad) jmp xor jp test xchg inc fnstcw icebp ffreep xchg orl cltd mov call cmp mov out pop adc xchg sbb inc xor lds xor repz lods (bad) scas or sti xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jmp daa gs cmc and jp in xchg fdivrl fist pop into divb mov aas pop sbb mov inc shlb sub cmp loopne pause test lret and mov mov lods xchg into lods (bad) adc loope sarb aas sar fidiv sub nop int stos out hlt scas adc add mov xor lods mov dec lods (bad) in testl jg fwait scas jnp test (bad) xor dec scas fyl2xp1 or and nop out xchg sub lcall test loope fcomps xchg mov adc repz outsl fldl xchg sbb add xchg mov cmpl shlb cld andl and push mov mov cmp mov cmc push dec fnop (bad) dec jo std into (bad) xor movsl fldcw (bad) lds bound test outsb aam push jbe in stos mov or mov mov add lret jnp and add dec pusha xchg iret adc xor sbb push rcr fucomp out fistpll popa stos jne pop jae pop jp inc and mov enter push loope mov adc mov pop mov out push jno add mov fldt flds jmp nop insb lods cs add popa lods sbb cmpsl push je push mov cld mov push cs jg cmpsl clc and cwtl pop mov cmp jl sahf or imul inc pop xchg sbb mov sbb cmp daa jne fdiv sbb pop popa sub mov push jno push pop jecxz out mov add jne insb bound les inc scas rcrl sub dec fildl push push lret in aad (bad) xlat xlat add push cmp cmp cmp out js das push jp push iret lea std cld cmpl lcall jg sub cmp cld cmp jecxz cmovo jnp (bad) xor addr16 jo test rolb fnstsw pop inc (bad) mulb sbb inc cmpsl xchg popa add stos ljmp movsb mov dec dec fstpt sub mov xor fdivrl sbb scas call addb test mov xor push mov add sbb mov out outsl icebp imul out cmpl adc mov push xchg aad test int3 add test adc mov pushf push ds xor adc adc popf mov mov sbb xchg imul enter shr rol jnp add dec popa insl (bad) xor sub mov fsubp dec pusha or out in mov mov fildl popa fwait (bad) loope lcall fisubr xor test add imul sub cmpl adc inc (bad) shll cmp inc lahf jge pop xchg bound pmaxsw (bad) mov fmull pop xlat stos enter int3 dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc sahf (bad) pusha cmp shlb ja scas lcall xchg fmul loope sub rolb jp lahf xchg inc fbld dec push sahf (bad) push in lods cmp insl mov mov cmp push mov push push aam popl (bad) dec xlat (bad) fisubl pusha cmp xchg mov stos pop in xchg cmp stos fidivl (bad) rorb mov rclb addr16 or xchg iret lcall add leave sub xchg jl sbb mov outsb jg inc sahf xor sbb xor orb mov ficomp insb mov mov scas (bad) ljmp aad imul dec push push pop fcmovu jg out add mov dec adc test cltd pop outsb pop xor lea movsl xor mov adc mov mov in cmc and sti shrl shrl push dec push popa xor adc pop pusha push aad lcall lahf jl push jp lret fmuls fcomps out int3 cs ljmp mov inc stos pop fdivs psrad nop jg stc mov add pop scas mov mov jge jmp dec xchg ret sahf cmp xchg push lret pusha sub or xor shr imul leave sbb mov or mov cwtl dec lcall jp pop push inc mov aas push mov test xor dec cld jbe mov pop xchg rorb and scas imul (bad) repnz jne jo pop ret push xlat sub mov loope pop mov pop iret ret lds inc inc arpl in test mov fldcw mov mov fsubp test test rorb or imul cmpl je cltd pop adc aaa rcr aam mov mov pop mov stos in jecxz stos pop xor mov pop sub jg push je jp ss cli mov mov xchg jle cmp in adc (bad) cwtl in push orps or jp outsb stos jns into inc push rol in sbb popf xlat cmpsl cmpsl mov ffree stos loop je stc pop fnsave in lods leave es (bad) dec adc dec mov jmp xor mov jle jg cwtl popf push insl ss daa xor rcr insl cld push dec dec mov cmp inc movsb lock out push shll subl mov loop add fmuls lods into sub out sub in imul imul lea (bad) xor and mov sti inc mov xchg daa test (bad) in mov iret scas sub dec or in sbb aad aam pusha cmp repz xor leave nop pop and inc inc idivb mov adc lds inc neg and fcoml dec cmp pop (bad) mov repz ljmp inc dec xor and clc xchg xor mov nop mov daa aaa sbb add xchg jl push fsubr aad and rorl clc cmp xor inc adc shlb or jnp xchg or push cmp insb loop pop push push pop cwtl dec dec add je sbb sub inc mov add mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg std add (bad) sahf out ja push stos mov aaa cli cwtl dec mov jg jmp xchg in jns xchg lods (bad) pop imul mov dec pop loop fisubrl insl push jno cmp pop bnd add xchg jne pusha mov movsb sub hlt cld sahf enter dec xor movsb (bad) fsub addr16 fadds cmp sbb lahf push sub movsb (bad) nop mov lds addl push fucom out sub dec xor je mov cmp jae aas (bad) mov out outsb sbb les pop mov popa ss gs out mov mov mov rorl clc dec jp mov unpckhps int ds into rcrb out dec xor pop add fldt aam lret mov pop lret jae mov push push bound es sub jge fdivrl stos iret push repnz icebp dec in pop mov pop (bad) stos jl mov mov je cmp jns dec sub popl rep jne out addr16 cltd push push (bad) lret lret xchg or sub leave movsb cltd and sbb test add movsb mov jbe cmp aam sti dec lcall sub scas (bad) and mull (bad) and adc and lcall add test jmp scas ds movsl fbld insl xchg idivl stos or xchg lock popf daa loop cmp mov mov add dec mov cld call add lret adc cld out xchg cmp (bad) fcompl jecxz inc nop cmp push xchg sbb jae inc divb das ds add ret nop (bad) mov mov cmpsl cmp fdivrl push and xor in xor lret jno loop aas and mov add hlt leave inc push popf xchg sub sbb jne adc jae fdivr adc bound aad ds popa pop das out sub dec jae inc mov inc stos fldcw mov sub jae fildl cld lods fsubs dec rolb inc mov test dec xlat pop (bad) mov mov xchg mov (bad) aaa mov or jae sahf add stos test dec leave or call fdiv sub mov into (bad) out push outsl jg cmpsb cmpsl nop int3 xchg js pushl sub mov xchg lcall rcr in inc or cwtl cli adc roll jno aaa adc xor outsb and mov mov lds hlt adc imul or adc insb (bad) xor dec jno push cli xlat pop jne and popa pop and fidivl push xor push mov sbb inc xchg pop fisttpl imul outsl mov dec cmpsb ja mov mov out test out mov pop cs pusha push mov ret dec fbld cld and mov paddw pusha xchg icebp test test leave pop xor push push mov cltd lds mov stc rcrl in fucomp push das in push xor xchg mov inc out das mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add cmp mov adc cmp jnp or loopne sbb fcoms mov inc cltd lcall aaa ja sbb jecxz push push call (bad) divl aam push xor xor arpl pop mov shrb adc ret aad (bad) mov cmp int fmuls xor add xor mov mov fbstp pop pop (bad) adc add pop mov push pop hlt mov test std test test and stc scas cmp and push cmpsb pushf push call lahf or cmp cmp aaa jle adc repz sbb mov loopne (bad) mov mov or movb sbb int3 jp mov xor add pusha mov aam mov jge jne adc inc sub clc dec clc outsl fmull add stos add int3 or out cmpsb and pop xor stc cmp or repz mull cmp (bad) fwait inc add (bad) cmovne adc addr16 std mov mulb gs inc mov call outsl test jmp repnz js cmpsb les cmp or jg andl fisttpll mov in and out mov (bad) push dec or adc test xor lcall jmp sbb pop fwait cli dec fnstsw jg scas (bad) dec mov aas mov xor in push and or xor sbb xchg aas jge inc (bad) sub adc dec popf inc push inc shl (bad) mov jge xor inc movsl andl mov pop imul fnstenv test inc inc sbb repnz jle dec rcl (bad) jb mov les xor pop xor cltd mov mov lock imul scas sti dec cmp mov xchg xchg or sbb mov bswap (bad) and iret adc bndstx lret cmp movsb inc fmuls repnz and jle mov jo xor inc test mov movsb push ljmp es scas inc clc bound push out xlat lcall add inc rolb or cmc push push mov dec push inc inc iret inc lret enter mov out pusha fidivl mov test adc sahf ret add movsb (bad) mov dec jg ljmp or dec mov cld loop push decb pop rep xchg and fisubr mov pop int xorl repnz aaa mov jnp std jne loopne lods stc cmp and mov mov ret xor incl inc hlt popa mov jo or outsb mov mov les mov bound xor (bad) xor cmpsl add js (bad) adc or les stos cmp dec or sahf add xchg bound add shrl mov data16 icebp arpl pop jecxz dec out divb fs cs xchg jno imul lds ret sub add mov xchg cmpsb enter mov sbb add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xchg cmc mov iret aad mov mov addr16 add xor iret int3 cmpl jno ss imul stos repnz lret (bad) mov mov pusha sbb stos and jle mov std xchg les repz cld mov cmp (bad) out enter push movsb push pop jb dec lods repnz adc movsl xchg lock xlat mov xchg rcll xor sahf shll testl dec out cmpsl fucomp dec mov out mov pop cmp push loop pop jg rorl mov test test cmc shrl cmp or add adc mov scas sarb enter scas mov sbb mov data16 dec inc shrl mov pop add movsb inc mov cmc les jl xlat incl addl fsubr push iret dec push mov jg mov pusha imul lds loope mov inc jae mov pop xor (bad) mov jecxz mov pop test ret (bad) jg fildl cs push sbb sbb jl cmp (bad) aaa adc (bad) push notl push inc addr16 inc sub int pop jae mov icebp xchg stos inc pop mov sti xor pusha mov sbb and es or pusha cmp or xchg cmp adc test xor inc mov or add (bad) int lods sub cld jo cld jle int cld (bad) adc js cmp loop inc aad xchg (bad) mov push cmp dec and aas loope lcall dec loop inc cmp fist ret sbb lods dec sbb test lret sbb mov jecxz add mov mov push push dec movb out (bad) adc mov dec pop cld mov outsb (bad) rcll mov je or or daa sbb rcrb add or adc xor stos jns jp (bad) mov outsl or mov repz data16 daa icebp xchg ss mov test insb mov pop adc daa xchg or stos dec jl call cmp in xchg and cmp mov adc and mov adc or and push lods cmp pop add mov push (bad) mov add sarb leave fdivr mov mov xor jp stos (bad) pop pop sti cmpsb xor lock cmp lock divl inc cmp adc adcl test push sbb push push xlat sub mov push cmp dec inc pop or dec std inc mov adc test dec jge lret xchg pop jo call or jbe cli adc scas sbb insl or out ficoml fsubrs sbb leave pop daa cmp lcall xchg rorl push leave xchg mov jae dec dec test cmp pop aam lock out fisubrl jl sar ja xor out stos add push ds mov adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl daa mov push mov and xlat adc lods adc pushf daa mov fnop cwtl adc repnz nop cs dec jecxz es pop and sub add push cmp stos les cmp mov xchg pop jno pop mov add out int3 inc scas push stos xchg mov dec pop cmp out mov xchg shrl fcoms inc mov jl mov push push dec leave aas call inc inc mov push cmp das push mov insl and stos (bad) sbb inc inc push subb sbbb xchg dec leave cmp mov lahf insl pop fmull xchg or inc xchg das mov mov aad xchg add sbb sbb pop and shrb and xor (bad) imul sub je loopne pop pop inc xor loopne mov inc push xlat fsubrl mov lock sub (bad) cmpsb mov sub sub add js and in jns xor loopne scas cmpsl xor or pop cmp and imull arpl dec pop (bad) jnp loope imul cmp bound stos push sub sahf push (bad) cmpsb jnp inc inc cmp pop cmpsl imul adc pushf cmp cmp aam nop out adc sub pop push fcmovbe mov or jg mov lret and add lcall pop xorb xchg data16 xorb mov imul in fs xlat lock (bad) stos stos jae ror sbb clc lahf xchg repnz xchg ja and (bad) fwait ss in clc ja lret (bad) fcmovne cli cmp adc push stos cmp jg cmp int ljmp mov and aam arpl repz (bad) fdiv (bad) xor cmp push outsl addr16 inc cmpsb xor gs add test fmuls xchg bswap test mul pop cwtl das and mov or pop cld hlt jge jo es sahf ret inc xor fiaddl or adc (bad) xor push add imul mov xchg dec orb outsb aad add or jl (bad) cmp outsb adc mov mov push dec cmpsb add fwait in jnp das mov imulb pop fdivrl jp jl in pop and ljmp (bad) out cmp xchg repnz inc ret sub imul cmp orl jb or mov fs mov mov sbb lahf cld out dec clc mov ret hlt ret xchg and push insb bound orb xchg push fidivl fisubl icebp outsl rcr ljmp pop inc or into mov aad dec or push dec cmpsb cli jae (bad) lock (bad) mov inc xchg insl fimul mov out jecxz sbb and fnstsw push int3 lods gs leave das mov mov mov (bad) sbb inc jmp out xor sbb imull and fsubrl js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg xlat sub xchg push xchg and les jb or xchg sub pusha data16 and adc fsub xor add nop decl loop sub mov loopne adc rclb xchg or and hlt dec test data16 or push ror fdivr push mov cmpsb test add sub xchg sub jle (bad) cmc push outsl sub jge in test les mov push lock and xchg enter push mov sub (bad) mov loop loopne cmp pop push or dec push inc jb xchg sbb bound scas sub push scas dec inc mov cli or lds addr16 mov mov xlat mov or cmc sub inc mov ja sbb rorl repz jno fs mov add (bad) std movsb xchg push cmp jg js,pt (bad) push stos out adc sarl and xchg loope call shrb arpl xchg test sbb sbb push adc mov stos inc in stos test cs movsb sbb loopne or mov pushf push xor jl dec rorb jg lods jno mov push pop sub in add fiadd repnz frstor add jno or push out bound daa inc add jle neg jbe pop mov (bad) fs fistpl cmp cs sub cmp popf insl popf dec cmp sub sti (bad) nop outsl cmp sbb adc ds insl jne adc es (bad) shll test xor jge in in add insl aaa push fdivs adc icebp mov cmpsl rolb inc jg pop inc lds (bad) aad out in xor and fs xchg aas andl sbb push push inc fmuls pop xor (bad) push mov sbb loopne daa push shl clc out mov xor sti icebp cs negb and out sub dec adc adc fnstsw lods mov aam pusha icebp (bad) push xlat add jecxz test js or jbe loop lret into add dec shlb inc cmp lahf xchg and leave sub lret mov or add sti cmp and test mov jmp cli jmp test pushf daa int scas ss mov sub jne pop jle push adc out or inc ret pop cmp jp (bad) in push add sbb imul cmp movsl loop popf fiadd inc fwait insl pop push xlat movsl xor adc data16 mov into sarl and jmp into cli adc test movsb pop jae mov rcrl sub cmp pop mov add loop xor stos mov fisttp pop xor jno xor dec jns cmp mov lahf add sbb sbb movsb cmp cmp rcll cmpsl ficomp xchg popf xchg stc (bad) popf mov and jg and dec and push das test inc sbb cmpb sub call fldenv (bad) jae cmc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall popf js std (bad) fidivr test jp scas inc dec ret or popa arpl or orl adc inc inc sbb shrb js daa (bad) xor in jo or and gs xrelease ret addr16 subl add int push and stos add cmc sub and enter adc out aas fdivs inc sahf inc mov imul cmpsl mov daa out xchg in mov lock fisub shr jb ret dec sbb in pop in sbb xor (bad) mov pop fisttp lods add dec movsl lahf jp lret and and std add pushf divl xor std jno nop pop adc jbe xchg add sub pop lea adc je (bad) out push mov jl,pt adc insl and push xor mov xchg inc push mov test mov push aas mov pop adc mov cmp xchg jne lea and adc addr16 inc mov leave adc mov and or mov xchg lock mov fwait cs push cmp fs (bad) and lret imul inc adc dec push add adc stc leave les adc popf daa mov int3 sbb mov or jp and int3 adc sbb lods in outsl lret add out or or lods xor dec jecxz sbb jecxz jo ja sbb cltd mov lods lock dec loope lods xchg mov movsb mov int push sub cmpsb pop mov stc hlt xor sbb jbe nop lea add ror cs push jbe pop cmp cli cmp jae cmp sub and mov adc out movsb stos and aam enter add nop push stos add ljmp jnp movsb push jg pop mov iret sbb jnp mov push (bad) pop xor pop lcall xor push dec mov dec daa xchg push jge or jle in repz enter call test add push jge lods in inc (bad) pop jnp je ds mov out (bad) sti insl xchg loop mov mov repz mov (bad) lcall add mov pop subb mov jle arpl mov aad lods lahf cmpsl es pop push mov dec (bad) std stos mov popf mov xor fs lds test xlat jp cmp std sbb insb cmp (bad) sbb adc xchg fdivl mov fldl fisubrl (bad) push and fistpl sbb jmp lahf sbb pop scas inc dec sbb adc add das outsb stc sub xchg sahf bound (bad) adc or pop cmp aam scas jnp xchg jg stos sbb fcmovnu scas decl and repnz outsb outsl jmp addr16 add pop (bad) xchg movsb test cmpl into int dec lcall fidivl prefetch (bad) mov mov ja mov out je inc mov sbb jb sbb cwtl pop pop xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldl adc rorb cld (bad) push hlt pop adc sbb pop push aad (bad) sbb out jle loopne test mov and fisttpl adc insl int cli int3 xchg xchg test mov mov dec aam pop sub insl cmp (bad) pop aam stc add mov mov movsl push dec imul mov aad lods mov jmp ja rcrb push (bad) rcrb into (bad) cmc jle test (bad) add in add fldl or pushf clc push dec lret shl je inc stc cmp dec retw xchg arpl outsb add or insl cmp jecxz xlat dec lods (bad) pop inc add add pop lds and dec cmp loope jl stc push pop xchg sahf nop mov imul push pop (bad) (bad) rcrb xor stc in sti movb mov or rolb cmp fstpt mov mov cmp ds adc sbbl xor into lods sub fimull adc mov inc cmp mov sbb cmpsl sub jecxz fs fdivrs mov (bad) icebp xchg adc mov fs jns adc cmc inc pop movsl mov mov sub xlat int3 (bad) cmp movsl mov hlt add sub (bad) pop fstps scas out aad xor sub jge ss pop and (bad) xchg lods cmp (bad) jmp ret movsb popa in cmpsl inc inc repnz imul push and dec push hlt pop mov xor inc ljmp xlat pop xor dec xor pop fsub test inc push sbb call lods push aad fmull popf sub lret sarb gs fisttpl xchg fwait rclb mov stc stc sbb lea aas cli sti mov inc pop xchg push push mov or rcrb imul jae (bad) xor pop ret mov sub mov outsl dec push xor pushf cmc dec sbb bnd push test cwtl jae and or jnp jno jle or ret fldt sub jecxz pushf mov (bad) js call shr sti mov mov rcll mov out jno out scas jecxz in popa sub dec inc jbe arpl pop sti inc (bad) mov adcl jae add mov idivl std push push scas dec or adc sahf mov xchg sub mov push (bad) mov jno cmp or adc xor lcall inc insl dec aas mov imul pop inc stos mov (bad) xchg and xchg or cmc push and mov mov cltd out push push jmp aaa aam insb out cmpsl lods das out iret mov push addl loope cmc xchg add lea jge lea addr16 pop dec out in jno (bad) cli sub outsb popf cwtl mov sbbl in push or lds push cmp xor outsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push mov das mov out jbe (bad) notl add daa mov dec xor into out ficom lret mov enter adc aad popf je or and mov shl call aam add sti loope xor push inc (bad) loopne in es outsb dec sub inc xchg popa sub xchg (bad) jle add xchg and std pop lret sbb lods insb pop mov fwait xlat mov flds lods movsl mov push adc jae popa jno in mov dec (bad) mov and mov jp mov test test mov and int cli pop scas or dec negb sub add xor jno lahf adc int3 mov or clc cltd inc mov hlt cmp jo cmp pop jns mov (bad) inc movsb inc cmp mov push xor in mov push hlt bound (bad) xchg mov fdivrs fnsetpm(287 fnstenv sbb pop pop ret mov cld mov dec sarb je repnz fadds inc enter dec icebp stos cmc pop cli mov fdivs inc fisttp aam (bad) fildl in scas popa xchg (bad) mov iret pop outsl mov and mov and add mov lea push mov out fwait inc xlat loopne shrb repnz or loope jg or clc js ss in sub jecxz fisttpl iret out xchg and ss xchg push push jl gs stos jo mov cmp push in inc test pop dec pushf pushf daa dec fdiv push dec loopne and jl shr repnz sahf imul jg cmp cld in xchg outsl mov dec sub test xor pushw pop incl daa test mov (bad) repnz sub pop mov pop outsb pusha mov jge,pn daa js mov xor push xchg test popl mov leave adc leave sub mov jns mov push or xor ficoml gs jno fcmovne mov std push jae add mov inc mov mov and jl das adc lock sbb and hlt sub out das pop rcrl cmpsl pop cs pop sahf mov hlt cmp push sub leave jp ffreep arpl popf test or cmp (bad) jb jne push mov sub push inc imull rol ret ret in pop and lcall pop rcr std shll insl mov leave data16 mov inc or out xchg jo push jnp (bad) cmp ret ret jmp ljmp inc mov scas lahf jge push xor xchg pop sub rcr in cld cs jae xchg test dec (bad) jbe push or insl mov cmc out dec popf add xchg call fcomip cld insb xchg xor fsts es test roll in adc mov (bad) cmp mov pop scas or cmp call pop sub sahf popa dec scas pushf ds push cmp push je jmp mov mov js stc pop adc leave fistpl loope xchg int3 es pop in rcll jbe mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec arpl mov xor into fsubs or mov mov dec pusha fidiv aad stc inc pop shll push clc sbb nop notb mov cmc arpl sarl scas fmuls fnsave and cs movsl mov mov mov daa inc movsl movsb cltd push sbb fidiv shrl pop addl sbb fistpl cmp sbb imul lcall push loope and shrb pop mov loope add inc testb dec dec pop xchg je cwtl mov insb or pop icebp pop inc cltd jne dec ret lret cmp lcall xor and in out jge ficom adc mov mov fildl or push les xchg dec sub mov mov rcrb cmp sub das sub leave xor cmp xor scas mov adc add dec iret add mov xor or sbb pop jmp fistpl mov lret or mov pushf or scas and loope (bad) push mov push shrl rorb icebp ja xchg mov stc test (bad) jle or xor pop jecxz,pt out fnstsw mov fs in mov adc xchg inc sti pop repz lcall push push movsb push shll cmc add push xchg out xlat cmpl pushf loope xlat ss jne sti cmp xor push pop ret inc jne daa add mov mov pushf mov lods ficom dec jl cs loope dec popa stos sahf aad lret pop loop fdivrl movsl and inc push mov lods pop mov loopne adc xchg test fcoml add add mov call js ljmp sahf in add pop aas jge rcrb cmc add jl push nop mov das jb fdivrs lods cmp mov out xchg cmp sarl mov mov xor shrb and jno (bad) cli or outsl add clc xor dec (bad) lods rcll cli das cmpsl stos dec jns sbb cmc scas es hlt push push (bad) mov adc loope inc fs dec cmp mov cmp xor sub repz inc or adc adc sub test (bad) push aad arpl setle xlat insl shlb add add std inc mov xchg push sub inc rorl cmp jne or inc push imul cmp fs xabort cmpl xor mov mov sbb fnstsw lcall std mov (bad) stc bound aad push lret xor dec je dec (bad) push ja add out outsb in jae negl or pop into rclb jne sub loop mov insl inc mov sbb out movsb imul fs test dec push push test decb loopne adc inc test jnp or mov sub test test aam dec jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov inc and sbb xchg gs cmovge mov cmp (bad) inc sarb bound mov pop addr16 xchg gs lods xchg xlat cmp daa dec in mov inc jnp pushf mov imul xor mov cli push xchg mov push lret mov jo inc out adc pop mov icebp push jecxz test int repz (bad) jnp mov jae fidivl add dec ljmp stos fwait rcr mov sbb jp inc movsl inc js pop adc and jge cltd jb xchg (bad) je jge sbb mov jg mov arpl fwait scas dec xchg sbb les push xor dec adc mull jmp pushl add cwtl mov and mov mov jne pop fnop or pop push fs push int rorb mov sahf add xchg inc pop push pop insb or xor jnp test or mov xchg xor jnp inc mov cmp pusha (bad) call les xor loop ss movsb decb mov push test push ror hlt shrl sbb push cmp mov mov pop fdivrs sbb adc or xchg push std aaa mov stc ficompl mov inc or repz mov sub add dec cmp lds jb or (bad) or (bad) sub out push sbb xor or lods out dec mov xchg push ffreep imul sub cmpsl adc push mov mov movsb inc add mov test popa in or mov or icebp xor pop sbb (bad) dec and and icebp mov cmpl mov xchg push andb push (bad) mov fiadd leave sbb popf sbb hlt push inc popf push lods jne inc sbb jle cmpsb sbb arpl iret sahf in test dec push xchg insl fsubrs jecxz xor xchg xchg out mov sti mov push dec (bad) jecxz fs lock scas add fldt cmp pop repnz sbb popa sbb push jg ds je fisubr or xor hlt dec cwtl js sub scas xchg cmp push cmp ret jb js aam mov jno mov ret pop imul out fs les inc neg divb push mov addr16 cmpsl pusha and call lods add loope inc jg addr16 addr16 dec xor ret out cmp mov fadds xchg push pop mov xor cli ds jo mov or (bad) int incl lahf mov insl lahf ds or dec dec pop rorl xor das ds lcall pop aaa sub mov sub (bad) jg out push sahf out stc jb adc in enter lret push pop and push movsl fcompl movsb rcrb test and addl scas pop jecxz mov into push cmpsl in jbe fild sub sbb inc cmp cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop testb mov or fs mov push inc enter stc setbe test aad cmpsl dec stc xchg cwtl cmc or mov pop fninit inc jle pop movsl mov bound xchg dec andl sbb xchg push stos lret mov xchg in inc sub rcl adc pusha (bad) push lds (bad) mov mov bnd lods xor mov sar test xor jge fstps loope inc iret or ljmp imul or sub pop sub dec or mov xchg movsb lea sub pop sub xchg imul add jge clc dec adc (bad) mov dec fwait icebp mov psrlw cmpsb jle push ja mov xchg jb imul aam movsl leave pop aaa mov outsl inc cmp cmp ss xchg push mov add mov fistpl push loop imul push jmp ret mov cmp mov push adc insb cmc movsl hlt mov sub out hlt push outsb je mov jmp push push cltd and out out mov (bad) push imul cs inc xchg ds bound jae clc (bad) scas lock out push and cmp shlb repz jno stc js inc iret add xchg push outsl adc imul cmp xchg es adc stc fistpl fldenv loopne sub test mov inc outsb push iret pop mov pop test lds mov mov and bound jns cmp bound mov das xchg sbb pushf xchg jne ss daa int3 sub mov and xor fbstp or loopne fwait xor daa lret int3 pop adc (bad) mov dec push idivb sub loop fdivrs cltd lock mov fcmovu popa xor fcoml mov mov stc and xchg mov cltd loop adc in sti nop pop mov pop push xchg sub std xchg mov jge nop and sbb push or mov mov mov jg jnp dec stc adc mov jnp jb loopne jp (bad) push fdivr add inc xchg mov sbb and repz xor gs repz or inc aad out sarl std bound scas adc pop and mov mov mov push lahf cmpsb (bad) jae cmp mov es add adc shlb xchg addl pop mov cld jbe inc jo jmp mov jle pop dec mov push popf push ds (bad) js add imul aaa dec xchg mov xchg push mov lret jo cmp test (bad) loope outsl push xchg cld cli (bad) hlt add aaa pushf pop and jae stos mov popf xlat loope js mov cs push add cwtl pop stos (bad) xchg mov aaa dec cmpsl cmpsl and stos andl push stos sbb ljmp (bad) out lods adc imul imul jg and in pop mov (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall leave jae mov dec incl inc pop (bad) xchg add sbb jno fbstp jno mov xrelease mov daa movsl inc aam mov test mov mov xor jnp cmpsb pop xchg sbb dec js stos je dec outsb orb lret mov pop sub rcll mov sbb add (bad) hlt cld sbb mov jbe lds int in and jbe add dec and mov dec cmp or dec out stos test xchg and pop mov test jne mov sbb rcrl lods outsb sbb jle and xchg fisttpll or mov xlat or scas das and ss xor and pop add sub mov adc cltd cmp movsb mov inc in push into decl mov xor mov lahf in ds push sub pop andl xchg jbe gs orb pop mov out mov popf aad and sbb rcl dec pushf add sahf pop jbe test fwait sbb pop cmp loopne in dec push sbbl in mov inc cld mov aaa and push (bad) pop inc xadd jmp jne jecxz idivb ret pop call and jge lret leave fcmovnbe xlat shrl dec and les clc inc es popa xchg je in mov (bad) sub repz pushl leave inc cltd mov inc cli adc add clc add loopne dec and stos out fcoml xchg cmpsl pop jns stos mov ljmp and jo imul and pop pusha xchg cmp loopne in mov ret and jnp push jl push rol ds fcompl cmp xor ficoml cmp pop fabs clc push jo push xchg int3 imul leave arpl add orl sub call push xor cmp inc cli xor ss repnz dec ljmp jb adc (bad) (bad) pop mov fisttp or addl insb es mov push popa inc xchg ret into cmp imul mov lret jmp jbe js push sub test test fcoml call or packuswb lcall in or adc pop sbb test adc adc bound cmp daa cmpl mov loop and xor lret int std loop or sti fldenv (bad) faddl jmp nop out mov sbb xchg sub popl add shlb jo sub mov pop fnstsw mov xor mov or inc int3 fwait adc cmpsb push jl and out arpl shl add roll scas and shl ret xchg mov jp cwtl aad daa sbb dec add xor pop (bad) jnp std repz clc js sti add dec leave mov lods ja,pt xlat jl lret and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jb (bad) mov and data16 inc ja or sti fildll mov aaa adc test data16 adc loopne out sti scas bound icebp push les iret rclb xor cmp xchg (bad) mov inc sub and jae inc xchg sub (bad) ljmp dec out push (bad) jno movsb fld lods mov cmpsl (bad) call gs inc adc pushf dec xchg dec insb ret mov in xlat inc insb lret or sarb (bad) loope mov sub sub fildl leave add scas xor not add jbe dec les movsl (bad) add in mov jno stc push push scas mov jb idivb cmpsl adc ja sub (bad) dec movsb push inc mov aas jecxz adc test mov jl sub mov int mov xchg adc pop aad js cld sub mov inc xor jmp lock call mov movsb sahf repz cmp popa mov in sub int in cs dec xor push lret mov pop lods push outsb ret sar push jge dec inc das dec addl enter lahf pop cmp std int jno jb and dec mov xor rorb mov adc dec je inc xchg pop push arpl adc cmc leave add data16 sub dec fwait jge rcll and fimul push int mov (bad) (bad) popa outsb mov mov (bad) pusha inc cmc lods rsm in jb push lods mov cmp stos adc mov shrl insl inc ljmp sub sbb adc das xchg dec xchg jge xchg mov cmp leave aad xchg inc fadd adc (bad) inc push out mov pop out push sbb xchg lret jmp adc inc loop scas mov or into xchg adc adc call push sub xor jo mov (bad) jmp xor sbb sbb out push cmpl push insb pop imul cmp imul andl inc jp in jecxz mov and int xor lods iret lret shr stos push jecxz fistp push xor dec add sbb (bad) cli sub hlt push push ficompl into mov mov or or dec hlt dec jle (bad) lret loope out or and cmp push std mov sub fs enter jecxz sub push jne xor xor cwtl in sahf add mov mov mov ret sub stc ret pusha aad rcll pop dec adc popa cmp inc test (bad) mov in outsb cmp ja or (bad) stos jmp xchg and cmpsb dec mov int3 cmpb repz loope push sub xchg xchg cmp iret cwtl xor jns std into leave sbb fbstp inc lret dec imulb lret jbe fcomi es sub jg arpl push fs shlb dec push push (bad) mov jns lods add call andb rcll xor addl cld mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall icebp inc mov push pop mov mov emms std mov or mov jns movsl add xor or pop xchg call negl pop jae pop xchg inc or (bad) cli sub lods jg pop pop subb mov inc and inc jg adc sub lock adc xchg adc aad and xchg pop addps jl lcall push xor adc pop scas add sub jno mov or xchg inc sbb xor ret hlt les ja mov jns (bad) (bad) dec mov movsl repnz movb je xor mov mov orb sbb cmpsb or pop test push mov add cmpl cli dec int3 (bad) push sbb cmp lret enter dec je sbb dec imul test cmpsl popa lcall inc mov mov mov xor insl or push mov subl cli jge lods mov jno sub xor mulb jae push and jne dec popf pop lods mov or push and mov testl pushf mov cmp enter mov xchg jecxz pushl (bad) lea dec pop nop cmpsb xlat into cmpsl and scas add xchg sbb add outsl js mov push testb jne cmp jnp pusha push xor into sub xor jp cwtl push jne inc mov call popf push push jne push mov mov fbstp mov stos hlt fneni(8087 xor adc imul xor mov aaa loopne test push sub sbb leave pusha add xchg mov sarl fsubr fcomp adc xor out xor or out dec sbb lea xor add mov pop adc lahf pop andl imul bound pushf mov pop dec rcl jge xor cmp and push movsl pop stos mov xchg jp,pt cmpsb adc add dec or push or cmp pop mov adc fcmove xchg sarl push scas mov fcoms cmp xchg push sub in sahf inc mov mov and enter dec inc cltd sarb mov add cmp push inc xchg inc push ja push lcall subb stos mov mov push aaa or and fnstcw jle ja xor decl or lcall and jle (bad) xor pop movsb divb stos lea xchg push sbb mov call (bad) dec movsl lds dec dec (bad) (bad) xchg jle pshufw sub jae and xchg scas mov (bad) mov gs and inc mov out jge cmp rolb imul sub loopne lcall cwtl lret call nop ret jbe jl fs xchg sub fs jecxz fwait and orl sub or pmulhuw sub xor rclb test dec dec jg pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp mov sub aad cmp sti jo jb in adc and andnps jbe fcmovne xchg or movsl sbb xchg xor sub mov lret fnstenv daa or scas or call stos jge out add fmulp aad inc enter out pusha dec icebp cmp rcrl (bad) ja xchg movsl inc mov imul lea add shr jg sarl mov cld mov in aas xchg test xchg ficom push pop xor sbb int3 ss bnd inc lods movsl (bad) sbb sub jno mov and pop roll cltd je jge pop xchg xor test sub dec xchg jge sub jmp or jg jmp arpl cmp and (bad) mov push add popl lods cld mov sub in repz mov ss jp cmp xchg out cmp std (bad) pop mov mov pop sub inc popa fdivl fmul js jnp mov cmp mov push aam jno jmp xchg and cmp ja cmp mov sub sbb movsb in data16 cmpl sbb orb dec or mov mov mov (bad) (bad) int cmp add or dec decl gs sub lea sub sub ljmp mov divl sub mov rcrl out sub imul add les in push jbe insb lods in sub dec mov push scas inc sti adc xor inc adc push mov test sub cmp or inc loopne cmp lods mov (bad) mov sbb in notl sahf or sbb es cmp dec fldt cmp mov fldenv js lret jge rcll inc cmpsb insl cmpsb in add ficomp and iret aaa mov in pop jp loop pop mov xor xlat jge enter in jb mov xor (bad) xchg movsl (bad) push cmp arpl mov ljmp insl lret push dec add daa push sbbl into stc push cwtl cli push and jnp in cs or movsl mov in pop hlt adc add out push jecxz les mov pop adc and add sbb push sti sub pushf mov out fdivs jo dec or ja mov inc hlt (bad) icebp bound ss and jp inc push (bad) xor packuswb or cmpsl add push mov fisubr stc pop jp mulb das inc push xchg jae shrl mov xchg sti sbb in push lods pusha mov sarl lahf or or cmc daa js adc xchg pop rdtsc mov xorb repnz imul adc jecxz scas fscale (bad) mov mov dec jg xor into (bad) ljmp pop mov movsl mov jo lds lret js adc xchg fidivr jae xor mov or dec push ss xchg scas and jns xchg sub ja push (bad) xor xchg sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov inc push adc lock (bad) push cmc ficomp sbb xchg xor mov xor adc mov or iret adc and call dec pop and mov in insb cs pop add (bad) and subb ficompl ret push (bad) adc pop daa xchg int mov xchg mov xor das cli push mov stos push add adc mov scas outsb test xorb test lds scas sbb pusha add xchg mov sub pop popa mov add lock inc or pop xor call mov xchg adc and out or mov lods test popf pop ljmp cmpl in xchg cmp xchg push push xchg or cmp fdivrs or insl push pop or xor int cwtl pop adc sti call subps rcll popa dec out jb loopne xor (bad) xchg js xchg pop jp in dec pop aam mov pop sbb (bad) mov add mov jno xlat inc pop fdivrl pop out int hlt test (bad) add mov mov dec xor rclb int sbb paddusb test lock aaa xchg notl lds pop insl lods dec inc inc repnz dec or pop je mov jl inc testl jge mov xchg sbb inc cmpsl add rorb inc jp pop push or cmp jecxz push cmp sub jge lahf stos loopne pusha outsb inc out xchg bound push xor rolb fisubr ficoml call aaa out jle fmuls dec xor imulb mov in jbe xor cltd mov cmp loopne jae jb and xor lock notb inc cs sti lret iret je sub in scas aas stos pop cmpl rcl mov repz cmpsb iret repz out inc ds sarl mov repnz cmp loopne lds add decl cmpsl sti insl daa (bad) divl add hlt inc mov adc in (bad) adc lcall push ja negl lahf xor shll (bad) jecxz ret xor pop cmp out inc movsl data16 test ds xchg movsl push jge add scas cmpb std adc pop xchg xabort (bad) jmp (bad) and outsb jno scas mov sub mov mov out cltd xchg out cmp fildl mov adc mov mov jbe adc push mov add pop push jge arpl xchg push cmp insl cmpsl jne cmc xlat test loopne pop cs aad pop ja pushf fwait shlb jmp in bound (bad) (bad) xchg icebp lahf movsb and sub mov ret clc or ja enter mov outsl pop in movsb test dec (bad) (bad) mov ja pusha inc mov roll inc xchg daa mov push xchg mov loop loope into xor or cmp push loope mov push out and loop movsb or adc mov dec and (bad) cmpsb in fs jns clc push into je ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor push mov shlb mov stos jge xchg mov adc or add addb pop imull add sbb add je cmp inc (bad) je jl cwtl sub mov push mov inc pop sub roll mov outsb hlt cmp jmp jne jecxz jne sbb mov push mov sub test and sbbl jnp stos xlat ljmp dec data16 bound xor xchg and push cwtl xor jo les xor xorl mov mov jnp jl adc movsl or adc pop add dec outsb cmc xchg ds xor sub (bad) cmp adc mov xor das push adc rcr and push jl adc popa fcmovu mov iret inc or cmp int3 addr16 enter je cli (bad) jmp mov or out dec mov fistpl pop xchg ror push adc test lret bound dec dec scas cli jae enter add xchg mov pop xchg mov enter cmp mov dec rorl stos fsubl cmp fldl or dec loope (bad) mov mov pop lds out jb lock in mov dec nop inc inc mov clc or push sbbl xchg fwait loope shlb xor mov adc push dec add push loope xor gs dec and xor sub pusha repnz or bound fcmovb cmpsb fstpt fcomi jl icebp xchg pop cmp repnz dec inc and jl les out loop les inc xor push jns iret xor push mov hlt pop add fidiv mov lret pusha insl sbb sub xchg fwait lcall push or push dec jecxz xlat rcrb jb cmp lds lcall hlt (bad) add xchg aad and jb add hlt mov mov daa mov loopne jae fstpt pop sbb shl xchg mov repnz pop mov adc daa xlat push jp stos lods and aad (bad) sti sbb adc jne loope pop and and rorl scas inc iret cmp xlat cmpsl clc repnz addr16 fsubp or lods cmpsb xchg pop cmp aad mov pop and and adc in (bad) repz or (bad) fbld in jge jl sub (bad) dec xor or xor sarl clc imul xor mov out jns jbe or dec push or js lahf jge xor lret sub cmpsl cltd out icebp (bad) (bad) loope test lea pushf or mov shl out dec ja mov ret aaa adc sub aas mov idivl jmp inc ja push mov inc jns loopne test int3 cmp cmpsl repnz out lcall outsb dec iret dec (bad) mov adc call mov lods movsl leave iret fs pushf jge lock orl aad data16 aad mov rorl imul mov xchg adc sbb pop sub xor mov or dec sbb movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stos loopne jno cld mov push decb ror pop mov mov jb push sub mov push push mov pop loope pop jecxz ja sub jmp test stos jle lret fwait cs insb or (bad) aas mov das push aad adc mov xchg cmp sbb mov pop lea in shr iret in push sub cwtl popf out ret and mov dec lcall and mov cmp stos test sub pop fdivl cmp test sub mov leave inc lock int push (bad) jno or imul inc cmc (bad) sti push out retw mov xor stc xchg mov push cs aam dec dec data16 iret mulb jo dec insb (bad) xlat or shrb mov push sbb inc xor leave dec inc push nop mov dec or sbb scas dec push pop orl scas jecxz movsb test ss enter and xor test mov jbe mov push sbb cltd sbb fidivl push inc sub cmp mov pushf pusha pop into cmp pushf addr16 pushf xor out push fcomip ret (bad) out add lret sbb pop xchg xor jnp add addr16 imul loopne ss xor and popa les or pop xchg sub cmp (bad) fnstenv in push out inc loopne hlt sbb aad (bad) jecxz les cmp out arpl fdivrs jne fsubs xchg lods std or movsb into ror inc cmc xchg (bad) fmuls loop dec inc cltd sub pusha push sti mov dec jmp (bad) out jb stos call lret cmc repz jmp nop adc xchg adc sub loope (bad) xchg lock dec (bad) (bad) pcmpeqb in (bad) lock xlat cmp jae xchg addb mov outsl das mov out adc sti cmp xchg ds add int3 mov (bad) push aam inc cmp gs pop jmp test insl loope (bad) xor lock cld lcall (bad) in inc aas repnz stc push ja add dec mov (bad) je call xchg mov push mov xor gs sbb test dec insb arpl push dec lret lds movsl push cmp mov shrl scas and xchg in ret cmp jne aas sub and inc adc push pop cmp cwtl inc cwtl xchg add andb je xlat mov push andl sub push push cmp loopne or notb xchg scas out push jae loope xor inc sti repnz xor and mov test in fs push xchg nop or inc jge std icebp out popa cli aad jo ljmp add in movsb xchg pop rorb and xor push loopne (bad) pop (bad) fist or leave mov push (bad) add into xchg add (bad) hlt and mov add cmpsb mov movsl out xchg ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insb push mov xor stc jl push cmp icebp jecxz test scas push cwtl mov std (bad) jo sub mov fs dec and jnp fist inc jmp das pop iret scas fstl xchg pop int3 mov test pop or daa jecxz or mov inc fisttpl adc add mov push js add and mov mov xor call xchg test mov add out imul dec or jp sub dec lock cmp ror cmc adc adc pop out mov outsl inc insl fmuls mov cld jb mull dec add pop xlat clc and pop add sub and mov out int3 aaa jmp mov repnz lods lcall (bad) ljmp sbb mov (bad) cs repz push das or push xchg xchg fdiv in loope je lea (bad) std add push scas push cmp out pushf insl inc lcall mov lods and push lahf jns and xchg cmp xchg cs push pop sub lods int3 jb push sahf sti mov out push std scas shrb pop mov mov inc cmc int3 mov and faddl dec mov cmpsl add test jnp divb pop fnsave sbb inc dec sub pop (bad) aam lcall or clc (bad) pop push loop stc cmc imul (bad) xchg add mov adc jbe push and aam jnp mov push sub add insl icebp btr iret loopne test ja jmp (bad) sub sub popf xor mov jb pop pushf aad cmp add cmc adc jo movsb sbb orb popf lret sub ja movsb jnp cli andl pushf insl mov sbb fidivr enter mov das (bad) aas inc outsb cmp or push orb cmpsl jl mov mov pop cmc in add popf add sbb mov lret jecxz sbbb add jecxz out cmpb ds dec or gs lea pop or xacquire or sbb inc orl inc mov jp push std cmp popa xchg jmpw jo mov cmpsl dec jl imul test loop leave dec sub lahf popa adc int3 pop mov in push pop fcomps pop adcl jecxz pop out push mov sti mov add dec or outsl xor mov cwtl mov xor lret sbb outsb mov js mov inc mov sbb cmpsb inc or aaa out dec leave inc xchg scas mov jmp xchg sbb cli jp mov jg add mov out inc or stc ud2 or adc mov mov in roll inc sbb push sub fsubs push sub inc dec (bad) in push push dec add xchg mov imul pop cld adc std or jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl das clc pop lock add jne and and and aaa shrl in (bad) lods xor lret adc (bad) xor imul sbb lea addr16 icebp pop pusha jne inc je xchg es pop mov cmp test dec (bad) push jl loope je,pt cli add (bad) dec fisttpl inc and sbb bound or cmp mov mov jno icebp lock inc (bad) stc mov sbb ljmp xor or mov gs sbb jne insb or insl cmpsl pusha push pop stos cmp mov pushf (bad) je test mov jnp dec aam imul pop sbb or dec clc mov (bad) mov sbb (bad) jl cmp mov mov pop pop test cwtl sbb cmpsb pop jae lods push jg jne pop push jp mov pop flds icebp movsl pop or imul ja mov and jo loop enter mov xchg dec lods mov adcl in negl out into roll outsb mov out mov add jno je or pusha outsb fisttp insl std dec test mov mov dec push jmp (bad) out push imul push into mov out vandnps out and add gs out jp mov sarb fadds fsubl cmp add lock (bad) pop cmc scas adc fcmovb roll mov in insb imul mov (bad) adc aad mov and pop lds mov dec pop and movsl outsb popa test push stc cmpsb dec xchg flds aam popa (bad) insb xchg test lret or imul out cmp fnsave jno test sbb lods inc inc (bad) mov aam push lods rcrl sub sub mov xchg pop xor cmc xchg dec dec xchg lret mov (bad) jg xor adc mov fwait test pushf das stos pop sar inc inc repnz inc sub adc or sub enter push loope repnz sbb movsb jo jae sub dec ljmp pop xor iret ja int push jle jg popf arpl adc mov mov xor pop mov ds sub pop loop adc cmc cwtl push call fwait pop sbb ja cmp xchg inc mov and dec ss insl test adc insb sbb xor scas into das xchg lods in dec add inc sub adc pop test mov ret mov outsl and xchg (bad) xor push lret push push icebp (bad) shrl xor popa xchg sti jecxz int3 xchg jmp fidiv pushf dec in cmp out dec inc ret insb mov scas std std dec sahf lock push fwait outsb adc shlb sbb add cmp imul in addr16 jne push xchg or lods mov movaps cwtl in jns dec mov cmp mov cmp xor inc aaa inc xor ret out xor mov arpl adc cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec int3 and in in sbb dec mov mov mov arpl or pusha call dec sbb (bad) and lds xor jbe fstl (bad) adc cmp mov daa fistpl fisubr xor mov je push or mov mov in loope or pop aad pushf out or iret jo sub movsl mov push dec div repz add sbb or sub cmp dec xchg mov lret or mov jle fmuls pop fdivr xor sbb mov movsl push test mov dec aam xchg enter inc push adc inc add shll int3 pop add or push arpl jnp push test cmp sub lock popa stos or pusha push pop jb sbb jp adc lret rdpmc ret cld or loopne jmp (bad) pop and dec dec and add call loop ds cmp dec xchg lods mov xchg add ret mov lahf (bad) fldz fs adc cwtl in mov pop in xchg aad ljmp jmp push jge jecxz icebp jne mov loope decb out cmp repnz jb dec nopl jb pop fdivrs dec push pushf cmp divl xchg or add push int xor push sub int3 mov pop and and xor stos add jno fdiv lahf loope lgs jne xchg mov daa add sub jg sbb add xor jbe jb mov out adc or push sub subl push adc mov cmp hlt sbb mov sbb pop fsubs push fildl loope cmp in or out cli into cmpsb into adc ret in pop je push fldenv mov pop push test mov addb pop aaa jne in pushf sub out ljmp clc pusha and cmpsb andl lret (bad) adc popf inc dec (bad) cmp ret jmp and pcmpgtd shrb and mov sub mov mov sub sub sub iret addr16 hlt test divl dec leave xor shrl add imul mov lock repz loopne jp clc sbb (bad) adc push lock xor in dec je push aas push jecxz adc push jae pop fptan xchg dec lret scas xchg add sahf sbb mov mov xchg adc fisub lahf fs imul xchg lea fwait imul pop ljmp lds clc (bad) sub repz dec out (bad) fxch xchg fdivp popa xchg cwtl hlt adc pop mov or pop inc mov rclb cltd xchg xor push sbb divl lahf mov mov dec (bad) mov mov xchg loopne mov xor mov pop or jle pop mov sub faddl rcr push jae out and or fwait repz cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb push popf xchg addr16 ja es push ss iret cmpsb pop mov lods imul sahf push fdiv bnd scas mov sub xchg test cmp dec data16 aam dec out add cs cltd movsb jecxz or loop es dec (bad) pop adc mov xor in push cs jmp pop xor mov fwait adc cmc jge fbstp xchg jl pop mov nop repnz pusha enter jl jge mov and mov int3 inc idivl mov xchg stc movsl mov add (bad) aas xor cmp js push testl dec (bad) or icebp addl or aam and and lock ds push jns add and xor sub int3 adc jns xor lcall aas cli xlat xchg stos js gs js scas fs mov (bad) mov jp adc xchg and (bad) jo scas repz mov dec mov fdivrs nop xchg (bad) push sahf stc fsubr ficom sbb daa pop orb fs cmp mov push jb add test or or add lods pop cmp adc movsl in add dec in ja imul jb sbb xor in repnz and lods imul jmp add push fdivrs fxch stos lock ja push aaa je mov leave cld rcrl mov std add pop xor aas pop mov inc xchg ret mov lcall dec outsb (bad) pop inc sub cmp daa xlat pop popf stos aas sub xchg inc push pop pop (bad) pop addr16 out fs inc or sbbb dec push aas mov loopne push mov add aad scas aaa xor mov mov xchg in (bad) fcmovb adc mul jg xor aad outsl adc cs out lea fwait cmp jno jmp int3 cld into (bad) jo pop incl xchg lret cmp add sbb cmp inc mov das dec cmp cmp ss mov xchg xor shl insl cmpsl imul pushl inc and fwait js pop cltd ret xlat push cltd sub inc mov nop (bad) mov mov fisub movsl pop and mov and jns mov ret insl (bad) cmp jl sub push xorl push pop arpl jecxz pop inc nop mov mov loope xchg cs jl xor pop bound leave repnz pop (bad) imulb lods lock sbb cli loope mov fwait inc repnz insb out call add insb movl stc jg pop lods inc lahf fsubp sbbb adc push cmp adc das movsl ljmp out xor mov (bad) push pop fcoml cmpsl divb pop mov mov dec jecxz push stc sbb inc mov inc lret sub jb xchg xchg stc cmp add jae popf pop dec sub sub out loop cmc mov or push xor leave sbb cmp adc dec insb xchg gs mov jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos inc (bad) adc int3 inc and mov hlt add pop add or addr16 cmp jp push or cs scas cwtl int mov mov gs add fcompl std dec mov mov ror int3 in or add adc mov addr16 inc pop or xchg test test mov xor jl andb jle sub mov (bad) hlt pop movsl das mov jns mov mov xchg or negb mov and outsb (bad) push es inc and call cmc inc mov inc and inc int mov test xor xchg push ret xor flds adc mov pop xchg outsl out test shrb rcrb push sbb call adc push push lahf or pop add sbb test enter pop xor push or fisttp ret mov (bad) out jnp ficomp cli lock hlt or dec xor mov adc sbb ret pop outsl in mov add ja imul out and mov and xor push adc shrb inc pushf cmp xchg mov movsl cmp pop sbb bswap pop aam imul mov aad push out aam mov and fmuls adc (bad) mov jmp adc jnp mov jno cltd (bad) cmp loope add popf inc mov dec (bad) jb xor test jge add clc add idivb mov out dec add (bad) xchg movsl mov push int jmp adc pop imul pop out xor mov mov movb xor dec sub cmpl pop dec xchg jmp xchg call sub sbb mov mov cmp out xchg adc ds lods cmpsb addr16 fistl or jns xor fcmovb pop mov jge dec icebp stos (bad) popa xchg lods mov push adc push pop scas sub (bad) pop (bad) mov stos cmp dec or or stc jno push lea jmp push sbb out lret lock cld icebp push int jns loop or es leave xor xchg mov ja (bad) ljmp mov add aaa pause dec gs inc cmp ror addr16 roll fwait pop in push mov repz adc cwtl or pushf push xchg mov outsl in sub es sbb repz out enter cmp aaa mov shrb cwtl adc movsb cmp call pop inc repz and push xor lds aam sub cmp mov xchg sbb inc rcr adc mov cmc mov addr16 int sbb adc push mov roll and pop lods xchg mov fnstenv sar sub test outsl pop in lods pusha sti adc and dec (bad) xor icebp dec fidivl loop jno aas jbe sbb (bad) (bad) cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov pop push cmp (bad) (bad) mov mov repnz or adc cmp ret adc fisubrl pop xchg inc mov push adc dec inc test lret loop mov xchg jb shr mov sbb imul adc icebp out sbb jp pop insb icebp sbb pop pushf jle mov mov ds int3 xor and mov scas inc shlb sbbl mov xor cmp in dec nop xchg outsl sub bound push fcoms (bad) jl xchg lret inc frstors or pop les leave insl in push or push pop out int3 mov gs (bad) lret lea xor mov es inc decl sub aas out out lahf inc enter xlat pop or sbb int3 fnop jae pop and push pop lods aam int mov dec sub cmpsb push and push mov xorb fs adc push imul push (bad) mov repnz inc add hlt shl mov popa jne (bad) dec xchg gs and add hlt xchg clc dec (bad) mov fs cwtl adc mov lret aaa dec pop lods adc push and call cmc sahf sbb lea xor mov aam sbb xor sub mov and mul pop mov and cld or arpl sahf cmpsb scas sub cmp lret cltd mov loope sbb decl andb out push push jae inc jo dec mov arpl mov push loopne mov aaa and pop js (bad) pop aad mov iret mov lock shlb outsb and xor jge mov cld test pop (bad) lahf and ret or jne adc sar dec inc das fstpl ret fiadd into bound jo pop mov sbb cmp fidiv outsb roll into cmp and pusha fdivrp push cmpl les and (bad) (bad) (bad) dec jmp jl xchg sahf movsb leave ror or shlb mov jo mov (bad) and out mov imul mov aam adc lret or (bad) addr16 mov std and dec cmp pop push and movsl xlat aad fistpl (bad) sbbb sub xchg es add (bad) add push mov arpl popf dec gs ret sbb jg and adc gs bound arpl xlat adc cmc jns inc inc pop rol lret sub jmp sbb mov push add sub push and push inc mov je punpckhbw es cwtl cmp jp mov test lds lods and loope test andl jo sub dec into in cmc jne and adc (bad) cli pop test test mov inc cmp (bad) xor mov (bad) push push sbb mov jle nop jne ftst stos (bad) or dec cmp cld mov xor dec out add iret mov jl addr16 test lods repnz or add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp mov repz mov into pop inc sti mov movsl pop push pminsw mov stos cld daa stos sbbl je jo fsubrp mov out fs fnstcw pusha ds into jb gs lods negl (bad) in fisttp mov ret (bad) adc cmp (bad) mov push sti sub cmpsb sbb std dec shrb les (bad) jge insb (bad) mov insb in invd pop lock push jmp hlt adc or sub dec and popa xlat sti sbb add movsl sbb pop adc jg inc cmpsb xchg shlb movsb loop jo push dec lods adc mov (bad) mov pop cmp xlat test mov push mov adc pop hlt dec push (bad) jno fmuls or sbb pop iret insl cmp mull pop dec (bad) mov frstor out xor and mov sub xchg sub inc repnz mov nop pop xchg adc jno sub daa dec or xchg sbb xor cmp daa (bad) sub jae jne imul pop out pusha shrl and fsubs out or push and inc push push das sbb test dec pop add mov cmpsl popf mov xchg loop push fwait xchg sub add sar imul loopne aad cmp out cli insl cmp inc cmp or push lods lock mov push adc ror out sbb mov jne xchg cld out je xor in ja pop ss pop and and enter cltd xor (bad) int push mov lret inc sbb imul or andl aas sahf nop cmp cmpl mov mov adc std xor add inc mov movsl sahf ds imull outsl or stos scas mov sbb jg test xor add bound adc adc mov sbb repz cmp xchg or inc bound xchg cmc or in leave nop adc push (bad) and and inc mov and mov cmc loope xor mov test and sar and movsb out pusha xor ja,pt sub (bad) pop xorl mov sub rorl mov out push addr16 or sbb test push sub push or std pusha inc das sti xor iret lea push repnz ret xor out fcompl and xorb cmp test dec pop mov stos inc lods and mov mov lods js push mov lea or adc (bad) mov bound dec in mov leave icebp adc xor pop inc jle std in fcompl cmc mov sbb xchg mov pop loope add inc xchg cmp mov dec adc nop pop and jae sbb enter pop ljmp adc dec sbb test mov inc mov jbe mov xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call std movsb mov stos xlat mov adcl in test mov pop sbb push and test faddl clc dec push cmp xor mov lret mov inc lea mov sahf push cwtl mov mov xchg ss es pop sbb cmp inc divb xchg mov inc lods dec (bad) push insb sbb jne and clc jns shrb mov dec push jmp ret dec add sbb mov (bad) mov call mov enter xorl out icebp aam pop int3 ss pusha inc pop test pop mov in aas or aaa lds xchg pop imul and or out sti test add clc mov movsl sub cmp jp mov js cwtl lret xchg inc add inc insl in pop out clc add pop xchg mov sbbl js movsb sbb mov rorl push clc cmpsl rcr in jge fistl inc sub mov adc dec dec mov inc dec dec sub pop rorl pop push loopne jp fsub inc ja enter xchg dec xchg xchg mov iret dec fcomip subl je push mov test mov ss ss push cmp jnp xchg pop mov mov adc pop popf addl into mov xor jecxz les pop push xor std pop out xchg fmul in in sub inc sbb pop jo inc stos lcall or fbld int3 pushf aam mov jne pop push aam cmp dec fdiv std out xor mull pop ret xchg out inc xor xorb adc aaa (bad) xor shl lea popa out adc or in shll stos sahf xchg add mov hlt sbb push xor push xorl jae sbb cmp pop scas xchg inc lahf addr16 pop xorl lds jle mov fadds clc aam stc mov loop push ffreep leave (bad) push push sbb mov xchg inc (bad) pop cltd dec cmpsb gs mov sub movsb adc mov (bad) pop dec (bad) inc push push fcomps push pop out iret test xchg pop shrl ss (bad) rcrb imul and push jb mov pusha adc rcrl jecxz pushf dec cmp mov push hlt push sub cmp xlat mov jl arpl scas mov loop repnz ja lret dec and mov or push sbb push xor dec enter push shrl mov pop or push or cmpsb lret ficoml pop lock sbb xchg and inc ljmp lret xor je jmp mov dec repz push pop cld and je aam pop mov inc daa xchg mov push or decb inc jne (bad) fdivr in mov jns and mov cmp cmpsl mov pusha lahf imul into lret inc divl add pushf mov pop clc and int3 mov cltd loopne cld pushf int3 stos pop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc hlt push sbb arpl or bound add sub mov jo scas repnz xchg aad xor jmp idivl cmp xchg push and jnp out or pop mov mov cwtl and push pop pop pop dec and insl imul cmpsb adc jns iret int3 out (bad) mov mov (bad) cmp and sbb dec (bad) mov pop jle rclb pop jbe fimul movsl into mulb fist or lea inc xchg sub inc ret dec roll repz dec mov adc fldl in mov andl ret lret inc iret jbe mov adc push push push (bad) lahf adc pop loopne pop xchg fimull mov cli sbb dec mov or jb std outsb cmp fs xchg jge ret lea and repz cmp in xor rolb fcom arpl jle shufps mov cwtl repnz (bad) xchg in inc jle outsl test sub (bad) je std mov push xchg (bad) test cld (bad) test lods xchg or mov (bad) mov test sarb jae xor jo and loopne int3 orl mov int cltd push mov popf mov std sub popl or mov sub clc jl in out fs sub cmpsl xor cmp add stos adc mov sbb mov fistpl fs jge iret push out fnop out fwait les dec pop imul repnz rorl add xchg stos push std jecxz popf push pop adc loopne sbbl mov lahf jns sub fnstsw pop adc push or lods adc hlt mov (bad) rol mov mov out leave pop insl lock mov sarl (bad) stos add (bad) in or movsl scas outsl (bad) ljmp push mov lds jge into mov out inc fsubrl add xorb fsubrs jno mov pop loope adc ret aam add jl repnz std sub (bad) adc notb into jno repz lods in (bad) adc jl mov shl aas mov stc xchg push push cwtl mov insl fwait mov xor daa mov jg,pn dec mov inc arpl test in repz xor stos inc imul jo test das mov stc adc jns cmp or xchg ds js gs movsb test in lods xchg cmp jne inc ja pop decb mov incl sub int3 iret (bad) mov inc xchg jo pop sbb lahf mov in lea mov mov mov mov or xor push lea fdivrl imull in mov adc cmp xor out loopne lds xchg test stc or stos loope xor jo xchg ret pop (bad) pushf and lods mov fnstsw cmp loop lcall push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lret repnz loop je jno or adc repz (bad) mov aas mov jge fsts nop jns addr16 push or inc movsl mov adc outsb mov popa xor sub prefetch or mov sub jno outsl xchg je cli js sub pop xchg add pop or test adcb jb shrb inc or testb addl adc sub (bad) cmc or inc jl in fildll popa inc jmp cmp add dec bound rclb mov pop scas mov xchg mov out mov sbb jo mov jp jno sub sub pusha jo push fs fldl sub mov jbe incl push inc jle cmc jbe pop fiaddl (bad) mov xor (bad) dec push dec repz imul cmpsl loop stos cld push sub inc sti addr16 pop push (bad) arpl movsb mov adc lret icebp fstpt inc mov jmp cli sub adc test push js inc inc arpl push add or push mov rcrl adc xchg test mov sub jge jo mov gs je sbb inc js sahf sbb (bad) (bad) lahf pop in ret arpl add loopne and mov pop cmp outsb inc mov stc inc push push (bad) fidiv nop rcll xor jecxz xor jne (bad) lea mov pop in rcrl cmpb and outsb mov xor xor or pop xchg fwait mov jnp out sub iret cmp push dec lods cmc xor pop adc (bad) jge dec mov cmpsl jo (bad) sub mov loopne imul dec (bad) aaa adc cli add mov repz dec imul push test cmp test sub aad jns sbb imul push add push imulb push fsubrl push mov push and fstpl xchg and addr16 xor and mov std mov or (bad) mov out push xchg xchg inc (bad) pop cld mov jbe popf andl out xchg jmp dec loope loopne push ret testl sbb and daa or out mov outsl scas fucomi rorb (bad) repz fisttp les rclb test (bad) add inc fucomp cwtl push fbld imul lea rcrl rol movsl push stos xor in cmp adcl and (bad) push jmp scas xor (bad) loop fstp xor inc jbe ds pop sbb cli in mov xchg (bad) mov cld out jae shrb rolb ja xchg lds push push sub pop xor and imul pop (bad) sbb cs rcll arpl ret push pop pop fsts ret ret fidiv (bad) mov jmp jmp lock jnp test add cwtl xor dec (bad) jle fisttp inc jae cmpsb xor shl jbe jge arpl jno pusha sbb fwait mov fsubl add cs les enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub sbb mov dec mov test dec subl int3 and (bad) jnp and jno push out mov popf sub test cmp movzbl xchg sub sbb mov xor and dec xchg inc pop jg inc faddp test mov pop jae repz stos or ret (bad) ja popf mov push out ficompl mov mov mov inc jb dec xchg stc fadd (bad) (bad) fldt jbe mov fimull cmc fwait cli std pusha cmp jns roll jno aaa cmp push js inc and pop mov add call adc (bad) xor jo rorb xchg push mov aas xchg dec lret (bad) sbb popa cli lock test test and rorb jae fucomp (bad) cli stos test adc add out xchg mov pushf mov xchg aam pop ret pop mov lods adc js scas or rcl ds push std ja push jge mov repnz jecxz imul pop (bad) jbe sbb jo jp fs enter and mov mov sub and les pop mov popa in pop movsb sub stos xchg mov in ja add fstpt sub xchg mov pop roll pop loop mov fdivrs popf cld mov in (bad) mov cmp out xor push aad jb aas push mov jmp sbb loop loopne imul and cmp movb add mov fs sbb mov dec mov (bad) int3 fistpl lods sbb pop sarl mov frstor (bad) aam test sbb cmpsl mov adc cmp rolb mov jb lret cmpsb mov (bad) scas enter pop (bad) les lahf daa fcomip sub (bad) out clc dec pop push in push cmp fisttpl mov pop mov add and push ljmp lcall fcoms mov insl cmpsb ss test (bad) jl xor sbb out push pusha cmp push std jno jbe dec iret dec sahf xchg inc adc sbb orl scas push (bad) outsl mov jne fsub repnz mov push push mov lods ficomp notb push test in dec (bad) idivl test out inc iret (bad) fwait stc sub popf and xor fidiv data16 addr16 rclb mov ret lods sub xorb outsb popa or mov mov scas inc pop jbe sub movsl sub lret pop pop sbb call mov out movsb out loope rorl sub adc test add add fisttpl in cmp dec je lods or (bad) cmpl out xor adc jmp pop scas add and shl stos xor xchg stos sbb mov xlat loope movsl loope push fnstsw popf push cmp inc inc (bad) cmp out xor lea sti cs cli push fbld lret icebp jno pop dec stc sub nop int3 sahf test xchg add mov sbb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov or cmp jmp clc (bad) bnd adc push (bad) js jb add es sub loopne pop xchg mov dec mov jnp fisubrl or nop cmpsl jecxz add inc je sbb cmp mov (bad) xor sub mov jbe cmp push popa mov add cmp jp faddp inc rcrl cs mov fwait loopne xchg mov inc in xchg mul dec loopne sbb fmuls dec cwtl lds cld fldcw xor sub and pop add loope jg and xor fs vaddsubps xchg out imul cmpsl int3 jecxz cmp out div in dec pop stos lods mov mov shl mov hlt push lahf popf mov mov (bad) or rcl pop cld repz lds movsb push jp inc aam pop pop (bad) sub xchg (bad) mov popa fdivs and mov out cld xor enter jp mov adc mov add movsb mov jmp enter out pop movsb mov fwait outsl movsb xor aaa (bad) sbb popf arpl mov aad push push int sub push sub fstps cli popa mov dec ffreep (bad) lret movsb iret xchg fdivrs (bad) xor lea jg inc mov outsb and ficomp movsl adc add gs sub xchg push or je clc push imul jmp imul imul in inc xor in lcall imul mov outsb and mov jnp popf dec mull sub jo iret and cmp mov rcll sub inc ljmp sub jo cwtl ficoml dec jno loopne add sbb in push adc ds cmp arpl sbb idivl mov popf out loopne in sub mov pop mov mov enter pop idivl adc loopne gs xor lcall jo clc adc fld stos jge xchg rcll sarb dec std cmpsb (bad) cmpsl cmp das loope cli das or lret mov cmc icebp and xchg ret or iret test or push jmp pop push push (bad) aam mov adc arpl inc aam pusha and icebp adc into cmp sbb cmp bound sub dec pop fwait loope sbb mov add mov mov jecxz xchg enter adc les lods inc jbe dec add gs adc push xrelease push dec pop jle mov fwait (bad) call mov (bad) (bad) xlat inc inc xchg cmp lea xor stos pushf mov outsl mov push aam pop in lcall add loop pop add lea loope cmp int hlt fstps in dec jmp repz jno (bad) icebp fildll and sbb frstor pop jecxz adc cmp mov pop lret push mov xchg mov xchg push insl ret (bad) in (bad) das roll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int3 sub insl (bad) fnop mov sar xor stos in nop (bad) mov pop dec insl xchg sub and frstor dec mov dec mov jmp into popf inc bound shlb enter cmpsb popl int3 push and push pop faddl lods loope dec cltd jp mov popf mov mov es cli adc push (bad) xor imulb push ret xor inc push pop (bad) rcrb imul jae test cmp pop ds pushf stos sbb out inc xorb adc inc jbe,pn out push mov pop dec (bad) lret mov and and jge add inc adc adc iret sbb push insb setns scas mov cmp imul (bad) sbb xchg (bad) xor in repnz out and clc dec cmpl aaa adc mov rcl adc xlat lock (bad) mov sub push push stos jne fnop xor mov pop jecxz mov mov jae pop mov mov out (bad) sti cld fild lcall fsts ljmp jmp movsb mov sub mov xor mov add into jle outsl xlat sbb or popa test inc jmp mov sbb loop fsubp mov push sbb mov xchg sbb xorb std jg push fisttpl popf jns fidivr push adc sti popf popf outsb aad pop test mov stos and sub lret mov popa xor push nop mov popa or das fiaddl cmp lds repz push sub fild stos aas insb test stos xor add repnz dec scas (bad) (bad) push movsl mov std aam jle mov mov hlt das inc cmp cld int pop xor mov cmc leave add mulb ljmp flds inc aas sub dec xchg out aaa sbbl rclb cmpsb sub push imul outsl add push cltd sar mov sbb scas ficoml stc aaa imull loope pop insb in jo mov cli jl test in pop dec mov push mov add shrb mov sub and jge and jmp outsb ljmp mull hlt cmc cmp ljmp fdivp adc push push loop clc mov out and mov push inc sar gs cmpsb dec gs adc xor mov inc subl aas lods data16 jns in xor xor inc cmp mov jle test sub xchg ret cmpsb pop outsl jge mov je xor dec and sub lock push xchg lods mov shlb or and (bad) push xlat test push clc mov adc xchg aaa (bad) adc inc mov nop sbb xchg xor add mov imul and pop fwait push (bad) adc aam nop js incl outsl cwtl pop push xor jp fld1 fildll mov aaa sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl loopne mov inc pop fcom jnp lds jmp xchg (bad) fmull xchg inc cmp mov xchg cmc fsts pop xchg pop orl pop iret jp pop dec xchg sub (bad) pop adc aaa adc inc frstor les dec icebp (bad) adc mov mov dec xchg fistpl cmpsl or mov adc cwtl fadds loop pop iret int sbb cmc cwtl fwait mov dec rcrb push xor ds lds xor out (bad) jnp popf cli pushf dec dec mov pop iret rclb pop outsl imul cmp loope leave jae fldt pop repz xchg mov lahf iret scas pop add int popf pop xchg aaa add lds icebp js jl xchg mov xor adc mov or fimull fmul mov jle inc dec jg xchg (bad) insl cmpsl inc pop cld sub inc cmp add popf in sbb lea xchg call rorl pop out push sbb fwait jge and sahf das cs addr16 aam fs add test lods (bad) in arpl and mov lret repnz sub (bad) int3 or sbb add or daa fs popa idivb add movsb (bad) mov mov call outsl loope movsl loope rcr push mov cli dec inc cwtl fnstenv mov idivl sub mov pop cmp jnp subb pusha hlt into pop cmc jge jbe std mov pusha imul push inc or rorl cmp (bad) in mov xchg out lea or in or fidiv sub insl jno out xor xchg xchg stos cmc icebp pop cmc dec sbbb outsb mov (bad) into mov cli rolb jmp jne jae roll in pop sbb loop jae push dec test pop lret cld jecxz adc inc leave aam ja pop push rcr fldt inc mov cmpsb add mov into push jecxz push fdivs fnstcw jecxz add pop xchg jno push cmp in cmp sbb jb push jmp mov (bad) inc jae mov adc icebp xchg jb adc pop data16 jg pop dec stos inc pop adc jb imul (bad) cmp mov fsubl push stc and cmp or sub rcr pusha add loope out (bad) jg (bad) in pop in dec and bsf dec ds nop loopne aas mov dec push dec pop adc test jb and mov mov loope outsb or xchg cmp inc xor xchg mov lcall stc inc and rorb nop and xor jle icebp cwtl les pop xor into mov cwtl nop lock xchg je cwtl mov scas jge repnz sub xor in fcoml sti jl in xor add push xchg mov mov push cld add xor imulb mov leave es pop push outsb lea add out and pop (bad) lret dec popa cli int mov jbe mov jge xchg (bad) xor popf or xor rcll test bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fisubr sub gs mov sbb push push jns push mov mov mov xchg mov xlat std lcall adcb and cmpsb iret sbb mov sub js sub adc test push push call mov xchg jecxz imul ja or add mov iret xor mov push js pop jecxz fbld (bad) negb fldcw cmp mov stos xchg nop inc data16 lods test push xchg test mov adc mov mov mov fcompl in call or or (bad) mov lods mov mov sub nop push pop sub aad js jae adcb sahf (bad) sub cwtl mov ljmp stos ljmp mov jnp cmp and mov push hlt pop aad adc hlt sub shr orb mov movsl xor sub dec adc lret cmp dec add dec sbb sbb sub push mov mov jge (bad) jle dec js jp cltd gs push jno pop mov add out push sti popf (bad) ds pop call ljmp xor mov insl add icebp popf test mov movsl jecxz notb nop inc sti test in repz jbe add pop jno rcrb dec repnz sub cli int3 jl repz pop lea jecxz add popa jle into imul xchg scas icebp jmp pop and scas mov mov dec in (bad) mov dec and fild mov jne and test fimull addl daa mov pop pop dec inc stos (bad) sub into fiaddl pushl cmpsb pop or pop sub (bad) jns rcl pop cli leave (bad) jae push (bad) fadds xchg andl mov inc mov ds inc (bad) call mov (bad) push cmpsl mov mov mov mov sub call jo out cs aaa push negb mov sbb (bad) mov sbb mov aam inc push insl push test sub outsb pop mov mov in mov add xchg shr xor push sub lea push jo pop xchg cli xchg mov or mov xchg pop sahf lock dec dec and ret out cli pop insl bound jne shr push dec test mov js insl insl stos lods push sub aam scas xchg inc (bad) testl je insl sub or loopne or mov pop push test in rcll mov jp push sub xchg sbb mov int3 stos sub mov fildl pop pop dec push cmpsb sbb outsl sub nop sti out and pop rcrl mov dec mov std dec xor jne jp sbb mov inc cmpsl pop pop int3 xchg pop iret sbb rcrl jno in pop jne or mov hlt add push dec sarb out adc xchg sub xchg fdivrs jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc mov add jae push mov je lahf imul dec sarb mov in sbb and jp stos call adc add negb jl jge cmpsl pop pop repz shl in mov push aad jl and lods push sti outsb fsub (bad) ficomp icebp push add jae mov out call fcoms dec pop in jmp rorb mov jnp inc mov pop scas mov jnp repnz out ds mov mov and int mov or jmp aaa inc (bad) outsl and mov dec inc lret jmp and push enter imul pop jge jnp jno out or xor insb push push mov sub mov pop (bad) sub add mov aas push xchg movsl aam in push gs mov ret lret push pop push outsl addr16 (bad) inc shrb and jge pop xor xchg add pusha enter dec popf inc pushf hlt lds sbb loope dec sub aas fnstsw cmp sub roll jbe jne std into inc sbb mov pop je cmp (bad) mov sub fisttpl sub andb cmpsb adc cmpsb push and mov sbb fwait mov gs cmpb mov clc sti test cmp or pop jae das mov pop call aam sahf (bad) jl (bad) dec insl or popa sti pop in std ret xchg in sub xor cmp dec fwait loope jo dec adc adc adc neg sub push lret (bad) ja mov inc mov push or pop cmp (bad) fucomi pop or xchg adc cmp inc cld adc cmp dec mov xchg daa mov adc jg mov jmp mov sarb outsl fs mov jle jnp cltd xchg cs jo daa sbb sti outsb loopne and xor mov dec lea adc push addr16 push sbb add xchg mov pop cltd clc xchg int lret movsb cmp stos lret mov xor mov aam push imul clc push (bad) mov out cmc jp dec sub pusha cld or ror push stos pop mov stos inc aas jmp jl fldl and mov sub out sbb imull and and lret mov push out jmp mov ret jo xchg notl and (bad) jno cld xchg pop push decb loopne lret inc cli pop add push adc jl adc sbb out mov pmaddwd mov fmull jg cmp push fsubrl test sbb push or test sub cwtl mov pop xor sub sub aam or push adc sti xchg push inc or test imul push movsb mov js (bad) jmp imul sub in dec ds cltd (bad) adc loopne (bad) jg test into fisubr jae popa mov pop ret jecxz cmp cmp jns cmp sbb add fsubrl fs jb dec cs pop in fwait dec xlat cmpsl adc and data16 ret aam adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub mov nop outsl pusha rorl pop xlat (bad) mov int push xchg fs aaa orl cmp (bad) jg pusha jecxz mov jle mov or cmp popa xor out push pop dec or push sbb ficompl push pop jns and in sahf test into mov inc mov cmpsb mov xchg mov xor xor fsubrl xchg js jb push inc out call or jmp sahf data16 mov push pop pop icebp jl push mov mov push loopne lods aaa aad cwtl pop xchg movl in aam jnp and pop mulb jne xchg jge mov movsb clc ficoml out pop push dec jb das xchg dec or xor dec cltd push or loop sub and push cltd push and add add jbe mov pop (bad) mov adc std scas or xorb sub mov cmp icebp or test push adc rcrb jecxz xlat and iret xchg enter mov sbb or sub mov mov cwtl je int3 sti mov and push mov sbb ja outsl cmp sbb test ss dec push cmp inc mov pushf and mov outsb sbb rcrl sub sbb xchg add jg fs (bad) mov test cld lods xchg mov cmpsl mov sub pop mov fcomps ljmp mov xchg (bad) fildll push add lods push out imul mov pop bound adc push mov or or and mov inc out add rclb xchg mov mov adc cmp adcl adcl out outsl jb jmp xchg cmp mov mov adc dec adc cmpl sub repnz (bad) scas aas cmp xlat les jb (bad) jle arpl loopne,pt aas jo insb push insb inc sbb cwtl add and xorl lret iret adc add push les fs mov and enter shll bound mov lahf inc inc jg push roll repnz add mov dec pop pop cmpsl pop cli int3 lahf dec cmpsl mov data16 fwait dec fadds mov cmp pop and cwtl or xchg pop in sub jo test inc sub pushf ss mov push xchg sbb cmp les or mov sub and cwtl lcall add (bad) scas sti mov js mov xchg adc push divb mov fs scas sti add inc pop dec daa out scas mov test stos arpl pop cmp push cmp data16 push xchg mov cmovae mov scas sub or sub jge sub pusha cld fcompl cltd jl jbe push or fldt cli push rcrb add (bad) popf es cmp xchg rorb xchg sub mov pop inc stos stc or or sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub cs mov sbb and or ds lahf stos cmc cmpsb sbb dec mov cmc std aas pop adc out nop sub lea inc arpl movsl and or das repz clc arpl mov sub jge xchg leave repz shrb sbb or fsub dec xor and pmaddwd xchg or add xor shrl push cmpsb insl jmp ss push dec imul into rcrb call loop jmp rclb pop imul cmpsl dec lea das xor fmuls test in js xchg imul mov adc cmp pop mov xchg addr16 sbb fstps sar inc js cwtl out xchg inc cmp movsb push (bad) adc aad jp outsb rcrb mov je sub or dec clc (bad) fs andl icebp movsb popf xchg outsl and push push inc or adc outsb ljmp jnp cmpsw outsl cmp gs dec fwait cmpsl or cmp xor jbe jno adc push xor inc ljmp test (bad) sahf sbb cwtl mov sahf mov pushl movsl add rolb in (bad) lret cli xlat test inc out mov cli inc movsb lahf push fscale xchg int test nop icebp cmp xor mov sub jecxz aaa out pop fdivs loope (bad) orl in push mov sub dec dec ret mov pop sub mov sbb in shrl (bad) je mov inc mov scas lahf mov sub add loopne stos sbb out dec sti or mov add xchg stc inc fldl out or dec in fistpl aad dec cmp jle pusha mov xchg cmp mov mov in mov loope xchg jne imulb cmc es gs (bad) push mov ja dec mov mov and out or push rclb call sbb xchg setg cmp jo test push fsubs sub aad in repz xchg lcall add mov sbb aad push out std mull imul out and sbb jae xor mov or fsts mov (bad) iret dec push mov ljmp outsb fucomp add scas or stc jbe cld adc clc mov les ret cmpsl into dec jns in sub adc enter ret out loope (bad) dec adc xchg ljmp mov aad outsl pop jmp outsl (bad) add pop push jo call enter mov (bad) clc xor xor iret push cs dec negb sarl mov outsl jg adc aas add xchg pusha add mov ds mov rcrb test mov xchg dec dec pusha pop cwtl mov aam rorl or int3 mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cmpsb jle jno cld inc clc (bad) stc and (bad) mov aam jae sbbl lret scas arpl lea popa js sarl mov inc push lods lods add inc xchg sbb jp xor call xor push adc faddl or addl int3 and mov push fldl lock and leave int3 xchg out mov faddl scas out pop aam fndisi(8087 or add data16 mov sbb push and jo outsb mov adc ret dec cmp into adc cmp xchg pop (bad) (bad) jmp into xor les gs xor std imul push or mov sub ror dec iret push js sbb out out lcall dec push inc push movsb (bad) idivl stc jbe and jp push mov jl xchg pop pushf pop add stos or pop test cwtl icebp sub pop and arpl push mov shll scas mov adc fs pop dec add hlt dec add push (bad) mov cltd aad scas sbb mov out jle pop int xchg jno enterw ds pop sahf stc pusha lret ds repnz xlat scas ds jne mov insb stos mov cmp shl pop fwait adc movsl mov and xchg aad cmp push push mov dec cmc lods pop cmp or int3 xorl cmpsl (bad) aaa xor sub mov dec int3 pusha push std in dec pop orl fcoml adc dec mov sub xchg cld popa fimul mov sbb out je in inc adc cmpsl (bad) sbb xchg pop cmp adc mov pop mov test lds subb addb dec nop cmp mov inc jnp jnp repz aaa sub push cmpsb inc lahf xchg push pop xchg (bad) xchg test lock sub repnz jo mov and jmp push sbb push popa rorl nop imul and mov jg inc repz xchg cltd call icebp mov out sub (bad) outsb dec decl mov jmp mov repnz sub or or mov jb jg and in ja out test pop mov xlat sbb cld ds push fs insl jl push repnz xlat rcll mov (bad) test popf xor adc add (bad) out mov test adc mov cmp jmp mov (bad) das insb cli loop ljmp imul xor dec ret jnp mov and cmpsl inc rcl jb adc jle hlt sbb popa mov sub enter int3 cltd je add test adc shr push pop mov (bad) adc mov sbb adc xor lock dec dec inc push (bad) test es add ds pop add popf lahf pop lods stc push inc mov insl jns mov xor out es mov mov inc dec fldl inc das mov sub in pop je fcomip ss add jecxz fs mov sbb sbb push jbe mov mov into mov mov or xlat mov xchg cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp daa pop test jb je dec sub xor add ss jnp dec mov aaa shll push repz (bad) sahf inc or push sbb or xchg push jle mov pop mov fldpi sub subl sbb sbb mov xchg mov out or jge push mov nop imul aas pop (bad) push xchg sub ljmp rcll mov fsts das insl xchg or test xchg pop shrb inc aam mov ja hlt lahf adc mov mov pop pop leave jl movsb mov inc push inc sahf and xchg cmp jg sbb out (bad) push and dec pushf mov push test mov pop xorl pop aam inc sbb sub outsb xchg lret mov add inc int3 sub pop jb xchg cld lcall add jae adc dec dec jl sbb (bad) in shl and lds outsl mov mov xchg sub or sub shll fwait mov in jno and and mov popa dec jl (bad) cld sbb dec (bad) pop sub arpl lds pushl adc sbb adc push mov iret sub mov lea xlat in sub sub sarb mov rcrl insb mov imul movsb cmpsl setno pop xor out imul xor pusha inc pop pop mov int pop (bad) ficompl mov lods or (bad) jmp push mov out inc mov adc les fwait test data16 mov jl nop daa daa push not sbb mov push mov je ret std popa sub cmp lods jno aam sub enter stos test (bad) rcrb rcrl fs clc mov sbb cmp jge xchg notb push sub inc outsb pop (bad) dec sbb int lahf clc cmp cmp pop xor (bad) mov imul add in rcrl or mov mov sbb inc pop cs mov call out xor and fbld and clc mov loop mov jp rorb mov movl decl cwtl add mov add lret sub push rcrw fist data16 enter pop idivl mov (bad) cmp jns or add mov jecxz pop inc les pop lds mov test or inc (bad) in ret inc push and ds (bad) lahf repz pop add les add jecxz sbb outsb jle aad cltd sbb std in mov mov subb jo xchg dec ljmp xchg aas inc icebp cmc mulb and dec jae push call or mov cmpsl push or pop jmp aad in dec xchg mov push (bad) inc fbstp adc nop mov push je xlat adc (bad) push movsb inc imul out jecxz or mov push xlat fwait enter mov ss mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos ret inc (bad) shrl push leave mov jns xchg xchg int3 daa insl pop in or adc das jl mov dec pop ret jle mov (bad) sbb dec and push sub std xchg xor cwtl pop decl inc add rorb je daa bound push xchg sbbl sbb fsubrs lret lods lea mov xor sbb pop mov inc ret faddp jns mov push clc inc and aaa test add xor and ret xchg pusha imul sbb cmp adc popf ficomp sbbl test push ret imul fildll push jae add ret sbb mov jb test (bad) dec jmp push aam and or rcll mov pop sbb cmp lods insb pop and fs call cwtl popf push pop in vpcmpeqd (bad) dec push and lahf xchg (bad) imul xchg daa faddl pop sub or and or and sub push adc je jg pop out out cs imul xor mov adcb das sub or or lods (bad) push cmp lret insl ficompl das mov push sbb jnp outsl lahf mov ret and push pop (bad) or cmp std mov cld aam xchg mov iret mov nop sahf imul loope add push add inc dec push pop cmp scas xchg stc (bad) jne mov pusha sub pop dec clc (bad) xor jae cmp or outsb pop bound cmp lods push push jne xorl in fstpl pop inc testb aam fucomp lods les ret inc repnz xchg call xor sbb push dec cmp idivb xchg add mov mov fisubrl xor inc mov push cltd int3 and dec (bad) or jp es stc add insl call jg icebp mov cmp sub sbb dec lds fsubrs sahf mov xchg in mov push cli ja add outsb sub sbb js imul mov mov xlat jge xor lds (bad) call add addr16 popf xlat out sarl popf rol test imul push rol repnz mov inc aaa xchg jp cmc adc std cmp or outsb push or adc sahf cmc sbb outsl fisttpll dec mov cmp movsl push sbb jmp jle lcall cltd xchg jnp lods push push jno xchg xchg or jae movsl cmc mov cmc push vaddps popa inc in jb sub lea (bad) mov jecxz push fmuls cltd dec dec aad mov repz inc cs mov ljmp mov mov ror xchg mov rorl fs xchg mov push enter or in jge es pop call lds and cwtl clc cld push popa rolb adc ficompl adc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc cmpsl inc mov outsl or data16 jecxz icebp adc add mov sub (bad) pop sub or dec sbb nop test push push lods mov dec leave es flds rcrb stc xchg fstps movsb js cld int sub xchg push (bad) adc idivl addr16 push nop gs adc pop jmp add jae and xor mov dec push xor adc ror mov out enter cmpsb pop js mov (bad) xchg loop test out jmp mov fidiv pusha add pushf loope sbb jg testl mov adc aas int push pop add popf add xchg sbb push insb add outsl mov (bad) loopne es xchg push pop notb jne or cmpl inc enter pop lock pop rcll jl iret fist mov leave into jge jmp add push fsubrl ret mov pop adc and inc sbb mov das std mov sbb push insl rcrb stc pop hlt inc lock xchg jmp or sub mov enter push xchg mov xchg sub lods adc out sbb sbb xchg and inc inc sub (bad) ret cmp les inc outsl lret push (bad) rclb (bad) push lds push les sbb add jmp movsb mov ljmp jecxz jo xchg jb sbb dec mov and or jge or mov jnp cs mov aam push data16 push sub sbb into mov je jp and pop push pop rcrb sti cmp lods ror push rcll or lods sub adc mov xor jbe or mov scas (bad) dec lods pop sarb dec or xor mov ficoml adc mov lds push popa lea daa movsb ret xor or cmpl jl and or call xchg jo std popa xchg data16 mov imul fstpt fidivl push sub cmc aad jns subl jmp fcoml imul sahf in clc xchg out out ja (bad) pop mov outsb subl test mov fcoml jmp cs (bad) pop fcmovne outsb aas (bad) into push inc adc add inc out dec stos out or pop adc add mov lahf fdivrs lcall cmp and (bad) cmp addr16 sub adc fcmovnu sub push mov sub (bad) in jg fldt pop inc negb sub (bad) xor (bad) push shr in xchg cmovb lcall fsub adc lret mov shll movsl in aas roll insb lock test cmc pop xor lds insl scas push loopne subl outsb jcxz ja loopne jnp mov mov cmpsb pushf jg cmpsl imul or jl mov (bad) push loope add aad pop jp sahf (bad) adc nop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov scas aaa sahf mov les or mov dec mov aas xchg mov jecxz daa cmp hlt aaa pop call pushf push aaa adc leave outsb mov (bad) iret or insb insb push pop xchg cs push cmp lret fisubl lret mov in or cmpsb aam and cmp cmc sbb pushf mov ret test mov rcll paddusw add inc cmp mov push jmp aad sub loopne dec sbb xchg push jmp mov mov in jmp sub mov inc int3 sub insb sub inc adc movsl in mov or dec dec lcall (bad) rclb scas daa idiv mov cmp repz cltd ss xchg jbe es jb addb cld inc notb nop fidivr xchg mov push add ret int sahf jg push mov mov lcall ror lret scas sub in xchg xchg and hlt pusha xor pop dec xchg subl insl push sbb pop test xchg fcom dec xor fisttpl cmp jbe mov cmp aam push sti rolb stc jns fiaddl sub pop sti lock mov lea push cmc shlb popl std in cmp sbb lods xchg movsl stos xor mov ja frstor push enter and mulb dec add sbb lret mov in dec and and (bad) lret lret pusha dec push pop or dec mov add mov pop mov cli and mov xor jne mov mov jl in scas jge cmp sbb (bad) sbb (bad) mov jne sti jnp jno mov jmp test mov popa outsl insb pop iret fcompl subl arpl jle das scas insb push or daa dec gs (bad) out addb popf or nop xor push jge cld xor lea inc inc ret nop sbb xor out aam mov (bad) jmp adc js and imul adc dec int mov ljmp pop sub loopne andb out lods ret mov jl pop and pop jmp mov dec fadd repz pusha mov xorb jbe fdivrs std lret jno mov inc mov lret inc mov mov (bad) inc fildl pop lods int cli push cmp cltd ret or push fildl mov insl iret jp lret shll dec xlat arpl inc (bad) or imul leave je out (bad) fnstsw pop addr16 xchg (bad) rorb fwait push leave mov xlat das outsb push pop movsb xchg add xchg sbb push pop sahf pop (bad) mov outsb lret mov inc push leave mov cmp sbb les and mov fdivs mov jmp in ret daa (bad) out fucomp rolb jl rcrw mov loope lret test xchg mov pop dec into outsb js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add sub xor mov jecxz jo (bad) scas jecxz xchg sub xlat test fnstsw test sbb imul dec sub cs add xor xorl (bad) adc cmp popf (bad) or stc mov inc pushf xchg add leave xlat fiadd push sub push fsub int3 inc fmuls cmpsl pusha je mov mov dec lock mov xchg or lcall add cmp fistpl in ljmp gs mov nop mov pop sahf and jnp sbb int dec pop mov and jne aaa aam mov fisubrl mov lcall outsb mov test lds mov adc lea int jmp ss (bad) fdivrl cmc das inc lahf adc pusha pop int3 test lahf aas iret inc imul xchg adc scas mov push sbb imul adc pop mov movsl push and cmpsb push xchg repnz iret xchg mov mov or jne adc ss cmp or sti ja adc daa and cli or cmp shll inc mov js sti mov (bad) aam test inc test mov xor xor in jnp sbb jmp push add and xor out sub pop dec rcrl push inc inc fwait sbb mov dec jno jge push cmp orl sahf add cmc sub sub ret lods punpcklbw fstl int jno push mov add repnz sub orb je inc cmpsl push aad movsb lret dec mov add mov xchg orl ljmp jnp mov lods dec dec cmp enter and iret imul sbb push cmp mov mov xchg jno gs aam or pop push mov lahf pop out int in aas movsl test clc mov sbb and loope jae sub mov loope fstps sbb sub loop mov xor aaa inc xor pop mov jbe rorb rcrl push mov lret cmp pushf jge and (bad) fildl cmp out jmp push mov fistpll or in mov (bad) sarb out xlat sti ljmp jb xchg dec and rcrb cs mov adc and insb and sbb ja scas pushf stc mov arpl mov lahf fnstenv cmpsb lods in out dec mov adc or imul mov loop dec roll fstps pop cmpsl and xchg jne je outsb std cs iret lcall mov sub mov shrb sub cld iret sahf repz loop jo jp outsl pusha push mov pop xor xchg enter les in pop sub add mov inc inc roll movl mov jecxz dec xor sbb inc loopne cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sbb ftst lcall stos xchg ret cmp pop ret sbb jbe pop jbe out mov iret aas lcall pop and inc orl xchg aad inc aam imul dec mov cld leave dec sbb and mov fisttpll test jnp cmpsl stc push loop cmc mov adc mov mov cmp mov loop out rclw mov push push mov xor int sub push mov mov mov pusha xchg mov or mov lret xor addr16 adc xlat push ret mov addr16 pop fs in xor jbe fldl movsb test sub push shrl mov mov pop push movsb bnd xchg aaa clc into jp lret (bad) je xchg cmpsl inc inc pushw jmp sbb fs sub stc dec dec cwtl shl sbb lcall add inc cltd xchg push pop cld std or into mov cmp sbb test adc pop inc stos mov ja repnz je enter out fistp aad push das push dec shr jmp adc add cmpl (bad) dec jecxz divb mov sbb jno repz mov test mov mov cld mov and mov xlat push push or insl fildl sar mov negl orl into aaa xor outsb xchg sub lds sbb out cmp js aas xchg mov stos je mov in insb lock xor jne mov pop push in xchg and leave mov dec popf xlat lods add jb jno je xor jle popa ja add push mov adc cmpsb sbb ja in cwtl inc xor incb pop add cs mov es adc push inc jno pop lcall inc pop jo repnz pushf (bad) in gs mov mov add mov and jp repnz jb stc xor jb (bad) mov lahf inc faddl lcall movb es int3 adc fldt fwait cmpsl jno les mov fistp js into inc jecxz ret dec jmp xchg adc shrb cmp fwait cmpsl push pop xchg lcall hlt femms adc xchg inc push (bad) adc rcr addl es adc (bad) sub sub (bad) jo push outsb insl sahf lcall mov clc insl mov repz push push lods out lods xor movsb dec dec mov scas mov push push dec dec jmp int rclb imul push fmull mov mov dec jmp shlb push push mov ficom or or adc insl out fldt fwait inc js sbb or push fbld sbb popaw rcl scas in pop mov aam scas int icebp (bad) sbb int in mov aaa repnz iret sbbl jne pop fidivr mov mov (bad) or cmpsb and in lahf xor push push xchg xchg fucomip mov (bad) fild popa sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl into bound adcl icebp pop inc sbb fwait lds lea xchg ret mov mov ds or mov lret icebp into jno or jnp cmp popf or cmp push pop pop mov arpl fadds xchg mov aam in clc call cmp (bad) testb jne dec gs (bad) pop call fwait xchg pushf jg cmpsl dec repnz cmp pop insb xchg xchg div mov icebp nop fdivl sub xchg pop pop fbld pop mov test jmp xchg daa and jmp xchg (bad) negb dec xlat pop les ljmp testb pop sbb dec and mov and jge xchg (bad) inc ds inc and gs insb jmp dec or and in ret decb cmp add cmp cmp (bad) loopne scas dec das data16 out inc iret or insb xchg mov or das movsl loopne mov mov jp and enter push jp sbb in fwait and pop jmp cmc push sbb jmp or jne fsubs cmp add in push pop xor sarl bound push cmp xchg sbb daa and out loope hlt jb inc or fdivl jo insl pop sbb cmpsb ret add or insl enter inc jg out mov fisttpl mov jns xor mov cltd jle mov fdiv jae jg mov cmp fadd icebp cs rol enter lods push outsl xchg xor lea pop push mov test arpl mov idivl std hlt in mov sbb sbb add jle sbb dec push hlt sbb and loope pop loop pushf inc in cmpsl sub mov and das ret fnstcw es repnz (bad) leave mov lock mov cmpsb xor ja negb adc inc push adc ds xchg pop xchg lcall sti ffree jno dec xchg push xchg cmc jg push inc xchg sahf (bad) mov adc (bad) xor add mov ss aad ljmp mov aad push add arpl mov push xchg push adc adc hlt test push lret fsub jb add into inc sub movsl icebp xchg jl dec push jns or and enter jl (bad) and mov fild das xchg cmp fdivp sub or mov xchg and inc cmp mov sarl sbb adc dec pusha mov cwtl shr cmpsb lret mov (bad) mov fidivr addr16 loope fildll mov imul js add (bad) lahf hlt nop inc jle movsb cmpsb loope xlat pop insb dec mov cmpsb jle in or negl je mov inc mov add mov sbb or adc data16 sbb hlt xchg icebp sbb ja push jae add lds mov sub sbb mul cmp test insl push fwait jecxz test push in test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc and (bad) mov scas int pop out femms jge lret lock push mov repnz scas xor cmc andl test cmp in icebp xor mov ljmp mov xor xchg leave mov lret push mov jmp dec ret in (bad) sub clc jle cmpsl mov sbb pop mov jp cmp xor mov inc jecxz (bad) mov xor aaa (bad) repnz fistpl push add in jbe xor and xchg pop cmp dec and adc push sti adc aaa out and imul rolb push (bad) jb xchg jge fdivr idivl xchg jmp imul outsb ss jbe adc dec fistl inc jp (bad) fwait xor pusha insl inc ja,pt scas push gs fwait cmc and idivb mov pop push out mov les mov les fcmovnbe cmp arpl sti xor jb and in fisubr loopne pop dec clc ss out cmpsl inc mov mov ja mov dec stos mov (bad) fcom xchg push das aam test pop lods popa inc push xor and jle pop sarl sbb std and dec dec sbb mov mov adc mov jnp shrb inc mov cltd pop daa dec je inc outsl inc add ret popa inc imul jne or sbb lret mov call jnp inc dec pop or fidivrl mov fucomi xor pop push mov add mov mov ficompl cmpsb (bad) je sbb stc push jo mov jnp sbb loop (bad) cmp lret mov test ss (bad) mov push sbb inc cmp mov stc jge jmp (bad) cmp test push fwait je jl cld aaa pop icebp movsl pop fimul mov lret cwtl clc sub test out (bad) data16 mov pop fistp mov dec imul mov fidivrl cwtl mov sub mov shll mov es mov sbb cltd daa pop pusha inc xor jbe jae lea push mov lcall fcoms inc cmpsb dec imul (bad) daa test sub fiadd adc es in sbb push push (bad) mov test add push into mov out mov pop sbb cmp ror mov leave mov cmp add clc jno dec sbb stc pop pusha cwtl pop shrl xchg mov imul call mov fisub and xchg popf sar leave mov jae sarl and lods fild adc stc lcall fcmovne loop and inc sub dec adc cld or (bad) adc mov push lret xchg jae mov xor sbb lret fmull subl pop setae ja jno and pop bnd and test es shll jo mov mov jbe repz xlat dec mov cs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push arpl fsubrs and push inc cs jnp mov (bad) sbb pop adc loop mov inc or sbb cmp rolb and es mov cli add stc cli pop hlt sub insb sbb or sub and in cmp mull mov cmp lahf xor pop dec incl popl lock push cmpsl lcall adcl push inc int jne cld (bad) lret loop and push pop xor movsl fwait sub xchg sbbl aas inc rorl cmpsl and mov pop push xor add int lret and mov push (bad) xor scas xor or sbb pusha movl push sbb rol dec mov add popa xor test cmpsb out mov lret fstl andl mov das cmpsb xchg ret push pushf daa and sub or pusha and cltd mov mov rorl inc push shlb xor cmp ja jo adc xchg sub push (bad) or scas int3 push sub xchg shrb ret fdivr stc xor fsubp ds jg (bad) in addr16 into dec inc cltd lods fcomip scas and bound shrl inc cmp pop sbb les sub add std clc mov mov int3 in fidivrl orb loopne cmp int3 jle adcl xchg fwait repnz fmul ret scas xor xor xchg movsl push popa (bad) cmp xchg or lea hlt shr ret rolb cmp arpl movsl xlat jo (bad) icebp mov push sbb push or mov nop push inc push xchg cli cmpsl lods js lahf inc fbstp inc ds pop fmull mov je les cmp mov mov xor cmpsl insb repnz xchg je and sub xchg or scas mov das sub inc gs lahf scas pop aas inc push cmp popa dec enter test cwtl daa (bad) sbb popa mov inc nop jbe inc call ficompl jle das and mov mov and xor sub enter mov mov cwtl or adc test jnp xchg dec mov and fidivr and sub adc fdivrs negb repz jb xor imul mov fsubs mov popf sti fsub cmp inc js mov test cmp jmp mov push mov bound ljmp inc pushf sub sahf pushf sub sub inc out xorl and insl and mov scas xchg loopne mov cmpsb and and cmpsl pop push test icebp mov xor mov outsb and scas inc lods lods and jl ja addr16 cmp or daa mov mov sbb js adcl call cmp mov rorl aas stc sub lcall inc in js push cmp test inc xchg mov lods xor outsl cld xor push int3 or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lock loope push pusha mov xor dec stc lods dec cmp mov ret push ja xchg mov es xor mov fcomp hlt lahf cmc imul sahf push add add fwait jl lock mov lret lret sbb pop jne or adc push add cmp push mov loop enter mov sahf sub fwait repnz pop les into lcallw mov int3 leave mov inc sbb xchg insb cld fisttpl test lahf sub (bad) in sbb int3 jnp in mov xchg mov adc inc jo or mov movsl bound pop int pop insb sarb sbb dec jge sahf pop and (bad) jg push mov inc out lods les aam outsl leave pop cmp xchg clc push mov xor cld jb (bad) mov fdivrl push test cmp push imul xchg lds mov push jmp xchg mov incl (bad) dec fcompl das xchg aaa mov rcll xlat fsubp push adc data16 mov js fdivl jns push lcall insb mov add test subl xchg stos dec fwait mov cs jno add ljmp gs ljmp cmp mov movsb dec outsl or adc jle into scas ret push inc jo andl mov lods arpl or (bad) cs jp imul xchg and icebp (bad) jns dec pop scas lret insb pop cs in inc adc cmp imulb jecxz retw js cld push sar repz and xor idivb sub mov ja (bad) jb das in out (bad) rcll pop push unpckhps mov hlt (bad) inc lret xchg or data16 loope ret sti cli cli (bad) push ret pop cmp out stos inc (bad) xor divl hlt in mov pop pop add and or hlt xchg ficompl dec and xchg mov fsubrs mov call hlt lahf repz aaa out ljmp or inc andl sub aaa sti gs sbb inc ja sarl pop das pop pop xchg lcall sub imul fisub xchg jmp bound addl mov push pop arpl loop gs in in sub or aad dec insl lret dec mov std sbb cmp mov test and dec lret nop xor rcr xor jp out inc fnclex or push jmp je push mov das mov nop js pop int3 mov insl pushf xchg pushf movsb imul fdivl enter lds or inc dec aad loope pop xor lahf push adc mov jae das (bad) and pop sarl imul pop insl jmp jl lahf (bad) rcrl in inc imul dec out and mov sub mov and sbb call outsl (bad) cs mov adc lea rcr jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov fs pop loopne insb push xchg mov aad ficom mov push jae push jl out and aam jno cmp es in jg ret mov outsb mov andb sub jnp jecxz jae and jns orl adc fcmovbe nop add in shrb call sub dec push inc add aam sub in mov inc orl inc push ss push push adc ret and mov or adc fistl (bad) test cmp mov call ficoml mov js es (bad) js or cmc sbb lret add fwait cmpsl inc fist mov (bad) mov mov or ljmp dec sub adc pusha fidivrl movsb xlat or sbb data16 mov sub adc clc leave arpl inc test mov jbe mov xchg unpckhps xchg lods push push adc arpl fwait push pop sub cld dec (bad) fcompl sti lods clc dec jmp jecxz lods mov adc or mov mov adc jge xor xor data16 loopne pop mov and cmp (bad) jns outsb cs pushl ret int orb pop std popf outsb sub push adc shrl jb mov or sarb sbb mov dec je mov sub cld out cwtl jg insl cmc cmp lods jno pop sbb movsl aaa out mov loopne mov repnz (bad) addb xchg in jns je mov sti in fmuls inc mov testl mov loop and pop aam (bad) (bad) inc sub sbb xor cmp daa xchg out mov divb mov std inc loope or ds jnp divl adc loop dec in mov pop es decl (bad) (bad) dec rcrb loope push ret add jp add repz xor adc lret fildl in xchg fs pop test int push dec js pminsw into sbb and xor sub mov in out mov call adc in xchg xlat ds push mov jae jecxz jbe jmp or mov cwtl subl mov pop in rcl stc cmpsl sub mov pop dec lods cs dec push stos pop fstpl pop dec ret xchg insb inc pop pop or jecxz xchg stos cld scas nop mov or inc sti jecxz or adcb int jl loop sbb movsb cmpb test adc fsubl das in fbstp add rcrb inc into lds mov subl outsl (bad) clc add sub insl jge,pt clc mov icebp iret mov add sbb add roll xor mov sbbb mov ljmp call inc mov adc jmp aas pop or gs cmp jl pop mov cmp das hlt cmp into jb shl movsb xchg repz add in xchg mov mov outsb and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcll aaa loopne push imul shll xadd pop les pop inc (bad) insb imul mov and or inc fmull and jno jae ficomp dec mov cs push or jne lods fsubl insl repz aaa jb fildl cmp sub nop and xchg ja jne cmp jbe loope inc dec jecxz std pop dec adc sti pop test mov cmp dec (bad) xchg enter pop shrl or push in mov sub gs lock jne pop push adc cmp push (bad) lahf test (bad) ljmp xchg xchg ds addr16 rcrl xchg jne mov push adc sbb mov and int3 mov jbe or mov cmp lds rclb out pop (bad) sbb adc push out fs dec sub arpl cmpsl arpl xor push add mov jp rolb and ds jmp mov cs negb push mov (bad) sbb xchg notb mov adc xchg cmpsb xlat out mov mov dec and add cli outsb int3 mov mov fsubrs enter hlt or or ss push jl mov lret fwait lcall aas mov fisttpll lret dec cwtl notl push inc mov xlat out add call mov and push call inc inc ss repnz jmp gs fistl jmp add arpl ja pop pop push push mov neg les popa mov out cwtl ret in xchg xor stos test int3 dec jbe test in inc pop mov lock int insb sbb and data16 mov out fldl pop fldt inc in pop jb inc mov les xor add pop xlat inc adc mov sub stc mov (bad) jnp (bad) jbe sub adc jl fdivrl test xor bnd rcrb shlb xor int lock or fcmove aam into ret mov hlt xor mov mov mov xchg jo (bad) lret dec mov xchg in adc addb sub push test lods (bad) push and cmpsb jae mov clc push das sahf xor push les and push pop add aaa mov fdivrl pop popf cmpsb jnp mov ficomp xchg movsl test arpl xor sbb add movsl insl adc pushf xor push pop xchg jp imul dec jbe xchg mov std cmpsl mov mov cmp bound dec push fmull mov dec xlat loopne dec jo fwait icebp sbb cs and int jp push fmuls (bad) jae pushf shrl testb pop in xchg jl les dec sub arpl cmpsb and sub ret inc stc inc mov jb mov lds lret cmp or out fucomi popa test dec push popa mov subb scas jge pop jbe test fwait add cs aam or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov shl movsb jb clc push rclb inc sub xchg ds mov ficoml fistpll (bad) xchg mov dec push lahf sahf das out cmp jp ljmp and mov repz ljmp jno inc jo adc pop mov fnstsw pushf es imul sbb mov fwait pop sbb jmp and pop mov clc (bad) shll xor or sub rcll pop jbe out or mov jp loop push xor inc xor iret cmp shrl mov sub test or push outsb sub sub or cwtl test mov xor shrb cld outsl sub jbe mov in jo (bad) push repnz arpl cmpsb xor push lcall xor jl xchg sub test cmp push adc inc push xchg add pop lahf cli inc push out icebp mov into imul mov inc jo ds and out pop dec (bad) je andnps pusha int jle mov test jns test or popa push mov xchg fsub int3 add lods and mov pop pop xor jmp (bad) mov out mov cwtl hlt dec cmp and addb cmpsl pop shrl dec cmp cmp mov sahf push inc xchg ljmp repnz cmp or das jbe enter cmp jecxz mov pop popa call inc (bad) movsl jl sub scas divb or mov call mov les outsl ret leave iret fstps dec sub push outsb push cmp or (bad) jecxz xor adc pushl bound pushf dec lcall xchg inc push outsl pop push mov (bad) int3 clc lret push inc jne cmpl sub sub push in xor test inc notb pushf mov xchg fmull mov add shlb xchg clc in incl mov and push adc xchg mov xor lret popa out cli (bad) lahf sub stos sub jno mov xchg iret movsl sahf push pop inc push call (bad) bnd inc js inc mov int3 adc jnp jmp push pop push icebp jbe insb aam aas pusha jno cli mov lret jecxz test mov cmp mov adc and push in ss push sub imul stc loope add inc mov movsl mov mov push repz daa cmp pop push imul add notl cmpsb outsl mov mov aad inc mov add loop mov mov divps or add and add aaa rcrb push xchg out cmc (bad) adc push xlat aam scas xor mov hlt xor outsl dec shrl ljmp outsb push loopne outsl sub and adc int3 pop nop cmp jb gs jae pop add (bad) repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) movsb cmp outsl add repnz js add das or lds mov mov mov sbb ja insl out xchg xor mov (bad) xchg arpl mov inc jl xchg xchg xchg xor adc inc daa xchg push movsl lret aad jo ja test push inc aaa das fcmovnb mov inc pop mov xorl xchg pop pop mov fstpt insb mov out jmp mov flds dec fstpt fcmovnu in add mov xor leave push sub jp aaa jecxz mov mov std cltd cmc mov cmp jp ret (bad) push mov jmp outsb mov mov jno xor cmp jg sbb insl repz xor das push sub aas or pop std pop test push pop add rorl xchg repz mov rcrl mov mov or stc add add sbb loop mov cmp jbe,pn negl call mov fcompl mov jae enter and push adc jne mov mov add call pop ljmp jp lretw ret fisubr repz bound add shl or fcomps sbb pusha test push xchg add xchg jo mov (bad) cmp inc imul jb hlt jbe rcl dec push sub mov add cmc fimul data16 xchg test das sub out incb pop ja nop mov fcmovnb push fimull into push xchg and mov and pusha dec xchg movsl sarl sub jg inc cmp hlt dec icebp push xchg pop repnz and inc mov lea xorb pusha out push add mov sub inc ds pop sub jae movl add jp out imul xchg pusha lods icebp scas add out or inc insl test pop ficoml pop xchg pop push add inc cmp ror je mov inc push test adc jno xchg shr orb pop cmp push xor data16 mov push mov ljmp std jmp sub push scas dec mov xchg daa pop lahf test mov sbb imul push cli cltd stos or jp in sub call sub adc xor sub pop loopne cmp in iret rcrl adc lcall fidivl or out mov (bad) or inc sub lret pushl fistp fdivrs xchg pop fwait mov pop int dec ljmp lods sub adc sbb testl ljmp inc sbb shrl mov or mov int3 jo into insb xor adc pusha shrb xor push fild stos rcl mov cwtl frstor lock jo pusha (bad) cld push arpl sbbb out mov sbb test adc (bad) and jnp inc ds fisubrl inc repz xchg dec push out mov ret mov xchg mov lret and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in je hlt xor imul pop xchg lret mov and cmp jmp iret loope pop mov stc in push stos push dec fdivrs ret xlat into in into sbb (bad) jmp sub sub push ljmp xor cwtl mov xchg mov lods jae sub and and inc loope psllw loopne xchg lods adc mov inc adc jg mov mov push sbb popa mov mov push repnz sub daa (bad) xchg xchg mov sti push adc les fldcw loop ds ret test mov bound adc push sbb and repz push mov fldenv mov mov dec loop mov int3 and mov (bad) (bad) jo push popa aaa mov cmovle cwtl popf pop aas push fs mov push sahf inc mov and arpl adc lret pushf aaa mov (bad) xlat fstp inc mov sahf andl push push movsl push mov jp inc inc nop ss pop fmul fdivrp in xchg in jge imul icebp inc push pushf (bad) inc jp dec cmpsl sbb inc xor jmp or ror aas (bad) es sbb and mov sbbb frstor mov pop add xor inc dec roll cmp ret inc sbb jnp jmp sub jp ds jg int (bad) lock idiv jnp push bnd jbe and mov dec scas add bound into sbb dec out rclb js sbb jecxz xchg lret inc inc inc add mov imul dec mov loope xchg pop cmp mov xor jns lahf es or mov fsts xchg andl pop inc xchg add jge rcl icebp aad roll cmpl lock sti lock or inc mov adc xchg xor cmp outsl push aad pusha sbb mov xchg fs ret mov inc test in dec (bad) (bad) or fbld scas cmp and mov lahf insb adc and cmp daa lods or xor andl and push sub pop add addr16 test std ret mov push test loopne or stc push (bad) aam mov mov xchg vorps ret sahf cmpl sahf xchg dec shld popf fs (bad) sub jo sbb xor ret adc (bad) xor clc jns jmp ljmp pop adc mov xchg stos cmp dec jo clc and jp (bad) cmp cmp mov ja pop ficom repz mov mov inc cmp xor das pop cmp dec mov and xchg mov sti sub and fidiv mov mov lds ss and fwait cwtl push les ret push popa mov imul inc sub out inc xchg std sub push or jb (bad) mov (bad) cwtl xor xor xchg rorb push cmpsb mov sub jo sbb or push loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc leave pop xor jl xlat dec ret sub jmp lret cwtl sti sahf ss ret pop jle mov mov jae jecxz cltd mov cmpsb push mov std ds mov popa jp dec jbe jne ret fdivl dec popa jnp or (bad) jl add andl jp mov cmp xor fwait ret push jmp imul inc cmp pop xchg icebp xor mov mov loopne jo mov mov std ja addr16 (bad) jb ret xor adc xchg fcmovu cmp lds insb xor std imul cmpsl in cmp and divl pop sti cmpsl xchg mov pusha xor push add xchg loopne les jnp cmp inc (bad) ss int movl xchg sbb lahf out sbb push out sbb add mov (bad) xor rorb outsl les out stos sub jo stos loope (bad) or pop mov cmp ja insb mov ret inc xor dec cmpsb xchg lods shr inc jb (bad) gs xorl and adc mov or adcl add push push xchg nop call cmc enter cmp clc inc jb leave cmpsl lea pop aaa pop mov fsubr out sub fcoms stos cwtl mov shrb or jno fisubrl (bad) mov jno push or jne inc sub mov imull daa test pop pop and mov push lock mov addr16 mov push pusha mov mov xchg or iret adc or push inc dec fiaddl dec loopne daa jmp mov adc sub sahf push mov add lret out hlt inc aas icebp lock pop or roll push lods sahf pushf lret test push pushl mov (bad) fmull imul jecxz ja fldpi cmp push pop js imulb iret push or mov fs sub repz or out inc xchg push push xchg std in push (bad) gs jmp push jb ds jns int xchg call ficom lret mov div enter enter out out jbe movsb ret in shlb test cs jge les loop sbb jo loop stc lods fs fs and ljmp push ss scas sbb movsl mov mov ss xchg lret orb outsl sbb cmp inc xchg enter sbbl adc adc icebp out cld xchg clc arpl call push lcall out rclb imul fnop and out mov cmp shlb push movsb inc ljmp dec xchg nop (bad) jp nop jo daa (bad) scas mov loopne iret call lods rclb and or shll sti lahf ljmp loope movsl add mov dec adc fcmovnb add xor push inc dec aam xchg loop mov jo ss pop in cs mov cli idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push and mov sbb push inc mov popa in jp hlt negl inc aas xlat xchg pop or dec push cmp add pop push in bound stos mov inc xor add xor push (bad) xchg push mov clc cmpsl je sbb stc shlb adc mov jbe inc shr scas sub add inc fbstp mov xorl jb movsb insl pushf xchg out test xlat pop adc dec push or je sub repz pop mov and push (bad) and mov mov jmp arpl jne jnp lahf pop or repz dec mov and sahf iret jno cld cld or (bad) mov cli and cwtl aas add aad xor sarl cmc rclb jo shlb mov push or fwait insl lret bswap sbb inc in mov loope loop mov and add test jo in jns enter and rclb in fwait jbe dec and push insl push daa sub stc pop bnd sub mov sbb xchg enter aam push imull dec (bad) and ja jb sti dec icebp imul (bad) xchg cld xor sub iret bnd pop add dec cmp cltd add inc cld pop stos push sub cmp sbb ret or stc hlt outsl mov je pop std test bound scas jmp pop mov cmpl stos pusha jne (bad) loopne fs dec data16 ret mov inc mov dec and inc test mov jmp xlat sub pop aaa fidivrl out xchg rcrl sub std notb mov mov cld dec and mov or leave or mov lock gs mov cmpsb test fs or jge in (bad) aas cmpsb xchg mov fs scas mov roll cwtl in cmpsb aas jge into nop out push fisttpl jecxz loop cld pop push clc mov sbb push push inc mov das cld dec push xor jp sbb inc sub pop icebp mov inc negb bound sbb inc test or test xchg push mov xlat push cmpsb mov push mov sub imul sbb push and dec add aam rolb repnz inc jp fucomp add add test push sub mov repz outsl xor sub jp sbb les cmp stos pop sbb and adc sub fisttpll mov xor pop nop sahf mov cmpsl mov ljmp inc sub in das ffreep pop inc (bad) loop pop mov (bad) cmp fistp xchg xchg stc ret ss (bad) pop scas leave aad jb in iret sbb gs push negl leave mov daa daa out mov mov jbe lahf out adc jle in sub xor dec loop and fisub js xor or add or lods and popw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivp jnp and es push shlb xchg lcall imul lock sbb and lcall test xorb xor test orb repnz cmp mov lock cmpsl stos (bad) jmp fisubrl mov repnz xchg clc sbb inc lret jecxz adc lret repnz icebp jne push cmpsb dec scas fidivrl push movsb mov sarb enter pop lods shll push adc out xchg lret movsl outsb sub add mov add push ret mov imul popf jae (bad) insl mov xchg das or mov mov (bad) cmp pop std ds sbb xchg scas ret add rclb pop mov aam sbb outsb enterw xchg fsubrs cmpsl fwait adc mov mov cmc loop xchg xor inc nop pop scas xor lods lods cmpsb mov jnp addb mov sahf loope in dec test ret fsubp push test push dec int3 jecxz shll cmc xchg addr16 sbb pop test xlat adc or pop xor mov subb scas into xor lds push cmp fidivr inc cmpsb pushf in inc add pop (bad) xor or xchg inc clc rol lods mul je lahf fs cld (bad) dec mov clc test fdivr lahf scas mov lea mov int (bad) xor lods rorl sbbl and push xchg push xchg or add addl sbb out mov pop adc mov lods ljmp lods mov xor leave mov fcomip and mov jp insb shlb popa push pop inc mov inc lods or inc enter fs add (bad) sub cmp xchg call and inc lret push cmp rolb pop popa or jp mov dec and (bad) or testb jmp and enter fdivrs jb push sti pop sbb fidivrl sub bound shr jnp mov insl stos call mov notl xchg (bad) aam daa lock fxch in in out aad fwait push rcll xchg jmp mov lods shrl aaa ja push sub and pop (bad) push xor jnp loope xchg adc fs and mov clc jne adc xchg cld add xor inc cld mov repz xchg jle (bad) sahf enter pop fs (bad) ss mov lods and js jge (bad) fsubrp dec or pop push mov or add dec cmpsb cmc sbb gs popa or cmp pushf cmpsl stc push test dec push xchg mov adc add jnp jnp jg loop mov (bad) mov dec call xor cmpsb lds es loopne lods cmp fcmovnbe imul test ja ficoml push dec sbb adc lea pop add cli mov negl lret mov adc clc push lret sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec pop add or sti pop ret bound mov loope mov lods jle mov int clc mov sub sbbl aaa test xchg (bad) jne ret aad mov mov adc sbb or fwait adc daa xchg shl in inc mov add pop push (bad) mov paddsb push pop mov movsb pop out xor into pusha imul push push loop fisub dec lods (bad) xchg andb test rcl insb jp push jnp adc mov les jns xchg lcall ret out inc cmp xor cmp decl int3 pop mov lea movsl mov rcl mov mov mov rcrb leave daa mov inc sbb ret icebp and jl (bad) cmc test push push adc aad push and sbb aam ljmp xchg sbb sti iret add out jae pop xorl repz sub dec sbb or aaa cmc addr16 push or into loop shrl enter mov adc xor in ss adc ja add call adc xor jnp cmp popf loopne stc test push call xchg arpl imul js (bad) or in sbb push sahf shrb jmp fisttpll adc ds lds mov mov gs mov push (bad) aaa mov or mov fcomip dec or and (bad) add add push push mov mov outsb mov push jns cmp pop or push inc nop push out jae dec jle pushf cmp test mov pop (bad) cwtl xor jle and aam sarb jnp stos mov leave (bad) in pop addr16 jmp inc sbb in cmp or lds fcoml adcb mov insl xchg jge repz repnz pop pop jne mov and dec fcmovnu aad aam push daa lcall fs sub fldl fld and call adc (bad) test mov or iret lahf (bad) enter xchg inc je xor repnz ss loopne push hlt xchg div test add popf ret sarl and xchg (bad) mov in fsubrl in mov sahf mov (bad) mov sub xchg cmp mov mov pop and shlb xchg sub push xchg xor or cmp push lds pop je lods sbb pop sbb test push (bad) test (bad) enter loop push outsb sbb jns pop cmp cld push into mov xchg jno ja pop add add push mov ret jns mov pop int mov dec in ja jnp sbb call xor mov cwtl (bad) sub xor sbb or dec sbb enter outsl add lahf rorl imulb stc xlat jmp mov (bad) int3 aaa pop sub lret adc popf add cmovge or inc stos add inc xor sub inc data16 lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add out cmp xchg push test push addr16 and sarb pop scas mov outsl sbb into jbe out fidivl sbb mov pop inc add aas (bad) mov mov pop jg inc pusha mov mov ret xor mov aam sbbb incb mov fisubrl dec xchg (bad) push arpl cmp notb mov xchg int ds mov fdivp xor jmp and jl add sbb pop test pop mov clc mov mov inc dec insb xchg lea clc push rorl pop aaa mov pop jae test xor fmull out or lahf push jmp cmpsb mov jno popf lea loope xchg xchg call push ljmp cli or std dec notb (bad) lods (bad) xor das and int pop lods adc outsl pop mov cld cmpsb test das lods lcall mov inc fisubl pop fldcw lock mov cmp dec dec jb or cmpsb push stos pop push sbb mov inc xchg sbb mov pop or jecxz sbbl pop sbb and repnz sub mov nop mov xchg movq rcll xchg es fdivrl mov or stos push insl test or sarl dec dec cmc adc fimul add mov inc (bad) hlt gs sbb jns add sbb jmp jae scas jmp jmp dec jecxz mov outsb push jo mov jno aad inc and dec (bad) cli push and and push cmpsb pop in sub pop xchg jno (bad) push mov inc jne notl adc gs cld xchg jle stc sub cmp cli mov enter jne int das lahf mov (bad) mul out fwait push lahf dec sbb (bad) outsl ljmp stc call aas insb out sub pop repnz add lret fdivl out addr16 leave inc dec adc ret cmp xor mov sbb imull adc movsb inc int3 stos mov and push push bound push stos lea test jecxz int3 (bad) inc jecxz xchg stc sbb pop cmp fidivrl popa imul lods imul fwait add cs push and sbb mov mov mov dec cmp enter popf (bad) xor mov jae rorb cmpsl cltd push jo popf lea mov sub popf out in add push push jl (bad) add inc out mov (bad) sbb (bad) jmp add xor sub mov pusha into fmul stc leave inc mov push xor cli inc adc in xlat daa repz pop js sbb fsubrs xor ja dec aas push stc lcall mov notl pop and fsts jge icebp cmpsb add xchg ds jle fnstenv adc xchg pop xorb cwtl mov xchg mov mov sbb cmp stos negb je mov mov jb aaa addr16 decb jnp lock and mov out shrl pop or mov rcll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add push sub out push and and pop movsb out outsb xchg rcll and inc rcr setle leave adc pop testl inc repz or mov cmp shrb mov adc pop int3 dec sbb bound pop in div jmp enter lock mov mov xchg xor inc xchg xchg leave mov xchg sub mov push gs dec cld imul mov in aad (bad) mov stos dec addr16 rcll insb dec xor jmp push mov jle jecxz inc test mov sti mov sub into and pop dec aad pop fimul dec dec fdivrl dec test xchg cltd in push cld insl mov stos popf std shr movl es movsl mov repz enter (bad) call or mov xor les xchg sub jge (bad) cli add push ret loope sbb lods cltd pop cmp clc mov movl fs push dec sub xor dec jo push mov aad rcll sti rolb xchg push in mov add lds sub cmp mov fmull (bad) nop lcall out xor iret fimul shl cmpsl xchg in push sbb push inc roll inc out (bad) dec int rcrb push sbb pop lods adc mov and popa loope clc or daa mov adc mov pushf mov (bad) pop mov xor add push test repnz dec mov mov fs mov mov fldcw (bad) in fnstcw fwait orl test nop fistpl (bad) rorl push repnz loop cltd and ret lock add nop xor push inc cmc mov push inc jle aam iret mov mov or and adc test scas mov repnz add xchg jns sahf xor inc inc mov jno fwait test cltd pusha popf mul nop cli mov jno mov fnstenv clc xorl cld test insb add scas cmp adc cmpsb xor push xchg aas ss xor addr16 clc adc (bad) push outsl xchg ja mov ja cltd cld push mov mov pusha cmp jecxz lock out adc mov rcrl xchg cmp test or leave fldcw jae dec or hlt xchg and stc cmp sub or mov dec in dec inc lcall js sbb or cmp sahf pop ljmp xchg ja jle shll out in mov enter inc inc pop pop jmp stos scas stc fnstenv lahf cmp mov sbb ret or decb out and sarl xor pop test xchg lock orb add loopne jbe dec mov pop jp out mov push fiaddl aad fimul rcll sub mov mov cmp pop push imulb pop xchg jmp jge and push xchg (bad) dec imulb and sahf scas cltd add and out daa pop popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc jno movsb add xlat push sbb jae or cmc cmp jmp (bad) cmp fwait iret call inc push movsb call mov push dec lds repz pop jle out mov mov mov dec jl sbb sub or jns fidivl jae sbb lds mov mov sbb cli idivl sbb inc xor dec xchg mov and fsubrs mov es shl cmp sbbl sub les adc (bad) in jl jo out inc lock ja frstor pop loop inc jmp inc cmp es xlat sub adc das lcall xchg dec add aaa fsubl cmp cmp jno inc sub adcl loope psubb in xchg nop push push jns mov sarl in rolb and aaa push xchg pop scas mov divb into loopne or bnd subl adc cmp lret inc imul dec out sub repz (bad) xchg (bad) lret rcrb (bad) push inc mov out ss cmp icebp lret rcll fsubs dec fwait jnp fs adc add icebp (bad) mov ret roll cltd enter mov roll movsl cmp std push or dec call xchg jmp xchg push mov adc fildl dec dec mov data16 shrl jo dec repz (bad) out repz clc xor in lret sbb mov mov or sbb cltd inc cmp ds cmp adc jo movsl jnp sub mov decb in xchg inc call imul pop pushf push xor ret cmp mov inc fadds cmpl pusha outsl jl loope mov sbb ss sbbl enter loopne pusha mov push push lock push js mov es inc push push jb (bad) fisubrl mov add mov add pop xchg bound mov (bad) jno insl fsub idivb enter test aaa xchg decl push mov repnz mov and mov jge rcrb roll arpl or js test out dec scas add mov repz add in dec adc imul enter jo add call push mov icebp out add push cmp bnd mov pop mulb loope push jno nop mov in daa movl in inc dec pop idivl leave lds inc imul or in pusha (bad) mov sahf nop adc cmova pop mov mov cwtl pop aaa mov push call inc test cmp ficoml mov imul jns not ret mov out (bad) popf push xor dec add gs iret mov jmp inc mov enter fidiv push hlt ret and dec jge in popf test jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insl push push rclb inc sub (bad) or dec add inc std call inc pop int3 das cli sub pop rol cli stc cmp ss jbe test pop cmp test xchg movsb movsb mov pop std in adc pop xchg inc cltd sbb gs push std xor add mov xchg lret cld xlat addl addb fadd ja inc test mov and inc sbb pop sbb ret jmp dec sub sbb push adc loop (bad) fnstsw cmpsb adc mov push add ljmp sbb and fdivrs sbb xor inc sub and cli (bad) xor cs jl cmp aas cs rol mov (bad) movsl sub or mov cmpsb mov pop inc aad add xchg mov aam push cmp fsts (bad) push inc jg stos lock (bad) iret push push xor into out jb push cltd inc out outsb aaa sbb rcll or and pop push dec subl or pop mov aas out inc push popa (bad) pop mov mov idivb shl pop xchg dec cmc xlat pop cmc stos aas jl mov cmp (bad) or xor sahf test dec cmpsb js or popf mov mov scas inc lods mov dec and pop in jns daa mov pop mov jns inc mov adc lock mov movsb les sub vpsubb sub outsl sub aam dec add scas adc lods in mov and mov jl mov push cmp dec iret scas pop sarl mov cmpsl xchg enter leave movd sbb dec push fs scas adc je inc addr16 lds and fmull je mov cmp outsb jno idiv ss xchg cmp cmp xchg mov ja std pop xor adcl xorl ljmp hlt cmc mov (bad) jbe dec fwait jno push in (bad) int3 in insl and in mov mov (bad) adc std mov add nop ds inc out mov xor mov aam mov icebp mov mov cs dec adc mov sub mov lahf (bad) mov cs pusha into or sub fdivr cmp fcmovu sub int3 xchg outsl sahf dec lds xchg and std xor (bad) xor mov adc in and lret int3 mov xor add or shll loopnew fimull imul leave push or and add jle xorl pop pop ja jmp out rorl push xchg sbb xor inc and add nop cmp dec je and fmul imul sub (bad) int3 les xchg push adc fistpll out jg insb (bad) cmp inc mov outsb jg and inc xor mov dec add or dec mov xor das push xor in pop mov and push jge mov xchg adc enter dec push cmp jge add mov fsubrl sti sti ja test nop in clc in xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ss pop adc xchg mov lret jg adcl sub sbb int3 arpl dec and scas out mov fimull or in cmp in jmp aaa mov fs cmpsl fwait inc dec mov cmp add mov lret add aaa xchg xchg mov add test mov pop in rcrb mov and mov xlat dec int3 xchg lret cmp decb inc lea cwtl and cmpsl cmp jle jp and jo js pop leave mov xorb aaa outsl cli (bad) fcoms test and ljmp (bad) insb adc imul call jbe testb aad fidiv xchg rol cli jp shlb cwtl arpl fsubr dec push push jp enter jbe andl pop scas outsb mov cmc aad lcall mov int mov dec lahf hlt jle in cltd jne data16 std cmpsl add dec lods xchg mov cwtl and or into xchg das in mov cwtl jno ja call popa in pop sbb aaa popf xchg data16 mov mov enter mov adc (bad) fldl dec in mov push stos movsb pop lock orl rorl pop xchg rcr ret divb lahf iret jp xchg jge pusha mov jns out hlt enter lods notb scas pop fcoml fnop popa les out stos out xchg int3 testl pop add cmp loop (bad) sub cwtl pusha pop leave fldcw aas inc mov aaa ret mov add outsb and add mov xchg (bad) and mov sahf movsb lret popa push xorl adc sbb jmp lahf stos mov aaa xchg (bad) int3 mov dec sub shlb in js (bad) jns sub pop fnstcw icebp lods fistpll in std jge out dec pop mov scas mov mov dec push mov hlt jl pop es movups adc push es rcr lods outsb and push cmovnp nop jecxz inc jge les data16 pop test (bad) push mov ret mov in push in into mov lods (bad) push pusha jge sti cmp inc cmp pop fisttpll fcoms pop xor stos xor movsl daa jbe inc rcl add icebp mov xorb inc push xchg mulb dec arpl mov lock sbb jecxz xchg adc stos outsb lcall sub jecxz cld mov inc cmp sub jne or or mov jb mov pop (bad) sti cmp jnp cmp adcl js add insl mov aad adc aam cli mov fs cs out in aaa das or std jb dec mov mov das pop ror sub stos mov mov daa mov sub arpl test adc aam sub pop cwtl push dec ljmp mov jo int repnz jb lret sub pop jae movsl addr16 fadd jnp movsl insl into insl cld movsl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pushf pop push mov sbb jg repz lret imul dec xchg push add sbb inc cwtl sbb ficoml loope aad pop xchg jge stc sbb push ljmp fwait dec es lret jecxz or lock mov stc dec popa jnp adc xchg xchg mov cmc test cmp push inc add add ds jle test test push fs pop pop inc lahf std jl jecxz fs push ljmp mov push es xor lock out sub add inc jbe dec imul mov add dec sbb push ds jp and sarb into outsb push shrl stc test add cmpsb and pop cmp lods out xchg push test inc jbe cmp loop movl pop ds jmp sbb les test cld dec add xchg (bad) aaa bound lock xorl push mov mov inc mov fimul mov xacquire mov inc pop inc or add xor imul imul mull cli dec cmp add jbe sub sub and (bad) xor dec mov hlt mov inc stos push out repnz and push loope adc (bad) mov insl cmpsl sbb enter jo pop mov push data16 mov cmp fstpl lret frstor rcll mov jb mov cs js jns add jge outsl (bad) cmp icebp gs addr16 in out adc and lret movsl xchg pop mov mov (bad) outsl sbbl fst lret or jno jle popf stos clc in insl lods fucom in add dec out pop and cmp mov inc mov test sbb inc cwtl push idivb add pushf cmc andl hlt pop bound bound xlat fisubrl jle in ljmp das cmpsl xor adc sbb sbb inc xchg sti lock aaa push xlat cmc mov xchg sub xlat inc jge mov popa dec push gs cmc pop sub test push ljmp pushf jbe mov mov insl out es sub pop in cltd jp add inc adc dec mov or inc aam mov repnz inc jne lcall leave lods int3 sbb dec cmpsb (bad) cmc out stos out cmp in scas sarb daa std adc leave push pop jmp mov call loopne push stos leave jnp pop pop jge les ss and xchg shrl adc sbb dec repnz and add mov and sahf jg hlt pop push je push push stc rcrb inc and inc aas dec stos cmp lahf movsb sub nop out fdivrs addr16 arpl xchg push fs ja addl stos and scas push ret lods (bad) or inc lahf mov pop (bad) movsb scas in push adc jmp (bad) or mov add push test in mov add ret je insl sub cmpsb lahf sbb pop cltd mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp enter clc mov aas fist sub add fisub aaa jbe mov mov fisttp adc mov add inc das leave in jno dec jne jne xchg jge jp jge pop movsl mov dec push cmpsb sub ljmp std and imul push jno lret into and xor mov add lret add xchg and dec jmp scas jnp int3 ds fdivrs inc sub jns inc aaa jge jl mov push xchg lods pop cmp mov mov imul jbe (bad) ljmp xor movsl or add repnz divb push sub inc fsubs xor and rcll int insb js xor pop jnp cltd test inc into andb mov bound push pop inc mov lret xchg enter imul lds lret out push rcrl cmp fdivrp (bad) push add mov mov stc les xchg ja push repnz gs fwait sbbl addr16 xchg push mov bound xchg insl mov adc add jae cmp adcl jp xor test xchg (bad) or pop pop mov and in or mov enter fstl fsubs xchg lret sub pop testl sbb cmpsl leave jp add pop gs push add adc arpl sbb hlt rorb and cmpsl stos and and mov test call sbb je loope mov sub jmp mov mov pop adc sahf scas loop dec repnz (bad) adc cmpsb and xchg mov inc mov push in test lods mov and mov dec aam xchg mov rcr adc cmpsb enter cld pop fcoms add fisubr xchg outsl lods divb aas bound mov cmpsb push dec mov mov xor fidivrl adc popw push fidivrl aaa push push adc jno sbb xor mov or jg in cmp std cmpsb mov out sub imul sbb inc repnz xchg imul out pushf pop int out jp int3 sbb aam xchg cs dec int push xor mov pop jle jecxz movsb inc lcall sub movsb fs orb ficoml cmp test in nop sbbb sti je sub pop sub pinsrw cmpsb shr pop movsl pop ficomp or cmpsl pop das mov movsl mov add and pop mov push pop or jno inc bnd loope mov and insl (bad) jb push dec js outsl xchg jbe pcmpgtw cmc test sbb adcb and or das fnstsw aaa push stos fcoml inc or aad xor mov push into (bad) rcrl (bad) adc sub aaa inc mov nopl dec inc sbb clc lret ja sbb repnz and pop sub popa inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call repz push fisub (bad) lret xor loopne mov dec negl add pop cli daa cmp jl inc jle fs scas cmp xchg push jbe aam push ljmp in xor loope add jbe es fistl mov sub sti pop or xchg negl add dec inc icebp xchg and bound push popl movsl cs sub repnz (bad) jns enter ret xchg out adc aad ret popa out jecxz shll xor popa pop les lret push sub mov (bad) push pop or cmp mov iret aaa roll (bad) (bad) (bad) xchg push repz push daa pop mov pop js mov jno repz cmp mov lea push mov sbb sbb adc sti pop outsl cmp fimull imul push jg sub (bad) je inc inc pushf (bad) fnstcw adc aad lret sub and cld adcl xchg sub push std repnz jge inc pop jne iret mov pop sbb shrl out add xchg mov cmp dec push or mov (bad) push jae arpl data16 cli xchg arpl dec mov add or push add insb pushf xor aaa popa ret sarl enterw setae mov mov cmp pop sbb (bad) incb js sub (bad) das ret xchg mov scas cmp test sarb mov pop xchg sbb aad mov mov sahf jle fldt sar movsb mov sub dec push sarb mov or lret push lods cmp test mov cli push mov rcrb mov jge jo mov idivb xchg test add fnstsw hlt cmp mov int3 scas push mov jecxz sbb repnz pop (bad) sub mov mov mov xchg mov mov xchg pop (bad) data16 push adc mov scas xlat mov sti jne add in mov (bad) pop ja (bad) xor add lods popa mov in ret and lcall xchg mov loope pop xchg cmpsb imul das or ljmp pushf adc add ljmp mov sbb mov pushf jns inc ds jo out pop sbbl mov mov aad jp xchg ret movsl mov mov fsubr notb mov pop cld mov cli mov (bad) jne cmc jl mov jecxz repnz aad push ret repz lea jae fdivrl lret cmp movsl sbb jo,pt add (bad) cmp mov in mov cmp rcl mov xor adc lahf and les rcrb test addr16 adc inc inc mov dec xlat inc pushf add inc ja pushf fsubp into or in leave pusha dec cmpsb jae xor mov ret aas das adc fcmovb xor jp mov adc xchg add add pop loopne and cld xor fs or jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp clc (bad) imull xor movsl mov adc fnstcw iret ss and ret je mov cwtl mov or jmp cmp loop pusha in scas mov bound xor and mov inc xchg pop dec (bad) divl cmp pop mov mov stos dec xor sbb in outsb fnstenv and and add or pop call inc (bad) add cmpl dec movsl lcall adc addl mov ljmp pop mov into jle loope loop cmpsl push or ret (bad) xor insb outsl cmpsb add inc insl es cmp repz push out in mov inc mov lret dec jns dec movsb dec push mov cmc nop (bad) fwait mull xchg jnp (bad) faddl lock clc mov loopne test cmp js sub popf pushf pop or shrb pop xlat jp cmpsb push fcmovbe scas sub sub mov mov add xor mov (bad) test mov mov ret mov das insl mov pop xor sbb xor daa add add sarb sahf aas imul add (bad) mov dec in xor jne adc lret sub vdivsd stos scas enter push ja hlt jbe cmpsb push xchg (bad) insl shlb mov fbld addb leave push loope insl fdiv mov lcall imul aam fdivrl xor imul rcrl (bad) (bad) out mov add ret pop xor test push sti push sti push pop or std sbb mov ret std cmp cmp cmpsb and mov mov push mov in rclb outsb cwtl adc jle (bad) mov jg into jo lret call icebp xorl or mov adc pop mov sub xor imul mov mov inc lahf mov pop shlb push cs imul inc push dec aaa mov push pop mov sbb mov incb lea hlt inc dec and push jae dec add idivb pop push cmp cmp sarb jno scas iret and lds (bad) in lea out test mov pusha adc bt dec xor enter lock or cmc scas sub add jmp ja xchg dec sbb push addl push in dec cmpxchg mov push outsb sub repz arpl out inc popf pushf iret js cmp xchg jbe leave pop dec scas dec pop rcl dec enter inc das dec jge popf xchg sbb (bad) xchg and dec in pop and and repnz mov popf jl or push inc test push dec int rolb (bad) je sahf jbe scas dec adc and mov imul adc xchg inc test adc movsl rolb mov rcr add test adc mov cs lcall sbb (bad) mov (bad) jb div jb sbb sti sub pop jg adc dec insl (bad) lret and (bad) (bad) push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov int3 pop and lods pop mov jns loope or mov cmpsb scas mov xlat mov daa adc mov pop xchg sub mov mov adc mov mov pop js and push lock cmp loopne adc addr16 add xchg in add push scas cwtl jp ljmp je mov add les mov ret popf sahf lods (bad) sbb xor jne pop stos dec (bad) jge mov jmp loop xor jle loop xor mov mov (bad) pushw leave arpl (bad) sub aas call pusha (bad) jl jo stos xchg insb mov push xchg jno gs retw jecxz (bad) and push cld sbb adc push jecxz cmpsl sti pop push fdivp sahf notb push loop or test jg (bad) stos mov addr16 pop mov std (bad) repz fild and xchg je jns in sbbl out jb int pop push lods mov jne jl mov add movsb mov mov jne add push dec in aam push mov or jecxz jne or fidivl sahf inc pop sub movsl arpl jecxz outsl mov cmpsb ret std (bad) fsubr dec (bad) and (bad) jecxz xchg sti ja xchg adc push jbe pop adc insl (bad) insb inc call insl add adc fisttpl inc inc cltd cmovb dec lret jmp jns arpl stos xlat or mov int3 dec pop mov test je inc or pop insl shr xor mov fisubl popf mov inc cmpsb dec jl cmp aaa push outsb movsl inc xchg addr16 adc fadd sub pop mov or jg daa push dec stos pop sbb cwtl (bad) pop (bad) mov scas xchg jns es mov sub fwait mov xor inc shll out pop add sbb jae int3 push push nop mov cmp and mov jns push add cli lret inc mov xchg adc pop jns js adc mov xchg mov xchg sbb jnp fsubr or xlat lret orl sbb inc or lret push movsb mov dec inc adc js clc movsb xorl push dec or jnp insb adc int xor and xchg adc xor ss mov fwait push cmp testl mov push ret cli xlat and cmp int3 cmp into test pusha and test dec or add or insl out out xchg scas mov stos inc decb fs mov xor hlt arpl push mov mov jb aam add push jne push lret cs add mov mov cmp rep mov int mov fstpl in scas fnstsw dec stos insb sub and adc adc cld test mov inc jae push add scas je ja jbe pop jmp psubusb cld sbb jne fildl enter shlb repz movsb lahf xchg arpl (bad) cmp scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas cmp mov outsl rclb and mov add xor sub xchg pop push pushf xchg mov std inc loope,pt hlt loop gs lds hlt mov push push cmp lods fmulp mov hlt mov jns pop cs cmp mov jl test mov inc jae xchg and pop lods ret push push mov (bad) adc mov mov mov les in icebp popf adc pop inc lcall test mov dec add mov and call inc xchg out mov add push dec mov int (bad) mov mov pop out pop jo jo pop mov jmp push cmp hlt push aam mov iret xchg xor xchg pushf inc jp mov push add aaa lret mov mov aaa jge sub dec sbb out lock cli and loopne add aas jae and xchg insl jnp loop add sbb in or xorps xchg mov decl (bad) fistl test inc stc fldenv loope jg ficomp pop outsl iret stos (bad) xchg insl adc adc lret xor lock mov ljmp fnsave (bad) pop insl or xchg stc jg sub imul or in stc dec pop xor ret xchg insb mov jne mov inc push out test mov inc pop daa daa inc inc lock test jg clc xchg imul inc and cmp dec and inc sub sbb adc xor das fdivs in mov fsub mov pop iret aaa sbb (bad) arpl test roll xchg repz sub gs push mov push lcall jecxz js pop sbb and cmc hlt imul mov dec loopne rorl popa clc test adc and adc lods (bad) rclb dec (bad) push xchg and ja cmp loop push std xor int test movsl cli pop call xor mov enter xor add mov cmp xor hlt xchg push dec ja jno ss cmp jle leave dec leave aam inc out (bad) jbe pop sbb fwait push (bad) or int3 sub ss jo pop sbb (bad) fdivrs out gs lcall inc pop xchg pop xchg mov mov jno loopne in (bad) or scas movsl dec sub lods mov cmp jne loopne bnd scas pop jmp sub in aaa rcrl add sub fdivl (bad) pop repz insb adc icebp or mov xor std (bad) popf pop jae notl out lock jge mov jns mov repz ljmp lock jae cmp fnstenv or mov and add imul mov mov stos xor mov push mov add cmc lods and xor adc add into xor imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push int3 xchg ret mov adc js int3 sub push (bad) jp add popa or iret std or call jle (bad) stc mov xchg cmp mov adc das mov movsl inc divl sbb ret pop hlt mov jnp jle inc mov dec cmpsb inc lahf inc iret out jb xchg fwait sbb imul lahf pop ret lret stos xchg add mov int3 inc and mov jmp jb sub outsl jecxz sti dec les pop popf push (bad) cmc dec xor mov clc sbbl adc sbb and int3 jl mov xchg mov sbb (bad) mov inc cmpsl xor call or pop std addr16 jecxz mov cltd inc scas (bad) xor ret inc nop and incl jg stos mov bound test repz pop mov dec and jecxz push pusha jne jne inc pop and jno jmp inc cwtl pop arpl movsl xchg addr16 sub enter sbb fcoml push inc jl and add jle dec fnop push dec fcoms mov and movsb scas out sub add (bad) mov out roll fsubrs mov adc add push insl xchg repnz sbb fwait aaa cmp jge mov push jmp nop xchg cmp xchg loop lock or cmc jne pop push jp pop xchg int3 mov lret leave out inc pop lds add shr enter out fwait pop negl jle outsb adc in dec xchg std cmpsb mov fisttpl jmp aaa ss orl sbb mov mov and es lret (bad) movb push add cwtl pop shll lret ja shl aam lods je ja sub lea cmc inc inc outsl es add punpckhwd cmp sbb jecxz sbb dec xchg xchg mov shl out pop mov lods and dec or mov mull dec add sub sub push nop sub or (bad) cltd cld loope xor out sub add sbb (bad) or jnp js insb pop adc xchg pushf inc pop push jg sbb jbe add or adc pop aas dec popf shr ret ret fsubs push and jo adc push leave das fadds arpl insl mov das outsl dec ficom jmp lods sbb mov push mov mov add test loop lcall inc mov mov cwtl fiadd loopne (bad) xchg int sbb movsb mov mov add sbb pop jnp cmpsb lock mov and sahf inc scas dec and dec fistl adc mov pop jne xchg nop dec xor add push (bad) mov push and dec lds (bad) (bad) adc fwait testl dec mov (bad) cld dec or shlb dec inc arpl jne clc cmp fldenv enter and lods outsb push add fwait movsl dec stos pop cmp out out mov cltd sbb cld inc sbb push es xlat cmp inc mov popa or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call orl inc mov inc mov sahf sub outsb sbb inc aam jl hlt cmp out jp jne (bad) ficom push and sbb jecxz and cli out sti nop pop test lret cmpsl jle popf sub nop sbb aam push add loope stos mov xor je pusha pop popf inc cmc (bad) pop inc arpl sbbl push pop sbb mov stos dec call cmp xchg (bad) repz mov and (bad) xor add push jbe jns dec out push es dec pop sub jmp mov sub ds cmpsb in insb pop loopne stc pop push xchg xchg jb add cmp jno push fs mov mov stc jmp movsl lods mov sti jne shr and les jecxz fcmovne push pop push call test in xchg cld mov pusha sbb push movsl push lret (bad) jne ret push cli or pop shrb ret ds dec pushf imul add les inc aad mov jae imul jnp outsl jmp out popa pop ja (bad) xor out pop aam push push (bad) loope pop negb and arpl insb cmpsb fsubl dec lods test cmpsb xor mov push int dec cmp push dec xor test sbb scas push cmp push inc jno and lret std (bad) fbstp dec inc mov and xor pop lcall jno cli mov jmp lcall out imul xchg ja inc jge xor inc es push xlat push call inc out push sub adc adc call add and sti clc mov ds push sbb cmc mov dec mov mov out out cmp mov sub mov js arpl adc jo push test (bad) pushl mov cmp ds je mov loope lret xor inc or mov xchg jg pop jns and subl gs les xchg sbb sub sub dec pop leave repz cld xchg dec adc xchg out cltd and inc notl jns in jnp shrl inc in loope lahf es in out add fidivrl mov sub lods lret sub xor add xor cmpsl push lret inc ret shlb movsl cmc xor adc inc pop jnp into rcrb in push dec into xchg daa ja stos cs pop cmp bound lods in pop and loopne jbe mov fimull push adc inc iret xlat push cmpsb popa int3 xor js sub xlat push fmuls mov mov and nop je sub lea cli shrl xchg jg mov imul and and inc mov sub pushl mov aas xor not scas enter (bad) sbb sub mov fbstp mov stos adc add popa sbb rcrl (bad) jmp sbb push repz adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov mov jecxz popf cltd add adc nop mov push push mov loope sub repz jl sbb xchg sbb inc repnz pop cmp sub jp xchg ja inc mov lret sbb sti addr16 pop fildl sub cmp sbb lods lcall add cmp outsb push add or jmp mov pop jl movsl test push inc mov lods push test inc addr16 pop xor sbb ret dec sarb push test enter fsubrs pusha mov in and ret daa adc mov or lcall test mov scas dec test lods iret loopne dec xchg (bad) loopne jb decb std sub testb cmp clc in jl pop je mov (bad) daa push adc hlt sbb pusha lea push jns inc out jp xor cmp or pop sahf sub cmc js cmp inc add fs mov push fsts (bad) (bad) jge into fcmovbe inc sub adc nop xchg shr es arpl lahf mov sbb cmpsb or and movsb ja adc (bad) xchg rcrb pusha adc cwtl (bad) pop stos call in lds stc or aad push xchg jge imul mov adc xchg fidivr jg jge outsl lods ret or xchg xchg inc sub or (bad) mov pop cmp imul lret xchg iret adc popa test out cltd enter push inc lahf inc inc jp inc ret lods lods xchg jbe inc pop dec jns jp rcl cmpsl jbe shrb push movsl (bad) jne clc xchg pop push mov mov cmp pop or sahf dec jbe inc test decl loopne rcrl cld pop incl ja test adc fcomi xchg imul lods lods dec imul push xchg cmp shrb cmpb daa test mov aas test hlt fdivrs mov (bad) sub movb sbb cmp push mov fnstenv inc sbb cmp push jnp and das movd or rolb int mov or xchg mov add in pop into mov inc xor mov or hlt mov add cmc jg imulb fldcw mov sub push mov hlt mov push cli in xchg in add repnz mov jnp lea repz fisubr insb xor iret xor mov add push lcall jmp xor cld inc xor xchg mov xchg popf or scas and dec inc fstp lods (bad) lret pop pusha add push mov pop mov add fldl and or sbb xor hlt dec int3 hlt shll dec repz xor aad fimull out out stc outsl loope inc aas inc mov punpcklwd dec xor xlat sub push sbb iret test and ds sub sub not pop or rcr movsb cmc dec (bad) and mov cli push push daa cltd push lods push or mov inc loopne sub xor shrl jmp dec gs inc push enter int xlat mov pop int push int3 (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) inc jp bts ss dec xchg inc sub fst scas data16 scas lods sub (bad) mov jae insb mov mov pop cld lds call sti sub sbb stos (bad) sub cmp test ret jne (bad) cmp dec cmpsl xchg adc and out call popf cmpsl cmc jbe inc push xchg lcallw or hlt fdiv jo mov lea sub xlat or sub dec loopne add mov cwtl gs fdivrs ficomp into push push lock add inc inc ss xor rcll inc mov insl push fidivrl inc mov scas push push sub repnz lock inc js pushf icebp std loopne (bad) loopne push xchg push mov dec inc sbb dec scas jb test je fsubs mov sub pop mov sbb inc xor and nop jns jo imul and xchg sub jb pop leave inc imul insb mov mov add mov mov je and jmp shr push hlt pop sub cmp fcomps push out fistpl push push mov mov incl scas push mov lcall lods jge and mov sbb jo lcall mov adc adc xor ljmp scas mov dec aaa xor pop jns xor aam mov aaa mulb xchg orl sub fadds insl jbe push pop in jnp call sar ja pop inc test sarl ljmp (bad) xor lahf add inc and decb in fmull in clc (bad) mov jg rcll mov in (bad) faddl int3 inc loope mov cmpb jle push leave dec es comiss shrb jp mov pushf imul dec mov xor out test lods ret ffree iret and out xchg push push fs adc xchg addr16 xor push or int3 pop sub and mov insb sar pop stc test jmp js mov aas push jmp (bad) mov out adc inc ja jp pushf xor add out jo push sarb (bad) jnp das mov ret cmpsb pop lahf inc jnp into add add (bad) in pushf pop bound pop sub push pop dec lods xor lods sti cmpsb adc jle jecxz or into adc fwait or jg or cltd xor cld cmpsb or dec xchg jns mov dec add cmp (bad) mov aaa mov nop stc rclb jecxz jl stc jbe cmp push push cmp fwait arpl adc out cmp pop mov cmc adc inc (bad) sarl or mov and xor cmp dec adc push and aam ret xchg sbb (bad) into push lret push mov xlat loopne ret jle fucomip xor notl inc add or fs push (bad) adc insb mov mov outsb jge push lret aas cmpsb iret mov fwait sbbb fdiv dec (bad) imul addr16 pop (bad) je iret add repnz or outsb sub fs sbb ret ds es xchg push test jnp or imul das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pushf shl jp cmpsb sbb (bad) leave mov pop daa cmp lods shrb cmpsb or movsb in cmp je mov test loope add inc xor popf mov out pop and pop inc pop call outsb mov hlt scas ljmp popf jb (bad) fadds addr16 xor fwait rorl push addr16 mov ror jmp loopne mov cmp imul cmp jo aam mov fcomi (bad) mov pop call hlt mov data16 jo lahf mov cmp je mov xor sbb pushf dec and fs and insb mov jg cmp sub shlb cmp loop pop jnp push dec fcos in insl insb (bad) dec inc mov or mov je jno jmp and cs cmp inc mov mov or scas adc adc insb fdivrl lea sti sbb dec sub push cmc shrb or inc push mov (bad) stc insb subl mov bound pushf jl out das (bad) jp xor ds mov mov js (bad) push jmp push imul lahf pop addr16 mov js shrb sete mov push xchg mov xor je jbe xchg sub lahf pop add cltd lds mov lcall fs rorb xor into and lock dec push into mov jmp lahf ficoml xor popl xor aam lds pop lock loopne and (bad) loopne cli stos cmp adc imul in mov movsl pop sbb (bad) fimul sub pop shl in fdivrl mov adc iret adc mov push inc inc (bad) jmp js pop jge sbb dec and mov testl xor dec xor movsb daa mov (bad) scas lods (bad) xchg cs jle xor testl or incb sub xor je sub pop add fcmovnb clc notb push aad cmp pop lock std lods inc cmp ds lcall out xlat cli and sbb lahf fmul ret jb fcoms pop or xchg cs mov dec test inc dec and rol cwtl hlt adc fistpl sub and jl into call push xchg jge int3 dec aas add (bad) xlat mov mov and daa pop xor stc add das mov cmp movsb xlat or sub mov stc cltd mov jecxz outsb (bad) es in repz jns pusha pop and cmp sub jb ja data16 loop (bad) jb scas fcompl aas fs push mov out push (bad) inc push adc adc cmpl mov xor xchg inc rcl sbb std adc int jmp jle xchg ds fcmovnu mov and je cwtl aad int jl xor addr16 scas repnz dec inc (bad) iret jbe xor lea push mov jmp mov jecxz mov (bad) cmp xchg pushf inc and xor int3 sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov gs jno lock mov mov or xor in repnz cltd imul push push inc pop mov cmc pushf xor rolb sub test inc push and adc cs mov rcrb mov loop jo and push xchg (bad) out imul sbb mov lock lcall les inc arpl xlat dec xchg lret pusha jne mov das push arpl lea mov mov mov dec gs movsl outsb mov in mov jmp pushf pop add imul int and pushf push aaa adc adc addr16 loope inc adc and inc imul and bound sub adc shrb lret inc jl jecxz push xor mov cmp popf icebp adc push xor cld clc pop outsl mov mov mov rorl mov (bad) out add loopne mov pop jge mov xchg fsubrp sbb xchg stos mov cmp mov test popa mov push addr16 sub xchg scas mov icebp scas push sti mov stc sub shlb jnp sub jg pop mov adc rol pop xchg inc imul repz cltd jb sbb mov leave cmpl jo jb sarb mov mov fs stos es jb cli fwait daa and popf push jbe mov pop add adc cwtl ret jno arpl xor call mov lods stos out inc aam push mov cld and popa add jmp and jle or cwtl aaa pop aad lock stc mov xor fwait mov xor sahf mov loopne mov outsb push fldl stos inc mov mov or push inc daa les add jae js inc ljmp lods add add mov (bad) adc xlat into jo jle mov test dec cmp push mov jg js je sub mov mov sub js push aad xor adc movsl loope xchg popf (bad) mov (bad) mov aaa sahf or dec pop adc jnp mov enter divl xchg jb add and jbe imul xor pop push cwtl call push jle mov push pop movb outsl leave sub hlt movsl lea shll aaa pop jmp and (bad) jae jns cmp and into sub outsl shlb scas pop mov inc out test mov dec xchg test fldenv imull or adc loope out or inc fwait push (bad) dec das jl inc pop (bad) jne in dec out aad imul jg stc pop xor adc or (bad) lock sbb xor add sahf and push or mov jne xchg dec icebp incl aam ret jo (bad) sbb xchg cld lds push in movsb insl repnz loopne cmc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg neg das clc jnp adc add sbb stc adc js sar aas int3 cmp imul mov inc repnz and sub xchg cs cmp xor enter inc out orb loope,pt inc (bad) out pop jae jl cli pop xchg add outsl mov adc frndint push mov xchg divb insl pop pop js mov loope in jmp bound push dec in mov inc testb ret sbb scas jecxz pop push adc and fcmovne add outsb sub in xor cs (bad) and (bad) (bad) xchg (bad) sbb sbb pop in or sbb (bad) pop mov jg lahf (bad) imul or stos inc jmp xchg sub xchg push ljmp ja in xchg jle lret test add fs pop add outsb sub loopne dec dec sub and mov jmp xor pop and or into movsb addr16 sub pop insb mov mov sub xchg pop mov pop adc xor aam add jle or xor mov scas js dec dec xchg xor jno (bad) push cmp in adc xor outsb mov xchg jle int3 jb fwait xlat gs sub xor xor hlt in mov out ja shl arpl lock out leave jns fbld mov push or dec sub cltd mov mov and loope adc dec je add (bad) mov sub and jo mov ror mov (bad) mov jnp fimull dec nop fidivrl into cmp pop adc dec call jns and xchg in (bad) fidivrl std and outsb or ret and pop sti sub (bad) pop adc notl push push fcmovnb loopne imul pop gs movsl mul adc test (bad) mov and dec push jns sahf inc int3 ljmp lret jl mov jno jg (bad) jge xchg and mov dec fstps inc inc add cltd push cli test cmp xchg cld and mov dec pop aam bound fdivrs xchg ret cli into xchg xor int3 xchg pusha mov adc xchg adc out (bad) in xor call nop cld xchg aaa clc cmp stc mov cmp insl (bad) mov inc mov dec ss cmp mov xchg push arpl repnz xchg mov mov pushf xchg shlb stos sub (bad) lret imul inc push jnp xor inc stc sbb xchg and mov sub adc jae jecxz cmp or inc aaa sub cmp jl xchg and xchg push out fs push fistpll jae or aas dec xlat int3 or sbb mov (bad) iret mov jmp mov dec ds stos mov and test lds add push lods sub fiaddl mov sti dec jecxz cs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall popf (bad) aad xchg (bad) adc cli pop mov jnp mov mov cwtl je scas inc dec divl leave aaa (bad) insb cmp neg enter inc lods (bad) sub mov fs lds fisttpl mov das push jl pop loopne popa dec cltd mov inc lcall (bad) popf add enter mov jns lea (bad) push sub mov movsb push nop test fnsave dec repz je fwait cld add cs xchg mov test mov into mov lods cmp xor mov pop addl sub outsb mov ljmp mov ja out aas push sbb scas add arpl jmp lea xor pop shl xor popf pop pop adc bound cmp mov sbb inc push xlat mov movsb mov and into push inc cs cmpsl push and sbb (bad) lock gs (bad) mov xor mov cmp push and jno outsb stc out loope mov push fcoms or or nop adc cmp (bad) into pop mov loope jmp ljmp mul dec cmpsl hlt xor cmc adc sub cmc sub lcall cltd lods adc out mov lret jge cwtl insb xor in fwait pusha test loope (bad) add jp mov push dec dec inc xlat insb data16 xor movsl pop cmp aam ret out out cli lock and insb cwtl inc mov jl mov dec dec pop lcall fucom out in jmp or sbb push mov aaa and mov sub fisubrl xor das shrb loopne push repnz pop scas xchg addr16 in mov or push inc dec mov (bad) lds lret ret mov xor and sub pop jle pop (bad) sbb mov das not jnp hlt cmp push jnp and adc stos cltd js jnp and xor out pop rcrb and (bad) out loope imul fst lods shll (bad) cld push pop gs aaa lcall jl or lock lock rcr fs dec mov (bad) mov xlat push xchg pop mov mov cwtl pop imul out xlat mov pop mov lret pop (bad) and or pop or xor ret inc test pop sbb das bound and loop add mov mov and mov pushf repnz dec (bad) iret sbb ja inc rcrl adc (bad) data16 popa cmp (bad) (bad) jns pop cmpsb jns push loope pop das fs dec ljmp push mov push lret mov push adc inc xchg xchg outsl sub fimull mov gs pop adc xchg test push or inc fucomip loope (bad) lret lahf repnz (bad) push jmp mov pop sub lea fs sti push imul fdivs mov dec mov cmc cwtl jo mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or xchg xor pop scas jmp mov stc fisttp cmp leave inc xor jnp mov sub xor in jmp sub iret cmpsb fisubl jae push pop push fldenv lret gs sbb push aad cmpl out mov (bad) mov test call and daa jne (bad) sub mov mov loopne int (bad) xlat add (bad) fiadd jecxz cmp sbb test adc cmpl cmpl rcll mov fsubrl jp testb jo incb cmc sub int mov movsb pop pushf mov nop insl (bad) mov xchg lock push imul inc adc (bad) repz pop mov mov push jmp in fimull jmp mov or xor insl sub dec insb push call ja fldt cli xchg lcall pop das (bad) imull add add test popf add push neg mov cmp and icebp es cmp mov mov je xchg inc mov outsb out test cmpl jl insl pop pop mov std sbb sbb loope jo pop push push lea out mov shrl mov mov cli loopne out sub xor pop jmp adc test mov mov fild loopne test mov imul (bad) xchg mov std ds (bad) (bad) mov in scas sbb mov pop jbe pop cmp pop or sub inc mov add mov pop ljmp mov sbb add cmp subl dec and popf push das jmp icebp (bad) xchg mov push lds or pop pop lret mov cmp xor pop xor xlat jns adc xchg movsb cs pop xadd xchg test jg jl add repz mov call inc pop mov (bad) adc add sti mov push push jmp movsl adc into pushl cmp adc cmpsl inc sub mov mov aaa adc out add data16 add popa fnop loopne rcrl js push daa fcomps outsl dec (bad) shrb test xchg sahf xchg mov repz inc push adc mov arpl mov in imul sbb movntps or enter xchg cmpsb xor adc inc fcmovnu xor xor jbe lea (bad) mov cltd inc (bad) jne pop divl ret adc or adc (bad) cmp jge test ljmp loope movsl call pushf lcall jmp dec fs or (bad) or jmp pop dec sbb or push or pop push fisubl push out xchg ret in xlat cmpsl fildll imul cmp nop mov jnp cld rcll test cmp jp jmp mov mov mov sub (bad) mov mov (bad) pop push sub outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out leave jg popa ret movsl adc inc sub test ja cmp cmpsb xchg dec scas sub ret sbb or xchg cmp cmpl mov movsb xchg test xchg (bad) test ja push push cmp jle gs mov mov daa aam mov stc mov pop ret sbb push aas mov jge andl mov cmpsb mov les push fdivr ror (bad) out or scas xchg jb cli lock (bad) mov sub pushf adc push inc push (bad) enter mov mov in pop inc in xor ss jg cmpsb aas push push add jecxz pushl imull aaa fstpt lock or hlt adc push pop mov aad pop cmpsb sbb repz arpl in mov (bad) push xor sub xor cmp movsb popf ljmp pop sahf mov movsl fsubs repz das add (bad) fistl sarl jecxz ret ja inc inc ljmp shl jle jb cmpsb popa sub cmp mov dec lds (bad) sub mov mov (bad) stos bound mov in xchg (bad) rcrl into adc cmc pop cld dec arpl addr16 iret ljmp call out xchg xor aaa jg xor push dec test mov pop mov add jbe cmpl sub and push (bad) lret xchg adc dec and adc cmp popa mov lahf cmpsl lret mov roll sbb lods push (bad) jns rcl xchg adc fs cmp mov mov out jbe sbb jecxz stc addl mov test mov mov (bad) fldpi cwtl or jecxz loopne xchg add sbb xchg maxps sub pmaddwd movsl imul out fldl jp cmpsl push bound ficom jbe imul adc imulb stc hlt sub cmp jns inc add stos jbe bswap popf ss gs add (bad) and xorl cmp xchg mov sub scas (bad) popf call push jae sbb jg xor or addr16 push mov ret repz cmc fwait xchg inc jg cmp pop fwait cmp sub sbb mov dec xor xchg ss pop jns daa shll mov pop jmp stc push imul jns xchg xchg mov rclb cli xor fidivrl pop sbb mov mov mov hlt pop and xor xor pop nop add dec and out push scas je lods rorl stc rol pop pop mov ja adc repz mov mov add popa sub leave lea lret sbb mov jnp mov xor jo pusha mov mov xchg shll in js sub sbb data16 (bad) adc dec pop and (bad) mov orl sub pop movsb je stc mov leave enter inc mov ss stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub aam sbb mov sbb bound (bad) pop cmp add jp daa inc xchg lret adc adc jmp xor ljmp pop inc sub sbb pushf jl and xchg jecxz stos mov fdivs ret push hlt mov mov xor inc popa pushf jb xchg mov cld lcall or ficompl mov pop sub and insb xchg out orb xor cmp adc fldl sub xchg cmp cwtl jb push sbb xchg loopne jge cmp xor dec xor out xor mov movsb xchg pop aas dec shlb cmp push int3 push add lods sub shlb cltd pop xchg jmp mov fbld push mov mov gs push in xchg xchg sub push scas (bad) sbb cwtl leave aas inc mov out jnp imul mov pop cmp push in enter adc ja pop and (bad) mov inc or sbb out pop jmp mov push test (bad) insl xchg xchg dec fidivrl (bad) or inc sbb mov jne adc xor mov jnp stc sub sub mov adc mov mov dec ja (bad) mov stc mov adc mov jne (bad) pop and cmp inc and mov imul jmp ds push or push or inc jecxz sub roll mov jae fucomp in jae out mov jge int3 sbb sbb (bad) jae ss pop cmp inc adc or and inc inc aas pop push and xchg out mov inc cmp fisttp lods pop fisub xchg ret fwait hlt ljmp (bad) mov pop push loope dec inc fisttpll push jle cmpsl dec sbb xor push xchg sub out icebp cmp fisttp cli and call sub xor insb sbb out (bad) xor sub mov pop and and sub lock and sbb dec mov aas imul gs sbb sbb popa loope (bad) mov insb xor mov push loope out lock fs dec shr jae cmp or test xor xor sbb dec test dec push sbb adc ja push enter pushf ret inc arpl shl in lock push jp push add les xor scas jns movsl dec cwtl push nop pop es rcrl loope or lock lods mov adc or jae pop jmp dec jle add mov mov push push gs xlat sbb mov push movsb jmp sahf inc sarb push sahf sub aas lret xchg inc pop inc dec xor (bad) jg mov jp repz mov xor jmp dec ja popf subl push int enter mov pusha adc pop scas jp (bad) mull popa call push xchg mov les (bad) xor cmp sub xchg (bad) mov xchg cld data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push je pop enter pop das dec sub dec in and adc loope loopne movsb lcall mov lock divl dec popa mov lods inc and hlt shll cmp lret aas fcomp outsb test sbb ss push mov aas repz sub stos xchg (bad) ss pop dec xor jae xchg xlat push lret xchg ja or sti or adc push cltd leave xchg outsl sub mov and mov aad andb out jne ret xchg xor mov push xchg and add dec test jne (bad) xor mov adcb in in dec sbb in (bad) cmpsb cmc sbb insb jo add dec dec cmp stc xchg pop outsb cmp cmp cmp out lcall cmpsb loop faddl ret adc add test xchg hlt dec mov inc push nop lret mov sahf mov fiadd es add sub lret mov jecxz and adc xchg push cs shll or pusha sbbl stc data16 test pop inc aad mov (bad) fiaddl jbe sub pop mov cmp xor mov mov out outsl divb pop xorl fisubr xor add adc std inc pop cmp inc add gs push arpl hlt rcrb mov insl xor or jl ljmp (bad) push fnstcw mov daa js pop jb icebp jl insb sub xchg ficompl xchg mov add fsubrl leave and pusha jmp pusha fmuls int3 aas xchg loope fs aad mov mov xlat loop mov push iret jl adc fstpt test jmp jne xor jl push push add icebp jg xchg mov pop push and ljmp das (bad) adc push aas dec mov ds sub inc leave faddp jg cmp jg lea les clc push pop test shrl push pop nop mov fistpl test movsl jae adc dec (bad) (bad) cmc mov (bad) test loop cmp push (bad) repz das sbb or add dec dec inc scas pop xchg mov push add daa enter cmp xchg movsb fwait addr16 cmpsb lods fwait push clc out mov pop loope or push or imul dec adcb stos or xchg out lea pop jmp push movsl aad push dec jmp lock mov sbb mov insl mov fstl xchg pop sub xor pop xchg sbb dec sub test inc pop daa sub mov popf test out (bad) fistp pop mov pop lahf adc adc jne xor ljmp mov inc mov xor jl xchg sub fistpll adc ret outsb cmp cmp and push out loopne inc lea sub inc jmp adc jg mov or sbb mov call jg outsb add add stos nop test mov xchg fdivrl add lods sub jo push xchg out iret jb ljmp sti (bad) adc push inc fisubr sub jnp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call bound test xor aam lret mov fldt add lea add adc fucomi mov add call fldl xchg cli or jae xchg loop push add and dec adc or test jmp xor mov and sbb leave (bad) out sbb sub cmp xchg fwait jns popf (bad) jp inc out push jb push or test inc stos mov inc ja mov mov jbe mov aaa inc push and lea dec add hlt xchg and fmull in fdivrp das fistpl popa fmulp pusha and xor jbe xor test movsb jne cwtl scas dec cld andl xchg pop cmpsb fmuls push sbb rol pop (bad) xor xchg rolb inc fsubrl nop mov aad ljmp loope mov mov xor sub and adc aaa lahf je sbb or mov sarl std fidiv stos or test out mov scas mov sbb cmpsb dec mov ret divl xchg push dec mov or add in fsubrl jb and push jg aam insl add das scas xchg daa movsb jae adc cli dec push jmp mov ftst (bad) aam xor roll inc sti jge,pn fstpt rorl test add fdivl or negl lcall cli loopne sbb xor cmp movsl sub (bad) mov push mov lock pop ja jb mov call cwtl les mov ficompl test (bad) dec mov clc jl dec and mov cmpsb mov sub dec ds sub pop cmp out sub mov (bad) testl xchg fs jae mov leave ret (bad) enter pushf sub adc mov sub call push jg or jl lock (bad) xor mov inc mov icebp mov stos inc out ret cmpsl andb dec outsl jb fildl mov addr16 add fwait lret mov cli outsl push orl mov mov cmp imul mov icebp js push fimul bound ja sub in pusha cmp not jb lcall stos jmp jae dec jb adc sbb lock popa push push jb push cs stos dec mov add mov ret mov leave or cmc scas jecxz pop and incb mov inc add imul xor callw jmp adc sub stos out mov mov pop scas pushf (bad) int3 push cmp or cwtl mov imul inc ret (bad) jmp push add fs scas jp cwtl jae sbb pop add pop mov movsb push popa les add (bad) push jbe push addr16 pop mov (bad) dec inc lea lret das push jne movsl js inc sbb jle js lods pop dec mov add adc out scas dec sbb aad adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp outsb (bad) fsub sarl sbb mov jae sub lret hlt mov andl adc inc mov pop daa ds xlat xor xchg jge jne jge mov push inc rcrl pop mov xor fistp lods lods (bad) cli adc rcrl (bad) jmp xchg es jecxz out mull arpl jle mov arpl lret or es add fucom adc adc gs dec jae fidivrl les xor and lret add lock test lea dec test (bad) cmc and rol push mov sub dec rorb mov daa mov into fnsave mov sub jns cwtl out or mov cmpsl mov call sbb aas pop bound loope cs or inc push adc push xor push xchg icebp scas test mov (bad) cmc ljmp mov dec xchg or pop in mov pop outsl jno into add adc jo int out cmpsl daa aas jmp out jb stc outsl lods lret inc cmp mov movsb int out dec add fimull aam aad add xchg outsb inc or in xor scas and jbe xchg mov or jnp push pop mov shr sbb daa cltd pop shlb jo push dec insl jp jbe out fwait cmpsl fist in sbb out addl cmp jl xchg addr16 push test jb (bad) loopne scas jmp mov vmread cmp gs ss setge fsubrl cmp push xchg jg or fidivl out pop sarb fsubrs xor mov cmp fildl adc push out loopne add neg test cld cld pop inc cltd (bad) jnp scas les hlt inc push es lea pushf fildll xchg adc outsb push das jecxz test and (bad) lea mov sbb cmpl data16 inc pop arpl insb bound ret lods rorl test imul cmp pop cmp (bad) dec adc hlt test add or xchg mov sub imul mov mov and sub xchg lret pop and test ss adc jno dec push clc or (bad) sbb sbb addr16 adc aam mov pop mov mov cmp int3 dec aam repz and cli inc cld mov fsts dec sarb ss repnz pop lods cmpsb or jge add mov push jmp lret xor jge cli rcll push sti xchg fistl repnz daa xchg xchg stc sbb adc mov push imul mov gs push insb in sub cwtl (bad) out aad ja sub clc dec lods push test les test or enter pop xchg pushf in mov mov dec pop aas push in mov mov adc jl mov (bad) out clc (bad) shr addr16 scas aaa pop jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push jl shrl and jmp dec lock push jg out or pop shrl hlt test test fstps xchg or fistp jns and xor scas push js inc cmp add and jo xchg or mov hlt xor sub lahf fcom repz cmp sbb xchg xchg and stos std push out jnp hlt lea pop xor movsb js imul ss movsl int3 xchg dec das ret pop adc rcll mov lods ficom push inc call adc mov cmpsb push jns sbb fdiv dec dec push add or test sbb push mov test pushf dec dec push (bad) addr16 gs adc adc popa pop andl repz add insl cli mov les int repz push push pop repz fstl adcl or (bad) js pop sbb test dec loope push dec lea daa push sbb sarb sbb aam rcll cmc rep std arpl sub sbb cmp jne nop mov loopne dec mov in xchg sbb scas mov mov push out cmp jo daa xor dec add add mov popa sti outsb cwtl mov adc xor dec push cmp fdivrp mov sub pop xchg fwait or in pop jo jae (bad) mov inc and cmp inc cmp sub in idivb xorl and dec mov mov (bad) fcomps pop mov out push lret push imul ret xchg cmp sbb fiaddl loope jecxz sub lock loop push mov mov pusha add negl (bad) (bad) pop xchg lret sbb rcr sub loope ror ds (bad) movsb pop sub pop mov or mov fs mov lods pusha or (bad) aad xchg fucomp int lock dec gs enter add or orb mov sarl jne stos inc inc xchg cmc jnp xchg or inc int shl lcall cmp aam or mov mov xor out cmpsb lret dec out into shlb rcrl push imul sahf bound inc call out jns dec jge sbbb sbb mov lret stos inc xchg popa lea divl mov testb sbb mov xchg (bad) dec in ds lods cmp into or push add popf daa mov fucomp pusha inc (bad) cmpsl or and xchg jno pusha or inc adc into cs add movsb movsl ja cmp repnz jmp outsb add xor cmp cmp shrl adc in daa mov jno jl scas loop inc pop mov adc outsb or or add xchg out cmp mov push dec sti pop cmpsb sti add pop iret imul xchg adc arpl jmp push stos xchg push jmp mov or push dec (bad) jp mov movaps (bad) js outsl or pop cmpsb aas enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in pusha mov sbb out xorb fildll xchg adc popa mov js outsl bnd jmp insb js test (bad) add or (bad) call push jnp cwtl ret les out mov cmp add mov test scas pop lds shll push add push (bad) ret mov and cli loopne sub push pop cmp and pop inc jecxz test daa adcl or in dec (bad) mov xchg cmp sub std xor lods add ret dec xchg mov adc nop xchg je fcompp pop xlat xchg adc jmp jp mov mov mov add inc lods aam jg loope push mov cwtl aad fmuls daa pusha push push out pushf dec (bad) cmp sub inc cwtl addb mov dec mov sbb push add mov imul dec (bad) mov fidivrl push sub adc adc inc jo mov push test js outsb jnp std hlt frstor cmp push inc sahf addr16 or rclb scas mov and lods xor pop xor test shrb repnz cmp sub lds daa lret cmp sahf push xchg mull call mov loop xchg bswap mov pop popf xor and push jo les and mov lock sbb (bad) xor xchg in (bad) call pop xchg rolb in lds mov (bad) fdivrl add hlt cmpsb outsl jae push shrl mov insb jmp repz dec pushf lods stos push out mov xchg xor data16 into pop push mov push rcl bound scas test fmulp or stc add pop push jo mov daa loopne lcall and mov rcl neg fnop popa dec jbe lods sbb data16 pop xchg fnstenv leave dec inc adc cmc inc leave jbe push jle mov loopne inc push push inc mov and push sub sbb ljmp pop mov push cli mov mov test pusha (bad) rorl xchg cmp dec ret dec and cs mov cmpl cwtl jnp ljmp int3 or leave out pop int3 pop inc (bad) out push push push add fiadd subl add inc or jae inc dec mov nop add imul scas inc or cmp (bad) adc cmp cli push xchg mov mov aam mov lods ljmp jae dec ret pop lret negb mov orb lahf out cmpsb jno ss call fdivl mov mov jae push (bad) divb std jae inc xchg xchg test jns add pop sub push fdivrs lret sarl jp xchg cmp jno and push jg lea xor stc and lret or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cs in xor push notl lock cmp jecxz mov in fsts dec fwait outsl lcall lock fildll add imul cld enter movsb test out mov aaa mov sub xchg push sub xor and sbb (bad) xor sub push mov inc dec dec ficompl movsl cmpsb iret jnp (bad) jb xchg sbb sub jmp inc pop cs inc cmp mov leave (bad) idivl mov mov outsl jae pop lret sub xchg mov pop sub push and mov lret jg arpl cmp mov cmp dec pop sub ficompl pushf insl adc test xor into jmp xor mov add dec stc add mov and adc int3 stc dec popa fs pop or in mov pushf mov insl in jnp jg mov pop fwait cmp pop aam mov aas inc hlt stos rorl das inc push in cmp sarb add mul mov push push out lahf sti sbb lahf cwtl ja mov push and in sbb addr16 fninit test je es sub dec or sbb mov enter xchg leave mov xchg or sub dec dec insb sbb sub movsl or inc loopne add mov mov xor test loope add push in or xchg jne cwtl (bad) mov (bad) das xchg aaa cmp sbb cld cltd mov jg ss enter cmp dec (bad) movsb mov rolb test mov sbb or mov push cwtl (bad) loope jae sub (bad) les inc mov adc add cmc divb outsl aaa jns idivb mov repz dec (bad) fisub (bad) mov out adc dec push or push xchg push cmp pop sbbl les test adc or lock inc out jl orl sub pusha jl iret jl divb pop sbb jp lret ja push lock dec js mov cmp (bad) dec jnp dec ja addr16 mov jne mov inc mov pop add inc popa pop dec adc inc mov add clc push xchg (bad) movsb add sbb rclb rorb pop push scas les and and (bad) hlt fimull lahf cmp push stc jp inc es (bad) jle pminsw dec (bad) test fsts xchg cli jmp fsubs jb out loope xchg sbb sub sbb outsl xchg arpl cltd cld aaa scas jl movsl push lods xchg jmp movsl jl out and mov push stc or xchg cmpsb and add pop stos add inc (bad) jecxz les js xor inc sbb mov out mov fidivrl ja ja shlb int3 xchg push cwtl jnp into outsl xchg jmp or jne mov ds mov pop push mov mov push je mov stc out or aaa dec sarb (bad) in add (bad) in scas pop test fistl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov das in and mov jle insb add pop (bad) lock cld mov bnd outsl sub aad mov and imul add inc std mov push loopne mov push stc mov mov xchg inc jnp inc sub or test add cmp push mov pop inc push xlat or pop fs test lods movsl dec xchg jg jmp sti call add push cmp rcll mov mov rcrb sbbl push xchg sub shr add cwtl dec xchg sub pushf rclb arpl cld sub sub cmp (bad) xchg pop cmpsb push jbe add clc mov dec and inc mov (bad) and cmpsl incl scas fs icebp pop pop pop mov and idivl out cltd cmp inc jo sub shlb out enter pop (bad) mov daa sbb je cltd push xchg sbb mov divb pop jo inc or fmul divl xchg (bad) decb push mov jge xchg clc mov imull ficoml dec inc (bad) (bad) and xor mov jmp adc mov and and popf repnz (bad) mov push lret pop int loopne movsb decl pop movsl adc jecxz and push es iret pop (bad) cmp aam mov or and and shll lret test daa jno fs or hlt add sub adc inc in adc sbb mov icebp mov push (bad) in inc cmpsl repz inc mov arpl inc dec out and mov adc nop mov xor call cmp popf jb or jo or (bad) jb out jns (bad) push aas icebp lock mov scas mov inc and pushf or sbb inc repz in imul xchg in push push cld inc js xchg jbe and popa add xor lods jo out and push add push mov dec sbb aaa out or notb pusha mov mov in subb (bad) push jo test inc inc cmp xchg xchg shrl icebp repnz sub les and pop loop inc mov sbb mov mov scas adc (bad) cli sti add and inc nop cmpl outsl or xchg mov mov mov fbld cmp push clc add ret pop sbb movsl dec xor (bad) sti ja sub xchg dec cs sub xchg fmull inc pop mov fld sbb cmpsb push mov cmp repz and outsl dec adc inc jnp dec inc sbb out bound js imul cmpl in ss sbb lods fdivrs fyl2xp1 pop out adc rcrl and dec je dec (bad) (bad) inc pop inc pop (bad) andb test ljmp cmpsl cmpsb movsl cmp mov cmpsw in in adc inc jle or inc lret in in pop fwait add xor stc ffreep jae push or lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp add mov rclb jnp add mov mov cmp jb dec xor pop aaa cltd call (bad) fsts sbb call push sub in lret mov jg rcrl push enter daa mov inc frstor add mov pop fsubrs out outsl sub aaa or repnz fwait mov lock xor cmp int vmaxps (bad) leave xor out jae push je jecxz pop mov push lret mov pop and push mov jmp sbb test pop ret (bad) mov les cmpsl flds mov scas fistl xor and xchg pinsrw xor mov inc imull mov sub adc mov and mov cmp scas sub in jle xchg insl xchg dec out sub sahf inc push adc push mov add jp sub pop xchg sub fsts cmpsb push outsb int aam add xor or mov cmpl add and mov cmp cmp xchg subl add int3 mov mov stc pop push adc dec test inc scas push repnz icebp adc notb aad outsb pop xor rol js mov mov (bad) pop aas pop push movsl (bad) or lea (bad) fwait cli aaa adc pop pop mov xchg adc mov xor jecxz pop adc test adc mov xor sbb pop sub rcrl mov jp cmp ljmp imul fsts (bad) int3 fmull jae fimull jge loope dec sbb and push fwait and xor adc clc sub aaa cmp or imul les cmp push push std sub pop jbe dec add clc jns push or jge xlat repz push mov das pop mov data16 mov es pop push xabort (bad) fucompp mov rcrl cmp iret xchg fsts jl push jp es call and push xor inc icebp jle (bad) jp movsb ss pop or fldcw push fstl loop js lea pop idivl imul and cmp mov mov (bad) icebp rcll xchg mov mov mov sub sbb fisttp jo jae aad stc mov push or je xchg lock mov (bad) data16 adc and push (bad) adc pop loope inc test cmp push adc xchg jns out push ljmp xor push and aas inc roll push mov addr16 out test mov clc or push out mov and pop vpand add push rcll or dec mov int jnp adc xchg add dec fstps loopne xchg mov aad ljmp in in out lcall inc ja inc xchg lahf and outsl test scas fwait insb mov add aaa mov or mov xor mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor and test pop mov loopne std mov add mov clc (bad) sub dec adc xor jl and ret test leave mov sbb cmp or iret sub inc repnz or and leave sbb imul in cmc pop je pusha mov and inc sub xlat iret push or jo (bad) popa shl sahf (bad) fnstcw inc xchg stos scas xchg jg andb adc mov daa add loop fcmove hlt mov je sub sarb dec add pop sahf stc insl adc cmpsl rcrb mov fadds shr scas adc push jb xchg xor insb leave pop pop inc mov pushf xlat or sbb rclb mov stos cli xchg mov mov fstps pop sbb cli mov mov mull adc ss xchg fcoml inc das xor ret int js sti out push jns jne test dec mov idiv leave dec cmp fistpll or dec jns stc aas scas add pop xchg loop mov fucom mov testb int3 rcll call les dec insb and das ret dec mov test test pop xchg (bad) push push (bad) shr mov fildl lock into cmp lods jg cmp mov inc inc inc cmp mov addl out dec lret in pusha shrb jns faddl lock pop cld ja mov js and shll test aam add orb movsb movsb jne ja push and stos xchg cwtl mov out iret out pop fidivr dec fdivs and mov xor inc dec (bad) (bad) aas imul arpl out adcl and pop xor test push or out ss pusha (bad) fldenv rcl pop cmp mov outsb cmp jo or jnp inc inc loopne call sbb dec stos sbb jle outsl mov int3 add imul in pop lods mov sub pusha movsl sbb stc shlb mov xchg push jl or scas adc jmp push jmp cmp xor or test or xchg shl xchg dec lahf ret fmulp pop adc xorb iret fdivl movsb loopne add cmp sbb xchg jbe ljmp stos aaa mov mov insb push cld test mov push or clc sar and rorb lds sbbl sub add inc xor jnp pop mov test pop in in sbb add sbb jecxz and fsubl sbb cltd mov push dec sti mov cmp out xchg fucomi pusha or out lock ds push xchg xchg mov pop and cld xor mov popa adc xchg repz cmp push int cwtl sarl pop inc dec sbb mov mov dec adc push in lcall shlb stos sbb pop in add push mov pop aad push push enter mov sub mov xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) (bad) mov outsb push adc ret shl sub mov test rcl mov iret push sbb loopew cwtl cmpsl ficomp xchg stos and dec repnz mov pop popa lods or leave inc sub jecxz pushf mov and sbb mov add push mov mov and add inc dec aam jae xor test sbb (bad) sub jg mov push repz pop push mov inc xor bound sbb ret lods dec sub mov push jb inc fcoms add (bad) std sub insl mov and arpl sub std mov push leave inc xor adc xor repz fistp xchg stos addr16 mov xchg js xchg mov mov fstpl mov ja je mov test mov cmp in inc sub insb push iret jmp js mov push outsl pop popf xor push inc xchg or pusha or and or sub mov sbb sbb mov cmp sbb jle pop loopne roll shlb in dec or lret xor repnz enter aaa cltd add push mov cmp sbb lds mov add and fwait dec enter mov xchg rolb aaa jmp and mov xchg sub inc xor ljmp in cld int3 inc stc adc ss (bad) xchg push mov (bad) cmp rcrb jae int3 dec fcoms jge out out inc add test stc call je loopne popa mov dec push pop or lods or jmp push or cmp test jne xor stos mov push aad cld mov adc push (bad) sti cltd and add jae mov pop cmp pop sbb hlt popf jge loopne getsec test dec pop mov out imul das imul imul (bad) test pop mov pop loope xchg lcall push dec and xchg fcom mov js dec inc cmp push sahf (bad) xchg decb mov sub out sub dec xor sbbb adc jge push xchg xor dec (bad) fwait ja dec add movsb cs lcall dec fsubl dec fcmovnbe sub cmp loopne inc sahf adc sbb or cmc cmp sti insb inc push jo leave add dec test mov mov sub mov insl adc pop ja lea (bad) into xchg nop sbb cltd fisttpl into xor out daa mov inc sub es mov adc jo pop mov sub mov xchg (bad) pop cmp into lods add mov stos insb andb cmpl dec aaa inc mov and das subl es or ret dec push pop pop and or push push ss insb and pop jmp and mov jl dec pop inc fcoml jp loope dec scas rcrb sbb jae push sub insl (bad) and push mov fwait push xchg aad out loopne test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov aas repz sbb or mov push daa rorl je sub add cmc test and les pop sub jg mov mov adc sbb push insb dec ljmp pop lds lret mov mov std mov mov gs jbe mov data16 ds ja imul scas sbb sahf iret add jge not mov cltd sbb call inc lahf mov dec out jp subb mov mov jno add lcall jnp jg add addl xchg push mov xchg mov scas cld cmpsl jge test imul test adc or shll test cld mov rcrb or loopne imul mov or lea flds (bad) inc and jo xchg push aam mov in pusha or dec pop out mov test out push jle js mov mov mov push lock inc fld aad jp mov int loop dec add mov push clc push xchg dec jne loope cmpsl mov adc mov pop mov adc aaa or mov push call and adc or movsl lea push sti and int3 dec adcb fcomps outsb lds cmp pop dec and dec aas ret cmpsl cmp scas scas enter sbb xorb pop adc adc repnz out pop out fsubl fcmove add cmc pop (bad) jo imul aad jmp shlb call cmp dec (bad) nop jno or adc xchg sar stos push xchg rcrl mov sbb pop dec fmull popa push dec scas or add in xchg aas sbb and scas addr16 mov push mov push pop xchg ljmp ret jmp sbb jb iret stos cld cmp sub and pop sub and icebp jnp jge dec add xchg ret cmp xor and clc jo test int xchg test xor sub dec or push pop mov cmpl xor jle in pusha cmp push test or push dec mov and push jecxz (bad) in jge pop lret and inc xor xchg fwait lret aaa out aas xor stos pop mov xor repnz negl outsb pop addr16 cli or test movsb rolb pop in bswap mov dec pop jl pop stos pusha test jge pop xor xor mov ss mov adc xchg xchg (bad) cld daa inc imul cmp (bad) or mov inc push sbb mov or push sarl scas dec std lods and jno push (bad) pop pushf pop jns aas sbb sbbb inc cmp test scas pushf les xchg xchg ss cmc (bad) (bad) push lea sbb popa in jbe (bad) mov in mov sbb clc xor lds out rcrb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ja aad and bound rcrb clc and inc add pushw sbb mov rcll xchg nop adc int mov cmpl (bad) int3 xor (bad) xor mov cmp mov bound in push inc mov insl ja call cmc insb ficom jbe mov int3 in xor mov and les mov sbb je fidivrl jl test loop mov jge daa mov mov sub into aas push int3 add inc cmp cmpsb jo into push ljmp sub xchg pusha adc add xlat adc and push fildll imul jb mov adc fimul out add nop xor aas fdivrl sub xor ljmp adc adc lea jg mov adc sub cmpsl sub repnz mull sahf imul subl jmp adc fisubrl mov ret push ficoml ret cltd cmpsb and in sti push or out loopne fcmovne pop mov xchg sti (bad) leave cld xor inc movsl pop sbb adc shlb dec cmc or jecxz ljmp sub hlt sub mov mov aam insl imul adc or push adc or popf aam cmp (bad) sbb push adc addl mov xor adc mov jne fistpll stos mov in inc mov dec insl inc sub pop ret ja loop mov iret (bad) cmc rcrb outsl (bad) insl pushf adc inc mov sub aaa inc arpl push ret push sub int3 mov stos ret and or divb dec arpl in dec and pop (bad) sbb dec push mov mov add ret push cs mov xor or mov push xor sub mov pop cmp ja mov lret mov mov test mov imul cmpsb pop lret scas lahf aam fadds jp cwtl pop shlb lahf fstpl ja mov clc mov jmp call dec pop mov dec fild mov sahf out pop sub (bad) cmpsb loopne mov aam xchg xor add cmpsb mov daa popf push or push sbb gs add lret repnz inc push jnp cmc test inc test mov inc leave or (bad) cld mov divb jae mov push mov xor xor add xchg push adc je pop hlt pop adc pop dec std pushf stos popf or hlt xlat lods mov lods xor hlt pop mov call in jmp jns fbstp int3 jb push add push adc push mov push mov scas fdivl cltd std xchg mov sub add (bad) push mov xchg std arpl push jg mov mov or sahf rcrl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstps (bad) faddp cld push movsl aad iret enter add add xchg (bad) xchg sub push fmul lahf pushf stc mov xchg adc pop push daa gs xor push outsl cmpsb lcall idiv mov loope jb and mov test lahf call pop xchg test dec in or xchg lea jb inc rcrl xlat cmpl in (bad) lods mov xlat loopne cmp xchg adc sub test sub enter add push les mov dec sarb mov adc dec xlat xchg fcoms arpl or ret ljmp (bad) fs and insl popa mov mov sbb in loope addr16 mov popf arpl into xchg mov fadds sub or int3 mov lret jbe xor mov push inc and sarb push and pop stos lods gs call out into push rcrb test xor loopne imul push push mov sbb outsl jo sbb jnp push sbb loop scas and adc das icebp add pop imul std fcoms pop adc lcall (bad) pop out fimul pusha pop (bad) aam rcll lock xor or cmp out imul sbb mov mov std pop jl imul mov test mov xchg das push std lret xchg test sub sub aaa xor pop sub leave inc sbb repz (bad) xor mov or mov in and lret (bad) pop jns das stos fist jns sbb sub scas mov push ret adc ret pop fwait aas xchg xchg fwait pop ljmp sub das adc cmp mov mov fdivr adc add popf add xchg leave jmp and cmp add popf jge add daa sti das pushf inc popa (bad) xor fistpll pusha (bad) je stos mov sahf xlat jne mov jmp roll and stos dec pop cs sub cld dec pop push outsb dec cmc pop jge or pop sbb mov mov jns faddl or mov ja jns repz das arpl out stc inc (bad) xor push aam repnz push test ss dec mov adc popf addr16 inc mov mov jno jb sbb and shr repnz mov pop outsb pop xchg pusha mov xlat xor push sbb andl jns cs sarl push or jge decb pushf cmpsb das mov test pop and les fdivl lods push stos movsl jbe or popf xor mov insb add out lea pop dec jge pushf test js jbe dec cmp ljmp leave mov cmp ds (bad) pop dec mov lcall sub sbb mov js fstl mov xor stos sub imul xchg and or cmp lds (bad) hlt sbb pop or dec sbb mov dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) loop loopne jp stos pop (bad) mov popa cmp mov stc pop dec scas add pop mov xchg outsb and xchg insb dec and movsb gs mov test mov addr16 cld mov ds aaa das adc sub and ret retw out xchg mov in pop iret xor push js nop call mov add lcall (bad) jge and lods xchg push enter sar cltd push test call inc cli add jne mov hlt lds (bad) pop xchg xor adc cltd mov sbb aam jmp sti adc adc xchg js fs mov cmpsl sbb pop cli xor repnz sarl scas pop push push stos sbb jne scas es sub push dec lods inc jbe fcmovnbe push xchg sub sti xor sbb jnp testb js ret aam lcall cli xchg es and lahf movsl fdivs out xchg jge mov hlt pop clc xor lret fadds scas mov inc pop inc subb (bad) fsub and data16 (bad) sti push pop push and push mov fwait mov xchg mov into sub lods pop and test and add cltd lods push test and es or lods iret repnz repz pop ljmp (bad) xor repnz cltd cltd ret cmp jo je loopw lock sub mov int shr sbb or jle dec mov mov imul (bad) dec xor scas into movsb loope inc cmpsl or (bad) notb ss push sbb movsb rep cmp inc dec add xchg ret daa xor jle je add aas add mov mov xor adc ds insb mov inc ret cmp (bad) xchg and dec cmp sarb fldl push insb cs loop lret sbb flds stc cmp jae fmull shl les cmp call pop ror daa addl popf and pop jnp mov (bad) (bad) xor xor xchg add jns pop ret mov es pusha andb xor mov push add push test imul fldenv jne js repnz enter dec inc iret enter mov popf into (bad) cmpsl nop or or aaa push xor pop outsl push adc cld das (bad) adc inc inc mov test lock fldenv or jb imul repnz sub inc sbb cld test push loope xchg imul call nop mov mov xor pushf or push les jle das push push roll and sahf mov movl jg xor lahf repnz dec sbb adc xchg jg outsl or cltd std sbb mov aas push inc dec pop ret rclb cmpsb mov sbbb (bad) xor rcll mov jb lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fistpll jo pusha pop lahf cmpsl or lcall test mov stc xor xor sbb inc fs jno cld in push pop lods and out and fcoml and pop icebp inc mov jns dec faddl inc inc clc popf imul imul cwtl mov jns dec or mov xchg ret decb mov rcrb adc test xorl pop mov ljmp jle out pop mull push shlb xlat daa les lret popa jae and test or mov sbb add lahf addr16 xlat pop rclb mov push xchg lahf xor push mov add mov repnz cmp (bad) jns ret mov xor ret ret lret (bad) jl xchg push enter jb lret popl out cmp gs cltd adc mov xchg cmp ret mov aas jl movsl in lds aad push ds push roll nop or mov cmp lahf call insb mov jno add in aad divl shlb jmp outsb pop dec popa cmc sub push push sub lahf jge (bad) ja xchg shrb stos lds xor jg xchg int3 add jle clc shl xlat xchg mov xchg shr loop shlb inc mov test adc dec dec and inc jae loopne imul inc ucomiss jb repz inc in icebp and fsubrs repnz lods in adc push mov cli out push rorb or xlat mov xchg pop and cmp or fs mov pushf or pop jg cmpsb loopne shrb inc pop push sbb cmp xchg add add push jo dec xor push outsb std scas push inc xchg dec mov imul or mov pop movsb lcall cmc xor add rcl jbe push adc inc stc cvtps2pi cmp pop cmp mov ficoml dec or cmp stos mov inc fs dec lea stos cmp push dec adc movsb xlat cmp and in nop insb xchg jo ret sahf adc cmp inc pop mov push adc pop add jl mov sub sbb adc popl outsl bound nopl (bad) mov out je sbb inc test stos xchg inc or out mov dec (bad) fadd mov lods popf cld xor lea sub jbe jp cltd daa or sbb loopne or sbb stos mov xor lcall sub shrl fwait mov das je mov jge dec xchg popf fcmove pop divb sbb aaa mov ficoml dec jle scas icebp rcrl (bad) iret test fisub test fstpt cld sti pop mov mov jb test or xchg roll ja,pt inc xchg or xorb cmp aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas and arpl push or iret repnz cli pop mov pop mov add push lea xchg sbb into jmp std enter mov pop mov and insb or push jmp fistl hlt pop loopne call fwait iret pusha mov mov cmp insb in out outsb push ja bound push and or mov mov add (bad) lcall jne jmp dec mov sti hlt jns push or add pop pop push lcall daa loop mov and int3 mov pusha sbb jg sub and (bad) xlat popf mov cmp jne pop arpl into mov cmpb mov and (bad) push pop push fs rolb xchg cwtl nop gs (bad) je cltd pop dec cs dec pop and or sbb test sub cs ret dec mov stos sbb ja imull dec (bad) mov push inc dec (bad) sbb xor mov test push inc mov mov sahf cmp mov mov das lods sub or cmp cmp ljmp mov inc ja js add add dec and test mov cltd loope sbb and or into js adc inc test cmpsl mov idivb lods fwait adc int3 mov and jge inc call xchg mov rcll loop aam nop (bad) mov push adc and sub jg cmp or sar std jp push adc cmp xchg add jns lea es or loope lcall pushf inc clc data16 fisubl xchg cmpsb rorb (bad) sub rcrl stos jne mov fidivl ss imul (bad) mov popa mov sub or jns xchg loope fldenv fild mov (bad) push mov and scas subb out mov arpl xor xor xor idivl loop xchg push adc or sbb sbb mov jmp test cmp fcomp daa fwait inc mov inc ss lea pop sbb je test push (bad) ja test icebp movsb pop add (bad) jg cmp pop xor in adc test movsb jns test das mov loopne cmpsl out orl int3 push into xchg xchg test (bad) rclb inc mov movb out push sbb dec xchg fnop pop pop les das jae mov xchg das cld push std movsb xchg imull dec push (bad) icebp fwait test push pop out test mov push push das sbb and sahf jle and push adc and mov push fmull inc jmp inc adc pushl add std jae stc test sbb loop jb sbb ljmp lock shr ret repz and push mov movsb pop xor jno data16 in mov push xchg bound sbb cs dec jecxz xchg push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call movsl into jae aad stos inc fild jmp stos sbb das imul add mov loope repz mov jbe mov stc shlb sbb lock jns cmpsl cmpsb or jae daa paddsw (bad) jbe sarl jb pop mov prefetchnta aad addr16 aam and movsb lea jge aam adc or movsb bound mov lret cmp xor adcl repnz mov cmpsl pop pop adc push dec or cmp loopne inc icebp loope imul adc xchg push out dec ss sbb cmc jno jnp xor in mov out mov jp loopne lahf ret lcall js aad push je inc lods js ljmp lret and xchg mov aad cmp push sti xor jecxz xchg lret or mov pop adc pop imul popf xchg xor in xchg stc xchg mov or fildl xor adc std dec cld push inc (bad) mov push dec pop out das xor (bad) fcmove mov imul sbb mov popa stos imul adc add cld in addr16 addl test xchg pop pop clc or pop pop mov jg pop or repz rep mov push or dec je (bad) mov iret sub or fstpl adc jg mov xchg idiv xchg mov mov out push fisubr pop and setp adc pop mov shr sub push aam cmp fwait xchg pop enter mov hlt pop xor push push fld or aam ja stc jg repnz (bad) decl (bad) popf push loop lea add push sarb jmp xchg xor cmp inc jl inc imul xor stc mov shll ja cli divl push lcall ja int3 push repnz push ja and aam bound pop mov outsb bound sbb inc adc mov test inc popa (bad) dec push out mov xchg sub jp rcrb cmp ljmp es sub xor jp test mov nop nop inc or xor pop pop dec add adc js mov mov (bad) stc addr16 adc xchg push fs rcr inc popf pushf fcmovb sbb and sbb sbb mov or fstpl aas add pop mov mov inc cli outsl decb imul or leave jae jnp in in mov lahf or jmp cmp repz dec pushf mov (bad) cmp jecxz pop out cltd sbb xor (bad) fistpl iret cmp or ljmp in adc hlt cli loop fimul pop dec adc mov and jle,pn hlt mov sub jnp push xor dec lcall inc jmp dec call mov add and leave (bad) (bad) mov dec add das mov fistl cmp sbb outsb movsb or mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov outsl pop push (bad) cli repz push data16 xchg and push sbb cmc jp jno adc into pop add into stc into sbb stc jl add clc dec mov push fwait (bad) sub add mov mov pusha out inc (bad) jmp jge mov push shll inc push push xchg mov jge (bad) leave jmp sub xlat sbb jge arpl jecxz jo inc xor inc data16 xchg push and lea mov mov (bad) (bad) adc jl ss xchg jns lret popa lcall push leavew (bad) out nop sahf or xchg scas ret in xchg fstpt cmpsb sarl xor jo jle sahf fs stc imul ja scas mov dec xor or adc dec mov pop (bad) dec mov mov cmp and cmp sbbl push leave mov lahf fwait shlb or test addl out push or push mov rorl sub cmp nop inc sbb pop in jnp or cmpsb and jb pop cld sbbl inc mov pop and jno or stos mov mov addr16 mov dec fwait popf icebp push (bad) push jnp out or stos jnp and cmp xchg pop bound lock sti ljmp mov fdivs sbb gs scas iret cmpsl repz dec rcrl add xor shlb jge fnsave jecxz mov bound nop sub adc bound xchg dec fs mov jp push xchg add pusha loope neg aad std xchg add outsb dec jmp in inc das xchg pop adc inc jb (bad) jle dec mov sub push in sarb aas jge xlat push jg sub imul cmp push outsb adc or pop dec or inc pop in jl jl mov test (bad) test mov cli (bad) add popf xchg cs cmp push add inc mov mov and cmpsl jbe inc add popf or push push sti outsl out (bad) hlt mov sbb push sti dec adc xor mov ljmp sahf cmp pop xchg stos jo cld add push sbb std sbb xchg aad mov mov xchg adc mov daa stos loope outsl jo cli pop test xchg out inc (bad) mov adc ficompl in push sahf rcr pop pushf bound aam mov pop xchg dec mov inc fucom rcl lods iret out sub add jno push push xchg sbbb (bad) add adc ret out push lret (bad) (bad) call loop sub push popa inc (bad) mov xchg pop dec add add mov cmp aas inc rorb push mov repz or push aas sub add rorl loope inc outsw movsl mov stos jmp clc mov lahf cltd jmp jge mov jae sub insb mov mov push xor sub push xchg jno jo jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) or mov mov sbb push and enter loope,pt add scas and dec or out daa xchg pop jp insb mov out jno sbb inc loope inc aad jg rolb scas lods outsb adc sub (bad) mov push pop mov mov jae das push scas lea xor ret jle mul insl xchg shrb out push jl mov mov (bad) lock sbbl jb sub xchg rcrb push adc fwait lock pop adc sbb notb xchg and imul push xchg roll inc jbe pop pop in rorb ljmp push add xchg nop outsl cli int3 (bad) dec mov mov mov mov int xchg repnz and enter adc push or pop mov mov lods lods sub adc (bad) out mov leave cmc xor (bad) cld jmp cmp push mov sahf in xchg add add int3 mov cli pop and pusha (bad) jmp data16 and xchg stos sub rolb ficomp or xchg lret sub lods lea mov mov pop xchg cmc stc cmpsb stos gs add ljmp ljmp (bad) in inc fldcw pop sbb sbb mov aas inc imul xchg scas jmp pop aad cmp xchg and xchg jl stos push es mov xchg lret out outsl mov jp,pn push inc popf or out sbb rorl popa mov pop or adc xchg iret push mov ja mov adc mov jle nop pop mov mov jp pop icebp cmpsl cs into pop aam push test fsubrl rcrb dec pop outsb gs adc mov ret xor ja insb or insl popf aas bnd scas jle jo ret aam fdivs (bad) rorb mov pop iret in inc sar icebp xchg div xchg mov push loope xchg mov or into mov js xchg pop nop cmp mov add es je andl push and adc ja pusha scas add jae pusha sub dec inc mov mov pop adc sbb rorb addr16 mov sbb mov nop push js (bad) je jo cmpb sub push mov ds pop push or inc (bad) pushf adc das mov inc dec imul test xchg cmp add imul repz mov outsb mov cmp pop push int3 jge push mov call (bad) inc sbb fadds das cmpsb push movsl mov lahf inc add xchg ss inc outsl mov mov fsubrl jnp sub adc (bad) outsl (bad) stc (bad) xchg cmova rcrb (bad) push mov out inc jmp repnz pop xor mov sub sub inc das cli jmp stc xchg sar cmpsl dec lret sti lods pop dec sub je iret jb mov fwait mov or xchg xor push mul popf or pop (bad) test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jnp aaa lock pop inc cltd (bad) mov xor inc pop cwtl sub add inc fbld aaa arpl and cmp rcl jnp jecxz cmpsl push push (bad) cmpsb xor jecxz pop xchg sbb int3 sbb push cs cld loope sbb outsl xor xor mov icebp inc insl xor sbb out cwtl rclb es xchg mov loope test add jbe add jl sbbl mov sub mov jns and pop push pop sub adc adc in jno pslld cmp dec lahf xor mov inc mov insb cmpsl add bound push mov scas sbb dec mov lret mov push fildll mov push mov gs je pop xchg sub push arpl mov gs dec repz ds mov mov mov fwait aaa loop (bad) lret loope sbb (bad) add pop daa jg js push icebp mov cmp and aas and ds (bad) sarl mov out ds and jns jmp (bad) pop adc push xchg pop or xor mov mov das sbb cmp daa out dec add arpl lret (bad) sbb ficoml (bad) inc pop sbb mov (bad) mul stos mov jg mov push dec mov ret mov inc cltd push xor push fbstp aaa sub add mov xchg pop out cmc enter rorb out cwtl adc xchg fcmovb mov xchg or push mov mov scas mov inc je mov shrb ds mov and sbb mov sub xor inc fcomip js lret popa test test sbb sub sbb adc movsb stos (bad) int mov popa mov add mov in adcl xchg (bad) ret and mov ret or mov sub iret loopne jge xchg scas or mov fwait xor (bad) (bad) jmp scas jl jno jge (bad) jo aam mov sub imul dec push (bad) int je imul sub (bad) jmp je jnp rcrb (bad) les jl fcoms mov sbb adc fmul and cmp mov mov in sbb dec push xor adc loopne mov shrl jns push cmp (bad) xor mov jo loop cmc std push add cmp mov rcl repz or iret dec xchg mov jle (bad) xchg or in and dec mov mov cwtl mov pop jbe ficoml hlt into add jg movsb add imul scas lods pop or test cmpsl cmpsb ret mov jne mov out test mov adcb jno mov xor in mov mov mov mov xchg cmp adc lock hlt dec stos hlt sbb insb das mov xlat mov or and je pop aam xlat call inc xchg adc adc aaa ret inc xchg sbb mov in push dec sahf sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl daa insb popa inc lahf hlt xor insb icebp inc pop adcl fimull sbb imul (bad) aaa pop enter xchg mov in or fisubr test into (bad) pop mov icebp mov pop mov dec movb aas mov or sub cli (bad) mov push inc adc ret rcll mov lahf push shrb push push sbb iret dec inc popf dec fidivr push mov das test xchg fstl repz insl sub and in xchg sbb leave in push popf jle push sbb cmp cmp mov scas mov dec jmp cwtl pop lods int3 xchg or jecxz add jns aaa mov ljmp sub je dec into fild loope mov sbb fs xchg sub out popl mov and rcrl movsb cmc jne test rcrb mov mov ljmp popa sub pushf mov mov mov leave in leave jecxz fnsave push into sbbb stos rcrl pop push daa ja test add jbe add xor mov gs or out sbb imul xor jbe push addb push and cmp mov fcmovnbe push add mov jno mov mov sahf dec push cs dec repz lock cmpsl ficomp sbb imul cmp popf add jg and adc and adc xlat (bad) std mov sbb cmpsl (bad) and push test in arpl negl int3 mov pusha push add add mov or lods jg sahf sub mov xchg inc xor mov mov jb xor cltd sub (bad) popf ror adc jmp rcrl xor nop arpl dec les adc lcall out addb in jmp roll jbe fwait (bad) jg push test loopne sub sub out xchg xchg add or cmpsl cwtl (bad) lahf jmp add fsubr sahf or mov js or or add cs cli mov sbb jmp in (bad) (bad) mov or pusha mov outsb leave lcall outsl popa mov xchg test inc xor inc test xor adcl or stc call sub and inc push dec imul or das push fwait sbb mov sbb mov xor arpl mov sub mov loope and pop cmpsb dec sbb (bad) (bad) ja cmp mov popf cmp jmp call popa mov and push (bad) jae sbb dec dec popl aam pop mov or aad sub rcll inc fisubr mov jl cmp adc jmp xor xor mov push jne xor sub jecxz xorl jnp popl cmpb imul adc adc mov jo test std scas mov add or adc adcl inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cld sbb scas cltd lock stc jp pop mov cmp cs dec lret adc je mov sub xor call add scas movsb mov xor dec pop fidivr scas push jno and fcomps push mov ret (bad) pop inc loop lret add mov and rcrb arpl lock xchg sbb fs pop lods inc xor in mov in mov pop push jmp insl xor mov in loope push push sub aad adc dec jl mov imul jns mov fidivl or lock cmp enter insl pop xchg push xor adc dec push jo mov aam orl cs aas sub and loope mov repz cmp adc negl loop push pop mov popf sub push and jmp imul rcl int dec loopne cmpl and mov inc jmp xor cld (bad) setb mov xchg je out and jns (bad) inc and fprem1 out xchg jne sbb add mov cmp es das pop and jl popf outsb in mov jb mov sub rcl stc mov scas push dec or pop out imul inc jae and test mov fsts sub or pop mov inc push rcrb cmpsb jo mov (bad) fstl push sub dec iret mov pusha and xlat mov in push (bad) jo or mov fstpt jmp rcrl lods or dec (bad) inc loope insb ds (bad) je clc and mov insl or push jecxz mov (bad) and test xchg in notb or mov in xchg pop (bad) in call into (bad) les mov nop jne dec aad xor inc jnp sub adcb or outsl fidivrl out jge sbb loopne rcl or sbb cli fwait pop sub fstpl int pop in xchg dec mov mov lock xchg imul fstps mov (bad) (bad) rolb les test das xor int3 sbb jnp cmp dec outsb push jl inc sbb sub inc sub test (bad) repz jnp add cltd shrl mov loop jmp lea dec or movsb cmp cmp cmp or fnstsw lods daa dec int sbb test adc iret cmp pusha arpl fisubr sub rol loop,pt add pop test push test pop jb push in das ret xchg pop mov pop push or lahf repnz cmp push pop mov int icebp lds jge xchg stos push (bad) fwait jl bound fcomi in es mov cmp lret das add sahf add sub jle and mov addr16 push sbb inc pop cmp dec rorl pusha ljmp pushf popf scas cmpsl scas sub dec es fistl aam jnp in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc cmp adc pushf lcall (bad) xchg stc (bad) xchg pop imul xor out clc cmpsb roll bound cltd mov dec insl dec cmp push hlt sub inc mov test push pop sbb push lret dec negl aam mov xchg inc (bad) ror (bad) or jge jecxz sub (bad) lock call push into cli jae inc std add mov movsl ficoml ret imulb fprem popa pop repnz push adc or cld gs mov (bad) cmpsl es (bad) jae scas repz fidivrl jge or pop adc (bad) popf cmc sbb or mov xchg inc push jb subl stos mov xchg sub push fs bound fs cmc rorb mov je inc test add js jo mov push std jbe add cmp nop orl ss sti jns mov daa dec xchg cmpsb lret dec enter mov jecxz mov push lods sbb sub jns pop test xchg pop cmp xchg pop je or xchg lret xor push repnz pushf loop mov arpl xor cmp add xchg cld inc (bad) xchg jmp mov popa lods insl outsl pusha out in in ficoml pop or inc hlt jle das les (bad) aam sahf xchg mov scas js les lret add (bad) cmp add mov andb add (bad) xor xlat rolb lods cmp or insb xchg xlat inc mov xor dec mov mov push push js push or add out mov xor imul sub call setge rcr add xchg ja xlat pop rcr imul sbb aas iret adc or rorl push mov in xchg inc mov daa jne mul and enter out arpl ss jmp jns pop scas xchg ret and fisubr xlat inc mov cmp out (bad) int3 push xor mov bnd loopne adc cmpsb scas pusha pop push mov cmc and mov xchg into mov in (bad) mov sub out mov sahf sbb and mov dec test test stc out push and push and or in outsb nop (bad) ljmp fistp pop fbstp xor repnz outsb xor push dec fs push andb mov lcall mov sub cmpsb pushf jmp cmp sbb js icebp and cmp jno inc xchg push and xchg (bad) jmp xor scas mov push pop outsl xor sbb (bad) pop sub cmp push orl adc enter dec ret (bad) pop ja xchg aad ds mov dec xor jmp cmpsb dec mov jecxz popa shr sbb jne loope sbbl insb cmc fmull (bad) hlt xlat (bad) push jo out jecxz add mov mov cmp in cmp clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov (bad) mov std aas (bad) pop stc inc fild add lret or fisttpl inc (bad) and loop (bad) xor loop or sub sub mov jbe xchg sub adc or in test jmp inc les mov push mov test cmp xchg out pop cmp xor cld pusha pusha in sarl (bad) aas or shlb out sub xchg jg add xor sahf mov jge cli add xchg insb pop push lods dec mov enter out jns rol test aas jb stos insl aam (bad) cs mov mov and cld arpl dec add dec das sub dec push push xor inc xlat (bad) pop push stc gs jp adc cmp sarb test insl data16 inc fs sub test dec in sbb (bad) out cld (bad) adc xchg mov test int push fldcw pop or and addl aad inc aaa clc and adc out jbe lret pop outsl cmp cli or movl dec sub das sbb cwtl cltd divb test or pop jns lods fstps dec out dec xchg push sub or adc sti add insb cltd push rcrb pop pop push addr16 nop jns mov insl xchg cmc xchg mov or ds mov (bad) dec pop aaa adc btr je jmp dec addr16 cmp or cmp hlt mov outsb mov mov (bad) xor sahf iret ret iret push fs pop icebp lock mov mov or fisub cmpsb js (bad) call aad je ja mov hlt xchg roll pop lea (bad) adc dec popa scas mov inc mov xchg cwtl xor push test add push mov movsb pop jne dec jb in xor mov leave fstps lods (bad) in fldcw test iret aas aad sbb test or cwtl xor cmp mov jne call imul ss push out and jb negb aaa fmull xchg xor int push fdivl stos lcall mov out push popf pushf es mov mov adc cmp das loop push add int jge pop dec mov stos stos xlat mov push mov test sbb loop mov xchg stos dec stc cmp fdivrl mov bound mov mov popa mov lcall or call inc and movsb push hlt fwait jmp nop aas (bad) lret or out push pop jge and insl mov insl enter (bad) xor or or test (bad) mov cli mov in jno stos and cmpsl or xchg xlat xor cmpsb ret and outsb mov inc mov push jne pop mov add pop data16 mov and dec ret mov daa addr16 (bad) and sbb fdivrs stc lods fbld cmp adc add push stos mov jmp adc xchg and movsl xor or jle cmp in jmp sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor xor fs mov xor sbb xor sarl push dec push or and lds (bad) movsb lods and int3 inc lret lret nop andl out and imul test xchg imul ds cld and pop lods pop out cwtl scas test or or pop int mov mov hlt xchg cmp daa fdivr fwait int3 call inc mov xlat in xor adc cmp pop outsl nop test and (bad) sub dec (bad) inc and mov iret push mov mov sti pop push push cmc enter mov pop mov or notb cwtl pop pop cltd adc jbe dec mov enter sbb daa xor out cwtl pop call adc rclb push jae into jmp mov jne ret xor dec popf pop ds fisub cmc in scas inc push or fiadd fiaddl mov xor jle daa cmp mov ret pusha lcall sbb push hlt fistp adc (bad) mov negb shlb sbb das std negl xchg sub jo iret cmpsl mov (bad) (bad) xor and scas ret inc add getsec in leave dec movsb loope fldt dec sub or or xchg out lcall or sahf xor sahf inc sahf xchg mov aam ja scas lcall jne sub and mov cmpsl jne or rcr rcrb out adc in sti (bad) rcrb das sbbl popf inc int3 mov outsb jg inc out xlat hlt daa in ljmp sub imul aad jbe pop mov lock std add push xchg (bad) cmp jo pusha neg or insb cmpsl add inc (bad) pop jecxz cmpsb repz jnp stos stos stos dec repnz cmc dec sub ret or int3 or pop aad xchg xchg xor aam je inc test not cmpsl jo out jno pop jbe xchg pmulhuw or or jne rolb or js je mov sbb mov mov mov jl inc cmp push mov bound push mov xchg loope pop inc je es (bad) mov adc psubb or cmp rcll movsl sub ret pop or and ret stc lea jecxz add xor call jmp xchg jmp jo icebp mov in fnstcw hlt ds jle and test jecxz stc jmp ficoml xor cltd xchg loopne xchg (bad) (bad) mov iret inc (bad) in aaa pusha imul test inc aam cwtl (bad) cmp push pop and dec push lret xor mov pop ss mov ja sub test mov cmp jle pop fistl jne mov (bad) lahf xor maxps divl mov sbb lods add pop gs inc fimull mov mov insl add ss lods or xor jecxz sbb aam and roll aad pop dec ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl pop mov pop dec mov lret dec arpl cs jmp or test ss orl jbe ret sbb pushf dec mov jne xor jb fisubr push inc jge icebp pop stos ja icebp lock pop out jle dec sbb mov cli push mov lea js fidivl out mov repz repnz outsb movsb add sbb (bad) or dec sbb popa inc push or mov std xchg sub and dec sbb adc dec int3 mov xchg jg lods pop jge fidiv add scas xchg push mov xchg gs out xchg jno xchg mov daa in push dec ret cmp bound push adc mov jle jbe sarb mov int or fdivrl xor addr16 (bad) ds fiadd push ds xchg push add setbe repnz sub and push aad imul xor push sub xchg push sbb and or (bad) jmp adc gs dec cld and out inc aam mov jb dec fsubs cli ljmp repnz xlat mov fist jp jg cmpl hlt adc enter and jecxz pop dec insb lret push in enter inc push inc test ficom and dec dec test pop aam or fnstenv lcall mov jmp mov mov pop jns inc repnz sbb iret jecxz mov sbb mov inc fxch inc pop push push aad in push cmp jnp or das notl mov daa cld mov aaa mov or xchg mov xchg xor sarl mov xchg xchg push stos lock repnz cmp or call mov and sub ret push ret mov sahf jnp mov leave out ror rolb aaa imul push jge pop dec xchg fpatan (bad) cmp jg mov mov pushf cmpsl js mov test inc or repz jge (bad) (bad) ljmp cmp adc rcrl inc fwait dec jecxz xor cmc xchg inc sub sub mov mov mov mov dec or add push test cmp insl sarl pop inc xorl lahf cmp cmp dec sbb sti push jp pop test or xor jbe pop pop stc xchg xchg mov scas fwait fwait xchg cmpsl cmp das push xorl icebp dec mov adc movsl dec movsl jns fnstenv adcl lret or jle iret fisubl mov (bad) xor daa (bad) pop jno jecxz sub lret fs mov or cld rol push mov mov arpl ss mov sbb pop std fcompl and xchg jmp scas or adc shlb push aaa stos scas fdivrp sub inc sarb and jecxz shrl insl push aas and mov cld int xor shrb lods pop pop loope test mov fmull pop sub sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push inc mov fisttpl cmc subb lds imul std repnz andl adcb stc inc adcl inc test mov pop add comiss cltd jae mov sti in (bad) jbe cli mov xchg mov push sub int lods adc lods jmp mov pop xchg adc addr16 hlt insl sub aam mov or (bad) mov or jae into pop add std fimull mov lods fdivrp or inc jge xchg leave call fistpll pushf mov movsl lcall fistp addr16 aaa popa pop lsl scas into jecxz popa push fisubl out insl mov loopne jnp cmp xchg dec (bad) mov cmp xor lock adc movsb adc fild int3 mov dec cmp jno push lahf or inc les add mov scas cld and sub cli cmpb xor pop leave mov push fwait aad sbb mov faddl xor mov dec pop js stos mov out push (bad) (bad) xchg xlat cpuid idivl mov adc jo lcall jae fwait cwtl xor dec in push mov (bad) clc cmp sub adc cli jmp pop and lret jg mulb fwait pop insl gs jb xlat pushf sbb call ret push fpatan pop xchg test or sub mov fbstp sbb adc push sub loope ja sbb fdivrl loope jmp sub and mov pop repnz pop push (bad) push mul cmp outsl adc lods push adc dec rclb dec adc jle mov stos sub cmpsb lock cltd clc push dec jbe lret jbe loope sar jp pusha mov or jmp subl xlat popf jne sub ss dec inc xchg aam popf lock push repnz dec sbb (bad) xchg out imul in or adc aaa rcl cmp sti xchg repz or dec sub mov push (bad) mov incl shl jbe mov aaa dec jle mov aaa test out iret sub jmp sub pop xor daa mov xchg push mov bound lds sub jb dec sub mov sub jb mov jp pop sbb xchg adc xlat or mov fxch (bad) inc xlat aad int3 mov enter and outsl cmp leave pop push adc aam xchg fadds outsb fs dec sub sub cmpsb es inc ja lahf es adc jbe jns mov pop iret cli fnsave pop dec nop jb add xor loopne (bad) enter dec push in subl in xor dec and sub push cmp push pop mov lret fbld out inc mov push xchg imul (bad) mov (bad) ss mov pop mov test add stc sub in pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp adc sbb sbb (bad) cmp xor push jg push imull push xchg pop mov pop sbbl ret outsb je movsl loope es cmp rorb rclb cld add xlat add nop ds push bound ret out lcall lcall leave mov xlat dec pop lret xor push movsl rcrb jno pop call repz subl sahf push fwait mov dec xchg mov jae outsb lcall push push mov sahf enter (bad) pop test mov (bad) pop cmp aaa sub sbb gs and mov fsubl call jne sub jmp dec sub loope clc (bad) lret lahf adc loop adc mov add jge outsb jb and dec popa dec add cmp mov sbb arpl mov nop cwtl hlt dec rcll cmp decl out or mov lea xchg or sub adc mov pushf sarb adcl jae ret (bad) adc outsl rcll xchg push cmpl ljmp lods lret sti pop xchg push stos push xchg out pop and mov daa add mov seta fs mov imul shrb aaa sub decb in adc mov (bad) jb jg (bad) mov out gs sub cmpl cmp mov shr push push fptan mov clc subl push xchg and daa outsb dec xor aaa push iret push mov push jnp push inc lods ret aas cmpsl test ret push mov xlat xchg test jl adc test pop dec cmp xorl adc fsubp mov mov pop insb or cwtl cmp iret fs sub rcr push testl (bad) les imul jbe cmpsb pop jge (bad) sbb (bad) (bad) mov ret cmp xchg outsl ljmp int mov gs and add (bad) xor fwait adc cmp sub (bad) and mov clc add mov push inc fstl fs mov push jmp add cld add jne mov push sub enter popf in inc cmpsl fistpll mov stos ret leave xchg outsl and out xor hlt sub fcomip add adc xor lret inc push push pop mov pop insl cld fnstenv aas mov sbb imul rcrl jl sub clgi and (bad) jle push lods dec adc lret sub xor iret xchg ljmp popf pop jb movl (bad) fmull mov sub sbb enter jns nop hlt pop movb mov pop dec das pop mov outsb or mov mov add lcall or dec push insb ficoml and hlt hlt push and in sbb pop pop rclb iret xchg stos cld imul (bad) testb test xor stos cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl pop test inc addr16 jle popf das popf dec adc ret xchg clc sbb xchg cmpb sbb loopne add jne dec je imul shll in pop cmp mov pop lods sbb adc adc pop sbb stc ret mov pop cmc out mov pop jecxz gs inc stos pop imul sub mov cmpsl push lods inc (bad) fiaddl std xlat inc fst cmpsb pusha dec jmp pop bound fsub sub xchg mov shrb add or fstpt roll loop pop add sbb pop pop and add dec test mov xchg xor outsl not into and sub push sub lea (bad) das jge xchg xor scas js mov iret cmp leave loope cli (bad) nop (bad) (bad) jp in cmpsb dec out imul in dec sti push fisubr aaa pop scas andl cmp inc das lods fdivrl mov push push (bad) sub cwtl xchg icebp aad adc jmp out in je or jnp fisub daa gs sbbb xchg imul sarb inc dec lahf ret and or or in rep std dec push imul inc dec fs test jnp lret lock add push in (bad) jae out jb mov movd fsubs dec jge push (bad) inc jae in clc sbb lods push or mov movsl fisttpl inc pop mov jno popa lret pop add lods mov mov push dec ja cmp cld fxch out lock xor inc pop pop xchg jnp or xor not jge push fcmovnu and jae (bad) ficompl pop rolb or mov out add inc xor pusha js clc repnz push xor xchg stos mov fcoms stos leave nop mov psubsb xor push xchg xchg push jmp in (bad) dec roll in sbb push adc in ss jae pop adc cmp orb jno sbb in out aam or nop lret dec mov pop cld cmp add cmp pop cltd cwtl scas or in push push sub js inc or inc call fs mov push mov pop or std mov (bad) xor pusha rcl sub and sahf xor jb mov ss dec push insl and (bad) sahf hlt cmpsl mov aam xchg jecxz ficoml mov fsts mov and popf push into push fnop xor jne inc inc hlt jne xor adc (bad) loope sub adc mov inc xchg xor or repnz add pop rcr mov inc data16 xchg daa into js inc mov jge sub jg lcall enter push (bad) xchg adc cltd push int repnz jg outsb jns lea lret xor js bound cmp ret addr16 cmc xorl cmp in lret mov xchg xchg add test daa fnop inc push adc and xor aas loopne add (bad) mov xchg iret imul not inc dec mov faddl xlat lods add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl fdivrp (bad) loopne mov add pop aad mov fwait sub sbb or cmc and pop ljmp negl mov xchg shrl inc scas insb sbb or add das aad cmpsb aam mov cmpsl push dec inc push mov imul (bad) mov push lods jl sub inc fbstp adc jge into pop cld ficoml mov inc fstl in inc dec cmp push es loope xchg push mov mov push cmpsb addr16 daa sbb into adc (bad) icebp test clc lds ja,pt daa imul cmp inc cwtl les lock push imul popa mov cmpsl xlat lret push jmp in out sbb mov in cmc cwtl sub fs sub push push add movsb mov rol dec pop ret popa dec jl imul sbb inc addr16 aam push cmp out ret divl inc insb data16 notl popa ss cmp (bad) mov vcvtsi2sd sbb push mov dec fdivl or sub xchg mov scas jne dec lret ret cmp (bad) fnstsw hlt and rol add sub push and and fsubs dec dec negb insl cmp repnz rcr sub je loope pop dec xchg clc inc fwait popa jg fdivrl dec leave jb mov sub (bad) cmpsb jb mov int3 ret jg std mov xchg sub in rol js les leave (bad) cmc pop adc movsb jmp inc fistp popa and (bad) jns mov xchg push mov push dec lods jno add lds mov or pop scas sbb xor out or mov xor pop clc mov adc ds jp jle push xor inc jg cmpsl mov pop into mov sar fstpl out cltd fbstp (bad) sub lcall and mov dec pop sbb cmp cmc inc movsb ss lods push cmpsb movsl inc dec mov jge mov jmp loopne xor inc xchg or rorb leave push mov mov mov add sbb lcall push push ficomp aaa sub adc push andl and fstpt movsl cli mov or mov fisttpll insl nop int out pop je int int3 in jcxz stos cmp dec push cmp push fidivl lahf jo add mov ja inc jmp orb loope in jnp xor pop insl push or and dec or dec (bad) popa nop stos mov xchg in aam fs insl jo leave mov bound int mov iret cmp inc les push daa (bad) pop std adc mov jmp jo pop ret pop insl std cli int3 jg mov jne lods xor inc std mov addr16 idivb push lds shrb xchg xchg rorb repz decl es jge add fsubl fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jbe sbb mov nop repz adc repnz push bound mov rclb imul mov add or cwtl sub (bad) imul mov adcl sahf icebp test dec inc or jae fcompl cmp jne in pop xchg mov jno test nop imul pop pushf call gs or iret int cmp jb imul mov fs sub in inc inc adc fcoms xchg mov sub push movsb movsl test imul dec movsb mov or into fistp xchg or push jno mov lahf and and pop xchg mov mov cmp xchg inc push pop les dec out adc mov ret lcall ja mov mov (bad) mov mov sbb jge jg push into ss faddl sti jg push pop sub into dec mov fildl nop (bad) xor int adcl sbb pop pop pushf inc (bad) adc push pop movsl mov movsb mov push arpl enter xor mov stc mov jnp xor (bad) insl int3 roll fs shr loop xor jae mov test dec mov mov sbb fstl jmp push js jnp sub test addr16 pop dec out pop mov mov fmuls lds dec cmp insl add xchg fdivs mov and jae push les (bad) mov xchg hlt lock push xorb pop jl daa int3 leave movsl outsb push jo jp pop pop or inc xrelease outsl push jecxz sub mov std shlb push pop stos insl sbb add mov adc inc cmc cmc loopew and es ret adc cwtl ljmp or xchg push add add mov popa loope sbb rolb mov xchg sbb push xchg inc pushf (bad) sti and or cs data16 cmpsl cltd sub ljmp push push xchg push lods iret call les push mov lock popf jmp arpl mov scas cs or jnp enter xchg inc es addr16 nop push lods jge aam into cmpsl pop jge mov lahf mov test call xor pop scas jmp aas pop bound inc and fmuls shlb sub out gs stos jns jno lret rorl lods mov add (bad) leave lahf movsl je ja out fmulp adc fistp fidivr clc jmp lock xchg call stos push push add outsl mov jl dec inc jecxz daa dec daa sbb in arpl cmpb pushf pop mov js dec cli sub jge inc loop bound imul cmp cmp outsl mov dec ret (bad) loope fild mov loop mov mov insl sub notl adc inc loop inc adc dec (bad) jle mov lret mov js mov int3 scas mov dec inc nop mov into test insb jae lcall shr mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out in scas inc bswap sub cmp xor les jecxz iret dec mov jge sbb dec xor fcomps inc xor ja in push mov imul int3 int3 jb and jl dec or xchg rclb popf lcall mov cmp push and or add sarl gs sbb xor popf outsl push in or in dec mov mov and fwait ret sbb sbb push jle xchg xchg cmp and lds int (bad) cmc fildl add xor jp insl xchg repz push xchg lret leave and ret lcall imulb push mov sub imul ljmp das sbb push daa or mov popa xchg jl popf leave xor xor outsb or xchg sbb jo rcrl cli cmp jno aam shrb das add mov jp pop rorl xchg push fs jne pusha mov outsb cmpsl jmp mov jecxz lea ret jbe push out adc add push into (bad) xor xor dec sub call fildll xorl sub sbb adc jne jecxz jo cmp mov mov pop nop popf scas loope loopne lock push and das sbb sti mov mov andl lods stos jmp xchg adc or iret mov lea cli pusha (bad) xor adc jno scas movsl cmp jnp std xor jg (bad) mov xor adcl jecxz adc mov clc inc xchg popa mov cwtl insb mov in jae xacquire jne xlat mov push aad imul je pop sbb sbb jb push mov jmp sbb jne dec clc lds xchg out (bad) mov pusha inc xchg push dec mov arpl jns aas and push outsb mov sub sub cmp add sbb xorl loop cmc fcomp mov xor aas adc test mov mov mov pop sbb mov mov and xchg inc push nop dec out cmpsb or lods popf mov mov popf sub lds imul test mov inc add adc mov gs ds xchg ret push mov les inc sti fimull ret pop pushf aas js rclb adc fidivrl loope daa push inc addr16 notl subb addr16 lahf xchg cmc or stos fadd ljmp enter dec fldenv mov scas loope imul push and mov gs fcoms lock sub push (bad) popa mov pop repnz hlt add push push jg loopne fwait mov fcom xor icebp push fsubl mov inc push rcl jmp sbb add std outsl mov mov scas popf xchg mov iret dec pop push pushf stc mov pop sub int jmp ror (bad) ss mov imul test in cli cmp notb lret iret jae xchg les dec mull cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov jbe into fnsave xor cmpsb xchg dec and xor fdivr insl lods dec bound sbb repnz into cmp in mov loope xor lock ret push lds scas mov lahf mov mov xchg dec std loopne mov push dec xchg stos cmpsl inc test adc int push in pop fidivl jns sub aad repnz pop cmp mov movsb mov inc fs aam loop (bad) lock sbb fidivr fwait bound xor pop in push cmpsb cmp jle cmp enter pop add pop jmp mov jnp push test fwait stos push jecxz fwait or or or inc jo,pn cmc rol push jge repz inc pop cmp fsubr insb pop inc imul cmp inc in sahf lcall je inc add dec add xchg out lds cld (bad) ljmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl addl jo stc push incl add add nop mov inc add mov inc add add (bad) (bad) incl add add mov add lock inc add mov add dec add add add add add cwtl sbb (bad) incl add add mov add lock inc add mov add dec add add add add add pop adc (bad) incl mov add lock inc add mov add inc add add add add add add inc add (bad) (bad) incl add add mov add lock inc add mov add dec add add add add add pop and (bad) (bad) (bad) incl add add mov add (bad) (bad) (bad) incl add add add inc add inc add add inc add add and add inc add int3 int3 int3 jmp mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call xor push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call lea push call lea push lea push call lea push call lea push lea push push call add pushl call mov lea call push call mov lea call call mov lea call fldl push push fstpl call lea movl mov lea push fstp call mov lea call fldl push push fstpl call lea push fstp call push lea pop lea movl mov call push lea push push lea push call mov lea call lea push lea push push call add lea lea movl mov call lea push push call mov lea call lea call fldl call call fldl mov lea push push push lea mov fstpl push push call lea push call mov lea call lea push lea push push call add lea push call lea push lea push call push lea push call lea lea call lea call lea call lea lea movl mov call lea push lea push call lea lea call lea call mov push mov pop mov mov cmp jg add mov jmp incl mov lea mov push push call call fildl fcompl fnstsw sahf jne mov lea add push mov mov push call cmp fnclex jge mov push push push push call jmp mov mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov lea push push call cmp fnclex jge push push push push call mov push pushl push push push pushl call call mov fwait push jmp lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov push mov call mov mov pop pop mov pop leave ret push mov sub push mov push mov push push push push push mov movl mov and mov andl mov push mov call movl mov push mov call mov mov pop pop mov pop leave ret int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf in icebp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) call repnz add add fdivp add call add xor add mov add push repz push repz sub add cmp add dec repz xchg add sbbb add add mov add lcall sbbb add mov add add add aam add call repz or add push hlt add sub add inc hlt add leave add sbbb sbbb add add popa add cmpb add hlt add scas hlt add mov hlt add fdiv add out hlt add add andb cmp add or add adc add sbb add push add orb add ds add and add push cmc add add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push je push popa jb popa insb add enter jbe popa dec xor jb add pop inc dec insb outsl add test push imul xor add push imul xor imul fs imul xor add stos add fs imul bound pop pop jbe popa push popa jb jne add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add 