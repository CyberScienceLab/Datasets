pop and (bad) jae leave ss daa (bad) repz in xor icebp sub ficom xlat pusha leave imull or add jecxz sbb ja sbb and cmp or dec xor repnz push fs popa sbb pop sbb fsubr ret inc add (bad) mov int3 xlat jo cwtl adc mov add jo repz inc call sub inc int3 data16 aas and xor inc sub and xor push in sbb inc call xor and popf int3 sbb pop jno add pushf mov mov cmpsb mul in jnp add pop inc in xor jbe mov (bad) xor js jno jo cltd ret push xchg popf jle add adcl sbb ja fildll push and push xchg aaa jbe pop cmpsb jge lods jne fisttpll add mov cld lret add lods popf outsb fimull es xor cmpl push es lods std or int3 ja cmp sub cli out aas dec scas dec and mov add orl pop mov and hlt jl jo jae aad push xchg rol in inc add inc gs js cmpsb mov jno js ds mov xchg cmc cmpsb (bad) addr16 lea lahf jl mov test leave mov or jp aaa out ss sahf mov test repnz rcr pushf dec pop cld pop push fcomip jno or push jae stos mov sbbl rclb fsubrs mov xchg push in in mov fisubr sub lds (bad) dec (bad) pop adc (bad) pop add cmp jnp in aas aad sbb dec add pop mov inc call dec or dec and push lods inc (bad) jle,pn in and jae ret and push pop jo mov fisubrl mov and lock add divb pop push mov push insl (bad) jbe xor (bad) mov int das in cli sub fisttpl (bad) aad sbb out int3 loop movb jo and cmpsb xchg and cwtl xchg or scas icebp xchg out mov decb push push aas leave mov sub in fst das cwtl pop (bad) in sbb cmp mov (bad) pop xchg sub insb lea mov lods push sbb pop (bad) mov push jge imul cmc movsb and dec es xchg xchg lea out jae mov sbb xchg and stos cld or pop push jae pop inc lea rcl sub push (bad) lock (bad) add push inc lds jne es mov out jecxz adc xor nop add cld xor adc add fldl adc sub stos je adc mov sti mov nop imul cltd jno bound mov dec fnstenv fiaddl roll xor sbb mov jmp push inc leavew hlt les es cmp xor mov lcall shll (bad) sbb dec jno push dec sub sbb out loope xor mov inc push xchg jns sbb or inc icebp dec and mov outsb enter negl leave push repnz mov mov inc dec mov addb mov cmp push jbe jne (bad) ja js out add loope xchg mov fwait push inc lahf imul fisubr jmp mov xor fs mov int3 cwtl lods (bad) stc cmp inc aad sbb dec jl js sub pop pushf insb adc push xor dec sbb cmp mov cld test sub fmul dec cmp dec (bad) ljmp pop and sub imul lret cmp push sub iret or daa aad rcll jecxz pop mov mov popf dec out adc xor outsl cmp push lods test fnsave jo sub loop push bound stos pop lret enter jnp insb mov inc mov popa xchg mov orl stc xor ss ja gs inc lcall inc sbb std jae dec (bad) (bad) lock or sbb repnz scas hlt pop mov aad cmp fadds cld rol push adc pop sub sbb add xchg adc mov dec outsb imul push jbe enter and push lahf and mov outsl and test mov (bad) jecxz popf dec (bad) cld pop sahf or gs (bad) xor inc jno insb mov pop fadds xor sub aaa ret ret or imul adc nop and fs or ja xor add sahf push jmp data16 push iret enter ds jp int3 sbb dec pop cld xchg lea ret out push or or push cmp rcll ss cs loop push pop ljmp dec repnz addr16 repz inc out jle inc xor mov lods stos jns xchg xor jb xor sub xchg adc cltd fildll inc pop sbb mov push mov xchg cmp or popf inc daa arpl xchg push stc inc jl push aam inc in test dec pop mov add sub (bad) mov jmp sbb lahf inc movsb xor pop in adc imul pusha mov test dec inc mov scas jle stos nop cmc or loop xchg lods ret mov rcl mov jae jnp movsl mov jb adc mov imul aad out mov loopne lsl mov mov or xchg push adc push jecxz test cmpsl (bad) jb (bad) loop jle sahf pushf push std lea dec push ja pusha adc push push inc cmc dec add or lods mov sbb lcall xor aad shrb fstps nop xor push xor les std inc cmpl cmpsl daa cltd fs pop push dec es sbb insl xchg mov mov mov mov cld pop or movsb (bad) bnd mov es jnp lret lds test jecxz cwtl pop mov xchg es (bad) xor push shlb sub lods inc xor dec xchg inc mov xor loope lcall adc into into mov mov cld hlt mov test sub cmp in xor adc ss xchg add xor dec (bad) idivb xchg or outsb cli cwtl mov test and xchg negl cmc mov shlb cmpsl pop pop lods jo adc ljmp mov call loopne pop into test cmp andb cmpsb dec mov mov pop lea xor dec push push pop test repz gs (bad) cmp stos jp push mov stc lcall ror cmp rcrl imul mov or (bad) jns pushf mov insl out jbe out sarb adc movsl push repz pop push (bad) or dec je cmp pop lea (bad) cmp cmp ss shrl add repz sbb dec mov mov into out decb fimul mov fs adc insb out jmp mov and roll xchg pop (bad) dec xor mov lea mov ljmp rclb xchg mov fidivr or sub loope fstpt mov xor test lret fmul dec test push popf fnstenv lcall xor aas inc adc test repnz orl (bad) imulb xor xor cmp or pop sub sbb sub popf sub in out or mov inc push xor xor push push insl dec push in and mov cld sbb call stos or or inc mov inc lret mov bound iret arpl mov xchg pusha (bad) scas fcomps or mov fstpl cs ret pop or mov xor (bad) ss inc lods stc pop and mov fild dec sbb fnstcw inc cmp es push popa fist jae fs int3 xlat mov in mov cmpsb jecxz (bad) sti fnop sbb jae int mov insb gs adc sub sub into inc cmp pushf xor lock jae push (bad) stos pop dec add into ficomp xor adc sbb mov or aam dec xor cmc push sub call mov mov mov inc pop outsl mov jp xchg cmpsl cmp cmp gs dec inc jne or pop and push mov das lea push sbb sub inc xchg fwait in dec out mov lods lock out sbb sub into inc pop mov xlat (bad) clc out dec push sub ljmp es push mov pop call test ficompl sub mov xchg xor enter mov int3 inc pop mov gs jmp lcall in lret dec xchg movsl popf inc xor sarl cwtl ret in roll mov (bad) jecxz add mov jp add pop add jmp loope dec pop (bad) cld test cli ffree (bad) (bad) cwtl inc fdivrs lea adc or mov bound iret xor pop inc daa jecxz mov loopne pop inc push mov pop sbb cmp aaa ret cmpsb inc addl fdivl jmp or scas shll dec xchg mov pop mov or mov sub sub dec nop jmp ret inc das ret stc sub xchg inc pushl arpl (bad) mov mov xchg cmpsb das push stos lcall jae icebp out (bad) cmpsl sbb push repnz mov cld fsubl mov xchg call sbb push mov push xchg sub jecxz mov mov ds ret dec fild into sahf cltd movsl cli (bad) loop inc add add sbb jl sub bound decb jmp lcall xor pop add push mov into addr16 (bad) in add cmp ret cli mov lahf lahf popa popf jne cmp jne add adcl imul or jmp js iret sbb orb mov jne loopne mov int inc aaa adcl rorb add repz mov pop xor loope shlb cmpsl or stos sbb ret mov pusha neg popf pop insb adc mov (bad) fbstp adc nop push xor outsb les shlb xchg mov inc dec mov out xchg adc jmp cmpsl popf dec insl arpl pop lock cmp je aad dec int3 sar je adc dec push sbb jmp je or xchg pop jb js scas sahf push mov push adc xlat push push inc (bad) mov and pop mov mov jne and mov pop sub stos std sbbl repz aad sbb xor jnp imul mov mov in or dec test or std lods div hlt jb dec lds js or push xchg les test mov push fcmovu lcall inc fdivl adcl sub aaa mov mov jg lods add jae leave jl mov inc mov pop decb hlt sbb mov add pushf outsl add pop scas jmp rolb scas inc cltd insb iret sub inc push and bound mov mov add adc push cmc test cmp cmc (bad) fstpt sbb loop (bad) idiv imul dec (bad) testl or shr add movsl out adc hlt in das (bad) xor into mov mov mov gs inc xor cmc sar repnz push fisttpl jne outsl push fwait add ja or (bad) hlt mov pop out xchg fsubrs (bad) imul lods push stos adc xor add std fwait outsl push pop cs addr16 cmp lret lods add int or xor xor loopne cmp fcomps and cmp insl rclb nop imul xor mov nop pop inc mov xchg in xor (bad) (bad) xor pop ret je hlt pop mov shll (bad) mov xchg push xchg xor push xchg jg ss js pop inc insl dec jbe push sub std jl imul insb aaa sbb es fs lods cld lcall std lahf movsb movb rcrl das (bad) jmp add mov (bad) xchg mov jns dec mov ret out movsb pop outsb adc out and test sbb xchg icebp into pop pop jge xchg dec mov xchg in ss xchg xchg or jge rcrl (bad) aaa repnz xacquire in add dec xor jae xor push inc es push xchg fdivp (bad) lock mov jnp add xchg fidiv jle test inc gs pop sti jge test xchg mov clc sbb lods (bad) sub mov mov and cltd xchg add sub in cmc aad jecxz xor pop cmp add jecxz pushf popa sti jb mov aam xchg lret or nop scas xor gs jecxz outsb loope push out push sub pushf mov push dec sub ret cmp mov inc loopne fs jae mov imul negl int xchg cmp xor mov out or jne fdivl jl push xchg ss xor xchg in push cwtl mov cmc cwtl lahf addr16 jno mov xor cs daa push mov xchg gs sbb in add pop mov mov stos jne ret xor inc pop mov insb mov negl add pop mov push std dec (bad) mov shl ljmp xchg jg xchg cltd add cwtl ret sbb rorl or inc dec (bad) jb in pop aaa xchg mov sub (bad) sbb xchg mov xor lods cltd dec push lods xor lods lods int push movsl lds mov int lcall and (bad) shl push xchg jmp movb arpl dec mov outsl push addb jae mov dec pop adc ja addr16 in lods sar add mov femms or test pushf cmc jmp sub sbb int or pop push movsl xor cltd repnz push pop push fild or mov cmp and pop add jmp xor ljmp in int3 subl or test out cmp andl ds addr16 sub dec mov mov gs xchg mov sub stos push in loope mov in add mov adc (bad) push xchg out (bad) pushf fs push (bad) iret adc xor or mov pop test cmc outsl push outsb subb je flds mov insb out mov mov cltd xchg sbb xor cmp aaa stc lcall rclb jle pop mov push out ficomp jne inc mov and and jb lret push movsl scas and inc int imul adc and fiadd mov popa xchg testb push sbb dec out xchg mov insb lods add or bound das push arpl cmp pop aaa adc loope mov roll inc xor adc inc xchg popf inc add or add cmc (bad) clc inc rorl das cltd dec js aas push js out lock mov inc sbb push push inc xor or mov lcall mov dec xchg push outsb fldcw ret dec outsl mov pop push cwtl xchg jne and ljmp sahf cmp pop inc jb mov in daa xor mov aaa out mov insb repz and int3 xor outsl mov inc push inc stc dec push jnp jb mov mov fcmovb dec int3 mov fadds pop notb and sub pop xchg pushf or loope inc xor adc sub inc popa cwtl jne push xor ss and in mov mov sbb sub push lret lahf pop and sbb dec inc jno sbb insb push sub adc popa fstps clc jno in negl inc ss jmp push pop add adc pop lahf movsb inc pop cmp imul test loopne pop push aaa pop clc sbb push inc enter mull inc fbld jmp or repz nop jae mov es mov mov xchg shrl mov jge cmp cmp sbb lahf jnp (bad) clc mov xchg cwtl mov inc adc lods jns mov movsb fcoml inc cld sbb popf repnz ss lock mov pop and xchg fistpl sub clc or insl push enter or mov (bad) or inc mov int3 sub and repz mov add xor xor (bad) std outsl xchg jo scas mov fs add out lret insl xchg lahf jbe in cld jle subl sbb lods and push imul xchg insl pop sub push mov pop lods mov xor and int3 ds push addr16 imul xchg scas add loop cmpsb mov jmp inc push sub push aad adc sbb xchg movsb dec lcall jle jno or xor lret loopne imul lods xorb cmp mov int jae nop es scas xchg insl (bad) mov (bad) mov rolb inc jle pushf jae (bad) sbb mov pop test cmc sbb mov mov mov and ja cmp insb push cmpsb mov mov inc in inc add xchg fst push enter xchg mov inc incl mov xchg stos adc (bad) bnd clc mov lods push jmp xor ja loopne je in dec push xchg call repz adc cwtl sbb cmc or xchg out aaa loopne pop aad push push jae out fs sbb ficom pusha xchg insb lret push sbb cs mov rcrl movsb pop mov or mov dec in sub pop and ret and sbb push push jmp cmp jmp shl add ret dec icebp xor inc iret cmc xchg mov lea arpl inc imul in movsl into outsl sub repz pop sub stos fs int3 push inc push pop or iret cmp ds dec lods xchg js or bound mov mull les lock inc das fmuls fiadd push xchg ficom insl pop inc outsl notb add jns cmc xor movsl pop mov dec sti xchg aaa fwait add xor fsubl lea pop outsl xor cmp mov xchg inc popa out xchg mov ret inc loopne push or mov (bad) in outsl into adc xchg test and push xchg or lcall addr16 inc push fisubrl sbb add xlat add rcrl adc (bad) mov cmp mov fldt adc jp adc push scas mov clc fisubrl or ja adc pop add pop dec lods mov inc ja dec mov xor push aad push pop adc and sub pop sbbb pushf mov enter bound inc xor (bad) fbld sbb mov sub (bad) lods mov mov es xchg imul jbe push sub loopne cmp mov daa lahf loop test and in sub xchg jb xor add mov stc test in inc sbb add pusha cltd enter jae xchg jle push dec fldl mov sti dec cmp lea (bad) and jmp mov dec sub lods xchg push call ret daa imul aad sahf push push aaa (bad) cwtl in sbb enter test sbb call stos pop scas dec fnstsw pop lea cli xchg xor fbstp ret xlat jbe clc adc inc cmp in into add mov bsr pop dec out and scas out push cld inc sbb ret xchg xchg push cltd leave xchg adc in rcrb std adcl or lods popa push cmp cld insb int mov jge lea push adc shlb outsb sub inc leave loope cs out dec dec jge cmp rcll push xor xor in sub add nop push lret xchg imul decl jns xor lcall cmp aaa jnp inc iret addr16 mov xchg out insb movsl psubb fs xor dec or xor lods mov dec jno gs push mull ja and icebp mov lcall push pusha mov adc adc jecxz das jae test or call lods dec lods push adc je add push js cmp das pop dec cltd addl test xor xchg xlat adc add and push inc pop cwtl ds imul add out addr16 jle fs pusha arpl int3 testb mov add adc mov in lea les add jo popf lods test sbb imul bound jne xor jno mov loopne mov inc inc (bad) cld xlat stc in inc or jl repz push pop pop jnp inc add cld dec jbe lock arpl mov adc pop call nop pop pop iret pop mov add jle pop adc sahf hlt inc fs add adc subl cltd js insl in je lock in int cmp lods push lods (bad) fsubrl mov fisubr in mov (bad) repnz mov ljmp adc add and pop dec add and dec (bad) mov lahf imul outsb cmp pop decl dec jae std (bad) inc push push cmp adc (bad) jno adc notb cli jecxz icebp adc mov cmp mov jo clc ds in out inc xor dec dec and or pop dec ret adc loope pop ret jbe jns (bad) pop das jbe or mov (bad) (bad) jne xchg int3 bound push add inc sbb insb push sub jb imul cld lods push imul jge inc fs xchg es fldt mov push push imul mov lea sub lret call pushf cmp es inc cs xor lods and push clc push add roll pop sub inc nop gs and jbe xlat test add iret lret sbb (bad) loopne add mov hlt rorl xchg xchg movsb lahf jne push pusha paddsb jl das data16 mov (bad) dec push cmp lahf fadds movsb push xlat jbe rdpmc cmpsb aad out (bad) imul dec scas and js adc outsb movsb mov jb mov dec mov add test add mov mov hlt mov fsubrl shlb fucomip rcll ljmp int3 outsb (bad) je inc xor pop sbb mov pop mov sub leave push mov sarb adc addr16 push and lock sub mov mov dec iret stos push sub aam sbb and inc and rcrl inc lea push add or adc xor mov xchg inc inc movsl and push pop aam sub dec mov pop xchg lret mov jnp add xor (bad) inc cli add (bad) fwait lds pop std shr hlt stos xor dec cmc aam cmpsl repz movsb test and and fadds mov cmp cmpsl mov adc jge inc inc lods paddw fwait sub out sahf jge push xor xchg xchg (bad) push xor stos fstpl in aaa stc xor or jns les inc out mov lahf xchg xor sahf cltd mov push js push sub xor dec push mov fbstp xor lret lods dec adcl cmpb insb xor add clc xchg mov jl sbb scas je idivl in inc int imul rcrl dec andb add in mov cmp mov xabort aad sub int3 mov sbb add les std int3 sub jne cmp popa addr16 pop sub sub pop int3 pop push jecxz nop aaa xchg ss xor cmpsb adc cmpl dec dec cmp das lock getsec (bad) into mov push imul lret lods popa ficompl pop add mov sti pusha mov es push push imul xor fistp pusha fwait cwtl pop xor mov dec dec or mov add jno pop mov and jae sbb xchg or int3 popf lcall cmp std sub mov sub push xchg xchg pop iret pop fadds repz inc dec sbb xor inc inc int3 mov jl jmp inc jbe sti add xchg adc mov xor notl mov and mov ror add (bad) outsb xchg or je lock xor inc (bad) ljmp insb cmp lret sub inc fistl push pop outsl loopne pop mov out xor adc xor xchg fnsave leave lea mov xlat sub insb push lahf or popa mov test jne in add sub in cmp xor and push push push fild in aaa ja js xor data16 addb or aam pop lock test adc nop insb pushf adc stc mov aaa std inc sbb imul mov xor fwait mov jge out jns (bad) icebp pushf push rcl push sub shrb or lea add add fcompl jmp bound cmp inc lock xchg add mov cmp or and int3 jb pop test pop push and pop addr16 in jnp bound andb xchg adc lahf pusha fwait test mov insb mov xor (bad) fs lea push das lahf mov jne push in cltd push iret xor (bad) fistpl pop cld test sub inc inc pop inc jecxz lret pop jbe mov jge bound sub data16 jge inc sub in pop aaa loopne aas lea or mov in clc add xor push insl jecxz mov jo stc inc push jae mov dec pop push and sub cmp xchg inc xchg or lods mov fisttpl adc das sub sub sbb xor fwait push fucomp arpl int push rolb lock sbb xchg mov adc sub inc aaa push inc ss repnz imul xor loop orl cmp mov rolb call inc cmpsb int inc add frstor sbb xor adc mov inc xchg das lods insl mov out or call test nop sub mov mov mov add adc (bad) rolb loopne or xchg fsts (bad) pop pop and and sbb dec and xchg bound pushf push fmull pop mov je lock jge jl in test adc scas fdivl int scas loope push pop xchg xchg adc bound fisttpl or or pop pop xor add adc sub dec xchg add xlat xchg mov fistl mov push adc add rclb sbb fdivl pop in mov mov dec xchg mov mov xor dec sbb out pop mov enter int3 adc test (bad) or call mov ss ja pop mov xchg mov mov mov mov loopne insb jb ljmp push in mov adc or inc int3 pushl or sub inc pop mulb add (bad) loopne es pop sub std push loopne or arpl mov gs das gs pop int3 inc outsl dec dec jno je mov mov call and hlt xor lcall repnz lock js out rcrl mov xchg xor sub insb sbb loop sbb adc popf pusha xor jns outsb push and xchg in ret xchg sub lahf push push cmp decl sbb (bad) xor cld push mov les and sub sub mov jl,pn inc fimull add push lods insb inc daa push and xchg push sbb addr16 push sub mov pop adc fisubr or pushl outsl loope sbbl add and or ret mov push dec dec mov movl xchg add cmc fidivr jae jecxz mov pop rclb pop in inc nop fsubrl fwait xor adc sub and pop daa movsl lret gs push mov incl push test (bad) out in pushf out fcoms es pop mov jecxz dec xor (bad) lds xor jb lds mov jmp sbb movsb pop jo cli sub pop sub mov (bad) add xor jge popf push inc and sub adc add jns in sub and mov (bad) in outsb cwtl gs mov jb xor push mov rol sarb lods push aaa movsb or mov add std inc push mov call sbb or je xor sbb sub lea movsl inc loope sbb sbb out xor pop das nop sbb or bound jmp jecxz pop enter outsl cmp xor icebp sbb push dec fild xchg std (bad) jne cltd iret call jo sub xchg cltd sub repnz jg adc dec cli mov cld cmpsl popf outsl adc dec icebp sub jge inc or test sub ret icebp (bad) xor or out mov nop sub (bad) sti fs adc inc aaa xchg popf push mov pushf lcall push arpl xor push in jecxz daa loope test xchg insl pop inc outsl lret inc push sub pusha xchg lods add mov push xor push lods add jecxz in mov pop rorb nop sbb (bad) gs cs fnstsw gs pop and mov sub pop dec cmp arpl test push mov int3 js test lds imul pop in xchg pop lods xor sub adc into mov add cli jmp lret popf or mov push adc push sub lret mov mov mov js jae aad lods popf mov lods aam jbe xchg mov call cld inc or jl and jno cltd cmp cld gs xchg or inc adc imul dec fs pop add sub scas fist cltd ret lods xchg adc sub pop xor push jmp aam repz sbb jnp ret into (bad) lret push loopne sbb mov nop cmpsl movsb or aas inc jl aaa in adc out xor sub sbb or cs cmp fisubrl leave push aaa push test call fisubr jge inc test std dec inc dec fs mov cli insl dec inc ret out in insb inc xor imul lea cs fnstsw mov fstl xchg xchg adc frstor or sbb xchg or mov push push pop dec push jno add pushf pop in push sub xchg mov in sbb jb jmp pop mov movsb xor jecxz push pushf mov add sub dec cltd mov mull (bad) xor inc test int3 pop add xor push lods mov fcmove int3 mov push in adcl cmc adc popf (bad) out push cmp js and rclb nop and jno sbb sub push dec inc mov loop pop adc add sub jb loope cmp mov frstpm(287 xor lods mov aam sahf xchg sub xor push adc insb pop sti nop (bad) sarl add cwtl movsb xchg fcompl jmp jl insb push adc fdivl xchg lea mov mov or push inc lods outsl call fisttpl xchg lods sub int3 addl cmp ret das mov in sub fidivr cmp inc or push cli pop xlat add popf inc fwait push pop xor jnp cmp jno push cs jno test fidivrl mov sub in loopne mov rcrl mov sti and movhps adc and jo push and push subl out sub (bad) repnz (bad) push adc pop nop outsl jbe pusha cltd pop push adc inc add push pop (bad) mov call inc mov sub pop pop inc xchg call cltd cmpsb loopne in cmp xchg sbb cs aam cmpsl (bad) jmp sbb outsb in stc push popa xchg dec cmp je pop add sub mov fwait out test xchg out pop push dec jb mov sbb xchg cmp ja ljmp pusha adc int3 pop clc popa sub add adc loopne mov xchg stos fsubrs mov arpl sub add bound xor push mov frstor xor and jno mov out xchg test test gs into add xor inc inc mov mov push ds mov adc bound pop int3 push mov cwtl mov call cltd (bad) das je shrl jl (bad) ss push lahf push pusha pop jg aam jb add adc cltd lods and outsb fsts cld add fcomi adc add mov lds ret pushf add mov int3 pop (bad) xchg jb xor iret mov adc fucomi push stos mov mov add inc in and popf call mov imul ss sbb or ret mov out adc lcall add pop test cwtl std test stc cs jbe inc pop sub insl xchg push negl in adc push stos sub int3 mov in jmp (bad) int3 cld mov dec jno sbb dec das push sbbl lea (bad) fincstp sbb mov dec mov fisttpl cmp mov nop cltd into adc test outsb test push test cmc (bad) xor mov decb push mov cwtl push js or push lods stos pusha shrl ss out mov push cltd mov insb xchg imul pop fiaddl imul inc lcall fs pusha xor rorl cld mov mov mov ffreep lock inc rcrl or jno stc pop xor push and add data16 push push rcrb les cmp scas adc mov push int3 push push test cmc inc adc in in and push out mov (bad) jne mov in push rol mov (bad) jb inc pop out cld pushf jbe add iret out dec into cmp push push nop popf jge pop bound xchg xor add or xor shr mov mov adc outsl pop inc fst sub ret daa gs outsb js mov movsb adc pushf add lea (bad) dec and add push add push aaa inc (bad) dec lret sbb mov sbb addr16 jae pusha insb icebp sarl jns xchg dec xchg (bad) adc mov frstor je sbb insl enter jecxz adc push mov movsl mov sbb addb or pusha sbb push adc shlb fnstcw int3 dec outsl je mov lds test pop mov test mov sub fcmove int3 mov inc xor sbb pop xchg rorl or mov adc repz ret push pop fsubl add je push push cltd xor shr adc push call lret gs adc pushf jmp lea fdivl xchg mov xchg mov arpl loope adc or mov cwtl cli mov xchg jae sbb nop (bad) cld sub jle sub cmp lods push fs stos sub xchg jge pop adc or arpl fcmove lret and gs jmp fs or inc into push pop sub xor xchg push daa adc (bad) pop rcr push sbb in fnstsw cmp xor mov xchg test cmp mov mov sbb ficom jae adc (bad) stos mov xacquire push or inc add addr16 jo imul (bad) fcompl repz fdivr xlat ss push xlat stos inc test cmp mov xor or push push movsb push out jecxz inc mov lds mov inc mov xchg mov pop pop push mov int3 clc lea cmpsl in popf pop inc and push jle xchg cmp inc sub pop les imul mov faddl sbb adc ljmp and cmpsl test sub dec loope sub adc movsb adc into loopne popa lods (bad) dec xor fs popf push cmp adc sbb mov arpl inc jno sbb inc test stos jb stc jne es inc xlat xchg inc sbb fmuls mov jmp loope mov fstps in out out jp xor ss mov jecxz inc push xchg sbb add sub fs and sti mov addr16 adcl push xchg xchg mov inc mov lea cltd fisubl mov fs pushf mov jecxz cwtl mov fcomps dec add bound lock pop shlb push xlat sahf add sub adc pop sub outsl jb lret push arpl mov inc jo push jmp jl mov in fwait daa xchg jno insl inc sbb xchg cmp inc cmp sub sub cltd mov loopne orl lods xchg cmp out loope mov test mov xor insb lahf or ja add inc loope (bad) movsb and (bad) fimul fsubl jecxz dec loope add fimul sti hlt sub or (bad) fcoml pushf mov cmpsb and add inc fsubrs sbb mov leave inc cld ss das jne in in iret sub mov cs dec sbb imul xor or ret out mov pop adc push (bad) mov test push cmp jl xchg sbb stos fs cmpl dec enter inc notb nop xchg (bad) bound xorl and xchg popf xor cmp adc pop cmpsl fcomp jo push add add andl add pop aas daa xchg xchg mov jb ss pop scas in mov out imul inc jg cs mov push lea xor xlat aad xchg pushf inc mov (bad) or fs jp or outsl loopne scas outsb or int3 pushf mov in mov fisubrl arpl call mov popf pop sub dec pop jo sub fwait add pusha mov sub cld int3 inc jno and daa insl int3 xor dec dec out pop cltd pop inc and in clc jecxz es xor add xchg test cltd cltd aad adc shlb lods adcl sub icebp ret lds mov sub xchg xchg std sub xchg gs das sub clc or ja mov cmc adc aaa popf (bad) fstpl mov stos in outsw xchg loope lods push addr16 adc mov sti adc mov aaa in or xor test cs int3 or inc cmc xor mov xchg push mov push add scas inc dec xlat imul mov jecxz outsl out cmp mov or mov mov adc jns test mov out cmc mov adc call in cmp mov pop fnop pop push movsb or fcmovnbe or (bad) xor mov (bad) push jb das mov mov roll test rorl add insb movsb rolb (bad) xor mov xlat xor sbb inc mov loopne ret dec popf sbb jge popf insl inc imul jae inc cmpsl mov dec add inc and stos jmp jle js in xor inc lds rclb dec and sbb pop in sbb loop (bad) push aam mov dec leave data16 or xchg adc insl (bad) fsubp pop cld cmp fldenv clc push or xor fldcw cltd cltd (bad) sub scas and sbb repz test lahf enter inc xchg cltd repnz in cmp xchg pop sbb out xchg fcoms sub sbb aaa add adc pop popf mov xchg iret or inc adc int pusha fs pusha xor lcall push or enter loopne ljmp lds cmp das fsubrs or xchg push cmp pop xchg cmp push addr16 les lods pushl xor xor andl mov sub sti inc andl js outsb insb dec mov inc jmp cmp add int3 hlt fimull mov decb jl inc sbb inc in cwtl push cmp js ss lcall arpl jmp pop jae inc stc into insb fdivl in dec inc mov inc lret negb in jl popf lds bound xor push lea jnp (bad) xchg aas fs mov gs inc mov popl cs jg jns inc cmp into xchg push pop jbe popf inc fildl or clc mov jo dec inc das fadd adc loopne pop nop pop lds or fs push repz jns push adc ss fucomp ss cwtl in push sub ds jns xor call loopne loope adc fadds pop pusha xchg push pop adc jl xchg insb push popa lahf push pusha add push cmp jae add push loope stos pop in add lea jbe lods gs das mov adc or xchg dec pop in mov push stos fcoml fldt int3 pop (bad) cmpsl jb xor iret xchg ret arpl fstp xor mov xor mov pop (bad) mulb rorb repz sbb addb add mov adc add inc push add push dec sub (bad) sbb incb (bad) lahf out push or pop insb push pop sub stos frstor fs xchg sub cmp jle mov pop fildll adc and inc mov fnop mov movsb sbb insb jo lods jne divb pop (bad) mov add (bad) ret cs inc rolb mov addr16 pop jge add imul adc jge push lock mov or sub mov jb xor nop int in xor enter push movsl xchg push pop insb jl ss inc ss or sahf xchg (bad) inc cmp push lods movsb rcr or ret outsl xor add incb test jb or loope,pn jbe bound test mov and popf push ss in scas or push out paddb xlat (bad) xor pop pop enter jno frstor adc mov push sbb stos das adc popa fwait insb in arpl (bad) cmp pushl dec popf push shrl pop popa mov fildl add push inc fldcw movsb xchg pop ret (bad) mov push aaa mov jmp daa push (bad) jecxz sub mul test pop push cld push addr16 cld out sub imul xor dec xor into in jae pop in scas stos in popa cmp fstl aam lods sub jno aad cmp mov loopne mov stos je stos lahf popf sbb push outsb fucomp arpl sub mov cld jmp int3 inc or mov (bad) loopne push push xor popa mov fwait popa inc outsl inc cltd sub push fldenv mov sbb (bad) mov into fadds pop dec or pop shr lea aas jg pop jg sarb push dec loope sbb mov sti or pusha aaa pop push xchg lock jge cs outsl cmp pop mov push push aad inc pop or enter ss xor popf cltd mov pop inc sbb sbb fistl mov inc adc lods test jne fs in imul xor cmp scas lock jae inc push (bad) push sub imul inc call xor inc clc cwtl addr16 adc mov adc mov dec xchg out loopne push sbb fdivl lods ljmp inc fstpl cmc pop adc sbb jo pop pop xor rcr aaa fnsetpm(287 add iret jno ss adc cmpsb jmp push nop in xor inc mov fmul shrb xchg jns bound xchg add mov std push or cmp cmpsl mov lods push inc lahf adc push push pop push arpl mov ss add push add or xchg fcomps scas sbb sbb ljmp pop or sub sti mov pushl in bound dec mov inc aas mov jb fucomip loopne sub imul aaa dec movsl cmp push icebp cmp push fldl or push lahf sbb arpl enter ss mov subl sub (bad) data16 fdivrl cmp fcmovbe sbb and xor mov clc (bad) sub shll adc popf jmp incb pusha or jnp jo lock aam inc or lcall data16 rorb in pop iret ss lods out jg sbb pop cmp je mov bound (bad) fsubs pop sbb inc ret mov mov insb inc inc iret sub cmc lea sub (bad) jl jl fild sub pop cmpl nop icebp sub push ret fldl into add adc lahf and stc mov bound xor inc (bad) xor jmp jnp cmp sahf adc out jns pop push push rcl mov inc add nop xor add mov fdivs outsl pushf gs ss int mov push sbb enter sub mov pop lods dec addr16 add mov jg cwtl add adc in pop popf lods inc cli bound xor add das jmp add es mov in mov lods cld inc mov ss or or sahf lock or les test out loopne or inc xor pop xor pushf or xor or push iret pop push xor sbb push test xor fidivl push pop aaa adc stos addb or mov add (bad) js ss aad mov in rcrb mov sub mov gs test jmp jp addr16 push jge inc mov or sub xor mov xchg fsts jmp call cli cld mov xor rcll int3 push aaa lods jno mov inc inc xchg jle adc xor push or push xor insb push pop xor (bad) ss mov in sahf mov fs sub adc dec pusha dec das xlat arpl fidivr lods cld inc or inc pop sub rcr int3 int3 lods jg and sbb sub pop cmp mov add xor ds inc xchg or jnp (bad) mov pusha push imul push outsb xor sub fbstp mov push lods mov xor mov sti jmp cld mov pop push pop (bad) imul cld bound push sbb imul cmp movsb (bad) lock xor mov push push insb loop adc add cmp fsubs ljmp pop data16 loopne jle mov pushf adc pop pushl xor push fsubrs push call xchg mov and add fcompl add mov pop xor popa outsl sub push bound dec nop push ret mov (bad) sbb daa in addl or hlt xor push ror cld movsb push addr16 adc mov jmp mov sahf pop call or loopne ja cmp int3 adc inc pop aaa pop xlat mov fst dec xchg inc mov enter (bad) or mov out mov jge repz lea push pop in jmp sti jnp push cs xor sub mov das insl clc sbb jb or or xor adc push dec imul outsl int3 pushf xchg fs jno nop push add scas adc pop aas fist cmp push xor les std dec fs inc push sub jno xorl push (bad) or xor sbb sub jge inc pop inc inc sub adc into loop pop mov les adc jb jmp push ss push adc iret out std sub mov mov sbb xor in push lods pushf mov push lret push adc and xor int xchg insl lds lcall in movsl mov cmc mov fisubr unpcklps sub push icebp pop pop call popa push (bad) in sub in sub pop repnz mov addr16 mov pop dec cld lcall outsb je nop xchg pop and xchg sub xor xor cmp pop push sbb adc mov sub jmp mov lds lock iret nop bound xor xor xor in jmp push pop (bad) in mov inc call in insl gs bound push add lret rorb stos fsubr pop sub mov loope lods pop cmc pop lock roll inc push enter adc mov fs inc mov sub outsb jecxz pop gs mov (bad) lahf jne and push jae inc outsb iret in cs and ficompl sbb and les nop mov mov jle scas adc pop addr16 in jg mov cmp or cmpsl xor adc cmpsb jmp fwait mov lods stos imul adc push addr16 sub xor mov jnp add je das mov add push xchg stos ss mov jcxz mov jb,pn and jecxz inc push cmp cmpsl fisubrl xor lahf push and jo cmp mov ss push lahf push pusha pop out xor aam fs into fs add inc pop jb cs jb mov lods xor pop push mov mov push add mov int3 mov (bad) loop inc inc in mov lds addb jmp jo pop xor bound lcall outsl jo aas lods jecxz cmpsl or dec add movsb mov pop outsb xchg aam dec pop cmp in push mov in out ret xlat es dec pushf mov sbb jne adc sbb add mov push insb mov popa icebp sbb scas sub or inc arpl dec fninit int3 cwtl outsb xchg pusha push fiaddl (bad) sub add jecxz int3 inc repz sbb sete ret dec xchg cmc add sbb mov dec daa repz sahf fldl xchg cld mov adc sub or in mov or jno jle leave hlt jne mov pop mov jbe fwait (bad) lret decl in aaa pop dec and nop jecxz cmc jae inc xchg movsl xchg aam jne loopne cltd pushf (bad) add fcomp out sub ljmp mov popl or imul sbb xlat ret mov adcl jge inc adc xor ret imul jo xchg test push xor aam sbb ljmp sub sbb xor xor lahf leave pushf cmc push or cwtl dec int3 mov insl movsb cwtl cmpsl pop sbb loopne mov cmpsl mov (bad) cmc les test push mov std hlt or pop les arpl lods pusha and cmp jb fwait pop push cmpsl mov xlat mov mov jae call dec or cmp loopne jo (bad) inc inc pop rcr xor mov xor or lock pushf rclb aam adc xorl cmpsl and sahf (bad) ss sub hlt out pop nop xchg mov mov pop iret jnp jp imul fsubl in out nop movsb sbb test mov fst imul xchg outsl and fsubrl (bad) xor enter sbb aaa test sbb fs insb insl out orl cmp add mov (bad) and lret add mov enter stos and cmp mov xlat pop aaa dec pop inc mov mov stos sub lahf inc jmp mov mov inc add add int add dec sbb jne iret mov mov sbb ljmp sbb test jl les pusha les in inc idivb imulb (bad) ficoml cmc into cld repnz into pushf mov mov scas mov mov sbb dec (bad) xor push or mov dec cmc nop mov imul xchg lock pop movsb cmp inc mov sbb xor ret in mull sbb negl inc cltd dec sti js mov pop mov sbb mov mov fdivs push shl mov fisubl leave jge sti dec xor cmp notb xor int aaa es fwait es pop mov sub leave push sub leave in aad (bad) cmc mov jb rclb push fistl (bad) and addl cmp pop adc push mov je mov jns add jnp jbe mov pop dec addr16 arpl mov add adc and mov jecxz arpl pop jecxz lods jae (bad) mov in (bad) popf push loopne ficomp cmp xor nop push insb cld iret push or test cmp pop sub inc pop ss pop into push or ja and jnp dec xorl jp leave push cmc (bad) mov sbb adc gs cmp lret inc dec out dec push pop shl cmp dec outsl jns xor mov cmp repnz cmpsb clc pop inc ret jno jp mov mov add or inc lahf lock repz xor push cmpsb sbb mov data16 jbe aas dec and mov mov xchg and aaa jmp out shlb or mov mov mov jl xchg mov insl psrlw in adc or mov mov in mov and push (bad) jmp adc add xchg sbb xor inc icebp push sub sbb add pusha out and add sub mov jmp pop insl andl fnsave xor push push lods loopne cmc sbb push inc jb ja cmpsb outsl adc add jle loopne iret das xchg pop arpl adc push cmp push or sbb xchg inc adc push clts nop jns push mov (bad) js movsl cs loope push loopne jmp and scas xor jne fist add mov pop lcall in pcmpgtd xchg or fisubr daa (bad) jg fs mov aas inc ret jge cli dec outsl sub or add aad add and data16 iret xchg (bad) (bad) lret sbb es sbbl xchg push push movsl push movsl cmpsl or xor stos int3 repnz adc and std adc cmp and add es mov outsb xchg loope dec push aam rcl inc inc addr16 lahf jne sbb add enter (bad) loop jo stc pop or addr16 mov jno movsl fucomi std mov pop cwtl xor test fisubr and cwtl in loop cmpsb jno mov imul mov xor mov jecxz sbb sahf inc push push loop pop gs inc xchg push fild push pusha aam cmp jg cwtl and pop mov ja and lahf movsl xor mov mov mov push popf aaa jnp add xchg aas into mov shl (bad) mov lcall xchg push cmpsl xchg push jae sub pusha popa call ds scas xor aas cld mov std fs add push adc inc stos cmp out push dec add mov gs add sahf dec ja int3 push fs push xchg int3 mov push xor movsb jo mov or sub mov iret or aad sbb insl lcall scas adc mov out xor mov push aam sub sahf mov xor jnp jo mov imull sbb rcrl jbe (bad) loope shrl jl lret xor push in pop sbb pop std (bad) mov stc ret incl inc lret sbb std je adc in jl aaa or dec inc arpl gs mov dec les push pop mov push push lret pop add into (bad) cmp mov xchg jp mov ja bound mov add cltd cmp jae mov push xor sub mov xchg fsubp xchg sub nop xor into ror fistl (bad) xor (bad) xchg or inc pop aam adc outsb push jb push out nop mov xor dec mov cmp (bad) or pushl das xchg popf cmp push adc popf inc mov lret repnz mov xchg stc in and insl nop jg les in cmpsl roll sbb mov jl arpl insl mov iret jo or jnp push out sbbl inc repz jae in call or lret sub insl xchg stos or loop test add js idivl mov pop push pop jae and add repz dec outsl add mov sbb sub cmc inc call push out sbbl loopne lcall jno inc imul jp es shlb pop scas mov addr16 lret push mov xor mov lds jnp clc and out popf push imul pop scas sbb insl and push sub push xorl xor pop xor je inc sarl mov in outsl adc (bad) sbb cmc or roll fiadd inc cmp jo ror (bad) aaa or inc cld add xchg mov clc or pop pop dec jg lods xor dec jge mov inc ret cwtl icebp lret cmp xor or clc inc mov pop add leave in clc cmc cltd jnp stc mulb inc shlb adc add adc ljmp fmuls (bad) and lahf mov push add repnz sti stos pop outsb pop addr16 push addb mov (bad) mov fstpt pop mov ret test xor pop dec lcall lcall or mov repz jle lea fisubl and and adc arpl (bad) in rcrb push mov leave mov add mov mov fistp cltd outsl jge imul jns lret jo addr16 out aaa ja add push push xchg sub sub (bad) clc xchg xchg push popf leave sar lock and test mov jecxz (bad) jg pop ja add sub loop insl movsb mov xchg ja lods mov sbb fist xchg nop shlb push stos rorb mov mov pop insl jmp jns ljmp inc pop lahf and test adc pand test dec inc or mov clc mov les jnp mov sub test (bad) sub ss xchg jbe and push add (bad) cmp mov test sub ret ret add mov inc ficomp jmp xchg sub xlat mov cmpsl jb xchg ljmp ficom mov jb pop (bad) jmp test sti add daa jo scas cmp arpl aam cmp cmpsb aam dec mov push ret ljmp fistl (bad) xor aas out push xchg subl pop push ret iret ss xchg loop mov aam and mov and cltd pop leave and inc fwait das sbb mov inc fsubs or stos pusha cmc imul std push add jbe std and add add dec pop fwait pop dec jae dec pusha push int3 lds inc pusha cmpsb (bad) aaa lret add sbb jnp jg or fs mov add popf dec fs sbb addr16 lods and xchg int3 outsb xchg inc in inc dec mov pop mov push ljmp xor mov fiadd imul scas fstp sahf jmp mov call es push adc pop cmp clc inc imul repz mov pop stos mov jb push mov mov pop jecxz mov pop incl jbe jge lret jne or movsl (bad) std xchg popa test or fs lret cmp xchg sub xor dec dec or les push cs jo int3 cmp pusha sub mov dec enter enter jno push ds push cmp out cwtl mov lret loopne xor push jg outsb popa dec sub loope out (bad) cmc fwait mov into mov mov lods sub mov mov inc jecxz cmp xor testb fnstsw sahf es inc adcb (bad) pop pop test cli jg mov mov pop add outsl cmp xchg in xor jge jb cwtl xor lock gs stos dec mov dec adc enter cltd inc jno jbe,pt in gs inc mov scas xchg fnstenv (bad) adc int3 sub and push pushf sbb inc adc fist xor and xor mov mov (bad) push scas lcall lock push xchg test xchg adc inc dec lock jle loopne test mov stos cmp or out mov mov outsb pop fucom xor dec sbb imul push and dec and cmp (bad) loope call sub iret daa jne les lds adc mov jmp jb pop jmp xor sti xchg adc enter sahf push xchg roll sub je fwait xor xor call cld jne mov pusha cmp push pusha (bad) push fwait insl jle xchg popf int3 xor adc push arpl mov sbb hlt insb add in push mov push prefetch ret test dec stc insb or push int3 inc ds mov push xchg jns scas (bad) enter mov fucomi loop pop mov lcall or pop xchg xor jp and mov gs xchg clc enter xchg mov adcl xor aad fnstcw cmpsl xor sarl mov (bad) mov rol out add add cmp inc scas shrl sub dec pusha into xchg dec fcmovnbe outsl mov outsl mov lods push icebp lahf cmp xchg aaa incb (bad) arpl xchg repnz fcoms mov cmp mov loopne inc push jge add addr16 xchg cmpsl arpl lret icebp lods mov ret mov idivl push jmp mov push int aad test or xor mov push push fs sub dec ret or cmp xchg sbb dec push jno int3 pop inc ret call push inc push mov dec pop ret int3 pop cmp ss or push mov das aad clc fistl sbb inc ja lods sahf scas pop imul dec out push aad push les daa stos cmc mov fisub sub fs lods bound jae jg dec lods jl adc xlat out and test aas jns daa xor pop mov (bad) loop cs add aad loopne or jne stc cmp ljmp xor inc daa popa jmp gs ljmp out dec sbb imul inc inc lahf push loopne jbe sub xchg adc push ret (bad) mov xchg nop pop test sbb in insb lahf inc mov adc fisubr movsl lea (bad) mov jecxz or jecxz sarb mov mov daa bound jg pusha andl je das loop xor mov in ret mov jns xor jecxz cmpsb clc ret add jecxz adcl mov cmp lcall cmp movsl xchg or loop pop or daa sahf pusha int add xchg mov ss rclb xchg aaa mov xchg jl pop arpl frstor outsb out popa pop lret cld cld fld xor cmpsb or pop gs jp cli xchg in (bad) fsubl mov hlt inc cmp (bad) popf (bad) repz sti out gs lahf addr16 je leave sbb lcall and push hlt xchg add cmpsl pop inc add sub fadds leave cmp fwait jne push dec mov outsl enter (bad) xor into dec sub jmp pop js sbb xlat sbb or js jnp rclb test inc pop inc add lods pop or xchg and out repnz sti sahf adc jmp and sbb js lods push push rclb and jnp js fadds loop push xor adc aaa and push cmpsb xchg jcxz lods loop mov shrb daa out jns (bad) mov inc inc (bad) adc lcall pop xor mov push int3 and xor sahf lds pop jl sbb stos jmp sub and (bad) loope mov and (bad) ljmp and int3 addr16 in lock mov insb in sub cld je ja jge sahf out je cwtl outsb adc dec pop pushf push sub add pop xchg sbb xchg sbb xchg scas jge pop sti pop aam js lods sub xlat fs mov (bad) cli mov outsb mov mov ficom insb pop push imul insl movsl int sbb into inc sbb scas jmp jno xor test out ja frstor lds shll inc fistp cs or pushf pop mov outsb push out je xor xchg xor lods add mov ret in insl stos mov jb pop mov and les push iret sub xchg std push nop bound hlt jb jbe int3 add jnp out lods js outsb in ret jbe or inc jae xchg dec loop pop mov lret jns add jecxz lds (bad) mov insb lret fidiv pop adc dec jo lcall int3 je inc out addr16 or jle and xor push or or lcall xor (bad) loope in int mov sub dec mov cltd pop pop sub nop jmp sub rorl add test out xchg inc lcall aaa xor jle icebp lea std dec gs stos mov sub mull push cli push xor cmp adc jg cmc js push mov xchg fildl add aad (bad) (bad) mov mov rclb and jb shrb in shlb rolb mov mov push roll xchg sub push cltd push shrb test fstl icebp jmp data16 lea pusha clc test clc fnstcw or cmp addr16 ljmp pop ficompl outsb (bad) insl cmp ja repnz aaa and iret sub push mov mov mov out adc int sub push cmp inc jle leave pop or add pop rep jbe das rol stos xor int3 ss std stos sub lods dec push test insl inc adc inc pop (bad) fsubrl sub cmpsl rcl aad pop xor cmpsb or sahf cwtl or test push jge sub jb popf test minps sbb pop cmc insb lds xchg inc addb ljmp in js inc jne mov fsts push pusha or jb xchg mov adc add xor mov jae add outsb xchg (bad) jno jg js push or dec lds in mov push pusha cmp dec cmp xchg lahf out movsb jno imul rcrb lcall popa aas int decb or xor sub mov fnstcw xor fnstsw or (bad) lcall or sub repnz cmc movsl pop cltd fucomp push lcall scas outsb sahf jl sbb xor scas inc xor lahf testl adcb fcoms add and in sbb jnp sti aaa xor sbb repnz add dec stos inc mov xlat push mov sub (bad) mov pop shrb push xor push aad popa adcb pop dec and loop out mov fwait pop scas arpl dec jle inc bound jmp xchg push inc sbb lahf pop add loop push xor aas imul mov (bad) cmc loope lret iret int aaa xchg xchg incl push xor test (bad) popa test mov outsb insl push xchg sbb lds fstpl int3 jae (bad) add push ret sbb push dec test inc loopew popa inc inc shr jecxz push jns sarl pop fwait xchg int das adc jne sbb out out push pop mov mov ret mov jmp xchg js bound cmc jne lock and or xchg ret xchg je xor daa push jo mov or pop or xchg dec push xor push add leave push in push push mov rclb je stos ja sub fldenv mov jbe lret stos es xchg jno in jne stos shl dec sub xchg dec push mov adc xchg les sti dec add inc pop pop imul (bad) dec jg or mov mov icebp shlb stc scas scas pop scas add lcall or and divb ljmp sahf bound mov loope mov popl in add jg add mov lea outsb add or xor in imul cmpsb test xor sti les or nop in popa cmpsl lods and (bad) stos pop (bad) cmp scas jp pop pusha jb inc sbb pop xchg ja test dec out (bad) xchg or pop icebp push pop inc in dec mov pusha dec sub cwtl sub xlat dec clc or lods jecxz fnsave lock and cmc (bad) xor add pusha xor das incl pop int3 pop (bad) jecxz mov cmp or loope movb pop cs sbb jno push das arpl push lds out xor scas mov hlt push pop xor sbb mov mov inc mov dec push scas nop jl sbb mov sub adc shll sbb lods mov jl jno mov fwait cltd in pop imul test fidivl sub les sub loop mov aad fistpll inc cmp nop add inc xor ret mov inc dec lret jo adc lods jne push or mov jg push add xor pop int3 loop ret ficomp adc fcoml sbb sbb pop mov jle fsubrs jo repnz je xor inc sahf or sub cmpsb xchg orl cmc stos (bad) sbb adc xchg inc sub cmp mov insb imul adc add xchg adc enter (bad) mov xchg sbb lret and nop movsl in (bad) jb out icebp sbb xchg mov inc xchg pop int3 xchg ret xor inc mov mull int pop push mov jb insb inc das enter scas (bad) ljmp mov mov ret add fmuls push jbe lahf dec insb mov xchg push rcrl cmc lcall mov das (bad) jecxz inc and call push xchg test pushf mov gs pop icebp or add int cmp lods je outsl xor sbb add stc pop inc imul dec sahf mov or dec lret adc xchg push cmp das cli push das and mov pop insl ds xchg iret mov invd (bad) (bad) stc push cmp fdivl pop add pop jle ljmp aam adc roll test or scas xchg sahf inc push out insb xor mov mov (bad) push clc xchg bound fsubr inc pop dec jle mov popf (bad) icebp cmp add shrl xor adc pop pop mov inc stc xchg sbb adc js push sbb sbb pop cmp mov xchg (bad) mov inc out popf sbb adc cmpsb xchg popa add sbb sbb leave mov call add inc jno aad xor pushf insl loopne imul mov and and fsubp add push out mov in insb stc inc inc xchg mov sbb push ret movsb js faddl jg mov inc or sub or mov pop pop mov lret mov ret orl lahf stos ret mov pop sbb sub add lret mov sub or sbb and dec enter popf mov (bad) pushf les mov loop dec ret arpl outsl ret jae ja int in and aaa sub lods pop pop out add dec xchg daa loope mov (bad) xchg sub test (bad) cmp testb jmp mov std in fnstsw add cmp test and xor icebp inc cmp or ljmp imull ss inc pop and push jg sub pop jbe jmp mov sbb stos push lock inc jle cltd xor and cmpsb push push ljmp stc inc and inc iret stos out and xchg mov aam mov adc lods xor cmp inc mov movsl xor sbb popf loope dec xchg xlat rorb insl push popa xchg xchg dec stos int push das movsl test jg mov insb or push add sbb xchg and mov inc xchg cwtl inc loope mull push mov out mov out iret stos mov (bad) ret loope in push data16 push adc stos or imul (bad) repnz icebp inc inc loop xchg cmpsb pop daa mov inc mov iret xor (bad) fwait add mov inc fsts jbe mov mov pushf rolb subb in cmp inc lret lcall pop mov add mov test fwait repnz int3 ljmp mov xchg add and mov adc ss pop lods fwait push int3 or add mov xchg lock mov mov and push dec xor inc rcrl addr16 out jle gs xchg fildll jecxz jp adc sbb push jmp cwtl (bad) mov pop das test cmp xchg stos clc movb dec sub jmp sub (bad) and pop gs ljmp fwait fs jo int3 dec xor into sub clc push mov xor adc xchg pop lcall mov xchg xor cmp arpl dec call adc andl into movsl cmp addl inc mov mov cs pop or pop (bad) clc test test stc push icebp push xchg jge fs adcl loopne mov xchg (bad) shrb ret jecxz sub jl cmc insl aad out mov sbb sub lods outsb pusha es ds mov pusha xchg add bound pop sahf inc ss dec sbb ret push imul idivb mov and push (bad) jecxz (bad) sbb adc mov xchg popa pop mov push popl in nop stc lret add sbb fildl jg dec push bound lds mov das dec inc mov push sub add mov push lcall xor ret in sub sti int3 cli sub fidivl mov inc imul cmp lret dec mov pop cmc dec jno push nop std xchg xchg jo xchg andl add mov dec xchg inc divl lods shlb sub push sub add pop cmp arpl fucom mov and pop xlat mov (bad) jecxz mov xor or cmc and sti lcall pop push fsts dec test inc sub ss xchg fs pop mov (bad) or cld imul inc bound mov adc mov xor pop addr16 aaa stos je mov pop add jbe mov js ljmp mov or push adc andl mov pusha xchg mov pop outsb pop fist inc stos sub xchg push jp pop (bad) ds sbb xchg test jbe xor cmp test jge repnz imul cld pop pop js in aam pop xor test clc jae bound adc daa jle and mov pop test cli add cmc ret jl xor xchg mov mov jne cltd dec cmp mov jle lock lret lret jl stos daa int3 and jns sti inc push mov (bad) jae lret mov cmpsb mov test cmp mov out sub es jbe pop shrl inc jecxz xor sbb icebp lods in test push iret pop test rclb pusha (bad) add (bad) xchg adc jo mov and mov dec pop sub jg clc mov in (bad) fs inc mov xor sbb add mull mov int3 mov daa aad int (bad) sbb lret shrb sbb cmp inc movsl add sbb pop fimull lods imul add movsl in aas sbb subl cmp sbb dec scas or jp addl pop or mov sub pop mov or xchg stc mov fisubr inc mov xor jnp dec (bad) xchg fsubr and test icebp pop ljmp hlt sub loopne and jg cmpsl sbb out aam leave mov cmp je dec scas loop (bad) cmpsl push in fldt xchg adc xchg outsb shlb test rolb in inc fnstenv push dec jmp inc out lods insb push or adc push mov icebp inc xor and dec scas and hlt jne cmp insb and pop lods in loope,pt add addr16 add inc and fs pop aad cmp dec pop imull lods (bad) aam or scas mov cmp dec in jmp add push loope lods push xor sbb mov xor lret inc push (bad) (bad) lock push xchg pop lea lahf push mov lea mov mov or repnz mov mov mov sti fimul popf test push push mov xor mov push fdivr pop (bad) adc jmp out fsubrl daa adc mov and or and daa xor push jb sub adc add bnd ss in sbb in jmp mov mov mov push iret ss insl mov push in and mov dec repnz xchg int xor pop daa sub mov fs ljmp push andb pop in sbbl lea dec pop test pop mov movsb push ret (bad) aas add (bad) adc nop cmp les cwtl daa (bad) insb mov jo add int mov fisttp pushl inc movsl pop sub popf lcall iret lods call or xchg jg loope popf insb mulb call adc (bad) fcoml add loope shlb or out adc test in mov mov xchg xchg add inc loopne dec pushf data16 push add inc jne cmp inc out mov (bad) (bad) jle sbb loop in adc push xchg add pop jle xor push insb popf out sub adc inc pusha xchg pushf int3 adc lret lcall push inc and and adc sbb push sbb sbb lds jno xchg mov test mov inc jmp inc mov and cld pop xchg sbb xorb dec jge insb push and inc xor dec leave sub sub roll pop and mov mov mov xchg outsb inc dec ja add mov insl inc mov dec push enter std fstl dec sti imul add lret and xchg push xchg mov hlt and lcall sub test idivb mov clc inc or sbb xchg jne xchg in sahf nop (bad) dec cwtl add push xchg inc inc movsl out mov sub lods fwait cli add aam rol gs out mov adc jbe lods sub cmp in push in cmc pop mov int ds call and cld (bad) repnz jno imul shrb sbb jmp aas cmp sub cmc pop sarb ret mov cmp into rol sub jne fistpll jnp and xchg add cs sub push movsl pop xchg pop daa sub call in cmp fnstenv ss mov xchg fidiv in adc mov test insl jnp mov call or mov lcall lcall in push xor xchg mov sbb sbb repnz mov ret imul in xor mov in mov scas cltd pop fstpl rcrl out adcl pop insb or add pusha in adc (bad) sti xor cmp cmp jae fdivrp adc lock pop cmp add mov and xchg pushl sub (bad) inc cwtl out mov cmp fdivrl negl dec ja ret adc outsl pusha inc inc in cwtl and jno inc push repz xor mov dec cmp or insl sbb loop jno icebp cmp in cwtl popf jp icebp daa mov xchg sahf mov or hlt and (bad) stc lcall addb ss (bad) ljmp jbe pusha mov sbb or addr16 aam scas add add and mov daa std sub out push insb ret lret pop sub leave jmp lea and xchg adc dec xchg cmp pusha push test imul push (bad) push imul mov inc lods out pop lahf mov dec inc xchg jnp ret (bad) mov decb cmpb hlt xchg sbb mov call cs sub push lods dec out jle dec mov fs pop es dec mov arpl mov and clc enter nop push mov cmc bound xchg cmpsb mov inc addr16 mov sbb (bad) shr pop mov add fild ja insl push xchg dec dec push dec js decb adc lds jecxz gs pop ret clc lcall test sbb jne add daa adc sbb in dec mov mov iret or cs push pop mov sbb xchg mov lahf mov pop int3 loop inc or clc adc or mov in fninit jbe dec rcrl inc shrl xchg mov in and insb push bnd std es call push xchg lods jle in cld bswap and in add (bad) aas std sub dec mov into pop stc call mov ret in fcmovu imul xchg adc or inc xchg mov enter lock sub mov lea push stos adc int3 ret test push out js popa popf jb xchg mov mov in jne sbb bound dec outsb (bad) push lock fist cmpsl xchg and push aaa adc insl lahf jne pop xchg pop (bad) stc std inc subl into out xchg push arpl loop push icebp out fwait dec loop cltd mov adc fisubr fs sti shlb hlt test lcall cmp lds adc mov mov ljmp cmp xchg pop (bad) in inc pop nop push bound imul test js stos and pop (bad) push inc pop add lods pop nop ret adcl iret mov jbe or je stos (bad) ss stos (bad) jae aad mov cmp xchg push sbb dec sbb add ljmp ret cmp push sti pop push adc xchg mov pop pop cmp out addl mov ret inc aad imul ds cmpsl push aam in pop lahf (bad) out popf dec or push jecxz push xchg arpl lahf fsubrl mov lahf mov cld and outsb xchg fwait and sub xor sbb into cmpsb push lret mov sbb ret cmpsb das daa jne loop add fidivr jcxz jno mov movsl cltd stc ja jge pop mov jle es jge dec pop dec push pop pop lods std inc jae insl add push into mov mov adc or jo fisubrl add lds mov xor jnp adc and jmp aad sbb imul ss in insb cmp std xor data16 inc popa push imul add add jns sahf sbb and xor ret push mov lea and insb push out sbb pop cli pusha in mov enter xor cmc icebp ds push or scas mov jmp and inc jl (bad) xchg xlat aam pop ss int3 popa push sub rol jns add add inc mov pop cld mov ja pop cld das hlt lret orb aas adc xchg add push ss or xchg daa lods pop das add xor push jae sbb sub inc cmpsl jne mov movsb jg rcl mov jl jl pop js pop in pop sbb jl mov out rclb out add (bad) popf dec not jo mov leave aad sbb xorl cmp jae loopne xchg xor mov xor bound sbb cmp sub shrl movsb jo jge std push popf and outsb cmp dec mov jl dec push int adc jge xor dec sbb pop xor ret int pop xor jbe mov je stc sub jle mov xchg scas (bad) pop inc hlt (bad) push pop outsl push adc out pop sahf dec sub push cld cmp sbb ljmp out pop daa push and mov loop mov repz sti (bad) pop push jp jmp popa cli pop es leave out icebp add fisubr push mov add add jb inc rorb jle xchg jns xchg imul data16 es jge jge add mov jle and loope imul adc sahf rcrb gs in xor mov idivl mov cmpsl insb push or add mov mov and (bad) dec lods dec xor push add fwait adc dec mov mov xor outsl adcb sub inc scas mov lods std lea mov dec cmp pmulhuw movsl scas mov dec lret jge mov test icebp mov ficom ret movsl stos enter xor (bad) divl jg mov jnp sbb inc aaa cwtl ret es mov and xlat fiaddl xchg push lds xor fldenv pop and pop inc fadds das sub adc cmp in cmp iret xchg mov sarb pop sub hlt and add rolb ret mov call mov jecxz xchg xchg into (bad) les sarl lret or movsl add dec imul or xor arpl insb jb mov cmc mov fcomi jl mov (bad) xchg dec adc mov pushf xorb bound xchg pop addr16 sbb popa sub sub fwait shr icebp adc or mov pusha in and and in es push cmpsb xlat bound mov outsl mov loope adc xor rclb sbb mov inc jno or cwtl xlat jo (bad) pusha pop sahf fild mov fldt cmp mov adc sbb dec mov push push dec and mov bswap inc cmp pop ds into inc movsb inc lret dec sub ret fs inc mov mov and jae mov push or pop test je lcall xchg cwtl or es cmp lret and fstps daa and and jb adc stos push sbb mov lock push fcomi xor in cmpsl push mov or std rcll rcrl jbe je mov mov push inc xor xchg add mov jg jb xchg je push jbe iret shll pop pop mov in out js repz lcall pop std icebp dec and sub int3 jle xchg or (bad) push pop jmp pop lret mov nop aaa stc jbe xchg or adcl jp (bad) sahf pop into repnz or gs sbb pop outsb inc sbb sub mov or mov xchg sub inc xor imul push sbb (bad) push jns pop ret add repz fisttpll mov dec dec bnd repz xor pop mov fcmovb xor aas out and stc mov outsb or xchg imul scas dec aas lahf xor adc and iret push rcr xlat lcall in cmp loope push movsl cmp or dec and (bad) lcall ss lea add inc std push xor loope jbe scas add mov seta std inc xor mov and add dec insl push aas negl push jne scas insb xor lods insl mov ret test jp mov inc mov add push sbb nop nop and mov mov jmp mov mov xor (bad) add in fiadd dec imul adc ja ss cmc mov mov xor mov and sbb jno adc cmp jmp imul sub mov mov inc sbb incl mov cmp or or outsl xchg mov mov stos das orb aaa mov mov ja mov lods inc adc mov adc popf cwtl in sti aad xchg fnstenv and aam sbbb mov ds out lret pop mov (bad) mov sub enter lock mov (bad) cmp (bad) mov test jge and xor cwtl jno push and dec jns aas push mov sti fidiv xchg outsb pop xor dec and pushf jns mov jae lret sub pop add (bad) pop lods push mov xchg cmp mov xor sub testl sub out sbb sti icebp gs mov xor in clc adc dec mov cs xchg push or cmp addl dec aaa mov insb push js adc sahf mov add imulb and leave lods xor sbb and and push push push test cmp cmp lcall in dec fs lret ja and push lock aad repz sbb mov push pop xorl and jo rep out nop sbb std lahf xchg pop xchg loopne mov push xchg adc test jg lods inc xchg xor add mov jbe out sub dec hlt add push popa lock ret push (bad) jnp sub cmpsb (bad) nop dec pop lods sbb inc lock adc aam das sbb lahf add shrb pop mov fs (bad) insb loopnew in (bad) inc jns push test mov adc jns outsb aaa and or icebp imul xor aaa mov or mov jnp dec sub shlb xchg mov mov int3 sbb leave cmp cmp andb jle adcl jo or pop mov pusha test int mov mov pop xchg jb fidiv es (bad) jnp jns sub pop xchg mov add adc inc mov lods data16 or add jmp aam iret lea movsl loop clc push and mov frstor sub fwait bound add jg sub inc mov fbld jle lds xor and xchg inc and fbld cs loope lret mov xor jae dec fadds imul mov ds sahf or rcll lret scas jb and mov rolb cs cwtl or push popf aad cld hlt adc sbb aad xchg sub xchg or imul inc cmp fild add mov leave sbb data16 adc xor lret xor cmp aas pop cmp mov popf and fistl lahf sahf in add enter es js movsb cld or sbb and out jmp jno outsl fsubs test jp sub inc mov sarb stos insl jne aaa push js mov fcoml push (bad) cmp xor popa test mov push jecxz cmpsl mov pop push shr imull scas call inc mov ja mov xor adc cmp mov (bad) (bad) cmp (bad) jl dec in and dec dec lcall popf outsl fs ja lds in jae and pop mov push out cld icebp in xor xor xchg push stc push (bad) xlat ret xchg sub ja out test sbb and mov mov (bad) lods out fidivr nop mov mov and cs (bad) ss pop pop inc mov popf outsb mov mov cmpl imul (bad) sahf adc leave jmp es mov xchg in es es or llwpcb pop xchg dec outsb in mov fcompl sbb clc nop sahf (bad) popf cld cmp push cmp out xchg mov mov lcall mov inc sub fisubrl lret setbe lret stos xchg push lea sti xlat lcall and and loope and push push stc sbb ds jno mov insb mov mov daa inc outsl out sub mov int3 push sbb mov js fstp aaa mov jecxz pushf inc in movsl repnz sarb fs mov loop aam xor or or (bad) movsb test inc sub mov sub mov aas das int3 cmp fs repz mov (bad) push hlt fidivrl int3 gs lock inc push fcom not push push popf and sbb (bad) xchg add (bad) adc fimul (bad) push xchg add das inc inc fs fidivrl test sbb sub hlt add add pop repz add and les enter and mov adc add in rclb push mov sbb xchg iret icebp push mov orl fcomi (bad) dec inc (bad) pop jnp jle pushf push jb mov add push dec xor sti pop stc or call xchg lds dec out pushf fmuls mov push je add clc inc xchg cmc ss pop mov hlt inc dec push outsl rorl test pop sub test jne arpl or sub ficom ja out and pop aad popa xchg sbb mov loopne (bad) scas dec mov mov arpl add mov stos rcrb adc mov cwtl pop adc test mov and int imul or jl cmp or aas sub pusha bound adc roll in mov std dec iret arpl (bad) jo ja pop push mov rcr cmc in jge add dec das inc out popa mov popf mov mov bound mov cmpl stos mov mov sbb rorb stos je and mov mov pop xor dec inc mov stc ret push lea push xor fs add xchg es adc mov or nop out or in pop in std or shrb xor (bad) (bad) mov sbb imul lds into int nop jb xchg and and push jl cs int3 xor xor jo pop jle fs insl fs popa pushf cmp push lea add fstpt fsubl or ljmp std mov pop or (bad) inc cltd xor call pusha addr16 push mov cld call sti dec xor push rorl sub cmp jmp adc call inc (bad) jnp popa mov pop repnz cli mov pushf pop dec sbb into push repz push bt mov push es (bad) push call lods dec (bad) pop mov mov ljmp dec mov icebp pop fwait mov xlat pslld add mov ds xor mov pop cmp je fbstp (bad) pop push out or enter jle scas jmp push rcrb or push pop sbb idivl mov xor lcall aaa jecxz out pop and adc dec fcom mov mov or or add clc xor orb xor cltd leave xchg cli nop movsl (bad) std dec cmp xchg push mov lcall out hlt pop les pop cmc push inc pop adc mov sub jbe loop cwtl xor jb fmuls pop es insl inc repnz jno add push jnp pop jmp jg,pt rcrl pcmpeqb loop call and fcmovnbe pop fs es imul mov xchg sbb mov enter mov xor inc fisub jp jge (bad) rorb inc sarl pop add pusha mov inc out sti dec lods push lods xchg das adcl jge ss insb divl jl shlb add xor add sbb add xchg jg dec andl rcl aaa pop iret lret (bad) hlt add sahf xchg fs pop popa sbb in mov push mov cmp mov sbb je movsb push (bad) repnz pop push push shrb push rol mov fcoml cld dec xchg cs xchg push adc cmpsb dec sbb jecxz sbb shl add jnp dec mov lods xor jl fisubl orl repz cwtl fldcw add cmpsb dec test fadd xchg adc sub negl pop sub mov andl loope pushl adc push loope add sbb popa mov dec icebp cmp jecxz leave pop xchg sub sub inc fist outsl jmp addr16 imul push jae adc push fstpl pop imul xchg mov mov ja and and scas test jae pop push in testb cli fisttpl cld outsb sub stos and insl or repz mov pop xchg xchg xchg movsb leave sahf movsl lods dec or mov dec add dec xor addw dec das imul repnz mov mov enter push dec xchg cmp or imulb pop sbb outsb cmpsl sbb ret mov xor inc (bad) stc lret mov es call dec push pop push rcl loop jno pop pop fidiv sahf popf shl xchg inc dec cs cmp fisttpll pop xor out fimull ret sub mov mov push insl sarl mov dec (bad) push add jo test idivl (bad) imull test dec mov and inc mov outsb negl add dec dec int3 loop movsl push mov loopne data16 scas mov sti push cmpsl cli or aam stos and cmp bound pop mov out ficoml mov insl pusha shlb (bad) lcall sbb adc sbb sbb fisub cwtl sub push in lahf push (bad) stc xor xchg dec pop inc push pushl sub cli push fnsave pop xchg and xor adc cmc push out mov icebp call xor (bad) adc push pop gs arpl in nop dec adc js sub daa sbb or or xchg cli lods lret cli sahf push mov movsl notl lds adc lock cs and ljmp push or popa in pop out je lcall orl dec sbb sbb psrad push pop cmpl dec paddusb cld inc sahf push psrlw arpl (bad) adc mov or popf fbstp jae stos pop out mov add push mov jge lea imul dec (bad) jl add inc or mov aaa mull or sbb cld or lds cmp mov notl in addb (bad) pop cld popa jecxz push and gs shlb jns pop in (bad) lcall das lcall loope mov and push cmc mov aad (bad) cld arpl push icebp pop pop xchg add sahf stos divl lret fcmove das subb jge lds push mov (bad) push jno nop xor cmp (bad) or outsl pop jle loope pop mov pushf aad sub clc aaa or ljmp mov ss rcrl aad push movsb (bad) pop push movsb xor js jp fidivrl fs in mov and dec aaa rcrl and mov mov add out fdivrl aad and enter lcall sarb out mov mov xchg aas lret mov inc pop sbb ret sub andb test shr dec repnz sbb mov int mov push adc (bad) mov mov arpl pop push xchg ret pop out adc ret fwait add fidiv shrl xchg mov (bad) jae cli test push movsb (bad) cmpsl movsl dec mov pop inc test mov mov pusha sahf dec lods mov sub adc fcom xchg aad addr16 clc sub mov fdivrl push std xchg mov and mov lret pop popa sbb sahf push inc insb dec cmp lcall in and pop ret cwtl push mov in pop xor rorb lea stc lds cltd push pop js xchg mov or adc and loope mov (bad) notl push dec sahf dec enter push dec adc rclb rcl xchg xor xor mov add push xchg cld jbe add mov cmp mov xor js cmpsb in cmpsb fldl2t adc (bad) push (bad) and clts jp aad int pop sbb rolb xchg and push aad mov sti adc and (bad) inc jle scas pushf int adc enter (bad) hlt cmc js jo sub out pop sbb insl push call (bad) jae mov add jmp std mov sub imul sarl bound popf mov bound dec hlt popa pop imul ljmp clc fdivl rol in or lcall xchg push or add stos ficomp mov js xchg or int3 pop xchg cltd in mov jg add add jne mov decl xor fldl js sbb pushf int3 or add dec aad pop add dec cli mov loop (bad) jnp add daa xor cmp fcomps stos xor repnz out loop shlb push insb mov and fs lock mov xchg inc fild inc lcall in lods fiaddl (bad) scas (bad) pcmpgtb mov stos enter mov pop and mov xchg loope xchg xorl sub or (bad) clc sbb mov adc jnp cmp sub sub add dec je push pusha popf out test mov or aad iret jo call (bad) dec loope inc aam clc clc mov test mov in xchg xchg sbb or rcrl js ret pop test js,pt je in test iret mov add mov or xor dec xorb mov pop adc add pop sahf mov sbb xor daa fisubl sbb and mov imul or and lcall popa mov mov xchg outsb adc cmp dec cld (bad) out mov pop cmp sbb cmp mov outsl push dec push and or es push jo jg fsubrs dec add xchg inc dec jne push dec xlat xor jns xchg loop call mov lret dec fs push sysexit sbb lock lahf mov sbb mov jae shlb xchg dec mov push loopne jae dec dec mov ja add xchg cmc dec xlat mov lea mull lret push incl popa stos dec fisubrl sbb xchg insb sbbl (bad) data16 and inc push mov pop or sbb int pop jae jo xchg sbb mov xor lret xchg outsl ss xchg les std loopne lahf lea and fwait ret in mov popa flds daa daa mov test mov cltd xor pop or fwait bnd mov or sbb imul hlt pcmpeqb popa out inc cmpsb adc (bad) (bad) pop addr16 repnz fstl inc push mov pop psubd inc cs fs fwait mov std lock mov inc xor or sub loop (bad) iret rcr jl ja adc adc pushf in mov sbb and mov jb sub jecxz inc cltd push test ja lret cmp and incb adc and aaa notb popf xlat cmp sbb adc sub icebp sub or mov out xchg push mov sbb xor mov or jno dec ror in (bad) in js dec sub mov leave lock (bad) xor imul out stos cmpsl fwait shlb pop cwtl push sahf mov add jo loope mov aad scas push pop mov jge inc (bad) pextrw and dec cmp lods jp sub push arpl rorb lds mov jno add push dec loopne pusha rorl dec call std popf cmp out clc inc adc gs je dec inc inc arpl out push sbb and sahf pop stos lock and adc lcall loope dec hlt das in push js xor mov iret sub mov cwtl xor pushf or and shrb jge adc add inc mov adc cwtl in stos and repnz cld or xlat cmp dec aam andb inc pop enter mov iret sti cmp mov jl mov test test jns fcoml mov mov jp ret cwtl and pop mov sti jbe test loope sbb mov mov sbb mov mov test dec mov cltd jmp std mov in repz pop xor sub xchg pop dec or lret lgs adc push out mov push sub cwtl imul adc cmpsb xor jae and pop sbb or mov fnstsw or xchg jo cli jge (bad) call (bad) and dec les add nop sbb push sub jnp mov fs pop xchg ficom mov fisubl loopne adc add and adcl jecxz fstpl dec push rep aas xor iret das mov xorl mov jecxz inc les rclb add cmp insb iret imul aad jmp lcall xor cld test rorb sbb adc adc imul jae pop rcl mov dec mov cmc pop add ss jo sbb ljmp rdpmc cmovno mov movsl sub pop xor addl sarb push iret mov bound sub mov popa xchg cltd and inc enter add jg cli icebp adc (bad) inc mov add cld xor jnp clc hlt lahf jb lret repz mov push addb dec xor nop push pop xchg cli outsb outsb or loope repz jno inc in pop sahf cwtl cli xlat testl faddp xor cmp mov mov test lods xchg add dec xchg push pop or aaa sub and call inc ret jbe int push add int3 xchg dec push outsl or sahf xchg pop xchg jl addr16 inc mov pop scas mov inc push (bad) fdivrs scas push push cmpsb jae xchg inc xchg pop dec adc ret adc mov addl (bad) mov movsb cmp sbb ret mov mov mov std clc sahf pop aam inc mov mov jg (bad) pop sub push xchg sub mov cld mov cmp cmp aam insl cli lods add lret leave insb mov jbe push out cwtl lret ret out hlt mov xlat loopne mov (bad) dec mov fiaddl scas sub xchg push dec (bad) pop mov xchg adc xor or mov leave mov add pop inc mov sahf (bad) dec les pop je adc inc add (bad) mov fninit xchg or lea jecxz inc and pop and mov mov mov pop inc add call pop sti adc sub mov pop out lea enter mov out xchg cmp inc push loope das cs pop fs test push out xor mov push push rclb ret iret xchg jnp and andl fistp or and jecxz (bad) mov rcrb jge and sbb pop ljmp stos ljmp lock pop xchg pop lock lock jbe in mov mov mov xchg not popa mov or sub pushf cmp daa sbb (bad) psubw mov imul into lret sub xor mov inc xchg mov sarl and sub and pop mov hlt jb (bad) mov test fs push cmc cmp inc out movd int3 mov stos movsb test stos or dec imul (bad) sub dec mov or xchg add nop adc (bad) imul pusha jo xor out fisub scas inc jmp rorl rcrb mov in add sub mov and rorb mov sbb mov sub mov outsl xchg outsb test fldl2t dec xor lods sbb or dec (bad) dec sub out gs inc push call adc cmp add in xchg lret rcl in add popf sub fisubr mov xor jno popf addl fwait or psubsb mov psubusb leave inc jb mov xor xorb lret mov cmp dec or push cmp jl mov cmp xlat cmp pop fdivr pusha pop outsl call sbb (bad) dec sbb scas pop and pop inc sbb adc dec mov jl xchg xor insb mov mov fnstsw and jecxz inc and aad (bad) sbb shrl (bad) mov hlt jl mov ljmp xchg pop ret lret lcall jne xchg clc push mov jge repnz jmp outsb call cmp and call jl push sub inc sarb in and aaa xchg cli cmp js push inc outsl out notb jnp xor jecxz jne mov fimull aad and xor push (bad) jmp sub pop xchg insl jge sub in pop sub dec scas xor stc (bad) dec test fcompl cld add test addr16 bnd sti into cmp stos dec cmpsl cmp mov out lods sbb mov pop pop xchg sub jo mov mov push mov outsb (bad) jmp jecxz outsl je in push lods adc cli repnz dec cmp ljmp xor xchg jbe pop xor or add xchg push and push jnp inc mov mov and int3 pop mov jnp pop sbb cmc xchg cs cli push adc pop jg pop mov jl in sbb ljmp (bad) mov adc push mov push xor mov dec dec loop ja or (bad) mov or lret pop inc jb or mov cmpsl jb jg dec clc mov sbb mul cs mov pop es sub mov scas fmull sbb xchg and xchg negl (bad) xor fcomp jecxz jae dec mov mov arpl pop pop testb dec int3 call cmp dec push xchg and sbb insb xchg cltd stos (bad) xor and mov loop xchg fs jo jecxz loop push xor call push mov sub test xchg adc es insb aam mov sub inc iret mov fnsave cmp mov and pop cmpl inc fwait mov push ret mov jg out cmpsb addr16 jnp xor ret push push ret pop test and mov std xor int push cmpsl fs in xor sti push adc (bad) push dec (bad) pop pop loop add sbb stos jbe jge lods ljmp loop push cmpsb fs ret xchg nop es stc cmp lret call inc inc les add add fisttpll jmp and loop iret popf xor or cmp sbb std push je cmp mov cltd xchg mov push mov push lcall int3 adc dec or and out inc loope (bad) pop push pop adc (bad) test call cs js cmp iret xor movsl (bad) jg out pop mov popa xor sbb adc in xor pop movsb jl inc inc popf cmp push nop push xor pushf or xchg cmp out stos test jp repnz add xchg sbb inc mov mov frstor mov int3 nop xbegin jle test arpl mov xor sub addr16 pusha arpl aam mov aad sahf fwait test (bad) fiaddl push mov mov rcll jbe or mov loop pop ja rorb or out (bad) std in or clc inc inc sub cli mov int cmp lods and scas and mov aas imul push inc mov cmp and insl xchg xor push push cmp and imul out shlb xchg jl xchg xchg cmp mov lock lds push iret push and ljmp out insl in push test push jmp lds jbe mov add cli sub ret fstl daa dec cmc movsb and popa mov nop xchg jge es pop or xchg fs mov inc pusha dec dec jecxz ljmp sbb push sbb fwait bound bound nop in add cltd mov pop inc inc test idivl loope std iret xchg jmp cli test xchg or jp stos sbb or sub xchg sub mov cmp addr16 add ljmp xor xchg mov bound mov fstpl pop call sbb divl dec sub sbb in popf sub mov sub (bad) inc mov and mov pop pop fstpt in pop call pop mov outsb loop lahf fldl (bad) push cmp daa ror xchg jge mov mov add cli xor fcomps dec jae xchg bound loop lahf (bad) scas xchg cmp jmp mov inc push fcomps pop mov daa in es cli data16 cwtl adc popf js cli mov pop sbb sbb nop imul dec sbb push mov inc pop fsubs out test inc and mov and mov adc cmpsb pop popf ret popa pop fsubs pop test sub push pushf xor (bad) outsl or imul sbb pop or inc xlat push gs das pusha sub arpl insb jl mov ret jle sub daa subl inc fldcw mov or popa mov or sub (bad) pxor addr16 jmp fmull stos iret or push pop jb arpl in subl icebp (bad) mov push sarb pop inc sub aaa and lods sbb ret dec dec hlt in cwtl ja jp xchg ret sub rcl pop cmc cld in fcmove lods push jb adc pop out fdivr sbb outsl lods mov xchg pop cltd xor test mov cmpsl (bad) or xor mov gs shrl mov loopne scas push mov scas push add jge xlat adc pop push lds andl int fstpl mov and mov or mov test (bad) leave add cli jbe xchg pop pop sbb dec ret (bad) push outsb fs mov cli call mov gs hlt jge xlat dec add ds sbb xor lahf addr16 inc push or loope fwait popf push gs xor out add lock jg (bad) dec sub int (bad) rol push push js je jle pop mov ret mov inc pop incb cmp leave rcrb mov (bad) pop pop mov iret push push leave pop inc and iret into xor fcmovu jb pop add push loopne mov (bad) hlt iret lret push mov out or popa enter in mov hlt iret lret (bad) data16 adc ret dec aad test or cmc popf mov xlat xor pushf rol (bad) outsl xor mov mov (bad) icebp imul hlt out lret xor jae push into mov fs mov in call cmc push aad int3 inc push aad push (bad) rclb outsb mov push or mov bound cmp jmp popf mov addr16 push adc aad mov xor mov mov or pop ret lret ret push lds inc arpl sub mov in or (bad) (bad) pop push in mov inc ret sahf loope ret xor shrb hlt ret out adc fildl inc int pop vcvtsd2si jecxz out mov aad mov xor insl cld (bad) sar fxch sbb pop sarb divl mov pop jnp mov lds push in push into iret add popf negb push data16 test mov (bad) cld int add or xor popf mov inc mov push insl jg iret sbb pop scas xchg adc leave inc dec loopne insl lahf mov cs mov aam push push xor imul insl lret aad sbb push mov adc jns cs insb fs dec lods sub dec sub lahf popf inc inc xchg stc xlat push aaa pop xchg (bad) mov pop xor cld cltd mov sub xor shrb inc out movsl pop (bad) push cmp cmp xor xchg mov pop (bad) inc hlt out leave imul (bad) aaa push mov insb in stc jmp cmpsl (bad) insl (bad) (bad) aad movsb aam stc push sub fnstsw sti sub jno sbb (bad) mov or cli popf mov nop inc pop (bad) test daa fcoms or (bad) jecxz stos inc (bad) fdivrl pop loop out adc add xor ja sbbl sbb lods fildl arpl gs mov (bad) je jecxz inc sub jne fwait incb iret call jns xchg pop fsubs xchg scas inc int clc sub mov sub in fs and cli sub lret xchg xor sub add iret xor out cwtl jecxz in fs jmp sub addr16 jno ss das insb mov inc fwait push call dec adc popa popa int3 int3 fstpl xchg fst outsb and cmp sbb push xchg iret je xor mov or dec int insl into lret cmc out xor cmp fucom jmp movsl imul ret stos kandnw lods push in (bad) aad sbb cmc cmp cld mov xchg inc or mov or mov inc rcll pop (bad) popf mov dec dec lds ret mov (bad) inc scas fidivrl fdivrl adc mov out jecxz and movsl lods nop pop lods es sbb fs andl xchg cmp or in jae lock inc push sbb dec jb jae (bad) mov fstps out movsb cwtl mov mov outsb xchg cli cmp in mov cli inc stos popl push jae pop xor jb cld jae or mov jmp push movsl or xchg mov cli imul push sbb inc ss mov mov jae sub mov lea int3 inc or pushf fscale lret mov and xor push das mov cmp pop pop or pushf stc lahf aas pop push icebp (bad) jnp jp out bound or cmp sbb notl std mov xor xchg rorb dec xchg pop xchg call shrl jmp movsl les imul mov dec icebp divl mov lret push jb push fsts fisttp dec gs sbb add adc ja popa (bad) fdivl add cmpsl or (bad) paddsw dec cmp lret push xor test data16 mov push cld decl pop and mov popa dec push sbb arpl test and jg jno dec xchg mov loopne or sub leave adc mov adc xchg and (bad) incl imul fwait ret and xchg lret inc sub push cmp dec xchg jb adc aad lds cmpb xchg and sub int pop loopne in jns sub add xchg mov iret rcll aaa pop adc cmp lock popf rcrl pop inc emms dec pop divl movsb pushf jbe lret push call in xor jg add jb ret push sahf dec pop xchg xchg inc lcall lcallw mov fmulp jmp sub push aas popf ljmp arpl data16 dec rcrl fidiv mov sub test dec aaa mov repz or xorb leave in jns xchg int3 sub stos add push test repnz and cmpsb or call lret and lret int3 or jb inc aaa push ficom adc sti push test test and movnti jo ret gs cmp and in popa dec cmpsl cmp in imul test scas push inc pop pop mov jecxz jl mov mov pop call stc xor pop jmp jp xor ret hlt cli lret clc (bad) and sbb add push pop ret lea jecxz inc leave jge jb out imul dec in in test sbb mov lret int rcll add rorb aaa cmp and push push int3 jne fwait ljmp (bad) mov lods ljmp and jns test (bad) popa xor xor dec nop imul mov ds cmpsb out mov jle repnz pop test or xchg pushf push dec cmp or add mov iret cs (bad) scas sub xchg mov test enter enter mov lret (bad) insb lret mov vmovaps outsb xchg push mov es pop pop jns bound mov dec dec aam push test inc aas int xor push push (bad) push loope sub in (bad) arpl popa sbb in sbb orb andl sub ja mov outsb ret imul xchg lea out loopne nop and insl and inc in movsl add adc ljmp push pop cmpsb inc sub cld mov (bad) sub arpl addr16 mov adc mov aam daa dec lds cltd ljmp and inc inc xor sub jle and iret inc addr16 push mov push push mov (bad) lret push inc sub mov fcoms std in jl pusha mov dec jmp push xchg stc mov lret lahf int3 out adc inc cmpsl lahf and stos ret (bad) mov jb (bad) pop mov xor jl and fcomip pop adc mov fs lahf (bad) mov imul fs sbb ds scas (bad) lock inc sub jg popa mov cld aad or in and and dec add iret pop lret data16 call adc inc rcll inc pop push cmp inc add dec fsubrs aaa adc push mov mov sbb imul jl add mov fst nop fildl or and jg cmp mov inc pop shlb inc sub mov cmp or inc sub adc add jp sbb xchg mov popa loop pop adc cltd mov mov test ret mov or add bound lods aam clc arpl aam dec xor data16 mov dec aad and stos or (bad) xor pop mov fildl mov cltd sahf mov into mov xor push mov push jg cmp rcll xor hlt adc das lods dec sbb aam inc dec fs adc adc push std jp mov jnp fcomp mov cmp lods jl mov call mov dec sarb lock shlb cmp sub cmp mov sub xchg shlb insb jp fucomip lock mov scas sbb push leave add out push mov loop sbb loopne push xchg ret cmpsb xchg sbb pop inc fs adc stos adc movsb mov inc lea out test std push and ljmp jmp push int3 mov popa bound inc cmpsl pop out inc ret inc push xchg dec sub xor sub jmp es cmp sahf fwait push inc mov fnstsw or jo dec call sbb out stc insl icebp aaa inc inc xor mov mov jnp sbb dec or xchg stos dec pop lea pop sub inc mov in xlat out jbe cmpsl jb insl jnp lret cmp cmp adc ficompl sbb lock fdiv pop mov sbb mov dec jno push xchg imul push int fucom pop mov mov inc shl and cmp pop (bad) push mov addl cmc xchg xor mov inc pop das dec ja and insb inc cmc mov cmp cwtl notl mov push cmp mov and adc add repnz out mov mov js jge cmpw jne push pop dec addr16 cmp aad std xchg insb jg js das arpl out dec pop fs lret imul (bad) int3 bound jb dec mov aam pop out push (bad) mov mov addr16 icebp scas (bad) xor mov icebp or inc adc out xor mov out (bad) cmp ja sbb loopne lds popa lds add lds adc and push sub clc sub inc fnstcw jle jp jle movsb (bad) xor mov jo je xchg mov push adc test jae rolb sub loope add fs or mov add not lahf int3 push repnz mov sbb (bad) cmp cmpsb out and jl cmp push fwait out add adc lret jmp mov lds jne das outsb xchg sbb je fimul lds int (bad) shl and (bad) push int xlat mov cld popa insb in xchg enter pusha icebp or inc dec cld or cli or jle lcall ds jnp mov in xchg stc and push or cli jno mov (bad) and loop inc fsubrl mov mov add rolb jmp in jmp mov push cmp outsl ret ja clc and cmp je dec in movsb and fs inc sbb add and or lret and pusha jmp arpl mov popf ret mov dec (bad) pop and leave stc xor pushf gs insl insb je push insb (bad) mov xchg out loopne or arpl les jae test fwait repz mov nop call pop jno xchg mov pop xchg pop pushf rorl jecxz cmpsl call ljmp aam loope inc outsl jnp fsub cld inc or jl in mov xchg and (bad) testb mov and adc test xchg and xor (bad) into dec sbb mov push pop fisttpl mov test jge lea (bad) sub iret aaa and loop inc push dec imul xchg adc cld add in and xchg push fwait xor pop ret (bad) je push (bad) ds cmp lods or jb jns loope repz xchg scas cmp imul loop mov mov mov pop imul lret jecxz std sbbl fnstcw mov xlat add loopne daa mov sbb into pop jnp cmp loope mov inc sbbb jb repnz jne mov push inc xchg mov test and dec xor mov fs adc jbe sub or xchg call loopne insl and xchg mov cmp adc test sub jg jne out lock cli aam fisttp aam sbb pop frstor in std je xor shll out aas push and xchg cs fist xor jl dec imul ljmp pop adc loopne (bad) cmp pop int3 xchg imul adc repz sbb add inc out mov std mov loop lods sti dec cwtl sbb in add dec ljmp mov rep cmp push imul int testl add push iret mov dec mov adc lret push enter jo outsl sahf push divb jo mov daa push leave add aaa ja push mov lahf sub push fdiv sbb add cltd js insb sbb jmp aas pop dec xor mov addr16 insb cmpb mov jbe loop popf xor inc lods ljmp test mov hlt or xchg (bad) adc cs popa inc jge xor int3 cmp add pop sbb test sbb fnstsw daa loopne gs popf (bad) adc fdivrs sbb jmp push xor (bad) ljmp mov mov push test inc sbbl int3 mov mov sub stos xor insb sbb stos add les test xchg or mov xchg shrb and pop pop pusha xlat mov and cmc mov out ret xor (bad) (bad) cltd out jmp pop mov pushl and das pop mov jg pop xchg sub (bad) jge xchg xor scas or mov jo lods ds (bad) into pop add inc in mov shl pop dec ret (bad) jle mov idiv mov ror sbb sbb sbb mov xchg in (bad) mov lahf jo mov add jle in sbb in adc leave mov xchg push jg cmpsb insl bound stos fistpl fmull add adc ret mov jecxz stc adc iret mov and outsl pop inc (bad) into out adc inc xchg lahf or sub ret imul out clc dec (bad) xor (bad) ja mov push cmp outsb leave dec mov sbb sub and sahf xchg mov dec movsl push insb push ss popf push inc or jmp xchg mov xor in sbb xchg add mov mov adc div fs push es xor lahf mov lret (bad) and and loop dec pop cmp sub cmp rolb dec jne mov mov dec sbb xchg pushw dec outsl lds pop adc loop pop cmpsl mov and outsl insl xor inc addr16 lea pop mov dec aam stos fsubl fmuls gs repnz push mov cmp lret pop insl pop mov popf lret repnz gs ss mov push push mov and jle sbb and push fdivl xchg jne sbb pusha mov addr16 (bad) jns fimul dec push jnp stos adc (bad) cmp xchg testl pop push inc in fstl stos frstor enter inc fs stc movsl ficomp mov cmp insl xchg movsb jp add leave push cli loopne outsl in jmp push enter push mov aaa add fsub mov iret outsb imul jno add out mov mov inc negl cld movsb (bad) cmp add xchg mov jle sub adc cmpsb push iret xchg shrb push xchg mov add nop cmp aam add insb insb cmc pop fisubl imul mov jno and add xchg cltd aaa fadds inc dec out pusha mov iret cwtl inc iret fdivs out jo repz shrb stos dec dec sub dec int and int3 in imul pusha int3 imul inc sub push mov xor and inc gs inc sbb sahf xor fwait arpl aaa vmovdqu cmp or ror into mov adc xor sub add pop mov jl dec pop add pop xor dec adc aaa shrb int3 or sbb ss cmp cmp daa xor ss add rcll mov loope xchg pop and sub jp jb jg roll addl pushf (bad) xor cmp aam test mov stos add test pop jns jle cmp lods (bad) mov sahf xlat mov xor ja dec inc iret enter (bad) shr fnsave faddl jb sub jno (bad) test stos or gs cmpsl scas dec pop mov or xchg imul movsb pop pop popa loope push or xor (bad) lahf and adc xchg dec fdiv mov ja jge,pn clc mov movq lea sbb add add xor adc add push iret ss xor xor int lods imul imul imul ret add push orl fcmovnb int3 xchg push push outsb add and inc daa inc nop mov and insl add loope mov or push fcoms pop xchg cmpl sub mov mov shl jbe test fwait pusha add sub mov xchg cmp lahf xchg sbb mov cs mull divl repz in (bad) xchg shl push push mov lret pop imul add (bad) lods xchg in push popf mov cltd mov arpl add jb dec je pusha sbb aam push out cmp mov mov inc mov das xor in dec jo dec call mov mov push mov or mov sahf shrb (bad) mov inc hlt lock (bad) xlat and (bad) cltd mov cltd cmp xchg mov test and lahf xchg nop xor jns (bad) int3 mov (bad) out inc mov jnp jl mov xlat movsl adc mov adc cmp jbe mov push into mov xchg (bad) (bad) movsl dec add mov (bad) fdivrl ja imul xchg fwait xchg push cmp bound mov cmp int fwait enter rorb or sub cmp add div inc mov lcall daa jle lret repnz jge add sbb lcall and fs mov leave or mov mov pushf movsb test pop push add sti movsl enter mov and mov or outsb sub call pop loopne cmp dec push mov clc pop fisub inc push clc out sub arpl loopne xor mov mov or push (bad) sbb mov add movsl jle rcrb ficom addr16 scas in mov in cld stos sbb xchg int jmp aas adc lods add mov jecxz dec mov (bad) xchg cmpsl das (bad) pop jle fimul fstl cmp xor jno ret loop lock cmp mov mov test xchg std add lock sti jae xchg (bad) bound or jne lods js jg scas sarb inc sub lret call lcall jo mov dec outsl (bad) rcl je sbb shlb jecxz stc mov xor test push movsl mov in sbb repnz sarb inc mov cmp cmpl stos and sub lds push jecxz jle push movsb mov mov sub sbb negl jne icebp fldl pop loopne pusha adc sbb in fwait adc cmp stos insl lcall add sub xlat mov push cmp aas pop ficomp insl std pushf xchg jl popa fs push mov aad mov dec in mov xchg mov sub jbe sbb push and pusha outsl movups ret orl js cmp int3 and mov adc data16 add (bad) mov adc movsb movsb xor xor lret xchg icebp inc lcall movsl xchg adc leave or lods clc pop rorb movb cwtl mov shrb mov (bad) dec sti add inc xchg xchg adc add lret jb push mov in push push jne inc sbb mov pextrw mov movsb cli cltd or push fs mov jb mov in sbb jecxz push xor std into lods pop lcall or cmp mov pusha xchg dec cmc mov push inc or cmc das loop rcrb mov cltd mov adc or cmp or or in ret sub jns rolb outsb ljmp pop icebp outsb and cmp mov jae lret imul inc xor repz in mov nop stos mov cmp insl push xor jbe jb mov jnp stos out cli and dec lods outsl lahf rcrb adc std mov xor stos clc adc sti cmp movsb cmpsb imul pushf test xor aas and mov sub dec push cmp add sbb rorl lods inc cli sub and inc std mov cmc xchg add add and pop icebp xor int gs divb rolb rcrl imul enter scas sub jne add dec push femms test ds ds mov xor addr16 incl out ds insl cmp sti or imul inc mov (bad) jmp mov push daa push stos mov sub add rolb and testb repz (bad) icebp fiadd push dec sahf push pop xor inc or aaa pop inc cmp fs push lcall movsb pusha push outsb mov adc cld mov cmp std cmp insb pushf inc dec push mov push imull mov int3 and movsl inc add pushf fidivr ds push pop pop aam hlt hlt mov inc (bad) lds test mov xor das test sub je ja add xchg popa mov cwtl xchg jp imul incb lds adcl leave lods jl adc push test cs or add mov push push sbb adc dec (bad) xor mov mov jne es push add clc jle inc jmp sub mov rcrb push xchg mov cmp dec inc jle xchg out xchg push aaa es push in mov bound sbb xor lock mov inc imul xchg adc add xchg xchg pop cmpsl push cltd mov ja push jno sbb cmp xchg ja fild cmp or cmp mov xchg cli cmp and pop push push stc loopne cmp call or sbb cmp jecxz or push jmp push mov setbe int3 mul lahf fwait mov or push decl xorl jle clc push fstpt lea (bad) dec mov test lods or pop add movsb or shr sbb mov and das rorb fsubs push pop in adc add pop setge lea or sub xor aas ret or add imul xchg sbb lods add cmp leave ret mov cmp ss decl mov outsl mov sub mov hlt stos mov inc inc push popf pop inc sub inc cmp mov inc cmp dec mov mov pusha repnz sbb sti add test mov popf xchg lods push dec adc and stos lea dec mov and (bad) std incl push je mov stos xor adc xor lods inc cmp or sub pop cmp int3 (bad) in jecxz xor inc mov or xchg sub fdivrl push stos xchg inc in push pop int inc mov push lahf ret cmp ds jmp dec arpl inc icebp add push sbb or sub pop hlt fldpi pop mov cmpsl movsl cld cmp mov xor push out mov jecxz push xor orl sbb jl iret cmp roll out mov test sbb int clc inc xchg mov or push mov jb push and xchg movsl test jle xchg in pop xchg popf push sahf ret jbe mov sub out xchg xor sbb in rclb in jg dec inc pop lret xor shl pop and sbb cld sub xchg or inc pop ljmp cmpsb add pop lcall popf rorb mov inc mov insb jl sbb in test sahf ljmp mov pop add inc aaa jo push inc cmp mov xor lret mov sub movsb (bad) pushf mov sbb xchg pop int pop push and mov cmp mov lds push push pop sbb add inc push push xor push mulb xor or out fnstenv push fdivrl movsl lods add sub (bad) jae jge push outsl sub out fcoml jg cmpsb mov or ret inc daa cltd pushf (bad) push xor lea sub iret test cmpl pop int int3 (bad) push dec xchg jnp adc mov aad sbb nop mov leave mov xchg cmpsb hlt sbbb sbb mov out dec faddl cmc push gs or mov inc jmp dec ss lahf sbb popf gs cld icebp pop push sahf and imul inc sub add and iret sub sub test dec cmp or pop daa mov shrl and and orl (bad) in sub lods imul scas orb loope test (bad) pop ljmp imul fs cmp sahf (bad) dec sub add pop mov push test cld sbb sbb loop movsl movsb dec outsb sbb xor dec sbb imulb pop jne popf rorb mov cmp aas inc aas pop pop sub test cmp cs pop dec sub dec js pop movsl or dec push ds mov imul or out cmp call inc gs daa inc stos inc idivb in add jmp sub mov pushf popf jbe sbb jecxz cmpsb xchg cs mov lahf movsb add cmp jne int3 xchg mov sbb shl pop mov and add rorb jnp loope adcl xor jge push imull rorb mov push push test ret rcrb push cmp cmove or inc lahf mov jg cmc fdivrs cmp pop test movsl sbb dec addl mov jb insl mov sbb in outsl ficomp test pop xor imul (bad) outsl mov xchg inc outsb shrb out cmc xchg in sub mov mov cmp push out arpl push je push enter xchg pop pop test jno,pn sahf push movsl insl mov dec aam movsl push jnp andl or and sub imul xor mov push inc dec push fmuls dec call lahf push loopne xor jge in and sbb mov js and cmp ljmp fcompl and repz dec or and (bad) sub mov testl jecxz into xchg rcrb fwait add sbb test lock dec lea xor jne add call sbb (bad) sti xchg mov adc jns ret mov jnp jge sub jle (bad) inc ret sub push cmc sub xor clc jl add sub xor mov mov jecxz or pop add cmp out ljmp stc push notb add cmpsb sub adc loop loop out sub pop xor out or mov lods out addl call jb sbbl (bad) sub xor daa arpl jecxz fnstsw movb xchg lea mov outsb cmp stos adc jnp and jl es adc mov mov dec inc roll sbb loope in jmp adc mov sar pop xor loop ss mov fnstsw xchg stos pop lea jp cmp lahf (bad) loop (bad) pop data16 in mov cmpsb aaa inc adc inc incb add mov dec lahf pushf push push pmaddwd and lods int3 mov xchg and adc sub mov (bad) icebp and pusha and and iret outsb loop in xor aaa out popa cwtl pop and iret mov mov add push mov xor mov icebp push cmc in daa mov inc inc ljmp or mov mov lea sub push sub daa notl ja inc rorb sbb mov pushl push adc (bad) sbb iret adc lock jns loope inc cwtl dec cmp pop clc mov call (bad) fsubrp pop xchg fs shr in mov adc repnz mov push xor lock push jle push ret popw pop addl movsb aaa out adc and dec add inc lahf pop rol (bad) xor xor sub jne arpl cmpsb clc in sbb jecxz pop clc xor jmp insl pop mov lea (bad) push sbb jnp xor xor jge popa aaa mov dec leave mov push std push jmp jp je inc arpl pop loop out (bad) enter jae mov add cs mov jmp repnz cld movsl inc dec ds jecxz sub cltd add dec push in dec dec xor push into xchg out rorb ss push cmp jo insl rol movsl aaa cld clc mov lcall xchg xchg and push sub outsl xor inc ja jmp xchg lods push mov leave das mov fwait pop xor mov add adcl jp nop xor sbb and push aam add push mov ret loop out xchg inc mov icebp pop mov sub insl fs mov rcl xchg stos ja add movsl int3 xchg jno sub xchg out jno pop dec inc xor jno pop jo cltd pop popf leave dec cli cli int3 out fisubr insl sbbl push loop fsub add xchg jne sbb mov or sbb xchg xchg icebp mov mov cmp out sbb add out xchg cmp xor or add out lock loope push dec hlt jae lcall mov lods ret jbe inc lods jo call inc xchg mov cmpl imul xor jns add and in pushf mov pop int pop push jecxz and dec adc add sbb xchg mov mov mov mov jmp js cvtdq2ps test mov lock cmp dec mov andb mov in test or aas fs xchg call fcmovne cmp test aaa jge inc (bad) gs ret mov adc into int sbb inc xor xlat push (bad) or pop ret dec mov jecxz pushf add addr16 adc inc sub add pusha bound inc xor xor cmpsl jb jecxz xchg pop test fs sbb les dec mov pushf call push je scas lods aad int sahf and das (bad) adc clc stc dec je mov mov in in and jmp add mov dec add sbb push lods scas or loopne stos in and mov pop cmp out jge es ror inc xchg bswap mov insb xchg stc mov mov sarl sub xor sub aaa add push clc ljmp jne out dec mov pop shrb icebp or mov or pop adc lds lret shrl push popa pextrw and hlt fs sub lods in cmpl lds inc es scas xchg inc jle dec sub test dec jl js adc fwait xchg cmc lock push pop mov js int3 popa shrb (bad) cmp insl push add push dec mov xchg xchg pop outsb adc int stos xor inc out pop fsubrl (bad) mov and iret (bad) mov jno fwait xlat pop mov xor pusha xchg (bad) outsl mov not add inc mov scas adc stos sbb mov adc jmp xchg dec mov imul test pop mov mov add sbb mov push sub pop jno jnp outsb push js mov fldenv sub xor mov jbe aaa and xlat push icebp jle mov push and les adc rorb xchg imul movsl or sbb sbb push rorl xchg push flds js sbb popf das fldenv sarl es (bad) and out mov or into orb into sub sub es push iret pop loope jns ss jo sub mov movsb rcl sub mov or jmp shrb pushf ret jl jle mov stc aam sub movsl test dec cmp int bound jb mov pop inc iret and das (bad) int3 enter ja jo xchg lcall add sbb pop pop sub and jnp and sahf int3 (bad) mov call imul mov into int cmp inc xchg and lods push mov and or sub cmp lds decl sub push mov add aam movsl inc mov sbb aad inc (bad) repnz stos int3 in jo lret mov in data16 pop jbe mov int lods lahf mov subb jnp clc ss std mov inc pop addr16 inc les lds sti add repz adc les (bad) rcll sub (bad) imul mov arpl inc insb inc pop jle mov xchg outsl mov inc push stos out mov nop jo gs dec iret out xor sahf sub sub cwtl cmp adc ficom fidivl cwtl inc add arpl jb stos pop enter cwtl orl out lods or xor daa arpl aaa inc hlt jmp lea sar mov sub enter lds in arpl clc sar stos push call arpl or adc mov mov (bad) cmp sbb and test push cltd sbb sti jmp mov inc mov sub cmp fs int3 mov sub xchg mov inc mov stos mov dec cmp sub (bad) cwtl and lods or sbb push or icebp mov mov mov inc rcrl test pusha dec push je movsl mov cmc add add outsl out scas fbld iret mov mov imul outsb or xorl dec rcll and insl or push or sbbb adc sub mov icebp daa fwait ss lea xor stos sub hlt shrl push repz adc inc xor fcoms pop fstl xor inc push cmp or or push cmp jns call mov movsl add cmp insb xchg fldenv mulb xor cmp fdivr xor inc pop les insl das push (bad) sub lods inc push adc or push test and pop cmc pop std aaa cltd mov inc fstl push cli xor (bad) fstps data16 sbb pop call call xor fistpll andl xor jmp ss cmp js je push lea and (bad) mov adc insb (bad) mov xchg pop sti outsl ljmp movsl jle sbb sub outsb ss rorl push sahf xor sub cs and jecxz ja sbb mov fdivl rcrb xchg inc mov jns push push int3 (bad) popf testb push add test adc lret push shrb nop ss rcrl xlat sub aas mov fildll (bad) lods lods into jns push in out andl (bad) cli push shlb lea lcall inc xor mov jle push scas add repnz jno call add mov loop mov mov cmpsl inc xor add cmp mov imulb pop ret cld insb data16 lret aam icebp sbb cmpsb sbb inc imul push push sbb inc sahf js xchg jnp push mov test xchg popa xchg dec inc mov addr16 push (bad) push arpl je inc insl pop dec notb add dec lods imull push sarb or mov (bad) xchg bound jns add dec and adc aad int push add add inc aam sub mov mov js mov cs jl mov dec movsb sub and in push push mov jae add insb shrb sub fsubrs das nop fs jmp outsl mov jb popf in xchg lret xor inc aas pop clc inc aaa add inc ds xchg jo sub pop push addl ss cld jbe push fucomi cmp lods sub nop pop mov mov mov push test dec jne popf inc mov jl dec cwtl movsl (bad) je dec inc push cmp pop pop push iret mov addr16 mov fstl cwtl outsb stc adc rclb sbb aad or repnz rclb inc and mov sub jle or xor cmp and lods loop push or pop xor sbb mov push (bad) jno mov mov or mov jg cmc push xor jb mov lret sbb out cmpl stos stos bound cmp xor icebp (bad) push into dec inc popf divb (bad) mov jnp or mov loopne inc out adc cmp push sub push sub das sub dec push or pop add mov int dec xor fimul les repz inc xor mov mov pop sbb fild pop outsl clc xor js rclb outsl and leave fisubr sti ss rcll icebp push lcall pop xchg lds stc xchg andl sub daa cltd lds inc lcall and inc adc inc (bad) pusha mov mov int and ret pop into ret add dec imul mov inc dec mov (bad) mov add test or aaa jmp js cs adc xchg int3 mov aad xor nop imul inc push adc in sub mov xor mov in imulb sbb (bad) jns adc sbb repz (bad) in lcall xor pop jae add mov push loope dec xor mov (bad) push mov pop inc mov or sub icebp dec xor dec mov inc lods push mov dec adc push jl cmp std sub and dec mov lods movb ss scas aam ja xor lods mov or or dec test dec jge mov lret fidiv inc add pop xor stc push jmp cmp (bad) pop xor jp enter ret jns ficomp pop add dec call fildll gs adc push loop,pt inc mov mov out lcall add adc aas cltd sub test pusha sub or pop pop inc dec loopne ljmp xchg loope addl xor adc addr16 xor jns iret dec inc push sub enter push xchg or into test mov popa adc push aas push sbb adc (bad) jmp sbb fildll rcrl inc scas xchg stc pusha dec insl mov push rclb lahf insl int jg in aas pop jnp rclb push es adc loop add test pop adc and mov ja out add fidivl inc cli xchg sbb dec fldenv outsb push mov pop add je cmp cmp negl pop lods pushf sub rol inc jne xor out jmp mov inc xorl inc ret cwtl pop jb adc sti jno vgetexpps stos add fisub dec lahf jge mov mov push push (bad) icebp or dec mov xor cmp gs fist cmp loope xor dec mov jecxz xchg jg ret jle nop outsb push sbb fcomip nop jg enter push sub into mov adc xchg call xchg and push lcall adc and ss mov inc subl lea push cmp pop xor pusha xor dec pushf movsb mov cmpsl int adc cwtl xor bound incb cmpsb xchg push and and jo adc inc adc push sbb jne xchg out inc dec mov dec arpl lret inc push out int push mov imul xor pop adc xor clc (bad) loopne (bad) pop push fdiv cmpl in xchg in and dec push pop test dec in sub lea imul test lods pop sub mov icebp stos jno cmc aaa imul pop hlt sbb push adc cmp in jbe imul sar pop iret std mov insl in cmp xchg ja aaa jecxz in in test cli jb loopne pop and mov inc jnp lahf mov jno xor cmp ss movsl inc pop mov xchg fiaddl divl test mov sbb cmc movswl cwtl mov stc fisubrl dec cmp addr16 jl add dec push outsl mov push imul stc dec mov jmp push mov daa outsl daa inc stos ljmp frstor clc push jg add push sahf xor js pusha adc popa movsb add cmp dec cld adc addr16 sbbb cld movsb or push shrb dec leave arpl pushf enter imul push shrb inc xor iret mov fldcw bound jnp xorl add sti aad dec lret jae mov and jmp mov outsl mov imulb jle pop outsl js and add and adc in test sbb inc lea mov ss and jecxz ficompl stc adc jnp or int3 or int scas scas clc (bad) jae pop cs jno loope pop lods and (bad) sub add lds jecxz mov cmp mov (bad) jne mov ss fbstp mov sub leave inc inc mov add pusha inc scas pop pushf jmp cmpb test test fwait ja jl xchg push pop sahf mov mov and daa sub sti cmp clc sbb fwait or adc js jmp insb mov xlat jns wbinvd iret mov xor inc movsb out and lret imul add push inc and pop xchg cmp xlat enter cmc pop inc dec xor xchg cld cmp add jb shrl push and and mov lods movsb mov inc adc and out loopne inc pop mov cmp fistp (bad) insb scas cmp jo xchg insl int3 mov loope mov in mov out and in push bound mov test mov je sbb or dec in sbb xchg cmpsb or mov push mov inc xor push lret jo cmpsl scas jecxz pop and incl push push mov and xor mov xor xor neg mov sbb mov js mov loope adc dec cmp cli movb mov add inc dec in inc xor cmp inc sbb inc inc adc jle or sbbb (bad) mov inc (bad) js sbb adc or es lock push jo mov sbb or mov inc iret xchg sbb push adc fisttpl inc cmp (bad) es outsb je mov out iret js cs (bad) outsl loop popa fcomps test stos mov movb mov inc mov ss pop ret lods outsb add mov std into inc jno,pn imul iret fstpt lods cmp inc es xchg dec data16 mov mov lcall outsb sub fwait add lret push pop in mov in lret mov mov pop lods sbb jbe and dec outsl movsb xchg daa ret out int3 leave pop decl adc fisubrl rcrl loope das cmp mov pop mov in pop mov or lods jae lock sbbl and sub data16 dec fs xor push mov xlat xchg pop push adc dec jg lea nop subl jo inc outsl inc inc rorl inc jl sub and push lcall xor pop int cmpsb or and xchg (bad) adc int aaa xchg mull aaa repz adc dec fisubrl pop push xor mov mov ret inc arpl sarb sbb scas mov or xor and mov (bad) int3 popf xlat shrb push in aas jge sbb inc push stc jne sub (bad) cld leave cmp jno in loopne or dec adcl bound pop cmc inc cs inc push mov adc and xchg imul imul cld sbb mov lret jecxz imull fcomi stc lds (bad) cmc loop push sar push popa sbb fcmovnu in mov stos inc jns xchg movsl jne lods push ret fwait lret int orl mov or add mov mov out out (bad) in mov enter mov adcb ja adc fwait sbb sub ret into mov pop gs inc insl addr16 das or sub pushf stos lods pushf ficom out cmp fistl test xchg sbb daa call and popf fwait aam jo xor repz stos inc decl sarl mov mov dec xor jle outsl jno jb std push enter icebp and jecxz insl push push xchg (bad) jg sti sub inc sbb scas ret in int mov mov mov xchg fs dec or lcall add pop or jge,pn into div fsts dec jmp mov movsl aam cmp sar cmp xchg pop mov inc ret data16 (bad) xor ja or sbb sbb pushf call or mov push push pop inc cwtl mov push stc or dec and das push movsl push iret test int3 jae mov bound ja mov cld rcr movsb repnz sbb inc mov les mov mov lock xchg std clc divb push daa test xchg arpl addr16 scas adc sub fdivrp shlb mov std push in mov cmp and imul (bad) push movsl repz insl pop and jecxz jb push dec in aam popf jl push arpl idiv sub push outsl cmp pop int3 or adc les les jo cmp sbb repnz add (bad) cwtl (bad) cmp into mov mov add sub xchg dec (bad) mov jne in inc add cld fnstcw lods jnp dec mov sarl pop test fadd pusha fcmovne loop sub pushf in mov or inc imul inc (bad) loope sub jno push pop cwtl cltd adc mov sbb push push insb mov mov outsl adcb movsb add mov or cld sbb xchg call in sarl mov mov push iret inc mov js roll pop cmp outsl scas (bad) jle je push sahf aaa push pop ja sbb ret adc pop icebp sub and mov jne dec dec popf inc mov inc mov pop lcall loopne push jns xor ja push (bad) stos faddl add add fs pop cwtl push (bad) xor mov pusha fidivr add les hlt xor iret mov rcrb lods lret push je popl xor lret mov mov jbe add jmp cltd imul cwtl xchg cmp fcmovne mov mov inc pop mov outsl dec neg mov mov gs push inc xchg jae add xor push sbb push jb int (bad) mov call adc ret insl push out fsts cmp imull or pop (bad) stos dec add mov cli orl lret stos adc scas aad fistpl fisubl or push pop movsb lcall lcall add daa lock and pop adc jbe (bad) incb int3 adc ret mov repnz dec mov cld mov roll fildl bound adc fwait cmp fstps xchg aas in inc jle mov loop push jecxz and lods xchg (bad) sub pop sbb adc mov inc inc lahf dec jns (bad) adc jnp and cli add sub int adc insl xchg xchg jb sub mov push push inc push in mov inc xchg in mov xchg or addr16 jbe imul leave and (bad) dec sub push fisttpll in ss fist jg nop sub sbb lahf in dec fldl sub sub sahf inc iret xor popf push cli sbb shlb data16 in mov sub icebp aaa mov shll pop cmp das (bad) mov out fstpl add sti popf and xchg mov movsb xor ret inc and mov stos arpl adc adc xchg lods call xchg xchg outsb xchg stos js sti int fwait adc repnz int mov push aam ja lods out mov rcrl pop repz or mov jge and cmp inc std xlat andb aam sbbl jg (bad) and jne outsl xchg hlt lods xlat sbb mov or cmc xchg jbe (bad) mov stos and push sub enter and idivw cmpsl pop add decl pop pop les lods aad stos flds fldl iret or test mov cwtl and shrl sub mov adc push jp mov mov repnz xchg push push dec push add out jl cs je jno outsl ja imul xor icebp ja cmpsl in inc inc or test fild xor pop cld mov inc dec ret in sbb and mov lcall (bad) das jle hlt movsl lcall stos shrb cltd rcrb and lret mov cmp adc xor mov int3 rclb repnz xor adc mov cld sub inc cld sub (bad) fistp sbbl push sub pop (bad) es inc fdivrs inc mov fistpl mov cmp or push pop daa sbb push or lods sub lods push (bad) jo inc pushl pop (bad) adc in or fidiv and shrb xchg dec in pop (bad) adc mov adc pop lahf dec xchg aas cmp mov popa or daa ja pop sub inc lret sub push jo int dec das inc pushf ss loop test pop fmul or sbb xor notl add cli sbb jecxz in in lret cld lock fisttpl or movsb fidivr push out jle xchg mov push mov arpl test sbbb call pop adc stc scas cld pop xor cmpsl or xchg cmp out push mov or aaa movl and mov mov iret add xor out in inc mov cwtl jge daa les pop lret mov jge out adc je xor addb sub add mov les (bad) xor (bad) and xchg lea mov les cmpsb nop paddsw lret or add xchg daa or mov fstps lods lcall cmp out adc sbb imul jnp adc mov pop xchg dec hlt popl ficomp or popf iret xor in jecxz rolb and lret add and aaa mov cmp mov push or sbb dec push xor cmp cmpsb (bad) lods cld push dec pop jno push adc (bad) xchg das push out xchg inc ds dec jns sub sub outsb lahf sub mov mov (bad) pop loop lods pop cmp sbb cmp push pop lock (bad) shl mov test jecxz sbb xchg outsl rolb pop stc mov xchg mov mov pop adc mov jbe repnz sub in jp xorb xor lret mov jne mov jmp xor bound test out jge dec dec xchg aaa hlt inc mov add sbb or inc inc lods mov fdivr repnz jb sub lret gs jmp in add push jb pop jle push mov repnz push cmc dec mov push mov inc xor repnz pop mov mov mov push push lahf cld dec sarl xchg mov mov roll fisubl mov pop pop out js shll xor and mov fiaddl mov sub (bad) xor iret loope cmp pop dec (bad) aam add int adc pushf mov outsl cmc and adc push (bad) and add and inc xor dec push in sub cmp mov fisubrl xor or dec pop stc sbb mov dec xchg jp mov test lea mov xchg dec dec ja hlt cld inc loop mov or cli add in es mov lret (bad) fldenv incb sbb sbb or xlat jge fwait add xchg in test jno ss fist jle imul scas daa pop xchg and aas push push inc sub popf jecxz scas xor stos or jb mov jo cmp add sub sbb pop adc mov movsb jge pop mov pop pop push out push sbb xchg cmp stc aam pop push in inc adc outsl dec adc pop sub lods jns add mov adc in insb es fsubs test dec clc or (bad) in (bad) es gs push mov nop repz lea icebp pop scas inc faddl or sub or sbb sub bound fbstp pop lods sti mov jmp sbb xlat sbb dec jecxz lret jno fs inc push shlb sub pop nop ds ds pop rcrb mov (bad) jmp jne lods inc push jo insl sub in test sti inc (bad) jp push jecxz je test insl mov cli movl pop mov push add xchg daa mov test rol jge insb dec mov imull (bad) dec shr push xor pop push push or fiaddl stos stos lret push cwtl sbb fsubrl mov mov popf stos paddsw and jae inc or mov pop rorl mov inc adc (bad) bound xor xchg xor cmp ds add jbe sbb push jno pop insb inc and mov or pop frstor sbb pusha inc test je and xor out xor mov pop xchg xchg and (bad) popf mov leave mov jg mov jge cmpsl and xchg push not mov adc out movsl mov sbb addr16 adc fmuls and push lock lahf cmpsb sbb test (bad) push mov push pop shr lods pushl inc mov ss cltd nop or lock adc movl pavgb jno inc jmp cmpsl out sbb or mov sbb (bad) mov mov push aas std call mov imul push gs push jl test test mov into sbb or adc xor mov jecxz arpl repz aaa pop in clc sub mov dec ret push dec insb test dec data16 jge fdivl call das or mov or fidivr inc push pusha cmp in aam enter cld lea mov xor arpl mov jg xchg aam ret mov mov rolb adc insb jae sbb das adc mov scas xchg cld dec in lods outsb mov test push out jo adc and xchg cmpsb roll pop shlb aaa cmp in cmp mov lahf sbb orl xor sub xor movsl jne mov mov fstpl in sub aad loope mov ljmp push push push iret adc adc pop mov push cwtl mov call jecxz mov addr16 call icebp xchg imul dec push aaa in lahf fs dec movsl data16 mov enter sbb pxor sbb and pop jbe aam dec and adc in sbb mov mov pushf sub divb std add in inc loop or cmpsb mov sub mov in cli and movsl pop mov repz iret (bad) xor jp das ret rorl push in jbe (bad) repnz ret test (bad) or inc xor xor outsl mov jne jmp mov pop or jle xchg mov roll outsl mov jle std lret ja sub sbb orb jecxz sub jno add stos xchg in jecxz mov mov push push jp or aaa jne sbb movsb push int mov test push mov dec fstps dec fstpl sahf loope out fxam or stos and sub xchg push jl mov xchg adc rol shlb add sbb mov lods fsubl inc mov mov dec popf imul sbb sbbl jnp outsl push and xor xor jecxz jne push insb hlt and ret leave jle es dec shrb (bad) adc sub or mov (bad) bound lods sahf sbb mov in mov (bad) negb jl dec and cmp cmpsb fdiv insl stos push pushf test (bad) daa add mov in adc dec sti jns xchg lea data16 pop lahf insl cmp and xchg lods pop cmp add cli divb add pop stc (bad) es mov test mov sub lret mov jle (bad) pop int3 int mov mov inc mov xor pop add xchg aas std je into sbb mov adc push push into sbb cs jmp (bad) sti fiadd mov mov cmp sahf int3 mov sub mov jl aam outsl lods pause fidivl int3 xor jne cmp jp sbb inc jmp mov mov enter imul sub push fninit fldenv int ss or int3 and std jb cmovge fmuls cmpl ja lret in shlb mov shrl pusha fstl cld dec in (bad) fstpl stc add (bad) or mov in sbb (bad) (bad) out push inc fucomi pop lahf repnz jmp int3 (bad) in push mov lods jmp inc fisubr aaa nop (bad) js test in xor xor cli lcall ja out dec imul adc ret inc ret xchg or dec mov insb sbb popf popa xchg int in scas divb cld add push mov inc xor rcrb sti movq stc sub add cltd int jno cmp pop lods js roll push je inc jl movsl push mov les ds ss xor repnz nop xchg add inc iret ds jecxz movsl sub mov jecxz cmpsl cwtl stc adc lea pop imul enter sub adc addl and imul sahf dec pop stos and movsb xchg jo inc outsb enter jae push dec dec mov adc or (bad) sbb push adc inc mov ljmp call add inc jne push inc adc and sub fs mov pop mov add cmp or xchg add daa mov ror mov data16 mov fwait and out shlb xor jno out lcall mov mov inc daa ja insb sub inc inc mov lret cmp int3 and popf cmp xchg stc daa subl cltd test call outsl icebp mov mov pop adc adc inc shrb ja aas sbb out movsl xor sbb (bad) pop outsb (bad) into out ret inc mov inc or ret icebp push addr16 leave jno jns js ds xchg or xchg mov dec mov dec cmp dec or push cwtl (bad) mov mov adc aaa push push jmp mov mov push lds xchg and jb pop dec add adc scas popa sub add pop xchg lret and mov into jmp je pop imul cmp js (bad) xor (bad) sub inc jo bound icebp int3 mov rorb adc pop enter inc xor out ljmp mov push push pop adc push xor xor xlat mov flds xlat lret or sbb cmc mov jl mov ret cli and push cli bound rcll xlat test iret xchg mov aad cmc stc pop ja out mov dec outsb xor and sbb push mov mov shll xchg repz popa (bad) hlt fdivrl clc adc (bad) pop or fldcw sarb (bad) aaa out add push mov ljmp sbb xchg dec jno out imul or mov or or test arpl outsl pop push mov insb clc nop arpl aad stos jg sbb aaa lods push sub mov inc arpl test outsb adc test mov xchg cs pop push dec lods jbe and push das inc pop sub push adc (bad) cld jl std adc mov repz iret ds pop sbb xor sbb xor mov cmc call or stc mov sub jecxz aad repz test and dec clc sar shlb add fs jmp adc outsl js mov cmp mov fistp jle loop pop sbb (bad) mov sub loopne push inc cld jo xchg jbe xor dec xor xor xor inc imull std cld jo jmp and push add and push jmp stos mov fstpl or dec jne and inc mov and sub out xchg inc aad cmp fs stc es test jg jle adc mov sahf or pop jne lock lock jmp xchg sbb sbb loopne sub in in shlb ret hlt pop adc add add rorb mov out daa or outsl les mov out pusha xor xor lods adc mov and xchg std addr16 pop in jnp pop cmp or jl jns push test fimul fs out clc loope lcall test add jge push mov adc lret push aaa pop ret aad jne lock dec stos fwait out pusha pop add push jge pushl and faddl mov pop and pop jg dec add dec push sbbl add push push push stos faddl pop (bad) sub popa adc lds add pop xchg cmp inc cld sbb inc pop arpl mov xor dec jo clc je mov (bad) xor mov int3 scas daa es jbe mov adc push mov sti lret cmp pop outsb push adc pop roll sub fisubl jmp fs cmovl cmpsl out inc ret push int orl inc add insb fiaddl mov lahf movsl push mov in sub dec mov and adc cmpsb (bad) cmp ds or das stc sub fsubp inc adc adc mov orl (bad) outsl lret cwtl push inc inc sub jne xchg and lds mov ror mov test push (bad) xor xlat (bad) std push jmp jge cmp adc clc pop pop cmp adcb cmp clc cvtpi2ps movsb aam sbb xchg or cltd lods cmp in jecxz adc push dec adc mov or push xchg or or cli add or es push add ljmp mov xor xchg add pop sbb fdivrs mov imul lea cs add inc aas xor push imul pop mov and fcoms sub inc xor adc movsl hlt in cmp xchg insb mov test pushf insl in cmpsb lret mov fnstenv pop ltr xor xchg mov sub xor enter cmp out ret call in cmc cli jne (bad) lods (bad) imul add nop adc (bad) fiaddl add mov imul push cmc stc sbb ret mov and inc and lds xor js (bad) clc popf xchg lea mov sub cltd pusha and cmpsl push push (bad) loope popf inc popf lods repz mov mov push ret sub mov mov fcoms arpl xchg jl push mov inc and (bad) dec aad (bad) cmpsb push dec aaa int (bad) les sbb ror fdivrp jno pop mov jnp jo js cmc test bound inc lahf dec add insl xor lahf rolb xchg daa or xor and into jg (bad) out jp and out or sub gs sub arpl ja pusha jnp cmp pop xor es imul add and push xor or mov cmp shrb in inc push dec add movsl xor lcall mov push push fidivrl cmpsb ret add pop jo lcall pop lods scas push outsl cmpsb imul mov sub mov fcom int3 sbb mov int3 sbb xor or sbb pop retw mov (bad) mov pop jp xchg scas inc add repz lahf enter pop fistp lock mov ljmp and mov xor xchg popf dec xchg jne sti ret nop xchg sbb out xchg aam cld dec and push fnop xchg jle popl stos add and loop incb mov imul add out imul sahf sub and push xchg nop mov adc xchg sti arpl fsub dec rclb mov enter pop loop (bad) leave sbb pusha jmp in jmp jo daa scas add fidivl pop adc jbe cmp inc inc pop pop mov addr16 xor pop or stc mov jecxz jle ds addl jle xchg or mov jmp pop or cmp (bad) push sub scas adc inc cld add jmp jne dec or imul sar out adc adc cwtl aad sub testb mov in push inc (bad) cli cmpsl (bad) (bad) cli in mov pop int push bound repnz les scas nop aad mov mov mov add mov fiadd iret xor rorb mov ja ret and cmp xor test (bad) insb fwait or in stc mov xor inc mov mov fnstenv stc or pop jg pop pop arpl dec cmp aam repz vmovss adc adc insl xor mov pop (bad) inc adc fs or aaa add push pop je es lahf or dec clc sub cmp bound push xchg or lea dec xchg adc or popa adc adc ret sbb cmp xor pop cmpsb pop loope push (bad) gs pop imul sbb xchg and xchg (bad) dec jb cmp and push fiaddl mov dec aaa dec push xor in hlt push jb cwtl cmpsl dec repz (bad) stos mov leave jge push xchg mov dec cs dec je mov outsb pop mov aam lret stos push and push jb ret or or int3 dec std push cmp loopne pop sub inc and lret or cmc adc cmc les aaa or jl,pn (bad) mov jmp mov fidiv outsl push xchg cmp xchg stc in (bad) in cmp insl cwtl pop call mov stos aaa lds pop popf and in sbb adc mov notb jnp aas cmp fldcw dec pop loopne pop dec scas bound mov or jne loopne ret (bad) xor inc out test xchg scas fs mov cmp fcmovbe enter mov stos mov dec gs inc int3 jo sub popa and inc sarb mov lea dec cwtl aad loopne sbb xchg or xor xchg xor cmp mov cli xchg pop mov shl sbb jbe sub sbb vcvtss2si push imul dec mov test (bad) mov fs xchg and push push dec xor nop mov leave inc pop movlps xor movsb je sbb test stc mov jecxz mov dec movsl pop sub mov int3 cwtl xor or xchg je jp test pop nop je lret jge stos xlat or out add cmp inc sub jg addr16 jne das adcl nop adc aaa push int3 xor push jb les and in and jb cs dec mov pop imul pop fdivrp call push out xor dec out sbb mov xor pushf mov push lods add pop call shll mov lea xchg fadds roll mov xor inc mov add mov hlt and gs dec inc cmp jp lods or (bad) jbe sub insb lret adc iret xchg xor sbb dec data16 in dec sbb cmp adc cmp (bad) in lock and push nop daa mul adc cmp call pusha sbb fdiv inc or loope mov inc in icebp fstpl fwait pusha xchg inc (bad) and inc xor loopne or sbb out and sti mov dec stos sub insb add idiv imull enter add repz push jno fnstcw fwait dec cmpsb push test es int3 ret cltd mov std pop xor jmp xor xchg sub lea push xchg jge jle sub lcall or icebp lret inc rolb out icebp sub jle sbb xlat movl popf mov aaa jmp or ret cmp cld std (bad) lcall aam jl mov sbb lods xchg sbb add mov xor fmuls in push inc inc adc aam aad movsl inc mov mov mov sub mov mov std aam popa jns xor fstpt mov push jne and into xchg out imul sub jne mov fmulp loope mov jmp test mov cwtl daa jns mov imul repnz mov out push dec cmp push sahf fdiv lods sbb movsl fiadd arpl fbstp clc (bad) retw sub lock stc lahf dec cmc mov repz roll mov ds mov adc je fisubr mov add or push aad mov outsl dec mov lds pop aam inc test sarb or mov push shrb or jae mov call mov xchg mov cmpsl fsubp gs push mov inc scas cwtl jge pop into sub pop xor or stos jl sub std lods je and fnstcw adc lds mov add dec (bad) jbe jle cmp ficompl xlat loope pushf sti repnz (bad) jmp pop mov out rcrb jecxz aaa fsubrs mov pop xchg addr16 mov jp test adc sbb sarb (bad) pop loop addr16 in pop jo insb xchg lea add mov jp add mov imul xchg pop sub es mov and adc jle mov push cli mov add sbb mov out (bad) (bad) mov inc cmp xchg and fnop add int3 sbb mov in stos pop cmp in (bad) mov mov jns xchg jl dec xchg dec dec cmp fnstsw jae pop jmp nop (bad) int les mov mov xchg nop dec sbb inc sub mov test popa jmp jae sbb push insb aaa ror out stos leave (bad) inc inc xchg push add mov dec rol adc mov jle fdiv and repnz and bound das loopne fbstp fdivrl (bad) fs pop aaa dec mov push das (bad) lds mov mov dec jbe clc popf jb mov (bad) jbe repz mov push fisttpll mov pop push hlt imul cmpsl push xor mov (bad) imul jbe in dec mov and movsl jae mov lcall lods sbb (bad) or mov or adcl mulb loopne int3 rorl xor jge xchg into pop test fs push enter cld std pop and add adc cmp jo nop je fsubrs push lahf aas cmp mov daa ret ss rcrl scas push aad adc leave nop testl or in fs into lcall jmp mov xor sub or mov imul push sub pop xor and jne cmp adcl fistl cli jecxz cs mov addl xor rorl ja cmp out pushf repz cmpsl out pop xchg es shll add or pop xchg cmpsl mov pop rorb mov inc mov or xchg mov (bad) leave jns popa jbe loop insb pop and and push or sar jecxz xchg sub xchg xchg idivl mov dec out mov sub add js addb pop mov push lods xor mov fild adc dec adc mov out xor loop dec das hlt adc mov sub mov mov and pop or lcall or sub clc aas and or push rolb gs add sahf jmp push mov adc push and dec jmp fldt pushf psubw adc (bad) mov adc pop mov (bad) mov (bad) bound pop add pop mov out push xor add icebp test nop pop out loopne cmp rcrl cmp int3 psrlq mov (bad) cmp inc fiadd in dec sbb decl out js lcall cmc gs test scas movsb jbe adc xchg aam cmc inc movsl mul gs push cwtl push jo adc je cmc fsubs jb mov or je fwait ret xchg push or pop jbe add pop cmp sub adc iret push sbb fisub les sub in emms mov sub dec mov out loop mov idivb add sbb adc cmp jl xor xor out andb stc enter iret sbb mov rorl stos pushf decb dec cmp xchg mov lods cmpsl dec mov stos ljmp (bad) mov das pop xor outsb and mov vdivsd sub flds inc scas hlt xchg sti out (bad) mov push nop jl lret sbb fwait xchg cmc jmp mov sbb or fldenv fbld pop xchg mov jp daa out pop repnz cli pop daa and dec dec insb dec and es inc fs adc std cmpsl leave add add fistpll xchg push jno mov lret fidivl sub lock xchg cltd jo stos cwtl add mov imul pop mov lock or jle jg push pop jg push lret cli stc sbb in cwtl inc leave and call adc mov add shll cli ret rcrl push notb jecxz xchg out sbbl popf xor rcll movsl inc lahf jno dec xor inc xchg rcrb xchg adc mov push in xchg or and dec js in pop pop in movsb std loop aas (bad) popa pushf mov cltd push test arpl in dec push adc inc jns push lods xor jae mov mov aad mov jno xorl mov fsub and call sub imul push lret out and push popa sub loopne,pn xor loope popa loope das cwtl xor push push cwtl stc pop insl xchg mov (bad) jecxz pop aaa and push mov fistpll sbb out nop jg and mov repnz int3 add inc add sub inc inc fadds dec inc inc xor fdiv cmp mov outsb cmpsl aad xor notb or adc dec or mov into mov mov es xchg (bad) sti (bad) dec mov inc xor push mov stos fsts mov ret pop out mov xor inc out push push dec lock mov mov (bad) mov sbb add lods inc or mov popf xor or mov cli pop cltd scas push adc popa fldt (bad) lret (bad) pusha lret xchg push nop loopne out (bad) mov or movsb cmp inc int loope insl or stos cmp pop push xchg out mov (bad) popa and ret push mov inc sahf stos arpl inc mov mov in adc cmp add push leave pop or mov push stos sbb pushf mov lcall dec out in call aad adc cwtl push sbb cmp int and jle sbb xchg inc mov add imul insl fcmovu xor and adc fstl cmpsb imul bound dec push sub aaa loopne adc sbb xor jne dec xchg cmp mov lds in sub js lea ficom mov popf gs (bad) out pop jns mov jns inc add inc push xchg sub pusha or adc sub add icebp xchg xchg das jmp out lods adc mov pop xchg rorl in xor inc lea xor popf jge sahf aaa pop iret inc cltd push mov add enter cli nop mov push stos in dec or add je xor sarb or das rcll sahf sahf xchg pop mov mov arpl cwtl cltd jge ret mov sub or test xchg jnp aaa test fcoms loop inc sbb sbb xchg fisttpl xor pop lret xor pop insb mov cmpsb push mov xor pushf jb lds daa mov adc inc push pop add sbb mov pop inc add stc insb cmp fldcw cmc in mov lds in pop fiaddl cmp mov (bad) and xor sub dec mov and cmpsl out mov mov insb push cmp into out (bad) cmp lret sbb stos and cwtl mov lods (bad) in cmc add imul (bad) testl loop insl fisttp cwtl jb in push mov and outsl jbe repnz adc fimul fs jae aam aaa arpl xlat and leave lock jo xor inc es int3 jle jnp mov aad (bad) push cmpsb mov mov push xchg cld add dec inc (bad) rcll mov dec mov mov add movsb mov sti lret pushl fadds mov xor out sub sbb vminss push add xor and lret outsb in and sbb daa or push pop loope jo bound ret mov push mov inc or popa stc or popf lds in (bad) cmc insb mov adc scas dec je pop sub lcall jns sbb ret mov and cmpsb and xchg mov call xchg mov test mov lock aaa lods mov fdivl xchg (bad) jae lcall in inc es and mov fildl mov inc push jg sahf and xor pop add add scas jge pop xchg inc push jmp add add cltd sub pop in lret or sub and sbb push adc sub dec jne pop hlt sbb js sbb pop cwtl (bad) pop call outsb mov (bad) hlt inc sahf cld into dec xor dec lea lds in lret push aaa fdivs pop pop or aas stc sbb psubq lahf jno push jge bound inc and notb pop ds dec sahf push fwait mov xorb pop dec push je mov add ss mov or stos cmp mov aaa pop sti mov adc int3 cmp roll adc push push add (bad) hlt repnz je pop gs adc pop mov sbb gs int3 aad pusha push into push aas int mov je add pop gs push bound icebp rcll sbb pop out jnp jl mov clc (bad) dec push (bad) xchg cmp test fnstcw jge and inc addr16 mov gs mov push mov dec or jae pop fnop push cltd or and lahf xchg xor clc cltd mov and add mov mov std adc stc (bad) call data16 imul iret ss or (bad) pusha push dec sahf and or insl jae or cmp imul test rol xchg test add pop push mov jnp lock daa ret and xor fs data16 add jmp mov and sahf push cmc subb mov xor testb dec lods mov cltd test (bad) dec push push imul dec inc mov lock pop movsl fwait dec mov lret nop xchg rcl pop xchg out push sub push pop arpl sub fs mov push sbb stc or imul iret imul push data16 mov jno popa pop insl xchg and push inc mov andb push mov cmp dec cmp pop jns and xor repnz addr16 stos xchg pusha aaa outsb mov add push ret pop and (bad) adc aas cmp xor test and mov xchg sub jmp fimull lods call les daa adc mov int3 adc sahf mov bound lea push lcall jmp pusha aaa int sbb mov (bad) mov repz dec (bad) jno into mov mov or inc pop test in ret mov (bad) call pop stc pop enter into ret test scas jmp xor pop int inc popa lds dec mov adc test add (bad) (bad) dec inc sub ss fsubr sbb xlat mov into ror lods xor je stc (bad) les pop imul inc or (bad) mov bound imulb add cmc mov jno or xorl add ret jb add adc decb mov repnz adc emms nop jno into dec lret imul mov les push xor push dec mov and push jno or xor sbb int lret sbb sbb (bad) repnz and arpl jecxz sahf cmp (bad) into test cmpsl lret push outsb enter loope inc in into in in cltd inc in stos (bad) insl xchg xchg loopne dec xor (bad) or int cmpsb add mov push fstl leave in rcl lds into inc in stos mov lahf jl lods test mov sahf outsl and mov ja cmpl loop aad in jae and imul dec das das or fs lods pop fldenv adc pop (bad) xor xor inc adc and jmp fwait sbb stos jmp cmp mov cmpsl stos sbb add pop f2xm1 icebp sbb cmpsl out pop mov stos inc imul stos mov or or test fisttp adc jg add rcr movsb (bad) xor outsb mov (bad) (bad) (bad) cmp sub es test ret lock xchg clc mov pop mov shll fxch insb fsubs rcll mov dec lods (bad) daa cwtl enter incb mov xor mov cwtl fsubr mov xor or lcall cltd pop pop sar outsl lods sbb iret stos jmp ret (bad) ficompl mov inc ror and neg and dec xchg sub mov add fadd subl cwtl add mov adc mov cli mov cmp in in pop pushf cmp gs cmc inc dec nop adc pop cmp and scas scas mov lods inc adc xchg jp (bad) sub into popa out call push jl push push daa iret fs and push scas push xor xchg data16 xor scas xchg clc ljmp rcl movsl sub test mov add in movsl cmc (bad) jno xor es aas xchg pop ret popa stos cmc mov add adc lods lods pop loope xor subb adc push xchg gs ss or pushf stos and dec inc adc shlb hlt call cmp inc test or cmp sbb sbb push inc cwtl inc int insb pop or repnz sub jp arpl xor inc add pop and pusha jbe xchg adc sti sbb sub mov popa xchg sbb ficompl mov sbb jg rclb rcrb or push mov add adc cmp aad test inc movsb je jae (bad) push js inc shl dec std in and dec pop daa call fs jno cmc repnz insb icebp pop and out xor push adc pop cmp mov (bad) int cwtl push and inc mov xor lods pop movsb lods fsubl movb repz jno out loope ds cmp sbb jbe es mov xchg xchg inc (bad) movsl jno dec (bad) into mov and mov inc in aaa int3 dec out lcall adc inc icebp xchg int sbb xchg mov cld movsl and xchg mov dec ss xchg jne mov xor mov inc mov outsl and ds inc imul inc es dec dec nop inc mov sub cmp insb adc imul fdivrl sahf ljmp jecxz push aad loopne and jmp cmc push out lret pop xchg js movsl mov xchg and int3 leave xchg mov (bad) fwait xor rolb jle sub push push jno repnz scas pop or add cmp call int sub int3 ror arpl hlt cmpsl pusha bound sbb dec fisttpll sbb clc call cld mov ja insl test stos pop cmpsl ds aad scas jne push ret xor roll enter insl mov mov dec jge jle (bad) les cwtl xchg mov insl adc insb and in inc inc fmull lods cwtl xchg push rcrb lret sub push sub adc push in xor push mov sub push rolb movsb mov cmp xchg xchg and test push pcmpeqw call add (bad) jecxz,pn fnstsw scas lret call mov inc (bad) cmpsb xchg mov add icebp outsb cltd and pop jno (bad) out loope ret push and sbb int3 mov sub xchg outsl lret stc and es mov push xchg inc jp sbb cmp sbb adc sub cmpsb sub sbb pusha jle push mov xor movsl inc dec sub in (bad) dec cmp jecxz cmp add aas cs int3 and sub lea push pop mov cmpsl sbb pop pop out xor ror and fprem adc lret cmpxchg mov clc lds add fcmovbe bound push int3 sub icebp push out mov fdivp xchg insl add xor push push and fwait jle inc dec sub movsl push punpckhbw adc ficomp mov lahf repz js adc push lods xor sbb pop stos jno fadd cs push aaa adc mov clc mov loop test in dec or in add popa jl or leave add and adc faddl ja loopne sbb aad es and dec arpl je add xchg inc sahf jne repnz mov sbb cltd out dec pop mov cli sbb lds movsl mov mov out jmp pop pusha sub fwait clc inc jp movsb cltd pusha push (bad) xchg in sbb or and pop adc add cmpsb pshufw stos inc fstp dec push pop adc mov divb (bad) int3 je into mov pop cmp mov cwtl and iret jb xbegin idivl inc dec push call das (bad) and push pop inc sub mov xchg ss mov call in cld inc and cmp sahf jbe push mov cmp mov movsl addr16 jo cmpsb pushf push call mov mov shlb sub cmc jae jae and lret ret mov inc inc or or movsl inc pop jmp sbb aas push inc fcomi mov aam (bad) mov ret mov orl add into loopne stc xchg lret flds insb lea nop aad int3 jne pop loope push mov mov aad xor cmpsl mov loope and fsubs psubusb aas cmp xor mov and mov aas lahf xchg (bad) push fcoms fstpl dec loop mov (bad) out sub xor fisubl ficom insb push sahf test dec sub cwtl daa sub fcoml loopne (bad) jb mov mov jnp popa pop movsb and and adc in mov pop jle call xorl fisttpll mov addr16 xchg jle gs xor mov imul js sub push mov dec mov fiadd pop mov popa lods xchg (bad) push sub je in jle sbb insb jg pop inc mov popl mov mov test xor sbbb loopne test lds mov dec std cmp jle (bad) mov or xchg inc add mov je xchg inc cmp cmpl int3 cld lea add push push fiaddl adc adc jg (bad) fisub int3 mov xchg inc add incb push or sub jbe jmp inc movsl cmp sti push test add sbb loop sub mov mov pop int3 lret lcall test cmpl sti push (bad) enter and add push lock mov out iret ds mov je dec mov inc cs test sub cmp add push sbb sub mov fildl aaa push adc pushf mov adc sub addl lcall out jle sub shrl aas pop and mov in out and in inc or insl push push into xchg pushf mov test xor insl int push add aam pop push js xor sbb pop test push scas movsl xor mov dec push testl sub mov sub xchg add inc and cwtl insl push lret nop (bad) push mov dec movb jne pop stos lea push into sub push inc insb fs (bad) mov sub gs lcall rclb lea inc ret test mov add fisub mov out rcl pop or lahf mov inc gs subl inc je jecxz ret rcrb nop and add mov sub xlat notb push dec cmp dec dec (bad) nop aas dec push jbe xchg push mov ret mov scas test lcall leave lret mov and mov pop mov std cltd outsb js dec call ljmp mov mov das adc sub xchg cmpsb std pop inc shll add jl xor inc jnp xchg mov push or dec fidivr pop es popa mov mov jns or pusha insb push jle inc add jbe arpl ljmp jg (bad) add in mov add xchg or (bad) stc inc shr inc rcll cmp rcrl push or mov cmp fisttp mov faddl xor pop leave mov into stos xor nop cmc xor or mov cmp rcrb xor mov notl mov lods popf nop out xor sbb jnp mov xor mov cld das mov xor xor pop add icebp push or mov icebp mov cmp into jg or mov mov jne out sti xor in inc dec lcall outsb dec mov fsubp adc notb les stos adc gs out jae insl or inc ja pop xchg xchg pop push push lods mov push and push rol lods cli sarl xlat mov sbb push or js jmp aad shufps sub jmp xchg or aaa mov js push ret (bad) pop int3 or ret jnp dec push movb fsubs push mov cmpsb fs or hlt fs into xor mov cmp push rclb (bad) cli cmp mov ret fild and sub test jo mov test pop xor sti call movb jo xor rcll popf xor dec test jmp mov mov ss les dec xor push pop fwait ret pop pusha inc cmp adc stc push add rclb fwait xchg adc sub dec adc xchg scas mov add or jp cwtl cmp xor aaa pop mov into push dec movsb lods jl mov mov jmp subb test xchg bound mov mov movl outsl mov andb pop xor mov fs and cld popa and out arpl lcall dec add jbe inc hlt cmp xor xor jnp sub in jbe aam dec repz mov daa mov repnz sub mov xchg in adc xor mov add lret adc ds sahf lea mov imul call mov int3 or mov push je outsb movsl ds dec out call or rclb and loop cmp push mov sbb push cli mov mov cmpsb mov cmp shrl cwtl out fstpl or js xor push les inc or jp or adcl mov sarb mov push into pop xorb xor fs loop jle out popa lahf dec mov push push dec xchg pop gs es sbb aad sbb sbb aaa push gs (bad) incl dec mov jo or cmp ret inc movsl push inc cmp sarl inc add testl and xor sub mov loopne arpl push pop mov xor in fimul push ret sbb jb mov inc adc ret loope sbb addr16 or bound push jl sti (bad) xor loopne push push movsb push inc (bad) sbb ss out fcomps pop jo (bad) sub xchg repz dec loopne mov or inc dec movsl jno and pop adc ret pop in fsubp mov rcr inc xor pop adc sub push pop cs dec mov fisttpl or outsl or push add or xor jl inc push addb fldl ss (bad) in faddl stos push bound popf jne lods dec and in sbb push cltd test mov cmp adc jnp cs xchg push pop mov cmp pushf push mov (bad) cmp cld fmull add jne and dec jo mov xor fist lods nop xchg xor and nop xchg arpl pop fsubs fnstenv int3 xchg push adc dec mov lcall pushf gs ds xor enter xorl add stc xor xor sub cmp push mov imul xor cmp cs rorb les incl mov push jne cs loop and fs movsb out xchg add les mov cs or fwait jecxz xchg test outsb lds adc sub pop cmp inc push mov outsl pop jl cwtl xor push hlt inc (bad) jl fistpll js jne jmp popf popa cmp inc or out or lcall mov xor sub fsub push or dec insb test mov rcll sub and push push movsl call fdivrl jecxz outsl adc dec mov dec insb pusha sbb aad ljmp jbe test pop imull (bad) push (bad) dec push pop outsl adc sbb gs cmp and (bad) daa adc (bad) mov lods mov adc pop pop sbb mov nop mov pusha in inc xor dec jbe cmpsl push sbb sbbb je adc pop cmpsb out cmp dec daa and sti sub ja scas lret nop xchg lea repnz dec pop sub xor push sbbl daa jns or and mov add mov testb fs sub sub jmp shld cltd fmull lahf pop sbb push cmp movsb sbb arpl (bad) jge mov repnz or lret cmp dec add cwtl out push in xor mov or into mov (bad) jne mov jecxz mov mov mov mov sub je mov sbb dec das mov and mov std xor jo aaa cwtl dec mov out lcall aas jo push or mov fstl aaa xchg mov dec add mov or cmp lret lds xchg call push sub insb cmc call es das sub push sub loopne roll and and mov fsub in inc int3 mov popf lds jp xorl sti jnp fbstp rorb mov negb mov arpl lret mov push jbe ljmp mov mov jle imul inc xor insb fisubrl xchg loope mov dec jnp xor popf dec arpl xor or add leave dec dec dec pop push push push xchg dec jbe lcall xchg sti xchg enter scas pusha jle push pop adc andl adc sub (bad) push call pop std cmp in or lds mov mov inc cmp fucomp cli and xor push xchg js xchg mov popf xor aam sub outsb je pop pop jmp rorb or ja sub sahf xchg add nop cltd sbb inc inc pushf mov or cmpsl pop (bad) mull test sar in sti mov inc xchg (bad) mov pop cmp cmp rcrl stos pop out xchg jne cltd ljmp mov in mov movsb cmp roll push jle xor adcl add test mov std or xlat lods pop jne js into pf2iw mov cmc stos inc (bad) das or sbb jg mov into aad in xor jg mov pop out daa xor jne in pop and cmp pop mov mov pop test pop pop lds iret popf out lahf cmp stos xchg fmul jge push jae les mov add mov xchg jns lahf mov loopne inc xchg sub je ds fist dec (bad) dec cwtl adc jno loopne inc dec fisubl call int3 popf mov insl mov aaa jecxz insl jns xchg xchg add cltd loopne mov out jb inc lods int adc leave int3 and out dec dec lcall bound imul fcoml divl mov xor idiv sahf mov or into adc clc push pushf ret dec mov pop mov push lods xor xchg mov aas dec push pop dec shll jns mov sub iret xor sbb outsl jbe jno cmp jge out (bad) repnz jno pushf cltd jns push aaa bound inc cmc mov add aam cmp stos add xor xchg sub das push adc lret cli in rolb adc (bad) shll popa dec lods test jge scas push int cmc stc (bad) mov xor fmuls cltd loopne gs mul jg jp stos lods sbb push mov mov lahf push xchg outsb cmp cs sbb jmp cmpsb inc pop xor fcomip pop jbe nop addr16 mov adc test jns dec insb cmp imul inc jmp out adc pop sub sbb pop inc pop jnp cmp or push outsl add gs in add dec lods sbb and push push dec push push (bad) xchg mov inc dec jne (bad) sub imul mov or cmpsb jno add sub add pop pushf or imul and xchg (bad) sbb cmp jg pop daa push mov rolb mov cmp cmp lahf xchg jno aaa inc jle mov mov loope sub mov dec repnz mov jnp sbb cmp clc out nop add (bad) clc mov (bad) jbe (bad) (bad) cmc pop mov (bad) and adc adc lret imul scas xchg btl rcrb (bad) mov push inc int3 sbb mov cmp arpl lock mov push dec pop or pop or xchg std ljmp sub cmp pop or dec mov mov inc inc bound push dec add cmc inc cs xor (bad) lret xor mov lret popf (bad) in dec xor aad inc in mov jne jmp mov mov pop (bad) or add fsubs cmc inc xchg rsqrtps imul jnp jne aaa add int lock xchg and fcomps xor dec mov xchg daa sub aad mov movsb in adc add push or sbb cmpsl mov insb insl jb ret ret sbb cmp icebp fnsave jge out inc fidivrl adc pushf sarb daa adc inc rol adc xor mov ss hlt (bad) push ret pop fwait ljmp popw int jne test pop (bad) xor fisubl in sbb adc loope jae pop ja popf out adc out inc adc sbbl pushf pop inc ja les pusha insb test jl and mov pop iret fwait xchg sahf xor push lahf jl mov add push xorl insl jne inc stos dec dec sbb fdivs inc movsb loop lds ljmp xor mov pop xchg push test pop clc mov push and daa test (bad) jb sub (bad) or rclb pop rcr movsl ret mov stos pop movsl cmc lret mov adc or xor aad mov test mov iret pop (bad) mov popa cwtl dec (bad) xchg mov sub insb and add mov in xchg pop adc aam fucomip push clc jmp push fstl outsl push push push (bad) xor sbb xor lret pop and stos mov adc test outsl mov lods and pushf sub pop repnz adc xchg jecxz push mov jb inc ss add inc push (bad) mov jae (bad) adc idivl (bad) mov pop inc hlt sub out mov xor vhsubps push sub push lds mov out push xchg addr16 arpl dec xor stos xchg out iret dec jo gs or jg or jbe cmpsb aam inc cmp mov mov cs lahf fscale lret xor adc rclb inc je inc sub push jb sbb clc mov js fstpt xchg fidivrl es lea add mov nop jbe in call cwtl jns jne cmpsb push sbb in mov movsl movsb push dec push mov scas or nop sahf inc and xor push lret ja jb adc add cmpsl mov sti jecxz cld mov xchg mov ja push pop pop xorb sub mov mov std je fdivrl jle push sub mov adc cmp mov push inc fstpl inc cmp mov sub mov and sub mov mov sahf lea dec test add lods pop inc fs dec pop ja or ja push push mov (bad) lds xchg cltd cmp jg arpl lea outsb data16 mov fimull sub xor cmc add and pmaxub xchg mov push sbb push into je cmp into fadd and outsb inc sbb sahf outsl call repz pop xor dec inc pop sub cmp insl outsl negl pop inc mov dec std je dec dec dec sub (bad) pop stos dec inc mov rorb xchg jl jnp jno test pop cli stos ficoml cwtl xlat rclb cltd stos mov fcmovnb pop loope fldz fnstenv dec aas fstpl mov cmp sbb aad stos and popa movsl sub imul loop rcll sbb pop and addr16 inc out xor (bad) cld add mov dec mov mov lea pushf mov in int cmc pop ret jne or (bad) xlat sahf mov and and notl in cmp icebp aam cs hlt fcomps inc imul push jo pop and mov je push pushf add in xor lahf in aaa ret mov es add mov push sbb les loop cli test sub mov sbb or (bad) (bad) xchg pop outsb push mov and adc and je int3 push sbb je xchg stc pop out pop adc out popa popa popf aam jecxz adc inc cmp sahf je fsubrl aam dec xchg gs push xchg dec inc add das iret and pop and lret add pop jle lds mov test int loopne adc lods fwait out int3 jo and call dec push pushf (bad) jns sub cmpsl sub ret aas pop add mov jge add add mov sahf popf enter inc mov pop cmp or xchg lds js xor jecxz xchg ja sbb popa xchg mov xchg movsb dec pop xlat fistp push rcr mov data16 sub int and aas inc jne push daa sub cmp outsb xor add mov and mov mov mov mov dec adc fildl add push stos fwait in hlt mov in adc cmp loope cmp or leave nop or xor std cmp mov aad fisttp fistl xor (bad) movsb sub imull lea insl imul ja sbb aad xor cltd push scas or push jecxz and arpl and les xchg (bad) and jmp and xor mov dec add jecxz sbb xchg xchg and sahf or das pop jnp jbe std aas and pop aaa or int3 mov fidivl jb (bad) rcll cmpsl loope inc jno dec pop cmp xor std ss cltd popf inc test inc add fildl jge xchg cmp xchg dec xchg pop rcl es mov outsl into dec into mov and adc adc rcrb jae inc insl push xorps jl pop sub js popa loope sub ja push sub jp clc repz dec fdivl pop call dec push and fs imul out mov repnz fcomps fs clc arpl jne adc hlt add daa xchg jecxz cmp pop push test push xchg cmp imul loop mov hlt jb dec aaa sub xchg inc inc mov insb mov pop jae xchg insb xchg cwtl jmp insl cmp add push mov push mov idivb jle push inc stos data16 cmp js jno dec lea or sub sbb pop loopne sub loop dec lcall or inc ja xor xor add lret push and mov icebp pop xchg push test ror cld adc pusha loope adc cmp mov lret and jbe mov xchg fcompl xchg test jbe xlat lds insb cmp dec xor clc popa imul cmp or inc dec negb mov lea (bad) xchg sub lods xchg dec lcall xchg aam insl inc pop jmp ds pop push cmp clc lods int3 cld lahf test inc loopne sbb push cmp inc xor jg xor imul dec mov clc cmpsl mov ror xchg call sub mov mov jo inc mov pop pop cld mov fcoml sbb inc inc xchg addr16 cmp inc push adc fcomi or iret push mov mov and lock and jmp mov into addr16 xor dec lods mull fwait cmc mov fdiv jo or push inc inc mov loopne ja lret sub (bad) lahf xor enter pusha jmp inc bound push lods push iret dec loopne and add adc push pop das dec loop jle cwtl mov pop dec add mov pop mov or loopne in aas lds dec jg push dec aam mov rol jmp xchg dec call mov push mov stc cli lret test call mov int out out scas mov xchg pop jecxz popf rorl iret push jge or cwtl in in push xor out inc xor ret add hlt push lcall hlt sub push add pushf sub jnp or fisubr pop pop mov repz cwtl rcr aas push xlat (bad) sub lods ja (bad) mov push (bad) mov aaa jmp adc movq jae dec in cmp (bad) rcll add mov jae sbb mov dec or inc inc icebp push pop dec test jbe dec mov fadd pop insb xor ss sbb mov mov xor repz push lret clc mov and jbe cwtl loopne mov (bad) pop or xchg adc call push or lret push xchg or int roll repz and and xchg lret repnz test in mov popa mov js push jo nop sbb cltd (bad) rorb fwait push ss adc je xor ret jnp sub or sub xchg (bad) gs mov mov xor cli cmpsb js and int3 fnop add mov jb push ss xchg pop sub das jge push aas push pop int3 ficoml push test pusha sbb std pop out pusha dec mov lods jl movsb inc inc push inc mov push dec xor pop inc adc cmpsl int3 pop mov pop es (bad) sub add fs mov das or jp test mov movsb and inc call call pop mov add pop loopne loopne ja dec in xchg jle or (bad) mov jne fstl jg loopne mov cmp ss scas or inc push lods mov or mov cmpl inc inc xchg insb adc cli aaa (bad) mov push cli push push jmp sarb pop mov lcall nop pop repz xchg flds cwtl cmc fs icebp adc mov jo add in lea popa pop sbb pop mov jg leave mov dec dec dec je int3 jg inc dec cmovg nop mov mov add (bad) cld stc cld push out daa sub mov ret cmpsl xchg lahf gs loope pop xor dec or out fs in mov gs mov rcr lea adc cld pop or (bad) xchg into sahf inc in fiadd loope daa inc call or imul (bad) mov xor pop mov ss sbb in stc cs insb pop pusha enter ljmp mov lock lods push es icebp push gs repnz xorl mov mov popf aaa and stc ljmp add into lds xor jmp aad xchg pop dec lcall fs jle cmp mov push enter pop dec and inc cmp jbe in mov inc mov bound sbb inc out jge mov pushl aas pop cmp jg sbb scas ljmp or push mov loope xchg mov loopne dec idiv dec xor xchg adc cmp inc in in mov add fs dec inc imul stos cmp jne outsl dec adc xchg (bad) xchg outsl repz jmp (bad) dec cmp lock popa pop or or jmp nop add loop lods cmp adc xor repz aas mov jno mov shr (bad) int mov sti mov cwtl inc fimul xchg dec loope dec out or dec lock adc pushf test push outsb dec dec sbb cmp or add gs xchg int mov mov push pusha pushf push fwait (bad) cli jnp int3 mov jo das dec aas popa in push xchg sbb fdivrl sub lcall inc ret outsl jae fidiv mov lret stc mov dec mov insb es int (bad) arpl or adc int dec mov mov xchg mov add mov adc bound mov jno lret push mov push push in mov inc or xchg mov cmpsb hlt mov clc imul mov std sbb rcl sub lds fmul inc jp or call push aas imul mov in add push addr16 jle test mov scas ret inc daa dec int lret push cltd fldz pop lock in and cli (bad) lock push insb jge sbb mov ficomp xchg fildl repnz or divl push push xchg ret inc loopne insl push mov xor mov movsb lahf out dec sub addl data16 fldenv lods cmp push rorl mov cmpsb out or popf cltd inc fidivr xchg sbbl mov cmpb insl dec fdivrp es (bad) jg aad gs jo jns pop fwait xchg insl or pop call arpl inc cmp dec push lea adc test (bad) pop xchg mov sub sbb and aad cmovne or les fistl xor lret push jbe sti pop outsl cmp push xor popf out lds test jnp pushf cmpl daa (bad) (bad) fnsave hlt cs ret lret adc stos (bad) dec adc lcall and mov lret xchg xor sub pop sbb insb sub add sub out sub daa xchg rclb inc sbb pop fcom fdivrl imul cli inc xchg add scas mov jecxz push ljmp fcmovb div enter push jmp iret cmp cs movsb outsb test in or cmp xlat icebp pop cli dec xchg ficom in dec and jo cmpsl cmp repz jbe push push cwtl push call loopne leave mov call push push fsubs das loop aam jne mov mov loopne push jecxz adc mov clc aas jp ja jo push (bad) mov xchg jo stos xchg (bad) xor (bad) xchg daa dec movsb (bad) adc xor mov in dec insb in notl (bad) push sub jge jne ja jo lds and ss roll mov insl jb jne inc dec pop inc incl aaa dec add outsb xchg lods pop out les mov sbb jmp cmpl and push sub inc sti and pop adc pop add gs daa inc and (bad) pop add adc xor dec and inc popf and ss jbe mov call dec jecxz popa sbb and js fcmovnb jl in mov jmp ret lret sub bound fimull lret imull out imul dec and add mov push aam cld sarl mov mov push pop lahf add mov jmp rcrb push xchg dec add mov sti sub fstpl pop out pusha push mov paddq sbb xchg fisttpl jae das mov data16 gs push xor je rorb push out shrb ret sbb fsubrs ljmp mov loopne jmp xchg xor sub ds arpl xor jecxz dec imul in stos imul push inc mov xchg das cmovne sub xor pusha imul mov sbb mov test imul mov or dec xor jecxz pop (bad) pop ds sbb dec or mov jecxz arpl mov repnz inc (bad) inc (bad) sub scas cmpsb repz lahf mov out mov std jle inc xor js out push cmpsl mov pop jbe cmp sar mov rclb push notl xchg test dec (bad) jb xor (bad) out ja jecxz add jmp out jb ja xchg in cmp xlat test les add adc outsl mov xchg mov dec daa cmpsl sub push jno or fisub loopne,pn cmp mov mov jp inc xor pushf pop shr add cltd enter fisub hlt stos jno shrl or loope mov mov or sbb popa lds insl in int3 or cmpsb xlat sub mov ljmp das popf push push outsl outsb call int and pop xchg (bad) sti cs jb (bad) sbb pop insb xchg pop sub arpl arpl shlb dec aad data16 jo rcll cmp mov dec je ret jmp pop cmpsl or xor xchg movsl xor inc sbb cld jge xor mov push dec mov push hlt in je mov push push js mov ljmp xor lds xchg and sub fidivl sub fiaddl inc sarb adc mov and jne sbb mov ljmp mov aaa nop scas dec lret push sub push mov rorb mov das lahf mov sbb fs mov movsl mov jge xlat adc aam leave daa (bad) repz and into mov mov out or popf (bad) outsb loopne mov xchg jmp inc movsb mov popa aam add and and cmp ret mov xor lods orb and insl inc sbb dec enter fimul sub inc adc add inc nop imul les xor rcll dec xor jb mov and pop xor aam repnz push pop mov or dec adc in fs popa cmp sbb dec pop push aaa mov pop jb (bad) mov xchg inc jo sbb aam mov inc jecxz fs pop mov sub mov pop xchg cmpsl pop push pop hlt xchg mov ficompl sbb dec pop adc stos and notl out and fcoms or test mov faddl in xor into imul pop jb lahf push ds xchg push lcall mov sbbl loop es ljmp movsl push out in mov mov stos inc idivl hlt out and mov stos aaa adc (bad) mov fsubl xor and add add push arpl xorl lret and cmp add (bad) lods mov pop fisttp (bad) xchg mov fcmovbe xchg xchg out jecxz pop mov xchg shll fs out in ja add (bad) mov lods adc fdivrl sbb rol ljmp jb jge sub fnsave jbe pop push xchg cld sbb push rclb cltd out mov out mov jmp jge out sbb inc ljmp addr16 jnp jns sub jl int3 sbbl cmp adc push fdivrl int lods or (bad) into pushf inc das add enter jmp inc dec push jecxz testl repnz xchg icebp lea add lret das sar mov xchg es int addl jl faddl push dec push js ja lds sub out das loop repnz in and fwait iret push adc mov daa jge add fwait jge jecxz stc push xor lcall inc inc mov dec aad inc dec mov xor jno fisttpll pop aad mov pusha rolb in cmp sarb (bad) dec push cmp fnsave stos inc mov mov out mov ja mov movsb xor and insl add icebp pop pop and ja and js or scas jno cmp (bad) push test stos xchg pop fwait pop std aam es int cmp loop sti imul jp mov sub ja test and inc mov clc in in into dec or dec adc dec negb jno adc sub (bad) jge rol adc sub scas int inc lods movsb mov mov into push pop or fwait arpl cli sub pushw xor ret push cmp adc mov pop jl inc inc in sub cs in pop ss out popw movsb out das outsb add sbb push xchg dec pop mov psubw sbb push inc push outsb mov jnp inc jmp aam rcrl rorl sbb mov push leave adc sub cli inc insl or xor pop ss sar pop aad daa rorb outsb (bad) in icebp lods cmp sub gs das xorl jle mov xchg mov mov shl cmp mov cmpsl push dec (bad) cmpsl push push ja push dec outsl cmpsb repz loope popf adc movsb adc jnp jns add add dec push daa jge mov ret mov and mov shll sbb loop add xor aas int adc bound arpl jecxz mov push aaa push inc jge insl inc daa lcall movb inc inc andl push cwtl cmp pop sub inc lret pop je aaa inc inc xchg mov dec rclb inc push std test pop fsubp sbb dec stos mov inc ja daa push or hlt jmp mov call (bad) dec jle movsb daa leave pop rcl js test mov xchg outsl call leave dec outsl mov xor pop daa push sarl dec xchg shrl stos imul push adc ret inc (bad) out mov xlat jecxz mov pop sbb xchg decl insb imul test in sbb insl sbb loopne je fsubl sbbl push add pushf mov mov sahf ljmp xchg push movups lret jmp and int3 mov and or in mov sarl sub inc push sub out mov insl mov ljmp or xchg xor mov mov jg cmp jle ss test fwait pop rcll mov ds sarl mov or incb cmc sub inc imul aam daa dec push hlt push mov sti in iret test out push sbb imul ficom add dec movsl (bad) sti into dec fnstcw test xor fcmovnu and add add test push adc clc (bad) lods call pusha shr in or push xor mov fisttpl mov in inc in call push (bad) lea mov jmp xchg jne xlat xchg or in push das cli mov inc adc push cmp data16 out out sub jl cmp add lahf jge adc int3 mov stc xor cli push push test mov cmc mov inc mov (bad) addr16 fnsave dec jmp mov or ja and xorl pop and ljmp test sub ret push mov adc mov lods pop inc pop out sub pop mov in jp int movsl sub mov or gs out mov inc stos ja sti jp xor cmp mov loope mov clc mov push add pop in mov and xchg aas sub cld mov push dec inc std push jnp mov sbb aaa loop stos mov lods or inc dec int xchg adc loop cmpsl adc mov ss jb (bad) sbb ja in sub je jmp (bad) in xor mov fisubr and icebp pop mov in std sbb pop jno lock cld push pop ja (bad) cs (bad) in cmp lods movsb pusha and loopne mov int3 add push add pushf out or mov mov push pop or rorb out or mov mov aad std xchg int inc nop mov mov popa jbe sti test sub dec fcmovnbe add sub mov jo pop pop or lret cmpsl (bad) jg and out icebp movsb mov lcall pop jmp stos mov mov mov push jnp mov xchg sub jg (bad) mov xchg out mov xchg pop xchg adc aam jne jbe cmp mov mov mov in cmp xor cli rorl inc cs notb fildll hlt or mov call and icebp adc and jnp outsb mov push jne insl mov not test dec icebp (bad) in fimull or movsb jle scas mov pop adc dec add out xor js fs mov jno sbb add dec popf aaa cs jno push dec jns cli jp lret sub lret loope jp mov loopne in sahf inc stos push mov adc mov mov std sbb mov hlt pushf add mov lret test je sbb push mov int3 loop add fiadd pop jle mov dec pop (bad) and push fnop mov scas xchg std fldl out sub int3 adc mov pop ret addl pop daa adc push sub dec adc add pop ror push push mov test out inc jge movsl movsb pop enter mov jg loope in idivb jge push lods xor push shrl lret or nop scas sbb pop lds popa ljmp adc ds outsb fmull inc incl stos in call pop (bad) dec sbb std lods pop insl sub pushf cwtl jge pusha add call js popf add mov out sub jae inc sbb pushf sub pop or out idiv (bad) cmovns and je inc add push outsb loop insl insl adc fbstp mov pop mov aad test pop in pop repnz inc xor mov call movsb (bad) gs scas inc cmp cmp andb and rcrb mov jg sbb subl (bad) adc mov add ss sub mov loope das xchg dec test dec xor jl daa push lret ds push repnz and mov xor jnp out les sub push (bad) dec sahf jge adc cmp fisubr sarl arpl xor fucomp stos fwait inc out mov rclb adc mov mov in push xchg test or push bound mov stos (bad) cmp (bad) cli cmp jmp jbe push mov mov pop sahf lods aad ljmp or outsl dec push jecxz mov adc or repz data16 mov add cwtl adc xor push cmc jnp push pop add out mov sub lret pop push mov ret dec lea je out mov insb in xchg pusha in jle lret cmc (bad) or cmp movsl xor adc jl (bad) test jmp push inc imull lret aad stc or scas mov sub and mov sahf push inc adc xchg loopne push outsl ljmp cmpsb stos lea mov pop or add inc rcr or lds mov int ret xor aam sbb lock push fcoms daa sub inc es adc pop xlat jmp sub loopne jl or dec sbb sub pop popa dec int3 inc addl pop jmp fild ljmp add push inc pop add repnz mov and and xchg test sub out scas mov std mov aam aad pop call xchg cwtl mov xor ret lods cmpb incb xor xchg inc push xor sub icebp dec sbb cwtl fistp hlt loop test (bad) loopne mov push dec jmp sub mov xor cmp mov popa mov dec arpl fs pop xor lret out pusha pop js daa mov and or clc lret cltd (bad) jp cmpsl sub push (bad) mov fmul scas mov cwtl and (bad) jg jmp (bad) ficom rorb pop or ss pop lods mov scas cltd or nop and cmp cmp ficoml add pushf lods and cmp adcl int neg popa addb add hlt or mov nop sahf pusha xchg inc in int dec fucomip leave sub js xchg lcall ret sbb xchg mov xchg shll inc andl (bad) xchg shlb cwtl sub pushf sbb fildl insl and (bad) imulb ror pop mov adc jmp fcoms popf or mov inc push adc adc aas adc dec sti sub movsl ljmp jp arpl sbb rep mov in aaa xor jne xchg lret jo xchg iret rorb mov aad add cmp movsl imul sbb or pop jp mov popf imul stc add xchg mov pusha ja and flds pushf add xchg jmp retw pop mov aam daa out in dec je out pop outsl xchg dec ficoml cwtl ret repz xchg jmp or stos cmp dec in nop test or daa rep push push mov mov and into fadds push aad xor pop mov mov and jge jo xchg data16 adc and inc negb sbb rcl dec dec ljmp rolb push cmpsb mov ss mov mov stc int3 xchg lods es mov daa jg or ret sbb push in jp jge inc fild xchg cmp out into cli xchg and jne scas imul fucomp movsb cmp test ds mov sarl nop cmpsb pop sub in mov imul xor xor cmp incb fmul mov pusha xor dec mov cmp pop test ljmp sbb sbbb jg mov lret xor jnp xlat movsb or or icebp outsb stos push mov insb cmp xchg movsl mov fbstp lahf mov test sub jle mov lcall push mov cld fldcw dec xor mov inc mov in jecxz jb fsubs mov add or jo adcb sbb mull aam mov add jns ret into dec mov imul test cltd dec fistpl push in xchg sbb jg jnp jne pusha or push std in xchg xlat ficomp in std sbb jecxz gs dec xchg add sar add or dec repz hlt or lods fdivrl mov or push lahf (bad) aam and pop push stos aam and lea lds xchg jg mov sbb push jae cmp imul lcall mov cmp ficompl xchg xchg out enter mov push push mov rolb int3 inc incl inc pusha inc mov imul sub adc std adc (bad) jne das test xor shrl test es adc xchg push pop out lods adc jge ss inc adc pop int3 arpl in test inc jp push dec mov dec mov mov or cltd and insl push sub inc sbb or dec mov pop inc inc pop jmp pop loopne and aaa push push pop inc xchg pop (bad) incl (bad) sub lea dec loop jp das lock sti xor je sbb mov dec xchg dec fisubrl loope jmp mov sub lcall movl add and (bad) jne push sbbb lods or jne xchg (bad) shl xor pop (bad) push shr add scas lds cltd jmp and (bad) push mov (bad) cmp arpl xchg loope adc push add test and (bad) (bad) and (bad) or mov mov cltd add xchg ja stc (bad) mov cmpsl in je movsb mov in cmp pop rsqrtps out dec outsb (bad) sbb in inc iret ret adc leave add mov jno addr16 or or mov cwtl mov jl adcl popf xchg out sahf dec (bad) sahf shlb xchg inc test movsl lods mov xor cli shll xlat stos add cli leave add mov loopne push sbb movsb mov cmp fiadd cli mov or vsubpd mov mov clc push or stos sub popf cmp push mov mov push xor sbb xchg aam cmp push sub pop mov aaa imul sti dec add lock dec ret int3 jmp (bad) in and sahf test (bad) out scas lret icebp mov loope jno adc mov jnp adc scas jge sti call fildll jl mov in hlt andl inc roll cmc insl addl (bad) jno cmc lods outsl notl adc scas aam ret addr16 mov addr16 xchg xchg and mov clc push mov mov dec ljmp (bad) push int3 push out mov rol cwtl fsub inc aad xor mov (bad) inc test fsubrs mov in cltd pop cmp cli mov sub aad stos inc mov into sarl scas xor xor add and sub in movsb sub and push xlat iret insl mov mov nop sbb xchg repz mov orl mov sbb in sar lods or notb aad pop dec sbb cmp mov mov jo (bad) mov mov cmp leave aad cmp in lret out hlt mov sbb nop sbb cwtl ss cli subb push nop lds mov cli sub mov lea push sbb inc xor loopne insl push andl dec pop popf mov movsl stc cmp test push jl sbb xor pop sahf ss pushf pushf out lret mov and (bad) jne es push sub inc inc inc fstpl pushf outsb sub in lcall push pop out sbb inc adc ret pop ret movd movl mov adc gs iret xchg cmp xrelease mov inc sub int xchg nop gs daa jge pop mov xchg jge mov push call cmc movsb jecxz xor dec mov lea xchg aas push idivb mov or sbb adc leave inc fwait out and scas inc and out xchg xor repz loop (bad) in (bad) ljmp insl daa push sub arpl inc insb adc sbb jbe roll fstpt push mov cld shrl imul mov xor sub xor inc (bad) out add pop sti clc jne mov pushf xor jle (bad) lcall scas mov sbb cli notl enter imul scas lods push xor push sub cmp mulb mov nop (bad) ds loope (bad) or (bad) cltd cmp loope adcb repnz and xchg out loop and sti lods imul enter mov dec je xchg cmp popf mov leave mov fstpt cli sbb mov in in adc pop nop dec inc aaa daa jmp adc xchg xchg xchg adc icebp lods sti loope roll ljmp loopne scas ret dec sub loopne inc jns dec xor add in add xchg int lahf fstps movsb lock pusha das add (bad) pop pop es icebp mov xchg push push pop arpl or and fcomps int push jnp dec push jmp js (bad) daa lahf add pop lds mov pop idivl shll xchg out loope inc (bad) add test dec pop ffreep and mov lods mov jg xchg fsubr add or xor inc fwait aaa and jnp mov jmp scas popf dec in (bad) movsl cli inc inc cld (bad) jmp pushl lahf jnp jnp xchg lahf inc in fidivr pop mov inc stos (bad) loope add cmpsb shrb pop add outsb pop and lea jle pushf out sub das test js cmp mov push push out mov int mov (bad) mov aam jno jmp int3 sub mov loope dec arpl pop pusha insb insb cwtl jnp fs or testb ret and inc sbb adcl pop mov shrb push inc mov inc int xchg push inc dec adc mov mov cmpsb in and int3 xchg pop sub pop inc add ljmp bound push pop cmpsb test fwait cwtl ja (bad) (bad) (bad) xchg jbe mov xchg leave mov ret bnd mull fidivr arpl jmp xchg lods out sub into das cli jnp cltd xchg cs xchg dec inc loope std xor in sbb cli add mov fldenv out icebp stc jns adc js lock test dec icebp movsb push jmp xchg fstpl in push xchg popa loop xchg out and inc or int jnp sbb adc andl add in push jecxz js lret push ret lahf dec (bad) mov inc xchg pop ss pop mov test adc dec mov cli lods pop and std ficoml loopne xchg push aaa (bad) inc leave mov scas arpl inc fisttp mov (bad) add divl and js (bad) or dec mov push jns jae add mov mov sbb sbb push mov movsb out out sbb arpl mov (bad) lock idivl ja fs pushf add es pusha inc jge mov gs push sarb sub loop movsb mov test xor (bad) aad (bad) lret and lods pop and and imul mov addr16 fmul mov adc daa mov and (bad) fcomi mov xchg mov nop dec cli loope mov js aas jge sub xor test orb sub add lea test (bad) mov sbb mov int cmp sbb out sub push mov ret std mov jmp lcall pop bnd test repnz sbb gs inc andl lcall insb or cmc mov pop jno enter sbb (bad) and adc inc push sbb jns inc sbb mov push nop sub std shr je ret mov jo adc addr16 push or cmpsl movsl js xor inc inc add sbb mov (bad) scas leave or pop ja push sub mov nop mov es orl pop stos jmp cmp adc les mov push adc or mov arpl aaa and pop andnps fwait jb inc es add push (bad) aaa daa xchg add iret mov push mov mov icebp (bad) jo cmc jmp lods inc mov jmp loope cmp or push push lea and (bad) mov in mov mov mov dec repz leave inc push inc sbb adc inc stos mov (bad) mov jecxz call aaa mov test insb clc sub cs mov dec subl out lods mov ss adc sbb mov cld jle scas scas inc pop sti fildll outsl inc jne lcall sub xor repnz fdivr add test cmp mov sbb add mov lods or jecxz xchg lret call ja push push mov cmp pop ljmp mov cmpsl xchg bound and lds xchg or and and adc add loop inc jnp or jo pushf xchg inc or sub inc dec pop or add ss cld inc popf jo jmp adc repz (bad) mov cmpb xor mov int3 push hlt leave dec sahf sbb adc sub gs xor xor rorl and shrb jecxz jbe xchg outsb int inc out sub lods out dec adc dec inc jge sub (bad) lret iret cmp sub inc and aaa adc mov mov data16 dec out push jp fdivrl xchg loop adc in push inc dec and jge xchg cmp lea mov xchg int3 lret iret push (bad) mov subl push and cmc sbb daa sahf or xlat jb mov ret movsb fadds or in addr16 sub pop gs leave leave idivb inc das xchg push cltd mov test adc (bad) mov mov adc bound inc dec push (bad) shrb fadd jge sahf mov xchg push mov mov cld add bound rclb pop aam repnz ret or cmp mov aam jb and outsb and inc std or and into mov lds mov fldl2e in xchg cld mov mov aaa (bad) lock mov pop stc inc idiv sbb pop pop call xor mov int3 jge or cmp jbe push push out nop mov xor in fsts pop push es mov mov add notb iret loope ss mov (bad) aas push xchg inc dec adc rol sub jmp inc sarb cs sbb pop insb cmp fistp sub loop pop sahf cld sub dec sub sbb mov scas imul xor cmpsl xchg and xor fcompl insb rcl and xor sbb imul add adc rolb flds ds or push cmpsl leave cwtl lea adc std outsl xchg inc adc insb jg or pop fimul and insb gs inc ss pop sbb dec fs add std daa pop shr (bad) add or bound fwait pop jne les push jmp xor add leave mov jne inc jnp mov int int3 and push insb je testl jl adc inc ss adc ss push outsb cld mov lods sarl xchg jmp add loope xchg cmp inc and aaa arpl aas bound test std xchg mov add ret jb es adc add adc lcall jp adc push jl cmp dec sub pop test sbb rorl adc popl adc xor xlat mov jecxz (bad) loopne and mov cld lret mov dec bound xchg movsb xor lods mov inc fwait jg sbb fucomip mov push push scas mov xchg push mov je sarl ss dec (bad) int3 cli sbb xchg pop mov mov and pop add (bad) dec das out inc and xor and push jb cmpsl (bad) or in decb lods xchg pop pop decb and pop mov sahf mov aam mov xor mov pop movsl imull lds push xchg outsl loop cmp jno sbb push and imul dec aaa mov test mov je mov test out mov jbe es mov jecxz adc push inc (bad) mov pop lds or jmp pop mov sbb fs push inc and mov repnz aaa mov shrb call in js lea add std add push int lock add jecxz dec lcall pop fs jno and dec out xor adc sub gs and mov jo inc pop and xchg enter add (bad) rcrb mov cwtl in pop pop mov lods cmp lock (bad) ja sahf int sub jmp sbb lcall mov fadd outsb fs mov and je xor cmp and sbb push es jno mov out adc fbstp pop mov dec mov add ret sbb out xor mov push add sub stos sahf int jb lds sub mov inc push dec adc and lods out push xor aaa (bad) xor push fsubl mov cwtl jp scas sbb outsl dec std lret xchg loope aam scas xor mov push jg mov (bad) out xchg and adc xchg enter mov dec outsb sub lods je lahf mov adcl outsb lods or mov mov and xor incl orb outsb mov sub ss sahf repnz test or lods xchg cmp push in push mov pop dec aam inc fnstsw insl pop sub xor test xor sbb in (bad) sbb neg mov cltd mul pop cmp pop jmp xchg mov (bad) cmpsb (bad) xlat hlt mov mov pop nop mov xor xchg sbb push (bad) push cmpsb and dec pushf jae sbb adc lea rorl push imul hlt mov loope cmp mov faddl loop or fs lcall mov les out add rcrb insl ret cli stos into xchg sbb xor aas js pop pushf pop and inc repnz int jmp add pop sbb clc mov pop lahf das nop mov xor in lods sahf sbb adc dec add push pushf sub inc pop xchg xor push push bound sbb dec mov aaa push push inc loopne or cmp push mov pop iret jb ja movsl add mov rorb fs arpl out outsw mov or jle xchg stos cmp adc adc adc loop pop out arpl add pusha push add pusha movsb push cmpsb pop in cmp lds lea inc ss cmp cli gs pop popa or inc dec sub sub jge mov lea adc xchg xchg mov xchg ret dec imul and cmp movsl xor xor (bad) pop jno mov mov xchg inc xchg jne je sahf inc int3 mov fcmovnu jmp mov mov mov adc or out in adc mov cs cmp or push mov add mov pop shrl mov mov xor push bound sub mov iret loopne adc push lods movsb push ret mov and jb pop ja dec pop insl ja bound and adc pop je add fiaddl push fisubrl out js lret or (bad) cltd lds popa push adc sub push int adc fsub fsubrl fs or dec mov push cli ret jmp into xchg push loope inc and sbb dec cwtl push xor xlat mov dec sarb xchg pusha sbb dec inc mov xchg mov cmpsl push arpl cmp sub or in push ja sahf imul pop pushf outsb inc stc inc out in sbb int3 (bad) in sub push sbb rep xchg test jecxz dec mov jne mov sbb ficoml fmuls xor addr16 jle loop adc sti (bad) into movb or xchg sbb (bad) jp jae mov xchg movsl jne test push mov xchg pop jo push sub adc mov insb insb nop or inc popa cmp push add aaa or lods bound addr16 adc stc fcoms dec jle inc pop insl push mov popa push mov or daa mov lods and rcl cmp lods shrb dec dec scas lret or lock mov int sbb outsl dec dec dec int frstor mov adc (bad) fdivrs cltd jbe jg pushf sub insl sub cmp (bad) dec arpl in pop shrl xlat mov pusha xor mov ja cmc std scas (bad) mov cmc inc test mov pop xchg loope xchg in loopne or ss mov outsb and gs xchg and imul push sahf sbb cmc sub iret mov or jns mov xchg js mov xchg (bad) fldl xor mov jb jno add mov mov push mov inc movsl jno aas jecxz sub push push jne aaa arpl cwtl adc into decl push rcrl aas fucomi jno cmp loop inc fistpll sub pop pop push fsubrl int3 adc or and (bad) push cmc xchg scas jmp mov lods in roll mov mov loopne xor scas jecxz mov rcrb incl sbb add outsb push stos push jnp,pn andl mov pop imul xchg pop fwait sbb enter adc gs iret sbb push loop mov iret movsb push dec pusha icebp adc je add andb adc push fisubrl jo push mov adc dec jmp jne sub and pop cli and push or fldcw and add cmp mov add sarl sbb stos jge add in xchg mov jb call stos and jnp ss (bad) outsb lds (bad) cwtl popf lret pop fwait dec push lods (bad) call jmp loope (bad) cmpsb add sbb and mov pop mov add dec inc and cmp cltd dec outsb addr16 lds (bad) xor (bad) cmp addr16 stc xor inc jb inc repnz push popa sub gs and insb jmp mov pop shrl mov pop sub (bad) in imul sbb dec sub pop inc xchg ror inc push lods sub mov (bad) xor mov addr16 loop push int xor pop xchg rolb lret mov ret jo pushf (bad) mov movsb into stos xor std jne sub shll out ret and sub mov pop cwtl mov inc sbb adc scas xchg fldt sub or int3 xor aas in add xchg xor int3 jp ljmp shrb subb cltd loopne jp jae sarb sbb push xor pop mov (bad) xchg inc xlat dec outsl xchg sub cmp push ficomp (bad) jp mov mov les sbb pop push xchg mov rcrb flds add lcall adc mov rolb out popa loop movsb cmpsb jecxz mov or mov cmp inc out dec push pop lods adc jo (bad) cmp sarb xchg int3 mov xlat mov push jbe cltd stos fdivp push mov mov ret (bad) js dec out sub xlat sbb jmp sarl pop inc stos inc movsb cmpsb inc popa mov (bad) push loop nop mov loopne cmpsb cmp je (bad) arpl pusha sbb roll nop in cmp pusha mov call fiaddl lcall (bad) or push sub jne xchg iret pushf mov aam lods add (bad) sahf or call and imul lds mov in xor test arpl lret in fistl or (bad) fs sub xchg jo dec outsb inc cli jp das movb scas out add adc push fwait in fisttpll mov outsb out neg push and adc sub cmp push push mov push shl pop jmp dec ret xchg imul dec repnz mov out out mov test mov pop push scas out and data16 or repz lods (bad) xor divb xor sub scas or enter jns sbb (bad) adc sub jns ja mov mov inc test pop rcrl add push (bad) out push bound mov xor sbb sub int out push push push add cmp mov xor insl inc xchg stc pop mov dec mov mov xchg mov dec jno push inc jge lock sbb scas test xor or sbb or mov addr16 sub jne jnp jbe into ds ret cld xchg mov rcll sbb cmp adc (bad) and pushf js or inc and xchg insl (bad) lret jecxz push sbb ja (bad) repz popa mov cmp (bad) hlt add mov adc js push xchg pushl dec data16 lods jbe aas lea (bad) (bad) movsl shrb sub aam sub test (bad) push pop aad (bad) add mov idivb sub xor mov cmp lods call mov cmpsb imul shl mov push lcall stos push shrl xchg daa pop sub cmp adc or adc jecxz fldenv lea jns pop inc push xchg mov sub aam arpl push addl or out aaa xor sub test insl xor pop xor push sti (bad) dec in inc fwait mov mov ret cltd push mov hlt jnp jb outsl gs ficoml jne xchg mov mov cld mov rcrb inc jl jle lahf jne loope push dec (bad) fmuls jecxz push and fildll lds and fwait js movl and ss lahf fs jg je add sbb dec das fcmovb arpl sub inc in loop pop mov pushf xchg lds jl pop lds jno push mov inc test fldenv xchg popf push mov inc out mov push cwtl xor lea mov dec hlt add push aad ret std pop mov ja mov xorl sub adc mov mov add xchg and xchg jge loope jb lods lea iret jmp cltd and xor dec lds push dec dec sbb and push outsb pcmpeqw loop hlt lret shl sub test or (bad) sub lret shll inc es add mov jbe cmp push push adc (bad) rorl lea xor (bad) jge imul jle jne add (bad) je lods in addr16 dec dec fistpll outsl (bad) cmp and cmp bound xor inc add call xchg cld xchg mov in or rcrb pop dec popf adc icebp mov and dec adc repz xchg movsb daa mov sarl test pusha lcall dec xor xchg mov push bound les idivb ljmp and cmp fs out dec scas out cmpsl jb out rol mov fildll mov sbb dec jb movsl xor dec dec aam sbb hlt push jg pop inc push les (bad) loopne pop jne mov iret dec or bound fimull aas mov mov ficomp mov sub cmp (bad) mov jno (bad) push pusha inc sbb sub pop idivb ficompl adc xchg jmp (bad) cld jg sbb dec push (bad) sub sbb stos (bad) inc int ja fsubs dec pop ja jmp test xor mov in cmp jae and adc cmpsb sbb push int sbb jne aas lea dec jb mov (bad) divb test in lds rorl (bad) pop sbb subl mov ljmp adc scas out push pop adc sbb test gs dec dec xchg mov xchg enter adc js popf and jp push aad cmp addl lea adc mov repz mov in icebp divl fidivl lea sub inc adc das xchg and and lds sahf mov clc cli pushf or xchg sbb push mov jbe loop or pop xchg sti cli add int3 in cltd into xchg adc cltd insb or cld xchg and jle inc inc cwtl mov sbb mov push inc lret mov sub aad inc xchg stc imul fisubrl mov negl xor rcrl negb aaa inc insl andl jl pusha mov add inc xchg jnp (bad) fnsave ljmp cwtl aam sbb xor adc std cwtl push lret xchg jno cld mov imul pop inc aaa xchg loopne sbb out leave outsl mov daa loope cmp dec pushf (bad) bound fidiv gs jbe and cltd pop loopne xchg mov fdivrp mov pop fistp out dec mov out cmpsb std nop push loopne cmpsb (bad) xlat jns mov mov rclb and out cmpsl adc (bad) aad mov call int3 push pushf shrl pop out ret jo xor lods dec xchg mov xchg mov push or out pop (bad) notb or dec pop and pop lea clc imul shr mov iret out cmp fdivl xchg sbb or mov pop and cmp call jmp sbb out inc jne pusha lds mov pop and add mov imul rcrb xchg add sub outsb mov enter sti inc adc in or pop pop subb data16 push jge and ret mov repnz ret cwtl pop mov bound mov add push insl ret scas pop in dec sbb push or shlb jo outsl cs iretw sbb es cmp push std mov dec pop and out jno lds int3 in je popa int fs jae jb sub mov push and inc mov and popa lods push fs or bound pop xor nop mov cltd out and iret movsb cmp inc ja jp pop xor jne sub cmp sub cmp jns inc es xchg mov mov mov cmpsb hlt pop ds xor xor ds test jnp lcall jb or jp ret sbb (bad) sub (bad) testb fldcw imul jo out sbb xchg pop daa data16 cld sbb das xor xchg jns inc fild test fstl mov jo cmpsl adc xchg fistpll adc xor daa scas pop inc inc mov ss (bad) sbb adc out loopne xor imull ret pop into push inc push mov and sbb (bad) mov in push push jne enter shrl or mov cld jne mov outsl ss loop sbb into loope cltd (bad) xlat or jp mov rorl push bound pop bound scas inc push sbb repnz ss cs push mov adc and es push push mov mov mov out (bad) push repz sub aas push popf inc lcall scas mov movsl jae add in sbb aam lahf add arpl aad out adc loop pop rolb (bad) ss xor jge stos xchg fs fisubr adc insl in lea subl mov and mov jle cmp adc xor sbb les fmuls (bad) jno ss mov add (bad) gs jecxz xor push andl mov clc pop add outsb xchg adc mov xorl inc xor xor fstps jns pusha out push sub xchg lahf add xchg iret cltd sub inc xchg push je leave stos dec push push xchg clc cmc lods leave ret mov or or adc in flds mov icebp jne xor in (bad) mov ret faddp idiv inc popf lret es shrb pop xchg pop push push mov sub cmp decl and and bound movsb sbb (bad) jmp xor pop push or aas pop (bad) dec jecxz js iret adc sahf push jne and mov cmp and addr16 cmpsl push sub decb cmp subl pop inc xchg dec adc cmp cmp icebp icebp fucom das inc iret pop pop mov mov mov adc xchg mov inc mov decb ss arpl sti ret arpl xchg xor pop insl push popf or mov js stos inc lds push js xlat xchg dec and mov pop and mov ror jno arpl shr jb int3 jg push sub or inc xchg or push fdivrl pop push aas lcall outsl mov (bad) les mov ret insl and cmp mov pop add inc ss call mov mov or mov rcrl mov mov movsb into xorl clc xorl out in data16 mov rcll popf add ja call xchg int xor ss imul add mov inc scas lock cmp mov js cmpsb call fs xor cld push fcomi mov dec outsb int3 xchg and ljmp ds cmc sbb sbb lret mov aad inc int jae sbb int jmp lcall xchg nop loop inc adc mov and jns in stos insb pusha icebp mov or mov xlat push pop call jle jmp data16 std mov call adc inc xor pop inc pop in push mov outsb cmc cmp nop push jae xchg imul lds mov int3 xchg jbe out mov sub inc push fisttpll pop pop xor int3 cmpsl push test loopne fisubrl jo setns gs cltd js xchg jbe lahf add mov mov int inc push sbb jb pop and or sbb or (bad) int3 fwait mov roll out add stc pop nop lods popa dec mulb aaa cmp popf pop in push xor jle (bad) xor sub inc xchg xor dec lock scas jbe sbb repz insb lods sahf mov test push xor enter ss outsb shrb repz mov int3 mov pop test push inc lods or xchg pop xchg aaa mov inc xlat sbb adc cwtl hlt and sub stos cs das dec into mov sbb sbbl and mov xor pushf xor mov faddl fistpl mov mov mov adc mov dec pop adc lods or add and dec imul lret scas out adc push pop xchg jns cmc and adcl mov and imul inc push cmp (bad) dec xchg sbb inc daa imul pusha and stos cmpsl jle lds xchg call ljmp jge ss pop mov xor jp ret jge jg cwtl ret (bad) jne out mov sub lods dec pusha add lea inc loopne jae add inc xchg xchg (bad) push push insl push sbb in pop or dec mov jo mov aam test mov xchg inc es mov mov lahf mov and xchg imul jl into imul jno sbb sbb fidivr sbb mov mov jbe pop lcall popf xchg xor push xchg add push mov mov fwait rolb push mov or sbb mov std push sub adc ljmp xchg inc sahf xchg ja cmpsb xor dec mov insl (bad) mov mov push (bad) imull (bad) cwtl into ja jp and mov mov adc xchg out pop (bad) fsubs push pop pop mov clc xchg inc (bad) jo decb mov mov adc pop push stos sub mov mov pop jae loop sbbb sarl enter movsb and jmp and movsb movsb daa lea jg or cmp xchg aad lods dec and rolb aam add dec jo add nop popf int out in in scas mov cmpsb fidivr cmp hlt fistp cmp lea mov or mov icebp jle mov sub notl xchg xchg inc pcmpeqw xor out test cmpb scas xor daa leave cmp and sbb push push sub gs mov xchg gs mov test mov push loop xor fdiv addl fsubs loop jmp mov and les fwait daa lahf add sub in (bad) inc fwait (bad) cli jnp or mov adc daa push rclb and fldt lcall xchg roll add flds jg sbb push (bad) arpl push fiaddl loop punpcklwd in mov bound imul add loop adc arpl xchg jb (bad) insb (bad) inc add (bad) and xor adc push js int pushf popa ja sbb mov lock push mov out (bad) jle pop pusha xorl popa das ds inc fidivl into cmp jo (bad) outsb aas sub out add repnz fmuls xlat (bad) lahf enter adc mov fnstenv inc pop aad dec jecxz inc icebp dec fcomp mov (bad) leave mov push inc imul mov cmp cltd cmc push mov and ds iret xor (bad) (bad) imull stos pop push and enter cld lret repnz (bad) xchg in xlat sub (bad) loop mov jmp addr16 mov or or xor or cmc cmp call (bad) and out mov jg cwtl int outsb fs lret out jae xor mov mov mov int push pop sbb or lods pop mov or adc addl and jle inc es cmp xchg leave lret mov je push iret mov nop or and jae pop fwait pop ljmp scas cli mov jge in inc in jns add inc popa popa xor pop insb jno lret mov push mov fstpt xor lods lahf push cld mov jo push int3 push jl cmp sub iret loopne cwtl dec cld cwtl sti dec push push xchg inc nop dec xchg push cwtl in cmp fcos xchg mov loopne,pn ds test in int3 enter cli xor push sub nop enter jo add mov pop and or out push add jl pusha xchg sub leave cld pop sub push mov loop pushf inc cmp push rorb jg lahf clc add xchg xchg gs outsl (bad) insb pop xchg or dec test and cmp fsubrs sub mov lock mov push jle sub sbb movsl dec lea (bad) jbe cwtl adc pop pop int3 add jns nopl (bad) iret and loope call mov add into pop and lds add cmp xor cmp dec in mov ss mov subl fucomip sub adc jp sahf mov (bad) and mov ljmp inc imul or pushf js sbb add fwait lret mov xor mov in and mov fildll push (bad) mov ret rclb cs les dec sub fwait jp or push aad shrb aam jmp dec loope scas push lds mov pop pushf cli iret arpl pop inc sub js and mov movsl mov push in andl sbb inc or xchg push xchg fidivr out jo inc arpl pusha mov sbb pop dec popa cmp lret push popa ss lcall stos cltd hlt inc xor jecxz movsl lods in loope sbb xor push add inc push sub lock sbb shlb gs dec pop mov cltd mov mov mov inc out push sbb push pusha into xchg bound outsl xchg push xor xor mov push push pushf lods lahf inc pop jge sbb lret imul push xor add imul xchg mul in mov or dec xor insb jmp sbb and and (bad) xlat cmp ret (bad) movsb cmp (bad) push cmpsl jns fmul (bad) arpl mov adc aad loop dec add and push insl sub xchg sbb pop incb (bad) jno jno push mov loop aad fldl cmpsl or dec (bad) mov bnd cmp and push xchg (bad) lods mov mov or cmp in mov lods jne int lds insl out pusha dec sub mov adc mov fstl inc int fist outsl and out mov scas pop orl loop add fcomi sbb push adc xor sub test xchg xchg pop test mov inc or and test into sbb (bad) mov sub push leave icebp imul rcll out inc out xchg test sub enter enter lods arpl lahf push add push (bad) cld mov lods jmp sarl inc outsb pop (bad) popa test loop mov push push pop xchg ja push dec adc and addl cmp or jo test inc adc cli inc add mov pop adc sbb pop xor fidivr cltd pusha jae pusha xchg (bad) loope iret adc mov inc mov cwtl pop xchg mov pop loop fildll inc sbb enter cld movsb push push jnp fwait (bad) pusha and pop pop mov leave jmp xchg jg push push ret pop (bad) stos sbb in dec add pop notb adc inc rorb out (bad) push pop das mov jge or (bad) repz and (bad) xchg imul dec push stos cmp inc std jecxz into into leave cmpsb mov inc sub pop add lret ss es add out test sbb loopne mov add ss adc enter call xchg js int3 xor sub inc mov clc into nop mov aaa lahf inc mov jnp mov inc xchg mov dec add into or mov push adc es ljmp dec xchg pop adc or cmp faddl xchg push popf lret insb xor out mov mov fs inc dec int3 lods cmp push ss mov (bad) add sbb push pop xor cmp movsl imul inc testb jbe stc int and sbb (bad) clc or into lea inc sub mov ret (bad) sbb (bad) or inc xchg sub inc push mov jl jg shl mov dec push pop mov fidivl xchg jmp in xchg in out push popf jo ljmp pop cmp push lock mov adc fisubl icebp xor sahf loope jb push jl mov insl sbb mov jne add (bad) cs or cmp mov in repnz xor mov hlt aas mov cmpsl dec jns sub push jg cmp pop jae mov jp or sub push jl repnz outsb pusha xor mov movsl and cltd std insl popa leave xchg sub mov xchg jecxz cmc dec push add adc sbb imul mov stos pmulhuw mov xor (bad) je imul jo gs and loopne sar pop cmp xchg mov jae bound stos iret popf repnz decb jae sub insl push push in outsl adc push sub add repnz mov mov push jo or pop cmp outsl sbb jle or pop bound xchg push (bad) jo repz lahf loop sub mov iret cmpsl in sbb jmp (bad) int3 jge lds lcall adc sti xor ja sub push sti add pop imul ret addr16 mov (bad) cmp pop gs adc and xchg xchg jne mov insl jl cli shlb pushf stos and mov jbe sub mov mov loope es mov pusha aam inc jns daa jno je adc or es pushf das sub inc dec nop outsb sub adc jae dec or sbb push fisttp js adc mov fsts inc mov adc pop sub adc xor rcr xchg mov nop pop push out push scas roll int jp push adc es xor ja mov fist jo scas aas and lret push or inc loop xor (bad) test loopne cs or cltd push lds xchg mov cs das test sub inc test in fcmovnbe pushl inc loopne mov push rcrb dec dec dec or jmp mov fstpl lcall scas xor lea fdivl or sub lods sub popa and dec mov in int in push pop mov daa lods fildll sub mov mov into inc sub stos fistp pushf ret jl dec push divl push inc es add div push outsl lds out pop push xchg add lds adc and imul rcrl mov and pop push leave xor mov int or jnp xchg sbb xor xor mov fist xor sbb ret fstp std push pop test mov daa jno pusha into addr16 js outsl in push int mov int addl push mov xor lret add jo shrb ret sub jno addl cltd mov es xor popf int3 sub repnz out push xor rep pop and mov inc int3 hlt sub xlat push pop cmp stc jmp jg mov jbe gs scas les cmp push mov dec clc jg test dec inc cmp insb jne insl and (bad) popa rcrl sub dec add cli pop fisttp test push push cmpsb mov inc pop jno push cmp popa push repz and nop data16 cltd mov cmp fidivl repnz out roll mov stc fistp adc ss inc mov out jbe int3 adc pop mov repz cmc add mov andl sub (bad) dec sbb fist dec add inc loop push test xor pop test (bad) fcom ja cmp gs adc or sub xchg inc sub lcall cmp adc sub adc mov mov fsubrl in or adc push inc jnp out or jmp push xor ret imul dec or mov mov and and dec pop fwait je,pn jecxz bnd aam arpl xchg mov and add cmp sub mov (bad) ror outsb daa daa xchg imul popl xor push jae imul popf mov jo jg cmp lods sti mov jno cmp xor scas xchg cmp stc cwtl xchg xor mov or lcall cmpsb and xchg lds fs loope mov (bad) (bad) mov fdivrl jle lcall lahf inc push dec aas lods hlt (bad) loope sbb or (bad) jb adc adc lcall xchg sbb loope sbb and xor pushf movsl fiadd call push fucomp mov gs mov pop fs dec mov das xor cmp cmc push inc pop insb es jge je pop push pop in jns test push pop fst mov push out stos rorb aam (bad) pop ja cltd aas or sahf subb sbb xor lea arpl cli push test popl fs rcll xor ss sbb pop xchg jmp mov mov mov insb and xor iret rclb lahf (bad) jne cwtl sti outsb push pop xlat mov cmp push inc or aam mov call loop xchg xchg divb add xor or xchg cmp movsl jns pop mov pop pop fst jecxz call and loopne xchg push icebp ret mov sub pop outsl daa push repnz cmp jb mov fistpll pop mov push push jge mov and adc xchg in pop mov push inc jg push (bad) mov or rcll insl rcrb add push lods inc aad jp enter xor xchg push sti xchg pop icebp sub lea mov mov sub mov or out pop imul aad enter sub (bad) sbb out pop je call cmp mov sti cmp sub scas mov xchg pop pop insl lods mov mov mov arpl pop std stc addr16 add lea sbbb add xor sub pop xchg aad insb add dec rorb sarl xor sub jno movsl adc ljmp test ljmp pop out jl outsb jmp dec push (bad) mov je push push mov mov xlat cmp cmp std pop pop inc adc push (bad) loope (bad) addl push fildl insl sub jo sub loopne cmp add fwait pop mov add lea jb xchg pop test cwtl (bad) stos aad cli cs xchg cmpb in and sahf sbb pop outsl cs dec inc inc lock leave dec xchg pop pop jle dec sbb cmc outsl scas add popa (bad) xor fs sbb sub cltd das xchg aad (bad) fwait inc and pop cmpsb aad pop loopne std push push imul enter fwait adc inc lcall xor mov cmp insb push push clc cmp in dec int xor push ret lods cs shr mov fldt jmp (bad) cld sub dec push jbe (bad) xor das dec dec icebp movsl sbb lcall push mov lcall mov xor sbb jmp fdivrs pop (bad) inc int fimull mov (bad) push sub (bad) popa and sbb mov fisub mov lods mov pop in je add inc mov or cmpsl xor dec sub sub mov jmp ja sub cs popf cmc or mov insb stos fadds rcrl int3 cmpsb and xlat jo jnp lea int3 stos push sahf insb std mov add mov cmp mov xor mov stos hlt dec pop (bad) and push mov pop out in jmp mov into (bad) imul std test insb pop (bad) test cwtl add jle mov jb es adc daa xchg test int3 mov dec cmpsb mov iret and mov test sub cmp rcrb addr16 or outsb jmp enter gs fs sbb ljmp mov jae stos fcomi loope adc mov (bad) fstpl hlt xchg mov sbb dec sbb mov mov ret out gs sub xchg jl lock sbb xchg xchg mov lock imull es stc xchg push jmp (bad) adc outsl in sbb mov sub dec sti mov sub push test iret pop andb mov int3 lret push test xchg mov pop ja inc pusha cmc enter into and adc sarb pop in xor push and lret scas pop test and es or ficompl adc jge jnp cmp cmp sbb pop icebp mov call mov xor cmc std mov add lahf and xchg mov sahf das rcrb xor insb pop sub push jne fstps pusha out sbb xor pop push add jmp adc sbb mov add mov jb sahf fs sahf pop int test insl cmp xor jb (bad) inc or and push inc inc mov (bad) gs inc (bad) pop bound xchg xor out ret mov inc cmp cwtl lcall mov sub inc dec mov enter mov cmpsl mov cmpsb jb cmc jae dec xchg mov fadds es jo cld sub clc push pop repz jbe mov jg dec jb ret pop sub xor pop jge lock inc cli dec sbb add mov shrl add das outsl (bad) jno or inc pushf dec ret mov push adc int xchg push lret inc add pandn cmp sub arpl sbb adc or mov jnp jle sbb cld jmp aas int3 dec shll cwtl mov repnz push sbb mov mov mul sub lock mov mov inc lcall and cmp xchg outsb mov adc inc lret std dec dec jb repnz imul sub shr imul out add mov dec das sbb cmc aas mov mov push movsl jecxz popf dec sahf fldenv mov mov sub sub sub dec in push and adc mov push mov sahf and fwait mov fwait cltd mov pusha test std dec or arpl pop in pusha ret ds ret imulb xor std cmpsb push dec xorl ror cmp adc jecxz inc inc jns jns cltd das fidivl jo push das mov fsubs fsubs pop dec push push inc insb hlt xchg fidiv fldcw sub inc mov xchg push in sbb stos fildll outsl inc int3 (bad) cmp dec adc sarb cmc jb mov jp sahf lods sbb es sbb popa in scas je out mov inc push inc popa jo movsb push inc pop (bad) and mov jle and push push and cmp sub sbb dec repnz ss sub int3 or icebp int int das hlt add xchg push and adc xchg stc fbld and sub jp clc lea loop and into dec dec leave cmp jle stc fdivrl aad popf popa cmp xchg xor push mov and xchg and pop lret pop inc int leave add lds lret jns (bad) divb lea test movsl (bad) cs sbb add sub add lods outsb sub adc pop hlt inc cmpsl in cs mov mov dec adc es rol stos jne mov push popa call pop sbb and (bad) sar cmp pop clc and cmp (bad) mov inc (bad) inc in cmp or jne aad dec in nop pop cmp xor addr16 fwait mov cmc adc push pop das adc or and xchg (bad) mulb pushf loope xor aad lods dec jne mov add out xchg add lods and xchg test xor popa (bad) inc fist pushf dec mov dec iret shl shlb mov add xchg push pop dec bound mov mov out pop xchg mov cmp daa adc xor cmp ret iret jecxz (bad) push xor ss nop jp cmp sti lods fnsave in mov inc inc rcrb imul push lods lcall add xor les scas mov pop test pop xchg nop out cli jge scas ljmp mov loop sub rcll rorb adc and mov mov jp int3 jecxz aaa mov in add loop adc addr16 xor cld outsb add dec mov mov mov mov outsb adc int add and or lock add sbb fldt neg push (bad) cmp addl push test repz xchg cltd cmp in lahf xchg enter adc xor js mov pop push ret or rorb in lret leave sbb loope mov cmp add loop fwait jne,pn and rcrb fwait (bad) in sub mov sbb ds sbb and pop or fs mov sub inc bound pop fnstsw sbb frstor xchg xor mov inc and (bad) (bad) out in xor sbb mov clc orl jne xchg dec jo mov mov mov popf jge data16 mov insl inc je sub movsl sub sbb jno lret dec mov fwait mov inc dec (bad) fiadd push mov dec xor xlat sub fldcw cmp aaa push or loope dec xor push or dec cmp (bad) not in sub mov jne call xor xorb ja mov pop fmuls (bad) loop lods adcb or lcall and dec pop sbb xchg out pushf adc pop push sub inc (bad) xor mov dec dec fdivs ret fwait cli and dec or push inc and push cmp test jecxz cmp daa xchg adcl pop xchg mov cmpsl in and outsb dec sub add out jmp bound sti loope popl xor addr16 lret imul xchg push sub fsub xchg dec in adc stc in adc popf mov xchg lret pushf in or push adc xchg xor cltd fsubl cmp or (bad) push aad pop xchg sbbb xlat nop sbb cmp enter rcl scas pop xchg dec jne jns xchg clc sbb pop aas aas repnz lods and cmpsl dec hlt xchg cmp add jnp jge lods xchg push xchg gs insb sbb movb push pushl mov clc jge inc inc and lock adc into rcr xor inc add loop add (bad) adc jp add and icebp mov adc xor sti add jns aad shrl jbe mov aaa xchg or shlb das int mov dec jne jno or js xchg adc insb out add lds out (bad) mov (bad) shl xor or cmpsl fdivrl test pop adc push mov xchg data16 shll mov sbb aaa jecxz sbb add inc push popf mov ja xchg inc out sub (bad) push enter sbb adc insl (bad) cld pop xchg push xor out mov (bad) jae mov xor fidivrl pop dec int3 (bad) bound push int mov pop xchg mov ljmp jg pop jecxz xorb dec lea loop mov fxch sbb push aaa leave xchg mov cwtl pop xlat mov stos adc jne imull mov rclb mov scas mov push adc pop dec shrb mov rcll mov push int3 push push xchg lret mov or loop mov cltd jg push mov and out xchg int3 stc ljmp flds cwtl popa (bad) adc out into dec add test push aad dec cmpsb dec out mov and ss xor imul push pop sub xor push das mov shrl mov (bad) xchg pop cmp mov xor sbb jbe es scas jne mov repnz mov out adc into pop cli aad into pop inc or mov xlat imul sub adc jb inc jecxz push mov or ljmp inc jmp sub xor jo lock les add es or bound scas jmp adcl inc xor mov mov out mov cmp mov clc mov fbstp insb mov jb movsb dec lret dec inc push xchg lea add and xchg out dec dec adc inc cmp bound pop jae movsb jp mov inc out and cltd inc ret ljmp add dec arpl out mov dec out push imul pop xor jno lods push and adc mov inc or xor inc in stos dec adc jg dec jg pushf sbb lock out lcall xchg stos jecxz jmp mov add or jbe aad jno mov loope int3 push fwait mov sbb mov data16 in cmpsl sti cmp cmpsl ret mov out mov xchg fdivr aam aam xor lea push imul in jecxz rcr dec xchg pop push rcrl cli mov pop rcll mov inc add xchg xchg fsubs add out ds mov adc icebp xor xchg push jb fisttp and loopne mov add cmp sbb push stos clc pop and ret mov pop fstl add (bad) push mov pop sub mov pop xchg adc lds pop rcll jnp push or sbb cmp fild push jl fs ret out and insb fsubl outsb or inc xchg mov out add push in sbb jle sub movsl xor (bad) dec push push and out add lock xchg fs and orl lea sub or pop dec xchg insl sbb inc xor pmulhw xchg xlat xor std pop in das push cmpsl sub test fcoms mov adcl mov loop js jne jle xstore-rng cmpsl test in (bad) lret aam loope jmp lods pushf rcl add das jae daa loopne loope int jne iret mov mov push mov push fdivl mov sbb sbb sbb add mov rcl jp jle jbe adc jecxz adcb pop mov js cmpsb push push mov pop (bad) imul in adc jle mov rcll aaa in sub xor pop (bad) clc push adc dec xor nop lret fcmovnbe (bad) cmpsl inc jmp push push int3 leave xchg xchg fistpl es divl aad ret stos adc ss xchg stos out xchg jg sti mov add mov inc ret pop adc sub insb dec (bad) loop push and pop cmp insb dec scas xchg inc xchg imul mov push hlt adc cld add jns mov in mov in in arpl mov rorb push sbb mov aaa arpl and (bad) mov sti push int adc cmc and mov cmp out sbb push add sbb mov call lds outsl int3 mov je pushf dec insl daa pusha test inc ret inc mov add in (bad) rolb lcall mov in xor pop pop ja movl sbb xor lock inc pop fidiv xchg movsl jb xchg dec jns nop push pop into inc shl leave mov pop mov aas les sub cmp xor loopne lahf cmp sahf nop loopne mov lcall roll scas push lahf es lea cmp xchg jge seto adc xchg xchg ds inc in inc and cmp or icebp push in aam push mov aas adc dec push lret daa sub iret leave fnstenv jecxz test data16 jbe std mov or stc (bad) mov movsl mov sar jmp dec popf jno jmp call sarb jnp lahf es (bad) mov cwtl dec xchg mov insl jae adc adc sub bound jmp test js,pn cmp inc test jle lock adc loop xorl or leave jg fstpl xlat pop xorl and inc (bad) incl popa jle ficomp daa jmp decl cmp adc imul jmp add enter or sahf aaa xchg stc scas in js mov inc sbb adc repz sub nop mov bound mov pop mov cwtl test shr dec jbe int3 aaa cwtl xor xchg xor aas lock call lods iret mov mov out add fisttpl add clc mov xor mov movsl loop nop cwtl out xor dec int xchg mov dec es imulb jb insb sub jae pop cwtl push inc mov pop pop adc cld mov inc push pusha int xor cmp test sub jns ficom out push inc ret dec (bad) push into ret enter xchg push cmp add in insb int3 (bad) das sub dec shrl inc inc or ss xor int3 jp pop dec in push call lods out nop inc jmp outsl jnp into or or mov inc sub push lahf js js xchg mov xor cmp push test add int xchg mov (bad) mov mov cmp rcrl (bad) addr16 test and fiaddl jbe movsl andl lods xor std sbb test or push mov xchg test pop fcmovnu mov and arpl sub push cmp dec daa lahf pop push xchg xchg je mov cltd ljmp mov cmp jp out adc js add add cmp rcrl cld mov int3 int3 mov jge sbb in jb jecxz xchg xor jae jp das add (bad) jmp sahf mov lds lea push and lods xor rorl mov jp cltd aam es xor aaa fmuls pop lea int or mov imul dec cmpsb adcl mov clc cmc push loop in mov xchg subl jo dec push jne je das dec mov pop and bound cmp push sbb loop push jp jo test nop vcvtdq2pd es (bad) pop sbb hlt jmp push pop and insb adc inc mul in ret push lods add (bad) loope pop popf (bad) in add push leave push add pushl push dec sbb lret in push cmp lods push adc or insb xchg or loopne xchg into (bad) in cs data16 je add nop roll cltd cltd sub cltd popf pushl xlat repnz addl pop nop or loope pop aam fwait mov cmp xor aaa scas data16 pusha mov adc clc pop jl mov sub js cmc or cs mov mov sub ss mov aam pusha dec mov out pop in rorl mov pushf jbe push insl push loopne mov frstor sbb mov and jle xchg icebp outsl hlt mov out stc ret fdivrs jae sbb pop mov lret movsb jecxz insl push outsb cltd aam push popa aam stos mov cld lods cs push mov loop inc cmp adc addr16 and push cmp add jle add sbb and and lret prefetch xor pop lods bound add daa nop repz jle imul (bad) std mov mov jg inc fsubrs stos (bad) int3 iret (bad) loopne and pusha mov jl jmp mov cltd test dec (bad) mov iret (bad) movsb inc pusha jnp,pt mov outsl lret pop xchg add ret aad adc mov and das je iret stos and dec or int3 xchg (bad) pop push sbb je repnz pop pop inc jp loopne push mov and mov and xchg mov jle mov mov jge and ss push add es aam adc cmpb lods lods sub mov in xchg xor jne iret xchg out cmp push (bad) dec (bad) sbb repnz fild popf and (bad) cwtl es add sbb xchg icebp rcll popf mov cmc push adc arpl and adc pop aad pop xchg popa loope fnop (bad) into jmp sub and aam repnz sbb stos mov xor sub daa scas or inc pop rolb loop ja add fsubs push imul nop decb dec and sahf ret (bad) js or fsubrl out fwait insl xchg popa fcmovnb jne mov and jns adc ja stos out and stc inc lock mov imulb test adc icebp lods sub push out out push add lods popl xchg mov ds movsl test add mov sub aad cmpsb push in ljmp sbb (bad) jae mov and aas xchg xchg push jmp je sbb add lret add movsl (bad) xor push insl insb hlt xor xor mov pushf fprem jnp sub sbb lds test popf test movsbl repz cmp jg xchg ret ret and ret sbb imul loopne and add sti inc arpl loop mov and daa fs adc leave je aaa xchg xor dec sub sarl mov pop or or dec call stc push mov imul and les in loop cmpps out mov jns pop dec out push inc (bad) xor or test push cmovle mov sti mov sub insl cltd js xor add or (bad) sub hlt bound lahf sub in out lret xor imul pop sub inc pop dec adc fildll loop clc cld dec int3 pushf call pop pop lods inc (bad) mov subl jnp lods push push rcr and clc inc or add inc jae or inc scas mov lock mov cmpsl xchg jne pusha call in xor cmpsl lret sbb mov xchg in jb int push push fisttpl push in sbb mov xor bound or and adc js sbb cld sub inc sbb insl dec outsl paddsw bound add cld movsl rolb mov cmp push and pop (bad) jge dec repz sbb jbe jno cld jmp rcrb xor int cmp jge add inc in mov into scas push adc or pop insl lods je icebp dec cmpsl jp bound inc add pushf jl pop jg jbe sbb adc in sub or lea cmp xchg push push iret lock or lods push loope popl popf cs insb rorl jno incl lcall mov lahf roll dec aad mov adcl or dec or iret mov out sbb scas dec mov lock pushf arpl (bad) and or add mov pop pop lea lcall sub jle dec arpl mov cmc xor movsl pusha cwtl sti in jg ret pushf inc popa cli mov add int (bad) push cmp xchg push outsb mov or sbb outsl cwtl xchg shr popa pop mov jl and xor xor insl mov nop mov push mov clc in cmp xor xor cmp jge add pushf lds mov push (bad) push mov dec sbb or data16 nop pop in push lds push jo cli jle in and sbb sbb ret dec jae imul push int inc xchg xchg cmp mov pop or into mov add push push fwait pop push arpl adc ja or push jne fstl mov ret testb movsl hlt jecxz push dec lds rcrb sub out xchg fsubl push lcall or out jns add hlt sub cld (bad) add push in add loopne xchg lahf fnsetpm(287 inc stos (bad) movsl and mov pop popa inc sub insb es cmc xchg and lock testb fldcw clc dec xor dec sub scas jge pop fistp imul int xor sbb das xchg mov int shlb bound in adc sub leave bswap test push rcrb dec adc popa push pop dec je mov in pop mov adc int3 test subl jns,pn or xchg mov mov jne pop (bad) inc sub rclb (bad) mov fs fabs sbb jp outsb int aas xchg pushf sub mov jl cmpsl lcall dec stc push mov dec jbe and out jae popf insb add and daa std jae or outsb hlt (bad) xchg cmp mov adc mov pop aaa mov lods push push and roll test and (bad) mov mov inc loop mov mov add shll or mov mov mov jmp dec xchg xchg and lods cmc jle adc stos inc inc xchg scas enter daa mov jo xchg and int3 (bad) xchg xor sbb sub mov std in out push fucom push push das std int3 lock and int lock fwait iret jecxz ficomp pop addr16 pop sub dec mov jp popf icebp testl mov movsb or xor arpl aas xchg rcll or les andl cmpsl cmp xor mov cmp divb mov std fimull rcl iret ret sbb sti and jmpw mov in jb movsb adc push aad pop mov lods sub adc lods inc out popf pusha (bad) jp inc adc and aam or dec mov sbb push mov ds ret fiaddl lea mov loop (bad) sub ret mov xor pop lock mov xlat out mov sbb push arpl mov pop fs popa dec js repz jmp sahf cmp sub add std lcallw fsts in clc inc iret pop stos sub cli adc in mov out add push es jecxz es lahf pop daa push not es movsb test adc add jno mov je dec push pop sahf es shlb (bad) dec int mov rcll mov cli in mov cmp or sbb xor ja xchg loope adc lea in outsb or int icebp (bad) pushf sub insl fstpl sbb cltd sbb cmp setbe pop dec and jge js test test mov out aaa inc xlat or (bad) xchg xlat inc xchg outsb (bad) in pop loopw out fwait xchg mov ljmp fistp cld push repnz test (bad) or es ficomp imul xchg mov mov loope shrl addr16 ja xor out mov cmpb lea adc push adc or push xchg xchg inc dec pop xchg out cmc ss out push frstpm(287 test std hlt xchg imul arpl jns pop xchg jnp jo sbb push js dec stc and stos mov scas cmpsl mov jnp or lahf jge and (bad) cltd rorl seta pop jle inc xchg je aam xor pop dec sti cltd arpl outsl subb in pop dec adc cmp and cwtl mov adc sub scas int mov or int icebp popf dec adc dec insl mov adc add sti push and pusha cmp push outsb or es int xorl xor cld out aaa aaa xor lock std push cmp push add sarb push jecxz scas jnp out popa shlb push std jb dec gs mov (bad) mov (bad) in jbe es test xlat test out push inc jnp mov std push mov xor lds notl and and xor inc addr16 bnd call iret lods imul xchg mov cmpsb pop add test add jae mov mov ds and pop aam addl fs xor out add ja popl xchg test adc adc cmp inc cmp mov add or ret pop adc into dec mov lahf ret add in add xor xchg outsl xchg dec ljmp xchg dec sbb inc mov inc xchg mov (bad) mov (bad) or popa incb inc jne jle dec push mov lds shr lret ljmp scas and mov lahf loopne mov mov cmpsl aaa xchg cmp xchg test jmp mov mov lcall jnp sub pop notb enter outsb imull xor jb cmp stc dec sub mov xor lcall pop cli push and dec jnp jb dec loope pop mov ficomp mov inc mov cli ss movsb nop mov xchg (bad) pop lea popa adc outsb push push aaa xchg or aas cmp or and in fld testl in je lods dec aam lahf mov loop inc test sbb aaa loope xchg dec sub mov js sub and cltd cmp mov push jb pop add loope outsb mov mov sbb insl inc cmpsl in jns mov or add pop adc cs xchg and fstl xor adcl imul ja (bad) adc sbb sarl sub dec jae sbb jle inc sub adc loop cltd cmc inc int cmp cli dec pop ds dec fidivrl sub in jecxz pop add insl add push cmp sub push lret mov movsl in jecxz je (bad) mov push adc lret sbb inc adc xchg jmp (bad) idivl jp das repnz int3 mov sahf xor dec lret sbb cwtl dec pop ret mov dec (bad) jmp fild inc bswap movsl mov and jno or (bad) movsb adc cmp add xchg icebp cmp inc jg test je sbb xor inc inc xor fwait inc les leave movsl repnz mov pop (bad) jb xlat dec mov jecxz popf lret aaa shrl inc or adc ja in popa pop fisttpl sub sub mov mov inc lea notl sbb (bad) lea jb jo lds mov les iret dec xchg gs out mov fs iret dec xchg mov xchg cmp sub lahf (bad) mul mov xchg pop cmc addl lock mov (bad) aam jno fidivr adc pop aam idivb mov pop sub pop inc out mov mov ljmp or std mov xor test imul mov cwtl rorb test xor or push push ss pop pop adc pushf or sub mov int3 outsb adc xlat dec pop sub movsb lahf sub ja out stc xchg push pop mov ret inc sbb push push mov and adc iret jno outsb jp fwait es enter and pop repnz add sub mulb mov mov adc ss mov ds lods push pusha ret int (bad) jg mov fsubrl sti sub sbb test mov clc or push sbb mov cmpsb test incl lock int mov insb pop lds out push adc xor lods mov repnz cmp imul imul (bad) incl inc push out mov mov mov loop clc cli adc std mov and inc pop dec (bad) das mov mov imul ret popa pop into mov ret outsl addr16 pop jno and add pop fdivrp cli popa and push mov stc hlt testl mov test mov (bad) loope lea (bad) flds in sbb add sub mov push inc testl jno dec mov lock jb inc outsl lods add sub (bad) js dec test mov fadd rcl lcall or rorb divb and repnz loope repz imul sbb pop into jns cmp gs insl imul mull cltd cmp icebp test sub sub xchg jle xor out inc data16 fwait in fwait mov cwtl add cli mov fwait and add loop sbb push and and leave lcall pop lcall or adcl or mov enter sbb popf clc inc rorb mov out push aas push es out ja jle aad pop jmp mov push ljmp xor insl dec sbb or push inc popw scas out push icebp sarb jge xchg out and cmpb shrb push cmpsb add inc pushf push popa aam push mov xchg (bad) xor mov fmuls jo inc jecxz std sub push xor adc add cmp xchg add or idivb add (bad) in cltd push inc dec push addl imul cmp inc mov insb xchg and jae insb mov rcll xchg pop xchg lock cmpsl lea mov xor and loope inc sub jno je inc nop test mov pushf add lods imul cwtl dec icebp arpl ret fstl test stc sbb mov inc imul push (bad) call fdivrs push mov adc push out dec push add mov lahf insb outsl adc popa sbb xchg cmp insb sarl fsubr outsl push mov ret add pop enter mov inc adc sub jb in jge sub sbb fisubl movsb imul sub mov mov or mov out mov mov cmp dec mov and fiadd lea mov test mov leave mov cmp xchg push xchg xor jb or icebp cmp jmp push mov dec or movsb andl shl jnp cmp inc imul push hlt mov add fs test data16 push les orl pusha scas add push gs fidivl add cmp mov and or jae jbe daa or jmp and xor data16 jmp jg mov inc mov sub into fsubp jge mov add inc xor fiadd pop xchg or repz or out lea (bad) movsl test xchg fcompl push pop divb aas mov jbe orl hlt and repnz pop cwtl hlt jecxz in sbb jno jecxz pop jnp adc iret push sub dec inc (bad) lods mov mov xchg sbb push daa xor aas sbb cmp mov leave jnp sbb add jno in repz fsubs xor lret aad loopne push insl xchg adc imulb fbstp pop cmc inc lcall mov repz add cli mov fiaddl dec mov sub aaa iret cmpsl cmpsl and dec aam mov (bad) cltd outsb dec dec cmp push pop (bad) (bad) mov cld mov lock call dec cltd je dec xchg xchg faddl pushl ror (bad) jns sbb lea cs mov ret arpl dec mov inc sbb pop call and pop pop je ds sub push inc and insl aas sbb sbb (bad) daa pop fs dec jae pushf aaa adc int3 mov into (bad) out cmc lahf adc or push (bad) or test inc inc outsb insb lea ficomp jp scas leave sbb cltd push rolb shrb popf out add and fisubl inc aaa sub sub xchg daa or loope sbb ds loopne sbb cli mov movsl call adc aas testl jnp insl in sbb fwait adc pop mov jmp or fist (bad) in push (bad) jae adcl push mov push xor es adc pop add dec inc or dec aam push jne mov or lcall sahf icebp std popa in int call mov mov sub dec mov lret int3 dec test cmc xchg dec add mov arpl sbb aad sbb (bad) cld aam aaa aas fwait jecxz int3 cmp shll dec mov lret cmp jp in dec sub jecxz jp sub and fistpl add and sub dec xor mov jl pusha and xchg loop cwtl and mov js fs int3 mov cmp and push ja or inc fist cltd sbb jb pushf xchg insb int3 cs and add iret xchg push mov inc mov pushf jbe pop push sub sub xor (bad) mov cltd fsubp test jno sbb pop or sbb pop fidiv dec je push or loope and mov clc and cwtl or adc je shlb fcomi adc repnz cmpsb sahf iret cli xchg lods js popf jb sti sbb test adc push das shrb push adcl repz in mov popa inc js and push sbb sub xor sub jbe inc shl add jmp inc mov jle pop les test inc add xchg xchg (bad) push rcl (bad) and mov lods js cmp jecxz dec sbb fcmove fs mov (bad) sub jecxz push cs xor test outsl and lds cmp adc cwtl in (bad) ljmp or fdivrp sbb push push mov jmp jg in and insb pop out in test mov test xchg mov out repz sti cmpsl pop fildl mov jl nop lret pop mov cs add lods push jle and adc xor mov iret lds pop jne push sbb rcrb xchg out sub add out (bad) outsb mov xor lret push jp xor gs inc sbbl sbb push in movsl and fidivrl push mov pop and jnp jge loopne pop push in mov cmpsb mov mov sub jl iret inc xor rcrl int sub ret or mov adc data16 pop mov xor (bad) sub std push fbld push xor (bad) sbb retw xor aaa xor inc (bad) dec sub cmp out orps aaa pop jb push pop cmc inc cmp imul pop repz pushf jne stc xor xchg xchg movsb inc orl push jge jge addr16 out iret lock mov add scas push bound mov pop adc xor sub insb lcall inc xor lret int3 ret inc cwtl sub lock xor push in jge pop lds inc ror fwait jle add cmp cmp inc pop lcall stos cld inc daa jnp cwtl addl sub aas cmp pushf mov adc jo sub out loopne xor jo mov mov pusha (bad) dec xchg sbb mov jge pop and dec int3 (bad) lods mov or pushl add rolb push ficom mov (bad) cmpsl lock cmp or dec fiaddl repz pop mov cmpsb push insl pop loope loope cmp mov sbb lods fs dec inc cwtl leave dec pushf or cltd aam mov cmp add xchg sub (bad) daa xor (bad) out mov mov jecxz inc mov or rorb shlb sub cmc cwtl pop cmc mov fwait dec cmp movsl xchg xor and icebp sahf jmp xor push imul push cmp ljmp test xchg mov cmc xchg inc or neg mov xacquire dec or and mov or mov mov jo lcall mov loope xor (bad) jae loope mov lahf adc xchg jbe inc cwtl scas stc jb pop and mov stc jp push (bad) adc vandps push sub sub pop dec fldenv dec mov jo xchg mov and stos ljmp or xchg xor shrb pop mov imul push iret inc (bad) movsl mov or dec sbb pop cmp inc or add ret roll insl or fildll mov in and lahf imul lock lcall inc (bad) fwait cmpsb push lds push cmpsb decb xor js pushf inc lahf lahf pushf mov add pop movb and orb cmp outsl testb js std xlat dec lcall mov pop in push xor jns jb in push sahf pop popf scas out mov lret fmull enter cmp (bad) enter call cmc popf rorb or decl es ret jmp and and cs xchg pop sbb fwait pop mov mov je sahf pop mov aas mov nop lcall sbb rcl or adc mov cwtl pop imul xchg movsl loop xchg daa add push sbb fstps ljmp push (bad) xchg pushf xor jecxz daa add pushf fimul add xor dec mov dec test fistpl mov mov andl popa xor or movsb cmp push add xorl shrb scas xlat push ja sub lret xor jl xchg fldl out cli xor xor inc dec fidivr pop call dec xchg sbb jge std inc into inc cmp scas iret sbb dec xlat (bad) clc ljmp pop (bad) movsb add and (bad) jecxz mov repz and movsl and jle cmc leave mov lods xor adc sbb pop push jnp inc cld jno mov les fisttp ds push mov and and sub lahf or nop cmovp (bad) fwait insl (bad) push inc mov loope add imul mov xchg (bad) insl fwait sub push jbe mov je mov mov frstor add jl mov mov adc ja add cmp rcr sbb loopne push lods rcl int scas les in pop icebp pushf or (bad) cmp adc cwtl test in mov mov or add mov inc aas sub inc cltd repnz movsl data16 cmp add xor shll mov xchg mov pop mov or pop pop sub cmp mov outsb jne andb pop into ret jmp or xchg jbe xchg dec xchg xchg or mov fs int3 idivb out loopne inc adc pop or (bad) cmc add push push dec dec icebp test mov dec pop sbb aas inc cmpsl adc rolb xchg add mov cs cmp stos ret das or and insl sbb call orb mov in jmp dec jns push call and fs out pusha jge fabs frstor lcall xchg jnp orl andb pop adc (bad) (bad) in insb jns inc mov cld lahf jae in mov cmp dec fs add pushf xor fadds dec or jle inc or cli cmp mov mov fnstenv inc add mov stc faddl mov adc inc addr16 int3 and pop pusha dec clc sub jbe dec out inc xchg lret jnp addl add lcall inc mov sbb outsb mov insb daa xchg jae out outsl (bad) jne jmp lret or fmul jbe sbb adc in sbb lods test lods mov jle sti sub push push add fidivrl pop fstpl inc add mov cmpb mov xchg jp and cmp test jbe addl jns sub fldenv sbb (bad) std inc xchg push jp adc lods add lret sbb sbb push loope loopne xor pusha loopne mov and cmpsl jg mov roll inc shrl dec enter mov mov push dec lds sbb loope push sub scas inc add mov push and adc xor fbld pop in or jg mov inc shrb push les test (bad) je incl mov test scas sub scas in das sbb inc mov and jp fwait test add xchg lds push out mov loopw sbb ret inc popf cmp mov adc xchg dec daa and (bad) push pop lds pop (bad) dec push addb dec mov jmp dec jno fnsave es mov adc jo pusha push out pop mov rorl inc icebp inc pusha imulb and fsubrl mov cbtw int lds sub aaa es or nop jmp adc dec (bad) cmp pop addr16 sbb mov xchg cmp (bad) sub pop insl test and xor xchg fwait sub or jae test mov insl xchg fdivs mov pop sub jo add sbb cmp push mov lahf pop inc cld jle mov dec xchg into cwtl mov dec adc popf jbe inc sbb lcall and pop adc push push jp mov ds repz dec in out into cmc (bad) ss popf scas inc imul in pop mov mov lret aad arpl add adc loopne cs dec cs push in loope leave sub mov ror test sub jl sub mov add inc lret stc inc push xchg xchg sti push popa adc and jle dec and arpl jle sub (bad) push jne add movsb nop bound scas push enter push pop xor inc call (bad) mov cwtl data16 lcall test xchg or sub xor in xchg test mov ss adc rcrl inc sahf pop imul stos ret mov sbb mov sub push jbe scas (bad) mov enter cmp mov xor jns mov imul aam test or das xchg jge popa push imul push rcrl roll lods aaa add lret js lret aas pop pop pop jno cmp jne sbb sub ss and aam call cld inc dec add popf jmp push or mov dec idivl int mov cmpsb in dec add mull push loop lret sbb pop into lcall roll addr16 inc and and push pop mov imul push sub jb xchg jl sub (bad) jae out je mov jb scas or inc mov roll cmp pop jge insb or fmull jecxz push or lods push clc mov stos xor imul xchg je cltd mov sbb dec mov sub outsl dec dec hlt jnp ss movsl in pop fs sti cmp sbb loopne and les pop push add and pop jecxz (bad) mov xchg movsl mov jne loopne das push and pushf stc inc imul les rolb mov adc cmp (bad) in and cmp mov shlb int3 mov adc inc inc or aas push dec out push mov xchg jl fmulp push lods or nop cmp sahf rolb ffreep lcall mov dec dec inc xor (bad) pop in inc jo lret cmp xchg dec jb mov std jge idivb inc movsb lret in fsubs loopne adc out dec lea iret iret addr16 lret adc insb enter out inc rclb repnz outsl neg out push or push inc clc mov or repnz push and pop stc imull dec es imul (bad) jg roll push cwtl in adc sub push stos cmp dec outsl xchg dec pop mov movsl (bad) fldl cli mul cli add loop or xchg mov inc faddp sub xchg mov adc dec xor ss es or enter xchg dec imul xchg pop ret and and addr16 ja clc arpl add call xchg lds xchg sbb sub into xchg aaa int3 adc sti outsl pop pop pop mov sar (bad) ret les lods push test dec and ss cmp sbb addl insb cmpsb idivl inc out mov pop pop es sub jns mov xchg loope and inc aas pop push fdivrp and adc (bad) xor out jecxz and pushf gs adc add push sbb sbb sarb mov mov inc adc int3 xor cltd sete jo xchg jp sbb xor callw push sbb (bad) jno pushf dec loope lods lods out push mov push shll orl mov jle lds fs ret sbb or push ret (bad) or ret push sarl lds rcll cld daa mov lock and gs xor sahf mov out cld cs inc pop pop lods loop mov inc in call pop and inc inc sub es sahf dec pushf ds adc insl dec xchg jns (bad) or in push cmpsb dec sbb fildl lds mov xchg mov mov push rclb jno clc sbb mov fs dec (bad) mov jne in cmp xor pop xor sub dec in xor sbb inc push jo pop (bad) xor pop imul and dec mov jg mov lea mov imul sbb and (bad) mov daa lods pop inc mov jge xor mov imul stc xchg insl pop mov out sbb jbe sbb (bad) mov cmpsl aas jo aam mov repnz test pop (bad) cmpsb and xor mov das cs inc (bad) cmp push dec mov mov xchg adc and pop adc mov jmp hlt cltd sarb in hlt btr cmp loope pushf fbld xchg arpl inc in sbb fsubrs aad ret rol (bad) push (bad) cmpsl mov imul (bad) shr jecxz mov ja pop idivl imul shl call push insb dec (bad) mov or and lock popf push lcall loope ja jnp sbb dec fs dec imul jl (bad) and jmp popa pop jle movsl loopne adc xor fwait in in and mov cld xchg jae cli inc dec cld sub push in fsubrs fist pop sbb cmc sbb sbb mov js or hlt jecxz divl xor repz movsb or test jbe movsb popa ret mov sbbb cmp (bad) dec aas mov dec push movsl loop sbb pop ljmp (bad) mov imul sbb mov addr16 and (bad) jbe fdivs mov mov movsl dec add push lods dec out push pop push xorl int3 or nop push inc out jge jne nop out iret mov arpl mov adc push dec lea sbb idivb int3 imul (bad) aaa fs adc mov mov fimull loop fisubr push scas test sbb adc shll dec (bad) cmp test sarb xlat push xor xchg dec popa xchg in cwtl or push xchg push xor inc ret push sub jae addr16 xchg insb adc les (bad) sbb cli stos ljmp sub mov dec jge inc (bad) mov and jae adc jle outsb ja stos mov adc (bad) ljmp test mov sbb sahf jne insl (bad) dec inc push lock daa pop mov pop cmc mov xchg popa cmpsb into mov fmul sbb (bad) sbb insl pop aad dec or sti or and cmp imul int3 mov test std dec clc in adc mov (bad) jo aam xchg addr16 adc mov decb dec dec mov pop or aaa mov xor loopne mov or add push test fwait dec dec or or jno dec fstl cmp lea push pop int3 dec int3 mov xor ret jo decb enter movsb or mov or inc out push push sbbl ret gs loope out sub dec sbb call fs dec jg xchg inc not mov (bad) test hlt adc xor xlat adc lret int3 inc stos lahf dec cli addr16 fmul imul int3 cmp iret loope push inc (bad) sbb orl cmpl push push pop dec jnp nop or test sub sbb ljmp stos jb pop bnd push ja int3 mov cmp shll ss movsl jge imul hlt pop dec sub sarb hlt aam in add jno mov arpl adc cmp sub add dec xor push cwtl dec (bad) (bad) out mov push popa out subl and sub cmp repnz (bad) pop rcrl popa dec jo scas out arpl dec sbb pop xchg stos andb ss cmp fs dec inc mov (bad) dec rol sbb lea and push es cmp xor andl sbb jp negl gs dec push daa pop cmp and outsb xchg jmp xchg xorb je and aad push ficom sti loopne stc push ret and jmp bound and or mov imul leave push xchg imul aas jp jo enter dec insb sub in out xchg js cmp sub or mov mov popf sarl ds inc mov lret inc inc xor xor xor (bad) jno cltd aas lods jns cmpsl push aad popa fisttpll xchg out and xchg (bad) sub inc es xor dec push fdivrl icebp loopne,pt mov fisttp mov stos pop icebp mov and push jge and popa pop data16 pop push xchg mov xor pop aaa cmpb mov jb les xor in jnp and jbe pop pop call jno scas inc cmp sub cmp insl in out jnp sbb cmp movlps or repnz push insl dec push jno cs jns mov and in mov iret out dec and add jl test in enter clc or cmp sub aas jae and xchg mov sub push jo inc adc retw rolb inc loope cmp dec lret sub lds jmp jbe test xchg popa and insb lret popa add (bad) bound rol gs dec sti and outsl fwait ret dec mov jl push pop sbb push mov pop mov pop rol out or movsb dec scas add jae adc jne les shll (bad) faddl fwait xchg inc sub lea lods (bad) adc stc mov cmc mov test jno repz test xor xor xor mov js pop repz mov into popa push call or in sbb mov xchg int3 push mov sbb mov adc nop outsl mov not sbb add cltd (bad) rclb or ss xchg sub mov gs call mov mov arpl mov push mov pop xor jge and pop push test inc push pop jno mov jl rcrb out lahf or xor xlat mov adc into and inc aas or and imul es sbb imul shl push mov fwait sbb sub in mov js jne and and sahf jb pop bound aaa mov xchg sahf rcrb add mov dec or fistl jae rcll test xchg aaa outsl in sbb push xchg inc (bad) xor or dec xchg mov push jmp push popa cs sbb fs insb cltd popa xchg faddl mov jb adc inc jmp sbb into push incl push lahf or push push inc and cmpsb dec inc repz (bad) (bad) add inc mov in outsb repz and mov and inc push fmull fbld in and push xor xor mov mov fidivr add insb je incl cltd mov mov jo (bad) sbb push mov jno sub das loope loopne push mov sbb (bad) push sub inc xor in mov sub lods add (bad) fwait aad xor xlat loopne push xchg insl (bad) inc cmc cmp push ja cmpsb mov stc push mov jbe mov iret pop cmp insb mov xchg insb lret (bad) mov xchg into and sub adc fidivl addr16 xchg fdivrp add push jmp push sbb pop push or addr16 jne out mov mov cmc pusha mov addr16 pushf (bad) icebp insl sahf loope sbb dec jbe mov jge (bad) repz jmp push aad loop pop sbb pop aad fsubs xor daa xor inc dec lret or inc push dec pop test repz stos bound lcall loop out sbb xchg dec inc pop int3 hlt int3 dec data16 dec (bad) iret fwait jne sbb not out sub aad mov bound xchg xchg cmp (bad) mov pop xor or xlat mov sub sti pop push or sbb fs push jno mov xor iret out xchg iret mov cmp fisubrl out je dec mov jle stos pop idivb cmpsb das sub ret fcompl xchg mov out mov sbb or out jecxz repnz mov arpl aas fisttpll arpl mov pop jmp fisubrl into inc ffree mov jno push fs sub jp call sub sub cwtl sti and enter lods sub stc shrl jae inc jl clc add gs mov mov sub cmp cmpsb pop and mov cmpsl mull push int mov arpl enter int flds ret mov int3 adc dec movsb std mov cmp adc out mov lock js call test dec ljmp shrl cli sub or push dec inc cltd jae aad repz inc inc sbb mov mov mov and mov shll jne inc loop sbb mov or dec inc cmp dec in aam mov pop or xor mov jg mov mov aad push sub sub xchg jno jno stc lcall mov sub cmp sub mov jo negl mov dec inc sbb jne adc fldl2t push inc push (bad) mov arpl inc jle inc (bad) lock cmp or lahf insl rolb lea movsl lcall or mov stc nop rcrl adc pop daa fsubr lcall cmp lahf lret xchg rol lods push rolb scas ret cmp xchg dec jno sbb and cltd push xchg lock mov das lea inc cmp (bad) je sbb pop jecxz gs jmp scas popf test jo sbbb ret fcmovnu outsl cmc repnz (bad) call outsb andb add (bad) nop sahf or cmp popa (bad) or outsl fs dec mov jecxz dec sbb or ret sub sbb jno stos sbb mov and and mov push add mov faddl or sbb lods push cmp push aad cltd rclb in or mov xor mov mov negb rcrl das inc dec loopne int stos aaa mov insl aaa pop adc pop in mov rcll test jbe xor and sbb dec in xor imul pop and and adc stc arpl mov pop into lods push add mov xchg (bad) dec imul adc and mov add cmp sarb push mov icebp mov gs aaa pop push outsl cmc jmp loopne test (bad) outsl fstps dec xlat fist mov int jge xchg pop jo sbb aaa sub icebp inc stc (bad) inc push mov pop (bad) int add or dec repz movsl adc add test outsb jge ss fldenv bound dec (bad) jns js lret mov fisubrl cmp xchg inc cmp sbb (bad) adc mov imul push dec lea cmpl lock call and jp xchg ss jl scas mov int and (bad) out arpl mov xchg mov in pop xor repnz mov imul cs xchg pop sarb fsts iret push mov pop fildl xchg cmc add fildll adc push xchg test and hlt mov movb outsb or loop nop mov std dec xor or push adc popa punpcklbw ret test xchg mov add aad jbe lcall push loope cmc xlat adc lock and push xlat hlt arpl sbb xor xor inc (bad) jecxz cmp sbb les mov mov or lods jnp xchg movsl lcall add rorl insl cmc cwtl fiaddl inc sbb inc out aam adc (bad) pushf in lret cld insb in mov (bad) jmp mov jne (bad) push mov pop mov inc pop pop out or cmp arpl or insl mov aas and fdivrs out or xor push cmp xchg mov out xor stos mov stos lds pop and add mov ficoml mov mov daa push les inc shrl pop cli ja iret xor test sub bound (bad) add and cmp cmp in xor ja test in sub mov mov jg jmp jb out (bad) int std aam inc ret ret lds inc jp pop ret push sbb jp cmp pop push nop dec mov push add gs pop (bad) push mov xchg cmp lock sub sub cmp fiadd cld pop lcall pop jle jle sub jae mov inc or loopne (bad) cmp jecxz frstor xor xlat insb lcall and mov jnp jle pop jbe adc inc push iret cmpl push mov ret leave lahf xchg add les incl fs cltd sbb data16 pop (bad) lds add js pop xlat push ret xchg cmpsb and ss stos cmc dec jg xor pop xchg xlat fnstenv push aas inc lds cltd fsubs ja out and (bad) push in dec (bad) (bad) mov pop (bad) repnz mov ret stc adc cmp xlat cmp jbe,pt cltd adc pusha or insl mov nop lea dec sti or mov aas push xchg add in loope dec jno xchg lods inc jae popf idivb cmp hlt jns xchg mov or pop out push xchg jnp int3 sbb es push dec and imul dec mov aaa stc nop (bad) xor dec aad and pop pop cli or ret mov add in push mov mov lret push (bad) xchg pop inc inc xchg out mov push and inc mov int pop insb insb adc out mov idivb inc mov in sub xchg sbb xor out xor add jno sbb xchg push push int3 cmp int3 pop and dec repnz cmpsl xor bound cmp insb std xchg sbb mov mov jo js xor scas and cmc jmp mov mov adc xor mov xor pop push cltd fstl sbb pop push in push in xor pop in inc addr16 mov cmc adc adc pop imul mov push mov or aad push test pop pop outsb orb cmp (bad) sbb jmp (bad) push push mov push out mov lahf mov adc xor sub cmp xor aaa fcomps xlat inc jo mov outsb mov popa fistl mov int3 repz adc sub jp push lds pusha cwtl push nop sub ret pop lea dec jle ss mov stc out sub jecxz lret pop cmp sub cmp pusha data16 repz in xor or cmp fstpl (bad) loop mov mov gs adc add xor cmpsb outsl mov or clc cs dec and jae push xchg outsb cmpsb testl in das inc sub cli jo sbb outsb ds pop adc pop fnstsw pop ret push lea push add insb std cmp popa pop inc pop aam sbb rolb les stc mov mov sub cmp add jl fdivr and lret repnz or inc test setp push mov mov stos mov cld lret push sub mov ja test inc ds dec pop movsb cs mov push stos out pop sbb fs sahf xchg and jge insb xor dec test out and out lods push sbb js xchg outsl (bad) aas aas xor mov nop ljmp jge mov and adc xchg daa xchg lea xor xchg scas mov dec jno test and dec outsb inc mov mov out or clc jge sub ror mov in dec test gs cmp or stos faddl pop movsl adc (bad) cmp mov jns aad xor lea js bound pop popa insl push add xchg mov in cmp loop enter inc lret xchg lea int cmp mov cmp adc inc lahf jg aas sbb (bad) mov sbb fwait mov fcoms popa inc xor outsl daa dec (bad) lahf mov fwait repnz xchg dec fcmovnb loop jge mov inc add or int3 lahf popf jmp in pop mov adc push addr16 jo mov mov adc icebp sub pop jns xor mov add sub sub and test mov dec test mov jne scas nop outsb fwait adc or and and xor xchg sbb leave xor lds xchg lahf xchg arpl scas notl pop mov in or (bad) jno jb pop mov rorb and pop push sbb add rol lret (bad) lret enter jbe inc pop lret mov lret jb sub sbb out jl adc test popf mov lods (bad) lds (bad) out and imul sarl sub pusha popl mov je pop pop int mov pushl and push fstp insl call xchg arpl (bad) push mov pop int3 test (bad) testl sbb cmp out imul push dec imul pop and jge push mov stos adc add jmp inc pop jecxz pop das scas pushl ret dec adc in jbe xor cmp loop jl pop inc cmp xorb pop insl xchg dec mov in les lea aad je cmp fdivl out mov push jge testl dec jnp mov push cmp sub sub scas or jl stos jo (bad) mov int xchg hlt mov jae or aas xchg out movsb fdivrs data16 cmp mov jecxz or dec repnz and and or aad add add xor mov xchg sbb cli int fisubrl xchg test (bad) mov dec cmp and call jns xlat stc dec in je fdivl sub cwtl cmp xchg jb push scas inc je mov and xor test cmp rorl insl (bad) call mov mov pop mov fwait pop mov push adc cltd and (bad) lsl jl sub cmpsl lods aad cmp mov dec push jnp jle sub sbb lods fdivr mov inc test mov loop clc dec cmpsb dec or aas mov pop mov mov js jle add mov jecxz (bad) mov lret push mov fimull fs xor xchg data16 cmp ss fisttpll inc mov outsb push lea lret push jns clc pop cli nop movl mov cwtl js add sbb or and in lods push cmc pusha cmc daa cmc sti outsb fsubrl push je aas insb jp out or stos aaa enter inc loopne xor pop mov lods inc aas lcall push inc xor lods xchg cli pop fildll or clc (bad) cltd pusha pop popf insl dec and enter lret ja cmp sub in out popa mov repnz push loop and jne push xchg jge dec inc lcall and clc out arpl inc cmp xor (bad) clc and sub inc inc aam loope pop xchg mov hlt cs or pop arpl bound cmc mov adc mov pop or jno sbb loopne or pop inc cmp push repz aam push dec ficoml imul clc pop sarb xchg mov cwtl (bad) ja mov imul movsl into dec out outsl lea sub sub inc xchg cmp dec or add dec inc addb jne add mov jae les iret push and clts dec push cwtl pop xchg movsl push sbb sbb jl,pn lds push cmp adc mov int3 xchg mov inc jne lret pop (bad) lret push leave push in je dec lea jl push sbbl push rorl xchg insl mov aad gs clc (bad) lds jge lret inc pop insb and pushf divl jne sub mov fs hlt and nop add into addr16 insb sub jns sub iret decb adc jle jae dec in sbb imul xchg cmp inc (bad) bound or mov push jae xchg sbb outsb imul sbb sti adc add pop add sub inc imul in insb addb pop cmp jg jns or add add mov fmull dec mov pop pop pop in jecxz cmp pop pop int icebp push mov (bad) bound mov add pop mov push push imull aam or (bad) fcomip out out and aam inc jbe sbb push mov cmpsl hlt in dec cmp cmp iret cmpsl xlat or je mov ss lds aas fisubl ret in xchg inc sub test lods xor lret dec mov mov cmpsb dec cmp xchg loopne ja out shlb sub stc insb xor add inc cmpsl stos out sub (bad) js fsubrs add jne pminsw pusha std test add dec jmp cmp sub xchg out out inc mov in sub mov pop add daa jo lods inc or sub jl (bad) insl cmp mov jge dec test (bad) mov rolb mov in sbb xor enter lods cwtl int3 (bad) dec push pop xchg in cmpl pop mov in add mov mov sbb ja cs mov sub lods shl ja pop pop push jmp vmptrst inc xor imul in aam jecxz xor outsb loope inc lcall (bad) mov or fisubr ja jns fcomps das lods jp (bad) push bound outsb out sti call mov fwait bound shll (bad) dec test sbb xchg out add mov outsb mov adc rorl fldl gs imul les fwait jmp js push push out jae mov xor xor or loope stc outsl adc push icebp mov cmp (bad) jb aas cmp lahf (bad) stc mov dec dec push test shrb in or pop cmpsl adc xorl adc sub fadds popf mov into jge mov and cli ret gs push dec xor jnp loope lcall push jnp repnz adc mov pmulhw push dec (bad) lcall stos popa pusha add and jbe push fcomps mov push aad push (bad) lea mov nop push hlt xchg sub repz cltd in push pminsw mov lret xor fcmovu add loopne arpl jb xchg push sub xchg pop aaa rcl jns cmp xor push ret cs clc mov sbb add sub pop out jle mov push lods out lds cmp (bad) mov mov fsubrl push int cmpl sub pushf iret or mov mov sbb dec pop sub nop pop dec in movsb cltd fcompl daa cmc fcmovnb (bad) out or inc xchg add stos xchg mov adc xor (bad) ds xor jb lods in push stc push loopne test add mov (bad) insl fisubr aas stos fs cmc (bad) fs pop repnz decb ret inc mov mov adc and out scas xor in cwtl mov inc sbbb ret imull call dec aas aad imul inc daa fsubrl sub stos fstpt add sub xchg jo jp fwait std xchg xchg push fimull repnz ds ret or dec xchg loopne std inc les mov jp adc aam mov pop mov lret sbb fs (bad) rorl xor stos gs es out jne ror imul push and adc push cmp lods pop mov mov xchg mov sbb rorb jbe fildll adc mov cmp xchg xchg pop inc pop pusha cltd mov xchg pop data16 (bad) daa hlt pop lods jecxz add sbb test js add jbe rorb aad and jl or and jbe imul stc icebp dec sahf (bad) fs and cmp test push int3 fsubrp pop jecxz mov mov imul out and out xchg ret cs sub push rcl inc aaa out lds shrb in xor push inc cmp cmp dec dec sarb (bad) sub ja jle lods cmp jne lods je sub jbe scas push jae push lods inc dec sub cmp nop mov dec mov add test daa xchg inc loopne or push ret sbb mov iret jae in ljmp push dec xor sub or jae sub add jbe adc xchg add pop sbb jecxz popa repz mov std (bad) mov jne data16 cmp jns pop arpl mov jl jge sub or mov inc and imul rcrb mov lods xchg or mov idivb mov adc push mov ja lds xchg loop xchg out (bad) adc insl pop sbb dec fidivl inc dec push sub cwtl dec ss sub in cmp jno in jae jno and mov add add insl push insl mov std push sbb and jnp fs andl je enter mov xchg arpl addr16 xor fdivl sub xor (bad) push insl pop inc mov pop mov cwtl ss xor or or dec (bad) fs pop sbb push (bad) movsb arpl inc add add fisubr pop dec dec push das (bad) rorl cmp ficom in pusha pusha test bound out mov adc insb add xchg cmp imul outsb fdivl jo mov adc mov jno in movsl (bad) jmp pop sbb jno mov mov cmc xchg push idivl nop or daa dec xor dec xchg xchg int ficomp decb mov mov repnz push jbe mov rcr ret (bad) ss in ja mov inc mov sub ds das inc inc imul dec cs xor xchg xchg dec cmpsb cmp aaa mov popf rorb push push pop mov xchg push (bad) cld mov insb out popa faddl sub add mov test mov adc rcll outsl mov cli and fisttpl mov aaa pop gs pusha mov sub stc sbb gs jmp inc arpl or arpl push mov out push mov push (bad) out add std adc add push jb fwait cmp mov cmpsl cmp jbe ficoml lods and (bad) push xor push inc pushf jns jp pop mov das cwtl mov mov inc rep lods repz out repnz and and sub cmc cmc or scas sub aam sbb inc push jp dec aaa inc iret mov out in cmpsb in loopne xchg hlt je push push xor pushl cs ret rcrl cmc xchg dec int3 mov shrl xor mov bound mov leave jne or pop mov addr16 dec sub outsl out clc push xchg pop mov jne imul inc jecxz fildl and nop fisubr push push fldt jmp sbb ret inc pop add ds in ret pop and or push and lahf insl cmp dec imul mov push fstpt cmpsl xlat sbb push aas testb fwait lcall push fsubs mov push leave push dec ficompl sbb test addr16 mov mov jl in popa sub pcmpeqd pop or iret outsb sbb xchg mov adc and or jg out mov and insl pusha push ljmp jo xchg mov add mov mov rcr jo cmp sub mov and pushf gs or arpl jno sub adc out out and mov xchg dec push test or dec es push or inc nop sbb mov push nop mov xchg (bad) iret out or cmp adc int insb xchg jne les cmpsb mov jns xchg sbb repnz rorb lods es and pop sub adcl and jecxz push jbe xchg loopne mov fsubrs cwtl jle sub jno push aas (bad) sub orl ret mov xchg or push iret xor adc lret call push mov lea repnz push xchg inc daa out mov lock push icebp prefetch sub daa and aas mov mov outsl call inc push mov cs and jmp and pop js sub clc mov (bad) loop dec fs add mov (bad) push xchg or sbb pop cmp xlat loop,pn cmp (bad) sbb fstp fucom cld mov inc bound mov jbe mov aas lock mov mov insb lea out pop orl pop lret or rorl test data16 inc bndstx sub enter dec mov cmp xchg xor lea jnp jg nop movsb xchg jge pusha inc xor or popa lret shll sbb or jmp mov mov inc stos les shr clc pop mov add sub movsb xor mov movsb adc sbb icebp mov pusha mov cmpl jno into or aas xorl ljmp cli addr16 call in fidiv and sub pop mov aas inc repz cmp sahf fistpl xor pop (bad) push sub gs aas and int3 xchg xor jge (bad) repnz paddb add cmp mov push cmp pop enter jmp add pop data16 xchg xlat mov sbb arpl mov mov jle push mov das xor daa aaa in popf inc jg mov push (bad) cmp inc neg mov jmp lods lods dec cs lahf sub mov and fidivr cwtl or ds (bad) (bad) sub push pop push pop sahf sub pop ret and div cltd lret sbb adc xlat ss adc sbb test dec xor inc push add clc xor sbb push push icebp jge sub imul xor jnp int out (bad) loopne sti xlat xorl adc icebp inc lds or loopne fdivrs ja iret pop or ja xor pop sbb sti mov xor and mov pop enter test add ds jg dec inc lods rolb imul (bad) movsb push jge sub cmpb mov dec xor xor xchg jns mov imul cmc or jo movsl xor add dec inc lods test insl pushl daa je push adc mov mov je xor loopne fwait adc push and push in arpl jbe,pn push mov mov rclb (bad) fs and inc fs in adc lea adc xchg repnz data16 xorl fildll inc ds xor int (bad) lea mov (bad) and inc xor inc ret shrb test movsl xchg fdivp mov jbe mov mov aaa jae bound ret dec sbbl dec dec mov or mov pop or xor xor insb sub iret pop pop dec lahf dec lock push cmp cli mov mov outsl xchg sub inc adc les sbb (bad) or xor dec dec int lods xchg lods add and pop test les pop dec dec adc aad test sbb pop add not sbb mov lods fs fistp mov daa subl xor stos aas jns xchg frstor aad inc mov lods cs insl stos (bad) inc lds mov loope pop push cmpb or loopne jbe add (bad) cltd push cld or pushf mov pop inc xor sbb inc xchg mov (bad) jl or int inc adc add push inc xor repz out jno adc das dec adc into cwtl jb push fcmovb dec scas sub xchg pushf in sub repz mov add into dec test test mov (bad) inc fiadd push xchg es clc mov cmp lea mov shrl iret xchg adc orb sbb ss lcall icebp push (bad) leave movsl adc xor sub jno popa add lea dec sub je pop test xchg inc insl pop scas jp scas xor push mov inc xor in push jo cltd mov or add aam mov pop jle pop mov sub (bad) int mov gs repz or dec fstps mov dec cmpsb (bad) testb ret pop outsb jo sub lods jg lods sbb xchg fcoms cmpsb int movsb jecxz sbb les gs (bad) arpl out in loopne push adc or js (bad) mov mov data16 test inc jnp mov outsb movsl data16 jno adc ficom pop (bad) out cmp icebp (bad) xor ja lods add loop add xor clc inc inc or push xor or loope and in xchg (bad) jecxz aaa ret pop lea int3 xor xchg in mov aam sbb pop sbb insb jno test dec mov outsl mov pop inc outsl stos (bad) mov mov std loopne xor and xchg or stc xchg fiaddl pop adc mov push in pop iret iret mov pop es mov sub mov xchg call call and pop sub shlb ja xchg jne imul sub loope ss lods cltd stos mov adc std push lret and lret lds daa mov and or inc icebp xor sub sub pop cmp and push iret sub push sub push outsb in popf in xor xchg pop pop adc jl inc hlt xchg adc and xchg stos mov hlt stos mov pop cmp xchg (bad) mov bts mov rclb inc jmp pop addr16 or aad adc push js push mov and push xlat inc pop ss fucomip xchg adc xor and (bad) fsubr xor in push push inc in cmpsl lret rclb call push stos mov gs push fnstenv or test xor loop adc dec test dec pop mov popa sbb add adc int3 pop addr16 push jp outsl mov pop fldl mov mov es in (bad) jno rorl adc icebp and lods cmpsb adc and (bad) jg cmp adc cmc imul jle outsl jge lods aad xor js orl icebp pop ja rcll in cwtl dec xor (bad) dec or jb sahf fwait add sub popa adc add rorl cld push push jge lock push int iret inc arpl xor movl mov iret in imul mov sub mov dec xor mov jg out xchg pop insb (bad) and in aam adc lds cmp inc jne adc lds inc dec mov mov lods xchg sbb fcmove cmp nop mov shlb lahf rcl frstor ljmp popa es push stos sbb arpl xchg daa or inc add xchg push xchg faddl pushf stc movsb cmp ret xor ret imul arpl xor das movsl push push push pop mov rorl fs push or (bad) pop and adc cmc mov mov cmp pop mov xchg xor popf lods (bad) mov sbb sbb jne inc into and mov int3 jbe jbe ret push arpl push xor lea ror push mov dec xor fidivr ljmp xor in stos or loopne lret iret stos push pop add test dec sub pop and arpl (bad) mov daa xor jmp push incl scas mov inc test std pop push pop xor sub dec push les cltd mov gs scas leave mov mov js cwtl pop iret push or ret int3 sti mov xor hlt mov mov jmp in jmp in fcoms notl pop (bad) in in pop push mov inc cmp loop push xor xor xor jne sub sbb mov mov pop call (bad) cmc or xchg mov adc rcr push decb push aam sbb js push ljmp and mov inc movl adc ds into inc or ret mov mov xchg mov adc aas jne fdivr inc in cmp ja inc pop jno roll aaa push sbb push fs es pop adcb pop out pop aaa push lahf addr16 and xchg insb pop adcb jbe add xor and xchg pusha mov adc sub xchg cs imul in gs mov fs mov hlt andl rcrb cmp call mov cmp sub outsl addr16 dec call adc pushf and loop sub push mov rorb das rcll pop inc adc (bad) mov lea icebp fild dec fcoms lcall inc mov and stc shr or inc loope in pop push roll inc mov outsb in dec test adc and jno or adc movsl iret test and pop adc sbb rcrl sbb or xor loop sub gs adc and add inc in pop sub or outsl mov movsb repnz repnz popf pushf bound adc (bad) ds mov imul iret xchg test lcall push dec imul sub jmp adc loope mov adc inc jmp in mov add push xchg or push pop mov je (bad) push test sbb mov mov mov or dec jbe xor inc mov push or or or xlat lock (bad) loope sub xor dec inc popa test cwtl adc (bad) int3 lret push je aaa xchg cmc dec pop bound lret jge dec loop mov sbb cmp js mov or inc mov xor dec pusha cwtl jns outsl push insl mov movsl insb sbbl icebp stos xor (bad) xor sbb add pushf popf adc popf adc (bad) push jbe leave pop cltd mov mov insb int3 flds dec xor inc out xor pop pop lahf sarl dec adc (bad) fildll jge ljmp sbb or inc adc add push xchg sub mov mov jle or adc inc addr16 loopne roll das cmpsb sbb sbb add sti mov aad popf test and mov decb mov dec jecxz mov mov xor or addl pop js ljmp xchg ret out sbb xor les and in clc in pop jg cli ja lahf dec in or cmp adc mov leave popa push jge push push clc aad leave aaa lea inc adc push mov mov push inc mov lea cmp (bad) mov fnop push dec or push mov jmp aas (bad) (bad) shrb xchg (bad) push imul push sbb stos sar pop popf dec pushw lcall mov jg (bad) pushl push or (bad) add pushf ret dec fsubr push mov dec cmp das xor icebp out xchg movsb mov lret enter or add (bad) sahf add dec sub arpl and lock push cmp push xlat clc outsl and adc cltd push inc push lock xchg rcrl in popa sub jmp outsb mov or daa dec mov popa aas scas scas push cmpsb icebp std push cmp jle lret inc sub (bad) fndisi(8087 xor (bad) xor add or fmulp dec sub mov inc dec enter mov out imul insb paddq insl jle mov and out sbb movsl add nop xchg popa mov dec les sbb jb jmp cltd inc xor les decl push pushf (bad) sahf add pop fsub inc push mov or call xchg loop add and ja insl icebp lods mov fs xchg daa add push adc out inc outsl adc (bad) and inc mov sbb stc adc pop fiaddl aam mov push and es mov inc mov js cltd and or pop pop jnp enter sub xorb repz les je pop das test dec fisttpll data16 jae ds dec xor sbb mov add sub mov sub es leave or push out lahf pushl ret sub add aam xchg mov scas insb pop add std inc aas xor sbb adc pop add mov cmp xor insl popa jmp leave cmp xchg mov in rcrb mov push stos xchg adc jbe adc std daa ja jmp sub or pop xchg xchg pop mov out popf xchg push loope shr push fnstcw daa xchg sub mov mov xchg pop daa jle inc addps add cmpsl lahf mov xchg enter mov adc jbe jge sbb jl inc stc adc int mov inc icebp cmp fld jle insb fwait mov in cli fnsave les jp mov roll inc fwait mov xchg aad inc inc sub das jecxz jns je pop mov inc ljmp inc ja sbb ja and fwait inc xchg sbbl aas (bad) iret push divb push add and out repnz repnz sub (bad) xchg insb movsl dec adc fdivs pushf insb imul sub (bad) (bad) ljmp clc push fstpl xchg mov mov fisubr xor out cmp sub iret push (bad) adc jge ret jo ja jb pop out andb cmp pushf nop pushf inc bnd addr16 lds mov push and gs jbe stos (bad) icebp add mov xor in test fisttpl pop shrl call pop xor push pop push inc rorl outsb or lret and ret sbb in pop inc mov out mov cltd mov cmp int aad mov cltd xor ss push in jnp addr16 jo icebp cmp mov push dec adc mov pop ret cmp ficom pop push mov sahf adc mov pop cmpsl jo mov pop inc mov ss lock mov and test push add fs add and fdivl int std push push sub pop mov push adc das (bad) (bad) (bad) in ss outsl dec cmp arpl and notl in std mov push pushf pop pop aaa dec pop sbb imulb in add add inc adc pop repz imul rcrb pop iret sbb dec add out push lock xchg cmp sub dec test leave into mov add pop mov or pop ds adc jnp mov or sbb ret popf pop cmc rcrb xor inc mov cld xchg fwait cmc shr push mov dec lret pop sti fcmovb pop lods cld mov mov test lret fdivrl or mov cltd das jl ret xor inc icebp aaa or popl mov mov xchg decl (bad) mov adc xor cs ss bound fnstenv popf stos xor fisubrl and das lcall (bad) lods fs icebp push mov xchg push push popf sbb or shlb pop push pop mov arpl or enter or test in call sbb cmovo loope mov or or pop call dec movsl cmpsb push mov and dec mov enter push jae mov or add mov mov insl add add xchg inc int fstpl push andl sbb rcr push daa xor dec and jno fdivp lods push ret lcall or sar js sbb rol sbb fs xchg dec inc clc or out ret js push mov arpl lods jmp push leave pop aam pop out in nop sub rorb mov mov test inc lock mov mov lock ffree inc std dec (bad) loope cmpsl cmp arpl insl sti int3 lock push pusha xor push adc jno out xlat daa fdivrl aad fadds adc outsl (bad) out sbb adc stos mov cld loop mov jne out sahf and lcall cmp dec xchg ret leave xchg cmpsb push sub add cmp stc lcall clc mov and push outsb fidivrl sbb mov rorb add add jno mov mov data16 icebp push imul je gs sbb ret cmp cmp aaa stos inc xor (bad) popa add xchg out jecxz pop test mov sbb jecxz xchg lcall pop or pop xchg mov ss cmp and xor lahf ljmp stos in in mov pop add jmp inc (bad) mov cli (bad) mov pop fmul add xor jl and lock mov pop lock or xchg or faddp or sub loopne xlat arpl mulb cmp outsl (bad) add out fnclex mov sarl fs mov js xlat mov and scas daa cli int3 jge lahf gs outsl movl lea enter mov push jo xchg pop insb or sub mov add insl stos pop or aad add xor jb or adc outsl (bad) add lret inc mov ljmp nop add push mov jp lret sub inc fs in cwtl inc insl adc push iret push pusha (bad) (bad) je jmp lahf lahf in add adc fidivl and mov dec jb pop popa or pop xchg fisubr adc out or cmp movsl sti inc fcomps and ret dec dec mov xor insl (bad) outsb or sbb lahf ret sbb stc or inc dec pop rcrb xor movsb int3 jo pop aas mov or mov ret cld xchg add cmp jle push gs sbb es std sub xor test arpl scas inc cmp arpl insb movl test (bad) fldl lock adc cmp (bad) fnstenv repnz mov pusha lret inc pop cmp rorl pop rcl andl lock mov sub leave or fist and sbb add outsl or xor hlt loope icebp popa fisttpl or sbb mov shrb inc push lods push sbb or loope xor jno jecxz push and push lahf pop negb cld and add ss mov pop ret dec repz fisubl ljmp push push lds dec test mov jb add insb dec push test dec jae pop gs stos movsbl push dec outsl jo jp adc pop in vfnmsubss jecxz jle mov in mov data16 gs cmc cwtl xchg inc adc stc sbb repnz push lea mov jae adc (bad) jae xchg in inc popa sub pop adc sbb pushf outsl adc xor subl and adc clc mov push sbb fdivr and jle test sub insl lret jmp add inc sub leave mov sbb cmp xorl push aaa sarl adc (bad) mov cmp test enter icebp xchg pop arpl fs or dec stos cltd aaa mov cmp dec mov sbb xor aas js dec xchg andb jno push add insl and xchg arpl push xor adcb imul inc dec es mov mov xchg ljmp clc outsl shrb xor push xchg sbb scas add add sub das data16 dec mov in jno cltd lock popf sub or in daa mov jo cld nop movsb hlt leave mov adc sub addl sbb lahf lcall decb out call rcrb fcoml push cmpsl fisttpl sub mov push out (bad) push stc mov pusha outsl clc add dec inc sbb mov add arpl loop cs leave inc fcompl jl ds iret bound cs int (bad) inc out and add (bad) ljmp sub xchg xchg scas inc pop push int sbb in jl xchg sbb sbb or sbb jbe imul mov dec dec sub aad scas stos jge mov incb test movsl imull sbbb hlt sub incb cmpsb and sahf cld xchg jns pop std es icebp popa xchg mov xor cmp add pop es data16 out mov in loope mov loope pop rorb roll adc jo lret mov cmp pand mov popf jae push mov lods data16 dec and rdtsc inc int mov cmp ret jmp push sub int adc std pop cmc push insb icebp xchg adc cmp and or pusha daa cmp mov iret or out sub inc js jge add xchg or icebp mov imul stos xchg out cmp (bad) gs jle aas cmpsl and mov push sbb mov (bad) sub lea sbb stos sbb iret add aad xor loop and out (bad) jbe imul lret inc dec mov inc fild cmp pop xor inc and popf xchg lock (bad) jl jg in add inc mov les xchg inc and pop popa cld cmc test aam inc gs xor fs mov pop (bad) stc int3 xor lret jg sbb mov ss lret insb add cmp or push push dec fcompl push incl mov and push ljmp mov pop or cmp jg movsl call (bad) dec and daa leave cmp mov adc loop enter (bad) jb (bad) mov lds add int scas lock inc dec in popf dec loop dec fsubl push sub jnp push jecxz pop inc dec fnstenv ret shlb jo add int3 and mov or add adc cmpsb and inc sahf icebp push sub icebp repz adc mov pop and and mov dec mov xor arpl mov out jbe adc sub add out ret cmp adc and stc xor ds out (bad) pop lds in loop adc add stos sub mov push or mov std add mov imul mov fidivl pop loopne mov push cmp pop pop in clc or stos add arpl pop (bad) loope adc jns insl imul out mov ds dec cmp arpl imul sbb add or stos lret dec clc jno push push xchg pushw iret cmc loope push or mov fistp adc fistpll dec and push inc cmc ret out add and es and and fbld stc cmp jle sub (bad) addr16 sbb push imul iret mov xorl aaa sub xor adc lods sub xor xchg xor cld movsl add out mov add in xchg add incb int3 stc push jle push (bad) xor mov pop iret dec inc mov push xchg jo jg cmp loope out insb jo mov and fstl mov adc sbbb and mov dec xchg mov push movsl jbe xchg sub sahf add jge sarl notb orl bound nop dec cwtl push std stos cwtl cli popf xchg push adc push pop and mov dec test cmp pop (bad) add aaa fcompl jnp push pop pop or cmp pop mov sbb aam jbe mov mov xchg push and fstpt icebp cmp mov dec movsl push fwait lods cld jmp or and out repnz popf lcall (bad) int3 push mov inc rolb mov lret pop sub pushf test ret frstor sbb in sbb sub add push sahf sub cld xchg test cwtl lods int3 into jae inc inc or xchg mov pop mov xor or inc fidiv jmp push jl insl sbb adc xor mov call fistpll addb push insl call mov (bad) sar pop cmpsl enter mov stc mov out mov das and das mov lds dec dec mov test out clc out mov rorl or icebp je rclb adc xorl fwait xchg mov inc jmp inc cmp std sarl pop inc mov add loop push add dec xchg setge outsb push testl imul push inc mov sahf out out loopne inc pop sub lea aad xor pop adc mov rorl int ret push jne lret pop dec pop out xlat insb out jl (bad) xchg bound push in stos gs xor lods push ror jl mov jnp in jbe add lods cmpsl sbb pop jmp sub fwait loope lcall pushf arpl arpl pop or push sub push std inc xor call xor push sub or sbb cltd adc jne fdivrp mov and and aam (bad) aas (bad) les add pop mov test push mov repz mov mov stos sub in mov push loop inc popa push imul inc push outsb popf imul fs xchg sub fmuls hlt pop inc or (bad) pop jp lock popa sbb insl mov sti xchg js push jecxz lods mov lret sbb ds or stos sbb inc pop sub sub pushl lahf enter sbb pop out bound mov insb sbb mov cmpsb mov adc jno jp add movsl sub popa or inc es sbb ja inc inc jge (bad) sbb out xchg mov add xor lods test stos adc pop dec aaa xchg std ss test sbb pop idivl and jo lret dec cmc jecxz pop ficoml outsl push push jns outsl dec cs mov mov icebp scas and call jg or sbb aaa and mov addr16 add mov pop mov inc pop sub aam cwtl xor leave push pop or sbb lcall movsl sbb adc stos lea int xchg (bad) mov loopne les push lods adc or lahf mov idivl int3 (bad) push imul xchg scas in sbb push xchg popa ljmp or and push sarb out ja and cmp mov inc push fsub movsl push push nop adc cmp push pushf xchg arpl jbe xor (bad) enter loop mov pop adc mov inc loop sar add iret lods mov into ror mov jge jl push sti stos lcall add or ret and pop adc push mov in aas xchg je lcall and int3 mov cmpsl mov sbb data16 and pushf fisubl mov sarb les (bad) out fcoms mov inc pushf mov sub (bad) mov xchg mov outsb xchg out mov ret inc nop (bad) aas sub aad test push movzbl lods adc pop inc cmpsl pop cli pushf dec pop push mov mov pop push cmp dec andl aaa hlt test jmp imul cmc pop mov pop push jg push enter push (bad) lahf jmp adc cmpsb addr16 xchg jg jmp into sbb jmp outsl jno movsb jle scas mov ss pop xor sbb and sahf sub cmp mov (bad) lock iret mov cld mov rclb sarl sbb xchg dec (bad) cmp pop loope pop jo mov push lock (bad) xchg aas pop inc and ret outsl sbb mov cmpsl icebp jmp jae and and sub sbb jns shll aam aam mov imul inc ljmp arpl mov mov add dec ja xor and aaa imul addb sub dec lea cmp lods mov rorl cmp xlat xlat cli or jle inc rcrb jg lea mov clc fimul pop cli xor jnp push sahf out lock notb xchg xchg fdivrs lahf clc jns ljmp inc sar stos cmc cs pop icebp xchg cmp movsl add mov inc sub iret adc mov scas sbb cmp xchg (bad) mov shr mov xchg lret mov jle jo pop cmp (bad) pop lahf pop adc jbe cwtl inc mov mov adc rcrb adc sbb jns add stc push inc mov mov or test call push imul ret divl mov xlat loope add ljmp cwtl popa test add js out imul jp mov ret add pop orl aam jle mov jo xchg sbb mov (bad) lock cltd sbb mov jge cmpsl ret pop mov ja jb jnp adc xor pop stc add jae xchg xor or mov jecxz mov and sarl push or std pusha xor jno or js leave and test or adc xchg mov xchg add sarl scas push xchg cmc mov (bad) and mov js push or imul sahf stos in xlat push in incl adc lahf outsl xchg mov arpl in fistpll mov das aaa jle scas out push incb and mov cld clc ds sti xchg aaa aas stos push xor leave jo in jecxz fwait mov (bad) iret add jo mov and cmp lret int3 adc xchg cld (bad) es movsl dec out loopne xchg sub leave (bad) xor jl xchg xor dec sti loope push mov cmp mov roll bound xchg stos repnz adc or jecxz rcrb lods mov js into mov lret xor (bad) dec gs aas loope push pop cmp add test repz out fs mov pop int3 shrb and lods pop mov repnz cmp (bad) or cmp lock mov pop push adc or add mov xor add or mov scas push (bad) loope xor les inc xor or or lret les xor xorl jnp iret push inc cli into fisttp push cmp arpl pop out push dec lock mov mov pushf mov out mov xor jno addr16 mov push mov jl mov or shrb lret in mov ljmp inc inc mov jb jecxz xchg popf lock decb lret stos pop cltd push (bad) pusha test bswap jno roll jbe int (bad) std repz push xor lret addl add movsb loop pushf sub dec mov ret cmp adc xor push push insl mov sti push daa or stos inc sbb ret mov cmp out jb lods push dec xor push xchg push repnz (bad) in insl aam adc sub inc int3 pop sub enter imul int3 inc inc inc (bad) scas mov add or int3 xor outsb lods nop sub jmp sub or into das adc mov or aam push pop and stos push pop adc ret ss fstp nop cmpsb sub push insl cmp dec adc xor or pop sbb sub xchg jno inc call cmp (bad) jo or loopne pop mov sub bound inc sbb add (bad) repz repnz inc ljmp shr and in add jns frstor inc mov mov fnstenv (bad) out (bad) into dec inc outsl or loopne lahf mov dec push sbb inc jbe loopne sahf dec mov stos neg in insl subl movd mov lea in imul sbb sbb cmp inc cmpsb cmp test (bad) cmp push or add push push iret gs sub fiaddl into sub and (bad) lcall xor leave fs xchg cmc stos cs mov xchg in mov inc cld xchg pusha int3 jmp cld aaa pop loope xor popf das push xchg test pop fstps pop xlat push inc add adc and decl cli sub dec push cmp js inc call xchg sysenter clc andl hlt inc mov dec arpl cs ljmp lahf push in fbstp notl dec xchg sub repnz or xchg cwtl dec and sbb xor pop jae cwtl mov out movsb stc inc jp xor sbb dec int3 sbb pop andl mov or lea stc inc xchg sbb pop mov lock out push pop shll adc dec int3 test popf jp push fnstcw fmull cmc sahf out inc ret and lods mov dec fnstcw or cmp addr16 ja iret add leave inc xchg xchg popf dec and add inc insb xor sbb lea cmp adc dec inc fiaddl mov xchg (bad) mov icebp fucom sbb movsb das stos push in add mov adc inc mov inc loop std xor push subl test cltd cwtl arpl (bad) mov push adc je jg mull (bad) sub jne mov pop lret pop jle mov dec push mull cltd and xchg pop movsl pusha imul neg adc dec lock sbb mov jb inc sub shll gs (bad) sbb pusha ret (bad) shrb inc ret push outsl mov cmp inc push sub inc stos add add cld jnp mov (bad) cmpsl lods xor test mov mov pusha cmp mov xchg and pop add daa dec jbe and xchg or outsb (bad) and in dec idivl ds add faddl lods push test xchg pop add pop repz cmp negl cmp (bad) push xchg fldcw push dec icebp sub jbe cmc cltd sub jg call push daa jle aas xchg popf or sub cltd inc xchg into arpl jns (bad) icebp data16 imul (bad) clc ljmp sub mov inc mov inc (bad) xlat or cld jae inc (bad) mov and cmp jecxz (bad) movsl js nop daa sbb popa and movsl xchg mov pop mov fidivl mov xchg jnp iret lret test mov jmp fcoms adc sub add cld call int lock or pop dec call sti mov arpl fild inc pop cmc mov aam ss and cmp in fnstcw out fldcw popa out inc cmp daa adc mov pushf inc shlb (bad) daa in add dec jmp (bad) out addl out in int3 std jns mov or cwtl test mov ss pop pop inc stos cmpsb pop sbb inc sbb sbb dec jmp (bad) fiaddl movsl mov arpl push daa inc lds sub sub mov lahf xor add mov cmpsb fcoml add pusha xor add mov aad in pop sahf bound jne inc cs pop movsl xchg pop xchg (bad) aas and (bad) int3 pop jb loope inc xchg mov in push test xchg xor jns mov gs cld push adc mov into and test sub lcall jne loopne rolb xor xchg ja icebp xor fild sbb push dec adc inc inc (bad) out inc cmpsb repz fwait rorl lcall mov xor sub push enter push out xor fbld inc inc je imul xchg in js loope cmpsb lret mov lds cmc mov mov stc sub jmp pop sbb aam push jae int3 hlt pop adc ffreep cwtl dec int ljmp mov (bad) scas push push push incb jmp jg mov (bad) xor pushf bound loopne into lods clc mov mov das lods sub out and clc jb pop in aas dec dec in mov xchg or cs jo and (bad) ret add imul jb sti dec test clc pop mov jb dec es sbb (bad) iret lahf push mov jp scas negl jb ret sbb inc pop adc (bad) cld xor jecxz daa roll jno xchg dec subl mov popa jge scas jns test pop call in addr16 nop cmp adc repnz inc sahf jp fwait mov mov xchg ret icebp repz mov cmp pop rdpmc orl out mov dec jnp sbb adc mov lock mov or inc ja or push pop xor inc xchg jae jge (bad) mov nop mov inc jno test mov sbb jle loop popa test test lods sbb pusha clc clc push ja (bad) ja outsb outsl sbb out lcall jbe sbb push dec (bad) out mov fnstenv out in in lods loop sahf lret pop cmpsl mov test jg pop out out adc mov out (bad) cltd xchg push xchg push scas jg scas xor int sbb sub or cwtl test out clc inc sbb rclb xchg cmpsl sahf pop sbb (bad) icebp push lods xor call (bad) jle cwtl (bad) pop cmp pop out xchg dec or outsl add jne clc fisttp jbe or xor (bad) cmp xor insb mov les movsl sub xchg lods push (bad) mov daa icebp add xor (bad) pushf mov imul sub mov dec jne arpl sti xor add sbb ret fistpl push (bad) dec mov (bad) aaa or mov cmp popa outsb sub (bad) fstpt bound je (bad) insl lret pop nop adc mov add xor inc fwait mov mov xchg xor mov jp into mov addl rcrb push mov (bad) sbb inc lods cmp lods test addr16 cmpsl loope lods lock sub or xor cltd es mov arpl mov movsl icebp mov popf mov dec lcall xchg adc orb dec loope (bad) sub push or push stos fwait pop sbb rcll scas jb add fidiv push out mov mov cmp jnp sbbl fcmovnb gs into mov stos push (bad) mov js pushf es in vsqrtsd pop and inc mov adc pusha jbe cmpsb shl leave pop push mov in dec aad insb outsl into leave loopne lds and add (bad) aam or mov mov push inc xchg sbb in stc push shlb add outsl or adc mov push push inc pop dec (bad) xor bound fldt cs roll or push es (bad) iret neg fsub call daa fwait loop add jle mov cli repz add xor ljmp addr16 jne dec dec popf pop sub inc mov dec popf jnp mov cs adc xor push mov sbb loope xor xor aaa add mov xor lds and cmp dec inc mov mov add out dec pop mov or aam (bad) mov outsl mov xor push jns in imul sub xchg (bad) out push inc (bad) notb cmp dec ds jmp test lock daa jae shrb mov push jns popa sar fs (bad) xchg stos xchg test sbb xchg xor jg aad ficoml pushf dec repz or popa jge repz xor mov ret in xchg imulb push (bad) ss decl fs add lods push and or out xchg arpl sbbl aad outsb ja or or scas cmp ret mov in or fistpll fcomps lea in popa dec or test xor dec fistp pusha mov gs push mov push sub sub fisubrl mov int3 lds rcll es inc mov push shrb push into pusha aas jle mov xchg cmc pusha std jnp push push dec mov hlt movl stos mov or imul pop sub fildl lods xchg cmp addl js test shrb test aaa bound sub or pop iret jno stos mov push mov ljmp or icebp leave and call push dec and push rorl out mov nop mov mov push int lods clc or xchg jmp sti leave adc jno jg mov je shl mov inc jo add stos fnstsw push js pusha js or cmp cmp shl mov and adc fisttp xchg lret push out dec push jae adc mov cwtl gs int out cmp add cmp movsl gs (bad) fild xchg cltd xchg imul push or aas mov jecxz fcoml push and mov insl sub lret jnp loopne insl jbe movsb mov adc inc cmpsb insl call loop cmp imul out fwait push jle scas push pop and push jbe in mov pop and and (bad) xchg push cmpl mov xor test add cmp dec dec sub rcr lcall (bad) or cmp adc data16 push sarl test outsl lods shll outsb repz mov ja push push add insb push lret dec in mov popa pop add xchg lods loope je sahf mov fdivr jo lret ret repnz (bad) (bad) ljmp aam pop ret scas gs lret ret inc mov mov cmp dec data16 mov mov icebp mov scas outsb cld daa jle push push dec dec clc fcomi outsl gs in push xor mov sbb js cmpsb loopne iret push mov (bad) jae cmpsl test dec sbb ret pop push pop out jns pop mov das cwtl sbb pop inc mov xchg lcall mov push sarb and frstor xchg mov adc aad dec push or test cmpl cmp or sub scas dec sarb fucomip hlt mov mov mov xor int out push mov lods ficomp inc cmp bound outsb iret jl jle jp idivb push mov inc inc and enter lsl xor push int3 jb ret arpl in cmc nop sbb aas xchg fldcw add pop push mov loop out js bswap pop out sbb ljmp xchg or push popf pop push adc add es jbe mov jno int inc push fs fs mov aam push fisubr in lock push and (bad) fmull jbe jo fimul or je cli call push mov sub test xchg ss adc enter pop pop fdivrs mov cmp push inc fisttpl xor rcl insl stc add ja mov push jmp bound jle leave clc inc jmp mov into pop mov mov push pop jp pushf dec mov ret dec lds xchg in test in inc push fcomps mov mov test ljmp fistl mov int3 push arpl cmpsb mov popa inc pop (bad) mov mov test addb cwtl daa mov scas out das pop ljmp bound lock bound jae (bad) popf scas (bad) sub pusha jne cs ljmp (bad) xor push sub cmp out mov or mov adc bound jg insb bound stos fdivrl clc and inc lret xchg inc (bad) and outsl or cs test xor dec sbb orl mov lock jne mov popf dec push lahf outsl clc inc xor negb xchg lcall push mov add fsub inc ret das mov adc bound (bad) push clc outsb and jns xchg popf (bad) add mov scas dec fwait push in cmp (bad) repz stos jl in pop mov mov sbb push lret cmc fcomps aaa xor pop fldt loope sub push movsb frstor xor adc hlt fisubr xchg mov mov insb mov icebp push sbb sub mov cld inc in mov outsb lea xor push pusha je cmp in or adc int sub pop mov lods (bad) cwtl mov mov fsubl imul (bad) incl inc jns jmp lods cld outsb imul push outsb imul cmc test sub or ja sbb ret pop inc pop stos rorl xor pop push in int3 xor cmpsl (bad) lods sbb and sub (bad) pop fwait mov jb add push test mov (bad) sbb pslld xchg sbb (bad) mov mov push dec data16 out (bad) arpl out sub jno pusha les and clc jo inc mov jge cmp in jge cmp aam shll push jle and in outsb add mov cmpsl sub add add lahf inc shlb add xor fidivrl jnp lods inc or nop jl fisubl pop arpl mov xchg shll add push jns inc aaa clc mov sub adc push pop aaa push add insl inc bound cld push sbbl sbb sahf push insl dec dec add dec inc xor jge inc cmc psubd lods cmp mov push jp sbb cli je test inc xlat loopne adc sub jmp sub sbb sarl andl popa loope push sub stos outsb ja add or test scas add mov addr16 pop sbb std int mov cld pop or inc xchg push into push hlt push cwtl push ja daa xor jp push jmp mov lods sub dec pusha sti push fs push (bad) sti dec sub and testb mov or fs popf mov push sub or les adc mov nop cmp and es mov fbstp hlt aaa xchg ds xor mov daa es mov lock dec jb mov add leave xor jnp movsl nop dec addl push mov or fsts adc and sub hlt xor cmp dec fstps adc cwtl mov sti imul movsl inc data16 cmp popf dec cmp icebp fbstp aad or pop inc sarl cmp add rolb lods jnp test out xlat in in sbb push pop mov imul adc cmp (bad) movsb (bad) jg lods pop inc jne jbe add and lcall lods or ret inc xchg loope jne mov adc xlat cmp outsl jp lods loopne cmovs std ds aaa outsb ss js divb gs mov outsb inc ljmp nop inc fsubrp repz gs in xchg adc mov mov pop cmp call sub pop jg pop in adc mov pop pop jb adc aaa rol js fisubr xor pop pop popa fild jns cmp in inc bound and pop cmp xchg (bad) int3 or test je xchg aaa add aad (bad) push int js aaa push (bad) cmpsl inc sub es aaa dec rolb loope dec inc sahf cmp mov mov repz test pop xchg mov iret mov jmp pop xor or mov xor je jne gs ficompl mov ror jbe addr16 jae or jbe sub mov (bad) jmp rorb repnz sub xchg dec add and outsl data16 insl repnz mov xor outsb outsl and (bad) and dec push pop push xchg test subl ret int3 jb mov out out jo and testl or mov mov popf adc xor inc xor add movb lock mov ss arpl popa loope and lock or cmp test jge in mov xchg in (bad) jbe cmc outsl cmpsl adc std insb jbe insb add fwait int3 cmp ljmp stos stos incb or mov and into aam test or aas ja xchg testb inc inc cmpsl mov sub pop int3 cmp push pop mov in inc cmp adc aaa ror imul dec loopne push addr16 outsb out mov iret (bad) jae cmp outsb xor sahf mov push push (bad) jne mov fsubs dec adc sbb mov cs xchg rcll pop inc rclb cld hlt test push mov jle decw sub jne dec bound sub gs inc pop inc in jo dec movsl (bad) jo test (bad) mov pop xchg mov xor and popf es lea dec repnz (bad) loopne imul dec xor aaa iret insb jecxz xchg push (bad) sarb adc xor or pop aad rcll or adc imul ret push insl sbb cltd cld (bad) and cmpsb add mov pop xchg mov push out in add cmc scas cmp dec (bad) push mov pushf pop and mov push lcall sbb sahf mov bound enter test outsb jl cmpsb repz das stc inc inc mov cltd push xchg sbb sbb mov (bad) mov sub push (bad) mov push in (bad) fisubr mov pop dec dec std lahf and mov xor les hlt mov cmp adcl aam pop and add adc pusha xor xor cmp sub mov pop pop shlb popf jb fisttp lret cmc mov mov push mov jle push adc mov or dec insb out gs jle jnp jo lods sbb mov inc scas sub in and mov shrl mov loope cmp dec inc mov dec iret xchg mov adcl mov pop mov lea jno lods je pop (bad) in out das cmp lea mov pusha in mov push pop lret or adc mov sub sbb cmp mov xchg add xchg rolb loop lcall or fs pop (bad) adc outsb jg cmp jmp iret inc jbe xchg mov mov iret outsb adcl call fs inc cmp (bad) loopne jg inc cmc push dec adc cld test jp jg or jmp and (bad) inc insb imul insl or xchg inc adc lds test popa lods or mov jne cmc mov inc push insl ds xchg out jmp add push test lea dec ss sti xchg mov ss (bad) insl ss aad nop sahf inc pop add xchg jb es cwtl fnstenv std ss jnp and idivl mov movsl fmulp and addr16 fwait push es adc cltd pop sub xor icebp inc pop push fisubrl test rcr in into cmovo leave pop or repz sahf dec iret lahf in testl int inc mov int dec daa pop repz xor and mov xchg stc push sbb xor bound add xor lods inc sbb jbe inc pop or es loope out cmpsb add xchg pop jo xchg test sub jae movsb and mov add jbe jb out sub iret pop push sub sbb jo mov loope loopne popf xchg and push lret shlb sbbl jns scas call lahf dec pop xchg mov arpl mov lahf and je inc push dec scas stc imul mov push pushf in push lret stc adc jo decb jmp jg in into lret fimul cmpl xchg jne test pop inc lea xor iret sahf int3 or adc mov mov fmulp sbb cltd lcall pop (bad) (bad) rcrl iret push sbb call mov add dec push lds mov leave sbb daa mov call jne jp stos test jp dec push imulb nop cli mov inc and mov (bad) mov (bad) cmp nop add lods add nop inc andl cltd xor jb xchg mov push add add sub icebp cwtl cmc icebp cli mov in dec in push pop ss mov addr16 mov inc fwait sbb outsl mov outsl sbb or ds or mov clc dec aas dec pop mov fdiv lods jne mov or mov (bad) lods jbe or mov mov push inc mov ja inc jge adc xchg sub scas xor pop pop jle test mov lahf push inc and pushf incl int3 fbstp testb js addr16 xor cld lds sub mov mov rcl out sti mov pushf lret ss mov add mov pop (bad) int3 seto xchg adc jb add cmp pop das inc xchg xor mov (bad) pop cmp mov jb and pop shlb mov test adc lcall arpl fwait jae cmp mov pop cmp int cmp cmc add adc jl push inc mov fcmovne inc ss pop into sbb hlt dec outsl mov nop inc insb daa pop pop adc xchg cmp or xchg sbb push gs out push pop jp clc push dec jb xor sub popf mov and sub rcr add add jmp pop sub loop sub mov mov in xor xchg lahf repnz lcall fwait pop adc pop xor loope cmc or sbbl jno jae or adc cmp sub mov cld mul loope mov loopne mov (bad) (bad) lret ss icebp cwtl test mov rcrb sub and outsb and lods mov stc pop lods and repnz test adc insb jbe mov adc out (bad) cwtl addr16 out pusha repnz nop mov insl pop pop call mov scas dec xlat (bad) cmp mov mov setnp or push icebp fnstcw sbb pop push cmp ret lcall inc mov xlat add lea ds test loopne push outsb dec xor jbe jl xchg mov jae mov add lea mov pop xor mov lahf cmp mov mov inc repz inc cli rol push pusha leave jo insb scas mov fsubrl das nop push in (bad) add lea scas bound fcoml inc or xor orb and cmpb ror ret cwtl mov xchg fildll repz aad pop jne cmpsb (bad) dec dec in imulb lretw add mov push sub imul fmulp inc add sub mov lret lret int cltd dec out pop loopne addps pop adc adc pop roll push and inc jns std andl (bad) (bad) ds loop xchg add int3 pop test std in leave rorl inc pop movsl jb jmp mov int3 jnp xor jl xchg xchg lcall cmp fsubrs or and cld mov or hlt inc jne dec imul xchg pop repnz addr16 cmp stc push sbb push imul xorb loopne lds dec jmp mov pop add cs push lds xchg jle and mov ret addr16 hlt and inc nop faddl cmp dec iret jbe lret jns cld cmp sahf test mov (bad) adc xchg cmp inc add int xor lret gs inc jecxz ror pop push or in sbb (bad) xchg and into out dec jmp in xor fisubl dec iret insl jmp jo (bad) in pop inc data16 test jns mov rcr cli mov push (bad) mov pop sbb insb xor pop mov ror std outsl mov (bad) imul int xchg jecxz loope mov jle cmp rclb aaa ss mov sub pop subl rorb (bad) sbb xor imul in daa pmaxub lcall fwait lret imul stos xor or addr16 rol sarb jle mov push mov or pop and xor add jp fisubr pop mov imulb mov inc add dec cs lods mov sub das fildll ss push mov pop inc xchg aad loop into adc inc mov insl or loop xchg into push dec pop sub add cmp repnz inc jo (bad) xor cmp and push pop outsl sbb (bad) jne outsl jg jo push (bad) (bad) dec xchg dec inc pop push (bad) popa stos icebp aam out popf in lret cli push mov push int sub cmc mov hlt push sub inc cmp dec or xchg inc pushf sub push stc sub mov and pop adc je mov xchg scas sbb sbb loopne in sub dec out cmp mov and push dec mov mov lods icebp jmp cmc frstor inc mov and sahf test xchg add icebp cmpsl sub leave pop push sub adc test mov xchg gs push mov cmp push cli stc ljmp je pop xlat scas add ss pop cltd cmp test add push xchg in and shlb ret pop push add pop addr16 jp or pusha lds sub addb xor insl shl sahf adc xchg leave sub pop call or sub mov pop lret leave ficompl fsubrs push adc and in ret outsl mov or popf push ja pop sub cwtl rcrl push arpl xchg hlt cmp push out xchg push xlat push shufps xor jle xchg fcmovnbe mov popa mov nop mov test test cmp pop sub sbb push lods inc lahf push jb leave sbb xor mov mov lahf jo lea inc dec cltd fcompl roll gs outsb or inc or push mov or mov mov jno (bad) fsubr inc (bad) sbb fst fldl mov in jg add mov push pop nop test add mov and sub lods nop inc ret pop xor dec movsb sub (bad) mov jl inc int mov push adc fimul mov sub mov in aam adc cmp daa (bad) mov pop xchg loop movsb out pop mov fs add insb or dec xor (bad) sub jmp inc popa adc push orb ja or mov and or dec repnz lahf inc std xchg popf mov dec bnd incb bnd mov xor xchg and pushf mov sub popa add inc fwait inc xchg pusha cwtl dec add xor icebp mov lcall dec add je jp push pop pop fldl mov lcall out jb inc dec push stos lret or (bad) jmp dec inc xor lahf or test mov cli leave shl stos ja jle sbb mov (bad) jmp jmp sub (bad) (bad) cltd adc leave lahf inc adc lahf sbb popa mov xor jp or xchg push sub sbb push sub test mov pop push in push and xchg inc add jg int3 mov mov enter mov (bad) call adc daa out jae into sbb lret lods push jmp mov sbbb add std outsl popa iret mov fisubl hlt pop sbb or popf daa jl dec in jbe inc imul cltd cmc in call aas pushf pop pop or pop inc popa sub add cmp pushf push xchg cs dec leave mov jl cld std mov adc imul push gs outsb xor std mov jnp xor adc xor fldenv out int inc push jge cmp jne icebp inc jg pop pop jmp sub jbe and pop cbtw mov pop jae adc xor cmc push addr16 xor push cmp packssdw (bad) dec jae sbb lock add fildll push mov inc pop xchg push mov pushw lret sub add xor aam or imul cli mov inc insb test (bad) sub stos cmp in inc jb mov imul jge sbb sahf test loop (bad) pusha cwtl cli mov movsb loope scas and xor xor xor add add int3 xchg sub mov in jb cmp add xor jmp and and pop sbb lods push dec cmp jecxz adc mov mov sbb cmp stc sbb movsb repz bound xchg lret xor movsl (bad) das sbb mov cmc xchg cltd outsb cmp mov mov test add push rolb xchg pusha in xchg negb scas stos adc (bad) and jge (bad) mov add in hlt adc pop pop xchg repnz (bad) and inc into jg loope push dec push push in adc leave es push jmp inc (bad) mov pop inc ficompl jmp lods or insl pop mov cmp xchg cmpsl rcrb in or hlt inc dec mov mov sub outsb push jne sti test (bad) cmp sarb push sbb fs sub push xor out push movsl jns lret or arpl lret pop jbe inc inc rcrb sbb dec int3 int3 dec pop add lea in and xorl jb mov mov pop push mov adc std in (bad) lods fild jae jno arpl xchg jmp (bad) mulb xchg pop xchg mov loopne icebp cli jmp mov int sbbl scas cwtl xor dec rcll test mov test loopne fwait mov repnz add test mov scas mov xchg mov cld and add out mov inc rcrb xchg inc mov push loop imul rcrb push push sub repnz int3 fidivr pop stos inc cmp loop ret ret add dec addr16 adc in xor nop aaa mov dec rolb sar mov sub mov xor stos push cltd test sub imul inc mov lock push lcall dec xor push ss ss loopne jae push jae push out pop das push mov jne sub insb popa shrl xor lods leave fiaddl clc popa xor jns leave stos jne (bad) cwtl fisttp push mov out xor xor pusha cli xor dec cmp call mov jl push adc ret pop add bound push fdiv ret repz mov pop inc hlt jg bound fsubrp pop mov or in test inc daa test int3 adc mov imul out push icebp pushf inc imul mov mov mov fimul push push xchg and popf xchg sti adc add inc inc sub (bad) nop or insl addr16 scas into push enter jae and scas js mov inc pushf pop cmc arpl (bad) pushf push out addl xor clc xchg cs in or fsubrl or push daa dec add sub (bad) sbb jge imul int3 scas in push in popf or push add sub jne je int3 (bad) mov jmp push out insb pop jns add inc clc movsl add adc test add inc jne cltd dec inc xchg inc pop test mov cmpsl fdivrp push div bound stos jp lods xchg and and mov add lcall adc fbstp int loop adc pop lods jo stos or scas mov in and xchg and push xor push ss xchg out mov mov out mov adc loop (bad) add xchg out xchg adc cmp nop (bad) jo dec cmp xchg sbb das outsl movsb div cli push inc in ja mov shll cld jne cld jmp mov fiadd call xchg xor jecxz les fucomp push xlat jnp movsl xor (bad) lods jae test enter bound mov lcall scas (bad) sub xor add jo xor ss ret inc and ss xor mov icebp iret std mov or scas jo loope mov scas sahf xor jno jmp aad (bad) mov push lds mov enter jbe (bad) mov ja xor dec mov add lods fs mov push jecxz lret dec std xchg sbb int out outsl jb iret mov mov ret xchg pop movsl ds arpl inc imul and inc jbe sbb lods and cltd lcall aas (bad) xor cmpsl lea mov das outsl sahf (bad) adc mov pop mov add scas pop sbb mov sahf cli and cmp in pop leave dec xchg mov mov inc flds repz pusha dec mov fldenv add jl mov rcrl in loope xchg cs sbb sub sbb (bad) push ret or dec xchg call dec sbb sbbb ljmp pop mov mov ljmp pop daa rcll jecxz in pusha repz sub xchg aaa mov movsl lret xor clc movsb test or incb sahf mov or pop and or jecxz inc add xor push inc and pushf pop mov loop and loop fs push in cmp lods add inc cwtl test mov loope mul or cltd or pop lahf pop inc popf hlt mov ds mov and ret enter dec es mov shlb xchg jl mov mov loop inc mov popa rolb enter inc mov and sbb inc sub sub inc mov mov subl pop lock xor rorl dec insb mov or lret adc xor xor or movb cmpsb dec and (bad) fidivr aam rcl or fptan sbb test (bad) faddl aaa or rol push dec sub jns jb pop in jmp inc mov sahf mov pop cmp push js xchg mov ss (bad) mov and inc jl int3 mov and in dec lods and idivl or in mov gs jae xor mov pop jmp xchg into dec aaa out into subl mov insb stc add rcr xor jbe hlt fs sbb mov test je loop pushl mov loopne cld mov push mov notl faddp out cmp ljmp inc call fnstcw sbb (bad) bound cwtl call or xchg pop cld and jecxz in sub test jne lret out cmc jo (bad) mov jmp int jle and mov cmp sbb popa std scas fabs outsb pop cmc pushf frstor (bad) pop scas xlat sbb push dec aam das fcoml or add outsl int3 ret inc dec mov adc enter cs lock sbb rolb popf inc adc faddl in dec lahf lret mov pop fistpl push add dec xchg lds cwtl mov ja sbb divl mov mov add test push inc pop jnp mov mov std lods jo lcall cwtl daa sbb xchg mov pop into push int3 jns fmull sub add push sbb daa adc cmpsb ljmp push iret sub shr push xchg jl xor jnp fwait sub push push popf and cmpsb add sbb add scas xchg aaa mov jmp mov (bad) (bad) jnp mov lea sub xchg cs and dec cmp xchg mov dec jl inc dec ljmp push or rolb dec mov cmp pop aam jo arpl cmp xchg gs inc subl inc xor inc std aaa pop (bad) and and pop xor sub or and imul xchg push sub cld add dec sbb enter or dec scas jg sbb ret movsb pop cmpsl or je fs leave pop lret jecxz sub call sbbl jp stos jmp out orl adc pop stos pop mov cmpsb std sbb out push test push adc add xchg xchg pop sub aaa outsl lock xor jge into ss and fistpll in loopne cmpsb add jo lcall int3 sbb and mov or aam ficomp sub adc xor xor ret sub mov push aam sbb dec mov lahf insl xor pop adc sbb push or jns pop or mov rcll rcll cmp outsl jne adc push cmp sti adc rorl and (bad) add (bad) mov push push pop dec ficom (bad) xor nop mov std inc lods repnz repnz imul inc xor mov fmull and jl add xor sbb ss stos sub mov push fs roll xchg (bad) out sub sub jno mov mov or clc xchg mov mov xchg inc clc mov mov cmp xor add pop in push (bad) sub ret add jg popl div or aas das or and push test test fmuls scas add xchg sub fstps sub push jmp ss sbb dec jnp fdiv es cs inc mov jae or push or jle pop or imull test jecxz cli mov nop insl (bad) loop roll xor fisubrl pop push rorl pop insb inc inc adc sub dec add or sti pop insb bound sbb leave in inc inc int int3 cmp sub xlat xor xlat xor xor sub sub and xchg xlat pusha enter les pop mov stos push pushf xchg imul dec pushf scas push lcall mov stc pushl js pop mov stc or jnp adc xchg imul mov stc jecxz nop stc out xchg cmp mov stc out mov sub mov data16 push dec jge lahf push pop sub iret add (bad) fs push and dec and sbb nop xchg nop xor xchg sub push xchg call or mulb inc add stos xor test mov lret cmpsl in es jbe mov stos adc loop nop mov lcall or (bad) mov fwait adc cmp and repz outsl ret sub mov pushf jns mov (bad) sarl clc (bad) push add lahf add and repnz out and ds adc xor xor mov lods bound add add mov cwtl adcl mov or xor cld dec jbe sbbl (bad) dec dec push ja push pop negb shrl add inc (bad) cmc sub sub pop gs adc and dec iret mov xor nop or or daa cmp add jnp jbe repnz mov jge imul rol lea mov mov cmpsb mull add stc das add ficomp repz xchg cld call cmc jne addb mov push dec or adc mov ss or jnp es enter jmp push out dec xor and adcb fmull out ljmp jge aaa adc adc add pop push cmpsb pop (bad) data16 sar and xor cltd or pop or lods inc fmuls pop inc mov jno cmp sahf dec pop push (bad) movsl dec xchg (bad) repnz jno fs push add add xor push repnz mov cltd lret movsl sbb mov xor setne iret (bad) mov pop rcrb inc jle mov ret mov insl pop pop out mov jge popa pushf dec cs aaa and fs or repnz mov xor mov insl push rolb mov add das pushf pop pop popf and pusha movsb loop cmp stos pop (bad) ret jl add leave addl pop imul fdivrs loop dec daa int3 adc hlt in xchg test divl icebp dec addr16 addb jp mov test pop add aaa jg and jg (bad) lcall or cwtl push push std (bad) jno pop jle pop sahf jnp cmp in and andb cmp lcall jge bound adc ret push ljmp fs xor add cld test inc inc mov cmp sarb adc cmpsb mov (bad) cmp lret and mov jnp cltd enter aaa inc push fidiv std jge push xor jg (bad) loope pop mov mov adc xor mov mov (bad) (bad) push pop jno (bad) mov dec xor cmp mov out jle push pusha aaa push stos xchg mov sbb mov xchg imul pop mov in jae pop pop sub pop push cmp and out leave fnsave fs inc lahf mov and cmp push sub ficom add mov insb jle mov stc xor jnp jge ss mov call sti dec nop decl jb jge sbb out mov aas pop cwtl and ljmp in push daa add jne or mov cltd pop jnp push lahf add mov es pop sub sbb pop xor arpl das push xchg inc push xor call push sbb nopl add loope and adc sub xor adc lahf fucomi push ficom push cmp jmp jbe mov lds inc fisubrl sub les cmp decb push insb pop mov jno mov sbb ss outsb fldenv pushf mov mov ss mov ds into mov inc lds cmp pop push adc lds mov popf notl stos fwait xor or stos mov inc sahf ljmp fisubrl cltd in mov les xor (bad) sar mov mov insb or jns push dec lds pop jnp sub adc push loopne dec ja jo sti out mov pop sbb (bad) decl inc fstpt ds mov or add mov pop lds mov popa pop adc sub mov je ficom cwtl in gs outsb int dec push pushf push jle sbb (bad) mov jl cmp es xchg xor and xchg fmuls das rol ss rcrb mov aaa dec jge lcall pop sbbl add inc cmp out sbbb lock insl add rcrl sub cmp or pop cltd lods inc bound lods sub mov push mov xchg cs fistpll lds sbb and popa (bad) adc sub mov push jno call dec jg mov rorb push dec aad dec sub cli stos outsl daa xchg xorb xor loopne fisttpll jl jecxz sub inc mov cmp adc mov in mov pop mov repz adc mov cmp stos cltd add push pusha xchg enter int pop push xor mov pop or mov sub int3 fdivl lock cmp push sub adc (bad) or pop loopne adc xlat nop mov xor push aaa jno xor (bad) cld dec ret clc repz (bad) xor xchg xor mov lods pop outsb test xchg mov loop dec inc popa ret cmp pop push mov ficomp pop insb jmp stc xchg jle mov adc add sub cwtl cmp aaa lea sbb iret in sahf test mov aas popf jae in and (bad) enter aas pop dec inc (bad) cmc subl (bad) orl xchg push (bad) mov push (bad) lea pop push xchg lods rorl rolb adc push scas ds out pushf jno (bad) ljmp ja xchg mov cmp push repz in sub shll call sub mov mov out cmp fisub mov or adc in jecxz (bad) cld pop dec mov and lret lea xchg iret adc in sub xchg xor cmpsl add lods push loope push mov or xlat inc mov xchg and xchg gs test adc push push call dec mov fidivr dec sub jmp decb ljmp inc int3 or lret jmp movsb es jo lock and dec outsb xor pop ds gs ficomp push cmpsl or mov xchg fdivs lret jne inc xor sarb mov imul jns sub mov sub pop loop pop (bad) out enter pop push insl push in mov ss sub popf dec fnstcw cli sbb dec xlat pop mov outsb flds jp sub movsl pop int3 pop push lods mov add iret leave test or test cmc adc (bad) pusha push rcr jnp aaa in mov push roll xor inc jp adc xlat or lock daa out (bad) sub sbb push out out mov int lea lods dec pop push aad xor call sub fstpl bts (bad) and bound popa mov mov lock cld (bad) push fsubrl jp stos push mov xor mov pop push or cwtl iret insl push adc sub out loope pop adc cmp popf cmp adc mov jnp lods ret das in add ret and pop xor xor aaa dec add sub xor mov xor in mov pop fidivr xchg dec movsb iret xchg fldt outsl cmp (bad) and fwait mov pop ja push iret inc notb int3 jl xor mov mov pop sbb loop mov xchg push cmpsl jg and xchg in pop fidivr or push aam fstl sbb movb pop push fcomps sbb aad popa cmpl add hlt push rolb mov fldl jnp mov jno daa cmc sub (bad) fsts pop jg dec and inc fs movsl cmp or push xchg aas clc lock fincstp les insl mov roll xchg mov fwait sub jne and push add mov vsubpd pop sbb cli sub cli lea test (bad) cs cmp adc add push movsl outsb or movsl cltd fs outsl repz in gs and jne mov outsb (bad) in jno or cmpsb pop or dec aad sub in and popa fdivs push sti adc jbe mov mov xchg aam test out push push shl das xor das loopne ffreep loop push inc ja aam sub mov mov negb push jo jl sbb aam xor ret mov fucomp call pop imul inc (bad) sbb outsb dec test xor pop jg push cmc inc addr16 clc out pop xor mov mov xor mov pop flds popf push pop push push out es incl jl sbb imul cli lahf mov mov sub push jp scas cmp or and and inc nop mov xchg mov (bad) test xor adc dec inc sub int3 mov stos push sub imul inc dec in cwtl push cltd cmpsl inc lea shrl pop xchg jmp add lahf (bad) dec hlt cmp mov mov inc sbb in pop test inc push imul mov mov in (bad) push loop les xchg rcrl (bad) jbe ds jecxz mov repnz lock insl inc xchg ret jge cmc aaa jmp in jae mov daa call sub cltd imul adc call xchg push jb (bad) inc popf push add sti test bound fs test fildll pop cmpsb fwait mov cli jb sub cs loop sub cmp sub push jg or imul test arpl sub mov and fs nop and in mov pop lock ja (bad) out mov mov adc cltd cmp cmp sbb adc sub in in sbb fstpl mov icebp lods cmp mov jb rcr jl faddl mov fs add lcall stos fcoml inc dec and jmp (bad) je int3 sbb jb pop mov (bad) adc stos outsb push jmp xor xor jb xor repnz dec (bad) fistp fdivrl andb sub jnp sbb inc outsb decb lea (bad) sub adc je gs fwait and popa pop mov mov cmp pusha sbb pop data16 gs pop stos mov xor inc adc push inc nop mov loopne mov insl push mov mov dec js xchg push cmpsb (bad) jno or loop add xor hlt inc push imul xor push inc je jo add mov mov xor movswl push loope ja jg addr16 or pushf js xchg dec pop lods sub je push popf xchg scas jns std add inc arpl dec sub mov stos gs push loopne data16 push lods or xchg gs dec test jae dec pop cs sub sbb cmpsl (bad) je lret jl lds sub ffree (bad) aaa dec call mov pop hlt and lcall pop repz xchg push or sbb mov or mov cmp sub lret out jbe jg sub xchg adc sbb sbb jmp in jg pop call mov dec cltd ret cmp les add push aaa mov cs jo in mov outsl pop lcall inc sbb and out mov inc jp enter push xor (bad) jnp mov pop adc adc ret pop repz inc sub add xor hlt cmp stc (bad) sbb out inc push push cld mov pop pop test fsubr jo or test mov add push out add into inc add push mov push xchg fwait dec jge jl xchg cld push bound mov ss dec dec fcmovne in jmp stc xchg push (bad) insb ret int icebp (bad) jo sbb fisttp inc jno loopne jnp std push sub bound xor pusha adc in lock jno cmc shlb add lock mov (bad) cltd leave push xchg ret enter (bad) jne mov push call dec pop inc push dec pop cmp aad sub xchg xchg mov ficom pusha loop cmp fwait xor ficom loopne lea dec mov imul xchg add pop pop xor sub lret mov adc test les adc pop mov mov jno outsb (bad) cmp inc push test sti push or xchg aam xchg jne push cmp mulb pushf push jp (bad) enter pop sub xchg test push cmp ljmp ja dec xor (bad) cmc (bad) jmp fstpt jl (bad) and cs cltd jnp cs jns (bad) push and lods into inc lret aam push int3 out fstl push jge scas adc mov or add dec jg xchg lock sahf xchg loop fisttp add outsb sbb outsl imul add inc pushf dec (bad) sarb mov fdivl into pop divps jmp dec out int stos jnp je pop js leave outsl mov cs push ret mov iret pop pop xchg mov pushf xchg mov lahf jb or mov push sti adc cmp aas sub mov ss mov add jnp dec inc bound jge pushf aaa inc int3 jp les sbb push rclb adc inc clc pop hlt xchg movl jns sbb jecxz mov xchg xchg push xor xchg lcall jmp imul iret insb jp mov hlt and or sub jmp jle jne cmp pop mov (bad) or mov faddp fsubr mov sub sbb hlt (bad) clc loop adc fisubl jg jnp int3 fsubr jno frstpm(287 mov mov xor iret cmp inc popa jge lods stos cld xchg imul into mov out data16 in mov xchg xchg aam push outsb or int3 outsb push orl push pop mov lods int3 inc pusha push sub mov pop nop ss hlt mov sbb pop sub in push mov sub stos (bad) outsb andl mov sub or pop les or movsb in pop mov pop xchg cmp cmp xor sti add dec sub mov dec dec mov sete rorb mov dec pop xchg or jp cmp sbb xor fwait mov jmp xor mov add in pop pusha add push jmp sbb xor jecxz inc je jle incl jnp add scas pop adc sarl fstpl adc adc aam and les or ret jns and addr16 (bad) cmp xor xor mov xlat js lds aam mov push out and fsubrs mov pop adc jne xor or xor mov aam clc or cli ljmp ss lods outsl dec lods pop dec or icebp xlat cs push outsl repnz stc xchg push enter xchg mov or movsb scas inc out mov mov sub hlt inc arpl xchg add es cmp mov xor mov pop stc les pop aas pop inc wbinvd and jnp push cli arpl into xor std sub and adc adc mov inc or xor gs cs push dec and out push movsl ja (bad) inc and xor adc or adc or jmp inc std pop cli jge lret mov (bad) and rol mov sub outsl ret adc push xchg add (bad) mov sbb cld cmc nop (bad) cmpsl cli jmp lea das mov add test imul pop jge out and stos push add cmp sbb mov adc ja minps add int3 pop mov xchg out out xchg scas aad sub inc bound add and cmp ja pop dec mov mov lea mov aam movsb ljmp xchg inc inc push and cld mov and adc mov xor dec xor mov xor fwait aad pop cmc push fs mov out or and test out rcrb les insl jle popa jmp xchg mov or loopne inc push sarb inc in or insl and pop inc ds sub in in fimul jp mov scas and divl and pop loopne and lea jb es pushf and outsl ret or int3 cmp outsl cltd imul int aad mov fldt sub sub inc jp and in std lret xlat nop push sub popf push xchg push mov sub mov (bad) maskmovq or pop loopne js aaa cwtl dec loopne sub xchg push xchg cmp icebp mov sbbl jne and xchg aas faddl adc cmpsb (bad) movsl pusha mov mov mov bound pop mov xchg xchg cld mov xor push adc ja sub shrl mov jno push fldt repz (bad) xchg into cmc xchg sbb or test jle inc mov in xor push or out dec hlt pop mov or push cmp and dec lret cmpsb jge aaa adc std cli and inc or add xchg pop mov ret mov add icebp and fldt insl and mov aam fadds je mov das cmpsl incl mov add jge stos enter dec xchg mov (bad) repz ds test cmp sbb cmc mov sbb mov (bad) and sbb in popa mov jno mov sahf test shrl sub pusha dec negl rcr out xchg sti fcoms lcall inc ja pushf push ret repnz ss xchg (bad) insl mov mov addr16 jmp cltd (bad) mov mov fidivrl addr16 mov in inc and fldt sub mov das iret adc inc add cs jp daa push negl and pop and arpl (bad) jne pop repz mov lahf aaa mov mov inc adc dec enter cmp pusha mov inc call push cmc adc add dec jmp xchg imul sbb pop mov outsl fidivrl lcall pop cmp push out inc daa inc je lret cmp mov daa mov mov fwait lret cs adc jb,pt jmp pop push aaa sub mov data16 in adc mov xchg mov mov or adc adc div nop data16 pop mov fisubr iret lods pop lahf popf ljmp outsl outsl sub push mov loope in and out lret mov repz ljmp adc adc (bad) std dec jbe cmc (bad) je mov jge mov xchg mov incl pop fsts popa pop pop add add pushf ret dec push dec mov jmp cmp and stc mov push je stc les es or dec imul or pop movsl inc inc dec test lahf ret jecxz dec cwtl jno jo fdivp jmp adc (bad) fidivl mov (bad) push pop mov dec into andl pushf jne push pop cmp stos cmpsl rcrl ficomp sbb xor dec xor xchg xchg xor ja xchg push xchg inc jl lahf sbb mov gs into gs imul mov jmp (bad) xor lret aas pop frstor out imul pusha (bad) or push (bad) dec (bad) sub aas cmpsl loopne aaa adc idivb jge add and insl leave adc les in xlat or js and ds fwait inc mov mov push fnstenv dec popf mov mov movsb (bad) idivb les cmc mov (bad) cli addr16 push dec aaa addr16 das inc in mov cmpsb shrb cs icebp rolb adc mov popf inc xor inc mov mov adc xchg xor sbb push xchg adc inc jmp pop or fwait iret pop jne les dec xorb daa sbb sub push push adc test adcl xor call roll mov dec jle add out orl and cmc sbb pusha daa stos dec sub and pop call mov scas mov loop mov jle sarb pop push xchg mov mov sub inc adc les or imul stc fucomp or int3 pop imul mov in jle pop sbb out mov lret out xchg iret inc icebp push lea xchg in hlt sub xchg scas jns dec cs sbb ret cmc insl inc inc jb inc mov rorb mov je xorl xchg or jae or (bad) rcrb inc loope ljmp popf inc enter jle jne cmp (bad) jmp ret push sub sti sub repz sbb or lock jl jecxz mov ret push loopne push cwtl xor (bad) std mov inc jnp (bad) cmc inc pop into sahf cmp aas sti cmp dec or scas adc pop loop shrb pop jp dec or sarl mov jo dec xor fsubs sarl (bad) movsb rcrb iret int3 leave out bound add iret and fdivr push es in std (bad) ja jbe movsb ss ficompl pop push inc dec pop clc (bad) jno shlb jl mov cwtl ret lods sub pop lods jge jge xor jg or and lods inc push mov ss sbb pusha stos cli adc lock inc pop push jno (bad) or pop inc lcall xor mov adc test cwtl push push test pop add add fdivs je xor xchg pop mov xchg adc and sbb xor outsl (bad) jb daa nop addr16 pop jno and js sub sub popf cmpsb loope loopne or sbb lods push movsl mov stos pushf cltd adc rol daa pusha js jno scas ds mov (bad) jb sub or jns pop add lock sub sahf mov mov xor ja pop imul gs (bad) mov mov sti jmp ljmp dec negb notl pop es test mov pop lcall dec mov add jecxz pushf pop push mov test add cmc push loop inc or icebp pushf push js or daa aad pop adc mov faddl daa pushf push and loopne pop arpl clc push outsb push aaa clc out inc add mov lret (bad) mov mov hlt mov subl dec mov mov push int3 cs lods mov xchg jo mov inc mov notb sbb inc aad mov mov mov ja out std movsb inc insb insl pop (bad) dec aad (bad) dec lds jle notb les insb jbe in push and pop jecxz or jecxz ror add xchg xor xchg pop int adc jecxz mov adc xchg pop in leave cs bound pop inc jns and mov mov mov push pop add sbb sub je int xor add and (bad) ja mov ret push and fsubp mov and insl add sbb (bad) aam jle inc cmp jp insl insb push pop bswap cli mov jp fsts mov data16 fnsave dec (bad) mov and iret or nop insl andb loope and js add dec dec gs xchg ret fldl jmp xor (bad) movsl mov inc pop loop mov push arpl lret mov jno mov ja aaa xchg ja pop pop pop mov xor leave cwtl cmc xor add lds rcrb sub mov push pop ret dec lea mov mov mov xor push cld mov aaa insl sub xor add mov sub cmc pop loop pop lret mov jbe mov (bad) insb add adc pop xor aam aaa sbb lret clc sahf cli inc adc inc add or adc and lods test sbb inc loope lret push in imul mov xor ret push ja addr16 insl in dec cmp mov pop fcoms insb movsb ss mov mov fadds mov ja cmp faddp int (bad) jl sub imul cmc cli xchg push xchg sbb es loopne movsl out sub leave lcall daa cmp fs mov push cmp popf pop out mov movsb pop jmp sub sbb mov scas (bad) add mov aad fwait stos cld idivl xor in adc inc outsl pop test dec xor push jmp jno push es xchg inc fstl cwtl fcmovnbe loopne lods cmp cltd sub test dec or xchg (bad) add sbb cli pusha fmulp test add dec rorl in faddl ljmp (bad) popa mov mov fwait and daa jl pushf inc hlt sub and test dec push ja mov out es cmc push jbe and pop push adc mov out cmp cld mov add cwtl ja jp js aaa in pop imul in push js jmp cmp xor sub ret iret push inc mov fmul inc pop loopne or mov inc push pushf insl aam mov je (bad) (bad) cmovnp imul aaa dec test bswap pop cmp xchg hlt xlat adc cli adc enter inc loopne mov es ret mov sbbb cs lret xchg das fsub and jb movsl into addr16 pop add sub in stos cld mov add pop lcall mov cmp push insl lahf enter repnz jecxz jecxz xor in outsl cmpsl (bad) mov call sub and jne add push in es mov mov sub mov fsubl outsb (bad) xchg xor mov mov sahf and ss xchg cli dec dec sub test jnp cmp icebp les push jo xor add (bad) or loope jmp add cli inc adc imul imul pop dec das je add das push mov dec repnz sub je dec xor gs mov xor out mov push ret aaa mov add or fdivrl or push push nop mov fisubl xor jle mov (bad) call sub dec jl out movsl push gs ret mov xor (bad) xor adc mov les jnp nop lahf xchg and das scas sbb dec cs sub insl inc outsl lea outsl in sub cmp (bad) push push ja xor ljmp sahf sbb shlb xchg mov insl jb dec or lret sub je in push sbb xor dec mov call mov subl out ds in xor cmp orl js adc mov and mov out sbb xor sbb out jg fadds nop push mov ss in inc and int mov rolb add fdivs inc xor hlt cmpsl push push movsb out add mov pop or repnz fdivl cli push in out push popa es mov (bad) cmpsb add sbbl inc out test (bad) dec cmp loop mov mov mov adc sub pop popa add nop cmp push dec pop enter inc sahf nop dec stos inc loopne sub (bad) mov jp push out sub scas sub pushf pusha sti mov push and push mov or test adc sub ret ret xchg loop loopne iret sqrtps jbe lret cmp mov mov sub and out faddl dec clc mov out hlt mov out mov add es int pushf push clc cmpsb adc push je xor inc dec aaa mov in outsl imul inc js mov ds push test lea add add insb push xor iret ret adc inc (bad) stos or ds mov mov jnp std leave jb mov cmp popa std and mov imul iret rorb push jns cmc push fist das mov sub stos cmpsl cmp (bad) push gs ljmp js fldcw lods inc adc xor and push add add dec nop inc into not or lcall push insl mov notl cs lock fsts dec mov and arpl sbb in pop pop inc mov int3 pop mov (bad) pop lea jne xchg stos mov pop (bad) lret cmc stos mov repnz movsl sub lcall adc scas inc test mov inc or nopl out add hlt mov and fbld or call addb sub push jnp and mov lods jno jge jbe lods mov jg cmp cmp pushf pop (bad) or jno xchg jne and int3 stc sub in mov sbbb into cmp mov (bad) les stos mov inc jmp sahf jge lea iret jge fsub fisubrl sbb inc cld push sbb (bad) and lock sbb loop hlt jecxz and add (bad) sbb stos push scas sbb imul bound mov lds ss and (bad) xchg push (bad) sbb dec lock or mov cwtl mov (bad) inc in jb jl mov andl int3 pop pop call (bad) repnz les (bad) adc lock jecxz fs cltd push mov xchg inc mov int3 or addr16 sbb outsb ficoml pop lcall stos mov sbb cwtl pusha xchg adc push cmp mov mov and fnstsw jp sahf pop sub lcall add inc mov popf pop inc faddp and dec jmp fidivl mov xor pop cmp push xor adc notl pop repnz cmp enter or mov pop cld (bad) jb mov xor movsl jbe pop inc hlt mov xchg mov aaa inc jl test lret cmp add mov pusha (bad) std push sahf insb dec jecxz icebp or data16 inc and jbe cmp aaa push fcomip (bad) xchg decl gs sbb repz inc and add lods add sub pop lahf add cmp pop jg push xchg xor gs pop fxam int adc cmpsb mov and lea std pop adc rcr sbb decb mov and arpl decl mov mov mov sti mov stos and loop mov jmp leave sbb xchg push mov in adc leave add (bad) movsl cli push pop jle mov shrb or les addr16 xor adc cmp outsl mov adc mov pop cmpsb inc push gs mov out cmp daa cmp mov mov push movsb loope and lcall addb jmp scas pop insl inc pop pop nop jne jle imul loope lret dec mov cmp (bad) bt mov pop sbb xchg rorb pushf call ljmp fwait push sbb mov incl sbb movsl or cmp pop adc lock inc fsubl mov jg popf (bad) arpl mov add adcb aam pop jp incb inc push inc leave sbb jecxz repnz adc sbb fistl xchg inc movsl inc sarb movsb das add push jns icebp dec arpl adc outsb stos jle push popf fstl pop ret out mov ret mov mov imul push pop (bad) iret bound inc inc xor jecxz mov adc decl push arpl and cmpsl fistp or and push ret sub lods les jno xchg and sub or stos lea add and pusha lea and loope ret rorb xchg in sub bound jl add out les sub loopne mov lea mov pop in jmp mov adcb movsl std mov movsl in and outsl inc lret loope clc xchg sub dec insb xor loopne mov sti or adc cmp adc xlat jg add loope lret rcll js dec adc mov push dec or pop xchg xor arpl pop iret mov xchg pushl push mov xor or cmp mov pop lss pop pop adc push mov mov xor aad sub jo outsb mov pop inc inc mov movsl xchg pusha add xor inc and sub or cmp mov or or push daa dec or and shrb sbb fist movsb insb sub outsl xchg or cmpsb cld addr16 pop or pop push xchg or mov cmc repnz mov cmp cmp (bad) lret inc mov mov xchg movsb xchg (bad) icebp scas inc add push ljmp dec mov lods xor je cmp inc adc pop push je dec xchg xchg jbe ljmp in fistl mov cmp out and jecxz xchg repnz jne jb mov xchg jae jge test lret jle inc fisttpll sti movsl int and clc jnp dec std loopne inc mov mov mov das adc xor adc std lcall xchg testl dec mov int3 lret xor (bad) dec outsl mov movsb xchg and add cmpsb sub mov test out push pop lahf insl fcoml daa xor cmp rcrb jae out xor jnp pushf lods loopne insl sbb repnz cmp aaa jns outsl test mov and sub sub lock adc push insb xchg (bad) std ret imul and aaa sahf xchg adc sbb inc pusha or jmp jp xchg jnp sbb insl xor jmp rcrb or popa imul test lcall add push sbb es imul sbb lods xor mov ss lret in daa jl xchg out pop mov divb out fdivrl xchg add out inc or cmp fldt data16 jne mov sub repz pop fwait cmp out cmp sbb xchg ja ja dec jns inc je cmp push fisttp shrl dec fistl jae lods mov and xor fnstsw push in dec and cmp pop aas xor lds xchg aad pusha push inc (bad) dec cmpsl ficompl (bad) xor adc (bad) adc jg sbb xor lock adc add (bad) in or gs aam ljmp cltd or pop cmp cmp mov xor aam cmp imul ljmp inc mov lret push mov adc and cmpsb push fmuls outsb test movsb dec jle ret pop (bad) mov cld imulb dec xor sti dec cmp jns cmp pusha or dec jns mov inc pop in enter in sbb and jg lds xor pop scas xchg shl or ret iret mov mov cmp push pop jo mov or cmp out jbe loopne lea mov xor lahf das push or shr xchg add adc push repz and jmp cld adc in cmc imul add pushf out xchg lods jecxz (bad) mov nop sbb dec push cwtl call inc mov das mov in and jl xor xor andb bound in cmpsl pop insl cwtl add pop out imul push ja and pop adc push js out ss sbb pop out inc sbb pop loope push pop lret pop (bad) icebp test jmp mov (bad) data16 stos inc lods insb sahf pop xor mov lds pop adc in mov mov aas mov push add int3 mov (bad) rcrb cmp gs and les cmp jo push fbstp repnz sbb xor aas dec outsl mov std mov inc add pusha adc mov add popa or xchg jg push add mov add fildll in insl adc inc sbb rcrb push pusha mov (bad) or and insb cmp (bad) xor xor mov movsb lahf xor jns stc xchg stos pushf push (bad) fisub stos adc scas lahf push add dec sub (bad) inc xchg pop inc cmc ror add mov mov jge sbb cwtl mov rclb lcall jnp (bad) mov test or xchg sub rcl clc cmp jmp add push push add xor sub (bad) mov adc inc xor xor sbb sub jne into cmp ljmp adc ds and cmp imul in cwtl cmp adc or outsb cmpsb push outsb std lock dec rorb arpl pop outsb insb std test xchg repz sbb pop push arpl push or test rolb add sub push xchg pusha dec mov in out lods outsl dec push clc fisub mov jae nop fsubrs cwtl cmp and jbe mov inc dec jp (bad) sti jg call mov rep gs sti loop sbb mov iret push mov ja ljmp sub or in pop jg hlt xchg adc and fmull pop into je std cmp pop movsl pop (bad) push sarb or jecxz pop inc (bad) lcall pop mov popf pop jmp ret mov and cmp mov xor pop mov or dec sbb adc adc jns fildl push adc out (bad) pop fmuls cmc pusha lock jge sub cmpsb push mov push les cmp sti nop jg (bad) cmp xchg arpl cmpsl stos sub lcall cmp fcoms add stc cmp xor sbb ret adc cmp rclb pop and movsb and ss (bad) daa data16 repz and mov xchg sar cli push push enter mov jle je (bad) push or jecxz xchg mov call adcl xor mov (bad) loop mov sub cmp add and flds or push sub lahf add jne cmpsl add repz xchg sub ljmp es push cmp sub sub inc push enter sbb dec aad cmp mov cmp sti inc pop cmp ss fidivrl jno mov mov or adc lock lods push push into sub mov stc pop push jecxz ret pop lret je out loopne cmp pop adc mov fsubl shlb xor icebp aad mov cmc int subb push dec and adc pop sbb and add xor push outsl into pop adc dec stc or imull mov mov xor pop je push imul lcall test sub loopne stc xchg and pop or jnp lock sarb jns jae pop xchg sbb sti dec (bad) rorb fstpl cmp jg add push sub dec and add pop icebp test ret mov inc inc and push test je cmpsl pop sub pop ljmp inc sbb mov popa mov cs xor dec xchg or inc dec mov lret sbb shlb xchg adc pushf and sub fs lcall sahf dec (bad) in shll loop sub (bad) fistpl adcl mov (bad) cld sbb jge fsubl sub fcompl jae cmpsb cwtl mov stos inc cmpsb pop fist sahf pop pop adc xchg jmp scas cmp cs rclb jb jl lock pop test movsl xchg loopne cltd (bad) pop rcrb xchg jge add enter mov idivb and sub push adc in add sub pushf mov sbb es sbb lock nop lock sbb cmp mov or push enter fistl fucomi clc ss gs lock (bad) out jp loopne push (bad) jge (bad) loop xor movsl aaa pop (bad) fwait xor mov and or or mov cwtl fs popa (bad) out mov out inc push add jle sbb and testl pop inc call cmp mov adcb icebp aam pop mov (bad) add fdivs sbb dec inc sbb fildll push sahf popa pop cmc push stos pop add inc fsub jg lods lods es fmul sub dec negb aaa xor mov mov dec or lds add pop pop mov lods (bad) inc imul outsl lret fiadd bound fldt xor nop stos lds jmp mov and add pop in adc xchg cmp push pop insb lods divl sbb push int3 cmp lods stos mov inc popa dec pop push pop inc fsubs add or in insl dec sub gs cwtl add popa loope pusha fsubl stos in mov fwait xchg es xor pop and addr16 push or dec jno adc dec adc cmpsb insb lock push pushf dec pop sbb jnp jo add ja daa xor xor adc in cli pusha fs inc sbb mov adc mov adc and cli pop daa mov movsb mov je sub fnsave and out cld sbb lret pop push cli mov repnz enter push sti lods frstor stc je movsb mov fucom mov sub jle cmp mov testl push jbe xlat adc jmp sub inc or jo jecxz ficompl lea xchg arpl test dec repz into js shll add mov shrb mov push mov adc js pop mwaitx insb pop inc add xor adc cwtl pop cmp dec arpl or lods dec dec (bad) mov (bad) repz sbb jne les in outsl hlt cmp cmp lahf sbb loopne lcall inc outsb aaa xchg or mov cmpsb cltd mov inc dec fsubl lcall cld jmp pop inc jge jmp outsl xchg sahf push mov push cltd xchg call pusha pushf mov push ret xchg xchg jb fcompl jno push (bad) jae sbb int3 jmp bswap test xor cmp mov aad addr16 setle push ret cmp loopne inc movl mov or mov clc xor sbb add and imul lcall adc jno lock int3 fistpll mov cmp mov sti test sbb push mov call push inc fwait sub (bad) call sub add mov xor sbb or adc jg mov in jg inc jns fisttpll jnp hlt aas insl or add cmp cs in nop push aaa fwait cmp lods outsl dec cmpsb mov xor pop push insb sub cmp adc mov adc sarb and push mov cmp mov icebp xchg adc repz inc out int3 shl cli mov subb dec mov cltd iret and push sbb scas add mov rcpps jmp mov jno je in xchg ljmp stos in adc movsb movsl add fs add out jne xchg movsb xor xchg mov cmp add test and mov mov stos push mov in add enter cmp xchg add flds add sahf call out push push je loop pusha sbb add push mov roll les cmc (bad) std mov out das int3 ljmp lahf js (bad) pop push xlat shrl scas add rorl stos add add sub fistpll test bound cmp (bad) jne movsb push loop lods lea cmp mov push adc dec jge lods inc pop mov and or sub cli mov dec jmp (bad) cs lods push inc sub ja jae ret es fwait and sbb mov repnz mov push jnp dec (bad) loopne loop dec jg test jno sub inc into adc jbe sub rcl movsb (bad) loop out xchg imul or mov in xchg loopne cmp decl addr16 push ss push push xchg (bad) mov cmp insl pop call data16 rolb adc push inc adc cmp jmp test jge sbb cli xchg cmp mulb mov sub sub insl pop pop jae mov mov cmp hlt mov addl fs mov push sti icebp fcoms pop mov inc rclb pop cwtl adc lds lahf popf sahf js inc lcall (bad) and stos mov mov dec xchg pop adcl test pushf push jmp stc push pop inc xor das adc sub ret cmp notb and lods rorl push imul jp ds adc xchg and (bad) pop sbb loope add cmp or popf test cmp mov popa enter insl inc cs pop pop push inc xchg daa shrl (bad) and cmp in inc dec xchg or push ja loopne push nop clc out loop dec enter mov pop push inc outsl mov cmp dec and test xchg insb adcb xor push add push sbb movsl lahf mov jmp jg xchg add rol mov and fnstsw stos pushf (bad) add mov bound inc mov dec adc fwait push gs xchg inc xchg mov scas adc adc sbb cmp dec shrl xchg and push lahf dec sub aaa shrl in ss negl imul xchg js hlt xchg and mov addr16 iret fs sub mov ljmp pusha dec inc xor pop sub sub ret add add rcr dec pop sbb test mov mov adc push cwtl in mov and mov adc mov xchg sub jg xchg adc xor sbb xchg mov xor push push clc (bad) stc test jmp es xor inc adc xlat cmpsb loop dec sahf cld inc push outsb add sbb stos adc xor aad das cmp lret pop pop lahf pusha test lods mov dec push or (bad) mov sbb xlat xchg lea stc sti or lods xchg enter adc fs sar data16 out mov out pop sub lods dec out pushf outsb popa xor dec int3 jae xchg inc push sbb jmp iret jb jge (bad) and mov inc hlt pop sub sub mov lcall or push fistpll and hlt or push sahf ret lea cmp mov cmp int3 sbb push in inc fs or and or xchg xor push or inc push sub xchg inc (bad) insl jb (bad) int3 pop jg inc xor int3 lea sarb adc add int3 fldenv sbb push orl jge cmp mov sti xor ds push popf insb dec out mov cs out xor sub and cli mov call sahf add push or insl dec and xchg addl pop sub movsl push and cli pop mov insl inc adc pusha aaa xchg mov dec cmc mov sub clc mov push mov dec and jbe push mov aas pop xchg sub sbb cld dec nop sub xchg push xor pop sub jecxz jbe in ds outsb fmuls xchg pop mov outsb cmp (bad) es xor dec outsl stos ja mov cmp insl test rcrb movsl pop and sub sbb cltd pop cmpsl into jl xor aad adc popf pop mov mov pop cmp add mov xchg fnstenv mov xchg dec daa stos push popa and lock mov loop xchg jae and sub std pop ret fisttpll xchg pushf add repz jmp imul pusha pop sub adc (bad) mov (bad) insl movsl dec ret push cmpsb and aam insl ss (bad) cwtl sub mov je movsl xor mov xchg xchg add rclb mov lret pop loope divb in sub cmp inc push ss inc sbb pop iret sub xchg outsb pop into test dec idiv fwait ja mov hlt xchg push rolb or repz mov sbb in (bad) imul mul icebp jmp mov and in (bad) fwait int3 and outsb and sub pop xlat sbb test sbb mov outsl clc xchg addr16 lea add sar or js call stos movsl sub cltd cld jmp insb push stos jne xor pushf leave movsl xchg popa sub gs test arpl cmp jo repz (bad) loop push inc add mov mov jns adc inc imul mov sbb daa dec inc ss fstpt test push jbe and jge cmp sbb xor mov loop in push inc xor scas cmp push mov mov fimul or cmpsb icebp sub aas push in xor xchg xchg out push orl add jae push push sub xchg stos in stos pop and les adc cmp add test mov sub pusha pushl sub pop dec add notl inc pop mov pop cwtl imul push cmc add mov and sub xor mov jecxz mov xor mov in mov push arpl pusha push pop mov xchg mov pop je and cld aaa (bad) jmp mov mov in or dec xor or xor repz das sub ds movsb adc gs push sbb xor xchg jmp repnz add lcall dec int3 cmp inc adc xor sbb into lahf fwait jno fstpl icebp test and adc (bad) ret push push and mov clc imul mov icebp out pop inc add mov (bad) mov pop push cmp adc sub in xor mov aam int3 (bad) sbb into sahf pop out shrb sti icebp mov adc add sub das sbb cs test jge cmc adc out int3 jne int3 (bad) lds movsb pop jne push xchg (bad) lock mov scas xchg dec jbe aad sub mov push add sbb sbb add arpl fdivs xchg mov or scas (bad) dec inc mov aaa dec int3 call loope jb and fs and dec iret adc movsb pop ljmp arpl mov fldt mov mov movsl (bad) mov push lds and ficom hlt push cmpsl test jno popa sub test (bad) aam std or stos pop imul bound cli repnz mov cmp push jne repnz les (bad) fimul push pop ja daa xchg jns cld fstps and rcll aaa pop ret dec in scas and int3 imul push sbb mov leave je nop pop lea mov (bad) icebp xor xchg xor mov stos mov lods sub imul rorl push sbb xor inc sbb daa dec mov sub adcl push xlat fildll xor test dec ds sub inc arpl adc int dec and loopne imul rcrl dec lahf ret div outsb xor pop mov fs cmp xor sub fs inc push dec xchg addr16 inc mov insl rclb inc mov add xor jl jb sub push insl arpl xor pop jg jno (bad) cmc push xchg std or push scas out lock pop add sub daa add jecxz cld ret adc es xor adc vmovdqa xor fldt scas mov lock inc push cli jnp mov mov push dec dec nop inc repz jl mov lret adc fwait xchg adc push add jo movb iret inc in stos xor push (bad) mov rorb mov lock (bad) dec loopne xchg sub and xchg enter aad jo cli sbb mov or cmp xor pop dec ljmp rorb or mov nop adc pushl imul mov jbe dec or das jnp adc pop xchg xor mov sbb add fs mov (bad) fisttpll adc or sub popf mov scas movsl push mov (bad) aaa pusha test lods mov xor mov pop mov and call sbb mov xor inc sbb pop mov jl adc call pop mov mov mov mov pop lods aad data16 das push jae fstps jo mov insb aas or pop or dec pushf scas out movsl lods pop sahf sarl iret add mov faddl adc jo addl xor fcmovnb sub jae mov pop ret movsb (bad) ror outsb add movsb test enter add or xor lahf inc mov pop and jg mov es mov or cmp sbb mov and inc and cmp aam outsl ret jne push outsb xor pusha popa dec sti jle nop aaa (bad) aaa lods and cmpl adc lret pop ret adc insl push sbb stos and xor in out push xor mov pop orl xchg jge pusha and mov dec cmp gs xlat mov or dec pop sbb or popl call inc in lods push in push addl sub pop popa adc sub in pop pop sbb ljmp adc incl sbb or inc add popf (bad) out cs ss mov jo int dec pop das pop mov add or push addr16 (bad) and pop cld sub mov fs aaa lret lds repz pop inc mov clc sub outsl mov xor xchg lea lcall cs mov popa lcall popf outsl jb push push pop cmc push (bad) dec inc cwtl daa (bad) mov pop imul test cmpsb push (bad) inc mov add (bad) orl xchg mov mov add lods xchg or push outsl adc xor xchg pushf dec jge xor sbb xor xchg mov lds (bad) mov xchg ds insl pusha call mov xor push (bad) cli jno mov pop sub test data16 insb mov push fmul scas push in test xchg mov push sub jo pop sub repnz in push jb xor stos icebp cld sbb icebp int3 sbb adc push (bad) xor mov sbb mov ljmp inc mov shll mov cmp nop jge je lret das or iret and sbb and ss shll xchg xor enter sbb popf divb les mov sub std rcl rcrl repnz dec inc ss les sbb lcall sar mov ja adc mov cmp xchg aam dec and arpl in mov rcr mov pop in incl pop mov fmull lret cmp popa jno das jb aad cs insl lcall cmp (bad) push daa inc xor (bad) decl xor into jmp xor pop cmp subb dec inc insl jecxz daa movsl leave sub sub (bad) clc mov and aaa push loopne test adc mov push inc add iret or inc and outsb push es mov push data16 dec xchg xchg popf into and add add sbb fcoms popa notl cs aad xorl lods ds sti xor fsub push or stos or jg mov loopne inc pop subl lods xor pop jno add fldenv jb in repnz or psubd loopne ja mov pop wrmsr in lret mov add cmc or xchg add lea jecxz xor mull es lods adc test jecxz mov add icebp push pop ret mov jp push add punpckhwd cmp adc cmp stos xchg sahf loopne dec je push xchg xor xchg arpl adc fdivrs call loopne loop pop imul imul aaa mov jg (bad) sti add jle fs jbe pop insb hlt lds cmpsb mov mov cmpsl loope outsb xlat inc std pusha mov fsubrs inc rorl jns mov push or add xchg test mov mov jle call lcall fsubrs mov mov jo pop inc outsl nop jns mov cli bound pop fwait roll or sbb dec mov jl mov stos and loop inc cltd test div icebp mov (bad) outsl mull jbe movsl cwtl loopne and mov jge es jmp ljmp (bad) out test jle adc sub sub lret mov pusha loopne inc adc or add mov jbe cmp cmp imull scas cmpsl mov fchs adc js sub sti popa stos inc pop fisttpl or xchg fs ja push adc daa mov repz scas jne xor mov xorl test lcall daa and jge rorb andl jae movsb inc movb cmp aaa mov pushf sbb jno xchg inc mov inc ljmp and adc pushf xor mov test in pop pop sub push int3 sbb dec fs jne shlb sbb mov xchg bound insl mov push insb int3 leave inc mov movsb loopne add xchg cmp dec mov xchg push sti cmp xchg hlt stos stos and cmpsl cmp adc push test mov stos cwtl out daa push jns fs std xchg push jo fstp adc (bad) mov (bad) pop fs stos outsl add call loope xchg jnp and das add mov dec xchg sbb add xor adc loopne aaa or xchg cld dec sbb jmp and out sub xchg (bad) xlat sbb push cmp leave fs cmp mov mov es pusha mov les mov pop jmp negb and daa add lea or nop stc push div push push pcmpgtd jge jle js push outsb adc pop and inc into or (bad) in push xchg les sbb push push call mov or dec lret inc out (bad) or addr16 xchg jg sbb mov dec and sbb cmpsb mov inc pop notb bound or jne lahf outsb ljmp inc out fcmovnu sub out pop xor idivb jp pop pop xchg jmp push dec and and lret daa ficomp jb inc bound or insb cs out or ret dec cmp inc es pop sbbl outsb xor jno xor or sbb xchg lcall fwait gs xchg loope jge mov cmp jmp je stc int3 shll mov dec jne das ret je gs int or mov mulb or mov (bad) jo imul mov inc mov xchg fs (bad) daa mov lahf inc push push pop loop pushl mov dec arpl stc and loop xchg mov shlb ljmp or mov lcall jo stos sbb push sub cld addl xor dec fcoml shrl inc add and pop xchg jne mov adc and push jae dec cwtl jmp clc cltd lcall mov int3 pop pop dec fisub inc ljmp push xchg pop mov inc scas rclb adc pop and add xor dec jle add add int3 mov lcall push sub std insl sbb loop call sub or dec pop or dec (bad) divl push jno out xchg sbb cli lret mov ficomp add push inc das cmc andnps cmp push lret push rcr xchg sub inc in cmp dec sub jae and pop mov dec shll inc adc iret xor mov mov adc icebp lahf push jno adc in push (bad) imul cmp cmc jecxz leave push insb mov out aaa daa inc std and pop (bad) in mov inc jne add lods fsub loopne mov add stos nop mov dec push adc orb dec mov mov adc idivl test clc jge mov xor xchg sub out xchg stos and iret xchg push clc fisubrl out mov push in subb sub and and mov stos loope ss out aam nop int stos xchg push lahf mov pushf (bad) adc loop in inc inc dec add arpl jecxz jo xchg cwtl bound lock add push and mov imul out gs jmp push out fisubr and sub mov aas aaa es mov out lods in add gs add and lret arpl mov dec push jg pusha xchg inc out and or sbb dec cmpl xchg lea sub mov data16 push ja xor adc fwait arpl cltd popa jp push movsb ja imul imulb lds xchg es gs lock daa orb imul xchg clc aas dec int mov daa cld repnz aam xchg dec cmpsb mov mov out inc fnstcw sub je or lock dec mov sub js xor rolb bound in add dec sbbb incb aam dec arpl ss cli test mov lods jge mov insb and hlt shrl fisubl and lahf mov out inc subb addr16 jl lds xchg mov push rorl lods dec inc hlt xchg cli sbb pushf mov or add and (bad) cmc loope lds (bad) in jne xchg loop sbb push xor movsb inc cmp mov mov adcl aam or pushf fdivs out xchg sbb movb jbe inc cwtl sub fadd adc add push ficoml mov insb pop outsb movsb push jp xchg mov sub gs out repnz outsb fisttpll or mov das cltd ja cmpsl cli jno pop push jmp sbb xlat mov inc in iret imul lea push lods inc cmp in mov xchg sub ds loope scas or jle (bad) or push push movsb pushl aaa sti rcrl pop cmp aaa mov addl int and inc sub xchg sub sbb mov adc xchg mov aam clc push (bad) ficoml shll dec mov mov or jecxz pop shlb mov frstor (bad) mov jb xor es sarb mov mov xchg jb xor xor rcr pop push sub pop repnz popa dec arpl mov adc pop xor adc xor jbe mov push int3 jns call testl stos cwtl ds xchg lret cmp insl xor jne push xor sub push (bad) rorb jmp sub pop (bad) pop adc ret or movsl cs pop add testl xor int3 jno setne imul adc aaa and sahf out push jecxz divb mov pop fldenv add and (bad) rcr lods jbe adc xchg lea fildl aas sti cmp pop add cmc ror fwait mov je pop (bad) int3 xchg mov pop adc sarl arpl jb or adc dec out movsb loope jbe push mov push dec or movsb mov mov xorl mov fstp das ja dec (bad) divb sbb test sbb mov add lock sahf dec int and add dec push add cwtl das push test push icebp cwtl dec (bad) fbld movl popa xlat shr cmp das sbb out fwait lods stos and fscale aam jg jbe xor inc imul pop dec lods leave xor dec mov inc negl daa jo inc roll sub mov xchg sbb fnstsw imul sub mov (bad) pop jb xchg mov pop int aad adc adc sub sub rorl sti lds rclb jecxz (bad) dec mov add cmp daa dec (bad) or sub dec imul mov adc cmc or push adc lds scas jno push and inc dec or and ret (bad) mov sbb xchg add ja lds sub add pop data16 fcom jle adc es mov subl jl out (bad) mov inc jg jg inc jne pop dec jne (bad) mov stos int3 or and lods test and insl fistl loopne ljmp inc fmull mov push mov mov mov and xchg jae adc ret stos imul or aaa mov add sub inc ss std mov out inc add gs xchg int3 fucompp add jecxz daa adc mov push je push xchg mov xchg dec std pop cmpsl and in dec pop xchg lods sbb test pop dec mov inc popf outsb xor stos and aam int mov andb in rcrb out scas daa sub imul das out mov (bad) pusha dec xor and push cmp cwtl inc dec rcrl pop dec or in jle jmp mov negl or fisttp pcmpgtd fisubr rorl (bad) call mov pop push sub (bad) and mov in xchg mov cmc sbb xchg jns dec int3 pusha cld test jb sbb jmp mov es inc xor into test frstor mov sub cmp sahf push pusha ja in mov pop xchg cmpsl mov outsb fisubl nop or les mov aad aaa and jmp jo push rcr sub jno sahf add inc cmpsb hlt cmc (bad) sbb stc sbb pop stos int3 scas pop or adc xchg out push (bad) sub jb outsl cmpsb add orl adc mov pop neg lea lods push lahf inc pop push xor sub dec pop dec jp in es push sbb in mov and push sub sbb and dec xor icebp push insl dec movsl mov ja and cmp adc popf sub fdivrl (bad) mov repnz aad std push jno push pop aam lahf cmp es aaa and ret add stos sub divl pop dec lock or xor mov or inc repnz mov insb fbstp or jns mov push pop cmp (bad) lret adc out jno cmp mov xchg push xchg loop movsl mulb decl cmp clc xchg (bad) sub pop insb iret incl daa addr16 cmp dec inc mov dec add adc dec xchg lcall (bad) adc sbb adc lcall add out test (bad) push packsswb testb es dec inc in scas es inc icebp ja mov shrb or jns inc (bad) out xor add loop xchg pushf xor leave out in or push mov (bad) sbb insb shrl xor add adc inc mov data16 jnp sbb cmp inc and and (bad) sbb mov aas mov icebp cmp (bad) sbb sub inc xor jo pop (bad) mov in cmpsl mov das and std sbb ret in sbb inc ret adc xchg cmpsb dec or (bad) ja (bad) ss pop test cmpsb pop sub or aam in repnz int3 dec ja inc popl cmp adc pushf add (bad) icebp pop aad and pusha pushf aaa jge and in pushf (bad) jns lods mov pop sahf inc push fmuls jnp in cmp mov lds push sarb scas pop subl out inc fwait xchg aas xchg out adc mov mov in fwait mov push aad stos mov pause add mull int and add sbb jo jb sbb test (bad) mov lcall mov pop clc insl repnz or into mov es dec sbb loopne ret out pop inc mov sub sbb loope (bad) out fs ja dec insb hlt or pop and jge or mov push pop cltd or popf ret jnp clc add lret mov xorb cs xor lods push fcompl sub xchg ds stos movups sbb jle es push sub jnp sub or iret pop (bad) pop insb push pusha test cmc mov pop xor movsl add shll push jmp insl push js cltd ror mov mov movsl cmp inc jnp mov adc bound movsb xchg pusha decl arpl popl cmp insl xchg les sbb mov jecxz insb loopne lret sub xchg xor popf into and ljmp lds inc jge xor fwait popa jmp mov popa aaa mov xchg adc xchg jo aas sbb jno out adc jmp sub jno imul jns pop rcl jbe stc jbe daa pop pop and dec cs xor push andl scas ja lock jle jae mov cmp cltd and sbb inc leave xchg fld or lods jg cmp nop cmp dec cmp fadd lret pop dec (bad) mov and jecxz test fist aas loope dec je pop ss mov dec sahf dec sbb dec xor sarl cmp (bad) cmp cld pop xchg inc dec mov jge dec push cld jp cmpsl add mov nop mov pop mov mov xlat dec adc push cmp lods jbe fisubr xchg sbb xchg (bad) es les enter adc sub sbb cs int3 push jge xchg icebp loope or outsb inc jo insb insl xor and pop arpl pop enter sub cld std lock enter ljmp push popa in lret scas stos xchg test or das cwtl and scas mov jne sahf ret aaa jg sti push in test das inc dec mov and hlt lock pushf mov push add popf insl movsl outsb xor jge ret sub mov sar leave or adc sbb and movsl jle push lock outsl aaa insl mov lods cli aaa push int and mov inc pop xchg (bad) jbe outsb xor push or dec pusha mov cmc adc in cltd xchg mov repz sarb and cmp cmp dec mov add cmp adc push fwait cmpsl test xor addr16 jne (bad) pop push js mov jns push lods in in mov adc dec stc or ss mov mov lcall fwait cmp push lret aaa xchg rcll es mov cs fsubr (bad) mov mov mov jb jae lahf pop push pop dec sahf jne mov add ret ror cmp lods daa dec mov jne idivl push stos inc inc xor ret sub and aaa fwait rolb data16 sbb dec pop dec sub dec inc or adc ret or jmp mov aam xor push inc int3 jmp rcll (bad) daa fbstp scas dec add iret (bad) sarb cmpsl cmp xor xchg loopne call jp ret (bad) mov xchg lods rclb outsl movsb sbb movsl and inc mov cwtl leave cmp pop cld insb mov and into jp (bad) test add pop mov pop push add outsl aam adc andl lahf clc ret lock arpl insb int3 xor fucomp mov bound jns mov cmp mov xor or nop test push fwait mov xchg adc loop sbb mov cld je xchg adc mov out push lods mov out jno jp loop pop outsb lea imul fidivr lret les add (bad) xor dec repz cwtl lods fstpl or pop popa inc adc mull and loopne ljmp push out pop xor xchg push mov jge pop jae dec or inc push out pop sbb repnz fisttp aam stc out cmc dec (bad) aaa ljmp and cmp push out xor (bad) divb out outsl in test (bad) je mov fs lret jno cmp sbb dec movsl (bad) dec movsl movsl mov enter lahf mov pop dec adc dec dec xor sbb mov jle xor inc jmp pop inc sbb add mov pushf popf push inc lea cmp test ds fsubrs adc call (bad) (bad) mov faddl (bad) aad add int3 loop negl pusha cmpsb inc adc pop lods lds mov pop loopne adc (bad) fsubl dec adc lahf cli leave inc dec sbb mov (bad) vprotd sar adc fcoms (bad) mov enter lods dec out cmpsb cmp hlt clc and iret stos mov and jge aad mov divb sbb jae push int3 pop das rcrb mov cmp bound jp lods dec mov mov fwait pop push daa fisttpll inc (bad) lcall mov xchg adc push fdivrs pushf xchg inc adc and daa out xchg push jbe (bad) sub xor fisub rolb (bad) cmp movntq out (bad) negb lcallw int out xchg daa and pusha aam pop insb test movsb es adc scas fnsave lcall jmp push mov push scas pop cmpsl pop hlt insb stos leave sub cs pop push sbb es cli or aas dec add icebp xor pushf in imul shll sub pushf loopne daa leave mov xorb or mov mov out mov push cld pop daa and divl dec out addr16 repnz lea jo sbb sub outsl aas dec (bad) lea push add mov out inc mov inc in sti out lds insb mov (bad) add mov sahf jecxz or jmp jno push imul fwait xor (bad) inc js dec mov sub mov cmpsb xchg mov sbb sub mov jge scas sub push jmp and enter push loopne insb cs push xor xchg daa lock iret hlt std jmp dec pop imul mov and cmp fidivr adc xchg push jle mov push adc mov arpl cmpsb mov cmp xor lods xor int loop and out push lods push loopne pusha mov and pop xchg popf sub cmp mov ror sub and insl jb and mov out xor iret jno or cs fsubs outsl leave push (bad) daa mov pop sub sub dec popa sbb or mov mov notl enter mov xor lods loopne add mov int loop nop cmp and jo lret repz xchg shl push xchg aad cmpsl push inc dec push imulb lea ljmp aaa rcl inc mov dec and sub adc xor (bad) les mov leave dec xor add je cmp inc outsl pop adc lds popa (bad) mov xchg cmpsb mov mov jns mov and push or mov sub rcr push mov jg cmc loopne sbb cmp cld mov mov add jecxz dec popf add jbe cli shlb (bad) or mov and (bad) mov pop push sti adc stc pop cli add sbb nop pop into dec daa inc stos or popa jmp int3 loopne fmuls fstl stc in and test mov adc sbb xchg orl dec out xchg dec rorb xchg mov jo fadds (bad) imulb test std inc sub fist dec (bad) mov sub mov and outsb inc inc aas aaa pushf (bad) std and jg cmp push fdivs pop add daa jp lods ljmp fcos mov dec mov or fs pushf test adc add adc nop or in add jnp add jnp and outsl aaa inc or xor shr mov push jmp xchg stc out mov or inc test or sbb (bad) mov (bad) cmc mov mov in add pop insl jae sub repz mov insl ficompl icebp xchg fs mov inc testb push (bad) xchg stos and jns pushf fbstp sub push sub in notl les sahf fstl xor mov or (bad) sub dec fstps insl (bad) ss imulb shl mov mov aas push stos jg jbe insl mov jno test sti not push push lods inc push lret xor sub mov test lock ret dec rcl sub pop dec icebp inc pop dec sti xchg pop inc iret daa inc add pop hlt out push shr inc out xor ja and push inc adc mov and popa dec icebp push jne icebp xchg sbb push cli or fsubl xchg out jge aas std jg push pop jnp adc push in (bad) inc inc flds mov repz lods and push cli jle pop fistpl ja popa outsb jp push ss jle add sbb fs push mov mov popa (bad) jns incb pop cwtl push stc pop mov pop and pop mov popf and mov rclb (bad) cwtl mov jo push mov jne pop mov inc adcl mov xlat fdivr mov and cmp or jne test adc push lahf (bad) jbe imul mov sub (bad) push sbb cmp adc adc ret or mov mov add add or pop into mov outsl cmpsl cmp pop lret sub sub pop inc int3 dec dec push add mov icebp fcoml pop jbe lods xlat fdivl roll lahf int dec rclb stos push sahf add in push arpl in sub and jecxz int3 sub insl mov inc mov (bad) jmp cli fsubs mov setne xchg jmp jno and sbb fucom sub daa dec ret in ljmp xor fs jle push out xchg fsubrl and test stc dec movsl sti in mov cwtl inc cmove push jg xchg or pop out test mov add or dec iret out cmp mov add loopne icebp mov cmpsl movsb jmp mov lahf push pop dec je jg fisttpl ja lods mov sbb (bad) bound test push inc xchg icebp addl adc pop pop xchg jg jecxz lcall mov and cli bound rol fwait lcall mov das aas and test sbb mov repnz adc push lret mov add add inc lods lods add xchg pop mov inc push (bad) ja cmc xor or xchg cmp call lea xor clc ljmp pop or pop push add dec and pop das push sar flds sub iret sub mov (bad) test mov cwtl sahf and sti add scas mull fistpll pop mov push ss add addr16 inc (bad) repnz mov dec dec mov adc mov pop jmp or into push or enter fwait xor cwtl xor sub xor ljmp daa pop jmp shll inc js popa lahf cs adc aaa stos jbe sub push lea addl and xchg nop jl lcall pop sbb mov cmc push adc adc inc lcall inc pop mov add push dec push sbb adc push jno dec iret scas mov in cld fistl inc es sub lock int mov or arpl pop int3 test adc mov les mov pushf popf jnp cs mov aaa add lds insl bound je cmp mov jp jne xor out push enter decl inc iret xlat test icebp adcl ja (bad) test pop mov sub mov dec dec je push dec fimull rcll pop mov sahf shl fsubl add cmp lcall adc sub movsl cmp rcrb repnz popf sub cltd mov and mov xor and sbbl pop mov gs std andb mov leave inc ja in mov dec and adc sub inc mov test lea (bad) inc dec add sub pusha push adc sbb dec aas out push (bad) pop inc and mov pop roll outsb in xor ret sub stos dec sub scas mov rorl or xor inc (bad) cmpsb nop mul xor fs mov sbb jb aam lock aaa stos ret mov sarb pop jnp mov add (bad) pop sahf pop fstpl push inc clc outsb push out mov gs mov lds nop ljmp add std add enter nop jp (bad) pop inc sbb scas dec lahf addr16 jo outsl or and cmp (bad) setne jg es cmp outsl icebp sti rol pop aas test stos pushf imul jmp add jmp push pop fistpll push mov jl,pn jno push fbstp daa scas fbld pop or cld pop mov rorl sbb jb lods (bad) repnz jl inc fnsave inc xor popa jbe pop push sub rcl xchg inc insl data16 out (bad) jae sbb mov cmp mov inc ds push stos jge and push daa aam in pushf and jns adc sbb add mov dec jnp add push js adc mov inc push data16 lods negl pop or add lret jp mov inc in pusha loope jns push ljmp push pop call push lea jle sub mov cmpsl or es jno in adc pop mov or cmp sbb adc addr16 inc dec inc push sub (bad) mov xor jo lahf nop pop sub stos jge dec bound inc dec outsb ficompl das mov loope mov jbe in lock push adcl insl inc pop add inc mov aaa push mov repnz ja and shufps (bad) mov jp pushf pop fist jo sub sub jbe out gs sub nop inc push ficomp clc dec rcrb stc pop je jle aad sub sarl jne cmp cmpsb leave xor sub fistp mov inc pop or jecxz (bad) pop add stos xchg add cltd pusha (bad) lods cmp js sbb fdivl cmp cld loope dec push inc jnp stc loopne scas mov jb loope mov shll mov mov (bad) mov adc in lock mov aaa mov push dec mov aam pop enter test std mov call mov mov in mov rol add sbb imul push movsl lock fidiv xchg movsl fisttp add add dec in insb add call movsb xchg push test aaa xlat rol sti jecxz mov pop idivl mov icebp pop aaa les and mov mov lret lret push pusha stos cltd fdivrl (bad) ficoml push push int3 dec and jno mov xchg xchg push pop test jno mov lcall cmovns dec shl xor es loope push fcomp in icebp xor ret test adc xchg adc mov cmp sub loop dec scas dec cmpsb push loop mov jo mov mov daa ljmp dec (bad) aas ret addr16 lret shr inc mov jecxz in mov or outsb inc (bad) hlt pop inc lahf (bad) sti push (bad) (bad) sbbl jnp ljmp enter add lret ss faddl (bad) ljmp dec movsl inc scas xchg pop fsubrs dec mov aaa cmp cmp add es mov lcall (bad) data16 aas pop test mov orb pop jecxz inc xor ds pushf mov iret flds les dec in call mov mov xor lods sub rorl mov jo cmp repz and cmp loop jbe movsl jb mov add pop hlt fs jbe mov (bad) sub xchg popl adc mov ljmp hlt xchg sub imul out scas cmp fldl xor pop (bad) dec lcall (bad) (bad) push scas fstl jo in lods jecxz jle xchg rcr enter (bad) cmp xor mov (bad) mov fsts in cmpsl lock mov mov mov dec mov adc dec pushl jl push std and cmpsb or call jmp scas inc mov sti add icebp add repnz pop insb and cltd aaa cmp (bad) (bad) lock adc pop in mov xor repz dec incl fs sub call incb dec sub lcall xchg push xor jmp ja ss mov aam sarl pusha cmp mov jbe or dec sti inc lahf push (bad) out mov and arpl mov outsl jno in pop ret lahf sub fwait aam adc or pop (bad) mov xor xor jp inc and add bnd xor subb and lods push sub pop jecxz lcall in and inc push mov lret rcr lods ljmp inc pusha push insb insl cmp popf fadds push adc cld sub add inc int3 je jno mov push int3 dec cli div pop sbb icebp xchg cs xchg lods and mov daa sbb jmp jmp adc push int3 test test out pop lea mov fldt and xchg subb jbe adc mov test lret es mov sub in xchg pop pop imul or loopne jp mov (bad) ss fs mov cmp sahf and dec stos ds or pop fucomp es enter hlt pop mov mov stc (bad) adc mov outsl aaa xchg or pushf ret test sbb inc je bound pusha popa adc adc pop fstpl lods fistpll xor stos or jmp lods aad jo push or hlt hlt xchg shl ss and cmpsl lods es mov jne insl loopne add fcompl loope adc xlat lods lods jb in fucomip cmp test xchg cwtl pop dec jb jg cmpsb pop scas push add xor into xor sub pop loope add mov add and xchg lahf out inc loopne mov sbb dec in rolb outsl jne movsl jne add imul and rcrl sub mov adc paddw sahf cmpl pushf rcrb (bad) daa cmp xchg js rcr stos fcompl (bad) cmc push sub movsl xchg mov adc inc fs sbb cmp sub loope or mov rolb pop xchg adc sub cmp jbe mov movsl outsb xor je stos or inc or sub cld int3 mov dec test mov decl mov pop popf xor sbb cmp stc cmp bound test lahf xchg js repz push es call aad pop outsb insb xchg fs sbb mov addb mov insb push push rcl pop in leave inc repz lcall test and scas push mov or out pop xchg cmp pop div push dec inc mov inc adc fdivrs cmpsl and adc out xor mov scas adc pushf cmc lea popa push ret iret xchg adc pop xlat mov cltd mov aas lock mov scas pop sub mov daa dec mov mov sub mov les pop mov leave out mov pop add shrb xlat inc xchg (bad) andl adc push stc cwtl push mov dec mov jae nop andl xchg sbb mov jno lock cmp push pop cld push nop and in inc push mov pop push xchg lahf mov fwait xor adc sub cmpsl fcomp mov adc outsl and stos leave daa jp dec jnp movsl shrl cmp pmulhuw pushf mov cwtl adc out lcall sahf out jnp gs jl rcrb and mov pusha dec mov shlb inc (bad) das sbb es mov movsl stos push aas pop pop into testl adc sub int nop sub or mov sbb xor icebp adc je xchg dec cmp and int3 mov sub and push pop pop std mov pop ja fmuls (bad) mov add push jg subb adc mov not mov movsl dec dec mov mov mov pop jnp jle fadds out mov add xor pop roll sub cmc sbb (bad) pop add jo in pusha mov jae fnstcw jb jl aaa push subb xor pop imul push jno sbb lcall call je popa add xor (bad) fwait or enter pop dec pop pop sti arpl pop mov mov (bad) pop pop mov cld mov mov in iret (bad) sbb adc jle inc add and (bad) jmp mov pop mov mov (bad) push in stc mov push xor and adc cli test rorb cmp (bad) and lret daa and hlt cli mov xchg stc lret xchg add mov lods inc lds mov mov lcall or outsl mov add or mov (bad) int3 insb sarb scas xor iret fisttp mov nop leave push dec lods int3 enter divl mov mov imul mov lcall jns fidiv pop (bad) sbb pop inc and push cmc cmpsl add push cmp test popa lcall sbb negl inc leave (bad) pop stc sbb icebp mov dec or add orl cmp es xchg ss in in js xchg jmp mov bndldx fmull lcall rclb inc leave hlt scas pushf sbb (bad) xchg dec std (bad) int xlat iret gs fucomp in mov sbb mov sbb ret sbb pop in lea loop shlb pop xor lods mov sbb sub push ss mov sbb xor cmc int data16 sbb xchg (bad) andl std lahf push xchg cwtl or jne xor jno mov dec mov (bad) adc lret stc shrl shr xchg popf mov jnp scas jno pop int out add or or inc or stos cmp jne pop pop sbb xor xchg cwtl leave ret movsl test dec div sub (bad) (bad) or mov adc jns into adc jbe movsb mov sahf into and aaa and pop mov mov sub adc int jno xchg out in and cmp mov lea jne (bad) in pop add push aad ret shll push rcll cmp dec std ja jg pop iret lds and sti mov mov insb pop add (bad) fcoml stos aad std mov inc mov adc aaa mov dec int3 loopne in into jg popa mov outsb mov xor mov call and stos jno subl test out and push out das int je fnstsw dec jns shlb mov movsl icebp sub xor dec xchg ja xchg xor (bad) xor mov pushf enter cs xor repnz pop xor xchg jg inc int3 pop das push adc adc xchg jae and mov xchg sarb fwait and adc mov (bad) fnclex data16 stos sbb fs das push push (bad) out dec jp or inc pop mov push mov mov roll sbb and cmp into inc jp mov mov push sahf and sahf fs andl sub fcompl xchg fnsave mov notl adc push pop add sub int3 jne addr16 mov xchg mov pushf sbbl mov fldcw jae jbe pop (bad) pusha inc xor and xchg das mov mov mov sbb dec int3 outsl xor cmpsb cwtl mov in xor xor inc pop mov call mov mov out and pop hlt paddb or or stos in cmp push jecxz loope mov mov cmpsb xor nopl and int3 repnz and cwtl mov mov or push xor xor aam (bad) cld sbb and or lea xchg loope test int push iret das (bad) push call mov or adc xchg loop lock data16 (bad) mov cmpsb scas mov xchg dec inc push xor jb mov js jge dec cmp mov aam les aad push or lahf outsb push pop sub sub clc or xor jge les sahf lcall or sub mov sbb in shrb flds sbb stc push (bad) pop leave pop pop ror mov popf loop jnp dec cmp mov mov push mov icebp gs fisubrl enter push push jb push (bad) outsl adc cmpsb outsb push (bad) cmp sbb and mov and mov test cmc adc xor roll fmull pop (bad) pop and rcrb or popa mov inc sub pop fwait aaa dec std dec mov (bad) insl push xor sarl call test inc or cmp xor bound jnp fiaddl pmaxsw lret int3 je pop add dec rcl dec sbb imul pop cmp cmp insb adc sub mov stos jbe push int3 xchg bound sbb inc insb dec aam test cld add add push mov popf lcall or into mov adc fsubs mov add xchg xor repz xlat flds jmp pop dec mov add mov (bad) sbb xchg popf daa sbb jbe push into pop adc sbbl hlt iret adc fwait push mov (bad) inc cmp cmpsl mov dec insb or and mov insb or mov (bad) push sub mov mov iret push or es cld sbb in sub icebp iret push shrb cli push or shrl ljmp xor test js test pop add push and aaa fildll dec mov in mov dec lea inc notb xor inc or out enter mov xlat es cmp sub cmp sbb (bad) push scas mov js (bad) push push jno jae cmpsb pop sub (bad) push xchg or aaa in inc cmpsb test push loope loopne mov mov fimull ss mov popf xchg mov loop dec mov or jecxz ja shll dec sbb xchg iret push fist cltd or ror repz (bad) (bad) pop mov jecxz (bad) mov cmc psraw jmp in mov out std das in mov int3 ret aaa dec mov enter push je jno (bad) sub insb sbb out sub hlt pop test mov mov lods dec pop inc and lods jnp imul cmp movlps sahf sub cmp mov add push movb and movsl xor gs inc (bad) fsubl push in lods in xor cmpsb jae sub xchg mov xchg push add insb mov std and frstor imul movsl push and cmp popf dec movd scas mov sbb mov mov into mov mov mov pop repnz dec out mov in test jecxz mov mov jbe addr16 jns pop test fidivrl decb cltd xor jnp out sbb push jle cmp js jno xchg inc shr bnd mov bound mov mov dec daa cmpsl jns das les and mov inc fldl push mov xor xchg push (bad) jnp and xlat pushf sbb sahf mov dec fs dec aad rorl test aad xor cmpl lcall sub dec pushf sub fildl pop mov mov sar cli in push ja ret loop sub insl test test lds addb (bad) adc hlt (bad) mov lret xor aad stc or aad jo mov jne aaa cs cmc das cmp nop aam clc into ss mov sub and jle lahf pop mov jae nop pop sub int3 enter jbe and inc inc dec loopne pop imul sahf and pusha clc fbld jp push (bad) cmc out fs add imul and sub push imul inc sbb sbb xchg mov mov cmc mov sub call cmp pop rorl xchg add cmpsb xor aaa or dec mov xor dec xor cmc adc add out adc xor pushf stos das ficom in int3 testl fwait repz es pushl sbb adc lock stos push notl jecxz clc jg xor andl mov pusha mov push int3 test enter adc mov cmpsl fstpl sub imul add xchg stos push xchg dec (bad) loope aam jmp ds fsub xorb (bad) pusha xchg test movsl jmp xchg dec or das or add fcomi sahf mov mov add jo in xchg out pop push (bad) mov loopne xchg addr16 insb fnstenv add push xchg sbb and or xchg ss mov or pop sub inc push outsl xor mov jae push addr16 ss fcomps sahf sbb fsubs or sbb ss pop mov stos xor add enter mov cmpsb fisttp popa cwtl or jle dec dec popa mov or push arpl mov aad sub and inc jecxz sar ret ret pop jp fcompl mov cmp mov js fld dec mov lock imul mov cmp fildl adc mov aaa data16 fwait adc lods movsl adc pop orb aas mov sarl jl pusha daa mov cmp xor pop arpl and outsl xor sahf add das push jge stos sub xor push mov lcall sbb cld rclb out add movsb sbb or cld jle sbb or push adc and sbb hlt or mov stos mov lret add jno xor fistpl fldenv test pop inc pop pop adc nop ljmp sti mov and imul call stc fist push push sti jecxz imul xrelease dec lret scas jl leave mov decb dec jecxz nop push push add loope and jmp adc sub mov movsb pusha lcall fbstp pop xchg in movsl or mov icebp outsb fdivp fstps xchg xor lods arpl pushf insl decb cld jbe in push jne cmp or ja das mov cmp (bad) and and popf movsl gs jmp sti lods xor adc aas fdivl test cmc out or xchg into push insb pop xchg jb lea sbb fwait mov push dec outsl pop cmp loope mov mov jl fisttpl mov loopne inc xor test pop jne mov ficom mov loope push push jp xor mov sub mov xchg stos push ja add (bad) jp push loop shrb out sub sub sahf nop fcomip add sub xchg push push pop (bad) mov push sbb ja and mov bnd sub pop xchg aas sub les push jbe jmp sbb aam mov hlt test int3 das jns dec fistp dec clc repz pop mov jmp popf jg das pop mov popa in xchg or movsl ljmp fwait push stos adc xor pop or pop movsl cmp ljmp aam insb add dec xchg (bad) jle cs pop push cs orl es pop lcall jne ret ror loope jo inc sub add lock int rolb add repnz fldt and mov les jne std dec lock hlt adc enter dec cmp cs adc repz enter mov movsl cmp xchg cwtl cmp insl sub in sub mov ficoml lret sub push jo shlb imul je adc imul (bad) xor test jge push push push push or call std (bad) sti pop pop (bad) sub movsl scas popf sbb int3 subb (bad) (bad) xchg xor rorb sbb sub out fistp cmp inc cwtl or xor xchg pushf dec mov dec cli jbe jecxz pop xor ljmp loop mov inc test popa add or fild fwait push shr icebp stos mov push inc addr16 pusha je push adc arpl jno jle imul lea into xchg push jle xor das sub sub jns xchg fdivr pop lea in xlat pop loope add and je mov adc adc pop push xor sbb and es mov inc xor sbb mov xchg call mov (bad) leave (bad) shr outsb add mov jecxz scas and (bad) jmp daa icebp and out and inc mov frstor std mov mov add inc (bad) jbe icebp call adc or mov mov imul repnz enter inc lods (bad) and push and mov lea push mov fdivrs add pop test shrl les lret lods test aas push out outsb shrb jnp fidivl je addb inc sbb pop or arpl daa jmp testl sbb mov adc cwtl pop jle inc shrb rcl pop push add mov xchg fidivrl add sub inc adc cmp mov repnz ret pop fisubr bound fstl adc inc push jecxz push jge rclb lods andl pushf add jae xor pushf mov pushf jae add rorb mov testl dec push sub inc leave sbb mov inc cmp xchg daa ja stos outsb clc lods push test inc pushf mov dec sub ret and test mov xchg sbb loopne nop ja cmc rcrb lock and aaa mov xchg dec pop push aam arpl xchg aad push fstps jle cmp decb int adc (bad) in xchg inc xor pop pop fadds xchg nop mov dec mov test jle scas mov popa push or pop lods scas add rolb inc and xrelease cs sub lret and insb fsubrl adc aam xor (bad) sbb inc add sub cld sarl xchg sarb and daa xor xchg ror mov imul stc mov fs pop enter in mov or sti cmp sbb dec xor mov aaa adc mov jne mov push sahf pop cmp pop clc inc rorb sahf int add push jl mov nop outsl pop push xor push iret lret test test or sbb loope or sbb (bad) (bad) je aaa sahf rorb sbb adc lret in mov jle outsl xchg inc repnz notb bound jbe pmaddwd pop jae rcll sub lock sbb gs in sub pusha loop push dec mov xchg or loope sbb (bad) mov xor sahf in fstpl andl test imul fs pop push enter jg sub enter dec rolb pusha inc jnp imul push add pop add inc arpl and mov lahf std xor inc arpl insb push xor inc xorl pop movsb add cltd adc xchg add cltd nop (bad) pop mov xchg test sub push insb push bound outsb mov frstpm(287 xchg push pop mov mov pop xor lret nop es icebp test push dec es sbb xchg (bad) icebp push inc and adc and or daa pop (bad) jle mov jnp pop adc std ss in jge ret mov cmc push and int3 cmc icebp bts roll mov gs push movsl mov fiadd sahf loope push jg ljmp dec push adc jecxz inc jecxz adc imulb cmp fnstsw xchg int sub jge nop cwtl adc pop jmp dec nop mov int3 enter dec repz int3 jb out mov pop mov pop mov and dec shll adc sbb inc shrb repnz mov pop push popa jl pop mov hlt push test push sub dec push gs and or add jne xchg mov push mov xor bound cmpsl cmc sub dec mov mov outsl sbb mov jbe lds dec mov iret jne (bad) mov and mov push xchg in fbld dec adc xor add and add xchg jb xor adc lcall stc xor pop push and pop dec addb mov mov lock xchg cmp mov or scas inc push pop testl sub daa dec dec push sub out subl jb sar add fstl mov pushf lods test hlt aad comiss nop (bad) push adc push imul ja cmp es sbb lahf rolb negl cmp and mov and cltd xchg sbb dec lcall shrb in mov xor cmp lods (bad) movsl (bad) xchg pushf adc and in add xchg enter xor adc fldt in push add out mov in mov mov jg sbb xchg in xchg int push mov adc into mov ret out clc sbb mov lea mov sarb insb sub lret imul inc lock lods cmp loopne jl push lods xchg hlt rcr testb cwtl movsl xor cmp rcr das fisttpll ja fsubr cwtl sbb jmp mov jmp outsb pop loopne jae incb iret or arpl jo (bad) jno pop dec imul adc data16 xlat pop xorl xor pop sub cmp pop push cmpsl pop cmc sbb or dec dec jmp clc jb mov pop int mov es je les dec and sub add test popf xchg and jg and std sbb jae cmc popa ljmp xchg lret push xor mov in xchg sbbb sbb mov pop xor cmp ljmp cmp and jge mov fs pushf stos les add pop sub fsubp enter int pusha lea daa xor or cmpsl xor push call dec adc xor int3 popf inc sbb xchg scas sbb lock jecxz ficom mov (bad) mov dec jge scas js arpl add pushf mov outsl ret jns or inc xchg mov adc adc movsl loop les and stc je inc inc mov clc jno pop jle data16 ret push lahf mov rorb dec cmpsl mov push icebp inc push dec or loop mov loope mov insl out sbb cwtl mov pop subl mov push push sub rol or fisttpll repnz jp les cmp test mov mov daa lods and outsl shlb int3 mov aad xchg add sbb shll mov mov clc out push xor cwtl cld test mov jbe mov aad pop xor lahf adc nop call and cmp jecxz shrb stos dec xrelease jo dec push sbb jecxz or xchg mov or out lods xchg inc and xchg mov inc jl jne inc stc cmp nop aad mov stos dec jnp adc push mov in aam test scas push lret loop mov add popa and mov mov test aas xorl push mov outsl and mov sbb outsl mov aas dec cs sbb xor jle in or js jns sub dec jne (bad) mov jbe cs or cmp mov enter sub adc jbe,pt call pop xorl loop ret data16 mov mov cmp pusha in sbb es push ds cs xor fisttp dec ret cmp popa (bad) jp scas js or xchg mov inc das lea imul notb add mov xor sub outsl hlt inc jne cld ret shl or (bad) js cltd cmp clc cmpb xchg push jae adc jno in jp sub sbb adc cld ljmp dec icebp or es sub mov std repz sub popa cmp xor adc xchg dec jns pop lret mov mov stos sbb or ljmp rorb cmp dec out sahf lea add push (bad) mov push outsl aad popa dec cmp test std lret ljmp lods imul clc adc (bad) sbb mov cmp pop jg cmpsl (bad) pop fist mov call xor (bad) int3 cmp cmpsb sub popf test jecxz jne sahf pushf movsl mov cmp leave adc jnp jns jg fwait pop lods dec popa test push mov bswap pop outsl jb cltd mov jo pusha mov push (bad) pop (bad) jno add xlat out hlt insl lods adc jnp mov mov jb aaa push lret and sub xchg in es pop popa sarl jae jbe and lahf movsb jg shlb xchg (bad) arpl (bad) pop lods shrl sub sub ss or sti daa daa pop lods cmp hlt int3 push bound dec mov mov ja add out in jp inc (bad) arpl (bad) add or shrl sbb inc push cmp lahf push xchg (bad) mov mov mov mov lea add adc enter jne inc xchg movsb add fdivl sub push leave jl es (bad) adc inc pop pop xor js,pt inc es in call adc sub cli and or fucomp sub (bad) outsb jle mov jnp out das or nop int pushf outsl sbb pop jecxz adc rcrb imul ret in xor or mov mov (bad) daa enter push lods les jns pop out int mov jmp inc mov and jne add cwtl sub cmp hlt test sahf je adc push sbbl dec insl xor mov or sbb inc arpl push xor lea ljmp lea add shr jmp mov pop movsl xor lret pop ja sbb adc push pop push xchg scas decl ret cltd cs arpl inc and loope shrb (bad) ficoml lds fucom push ds push mov iret pop test sub cwtl cmp js xor and mov add mov inc sub mov pusha sbb mov out out (bad) lahf inc pusha cmp mov in push mov outsl aaa pop pop std sahf mov xchg stc cmp inc add xor xor mov pusha dec bound insb mov sub dec rcll leave inc jb lods lea loope and in (bad) xor and test mov sti es inc outsb aaa mov popa xor scas sbb mov sub inc (bad) pop mov loope sbbl push popf sti mov and xlat pop xor sbb xchg push dec add xor xchg ss adc sub xchg xor xchg xor insl mov je lds xchg in mov out xchg push mov lds test in out dec lods shl inc jnp jno mov insl insb xor test adc fsubs cmp mov jo rcll jl sbb imul sbb gs dec sbb lock mov dec xor gs jmp cmp push mov sti (bad) cmp mov cmp mov pop jns fwait jg xchg and aad sbb sbb inc imul orl cmp mov and dec push sub push xor sbb fwait loope xor sbb xchg and sahf add daa pop aam pop xchg or sub jecxz sbb loopne nop fidiv test mov mov xlat je flds repnz lret xor negb imulb mov jp hlt cwtl xchg imul imul shlb and jae pop push jns leave ljmp inc and add repnz les xchg and lock adc test jae mov arpl mov cmp jmp popa push dec popf sub mov out cmp ja stos leave outsl adc int nop push je dec mov xor push xor fwait int3 xlat stc mov sti sub lahf cmp xchg addr16 out push mov loope cvtpi2ps aaa mov outsl cmp hlt sbb inc push fistl je inc loope aas clc mov inc sbb sahf pusha or fs sbb push std mov loope movsl (bad) lret popf ret sbbl es es mov xchg sbb daa xorl loope imul mov adc or pushf and xor les insl adcl (bad) adc xor (bad) or aaa jg mov sbb loopne dec mov mov xchg cmpl lea mov push jl inc and cmpsl out bound and lea xor inc lret je ret ficomp or mov sub pop push mov pushf mov or add or jnp mov push adc in or dec jl ret mov or lahf out pop leave adc push push stos cltd inc mov outsl cmp dec outsl (bad) cld andb adc pop inc jnp adc and and sub mov add test inc xchg sub adc cmp push mov repz std sbb lret (bad) pop sbb push icebp fidivl xor dec (bad) stc in xchg pop stos pop add test out jo arpl test cmpb add xchg inc (bad) push inc jle xchg and rorb sub xchg mov dec es add das inc inc aas mov xor mov mov inc lds int3 nop pop inc outsb jge std and fidivr xchg pop clc jb dec fnsave adc addr16 dec icebp stos and xchg push jo mov push mov add addr16 mov pusha sbb xchg mov inc mov aas in xchg (bad) xor inc jnp test jnp sti aaa push in (bad) cld sub cmpsb stos aaa (bad) negl xchg push push dec loopne clc sub jo and inc in scas jl or jne pop lods jb push or jecxz sub xor roll xchg jbe xchg pop push fstps lret data16 xchg subl lcall clc sub mov sbb sbb xor inc push xor js out sbb insb ret test std in inc int aam pushf cmc (bad) nop dec scas mov dec outsb xchg sbb into pop inc sti adc clc lods sbb in (bad) dec (bad) movsl das test dec pop jmp icebp sbb ficoml pop rolb pusha push adc jge and pop dec xchg jle popf mov stc xor mov hlt std dec inc inc in in xor mov xor adc dec jmp mov mov imul sar arpl mov push xchg push sub jns repz pop in out adc xlat xchg not adc adc push fldt push or add add and mov nop int3 jle aaa push imul xor mov xchg call lret bound add lahf cmp sub inc (bad) sahf xchg adc enter fwait mov and cld pop cli add push inc fcomps mul mov mov push inc jp jb incb popf pop inc cmp cmp ss inc ficomp or push dec out push jne dec mov xchg fisttpll dec sub ror mov pushf mov div cwtl mov cmp lods (bad) xor movsl (bad) mov dec imul mov pop jne jbe pop mov pop popf cltd std inc sub out dec dec mov sbb test into mov jp mov push rcrl out pushf ret insb inc dec mov or js mov inc (bad) mov cmp inc test (bad) dec xor mov or in jg pop mov dec inc pop cmpsb xor add out dec push xchg int3 clc xchg cmp or ss testb push popf mov sbb mov inc icebp dec iret pop push test cmp cmpsl xor loopne pop loopne insl ret push aad inc or sti repz sbb pusha std lods fidivr inc pop cwtl jg ds mov mov inc mov mov fistp jecxz ror push out add sarl hlt mov push je push cmp cmp dec mov (bad) cs push dec and adc ss xor ja jns hlt xor and inc sub int3 scas push push pop das pop xor jbe fistpl lods jecxz stos test aam pop decl in ficoml ret adc mov repz xchg ficoml mov dec and roll stos (bad) and out (bad) xor enter add repnz and xchg dec inc sahf mov loope daa repnz and scas mov xor mov xor add out ret xchg lahf int sbb lock add mov mov or push (bad) in imul mov dec adc sub les and ss mov jl mov jo cld (bad) xchg cmp mov mov adc (bad) jne cmp (bad) and jge std fs insb mov push mov out jb ja adc loop fstps push jecxz insb add adc (bad) cld sub sub adc push pop cs dec push pop cmc sub loope mov hlt in cmp (bad) and call call ficom mov nop aaa mov jns cmp inc xchg mov sbb es icebp adc (bad) jnp jbe adc cmp (bad) ss cmpsl mov cmp test and mov int fcompl movsb xchg mov out pop push inc rolb mov mov mov movsb sbb mov xlat jnp cmpsb mov pop mov dec adc jle ljmp test pop (bad) mov mov adc das clc test add xchg int3 shrb jbe (bad) adc mov ljmp mov jbe mov push push jns test hlt clc iret push add push mov or adc sub in imul (bad) nop fs leave (bad) aad popf (bad) xchg jl or call add rorb ss push mov pusha (bad) mov adc cmp jns movsb sbb imul test int3 fisubrl lods push add and mov inc repnz in jns or outsl push mov popf lret pushf loope mov mov xchg or mov sbb xchg movsb aam push (bad) sti cwtl les inc or cmp push xchg xadd push aaa ret xor movsl add jnp movl mov lods mov xor push inc cld sub xchg gs mov ret push fisubrl fisub cmpsl mov lods popa clc xchg dec sub or lcall and sti push insw int3 and int lret or sub cli mov bound mov push popf (bad) jne fisttp (bad) push cli xchg imulb jp push insl pop gs xchg xor stos pop sbb mov scas in (bad) cmp insb ja add pop or cld and aaa mov or test dec leave push sarb inc inc mov int lahf fnstcw adc stos add jae mov dec inc push cmp repz jnp adc (bad) aaa es mov inc sbb or xchg cmc pop pop pop or cs or push jmp lahf push xchg clc push dec dec pop xor push daa jg int xor or into ss (bad) daa test mov inc and push inc divl push iret (bad) adc jb adc movsl ret inc push or into mov mov cwtl in js clc adc push jecxz pop mov test bound cmc push test sbb sub inc mov jge dec popl mov loope nop pop (bad) pop cmp pop dec inc or hlt mov mov pop (bad) pop xchg mov mov push imull in adc test arpl test fbstp ror lret mov and imul popf movsb pop stc (bad) adc fidivl xchg loop insl pop sub sarb rorl mov mov clc jg push loop iret lea sub insb mov xor xor cs pop push inc aad test jle inc mov sbb scas jae faddp (bad) fs add icebp push fcmovne xchg xchg mov out ss (bad) shrl mov jp lods dec fimul dec lahf inc add icebp repnz mov push xchg cmp sub stos push cmp loop inc loop jle ret or es frstor cli sub lods js xor pop pop in lods xchg xchg ror dec cltd icebp mov notb ljmp lea sub in mov push or xchg mov pcmpeqw cli sub inc imul repnz and mov mov das cmc (bad) orb (bad) pushf pop test test bound mov adc ss gs fucomi and imul cmp mov inc xorl push mov rorb test jge xchg and test in jno dec adc neg jge mov cs fidivr or xor scas push inc rorb sbb push cli mov mov mov fwait shl clc xchg pop xchg ljmp lods inc jecxz sub jb dec (bad) mov xchg cmpsl xor jbe mov or inc xor stos fstpl add mov fucomip (bad) imul push aad push push sub dec xor imul adc iret gs mov repnz loop mov call or push loopne test lcall lahf cmp dec mov aas sti mov movsl cmp push aaa add push repnz in inc lods popf inc std dec jo mov mov ja dec inc jl push repnz data16 sub popf in imulb and inc ficompl scas pop pop push mov mov jne shll mov or xchg loop jbe cmp inc add jb cmpsb sub cmp mov xor add ret xchg pop adc jbe dec xchg pop sub xchg xchg pop pop dec add stos adc push dec into rdmsr (bad) lahf push imulb or insb les inc imul or ret jne inc mov iret mov shll push jbe fistp cmp imul jnp xchg mov cmp inc ja mov in inc in lock jl pop loopne inc loope push push leave (bad) xor addr16 stc loopne jns jl daa iret push sub add sbb sub repnz sub pusha add cmc nop sbb cmp sub mov cmpsb clc aas xor xchg or ljmp jle mov cmp int3 fwait mov push popa and (bad) movsb sub xor sub mov ficom mov xor jg outsb cmc insl sar jbe xor icebp cld test (bad) clc stos js hlt cs hlt cmc data16 mov cs jae xor in aad out xor jno xchg pop out ret aaa into dec sub cld or int popf dec xchg sbb out (bad) lret inc or shlb jl xchg dec dec jge (bad) push aaa lret jle (bad) dec int3 inc mov cmpl adc dec push xor add enter imul cmp fnop cmc jnp arpl in push xchg popf (bad) stos xor fs push loopne fs jb test imul iret jnp xor int3 dec dec cmpsl fcmovbe imul xchg rclb ljmp mov jns test popa jo movl loop jge ss jns ret lds ss push pop inc fidiv aam adc lcall mov xor push aaa jecxz fs ja push rorl (bad) mov fs lods in addr16 icebp leave and jae das outsl addr16 es add leave push push outsl lea sbb mov cmc out dec lds push mov xor data16 or imul xchg aad adc or test test das nop pop inc xor sub jae mov clc add pushf mov ss in pop lret cmp add cmp aaa call pop bound jle mov push mov push jp cmp js push jp pusha ljmp jae push pop lea fldcw jb cs mov in mov xor nop aaa lods (bad) rorl pushf loop fbstp outsl or cmp and xchg cltd dec pop pushf pop call sub pushf js adc push xchg rol jecxz xorb xchg daa jge or std in xchg dec shr push push outsl push jbe add mov into test in xchg stc fs and fwait rcrb int3 nop pop loope push aas sub sbb adc pop and cwtl add std xor lods imul ss xor sbb cmp lahf adcl (bad) cmc (bad) fsub pop clc or pop clc push mov lods stos (bad) scas xchg in mov mov push int fnsave repnz inc (bad) lds sbb lret pop inc ret xor dec test cli jns ds movsb pop pop dec mov cmp cwtl mov pop fmull iret insb add ss orb das mov mov clc adc push leave je arpl sub (bad) insb pop pop mov orb inc ret cmc popa inc xchg inc mov jnp mov int add mov fisubrl jle lret out sbb (bad) aaa mov sahf jnp bound jno (bad) (bad) repz movsb fwait mov sbb add xor cmc xor arpl fdivrl cld dec mov inc dec pop idivb cs mov xor dec sub sahf lret sub and (bad) sbb rorb xor ss imull iret xor or jp imul aas fstpl aam pop adc ja jo call out nop imul sub pop mov sub xor xor lods bound test adc shrb push xor arpl cmpsl sub jne xchg xor rcr or mov adc ret ret jns lahf popf jne insb mov push lret insl push mov movsl cmp and push sbb or fs bound lahf push lds enter lock pop es jmp out cli mov cmp aaa mov ret test imul pop outsl pop enter push mov inc xchg (bad) repz push out and xchg cmp jge in mov aad aas lds sbb insl sti ja dec xchg jp call cmc push lds lods push std pop pop cmp pop test cltd aad test int sub (bad) jle mov aad mov out cwtl mov clc inc mov out cmp jns dec insb jae stos fild pusha loopne adc xchg inc cwtl scas inc into mov aas cmp dec int3 std (bad) sub hlt inc cmp xor jg fmulp inc out in out ljmp test stos aaa jnp push jne dec enter rclb cmpsb pop push ret xchg clc push je cmc adc ljmp and mov xor jae add mov sbb sahf test pop roll es and imul sub xchg stos mov repz out cmp and std or out push es pop cwtl fdivrl xlat fnstenv ja outsl jnp or pushf daa pop xor dec fs cmpsb loope test nop jne xor pop adc (bad) orl push pop push mov call sub pop mov or dec addr16 xchg xor cmpl int loop mov xor (bad) sbb xchg mov jge in inc pop pop inc mov outsl pop rcrb lods cmp pushf out inc push or sbb addr16 pop xor pop jmp pop mov xor dec mov lret or rorl xchg push jns pusha xor inc mov mov push push mov in nop movsl fldt lock fucomi xor mov adc xor fimull pop mov push popl mov add aaa mov lods lret flds ss xor cltd xlat and jb rcl ss and aaa leave jle xchg fnstcw (bad) inc mov push out adc outsb ficompl iret pop sub dec or inc dec push mov jae test popf insl popa xchg push shrb push sti jo mov dec xchg ret js sarl jmp in out xchg inc mul push jbe sbb div ljmp (bad) mov inc icebp pop rcrl (bad) lea iret sub pop jnp mov imul loopne (bad) jo in and les hlt push int3 shrl inc add pusha cmp xchg (bad) dec pop xor cs xor int out (bad) sbb mov pusha jg xchg pop xor les (bad) ljmp adc scas jl xor mov mov daa js xchg mov cmp lret cmp push push pusha (bad) popl hlt jnp or insb push mov lods test mov and sub (bad) jbe arpl sub loop jb mov pushf push xchg dec call pop lret ds adc pusha sub not vpsrad int outsl das shrl inc jns xchg cmp sub sbb sbb inc aaa jp pop in in xchg icebp add ljmp movsl and ret aaa inc in repz repz lcall add cmpsl sahf push cmp inc mov jmp sub xchg mov push xchg test adc inc cmp cmp mov mov cmp into xor and inc fcoms popa xchg je mov mov (bad) movsb adc sub sbb dec in and (bad) mov push push hlt daa add add insb and pop les adc lret push mov ljmp sub fs stc mov repz inc popf mov mov mov lods (bad) and mov jmp jo and or jno xchg dec cmp and cmc and test outsb and fwait jb adc insl in mov in negb push mov pusha dec mov in mov mov les lds and add iret repnz xchg popf lock fmul mov nop ror dec mov push pop lods cmp fisubl outsl mov fs fdivp pop dec in xchg and bound cmpsb or (bad) mov push and loopne test mov scas jnp push and push es dec mov pop mov jmp push movsb pop in loop out addl push out adc cmp out jmp aam call lcall outsl pop mov mov ror push sti jns test push push pop and (bad) mov sub add lret mov arpl popf lcall and inc mov clc inc test movsl pop lahf dec inc scas xor out lds in call rcrl or inc push icebp cmp pusha out in mov iret gs mov fstps es mov outsl movsl pop aam cmp lcall popf loop jae jne push test xchg xor jecxz rcl or popa stos jmp movsb dec and or dec scas mov cmp in daa pop xchg pushf mov inc lock xor or pop in addl rorl das fisttp and mov add xor loop pop dec dec lea jmp out pminsw mov push pop pop push add es in and or (bad) in das mov fwait push je ja mov cmp std dec inc sub adc inc cmc insl inc dec fsubrs mov rorl xchg inc sub ss push aaa sbb (bad) in fs jnp mov pop icebp rolb enter and jae xchg inc out jo lea inc mov fildll pop inc arpl mov lahf stc and pop clc mov aad (bad) sbb fs mov fs fisttpll gs push gs fldl gs push gs sbb fstpl gs adc fstl gs fucomp jle add js sbb jecxz inc sahf popf inc (bad) fs hlt jp xchg lods cmp pop ss sahf xchg lret popa mov mov xorl push dec cmp cmpsl xchg pop js or cmpsb lods xchg loop iret mov mov popf lods in sarl jb bound test xchg and (bad) ret pop jecxz lock adc sub mov push loopne fstpt mov mov push jmp inc popf aas dec popa xchg push ja jno test loopne cltd inc popa out pusha push and inc push lock call inc in divb mov les setbe test sbbl ss fidiv inc pop and jle pop dec push add arpl popa push arpl pop dec or adc outsl lret lret push and cld call push cmp xchg pop pop int3 fild js lods xor lock xor adc and rolb or or stc sbb push mov cs int3 or idiv lds das fdivs repz push jle popl mov mov lock arpl test cmp hlt add mov jmp xchg add push xchg jbe incl xor std lret and ret dec dec xchg pop test mov dec xlat push rolb xchg out lock and int fidivr adc mov jp loop mov mov dec xchg add cmp pop test scas adc pop jbe test daa les sbb rorl dec jl fwait jmp enter pop addr16 mov jmp (bad) add xchg push mov sub outsl lds push cmp pmuludq pop mov es push inc add iret pop gs add scas scas loop push cld sub sub call and cs mov jp pop ds dec rorb mov pushf sbb jecxz nop jno sbb mov jle lock pop out arpl add jle daa and and sbb popa cli inc mov test cmpsb xor test or lods ss int cmp cmpsl cmp test fwait pop shl repnz jo pop fisubrl push cmpl (bad) imul add das inc in add cmp inc bound inc cmc push inc jne aas jecxz loope ss hlt clc mov pusha jg add adc and mov (bad) js mov leave je stos dec lcall lea sub or notl shll push xchg xchg insl xor enter loop rolb loop daa cltd out and mov xchg lret push pop rolb adc dec mov push fs mov inc sahf mov popa add fs adc sahf or xchg or pop les push xchg popf lea imul push decl das cmp out push sub cmpsb lcall mov fisubl int3 stos test pop lods xor (bad) repz movsl mov ret or mov mov icebp lods cmpsb aas mov shrw mov jl pop xlat lea clc cmpsl mov jae and js (bad) mov stc lret (bad) lds rorb xchg add sbb mov mov cltd insb inc or push jecxz inc mov aam fucomip lret in int or xor and push int addr16 mov hlt cli sbbl or pop loop jns fdivr jnp xlat and js shll mov sub (bad) xlat dec pop pop mov sbb int pusha inc mov cmp andb int sub xlat repz loop sbb ret or inc mov faddl inc stc pop dec mov mov jecxz out mov push leave fnop bound imulb add mov sbb mov jb int3 scas rclb int imul cmp mov sub inc aam lahf xchg out jnp rcll lahf adc imul adc cltd mov adc push (bad) sub jbe push out push das or pushf out test in aam sub xchg jo xor pop mulb (bad) fisubl pusha pop insl popf cmpsb insb dec ret mov in xor das mov add es xchg mov cmp imulb movsb push sub int3 sub and ds pop lods cmp xchg scas sbb push (bad) mov or push mov jl push jl imul xchg in xchg xor jecxz and mov pop jecxz push gs ficompl mov or cltd in mov cmp mov into lock xchg mov out pop aaa js dec push int3 in mov divb jle decl pop lret in cltd not jb cmp cmp js jmp jg notb mov and sub jge or mov inc jecxz lea xchg divl cs negl pop sti sub jnp pop or outsb inc inc in nop (bad) bnd jle push inc notb sbb push jge xchg rorl mov push rorl jle adcl lret cmp sbb push jo or inc out (bad) mov mov cs pop call addr16 scas lret lret scas mov cmp push mov add mov addr16 cwtl or push add jbe pop sub sar xor xchg fistl add jmp push pop pop jo push lea inc pop jnp ja inc out add dec mov cli in fdiv jp movsb pop pop dec xchg and pushl mov fs and ja xor dec stos fldcw jge mov mov ds cmp mov jbe enter das cld test or movsb mov rolb fdiv mov cmc ficomp xchg push in adcl mov inc dec fldl clc stos int or cwtl cwtl mov mov adc lcall jo dec sub or sub ss add dec sub cli push (bad) jno cli loope pusha divw fs pop or adc call cmp mov out lret xlat idivl jle and cmc out cmc push mov add gs cmp popa mov push xor lods xor pop loopne push (bad) ret inc test add xchg loopne pop cmp cs inc xchg add xchg (bad) xchg xor les dec sbb jbe cld jecxz cmp loop insb pop push test cmpsl or js cmc shlb xchg sahf push lret push jmp mov adc push out cltd or jmp jo in jae hlt leave aad sti sbb movsl rep arpl fildll popf cs ror jns mov pop into (bad) cs scas ja sub pop int3 sub cwtl (bad) jge inc mov mov jge mov xor cmp cmpl jmp insl xchg adc rcrl sar xchg outsb idiv xlat adc inc rcl loopne pop out movsb insl fwait rcr push loope pop inc les and lret incb inc and push push xchg or pop dec mov push mov mov dec hlt dec aam push idivl lret push rolb aam and sub fcomps popa sar xrstor or (bad) cmp es mov jge or (bad) into xchg enter xchg sub xchg xor cmpsb int cmp jbe dec sbb cmc stos icebp sub mov cwtl and dec jnp es jo xor jle dec push cmp pop shrb sub xchg gs push jl cmp out (bad) orl loope jl leave popa mov mov jb and pop mov xchg lret aas pop push dec (bad) cmp inc jp imul dec into jl addr16 inc in in hlt mov fsubrs (bad) add imul ror in xor outsl inc jbe or push rorb pop out mov jns jg or dec inc loop xorb sub push mov cmc ret das inc dec (bad) cmpsl orl int mov or lea fldenv ljmp fcoml xor out in xchg jge hlt (bad) (bad) inc in xorl in aam jmp cwtl (bad) xor push and sarb inc mov dec cwtl ja mov bswap push loope mov pop stos push mov pushf mov scas sbb and dec mov mov cmp xchg xchg adc pop insl mov dec int aas icebp arpl pusha insb (bad) sahf pop gs and addr16 fdivl daa les xchg jae mov sbb add out sbb ret inc inc dec push inc mov jg or xor inc xlat xchg push js jbe (bad) leave lods arpl mov dec xchg gs xor xchg lret cmp ud1 push push sbb jecxz jb pop adc push pop and pop push adc xchg add mov fbstp add or loope out clc outsl mull out mov hlt in inc add xchg dec lds icebp mov cltd (bad) (bad) bnd (bad) imul xchg mov inc aas rcrb dec nop rorb pop mov jns cmp bound mov stos shrb out iret fldenv inc stos mov mov dec inc (bad) das cmp ret add in mov scas (bad) mov aas test mov mov jecxz xchg adc mov mov mov sbb pusha mov inc sbb int3 lea xchg stos (bad) fbld out pusha lods mov inc mov dec lods add push je shrl nop dec or call out pop xchg mov push insl add cmpsl inc out jg out in int out gs aaa out mov push mov ret insb out adcl pop lods or ljmp ds xchg inc ljmp mov or mov (bad) cmovb out jmp popf mov sahf mov movsb dec push insb mov movsb or pop out aaa jae or daa dec jae mov or movsb repnz sbb fisubrl enter (bad) (bad) sub xor call add popf in mov jne cmc or push in add test in stc iret adc lahf test mov pop arpl pusha adc jl mov fcomip sub mov mov mov jnp inc imul fwait iret cmp es int3 pop xchg push outsb pushf mov hlt adc mov ljmp rorl mov outsl mov cmp xor lods in add int or test jmp cwtl gs iret (bad) popa mov inc or nop jns in shrb test xchg sbb jmp xor lcall mov jl movsb jmp mov movsb xchg popf loope cmpsl cmpsl pushf out dec enter test mov aad lcall push test push mov (bad) mov and inc jg ss or lea mov std jb sbb cwtl push mov mov lahf (bad) dec xchg inc cmpsb cmpsl pop sbb jp jae lock add jmp es outsl inc mov (bad) adc add push add dec xchg dec mov movsb mov and (bad) add das jmp pop lret jb int3 mov mov cmpsb pop dec pop xlat sbb dec push inc sbb movsb roll sub pop in adcl inc rcl (bad) jle cmc and pop or or pop sahf push pop jbe bound sub xor pop xchg cli xchg inc cmpsb (bad) and cmp insl push mov idivb leave jle insb nop repnz mov jp dec jp lods mov lds (bad) xchg add sbb lea into xchg and es movsl cmp inc (bad) mov imul int fiadd out sbb sbb pop or xchg out jnp jl sbb ret les sahf pusha mov push roll in ret xlat sub mov adc mov mov xchg (bad) ljmp mov popf sbb adc cmp or lcall movsb or jne scas outsl sub inc pushf xor dec mov inc xchg mov enter movsl sti pop mov and adc data16 pushf mov int xchg stc ficompl in std push out mov push mov out rol xor stc imul jle pop (bad) push int3 jmp iret cmpsl push push int3 mov shr scas inc sbb add mov outsb cmp ret int3 mov (bad) into xor mov ss out or inc mov aas mov movsl hlt mov sub dec inc cld in fsubrl jmp in push or inc push idivb fisttpl enter xorl xchg dec mov jns adc outsl mov inc sub xchg adc aas or popf imul and mov adc dec cltd push imull jmp insb jnp sbb rcrb dec test add push cwtl push inc enter lds pop cld loopne push in ficom pop jecxz pop pusha xchg ret jl fstl sbb pop mov xor call rol xor fstpl (bad) arpl mov test scas cmp mov cli dec mov test pop sahf jp jb enter lret jecxz test jg mov cmp stos and mov imul mov outsl mov cmp push ret sahf fisub popa mov or dec jmp dec pop jg xchg xchg mov sar subb and daa int3 xchg cmp arpl dec aam add adc test fldz cwtl ficomp inc xchg sbb shll test cli out mov or mov inc (bad) (bad) jno imul fnstcw mov jg cmpb sbb sti pop fisubl jmp (bad) hlt push test xor pop dec mov or add clc push sarl cmpsb les gs scas rcll mov pop push test cmp jecxz lea jge adc imul pop sbb test nop cmp or mov lock xchg or sbb jns pop mov sahf add bound mov aam pop bound jle (bad) or das xlat insb mov imul fbstp mov sbb lods jp fldt test sub mov push dec mov imulb pop flds sar test popf jno rclb pop cmpl subl arpl jne sbb push mov (bad) or es lcall popa push jg xchg out addr16 into cmp mov divl inc in dec imul jns add dec rolb inc add adc push sarl cmp push int3 jno inc pop mov xlat mov mov (bad) sbb bound sub adc inc incl lahf add fwait mov inc and sub (bad) icebp outsl xor cs push in js in aaa jo adc pushf xor lret (bad) shll out lea pop and rcll pusha mov push dec pop push sti repnz mov popf mov pop popa sbb adcl push mov pop lock sub cmpsb (bad) test sbb and aas inc cmp sahf xchg dec pop cmp jns icebp cltd xchg sbb cwtl mov ror loop push mov jle scas sbb in mov dec sbb aas jne sub xchg or int3 jb and orl inc fs inc sti sar outsb testb repnz push push data16 and dec insb popa int push jo subb popa inc dec add inc dec mov mov mov sub dec sub scas nop add xchg cltd inc inc sbb push nop icebp xor nop gs gs call sub scas aas ret jl dec fs push fucom enter jb dec pop mov sub outsb iret mov push pop or push push imul out into popa jge push jns mov mov push push sbb mov inc outsb lahf sub pop push enter add lock cmovno xchg lock in jns or cltd jnp imul jno sbb sub in decb xchg sub ljmp mov adc test mov push sar sbb cwtl or mov inc in adc arpl dec data16 stos pusha (bad) and pushf sub cmp daa pop sub mov or shrl mov sbb xor popa push sub or es add icebp mov jl xor pop les ljmp adc out test rcrl cmc loope in add inc rcl mov stos jg push jnp and les pop (bad) cmp sub data16 cmpsl lahf adc jb or ds ja mov rcrl shll ficompl int lahf xor loope ror hlt sub jb xchg jl ret push and icebp gs jno js adc addb push sub loop cli mov xor test mov (bad) repz cmp ret (bad) and inc bound movsb dec popf jne jmp xchg mov jno in add cmp ljmp jecxz lret sbb jb mov pop call outsl jl lds mov cs jle repz outsl (bad) arpl add int3 int xchg in push movsl and mov shrl and and sub mov xchg add jno shll insb mov pushf lods xor aad pop sub outsb popf cld (bad) pop and faddl enter or into sub negb out (bad) ja pop dec icebp test ja mov and and pop mov mov mov shrl or jle lds enter mov fidivrl lahf and ljmp sarl imul xlat xchg cmp mov clc loop das lcall mov xchg jl push push jge sub loop rclb xor ret xor nop cmp mov sbb or lcall cmp add fldcw dec pushl outsb xchg fdivrs push pop movsb xor add movsb mov sub pusha test xchg cs push out dec adc jno mov fisubr pop cwtl jmp cwtl (bad) cmc xchg pop fwait push sub dec fnstsw std mov mov cltd mov std andps mov sar pushl xor lock sbb inc bnd ret fnsave notl mov sub mov fld hlt xchg sbb pop sbb bound xchg jg fbld add xchg sbb orl push repnz add adc push daa addr16 add ss push jne jb sub sub sub mov cmpsl mov cli (bad) popf fldcw nop stos mov cwtl pop std xor inc dec aam mov ret and ret ret rclb mov pop add jbe ljmp mov ja cmpsb add data16 and jecxz jecxz sub ds fbld add push rcl (bad) out test (bad) mov subl add add dec sub dec dec xchg lret dec aaa inc sbb pop lahf (bad) xor inc lods mov add data16 das xor sub add jne mov inc aas test inc not popa pop mov xchg push dec mov xchg lods mov je add call (bad) jp bound dec gs xchg daa out mov and sub daa mov orl jp push mov push sbb ljmp repnz inc out xchg mov outsl daa jnp das je dec cmpsb jns pop aas push and sub push insb add mov add jne imul lds jo inc in sbb mov test cwtl mov pusha jmp add loopne or cmp fldcw ret inc mov jle lea push pop pop lods out cmc pop mov mov pop mov jo xchg push repnz push js fldenv sub mov mov inc or lods lcall xor pop rorb jae push jnp push test add bound ret sub push cmovge lods inc add sub arpl repz jb push fiaddl push mov pop inc daa and lret rol push stos push cwtl mov fimull mov in pop or pop cmp xchg cs or xchg mov pop imul mov daa dec mov sbb inc pop dec dec (bad) jg pusha push insb xor adc adc cwtl and ds (bad) pop mov sbb push mov (bad) iret fisttp xchg add sbb aas (bad) popa rcrb xchg xchg int3 mov nop test pop (bad) mov adc (bad) inc pop dec adc push pop imul adc inc js fisubr jbe pop xchg and nop shl xchg pop xor fninit xchg shlb (bad) (bad) scas pop in aaa enter inc jae mov dec outsl aaa adc imul fiaddl jmp push enter inc sbb lret xchg div mov adc adcl sbb sub xor movsb dec add xchg mov (bad) mov inc aas pop (bad) xor lods fdivs push cmp stos fs pop (bad) bound xchg in (bad) (bad) bound rolb inc or mov subb sti xorl aas in jp xchg mov rcrl ja inc jecxz or jl stc out popa out mov adc or push mov cmp out xchg mov add xchg test adc fiadd xor fneni(8087 ss mov and inc aad fs jmp dec jne insl test out push sbb xor jns inc mov inc adc test or sub ljmp pop push pop mov mov push in fiadd sub push mov (bad) mul in adc push dec popf cmp stos xchg loopne in xorl mov push adc mov ret jmp mov pop mov jecxz push dec lret je inc or lock lea iret jns pop mov inc aaa mov push cli dec and inc inc lahf mov sub mov outsb dec gs cmp jg lcall pop sbb loope push ret popf dec clc lods pop or cli insb inc in fidiv sahf shlb enter pop lcall aaa xor and jecxz clc in movsl icebp adc cli pop iret push cmp rorb test addl icebp aad ret mov xchg mov push dec ficomp es sbb jmp mov sbb pop dec test ret nop sub add test shrl or xor insb pop int dec int dec xor inc clc dec bound dec scas jmp and or cltd lods cld (bad) mov ljmp mov lahf mov lods fwait jecxz repnz iret mov jbe dec and inc das cmovne jne,pt inc imul cmpsb fwait mov dec sbb orb ja mov cmp adc cmp loopne jno in lahf mov aad push sbb or cwtl outsl adc cmp stos andl test mov fild xchg dec and dec (bad) iret enter outsl push pushf push pop xor iret inc int inc dec enter jmp mov into stc js les jb jnp dec fadds das cmp stos mov aam popf adc test xchg inc fisubrl jno xor out sbb xchg popa adc pop mov push add xor pop xor inc sbb mov xchg sub shrb xchg sbb out xchg cmp mov pushf xor cmc sub std pop ret movsl fmul push sbb push pop pop fiaddl aam mov xchg or xor jne dec xor cmp mov fsubs and enter mov jg cltd lcall mov fisttpll add push adc push fdivrl jbe imul mov icebp pop in mov fldl xor leave test dec in jne sahf sub popl adc push cmp fsubs das mov jecxz aad mov and (bad) fs sbb sbbl xchg stos sub les sbb and push and aad cmp fnsave (bad) push iret (bad) and into pushf inc fchs jle fwait pop insb fistp mov add jns jnp mov ret cwtl mov or mov sbb inc mov popa (bad) jb push mov push jb add mov sub lods pop mov jg out sub adcl sbb dec push (bad) leave mov negb shl es sbb clc or sbb std inc (bad) je bnd lods aas femms add xor cmp cltd xor pushf jnp and cmp sbb push icebp dec jecxz stos mov push xchg xor pop ss mov stc cmp movsb xor leave sub and push jecxz imul loop pop adc cwtl int3 insb jp scas inc add fnstsw xchg fnstenv fistp in sahf repnz dec nop mov push mov inc sbb sbb sbb mov adc push pop xlat subb (bad) lods lods int3 mov xchg jp out jp fwait lea daa int3 mov cmpsb xlat or mov dec mov fwait imul repnz rolb or add sub xchg or sbb and push mov xchg aad scas lds push mov add dec aaa (bad) sub sbb cltd mov mov inc in mov adc push mov adc or push pop ror mov test mov lret enter fdivr bound xor cmp pop xchg push dec paddb xchg aaa das adc cld (bad) mul rclb and (bad) xor dec and lock cmp shl lods and xor movsl dec cltd out mov nop out and sub loop pop adc insl test jle cwtl or adc aad fist pop adc nop sbb rcrb mov lds out jae movsl inc mov fs insb jne loopne mov cmpsb loop cmpsl sbb nop dec or jge pop inc pusha lcall arpl xor cmpb ss pop ja mov in xorb dec cmp les pusha dec mov xchg int3 or inc dec addl add in ja ljmp sub shrl (bad) lahf int shrb sub cmp hlt jb pop outsb in popa jl cmp inc lret xchg add movsb add jmp or in xchg pop fdiv lea jbe pushf mov mov sub (bad) (bad) pop cld cmp jg push mov test cltd xor insl push jb push mov aam pop int3 in mov xor jns cmp daa dec jp and and xchg xchg popf add in data16 sbb or fwait rolb outsl add in pusha shrb sbb jo (bad) inc insb fs inc js sbb jae push mov dec insl fiadd xor stos imul out lods ss xor clc dec (bad) lods (bad) cmp cli sub aaa cwtl sahf cli adc cmp test arpl (bad) cmp mov xor push popf ret pop cmp sbb loop jecxz push xchg sahf pushf out lds or xchg xchg push orl push popf jb inc xlat push stc pop mov adc out pop and outsb push leave mov xor or jecxz pop rolb in (bad) ds push add cmp stos xor adcb inc mov mov pop arpl bnd sbb push lret sbb sub and lods mov pusha ss popf and popf rcrb stos adc (bad) out lods mov sub jnp jg mov scas add xor add add popa mov test sbb jge sti xor mov leave rclb mov xchg adc and push push ret mov and push fiaddl pushf cmp shl add gs xchg cmp adc ss sbb sub sbb xor out sbb mov sub je and mov mov fldt (bad) jne call mov jecxz push lds aaa in std cmp (bad) mov push xor mov jnp push (bad) pop or xor std mov sub lock mov mov dec and mov cmpb (bad) dec adcl jl cmp in mov xchg jl or and xchg sti jmp pop lock addr16 jae stc mov dec pop inc hlt adc insb gs cmpsl jne lock jp in aas mov mov push pop jo push pushf pop rcrl fsubr scas clc cmpsb mov and sbb and jp jno or lock cwtl xchg dec inc fwait mov scas jne popf popa (bad) xor jp and and pop sbb fdivrs jp pop js xor and jg push push fwait cmpsb jle dec cld jecxz lcall xor xor pop aam inc lcall xor stos mov inc into into sbb cli arpl inc dec mov test imul lcall mov adc fidivr mov or cmp ffree call lret mov inc xchg ds push dec sti aas fimull das out daa push cmp dec cmp add shl cltd lret sti std adc and mov mov adc leave imulb fwait and sbb and test jae pop adc xchg adc ja in inc pop rclb lock inc jns dec pushl subb adc (bad) mov ret sbb out fldl cmp jle ret test sub int3 call push arpl pusha sbb andb decb adc or xor sar pusha insl mov jp sub push jecxz pop jo gs mov and adc ss add mov insl aaa movsl jbe pop push pop imul or cmp popf add icebp or pop mov add addr16 and pop xor stc movsb lret data16 mov jbe test sarb inc sub andl cmp test jo rcrl mov ljmp xchg sbb outsb jle mov in or iret dec in aam or imul inc aas cmp cwtl mov jge and xchg jp sarb and or adc pop dec pop call xor cs mov test imul lock or gs sub xchg cmpsb in push pop xchg xor adc inc mov fs cmp sub pushf mov mov fcomip xor hlt js lahf mov jo sti insb int3 xor adc jo bound pop jne (bad) mov push js hlt jne stos cmc out jl lods xchg das jno xor mov cmp inc notb inc call fsin mov imul into jg fisubrl fnstsw ljmp lods outsb pop in add inc xor push sbb inc sub jb sti jno or cwtl (bad) jecxz mov nop das sbb insl fcoms out dec and dec or rcll in mov sub jbe sbb xchg mov pop and pop test movsb pop push cld gs enter push mov cmp add inc lahf push xor int3 mov repz add (bad) ret push xchg or dec out ret mov (bad) push fildl js sbb testb aas dec scas fsubs or leave into push int (bad) loopne push out (bad) fs sub xchg hlt xor cmpsb or mov cmc xchg xchg inc push dec cmp lds test dec ret testl push mov dec and rcrb int3 cmp mov (bad) and pop inc add jl stos daa jmp and and testb rcrl push push dec jnp test nop push or in sbb jne mov add adc (bad) jbe or sbb mov bound shl lcall cli fdivrs dec or jecxz xorl sub jae jno lahf data16 cmpsb inc dec mov out push rcll notb dec cmp fwait jo xor out rcr xor xlat add jmp mov test addr16 sti mov push push lods pop mov cmc addr16 pop inc mov and das xchg add xchg lea fisubl out iret jle cmpsl lret mov iret lock adc in push jae cmp adc inc push imul pop add xor xchg xor fwait data16 xlat sub sub movsb (bad) (bad) or mov cmc lcall es inc xchg sbb bound (bad) (bad) push lods cld xchg adc jmp bound push jne rclb xchg ja mov push xor xor movsb (bad) int mov lcall xchg pop adc int3 lcall mov bswap (bad) data16 dec fs test cmp out cmp push sahf inc mov ss fcoms sahf shl xor stos mov lcall in in lea xchg push push inc push sub jle ret cmp jecxz mov add fildll sbb jne cmp movsl xor inc xchg push out or push lds mov insb and loope push fidivl dec lods js sub jge sti aas cmp sub das or jae inc outsl jmp xrelease mov mov hlt ljmp js imul test (bad) mov idivb ret out pop cmp add and sub push add mov (bad) xor ss xor insl dec jp mov scas loope sahf xor enter fild call xchg clc ret out into lahf or ss push (bad) testb lock out push sbb fs jb xor mov adc dec mov out or pop pop mov xchg fwait cs push add adc andb mov and jno daa pushf int3 jnp sbb sbb je mov movsb sub adc les std push in fidiv dec ds pusha mov lods addr16 (bad) nop cmp inc and xor push push sub and jmp gs loop mov mov mov imul push push cmc pxor loopne cmp (bad) dec mov les sub imul jno (bad) notl cli sub inc mov xor nop into mov xor and cmp call cli mov xor iret jb dec in cmp cmp mov jo xchg test ja (bad) xchg paddsw outsl dec das or push es (bad) scas jno pop pop jg add ss repnz inc cltd out lods xor popf xchg leave sbb loope nop out repnz and mov mov mov in sbb loop mov and rcll adc arpl jmp xor in xor or push xchg into outsl push cmp inc mov pop loopne mov test cli pop mov pop mov pop sbb mov or lea (bad) fdivl sub or mov lods test sub xor pop and ja movsl pop sbb aas pop and add aad sbb mov mov sub jae cmp mov fisttpl fstps xchg sub jg cltd xchg orl jp bound mov ljmp loop lret movsl enter jg mov cwtl dec push (bad) inc push jge sub pop (bad) xor mov sub xor sub fldlg2 xchg orb pusha sub pop jge xor in jae jmp test idivb std push daa adc mov or jle inc inc inc push xor pop and mov inc and xchg daa jns,pn pop mov xchg dec test and in xchg mov dec es pop (bad) loope add popa sub int bts and and mov cwtl jae xchg push enter mov leave xor adc add jno cmp ja jae mov mov nop inc lcall and jle dec pop mov mov xorb mov push pusha cltd cmp push aaa mov inc scas or in loopne pop test sub das xor pop adc scas inc xchg push jno add rclb pop in bound stos insl or lret aaa fwait add es adc cmc inc mov jle in add push xor mov gs add (bad) sub rclb dec popa dec ja call and sbb mov add outsb es pop cmp xor pop dec adc fbld aas daa cli fwait xor cmc jecxz inc insl lods pop pop mov mov dec (bad) jnp mov jae js clc cs or icebp movsl int in test adc sbb dec or ucomiss std movsl btc push pop shr je stos aas mov sbb ret cld xchg jge fsubp and (bad) xor mov pusha add ret adc xchg or sbb dec mov mov je mov and lret jno out loope push std cwtl pop pop xchg ss add (bad) jl not stc jg xor jl adc dec hlt mov mov mov mov xor lret mov adc jnp add xchg jo out adc xor sahf out leave xor test std frstor bnd or pusha repnz popa cmp xor insb dec out (bad) mov sub test or leave out in lods cltd cmp lods lcall ret lret stc or (bad) push rcll jge insl jmp std fstps sub mov fisttpl and fsubl loop pop sub xor jnp test ljmp sub sbb loopne js imul orl dec stos cmp jp push jae mov mov int3 ret push or cmp add lea sub int3 sub mov or xor sub mov int push loopne loopne jae loopne push and call das outsl mov arpl push (bad) jo notb pop xlat mov movsl pop jo popf cmp jmp (bad) dec jge fwait mov or and add jo ljmp ss mov fwait enter xchg fs jb jno cmp or (bad) cmc cmpsb test imul adc xchg push pop adc adc mov xor aas inc loop xchg xchg pop jmp adc shrb sub pop clc inc int3 cltd cli imul xchg lret cli dec aaa (bad) hlt fs pop or (bad) sti add lods aaa in test inc cmp jge orl mov xchg outsb arpl test andl (bad) fs xor negl mov gs js jns into mov cmpsl outsl mov gs inc insl test sub adc stos sub pop mov xchg xchg and lret lods and mov (bad) and jns pushf test cmp insl scas mov xor stos xchg out fs mov icebp push mov adc pop jecxz mov lods fs pop sbb lcall or adc push xchg je mov mov ds int3 mov or xor outsl mov dec pusha stos sbb lods xchg ficom repz arpl in es mov adc sub inc (bad) cmpsl xchg int3 or jg pop pavgw sub aaa (bad) (bad) jbe ret out sub pop into cmp sub bound mov pop or jecxz adc loope xor and inc iret mov loope mov inc lds fdivrs cmc pop push and mov lret movsb out mov gs movsb enter sbb pop push inc outsl lret pop ljmp mov add dec pop cmp int pop outsb mov popa sub (bad) mov outsl jns,pn inc daa pop or sbb push daa xor pop and pop adc adc aas xchg mov push mov cmpsb jne call mov push sbb xor test aaa popf and sbb or inc cmp jae fyl2xp1 xchg mov aam loop lcall je dec aaa and faddp xor sub pop jae adc call insl xchg dec adc jg push fildl stos xchg inc xchg jl aas lods push jp mov insb push int3 dec fwait dec subb adc mov jle jge jle push movsl jno repz inc nop lret mov xor (bad) gs pop and in das fmull inc and (bad) gs mov dec mov ss (bad) nop mov add dec jo adc cmp dec bound xchg test sti bound ret in push ss ret xor and dec add inc pop xchg sbb loopne jle push mov xlat into and orb loop data16 fwait out (bad) push mov int push sbb jo (bad) cmp mov lea inc xchg inc sbb jb and push xchg sahf inc mov adc out xor int3 jle imul aad and and or mov test xor pusha and dec adc adc adc add xchg dec out mov mov movsb push es xchg je pop sbb (bad) mov sub add int sub ret shrb stos xchg std cmc dec sbb jne add inc jo daa push test and inc outsb add ja inc or idivb jle mov test in and xor jle push js inc mov jno push pop imul out xor add insl sti lock loop jmp ss jne xor lret and push les add movsb inc sbb (bad) jb roll insl aam adc inc (bad) mov mov inc mov push (bad) cwtl fs cmp aaa sahf and rcrl test cld jae aaa cmpsb fidivl cld push je fnstcw jne inc cmp (bad) daa out mov inc mov bnd ret mov jo push imulb popf loopne mov pop shlb push ret cld popa mov (bad) push push adc cmp inc push (bad) mov repnz and sub xchg insl scas out scas and in flds adc mov pop scas sub rcr shll nop mov rclb insl int sub das arpl (bad) nop inc outsl divb repz loopne mov and (bad) dec aaa jb inc mov add xor sub push lea cmc daa mov in cltd sub mov pop rcrb addr16 xlat popf jb mov push adc or or lahf mov push sub ret nop dec sbb (bad) fcmovne or push test and aas mov fs inc jg imul jecxz test inc fildl mov xor mov dec xlat add (bad) repz sbb (bad) push dec mov in sbb and mov pop je data16 mov insl inc pop and aas fldt xor dec jmp and inc xchg xor aad (bad) cmp lock lods jl je jge xchg neg pop ret xchg mov push lea jmp test pop push in pop fisub fwait xchg xor vpsubb cld pusha push push out mov xchg aaa movntq adc pop push adc jae cmp popf and dec push (bad) mov inc int3 hlt repnz adc scas outsb mov dec popf and sub das lret push sbbl push mov push lods out int adc xchg mov lahf and lcall loopne mov sbbl addr16 push leave scas and inc orb out testb sub push inc movl enter mov dec and (bad) mov mov inc out and mov loope mov sbb inc shl data16 xor pop pop mov fldenv xchg aam insb mov cli or cmp add loope cmp cmp daa fadds lret leave fistl pop ja dec jecxz jo pop int sub add dec dec sub push jb mov addr16 aad mov push mov xor xchg dec punpckhdq lret sub rolb jecxz lds or mov add lods jbe jno pushf (bad) mov rorb sbb popf (bad) dec and xchg push jbe adc mov fimul popf mov inc aaa push daa lods repz adc inc mov and xor add mov or aad fisubl ret popf mov lcall stos mov data16 enter in push aam dec (bad) in in stos in arpl pandn mov scas xor into lcall mov out lods jecxz in push sbbl jg adc inc inc sbb add or or pop pop dec dec data16 xchg inc inc das in inc int jae lods xlat inc ss imul and jno xchg fwait popa pop sub bound sahf movsl or rorb imul repnz out popf xchg lret fcmovne xchg cltd imul out push andl jae xchg or stos dec movsb xchg push sub lods mov jae hlt jns in nop jbe divps xchg xchg cmp mov or or mov ss jl psraw es iret into stos xchg jae es pop aad fwait mov cld cmp fnsave loope mov in or inc xchg push sub bound test (bad) sbb in dec cmp shlb and lret pusha mov jno loop sub xor movl push sahf mov ljmp jge xor mov (bad) nop cmpsl xchg dec imul cmp jnp repz loop movsl psadbw sbb or ss inc xor push and mov mov xchg daa mov jecxz add adc push inc mov jmp aas jl add xcrypt-cfb cmpsl and (bad) les daa inc mov jne lret adc jae inc sbb cmp cmpsb or (bad) mov loopne popa dec adc or sub pushf dec outsl or aaa repnz sahf ficomp mov xchg (bad) rolb push ja dec xchg xchg sub mov and mov mov fdivl outsl leave negl hlt pushf push push cltd hlt call lods dec jo jp inc loop push jl add out inc sub adc push dec leave jp insl (bad) lcall dec je ja and scas movsb jb inc mov scas gs lods movsl and xchg lods gs mov jle cmp fisubrl dec sub xor out add jecxz (bad) pushf add mov loop je and pop add add push lret pop dec jbe sti clc xchg sub cli cs cmp inc (bad) xor in pop outsl mov mov dec push fnstsw and bound adc inc mov mov insl loopne incl dec pop push (bad) fdivr mov in xor mov add mov sub loope cmp out ds xchg sbb fucompp add insb or mov bnd movsl out sub inc loop inc sbb sub pop cmp jo cwtl sbb sub repnz pop xchg xchg int3 ret std add fnstcw dec jmp mov mov mov xchg aas cmp inc aaa (bad) popa pop sub je or cwtl loop pop dec lahf jnp dec cmp and (bad) jo adc push cwtl int mov cmp push loope loopne xor movsb inc jo push cmp or shrb cmp jbe cmp insb inc mov xchg adc mov pusha int3 cld idivb and mov jecxz testb mov jmp mov lahf jnp imul pushf add (bad) pop sub fcmovbe mov or dec pusha jl dec sub fimull inc add jl stc sub mov adc addl lods in mov imul int3 mov push xchg inc pop in popa mov int3 das pushf xchg les xchg add add pop out repz js loopne mov push jae sbb cmp adc inc (bad) dec sbb adc mov call xchg lret xlat sbb sbb push sub and pop dec out stc mov add or (bad) cmp gs bound add adc push sbb movsb aad mov fdivl or aas add xchg pop (bad) xor das cmc add imul pop (bad) int3 sbb fistpl xor mov inc push loop ja stos dec sbb xchg xchg sbb jbe inc sbb mov ret push into dec xadd popa pop sub movsl mov jne pusha in cli mov dec imul sbb and xor push out lods xchg insl pop xor or mov fisubl pushf push je jnp sahf aaa int3 xchg int3 lock insl daa mov jo mov sub iret sub stc movsl mov dec mov pop mov sub ds lret pop dec stos popf (bad) hlt mov (bad) xor ljmp (bad) mov add xor dec jl pop mov es int3 push cmp push xchg pop push or ja and push dec dec dec out stc mov (bad) cmc mov gs outsl aaa push mov jl add pop cmp lock dec sub jecxz mov push pop imul jg daa out jne (bad) fsubrl or hlt (bad) pmullw inc je dec lods icebp adc sub mov cmp mov add jns loop mov rclb cmp push add aas ss out call xchg pusha push repnz sub cmp lret ja mov jecxz fs arpl arpl or loop xchg repnz sub leave pop aaa xor popf (bad) add (bad) fcomps repz (bad) sbb mov dec jmp add lcall and sub and gs mov inc adc sub mov lea push gs jo xchg ds ja stos clc adc int3 lret push sub pop mov dec lea push lcall mov mov enter cld mov add fdivl pop mov mov add ja push lret sub push mov cmp push dec jno or cmp cltd cmp sbb dec arpl scas aam das xchg jne cmp in arpl cmp xor jmp movsb loop leave and mov into xor fs push outsl daa mov xchg push fsubl outsb pop test (bad) ffree jns push adc xchg inc ljmp call rcll add pop inc lds jnp jge adc outsb movsb jae xchg jnp push adc sub pushf stc lcall mov popf movsl fwait cld inc and sbb xchg adc shll call pop add stos xor rorl lahf push (bad) std mov inc mov pop xchg popf add jp cmp pop std addr16 iret rorb mov sub dec cmp dec mov add cwtl nop mov cli je push pop cmp icebp push std iret insb mov lea mov je insb dec outsl ret test jo dec jnp (bad) push js sbb vdivsd jne into lcall es outsl xchg (bad) lock out movsl sti push push mov and mov jb pushf and mov jne mov inc and les lds xor cmp mov lcall xor sbbl lret dec cmpsl xor iret fwait in or xchg andl loopne imul repnz mov pop sbb clc cmp push and xchg lods pop mov push rorl push (bad) jle pop pop add mov push xchg adc es ljmp ljmp stos (bad) fild jae dec push scas mov (bad) jno xor xchg out pop andl mov dec xor xchg rcr in leave dec es xor dec adc jbe lcall mov outsl (bad) je mov (bad) pop pop mov sahf jl cmp pushf mov sahf jmp movsl jmp cmp jl fwait out mov mov jo inc push push hlt out add and in rol cs inc sub popa nop rcrb mov cmc loop mov pushf pushf mov pop pop jle arpl imul sub in dec dec imul xor sbb sub je jb or popf lcall leave in insb lds mov out xchg lret adc jb arpl nop add ficoml popf repnz push jo fucom dec dec mov push pop push fwait xor dec daa sbbl pop loopne or out adc stc subl cmp jnp imul es xor (bad) cs and popf imul jnp pushf sbb ja jbe (bad) push xor jg mov (bad) test arpl pusha mov jmp gs sahf popf outsb shrl pop popf lods and test add mov jle in jnp or cld jnp sbb push int3 lods fdivrs pop mov pop (bad) int (bad) decl xchg loopne pop mov jnp addr16 std gs pop std or xchg insb repz jae lock mov adc sbb out adc or sahf pop cmpsb cmpsl dec fwait mov inc push xor and orb ss push dec xor fildl mov pop out sbb in test bswap or push aaa (bad) cmp loopne mov dec adc xchg jo adc lret fldl ret (bad) pop or sbb and js addb inc sti mov in inc nop pop sub pop lods mov pop push push dec push scas push push jecxz arpl cmp faddl dec in push inc adc xor xchg test sub pop nop fiadd xchg repz hlt sub sbb push pop lds xor repz movsb sub aas js in mov adc cmc or cmp inc inc add mov push jecxz push push cmpb jne adc push cltd movsl jecxz push cmp mov jge sub mov add push mov iret xor pop test test aas mov mov xchg add in je mov and insl jns push (bad) lret xor sbb sahf add mov xor repnz fcomi leave rcr test jge and lods fxch ja pop stos addr16 push add shr pop shll lods sub loop (bad) push sbb xchg xchg loopne mov push dec cmp adc adc cmp pushf mov outsl loopne das addr16 sbb fs aam and pop test and inc and ret add jecxz (bad) jne xchg inc dec sbb mov mov loope mov mov sub push pushf pop test adc fsubrs (bad) mov push xchg xor mov sub mov inc pop out dec inc test push jg notb sbb sbb jnp jae sbb ja cmpsl pusha push and sub fistl fs mov dec add sti gs aam adc push hlt adc mov push jge xor push sub jb cmp pop pop sbb cmp inc dec iret xchg jo loop pop mov int3 push and out mov xor cltd jge xor jp add lods jne sub cmp mov clc mov xor loopne pop arpl dec jne inc rcrb insb mov das add repnz cs adc outsl ret xor sahf inc fcoms xor cmpsb dec push mov cwtl insl adc inc mov xlat rol cld sbb pop sbb (bad) scas or (bad) les push fcomp sub pop mov push shlb sbb aaa cmp (bad) mov xchg movsb xor cld inc jo add insb jb mov cs push inc cli mov mov xchg push add loop fwait out lcall push inc push dec ret push fsubl push mov adc xchg js icebp jae loop movsl xchg cmpl add aad pushf (bad) movsl repnz sub inc dec repnz lods pop xchg or loope push aas xorl adc and cmp mov pop jmp (bad) in test pop dec jo mov scas out xlat aad add inc jns adc daa xor jle sub sub stos arpl mov jg out lahf faddl fisubrl dec movsl mov dec mov out cmp push xchg push test test (bad) icebp sahf pop (bad) mov arpl jno sbbl cmpsl iret pop push sbb insb dec or mov mov addr16 fwait mov pop loop dec in add pop and cmp dec sahf inc cmpsl ljmp popa add lock fwait jecxz bound inc adc inc (bad) outsl xor movsb xchg inc sbb sub or jb sub insl inc mov and adc cmpsl and sub out sbb popa sar and cmp mov sbb pop xchg out lcall sbb cmp mov sub cmp jo in dec add daa sub mov enter outsb mov icebp test imul cltd push fstl cmp loope mov fiaddl or pop insb ror dec in and stos xchg and sahf jne xor push stos mov jge add push dec int movsb pop (bad) test hlt cs insl dec adc aas push loope movsl push dec xchg add cmp in out hlt add and jne lods mov sbb pushf ret in je adc fcmovnbe add gs adc xor xchg push xor mov ljmp loopne xor clc push xlat push sbb popf add dec adc adc mov xor (bad) sub je xorl out iret into mov mov (bad) push lods in inc je daa inc int3 sub pop mov jb dec or pop testl out lods jb shll imul sub jbe sub nop sub and (bad) sub nop cs roll popa dec je sbb mov movsl mov sbb adc aad and adc pop push test dec movsl xor enter in fsubrl int inc adc sub pop ret out sbb jge jb add adc pop push or imul pop outsb pop sub jl lret xor mov cmpl inc jl push ljmp lret lea fidivl jl loopne movsb scas fdivrs not cli xchg pop pop insb push mov fnstsw sub fistp in in popa xor push inc xor mov sub mov addr16 cmp cmp scas mov test jge xchg sbb cmp gs pop sbb push daa frstor pop pop sti or stos mov stos inc xor push je pop push mov test fs xlat cs pop repnz jg cmp out rcrl add push mov pop mov lahf or adc fs dec (bad) hlt nop jae (bad) mov xor push pop mov in cmpsl or sbbl call js loopne mov jno aam loop aam mov (bad) (bad) and andl es push pushl xchg pop sti je stos pop push push sbb adc xor fcoml push sub ds cmp rclb pop sbb pop imul popf adc test push jo sub push mov inc les rorl push jle jmp (bad) ret sbb (bad) enter fimull mov push mov ss adc push in inc bound fs imul pop jo sub cwtl jle inc cmpsl sbb and sub and dec (bad) jne imul movsl xor inc roll cmc or mov in outsl jg out xchg xor inc mov (bad) into cmp insl aam jg mov test rcrl cmp or icebp das cmpsb and jecxz adc cmp xchg fist mov mov push lds and push cmpsb (bad) and xor fs fist jge push (bad) sub pushl mov lahf cmc or mov fs jb pop xchg popf cwtl out add xchg sbb or adc loope xchg mov je xchg leave jp out pushf cmp or imul data16 sub dec (bad) xchg mov sbbl jecxz push sahf mov push cld jbe mov mov add sarl xchg in add push fidivr mov (bad) leave imul out (bad) outsl das adc pop mov or xor cmp mov stos lret lret rcr stos sub add je cmp cmp pop or mov data16 or dec das adc and push ss test cmpsb xor pop cwtl pusha xchg xor or enter mov pop jge mov inc fstl jle push pop xor push dec jl ds test mov adc push sbb pop sbb xchg out jecxz shl mov loope adc mov mov inc and call mov leave pusha repnz sahf inc ss pop test test gs pop pop ret adc and pushf push and stos push popa lock sti inc divl mov cwtl scas add fadds mov loopne fldl push fdivr pop iret call sahf xchg outsb inc int3 mov andb add mov push pop and pop push aas pop inc jae xor call inc sub cmp xchg arpl clc jns fist cs inc xor mov lds lock and outsb add lods stos pushf (bad) cli mov outsl stc pop repz addr16 insl in push and sbb cli or or xchg push ss xor inc push push jl cli rcrb call repnz jbe (bad) mov gs ja (bad) fldl xor les sbb push in out adc movb xchg jne push lods and dec mul call mov inc es jecxz movl pushf dec xor pushf imulb fdivs pushl pop stos divl dec ljmp cld jne es stos cmpsl inc cld add xchg cmpsl xor fs sub or sahf mov imulb imul in pop popf xor add cmp (bad) xor (bad) mov inc not std mov jmp xchg test sub mov iret or jnp rcr loop pusha mov fcoms outsb and xchg mov inc sbb inc mov fsubrs test xor fs call fstps adc jbe adc mov add xor lods xor rorb pop push lcall inc sbb add into cmp push sbb pop loop mov out rcr lods xchg and enter js dec mov and xor push jg loop cmp and dec test mov cmpsl mov mov stos add ret pusha jl gs cli mov mov mov push adc jno dec inc enter fldenv dec mov fidivr cs push jo sub gs push jbe out mov dec jo pop inc lods cmc into sahf in mov in fldt push jnp add jno sub jg repz pop aas repnz leave and or gs fcmovne aam pushf push sbb imul jae mov imul dec push inc outsl dec dec ret rcrb ds add mov sbb ljmp cmc xor pusha mov mov cmp push pop push dec jbe inc jecxz push pop mov insl sub push jns rcl in mull add lock (bad) addl pop push test sbb cli pop ss add xchg scas xor scas stos push movsl xorb mov sub lahf sbb loopne test in mov inc xor aad imul maskmovq mull insl sti pop bound testb inc inc cmp dec mov sub jmp mov push mov pop pop sbb dec rcrb mov addr16 icebp sbb mov pop pop cltd pop pop pop int bswap aam movsb testb inc leave mov (bad) loop addr16 sbb pop push (bad) sti lret data16 push and and inc repz push inc call imul pop xchg mov mov xchg fs mul ret movb addb push inc mov mov aas xchg cmp (bad) daa jl,pt adc and es lahf jecxz sti fstpt dec je (bad) iret repnz insl pop adc or icebp jo lea cmc je xor adc call arpl mov les inc sbb dec in sub cld fs mov jno add insl out enter adc cmpl ficompl jle mov jge in stos movsb pop lret lea insb jmp ds mov div inc lods int3 ret sarl mov lret push dec jns push or mov sub pushf jge testb jae push push mull mov repz jecxz aad xchg mov add mov into inc ss adc sub and insl xorl jne iret std dec in sub stc imul mov scas fnstsw xchg daa jge sarl out es lock mov lds and dec pop jecxz (bad) sti pop mov rcll pop (bad) sbb iret cwtl mov push (bad) movsb jb adc push movsb fidivrl or scas mov cmp jl rol pushf pop jne ret xor jl push mov push (bad) add arpl fild adc pop ret jmp clc sub insl shll jg add pop jge push inc sbb les sub or add stos lahf in sbb jne iret xchg dec mov stos jae lea pop push sub cmpsb cmp and adc je movsb xor sub dec das fstl sbb (bad) dec and mov xor fmulp call add fwait outsl inc push cmp rcr ds ret mov mov imul call pusha inc mov mov adc rcl (bad) clc lret (bad) mov pushf and jae fnstenv push xchg inc add jecxz icebp sbb jecxz leave mov cmp sbb add test ds (bad) jne adc cmp dec cmc shrl fldcw ds cmp mov negb xlat adc scas stos dec aas pop dec and jno sbbb sbb in jns mov movsl xchg cmpsl out mov sub or xchg imul inc test iret and jecxz sarb ret inc mov push adc ds mov loop or xor or inc cmpsl loopne xchg popa cmp add in icebp (bad) fsubs (bad) or imul cld jno loope lret popf mov stos dec mov cld clc icebp pop insl cmc dec loope mov cmc add daa aas (bad) fstpt test cmp ss xor cs adc ljmp jb pop push pop orb mov out gs inc mov sub nop inc inc loop jno push imul je jge pop push into in cmp aaa in fstl xchg xor push lods gs push aas loopne sub je fsubs jns pop sbb neg movsb and outsl sub ja dec push xchg or pop or pusha jnp iret dec fisttpl rorl jae fcmove (bad) pusha sarb or add and cli es fild xor push ret jo (bad) xor xor cld out sub mov enter dec dec jnp sub cmp (bad) jmp inc fcmove cmp push fsubr xor jl inc adc mov pop lods xor clc popa sub nop and adc out dec fsubrl test inc mov and cli mov sbb mov in inc mov xor sarl rolb mov cmc xor fidivrl mov xor in sub ds mov mov jne,pt jno sbb inc cmp and inc sahf int pop movsl push dec xchg int call mov fldl in cmp enter pushl repnz ljmp or adc xor (bad) jb push and xor aaa and lcall (bad) (bad) cwtl sbb test ss cmp bound dec aad xor mov xchg out sbb pop jl mov sarl sub pop int3 pop popf push mov sbbb imul pop cmp mov ficoml inc xchg and lods (bad) mov imul and xor inc outsl insb jb pop imul dec mov and rcrl out mov fnop ss lcall xchg repz fxch inc adc push rclb and pop add or fisub lret and mul pushf ja fcomps xchg gs xchg push mov std inc insb dec cmc add jne mov gs fldt int3 pop lds push cmp jno adc sub jp or inc or out and (bad) nop push (bad) call push xchg push inc test and dec int3 push mov jecxz inc lret das xor pop adc or cs fsubrl fistpl je jmp sbb dec imul popf (bad) push or mov mov popa xor (bad) scas push pop fwait out jl mov negb sub adc pop addr16 rclb stc loopne mov gs int3 mov outsb xchg adc lahf jb xor cmpsl test xchg sub jb movsb jl ds imul and mov xchg test xor push cwtl bound mov cmp call mov popa ret loope xor push pop dec push daa sbb xor mov clc push lcall aaa in nop mov gs pop call and fsubl gs in adc mov pop cs call cmp sub inc pop pop imul push jg xchg dec scas add push je mov pop xchg xorb jge inc xchg push push mov jp rorb push mov arpl lods and ficomp in (bad) jb fistpl call fiadd ret and mov cmp push push pop fs repnz rclb mov pop pop pushf push sbb stos loop sbb jno int xor jle sub test int3 (bad) lods xchg push sti lea pop (bad) push lret orl xchg inc imul push cmp inc js push mov andb add cmpsl pop mov mov sub mov imul jle push mov shlb sub sub push add dec test inc fldenv adc pop (bad) outsl inc xchg cs inc dec subb mov insl pusha jb loope sbb fnstenv xchg adc xor jo mov push insb sbb test xor call imul aam cmp sub int3 faddl insl in push push fdivl int3 popf jmp pusha aam xchg inc (bad) in sub ror sahf int3 jno mov lret std push cmc rcrb cltd pop or or dec outsb in movsb push mov xchg pop ljmp call in xor lret lods fadds adc enter in fidiv nop (bad) xchg sub pop sub pop mov xchg and outsb in or sbb cmp call push sub insb mov dec xor xor push cmp loopne imul push lahf dec xchg ret xchg and and movsl ds pusha push (bad) dec cltd push fs test xchg sub andb clc cmp stos fdivrp mov je cld jbe bound cmp dec mov je inc nop rcr and clc loopne and sub lods inc insb ss pop and jp out and outsb (bad) pushf xor xchg inc psubusb add lret stos inc mull jne sbb int icebp lcall cmpb scas inc lock out mov and mov out ja jge je mov and dec icebp aad sbb lock jae add pop xchg jns and xchg dec lret dec lods repz pop inc fimull inc jbe repz xchg push adc jne push lods out sub jae xor mov mov mov stos add in in (bad) dec pop pusha xor loopne bound mov push call cld or mov dec adc mov fadd idivb sbb jno dec xchg push sahf lahf in cmp sbb outsl or pop in sbb push lds es bound mov push hlt lret (bad) test push gs mov pop sub cmp fidivr mov and mov jne sub add or jns stc dec cs pop cmp js xchg push jg adc pusha les mov ljmp (bad) dec dec lea cmp sbb and pop sub or push arpl (bad) mov (bad) fdivs insl aaa pushf inc jno cmpsb adc cld vpunpcklbw sub sbb pop jecxz nop jae pop (bad) xchg jb and sahf pop sbb push pop mov lret movl push push jl lods jle inc aad mov mov mov test xor aad and push inc fldenv fsub scas mov xor out cld rclb mov cwtl cmc sahf push push movsb test addl xacquire movsb enter mov sub add es outsl sub mov mov sbbl dec scas add (bad) cltd inc pop inc adc and add push jne push jo sbb xor leave pop push aas dec inc sbb lock addr16 js in fstl xchg add add and xchg jp lea int3 (bad) ss sbb mov nop ret sub sbb out inc ret jmp pop test fidiv pop jo mov push xlat (bad) sbb adc lods jno je push cld dec lret jle dec cmpb inc dec gs sub push add adc push int3 outsl stc jbe dec push (bad) test mov cs lret and and fsubrl push fwait jo dec cmc jge dec jbe jnp sbb lds and enter or mov cmp mov pop mov pop mov pop in shll (bad) pop mov mov ss pusha mov xor stos xchg mov jl pop cmpsb sysenter xor inc push jl pop inc divl sub lds push inc and add jnp pop cmpsl add js fist call jmp cmc sub adc dec ret sub inc nop xchg addr16 pusha clc xlat inc dec xchg cs out mov push jbe (bad) fs out cmp push call cli dec aad add fidivrl lahf ja mov fist (bad) jne test inc push push les xchg push in loop dec enter andb insb inc pop (bad) int mov push das movsl jbe test push fucomip repnz popf into lock or outsb sarl mov sar lahf push push push sub dec mov pop jnp ret notl mov adc addw jno enter xchg sbb out das push and dec xor ficomp xor or lods adc (bad) fwait lahf xchg push movsb das in outsl cli push ret sbb (bad) mov ljmp divl xor jge push mov out inc cmc aaa popa test push lret xchg pinsrw ss hlt or pushf inc jl xchg fmull pop test mov popa mov jge mov add push jge insl (bad) cmc test mov xor aaa bound fistp xor xchg ja stc subb cmp bound (bad) pop mov idivb push pop fistl sbb xchg xchg insb int3 jl cwtl inc xchg loop inc pushf cmpsb add rol pop popf jp push pop gs popf push mov or adc es or clc xchg ret cwtl gs adc or pop bound push and ljmp lret repnz inc mov jl push jno,pn test mov push lea outsl push jecxz clc out rolb push in dec cmp cmpsb add inc fidivr jb data16 cld popf or mov adc clc lods movsb push push je aas clc dec or jp into mov out mov mov scas (bad) xlat fdivrs xchg or add loopne rcr pop inc jo movsl xchg pop int3 out mov pop sbb push mov dec push jne cmpsb dec stos adcl sahf sbb ja or mov adc (bad) (bad) pop xor xor es mov cmpsb std leave cmp pop add fisttpll repnz add (bad) xchg clc and bound divb mov jae cmp repnz mov fmull int3 push mov push sbb aas jle idivb aaa dec jnp roll bound lcall ds fmulp cmp mov push adc and xchg out add iret inc pop pop sbb lret pop in and mov xchg out out xor (bad) sub dec (bad) sbb and sahf sub popa mov lret fisub pop outsb lret les data16 mov into pop add (bad) adc mov mov cmp fild jb lcall sub int3 mov jmp mov test ret sub mov sub add int3 aaa xor or das adc nop lock in in stos int xor mov lahf add in loope sbb popf jae mov jg and xchg rolb dec xchg fsubrs lret (bad) dec and mov dec xor dec pushf pop sbb shrl aam add xchg add fisttp sub push les repz fdivl inc clc mov call repnz repnz dec push das fwait adc fstps mov push imul mov daa jg sbb ret mov jge (bad) sub adc (bad) push xchg in adc js mov pop dec pmaddwd push aas in push xor jns mov ds pop and jo imull xor mov testb aas push jnp addb (bad) fstpl adc jmp xor es sbb jae imul (bad) or xchg aaa sahf jp andb cmpsl cmpsb ja mov flds sbb popf or push jnp cld (bad) cmc mov orl mov xor popa (bad) lret das mov pusha jmp arpl or and out push xor or cmpsl loop add dec aaa and and mov int inc inc out mov jo (bad) hlt aad xchg rolb and pop ljmp call pop add fdiv imul js movsl ss (bad) sub cmpsb mov jmp icebp call or mov test cmp nop enter pop aaa es jb fucomp cmp test scas inc add pop lahf or aaa mov xor mov pushf aad cwtl add aas loopne push and jle inc xchg divl pop jle add movl add out rolb inc mov sub add insl jnp mov xchg pop inc push leave movsl mov inc cltd scas and push test pop scas movsb dec popf in mov xchg nop rcrl adc xchg adc jecxz and mov stc ja in push xchg shrl je xchg and pop mov iret xor and hlt and jl cmp mov sub fld inc das in outsl pop xor cmc and xchg push sub pop pop nop fstpl outsb xchg (bad) hlt pop ds scas cs xlat outsb adc pusha pop (bad) sbb sbb orl test iret xor jnp push and jnp add icebp add xor mov jl hlt aaa icebp mov jg sbb add push shrl mov insl cli jecxz int jns sub sbbl icebp cmp das fwait sahf adc aad int3 ja js jle nop cmp adc leave cld int3 mov and sbb adc loope js mov jno (bad) push outsb xchg pop cmp mov mov and lods cltd rorb jecxz int3 cmpsb aaa daa pop cmp or aam insl adc cmc cmp test test in nop loope push lret push adc add aad xchg es jne cmp or mov xchg fisttpl adc mov jecxz lcall add sbb xor xor into or (bad) movsb cmpsl mov sbb mov jp or dec jbe mov sbb imul jge loopne int3 jmp jl lcall sub mov cltd hlt mov mov xchg jp iret add mov adc jns in cmp pop popa mov mov pusha cmp fwait xchg or push popf cmp aas outsl cwtl ss xchg pushf jb or push or in movsb pop jbe inc mov ljmp mov fs or push aad fnsave mov or nop and mov xchg les int3 add push fadds inc test sbb cwtl enter xchg std daa es sub (bad) mov sub mov pop and and jno inc popa xchg add cs inc insb fs jae addr16 loopne popf xchg shrb jmp sub call mov pusha outsb in xor mov (bad) xor pop dec and inc enter dec icebp cs inc sbb push ljmp nop pop mov adc dec adc push inc adc jmp insb add mov add dec mov pusha iret xchg mov fwait and sti rol add sbb push xor outsl adc arpl call xchg sub cmp orps out mov (bad) js shl dec cli mov jne pop dec adc cmp push (bad) mov adc ds push mov orb insl lahf lods imul inc sarl xchg lcall push add jge dec cmp add mov fldcw and lret xor (bad) pop dec sub aas add movsl cmp sahf mov dec lods out lret push test or xchg test cltd arpl cld add mov mov mov movb imul sbb xchg lds mov add jle or outsl pushf mov iret enter lcall fistpl je imul sarb in dec push mov sahf imul dec adc mov ss arpl push and pop pop andb movsb add lahf aaa inc mov data16 cld call xorl sahf cmp les and or loopne mov adc (bad) or outsb dec int3 fsts (bad) mov sbb cli jge stos push jecxz ret (bad) mov mov cwtl aaa dec xor push jp push lock (bad) jo cmp xchg push xor dec insl cmpl fild cmp jge sbb xor or pop ret inc mov cltd jnp bound int3 push fldt das dec aaa adc movsb daa loopne cmp jg inc sub stos add fcompl (bad) mov pop or pop les add das pop and into shl add adc or loope pusha push rcrl in add scas test xchg pop or add inc xor (bad) sub inc xchg sbb jmp fistpl inc les outsb in or pushf or sbbl xchg dec daa test mov imul jae sar jmp cmp and in xchg xchg mov daa daa sbb mov int3 adc in daa fstl sti repnz mov jmp pop dec int ja push cmp push lea shlb pop outsb ficoml mov lret or mov shlb pop xchg xchg adcl das ror (bad) lock pop xorl pop addb xor adc mov pop sahf cltd sub test test cmp fwait ret call adc cmp (bad) add or push or cmp aam (bad) outsb xor jno push subl cld xor inc push (bad) and push jmp xor push mov xor pop std mov jle (bad) jae jecxz aad xor ljmp in push cmp out icebp xor (bad) sbb dec insb xor or or dec pusha ret mov cmp (bad) or lds sbbl lcall stos push mov nop movsl mov call leave jnp movsl std push dec push cmp data16 aad jecxz outsl xlat call inc stos (bad) dec repnz sbb jle add push rcll into and test pushf sbbb je daa mov cmp sub std cmc push cli cli adc jns xor inc mov jmp andl add adc (bad) outsl rol pop fwait lods push (bad) fmull stos sub addr16 pushf sub jecxz dec mov in popf pushf xchg add pop sub fnstcw ret sbb iret fnstenv add and test stos jnp lret xchg adc movsb and movsb dec test ret test insb dec or or lcall cltd add add rorb rcll or movsl jae lea inc aas scas sbb add (bad) icebp add (bad) mov xor je add inc aaa jecxz cmp push or or addr16 (bad) sub ja xor jbe nop fmull xor ds hlt loop sub xor nop popa jg gs dec dec lods lds fldl and xor ss add sahf or push xor aaa sub js jg xchg lds fsubl pop pop push pop (bad) jmp jo pop inc push inc imul ds sub adc shlb sub out sbb adc pop push out adc inc mov sbb dec lds cmp out icebp loopne fisttp xor mov or rorl pmaddwd pop pop inc je pop mov lods leave mov mov inc aam push mov out adc jne adc loopne sub out movsl xor inc jecxz aaa inc std iret lods cli out push cltd mov daa inc imul sbb call (bad) and mov inc imulb lds jbe jl xor aad (bad) push in movsb sub cwtl pusha mov std ljmp pop int3 adc (bad) lret (bad) jns lcall cmc push lods dec push jle xor cmp xor test cmp (bad) bound insb jb lahf (bad) fsubrs adc andl adc push mov insl int3 lret lcall or mov adc mov sub mov or lcall jne pushf fsubrl imul cmp in les cli sarl xchg xchg outsb xchg mov aaa xchg add mov cmpsb mov jge mov jb jle notb (bad) cld dec cmc fistpl push fimull pop outsb lahf test lcall cs sbb add or adc stos inc gs cld aad (bad) ss mov sbb popf xchg mov (bad) int pop lret (bad) mov scas loop popf add aam iret dec adc mov inc jb lock aas in lret xlat jb xlat sbb and pop xchg lret jbe mov mov sbb jnp push addr16 pop pop icebp or cmpsl rorb mov imul or sub divl xchg adcl out in push adc xchg cld rclb dec jg pop mov jge jns push ljmp sbb xchg stc jmp push mov mov loop mov test sub fwait loope stos sub fdivl in inc in add pop mov mov ss test xchg push inc jnp mov xor adc rcr mov addr16 adc jle adc and sbb addr16 imul and test jne dec or aam jp push xchg push pop mov push sub ret mov nop lret roll (bad) (bad) mov insb divb aas scas xchg pop cmpsb inc popa mov ds out lods lahf lock fistpl hlt push xor popf mov jl insl test pop shlb cmpsb mov jno inc int3 movsb shrb adc out cmp iret push gs cmp jnp inc sub ret rorl cmpsb lret out cmpsl je pop mov cmp ret lea inc insb jg push adc or rep mov iret mov mov (bad) mov sbb push pop push sti mov in push lock ss xor je sbb xchg xchg mov ds cmp (bad) stc mov iret sbb ret mov add lods scas out dec push fldt es mov pop mov dec mov xor mov sub test or ret pop dec jecxz sub lret push cs mov ljmp adc jge fucomp xchg cltd xor std lods jmp lods rep sub dec js xor and shrb out push js xchg lahf scas xchg push popf pop imul mov scas and aaa adc insl and cwtl pushf push inc sub in mov leave hlt add cmc or cmp (bad) fidivl jg out cmp sub sub jmp int add jb,pn push rorb xchg mov xor cmp sub add mov iret movsb andl imulb mov push sub jnp cld jecxz dec dec repnz push pusha sti mov fild lods and or or inc and clc or pop jle jecxz cld adc addr16 imul or inc push cmpsb sahf xchg sub sub fstpl or mov es aaa mov and add jae notl cli jg pop mov (bad) fisub sub add cmp cmp sub call lret xlat push fiadd inc mov push imul sbb jno mov cld nop dec not inc cmpsl scas pop sbb addr16 rolb mov call int3 outsl sbb add movsl clc (bad) push cld je pop lea lcall rcrb arpl out push cmc lods dec sti icebp inc cmp in or jg pop bound (bad) icebp in repz mov pop scas es xor jge mov popf push jle cmp push aas cltd mov fwait loop jnp xor sub inc pop push aas inc aaa jle mov stos negl imul cmp jo mov mov cld (bad) clc xchg data16 pop in dec inc int3 test pop pushf aas xchg mov popa sti (bad) cmp and enter lcall xor packuswb pushf cs pop addr16 shl xor fnop mov xchg jg add std insb sbb jl xchg mov pop (bad) sahf sub xor dec mov int addr16 pop add xor ja fs inc int and lods hlt (bad) pop icebp popf pop cltd sub push inc pop xor xchg imul inc jnp mov or pshufw pushf pop (bad) out fsub stos jmp add mov aas xchg sub jno mov push mov mov sub pop inc jb jo,pt jg cmp push iret push mov mov fwait addr16 inc pop xor orb jno inc imul lods scas fcmove push es jb sub cpuid pop xor pop lret and cmp int3 cmp inc ja mov pop inc mov push jmp or aad je xchg sub mov push clc out jnp xor xor pop jbe pop mov cltd cmp fst sub inc sbb aad dec aam pop call jg mov aam cwtl mov cmp insb (bad) sbb mov ss (bad) or les js sahf data16 push add lea je cld fwait push add mov push clc stos adc sbb lea rorb push (bad) cs pop (bad) push jns sbb int cwtl cltd jg push scas std inc in jo pop (bad) lea mov jg loopne insl mov fstpt inc es inc xor nop sbb dec xchg aam mov jmp xchg loope pop mov insl sub push cmp daa mov std lahf ret sub in push (bad) xor mov fdivrp xchg xor pop push push insb gs int3 mov loop pop iret pop fcoms mov shl pop iret fldl insb nop mov js pop test stc stos pop dec js ss daa or push arpl aad daa cmpsl jl pusha fisttpl in jecxz jns dec dec pop gs dec pop xlat mov movsl fildll lahf outsb xchg in cwtl rolb scas ret fdivrs leave jle,pt mov add xchg cli add lods rorb rol xchg and in mov inc lods (bad) and gs xchg xor sarl xchg cmpsb fidiv sbb xlat and call mov pop lods sbb (bad) or cwtl jp mov lods push scas aad or movb enter or pop (bad) jno mov mov or flds adc loopne iret adc or call lods imul adc ja jmp mov adc adc and ss inc frstpm(287 mov call jg idiv fsubrl in loop push inc (bad) push and fisubrl insl push into push test aas inc repz cmc xor rcrb cmp or lahf movsl mov fdivr dec in (bad) repnz inc loopne sub sub outsl rorb xchg jno mov and sub dec sarb je dec lea inc es adc lds das cld sub rolb dec mov test ret cmp mov ss cmp lret adc push adc lods out xchg rcll mov outsl lret rcll (bad) aas dec pop jmp mov out (bad) xor mov lret pop out imul jg sbb and fiaddl pop xchg sbb shr jle mov call movsb jo cmp xchg push jge loop gs pop loopne cld or pop in sarb out aaa dec xchg and sub xor mov insl adc test or dec cmp xchg in cli push xor add test jne dec push testb xor adc xchg dec sub jb add out je ja or pushf sub push add fwait mov adc or lods mov or in ret mov daa jno (bad) sbb test sub loop mov jo cmp in imul cmp mov sub sub pop sub (bad) adc aad out inc jns and jae or daa (bad) dec lahf shll fist xor mov or (bad) les jge in xchg adc roll cltd or push mov jno dec into xchg mov ret insb insl jle cmp das insl mov and pusha dec inc lock (bad) stos cltd inc scas xchg (bad) or adc lret and lods fnsave insl sbb jno push pop lcall out push add cmp fildl push jno repnz imul adc aaa pop push icebp movsl mov jno hlt pop (bad) adc cmp xchg mov xchg sub ret (bad) mov jg cmp js inc addr16 pushf cmp loop push pop mov adc inc inc movsb ja lahf js push inc (bad) dec sbbl loope imul mov mov sub outsl jo jnp jmp pusha sbb daa push enter out out xchg adc test cmp stos jecxz mov out addl adc push sub rorb pop data16 push jnp jnp divb sub cmp add jecxz add inc xor jg jo xchg cmpsb push ljmp inc nop lock jecxz push iret pop mov mov push mov cmp scas popa mov push out cmp popa ficom jg xor bsr cmp xor xor nop mov call sti push adc inc (bad) dec scas jne jbe imul adc and sub mov and scas fwait rclb punpckhbw ljmp push dec push aas (bad) dec mov adc mov sbb mov mov sbb push xor jo mov xor or dec xlat insb mov daa or mov arpl int3 clc mov xor pushf (bad) test adc popa mov mov outsl fistp xor mov jne pop lret mov inc clc fstpl rorb adc sbb test cmova cmp add scas xchg icebp push xor xor test lret push (bad) loop hlt jmp ds ror or cld arpl inc push xor jp inc in js in or dec testl js fsubrs daa push int mov xchg dec fnop mov mov xchg hlt aaa xchg sub les and cmp fs cmp mov jno adc push lcall or cltd add out iret test push push push fs sub or mov xabort jecxz pop movsl mov mov adc sub mov (bad) xchg push inc jo inc out mov xor iret adc push gs mov mov pushf popf mov lahf sahf lods in push adc in dec repz test push mull ljmp jl xor pop inc dec jp jmp dec aad and in push cmpl addr16 adc mov mov xor cmp sub scas adc imul mov mov fsubrp stc (bad) fild xchg cmpsl sub je insb sti inc push pop sub mov sahf sub aad and sbb (bad) enter mov stos fnstcw rcll sbb popf push sub into jecxz or xor inc cmpsb dec popf lea jae cld push xchg stos in rorb mov ret and test aas inc adc inc cs mov sub scas or mov sub push jp fistp out push xor add dec jecxz xchg ds push in js adc out or gs fwait mov push pop clc sti int3 mov push test (bad) insl pusha pop or movsb leave lock push sub pop pop ljmp pushf mov xor jne jnp jno and inc inc sti test inc adc in gs in fstps movsb xchg fsubl sti sti fistp data16 cmp ljmp cltd lahf pop push outsl popa and add (bad) lds jle jno push or fs xor xor ret dec test lcall (bad) or shr imul pop or push in pop es fmuls push dec out adc fdivr mov pop (bad) pushf add test (bad) repnz in js decl xchg sub clc cli sti out imul sub inc and sarb mov ret xchg pusha jmp fistl dec test jb cmp lods dec popf and fisubl ljmp jae das ret cmc sbb xlat lods adc popa fsubrl cmc lret add scas push dec icebp mul pop aam xor adc je jp das sahf xor mov mov (bad) dec mov lea sbb add mov icebp or mov lahf ret stc adc in int cmp mov fwait inc dec iret dec pop mov je mov test idiv adc movsb mov dec sbb (bad) out cmp jo push or pop mov mov rol sbb andb call mov repnz (bad) and movsl imull add fucomp xor insb in ljmp test adc add xor stc and jl movb pop lahf jo push (bad) std nop (bad) mov sub sub (bad) divb pop addr16 insb jnp add sub sbb aaa clc cmc loopne les dec int3 jbe leave mov lea imul or sub out rolb lds imul push xchg daa shrb std rclb cwtl push cli js fs mov pusha jge sbb (bad) dec nop mov mov adc ret dec fldl mov xor cmpsb in cmc xchg push and pop inc rcrb sbb gs pusha inc push sti push int3 pop mov sbb dec jne mov xchg shl adc adc mov stc lods and add add cmp int adc sub sub loope lock cmc nop sub in sbb cmp lret sub lret pop xor (bad) cmp (bad) aam test ljmp or xor mov or push loopne push xchg sahf inc jbe adc and xchg mov hlt xchg mov add pop (bad) stos stc leave mov dec pop ret shr fsubrl (bad) fs bound push xchg lock mov cwtl mov jo iret dec pop (bad) and push sub imul pop mov and xchg dec push jp and adc jb,pn mov arpl push sub (bad) dec std lcall mov (bad) mov insb push aaa adc divl adc ss lock pop push int3 push sahf dec out cmp popa sub lahf cmp mov lret fcmovnbe sbb stos in mov jbe push xchg negl cmp je or and mov mov les and push mov dec push leave xchg mov data16 and pop dec (bad) mov (bad) xlat fmull push cwtl jecxz call adc (bad) fcomps lods sbb call inc imul pop cwtl inc out gs dec cmc arpl mov jns add rcrb jnp mov sub sbb mov jb lahf fcomps ja lods andl int (bad) pushf mov mov rcl xchg dec std pop pop dec int3 (bad) fwait lock sbb push mov mov mov call cltd mov push xor test test jno (bad) dec icebp sub into ret xor sahf dec dec dec pop pop push xor sbb bound call fldt push cmp in add xchg into repnz out xchg js sub sbb push (bad) je nop sahf inc lods dec adc out sub cmpsb dec in mov push or inc inc mov lahf mov sbb adc (bad) xchg outsb (bad) cmpsb cmpsb inc mov aas mov pop aas mov push mov mov add sbb push cmp add scas orl sub pop leave pop movsl mov and sub cmp xchg cmpsb mov jno pop sbb and mov and push aaa ja test push dec sbb into pop rcl lods repz scas xchg lahf ljmp adcl xchg sbb adc pop adc cmp nop mov lods pcmpeqd das mov gs fbld in pop jmp (bad) data16 scas fcomps jne dec pushf xchg xlat enter inc lock push inc in sahf in notb xchg sbbb (bad) add mov imul mov int3 inc pusha mov dec add mov xor mov mov (bad) je jg shll xlat mov mov mov ss ret arpl iret sub jmp ret or push cmp sahf test lock popf push outsl xchg add jmp jp push inc mov jp lahf mov or pop mov add xor mov in repz int ja fxch pop cmp and les pop inc pop addr16 lcall push sub mov inc leave or jecxz mov pop int subb ds test mov mov mov xchg hlt insl push mov dec and shlb sti mov cmp fs dec imul add into mov test or mov and (bad) insl mov adc std jg or popa pusha das push ror pop jbe into sub cmp inc lcall push ret inc repnz mov imul gs sub mov inc cmp mov and and into xor mov xor add leave inc mov (bad) inc push cmpsb push fimull hlt push pop jecxz outsb mov ljmp in (bad) mov and adc nop outsb adc dec (bad) cld jns pop (bad) mov sub es enter xor mov inc out lock data16 repnz in push cwtl dec iret sahf movsl in out adc push loop inc mov cli stc xchg xchg xor hlt and push fbstp fldl push fist jg xlat or ljmp fsubs jne aam into aas imul add push fs rcr arpl jae xor or cmc inc push dec imul insb sbb lret xchg sahf pop aas fsts cmc sbb or xchg inc or aas out cmp add mov fdivrl mov cmp adc jecxz (bad) dec arpl pop popf fs cli fldl addr16 xchg popf cltd mov or lds arpl in pushf xor push je push pop pop push rorl mov mov mov and xchg lret in mov fwait inc sbb pusha scas mov daa mov xor mov int xor fiaddl loopne adc pop dec int pusha cmp mov outsb scas insl sbb prefetchnta in pushf loopne sbb sbb adc bound push mov and sub cltd inc xlat stos xor or leave roll scas inc lods test and or sub dec daa push xchg ret into xchg (bad) cmc xchg addr16 mov sub fs mov in mov adc mov pop lret xor pop jno arpl mov jbe push int incb xchg je adc sbb inc ja les pop (bad) cld fnop fnstcw gs mov mov (bad) sbb pop or push dec jmp in ss addr16 es ja push push mov inc mov sub and jno cmpsl or sub xchg and jno jl sub mov xchg iret xchg std in lods negl cmc push inc cmp xor int sub inc dec movsl ret xor cld das ret or mov jno pop arpl mov dec inc fdivl mov test add cwtl mov loop push jle or lret fs xor pushf push (bad) cmpsl icebp sub mov sbb adc js clc out scas xor (bad) into faddl shrb mov mov pusha push popf mov imul push push lahf xchg xlat loope lret or xor outsl in jg push add (bad) cmc inc scas (bad) mov adc dec (bad) dec cmpsb cmp cmp jne fcomip or outsl daa cmp mov (bad) and sbb lahf loopne xchg sbb iret pop lea jne fdivl pop fs pusha pop cmp mov (bad) and and xchg jb mov push call pusha out mov add arpl inc jge outsl and adc repz add cmp sub or rorb cld jno inc mov push jae sahf cmp ret je mov in dec sub adc xor and cmp int inc lcall pop xchg js jecxz jb test int mov test adc pop das add cvtdq2ps add adc push push out stos dec in cmp mov jno jne cmpsb mov sbb movsl pop cli cmpl push sub cmp push incl ja shrb mov adc inc lds dec cmp lock mov or mov testl test stc lock add push cmp rorb test mov xchg cmp (bad) sti mov adc adc (bad) rorb mov andl sahf divb add test lcall cmp cmp push add mov (bad) mov push add inc dec or lret loop mov test jl xor loope psubsb inc out out push shll pushf scas clc inc lahf sub add fwait or xchg push xchg nop mov inc xor cmp int dec sbb mov into push (bad) jae lret pushf int3 xchg push pop push jmp ss inc int push push xchg mov sub jae rclb and sub lea rcrb cmp mov ja and sub rcl in test repz insb sub imul sub xchg test xor xchg jb out ja (bad) into jl inc std neg push sub pop js out jl xchg fldcw jo int arpl sbb jnp and mov aaa or je (bad) lea in mov jge,pn cs insl sub mov int jae cmc xor stos cld nop mov (bad) (bad) cld test dec inc insl movsl xor lods mov or std pop aaa dec iret addl inc pop sub mov xor sbb sub leave adc (bad) dec clc xchg inc call jp sbb stos jne daa frstor sbb xor sub pop popf jbe pop mov (bad) push loop xchg rcrb cmp out jns sahf dec add cmpsb nop lret jno pop das xor sub fldt shl and ret mov stc aas push loope xor push dec and jno outsb xor fimull mov nop adc xchg loop test dec mov fldenv aad lret and cmp fbld sbb or sub dec sbb insb jp cmpsl xchg mov in repnz call push adc imul and xchg sbb leave outsl int3 aaa mov (bad) cli add aaa xchg xor mov dec insb xor and cmp xchg cwtl mov push leave stos and fildl jle imul sub sub adc cmp sub (bad) dec pop sub sbb jmp mov pop test or inc or inc cltd lcall push in dec jae and loope cmp pop imul movsb lcall pop pop and cwtl hlt xchg aam jge mov nop sahf pop push xchg aaa pop inc xchg icebp mov pop mov in cmp jecxz mov inc inc mov push in jp (bad) (bad) repz dec adc lahf jmp xchg (bad) and pop popw data16 pop das and xchg pop or sub xchg dec mov push add push jmp lock jecxz xchg loopne or dec mov inc mov cwtl dec ret and fdivl into shrl ret lea mov lret aam sub adc imul xchg xor rcr (bad) int icebp and mov mov cmpsl mov pusha jne pop int3 jecxz (bad) lcall popf jo add nop out mov arpl add addr16 pop in inc cli je inc push pop jns mov dec je mov movsl fnstenv cmp enter loopne add test push outsb push jae xchg inc fwait pop test fsubl xor or loopne iret cmc cwtl (bad) pusha loope push mov in int inc in cmp popf cmp ss test and jl mov icebp je mov fimull fdivr scas movsb jle (bad) lods arpl add or in xor push xchg mov adc aaa (bad) sahf jmp push sub or adc jl xchg (bad) iret repz cli push lea sbb adc sarl movsb sub nop cmpsb leave fdivrs jno mov add mov aam mov pop mov in cwtl clc add imul out mov fstps xlat sbb jecxz aas neg jg push xchg xor mov mov (bad) xor adc and mov pop insl jmp cmc adcb nop dec mov xchg mov stc imul sahf adc mov xchg mul movsb mov push pop pusha sbb or pop dec mov or inc call jecxz (bad) fcoms and stc rcll or dec xchg nop adc insl pop pop mov dec imul stos jl xor add (bad) push push lods jb push nop xor fadds mov push lret (bad) xor jb sub xor mov inc ss mov sub in mov (bad) rcrl pusha mov insb test cwtl pop jnp xchg push lret repnz fnstcw jbe sbb and xchg ficompl pop jb int3 jp insl adc sub xor (bad) xor xorl add pop or (bad) in cli movsb cmp cs pop lods sub iret dec pop test pop popa xor movsl cmpsb pop iret inc push repz std sbb insl mov mov push mov and jle cld mov bound sbb outsl daa ja test jnp dec lret adc js mov std cmp xchg les call jge andb aas mov pop js cmp insb pop imul mov xchg pop push cwtl xchg mov xor xchg in push jle or fisubr sbb es hlt rcrb ret xchg fiaddl add js dec dec test mov push sbb xchg fisttp jmp addr16 add ror push pop pusha loope je orb adc sbb lcall in ja fistp push cmp jle cs dec sub aas mov sbb and sub mov daa add xchg daa xor in mov callw fdiv pop and sahf int outsb dec in xor fmuls inc fwait pop in int ret lods lret outsb inc cmc or inc ljmp js mov push jecxz inc mov jmp push insb bound push incl jae (bad) or sub insb jb xchg pop jnp into in inc xor sbb lahf xchg sarb adc gs mov and sub inc add cmp pop jno and mov cmpsb std cmp push push xchg pusha dec ss das lea popa mov push push icebp popa mov neg or pop add outsb add cmpsl into and inc mov mov imul push addl cmp in add leave xorl stc es punpckhbw out in iret (bad) dec test inc jge mov aaa arpl cwtl scas and (bad) sub mov mov ficompl repz cmpsl jbe outsl std lret fstpt mov out bound jns cmp sbb imul mov dec inc lret insl and movsb rcrb mov and or cmp jbe dec cmpsb ret dec fnclex mov and push xchg movsl ret mov jp xor cmp int3 inc mov lcall nop sub fstps clc cmp sub dec in jno cmc cmp out fdivr push adc pop sahf sub dec jno aad pop (bad) sahf cmp (bad) stos scas sbb pushf sbb xor mov mov outsl int3 adc mov push lahf stos sbb mov addb loope aam jl push jmp loop popa xor out cmp adc sti ss mov das jbe ja mov pop shrl push lea insl popa leave lds add in push xchg jno cwtl leave (bad) jo push cmpsl xor push and jmp mov sbb cltd shl sbb jnp aad lret fiaddl stos sub sub lret daa iret jne pop xor cmp sub ljmp flds push js rsqrtps cmpsb mov cmp leave les dec iret jnp stos ror push (bad) lock clc insb out add xor or cld dec or fisub stc in sbb sarl rcrl fstp mov adc push add adc dec jge add inc mov mov dec mov rorb xor js int dec (bad) push sub cmc dec outsl pop push les and loop sub (bad) jns and das mov movsb mov rcrb dec pop and or push lahf dec out cltd adc leave rcl or adc or lea in push xchg jnp fbstp jg adc (bad) dec test mov dec fwait fwait fs mov int3 ds js mov push inc jp mov sbb iret aad int rcll jmp (bad) loop or stos xor int3 ljmp jl lcall xor test jbe roll xchg dec call sub sub data16 lret mov addr16 mov pushl sahf fcoms pop push cmp xchg jbe xor iret lea fcoml stos push sub push cwtl xor pop enter jb and xchg push jg pop std and fsub stos fnstenv aaa and ss sub adc and push pop in insl test add les xorl dec push (bad) add or or in cmp push xchg add jmp stos rcrb out cmp out adc mov or ret push mov cs and rcrb jg and or cmc pushf xchg lea sbb sbb pminub xchg dec dec xchg cmp in cvtps2pi clc shll nop ret jmp daa dec fild lock aaa inc mov nop mov sbb add lods xchg sbb das cwtl fsubrs insb ja data16 dec imul addr16 stos xor xchg (bad) or mull call sub xor (bad) xlat cltd mulb and jmp jbe jne sub in inc fidivr xor jmp aaa jecxz pushf divb adc push aas mov and dec mov add jne add add out jge sub sahf fisttpl jle cltd loopne dec ffree mov dec (bad) push aaa iret ja icebp (bad) or mov cld xor jge mov popf mov rclb add adc test shlb imul or xor jge pop out xchg pusha xor enter scas std pop sarl outsb cmp mov pop jp push push call adc repnz jne cld and repnz fdivs jl aaa fbld ret adc inc push push pop cmp mov in shll mov sub stc sub adc aam pop outsl pop xor sub sbb adc or push pop arpl push sub pop rcrb pop (bad) mov mov inc dec jb mov (bad) data16 nop xor jge scas and stos add add rorb jge add mov xor arpl icebp frstor pop jmp xor lock fsubl data16 outsb dec push fnstcw push testl push ja incb das add out lret sbb mov clc jge ret pop pop push adc std adc out stos and inc adc cmp dec call leave fst repz and lock (bad) mov incl or addb push rcr xchg cmp lret or orl and sarl ljmp lahf ds and cmp mov or insb lods xchg jle adc inc pop arpl cmp stos sbb xor outsb dec sub in (bad) cmp out sub test jecxz insb mov add adc dec arpl mov inc shlb sti dec into or sbb fistl cld jl fcoms mov loop jbe sarl movsl (bad) mov mov cmp addr16 loopne push stos dec popa ds arpl add loop js sub mov jp sbb lea out and or ja and xor sbb push clc push scas xchg push pop dec (bad) insl aaa fdivs inc gs lcall lods clc mov pop dec dec push cmp add inc aam mov push fs lahf xlat aad lcall sub mov fidiv xchg out cltd in (bad) insb pop push push cmp jno sbb xor xchg cmp and sahf (bad) adc jno aad mov xchg repz mov fcoml push xor popa sub clc test adc shll sub pop sarb js xor jecxz sbbl push out mov int3 pop (bad) and cmpsb lcall pushf cs fcoms daa inc (bad) dec cmp cmp std inc call cwtl loope data16 sub sahf sahf (bad) add cmp sbb sbb push test stc fcomip xchg popf xlat popf jmp outsl imul sbb shll mov jg sahf js fbstp lods repnz sarl (bad) bound arpl rorl pusha or mov sub mov (bad) mov add es int3 fisttp jbe add mov aaa aam negb inc dec pop pop add mov addr16 lcall outsl jle sub and jp mov aad mov test nop out cmp sub jnp jl jge int3 mov nop adc mov jle pop fild jno cmc xlat push inc cmpsb jb pop pop or cmp mov enter lahf push push xor iret add stos add insl cmp pop push int popf dec in dec jns mov or stc jl or sub lret pop push or (bad) mov fwait scas ret (bad) rcl shrb scas sub stc xchg mov cmpsl cmp push ror push mov cmp mov mov mov imul jnp shr adc js stc xorb into push iret pop fisubrl dec xchg sbb add (bad) sbb jns dec insl pop and (bad) pop mov cmc mov adc inc imul fcomps in adc push int3 (bad) dec fcoms push xchg fsubr negb xlat std in test mov das jle popf popf sbb clc dec lods push adc ret xor push lods inc mov out int fisubr mov push add addl cmp insb cmp mov and popl add test pop int xchg inc sbb lea push insb es push xchg out dec gs dec insb dec call loop cmp lea stos cwtl or inc dec add mov push sahf cltd mov jno (bad) mov mov repnz jg push in dec (bad) lds aaa iret push inc pop pop jnp loopne pusha xchg fwait addr16 sahf mov jecxz nop repnz mov fstpt out lahf cs and cltd insl inc inc sub aaa mov mov pop stc cltd ljmp jno push xchg fucom lods cs pop xor subl in movsl rorl push hlt pop mov lock cmpsl in mov adc into mov cmpsl dec dec inc cmpsb mov cs lea fsubrs pusha adc addr16 sbbl push or stos push and popf fimull flds data16 aas dec pushf es dec in mov scas cs scas mov xor xchg push mov mov arpl rclb test (bad) cld xor and lds outsl or sti jmp mov clc iret mov insb mov mov (bad) jmp test cmpsb nop jg lret lods lahf inc int3 xchg xor jnp lds lahf cli int3 cmp inc mov mov cld mov mov int3 gs (bad) lret xorl pop lret int cmpl inc jne pop es pop mov xor pop push adc push mov jg pop cmp pop mov inc xchg jmp xor cmc enter xchg mov mov (bad) sti rcll pusha jns cs popa dec repz push jecxz jns and lahf out lods xor mov leave or cmpsl sub pop sti xchg insb fisttpll adc rolb adc xor mov pop inc inc sub aas jg ss xchg adc sub and orl push jmp pop stos fsts pop in sbb and les lea dec sub lea ds mov sti fsubrl mov mov dec in mov fstps and ret loop repz inc (bad) push popf inc inc jno dec ja mov mov adc fsubrs add push dec sub das cwtl mov fild pushf adc inc sbb push jmp pop je cmp mov test rcrb mov mov lret xor rcll bound jge (bad) and lcall repz and ja lods mov movsl pushf mov (bad) testb ds addl (bad) and push test jmp xchg in sbb mov push int3 sbb sub dec test pop and cmp dec mov add cmp dec mov sub es push (bad) push mov lds push mov push int3 sbb enter xor xor mov movsl sub popf pop jle movsl fisttp repz lock jecxz fs addr16 push jae sub in repnz int3 push les push xchg mov stc fs lods add sub lret push jae lds sub xchg das rcll fistl wrmsr jl add or xchg cmp xchg aas sub (bad) pop mov mov aaa jmp cmc add fdivs push loopne jmp adc cltd test pop int3 les xchg mov jnp mov mov xor xchg fstps mov adc je pop int3 mov or pop inc jbe push xchg fdiv jg dec pop (bad) jb adc xchg in pop rorl out sbb out xchg sub inc mov xchg xchg dec push mov adc mov mov xchg mov xchg (bad) icebp dec cmc cwtl jb test dec scas aam (bad) and mov loope cmc inc jns sahf ss lret and inc outsl pop std mov and fs sbb repz push cli add movsl jge out (bad) xor inc pop pop aas inc jbe leave xchg out mov insl dec jge fcompl mov jae inc and lahf jne jecxz add out mov addr16 mov push outsb inc lcall and (bad) pop lahf push aas ds cmp hlt xchg lods add lcall jg js cli not test and (bad) test sti in add sbb in inc sbb lea nop dec cld mov add jmp mov mov inc mov jg je outsb stos xor and ror nop push inc xchg outsl and shlb sub mov inc loopne mov dec nop pop sbb cmpsl stos dec (bad) cmp out sub out mov fdiv test cli mov jae pusha test mov jecxz mov mov pop inc pop movsb fs mov jno movsl xor (bad) mov movsl pop mov sub cmc lea mov lds pop jecxz,pn sahf push out pop int3 ja (bad) jno mov aad je inc mov jge push mov push fwait jecxz popf icebp jg mov mov push xchg imul fwait pop pop push xchg cmp fiadd fstl outsb fistl jge pop sub test and ret and and subb adc mov out jb pop sbb mov mov mov adc push mov iret das and jnp wrmsr push mov loopne sbb (bad) loop and out pop adc and pop mov adc push sbb xorl or ljmp pop xchg mov inc pop jle outsl out pop mov not aad push test mov call jne pop mov mov in js push rcrl into add lcall and sub fwait mov mov out adc icebp adc mov (bad) jle mov rolb lods and je gs adc adcl (bad) out addr16 push gs add fs lret imul dec fldl and (bad) jb (bad) push (bad) stos xchg xchg cs jmp out stc pusha mov inc mov lcall adc mulb pop sarb cltd scas mov shrb popf (bad) lcall arpl int in dec jg mov xchg sahf jg mov ret (bad) sub jg nop cltd push js mov loope dec pop xor push (bad) jno and shlb ret shrl daa insb gs shll or push in inc inc jae cmp or int3 outsl push imul stos mov lea pop in cli jge pop (bad) push (bad) rorb cmp bound sub cltd movsl lea inc or inc mov dec lods pop jb ror inc or mov outsl mov int mov cmp jbe inc mov pop dec pusha test mov or in mov push iret jmp push jmp pusha fisubr dec stc fdivp rcrl xchg loopne cli jno imul adc gs (bad) ja fild sbb into divps xchg cmp pop (bad) adc sbb xchg cmp mov push cwtl sbb test jl lock xchg sub frstor (bad) jle fcompl cmp cltd push inc fstl cmc sub repnz aam jo mov xchg or hlt mov xchg mov add sub ds clc aam mov mov call cli xchg xchg divb fwait imul jl stc fdivrs xchg movsl (bad) lret mov mov bound cmp (bad) lods jno cwtl out ja cwtl test mov mov decb sbb xchg jb dec dec popa insl jle out sbb push and imul jl mov sbb mov sarl sub in pop xor mov dec in mov lar inc xor and inc popf xchg int3 mov xor jl pushf jp xchg out repz mov dec insl ret cmp sub push rclb add dec inc out inc dec js lea sbb push jnp movb mov cmc add clc sub das inc subl ret stos pop add mov fsincos pushf adc int3 jbe pop pop pop insb push xor and dec inc push jecxz push fstpt jmp mov mov mov xchg and mov (bad) sub jno mov loope add inc pop divl jle insl xor gs pop repnz mov pusha mov sub int pop mov sub push push cmp dec mov mov jo divl in sub das pop jmp or test xor ret ret pop push insl subl movsb daa out ljmp bound push ljmp mov jae loop adc pop icebp xchg sahf xor push push pop (bad) icebp or cmp xor iret push adc pop aas aaa fwait shll insb cmpb sub push mov les push sti and enter fsincos dec (bad) lock test mov fnsave je loop scas inc fcmovu test movsl mov lcall inc xor and mov aad kmovd push or inc pusha mov into aad xchg arpl movsl cwtl loop,pn push dec arpl mov or loope and cmp or (bad) cmp cmpl or (bad) out notl dec and stos in inc es addr16 jle cmpsl lds jecxz and push or cmpsl and and jp iret jmp push fimul int clc jno ret in lods test mov into leave dec insb jns xor (bad) mov aaa dec aas push or xchg add pop jle inc orb lea xchg ljmp neg rcrb xor (bad) sbb jb movsl or sarb mov mov pop out mov (bad) movsl insb dec (bad) iret jo adc fisubl (bad) mov ljmp jge clc mov cwtl popf xchg sub pop fdivrs xchg xchg std insb xor xchg ds add sub and adc push sub and mov pop (bad) push dec xchg (bad) (bad) jb jl mov dec dec mov pop fdivl pushf cmpsb fwait outsb jb fwait adc popf inc bound negb imul inc daa push orb mov fucomi iret mov inc imul add scas in pop jo into gs cwtl mov jne fistpl test cmovg add cmc insl push clc pop stos leave lcall lea lret jmp or pop lret das lahf adc xor mov xor inc jne insb push je mov push or arpl bound or dec cmp cwtl xchg push (bad) aad outsb adc and and adc lret mov aam xchg mov in pop push fwait movsl mov nop adc xor rorl cmp setno mov inc sbb sub test jecxz inc xchg cmpsl xor mov xor add inc or (bad) sbb mov bound xor (bad) fidivrl stos cltd and fisttp mov in es aaa dec push mulb pop (bad) xchg imul rclb in xchg pop (bad) adc scas adc sub jecxz insb or xchg stos lea pusha mov sbb mov movsb xor lock iret add decl sbb insl mov xorl push jo in push enter ficom adc jl pop addl pop pop xor repnz mov (bad) lcall rcrb mov dec lods stos inc and pop fdivl add daa rolb ss push mov mov or mov or das imul mov pop mov in add sbb ljmp and mov inc ss js mov in in xchg (bad) mov dec sub sti jo in adc movsl inc xchg fs xor jle sbb dec iret das xor scas push cltd divb pop inc xchg and push sbb (bad) adc data16 xchg fucom mov cwtl push popf jg cmp cli test sub inc outsb dec outsb fimull bound sub fsubl pop or push (bad) fildll jno and lock scas sbb cmp pop fildll out xchg int3 mov mov cmp xchg push sub movsl ret sub insl stos ficomp shl dec inc mov mov jle fbstp push (bad) ds clc inc std lock dec aas add stc and xchg push and push adc bound push (bad) (bad) dec popa bound popa icebp adc dec mov icebp or fwait jp int xor fmull cld loope sbb mov insb mov push sub adc mov ret mov (bad) push rorb or ss rcll arpl pop inc lea ret pop jo push mov out insl xor and or leave ss xor out pusha jbe xor xor insb pop xor cld mov xchg andl dec mov push mov sbb jecxz mov les rcrb data16 stos imul mov or cmp dec xabort xor bound cli cwtl dec aaa pop jno fs test pop fwait push push addr16 dec or xor (bad) lret insb mov lahf dec jl and mov mov mov cld cltd sbbb cmp and mov leave movsl mov dec popf das bound cltd adc sar lret mov fmul stc into icebp mov sub sbb inc or pop mov mov jp push sarb xchg mov out mov push bound daa cmp (bad) in push (bad) pop fwait push sub sbb cltd in jmp loopne jle addb stc sub es test repz iret es outsb and popl js add (bad) cmp inc jg pop cltd cwtl xchg sarb inc das ret sbb scas addr16 push push insl inc lahf mov pop addr16 inc fstpl into pop rolb rcrl inc pop gs sub mov clc jge es sahf push es mov and dec stos out imul outsl adc cmp pop mov cmp jno push jle cltd and (bad) aas jp add add jge fcomps jmp add sbb and bound lcall or jno add scas arpl (bad) push xchg repz aaa adc pop (bad) dec xchg fild mov in jbe ds and leave addb (bad) and or pop xchg mov outsl leave insl dec iret sti inc mov lds jbe lods inc rcrb mov xor or pop jnp inc or outsl cmp cs add pop repz mov movsl dec dec out sahf and test in adc push xchg pop fs push cli les add cmp loop ret add sarl and pop push cmp scas dec mov out jae cmp or cmp jle dec in imul mov call (bad) dec cmp sbb mov xchg fdivr add sbb lods (bad) sub jle,pt sbb iret out jp cmpsb xchg mov cld pop pushf mov sar push push outsb movsb ror pop bound adc pop push pusha test add adc outsb mov jmp or cmp sub inc add push and mov and mov pop mov adc lea arpl pop and jge add mov lods mov lock xor xchg pop ss mov movsl rcr in sub bound sub in stc or icebp js aad xchg jae sub daa imul int popa stos nop xor shlb imul xchg inc add xor xor dec inc inc sub loopne out (bad) pop lcall repnz mov jne sbb fucomip dec mov dec dec push dec out test lods mov cltd cmp push fisttpl movsb mov js dec jmp pop cli ret adc movsb push cmp or jl push xor cmp push lret fs insb out fnstsw xorl loope imull push push leave in les outsl mov fisub stos xchg xor mov nop daa xlat mov mov ja jle xchg push das popa sbb stos aam das call sbb xorb add sub lret lds or inc cs push ja movsl sbb loope and and mov dec or push mov (bad) (bad) xchg dec cld test sub std pusha outsl imul (bad) lret lret int3 mov cltd jl into add fldcw mov dec cs jecxz jb jae fidivrl jl jnp loopne mov insb lock inc mov ret jbe es add iret (bad) mov ret dec inc mulb cmp pop add adc in push sub cmpsb ret ret cmp das lea pop stc or das inc inc push xor inc inc (bad) fsts inc inc xchg into sub loop pop add jecxz push mov ds fistpl push rcrl inc ds lods mov hlt or add mov xchg rorb stos jb pop xchg xlat imul mov add dec lcall mov (bad) icebp push sahf mov xchg sub insb sub jbe mov mov sub jg mov push mov xchg int jae into inc push fcoms int inc fidivrl lcall es cwtl mov pop lahf pop xor packuswb push sbb cmp (bad) cmp lods int jl das xor or jle sbb lds dec add cli mov cmp sbb test int lds mov aas cli and test mov pushf sub std adc mov push in mov cltd adc inc cmc std cmp mov repz ljmp mov adc loop jbe and mov mov nop es push lods call xchg jmp cmpsb sub and mov jo mov out es jmp cmpb cwtl mov xchg push std ljmp fcomps fstpt fsub xchg add mov jle sbb out sub sub dec gs ret test sub adc xchg xchg jns imul dec enter loope mov dec sub int3 pushf cmp pop xor stos mov xor ja in mov mov mov adc mov pop add pushf (bad) sub sub cmp lret mov inc jo or out sarl cmpsl mov divb sub jp jge push pushf and xor jl mov push adc xor imul in lahf iret test movsl fmuls scas cmpsb cmpsb lds loop inc rclb xchg pop sub repnz jg (bad) pop mov cli mov mov jno add es cmp or leave cltd adcl pop inc cmp jge jmp sbb sub xor mov outsl cld out sub push outsl mov and (bad) je cmpb sahf movsb push inc enter adc mov mov push add fst imul scas mov xchg xor xchg arpl movb mov test dec fcom sub inc cwtl ja xor or in jo lcall movsb mov fstl cmp push sub jmp cmpsl and push (bad) arpl jmp insb lods sbb push imul lods pop or mov lea lea jmp xchg daa stc jecxz in jmp das jne jae shr popf xchg call cmp idivl scas sub cwtl negb mov mov out push mov test and jmp aam adc pop mov cwtl mov cltd cmpb lret xor es movsl jae mov add xchg xchg shrb lock push imul frstor int int3 into loope ljmp pop outsl and or mov repnz cmp sub jo cmp and std fstp dec shrb bound mov or mov insb push stos test mov xchg add movb or lods cmc sub jp mov sub pop push imul jb or jns hlt xor jne les jbe dec pop jg pushl cli inc lods cmp dec cld inc xor negl int3 inc popa fidivrl outsb mov outsl call or scas sub mov lahf mov cmp jns sahf cmpsb cwtd aam mov add data16 sbb cmp repnz pop fldl jp insl fsubs push cmpsl dec out (bad) cmc pop jecxz in pop mov scas (bad) adc cltd inc pop inc xchg (bad) (bad) aas in outsb sti leave (bad) aad jbe push inc mov into pop popa sahf mov aas mov cltd in xchg cs mov add jle xchg scas jb iret and xchg aam adc xchg or stos xor or xlat fstps rcll insb push call cmp jg fidivl xor mov inc pop ret fcoml pop jo scas fs inc xchg jb mov dec jp push data16 ss lock adc mov jns xor or sbb outsb fistp lret jbe test std pop ret xor cmp or pop sub inc sub cmc mov es into cmp enter jle out inc sub cmc and dec push push aam pushf xlat jbe (bad) jbe push sbb sbb movsb mov adc aam sbb out push cld mov cs les mov insb loop fs daa mov xchg in pop stos push mov adc scas lock enter jno and pop sbb in mov int3 mov jmp push xor fisttpl mov lds xchg sub je push mov setl mov xchg (bad) jmp cs and call push inc int3 xchg mov mov xchg lret xlat mov and loopne dec and mov sbb pop fwait sbb (bad) adc ss loop xor mov xor in dec mov cmp pop (bad) fcmovu rorl sub xchg leave pop adc lcall ja repnz es fstpt outsb mov mov jns sti add test mov ret cwtl mov inc aaa mov xor inc lods jno pop sub mov add lods jg and fbld fcmovb fneni(8087 mov push xchg je std cs add int3 js test in or imul push push sub xor push lods bound cltd sarl nop jb sub mov shll fcomps lret fsubrs dec inc inc outsl lcall loop in test mov int3 fidivr and mov fwait ja call test lds adc adc or ficom test repnz cld push cmp pushf jl (bad) pop test sbb out icebp hlt fucomi inc adc xor das push xchg push pop sarl dec (bad) int3 dec imul sbb outsb mov xchg popa insb dec or or adc cmp cmp push in add mov cs xor jp adc pop and (bad) mov fild jge mov mov das xchg mov hlt xchg les pop xchg adc pop sub into fistpll aam push pop sub repnz jb incb inc das xor xor nop movsl jnp jnp js adc je adc and jle pop add dec mov (bad) int3 mov sub adc inc mov je inc jne movb jae into mov push loop into in popa loop (bad) jb ret jg and mov insb cmp or mov pextrw mov mov cltd xor add sahf cltd cmc inc and push cmp aas push mov call mov out push or out fidivl push adc insl aaa cmp adc and push pusha xor sub inc mov shrb sarb mov add dec jmp mov inc add insl faddl mov and xor popf out pop push cld aaa out insw mov fimull stos into mov adc dec (bad) adc (bad) and iret je sub xchg xchg das pushf pop (bad) sub int3 clc pop xor jnp sar mov test movsb mov mov scas int3 roll test test lret jl sahf stc inc mov xor addb sarl adc cmp xor ljmp add outsl add xchg int3 sbb fadds (bad) push mov add xor or jno and mov add fsubr xchg in sbb fisubrl pop fildll ljmp xor push and cmp nop mov mov mov jge (bad) (bad) xchg add xor mov add test inc (bad) loop sub jge lcall out (bad) dec xchg test mov outsl mov fistp mov jne decb lret dec leave mov push popf jecxz sbb js pop lret xchg flds das push pushf sbb jb xor pop aaa scas or ficomp pop mov data16 mov lock mov in xor lahf jbe lret fdiv (bad) mov aam lea mov cmp jmp popf mov push adc add aas repz ds cwtl insl mov mov mov mov or imul mov and mov lcall fimull push movsb aam jne xchg enter add pop out pop pop push jne int3 mov mov mov push lods inc loopne mov jnp jbe repnz cltd jg mov cmp loopne adc ret loopne push xchg cmpsb xchg or imul shrb aas add into call sbb inc mov push cmpl push adc pusha mov sbb dec pushf shr sub mov fdivs inc test add mov ret neg push mov je mov les in icebp pop inc test add in push mov or sub mov xchg out jle inc xchg jge jg xchg data16 mov mov sub out mov adc xor dec mov sbb jno out cmp lret cmp xchg inc inc xor xor pop loopne adc push (bad) loop xchg je test or scas scas cmp xor out jmp push imul pusha cmp xor std in xchg lcall clc lahf int call test fsubrs sarl je fldt xor cmpl leavew std and lret (bad) call lea insb fnstcw xor or and jl inc xorl fild sbb test jo adc pushl fadds pop jne jle cwtl xor pop inc bound adc xchg sub pushf inc les test outsb dec mov je insl fdivrl adc into loope int out cltd jmp fs sub push es into pop mov pop in in popa pop push jp iret pop sbb out and push sbb mov sub int3 adc mov lods sbb inc jno push insl hlt mov dec inc dec out xlat jge inc mov les sub pop push mov std aaa mov test nop mov mov dec xor outsb pusha adc cmpsl jo mov iret mov mov adc inc sub adc sbb push jge push dec (bad) dec add mov jmp lds add (bad) and js or xor cmp (bad) sbb pop loopne pop xchg les xchg mov repnz add adc mov adc jb mov adc test (bad) adc inc notl add or pop or xor ret lahf add and cmc sub gs in or js jno lcall sti mov xchg dec aas std mov mov and xchg lea andb cli test jno and cmp fucomp lods mov jge inc or mov inc mov add ret popf test or sub cwtl push das or cld cmp cltd xchg push mov and dec mov in add add adc sub andl (bad) mov leave aam gs bound sub ficompl sub inc lcall repnz mov out and (bad) idivb cmp pop or movsl jmp out (bad) mov jecxz fisttpll ret rorb aas ficom dec sbb push iret insb mov jo jbe jg or jnp out push dec aad inc fs imull adcl mov inc daa jg dec jno (bad) push in jge jnp push (bad) pop push mov (bad) aam and xchg orb in mov cmpsl shlb nop pushf rclb ficomp bound sti xor jb mov xchg addr16 jb data16 dec pop lret das stos insl shr jg aad or orl in and jnp insl pop data16 cmp or pop ja and inc xchg stc xor pop test and mov sub jge jo je adc add rorl push aam pop adc lds xor loop fstpt xor sub cmp or inc adc lock movsl fldt pop push jg mov lret icebp push aaa popa or xor inc xor out cmp cmpsb and addr16 adc dec or imul popa (bad) inc adc jl pop pop pushf inc sahf cld imul xchg mov xchg test flds and pushf ret xor push ja decb xor and ficom in popf xchg gs or mov shrb push lds pop sub loopne jns sbb adc imul mov add add in (bad) dec out pop pop (bad) sbb xor movsb adc sete movsl add cmp stos push and icebp popa movsb aas adc mov lock mov sbb in sbb data16 orl in pop arpl cmp pop jbe out mov clc mov cltd mov inc xor and das mov (bad) xor out cmpsb mov adc popf add xchg add lds adc andb cmove cli fbld xchg inc fwait or adc mov test and mov lret daa dec adc xor jo incb test inc (bad) jl jmp and jp and mov (bad) addr16 sbb mov pop pop xchg lret loopne sub inc adc add out dec xchg nop dec xor bnd nop incb cmp and adc imul adc jecxz outsl or jle jbe popf mov dec mov dec sahf sbb mov dec out or dec inc lods (bad) dec mov inc xor aaa sbb enter xor adc (bad) ss ja add into or adc test fstpl cs out jge mov add sbb jecxz xchg ds dec mov push jg mov mov lds inc mov pop add xchg imul pop lods pop adc into sbb xchg fs pop and mov cld mov sbb xor xor add cltd adc cmp adc clc in (bad) unpckhps movsl dec incl loop or test ret adc ja pop push mov nop out mov inc (bad) mov std jns int (bad) cltd inc daa mov test test out xlat xchg cmp mov and pop ret pop add jo gs and into inc popa jae inc adc jne call jl sub shrb or sti dec lahf jg mov loop fwait xor xor je push dec sub xchg (bad) daa xchg call je mov imul rorb (bad) repz push cmp scas sbb into aam (bad) div cltd sbbb push int3 push in push (bad) pop (bad) std xchg xchg xchg and (bad) insl push pop jne (bad) call and push or push add dec hlt inc mov sub (bad) push push xchg pop pop popa mov fidivr ds push cmp iret das or fiaddl adc pop dec mov push push lods aad (bad) lods add cmpsb pop std mov bound ffree popa cmp jmp mov aaa sub pop push push inc lea in pushw sub cmp xchg add or or inc bnd or lret pusha sub xchg pop and (bad) add fs shll loop add or inc push pushf dec stc stc inc popa mov pop ret movsl dec inc cmp sbb jns out cwtl shll dec mov add fsubrs loop add and cmc lods and (bad) not test jns fwait adc lcall mov adcl and sbb xchg fdivl push pop lods lret insl lea jne out ja loop bsr lea jle cmp stos mov xor fs xchg test mov fwait mov (bad) outsb adc clc movsl xchg rorb loopne (bad) or ss inc sbb (bad) mov mov and rorl inc fmull pop pop mov sub lock mov insb insb mov pop sub sti test sbb sub jae push insl sub test lcall rcll and dec dec sub or fsub mov div ret and hlt sbb insl jb lcall mov shl lods aaa in mov cmp out xor jmp jp imull or cmp cmc outsb cmpsl sbb out xchg mov les pushl mov (bad) jbe sub xchg ss sub cmp pop repnz jnp push dec (bad) add leave loopne pop mov out mov mov inc clc xchg dec dec mov in pop js lods mov pop js repz nop mov jbe jne outsl and test jbe mov or or insl ss jo nop xchg mov sti lcall add inc add xor pop aad or adc subl mov lods add xchg fwait test xchg int3 rcl insl sbb dec fs inc loope jb dec jo cmp jecxz dec into xchg (bad) dec push test sub xchg rorl pop mov in pop (bad) into jo cmp into (bad) mov lods cs test sbb push xor lahf bnd mov sub xchg sub aas (bad) dec nop scas xchg cmp mov dec or pop pop and push push int3 ficompl das test pop dec ja test (bad) loopne stos mov shl leave ss cmpsb icebp add xor mov xchg xchg pusha and imul push cmpsb push pop cld jo dec jno mov and sbb dec data16 and mov (bad) cmp dec jae in out add data16 xchg pushf mov in daa mov mov cli push ficomp xchg cmpsl push push jo sub addr16 mov hlt (bad) cmpsl xor jecxz lds iret mov mov dec int3 stos and mov jns pop dec sbb jnp push ss pop outsl jb mov jbe xchg roll bound cld (bad) cmpsb (bad) adc jb (bad) dec arpl and mov pusha mov lahf int3 aaa dec ljmp dec icebp popa push mov sahf shl add adc imul ret or mov mov xchg out ljmp loopne jl mov adc and test push mov add (bad) mov xor mov xchg mov icebp in sub add mov mov popa adc push idiv inc jbe repnz jl jmp xchg (bad) scas addr16 jne and add sbb sbb cmc test dec test js dec mov adc jnp xchg out sub xchg add movsb push out aad inc and test pushf dec xor leave enter adc push es in aam mov lock jno addl xor cmp push jp jcxz jmp inc out jae addr16 adc lcall ret add mov inc sub or cmp mov jo xor inc shr dec je xchg sarb cmp leave dec lret popf addr16 jne mov outsl imul add mov mov jb loopne in or or push sub dec inc lret fbld add or adc pop mov push mov int3 adc adc sbb loope fildll imul mov sub mov das je mov jecxz adc mov cltd add (bad) add enter dec mov push addl fs dec dec jo es push mov (bad) insb mov add cmc dec mov fwait xchg xchg xor rep into push inc iret xchg out (bad) ss fsubs and push pop in jp mov arpl cmp imul (bad) jbe sub xchg jbe outsb jmp pushf fidivl cmpsb mov pop jg gs (bad) and add dec cwtl sbb sub (bad) ja outsb cmpsb loop push cmpsl je inc bound xor sahf dec mov ficoml sub mov inc mov jle or xchg push push gs sub xchg jae jnp addr16 xor clc push iret adc pop sbb inc mov std les pop sub daa push dec lret dec outsl cmp loopne dec xor mov stos mull test mov mov adc rcr rcrb and inc jmp sub (bad) negl arpl std incl sbb cs cmp aaa mull add cmp jl inc xchg jg jns sub jbe in clc in test ror add pushf mov sahf aaa daa in sub or xchg pop out mov or jbe dec pop sub sub or stc dec xchg popf mov inc pop push and xchg push stos jbe sbb enter ret adc sbbl paddusb and bound fild adc les lret cmp stos jg mov in sbb addb sub mov nop mov mov test fimul js xchg movsl sub sbb in jae push mov loope lahf push pop iret pop dec int3 out dec xor push lea outsb test add ljmp pop je leave dec add cs jnp leave ljmp pop add jle and cmp cmp test insl das aaa in pop xor (bad) outsl inc or mov jbe mov jmp sbb std mov or hlt or xchg xor adc popf jb and test int3 js pop mov mov clc lret cwtl jp mov push dec lods js cmp push sti loopne pop ret mov outsl xchg jbe lods sbbl push gs dec out mov cmp fistp out mov cmc push rcrb popa or lret stc push addl pop in jne push inc dec cs leave and inc fs pop and xor mov sub das dec jle sub out xor cs cltd xchg mov and cli lods lahf and cmp lret mov xlat xchg jbe sbb rolb pop sub jns jbe pop adc cwtl into lahf pop cmp pop fwait inc (bad) jl and pop dec lds clc push pop jge subb sub sub test mov lret mov in dec popf or push push fbstp sbb repnz pop pusha sbb sti push adc fsubrs test ss pop mov sub mov cmp popa fwait cltd pop inc fwait pop aaa inc insl mov sub mov mull mov fldenv in or mov xchg or sbb add inc push xchg dec ret xor rcll xchg cmpsb mov repz loope xor (bad) iret lret jb xchg push mov jae push scas popa dec adc dec jmp push push test decl das rorl call dec and fdivrl jne cwtl or into jmp out sub push xchg sub jne mov cmp push xchg in (bad) iret adc push pop and inc sbb lcall add out inc imul rolb sub dec es in pop inc fadds or fucomi loop dec fmull mul dec gs in lcall aam mov mov outsl imul sbb jmp loope adc je enter and xacquire dec out add push inc lret xor std jbe xor (bad) mov (bad) repnz in inc mov jb push stos js sub in aam mov cmp inc andl leave mov xor dec imul ja xchg and or arpl arpl pop inc mov daa mov aam insl adc repnz mov xor jg pop sbb lods lcall int3 dec xlat mov push les lcall add imul dec pusha xchg and mov pop xchg cmp xchg (bad) popl lahf repnz mov pop mov sahf and mov movsb add ret aad add jmp xchg fdiv ret mov cmp add ja ret (bad) jl or adc lods xlat outsb out test lods (bad) scas into in push pop add sub jo mov mov and pop mov and outsb cltd dec push adc loopne pop aas mov imul movsl in push xor add jmp push add gs and push addr16 jg dec xor mov scas popa jno push dec das mov jmp loopne mov xor (bad) and lea jno xor jns push inc push mov pop push sbb or dec mov sahf xor fnsave add sbb sub imul cmp fdivl imul ljmp jl dec out clc das mov (bad) iret jbe xorl scas movsb subb add jbe popf mov into (bad) or or push fcomp pushw fcoml decl rcrb add adc or sub ficoml sbb and dec rorb arpl fwait xchg push (bad) mov imul jns jmp ret cmpsb sar or adc leave jnp mov iret bnd dec insb and xchg sub mov cltd adc stc lods fisubrl loope or mov wrmsr std sahf jbe inc xor jb fidiv in xchg lret xchg mov dec (bad) mov and sbb das sub sub adc jnp push inc sub hlt xor (bad) and lea adc jno std je,pn mov sub gs out mov mov jae stos gs pop ret or xor cmpsl inc sub pushf lods iret pop imul enter mov xor sbb inc add test sub inc or pushf clc icebp outsl push ja adc cmpsb xchg (bad) cltd cmc xchg notb lret jge vminps test xchg xor sub hlt mov push dec sbb (bad) or mov sahf xor adc lods insl stos (bad) out add hlt add dec sbb or inc cs fs sub inc pop add pop sti push adc xchg mov push out xchg (bad) lcall or (bad) repnz ss fnsave mov sub test daa xor stos inc in inc jnp sbb and add xchg cmp pop push jno sbb or sbb nop fmuls or gs enter (bad) jnp add mov shrb loop mov loopne loop popf ss (bad) in lods jno fcomps xor mov arpl aaa and xor mov in dec cltd mov mov bound iret xor push dec jno rcll int3 adc dec in outsl lret stos jmp inc nop gs or and mov ret sub addr16 aaa or fild fldl icebp cwtl icebp loope mov pop arpl shlb jno fmul jo (bad) jo fcompl icebp push fisub sbb xchg cmp sbb xor bound inc in nop imul data16 insl lcall sarb in ss jno dec je xchg inc inc repz lods pop add or daa push ret dec fldenv or aad mov testl test jl out paddusw inc lods push xor js mov push sub mov add outsb ficoml fnsave insl icebp pushf inc or (bad) fiaddl and outsl xlat adc lock sti mov sub xchg test call aad movsb mov hlt ljmp adc add outsb int int3 mov mov fnstenv mov or sahf dec pop int3 cmpsl mov popa dec loop mov adc jmp mov insb mov pop fisubr fimull and mov (bad) icebp insl push movl leave hlt into cmp sub pop cmp dec jle xchg jae sbb iret sub fistpl outsl arpl fwait mov mov mov mov popa iret xor stos outsl and mov in in sub xchg pop in aam sub mov sub cmpl xor mov jne andl outsl gs pushf data16 sbb pop pop sub gs pop push shrb dec nop add cmp jl sbb push mov jne (bad) out inc add dec dec (bad) arpl dec dec (bad) jle or mov xorl push (bad) fwait pop cli loopne mov fbstp push idiv pop push mov fbstp pusha iret sarl adc je xor pop dec aad xchg int inc lea sub adc add leave mov sbb sbb lods jae add jge sub test add outsb and lcall out sarb or enter inc or jns call add push mov loop mov cmp jbe mov mov push xchg sbb data16 adc mov adc pop dec andb push nop push cmp fldcw fistp mov xor dec ret ljmp imul addr16 movb outsl pop (bad) xor dec ret mov jno mul fs push gs cmp dec mov push frstor das aas dec lcall shll or and mov adc (bad) adc aaa (bad) mov push insb push (bad) in decl jnp mov ljmp movsl add sub in and lret inc xor jg outsl (bad) mov dec (bad) inc (bad) loopne fldlg2 clc fmull jo ja jmp icebp and out fnstenv psrad push int3 pushf inc jg daa xor subl jb insl (bad) xchg call pop adc mov iret and mov in stos das jne hlt adc je and xchg aas (bad) jne les in sbb mov cmc rol and addr16 dec inc jg mov aad sarb pusha or je fistpll fmull dec xor jle clc or call out lcall mov inc imul les rcr cld mov xorl adc les fcmove fs jnp xchg ret xor xor xchg mov loopne je loope test cli xor out pop ljmp xor gs mov int3 inc adc adc sub or cmpsl push or sahf mov or mov mov lret cvtdq2ps mov push aam push cltd sub loope (bad) shrd inc out xor sbb iret lahf insl mov dec in mov leave adc test mov rcll rep iret mov mov subl imul sub shr fs mov sahf push pop movsb pop sub mov or or inc in loope jmp cltd sar jle xor dec jo lret dec mov sbb sub outsl cwtl inc dec outsb inc jecxz inc push insl xchg add dec fsub mov das xchg aaa xchg aas or xlat jbe push (bad) imul push push xor rcll xchg and andl rcll scas pop inc mov adc mov popa push fistpl lret mov inc or sarl jne cmp push push je out out repz sti mov mov jne pop push pop repz sbb xor mov or cmpsb jecxz gs bound or sub mov arpl jbe kunpckwd in mov inc or nop je dec and orl xor ficom xchg in cmp jecxz in and push adc in lods sub xchg xor ss jb pop mov push mov and das mov adc add sbb cmpsl pop dec fnsave pop jmp mov test mov mov shll and inc out mov or repnz push inc stos jmp cmp pop and mov or fld xchg out push cmp mov data16 inc pop push push xchg cmp lcall pushf (bad) in ss test jns mov fnstcw mov std ljmp lret sub dec andl test or hlt push out xor xor inc imulb inc hlt aas xor out lea dec mov outsl inc sahf test xchg jecxz inc xchg sub jbe es jmp push cmp imul stos adc sub sbb adc cmpsl inc sahf mov and rorb mov push lds cmp mov cmpsb outsb imul in idivl fistl and mov in outsl xchg mov into inc jg in jmp int3 inc mov mov pop xchg hlt ss movb mov mulb imul push adc mov mov pop mov daa jle inc ficompl mov cli and xor pop push gs je push hlt add cmp loope adc imul (bad) dec test loopne (bad) xor or mov mov dec push dec cmp sub xchg ljmp mov sar xchg jb pop scas push mov mov sub clc int call repnz xchg lret in je int3 cltd (bad) xor and pusha test adc (bad) outsl xchg imul test imull and jl and jle mov xchg or leave ja lahf lods enter push dec cmpsl add cmp or push lcall push push mov mov lret orl add sti outsb fs repz (bad) or push cwtl ljmp mov icebp push cmpsb test cld sbb lods outsl test lret xchg push rcl cld add xor xchg fisubrl pop xor adc (bad) cmp push idivl xchg cmpsb in jb pop les fwait inc cmp in adc out pop enter int stos push es mov mov aaa dec shrl int3 jb sahf and insb push inc fsub sub jae fcoml mov and rol and xchg sahf pop cmp pop push mov push and push shrl insl or push lods scas lret pop stos mov push sub hlt div orl pop ljmp adc dec fist in xchg sub shrl adc xor push inc int int3 fildl cmp popf (bad) insl in mov push fmulp pop adc jg jp inc adc imul lods (bad) mov outsb gs sub mov decb add orl cld sbb fwait mov push jne mov outsl cmp xchg cmp addr16 retw icebp lret adc mov or adc ret mov sahf dec pushf jl es fistp aaa add (bad) xor outsb xchg fs xlat xchg mov push jl clc nop jno dec aam inc and xchg fiadd movsl icebp adc adc roll pushf ljmp out dec pop fisttpl dec push pushf pop xchg std xchg (bad) aad repz jle mov push (bad) jne pusha mov pop sub push push jle sub lea jl outsb out pop psllq xchg test test mov jbe arpl lea cmpsb lods into or outsl pop jmp ds cli dec sub inc push push outsb xor sub (bad) push popf push mov mov add mov icebp outsl sbb cs push and or jmp fs scas inc inc and (bad) and outsl sbb and jae pusha mov in call fs lret (bad) cli sbb (bad) lahf push cltd es enter jnp incl mov mov jne lret cmp or aas or ficoml pop push push orl add shll jl leave mov mov fldl mov (bad) call mov add in push fiadd scas mov leave dec or (bad) dec jle mov add jne lret inc xchg or (bad) dec push xor sub pop pop stc ficoml movsl (bad) mov mov mov in mov pushf bound mov mov cmp in rcrb aaa ljmp rolb sbb dec adc vphaddwd in es insb push push sbb call cmpsb inc and sub inc or ret loope mov das bound daa push arpl sub xchg cmp xor imul stos jae xor push scas xchg cmpsl cmc int3 arpl add addr16 (bad) xor iret xchg cmp mov in push js sbb push push mov (bad) dec loope fisubr loop insb ss and jb pop outsl xor mov mov aad pop outsb inc sub add icebp inc popf xor mov push mov jp shr jg int3 int and movsb insb jo pushf jne andl add sub fcoms sub movsl mov push mov leave sub lods xchg insl xor sub push push loope sub in in test and (bad) mov xor and jecxz dec ret push mov insb stos leave jp mov inc imul insb loopne clc or stos xchg push mov jge inc push lcall xor xor dec ja cmp lret pop popf mov or pop in add les mov enter mov push dec (bad) xchg pop mov les sarl dec in jge push inc lea inc fsubs roll dec lcall iret repnz jne pop loopne and xchg pushf mov arpl mov call sub jecxz lds mov add sub fnstsw pop push (bad) mov mov and push mov lods mov fs jbe dec je jecxz in leave insl arpl pop inc jg dec in (bad) pop add inc inc out bound adc xchg push inc xchg mov mov cs je out insl dec inc lahf cmpsl mov imul inc lock es mov es cmp cmc pop sub add daa and das adc movsb mov inc arpl fldl2t or ret push sbb jb sbb lcall xchg sub lret push and dec jns jle arpl jecxz scas (bad) sub insl pop scas stc and push clc add es iret xchg sub addl fs or in push inc sti mov (bad) push in fldl adc mov and in sub inc sbb test jno lea jl repnz sbb xor sti adc mov jle dec pushf inc jbe cmp outsl jecxz pop lods fistpll movsb cmp out pusha repnz cld jnp jne (bad) jne aam cmc push push std lods push mov adc iret add dec xor cld pushf dec sub cmp dec loope test sahf or shr into fidivl cmp push jb jge dec fidivr push pop sub push jnp or add fmul out xor insl hlt data16 fs leave (bad) sub movsb cli cmp mov in fildl test xor mov cmp pop sbb popa xchg shl cwtl cli les or mov xor imul dec cmp mov cwtl cmpsb mov out rcr call push inc pop call sbb out mov aaa (bad) fisubr fwait push cli dec out movl adc push out and ret push xchg jmp mov mov mov int pop ficomp inc add incb inc fbld add dec fadd mov push xchg jae shr (bad) rorb push inc cmp jbe pop aad pop (bad) in inc xchg jmp arpl lods sarl adc push xor sbb or nop dec mov sbb call ret mov jl rcrb mov lods sub mov dec and push jb fsub adc int3 add pop pusha daa lret cmpb (bad) clc ja push js inc pop cmc mov (bad) std test scas jbe mov enter lahf inc insb jnp cmpsb inc inc test (bad) outsl mov xor neg repnz dec insl stos push pop jnp aam fisubrl mov push add inc xor push push xchg pop and adc cmpsb lea xchg fdivrl lds aaa adc add sar loop clc inc xchg sub inc leave lcall xor out add pop jae xchg loope test xchg rolb sub sbb or lahf std sbb or lret (bad) sub jne std inc (bad) packuswb lret xorl pushf sub cwtl xorl mov into push cltd adcl mov iret and addr16 sbb fist mov mov rol dec jnp mov mov lods mov mov pushf mov insb mov rcrl dec repnz push cmp sub int3 dec dec xor xchg push jge test or add (bad) sti (bad) jno fnstenv dec mov negl push cwtl pusha test lcall movsb pop (bad) xor xor rcr fsubr pusha pop lods pop lods lds loopne and int3 dec movsb (bad) stc mov adcb cmp rorb insb sbb cmpl cwtl out stos pop hlt jg (bad) sbbl mov adc fisttp mov sbb cli cmp sub adc cmc push mov mov loope call pop data16 (bad) int3 aad dec lds es pop sarb fldcw adc out imul test testb fistpll or mov cmp pop dec test fdiv cmc sahf push iret fwait mov or push (bad) std xchg pop fistpl rcr pop fwait test inc rorb xor cmc popf lds sbb ret aas cmpl ss xchg mov dec xor mov add into sti stos outsb fnsave mov and lahf fsubs movsb push popa es push push cmc xchg stos add test mov dec xor mov push aam push sub xchg lret into xorl mov dec aas sub adcl outsb aas int3 test xlat jb fsubrs insl stos pop adc aaa sti or mov inc int3 or dec mov push xchg mov clc lret sbb xchg xchg mov push jge aas push icebp cmp push std cmp add mov sbb xchg clc pop pop nop fdivrl in mov arpl lds (bad) js (bad) xor call sub or pop mov jl jle jecxz adc xlat in repz sbb push sub imul add mov mov fcomip repnz out or loopne jbe push aas int3 mov add lea dec movsl dec rolb aas inc mov push (bad) sub add lret leave sbb fbstp pusha pop mov fldenv push ret pop pusha pop mov dec push add push ss in dec int3 pushf sbb jo movsb imul and in mov shrb xchg push nop fisttpll xchg pusha les out and (bad) mov sub aas mov icebp imul sub mov mov add push pop fmul cld xor add popf movsl push mov add pop jbe mov inc xor (bad) fs mov ss sbb xchg fsubrs sti sub sahf push xor xor pop sbb mov dec sarl xor aaa inc mov fiadd jl push (bad) fs ror imul xor mov ret or in sti adc push outsb ss xlat push cmp add pop lods ret jno inc xchg outsl mov nop fnsave cmp cli std and xchg mov sbb xor push xor mov rol mov roll mov scas xor insb ret dec inc jnp int3 sar adc add jle jae mov push push lret stos xlat arpl andl adc ljmp popa mov and inc jnp xor out and pop bswap fcoml int3 jae icebp daa aam daa clc into pop ret fcoms pop jb testb in cmp ret cli cmpl ret ret mov out fimull cmp out lds xor aad jb xor push adc cltd (bad) mov push sub (bad) pop daa mov js xor mov mov dec out add sub push fisubr or mov sbb mov in cmpsb and test add inc pop stc in and test sub cwtl pop sti dec sbb dec (bad) cmc mov xchg es xlat sbb pop imul ja out inc jno mov jbe mov inc pop cmpsb lea add jns xor sub push (bad) mov or or icebp and sbb ret sub or (bad) test stos jns rcl mov popf orps pop push sub pop push dec lea inc in pop (bad) mov mov cmp pushf sub mov or js mov xor sbb or xor inc xor (bad) cwtl es adc jnp inc popl in inc aam int mov xor push add mov inc es mov or lods bound pushf jg pop bnd mov lret jnp mov test mull cmp pop out push mov das xor push int adc pop mov insb (bad) std push addr16 imul rolb lret jae mov lods mov or jecxz std int dec mov (bad) dec push fcoml pop pop add xchg and pop lea sbb adc aas jnp xchg jle sbb dec inc call push xchg mov cmp xor (bad) pop cmp add or cli inc ret mov int mov (bad) push xlat cmp scas fisttp subb jnp daa jmp lods adc or mov loope nop lods pop cmp mov ret int3 cmpsl das frstor test xor jbe jg popf arpl lmsw xchg mov jae loop xor outsl daa mov xchg jne lcall imul mov dec and das (bad) out sbb int mov sub xchg sbb add mov fsubrp mov and mov mov dec mov cmp iret adc stc push mov test pop orl jl adc sbb in mov call cmp cli scas das pusha or (bad) stos cli test xchg divb mov jmp add cld out mov outsl aas mov mov scas ret (bad) mov data16 leave (bad) icebp pop in inc fildl push xor mov lea mov pop loope imulb add imul dec in (bad) xchg xchg mov idivb xchg sbb (bad) xor test xchg stc in xchg push dec movsb mov mov dec and adc jns into test imul lds jl xchg es or pop loopne in add inc jne sub push pop mov inc dec push movsb rcrb fs fidiv jb sub out jmp pushf mov lret movsl adc sbb sub push dec jle mov insl out push stos push rorl scas push arpl and test mov fs es test pop lret loope rcrb shlb cmp cmp (bad) sbb test into lret daa cmp adc inc dec sub mov inc and push cmpsb xor insl dec sub outsl pop mov fucomp lahf push cmp out mov test mov out sub dec in pop lock jecxz jbe jg or fidivl (bad) mov out ja loop inc mov subb xor push (bad) loop inc or sahf mov lds xchg pop jg mov dec insl sbb pushl mov orl cmp sub cmp lea jp stos xor jge sub fwait mov imul xchg popa popa ja aas dec add (bad) aas sub fistpl adc test aad sbb or aas pop push jns xchg pop inc andb xchg pop int3 je dec in xchg and pop insl or insl mov nop sub sub sub mov mov das adc insb mov imul (bad) jb fistl pusha inc rolb adc cwtl cli sar je sarl lret clc stos negb mov sahf popf ret jne les jo xchg xor lods idivl mov pop push out xor call mov adc int arpl out je xchg mov ret inc sbb mov and pushf addr16 add inc test dec or inc ss outsb dec add (bad) imul cli std inc adc enter pop cmp mov sub clc push push or test (bad) and (bad) push xchg sbb aad push es aas sti mov or jp fcompl sub adc dec fdivs cmpsl cmp outsl scas cli sub jae sbb xor in add loop dec popf lret sbb mov lea adc inc sub xor je cmpsl push mov adc icebp insl inc mov nop flds decl or mov cmc aam or xchg cltd mov sub and movsb xchg and mov fdivrl add cmp add clc outsb adc lcall pop pop or ja sub inc inc cwtl sub int3 (bad) pop in (bad) je stos mov sbb pop adc (bad) xchg aaa loop,pn aad sub mov cmp jns imul pop insb (bad) enter mov loope xor mov call stos add pop dec lahf cmp dec pop test fisub popa sbb xor sbb push jmp xlat pop ja (bad) insl jns lods fld jle mov ret bound xchg out (bad) pop and jno sbb cmpsb push test fildl jb push and outsl mov iret cwtl adc adcl (bad) pop fimul popf movsl (bad) pop in fsubl fidivl les sub mov push ss add mov jo dec xchg adc ret hlt push sub ror inc popa jecxz push fsubp mov int lret rorl pop jle arpl jno sbb (bad) ss insb xchg ss pop movsb jbe fisubl xor fs popf pop cli mov shll fistpll or cltd sub adc imul xchg pop cmp mov das sarl dec or cmpsb xchg lock out xchg inc cmp movsl in (bad) pop cmp or test add mov rcrb xor xchg push mov sti jne or inc and mov mov dec lea xor std dec or dec int3 enter enter dec cmp insl jns mov test inc pop mov mov loopne mov xchg pop aad jmp jae cmpsb pop sub test adcl fcmovnb mov ret dec fwait xchg cmp jg outsb add enter dec lcall mov mov data16 adc adc outsl data16 popa ss clc mov in js pop jp lret orb adc sub aas jp lock jne arpl fwait arpl xchg jl fidiv jecxz push or rolb addr16 xchg mov fsubrl in daa or jae js xchg arpl pop and push sub push xchg xchg pushf mov jns mov fnop and pushf mov jecxz push or rcll out (bad) daa rcl icebp mov jge pop mov das in sub sbb bound dec rolb push outsb push pop (bad) ja add xchg dec push out inc dec es fs jmp and in outsb std (bad) jne dec pop cld pop shrl jg (bad) mov or psllw mov push ss inc push xchg or mov or stc call imulb jae adc dec jl push imul pop jge xor sub push bound (bad) cltd test adc xor in popa pop into repz mov adc loop jl (bad) loop ja scas mov adc jl mov xlat xlat out shll sbb mov cmp jg and int3 mov outsb push push push fdivrs pusha arpl ror inc idivb or mov test sbb es dec inc cwtl fnsave rol cmp pop cmp push pop insb jl ret lock ret pop fldl cmc sbb faddp mul pop ja lea mov push mov mov fs mov dec jne mov fdivs or sahf jle pop pop test bound (bad) xchg sub (bad) mov out jbe jle icebp out add icebp dec jb dec push jecxz pop pop jl cmp imul ds in popf int lods test mov gs cmpl jmp push ret inc frstor scas stos push loopne pusha pop mov inc repnz daa fldenv int jecxz add pop xchg or cs push mov push dec mov popa roll push pop push (bad) and mov xchg (bad) dec cmp xchg inc pop xchg or xor jp sbb loopne inc out fstl imul dec mov dec sbb jno jb ss daa cli cli mov mov push add mov aad inc nop mov gs jb mov dec scas scas sbb test mov mov (bad) call mov test dec js add mov cli adc test mov fsubrp adc cmp sti cmp mov push inc and insb xor mov pop (bad) cmp popw and push mov stc jecxz repz pop jno daa mov lods lock aaa rcl shrb cmpsl push push add dec fstp cmp or jp ljmp mov jl mov push mov andl ja and push jmp pop in jnp jne std cltd dec cmp mov (bad) fcoms xchg xor jle in jnp add repz cmpsl pop cmc sbb cmpsl aad push pusha ja and mov in xchg add jno mov xchg cltd js or xor dec inc imul sbb mov push enter je sub jbe std ror sub dec sahf mov repnz xchg fnstenv xor mul xchg add out (bad) clc xor (bad) ss sub in xchg call das mov jmp in ss jmp push add lods dec lcall push push loop mov adc mov cmc dec cmpsl pop clc xor lods in sub mul pop les lock fbld inc jle mov sbb push and adc adc and rorl add mov adcl loop xchg and sub add (bad) (bad) jne js push add and dec add pop (bad) aad idiv add mov xor adc push test mov loopne push ffree push sub clc sbb xor insl arpl pop inc mov adc cli int3 clc or ljmp mov outsb jbe dec sub mov arpl aaa rolb lds push ljmp add mov sub enter sarl mov dec xor das xchg pop lahf dec mov pop jno fildll sub xchg lods shl pop dec sbb or jmp dec jne sub sub xchg add insl or gs xor arpl lods mov es jl push negb loopne jecxz je sub push inc nop popl inc dec (bad) stos jnp jo call lret cmc outsl inc cmpsb pop ret repz jne jno xor or jle pop adcl inc sub xor pop mov lret insl repz push sub in and cmpsl test sbb pop subl (bad) inc repz int3 dec jns bound imul sarl lahf pop mov pop jnp ds js sbb sahf jne cld mov inc cmp and lea inc aad sbb enter or sub jg add jle ds dec mov call push sub jae ficom pop sub inc ljmp (bad) or mov pop mov fistl mov jo je jnp (bad) hlt sbb pop pushf xchg lret and sahf pop cmp push dec in push sahf jge (bad) nop stc sub mov notl push iret shlb movsb pop imul das je sbb pop aam mov pop aad in js ljmp out and mov lcall fdivl cmc mov rorb stos push call (bad) rorb add ret xchg and scas test xor mov inc je add pop add mov lds mov cld adc jmp mov adc loopne cwtl adcb fsts jb xchg dec cltd jle dec pop out pop sub dec and enter gs test outsl bound in jle mov movsb in add sarl stos test mov roll and pop mov xbegin fldl ds sahf jno pop cmp fxch and int3 in pop test fistp mov push pop insl pop push jecxz mov imulb mov aad xchg jmp dec sarl pop lods inc and cmc stos insb xchg stc adc cmp subb repz out cmp mov xlat cmp cmpl xor in cmp cmp ret lods rorl adc sbb mov ds xchg scas repnz dec lds lods sub faddl (bad) rcll add add mov sub sub fprem1 push inc pop leave sbb mov leave dec xchg inc (bad) mov lea (bad) adc mov dec jnp xchg xor mov orb or push push dec (bad) cmp dec add push mov icebp mov test xor insb popa mov mov mov sub and or dec shlb (bad) shlb pop sub mov or add fisubrl push sbb dec fcoms lret pop call add (bad) xchg sbb scas ljmp push jo jo pop sub test icebp cmp or fisttpl xchg pusha test or sbb inc in ja or cmpsl fwait sbb cmpsl and scas and cld add gs dec in pop add das dec movsl cltd bound adc cmp out in pop data16 outsl scas stos push ljmp and shl dec leave xor jge adc loope push scas push shl fwait mov xor repz xor adc icebp lods fs pop jecxz stos test out (bad) fisubr sahf mov dec xor pop adc dec dec ja clc test sub pop xor pop jns jl pop cld ficoml sbb and push jge push rcrb xchg imul adc fwait push (bad) je int3 out add xchg out lock movsb and pop xchg sahf adc push push (bad) jne xor repz ds repnz test add cmc in add je call mov int jb leave push adc xor jnp or icebp pop scas loope dec push shrl test and mov (bad) int3 ptest lahf sbb out clc cmp pop push clc inc xchg (bad) lcall mov adc cmp pusha cmc add dec pop daa mov js jge inc pop push dec outsl js jp mov enter adc push rcrb faddl dec or popa sahf inc loop lea aaa pop pop pop xor clc out (bad) jns,pn jo adc or (bad) je lods stc mov push and pop aaa popa mov inc dec pop adc xchg dec jo notb (bad) aas xor mov fdiv push xor xor dec xchg lods cmpsb ljmp stos sbbb cmpsl int lret iret jp xor and cld in mov (bad) call stos dec orl mov imul popf xchg inc movsl lds jmp popf fcompl sbb or push adc ljmp movsb lea out cmp jbe shrb dec adc fistp sysenter fisubrl ret inc int3 loopne inc mov loop sub stc add cmpsb add pop movsl loop (bad) test lcall fsubrl add mov sti inc int3 or or clc cmpsl das dec add cwtl ja jmp shlb inc icebp into pop pop fistp xor lods add loope pop sbb push in daa jecxz unpcklps (bad) cmp loope rcll pushf jbe and jbe in mov add push jnp xlat add imull add negb mov nop (bad) or jnp push mov add lods pop imul out xchg dec psadbw mov pop lret pop add cmp call jb fs sbbb push pushf popa mov and pop xor arpl lahf ret inc dec int3 jle sub data16 push sub hlt lcall xor or rcrb stos mov das sti insb pop shl dec adc jne jae xor ret out cmc mov xor pusha lret icebp out xchg mov dec in lods fadds sar mov ffree fbstp push jbe int mov inc pusha fdivr (bad) je mov jmp mov jns (bad) jmp add pop (bad) pop pop or js adc add xorb and popf jne dec add bound cmp or cmp insb xor daa or push int3 mov ret jo sahf add fs push ja adc aaa shll dec inc jle add xor addr16 jle in sbb jbe adc adc pop xchg push iret xchg push sub lods mov adcl add mov pushf sahf cmp or pop sbb (bad) clc lea mov ror mov add loop xchg lods setge sbbl lea movsl push sub and es and push mov mov popf pop repz iret imul dec mov scas mov pop imul and and mov insl pop jne fs test lea push xor lods mov in add std gs and and xchg stc into inc andl jl or ret adc cltd int3 imul imul xor outsl stos sbb dec popa lods push or dec sub sbb lods les add push pushf adc mov xchg (bad) xor fs push (bad) (bad) mov lcall xchg out sub js ss add mov sub popf es jmp aas mov jne scas pop jecxz sbb cmp (bad) mov jmp mov push ljmp pop push sbb xor in jge not std dec fdivl aam test aaa nop xor inc cmp cs push das ss sub push test pop sbb sbb jae mov push call out sub in lea dec lods xchg and in add repz mov cmpb daa adc loop adc pop xlat cwtl lods insb mov sub ja add mov adc pop insb sbb je mov mov pop dec xlat (bad) dec add shl movsl icebp add mov shrl loopne cmp pop dec mov insl pop (bad) stos xchg gs xor push call imull es mov push cmp mov (bad) mov (bad) lret imul jno mov add imul out arpl insb cwtl push outsb rcrb cmpsb push mov insl sub stos and add jecxz test in add sub int3 push xchg or push dec mov pop sbb xchg and cmp mov adc sbb xor ds outsl xorb mov add push mov cltd and mov movsl scas sub jmp repnz pop push mov fwait inc nop ljmp push mov insb pop daa lods xor repnz sbb sbb pop xchg push and testl mov shr cmp rcrl stc inc add adc cld dec or xor ljmp pop mov xor xchg xchg or sub and mulb inc jnp jb cmpsb sub mov jno and jo clc mov scas repnz push xchg cwtl rorb clc or sbb push int mov jb dec dec jae mov inc lcall stc loope sub shl mov pop subl push dec test push scas mov xchg idivl sbb subl loopne add in inc mov inc sub add cs aam pop mov (bad) xor cmp xor aam dec sub and dec mov xchg imull fwait xor dec jge gs and (bad) stos cmpsb mov xor ficomp ljmp repnz xor inc loope push add pop sbb in fdivrs lret fisttpl (bad) clc das xchg (bad) jae in mov jecxz push cli adc shrb mov insl jl mov jo xchg add pop mov mov call (bad) popf sbb sub sub add shll mov xor repnz sbb test fldenv and data16 call call jo adc sbb mov or or mov push xchg adc inc imul into orl and daa sub jae gs jns cwtl sahf mov sub pop push push and gs jb or fucomi int3 jb inc mov into std dec (bad) sti sti cmc inc dec (bad) icebp idivb dec or pop ret cmp jge pop addr16 les mulb xchg xor pop cmp mov pop jp lods rol jo imulb lcall icebp fstpl adc outsb mov adc aam xchg or addb call (bad) lods xchg inc pop popf pop mov xchg and bound daa pop fidivrl in nop dec loope push xchg adc repnz pop and ja in push adc gs fidivl and nop test pop xor xor fcomps sahf lcall insl mov les imul jne mov cmp xchg xchg push sti mov lret jl (bad) cwtl and fbld or addb sub repnz push and ljmp pop fwait hlt adc jae push dec xor int aad sub xor xor call mov cld repnz inc cmc and lret xchg sub std (bad) loopne mov jne xor pop daa mov sbb stc in inc rorb adc adc mov cmp push mov cmp jmp xchg (bad) adc xor mov cld sbb xchg pop (bad) jno push pusha hlt push pop stos adcl arpl inc xchg arpl fistpll lcall pop stc loope test mov fdivrl sbb or dec add jo in and cs mov push xchg jns mov or out es mov mov and dec ss out add movsl popa aad les cwtl jo jl adc cmpsl fsts push clc enter imul rorl insb sti repnz xor test mov mov pushf (bad) sbb inc lods pop sub mov or (bad) push add adcl mov outsb shrl outsb scas jbe or mov sub mov inc and das or and adc sub clc or test cmp cmc sahf out or push lods (bad) mov push jl imull std movsb mov iret cltd in sbb xchg xchg dec ficom adc js ja outsl (bad) ja (bad) cmp jnp dec mov es push add out and xor cmpsl xchg in pop pop (bad) cmp test pop xchg rclb das mov fdivrl jg ds adc pop dec inc adcl insl xor call xor add pusha out cmp pushf push jo imul xor mov dec xor ja fsubs lds int pop pop iret jmp fiadd shlb movsb imul into int3 lea inc and lods cld xchg pop in lds loope inc test ljmp sub sub or jno test xchg dec mov mov fsubl (bad) int3 in and add (bad) cwtl daa xor jl xor inc jp sti orl fcmovne dec mov paddsb push mov sbb lods push inc leave sub sbb popa xlat push pop sbb daa dec jno or push jge into pop mov jl xchg push xor or ret js sub mov cmp mov jnp jne cmp (bad) hlt xchg mov pop enter cmp (bad) pop adcl out (bad) clc lret rorb push movsb mov pop (bad) jl mov shr test add out imul popf push xor repz pop inc and jle or xor (bad) punpcklwd dec jbe imul loope fcompl xchg daa cld or and jecxz cmc or ljmp dec xchg inc sbb call fild jns jo fnstsw xchg mov jns pushl std (bad) sbb negl add xchg push xor push lock fs lret les xchg push add scas xor movsl ret adc cmp int add enter xor mov or push movsl bound jmp sti xorb add adc sahf icebp cs xchg enter jl outsl rorb dec adcb add call cltd push mov jp pop scas jl pop out xor rcrb dec xchg xchg mov push sbb fsubl lea push jnp daa jo popf mov xchg mov adc mov (bad) mov push iret loopne mov mov int mov nop sarb or inc dec pop std mov pop jmp jle loopne test mov jle dec test xor dec ss cltd or push mov lcall push mov jge sub popf xor int3 cld push jg dec bound out es lahf jbe push (bad) nop in mov add sub jecxz mov sti into xchg and sub sbb (bad) sbb scas xchg mov or inc mov jbe dec mov in mov lods inc push cld test sti inc and out pop les adc shrl mov xchg adc pop dec lea rcrb xchg out pop adc inc mov xor xchg lcall push pop add dec mov and lods loopne or es sbb sbb in xor jge sub data16 jge sbb lret pop inc ds xchg pusha cmpsl mov ret scas outsl xor ror imul (bad) enter test fldl and (bad) or xor jl adc mov mov sahf inc or loop dec lret add pop sarb movsb mov pop cmp push fnstenv mov (bad) repnz movsb jecxz cmc sbb repnz test mov (bad) xor pop mov mov aam sub sub fmuls push lds mov test std xor sbb dec (bad) jg push clc call pushf test or cld mov xchg sub mov inc jb xor ja aaa imul ret sub fadds js ljmp pop insb cmp in lock jb jecxz adc popf mov addl popa mov imul mov aam cli cld adc les aas add test inc in int cli movsb inc insb imul jae dec lea ret icebp repnz lods lahf daa es push xor scas pusha sbb fsubrl cmp sbb sbb sbb add mov pop jecxz clc cmpsb stc (bad) icebp (bad) sti jbe xchg iret hlt push orl push imul bound mov scas lret dec add xchg xor loop in mov in stc ljmp iret pushf xchg adc and (bad) dec fcmovnb dec iret icebp jge std xor mov push outsl loopne sub add fs jl sub cmc out sti push fs fisubl inc das fbld rep push aad aas cli and jl int test push or and push cmp popa pushf mov xor cmp jne push adc jb call mov or fnstenv mov fidivrl cmp iret (bad) or iret lret stos sub dec lods adc pusha push push lea push jbe aaa lods mov xor fs xor and push fstpl test xlat inc in jnp negl jne gs loop unpckhps mov ret (bad) xor gs push sub popa lds mov fnsave sub repz das lock lret lret repz add stc fs pop pop mov and dec mov fdivrs adc mov daa pop stos pop sbb jp movb adc test ds and loopne,pn mov jle xchg cmc fisubr (bad) out repz (bad) mov push icebp pop (bad) jno mov jnp aas mov outsl sbb adc inc sbb gs and push mov shlb sbb dec dec pop shll add lret sahf cwtl pop mov mov jp jo xchg sub (bad) jno (bad) pop andl lods out pusha xor dec pusha inc dec lock cmpsb jbe cmp hlt cmp push mov xor xchg inc outsl fcomip iret mov aad lahf push les cli lcall add mov andl add jne fistpl mov lret (bad) lahf sahf ss dec loopne (bad) sti nop movsl sub inc pop mov rorb pusha pop pop pop popf pop inc push jne xlat add push sbb fdiv (bad) fdivr popa mov sbb push and subl in js mov pusha repz jno dec sahf daa into fadds mul scas xchg scas pop aad adc inc js incl daa insb sbb (bad) jo add sahf jp pop jne out repnz sbbb mov jnp jl sub data16 stos js rorb movb push or out add fcom subb sub jge icebp push in ja mov pop or ss fdivr pushf jmp jb shlb mov es push mov add mov jmp or push cmp add dec pop cmp ficompl aaa mov xchg or xchg (bad) iret xor insb or push das pop xor jge es mov inc shrb add movsb and pushf mov lods xchg jmp int3 fs sub pop xor clc test movsl pop sbb aam aas jnp stos nop (bad) cli lret sbb addr16 xchg lahf jbe data16 xor adc jo mov out mov xor jne mov inc inc fsubrs pop mov cmc (bad) inc mov pop inc int3 push test jbe aam inc pop inc jge push push rdmsr bound jmp inc xor mov lret dec lret aas lcall cs sbb sub mov jle xchg hlt cmp (bad) cmp mov icebp sub (bad) mov inc pop xchg mov push rcrl das cld enter nop inc mov ret ret test sub enter icebp pop and lods xchg aam (bad) aas cmpsb js fxch addr16 or inc iret mov or lret std popl sti sub cwtl outsl imul sbb cli rcll popf cmp or ret cmpsl pop pop fsts inc ret loopne popf pop mov xor lret fldl jo inc jne and fimul lock hlt sub mov adc lods push loopne mov cltd xor arpl iret sbbl jno and pop gs into inc ljmp mov and out loopne lea sub push ss xlat pop lock sub inc xor test lahf out mov xlat sub mov push fs imul loopne xor lea push cmp pop and pop xor dec jp xor loopne gs or cwtl xor fldenv imul mov push xor push cmpsl gs mov push pop mov xchg arpl adc dec pop sti rorb out shl out add add aaa imul cmpl inc jg mov subl sbb iret sub jecxz sbb (bad) pop mov jb and ljmp dec dec lea js add mov call push cmp hlt jno pop adc (bad) aaa into movsl sti xchg xor in sub idivb lea sub xor cmp jns es in sub lods stc cltd js inc fstpt adc vpmadcswd sub adc add and adc loop movsl bnd mov (bad) jp fnstenv xchg inc lret aas (bad) les mov pop cmp mov cli xchg sti lret lock aaa xor (bad) stc sub mov fdivrl ret mov cmp pop dec mov (bad) dec cmp mov sub xchg mov or push adc mov push jge pop cmp out iret jmp ja pop rolb daa dec aam or push roll mov movsb push xor xchg mov aaa pop loop mov adc dec push cld cmp or jp adc aam aad adc adc jecxz lahf adc push popf xchg faddl dec aam mov lcall out shr add mov push dec sub add int3 cwtl movsl shr sub adc adc jns push and ret jns mov xor stos jmp hlt jo sbb and jnp loop dec jge insb popf push iret push cmp stos sahf or mov jbe imul loop inc fwait sbb dec mov push outsb gs pop cs push mov push push (bad) add in pop insb ja push push lret pop xor pop pop int3 mov insl pop out stc cmp js xchg mov fimul sbb xlat sti xchg pop rcll mov popf cld lods icebp xchg cmp jle fnstsw leave adc out rcll fsts roll (bad) cli iret fnstenv push das cmp push push inc loope cmp push dec push sub sub jle xor xor and repnz fbstp and cmpl mov mov inc js jmp push (bad) fsubrs mov sub cwtl mov (bad) push ret mov or jo gs frstor pop sbb clc rcrl add mov push insl cs inc lods insl int3 sbb js nop mov inc lods xor (bad) jg or jo inc (bad) out adc loopne pop ficomp push imul push orl leave notb and out roll outsl xchg add xchg pcmpgtb lahf sbb (bad) jae cmpsb movsl daa (bad) je nop dec repnz pop mov insl jbe xorl sbb ss icebp xor enter xor rcrl and dec or mov fstl xchg or xchg dec scas push pop or movsl out mov dec ficom jmp sbb adc repnz sbb mov divb adc push fidivr ret pop sub dec pop adc ja and jmp mov cmp aaa mov daa jecxz xchg rcrb pop fdivs xchg xorb fs adcl aaa push loopne push xor push iret lods pusha add or or mov call jo les movsb add mov mov icebp push test aad testb mov ja out mov mov imull mov imul fisubl dec mov insl mov imul in lahf xorb cmp mov sbb (bad) sbb insb cmp jp cli leave or notb or imul mov push rorb push in mov js mov gs pop mull popf mov mov roll and popf in out stos jl mov adc jle out les inc xor into and mov clc mov call aas in or dec jns or test stc in scas dec cs (bad) fisubr lods lods push sub aam add loopne dec je adc jae add pop inc mov gs jae cmp loopne sbb jno in in and push dec mov mulb and cmpsl cmpb mov inc xchg ret mov or push stos and fdivs or into sub inc popf dec or add imul mov and loop xchg fadds cmc pop test in push jg in push fldl gs sbbb xor lahf jae sub inc bound sbb (bad) mov arpl je mov jae fs mov push sbb inc outsl inc dec (bad) push jmp cmp imul pusha and cmp lahf cli xlat mov lods fstpt adc jle out mov loopne enter xchg jp es mov outsl out mov bound push scas lds rorl cmp inc ror pop sub popl rcll mov push test xor pop mov xor cmp xor mov dec test data16 roll mov cmpsl fstpt mov dec or in cmpsb dec sub xor jne lods (bad) data16 icebp jl push insb sub dec lret cwtl out cwtl push ja mov sbb aaa adcb push pop jnp xchg clc dec jae sub cmp rorb lahf je fwait and xchg sbb mov gs int3 xor je sbb dec adc mov (bad) xor xchg in insl jmp xchg jo add push jb fwait pop movsb pop imul notb stos adc and sbb insb pop pop test sbb inc sub popf inc call outsl shll test dec cmp jno js ljmp push adc mov pop (bad) mov sub loope xchg ret test dec sbb mov inc jnp or (bad) notl call aam add push mov stos lds inc xchg loop into cmp add repnz dec cmpsl and push push addr16 sub shlb in mov (bad) pop gs xor push mov jecxz dec lock dec je mov push sub adc sub push jno push divb inc and push add lcall sbb sahf test and das xchg sahf insl and mov xchg dec or scas jmp adc inc push jmp ja mov or cmp rorb push bound out addr16 mov pop xor sub (bad) add cld and xor mov sahf daa in (bad) inc inc jae lock (bad) xor insl and pusha in fdivs int3 pop dec pop out out sub loopne xchg sub or mov popa fcomp sbb test inc fs aas jns scas pop out cmc push (bad) pop xchg inc movsb ret pop jo lret ret sbb mov popf add cmpsb xor sub or lods pop inc xor movsl inc mov sarl pop pushf mov fwait push jae cmp xor jg jl hlt push fnstsw outsb xor sub aad repnz jns mov adc sub mov dec pop fsubs xchg xchg pop rcr xor pop movsl push lcall push inc inc (bad) xor pop lcall sub bnd loope sahf (bad) jmp adc call scas jbe adc leave loope mov xor fnstsw out xlat push xchg lahf out cli pop aas iret mov push gs in loopne mov stc push arpl inc lods add xchg mov iret sahf mov dec mov dec push sbbl lea loope inc stos ret in and std out lea idivl add sbbb mov push aam lods cmp and in leave jns cmp aaa enter inc out insl sti jns jl int pop cmp loopne or and rol mov sub in iret mov dec mov inc xchg mov cwtl ss inc mov inc pop adc add sti aaa jae pop decb fsubrs sbb cmp int xchg icebp sbb pop xchg (bad) lods add popf mov mov and (bad) xchg popa sub pop adc imul mov push pop xchg mov mov mov xchg lea icebp (bad) pushf imul ret std add push jl push push cmp outsl test pushf clc lea sub add xchg xchg adc std ds je jb js into cld aaa jmp mov rcrb and mov xchg jb shr fsubrl xchg jb mov inc popf fwait xor xor (bad) lds mov adc inc scas xlat xchg sub mov dec fcompl shrb mov (bad) add lds in adc bound ret and cmp cli mov xchg shrl cmp jle xor ss xor mov in inc fsubr (bad) cmp decb stc pop pop or adc scas dec fs or sbb and in pop fisttpl cmp lret add int3 xor add fimul rol int3 jb loop push cmp add sub push arpl in inc xor fistl (bad) sub roll sub xor mov jns movd ret fs adc jge mov push inc xlat out inc into jno leave imul mov xor mov lea hlt cmp cmp (bad) test cmp arpl sub sbb add mov adc lods aam add clc ss push mov cld out (bad) or jne or cltd inc in sub push xor or fucomp jns mov xchg shll xchg (bad) push ss dec mov lret adc sbb cmp sbb mov mov sbb ds sub or popf push dec xor dec aas pop movsl lock cmc lock lods bound popa sbb sbb ss fiadd xor and icebp jnp mov loop inc mov (bad) mov jne xlat in dec mov pop test popf mov mov mov addr16 dec jecxz cltd inc xor int xchg inc insb and mov repnz out mov jmp nop and fmulp xor mov (bad) int3 imul add popa xchg dec ret mov fwait mov push lahf cmp add ffree hlt adc out dec mov arpl test jb pushw push sbb lock lock iret dec aaa insl rorl in imull mov movsl jecxz add in ret (bad) loope rol jle push xor cmp out pextrw adc je (bad) cmpsb push or sbb mov push add mov je pusha cmp mov push jb cmc pop xchg mov and leave mov (bad) push cmp xor mov sbb (bad) sub inc rolb push mov mov mov push leave add adc (bad) mov (bad) std and mov lods adc outsb (bad) mov (bad) repz outsl mov xchg clc loop mov or cmc xchg pop in mov lea mov inc xor dec adc xor icebp into pop jge out inc jbe sub inc adc dec sub xlat pop jbe enter or (bad) xchg xor movaps rorl xchg test ljmp xor fs and std es bound das addr16 adc stos adc scas adc (bad) mov ss cmpb adc and mov cwtl ficoml stc or fxch jmp loopne jno or repnz pop fs sbb sub arpl cli mov cltd add pushf cmp add adc jmp mov sarl push scas pusha sbb add sbb pop push add test cmp (bad) mov subl sti xchg outsl jbe int3 and mov mov mov mov push lods repz pop cmpsb enter lods mov int3 daa sub sub jg push and shrl lea add pop (bad) call int insl cmp push subl jecxz in pop xchg push mov push dec nop adc sbb (bad) mov pop insl in push lods ljmp mov add dec fsubl jns mov aam icebp js aaa and push push jae aam loopne jecxz cmpsb xor pop xor shll notb shrb sub sub dec sub insl lods (bad) or imulb adc mov shrd das test addl je test mov bound je push cmp mov les cmpsb out scas cltd popa das dec imul shll mov das das insb mov (bad) dec popf pop pop pop neg mov adc leave mov lret repnz loope mov sbb dec (bad) into leave fwait adc int dec mov mov fildl mov xor push (bad) jge adc out xchg std inc mov jae pop pop or sub loope sbb imul movsb and fxch (bad) pop pushf jp lret sub pop enter pop inc mov int3 js pop loope inc pop sarb jno (bad) or ss sub scas and add and sub mov shrb fist in xor (bad) aad lods or shr addb pop mov push mov push fmul repnz fsubl sbb das add mov repnz push sbb or xor jne roll push add pop push and enter cmp inc lcall dec sub fs dec stos std lret dec xlat cltd dec hlt push repnz movb mov adc inc fsubl or (bad) add mov shrb insl mov jnp pop (bad) or pop int3 inc inc fdivrl or jle jno adc mov iret add dec inc adc daa xlat sub cmp stos mov repnz mov adc popf adc ss repnz cwtl sub out mov fimull or dec inc cltd test lahf xlat pushf in nop and jbe xchg sub (bad) ja addr16 or push dec mov pop jle,pn ret add data16 lods movsb (bad) sbb fsubs add xchg ret data16 hlt push push arpl jno and aad rcrl nop ds mov and outsl test shll mov mov mov rclb scas cmc mov adc cmp int3 mov (bad) xchg lret mov dec or sbb (bad) mov pop push add inc push gs sub pop inc mov inc pushf lock jecxz inc addr16 jmp test push mov jg add popf or lods bound (bad) sub pusha gs lcall loopne js jnp push xor or data16 out mov adc and dec outsl sbb pop rcl dec aad mov in bound mov aad sbb mov repz mov pop sub sbb jne sbb aad cmp arpl xor js pop jno ljmp inc push push (bad) sbb lock test push lods xchg je (bad) lods add fldl mov hlt ret fmull popf scas cmp xchg jnp push jmp and sbb sbb cmpl ds inc xor scas inc shrl das dec imul cmpb xchg push lcall repnz xchg aam sahf call xchg (bad) fwait leave decl push clc mov jg push lds negb (bad) or ss push pop add mov and sbb int in jb int3 mov lret gs out xor scas sub sbb sbb fldenv mov xor js je iret popa sbb sti sub cmpsl leave jno mov arpl inc aam adc addr16 add jae push mov sbb push test dec push sahf sub xor dec push les or jbe inc pop push (bad) loope xor mov or or lret outsl xchg push push into dec (bad) pop sub xor loope orl adc dec jne pop adc sbb push shl add sbb rolb mov xchg out int3 shrb jnp adc pop fcomps or jp and dec out pop sub xchg add out repz popa mov xchg mov cmpb dec shlb mov cmp pushf dec or cltd cmpsl scas std jne (bad) (bad) mov loopne ljmp inc dec outsb add mov jmp cmp notl pop or nop aas fldenv dec push (bad) push xchg cmp push pusha jb pop and imul cmc movsl adc sbb mov rol iret mov xchg cmpsb mov lods and dec mov and xchg cmp inc or mov (bad) in in pushf rorb push lahf mov push pop repnz mov push push imul add and inc jbe mov sub add pop fisub cli xor sub or xor mov insb test test hlt jne dec daa (bad) mov xchg inc enter aas jmp mov pop mov adc push pop mov stc jnp fs or adc loopne mov imul jns xchg addr16 or mov outsb (bad) jns push int lods mov dec xchg (bad) icebp sbb pop sti xlat insb mov lods imul imul call addl rclb jle inc sti mov adc push inc jns movsl lea jge push dec pop push loopne repnz sbb in lea add test dec push pushf jne mov ja pop mov outsb xlat outsb loope add pop inc lea mov das nop pop fcomps inc stc mov cmp sub adc and mov stc cltd inc sub jbe add pusha lock adc fildl addr16 push loopne inc xchg dec insl je aaa and pop orl adc daa dec inc popa add xor push push mov cmp loope enter jns mov enter cmp stos dec (bad) movsl sbb mov stc fs (bad) or sub in dec gs das cli ficomp test inc notl pop into imul mov out xchg aas ds adc andl mov mov (bad) out xchg or mov jle push es jle xor adc mov fs je adc mov int andl fnstsw fidivr repnz or jmp daa cmp pop pop jp xchg jb pop jl pop mull inc insl cmp lahf pop lock popa xor push mov (bad) iret pop and and add jmp (bad) sbb mov or data16 test lds xchg popf (bad) jmp mov lods js fildl mov cmp les mov out jmp cmp subb pop mov mov jp xor (bad) repnz (bad) (bad) call push xchg jg dec and in adc aas and (bad) pop xchg sbb cld sbb mov add pop and inc mov pop or pop pushf jmp (bad) sbb mov push sub sbb (bad) in test mov adc gs je cmpsb push cld adc movb mov int and dec stos cmp out mov es out mov aaa mov xchg pop roll in push cwtl and push mov repnz pop cmp test popa (bad) sbb push inc xor loopne sbb lret test mov and add mov mov inc in hlt (bad) scas add pop leave movsb test xchg pusha jb push out insl mov mov add mov popa pop ja fistpl xor loope add int push iret addr16 xor pop pmaddwd icebp pop jno mov in lods mov pop dec xlat outsl mov mov mov pop fisttpl mov sbb fnstenv mov insb pop dec lea adc xor mov rcrb arpl enter popf call outsl xchg hlt sub scas jmp lods ficoml movl loop rcrb popf mov sti mov add fdivrl sub scas sbb pop sbb lret ret push jae inc fwait pop pop and adc in cmc sbb mov xchg sub repz xchg adc push (bad) pop cli sahf jge fimul int3 adc insl mov imul xor fs jns roll sub iret clc mov lods dec rolb je mov pop sbb xor cmpsl add les xchg fwait mov xor movsb cld dec dec xor mov iret dec add pop adc out mov lea push xchg push inc add sarb pop (bad) mov outsl mov cmp jo es outsl repnz cmp xor pop inc dec jae xchg sub mov add mov mov and (bad) lret leave pop dec data16 test outsl les pop pop mov stc out lcall aad dec jecxz xchg add lods inc icebp mov in cmc inc sbb and ja jp cltd fstl jg,pn push jge pop inc push adc mov dec inc mov into sar ret xlat pop (bad) insl add dec sti jnp lock jmp sbb (bad) scas cld mov lods add mov mov fisttpll adc fistpll xor mulb ja outsb mov adc scas adc bound lea and xchg push (bad) xor rcrl jnp push jae xor and pop shrb sbb stos aaa push mov dec fsubrs andl outsl xor lea daa adc jp jmp andl imul lret shlb out pusha (bad) adc inc xlat mov xchg pop jbe unpckhps jne fmul repnz (bad) lcall scas ret xor sahf je mov or jb sbb ss daa jp dec sub xlat addl mov addl mov jns dec leave imul xor insb sbbl test movsb pop sbb mov mov js sub dec dec xchg aam lods xchg int3 pop pop inc mov xor (bad) jnp mov lods inc xor jne jne xor sbb sub into or (bad) jbe inc aad pop ljmp sbb mov xor enter mov xor cmc mov and sub out ljmp cld pop pushf push dec mov subb addr16 jb popa inc xchg (bad) sbb jbe fiadd pop int3 pop stos jg pop xchg xchg mov push pop cwtl or outsl adc xchg ds cld pop rcrl jb lds je push mov adc push lcall lods push xchg test mov add (bad) pop jg push mov aas jne jl add and fistl pusha aaa lea xchg and mov adc test rcll dec jns cmpsl jb mov add (bad) loop mov cltd mov mov lods cltd dec xor jecxz fwait lods popf dec popa scas es rcrb mov push ss xchg ret scas mov aad jne popa imul adc push in sbb lcall insb daa jmp inc movsb and je ret (bad) cmp add pop push loop mov sarb xor (bad) hlt enter jo sarl adc fbstp cli rcrl sarb xchg sbb push adc les xor pop pop mov xchg gs or js cld xor fwait pop fimull xchg inc mov cmpsb cli jne test addr16 sar and xor mov lret les (bad) into pop jl or add aad xchg sbb inc aaa and or cli mov and mov sbb arpl dec cmp shlb add inc mov adcl scas cmp push jp pop loopne push clc aaa sbb stc mov mov in mov xchg sub push fimull xchg xchg (bad) dec loopne xchg imul jb es (bad) pop int3 mov sbb bound (bad) sarb mov jo ret out jl fwait out sahf lahf ret pop xchg cmp int dec out je pop sub dec pop mov mov mov lret mov inc pushf cltd inc push xchg adcl iret pop stos incb shrl les sbb add pop arpl cmp lahf jne enter mov in inc jl outsl sbb adc (bad) leave orl push or dec fdivrs or and mov movsb adc adcb sbb (bad) lea pop sbb or mov lahf add call xlat push (bad) in fcoms push je testl inc mov xchg (bad) push popa xchg dec pop stc scas cltd push mov stc inc fwait mov int cld cld add xchg xchg or push cmp (bad) fldcw cld es icebp (bad) data16 int3 add xor add cmpsl enter insb insb popf pop fbld adc push lods push mov mov dec ja es out inc push jo (bad) mov in loopne inc fmul pop cld push jle push xchg jae push repnz cmp inc adc add aas adc jle xor out push out jbe fidivr testb sub outsb int push sar sbb loope pop jge cmpsb loope js pop dec mov push mov push sub imul inc mov into test xchg (bad) mov or mov push and add mov cs (bad) bound sti pop xchg loop dec out stos cs cltd dec pusha jmp xchg aaa or sub bound inc cld aaa push add and jl imul orl or and mov adc lret pop and hlt nop cmpsl cmpsb fstpt sahf xchg repz or push fstpt jge lcall lahf sarl outsl push and lock sbb into stos daa aad repz dec out xor sbb cli stc adc adc jecxz inc mov cmp in mov cmp (bad) popf mov std out and add test out fbld adc call push test sub xor xlat mov dec lock sub pop jge mov xor pushf or inc das push mov sbb mov les jle loopne mov nop jge inc iret push dec jae inc add add inc mov jmp imul scas mov sub push rorl xor test daa dec int (bad) mov xchg lods daa mov push lret enter dec or cmp inc fistl pushf cmp push fwait mov (bad) xchg lock push or jle daa and sub cmp out pushf psubusw xor icebp push sub jecxz jne in cmp daa es stos push cmp add outsb mov or push cmp notl or or nop fstl (bad) jmp add xchg push xchg pusha lret jmp repnz aam fadds mov cmp add xchg adc adc ret push popf stos and add xchg push in movsb mov outsb icebp dec dec jno imul inc pop iret sbb push cmpsl loop inc int scas lea fs xchg sbb popa jecxz in push pop or add push mov loop inc xchg mov lea lods notl sub daa pop rcrb fldenv mov push and popf and std fstl (bad) xchg add push sub adc dec fs pop out mov jp mov xor jmp xchg pop xor repnz or sbb pop and inc int3 aas hlt mov or mov test adc icebp in das sub or scas mov xchg shrb daa pop xor cmp xchg cs push into sub int call rorb dec (bad) push and adc out mov mov iret lcall mov pusha mov jmp int3 roll out dec push rorl mov adc or cmp mov adc mov cltd lock or or mov and or inc insb (bad) (bad) sub es inc movsb pop sub int3 adc cmpsl adcb repnz (bad) add jge pop pop jb sahf pusha inc pushf lds push (bad) or pop xor pop leave test aas xchg icebp fs insl pop sbb and adc mov pop sub and fisttpl xchg (bad) push push push dec loopne dec jns mov or aam add push xor (bad) jns mov in xchg jbe mov loopne nop les sub stos enter pop mov enter stos sahf add sub les lods adc xor cmpsb sub push aaa push sbb dec loop insb (bad) (bad) mov sub pushf inc (bad) xchg sti fistl lea fist pop pop aam sbb or or and bound or mov test aaa cmp adc stc in in mov cmp adc mov pop push out push hlt into sbb jle (bad) into dec inc xchg jae (bad) bnd xchg dec outsb ret incb xchg mov lcall rclb pop pop push xchg pushf insl cltd pop or in push pop jle sbb insl sti mov dec test pop mov or in xchg pop mov in lret and jecxz sbb lcall mov xchg ret jmp dec sbb (bad) jo sbb mov add xchg mov ljmp rorb sbb cltd mov inc xor cmp inc mov sbbb rcrb std adc push inc loopne (bad) in sub fldz imul jmp fcompl sbb sahf ss lods add notb xchg pop clc arpl fsubrs pop shll adc or mov les ja mov popf aas call or into mov adc adc sub nop push daa sub jne mov (bad) pop lds jmp mov push daa sbb aad fwait ror xchg mov xchg push ret mov mov es xchg sub mov sarb fstpl jns ja inc imul add mov pmaddwd mov sahf (bad) (bad) enter xchg mov push and push push xor or push into xchg cs add xchg jbe (bad) imul je xlat sbb dec mov xor xor xor mov add addr16 mov add mov aam jp pushf mov add xor pop insl popf rorl sub stos sbb dec lock scas hlt inc and pop xchg outsl in mov dec inc jno pop stc sti nop stc lcall mov pop jb pop shrl test fsubrl inc shlb sarb sbb mov jmp jecxz (bad) (bad) inc out pop add popf mov jle loop aad cmpsl orl sub cmp fisttpl (bad) cltd inc out add sub adc push xor cmp aas clc (bad) rorl mov push push xchg outsl mov mov xor fdivp xchg xchg mov mov das ret repnz sub mov adc aad bound sbb and test test and or lds ficom jecxz mov pushl stos jnp ja add jge mov xchg add out cvtps2pd mov movsb sbb loop (bad) mov cmp std xchg ja xchg dec push in cmc push orl test xor or xchg faddl mov pushf dec std inc ret (bad) fst push test lods pop notb lds jns adc cmpsb adc pop lock (bad) and frstor int3 cmp add adc stc pop sti add sub lahf xor and stos mov aas subl mov mov fnsave pushf mov or xchg int3 xor popa push imul rolb mov pushf pusha std xchg int3 push in pop pop xlat (bad) addr16 lods jmp int3 test push call sbb and into mov adc push mov negb push and scas xor jg in mov push cwtl and jl mov xor and jae out dec aaa jae or rorb in cmp pop stos push movsb ret lods outsl lret fbstp adc scas inc jne nop lods jecxz fldenv pop add mov jno adc fs xorl sub mov ret jne fld or or sbb xor nop leave ja in mov add (bad) adc inc pcmpeqb and (bad) lcall js mov or lahf js lea cli and pop daa and (bad) int outsl or xchg mov mov inc stc repz add fistp les lds (bad) loope int3 repz ljmp (bad) insl jl (bad) and out ja loopne cwtl fist mov push icebp repz adc push outsl push sbb jecxz jle xchg mov fidiv fs mov add dec cs cbtw out add cmp sahf rol pusha (bad) daa loop sub inc pop mov movsb ret orb enter adc mov int3 and jns fs adcl or cmp mov push int3 xchg and mov push sti jecxz mov ljmp stos (bad) nop adc dec fldcw or dec mov outsl mov sub push lret push xor subl dec inc jbe inc stos dec adcb pop repz (bad) dec mov xor sar or mov xchg out arpl stos sbb sub sbb add (bad) cmp cltd adc cmp mov cmp stos fcmovnb imul mov out push mov rcr test aaa sahf jo daa dec xor cmp lea mov nop lea repz lret mov mov sub pushf mov dec pop push movsb push pop shrb (bad) ret mov fstl divb stos mov push mov repz cmp mov pop mov call ss addr16 iret in sti sbb jns orl mov das pop mov mov lret lcall mov cs pop cwtl gs add adc push (bad) mov and xchg and rorl dec jle mov loop jl jle jns jo cld loope mov xchg outsb cld je aas scas stc xchg push adc sbb in repz (bad) jne movsl or sbb mov push or xor hlt fsubrl fildll inc int3 test inc pop adc dec inc sub mov cltd je aam add inc (bad) pusha and pop dec repz fisttpll stos int3 rcrb int mov xchg ja dec icebp mov inc iret and std mov dec adc lods out test push cli decl fs das inc sbb dec scas sahf jbe xchg cmp in iret jmp ret mov push mov xchg (bad) fwait repnz and mov cltd popf scas dec test test popf xchg push divb sub jb mov sbb jns push inc in dec mov inc xchg jbe mov pop xor mov aaa int3 push adc cwtl dec loope inc fistp xchg sbb pushf pop popf mov addl inc cmp bound sbb mov test (bad) out scas lods mov push dec push push mov pushf int3 les sub inc out adc int3 (bad) mov lret jo aas das imul jecxz xor dec cmc jmp and std sahf ret pop and addr16 fcmovu sete gs inc jbe sbb mov shlb sbb fsubs jecxz push ss (bad) mov and iret or divl ret inc fs in inc nop cmp movsb add cwtl jno jns mov andb imul xor xor add sub ret sarb push xor and mov mov pop int3 jecxz leave fdivrs xor andl pop hlt adc jl (bad) je sbb int cmpl (bad) fsubl xchg jo insl aam push je ja cltd lods jle pop pop inc insl push loopne push fisubrl push lods sbb or rorl xchg inc push stos fnstcw outsb pop jns xchg icebp inc dec dec aam mov mov loop pop mov icebp aam and cltd xor cmc bnd inc jl je cmp add stos cmp shll rcll mov mov sub mov or xchg clc mov divb cli mov (bad) arpl scas and (bad) jo mov addl cltd (bad) sbb jmp adc mov jnp inc in (bad) dec mov psubusw out xchg dec push mov adc ljmp pop cmpsl dec cmp adc ret mov scas jns xor pop adc int3 adc and into aas sbbl xchg pop enter gs dec sub fs out rorl loop in inc aas sub jecxz shll cmp lods and sub movsl out mov push dec repz movsl mov xor add mov mov sti int das mov shrl shlb lret inc cmpsl pop and fidivrl std jnp fcoml xor iret dec mov jns jl (bad) int mov std decb push dec push popa pop mov xchg and inc mov pop movb xchg jb int cmpsb lock add mov rcrb mov (bad) jne xchg mov push stc pop mov negl xchg mov push ret xchg inc pop xchg cltd or jecxz mov jo sbb xchg mov lahf sub add xchg add pop and xchg das pop div test repnz popa dec popa rcrl dec and hlt cltd cmc adc mov xor and adc fnstsw xchg lods push popa xor idivl mov in add (bad) sbb arpl xchg push insl mov sbb (bad) fisttpl cmp lods adc sub jmp mov jno xchg cs stos nop jb xchg jbe jecxz and cmp out clc rorb call arpl sbb xchg cmpsl outsl out jl add mov lret and pop jl cwtl push or pop arpl icebp or popa xor mov sub sbb enter push sahf shl cmpl icebp sahf cmpsb jne xchg incb fcompl das mov pusha scas or icebp and pop xchg xor ret dec lds shrb out leave push inc xor sub mov push sub ret pop mov pushf test pop iret sbbb sub jbe adc ss cmpb sub xor shlb iret and loope fdiv sub cld xchg push jno pop xchg cmpsb mov leave lcall mov and das and mov fwait enter pop pop jmp xchg daa or leave ret mov xor cltd cmp lods xor je lods cmpsb dec popa cmpsb add dec int add mov cs pushl push (bad) scas sbb scas (bad) push adc mov int3 mov push push bound xor (bad) ja rcrl hlt push insl ja into test or jne dec xor cmp or push repz pop mov ljmpw fsubrl mov push iret add pop xchg imul and and xchg pop into andl lcall mov mov repnz mov push mov movsl jnp fwait je fwait cs call movsw push movsl xor jmp (bad) jmp jae pop jae xchg cmp adc or cwtl (bad) out or mov sub adc (bad) pop sub sub cmp aad pop popf dec fmull int3 popa in xchg and jl xchg or cmpsl xchg enter sahf push xor scas pop push movsl jg ds mov add cmpsb bound test imul inc pop xor mov into push test or in inc mov inc pop sub adc add cmp add jb das sub inc test test sub imul popa mov xor (bad) lahf push out xchg es fsubs mov mov jmp pop fdivrl (bad) mov pop (bad) jae xchg push cltd sbb xchg hlt xchg xchg xchg lods inc push jge cmp sbb adc bound (bad) in pop or sub mov gs cmpsb aad push int3 jbe pop xlat pushf push push jns aas out and push xchg sub int mov pop xchg pop sub mov cmp bound test imul aas or lcall xchg jmp orl mov cmp popa test (bad) test lods lea cs popf cs mov or jae into loop lret and xlat fsubl pslld inc xor sbb and stc int mov push in adc xor push xor aad push dec fs adc pop mov imul mov enter add ret xlat clc add pop pop cmpsb mov jno pushf jb pop jp sti sbb add push or xchg mov cmp (bad) xor enter (bad) xor fdivrl shrb out sub lret arpl in das daa (bad) mov (bad) sub cltd mov push pop xor mov dec or popf cli loope in lret inc pop xchg loop addr16 inc (bad) jno sbb int shlb pop sbb cmp pushf mov or lock jle pop sub incl fisubr xor mov mov in enter mov lahf inc rclb push shr adc mov xchg incb loopne adc mov xchg (bad) or push repnz sbb xor popf or and ret lods push nop outsb xor rsqrtps nop dec pop jb add ret add shrl pop idivl stos jbe and mov xorl inc fldenv leave and loope lahf mov xchg xor push inc sti (bad) mov (bad) adc aad add cmp mov in pop out mov pop adc fbld pop orb insb in out das mov or pop incb in pop xchg lds mov pushl add add cmp loopne mov scas xor pop icebp pop out xchg push mov stc mov inc sub std cmc inc outsb ret mov imul loope aas dec mov ret scas outsl in jno lods cmpsb inc sbb push test notb popf xchg lret inc jmp int3 sahf mov inc daa xor mov (bad) dec lea dec mov pop push pop sbb inc cld push jge movsl lods (bad) push repz sub xchg xor pushf sub xchg push arpl sbb sti cmc pop xchg inc jmp adc dec mov and xchg les xor mov sub imull mov and pop push pop jmp push movhps jmp (bad) dec jns or push xchg mov nop push mov jae adc outsb push aaa jo pop andb (bad) shll cld fbstp pop dec or adc loop add in adc mov shll mov pop bound jnp and push imul scas and insl inc addr16 mov movsb mov cmpsb add aam adc add test dec das lret sahf ja das xchg mov ret inc cmp pop addr16 das iret ficom sbb push fs cmpsl jmp cmp ss jmp js cmp and mov fnstenv ret jo dec adc (bad) xchg cmp mov into inc subl push lcall repz sbb cmp cmp xor or mov inc mov int xorb cmp repz sub xlat mov lret adcb xor add push add jns sub fnstcw lock and cmpsb mov push lea test xchg fstl fucomp xchg ja pop jl loopne and sbb sti lds push or mov sub cld add aas inc xchg or lock jo jns cmp inc and mov mov lcall sub ss dec notb (bad) fldenv and into xchg outsb lcall rcll mov dec lcall popf jno mov lds mov cmp add mov dec pop sahf fsubrs xor fldcw sbb jbe loopne fldl cltd addr16 xor lds and inc (bad) jecxz data16 fyl2x push stc and gs aaa enter and mov mov inc mov cmpl or outsb repnz dec pop inc pop vpunpckhdq adc daa pop loopne lods pop into inc fsts mov test jecxz and jbe icebp jp add adc dec adc mov cmp pusha inc addr16 add ja cld mov dec mov test hlt inc mov mov sbb xchg or pusha loop mov push adc adc ss ret fbld lcall (bad) cltd rol cmpl cmp mov and stc out jo es stos ds mov inc jno cwtl arpl pop cmp dec jmp push inc lcall aaa pusha mov int add sahf mulps jecxz les scas iret add iret jg pop push push jge rorl cmpsb dec stos adcl and arpl jbe test sbb dec inc push sub dec fstpt or sub cwtd int mov mov jmp and je cld test bound popa xor mov add pop cmp mov xchg data16 xor mov push orb xchg std or pop popf pop mov negl jno jns or addl scas lock cld lods das faddl insl xor mov popf xchg aaa pushf xchg lods loop adc add mov mov leave aaa adc fimull lahf imul aaa lcall stos mov aaa insl mov adc add aaa dec outsb les (bad) and adc and fwait push jo sahf aas pop mov adc ret neg sbb leave dec notl andl adc dec test (bad) aam fldl adc movsl fldcw or (bad) jne ja aaa mov ja jmp ds adc sbb inc mov jne or mov in ljmp sub test ja movzbl xchg or call bound xchg xor movsl jmp fs mov pop pop push (bad) or inc and popa cmc nop push jle xor aas flds sub je bnd adc test mov dec je int push pushl cmp jmp iret push jnp nop cmc mov pop jne ljmp fs insl das dec jmp sub push and xor xor (bad) jg dec or daa push outsl out mov test pop mov pop rclb js idivb adc push dec jns aaa and outsl mov dec and add xor jne push pop mov sbb cwtl pop popf pop ss pop push dec pop jg das stc fwait movsb xchg xchg inc mov movsb inc sbb out jle sub push pushf cltd dec inc stos cs outsb cmp push push sub out push jl or and xor mov pop es pop nop or pushf push inc pop jae sub xchg cmp cmp jge jge cmp in xchg std sahf mov adc gs (bad) (bad) push (bad) lcall cmp dec in jge (bad) inc inc cmp xchg sub gs adc pop jl rolb or xchg inc push jb addl pushf fcoml ret inc push xor sub cmp nop sub push cmp cmp jnp cltd sub pop sbbb dec loope dec sub bound pop push and es pushf push das aad jae movsl add sbb add popl xchg add pop dec add fsubrl dec adc dec data16 loopne je inc mov pop inc sub inc ret in push mov aam ss insb add xor jbe cli and xchg jae cmp (bad) push mov outsb imul (bad) mov bt dec negb insl cltd sub sbb (bad) and pop loope xor fcompl sub fs sub adc and add jbe dec cld jge xor orl lea dec bound cs pop xchg dec mov and xchg hlt pop jo sbb imul insb push sub dec sub cmp xor fcomi in addl dec jbe aas lds jl sti ret out dec sub outsb cmp scas jp aaa xchg pop lods inc ror xor jmp xor testl pop xchg add push add stos iret loopne xchg dec sub jmp dec mov xor das mov push cmp jecxz add or cli cltd arpl jle or sub nop xchg and inc aad xchg loope data16 push cwtl inc mov dec add jo cwtl inc inc outsb fcmovnu test mov loop adc pusha nop inc std stos ss (bad) jbe jp push dec and xor mov cli in inc push push add inc cwtl insb movsl sub cwtl addr16 sub push aam (bad) or or jb dec jno mov test and jbe adc and out and int3 cld cld or stc (bad) dec jl ljmp arpl push cmp or outsl fwait adc addl (bad) loop aad mov pop lcall lret stos sub out jle (bad) fstps add xor scas lock (bad) bound xor bound mov insl gs mov jno lods xor in shr inc xchg outsb scas push cltd in fwait nop jno fbld sub mov je xor push sbb adc imull test test pop (bad) (bad) jg mov imul dec icebp push adc mov inc and sbbb sahf xor jb aam jbe mov (bad) push (bad) cs mov inc push sub mov loop mov mov sub mov fwait je cmc adc fs push (bad) adc out repz cli inc adc enter lock cmc push fiadd sti outsb lock inc cwtl push sarb cmp test sbb insl sbbl jo xchg sub sub dec pusha fistpl xchg dec std in popa xor addr16 cltd cmp cmp xchg sbb cld jbe inc lret xchg mov clc pushf cli or nop das pop inc inc and fisubl push push std push sbb arpl outsl mov add insb in adc in mov xor sbb mov and aaa inc insl xchg ss xor cs ret jae push push add push in sub jb pop adc pop adc jne adc or add sub xor xchg push mov scas ds es mov jns jae sub push inc adc int3 inc jmp cmp cmp dec jge sub push aaa sbb pop and insl or xchg adc dec js rclb dec adc pop iret shll mov push sbbb inc mov addr16 dec jae xchg std (bad) sbb scas and jl sub and fs idivl ficomp cmp test popa daa pop lock daa dec jo adc push push (bad) ss sub cmp push fsubr rcrl arpl subl cmp xchg dec mov mov inc dec mov hlt pop cmp cmp roll jbe xor push cwtl sbb lea (bad) ffree inc jge pop inc mov xor and pop jg and push dec dec addr16 call xchg lcall push pop push sub mov mov xor cmp outsl or xor inc in adc cmp and pop jbe test dec jb or add ficom (bad) aad sbbl out (bad) out dec jmp pop jno or adc in adc sub xchg jno xchg sub leave jbe sbb inc cwtl jecxz loop (bad) mov pusha mov fdivrp movsb pop sbb dec and mov (bad) jge sub sbb repnz out fcmove mov lret and int (bad) push dec cmp or dec (bad) popf cmc (bad) mov jp daa sarb lcall aas daa sub aaa lret inc jecxz push idivb adc std mov int3 outsl or dec outsl adc fdiv adc rcrl mov pop push lods stos xchg loop lods (bad) (bad) scas mov jle (bad) lock mov xchg mov xor nop mov decb or leave loop lods int dec scas rcr or (bad) lock sahf test push cltd fsubrp ljmp ret lods mov call repz std (bad) mov icebp mov mov mov xchg clc mov movsl pusha add mov adc movsl mov inc xchg je dec cmp jmp or push sahf inc add ret dec cmp push das jg fnsave ljmp pop push sub js and push insb sub inc jo inc lock sub daa dec mov outsb pcmpeqb and xchg ret fild xor push lods cmpsb repnz mov xchg jge cli ret std das cld test hlt xchg pop push popf addr16 std cmp xor dec in push and inc jno push dec pop test aaa das sbb aaa mov fsubrs inc sahf addr16 inc rcll sub decl arpl dec out mov shlb sub cmpl stos call cmp mov orl dec aaa ret mov sub inc stos push cs test add pop fs pop push dec push (bad) es inc dec pop int lea jp push push lcall sub mov sub sub out mov es inc gs or mov outsb jge inc out scas test fcompl jmp (bad) hlt pusha jl lcall fisubr fild dec ficomp xchg jbe pop jle or adc adc rcrb xor push inc xchg pusha pop out inc inc cltd and push jae pop xchg adc popf and pop adc cmp cwtl dec adc push imul fcoms fsubrl mov ja xchg xor cmc fucom testb inc or sarb mov pop mov xor lret mov pop xchg sub outsb push and dec (bad) jae fs dec and into dec sbb cmp dec lock insb sub movsl pop push pusha sbb in dec add xlat and cmp add adc and fsts dec and imul imul mov dec out mov ds out inc pop or dec jge adc fdivl jecxz mov pop sbb pop cld jge push (bad) outsl fisubrl ficom xchg xor jecxz push jnp jbe cmpsl in push insl dec xchg std popa es mov es adc loopne out nop stc lahf push push push mov pop dec mov or sub (bad) loope jl jns xchg dec mov insb or jae xor daa nop inc pop sbb sbb pop and sbb ret or fiaddl (bad) std mov fs push out add xchg mov push mov mov leave repnz push ljmp mov ror shrl dec jmp mov add sub mov adc or insl cmp sub sub cld pusha fistpll or sbb loope popa pop mov test cltd (bad) cmp sub rcll sbb out lds test xor push mov (bad) inc lods lock xchg lcall sub daa pushf nop and fadds (bad) fcomps loop cmp sbb sub xor pop sub dec fiaddl and ret sahf fldcw iret sub or inc inc xor adc adc fwait sbb push xor xchg ljmp and pop clc in outsb and jne cmp xor xor xchg jp dec mov pop and in cmp push jae mov or inc xchg dec ss fdivrs inc rclb dec pop inc xchg jb lods cs bound sbb mov das ds roll sub cmpsb rcrb scas sbb pop icebp fstpt sbb rcrl pop clc push daa dec jb (bad) movsb adc xor cli jl fwait jns lds jl dec fimul push xchg cmp push lahf repnz xor (bad) or xchg call and outsl push jge mov or bound inc push pop push (bad) cmp sub fisubr inc mov lods jl mov (bad) fildll aas data16 or (bad) jb cmp sti push cmp dec lahf or xchg cmp pop pop in push inc lea nop arpl cbtw mov sub inc jb mov xchg lds scas scas dec sub and test popa xor pushf push mov aaa icebp in sbb incb jl push lea xchg sbb sbbb sahf push stc jo sub mov pusha mov data16 dec addr16 cmp scas dec pop pop insl out scas (bad) inc push ret push lea xchg push popf cld xor add fs fadd xchg pusha cmp inc dec imul cmp push sbb ficom jecxz incl or jecxz dec mov call int ror push pop and dec stc mov decl xchg insw push popa pusha or leave shll inc push sub push das push xor shlb pop jo push dec aas xchg xor fbstp (bad) bound mov lcall cmpsb sbb (bad) jns fisub imul mov sbb jo test stos in fdivl sbb push fcoml mov fwait cmp sbb mov sub pushl jecxz loopne (bad) sti lea ret sahf and and movsb mov jo push sti and inc add sub addr16 rcrb clc sub gs and mov in push push popf xchg cmp in sbb fistp or and leave xchg adc xorl xchg bound mov test or ret cmp jnp jns inc or cs mov push imul test jbe cmp pop or aas dec (bad) push sub jnp dec xlat dec sub imul add jecxz add ror jg xorb ljmp and or fwait aad push cs xchg imul cs xchg xchg inc imul inc xor inc scas sub mov add js cs (bad) jnp sbb ljmp fcoml sbbl sahf mov dec pop ljmp cltd loopne mov rorl std mov dec push xor sbbl into into jae and sbb add inc (bad) int3 or loop leave push lea (bad) lea lea add push sbb cmpsl sub movsl or sub push xor outsl icebp push xchg cs dec (bad) and in mov dec mov sub pushf jle stc mov adc xchg xor push sub pop and jge sub xor mov sahf ljmp xchg outsl push xchg lret xchg xchg pop les lock and cltd cmovb js cmp dec sub out pop and sbbl sbb fstpt xchg xor xchg push fsubl mov nop (bad) cmp xchg enter add in add fisubrl (bad) jbe mov test pop imul xor xchg and and int3 pushf bound stc pusha popa jo ficom push jne fcoms test inc imul inc pop add jl push insb aam fldt xchg mov xchg popf cmc adc mov es jbe sub cmp cmp sbb not das push mov icebp mulb cmp cmp sbb leave adc dec insb outsl jge fs add cmp add sbb push pop xor adc mov mov adc push mov cs stos ja mov push mov aad add les sub mov inc sti fsts or pop xchg sti ret (bad) cs cmp cmpb daa lcall add popf inc out push mov mov sbb sub jp (bad) jp inc in cs add mov adc cli inc mov insb push imul jae xchg jbe scas xor xchg mov sub popf sbb or pop sub push in inc xor inc xchg cmp or bound jns mov mov ja daa movzwl sub or (bad) and cvtps2pd (bad) jl test dec pop push cmpsb stc xchg bound push ja sbb loopne cs xor idiv and add cmpsl xor clc dec arpl es mov pushf adc dec xor pushf (bad) cmpb mov test xlat mov dec mov dec push adc ret push out dec idiv (bad) cmp jg adc lret jp rcrl push insl popa sub dec imulb cmp jnp pop xchg and jae cwtl sbb push or sbb cs adc in push ret or bound pop js inc imul les cmp xor popf data16 stc push loopne out fs sub xor arpl add enter cmp inc pop add cmp scas xchg out sbb lds adc pusha aaa ss pushf mov inc jns and cltd ja or or push mov cltd ss insl popf jbe inc mov inc mov and in jo inc xor inc mov xchg or sbb repz jne cmp mov push add js adc or inc sarb aas std jae cmp mov xchg jo sahf mov inc adc push sbb sahf dec xor or pusha roll dec fs cmc cmpsw mov push push popl xchg int3 pop or fwait (bad) xor mov pop push lahf enter push rol cli insb stc fwait cmp and adc adc outsb in test lea cmc aas xlat jmp outsl sub fidiv mov xchg (bad) stos mov pop push adc dec adc cmpsl push add imul incb iret lahf jnp lods (bad) lret dec in stos sbb outsl mov sub ffree sbb repz mov adc pop pop das xor ja aas xor inc (bad) sub lahf mov sub scas and dec mov add (bad) cmp push popa dec icebp or xchg (bad) popl dec rorb and xor xor adc rcrl xchg add jg popa jl cmp repz push and pop dec xor call cmp addr16 push jo insb mov pusha sub or popa xchg das push (bad) (bad) idivl and push inc push dec faddl push or and lock es fwait push movsl cmpsb es int cmp push pop jg adc xor enter push and xchg dec vdivpd cmp mov mov stos and fs or rolb insb (bad) call loop imul aad mov aas sbb and push sub push aaa sbb stc mov jnp loop sbb sbb fmuls cmpsl (bad) fcmove sub jg andb mov jl,pn cmp (bad) iret xorl arpl and sbb cmpsl sub aam imul push pusha fwait inc jnp inc push dec fbstp inc jle and sbb pop inc mov and cmp pop or dec je mov sub sbb (bad) paddusw push xchg pop sub sub dec cwtl popf std xchg stc mov or loop int3 xor sbb mov in jo sub inc sub cmp sbbb mov outsb lret mov adc jle fiaddl jno pop lahf jne inc and xlat inc sbb xor popa dec xchg dec loop data16 and add jg xchg add (bad) mov and sbb jle sub stos cwtl in mov loop adc inc inc or add xor jnp lock insb arpl push sub pop imul mov cmc mov rcrl inc nop lret xchg cltd rorl jbe xor inc xchg mov pop add and fs outsb jno push decl and sub jae sbb adc pop mov pop mov push mov cltd sahf xor or and mov xor jmp nop mov jmp and daa jo inc in mov inc xchg clc (bad) jno rep cmp jnp inc pop mov jb dec inc inc mov iret adc jmp lea (bad) mov rolb lea aas xchg xchg sbb mov sbb jp sbb lods addr16 dec lcall pop les mov nop cmp sub push lcall mov sbb jno push xor lods popf dec sbb sbb or jnp dec mov inc and test fsts fiaddl mov pop neg add adc call dec lds insl (bad) out out cmpsl in or sbbl xchg stc push (bad) xchg mov inc mov (bad) sbb js icebp cmp psllw testl xor imul mov xchg call and jne es add fisttpll sbb xor inc jmp or inc sub inc das or push ja jecxz xor pop pop rclb xor cmp cmp test xchg xchg out stos sbb lods fsubrp inc shll sub decl icebp lds cmp adc jno sbb shr push popf outsb push iret xchg pop xchg les fdivrl xlat inc or mov inc stos cmc or or ja,pn je movsl call stos sub loop js add fstpl pop xchg adc jl sub push xchg or xor sub xor decl push adc mov sub scas fsubl js stos clc add scas aad pop scas xchg pop lahf lret xlat in pop inc lock jne xlat jecxz,pn jmp rolb dec mov cld shll add push popl or cmp test aad out xchg sbb cmp or jmp movsl jno mov and in loop sbbl fadds es out inc icebp jecxz add cmc pop push inc ret (bad) hlt xchg je in mov push (bad) jb jne inc imul lods ret mov movl int jo (bad) popa cmp lock push imul aad mov sahf in sbb push push rcr cli sti cltd sbb pusha jmp push pop lods addb sub fs popf push pusha cmp (bad) arpl out mov das dec dec cmp fs popf jp xor inc mov dec aaa xchg into or jecxz scas push and scas sub cli inc jmp jge push jge sub xor cs iret lcall insb inc mov push push outsl push and cld in popa movsl fs add mov xchg jge and add pop xor xchg or push jb sahf cmp fs inc fldt cmp out jl add adc mov cmp aad fldenv (bad) insl std imul fwait dec jns inc push add mov add ljmp rcrb insl or xor push fistl push push sti bound xor sbb inc xor jecxz add popa ficompl inc idivl (bad) cld inc aas inc movsl xchg mov mov mov rdtsc das mov lret push sub int xchg shrb xchg popf clts sub dec push cmp fnsave xor sub xor dec mov insl js adc inc lret jb xor es pop sub adc jg dec bnd fwait sub jbe (bad) mov sub idivl or and inc sub fistp xor std lret mov xchg bound rep mov fisttp int insl lock xchg es push iret push sub xchg lods ljmp or (bad) in mov xchg xlat cld jns inc and dec dec cmp mov stos out cmc jecxz orl jle inc loop cmpsb sahf dec adc mov fnstsw fcomps dec loop in or aam xchg subl mov mov cmpb sub cmp movsl push and lcall pushf lcall pop cli jge imul mov (bad) (bad) dec outsb adc in cltd cltd pop cwtl lcall lds repnz in sbb fsubrl or inc jns ja jecxz pop xchg push mov sbb stos mov fwait pop sub cmpsb insl cli xlat adc hlt and test addb insb pop xor mov leave push xchg mov pop jecxz push push mov inc mov sbb cwtl ret xor pop outsl pop xchg into pop mov data16 inc je xchg cmp inc sub inc pushf aam mov and or push pusha push fs ljmp outsl sbb pop daa push mov das sub push xchg cmp adc dec push push cmp sub sbb xor jo imul adc adc mov lods mov js rorl inc or negl stc sbb dec xor outsb std repnz fcomps sub outsl adcl jmp mov es mov jo add push rorl sbb adc in aam shrl adc inc xchg nop (bad) mov loop mov faddp out adc sub insb jae push adc mov lods sarb jne mov jmp push mov push mov ja pusha sbb loop decl das dec cli push xchg or cmp sub sbb jp jecxz add leave push punpckhbw scas int3 hlt jno pop pop sub mov push cmp aaa dec pop loop addr16 cs aaa add lret inc cmpsl ja dec adc cwtl jbe fisubl mov xchg (bad) inc test push push xchg and daa loopne sbb xlat imul int jno dec jp push pop and arpl sbb roll add push addr16 push or lods sbb movsl daa pusha int lcall lods and loop,pn mov loop or xor (bad) push cwtl jae es (bad) sahf std into inc xchg lods xor enter std ds pextrw imul test mov fwait dec push pushf push fwait pop js add (bad) jle pop pop mov dec out shlb mov (bad) add and ficoml je (bad) lea mov insb or lret js js sub add mov incb loope es pop xchg sbb sub test lods inc mov cltd push ja cmp sub push cld dec mov sbb insb out mov ret xchg (bad) mov sbb push jne add sahf sub out mov pop inc mov jb mov (bad) and imul (bad) repnz decb mov xchg mov or (bad) sub bound in mov mov xor mov xchg pop ljmp insb pop insb xchg (bad) mov mov cwtl scas mov adc shl and add lret jo inc add cmp or aas shrl fwait add mul cmp xchg cmp sbb or pop push cs push dec push dec sbb mov in xor fwait pusha adc mov xor mov or add pop push add cmp inc test out test dec (bad) sahf push lret call pop xor shll popa sub sbb add adc push ja dec cmp mov dec adc bound xchg (bad) clc push scas in cld outsb sarl (bad) push jmp in pop nop (bad) push lea or inc pushf into cmp scas push adc lahf lods fimul subl dec cmpsb cwtl add xor ja jo popa fcmovu call cli les xor into mov loop xchg push dec push pop dec arpl mov push mov mov inc or sub pop sbb int int sub lock jmp stos adc shl (bad) fimul fs jbe leave or mov push andl test sahf in sub aas rcrb push imul jae push push ja mov xchg push pop cwtl cwtl mov add jmp loopne (bad) push push push jae push pop mov loope cmp rclb adc imul nop sub imul cwtl cwtl fdivrp pop pop test es xchg dec js xor bnd mov outsb dec les inc xor sub push mov (bad) shrb dec pusha cmc hlt loopne or mov loope lret push push add xor sub fnsave inc mov mov and sbb mov sub xchg js in adcl jp pop sub jge and push mov push or sub insb (bad) movsb adc push and cltd jb gs daa cltd stos or sub jns movsl dec pop (bad) out add test sbb mov push scas mov leave jl pushf jne cmp push or pop nop push jno xlat cwtl push pushf sub jne int3 in sub jns fs nop (bad) sub loopne mov sub call (bad) and stos jle sub outsb sub mov mov dec ja imul add push ss es and xchg cmpl cld push (bad) inc and ret push lea dec jne fdivrl inc test jecxz sbb fiaddl fisttpll push sub sub fs mov sub dec pop sub adc mov pushf cmp sbb fs push adc out push insb fs adc test sahf mov (bad) movsb fs fs stos mov push adc mov or iret insl mov pop adc pop pop test fwait (bad) (bad) push leave lret ficoml aam inc xor loope adc cmp test sub inc and add adc add jle into push test rclb mov push push sub (bad) dec dec lea mov daa sub shrb add sub insb outsl cmp sub cmc mov xor pop pop xor xchg ret jp pop or fcompl cld cwtl pop rolb pop loop loopne cmp ljmp shlb mov sub dec enter inc pop inc xor arpl add nop mov mov in sbb sub xor fsubr jle mov inc stc insl inc ret sub sbb shrl cmpsb mov fcoms jge cmpsb outsb mov xor jg lret pop mov jno fsubl dec stos mov enter fcomi scas xor dec into jnp sub (bad) sar mov hlt jno mov rclb leave xlat dec jne and adc lahf sub data16 (bad) aad inc pushf (bad) push mov inc push fnsave leave cwtl std std mov mov jg mov sahf pop cmp cmp aam loop cmp test jecxz and pop and push jns sar ss dec sbb pop and ds mov clc mov cmpsb dec push dec push enter inc (bad) rcrl stos dec das enter sub sbb jb loopne sub lds mov add mov movsb cs fsubrs ficompl xor js xlat xchg fndisi(8087 jne xor mov gs xchg jge loop sbb call add bound mov xchg shl push inc fsubs or or sub lahf lret (bad) mov ljmp mov lcall lods out or (bad) aaa pop cmpsl dec cmp movsl inc mov nop scas sub rorl mov mov (bad) lahf xor stos les mov popf mov inc or xchg fs push inc or bound insl (bad) fstps push xor addl rcrb aam sub mov pop jbe and cmp mov lods xchg scas arpl jge pop in mov enter mov pop pop and inc ret xchg xchg mov gs gs adc sbb inc leave jl inc pushf js (bad) fiadd add (bad) test dec inc ljmp inc gs mov loopne and aas jb rcrb adc rorb lock pushf iret pop in inc test dec fsts out stos xchg push out sub ret dec adc in mov sub sub or sahf lcall xor pushf mov mov jno mov lcall int dec mov sub and sub xchg cmp adc xchg jg mov mov stc test enter inc add mov lret inc or mov clc jbe aas mov cmp push rorb sbb repz std movsb sbb test sbb mov dec shll adc pop lcall or push or iret (bad) mov add xor pop sub repnz mov mov jl mov and insb sbbl mov push (bad) xor jl loopne je sbb push jnp test cli jnp nop adc dec aaa sub std out dec insb pop pop pop in shlb push cmp sbb lock clc push addr16 pop insb clc pushf clc out (bad) and ret xor push out jae jecxz jp daa xchg sub or rcrl lods adc xor adc sahf jno push aaa add stc jl push ja or mov push loopne or scas flds push movb jo sub lret rclb and and movsl (bad) out and xor call or mov out cld fwait adc dec cmp or js add rorb mov pushf (bad) mov sbb in push pop sub xchg sub sbb and and outsb dec xchg fsubrs out sub sub xor pusha jb xchg lret sbb pop or fisttpl jmp nop jge sub aas (bad) cs xchg loopne mov test pop dec pop test xchg stos xchg push jns push push ja fs shll pop jl addr16 aaa cmp bound in ret xor xchg sub mov xchg pop mov gs xlat mov xor jecxz mov push push add adc outsb fdiv push pop adc sbb outsb dec dec fsubl xor (bad) insb mov loope xor nop mov mov (bad) (bad) fidivr js push orl in and sbb mov fs pushf mov jecxz test jns sub fwait sbb (bad) (bad) int3 insb cld sub mov xor add (bad) call sarb fsubrs out or sti sub add jb int3 cld cld fist and inc add lea xchg fs push push in in xchg or or into shlb push sub adc xchg les dec mov gs (bad) test xor or ja dec fldcw and pusha faddl pusha fdivl add jle rcrb xor sub pushf (bad) (bad) jnp (bad) inc adc sub inc xchg inc xor mov fidiv or sbb sti mov dec mov mov sub je adc fcoms cmpsl add mov jle lods inc jno push pop ss cmp scas push xchg mov push xchg pop int aas loop stc push cmp push sbb negl sbb push sub (bad) hlt in mov mov cmp inc xchg jp insl sbb pop xor inc lcall pop adc outsl bound mov shr push cmp cwtl call inc or lds pop pushf push sub enter or and pop xlat adc das push push xor dec sbb aaa arpl and jne push sub lea push shlb in sub inc in js mov push les push js add pusha xchg out jecxz mov pop not or pop in dec jle xorl xchg push in ss scas add add test imul stos xchg out mov push xor scas or adc mov in loop inc sbb test or sbb dec (bad) pushf das rcr cmp dec ret pushf sbb jo jno clc inc and xor pop cmp mov cmp pop inc movsb (bad) and push and cwtl mov lods inc testl sti frstor inc adc lods data16 xchg (bad) adc outsl sub or sub mov jmp dec jmp sbb in fs jg mov jnp and add and ss (bad) out (bad) xor mov cmp in icebp outsb inc sub mov push ja movsb sub add les xchg pop aam ljmp jo std lret dec and cmpsb pop sbb ss movsl pop sar cmp mov sub (bad) mov or cmp mov xor xor sub arpl fldcw jg add inc dec mov mov xor sbb stos ds xchg popf pop es clc push push mov pop mov mov mov cs push push stc gs repz adc or addl xchg mov xor inc jle inc pop popa pop cwtl and xchg cmpsb dec stc lcall ja push (bad) sub imul rorb scas jmp xor fisttpll jb into sbb mov xor insb mov mov stos jo mov add cmp push push xchg (bad) push je xchg cwtl out adc fnstenv (bad) lret sub test imul xchg aam out sub jge adc and jb bound dec add xor call pop xchg dec or std fwait outsb push js adc ja jmp cmc addl adc sbb mov pop sub mov js pop push jo mov add lahf lods (bad) pop lods or mov pop cmp insl fsubl xchg in sbb stos inc jl jle arpl push xchg xor cmp pop (bad) cmp sub and jmp mov lret bound hlt dec repnz mov pop add push in mov xor addr16 dec sub dec pop in and dec add inc mov mov jecxz inc inc (bad) push xchg js pop xchg bound das repz inc shrb xchg mov pop xchg pushf pop ret inc or in sub mov decl sub in outsl mov jmp push and xchg sub movsb or cmp xchg add mov inc dec movsb jmp icebp push xchg push mov lock xor add je push dec pop aaa pusha sarb rclb push cmpb hlt pushf dec addb and into mov call leave rcrl js test push cmp jno pop fidivl dec push pop out or dec pop ja clc sub pmullw cmp cmp sbb mov in and mov xchg lods jb out xchg xor fisub sbb pop sub int3 push push nop out jae add arpl push outsb and pop mov or sub movsl addr16 or dec (bad) mov sub sub stos frstor nop lret aam push pop movsl popa jae data16 and loope and fisub movb cs ror pop mov arpl mov mov adc fild out subl cmc cmp push adc sahf sub jp cmp inc arpl jne int3 ss jno jnp add aas cmp or cld fcmovne loop popa fdivrs mov jmp (bad) (bad) mov daa imul fiadd fadd outsb add dec jmp add cmc pop mov sbb push mov mov movsb add stos in adc lock add xor adc push sarb stos ss (bad) fcompl popf mov push (bad) jecxz sbbl jo fsub jae cmpsb adc nop addr16 mov and sub dec lods jne into cs fidivl pop shll xchg test pop xor push dec popa lods pop and and fmuls jns xchg jo xlat add xor mov pusha bound push popa pop ss and xor (bad) add pusha push cltd pop scas fs bswap push add xor adc inc pop pop xchg (bad) stc push adc dec adc adc dec aad sbb sub push clc pop sub and mov imul lock fldcw mov lods ljmp adc mov xor and adc fistpl xchg push imul push in jo stc pusha pop (bad) sbbl mov and pop inc rcrb gs sub xchg (bad) fmul push xchg bound (bad) jg mov stc sahf add mov fstpt (bad) push (bad) and pop leave xchg xor test mov add add (bad) std fld call mov int xor pop pop lock ljmp sub jmp adc (bad) inc jg leave jo mov in add add adc loop popa pop or pop fisubrl adc add xchg clc xlat jle cmc nop aaa push cli lahf mov push push outsl jmp outsb aaa cmp faddl daa jb xchg dec sub inc outsb sub mov push adc cmp inc int incl push add cmp adc (bad) ljmp (bad) push dec fbld clc jg jbe xor sbb xchg jmp popl pop insl scas mov add stos adc scas or xor push sbbl pop insb insl jo sbb pop add push je pop sub call jmp adc sub es pop mov mov aam dec in popa pop lea mov pop (bad) inc int3 outsb add xchg inc js lock mov push push pop adc lds or push mov xchg pop inc pop pop insl insb pop push push imul invd fs add push adc xor xor divb je fiadd mov add push inc adc scas or sbb adc push or das xor insl sbb nop sbb push outsl loope or popa in ja pop dec sub push cwtl xor pop push jge andl jbe push daa popa clc push push pusha add push notb or jecxz pop and adc cs pop and scas cmp and sbb decl fsubrl xor cmp adc add call lea push sub push mov xor xchg mov fisubrl jl dec jb fdivrs jg arpl pop cmp cli dec adc insl xor mov fisub sahf popa mov add popa cmovge popa jmp movswl insb pop pop inc fbstp gs xor jno sahf out xor (bad) fcompl dec aaa rcll mov stos adc (bad) mov mov adc inc divl xchg rcrb add pop dec js bound lret test jno and sub cwtl push clc rolb adc xchg mov pusha lahf xchg cmp inc cmp pop aad icebp mov cmp jg cmp mov (bad) int sub (bad) dec hlt clc call lahf jle enter xor daa push (bad) push pusha jnp jno push les (bad) cmp insl into push pop fs negb adc mov rorb gs add sub sbb imul lahf push lods jb scas cmp loop nop or jp fiadd xchg add jno mov pushf cmp or mov mov mov cmpsl out jg xor lods (bad) ficoml sub jle mov push pminub loop mov lea xor dec dec push cwtl add in push push add repz aaa ret jmp push adc jp jle rcrb sbb xor dec jg insl jns imul xor pop sub dec pop cwtl daa pop popfw stos mull mov nop pop xchg iret inc ss adc arpl lret and jmp mov dec les inc xor lahf lret gs jp and aaa test je xchg push mov aam add stc pushf popf or int sub clc flds in enter lea sub jl int and push loopne fistpl adc xchg imul xor inc cmp stc psrlw pop ljmp ret sbb pop lods xchg (bad) icebp sub arpl scas mov xchg mov xlat mov and or push fstpl aas sub mov jp loope fs jno push (bad) (bad) rorb pop jns data16 and sbb sub add pop mov push (bad) mov out jns fs lret push xorl ds pop enter inc inc dec ret fwait mov jecxz fildl std in pop cmp ja adc jp sahf test cld bound pushw pop out or mov pop aad shr sub mov sbb push loop lea cltd (bad) or movsl cmp sbb fwait rol mov (bad) aaa in pop enter cmp sarb or ret push rolb and inc pushf cmc int sbb jne imul dec lret inc push mov (bad) (bad) lock out test push loope jg mov pop in in cltd or out push into xor mov or gs xchg into xor xchg push or adc cld int int3 popf std push or sarb into xor sub dec fmul pop cld push es mov push in call (bad) mov pop insl es cmc dec sub lret cld push cmp rclb movsb sbb cmp cwtl mov mov out cwtl add inc and das or inc jge lock stos pop aas add dec cwtl es ljmp or outsb pop inc lret mov and sbb jbe flds jle test xlat mov frstor pop xchg in outsb mov or fwait (bad) mov jp aam cmp jecxz dec ljmp nop mov adc ret sbb jmp adc iret push cld andl nop sbbl push add adc adc stos nop adc mov movsl inc mov inc or or inc orl pop stos loop out frstor (bad) dec adc stos in pushf jbe in fisubrl pop les dec xchg pop mov mov sbb mov pusha add jno adcl cvttps2pi mov adc or mov jo dec sub insl sub imul pop xchg gs pop fwait xor xor sti (bad) stc mov mov sbb out xchg int divl push insl aam movups pop scas insb lea out sti sbb push (bad) adc or pop cmp std sub dec and xor rcl in movsb dec fstp mov lea in add sub pushw and lahf add sahf ss add mov daa in push mov sbb or add sub xor test imul adc and dec dec dec insb hlt fninit pop popa loop fldenv (bad) mov dec jmp push sbb cmp loop gs jmp insb pushf in pop pop daa xchg and or int3 addr16 and popf pop pushf js in push subl dec and mov push fs jnp or cmpl add and mov adc cmpsl in outsl jb fimull insl pop (bad) sub jp mov fldt pop xlat mov sub xchg jno sub jge jg pop cwtl dec cs push dec mov movsb sub xor fldl mov int3 test mov inc nop dec test adc mov lret jnp pop xor dec inc xchg int3 mov outsl mov xor pop push mov das sub insb lahf aaa rorl xchg pop (bad) ret das mov das jmp push stos sbb sbb (bad) sahf pop xchg xor jno call bound loope sahf push out add jo pop push push xor push pop sub insl push xor or xchg dec xchg cmp ret jmp fild mov pop mov or jo stc sub jge andps shlb or faddl popl and stos and pushf lods xor sbbl out xchg push xor mov cmpsb xorl xor movsl test xchg add dec sbb mov and sbb cmc add shl cwtl sbb or (bad) fstl push adc fmuls pushf ret mov stc push and icebp loope pop sub add fisttpll sbb (bad) hlt fnsave sbbl imul stos repnz mov int cmpsl xchg mov dec sub ds adc movsb cwtl loope int mov test js inc sahf adc mov lds movsb jmp aad stos dec movsl and and push (bad) insl cld dec jo add std mov loopne mov sbbl cmp dec aad dec fisubr (bad) mov xchg out test lahf mov inc add and sub xchg adc dec (bad) jns mov shlb push sarl outsl clc jae aam adc jo xchg adc movsl rcrl sbb mov mov int3 mov xchg (bad) ja push enter inc fiaddl mov dec mov xlat xchg sbb dec lcall test sbb sub in sbb movsb sbb arpl cmpsl mov mov popa dec cmpl mov mov inc dec out mov mov fldt xchg push pop (bad) hlt push jo sub mov pusha jle add adc pushf (bad) cmp loopne scas cmpsl mov sbb mov mov (bad) mov jnp push cmp sbb pop and ja sti imul test fdivl adc das dec (bad) lods int3 jge das into lahf dec mov xchg test outsb hlt inc arpl cltd pop or and pop pop push int3 mov add xor cmp aaa test or jl int pop lea xlat movhps inc fcomip mov dec hlt (bad) mov roll adc or jp rorb jb andl or fiaddl cmp mov jbe das test jecxz add add test sbb and mov push (bad) sbb pushl pushf pop test sub (bad) push pusha inc or fisubr dec cltd out outsb bound xor js pop out add pop cmp loopne stc pop pop gs pop cmc jb inc sub add or push fisubl xchg mov push cld inc sub fmulp sar mov xchg in imul jnp (bad) pop imul mov mov (bad) lock sub (bad) sahf mov sbb dec push mov mov mov fs arpl mov adc int xor fldenv lds mov ss pop sti jp fldl sbb and ss jns popf inc mov addl insl fs pop push mov dec cwtl dec loope xchg bound and jecxz lcall sbb jb and xchg mov inc or mov push push or hlt add sub mov push and popl mov add les das push dec fiaddl bound sub lea (bad) loope test cmp push mov fstp xchg mov jno dec sub jl rcrb pushf sti cltd xchg ficom xor jnp (bad) clc fisubrl and aad and cmc dec js test loope xchg and push rcr popf loope xor shll (bad) dec push lods xchg dec push pop ret hlt fistpl scas jnp dec pop mov test fisttp push xchg inc jns and mov adc inc pop andl test and sbb fsubr push iret test gs push xchg lret mov dec dec xchg in dec sub repz out sub pop popf xor insb insb sbbl incl mov jge daa xchg orl mov or sbb xchg mov lods mov jg fs dec in repz jle fbld jmp xor adc jp sbb xchg inc dec movsb call pmuludq jb pusha cli fildl mov daa and or cwtl hlt repnz inc mov mov jbe outsl xchg movsb fsubs xchg dec fs jmp dec hlt add push lret lahf sahf int add mov repz lods lods mov add sbb dec aad sbb test xor push adc ret (bad) and loope push mov inc into sub and ds rolb push loope jmp loop test jne repz in (bad) lahf jbe test insb sub mov sbb sub mov push fcmovne or or and add lock sbb push mov and mov lods cmp push hlt icebp hlt mov ficoml lock fadds and push clc xor dec adc inc hlt int mov dec mov mov iret and ljmp stos hlt dec test jl mov or outsb adc dec cli in ja mov aam mov xchg jle xchg out push fistpl add mov inc push test into (bad) sub inc mov jne iret sbb pop mov jnp sub stos dec cmp inc hlt mov stos jmp cmp stc mov ds and and lret inc jbe cmp cmpsl movsb arpl xor mov or (bad) loope push lret decb pop mov jecxz in cmp adc push sub lcall mov repnz or imul sub pop dec cmc and dec xor pop shrl and dec jne mov xchg mov add push inc test fs jg and mulb xor pop mov cli loope aam xchg fcompl sub dec mov fcompl orl sub dec sbb dec (bad) and inc notl cmp xchg adc jbe dec iret or xchg je pop add jne mov dec xor negb aam push neg call test out fmul sbb push addr16 jae int3 mov ja sub loop movsl xchg cmc data16 aad xchg addr16 xchg pop fsubl aas dec mov imul pushf popa mov int lods sub mov and stos leave rcrb dec mov ret hlt jge xor shll test test sub and test pop repz popf and xor (bad) sti ja dec js loope jle dec dec stos repnz mov mov iret insl ret adc mov lret hlt and test pop mov arpl dec ds mov and cmp and and inc mov jmp icebp pop lcall (bad) jmp rcrl inc hlt lret push js out push repz cmp les adc movsb addr16 pmullw or adc dec lock dec dec in jmp and and mov mov fisubl jl in test out int3 cmp loope loope imul cwtl dec jge cld add inc xor das and gs (bad) std mov cwtl sahf inc jecxz popf (bad) cmp in push insl in rorl adc gs lahf xor setb js lods xor aam sarl cs dec cltd fnstenv push (bad) push pop lahf inc cmc aas mov ds xor int3 cwtl cmp dec lret adc push inc dec mov dec inc imul fcomps jno mov sub add fdivrs inc dec sub idivb and mov push and pop and int aas sbb cs loopne xchg cwtl xorb xor xor pop cli pop pop fidiv xor pop pop xor inc ret sbb pop xchg into addr16 mov fsubr pop sub out jle sbb xlat cmpsb mov pop push mov sub lock ss daa call loope test loope bound fstl aaa sbb div lods jb dec and push cmp cmp push testl jns pop std jp mov jae gs cs insl push mov popa jae xor das or sbb in mov jecxz faddl pop xor mov adcl fldcw movsl mov sahf (bad) push push lret push sub xor rcl in movsb dec (bad) flds cmp data16 add push mov imul loopne push out add adc or sub shlb das fsub rorl xchg pop add addl adc icebp fnstcw test mov jo push sub lea insl int3 ss call cld dec stos and cwtl cmp xchg mov mov loope pop jl push sahf out or sysexit cli dec adc xor mov loope cmp into faddl pop push daa inc ljmp cwtl negb and cmp cmp mov mov js and pop inc aad rcrl sub mov push cld pusha mov cmp orl insl dec aaa xor insb pop pop mov mov sbb iret sub mov push (bad) ss xchg ljmp imull loopne xor fidivl dec add add lods add lret test scas cmp mov test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt test dec hlt .byte .byte dec hlt jmp inc sbb xchg add jb add jb push or loopne in stos dec lds loope insb repnz push stc (bad) mov vmread stos loop in stos loope in stos and test cmp in stos loope in sbb enter (bad) repz jnp test xor sti push fisubrl add stos xchg stc loope in stos (bad) scas popa mov hlt sbb loope movsl insb push jbe stos out cmp stc cmp stos loope in stos loope xor bswap in stos test sub fisub mov cmpsb movsl clc sub pop in stos addr16 in stos loope lods inc lret xlat stos loope in (bad) cwtl in stos loope push movsl loope in lahf mov cmp stos loope popa ss popa cs nop ja jle loopne ret and stos out pop mov xlat push (bad) cmpsl xlat push out or cli push jne fldcw mov es xlat sti imul push out or cli push adc lds pop idivb xor jle loopne mov push mov es xlat imull sahf ret or movsb loope in mov loope ljmp idivb xor jle loopne mov mov loope in xor xchg jmp loope ljmp idivb xor jle loopne mov mov hlt xlat dec enter stos loope stos inc sbb loopne mov in movsb xlat push out or cli push adc lds pop idivb sub lret sbb pop (bad) in jg (bad) icebp xlat dec enter stos loope xchg sub imul fcomps stos loope bound clc leave sbb clc xor cmp (bad) jmp loope orl (bad) insl in sbb cmpsl shr rcrb stos call clc xchg dec leave popf pop mov push jmp dec mov jno xchg ds in out test leave jg dec add fwait lods mov sbb push rorl pop pop xchg mov aam cmpsl mov push aam jno or jne cs push dec lea xor cmp push call mov imul pop lds popf (bad) adc jl adc mov pop inc inc shll mov in inc dec lahf xchg shrb jne movsl sbb out cwtl adc mov mov je sub add xchg fistp imul mov into gs add mov in fisubrl xchg cmpsl jg test in add je in sar fildll loop aam adcl xor cld loopne lea sti mov flds (bad) ljmp insb mov std mov (bad) imul push pop addl mov and pop andb cmp stos out adc mov mov arpl xor mov scas xor cwtl scas add repz push mov popf pop push xchg jne xchg adc or push inc dec aam xor imul (bad) and test pop (bad) sahf lock orl ret icebp popf adc pop mov sahf loop sub inc xor xor test inc adc inc aaa adc adc mov lcall std sub cmp movsb cmpsb rcl mov pop sbb loopne and les cwtl idiv inc rcll out mov movsb pop push xlat pop addr16 inc cmc mov rcll stc nop pop or popf push inc push (bad) xchg add adc bound jp jp jl mov fdivr dec ja inc jo (bad) out addr16 (bad) jo lret ss push inc sbb imul mov push sti sbb ljmp push loope movsb push jo sub push ljmp inc mov psllw jae std test xchg lods and loopne mov test popf cmp pop xchg adc stc rcrb loop fiaddl mov lahf into push add vmovlpd pop or inc fsubp sub mov fisubrl mov xor mov and inc fdivrp sub in je push aas xor outsb out xor inc imul pushf sub repz addr16 adc push pop (bad) or mov lods sbb addr16 lds pop fdivrp lahf loope aaa adc daa into in dec sub and xchg push or movsl add rolb addr16 xor push push (bad) stc hlt or dec imul mov push dec stos and mov pusha inc sub and imul loopne out pusha mov cld lahf gs hlt cmpsl jp mov imulb out push adc js pop es and jp xchg cwtl fwait cmc sbb shrl repnz adc mov inc in lret gs aaa repz sbb (bad) (bad) out rorl loopne into gs test fcomi and jns add dec dec dec (bad) lock outsl (bad) mov sbb fs add (bad) pushf push sub ja rcl loope or xor xor mov add lock js stos lock das (bad) adc xchg cmpsl jecxz ja adc loopne ss lods stc add cmp stos inc in mov mov inc xorb and dec iret mov mov mov out call sub leave out lock sbb call xchg loopne ljmp adc jo pop int3 icebp aas ss push cs add (bad) dec sbb jmp cwtl inc sahf sbb rorb pop add nop cmp movsb not orl push add arpl pop and push push cltd lret push clc xchg and push (bad) push test int inc divb dec jnp test mov sub (bad) mov leave (bad) rcrl sbb pusha adc aaa les fs das das jl (bad) js into fnsave cmpsl mov gs sti xchg ret and in movsl and sarl aam pop in and mov (bad) xchg popf mov lret scas xchg lods pop mov push fstpt push sbb (bad) add push and pop aaa push sbb mov ss (bad) cmpsl or adc cmp in fdivs int3 and adc out mov mov fisubr push and add jle into aas inc xor in xor push int (bad) in in idivb mov sbb cwtl mov push lods hlt test xor imul xor sbbl jmp sbb push aad scas aas pop bound mov inc loope (bad) into add lods adc movsb into and pop fdivp aam add stos or push mov test stos lret cmp loopne xchg out or les cmc in add sahf jmp mov cmpsb fstl mov cmpl cmp xchg idivl std ds aaa jmp pop push mov mov ja test xor int les imul adc push (bad) leave movsb cmp mov hlt xor ljmp add or jecxz movsb inc ffreep ret rol std sub inc cld fs add and into pop cmpsl loope out mov lock sub push ficom cmpsb mov aam insb push pop cmp or cs fcmovbe ficoml insl gs mov clc adc (bad) aad sbb nop (bad) jb mov or jns in call xor push call adc fidiv push xor pop in fidivrl test repz or loopne scas mov fcmovb jnp lds ljmp sbb fnstsw out fucomp push ljmp cmpb lret sbb push mov and jge and int3 mov mov xor bound fwait aaa scas xor idiv sbb shll (bad) xlat out add xor lock aas in add push js stos sub pop xchg out or idivl jg pushf xchg hlt movsb leave fcompp arpl imul and popa out mov add inc cltd dec mov lock mov leave mov mov imul das ficom and cmp jle cmpsb test out jl in lret fisub leave add push jle jne jmp scas call push cmc in sbb xor lock je sub sbb pop ficoml leave push in sbb and xor in out or adc cltd stos in push mov push lcall (bad) jns lock loope stos out and (bad) dec ficompl jmp movsb fisubr or mul into aas push cmp push mov mov dec and pusha and aad std (bad) ret xor jns fs mov aam or lock mov mov (bad) dec icebp ss pusha cmp loopne push les mov xchg sub inc or push add pop outsl int ljmp ja push sub in or sti jne or hlt lods push dec or xchg loope cli stc mov and add adc js daa mov lahf jns nop xor addr16 pop or or (bad) sti push mov adc xlat scas jle mov in test mov iret mov jle mov je xlat insl xchg mov call iret fmuls in cmp nop loop fwait inc call sub xchg loop xor fs mov jecxz movhps lret sub pop call arpl sbb ds and data16 jae mov cmp mov mov cmpl mov (bad) idiv test cltd int3 jecxz daa fwait inc testb xchg jle pop adc mov lea ret (bad) std mov cmp pop out xor (bad) mov orb shr cmpsb push mov aad cli stos in xor and dec jecxz bnd fidiv mov cmp cli lcall (bad) and lods push mov mov pop out dec sub lea or stos vsubps xchg fs nop movsl cmpsl mov jge movsl data16 cmc mov mov push cltd sti and dec fsubrp mov xchg mov es add jbe fsubl aaa ret add xor push ds sti pop cli cmp adc xchg imul push lods cmpsb aad sbb mov int mov imul mov aas movsb fstpt mov enter loopne sbb sub xchg inc mov cmp and mov bound sub mov push stos fstps push jmp call push ja mov idiv bound sbb into ja push aas aas pslld hlt cmpsb jne or inc sahf sbb ret dec pop fsubs pop andb jl sbb loope add out movsb int3 mov push xor jns xor dec imull leave lods aam and test sub (bad) sub ret xor jecxz pop add push push int call es stos mov xchg jecxz pop pushf push cld enter adc int3 int subl jb inc out cmpsl cmpsb les lds and movsb pop sub xchg mov int3 inc mov (bad) add lods or add xchg test mov (bad) movsb jl xor sub popa push adc mov mov inc ljmp nop in mov and ret insb (bad) je cmp jmp inc adc cld je out popf pop pusha fisubrl call fmull xchg push arpl loope idivb stos dec aad adc mov (bad) xor push adc das mov pushf dec xor jno xor add jle add push fsub xchg lds xor push mov cltd in jecxz stos cmp adc inc lcall cmpsl ret adc xor and shlb mov movsl (bad) cmc int3 (bad) sub outsb sub ds js dec arpl int3 jne fldenv decl mov (bad) sub popa out iret ficom aam pop fstps sub cmp push or mov xor cltd xchg inc xchg inc xchg enter add xor add movsl into mov scas fisttp add sbb pop test stc pop mov xor jmp lds cmp les mov out adc ja je cmp adc mov jb pop call inc clc adc cltd or push inc sbb movsl fstl mov loope outsl sbb aam rclb enter push xchg xor mov aam xchg cmpl popf xlat subl jno inc inc adc add push or pop outsl ljmp mov addb imul cltd jle into jg push sbb push push movsb popf add lret cltd test in pop pusha popa mov add dec inc loopne mov outsb sub mov pop sub mov scas lds mov rolb cmpsl test ljmp imul or push out mov into sbb or cmp loope dec inc and int3 xchg sbb mov aam dec daa mov or jb out iret cmp (bad) add sbb dec popa jae cmp loopne jbe adc aaa mov xchg or cmp cmp push pop jle movsb in inc test xor dec mov lcall lret push xor add imul add shr dec int mov add sub mov mov fmull fwait dec imul push jp mov popa pop sub pop or out mov or mov adc lahf jmp add add insl js add xchg sub and or mov fadd fwait aam loope sub hlt xor lods and nop add and pushf dec mov inc in jmp mov pop popf popa loope xor ljmp lcall or sub xor and js dec push les ret sub lcall int inc jb cmp loopne je xor sbb push push xor and hlt es mov pop in test mov mov orb fadd sbb inc mov dec dec or jno cmp mov adc ja test hlt incb mov inc rorl pop aad js add push lcall scas (bad) lock mov mov lock xor mov lods xor in cmp sbb xchg movsb mov and (bad) mov push mov cmpsb js dec and jp bound je sub cltd ret mov aad push scas mov std adc dec (bad) nop (bad) out xchg lds stos mov clc fcmovne dec fidivr cwtl add mov aaa adc sti ret sub fmuls cmp sub lcall jno jge mov add jmp lods mov or inc leave icebp fdivrl mov push push addr16 jns popa or jmp mov push add cwtl add jo popl adc pop sub add aad mov jl cltd adc sarl dec sub test inc pushf out pop pop ljmp jp pop in pop sbb lods sbb aaa fmuls ret cld and je pusha dec pop or loop fildll and int3 aaa pop or jns cmpsl addr16 js addl sbb (bad) je mov dec jnp and sbb int push mov xchg les out bound push orb xchg cmp dec adc mov mov push sbb mov rcrb add mov pushf mov add jl lds jmp and popa add and je dec nop sbb fldl mov out les sbb in add rorb or jb xchg jl xor push mov scas aad mov stc or imul inc jo or inc or add lcall (bad) sti lods add or jno add cwtl add dec or cltd insb sbb jbe xchg (bad) sbb dec inc mov mov cwtl mov xor rcrb sub jle xorl jmp scas pop popl loopne pop xor jnp test push repnz rcrb pop push mov testb cmc cmp mov pop dec inc mov cmp sysexit ja inc js mov xchg pop int3 test pop adc popf sbb push std xor in push inc jb xor adc bound mov lock ret call movsb cmc stc xor inc push dec inc hlt fldcw inc push sbb add cmpsl dec scas es push movsb dec dec in sbb add mov loop dec lds xor jmp std (bad) pusha pop pop add pop mov test adc mov inc in and cltd mov pushf xor popa insb cmp pop mov add pushf push push inc jo xor xor sbb popa rolb cmpsl dec pop inc lcall sbb and jl add inc pop lcall test dec mov jecxz test dec nop insl xorb push add pop dec xor pop jb in jmp rorb leave pop jbe xor add add jns ds dec xchg xchg or cwtl dec or xchg out pushf push (bad) dec xchg cmp sbbl (bad) pusha sub xor inc jns bound cmp sbb leave cli movsl mov dec test and jge add pop mov xor dec cmp push mov mov mov pop punpcklwd dec mov fcoml xchg mov mov push cli adcl lods lock pop addl iret mov popf add pushf and sub mov subb ret mov cmp add inc add push sarl pop (bad) mov mov mov xchg hlt out cwtl adc dec ror call or sarl dec (bad) fnstenv adc jmp fwait mov dec jne xchg movsb cmp je mov adc daa mov or push enter sub loope cltd add lods xor fnstenv push mov scas cld test mov inc es test iret mov sbb int cmp pop mov test adc inc or cltd jmp jo aaa pop or pop mov push push cmp int3 insb test pusha jo sub lods fcmovne push test add in bound les js fcoml clc inc or mov mov inc mov gs push cmpsl fdivs js imul pop mov xchg mov int inc pop and repz and inc mov mov push dec rcrb push sub inc cwtl movsb push iret mov jl dec divb cmp sub rcll cmp gs jnp adc ret loopne sub cmp lds inc shr mov test pop xor ret ret scas daa lahf jp and add js mov sub or sbb test mov jl pushf mov pop inc xchg xor push and adc pop or mov cmpsl (bad) mov (bad) (bad) mov shll pushf lret mov ja daa jl add fwait pop xor imul mov dec outsb shrb lds fisubrl (bad) mov or aam pop popa rclb aam and mov add and insb (bad) aam xchg sbb add and push sarl push mov adc sahf add int sbb sbb mov call fwait add cmpsb xor pusha lcall sub rorb repz push cmp or sbb or in pop sbb in or je cmp jno xor add je cmp adc mov aad ja orb enter cmc and js mov mov or rcll incl inc sahf mov loopne mov mov or xchg pusha pop loopne imul jp lock xchg out sub pop push cmc aas inc and add sahf fistl (bad) mov jge inc mov adc add jle cwtl xor push popf (bad) cmc add push loopne movsl mov mov dec add popa cli add repnz or rcr adc pop (bad) cld mov ficomp outsb mov mov test mov loope dec sti loop adc pop out xor xchg (bad) negb (bad) dec arpl test out xor jg dec nop mov add dec inc movsb and sub pop mov sbb add insl cmp inc or inc sbb push jns in mov lds cli in or or in adc aam nop cmp pusha xchg jns push fwait arpl xor jle testl xchg in pusha push pop mov ffree push lret jae add out fisubrl cmp inc lods xor je mov rolb ret out add dec or out fild xor sahf (bad) ja mov scas jg pusha cmp insb add xchg xchg cmc pop pop out je loopne mov mov and push mov mov popf add icebp out xor add bound sbb pop mov rol or add mov insb dec push pop out orb xchg les daa out sub push mov push loop dec add mov adc pop loope dec add fcomp pushf imul sbb pop je add inc pop aaa or mov pop outsb iret mov and imul es or push adc sahf pop sbb mov cmp (bad) aaa adc stc push test aas stc or cltd popf fstl enter sbb sbb int3 and adc bound dec add cmp testl fnstenv fs sti xchg and fstpl mov add mov xchg das sahf xlat inc sbb dec adc arpl cltd and shl or xchg sbb movsb jns cmpl cmp sbb shlb mov xchg add repnz aas in ficom test cltd call jle add loopne mov js add push sbb lcall scas jl fadds pop push test bound mov mov xor pop pop dec push rcll enter sub aam lret inc int nop add test sbbb into push jl movsb out dec call pop mov cmp push pushf adc sahf mov repz scas mov add add dec sub xchg cmc push xor or and pop aas mov cld sti push cmc cwtl adc adc fisttpl adc pusha pop and xchg inc and adc pop outsl test mov (bad) sarl xchg jbe push pop adc pop pop and and add les inc sub jle add or loopne mov cmc (bad) or push push jmp decl frstor lods xchg dec mov jle fsubl mov shrb xor loop (bad) jmp xchg xchg sub movsl adc lea or or sub out rolb mov xor arpl xchg fild adc aaa sbb mov ljmp cld pop mov and adc loopne inc fldenv cmpsb mov int imul ret repz mov test (bad) negb aam (bad) (bad) adc repnz inc dec adc push or cld sbb add lcall inc and lock aam adc (bad) cwtl pop and mov loopne movsl xchg mov rcrb cs xchg pusha add repz inc into je xchg mov push pop lcall mov push jmp push inc adc inc or pop add enter out add and fs or push xlat cwtl xorb cs or mov fs add add scas fcmovb clc fs push (bad) fadds inc push push mov pop les popa push cwtl dec loope inc dec (bad) or (bad) push (bad) fcoml sub or mov sub adcl test js add pop cmp addl adc aam xor lret mov push dec pcmpgtb adc mov fdivrp push mov mov adcl dec cwtl mov js test mulb out andb sti mov jl lret sbb pusha pop cmp push sub xor test or clc idivb outsb sarb pop mov movsb sarb sbb in ja cwtl and mov add dec mov inc sub mov inc sub lahf jmp mov xor adc es notb lock nop ljmp sbb imul xchg add js add rorl gs add mov pusha test popf fcompl mov sub add les cwtl mov jns push jle lock or pop out in pop popa call jmp xor dec hlt dec in push xchg out xor adc push add ljmp and lret stos sbb sub leave xchg add orb adc loop (bad) pusha into sbbb xor add cltd lea mov fwait adc (bad) inc jae mov fmull fbstp sbb cwtl clc test cld cmc dec inc out or pushf pushf movsl nop (bad) std push add jp cmp xchg dec cmp mov push add cmp mov mov sahf out rolb adc mov das fcoms and aas lgdtl mov mov jnp cwtl add icebp (bad) mov dec inc sub (bad) pop ja xchg inc dec push pop adc cmp andb add nop add je ret dec sahf add shrb out pop fcompp fdivrs or inc hlt adc sbb adc and add mov lods pop insl add out pop (bad) cmc jp test unpckhps ret lcall mov unpcklps test rcrb sbb rorb xor mov fistl fadds icebp aad jno mov and cmp push jp,pt repnz out xchg rolb pop xchg test (bad) mov mov test lods push rcl xchg xor fidivr adc in push shll jl add adc les popa loop aad add repz push test xchg scas add cmp add adc test mov dec pop cmp iret fstps mov cwtl (bad) mov clc cmp push add xchg sub mov or sub push test or jne in fs push push add dec cmp mov xchg dec andl jne or clc aas cltd add bound or push jmp jecxz lds dec (bad) in add mov out das insb add ret scas xchg sbb add (bad) xor dec lea sahf adc sar xor rclb cmp movsb lea xchg ja xlat dec dec out add stc jns mov push sub rorb adc hlt pop xor shrb inc rcrl mov and and outsl inc pop push add pop int3 add mov sbbl fwait add aaa ret je (bad) and or mov pop lods push and and adc jl and mov push add in (bad) mov push ljmp and int3 loop sub cmp push xchg sbb cwtl aam addb call and mov int3 add je pop sub hlt sub or lods xor fsub (bad) add aad adc sbb popa insb xchg and nop xor mov nop stc xchg mov test fadds xchg cmp or sbb js iret add sarb xchg add (bad) rcrb aam adc inc add push inc sub int3 fs rorw push jo sbb cmp call xor aaa mov inc mov and xchg mov or cltd shll cmp in xor mov fsubrl lret xchg push mov sub lcall inc push cmp ja mov adc push test adc (bad) icebp sbb dec bound push in hlt jmp push inc xchg ja dec inc mov mov push sbb ret ja add ret inc mov rorl or and pushf or jge nop xchg sbb js pop stc in or and std push sbb rcll and pop push test add mov inc je loopne mov das mov nop sbb and adc (bad) mov pop adc cld (bad) lock jno out test mov adc stos aam adc into add and les xchg adc (bad) mov or ljmp push test andb xchg icebp movhlps scas jns gs xchg jbe jns mov or push in mov out push andb adc push pop repz push shlb gs adc cmp pop test sti stos dec xor mov or xchg push push bound aad cmp pop or ljmp call lcall (bad) test lea mov dec fsubr (bad) mov mov pop dec and push adc lret add sub mov jg jns xchg mulb or in add xor out add push out jb (bad) or adc mov jg xchg rclb or leave popa mov test insb int3 sbbl jmp imul int aam call enter inc (bad) mov mov push ds outsl cli push fadds cwtl or sub mov insb dec mov or inc mov add xchg jae dec pop add arpl or pop push push movsb cmp lea adc mov sub (bad) (bad) and pop adc sarb cwtl sub rcrl shrb sar inc clc repz ret inc sub mov in jge arpl pusha sbb pop push mov mov jo pop movsl mov xchg rcrl mov call sbb dec inc add and and and dec faddl mov rolb sbb xchg jo mov gs xor mov xor push and push dec mov mov dec add mov arpl cmp adc add test dec aas fidivrl jl xorb adc adc dec mov add jns ret lret or cmp sub or idivb add (bad) es dec xor jo rorl xor lea or gs push mov aas nop push imul push loopne (bad) adc and fadds mov adc lods jo push lods push and push ja xor fist addr16 cltd hlt mov ja (bad) mov mov adc and sub push mov pop add aaa xchg je cmpl sub cmp xor test test xor inc aaa loope jo sub xor cld sub lods xchg or (bad) mov ds insb sub mov mov popf cltd xchg jge pop sahf repnz dec addr16 loopne or xchg ja pusha adc stc xchg mov pop (bad) pushf sub adc loopne aad push xor mov cmp inc mov xchg and inc or or int pop jno dec or aad xchg nop dec ret rcr push inc or fisub sbb xchg dec fildll inc aam cmpsw (bad) pop fcomps cmp in nop sub jmp xchg pushf les stos dec lock dec inc xor add and dec dec call xchg lods test jbe adc xor das push xchg push and pop or add (bad) dec out push xor scas mov push repz outsb scas stos dec mov popl cmp adc pop test adc (bad) jmp (bad) rcll inc inc movsb mov loop fdivl dec mov xlat mov mov mov nopl push outsb push jmp pop das pop sub and dec cmp subl andb xchg leave int3 in mov clc rcrb xchg (bad) cmp mov loop mov sbb sub dec mov cmp xchg ret xor push in dec xor xor movsb mov aam mov (bad) push and jg jnp jns adc fsubrs jnp daa rorl dec pop call js (bad) or jl int3 jne test test mov dec add push jge nop mov add mov aas xchg out push bound cli sub push xchg mov loopne movsl aam xchg xor adc idivb cmp stos loopne fs or hlt lcall int3 (bad) aaa inc cmp inc mov mov push cmp pop mov sbb mov jecxz mov adc inc cmp and inc nop mov (bad) mov and (bad) or pushf cmc cmp mov jo mov xor jne andb ja push sbb xchg test sub test (bad) les sub pop mov std ja or es mov aam out das push and test or rol jge adc and mov in loope xor cmp cmp leave adc add andl push cli add pop or (bad) add jae push sub inc and push push incl or js sub mov add mov (bad) cmp dec (bad) call aaa push adc jecxz adc mov sbb (bad) cmpsb int3 imul test adc lret xchg jmp stos dec test or out divb and xor mov lods and and inc inc loope jl adc xchg pop dec add decb sub test (bad) mov (bad) dec loope jns je sub and jno push fiadd cmp xchg nop mov jns wrmsr cmc cmp mov dec loope dec xchg call mov int3 movsb pop or add fs adcl in inc add or stc xchg push add pop int3 in out xchg push mov push mov mov nop adc (bad) and out push in rol stos add out jge (bad) xor sbb (bad) loopne lock adc add adc out leave xchg add mov pop mov push fnstcw insb xor fsubrl inc inc sahf ret or mov mov and pop out pop imul mov in jl sbb cmp mov pop (bad) mov into popa out rclb sbb mov loopne dec adc cli (bad) jl sub sub adc lock push adc pop sub add cmpsb mov xor psubb or (bad) loope inc or js fildl dec (bad) lret cltd inc mov xor add arpl add add and inc aam mov clc inc add (bad) add adc in lret sbb out inc jge and roll test cmpsb add add mov cmova popl and mov mov dec movsl add and push mov xchg adc scas sub (bad) fldl sar xor xchg mov pop stc mov xor push jg mov (bad) or sbb (bad) sti rcrb orb repnz cmpsl mov dec jne pop stc jns and jne jge pop mov xor or mov mov scas dec add mov jb push add cmp mov pop idivl pusha jmp pop sahf lock push nop and mov or mov clc pop loopne or dec mov lcall js cmpsb push arpl fmuls sarb pop xchg outsb cld jmp dec mov repz into pop cmp mov aam cmc adc cltd pop mov push scas sub (bad) loop or lock pusha push ret inc add cltd inc sahf add sub jp cld bound xchg inc stc js mov xor mov sub mov adc add xchg dec cmpsb out xor mov jecxz lods fdivr push add mov add test leave push fwait add repz add sbb movsb mov xor lods pop jp (bad) sbb ljmp add push add std (bad) rclb xor jge push mov xor jne mov pusha or fcomps mov adc aad loopne cmp adc ljmp movsb movsl inc test hlt xor add fisub loopne push xchg stos adc mov jmp int3 das ret lret mov or pop out jo add (bad) jecxz lret xor add je and pop cmp mov xchg push mov dec add fisubrl cmp inc sub mov mov call push leave and push inc notb push (bad) cmp in cmp (bad) lock adc loopne inc gs (bad) ds je push bnd xlat out jo mov jge or push pop inc mov pop jmp rcl push aam daa mov xchg or cmp pop pop pop insl popa sbb hlt cmp xchg in sbbb mov stos (bad) xchg cmc mov push mov div movsb jl or negb dec int3 daa inc mov pop xor pop pushf mov and mov in cmp lds (bad) push sub xchg adc sbb repz pop inc dec sub dec push pusha insl sub sub scas xchg add xchg rcrl add scas push and jne add push cmp aas in and mov rorb pop pop mov inc dec sub xor enter push cmp ret add loope fiadd mov enter push mov syscall dec mov fs addb not adc les xor js cli lcall mov mov (bad) sub out and push pop push mov pusha lds add inc sahf cmp sub sub test nop loopne inc daa xor repnz mov gs mov add adc adc loopne or add mov aad and movsl inc in fcoml ret push add pop add jns lock ja mov inc test xchg add pop into iret incl mov push jno jnp xlat add lds mov pop inc pop lods xchg mov xlat pushf dec add mov (bad) xor dec das adc clc mov aaa aam insb insl xor push mov lock xchg aaa and jno pop icebp stc add pop inc add dec pop addb (bad) mov add imul inc jb (bad) ds pop rcrb int jo jmp hlt xor sub mov xchg xor or leave sysret aas fwait xchg jmp popl (bad) push push xchg mov cmp enter and sbb add rcll addb fs nop or mov jbe push cli or inc jne ja neg add dec bound push test notb add loope mov int3 pop mov mov and cmp mov pop fcompl xchg loopne rclb jne mov xchg mov subl or sarl jo push sbb sub cmpb mov push aam call hlt mov je adc sub adc es rcl push adc pop mov mov fnstenv sub test fdivs mov test test cwtl push ficomp cmp pop xchg and js gs add ret arpl loopne nop sbb pop dec xor outsb sarb and andb das inc xor cltd testl pop mov sub mov xchg xchg inc int3 aaa and div shrb mov sbb arpl push decb ret (bad) ljmp push jecxz pop mov nop hlt mov shrb loop (bad) xchg dec das ret cwtl xlat lods and adc sbb test in push jge test pop add xlat and in popl and dec lock or pop mov mov mov push sbb inc hlt jns xchg je popa mov pop or in xor mov add pop cli out fwait aam lret sub push imul mov dec jno (bad) xchg addr16 add push adc int3 rcrb push arpl lea mov inc ja or xchg xor (bad) es inc rcll and xchg mov je loopne pop sbb iret loopne xchg and jae mov cmp ja loope jge add mov loop test sti mov sub or push add push popl call loopne mov ljmp mov mov dec and xchg out sbb popf xorb es pusha loop cld mov xor pop lcall mov cmc and sbb add test jecxz mov (bad) jle lods add ja loop lret adc out hlt push decl (bad) mov inc out jmp inc or shll stos and imul enter (bad) mov out rclb out cmp hlt xor add mov fisubrl mov add xchg pop sbb jo rcrb cmpsb pop in mov roll test sbb sbb mov out and fsts mov xchg loope sub inc mov mov lahf cmpsl nop and xchg les add cmp adc in sub cmc inc inc rclb or mov fist das mov movsb adc inc cmp mov clc push xchg xchg and or push sbb pop adc or push mov push test or repnz lods mov add or push sub (bad) loop fucomi mov add mov dec cmp mov addr16 push mov add mov add add cmp sub pop repnz movsl mov lret mov rorb es sbbb call mov popl fs fadd xchg or sbb jae cmp insb inc into jno imul stos jecxz add pop fcmovbe xchg add ret out or nop in jo pop or dec stc xchg in loopne test jecxz popf pop in mov fwait pop je mov test je push negb cmp scas stc add mov fiadd jle shr inc pop pop mov stc or or add add fs je inc dec and xchg or and and pop cmp push ret cmp push icebp add lods adc push mov xchg lret mov push rorb pusha pop jo es adc sbb aaa sbb cmp repz sti sbb mov mov add pusha jmp jne jl std add ficomp fiaddl mov add mov test rolb inc mov enter push cwtl cmpl aaa xor xchg inc enter inc loopne nop mov call rol sahf mov sub and fadds mov jp or cmp xchg rcll ret test sub jmp mov jno lods loope pushf ja jo fwait mov inc jl add cmp adc push mov clc dec pop out lock xchg js test push sub arpl (bad) inc adcl sub push in popa jns xchg scas push jo push add adcb rolb inc adc cmp ret int3 dec ja ret js add push enter icebp ja sub fildll pop lret inc mov or adc call dec push mov inc fistpl mov imul adc clc pop sar in jle xchg in je pop pop adc xor daa adc adc rcrb lcall dec or dec in cmp pop xchg adc ror rolb adc add fimul loope jbe mov dec ss addr16 cltd fst testb es adc add add and outsl inc mov and add dec flds add xchg xchg adc adc xchg add lock (bad) (bad) pop pop mov pop fsub or dec out dec lods sub pop xor mov sete ss ja stos adc in cwtl rorb gs mov loop faddl in (bad) jbe aaa push xlat lea add xchg push push add test mov add shll in sahf xchg push add mov add subl pop pop inc mov add and lock seto add ficomp xchg ja xor push push mov mov inc cmp push (bad) and and jnp fs adc mov ret cmp and pop jl mov pop (bad) inc scas add cmpl adc fs fisttp mov pop mov pop cmp cmp fdivl sub (bad) in pop fcmovb fcomps add add bound xor push jge clc sub rcll (bad) cmp inc shlb adc mov fsubp pop mov ja les mov or cmp inc inc xchg dec in jl cs pop les stos push and push mov sub cmp add mov mov or clc push push and or dec push jg leave mov js xchg dec cwtl xchg (bad) jl mov adc (bad) imul cmc xchg add mov mov lods es test std xchg inc mov sub (bad) aam dec adc movsb mov jae cmp insb outsb xor jp test dec add mov mov xor dec cltd and and lret push in xchg clc lahf mov (bad) iret rcll jnp cwtl hlt add sub mov push sub cmp inc sahf imul clc movsl popa mov fs aas dec cmp ficoml js sbb mov push xchg out push mov sub lcall xchg lods fstpl fwait cmp cmp inc in xchg pop roll inc mov mov pop push aas pop ret push insb or (bad) push xchg ja test xor stc jl pop push das call pop ficoml jno stos xor aas fs pop addb xchg div loopne cmp dec sbb adcb pusha lock and mov test and movsb loop dec fucom pop jg sub fcmovb cmpb push aaa add pushf test push scas dec inc flds das outsb cwtl xchg pop xchg cmp arpl (bad) dec enter andps push in sub mov inc cmp in rcll xchg lea cs xchg mov push push jge cmpsl and xchg pop pop mov mov sbb daa cmp scas xchg pusha adc mov test xor aad lods lahf or push or lea pop mov jns cwtl mov xchg lock jecxz xor xchg xor test je ja lds rcll cwtl je dec lahf repz jp sub lods pop push mov jb mov add inc jecxz dec push add out xchg insb adc in inc ljmp jae add cmp mov (bad) shlb shll add pop ret imul movsb imul fsub lock pop shrl sub popa clc ljmp inc out mov les pop xor cmp and jl subl js push add lret lock add adc adc (bad) or cmp or jg xchg popa push fs jb daa ficompl cmp pushf push and and inc dec call dec add add add or scas loope mov jecxz enter mov adc dec or pusha mov cltd and or cmp jg dec pop sbb call rorb mov cwtl dec push mov pop js push sub ror int3 jne push in push add stos inc hlt ja stos or sub test jge ss inc stos and nop or cmp add jp cld pop and icebp (bad) mov mull or loopne in mov xor jo movsl pop push adc or inc xchg test ja leave call jnp push lea loopne (bad) ds loopne leave and pushf in cmp lods (bad) xor orb ret lock imul hlt xchg ja ljmp insl addb sbb mov mov pop out and cmp cmpsl pop and jl mov js adc enter repnz jns mov orb lahf adc lods adc and mov cli psubsw cmp sub mov dec or sbb faddl js xchg stc cwtl pop cmp dec and adc call pop insb clc mov js rcrb and inc test dec add inc adc in in ret pushf inc call mov jp adc jg mov popa inc je add mov mov and sahf (bad) bound in test adc bound (bad) movl push fmulp add sti ret mov add xor mov (bad) inc les add mov mov xchg test mov push add cmp sbb mov pusha sbb mov adc pop mov jns adc add push sub jecxz adc jle adc (bad) sub scas xchg data16 pop sub inc testb inc cmp clc into rorl daa js ficoml adc cmp xor mov cltd push mov push stos mov sbb imul inc ss and clc jmp cmove lods xchg pop add add sub dec sbb in sbbb adc dec lods (bad) xor xchg jns xor ljmp pop popa cmp add adc mov xchg jmp mov sub mov ret push in ret cmp cmp sarl and add mov dec push adc addr16 pop or or movsb cld or in pop hlt mov xor pop xorb or adc push movsl inc mov cmp pop cmp addr16 test pop sub mov mov verw xchg mov (bad) cmc cmp mov dec xor inc or fcmovnbe jle loop addl loopne or adc popa adc setg mov and (bad) dec and add dec popa je les mov adc dec mov clc dec rorl or rclb imul rcrb mov xchg clc mov inc test pop push pusha add loop insb or stc jl push mov add ljmp xor cld push inc es das add nop scas adc push into inc ds test (bad) addr16 mov add mov xor cmp popa sub xchg sbb mov mov stos or cmp pusha aas call cmpsl in scas xchg js aam mov sahf or mov or pop jbe and push add mov mov mov adc cmp adc aad ds xchg jge popa popf push mov stos test js dec xchg mov cmp stc push mov loopne cwtl cmp adc ret inc pop (bad) jle fcoml add mov ja loopne cltd mov aam fwait xchg addb cmp push movsb aam xor and lods sub cs dec pusha fbld mov xor or je mov xor add and xchg enter add push sbb loop pop adc fadd pop fcmovu cwtl and or enter xchg ja (bad) and push cwtl je or and movsb int3 call add mov sbb lcall add sti ja flds scas and subb imul adc test cmp dec jle ror inc pop nop js pop and test shll fdiv or fisttp or repnz mov cwtl mov mov cmp xchg pusha shrb in (bad) mov ja pusha sarb cwtl fidiv add mov pop push add push imul fimul cmp and stos push add movsl and and adc (bad) push loope push fisub dec icebp add sbb dec rolb fistpl int3 add mov dec cmp push inc es pop stos mov outsb pusha cmpsl sbb shl lds xchg add push mov add mov jae xchg xchg jmp push push sub add inc jne xor and sub adc adc add pop lock push push je xchg ja jmp pushf mov out int3 dec test mov nop icebp stc or arpl cmp and ret cmc nop nop mov dec rol js mov daa inc xchg aas and test sub (bad) test xchg enter je aam inc popf aad call inc movsb xchg das ja mov lock popf and sbb not dec cwtl shr mov cmp adc cmc add xchg add jne (bad) out cmp push adc movl adc or sbb mov mov sub dec pusha mov jg dec xor ret dec ret xchg (bad) test pop es enter cmp (bad) cmp or lcall pop inc aad add inc cmp xor inc jnp addl sti mov repz add push shrb adc jnp or and in pushf push push imul mov push lock mov mov (bad) jno pop dec dec movsl push int3 mov (bad) in mov mov push fdivrl fsubl xchg outsb mov popf mov lock clc lods les xlat add xchg sbb push pop (bad) mov mov mov push inc (bad) out lds adc cmp push xlat ror sub nop push ja fisttpll mov (bad) cmpsl les aas outsl lahf int3 clc mov andb cwtl inc popf jmp in pop int ds or movsb inc push inc inc add out bound xor shl dec int3 imul jo pop insl jecxz mov out add sub fimul (bad) bound sbb js add cmp add cmp mov inc pop sbb jp daa add lds out dec add mov sahf sbb or in fstpt jnp jl pop add or xchg fimul mov add lods cmp lea push add sub mov enter das (bad) or enter icebp xor cli inc divl add push sbb adc fs outsl hlt nop clc imul mov add test mov cmp push movsb xchg faddl int pusha mov cmp add pop mov sub out pusha sahf loopne lods je cmp pop sub sti add adc cmp push push rcl dec inc mov in mov enter fbstp xchg fwait cs in adc cmp js and mov sbb add sti add dec stos (bad) and xor push pop rclb addb das and dec adc mov lds mov outsb movsb dec test sarl pushf pop sub (bad) mov inc jnp dec pop or mov bound scas into push in lahf add add dec sti incl out mov adc test int3 mov push mov test lods mov popa pop jecxz imul pusha loopne fldenv je (bad) mov cmp iret leave dec xor pushl das adc movsb fxam cmc push andb loop push add inc push ret pop (bad) (bad) aaa mov mov mov daa mull or aas push xchg xchg add jecxz or aad mov cmpsl adc ja and incb psllq sub ds adc sti add aad jmp dec stos sbb mov hlt jbe adc jns imulb dec cmp ret (bad) add mov push loopne loop pop (bad) adc mov xor jge ds mov testb or (bad) cld loope shrb cmp cmp cmp les push push push mov push in inc pop gs pop mov cld inc mov js cwtl or loop sbb xor cmp fild movsb sub or stos jns inc jl pushl test je push inc add cmp push cmp cmp inc mov pop in jae ss icebp and fwait xchg sbb cmp stos and mov mov add adc js rorb sarb movsb dec add les or fwait mov hlt mov push mov xchg faddl out loopne cmp push xchg xchg xorb (bad) push fwait push call push cwtl pop pop mov scas loopne js pusha (bad) jno popa jecxz add push scas push sub pop adc loopne pop test mov std add (bad) (bad) dec or fmuls fisttpll add cmp movsb loopne mov add jge adc xchg inc pop insl inc int3 pop xor clc out cli mov xchg mov stc lock ja mov inc adc push (bad) mov mov in push and aas and aaa and hlt push fistl inc pop mov pop inc fild sub lea adc or mov fsubrs jge jle push sub sub and cmp sbbb das in int3 or adc push rcrb mov mov sub mov cmpsl pop (bad) mov push push xor push sub (bad) sti loope sub mov adc mov loopne pop add jmp push mov xchg dec cmc add pop jle test mov pop popf xor nop mov iret insb aaa clc call or (bad) xor mov adc cmp and xchg pop dec bound (bad) ljmp je scas mov out xchg clc insb cmp jo rclb mov mov jge xor js xchg sub leave lock mov xchg ss add ret push cmp mov mov xchg inc cmp add rolb push inc mov mov xchg cmp mov add add add cltd xchg dec sbb jbe mov pop push test add mov pop fisttpll adc shlb jmp pop cli and cmp lods add aad add mov dec out fs pop sub out lock cltd js enter dec mov jo jb mov (bad) loopne fadds mov mov aaa mov jle lock test movsb stos xchg sbb and jmp in (bad) mov inc add cmp mov clc mov in (bad) shlb stc jge add pop (bad) cmp test jmp loopne repz les test andl push mov pop push xor add sub sbb xor (bad) cmp pop stos (bad) movsl add jle push insb xchg pop jne add movsb mov and in sub cmp nop or mov ja in cmp pushf add xchg mov loop mov adc mov shrl sub pop xlat push add push lret sub je lock add mov out push testb xor les loopne aad pop aam ret xchg std xchg leave dec and dec sbbl sub fcmovnbe jo pop loopne dec pop daa clc mov mov adc dec inc sarb mov xor imul add test push lock push pop sub mov out and es xchg (bad) mov jbe or das add cmp xchg pop imul sbb add push call sub cmp fdivrs das sbb inc cmp cmp dec inc neg loop push sahf add dec ss cmp or pop (bad) mov dec adc sahf mov inc and mov sbb mov xor movsb and sub das nop add in fimull lea adc sahf js adc or cmp or pop js test movsl mov and movsl movsb xchg mov or adc inc int adc dec clc mov mov arpl xchg xchg sbb ja (bad) lea sub jo enter pusha mov push xchg sahf out fcomps fist fmull add cmp cmp cld lods inc mov mov (bad) xchg nop sbb inc fwait add mov xor rolb mov sub add or jmp out (bad) and (bad) and pusha je inc pushf stc add sbb outsb cmpsb mov cmp xchg out clc enter scas inc les xchg test je mov jle loopne xchg jo call mov or xor pusha negl sub adc call push aaa cmp xchg and push push push das scas cmp dec inc test aas (bad) push dec fs clc nop dec adcb jno push mov and and fmuls dec jae test (bad) or mov adc incl cmp mov adc jo clc rcrb stc mov mov sbb mov mov loope pop lds or sbb ret rcrl fildl stos add cmp mov or incl xchg mov rcrb mov fwait inc sbb xor outsl dec mov jg mov cli lcall push insb mov cli inc mov in pop mov and ljmp jl or call ds sub nop mov xchg add das pop mov dec xchg add jns push pop (bad) and or or add cmp test sarl and das jg add adc mov jmp enter imul or pushf stc push or push (bad) cs std movsb sbb test out popa pop sbb fbstp (bad) dec fwait test xor mov jg cmp cmp sbb or push push rclb dec fsubrs push jecxz out inc mov add lods add jnp mov ja stos add push mov daa pop in add lods jg mov repz cs pop es push mov inc mov sub add lods sbb ret lods push sbb dec test and aam leave jo icebp icebp jno inc movsb xor clc mov mov mov pop xchg loop shl push and sub fimul jbe cmp cwtl and dec popf pop nop out mov daa fisttpl jp popf (bad) lock pop jmp push push jb mov inc (bad) cmp and int3 or dec add or js cmpl ficoml data16 jge les arpl add sti loop xor mov mov imul add xchg sbb cmp aas lea in addl les ja mov inc test push movsb imul rorl sub push jecxz rolb call sub sub mov mov test add lret clc xor std (bad) or cmc clc lods lock or push pusha movsl push push stc jge enter add or mov fbstp lods push pop pop jns enter mov adc jge cld fwait add push ljmp js inc mov sub dec mov mov jl push es xchg movl aam aam or enter decb shlb incb loop mov das pop jbe fisttpll shlb push test push rorl or or or xchg mov mov cli mov push xchg cmp outsb inc and sbb pop inc adc xchg pop repnz mov cmp push sbb push rorb push mov loopne movsb xchg jns xchg dec push sub adc cmp dec clc and and mov adc xchg ds jge stos fmul and add adc mov mov add jns sub xor dec loop inc mov cwtl inc xchg dec adc sbb clc dec and or nop das dec sub call add xchg aas out and jne and mov or cmp and js leave jmp sub inc lods or test mov xor imul adc call mov push cld inc enter inc mov fildll iret cmp ret xor inc mov pushf mov cmpsb jg int3 xchg xor scas xchg inc insb push loop push rol mov les lods add sahf ja jmp cmp ret or push adc std and orl jecxz pop add and (bad) sub xor addr16 mov imul add cmc sahf mov sub psubd js mov fidivr cmc push cmpsb lahf les in lods inc inc (bad) in or ljmp mov mov xchg and xor push sub xchg pusha lock sub xchg (bad) or push sti xchg jmp cmp dec sub jo adcl aad pop jnp in mov into pop je je pop ret nop faddl nop xchg sub push in mov xchg xor mov add js pop or inc roll into rclb xchg (bad) lret push cli jne loopne cmp sub and insb mov in xchg push adc cmp dec inc mov pop subb arpl loopne inc jae mov push or and or stos wrmsr adc mov adc push push sahf jp xor cmp xchg in push dec cmp mov bound mov dec add (bad) lret (bad) pop dec mov das pop dec stc cwtl add mov pop rclb adc or mov dec jne sub fwait pop add test fbstp add loopne lret and jle nop xlat or dec push add xchg ja jo dec (bad) push adc mov jmp mov xchg mov mov mov adc lcall add mov bndstx mov sbb cmp rorb int icebp jo imull mov pop push mov jge (bad) ljmp add pop sbb or add pushf rorl add xlat and aad cwtl inc pop mov inc mov add (bad) mov es mov pusha mov mov test (bad) add inc and and insb out mov repz (bad) pop jecxz dec enter or xchg test cmpsl add add cld jge xchg cmp sar inc push xchg js and or gs adc sbb sbb sub pop pop loopne in cmpsl mov mov pop stos int stc inc loopne push daa mov dec push das lock call sub xlat pop outsl loope fdiv das add xor mov add pop adc mov adcb mov pop pop cmp inc mov mov inc add mov add add cmp dec lods mov and nop shl fldcw dec lcall sub test mov xchg xchg xchg lods mov mov inc and sub (bad) fxch add je lock nop aad icebp inc in in sarl dec lea jb movsb rcll shrl mov aad cld ja test orb pop mov cmp call test add lea push call xchg pushf add lods das mov lock rcrb call push in daa testl mov ja push push cli mov inc xor jns or mov xchg sbb sbb hlt cmpsb faddl aad fadd sti ss mov mov dec hlt jge pop test test (bad) add jae les mov sub addr16 xor outsb (bad) leave adcb (bad) fldcw repnz imul stos cli or mov inc mov xchg int cmp pop fsubrs push iret enter pusha outsl pusha sub adc in ljmp pop pusha enter xor pop fs add sarb xor bound aaa inc mulb je daa push test (bad) xor xchg jno pop lock cmp mov add (bad) icebp in das fwait mov orb pop xchg cmpb dec inc bound adc das and and stc and push fwait dec and fiaddl out sub sar sub mov icebp cld mov fnstcw loope rcl xchg cmc stos rcrb cld dec sub mov and addr16 aaa add insl in shlb out and pop and xchg and loop sbb mov aaa and push add jg and mov inc inc loopne pop popa cs es bound inc in inc pop lods xchg jo in arpl (bad) sub adc add inc sbb xor xchg lock fsubrs push pop lock into nop daa and adc inc js or inc mov dec cltd cmp movsl mov mov xchg xor adc lahf dec cld pop fdivrl or test inc arpl sub subb mov cwtl out add (bad) jb cld pop mov or inc fidivl push xlat pop add dec sub adc adc fsubl int3 in movsb fist dec mov xchg xor nop sbb dec sub dec ret dec mov sbb cmp sbb fldl ja,pn pop (bad) jo mov sub icebp or pop aaa adc ljmp mov jmp inc aam add scas (bad) mov cmpsl sbbl ljmp mov adc aaa push add and fprem1 sub dec or pop insl pushf add dec subb push loope mov outsl sub cmp (bad) int3 dec ja jmp rcll pushl aam in movb pushf repnz inc sub or cmp movsb mov and dec sub inc pop out adc fs mov in add and rol subb pushf (bad) std mov adc dec mov fcmovu xchg xchg add lods pop cmp jg and movsl pop loopne fisubl sti orl dec cmp xor pusha cmp cmp adc and (bad) fimul push test xor ffreep adc push clc sub outsb mov nop add loopne popl out xor and jge xchg retw xor shrl lss roll pop arpl and pop jo add cmp xor adc movsl shrb enter inc mov or pop je add call and mov or cld stos and adc mov ds cmp mov in dec pop cltd aam add mov inc push ss in xchg addb sbb pusha cmp arpl mov rorl sub xchg add mov dec repnz nop pop xor pop pusha pop and das and sbb sub outsb xor push add cltd fucom mov dec push les dec adc enter arpl shlb push dec and fdivrl test sbb (bad) jbe add stc push enter mov ss push cmp cmp jbe out psubsb sub fsubr clc jecxz adc adc mov test scas nop mov (bad) xor push sub repz xchg (bad) outsl add cld mov jg mov inc int3 popa or jle fsub pop pusha fist add adc sbb push or and dec (bad) xor and fwait lods je or mov xor dec sub call js jbe add icebp bound popl xchg jo es scas nop mov add loopne fnsave and xor xor insb push and add clc lds in and xchg pop inc (bad) cmp into and inc test lock sbb (bad) call cmp lcall pusha push xchg lret popf sbb pop mov cld dec and add adc mov clc arpl out adcb push iret pop mov scas sub call pop not fldenv pusha in push adc push ds lock sahf mov add (bad) and dec rol push add mov fdivrs push or das scas fcmovne pushl sarb add jno dec cmp test pop sbb mov mov add ljmp lret push iret or adc adc mov adc sub jo (bad) jne cmc xchg inc jmp add insl arpl mov in scas sub or or mov test test push sub loopne data16 and or inc adc xchg add jae orb insl add xor jne test pop leave pop cli and testb out adc (bad) iret inc loope out inc daa add xchg movsb lret pop adc subb pushf stos push push mov les repz push inc inc add cld in jl jo and int3 ret nop inc test push pop dec inc sub add aam xchg dec mov mov push in jl cwtl mov inc adc xchg data16 dec xchg and mov mov cmp sub adc dec push rolb xchg or rcll arpl inc xor das subb dec sbb mov dec popa ljmp or sbb lcall addr16 (bad) notb dec rcrl rcrb xchg arpl scas push aaa inc cmp xchg pop pushf dec test imul mov mov cwtl and cld in pop and or int3 (bad) pop pop inc add cld dec and sub clc xchg pop adc inc or aas push sub mov loopne bound cmpsb mov mov (bad) ffreep xor fnstsw cmp cli pop dec mov mov in ja (bad) mull cmc mov test mov fstps add sub pop inc xor (bad) mov popa mov (bad) loop arpl add leave pop push jae jecxz add dec and or jne sbb popa inc fisubrl rclb test push stc add addps sarl sub stos pop adc lock and loopne or or cmovle scas xchg inc adc insb es sub push decb and xor and int3 pop adc jl add mov mov outsb mov jnp push sbb rcrb adc pop iret xchg pop dec les add cltd mov jl mov add lods (bad) dec or adc iret adc jo adc pop pop lods pop push (bad) lods add and imul gs add pop fdivl roll mov mov add sbb cmp adc adc inc les pop xor cmp and mov dec mov shll adc sbb add cwtl stos mov mov and fnstcw imul stc rclb sub ret nopl and lret stos mov pusha sub sbb (bad) add lret dec push loope mov pop add mov mov loopne xor test or mov mov sub mov sbb fiadd subb movsb cmp cwtl icebp mov jecxz inc jne cwtl loopne adc pushf mov add pop adcb out mov push aam daa add das vpsubb loopne adc dec sub and and out adc (bad) inc in sub sarl lods dec addl fs mov add sbb sub push ja sub loopne jge jne pop rolb aad ret cmp pusha lahf sub push add add add or and loope inc mov arpl push adc and cmp pop adc mov out sub (bad) or out test faddl inc mov test jle call mov nop shrb pusha js add or mov loopne fcmovbe cmp (bad) negb xchg cmc sbb subl xor adc lret add mov push jg popa pop push xor outsl or lods stos adc loopne mov and xor test js xor adc movsl shrl cld addr16 jns in mov add rclb movsl pop cmp dec enter inc dec push and and movsl mov outsl sub rorb shll test loope xor inc fs mov or mov ljmp dec in loope,pn add cmp daa jp (bad) popa mov clc adc and out mov mov roll mov inc inc nop shrb jo jl xchg cmp push test lea mov cwtl xor pusha outsb pop dec xor sub test and xchg jge adc mov adc fdiv aam mov xchg add (bad) xlat pop mov mov inc leave pop xor and lahf hlt xor and in mov mov rolb xchg flds jecxz mov pop xchg orb inc mov add push nop cmp sbb daa sbb sub inc xor inc xchg sub adc loope roll adc and movsb aam mov sub sub mov or push mov lock sbb aam xor sbb sbb sbb sbb jg xor or jo add and fwait add (bad) and pop leave fadds sahf push popf fild xlat add or shrl test mov push pop (bad) cs out orl orl or js mov mov push inc sub rcl pusha sub dec adc sub push adc clc (bad) add (bad) adc and jns lcall repnz push scas or add jge adc adc xor dec push add insl mov cmpsb pusha push inc adc faddl dec sbb fcompl inc jmp mov dec pop gs mov insl sbb mov mov and and mov mov call inc popa lods sbbl pusha rol je adc push nop push mov sub call cmp ja and roll jbe add add xchg scas nop orl stos inc (bad) movsb sti pop add in xchg call xchg add push loop mov clc std adc rcll add lahf fdivrl pusha push sub xchg inc or stos loope icebp xchg insl push or movsb xchg and fwait dec popa out dec push sub add cwtl popf push gs push movsb imul test or adc call sub lret hlt inc sub or sub mulb in int3 add scas sub lock out add ror adc mov test dec sub mov aaa loopne xchg rcll lock xor or xchg in adc xor mov add inc (bad) push xor pop mov mov sub jle cwtl xor ss lock pop inc js sarb ljmp mov out dec imul in pop loope jno adc inc imul push push sbb mov mov sbb mov adc movsl je xchg nop cmp mov inc or mov pop andl in (bad) adc mov cli or rclb sbb xor jmp aaa xchg sub mov aad or sub mov out xchg add push push xlat lcall pop add jmp les testb sub jl imul test xor sub into cli sub adc pop jno dec xor (bad) imul sub rolb inc movsl mov les fstpt or clc adc pop adc inc cmp mov mov insl add popf or add dec sbb xorb fistpll xor mov lret add sub xchg lds aad enter and inc mov loope mov (bad) mov es das loopne push (bad) fldl2e rclb push outsb daa enter add dec pop jae rorl push pop addr16 jnp inc adc jno lds les pop push nop fs xor mov adc sbb push sti loope scas enter repnz test jp dec add pop pushf add in pop clc jo adc clc inc mov dec in jp or xchg xchg sbb or orb rcll jg jbe xchg out sahf lods push in movsb mov out add and std in and das jno stc mov (bad) mov test sahf sub xchg cld pop loope or add adc mov cwtl sub mov addr16 pop flds mov mov pusha ljmp fwait loop fdiv mov sub sub cld inc fmull xor or xchg or sub pushf and lods jno and sbb or inc in inc adc add movsb fcoml and adc and inc xchg or sub sbb inc test add shrb inc js mov push cltd fs add inc add cs data16 jo movsb pop pop push pop jmp sub xchg add inc loopne lods mov (bad) iret sub mov dec mov xor fcompl jl add lret push popa mov inc jmp sbb repz and loope sbb stos (bad) imul repz mov call pop cmp cmp and fbld out test pop popa mov and inc mov jge xchg sbb adc adc push cmp xchg test pop pusha pop cmp (bad) subl ret test adc adc bsr test (bad) sbb nop sub mov cmp mov add jmp mov cmp sub push mov sub lret push add out repz jmp shl jns adc mov cmp jge andl push inc add mov icebp add xchg das leave roll sbb leave shr test pop inc adc inc out and sbb je sub sub ret sbb sbb into test mov sub xor test cmp adc mov inc orl or fldt sub push sub jbe lods and sbb lds jmp add xor (bad) fiadd dec and push shr rol xchg (bad) adc inc and testl out or mov fist push adc in dec add sbb mov mov pop lret gs jmp leave daa sub cmp ret mov ljmp xchg data16 push fbstp add xor xor ljmp inc adc jbe push notb or movsb fiadd mov negl orb mov hlt ss (bad) mov and mov and and add jo sub mov xor iret mov jmp xor cmp ret add xchg pop sbb mov adc aam iret jp insb sub enter add in adc xor into cli mov repz or push mov add and icebp aaa outsb mov jmp lods mov mov hlt je sub fwait test dec xchg popa adc dec add add sub es aaa mov stos dec ds adc or push or decb adc sub dec enter (bad) and cltd aas push add dec push xor or add add jmp push push add pop xor xor lret adcb shll insl sub push push jecxz inc dec xor (bad) dec adc aaa sub push test cli into cltd cmp dec ja sub mov cmpsb add mov cmp icebp fs dec add and inc movsl test adc add icebp out xchg add sbb xchg into inc nop das pop pop mov xor mov cltd dec add or xor jb dec fildll and movlps push jbe mov gs movlps mov cmp and mov xchg add mov dec and inc add xor (bad) xor shrl pop test sti into dec (bad) xor add in mov cltd loop iret sti mov clc scas sbb sub xchg stc aaa mov (bad) es dec arpl or inc cwtl inc push pop mov out sbb gs add sahf shll in add adc sub notb dec dec xchg ret add nop pop test xor out xchg jecxz xchg ds dec pop or dec (bad) gs (bad) divl adc inc fs int3 faddl iret cmp and lret fsubl xchg mov xchg test xor dec jo cltd jae inc dec sub or shlb lret lcall inc pop out rorb mov push cmpsb cmp xchg pop pop add mov sbb insb or xor mov or sbb and test clc icebp test lret inc test xor sub xchg cmp repz sahf std and les clc fisttpll cmp ret xchg iret fisubl sub pop dec add sub fs icebp mov repnz mov push mov sub or xor jae sub testb pop dec fbld mov sbb add mov pop popa mov push repz sbb insb fidiv add sarl gs outsb push push xchg xor or lock or xor or push push jmp mov es (bad) cmc inc jne test jmp xor popw and pushf mov mov rcrl nop xor lock cld add lods cs leave sbb (bad) or call cmp and cmpsl add (bad) mov add mov in ja inc push pop and sub into pop add mov pop and subl adc xor (bad) (bad) bound lds and pop mov jmp mov inc lods push iret sbb xchg es and ret mov pop cltd sbb or or add dec out inc movsl mov xchg es ja ja cmpsb aam out inc inc popa jae sbb bound jmp sti pop stos mov xchg xor mov xchg sbb dec sub test iret out or sub data16 out xchg inc mov mov stc add jecxz dec xor xor sub adc enter cs xchg idiv lret lock adc leave and flds cmpsl push adc cmp iret (bad) fidivl leave mov leave mov adc cli push inc sub lds mov sbbb rorb std stos fs xor sbbb xchg (bad) test lock dec mov push pop sbb or lret popf cmpsl adc xchg or xor (bad) xor test aad imull mov or inc roll add pushf in pop mov (bad) int3 jb pusha cld and sub sbbl push sub ljmp lahf out (bad) out inc or xor mov and pop inc mov adc push sub cmp jo (bad) dec lds xor push mov mov rolb add es mov mov xor xor leave out jl xchg sub dec cmp fidivr pusha sub xor cmc mov xchg nop or add xor iret xor bsf mov or int3 mov cwtl cmp adc mov and mov out shrb push sbb loopne ss pusha sub (bad) icebp lret or pop data16 pop lcall dec sbb adc fwait push fdivl imul sahf and ss fdivrs pop je add or pushw and sbb (bad) mov je pushf repnz or jmp push lret pop sbb shll pushf inc subb pusha arpl dec orl (bad) jmp add mov pop cmp test in cmp or test dec cmpsl add (bad) pop sub add or insb and mov add cmp mov int3 or dec adc mov clc xor rcrb add enter sbb int3 adc scas jp sub lret out sbb sub inc or mov xor repz push sbb stos pop shlb jmp mov sti xchg lds test xor movsb jp jecxz lcall jge xchg lea cmp je daa mov jnp fisub daa mov loopne fs aaa mov or xchg jmp xchg pop jmp ja and jne pop sbb int xor dec pusha xor dec push pop sub xor test add sub out mov in push and fsubrs lds movsb shll rcrl sti nop sub aaa add je dec xor xor lahf lea les pop daa add insb push mov fs daa (bad) xor mov mov xor icebp push inc mov rclb mov xchg test xor xchg lret aaa dec xchg pop fldln2 and mov lock aad xor push and and in xor je pop cmp rcrl in adcl pop call dec (bad) aad jns (bad) mov aam inc and mov or int3 cmp pop repnz popf (bad) cs or mov or sbb jg push shrl dec sbb xchg add into pop pop xchg mov mov jb sbb pop fcmovb sub sub add xchg fbld lea idiv int3 jge dec fisttp xor xchg cmp movl pop sbb add sahf rcll or mov outsb xchg fist sub and xchg fldcw cld orb shl mov fsub adc or adc mov xor push sbb pop bound rcrl xor push push test mov or fidivrl pusha lods sub mov icebp negl adc shr jmp add or jo xchg pushf jbe jge jle and outsb push dec sbb mov mov nop stc cmp xor xor xor inc jae test sub popa ret es mov sahf adc sub pop (bad) leave lret sub adc pop test out add and cltd mov or jbe in fmull fmuls pop fldt aam fsubrl insl add pushf andb add or mov xlat mov mov in cwtl pop xlat or cmp jg popa je push movsl dec int3 cmp lret sbb pop pop cmp add sub sub add dec lret fildll repnz xor xor cmp in push sub je int push xlat add and (bad) dec pop xor dec cmpsb xor bound test or pop mov mov adc adc sbb and lcall jp or in shrl pop ficoml push test or jge mov fwait (bad) icebp add cwtl dec (bad) jl sbb push mov jmp cltd inc jecxz mov adc sub push add adc sub lds jge sub add or sub fmull incl (bad) mov insb jge or or sub adc mov pop or gs jne div sub sub into imul ljmp xor adcb jmp pop lods inc xor daa push dec jae call imul jne aaa lret mov adc lret mov or sub sahf movsl pop jp lods sbb enter aas inc popa adcb mov (bad) data16 cmp fwait mov mov leave dec orb in pop dec dec mov retw loop jl popa fldenv (bad) xchg (bad) mov js xchg inc push jo pushf mov loope or out sub jno es mov nop add dec add dec decb pop jns pop sub inc xor mov cli stc aam leave or mov leave xor arpl fist ljmp xchg push xchg xor ret fsts (bad) pop and sbb sbb gs sub mov add sbb adc mov dec out cmp and push fiadd and mov fs fidivrl ljmp pop sbb sub xchg cwtl jmp rolb mov xchg push outsl ljmp aas and lods jecxz mov inc das arpl jbe cltd mov jmp adc add icebp pusha es shr (bad) shl cs (bad) insb dec fcoml or mov adc xor push add lea sub cmp cwtl lret outsb fisubl xchg cwtl push add push pop aad enter cmpsl inc mov xchg aas das cmpsl (bad) dec ds push pop pop add inc ljmp in loopne data16 jnp sub add pushl xchg popl sub scas add xchg or add (bad) inc xchg adc mov pop (bad) out xor mov out mov inc inc sti shr xchg sahf pop (bad) jmp mov jno mov lsl sub xor gs in or leave fsubrs xor aad mov xchg les push fisttpl cmp jbe sbbb rorl and xor xlat stos jne adc movsl jmp dec in ficomp sub ret outsb repnz xchg or cmp or imul cld pop fist add dec or pop test or lds adc in pop stc popf outsb outsl adc lea cli push inc (bad) lahf fstl and mov loopne rcll xor in sbb movsb xlat pop clc mov addl imul aas inc jmp aam addr16 loope and pop test add cmp inc scas loop das jne mov andl xlat mov leave into jno inc xor inc and push dec dec sub inc push cli shr xor sub int3 mov add insb ret add fisttpl shll add out popa test call icebp lret or dec add xchg push mov and xlat (bad) in (bad) lds sbb sbb daa or pop mov pop pushf gs iret or dec xchg or adc xchg pushw jns daa ret sbb xor xor sub orb mov xchg jne mov out push xor cld sbb test jmp das jl iret repz xorb (bad) mov into push or cmpsb das divb dec shl mov mov jb pop dec jns and push sbb add pop ret and jo xor sub mov pop and add inc lds add fcmove push jns imul (bad) lret enter popf lods out dec out rclb stos daa les jno fwait aaa dec shr pop cmp adc inc imull dec aam (bad) xor jl jno or cltd adc sarl pop call and or pusha cmp out mov or push add popl daa push outsb (bad) or aad xor mov mov cmp jle and lods xor js or mov testl mov pop and inc or and lret sub movsb rclb call jecxz push addr16 call leave dec stc jns xor bound lret jno movsb sub pop jecxz mov sbb out pop aaa xor leave fidivrl (bad) mov inc xchg sub xchg ljmp adc sub mov cwtl add sub sub sub (bad) add xor fxch orb and push xor adc pop (bad) mov call dec loopne ds xchg (bad) mov inc or popf pop push mov ja notb lret leave xchg repz cmpsb xchg pusha sub or in mov insl push and cmp movsb xchg or push and and lds aaa es adc stc daa push xchg popf jp,pt add adc push je loope shlb add inc cmpsl push and mov outsb or jmp sarl or jne popa mov jg movb jg (bad) xchg scas jno or adc sub mov mov in sarb xchg sub xor adc iret push mov sub mov sub mov int sub (bad) xchg dec sbb inc push or xor push inc negl js jg jecxz lds pop add test nop in pop or pushf push test mull mov nop iret pop xor mov ret and xor sub xchg rorb xor mov les inc ja in xor jle bound (bad) aam imul inc ret dec xor or out dec data16 dec or mov dec adc mov icebp fs sbbl jno and imul aam in lods xlat loop push sub pop ficompl sbb stos jne loopne out xchg loopne jecxz xchg lds mov and (bad) mov inc jns inc sub daa push (bad) stos inc ret and ljmp scas add add movsl xor repnz xchg out add cmp rolb cmp xor or cmp or sub jecxz dec mov adc add decb jmp fmuls jmp sbb flds out test lock fsub or imul nop jno mov xchg xor pop ret notb xchg adcl add or (bad) mov cli rcll outsl inc test scas sub sub mull sti xor or mov out add jp ja mov ljmp pop xor enter and xor pop jg (bad) sub or lret cmpsl dec inc je and or push xor flds repz or and nop cli add xchg sub xor or outsb xor movsl mov xchg sub shll mov pop call mov ss lret mov stos adc lods jle mov (bad) outsb or pop push xor fwait xchg bnd mov into mov sbb jl gs adcl clc adc jmp imul lcall sub dec iret mov shl outsb adc or ret pop and and add cmpsl fs or or shr fnstsw dec fbstp dec dec in xor or push mov mov (bad) sbb jl fnsave inc pop and test sub stos xor mov sahf popa loop ret and outsb das (bad) fimull pop sub xor fsubs jp pop addr16 sub push push pushf out sbb mov push adc jmp jae sub ret inc jge sbb out jo mov add pop or mov popa call mov pusha sbb sbb pop mov dec xchg lds or adc sub (bad) dec xchg int3 fcomip cmc movsl cmp inc xor or xchg pop mov push add cli into sub xor out sub gs and (bad) mov xchg int3 (bad) rcll int adc imulb mov push pop mov sbb cmp cmp jle push push xchg adc xchg inc gs pop out das adcb pop cmc gs aas ja in scas fs xor xchg adc mov (bad) fs cmc xchg sbb subl outsb (bad) pushf testb mov pop or mov dec and adc add sub xchg inc test jbe mov xlat scas or into push rclb cmp sarb push cltd sti cmp dec and lods fisubl sbb lcall test jae in loop xorb mov mov and sub push out pop ret mov cmp and (bad) mulb dec movsl ror dec xor push add rolb test lods cmc mov fdivl mov sub mov outsl leave call lods ret jecxz push xchg in add or inc dec shll enter mov push mov add pop nop test das fs mov mov or dec cmpsl pop dec jecxz (bad) sub dec pop xchg jg sahf inc xor push cmc daa add cmp or add mov or and pop ljmp jb sahf shr xor adc add subl leave inc (bad) jmp outsb mov xor or mov xchg jno leave inc jg testl fucomi (bad) and adc add mov push into pop and stos dec loope maxps in add data16 rcrl negb inc (bad) push dec sbb push sbb in sub xor insb push fs or or int sub pop adc push xor sub and out fwait out xchg iret gs mov sub mov sub inc (bad) and ss or pushf jl data16 sahf ffreep add dec mov push dec pop popf cli cmp mov xor sbb das (bad) add lods mov fisubrl mov stc movsb cli push lock call add pop mov out xor repz xor dec or mov mov jge (bad) mov jl in inc mov push push sbb pop mov sub data16 fwait lods mov pop icebp enter out mov repz sub cmp and popa sahf sbb and mov sub sub or cmpsb xchg sub mov push into adc xchg je jecxz or add mov fdivs mov pop mov push out xchg and mov mov sahf sbb adc in int3 push pop add pop daa mov and and mov insb (bad) dec es out sub xlat dec mov add out insl sub xor lods (bad) mov xchg into in mov fist and mov xor lds adc and mov mov mov jmp xchg out (bad) mov jbe add inc mov leave sub xchg add aaa jno xor movsb jmp inc ret xchg dec sub xor inc stc inc ret pop xchg xor or (bad) jbe sbb inc or and pop rol or popfw in inc xchg testb sub (bad) mov push or les lret sub cltd sbb push xor cmpb in (bad) mov les pop gs push loope sub pop popf pop insb push movsb xor ffreep inc sbb xchg lret xor addr16 mov jl pop mov push cltd xchg cmp xchg test pop mov push repz ljmp lds fs sub cmpsl ror xchg sub fdivrp jno cmp mov sub test xor aaa sub add mov adc sbb and dec push test adc sbb sbb pop pop (bad) jb mov add loope fld fs jmp mov dec das dec mov dec jp mov adc sub mov sub (bad) leave test test cmp inc movsl in ss push jp test mov cmpsl ss pop pop fmul jnp movsl push push add sub test in (bad) inc add push sbb movb mov push pop (bad) push pop jno mov pop repnz in jmp iret push add sub sub movsb mov or mov mov (bad) dec mov ljmp and in xchg mov leave jle jmp jnp add dec or lcall jnp lods sbb cmp mov jno leave dec add int add cvttps2pi mov sub cmp ret aaa push mov (bad) call stos or sub lock mov or and sub lds push test icebp fsubrs ficompl test test mov loop xchg int push mov push cli push cmp inc cmpsb add pop mov xchg dec mov inc in das in jnp xchg inc (bad) mov mov jno mov adc mov dec rorl pop and mov rcrb inc popf pushf es (bad) xor out pop xor icebp mov mov xor add cmpb int cs xchg lret pop pushf rcll xchg xor ret aaa mov add push or xor (bad) dec outsb cltd repnz movsb add mov adc cmp movsl or sbb pop or rorb mov mov sub dec outsb inc sub or and or decb push cmp xor adc lds push fldenv mov jecxz or (bad) mov xor and repnz out and mov into in sub xor int dec clc (bad) testb push xor popf loopne loop xchg or add push jne lret or push mov (bad) call or pop push cwtl xor or shrl mov das push dec dec add push test lcall fsubp test push mov insl jl popa mov imul dec pop (bad) or push xor fwait xchg and adc movsl inc cmp push daa adcb sub daa inc pop mov jle aam (bad) ss dec (bad) stc jg or mov dec fidiv and mov mulb insb neg nop xchg testb xor add mov (bad) push lods out xchg in and or pushf and (bad) (bad) fyl2xp1 cmp in inc aam pop in mov mov iret lds scas pop push adc pop jnp sahf sub mov mov shr imul pop mov xchg mov add jmp into outsb das mov mov add bnd rorb xchg dec xchg pop daa outsb lea lret into dec mov xchg mov jmp insl leave xor pop or repz sub xchg mov lods loop inc icebp mov mov gs repz dec je (bad) cmp add out pop sub mov call ret pop daa push ja pop je inc xor mov movsl mov imul push loop mov into out cmp inc adc dec mov lods outsb out and push and or sarb ret test lds mov fisttp inc inc (bad) (bad) enter pushf cmp mov jno (bad) iret out sub jp xchg mov dec dec ret push out (bad) leave (bad) sti or pop clc or pop dec mov adc jge daa negl cmp mov iret sub and push sub sub pop dec xchg daa out in cmpsl sbb add jbe bound pop int3 imul rcr int3 inc out xor and pop xor test add cwtl (bad) into mov sub insb ljmp adc dec jbe or or ss inc or cwtl dec pop divl inc loopne mov xchg leave in cmp jmp jno inc push sub xor adc adc cmpsl dec adc dec push xor pusha mov icebp pop sub hlt out andb idivl dec roll push or std cmp add mov (bad) cmp ljmp xchg dec pop jge shll int idivb sahf push icebp test mov inc idivb imul mov cmp out shrb push push and push pop pop stos push icebp out (bad) cmpsl mov sbbl pop add adc pop cli cltd adc and xchg mov mov sub mov lods lret mov cmp xchg mov lcall adc inc pop cmp or xor jecxz sub cmp data16 dec popa lock sub insb leave jg xchg imul (bad) sbb dec int cmpsb jbe lds mov and sub (bad) lds lods or (bad) repz loopne icebp rorb push inc daa xor and inc daa cmp jae push and les (bad) jno sbb inc sub (bad) jno cmp imul jge popw dec adc mov and ret or fsts ret xchg mov ret repz xchg add call pop pushl test popf shlb loope xor lods scas xchg add mov (bad) sti mov mov cmp leave cmpsl add xor pushf orl or lea je lahf adc adc lahf adc xchg add mov mov addr16 adc mov cmp xchg and and pushf jo pop (bad) mov cwtl cmp jae sub (bad) movsb pop jmp mov aam outsl sar loope or jae adc sub sub xchg test push dec cmp push add ss imul and ficompl hlt fwait cmp push sub enter push lods shrb call sbb xor rorl mov jo,pn add jmp push leave (bad) leave (bad) ret outsl push (bad) clc add mov cli add out xchg in cmp gs sbb pop adc out sub adc test in sub sbb push bound adc fbld sub fnstcw dec pop popf out sub or (bad) decb xor xor movsb scas (bad) rcr inc or ret fsubrs rcl mov test jo add xchg orb mov (bad) push shrl pop inc jp cmpsl xor or test mov leave pop mov (bad) cmp add out shrl enter mov inc push or mov jo das and in imul mov xchg xor sti dec add jmp js aam das lods movsl dec es sbb inc scas inc sub mov dec mov inc std sub mov imul movb and adc mov mov aaa cli inc lret fcomps push push pushf inc in cld xor jmp inc (bad) adc ljmp daa fcmovnbe mov repnz cs mov push push push xor lock xlat dec idivb test sub pop iret mov sub icebp push or mov inc add rcll jns (bad) mov dec dec dec sub data16 pop push stos mov xchg int in mov inc cmpsb stc lods js mov icebp mov adc scas add xlat add mov cmp push cwtl mov mov and scas push jnp inc lcall jno pop gs push paddusw pop psrad xchg mov push jo imul dec cmpsb ja inc dec sub mov call push cmp adc out cmp out xchg repz daa jmp inc lahf mov mov jbe inc and mov (bad) (bad) jl push push mov jge or pop ret cmp dec enter adc xchg out pop adc sub push imul pusha mov jns js sbb mov addr16 sbbb pop test sbb icebp inc xchg jo sbb mov dec out lea add das lods sbb lock dec pop dec int and dec xor push arpl sub lret test (bad) or pop scas push ljmp or scas xor fsubrs andl stos lds mov dec (bad) mov push push jge sahf icebp jae adc sbb or cmp inc xchg (bad) dec and cmp mov sub jbe inc test jmp xchg add movsb sub mov or mov repz and data16 mov mov pop repz add or mov cld in test and fisttpll and push and aas je jmp insb negl xor data16 jl pushf jno mov imul lret inc add sub mov jnp cmpsb jb or pushf mov sub and and inc roll fdivr pop call sub add lds lahf aad mov lret dec xor jle or sbb jg cmp ds imul pop mov jno scas push xchg popa fwait and cmp aad movsb repz dec xchg js inc (bad) or into and test sub icebp js lret adc cmp add xchg pop push add int3 sub pop iret adc pop sub add jmp pop fpatan add in pop or sub xor or xlat cli or pushl fistp pushf push pop mov mov das or jb pop lret loope cmp mov (bad) iret mov cltd iret jb sub jo mov loope stc arpl sub jl xchg rcll sub (bad) mov and inc pop and mov ret nop pop mov xorb enter loopne ficom cmc push fwait popf lods cmp lret add sbb pop clc inc das sub sub leave pop (bad) decl jne pop push iret jl push loope mov sub or mov iret imul or (bad) lret push mov je xor shrb je lods xor sbb movsl push (bad) mov inc add fsts imul sub stos sub out xor jmp mov imul je or mov not dec mov xlat mov jmp xlat lcall test movb mov pusha addl fwait outsl add push es pop push mov adc add imulb or add pop mov mov adc and test mov test lret fsubl (bad) je xor aaa sbb dec das inc sbb xor scas cltd outsl ficompl dec sub sahf insb mov inc dec lahf xchg or roll adc popa inc mov dec call int mov jo popf out mov xor lahf (bad) adc (bad) hlt xor jp xchg jl pop pop and jp or sub mov ja out xchg cwtl lods adc (bad) mov or mov mov push xchg inc icebp outsl testl add xchg clc mov dec ret inc or xorb inc push repz sbb addr16 adc cmp or dec mov pop enter jmp inc jae sahf xor push and push adc clc daa (bad) fmuls xor or dec fisubl or mov add (bad) pop jbe dec fsubrl pop sahf xor sbb cs sub mov int3 mov pusha repz push pushf mov xor mov (bad) bound mov mov mov cltd push lcall loope adc movsb pop sbb into add inc (bad) mov mov xchg stos or fldt sub add or pop or out pop or sub pop dec mov sahf (bad) mov adc pop out jbe mov pushw dec test dec dec or dec movsl adc xor xor and aas inc fwait cmc xor push ret and xor and inc mov xchg add and mov cmc or add xor in popf mov imul inc sub inc jmp sbb rol shrb jns or sub push or test stc sahf inc mov jae or pop push adc insb mov cmp jbe push rclb and cmp push arpl push (bad) xlat std cmpsb mov idivb adc adc add (bad) xor xchg divb or (bad) idivl aas out and jne mov imul mov mov sbb (bad) leave pop cmp pusha outsb lahf push dec sbb add jo and dec ds and dec repnz jmp lret in and mov adc jmp adc dec leave shll fisttpl cltd and pushf lods xor xchg mov ss (bad) call jmp shll mov cli pop data16 and mov ljmp lret add bound outsl sub sub mov or sub pop outsb sub fildll xor ret add sub fisubl lret sub push movswl out dec add cmp xor ret sub stos bound mov das xor and jle das lret daa pop addr16 or sbb push and stos mov and sub pop dec insb repnz xchg add xchg xlat or xchg outsl mov or and testb mov add xor (bad) adc push in inc je cmpsb outsb jns popf sbb cmpsl xor out out repz roll pop out xor and or sbb mov (bad) pop dec dec adc mov push sbb mov bound ja fs shlb dec push adc add mov sub xchg jnp fcoms dec fcoms mov hlt xor or cmp iret and fdivl mov mov adc and mov dec adc aaa rcrb mov or or xor shll adc cltd test mov dec rclb sub inc sti xor sbb xchg repz ret popf push cmp dec movsl pop das sub repnz pop xor xor sub or adc call clc fdiv dec pop or fbld (bad) in cmp fnstsw adc mov push add or xor adc mov add mov add dec insb lea lds ret jns sub add pushf sub jo pop and mov pop push mov scas adc loop sahf adc mov add push sbb xchg repz pop add mov aas cmpsl or xchg test push cs js mov (bad) xchg shll push cmp jl ljmp pop xor insb jmp into pop test sub aas cmpsb aas inc rorl and xor adc rcl xchg pop (bad) mov imul xor icebp int sbb les sub enter rorl pop or xlat sub repnz mov or ja inc xor push push mov push in dec stc dec test daa sub jl adc push or ret cmp data16 out add xor (bad) xchg mov jl daa mov je add ss jmp stc jnp mov (bad) mov xchg rcl dec mov (bad) mov jle sti or cmp rclb xor and cmp (bad) xor (bad) in cmp pop jnp xchg movzbl mov cmp cmp loop outsb sub (bad) clc and xor orb aad or (bad) ret sahf je push xor adc xor gs inc movsl enter in adc bound sahf cmpsl pop pop int and out or cmpsl out xchg push pusha data16 ficom jmp jmp in mov xchg shll pop inc adc fdivrl jno movsl rcrb and int mov (bad) sub test or xchg sbb (bad) pop and mov xor movsl adc rcrl insl repz (bad) lret push jle sbb push add out das bnd out leave pop mov sahf adc mov dec mov mov test mov lret adc and push cld add mov (bad) not or sbb aam stos clc divb lcall mov xor dec ret ret jo or add aad test mov inc xchg les insb mov or cli lret and mov mov add jno mov ret cmc push rcll jmp cmp cmc shl xlat dec sbb ret test rorb mov shl orb pop out mov xchg sub aas xor iret xorb sub shrl outsb lret out clc xchg fcmovnbe sbb es dec dec push mov xor pop inc repz ret add stc dec in popf mov iret js add call aaa out lahf jae popf loop push daa inc add push push sub repz xchg adc adc ficoml add sub or xor stos leave push gs jmp adc pop sbb jo jmp xchg repnz mov ret decb jne xchg ficom icebp push jecxz adc aaa clc push mov daa sub inc test and adc mov xchg mov (bad) dec jbe data16 shrb and mov add dec cs mov int3 fcoml mov mov add xor jb je dec divl inc rorb mov movsl fbld insl mov pop mov push cmp insb inc or sub dec push loopne mov adc repnz lcall dec in dec pushl std mov pop cmc push push mov jns sbb add fptan mov add mov ljmp shrl ret jb mov mov movl (bad) stc test sub xor insb fild out sub pushf xor (bad) sub jecxz inc (bad) cmp inc jmp or out add fwait push push nop and and mov dec and xchg addr16 cwtl sub push mov cmpsl cli cld adc stos or fistpl int3 sub dec add sub addl add pushl nop xor (bad) jp aam lahf sahf jno dec es clc data16 pop sub mov (bad) jbe dec in cli leave ljmp stos repnz hlt push stos ljmp mov fsubr pop push lret add push ljmp mov xchg adc add imul js lahf adc cwtl dec popf icebp xor mov outsb add ret sbb dec data16 mov sub sub sahf mov jg cmpsl inc mov pop xchg pop (bad) xchg adc sbb pop or (bad) mov sub ljmp in sub jmp stc mov scas xor or and pop xchg (bad) or mov pop inc pop lret ljmp adc stos sub xor and scas and inc sub jno (bad) or xor shrl loop push mov outsb push dec sarb ffree sahf xchg (bad) mov and aad lock mov jp stc int3 icebp leave dec and inc and (bad) xchg xor and adc call pop mov in push in xorb xor and jae scas cmc (bad) clc or or emms inc clc loope call les jae jecxz and pop movsl out test popf lcall dec (bad) in add (bad) mov scas enter ret movsl out jb cmp adc lcall aad stc (bad) or xchg loope bound rclb pop shrb mov mull test scas or dec inc mov or inc fldenv movb inc mov (bad) int test add or add imul jg (bad) jecxz adc sub pushf ds and leave add cmp mov lcall fldl call loope enter pop lret xor popf adc sbb push sbb add sarl xchg inc mov mov daa inc or stos xor inc push mov pop xchg fdivs inc xor (bad) jg add mov jl push and mov clc jg push mov jecxz ds imul enter movsl pop sub adc push fidivl push and push imull xor push lret gs or int3 pop push and das xor loopne test (bad) mov xor rcrb and xlat negl icebp jge and (bad) mov je add fs xor ret push inc dec and mov pop mov and push mov (bad) or push (bad) mov or jecxz inc addr16 sbb movsb fcom or repz in out into pop addr16 (bad) xchg lds (bad) push fnstsw lret mov add inc adc sbb mov sub or fs jb xor pop out pop or mov sbb pushf inc sub jno aas cwtl jae clc (bad) add push call lret lret push pop xchg dec popf cmpsl subb or das pop (bad) iret outsb add (bad) sbb cmp (bad) xor or mov in ret test jmp stos xor repz sahf push gs mov ret movsl inc sarl sbbb test mov in icebp xchg int3 ljmp bound sarl movb push test mov dec and out add jl adc lock fs or add popf mov xchg dec fldt push dec xchg div sbbb pop mov es das (bad) pop mov pop lahf mov icebp ja push repz iret dec jl out mov add test jle (bad) adc cmp stc xor lret fnstenv dec jg add jno xchg ljmp add icebp je jbe jne call and jne cmp scas mov lock outsb ja rcl sub pusha repz or adc loop rcll sbb out dec and cmp mov shrl sbb xor std xchg xor xor or daa ds in out dec mov sub or int jbe dec mov inc push dec xor push lds pop sub cmp dec add shrb or ds dec xchg add mov repnz adc pop dec jmp out cmp fisubl and outsb push lahf fstl (bad) repz mov sub sub xor ret pop pushf xchg xchg enter jle loop adcb (bad) xchg add fadd jg push sbb pop add outsb lret fldl sub cmpsb ss add push pop mov dec mov dec ds outsb in cmpsl aam les test xchg dec jmp jns cmpsb fidivl lods xchg jl xor fldenv dec cmpsl pop das or or (bad) push into pop out mov imul cli xchg xlat rcrb ss jne popf das rcrl mov pop cs mov stos fwait leave dec jnp or clc ret in jns pop or ret sbb and mov test in cmpsb in mov or pop push pop mov cli ficompl and cmpsb repz cmp mov in pushf pop into cltd mov jnp mov dec loope sub movsb stos enter clc cld jo lds mov imul or clc leave cmpsl mov xor cmp sub mov popa jle jmp sub xchg cmp push (bad) pushf iret add dec xor push (bad) je cld mov mov orb add xor cmp and ds mov or das xchg cs lock lret pop movsl rorb (bad) mov mov int3 in stc out das mov test mov int aas les mov call dec daa sub icebp cld bswap sub mov jmp rcrl push ds mov cmp lret mov lock xor xor inc aaa lret in (bad) dec sbb mov dec neg mov mov jmp dec sub pop xor fsubr into inc sbb dec (bad) mov push scas daa pop sbb sar xchg mov dec ljmp stc cmc ljmp ljmp int jbe push int push xor jmp add jecxz jl add and or push mov or push mov inc popf xor mov pop lahf mov cmp xchg (bad) mov shrl xchg inc mov mov mov dec stc ret mull pop mov lret mov cltd dec (bad) jmp push pop ret jle popa dec or (bad) jge sub es xchg sub fnstenv cmp and adc add scas or leave mov mov mov xlat and sub repz das out shr lds mov xchg lds test add or test pop int3 adc adc pop lret push sub or sub repnz jne push add fimull clc (bad) jp shrl and testl sub cld push in lea xchg outsb dec lret shlb sub xor inc imul gs int orl adc adc es push inc xor in jne movzbl insb insl mov cli jb pop ret repz mov sub jns mov (bad) stos xchg fcomps addr16 daa ljmp into out dec test jmp cmp ss jnp push mov cmp mov loop emms sbb and mov and (bad) ja or cli (bad) paddq aas inc aad sahf clc test (bad) sub fwait sbb dec add imul cmp enter ss add cmp js negl ss cmp cmp cmpsb mov popa mov bound pushf shrl incl xor xlat jl in dec fnsave test cmpsl pop test xlat cmp jb dec sub add push clc pmulhw or xor mov mov xchg add (bad) call (bad) dec jnp or mov shl mov mov pop xchg idiv sub mov xchg sti stos jne xchg stc mov pop lods push mov push mov jl arpl sub xor add hlt daa sbb mov pop test jae das cmp sub mov (bad) pop add pop pusha pop and mov pop and xchg leave mov cmp and push jmp and outsl adc mov adc push add mov sbb inc and (bad) sub aam fs fadd or out inc sub pop cmp jno xor pop into addr16 iret mov hlt sub mov sbb add out xchg push gs push mov pop adc xchg mov mov cmp inc inc mov push or mov cmp (bad) mov ljmp pop pop and xlat xlat mov sub mov cmp sbbl out and lret sub int3 sub stc and imulb sbb mov dec ljmp notb (bad) into push xor xlat mov out ret push add sbb pop lcall rorb ljmp push lcall mov and and out pop stc fs add pop int3 fnstenv xor (bad) repnz adc lret xchg je mov mov or dec jns sbb dec out xor adc test ret setle push gs (bad) out ret sub (bad) sti pop pop add outsl pop je mov mov mov cmp fucom pop shll das cmp fsubrs cmpsl pop add push mov popf push adc jmp aas mov mov xor cltd outsb (bad) hlt sub imul or pushf and maxps cmpb (bad) mov and dec mov addr16 mov cmp in idivl adc sub ss pop fmuls xor pop mov fcmovne movsl inc rcll test ja ret pusha cmpsl pop mov in arpl sub and rcrb ljmp je inc dec xor test add movzwl subl mov enter pop popf call into push dec aas jns movsl (bad) xor movsb mov pusha fisttp sub mov dec sbb fwait mov xor aas cmpsl cmp inc xor adc scas push jb daa lock pop into mov (bad) mov sub out dec lds lods dec (bad) mov mov and mulb clc cmp inc mov test idivb or dec enter add test lods out mov push xor xrelease and scas fs push jns mov pop mov (bad) push jl adc daa divl or or hlt and inc (bad) les or mov cwtl or pop rcrl leave bound xor sbb dec mov and dec out or jmp fldt add and inc push and sbb fidiv pop (bad) and out pop push or sbb les mov add sub fiadd jmp lcall sbb cmpsb dec and stos (bad) leave mov out sub mov adc dec sub mov jge add ret inc add (bad) xor sub loop sub cmp mov or or push adc or (bad) push push or and mov mov or push divb mov test or mov adcb pop adc xchg sarb add sub ds xchg out jmp fist push add std xor sub dec and fldl cmp add inc pop add add (bad) lods adc dec sub (bad) dec outsb lret mov add popf rcr outsb mov imul sarb ret icebp push and sub dec incl cmp mov cmp xchg mov leave in in shrl sub sub bound xchg add push aad mov xor jp fs jmp sbb fs jmp xchg cmp xchg adcl push push pusha cmp mov xchg gs xlat bound pop push mov inc pop adc add push mov cmp mov into insb mov (bad) cwtl jmp pushf push xor push repz ja pop sbb xchg out and dec jmp sub loope shrl push push lcall cmpsb jbe stc lahf sahf cs sub adc or jns dec bnd dec pushf aad dec push fsubs popf cltd cli jmp and test dec enter pop jle rolb xor and or mov sahf icebp mov fbld mov add mov sub push (bad) dec sub mov cli sub arpl inc push fnstcw inc mov cld push push (bad) imul xchg scas or dec test mov (bad) hlt daa add jno outsl das sub pop xchg cmp cld mov sbb jo add fsubrs call xchg adc push into inc mov add mov or pop aam pop ret sub xchg pop (bad) mov scas gs lea cwtl xchg (bad) cmp xchg leave xchg mov icebp scas xchg add mov rol inc sahf add push sbb dec xlat cmp daa clc sbb rcrb divb clc fsubp mov insb dec xor adc jmp mov inc and in sbb (bad) iret or cmp std sub sub movsb (bad) or push jns push inc mov or das adc cli adc in mov mov int sub pushf jmp rorl cltd lcall xchg mull mov jbe mov pop icebp add add mull repz jp xchg push cmp stc inc lret insb ret xor arpl adc aas (bad) dec mov sti incb lods ror pop mov jmp imul xchg repz cmp pushf add (bad) or inc icebp cmp adc (bad) dec jb mov jb xor or std out lahf out jno push and or push sub mov rolb icebp push mov pop test pop (bad) jns mov pop add xor jecxz pop mov popa mov lret js mov xor jmp inc arpl cltd sub shrl cmc and out or or sbb jbe pushf xor fstps mov xor cmp out pop pop out daa notb push out gs mov jnp jle and scas xor mov repnz fs push jmp lret mov jne sub divb adc mov das cmpsb mov out pop xchg loop push jmp jl popf xchg lcall out inc sub mov push data16 xchg out and jmp (bad) pushf sub imul ss push mov stc in or sti divl les pop dec fdivs movsl push inc lods outsb mov mov (bad) out mov ret int3 cmp arpl lahf push dec push jmp add mov shrb movsl or xor das xchg mov out hlt dec jmp cltd les pop pop xlat leave or scas mov outsb test adc scas fstpt push push das add aam ret std xchg in push iret pop pop sub insl addl notl dec neg pop add sti andb mov jge mov lea aad mov lods mov cld int3 pop xor mov movsl test xchg or aam and mov in imul insb sub cltd mov pop dec pop out adc loope add out sub sub inc push adc cmpsb es test scas mov sub gs pop xchg mov mov and xchg push inc mov loop add pusha les push fs lea adc push daa and mov (bad) movsl push add (bad) xor xchg dec pop xchg push mov int3 sub call out mov cltd rcll cmpsl outsb aas push rcll push fidivrl iret (bad) xchg into or fnsave stc repnz sub cmpsl pop jmp leave mov mov test sub insl mov push cwtl repz xchg rcll clc xor lahf lret dec out test sub add push pop bound pop fldl xchg inc pop ret and mov cli sub mov daa sub sti or mov pop lahf sbb pop test mov in das aam das outsl adc jecxz sub push xchg adc mov ss jo and les xor lock xchg jno dec jne lret sub sub adc fildl pop ret addr16 icebp sbb sub enter sub dec addr16 mov inc mov ret cmpsb inc and insb iret (bad) loop lret jmp aam and lcall add arpl sub push push iret test mov test mov adcl subb xlat cld sbb testb push cmc out xor loop rorl jp mov fdivrs (bad) leave inc add mov ja jae jne xchg loop cs ss imul sub inc iret ljmp pop sub shrl adc fs lods xor shrl movsl xchg repnz mov or movd jmp lock sti lret pop push leave pop cltd aas (bad) sub add ds jbe aam daa pushf ljmp js out lods jp out bound or nop mov ret dec lcall rep fmul xchg inc cltd icebp shlb dec pushf lods sub nop aaa xchg lds xchg and mov out inc xchg int3 inc xor mov popf xchg cld test xor mov out mov int3 pop mov sub pop lret movsl add sbb das cmp xor iret shrl jmp pushf pop inc pop mov jmp test adc mov pusha push cmp cld push lds rorl fistp mov fs loope bound jne mov dec les and aad pusha lods inc es stos sub roll loop (bad) (bad) dec sbb lods mov icebp pop inc out jl,pt add mov outsb mov jg sti xchg js lahf clc xor mov into divl lock (bad) adc jo adc mov mov sar cmp or ret ds fdiv sub (bad) je mov mov sub jmp and push xchg fisubl mov jge fsubrp lds mov test mov add pop insb push mov adc (bad) es test dec push sub cmp cmp sahf mov repz pslld loop lcall pushf jno test pop xchg sahf xchg inc cmpsl mov xor cmovg insb xchg mov xor mov out sub add xor outsl or pop adc sbb push fstpl lahf pushf xchg sub jmp fs scas leave sbb (bad) (bad) popf push arpl std xchg mov sub push jnp gs mov lds add fs test lret xor pop loope aas xorb fsubrl and pop lret sub lret pop pop or xchg insl push inc or add sub sub lahf push mov (bad) int3 xor add into inc mov mov mov loopne and pop gs sub adc lea and sahf lods jle sub mov sub ret or sbb imul sub lock shr sub mov mov or fcomps inc dec mov addl popw (bad) arpl mov mov fidivrl add and daa xchg cmovb push ret push mov (bad) pop sub jmp xor xor add xor insb icebp das movb sbb lods pop movsb stos cmp lods loop xor roll popa jge mov sub (bad) xchg sbb pop lds mov xor jne mov (bad) out pop es push pop and dec in (bad) jb and jb lret adc mov pop and xlat (bad) xor and sarl test test cmc lret out mov sub movsl mov in cld pusha mov popa cmp out jle and xlat test xor jl leave js mov xchg gs and push out inc sub (bad) jb aam xchg jecxz leave imul mov mov pop ror fist or dec iret fs adc inc (bad) lods pushf dec mov adc add fsubs ljmp (bad) std es inc xchg aaa mov sbb pop push adc mov or sbb mul mov repnz repz mov sub out pop test into stc sub jbe or aam leave or imul lret cmp outsb fbld xchg ljmp pop sub push fisubr loop cltd mov mov push rcrl push and dec (bad) test xchg movb mov mov jl aam jb (bad) incb pop adc cld mov cmp lret sub or decb mov sbb into repz stc xchg pushf and daa add pusha or add dec sub inc inc std sub cmpsb sub ficoml ljmp xchg mov out sub jmp and dec jl adc (bad) push add (bad) cmp cmpsb and jno dec sbbl dec lahf push es mov push movsl xlat data16 sub pop decl aas sbb xor int sub jg sub mov (bad) adc mov cs inc loope leave movsl cmp shrb pop add data16 int3 mov or xchg adc out fist icebp das repnz xchg sbb mov hlt sarl mov ret cld add xor push in je fs fcmovne iret push mov or xchg fsubr (bad) mov pop imul pop notl outsb test mov nop out lahf xchg mov in or repz in cmpsb insl sub lret jecxz out add lahf movsl lods insl gs mov mov cmp lahf fsubs add xchg jmp loop enter cmp hlt out xchg fsts imul sarl pop mov sub dec fdivrp xor adc cmc pop ret cld and mov or insb loop aad adc sub add pop test daa idiv out push push stc nop (bad) xchg xor stos xchg int mov push ret push or test leave loop xor idivl cwtl (bad) rcll mov aad test mov xchg fldenv movl and sbb xor loope ret sbb stos jns add mov add add or add pop pop pop pop sbb popf ret sbb inc dec jl jno in enter fidivrl mov dec (bad) jmp pop js ja call ljmp ja or push adc in ret leave or js enter and sub push xor adc dec jbe mov or or xlat xor mov or adc sub jg adc add or cli dec (bad) sbb test in in sbb fprem sub shrb pop mov jecxz dec icebp pop mov xor mov pop add cmp fsubrs jns lret push dec add xor add lret sub sub or cmc inc push pusha mov mov mov scas sub mov and mov mull imul imul call mov ficomp xor decb in divl xor call cmp push aas repnz or mov (bad) adc ret lret in ds shr lret out dec lods xchg dec sub cmpsb and js dec jecxz xchg or loopne fidivr lcall dec sarl push nop rorl and xor inc xor jge adc out sub xor dec int xor pop jnp test xor loop and add pop ja dec mov (bad) cmp mov scas xor divb into xchg xor sbb mov inc outsb and stos ret call xor mov or and lret shrl movsl stc adc fstpt sub shll or repz jbe mov stc pop cmp xlat or flds adc shrl (bad) loope mov dec dec lods dec lcall add jae out fldl or add (bad) nop nop or fisttp adc iret add cmp push and pop shlb daa sahf js cli imul sub shlb cwtl fnstenv inc sub inc setl loop (bad) lcall stos cltd je xor icebp sbbb out jl jmp call ret mov xlat stos adc clc scas repnz bound pop jno xor dec ds sub (bad) sub mov mov and shr movsl jle and vrcpss test ret cmovb or xor pop lcall pop insl jbe addr16 mov adc or add stos and mov dec leave mov xlat mov adc idivl add xchg adc pop dec mov out icebp xor inc pop add jp dec into movsb sub xchg lods insl mov mov adc add or out pop dec mov das sub xchg (bad) or push jl (bad) hlt hlt or outsb push inc fdivrl test mov lcall insb popa mov pop adc popf fimull outsb lret mov sub ljmp xchg stos cmp add push or pop or test loope fnstenv dec jmp (bad) xor pop ljmp inc jmp repz and sub js fs or dec loopne (bad) mov rcl ret adc mov push pop aas (bad) inc mov fsubr in (bad) std int3 pusha adc idivl dec pop mov and pop mov movsb test xor mov repz adc add je sarl test xor test sahf (bad) push push add out jmp cmp (bad) adc or out gs js adc xor ret loop sar mov repnz roll xor shrb icebp pop test mov push mov jmp fldenv roll mov pop mov dec push adc shrl scas cmp dec inc stos xchg ficoml das cwtl dec add popf fwait loopne out dec das data16 mov xor add (bad) xor std push ds sbb add push push (bad) dec inc rcrb divb sbb out cmp pop cld cmp xchg xchg addr16 add mov jg aas sbb pushf test or or pop decb push popa shrl daa xor adc inc xchg sub and int imul loop push add clc (bad) leave (bad) jnp ror mov mov js mov pop push mov push in push out sub xchg (bad) loopne lret dec in das or or (bad) jno or inc and add (bad) sub into jb cs push xchg repnz dec cld (bad) lret repz leave pop fidivr and and push or mov repz sub shr push jmp or push inc push sbb and push mov testb ret sub add insb outsl ficom loop mov mov xchg mov or rorb cs sub mov movsb jbe mov outsl mov inc sub aad dec pop movsb jbe out pop loope cmpsl enter ret nop inc pop shll adc scas das xchg call or or sub pop jae dec xchg xchg mov nop inc dec push mov aas cmp das cmp lock mov cmp (bad) ljmp and (bad) mov and jne ljmp xchg rorl je lret shl mov add lock mov adc mov push icebp jmp lret mov ljmp ffree cmovb pushf push aad push mov bnd outsl in dec add or dec cld jp push test mov mov lret mov mov xlat jbe gs jmp fsubr test or movsl mov loop out mov test push mov outsl jae and scas cmpsl lock pushf int3 sub aaa mov jno push xchg xchg mov inc adc pop in add mov xchg push add xchg sub into xchg dec sti std sbb nop sarl sbb mov idivb fisttpl mov test xor into or mov dec ret pop cmp test int3 pop mov inc fistpl and xchg popf js dec fidiv mov (bad) xor mov xor inc out ret dec sub inc sub mov ja (bad) jbe loop mov cmp lcall das stc mov xchg or lahf sub (bad) imul sub add xlat popf rorl outsb lret or sbb sbb adc es fistpll or and lret cli fcmove adc gs outsl add and jmp xor fisubrl dec xchg pop (bad) cwtl enter inc inc xchg cmp rcl cmpsb add add test mov lods xchg ljmp shll out test jmp push xchg add call das out in and lahf inc add fmull into pop shl gs leave sub rcrl mov (bad) negl push test mov jae sub bound imulb (bad) adc push ds add xchg jmp mov dec (bad) jbe outsl jle gs pop inc das adc lea lahf push sbb adc adc add adc icebp cmp adc outsb mov push and mov mov das mov pop add aas or out roll pop mov push orb call lret push dec sub in push daa clc inc sub fwait cmpsb orl test mov lret push stos gs xchg jmp sub jge (bad) aam push push je loop ror dec jae sub stos sub (bad) cs rdtsc mov mov rorl or sub movaps add test out int3 dec iret xchg in sbb and out sarb pop and inc mov fs std xchg sbb shl adc add mov xchg mov into movsl mov dec or or mov pop loop sarb bound imul pop mov sub (bad) pop out ror lods enter js movsb mov xchg scas xor movzbl mov xchg sub lret enter adc mov outsl idivb inc call fcoms cli xchg jnp cmpsl stos cmpsl pop mov loope popf xchg aad jmp dec add push fdivrl into cmp (bad) sahf xchg cwtl mov inc and sub xchg lock dec leave lret pop add (bad) test cli mov mov add push cwtl stos sub push mov dec lock dec or pop mov jecxz das or adc jge das jne stos int3 movsb xlat fwait lods das add ds pop insl call jnp mov jge cmp push mov xchg movl inc (bad) hlt imul in mov xchg pop in push (bad) leave push call int das (bad) loope repnz xchg jns pop dec clc (bad) jle in test or out push (bad) cli sub aam jb scas or stos jp jnp mov pop jg (bad) dec sbb call xchg fistl sub inc (bad) mov pusha cs and lea jg push call dec cld loop shlb xchg sahf pop add sub cli jmp xchg out out test dec out mov hlt push adc xor mov mov xlat xor in test mov and xlat mov sub mov inc iret mov (bad) int jmp loope rcr fsubl loopne icebp mov cwtl dec repnz mov ljmp pop lea testl sub (bad) leave sbb pushf sbb xchg jns fs fwait and js mov ds mov xchg adc mov sub cmp ja or lahf dec jl (bad) push add in mov push out stos gs mov push dec xchg sub push and mov pop lds sub xchg cmc mov shll sub (bad) scas (bad) iret test cmpsl push test xor or je mov dec lods dec test xor sub xor adc movsb adc out int3 push xor (bad) sti mov mov icebp rclb inc dec inc sub adcl enter les dec lea jne xchg sbb dec test adc imul xor jge cmp (bad) sub cld adc adc dec push ldmxcsr clc stos or pop jns imul lods add cmp repz add in leave xor cmp adc mov and imul add or or (bad) push push dec dec add jmp (bad) movsl aad xchg icebp test imul dec xchg test jle dec mov ret inc test (bad) jle lret (bad) inc sbb fcmovu mov push das pop hlt daa jg inc and call mov (bad) jg,pt xchg xchg cmp jle inc sub cmp ret movsb sbb jne push sub cli xor insl movsl fildll lret dec inc cmpsb cmp cs adc mov pushf xor jl pop fucomp mov rorb jg (bad) out adc shrb adc pop repnz repnz xor clc sub imulb (bad) cwtl mov push test add add lds out push cwtl dec call dec sti sub or mov or mov add push (bad) xchg ret mov movsl test (bad) pop test lret rcr call (bad) leave jne cmpsl (bad) sub cli fs ljmp subb movsb push (bad) repnz lods (bad) loope inc pop or popa (bad) ss xchg push jo cld mov cmp dec jecxz adc stc lods icebp les pop int3 lods and push lcall out dec xor movl push sub xor stc lock leave and fisubl xlat sub imul insb mov xor (bad) pop xor lock add jb cmc cmp add xor cmpsl ss pop fistpll inc inc add xchg add mov sub cmc outsl sub mov mov (bad) sub jnp mov stos mov jbe bound or rolb sub pop movsl popf xor adc test cmpsb mov out test movsl push xchg mov xchg in imul mov cmp int fsubrl jle les sub dec mov out push psubb push sub cmp sub nop (bad) or cmpsb outsb push negb mov daa fiadd rorl jmp stc pop xor xor out pop lret sub xlat mov adc fmull test sub out cwtl ret (bad) popf (bad) dec addr16 and inc in xor repz mov (bad) mov stc add fldenv testl inc leave lret push dec cmp into pop sbb xchg and jmp sti pop loop neg pop cmc das lret loop repz mov loop scas and das or mov inc add (bad) (bad) mov iret ljmp aas outsl fs popf cmc out mov not push cltd push or inc add mov pop mov fs add loop and sbb loope aaa fistl xor cld out xlat ljmp mov inc (bad) dec les call mov dec add lds jb out into inc or fldenv repnz and ljmp sub dec add sub lods das cmpsb dec rcll in inc mov xor out aad addr16 pop inc lods fsubrl push xor push adc lahf je in cmp mov inc imul mov fldt scas pop pushf add pop mov ljmp daa and cmpsb mov jle pop stc add lret fsubrs or xor xor enter enter mov pushf or fsubrs (bad) scas sub ret mov lret and repnz test ret mov imul out fist and mov sub mov xor adc insl (bad) sbb sub clc enter lods ds xchg in and call gs mov (bad) sti lcall push pop and xor lcall push fstpt fmuls notl sub sub cs add out popa call je js mov cmp movsl inc scas push jecxz outsb (bad) pop shrb (bad) sub and out cwtl adc mov push clc cwtl mov cld mov dec jecxz inc leave sub mov repz adc into aaa push movsl (bad) cwtl (bad) icebp add sub stos sub notl xor mov cmp lods xchg repz imul xchg dec mov dec pop iret dec imul add sbb fstps into das sub pop push xchg (bad) cli bound dec push fldt sub jecxz or add mov xchg push jge dec into cmp cmp xlat popa mov cmp lcall sub add mov push (bad) pop cmpsb andb sub (bad) and xchg mov fmuls ljmp jl les in sub imul lds push ret std inc inc push mov sub mov repnz or mov push mov xor jge adc loopne jmp inc lods inc (bad) lcall gs mov lock fcoms cs jg adc inc ja stc out pop popf push push adc sub int and fdivrs lods push dec jno sub add jecxz jecxz push stos xchg and rcrb int cmp fmuls gs (bad) jmp out out add daa mov jmp sub jl repz sub mov iret sub (bad) sub ds cmp or or icebp popf ret inc scas (bad) xor mov mov bound push shll mov inc and std dec sub leave fxch scas jl cmp cmpsb sarb lds pop add xor shlb aaa (bad) (bad) cli dec outsl push mov in add out dec in lods pushf xchg xor sub inc pop xor mov fidiv dec aam xchg scas sub xchg stos sbb lret aas jne xor mov (bad) (bad) sub out xor inc pushf pop add rclb fcmovnbe scas imul jl push clc repz ss mov test sarb fwait roll lods cmp add (bad) sarb push lds aas into in loop (bad) cmp add test dec cmpsl push pop in mov ficoml inc sub pop shll shll test std cmp cmpsl fs negl fwait ds clc ficom (bad) jmp rorl jecxz gs sub jns inc sub data16 adcl pop xchg lods inc lret sti lcall hlt sub jns and bound or xchg imul jmp mov mov inc mov mov dec loop test movsb scas jecxz pop cltd mov mulb loopne daa gs iret out pop lods out adc sub repnz fidiv mov lock ret push ret or push (bad) push pop xlat xor loope cmp mov or (bad) or ja add pop xor and adc dec fdivr cmp gs (bad) sub pop lea rclb out lret pop divb cld sub sti in in lds fist adc mov dec or les dec xchg fistpl adc mov movl (bad) addr16 jg dec cltd movb or pop int3 dec pop sti lods js (bad) ja sub mov jle aaa mov mov sub (bad) shl daa push jns jmp push xor adc mov pop out js pop (bad) mov and sbb out ljmp into mov in or jge pushl mov pop fninit pop orb nop in push ja adc mov sub out sbb (bad) fbstp gs (bad) (bad) xchg fidiv aad stos mov leave cmc inc test add mov mov and in dec movsb bswap xor xchg imulb mov push and in scas jb comiss repz test bound div adc sbb or pop popa pop das or cmp (bad) mov cmp mov pop test jo dec lock xor notl push cmp xor sbb aam imul out dec mov out je mov lods sub mov add adc sub and dec cmp mov cmpsl or cli mov rcll push ret jl push sti xor ret shll sub mov dec mov push sub in insb test das repz movsl leave test out movsl xchg xor shlb add cwtl sbb cltd sub sub rclb pushf mov pop ror idivl inc flds pop dec scas dec mov pop add test inc mov xor js int3 int shl mov decw ljmp je aam cli cmp and (bad) (bad) sub dec mov (bad) xor ret repz mov cli cltd sbb in xchg mov jne inc imulb adc pusha loopne inc daa es loope shrl add sub or jle lret rcrl rolb mov xlat clc leave repz adc and imul xchg roll dec dec mov dec cwtl dec outsl cmc adc dec out fs repnz daa xchg vcomisd imul repnz jne cmp and add push add mov mov scas xchg add inc jb xor (bad) das xor and outsb adc out inc subb adc icebp icebp push xchg fsubr push jmp jns test mov sbb add stos flds sbb ljmp sub shlb xchg jmp test jg ds dec movsb mov mov sub lock and clc fbstp sub or stc inc dec push lods das cvtps2pi mov (bad) xor outsb mov rorl or scas sub out pop subb push fs (bad) jbe dec (bad) adcb icebp mov pop rcll loope xchg dec jle or mov sub inc jno jmp ret push jnp sbb gs mov outsl xchg xor and xchg test into sti mov imul and sti fcompl decb jecxz gs daa pop testl sub mov push es aam notl or mov sbb cld xchg pop sub lods jo iret fsubrp xchg fstl retw mov repz mov mov lret pop sti mov xchg into add xchg mov mov fs ljmp lock pop pop mov cmc stos sub mov ljmp cli or divb mov bound cmp sub ljmp pop xchg lods (bad) cltd dec outsb mov ficoml cmpb sub ret jbe imul add sub push pop (bad) ss push or push and push mov data16 sub movsl xor add mov outsb add sub pop lahf shr pop add and mov lds (bad) push shll daa mov flds stc sti cltd jne adc jne push dec out gs idiv inc mov and add sbb push outsb push (bad) js (bad) mov scas dec pushf bound bound into cltd aad sub adc in scas xor xchg (bad) dec sub push xchg test outsb sub xchg xchg mov cmp inc dec test aam inc sbb mov test and dec dec (bad) sti xor rcr dec test add (bad) cmp jp aas pop sahf adc stos mov mov scas fs xchg mov cli ficompl idivl sub push and fild mov lahf (bad) notl outsb pop sub repnz stos lahf cld ss lret sub jl pop enter cmpsb cmpsl inc aam test repnz rcrl scas je cmp gs loop mov sub insl (bad) cld push shr xor fistp push xor (bad) sub por push std fsubrs cmpsb sub ljmp sub jmp pop sub mov and mov add (bad) out fnstsw fidivl jle dec icebp inc and xor popa push fist cmp push pop dec or fmull ret popl das sbb fs cwtl mov xchg icebp jnp inc or push std adc jo jo mov sahf add push in outsb mov mov add mov insl sub or out popf push jle cmpsb test add lods dec in cmp les iret mov sbb out movsl mov cwtl pop push jmp push add imul repz fldcw hlt sahf pop mov jg ljmp icebp and push and sub xor sub cmp test dec out ljmp (bad) and or xchg mov and cmpsl push mov insb inc mov jl int sub add js push push mov bound repz xor jbe fnop and sub mov jb mov ret and pop jne inc inc sub stc repnz scas repz fs pop lahf lds inc push inc pushw add pop push mov adc cli popf jp (bad) sub (bad) adc cwtl hlt or push pushf sub js in pop daa mov lret leave mov sub cmp sbb and movsl push imulb add xor ljmp shlb jo xchg mov jno push or test pop pusha stc xor mov xor mov or push push mov imul ljmp mov idiv mov dec pusha lds xchg js movsb test adc or add xchg int3 mov jg jecxz cmp sbb sub popa sub push dec out ss ret fistpl popf lds int3 xchg repnz dec in pop sahf mov leave mov (bad) jmp fnsave lock pop xchg icebp clc (bad) mov dec dec lea sar mov (bad) cmp aad sub adc imul lcall mov mov push in mov sub out enter ja mov dec mov aam dec mov pop jbe dec mov pop addr16 and mov sbb daa dec xor stos sbb push inc mov mov bnd into dec enter add (bad) out call andb xchg xor sahf pop icebp movsl mov mov out xor adc stc (bad) mov ds ds idivl push nop adc ficom xlat add mov lret loop pop fsubrp es out out mov sbb jb jbe mov xchg pop lahf push inc xor pop xchg push fs push ljmp repnz xor bound subl js mov ret or stos sub pop call and or sbb (bad) repz xor jnp xor mov in daa sti insl sub cmp push dec aaa inc sarl dec fs add xchg (bad) lahf lcall ljmp movsb xor scas (bad) test lods mov xor and and dec sub jo neg sub xlat push cmp fisttp ret or cmp pop (bad) (bad) dec push (bad) xchg ret jnp push add adc loopne fmull mov add push adc xlat push cmpb ss xlat mov fisttp sub ret fs adc sub xor and enter in nop daa rcr out ljmp xchg pop jmp or (bad) mov sub int3 push mov mov pop in aas add add add adc test jmp sub or push stc test xor and scas fs aam mov or cmp sub jb jne lock jmp js in sub mov call cmc add shrb repnz inc ss dec sbb jnp and stc pop in shll fcoms pop xor sub out cld cmp sarl adc sub push inc pop and mov addl jg cmpsb xor xlat (bad) ja push scas add into mov ret cli loop shll mov sbb idivl jno dec or adc dec or xchg pop ret loop inc and mov jmp xor jne jecxz push cmc and (bad) sub js nop sbb dec dec lcall in pushf ljmp xor pop and and test cli mov out and pop adc daa xor dec xchg push jmp cs sbbl imul cmpsb sbbb push loop sarl imul pop cmp out mov or fwait mov pop lret and stos mov imul sbb or mov shrl cmp lea imulb adc ret sub mov sbb (bad) ret fstl popf imul lret divb mov or stc mov dec rcrl repz xchg sti sahf adc mov aaa add lods sbb data16 lret jle adc mov stc and dec mov fsubrs dec mov mov or or sbb pop push mov mov fwait adc sub fist movb fwait xchg mov cmp inc and mov test daa add pop and mov loop xor test stc fmul push negl or (bad) divl dec jle and dec xchg ret (bad) sub repnz xchg mov mov iret subb push cmp and xor flds mov mov test call mov mov sub or bound out mov mov cmp sti mov cmpsl fmull push jne mov add stc das scas add xor stos xor cmc ljmp (bad) lret pop vcvtsi2ssl xchg outsb bound mov lret lahf shrl leave les ljmp mov jbe mov (bad) (bad) movsb jmp xor sbb sub clc inc test iret xchg jle lret (bad) adc lret int3 lret xlat mov scas scas rclb rcrl sub mov les loope xchg loopne jmp into xor jo xlat xchg cmp push js out mov cwtl cmpsl clc lcall mov add ljmp adc stos pusha test xor shrl and cmp cmc push sub adc pop popa fistpll scas (bad) fcmovb jge fcoms xor xor push call mov imul shrl jmp (bad) idivl adc jmp dec (bad) push add and insb jg sub aas and das xor (bad) xor repnz icebp add (bad) and push imul sub xor dec mov sub (bad) mov pop mov dec mov nop sbb cmp mov inc rclb daa inc mov xor into push mov inc add cli mov adc mov pop in xchg dec pop lods stc (bad) call mov in and lcall push and or dec pop scas sub hlt insb inc iret inc (bad) lods push pop lret loopne dec (bad) test sub inc cmp mov iret or xchg dec push leave dec out jno xor ss ljmp push pop lods dec ss imul dec lods imul mov jnp dec outsl std pop (bad) repnz or fdivp imul cmc movl out leave xlat xchg mov push cmc sbb jo mov mov nop fsubrl leave dec mov lds mov push lcall mov add or gs clc movsl lret das in das sub idiv das lds jns mov rolb pop cs mov movsb scas mul push add lods xor cmp outsl in cmpsb movsl movsl inc aas mov or into adc ljmp addr16 mov ret push mov and fucomi pusha dec adc (bad) lcall or stos and (bad) jne stos clc stc cmpsb sub (bad) cli shlb mov cmp mov dec stos xor jecxz mov cmp insb dec cld sbb mov cli sub xor test (bad) out repnz out clc sarb jno (bad) jbe jmp mov aam or popa jp adc sbb add cltd jo lds (bad) iret or sbb ret jns test mov aam out mov int sub or lds sbb sbb xor (bad) aad loop push jbe cmp jmp mov mov outsl test addr16 mov jno mov jge,pt mov pop in xchg xchg xor je in sbb add cmp push xor ljmp add (bad) (bad) (bad) push cmc mov jecxz xor sub lods sub xor sub sub int3 inc leave repz js and adc lock sub or repz push sub add aaa pusha xor scas fisub pop mov scas sbb fldl rcrl or inc das jns imul fst aas (bad) xor adc jnp jo xchg in jbe push setae and pushf fbstp xchg fsubrs scas lret loopne add scas fstp loope jle lods mov xchg mov adc lods sub xor in sub and test mov jecxz gs aaa (bad) mov xor sbb hlt pop add dec mov in push mov dec push mov mov dec daa push bnd cmp inc leave mov sbb jg fsubrl lret loope add mov inc (bad) mov lcall mov addr16 sub xlat lret inc sub pop sub int3 or pop mov jmp pop adc fdivl pop (bad) mov xor popf notb icebp and dec rorb out mov mov lahf cmp int push mov and jmp or inc push push add xor test mov adc stc popf jae call sub mov sahf cmp mov mov loope lret aaa mov scas aam mov xor daa pop mov mov mov sbb push or or leave and cli pusha in sub mov ds mov pop loop sbb dec imul xchg jbe leave sahf pop pop or leave adc aam jbe xchg mov jbe das push imul dec jg pop (bad) fcoms imul mov sub loope insl pop xlat in cmpsl daa sbb pushf daa fstpl cmpsl or mov sub ret icebp ret icebp add sub mov jle adc cmpsl movsl in aaa sub mov cltd xlat mov repz xchg or and stc stc add shlb push ds sub mov dec jge xchg or test pushf adc cli iret or fisubr sbb data16 jno inc iret mov lret xor dec xor push or xor out scas or outsl leave mov repnz icebp (bad) outsl mov (bad) out adc rcll mov or xchg popa and fimull or sub rolb out fidivl mov mov mov dec xor pop mov lds sarb push pop and das pop sub sub mov daa roll ret int int3 test mov jnp repnz divl cmpsl inc fstl lcall nop cmpsb add out std mov mov lret mov add mov push cwtl cmpsb call sub or or mov push loope pop pop cmovno sub movsl rcrb or mov dec hlt scas mov pop icebp fisttpl push or dec pop mov decl test pushf sahf or xor xlat and mov pop aam fsubrs xchg (bad) or vmwrite into leave loop loopne pop ss push pop mov cltd mov call jmp pop dec pop lcall decl mov xor sbb xor jmp or push add imul xchg mov sub mov fnsave mov sub jns in cmp shrb into sbb xor (bad) leave lret lds sub pop dec adc test mov and (bad) xlat pop sahf daa xchg iret lret and imul jne stos pusha leave sbb lock mov xlat sbb icebp xor movsl rcrl repnz outsl push stc jle xor aas es xchg aas arpl data16 fisubl lahf loop ret loop xlat xor push xchg jl in fsubrs bt gs sarb loopne sbb sbb cmpsl push dec mov mov xlat test cltd mov and test out or jns cmpsb inc (bad) adc movb mov out xor adc ds pop fmul push gs xchg into pop sbb stos sub mov dec mov jmp repnz xor add stos jne fwait mov or xor or fidivrl mov cvtps2pi sub rclb fiaddl inc das mov les mov leave icebp hlt and xor and imul test iret lods adc pop mov pop cwtl push add mov cmc (bad) vrsqrtps ljmp cmpsb popf adc shlb xor outsb bound jmp idivb shl mov xor sbb loop xchg stos popa int3 (bad) sub jmp mov jno imul dec mov jle xchg mov loopne mov xchg stos adc popf outsl lock lea add and xchg dec daa andb add mov clc imull mov repz es leave fstps aad sti sti aam scas int icebp adc repnz and sbb sbb jmp popa scas and ret ja push xor pop cld or rcll cwtl pop add mov mull das jnp mov lods sub jnp pop outsb fadds fdivrl test cmpb fs mov sahf bound enter cmp add (bad) fsubl test add xor sub mov xchg cltd mov pop ret xchg loope mov push popa cmp push inc mov xor mov inc push stos (bad) ljmp cmp imulb (bad) sbb dec pop scas sar les out pop jecxz or and stos push jae movsl je push fptan xchg orb cmp inc mov leave nop pop or lahf insb inc xchg adc sub mov cmpsl fidivr jb icebp pushl repz add add subl out in lahf push addr16 (bad) cltd fndisi(8087 fsts (bad) mov (bad) sub (bad) cmp sub cmpsb (bad) test fnop push mov jo sub fnstcw clc cmc sub mov loop gs stos fdivrl xchg lcall repnz mov aam xor and cmp pop repnz xor fcomps decb repz pop lods lret fs jae and adc sub mov ljmp sti cmp add leave imull rol test stos aam pop or loope sub jo push pushf cmp inc add (bad) hlt xchg imul fisttpll cmp mov mov xor shlb dec mov scas lds xor xor mov or daa movsl inc out xchg jns cmp mov mov subl scas rclb in lea (bad) jecxz and mov sub mov js or pop mov cld aad mov popf int3 adc ljmp jge or je imul pop and inc ja fdivrl rsqrtps iret shrb adc mov fistpll jns pop ss sbb in cmp pop int3 movsl (bad) mov imul sub es pop xchg daa mov ljmp sbb mov imul es sub aad jns xchg (bad) cmpsb les mov push out adc mov adc into or js mov xor fisub xlat xchg push stos ret aad adc icebp pop push pop lret sbb cmpsl loopne (bad) xor in push lret out jns imul les cmpsb sbb out push or mov sub pop shll out aad stos or sbb popf pop in lock jbe loopne imul inc stc rcl negb cmp daa adc mov xor xlat xchg mov jo push inc int3 jns into mov pop repz aaa add or out rcll (bad) mov lcall fnstcw fcomi and xor sti arpl push cmp xchg adc xchg lods loop add mov lret pusha push xor aaa lret jmp sub push push sub lahf pop or inc and test das repnz loope pop lea adc sub xlat test sub jmp dec pop pop xchg add mov xchg add inc cli adc mov stc adc aas in lea and mov icebp fstp stc inc roll adc mov pop cltd js mov xchg lcall imul push into (bad) pushf mov xchg xchg mov shlb test sbb (bad) out xchg pop pushf mov std cwtl shrb pop xor out jge cs cld mov inc rorl into mov push std adc les ret xchg adc pusha mov pop dec pushf mov mov cmpb dec push cmpsl mov add cmp mov adc mov mov subl jle xor repz push out aas xchg call movsl in or rorl test inc cmp add fldt xor test test ret xor mov lods adc jecxz je lods mov mov mov push push (bad) repnz mov into je ret std inc ret and jg ds adc sub mov std cmpsl sbb and icebp lds mov cmp add mov mov cld push sbb fsubrp mov (bad) (bad) leave jl push in cmc and sbb les xor and lret or rcl xchg aad dec and inc add dec mov fistpll dec (bad) mov jno push out mov (bad) sub lock cwtl rcrl and fstpt adc pop aam shl xor rorb or sub in dec dec ret jg xchg (bad) imul push pop dec (bad) imul push inc daa rorl lret sub fs sbb fcmove mov cmpsl jmp xor jl pop mov pop mov icebp push inc xor out sarb cli aad out sub push lret xor out or jne pushf js jno (bad) add sub loope jnp sbb icebp mov cmp pusha xor push out fmuls int outsb idiv sbb or xlat repz dec inc fisub and (bad) (bad) and dec (bad) mov loop xchg xchg pop mov outsl dec fwait adc addb (bad) mov popa loope lods sub stos aad scas lret pop adc ljmp push inc test sbb mov mov repz and fidivl add (bad) mov xor and lods jp mov lcall out in out sahf movsb push push mov (bad) xchg decb mov aas push jecxz pop decb adc pop int3 out mov push je repz lcall adc sti mov jno imul aad mov repz mov and jno leave or xchg cli xor cli icebp outsl pushf shrl enter cmpsl outsb sbb dec sti (bad) jo or push aaa dec nop xchg sbb out mov pop xor lret xchg pop or je pop loop jg adc mov pop inc dec les iret mov test fcmovnb daa sti popf mov push mov pop push cmp fsts cltd pop into scas mov xchg mov scas int3 and adc sub push mov push pop test dec fcompl and adc mov jp out xchg push test sub sub stc sub and inc shrl mull loope mov pushl clc pop faddl xor ljmp jecxz insb jl wbinvd sbb dec adc fs cmpsb adc cltd das and pop adc ret fnstsw push loop pcmpeqd sahf mov jl or mul or add sbb xor mov paddusb add or (bad) xlat xchg and sub lock push bound or in loop xchg jb stc xor lods adc repnz push ja mov push lds fidivr or sub (bad) jg push pop sub clc es das add gs cltd daa xchg pop dec mov inc fadd add sarb push dec stos lret adc adc (bad) rorb out mov out sub push pop loop push xchg sbb xor daa and push sub jmp in push fmuls fdivp sub andb xchg test sub mov pop mov cmp xchg (bad) dec or (bad) jl pop pop fldt movl or or xchg push xchg ret cmp dec add xor std icebp popa xchg (bad) mov cmpsl add cwtl push inc lods inc xchg mov (bad) stos push nop icebp xchg jle outsl dec lock lret bound xor add dec xchg std mov xchg sti pusha daa or add int3 mov or out push mov cmp repnz dec daa loop xchg ret and jle pop add xchg xchg mov or icebp mov mov out mov push leave jmp cmp mul fwait xchg adc insb jb loope xor inc xor jnp adc mov clc lcall pop in xor jmp adc (bad) sbb (bad) xchg mov cmp loope add rorl sub add mov sub mov mov sub idivl es loope xor xor lods xchg gs (bad) add cs xchg or pop adc pop sub push sbb fdiv outsb add in mov rorb stc mov call lcall test pop bound scas imull dec test test or push popf push pop mov aad inc gs frstor (bad) pop int3 in jp pop (bad) mov sub xor cli gs stos push pop ljmp cmovo add outsb (bad) (bad) cmpsb sahf das ret jnp jb data16 (bad) xor (bad) js mov les adc inc out in lods cmpsb ret shrb pop mov push add sub mov mov scas je stos jae pop test add leave fidivr daa leave (bad) loop push push pushf int outsl pushf or push xor jne sbb or (bad) jmp ret pusha decb jo cs fprem1 jmp out test push imul jle adc cmp mov sub clc js xchg push mov testb add ret stos movsb ljmp out xor stos mov adc push in jnp jecxz add jo mov mov (bad) dec in mov in test popf xchg or dec imul xlat scas or std insb sub cltd xchg and mov imul or push negb addr16 and add or out mov das out inc add lret add mov sbb add out lea xor mov aaa sub repz ja ficompl lret dec repnz push sub movsl pop or fidivr lock jle ficoml cmp push das les ljmp push imul out cmp popf and cld sub stc pop clc (bad) call testl and sub jmp sub cltd ret xor push pop pop sahf gs lock jae or stc adc sub xor lahf add sti xlat add insb test ror push lea jmp or mov aam in dec add aaa jl test push and jne aaa sbb (bad) dec outsb add adc (bad) xlat shrl jbe xchg cmp push aas int ds (bad) enter (bad) out xchg mov data16 or jmp out cs imul adc rorl add jmp push push mov in shll mov mov xor ror mov stos (bad) (bad) mov mov xchg sub lret pop aam pop pop into fist ljmp lahf mov idivb jecxz mov aam pop cmc cmp lret sub sbb mov (bad) xor push jns jmp add or idivb adc cmp dec movsb bound adc jle call mov and and sub fistpll cld jnp mov xchg add dec rorl pushl outsb ret call (bad) hlt sarl jmp sub (bad) into lret mov mov sbb lret pop or mov mov ret repz sarb or mov ljmp add or xlat std int3 std dec push in push pop mov mov mov sub cmpsl out and sub sbb or (bad) mov ret and loop mov push push xchg add adc shrb xor sbb movsl inc in int3 test mov lds mov out jmp xor xor jo dec enter or xchg xor adc scas xor (bad) in xor enter pop xor push and or not out das xor fist adc cmp cs fcompl adc and sub in jecxz js incb push cmp mulb dec sub stc out or mov xor (bad) mov insl pop mov les xchg xor adc sti jmp add sub ds (bad) or xor mov add dec pop sub mov pop (bad) dec and out mov popf insb cwtl stos xor dec (bad) nop (bad) mov mov or xchg enter scas xchg stc cld xchg es pop aad int3 fstl lds jmp dec cmp aaa dec stos xor mov hlt push jmp xor jg mov mov xor movsb and mov sbb dec repz jecxz add xor ffreep dec in or push push push roll decl mov mov xchg push shrl or inc add outsb mov shrl ror mov and gs scas add add aad out mov inc mov call negl imul lahf push repz cmc push xchg inc xchg es xchg icebp je add std push xchg pop and clc icebp add aas mov dec and rcrb jmp cld inc shrb xor dec fwait dec adc test mov add inc push fildll stc ja cmc dec stc xchg fidivrl lds push xor mov add xchg push leave mov repz fs lcall pusha fsubl (bad) sub loope icebp dec dec push lea cmc xor cwtl sbb rorb leave fimull inc add aas test leave push cmc mov fcomps je pop out pop xchg (bad) out push out addr16 inc push xor push dec adc jmp cmp inc dec push mov jl pop and sub add fdivs xchg inc adc mov scas loop mov faddl push xor mov bound sti ffree jns push das mov add (bad) xor mov aad mov clc and dec adc stc xor and adc (bad) ja push cmp inc sub mov pop and mov out mov push (bad) sahf xchg adc (bad) stos mov push fucom adc mov sub ljmp js fisttpll inc ja sbb xchg mov cmp pop jle idivb lds cmp mov add aaa popf rorb pushf js mov in lods lds mov sub inc pop imul or addr16 daa rclb add outsb les xchg push xchg push enter pop pushf in push mov lret and mov mov pop repz repnz nop ret mov and dec adc xchg jae pop ljmp push (bad) ss and xchg jp faddl add jge and jg movb pop rcr imull jecxz leave loop ljmp mov cld les pop push jno sub inc xchg repnz mov mov fiaddl xor aam das outsb scas popf push movsb mov fcmovnu push sbb sbb rorl inc push add and jb lds sub arpl xor gs scas mov pop cmc leave xor popa or mov aam mov xor cld movsb cltd and jae inc jnp in adc leave test out sub mov push (bad) mov or cli aad mov js cmc add insb in lret xor xor xchg les scas cmp and jmp sbb mov push and xor sub sub inc (bad) pop mov jmp pop and daa dec jmp push sbb add loop loop mov mul jno xor jmp pushf and ret xor push in shll ficomp movsl shrb clc daa js rep scas lret xchg inc mov pop sub mov cmp push or cli mov inc jmp and mov adc or and mov das sub dec (bad) add movsl das mov pop push jno sub icebp imull ljmp push push fsubrl (bad) bound (bad) out or call lcall call sub pushf add add fld imul aad sub jo xor sub in dec (bad) pop ror and pop sub pop adc sub cmp jno pop push jnp test xor adc fiaddl stc ret imul insl sub cmp loope stos xchg icebp stos imul push pop mov push ret shr (bad) mov stc xor dec fmuls dec ret mov bound les dec pop imul aam adc mov xchg inc pop cmp rorb inc or bound push mov or gs mov jae adc scas xor mov mov jecxz enter add das xor jno mov mov fistp jg mov and sbb xchg and lret mov shlb and jmp push cld cs jg dec sub rcl (bad) mov ficoml dec jmp clc stc into push xor pusha xor loope add icebp push dec lds push fisubr daa cmp inc cmpsb adc add jmp into mov sarl cmpsb in push test pop dec sub mov xchg icebp icebp stos outsl pop aas loop xlat mov mov and jno ret xchg xor xchg sti and dec stc mov dec mov mov jmp jne inc stos inc in sub sub sub dec shl add orl mov mov stc xchg fcomip xor ret pop mov pop arpl sub mov dec push clc adc and outsl lea ljmp pop adc mov out das jmp fadds ja pop pop stos xor loop aam push dec cld cli sub je jmp stos pop and mov xor fadd test mov test data16 hlt out cwtl popa push xor lret test (bad) mov sub dec jmp sub sti sub sti sub jl dec popa ss pop in push sti int3 daa add or insl cmpsl xchg push icebp mov pop out pushf xchg add sarl iret popf rcll xor pop lret and pop sub mov or xchg loopne repz and cmp or pop insl rcll mov sbb scas push sub test jl rcrl or cs adc and out mov mov or out push ret test fldt pop xlat mov ret ficoml addr16 sbb push popa mov imul lahf push imull jb inc (bad) and xlat stc or xchg mov aad insb and rorl mov sub orb adc iret push test pop in jmp and adc popf cmp (bad) sub hlt imulb in in jmp test sub das or cmp mov inc or in dec sub pop popf adc pop mov jecxz pop test xor or and pop pop icebp mov dec rcll sti cli lock aam mov enter pop aad lods (bad) (bad) (bad) sahf mov fs loop sarb test xor out sub push adc inc or xor lret test push dec mov icebp test mov mov push or out (bad) ret rcl ljmp outsb out xor pop mov subb xchg pop sbb imul divl iret mov jno mov dec test sub das into jno dec or into push dec pop lret out sub mov and lahf jno insl call data16 fimull icebp (bad) out outsl mov (bad) jno xchg ret int3 xchg pop jmp imul push and mov leave repz inc pop add pop outsl lcall mov push push idivl out ret ja push fdivl pop xor adc cmp mov aad dec in xchg mov hlt adc mov xor sub gs pop add ja imul ljmp or and or or inc or rcl or fcompl popa sub mov push add or xchg (bad) mov das cli aam das jge out xchg sbb andb cmp dec out add or cmc out call mov and scas into mov loope not mov inc scas repnz push push jmp adc ljmp pop add dec lret cld jnp jmp sahf jno mov (bad) jns movsl nop fldt add jno sub mov fnstenv (bad) loop lods nop mov (bad) mov push xchg dec in cs inc push cmp lret or mov stc push fildll repnz sbb add or popl pop loopne fcomi or es sub xchg cmp push push cmp pmuludq cmp push test andl push xor adc fcmovnb and nop out sub movsl inc mov jb rcrl test cld cmp pop jmp sub test das icebp in adc and mov icebp test xor pusha cmpsl popa mov ds fistpll (bad) lret cli movsl mov cwtl push or sbb xchg notb fs mov rclb std scas sbb xchg xor mov adc nop sbb mov xor dec icebp cmpsl and dec push sbb shr bound push icebp in out repnz into xchg adc mov cmp (bad) push inc les inc inc mov adc or imul sub xlat gs scas jge out sub fcoms xchg pop xchg sti push xchg fs or pop or jno mov into out jmp cmp pop js cltd adc and cmpsb fidivr clc scas inc cli xor sbb push pop jmp adc pop jmp daa adc scas jne out mov pop mov xor pushw dec and (bad) push (bad) in int3 adc mov jb stc xchg dec cltd xchg stos shr add icebp scas push lcall cld jb mov sarb jnp js mov jmp xchg std gs pushf stos repnz test es lcall insb pushf fidivl stos sub in out out jle loopne stc xor xchg sbb mov add leave das inc jecxz mov arpl cmp pop cmpsl pop add push data16 xor in and sbb push add mov add cmp jo negb out ret out push lret jbe push and imull sub data16 mov push sar pop cltd in bound popa and xor clc pop xor pusha mov sub repz mov push popf jl sub out mov fnstcw (bad) mov out sub out and into bound dec scas cmp shrw pop mov test mov loop out xor xchg arpl push mov xchg clc out mov sti mov xor cmp push pop mov ficomp pop lret in int or cld fld mov repnz xorl data16 pop xor mov stos mov add cwtl stc xchg out add dec cmp test ja xchg jbe leave ret icebp inc mov sbb pop fsubrp popf sub clc movsl mov clc (bad) mov pushl pop add jnp adc sub imul cli and add jmp mov xor jbe or cmp (bad) push out push jl add shl loope js cmpsb push mov icebp stos outsb mov pushf aad dec push (bad) ja (bad) inc sbb and dec and xchg imul dec sti cmp xorb jne cltd mov aaa stos and mov pop xchg pop xor ljmp mov cs fcomip and loopne out sar enter popf fcmovnb and jge rcll mov test fs sub pop or and outsb xor out mov xor mov add add or dec lds xchg adc pusha or push and lret pop bound add test mov jge leave xchg sbb mov in pop mov dec push mov call sub das loope sub jp rolb (bad) call testl adc xchg call push jge mov out stos pushf pop or mov lcall or jl xor cmp mov pop lret mov and in call iret mov dec (bad) mov mov push xlat jmp test lahf rep adc or push add outsl testb icebp (bad) sti jns dec pop cmp xchg sbb daa rorl mov shl dec (bad) in xchg in cmc movsb xchg cmp xor mov xor fildll test xchg and fistpll arpl add aam popf xchg popf dec inc pop clc mull dec or movsl stc out cs add imul fucomip fs aas mov out pop ss or stos cmpsl mov roll rolb pop adc lahf jnp test and fcompl loop dec jno xor lds push mov icebp lcall dec sahf mov pop jno in gs (bad) lret sbb push dec pop adc loop std movsb test xchg dec lret out dec mov das enter ret pop stos lods add lock cmp lcall lahf push and lcall jg aam cmp movsl ljmp inc mov loope stc aas js divb out sub push xchg fnstenv stos push mov mov scas and call dec cmpsb inc scas imul sub and mov push push rol xchg ljmp gs pop icebp stos imul jbe leave aas test loop inc leave inc into dec xor add inc test push fimull dec mov test scas negb mov push cmp lcall fcmovbe cmp add xlat mov cmp dec fisub scas and ljmp xor (bad) sbb mov cli and sub push idivb decl sub pop xchg je jno outsl mov mov movsb hlt fcomip mov push arpl xchg jecxz pop mov insl test or sahf xchg imul push inc mov or fidivr fstpt adc xchg xchg jle or aaa dec mov (bad) mov jmp (bad) out lret push xor dec and lods pop mov dec std jno mov daa add push ds push loope push pop inc sbb sub leave mov js push (bad) jmp ret xchg into stos fs test out les ds ss sub mov pop inc ret pop push ret dec mov jg push leave push pop jle loope pop fbstp mov sbb add push pop adc stc out (bad) arpl ror je arpl push xchg sti fsubp sub jo sbb adc ficomp out adc lods xchg sarb leave mov repnz mov jl in lods sbb push insb xor and cmpsb push (bad) pop fldcw add jne lods fbld or and fcmovnu jge test fnsave cmp (bad) lret or clc push rclb jno sub cmp daa jmp ficompl dec cltd jl cwtl outsl or cwtl nop call adc decl inc dec jecxz push scas sahf fldenv xchg (bad) pop mov push loope lret or sub es sub or lahf hlt stc jmp jno lret scas sub add decb xchg leave and call inc gs sti fadds xchg jg (bad) sub pop ds xlat lods ret fmuls sub cmc sti cltd shrb and xor dec jo ljmp cmp mov (bad) cmp mov lcall dec xor or mov push call jo xchg and ret dec or push mov out adc mov and jmp inc pop and mov fimull es add jmp mov pop (bad) std lahf xchg mov mov jb pop nop test fldt sub test xlat mov repnz ret xlat lds mov push cmp xor imul xchg mov rorl xchg jmp dec xor cmp rorl sub test dec xorb pushf mov jle dec fisubr push sub clc or or and fsub xchg iret stos mov add jno out inc adc mov cmp sbb xchg mov ja jb inc pop in inc loopne mov nop lret icebp cmp jg lea loopne add mov iret mov out mov movzbl mov sub cld and inc loopne stos xor xchg sbb inc pop lds adc dec push sub or and add js scas je jmp and icebp push es xchg or or and mov pop test sub cwtl pop xor mov push cmp dec xchg mov xchg es add cmp or cmp mov inc clc dec dec ljmp nop lcall jle mov adc mov xor pop adc lcall pop cmp out mov pop ds leave leave mov out testl repnz xlat out int3 dec mov xor jmp jnp and out imul sub inc shll leave cmp dec jae iret push push pushf jl cmpsl clc pop ss je out cmpsb sub (bad) pop jbe repz sub mov inc xor imull aas (bad) bound pop test xor pop mov ret push (bad) cld xchg mov sub into mov fsubs sub mov dec stos sbb daa jge pusha mov leave bnd repz ret fnsave leave stc inc adc lret ret adc xor stc mov or and inc add (bad) mov mov push push cmp movsb add movsb jmp push and leave in add mov inc and sti sub hlt jb xchg movsb jp inc jecxz xchg daa outsb pop adc lock bound push add add push pop jle fildl inc cld lea jp add mov or sub ja add adc in stos xor inc aam add xchg jne mov imulb jb into xlat negl adc adc bound mov dec cmp iret inc pushf add in cmpsl dec movsb fstp mov outsb push and and sub les mov aam ficoml addr16 aam and add sub fcomip push imul les scas sub jp xor and negl add push mov fisttpll xchg ja lcall rorb xor xor mov xor sub xor add mov stc mov add adc jg sti int3 mov push xchg int jg jg push (bad) scas push lcall add and mov fwait pop stc scas xchg xorb mov jmp (bad) pop push pop test lahf fdivs or ficompl or jl (bad) inc dec loop mov jmp ljmp aad fs out popf jo push bound sub and sub aas div pop (bad) and push pop callw daa ret jo pop call and lret test mov push outsl jg mov jb dec push jbe dec sar xor sti pop sbb lret mov jmp inc jecxz or dec test cmp add mov cmc jns mov scas je adc in das sar scas mov jle jb ret imul xor xor push int3 scas repz or adc sub mov jmp or sub lds push mov stos (bad) daa cmpsl mov or scas sub or pop roll aas mov in cmp out mov push sub mov sub pop cltd xlat lret jp movsb mov mov stos mov and pushf insl arpl fcmovbe clc aas mov flds lds mov pop loop xchg cli fstps repz sbb inc scas and dec xor jo lret dec add jne adc fiadd dec shlb mov and sub lahf out jb lret jle pop or xchg fist (bad) mov inc push jmp and loope sarb sub pop dec push inc or clc adc test imulb lods mov add inc (bad) jge ret or or jg ret adc xlat or jns faddl sub out jb and sbb sbb aaa mov ljmp out outsb imul test pusha insb out sub jp pop mov and mulb shrl into and in jle add incb mov and shrl lret mov fldcw pop mov dec mov dec sub mov pop mul pop (bad) xor shr push mov jns push mov (bad) loop notl and sti xor or pop lds rcrb je (bad) xchg adc out imul ja repz ds repz test mov xor sti xchg sub sbb stc in and pop sub and or fcoml and pop and mov sbb add sysexit add pop scas or ret xchg push subb mov xlat inc out daa fcmovnbe adc stos mov add jns xchg add (bad) dec movsb inc inc add dec mov push sub shrb in push inc push pop cmpsb pop dec hlt (bad) xor sub xlat fadds jge cmc adc jmp push (bad) dec add clc jbe dec cltd (bad) cmc repnz mov fldenv jle,pt push pop sbb pushf mov shll cli fs add jmp mov rcr repz call loop xchg mov andl sub pop and adc mov mov xor xor mov lds lret jo jmp dec cld in lods lahf xor (bad) or sub pop lock hlt lds lret dec mov sbb and stos cli ret fnsaves jb div xor pop imul mov and xor sub and cmc in dec mov frstor dec into popf mov mov stc mov or xor negl push dec cwtl cmp and xchg dec mov leave or jno xchg cwtl subl mov addr16 mov cmp adc add jne pop ret fadd pop aam push cltd adc push dec mov lcall dec scas adc std les sbb out lret daa bound jg jae sub xchg out push mov sbb jp in xchg jl pop data16 sbb cmpsl xchg jnp or mov sbb vmread pop data16 ret jl dec bound push or jne pop mov cld sub push mov cmp sbb push sahf xor mov sbbl and cld or iret mov lock (bad) outsb imul fildll mov in rorb mov stos aad mov sbb fsubrs mov testl lret and std push popa dec jb xchg jnp sti clc insl repnz fnstenv dec xor xchg pop xchg mov sub mov pop neg dec scas sub movsb ror call or mov inc iret xchg outsb rcll and fimull push xchg push mov dec cmp mov and fnstsw cld repnz ja cli sub or fsubp loop (bad) sub cmp mov pop leave call add (bad) mov add cli mov xchg ljmp and das mov (bad) iret add cmp mov lea iret stos dec mov jmp les pop pop push xchg xor xor xchg mul lds pushf xchg int3 mov lahf xor imulb call out lds arpl fnstcw test mov push mov (bad) or or mov fucomp popf mov inc mov jl ret sub xchg add mov push add xor inc fsubl negb push adc xchg les into cmp (bad) aas sub fidiv lods out repz ret ret xor or jno xchg aas add out ss inc mov pop repz lahf jmp push mov pop sbb adc nop loop (bad) mul or add jns add shl mov pop mov adc stos mov add pop mov push adc sbb xchg lahf les inc mov cli and arpl xchg xchg lods dec out xor xor not inc movsb and or cmpsb inc out push add pop mov push das clc dec lods mov loop shr icebp mov mov jle repnz push stos xor fimul jg mov mov dec mov arpl xchg fimull lret jb stos test sbb inc dec add test sub in xor mov add je outsl dec rorl ss xchg mov pop mov xlat in or pop enter mov pusha pop sti stos popa cs movl int es fs es aam loope ds ret lods out mov xchg cmp dec fisttpl mov insl add fsubr xor loop mov inc test out ret fcompl (bad) sub shrb stc mov int3 push sarl or adc jne mov dec rorl call mov outsb lahf out (bad) mov push popf pop cmp jmp popa jp adc mov inc sahf sbb push xchg adc addb sub mov xchg add dec fidivrl pop xor jns mov fiaddl daa inc jo fadd pop or icebp in pop das movl or or dec pop dec xchg (bad) sub mov dec je mov mov xchg mov xor idivl jo xor mov sub aad test out pop and sub clc push loop stos and std std sub pop inc es jg pop imull jp outsl (bad) fsubl (bad) in imulb dec xor or pushf dec mov mov dec lahf movsl jne (bad) sub and lcall xor pushf xor add (bad) out imulb int3 sbb syscall dec out (bad) xor push sbb adcb and dec pop out adc push cmpsl stos pop and mov xor xchg xor sbb sub (bad) mov pop outsb scas xchg push sbb and mov popf ret insl pop fcomps sahf inc iret shr mov fmul xor mov lret mov cmc addr16 or add sub push insb sbb cli cmp (bad) mov (bad) xor nop ljmp adc mov cmp push psubd inc mov inc gs pop xor dec push add cli mov data16 jns dec aad inc ret sbb in rcll xor mov inc mov mov xorb rolb jne mov lcall xchg jl lds push jecxz xchg call add (bad) push jae mov cs out jl push lret and fsubl jno ret cli inc stos bound les aad imul sub cwtl jge sub lock daa rorb fild cli mov xor mov in lods mov xchg dec add in loopne pop mov inc rcrl add mulb movsb pop or sahf leave pop out jae sub mov dec clc in mov (bad) mov lods mov adc or sub aas (bad) sbb pop push jnp in test ljmp shrl call push imul adc mov cmp xchg pop or cmp fisttpll loope inc sub sbb aam dec pusha pop add sub cmpsb inc cmp and cmp and jae,pt daa mulb pusha or aas adc ljmp out mov hlt adc sbb mov mov pop pop test mov enter enter jp call or mov addr16 leave imul lock mov jecxz fisubr cmp mov daa xor pop add cmp shrb xlat inc and insb arpl jmp in pop rep sub mov inc ss fcoml push mov roll mov and jnp js into icebp pop (bad) movb xchg (bad) int outsl mov add packsswb pusha cli sub sbb negl adc lods sti mov stc leave (bad) jno addl mov push add jmp mov sub call daa mov repnz mov repnz sub push inc adcb loop sub pop icebp (bad) out movsb iret mov jle incl movsl scas out je leave hlt mov mov notl dec inc add pop shrl sti cs jl xchg lret inc or sti jmp mov fsubl add lret (bad) jge and pop out inc mov or lea jg cld fs repnz adc aaa into dec lret mov test sub mov int shl pop xlat orl (bad) mov pop lea or div sbb dec pop adc jmp mov xchg mov shlb out lds push or mov cwtl mov pop (bad) xor xchg xchg adc mov (bad) repnz cli adc inc mov cmpsb xor addl sbb (bad) je mov dec leave jmp rcr ds adc and arpl leave lds and jnp ret repnz lret add mov sub (bad) repz xor adc push mov inc imul fldcw mov push bound push mov mov jmp cmp mov lock lret jne push dec lret cmp pop adc int push and and and out out dec cmc (bad) bound repnz sub ret cmpsb lea es pop (bad) lods sub add fsts repz jae cwtl mov ljmp add or or insb push popf pop pop mov repz (bad) std jp int lods pop jl pop test mulb lea imul and (bad) aam loop xchg in mov leave insb in xchg mov xchg ret shrb inc push cs and repz imul cmpsl xor add bound aad es ljmp repnz daa lret pop in adc mov and gs ljmp adc cwtl scas cltd inc dec adc push mov (bad) jae daa cmp fsubp mov mov flds jnp pop movsl test dec out cmp out sub xchg sarb test push loop cld pusha adc and dec in fwait daa decb push and cltd rorl xor cmp mov jmp das cltd dec aas mov and mov xor mov lock lahf dec push lret cmp and sbb sub sub and mov push les sub jp enter fisubl xor or mov cld push jmp je inc xor dec lods scas mov stos sbb xchg ret cmp or cwtl jne mov int add ja stos dec xor cmp and sub lods out int3 sub pop (bad) mov (bad) mov or gs leave mov aas les lock xchg xor pop adc or mov sub fwait cmp sub mov ret outsb sbb jp ja fwait decl inc jp pop dec pop adc js popa outsb mov and ror push xor sbb scas lods xchg mov xchg into stc decb pusha xor or movsb popa lahf jno or sub sub or test out mov insl push lods loop xor pop mov jg daa nop mov scas cltd jo inc sub jle test pop fucom sub mov sub or pop fsubs sbb (bad) and pop mov adc (bad) repnz xchg cli lret or rcr les jmp adc ss push mov movsl cmpb mull sub clc push mov cmc test xlat scas fstps pop in xchg icebp jecxz enter mov dec sub test xchg stc cmc cmp fisttp pop test (bad) push add sub fisttpll sub cmc pushf push and xchg pop xchg movsb loope mov in (bad) ret mov or jge cs test xchg sub adc sbb imull mov (bad) fldl cmp xchg mov mov or lock jle loopne push and (bad) dec mov xchg adc mull mov call call adc add xchg adc mov inc sbb or or jecxz mov sbb sub mov push jmp in push adc cmp pop in push mov mov dec xchg push mov push push mov aam rcr sub mov xor jle (bad) (bad) out repnz les fistl ljmp jae and xor icebp mov mov mov jns mov mov repnz sbb imul ja sub mov mov cmc in daa fbstp dec dec lret test iret xor popf xlat sahf cmp stc xor fstpl popa xchg outsb repnz xchg mov pushf mov jns xor jg sbb mov out daa adc xor aas dec mov mov dec adc scas mov shrl pandn pop popf rorb and fwait xor lahf push mov out loope mov (bad) mov jge cltd cltd inc and in adc testb and cltd pop jg clc call fldt add push add or je aaa dec mov lret xlat sub dec repz sub out popf std xchg pop add cmp push ja lret mov sti repz stc mov scas push mull outsb fsubr pushf mov sbb pop cwtl idiv mov xchg and inc lret jnp xchg pop sub and repnz data16 call fnstenv cli fstl shrb shrl dec divl ret jmp push mov mov adc not loop xlat push add loopne push jno dec push add das dec ret pop push orl pushf lahf rclb je xor into cmc sub hlt lret lock or xor sub lea aad add jo bound cmp (bad) lret into loope es rclb cld scas mov in push cli or xchg out imul jmp add (bad) mov sti out fs (bad) out dec pop mov outsb (bad) mov add gs iret iret xor cli out and test out mov fcomps mov dec dec dec sub pop add mov into int popa cmp fs add lock das mov mov (bad) push jnp das das or outsb out mov or leave lahf xchg xchg or mov imull loop (bad) test movsb cmp push add sub or and outsb dec nop adcl daa add (bad) dec shrb cltd fmull dec sbbb xor mov cmpsl adc sbb pushf dec add repz xchg jmp pop arpl mov pop mov fsts push in adc cltd and aas xor mov sahf fsubrl sub pop push cmp or mov fidivrl ret scas inc sub or in fmuls cmpsl push cmpsb adc jmp inc and ret add rorb or (bad) imul jmp aam lods es lret jl or xorb lret xor lods push movsl test fnstcw rcr mov and mov xchg decl add inc ds rcl and (bad) mov cmp (bad) push in orl test pop mul xchg jecxz sbb (bad) pop add push ss jno loopne pop mov movsb scas jecxz sbb scas jg mov (bad) jmp cmp sbb xchg repz mov or imul leave jnp mov ret inc xchg (bad) repnz fcom mov lahf stc jecxz out dec iret (bad) les push mov cmp sbb repnz in enter popf hlt sbb cltd mov lds xchg into int sub scas sub rolb fstps loop xchg xor jne inc icebp mull xor pushf cmp (bad) cmp int adc sahf daa inc (bad) aaa adc push repnz mov dec xor inc sub leave iret icebp xor (bad) mov pop mov jae dec inc arpl hlt push cmpsb xor sub dec aaa out pop mov cltd mov inc jecxz cltd nop imul or loope idiv pop (bad) (bad) ja xor call jmp mov cmp shlb pop repz int jp dec push mov movzbl dec enter jb leave stc or rcll mov shll lods movb popf xor sub sbb and repnz das (bad) jl mov pop int3 ret and adc xor xor stc popf mov lret (bad) pop gs daa loop gs push mov data16 or xor movsl xor mov lods fmuls mov bound rcll ret ret out and incl mulb popf rorw out sarb cs or jbe add mov adc (bad) xor pop enter (bad) mov cmp mov dec gs adc mov icebp cli lret in add jns mov clc and xchg jae out imul jp movb rorb pushf daa xor adcl sbb icebp test and cltd cwtl ds leave add sub xor mov lret mov pop popf nop push mov mov pop jp pop adc mov ja fidiv mov cmpsl push pop sbb enter dec add pop nop pushf add push sub nop cmpsl mov mov fisttp adc sub shl sub das iret and xor out pop lods dec mov daa es (bad) sti mov mov jne pop imul mov aas jecxz xchg xor xor lods xchg and ljmp mov push push (bad) mov leave dec idivb fs call stos int3 mov popf add mov data16 je jmp mov imul fwait call mov pop (bad) mov lds sub pop jno mov stc shl das fs pushl stos lret dec push divb fbstp adc and out out daa out call lahf nop cmpsl xor xchg jbe jmp jne repz sbb mov push jg pop (bad) mov or jg outsl jg push notl push cmp je leave (bad) sub pop ds mov pop sub xchg gs xor adc lods push icebp dec std sbb xchg dec xchg add jp mov pop push (bad) das decl pop xor into sub dec jp iret decl bound and pop xchg xlat mov inc loope outsb and faddp dec lds jl push or xchg popw add ss cmp pop push push mov adc pop fcmovne cmpsb mov lds push or and mov pushl stos sub add pop dec fstl adc (bad) push cltd movsl inc sub pop int3 adc rclb pop sahf mov dec call mov xor mov cmpsl nop mov cld lahf fidivl (bad) sahf lds (bad) scas jbe das mov (bad) dec (bad) cwtl sti and scas xchg stos xor cli mov cld or jmp hlt cs jg cli mov (bad) sub dec or lret dec ss xor jl pop fwait xchg (bad) bound push pop popf xchg outsb push lods ds mov fldt repz inc fimull out popf push add lret shrl adc cmp movsb cmp pop sub add (bad) mov xchg adc jg cmp movsl ret mov lods push mov fldt das pop pushf pop push sbb and push cmp pop gs mov (bad) sahf lcall shrb data16 jmp mov xlat bnd xor and add push xor lret cmp jnp cltd ret mov jbe push ret pop and mov mov mov mov mov dec mov add movsl repnz dec push mov sbb and xor sub cmp (bad) adc shl (bad) (bad) in xchg xchg mov pushf fldl mov jge lock dec data16 or (bad) xlat cwtl push xor sahf sti imul (bad) sub adc pop outsb adc add imul minps in or sub xor sub das adc test scas sub sub xor jmp data16 dec cmp les (bad) sbb stos in imul shl push fstpl adc repnz sub out cltd xchg jmp in jb daa repz adc subl push js pop iret mov call jb mov mov sti cld rol cltd dec gs outsb sub mov negl repz mov fstps movsb or xor psllq pop add clc dec rcr push (bad) jg into xchg test sub dec loop mov ret js lret sub fisubl push fs (bad) repnz pop inc lret push inc (bad) and jb adc adc sub aam loop sbb or ret and pop ljmp pop inc popf mov loop pop sub ljmp movzbl or loop mov negb repz sub das testl and adc xchg sar cwtl push and rorl or dec inc and dec sub xor push mov adc push mov or lods xor adc or adc or mov js les (bad) out call insb call push fisub gs les into sbb cli xchg dec push pop (bad) mov pop popf (bad) sub lds shr mov mov add xor addr16 leave icebp jg pushf dec (bad) out dec push test pop or mov imul sub divb adc xor mov xlat cs out dec mov add mov pop pop add divb in and sbb pushl dec leave jecxz dec scas les out call imul sti das sub sub and notl pop pop mov pop sbb pop pushf mov (bad) jns gs jmp addr16 add call mov cmp fdivrs mov loopne ret push fisubrl ror sbb and and and out dec sarl movsl xchg out mov xchg push loop lds roll pop ja mov (bad) idivl mov out sub cmp adc clc cmc popf (bad) notl int3 popa xchg or mov out movb sbb sub mov push sarl push sub add mov push scas (bad) fsubp jb (bad) lock fwait adc add mov xor mov stos (bad) scas movsb enter lock imulb sub mov or mov (bad) dec or outsb cs mov pop mov rorb repnz jno dec mov xor lahf dec mov movsl cltd inc cmp sub mov stc xor gs bound jae,pn loope adc lahf lcall imul mov ja cmovns pop cmp pop call jnp aas sub push and sub mov fcoml roll inc sbb lock add jl lds xor sahf and fwait aam mov test (bad) enter sbbb lock mov pop and add aaa mov push repnz out js and mov xor out dec adc mov (bad) loop (bad) jecxz cld push dec stos int das add cmpsb pop daa sbb push xor mov cmp rorl fwait push xchg iret pop inc cld fdivs aas cmp lret adc sub pop stos sub popa push imul pop and aas or (bad) and or fcompl push popa es fcoml pop icebp sbb dec mov mov jae out or adc rep adc imulb mov mov and hlt data16 sub andb fisttpll jns jle pop mov cmp int rcrl das xor jne popa jg mov je in mov push mov ljmp mov xchg scas mov fidivr sbb (bad) stos mov or mov pop out es and push xor jp mov add sub das mov in and imul (bad) xchg (bad) sub sub daa xor jg cmpsl mov je jl leave jge jl and and mov repz call std sub sbb cli mov aaa push test mov xor js xlat test jb push sub sub aas mov jl jecxz sti mov fstl icebp sub pop ljmp lret leave jo cmp or inc in lock sub mov mov sbb xchg dec and add clc push mov xchg stos dec and jbe (bad) imul pop out gs mov pop dec xlat xor repnz mov cmpsb jl sub jecxz adc ljmp or adc stc jg loopne int jg in shll jmp imul out leave jne ljmp call mov out lods pushf in push out sub mov mov out push (bad) fs mov stc scas mov mov insl das sub fistp cmc add or (bad) mov xchg test cli repnz leave lret hlt sbb inc xor incl mov sub sub js lds fmuls lret xchg adc push mov mov adc scas mov pop clc xor scas repz add lret jae repz xor out sub sub xor ret dec (bad) cli loop push and pop sbb shr xor xchg sub ret inc sub pop insl push push (bad) or or cld icebp mov dec aad xor sbb test sbb push push cmpsl and jg and cmpsl push pop cwtl and xor test sub xor or test ficom lret mov dec mov mov xchg out mov cmc xchg adc ljmp add mov push sbb mov test sub enter iret into push mov mov scas inc add lea push or icebp stos mov cmp add sub add outsb int3 mov mov fsts dec and (bad) jns cmp (bad) pop jecxz sub enter xor sti inc adc mov lret pop lds cmc xor imul push fiadd pop in or insl (bad) jp gs jmp mov sbb add ficoml imul jecxz mov mov adc inc jge (bad) nop dec stc xchg xchg mov outsl pop sbb cmp push and xor popa ljmp icebp xchg xchg lods shl or movsb mov repnz stos orb xor mov repz or add and jg fmul sbb pop sbb or test add sti into adc mov add jge xchg ret lcall jae movsb lods and call imul xor mov ret and sub mov xchg loope sbb or mov sub jp xor clc lret inc mov sub lret jne pusha ljmp mov adc sub shrl lods or or sub hlt shl cmp inc dec mov add icebp scas lret mov call ljmp cs les mull or jl pop (bad) mov xor and in sub jo test dec cmp int fisubrl bound mull pop sarl lods imul cld cs and mov cmp add cmp cmp mov or notl daa adc xor out add rcll daa jo xchg gs sub test stos sub sub adc ljmp or scas jecxz pop or and fdivr lret cmp ret lcall jno adc (bad) or push repnz mov add stos clc adc pop fwait repnz sub sub cli aam and xchg jb fnstenv xchg adc insb mov dec lods mov lods dec pop pop insb sahf icebp es sub scas sub add rorb mov inc and xor pop dec test test sbb pop or mov or sbb fsubp xchg dec pop mov ja xor sti cmp xchg jmp aas das rcl sbb cs mov fbld das mov push push sbbb dec in adc xchg stc sbb imul inc sub push fstpt mov cmpsl pop sbb cld lock pop sub testb cmp daa inc mov add lock bound notl aas jp ret dec xchg xlat mov sahf dec cli idiv or xor cltd in stos sub icebp pop inc sub cmp (bad) (bad) in jp cmp pop add mov jmp repnz cmc push cmp jmp out mov pop lods movsb scas clc bound cmp aam dec cs jb and popf sbb (bad) cli lods cmpsl fiadd sbb add es push push aas xchg aad sbb ja aam lods xchg out mov je push cmp jl jns imul pop and loopew test daa out aam pop jmp mov ljmp iret mov (bad) mov out nop rcrb sbb sbb and or pop mov icebp mov idivb out jnp movsb add inc jg je pop out scas sub negl jo add fstl pop out add pop dec jmp out clc stos mov pop sbb mov rdpmc adc iret ja lcall push inc pop rclb cmp xchg sub jle (bad) jmp scas or xlat xor add ja xchg jp mov inc shrb (bad) cld sub xlat out je sti repnz mov sub dec cmc mov push or leave dec xchg inc cmp popa sbb in sbb sbb mov dec or cwtl aas cmp mov mov mov fildll mov inc fimul leave sbb lods push or mov xchg dec cld and lret decb dec push aas sbb sarl lock pop add sub sub fnstcw mov sub daa or xlat xchg (bad) sahf jbe pop xchg lret inc add and lods fcoml mov xlat xlat jg adc (bad) gs jae lret ljmp xchg push outsl out sti (bad) sti into shlb (bad) je outsb xor sub out orl mov roll dec jmp cld lock pop dec ss fs stos sub (bad) cmp mov jns imul hlt scas mov push adc jl int cs loopne pushl movb sub movsb jae dec cli push das sub divb jecxz in daa xlat int3 aaa mov and jb xor adc sub xor repz push push mov and and jl pop shll xor sub testb rcrl imul ret scas mov xchg fs xor repz bound or cmp in adc popf das sub jg mov adc pop test stos cmp fwait add pop clc insl fiaddl das mov cmp mov fistpl sub inc sub xlat xor loop cld inc movsl call clc push mov adc scas mov mov ret push dec rolb pop xchg call test rcrl dec outsb sbb mov adc int sub pop and pop cmp sbb cli jmp ficomp push mov fsubl ret icebp ds xor or sti movzbl xchg imul xchg pop cmp pop xor mov jno jmp xchg mov leave inc mov nop dec xchg imul pop repnz xchg test push sbb add jmp mov jecxz cmp daa cli std cltd fdivrp das lods mov push out dec leave and xlat push imul mov cwtl mov push xchg mov xlat lods jbe push jg mov into xor push (bad) lock fcos icebp pop out leave out ja test push stc mov ret sub xor shrl stos xchg (bad) (bad) push pop push repnz icebp decb loop (bad) jg repnz jb and (bad) inc hlt (bad) jp pushf stc (bad) dec mov mov popf jge (bad) mov dec clc movsb xchg push ret sti bound adc mov (bad) mov into cltd inc sub mov flds ljmp inc xchg xlat ficom ljmp and jne clc jmp das adc mov leave jge xchg pop sub outsl sub add outsl sub sub xor test sbb loope outsb fcomps cltd (bad) xchg shr jge inc xor cltd xchg insb sub stos (bad) sub insb mov sbb (bad) adc pop (bad) cli dec das add clc cmpsl jne pop movsb fimul and fldl in insl xchg xor xor cmp call ljmp (bad) cld pushf mov jne data16 add mov movsb in push push jecxz dec and pop jg pop mov adc and push dec mov add mov xor mov popa (bad) xor pop es jns xor xchg jmp pushf (bad) dec sub jne add inc ret pop sub je stos cltd stos cmp pop dec xchg dec fstps lods (bad) mov xlat jno cwtl data16 xchg loop imulb test into mov rol out loop cwtl outsb repz sub movl in xchg jbe sub clc je mov pop in inc in fimull dec ljmp gs call and rcrb mov out sub dec dec add mov inc fucomip cmp or cmpsl pop xlat inc fdivrs xchg xchg or lret in adc jmp inc dec mov scas movsb mov dec cltd fs lds shll push repnz in das fildll jl pop sub adc sub add addr16 mov (bad) push fsubrp clc sub lock cli or data16 and repnz sti insb xchg test add dec loop test add mov aam das sub xor cmp cs sahf cmp cltd je xor stos rcrl adc fcoms mov cli jp shlb pop out cmp out sub roll inc shll dec fbld and dec jl (bad) jmp mov les sub xlat repnz xor push mov add xlat mov push and pop cmp fisttp out push mov cs fisubl leave or pushf and mov add insl lods sbb cmp (bad) mov loop cmp mov lret popf imul mov lahf daa push fldenv pop mov mov stc mov push btc sub mov data16 lds xchg loope cmp cmp dec push mov popf dec (bad) sbb paddsb and fidivrl xor add in movsb jp add daa sahf (bad) jl sbb shll enter and add push jmp lret jo adc sbb testl and popf pop popf dec pushf add mov outsl adc test loope (bad) sub push movsb and or sub scas int in cmp ffree rolb (bad) ss cmpsb mov loop cmp cmpsb push mov sti or mov and pop negb fs mov add sti xchg xor inc push cmpsb push loopne xchg out je adc inc xlat mov sub into in orl and xor and and cmp push shr push loope jo dec shrl mov scas hlt xor push dec (bad) mov mov (bad) dec push mov sbb mov sub ljmp push mov sub mov push (bad) lcall or mov test or stos popa call fisubl repnz mov fisttp dec repz sbb cmp fnstcw push mov pop xchg lods (bad) test jl cmp or repz adc cmc sahf add popa sub into dec pop xor adcl mov dec cmc inc in add jge lock sub dec sub cld jb cmp cmpsb dec push mov repz imul popa sbb aas neg daa ret sti ja js and push cwtl lods popl xchg sbb icebp add cmp inc cmp adc mov cld cli rcrl daa inc dec popa sub leave iret outsb repz out add adc dec das (bad) idivl xchg add std out testl xor mov inc push orl out out imul mov dec pop or out sti repz fnstcw add ss idivb pop lret dec cltd inc mov mov pop sbb pop sbb iret sub xor and mov ljmp orl inc fdivrs pop fldcw or jbe bound bnd lahf sub dec std (bad) xchg scas (bad) pushl lea add add int3 cmp shrl push aam and xor fucomi sub push lds cs cld cld sbb out push sub pop xchg roll and imul sub sub (bad) xor mov push dec repnz mov xor sbb sub lahf xor mov lret or add sub out orl repz push cld xchg inc add js lahf fdivrl es adc sti xor pop push clc shlb jmp pop sub adc fbstp xchg bnd in (bad) ja out movsl incl xchg pop pop cmp rorl scas insb mov gs push imul mov fsubs loop pop xchg scas jo add or jno mov inc in popf or mov out cmpsb add add (bad) out cli sbb test mov rorb pop push inc jae mull sub inc daa lcall shll int add aas cmpsl aas sub icebp jb mov sub mov mov jno dec inc daa repz movsb jns or lcall mov das and and cmp pusha mov sub xchg (bad) inc dec aam in mov sub or (bad) test push jmp dec or xor cmp scas cmp xor push xor adc into add (bad) xor xor pop (bad) mov enter mov rcrl in stos je add (bad) xor stc cwtl enter aad xor call scas fs push jl leave xchg out xor movb incl icebp inc clc divb out jecxz dec mov lret jno lods in mov lds fisubrl shl out loop xchg inc xchg or and xlat xor popf incb lds stos xor sub pop call jo movsb and cli fisubrl dec sbb cs movsl xchg inc sarl popa icebp cmp sub push dec mov (bad) lods lods (bad) and sar cwtl xor in mov stos gs mov cs or push pop loop jbe vpsubd jmp outsb lahf mulb or jnp xchg (bad) out repnz mov stos (bad) mov (bad) int and mov pop dec fidiv aad adc aaa das pop xlat popf repz pop into sti int3 insl negb xchg stos xor sbb cmpsl je and lret pop jnp iret mov into (bad) out lret int add scas loop rol jmp test xor daa pop pop fs pop dec jle and out lea mov inc add push imul jle sbb popf je push push mov icebp and out mov fstl push rolb insb outsb sbb add or jno sbb adc xor push arpl sub aad test (bad) or sbb or mov or mov jne sub movsb ljmp cmp sti pop test popf mov or sub sub movsl stos fmuls dec andb cmpsl pusha call sarl cmpsl leave pop cmc add pusha rcll cmpsb aaa repz (bad) movsb lock pop je push outsb mov out int or lods sub les adc dec (bad) mov lcall fsubp stc xchg ja inc lahf imul daa out xchg outsl and xchg jmp mov ljmp xchg flds push scas in cmp add or imull xor cmp fs mov adc orb add (bad) xor or in lea mov ret dec mov xor mov lods imul add mov lahf push stc call popf cld movsl pop inc divl inc xor sub pop repz gs xor and mov loop hlt aam pop sbb aad inc idiv or cmp outsl into std ljmp mov decb ja xlat sub fisub and test scas lea xor fnstenv jmp jmp (bad) xor add sub adc fiadd and stos fdivrl xor fldcw cli lods jl jmp jnp push lods pop and clc mov (bad) nop jb stos inc and notl lods lea cs pop push imul loop mov and dec push (bad) lret (bad) mov pop sub ret push or sbb xor push mov sub push jle ljmp (bad) jbe (bad) leave mov les push ret imul sbb inc decl push std int3 bound fdivr sarl sub movsb in ljmp inc shrb int mov pusha jmp rorb jbe pusha divb adc jbe dec out scas sub mov jns push (bad) stc je mov int3 mov dec xor mov in imul push cltd push (bad) out dec jbe inc cmp mov jb push nop mov jnp int3 outsb jne adc pop insl scas mov fcomps xchg jo push mov xchg xor xlat xchg mov mov xor xor mov xor iret and (bad) lock repz add mov lea scas (bad) (bad) fadd add addr16 adc inc out pop aas loopne into popf xor inc xor ja inc pop adcl push enter (bad) cmp inc lea fistpll lea xor leave sub dec rcll xor scas mov pop int cltd adc sub mov fisttpll dec stc stos cltd int es jbe bound stc xchg sub sub leave stos sub mov out adc iret fsub out into inc leave adc icebp jge ret and loop or sub movsb movsb mov pop std es dec push fnstcw pop mov or push or lret hlt adc cmp jmp mov sti hlt repnz mov add lret dec aad push xchg sbb cli mov push (bad) inc (bad) push aas pop jmp aam leave (bad) or aad movsl jo rcl gs repnz pop in int cltd mov push popf imul adc call loop xchg push outsb mov lret mov cltd sbb sub ja push (bad) das xor cmp cli jge add imul and cs fdivrp pop ret shrl pop fsubp test (bad) adc lods out movsb (bad) or nop add inc adc mov mov push dec dec out cs xchg fstps data16 call cli add dec lret cwtl mov pop stc xor lock rcll pop mov lret aas push xor ficomp movsl jno mov mov ljmp inc das mov or push sub jecxz dec daa ds jp ljmp jne (bad) repnz (bad) test scas cmp outsb (bad) push negb out insl bound notb mov data16 fsubrl scas jge hlt dec or xchg mov fistp (bad) daa push insb ja push dec jne xor xor or jl pop add or sbb add pop xchg sub movsl cwtl ss nop jmp fistp pop sub clc mov out add loopne std or pop into idivb xor pusha leave sub shrb icebp ss and pop lock jmp adc xor xchg sarb mov inc mov push sti cmp xor ret sub xor scas ret sub pop pop outsb daa jecxz cli imul andl stos mov add or mov jbe pop add pop cld rclb clc dec xlat orl push imul mov pop xor les and rol push mov das xor cmp rcrl sub jl fiaddl add aaa je lret push mov and iret scas cld sahf ffree ret shl fcomps mov aad ljmp pop mov add leave sahf incb and mov (bad) icebp out mov bound push pop out push aad dec daa xor shll daa mov mov mov inc es sub jmp rcrb adc xor push xor fstl lahf push adc xchg cmpsb dec jg and movl push daa repnz jnp or sbb xchg and test movsb out mov pop or pop ret mov scas inc int add mov popf jns push stos bound ret add jmp mov sub add in aad mov out and or mov (bad) or fldl and sbb inc add test mov mov mov mov xor cltd dec jmp pop icebp repnz repnz shlb sbb xlat sub add adc loop sub mov jge (bad) xor jmp add mov mov xor rcrb and push sub ret imul push mov mov stos fistp or ret lock adc add into or and fs test ffree (bad) cmp mov xchg push adc jbe daa adc mov (bad) xor (bad) ljmp pop in aam add cli mov mov mov in add mov (bad) push cmp pop lret mov jle rorl scas cmp pop nop sub push pop mov pop jge or cs into popa mov xchg mulb pop je popa and mov (bad) sub vmovsldup scas bound imul push (bad) in ljmp clc inc in lea jle inc mov sub inc in cli mov pop mul jl jo cmc xor dec inc mov cltd cmpsl aam push bound fbstp data16 fsts fstl scas sbb adc fdiv rcrb fisttp (bad) out gs inc mov cltd daa pop push in and or fsub aaa imul xlat xor out in lods in loop hlt out in lods aam dec call add sub push cli (bad) ja pop mov daa and loope sub add mov and clc daa xchg nop jg push rorb insl jmp nop jge cmc or push mov sub pop (bad) or jl movsb in add iret lock roll push and aaa out in stos mov sar bound mov xlat movb enter scas cmp sub xchg mov pop icebp sarb push out mov std gs cmpsb pop leave push or and mov out jle,pn xchg insb push xchg out pop sti scas sub pop xchg andb mov mov into ficom sub dec mov stc lds fidivr movsb into cmp icebp mov icebp adc (bad) cmp out fstl cmp fistpll cs lret mov and or jmp ja mov cmp xor mov (bad) dec push sub sub mov in push imul lock pop (bad) iret leave fmulp sbb rcrl sbb xchg leave cli pmaxsw mov mulb fistpll mov fldenv leave mull xchg pop mov scas mov gs or ret pop push (bad) lret mov jns test mov sbb jnp cmp repz ja jbe or xchg (bad) imul adc jno ljmp inc icebp fdivs add cmp gs das notl push push imul jg std (bad) sbb add mov add sbb iret jge repz jecxz pusha or push (bad) xor sarb mov add sbb lds imulb sub cmpsl pop push loopne lods inc xor ds movsb adc sub sub mov mull and lods mov loop xchg mov jmp outsb (bad) test hlt pop pop xor popf mov (bad) adc jae lea stos cmp mov aas pushl sub push rorb xchg icebp jb repnz lahf cld (bad) sbb xor lods pop lods cmp pop lcall out inc rorb test and leave adc mov or push lcall scas cmp mov aaa repnz xor stos lds ret mov sub mov daa cmp and icebp int3 mov sub add dec pop add xchg lds daa xor imul cmp push sub into push adc neg pop adc test (bad) lock std popa cmpsl cmp lds stc sub lret sahf mov mov rorl (bad) xor jg adc add jnp mov and cs mov mov cmpsb jmp testl rcl lahf mov shlb test ljmp xchg cld inc jns insb xlat movsl sti cltd cmpb aam ss jmp xchg lret xor pop mov mov negb xor inc (bad) out inc push loopne rcrl mov jo divl xor and push jnp out mov adc pop lret xor add sbb dec lahf jmp iret mov adc xorl icebp xchg cmp mov xchg push leave movsl scas add jl push mov bound icebp jb (bad) sti js loopne (bad) mov mov jns dec int3 cltd das mov je jmp insl pop sarl scas (bad) enter ss or pushf adc mov stos mov mov dec xor out mov dec lret test add mov (bad) std inc and mov lods mov adc jmp cmp pop fisubr pop xor fistp mov int mov mov jg lea (bad) inc pusha add add mov cli or dec jge test add rol push sbb int3 xor push mov push sbb test xor sarl or dec icebp jg cmpsl (bad) dec ljmp pushl mov mov cmp pop fisub mov scas jmp push cmp mov rorb movl mov mov push pop push mov or xlat pop (bad) sbb and and jmp imull dec jmp mov (bad) fmuls xchg push add call add add and mov and pop pop out dec pop in lds pop ds push int loope cs cmp fisubrl mov xchg dec test fdivr cmp mov (bad) pop xor sub dec leave jecxz pop jmp mov push out mov stos orb xor ret icebp xchg lret pop shr push popf mov xor or xor mov call pop mov push pop jbe pop push push (bad) and pop addr16 ja sbb dec jmp dec ret mov sbb je add pushf add mov mov xchg mov (bad) or pop pop cmp pop cmp add mov lret push aas test rorl mov push out xor outsl call jmp popa adc cwtl movsb call stos (bad) in mov add popf lahf (bad) movsl daa roll jl pop or pop mov xchg dec enter push lret fldenv fidiv pop xor popf test loopne addr16 and test mov xor sub add fnstenv sub mov mov shll mov std (bad) push insb inc mov pop jno dec pop imul mov jge fucomip inc pop sub xor fsts jg ret xchg xlat adc in sti push sub sti lahf xchg add sti mov sar mov xchg lret add cmp aam mov clc xchg xchg or in or pop mov sub add mov ret sub and cmp mov pop divb and add xor dec pop sub mov cwtl inc jmp sub pop xor mov mov and push (bad) (bad) jmp (bad) push (bad) jecxz loop lret xchg sarb xchg jmp and nop push or jle (bad) sub dec jmp outsl sub sub aam stos xchg js sbb lret cld es sub sub aas pop outsb dec imul fcomi int3 adc jmp (bad) imul dec mov xor ret daa mov leave xchg push fwait xchg int3 cli mov js sti out cltd mov fs mov jecxz adc mov xor in cwtl and sbb mov cld test and mov dec jge xchg cltd inc leave outsb jecxz mov ja test xor mov lahf jmp int xor cwtl ja jl xchg insl jecxz push cld negb fucom mov shll daa push lcall mov (bad) repnz lds mov mov cwtl dec (bad) mov and xchg pop xor adc or dec and xor repnz push add fdivrp lock xchg pop sbb mov std mov add xchg sub push test sub inc and mov lods add stc and popf (bad) jne (bad) or imul ret mov mov popa mov into (bad) push sbb sbb out sub cmpsb jle cmp jns loope aas sub popf lds adc ftst (bad) mull ds and (bad) js push icebp cmpsl jnp xchg (bad) ss adc mov pop (bad) and add stos bnd cmp push rcl add xor ss add subb cwtl lahf mov test adc jmp mov (bad) loop mov je lret lcall cli push pop add bound fstpt push lods cmp mov decb es aad xchg sub or dec stos aam ljmp and pusha cmovae rorl cli sub imul cmpsl pop imul (bad) stos mov je icebp ficomp push int cmc scas mov in mov fist nop xchg sbb add pop lahf adc pop add jnp test and ljmp shr add add in or lock xlat jno sahf sti push out out mov and xlat movsb test xchg int call dec imul sti cmc add sub outsl in sbb out test cwtl (bad) (bad) lock repz dec inc shll iret and mov push push sub fild add out pop lcall xchg or add or repnz push ds mov in pop (bad) xor test bound or push mov pop and mov enter and push in icebp sub pop (bad) xchg xchg lds je pop es sbb xchg popf mov shl mov cmpsl mov mov jbe xchg dec pop testb (bad) pop aam repnz fcoml or xlat xor sub push (bad) fsubp popa ja mov mov and sahf sub pop (bad) mov pop xor aad movsl adc jmp lock pop sbb aaa cmp cmp xor icebp mov adc fisubr (bad) cmp das pop and (bad) mov ljmp xchg add jecxz mov dec push daa clc hlt test ss lds (bad) xor and or bound dec enter jmp mov and lret mov (bad) sahf cmp sbb into imul imul push fcmove sbb inc sub out xchg adc out fld1 inc dec mov in je and fnstcw adc mov pop mov and xchg (bad) enter sub lahf xchg mov sbb rclb push sbb or add pop jae movsb push mov jmp cld das cmpsb mov orl sub bound movsl stos int3 and and adc enter and mov adc or sub sbb cmpsl and push rclb dec mov insb mov sub jnp das inc xchg lahf jo push and divl jmp scas and iret pusha movsl pop (bad) mov sbb popa dec imull mov or jmp test test out mov dec sub in sub lods out adc jmp mov scas adc (bad) addr16 (bad) (bad) repnz xlat popa or js lret into sbb jg push mov ficomp push das mov inc sub rorl (bad) jns and shrb pop stos xor nop pop ret jle pop pop loopne loop push test mov fsubl scas fld pop testb mov mov enter dec mov into sub outsb cltd sti cmp xchg pop lock data16 out lods movsl mov pop mov xchg jns cs cmp and orb pop (bad) or out mov jb divb in scas xchg mull mov lret aas xor adc add mov mov jbe lods inc add rcrb lea pop sub (bad) int cmp cli (bad) addr16 jl inc fsubrs mov dec sub (bad) mov or and jecxz aam (bad) bound popf jg rdtsc insl cld mov aad sbb inc mov pop jl sti shrb js (bad) lods es mov dec ret ret or sub jmp adc sub sub cmp cmp cltd pop dec sub sub mov repnz mov pop mov clc sti dec mov pop out das xor or or adcl adc ret insl dec das mov imul cmpsl enter fstpt dec sarb jp lret jle inc rcll enter mov fdiv aas mov popf outsb jecxz push jl push or aaa push lahf mov inc mov aas lock out push add imul push scas fsubrl cmp cltd or cmp (bad) repnz fmull pop pop mov mov test (bad) mov inc movsl (bad) int3 ds or xchg movsb (bad) test mov ret sub mov call pop xchg jl fstpt pop fwait inc dec in mov aam leave and (bad) repz or sub scas (bad) ds sub add (bad) pop pop adc je,pn jmp mov out mov test (bad) mov dec xlat test jecxz repnz push bound in mov cmpsb mov std mov leave cmp (bad) push div loopne add or sub mull xchg lds fnstcw mov pop in (bad) mov jns push jmp sub and xor cmp sub sub out xchg fbstp mov movsl push addr16 lods push fcompl addr16 fsubr or shrb sbb jns and mov add sub ljmp notl jne pop scas push ret and les decb add test sub jecxz pop or lret mov sub or test arpl push push pop sub iret out adc push and nop mov lret cwtl je inc mov mulb adc xchg lcall into popf adc (bad) hlt pop (bad) gs push cmp loopne negb mov (bad) call stc rol outsb js movsb aam stos lods lods xchg adc in mov es and mov shll popf out lret jg push xlat loope jmp sub add sub test test cwtl roll fstps dec call das test mov pop movsl icebp stos and lods cmpsb xchg sbb ss lods in mov rcll lret jne stos xor jmp popa ret push cmp sub xor leave mov sub dec mov adc in les sub iret mov pop je sti xor loop shr lret mov scas out pop mov pop xchg cmc fdivs mov sub das sub jle mov icebp mov xchg xchg sbb jmp clc in jmp (bad) movsb out pop jecxz adc adc fcmove and iret insl push jle jecxz adc idivb insl andl dec std loopne testl jl data16 addl icebp add mov fwait pop out sbb aas cmp sub cmp out or arpl inc mov not fnop push add mov push (bad) test das xchg xchg pop mov pusha dec add mov and sub jb pop sub xlat dec std nop mov dec daa sti mov cmpsl addb cli iret add dec (bad) jmp cmpl iret pop mov ds pop xchg scas cmp test xchg cld lds sub add fcomip dec in xor push adc fildll pop lock push inc push push (bad) aas jne pop sub adc pusha mov je and call xchg jmp iret mov stos fbstp ss dec mov dec adc loopne scas loopne iret mov push (bad) mov notl dec loop pop (bad) mov repnz ja pop leave push (bad) lods jl pop dec fcoms lods pop cmp movsl push xchg xchg and lahf push rcll mov test sub testb xlat in cmpsl repz sti call or stc jge in sub mov xchg add jge inc cs daa pop dec jge xchg add shll ljmp ljmp jno dec sbb jo xchg daa sub mov ror pop js dec scas mov pop inc leave push cmp cmp sub iret imul lret xchg and adc fsubs cmp jmp jae xchg imul sbb je in (bad) mov jo mov loope fstl dec test mov mov mov movsl xor std dec popa pop fisub pop xchg push dec push mov mov adc out mov in das or stos in (bad) shrb adc sbb or aaa outsb mov ljmp jno leave (bad) in or enter mov adc gs daa adc sub test cmpsl gs out lret add sub ljmp (bad) (bad) cs insb popa or sub les fmull bound ret leave inc pop jo lret ljmp (bad) clc mov jne mov cmpb test xchg push push push les or mov push sbb out scas xchg cld pop dec jne stos xor dec ja pop and lds mov cwtl xchg add repz call lcall and daa or jecxz xchg mov xor mov push mov imul pop lods ret (bad) mov add in mov inc mov call sbb or leave pop cmp mov sub adc int3 sbb fwait mov icebp push fldcw stos data16 xor loop xchg clc cmp jb mov int ljmp lock jg mov clc mov outsl sub dec inc popf xchg out insb movsl (bad) sbb xor inc adc int3 out mov inc fidivr xlat jns dec push dec int3 and fsts into aaa mov movsb stc add mov sub mov dec ljmp dec xor (bad) mull movsb (bad) fdivs out pop sub sbb pop leave push out ja pop test adc adc mov leave mov pop pop xchg clc lcall loopne ljmp mov xlat out lret sti jns cmp shr das mov scas jns gs sbb mov out fs sbb add (bad) or and push out fidivrl negb pop xor call pushf sub fnstenv shl ja iret and insb pop leave repnz test movsb ljmp mov jmp and sti sub pop or mov enter stc add js pop (bad) bound sti cmp rcrl mov dec stos test aad out fstps mov rolb xchg repz lcall (bad) outsb clc test jno (bad) inc clc loopne repz cli and fsubl sub ja mov or and fisubrl rcr ret sub xchg jecxz pop xchg leave adc (bad) stc ret cs test rcll or int sub sub bnd xchg ljmp insb mov ss xor aaa inc jno sbb enter pop pop or notl mov lcall jp loopne xchg fmull daa xlat mov ds loop dec (bad) scas lahf in out daa ljmp orb add dec add bound jge ffreep stos pushf cs or pop mov lea inc adc adc sti stos fnstcw jle in mov push into add (bad) xchg arpl add xchg lcall (bad) pop mov jecxz sub enter mov push mov pop test jle (bad) out std idivl enter xlat es (bad) rcrb lret jmp ror ja dec xchg ljmpw dec stos xor mov (bad) imul push lret xchg xchg or ret mov add push sahf (bad) xchg jmp loop sarl lock fld1 imul sarl lret xor jle cli push inc sub test (bad) or in lods lcall and sub or inc jns dec cltd sub mov or hlt inc outsb daa and popa out out and cmp (bad) cmp idivl xchg and mov or lock call popf aam jmp mov add sub jp inc mov dec test fisub cmp xor ret rcrb push push push bnd test xlat les sub fwait dec cmp scas mov jl loop aas or or mov ja (bad) xchg (bad) jnp pop inc dec sbb hlt or mov or xor and push test cmp sbb int3 imul xchg cmp pop push adc jmp jbe pop sub mov (bad) stos mov addr16 out xor or push jmp out insb dec push sahf ljmp dec pop mov js mov sbb lods fwait mov or xor pushf jae add (bad) aad arpl inc xor daa pop mov aas mov cmp mov lods xchg and cld push cmpsb aad xor inc pop out mov stos in jle sub out lret rcll xor mov jg outsl cmpsl les inc dec push les rolb dec fnstcw dec decl jne sub ret lock mov shrl mull popf inc fcomi xchg cltd mov (bad) or and clc add (bad) mulps ds leave out fmull adc lahf in mov push scas int3 cmpsl into das add fcompl lret jo mov dec pop out xchg js push movsl add and stos mov xchg enter call shlb mov nop lcall lret mov adc ja mov xor in cmp leave ljmp movsl loop ret push imul fs ljmp test and sub mov push sub scas lret and mov lods notl pop push jno pop cltd daa push add scas sub testl (bad) (bad) jl push mov mov inc mov xor in jae inc inc mov mov dec mov pop pop lea pop popa shll inc inc cmp push mov into sbb sub out pop add rorb push cmp pop pop jno sub and mov sbb div jnp pop add adc jge mov mov movsl inc aam cmpsl inc divl cmpsb cmc fstps lods aam ds mov call fstl nop in (bad) mov jnp or loope add not inc test xor dec test cmp test lahf pop pushf test in sub cwtd pusha (bad) jp xchg mov mov popf out lret fsubrs add lods sbb or rcr scas div dec jecxz pop mov or add jle daa in cltd clc rcrb dec or scas cmp psraw sub mov dec aam loop xchg xabort sub lcall mov mov icebp ret dec push mov push pop pop add mov bound fistpl inc mov dec ss cmp cmp movzbl mov (bad) imulb fcmovbe call sub sub mov ficoml push pop mov out data16 add sub mov ljmp movsl stos jg jo jne push iret test sub xor lcall inc cmp xchg adc mov cmpsl pusha sub push out mull jae mov (bad) test sbbb cmp push cmpsl push push in and pop shll aaa test mov std xor ret and dec fstl and xor mov bound adc int aas mov xchg cmpsl or xor comiss xchg icebp ljmp lock and mov jmp lret (bad) js repz lods arpl add leave mov icebp cld adc loope dec xor mov push hlt xlat ss fs dec and fistpll ljmp pusha cmp pop cmp stos popf cmp loopne mov inc test imul lods mov das (bad) popa sbb std mov addr16 repnz dec ficompl mov mov pop loop test fsubrs or fdivp movsl and popf push add xchg js or xor xchg int3 sub shrb out lcall outsl jecxz aas xlat pop cs sub mov jge fidiv repz jmp fstps ret jbe pop or nop test mov outsl neg dec mov lods (bad) fdivrs mov jnp das push sbb xor mov mov cmc stc pop dec notb add ss pop les cltd mov je inc dec and scas popa (bad) iret pop push xor pop mov sub test cmc aas sub js rolb and mov idiv pop (bad) fisttp out sarl fstpl dec cmpsl pop std movsl mov or push sbb mov ljmp sub mov sbb rol mov ds sub xor mov pusha mov mov mov pop xchg leave out pop test inc sbb sub mov jnp ljmp mov mov (bad) and mov fnsave lds (bad) pop xchg rcl (bad) sahf xchg cld out xchg (bad) mov stc (bad) adc stos sub fstps add in sub mov clc out mov jle icebp ret and sbb hlt cmp ljmp xchg pop xchg push (bad) in sahf push add mov addb mov aaa popf pop test cmc repz outsb sahf adc mov mov in mov sahf inc dec idiv sub ds add mov xchg imul shr mov add cmp std inc push jb and mov jg dec ret xor push inc aad cld out mov cltd icebp mov bswap fwait pop cld lods xchg mov rorl pushf cmp mov xchg or sub fiaddl lret sub icebp test jb add mov gs out scas mov sub cmp push cmpsl in dec lea cld jne xchg sbb xchg adc inc pop xchg inc fs jns mov xor shll mov sub out daa and dec icebp xchg scas loop rorl movl xor mov movsb push cmp rclb in cld lea push sub lahf out loop xor jge mov or push sbb pop push mov push sub inc aaa sbb sub sbb xor and mov mov loopne (bad) xchg jae xchg adc in (bad) lret and out fmulp push mov mov loopne pushf or xor push adc jne retw aam push mov mov jo mov mov bound sti jge sbb lock pop sbb out sub or push xlat in cmp push lea fcomps repz sub loopne sub mov arpl cli mov mov pop rcr imul mov dec mov jmp inc pop xlat mov push sub and adc cmp xor adc sub pop push out stos lret mov into aad push rcll mov mov shrl pop pop imul dec shl jmp into notl or adc jle cltd pop mov stos (bad) fldcw inc sub pop clc push and cmpsl call ret loop push fidivl pop dec pop pusha shll pop pushf mov push and mov (bad) mov adc pop push (bad) and sub inc sbb xchg cmpsl pop gs das inc jle xor lret sbb pusha js notl and xchg repz das sarl (bad) fdivrs (bad) repnz xchg sti xor and xchg movsl push loope daa lods sbb mov xor or mov inc cmp (bad) js rolb neg lret mov shl ret insb leave popf not pop xchg xor mov push aaa mov lret jne inc ljmp dec inc lret xor sbb or or xor and push mov loope daa mov add popf jbe push sub mov sub xchg lcall xor lods pop lret mov movl aad push pop out stos jbe (bad) xchg jge jo decl sub push gs sbb inc daa cli idivb das mov (bad) enter loop adc pop (bad) lret orb adc push and shrb lods (bad) repz cmc pop test pop cs xor sub ljmp mov mov mov movsl ljmp leave divl or ficoml mov xor jno mov stc fsts add dec pop cltd out sarb fs call xchg mov rorb sub or lret icebp jg or ret test divl sub cmp ja,pn pop imul add push sub adc aam mov popf sub pop or scas bound dec sub xlat or or stc or popf push xor rorl insb mov shl dec mov pop mov sub add rcrl jmp jo and pop sbb int3 jl iret push or lods xchg test loop idivl push call movl daa sub fisub xor jmp ret cld popa push add ljmp ljmp mov sub in (bad) idivl sahf inc jmp lods pop sub scas loop xchg sti xor dec pushf stos out jne push jmp adc leave push notl inc dec fsubrl jmp negb inc (bad) mov pushf cmc ret (bad) mov cmc shrl push jno cmpsl pop in ds adc fnstcw xchg mov testl imul pop sbb (bad) popf lods jg imul push out lret jecxz int3 push add dec sub stos (bad) fdivrs fiadd dec sub js jg pop sub sub add das std das xlat out lds (bad) ja test scas dec pop imul pop add mov lret sub out push add cmpsb fs inc mov sub mov ljmp jmp and and mov imulb fnstcw mov xchg or mov or xchg pop loop push in and dec jmp mov sub sahf cs nop jmp dec lahf into popf lahf out dec shr xlat loope aas call and jb or les fimull lret clc repz push and mov fmull insl lret in inc cs pop int3 (bad) iret sub push xchg jle push out and imul test dec adc sub insb hlt and mov aad mov sbb (bad) es addr16 ja test mov mov inc mov add push cmp cmp stc xchg sub call mov sbb xor pop stos push cltd out adc out and xchg sahf or mov sbb int3 das fstps push jg push fwait repnz cli mov sub mov into jle jno cmp lds xlat pop inc or mov push mov add adc sub dec or or (bad) cmp sub mov aas xor stos jg add imul or sbbb test or inc dec inc loop andb shr ja repz les mov jle fcmovbe mov ret jge mov test mov fldt rcl js mov dec push addr16 adc stos jecxz add (bad) mov mov ror xor add xor xor or pop mov std gs das dec mov call icebp ds rcrl mov fldl pop leave cmpsb jp mov popf cmp mov and jmp mov cmc daa fstpl fdivrs add lret add pushf pop mov mov dec mov inc jno pop mov ficom insl fisub cld xchg sub dec ja aas rcrb add lret jae push dec popf jmp push xor data16 mov pop or sub xchg jle shlb divl call in xlat out xor add in gs xor outsl jle mov cltd adc pop and scas movsb and mov and xchg cmc jbe or add int3 dec xor fisubrl mov scas jge cmp mov or int3 pop lock inc push scas popa sbb ljmp hlt adc aas fadds dec add pop push xchg daa scas xor aaa jg jnp xchg xchg dec jge lahf push push jo sbbb cmp mov (bad) xchg lds jp rcr xchg jp daa sub pop gs cmpsl jns daa (bad) int3 jmp in sti sub mov adc shr mov dec stos mov imul dec add and aad mov sbb or pop mov dec mov (bad) (bad) (bad) (bad) mov lret push adc jecxz xchg mov pop sub stc data16 sahf clc movsb mov daa (bad) or xchg fist xchg mov inc in or rcr adc dec arpl pop mov sub sub pop or push pop hlt mov das cli imul es mov add jmp add hlt (bad) aam dec in pop add mov pop dec movsl mov sbb pop ljmp cmp push retw dec fisubr jne push (bad) mov or aas pushf sbb or js or mov cmp dec add push add (bad) jo pop jecxz sub pop sub (bad) xchg push mov cltd xchg mull int3 mov or jmp bound jge shl jecxz lret lret int sub xlat sahf fdivrs xor add or xchg add imul add jmp aad mov leave sbb jno leave pushl out adc out inc mov mov jecxz sub add jmp or cld mov les adc and mov xor pop inc cs sti ljmp mov fdivs (bad) jne cmp sbb (bad) xor stc bound pop into repnz inc or mov ret jne fld popa xor sub ds dec or jmp push xor and (bad) into dec negl jb movsl xchg fimul sarb mov xchg jl push jge sbb lods pop mov cld pop pop pop inc cmpsl (bad) mov std add movsb cli imulb (bad) lock ja push (bad) inc je outsb out pop loopne pop popf sbb mov adc stc ljmp mov fwait xchg ret mov jg jl aaa lods xchg lret cltd sbb cmp repnz pop pop popf roll sub or dec icebp pop cwtl test (bad) adc push cmc call push sub cmp xor fisub cmp add into jge shll sub sbb das add fwait xchg sub mov inc or fist pop push lret adc mov add gs out pop sub lret in clc xchg lock mov and cmp sbb pop test ret fmuls push clc lea bound cli frstor movsl pop adc or sbb xchg lock mov mov (bad) xor push mov ja or daa pop lds fist in jmp out jno out addr16 cli mov rolb xchg aam daa xor sarl xchg push (bad) aam aas xor stos fs or scas lds mov cli lret ret adc jmp sub mov aad test adc pop lret stos in ret mov mov cmp daa add or add adc pushf or ffree xor add xchg inc test sbb sti jnp roll (bad) fidivrl mov add negl (bad) jmp daa xlat gs out push repnz mov std mov std inc and push add es xor xchg lret mov test jmp push xor lahf push test lret out mov push mov ja in xor (bad) jmp push out jecxz pop pop or mov fnstsw dec jne xchg cld ljmp leave scas lret or push rolb add scas notl jnp out aaa pusha adc add js into rclb aaa xchg out sarl (bad) mov in sub into scas loop shr sub ret xor data16 sti xchg dec sub mov adc fmuls orb or pop stos ret icebp jp mov and push sbb mov fnsave movsl lcall dec sar jle add cmp mov lods ret inc in pop out das jl in repz ret or test stos insl add jge pushf dec add cli loop test idiv sub mov pop cmp lock inc aaa push inc xchg lret aaa or mov mov xchg push (bad) or cmp xchg jg stos pop mov mov ret pop dec push inc ficompl inc pop movaps sub dec lret sub sub dec adc or sub out loop (bad) jmp cmp mov add push rorb cmpsl clc pop stos bound pop lds adc dec add xor daa jne add mov jne ret or hlt jmp push lret pop sbb (bad) xor lock sub adc daa mov sub xchg push mov mov or dec mov rorl aad stos ret pop in cmpsb mov mov enter jg cs push pushf adc mov sub out movsb push into cltd ss shrl cmp aam mov or rcr loop cli jmp sbb (bad) mov clc les xchg jmp je int or or mov (bad) cmp lcall mov sub and movsb jns mov test (bad) dec fstl dec push add test xor stos fs mov sub insb adc out (bad) popa push push mov add mov das ret repz test jo pop pop lret jp out addr16 push jge js pop loope ss xor js jmp cld push dec gs jb pop fisttpl mov pop lcall out cmp sbb outsl sub mov cmpsl ljmp movsb mov sar xchg xor adc mov mov repnz (bad) ret push fcmovb mov scas cmp mov bound out (bad) jg mov mov mov adc sarl pop or cli int3 inc leave cmpsb fcoms or xchg dec stos mov outsl lods xor sbb or in pop pop push adc inc ret test decl rcrb jge sbb sub push xor jmp loop (bad) fcoms sbb daa aaa jl inc add mov inc hlt sub test xchg sub les mov dec adc (bad) sub cld mov mov out ljmp fldt adc lahf ficomp or jmp sub jecxz pop ret into fs adc dec or jecxz jmp bound (bad) pop pop inc movsl push arpl int3 test xor jg mov iret icebp rcrb cltd xchg (bad) lret push pusha and mov adcl lock and and aad in xchg add and test jmp cli fld icebp mov and (bad) jae adc ljmp in f2xm1 jg mov mov vcvtsi2sdl mov icebp imul dec add hlt push cmpsb sbb sub sub cmpsb ret dec sahf pusha cmp ljmp cli mov push adc stc inc sub xor pushf out add icebp aaa jb mov cmp das push cmp pop clc negl cmp pop mov fs dec inc movsb scas out pop roll pop xchg lods xor bound xchg sti scas cmp push imul and (bad) out add idivl xchg orl or sub push stos icebp jle pop jmp sti fisttp sub outsb xor push ret lock divb outsl jecxz cmc popf pop ljmp mulb (bad) jp xchg vcvttsd2si xchg jl imul mov (bad) mov into hlt mov adc push lods lahf fsubs push notb jmp fldt add popa xchg add sub enter ret es dec in fisub push imulb jge fcmovnu repnz jmp mov cmc inc jl stc scas jmp loop loop push push out cs sub (bad) mov bound (bad) push repz jmp push jl sarl dec pop inc mov sti cltd cmp cli imul sub jecxz and popa mov push scas or out lds push and or jbe dec scas mov adc ret cmp jle jmp pusha jl mov jecxz cmp and sub pop mov out inc dec (bad) or xor mov or xchg sbb (bad) xchg xchg add mov mov vcvtss2si mov das (bad) mov mov pop and clc or jg xrelease inc mov mov dec popf inc cmp push add pop sub test fiaddl insl xchg add push jnp stos (bad) dec xor sub into inc pop and adc and pop movsb adc sub sar lret mov incb mov jae (bad) xchg jmp in push das repz xor into mov insb adc sbb or mov cmp cmp fimull or xchg or sub push (bad) rolb sti ljmp push xorl push cli scas adc daa ret dec fdiv add lahf mov add xor or test (bad) stos int3 int cmpsb sahf pusha fild loope ss jo,pt and mov movsb and cmpsb rcll push xchg es pop sbb sub (bad) cmp rcll dec or xchg push sub repnz dec adc mov into insb cld into lahf (bad) clc jb or rcrl push rcll ljmp jb push push std dec hlt (bad) gs pushf add xchg fxch dec inc inc aam push (bad) jp mov fmuls stc mov test std sub in incb add pop out sub hlt jmp icebp xchg push out xor hlt (bad) mov scas mov out mov imul sti mov getsec adc xor int in dec inc sysenter mov pushf int jl and jle,pt or cmp adc mov les repz mov cmp (bad) bnd dec pop inc fsubs loope mov and sub mov loopne mov psubusb popf push das jmp cmp clc inc add fistp jmp mov in and mov ret mov push xor lret in xor or sahf cs lods rep mov dec xor cmp int jnp aad xor scas les mov xor repz sub stc rcrb out or xor xor (bad) jo dec xlat push jno inc je pop mov jl loop adc fimul (bad) xor repnz shll clc add xor push pop out inc pushf push push xor stos mov sub in push mov fwait push in mov dec pop pop mov inc js (bad) and movl jo and pushf cs sub loope mov stos test movsl jmp pusha xchg or out lret jns or mov mov ljmp das jmp add xor scas sub and pushf xchg push add mov clc bswap mov mov add dec outsb sub fldcw repz xchg fsub imul movsl jecxz pop mov into fnsave xchg add loop dec sbb enter loop lret push mov mov scas mov adc mov and fadds cmp jno mov in add mov or hlt xchg jbe outsl pop or sbb stc jmp inc fiaddl adc and jecxz xchg (bad) pop test xor pusha push ljmp cs mov or popf mov clc out aaa dec mov dec pushf adc dec shl out clc xor sbb ljmp lret sub push cmpsb cmp mov sub cmpsl jecxz xor xlat cmp xlat xchg xor adc inc jae dec (bad) negb fstps or sub mov cmp add pop push loop jno push and cwtl cmp pop jb stc jl movsb pop mov lret movsb dec pop or inc into push cmp (bad) jne mov inc xchg std mov dec aaa test mov popf dec add repnz xor cmp sbb stos int3 add mov (bad) jne adc mov jno,pt sub outsl adc jb repnz and add jae test ret clc xchg mov cmpsl pushf sub adcl push adc fistl mov dec sbb dec idiv xchg cmpsb mov lds xchg out (bad) movsl cld outsb mov xor xlat dec cwtl dec dec cmpsl or lock daa clc mov jb lahf push movsl shll jb xchg (bad) jno mov jno adc xchg pop test add dec jne xchg movsb and add scas and dec daa pop out or adc xchg in mov daa push push mov cmp jge ds (bad) xchg jle pop scas sub pop movsb mov jb jmp jne iret inc cli or push (bad) mov js mov dec fnsave mov (bad) cli mov lods call les mov and jle test mul adc sbb test idiv out mov xor xchg dec add and fisttpll cld sti or mov (bad) and popa out inc aam mov mov mov icebp pop mov or mov ljmp fadds adc push push dec (bad) movsl dec mov adc sub rorl mov neg sub cmp icebp pop and and in (bad) rcrb mov int sbb clc aam lds mov aad jae adc xchg jmp push rorl dec icebp mov mov push xor stc lds cmp xchg dec call xor cmpsl push mov sbb pop sbb mov dec mull popf mov icebp icebp add mov dec repz and lods popf sub adc mov jmp mov mov fstl subl push outsl pop xchg scas mov daa or mov mov xor xchg dec mov xchg xor and xchg xor test ljmp jnp jp dec push lret dec inc popf jnp push test push jle xlat icebp adc push (bad) add or inc xor cmp (bad) mov pop or rorb movsl or sti popf dec outsb clc and mov and or pop dec (bad) jecxz call in cmpsl rcl push xor or jg mov stos mov xchg scas mov fsubrl call push sahf push (bad) lret push dec stos lea fstpl inc cmpsl (bad) int3 mov stos mov adc adc mov call test mov div pop xor mov ja call pop push sbb mov cmpsl sub mov movsl push lds or outsl in repz out and negb fcmove fdivrl jno imul lret inc mov in xor not jp (bad) lock pop addr16 xchg xor jb add mov in movsb mov add and sahf out jne scas mov sarl dec sub and sub je (bad) dec jecxz inc mov add call inc dec adc mov clc xor sub xchg je mov or insb xchg pop mov add dec (bad) fnsave lcall negl push test ret hlt fistl daa shr das gs mov (bad) out rol imul insl mov pop mov sbb sti ljmp and sbb out jne xor shl lock popf (bad) cmp mov adc das add dec test negb ja imul and jle push jge pop xlat ds lea das mov xlat stos xor neg dec fidiv int push sub inc fisub mov pop iret imulb mov mov mov (bad) mov mov cmp fdivs jo mov jne mov jmp mov std int mov mov adc push (bad) pop pushf sbb movsb jle mov cmp sbb push fs jmp jne cmpsl xchg adc mov push sbb dec clc xor (bad) push dec add mov add cmp add cmp xor and (bad) mov aad in xchg rclb mov pop in mov loop pop inc pop jmp xor idiv or xor add push iret in sub or sub out das ljmp out xor jecxz and mov add add xor mov out adc and jnp jne in lds cmp cmp sti outsb xchg sahf out mov jge xchg int3 mov cwtl iret cmp lret jbe xchg xor pop push pop push or popf sbb mov inc or push mov and repnz repz repz das xor rorb xchg push or push and add jge dec xorl sub std mov pop repnz ret outsb mov xchg xor or jnp jmp aam push push push imul cmp xchg pop xor adc pusha lret test ret xchg lret lds push sub sbb pushf mov stc mov rcll pop mov les sub jg adc pop test sub popf rorb sub and out fsubl dec (bad) fsts test (bad) sub xor add sub xchg jbe push testl ljmp cmp xchg mov cs loop pushf lods add sti and popa fdivp sub mov sub cmc loop adc dec sub leave xchg shr jb add mov lret adc pop negl (bad) je lods ja scas xchg fcomps and mov mov icebp mov lcall in dec fistp loopne in fbld lret div ret pop rcrl or popf jae push (bad) or sub test out popf jne leave push mov popf jnp scas movsl jmp push and add imul dec jmp mov sub pop sahf xchg and jb dec push mov and mov sub add mov sub jmp jae and verr xchg into aad add inc sub data16 sahf add adc or cmc pop xchg jae (bad) dec pop and das mov aam sub clc and jns stc fidivrl jmp push dec popf mov mov or dec lret lahf int3 pop sbb xor inc inc mov push das loop mov xchg pop xchg mov inc aaa add adc lods xchg in mov mov mov repz rcrl aas dec iret mov in push sbb add xchg mov jge cmp in push or push and add cs jb call aam dec or pop mov mov xchg test add ljmp mov cmc mov jne or mov mov pusha sub push out push into sub (bad) into pop sub in lret dec divb ja mov idivb stc fsubp das pop sbb imul mov sub xchg xchg pop lahf repz lds pop dec mov pop mov in div add jg xor cmp lds stc mov jle pop (bad) lret mov xchg inc lods xor fisubl in mov xor sub out mov cld loope pop fldenv push add sub or js (bad) decb stos lret mov out and negb inc add lret xlat xchg sub pop adc (bad) xor pop ret add test gs sti xor xor cmp mov jle (bad) mov or cmp (bad) cmp adc adc push and xor das or rorl xchg xor push (bad) xchg ljmp mov adc xor pop jns inc xor pop or outsl int (bad) int3 push jne imul ficom loope cmpb not mov fmul pop ja icebp dec pushl sahf mov adc les adc xor dec pop sub and movsb mov inc rorb fisttpl pop repz push mov sbb repz imul cs dec mov xchg pop sarl lret add inc sub xor nop pop pusha and test push sub xchg sbb or in cmp iret inc sub pop test rclb push push sub cs out hlt in mov shll out adc or fwait or test jmp int3 outsl sub test fild dec jmp subl push lea sub dec lea pop fcomi push ret xor cli lods loope mov rcrl or out leave add lock je mov in shr pop cmp shlb scas in imul lods xor jmp iret push into dec cmp ret nop mov js lcall lahf in adc adc repz and or stos sbb mov out push rcll fwait xchg push sub out mov mov mov rcll pop mov gs mov adc inc cli insb les out pop cmp push rorl adc out in cs je xchg mov adc xchg mov shrl add in pop xchg add pop sbb cltd push xor dec mov xchg xchg lret add aam cltd ror and shll sbb xor mov popf mov push jno mov push push aam xchg inc dec and sub adc imul mov cld ret pop lds pop mov rolb and and push and and xor jbe jae les push pop fmul mov dec mov pop es push mov sub cmc jae (bad) out mov adc loop mov sti in sub test jmp test mov in sub sub mov (bad) lret add rorl pop (bad) jmp scas mov test sub stos add outsl mov or out mov fnstcw xchg mov test int3 ja pop sahf xor push add loop imulb add sub notl shll lods mov cltd xchg out mov mov ret mov and into pop inc jns cmp and adc jge fcomps movb push (bad) mov mov movsb ljmp cli fnstsw std das mov jl cmp gs cld xor mov pop out gs dec xor ds pushl outsb imul les icebp mov jmp xlat add inc dec stc pop lea mov in into mov mov mov jns cmpsl jne push dec xor rorl pop cmp push ret adc push pop shrl ds rclb ds leave mov aas and (bad) cmp out (bad) mov adc cmp sub and mov cld mov jle jb hlt lds or jae and cmpsl mov pop ljmp jp and sub add mov mov dec dec jge test ss (bad) or lret sbb fcoms pop (bad) xor lock sub outsb ljmp xor cli cld xor out pop jge lds (bad) out fisubl sbb jg xor and mov imul (bad) or (bad) mov movsl fstpl fwait in and jno jge shrb jg pushf das out sub add jmp (bad) sub inc sbb xor sub jne pusha imul mov in push mov push push imul in mov pop sub xor neg es leave xlat insb loop adc add dec inc xor (bad) scas call sbb in scas aad mov add adc jmp scas xchg fldt jge xor ret call pushf or add sub fs enter and xor jns cmp ja sub loope fsubl xchg icebp bnd mov pushf loop sub push xchg stos push inc jp out mov push outsl scas jns inc data16 dec pop cmp jmp ret pop dec out jns mov out xor mov lret movsl daa loop sub cli sti sbb inc not jmp sbb jb push xor loop jae pop mov pop lea jmp jae repz adc mov lret add sahf jge cmp dec mov leave aam jp mov pop aam rclb dec (bad) mov test dec cmp jmp cmp cmp cmp cs pushf xchg negl mov into test mov pop icebp ja loop mov icebp pop lods in (bad) out repnz cmp dec ljmp cmp mov sub test or insb enter mov clc je pushf adc cmp ret in out mov or pop insl adc pop cwtl repz loopne or mov (bad) fsub setne icebp push jnp fucom mov test cmp jno inc or repnz or flds in movl dec adc jns in ljmp imul (bad) cwtl ret inc inc test pop xor mov mov xchg movsl pop mov add enter or ret lret stos ja (bad) lret je aam and popf cmc xor inc or dec ret hlt ja in or pop jmp (bad) mov pop (bad) stc pop sti gs test and pop ss daa out out decl inc iret pop mov pop repz sub cli jmp rorl ret ja inc wrmsr sbb jnp fidivr outsb fwait or test xchg xor jmp stos sub jnp sbb lods test (bad) fbld jbe inc fimul xchg fdivr dec (bad) mov mov (bad) push sub outsl test ret test sbb xchg xchg dec mov cmp dec icebp leave mov pop mov dec inc xchg mov (bad) inc (bad) adc stc cmp inc and adc sbb leave stos sub cmp sub sub stc or xor int3 scas out sub clc bound xlat dec hlt dec sub sarb cltd xchg cmc in lods (bad) xor into push cmp and sub push es mov (bad) jne sbb or in adc jle lret sbb xor or add xchg das js xchg jbe push ficompl or rcrl sub sbb dec jg lds push lahf and leave xchg pop or ja xchg lds or outsb mov mov xchg rolb cltd popa add mov pop sbb sub insl cmp mov push xor shlb mov cmpsl jo adc dec pop cli gs fnstenv pop sub push push imul (bad) mov inc bound push xchg ja sub sub mov fimull cld std mov aad repz in push es mov pop xchg xchg or outsl aad out sub (bad) sub adc or outsl cmpsb loopne movsb inc mov (bad) repnz mov pop out pop out leave mov decb sahf int sub and jbe int3 cmp mulb sub mov (bad) movsl mov test push inc jb fnstcw or std repz sub jo sti xchg xor pop adc inc and xchg adc mov push aad (bad) xlat or ss hlt mov test idiv loop dec mov inc mov sar cmp mov sub add cwtl inc or inc push popf ret pop fsubrl mov (bad) adc xor loop or pop xor sub das xchg add (bad) xor add imul out fcomip push dec ja popa icebp popa xchg jmp in xor xor movsl ret cmc in cmp fisttpl mov pop pop adc ret pop lds std test dec and fiadd testb or divb xchg adc ret (bad) sub sub mov inc jp stc scas and dec xor icebp mov icebp push pop xchg jno cs and sub xor (bad) adc sarl ja jle inc (bad) xor pop push or lcall (bad) and jge sub shlb jne imul cltd popa (bad) push dec movsl mov sub shll sahf leave dec fst dec aad lret imul jge add int and xchg dec repnz sbb inc jnp out mov aam insb dec or mov les jbe ja adc iret jge dec imul mov mov add xchg leave ja mov sbb ret and cwtl daa repnz dec push push (bad) dec jmp rorb pop push (bad) pop fnstenv js pop in fisubr mov es jbe repz dec test (bad) xor lods ds leave pop xor or pushf addr16 js mov scas mov fist pop pop pushl pop (bad) lret in (bad) sti cmp cmp leave or leave out mov out data16 mov adc jmp cmp out and mov xchg sub mov notb pop ret jae cs arpl (bad) jno cli ja in mov sti repz jge out xchg pop mov push jle out cmp iret sbb popf mov loop cltd dec das stos sub jns jne into sbb data16 mov inc sub sub (bad) in test cld push rcrb push sahf or aad leave fldl and bnd or mov ror mov iret cmp loop push loop jge sarl xor roll (bad) idivl mov sub imul xchg jmp cmp or xchg pop push leave stos mov push xchg pop adc leave mov or and adc jo sbb stc mov ljmp imul ljmp dec lods jne add mov lahf in add movsl dec addr16 push das jb xchg lock mov jl xchg xchg inc xor add xchg adc loopne pop mov inc add push cmp bound mov repz divl data16 add je sub icebp lahf (bad) imul mov outsb in lahf jl outsb aaa sti mov popa lock dec sub in and push push sbb ss sub lds xor loope inc sub cmpsb and mov dec mul jle out clc pop in flds loopne push movsb (bad) mov and ja stos rcll ret add jge out sub mov outsb adc nop mov pop iret jg sbb mov fiadd lret or jne test mov fnstcw cwtl out aad (bad) shl lret aam pop mov pushl sub ljmp mov repnz loop nop mov mov push push and sub loop sbb loop test inc cli and xor cltd push pop lahf je vmovdqu xchg cmp xchg gs sub fdivrl das (bad) pop leave (bad) or add jg in or repz mov xor (bad) icebp sahf in std sub or popa pop loope cmp cmp and and movsl jbe cmp xchg movsl push pushf jmp mov pop sub leave jmp out mov and adc out sub pop and rcl insl leave (bad) dec fs (bad) jmp insl sbb (bad) cmp leave mov in pop dec in pop in fildll loop jno dec xchg int3 pusha or leave sub and cli into aaa imul adc jmp pop mov add clc sub add sub int fstpl ds enter dec imul dec push jns xor ss lods insb cmp test sbb or shr test cmpsb rcrl sub insl or inc sub push cmp mov fsubrl mov xor icebp ds aas xor xorb cli mov lahf jle imul stos ret outsb jecxz dec (bad) arpl cmp jmp pop and jmp movb icebp xor xor fsubs adc cmp fisttp mov out mov scas or sub jge inc xchg sub stc push push sub (bad) lods (bad) icebp stos mov sbb sahf push xor and adc scas mov movsl jno daa jg push sbb cmp cli je mov lods adc mov pop (bad) sub std cmp ljmp stos push xor jae mov jp clc cmp cmp int rcrl es ljmp sar (bad) and mov lods jl sub and ret adc jl sub mov xchg jle into mov and mov sub notb dec dec mov sbb imul notb or add stc clc dec cli sub jl lret das hlt je lock movsl pop or xchg (bad) pop dec ljmp packssdw sub das jne mov fildl add lret cmpb fildll out icebp in push (bad) (bad) popf movsl es xchg divl or xor stos xor pop out loop shlb and out dec pop jns mov ja out add icebp negl ret lea mov and out stos add dec xor stos fnstenv cli push pop mov pop push sbb dec leave and dec cmp pop aad xorl negl ficoml sub and test daa and sbb call movsl ljmp mov mov jno and fnstenv dec lods sub pop shr inc xor add xchg sbb movsl push push xchg dec fistpll and mov es jae pop lret mov les or and ja es cmp and mov jmp iret inc adc fisubl xor and inc sbb add ljmp (bad) jg pop dec push pop jmp out adc and leave rcl test insb clc mov ja scas dec pushl daa jne mov adc mov pop mov in sub jecxz xor (bad) int3 dec pop mov scas ja out add shr testl mov data16 cmp push mov popf movsb pop ret outsb adc cmpsl mov inc sub pushf idiv daa lret imul mov (bad) lods fidivl or das ljmp pop jp pop xor or xor cmp jp inc dec (bad) and out std cmp mov lods mov and push add pop into sub and and or xor js push (bad) mov inc mov push jno inc negl (bad) adc pop test add out jae (bad) pushf jl or pop shr mov ja jnp mov (bad) cmp add loope stos sub xor xor sub sub clc hlt mov lahf rcrl (bad) jb mov loope mov xor repnz addr16 cmp mov add das jecxz es push int3 push xchg cmc xchg mov clc pop mov hlt sub add in clc leave stc fsubs mov ljmp cmp jmp jne add (bad) sub pop push sub lea mov daa pop insb add das or push mov scas mov pop mov or mov rcll test mov jmp ret add or aad (bad) jo xchg icebp cmp stc (bad) xchg jmp dec inc xchg bound jge fwait pop test push (bad) cld xor cld jmp fimul push into adc mov (bad) imul and das add sti dec or and divb xor sub mov ja xchg xor push mov gs shll push scas bound adc cmpsl (bad) pop scas xchg out cmpsl outsb test jg lret sbb les movsl ljmp rcll icebp sbb push pop mov int3 fsubrs icebp cwtl lds cmp call (bad) and movsb ljmp jle pop rcrl divb sub cmp mov sub jb sub cmp sub out cmp dec sub jle mov sub scas lea nop scas clc scas movsb pop xchg arpl pop sbb outsb or dec pop mov sti mov sub dec shlb inc xchg fsubrs in push dec gs bnd (bad) leave mov testb add pusha push (bad) pushf movsl icebp das (bad) call bound jmp mov adc pop inc mov cmp jp scas je cmp test mov xor add imul gs (bad) jmp hlt mov lock add push add repnz enter or jl and cmp jmp push pop mov xlat fsubrl sub mov sub add pushf subb xor aas or mov mov mov aas imul das sbb mov and repz (bad) sub and jne ljmp adc aam cli lea xorb xchg jno lret loope add xchg jle lret bound cmp xor notl fsubl mov les adc bound out jne ficom fs or stos cmp xchg lret dec push jmp push psubsb dec (bad) xor das mov add int3 cld sub stos sub (bad) xor fisubr lret negl jo loope mov sub imul rorl lods push in test test ljmp sub and call mov mov cmp repnz xor inc add xor (bad) ss xchg (bad) (bad) pop xor lcall lret jg (bad) and xor mov and addr16 movsl call test add mov inc addr16 or mov xor mov jne add jmp (bad) movsb (bad) cmc adc xchg clc movsl std mov loop test mov mov xor lret mov sub xor pop dec xchg (bad) loop lret loope ds xor pushf cmp jo daa ret mov xor aam dec (bad) sarb mov mov leave pop xlat sbb xchg ljmp cli jecxz and add jle jno (bad) xor push add and lret cs cmc xor pop sub mov dec cmp add inc push xchg out cwtl pop in lods xlat mov data16 js mov or nop jmp push daa jl lret jae xor pop pop sbb fisub movsb sub sub cltd lahf jmp test call cmp popf in mov lea (bad) daa xchg in notb xor mov mov inc and sbb cwtl inc pushl stc mov iret (bad) out adc push pop lods jbe jb stc and adc and or push xchg add sti and and fs xchg mov (bad) mov jb and xor mov lods xor mov inc push daa movsb mov scas sub inc mov dec jmp cmp lahf xchg div xor movsl test stos cmpsl xor jmp out adc adc push stc or ds frstor xchg insb out (bad) xchg rcrl (bad) lock out aaa ret (bad) lret mov add mov lret cmp mov adc fdivrs jg fstpl (bad) out bound cmp jge fsubs mov xor mov push dec add leave mov stos mov jns fsubrs add mov repnz stc sbb pop fmuls mov sar cmp ret lahf js sub sub xchg or add and daa (bad) in stc (bad) jmp lods das lds push mov aad (bad) aas cmpsb add push jge add jl loopne jl mov push push xor mov push xchg (bad) out mov xchg lods fistl dec sti repz pop sub (bad) mov pop ds mov jno leave pop stc cmp mov xor xchg cmc sub jnp daa stc in ljmp and not ljmp scas cmc popf mov add inc or or sti ffreep sub xchg imul sbb popa dec repz jns fbstp adc push push daa or std xchg xor popa cli fldenv es or push lds sub xor add shrl insb loop std inc mov and dec xor cmp out fmull adc shr loope cs or mov mov add int3 out inc or out xchg sub lock dec adc cmp sub ds sbb mov jl push ja dec or hlt push lahf inc xor pop mov (bad) pop push xchg push xor sub flds sti jp mov cli cmp or iret stos pushf scas push es adc je andl test dec cli je out test rolb sub jnp das cmp addr16 cmp (bad) (bad) sti aad ret ret lret xor mov aas cmpsb pop and xchg test rorl clc das jmp mov or pop (bad) mov sub cli jo and out pushf xor xchg push les clc push mov int pusha lds lahf fwait lds sub sub sbb jne jg stc inc push repnz repz adc das jo mov xorb lods ret hlt lahf inc repnz or mov jmp mov push stc in sbb push xlat mov add negb xor mov add sub out scas lret mov subl mov jmp cwtl mov fildll xor addb pop dec out pop and mov clc movsb in pop xchg int jp movsb out xchg lret out jne adc addr16 fldt mov xor push flds stc xchg mov cli pop lret pop or pop cmp xor les mov bound or leave mov dec icebp mov stc inc xchg (bad) jb fildll pop adc lds pop dec imul lods adc sbb leave data16 daa jmp out bound dec ljmp pop cwtl or inc dec pop pop add mov xor outsb gs mov jg cmpsl xor fnstcw lods push sub adc sti lea dec mov aas add mov inc or iret lahf add shll cmp les push mov adc jg mov out mov ret mov clc dec xor repz (bad) push and sub mov xor les pushf out jle jp sub adc stos into add sub loopne xor aaa shrb fs pop dec int3 mov mov iret call add sub inc mov or and dec sub xor pop jge shrb in xor mov sub jno mov cmp or mov sbb mov or dec mov push xchg insb push mov cwtl and push loope shlb (bad) jne sub mov lock and fcompp push imul imul lret jg sbb cli jl jmp lock jg lock repnz movsl (bad) jmp les sbbb leave jbe sarl mov rcr ljmp lods mov (bad) mov adc lock in push or mov insl xorl pop je scas test mov loop xchg out mov outsb lret pushl or test jp xorl pop mov (bad) ds inc shrl jecxz dec or cli fimul sbb sbb push jg loop (bad) or (bad) leave cmp out add inc in jmp sub (bad) push sbb inc movsb test add flds add mov mov (bad) or push add xchg jl imul pop (bad) push dec push stos rorl mov lds (bad) jmp sahf lret pusha loope je (bad) dec je sti xor repnz adc icebp call add lds jle lret and cmp pop mov fnstcw ljmp pushf mov pop (bad) sub outsb fcoms lret xor cwtl inc xor rorb jp mov mov mov imulb repnz call xor scas leave (bad) push ds loop pop in or jmp push fbld or loope cmp sub sahf daa cltd rcrb daa (bad) jmp insb bound xchg sarl xor std mov xchg pusha pop or and and mov sub lret mov mov push ret icebp push imul lcall pop jmp ret in push pop lret std xlat mov cmc outsl mov nop sub dec pop mov xchg ljmp sub mov mov in xchg mov mov out (bad) add push shr mov push ret dec cmp add sub mov loopne push loope jg loop std cmp mov fucomip dec lahf les mov xor and inc xchg inc sbbb add cmp aaa xor je jecxz sub pushf daa (bad) or out xchg mov lcall mov stos inc mov push jnp push inc pop or cmp je jmp xchg test and push cmp pushf ret (bad) scas test cmpsl insb into add sub add mov dec lds mov mov add sub and pop cli mov jp stc mov xchg xchg popf jns leave fstpl mov mov mov jo cltd sub test lahf inc (bad) pop stc ds xor adc pop push cmp (bad) shrb lret inc mov jmp cmp pop je cltd out and add or scas (bad) sub cltd xchg ja enter enter push jmp inc pop sub out subb adc daa and jl lret jge addr16 (bad) xchg sbb sub mov pushf pop xor cltd ljmp push sub xchg loop pop in push fdiv add cld cmc sub or inc fstpt das ljmp icebp outsb cmpsl or add in cmpsb pop test out pusha inc xor mov repz mov pop icebp sbb lahf mov dec (bad) fist or in mov (bad) push sub in mov jbe imul cmpsb popa icebp sbb jmp daa (bad) pop lds and and ror aad iret (bad) mov pop in inc rorl inc dec lods lods out popf mov cmc xor push repz jmp addr16 ret push in in negb sub (bad) xor aad pop inc into sub ret mov push out rcl sbb mov fldt call xchg sbb bound pop iret cmpsb mov xchg mov cmp out mov in popf imulb push das test out ja inc clc call nop (bad) xchg vmovapd mov pop xchg adc dec or out (bad) ret je out clc std mov ljmp pop iret sbb dec ljmp pop movsl push pop popf ljmp outsb cmp sub mov lea (bad) xor repz or (bad) imul jecxz dec mov push punpcklbw js shl divb sub dec loop xchg mov adc lret out push cmp mov xor push (bad) lret or inc jae imulb imul sbb xor notl xlat mov push xchg adc das mov mov lahf xor vcvtsd2si xchg xchg xor xor inc sub pop fldcw sub sub add or leave sub clc adc fstpt jne pop out push add adc shr mov dec sti in cltd lret sub inc out mov test pop inc pop and daa shlb add aaa mov cmp mov cmpsb pop add scas decl out dec mov and xor sub mov imul mov mov jbe mov jns mov test sti mov idivl add and xor xor cmc inc popa mov inc repz or stos add lcall pop lahf jne cmp xchg inc jle pop and add mov mov stos or lock daa sbb adc imul xor sti push inc mov add cmp xor lcall or mov int3 gs idiv sub leave pop into mov dec sub insl negl imul sbb repnz mov jl cli stos xchg pop push jmp (bad) fimul sub pop (bad) cld pop mov sbb push lds aaa mov subb mov std push loop mov fisttpl enter or sub fdivr mov cmp pop shr add aas dec mov addr16 movl dec je jmp mov cmp stc imul mov test sti stos xor cld cmp daa or out jnp mov outsb adc jne sbb popf scas mov or sbb adc add movsb pop movaps xor test mov mov or rcrl pop clc popf dec call xor icebp mov out mov push jne mov rcr or adc dec or sbb pop (bad) push das fidiv (bad) out sub mov jle or mov sub mov mov xor testb adcl fldcw lock leave sub or mov push out push inc imul dec jle xchg add mov hlt fst lret call jo ja pop lods xchg push jnp test mov data16 mov test jno inc add sub push inc xchg rcrl loopne lret dec sbb jge (bad) pop jecxz pop aam stos std int3 xchg lds xor mov adc (bad) int jle addr16 stos sub pop jecxz pop les rcrb (bad) iret jbe pop xchg arpl out fs movsl sti cmp repnz adc aas pop je adc mov mov pop mov icebp mov stos cmpsl popf or (bad) xor dec cmp and fldenv fstps or popf fistpl mov sub xor cmp mov dec test jmp jb lret (bad) and rcl dec dec lock (bad) sti jne lods adc scas xchg mov xor aaa xor ja mov fmul daa push jle decl mov enter push in cmp (bad) sub ret bound jge (bad) popf aad fbstp jge rolb pop lcall (bad) jne inc mov pop jge mov (bad) gs mov cmp icebp mov xor xor sti mov xor mov adc sub add in xor iret xlat mov jb lret mov inc xchg push push sub lret inc out sti test jne sbbl mov or rol sub jno sub dec repnz in xchg loope xor mov nop push adc rcr inc lods data16 push sub inc lahf loope lea sub imul or int3 ret dec ds enter xchg std sbb sub pushf pop movswl nop jg mov dec mov lret add adcl cmpsl imul ljmp adc hlt ret bound pop push adc (bad) adc mov rorb cmp push pop fwait cmpsl std jecxz je call fnstenv push es push je cld mov (bad) pop ss xchg push and adc stos mov (bad) push sarb xchg scas mov dec mov test sub sub xchg in das insb (bad) dec add bound adc imul add xor jmp rorl out xor dec sub add mov add or cmp ja insl das xor dec inc xchg add xchg setg rorl add bound cmpsb loopne xor xlat push popf out sub bound lea xor leave out xlat jnp dec or mov or das add jnp movsl aad outsl dec dec fsubl sbb and es push add jge test mov dec mov dec fstps vunpcklps xchg les ret inc mov gs and sub mov ret cli adc mov adc gs stos xor les out sub mov xchg cld ljmp or jo imull xchg add and xchg mov int js div and fildll adc neg and add mov mov lret pop pop mov ja lods in mov mov xor cs movsl mov cmp insb adc clc push sub das mov repnz xchg cmpsb or leave add test jecxz push leave shll sbb icebp push inc sub push push mov repz pop scas adc das or pop out fcoml mov ret mov add inc mov lock adc fnstenv cs sub dec pop jg adc sub add (bad) sub lods movl inc xor pop push add mov mov dec rorb lds std in pop pop mov (bad) xor jne ret adc push push inc pushf fcmovb add jmpw xor push sub mov sub ret gs cwtl push sub sub push mov ret popa xor outsl mov int3 movsb or roll mov sbb in or gs das adc and inc scas cwtl mov addr16 in sub pop adc push sub jp aad mov das jmp ljmp imulb roll inc idivl jg movsl adc add ss sub jns int push xchg xchg ja test push sub ljmpw lret ret jg popf lahf lcall (bad) sti imul cli out mov inc mov ljmp xlat mov sarb das pop dec lret (bad) mov mov push es stos fcomps imul pop mov add mov bound imul dec rorb add (bad) mov adc mov mov cmp (bad) xor push cli repz loopne not mov gs add sbbl dec jne lods push leave or lds sbb clc mov and add mov push fildll in xchg rol pop pushl or (bad) or iret sub mov (bad) sbb xor ljmp divl aad fwait dec (bad) jnp movl gs pop lock jmp xchg and aam rcrb lods aad loope mov jno push pop sub outsl mov push dec mov sahf sub mov out jl add es or pop xor incb mov icebp out mov sub xlat mov pop lret pop in mov out lret add mov add js fimull popf cmc pushf cltd xchg dec and or push out lods pop sub push loop dec mov orl das aaa push cld push je test inc mov fsubrs pop lock movl sti mov rcrb fstpl xor dec ret mov or dec add (bad) mov fist stc sub data16 push jnp mov xchg or ljmp rcll mov pop imul pop push adc (bad) jg pop das fcoms pop leave sub mov into xor call loop xor test mov xor mov mov sub mov sub cwtl pop lods popa dec fadds repz movsb mov cmpsl sti dec push je pop in test mov bnd mov mov test leave rcr sub mov dec scas cmp ficom pxor or sti movsl data16 in cmpsb mov lea xor jp add adc loope xor xor dec outsl clc mov cmp (bad) pop xor adc fidivr sbb mov add or or mov xor sub das xor add jmp cli adc sub shlb push cmp mov jge test dec rolb call shrl pop or mov dec loope out popa (bad) ljmp mov cs xchg push dec mov adc arpl out ret (bad) scas pop xlat (bad) movsl mov fcomps mov movsl neg xchg cmp jnp xlat xchg es jns leave xlat pop mov mov lret jecxz aam loop push loopne xor mov add daa stc xchg movsl sub jo jecxz push in lods jb ss dec iret adc add fstpt fidivr jbe and or add xor call mov dec pop dec or mov repnz call incl mov fcmovu rcll sarl aas lods rcr mov popf or std in cmp repz pop cltd ja int3 inc sti mov arpl sbb mov rcrb lds scas sub out and sub and jo mov dec cmp incl mov jno dec push mov popf pop xor sub call cld das pop loope imul in xlat out adc or and adcl ljmp mov icebp add scas mov pop or and add lods jmp es and xchg jbe in je push popa mov roll inc sbb or mov xchg imull pop cltd adc dec cmpsl mov xchg mov dec cmp pop cmp hlt andb scas pop mov jecxz and mov xchg jae mov (bad) dec ljmp cmp add lahf daa pop cltd mov pop std notb jbe pop andl call cli pop sti pop imul mov (bad) popf jo (bad) mov aad (bad) popa add or aaa jae mov in push out xchg loop adc xor xor jle div popf cld lods fs and add sub das cli fs mov (bad) in sub pop (bad) out cmp dec cld mov dec dec das cli insl dec ffreep dec push xor xor js sub movb dec mov sub mov stos push call mov sub xchg cmp das repnz popf lahf adc jb sub jg shrb xchg cli out mov negb jl dec cmp movb int pusha lea imul imul or loop in pop push dec pop jp and jle bound add dec xchg out xchg xor or (bad) std lds into cli sub mov fwait adc scas divb lcall ret andl mov jl scas mov pop aad jmp cmp test pop lret hlt xchg movsl pop lods sbb test and (bad) jb pop cmpsl xchg outsb mov std loop mov into jg mov test mov (bad) mov shr gs add (bad) fnstcw rclb mov mov pop sbb loop xor adc shrb pushf jmp iret loope push out movl gs lds mov xor pop mov aad xchg adc xlat sarl push xchg inc or or xchg loop leave jmp outsw pop mov cmp aam mov push fldcw imul adc adc imul call in pop scas or push and divb cmpsb dec das out ja inc inc push sbb or lret fnsave push incl notl mov loope mov sub add jmp cwtl cmp leave cwtl cli fistpll lret sbb add pop dec ret sub std pop xchg dec stos add (bad) mov loop rcrl xchg idiv sub add mov jo and dec and mov push lahf lcall pop fdivp aaa add mov and push test xchg sbb lret add sub stos arpl sti xor sub sub dec mov and add (bad) in test pop popf shll and fst push test sub icebp and xor out in dec dec or push cli pop clc (bad) lret fstps imul sar bound push test imull iret xor adc nop cmp add mov out ljmp xchg pop movsb mov mov outsl add imul sub mov pop sbb inc lods hlt pop leave je sbb (bad) cmc adc and dec or gs sub das add jmp pop jl cmp xor imul int3 jbe ret pop add add mov ss pop leave test fldl aaa mov mov movsb aas loop dec mov loop jecxz xchg cli pop jbe jmp add fcomp mov fistl sbbb xor sub pop add xor cli cwtl mov dec add pop popa scas and mov adc fsubrp cmc sbb aad sub lods inc xor jg lea cmp adc (bad) (bad) repnz lret mov lock mov (bad) mov ja jno or les lcall fstpt les repnz and clc (bad) popf hlt les lcall adc jae adc out sub lcall ret cltd inc add fdivs out repz or add stos pause sub dec daa and push xchg sbb lret mov call lcall sahf adc cltd or and lret and push cmp shlb loop dec push mov and (bad) push push mov xor push inc je dec jmp pop or movsb push or mov call (bad) or inc aaa pop call cltd sahf add sub lods push mov xor call loope sub mov pop shrl (bad) stc jecxz ffree lods jae movsl adc push leave daa loop xchg inc pop (bad) sub add cli and out lea lea push mov cli cmp xor fdivrl dec jno in pop adc pop jno out inc sub mov lret jne call lret cli bound mov mov xor jne sub mov jno mov cs (bad) test (bad) ljmp sub sub cli lret lret dec test aas mov insb adc mov sub pushf imul inc in or push jns pushf into sub push pop pusha arpl xchg (bad) adc stc mov dec mov dec mov insl mov jno mov lret push pop mov icebp outsl gs mov push or (bad) and lret jns inc xor dec lret xchg ljmp jmp mov (bad) mov sbb clc push push test mov or ds push add mov popf imul rclb lods jp aaa cwtl das repnz jmp loop or nop in cltd divb xchg aas fnstsw jle xchg xor out jg mov int loope inc lcall ss dec js cmp ret insl cwtl fistpl in dec or out lods jle mov xchg mov adc ljmp addl js jmp mov and icebp inc cmp inc add sub cltd add dec cmpb dec pop cltd sub mov ja roll sbb xchg repz popl fucomip sub add arpl iret sub (bad) mov loope mov or ljmp cs push lea leave rep push lds or lahf repnz mov out lret or test adc sub cmp add lds sub pop and mov xor mov dec add or mull xor jb adc loopne cmp jne scas popf gs cmp leave and xchg fiadd pop jns inc mov and in (bad) dec in mov loop sub jg jmp fisub or (bad) mov ljmp cs mov pop nop in xor fnstenv or int3 mov movsb mov int xlat gs mov jo fsts dec jge adc sub test cli xchg ret pop jne xchg cwtl or je and out int and xchg (bad) push pop lock out or pop jno dec mov (bad) jne sbb xor iret push fldcw cmpsl xor pop mov cmpsb lret cli mov mov mov insl movsl movl jp or xor cmpb ljmp xor sub sub mov add fucomi pop add ljmp loope sub add fldlg2 push aaa aam inc insl movswl icebp mov inc or or outsl in mov add cmp or jg lock loope xor jg mov fldln2 push and leave pop mov adc movsl mov into and loope and ffree jmp test (bad) mov jae push sub movsl in dec out lods push mov shlb mov lret adc mov int3 xchg (bad) lahf addr16 inc adc dec xor cltd sbb cs xor jmp ficoml mov data16 pushf add mov jecxz mov add or sub xchg fsubr mov ret mov (bad) mov out and lock loope imull (bad) sub jmp pop add xchg pop or (bad) icebp jo mov (bad) fdivr jge aam int jnp xor mov in push mov xor sbb loopne mov test cli adc mov vminsd imul jmp mov (bad) and cmp cs xor mov fldl pushf mov sbb mov dec pusha in testl pop jo push mov pop push popa lret mov lcall (bad) pop or pop jns clc adc jmp dec mov pop imul sahf jo loope iret jae pop xor or xlat xchg inc xchg fisubr xchg (bad) pop xor imull cld add (bad) mov jl mov xchg push xor pop inc adc jmp out cmpsb pop pop scas fs fstl xor lret xlat icebp push dec inc shr mov outsl into pop pop jmp lods mov and std mov inc leave movsl push sar sbb ret incl (bad) mov dec pop mov scas fistpll or xchg fnstsw orl mov pop xchg sub push inc mov sbb mov scas inc xor popf notb stos cmpsl outsl das add data16 es loope fiaddl aam push mov cmpsl repz mov xor out lock shrb cmp popf mov push jg int3 std push dec xchg adc loopne pop xor pop dec add cmc inc jo lret mov or lret in out cltd enter test lret ss and mov stc lods ret add (bad) out (bad) imul lahf mov rolb loop adc mov push mov lret xchg mov push cmp aam js clc jmp xor mov loope or sub jl mov and decb push dec int jge cmc idivb sti sub mov or dec shr pop cmpsl jns aaa xor pop jno mov rclb inc leave je gs test movsl push mov push mov out dec les call inc add scas fdivrl adc mov cmc test sub test mov sub mov sahf daa les pop out nop jbe sub jmp mov or sub out daa out mov mov mov fs adc sbb (bad) and addr16 mov mov jbe adc out pop mov mov mul xchg pop int3 (bad) pop sbb shr lret (bad) or add dec faddl movsl dec std loope sbb dec xor mov (bad) adc pop sub je sub negb xchg push stos push or xchg lea xchg mov mov lret pop mov inc jno jne aas mov xor adc jmp jo dec out or ljmp add sub pop repz stc xor and dec ret or xor ljmp add dec inc mov ljmp adc callw ljmp sub and fidiv lds in out mov idiv stc dec push add sbb (bad) cmp roll (bad) daa outsl (bad) stc dec imul add fldcw std mov fistpll enter cmpsl inc cmc mov ds (bad) movsb and idivb das lret ret dec out dec int3 in mov dec xor dec add in fwait sub in mov frstor dec repz cmp xor xchg sub loope cmpsb (bad) dec mov negb pop mov das sub xor mov out pop in iret stos sub mov jne adc push mov add and mov and scas test mov adc int3 push ret dec aam popa (bad) mov scas dec fstl cs cltd dec pop int pop out or in cs lret mov mov test pop imulb negl call in loop xorl pop lds mov in std mov shrl pop out mov bound lret leave jl push gs and add negb dec (bad) jnp lods cli add cmp pop out imul cmp (bad) mov cmp sub dec (bad) xor sub or sub ds movsb push xchg push negl jb enter daa mov call imul imul (bad) lahf push rorb js push jmp out xor push mov jns dec out mov xchg adc aas mov js sub dec sti xor fist imul pop cli scas cmp jp repz std jnp sub mov xor sub jns sub dec push or mov dec scas sub sub lea sub daa (bad) leave out clc or cmp outsb jbe inc (bad) sub les lret sbb out sti sub pop (bad) mov sbb jne mov sbb sub or cltd push mov rorb nop mov sub mov add and int3 xchg xor dec negl jmp les xchg push and cwtl movsb and popf sarl sbb and hlt dec popf adc test mov test sbb pop inc and hlt xchg fidivrl xlat loopne xor mov lods and adc add mov divl stc imul sti xor mov add fidivrl jns xchg icebp cmpsb repz imul out jecxz dec stc xchg loopne into mov add or loopne jne adc lret scas pop aad jno adc out mov jle sbb mov sub and sub mov fimull lret push or subb adc sti mov xchg sub and mov (bad) xor pop popf (bad) sbb jno imul lcall pop aam out jne pop and stos or pop xor outsb xor pop cmp add test gs das loop xor push cwtl lods or das sub in mov adc mov je das cld mov lcall (bad) daa push adc cmp sub and jge or mov sub aas mov in xchg cld xchg leave fs xchg jb mov in xor and and cmp add jmp pop bound lret mov and jo sahf mov sub lret leave ret jne mov and mov (bad) xor add pop push rcr push sub adc adc ljmp pop and jmp sub (bad) fsubrl xchg dec das out ja jbe mov mov mov mov mov xor and (bad) xor xchg ja aad sahf popf jns repnz add test and jns dec mov lret jmp cltd xchg mov pushf scas sub cmp adc stos gs icebp (bad) lahf imul es cli sbb mov fidivrl sti cs dec jb mov movsl mov jmp fidivrl in xchg (bad) xchg lret push cmp mov mov rclb mov sbb adc lret scas sub add lret movsb inc pop and mov (bad) fadd rcr ja mov sub sub lods push mov adc jb out aad mov and in fldl push xor or mov jmp inc sub sub pop jmp cwtl sbb leave cmp pop sti pop cltd inc xor pushf mov xchg dec lret add or imull pop mov ja mulb out mov test fidivr cmp ljmp xorps movsl repnz loopne xchg cmp dec mov lret repz in lret adc push movsl dec je sub in and movsl push xor bound out mov or loop jnp lods inc mov xor stc sbb push call call sub sub jmp repz adc scas arpl dec mov outsl loopne or fisub or std sub inc xchg loopne loope mov (bad) mov push repz testl out inc mov sub aaa jl (bad) xor scas fwait xor sarl xor stos sub shrb gs or inc and scas cmc xor std js and stos mov shrl dec les fidivr enter insb jns (bad) out ret pop icebp dec jbe movsl (bad) je cli xor (bad) xchg clc movsb inc or fnsave add mov mov or sub or faddl jno xchg (bad) mov int rcrl sub mov mov push in sbb sub lea and push shrl cmp xor (bad) pop ds mov jmp cmp mov sub lahf cmp and lahf jb dec ror push lods and aad sub sub sarl mov sub fdivrs xor xor xor pop push xor cmp repnz jl lret xchg es add add mov in xchg test repz lock mov mul stos and adc aaa mov imul sub mov dec adc popf adc jecxz (bad) sti sub xchg and jp mov push push fsubr xchg adc mov fwait add xlat fsubrs add scas cmpsl adc xlat cmpsl push iret mov xchg inc and roll das sub popf pop das mov iret iret xchg popf sub das lcall div sub xor stos push popf jae cmp out xchg ljmp imul sbb mov dec out int3 mov ret or call mov sub jbe pop lret clc ret mov ja addr16 sarb lock std push pop xchg mov inc into scas loop xchg add and mov mov fdivrl adc idivb mov pop daa sub push mov push xchg mov loop cli je stos add jmp js lock dec add out movsl fptan xchg ret lret push std sti test push sub mov inc xor add fnstcw (bad) cmp out jnp cmpsl dec push jmp (bad) cmp pop jno dec jge inc std outsb into xchg aad cld nop cmp push in jne flds daa sub pop mov xchg ret push sbb sbb jp or sub cld mov ss and lahf rcl xor into fcomip mov cmpsb rcll mov add jne leave add mov mov push jl pop sub add clc mov sub (bad) jecxz jnp jle add hlt mov add xlat jbe aas cmp push shr adc cmp pop pop add sarb push enter mul aas icebp pop orb pop (bad) xchg xor and jns pop xor and daa fist cmp stos cltd dec dec xor mov jecxz hlt jmp shrl je or das xor push js lcall mov cmp test call mov mov pop popf pop pop ds out shrb sub stc sub mov jne mov xor mov sub or scas push shr icebp icebp jge jbe popf or js mov shr sub cmp leave jb mov iret jno sub or push pushf mov xchg out xor lds jmp inc cmpsl pop jle push rorb push dec cli popf cli cmp cli cmp mov stc pusha sarb lret dec and gs cmpsl cwtl lahf or test sti xor sub bound and push jmp mov mov sub pop sub repnz or pop jle jmp sub and mov ret pop and and mov add lret or clc pop fdivrs lock dec cltd adc ljmp cmp iret push mov mov shrb and shrb das stos sub lcall add in ret sub imul pop xlat and fs or mov add es (bad) stos mov out mov daa cmp imul push fwait mov shr (bad) es icebp jg aad xor daa (bad) jns movsb push fstp add pop int3 in xor ds loop cs lods aas sahf sub sub xor xor xchg loop testl xor and push bound sarl fcomps dec loope outsb xchg mov js dec mov xor iret xor sub pop aas push fistpl mov or or sar inc fisttpl add jg mov dec ret inc les cmp xor fwait sub and das ficomp inc pop fcmovu sahf and push cmp cli int (bad) sbb cs and icebp imul add pop ljmp nop ret mov bound jbe loop jne jg and icebp dec xorb add lock hlt mov mov js iret mov sub adc xorb ret test jmp movsl xchg mov out in add push insb jmp sub iret mov dec enter int flds push movsl and mov test repnz sbb mov xor xchg jp and out push xchg lret fdivrp mov inc sbb jb idivb and pop xchg stos lods pop dec push test mov scas pop sub dec into pushf addr16 or sbb jns hlt pop xor aad jmp notb repnz add or mov scas sub mov push or out (bad) jo cmp clc mov sbb mov xor add cmp popa addl pop mov pop and pop sub jge arpl pop inc xlat sub cmc sub in dec pop xchg ficompl mov lock jge add mov iret jmp lods xor cltd cs xor jnp and xchg jle (bad) push jg shl dec and adc sub jne cmp sub add or das xchg cmpsl (bad) dec rclb das out sub test mov enter fnstcw call sbb inc mov xchg iret in notb (bad) mov (bad) mov not sub sahf jmp sub ja push (bad) fmull bound jne and or push or ud2 lahf dec out mov ja (bad) mov pop jle add imulb (bad) popf jle pop sub inc pushf ljmp lods xchg inc dec scas popf jnp push leave (bad) push pop and out pop mov mov or xchg inc out cld xchg sbb sub out dec (bad) ljmp jne adc loop in das int3 ret dec or add into add imull dec stos into das add lock int cld pinsrw insl jnp sub cmpsl sbb pop mov jle push jnp ret jo pop jmp mov (bad) push cmp xchg es sbb cmp rcl or or scas jmp or pop ljmp xor fdivrs iret push adc sbb test xor mov lret or lods fimull mov jae (bad) out enter push das je leave or dec fcoms daa scas mull cwtl and dec sub xchg and ret mov xchg data16 (bad) mov jmp inc dec lea mov cmc icebp lcall inc les out and jmp add pop outsl in cli movsl in pop test or and sub mov push ret dec mov sti jne ljmp xor lods adc fxch cmpsl dec jno ret hlt fs call fwait enter fildll popf pop lods jp idivl jbe sub orb pop jne jae ret inc jl out xor mov test (bad) cli cmpsb add lret out sub mov inc sti movsb jg push and clc in inc and or bound rcll aas jmp adc (bad) lret fimull push imul lret xchg mov jmp pop sub movsb sub imul idiv push pop dec lods leave push ljmp dec imulb mov faddl lea add fistl loope ds pop fs sbb xchg imul imul (bad) add add out dec jle frstor pop sub and ljmp insl mov incb push leave push and outsb in jno repnz shr lret les movsl and dec push call (bad) out dec ret and lret jl es add iret xchg xor lret and ss xchg inc popf popa add das cli sub lret ret and xchg push push push cld imul mov or or or push mov adc pop lret and cmp cmp popf and test mov imul jg mov xchg ficomp lock or xchg jmp les jp sub xchg loopne iret mov cmp xlat or mov adc xchg jmp inc cvttps2pi ret jle popa push sub lea mov sub or dec push lods ret (bad) enter sub inc jnp mov (bad) dec mov add pop pop repz aad sub mov jnp add xor mov aas out sub gs pop push repz (bad) mov jl push leavew cwtl test jmp lcall cmc cmp jecxz jbe pop lret add xchg jbe sti mov jg scas cld (bad) mov fcoms jle addr16 xor lahf movsb pushf fdivs aaa mov fstps inc pop mov ja (bad) icebp leave outsl sub lea xor mov shr adc stos into decl fwait jne fbstp stc mov cmp mov daa dec scas int jae sub xor mov aaa mov push push push mov (bad) out adc inc neg in sbb adc pop pop lret mov cmc iret xor ret pop stc rcl adc and add stos cmpsl sbb repz sub ja js ret xor lret ja in repz dec stos sub rcrb (bad) ret sub xlat out ret push mov xchg pushf bound fs frstor fst rcrl iret or iret jmp mov ljmp (bad) mov add outsl mov mov sbb mov push lds mov mov repz xchg incl out mov call leave iret pop jno nop ret pop sbb dec pop in pop cli pop pop cmpsl pop xor out fpatan dec dec decb divb and cmp incl sar mov (bad) jmp pop xlat and sbb and out fdiv xor mov inc bound das add pop and daa push and xor pop and add pop je pop outsb adc pop outsl dec adc popa leave xor pop imul or fistp test sbb dec mov mov dec xor cmpsb fwait push xor cmc sub shrl jmp mov (bad) push jb cmp sub js out xchg fnstsw movsb or or adc std aam add inc adc mov fdivl or (bad) call test pop mov std xor ja test lods mov je pop (bad) icebp adc jo mov imul icebp mov push out movl outsb cmp mov cmp bound sub mov mov js addb adc mov add add add clc mov mov arpl (bad) into sbb in jge (bad) call mov aad lock push jle imul aad out pop or into test pop bound cmpsb daa xchg push xchg add mov gs mov jg rorl xchg or inc sub in gs or clc jb mov loopne fwait dec mov sbb xchg notl call lds or or jns dec jg add and dec xor pop fistl sub lods mov addb sub ja mov mov test stos (bad) and push dec jmp mov sbb adc (bad) repnz bound add mov imul or inc sub pop adc enter push pop mov jb jmp xlat fisttp das pop lahf (bad) sbb push and (bad) lret pop daa ja mov add xlat or fsubrp out test test add es stos lret sbb icebp lods mov std inc stos pop (bad) shr icebp cmp clc cmp aad add or out das jnp lock gs or mov repz (bad) imul and mov test (bad) ds iret test (bad) fcoms xchg pop mov (bad) sti fnstcw sub xor mov (bad) cmp lret sub jmp sub dec mov mov inc xor jmp inc push sarl mov xchg stos and sti cmp dec jns (bad) mov sahf lods pop cmpsl cmpsb cltd ja test xor movsb or mov push xchg fucomp ds data16 into lock fisttpll iret outsb jecxz mov in inc lret imulb sub (bad) inc shll (bad) icebp daa and xor mov or add fisub pushl mov xor ds daa movl push das jns je fcomp pushf and das sub pop dec xchg cs xor loop xchg pop sarl aad sub mov data16 push cmp mov and aam pop sub lcall inc pop aad lahf (bad) mov cmp lahf push mov jge bound add cmp push fistp clc cs cld movsl mov jae xchg (bad) sti jno add jl shrb sub lods xchg fldl pop cmp ds and rorl xor sub popf inc (bad) divl cli adc int3 test and mov dec leave push and out ja dec mov mov insb sub daa inc mov add and bound fstpt out or jmp daa repnz xchg sbb xchg out popf data16 mov test jge mov inc stos xchg fisttpll fldcw and or (bad) in mov xor je lret popa xor add pop in jge cli sub and xchg mov adc out daa mov xchg stc mov add scas fcomps divb sub sub mov in cmpsb mov popa mov lea adc add out jl loope adc fadds xchg (bad) shrb lock mov out dec sbb xor and repz aas popf push mov out sub pop dec loop test push sti fsubrl pop (bad) lods xchg xchg inc mov ljmp sub push mov sub (bad) bound icebp stos fdivs xorb les sahf xchg cli je scas (bad) cmc add mov pop cld int loope das mov add jae popf xchg xchg pop out inc test (bad) lcall loop jno dec out pop sub xor aad ljmp mull or add iret adc scas mov test out jne cmp add and test rorb aaa lret andb popf pop cli push pop into stc ret int3 pop sub pop leave in (bad) xlat jecxz push sub in mov mov (bad) or pop je shr ret sahf pushw dec out arpl xor pop mov test out js mov test dec out mov pop adc lret push xlat dec mov dec mov inc out push pop std jle js mov lock xchg je loop (bad) sti adc mov shrb test sub mov loopne sub xor add sub jne leave sub ret jnp lret fyl2x flds sub add jmp xor mov push mov out bound sbb iret notl add (bad) jecxz lret mov dec xor or bound dec or sub cmp lds add add lock popf push scas dec out xchg xchg int3 js pop jb stc sar aas int3 cs stc (bad) mov pop cld or mov fldcw xor leave outsl mov xor sub cmp btc rcll add jne stos mov clc inc push std sbb mov adc xlat pop and jno xor jl leave repz out mov sub pop dec lods pusha xchg lret repnz sub arpl (bad) (bad) xchg in daa arpl xchg add push xorb xchg mov sbb xorl mov or sbb dec stc xchg sub mov pop dec aaa jno lret ret pop mov lcall dec popa xlat inc hlt ds call scas lock mov and and imul stc insb popf gs sub xchg jecxz adc shll jmp daa push inc inc nop sbb dec mov mov mov mov cld daa mov jecxz mov fnstcw and add scas lret in stos fs mov movsl mov sub xchg pushf loop and fs fiadd rcr out icebp mov fwait lods add add icebp or sbb and shl cmp jmp test and or jo and push ret mov stc inc daa roll mov outsb mov rcrb in mov das sub test nop xlat (bad) jo mov sub push inc test xorl mov stos cltd hlt xchg pop repnz sub cmc mov jmp test mov in xlat jp pusha sbbb push xchg pop (bad) ja mov cli mov xchg (bad) sub in cli out push mov mov push jmp lret mov or inc fwait hlt cwtl push fstpl push sub pushf (bad) insl (bad) jle je popf test sub add test and sub pushl push xor xor scas xor mov (bad) into inc push pop lds insl bnd fwait mov mov inc int and jle jb xor inc pushf adcl (bad) adc pop enter (bad) push pop cld push sub lcall subb ret adc xchg and mov mov (bad) testb imul loop or sub and popf into popf dec or bound cmp mov cs sub xchg adc cli mov pop dec and mov xlat mov into mov sub or aad and out add pushl xchg in gs lcall divl lret and xor dec aam fnstenv or xor or xor repz adc sub stc push add mov push sahf xor loop push stc mov mov pop sub inc push (bad) mov iret and xor xchg loope inc and or push dec dec jge movsl push or jecxz imul mov xorb or push (bad) xor ljmp pop out lods int test xchg xchg mov pop jge loope and cwtl outsl mov and sahf lods pop loop jne push add fmull add and out jns mov cld in outsb dec (bad) jne jge xor loop push mov sahf and mov imul adc mov fcmovbe ljmp ss mov shlb ja out xchg mov cmpsl imul sbb add and jmp adc (bad) cmpsl mov and stos adc adc pushf out jg enter gs int3 jne (bad) push mov (bad) xor mov aad lods popf loop lds das shrl sub lock and push pop outsb cmpsb dec adc adc xor out in or pushf scas out into push sbb push pop (bad) sub lret jne adc mov scas aas int das mov bound inc (bad) xor pop and mov iret mov jg pusha (bad) cs movsb add lock xchg xor ret or xchg ror lret add xchg cli jp jle test scas data16 stos fsub sbb stc add jb add out push dec fdivl push xorb cmpsb pusha xchg pop mov sub (bad) xchg add push decl scas lcall push push imul push mov lods std xchg ljmp jae lea mov or mov pop dec rcll cmpsl mov or movb lahf adc mov sub mov mov xor and rcr bound push sbb (bad) cwtl imul lret mov enter jb dec icebp push sbb in add jb sbb clc cmc jno dec lds cmpsb bswap push bound xchg mov add or sti push fnstcw arpl jge lea ljmp add jecxz cli xor or out and repz mov test add fcomps dec sub sub mov stos fxch add cmp add mov das and stc pop sub aad xchg leave jmp in mov sbb cli cwtl dec or sub xchg clc cmp xor jg and ficom sub jmp sahf and (bad) xlat icebp daa lds or inc xor lret les cli cltd fbld enter insl mov out popa sub fisub sub js mov inc rclb or sub mov test push push movsb ds repnz jg xchg into dec adc pop adc and add xchg dec cmc lret addb sub mov and mov popf xchg out and sub push pushf cmp pop into std mov dec daa cld lods in push mov lret ret call cwtl dec (bad) adc cmpsb pop jge or cmpsb xchg fistp dec (bad) fsincos movsl icebp add inc mov fistpl mov icebp cmp xor lahf and and fiadd push repnz das cld pop cs lret pop inc dec fstpl (bad) dec xchg (bad) (bad) cs enter mov test cmp dec and mov sub imul in in lcall adc mov imul push (bad) mov repz sbb mov out dec ljmp movsl pop or jo loope add out mov dec in sub xor mov pushf rorb mov and inc sub jne bound in dec (bad) push inc mov ret xchg cmp addr16 add (bad) dec cmpsb in dec mov lret inc sub xor push push ret and loope and aad xchg push jae stos leave test add inc bnd jno imul cmpb xchg pop mov cmc gs xor (bad) or mov push ja adc mov push jecxz insb mov mov and mov inc rolb cmp mov ret (bad) (bad) (bad) cmc cs popa add ret (bad) xor mov mov adc sub scas adc xchg mov jg jmp out mov and add out pop out inc faddl add repz add jmp dec rcll fmull push add sub test mov data16 inc (bad) sub movsl ret cltd mov js xlat in scas xlat jne cld push icebp mov outsl dec mov inc lock test test xbegin popf adc xor mov ret add repz xor fisubrl ja imul data16 cs mov mov mov stos cltd dec jl test pop add add (bad) imulb les mov xlat scas xor push push push scas push xchg div in ljmp xor xor push fs fsubs or lods cmp dec dec mov jmp sub sub mov sarl push jns dec sub and stos xor and movsl sbb sub imul xchg lock adc pop popf xor stos cmp ja (bad) or fistpl out icebp pop dec (bad) xchg inc iret jle sarb (bad) fdivrs add cmp xchg pop jmp leave out stos clc testl push shrl sub mov fs jb ss bound test lahf mov sarl mov or xor adc ret adc and add test mov sbb xor movl jno jecxz mov outsl mov jge nop dec jg or mov jp shrl loopne cmp das lods adc sub sub sub pop outsb sub and jae dec mov xchg out rolb div or testl (bad) fs lret add mov pop jo lret jge push fldenv xchg out mov fincstp das adc (bad) mov pop movsl cmc inc adc adc cli fldcw mov and push push add in enter xor xor lods push xor into add cmpsb add xor pushf mov out adc mov xor (bad) loop xchg fnstenv and or mov (bad) cwtl (bad) mov mov movsl movsl sbb repnz jmp mov sub and inc scas inc inc stc push pusha push pop fsubrl or mov loope lods pop pop lods es jno popa stos add (bad) int3 cld pop in sahf mov and pop jb xchg lods int lock push andb cld gs sub jns leave mov jmp or pop xchg lcall pop negb jb frstor mov sbb ds ljmp inc pop lret cs cmp jo add mov dec mov jns lret jecxz gs pushf lock jno aaa sbb out jno imul das sub int cs sub cli imul push jo dec loope mov stos dec stc popa xchg sub or adc mov or add jno push or dec mov add gs add dec out sahf inc orb adc lods sub push add aas aas sub out dec add xchg outsl ja hlt clc cwtl lods xor push push (bad) (bad) sub test or fsubr xor repz loopne or sub rclb mull jae cltd add dec scas fldl inc scas sub ljmp mov out mov pop add (bad) cmp xchg xchg movsl int3 lret inc insl jle xchg push dec push mov pop icebp js add (bad) dec mov popa pusha jecxz mov mov inc jl jmp add xor or jne inc cltd (bad) out bound sub mov xor push insb and sub out cmp movb fsubrs popa cld inc nop push mov xchg scas popa jmp pop sub mov inc mov out cld cld dec adc and sbb scas pop repz or (bad) or sub sub jl push fwait les fcomi imul dec int3 shr inc mov mov sub jbe leave fs lahf popa xchg subb xchg adc lods jne sbb pop adc dec sbb pop dec jecxz dec cmovnp mov ret out test (bad) push mov xchg outsb jg lret sub aas dec mov xchg xchg into cmc inc and lret jmp inc push das sub (bad) adc ljmp or push cli mov mov mov add negl out sub dec out in insb mov cmp divb inc mov sbb or inc xchg mov jnp inc sub in add and mov in dec push jo loope (bad) mov (bad) jmp icebp add mov dec out fsubs das add clc fist jl es mov lret mov cmpsl push daa into pop adc popf in add xor cltd lea mov test or dec pusha and imul test xor into outsb inc sahf or (bad) out sub pop fsubrl add data16 and add cmp inc shll or std mov mov ja push daa fcoml mov mov rcll (bad) sbb loope and pop lock outsb push shr and fmull daa push xchg xchg fs mov dec addr16 (bad) std adc dec or int pusha push adc push mov fnstenv add xor scas mov and xor das mov shlb and jo and push arpl xlat int3 lret or aam adc int aas ret push out daa in lahf loop cmc pop aas iret dec push pop imul jbe iret xchg imulb xchg adc pop mov jbe push sub pop outsl mov out push push leave rclb aad fcoml xor or xor stc sub push sahf das push sahf adc out lret pop inc xor and and dec fucom mov pop push adc push arpl pop das out nop mov push or stos pop pop mov jmp iret stos jns imul repz shl cs pop and jl add ret mov xlat pop mov and movsl jl lret or xor add mov (bad) mov xlat dec ret testb sti fstl repnz lret repz push sub xor sub push aas xor jnp xchg add lret std out (bad) (bad) dec lret xchg add repnz mov xchg mov mov out mov ja jg jne add stos mov or adc mov mov pusha mov repz or cmpb push cwtl push lods outsb sub or pop push das dec jmp pop (bad) sub xor and ret mov dec cmpsb call sub pop dec clc (bad) leave (bad) and sub fiaddl out push je xchg jns inc into lods mov nop mov fdivrp es inc jge lret out xor jne cwtl and pushf je int3 push dec lcall or gs popf dec sbb lret ficoml xchg aaa fldenv (bad) mov xchg cmpsl (bad) sahf (bad) lret out out pop aaa xor fldl pushf shll movsb adc mov mov into imul in jg in xor push dec sub (bad) ficom outsb pop xor sub gs pop pop mov sub adc iret stos imul adc adc mov in in mov jmp mov leave repz cmp sbb mov mov dec pusha mov inc cmc insb xchg out rcll pop imul mov pop adc mov scas xor mov push inc ret pop icebp jo aad push mov or mov sbb test mov fdivs pop xor adc cli (bad) call jmp lods jne fdivs push cld xor dec jg clc dec mov fisttpll fwait or insl repz xchg dec dec icebp cld lret fwait outsl jno mov jnp pop pop and out loopne pushl xchg pop sbbl (bad) in jns jmp out push stc sbb fldenv mov and sbb movsb jb mov mov push adc scas sub iret nop cmp pop ret fimull daa push cmp mov jl push fadd (bad) icebp lret and (bad) push pop repnz inc and repz jmp cmp mov das fcmovu mov (bad) notl push in fist jb mov test (bad) mov add jne out push mov cmp pop adc add lcall and adc loop shrb pusha bound idivl and mov pushf std push mov xchg int3 pop (bad) ljmp push loop push jae and aas popa cwtl or icebp inc lods cld shll into mov loop pop sub testb push sub mov or xor xor stos es jl cmp out (bad) addr16 mov xchg pop adc xchg cli adc sbb sbb dec stc mov rcl mov stc fs or adc jbe out inc es pop sar pop icebp jmp sub aad stos cmpsb sub (bad) sub lods sub daa scas (bad) aas cmp jmp mov or aad mov jecxz lock imul mov jnp or pop (bad) jns nop (bad) sub pop mov jle and jg scas scas in fidivr or and mov push mov icebp xchg dec lods dec mov inc inc xor lcall cmpsl gs ds leave fist adc mov in jbe ss fstps (bad) dec fsubr mov xchg pmaxsw int3 sbb ret inc aas mov shl jg mov dec inc mov mov dec lahf mov lods pusha mov xchg (bad) lock xchg dec fldl cmp jmp and out jb pushf or stc mov dec stos lret mov lea jg (bad) adc subb jl mov push or xchg push inc and xchg jecxz cltd mov out dec fdivs pop mov adc (bad) das xchg xabort mov (bad) loopne nop (bad) sub movsl sub jnp cltd in fwait mov or jle cmp adc leave jb push xor ja ja lds loop cmp jo inc or stc (bad) imul loopne fldcw inc (bad) outsl int clc xor add and inc cmpsl sbb scas xchg sub fs pushw pop ret repnz mov sarl jne (bad) test pushl test lret sbb push push mov and push pmaddwd cmpsl in into pop rorb repnz loop pop ds mov ljmp jb loop jle sub loopne out xor mov jb daa lock inc xchg (bad) call mov daa xor push xor inc or mov push adc inc dec xor lods inc call xchg adc pop push mov or mov (bad) sbb sub lret lcall (bad) mov stc cli bound ret (bad) jae add mov add mov sti mov xchg mov ret xchg mov les xlat sub incl or xor add lret fs mov (bad) jb icebp and data16 outsl xor push sahf adc push sti fstpl pushl scas popf test adc mov movsl and std ja sub (bad) lahf int3 sbb stos sub negb or (bad) into mov inc and repz ret insb adc popa daa jmp adc pop or rorl (bad) lret repz or push mov test cmp dec add push (bad) out mov sub lods dec popa dec mov mov inc popa mov rolb cmc dec xor mov mov mov je pop push je jmp ds mov xor sub repnz pop mov fld sbb cmp in das pop imul add sub je (bad) idivb lret inc movsl sti mov repnz jmp into imul pop subb shr lods cld negb mov sbb enter mov add push mov push out adc out adc push scas sub sar jmp fldl scas or mov leave loope lds xor mov mov shll dec out in mov rorl or cmp (bad) sti add sub (bad) xor cmp int3 sub xchg pop fildll leave and mov sub pop lret add imul cmp push (bad) sub lds lds or aas add or fwait add xor jecxz aad add add enter jo loope mov jns ret jg stc stc jle scas and push push adc lahf jbe push add xchg sub and add fs sub sub push and sub xor mov xlat dec mov and shrb dec stc cli mov dec (bad) cli sub add lcall test (bad) cli test jg and and jge push inc cmp rclb pop sti jo nop dec and mov pop lods fnstenv enter shrl cli leave enter es jg push ljmp push or and pop xor int3 add cmpsl add push inc call (bad) xor lds mov leave loope out dec shr sahf push inc repnz xchg int3 pop stc adcl push test rcrl ret pop outsb sub xchg addr16 testl (bad) scas lea aad das out aad fisttp out dec lahf leave jg bound add push mov fucomp sub xchg pop and mov mov fisubr mov mov sbb rol into or and cmp loopne out push daa and mov (bad) xor pop repz ds out mov xlat sub cwtl stos or and lock mov jmp dec add mov mov outsb push xchg push fimull fldcw out test (bad) or pushf mov jbe popa mov xchg scas lret hlt dec call (bad) and mov and bound pushf popf pushf test or jg xchg mov mov dec mov scas inc out and roll adc jge ret js fmuls adc fs or jnp adc xor lock jne dec jns mov leave and dec and cli fistpl dec loope sub or adc lea mov dec cwtl (bad) clc cmp loope add mov stos xor or sbb std adc mov sar cmpsl adc fiadd (bad) jb sbb sub popa jle lret stc dec xchg add test idivl adc mov and imulb add dec out je test addr16 jnp xor sub clc fdivl add sub push notl and and mulb lret in fldl out aas std movsl dec stos sub cmc decb dec scas jb mov push and push push out inc dec xor into scas test test mov (bad) jmp ret dec cvtps2pd xor cli popf test xchg adc (bad) mov rdtsc iret sub std mov icebp pop rolb jae lods mov ss fdivrs test dec push add insl ja and stos stc add ljmp pop stc iret (bad) mov sar mov popf jle out or arpl leave cmc jns cltd loope orb les js add imull (bad) call jp xor mov imul pop xchg inc or out loop sahf xchg movl dec add or jne imulb add mov daa (bad) jle push dec mov sub inc cmpsl push xchg fiaddl mov xchg mov ret pop mov rol xchg (bad) out into push dec lock (bad) movsl cmp jle cmp fsubl leave xchg stos sub dec repz inc outsb out xor sar push arpl pop dec in out mov pop mov ja and fisttpll xchg add pop dec mov ret rolb sub pop leave fcmovbe add add (bad) and xchg sub sbb icebp mov loop roll insb xor out fidivrl leave (bad) jbe shl cmp dec call pop ret mov (bad) into dec mov call and ljmp lahf icebp lahf imul fsts (bad) lock pushf push mov in ljmp das or out mov adc or enter push sub push mov mov mov aam sub in clc xor repnz je xchg cmp xchg in or cmc mov jmp jmp jmp pop push daa xor jmp (bad) cmp leave adc out call jns sub and cs adc xchg or out dec pop mov (bad) mov push adc add stc dec repz mov fisttpll xchg jle pop fsubrl cmp mov cmpsl inc aam xchg aas (bad) (bad) mov pop push test mov mov mov sub fwait mov loop inc cmpl adc mov pop aaa clc xor cli lret push dec out sub or cmp adc xchg pop mov jo out call dec mov add mov (bad) imul or pop (bad) xchg test push add idivl je es mov fistl (bad) (bad) clc xor ljmp nop xor mov lods push iret je,pn andl repnz mov lret sub aas es fsubr xor push sub repnz mov mov and push mov aaa inc xchg fldenv mov sub push enter fstl mov dec scas lea shlb push out add push push ret sub stc inc lret fnsave cli inc and mov into lret sbb mov rclb mov mov fcomps pop push stc sub inc cmp xor add xor leave xor int3 mov sbb cltd sub ljmp imul es sbb cmp icebp add lahf in xchg sbb movsb adc xchg jo and cmp sub out push pushf test (bad) int3 lods mov pop jb cmp into or fsubrl and or iret in out xchg les mov xchg mov pop fcomps jmp frstor insb sub out ja pop je push (bad) xor (bad) sub xor test xor pop cli (bad) repnz or mov je and xor movl rcrb push xlat rol sub xor xlat aad or imul mov xchg push test out mov add cmpsb jp (bad) jne mov inc pop popa mov inc xchg push lahf jns movsb or xor pushl nop test sub add jo mov ret add hlt or call icebp mov pop mov sbb dec (bad) das jmp cmpsl dec rep xchg call movsb cmp lret adc pop jge lock lods xlat int3 and mov adc movsl daa jle jp shr mov and xchg stc pop mov (bad) outsb mov imul fist out sub push stos enter jmp jb mov leave mov ds xchg push dec (bad) or jg adc out (bad) cmc inc cmp (bad) lock xlat pop imul cmp jp pop xchg stos pusha push cmp push inc jmp aaa pop and mov xor das sti aam in lods sbb mov gs mov mov repz sub (bad) stc out js icebp sbb adc ljmp in sub push jle mov xchg mov in sbb flds jecxz and arpl mov and pop add push cmp and nop xorl fcoms je nop push leave or popf addr16 loop adc sub mov popa cwtl roll clc call and sub subl add cli cli cmp call mov addr16 push add in or loop loopne rcrl cmp dec sub adc sub (bad) sti inc xor jmp or scas or loop loop pop roll int3 xchg rolb pop jge nop dec pop jb mov into xchg jl push neg jb jae cmp leave fbld xchg idiv lret popl pop lea outsl cld mov add cmpsl (bad) push xor jb (bad) push push call int in das cmc cmp jg (bad) pop xor loope sbb inc (bad) xor pop add imul leave jg and add daa sub jge rcrl dec xor pop and adc sub and aas lret daa notl pop rcr rcrl leave and and out lea xchg xor lock pop mov jmp mov add adc cmp sbb mov sbb sub stc lock sahf xchg ret xchg sub add imul adc cmp pusha or adc lods shlb imul ret scas adc das fdivrs in cmp ret jg sbb fs and fcmovbe xchg (bad) outsb jo fcomps aaa xchg xchg outsl or bound xchg pop xor jle push xchg inc mov out (bad) lock push pop je pop xlat insl (bad) xchg loop jge loope outsl in dec add fdivl das xchg mov jg fiaddl mov fldt aas cwtl add push xchg aaa sarl testl push push jo loope sub (bad) in inc movsl sti mov mov decb in test pop lock mov sub and ret or adc test testb (bad) adc aam or add nop mov mov repz fiadd cmp jb sub or pop add cmc imul mov mov cmpsb ret and adc xor xchg shll or repnz jg cmp xor cmp push pop mov stc sub mov outsb mov mov inc and jne pop les jmp fcmovnu aad sbb cmp inc mov sub xchg inc imul lret mov and xor js (bad) or ss jno popa xor or adc pop int xor fldt adc cli (bad) cli push sbb sub and gs loop outsb insl (bad) aam (bad) iret mul add jae scas arpl push mov mov insb js sub mov sub aad call jle jmp fsubr mov xor cld jl push lock or cmp movsl fs pushf imulb inc outsl or mov clc sahf push out adc jb dec or (bad) sub add jecxz adc iret (bad) jecxz inc out sub out xor ljmp mov fisttp push fistl (bad) or jns insl and int3 test dec pop test inc inc sti not dec jecxz dec mov fidivr scas lds pop out fisttpll sub int outsl int arpl dec test stos mov dec out mov add loop lahf mov xlat mov repnz das sub and in xor cli push sub xor dec mov lods movsl jne mov insb mov sub cmc imul or push mov inc xchg fsub (bad) sub mov jecxz jne jb les cmp fstl movl pop xchg shr cmp add ret into and cmp pop insb jns or nop aaa mov enter out dec pushf mov push dec xor (bad) popa dec std mov and mov adc mov jg (bad) movsw cmp daa fmulp test push aad sub out nop jmp (bad) add icebp sub jge mov add mov fldl or adc xchg repz sbb adc mov xor push jp ret outsb repz (bad) scas lea mov pop lds add into cmc flds dec jp test mov or fistp scas push or and (bad) push dec xchg jg add mov ljmp push inc add jns inc or sub ret (bad) xchg push lods mov xor ljmp cmp or popw ret aam pop je xchg shl cmp rcrl cmc inc sub dec repz lret divb fdivp cltd pop test sub sub (bad) xchg push push pop lret pushl test xchg scas cmpsb mov sti cmp ds test (bad) cmp call push movsl cld pop cmpsl lcall sub pop xchg lcall adc lahf int3 xchg (bad) xor sub in roll sub dec or and mov mov test scas xor stos loop lcall packssdw call push pop pop pusha pop or mov mov mov add rol bound jmp lret jl sti jp or pop in out ljmp add pop jae cmpsl fstpl lret mul scas and dec mov clc outsb mov decl stos lret xchg dec jle ljmp xor push cmp loop pop cwtl int daa add call mov loop push stc sub cmp sub jo mov aam in stos in sbb scas into pop adc fcmovne xchg call test xor cmpsb or xor jg sub and mov imul push sub push nop in xor dec mov and cld pop mov pop sbb fld1 xor sub sub stc xchg jae add mov xchg push cli mov jl add mov lea and jmp sub xchg mov dec inc pop iret mov incb push neg das jbe jno sub mov ja lahf dec les pop mov mov fwait sbbb shll jnp pop aas cltd arpl or dec push insb sub fildll ret pusha sub cmpsb jne lea jl xor gs and jbe fistl jp movsb sub pushf lds mov jp and mov (bad) cs stos inc flds fcompl lret cmc (bad) popa sarl dec or out mov or mov mov push ljmp clc pop iret mov xchg decb gs adc jno lds adc dec shrl and test lahf adc cmp xor inc xchg sbb in add test mov mov push repnz mov ret data16 mov fdivr xlat mov sbbl mov adc xchg fisubr repz and dec fimul pop jecxz mov adc rorl dec in jnp int3 mov jnp pop add mov dec pop repnz iret jge lcall sbb (bad) mov xchg test idivb push cmpsl mov xchg repz mulb fs mov rcll loop or ret test call xor ljmp jmp add and fcoml shrb mov jge cmp pop sahf dec out pop mov lods push mov jne push mov xchg aad cld test jmp and and in stos mov shrl pop cmp jp inc cmp pop pop outsl subl adc sbb xlat movsl jge out aad add and add in lret push or incb das bound int3 loop or jmp ss icebp add jb shrl or cli in out jl xchg loop in or rorb add pop xor xchg sti sub push or ret bound dec xor pop loop in add leave rol and fnstenv mov mov jmp and xchg fiadd shrb add int sub mov dec dec adc mov nop xchg mov movsl mov jbe mov sub sbb popf push into inc or mov mov jge (bad) imul add arpl sbb fdivl push add or enter xchg test mov xor icebp pop subl cmp and sub pop (bad) imul push cs in mov jl fistpll pop sahf cmp imul add idivl pop cmp xchg stc jb sti bound ss jg add out push sub outsl popw sub add js out cld call mov sub mov or jne sub aam pop jbe sub (bad) push divb dec adc mov adc testl jmp or icebp sub test or jg les sub lret mov pop lock jmp repnz out mov and pushf gs adc mov xchg notl shl arpl mov mov mov es idivl sbb pop or lret xchg sbb lods (bad) pop (bad) ret movsl xchg add (bad) cmc repnz jmp ds jp fidivrl push aad sub add and fwait xor mov cmp je dec into repz loop icebp and sbb push shll push mov dec loope hlt mov xorb xchg xor clc cmp inc rcll cld (bad) (bad) push inc (bad) push je aad int js leave lret and leave sub xlat inc push pop cmp repz daa imul mov inc into das mov xor out sub dec std inc in xor jmp daa mov fwait xor stos sub shr je out mov jp pop leave popf push xchg mov ret and mov sahf pop imul rcll push clc mov nop ljmp fnstcw xor mov mov pop loop lret push outsb add cmp notb sarb push lret xchg roll xor repnz (bad) mov sbb fidivr add ja aas mov pushf in repz (bad) or stos (bad) lret in sar add cmp (bad) or mov sub icebp cmpsl add jo je mov dec clc in ret add lods xchg and out clc jmp cwtl int xchg jns dec (bad) and dec mov sti dec sub adc pop fnstsw mov xchg int3 sar jmp das (bad) fcmovnb or or fldl adc mov sub (bad) mov push inc lahf pop fidiv into divl cmp add pusha mov test aam pop stos sub out popf inc out lahf jns test sub ljmp mov xlat mov cld xlat lret xchg lcall loop and in or sub mov fidivr stc aaa mov imul cmp sbb mov les imul mov scas push jne fistpll inc dec xchg xchg xor das leave add (bad) push int gs ret pop in mov int3 jle or inc (bad) mov sub (bad) iret imul xor pop fiaddl sub xor ret and cmpb sub push pop push pop or sbb mov mov mov cltd mov sub add ror jbe add or mov cld push loope fldcw cli vcmpss das pop cld mov repz jno sub fstps andl sbb hlt aad adc (bad) aaa call faddl ja das adc push mov mov lret mov mov jmp lret mov pop popa movzbl jp mov enter dec sub addr16 add shrb adc pop jb icebp fistpll call pushf imul cmp (bad) scas mov test or fucomip popf hlt push dec fcmovnu and push rorl lret jg push out xchg sub jns in mov xchg xlat mov stc mov test in out mov xor mov ror jmp in lcall ljmp or pop push sub lahf jbe pop (bad) mov mov mov (bad) and pop in into scas mov xchg dec pop ljmp cmp fmuls and and imul sahf je mov daa xchg inc in rcrl and sub add jbe pop (bad) mulb push mov and pushl push mov sahf and push int3 movsl push cmp push cmp mov mov test cmp add add outsb add loopw push pop pop dec dec (bad) push test sub and adc lret xchg push stos mov pop xchg xlat dec call mov jo xorb cmp ds gs xor mov add jbe lret jg xor jge sub adc and add daa mov inc adcl jge mov repz pop jge js cmp jecxz adc fst cmp or and cmp cli mov das fstpl push pop test adc sub mov imul jl daa enter add cmp dec das sub rcr adc push mov jmp dec ljmp call scas mov xchg jecxz and dec (bad) (bad) jb ljmp or mov or sti xchg push and cmp pop add shlb pop inc (bad) in rcl inc (bad) xor addl das mov das out mov rorb pop (bad) out mov pop mull add (bad) imulb pusha aam inc xchg add lods mov mov movsl pop xor push cli inc jmp and sub notl jb jp push mov fldenv jnp mov test add mov cmpsl cmp xor mov mul sub ficoml sti xorl or in mov outsb cld mov dec (bad) repz arpl jns mov sahf pop jge dec out xchg sub mov add mov pop xor out das rclb sti pop scas or rcrb fidivl (bad) lret pop in fistpll idivb pop into mov cmp and test mov outsl addr16 (bad) adc push cmpsl (bad) lock int je xor imul sub adc ret sarl int3 mov pop or or sub sar loopne lret mov into mov loopne rcrl ret and call aam push mov subb mov fmull cmp sub clc pushf mov jg sub sub xor ljmp das (bad) sub in pop dec out and dec bound xor jecxz or iret sub jnp pop (bad) push call mov inc push jno lcall mov xchg out test das or push cltd push idivl mov mov lcall dec mov (bad) adc (bad) or sub mov stos gs scas aam jbe xor cmp (bad) push sbb imul pushf push outsl inc pushf or into mov inc xchg test lret inc daa adc cli int3 repz bound or xchg (bad) and jbe xchg (bad) cmc addr16 adc (bad) or sub dec xchg std daa (bad) adc adc adc ja clc in loop fldl adc pop lret jmp lods xor fstl js stos int3 les add jnp inc xor push pop pop pop out sub cmpsl xchg jns imul mov pop sub xor pop or sub mov incb mov dec adc clc stc outsb daa fistp dec (bad) mov ror hlt adc negl (bad) cmpsl xlat jge loope out jmp jne adc dec out jnp and mov pop in sbb in repz insb jne mov ss xor pushf int3 mov call mov lds sub lret inc fndisi(8087 jmp sub or rorl pop fs stos test movsl mov dec scas mov rclb sti sbb cld popf mov mov and adcb xor ljmp clc lcall push and sbb (bad) je add and mov cmpb or icebp pushf ljmp jnp xchg and pop sub icebp stos imul imulb xor rcrl cmp xor lds test mov lods icebp fpatan mov or cltd ret push push dec mov and or or idivl mov in jg sahf push sub pop sbb xor push aad mov push int3 adc lret stc rcll (bad) imul (bad) jecxz add mov sub (bad) mov cs and mov or or add mov lods xor jne jmp inc ja prefetcht0 or jmp inc mov cld adcb pop push sbb mov xor xor test push dec mov xor fldenv cmp lret div add inc lcall add in pop (bad) fcomps (bad) cs loope gs mov cltd test mov xor pop inc aaa sub adc call mov cltd (bad) jns dec cmc in pop out lods adcl sub sub sub lcall cmp jns xchg bnd adc pop shlb idivl ds mov pop sbb sub popf int3 ja sti rcrl or pop stos xor mov icebp jl sbb ja jg push into lret xchg int stos adc xchg mov mov mov ljmp push jecxz sub icebp loope loope sub add xor xchg inc dec pushl mov test scas cmp or push ss push xor test cmp jmp push scas mov jle movsw xor jbe sub sub jne add (bad) xchg jb loop sbb sub cmp inc bound mov or repnz insl push inc xor or not fist push scas (bad) cmp dec (bad) dec fmuls xchg rcl daa mulb cmc xchg push cwtl mov loope (bad) jp sbb pushf pop xor mov adc (bad) adc sub in lock mov lds xor divl into mov cwtl or cmp andb pop fcoms cmp pop bound outsb xor push (bad) pop sub (bad) adc out cmp loop jl (bad) pop adc clc mov xchg lods scas das ss add sbb (bad) mov jb icebp xor mov jb (bad) push xlat jmp mov mov fimull mov les mov adc (bad) lahf pop stc movsl aad pop push sub adc stos cltd adc and or xchg sub sbb xchg mov repz (bad) imull mov fchs adc loop dec loop rorl and jg xchg and daa shufps test mov lods fsubs enter loop mov into mov and inc push or add mov xchg mov mull mov fs sub adc ljmp adc mov add sub outsl call pop stos movsb aaa mov cmp mov lahf (bad) cltd pop aad xor decl sub test xchg fsubr lods jmp pop xchg ret test and fisttpl mov dec les and push flds inc mov sar int3 ja xchg sub mov add jo sbb pop sarl mov pop mov daa outsb xchg cmp xor jb leave cmp mov fdivl push in movsb iret daa gs xchg (bad) stos repnz inc (bad) mov pop (bad) and or pop mov ljmp sub sub xor sti xor cli sub xchg xchg adc test xor sub popf mov jle scas add (bad) sbb int3 (bad) repz out notb gs mov pushf sbb or pop fsubr jne mov movsb fs xchg lahf ret cltd iret adc and push loop (bad) fld push dec mov cmc out cmp in and pushl adc scas sub daa mov mov rcrl dec or clc cmpsl and mov (bad) pop mov (bad) movsb sti mov shrl pushf jmp mov aam jmp (bad) mov mov mov (bad) xchg xchg cli shlb jg dec pop lock lcall in imul jl pop in ret xor out xchg jl popa ret cmpsb lods rcrl imul popf and xor decl lods imul and add out popf xchg pop add add (bad) bound fsubp xchg add rcll xor mov addb sarl and je sbb je cmpsl call xchg sub xor sbb xor mov pop iret aaa ret pop push mov inc sub std mov (bad) sub andl cmp adc lea (bad) lret jmp inc pop call cmp aas cmp add popa push xchg sub mov push adc push popw mov in sub mov inc call das jmp jge hlt in jbe xchg cmp xor xchg pop pop testb push ja (bad) aas stc jg orl hlt and stos sub imul inc leave xchg jae (bad) not lock add mov fcomp pusha pop cli cld mov pop mov inc pop mov movsl jno adc test xchg ljmp scas idivl bound xchg outsb add mov roll push mov and sub in push stos push cmp mov cmp out pop lret mov sahf clc mov lret pop mov je add ds in push push sarb ret xor clc sub lcall mov jg (bad) push gs or test repz movl lret inc lds and test lods xchg cs insb adc call repz dec incb ljmp xor and sti std push jmp sbb add jecxz xlat lret jmp out push je sub mov cmp adc inc mov mov sti arpl xchg push dec push decl and fucomip inc xchg fsubs jle jb icebp imul mov sbb sbb or cmp sarl xor cmp (bad) cmp lds mov jb out ret push mov jns,pn jnp mov adc adc cs stos jb ds jns mov adc gs dec sbb cmc in and push ret mov dec cli xchg mov sub icebp insb pop jb dec ficompl lret and outsb adc mov jl loop sbb xor mov je xchg or out sub lcall jo sbb sti sub addl dec sbb cltd or sbb jns ret mov xchg sti cmpsb ficomp dec fcomps stos xor les (bad) leave and cmp adc fwait or push xchg icebp mov and xor loop jne jmp mov xor xchg daa or idivl bound xor and jle repnz xchg pop mov addl les sub mov pop mov xor mov or out mov jbe idivb xchg fmull mov dec stc push rcrl pop jg out aas adc sub sub movsl push es mov movsb jns xchg dec cmp into adc mov cmpsl scas fnstenv (bad) outsb xor xor adc cs sarl mov fisttpll leave add xor mov js xor nop xchg bound (bad) mov mov ljmp fs xchg sahf pop aaa fs dec clc dec or mov je pop or lahf in mov es pop out jp fbstp dec or insb push bnd mov sub adc add iret push ljmp mov movsl lods cmp adc int3 andb add orl fnstenv inc lea popf (bad) test imull jne pop sub mov mov add mov out ja dec outsb leave ret imul sti sub add xchg (bad) and jne dec lods fdiv xor sbb mov sbb add and xchg into sbb int or dec jmp rol lahf adc pushf les sahf pusha lods shrb push cmc inc ljmp ja push mov mov mov and xchg add fisubr jne mov scas imul lret xlat stos mov je push inc cld mulb cld push xlat inc adc fcoml sbb enter faddp and enter xor push gs xor ret push adc daa (bad) (bad) and adc jns mov dec cs testl xchg (bad) push mov mov mov call cli xchg (bad) mov inc inc and push dec jl fisubl loop add xor add sub sub cs scas xchg cmp add push mov mov inc push push jecxz daa fistl jnp ja mov in call fsubrs jmp fmuls lret mov (bad) enter mov dec push out in sub pushf xor sub xor es jge dec mov push iret cmpsb repz xor out int inc xchg mov stc pop aas cli cltd push icebp shr repnz jmp mov mov jmp sub sub mov (bad) push jmp adc and lock add dec ss mov in jle pop mov jne sub fstpl lods xchg add mov pop inc xor push jle lret les iret test push pop scas lock mov (bad) bound xor pop loop jae lods ror push or cmp cmp (bad) out sub pop cmp xchg xor or inc in sub xchg ljmp imul mul in scas test aas xlat mov pop (bad) (bad) jb out loop or xor and cmp or lock push cwtl ret jno mov xchg inc cli cltd xor lods scas xor push ficomp cmp into sbb pop sub mul pop push icebp mov mov or and daa or or mulb sub (bad) aas jmp call fisub push mov cltd mov cs mov ret push dec inc movsl movsl jmp (bad) pop stos adc (bad) cltd scas cmp je push loope shr data16 sahf jne jno out mov pop xchg mov mov pop pushf stos popa add add in popf cmpsl icebp dec imul push xor popf xlat mov div push xchg (bad) (bad) ss sub add stos push nop jl xchg mov cs arpl test movsl stos out das neg or xor les imull rcr or scas jb div mov movl (bad) inc js add push xor xor push mov dec ljmp cmp dec pop xchg pop cwtl fnstenv or ljmp out dec scas dec sbb cmp add fsubrp loop mov aam sub or js pop push sahf or adc test test sar mov enter mov or mov pop lds sti neg shlb sub aad divl sub aaa cs xchg jmp pusha lret fdivrl cmp lods sub popf push mov pop ja mov scas lods pop incl call (bad) hlt push jmp sub int3 pop xchg jmp repz xor fisubl inc pop mov into test enter pop mov idivl ret push mov das pop or xchg mov pop les mov les sbb icebp cmp enter mov ljmp into cmp scas mov add sub dec pop and cli popa xlat or mov sahf daa xor mov pop mov mov dec xor aas mov push jmp mov mov mov adc push jns or shlb mov pop adc mov fsubl and mov pusha pop or push bound sub dec pop adc iret cltd sti jle call push dec inc ds js sbb xchg or dec out mov inc pop das iret push out daa nop pop xor xlat mov fcoml and fwait cs divl popa xchg add inc lea test frstor mov fadds inc in movsl jge out sub (bad) pop jae xchg xor xor jnp stc aas bound (bad) fimul pop jg and xchg insl xor jge cmp gs (bad) repz cs and jmp shrl lret sbb mov mov push test pop out sub or or inc sbb xor cmpsb pop daa inc inc adc cli pop icebp lret mov (bad) cmp dec nop or sub mov xor out push shll mov (bad) or insb pop push add and dec (bad) cmc cltd stos or sarl pop push icebp cs xor mov neg in cli outsb bound push jb xor xor sbb aad in dec mov xor sti add negb lahf pop mov mov in adc and mov in mov hlt pop jmp adc mov inc xor add mov fst ljmp mov mov xchg fnstcw or test mov rcl dec test add les stc pop test jns xor jmp push icebp add shll sbb sbb icebp add push jnp cmp fwait in xchg (bad) stc pop subb mov bound and sub rorl xor dec mov xor movsl std insb mov addr16 ffreep inc lods jge stc add out cld ljmp flds dec cmpsl movsl inc mov add cmc mov sub xchg jecxz stos stc jmp in bnd fdivs sub cwtl fldl daa or jne in and cmc lret jg inc hlt scas bound xlat lcall fist ljmp and mov mov mov push dec rolb mov mov push sub not das leave pop or adc das xor fmull sub adc or pop repz xchg lret loop xchg lods in cltd push lahf adc (bad) (bad) (bad) lock rolb stos iret in shr dec icebp lods mov in ss jmp rol mov adc movsl jo xchg lahf sub xchg std sbb (bad) jno subb mov xchg fbstp lret cmc xchg (bad) in lret (bad) hlt out xor sbb enter cmp cmp cmp push mov stc lret mov sti xchg xor or pop mov fldcw mov dec and push sub jno popf popa sti add sub daa xchg mov xor stos popa (bad) jmp vpxor jge adc sti mov dec cmp cwtl lds mov mov xchg jmp mov sbb jne loop mov dec mov jecxz rol xor xor ret pop cmp sub mov or sbb out cmc rcrl fs mov popf push jg add loop icebp lahf inc xor jle jecxz add mov pop push mov dec and add int3 (bad) jo std sub sub fmuls push pop mov inc insb out mov enter mov pop ss divl imul shrl jb (bad) out mov fstpl mov inc or rcrb cmc dec mov scas test out wrmsr lds inc jne sbb loope adc lahf (bad) add sbbb (bad) and jge adc xchg pop inc aam pop int sub cli cmp push adc sti ret xchg push dec cmp inc jg dec add jl enter or inc add add aas sub xor aad push inc jmp notb test movl push stos dec mov or out into stos dec xor inc or cs ficomp stos dec sbb fcoms mov insl cmpsb push dec pop sahf jns push mov gs lea pusha jl xchg inc les lret inc dec and les dec pushf mov lret add inc mov push pop xchg xor ljmp test pop lds sub stos jo aas or pusha pushf xor das jbe sub push and pop cwtl xchg or pushf call out pop cmpsb ret pop les fcoms pop add pop lret out jge and lret or fwait cwtl daa add (bad) in int3 outsb inc push stos imul pop (bad) hlt or add pop xchg or sahf nop dec dec mov scas ss xchg (bad) xchg dec xchg xchg insl das sub in lahf push adc nop pop adc pop fisub sub xchg xor mov subb xchg lods sub jne test lods rcl pop xor mov gs repz jmp dec cmp cwtl sub das cltd lret push (bad) jge lret adc mov inc push shrl xchg scas cmpsb loop test sti aam repnz scas mov pop and or out les cld xchg cmpsb test fnstcw mov clc xor gs movsl inc jbe fidiv lret mov inc (bad) sub lret jbe push and mov sbb adc mov mov mov lds jl,pn ljmp xchg sbb xor or and pop and loop sbbb lahf or sbb dec xchg rorb cmc cs and repnz add mov test fcompp jbe jg sub (bad) pop adc xchg fstps mov and pop add mov push push inc inc lock test xor xor add ret test aam add sub fstl insb mov jecxz js lcall ja mov inc inc (bad) jbe pop repnz push sub sahf mov shrb xchg inc sub jb mov mov in dec cmc in ss mov pop push dec fs out cmp mov pop into mov in pop stos cwtl insl idivb mov or insb sub (bad) adc or mov dec mov and fidivr jb fild into mov jne pop sub out (bad) xchg lods mov push popf rorl pushf gs adc fcompl adc xchg pop xchg push or inc adc std (bad) mov pop mov aas xlat into lock mov ret test mov xchg ss and les sti pop adc lret xor enter (bad) dec addb lret push imul mov sub xlat dec add add push sub call pop and lret es leave je or adcb daa add push int cmpsl lcall je sti scas mov (bad) sahf lahf out lods jne push cltd daa xor loop mov rorb into gs mov sub stos mov test out ja mov scas adc loop aad pop push mov fadd add xchg mov pop out push out negl fstp mov add jg sub int outsb sbb movsb sbb lods mov xor sub mov xchg ret in or cltd loop pop dec mov mov push fs enter jmp repz xlat repz (bad) shrb jne shr sub xor sub fidivl (bad) cmp jmp iret cmp jge (bad) cmpsb pop frndint dec leave jmp push outsl xchg imulb movsl test mov sub rolb dec jle push add cltd es lods shrl add dec mov xchg nop lock pop outsb int3 cltd (bad) mov (bad) fucom pop popf notl dec mov xor mov insl jb push dec jge or pop or js jmp jecxz mov mov pop ret lods push lret lret or mov testb pushf inc push out pop pop cld xor and jge push add xchg push xor lahf push or pop pop push call daa pop out ja imull dec mov push xor aad arpl std pop mov inc repnz dec stc das jmp xchg inc (bad) xchg mov sub (bad) daa (bad) cmp call and out cmp and pop or std dec jl push sub call mov sbb in pop (bad) lret mov mov imul cmp and stos sub fsubrs out xor jmp sub cmc xchg xlat add fs mov sahf add xor lock cmpsb loopne jmp into or insb insl cmp push lret adc test insb xchg pop leave scas sub icebp dec inc iret xchg or xor ja addr16 jbe,pn cmp in shl xlat ror inc sub lret add xchg lods push xchg lret ljmp xchg fildl or xchg int3 xor jecxz pop add mov imul push mov sbb xchg sub adc mov test cs cld ljmp insl mov adc cmp pop fcomi js (bad) inc push ds ret jge dec es daa jns and push lret das out cmp out jno fs mov xor or push push jnp outsb inc pop call idivl inc outsb mov out dec and push sbb leave test pop mov lret push mov out xchg push das mov rcr in mov dec mov push js dec mov push xor lea cmp rclb ljmp das jmp fild in or xchg cmpsl pop mov sub popf jle push push xchg pop lret sbb test sub lret mov icebp mov jbe inc ret xor ss int mov icebp mov lcall mov pop (bad) dec or mov and mov inc test add xlat pop push and xor daa pop cld repz aad rclb sahf dec cli push cmp icebp or mov fisubrl xor aas popa repz test mov stos cs outsl pushf cmp (bad) mov and adc ja (bad) into sub cmp movl insb sub out gs (bad) push pop scas or cld adc dec and test imul ret in sub icebp gs xlat rdtsc shrb stos lods cmp add ljmp movsl sub mov loopne mov (bad) mov mov call ljmp pop (bad) test mov iret pop sub out inc (bad) xor leave (bad) cmc inc inc daa xlat lret cmc adc cld (bad) mov push jb mov les iret jns fist xor push fisttpl xchg or mov or test sub or jo (bad) sbb xchg in (bad) nop add dec adc mov enter mov daa sub pushf sub andb iret jne mov into pop or outsb call mov pop insl and hlt jmp sub notl dec shrb and cmp mov sub mov or outsl ret adc mul add pop xchg out es sub xor mov add xchg in or imul push jge sub pop dec and lret mov (bad) mov mov push or leave add xor jmp or fs clc pop mov stc lods xchg mov test pop pop inc out push push (bad) mov xor insb fidivr dec (bad) lret cs pop sbb pop test add out mov adc fisubrl mov and inc addl add xor mov bound pop pop push or daa mov inc pop and dec sub or jmp scas mov dec ror ret mov fs and jecxz add push xor (bad) cwtl int3 lret mov xor imul sub and movsl sub push inc in cld nop movsb test dec pop mov or out rorl jae mov jp rcrb sub push and cs call jne dec lods sub shrb xchg sbb cwtl fcmovnbe cmp inc add adc mov lahf nop inc xchg (bad) scas enter mov les sti in pushf nop inc adc inc repz sbb and aas xchg idivl pop (bad) cld xchg lds push cwtl aas out mov sahf add or and inc js lock xor insl lahf cmpsl fcmovne and lahf call fistp cltd mov ds movsb inc (bad) and ds leave mov jge iret inc sub mov mov sar pop mov and sbb mov adc ret sub dec add mov push cli int3 inc sub out aaa inc mov pushf std mov mov ljmp mov mov ljmp cmp xor popa repz pop bound scas out imul mov fimul push dec jl jp jle adc mov jnp daa les leave inc fcomi xor iret inc xchg and (bad) xchg xlat mov fstpl gs leave out decl dec xlat add test in mov pop insb scas pop add repz cmc gs ret push popa inc pop fs leave popf int3 leave pop into mov or (bad) sbb pop xchg notl or sub or mov xor cs sarb lock pushf repnz and mov jmp fstl dec aaa sti inc sti lds jg rcll pop dec fisttpll fildl repnz les or lods ljmp daa (bad) or leave ja loope mov (bad) push inc ret sub imul adc stos cmc outsl arpl divb (bad) (bad) and out dec lods sahf mov adc mov xor shll add jp cmp adc push sti pushf and jns popa mov and or jle call xchg call sub push sbb mov lods cmp jmp or dec inc rclb push push jae xor popf loopne xor dec sbb push and push mov pop sub xor sbb adc push sbb mov lret std dec xorb sbb sbb mov ljmp fcmovbe test jae cli outsl jecxz rorb sub xor mov adc mov stos and or mul inc push or add or fisttpll pop scas cld dec mov inc test mov fwait hlt pushf clc inc movsb pop mov in push jle dec imul (bad) loope sub mov pop outsb (bad) dec cmpb addr16 mov test lea das (bad) mov ret test sub or lret adc pop and xlat lcall icebp xchg add mov lcall xchg cmp hlt imull pop cltd jnp ds mov adc and xor or xchg ja xor adc cmpsb into push divl xor sbb iret test xor mov shr fs scas fldenv dec jl inc (bad) movsb sub push pop push mov mov rorl imul clc xor adc mov and or sub dec loop mov mov xlat sub aaa out (bad) bound (bad) icebp adc dec cld movsb mov sti lea test cmp or or add mov test pushf add xor fucom add cmp adc inc ret add jecxz es mov pop int3 cld das ds stc xchg inc xor addl daa pop pop in ret mov shrl shlb and mov (bad) or mov sub (bad) and xor sbb mov lahf xor leave jp jo xor nop mov mov dec xchg sub rcll pcmpgtw cmp mov lock mov outsl adc loopne jmp jae mov call in dec pop jns addr16 and imul outsb dec add sub iret add mov notl fildl lret mov int and and fiadd add repz lahf xchg leave sub xchg int3 push adc mov mov stos loop mov fcoms jl pusha and inc and xor fsubs push scas or adcb inc dec push insl loop divl cltd mov lret or ds mov cli pop cltd or jne loopne sbb push push adc or mov jecxz (bad) inc xchg xchg sti and xchg icebp xor mov rorl mov les aas movsl (bad) push and ljmp shl imul movsb fs cwtl inc into movsl iret mov pop adc xlat mov mov dec std (bad) shr xor jbe mov xchg adc or out pop enter and leave (bad) sub test mov ret push dec pop call shrb std pop ror insb icebp repz xor lret push (bad) jbe mov mov cmp shrl sarb sbb inc mov mov sub mov dec fist or mov pop xchg es fstl and cmpsl (bad) jmp lods jmp or mov fisub (bad) into inc and pop ds pop leave jb jp mov jae adc (bad) xchg push lahf insb je repz std movsb testb jbe push mov jns inc add rcll xchg or loopne sub mov outsl loop xchg ss stc sub sti lds imulb dec (bad) mov outsb in ds lahf (bad) aaa lea mov inc call stos je loop add sbb sahf imul jge js xor push xchg sub sbb sub hlt mov rcrb (bad) dec nop dec pop and mov ja sahf mov dec ret mov xchg decl mov mov daa icebp inc popf pushf or pop loope lret fistp jg icebp jns inc or push iret movsb cmpsl pop in sahf inc jmp ss outsb (bad) test dec scas sub cmp (bad) daa jno mov mov xor jmp fstps dec fdivrp dec lret mov sub loope adc adc (bad) icebp jnp dec pop jmp fiadd and scas lret cld adc and stos lret in sbb adc cld jbe iret stos cwtl xchg or cmp fmuls js and mov mov sar stos inc shrl ret mov pop sub in outsb mov push xchg imul mov std push ficom xchg push inc test or cmp sub dec ljmp dec (bad) arpl in cld lods movsl xor mov and ret pop add dec jne push mov fisttp jne xchg pushf mov in icebp mov add mov push ret or sub pop shll sti mov push adc mov push lods dec mov into sbb repnz lods inc das notb inc daa add jno xchg ret add ljmp xor test mov sub rorl dec data16 (bad) dec out and dec aad scas jge rcrb clc pop add rcll push rorb (bad) ljmp mov into xor pop cli les mov or ljmp sarl pop outsb mov aas xor enter clc rorl or je in mov dec lods int cli sub popf xchg jge (bad) sub ret mov inc and or xchg (bad) loopne out pop loopne jne mov scas loop push pop (bad) gs mov idivb and out call movsl dec or subb icebp shll dec test insb pop mov or push fidivl pop xchg js fistp jns pop repz xchg push cwtl mov mov je push push les rol cmp les lret xor cwtl mov xchg adc lahf clc xor adc and and cli or fsubs cmp imul enter cmp push jno dec jge fnstcw dec lock add nop mov dec and push xchg fmull loope inc aad jb test jbe push or and outsb xor lret clc loope sub jmp xor lret cmpsl jle inc popa pop mov int cmc icebp jb sar iret xor mov adc push mov xor test inc iret add mov sbb inc and pop lcall mov mov dec and fcom loopne cli add sbb sbb (bad) push gs cmpsl xor arpl pop pop push mov mov inc jnp outsl pop pop mov mov or std test shr divl xchg gs xor mov cmp in ds push adc push add or jbe and int3 ret xlat sarl inc sub leave js cmp push sub jmp sub sub sub sbb and add repnz xchg out push into add stos push pop lods xchg or arpl movsl mov sub sub movsb (bad) in jb xchg scas icebp inc insb ja and sub dec idiv or mov jmp mov xchg mov sub mov jecxz push mov cmc icebp insb fs div loopne inc test mov clc jns lret pop mov in sti addr16 xlat mov lcall stos cli push mov cltd shrb mov cmp sub outsl inc mov pop test dec enter adc shlb lods dec sub fisubr fistpll aam pop scas xor scas in push test add std stos lods dec mov add idivb (bad) repz adc add es popa daa add jne adc hlt xor idivl repz adc flds rorl inc push push ret pop je cld pop loop adc das jmp sub loope xor sbb add mov adc sub sub or fisttp ret sub jl push jo loope add dec mov lock push out mov sub xor sub fldenv out sub rol cmpsl subb aaa pop imull adc sub mov gs clc add repz pand das cmpsl push bnd jno push out cld push mov fsts and ret xor xchg xor pop out fsts xor call scas sub xchg scas mov lock dec add lret rcr outsl sub and add mov dec ret pop mov mov xor dec sbb push scas xchg xor sub (bad) cmp lret or mov outsb mov dec lds dec repz push bound and jge push jmp out lahf jle push sub xchg shll adc stos pushf cld ret pop pop xor out xor pop mov shll movsl inc sub stos inc testl movsb mov jle clc jge icebp and cmp mov pop popa cmpsl push and sbb shlw jmp scas push sbb xrstors dec cs in lret adc sbb jge test fbld call in movsl push inc roll into mov or mov dec mov jmp or mov inc mov fnstenv ret adc mov mov into cld sbb clc in cli test (bad) not movsl in pusha xor xchg adc xchg inc push mov out mov mul pop aam stos lret jl push sti sub and add aaa (bad) (bad) icebp dec iret lret push fimul (bad) jmp lahf out cmp jo cmp xor aaa popl dec pop xlat mov jmp and (bad) mov fisttpl pop mov mov mov mov leave std jecxz mov cli xor mov dec lods cmpsb and sub cmpb xor clc xchg divl add or jne aad lret test adc jne bound clc xchg push nop dec call push repnz sbb test cmp mov inc lcall sub (bad) outsb loop xchg call testl xchg pop inc push fistl outsl std gs xorb lock xchg lret xchg cmp adc sbb dec push or mov das dec inc xor scas lret sub nop and add push sub cwtl jnp xchg cmpsl or int3 fwait std adc xchg lods and sub mov mov add xor add not mov rcl icebp sub pop or xchg pop imul imull clc mov inc cmp dec shlb mov jp les out push mov dec addb and das mov add or aas ss insb shr and xor add jno lret inc xchg fistpll jg xchg push or xor jecxz adc or frstor mov mov ret arpl fnstenv stos hlt pop out cmp rep movsb jae js cmp sub (bad) xor cltd push aas test (bad) ja ds bound daa sarl add imul int mov dec xchg pop bound negl daa fsubs xor fdivrl jmp dec lock push imul mov lret or jle shl cmp clc insl pop jmp outsl rcrl fs add push or or clc lret xchg inc out mov minps sub cmpsb movsl pop inc andl push or enter maxps mov pop lods mov leave add int sub lock mov mov gs lds jb hlt adc (bad) cmp (bad) lahf or xor pop pop jmp xchg and cmp add test mov out pop pushfw dec pop aaa testb sbb pop icebp mov dec jmp in lahf jbe leave stc push sbb call mov imulb xor stc add pusha dec and sub mov jno gs mov add mov lret es sbb int3 addl loop ljmp cmpsl lock xor lcallw je adc out leave je call mov hlt scas xor sub cmp xor jns adc and or leave adc inc icebp scas (bad) mov mull mov sub fmuls js dec (bad) push bnd inc test je (bad) out (bad) xchg icebp add mov in mov popf mov pusha lret aas add lods push sti push push pop rcll add xchg int3 pop ds bound or dec sbb inc or xor xor loope insl xchg (bad) test jmp (bad) shr mov lret out les mov and jbe mov lds add inc insb lret loop pushf repz loope add jns push cli xor fdivs push leave jg js pop gs mov sbb mov das rcr lcall mov stc adc xor push cli add pushf fsubl xor movsl adc xchg lea mov pop sbb adc and sahf or cmp faddl xor scas push xchg ljmp sub mov in popf imul add iret xor out mov andb stos lcall mov jmp imulb popf cs inc add cli jmp icebp mov adc mov or dec rcr addr16 ror aaa sbb xor push push xchg out cmp pop adc jnp adc mov push pop daa sti mov iret lahf je jb popf xchg gs movl xchg scas fs stc mov jmp jbe mov imul in loope adc dec leave mov xor jge push or xor mov mov repz std gs cmpsl sti mov sbb pusha dec pop pop mov mov dec mov dec scas fsubrs pop or mov ja repnz repnz sahf das lock mov clc sub add pop aas push shr fsubrl incb rclb add dec pop fidivrl sbb jns xchg test (bad) rorl dec mov test out in pop dec or sub or add mov add or pushl inc adc and cmpsb in mov push push (bad) rclb (bad) leave sbb sbb xor cltd dec sub aad mov imul xlat cli add repnz lea xchg test mov mov push in and sar or iret cmp jne sti cmpsb ss adc out dec add insb lods mov shrb pop xchg clc (bad) adc into jmp loop mov sbb in cmp repnz jmp call loopne sub xchg xchg adcl loop sbbl cli imul push cmp mov mov mov xchg fdivr fs stos fsubrs out out daa xchg mov sahf int3 xor in jno or cmc ss pop and loop add sti cmp fidivl cmc and or div jecxz mov scas mov sbb lods adcl aas fld pop out sarb mov ljmp cmc or leave test or aad cmp int3 sub pushl mov cmp push ja or xchg repnz lods int3 mov add (bad) ds push cmp or and testl or or cwtl (bad) outsl and or xor mov xchg sub mov mov mov adc dec mov loope lret das imul (bad) cmc les mov sub pusha sub sub adc and test iret or (bad) jp pop sbb sub xchg (bad) (bad) cld mov adc xchg xor sub imul ret pop (bad) mov sub movsl and add add imul xchg scas sub aaa mov dec add sbb popf mov aaa sub leave jle fimul mov bound push pop xchg shr jnp in lds sub int movsl in xlat xchg pusha (bad) icebp xor and dec xor and sbb xor dec inc cmp fdiv push push clc mov leave add jge xlat mov data16 push into cli popa shr outsb jne cli repz popa inc add push das jmp pop dec popa enter fistl pop hlt lcall xchg into mov imul cmp pushf jmp jno lret les mov or push repz jmp jno ret ja ds jbe in out sub in push test push sub mov pop fs push push inc fldenv or aam (bad) ljmp sub shrl jne mov push mov es or adc leave ljmp jne adc mov pop sub addr16 lock or sti or popa inc cwtl and adc sub (bad) push dec or (bad) lock movsl push cmc and mov roll cs inc incb test or bound xlat jne mov daa (bad) sbb sbb cmpsb mov cmp pop cld jmp pop or aad out mov jns rclb sarb or pop xchg and mov jmp xor ret and fsubl scas bound add add jl mov dec nop mov add iret into push lock lock mov test sti out jmp jmp es rcrb mov das pop dec lds leave sbb pop popa cmp out xchg xchg and cmp xor movzbl xchg cmp rol pop cmc (bad) stos ljmp push scas jmp in xor mov pop dec (bad) dec inc ja push xor pop dec pop mov lcall jno dec sub mov sbb pop jno fs and cmp pop into jecxz loope sub out jno fimull iret ja rclb jmp sub mov and dec out jne mov lea jmp dec push mov dec add pushl pop popf rorb mov popa inc cmp jns add sub jg loopne sbb scas imulb sub jmp cmpsl call dec and cmp cmp loop add fnstenv das repnz icebp idivb xor (bad) call mov jl bound icebp push xor adc pop push lahf int3 gs push xchg xchg (bad) cmpsb add pop xor add sti (bad) cmp push jecxz js sub pop enter dec jmp xchg mov add pop lahf jl shlb out or cltd popl cmp in inc das add push mov (bad) or lods dec mov sahf (bad) push jmp leave bound stc repz sbb sub xchg je dec jne inc and adc and enter into mov jp (bad) xor xor das adc fiadd pop adc mov outsb movb push add stos mov leave cli mov jle push (bad) inc leave aad mov cmp rcr mulb movsl pop inc pop mov sub roll (bad) aaa ss pusha or sti xor xchg rcll xor mov sahf and movsl pop xchg dec cwtl jmp cmp pop sub imul cmp cld pop inc (bad) mov shlb shrl stc rorl scas xchg mov push jne mov mov test in mov add adc mov xor ja sbb jmp hlt fldenv iret test xor stos or add mov jmp sti mov int3 divl addl dec jbe pusha add imulb dec or jg or pop or mov int pop sar fnsave mov and lock mov and ss cltd sahf jnp cmpsb outsb xchg lods push rol pop out mov sub or mov out (bad) lret out sti xchg das pusha pop jmp movsb xor icebp xchg leave jle imul das xor mov mov movl data16 sbb ljmp pop pop push and jmp xchg stc loope and mov pop push dec div cmp sub cmp enter add mov imul jl addr16 stc aam imul mov (bad) xor jecxz lods mov sub cwtl or fisttpl std cltd mov ret (bad) stc in dec fst mov mov dec je xorl movsl jp orl (bad) mov jne inc imul pushf je lods cltd xchg fs dec add cmc fwait push dec (bad) popf sub roll xor xor pop pop jne movsl shr mov lret sar xchg xor ja add xor mov xchg repz jne lods sbb add mov rcr shr jno mov aaa fisttpll inc fcmove js fist mov dec push ljmp mov add aam stos jne fldl lret xor fistp pop ds mov mov shlb cs pushf scas out or movsl and mov push cmp jge push movsb mov dec adc xlat dec rcll data16 dec pop mov sub out dec int cmp xlat jmp cmpsb out xor sub xchg push sahf jae jle mov out repz aas pop xor call add lcall jmp mov shll enter add mov fdivrs adc lahf pop cltd jne inc aas fisubl sub mov inc mov xor nop xchg pop adc ret repz dec scas push jbe sbb push cwtl stos xor dec pop loope sub mov fldenv bound cmp test adc mov std (bad) jno and mov ljmp pop add add pop push push push mov imul xchg insl jns clc mov out or repnz rorb icebp or sub mov imul movsl shr fs ja pop call outsb inc add adc push mov loope cmp out push inc add stos lcall dec popa icebp or ja push daa dec loope lods push leave enter fadd iret mov enter push clc dec daa cmp xchg ds xor clc xchg notb xor and xor cmp popf loope icebp imul fdivl adc repnz or and (bad) sub test sub fstps repnz xor jno inc repz and add pop inc loop daa or fstpl ficomp push das sub (bad) mov loopne shll mov jg sbb or sbb pop in test loopne std insb sub icebp sub xchg adc (bad) pop scas xor negb rcll lret cmpl lods xor pop sbb sbb mov sub adc mov sbb inc lcall inc mov xor sub cmpsl sub and enter lock out into jb shll push imulb sub sahf lret or (bad) cltd lcall aad push xor push and (bad) mov aaa popf ja mov test xchg jne jecxz jl pop or jns pop fwait out nop push or mov ret sahf gs loop xor bound push adc mov jecxz fdivl pop xchg fpatan mov lahf (bad) sub mov rcrb sub data16 fldcw outsl xor cmp flds jo cmc int3 dec pop mov fwait jg popf jnp shlb mov iret mov daa pop sbb mov push fidiv addr16 out push or xchg push je iret notb jle inc out push jb dec pop loope enter mov sub xchg add mov stos enter add (bad) mov fcomip pop imul js pop xchg mov scas push sub mov aam sbb or inc out lds mov push pop mov jmp imul jl push jns pop fs lea (bad) lret sub jmp jmp xor fucom mov es (bad) lret xlat jae movsl sbb fcmovnb cmp sub sub mov mov add add mov xlat in cwtl and xorb mov push lret add outsl cltd cmp lds movsl pop in aaa test mov cmp mov in mov or pop xor mov jg xor das push dec or push dec mov cmp or clc mov sti dec dec icebp lods cwtl dec sub pop and (bad) (bad) mov jbe ret xlat fstps push and je and xchg xchg sub and inc loop push pushf push add out add lock sarl cmpsb and out mov adc stc add cmp pop push mov push add fldenv into (bad) sub dec cltd mov negb adc into in xor cmpsl ficom sub scas pusha pop clc xor xchg test and adc fstpl lret aad pop stos loopne mov outsb dec lds sub lcall cltd xcrypt-cbc cmpsl adc pop add lahf push adc dec sahf lahf rclb popa lods mov (bad) jns mov in xchg xchg pop sbb scas rcr ja loop in incl insb jno or pop imul fcoml negb scas push dec je fstl or clc in or sbb mov push scas ret add test jge xchg sub les js add xchg (bad) mov test lcall push sbb xor adc rorb (bad) sub xchg je addr16 pop mov out xor push pop mov pop icebp fiadd (bad) jecxz jno dec jle je sub sbb idivb inc and inc sarb stos popa (bad) xor cmp and dec rorb inc push rclb xor js xchg jns sar lret and add bound loopne hlt enter out mov pop add push fistpll sti imul mov jo mov imul fidivrl call scas out mov imul fs insl dec (bad) fadds or (bad) xor hlt fwait push loop lods mov (bad) stc pop pop lcall popf jo aam in movsb test and inc dec (bad) jmp pushl leave cltd cmp sub sub stos rclb or fcoms xor outsb in lea add aad aam jl pop hlt mov pop les push adc mov mov sti mov imull and xor and sub ret mov movsl jnp into mov repz add aaa or push sub das mov jg pop sahf sub clc sub lods stc icebp mov das mov fcoms subb mov or gs cmp ja (bad) ja cmp dec mov ljmp mov push lahf ret pop sub enter jmp popf xchg jae or ss jne scas xor lret mov stc (bad) lods inc jg or dec in pushl arpl mov stos data16 xchg inc in outsb adc lret leave mov int3 xchg dec ret fisubr mov push push mov scas movsb ffreep add dec mov xor out mov jecxz or xlat pop push roll jmp xchg in dec mov cli cmp rorb jae push mov sub or jg gs mulb ret adc cmp pop cmp pop jae gs add ret pop mov popf (bad) cli aad jns xlat out lods (bad) pop jp jns imul into pop fs out cltd loopne in sub mov icebp hlt (bad) jae inc jmp sub stc clc mov aad pop and nop mov inc mov mov mov mov xor push add mov xchg add mov xor data16 scas notl and daa fisttpll sub clc xor les cli movsb out int3 jmp cwtl xor push inc mov cld push imul lea sub sbb push dec mov push test lcall or push into imul outsl decl je mov aad fisttpll je adc gs ljmp out in clc mov cmpsl outsl daa into call add lahf repz mov notb jl leave ds fldlg2 jmp into ljmp enter js jecxz sub xchg gs std add (bad) pop rclb idivb das loope loop mov add mov xchg adc cmp jg mov mov ljmp push mov shrl fs ja das adc mov pusha out pop inc icebp arpl (bad) imul in xchg mov test or add rorb mov out pop sbb arpl lock jmp or std xchg cmpsl xchg jecxz inc movsl push mov pop sub mov or xor and or add pop ja push (bad) (bad) movb xchg xchg clc int out jge adc sbb sub mov rolb push pop lret clc add jbe push cmc sbb mov mov (bad) jmp xor add (bad) (bad) push cmp call dec mov jnp stc sbb sbb dec imul call (bad) rcll push stos testb cli gs scas jno add jbe js iret ret aam mov adc mov testb shll push aad cltd jecxz in mov (bad) xor or sub jle pop icebp xor bound stos js das iret je jno push data16 push sbb or dec xchg (bad) subl dec arpl fisubr enter (bad) xor mov sbb mov fnstsw add test cwtl push negb add jb inc mov or and mov sub call cwtl mov mov mov and pop pop sbb leave int3 or movsl pop and ret ljmp push mov jno cmpsl pop call icebp scas mov pop ret rolb in mov xchg push mov xor xchg push insl inc outsb loop nop mov cmc stc cltd inc xor (bad) sti mov ljmp or dec (bad) loop mov pop movsb outsb cld xchg cwtl and dec inc notl dec mov mov mov add iret dec sub push sub cwtl leave ror pop dec add jbe xor fldcw pop insb xor lret scas fisubrl adc add std dec aam (bad) xlat jmp (bad) es leave and xor adc mov adc jg dec shlb loope into rcrb jp pop (bad) mov xchg or outsb push inc add push mov jbe inc data16 xor push in (bad) xchg sti (bad) repnz jne cltd repz mov idivl dec aam and pop gs lret mov out popf sbb xlat mov sub cli sub xchg test aaa push ljmp in sahf jmp sbb cs mov dec insb (bad) ss add inc dec jl andl inc sub xor mov mov xchg hlt or add add pop mov xchg cmc adc test jg icebp into ja sub enter cmp hlt test add jno movsl pop push cli hlt inc mov leave and inc cltd jns mov mov or adc sub cmp add je stos mov sub cmp repnz test dec popf (bad) xor dec jle sub xlat lret rorl fsts lret shrb xor ja aad jmp repz out call or sub sub push pop out pop cld pop pop fwait (bad) dec xor jmp inc fisubrl sub and xor sbb enter fdivrs or pop fnstenv cmp mull add mov add dec or mov jnp aaa cmpsb xchg fadds notw arpl and mov dec dec rclb sub int3 lahf (bad) dec push sub outsb les lahf lds into cmpsl jg xor mov sbb loop xor xor jg mov push stos jmp push add cmp xchg into out jmp jp jb cmp idivb popf jmp (bad) push mov outsb sub push add dec lcall jbe rcll movb adc out and jns mov repnz in rcl pop aas call dec into in sub and sbb cli push xor push js dec push cltd lahf scas push dec rcrb lods pop and mov mov fdiv fistpl mov mov pop jle loopne insb xchg mov lods scas mov les aam mov cmp or rorb push lret (bad) push jo and lret xchg jno test push push loop push fimul repnz cmp mov cmp add repnz pop aam push add pop jmp addr16 pushf jmp fcmovb lds sub or ljmp repnz repz inc cwtl push xlat pop sub jmp mov push das sub mov mov mov push loop or in idivl ds dec xchg out bound push lds lret call pop flds sub loope sub ficoml lcall mov (bad) imul sub adc xchg xor jl and jne xlat push dec in add stc mov das ret pop jne sbb pop jle aad pop or lret stos jge xchg jbe and add std mov test fimull sbb loope push lret mov mov or andl push inc add add cmp (bad) icebp pop jo,pn addb cmpsb jmp into das negl pop inc out sub inc xor pop bswap ja xlat dec iret stos fldcw xchg ss lods jle (bad) cmp push and cs lods mov push mov dec push xor jmp mov xlat add push cwtl cmp mov imul cmp icebp cmp insl js out sub aad sub pop clc in cmpsb and ds pop push ja into mov repnz adc test call xor data16 or aaa adc sub adc mov lods jno mov cmp fisubrl call pop pop cmc stc and mov xchg sbb sub pop mov lahf inc push mov repz pop sub cli fistp js add sub fmulp lret push out daa (bad) xor ja aaa shll dec into cli mov jno (bad) sbb jg call adc adc js fwait test mov pop je (bad) movsl sar and fcoml pop or inc mov mov fadd mov inc mov ret test loope xor dec mov movzwl dec xor pop je mov dec lods addl and addr16 xchg repz jno pop jne jne lds add adc xor enter xchg scas sub mov add rclb xchg hlt cli test mov xchg fwait jle mov xlat sub lret repz (bad) pop lret mov or inc jmp (bad) bnd pop out lods jae mov iret xor and faddp and xchg leave idivb dec (bad) das mov xchg mov out movsl jmp pop mov or jae push mov (bad) inc div jns dec mov hlt (bad) or inc pop ret pop pop jl lcall sub add outsb fadds xchg inc push dec fs mov pop outsl sbb pushl aad jecxz xchg add mov in mov mov popf jmp mov xchg xchg mov sub mov sbb repnz mov test (bad) ficomp add aad (bad) sub mov xor xor lcall das inc adc movsl cld dec jb or jns mov ljmp lds pushf mov cwtl lds inc leave movsb or sbb out dec in pushl vmaxsd daa lcall repz jg stos mov inc jbe add cs pop mov jmp sbb sti sub (bad) inc xor pop fnop jecxz xchg stc stos dec aam pop or sub dec ss icebp loop sub mov push rclb adc scas lret call movsl adc sub div sbb sbb sub xor add mov cmp xchg (bad) sahf mov jg sbb nop mov add movsl shr das sub int dec inc dec mov xchg cld aam push ljmp xor xchg ret cli add shl push cld and in and cwtl sub inc xchg and xor xlat add or outsl fdivl hlt test clc mov loop in and or pushf (bad) mov hlt lds push out out dec in inc mov and cmc sarl sub jecxz mov subb fildl jmp loope jle jb ret pop adc cmpsl sbb inc pop mov pop outsb fidivr (bad) not sub ljmp sub or repz cmpsl notb fmull gs and jbe adc out mov jl push fistpll sub push push add cmpsl sub mov rorb push js or pop cmp rol jne xor shll ficom (bad) sub lea fisubrl les (bad) cmp mov call jo rcr stos cmpsl xchg pop jmp sub push jne orl ja jb and or setl xor aas imul es and sub mov rol (bad) out or cld rcr es imul or xchg adc cmpsb int and mov xlat lds xchg lret or adc sub rcr je out pop mov (bad) xchg jae sub (bad) pop pop cmp jmp mov inc (bad) daa loop or call test mov notb sub aas push mov adc xchg dec scas xor outsb mov sub xor mov gs sub mov (bad) jmp shlb test push adc sub adc dec mov cmc (bad) jnp hlt ret pop call rol pop mov fistp mov push add add jo or xchg fcos xor and pop (bad) xor fucom les mov popf fist sbb and dec leave bound roll cmp rol jmp or or sbb fwait add clc notl out push xchg fsubrs adc mov cmp pop mov mov cmp sahf movsb lods pushf rcll inc out (bad) loope aaa xchg lods sbb out and iret (bad) inc dec xor shrl adc insb xlat pop ljmp xchg adc mov imul loop les ret mov sbb call cmp nop dec mov mov pop divb pop push cli ljmp or sub jnp sub (bad) sbb enter xchg sub in cmp add sbb loop,pt xchg mov daa jmp push test mov sub sub mov into sbb xchg arpl pop cs dec sub scas fdivrs fwait xchg fsubs push push fsubl shl imul cltd (bad) out lahf pop sbb sub arpl (bad) testl jmp adc cld test sbb cmp popf cld enter jmp js cwtl add popa or divl xlat pop lock push test lods in pop std mov push mov subb xchg add test xor inc add cmp mov adc cwtl pushf mov addr16 imul fiaddl mov sub pop push loop pop sub cmp pop xor jmp in xor ljmp (bad) clc pop xchg or mov mov lock dec add xor imul jge mov jp leave fist dec loop mov push mov and repz push xor adc lret andb sub xor jmp mov xor jmp test cmp sarb xor or ljmp call mov sbb mov cld ja out div mov test rorl sahf inc or test jge mov mov iret scas lret mov cmpsl mov push movsl pop add clc outsb lds and out dec mov add scas les lcall test push scas sub mov mov jle or test dec ljmp push fsubrl inc out mov leave in mov and or ret push in add mov (bad) and pop jmp je adc das aaa test (bad) pop out ljmp xor xchg lods out rcll mov repz or mov sub fsubl ja cmpsl xchg jae daa mov cwtl lret notl xchg pop mov sarb or inc test incb mov xor mov daa jmp repz (bad) iret scas (bad) mov fs dec aas sub adc aas test mov push dec das in pop xchg je push (bad) sub sub popa cmp push rcrb jb add or test mov mov push sti pop xor push imul sub cmp int3 pop sub mov loope lods xchg cli xor and int3 je mov xchg stc mov inc dec jno pop test ljmp fldcw or rclb cli add and stos (bad) movsl push divl and sub mov xchg and dec push add pop pop loop iret mov and pushf xor inc mov enter inc gs fsubs test pop std dec jne insl dec inc mov scas xchg push push cmpsb push int3 xchg das int3 outsl push dec or nop scas pop lret imul dec xchg dec (bad) sub aad mov mov lret add pop out adc push lret cltd pop out mov mov lret mov out add pop pop ljmp dec (bad) mov or lret push mov adc sub adc bnd mov loope xchg leave pop add fimul mov sar cwtl or ja cmc xchg push dec sub pop mov imul mov or mov xchg (bad) xor out inc outsb daa rep adc push in push icebp add sub dec fidiv adc mov jns sub push adc xchg into mov mov lods lods mov movsb sti mov or cmc inc ret (bad) icebp sbb adc mov pushf push cmp movsb pop inc xchg add mov lahf in xor jge xchg notl xchg xorb in mov nop fmul add (bad) mov (bad) mov shrl xor jne shl push mov pusha or adc std enter sub repz cltd xchg mov roll pop jge sbb pop or xchg sahf pop (bad) mov pop or ret sbb add push icebp mov or rcrb scas lock pop jp mov (bad) push popa mov cmp jg movzbl lret ret lods jbe push stos push fwait push pop idivb adc mov fcoms aad das and pop add adc ds sub (bad) sub popf pop mov shlb comiss jecxz mov push outsb xor ds mov in lret int3 cld cmpsl xlat test mov mov fmuls push (bad) idiv dec scas jno mov leave sbb fiaddl and jl jnp lods pop sti jo hlt mov pusha gs add adc cld shlb div gs in mov fisubrl insb cs dec fdivrl xchg ret or (bad) and and insl fwait inc test fildl sarb fwait sbb rolb daa enter jb lcall add scas bound out pop cld (bad) pop add mov iret fdivs dec and jns inc add and lcall out dec (bad) lea mov jnp iret or outsb xor (bad) cmc adc sub xlat inc xchg jmp jae out sbb mov shl adc pushl dec pusha mov or adc dec mov int3 mov iret sub cmp adc mov (bad) movsl mov sub hlt mov sbb pop xlat mov fwait roll sbb pop add xor and mov lcall pop mov xchg (bad) xchg jbe out in mov xchg ret shlb sbb pop ljmp imull outsl into sub out sub push mov sbb gs and dec adc mov in das pop andl mov sti shlb leave pop sbb and test mov fstpt cs jle jb mov in xchg dec call pop idiv xor scas std bound xlat mov push je bound (bad) (bad) fisubrl add cmc mov stos lret out cld stc lahf insb ret loop or call popf leave fadds cmp and mov into stos cmpsl and (bad) (bad) out outsb adc mov dec jp sbb pop das out cmp lret cmp sub lods push sbb pop aas xor stos loop fcmovb cmc lds xor int jle je mov mov cltd (bad) or data16 sub mov or pushf out cmp out je out mov ja add xor outsb repnz cli cmp jmp in adc adc mov mov and fldcw xor rcll sub adc xchg fsts movsb call sub dec xor cmpsb in and mov inc cwtl lcall xor jne jecxz sub ror dec jge arpl stc add ja scas iret dec cmp push sbb mov push xor add (bad) and ds mov jl mov sti test mov mov push stos ret sub mov add xor cmc ljmp cmp into dec cli gs ljmp aad cltd sbb adc xchg ret imull dec shrb out pop ret sub lds ret pop adc enter adc mov (bad) pop lock bound xor xor cltd mov lds scas dec imul (bad) cmpsl js call pop mov movsl testl ret and stos test mov cwtl jle xchg enter xchg repz dec movsb fsubrl test (bad) mov ss inc dec sub pop jo or and icebp cs lock in fsubs mov cmp and lcall xor add cmpsl mov addr16 cmc scas mov add mov or jge mov icebp mov pop loope mov dec lret xchg daa dec jmp pop jecxz shl stos repz cmp stc lret (bad) out int cs aaa pop adc cmp hlt push movsl test fstpl add add and nop xlat jno dec inc sbb pop add sub dec cld pop push insb lea mov movsl pop sbb mov push ret mov and cmpsb and push jnp or sahf sar dec lcallw adcl xchg mov lahf mov cmc adcl jne dec cwtl cli lret push dec scas sbb sub scas test shlb and xchg sub sub cld sbb loopne leave xchg mov aam or cmp in mov mov sub pop aad jmp popa jl popa or lods rcrl xchg push cwtl mov xor ja dec imul (bad) ljmp dec scas lret test sub mov jno mov sub sub and (bad) or add scas (bad) mov fistpl mov jl add shr jae dec loop (bad) loopne adc sub mov sub mov xchg xor fwait sbb mov ja fistpl loop (bad) mov das or sub cld fisub xor stos jecxz daa or out enter imul xchg mov into lret xor fldcw xchg push push mov pop and mov cwtl push mov jecxz loope or xlat scas enter or jns std jae pop stos sub ja xor add xchg fnsave loopne shll in clc out add mov (bad) sub cmp (bad) cld inc xor sbb enter mov push testl in pushf movsl or lahf and in rolb sti cmpsl mov add cs enter dec add (bad) out mov mov lods mov out jno or pop or stc jne mov subl cmp sub pushf lcall fisub sub inc pushf (bad) repz sub arpl es jo dec mov jg call cmp jne push push fimul push outsb imul sub and rorb cld push into (bad) lea dec popa and xchg fwait xorl mov imul lock cmp add mov pushf jb add inc sbb mov adc popf push aaa data16 and imul sub mov and sub sub sbb mov add je sub test xor scas sub cmc aas loope outsb lods mov mov sub sub and xor lret mov leave test xlat dec je adc clc push sar push xchg stos enter movsl sub fld in rcll icebp ljmp movsb mov cmp das or sbb inc and in pop pushf pop sub (bad) negb lret mov push mov (bad) pop xchg fwait adc dec dec clc sti pop ret call sub xlat test inc cmpsl xlat in or push pop sbb fildll and cmp ljmp lods loope lock stos sub xchg lock lahf stc pop dec cwtl xor clc das xor popa out or das icebp mov mov dec or mov stc popa or mov mov mov inc pop (bad) xor mov sbb or mov pop inc loope lret rolb sub xchg mov inc inc lock and loop adc movsl jbe xchg je divl ret test mov ljmp mov mov cmp mov jns lods fwait xor lcall jecxz push dec daa push popf push add cmc fnstenv add jmp cmp clc jne mov lahf xor (bad) mov (bad) leave xchg cltd push and (bad) mov (bad) fsubrs loopne ficomp adc pop iret ja cmpsl lock cld mov in out clc int or sub clc and sahf sub cs mov mov ja leave decb lahf fsubl pop inc test push test je int3 in and or lods popf xlat ss and in loop leave add (bad) popf lock fnstenv or fidivrl xor pushf sub outsl mov (bad) xor scas mov jae out fmull pop repnz add (bad) insb movsl popf fcomps xchg (bad) mov rcpps sti cmp cwtl jne dec es hlt jmp testb (bad) pop pop cmp andl cltd push in insl int push pop cltd hlt xchg dec fiadd hlt and push xor inc (bad) jg dec xor xchg je iret shlb mov xor cmpsl lock lds sbbb out sub xor xchg add mov cmc push mov cmpsb enter dec mov xchg (bad) pop and sub in and fist mov xlat push xchg sbb and dec jo mov dec jmp lret cli sbb leave sahf rcll mov pop and add sub insb daa mov les dec mov (bad) mov (bad) nop movsl (bad) ja fs fildll shrl pop sub push leave testl out (bad) fwait dec jns cmpsl (bad) xor cs xlat decl xchg (bad) int3 pop out adcb xor push push sub pop mov push sbb push icebp xor movsl mov xchg and push (bad) je loopne icebp mov pop aam mov fstpl and das aad cmpsb xlat in das pop iret add or jmp aaa cmp sub pop je rorl ret test push loop jne leave jb xchg cld out adc dec and sub push push sub into pushf lahf or mov pop mov (bad) sbb and cmp adc xchg in stc mov aaa mov add mov cmp out dec mov and stos mov ret dec cmp jl mov pop or cli or outsb (bad) mov ljmp push int3 mov sub sub bound ret hlt inc imul dec test cld push clc xor jmp cmp imul mov push pop imul xchg pop adc repz add mov mov mov xlat fildl mov push sahf xchg pop hlt jecxz dec jmp xchg add and pushf sub pop iret or rclb fistpll movsl jg and mov or adc and pushf in in lcall test adc fsubrl and xchg je repnz imulb lods sar data16 rolb lds cmc add inc cli mov inc add mov adc and lds sub test mov icebp jmp hlt cmc out jb sub sub xor adc ja imul cmp pop xor xchg fld cmp stc adc sbb and xor inc clc mov dec or sti pushf cmpsl popa das pop jle jae shlb lock or lock (bad) mov and lahf mov dec (bad) insl rol dec loope (bad) cmc xchg mov and in daa dec lahf or cmp inc adc pop mov je pop ja hlt xor (bad) or jnp pop or in movsb clc out sbb sub or xchg sahf lret mov dec leave sub xor (bad) mov xchg dec jge jne mov inc dec stos popf ja sbb add sub ja pushf xchg negl and out pop pop pop pop xlat sbb lret (bad) mov iret mov inc push xor repz out sub inc cmp aam cld int3 xlat sub mov dec pop vmovaps push push stos push pop mov ret fdiv sbb or outsb xchg test sbb outsl xor mov (bad) and test mov mov loop jns dec addr16 adc xor movb decl pop pop bound aam adc pop mov or testb sub pop sub sub imul mov cwtl mov xor aam sti mov in xchg jne notb mov out das add (bad) mov loopne (bad) mov out ds stos out mov or sbb decl add push fwait outsb (bad) inc cmp add inc add cmp out xor pusha insl xor and dec loope mov lea mov pop inc sahf xchg popf iret ja test sub cmc leave (bad) imull sub stc aad call dec cltd cmp test sarl lcall mov push push adc add xor sub lret iret in daa notl sbb pop rcrb sbb xor mov call or xor sti idivl jle push imull dec xchg mov inc and jbe and push or cmp imull std mov test dec mov xchg out std rcll push mov jnp mov loop rclb dec scas fldcw pop hlt jbe xor pushf insb (bad) add pop xor scas pop mov dec test xor aad repnz ss cmc gs push mov into mov sbb fistpll sbb cmp pop (bad) dec std xor aam and es pop (bad) pop xchg add pop add mov (bad) mov pop das ficom and push xchg stos cmp mov mov cmp incl pop or and jns jbe (bad) cmp push pop push add xchg push les pusha add inc add mov sub rcrb pop lods rclb lret sub aaa test ret mov fdivrl jae and stc loope ds inc jmp movsl xchg add cwtl and mov call jmp popf jo mov loope xchg and sub sub popf lcall cmp lods push bound pop pop jmp dec jb rcrl jl (bad) sub sbb std and xor fnsave lret out mov jp dec loop sub mov or jmp enter ret orb sub (bad) das fistl sub xchg pushl lret dec mov mov scas xor xchg push insb pop and pop xchg insb lea aaa repnz (bad) iret add js (bad) pop js xchg jno pop cwtl jns mov iret or in cmpsb les dec ret pop sahf pop loop xlat in or add inc movl or scas sub test mov add imull out sub leave daa jnp push adc jb scas gs jnp ret jge mov xor add ret es into lcall int3 addr16 imul push fldt push and xchg loope pop aam jmp shll pop out lahf mov pop leave push (bad) test add daa idiv jb stc fcoml cld mov lea pop ja lcall lahf fcompl add movsl ljmp icebp dec jg sub adc mov stos repnz in lods mov fildll push push or xchg loop lea push cmpl rcrb test cld insl inc sub pushf cs jne xor mov divb mov clc sub cmc outsb pop push movl push es imull cmp cmpsb lcall ret mov lret sbb add icebp mov pop push mov xlat push in dec sbb mov or dec pop mov mov dec mov into xchg pushf xchg jge outsl lahf pop push js xchg out dec mov dec ret mov dec adc add out out and data16 or shrl sbb mov arpl or imul fcomps adc mov inc lahf and mov push (bad) stc addl in ret in push in cmpsb orl ret mov xor sub sub fisttpll scas les into stos stc (bad) fimull adc jo xchg vgatherqps rcrb xchg icebp repnz mov jmp lret mov popa mov and or add rorl jae test xor sbb xlat or sub cli jecxz sbb sbb and xchg je xor mov scas test pmulhuw push ret push inc in push dec pop add pop lret sub inc xor mov sub sub sarb aas jecxz xlat in sahf dec sub dec sub and dec ljmp ror adc mov outsb loope loop push test cltd orl popf cli int jno imul leave sub notb fisttp std movsb test pop ljmp inc or (bad) mov inc and xor pop rorb and popf hlt cmp (bad) shrl fisub jnp mov adc sub jl jbe int3 and leave inc add push adc frstor cli repz push inc iret add lea push jl ror sbb cltd sub jno push (bad) cwtl sub push xchg xlat mov sarl leave jecxz sbb pop xchg mulb sub xlat out inc outsb das fist mov popf cld xchg imul into loope cs fwait mov imul das adc aas add scas shr ja (bad) sbb pusha jl sahf xchg adc xchg int3 pop dec sbb gs loop add sbb mov int iret inc gs std (bad) xchg leave mov ds loop leave and in push sarl and cmp and mov negl in dec push lds mov adc adcb idivb in ds add sbb sub xchg pop bound sbb sub jnp push fist ret pop inc lea xchg and jmp push call and mov mov and fcmovnbe jp ds cmp dec hlt adc xchg aam adc mov xchg out pop fmulp cwtl cs pop push fs xchg ljmp scas mov sub mov movsl push inc push jg adc cmc or xor mov or iret leave sarb cmp mov xor mov or inc orb out add les fisubrl sub (bad) (bad) fstpt mov sub mov ds les fcompl push cli cltd push pusha adc ds fdivrs xchg xor je insl addr16 pop xor roll and mov stc daa ret or dec xor xchg sub cmp or jno push xor xor outsb loope cmp adc pop xchg in xchg xor (bad) cmp (bad) dec lea aaa insb lock and mov push cmp stc mov or mov lret daa jmp cmovnp andl cmpsb stos inc jge inc xchg jecxz pop call daa (bad) mov jbe call mov data16 mov (bad) xor add add pop (bad) mov ljmp mov pop bound cmp mov push pop jecxz pop ret test aas fsubr cmp cmc xlat sub decb push call inc sub out push pushf mov xlat xchg push xchg mov in add fldl repnz push mov adc mov add lret xchg iret and pop sub inc aaa lods or out jg and jge inc insl into and dec add leave ret pop movsbl and or scas xor pop sti jmp mov sub jl leave ss jmp mov out xor rcrb push mov push inc or stos repnz repnz sub sti bound leave dec cmp iret mov aas xor vmovss test sub leave loope in xchg (bad) scas xor cmc popf (bad) push mov and fs mov popa (bad) ds ljmp mov add stos mov and adc or aam vxorps mov and mov pop fcmovnb je lret stos mov xchg scas popa fdivl xlat sub sbb (bad) (bad) inc and (bad) in (bad) mov fistpll push fsubl adc lods sti lcall or push pushf sbb or jne ret sub movsb stos mov pop scas test cmp xor roll ds lret push xor sub mov or (bad) jo repnz mov xlat inc and cvtps2pi mov cltd loop sub add movsb rcrw jecxz lcall add jg sbb sub xchg adc (bad) mov mov fdivrl dec or (bad) or mov fnstenv out lahf jno movsl faddl cmpsl lds aas stc cli mov hlt xor sub test cmp inc add mov in xchg fist pop mov dec rcl (bad) xchg std icebp mov fidiv pop into loop,pt mov push leave icebp (bad) fistpll dec xor push cmpsl es out sub roll xor mov mov mov push add and (bad) dec frstor cs aas into adc stc sub loopne negb cltd adc push push dec mov dec mov aad mov cmc xor push ret mov fmul dec idivl popf movsb das out and xchg movsb mov sbb frstor xchg ret jg (bad) adc (bad) mov cli lea mov add push js and push inc movsl lock mov push pop out xor je ljmp dec add xor lock aaa inc and jne js shll cmp xchg loop or mov rolb (bad) lea dec (bad) jno andl das mov shr adc int3 add jl aam daa (bad) pop inc cld lods push sub cld aam add ret test and dec lock lret xchg cmc push cmc dec mov into push or ret jle push sub rorb dec xor stc xor jmp movsl stc (bad) mov (bad) jae sysexit dec stos or aad mov add lret fwait push (bad) cmp popa and test and es pop nop and sbb (bad) (bad) cli push xor cmp testb cmc adc pop shrl mov repnz lret or push leave imul xor or sahf sbb testl or jmp test pushf xor mov mov mov push inc idiv sub mov jne add jl lds dec cmp sbb sub sub xchg movsb movsb out pop adc sub (bad) jg and adc and dec js mov mov pop xchg leave pop add add shlb and push jmp rclb inc (bad) jbe adc mov push mov imul in out cmp and xchg lcall fucomip ss jno lods in leave xor mov (bad) cmp inc lret inc sbb push insb xchg jo jmp or push adc push and int3 pop ret sti cmp pop mov sub repnz movsb cmp mulb cmp and xor jge jmp fcomi mov insb popa test jmp or adc lock bound dec testl xor lret mov xchg into mov cmp out xor xchg dec mov (bad) dec (bad) cs sub jnp adc test jmp cld or mov adc jl sahf (bad) out dec push push and dec push or pop mov or icebp mov mov nop fisttpll out mov ljmp cmpsb loop loopne cmpsl pushf pop dec or dec rorb es xchg ljmp and add arpl mov lret mov xor scas les (bad) out xchg inc mov add call sti mov test mov xorb fisubrl out sub sahf push jmp (bad) incl repz lahf mov hlt lods push subl lahf lds (bad) sbb inc dec adc (bad) pop ja cltd or bound mov lret fsubs dec inc sub jmp jb into (bad) xor rorb mov mov out add and jbe in inc addr16 inc jno dec sarl cld mov fs cli fcoms stc xchg (bad) mov fbld fmul ret lret xor (bad) ja sbb add pop and mov jmp jae das pop mov add arpl daa ljmp mov and clc and pop dec xor pushf push add lods test push sbb pop adc ljmp testl mov fptan dec ds aam mov xor call js lret dec pop test (bad) (bad) sub cmpsl inc mov adc movsb cmp mul mov sbb xlat fcompl leave push mov jge loope jle or xlat inc out and les sub inc (bad) in mov adc cli inc test jnp popa mov adc ljmp pop fist mov push push cmp iret mov dec out in imul adc or (bad) xlat in push mov fldcw add ret jno pop mov leave xor push stc add lret test mov (bad) adc jg xchg sbb adc mov mov test pushf pop mov fsubp xor mov std pop mov push mov pop stos (bad) int3 pop pop cltd fwait movsl jge mov sbb or dec lds push ds popa pop add movsb les fs in cmc fst call out call outsb in pop test mov sarb ss dec mov cli mov mov fldcw cmp mov pop pop ret pop loop rcll fisttp sub adc std pop aam add cwtl mov mov shlb pop scas xor mov (bad) popa outsb sarl or cmpsl sub or sub cmp movb or and fsts sahf xor lea or icebp fiadd outsb das xchg jns or jbe add mov add cli pushf add inc or mov imul (bad) das idivb pop into push fdivrl imul push inc jne cmpsb popa call shlb repnz call sub xor jmp mov xchg out push jg jne gs adc and iret mov es rorb push loopne mov pop push sahf or sub mov call daa fist cwtl fnstenv push divl call pop sub xchg fnstsw push mov stos lret mov ja stos push mulb add cmp (bad) adc mov lret adc (bad) decl loop popf gs jb ret cmp pop js pop loop sub pop or leave pop mov bound ret push pop sbb sbb repnz sbb aas test movsl add pushf push add lds add and out ret cmc mov cmpsb mov cmp jg in and ljmp pop cs enter lahf xchg loope ret mov and out ficomp lret xor fadds sti stos cmp and xchg out dec cmp fistpll ret mov je sub dec aad jmp and or adc pushf inc and ljmp in (bad) insb push loope mov (bad) fcoms and sarb mov clc idiv sarb pop inc or push icebp inc inc (bad) out clc pop shrl ret mov add int3 xchg popf jo pop mov sbb jbe jb sbb ds sub adc lods add lock hlt repz mov (bad) int and or cld dec ljmp mov cmp ds sbb dec adc add mov add repz (bad) jnp sbbb dec sub xchg mov fist push lds popf in xchg ljmp mov jecxz js iret das repnz cmpsl fcmovnu es push mov mov repz sti and pusha jmp fbstp or cmpsb xor mov cmp push dec mov sub dec lea stc and mov xchg sub out stos fsts std outsb jns (bad) out add push iret std fimul scas sub incl xorl add add xor lret and loop test (bad) and faddp gs xor and jle xchg push fist pop cmpsl jge ss xchg sbb pop mov sbb daa cmp out push cmpl jl push add call lods mov sub cmp clc cmp or leave pop and push jnp or inc push mov (bad) jle cmpsl leave add jg sbb lahf icebp mov lock xchg jl out ret mov call jnp sar sub add jns dec fistp popf inc mov pop push push xchg dec dec ret inc lret adc rcl call pop mov xchg jbe aam fiadd test imul sub ja aas or fs movzwl mov adc pop pushf adc ljmp fild and pop cmp xor fnstenv mov xchg jge leave xor popf idivl adc bound (bad) inc add jne mov lret pop push (bad) pop mov mov test push adc fcmove test in stos cmpsb repnz mov movl fdivr pop ret test mov (bad) repz lret dec add ret or jle mov mov mov lods imul or xor popf pop rolb cmp mov xchg das jo fidiv push lahf clc jo outsb mov push mov fisttpll push into jp jo loop (bad) imul popa and pop mov repnz fildl mov cmc mov cmp lods fisubr jle add pushl sub stos test lret adc cs outsb fnsave icebp stc bound ret dec mov fstpt xor and mov dec jb xor cmp out push mov hlt xor sub in insb movsb sub das fsubrs or xor sub and mov fldenv das repz push xchg and insb push mov aaa jmp cmovns mov mov (bad) or xor loop icebp jb push sub out in adc ret imul negl int3 jmp cmp popf icebp cmpsl enter xor das xor mov lcall out xor push jne ljmp divb mov addb cmp and repz add fcmovne clc pushf dec inc xor mov loop cld and inc mov sub or mov mov mov (bad) mov push shrb jne mov int3 mov adc and out out sub push or xchg cld or jg fmulp sbb cmp out imul pop pop rcll cld or mov push mov dec or loop xchg sbb push cltd xchg icebp mov cmpb repnz pop (bad) lods adc and push add sub jp and jmp xchg rcll cmc sbb icebp dec mov (bad) cmc (bad) int mov imul jle daa or vmovlps mov movsb add pushf jecxz xchg pop test or repz or sbb jae push adc mov pop xbegin cwtl or or out lret push or push pop outsb cs call mov or adc sti push rcrl add mov cs mov push xor pushf stos int push sbb sub mov add sub mov sti int in fdivrs pushf sbb inc inc sub loope insb pop dec loope mov and or jnp mov popf push sub leave int3 mov jecxz xchg jmp sub push jnp jae jle pop or xor pop mov ds jnp mov mov inc sahf pop lock scas aad loope sub jae repnz jbe mov movsl jae lods jno mov add push or sub sub sub sub mov or sti mov gs sub mov and pop pop (bad) pop sub fwait xchg daa jne ljmp xchg mov mov jp repz and lds inc or mov sbb orl into cmc (bad) dec adc mov cli jb xor or cmp mov cmpsl out sub mov pop bound mov xchg push mov mov loope out cmp sub jns lret inc pop pop pop sbb mov test leave cmp clc leave push je shlb inc xchg push add or enter mov shlb xchg test sarb repz test jecxz mov pop (bad) mov shll mov dec xchg call and fldenv icebp add (bad) xor out fcom call pop outsl repz add fnsave jae jmp les repnz cmp ds test lret xor mov repz enter (bad) arpl sub bound shr sbb ss sbb jp dec jecxz dec hlt jge lahf fldenv cmpsl sbb data16 xchg out pop int3 or xchg arpl push cwtl adc sbb mov popf adc cli mov cmp jo loope pop popf std cmp fldcw lds into out cmpsl xchg sub scas push shll sub divb fimul xchg or (bad) xchg mov add dec or into mov imul (bad) mul pop mov jmp cmp and sub xor mov lret sub int3 jmp adc test leave scas bound (bad) enter fdiv dec loope sub out fs mull add inc adc or icebp adc js push adc mov dec lock cmpsl adc add aas add jo cmp mov sub add pop (bad) adc sbb leave adc cmp adc add jns adc fistp push jecxz adc je mov jge fisubrl xchg lret mov data16 lahf push pushf popa mov pusha mov aaa mov mov or xor fsubrl cltd mov clc pop mov cmp mov xchg dec sahf adcb repz aaa ljmp mov stos xor ljmp ja mov cmpsl loop fldl sti test movswl gs or stos iret (bad) xor lods je and mov or xchg imul ret loopne lret iret shlb mov in mov out fsts clc mov les cli (bad) xor mov repz xchg (bad) pop dec iret adc sti daa xchg outsb pushf andl pushf xchg mov lock sub mov leave or pop add jmp stc sub xor and push mov out pop add mov jo and xchg inc mov jge mull gs mulb dec mov movsl jp xchg inc mov lret jl lahf out and push cld out (bad) out out mov cli sub mov sti cltd mov adc repnz das call dec (bad) int3 ja aad out bound popf in cmpsl adc pop cs imull imul adc out sub out mov and call daa push imul iret inc js repnz mov add cmp dec adc mull adc pop decb ljmp mov mov or push xor mov aam fildll push cmc out cld pop mov mov jns jl and (bad) or add dec adc mov pop add out inc add data16 push mov cmc cwtl pop fildl pop pop xor sbb popa movsl lods scas (bad) lret mov or jb lahf push mov pop daa aad out orb sahf lds lods pop sbb pop out lea cmp lea push stc xchg push jnp pop hlt sub loop insb jmp or mov repnz mov cld jnp pop mov ljmp cmp fnstcw dec rorl in les mov je add sti sub push into mov (bad) or pop fldenv in test dec mov ret sti lahf jne cmpsb xor cmpsl cmp pop mov je idivl dec xor or or xor cli (bad) call repz sahf pop mov pop out gs cmpsb mov mov jp cmpsb sbb dec leave into pop imul mov mov test (bad) fsts mov ja shrl mov mov pop pop ljmp adc add or test test xchg in popf in das lock lahf xchg (bad) data16 mov mov mov xor lods cmpsl and sub mov cmpsb arpl jmp gs test cld jle mov add and rolb enter stc jp and or repz popf iret clc or aad in and mov movsl xchg pushf idivl add push xor inc xor enter clc sti repnz mov jbe sub and jae sub das pop xchg sub push and out outsb add mov shll sub cmp aas mov cmpsl pushf stc mov aam sti ret inc push cmp faddp mov ljmp bound enter sub cmpsl lcall in cmpsl imul push aas enter ficom das fcomp push movsl mov into in lods hlt mov jns dec lock mov inc adc mov and scas and pop sub fidivr rsqrtps xor fs or pop scas test mov in jp xor (bad) ss cmp mov jbe shrl sti mov and das cli fs mov lcall movsl sar lret adc or cwtl loop xchg mov movl jg xchg hlt in dec cwtl and movsb mov lret jg push cli mov loopne cmpsl mov xchg ljmp xor xor popl jns fdivrl shll sub clc lea in add xchg test push scas js dec lret movsb or and sub xor sbb shll mov out sub or cwtl lcall pop (bad) loopne jmp pop push push dec imul (bad) bound aad mov sub dec rcr leave das or xchg sbb push ja cltd into add adc into mov dec mov addr16 adc mov aad repnz arpl dec lahf movsl negl mov call mov icebp inc mov cmp in outsb inc push or test aad ret xchg xchg mov add jle dec or lcall jmp shrl movsl addr16 jnp xor mov xchg jle imul rcll mov lret mov sbb cmp dec mov ret out pop jno xchg cmp fnstsw lret fs stos inc hlt add fisubr out mov idiv leave dec sahf sub mov pop stc jmp xchg push aas test dec fisttpll mov cli gs mov repz add xor mov pop je bound stc fimul and cmp mov out mov les outsl jmp je iret fmul inc mov sub jecxz xchg add cmp pushf jno cmpsl jg sub mov daa out (bad) daa lret fistpll xor mov push (bad) fcoms scas jbe je add or ds push or testl mov mov jg push sbb xchg lods mov stos mov bound ds test or (bad) rcrb jecxz aaa rol pop (bad) bound or pop je ss test sub pop dec adc xor addr16 push adc mov dec xrelease aaa bound xor std daa fdivrl lret in std aam pop mov incb mov loope sub fistpll (bad) clc leave pop stos jne lods popf (bad) mull shrl sbb push xchg aad loop dec lahf adc adc (bad) sub cmp adc and push sub lret fimull out or pop xor fildll and stc lods nop rolb es pop pop flds sub pop push or pop in daa sub push dec push dec cmp sbb mov dec mov mov stc push hlt or stc xor or repz or jp mov mov and xor sti sub inc push or out push mov and imul sbb stc daa dec (bad) pop sub sub xchg push lods (bad) pop jne mov outsb mov add test dec mov lds aaa mov and mov jl stc outsb cmpsb add in mov and gs or movsl cli aad ljmp mov or pop int movsl mov jp mov pop (bad) movb fisubl mov xchg test pushl dec push or cmp out xor and mov sub scas fcomps popf aad cld pop out mov mov cmp sbb or sti jl int3 (bad) lahf fldenv jge mov jmp mov push mov sbb cmc add adc ret rcrb out mov imul loop add mov js fcomi scas test sub (bad) jmp movsl and leave (bad) lods xor sub leave or jbe scas enter loop mov dec repz adc movsb push sub iret sub lds pusha jmp push sub (bad) sbb jo pop mov mov lods dec jge sub into es dec mov pop or icebp icebp xor into mov mov add cmp pop dec (bad) leave ret pop or sbb cmp and sbbb add sti (bad) mov adc daa loop jns imul or idivb mov leave adc orb mov sub add pushf cmc push pop ret int3 sbb inc or dec iret ljmp add jno add pop subb lcall stos popf es out cmp sbb xor in or cmp lahf pop mov xor mov jg mov jmp aas jl pop stc imul orb jecxz ror out adc shlw mov inc je (bad) and adc mov adc push jmp imulb cmp scas sub jae adc add out decl xlat mov std dec inc lock mov (bad) out mov jp out dec sub sub mov mov dec (bad) fldl (bad) (bad) das jecxz sub mov and roll sub pop movl (bad) dec mov sub in cwtl pop xchg ror test (bad) cli movsl push daa aaa push sub xor sbb mov mov or inc sub pop stos jne pop mov add lcall (bad) pop push mov les dec or sub imul rolb and fdivl pop mov add les fs arpl jne stos and mov xor lahf xor xlat ds dec scas fcmovbe imul clc orl adc stos ja pop divb popf test add sub and lods lock pop mov sub clc pop xor imul xor sub jmp or xchg int3 lock cmc inc sub mul jmp xchg or lret out or and cmpsl xchg out gs mov pop jecxz and sbbl fsubrl sub jmp mov lcall (bad) or lcall inc daa fist aaa mov mov addl mov push add mov stos gs test adc shrl add cld out outsl test mov test (bad) jg mov loop lahf cmp mov jp stos cmc out push jecxz fnsave outsl xor push sar inc das sarl mov xor movsl adc stos fnstenv push inc fs aaa scas dec fistpll sbb mov pop mov adc jmp jns imul daa repz test pushf sarl lds insl clc (bad) fisttp mov repz pop fdivrl sub add call lods in or push adc lods mov ds insb xchg dec xor mov add pushf xor ljmp and in mov jmp in and sub lock jb xlat inc sbbb or mov cltd mov add dec add ljmp push xor xchg lds movsl jg stos fnsave fmuls std mov pop xchg pop mov ror and push (bad) fsubrs add ds fnsave pop jmp inc stos mov mov fs jmp push ret pop push in test mov xor out pop xchg mov xor mov dec sbb movsb adc ljmp or jecxz cs sub fistpll jmp fs or ret mov data16 xor xchg pop jb xchg adc loope xor jae das pop adc cmp inc mov or pop rcl pushf add rorl add (bad) shlb xor add movaps sub push mov mov mov fsts ljmp lock jg cmp test add (bad) xor lods (bad) jecxz cwtl popl lods and (bad) mov push mov lret xorps mov cmp lret mov lahf sbb pop sbb mov lds cli inc or cmp cld mov jmp popf add call and mov jmp lods adc mov lahf movsl cwtl loopne mov dec and movsl sbb cli ret xor mov iret mov out dec mov mov mov add sti loopne (bad) cmp push aad je pushf xlat mov lret add movsl hlt addr16 dec sub loope iret jge test and dec ss lea imul mov ljmp daa dec jl or mov adc (bad) and out cld (bad) pop dec js notb xor lods test xor loope jp (bad) repz dec das jo pop fistp fdivrs xchg mov sub mov cmpsl jne cmc xchg ficompl push (bad) out push jmp dec dec or in and mov int jb nop mov sti pusha pushf mov popf (bad) sti stc add test ja inc sub pop jns dec and fdivrp out daa fdivs lahf (bad) xor jmp stc bnd dec pop mov inc sti pop mov mov stos sub or pop out sub testb iret pop subb xchg (bad) stos mov mov or add js jmp fdivr or push ljmp stos repnz or and andb or xchg inc cld pop (bad) rolb sub and add sub in and pop inc enter lret xor in das (bad) jne pop push mov fdivrs lds or (bad) xchg stc mov or sti fld inc pushf iret or xchg jg insb fwait addr16 sbb xchg mov or add mov or push sbb mov scas out pop movsl jb loop nop fimull movl and dec push fcmovnu pop or mov push iret lret or cmc outsb jbe das das mov ficom jmp out ret jle xor xchg and add jne out lcall jmp bound fisubr ljmp add stos mov dec cmp cmp test push mov and scas out jne inc xchg nop push (bad) daa sub push xor push mov std cmp inc les mov jecxz fdivl mov movsl stos aad cli adc adc cltd movsb pushl (bad) cmp enter leave ret js xchg mov xlat dec cltd outsb ds shlb shll mov add add (bad) xor aaa push into test sbb dec jne jo fdivrs repnz push lcall mov ret mov add xchg pop pop and pop mov jno dec push (bad) outsb pop negb popa ret jecxz into mov mov push out pop js leave xor or es sub cli frstor xor iret mov lret pop dec iret shrl ret pushl pop sub xor push aas jo xor mov ret mov jmp in clc movsl cmpsl rorb xor dec (bad) or dec mov and jg dec lret sti mov dec jmp sub outsl lret loop mov jne and xchg fmul add mov imul iret stos sub xchg scas flds lods mov mov inc sbb fwait mov mov xchg mov inc inc xlat pop mov scas sub mov jmp in fs push cmpsb sub pop daa xchg loop sbb fsubrs rclb gs hlt je cmp and mov stc popf jl jmp les jb into pop hlt imul or ljmp mov xor dec lock ljmp pop cld push imul mov daa xor jno mov fldcw mov mov xchg inc xchg hlt aaa leave cld dec or add outsb das push sub scas lret rcrl popf sub out or out inc in arpl push out mov mov stc (bad) (bad) out and sub scas push test jmp shrb andl (bad) adc fnsave push out push sahf jmp inc and xor out mov or dec mov push pop sub pop cltd ret dec mov jae fldcw sti sub dec shr je fdivs fstpt dec icebp sti sub push mov fwait pop fcoms negl outsb roll sub pusha mov icebp xor fcmovnbe cli fldl mov aaa les xor lret sub pop test pop out fwait dec sub ret push cmp sub repz inc jge sub or mov xchg and (bad) ficompl cli out sub and sub xor ret test and or ret adc xor mov pop fidivl or mov mov lret (bad) daa xchg fisttp scas jns gs add sub pop mov ss sbb sub aas mov imul and push push cmpsl mov test daa xor fnsetpm(287 xchg ds cmpsb cmp push sarb iret out mov sbb xlat icebp and ret fmull and outsb bound sub fcmovnbe cmpsl shrl add mov inc lds or lods inc mov pop sbb add je lahf cmp clc xor mov mov sub or stos fstpl push xor loop sti jg push gs or ljmp mov push stc sub pop sub in or pop add sub jmp iret std lds xchg out lods cmp xor decl test int aaa add and sub mulb mov lock dec imul cmp mov and xchg push sub and mov mov ja mov push iret pushf (bad) and mov xor dec and scas jb xor sub mov inc xor xchg in popa loope fisubr jmp repz loop sti pop rcll mov std xor mov dec adc jle das ror push add subb pop and pop pop incb mov pop or mov jne ret cwtl sbb iret xchg add sbb sub pop (bad) mov test enter add cmp mov xlat or cmp in movsb leave idiv insl rclb movsl cli jecxz dec in mov test xchg sbb xchg jg outsl lahf loop (bad) or inc dec jne stos jmp xor inc mov js mov fbld pop inc lret jmp push divl mov out lods sti (bad) cli add sub ljmp imul and or jg js repz push shrl shrb add push push push xchg ljmp clc inc mov sub xor mov mov adc ja gs pop leave inc mov loop adc rorl sub sub ja rcrb jo movsb movsb pop xor mov insb xor pop rcrl repz adc test out add inc pop imul jmp je repz push sbb xchg mov xor cltd push sub decl xchg mov fs movsb cli std lds jecxz frstor das fcoms sub jno jg mov fistl pushf mov xor mov push mov xor outsb notl or push negb pop xor push dec cmpsb inc dec inc leave add adc cmpsl decb subb mov stos xor sbb xchg mov xor mov jae (bad) cltd out dec aas pop mov and xor sbb ds pop rorl mov add mov jae push or mov xlat sahf mov aam fs inc dec mov mov push mov pop inc out jno movsl fcompl call xchg adc and sbb fmul push add sbb push lds xor scas outsl cwtl inc out jg jmp and popa cmc fidivl mov sub into leave out xlat xor pop out icebp and mov xchg jb bound pop ret mov leave jno sub mov into cmp sarl rcrl rcll ds nop out enter icebp dec jle cli fs and mov call mov clc or sbb add test fmul or int3 test jp push cli (bad) sub movsl out shr fiadd mov xchg dec push ljmp dec sti data16 stc mov jl pop or mov dec ljmp popa das scas (bad) int sbb mov imul bound or pop and push cld fistp cmp or sub sbb pop test or std push xchg add fstl je in mov enter mov jb insb sbb push mov and movsb inc add sbb xor out nop vrcpss daa sub (bad) push add test push je jb xchg and inc bound mov neg jno xchg pop sub lahf in push sbb add rorl shrb insb in stc dec jmp or sub or cmpb je lahf pop adc sar inc jmp (bad) cmp daa mov inc mov popf jns (bad) repz dec scas ja bound or das popf jne mov and insb mov icebp or pushf in (bad) adc rcll (bad) sub xchg inc and cmc xchg out or enter xchg (bad) mov cld jmp sbb mov lock add out pop call dec dec sti sub adc call push js loopne (bad) stos pop dec dec sub dec into fstl add xor pop imulb jae xchg jecxz adc add and mov loop push push xchg inc dec repz pop inc test mov mov shl dec insb pop mov lret fs or out mul iret dec addb movsl jle dec jbe pop jmp iret mov jmp repnz push fs mov ds addr16 scas xor dec imul shll mov in ds dec mov sahf jnp cmp dec mov xor jg mov lcall xor loop hlt dec leave sbb into mov in fcomps add push movsl shlb ficom insb cmp push mulb out mov add mov adc (bad) jo neg add sti cwtl pop divb scas cmpsl rorb scas dec sti mov and jbe dec (bad) pop jp xor mov xor fnsave loopne mov cmp sub mov sbb pop mov jg ds jae cmp mov gs daa or jmp jns imul mov add test fs add jb testl inc and xchg daa leave and int and sub jb into fist jecxz adc sbb xor add ds cli xchg fsubl (bad) mov iret fsts and mov dec push push daa cli mov and sbb mov mov push xor (bad) pop pop sbb and fsubr fxtract cmpsb sbb (bad) outsl lret mov sub dec add (bad) aad lret stos (bad) leave out dec mov fsts daa inc daa adc scas fs jg sub popf sarl out cwtl jg pop mov (bad) xchg notl in lods pop bound inc jecxz jbe push jl leave sub lock ret inc cmp add sub ret and inc test ljmp (bad) dec jo xchg ret (bad) push stc shll and mov nopl and and sub movsb jmp xor sbb repz sbb xchg ret pop push and mov cmp jle imul mov pop fsub ljmp mov les and or xchg ja iret addr16 mov lock push and xchg xlat and add and mov and cmpsb cmpsl imul push cmp test movsb pusha pop pop xor pop pushf mov sub xchg arpl lahf test pop ljmp jg or (bad) cmp dec leave mov pop adc sub (bad) jo xchg lcall pushf shrb xor jno mov jns mov cli pop jns shll mov ret jne xor sbb lret hlt (bad) mov jge jns cmpl mov (bad) jg test xor test call imul adc sub sub dec pop call or scas jp xor jle loop push les pop out test mov mov adc add fadds out scas mov sub pop jae add mov (bad) dec decb xchg adc sub mov cmp sbb xchg push mov dec daa (bad) lock pushf bsr sti mov push or lret stc cmc pop fist jb cmp (bad) repnz add daa sub or iret sub mov aaa call mov add or (bad) xor cmp adc sahf movsb leave aad mov sbb leave xlat int3 arpl jge inc xchg out sub xor add push sub mov popa and pop daa mov mov jg jmp (bad) gs adc mov push (bad) pop mov sub jmp xor mov aaa pop push add mov sub fs (bad) out mov jne add adc call and push sbb or call push lret hlt repz adc adc pop ret movsb mov mov pop dec push stc clc mov adc mov in and jecxz daa add pop mov mov sbb jp jne repnz lds inc repz je push sub pushf pop (bad) repnz pop push mov adc cs pop xor into jnp (bad) mov int cmp push or into mov rcl push lcall mov fdivrp icebp xorl ds lahf or idivb lds imul je loop (bad) ja adc mov xor sti mov popf xchg scas scas pop sbb (bad) (bad) lret push push lahf push ficom je lds mov add adc jne scas mov repnz fistp and scas or call add jecxz dec stos fdivs mov sbb jecxz dec loop rcll adc xor mov les stc mov out insb adc pop cld aas mov repz jmp (bad) in movzwl daa out sbb into out lret data16 mov jp incb loope cmp stos cwtl xorl push dec aam in mov xor in ret (bad) jno cli and push daa leave aad rolb das cmp pop ljmp mov fimul movsl cld pop roll pop test push mov xor cltd fnstcw cli pop arpl xor xor mov xor mov add rolb popf push sbb andl cmp xchg and stos out dec mov adc sti rclb cmpsl jle int3 popf icebp mov stos sub mov xor aas pushf pop add stos repz mov les in fwait repz negb or cmc sbb jge sub or mov lock outsl pop xchg or sub shr int3 ds add mov arpl xor sub scas sub cmc sub movsl leave mov push mov pop test sti aas mov pop out jo out dec icebp xor mov dec dec mov lds movsl pop leave add pop in jno add in inc test xchg xchg (bad) xor jge pop and xor sub xchg and dec or push dec inc add ja pop lahf ret (bad) cmc inc out pop mov inc mov cltd mov dec fidivr (bad) sahf mov test ret cmp in fidivr into xchg push push jns fist or lahf sub mov push or outsb bound cld push bound call scas adc pop xchg out lret xor xchg jp fsubrs fidiv xlat or or mov lods lcall test idivl xchg test mov (bad) jbe dec lret cli sub and cmc gs daa fcoms or inc rorl fist notl jp cmp dec pop out pusha loopne cmp mov fist adc xchg and add sub ljmp mov mov aas enter xlat and push sbb mov dec mov notl (bad) mov leave rcr and and pop dec push out outsl jno xor sub lds into les (bad) std inc xor fisub fs sub adc mov xchg adc and add xlat xchg ror inc pop es clc inc mov enter cs dec das cmpsl icebp mov fisttp add jecxz mov xchg fcoml or fxch imul les jmp adcb or aad lret lret cmc insb (bad) adc ss repz movsl std xchg cmp jno inc mov popa out xor shl jno mov add xchg xor or popa fs jl (bad) ss stos add pop xchg push dec pop lahf mov jmp adc ja push push xlat or xchg out sub (bad) push push and jne jge (bad) pop cltd stos lock sub dec mov enter mov jg ljmp gs (bad) out fdivrl jo and adc mov sahf repz xchg int cmp add nop adc jae sbb adc sbb inc sbb sub push enter add outsb mov imul popl sbb sub jbe inc sbb lahf (bad) (bad) jb add inc and das add nop mov ret or mov xor adc mov jle imul (bad) pushf xor loop add lret adc sub inc ljmp and sbb push gs test fs sub out add adc push pop or ret push push mov mov das xor pop pextrw xor mov pusha add arpl sub jmp aas aaa add fbstp push dec cmpsl inc imul dec jne push sbb mulb dec stos ljmp mov mov sarl in dec fild xorl push pop and in mov inc mov (bad) das cmpsb jae rorb fist pop das or sbb xlat adc shll pop mov mov in aas clc mov mov mov mov (bad) xor xchg push jle jl and xchg clc scas test scas divl fdivrs mov loop (bad) mov push and add jbe popa xor mov movsl push pop shrl xor mov or icebp (bad) dec lea mov pop lret cmp sub imul adc fldl2e mov xchg test das aaa mov repz in fsubs mov cld xor mov (bad) fbstp mov lods mov (bad) mov leave xlat icebp popa inc sub mov test dec in mov sub rolb mov stos push pop cwtl ret xor pop xor out dec dec dec out fs dec inc leave sbb les lods push sub and into cmc xor (bad) xor jg and leave cltd adc sub mov lcall lods add pop mov (bad) mov sub jle (bad) pop or int3 ljmp mov cli mov movb insb mov adc (bad) sbb mov std xor out xchg sbb mov and lock mov shlb cmpsb push outsb xchg push mov pop push cmpsb cmpsl stos fldt (bad) sahf inc xchg or scas sub push out push xchg int3 pushf pop jmp outsb dec pushf pop xchg iret loop dec stos into inc dec leave lcall icebp mov add jecxz dec or (bad) add fsubrl das cmc jmp cmpsl (bad) xor stc out jle pop call xor (bad) xlat in es or bound jns inc mov subl jno sub stos mov push mov cmp dec pop (bad) ss lret jmp out into sarb and cmp daa lcall mov xchg pop (bad) cmp sti and lcall test shlb mov mov push iretw dec aaa outsb (bad) dec or fistl jo cmpsl cmp test popf in or push jl push aad inc and jmp xchg inc aas pop xor fstl cmpsb mov xchg xchg sub (bad) mov lahf imul outsb push fisub lret mov inc std dec mov lret inc dec fs pop inc add add jae push test out push mov inc outsb and mov lcall xor and xor mov movsb inc daa jge ja or jg push fdivs cwtl cmp pop jb and sub ret ljmp sub add or decb xchg jmp and dec ljmpw out and pop dec sbb fcoms add sbb sbb push jg cmp pusha dec fnstsw adc pusha xchg or xchg xor sub ljmp mov jo lret frndint jecxz mov aad cmpsl aas xor xchg and das mov xchg sbb rcll pop add sbb fnstcw shrl js leave pushl jmp test pop or jp rorl ret leave jmp cmp sbb add mov mov or pop cmp loope sub push daa out dec pop ret or pop jecxz xor inc in (bad) mov sbb push popa outsl idivb mov dec pusha fs mov cwtl and mov sub popa imul add fdivrp dec gs push xchg sahf sub add inc cwtl nop cmpl or add stc js ret cmp roll or inc fbld (bad) or sub or mov movsb loop cmp (bad) add adc mov cwtl lret cld lret and push xchg addr16 sub leave push mulb dec sub mull push sub mov jb in sub or and push sbb inc mov mov lea aaa jmp inc je pop xor and std addb jo divps xor xor fdivrs dec mov sub pop gs push and jle xchg mov pop cmp mov mov sti cmp adc into jge and mov in out pop pushf lods xchg cltd lcall (bad) sbb cmp xor cmp inc and sbb out xor call insl push fidivr cwtl repnz popf stc movsb imul into mov test out mov sbb in add (bad) dec push mov iret scas mov mov mov xchg xchg add xchg xlat pop out mov fimul cmp pushf push inc sub mov mov mov jae jo loope pop and cmp sub xor out mov pushf xchg imul (bad) into stos bound xor cld cs push negl xchg sub sbb xor xchg ret xchg inc (bad) repnz mov gs test mov jecxz and loop mov jl stc lahf dec jg xchg mov add mov or jl mov add sti sub mov sti les sbb loop stc cmc imul push inc dec nop or andl jle outsl adc sub out (bad) lock aam ljmp inc xchg jle adc xchg fmul mov mov add mov push sub and lret inc inc fnstcw sub mov pop push lods jmp mov or jmp les cmp in stos xchg pop dec mov sbb adc mov fidivr inc divl roll push jg push es jmp pushf push or icebp push xor stc cmc pop loopne xor jbe jmp ss push out dec or (bad) repz adc mov mov data16 dec cmpsb xor or sub (bad) mov mov cmc insb and fdecstp dec mov mov pop sub push mov and sbb inc dec lcallw nop xor cld fbld jmp imull das shl pop add mov iret xchg aad es jno lret jle and cltd or fldl cmp into sbb cmpsb inc sbb and cld lret jmp in mov mov add pop adc fucomip rorb dec sub mov imull mov mov and xchg test pop sub jp ljmp leave add dec out je out stc mov jne xchg in cs ljmp jecxz repz pop cmp notb idivl ret inc pop sarb xchg and dec add sbb dec pop lret into pop out adc xor das lods ret js ljmp mov lods pop dec mov cs fstps mov xlat adc inc add sub pop shrl in lret hlt into xchg pushw sub ret push jnp in dec lret dec mov adc mov fimul leave sbb or repz imul scas xchg pop fcmovnbe push push jmp mov icebp inc xchg jb decb mov mov xchg and or sub pop cmp jg xor inc push mov mov imulb test fildll cmp jle mov sarb xlat add lret or and pop leave insl lret out data16 pop roll imul mov dec mov push sub imul sbb enter sahf push push ja dec xchg adc pop or inc shll xlat inc and cmp mov movsl test adc lods sub mov cmp in orl and push lret or jg cmpsl and add into mov das fbstp inc sub mov dec lods arpl and xor mov test or fs mov lret dec mov data16 in cmpsb lea inc arpl subb mov data16 xchg loope xor and dec add pop pop out movsl inc adcl pushf cmp stos xor add ficomp xor (bad) inc sub pop pop inc mov cmp pusha iret es gs (bad) cltd add sti out cmc jle (bad) jbe daa jmp dec cmp out jb pop push inc inc das inc mov mov mov xchg (bad) mov pop mov mov mov lahf push repnz je mov sub loope sub nop adc fsubrs xchg (bad) dec jnp mov mov daa mov mov add iret lret cld mov hlt scas and mov xor (bad) or test mov (bad) or mull and pop dec push push lods sbb xchg repz push sahf cwtl mov push dec icebp out and push cmp ljmp and stos jl add ret cmp xchg arpl xchg jno je bound fucomip cmc dec or xor push jle (bad) out and sub add adc loope test sbb lret sbbl mov adc clc decb scas jno xor cmp iret in aam jbe jp cmp sub mov and add cmp push mov fistpll cmp std sbb out sub pop dec and insb scas mov cmp cmp bound push mov jg stos sub ret push nop jmp dec fldl mov jmp stos bound mov cltd mov ficom jmp inc popa xchg jne mov push addr16 (bad) gs mov outsl mov repnz push sub ljmp push sub fisub lods leave loope sub add fimull out xchg push mov mov xchg sarb pop mov mov add inc enter repz (bad) pop ret adc sbb add mov enter push (bad) or inc cmp test jecxz dec add push sub bound (bad) stos xor aad sbb aam leave jge mov mov mov fs loopne or cmp xor jne outsb sub cs dec xor jne addr16 rorl sub xor popf rorb jmp pop cmpsb sub or pop insb insl mov mov xchg mov or mov jmp xchg daa (bad) int3 mov out xchg push jmp sub mov mov mov and mov jge adcl cmc dec mov stc or bnd fs jne mov dec mov daa xchg inc mov inc or push jne aas loope outsb (bad) jmp rorl add fucomip push mov int3 in sub sbb lods test pop sub cmp mov in (bad) call movsl pop mov ds sti xor dec std inc cmp xor xchg movsb mov (bad) jo cli xor dec xchg out mov cld pushf movsb shrb push dec adc out jecxz sbb mov xor cmp ret mov loope imul out or test lods xlat or sarb std in or leave pop fbstp mov rorb pushf cwtl pop (bad) cwtl (bad) (bad) adc loopne repnz into mov add stc sbb and dec and mov xchg imul movsb jmp clc xor dec jmp jecxz push outsb mov (bad) aaa int push mov jecxz adc outsl lret aaa jl pop call pop dec inc pop push cmpsl xchg push out ja movsl add xorb and pop pop das std mov lods les movsl loop in xchg jmp stos fs stc jg insb (bad) sub or push push (bad) push std inc sti test scas lret push add dec mov jns sub stos fs cwtl in mov push mov dec jp add rcrl dec cli shrl negl cmp or sbb mov adc das push pushf mov fisub push push xor in sub lret mov rcll xor jmp cmp xchg cli std add adc and and popf ret push (bad) and lea pushf jno xor (bad) adc ljmp mov sbb sti jae (bad) adc enter inc cwtl xor mov sbb xor call sub cs push jmp mov add push leave or mov add negb mov cmc ds popf lahf aas cmpsl push xchg cmp sub loop mov pop jmp xchg dec dec pop sub mov daa cmpsb inc sbb push cmpl xchg mov (bad) (bad) sbb cmp add jecxz pop ljmp xchg out out pop jmp and inc ret in mov jg cli adc in or aam adc pop mov jmp jg daa sub pushl sbb gs cmpsb xchg ret pop xchg xor or pop mov pop aam jo xor lods out and (bad) and or and xchg fbld pop inc jb movsb cmpsl push and push cmpsb in jmp push test jl xor jp adc (bad) xor popf (bad) mov negb rol call sub push sbb daa jge xchg lods lea push jb repz mov xchg fwait daa add xlat addr16 out ljmp or jl xor rcll setae or mov dec sbb and sbb mov lock push mov jae idiv push dec repz and pushf rorl mov jnp lret and pop lds inc and mov into mov dec insl mov enter xlat cmp das cld ffreep jmp mov stc (bad) or das and (bad) sbb xor add insb sbb je ljmp repnz lret inc sub or inc sbb sti movsl push test push inc je mov push repnz pop jmp mov shll in decb ljmp cmp out mov jne clc out xchg adc jp xchg jne inc fcomps dec gs rcrl inc xchg and sbb dec jge inc pop pop xchg pop frstor dec xor sub push mov gs or mov adc xchg cmp or in or ret test or (bad) xor sub sub ret notl sub mov dec sub and arpl add mov daa xor push xchg call mov adc and fstps lahf or imul (bad) adc fsts pushf inc es pop scas pop push in movsb je or and pop dec mov xchg test mulb stos cld popa rorl (bad) stc mov aad cmc xor das pop test int repz out adc mov (bad) scas sub cwtl mov pop std lret ja ja jns pusha inc (bad) cmp inc xchg and (bad) jns dec jno xchg out ljmp and or cmpsb call pop pop mov mov out sub mov sub dec sbb mov and mov das jmp push lret icebp lea out push pop or or mov mov xchg hlt dec imul and cmp ficom jg ljmp inc test aas in test jl into repz xlat int3 insb lahf push lock fucomi daa jae sarb inc mov mov add and sub xor insb cmpsl mov test aaa pop fisub fidivl das mov jns imul cld (bad) mov test addr16 shrl adc mov push repz icebp imulb mov mov or or jg mov test xor xor adc jp mov test stc out push push push sti das or mov popf jne out fsubrl jle rcl mov ds das add cmp test movsl negb add aaa adc fisubr cs xor stos mov dec imul sub sarl add cmp inc xor shrb xor xor clc and mov or cmp (bad) leave mov xchg mov adc ljmp sub frstor cltd daa lock inc out lret out adc mov test out bound xor jae cmp pop sbb jg,pt rcrb dec ljmp dec push sti sar shrl mov (bad) mov call jmp add inc inc ret cltd mov xlat shrl push mov test (bad) hlt stos sub sub xchg cmpsl xchg push gs es jge pop bound fimull mov lds or (bad) data16 jno cmc ds pop repnz xlat jmp loope or pop add mov mov ffree in cs sbb mov xor insb sahf addr16 xor mov out mov xchg in dec pop jae adc repz sti imulb or aad lods sub pop icebp nop dec in pop fdivr sbb adc sbb (bad) icebp mov and adc mov add pop inc pop pop jl and (bad) mov add repnz nop pop xor test cmp in movsl push aam jne stos cmp iret mov or cli mov mov cmp adc test lret add bound call lcall pop push shll sbb shrb sub xchg ret pop movb adc or pop or jbe clc lret loopne std mov xor mov ja inc (bad) sub mov and mov nop xor int jg sbb push lock inc inc loop movsl or sub out sub jmp clc push or (bad) pushf pop xlat sahf inc data16 lock imul imul sub clc mov das loop mov and xchg pusha addl inc sbb xor ljmp testl pop and adc jns and lret scas (bad) fistpll scas fldl std mov pushl and and clc dec loop sub jge cmp arpl cmc mov sbb sarb xchg jb sbb (bad) sti add dec or pop loop lret mov sbb popf push xor push je push pop cwtl fs sahf cs shr outsl lods add mov dec das mov add pop cmp lcall add cmp or icebp lahf fmull inc xor (bad) xchg stos mov push inc lods jbe push inc add jecxz add or dec mov (bad) push adc mov or out jp jo xchg dec adc popa jno,pt add icebp add mov call or or outsb iret add je cltd (bad) cmp pop enter mov dec mov (bad) call test mov sub inc mov jb mov mov jmp jb mov jnp gs adc inc mov lea push mov out sub mov jae mov adc push sbb ss ds stos je dec cld sub imul out (bad) dec jp test jmp sub rcrl (bad) lret xchg sub jns outsl mov sub xchg idiv lcall pop shrb cmp sub bound inc xchg push xor mov sub gs call insb in add mov adc xor pop sbb and les cmp pop in sbb cmp stos data16 nop shl adc mov jae add jmp ss ret fiadd inc mov test stos aam aad or push imul adc mov nop xchg fildll adc mov test mov mov cltd je scas cmp mov or and push ficoml pop mov mov sub inc pushf outsb sub das mov push and mov rcrl mov xchg push movsl mov mov xlat push push sub imul cmc push decb fwait mov movsl push xor xchg outsb push mov xchg out mov pop adc jae lahf mov (bad) into adc or scas data16 mov fistl dec ljmp add xor dec aas rcll call mov sbb sub push ljmp adcl leave mov in mov xor pop fcoml pop lcall (bad) test lret and scas mov or mov add inc ja xor aas add ljmp ret add jo mov push mov adc imul dec xlat lds sub ja movsb sub in and stc test sbb clc aas lahf push adc pop icebp lods mov lock lea lret and xor mov sub adc mov test sub inc daa add push dec and mov mov repz pop in xchg jecxz and (bad) jle pop or sub loopne cmp xor enter test (bad) jb xchg sbb out cmp testl inc cmp xchg ret testl fcmove or pop popa inc lret outsl fstl lret xor mov (bad) (bad) cmp lock dec jmp mov push xor pusha add push sub arpl test mov sub or push xor mov in dec jo inc add adc jns mov cld sahf mov xchg or add clc adc cli icebp ljmp out xchg mov inc pop ja adc jae mov xlat xchg das lahf pusha dec push dec fisttp sbb cmp test das lcall mov mov clc mov and loop (bad) stc push push test xchg mov mov mov push lods (bad) dec popf push xor mov cmc mov xchg xchg jno xchg rorl jno je pop loop xor and xchg sbb in lods xchg rorl and rcl sarb xlat add mov idivb movsl xor inc pop cltd jg and cld mov xor aaa popf push (bad) xchg loop out mov lods or or mov cmp jo daa pushl inc fadds push ret sti and lock or notb cmpsl pop inc and cmp leave sub inc or sbb and dec jg xchg mov mov mov andl scas into out push lahf cwtl stos aaa mov stc repnz test push movsl jmp rorb dec cwtl mov and das test movsb stos std dec lret pop xor push icebp aam call inc mov data16 sub jmp (bad) jecxz pop fbld into sbb jmp fimull mov int3 pop negb pushf push bnd push loop in cmpsl aad push das sbb neg push pop dec push add enter out jecxz jnp nop push mov or decl dec jp mov inc cltd dec insl or mov pop adc sub dec ds xchg pop sbb mov pop (bad) sbb les (bad) jne push ljmp jae jmp icebp add dec xchg sub inc inc cmp les clc cwtl xchg mov adc into scas fs scas adc cltd movsb sti or add xchg scas into arpl sbb clc and sub sub adc roll pop xchg push cmc jge (bad) lock and push icebp pop loop leave adc adc out and mov push dec fstpl pusha mov and or add and bound icebp stc fldcw and fldcw popa pusha cmp cmpsb jbe pop add jae sub sub push lock dec cmp dec pop imul push jb adc mov lret mov mov jb jle and es sbb call ret add mov out shll bound xlat mov outsl mov dec (bad) and xor das jmp daa lret bound icebp es ret sub std popa test pop out fs mov and mov cwtl inc lahf repz inc push adc or xor inc dec imull fidivrl sub stos aaa mov or xlat xor xchg sub pop xor add cmp popa cmp and ret aas mov and sub imul (bad) into test movsl out xor aad inc mov cltd mov movsl jecxz mov mov push pop repz ljmp xor pop xchg loope or and jge rol (bad) das test mov sub or add movntq sbb xchg cmc sub ljmp push jns std jns cwtl aaa incb sub or aas cmp add fmulp (bad) dec and jmp pop lcall and (bad) sti mov and incl pop and je jb fisubr leave jge mov dec add xlat mov loop sahf repnz stc xor roll icebp mov pop pop (bad) (bad) int3 hlt fimul leave mov add (bad) and mull out pop mov pop sub fldl or push sub sbb pop fsubrs mov stos sub fdivrs sub fsts xchg call pop pushf dec jmp rorl dec sub data16 cmp imul popa test and in xchg fwait scas rcl push fnstenv xchg (bad) xor add push mov mov add clc or mov sub pop pushl rorl ljmp gs add add fidivl and dec or movsb inc mov dec dec lock xor fadds outsb mov sbb mov jnp push mov jle imul andl sub clc xor push push cld outsb insl push inc dec out fcmovbe dec (bad) jb cmp mov pop inc pusha xchg fcmove adc ljmp cmp repz out push sbb mov pop mov jmp xor lea push cmp rolb stc or xor adc ds sbb rol fdivrs push xor (bad) enter sub lret and add ret push (bad) scas addr16 adc repz add and sbb inc push movsl push bnd cs mov pop xchg and cltd out rep mov daa sub push lea mov sbb out sub add sub or jnp cmpsl or adc dec leave clc xchg xor aas sub dec dec mov neg rcl sub mov out fs fnsave xor dec push dec (bad) xor xor pushf push fistpll xchg ja imul lcall jmp and xor jp setl adc mov fcmovnb adc scas bound push hlt fadd repz pop add fidivl jmp dec cmpb scas idiv dec adc lret push pop and mov iret xchg shlb outsb (bad) es idivl data16 aaa lahf ror aas lret out push xor adc mov jmp ja sub and pop mov mov mov or pop mov fcoml daa je pop pop pop dec leave fist std cmp jecxz dec stc pop cld jp je push loop xchg icebp das and ret xor sahf push aam add dec sub push das sbb dec mov rorb pop mov pop (bad) dec add pop push or xchg imul dec push pop scas mov sub pop push leave in dec mov sbb push rorl push jecxz mov jg mov out (bad) xchg mov mov (bad) jbe stos xor lret or sbb xlat add jbe mov mov enter sahf jb jbe imul pop pop and push pop xchg or sub pushf in xchg push mov mov daa jno inc mov push dec (bad) arpl jmp aam mov pop fsubs jns inc iret mov js out sub icebp mov dec and flds roll and cs call add add mov cmp mov xor push scas insl subl sbb add stc sub add cmp pop roll fsubs pushf push add mov cmpsl repz xor sub add pop or adc xor call add and mov sub adc sub add loop fs and add push lahf lds and mov (bad) xor (bad) test cli jne in fld ljmp sarl mov and mov jo sub add push jmp mov in mov insl push notl out jne shll (bad) rorl adc jno mov inc and push (bad) (bad) fcmovnb test mov pop xchg aad and or shll sbb aas xor mov adc cmp cs dec pop lods xchg or cmp loop adc lea inc add mov mov sub cltd push inc xchg out mov (bad) mov sbb out mov push mov adc (bad) cmp cmpsl (bad) fcmovbe adc mov jge dec xchg mov lret sti adc or sub or leave decb pop mov sub rcrl out push jmp xor pop xchg (bad) scas repnz shll add das mov (bad) lock xchg notl inc lret dec pop sahf push mov pop xor adcl (bad) mov loop sub sub mov (bad) or and (bad) mov mov push ja jp pop dec imul cmp mov sbb push rorb aas xor jns sub movsl dec repz inc fnstcw ljmp mov leave fstpt scas outsl dec pand mov das sbb scas ret div lods imul lods dec bswap rolb mov outsl and hlt add pusha push push fisubr jle in push cmp popa clc xor insl push xlat scas sahf or pop dec pop loope cmp out in in push lcall stc dec inc xor dec out xor test testb aaa dec sbb and cmpsl (bad) popa daa pop inc jge push cmp ret push mull imul stos ja inc mov out ja mov pushf (bad) fsubrp xlat adc mov mov jle push lods das or aaa mov mov imul inc pop add test ret int3 fsts fdivl pop lret sarl iret test mulb mov (bad) fsubl bound (bad) inc in dec inc ljmp mov sub (bad) cld inc dec inc add xor and mov aas lds xchg mov fs jmp mov testb cwtl imul adc (bad) mov repz out popf xor mov imulb loop add add into aas or pop mov mov mov xchg push cmp jno jne ljmp mov scas inc or mov ljmp daa and sbb divb jle lret out inc cmc xor mov je pop xor mov push pop icebp dec xchg add lea add (bad) ljmp jo mov test pop push add mov js jmp nop cmpsb xor xor sbb add mov push add xor and fmul add jne pop cmp negl mov rcrl aaa leave lret out pop xor and xchg popf aam push ret xchg mov add mov add xlat xor mov sti jo xchg mov test mov add sbb sti lret stos sub pusha in out lret cld inc cltd dec dec imul enter mov jmp mov mov pop xor sub data16 xor dec mov jge gs jle jmp outsb ds insb mov mov inc fucomp push xchg insb adc (bad) mov out inc call pop mov sar and repz inc sbb or inc addr16 sbb aad sti cmp and fcompl xor mov mov fsubrs mov and jl add cmp fimul cmp imulb test es int xlat andl idivl leave insb decb jmp or xchg lcall adc (bad) mov and sub sar cmpsl or or pop cli jecxz sub add pop jae and add xlat sub mov gs shrl inc (bad) adc (bad) stc in and add mov ljmp outsb mov stos cltd xor shrb and mov cmp xor or mov xchg std pop addr16 lret mov jg sub mov xchg jb dec fucomi gs (bad) dec das dec rcr pop xor fdivr popf repz (bad) push add sub stos (bad) xchg mov sub xchg fldenv imul dec loop sbb aad push daa ficomp lcall push dec lods lahf add xorl and das mov mov xor push (bad) fcoms push pop mov sbb adcl scas jae mov mov inc dec movsl sub or movsb mov movsb ljmp pop ds sub push ret test int loop and push add xchg sub sub pop sbb movsb cltd (bad) ds out pop mov (bad) fs (bad) ljmp xchg xor add das repnz or fimull mov negl jmp cmp xor ret dec push and xchg mov fbstp hlt push dec xchg cld or imul push and xchg bound mov jp shr popf jno inc out pushf shr mov or and push jp dec mov pop mov and test push (bad) sub adc or (bad) dec fs cli stos jb cmp ret dec pop testl cs mov mov inc add int and sub or xchg and mov sub push dec mov jg xor mov ljmp xchg vpaddsw mov mov push inc add ret in scas sbb outsb out daa lcall lret popf shr inc jecxz jge jle add pop out mov stc sub shll jno imul jge fdivs or cli mov int enter repnz jno dec mov jae mov push or fwait int3 or ret (bad) jne fsubrp fs or jbe,pt dec aad and notb inc in divb (bad) xor scas pop jnp sbb and pop out sbbb (bad) mov dec daa sbb push or mov inc into scas add (bad) sub das (bad) pop jp (bad) mov xor adc negl add adc repnz lcall cmpsl cmp xor dec jmp dec or rolb mov mov or test stc icebp dec ljmp divb adc sub push jb mov mov jno xor push repz xor inc xor cwtl push or pop addr16 dec cli xor sti data16 add add jl dec mov dec lods pop and mov add mov add jg push or xor jns inc ds outsb outsb mov (bad) xchg int3 out (bad) pop cmp push pop push ret pop or pop xchg int3 sbb pop sbb mov cltd cmp ds outsb sub push push movsb out icebp call (bad) popa mov sub and movb mov mov sub mov jno dec xor pop sub loope and jl or fstpt out loopne (bad) mov ret push xor jmp fnsave (bad) xor test inc clc outsb cmpsb sbb lret lea fdivs or ficomp sub lods or adc sti pop jns rcl iret mov jmp ror andb and xor and xchg jmp sarl out movsl dec loope jmp cli xor mov ret pop ret push sbb aam push leave cli lret sub aam (bad) fdivr and pop jo js data16 out and jmp sub mov cmp push popf (bad) xor sub (bad) sbb repnz inc dec fdivs push movsl aad outsl xchg fnsave jnp mov push pop add or dec mov fwait sub jmp cmp fs cwtl call cmp add sub jb xchg jnp fs sub xlat mov sub imul lods insb inc dec dec mov inc push dec mov xchg mov dec pop mov push icebp sbbb lret xor divb or jge mov shll xchg (bad) repz dec loopne pop vpmullw sahf dec iret call mov fbstp xchg adc stos popa jbe xlat inc lahf push sub inc testb decl mov adc mov xchg jecxz pop stos dec xchg out gs icebp inc mov mov add outsl jecxz ja add mov jg sti xchg fimull test movsb scas mov mov pop ret adc push pop or xor decb mov and scas mov or inc xchg pop pop bound out ja sub es inc push mull push test sub call push mov jmp push aas mov mov xlat inc scas aas sub sub xchg inc mov lahf dec mov sbb pop dec sbb dec ret out (bad) adc lret clc hlt aad add outsl dec test sub jns das jg std dec out adc stos sbb ja nop pushf into or ss int inc pop stos out mov add add sbb xchg popl sub mov adc sti addl sub jb test sub sub jge popa int3 jg pushf jns xor inc sub imulb push xor adc xacquire out mov pop inc imul out scas sub test xor xor mov leave fmulp jmp mov mov aaa imul sahf pop sub incb je add adc andb sbb outsb in cltd xchg adc fstp sub xchg stc add sub mov pop mov repnz xor stos (bad) mov mov jge mov mov mov sbb out test aas mov ja sub jmp cmpsb aad pop and iret rclb movlps shll pusha and in dec xor xor mov jle fsubrl push popf push or repnz push pop test xchg arpl pop into pushl popa push popf shrb stos jb out aad mov leave ljmp push repnz inc icebp icebp jecxz sti sub push mov ss pop lds sti mov adc inc mov dec and fstpt (bad) mov xor sub test inc xor cmp mov sbb popa fimull cli jnp imul fnsave mov into xor idivb arpl xor je jmp add loope lods cmp daa adc xor sub in mov jmp addr16 pop pop mov sub addr16 iret lea enter fsts add mov mov repnz in jne push imul lret fldl icebp ds lock test and or leave movsl mov scas lret xchg dec (bad) fdivs xchg cmpsb dec mul cmc xchg lods mov add lret addr16 mov push in pop jmp sarb mov mov (bad) test lods adc fbld outsl cs ljmp mov adc xor sub cld aas mov rcrl adc adc pop jae pop pop fs ficoml adc out mov lret sbb dec xchg adc xlat addl hlt scas sar and sub orl sub ljmp fs (bad) cli fdivs pop add push adc xlat dec lock pop xchg dec xchg cli cmpsb mov shlb jae es das fldenv adc std lods test shrl xchg out adc inc and jle faddl in and ror mov cli and inc mov cmp cwtl mov cwtl cmp sti xchg ds in push adc repz imul ret dec inc inc stos cmpsb xchg pop test leave (bad) frstor daa or or jp xchg cmpsl cltd add cs lods ds pop lods out dec inc mov sbb xchg fdiv pusha mov inc mov (bad) repnz sub inc (bad) or into mov out rorb (bad) xor and push ficom mov fs mov jp (bad) sub ds ja mov pushw sbb pop testb dec fsubrl fist push bound repnz fist xchg xchg pushf ljmp lret xor cmp repz test push add daa jmp popa gs dec push push stos xor sub xchg dec mov iret jbe sbb fsubs mov pop dec aad mov repnz push shr and clc jnp or mov push aaa cs int3 dec ljmp fidivl sbb lret rol cli cwtl jg mov sub fldl sahf rcrb mov xchg test mov sub mov int3 js clc (bad) mov xor fcoms (bad) dec xchg xor cwtl ljmp push lahf loop push adc popf bound adc imul shr iret stos pop stos je out mov and in xor jmp sub mull iret xchg lds jecxz dec lods mov ljmp das xor pop jmp lea outsb mov test iret out dec sub test gs add cmp jne sub test adc adc outsl cmp pop mov or jmp add adc sub test dec cmpsb mov paddusb dec jmp dec or cli cmp and (bad) xlat rcl xor loop inc and ja pop fs mov adc push movsb mov xchg (bad) stc jae insb push inc loop jbe xor push push stos outsl add mov mov cwtl inc out or (bad) and (bad) cmp shll dec rorl xchg adc lods mov mov cmp loopne and lret mov jmp mov shr dec repnz and ror xor loope imul push stos rcrb (bad) fs scas cwtl mov and test mov cmp (bad) ds in adc and inc mov pop insb out sub ds push ss mov mov push stos fstl jle repz cs dec sbb mov pop ret imul adc sbb add xchg sub or xor mov es jp pop movsb xchg outsb scas cwtl imul mov sbb pop sub mov int3 fyl2x mov (bad) push mov je push ljmp or loope xor cmp xchg test (bad) or ljmp mov sahf adc pushl pop push mull dec xor movsl xor sub or mov je push cmp xchg jg fidiv add mov ljmp outsl aam mov and aas rclb (bad) rcrb sub sub test xor inc fcoms lret xor mov scas daa mov (bad) shll jmp lret push xchg pop xor jge or testb clc aad adc (bad) mov push xchg push xchg cwtl mov out cs std cmp fstpl jns push ds out dec pop mov aas test sub push adc movsl aam (bad) ljmp or outsb mov lret in mov pop xor mov dec mov out imul mov pop int3 mov add inc xchg jns,pn pop adc xor or inc fistpll in out sbb loop jg xor bound lret xor insb or xor jae mov add xor sti dec lret icebp (bad) mov or or out and inc add push cld pushf sub nop mov pop sti pusha sub xchg push add addr16 dec add stc inc in cli xchg scas dec lret test into div lret add and xor call cmp lret stos pop sbb cli cmp inc push jmp pop xchg popf cmp jne xchg imul mov test (bad) (bad) dec push push lods stos in xorl les call push cmp pop andb (bad) pop movsl movsl stc outsl sub outsb lods iret dec (bad) cmp sbb (bad) test fs lods and (bad) sub clc daa in dec pushf shrb movsb xchg push aas mov mov out (bad) xlat pop cmc fnstcw mov xor scas or sub pop jmp sti (bad) negb sbb mov jmp inc mov mov repnz xchg push (bad) jo orb ret pop scas xor push mov pop or ret leavew adc pop mov outsl mov dec or out test hlt add push push nop fmuls bound jge lret xchg ja loop add or rclb or lock pop mov imul cld push lret std or lds leave sub jle push iret call jle jp pop das dec and xor xor jbe dec roll loop adc mov sahf fs mov mov adc inc adc mov sub cmp add aaa dec xchg jae adc dec test push mov mov push adc ljmp stc push stc xchg (bad) sub push adc sub sar jb pop ja idivl movsl test add and sbb sbb sahf shrb fstps mov dec mov incl idivb adc repnz ret xchg stc andb and nop jle xor cmp mov fldenv jge and or out mov push fs clc std jmp mov out cmp pusha aaa add loope jecxz and imul sbb pop or pop scas or adc inc adc lock (bad) bound (bad) or sub mov faddl je jmp gs rcrl jg lock bound cld gs mov ja adc xchg mov xor outsl jno add aas mov outsb lods pop (bad) mov sbb cmp xchg and ljmp and jne cmpsl adc mov mov or roll outsl xor mov mov jns (bad) ljmp out xchg repz shlb ja and mov fidivl lods daa dec lods mov leave std xor ret cli push fnstenv xor mov jbe (bad) xor aaa (bad) inc leave mov das jecxz or mov sar mov fildll (bad) sbb and das jle loope pusha fist iret mov dec mov test test lret aad mov xchg lret lcall inc adc icebp push inc sub jo pop sti ljmp sar or aam (bad) inc loope,pt aas out lret mov (bad) jmp loopne inc repnz cltd add in stos and cmpsb sub adc lods int xor xor xor loop call pop inc fidivl out cwtl outsl and sub in dec rclb sti xor sahf sub xor mov sahf mov push mov push sub and aad hlt aaa cld test adc add xor mov fstl cld pop pop xor sti xchg sarb push repnz pop jmp into jmp lcall mov cs or or jecxz fnstsw icebp cmp xchg add mov push cmpsl adc clc add mov ret add pushf lods or and sub dec ret sub push push or test ficomp (bad) lcall pop mov jbe push ret (bad) mov fidivl ljmp (bad) sub pop (bad) shll or lahf xchg xor stc cmp je int cmp add mov es xchg cmp pop iret bound sti jg fs xchg adc dec fwait mov call push sub shll repnz (bad) mov mov into push movl or pop fnstsw (bad) mov dec sbb das pushf sbb negl rcr mov inc inc xor cld ficomp out add push cmp fist and out lahf test lret inc ja test aam adc xor icebp push xor cli repnz mov or mov jge sarb (bad) imul and lmsw imull clc lret divb (bad) jno movsb mov push cwtl dec push push and sbb mull out jb jl leave sbb ja cmp add sub inc pop xor dec mov add xchg push xor into (bad) xchg icebp ljmp loopne and fcmove cmp add and jo and imul outsl fiaddl in test xchg mov out insl and test jnp in sub sbb pop bound mov hlt call push or in aad mov frstor add cs mov leave aad ret into lcall (bad) cmp fiadd add fldcw cmp test mov sub pop xor idivl lods jp and and loopne xchg push mov xlat into mov jo and stos mov les mov xor cmc mov xlat icebp jne sbb mov cltd loop stc mov push xor cli dec cwtl icebp jne mov dec mov pop fild mov mov mov push jmp test icebp outsl mov (bad) cli shrb insb xlat mov mov dec and add and mov xchg rcll dec dec xchg lret fs xchg mov ret or mov rcll add les enter (bad) imul sub xchg loope cwtl add mov and in lret enter jmp sbb xor push inc aas leave imul jns imul push in mov mov sub cli mov cmp clc (bad) mov mov outsb push push sar add pop pop xchg in and pop arpl jbe mov cmp push ja je cli cmpsb cmpsb jle jl push mov sarl call dec xlat sub adc iret xchg stc add mov notl mov dec iret mov xchg ss mov adc lret addb push add test mov and pop cmp xchg jnp push push xchg or mov xchg lods dec pop sub inc paddb jae xchg and movsb xor fsubrp sti cld pushf or daa push push jnp aas and push cwtl push rolb dec rcll push xchg fildl push dec inc pop out lds add xor stos jbe sbb ret (bad) imul icebp mov pop push lret sub dec dec sbb and mov and mov sub mov mov fldcw pop (bad) in scas ret ret sbb ds stos adc push mov mov sub dec cmp and sub inc mov inc dec mov aad aam jmp xor out adc dec pop pop and shrb inc orb aad mov pop mov cmpsb test and test fist mov loope data16 sub mov test (bad) movsb insl and leave lcall mov ret movsb add mov js jno in sti sub mov (bad) fucomip repz dec sbb fldenv rcll mov rclb jmp sti jg js mov sub pop stc sub sarb out sub jb jmp out push mov mov lret pop into subl xor ds sub imul (bad) mov jmp cmpl les xchg (bad) mov jg negb (bad) test repz inc nop insb and das mov pop mov push jne or xor rclb mov lret sub add add cmp and or repz inc xor push test icebp sub leave mov and pushf int3 or fbld (bad) fstpl dec hlt sub mov out out movsl aad sbb cmp icebp imull jge push daa adc mov or dec fsubr ljmp mov mov test popf inc sahf mov into xor or xlat inc push (bad) clc pop jns dec pop lods jmp into out xor adc pop loopne xabort out lahf push or sbb xchg sub in pop fcoml xchg dec push mov mov notl cmc push jmp mov ficom mov icebp add adc xchg loope lret sbb imul and lock pop jp cld (bad) (bad) and jg cwtl add cmpsl fs and test nop (bad) mov xchg loop out inc mov ds sub mov out clc mov cltd stos call sub sub lcall mov ficoml cli fsub repnz adc mov add cmp jmp (bad) push xchg xchg test mov out fwait cmp xchg adc jmp pop jl push jmp lret mov imul loop and imul jle lret mov mov jnp push sbb outsb sub dec paddw mov into int3 inc aaa sbb cli jae mov repz lret dec lahf fidivr in jmp push out insl sti ds mov jo inc xchg into xchg mov cmp cmp fcomps sub jne adc inc adc mov das (bad) jns popa xor sub mov imul daa aas fiaddl sub jns mov ljmp divl mov fistpll gs in bound hlt out sub das popf cmp pop repnz xor or ja dec mov dec or mov jge das (bad) pop scas pusha mov or xchg daa scas inc mov cmp shlb jmp or sub out mov into jg imul cltd iret insl push sub aaa movsl pop in sub jns add scas mov scas mov sub adc cmp pop xchg add out and ds or sub push fprem1 lret popf jle push lds xor mov push pop icebp mov pop pop call jmp inc rorl (bad) cmpsb bound dec mov push (bad) jae dec xor mov daa test dec sub sti arpl mov out sub (bad) lahf (bad) je loop mov mov out test cli in scas mov (bad) in cwtl push sub xchg inc xor mov decb jo mov mov dec jne out pop or stos lock leave xchg shrl js dec (bad) fsubs sarl jno and or xchg mov cmp xlat jae daa xchg pop repz adc cltd insl push cmp jmp lds (bad) sub xor imul imul lock dec and sbb push sub rcll adc out cmpsl xchg adc test mov fcom cwtl xor icebp daa and dec popf clc and cltd jno sub (bad) int3 lret mov lret push push mov cli loope inc mull fsub pop or xchg adc pop mov adc mov mov gs and pop adc (bad) xor inc sahf xchg sub pop jl push jg (bad) mov xor xchg xor sti loop xchg jmp mov add and (bad) fnop call imul adc mov xlat pusha sbb sub sub sub adc xchg dec mov shll inc imul pop sbb jnp outsb xchg pop es imul cli adc mov rcrl mov fidivr cmp sub mov mov (bad) fs sti int jp push push xchg scas xor or (bad) je jmp and (bad) repz mov lds or xor xor (bad) pop mov xchg ret mov repz and stos imul xchg cmp sahf and push push idivb and out fsubrs pop push repnz fadd sahf ret mov xor (bad) popa in ret or xor mov test cmp mov ss add ret and or leave divb pop pop stc loope and jg xor cwtl cmpsb in inc add fisttpll outsb cmpsl push dec inc xchg fisttpll fsubl mov sahf sub mov hlt pop or mov enter loop mov mov fistp mov pop stc add mov mov mov gs aas daa sti jne mov dec stos addr16 fsts sub or push (bad) xchg pushl jg cltd inc jle inc mov push add sbb leave mov push rcrl ljmp mov jnp pop cmpsl ret jns dec push sub mov fstl fs loop aam pop ljmp jo rcrb dec ljmp push mov pop es dec mov or repz or add pop lret adc arpl pop test (bad) ljmp lret sbb push scas xor mov add lahf decb ficompl push lods jno mov mov mov enter rcrl imul mov and out sub pop add call mov cmp stos mov (bad) or xlat or mov pop (bad) dec dec sub mov mov ds dec xor xor jge sti fisttpll add adc shll aam cltd inc cs jmp sub xor sbb fcoml push mov jmp dec push jmp lret sub mov les add mov push lcall and loopne pop mov mov add and sub jg scas xor repnz mov adc sahf sahf lock mov add xchg inc mov in cli and mov sub mov and push push (bad) lret xchg ret push cmpsl pop outsl mov xchg inc (bad) xchg pop xchg cld cli mov sub xor into dec sub pop sbb sub ja jb in mov dec je add jg test dec cmpsl push adc leave mov lahf jns insl jo lods js movsl push cmc dec ljmp (bad) and xchg (bad) pop adc lods daa into cli repz outsl mov fnstcw mul das cmpsl repnz mov adc lret loope imul lds or mov lock or push jae xchg or sub xor out adc sub and xchg pop mov pop cli fnstcw jne,pt mov sbb fnstenv sub jae ret scas mov sub mov jne mov imul imul in dec xchg inc (bad) fsubrs xor sti xchg out stos cmpsl or lret lock cmp push lds out pop xor mov cmp add or xor add scas out dec sub icebp shrb pusha pop jp sti leave mov pop pop xor daa jge mov insb jo scas addr16 addr16 stc and and cwtl daa loop xor lret scas or mov jne es or dec cmp (bad) xchg push fbstp inc and sbbb std xchg push (bad) and inc push or jnp and fsubr fidiv xlat popa pop add outsb mov mov dec mov movsb in stos mov jl in push mov ret xchg ret lret in lods dec out mov into jmp pop xor call mov inc or jb (bad) fldt iret or adc and call repnz and mov (bad) push dec xor (bad) lock cmp mov clc lret (bad) cltd (bad) cs sti mov sub sar mov jns dec loopne sub stc lret arpl addr16 data16 xchg ja xor pop icebp mov lret xchg stc cmpsl leave in daa xor push in adc shlb subb pusha sub mov mov dec scas sub popa aas (bad) fnsave add mov pop fcoms fiaddl ljmp adc add cs aaa xor xchg dec sbb sub rol or pop pop mov pop xchg jmp mov sti xchg scas xor sbb fist mov clc sub dec das adc pop int ds and std shll pop gs icebp dec mov xor cli jg jbe icebp xor je not (bad) cwtl std ret push or inc daa jge xchg add loope nop inc movsb pop xor mov xchg iret ljmp add xlat sub loopne sti fldenv cwtl das mov fcompl or scas or iret loope out rorb sti leave out into mov lret (bad) popa scas cwtl inc clc add in mov divb aas cwtl pop insl mov fcmovu dec mov rclb cld jns cmp and call iret scas adc add arpl and dec ret xor and sbb jne cmpsb push dec stc push ret test xchg jmp leave iret sub insl mov ja sbb xor cmpsl movsb jmp mov call add adc (bad) pushf or mov cmp out fisubr enter push mov rclb add ja adc jno (bad) xor mov push adc clc dec cs test inc jne and ds mov jmp ret mov loop mov pop xor sarb ret shlb leave fidiv gs fistpl and test scas sub inc das sub ror xor test pop inc cmc das mov sub add push pop sub and mov and mov fdivrs sub je mov sub sbb mov dec xor loope fisttp das std mov adc and or push xor lea (bad) ret mov outsb sub ss lcall repnz mov daa mov xor dec inc stc cmp push (bad) pop or mov outsb mov mov add fld push jg sarb lret cli fldl2t jle negl popa movsl mov rorb pop adc xor cs inc or xchg or ss fadd cmp dec jg fwait inc int3 jecxz dec movsl cmp jne dec adc jmp loope cmp xchg fistp push clc popf push shrl in lock (bad) inc pushf enter sub add (bad) mov sub mov mov insb pop and nop cmp sub (bad) daa add stc or pop mov pop inc or jno ret test or dec mov mov pop imull shr dec and ret lods cld adc ja pop sti sub scas and push push mov xor jno pop xchg test rorb jecxz pop call push jp xor cmpsl mov dec js mov or aaa jmp fsts sub data16 loop sbb loop,pn aam add or ret and (bad) idiv repz mov mov setb pop xor sahf inc dec jmp rorb xor daa inc popa das xor (bad) sub push sub jl ficom mov cmpsb popa sub inc (bad) ljmp bound pop sbb jns scas (bad) out nop mov notb xor mulb mov add ljmp mov orb add lea outsl test movsb push add jle mov not icebp pop push add add mov xchg dec stos gs mov enter sub leave cli mov sub push or lods jmp iret mov sbb jmp dec push sub push jae push pop scas inc xor rcll mov xchg add jno push ja add sub pushf pop mov das sbb dec jge out les add imul mov rolb out sub ds pop mov fwait test call jp mov xchg stos pop push push push push mov mov stc cmp sbb pushf nop imul sbb dec mov add mov cwtl rcr lahf loope into jg inc add cld andl push push xlat rorb mov pusha push (bad) in jns in jmp sbb (bad) stos ljmp jb pop jmp push std jns ja mov pop scas mov dec out daa (bad) jg push xchg aad jmp lock cwtl std ljmp incb movsb dec std dec mov sbb das (bad) mov jg cmp cmpsb stos imul sbb push lret add cmp out pop fcompp mov ds cmp cmc loop lods xchg rcr mov cmp lahf xor lret outsl mov in sub xchg bound clc inc cltd mov push inc mov hlt aam (bad) or test insl jl dec out shll mov sarb je stos pop jge repnz fmuls mov dec mov xchg test dec out jg jge movsl cld scas or mov sub jnp nop sbb repnz das das int3 stc mov adc cmp insl pop sub pop xor das xchg leave std lret xchg mov div cs xor mov and or pop xor and mov cmp ret into leave sbb xor out stos jne mov popf adc jne test xchg cli loopne pop xchg lds addr16 fucomp xlat in sahf shlb mov add pop icebp popf call jle add data16 das stos insb jge aas imull loop add xor les fnstenv call shll lcall push lods inc sarb fld mov aad mov das (bad) dec lcall cmp fs mov test or notl lock mov fwait daa cmc cmp (bad) lds out xchg adc out mov pop sbb lahf jp cmpsb les or dec jg arpl push les xor cmp test iret stc test loopne je mov inc jmp push cmp dec adc je fmuls ret (bad) js rolb xchg test aas lret pop cmp mov push mov or scas lea adc fsub dec push loop dec pop and cwtl pusha mov and sub rorl xchg sub and mov stos mov and xor cs aam movsl aad push sub popf fisttpl adc movsl movsb cmp jmp xchg repz repz pop loope gs std (bad) aas adc rorb sahf jge mov sub popf lcall jg jb (bad) xchg sub jne ret pop xchg cltd push (bad) or imul xchg dec cwtl jb inc add test cltd mov mov or cmpb sub and bound pop (bad) fnstenv movsl xchg bound idivb or jae pop fstpt in pop inc inc js pop adc sti ljmp leave jge insb scas inc xor pmulhuw ss inc xor daa scas dec mov mov stc lcall lods fs push adc dec ret out xor mov movsb cmp mov pop sbb mov cmpsl lods pop mov ficom push (bad) sub xor add leave cli fimul cmpsl dec or mov lock push out negb mov xlat lds in insl movsb cli repz or mov xchg das xor ljmp cmp push sub jecxz add jb sbb xor dec and sub mov sub mov or xor aas dec repz pop test dec xor jmp lret sbb aas pop push (bad) jo popf notl or stos adc test fsubrp jne pop xchg inc test das jne stos jle daa sbb popf icebp and push sarb loop ja pop pop loope repz xchg mov inc or out and movsl stc (bad) mov cmp sbb (bad) icebp iret imul sub mov lret add psllw das and xchg subl pop pop cmc dec mov adc and es xchg xchg lock flds and aad negb sub mov mov xchg (bad) mov inc shr das sub test and js pop add (bad) pop push adc fdiv xor cli and (bad) push jg lea ret mov pop jbe leave js xchg jp pop sbb mov addr16 sub es mov mov out jb leave jge das xorb daa test lahf addr16 and aas dec call adc sub (bad) jne scas lret stos sub pop jmp dec leave mov inc icebp jecxz jle loope es or xor das je (bad) xor or inc push and xor ljmp sti cmp iret out ja xchg out mov xchg scas popa ljmp mov xlat gs das sbb dec or push enter add clc push dec sbb push stc push cmp dec sub push pop lea hlt dec pop (bad) push mov popf jle sarl out jp ds icebp dec das ljmp jae std (bad) xor pop xor cs ret fwait in lea push xor test and push popf int3 cltd cmpsb mov cmp rolb je icebp js je mov xchg inc cmp mov xchg hlt jne sub bound hlt mov jp negl xlat frstor xor rcrb dec imul (bad) mov cli or (bad) xchg pop stc decl call xor push repz int3 das push lods add dec xchg into mov sbb jecxz xor mov push fistpll add sub xchg jmp in movsb gs movsl cld rolb dec mov lret repz add pop pop and push jbe push cmp xchg out test mov xor sub lds add sub mov movsl dec pop mov loopne add pusha or dec sub mov inc or and loop imull pusha pop movb mov pop shrb into lret movsb stos test loop ffree test mov mov aam shr sub xchg and clc xor mov pop sub in pop aam les or dec push inc jp add push or sub sub jp dec mov jns inc or pop jbe push xlat dec movsbl or (bad) push add add jge xchg mov sub push fldcw (bad) mov jle sub popf das js inc mov lea and lret add jne outsl mov mov sbb and loope test (bad) sbb lret xchg repnz (bad) xor incl adc aaa ja roll cmp sub (bad) popa ds inc cmp movsb scas orl es dec mov cmpsl mov xor aas xor out bound cmp or dec or and mulb sti cmp (bad) mov jne mov add dec mov sarb dec mov (bad) mov cli mov std pop bound or jno inc add dec fcomi ds imul iret ret ja js jae movsl xor movsl jmp inc popa dec sti (bad) or lret sub mov divl cli ljmp jecxz stc out adc (bad) pop repnz xlat inc out xchg icebp dec dec mov jg mov js push add xchg aad jne (bad) adc fldl cmpb mov lock xchg in add sub lret mov dec scas mov cmpsb loop adc lret and stos add push movsl add mov sub ljmp mov xor ret adc xchg push out fsubp adc sahf sbb icebp add mov or pop add sbb adc repnz sbb mov lret add cli mov jg push xor inc ret icebp jns fnsave xchg loope mov dec push inc push aas imul (bad) or je call jle ja jne stos (bad) cmp sub movswl mov add add or sub xchg xor sub pop call cmp fsts dec pop mov shr jns out and lret dec mov jmp das xor fadds add nop push ret jb sub clc xor jmp sbb adc pop rcll sbb and mov xor lahf ficoml or xchg push ds sub add add adc dec push shrb mov add rcrl pushf bound xor fadd loop xor cmp (bad) sub cmp popf pop mov lock jo add and stc pop (bad) mov jmp lods scas lret es lret arpl mov xlat xchg std xchg jl shrl out sbb or hlt inc jmp push js mov loop icebp sti dec or sbb sub leave leave cmc jno dec sub xlat sbb popf (bad) pop imul mov clc outsb mov fdivrl xlat push jmp push add cli sub xor xor add xlat mov mov jmp sub cmc lds lods mov pop mov lretw xor cld push aam int3 and jnp das or (bad) sub rcrb enter jmp mov shrb mov pushf sub mov scas or jae mov fistp inc call insb push dec outsb pop cs loope add and loope push pop repz dec xchg jo rcrl stos sub shrl cmpsl jbe pop divb testb daa adc sub rol int3 xlat (bad) mov nop test add movl fldl pop mov jp lea mov jmp cmp jecxz inc mov shrb fidivr iret lods into sar sub or div dec jo cmp out add gs and das mov data16 dec ljmp call push sarl adc sbb sbb popa adc push jne xor daa cmp inc icebp adcb mov test cli mov fiaddl lcall inc sub int3 mov ljmp (bad) test cmp aaa fincstp xor add push push xor adc push jl jns sub xchg mov jg fisub jmp push das sbb xor popf popa pop dec insb cmp aam jnp inc test idiv fsubrl outsl adc cli lret add sbb std push aam xor stos stos jae lahf mov sbb add mov and push and and lahf sub adc sub mov xlat dec sub lret inc jge cli xor xor push out sub or sahf jo add mov add or mov adc mov lock mov jg rcrl cmpsl pop shll icebp (bad) mov inc cli lds arpl add enter ret xlat leave xchg inc add iret or inc mov push inc sub cli cmp push repz std push (bad) out (bad) icebp pop call cmp mov fs outsl add insl or mov sub fnsave cmp pop lret data16 (bad) and jge adc xchg pop push test adc add pop cmpsb push mov xor adc add shlb jp fsubrs jmp (bad) xor lcall xlat ret add mov xor dec xchg scas lea push jns imul fdivs jbe xchg cmpsb mov movsl orl mov adc sub and add push and mov xchg jb sub out push cwtl (bad) adc dec ljmp jb xchg mov out (bad) sub jae mov rolb mov aaa gs xor push pop insb cmp dec test push imul decl lods fucomp int3 bound pop dec inc add (bad) sbb adc aam jge jmp fcomp xlat xchg mov sbb adc mov fiadd pop sti out cmp (bad) mov pop xor (bad) out sti loop shlb fnstcw add leave and and fisubr icebp cmpsl ds dec lret push (bad) ret (bad) mov inc out cs gs movsl jl (bad) cmp out pop sar ret test dec into or push pushl inc xor xor insb movsb loop xor or xor jb pop mov inc push mov adc loop ljmp (bad) mov mov repz mov push cwtl mov rclb stc popa push daa pop sbb push push push pop jmp xor jg repz jp push inc dec and or es mov jae push mov adc xor clc xor outsb in mov mov xchg mov xor mov xor insb push xchg clc pop or cwtl movsb outsb xchg outsb cltd xchg bnd xor add cmpsl sub xor sahf adc mov xor adc (bad) cli xor clc and sbb (bad) (bad) rorl push clc dec add xor or sub jbe fcomps cli mov addl xor lods dec xchg enter jnp or leave imul cmpsl and add mov loope mov push or cmpsb mov sub pop dec testb sub or mov and jmp out or jecxz adc fmuls pop pop pop jb ljmp ja or xchg or nop cltd data16 pop pop or xlat ret ret (bad) movsb test and adc lods int cmp repnz or inc pop sahf imul adc popf xchg xchg out sub loope aas loop ficoml cld xor (bad) (bad) add repnz dec and pop mov jns and jne or xchg push je imul insb and es push mulb add mov dec or call xor (bad) (bad) adc dec lock adc dec inc jle ret fst cwtl dec inc mov sbb iret pop jo mov and (bad) dec push pop jmp add push jne cmc adc fstps outsl mov mov xchg imul mov pop or mov sbb aam sbb ret mov or call cmp enter vmovlps repnz mov push xlat inc or cltd jns cmp xchg and imulb inc clc cmp ret sahf cwtl lods repnz mov lods fimul sub and (bad) dec out fiaddl fidivl mov xor outsl mov negl iret or mov outsl bound jno dec ja xorb ret (bad) in xor dec rcr cmp sub ret js in mov outsl lret (bad) xor insl pusha xchg pushl stc jnp cmpsb int3 gs mulb dec clc loopne cwtl jo or gs data16 popf scas stc clc dec jns xchg lret adc call shr mov or idivb (bad) lods nop add jmp push mov jmp sar and pop inc xlat andl rorl call jecxz inc mov dec cli lcall mov cwtl test inc and xchg mov add std mov jae out sbb negb in daa xor mov adc (bad) nop and icebp (bad) into rolb add ret das sub cmpsb ds mov inc and out sub or mov pop xor mov ret pop (bad) (bad) gs cmp cwtl pop notl add adcl ror jbe xor test dec bound inc xchg fcmovnbe and clc movsl pop scas fmuls adc sub repz adc and pop nop push pop xor or data16 xor mov adc add dec push sbb imul sub inc or out sub movsb test dec mov adc fild mov mov pushl repnz mov (bad) sub je sub mov call or lea imul mov xchg icebp out push daa sbb mov and pop pop data16 je das (bad) ds xor jne ljmp lret test nop xlat sub lods shll jae push jmp (bad) inc or jo popf inc dec add sbb add testb test mov lock xchg pop add scas mov cmp add sub mov or mov dec xchg xor cltd jne leave jmp ds push mov jae sub popf into (bad) in arpl ds (bad) icebp xchg aam pop das pop ljmp lret out mov dec leave repz imul jnp (bad) (bad) jb out dec push pop dec sub (bad) daa or jge sti lret idivl pop mov ret push add jbe cmc push imul or mov push cmp sbb cltd rorl cmc arpl add mov adc adc lahf bound jmp stos sub out xchg pop xchg es nop xor mov or pushf jne (bad) shlb mov out xor cmp call ret stos repnz scas repz ret fs out and xor in mov sub pushf add sbb loopne add mov out mov pop imul push dec add ss and add xor xchg inc notb mov fildl pop pop shrl pop loope dec adc lret push popf sub (bad) mov sub (bad) ja enter leave mov out jae ficoml sahf sub xchg jae call push outsl idivb imul popf movsl jg sahf xor cs movsb clc jo mov cltd or jmp xor (bad) ret push jns sub leave sub lcall cmp sbb ret stc ljmp pop fmull or (bad) mov and sahf flds cmp sbb cmp rorb leave dec add lds (bad) mov pushf cmp xchg pop and js lret out in negl repnz and inc sub (bad) leave inc add or aad sti cmp (bad) dec mov sbb cmpsb jle cltd mov les pusha imul pop iret scas xchg enter jg sub mov sub mov das and xchg jns mov imul add mov pop pop mov cmp xchg popa xchg pop pop inc lods jl push gs sub mov mov inc cmpsb das cld dec mov add (bad) add mov pop sbb push xchg or sbb (bad) pop stos xchg je push inc xchg stos sub inc mov mov leave sub xor mov (bad) dec andb jmp jmp sbb testl (bad) mov gs stc sub add sbb rorl xchg sarb jb sub punpckhwd popf jno inc pop mov sarl dec repnz dec mov outsb cmp icebp jl negb and push xor jmp xor jbe out mov cs mov jbe jge xchg fldcw (bad) iret sti or (bad) movsl leave sbb or mov (bad) sub xlat xchg out jmp inc (bad) popa pop xor imul mov jge shr sar mov xlat scas div inc mov scas movsb mov notl jmp icebp gs mov push ljmp push jns sub sub dec out push into aam mov dec cld mov mov (bad) adc lock outsl adc (bad) xor daa push inc mov mov es bound (bad) (bad) ljmp stos gs xor ret (bad) mov push out pop (bad) mov (bad) fcomps xchg inc adc sbb xchg loope or in fist xor sub jmp lret add jae loop xchg mov pop mov movsl mov sub gs push sahf or inc lahf fisub xor ret cmp or cmp arpl cli stc sub mov incb jmp mov xchg andl mov test dec cmp xor jmp xor nop mov or sub movsl gs test sti mulb and xor pop inc sbb mov mov xchg in adc cwtl inc leave mov mov add call pop mov dec adc dec imull xchg push lods or std inc lret mov fsubl or lods or ret sub std dec out xchg or shrl imul loop xchg lods jle jecxz fnstcw test pop or fist or test xlat out dec cli fs xchg or icebp (bad) xchg jg push sti or pop sti jno sub push cs xor rorb cmp cmp loope mov xchg add cmp xchg push loop aaa jae (bad) xor stc or mov push popf outsb xchg sti pop mov push (bad) in and call stc (bad) push jae pop mov sbb xor jl cmp iret icebp shll sub int3 adc lret inc jbe pop lock out and das ja mov and mov iret mov imul mov xchg mov mov cli jecxz sub xchg pop cwtl fs (bad) cmp ds push inc push mov hlt in sub and sbb ret jge push les sub inc push popa pop mov divb sbbl daa into pop xchg xchg add lret ret clc (bad) nop sub pop (bad) xchg ret fldenv cli jo inc add add sbb pop dec movsl mov gs pushf xchg (bad) ja mov pop xor test fisubrl imul fcmove pushf mov xor ret fisub sbb leave add clc rcrl pop daa mov xchg pop testl add push outsl mov cs xchg in leave (bad) test mov dec call push nop popf jl loop adc jg mov sub jge jb mov imul mov bound pop (bad) dec jbe leave pop and dec mov jnp push fisttpl mov push scas hlt movsl jp push cmpsl imul push mov and cmp ret sub daa loope push cwtl adc or lods data16 aaa loop lret and xchg ficom add adc or xchg push xchg icebp hlt negl aad pop das adc div lret inc dec (bad) into iret mov (bad) stc jns (bad) jbe mov mov ds fucomi sahf movsl scas loop rcr pop xor ret (bad) (bad) es add mov sti outsb int inc sub adc (bad) xor xchg jne push jns pop and pop xor push jp pop sub xor sti pop or aaa adc inc adc je mov fs mov mov mov daa bnd cs xchg fldenv stos adcb mov fidivl inc add aad or andl inc pop or repnz jg cs ret sub (bad) xor or cmpsb fimul lahf inc fild ret cltd aaa sbb push xor iret jmp (bad) sbb (bad) sbb jne dec fisttpll mov popa aad idivb enter (bad) std (bad) xchg xor hlt push inc xchg adc jmp lds mov dec inc push mov push imul push pusha aaa test repz mov adc test imul ret xchg mov push mov dec stos push dec adcb dec or fildll cld sbb dec scas cwtl xchg nop dec popf rcl popf in mov or out push jle mov xchg xor jns dec sti adcl cmp sarb mov add outsl fnstsw xor out fist or fsubrp out xchg int and negb rcr call fist mov mov sbb pop or notb out cli add cld add xor add pop push dec cmp and dec rolb cmp mov sahf lds mov push daa jge or mov adc adc je push out pop xchg adc jge mov jns mov push inc popf mov fcmovb outsb jmp incl adc mov sub outsb mov outsb loop nop rorb adc lret mov inc push add pop fldenv lahf pmaxub xchg aaa lock decb xor bnd enter fs mov mov fist out out cmp lret xchg push cmp loop lret iret sbb loopne xor mov (bad) adc xor xor sub jno (bad) xchg insb jns add or or pop icebp xor imul xchg repz sbb adc xchg pop and pop pop in mov push jne lcall lea test out cmpsl xchg pop lds jns pushl or pop (bad) sub mov sti cld or add aad add pop push test pushf scas loop ds inc pop sub test jle pop insb call lret jl gs in xchg clc push iret into pop and mov sbb adc xchg (bad) mov jg cmp sub lods iret movsb jmp aas mov setb dec push nop lcall xchg push call negb xchg adc inc loope mov dec out fstps ret dec mov fsubp lds adc mov jg or and sarl sub mov into xlat sti enter (bad) imul sub in cmpsl outsl mov lret sub loop cs das jne lds stos mov movsb dec lock insb insl pop fsub test or ret hlt mov inc div ljmp mov mov jbe sbb retw pushf sub jl outsl jo add pop mov cs jb xor inc xchg add out das jmp jp sub push clc cmp popa cs iret xchg mov sbb xchg push mov or mov adc out sub fistp xor mov iret jl pop push rcll xor mov (bad) fnstsw (bad) stc clc aad sub fcoms cwtl fsubl idivl dec jp ljmp mov pop mov jbe add push sub cmp push add cmp or mov leave aad loopne idivl sti das fstpl or sub imul decl push rcrb jmp mov outsb xchg dec (bad) mov imul das out lds xchg jmp bound (bad) insb inc xchg pop ud1 xchg imul and aad xchg ljmp movsb sub mov (bad) dec fldcw jp scas sub imul ret (bad) mov loope or adc push jle xchg or xor add add xor incl mov mov fstp out push ret insb add fbstp jne lea mov mov jmp je ljmp loop out imul addr16 ljmp sub test mov mov adcl inc mov in ljmp cli pop mov xchg bound mov inc dec jmp repnz xchg cmp add push sub xor sub pop je pop jle inc sub mov dec add out out loope rcl and daa jge mov dec pop lret scas or divl pop daa lcall leave xchg mov pop (bad) cmp and cli inc repnz sub iret mov pop mov sub xchg cmp pop lret jmp int3 icebp data16 or xchg fdivrl push add mov in mov leave and in mov out pop mov xchg clc push leave stc mov jne jp and cmp (bad) mov repnz fist or dec push cwtl dec mov fwait or xor mov fidivr add ss push lods leave lcall stc clc xchg in jb ds xchg sub sub pop cs aam or adcb popf push or (bad) pop push xchg adc pop xchg jmp jl das (bad) pop add pop icebp xchg pop cld sub lret xchg cmp cltd mov sbb mov (bad) push (bad) faddl cld (bad) xchg scas das imul loop (bad) in pop xchg jae mov iret jne repz dec icebp scas mov dec mov leave and push xlat mov in mov inc jle loopne xor loope push push push fs call sub xor and push outsl imul xchg jge xor adc iret jmp mov lock in dec je scas inc fadd add add cmp repz icebp cmovns and rcll jp dec shrl div pop stc movsl hlt pop pusha xor les popa cltd sub in into sub mov lods aas shrb lret ds rcr mov xchg fbld ret (bad) movsl enter lcall divl sub sub cmp push push mov push outsb cld push sbb jg jns mov jno out and enter lret gs sub mov cld lds cmp loope ds fdivrp cltd out rorw jp mov add out lods js out jmp leave loope mov sahf in xor stos add ret cmp mov dec xchg sti pop mov sub cld pop adc lods jno adc xchg lea mov int3 sbb dec out mov call inc sub add lods es (bad) aam scas mov imul push les fdivs and negb or jge in xor out push pop (bad) sub push pop sub mov xor (bad) sub lods sbb mov add push inc mov mov cs outsl pop dec mov inc mov push test jmp or mov lea xor psubw dec popa xor ss fyl2x jp addb mov inc xor and cmp icebp lret push arpl les adc cltd aad loope mov or iret jno mov out dec jecxz ror mov cld xor mov push xlat mov mov es ljmp loopw (bad) mov xor outsl in cmp pop add nop cmp leave pushf imul fidivl cmp add xor leave icebp ds push shl xchg das mov movb and mov dec push dec fnstenv sbb push xor (bad) sub lods mov in jge pushf daa pop xchg jp xchg fisttp push mov dec sub xchg pop or cld mov mov fucomip gs xchg in sub push xor mov inc icebp adc cmp cmpsb ljmp sbb rcrl rclb xchg scas mov dec out int ds sub call int clc add sub les stc and add imul fistp sub pop pop in lea mov dec jae pop (bad) divb fsubs sti xchg xor mov out pop mov pusha loop mov mov hlt pop cmpsl sub add aaa sub jp pop pushf aaa (bad) stc inc jno and add mov dec push pop idivl in xchg gs adc scas mov lret sbb push fisub inc (bad) scas (bad) test add ja in scas loop mov pop jno dec lret lret add cli pop dec mov mov sub in jae or add rorb ret lret aas jae xchg pop mov xchg adc cltd mov xor cli lret clc and movsl pusha ds inc mov pop mov pop dec ds inc ret push add dec rolb sub xor mov sti jb pop jnp xchg mov movsl cltd xchg fistpll inc in out in jno mov xchg call rcll idiv pusha xor sub pushf repnz outsb je scas repnz sub or mov stos dec icebp dec add stos mov xchg aaa lods pop ffree or nop into dec or mov push loop into into adc (bad) (bad) lock and aad and push lret (bad) rorl or out or das inc in xor (bad) lock das loop aam dec mov shrb push inc mov test cmovle sti jg add iret ljmp mul popf jmp into adc pop mov into pop and ds subl pop aas jmp mov fidivrl test inc dec sub mov call jmp ret xchg inc mov fdiv dec out repz cli cmp mov std inc ds mov xor test dec or fdivrs pushf add std int3 and jns mov loop fist jl mov add repnz ljmp (bad) aad ret inc mov lock inc push popw (bad) (bad) add in int sub add out cs jb mov sub jg add xor mov mov scas sub lret test jl xchg negl lret sbb ret pop add insl sbb push clc xorl xchg cld sub inc mov push xchg mov xor push cmp mov das sarl out push ljmp sti push icebp jecxz adc stc repz dec les das mov leave stc or mul das aad popa add (bad) xor pop mov fist xor jae out into add and pop lret jecxz gs daa add jmp jge mov inc jmp lret pop mov pop push xor mov cli imul adc push jl mov jmp fucomip (bad) cmpsl pop xlat add rclb hlt shll fstl dec (bad) decb dec xor mov nop push sbb add pop movsb inc jg pop repnz je pop cmc mov imul jge dec nop xchg pop sbb cs ja lock pushf push dec sub jo xor js add aad sbb scas xchg pushf (bad) pop jns inc adc sub lret cmp repz (bad) out xor sub js inc mov sub fsubs or cmc cmp fxam pop fistpll test mov aad push fsubr mov hlt push mov repnz repz mov mov cli lret pop adc bound pop cmp out std in iret sahf int3 leave fnsave nop imul and lahf sbb ret pop ret test jg mov push lret push lock out xor dec adc jbe (bad) (bad) adc add into repnz xor pop sbb popf leave into (bad) pop dec add jae and imul fidivrl test stos jmp xor pop mov or insb jmp decb xchg add lock js sarl imul add inc add out fstl push arpl pop imul fisttp or add test and cltd enter mov jae dec call mov mov mov mov outsb in or adc jb mov and push push stos push in (bad) add jns popa aas test mov cmp repz test pop imul inc mov fmuls cmp add gs cmp and add out push adc or jle out mov imul adc pushf pop out mov and add or fsubrp lahf sub pop sub xlat push add lret mov scas cmp mov inc sub movsl out mov xchg mov gs xchg pop mov pop les popa xor sub mov push inc leave cld dec mov jl es jge es or in stc xchg cmpsb into inc sbb xor mov sub and mov add outsl ja aad mov outsb mov call lock push adc mov fs mov test dec pop shrl test ljmp xchg and subl gs mov xor leave push fisttp ret fildll adc es jnp (bad) repz push push xchg iret mov repz pop ret out jno and jle jl adc shl int3 mov pop xor loop arpl push mov (bad) repz addl insb fisub dec xchg outsb xor fisttpll mov xor test and or xchg pop fs test call sub xor pop icebp cmp cmp sbb pop (bad) out fs lret out enter stos cld mov stos loope ret xor mov rclb loope daa lret mov loope js mov pop sub ret aad push dec int imul cwtl sbb out add jp push fxch sub clc movsb leave out orl (bad) outsb cltd mov stc sub imul pop cld scas push mov sub scas xor fcmovnb divl push inc mov or sar mov ljmp adc mov or popf sub leave jecxz (bad) in mov dec scas int movsl jp call sub cmp (bad) xor add and lods lods lahf or fidivr ds insb add repz movb pusha call adc mov les inc movsl out xchg and sti leave mov mov dec mov mov adc aam pop cld leave mov xor pop jae or stc push (bad) add mov and sub jno jmp dec imul negl jmp mov clc sub or in cmp push mov cmp pop (bad) stos and ret and es and lods orb sub pushf xor das mov bound jmp out and or fadd leave lret je jmp mov push mov enter fsts inc popa scas cltd push xor pop cwtl popa out popf jge jp jae leave (bad) xchg sub dec lahf test xchg jge cmc adc out idivb into les jecxz xchg push jb xlat dec lds (bad) mov ficomp lea into in and mov imull inc xor rcrb lret jnp mov pusha out adc mov incl push sti lods push rcrb test fcmove out sarb xchg aas ljmp sti mov cmp lods sub fstps push shlb adc sub and or (bad) mov push and push mov mov (bad) fs mov dec sbb adc or add ud1 (bad) xor sbb push adc in xchg cmpsb (bad) popf adc lahf in data16 mov and daa add jno loop or jg xor and jecxz sub (bad) repnz xchg in jecxz inc testl push negl or ret adc mov repnz jecxz add repz sub out loop leave ret mov rorb (bad) xlat insb mov jge dec or xor data16 adc mov cltd in das in mov sbb jo data16 jnp jmp (bad) lret mov and fcoms mov (bad) fsts out das iret fisubr add xchg call pop sub lret das jecxz pop int3 or in cld or pop hlt pop es arpl mov inc out pop cmp clc or sub ds dec mov ss dec pop xchg xchg cltd dec aas lods jb lea sarl cwtl nop loop pop mov movsb pushl adc lea adc jecxz xor loope (bad) popa mov leave add test mov adc push (bad) test mov xchg out jno ret ds sbb sub adc inc jge loop sbb out push jg (bad) cld lods rol xor sub cmovp repz push mov movb enter pop lret push lcall lods xchg mov popa sub pop dec push sub sti fs fstps push sub cmp and pushl imulb clc mov sbb stos sub push loop pushl xchg pop shr push in dec lret dec push jns lahf insb orl repnz out and lods xor pop mov negl imull push repnz mov ljmp mov xlat lea lods loop adc adc mov hlt fs jp add mov and popf hlt call adc lods imul xor pop ror ds mov in and leave test repnz bound lods sub add mov sub push xor loop cs sub pusha ja (bad) dec sub mov push sbb sbb enter lea out jp mov xor insb and imul mulb jno dec mov xchg in std sub pop mov clc imul xchg or test xor sbb or or mov cltd jl pop xor cmp or test mov loop (bad) mov fcompl test pop out and add cltd jg in pop shrb ja imul xchg int3 dec mov mov xchg out ja and dec daa ds out leave (bad) loop cltd lea sbb fistp bound push add dec cmc ljmp jne and jge repnz lock dec jge mov (bad) xor or negl int3 adc icebp sub mov add fnstcw stc push shl aad fs mov adc aaa into cltd add shrl fstpt lret cmp (bad) xabort dec test cmpsb jb je push cmc in and pop ds scas ret jne dec movsl in dec pop adc cmp mov aas out pop pop or jne add mov jo repz cli fwait les xor sub jg mov jae push cli add mov sub int3 and cmp and mov sub (bad) xor scas or pop jno ret push test mov cmp sub out std sahf rorl and fbstp mov jno das pop sbb jo sub jae sub push ret pop insb fs call enter cs jbe js repnz test mov dec pop sbb adc nop push xchg decl inc sbb mov pop cli cwtl hlt data16 and pop inc out sbb jne outsl sub popa ds divl mov xlat mov pop mov scas frstor jg jbe jae rcll mov xor mov scas leave push add icebp add dec adc cld out mov pop fbld sbb jno icebp loop cli sub pop push mov in jge outsb sbb jg or sbb jecxz mov fs and shlb add push push not mov (bad) xor fs inc leave ret jne ror cs sbb cmc push andl fisubrl in mov sub mov dec xchg adc mov (bad) and mov rcrl icebp dec mov cli repz or and popf dec je pop out sub add sbb (bad) stos push loopne imul sub add daa cmp mov cltd ljmp sub and scas mov mov aaa mov sub repnz pop stc push into mov mov xchg adc xchg repz xor xchg mov ja mov clc jno movsb xchg sbb cli ss aas or scas (bad) jbe pop ficom xor mov fisttpl jmp fs sub add sahf jmp std inc loop jae (bad) icebp jmp adc pop icebp xchg mov jmp jmp jmp ret outsb pop cli or xor push xchg sub les scas inc mov (bad) jbe rorb cmc jo popa push out add push cli rolb mull ljmp call adc rol ljmp in push sarl in scas inc (bad) shrl add pop aam adc sub cld (bad) dec sbb pusha sub fs std dec sarb negb sub mov cld mov (bad) xor bound mov into pop (bad) int3 inc add cltd int3 imul lock xchg hlt enter mov mov ret ret jl iret ffree shll cmpsl popf out (bad) std (bad) jg ror fcomp movsl fidivr loope fs jmp jecxz sub sub or xor clc sbb or les sbb pop leave xchg jns push cmpsl cmp jle mov push cmpsl adc cltd pop mov ljmp outsl mov pop (bad) jns push lods dec xor sub out jmp xchg sbbl sub sub (bad) scas enter in rorb mov loope (bad) mov std xchg in ret shrb pushl pop or rcll hlt fdivl sub dec es push and (bad) push pop fildll jnp scas (bad) rcll jnp cwtl stc pop pop dec repz dec jmp rol mov out sub cmp imul inc xor xchg lret incl xor mov ss push out jno or les dec add mov leave jecxz in add cs xor mov sub or scas popf lds (bad) bound mov lds ds out fwait cmpsl dec outsb dec sti popf in out shr jb adc scas jns mov push sub sub mov add scas lret lret (bad) jg into rcr int3 and ret or inc jne clc fnstenv int3 shrl dec or movsb out or inc mov xchg xor xor and scas data16 mov cmp leave push mov sub popa adc lods sub and es (bad) frstor xor movsl fptan movsl jle lret push push in mov mov or or testb or (bad) mov add iret xor sub fldt push ret out test mov mov inc mov cmpsb test xor pop pop mov orl cmpsl pop pop je mov inc xor mov jecxz (bad) repnz sub out cmp int3 xchg lods mov xlat std dec aas cwtl mov (bad) jbe pusha out jb out jo pop adc mov xor gs inc mov jno add jecxz stos in dec xlat mov mov sub jmp mov inc pop xchg aad (bad) fdivr pop pop xchg mov push mov movb (bad) cmp ja scas sti popf clc inc cmp ret cmp clc push sbb rorb xor pop hlt mov test mov js pop jmp xchg lock fidivr ds sbb pop sub xchg add shrb inc mov adc movq pop jo dec lret dec mov test into popf (bad) mov mov mov jbe loopne mov add repnz ljmp cld pop movsl jmp pop add or ja pop jge (bad) (bad) dec sbb cmp movsl scas mov pop mov pop (bad) sub imul jbe call out add jnp call popf pop add add orl test gs test (bad) es lahf into out xchg jae xchg out ljmp imul mov pushf cli jmp bound int fisttp imull mov ffree ret xchg nop dec or xchg jle leave test sub daa mov sar jae ret sub mov dec push and das movsb je repz pushf mov or or mov inc mov jns lahf sub (bad) (bad) into cmp sub jno imul loopne or pop (bad) call out push mov jmp adcl pop push xchg dec inc into adc scas xchg loop (bad) mov pop mov scas movsb pop repnz cmc xchg push adc xor jmp sub jns ljmp hlt das push push pop inc inc add xor mov mov repnz sub arpl dec aaa ljmp mov neg cs cmp xchg and scas xor test mov sub lds lods loop imull mov xor sub lods xlat mov incl das fs jb pop lret sub lcallw pop aas cltd dec cli std mov insb fsts sbb aam clc cmpsb or sub loop add add xchg ja enter mov adc rol out fldl clc nop iret mov pop or pushf mov loopne sub adc ss jp pop xor dec pop cmpsl xchg dec jg inc xchg sub ss push insb or scas pop mov insb cmpsl stos push mov mov icebp mov cmp rorb sub adc aad out leave pop gs das (bad) hlt popf jle jo cmpb mov pop push outsl push add out add mov cmp js clc jmp lcall scas cmp mov mov sbb dec clc xorl (bad) mov mov jne dec out xor adc mov into push push pop mov fadd cmp xchg dec scas (bad) pop rcl mov fs xchg or adc jmp and ficompl ror ffreep xchg daa int3 cmovle jmp leave cmp push add mov or repnz jns dec and insl dec aam fsubs lock or sbb imul adc mov pushf ficompl push xchg icebp fdivrs dec push mov aam sub mov les divl push dec push pop xor pushl mov out clc icebp add and repnz ja enter dec jmp imul sub mov push out xor pop mov mov fs popf push pushf lahf cmpb and xchg icebp scas sub inc adc aaa cmpsb pop outsb pop mov outsl pop xchg stos lds xor loope sub and (bad) sahf lea ds negl notb ja or clc mov mov dec mov jns xchg out lea aas mov pop xchg mov adc int imul mov jecxz cmp cmp and pusha aaa ret mov rol pushf sub (bad) mov mov add add jecxz mov inc inc xchg xchg ljmp dec fisttpl add je jmp inc leave popf je and xor stos ret lock ds sub push mov cld push ret dec and popa inc repz xchg ss xchg popf inc cld sbb add and in cld leave push add ret gs push dec push aam mov sahf sub xor and xlat xor fsubs add push pop (bad) mov mov ja test sti sub xor hlt mov add repz xor and adc or mov inc add jge int xor clc or cmp movsl jp test add lea mov push das mov cmp (bad) pushl or jbe,pt jb int xlat out pusha mov test add jne xor push jno fdivp sub and mov out mov leave mov adc sub adc sub (bad) test or bound xchg imul pop neg subl into leave or outsb and lcall xchg std sbb jp pusha cmpsl jmp push dec or hlt mov add in das clc mov out or jge pop daa or sbb scas mov and dec repnz or fstps stos dec fsubr push int3 push and push xor icebp xchg mov or int3 outsl adc xor inc cmp imul mov lock xor push test out cmp test jmp es push sbb sub nop shlb dec pushf mov xor cmp mov mov sub push sbb sub (bad) inc (bad) repnz sbb and mov imul not popf pushl push js popf mov adc cmp dec test cmc mov inc ja mov adc (bad) fbstp push dec mov sbb cli jecxz dec lock lcall jns dec aad (bad) (bad) aas idivl sub mov lret mov repz add pop mov xchg adc mov sbb fsqrt xchg mov push mov dec and lret or dec mov or pop fnstenv cmp daa push imul xor scas or out xchg jns (bad) stos xor pop clc (bad) xlat mov mov cmpsb fnstsw ss mov imul mov scas clc push mov into mulb fcomps pop and xchg push add (bad) pushl test and mov jae adc int cmp test (bad) push sub mov pop aam jle leave or inc add mov stos test lock and xorl jmp mov dec bound jo sub fcmovne jge loopne mov xlat out fldcw repz cmc insb call test (bad) negl stos stc out mov jg int3 inc sub mov (bad) repz es imul sbb bound stc push leave or xlat jb mov enter iret and push dec pop sbb fldt dec fmuls add fbstp movsl jge movsl imul sub push lcall iret das sub mov popf (bad) xchg pop jmp icebp mov sbb or rorb mov loope add dec fs andl scas in repnz sbb adc jmp (bad) cli enter inc popf or adc out dec and xor sub xchg rcrl cmp dec mov fmuls test xor stos pop imul jg out push add and mov (bad) in cli sub fisttpll push es add jle cmpsl stc stc dec (bad) lret daa cmp push das xchg stos mov (bad) jmp out pop fmuls rorl ret test mov adc in dec ret ljmp lahf and rolb and mov jbe ret test and push jbe (bad) jmp jmp mov mov xor push (bad) std adcl ret addr16 cmpl scas adc or not das out test cld adc out lret pop (bad) repnz fistl addr16 lds xorl mov sbb jge sbb repz jge (bad) push mov xlat pop ret bound (bad) cmc int3 sbb mov orl xor ljmp out or xor aad mov inc push iret mov packssdw test test leave jne inc leave hlt aad xor je mov pushf repz enter cli into stc decl sub or callw mov xchg clc stos pusha add sub cld js std add mov xor cmp sub push xchg fs push add dec pop dec fildl fsts lahf xlat sbb and cmp sub pop addl (bad) fs push inc out (bad) cmc xchg lods mov scas sub mov add (bad) (bad) adc clc gs pop clc inc pop mov shl sub clc wbinvd pop mov hlt sub xor (bad) in pop add sbb add data16 or mov cmp pushf pop mov xor iret decl xlat mov sarb xchg sub imul subl sub adc loop (bad) xor sub add call scas mov dec out pop adc mov push sbb mov out outsl mov and pop ljmp xchg xor loop ret cmc xchg lret ljmp xor sbb inc jmp lock mov dec loope lret ds test pop mov aas or cs scas cmp sti and cld fcomip stos icebp push xor or pop leave mov jl or addr16 xchg ja (bad) in lcall fidivrl iret jmp inc (bad) repz add (bad) xor fisttp sub xchg dec or test adc rclb mov sbb daa push iret cmp push cmp (bad) add cltd lods stc pop imul jg pushf jmp in mov outsl loop sub sub or sub mov aam bound jo rcrl dec or sbb test lret add pop data16 out push ret ss das xor cmovns and ret (bad) adc iret lea xchg mov adc and lock mov push stos dec je adc mov test in cmc movsb mov imul pop int3 cs mov mov ret (bad) repz (bad) imul xchg sti sub ss mov push lock in mov sub mov and stos bound push js pushf sub mov fsubr fs out sub add xor mov pusha or fist nop jmp leave adc (bad) sub shll fisubrl rclb lcall dec adc ret mov icebp mov and lret in inc test add and mov dec jne add (bad) pusha add popa data16 pop and (bad) call loope popf lds shr mov dec (bad) mull or dec jbe bound negb das xchg xchg clc fstl jo jmp sub mov mov mov cmp ficom jbe pop call cli sub sub lds mov pop jmp cmpsb and (bad) xchg push dec jmp sub popa repz (bad) fbstp cmp push mov jg repz pop xor out gs xchg in dec fisttpl mov out (bad) jb or out push xor (bad) outsl or mov mov aad jge loopne repnz repnz inc push and push sub add int ror push lds and sub adc jge enter and pop pop pop imul lret dec dec jmp lds mov outsb ja mov aas int3 dec push sbb sbb sub sub push fdivrl sarb and data16 cs push gs scas addr16 xchg sub pop inc mov mov xchg sub and lock pop add sub mov ljmp dec jecxz sub ss incl (bad) xlat sti (bad) dec sub pop cmp ret push cmc gs push daa adc cmpsb movsl pusha stos xor dec es (bad) mov xlat into ret les or div insb test lcall clc daa pop adcl stos mov mov sub push popf (bad) popf addr16 or dec cmc pop mov scas mov lods xchg mov xchg and negl leave fcoms addr16 adc fist pushl nop aaa push pop add sub and test or mov mov jne pop mov mov sub sub or pop fldl sub pushf mov pop fldenv imul sub sub jmp mov call xchg push and daa mov out dec sub cli sbb adc inc or pop out rcr sbb jg adc mov aam sar nop dec and mov stos xor adc sahf adc cwtl pop add dec jecxz inc loope cmp out jno adcl or loopne pop and mov daa fidivr dec sbb push test into test mov adcb adc int3 out lahf cld mov shr leave ret jne or adc (bad) jp call test popf data16 dec adc push repz repz mov sub and or push je insl and fdivl jns dec push inc (bad) or push fcoml dec push add (bad) loope sbb sub insb clc xchg (bad) pop pop sarb jp xor xchg pop dec mov pop and mov daa sbb inc pushf loope xor popf xchg jnp aam test or inc insb rolb sub lret mov inc ret outsl movsb les mov ret mov and xor mov ljmp xor out add cltd mov adc and or push in scas jns fs add xor aad das divl outsb (bad) cmc push pop call push adc xlat xor out xor add rorl and cs (bad) or xlat jmp test daa leave jns fs clc ret sub sub add imul adc sub es cld ja xor pop dec add rorl adc pop xor fiaddl sub jp loop (bad) mov lret fs iret pop pop lret out cmp pop lret mov sub push (bad) sub add aas mov int cmp sub xor cmp rcrl mov data16 sti leave sub mov aaa or lahf pusha mul sbb adc lahf inc fstpl or jmp mov lock xchg test cli push in ffree sub stc inc mov ja icebp pop lret dec call in cs sub add (bad) repz in cmp xor mov xor pop lds and imul insb cmp or lods jge sub mov sahf enter dec xchg adc add mov iret daa bound push and mov dec lock into popf push jnp and mov jnp or movaps xor sub ret (bad) sub jp jecxz imul mov jecxz les rol jno xchg pop mov (bad) out fdivrl (bad) xchg and movl lret mov icebp dec arpl ret lock sahf cltd mov mov rolb das test xchg mov ljmp aas notb or inc or into mov add fucomi stc fildl jmp mov (bad) dec mov (bad) leave jle pop out stos movl cmp pushf jnp push dec xor jge and pop ljmp push sbb notl xchg inc sub nop adc fs dec sub out inc daa and mov fmuls mov shrl adc mov enter ficompl or (bad) movsl icebp je mov aad and add inc dec ljmp dec cmp sbb flds dec cmp or or sti push mov jecxz dec pop cmp xchg inc dec and add inc sub roll sub (bad) push xor sub jl in mov nop les cli jecxz sbb jb mov mov scas sbb lahf jns leave ja pop mov sbb add xor mov (bad) rcll jae dec pop add xor sub rorw sub cmp mulb repnz std xchg jo into fwait push loope flds sub ret movsl adc out mov dec daa pop in mov push insb sub or shr leave stos fidivl add or and dec sarb (bad) rclb mov push sub hlt dec lret sub loope mov xchg mov xor incl push jl jp icebp inc xchg add ret push outsb jb bound rcll xchg out out mov dec mov or and ja push cwtl push xchg mov adc xchg jmp xchg dec sahf push movsl sti ljmp call movsb insb (bad) out stc and aam pop jecxz mov cmpsl jl lret fs or mov adc (bad) rolb in cmp fcomip jb cld hlt push out or mov dec mov mov push mov add mov in (bad) or adc or xor imul inc cmc adc or adc mov movsl sub mov xor inc lret add xlat fisubl dec enter xchg movsb cs mov xor (bad) adc adc leave jg pop and push data16 add add div pop jmp insl popf fsubs repz xchg lret inc push mov stos dec cli mov inc mov add dec or fnstcw shlb adc mov imul adc inc mov clc jle xor mov push xchg je inc and or dec xchg dec leave test jle rorl dec xor jg int3 shlb in mov stos jl (bad) mov push push mov das test (bad) out in loop lods mov mov push ret or cmc (bad) das (bad) fiadd rolb fidiv push (bad) adc das push js ds cmpsl cli notl jmp dec mov jp repz out sub mov int3 mov push dec and cmp mov test dec mov stos iret pop dec clc scas dec mov fnstenv repnz inc mov dec je jmp and pop pop xor shrb push sub mov sub jns or jle fs out lahf adc xchg sbb jp mov inc mov mov push xor sub aad add or add pop fs sub aad test in cmp fs mov icebp add pop cmpsb outsl sub push xor loop iret pop inc add scas mov sub sbb dec (bad) mov pop xchg mov jmp aad push pop repnz xor (bad) cmp jmp xor fcompl adc ja and sub and jb lret or popf movsb jmp js mov adc idiv lret adc addb mov mov cmp cmp cmp in jmp mov fstps shr fcomps xchg inc jno add cmc icebp repnz leave pop int3 jge pop add sahf lcall (bad) and sbb sub xor add mov repz idivb adc repnz scas cmp daa shrl lcall shlb jmp movsb sub in and xor xchg fistl add mov pop jne pop push std push mov mov pop test adc stos mov push pop pop dec imul pushf lock mov cmpsl push sub pop fucomp xor pushf sub mov dec xchg or aad mov pop or imull notl test xor cli movsl lods sbb pushf add mov xchg push sbb add fdivl xchg stc push fs lea test pop ljmp in sub xchg pop and sub or jle repz pop cmc test (bad) repz xchg jp nop test rorl xlat inc fldl ss dec dec cmp dec cmpsb xor out mov adc popl in xchg call (bad) jno jmp push cmp stc and mov xor mov pop add jmp roll push lock sub adc xchg movsb jmp call or ljmp mov scas sbb add lcall mov mov fistpll cmpsl xlat xchg and mov leave push sarl in jmp les test mov xchg mov inc mov push adc add ret bound mov add in (bad) push leave push xchg mov fldcw aaa xchg cwtl mov enter daa fdivrs aaa dec mov das xor cld xor imul imul jne pop call decl ret mov sub and sub dec repnz xor movsl xchg in adc mov xchg mov lea scas jbe into lock popf jnp and mov add shr je out (bad) push dec (bad) xor jge push add stos das add mov shlb sti mov mov lods xchg dec out sub jecxz or stos repnz add cmp popf sub or pop dec mov mov shl dec pop jbe (bad) xor aas int3 adc mov pop aam pop pop hlt dec data16 and and fnstcw fsts in cmp dec stos sub add xor xchg lahf adc lods and dec add push mov fstp jnp jno ljmp sub ret clc call call push and (bad) out jmp ret add inc scas shlb inc stc movsb inc sub push insb jno into jge sbb or adc mov and test imul sub mov inc jle jnp sub cmc xor mov and mov xlat push andl mov pushl and ds std ret lds fcoms movb cmp int and cmp cs or mov pusha inc mov std les adc jo adc out jg ret pushf and push scas mov test je lret or xchg in mov sub fistpll out cmp cmp cld call fs lret fildl add orl int3 ja out xor mov xlat in mov jecxz xchg call (bad) dec rclb mov dec fisub sbb xlat inc push ret or add repnz inc mov jae lods adc add repz xchg mov dec push pop lahf inc aam fcomps xor mov push in dec adc (bad) and lods or xor pop movl add xor jge imul inc xchg sub lahf sbb mov add out (bad) int3 cmp pop mov push add xchg push rcll dec loop lahf push icebp mov pop cmp lret jp ljmp daa or repz cmpsl inc mov xchg inc dec mov test aam and lods out imul sub int3 adc into pop xchg xor and ljmp aad int mov mov sub movsb sti mov add ds add sub jecxz dec or jecxz,pt mov mov push call mov xor push sti pop dec cltd xchg decb sbb jge repz jne call call outsb out add into leave leave notl push add xor pop sub rorb xor jae adc scas fcoms aaa jecxz adc add mov ficoml or xor pop scas xchg sub add xorl pop mov into mov pop jae dec test jnp dec lret jecxz movsl movsl mov jl fwait push mov mov add fst xchg xchg pop bnd clc arpl push mov and cmp mov lret xor mov mov push test pop push sti dec mov jl loop adc int3 jecxz inc xor or and sub out add popa fwait lret repnz xor mov adc add ja sub inc adc or push (bad) cmpsl pop sarb cs shl aaa in jb lahf adc jmp xor mov test mov sbb add sub pop rorb mov push dec in pushf mov (bad) sahf and adc mov sub cmp insb (bad) data16 out mov pop xchg lds xlat in jae aad test inc cli mov sahf dec ret in xchg add mov sub mov movsb scas aas std imul adc (bad) test lds ror jne mov push ret stos popf fwait inc jo mov pop je (bad) xor or mov ja sti pop sbb es js and jle sarb cmpsl ficomp test (bad) shufps mov and sub dec cli int loope jle mov push fsts in sbb mov in (bad) push sub ja (bad) xor loope bound add fdivl inc pop mov jp rep scas push pop dec dec dec stos mov adc lock push shrl (bad) cmp and xchg fwait jne and xor dec sahf nop pop sub in (bad) xchg shl gs or or dec pop gs mov and popf gs add jmp add xor fdiv dec fidivr jmp icebp ss jmp pop cmp gs and mov aas dec gs sub push and fidiv inc leave rorb xor adc cltd mov or mov cmp sub (bad) out cmp adc out insl xchg (bad) dec je adc enter add xchg (bad) mov lret loope mov jne scas into addl rcrb xor xor push or sub pop loope jne test mov sbb frstor mov sbb test fisubr xchg iret dec (bad) xor mov sahf vpunpckldq sub cmp cs test mov mov mov mov lret or xor jp inc or or jb (bad) imul ret das dec loope jb iret test test cld fs popf sub out popf dec push (bad) mov xchg dec jl gs jmp roll loope rclb fnstsw int push push sbb xchg leave mov popa inc jp mov dec sub sahf xchg push (bad) or incl rorb and repz xchg mov mov xchg jne mov fsubl lcall sti jge in dec mov push lret test lds xor jecxz add xor pop imul dec add (bad) imul mov jno jmp mov aam mov add sub xor or add mov sbb push dec mov sub or out mov xchg mov int3 xlat les rolb clc jmp adc nop movsb popf in sahf loop xor ljmp jg or push stos dec gs cmp sub cmp inc rolb or push imul mov dec jle jmp mov xchg lods aaa shlb scas adc mov xchg inc clc (bad) jo pop loope cmp ficompl cmpsb xchg pushw adc cltd out scas cmp adc out cmp dec int3 (bad) repnz ja fwait xlat fs mov jb (bad) into sub aaa (bad) sarb fisttpll (bad) xor jecxz je jmp and cmp lahf jbe jno ds adc jo xor inc mov cld sbb out test jmp xor sub mov dec cmp iret jne loopne pop sub adc (bad) pop stos adc mov xchg out sub dec scas sub cs xchg ret cmp pop dec and jle cwtl negl inc dec dec add or adc fbstp outsb mov sub les stos sub xor (bad) mov loop dec mov repz sarl pushf mov prefetch sahf test mov sub shlb jge (bad) in inc arpl cwtl sub mov jb (bad) cmpsb ss and outsl aaa xchg test mov or nop nop repnz mov cmovne repz push (bad) sbb inc and pop sub sub xor mov outsb mov in xchg xchg retw lret xchg cli fstpl xchg add push cli cmpsl sub imul pushf clc push mov into ljmp adc mov sub scas push sub shrb fldl2e cltd inc stc stc and mov dec xlat rcrl and cmpsl movsl xor lahf bound xchg cmp cmp jge jmp pop shrl pushf cmp gs fldcw jne sub pop in outsl add mov mov adc xchg pusha dec lret mov rorl sbb (bad) repnz mov or into lods pop mov and dec fwait (bad) mov mov or into mov add mov daa jmp outsb mov outsl mov negb ret xor lret outsb pop cmpsb inc out push xlat mov xchg pop mov lds xor (bad) cwtl xlat mov lret das in call or sti xor xor pop lcall push lahf out (bad) push push insb cmc xchg or inc xchg movsl ja xchg xor in (bad) in cltd inc and dec add push and cmp and test test icebp sbb shr in or jecxz lods inc and ret in mov frstor cmp lret insl gs nop xchg js mov aas repnz call stos test xor or fidivl pop subb popf sti push lret movswl icebp je out mov (bad) xchg hlt xchg iret or xlat mov icebp mov (bad) push mov sub cs lcall es xchg dec loop xchg inc adc fdivr sub pop or add xor dec pop sarl xlat inc fcmovnbe xchg jns fs xor sub ljmp out sub jne sub xlat lahf mov cwtl lock cwtl cmpsb rorl popa popa add das (bad) sub loop mov xchg fldl inc add push pop imulb daa dec cmpb adc or pop adc inc pop jge xor xor sub dec lods (bad) mov and or les fldz sub jbe cmpsb andl stc sub or out ds and push push insb sub jle mov dec xchg xor lret xor cld sub sub adc pop dec mov repnz iret and xor outsb xchg lods mov cmp push push push xchg (bad) sub mov fidivr pop jnp sub add stos in cmp mov xor repnz dec xchg leave mov fiadd mov mov pop jge pop cmp pop js movsl mov stc rolb push pop bound dec stos vpshaw arpl sub xor pop mov daa (bad) ss xchg int3 sahf push aas xor sub es out xchg cmp add loop fmul xor movsl pop and or xchg ja notl cs sbb fs inc enter sar pushf jmp out push xor ret cld mov add and mov and out in clc leave (bad) rol adc mov and into jns xchg out lds lret ret mov dec sub jecxz fcoml ss mov jge movsl jg div mov clc mov lds pop cld push mov sub adcb pop add mov es adc (bad) mov int das jmp inc add push mulb or out aas ja jnp jle cmp sub and mov mov lds sub cmp (bad) (bad) aas int3 lods xor ljmp lret ret nop mov adc mov cmp xchg dec neg test push mov test repz aaa clc shrb (bad) imul mov pop pop mov pop jg inc mov movsl in or sbb enter ljmp shrl clc movsb stos int3 stos sti mov jp jbe bound pop push ret in das sbb or nop cli mov lahf (bad) cld xor stc bound idivl mov out wbinvd xor jmp mov dec mov (bad) fcomi or bswap xlat mov jmp adc loopne lret sahf sbb out xor dec jbe push inc mov dec imul xor sarb push mov mov lcall (bad) sub into aad test (bad) dec cltd adc mov stc adc ss pop sub mov out pop test push mov pop out jb jmp fistl adc into sti stos or xorb sub adc sub lods jle push mov or icebp dec xor mov mov add mov pop mov mov add cli cmpsb repz jecxz pop scas insl fisubl sub lds divl and add in movsb cli cltd jecxz mov and adc push dec bound lock lret fisttp jbe and iret cmc repz xchg out call enter cmp test mov pop das bnd jp push stos aas enter mov mov mov mov pop clc cmc lret leave aam or mov dec cld ret xchg mov out mov jne movzwl in cltd mov outsl movsl enter rorl xor outsl xor and (bad) mov sarb xor mov and add jae imull mov mov imul push adc (bad) (bad) pop in cmpsb mov push adc or mov add xor sub ja jl aam das inc xchg daa lock ljmp push movsl adc bound das adc mov mov inc inc js pop aaa fs testl mov movsb aam jmp inc xor xlat fcomps repnz pop sahf xor lods inc add xor leave or (bad) mov mov test cli mov jle rorb or push push pusha insb pop mov xor shll repz add jle push mov jno and inc aad or int jnp fwait (bad) pop scas sub jb cmpsl (bad) mov lret adc adc cmp mov test ret mov addr16 loop pop in lahf mov in xor pop data16 test xor sub jge jmp lock jecxz clc mov and pop or dec leave out frstor adc stc add jns cmpsl cld aam xchg inc sub nop pop or lahf jnp sub lret push inc sbb aas lods jmp add out sub stos sub xchg and cmp jecxz lret out (bad) in push pop dec mov xchg push cmp adc cmp mov (bad) enter lds inc outsb mov cmp in xor mov cmp or sahf out push lahf inc push cs ror dec in ljmp mov lds into sub xor pop mov sarb adc push stos adc mov mov inc sub dec push sub dec jp jnp cmpsl negl div xchg pop cmp fsts pop push jle iret mov xlat clc aad imul xchg mov js mov mov jb add xchg clc test fldenv xorb in and add sub pop jl data16 popf pop test or popf (bad) les sarb imul adc repnz jmp fsqrt and xchg mov cmp sub mov fdivrs or xor cmp jb pop aas fdivr sbb std add out cltd dec jecxz sub jmp push imul jg adc and iret std dec sahf cltd andl aaa outsl jae repnz xchg ljmp or push jl out push js lret pop (bad) xor stos cmpsb fisubrl jmp jnp movsl sbb ficoml out cwtl cld call fstl dec shr mov adc cmp jbe jbe add jmp (bad) xchg daa neg cmp sub add mov ljmpw dec test or loop sub mov (bad) xchg (bad) (bad) xor gs cld push mov into (bad) push subl xchg lds icebp lods lock fcompl iret shrl cmp rorl xor insb lret pop sub shrb data16 out mov outsl adc dec repnz test dec (bad) lods clc jmp push stos pop xor pop test mov (bad) xor fisttp jns adc jecxz push xchg ret xor cmc jmp lret xor xchg icebp or jno xchg sar shr lds or pushf push pop div mov mov jne lcall pop pushf daa xchg xchg adc nop iret xchg loopne shll add mov adc and test test mov cmc pop or divb enter push mov pop push sub movsl ss popa dec (bad) push iret pop and xchg jmp aad out jecxz inc jb ret int3 sub pop push (bad) into mov mov mov sarb repnz sar lea aaa and mov sub mov les fadds das xor fist mov pop jno dec cmp dec xlat out dec test ss fcmove pop and or out cltd xchg movsl test sbb add jo xchg sub mov or scas (bad) mov out (bad) cmp lock push push cli sbb jp pop cmpsl adc ljmp adc out mov ret add dec ret push push fbstp cmp fcmovbe cli cmp and (bad) xchg ret pop rorl sbb mov sub pop mov hlt push das mov lahf int mov pop repnz xor aas mov mov push xchg jbe inc sbb popa adc pop or roll or pop jnp and iret insb sub (bad) loopne ret add in jmp add pop push and mov jb gs or jnp mov out pop mov call cmp cmp fbld sub push mov (bad) out popf and xor negb push push fidivl fs out xchg pop adc xor push call sbb and mov std dec aam jge out sub mov lahf and xchg jmp mov dec int inc jg mov dec fwait es out dec mov aas js out repz or sti ret mov adc (bad) pop fwait shlb sub adc xchg push adc xlat fsubs nop push jle or sti wbinvd enter mov clc and mov mov or cmc dec nop or lods addr16 and idiv lcall and pop test sbb test xor shrl or mov and xor jle xchg movsl lods stc adc sbb stos xchg test (bad) and in and (bad) mov (bad) aaa lock cmp xor mov mov test rorl enter (bad) or mov mov (bad) sarl dec and add movsl jns ret lcall lahf push adc mov jne popa mov inc mov (bad) loope out repnz lds lret push add movsl shlb out movsb rorb into or in mov cmp sarb push fcmovnu xchg ret or xlat xor or dec es add popa inc repnz lret sbb ret xor aam aam scas idivl and daa insb add and sub (bad) test and cs aam testl insb add popa add rorb repz xchg repz xchg pop xor (bad) out pop test (bad) ds imul lcall jmp xchg push xchg pop mov xor xchg lret mov cld scas jb insb sub adc mov and or inc lods pop mov js fcmovb pop rol lret loop (bad) mov add mov btr sub and out (bad) outsb dec out and out loop cmp jne fsubr sar popf pop adc xchg (bad) dec js fbstp mov gs (bad) ret loopne sub orl mov test out repz mull stos popf push jp clc (bad) jbe lret (bad) cmpsb and dec sub xor dec jnp mov cwtl jno xchg hlt gs fbld jmp mov pop inc shll repz adc scas bound (bad) (bad) in sub xchg push jns push pop pop gs je int3 bound fidivrl decl dec jge xchg add repnz movsb mov jge mov sub and loop sti repnz sub add pop add iret daa loope into fstpl sub xchg (bad) lret jb (bad) jne pop push test stos call inc or idivl jge ret xor and cli mov out mov inc push xor mov shrb jnp mov test fldcw xor mov pop mov sbb inc out sub lret adcb mov add adc sahf adc xor push jno iret mov gs das mul adc std sbb ret inc jp xlat sbb jg xchg dec pop xor sub inc leave out push shrl and repz pushf ret xchg (bad) lret ror lret dec jmp out (bad) repnz (bad) jbe ja mov mov pop cli cmp push loopne test sub idivl scas fs test xchg mov cmpsl clc adc lds mov xor jmp mov je (bad) mov pop repnz pop stos cmp xor mov test movsb dec mov fs mov inc ds mov pop test push jbe lea rcrl scas pop fiadd dec aas adc outsl xchg adcb (bad) dec dec mov ljmp adc rol les cmp test cmc sti xor add jmp (bad) outsb popf dec out stos lret jmp cs lret jle out inc push xor xor jmp popa dec mov (bad) cs or aam jmp cli mov push imulb dec (bad) stos vpsrad mov pop (bad) aas xor in (bad) movsb mov decb add pop pop mov and mov sub xchg fisub pop idivb and pop pop js mov and enter adc dec lods and das sar xchg je push clc pop aad icebp sub ror dec (bad) pop (bad) fnop push dec and mov mov dec sar or movsb daa dec and repnz rorl repz daa inc push xor cmp dec popf dec inc mov notl or push (bad) mov inc mov sbb movsb mov inc lret and jb or inc mov popa pop sbb stc cs sub test mov and mov sbb xor pop jle mov dec mov je call pop stc js rcrl sbb xchg nop xchg (bad) dec push cli pushf jne popf fldenv sub sbb je stos repnz cld stc pop aam movsl fstl loope xlat enter fist dec or mov mov jl push adc dec cmp or nop cmp sarb pop xchg ds jl push add mov movsl jb dec or hlt (bad) mov test test xchg sub fs loop leave jmp jno iret into fsts xor xor and dec in mov xrelease (bad) cwtl out xchg inc mov sbb dec dec (bad) dec mov sub (bad) jmp sub sbb cwtl dec xchg ret (bad) pop xchg mov rcl (bad) bnd call mov leave sbb cmp or fist adc or lock cli imul mov bound loope add negb imul adc cltd subb pop repz jbe (bad) sub wbinvd xor add pop and inc add and (bad) sbb xchg mov lcall push jbe (bad) data16 sub xchg mov mov icebp subb outsb out push outsl mul ret push (bad) dec incb (bad) mov sub ljmp sbb in fld jns daa sbb sbb or pop out mov into mov add add push cld or push jno mov or mov cmp sbb das std shrl cmpsb pop pop call jle inc mov mov mov jmp mov jecxz ss lcall iret add stc add sbb xor sub mov fstpt (bad) lods and pop int inc push adc lods jle cli mov jb xor xor das leave mov xor cli cld test xor mov add clc es and pop lods and out in add mov cmp mov push jl imul mov push xor sub outsl call das cmp cld xchg aas ret insb (bad) adc xor mov cs xor out jle (bad) and (bad) not repz xor out sub jns mov mov lret and mov ds mov lahf inc and inc add mov sub das mov test sub pop push push sti (bad) pop (bad) in daa adc out stos mov pop stos or xlat push dec dec loope shl inc sub movzbl cwtl ficompl stos sub pop mov xchg out dec lock out xchg xlat push pop xchg test adc cli cli and test xlat loop sub cmp jge test mov mov mov add push fldt ja out or push aaa mov sub mov ds out sub (bad) jg and sub mov icebp and lock out adcb bound out jg xchg ljmp jns sub xor mov aas mov mov pop inc push std pop pop pusha cld test test jmp cs inc lods popa lret add adc jp pusha lret or xor pop std inc cltd pop icebp mov cmc sub pop lret or jno dec shrb mov loop popf dec mov out fstpt inc out cltd (bad) (bad) outsb addr16 sub jne aas pushl inc es cmp notl sbb ret pop sti xor iret lods outsl xchg clc es ret mov add das jecxz outsl lods jl mov ljmp scas fsubrl js pop iret stc cltd mov sbb dec stc add in (bad) jne sti repz mov adc rorb imull stos pusha push or aad push push (bad) test movsl out xor sub rol xchg sub gs pop ror mov mov dec pushf dec jmp aam les repz repnz out push xchg je jmp mov mov push adc out popf cmp push add out (bad) or mov stc mov (bad) ja or (bad) mov xchg dec loope,pt repz pop xchg mov push inc inc mov enter ds jecxz in xchg jmp jbe es sub dec xchg xlat xchg movsl test or cltd fidivl xor lret call je test (bad) mov xchg loopne ret xchg or stc je subb fstpt fwait xor mov jno mov push inc pop push out sub rcrl xchg push lcall push dec fs addr16 ljmp js popf out xchg popa mov movsb fucomp jbe lds xor es stos je icebp cmpsb jne,pn push (bad) popa jbe sti cs call stc fstl jg popa xchg sub ja inc jecxz jno mov sar ret outsb pushf xor adc pop clc in movsb call lods xchg call pop scas dec cld std push movsb pop lock iret xchg aam out aas xchg and mov xchg (bad) mov cmp jg mov ja out add sub push sub imul into loop mov je leave xor je and adc jecxz lock ret fsubrs add repz fimul mov add adc mov dec out xchg call cmp movl dec or xchg mov sbb faddl add cmp sub jmp inc mov pop out xchg icebp jbe push adcl sub clc sub loop xor ds sub add idivl ret push xor or mov cwtl lds mov xchg stos (bad) gs inc mov mov pop and push and subb xor jg and test adc xchg pop adc mov or sarb jl push push jle pop in or sahf in cs inc sub call pop jmp (bad) jbe cmpsl je pop mov add negb push sub mov setb fs mov (bad) mov divb test mov (bad) (bad) pushf push jbe cmpsl pop push movsb lcall mov mov push leave out test add and (bad) jne ljmp jle pop je daa outsb xor sbb negb out jge fdivrl and jae mov mov add (bad) mov ja mov outsl (bad) test call daa sub (bad) pop loopne xchg push aaa clc idivl or mov xchg clc lds loope cmp scas pop cmp mov jmp cld push mov add pop shrl and mov sahf lret or popa xchg aad lret pop sub out lods xchg mov pop cmp mov add mov xchg inc push repnz iret xchg sti out jge stc sub mov sti dec clc pusha movsb mov jb push sub xor xchg ljmp mov push lds stc jecxz fs out pop and xlat pop mov xchg int3 mov and bound das gs out xor or aas sti push adc mov dec push stos imul sub jg ss idivl xchg pop mov es lods jle pusha xor add xchg cld fs mov xchg repnz fbld ljmp or mov imul jbe loop in call ret (bad) or fidivr jecxz adc or popf out imul (bad) insl in test cmp jns test stos clc mov and jno xorb btsl pushf dec mov jl iret jmp inc aas and inc insb add in popf (bad) xchg dec mov fs mov mov jno xchg adc dec loop ljmp sbb out pop int3 mov ja mov mov icebp outsb dec insl test xchg in daa (bad) xor adc sub xchg jo lods fs rcr roll dec sbb (bad) pop testb push sub lock enter hlt jmp dec mov push xchg xor in int3 (bad) bound pop into loop rolb sub (bad) cltd aam (bad) jne add mov stc xor add adc mov out (bad) jmp xor gs out fisttpll (bad) cwtl push aam out mov push dec dec sti sub mov cmpsl iret sbb sbb addr16 adc (bad) jge ljmp push mov mov adc mov outsl shrb xor add (bad) mov pop leave jne push push mov inc test loope out mov add mov movsb sar jl add ret xor cmp inc sub bound pop xchg dec popf std cltd leave repz xor mov jmp push arpl mov jp jge mov pop sub mov sub pop mov push add lret sub cs es push inc push or loop rcll xchg xor jmp icebp call pop fstl jmp sahf popa sub sub xor mov push subl cmc lret arpl cmp pop xchg jbe jmp shll data16 ja or negl pushf std jno,pt dec push (bad) ficompl push daa je push jo loope pop lods leave lahf (bad) xor pushf push xchg xchg pushf xchg dec xor mov ret push or cli cmpsl aam inc ret xchg add jle imul sub xorb and and pop outsl repnz mov pop mov jne pop lret push cmp mov test sub sub xor or into loop mov add (bad) add fmuls fisubl out pop jge mov sub mov mov aam push pusha sub inc or xor (bad) cli pop jmp sub or jecxz xchg push mov and pop aam mov fstl into sub jo mov push (bad) fcomps pop cmp js jecxz push push inc sbb scas ja cs sbb repnz adc pushf mov add insl dec sbb push dec dec outsb mov lock jbe mov push movsl adc mov mov stc fs sbb or nop adc les sarl pushf stos mov adcb icebp adc sti inc mov jl int push sub popa cli push pop lods mov dec lods sub scas sarb push inc cmpsb jmp adc inc xor ret loope sbb and mov leave dec or pop subl xchg lds sub daa push fstpt jnp inc jnp or xchg mov out and ja (bad) jno pop and xor xor or mov movsb das fbstp mov and sahf pop (bad) icebp cli into jb out gs sub xor add (bad) xor pop add add outsb dec aam in movsb mov imulb repnz sub lea xor dec cld mov test xlat mov aad hlt jge push (bad) (bad) mov jge xchg and sub adc mov cmp xchg inc or cmp into les xor sti add mov or mov xorb cwtl je and or pushf sub ljmp cmp xor xchg jle cmp cmp (bad) sub nop fcmovnu mov add cmpsb mov fidivr fcoms pop mov jne movsb popa cmpsb cs inc insb jno out mov xchg insl push gs sub stos gs jmp test loope sub mov (bad) and cmp pop or popf test xlat mov shr fstp sub mov mov cmp jb jg cmp pop cmp and iret and dec or scas add push jmp leave outsl repnz xlat mov call stos or ja ljmp test xor pushf adc test mov jbe xor (bad) jae jno scas inc (bad) xchg icebp mov inc cli xchg cltd xor (bad) or repnz push adc mov push inc jmp roll rcrl enter lret mov repz xor dec scas mov lcall dec or jne pop je int3 xchg sub cmp xor push dec mov jp arpl test mov divb cmp ret or ja dec jbe and mov mov mov popa inc leave sbb or lods cmpsl test cmp repnz xchg enter rcr sub mov mov xchg sti enter lret ds dec test lock and sti cmp xchg rorb mov bound lds repnz or cmpsb je xchg cmc ret xchg lret out int cmp dec add cmp xchg add mov xor mov call pushl mov cmpsb in sub fmulp iret mov repz (bad) insb sub repz sub or mov pop fcmovnb (bad) leave sbb movsl mov imul mov pop out popf icebp fsubr mov xor sub dec push lahf dec xchg mov and sub push sbb mov sbb insl pop ljmp lea add mov xchg or and xor outsb sahf mov pop movsb fsubr scas lret cld and adc add mov pop aam lods out mov ret test push jmp inc cli (bad) hlt cs test sbb fwait push hlt push loope test cwtl xor fadd or lock lcall cmpsb dec out in xchg add repz in push sbb push cmc out jecxz or inc or notl ret (bad) jnp adc sti nop jmp adc mov loop inc and (bad) xlat mov xor cmp push cwtl into mov mov xchg inc repz stc jns test ret lret pop stc mov jbe dec mov and and sbb xor not push daa js popf lret pop lcall push daa pop cltd sbb outsl imull daa out mov add or cmp mov ret (bad) pop push in jns call sbb (bad) lcall data16 adc jp mov mov lret and dec xor int (bad) movsb xor mov jmp outsl sub lock cli call ret (bad) mull add or cmova and mov and dec aaa cli xor cmp loop dec mov or repnz mov mov jg addr16 push ret fwait sub xchg repnz jns jecxz mov aad pop or pop pop aas into scas sub push or ljmp jg inc inc data16 xor xchg fstl sub insb lock add ljmp in das adc and jmp mov or or lea jno cmp stos mov jp xor mov repnz xchg cmp out subb sub xor mov pusha mov mov pop lods push lret sbb inc xchg pop lods fs in shlb xor in sahf and xor pop jo sbb mov xor cmpsb negl je scas out pop repz sub push es inc mov push xchg xchg xor pusha mov call repnz mov ds xor pushf test leave xor add popf pop insl ret jnp mov insb out sbb sub xor or rolb push scas push push cmc adc xchg repz push add push xor and mov imul push xchg and idivb adc jmp cltd rorl out (bad) sbb sub xor add pop push xchg add stos xchg out and and adc imul (bad) jae xor ja jne cmp fnsave and add lock (bad) mov inc and roll add jae leave sub bound mov sub out pop adc mov add fwait xor pop lcall rolb (bad) mov sub rcrl sub sub xchg or lret mov ljmp pop push inc stos xchg divl mov out mov movsl aam jno sub movhps mov mov icebp pop repz xlat in adc add sahf mov dec fisttp mov inc cmp sbb popf jge dec nop in xor push add ret bound and inc nop (bad) mov leave shrb dec adc ret push test sbb inc insl or sub inc movsl test stos (bad) in jnp out mov dec (bad) cmp jecxz idivl or sub xchg cli xchg and xor mov push mov fistpll pop xchg repz (bad) cmpsl xchg jle adc mov jbe push idivl (bad) jg lret jb add mov scas test dec push rcll test leave leave jge mov pop lcall repnz ds pop stc imul xchg popf aad ret mov sub xor push jle outsl xor cwtl fdiv xchg lds lods push pop daa aam add repnz cli sub push add mov (bad) cmp jmp sub in or jnp mov and xchg dec inc popf (bad) mov xor mov mov push ja xor cwtl popa add int cltd mov dec fs adc push push decl (bad) jnp or sub sub or sub imul lret and idiv sbb mov scas pop clc jo adc cwtl inc jecxz sbb movsb popf pop mov push ret (bad) das sbb push in inc mov cmp dec adc push fcmove push or jmp jle repnz xchg out dec orl add mov ret and (bad) int3 pop pop lret into xchg gs lods or fldcw aam pop shrl sub sub push and cltd sub add scas sub inc (bad) iret pop push (bad) cs jne aas dec push enter inc xor lds stc xchg into adc and cmp mov cmp mov push push nop pop dec sub xchg sub sub jmp fistp lods push push loope lret mov pop cltd pusha or xor xor sub dec mov (bad) out jb cltd add and repnz mov jne inc xchg notl mov daa xor jge frstor fadds out sub repz out sub fistpll in call leave jo pop out cmpsb cs xor leave rcr adc xchg and xchg rcll fsub iret xchg dec xchg dec shrb dec and sbb lret out ljmp out daa or add inc xchg call sub sub call push jle jno imul cmp (bad) leave movsl push stos fisttpll jg jno sub xchg jnp imul or mov out sti xor ret insb cmp leave xchg add add aam ret jae push (bad) repnz add ljmp dec inc adc xor mov mov xor into mov adc jmp into call or ret pop test fldenv dec lret cs and dec add icebp fldenv sarb dec xchg lods and cmp stc lret pop ljmp ds push and idivb push adc mov sahf cld loop lret cmc adc sbb jns mov movl push inc cld pop jecxz mov mov mov in xor xchg notl and sub sub mov dec inc push push or out (bad) out xor sub int3 xor and imul mov add mov add xor and inc sub lret and xchg in sub push mov es (bad) mov adc movsbl out add sub in pop mov loop stc xor pop mov sub shl xor sub aad ret call xchg ljmp sbb lds lds (bad) mov sub iret xor jg pop add roll lahf pop adc cs leavew or cmp test inc xlat stc mov sub pop fdivrl lret negl loop sti imul outsl out jp xchg and pop icebp call (bad) test mov scas add clc and dec xchg icebp jge sub mov lock pop es or dec mov in repnz icebp xor xor imul loope inc sub pop roll dec stc aam or jle push sub mov mov mov fnstenv inc add and jmp dec lods in cmp dec loopne faddp dec jmp fiadd cmc aas mov mov xchg mov fmul jmp xchg out clc in sarb push movsb loope lret cld rcrb insl push adc or lahf cmpsl jle push xlat loopne xchg pushf out in cmp mov cwtl les fidivr cs adc cmp mov add (bad) xchg daa jle pop or push popf cmpsl and sbb lret fs ja fist xchg adc or cmp cmp xchg add or mull outsb stos pop or in xchg pop insb push loop aad dec dec ret sub daa addr16 or push pop push div xchg bound jne stc jmp mov (bad) (bad) adc jne mov pop or add (bad) push std das mov ret xor add pop mov adc sub loopne fdivr rcrl lock std lret jle hlt aas or test dec add imul stos in pop xchg fldcw clc repz pop outsl dec scas cmp push push xchg cli int3 xchg ds jl repnz dec test repnz inc dec lds sbb fistpll jmp mov sbb or pushf xor rcrl negb cmp jae cmpsb xchg call mov mov gs mov js loop pushf pushf fs (bad) idiv icebp jecxz ja adc negb mov arpl call mov sub and cli sub fistpl mov mov icebp fldt sub test or out ret xor xchg (bad) jg js arpl pop or dec divl imul jg nop mov mov mov xor push mov (bad) xor add mov (bad) shrl test add arpl (bad) in inc push fsubl outsl movnti add mov fsubrl push je (bad) fcomp add aaa or enter xor push imul mov lret sub sti pop mov lret and add scas cwtl mov mov push sub (bad) push movl pop rorb sarl mov lret cmp out pop imull fild imul adc push je add jge in movsl std pushf mov out xor mov sub push aam pop mov jmp adc shr sub les cltd xor ljmp sub (bad) pushf push xor das mov pop pop xchg push roll es int3 mov aas pop pop je (bad) popf add ljmp and into in xor test adc fsubr (bad) dec add scas sbb sbb pusha in fbld pop icebp out push cmp pop stos jno xor cmp dec (bad) lea cs xor out aaa daa push adc std push lods movsb enter inc adc add gs push ret in cmc shrb sub mulb and outsb mov push in sub inc jmp sub jg mov stc ret push mov jmp sahf and pop mov test fdivrs pushf (bad) cmp movsl cmpsb outsb lock mov push out jle cmpsb inc xchg hlt divb aam (bad) out cwtl (bad) imull mov loop pushf es popa xchg popf clc cmp xor mov mov adc iret cmpsb js daa jae push orl inc mov cmp in std adc lods scas cmp adcl bound dec cmpsl mov ret in inc sub dec push add pop add fistpl mov in inc xlat imul fs pop rcrl xor (bad) jns in xor push push and incb xor pop xchg ret decl out mov call xchg mov jne test in jne (bad) mov dec test repnz sub jecxz inc clc sbb pop pop lcall add or (bad) sbb or inc aas dec push dec mov repnz stc imul ret (bad) addr16 fbld cli gs sti sub shr fistl add int3 push mov int mov movsb jo ret ret loop pop adc add cmp and xchg push push or das inc sahf cwtl test push ja adc add push dec xorl cs xchg (bad) xor faddl xchg jne js out fs or jle je jmp push sbb mov cmp lods (bad) jge ja xlat pushf push add add and mov cmc out sub adc in add loop lahf sub push jo fcmove add aam stc add test jecxz add fiaddl push dec add adc les mov mov pop (bad) gs sub cmp sub mov xchg push xor cld leave mov dec push testb mulb xor out mov mov xor int3 mov sub xor fstps and outsb mov imul push bound stos sbb pop and arpl (bad) cmp jne cli sub push xor mov arpl mov cmp cmp leave push or or or movzbl mov xchg mov leave mov sub loope sub daa inc fbld pop sub in aas int ds sub push jne jb sbb sti shlb sbb pop hlt mov add xor (bad) xchg lret push ss jmp scas add in ret sub into call les mov out xchg mov outsb repnz xlat sar ss adc stc repnz daa push xlat loopne icebp sub mov aad in xor mov lea mov jp repnz je mov cli scas aam xor sti cmp xchg mov ret or leave in fnsave cli in adc out pop xor outsb cld insb ret ss xchg scas ret pop in mov pop std pop and aam dec fnsave dec ret add call fidivl mov mov loopne dec add dec jae and bound mov add inc mov mov pop in jmp fstpt sub mov xchg stos pop adc mov lods xchg dec cwtl dec and jmp and mov mov lahf sbb xor add add dec rclb and js lret sub (bad) lods mov push mov into jecxz pop push xor and sub dec aaa and iretw sub jns mov in movsl jp popf push push dec push jmp mov jg test out push ljmp and test or xor aam pusha xor mov mov dec stc das and sbb or popa or hlt insl aad mov insb scas mov cmc and push push (bad) mov add sbb sbb inc jb adc pop mov xor sub out xor test and mov and sarb jmp int3 xchg fs icebp (bad) ss dec xor repz movsb inc daa xchg push ret (bad) and jmp pop (bad) push jns pusha dec js in shll ss push testl push adc xchg shll and out lea cmp mov mov popf lret loope or andl (bad) or mov (bad) scas mov je jmp mull mov add sub jg gs pop imul and sbb sbb leave push ret sbb sub xlat cmp inc fimull xor pop inc mov sub cmc xor jmp mov daa negl dec into mov mov xchg fs pushf sti lret mov aaa cmpsl or sub lods pop (bad) jo xchg add jb sub and sub pushf leave test or rol and and stos adc out and out mov imul or insl in divl pop aam jb jnp cmpsl cmp ret ds dec pop out and and lods xchg push daa inc mulb and push xchg lea add and and mov addr16 push pop and sub dec aas xor jmp pop shrl cld pop ljmp or fsubs lret xlat les divl mov clc add jnp xor xor adc fbstp push out (bad) mov es imul hlt idiv add jl (bad) jmp and pop jae xchg push dec loop or sub push or movsb inc paddw in out xor loop aaa aam jp or fstenv insb add adc and or (bad) mov pop dec (bad) hlt jp out jmp adc dec hlt jnp dec leave mov pop lods inc lcall push xor cmpsb std out icebp mov in lret mul push cmp shrl cmp dec ja sub (bad) and push std sbb (bad) leave movb (bad) mov dec sti lea xor push adc jg (bad) into or icebp and popa lret (bad) push dec (bad) out mov or push aad mov popa xchg push push rcl jns mov repnz xlat int3 dec aaa or cltd mov (bad) fimull fnstcw out dec int and lahf xchg repz into scas in (bad) (bad) testb push movzbl decb cmp pop fcoms pop daa or cmp rcr jle pop add out or xchg (bad) aam loop xchg stc xor cmc out or es pushf int3 inc sub ja stc dec (bad) mov xchg leave xor mov add adc cmpsb sbb enter adc jp sub or sbb pop test xchg xor das adc dec scas jno xor ss out out push repz mov push jae mov xchg (bad) cmc (bad) popa sub icebp mulb dec adc lea inc sub inc outsb xor dec sbb stos je call cmp push push aam and mov bound popf pop cs dec inc dec xor dec pop mov lcall aaa adc mov std add ret sub leave xchg fstps jbe mov xor cltd icebp mov repz daa pop sub out frstor or pop xchg mov add fs push or lock jp mov fimull loope jnp add pop xchg lds lahf addr16 sbb int mov scas lods insl movsb out xor jecxz iret xor out dec xor xor xor and rcrl negl out adc (bad) pop cli cwtl lea mov jmp inc faddl cmp xor pop pop repnz jae jle inc daa pop stc xchg dec adc sub adc add fsubrs rol aad (bad) fld inc (bad) out cld dec mov cmc inc or adc (bad) test cmp into xlat pop dec mov mov fnstcw pop out scas (bad) and dec mov adc lea scas jb mov jo movsl pop add or push clc sub fist pushf push xor pop adc cld mov fistpll or ja loop jge ficoml idivb xlat cmp pop or mov dec faddl sub testl movsb ret fs inc cltd add xchg cltd out mov dec and mov lret scas cmp push sbb (bad) fs lret push inc lds jmp jno gs negl sub sub mov cmp dec sub mov stc popf (bad) push mov lret (bad) cmpl popa hlt out insb sbb pushf lret xchg cmp inc or cmp into ja fmull mov dec xor sbb jno arpl arpl les or movzwl fucomip mov add loopne into popf roll adc pop add mov xor add cli xchg mov inc or sbb lds loop shlb add rcrl mov leave jecxz sbb mov mov xor shrl (bad) xor add lds xor add dec (bad) lds push and mov inc and mov decl mov data16 pop iret cwtl xchg ljmp mov sbb jg stos dec sarb cmpsb mov xchg inc push roll push inc neg rcr ret cmp adc push test pop inc dec push pop int3 push pop cwtl or lds loop pop cmp in sub cli fs loop pop popf inc das clc push xlat jecxz dec jmp mov sbb xchg add mov pop sub mov dec cmp cmpsb ret aad add mov popa jbe adc test rol xchg xchg fimul xchg outsl icebp jle fs mov (bad) pushf jmp (bad) jmp xchg dec movsb movb push loop jge (bad) sub dec or subb xchg mov pop sbb int3 jecxz pushl push jg sub mov (bad) dec repz or or mov inc or (bad) stc mov add test lret xor jecxz push fucomip loope add clc jne pop es aas lcall xor rcr jle cwtl xchg lods call xchg outsb es shll cmpsl xchg push fdivrs je or aam dec sub rorb dec lret dec add push cltd jo outsl in xor (bad) jg mov out mov (bad) call stc cmp mov jne repnz pop lods add add int loop pop test xor jbe jmp pop lods dec (bad) cld leave pop loop mov test mov popf aas rol into inc inc xchg rcll and add or ficom cwtl and mov cwtl and xor pop out jl (bad) negb fsubp dec icebp (bad) stos in stos ss and jl push or push add adc gs dec mov clc pop hlt int inc pop sub pop shll clc dec mov test adc jle xor adc popa dec mov and pop mov or sub (bad) imul add add dec mov xor inc or sub lock mov or mov adc cmp jp sti or sub mov sub mov cs ljmp fcoms xchg ret das (bad) outsb out cmp outsb mov cmp lea push imul (bad) mov out leave lret xchg add (bad) rorl xor mov xor mov stc mov mov (bad) imul mov insb inc fistpl lds ret (bad) loope push (bad) (bad) sub pushf xor mov xchg popa inc idivl out jge div out das lods sbb mov aam in and mov dec xlat ret lea and iret cld mov sbb add sub lret sbb cs mov mov call decl int cmp imul and dec call push inc ds sub out pop (bad) xor gs ss xchg xor pop icebp adc mov fild add ror adc pop mov xlat xchg xchg mov fdivrs icebp loop icebp cmp lcall jp lahf test mov inc mov rclb or out fs pop sub or iret push dec and scas ret jge aaa ds clc imul ret cmp sub outsl pushf xor sti mov out pop cld xchg xlat repnz test pop in rclb and into mov push sub out xor mov sub add and xor fbstp mov lds pop push mov xchg jle (bad) or repz (bad) xor es inc xor stos fs jne pop movsl fcmovnb adc out lret mov cmovo fsubs mov sarl adc loopne ret sbb rorb out pop int pop mov lret decl decl mov mov xlat arpl xchg cmp or push in lods mov push push xor mov imul mov mov sub or ret cmpsl (bad) xor cmp test xor adc sbbl sti call loop xchg push mov idivl cwtl iret ljmp cltd inc xchg shlb mov outsb bound and std or ret xchg leave jne xor test jnp (bad) not and test jo (bad) ds sbb adc insl test add jl sbb mov or and test outsl push and and mov inc scas movsl or ret cmp xor sub out in jg xchg lds adc lods imul sahf mov fldt leave fstl loop cmp fldenv jo push out clc in stos jns adc xchg mov call or sahf or jb,pn imul xor rclb dec out loop cmp and aam pop pop pop stos fs mov sbb mov bound rorb sbb jnp adc in jle mov jmp out addr16 scas roll and insl xchg fiadd lcall iret and out (bad) repnz (bad) int3 mov pop sbb jecxz imul mov mov data16 pop out mov and mov icebp popa pop sub xchg cmp mov push es fisubl or push sbb add pop cli lock cmpsl ret sub rol sbb dec fs cmp movsl movsl push imul xor mov and inc test leave (bad) repz leave andb testb mov movsb mov int cmp repz popf dec pop hlt cli xchg pop push orb push xor mov aaa repnz sub in or sub and call mov (bad) xchg sbb rclb push or xlat lcall dec (bad) jecxz mov (bad) dec movsl lahf out call in stc loopne or stc popf das rorl or in adc (bad) (bad) mov pop out mov mov stos pop xlat adc popf fcompl inc push add ret pop pop (bad) and push fs xchg test ljmp jecxz mov jge popf fdivp push fdiv or sub add ret ljmp mov add and and jl test enter mov push imul push lock sub scas cltd in mov mov notb jno xchg jmp fistp les add push adc insb rcrl mov shrl iret leave (bad) mov imul sub add jecxz (bad) in ljmp pushf (bad) pop jo add test sarl add jg sbb inc jp gs sbb push add mov paddd sub push in and stos lea mov out out js in and mov push mov xchg adc (bad) dec or (bad) jno push cmp fidivl into cmc jns insl push jnp and movsb loop xchg mov mov pusha or cli xlat pop scas das icebp loop xor jg sar sbb sub mov jmp out add cmp pop xor ret ljmp sub pop inc xor push inc fisub xchg test mov das push fstpl pop push sbb cmp aas mov push mov cli sahf loope sub (bad) jmp clc lret sub test imul mov cmp push pushf (bad) (bad) into cwtl lods out add scas xor cwtl mov (bad) cltd scas mov (bad) jmp ljmp mov pushl inc pusha test idivl lret cld sbb pop jle repnz push push adc fs add notl push xchg add or daa pop lds lcall mov pop mov pop (bad) inc rorb xor bound inc int3 lahf in scas hlt xor jle les je repnz sbb rolb enter sub fisttpl jecxz ljmp mov daa rcrb pop mov xchg stos add jmp call dec add test lds add xchg scas out and pop jecxz lret add pusha xchg (bad) mov push mov adc scas mov xchg lds adc (bad) pushf xchg (bad) jecxz dec ss xchg pop (bad) fmulp pop pop or out aam sub rcrb pop push mov movsl push pop jge mov jle testb push sub stos push mov int mov dec ja iret and sub stc and xchg push leave sub stos xor cmp cmp (bad) jmp push jge push push pop lcall push ficom adc aad dec adc push pop mov mov pop mov ljmp cs repz pop push out and cli stc outsb (bad) mov popf xchg stos lret mov mov das ficompl xchg xor add add cmp xor add clc xchg dec cli mov dec and inc add push xor cmp xor decl test movsb scas mov mov xlat inc in out es jge push and daa mov fldenv add mov sbb aam push mov out sub cmp outsl and in fstpl psadbw dec call inc xchg and popf lcall int3 add stos ffree add mov in into ret lret mov inc mov jecxz lret mov mov cmp xchg xchg imul dec mov mov xchg stos or jecxz xchg fs xor push insb loop dec bound (bad) je repz popa outsb shlb add sub repz repnz cmp scas movsb scas xchg jg rolb inc fucomip xchg add dec adc mov mov sub sub adc sub jae lea hlt sub dec jns mov dec push roll sbb lods (bad) rolb fbld or xor bound rcrb and or push and push out popf pop mov je popa repz jnp pop lret pop mov je adc out lret out xor push pop sub call or stos mov mov bound lahf inc imulb ljmp (bad) cwtl mov cmp xchg push or sar lds sub repz xchg icebp loope jecxz lcall (bad) lret xchg mov (bad) adc add mov push clc mov mov repz mov loope jecxz loope xor xchg pop dec mov leave add das mov lods inc add inc (bad) mov jbe movswl sbbb in pushf fld (bad) sbb addr16 jge or mov rcrb sarl (bad) repnz sti and jecxz xchg mov mov (bad) ja sbb pop jmp cmp enter int3 (bad) neg aas xchg loope stos mov and out psubd pop dec jne cmp jmp cs mov xor repz adc lods sbb mov mov sub adc fdivrl imul cmpsl pop int3 dec or push stos inc lret dec push pop mov and xor fisubrl cmp xor jg mov add push mov mov bound inc cmc dec sub add in stc cmpsb ljmp mov (bad) arpl ljmp adc (bad) test push add mov add push loop pop aad and icebp mov pop push enter pop test ja mov cmp xor mov mov cmp cmpsl push sub xor push sub cmp das test lds enter ja and lret repnz mov jne pop repnz jl sarl push sti lcall pop lock out test cmp leave mov (bad) fiadd lds jno neg leave fnsave leave push fs mov or shll das cmp adc pusha sub cmp or xor stos cmpsb push push sub push pop out xor ficom xchg (bad) mov cmpl aaa subl add push jle jae cmp lret imul enter adcb cmpsl mov sub shlb pop mov push insb xor mov out mov (bad) stos mov mov in daa jns inc pop adc dec (bad) aaa (bad) cs mov sti adc mov int popa inc ss mulb les push (bad) fucom xor add rcrb lods cwtl push enter cmp and add push or icebp and jns movsl clc stos dec loope sub mov xchg xchg iret mov or xor loop pop ret push sub mov xchg jl sub aam test out pop mov cs fidivl mov add pop mov lret add gs mov loop nop dec mov (bad) dec mov hlt add jo or cld sub push repnz lret cmpsb xchg faddp scas fsub jo sub pop mov sbb jb pop imul jb out jno int cmp jns addr16 ret xor test cmc xchg repnz ljmp xchg ja mov ss push in pop shll jg mov popf jl leave movsl sbb ljmp loop sub data16 adc xorb shl jmp lds add (bad) testl ds mov std adc dec cmpsl jmp mov lcall notb xchg negl dec shlb mov or pop sar (bad) mov mov cmp jle push xlat loop xchg lds xchg sub or mov mov bound out sub icebp adc mov mov rol adc xor jmp sbb cmpsb lods pop sti mov call sub mov add popa xor (bad) sub arpl je mov xlat and out addr16 je cltd or jnp,pn pop loop adcl in or xchg lds push mov iret xchg nop add lret pop xchg mov cmp sbb sbbb and mov pop sbb push test cld mov jmp sub popa sub mov aas mov push cmp pusha jmp pop xchg push arpl fcomps inc call in clc loop pop sbb into jmp outsl or clc jecxz (bad) lcall bound loop add (bad) loopne or pop adcl xchg sbb inc mov mov (bad) fbstp push clc out sub cs add cmpsb lods xor inc add sub cmp les or fldl2e (bad) sbb cmpsl aad add popf cmp mov cmpsl dec jb xchg jno dec jae mov sub frndint xor push daa cltd pop push fistl jecxz cltd inc sub lds call faddl sub clc sub lock add (bad) fwait xchg ja das dec insb or repz adc rorb lahf push adc mov lea stc fidivr les into notl and mov repz cmc jnp cmpsl (bad) repnz sub jl sub mov jge hlt imulb mov pop lahf xor sti loop xchg fsubs in adc push ret (bad) clc or or lret push pop in (bad) imull xchg ret (bad) outsb sbb inc or in ss mov mov xor mov dec leave mov xchg mov inc add pop lahf cmpsl clc mov sub xor pop mov loope xor pushf outsl or outsl push push and ljmp fldcw cmp or repnz fcoml out pushf adc cltd jmp int jge mov lret lret nopl adc adc push mov lock jns (bad) xor sahf dec (bad) (bad) repnz lcall ljmp sub clc cs jg lahf mov out leave fidivrl jb add xor mov adc pop sub mov sbb sub add mov and push mov mov test stos mov pop adc loop xchg les bound outsb sub xchg aam imul xor and xchg lock mov in cmp ljmp stos int aas (bad) jge jg aaa leave jge adc xchg mov pop leave daa push sbb insl (bad) enter push ret scas cmpsl loope mov loopne or mov clc or (bad) jno ljmp sub sbb jl test addr16 insb add inc fstpl xor or test out out in push pop pop mov jmp std sub les and jnp js dec jmp sub fbstp jo jo xchg (bad) push out leave jecxz lds xor cwtl cmp add add fildll notl divb pop or adc test aaa mov add insb inc mov leave sbbb aaa push sti dec jecxz jne inc (bad) xor inc mov imul (bad) stos jns jnp std stos jge das in jg xlat pushf mov pslld or daa jnp jmp mov push mov mov cwtl inc sub mov or into jns push jne inc sbbb rol jb cmp (bad) pop or jno add es out sub (bad) xor fildl movsb leave scas lods cmpsb mov icebp xchg ret cld in dec jmp (bad) pop mov rcr std xor mov dec bound movsb dec fnstcw xor lret repnz mov cmp inc call lock xchg mov (bad) cli sub and pop fdivr add addr16 cmc pop sub inc (bad) sar dec aad adc pop repnz imull and repz rcrl lods outsl int3 pop and test aam pop out (bad) dec out jb or sbb inc out sub imulb clc cmp pop (bad) clc push cwtl sub sarb dec mov or loope and mov stos jb push push je cli aam push dec in insb dec mov xor sti repnz xlat sti je aam mov test test add mov xlat adc sub loop lds hlt or xor add rep aam out mov cmc int3 fildl mov jo xor xor cmp lret orl and enter cmp or or mov dec and stc aas cli das ficoml cmp stc cli xchg mov insb and cmp shr bound cld loope loope pushf fstps cwtl ss sub leave iret movsl std in rcll loop xchg stos (bad) jmp xchg loope pop inc push fstps nop sbb add rcrl sub cmp jno loop sub movsb insl mov or sub and cmp lods xchg lds (bad) xor xchg dec mov js xchg adc stos cmp pop nop push popf push jge call sahf push (bad) push mov lahf daa mov test loopne ljmp mov and (bad) cmp daa into daa jno xchg add loop jmp ljmp dec mov leave sub shrl (bad) and mov (bad) lods sbb mov adc pop popf les nop add outsb dec xor or lods or mov ljmp cmpsl inc je rcrb mov pop iret mov push sub out addr16 pop dec iret aam pop ret jne cmpsl aad mov lahf xchg mov inc push pop ret dec loope lret push pop xor mov cmp lahf jae adc mov ljmp xor xor cmpsl add cs je inc shr sbb call das (bad) cmp push dec stos lea imul rclb ljmp icebp shll mov mov ret (bad) lock cmp or and bound test or (bad) xor lea stos test lret inc leave pop xlat mov std or push pop (bad) int3 mov cmp fwait and sub ljmp lods loopne out (bad) mov pop mulb js loope mov (bad) push jns dec mov jae push lret out sub or ret and pushf ja ret js sub push xlat pushf int3 (bad) (bad) mov (bad) dec das push ret jmp pop mov cmp cmp call jbe xor mov xor ret mov mov xor call nop sub movsl outsb pop pop lea or pop mov aas out lret fnstenv ret popf flds sbb movb mov cmc les pop or bound ljmp lret mov and inc insl and (bad) push add mull and repnz into repz inc and mov pop adc repz sbb push mov cmc mov stc mov ret mov jne insb pop pop cmp sub pop mov std rclb xor sub ss sub cld imull add mov pop les adc dec lret or xor xchg fsubr sub out test or xchg inc rorb call sub pop or jmp and or dec sub mov callw mov ds ljmp loop ffree xor out pop mov stos rorl inc movzbl xor lahf loope bnd mov lds movsl loop xlat mov sbb pop insb inc add cld or dec inc neg inc pop nop sbb push add (bad) xor hlt leave (bad) adc ljmp fistpl (bad) mov mov dec sub inc ret or (bad) mov jne cltd pop mov aad push scas sub movsl push clc push mov test fidivrl movsb lods daa jae lods xchg bound pop push inc push and popl scas or mov stos testb add or dec xchg xchg cwtl xchg mov (bad) negl (bad) jne,pn push mov daa shll mov or mov and mov mov pop lahf xchg add fnop int cmp jg sub and addl movsl mov arpl inc lret popa mov je ret push push fsub mov ds out jmp xchg mov cmpsl xor adc mov add addl pop mov mov fdivl xor jmp or mov out fist inc dec out repnz repnz (bad) iret xchg xchg ds (bad) jge mov push lods sub mov xchg out add pop in cmpsl cwtl and pop push add popf es push inc das mov (bad) cmp xor xor pop imul addr16 or inc add cmp jo lret or fdivrl call push push xchg or adc mov mov add nop jmp cmp dec jge lret or xchg jg out add ret add xlat popa data16 ss or ret subb mov fadd out jmp xchg inc out fidiv daa pop and daa xor push outsl add int das pop cs ljmp stc push mov out push adc cmp and xor or repnz push ret test xchg imul mov repnz push xchg (bad) (bad) je lods popa and mov mov pop leave or dec loop (bad) mov pop lods pop mov and mov dec inc dec dec scas lret rcrl sub idivl aaa das inc adc cmp mov mov mov pop inc sub mulb xchg dec jle cs push or aad jg push mov out lds stc dec stos pop pop out inc mov popf gs pushf add iret mov daa push mov mov fistpll mov notb sub enter dec pop or rcr sub push dec imul dec sub negb shll jmp cmp jmp push mov roll inc mov mov xchg ljmp pop (bad) adc div jb jle shr shrl sub cltd subb fmuls fbstp xor inc and loop xchg es xor fstps roll iret fs push loopne xor dec fucomi movsl mov aam imul cwtl sub cmp subl add xor mov std (bad) cmpsl addr16 fdivrl and xor and leave push fs mov lret movsl mov (bad) call icebp dec dec jg xor mov sbb cld dec or (bad) je cltd adc lret mov jbe add (bad) fnstcw les mov adc inc sub stos xor add (bad) enter sbb and cmp divb cmp inc sub xchg call dec push (bad) xchg cltd sbb stos push movsl cli mov pop and mov es loop or sub or sbb mov int3 push pop mov fdivrs dec xlat xchg outsb pop xor push xor ds jle jmp pop fisubr mov and sub inc arpl add jbe fdivp push das nop inc and popf hlt pusha int cmp js shlb mov ret and and add mov inc loope jge inc and flds outsb lock jne xor pushf sub je out jb pop sub push xor adc movsbl lock jmp divps push das inc dec clc lahf mov sarb pop push mov jge pusha hlt addr16 mov mov add pop pop push push dec divb push sbbl pop xchg mov mov (bad) dec push lds fwait and add inc xchg push and repz mov add out sub bound sub or fmuls arpl pop ret leave cmc test pop out rcll xchg repz dec stos pop ss je mov inc cli mov rclb repnz daa push xchg iret mov add xor jmp dec aas dec push jns mov sub xchg push je bound push push fmull push add sub cmpsl mov loopne (bad) mov (bad) cmp icebp xlat mov xor xlat pop sbb sbb leave andl std (bad) jp jp clc out mov leave imul jae data16 mov inc pop dec inc add add popw xor daa mov aam push jo loope cmp rorl aaa sbb jmp jo adc scas pop scas dec mov std inc scas pop clc stos sub loope ljmp mov adc dec add scas xor out cmpsb mov rcrl je sub out pop add cwtl test enter sub fbld sub dec jo clc (bad) shrb imull mov fnstenv mov ljmp fcmovnbe mov add mov fld jg clc xor in cli and outsb mov xchg xor loop imul divl mov fst pop out mov mov test push cmp mov xor fld aas cld into shrl loop add out (bad) xor fbld sub mov xchg fnstsw (bad) stos addr16 push pop or push and sub mov sbb mov pusha xor add out xchg cmp int3 out fcomps out cmpsb mov jmp out and ljmp and mov add xor or sbb (bad) iret test mov pop ljmp inc movsl in xlat add cmp dec cli mov sub test inc movsl clc iret pop imul sub or adc cmp dec add mov jmp imul mov push pop mov loopne (bad) retw adc pop pop iret jmp jne std sbb (bad) or scas fs loope push adc sbb loope add gs cli inc or xchg pop dec mov leave mov and xchg adc lods ss (bad) fstl cmp (bad) (bad) out ja jno xor data16 or out sub popa call mov sub mull sub cmp jbe pop mov mov xchg push fldt arpl cmp dec daa lahf out mov lods jp dec and mov mov fstl jmp andl lods dec jnp xor stos int3 sti call jmp sub push cmp (bad) negl cwtl jp ret es pop fistl sub cs ret adc enter mov pop sub adc cwtl fsts fs lods sub add mov adc gs pop mov sbb data16 test or test imul rorl arpl sbb xor leave jge jmp cltd movsl push xchg dec cwtl or xor sub or (bad) out pop repz sub jg xor les mov jle (bad) (bad) int3 das into mov movsl (bad) jns icebp sbb sbb ss xchg push lods and add hlt or mov hlt iret pop jne scas sub mov in fisubr imul inc adc cmp sub lsl data16 jecxz pop imul cmp ss inc sub int3 div pop xor repnz xchg out mov pop xor test pop mov dec adc xor and mov (bad) lcall fbstp mov cs lret or mov sbb or and (bad) mov mov xchg loope stos lret or sbb add loop in mov out ja in pop test in out or add xchg or sbb mov mov fdivrs cltd inc adc jmp xchg pop (bad) icebp ljmp mov sbbb repnz lret mov cmp in daa mov add xor xor and das fnstcw enter pop pop pop sti push and dec xor xor fisttpl push stc pop dec or icebp inc add sarl ss icebp pop inc lret mov add sub (bad) adc in das imul or sub pushf push push pop mov xor scas pop outsb fcoml or dec fucom and daa divb orl xchg or mov out lret mov sub adc (bad) nop xor or mov push das daa jg adc jp xchg xchg add (bad) and imulb sbb cld clc pop sub pslld loop push pop push leavew mov in jmp push cmc fsin xchg cmp add xchg push outsb mov loope fistl sbb je adc in test sub mov daa sbb rcrl jmp idivb test outsb mul dec movsb mov dec xchg out jb sub pop mov pop popf jae pop sti cmp call pop cmp daa out jbe dec dec fisttp pushf sahf adc sti lret ret cs and inc arpl and mov mov inc outsl sub jne mov mov dec mov leave jecxz jno shll and sub nop lods and out loop xchg jmp push sub loop jbe pop add pop mov fistpll fcmovb js imulb sub sub mov loop shlb and stos xor testl aam in xchg lret xor xor sti repnz add dec lahf cmp and ret test mov xor or cwtl mov mov jnp mov enter jecxz cmp (bad) popl pop adc stos jecxz xchg xchg cmpsb stos mov lcall push push repnz int adc xor loope xor and mov push xor jg or xchg rcr add int3 xor cmp rclb pop cmc add flds dec dec adc jo popa scas out cmp jmp sbb (bad) xor fnstcw out xor push sbb (bad) xor mov sbb mov and repnz xor pop mov sbb mov aam lret adc lahf icebp sbb xchg fs and inc push cmpsl push pop cmp add mov or and insl and mov or repnz (bad) adc fcmove movb mov mov cltd mov jecxz jle add xchg test pop xor sub lret stos sub xor or lea lods pushf stc pop ret xor repnz lock add aaa (bad) jmp jbe cli loop nop cmpsb adc dec inc sarl jmp xchg xchg cld sbb cmp cmp in ljmp pushl fcompl add cwtl dec add fcmovnb adc sti je icebp and pop pop and ficom add jle das mov in stos cmp jle xor cmp adc jno xchg xor repnz mov (bad) sub adc mov sub out push push mov dec repz pop mov out adc pop or cwtl or inc xchg test dec ss add in movsl jg leave jg fdivs inc xor xor jg pop sub or jmp scas std mov sbbl ret push mov push xor and cmc cmp stc je add pop rorl fcmovne jnp mov das adc add insl adc das (bad) sbb sub mov cmp or mov mov and in fadds sub loop test add mov inc xchg scas repz sbb add test outsb lret push jle (bad) mov daa or sbb sub stc pop or ffreep fcoml sbb adc sub (bad) sahf jbe fildll fcomps dec cmpsl pop mov leave fisttp cs gs dec inc out imul or or push or xor out fldcw sub xor test popf or pop ret sub notl div shr imul xchg nop pop out popf cmp ficomp cmpsl push out lret popa jle cmp mov push sub mov pop ds xchg cmp outsl sub mov inc fldcw xchg test cmpsl or jl mov and inc loope cmp mov idiv sub divb mov shrl add enter dec mov sarb call mov cmp fmul push mov jge dec je mov rcrb in pop stc iret xor jmp and loopne mov xchg jg test or xor loop (bad) push mov inc fisubr dec sbb xchg dec xchg adc xchg in fwait sub mov mov out ds iret notl lahf imul and add sub scas int and cmpsb lret mov call (bad) cli mov xor jo or push cld movsb (bad) cmp jge mov push daa rcll adc mov loop mov pop xchg and test pop xchg ja adc imul fist lret outsb mov push in jbe mov pop imul fildll shr call mov dec sbb imulb cmc repnz dec idivl icebp outsb add jbe pop sub fsubl (bad) inc sub jge jmp cli aaa cmp mov push jl cli jg dec xchg jo (bad) xor popa mov mov addr16 mov aas pop add cmp pushf and mov jmp xor loop sub pop andb fldenv jmp loope add adc stos or nop ja cli mov lcall gs push adc sub fdivrs shll leave or repnz xchg adc loope jmp lods (bad) mov xlat icebp sarb pop lret test sub mov ja scas pop sbb mov push leave out mov or and in fbstp in loop xchg cld pop pop mov repz (bad) stos rclb stos popf fsubrl mov pop sub (bad) icebp out lcall cmp les setno aas mov repz or cmp inc add aaa scas fsubs or or push cmp and leave (bad) jns dec push orb ljmp lret jno or pop ja test push mov ds mov dec in jnp fldcw add (bad) pop mov scas (bad) adc sub lahf jl mov mov jg sahf inc jmp sub pop cmp (bad) jb mov out (bad) lock jp hlt mov jp cmpsb xchg jbe pusha cmp add popf pop xor sbb sub test fistp push xchg ja push dec adc mov jno xchg jmp dec icebp imul cmc int mov cmp adc push cli scas inc add mov (bad) clc jmp mov pop call pop ror push sahf jo and je inc add pop or mov daa idivb pop and xchg lock lret cltd je fdivrs sub frstor mov adc push out idiv adc inc sahf cmp (bad) xchg dec enter and xchg movsb adc ret mov jecxz dec test and mov int3 ret pop divl fmuls ret push (bad) std sarl sub into sub add add ja add cs jp pop pop pusha pushf mov jnp and rcll lret (bad) hlt lock adc mov xchg mov in rcrl lods sub push sub or mov mov (bad) bound div outsb mov or add test lds or (bad) inc in pop xor xor mov cmpsl pushf cmp pop insb (bad) push (bad) repnz mov ljmp imul jnp and shll test mov inc lods and add jmp mov lea imul daa sbb push fmul arpl mov pushf nop inc xchg addr16 scas jle push test enter push into sbb mov sbb popa pushf xor out (bad) sti and cmp add jne inc jae and daa pop inc js mov fmulp sub leave xor rorl sub into add mov pop test loop jmp mov lods clc dec lret push adc bound pop test mov pop inc lahf cmp pop cltd les mov xor pop jge cld xchg into jb out push add and sub pop lahf imul dec lret mov loope rcl pop fisttpl dec lahf clc add mov cli fcomp in in inc dec xchg (bad) outsb sbb adc out mov lret add adc mov sub popa jnp bound mov xchg inc xlat in das mov pop mov jg in (bad) loopne aad dec mov jg mov cwtl popf leave fisub sub aam movsl inc imul xor shr bnd xorl lahf out jo ret mov sbb (bad) push fisttpl sbb mov pop jmp sub xlat dec out mov dec std sbb add scas cmpsb sbb sbb ret stc hlt fs xor out xchg sub js adc add into and mov inc pop or jno iret push enter fldln2 push mov dec (bad) mov int3 (bad) add je scas les jne mov rorl ret and out ss sbb into outsl cmc xchg cmp fsubp mov jne mov mov inc dec jg ret pop inc mov je or aaa iret ja test stos mov int3 ja mov (bad) rorb pop jecxz xor popf movsl pusha and mov leave ficom pop std or add sti inc pop imul dec xchg aam push fnstsw xchg and mov loop les mov sub cld mov clc inc pushf adc xor out xor lret xchg push jnp movsl nop xchg add xchg mov xchg mov stos xor ljmp out add or sub testb sub or out pop xor dec sti jl repz or xchg les xor mov cmp icebp mov test movsl stos or jmp xchg test rcll sub roll pop mov pop mov iret in and cmpl je mov mov dec add cmp dec pop pop iret xor jmp jns imul pop xor aam dec outsl nop je hlt sub in dec mov push mov (bad) or push (bad) lock xchg xor out outsb call xlat loope ds dec inc mov shl add adc and xchg fidivrl (bad) lock xor cli or lods pop mov into arpl into mov rcrl rclb and (bad) mov jb lock dec and adc ja dec push lret and jbe adc and cs or aaa movb xor and popf inc cs jge decl fistpll lret xor ret aad mov push xor out lret out pop adc int push (bad) clc mov (bad) adc sahf push sub jmp pop (bad) mov mov divb andl clc xchg sarb and pushf xchg decb movsb and imull andb jne xchg sbb test pop fldcw (bad) sub (bad) aaa sahf add cmc sbb lcall jae aaa dec in xchg xchg dec repnz sub mov (bad) mov mov push dec xor mov aas std repz xchg mov mulb pop cmp dec mov popa xchg into inc cmp and test mov in cmp bound dec cwtl mov lock aaa mov dec pop (bad) out dec les cmp das (bad) (bad) jae xor out mov or jnp mov inc xchg andb adc in pop cmpsl jl and mov jmp into cld inc (bad) xchg (bad) jb (bad) jg sub sti daa push mov cmp call mov js pop mov sub test xchg stos adc cmp out mov subl jg add call out sbb mov push (bad) mov out lcall aad push jg pop dec xor out mov sub dec add out add mov jmp iret mov add in daa push aas in test add hlt adcl lock rcrl cmp mov adc je or push sub cmp lods imul cmp insb inc pop in cmp push cmp jecxz mov push jle,pt sbb mov push aam idivb idiv mov mov add jmp rorl pop mov pop sub movsb cmp cmpsb outsb push test xor mov dec lea popf push (bad) bound pop jg pop and lods mov mov dec xchg cmp push jno insl or les dec and mov cs pop push sbb sub xchg fldt incl icebp stos repnz rorb aam mov aad push dec aaa loop mov into movsl mov and mov (bad) fsts mov pop and inc ljmp (bad) es (bad) sub cmp setb ret and dec xchg repz sbb ret test hlt dec adc icebp rclb out sub repz (bad) cmp js mov push push lret dec pop test enter into jns dec push stos xor add out cmpsb jnp sbb xor ret xor out add pop push shr xor faddl jmp mov bound and dec mov cmpl mov insb (bad) sub mov sub xor jle sti mov push call aad mov js shll leave fcoml stos cmpsl sbb push negb (bad) fdivp cmp test nop aas into das rcrb (bad) xor into stos in mov mov jbe (bad) jmp mov pop jge push ret fisubl clc inc sub mov rcrl in fcomps lret pop push lds sub movsl lret push push pusha sub sbb lret int jle ss and rcr dec xchg icebp mov add and pop cli sub test add xchg xor mov mov (bad) leave jge adc lahf add add sub scas xchg xor lahf das test (bad) stos (bad) (bad) aad mov mov js mov push pop hlt mov jmp fisubrl (bad) jns mov add lahf mov (bad) repnz (bad) jmp dec lods xchg and or inc mov cwtl cmc iret or cmpsl push jl daa xor idivl ljmp lret xchg pop xor and call sbb or out scas cld loop mov push pop and add loop and pop xchg and (bad) stc out divb fimul in and aad xchg imul adc fsubrp xor cltd adc push jns dec imul mov cli cmp and dec lds cli out and ljmp daa stc jno movsl push int3 (bad) mov sub loop xchg mov imul sub repz cmp mov xchg push lcall sub lods scas hlt lret clc mov fld rorl sbb mov xor push inc addr16 fs mov mov inc ljmp dec and fsubl les sub inc andb iret and pop inc and (bad) in cmp icebp mov cwtl dec add mov inc nop hlt pop ds dec call jle (bad) pop adc mov pop jmp lds int popa pop inc mov inc jno (bad) push in pop repnz aam leave mov jno dec push mov faddl je xor mov mov inc xor xchg xor inc xchg mov inc iret push outsb cmp (bad) push inc jmp push repz dec xchg lods mov sub and push and jne inc dec sub mov xlat mov leave dec mov cwtl sbb lds cmpsl xchg push xor add imull or mov into lahf inc fildll or and lea mov cmp out or push mov push mov lods (bad) lds ja mov pushf push test (bad) xor icebp mov pop cmp mov sbb iret xchg fist jecxz push shl push and std lret lret call movsb xchg ret icebp xchg lret repz and or lret mov ret push mov mull xor std clc cmp and lds fsubrs rorl stc push sub loope stos sub lret dec sub mov ja and sbb in popf rclb lret lret jecxz and sti xor cmp pop dec aas out and and std pop xor rolb pop (bad) mov mov mov repz out and fistp jmp dec std sub daa cmp pop jp pop mov sbb xor add out sub add mov mov sbb divl mov loop lret and xor add sub add lret xchg lret push inc cmp jmp add fldenv iret subl enter cwtl clc and int3 push add mov cwtl test pop and mov adc mov clc jmp loopne fnstsw aas pop inc sub je pop (bad) pop mov sub cli sbb (bad) sub aad (bad) sub mov adc cs push das ja pop jge sbbl (bad) out lret icebp or dec (bad) or (bad) vmread popf push loope add popa jmp sub addr16 ret mov (bad) (bad) push fld add and mov gs cmpsl movsl pop cld dec clc orb ret nop jecxz sub xor push stos gs popf (bad) in scas (bad) cmp pushf cmc xchg or or and add sub mov fld cmp movsb (bad) cld cmpsl fdivr in jb sub lods pop rclb xchg cli lret mov sub loop jg adc test loope andl adc rcrl cmp fmuls shll add out add cwtl repz sub jmp leave push pop push xor and xchg adc xchg mov mov jecxz pushf notb pop test jge jmp shr cmp mov push sbb push mov loope inc aam lock adc hlt repnz jg sbb cmp cmpl sub jno add aam sub leave shrl das fistpl dec (bad) lret aam jbe mov imul or rcl add mov mov jae add mov cs in xchg xor jne add es pop mov mov cmpsl xchg or ja cs inc sub add push sbb fistl cmc sbb mov push pop sub sbb call xor jne add pop sub push aas xor rclb divl test ret incl and outsb stos mov ret add or mov fucomip loope cs leave add sub add ss cltd cmp (bad) fild xor clc xchg iret mov icebp or and and or xchg add loopne mov lock xchg xchg jmp fnstenv std or aaa mov movsl (bad) adc or mov (bad) jg lods inc jge cwtl push push loop xlat inc cmpsl jl xor icebp repz insl mov xchg mov xchg jne scas or cltd sarb ficompl or std mov cmpsb xchg pop shrb lret xchg jge rcrb and lods sub dec in sub mov sub jns xchg jns imul mov and into cmp mov pop jns movsl imul (bad) add sub cmp sub scas jge jmp ret sbb out je jp nop xchg sub bound repz adc scas repnz xchg mov sub xor xchg clc mov fdivrl cltd and add lods fsubrs xor es push out push iret sahf pop inc add aam call fwait or stos mov add scas lret aad leave dec jmp cmp sub (bad) mov pop (bad) insl imul sub dec cli fsub push xchg fisubr sbb mov sub rcrl xor movsl pop int add pop or fildl in lea mov fbstp xchg lret mov add jae movsl sub or stos test sub mov xor movsb addr16 cmp jl iret repnz mov and repz iret je jb loop fbld mov cli movsl fild shr into in mov mov std (bad) cltd js pop mul jns stos mov mov lret or test (bad) mov movsl or iret in xchg in loope out ljmp add mov mov adc dec sbb sub sub push insb pop pop push test lods xor outsl cmc and pop push jmp shll inc lcall mov mov mov and test daa pop and pusha add dec aaa fildll lods dec mov (bad) pop push dec imul jno mov aad shlb add lcall imul add lods adc mov push and fimull mov sub push (bad) lcall jge jle mov stos aaa out (bad) mov xchg stc mov clc xor mov jecxz fcoms shlb hlt push jns aas (bad) iret cs xchg testl icebp ja adcl shrb pop inc mov pop iret repz mov xor xchg movl add (bad) nop mov pop pop or rorl roll mov push push and jno roll adc add cld (bad) (bad) mov and or int3 enter xor xchg sub jle adc inc sbb lret sub add mov dec (bad) xchg dec push sub repnz fstpt stc sub jmp arpl jecxz lcall xor sbb cwtl outsb mov mov test push icebp jmp jmp sub mov mov jle stos adc cli leave lods (bad) lcall stos mov add scas gs sub sub (bad) addr16 pop mov push lret lret jge shlb or adc sub dec sbb cmp out cmp dec leave xor adc xchg in daa pop jmp shr fsubrs cld and rclb mov movsl pop pop insl xor xchg sub cmp push mov adc lods je mov adc negb into sub xchg adc mov push add xor ds dec or mov out push into jb mov or data16 inc mov jns daa ret out add imul bound into leave fstpl fmuls mov cmp or inc push mov fstps sub mov (bad) jmp mov mov adc or jns mov dec cltd dec lcall (bad) mov xchg pop mov jl in jmp outsl sbbl cmpsl adc outsb icebp jno clc test xchg and je imul in inc sub stos xchg dec push sub call loop xor lret or imul mov lret cmpsb js lret dec xor mov mov dec scas xchg sti and call divb dec lret into subb aas pushw cltd sahf dec dec mov mov jno inc mov out or xchg rcr or mov pop out movsl push sarb jne add lods cltd dec bnd mov push sub scas fstps outsl gs call xchg out cmp jb test push mov add scas out pop test out loope cmp add cmp or jg pop mov mov adc sbb outsb xchg jecxz test pushf (bad) and add mov cli stos mov mov int add lock and add out (bad) add jl rcll cltd cmc ds dec inc push dec sbb out adc sub xchg push sbb xor push xchg push xchg jge repnz daa or je pop push inc jbe sub xchg push int3 sahf xor bound dec pushf scas insb dec or ret stos in (bad) fcmove cmc addr16 mov (bad) (bad) test (bad) mov (bad) repnz ds jge mov outsb mul mov add ret out mov (bad) stc xor cmp pop dec lods loope ret call mov int3 push (bad) pop sub and aaa cltd cmp popf shrl ficomp jge (bad) lret gs mov sar or ret mov xchg pop pop out popl add flds sub lret (bad) dec push mov add lods dec loopne push test and enter rorl fimul sub rorl lock mov jmp shll pop sub int add rorl cltd pop sub das ret repz out pushf cmc iret xchg mov fsts stos stos iret rcrb mov adc sbb mov inc jbe fiadd push xchg xchg mov out inc mov je ret push dec dec or clc and fistpll mov jg (bad) xchg mov jl lret mov (bad) adc js push test jb mov orl jns mov (bad) repz cmpsl inc orl aad dec push repnz or clc adc mov jb push lret bound jns sahf and xor lret pop lret add cmp jb inc xorb sub push fmuls pop push das fnsave fnstsw scas xor (bad) mov iret jecxz and push loope push adcb (bad) les in cld and nop pop nop test xor inc jg fwait cmp adc cmpsb imul mov popa lods cmp jnp arpl in push ret repnz mov ss mov (bad) (bad) dec mov ret rolb cli xchg push mov add dec mov mov cmp jg popa bound lret movsb dec add fdivs pcmpeqd jmp add and sub arpl movsl int imul xchg jecxz adc fistl mov xor (bad) mov test pop dec push mov jnp xchg idiv lret out lods imul dec shlb (bad) lods lock mov fwait pop shll int3 repz arpl ljmp fs lock dec sahf mov mov and push mov mulb or or xor or push in or xchg test lea and or ljmp jle daa xchg loopne in jnp or pushf dec loope popf popa cmp clc movsl dec shll push sub sbb out inc je pop out mov and iret sub in negl ret (bad) jne cmc jecxz bound mov or repz mov icebp mov roll xchg stc loopne push mov dec repnz mov xchg mov xor inc test add out dec mov sub dec dec lret lods jmp or jp shr adc cli mov and sbb stos sub add add mov cmc gs inc mov sub js push arpl dec popf mov mov leave xor mov xchg sbb (bad) outsb test orl outsb into jg divb sub jl inc xor outsb cmp scas mov pop loopne ret sub or and fisubr clc (bad) adc mov aaa mov xor push inc jmp ficomp and push fisubrl lds inc dec cmpsb outsb pop inc iret or int3 xchg sub cmp jp in outsb mov mov out cltd lret cli sub arpl repz pop jnp mov rcl (bad) ret xor sub jge cmp xor lock pop xchg adc cmp push pop stos sub gs cmp xchg daa xor cmp cmp push jecxz xor pop mov inc dec movsl ss adc xchg in add add add jmp enter mov iret mov pop push insb popf popf fs cmp xchg jmp in loope xor rorb sub std arpl mov sub push test push mov lret rorl xchg mov jmp out mov dec ljmp fsts add imul dec mov cld lods gs fsubrl jmp mov add adc pop (bad) add and xor je cmp or icebp jle (bad) out imul and xchg pop mov fwait (bad) pop cmp movsl test mov jge sbb leave stos loop test lods (bad) sar divb sub out in mov lret cmp test pop ret mov pop pushf jb ljmp push imulb mov sub iret ja gs sub add cli mov mov out jno sub sub or mov or arpl test adc fsubrl pop or pop int mov adc cli lea outsl or aam roll xor das pop cmp ror or push pop or icebp std inc ret loope inc xchg inc push cld mov jge xchg sahf mov push adc and shll mov (bad) test aam (bad) bnd mov ljmp mov sbb inc (bad) and ds jp jmp pop imul je and jecxz sub repz adc mov ret js xor jmp inc cmp das sub aad jbe loope jmp xor outsb loope cmp fidivr sbb or pop sti sub (bad) lahf pop xchg pusha xor punpcklbw or add mov pop icebp jne xor fprem xchg jmp fsubs add das stos bound xchg adc stos add mov (bad) mov es pop mov fscale cs adc mov or repz nop fildl in (bad) sbb and cmpsb ret repz pop test mov pushf and push ret insb lret bound add pop mov das xor mov pushf cs cmp aaa hlt stc jmp adc shr out mov clc mov xor add (bad) loop or lret fcmovb pusha popa adc rclb aam cld or xor sbb cmc mov or cld les stos push jno jmp xchg leave stos out jge inc repnz adcl fnop jp fmull sbb mov push test (bad) decb scas mov mov dec adc rcrl shll inc push sub imul aas mov sub popa inc pop adc xor sar cltd cmp test pop in xchg shl das shrb sub mov popf aas sub lret aaa ja mov push xchg mov mov in cmpsl inc mov mulb xchg popf add mov bound test mov in sub data16 and cmpsb lret ja push aas lret cmpsl push mov cwtl adc in jp mov and and cmp into xor jecxz pop push mov fbld dec cltd out jbe adc loope or scas cltd mull jnp jno mov lret scas cltd mov les ret out jmp jns dec shll cs pushf or mov aas in fnstcw cmp mov xchg adc or adc adc aam mov sub xor icebp orb pop xor mov out icebp mov (bad) pop shrl (bad) ljmp mov xor jno mov ja cmc leave inc mov mov mov dec jns rcrl add repz inc add cld shrl out dec pop stos and and shrb or loopne sahf push test jnp pop or imul mov fimul lods mov out in movsb stos int cmp lds in pop sahf les notl adc xor dec pop int cltd push add pop adc sbbl (bad) out sbb adc stos or push enter test cltd cmpsb pushf xor adc fstpt imul and mov xchg lcall push mov das mov fildll or ret pop pop xor repnz and xor xor ds pop jge mov fldenv xlat or lods fbstp cmp xor sti cld (bad) mov sub outsl loope outsl in mov lret notl inc lcall inc aad jge (bad) cmp (bad) out lret xor cld loope icebp hlt rcrb cmpb mov aas xor adc and les cs sub mov es ds push int cs fs pop dec mov and or lahf mov and xor icebp mov xlat fdivrp jno dec negl xor mov dec imul add out out inc cmp test test add mov das lret hlt cmpsl pop add sub daa rcll stos sub iret mov arpl push dec cmp cltd das jecxz les push xchg cmp jp push cmpsb mov mov mov push push or sub or lret mov mov add sbb mov dec mov jno mov clc add sti jge mov push or jmp push dec cmpsb nop and or data16 cld xchg dec mov lds repnz adc rolb dec daa out mov xchg push or (bad) add roll sti test loop imul jns add and fdivrl lds dec mov xlat fstps mov sub int3 mov sbb dec or (bad) lds add pop (bad) ljmp and jbe and fbld scas sub or cmp add orb movsb xor (bad) aad cmp mov adc jmp fbld or insb (bad) in lds fidivrl pop scas cmp add and cmp cmp (bad) inc insb sub leave or xor add xchg mov lret add sub lret jbe or in iret nop jmp out pop sub lret inc add out (bad) mov cs add inc cli (bad) sbb enter push and mov adc lods pop leave mov lret push mull mov outsb xor ret movsb adc or stos jecxz xlat sti cmp aas adc hlt mov test xchg pop or add sub scas repz pop fnstsw mov jmp ret rcrl les clc jecxz sbb ret jmp jae ret mov mov sub sub es (bad) lret push add or jno dec in jno (bad) jge mov popf fist les jb fild pushf dec xchg push push repnz test out lret aad sti sub cs push outsb cltd leave jg leave movsb mov sub popf jl push jb int3 arpl gs mov fucom pop daa ja cld mov in scas sub jmp mov mov pop call sti out and dec data16 test sti mov adc or ja out xchg sti mov fstpl pop pop lods addr16 scas sub mov lods stos lret (bad) jge notb out out dec mov lock xchg add mov in cmp int3 lret mov mov sbb loope icebp push dec mov push lcall cwtl js push hlt pushl push int movsl jnp dec mov xor xchg jbe dec leave aam fcmovu lds jmp xor add das lahf rorb mov sub ljmp clc or lret in fisttp orl pop mov lret incl jo inc jae pop pop fsqrt jnp movsb in outsb and sub pop pop xchg push cmp mov test sub fldl adc iret stos std mov sti imul dec cli les push scas notb scas mov dec adc dec fnstcw aad pop (bad) jmp inc jp into cwtl rcll and out cwtl nop retw push xor mov mov outsb pop data16 ljmp pop jno push in and dec xor sub rolb or add scas (bad) pushf test out mov out jns dec (bad) dec xchg mov jl,pn les mov mov xor das or (bad) fistpl pop dec push or add stos jnp inc sti jle mov loop or ret cmp adc cwtl xorl (bad) stc lret jne outsl mov jne ljmp into sbb dec and xchg iret push flds add divl mov sarb add xchg fucomip stos sub shr lahf jbe das into (bad) mov xor add mov loope mov sub mov pushf mov add jg call gs sub cld mov add mov mov xor lods and stc cltd sar mov mov add cli add sub mov shrb xor cltd pop pop dec sti outsl pushf sub roll (bad) xor out push sbb sub cmp xchg jp jle scas pop test pslld out or je push cwtl adc xor add xchg pusha (bad) hlt es arpl sarb or std push push inc nop or enter (bad) ja stos sub or sbb hlt loope cmp ljmp (bad) pushf xorl negb cli (bad) out or mov add ret adc scas sub (bad) push mov mov mov cltd jbe jecxz,pt xchg adc lret pop mov sub pop add adc out pop pushf loop pop mov xchg scas lret dec jle cs jb lock and push in adc lock mov test dec mov add inc or cli not or xor (bad) add daa push push repnz insb cld or sub pushf pop jae in mov pop arpl adcl sbb rol sbb loop push inc js adc sar jg lcall xor ret xchg pop movhlps int3 (bad) xor scas lret les shrb test inc and adc int3 insl xchg gs (bad) cs adc add xor add int3 (bad) xor dec fnstcw adc cmp cmpb out loop add lahf das and data16 and xchg out dec fmull fwait jnp xlat test sub je orl jae loopne out icebp xlat js add cltd lods sub lahf aam stc add insl repnz scas pop lock xor cmovb sub jg movsl mov inc or mov add xchg shrb jne jg mov imul sbb sub lahf cltd jge loop pop in and or jno test xor out in adc and and mov pop cmpsl aad adc xlat sbb je stc jl and clc dec xor and subl xchg jmp test test mov aas and xor and daa push cli xchg loope mov pop mov es pop add mov fxch imul mov leave xchg je push loopne pop pusha fadds mov iret jle sti cmpsb leave adc pop fadd mov pusha cmc and mov push insb repz out addr16 cltd fisubr scas adc mov mov or (bad) dec js adc jmp and mov jg into in js imul xorb and (bad) jb or lds sub daa fildll cmp ljmp or or (bad) jno cmpsl cli mov dec xor inc in aad push add les outsl jb fisubr xchg jmp pop mov jecxz sub fimul clc movsb cmp fcomp jp dec out sti sub or mov mov (bad) jne lret dec cli popa dec sbb cmpsb loop jbe jmp call int test ja jg and cld push loopne imul add pop add add icebp push gs sbb xchg roll dec outsl cmp cli cmp fidiv ret mov cltd xchg enter leave dec cs mov jae mov pop or (bad) aaa mov cmp push repz es sbb sub lds cmp jl psraw ds xlat cmp pop cmovnp ljmp jns dec aam and pop shr loop xchg xor (bad) mov fadd dec test fcomi je and push or int jnp mov xchg out pop jmp (bad) mov cmp or sub movsb stos adc stos mov pop stos xor jmp jo cmpsb sbbl and mov rcrb popa cs add ds cmpsl bound repnz insb mov repnz or lahf (bad) cmp mov test mov push add insl mov xor adc sar cmp mov iret aas add jl mov xchg fs push sub sub aam mov cmp sub sub (bad) test mov cmp repz add movl aaa mov icebp imul or lock mov mov das adcl xchg in test or cltd popa push bound stc lea imulb jae and adc (bad) cmp dec sbb or insb adc call xor lods jns xor sub add repz inc sbb xchg call mov or movl mov inc xor mov (bad) pop dec out cmp imul lea lock mov pop add dec loope cmp loop fbstp (bad) repz daa push or aad aad and xor (bad) stc andb pop mov nop adc jmp jns ret icebp add xor lds xor loope cmc push bound cmp rorb xchg pop gs das (bad) std push enter adc out frstor sbb push mov scas (bad) lret sub xorps sub cli xor dec ffreep sbb stos sub mov mov int3 lret and (bad) imul pop and adc (bad) jne jg add loop flds dec or in das add dec aad sbb mov insl dec repnz (bad) popa adc subb mov pop mov inc bound ds int mov sub out mov (bad) mov shll ficom dec out sub inc xorl sti lret lods pop int3 xchg add sub sub xchg out xlat cltd mov sub popa leave cmp pop jno or ds push or add ret adc (bad) xor cmp lods out add or bound out gs jbe insl (bad) pusha into or gs data16 xchg mov (bad) cmc adc in iret xchg jg push lcall ljmp sbb enter dec xor leave sub mov or or push dec mov scas cmc sbb and mov mov pop gs repz adc mov inc lret xchg xchg sti sub and popf div lret mov xor pop and mov pushl xchg sub mov out sub (bad) ja icebp sub pop cmpsl cmpsl rorb out dec ret in add xchg jo mov mov sub sbb (bad) sub mov call pop pop jg inc ljmp mov int iret and adc movsl cmp out adc ret sub mov (bad) inc ret aas and lahf movsl aam jo dec xchg gs xchg mov or ret add ljmp mov jecxz push inc in out lock xchg imul (bad) jmp iret inc insb insl popf (bad) xchg (bad) ficoml daa ret gs movsb mov (bad) mov ja retw (bad) jmp adc ljmp pop fdivs sbb xchg inc jp outsb outsl into add (bad) push sbb (bad) ss hlt mov test inc std jp lahf or jmp cmpsl push pusha and pushf mov subl or dec fnsave push adc test fidiv pop bound mov adc shlb xchg jno data16 or cmpl jb rcll cmp test shrb popa icebp or fcomi xchg (bad) mov dec pushf sub (bad) imull sub cmp hlt push outsb dec add add repz pop mov frstor xor lock xor dec out fidivl xchg ljmp adc sub xchg dec jb mov repnz xor pushl add pop inc ret xor xor mov movsl imull std jmp mov aam into imul cmp aad and mov jo mov rcll push out xchg lret outsl mov mulb cld mov xchg inc adc leave mov fs test sbb repnz xor pop sbb xor xor jmp or sarl jp popf daa mov aam inc and (bad) jecxz ret pop icebp xor sarl int lret mov (bad) fcomi jge mov clc add shrb ret in mov xchg ret sub mov xchg mov jp adc mov pop mov bound rep xor jmp mov decb push out ficompl outsl mov adc xor and outsl sbb out in jg out mov xor dec dec (bad) fdivrs out sub (bad) cwtl push jecxz cwtl icebp cmp mov mov pushw cmp pushf xor in loop lcall aad test das mov mov ror in mov mov pop fsts dec mov aas shll imul int dec xchg add inc les stc cltd xor (bad) icebp repz fisubrl test mov and xor stos mov decb lret jg mov mov (bad) pop loop (bad) pop pop outsb push jg sub mov sub mov push out test cmp or push push lds repnz sbb movsl cli adc dec push mov ficomp xchg add imul jne lods dec pop ret repnz lret lods ret rcll (bad) int3 int mov jne repnz outsb call pop jmp js and and push mov in jmp push sub sub jmp push gs in and out leave cmp ss sub pop pop call (bad) jecxz xchg mov jg inc (bad) jns (bad) mov adc pop mov push jmp dec repnz inc loop xor mov stos pushl push leave jg pop xchg mov xor pop divb call adc (bad) bound dec jmp xchg mov push add xor out add stc jmp ret and adc enter sbb inc xor xor iret lahf push rcrl sbb jmp mov or mov push dec fisttp and dec data16 and lds enter jmp mov leave jge repnz xchg adc xor jg xor insb cmp push (bad) fild (bad) insb add or pushf pop nop sahf xchg xor decl loop leave clc rcll sub add push xlat bound enter es jge out mov shlb or leave add cmp add xor std dec mov xchg scas repnz mov test sub mov sarb cmpsl or aam scas lret cld and dec inc mov and ljmp cmp cltd adc xor xchg loop xchg mulb pop jmp int stos les lcall in in outsb and pop jl jmp test and sub pushf pop mov and jae rclw mov xchg lahf push inc imul mov or push push mov xor cmc inc fs je push or sti add cmp (bad) jbe jecxz jecxz lahf xorb sub test popf xchg pop loop xchg aas inc mov jmp (bad) cmpsb cmp and adc scas sub add add sarb (bad) dec xchg stos test push xchg scas lret stc dec adc sub xor xchg cmp lret push sub fcoml xor mov es add xchg addr16 in rorb sub xor stos xor popa and add or push mov std or mov jns imul jne pop and movsl cwtl cli jl dec (bad) lret dec ljmp pause pop or (bad) ja out xor mov fcomp repnz dec js das xor or lods lahf sub pop pushf sahf xchg aas popa (bad) xor ds mov xor dec sub and daa cmp leave jg test cwtl jo orb push movsl fbstp into (bad) jmp mov or add sub xchg xlat es add loope outsl mov addl or jl adc sti lret cmp push mov cmp incl das rcl xchg lock fs adc mov daa ficomp and xor dec data16 xchg icebp in add jl jmp ljmp xor mov xchg fldenv shrl js dec lret xor jmp push xlat sahf push sti jo shlb pushf and fs add sub push aad dec or add movsl jo popf stc nop imul imul pop test or pop sub xchg dec sti mov xchg or or mov out xor cmp popf scas das cmp mov dec adc pop add out scas and jb cltd adc inc dec mov pop cltd in jo mov mov pop adc in add mov inc mov shll sti loop xchg cmp mov dec or out inc loope mov push mov inc add in ljmp jle int imul repnz mov xchg test test or dec xchg push sbb add and (bad) xor and sub cld clc in adc mov jge jno or dec mov pop (bad) in jnp movsl push out xchg mov data16 je dec ret (bad) roll add ljmp sub jne inc dec int3 sub pop xor pop cmp arpl scas pop pop adc adc pop or ret mov mov cmp jecxz push cld sub lret fist inc xor pop inc xchg adc mov (bad) (bad) mov ja xor jns mov and and or les or xor ss fs scas mov dec scas popa push sub outsb repnz xchg rolb lahf pop pop mov mov and cmp ljmp rcrl sub xor std cmpsl add jne jge fsubs icebp (bad) pop fnstcw pop mov jmp rcl shll inc dec ja pop jno or sbb mov jb xchg push (bad) int3 add int pushf adc dec repnz push dec xlat add or sub cmc das (bad) push cmpsl dec push mov push xchg cmp and push (bad) idiv mov add test (bad) rcrl jle pushf push inc sub (bad) idivb out js cs test xchg adc std cmp cmp sub mov aad mov push dec cwtl xchg outsl adc cvttps2pi int sbb ret dec sbb lret pop jae and or mov and jecxz jp shlb in scas mov cmpsb lret sbb popf aam outsb rorb sarl movl popa cmp mov cwtl jge xchg hlt out jne fisttp pop cmp lret clc dec lea add xchg fdivrs push xor outsb and or lcall adc cmp test lods xchg lds (bad) into jle inc sub sub inc ret rol scas push lea fild add sub inc aaa data16 add xlat cwtl cli jmp cmpsl sti mov sub push mov xchg sbb lret and or sub cmp icebp sub xorl aam jmp out xor mov jmp dec loopne shll cli xor mov jle jb loop mov xlat icebp out pusha push lahf adc dec stc pop adc leave xor xor and add push mov fnstcw cmp inc mov mov fnstenv lods das jl lret jno or sbb mov fsubrl loopne add mov subl sti fwait pop loop adcl mov mov aaa mov ret push out mov jmp lock in pop mov pop sti movsb sub es push inc adc xor pop out rclb mov lods sub or ret lahf push xchg push push pop pop and mov mov xchg adc stos pusha and mov fwait and and out idivl pop shrl fstps push inc sub icebp inc in mov cmp push insb and add pop out outsl cmp in sbb xor pop mov lret and mov mov clc xor jmp and call mov scas rol std fimul cwtl pop das sub push insb mov lock jbe mov enter pop fidivrl aam push (bad) mov jp std cmp das not mov pop cs pop cmp ret add clc or (bad) cmp pop in sub out (bad) or (bad) push xchg sarl das mov pop ja into jmp leave (bad) aam maskmovq dec std mov xchg cld adc orl rclb xlat mov xchg pop jl push mov sub ror in sub out into sbb rcrl jnp out dec aad aad ja sbb xchg mov icebp mov sub lahf xor mov loopne incl push xlat inc je cltd cmp jmp mov add xchg push ds mov pop pop mov inc mov nop (bad) (bad) cmp xor and repz add ret and (bad) xchg mov and jle aam lods push in sub in or dec mov jne xchg xchg leave jle lret mov shl sarl add add mov test cld bound adc mov xor std scas pop cmpsb cs bnd int push out lahf daa sub sbb lock mov aam insl jo sti sarb or xchg sub loopne sub push dec adc ds sub xor shrb lcall mov sbbl cwtl loop sarb jle jnp cmp fild adc sahf pusha sub sbb pushf ljmp (bad) xor incl push insl pop mov pop mov addl sub fsts xchg sbb xchg push lods cld imul mov (bad) ljmp mov movsl cwtl movsb sub xor mov into loope xchg and aaa sbb jecxz xchg or push mov mov (bad) test js icebp inc test xor sbbb stc sti dec ja leave out pop pop pop jmp jmp push push or cwtl inc (bad) dec mov jbe add scas pop dec xchg leave push es leave push imul jno mov and adc test fidivr int and mov dec push push stc cli adc shll int xor xlat mov insb mov xor xor shlb xchg push imul lret (bad) popf mov arpl cmp (bad) loop (bad) decb pop repnz cwtl lock mov in pop lds and mov xchg or cmp dec adcb push xor dec mov hlt or jl mov movsl pop mov and aas xchg stos sub sub int3 rolb dec call mov xor cmp mov add loope bound or jmp loop flds mov pop in sub and mov es add pop pop mov pop iret sub in xor mov out out sub lcallw xchg pop ljmp xor inc scas in push pop ss (bad) and jle pop pop or inc lods mov std xchg mov idivb dec movsl idivb and lods out ja addr16 imul or sub xor mov push push mov lds lret ljmp mov xchg je dec (bad) lods and and xchg pop jecxz push adc dec push imul dec test (bad) cld mov fmuls ret sti outsb jns or jbe das inc dec movsl push movl je cmp into sbb add mov dec sub xchg rorl les and mov rep out add xor cltd fs daa or stc das je and icebp push sub sbb (bad) mov ret pushf neg and xor cmpsb jns mull pusha pop sub popf insb add cmc ficompl les pushf ds mov ret lret stos daa pop divb leave mov mov and int3 cmp sub (bad) cmp ret into ret clc daa icebp pusha leave out mov and dec (bad) mov dec mov sub push add aas std (bad) fisubr popf xor hlt enter xor pop adc adc inc sub repz add scas lea sbb cmp jg shlb das outsb mov clc adc dec divl inc orb loopne,pt out xchg pop xchg into mov lret mov (bad) xchg inc or and xor and sbb adc add sahf das or add mov ss and inc cmp stos lcall add pop gs mov repnz and jle sbbl mov test iret jns (bad) outsl adc ret fcompl inc sbb add mov mov jp daa add lret dec stos push push std mov inc daa sbb xor stos aam cmp inc imul jg push lods lret or (bad) (bad) mov outsl and ljmp adc push sub cltd (bad) das scas push mov mov xchg lods aam cmpsb leave dec lea cld mov pop sub clc xchg incb mov lods push cld mov xor loope insb leave or xor or xchg sti push testb out cmp fs mov lock lret out mov xchg int3 xchg lret popf xor inc mov xor fisttpl notl jo add jge xor push cmp loop sub cmp adc scas movsl fsubrs fimull out aaa dec sti lea mov xlat jno dec adc hlt or sub pop cmp leave xor push mov or push pop xor sub in not adc push (bad) (bad) mov test mov jle ret jbe push leave and lret sub into or pop xor xchg imul mov mov popf jns dec fnsave xchg leave sub inc imul shrl sbb pop inc push pop and dec cmpsl sbbb movsl mov inc popf imul fisttpl cs adc push xor and cli mov inc xchg jge rcrb pop cmc adc mov lahf pop xor xlat (bad) call or pop je push or into push into test add mov sub inc mov leave pop sub out mov testb out mov insb insl xchg adc sub mov dec mov pop mov out jl add dec mov jl lahf xchg (bad) pop leave jecxz lds push sbb imulb daa xor cltd test cmp icebp mov mov jnp xor pop into dec shrb movsb mov dec fbstp mulb mov xchg icebp push stc add insb mov in sbbb call sahf add pop mov dec mov fs pop pop sub sub push mov sti mov testl sbb in out into mov repz inc das and sub (bad) repnz (bad) jo sub and leave jg mov addb mov mov cmpsb aad jbe and jb ljmp inc mov lret mov bound (bad) xlat icebp popa ret pusha push aaa mov pop dec lret pop fsubrl jmp stos loope cmp test xchg inc add mov xor xor mov and shl dec (bad) fsub xor jno or cmp fmuls stc or and jnp sub imul pop adc adc xor scas or (bad) inc and lret (bad) cmp popf jno or inc mov into fcomps ljmp (bad) fldenv aam or out cwtl repz dec out out das clc int3 inc xchg ret rcrl push out mov loop in scas dec repnz fistp cmpsb lock xor xor jl fcmove jne and xchg cmc push pop pop into mov xor sub ja lahf push xchg test dec lcall ret imul test out dec pop mov mov jg push cs mov and and int3 pop daa sub decl inc pop sbb dec cld das mov add ja imul xor rcll push test mov xchg mov ret test cltd into push sbb or xor scas loope cmp or icebp pushf fsubrs loop cmp in orb std fs ljmp pusha sub aam sub sub sahf or mov mov pop cmp movsl iret jg jg lret (bad) bound out lcall push outsl lret enter movl into hlt rclb adc add jno lods pop imul cmp push and push xchg jecxz xor pop and sub je pop pop adc xchg dec rolb sahf scas je bound lds movsl inc repz (bad) xchg popa pop xor jle jns int3 pop leave cld lock not sub pop call pop lds mov js jnp das js xchg or cltd push ret loope imul dec lds lock jge dec repnz xchg stc add into add dec push js xor and xchg sbb sub in pop cmpsl vpcmpeqb mulb js cli dec fdivr into outsb sub lahf inc add jg and loope shr ret scas sub add mov fdivrl xchg daa daa (bad) jno pusha xchg push mov lods mov mov lock cmp or in cmpsl stos xchg push cmp pop dec std push push pop mov int3 aas dec repz shlb mov inc add or xchg gs and pushf sub (bad) and xlat xlat xor test fcoml pop push pop xchg ret inc adc icebp movsb jp in jbe andl push imul ljmp and xchg iret stos popf (bad) es push xor or sbb (bad) inc pop pusha mov stc xchg ja inc mov pop aam pop pop nop (bad) mov lahf in xchg rcrl int sub bound or pop ja (bad) dec sub data16 sub or inc sub pushf bound jmp mov cmp add lahf jno imul dec out mov (bad) (bad) outsl clc sub test add scas in dec leave leave push sub mov aad outsb dec add (bad) jp lret xlat (bad) fldl or mov je stos sub and outsl lock stc popf int3 xchg pop pop mov push jmp fucomp sub cmp xor add xchg in or loop xchg lods pop sub sbb loope ljmp arpl out sub cmp jo xchg adc pop mov and mov (bad) or mov mov add mov fmul mov adc or sub mov push repz jecxz out jge sar loop test rcrl jecxz imul scas mov xchg scas mov push push xor mov cld or aaa push sti xor dec pop jmp jl outsb cmp daa lcall sub sbb fcomip in call leave lret movsl adc push lret mov xchg adc cmpsb daa loope cmp dec out sub scas push mul mov mov fwait and mov lcall dec cli inc (bad) mov push aam jmp dec xor popa adc pop adc mov in cmpsb lret daa adc xlat add iret mov sub pop (bad) lods ffree mov lcall mov jp cmpsl pushf cmp or in lds and jge jmp mov fcomps (bad) int cmp pusha into lods mov xchg mov leave gs je inc and sbb (bad) and and shll xor (bad) into mov xchg mov outsb mov xchg ds scas jbe sub mov (bad) clc lods pushf mov and xchg dec imul test inc xchg iret test mov lret cmp ret dec pop icebp cld xchg adc sub stos push cmp fisttp sahf dec bound icebp push mov ss aad in pop sbb out test push out sub xchg mov popfw sar mov adc aaa std adc arpl ret pop lds dec stc push mov inc sub and aas icebp dec rcrb push leave add and cli dec test sarl movsb movsl push and adc ficom mov inc xor dec xor mov xchg xor pop lock sub mov and (bad) dec dec mov scas fs xchg arpl lods lods rorl push sbb xlat pop mov cs enter lds xor xchg xchg adc push ret (bad) xor (bad) call test iret cltd das imul and add out lods jns mov negl sub stos negb or or ds pop popf icebp xor mov sub mov xchg iret ljmp sbb ljmp push mov jns sahf sti push neg pop add and inc or gs inc or mov add mov cwtl or mov xor xchg test lock fisubr (bad) repz lret push repnz cli jecxz xlat add or stos daa xchg out (bad) movsb mov push int3 mov or jmp rorl (bad) jo fstpl or mov ja loop iret mov ljmp jno sub add imul mov push (bad) call icebp and and (bad) fdivs out lods mov std xor jmp jecxz xorl mov ret or add jle xchg cmpsl out push stos jp icebp xor arpl or sub dec cmc dec out lret or adc idivl outsl fnstsw cs adc inc mov pop mov add popf cwtl adc mov insb fstpl mov sub mov das stos and aad sub (bad) cmpsb je lret xorb jbe pop push cltd (bad) repz mov cmp sbb das rcrl sbb movsl dec loope ds xchg pop in mov cmp push imul dec imul test repz std dec popa mov leave push jmp (bad) and mov popf pop gs or xor add shrl rorb repz jae add add jg fistpll (bad) addr16 int3 jae test jmp mov pop (bad) mov loop repnz lret xchg (bad) in lahf leave pop out sub mov add mov jmp gs lods jge jae sbb mov mov rcr dec xchg ljmp (bad) ss sub and mov xor cmpsb fnstenv (bad) in bnd cmp sub mov mov dec test push sub daa cs add pop and lahf (bad) dec inc mov daa loop inc imul icebp cmpl mov out jge mov dec outsl push jo or jns push fscale imul (bad) mov flds imul icebp mov jne ljmp add fwait out xchg mulb sti jecxz dec out fiaddl cmpsl xchg push mov cmp out cld movl and or and pushf adc hlt mov jge cld and pop mov mov sub fsubs ret lret ljmp jnp add and mov or jle lods lahf and inc adc addr16 outsl dec push leave sbb pop leave jmp es jge int3 fucomip and jecxz xchg stos lret call mov cli xor and sub jbe (bad) xor mov out xchg (bad) mov add xchg leave out cmp adc mov xor push and xor xchg xchg add clc scas stc ret int es int dec and cs mov pop jmp mov pushf call fsts dec sub pop clc lret cmp not cmp (bad) dec sub add push in and and jmp dec xor repnz faddl shrb mov add or pop jno iret mov int add jecxz pop lds lods outsl (bad) out and fistpll (bad) test dec mov pop mov adc adc fwait lods pop push scas push sub loop xchg out cwtl adc sub pushf dec push mov mov pop add faddl outsl pop lea cmpsb pop xchg out push pushl mov mov fwait stos mov les es stos cmpsl pop dec xor enter xchg data16 repz xor ljmpw xchg mov xchg dec adc xor stos cwtl addr16 mov mov outsb mov mov imul cmpsl loope sbb scas negb jbe mov dec cmp sbb adc fdivrp (bad) aaa add dec daa jo xlat jl popa pop sbb and into pop dec and idivb shlb (bad) jle and xchg pop (bad) push dec gs test orb xchg into (bad) clc mov (bad) insb dec jg pop in xor ja imul xchg lds mov mov xor fcompl stos das sbb mov lea cmp jecxz pop xor mov addr16 mov adc movsl loope test movsl popf inc and xchg pushl jge lock mov rclb icebp in cmp push adc sub sar or pop mov stc lea sbb out enter jno dec push mov lret sbb cmp xchg inc xchg xchg mov inc movsl aam (bad) jmp push test mov xor lock sbb xchg jae (bad) hlt xchg lret jne call repz xchg lds pop outsl xchg dec dec (bad) aam shrl push push mov ljmp push out cmpsl into mov pushf ret outsb out adc (bad) (bad) xor popf sub (bad) mov leave popa mov (bad) (bad) adc sub jne scas and cld out adc push pushf adc xor dec mov add sbb ljmp sub repz jne popa or (bad) or decl shll jne out push jo rorb mov stos or cli or loop add (bad) push icebp mov imul popa sbb repz cmp dec imul mov inc pop pop and divl pop (bad) mov pop (bad) dec (bad) jb mov and ret loop inc pop dec and dec push rcl ds push daa sub xor jb,pn ret sbb push xchg lods and sbb pop and push push outsl popf adc dec jmp (bad) loopne lahf sarb sbb lret gs sti bound insb adc (bad) ss jle das mov push ret xor (bad) loop (bad) pop pop jne sub in jb add (bad) mov xchg pop cmp cmp scas adc fs into lahf dec popf test mov iret popf or jae add jg mov nop xlat icebp leave aas sub xor pop mov sub in pop mov and and stc push pop xchg fildll int3 cmp adc fbstp fs adc inc mov fist inc daa add push lds sbb or mov jp das out pop mov dec (bad) stc rcl pop addl pop sti lret or xchg loope sbb inc test or and push push pop ret and or or adc rep dec lds push out dec divl pop popa push push and je scas loopne add lds jne jne mov cli lea andps sub aam and mov add xchg flds lock adc and stos jb adc test lds xlat out into sub (bad) push into sar lret lods lock xor inc sub xor inc mov xchg neg shlb arpl jmp clc fcmovnbe loop and movsl pop add or jbe outsl adc les aas sub fdivrs movsb sub lods xchg movsl mov dec sahf popf ret dec cltd int3 sub cs sub lret inc out mov in (bad) xor sub cmp popf xlat adc add mov xor (bad) mov fistpl dec push call add jecxz in mov xlat divb cltd fisubr sub cmp idivl std mov jo out pop mov and cs movsb mov sub mov push push push je outsb sar pop (bad) mov dec fstpl lret mov add mov pop xor jmp mov out add xor popf out pop pop sub mov imul sub cmpsb adc mov adc (bad) jmp (bad) sarb hlt pop or xor enter push fwait dec les (bad) sub mov (bad) dec out jmp dec pop stos sub icebp into dec xchg inc jmp test mov jge and xchg je cld add ss das lds and pop psubusb out xchg xchg in mov outsb lret jecxz xchg sbb repnz je in fwait mov fnstcw hlt popf or jge int3 cmpsl push jp push mov pop in adc lock xor sub sti je out imul popf bound out decb (bad) hlt adc sti into or outsb outsb in sub push pop inc dec xor push (bad) pop or data16 pop gs lret dec sub std push sub push pop pop out sbb stos bound mov cli mov sti popa mov xchg leave icebp or jns dec imul fdivr out push mov dec imul jge xlat lahf loop xlat mov mov pushl cwtl cmpsl popf sar pushf movsb or mov loop call fiadd mov mov (bad) mov je pop jmp adc adc ljmp add push mov das lods or scas mov dec ljmp mov out cmpsb cmpsl das cmp add and out icebp mov lock xor mov ds sub pop mov jle pop outsl mov dec mov daa (bad) jae add xor cwtl inc mov cmp xor stc xchg jnp imul xchg ret pop jle or ds mov into frstor sub jns inc xor xor je mov rolb mov daa divl dec xor mov leave mov mov cmpsb iret lret (bad) push or lods pushf jecxz test xchg xor scas pushf pop or pop xor jmp shl mov ffreep jnp out jb dec not lds fbld ja or lret mov cli pop subl sub cmpsb add or cmc inc je fsubp cmc cmp int flds sub adc xchg out or iret in addr16 xchg fisubr into or mull leave inc cs push (bad) leave ja cmpsl sbb testb stos jl or ret fistpl pushf testb adc rclb cld mov dec (bad) in dec sub pop dec mov lret push aam jmp sub jo ljmp cmp hlt sbb mov pushf test repz xchg out lea sub test out into push dec stos xor mov mov (bad) and sub inc out push cmp adc mov add xor push xor adc jno inc or pop insb jecxz rcrl cmp lret mov pop push adc or and inc or cli pop mov lods xor mov adc sub inc pop stc or jne leave (bad) das mov xchg jmp mov xor int ret pushf xor das mov mov sbb push pop stos lret adc ret pop mov punpckhwd jmp mov cmp pop xor sub cmp mov popf pop pop push and ret xchg sub daa dec and push sahf cld cs insl out test idivb sub das adc out jns leave cmc adc sahf dec scas jae mov call out or add fbld lahf cld cmp xor jnp inc jp mov dec int3 pop mov ds jo mov das lods das pop inc jno sub xchg mov das out sub sub mov lcall cltd cwtl jnp sti mov push cmp jmp lds sub test ret mov sbb clc or or movsl dec aad add jb pop shrb scas aam push aam vpsraw sarb mov dec call mov lock shlb mov adc sub (bad) lods es sbb fsts loopne or and mov xchg lds xor jg mov ja stos and or iret jae movsb lock mov sub dec add xchg popf (bad) mov or jle xchg add cld fcoml adc add cmp (bad) xor pop (bad) mov dec mov call (bad) cltd xor sub sub call mov or xor mov icebp jnp sarl cmc into insb mov mov cmp add xchg ret add lret or push push and lods lret push pushf ficoml inc lret add shll pop (bad) outsl push xchg mov out icebp popf jg popa loope outsb cmpsl adc and ret inc adc (bad) xlat scas cld insb vpsubsb lds (bad) jmp mov bsr dec negl cmpsl or icebp lahf sahf inc inc adc inc mov (bad) cli sub dec adc (bad) into dec xor mov in or xchg dec out sub lea adc loop inc pop jne sub xchg pop lods imul mov daa pop call mov jmp or adc lret fmull and outsb cmp adc lret mov outsb lret sbb fbld jle mov mov (bad) repnz xchg out dec leave jmp shr (bad) imul bound xchg and sbb fidiv iret jne fdivrs jbe mov xchg push mov repz rcrl xchg sbb imul cmp test xlat in sti push clc (bad) ljmp aam call mov jecxz out jne test xchg sub out out test in aad mov xchg mov stc xor mov xchg pop xchg mov je loope mov inc insb negb stos leave jg movsl inc mov xlat fistl (bad) mov enter inc inc pushl cmc lcall and mov imul jle bound rorl add test dec mov hlt sbb dec into cmpsb inc adc mov dec mov sub jp xchg in lds dec ljmp popw fwait mov shll pushf imul outsl pop jmp mov or repz dec ret push and movsl fsubs (bad) rol enter mov stos lahf dec (bad) pop jmp sub ret dec lahf shll fs or data16 add pop mov mov (bad) icebp pop mov lret xor add ds xor lret pop rep mov shr in push loop popf mov dec gs out lret xor lds mov jge (bad) mov (bad) mov mov push xor push icebp stos lret clc or leave imul inc xchg xor lods arpl sar push (bad) bound call add sar mov or pop jge sub push mov testl cwtl jnp xor movsl ja gs lahf cli cmp xchg subb sub addb push js sarb js mov pop xor ja or mov daa inc push mov sarl mov das dec mov jle mov pushf cmpsl sub pop xor in xchg inc clc aas and ret jnp sub icebp idivb test mov xor push aaa pop test cld xor or in mov push push mov out stc adc sub sahf ret outsb push jo pop mov lahf push rcll jp stos in jmp pushl scas jmp cld dec pusha bound fstpt mov dec pushf sbb jg imul insb push in aas jecxz mov sbb mov std in push add dec ljmp sbb cwtl (bad) mov xchg add fs xlat xchg mov add mov xchg (bad) mov sub add pop xchg pop sahf cmc loope sbb push mov xchg mov fcomp icebp xchg sub mov xchg mov dec ljmp add popf je push pop repz inc xor xchg call movsb adc dec stc push (bad) mov daa ret les sub cmpsb lret lsl test sarb mov xchg leave hlt subb pop mov or fcompl sub add and sarl (bad) dec jmp ret ret imul fstps fsubl out mov mov jbe pusha add mov dec xor (bad) leave insb cmp div jno imul leave scas (bad) repnz push pop jmp cld das mov movsl aad mov pop jmp jp jl mov pop xor jmp movsb das loop aad or stos imul jno jne cmp jmp or cmp fs xchg daa mov xchg int3 mov mov in xor sbb mov movsl mov icebp ss insb leave adc aaa or scas notl mov shrl notb cmp jns lea sti xchg dec fisubr jbe mov xchg stos je cltd fs cmp or out inc or popf shr aas or sbb ret add inc add cld lea pop jnp fildl or add test inc dec daa xchg les add roll cld jb (bad) int fnstsw les dec pop rclb add push lods dec imul push cli subb cmp and cmc in push les into stc inc shrb mov xor int cmp adc dec mov mulps inc out add enter xchg jmp sti dec movsl pop lahf sub pop repz mov dec or xchg test inc sub movsb or dec (bad) out sub and push add out push and adcl int3 adc mov cltd mov add out sarb aam pop (bad) or dec stc mov popf fsubrl jl pop pop or in adc mov mov xor pop sbb mov xchg ss inc jb dec jmp push sbb cmp jne fimul outsb xor mov and fs test jl add in and xchg sub (bad) pop js iret cmpsb sbb add pusha shrl neg icebp sub xor sub mov sub or xchg jne jo cli lahf jne aaa shrl mov mov scas fs pop stos jecxz adc fidivl into les sub add pop sub ja xor jg dec xchg jno imul stos (bad) clc scas jno xor gs rcrb and or (bad) mov or sub lcall mov lret sub addr16 or push mov mov or mov dec push pop jmp inc xor mov addr16 or jp mov out pop dec test enter jecxz sub push jb fiaddl fistpll inc dec or das aaa stc mov ja fldl2t pop (bad) mov or das out push or mov mov das adc gs mov leave pop (bad) cmp pop xor and pop xchg dec mov mov fldenv and mov rclb jo lret xor clc (bad) mov cmpsl inc ja add sub (bad) cmp lock insl inc cli fistpll repz sub and outsb outsb lret pop pop xor gs out add (bad) sub cmpsb imul popf rcr xor pop jnp and cmp (bad) or sbb imull sub in test in adc cli add xor xor sub pop mov and mov data16 xor sub ficoml outsl sub cmp call stos movl sbb sub xlat ds adc aaa in repz mov outsl fcomps or jne cs push mov mov loop sbb test push in cmpsb repnz adc adc loop add push sub iret test xchg dec outsl leave (bad) xchg inc std cmp pop inc sbb sbb mov orl add add repnz mov or repz fistpll mov push xchg daa lret lahf or repnz icebp and add sub mov rcrl mov sbb pop shr dec (bad) ss popa add cs lds iret add int pusha xchg jle push mov fldcw xor cld mov mov insb repz jno in lret xor lods mov loope mov sbb popf pop fucomi sbb add cmc lret adc inc push cmpsb cmp in push sub icebp fwait inc xor push fdivr xor (bad) push pop cmp lcall add cwtl mov xchg sbb mov xor pop jns and pop popf jbe outsl or jne mov push (bad) aaa jne decl into stc aad imul xchg pop stos lods push lods rcr and dec ss (bad) test sti sahf das bound cmp xchg out mov daa loop xchg inc and mov shrb test dec mov adc cmp push outsb jb mov faddl xchg (bad) mov push or (bad) jne jnp leave stos popa mov mov ret push adcb adc cs push jp call loopne dec sbb imul fstpt sti xlat out add jbe bound cmc inc pop loopne mov mov test sub and mov mov mov or daa mov les fwait mov push jl movsb lods hlt rclb add rcr jmp sti fadds sarl pop sub push xlat xchg ds mov aad jne xor adc leave jecxz fxch dec test cmovns arpl test xor aad xor iret xor xchg nop in mov inc push icebp xor inc jb sbb pop xor lret push sub push and ss xchg (bad) icebp dec jns mov (bad) pop xor jle popf ret lods test cmp lahf xchg cmpsb popf pop pop (bad) popf inc cmp push rcll sbb sub mov out mov push dec push cmp mov xchg ljmp cltd jb das ljmp fsubp (bad) lahf insb jnp push adc mov (bad) ffreep fmull addr16 je lret pop inc das add rcll ror adc sub xor cmpsl fcomps push ljmp add pop mov imul mov (bad) cli or (bad) mov sub lock (bad) sub mov mov pushf sti cmp jne pop lcall sbb fnsave jb cmp aas les repnz std sahf pop out loop nop push (bad) (bad) xor inc das jne fnsave push sub and inc sub pop mov xor fldenv mov rcl scas fisubrl scas inc dec ret add sub xchg dec in lds xchg and std imul or aam sub pusha shlb mov sub mov push and gs xchg mov loop xchg mov ss (bad) push out sub lret xchg inc jmp test cmp data16 lahf pop push and or cmc test mov mov int3 xchg sahf aaa inc or (bad) cmp mov xor cld call ljmp int3 xchg sti xchg daa data16 or pop addr16 out and jl gs xchg mov push dec in stos lret stc jbe add (bad) ja mov pop push mov stos fsts repnz cltd (bad) push xor pop mov jmp or mov out js es adc sbb push ret add (bad) gs loop add jmp (bad) mov jg mov out pop and xor in ret sub hlt jmp out stos loop mov sub fsubl leave sub mov (bad) jecxz daa ffreep adc push cmpsl iret negl push lret cld cwtl aam addl lock in mov add test shr (bad) xchg (bad) xor mov fsubrp push leave mov pop lahf inc ss mov mov push xchg mov add mov dec and and das call add mov movaps cmc fisubr out ljmp xor adc mov dec pmaxsw fwait bound lret lock stos jno xor mov inc sub or xlat js lods (bad) cmp loop in and sub xor fistpl bound mov sbb (bad) xor jnp pop xlat jg (bad) bound push pop repz sub mov fcoml es pop sbb xchg or loop aas lret pop iret add xchg shr neg leave inc icebp lahf dec into sub movsl pop lret in xor mov rcrb jg xor push add je fs (bad) idiv add (bad) dec inc outsb xor lods xlat lahf mov int3 adc arpl daa sti shrl mulb scas xor pushl push mov pop jl push pop mov (bad) (bad) into out push and out dec sbb sti xchg mov (bad) cmpsb sub sub sarl push sub pop (bad) lret or jns movsl les popf lock out dec mov add mov pop out sub sbb (bad) dec cmpsl xchg xor push mov iret and add push or lods xchg sub ljmp jle cmp xlat or sbb scas bnd loope jae sbb and stos xchg pop popa or sub cmove mov push sub cmc cltd push xor imul and add xor push pop stc loopne inc nop notl hlt xor xor push movsb (bad) idivl dec mov bound or or adc aad clc xor jbe (bad) arpl add push inc outsb cmp fsubrl mov dec jle data16 and jp fildl pop or sub dec punpckldq push scas pop mov sarb mov sub mov inc movsl aam mov (bad) shlb mov lcall push sti sahf push mov inc ljmp or leave rcl dec xchg insb mov rcll mov dec rolb dec std sbb xchg sbb aam daa fmuls xlat pop mov adc imul fsubl or (bad) leave leave push mov ret pusha pop (bad) cli jne test xchg enter pop and roll shrl stc std fild movsb mov cmp lret pusha mov xchg repz pushf push pop mov adc mov sbb cmpsl pop inc cmp jbe jle out push xchg fnstcw outsl pop into outsb adc ds loope cmp mov adc imul ds cmp scas test repnz iret xorl jg fistpll cmp xor jmp loope jne mov and add pop sbb or inc push cmp dec fidivl add mov mov or or out into and jmp aam stos jecxz xchg xor sub repz fisubl test (bad) xor mulb cmp cmp dec cltd cli subb mov shrl es ljmp jecxz sti lret or dec inc leave and mov sub icebp mov je test dec sub (bad) sbb ja xchg xchg jl push mov mov out cmpsb mov mov gs dec inc push popa xor add std xchg (bad) jmp push imul mov andl sub sbb pop mov jb mov add push pop add push xchg jmp xchg and subl jno xchg xlat pop out xor dec mov dec and loope mov in sbb arpl (bad) addr16 mov pop mov jge cmp daa xor ret je pop mov shr mov or scas roll shr cmp xchg push cmp jb or sub (bad) adc mov mul or sub imull movsl xor sbb call int3 and xchg xlat cmp mov sbb adc pushf jecxz xchg cmp adc jo push jnp mov or cmp inc pop mov imulb push and fistpll mov sub in (bad) mov test push jmp leave jp pop xchg (bad) mov gs daa push pop pop aad int jne sbb sbb in mov iret or push dec lret leave lock mov repnz lahf div pop mov fadds sti out adc mov mov jns daa rolb fldz loop xchg mov or aad mov xchg (bad) mov nop sbb sbb xchg mov insb xchg outsb dec mov sbb mov dec and insb mov mov jne scas or addb ret xchg mov and inc fwait xor and xchg ret loope in lods dec adc sbb cmc idivl mov pop xor fwait xchg idivb and add sub cmc xchg sti mov shlb pop mov pop into lret mov pop leave mov ret movsl push icebp cmp xor sahf popa push push daa out sbb mov sub subb shll movsb sub out jl adc daa (bad) mov mov push adc sub jmp icebp out push cwtl out (bad) pushf mov jge inc cs mov in call jmp decl icebp sub mov fwait dec sub lahf lcall dec cld add mov sub cltd loop push xor add cltd rcl mov pushf or fdivr mov gs or inc xchg sub (bad) stos das cltd adc jp xchg mov dec iret rcrb sub and cld cmp dec subb clc mov xchg xor mov pop sarb int sub inc outsb cwtl inc enter xor jg fcoms repz mov ret add add adc push sbb dec lock fsub fistpl mov or loop jbe jmp or (bad) mov sbb push adc cmp stc fwait lahf daa ja out pop out add push and jp cmp adc push inc sub jmp jo mov push in dec aaa je test data16 and lock push mov lahf dec loop jae cmpsl mov pop push pop jmp cmp mov nop dec test sbb push ret pop pusha dec jge lods dec push lods (bad) mov cs mov imul sub daa pop mov aad in es push ds (bad) cltd mov es ljmp xor or rcr adc (bad) mov aas mov add sbb add mov andl mov or movsl inc ljmp and dec sbb out sub mov and cmp loop push jnp cmpsl loopne popa mov ds pop adc popf jnp es les or fsub (bad) and repnz sbb adc mov pusha imul dec ficom shrw sub inc int or push leave aad fs pop jbe pop xor daa and jne mov std pushf push dec xor (bad) cmp sub repnz pop pop xchg cmpsb mov clc int repnz inc xor gs sbb loopne jmp or and cmpb std adc cmpsb push js in xor ret or lret iret inc xlat sub xor xchg or ja sbb add (bad) xor mov xor fbstp adc (bad) pop push jecxz and ret pop lea fsin pop fldpi xor sub and lock sbb sarl or mov add add test inc insl lods leave mov inc out in sarb push stc aas jle test mov jb and (bad) scas imul lock xor xor (bad) es aad (bad) rorl out daa push mov add xchg or ja xchg or std test jne imul popf (bad) repz scas jno or dec adc mov mov loope das sub ret lahf jne lods popf fidiv fisub sbb std (bad) ss mov imul repnz aam sti mov daa xor dec push les shrl pop mov ret push and popa mov mov jmp (bad) and adc mov mov dec adc aam jo add stos xor cvtps2pi add dec and shr mov lcall or cmc push cld adc jb lock (bad) or shrl and (bad) cli xor stos and mov outsl or jge jns xchg inc (bad) mov mov xchg xchg mov stos rolb push push and pop pusha fs testb popa leave mov adc sub sbb xor scas ljmp hlt incl or sbb popf dec je add push gs mov lcall movsl push mov pop xor xchg jl fcmovbe les xor call cmpsb add pop inc pop into mov ret dec iret cmp mov xchg popl push xor int push insb lods (bad) dec in mov orb inc js dec mov clc xchg rep into fildll or movsl ljmp aam mov push sbb movsb test mov je sti cmp (bad) popf xchg pop and sbb xor sub ret push pop push sbb (bad) xor dec cmp call push sub xchg (bad) jge pop mov pop data16 pop ljmp das scas sti mov jge xchg add and iret mov das faddl mov push pop push sub das call inc push movsb fdivl or pop mov cs ljmp lahf sub shr mov enter jecxz test add ja mov test ljmp xor mov xor pop mov out dec lock xchg adc stc movsl inc push add and ljmp xchg ss comiss adc insb add in push test cmp stos xchg dec pop out data16 push xchg inc notb jo das imul (bad) and xchg aaa mov adc mov popf (bad) lcall dec xor fbld pop imul add jmp out push xchg jle insb daa rcrb and and sub or push outsl push push scas pushf decl mov fidivr scas daa mov jmp inc in or sbb inc push adc imul xlat int3 inc sahf out outsb mov lret orl xor or lods ja enter sub add dec leave mov std sahf push adc xor call rorl cs test mov xor jmp cmp mov mov and insl xchg mov pop sarl push sub add divb cmp mov repz or aaa dec jnp sti pop mov test mov push pop or ljmp dec psubd int3 das mov or xor push push jle iret dec cli leave cmp dec outsb or dec stc (bad) dec fmull lret pminub bound je bound and enter repz daa jo pop sub mov push xor xchg incl rorl shl inc dec cld lods sar lret add das (bad) sub inc lret daa adc imul repnz (bad) call jmp cmp push cld lcall sub jbe push mov icebp jg sub (bad) push fwait mov and sbb xchg or mov pop addr16 dec stos xor inc cwtl idivl dec dec inc fsts cmp test and dec rorb pop (bad) into jo add lds or pushf sub movsb das jbe popf fbstp rol outsb (bad) adc in pop ret cmp jo or xchg (bad) jb popf loope testb iret sub cmp (bad) push imul adc (bad) jmp data16 icebp jecxz dec stos push jns sub and das push or pop je pop push pop lret je jmp mov pop cmp sub fistp sbb (bad) dec mov (bad) dec ja dec add sub aam dec std push (bad) mov jbe jns insl jb xor icebp pop dec jl jmp jno dec or inc pop mov sub cmp into pop stc or fcomp inc fisttp lret mov (bad) cli enter sti lret rcrb jo cmpsb insl pop test lret or mov ret cmpsb pop fisubr test movsb in xchg movl jecxz out xor imul lds sarb pop inc mov pop adc dec sub hlt and in int punpckldq sar shl dec cmp jecxz rclb jg or or add repnz sub cld movsb das xchg mov sti cmp xchg push or or aas scas neg and push mov lret mov lcall (bad) cmp repz das lock xchg cmpsl xchg cli ljmp xor mov or repnz out stos or inc test add xlat push push outsl imul xor lds (bad) scas lret sub mov push shll xchg add mov push (bad) (bad) pop jmp mov dec inc je test (bad) mov push dec pop add sub dec add jbe pop in mov sub cmpsl dec mov and in add rcrb je jl pusha mov pop push fstpl adc out nop mov rcrl imulb lret dec lock (bad) jb mov xchg outsl incl adc mov dec into cmp in xor loopne mov mov sbb add setl mov sub add adc dec repnz sbbb fistpll pop mov ficoml mov loop incb mov divl dec xlat inc pop daa les (bad) sub rorb cmc cltd (bad) (bad) jle imul add xchg or xor ret cmpsb and and cmp daa sub ret cwtl lret lock incl leave mov push dec mov push adc sbb xchg icebp sbb or xchg add test mov ljmp jo mov scas rcll in adc (bad) lahf mov lods loop pop push pop ret adc xchg push mov js in mov mov dec hlt adc into int or push pop lret enter sbb cmp push adc scas jecxz lret into adc mov or cld sub ljmp adc xor loopne xlat popf pop ljmp adc and sub gs adc fs decl scas and lret (bad) pop and fcmovnbe or sub xchg mull sarl pushf out lret pop xchg jmp dec and nop stos or lods lods dec mov jge int3 (bad) iret jmp xchg mov push and clc lock shl push loope add sub outsb and in movsl cmc cli (bad) push in sub jnp mov (bad) cltd dec sub leave ss and dec cld mov or sub pop out mov push fs sub add ss jg in dec mov popf (bad) xor cmpsl add xchg pop pushf scas icebp inc inc xor xor mov das xor pop aaa (bad) and and pushf xchg push rcll icebp iret cmpsl fcoms inc mov mov pop xor and outsb cmc adc cli fs cld test xor xchg sub scas cmp idivb xlat jge lret xor into movsl mov call out push lock sub mov flds (bad) bound push (bad) mov sub imul jp,pn fidiv xor ja enter mov lds and cmc adc mov mov xor jno or rcrl mov aam jb jns call lods andb adc (bad) add lods xchg out mov dec adc xor pop inc sbb hlt out pop jge jmp sub dec movl mov xchg mov pop mov gs cli mull cmc shrb lds jnp in sub cmp outsl mov push adc dec or or push gs or adcl jnp sub loope cmp in enter mov lret xor xchg fcomi cmp mov outsb or jno imul xchg cmpsl inc ret cmp (bad) iret or aad arpl test sub loopne mov cli std pop es add stos mov push int3 push pushf or sbb (bad) or out dec mov fmull sti aaa add cmp jae xchg pop jg sbb inc cmp push ja fist sub icebp pop sub xchg (bad) (bad) sub xchg lods adc sub mov mov add (bad) mov cmp mov xor inc repnz sbb out jae ficom cmp cmpsl xlat in sub mulb subb xor gs sar dec mov adc sarb test sti cmp repnz mov test mov mov mov mov insl addr16 aam rcll std sub adc lea shl out popf call mov (bad) out leave push push dec out sub and lds xor test stos call (bad) mov cmpsl xor pop movsb jmp push scas lret dec loope sub add xor and ffreep add xorb clc and fcoml sub mov add xor leave add mov mov enter and (bad) push lea and add lcall mov mov and mov (bad) repz push push sarb pop rcrb xor mov ja sub cmp lret push mov jo movsl mov or divb and pop fcoml or and (bad) sbb into sub pushf xchg jmp pop pop mov test icebp and lret sub adc jl inc jne mov (bad) dec push mov mov ret test lret sbb xchg hlt leave lahf jae sub push jge cltd pop gs jecxz adc (bad) mov jnp daa leave lock lds fimul fs aam stos fcompl mov jae push push ret mov sti sub dec adc or mov sbb adc popf js sub sub int3 daa rcll mov add (bad) (bad) stos sar xchg xchg pop data16 jmp push js rcrb stos jno and pop pop loope jle arpl mov mov ficoml fs mov jge inc push inc pusha mov inc add sub sub and rorb cmp mov repnz loop popf push js push xchg xor cwtl in dec sub mov les mov pop ret adc xor fdiv jecxz jnp mov fwait pop sub push clc ret pushf cmc push jge push (bad) (bad) fcomps or xlat adc xlat xor sub adc sub xchg daa in adc call push push and dec decb pop dec cmpsb js mov test shr and cld movsl lret das mov cld sbb xlat lds daa fsubs (bad) cmp push out jae (bad) dec test (bad) and mov pop pop and mov mov std dec mov sub or inc mov or xlat add cld mov (bad) lret lock xchg cmp outsb das sbb pop shrb mov xor dec testb lret jg sbb mov xchg mov cmp (bad) mov sbb or (bad) jle icebp test movsb (bad) sbb js idivl loope xor ja lea movsl arpl xchg jecxz dec (bad) movsl test out jne scas lret add lcall cmp xchg (bad) das mov incb (bad) fsubrs shll mov sbb shll (bad) jmp jmp inc addr16 ljmp or gs cmpsl cmp and aaa pop sub sub adc imul cltd mov loopne ss cmp mov out fisubrl ret mov add sub xchg pop test out dec add cltd cmpsb mov inc jmp aas pop mov sub cmpsb xchg (bad) out inc test push scas add sub (bad) in adc add hlt lods mov divb aam popa or add lret xor jae or pop dec aad add es loope sub mov dec loope adc mov xor pop pop inc cmpsl push pushf movsl pop stos test xor fs jmp popf (bad) or add (bad) aaa ret js test push inc imul xchg out nop xchg inc call sbb pop cmp inc xor jle,pt cli lret lea jb neg adc popf (bad) lods xor jl and popa mov into popa shlb pop loop hlt in sub jmp dec pop sub (bad) cltd fildll push dec sti scas jb iret (bad) jns jo daa xor mov lret cmp ss inc adc or enter add leave push ror incl (bad) ljmp lds mov or divl int3 ret mov add sub add in rcrb push add mov ret repnz and adc lods mov (bad) and icebp xchg iret scas idivb (bad) cmc mov xchg out cmp sub add popf dec mov (bad) jne push pushf fs or cli or pop inc or xchg (bad) jns xchg lret lret sti ret jno (bad) mov (bad) cmc push and xor cld (bad) xchg add icebp clc or or idivb mov adc xchg jb rcrb mov sub jmp stos out daa cmp and sub xchg jne dec stc mov add xchg icebp imul and adc fcomi xor std (bad) out test data16 sub push xor jg cmc loop je push insb mov mov out test ljmp sub clc xchg jmp idivb (bad) addr16 pushf in leave ja push jae lods lcall addr16 sub push das cmp cmp mov add hlt xchg imul ret cltd sbb and add ret xor jg nop dec mov rolb jnp,pt lea jbe popf insl loop jne out mov dec jbe cs xchg and push sbb fistpll cmp and mov mov xchg (bad) jecxz pop jmp mov inc dec daa pop int test fildll dec pop mov aam rorb test or sbb mov adc inc sub movb and push xor add imul lret fnstcw cmp mov pop sbb dec adc inc cmp call pop dec xchg je jmp lock imul ret call push xor cli mov imul or mov leave fbstp adc ret fnsave rcll out popf sbb xchg cwtl xchg cmp sub loop dec cs (bad) sbb jmp ljmp rolb mov mov mov popf dec mov pop xchg cmp in cmpsb subl dec xor mov stos aaa clc pop mov pop outsl das pop cs fisttp idivb xor js movsl mov dec repnz or mov or clc test inc push push out out fs pop mov lods iret les adc sub scas lret mov sub or xchg les sbb fnstenv adc xchg outsb mov test out test and icebp (bad) push jle leave imul push sub sub (bad) jbe out sub xor mov fisttpll clc inc mov mov arpl or sub (bad) or in pop pushf jnp js xchg cmp push xor push inc inc iret mov dec xor pop je jmp test mov roll mov pop jae daa in jle mov in addl outsl cltd outsb fst and xor into mov pop pop sub xchg popf call clc lret lahf jns addr16 aad mov faddp movsb jle sahf mov popf jle imul mov loop adc pop sbb or mov mov dec push (bad) xor scas addr16 add ljmp mov jmp or sub cmc sti push movsl mull adc ret call rclb mov dec mov dec fmull add push jp lahf pop jmp or mov pusha mov xor popf icebp dec xchg and jecxz push or mov inc daa add lock lds jmp jg or adc fldt push in jo cmp test cld mov push xchg xchg pop sbb test divb iret and lods sar popf or fistpll jle xchg call adc mov sub test fadd out dec mov stos aaa mov (bad) mov mov jo aaa ror dec add xor hlt stc jnp cmp popf push and sub lcall bound xchg movsl and mov (bad) mov jne and mov mov add mov aas test adc sub stos gs mov loope jg fs sub pop ret loopne,pt ljmp das dec and add sbb inc daa lock add push enter mov repz in daa or cmpsl and in loopne cli add fistp xor data16 loop aad fwait lahf sub adc sub aas int3 aas pushf incl push adc pop cmpsb adc mov inc xchg mov adc and dec cwtl mov pop out in out sub mov not idivb fs add pop scas inc xor (bad) mov add adc xchg push dec call nop pop call sub icebp stos push inc popa inc stos mov sbb clc sbb into test adc push sub inc das mov add jne mov sub add idivl xor xlat jno dec fcomps mov (bad) sarl mov pop lds push repz iret xor xor notb mov or mov (bad) xchg pushf std pusha push xchg sub loope cmpsl inc sarb sbb leave int add aas std push dec fldenv xor xor push sbb and test std clc xchg fildll nop ret xchg sbbb inc lea lods cmp jmp and lret (bad) push dec (bad) imul imul push fsubrl dec dec nop (bad) mov dec jne xor pop xchg in hlt dec imull fadds jmp cs ret je loopne mov mov sub rcll (bad) insb and dec xor adc aad add mov lret and mov adc scas bound and jge cs aas pop pop jmp jmp mov jg cmp jle and xor pop popf mov sbbb imul pop pushf jle fisttp (bad) mov icebp hlt jecxz pop sub add cmp mov enter pop jg,pn es xchg dec sbb lods pop mov mov ret test fldl mov outsl sub mov dec sub mov mov adc cmp mov mov ficoml aad sub loop sub jmp cmpsb mov jae add inc lcall or inc lret adc pop test sub xchg out fisub or rorl xor pop mov (bad) or cmp mov push inc or push cli jnp dec fisubrl cmp ds mov push xor ljmp pop add lahf cmp call add (bad) or imul and adc mov xor into xor cmp sarl cmpl sub ds jg or inc mov popa inc add push lret or repnz (bad) cmp loopne adc and aam or inc pop clc iret rolb mov das mov imull mov inc mov aas jecxz xchg pop pop dec es sub push mov xchg jmp ljmp mov scas flds cmp dec data16 mov out adc push dec stos mov inc and pop mov clc fistpll mov fdivs out cmp and out (bad) xor jmp andl adc scas cmp shrl in aad es mov jl sub fldcw dec (bad) mov stos push push fnstcw pop aam jmp mov iret pop mov add push xor movb das push (bad) jne xchg stc mov jno mov adc jns dec push ljmp xor xlat or (bad) loope gs mov out mov cltd sub xchg mov ja xchg jne pop cmpsl nop outsl sub lahf adc idivl sub sub xchg leave cli xor adc lret aad sub or sub or cs dec out lret push sub shl pop mov icebp push ss cmc jge (bad) jge or (bad) xchg enter inc sub inc adc mov les decb pushf adc (bad) in inc (bad) repz mov lret pop jbe cs and popf jg xor push lahf (bad) or outsl mov pop sub mov inc mov xlat xchg shll push fist inc or and add insl popf out std mov popa into pop push push test pop je ljmp lret and arpl cmp dec loop xchg call es rcrl inc lret leave data16 jle adc repnz out inc sub pop lods xchg enter fs and outsb fisubrl jle dec jnp mov push ja out aas mov pop mov out repnz pop std push xchg mov loope shrl mov repz mov ret adc or jge sti or mov dec mov aam sarb xor sbb movsl dec push mov sub adc fistl sarl jge mov push leave xchg (bad) stos insb out and ss cmp mov push fmull mov subb into add (bad) sbb lods clc mov mov sub dec mov adc adc mov jmp add sbb ret push aam mov pop or xor (bad) js adc and sub sub pop icebp mov aam repz cmpb jb mov sbb or pop jmp adc jne adc insb (bad) lahf hlt jmp and xor mov (bad) and sub addr16 and or sar xor xor mov cmp in add lods cmp push jge cmc dec lret xor scas sub fimul xchg cmp ljmp mov lds mul mov lock jne cmc stc mov mov into jbe das inc andl push sbb push inc mov xchg cmpsl test into imul es sbb push and mov lcall sbb push mov xchg das test das (bad) imul ljmp sbb enter mov ret inc xchg std mov std gs xchg divb sub test (bad) sahf aas jmp inc ret jg inc movsb pop daa jne loopne cmp and sub push adc movb cmpsl mov inc xor scas cwtl enter mov out or and inc push pop jecxz xchg mov rorl mov stos cmp movb fldcw leave or sub leave das sub jle (bad) push add lahf xor push out xchg icebp push inc call pop iret repnz mov mov add sub xor iret sbb scas fyl2xp1 cmp push sub xchg daa jno xchg lret stos loop xchg (bad) jp mov push repnz insl ret xchg fdivrl repnz sub lret adc xor or cwtl ds icebp bound xor add add sub shlb fist mov lea int loope adc sti jle cld test add mov out int imul dec mov dec mov sub push sbb add prefetchwt1 pop xchg pop xor inc gs out stos mov test shll fsubrl int3 scas xor incb cmp jle and cmpsb pop push (bad) loopne inc push add jle jmp in lods xchg or clc inc daa push sub int3 inc sub xor cltd adc out pop mov mov mov std adc pop mulb lret cmc push mov inc pushf or insl xchg xchg (bad) stc push xchg movsb insb repz mov cld fwait lods je push cmc lcall push push es pop pop jmp (bad) mov push or pop mov sub mov test psubq fistl mov loop scas sub inc pop mov add ds loope popa aad xchg clc and insb push or xchg ds ret jecxz dec mov dec xor mov jecxz ljmp dec mov push cmp cli das les out adc sbb das (bad) sbb xor sub mov out push inc jle pushf mov dec into roll ret (bad) int3 and aam push sub leave scas sub pop add (bad) xchg sbb and sub sbb leave mov add mov push push mov gs call movsl arpl add and aad test clc sbb adc daa cmp jne xor push push xor pop push and and mov out js movsl mov push and fnstcw cmp dec push or lcall dec scas mov sub mov clc xchg pop popf cmp fs ror adc jp popa cmp adc and push pushf das cmp add xchg enter cltd mov push (bad) sub sub and inc mov repnz daa pop xor cmp (bad) mov sub jmp dec mov imul xchg pop and jge mov sbb pop adc lret jmp in or add push push out and xlat fidiv push add aas cltd inc in mov stos repnz mov aad fs imul fwait mov mov xchg lock loope xchg fistl mov mov push dec inc mov push clc pop out inc insb das lret loop jnp movsl in adc mov mov (bad) and (bad) imul mov scas sub dec scas cwtl or pop xchg sub xor cmc sub push loop sub sub sub add sti push (bad) loop lret daa or jo ljmp xchg push (bad) dec mov sub pop je ljmp (bad) (bad) hlt jnp mov lds inc out imulb shr lret xor sub mov das repnz mov lods std push notb sbb dec and adc nop repnz popf xchg notl mov nop push add push (bad) and cwtl inc and jno xor pop add sbb out xchg jecxz mov pop xor leave (bad) dec inc dec fnstcw ljmp xor cmpsb inc les jg mov sar fstps push adc push std pop add pushf mov xor jecxz pop ds (bad) xor sub xor out mov xchg push pop dec sub pop (bad) cwtl fisttpl (bad) sti push pop add testl leave pop sbb jl mov loop leave (bad) (bad) in (bad) jne jecxz or (bad) or cli mov popf jae and (bad) inc test stos jl loope jbe repz in daa jge stc xchg mov mov pushl fs mov push xorl jp lds sub cwtl iret mov push shr lret add sbb fsubrs popf dec jl les fidivr jp xchg mov out pop or (bad) mov pop test mov lahf xchg clc in prefetch (bad) pop pop cmp daa bnd dec sub add sub jns sub add mov jl outsb je push cmc cltd sub xchg mov mov add jecxz mov add cmp cmc subl mov mov mov (bad) mov call (bad) jno mov out in dec movsl cltd add test add mov js lret mov sub jmp push and outsb insb cmpsb push xchg (bad) andl (bad) gs sub daa or imul ja imul xor adc jb dec clc lea aas in push pop sub mov daa fcoms popf xchg xor aaa outsb in mov or or stc xchg movsb or xor hlt xor jl pop inc cmpsb ljmp fwait ret xor repz cmp xchg jns inc add sub daa mov pop or sbb iret out xchg fmulp jae dec or fs call iret inc pop and push or dec push mov cld (bad) out mov roll outsl and adc notb in inc sub or mov jb stc and or ljmp jge push add ret cli lret into imul clc mov sub popf jno imul std cs pop cmc loope out loop and loopne mov cs mov xor pop loop fs and cmp mov mov mov arpl add cs inc mov in ret loope jmp fcmovne add mov enter or add sub idivb cmp lahf pop xchg jg outsl data16 icebp outsb sub add enter add cmp test pushf xor out xor mov enter mov (bad) daa push gs (bad) sbb stc xchg imul dec jp les sarl fsubl sub sub test mov adc ja fisttpl jmp (bad) pop out lods xchg mov std push xchg out adc or je mov push pop mov roll and and out push mov jmp fxch or xor add ret ja aam pop inc inc xlat and sub add je or pop push int3 inc or pop push (bad) push rep lret and leave cmpsb gs arpl sti cmp arpl shr mov in bound (bad) push mov inc fs xchg je fcmovb imul sbb xchg push pop add pop xchg enter mov or jmp (bad) bound call cmp sub mov sub lods cmp rolb clc xor cltd mov pusha or push mov or out out mov sahf xor or pop ja imulb movb mull push stos lret insb sub pop das push aaa push call add lret dec ja std and sub mov out dec push cmc lds ss or adc fdivl xchg jmp cs pop lret es inc push sub ljmp out in std js sbb gs scas inc (bad) xor dec mov mov scas mov dec mov mov mov sbb jmp jb xchg mov out add xchg push mov cmc jae daa fbstp (bad) pop scas lret sti bound cld js divl repz ljmp (bad) mov pop stc push xchg push lock lret jae pop and jg jg jp pop in push pusha mov jb das (bad) add sub push std adc dec mov pop mov enter aam sbb addr16 push leave or sub (bad) movsl mov dec loope mov in out cmpsl lea pop and into jg mov mov mov mov inc pop sub jmp (bad) cmc mov nop lret and mov stos test and (bad) jne rorl and stos push (bad) xor or push dec dec lret dec mov or xor pusha adc pop fldl cld loope jecxz adc push stos mov dec mov insb pop (bad) outsb xor and or mov int3 lahf mov seta repnz enter mov lahf and adc push data16 sarb mov fsubrl jmp sti push imul jge push scas std mov iret cs push dec fisttp mov jmp xlat push lcall insb cmp stos push lods xor jmp push add das mov ret or in and jmp lds or and add icebp (bad) popa sub xchg scas frstor movsl lcall fldcw mul icebp mov pop movsb int3 scas mov adc in sub dec dec int3 xchg mov mov mov dec sbb test and aad sub xchg in pushf es or mov pop mov ljmp dec mov mov jg les (bad) sbb mov cmp cmp fmul stc push cmp xor icebp inc push add inc pop cmp incl ss jmp dec test mov jo loope add fbld jge xchg loop,pn sbb pop push fcompl add aaa pop stc xchg xchg out adc les xchg adc jb into hlt and sbb or insl mov insl xchg sti push push or mov dec leave imul adc xchg in inc mov cld lods clc pop dec out lret jecxz frstor mov (bad) stos call push sub xchg pop jne lahf (bad) xor pop or sub sahf inc dec mov lcall sbb adc into insl cwtl adc adc push mov or push scas fstps mov mov rorl mov push cmc cmp jo sub sub loopne out call (bad) daa mov repz xchg xor mov cmc pop dec sub fs mov xchg cmc scas jl fisub (bad) mov dec leave fimull pop imul (bad) je aas leave jge lods add into jl push lods cli cltd roll adc insb ret fwait (bad) adc stos cltd (bad) or jmp xor test pushf mov or xchg iret sub jge mov mov lods fmuls jae call mov js mov out cs popf imul and xor sub ret sbb rorl (bad) mov add aad das mov fcoms xor mov sub xchg mov loop in push leave out mov adc push push xor stos mov xor and movsb xor pop or hlt or lret sbb sub outsl lock lock or in inc hlt scas loop adc dec les ljmp out out jmp cwtl dec test dec dec test (bad) mov loop and lods xor (bad) mov aad mov xchg mov cli jle inc out inc sbb jo repz or add adc or cmpsb xlat dec int cli pop dec insl mov scas mov jg push in xor mov out add push (bad) icebp pop mov fistpll aaa fsubl mov mov mov cwtl pop xlat xchg stc stc lret and sbbb ffreep or ja sbb mov test stos lret or jecxz sub out les scas popf shld std and sbb bound mov or (bad) outsl fdecstp jle push add jmp mov pop or or lds cmpsl out lahf stc mov push pop stos mov mov jg pop mov dec pop ret pop jp out push and xchg sub cmp sbb add mov lret or jne das mov cmp into (bad) xchg lretw test inc lcall mov call jp sub xor jg fcomps mov mov scas negb daa mov movl in pop pop lret (bad) fs jmp out and mov notl pushf and fnstsw dec jg out jnp scas hlt pop add jg mov stos jae mov ljmp mov push xor jo inc mov js xchg lds xor dec sub pop (bad) mov dec and mov mov sahf sar dec jno sbb or test negl sti gs cmpsb inc pop and test sub rclb (bad) idiv int data16 add mov mov add xchg ret pop jbe push sub lahf push scas or and xchg fisubl xchg ror pop sub call cmpsb jo adc adc daa xchg cltd xchg notb outsl outsb sar adc sub aas push aam dec call out mov in mov mov mov ja push mov inc fnstcw xchg aad test ljmp daa testl aad jmp fsubrs mov mov outsb inc lcall mov repz arpl mov add icebp jle mov notb push add xchg or mov sti fldl2t jp sub sbb jmp mov rorb push xor pushf jecxz push sti lret add ds cmp push adc sar faddl mov daa mov in mov xchg pop negl fidivr shrb mov enter sub mov adc daa jmp outsl daa std cmp stc add sub enter sub push stos imul dec cmpl jne inc cmpsb jbe and aad repz inc lahf xchg or and cs movsl push pop push cli fs les mov sahf sahf ret adc sti lret setle mov addr16 loop cmc xor cmpsb xlat push mov icebp dec cmp pop fmuls ret cmp xor or or cli push leave insb push jmp lahf int3 ret xor ret (bad) xchg adc cmp sbb lods scas sahf data16 test adc pushf mov lea aam je repz jo shr mov xchg cmp lock mov scas negb pop rcrl push jb lds add mov outsb pop clc lcall lret xor xchg jne dec ss push aad not cmpsl imul mov xchg addb xor mov mov mov out shrb leave mul ret scas sbb or out pop inc push rorl cmp pop xchg sub sbbb pop mov or xor das sbb sub dec or addr16 cs or jnp push mov xor fdivr and int aas std fstl pop sub add or gs insb (bad) mov push xchg sbb ret (bad) mov push movsb fdivs pop and or mov in and fs (bad) xor pop decb mov sbb push fist outsb xchg pop lret out lea jo sub dec test push xchg add mov (bad) shrb sbb cmpsl frstor iret add add xchg stos repnz test sbb mov bound sahf iret sub fldl sub cmp (bad) out idiv (bad) out das add in mov (bad) xor mov push sbb lahf xchg mov cmp outsl out dec sti xor std fnop dec data16 clc clc call mov dec push leave mov and sbb das sub ret mov loope inc jb xor rcll scas jbe fs std aaa popf xchg orb lret lds xor loop or mov push setge lcall dec xor and stc and push ja fldcw jmp or fwait adc test mov mov mov push daa daa add cwtl lahf mov xchg xlat mov icebp mov das and mov js icebp xchg icebp mov (bad) loopne leave mov popf push adc (bad) shrb mov mov adc sbb pop cmp das mov loop ficoml adc arpl loope loope bound sub xor mov fs mov push fstpt push mov outsb aam dec ret jge mov push movsl push bound xchg push mov push ret xchg pop sbb add mov xor sub mov inc or aad mov mov outsl sub lret pop dec lea jle (bad) xchg lods pop ret stos mov sbb mov roll and mov xor mov pop mov outsb cld jp mov imul xchg les mov adc andb cmp add or stos or jmp gs mov add mov and or std sbb faddl pop paddq sub cli repnz leave aaa faddl lret lcall mov jmp xor xor fmuls in jle pop lret xor or int popa nop bound fnstsw jbe je push insb push xchg aaa push adc in dec sti adc pop xor xor outsb ret rclb dec clc mov popa jb mov sub fist ljmp (bad) mull lea jae ret faddl dec push mov mov pop mov fdivrl push lcall das cli sub into outsb (bad) or je dec fidivr imul push mov dec sub jns cmpsl test sbb adc mov inc or adc stos jl das out adc aam cmpsb dec scas mov sbb mov test mov loope mov mov xchg outsb lret jb jl fcmovbe mov and jnp out dec leave add bound dec pop mov push pop loopne (bad) out mov dec xchg mov xchg leave jmp push cli nop movsb xor pushf inc (bad) lret jp or pop imul mov lret add fs xchg test cli mov incb daa es mov fidivr (bad) clc cmpsl cmp adc decl adc iret mov dec lahf cmp rcrb notl mov mov sub jbe daa in xor fnop popa vcmppd into movl ds xor stos repnz xor xchg cmp mulb adc insl imulb cwtl imul pop pop sub lds clc and cmp xor mov popf or jbe or inc add jo out dec sub jnp lods pop and add xchg push push jo or enter test stos lods les enter sbb pop push jbe pop inc lods into or xor test popf xchg mov push or push add and adc stos add fistpll sub lea frstor sub push push icebp pop rcll data16 shll inc lods hlt jno jo fistpll ss (bad) lods sbb (bad) cmpsb lods outsb in (bad) xor adc stos je (bad) mov push pop push imul sbb jmp fucomp dec xchg or pop push int (bad) pop stos repnz or lock insl mov hlt lret mov jle xchg xchg pop and pop mov dec insb lret and testb lcall jmp add cmp imul adc push lods call ljmp fs out je dec pusha ret mov xchg jmp fldenv add loop mov xor mov (bad) jb aas shrb (bad) sub mov (bad) int3 xchg pop cmpsb imul push or bnd movsb dec xchg jmp sub iret mov fwait cwtl retw xchg jmp mov nop dec adc jmp idivb scas sbb sti xor adc sbb jnp jle popf (bad) test mov push movsl pop lds mov jmp mov fistp xchg sbb mov repnz sub das mov add inc or inc sbb pushf jp outsb cmc ja pop add inc imul mov jp jbe inc push xchg aad flds icebp lahf push sbb mov cmc insl and sub sahf out push jp sub push xchg out jb (bad) push pop movsl pop (bad) lret push pop daa out aaa pop mov imul adc xor scas xchg mov jg and xchg fsubrl mov mov daa xor pushf inc ja pop mov xchg les rcrl adcb cli sub mov mov dec lea test push jle xchg stos or cmp clc sub cmp popf fnstsw inc jmp and xor out daa (bad) popa jnp repz das or mov sub (bad) xor call mov mov stos cwtl xchg fidivr adc leave mov out push xchg outsl daa ret xchg xchg test cmp push cmp mov cmp popa push sub sub flds mov andb std (bad) sbb xor arpl rclb (bad) dec test sub push in addr16 fnstenv mov call sbb push jns les outsb test ljmp jmp dec lock xlat cmp or ret push inc rorb mov inc scas cli add or aad jbe mov mov adc (bad) movsl test mov addr16 adc pop and or pop add inc jmp testb push rorb cmp dec pop adc mov dec sti lea adc cvtps2pi push adc add ret xchg inc sahf jg mov mov cwtl mov notl mov sti mov dec lods aaa ret mov sub rorb add xor mov std dec movsl addb sub inc and xchg popf pop insb (bad) sbb cmp mov jecxz sub mov mov dec ljmp sub daa and push dec pusha xchg mov fs ret sub xchg repz dec loope inc jp lds repz test add inc dec repnz inc insb dec mov and push popf cmpsl test jmp sub xor cli les or (bad) jns mov pop add adc (bad) sti fs mov pop push sub out or test (bad) ljmp lret lret lret aam ljmp sbb push sbb insl fs add mov (bad) dec lret inc les or dec fxam aam or enter test mov inc adc xor incl loope sub bnd leave xor lret cmpl dec pop xchg sti adc sub mov icebp xchg sub ret (bad) (bad) leave push out pop in mov aas mov cmpsb dec dec mov pop add mov iret and cmp jo daa or cmp loope cmp sub dec (bad) (bad) leave adc xchg and test shrl shrl pop dec add mov icebp pop stos rolb pop mov mov dec lods outsl fstl mov out xchg jns arpl repnz rorl popa repz jnp imul pop dec or add inc and mov mov inc and testl fisttpll sub xor js jbe sub mov (bad) xchg stc outsl lret data16 pop lret xor xor daa loop jmp push push xor ljmp cmp lahf pop push sbb shl dec pop or sbb inc sub enter cmp cli sub imul mov mov fist jg add imul adc cmc and adc jns dec movsb jb mov push daa testb xor mov xor repz cwtl jmp fincstp inc addl stos mov sub loope sbb stc aas mov push cmp jecxz inc xchg push popa imul or sub mov out pop mov data16 or pop jp inc add (bad) mov mov fisttpll and (bad) icebp shlb pushf mov sub leave mov xchg jge mov andl loop fstps scas sahf nop add inc out es aad hlt pop movsl pusha pushf mov sbb and pop pop out (bad) and pusha and lods mov or dec loop jmp lods fnsave jge (bad) testb ljmp out popf sbb push push pop mov leave divb movsl mov sbb jge loope mov test aad test (bad) sti mov stos dec mov xor xor or nop loop sbb sub loope cmpsb pop pop (bad) sub lds push imul mov mov sub or (bad) sub fwait xchg jmp cmp lods lcall andb sbb xchg repnz out xlat stos adc mov mov into sub mov or jl mov mov adc add sti adc dec out lret mov pop and cltd (bad) aas ret hlt adc aam daa push add xchg xchg or sbb add (bad) dec lods inc icebp push movsl push inc push xchg pop lods cmpsl test lret sbb inc jp aas lds or push and push imul pop aam dec adc pop out jne mov add mov or dec sub mov mov mov jl pop bound ljmp pop mov loop jg dec jl das hlt sbb leave scas dec or mov daa pop hlt dec inc lock icebp xchg cmc adc mov scas fist (bad) dec pop xor out inc adc shrl xor push push xor (bad) jbe lcall bound lods and lret enter cwtl add js mov imul xor cmp (bad) cli adc popa push pop fnsave mov js rorl nop xlat or repz push icebp and sub or dec mov mov mov movsb es ljmp cld sub sub mov and xchg sbb lret mull movsl bound xor les loop shlb mov or fldcw pop sub jle stos ficompl sbb sub in lahf stc sbb cmp (bad) (bad) insb leave negb orb aaa and sub or xchg inc dec and mov ret cmp mov js das jmp push out adc cmp or mov iret out pop xchg test adc daa sub pop or and adc push pop push loop add and add cwtl jb xchg jne lea jmp push arpl repz add add sub negl pop mov gs scas gs out push data16 jmp xchg movsl mov int3 ljmp xchg icebp xchg icebp cmp and (bad) or pop cld fsubr mov popa (bad) xor rol cmp mov roll (bad) xor negl imul dec push lods pushf dec leave mul sub clc imul (bad) aad scas mov and daa clc jg or in pop sbb xor jnp and jmp in mov jnp mov popf pop dec adc cmp leave xchg icebp mov negl movsl xor push sbb out lds es sub sub lahf add into in cltd shlb inc sub lock mov inc cmp jecxz jmp mov out adc xor mov dec mov xchg mov push imul out pop cli bound inc pushw xchg in pop push repz add stos mov out pop dec sub inc dec mov adc (bad) popa call cmp mov sub insl sub xchg cmp mov jecxz xlat gs dec out sub scas (bad) into iret jne adc xor pop or adc mov cmp sbb mov mov enter test cmp mov pop mov dec call sti aam lods mov mov (bad) mov xlat insb xchg cmpsb inc and xchg lgs xchg ret aaa mov iret dec test xor mov aaa xlat lret sti and jle xchg repz mov sbb inc push xlat xor movsl cmp lahf movsl aad movsl fcoms movl xlat mov (bad) lock add ret mov mov sub pop push fnstsw out pop subl jno add aas fcomps (bad) lock (bad) xor aam in sub stos sub push xor movsb lcall mov pop jmp lahf fcompl push mov rorl adc fsubrs daa and in test add (bad) sar test shrb out es mov lret data16 lods xchg stos xchg jg enter push dec sti lret push push or int sar and mov imull mov in enter jae pop xlat sub in mov and push (bad) test add mov adc fsubr loop inc xor lahf cmp push pop ljmp lods cmc lcall iret sub (bad) (bad) cs and add dec xchg arpl mov stc shrb xor mov pop inc idiv aaa pop test out mov imul lret or mov mov or adc jns xchg ret pop pop mov fildll iret jmp sub add mov jne jb or inc add xchg pop jns mov mov js pop iret mov call sub pop out imul add mov repnz ljmp aas (bad) mov ja ret push in sub imulb cltd adc sub sbb xor and stc bound pop scas jno and jle and mov sub popa mov and jp (bad) xchg loopne shrl mov bound das jg (bad) push mov xchg add mov (bad) xor scas arpl sti dec es sub jne mov sub or stos jp sub sahf dec cld jo rcrb push dec loop pushf mov xchg push mov jg xor or and push enter mov fldl cmpsl ljmp repnz adc insl xlat das stos sub fildl push ljmp push sub add sub jg cltd mov ds or add leave imul ror sub std inc sahf movsb jnp ret jbe test pop lret add sbb jle (bad) outsl in and out inc dec mov cmp cmp out icebp dec pop mov divl sub (bad) sub sub and rorl add (bad) lret xor idivb sub pop jle mov test mov mov sub adc in pushf mov lds push adc pop mov bound out xlat (bad) xor xor inc xchg xor mov sub cs sub xchg cli pop in xchg dec push cmpsb (bad) pop adc mov sub pop adc (bad) xor lret jmp xor imul add add sub and test fst fnstenv fmulp iret inc xor scas pop sub (bad) popf mov add stos mov dec mov or and cmp call vmovsldup and mov adc in inc adc mov mov mov xlat stc mov cmp xchg sbb sbb pop mov sub dec mov (bad) xor stos fs jecxz dec cli test in mov jecxz loop sbbl and dec inc mov lcall (bad) or cmp in or mov pop fimul or pushf mov jo sub push mov sarb or pop dec imul jb out daa lret in and add mov test pop (bad) pop or adc sbb mov xchg daa jmp (bad) popf dec fdivr dec (bad) imull popl inc popf in inc xchg mov ljmp cmc in (bad) adc add scas addr16 mov out (bad) shr popa mov ds (bad) pop loop jno or jnp push add mov in js sti loop dec fnstenv icebp hlt sub movl ljmp out fdiv xchg std mov push shlb xor adc ss lret xor pop pop pop xchg mov inc sub dec je sub jecxz add push repz cli mov lds and jb out inc (bad) movsl ja leave daa mov lcall mov push sub mov mov in mov and sub sbb dec aas xor lods dec adc cmp movsl xchg lret xchg fist dec jecxz imul lret jl jecxz and and push mov push call inc scas push mov cld sub shrl into mov add and cmp shrb icebp xor out test lea cmc movb mov pop or cmp iret and and dec arpl into and popa pop sub and sbb mov add pushf stos push out mov (bad) jmp outsl test stos mov xchg scas (bad) xor xor (bad) or fistpll cmp push mov movsl push mov or inc add addr16 notl and mov sbb ret outsb jle xor ds dec (bad) or jle mov scas or mov xor and out addr16 mov xor sub into dec mov sub and nop jmp out lahf push and inc mov divb fstps and xchg mov hlt mov pusha mov (bad) je loop (bad) pop jbe push push push jo or pop lcall mov fidiv or push mov xchg xchg sub (bad) imulb dec mov hlt js lea pop jp loopne mov movzbw test clc mov icebp xchg pop push (bad) xchg pop sbb pop icebp add push stc popf aam push pop flds cmpsl push cmp push pop cmc fs add push push test inc loopne adc pushf sahf push pop mov dec outsl out cmpsb imul fs leave mov insl mov cmp adc lret jno inc and sub addr16 clc and (bad) out sub icebp pop cmp fs mov push lcall out test int3 push xchg fdivs pop xor ret rorb rcrl mov aaa out pop pop xchg loope into aas sub sub ss xor (bad) enter or inc sbb bound mov add mov sti mov in or xor dec jp xlat das jp adc repnz adc add int sub dec cmp dec dec (bad) jge lea sti mov dec nop xchg adc pop adc push pop xor or mov or lret mov jl es lret or mov add outsb adc bound mov ljmp inc mov stc mov rclb push fsubs lret jle push lahf lock and mov push pop in dec xchg add outsb xor in pop sub test out cmpsl pusha jnp (bad) lret mov push aaa jno sub adc jge push jecxz ds out adc (bad) (bad) sti pusha mov stos mov dec mov int3 int3 enter stc out dec mov xor xchg push push adc dec fldln2 xchg xchg and and xor call cmc cmp pop dec into add daa fistpll rcr adc mov (bad) mov and sub fs sbb cmpsb rcll push call movsl fbstp ljmp in mov mov jno (bad) push and xor and into and cli xor ja ds faddl xor xchg daa add icebp adc add xor repz jge je dec je jp cmp ss add (bad) leave fisttp aad jmp mov ds adc pop es jecxz add rcrl sarl int3 out in leave xlat jp pop out ljmp fistpll mov push xchg push dec and sbb pop or adc in popa (bad) out jnp ret mov mov add lret rcr mov in fmuls lcall add add dec dec mov outsl (bad) or pop fisubl (bad) rorb add pop cwtl mov mov sub and or insb dec (bad) in sub xchg stos lret xor jge adc stc (bad) jle and mov sub lea ds icebp mov loope add scas xchg push dec jle push add and enter inc (bad) push mov cld mov and dec pop icebp jae sub out insb sahf in jg inc (bad) pop sbb xchg in add mov adc jb add xchg stc sub mov inc jmp dec dec xchg mov adc lret or out pop out dec adc mov lret sub data16 add cmpsl pop in push ljmp out cmc test xchg scas (bad) sub addl leave negb lcall dec jbe (bad) push lds ss stos ljmp mov aam stos call adc add clc push cmp daa stc xor mov test mov cmpsl jae ljmp add mov or mov (bad) sahf rclb sbb and mov fistpll test pop inc cltd adc ljmp pusha inc push jae out push adc or fisubr in in fstps pushf fidivrl ja je mov and ljmp inc cmpsl dec movsb jb sbb add dec mov loopne cmp imulb leave les add imul xchg dec cli incl cmp sarb push pushf pushl add (bad) cmc push data16 cmc repz pop xchg jecxz or idivl aaa daa out adc aas std pop lret (bad) lcall lret pop cltd icebp gs popf test stc adc and sub mov jl dec push push sub push jnp rcll pop mov pop mov iret and sub cs insb lea or arpl and mov sub movsb xchg dec cmpb movsl loope sub pop je push std mov (bad) mov cmc mov mov push jb mov daa aam push lock xor cld and fwait mov cmp test jmp mov push mov out (bad) mov ret xlat pop getsec adc and enter daa ret inc (bad) push fcompl sarb sub cmp and cld ljmp (bad) das lret ret xor pop and (bad) dec scas push stos jmp out aam mov sbb std push or pop pop pushf jle popf bound pushf int3 mov xor out push push stos mov adc xchg divb sbb stos lret mov cmp (bad) mov xchg repnz xor cmpsl shrb mov pop icebp mov repz icebp pop test loope sub (bad) ljmp sub jbe xor xchg std sbb ss pop dec idivb cmpsl incb movsb mov fs loope es cmp add mov (bad) dec push jne mov xchg jbe inc cmp leave and out or and or sub fmull mov (bad) mov stos mov mov pop mov mov adc and inc jl repnz xor lea ror mov movq mov call mov repnz jmp (bad) mov (bad) sbb lret imul add adc out or mov mov xor mov fsubrl lds aad or std and (bad) xchg push pop inc out jl imul inc pushl jne lock fnstsw push dec pusha xchg and sti (bad) out xor inc lcall cmp pop repnz movsb cld dec inc jmp xor sub inc lret dec aas fsubr xor mov dec (bad) mull inc push xor cmp icebp or outsb (bad) lock pop (bad) (bad) xor gs cmpsl pop add mov sub push out sub (bad) mov jns push xor mov not inc jmp icebp fbstp pop cld fldcw or jmp imul inc adc ds xor std jmp inc mov or add leave xor mov ret inc mov mov cmpsb rolb addl ficomp test popa icebp inc icebp jmp call hlt inc popa or or lock jmp cli aaa mov pop roll xchg repz das mov push (bad) shrl add je ror mov xchg in addr16 push jecxz xchg stos je stc cltd xchg mov cwtl movl out ds cs push out test movsl mov fidiv loope xor ds clc or xchg mov or or add notb push jne into movsb xchg (bad) xor (bad) call mov repz adc stos mov inc in lock into xchg fstl dec loop xor dec scas je or sbb scas sub (bad) xchg add fdivp dec or mov xor lret (bad) sub call add repnz xor inc out pop cli add in or (bad) sub sarb rorl pop lock pop sbb daa or ljmp stos and cli scas (bad) pop xchg out call lcall cmpsl pop sbb out inc cmp dec mov mov clc pop fisubl push or out sub fcomps mov out jno lods mov xor (bad) mov sub daa xchg sub xor mov xchg jge push mov cli (bad) out icebp scas mov subl das pop mov ljmp lcall xlat add ret sahf pop sbb icebp jbe jb sbb (bad) lret sbb popa sti or movsb (bad) repnz (bad) in sbbl sbb push scas push push and outsl mov testb jl pop jmp notb mov scas and mov pop mov ss dec cwtl outsl inc out cmp xchg pop pop sarl imul inc add and lock sub adc mov dec pushf adc dec pop lods sbb cmp test dec mov jo incl pop mov aas fsts out jg mov xor cmpsl ljmp pop dec dec pop lods xchg clc adc jb xor push cld imul and aad or pop fsts and or jns dec rcll and rcll aaa sub cs add mov ds enter loope push ss divb aam push inc ret dec std and lret aaa dec int3 fbstp shll mov sahf inc inc in xchg xlat mov inc aad loope pop add push pop pop cltd mov out icebp (bad) (bad) sub rcrl stos or fidivrl sub push xchg (bad) dec out scas mov pop cltd icebp xchg test int insl dec lds roll loope rorl push mov push xlat mov dec mov xor (bad) pop xchg cwtl mov ficompl and lret xchg mov pop fadds mov push or lret stc and inc js xchg (bad) pop out mov aad or enter mov aad shrb pop sub test (bad) pop (bad) mov cmp jbe dec cmc add push (bad) or ja cmpsl (bad) out repnz mov stc push inc and xlat imul (bad) mov fbstp leave push sti pushf cs pusha jmp stos xor out lret popa dec loop and (bad) sbb pop sbb sarl add aad xor sub mov xlat sub dec cld xor mov dec int xchg mov jbe xchg jne pop mov js (bad) fisubl lcall fist (bad) jl dec cmpsb xchg dec out lret or sub mov xor or sub mov pop cmp mov mov mov mov add movsb pop cwtl aas mov gs mov mov outsb pop jo add mov mov sti xchg inc loope xchg stc mov dec loop mov clc popf jnp lods inc sub jg pop pop mov mov not mov or mov ror add notl mov iret (bad) fsub or cltd push push inc jmp lret cmc pop mov or push push mov and std jbe stos xor jmp mov ss mov into in mov sub pop jl imul add mov push dec and mov jb or es add push das sti fistpll xlat sub jmp mov cmp je jge cld pop out or push xchg imul (bad) movb arpl fbstp gs cmc (bad) xor rorb or mov sbb dec mov shrl sbb out push in mov xor cmpsb push pop mov out dec mov jno dec mov in mov mov mov pop push xor lret lock mov cmpsb xchg gs aas ret mov push xchg scas xchg shrb push sbb cli sub fdivrs stc and mov lods or push loope lret scas pop and add mov bound fisttpl sti jns xchg or das (bad) mov mov das sub or cmp or lret loope xchg fistpl xchg add lret sti les repnz lret leave pop sub out sub or out adc mov (bad) sub jmp gs lods les pop in mov pop mov sub or cmp xchg add aaa dec mov xor cmp ffree cltd test xchg pop xor popa cmp js mov add out xor mov test mov push cmpsb sbb jecxz jge jmp pop test daa shlb repnz inc (bad) jo pop out mov and test daa add mov mov data16 cmp (bad) movb xor ljmp xor jge adc mov repz ds (bad) lock daa xor fist mov sub lret nop dec mov and fldt ret mov movsl cmp (bad) pop xor out xor int loope imul clc sub jecxz jge pop mov push (bad) enter mov mov shl push xchg pop ds popf fsubp mov pushf aam push mov or or pop sub cmc push insb inc in cmp clc pop out fs push mov and pop inc popf and in stc in (bad) imul fcomp and mov outsl repz out dec adcl jae xlat stc orl xor push mov icebp add xchg mov mov (bad) mov and out shlb mov fnsave pushf xor out and or adc cmp out loop (bad) mov jp mov xchg stc push test sti mov adc jbe push mov and pop daa xor jne fdivrl scas subl or out mov adc cli fs (bad) sub popf adc xor (bad) pushf lret out sbb lock out aad mov push outsl clc fldl jg pop xchg daa or ljmp fcompl mov scas jne gs and add cmp add mov arpl cmpsl aad lahf push std pop incb sbb xor sahf enter data16 div and in jmp aam push popa dec mov mov iret dec mov enter ror pop and jmp jmp jge pop int3 (bad) and pop cld (bad) pushf into loop (bad) jg faddp cmp pop loopne add iret outsb dec dec lret rcrl or repz sub repz idiv push lcall cmp (bad) sub stos int3 xchg rcll ds mov out cli push adc dec push xchg mov and and mov data16 add push outsb sub orl ljmp or inc inc out cli push cmp call movl dec jbe push imul cmc cmp pop or cld loopne pop or sub les sahf adc pop in push mov mov into sub shll pop xchg rcll (bad) mov jmp mov gs cli into xchg pop mov mov sub adc dec mov int jno outsl mov jle fidivl add mov lahf in mov pushf repnz loop (bad) sbb jmp push sbb cmpsl xchg add mov fstl sbb outsb fs xor cld sub xchg mov jns in aam mov fstpt pop lea lds repz les inc sub jg mov add addr16 push das and pop lcall or xlat ret (bad) aas daa (bad) dec mov mov ja adc add imul cmp clc jge pop pop out mov mov and inc push addl data16 and sub (bad) test add in mov loop push pop jle leave icebp shrl data16 inc mov ds cmp push movsb icebp adc in mov test lods in clc dec (bad) out jns icebp cltd imul mov pop xor outsb mov mov (bad) jo mull lcall xor xor mov adc ljmp jmp and out mov xor jmp mov mov popf or jge lds sub fldcw bound adc pop imul outsb dec push mov or push mov jmp test push fcomp into sbb ss lock mov xor mov sub out jmp mov adc add rorl fwait lcall pop imul xor push aas and test aaa test cmp mov aad negl ds dec mov ret xor scas loop mov repz cmp fs test jp pop cmpsb inc mov (bad) mull les lea icebp mov bnd das jo repnz sahf imul mov xor add cs pop imul aam imul movsb ljmp jne adc jge (bad) daa pushl mov mov stos je adc sahf cmp fcomps adc sub leave sbb out add pop movsb push inc (bad) cmp xor lock sub cs mov fnsave divl and add imul adc shll popf out ja dec dec xchg das sub mov add lock push jb adc xor xchg fsubl jecxz icebp pop push mov in inc mov movsl push jge xor mov jns lods mov ror decb sub mov je,pt or mov jmp cmp mov sti mov adc pop or dec movsl (bad) cmp push mov xor inc stos mov test (bad) push clc shll cmpsl jnp mov ds das ret pop jno iret add sub inc sahf xor lret mov add pusha cmp loope in xchg je xor repz lret jmp in sub dec cmp mov das cltd mov sub subl mov sti mov xchg mov mov repnz or enter mov out pushf repnz or jno aas movsl jmp cmc sub stos add call (bad) (bad) dec adc mov mov jp push lock rcll adc aaa sti dec dec xor enter rol xor (bad) dec xchg mov pop stos and test pop ret imul sub (bad) daa pop push cltd jle ja in push xlat inc dec negb sbb imul leave add out fnstcw lea pop inc (bad) iret ljmp lret add addb xchg mov daa ret jne (bad) (bad) xchg jns imul lret pop in rep stos cmpsl jle daa icebp jnp xlat repz sub sbb repz xchg iret jmp sub scas adc scas sub pop or iret mov cmc push mov fidivr and out push jl into or (bad) or mov mov cmc sarl (bad) cli fidivrl or jmp mov (bad) xchg push and (bad) mov repz repz stos lock mov sbb cmp pop icebp movsl inc icebp arpl mov lret jp xor out mov inc pop imul or push sub repz int loope or adc repz push inc and sub cwtl lds dec test and inc in jge xchg cmpsb pop dec (bad) int3 xchg xor or ret sub popa xor sti jle orb imul jb mov adc and mov add pop mov dec test mov pop or and jmp jae (bad) add nop hlt xchg and addb inc xchg jmp lock or out gs push push jl jb mov mov lds cmp mov ljmp int3 clc xor shll pop or icebp aad mov cmp or xlat loope mov pop aad jecxz outsb adc call cs mov jno xchg add mov sub mov sub mov out (bad) xlat lret int3 sub or mov dec push out add out fldl2e jecxz je sti sbb or idivb cmpsb das and dec pop jne (bad) lret jbe dec jmp movsb fwait lret adc mov xor test mov sub leave lock repz mov mov add and mov sbb mul pop mov xor dec ljmp mov mov jmp cltd xchg lds xor dec jecxz jg push xchg jb mov jmp jle jmp inc push test fsubrs adc mov jmp stos dec push mov adc dec lock (bad) or pop or int3 sar mov lock sub movsl xor lock pop cltd (bad) repnz mov popa pop and test sti fisttpl jmp (bad) icebp push sub add into test movsb push cmp dec in push in mov cld sub sub repnz (bad) adc sti jecxz ja mov leave insl sbb adc mov sub xor cmc adc pop ljmp sub sbb jmp push stos cld mov in dec xlat mov fcompl lcall icebp test daa jmp pop pop jle gs lahf pop sub xchg fxch ret push stc jmp sub push cmp lock mov and and dec sub je add repz sbb addr16 (bad) mov and jp cmp fwait call jg flds cmp xchg cli xchg stc out ss mov ds (bad) es mov dec mov adc movsl push xchg pop push sbb add jecxz popa ds sbb jbe imul push push and xor test jl (bad) mov sub mov lret bound mov xchg mov sbb mov pop cmpsl push fs pop mov int3 jbe dec add sub xchg je sub imul repnz ljmp xchg inc sub and repnz dec hlt addr16 into or movsl push loop in enter pop lcall push lahf cmp sub sub mov sbb mov or add xor jg xchg mov mov inc fsubrp sub (bad) xor or lret sub aas xor jmp lods je sub and insb (bad) push lret and scas jb jmp repz or pop xor les dec mov scas out adc cmp imul or fdivs paddw imul push daa pop in adc or cmp cmp repnz movsb hlt test mov notl push xor test popa add sub and leave movb leave sahf icebp xlat xchg aad xlat loop pop mov or int3 mov enter jge cmc or clc pop pop xchg out mov (bad) push icebp loop leave cmp lret xor xchg scas and lea in daa add sbb fs xchg lock insl cmp or sahf imul aaa jp loopne loopne jo popf xchg outsb xchg cld pop iret dec repnz sbb jg inc mov mov jb ljmp dec push inc outsb sub mov push js lock mov outsb jo test loop adc das roll ret push push jno test lret push xchg mov dec ljmp and pop push mov cmp negl xchg fsubs mov and daa ja pop test pop clc loope add leave fldt dec repz xor mov sub pop jl idivb popf mov mov icebp mov stos push icebp das out sub scas sbb lods leave mov stc out mov cltd das push mov repnz dec xor rcrl xchg jne add lret xor push lcall dec roll icebp lea sub sub sub xchg out jb dec int3 fsub jle divb sarl xchg xchg (bad) pusha cmp cmp or cmp outsl leave int mov cli sub out pop jl xor xchg xor or xchg cmp mov rorb add leave xchg popa les xchg (bad) xchg movb je test or (bad) push pop (bad) imul lcall cmp jl pop sub mov mov push test and sahf jge or push rcrl popf cmp jne sub bound iret bound ja std lret loope ljmp adc and adc mov cmpsb out jbe or mulb imul mov fbstp sbb and pop fiaddl dec mov mov xlat mov (bad) fnop loope jne int outsb sbb int outsb mov xor cs jo pop movsl push sbb cmc xor dec mov cmpsb fisubrl out jmp cltd mov clc mov mov mull mov mov xchg pushl add xchg sbb mov std ret nop jmp push mov in imul and mov jmp mov sub mov bound xor xchg fs mov lret pop repnz mov shl xchg aam stos popf in loopne negl jb jge xlat cwtl (bad) or ret (bad) shlb push daa pop pop pop jns or lret add or jae jno add adc daa and lahf in daa mov xchg test (bad) cmp cwtl xchg pop pusha pop stc das imul xor or data16 push aas cli fs sub lret dec (bad) std cmp sub fiaddl pop pushf stos call jo (bad) pushf add aaa push xor mov sbb xor pop xor icebp sbb inc cmpsl xor push push xor pop repnz mov xchg mov lret cmp pop leave mov imul popa adc jmp popf add jnp fbstp mov roll ret or inc insb insb (bad) add or scas lret and push roll les jne sti repz xchg lds in sub iret stc fwait mov inc and outsl cwtl add add and adc imulb xor push scas cmpsl inc sti nop mov mov sarb popf push imul adc and test xor fnstcw icebp iret mov mov mov mov sub lahf aam push ja cld jb inc jne js sub jl push nop pop add xchg add jle cmpsl ja stos mov and (bad) dec sub push dec cmp jg out leave push icebp xchg mov jmp xor push mov sbb and sbb cmp pop out mov xchg push scas loop sar fdivrp (bad) and clc out jns inc add out sub sub or lret ljmp cmp add mov jno imul jns mov xchg scas fcompl mov divb adc jmp add jg (bad) notb in sub bound fcomps ljmp push cwtl outsl adc sarl inc icebp or mov xlat sub xor add pop mov ds dec mov shlb mov ds (bad) and pop int js les mov test clc xor pop fisttp push sub daa (bad) hlt into stos bound or cmp or idivb les test jo inc adc andb outsb mov fs xchg into mov dec (bad) cli sub notl mov pop pushf pop xchg fmul dec ljmp das sub insb lret les xor test pop scas sub repz scas cld movsb mov and mov (bad) mov add sub sub ja lret sbb mov in dec and ret (bad) arpl xchg les jecxz dec lods xor sbb loop push push cli pop imull clc insb mov or pusha adc push pushf sub cwtl rcr mov shr pop and decl stos jge inc dec mov test rorb sbb cmp pop (bad) addr16 adcl out sub or and and xchg xchg push call adc and mov cmpsb lds mov loope gs ljmp mov lods repz (bad) imul pop aaa cmp sub aad or pop stc mov je dec aaa dec test ljmp ret adc mov or lock mov jno ret movsl mov pop jg push mov mov mov cmp jo jbe add mov push xlat dec inc cmp sbb sbb lret sub cmp mov mov xor xor lods xchg aaa pop inc ret cmp gs sbb mov or push mov xchg imul sub sub (bad) js or icebp repnz ret into xor mov sub fidivr push pop popa lock mov iret ljmp xor mov or lds mov jbe xchg ret mov sub in outsb push pop jle mov mov repnz rcrb or imulb jno mov popf dec stos sub repz and inc dec xor lret lret rclb stc sub mov xchg test sub (bad) xor adc notl lods cwtl pop out sub cmp dec popa movsl adc sar int3 push mov jno or cmp xchg call and shll and imul inc mov iret push push popf xchg loop mov xor cli lock xchg into pop hlt ret xchg dec rorl sti sub cs repz mov mov xlat mov xlat mov xchg push (bad) xor shlb jg xchg lods jl or test xor sub mov sbb xlat pop add mov mov xchg cmp jbe imul xchg sbb or leave (bad) mov (bad) pop out das stos add sub mov or call data16 mov test add insb icebp xor in out das out inc imul mov lret sub shl or push inc sub push adc push ds rol cmp jge bound add xchg lea dec gs and testb cs sub mov push rcrb mov push daa mov lods mov (bad) lahf mov jmp dec xor xor and and sub sub jmp cwtl push jbe,pt dec into push and dec jbe fiadd or pop js adc mov mov orl mov mov push sub les fisubr pop sbb lcall lds es hlt icebp adc cli repz xchg add add add dec cmp cmp or xor je popf outsb inc cltd sbb imul mov repnz xchg xor or sub dec sbb mov dec adc scas jmp mov cmp push fistp pop shrb icebp out pop mov sub jle inc xor jmp adc xlat test mov adcb add pop mov inc push das sbb jne jns hlt lds repnz lcall adc iret or vmovapd mov sub je inc mov cmp jo add mov cmpsb mov push mov ja sub lahf xchg incl cmp lock adc popa mov ss adc mov mov bound jmp dec (bad) xor lods push cld pop sub fnstcw and sub in icebp mov cmp sbb cmpsl int3 je pop mov es out test mov mov sahf add pop mov lods mov push mov xor adc mov adc lret sahf and push shr mov mov fistp outsl or pop popa cmp fisubl pop mov ljmp adc mov lret cwtl push loope sub aam sub lret leave xor je (bad) adc aaa pop int3 pop push bnd sub adc dec cltd dec out pusha sbb leave xor int3 cmp roll enter nop jbe adc xor decb xchg push lret sub fdivrs cmp icebp lret or (bad) lret sub jbe jecxz dec pop dec nop ret or (bad) insb paddd push (bad) popf adc out sub icebp out mov pop jp mov adc add pusha mov cmpb movsl mov into push push js ret jecxz xchg jmp outsb (bad) outsb ret or incb ret lods mov pop or addr16 stos sub push (bad) testb xchg cltd jnp cmp bound xchg xchg sar jmp scas inc movb cmpsl sbb sarb dec fucomp pop test xlat lcall popa mov loopne xchg fnstsw cld cwtl push sub popf fnstsw es aas je mov jmp sbb into lcall add inc aam push lret cmc repz jmp xchg test adc push lods test mov das ret icebp mov pop scas adc gs inc push int3 mov cmpsb mov (bad) js dec call in nop push scas cli lds sub shrb dec or and andl pop lcall imull fs mov mov sub mov out mov lret mov rcl dec fnstenv cmp pop insb push mov sbb (bad) cwtl pop jle cltd (bad) roll mov enter mov mov sbb das mov adc pop or xor lret mov mov jns push pop repnz xchg xor jne sbb mov out outsl outsl mov push cmp xchg push xchg into icebp mov sub sbb push loop call cmc pushf fbstp outsb sub pop mov and jg loopne (bad) daa xor mov decl stc popf inc sub xchg (bad) (bad) stos leave sbb inc jmp add lds sahf cmc jp adc (bad) push loope pop lret aad xor and pop jnp aas dec fldcw inc and movsb pop xchg (bad) dec pop fistp dec inc xchg add mov jne ljmp xchg jecxz adc adc sahf bound add add sub ss pop pop inc daa fsub sub cmp dec (bad) mov xchg cmp lock cmc and mov fisubr flds mov push or (bad) and mov fisub or icebp imul pop mov repnz mov notb add jp imul push push pop sub mov pslld push sbb sti mov fcomps sub (bad) out out jne sti sub xor sbb aas bound sub push adc (bad) mov mov mov popf xchg inc mov pop pop xor out hlt and fidivl (bad) xor xor (bad) test (bad) push inc mov xchg (bad) push out (bad) push ljmp mov ljmp lods add or jmp xor jne cmp adc jle cld (bad) out inc mov push xchg in jne lret adc es xorb iret sub gs test stos mov dec mov mov mov das gs jecxz dec mov jo xchg outsl scas pop add sub cmp popa shr repnz mov push and (bad) mov pop or (bad) mov mov adc pusha sub outsb mov movsl test mov icebp mov arpl sti cwtl xchg pop adc jo scas mov stos jmp imul xchg shr inc sahf push jmp mov ret cmc or push outsb lret into cmc and mov pop dec aaa mov push fstps jge xchg (bad) or mov and mov outsb jne mov mov faddl pop out loopne iret pop gs and hlt jo jge rcrl add out iret xchg lret push sbb (bad) arpl pop sub or push pop mov lahf (bad) (bad) icebp mov dec aad push icebp outsl je out bound or push sub mov (bad) test jne movsb daa jne test and or cmp pop cwtl scas sub es icebp movsl jae xchg xor pop sub mov sub xor or orl in xor mov (bad) leave or (bad) (bad) out and out jno mov ror cs sub dec pop lret mov xor xchg scas repnz fnstcw push dec lret stos mov dec sub or jno pushf mov fmuls jne scas gs in lods xchg pop mov fbld ja fwait outsl mov adcb shll mov xchg pusha mov pop jmp mov test xchg sub inc jne test mov outsl and and or iret psubw out icebp or (bad) call push xchg (bad) gs scas mov rcrb pop cltd add popf pop cs pop dec (bad) xchg push ret jns imul mov imul mov cltd cwtl lret push push and mov mov shlb jb lret add ret outsl mov das out hlt mov lods xchg jns das fst cs cli jns fs ss shrl or (bad) les lret add xor das test jbe jp dec gs repnz imul pop cmp lods lcall sub lea cmp xchg mov fnstenv xchg cld (bad) ret pushf idiv call or insb and call mov cli xor not in jmp push mov rorl jmp push lock mov mov jle sub (bad) xor push xlat adc jae mov rcrl adc xchg lods aad (bad) lods adc xchg inc jle imul pop das and push xchg jmp int3 mov into (bad) das mov test into cli inc adc mov lds repz ss jmp (bad) imull dec sub inc bound in (bad) mov dec ficom stc mov jne and in or sub gs rorb ja dec (bad) jecxz enter push mov (bad) xchg aaa frstor cmc (bad) cwtl cmpsl jge imul mov cmp adc dec inc adc div push inc mov cmp sub test lods daa adc mov daa aad or out icebp push sub ljmp call mov xlat add out jmp ret fstp das (bad) push jmp (bad) or cwtl cmp lret mov mov in inc repz sub loope fimull cld dec mov sbb sbb lds cwtl push sub mov ret ss jns xchg (bad) xor pusha ds mov mov pusha shlb or cmp jo mov dec (bad) lods pop mov pop call sub cmp pop das gs jae lret add and ja pusha (bad) fldcw sti xchg rcl lcall gs mov pop cmc cmc sub sub ljmp add mov test xor mov pop mov add rcll stc jbe add and xchg lea cli xchg sti loop test clc mov mov dec cmp dec cmp xor mov mov pop (bad) cmp jmp movsb loope aas xor sbb data16 push (bad) ja stos rcrl xchg add sub xor sub dec (bad) das scas fs jb cmp arpl xor cmovle push loope dec jmp sub leave inc xlat adc add (bad) or and mov xor stos or pop int3 iret lahf or gs inc sub test (bad) jae ret xchg push and inc inc mov dec out cld xchg clc sub leave test xchg mov int jg jne (bad) bnd pop cmp mov dec fistpll fisttp lds mov leave push rcll ror fs add pop int3 sub repz push imul das div xor imull fdivs mov adc out push (bad) mov scas lret leave (bad) xor daa mov and sarl dec sub out inc add mov mov (bad) test mov add xchg into xchg jnp aas and leave xchg pop xchg dec clc stos xor cmp stc popf jb fwait inc and cmpsb pop and jmp stc mov lret xchg daa and xlat mov aam push jo loope sub adc pop divl pop sub or enter cltd cld adc xor sub pop (bad) or sub inc add jg cwtl dec (bad) pop or lret or push fisubr pusha and add xchg push outsl dec (bad) mov jae test prefetch inc cmp aaa jns lret mov xchg and imul (bad) aaa and pop sbb bound repnz push mov mov xlat test mov or add sub inc push out (bad) sahf add inc lret popa cs pop cltd inc sbb push scas lods dec xchg sub lret push shll test xchg jg int xor sub jle push jl emms push and pop pop lds test jns xlat nop test icebp xchg divl stos mov adc mov repz and sub imul or mov mov in fs jmp js xor and rol pop ficomp out jmp aas daa repnz leave adc or (bad) pop out inc int3 inc xor sub add pop push adc stc or stos es rorl repz (bad) push daa push jae leave (bad) or cmp xchg lret loope xchg shrb lock pop sarb dec sarl or push aas (bad) cmp mov iret mov (bad) xor shlb pop xor mov xor xor or stos jge mov jne dec dec outsb xchg dec jmp sub mov repz leave or (bad) jbe pop cli sub repnz xchg push xchg aas or and sar sbb mov movsl jge xorl push or int3 jae loope jle xchg xlat les jno add leave jmp dec ja scas repz das cwtl sbb cmp mov loope cmp aaa xchg das dec mov lea mov or and sub icebp bnd dec dec (bad) rcrl jo pop dec dec clc dec sub ret push sbb mov lret fsubr (bad) sub lret add add jb xchg call iret loop xchg push xchg iret mov push sub int3 movb (bad) mov mov push adc in pop pop sbb xchg jnp cmp or and fnstcw or cmpsl js sbb stos bound (bad) push rolb dec icebp scas mov std dec test ljmp xor xchg insb fstl jecxz repnz push or dec imul stc adc mov mov aam rol sti xor jg pop in xorb roll push or lret mov ds ljmp int3 cmp ljmp lahf popa sbb sub and lods imul xchg sarl aam jmp mov in jmp out mov dec repz (bad) aas sti mov js ret lret pop inc das add loop mov repnz (bad) lock ret add mov push fs mov pushf push or lret andb or scas jmp popf push xchg adc mov mov sub pushf ja outsb pop iret call sbb sub dec dec pop popa icebp or jge sbb out and mov fcoml (bad) enter pop xor sbb xor xchg fdivr lret cwtl int fisttp sbb out mov push mov adc dec ret repnz shr sub cltd roll and fadds push shr mov fnstcw push aam (bad) and scas fnsave jge inc xchg flds (bad) sub xor (bad) push bound leave pop inc adc icebp sub cmp sti in mov das int3 xor mov cmp mov ja in or decb aad adc out loop sbb inc movsl stc mov icebp mov and imul mov popf out adc pusha mov or xchg repz sbb mov sub jne jecxz dec ds xchg repz sub out mov pop xchg lret ljmp add jle adc leave cmp mov push jo push jne call ret mov dec lret push out xchg inc sub fwait mov repz pop sbb int lods ljmp add mov xchg aad cmp out or xor imul sub movsb imul or sub daa or push shll es pop dec cltd bound push pop sub dec fist out lret add mov test test cltd cmpsl movsl adc or in mov sbb mov xlat pop sbb xchg (bad) repnz add push xor int3 ljmp mov fwait xchg or aaa mov adc pop je push (bad) ds dec xchg scas cmpsb loopne adc push lods jp sub and and push adc loopne inc dec flds repnz dec add dec (bad) mov mov inc out dec and mov nop enter jb adc pop out pop ljmp add mov bound xchg mov icebp push dec inc daa ficoml out popf xchg shll xor push jno dec pop fwait mov sub jl sar or jne or xor rcll mov fs or outsb xor xor mov das repnz push push das push xchg add int aas test mov pop xchg outsb dec rol popa and stos jp sub cld or jnp cmp and (bad) sub cltd scas dec pop adc rorl ss iret (bad) popa inc mov pop inc dec stos sub (bad) pop cmp pop out test repnz push push daa repz mov jecxz divl inc and inc mov pop repz mov or sub cld cmp dec out sbbl and xchg movl int leave and pop jbe sub xor sbb push sti mov ljmp fwait and xor sub ret xchg cs ror inc out sub or aas stc mov (bad) es icebp push pop jmp jmp jmp cmpsb sar cli mov push daa das inc in imul push jp pop pop xchg pop jmp sub dec jle ja loopne sub or negl outsl add mov jge or pop repz lods icebp in lret (bad) mov (bad) fstp test mov ljmp add pop aam push push lcall es pop dec dec xchg or jno mov or sub xchg daa lods (bad) mov sarb movsl adc mov enter repz jmp aaa cwtl movsl test mov ja add gs mov dec mov lret idivb gs lret shl inc repz in adc mov lds sub sub push fucomp cmp (bad) pop lret cld pop xor mov dec mov cmpsl xor jmp or add cmp test pop mov adc out out mov (bad) mov (bad) int3 add mov sbb sti mov or fscale xor imul add (bad) cwtl mov inc repnz imul lret sti pop scas ss lret lret clc inc ja adc and cmp mov mov stc push (bad) outsl ljmp aaa push sub (bad) mov mov mov lea or into dec in jp xor mov xchg and sub add fstpt inc xchg fstl push pop hlt xchg sub or mov das decl gs xchg ret addr16 jecxz pop test scas lods pop xchg sub mov idivl test jnp and adc out push dec icebp pusha add stos lret or das pop daa adc mov lret xchg mov push (bad) inc sub (bad) enter es push addr16 xchg mov xor shr rorl and mov sub mov dec lret out sub or xchg out jg mov out mov gs call (bad) fsts iret cmp jmp cmp popa sub sbb arpl mov jne and xor add cmp dec mov mov or sbb shrl jo stc sar sub mov and lret lahf adc ljmp pop push loop jne hlt popf inc sbb (bad) test ficoml or int3 clc xchg xor push leave jle stos adc mov cwtl cmp pop xor mov int xor or jecxz pop in mov mov mov inc mov bound mov cs sub out sbb int3 xor xchg add xor push cli mov imulb hlt inc jo sbb out dec fs sbbb xchg xlat jo xchg (bad) repnz mov icebp das mov sub pop pop or xchg pop repnz pusha dec notl push cmp adc iret dec mov xchg dec shr xchg jo pop loope loop repnz mov or (bad) ja and and out xchg stc aaa in out (bad) out notb cmp mov mov outsl aaa mov sbb jge lods mov aad repz sub out imul jle gs es sub mov movsb test mov push pop cmp mov (bad) jl push xor lcall jmp jne into mov jge repz out sub xchg (bad) jno mov hlt test or mov (bad) scas movsl mov dec add jge pop mov sbb aam cli mov mov lds mov fsubr ja jmp sbb ror popf cld pop pop dec js or add mov cmpb pushl jne jle leave jno or idiv push rcr xchg lcall mov lds (bad) imulb jecxz scas out loop (bad) xchg sub pushf mov std dec xchg stos mov std outsb adc fdivrp popa sarb and mov pop jge cmp fmull aaa sahf adc adc pusha pop fdiv daa sarl add rclb mov and clc cltd nop xorb loop mov in stc add mov xchg mov test ljmp scas notb repz add inc pusha xor ds imul test xchg inc aas push push in dec loope imul mov sbb rcrb jmp (bad) and andb pusha and mov add adc dec fist outsb sub stc lret lret jb icebp mov mov xor out fstps mov and pop icebp adc ret jbe in aas notb adc adc xchg fdivrs enter lret pusha push cmc xchg test outsb test test xchg sub add jnp lahf sub int3 das lcall repz lods jno lcall lcall sub sub fdiv jb hlt or lahf out mov sub and (bad) mov or std ja shr xchg sti arpl sbb call jg add and push leave push ret mov pop xchg push mov push sbb (bad) cmp repnz cli (bad) lret jns lods in mov sbb mov cmp not sbb pop addl mov pop jmp or xor adc xor sti mov sub jns daa jno lret jno add (bad) rcl das negb imul lods adc (bad) ds or sbb lcall in (bad) mov cltd stos imul movsb pop daa not enter add test inc dec fsubs bound movsb push jns xchg jmp repnz fsts cmpsl jbe (bad) pop xor jmp or mov jne in push xchg adc sarl adc pop mov dec jmp xlat test dec adc lret fstl fldt fcoms or adc xor das push arpl cltd xchg aaa cmp stos jne mov pop stos and adc int xchg out iret in sub sbb ss call bound repz xchg dec lcall or adc scas test mov into pop lret (bad) and daa out inc adc sub dec bound rorl and into repz lcall sub mov adc sarb (bad) cli lret push (bad) inc mov fs mov ret rclb lret cli push push mov jmp (bad) mov cwtl xchg inc test call mov jecxz pop mov add xor cmp add dec sbb or mov setbe movsl icebp mov rolb into mov mov sub mov imul push push adc or popf push popf and sub sub mov enter cmpsb cmp sti jne in inc xlat addr16 jne lahf jmp rcrb push repnz les xor adc clc scas fxam cmp (bad) add ret (bad) (bad) push xlat fildl mov inc (bad) pusha into sub xor jmp inc (bad) sbb add inc push aaa pop dec fisub out pushl jno dec fimul (bad) xor ja fist fsubrl sub cld and or or rol and movsl (bad) cwtl pushf ljmp sti loop pop xor dec xor cltd div repz add cli and iret push xchg in sub mov mov loop or sub xor or xor cmc in adc cmpsl and pop dec or fiaddl popf cmpsl push sti dec popa inc mov push or mov bound fcmovnbe xor lods lods mov fsubrp repnz push sub mov cwtl cs pop push pop pop bound pop add push mov mov enter fadds stos dec add insb mov cmpsl into rcll cmpsb dec dec fistpl iret clc add cmp (bad) add mov sub push xor lods mov dec pop pop dec insb mov lods (bad) cmp add xlat scas popf xlat imul mov add dec mov std imul idiv mov lods rorl sub cs nop mov clc divl mov mov pushl call lds or xor push sub push pop push outsb scas sub fxch mov inc bound into test cmpsb into sub loop mov stos aam inc and call insl or bound adc (bad) mov fsubrl inc inc inc xor je pop inc push sub pop dec call ret idiv cld xchg xor sbb sbb (bad) fwait sub sarl dec pop cmpsl pop sbb aad mov (bad) daa popa (bad) xlat mov out dec fisubr daa cld mov inc mov mov mov or xchg fbstp ja ficompl push (bad) pop lock ret (bad) sarb divb sub aaa adc cmp mov std sub stc (bad) dec add movzbl out jecxz lds stc xor sub add popf dec xchg pop shll rorl cli jb rcll pop ljmp lods das jmp ficoml add test jmp push or mov mov push shrb sbb dec mov xchg mov dec test dec scas lret mov repnz (bad) mov push fstpt cmpsl loope add sub and lods movsl (bad) mov outsb jbe dec mov popf cmpb jnp gs test cld and sub loop pop rcr lahf mov and mov scas mov and dec icebp test sub ljmp cmp out add xchg (bad) mov mov pop imul and mov insb jl (bad) dec dec fstl sbb push push movsb pop pop ret jno fs stos int3 fcompl daa xor or stos add add add mov sub sub ljmp ds adc push aad repnz out sub pop mov xchg mov add sub pop jns inc and icebp movsb lahf out shr scas loop (bad) sarl push mov test dec add test loop test add jb es pusha int3 xor jge xchg scas sub adc sub std jo stos adc jno sub js les clc mov jge mov and jmp push mov push inc test pop movsb (bad) stc sub mov mov sub or cmp sub add mov xchg or out jl and cmp xor mov das mov (bad) xlat out pop loopne xor fisttpll scas jnp adc scas mov and mov or push add gs xchg idivl hlt shrl adc cwtl sbb push je leave add cmp insb and dec pop test add movsl je les mov repnz jno add add idiv jmp push lods (bad) shr mull leave pop adc push and mov xchg enter mov cmp es push cmc or iret mov inc xchg mov jge js sub ja push mov fisubrl mov (bad) cld (bad) mov xor popf sub xchg and push lret ret rcr jbe dec mov and js daa inc outsl leave popa inc bound fild movsl aad adc les shrb pop mov pop xor xor (bad) scas movsb inc jmp (bad) aad iret sahf cmp movsb mov jecxz dec mov push popa xchg jmp loope dec enter xchg jmp fs pop xor xor ds sub push add testb test xchg and and (bad) jmp or stc jae adc decb mov loopne notl adc ss out imul adc add add jmp xchg mov imul push or ret xor push test inc push movsl call ret push (bad) flds sub clc bound pop rep mov loop in es rcl push push (bad) sub or pop out iret lods cmp imul inc push cmp mov les sbb mov add testl pop pop xchg lock lcall inc mov mov dec lods insb xchg stos ret pop in test add out popa push xor pusha cmp xlat inc mov popf lret std mov mov adc iret jne lret (bad) add lcall lods xor repz fildl mov das aaa sub je (bad) out or sbb ljmp stc mov js xor paddw aad xchg stc sbb ficompl stos xor add dec mov pop lods push movsb xchg mov (bad) add ret imul call adc xchg or cmp and sub inc call and bound pop and mov (bad) add adc bsr test xor imulb call out mov mov (bad) (bad) cmp in out cld fidivrl sti sub adc es mov rolb or data16 push mov mov icebp jns (bad) (bad) outsb icebp jb stc inc movsl mov jge mov sbb or inc jecxz lret and dec call mov js pop sub push (bad) in out bound xlat andl mov (bad) jbe lds xor or jl xlat loop pop std and out mov lea and test cmp mov push lahf popf ja aaa (bad) jbe adc (bad) or ret jg mov adc mov pop jl jno sub insl mov xchg adc xchg and cmp lret xor mov push lds je out adc sub and sub mov xchg aam push ret add sub icebp and sub cmc and add or pop push mov or cs popa push and stos push or in dec or push roll mov fsubrs and idivl or push cmp sub cmc dec mov add and frstor jge pop aam jp cmp and or pop mov ret faddl lret ljmp cmp lods adc sub jns imul je ljmp mov stos notl jmp les mov js mov jne in arpl stc ljmp push push pop das xchg push mov or sahf test lock or pushl sbb xor shrl je sti fcomps or cvttps2pi sub mov push pushf scas lret dec in pop hlt push jb lcall cmpsb popf mov jp lods in xor outsl sub push lahf xchg stos xor inc sbb xor xchg sub int and jg sbb sub dec pushl jb inc push mov sub push add cmp adc idiv jb iret jbe push dec sarb sub jmp jns xor shrl xor and cmp jmp and xor imul or cmc call idiv dec fnsave push mov push xor lea xor or mov xchg iret mov pop cltd pop or pop out xchg loop adc sti (bad) add out sti lret fisttp xor out push stc sub icebp xor aam inc decb pop out mov (bad) pop pop cmp or (bad) aam bound or jbe loop,pt rclb popf (bad) fld outsb movsl lods add mov (bad) sbb xchg or pop pushl jmp sub imul add or stos mov xor outsb dec cmp mov jge cli or stos push adc push or mov lods sub adc mov je mov cmpsb sbb push sub mov push clc cmpl dec xchg and rclb and cmovs iret xchg jmp lahf xchg push xchg jne fmuls xchg or jg lcall mov movsb push jno sbb es jl loopne and mov test cli push jle mov movsl outsb xor sub cmp push add dec jbe push mov pop je movsb jp out or xchg leave leave xlat (bad) pop aam mov rcl and (bad) add (bad) movl in jbe sti pop (bad) leave inc dec mov iret xchg mov mov mov or out popa fs es or fidivr (bad) hlt pusha lds mov xchg lods movsl mov push stos jmp fcmovne jns into sbb mov xlat sahf mov pop jb (bad) jge pushf push dec jns popf aad cmp inc es jp and xor mov add std out xchg pop pop mov adc mov outsb aad pop test mov test dec ret or jmp mov dec scas lret mov paddw pop xchg pop mov (bad) pop mov movsb pop (bad) sti fcoms test sub inc call cmp dec popa xor and int3 mov mov int sub outsb lods scas ret sub fsubrl fucomip sbb push icebp adc sub hlt shll dec xchg fimul ss pop mov sbb scas fnsave cmp inc sbb cmp jmp jno test mov fisttp or icebp mov je rcr mov mov repz fild mov ds pushf enter pop cmc jmp fstl cmp adc mov out fimul fisttp xchg xlat mov add xor jl dec (bad) stos xor mov xchg jecxz cmp and sub (bad) ds loop xlat (bad) mov mov mov mov in mov leave sub addr16 jl pop dec xor and stos cltd mov clc xor inc lea lret data16 sub pop shrb pop cmp jno ret adc mov mov icebp mov ret adc or ljmp add jge push lock xchg roll pop jae xchg iret mov sub imull dec mov les icebp test addl rcrb fld mov fucomip fstps jle fadds sub cmp sub test sarl mov mov xor mov xor call les fpatan push sub mov out cmp push pop ffreep pop gs out cs jb add add pop cmp jmp loop subl pop imul mov xor sub pop aad outsb aam cli clc add (bad) int3 stos dec imul test ljmp stos mov daa xchg inc jg inc dec add hlt or (bad) mov repz and das mov push xchg inc mov (bad) (bad) test or jne mov mov movsl adc arpl mov lret add xor pop pop jg das test outsb test push add and imulb popf stos mov sbbb mov or cmpsb icebp push lret ljmp or rclb add (bad) push jg inc xchg mov push push shrb jmp xor push and inc mov xor clc shl clc ret int3 adc sbb xor add fs divl ret mov jno inc movl jno xchg shr jbe out dec mov dec mov ret daa or ja inc jmp scas cmp xor mov lock sub mov pop lds mov stos jge and mov xchg popf test or repnz push jl or mov mov adc test mov out adc dec out mov jmp ret jge ds mov dec pusha and sub and test lcall insl test xchg stos les scas adc into mov shr lock xchg xchg mov inc xchg xor pop or pop sub vrcpss cmp fsincos cwtl test mov xor xor jg push out add dec icebp insb movsl les fs (bad) loop dec push inc fisttp clc pop ljmp mov setg outsl adc and loope or rorl mov and add idiv adc fsub push pop xchg sar outsl pushl dec adc jbe (bad) jno,pt xor jno cmp fucomip ret int3 (bad) and adc jne xchg jecxz leave push imul xchg push xchg inc movsb cmp fildll (bad) jg sti push (bad) pop mov add mov pushf jae movsb std (bad) mov ss popa lock or and test mov mov ret xor (bad) xor repnz test xlat pusha mov bound (bad) xchg (bad) inc ret adc xor cmc jle,pt scas lock data16 jle add or mov mov jecxz sub (bad) and (bad) negl pop cmp cmp (bad) inc repz fadds push push dec sub cmp popa inc imul ret pop sub scas (bad) bnd test push push in jge pop stc push dec std out dec pop (bad) fisttpll inc adc repz testb fmul jp push pop pushl leave sbb out dec movsb dec adc mov add lret popf rclb pushf imul mov aam add jge and pop mov jg fs sbb cmp cld jo lahf xchg enter leave into jg shrl shrl fs (bad) jo loope cwtl iret sub ret and add std fnstsw pop (bad) mov jmp popf and xor push mov sbb (bad) pop mov std xchg jno pop cwtl xchg in push sub lret bound testl push cltd (bad) (bad) into ja scas sub and out ja mov pop das push nop add fidivrl out mov pop repz (bad) jo fisubrl push repz daa fsubrs sub stc test mov jne pushf push mov inc test gs scas adc cld push mov cwtl adc cmpsl lds daa and cli imul cmp mov outsl bound dec cmp adc ds mov mov shr mov ljmp jg idivl mov lea dec sar repz sub adc cmc out std sub and mov les mov pop cld lock cltd mov pop (bad) in je ret fimul push xor xchg add add jbe push iret ja and adc pop shll fxch cmpsl fldl pop in lods popa sub test xchg mov adc stc xor mov and aas xor mov mov xchg mov cmp (bad) mov mov jg adc or pop repz jnp adc mov lods inc les xchg loopne (bad) mov daa (bad) icebp daa ficoml das dec subl jo pop (bad) lret xor pop pop sti cmp cmp pop and jg sbb int3 cmpsb mov pop (bad) sti (bad) jns xchg sti push repz stos int scas aad insb push adc fsubs cmp imul (bad) mov fldl xor jge xchg cmp dec sub or cs cmp jne movsb js mov xor in fmul (bad) das rdpmc sbb hlt lcall add sbb (bad) xor das lea (bad) cld ja cmp gs push aas cs lea xchg in xor push shll idiv inc ret jne sub testl sub vmovapd inc xchg sbb jne push mov dec mov mov mov out gs sub aaa enter pusha and sub out xchg daa repnz push push into sub rcrb test pop cld add je mov sub jne jg adc push adc xor test inc sahf sub sbb addb mov lds (bad) in imul sbb pusha sub xor pop nop push push mov xor cld daa test sar movsb adc sub xor test pop add fisubr ja sub repnz push pushf rolb and or (bad) jo in mov mov (bad) xor insb xchg sbb rorl icebp xor jge pop xchg sbb aas call and or in in mov push push ret cmp test mov dec sbb vmovsd adc add stos (bad) int3 cmp and ret cmp jp pop or rcrb sbb xor mov fsubrl mov dec and into inc push xor add shll leave insb add mov jnp orl fmull lock or or std lea rcrl ret repnz imul pop xor mov mov int mov clc cmp in xor mov adc cli sarb insl or xor sub cli mov xorb js and sahf sub add xor adc int3 xchg pop lahf push mov mov push ss sub out lods addr16 xor and mov orb mov push mov mov call jp jbe (bad) mov ja addr16 cmpsb cmpsb push add mov dec xor ret pop xchg flds outsb sbb xor int3 lock stos fcomp ljmp jmp adc push inc or mov rcll loop adc or or (bad) mov inc xchg test pop clc and scas push pop adc add pop sub adc leave sub pop mov sub sub push xchg test subl sti xor call push mov dec and shrb mov lea subl xchg ss push fcomps (bad) div and jmp fucom mov push mov xchg (bad) lret jne cs data16 inc or add enter pushf mov pop mov dec mov out pop cli pop ret out mov into add popf lock or cmp or mov and es mov (bad) and pop or lock fsubr aad push daa les fmul xchg inc inc lods xor pop push cwtl jmp sub lahf xor repz and ret (bad) leave inc cld lds sbb inc xchg jnp dec push jne icebp ljmp mov jmp popf adc sub stos xor and xor inc jp and repnz jmp insl push cmp movsl lds (bad) sarb repnz fimul push pop cld add (bad) jecxz dec ss cmpsl xchg mov add int ds or enter (bad) jp or or lret outsb mov mov inc push imul fist cwtl orl xor pop sub loop (bad) adc lods and sub das in dec scas add in scas pop mov fdivl pop pop out das jmp cmp sbb fcomps push jle movsl cmc int3 ret mov and ljmp in xchg ljmp inc dec mov pop and fildll out int3 loop (bad) inc mov hlt scas das inc and sub jb call ret jmp push push test shlb dec inc push mov jnp mov stos fs or xchg xorb (bad) cmp inc jno sub dec cmc and pop sub push lcall sub lock test jo lock sub ret fdivs clc je or fist lret (bad) repz push xchg add (bad) xchg idiv dec sbb cmp or sub loop add jbe gs call (bad) xchg fmulp leave ja push xchg cmp imul xor mov push push push or lahf cmp dec adc fsubrs pop psadbw add push lret mov outsb (bad) call nop push pushf ret lret ja insb mov cmpsl loope leave cmpsl sub pop test inc xchg and mov push mov add cmp loop shrb xchg mov mov jb rorb lds cmp out mov fildl and add ljmp jl loop cmp inc push pop hlt hlt loop call mov push fnstsw and or xchg loop call cwtl adc mov push adc cmp xlat push lret out push adc adc or idivb jbe (bad) dec mov add mov inc into fist out cltd push sbb cmp xchg mov mov repz dec into notb lret stos iret sbb out xchg push mov push das and push mov aam mov ret mov je (bad) xor xchg push cmp loop call adc jns sub ss xchg imul cli repnz mov cmp add out pushf dec pop pop cwtl jb mov sub mov inc (bad) movsb je jg ds mov loope adc das sub mov pop (bad) adc (bad) dec xchg lret dec dec ljmp inc and jecxz popa mov shrl das ret jns dec xchg xchg adc fisttp dec clc scas fisttpll (bad) adc jne ret pop (bad) jbe fnop leave jae daa pop xchg out mov xchg xchg iret mov mov push pushf lock mov mov or (bad) cld repz sti dec int3 or and pop out xchg push jae in and and pushf cmp (bad) mov imulb movsl lods cpuid (bad) ljmp push arpl (bad) or dec jl roll pop je lret sub cmp xor pop shlb es leave mov mov leave cmc push dec ja shlb jmp push (bad) (bad) xor ret lods out mov mov cs xchg addr16 sub out lahf movb pop or xor jae inc loop (bad) sbb in xchg ja xor mov lcall pop outsb icebp jle movsb mov idivb mov mov incl jl mov cld jle add push inc out xchg cmpsb pop adc (bad) mov scas sub jne test hlt lcall hlt lds jle (bad) (bad) mov jl das jnp and (bad) leave (bad) sub cmc push sbb or stos adc ret mov js cmp dec (bad) repz and sub xlat fnstcw leave std out inc popf std pushf lods mov popf sub xor fwait test icebp ss repz sbb aas push popa stos sub mov pushf out ret dec (bad) mov fimull pop js push popf jns imul jl fs or jge sbb fdiv rcll leave aam in shlb rolb and mov inc enter dec rcrb (bad) in jle rorl lret test fs dec adc (bad) bound ret dec clc mov pop lock pop ret inc aad mov and push dec leave (bad) xor aaa (bad) xchg icebp adc (bad) ja add dec add push call daa dec lods loopne xlat pop sarl lock mov lods adc pusha xor stos dec cs xor mov bound sbb jl adc call pop (bad) mov inc pushf pop and shlb movsl mov cli shrb xchg mov jo out push cmp cmp mov cmp sar xor add xchg push mov adc ljmp mov push dec xchg mov (bad) push pop in lods loop lcall adcb xor movaps arpl ret call xor lock dec sbb std bound and push dec xchg gs xor das inc lds inc xchg fcoml cwtl jle mov mov ljmp cli sub jmp or and or mov mov add call jge jns xchg adc fldcw int3 pop or or daa fistpl sub pop adc dec out (bad) stos movsl inc scas dec push and push cmp sarb mov insb movsl jle inc dec and in push mov or imul stos dec pop mov xchg out or mov xchg aaa or test addr16 mov adc add xchg shll and test mov mov test cmpsl stos pop sbb mov or add xchg lret (bad) jmp fsts mov pop scas cmp dec mov pop in lret mov jl jmp fptan rcl push push mov repz sub mov push cli fnsave mov daa add mov jns pop xchg inc push inc xor or fldenv or ds clc out xchg sub mov mov mov jne adc fbstp sbb fs das fs adc mov sub mov pop cld adc jne das je adc fnstenv (bad) es adc ret sarl (bad) add push iret ret movsl call mov dec mov stos out pop scas movsb test in and push ja mov jnp xchg mov sbb mov push xor add (bad) sub fcoms ds arpl decl std adc sub cmp xchg rclb and icebp stos xor or test jmp jge repnz cmp pop cmp dec divb jae gs bnd dec ret jo lock and inc add mov daa pop and jmp sub divb cmp cmp or add test mov or call inc out push (bad) sub stos inc push pop dec mov push mov mov jg cli cmpsl fbld jbe sub pop dec add mov mov loop sbb sbb jbe enter shr inc sub lods sub push cli (bad) outsb icebp sub dec hlt mov push sub scas call mov cmp in pop out mov mov mov mov gs cli int3 (bad) (bad) mov push push mov iret mov cmp daa cli fwait je xchg jle pop ficompl fmuls movsl pop jmp lret mov cld jb xor sub jno popf popa fimul insb dec inc mov or pushl xchg gs sbb push das stos jne in cmp adc (bad) (bad) sti jecxz test mov xchg fsts xor dec adc xchg stos mov push fiadd xchg jmp out pop divb mov push push xchg add xor xor repz sarl xchg lahf add inc xchg mov mov mov (bad) mov orl mov push xlat and or push or xor mov pusha repnz or xchg jg loopne inc fsubs arpl (bad) sub sub iret add shrb adc stc push xor test pop int movsb adc jmp ret xchg es sub mov arpl popf lcall add (bad) out jne pop mov idivb cmpsb daa ffreep sub mov mov shrb dec cli cmp aas or out fs push daa mov add ljmp insb stos xchg xlat cmp test notl adc add iret jge mov add in jecxz sub iret sub mov or xor mov in push in mov das push stos popa sub sub stc or xor je std xor fstps in push call dec imul repnz fiaddl cmp push jl pusha mov xor in xchg icebp lret mov mov dec inc mov sti or mov stos fs mov mov mov and pop call inc jb in in call data16 js xlat pop iret (bad) push dec scas sub popf xchg in xor (bad) sub push das dec adcb popa daa push mov add testb sub pushf ja lret and pop and mov lock sub stc das idivb mov xor ret sti sub arpl ret jnp mov into fild dec pop adc adc fmul (bad) (bad) push imul push out mov int3 aam into adc add repnz or dec cmp push cmp push sub sub std stc xor sbb cmp ret sub mov add push mov sti xchg mov sahf sbb adc daa inc shrl test ret fs and clc (bad) mov pop mov cld mov pop out xor add xor out fsubs sbb xlat or jmp rcrl lret gs (bad) sub fistpll xchg out repnz sbbb and aas test rolb outsb or or add pop incl sub aaa pop out xor popf aad mov sahf dec aad jno push sbb lret pop jns outsb enter adc xor (bad) sub in jge and (bad) dec add scas fcomps sahf lea jmp sub ljmp xchg ljmp push mov (bad) pop lods jmp cmp faddl cmpsl sarb or test jle mov loop inc inc sub mov lods xchg cmpsl aam jb lahf push mov add and mov pop call push mov in mov push sub cmp movsb mov jns push sbb mov scas (bad) mov dec outsb jmp rorb push inc cwtl leave mov scas in lods adc inc lret sub (bad) pop jbe xchg jge mov outsb jmp xor loope pushf out pop sbb pushf xchg shrl inc fld mov push inc mov mov test ds jge mov loop neg dec in in sbbb mov mov ja decl out fist xchg andb rorl cmpsb add pop ljmp mov dec xor sbb jmp into mov sub mov xchg repz or pop xchg in and pop lock (bad) out cmpsl xor sub jmp adc scas mov loopne mov sub (bad) mov jb mov (bad) mov mov sub sub pop and pop mov sarl mov orl negl dec dec out jg js (bad) mov and push jecxz lods mov and imul (bad) jb xor hlt insb imul sbb repnz xor push fcomi cmp xchg iret pop outsl (bad) push lahf and bound bswap lret sbb out das repz cmp nop out mov shrb and into push pop stos daa aad notl cmpsl nop arpl stos lcall out cs mov fs rorb pop leave push pop mov add pusha movsb mov adc push leave enter dec xor arpl xchg ret fcoms dec pop das sub or cmp in inc mov into fcompl xchg outsl cmp and xchg cmp pop lret cmpsl ljmp adc cld mul scas mov cmp jo dec push lret cmpsl pop push add ret xchg xor in icebp loope sub sub add (bad) xor sti bound mov lret push mov add dec sub adc std adc mov testl loope jecxz imul sub sub js loope (bad) pop xchg mov cmp sub (bad) popf movsl push dec les mov xor ljmp in xor ja mov adc adc aad ret lret or mov dec mov aad xor push hlt stos test decb in or mov out pop push inc sub loop xlat scas pop push stos inc mov pop inc mov mov jb add xorl pop mov outsl mov xchg inc push rcl stos push mov test cmp jle and pop cmp or and ja jg into mov leave out push jg loope lds pop inc add mov mov xchg stc or xchg sbb (bad) jp clc mov sbb insb push pop icebp push repnz jbe (bad) imul into mov mov jmp push jmp (bad) pop and jge imul fmuls ret jno jp inc rcrl fidivr pop mov subb dec jp lods mov jno pop lods in scas outsb pop shrl out sub or pop or and push inc push mov fsubp cmpsl std cmpl addl jbe arpl adc call cmp jg std outsl and fistpll or or push push sbb xchg jno in out sub lret mov jecxz sub cwtl or sub cmp fcomps pop std dec je (bad) shll fisttpll loop inc sub mov add clc popa mov xchg push lds test scas cwtl gs cwtl das and sub insb jle mov icebp or imul sub repnz dec adc pop pop je push push mov je ljmp das in sbb repz or ret dec jmp xchg xor mov jmp adc and sub popf pop jne out mov cli or scas out leave add or ret data16 outsl mov or cld fnsave out cli loop fildll fnstsw dec xor adc ret sahf push (bad) int cmp (bad) cmp movsl xor mov stos mov test pop xlat mov imull bound movaps sbb pop divb and loope loop notb pop xor out cltd pushf inc in notb ja sub jle js mov sarb mov sub icebp icebp imul sub shrl es cmp popa inc push xchg cmp repnz push jno inc mov pop or outsb mov push or sub test movsl pop xor xor sbb cmpsl loope mov (bad) mulb xor lret stos sub and insb imul dec rorb pop xchg aad out subl xor lret fwait movsl jnp add mov xchg jns dec jb inc cmp add dec out sub jg mov repnz test mov scas aam ljmp nop or scas jne mov cmpsl push pop pushl lods sbb call test and mov and out cmp cmpsl or cmp addr16 add push leave aaa aad inc xchg cltd pop or add pop inc fsubl push xchg push sti fldenv pop (bad) imul popa push adc das add in repnz jmp mov or sub dec loop push insb icebp add or sub push pusha daa or outsl std psrld addr16 clc dec rcll inc scas xor cld shlb lret add cmc inc mov (bad) xor daa data16 iret pmaxub (bad) leave loop rcll mov imul enter add test pop sbb lds repnz pop jle push pop fimul out mov or adc xor sub sub pop mov lds movsl loope imulb ljmp lret pop mov ljmp sub mov mov xor ret dec dec ret mov mov or test sar jno and (bad) or mov xor repz add add add jmp je push sub mov (bad) dec jns imul in sub lods add mov scas sub ljmp jl aad nop je push ret rorl aam sub lret fcompl jne jle data16 and fildl aad add pop mov (bad) sub dec aaa or sti aad sub test xchg xchg out push mov jmp xchg leave lahf sbb or cmpsl pop xchg mulb xor sbb mov sbb jmp pop int ret mov gs xchg call mov (bad) cs add das push xlat clc out mov jge roll sub mov js ss aam jno sub cmp ret sbb xchg and cmc inc daa inc jb xor popa jg mov xchg call lret std dec repnz dec mov mov lock xchg mov add jo loope jg (bad) or or cmp js,pn mov and jle daa mov ja push inc add insb test idivl sub or adc (bad) jge inc mov outsb mov sub mov sub lahf gs pop clc and cmp mov divl sub imul add mov xchg leave (bad) movsl loope fnstenv cmp and daa mov xlat out mov dec adc icebp add imul or mov push jb sbb or inc mov pop fnstcw sub rcll out mov add (bad) push push lds lods repnz push sub pop jns dec data16 push xchg notl jno data16 es add out or jae loope mov inc arpl cmpsl or (bad) test inc push lock insb cmp (bad) cmp icebp fld xchg (bad) cmpl adc repnz lods fnstenv aas mov das ds std add popf rcrb dec pushf stos sub jg or xor mov jo adc or sub mov lock push pusha dec sti ret push sbb and xchg ss (bad) jp (bad) mov data16 add lret sbbl loopne (bad) cmp inc loop call push dec repnz pop jae xor pop leave movsl adc dec rorb jb mov add in mov mov sarl and jne mov (bad) loopne test das mov out mov dec js cld mov xchg test int3 bound xorps rcrl ljmp adc cmp sub add push and (bad) scas cwtl lods xor jle xor popa call sub and sti jne push sti out mov movl sub mov jmp xor cmpsb xor cmc lds negb inc into jecxz dec cli lret mov test ud2 or sub repz jo or dec jl xchg mov dec les (bad) (bad) push jns outsl xchg scas repnz test mov push sbb pop sub mov out mov sub jecxz mov xchg pop jmp mov (bad) out sbb jno rcr xor test or rcrb fldl or add movsl or lds sub lods jo stc xchg pop sbb icebp add lock outsb xor fstpt push cmp divb add adc lret mov xchg enter lock divb int3 loope jmp xchg mov or mov push xor (bad) cmp std sti loopne adc into arpl je mov adc and (bad) rep (bad) arpl lock (bad) idivb xchg dec fisttp data16 sub clc push add mov and test mov orb push jnp pop sahf add sub inc xlat jnp lds mov mov dec pop scas mov dec jae pop jno push and iret (bad) in sub aad in or mov iret stos popf push or jmp addb icebp xchg jne lea mov stc (bad) pop daa (bad) mov jl sub dec cmpsl and and sar sub aaa icebp imull ds in stos pop xchg sub mov mov or jl pop jne xlat mov mov call test test cld bound xlat sti mov mov cmc mov test lods mov (bad) (bad) ja in imull xchg jbe jp nop mov leave cld cld cmpsl notl jecxz or ds ficom mov jns repz jb adc sub add in dec pop out pop repnz iret notl cmpsb jg jnp xor push icebp mov mov test adc loopne out mov ret jmp jae xor ds and cmp mov mov mov push inc clc and in (bad) add jno mov and jg push add sub ja mov xchg adc mov mov push adc aaa xor cltd das ficoml jmp pop xchg push mov daa sub out mov fadd and jge fcomi sub iret movsb repz mov lret mov push leave add stc lret out mov mov (bad) jl imul cmp sahf dec mov or pop hlt pop jmp inc pop movsl xchg repz aas daa idiv xchg adc jecxz pop in iret jp out ljmp shll and push add ficompl cld xlat xor jmp mov loop (bad) dec mov xor nop or sub jg or repnz out sub loop fucom call mov clc mov mov dec add in xchg lcall popa and and xchg (bad) pushf inc sub repz push (bad) xor sub inc adc idivb inc clc repz insb das pop in mov fwait jnp lcall xor mov xchg inc dec in mov inc jno push aam cld inc add dec pop js xchg sbb or out mov mov ja mov mov pop call mov push cli das add jb xchg pop imul add cmp dec fidivr or xor xchg mov dec loopne xchg rcll loopne fstps mov repz out popa mov dec rcrl push in cmpsl push adc sub mov (bad) lock ljmp mov ljmp or xor cltd (bad) mov adc mov jo mov xchg mov xor and clc adc xchg andl lds mov xchg (bad) js and clc xchg cltd (bad) imul ret leave inc or xchg fs adc shrl jmp ss and cld test xchg outsb insl sub add sbb data16 hlt popf jg sub lcall es sahf jg push adc and jge scas adcl lret iret sub ret leave mov loop icebp out add jg in xchg out or jne (bad) ret sbb mov pop mov aad in (bad) out ja inc mov movsl pop cmp or push fisttp insl sbb shrl push repz add push mov or jle xchg mov lods push rcll sbb add cmp fs fxch mov and and loop xchg shlb fist lcall and scas sub ud2 add xchg and outsb loope mov pop rorl imul call nop push sub xchg test jecxz add sub mov iret jbe (bad) mov push (bad) jb mov loope jl jg es aad pushw fcom xor stc inc mov aam (bad) fldcw mov scas ja jg inc and out aad adc add xlat mov dec xor pushf std iret das mov gs sub mov lret push decb push pop sub fxch in (bad) mov lcall dec mov sub ds mov std or jle jo and fs movsb mov jae sub adc (bad) dec dec mov nop mov inc icebp inc or mov sub ficom in xchg jl sbb jmp out popf pop add ds xor ja xchg fs inc (bad) and push shlb mov enter nop add in mulb mov add mov (bad) scas aaa negb pop popf out sub arpl rcll mov sub pop sub aam ljmp notl (bad) pop push pushl outsb test mov mov icebp icebp cmc mov pop mov push sub fwait mov add pop xchg jmp test lret pop scas and cli mov dec adc divl test fisubr and jo dec stc mov dec loop sarb daa jns arpl cmp rorl jmp pop push or push in pushf into xchg enter inc push mov cli repz out sbb pop into repnz (bad) mov data16 stc sub jle push cmovp jae inc mov subl bound xchg mov outsl sub sub lcall aam cmpsl sub inc sbb jns or mov add xchg pop mov iret pop add mov out idivl mov inc lock jg cwtl sahf dec sbb in sar adc les sti call pop xchg xor xchg mov (bad) cmpsl inc xchg jnp sbb jno iret mov fst imul rcrb jnp mov jnp scas mov jae jnp clc or negl pushf pop jno mov test gs lcall lods xchg stos mov (bad) lock pop insb push sub mov decl pop sub (bad) and (bad) popf lods xor sub and rolb (bad) int3 dec add cwtl and or jae icebp push xor pop movsl xlat in cmc das xlat fwait stc (bad) not sbb loop in jecxz jecxz and (bad) das daa xor dec hlt fistpll push out popa les xor sub mulb jae gs push test mov push je jnp cmp jg pop clc ret pop adc jg push ljmp repnz add flds ljmp inc aad nop mov mov mov push (bad) xchg sarl out sub and jle leave sub mov shrl ljmp sbb pop push fstl dec repz idivb xor movsb imul and pop xlat push push pop pop inc lahf popa xor mov jmp iret pop mov mov cmp jo jg sarb cmp enter fcmove movsl stc mov std mov sub ljmp push ret pop add mov add dec flds std int3 les inc lret fidivl add pop pop inc cmp das ret rcrl rcrb sub and loop push in hlt repnz pop ljmp ja or cmp fildl xor imulb xor sub pusha (bad) jmp aaa adc cltd mov xchg pusha sbb rcr gs sub lret les stos enter icebp sbb aam adc pop jle cmp mov out movsl into cmc out xor mov dec cwtl ret sahf push mov pushf mov (bad) push xlat jnp push fisubr ds repnz leave out fist adcl mov movsb xchg test leave inc stc fcmove inc loope ss sub or push sub stos fldcw cs or xchg inc enter out push fistp mov lahf imulb lods dec stos xor push lock mov (bad) cmp mov or test lock orl (bad) sub and call pusha (bad) mov jmp and in fcmovnu xchg (bad) stos cmp xchg movsb push sub mov or mov gs ret test and add (bad) mov cmp push pop inc lock xor and ret aas and ljmp pop add xchg push add mov mov cwtl and mov repz add sbb jmp movsl stos mov mov bound add into jo or je lret negl mov dec or and int3 push out inc lods dec mov sarl (bad) dec jmp aam mov stos ret fldl adc scas sub push or test in jne cli in psrlq mov pop push mov and pop out movntq rcrl lea push adc ror aas ror out dec sarl xchg (bad) movsb rorl mov das jo xlat add lahf aam sub and push add xchg pop xor inc xor mov add or sti cld (bad) mull jmp sbbl push lcall xor ret push lret sbb sbb push outsl mov lret jnp cmpb or jno add add mov shrl lret adc stos or sbb cmpsl pop out shrl mov mov stc hlt jmp or std inc mov hlt sub jp push aas mov loop xchg les and dec scas jnp sti data16 ds sub push stc mov ds cld rclb and xchg cmp dec dec pop scas sub and adc insl std ss inc push pop popa inc ljmp or ret adc lcall fwait push jl dec jns lods rol xchg idivb xchg jg pop and stc mulb xchg mov sbb and push shrl call push jno,pn lods push and sub movsl or les daa repz sti loop xchg xor fisubrl or ror insb es (bad) xchg sarb cld adc out popf adc and cwtl lahf and dec mov xor aam push pop icebp push add xor push scas mov rcr or xlat inc daa dec jmp cmp cmp xor fstpt xor lret leave in les cld jge (bad) mov dec adc shr loopne aaa sub pop cltd push sub inc dec flds xor pop mull jmp xor and pop (bad) or ja outsl ds lcall xchg sti scas into cs and sub dec (bad) sub into insb pop or dec cs stc orl or xor xor or and add add mov enter jbe mov scas sub repz or mov dec cltd test jp stos jg enter ret jmp jb leave pop (bad) and (bad) add jns mov dec inc sti negl dec aam pusha ss adc sub and (bad) fs flds shl push inc test bound and sbb (bad) and cmpsb jp fstpl jmp pop test test and jns mov cmc jns fildll imul or ljmp dec xor vpmaxsw out xor out mov inc mov in cmp cmp pop xor lock pop enter mov daa imull push out xor push mov mov adc out add xchg jle outsl add (bad) repz dec stos or mov (bad) mov (bad) xlat loopne mov dec (bad) fidivr setg (bad) in sub ret mull sub pop dec jmp sub mov and mov push cli data16 imul push xchg xchg out pop mov ret popa xor sub lret icebp and and les xor iret and inc jp dec jecxz mov inc (bad) jp ja and mov add xchg jle flds ret test cs stos fmull jmp in fs stc mov mov je in cmp or sti push pop ret popa cmp xor sti and or dec jno dec sbb sub sub dec out add mov loop jo xchg add mov add negb or xor and lret lds nop add pop mov adc mulb lock cld das or mov (bad) enter mov ret push xor xlat and aam repz push pop repz xor xor mov sti rcll ss xrelease negl ljmp dec sub and sahf std xchg push and adc shrb (bad) pop mov icebp mov outsl mov cmp test lahf xor xchg icebp mov mov scas push or xchg sbb adc and decl lret notl ret clc pusha dec fcoms (bad) adc adc ljmp xchg frstor add push outsb stc xchg std pushf cltd mov notl test jmp shl bound ja (bad) mov push mull (bad) icebp notl or xor or clc outsl sahf mov into pop pop adc (bad) jne xor jl add sub cli mov sbb mov mov leave (bad) (bad) or inc dec imulb mov rcll out mov sbb mov mov cmp out bound or out loop mov divl pop fiadd rcl mov or cld sbb rorb (bad) push jb mov mov clc jecxz mov xlat in push xor rorb mov mov adc out pop and (bad) ds outsb ret sub inc stos jle (bad) leave inc int3 (bad) sub or adc clc dec lcall stos cmc outsb jbe inc dec add adc mov sub outsl out add cmp pop in call and dec mov dec test adc push mov (bad) mov dec inc out mov xlat lea push sub inc movsl mov xor popf cmp xor das jl cmp shlb adc mov jmp outsb cli xchg sbb dec repz mov and pop js fidivr (bad) xor xchg ljmp pop adc sti lods sub xchg push dec pop idiv bound or movsl ret stc xchg mov test mov out xor pusha shrb jb test js pop in mov scas loop lret jmp lret call inc int3 cmpsl int3 mov out aas popf loope sbb imul outsb lret dec pop clc sub mov daa lock int3 mov out imul xor dec sub scas jae mov ljmp out mov mov cmp push lret add mov or push fstp in or out mov lret negb cli pop cmp xchg mov push cmp int3 les scas gs rorl mov xchg and sub out popa lock stc sub aas daa dec xchg ret xor leave sarl jmp (bad) push inc or dec ds sub push xor or shr or and push mov mov or push daa decl loope,pn cmc adc and jle insl lods scas push xor movsb ljmp xlat insb out pop xor repz stos into add and xlat xor sub dec dec negl mov add or lret shrl leave mov push das jns cmpsb mov add fldpi add jne rorl cmc sbb push cmp and lret repz or sbb jg push inc and stos into mov jecxz and mov xor cmpb arpl pop adc sti pop adc sar or loopne push pop dec ljmp mov rorb (bad) xlat ret popa shrb loop push gs lods mov out lds popf xor jle pop mov xchg mov pop mov int3 enter add pop mov (bad) pop ret stc iret xchg lret dec clc push adc adc enter inc mov sti bound (bad) flds imul xchg inc and and icebp and mov lret fucomi sub lahf mov ret call icebp dec sub sbb add jmp ficompl lret jmp push add push lret (bad) je imul mov dec repz pop call aad mov jns gs jmp in loope pop xlat repnz or and stos lods jmp (bad) jl adc out (bad) in out sub pop inc fisttpll pop aaa push cld daa mov dec shr insl dec xchg (bad) fbld stc loop mov into mov rclb test decb inc out gs xor xor sbb sbb ja popf decb pushf jne inc int3 mov mov mov rolb loop out push ja jg add adc mov pop jge mov idivb dec cltd pop fnsave fucomi pop mov xor adc push sar test dec inc dec sbb gs rcrl repz nop pop addr16 sub (bad) icebp ret sub das jmp (bad) lods mov mov out pop pushf pusha ret inc jo pop fs pusha mov push divl jnp sti add mov push or xlat test mov mov jnp jns mov rclb icebp mov negb leave pop fildl jge (bad) daa jg leave enter xor rcl sub xor scas into and loop pop leave pop clc push pop sti jmp or popf popa sub imul add jnp out push adc test repnz hlt (bad) out and sahf xchg clc mov pop adc or sti adc mov sub and (bad) enter pop lods or sbb mov and xchg mov pushf (bad) jl pop loope dec ss stos gs (bad) adc mov notb push mov rorb nop mov sahf dec daa mov cmc test call cmp daa iret je pop jns es xchg adc mov and add ss adc sti cwtl push xor sub dec outsb adc pop add jmp sub stos nop jno dec aam inc xor mov (bad) repnz pushf popf pop sbb jmp and mov mov dec scas sub add sbb or sub xchg pop popa add sub mov ljmp xor xchg addb into mov cmp inc inc repz (bad) add outsb adc fldcw xor jnp mov add std (bad) jns sub xchg inc sti in aaa add out pop mov and lea cli push dec (bad) sub xchg push (bad) leave push (bad) and lret daa adc lock dec xlat dec sub loop ret enter cmpl cmc test test hlt mov out mov adc loopne (bad) push lret jg outsl leave not push xchg lods loope out sub pop add das add push mov and sub icebp mov mov mov fstps movsl xchg inc shr dec daa jmp in and xchg shrl mov and push mov pop xchg iret cld imul out clc je lds subb ljmp adc add fdivrs or fistp rol (bad) sti (bad) (bad) (bad) jge jle jle push sub cs jno movsl ja pop pop mov jecxz dec push (bad) mov call or aam cmp pop or mov pop pop popa pop lret (bad) call loop push push repz adc test add negl mov inc push pop xor jmp stc and mov push and lret mov daa std or cld jp cmpsb xchg xor sub xchg icebp gs cmpsl xchg das push jl jno push popf mov jp jmp sbb lods test stos mov adc stc dec push mov pop mov imul jnp int3 pop xlat hlt (bad) mov imul movsb inc mov fstpl xor jge loope fistl jecxz and idivb and or insl cs mov flds enter push test xorl in ss ja loope dec cmp rcrl ja adc daa ret shr sub sbbl and (bad) jmp repnz pop sub add xor and mov mov (bad) fdivrs in pop (bad) mov or ret lods pop xlat pushf jmp jns lret or push and push cli cmp mov and mov xor or jp push xor jge mov jmp push xchg out mov sub iret dec and lock and sub and mov dec into sub and cmp sti out lods adc cli cmp mov push cmp xor imul pop xchg mov jl sbb sub dec mov lret xor pop and dec sub ljmp mov add fsubl and inc in ret div sub cmp fisubr cmpsl xchg repnz (bad) add out mov cmp jmp scas xor push dec push ret mov jp pop out scas movsb mov enter jmp inc pop sbbl xor and lahf rcrb sub scas popf push xor add mov dec adc xor rcr mov mov enter add sub mov stos daa inc and or xchg xchg jns inc sbb cmp dec sbb int les sub (bad) cmpsb imul cmp jns jecxz sub jecxz adc sub movsb and mov movsb mov and sub das bound sub add add inc (bad) and mov das and add movsl das ret inc cmp mov dec xor stc aas and mov push bound out imull lret add lock pop out pop mov (bad) ret push xchg shl std lock hlt loop cwtl aaa cmp dec fisubr cltd ljmp lret out adc add pop lock pop (bad) pop adc repz int cmp sub lock pop imulb les mov aam jmp inc xlat cwtl add inc sbb jmp or stc jge inc fsubl ds lcall sub int dec xchg lret mov ljmp add repnz nop ljmp icebp movsl sub movsl popf (bad) xor cmp cmp bound push dec or (bad) add and (bad) cmpsb test and or das push adc insb and add sub (bad) icebp fnop jle and les clc sti cwtl mov jle mov lea pop scas push sub lret popf popa iret and cmp es in mov pushf xchg pop enter dec xor loop (bad) pop repnz mov into pop jno dec push push xchg int3 xor inc mov int3 mov sub mov fnstsw dec push xchg movsl loop aam push clc movsl xchg into xchg gs cmp ud1 outsl or mov jp and jl and data16 add mov and loopne or stos xor pop mov sbb leave xchg cli cltd adc in dec shrb adc fucom or mov inc (bad) sarl push and (bad) pop add sti inc mov pop or (bad) aaa jle outsb dec xchg xorb cmpsl pop cmp cmp xor push push (bad) cmp (bad) and mov mov addr16 fs into mov sub repz xchg jbe xor nop or into or and outsb add leave enter jge xchg notb push mov out ss push pop sub push enter xchg (bad) ja (bad) pop pop and pop xor cmp dec (bad) xchg mov sub mov fidiv jne aad jmp test movl xor jno inc add jge mov jb push iret push fildl sti mov loop sbb mov repnz call cmp and sbb fnstenv dec leave pop sbbb lret mov pop aaa loopw jne (bad) inc jmp loopne sahf mov and (bad) stc add jo mov (bad) lret iret test repnz adc and sti or inc sub mov push dec adc jae mov cmp mov sti popa inc add mov in int jp imul xor insb (bad) mov insb dec sub sub push dec sub rcrl ret xor int inc gs push scas lret ret ja subl out fsub mov or mov loopne outsl loope idiv sbb xchg fistp icebp jne mov je loopne (bad) lahf stc xlat shrb xchg insb pop dec lock push xchg ljmp pop frstor cmpsl mov movsl outsb idiv dec and ret stos gs out push test adc xchg test (bad) dec in sub lea xchg or add jb stc stos das idivl pop dec or sbb and mov imul inc ffree lock lahf sarl icebp (bad) lods adc add pushf cwtl cmpsb mov pop mov pop test jb mov push xor sub popf sarb and jmp (bad) movsb in ret enter cwtl data16 je and adc sub pushf in inc pushf xchg and out mov pop push loopne pop inc pop idivl dec aad repnz jae sbb and fwait dec sahf (bad) and je xchg sub lahf adc fmuls sub inc int fwait jnp mov xchg ljmp mov (bad) pop jecxz mov xlat add hlt dec (bad) (bad) sub add rorl xchg stc add ja jne pop addr16 pop icebp pop pop push inc add dec ljmp cmpsb pop sub push imul (bad) jmp pop nop jno xor xchg inc ret xor and ret scas push or and push fiadd gs nop mov xchg mov cmp xor outsb iret pop repz sti push rcll (bad) outsb mov mov jnp movsl pop loop xlat inc pop das bound pop pop mov shll sbb sar mov xchg loop xlat in test out sub and mov add popf mov ret mov in or sbb popa and xchg (bad) mov mov shrb cmp adc inc cmp add int test xchg and mov and rcll out das out jns adc and inc out jns lret je push or pop out popf test iret xor imul fstl ret cltd inc cmp mov sub ljmp out data16 pop mov pop jmp push leave ret ja (bad) dec or jle add pop fsts icebp dec lahf or mov dec sub stc or xor out adc mov mov pop add insb es ret and out xchg cmc mov cmp or mov mov lahf (bad) or xor sub xor add inc dec sub jnp and test xchg lret xor aaa mov sub leave jne sbb xor push das rorl fisub and aam pop (bad) in sbb and imul xor sub (bad) xor xchg dec mov movl outsb ret push shr pop mov push scas or sbb pop out xor mov push mov rolb push or idivl leave ret imul movsb pop in mov mov or fadd xor cmpsl dec dec and add rclb sub add add add fwait add inc loope add jo loop arpl push push popf xchg lock mov int3 cld add jl scas cmp cmp push icebp cmp dec sbb nop jnp jbe add je clc negb fs call es pop test sub arpl lock push repz cs dec lds cmp xor repz and xchg mov xor jne sub repnz pop jnp out jbe pop (bad) or stos inc loop inc push adc jno inc pop (bad) xor stos cwtl bound cltd out jl mov sbbb loope ret call mov xor repnz orb mov out mov inc mov push loopne and (bad) ja push push xchg pop pop fsqrt and sbb cld les (bad) xchg call arpl sub and or add pop sarb out popf stc mov les adc xor sarl adc lods mov or push imul in repnz (bad) jmp outsb stos decl dec sub lret xchg shll sub add mov ror lret inc cmpsl js movsb es or sub xchg add (bad) cli fnstenv cmp (bad) lret hlt rol into jnp mov fcompp shlb adc sub or repnz adc clc ljmp leave or push xchg (bad) stos lret roll xor icebp cmpsb xor jecxz loop lahf add into dec push inc cmpsl sub leave fcoms xor pop (bad) mov push pop jle xor add outsb lea ret cwtl rolb cli sti lcall mov sbb xor test mov notl pop add dec int xor sbb jmp insl mov jns lods jnp sub out testl cmp sarb push fist mov adc cmp (bad) cmc push sahf push add icebp repnz inc xchg lds adc lods js mov xlat inc popf pop out mov xchg dec dec mov add or out cmpsl (bad) sub xchg lret jecxz sbb mov mov xor mov ret lds mov mov add pop repz jne dec xchg dec xlat mov outsb sub push adc mov pop add xor adc mov loope jns fcmovb jns cmpsl bound mov adc adc and out jbe and or adc sti push out js pop repz mov mov and push (bad) mov jg outsb xchg out or clc sti add lret notb ret data16 xchg icebp adc loop jmp mov aad insl dec or das pop adc add cli enter mov add jno adc xchg and cld lds and xchg adc adc daa fsubp shr push add mov loope xlat sub inc cli stos into xchg adc xchg cmc leave (bad) loope rcll gs mov mov rcrl enter rclb sti fwait cs inc or add inc mov mov sbbl pusha mov stos cld std mov js add add mov lea add pop xor inc ss cmpsl cwtl cltd mov in dec jno in ret in dec push ljmp mov xchg or rcrb mov and ja ret jno push hlt inc pop scas jne (bad) jno add outsl xor stc stos mov (bad) aad sbb (bad) cmc aas or or negl int and loopne fcoms inc mov mov lret out (bad) loop or mov sub mov mov sub add cmc xor shrb test mov je dec add sbb cmp bound aam daa adc mov repnz cli sub stc cmp pop mov add leave xchg (bad) sub mov js sub or lods cmp in leave mov fildll or mov xorl cmp rcrl cmpsl pop imul sbb inc dec push add mov add cmp ds lods inc inc xchg lods insb les sub dec or dec mov sub xchg pop lret add xchg test leave stc rorb xchg mov pop mov mov fstps dec repnz push mov aad pop and fcoml cmp repnz cmp inc or nop test mov add xchg into jo ret jnp mov rcll jl (bad) leave sti lcall push dec aas add dec ficom push sub cmc mov leave divl aam and fwait sar cli call (bad) icebp jecxz pop and sub mov sub daa (bad) div pop mov cwtl iret adc ret add pop push stos push jl and dec jmp test bound rorl les push stos stc clc xchg stos mov mov enter ljmp pop loop test (bad) stos fld1 ds sbb xchg call movsl or (bad) cmp fwait mov push mov mov clc push daa fildll out sub push fmuls cli sub push and cli cltd iret fisubl mov push push jae leave scas repz pop add xor (bad) jno lret mov pop lcall jecxz push mov ret stc cmp imul mulb and mov pop adc inc icebp je decl imul xor and loope jg les mov (bad) mov into xor adc push stc mov cli xor xchg shl sbb icebp push jp sub mov dec loop inc push jle loopne sub sti and test sbb mov dec xor mov or mov xchg push loop jne je add es jle pop sub dec xor add lret push add mov mov shlb and loope insb xchg (bad) xor sub sub cmp lret rorl out inc popa and rol and cli pop out outsl pop sarb aas dec ret std jnp mov ds cli jo popf hlt fsubr popf imul jmp insb das notb ss call jge dec pop dec ljmp xor xor data16 jle push ja mov sbb movzbl xchg (bad) sbb lea adc cmpsl movsb stos fdivr or add or adc stos mov add or pop sbb mov lahf jns fs scas mov sub pop imul popa nop and jmp movsl and (bad) sub pop stc adc out jl decl test fildll mov mov rclb add out fs mov mov pop mov xchg xchg divl adc add sbb out mov sbb iret (bad) adc pop div mov ljmp icebp inc cmpsl pop das sub notl imul add mov sbb adc (bad) mov inc push mov js inc es jnp and xor dec inc iret xchg push out pop cmp xor pop fsub push sar inc sub std or or and or fisub ret mov lcall or aam ds idivl sub add lret push lahf fsubrs jmp jge mov lret (bad) xor in fsubs mov mov dec enter fildll mov daa pop inc xchg daa pop inc mov jns hlt lods pop stos lret int mov jp int stos mov xlat test xor cmp pop fwait loope ljmp push pop jmp ret adc xchg cmc adc dec iret int3 cmp push clc arpl mov cmp inc hlt mov or add dec mov cmp lods jbe adc cmp inc lea sti es les pusha sub rorl lret repnz int3 xor div mov lret or cltd add cmp mov add mov cmp ret imul xor (bad) xor les mov popl mov (bad) jl add ret out and scas pop pop mov xchg scas bound mov pop fnsave mov cmp jmp lret lods (bad) pop xor or hlt rolb mov and clc enter into sbb lret cli pushf or dec cmp add sti inc sub sub loope mov inc jl sub mov or pop dec scas popf call jmp mov add (bad) adc mov js ljmp shrb scas jns cmpsl push loopw loope jecxz xchg lea adc jmp pop scas mov stos cmc (bad) jg fwait adc sub mov pop sub sub ljmp subl pop movsl jmp dec lahf inc out xchg xlat adc cli cltd jb int adc out in in in mov ret fstl sub mov test add test fcoms leave dec inc ret pop push add mov cmpsl xchg rep inc xor in scas rolb mov clc or jbe leave cmc out (bad) xchg je repnz push xor xor fbstp lcall mov lods mov push iret xchg out bnd out cli ds lock iret bound mov pop fistl jmp mov bound or dec shlb cs popf adc adc sub (bad) icebp xor cmp and imul sub movsl mov mov out mov lret repz push sarl cld notb shlb xchg outsl sub sub stos fs xor mov repnz cmpsl pop mov lret jno mov cmp push testb inc mov aam push shl push or and fcmovb add or pop repz xchg mov dec lea push test mov dec and call lea ljmp cs sahf inc wrmsr mov xor mov adc mov inc (bad) or cmp iret fstps cmp mov out add fmuls xchg dec popf fistp xor test stos dec rcl pop jmp test lret cmpb das (bad) imull rolb or repnz mov and mov mov add lahf pop (bad) imul not jecxz or ja xchg dec cmpb or xchg out fidivrl (bad) fimul dec repnz and push bound (bad) outsb xor cmpsl jbe and adc mov mov aad xlat xchg outsl pop adc fldl cs idivl push call sub and mov mov jp jbe loope pop les ret mov xchg pop sub or jg adc cmpsb mov sahf movsl push jecxz xor mov mov inc xchg decl scas cltd mov lret cmp out sub mov jge shrb mov stc popa mov pop mov lret idivb bound jno mov cmp dec leave in popf (bad) pushf add out pop test loop mov fistp loop and xchg ja (bad) out cwtl cs push or leave lret jne jecxz inc sub into stos loop dec ljmp lret jmp gs pop jbe or jmp repnz xor push push pop es or add mov test lret dec jb ret mov add sti call fldenv std xorb shrb ficompl push and sbb xor adc mov mov push inc adc stos cmp and push mov int3 mov dec shll mov jmp bnd insl stc out loop mov jle rcrl stos (bad) or pop jns pusha and sub mov daa idivl pop call loop ret mov or xlat or pop roll outsl or pushl cmp data16 insb dec daa add sbb sub mov push push pop jno pop ret out pop pushf add push mov pop in aas pop mov sar xor test sub jg add xchg lods mulb xchg or sub dec out es clc lahf push jg out cmp and sub idivl iret imul repnz fxch test (bad) sarb (bad) push mov and lret outsl pop inc sub out mov or lcall int jne dec mov addr16 je insb xchg push jg sub xlat xchg jbe push leave data16 mov mov mov ja mov into mov cli sti xchg jne sub mov (bad) clc inc flds outsl cmpsl clc (bad) out jno sub sub xor jle repnz sub leave pop jno ret jnp mov jnp dec lahf mov xchg (bad) or sub adc insb xor stos pop push xchg mov xchg ljmp ret push sbb sub inc popf js dec pop lret test dec cli xor (bad) ja icebp mov loope mov das pop adc sti or mov daa jne insb cmpsl jg jb call ss test fwait push rcrb push insb in lods push movsl push (bad) daa (bad) push xchg add pop jmp inc sub xor xor cmp jmp addr16 repz dec ljmp fimul leave mov pop (bad) addl mov or pop xor rclb cwtl jp sbb scas pop stos pop mov or popf fstps imul cmp enter xchg sub ljmp jns inc mov xor mov (bad) dec dec jne and scas mov or mov jo push cmp xchg fcompl cli push mov mov mov out xchg mov inc not push mov and ss pop lret pop pop jb (bad) mov adc mov in mov nop bound lea xor lret add shll out lret fistpl cmp aam mov xlat mov sbb icebp and xor mulb (bad) pop add aas xor sbb (bad) mov mul negb and sub sub dec and mov lret (bad) xchg dec popf out cltd (bad) ja mov ret sbb jecxz pop (bad) icebp (bad) pop mov fdivrs int aas (bad) xor push (bad) push pop push dec push cmp stos and lret lret xor push sarl imul lods sub movsl arpl inc pop inc fstl ss sarl xchg jne scas je scas loop (bad) enter icebp (bad) imul rclb lods fistp mov mov icebp xchg ljmp cmpl pop add cmpsl fnstcw add or mov jne push adc mov mov rorb mov ret inc stc mov pop gs leave pop push jecxz jecxz adc add sub mov adc mov xor sub or mov sbb sbb rcrb sub add dec jg bound lret sbb ds cld xor je push inc add out imul cmp push cs into adc mov xchg outsb ss pop xchg pop dec imulb pop icebp or int3 sub xchg mov inc sahf scas out popf push pop adc mov lret adc mov fmull dec sub xchg fldt das pop inc and inc ret dec jmp sbb fmuls lock fcomps inc into sbb add pop in sub jle xor sub fistpll mov mov mov test inc dec out adc adc mov or or jne pop cmc stc add push cmpb push mov and insl fsubl mov add repnz (bad) xor mov dec lods pop mov sarb mov dec das insw push pop rcl outsb push jge (bad) stos lret pop sub push popf pop pop dec mov aas ficom (bad) cmpsb gs test into notl lret popf push inc dec mov lret out int3 ss push lcall cs pusha sub lret or je cli dec lock cli sub test icebp or mov inc andb add push cmpsl dec mov out jge jne rol and jp aas lods adc mov popf mov stc cld or or pop mov or push cmp addr16 pop and into das stos sub cmp int mov popf and mov mov adc mov xor (bad) cmp aad dec out dec testl cmp out xchg aad mov cmpsb mov cli icebp cltd cmpsl ret mov clc imul (bad) in into xchg gs bound (bad) lods aas sarb and scas in mov mov xor ret or mov mov xchg addb add pop xor (bad) test lock xchg int xor outsb mov sti mov xchg call int3 inc pop out mov pop mov not lds insb dec lcall mov int3 ljmp cmc or movsl loopne enter negl cmp out inc roll icebp cmc addr16 mov shlb xor mov mov xor pop stc mov cs fisubr les decb cwtl mov xlat rcll psubw push daa ja add push sub bound lock decb fs cmc insl cmp inc lahf pop xor and xor pop hlt cmpsl je das divl add mov mov adc cmpsl sub enter (bad) andl mov add mov bound ja add push loop fbld dec icebp aas mov dec add adc mov les (bad) mov push dec decb jae pop shrb out xor cmp xlat pushw mov ret lret faddl jle sbb les cmp cmp leave repz outsl ret aad inc int3 push repz test jge and mov insb lods mov aaa sar cmpsb fistpll add test out fcom sti xchg in push xchg ja adc sbb and push in out dec repnz cmpsl es std or (bad) (bad) pop into stc xchg pop mov mov dec xor enter int3 int cld or ret adc mov fmuls aam or inc mov stc jno jg pop mov pop outsb fstpt cltd ret inc cwtl sub in adc ret lcall mov jns dec fiadd sub jmp (bad) xchg push xchg mov pop push pop lds call mov notl add scas popf push cmp push jbe fs cwtl testb adc enter adc in xor mov and or sub out sbb dec or lods in sub or ja inc adc sub (bad) loop daa mov pop inc mov push xchg rorl imul adc (bad) mov bound into sbb pop inc and xchg jle sub gs cli fnstenv adc out add mov ja popf fistp lahf dec mov xor test xchg pop fsub xchg divl mov adc or dec lods xor jmp xlat and cld (bad) roll test dec jmp dec loop push and stos je mov fnsave out push adc roll cmp lods push sarl in dec dec fmuls add mov (bad) pop lret pop loop lds (bad) pop sub jecxz out xor jne add sub stos out pop mov xchg std mov test mov (bad) test mov dec xlat cli pop mov jmp test shr dec jecxz or and push ret pop jnp fdivrs hlt inc mov repz sbb jbe jmp ja clc sub mov sub pop into leave sarb mov add pop je jmp or nop mulb (bad) push add pop mov sbb xchg mov sub inc std gs stos rol or shll xlat in stos jge cltd lahf push cmpsb push out in xor iret pop lds scas sbbl inc aaa fidivl rolb aad mov into int3 movsl sub mov dec scas addr16 add or into pop mov jbe les mov and add jne lret pop adc imulb das pop cmp mov pop lods cmp add daa sub test or ljmp lods loop jne imulb imul xchg mov loope lret push aad cmpl xor mov push lret mov out push sub das fiadd rclb pop call or mov dec (bad) fs fild lock push sub mov clc lods pop popf (bad) adc leave daa arpl das les ds mov mov sub les scas (bad) mov (bad) cld pop xchg lods gs mov dec out test cli mov and test (bad) repz push or mov mov mov cmc cmp sub inc cli add hlt xor cli jge mov mov loop xchg mov bound ret xchg inc mov pop les xchg repz adc rep addr16 imul jp lret sbb dec out and cld jne imul pushf adc dec into cwtl sahf lret popf std adc subl jmp je in xchg dec pop movsl movb mov in pop sbb push mov or das dec cltd push add jnp fcoms bound and pop and sub aam call pop jg sbb xchg icebp xor into repnz sub mov mov ret ds (bad) fs gs mov mov aam lds ficoml push pop sub out ja cmp add push insb ja rolb in lcall sti sub cwtl out cld (bad) mov add fstl jle xor add ret rorl ss cmp andl cmp ds stos leave loope jle pop rol add (bad) dec pusha xlat dec mov add xor xor mov cli aad adc add daa test test push enter add lret fistl data16 popf rorl pop sub rclb pushf jmp stos int3 mov (bad) ror pop dec push jg ds mov push mov cmc adc popf cmp jecxz sub sub gs inc and shrb inc int3 leave pop jmp sub sub mov rolb popa test imul sahf adc stc repnz outsb out push and pusha scas add add dec mov push mov add xchg leave fcomi stos hlt gs adc adc mov sub add mov out mov cmp leave sub jbe or pop in mov xchg jle jnp cld in dec jbe sub enter imul dec dec rcrb xor mov in cmp (bad) push lret (bad) jl sub fsubs call pop ljmp jmp jb or mov xor aaa add or mov or dec fstp dec lds js mov jg out jmp pop cmp call cmc push outsb mov jne cli in clc std loop pop mov push mov test cmpsl lcall inc xor mov adc pop dec ljmp mov je mov adc int3 outsb pop mov pop push or mov (bad) (bad) dec (bad) out insb sub lds sub inc movsl jo mov sbb xchg shlb dec jecxz roll cmpsb inc mov das leave inc cmp sub fmul sub push shl jae scas outsl dec dec je sarb fs lock test repz jno or xor jge mov bound cli std sbb (bad) in mov outsb ret das add push xchg (bad) (bad) cmp hlt cli fcmovnu adc mov sar xor sti les dec jmp aaa inc pop jmp fs stos loop cltd (bad) test and int3 mov jbe push ja fwait xor and mov mov xor push jp les mov nop and mov leave inc jb sub cmpsl shlb sub jp push movsb push cmc cli or in or decl or (bad) leave or arpl push or mov mov or mov pop out iret pop and jmp (bad) repnz sub cmp add (bad) lock xchg inc andl add xchg je pusha and xchg fcompl aam repz sbb test movsl push mov leave dec cli pushw dec adcl icebp mov fs frstor test js out mov out mov pop clc nop daa mov lea or xlat fisubr negl cmp imul fistpll dec dec mov inc xor or ja fcompl cs (bad) rclb dec xchg pop scas or push flds lods cmp add lret outsb sar xchg cmp (bad) repnz outsl mov add and leave mov (bad) leave jae adc lret (bad) cmc gs and mov mov cmpsb (bad) pop pop je push clc clc mov xchg ret mov mov idivl mov (bad) jecxz xlat push mov push or and stos adc loopne loop andb mov test mov clc xor and cwtl push popf jnp cmpsl fdivs int3 or (bad) aaa jg (bad) hlt dec push mov adc fsubrl xor fimull outsb in popa mov mov mov sub mov orb fs add dec jae pop inc fidivrl adc push push in jae test mov push add dec xchg ret push pop shrl iret out stc sub cwtl pop xor scas test and aas rorl inc jmp in dec adc pop sub (bad) or sub insb nop xor decb aam pop and xor push das mov std xchg sub xchg add ror or inc mov or adc xorb sub sbb adc cmp adc int xor jge mov addr16 pushf pusha add and dec shrb sub push (bad) pushf xchg mov shrb sub xchg cs dec and or lock pop (bad) mov or push inc fildll add jno dec int add test or cli mov or stos pop loope or sarl mov inc xor xchg sub pop mov and incb or das push repnz pop aam xchg add out pop cmp xor inc adc jecxz lcall add rcr adcb pop dec sub or xchg enter das mov or arpl mov fisub mov dec ret cmpsb insb nop lds sti xor adc pop iret mov scas mov push lods lea inc mov add add movl mov push mov out xchg sbb mov dec xchg out push pop rorl mov insl popa sbb or sub fstps dec lret test ret and out sub or fidivl loope pop inc sub faddl insb dec in aas jecxz mov push jl ror push lock repnz cli mov test pop and mov shlb push mov dec xchg aad stc flds dec cmc lea out insl pop mov mov push dec inc sub ljmp sbb lds jno sub dec stc add enter gs and mov daa mov pop lea push ret in sub cld repnz fimul xor and lret mov inc aaa jl pop sub mov (bad) mov ljmp movsb push divl ss lahf insb es lock aas jnp movsb push jns push rolb push inc out test rolb push or mov mov shrb cmpsb push fs sahf mov test xor in mov and mov and or or mov fwait pop bound push nop addr16 push adc mov iret adc jne add xchg mov pop and ljmp pop pop pop pop pop popf call xor mov les daa test mov add mov not adc das mov pop push fsubl add mov int in ss leave xor popf xchg loope fisttpll loop lahf data16 and fstpl xor popf push xor inc test repz scas pop imul icebp xchg sbb push add xor lahf pop and in daa jo jg xchg insb sbb rolb hlt cli mov xchg scas push push xchg inc (bad) ficompl dec decb lahf out and test add stos std xor xchg ret jbe cmp cli aas lret sbb sub or mov push sbb adc daa pop lcall mov stc loope jle call push mov imul cld and lods (bad) out mov dec repz (bad) lods nop (bad) add lahf icebp push mov (bad) jl or pop (bad) dec jnp xchg lret mov pop or jns mov dec ret push push jp dec dec cli fs lret sub daa push data16 sti call and stos lea pop mov test (bad) and scas test mov pop add es mov das xor adc jle test std xchg imul leave or add fs inc mov aam pop das cmc or test and mov mov shrb cmp imul xlat stos adc in enter popa jne or pushf jne (bad) mov jp subb lock cltd mov jbe sub into test xor addr16 aad add jnp push inc xchg inc jecxz scas popa ja pop push out cmp imul and inc pushf jmp sub data16 xchg jnp mov mov imulb lahf or xor push ljmp or pop mov or and jp and ljmp clc fimul jp fsubrl inc fs adcl mov xor arpl add sbb testb jo pop out jnp iret jmp and fldenv mov cs inc movsl xchg mov out jecxz push adc push or push push jne inc mov add adc outsl push sub jmp jmp mov repz xor adc jo stos sbb rclb cld test jo repz popf cmp sbb pop (bad) fsubrs jae dec mov (bad) mov sbb add ljmp xor rclb out jb or (bad) out pop or mov add adc (bad) ja mov daa adc xlat xchg test test mov dec in sub stos cwtl sbb mov sbb outsl sub mov and sbb aaa lods out (bad) loope adc sub xchg inc inc or push sbb dec mov adc in movsl mov arpl push inc into imul ror and inc dec lret loop mov lds add pop sub jns sarl inc sbb xchg xchg mov aaa dec jmp stos data16 adc add mov mov loopne lahf sbb (bad) daa clc mov test fisub dec pushf (bad) nop testl testl popf cmc xchg mov mov xchg js int (bad) rcr shr imul hlt dec pop inc push (bad) daa push loope pop mov inc jl mov jnp nop xor out add insl inc push cmp add lret cmc out and sub int3 jp pop sbb push xor loopne jg daa ficom mov adc mov xchg mov push fxch fldt xor enter push out jno add (bad) scas gs rol stc push sbb scas push adc lret inc pop insb shlb xchg xor push jne ja add or (bad) push lret add fisub cmp adc out scas gs clc imul mov out mov data16 leave scas (bad) or jge mov and jbe mov pop xor push jns sahf lret aam mov jns fldlg2 sub adc mov push sub (bad) cwtl adc sub adc dec mov rcr xchg hlt or dec sarb cwtl mov movsl pop jns mov fisttpl dec and mov pop pop sub dec dec pop movsb stos cmpsb imul jmp inc negb xlat notl inc sahf cmp test out sub pop ret jge lds mov jo dec shll into and dec xor sti sub scas ret pop pop mov jecxz mov repz jle rcr push scas imul xlat daa push inc imull negl push pop mov addl mov lret xlat mov pop pop and pop pop popf mov mov popf push sbb push sub ret bound pop jo lahf pusha out add aad or ret dec les pushf mov (bad) repz sti scas sub xchg (bad) lret push push jge cwtl int mov test dec sbb and icebp enter jecxz daa rcrb out xor or int and pop pop xchg adc add mov fisttp jmp push inc cwtl repnz stos fstps out push cmpsl ficompl xchg (bad) sub mov adc test movsb scas inc stos (bad) and cmp xchg adc push or pop or mov xchg xchg xlat adc pop pop and mov push xor pop (bad) (bad) into loop add push cmpsl (bad) push lds std xor out sub loope jl data16 sbb mov xchg mov mov icebp pushf or dec add (bad) xor mov add test mov xchg fsubs popf pop inc push leave xchg ret pop ret xor xchg inc mov fcmovne add mov pop test mov inc das sub add out cmp arpl jl repz int cmp cmc test mov dec mov or jae sub popf daa adc mov mov call add fstps cli bound (bad) sahf jecxz adc cli ljmp inc arpl stc adc daa adc push arpl mov cwtl cmp test and mov and ja mov cwtl pop jmp outsb stos ljmp pop repz jb sub adc (bad) js jne (bad) mov sub mov je pop repnz or imull loopew or or and or jle adc gs cs jp fldcw (bad) (bad) loopne add fdivrs push xor jno jnp mov repnz and push push cwtl cmpsb lea ret into popa (bad) xor data16 lods mov int sub cli fprem (bad) xor sarb jle mov dec leave rolb lds pop ljmp xchg sti sub les (bad) add ret push sub in in or jmp dec scas (bad) ficom and mov fwait xchg mov and lock mov pop or sti and inc or xchg scas out pop out sub pop cmp pusha insl out and xchg fnsave clc jle loope push pop pop adcb fcomp test jg mov jecxz pop sub adc dec and adc dec add lcall daa jae adc rcrb or sub xlat repnz jecxz faddl dec adc xor icebp jno fcmove data16 xor push test cmp cmp jmp xor push ss ret add xchg out push ret cmc jno in mov jns dec push mov add aaa add clc cmpsl adc push push negb or sahf xchg fimul into push cld pop cmp xchg inc xchg out fxch cs cs pop sub (bad) daa test in mov rcrl xor scas adc inc loop xchg (bad) or add mov in fwait stos out pop jecxz mov pop stc lahf dec xlat xchg pop repz or das sub push cmp sbb pop fmulp sub push daa add jle loop add outsb movsl out push (bad) cmp stc inc outsb cmpsl (bad) dec mov push movsl cmpsl fwait dec mov add popf stos or sub je imul inc push daa push loope dec cmp cli cmp loop jnp jmp xchg fsts aam icebp dec sub pop add cmp push mov push sub mov lret lods ret movsl fldenv imull lret jb lret xchg in or or popa roll jns ret sub jmp lahf (bad) cwtl (bad) and xchg cmp sub imul push hlt (bad) adc or add outsl pushf adc lahf icebp push lods ja je ret das xor jns sahf rolw mov cmp mov xor inc or (bad) sub mov cltd int in or xor or aaa fldcw add mov out lret sti mov aad inc dec sub test sub ret outsb loop andb fadds stc pop xchg (bad) cmp xor mov xlat stc je and or jne jp (bad) and ret ljmp sub mov jns gs mov jb (bad) ljmp mov (bad) arpl jp repnz ret leave js (bad) xor jmp dec out mov add or cli mov outsl test xor jo sahf sub (bad) or pop dec into adcl mov in dec mov gs incb je push ja jmp js pop into lods (bad) fidivl gs rorl add fmul ljmp mov cli xor sti and jg and mov (bad) mov ja cmp push adc stos notl push push sub mov xlat adc xlat scas (bad) dec daa ret jge mov movzbl ja ljmp push and pop daa mov je clc fsts mov sahf mov aam pop ret pop push sub mov das mov and sub mov rep jbe lods ds sbb icebp data16 ds jecxz fs ljmp cmc iret mov lock jg (bad) sbb out xchg outsb out mov repz and adc or and mov push or sub dec sbb dec pushf mov mov shlb sbb (bad) iret in mov enter jle roll add cmpsb movsl cli mov adcl fsub push and adc sbb out adc dec adc mov jge xor call scas or inc or loopne data16 dec dec lods ret jge add (bad) and out pop mov dec jecxz xchg mov mov stc sbb lret mov cmpsl xchg and mov call pop jmp aad mov or gs dec cmp mov in jb ss fcomi push cmpsb sbb sub fistp xlat clc xchg xchg sahf inc daa xor aad (bad) or mov stos sbb daa or fldenv jmp push pusha imul adc sbbb jle rclb rol and pop and mov push inc daa std mov cld add movsl outsb mov jg ret mov aad mov and pop out dec adc mov add (bad) sti mov stc (bad) ja push mov xchg (bad) xor pop or icebp out popf test xor dec push mov adc jae pop push push dec pop xor call std movsb mov jmp inc sub fidivrl or (bad) pop (bad) (bad) xlat sub ja shrl xor fnstenv pop add mov inc sti stos cmp and sub imul rclb add mov fidivr in fsubrs pop rcll call je jbe push (bad) mov (bad) mov push insb lods inc inc (bad) xchg mov xlat adc sub outsb leave ljmp out and aas mov sub jne (bad) les pusha sbb cld test ja xor ret mov enter push add pop std call dec ja scas xor inc or pop xchg mov mov nop imul inc std xchg add and jmp insl jmp imul dec lret scas lret xchg jne mov lock mov pop sub pop xor imul or mov inc xor gs jg out gs xor mov xchg adc add and mov or gs aas addr16 test pushl out push aas add dec (bad) mov jne mov cmp mul sub sbb pop sti mov mov (bad) test xchg fstps (bad) jb or iret xchg sbb sti mov mov add das ljmp repnz jle std das call cmc xchg adc xchg out mov mov jecxz ja (bad) xlat out xchg push hlt sti sub ds xor adc icebp sub sub jecxz and dec int3 push nop mov (bad) jno mov setns jge xor add test lds sub inc push or push sbb loop xchg ds mov std leave mov lret (bad) cmc xchg xor pop ljmp daa jg (bad) jge mov pop and jne xchg lds js pop xchg mov ret xchg push push mov lahf inc xor and mov mov mull push cld test xor cs mov adc jb idivl call aaa bound out movsl mov mov ret xor sbb lret sbb sub imul sbb sub subps pop push cmp lret (bad) rorb cmp cmc push cmp push mov repz pushl stos pop jg bound mov pop add mov (bad) xlat inc push and xor pop lret pop enter pusha cmpsb mov mov je pop (bad) dec push push lret lods iret pushl orb popf jae and sahf pop aas sub dec mov out mov sub sbb jge outsl clc pop mov xor ljmp in push sub cli les into std xor jno mov fisubr fadds adc or movsb sub or sub aam pop dec pop xchg pop xchg lret mov cmp xchg mov andl test mov test fisttpll movsl stos or into add lds clc xchg xchg in addr16 (bad) xlat jns lods jae push mov push sub sub pop xor imul loop cltd inc push dec int3 cwtl pop or enter addr16 mov (bad) mov negb pop loopne ja das mov push (bad) aad sub stc adc dec xor rorb lds sbb out fildl add mov dec adc lret cwtl or xlat cld nop xlat jmp mov pop loopne pop icebp cmp (bad) xchg int3 lds shrl addr16 sub leave fstpt leave fmull xchg popa jle test movl out cmp jb sub add jne xor out aaa add and scas dec adc sub out mov pop pop push das loope sbb (bad) mov xor sub popf fcmovnb mov test mov pop push pop repnz mov adc inc jnp jmp inc (bad) mov es out out cmpsl aad repz lds das mov or adc decl mov mov idivl das jmp or sub add pop mov ret test stos int sub add lret cmp xchg call inc fs std xchg out std insl out xchg pop daa out aad aad (bad) sub imul mull sub scas rclb inc xor xor jmp pusha leave repz ret mov das out sub iret mov rorl mov rcr inc lret stos stc or dec call and stc and sub dec scas sub sub jno addr16 jg pop inc xor adc out test adc (bad) rcl mov movsb fadds pop fadds jno repnz gs xchg icebp lea adc lock insb mov dec cmp push and push add (bad) adc mov cmp nop cmpsb (bad) xor sub das sub xchg aam loop clc (bad) push shr adc jmp mov daa push xchg push fldt (bad) xchg jo or daa les push lahf push push popf lock dec ret sub jge inc (bad) iret pop and gs sti xor rorb sub notl int3 adc ret out pop into je pop into lods out ljmp push adc daa (bad) stos gs cli dec cmp fwait jno add and mov stos add jp push mov lods dec frstor sub xor inc lcall xchg cmc mov je divb test cmc jae leave (bad) aas sub lahf xlat pop or sbb test (bad) divl pop pop inc or mov sub imul inc cmpsb push and pop imul fsubrs pop (bad) pushf xor (bad) xor dec xor sub jne mov int3 xchg mov add mov jecxz in daa mov popf cmp jne and push mov (bad) scas int3 mov xchg das sub imul clc xlat movsl test mov cmp repz neg dec ljmp lds or insb es pop xor out stc repnz lret sbb jle and mov fs mov cs cwtl inc add mul (bad) pop sarl push jl sub dec sub xor leave insb fildl (bad) int3 inc call popf add (bad) icebp dec mov mul xchg cmp inc xchg jo mov and outsb mov dec xchg mov cmp sbb cmp mov sub shrl test add dec mov fisubr mov sbb aam mov std xor xlat int3 xor push cltd out mul inc adc orb adc or mov ljmp and mov cltd dec add maxps loop outsb pop and iret xor cli cmpsb mov xlat data16 adc pop mov and mov xchg decl jae xlat out mov pop mov dec scas xor cli stc cli test pop mov ss sub and pop call rcrl sub addr16 xor fistpl sbb and js xchg pop or xchg pushl aad mov xlat in mov icebp mov pop idiv sub popf jge stos mov jb mov push dec jmp icebp push add test sti lds sti jecxz sub push pop cmp lcall out ljmp lahf aam loopne adc dec (bad) ljmp pop mov outsb mov push xlat push inc lret xor xchg pop outsl imul add or pop insb mov leave inc pop and aad fistp dec test fistpll (bad) lock aam scas lret xor push mulb xor neg pop push xchg lret mov daa ljmp and dec ljmp pusha mov push mov or pushl das je pop add in xchg and daa inc into sbb fbld dec pop stos sub mov xor adc mov out xor lahf insb mov scas stc adc sub ljmp aad clc push xor mov jge test out lret add mov mov pop ret jmp loop xchg popf jb pushf jne mov add or inc into push xchg lods addr16 xlat mov push test ficomp lods mov cmp cmpsl mov push add insl (bad) movzwl jle imul ljmp nop mov gs add pop inc sub add dec mov das xor movsl test lds (bad) xor aam scas (bad) add push call push daa fdivr xchg insb push pop pop leave add in addr16 add sub fs lahf repz out adc sarl jb push inc lock idivl add pop stc cli sub cmc push dec and arpl sarl pop push mov xor cmp fbld rolb divb hlt sarl jp outsb enter sti dec mov into sub leave sbb lcall pop out dec mov lods fld lock mov scas cwtl test mov int3 mov out jns pop lea dec aaa mov (bad) fisubr and xor cmp cs add push push jp add cltd int and pop repz pop std push dec xchg loop flds (bad) sub push popa fwait (bad) jle js mov imul xor dec inc repnz rcr add sub mov push xchg xchg out sub shrl or cmp fnstenv adc mov cmp insl and or inc xchg les cmp into sub add pop in loopne loop sbbb imul shrb inc inc or or pop out adc imul mov scas lds fwait pop mov mov mov xor fldln2 and lods sbbw popf data16 popa inc rorl lods or xchg push popl std and pop mov (bad) dec cmp clc cmpsb cmp add (bad) out mov (bad) iret cmp (bad) (bad) icebp popa outsl mov sbb dec test or mov cli mov mov sti test mov add and into popf pushl pop std jno xchg rcr add sub mov dec mov mov jg imul sub adc sub add and loope xchg negl xlat mov sub jne xchg push sub lcall lods adc scas mov pop mov scas adc xchg mov jmp push cmovns in nop mov gs bound cmpsl fstps loop call xor add sub or add push std adc popf lcall dec loope,pt cmp out and dec (bad) repnz (bad) ljmp lahf flds loope stc leave fnstcw adc mov fldenv (bad) ret jbe imul push or push push leave dec outsl hlt push es adc push sbb imulb mov mov or sbb mov scas and aad in and push aam or imul call sbb out cwtl ret into xchg push push jmp xchg out (bad) mov xchg push xor daa test add cltd push loope sub rolb ret add ficompl es inc gs mov iret mov jl ret shr insb lds adc test popf daa iret push mov xor sbb mov sub and push leave fincstp mov lcall mov sbb sub rcrb pop iret sti xor cs sub sub divb add add imul xor and dec and out jne mov les in fmuls repnz pop lret and add sub sbb cmpsb rcrl xor call push sub pop into popf sti inc ret fldt in rdtsc scas jne mov and mov (bad) lock cmp jl adc mov sub add xor addr16 or ficomp push leave ja mov dec je adc mov xor (bad) sub int pusha cmp mov mov (bad) mov stos mov pop add int3 fsubs dec fdivp mov icebp orl popf push dec sbb adc out cmp xchg or (bad) clc hlt mov gs in stos push cld out mov fdiv pop (bad) and and xchg ret push xchg fmull adc or pop jne push mov and sub sti inc or cmp jnp mov call jp mov cmpsb cmp call (bad) cmpsl cmp leave add fbld daa std sbb je and jbe push mov fcoms or pop dec xor stos sub sbb lret repnz in mov out mov push loop xchg adc sub sub push push jge repz mov (bad) divb clc pop test lahf adc mov scas aam and xor sbb fisttp inc sub push jb lret push or mov fprem1 xor or pop adc fmulp rolb and imul lret push sub adc xchg test jne or scas push clc mov jb repnz jge jp inc pop xor popf jge cmp jp mov (bad) add or das negb pop add pop add jecxz mov stc in (bad) out gs sub mov cs imul sbb shl add mov mov sbb (bad) cmpsl bnd icebp aad pop mov adc adc movsl aad jmp jb xlat test mov sub inc sbb decb int test out mov mov adc ret sbb mov (bad) fscale cs add inc pop mov mov jge pop ja test popf rcl shll (bad) sbb cmp or sub sbb fmull sub inc gs loope push bound or mov inc adc lcall out cwtl mov jp jb push adc mov mov pop lds or fist outsb cmpsb fs push inc mov xor add add xor xor ret dec icebp mov xchg pop cmpsl xlat sbb mov and jge adc je leave jle insl cmpsb arpl idiv and (bad) jne pop pop or ret outsb mov sub and adc rcr ret lods mov xchg cltd adc lret outsl and test add stos repnz rorb cmc stc mov bound loope out mov pop jbe lahf push mov fsubrs icebp cmovo inc add push pop pop lret fsts out pop push dec loop test mov fnop sub jg fs repnz out and mov int3 addr16 ret int3 fdivs popf out ret lock jl imul dec gs out fadds repnz enter lea mov push movsl inc loop mov ljmp loopne fidivrl div sahf sti insl ret sarb dec xchg xchg jbe into scas mov mov cmpsw jb jle xchg gs xchg and and stos push mov sbb mov xchg loop ret or les jne lock cmp lahf jbe push sbb jae outsl loope and jns leave incb push sti aad dec mov push or scas test or mov mov xor jno imul pop dec lds mov stc into cs mov jmp inc or push adc (bad) sbb mov paddb fstpt mov mov loopne jns dec or mov (bad) bnd adc pop mov xchg fidivr push es pop push lcall imul leave (bad) mov icebp movb mov sbb xchg inc pop ret mov xor mov and jg cmp sub sub mov push sub xchg rcr jp lods jp idivl push sub mov sub jmp pop mov iret mov pop and (bad) idivl aaa xchg sar int3 imul mov add pop push add bound data16 incl and ljmp dec and iret lock or (bad) rol push gs xchg lret cli sub jg lods jae add lahf aam icebp sub push leave leave jl pop sti lods icebp sarl mov sub in jmp and rcrl nop mov aaa xchg aad sub lods cmp icebp imul sahf jmp add ret sbb sub mov adc and mov push movsl sbb cmp and dec mov push imul jne std sti pusha and mov sbb pop stc pop sbb push dec inc fist sahf mov idivl repz jmp mov pop andl push mov negb scas jp pop xor xchg fnclex sub pop cmpsl enter lds mov mov gs cmpsb mov aam mov inc adc pop sub mov out scas xor std leave sub or div mov roll gs int3 clc lret push sahf popf fist repz ds mov sti jae daa cmp loop pop or mov (bad) dec loopne xor mov popf jge in cmpsl jg cmc jo loope mov fs xor ret mov mov pop adc xchg bound xchg mov mov mov mov fucomi in pop lahf imul mov cmpsl push mov xchg adc jmp in cmp xlat mov sub xchg lret push jno imul movsl aad xor lods (bad) cmc mov mov mov mov sub jecxz pop xor mov mov roll sub or (bad) repnz add pop scas mov jmp jae out sbb xor scas jge sbb mov repz fs or sbb ss cs xor cli sub xlat jnp dec stc out ljmp mov outsb push sbb pop dec repnz xlat imul jae sub adc pop test outsb dec jno popf fidivr es repnz add mov (bad) and and jae lock iret jbe pop jmp dec fnop movsl divl cltd cmpsb xchg xor cmp or mov je sub andb (bad) push sar pop je stos neg sub sbb popa popa out cld (bad) mov mov mov out movsl es sbb hlt dec icebp pop mov leave sti mov (bad) cs (bad) pop cld andb cld jbe push mov jg and add or pop gs sub push (bad) pushf movsl std adc nop dec cltd (bad) les xor sub add scas or jnp imul leave fmull pop jmp lahf sbb ds cmpsl ljmp xor xchg xor out xlat mov imul loope fs jbe push dec ss std add mov and data16 mov adc adc push adc or rcll jo mov cmpl clc test daa int3 xor mov fsts stos dec dec divb sbb icebp int mov lahf lock push rep dec mov or adc cmpsb adc es cwtl or xchg call adc mov lahf and dec jge in stos inc pop ret in xchg sbb push mov sti mov scas sbb push scas mov adc aaa hlt cmpsb sub sti lret inc pop cmpsb test scas cltd xchg cmp (bad) lret pop push call sub mov xor lret add mov xor jge data16 inc (bad) ret andl push fsub dec pop frstor jp push sub std test (bad) sbb (bad) mov mov repz xchg decb add (bad) or idivb aam test mov in daa dec (bad) cwtl das (bad) mov or mov cmc xor mov inc fcomip (bad) push loopne mov ds adc subb leave adc popf sub push and mov fcoml cli (bad) or stc or je ljmp enter or (bad) ss pop cld (bad) fisttpl sub mov mov ret cld sbbb sub xchg imulb add gs adc fsts dec cmc inc jns fist stos lret bound sub and inc hlt test imull xchg in and (bad) out out sub jg cmovg mov add out xor adc mov dec std sbb sahf mov test cmp add push sub cmp jp icebp push ljmp add pop sub fldl movsb xor mov mov sub mov stc sub push leave mov je pop loop je push inc (bad) and xchg lea sbb aas jg sub push mov loop stc pop imul add push (bad) ja js pop out sub out je jmp pop mov cli sub cmp xchg adc fs and cmp jo and (bad) push add xor dec sub jne jmp or sarb sub outsb push hlt rclb js (bad) xor inc negb inc jmp mov mov inc mov addr16 sti bound fucom inc cmpsl pop test imul xchg (bad) sub push loop sub es fcmovnu push or inc dec rorl icebp in mov jmp mov xor out dec notl adc jmp xchg or dec iret aad fist and lcall jle imul mov xchg pop loope (bad) loopne scas dec pop xor das repz or and push sbb mov lret jb pop ret out (bad) xor pop xchg not xchg cmpsb cmp lods adc mov cltd inc fstps mov scas push fisubr daa repz adc mov push mov aam xchg pop loop mov jne mov notb add or sbb jbe fs lcall stos fsubs xor mov in into mov pop lods or jmp xor jb mov insl les mov mov mov cmp or insl orl push jo loope pop xchg inc sub mov xchg lock mov mov xor adc in daa mov maskmovq idivl data16 adc or dec into mov out mov sub fisub pmullw loope or testl out out jbe cld bound enter xchg out pop mov sarb or ds scas push ss mov (bad) mov xor jmp ret in mov jne and cmp adc xchg adc (bad) jecxz (bad) int add pop push std xor leave stos sbb push (bad) out ljmp lea cmc push test or movl mov dec jmp jae add cmp sub xchg (bad) imull xor daa imulb jbe repnz or into imul sub xchg sbb popf dec (bad) cs dec mov jecxz push mov xor and pop lods fnstcw flds sbb in cmp movsb or into jg jecxz xor jg ret pop xor adc and xchg jno lods pop sar std scas repnz movl in cltd out ficompl (bad) daa in popf mov fwait mov jb adc sub leave and sbb cmp mov bnd mov sarl sub xchg in add mov pop sar push ror mov dec testl lret pop add mov inc push movsb lea daa push or gs mov mov dec out aam test inc push add mov add inc xchg inc inc fildll cltd xor imul lret mov ret call or mov or das lret jecxz pushf xor adc sub (bad) cmp imulb movsl dec push rolb add xchg cltd jl sub xchg dec add and jle popf xchg mov jnp (bad) pop jge mov lock fcompp pop pop rcr adc out mov dec test xor sub cmpsl inc adc mov not xchg dec (bad) ljmp add mov xor leave ljmp out push and or rdtsc ret xlat push xor psllw inc ljmp sbb mov sub and out push add jg mov xchg push mov gs pop in fistpll jno outsl pusha xor jbe add mov add loope mov sub push fdivl (bad) in xchg getsec aam inc sub das imul movsl cli pusha loop mov mov stos fstpt mov pusha hlt mov ret sub scas inc sub add lcall call int3 and jmp or mov cmpl or jmp mov icebp mov xchg popa dec imull xor scas cmpsb fimull cmc xor xchg xchg jbe imul adc mov out fdivr add pop (bad) xor mov push push loop push out shll notb ja xchg xor push adc inc push pmulhuw fs imul fnstenv mov insb pop movsb inc fabs cmpb inc mov call xchg movsl pop mov lods iret dec jmp or test enter mov icebp jbe dec in test sub mov jg and adc mov pop and add ja js xor faddl mov out jns sub push xchg arpl lret ja pop outsb data16 add aad cld outsl sbb xor cwtl and nop adc push mov aad and or adc xchg out lret sub mov std cs and ljmp in xchg lret mov sub mov mov aad orb and cmc inc pop mov aas ret popf sbb (bad) sub sbb adc mov fildl dec mov add or jae mov (bad) jg les mov mov or iret xchg mov cld lret sbb dec dec pop mov rol and adc add or jle daa jmp mov pop or pushf dec and or roll loop add and negl and movsl sub adc lods mov idiv mov dec mov and fdivs pop (bad) or ja mov test sub lds add icebp daa out pop lret dec or (bad) xor in inc pop mov pop add mov cmp mov iret cld adc mov dec push sub push insb ss dec inc insb shlb pushf jmp push push je add (bad) ficomp cmp insb in pop lahf cmp sub aam inc push mov sbb hlt adc jne aas cld mov call xor mov or and mov outsb nop mov mov movsb mov add mov dec repnz mov mov or mov or jb iret push mov jns inc (bad) scas repnz xlat mov or (bad) mov dec adc inc fstpt jmp mov sar test mov repnz add sub pop lahf jnp pop add (bad) mov out mov negl inc shrl ror mov adc xchg xor test push pop push test (bad) imul clc sub leave sub pop pop test pushf lcall es add sub into aas repnz nop inc pop leave popf cmp sbb movsb or xchg jle out inc pop adc fildll and shr mov data16 les faddp call pop sub imulb mov add test sub inc arpl jl push (bad) icebp outsl sti dec sbb mov ja (bad) and call mov into clc iret mov in cld xchg nop leave sbb loope inc das or pop push push jge pop mov mov sbb xchg pop (bad) (bad) push sbb (bad) (bad) fldenv dec pop push call inc rdmsr push push je lahf dec xchg mov out aam ja jle push jmp mov lds stc xlat push lods jmp and sbb cmp cmp pop fisubr test repnz lds xchg loop push stos add push imul ds repz adc int scas mov xchg dec xchg (bad) fnstenv and lds jb and stos and xchg cs ss mov cmpl out in dec out push shrb add loope add lods scas fsts adc pop jge inc out lret (bad) fs or fsubl adc sbb out incl das (bad) aam pop cmpsl push add sbb aam push mull pushf or iret mov and mov sub mov add movsl test inc out sub push adc loopne test xor dec dec mov mov in test shll fnstenv sub or dec pop (bad) daa test loop (bad) lea sub das dec int test dec lods stc daa jmp jno ss les int and imul cmp ud2 jp inc or push adc jecxz or inc xor push loop fucomp xor or mov les sti mov and pop xor scas mov dec jns add out fsubrs mov shll sub iret fmul pop and pop xor out dec stos popf jnp xchg ret (bad) iret in lahf mov xchg daa adc mov lods pusha ror cmp dec icebp scas sub or jecxz out inc xor push mov movl and pop add xor lcall aas das xor sub push (bad) jno ds lods push dec test popf mov dec lods cmpsl sar pushf or pop incb loope sbb imul xor mov aaa or pop stc dec imul hlt shll divb (bad) repz flds cmp or and (bad) dec sub add loope mov stc shrl repz dec dec hlt jge (bad) xor imul lret shrb nop outsl or lahf add shr (bad) dec scas mov dec xor pop sub daa and lcall sti jmp dec sahf mov mov repnz gs leave std (bad) aad repz (bad) addr16 leave fcomps or test je lret mov jl jp insb aaa pop fild pusha pop xor or inc jmp or push lds f2xm1 out jno cmp dec je scas loope sub jecxz lock xor lods sti movsl repnz add push or repz ljmp and pop enter adc add mov cmpsb sub sbb sti sub lret mov inc mov fsubp cmp scas test ljmp xor cmpsb xor fstl sub rolb mov cmp and loope mov push jle mov jp mov mov movsb xchg inc fwait (bad) ror ret push (bad) imull cltd and xchg int3 imul push pop in jnp mov pop and gs xchg ljmp ret notb mov mov negl sub movsb call sub call pop sub shlb inc mov mov scas (bad) iret dec andl ja inc adc xchg scas stos adc adc gs lret shrb xor sub push movb or out xchg adc mov ret lahf fsqrt dec jge inc into dec negl out scas push mov xor cmpsl pop daa sar jo or add adc mov push and adc cs (bad) pop (bad) or cmp mov shlb mov ljmp js stos xor jmp inc xor mov xchg fsubrl jge mov add jecxz pushf lret add jle jmp fldl add and repz sbb or faddl mov fildll inc fistl rolb cld adc mov and sub in inc repz pop movsl inc push sub xchg das xor lods das sub daa lods sar lahf jbe jb gs cmpsl xlat adc mov xor fstpt xor mov lock stos fdivs mov push clc lods mov leave shlb push jns sub sti jbe mov outsb cs sbb ret sub imul in movsb movl bound pushf xchg jmp sub mov cs (bad) or fwait dec ret insb fimull shlb jmp (bad) xchg cld push out imul sahf jg testb neg bound mov dec outsl dec in jb xor adc mov mov push aad xchg decb cmp jne popf mov (bad) imul push sub mov xchg icebp inc sbb cmp mov pop imul push adc mov add xchg push mov das mov lock jbe imul pop dec fstpt or mov cmp loop xlat push fwait adc or (bad) fst mov (bad) push and xlat push push nop adc mov adc (bad) adcb shr into cs add inc je cli cli sbb es mov xchg sub push ficom or adc cli insb jp xor mov (bad) sub in out cmp sub or (bad) dec pop mov jne push pop xor les shr jb or mov dec cmp inc rol loop xchg mov xor adc popa call fisttp adc out pushf cmp xchg movsb pop repnz mov xor and and pop xlat repz cmp repz ret stos gs scas fdivrs pusha push fucomip lcall mov fisttp (bad) out lret mov (bad) push xchg pop lea jp adc pop adc (bad) push pop jmp mov gs scas push (bad) (bad) lods shll sbb icebp dec dec hlt and icebp pop pop pop lahf pop and int das int cmp jmp rcll ljmp iret popa sub jp sarb adc mov movb sub sub add and sub mov push pop pop loopne sub adc int cmp xchg scas mov mov sbb jne fs jg dec cmpsl stos mov xor sub jge cld jmp ljmp or out push (bad) cmc ret idivb mov mull mul leave dec xor push in movsl aam ret dec mov push loope outsl je cli icebp mov icebp mov pop push leave fs sbb int xchg pushl stos mov mov imul ficom jnp (bad) lods inc xchg clc (bad) dec jmp out push add (bad) icebp xchg push push add lods and negb std dec lahf cmp mov sar fstl cmp ja (bad) adc scas inc or mov adc stos lret mov scas mov inc xchg ss lock cmpsb push xlat mov (bad) xchg sub xlat cli (bad) sarb stos call sub xor and ss mov pop add shlb xchg push (bad) out mov out push xabort mov add div out sarl test loop xor pop and fsubp push (bad) pop das push pop and jge stos lcall ljmp and data16 xor and out int3 lahf lock xlat sbb mov dec shrb je dec icebp std xchg or mov mov adc (bad) cmc xchg daa mov nop jecxz add out push out cmp mov push cmc mov or (bad) dec fidivr test jne adc inc cs pop clc sbb dec stos mov repz insl and clc and sub fcomp nop repnz sub mov (bad) xchg sar cmc xchg mov cmp mov repnz jnp (bad) leave call test mov in adc sarb decl inc mov lods xchg popa push (bad) pop mov lock lcall cmp out xchg fsubrs rolb cmp out xchg fcomi sub add sbb addr16 (bad) fcoml bound fstl sub xchg test sub sbb and cltd xor mov sahf icebp (bad) idiv inc iret out pushf sbbl mov adc fbld pop out fs mov xor or or jmp add sub cld inc (bad) fisubr callw inc add or or (bad) xchg data16 gs leave out xor pop mov lea jo mov mov sbb clc or jmp jno leave je (bad) icebp mov jb aaa jg fcomps shrl (bad) or push and cmc sub cwtd sbb xchg adc push ds push fisttpl adc push push adc mov jb pop mov push rolb cmpsl pop ficoml pop icebp and movsb and lods push movsb pop mov jle cli ja mov and repnz mov std out pop sbb loopne pusha mov mov ja pop inc mov (bad) mov out loop rorb sub mov and outsb and sub jb dec sbb mov xor leave js pop fimull into push xchg cli fs mov imul pop sbb adc loop repz jl cmpsl sbb sub call call adc sarl insb push mov leave ljmp ret rorl pop xchg lods std xchg pusha dec loope mov cld inc rolb (bad) xor in xchg jecxz out push lods cmp dec lret dec dec cwtl pop push mov (bad) jne pop xchg fdivp pop sar inc aas popa dec ret pop cmp mov or in xchg cld dec movsl hlt lcall imul add notb jnp sbb (bad) sbb scas je in add (bad) mov jle pop sub pushf test push mov xchg aad mov pusha mov add fisubr idiv test and (bad) dec sub test cmp ds mov ret imul dec pop stc inc imul adc dec out cld mov bound fstpl push out sub sub das pop es popf lcall xchg bound dec dec into ja jecxz ret cltd add int3 out pop cmp jmp lret or xor pop inc add dec cwtl push jmp add or iret jbe vcmppd icebp ret inc sub push add add call (bad) jle out sbbb or int mov dec or cmc mov scas stos iret pop jb lret mov add mov lret cmp adc sub (bad) dec adc insl jne dec stos xor ljmp xor cld inc jne rorb mov push (bad) iret dec xor mull cmp cs iret ds add int3 mov jne mov dec int jp lods loop adc xor pop pop stc gs neg mov and ret loope and cld cs inc stc daa sbb orb cmpsb sub (bad) out shlb pop out mov cmpsb pop fcmovbe xlat lds sub punpcklbw add xchg imul ret or xor xor pop xor or test (bad) xor dec push mov pop sbb ljmp lods imull popf xchg int3 add jge ds and lret dec and dec cli ret jl push adc sarl mov cmpsb leave out and add xor fadd xor fsubrs mov cmc push xor sar (bad) mov cli mov mov pop pop mov push stc out into test jg mov pop or cmpsl lock sub rorl or leave jge stos ljmp (bad) decb push and push sub jl rolb daa idiv xchg pusha pop (bad) test in mov enter scas fimull xchg pop mov cmp fisubl xchg cmpsl jecxz pop ror sub jl mov push out stos cmp sub std adc xchg lock dec (bad) (bad) fnstcw xchg dec out (bad) loopne clc aaa hlt xchg push mov imul out rcll add into std loop repnz jle stc call add pop loope fildll cmpb add sub xchg leave mov dec stos ss lcall out adc mov pop mov jb pop push adc das into sub push cwtl stc mov sub mov test ficom mov pop xchg push jmp sti jge jg mov push jns dec pop cltd sub sub mov insl pop into add test adc repz mov popf xchg iret dec aaa scas fnstenv lret aas sub fisttpl lret (bad) add bound xor leave rolb jne xor movsb jecxz adc add jmp mov push jmp sub push lds push add shl loop lcall jo xchg xchg xor cmpsb lock rorb adc divl xor sub sub loope mov addr16 (bad) cmc inc loopne ljmp or sub rcrl insb add pushf or (bad) and mov out repnz xor sub fwait jb fistpll sub (bad) mov movsl fs movsl xchg cmp shlb push xchg xchg pop mov mov sbb outsl sub sti mov pop mov push mov push and sub jne cmpsl jp adc lods xchg out xor lret mov leave mov sbb outsl mov roll fidivrl shrb out jmp mov stos jecxz and jg xchg (bad) clc dec or xor sti loopne xor push (bad) (bad) mov inc mov aas (bad) push out cmc push push outsl stos (bad) gs lret mov adc call add mov or dec dec and sub call je sarb enter push in scas inc leave popf js pop or into std call add cmp stc (bad) fildll add pop hlt cs leave outsb mov js xchg inc or xchg test adc cwtl (bad) fistl in mov je mov or add movsw mov jo sbb adc dec (bad) xor jmp cwtl idivl sti cmp out adc dec push pushl adc inc (bad) fldenv cmp imul mov jno xchg push repz loop outsb pop gs xor dec flds adc pop and xor add aad pop lcall jae and out scas dec dec add in in icebp in sub xchg sub adc jge cltd loope pop sub lret stc (bad) js pop sbb fcmovne ret pop in and rclb sti sub mov imul lret movsb pop test mov jne repz add shll fldcw aaa fld jp call (bad) icebp cmc jae xchg and pop mov xor lahf dec (bad) daa ljmp shrl dec lea mov mov jl pop rcrl mov hlt mov add xchg lods sub lahf pop ret in sbb fnsave lret out sbbl (bad) push dec push pop push cmp jg jne dec push das movsl push testb adc repnz mov mov sub pushf mov push (bad) fcompl insb adc fldl arpl clc inc dec cmpsl and cld dec lret int cmp jmp movsl mov call mov stc jl outsl jbe mov jbe repnz test fstpt pcmpgtw sbb shll sub out stos in cli in cmpsb rorb pop cld loop cli pop xor jge mov push mov ret gs mov in daa cmp mov push inc and ljmp cwtl add push scas xchg pop push mov mov insb xchg popf nop (bad) xor cs and push lret ficom lock mov aas in cltd xor xchg sub pop aad cs les xor sub roll sti repz dec out or jo loope mov popf std mov jge push xchg js test fsubrs sbb pushf aam sub mov pop mov jle jbe push test lret and push call sbb mov rcr mulb add push push and mov divb out pushf or ret mov pusha xchg rorl sub push sub add sub cli rolb iret sub sub repz inc sub pop xor and lahf push mov sbb insb fisttpl mov repz test sub sub mov or xchg jle imul shrl xchg mov loope loop fs mov adc movb pop xchg pop jmp hlt dec loop pop gs aas movsl (bad) repz mov cmc shrl xor out pop add push add xchg ja hlt and lret pop (bad) mov or dec jmp mov rcl icebp jmp pop mov mov int xchg jo stos sub add sub mov push mov stc or and dec ret sarb jecxz mov push pushw mov fcmovnb sub pushl mov xchg (bad) je mull mov loopne divb push mov andl mull daa fcomps pop loope mov icebp mov xchg or jmp dec mov cmp pop mov popf and cmp iret sub sub add push xor (bad) rclb mov fidivl add roll and add fild add mov sbb shrl out (bad) movsb repnz sub lods push pushf sbbl mov daa into fstl xchg scas popa out or imul mov clc inc loop std out pop dec or xor jp sbb push ljmp leave repnz adcb jmp test movsb imulb cmpsl roll push aas sub sub sub mov jmp inc (bad) inc imul scas cwtl xchg xor or push (bad) cli lods clc pop lods jp mov ret rclb daa mov push sub or adc cmp fs add xor fstl jbe add mov lret push nop mov popf les cmc les and ret test or mov (bad) push cli ja pop ds jb insl imul jmp sub sub stos ss adc and push push inc dec mov mov imul (bad) loope repnz loop xchg test mov clc xor push imul std test popf fsubs loop pop mov xor out jl lahf fsubs add out stos repz (bad) xor pushf cmpsl cmp notb jge repz xor ret (bad) popf add dec jl mov sti mov bound call xchg jnp daa shrl and mov jmp in adc fstps pop xchg dec mov xor ret mov add (bad) mov push cwtl cmpsb mov inc xchg shr push loop pop xchg sbb adc lods lock dec pop mov ds mov cmpsb movsb xchg pusha add fsubl das push mov stos cmpsb rdmsr adc cld or xrelease repz in out push cmpsl pop and mov xor jb daa icebp add push or popf ret nop xchg add push aam insl sub jmp cmp add ljmp gs loopne (bad) popf xlat push and push add jns mov bound ficomp rolb mov mov shrl test push lods push shrb cld xor pop push loop (bad) out lret xor mov cmp mov sbb add or stos je scas (bad) stc adc iret push and jo loope cmp push mov sbb xchg and xchg lock pop into mov cmp mov (bad) xchg mov movb rorb and mov fisubr pop clc das mov leave and fs lcall (bad) mulb xchg or fildl shrb cmp mov mov leave lret daa fcom mov dec into pop mov pop adc or mov inc fist jmp push out pop test movsb out or popa dec or push rorl sub pop cmpsb loopne push dec push and inc out or pop fidiv cmp add cmc xor add and jmp mov out flds sub (bad) pop mov aaa sbb dec (bad) pop popf lock shlb or add lea popa fldcw mov xchg cmc xchg out out (bad) mov or jl and sub (bad) push and xchg sub push cmc int3 sarl mov int3 data16 pop in jl xchg push movsl push out popf lcall sbb imul add leave insl mov (bad) (bad) std inc dec sub das (bad) mov sbb inc xlat inc bound jo xchg dec stc mov clc (bad) mov or cld es pop jno mov iret dec stos xchg push movsl sbb daa xchg push mov mov xchg (bad) xchg mov out stos cwtl and pushf loopne sub adc mov mov add mov adc cmp (bad) sub jnp or (bad) int xchg jg jp sbb rclb sbb jg dec mov fistp xchg sub sub xadd movl sub push popf and pop repnz xchg out sub jp mov jecxz roll loopne mov sti out in pushf push add and jno or outsl mov pop (bad) imulb mov cmp jmp cmp jmp sbb sub dec out out (bad) cs lods adc lds push and mov aad fwait mov and fincstp dec mov sub add pusha mov ret pop (bad) add push xchg (bad) push xor sub xchg add jmp mov aas pop out mov stos sub je out push outsl mov jns fs dec sbb cld push fucomi sub ret (bad) shrb xlat pushl xor popf aas cmpsl shl and mov fcomps js mov notb clc add xchg mov sub loop xchg scas adc loop mov ficomp pop push mov lods mov or out dec sbb rcl inc into cli cmp das adc jnp xchg dec leave push orl inc pop jle (bad) out mov dec cli sub divb lock mov mov and sub aas cmc xchg jg leave sub mov adc mov jne or rclb mov push gs pusha test test les mov push adc sti mov and xchg fstpt mov sbb add jmp hlt pop xchg js push xchg int pop ret adc scas mov mov pop out notb xor sub aam jno sub iret sub xchg inc or popf in cmpsb gs pop (bad) out in das in pop add dec and adc mov pop ret repz xor in cmp fstps mov mov daa jo xchg push fisttpl lods mov xchg lret mov push push mov movsl fsubrp in jecxz and cmc mov sub add lds and pop (bad) (bad) or dec xlat cli lea mov dec lds dec scas sub or das adc pop out lcall sub xchg sbb pushf dec or mov inc dec pop mov mov lods sti repz and cmp inc popf loop inc popf subl sub mov mov mov jo les cmpsb call test push or mov out (bad) (bad) jl xlat inc cmp ja pop out sub icebp bound mov adc sub test mov mov lahf inc or loop bound push dec std pop dec enter rolb dec icebp call add push mov ret (bad) cmp mov fldl jae xchg out mov or stc xchg mov sub dec jo dec lret or mov cmpsl aad mov inc repz adcb xor mov das pop and movsb inc xor dec ret dec adc push push adcl xlat cltd movsl (bad) jnp lods shll and pop add xor clc xor (bad) xor sbb dec or jmp and (bad) xor lods sqrtps in xlat fldcw sahf adc push xchg test pop mov pop lea and loop or mov div (bad) sti dec jmp add out or lahf dec lret int3 test jmp cmp mov rcrl (bad) cmpsb fbstp sbb mov daa dec mov add aas es leave ja mov push pop pop jecxz mov mov xor shlb out pop out adc inc xorl in mov mov ljmp jmp pusha das sub add daa sub push out dec mov imul pop mov loope jp lock ret repz add aaa or jno xchg push pop daa lods clc int iret mov dec (bad) jmp mov push aas in sub mov int3 pop fist or pushf ja xor mov xlat mov xchg cwtl pop xor mov out push xchg rcrl pop aad ret das ja addr16 mov pop in test jne xchg lods iret xchg scas mov or icebp lea lahf xor inc push outsl sub pusha loope fsubrs jecxz inc sub add mov loop mov mov jno fs pushf pop pusha dec repnz xlat scas sub mulb into mov mov mov xchg aad mov xor inc repnz and daa in mov push stos sub mov enter and rol xlat cltd stos and out icebp pop rclb fnstenv loop xchg lods pop les mov jp ljmp add sbb sbb int (bad) es sub mov fmulp in ljmp stc cltd fs test test jne fisttpl call mov jnp test xor add and sbb sub mov daa push mov (bad) cmp (bad) sub xchg bound and fsubp in mov pop or lds sub fst push sub and mov repnz mov in repz rcl mov xor push cmpsb and sub mov in mov sub push xor loope aad out jl adc call xor sub add jbe jae mov shll paddw push out sub push inc lods dec pushf sbb (bad) and dec adc inc mov add sub cmpsb lret jle out mov or or dec into mov mov dec ds (bad) dec sbb movsl pop jle fs and mov mov sub adcl or mov mov xor sub test pop cli jb or jmp mov jne pusha fsubr sub xchg repz mov push imul xor sub je je push or dec in pop out xor mov push xlat call fcomi out rorl imul test pushf mov mov loopne ss out xor stos idivb jecxz pop (bad) movb ds sti dec mov fnstcw dec sub inc arpl into pushf popf loopne jmp mov jmp out pop pop mov inc mov rcll ds mov lock sbb mov sti adc mov mov adc cmpb lods and scas imul fsubs xchg xor pusha inc xor mov xchg mov mov std pop mov sub xor and jle lcall sub jge scas pop pop insb imul out sub daa gs xor add cmp out sub daa add jle int3 mov icebp or (bad) sub pushl mov mov xlat adc out fadd sub ds repz add nop flds push aas mov into mov xor jg movsl mov fsubr lock iret cmp and push fdivrl push inc cltd add shll lret fs add sbb mov add mov fbld jg pushf inc roll and into cmc (bad) jbe or or stc ja push jecxz push mov sub mov xor xor mov sarb pop insb sarl clc fisttpll nop lea cmpsb sub add or xor xchg push mov (bad) bound sub imul mov lret out lret rorl sub (bad) mov aas (bad) sub dec daa pop dec cmp fdivp das ja add sub sbb loopne sub das test cld sbb gs adc out lret jb mov jmp mov gs loop pop and xchg repnz cmp lret bound pop sbb mov inc fdivl sub xchg ret cmp pop out scas sub and dec and mov (bad) mov xor adc repz xor and add stos sub jp xor sub xchg lret and out pop insb lahf xchg rcr sbb dec stc rorl inc xchg push icebp sti jbe cs add clc leave pop add jecxz ret adc cmp shrb out mov adc data16 sub pushl iret aad xor out sub xchg clc fs mov rclb add xchg or adc stos mov out jno ret cmp repnz test (bad) mov cmp scas sbb pop jg lahf cmpsb adc ljmp cwtl adc lock out int3 scas mov mov idivl (bad) mov sub mov mov imul dec mov and mov daa adc sahf adc cmp setg cmp dec pop imull fnstcw scas xchg push test add push inc cs sub xor pop xchg jnp add das repz pop xor stos sbb or adc sti jge or fld1 mov jg sub jnp xor mov sub into insb add mov dec dec mov daa adc sti adc sub jge cmc cli add sahf xor mov pushf ljmp or xchg pop xchg test cmp mov rcrl xor adc xchg std cmp int enter add or and mov sub mov add test in dec hlt les andb into dec cmp and ret cmp pop push negb out push inc sub test mov icebp repz daa add fpatan xor jb neg gs cmpsl lcall (bad) outsl push sub inc lods add xlat add neg pop xchg lock inc stos or sub outsl idivl loope sub cli sbb paddusw (bad) lret pop lds cmpsb mov cld dec call roll popa lahf movsl push fisubrl rclb cld and dec data16 ret or outsl dec pushf imul dec sbb sarb cmpsl fstpl movswl mov mov loop mov pop mov add ret pop push arpl sti (bad) scas sub mov inc into xor xchg push jge lds stos or (bad) dec (bad) test movsl lods (bad) pop lret mov sub jmp xchg add sub cmp jle in stos mov stos sub fnsave lds ds popf inc insb lods dec icebp mov cs lods pop jnp add nop jne pop inc (bad) (bad) sub icebp mov sub cs jg test mov lods sub popf int3 and lret sub xchg ds (bad) scas and pop (bad) dec test sub jg les sub test inc and pop (bad) icebp sti add jmp mov pop faddl dec jl test add sti fs sbb rorl jecxz add iret add data16 mulb (bad) push cmp pushf cmp adc loop xchg mov or xchg js inc sub pop xchg stc or addb xor call jnp (bad) mov cmp push xchg pop icebp dec xchg push mov pop pushf xchg decb xchg notl or mov adc std jne scas loop shrb or fidivr xchg pop push mov push test mov xor mov aas pop out cwtl cmp add arpl mov pop xor dec das xor adc jp sbb lock or insb test out sub or mov sbbb fcmovnu mov movsl cld leave push mov push loopne enter and cmp sub xor mov mov daa scas (bad) xchg adc mov mov (bad) and lret pop pop imul sub outsl fdivrs pop mov pop sub add xor mov pop cltd mov sti je leave xor xlat push lcall push xor cs adc push jmp or add jg icebp cli fs sti out and cmpsb lods inc sahf stos cmp cmc cmp movsb out in mov (bad) (bad) cmp mov pop sub push cld movsb and cmpl xor xchg xchg sbb jg cmp cwtl je out xor add (bad) and mov jmp ja jl insb inc xchg adc xor lcall mov sub gs jbe adc mov jp xor pop or xorb push cmp jecxz dec test les push xor inc cmp inc and loopne ret pop outsb lret inc sbb xor inc push push andl cmp pushf mov decl pop sbb jle jp daa fs movsl leave (bad) icebp xlat bound jg xchg hlt test fs dec insb fucom out and repz jbe and daa out lds scas pop push out push mov sti and jle sub mov adc cltd sub fmull shr je out push adc sahf int sub leave adc sub add mov sub lcall pop call jge negb xchg add dec out sti sub and and aaa insb and roll mov adc and xchg sub xor loop andl sub aas or sub aas and in cmpsb and lcall sub add lret mov add popf out mov mov out ss int mov or outsb xchg mov cwtl out xchg push pushf mov je xor xchg add sti mov je scas clc mov loope cmp sbb movsl xor mov mov cli sub ljmp aam (bad) sub clc das je test iret jmp ret sub sbb mov add bound add bound mov daa pop or xor cmp push cld push mov je int add push (bad) fldt add jae imul sub (bad) xor (bad) mov add xchg aad cmp in es add cmc sbb push mov out push popl xor fst out add cmp (bad) repz jno inc and mov out pop sti fs leave xchg mov mov push sub and jmp fistpl xor test and dec and test sub mov dec pushf and mov adc lret lods (bad) mov sub or sbb (bad) sub cmp jo pop pop cmpsb lcall daa add inc jo fwait popa cmpsl jne shlb mov pop xor lahf jnp cmp sbb dec aas sti mov (bad) add xor pop add cmpsb fwait inc mov pop daa sub popa movsb out lods popa movsl sti (bad) jb push je push push ret adc adc cli lret dec dec cmpsb pop mov fstps aas lret and pop xchg mov lret pop pop ja (bad) push (bad) scas add faddl loopne push int3 imul scas mov xor xchg inc loope xor mov es hlt xchg lret imul rcrl aas lret cmovnp push dec daa adc fimull mov mov sub pop lods scas loope ljmp (bad) sub push cld aaa pop jg mov movsl sarb xor (bad) in adc scas xor mov data16 cmp stc icebp mov clc lds outsb mov xor jge xor or repnz jbe and (bad) gs fs lods xor lods (bad) jmp sbb mov mov lret repnz dec cmpsl mov and fldt shl and pop sub push add (bad) rclb js mov xchg adc or movsl add mov sub pushf and jge scas fs cmp xor shll ja les shlb jmp scas jecxz xchg leave fistpll addb mov or xor pop push xor pop in loop xchg lock mov mov dec lods sub idivb dec stc jl into pop daa js xlat or idivl stc scas xchg push pusha or idivl into add pusha sbb ficompl lods sub icebp imul mov ret stos sub fwait lods sub movsl cmp mov dec loopne dec mov pop cmpsl push out iret stos xchg lahf push mov dec out jp or adc push add mov adc pusha inc xchg mov out int3 inc ljmp stc inc leave out and or sub ja inc stc mov icebp inc push roll popa sub xor fistpll mov aas sub sub movsb inc or mov lcall push pop xchg lahf stc out int gs enter mov inc pop pop fcoml (bad) mov stos push mov iret mov and mov sub mov jg andl mov cs xorb ja add jmp cmpsl sarb hlt fdivrp out dec fcom mov in pusha test mov or or sub out mov sbb ljmp ds into ds fs stc mov jge jns mov sub lea imul adc (bad) outsb lods shlb inc pushl pop mov jl xchg mov out lret mov and jnp mov ds mov repz mov dec adc pop adc add or mov sub mov mov das ja push adc jge inc cs jmp add jle pop aad pop fisttp lods ja and mov repnz lret test leave repnz mov sbb insw mov add mov in icebp xchg pop enter repz mov icebp lret imul jecxz add test daa fdivrs (bad) push subb loop mov mov sub mov stos fwait dec das out cmp xchg negb mov bound dec jle adc lea repnz stc mov pop test pop sub movzbl mov (bad) loope mov pop jmp sbb mov insl push add add mov ficompl (bad) mov pusha or call (bad) fs jmp in movzwl adc mov (bad) jge (bad) out inc sub (bad) je pop std into pop pop (bad) scas xor pop dec out mov (bad) negb mov cltd pmaxsw dec adc push sub pop sub cs jne mov adc dec dec test notb cld mov into xorb dec mov rcl mov push mov jne enter add mov and ds mov and sub cwtl mov mov lret clc pop jbe out inc mov loope cmp mov movsl push xor (bad) xor xlat xor sub xchg inc or (bad) repnz lcall add mov inc into mov pop mov adc or mov pop out jl push das repnz imul call add sub xor sub icebp hlt (bad) jmp hlt mov xchg into gs ljmp sbb ja push test cmp cltd xchg dec and mov sbb and inc inc cli test sub xor cmp dec or out and lods cmc cmp ficomp out popa or add sahf adc iret sub push aam (bad) leave add xor xor das add in dec icebp inc aas sub movsl dec je iret dec sbb dec inc sti xor mov mov sbb out loop xchg sbb (bad) lret das push ret data16 stc sub mov into lods lock mov and lahf repnz push add pop out pop xor xor leave push jnp scas shl or push mov notb ret (bad) in movsb movsb mov dec clc lods and jbe in (bad) and das sti sub orl lock mov jg daa pop jbe jb push mov pushf aam sti adc jne dec adc fld1 jp lea push leave lret xor xchg in add jns scas cld mov dec sti cwtl push repz mov call ljmp aaa and lock lret and xor cmc sbb (bad) xor cmp out cmp mov sub mov mov imul dec into cmpsb fmull jbe fsubrs or inc out mov xchg mov mov cmp push shrb pop push jb sbb xor repz pop add push mov dec cmp inc shll loop xorb je data16 call xchg lds adc push push xlat jnp repz fimul jp mov push movl idivb stos push adc icebp mov stos call loope dec xchg adc mov sub test (bad) lcall out add cs add repz mov cmpl mov xchg fcoml gs mov xlat mov jns pop sbb jmp bound idiv pop dec push xchg fsubr outsl test mov dec call iret sbb cmp mov and xor shl pop icebp mov or or nop push popf fsubrp loopne adc aad cmp out mov movsl in inc out and push xchg mov adc pop lret jmp lock (bad) sub sub jnp xchg and add push cmp pop pop enter pushf mov or sub push fnstcw adc mov inc adc out adc adc cltd inc ljmp pop xchg clc sub jo xchg int3 movsl mov orl cmp cmp jnp adc ret (bad) pop mov out sub lods sahf mov decl nop loopne or les imul mov push imul xchg mov pop pop mov jo mov sbb xlat sti mov add add test lret (bad) xor mov pop mov or mov das dec fildll add shld jne sub mov repz jg sbb inc daa add pusha popa repnz jnp push mov insl jg in (bad) add cmp (bad) aas cli inc pop sbb adc push shr aam mov lea or gs sti (bad) dec fdivrs xor add ss adc sub mov mov pop sub xor mov dec and sbb out into shl fs push gs decl pop push lds adc aam (bad) cmp xor or add clc add gs adc dec (bad) mov dec adc test and popa mov mov xgetbv sub mov mov or xor sub cmp aad loope (bad) stc or jno add jp (bad) sub add addr16 out sub inc inc xor xchg push inc xor xlat out mov in insl mov jo jno sub xor scas fs mov and and pop mov pushf sbb repnz test push fnstenv add testl xchg mov sbb mov mov xchg mov je sub sbb scas bound dec daa sbb xor xor negb mov dec and jae pop pushf cmc mov mov (bad) jmp xor pop addb aam mov adc inc bound out xchg adc xor cltd cmc das mov and and pop mov fisttpll rclb jb xchg xor mov and xor fsts dec out and (bad) xlat out pop pop (bad) pop cmp fidiv mov jmp scas lret cmp mov enter dec dec ficompl pop test negb jo xor add aas add (bad) xor jbe (bad) mov les pop (bad) mov movsl sti (bad) out or lea inc in mov lods (bad) leave or test lret out mov (bad) fcomps nop dec repz pop popa lds dec repz ret mov pop push sub add (bad) repnz add sarb mov dec loop test sub rcrl mov mov rol popf int3 sub mov cwtl xor mov pop loop add xchg pop or fsubl leave aaa sub xchg dec lods xor fildl sub push (bad) dec jl je addr16 ljmp ret mov ljmp xor xor in ljmp adc cmpsb inc ja ljmp das pop testb xchg sti mov lods pop xor pop add in out xchg cwtl (bad) pop mov out xchg inc fldcw add iret push mov insl scas fs cmp or inc les xor rorl imull std jl add clc cmp in out xor divb mov adc inc push sub fisttpl das or mov fisttp add sub fstl call aad vmovntps jg pop add inc cmp push mov add ja pop fisttpll push adc lds fs mov push pop lcall pushf lods pushf shrb dec lahf pop out mov ficompl push push pop cld lahf fdivp pop jbe in loop xlat mov lea in push jge pop ret insb aam out mov sub js cmpsl sbb sub xchg mov push cmp jg xchg imul loop ja push xchg (bad) out cmpsb xlat adc xor je sbb ret loop movsb loope loope cmp (bad) pop popf xor (bad) das mov negb push pop sbb push addb mov pop loope sub fcompp jp sbb add jg pop test (bad) jmp push and add mov cmp dec mov sub clc stos out cmp pop (bad) mov inc mov dec scas int3 dec xor scas aas push jl xorb dec mov xchg inc xchg pop or add push jne mov mov repnz lock dec popf ret jne pushf pop adc cld popf daa adc arpl ficoml cmc or fninit into movsb mov fbld or mov in push mov cs mov push ds jg pushl and ret movzbl pop pop out adc dec push cmpsl xor ret adc sub cmp mov (bad) xor iret dec add es adc jnp int3 inc or dec lret add dec pop cltd pushf clc cmp lret rol or out dec lds cmpsl loope in mov push mov insb lret std out and jmp cmp lds (bad) cwtl lock mov divl adc pop fstps cmp out jmp sbb cmp lcall fcoms mov sub mov mul xchg push mov (bad) das cld mov pop pushf pop jmp movsl push fcomip cmp (bad) icebp (bad) pusha push fwait dec xchg mov fs mov lret mov ja pop mov xor mov mov test mov sub cmp roll jns pushf lds std sti (bad) ljmp movsl push fdivrs xor (bad) mov push push and mov repnz adc shlw adc mov out lds sub jle inc stos pop jo xchg pop xchg pop imull cltd aad push fs adc push xor mov lds and aad jne add mov mov stc or sbb imul clc push shl popf (bad) leave push in and mov sub and cmp xlat sub stos push scas scas pop mov cli mov pop loope push cmpsl jmp sub arpl and mov add mov jmp outsl cmp xchg negl push xchg add jne cmp pop stos repnz hlt call adc pop das adc test scas sub out popf or lahf sahf cs lret cs adc mov jge test out call mov mov in leave stc or mov ja and or xor aad aaa dec ljmp mul das xchg adc mov movsb sub pop pop cmp xlat push lds shlb and cld pop call push lret shlb scas push repnz lea sub or mov pop mov jno mov ret rcl iret adc mov push orb stos lret ret scas mov mov inc sub imul ret gs jecxz test ficompl cmpsb and jae push jmp (bad) pop mov pop mov pop (bad) fnsave dec inc mov leave xor cmp xor jmp jg (bad) sub adc imul addl testl pcmpgtb stos popa mov mov int xor (bad) (bad) inc bound push lret pushl dec out and adc loope inc push cmpsl pop xor mov add out cs pop out (bad) xchg notb fiadd (bad) sbb xor jecxz fldt cmp lods xlat loope jp mov or mull jle pop lret mov out xlat dec stos sbb imul loope imulb (bad) lahf (bad) jge xor sub jns das pop mov lcall stc fs mov (bad) test dec in add lock xlat mov out mov xchg out loop xchg lret pop in push xchg mov popa or data16 mulb push jae add dec aam sub pop fyl2xp1 rcl mov fisubl and inc js xchg pop decl pop add (bad) mov outsb push xchg xlat movsl cmc bound mov out (bad) lods ljmp data16 out dec push xor mov lcall call pop fcmovnbe sbb lods jge cld cmp mov mov call mov push dec imulb sbb std nop push or stos adc inc sub rol popa ret sub or jns dec jo mov aam pop pop repz or out jne nop adc out mov adc pop test xor and pushf sub mov mov sub movsl dec pushf cli xchg ds mov push add (bad) lea das stos and mov pop aam mov push daa sub cltd mov stos inc mov loope add rcrl fbld lret sbb test mov or jae dec stc stc (bad) (bad) adc cld and lds fs scas shr out push stc adc sub lods pop xlat jmp int aam push jne sbb sub out xor outsb loop (bad) push sub call and test and mov xchg pop jmp cwtl loope jmp int3 mov movsl es das xor mov stos and cmpsl pop pop (bad) lock fidivl std into jg mov mov cltd sub sbb icebp out in test decl or mov cmp push adc pop mov sbb loop sbb cmp jmp add repnz popf repz mov pop cltd inc cmp loop mov in xchg loop dec nop dec enter repnz xchg mov sti mov into mov jmp push jge outsb cmp repz adc fiaddl or xlat dec dec in in das iret (bad) or movswl mov (bad) jnp jmp iret inc dec fldl sub sub dec mov int3 add mov rdtsc xchg in and aas push adc pop shrb push es nop movsb andl pop cli sub jne repz (bad) in mov je add imul pushf stos mov jmp xchg mov sub push popf mov xchg shrl jl fisttpll scas inc mov mov rorl xor lret xchg stos mov ficomp cld dec fild push cmp dec xor sub das push sti mov imul (bad) pushf add mov dec insl leave cmp inc mov stc mov lock ja adc mov pop aad mov cmp rclb scas pop xchg jbe fild push ja xor push xchg sub xchg ret nop adc mov push lock xchg sub mov or mov mov fcmovnu ret mov aad bnd xor lods cli repnz imul cmc xchg sti xchg insb sub test mov loope pop (bad) mov leave pop inc push push xor ss sub out repnz sarb dec in dec xchg adc hlt dec clc in int3 flds or (bad) mov dec sbb mov ret jp cmp (bad) lahf add xor mov imul (bad) adc pop mov xchg inc inc daa push sahf dec push stos lcall or mov push mov cmpsl out icebp sahf iret inc mov test out repz dec jo icebp mov in test aaa imul mov arpl leave ret notl jno enter pushf xchg sti cli add (bad) lods inc out movsb dec mov ficomp add outsl les pop mov incb jle mov sub xchg idivl sbb jp add dec pop out fcomps mov repz or add data16 jle and and sub sbbl mov mov clc repnz enter jbe cmp je mov bound das add fstpl dec hlt (bad) pop mov dec mov das loop (bad) aaa adc (bad) repz js outsb sbb fldcw dec ret ret bound pop push imul cltd mov (bad) sub aad jmp aas repz dec test (bad) push xor jns movsl out ret leave adc cmc out dec mov call or xor aam dec mov (bad) xor loop paddd fldl push int3 daa lret imul icebp mov mov sub pop out out push dec or mov inc mov pop repnz pop sub push mov xchg cs sub in sub ss pop mov xor out les push sub lods pop fst in push insb mov (bad) imul mov addr16 jecxz mov mov inc imul mov sub xchg ret cmpsl ja jae dec sbb adc je adc push cmp scas idivl imul sub and sti add imul or jno (bad) dec (bad) jge arpl mov lcall es xchg aam in mov or fisub popa adc mov cmp fnstcw xor and ret or adc sub hlt sub add dec and mov dec sbb jle push (bad) and iret sub test xlat cmp cmp lret mov lret movl lret push xor push insl jb daa and xlat data16 add fsubr adc testl mov sbb xchg xlat pop xor int popa fdivrs (bad) pop (bad) out and fisubrl rcrb es pushf sbb fild divl (bad) mov enter loope pop jmp (bad) xor pushf sub lods pop jae cmpsb mov pop mov and pop sub (bad) (bad) aas test cmp push enter mov mov call sbb fdivl pop xchg leave dec iret mov add add lret push mov lcall test mov or mov adc addb and (bad) hlt (bad) mov mov add ds and inc and outsb sub sub push sub sub aam negb std ret cltd loope cmp leave mov pop xor pop iret inc or sti jno aas test rorl out mov pop test ja (bad) iret mov imul mov pop lods (bad) dec stos gs cmpb dec repnz test mov xchg push aaa cmp sub and and jne stos mov imul add int sub scas fadd (bad) mov push cmp mov shr frstor jmp add das add test pop jg sbb cmp adc add repnz rorl push add out scas sub gs clc fwait outsb jmp sub icebp sbb push mov xchg rcll cli fcoms jnp and jnp jmp les jae inc imul xor sub mov rorl clc les loope movsl lret push sub push pop xchg cmp adc shlb pop loope adcb add pop stc inc nop or cli mov and dec loopne aam (bad) mov dec mov das jne aaa jae inc in scas pushf adc adc cmp sti lret add ret sbb sub mov dec cmp xor pop inc pop (bad) lcall mov dec mov lret sub icebp sub mov dec mov aam mov cwtl movsb jno jns mov mov adc sub fistpll mov dec rorb outsl sub clc sbb ljmp sub je out lods pop add aam scas addr16 xor mov ss pop mov jmp movsb das fadds or notl adc test rclb repnz ret adc cltd fsincos jne sub add mov add insb inc les (bad) out daa mov lret cmp add dec or (bad) cld lret out or fimul ljmp and or mov enter (bad) in rclb (bad) xor leave adc in mov cmpsl cmp inc fdivp push dec loope cmp div inc push lods pop push rorb xor aam clc pop movsb inc clc xlat mov sahf sub xchg mov xlat xor aad jmp lea sub pop inc loop ret imul out dec mov fwait add xor jecxz mov jbe les or and sbb test xor jne mov and push push in stos mov test mov pop mov cmp pop movsl cwtl test lahf sbb pop out add pop fbld jle pop mov ja enter pop sub add movsl in xchg sub fist jmp test scas sub pop test and in (bad) xor inc xchg and stos sbb and or mov push pushf mov aad arpl xchg into mov sub js repnz add rorl jns pop leave fisub wbinvd or lret cmp or subb xor and cmc movb mov add fisttpl or sbb mov fcomi sti dec loop lret add cmp iret push mov mov bndldx or ret mov mov dec out imul ds iret rol daa aad imul or and icebp lcall sub js jmp (bad) out hlt int test xor shrb pop out and mov or or ret dec pop sbb js mov jle popa rorl push outsb (bad) test jg pushf movsl or push push dec xor dec fucomi fs dec gs jo fnstcw dec jmp je pop cmc cltd sub dec int3 and mov in dec xor scas ret jg call dec sub icebp fsubrs xor nop movsl sub pop or fsubrs xor or aam and movsl (bad) imul sbb mov pop mov repz das repz sub and xor ljmp xor fiadd in or daa sub cmp pop cmc notb pop sahf inc inc add jne cmp out stc je push push mov jmp xchg xchg notb lods lods xor not add mov xor popf popa cwtl adc aam pop rorl jmp pop es jmp pop movsl fstl push pop test adc jno (bad) enter imul or sub in in jg das ja mull or out push mov ljmp pushf inc and mov mov mov xchg stc out imul ret (bad) xor popa das xchg add sarl xchg inc mov test movsb mov (bad) mov std rcl fdivs fcomip sub adc cli scas fs shrb fstpt lods xchg mov je (bad) jmp loop test fadds jmp loopne or push cmp movl (bad) ljmp xchg faddl or jno add push mov in xchg dec lret mov fildll ret and (bad) xchg les jge pop lret jne ret int3 sub mov cmp in sahf xor enter push ja push ficoml nop mov shlb mov fsubrs jbe clc add insb xlat (bad) imul cli fs (bad) fwait ljmp xor clc jmp aad mov cmp mov stos popf shrb out xchg jl push out scas sub aam (bad) out add imul scas cmp (bad) std sahf andl pop leave cli sub or mov inc rcrb sub push and lahf mov icebp cs rcl jg and and arpl test (bad) pop cmp jns pop add test adc sub pop mov push dec cmc xor push pop or scas mov pop pop sub cmp cmp push jns inc icebp mov out ficom pop fs aaa dec mov jb xchg stos repnz xchg mov xor aas jl imul icebp mov sub cmp shlb inc pop cmp out cld jl or scas (bad) popa (bad) leave ljmp push pop mov or cmp sti int3 das and xlat push jmp out out xchg shrb pop inc push add mov jmp inc sbb sarb sbb lds jecxz sub jmp xlat rorl mov dec mov lret fistpll mov xchg (bad) cmp lds mov imul push pop out sub sub cmp push sub pushf fistpll and push fimul xchg xchg cmpsb movaps sub out sub nop dec push aas sub mov inc cld xchg inc daa pop push mov jbe inc sbb and dec lret add fstpl adc push inc mov cmp sbb stos mov call xor ret cli lcall aad adc aas mov int3 and sti jae into sub leave sub fprem add add aas lret mov cmp enter loop pop or sar popf xor inc dec movsb pop ret jne pop mov imul das xor mov lds mov je loope fstl jle mov and push movzbl lret cmp icebp sub mov dec sub cmp adc add add bound insb loop (bad) sbb mov mov negl sub push sub dec sub xchg (bad) mov hlt xchg imul pop test aaa lds fsubrp out sub sahf and bound (bad) loopne fildll or sub sub outsb insl orb adc or scas mov les mov out js xor or lods das pop ljmp xchg pusha xchg lea fwait pop sarl insl mov (bad) call sub and mov pop xchg ret push and jecxz pop mov xchg fs scas and pop into pop add jnp jecxz or mov repz jae ljmp xor rclb xchg cmp repz push cltd add pop (bad) call or add sub call add dec xor or push pushf xchg mov pop testb add xor and push aas jmp push rclb popf int3 cs je pop inc int and jns jg aad vmovss pop push inc int3 cmp jecxz pop cltd (bad) lock and mov test mov adc call in pop mov mov and mov sbb sub jmp (bad) mov jno adc out cmp (bad) idiv (bad) sub out adc sub adc add iret or sub es push add cmp and mov mov jae adc mov mov fs add lcall outsb movsb cli and in xchg idiv push sub mov ja es (bad) std dec enter xlat cmc clc push mov jmp mov imul and (bad) fsubrs fs leave popa stc and (bad) icebp push jge lds cmp dec ljmp enter mov lock je mov sub fnstenv sub fisttpl mov mov hlt xchg imul popf pop cmp das inc pop fistpll imul call and sti out pop cmpl movsl stos adcl mov test or jg xchg xchg xchg int3 mov ss rcl enter push xlat mov fstl outsl jmp dec inc xchg jg std xor lret mov cld aaa leave fistpll (bad) mov repnz lret (bad) std orl je out mov aam dec inc xchg std in leave lcall dec jne lock add cld (bad) repnz stc shrl mov mov inc xor inc xchg pop frstor xor add cmp sbb andb pop adc sub ljmp sub add jns sbb call sub fcoms and adc adc loope jb rorl xor call sub xchg mov test and sub mov and inc push (bad) shll add ret std dec addl adc jle inc or fnsave or add jbe aaa std or sbb std jg pop mov std push (bad) outsb stc ss xor fcomps mov adc enter and in jo (bad) push cmp mov push (bad) outsb leave mov out mov mov mov pop loop dec repz roll repnz imul xchg (bad) xor (bad) pop jnp push xchg enter jbe adc cmp mov out adc decl leave mov addr16 fdivrp das jle in popf mov add adc out cmpsb fwait daa shrb pop mov punpckldq xor clc gs fs xor lods pushf dec jmp icebp or rol mov cwtl or les and cltd jb add daa cmpsb inc mov adc sti scas pop mov sbb and ljmp jno dec outsb jle rcr inc xchg xchg mov sti je out stc mov mov icebp cmp test out push mov out lret xor loop cltd (bad) and sbb add divl mov sub xor xchg stc ret (bad) (bad) pop repnz xchg sti aad mov xchg (bad) fistpll (bad) idivb int3 cwtl hlt push mov clc (bad) mov sub pushf popa push dec mov pop test and testb cmp pop outsb arpl lods mov sti and mov xor lret movl cmp stc sbb ljmp in jmp xor mov pop pop iret scas sub mov adc jmp and xor stos popf sub sub iret mov xchg xlat and mov dec icebp fisubr cmp ret repnz or mov pop lahf hlt pop add daa jge sub mov mov test mov push std xchg push mov sbb pop push push pop pop cmp gs scas mov aas in adc stos popf lret sub pop gs lcall or mov rclb icebp or xchg lds clc ljmp pop pop sub xchg sti cmp and dec (bad) loopne ret dec std add mov mov jo iret add mov xlat int jno js mov lret scas dec jb pusha movsl fcomps das (bad) lock jne adc add repnz out imul bound or push movsb jnp dec cmp cli mov cmp mov xor xlat mov dec sub enter pop xor mov mov pop and lock mov jnp sub mov dec push shrl das loop shll lcall mov jne cmp sbb call mov outsb mov popa xorl mov out sub sub mov std imul adc push push das icebp popf rorb mov insl and cmp jmp call iret add repnz inc out lret int3 pop les mov imul inc inc (bad) xor adc test sub mov bound push mov dec movsb push imul leave lcall in (bad) (bad) mov dec jne (bad) and rorb sub push push inc mov gs sub push push lods daa rcll and xchg sbb sub leave test je lret and pop int outsl mov jp iret imul push jle mov stos gs push push aad sub xor gs adc xchg lahf aam xchg mov or (bad) call test fsubrl movsb cmpsb call push push divl push dec andl dec jmp xchg mov cli add icebp insl dec pop pop sbb or fldenv jmp cmc pop in adc mov addb out or fwait jne jmp cmp adc jne fsubr shrl fs rcrl out mov sub inc inc loope aam lods sbb adc pop sub (bad) xchg addr16 and aam xchg jo nop sahf sar cmp icebp notl mov ljmp adc xchg adc cli movsl test jo and movsl sub jle add pusha xlat lahf (bad) mov xchg stos bound jge das lds mov xchg xchg mov jecxz icebp idivb sahf test xchg arpl mov dec adcl andb aaa (bad) pop push xor jnp pusha stc pop movsb stos sub and sti repz sub out sub test sbbb out pusha inc daa (bad) push adc (bad) xchg sub imul jecxz push (bad) lods ja cli enter lret cmp stos mov push lret fist jle cmpsl ja mov lret mov iret jp pop mov pop (bad) movsb aam mov jne xchg clc and dec and dec pushf sarb cli rcl movb jl sub stos push or adc (bad) (bad) or dec pushf test mov (bad) jg scas jo xchg adc lods push mov mov jmp push mov daa sbb jmp fldt jo dec mov insl cld sub adc rcrb movsb push sub sarl sub out in popf push xchg sti pop icebp jle mov test and (bad) dec dec es sub mov movsl mov jbe push (bad) xor aas lods push and sub test mov fsts pop les cmpsl mov and or sar rcrl fistpll jmp xchg leave pop int lret add or inc jns dec mov ja jbe pop or in cmpsb push and lret loop cmc xchg aam scas idivb xchg mov je (bad) lock xor loop push jmp sbb lcall jecxz cmp push js es sub xorl xchg mov aas mov cld dec mov dec and out (bad) mov dec mov aas dec or and outsl mov push xor iret adc sbb mov mov and test stos nop cmp push dec rclb lret clc call out or rcl cld daa in mov cmp fsubrs clc mov pop mov xchg xchg mov mov adc xchg mov (bad) sahf call sbb xlat insb jno sarl in push shlb cli sub ret cmp sbb pop or les push xchg jmp xchg ret mov mov into sub pop or adc lret sbb aad ja jne ss test ljmp mov stos loop jecxz bnd loopne cmpsl dec cmp lcall xchg mov scas pop mov or je shrb sub pop out mov xor sub xchg inc sub fs xor jge sbb push push sbb ljmp das inc xor push jbe int sub mov sub or push repz aam dec xor je dec cmp loope je jmp dec es jp fmuls dec cli cmp and sub xor lret stos sub das repnz adc (bad) dec loopne ret sub xchg in or sub cli sub mov out sub jmp xorb dec jmp sub sub xchg out pop out daa (bad) jbe pop jbe imul fbstp add sbb lods scas xor and xchg fdivs fisubr fistp jmp jbe push jge repnz cmove pop sub ss (bad) mov push push imul dec push ss into xchg pop jmp pop xor out sub in mov (bad) mov cld les push je call rcll dec lret mov add jecxz inc fmuls xor cltd mov jb inc jne mov ret mov adc or push negl nop pop ljmp push lret xchg adc (bad) imul loope imul push fisttpl sbb push int3 pop xlat inc jns fild lahf clc adc mov hlt mov (bad) adc xchg or mov aam ljmp sahf (bad) loop push pop adc pop sbb mov shll push rcr (bad) pushf lods push jmp push (bad) mov ljmp mov popa xor outsl mul jns xchg lret jg jecxz stos sbb test pop mov out mov les shr popf sbb shrl mov xlat cmp xor lods (bad) mov roll cmc xchg mov or std rclb iret int and cmp add sti fs xor out das sub icebp (bad) int3 lock lods loope scas push (bad) xor xchg ret mov jl clc les pop stos sub mov sub cmpsb push xlat jo pushf test mov or andl stc mov rol sub mov (bad) loopne es xor in adc mov jne pop int3 push xor lret add ds xor repnz lret sbb and outsb sub mov mov jg jnp js cmpsl inc ljmp pop xor pushf icebp xchg jp jnp repnz fisubl out sub mov stc loope cld in clc push das or fdivs push push sub adc xchg mov sub (bad) adc scas mov dec cmp mov (bad) rcll add out rcll cmc mov sub pop shr mov xor lock mov or icebp xor sub lcall (bad) sub inc stos mov iret pop test dec mov push ljmp fs jecxz dec out sub cs fldenv jp mul mov jne (bad) lods call pop xchg xor and and (bad) (bad) leave scas in mov inc mov xchg jbe pop lds daa (bad) xchg adc lret xor pop add mov dec in (bad) jbe (bad) iret scas loop sar cltd test adc stos mov fisttp xor in pop ror fsubl push (bad) push cmpsl lcall imul adc cld jmp sub int outsb in xor or leave inc (bad) test fcompl gs pop xchg sti mov mov mov scas lret rolb push sub mov dec mov mov and sub sub mov out stc gs into xor mov dec (bad) out (bad) aaa je out leave outsl icebp ja insl das jno das fimul lock mov test pop and aam jmp (bad) in adc in xchg dec push lds fnclex cmp ret icebp pop xor add ljmp jmp mov mov push js adc popf cmp jno gs mov idiv dec scas cmp mov mov popf data16 ret push jp rcrl or pop int3 pop popf pop push adc mov aam jmp data16 sbb roll jp lahf lea mov repnz loopne aaa jl in cmp pop xlat mov sahf ss cli into pop popa movsl cmp jns lret push mov aad ret add popf jns xchg pop sub daa ljmp loop rcrb mov fstl popf pop xor add scas daa iret cs jne lret cld adc repnz fidivr leave sub jmp jns xor out xchg cmc test pop add xchg jmp pop je imul movsl jg sahf or mov pop mov add dec mov or imul ret movsl mov fstl cmpsl nop mov fstpt and mov pop mov xchg cwtl mov int lods fsubl cld movsl jl repnz lock add popf mov push xor ja movzwl and pop ljmp ja lds dec loope test loop roll rcrl insb push xor mov adc jne mov jbe inc xchg popf xchg out xor adc stos mov add cmp fldenv sbb repz add xor in sub add jg cs jmp jmp sahf jp lcall xchg sar leave shlb cmp mov pop stc fadds pop lcall std push inc and add cmp icebp loop pop pop xchg jmp and mov dec addr16 cs mov jb mov xor out mov aad pop mov xchg pop popf xor repnz ss add lret inc xor jp movsb out call popf shrb sti and inc mov xchg push jge mov sub lock xchg (bad) dec outsb aaa xor adc int3 dec fstps xchg jno std gs scas cwtl pop into or or jno outsb mov (bad) cli sub and dec jl daa data16 add mov sub jp adc sti and in inc dec out lret mov jmp cmp mov (bad) int cmpsb lret flds mov pop int3 xlat dec (bad) gs mov push push fldcw mov adc mov (bad) mov out sbb cmpsl pop sbb call test les stc adc mov or and push sub popf jg fcompl sub mov pop data16 add icebp fimull and das jle out lret into ffree pop xchg ret mov imul adc loopne movq jne out cmc xor jmp or and push int3 inc pop sub int3 cmpsb repnz lret xor xchg pop jb add sbb sub xchg (bad) xor jnp xchg out shrb dec (bad) lret push aam jo loope pop and cmc out lods cltd hlt (bad) and mov push sub inc dec (bad) cmp dec xchg rcrl push (bad) pop ret fnstenv lods jno xchg icebp lret sub clc xor out repnz xor xor push sahf add idivb sbb into das and cld cmp jecxz inc xchg into xchg idiv push repnz mov lret lret push fs in sub stos cmp add mov jp jae mov or and lahf (bad) leave leave cli gs jle jae push mov dec int xchg add mov scas call cmp outsl push xlat pop xor push lock mov dec jno inc idivb repnz ljmp cmc stos jecxz pop push testb jg rcrl testb inc add jbe and (bad) jecxz into (bad) mov shrb push push xor sub cmp dec std push inc dec jmp sub inc xchg add (bad) mov in stos shr fs jb outsb (bad) icebp mov (bad) jge (bad) das sbb xchg (bad) mov xchg cli cmpsl mov insl lds nop lcall in es and rcl inc sti add lret sub push xchg gs punpckhbw int adc xchg test (bad) jmp xchg mov sub cmpsl add adc pop (bad) fsub loope sbb add mov sub sub jmp mov fisubr push (bad) int3 (bad) mov pop shll xchg and pop xor jb or lea movb adc mov jl push mov push repz bts sti sub or out insb xchg popf jge sub test movsl fwait sbb and cmp roll sbb (bad) sti je mov and xlat mov add xor add and sub out cmp push dec xor popa inc sub std sbb sub dec mov (bad) pop jle loop sub fidiv outsb lret add mov loop mov xor imul xchg lret sti mov out adc inc into or push and movsl xor pop (bad) jle (bad) mov push dec and pop sub outsb mov or mov sub and and inc jb jnp xchg adc stc sbb pop xchg push add movsl sbbb xor push push leave mov mov add out (bad) dec imul cltd adc mov adc clc mov ja and inc pop (bad) sub cmpsb cwtl mov pop or and and mov sbb ljmp or pop pop out mov mov lret stc push mov subl (bad) out mov daa mov loop xchg adc clc lds outsl pop sub cmp xlat add (bad) mov push sub rcrb cmpsl push pop cli jmp (bad) aad xlat scas fnsave mov (bad) jecxz cmp cmpsl ss mov inc leave or or push pushf icebp dec mulb cmc out mov push xchg pop mov add (bad) mov pop scas push jne hlt push sub dec add fstpt les add out add cmc lcall popf icebp bnd les and jne popf xchg jo popf mov popa icebp add mov or add sub scas or sub or aam addr16 xchg idivl sub push xchg inc fdivrp gs (bad) cmpsb lahf in out mov dec lods lods and mov push outsb jl into sbb dec ret int3 pop mov sti or aam into (bad) mov xor mov dec sub jns (bad) fldenv ret dec pop cmp add mov aad js idivb push jg sti ret sbbl fcoms add mov mov push out enter ja int3 sub cmp add out inc outsb fstpl cld or sub push fldl xor scas mov push mov jae push shrb pop enter xor mov (bad) divl pop lcall out cmpsl add aam scas mov sub and (bad) mov or pusha or mov dec pushl adc mov les adc pop cmp in or lcall repnz push bound cmp xchg push lea pop xor aaa mov jg pop ss dec stos sub sti into mov idivb cmp fiaddl jmp into stos mov push fistl enter out daa mov (bad) out inc roll mov mov mov and pop stos jne subl add imul lock into leave jbe icebp insl xchg adc (bad) (bad) mov xchg mov xchg test into test pop inc dec pop leave idivb mov jmp add sbb sti cmpsb adc or mov lods loopne and add sub dec xor pushf aas mov cld (bad) xchg push sahf outsl sub dec repz lock mov out sub add add dec fs scas mov fdivrs adc mov je imul lret (bad) xorl popa pop inc sub mov jae sub sub (bad) mov or loope scas xor leave mov sub mov sub (bad) mov movl push pop aam stos jno and dec push sub jno dec pop in or or jg inc or sub rcll mov jmp out loop das xor lock pop fstps push jae pop fimul jb mov fist inc and mov or sub scas ret jl push shrl (bad) adc ss lahf sti stos or pop out lcall adc pop out and push ljmp jo popf cmpsl loope jnp jg movsl cmpsb or ds repz or xchg std cmp and pop jb ror (bad) dec das sub outsl dec pop sub or add (bad) lret sti ret jbe sub jmp sub and adc popf stos mov mov (bad) pop sti arpl xor lock icebp jge cmp (bad) pop orb loope in out leave ret lcall cltd push push mov div int stos cli mov pop das movb jno push dec sub es xchg ss lret int3 decl pop fdivrp lea inc adcl sub jmp pop xor mov mov mov sbb mov mov pop ss sar adc mov test mov push cltd stc xor ret xchg push adc lods frstpm(287 adc daa and jle pop icebp scas popa lock or dec cli mov (bad) cwtl xchg ljmp ljmp mov inc mov jle dec (bad) mov sub add push jnp mov mov jmp out call jnp xor repz les add xor mov incb xchg jmp nop mov aas mov xor pop movsl out push sti pop cmp lds mov sub adc mov rorb mov jne iret sub push popf sub pop lahf hlt add xchg jle push add mov and clc rcrl and or in xchg gs add icebp imul in push mov mov push inc jle rcll push add add mov ljmp mov lahf stos (bad) and fidiv fwait shll pop mov in addr16 adc sub addb mov aad mov pushf daa clc dec push repz ret pop add popf mov inc lods mov lret or ljmp xor dec ffreep imul mulb or scas popa pusha idivb (bad) sahf test call loop test push jbe dec pop repz xor mov add daa test popa sub imul add xchg push aaa cmp sub pop fcoml out adc stos movsl push sub cwtl mov mov xor iret xor sub out and jmp inc and std (bad) notb jmp sub mov and fucom pop add mov push xchg ret cmp pop push dec gs movsl pop cwtl xchg mov mov and daa rorb into sub out add repnz jge dec js stc jb xlat test out push jo xchg ja mov repz mov lock fbstp xlat std (bad) icebp out sbb mul decl shlb mov dec xor lock mov cli cmpsb or lret mov scas or (bad) sub call icebp or push mov loopne dec adc sbb mov pop lods outsl mov dec jg mov lret and ss push (bad) and cmpsb imul sub stc loope or and pop stc xchg and ja sub pop das or js adc mov mov (bad) testb pop hlt ja jmp dec cs and lock mov mov push jmp add test std dec mov mov sbb sub add repnz imulb enter ret jg xlat popf insb and pop sbb ret xchg out es hlt in stos fmull or xchg xor test (bad) xchg lret lock cld (bad) or flds mov cmp cmc fsubs pop or stos or test mov lret cld (bad) mov es sahf (bad) xor jg dec add fdivl cmp (bad) sub pop and clc rclb dec lds fbld jle and add je sub movsb loope into push jge mov and lret sub movsl or jp movsb test stc cs xor add mov ljmp and enter pop sub out inc sbb push (bad) xor jecxz dec aaa pop mov mov adc fidivl ret aad cmp idivb rorb in imul pop (bad) mov lock das mov xor dec pop xor call cmp or mov sti out leave out ljmp add sub sub xor sub shlb lret xchg enter sub xor cltd pop add decl sarb icebp or lahf aam fs out push inc xchg sbb and test (bad) inc mov insb dec subl fstps stc add mov lds hlt fildll sahf lods push rorl mov mov roll jl pop (bad) or mov pop fstpt xlat ljmp loope aam jmp jl xor cmp xlat and pop inc shrb fdivl nop push aam push xor push sub fs lea std leave das lock dec inc arpl loop lods dec jb (bad) ljmp push mov icebp stc cmp stc aad sub cmp pop jae aaa sub das cmp sbb bnd lods push push mov sub dec xchg dec cli test out dec jecxz daa lret out sbb and (bad) cld sub jb pop mov scas mov leave icebp dec dec dec div xchg adc mov push cmp cli iret imul sar or dec dec xor ret sahf outsl sub mov mov cmp add inc mov cs int3 mov pushf and into fisubr gs cmp movsl ret cmpsl jmp les ret stos xor repnz mov scas xchg or or and repz mov dec mov inc popf hlt adcl push xchg nop mov (bad) mov mov lret int arpl jo mov jmp cmp mov sub das xor pop mov rcll (bad) mov pop movsb mov into std xchg jno scas cmpsl fs fmuls push inc shr mov repz ja mov (bad) add imul jecxz jle push ret shlb or push scas cmpsb out cmp xchg loop,pt lret jmp lods sub daa stc cltd shrl sub and repz sub out and mov fsubrp push mov and aad mov movsb fnstsw sar loopne xor dec mov repz dec rcrb mov and mov xchg (bad) repz ljmp inc push mov xor neg pop int or xchg scas mov dec inc lock out add sub sub stos xlat xor sbb inc xchg shl sub jg lods sahf pop (bad) xor pushl pushf lret lret fiadd sub lods push repnz push nop sub in ljmp jle pusha mov push add sub les fnstcw mov xor sub cltd or outsb test mov lret movsl dec insb xor pop lret jmp hlt mov out or push subb call mov jmp and sti popa mov outsb jae push cltd jmp mov dec (bad) pop outsb sub dec sbb mov popa mov xor mov outsl add sbb mov pop fist je,pn jp mov sti xlat lahf iret xchg push scas mov push inc notl imul cmpsb push adc inc mov enter popf pop iret call cmp stos sub mov negb mov into mov sub movsb jge add pop adc sub sub mov fstps dec jg sti daa cwtl or loop and (bad) xor enter pop lret add push adc out xor ljmp loop cmp mov out xor das ljmp and std or mov xor add mov das flds popf imul cmc (bad) cmp mov push rcl pop cltd push gs test stos or add (bad) jmp incb xchg lds lret pop repz (bad) stos mov js and fisttp and fldt jbe iret (bad) xor pop aam leave sbb in dec and pop lret add jmp popa push stc and xchg cmp mov sub rcl sub pusha cmp in (bad) fs fsts jp dec jecxz sub mov fdivp sti or ljmp push and shrb leave (bad) mov sub mov xchg inc ret ljmp bound shl add popf push cltd cmpsl repz imull dec nop ljmp mov (bad) jle jne orb lods cld mov mov xlat push pop adc ret notl xchg mov dec popa or mov pusha in xchg push push pop test outsl stc pop mov push loopne and or adc or insb ret pop lret ljmp pop repz loop (bad) adc repnz insb cmp jnp xor aam daa xchg jno lret mov mov xor pop push xchg sbb lret pop pop fsubrs cwtl sarl lret mov mov mov sub xlat mov cli cld adc mov jns lods idivb daa stc xchg es lds sahf cli repnz notl add cmpsb pop subb aam in popa cmp sub sub out jns sar sub xchg mov lret popa movsl jg lcall lds pop daa jp and xchg adc xchg mov cmp jmp jns fiaddl popf sub repz mov outsl mov (bad) mov and and repnz mov iret divb push sub add or insb add pop add xor std repnz xor mov jnp mov xchg outsb mov (bad) and clc ds ret (bad) (bad) leave mov dec out lret add or pop xchg cli add ljmp test adc rcll test cmpsl ret mov rclb jne sub ret aam push cmc enter lahf hlt xchg jmp xlat or dec cmp jg cmp xlat push ljmp test cmp lock cs fisubrl push mov push adc popf (bad) adc fcomps dec repnz cmp jp lods ss daa test mov mov fistp xchg ljmp push jmp not mov pop jb xchg fdivrs dec inc xlat lcall and (bad) imull mov outsb xchg in inc add out and mov sub rcr out call mov lret xor (bad) sbb frstor pusha cmp mov nop out es sbb sub xchg sub test lock pop sub stc jl mov inc or nop cmovg ret jg js and sbb xchg ja pusha cltd xor ds pop add scas sub jp imul or ret push lret pop jle loop mov daa movb add out nop (bad) mov (bad) sub test mov aam rcrb out daa sbb pop femms pop mov lcall sub mov adc mov lods outsl movsb mov sub mov xor inc sub lcall mov and fidivr iret or jl or in das jl push pop sbb sub ret inc lret leave mov repnz dec adc inc push pusha jmp ror imul push test lds xor jb loope jle and (bad) in popf imul and push or add jmp pop lret rcl pop pushl mov cltd ret ss and stos push fistpll hlt mov iret scas loop mov jge xchg push pop out sub test shl inc rcr sub mov leave push lock pop out cld call ljmp ret lods push mov mov mov jmp adc pop lret sub movb cmp mov dec pop jmp sub and pop (bad) mov scas fcoms and outsb std sub inc push mov xchg xchg inc xchg sahf lds cmp jl mov and or sub ret cld xor (bad) shrb out test pushf mov insl and aam movsb push mov lret cmp push and leave rcll inc jnp stos cld xchg mov pop pop xor push inc xor jg inc inc and mov sbb jb or dec in cld mov (bad) mov jmp mov push sub pop pop ret outsl das ret sete mov and mov rcrb adc inc or mov loope adc cmp or pop (bad) aad cld add xor imulb lods mov int aas sarb mov outsl ds mov mov ret (bad) adc sub mov (bad) mov popa xchg popa repnz mov dec lret out leave iret std or sub lods or push pushf adc sub or int mov xchg and xor xchg (bad) ss call sbb cmp dec icebp dec (bad) mov adc fs push mov das mov divl xchg xchg std add cmp dec leave imul mov (bad) ret sahf scas out stc jns mov mov xchg jno push lcall dec lcall pop test fdivs mov pop mov das adc mov pop (bad) out sub ljmp pop cld ficomp sub (bad) mov cwtl stos (bad) mov pop inc sub ret loop ja clc push push das (bad) ljmp mov clc repnz cmp repnz add lea mov sub mov push add gs mov out das mov push xchg xor int and test mov shlb roll repnz mov cmp mov (bad) sub clc push xchg dec inc adc cmp and sub adc mov adc mov scas shll sbb bnd jae sbb cmp inc xor incl pop sub cwtl inc das dec adc push pop xor jns xchg pop scas imul and mov ljmp sti cmp sti mov sub xor mov mov or xor xor icebp cli inc jbe ret sbb shlb xchg pop cmp or popf inc sub or cli pop and cmp cld imul pop jge je push ret sahf iret push daa rorb pop aaa cld mov jns sahf test push adc je add rorb stos mov push dec sbb in int fcmovnbe mov xor ljmp or imul lock lahf mul jmp pop pop inc push xlat mov jmp lret mov mov outsb and adc push jecxz push jnp xor and add xor pop shrl repz jg mov xchg dec ljmp xchg cld sbb and mov repnz es or push push ret mov jmp cltd mov leave fdivr add ret xor lods mov inc leave ret inc nop fidivl xor fsubs stos loope pop jmp jecxz xchg mov adc aaa dec jno add and subb out ret mov and (bad) push dec fmuls out cld rcl (bad) cmc out in movsb gs sbb out mov mov lahf popa jmp sub repnz outsb push hlt imul or push (bad) cwtl cmp dec sub ljmp enter sub les and ss outsb and (bad) cmp (bad) popf (bad) imul pextrw jp sub adcl icebp movsl inc fwait xchg clc add inc dec negl ret sub jns sub mov push sbb add push mov ds jnp in mov ljmp icebp sub (bad) mov pop iret arpl jne push pop cld (bad) imul mov add iret dec inc les xor cmpsb dec mov or or test inc push sbb mov and add sbb pop in rcll nop ret adc icebp mov or add inc jecxz sti ret sub or mov pusha leave xor dec mov jl mov mov (bad) lock jp daa incb fistp and pop ljmp pop pop rorb jmp or xchg push fs jno lods clc mov cmp add loope sub fs fimul mov mov mov and lcall sub cwtl xor sub jl pop ret das stos sub cmp xchg leave push xor scas fcom or movsl into push (bad) idivl ret cli mov jb test movsb dec dec adc call out pushf jne sbb je sub xor cmc inc push add and stos arpl out rcr xor sbb lds fiadd mov xchg push and mov or (bad) pop jmp jg lods mov lock (bad) jecxz aas jmp es pop pop xor sub test xchg fnstsw enter int cmp into fdivrl vpmovsxbd sub (bad) test ljmp imul daa push stos (bad) rolb mov mov mov ljmp fidivrl mov cmp cmp les iret cmp xchg lret popf aad sar pop (bad) fs in pop fidiv sbb (bad) das test and mov data16 pop mov lock adc in lret ja sbb leave idivb mov dec xchg lret pop aas push or mov loope sub int3 and leave out sub pop ja imul inc sub sub inc cmc divl jl push fsubrs cmp sub ret pushl sub ljmp jnp stos dec xor adc movsl jle mov mov adc mov stc outsl movsl pop cmpsl inc out ljmp adc fcoms rorb or sbb hlt jmp sti xorb sahf movsb xor int3 es (bad) xor jmp fst push lret sub scas fs repz out insb cmp scas sti mov xchg push xor jg and pop cmp scas mov movsl jge push xchg mov lahf test pop fcmove xor adc mov xchg mov add mov jmp xor dec in or pop or pop pop das aaa sub cmp rclb xchg in popf sub gs lods (bad) jg mov jns into or pop sub mov inc mov mov mov and sarl jns push sti pop adc add adc cltd mov mov pop lods (bad) xchg call cld loopne aaa bound inc or lcall bound add sbb pushf (bad) mov rorb lret xchg repnz jge adc pop cmp js push add adc pop sub mov inc repz sub add xchg imul (bad) hlt stc popf mov ja mov inc mov jl andb pushf jmp cwtl iret xchg aam leave jp mov xor js add movsb mov cltd iret xchg sbb pushl cmp pop jmp pop pop out sub cmp fnstcw movsl pop xor sbb xchg jne jge adc lock add lods pop shr sub sub cmpsb jo or in (bad) mov (bad) dec pop popf pop lcall mov adc lret scas pop (bad) loope xlat jns xchg push xor xchg push mov clc movsb mov pop movsb mov xor mov mov loop sub arpl xor cs lods jne ljmp cwtl and mov or inc adc mov movl mov inc les iret stos popf cmp jecxz leave loopne fwait pop fistl jmp adc stos mov idivl (bad) push push cltd pushf aas cmpsb add or sub les stc ljmp cmp xor add leave bound mov xchg inc push loope cmp xor call lahf sarl cwtl hlt lcall pop cli mov xlat jb jecxz add dec das or repz and scas mul pop mov ffreep idiv (bad) aaa inc aaa sub lahf (bad) int3 pop pop mov or inc adc jle pop out xchg cltd xchg or in mov iret ss mov aad or xor jmp stc jge jge mov sub add sub pop fidivl (bad) adc mov int3 inc mulb add mov push or rcll xor repz leave out mov repnz and and imul dec sti pushf add fdivrl leave dec mov or repnz negl dec or cwtl pop ljmp fisub std inc or mov push sti lds leave test push mov stc xchg ficoml cmp adc rol mov imul mov ja idivl loop (bad) test test repz es das icebp idivl es stos bound push push pushf ja add lds xchg test jne in (bad) jmp inc push sub dec mov jae pop jmp (bad) cs pop add in imul into sbb sub aas (bad) adc add push sbb pop cld or jmp pop cli sub push and mov dec fsubrp test (bad) ja fxam mov fisub fwait icebp hlt (bad) iret mov dec dec popf push (bad) push add dec rcrl add push inc mov cmp sbbl cltd les xchg xchg ret dec xor and pop push or ja shr xchg xchg or jl jns outsb mov rorl add push ret jge push das cmc or push (bad) ja jns test mov mov clc xor (bad) jae outsb push daa cmp pop dec (bad) in mov sub stos (bad) sbb call mov ja es pop mov loop test xor mov (bad) ljmp jge mov jg (bad) xchg jge mov cmp xchg adc lret jmp push out xchg and in scas pop mov stc xor lea mov jmp cli sub popf icebp nop mov adc push fs sub arpl rcl lock xor jg dec dec jge or xor and inc ret pop push adcb repnz xlat and out pop rclb negb stc push xchg inc outsb leave pop stc dec dec jae inc repz popa aam imul dec xor clc mov jecxz cmp dec xor jmp cmp and adcl or in mov sub add (bad) jmp repnz push test pop or sub xor jl add loope add rcr or popf in aaa cmp push cmp and sub sub mov out adc mov lret sbb aam pop iret outsl test in cwtl sub aas lods jge mov ljmp fnstenv push lret gs cs inc or out fdivs stc cld or push mov adc sbbl mov pop lret push hlt inc jmp xchg dec popa xlat icebp loope,pn and das sub (bad) test push add das in mov cmp pushf int imul fsubs xlat lds mov idiv jecxz roll jp push cmp outsl (bad) cmp dec not cmp jo (bad) ficompl movsb fistpl les insl movsb jb jmp mov jge mov fisttpl cmpsl jno xor jnp jmp decl xchg jecxz loop push jbe push (bad) mov adc les in cltd lds adc sub push lods js lcall push sub dec jmp stos lret sbb lret decl add mov xchg hlt xchg enter fbstp rorb popf bound enter mov insb cld mov rorl mov cwtl mov into push xchg xchg push mov mov ds ss sbb sub (bad) stc xchg dec mov push fstpt cld jo inc add inc lret dec arpl out sub stc (bad) and cmpsb or pop ficompl not push (bad) (bad) and cltd pushf mov lcall popf lds mov test ret loope fisubr or clc mov in fs add lahf loopne and dec jns or pop inc movsl adc sub mov and aad dec imul pop or xor xor enter or insb les lret repz and ss hlt dec rclb jbe adc push or (bad) mov cwtl cmp shr mov icebp pop das imul ret push mov xchg repz outsl adc negb pop rorb xchg xlat mov rcrb cmp pop jmp repz and enter (bad) gs jae sub test cld cld mov in or dec fs mov fisttpl jge jno cli adc add xor cmp xor bound ss jbe dec lret rorl clc push out shl jle mov or mov ss addl cmp jmp (bad) pop jns addr16 mov inc fwait popf aas sub push mov inc mov xchg imulb je fsubrs rcrb aas push nop jle ficompl jecxz adc add loopne out jnp imul sarb mov push jle sub not xchg adc ja pop and outsl xor dec inc mov hlt dec jno dec xor adc daa shrl iret out lods dec ret aaa insb sub in mov lret test pop int3 mov mov sbb sbb (bad) or mov mov adc iret leave or das or fildl mov push (bad) out (bad) scas mov xchg stos xor mov fstps sub push scas add add adc jne imul out sti icebp pop push mov or xchg add idivl mov dec pop xchg ja lods aad out (bad) in push dec lods ds daa divb scas pop cmp leave pop sarl xor out mov stc or and in sbb xor and ss jmp sub dec ret repnz into mov mov movaps jb pop fiadd and mov cltd mov psubsb repz and jge cwtl xlat in pop mov pop adc les mov leave ret imul jmp adc rcll mov test mov shrl repnz add hlt pop in aas out pop call and das sbb pop pop popf adc dec ss (bad) dec lret popf addr16 lods ja aam rcrb mov leave (bad) jbe arpl sbb mov xchg pop (bad) movl loope repnz stos rol movsb aaa jno inc and mov leave inc cmp rorl (bad) push std call dec repnz (bad) or and enter sub add pop leave sti jno or push adc push cmpb icebp fxch imul (bad) xor adc lret mov xor dec mov (bad) pop push mov fadd (bad) adc mov repz cmp lret loop gs cmpsl repz push inc mov arpl mov mov jne mov xor mov shrb lret xchg std mov mov lcall xor push mov jns (bad) out call movzbl das or pop movsb adc mov mov xor fnstcw ret adc cltd jbe cmp out or sti sub xor (bad) push or popa and push iret jns xchg int xchg add cwtl mov lahf insb push xchg ficom flds add add mov xchg mov and xchg cli push mov jo push pop sub stc mov add cmpsl mov xor adc lcall (bad) jne bound mov sbb xchg pop rcl popf hlt dec gs (bad) (bad) inc xchg xor int out mov dec ljmp sub adc mov (bad) push adc mov stos (bad) leave adc movaps fsts add mov sbb lock rorb jecxz mov xchg cli fisubr les jmp mov test add xorl ffree into out (bad) lret cltd and sub sub sub (bad) push js std sub fnstenv sbb mov add pop mov xchg mov xor or daa lret inc or jne outsl insb inc add or pop (bad) mov lretw lret jecxz sbb add mov xchg push push jmp test out cmp add xchg mov das (bad) gs pop stc adc inc mov into std jmp xchg fild and xor add repnz add push pop mov aas int3 push mov mov rcl std jmp clc xchg in loope jmp cmpsb or mov popa push or (bad) sub pushf mov jl stc arpl jmp das hlt xchg push call pop out fabs jnp pop ds jle cs cmp adc adc add movsb ds and jge cmp bnd jl sub stos mov sarl dec rorb pop jecxz shrl add jmp add ffreep arpl dec inc or or mov nop and or mov add (bad) fmull jmp sbb testb xchg data16 pop (bad) repnz rclb jp cmpsl push xchg in fdivrs sub jae and movsl out hlt lcall scas mov imul xchg (bad) sub ljmp cmp mov jo mov aas jne push cmp sahf add jg clc push mov into cs mov push inc lret push mov sbb cs (bad) cmpsl (bad) pusha mov gs xchg (bad) lcall add aas sub and inc dec push xor pop icebp or lret (bad) jmp mov cmp ljmp adc mov inc xor xlat lds mov xor (bad) stc xchg bound cld and adc ret dec xchg das (bad) pop adc fcoms or jne cmp mov rol add jmp rolb push mov push sbb jecxz xchg fnstenv gs aas adc and out insb cli in sbb das gs or jp loope test lods mov dec test inc push add lds adc ss jg push imul cmp (bad) mov test or cmp les (bad) clc mov add (bad) std cmp and adc jae lcall jl rorb and mov dec jecxz mov jnp rcl mov add jl or cmp rcr dec lret add ja sub xlat or aad pop jae sub mov fdivrs iret and xchg loop and mov stc std dec xchg lcall fsubs sti pushf (bad) xor and xchg push es jg xchg or adc sti movsb xor lea in and int insb (bad) daa add jnp movsl fucom daa andb mov jno and ss out and xor inc pop fsin xor mov dec les mov jle loop icebp ljmp sub inc sbb xlat add repnz in rcrb cltd sbb ret ds sbb loopne push in aas add add jmp xchg mov cmpb and xchg jno dec cmc jno dec loop hlt fs pop jnp es nop jnp rcrb aad mov mov mov cld jmp inc mov ljmp xor sti in and cmp xchg mov mov or jge sbb mov ret test aad mov adc pop push bound daa adc repz sub aaa cmp popa pop mov aas jne mov lret cmp out pop xor add and add pop aam pop jge push and stos cltd jle add sti jmp divl ret lret inc add in ja sarb pop rcr dec mov add cmpb pop out fs mov icebp popf (bad) inc jmp sub bound icebp inc repz mov push retw add ret push pop push mov adc test mov cld jne xor jg out push cmpsl jne pop aad (bad) mov xchg adc mov and (bad) fnsave not outsb fcoms and push and popf jae adc ljmp dec mov (bad) adc jno mov (bad) jge or push cltd jo hlt jb mov pop and out push pop sub popf pop mov jmp adc add bound mov xchg mov xor ja lods dec loope lret xor out imul xchg lock xchg fdiv jmp loop or sub cmc push pop inc mov sbb dec add out divb xchg add lret mov add add jle imul mov daa jne pop in cli lret insl adc movswl xor shl test addb call adc lods aas mov pop cltd scas and dec sti or sub inc test mov imul iret mov pop xchg ljmp nop jmp push cmc xor mov icebp mov cmpsl aas dec push pop aam (bad) aad ljmp mov das int3 sbb inc or jmp (bad) fist movsl loop fcoml pop jo cltd je or nop pop add xchg pop mov or lahf inc pop das mov mov shrb pop cltd js popf stc lock cmp lret mov or jmp dec sarb lock or sub outsl jno xor push cmc xchg out jb mov out (bad) dec mov push icebp sbb shrb mov dec xlat dec push les pop mov add xor inc fnstcw flds mov mov xor rcr icebp outsl lods pop mov ret fsts pushf adc mov sub popf hlt xchg push adc or in mov (bad) into ljmp add loop or mov push repnz int3 fbstp push lret sub scas fstps adc mov jle mov mov fisubl dec sbb out mov sub ficomp inc pop loop mov cmpsl push pop mov inc fbstp push sub lock rorl rcr dec mov and or lahf (bad) jl push xchg lock dec loop (bad) pop dec fmull mov rcr dec stos xor leave loop roll pop and stc (bad) (bad) cmpsl xor dec shr mov sbb mov fstps stc pop test pop (bad) fstps aas mov push and enter cmpsb jecxz cmc jnp cmpsl fcmovnu mov push mov xor mov (bad) push or int3 popl pop push jmp add pop mov mov lea orl dec ret jg xchg cmp jle add xchg notl jo repz dec dec xchg cmp jmp lcall (bad) jns or sub xlat mov jns and fisttpl jo,pt mov push repnz sbb aam ret adc pop xchg lds mov imul (bad) add cld jle call scas mov xchg loope aaa and scas xchg enter cmc sbb push sbb mov pop mov mov (bad) stos cld shl (bad) xor cli add mov jmp or mov rorl out fstl pusha and pop into mov adc add clc xor mov cmc in movsl std into dec popf jae and popf inc jp and sub loopne add sbb add in dec jmp ljmp cmp fisubl push jg or daa popf dec cmp inc (bad) cmpsl out (bad) mov push mov pushf dec or dec lret push jp addl sub pop mov or pop cmp push shrb sbb pop inc mov shr mov (bad) mov and call jle loopne (bad) xchg pop andb sub stos arpl and es or sub leave push imulb cltd mov pop xor negb adc xlat stos mov jbe push data16 cmc or daa inc or sbb add subl dec neg dec cmp fsub mov push sub fwait pop (bad) push xchg ljmp rcr jb rorl push ret cmp (bad) sub xor (bad) in add popf rcrb pushf ja int3 popa or mov inc adc jne jecxz mov sub pop inc scas adc inc xor and cs inc mov sub fidivl loope repz jl in lahf (bad) mov sbb pop cmpsb ja sub mov dec paddq xor out std icebp mov test pusha push ljmp or sbb push (bad) loopne (bad) jne test bound push mov stc int3 cmc mov sahf mov mov fdivl pop pop jl rol pop mov test dec mov dec mov dec inc sub cmpsb out dec cmp negb mul push adc flds inc mov pop jmp xchg lods mov push pop rol es ret (bad) sub mov mov mov xlat sbb (bad) lahf repnz es jns push mov pop or cli jne jmp jb loope push sbb xor (bad) xchg lods loope pop sbb leave inc js repnz jb sub xlat (bad) xchg sub mov mov or icebp jne mov cmp mov (bad) push jns sub arpl inc dec bound roll dec (bad) cs push jb adc cwtl or jnp sub lret sub xor mov mov (bad) push pop ret mov xor pop dec push repnz sbb mov (bad) xchg mov adc sbb pushf pop xor scas or inc inc (bad) lret and sub call jns dec push mov inc cmpsb mov lret inc scas aas sub int3 jl add aad cmp enter (bad) jbe pop leave cmpsb lcall mov (bad) push repz cmpsl jns cmpsl pop js jmp test ret sahf (bad) or add sub addb std adc or dec add cwtl mov outsl cmp ret loope pop mov xchg and jae push cs pop sub lds adc stos lret aas dec out jbe fnstcw sbb shll pop in or enter xchg sbb dec idiv xor pop lea cmpsb cmp jnp jl push ret mov (bad) mov stc outsb arpl rcr push sbb fisub cmp or loopne cmp pop mov inc out lods cmp sti js mov (bad) stc dec inc mov push loop sar es jno sub dec es push fstpt add movsb mov dec mov ss cli ret outsl js mov inc adc daa add sti pusha xor (bad) mov inc add xchg test jo icebp pop into sbb push mov xchg stos (bad) ret outsl add jmp or jge lcall sub add pushf fwait shr lds and idivl hlt lret push std xchg outsb (bad) mov stos mull and inc sti cmp (bad) movsl adc cmpsl lahf push add fsub rcll dec movsl lea rep popf cmpsl pop lds lods (bad) jmp sbb sar out repz push jecxz nop and or pop les xor ret cmp dec push addr16 jg and sub iret and cmp (bad) mov in xchg dec sti mov je scas adc push mov mov inc mov mov pop fisttp daa fldenv out pop cmp iret jmp test bound jle add std lds or xchg arpl dec mov daa mov loope dec decb pop (bad) sub xor mov push mov fnstcw fs xchg push mov loop xchg jecxz adc adc aad lds xor repz pusha mov popa out dec in cltd cmp repz stc fsubrl push push es daa push xchg sub jle aam call jmp and (bad) ret inc inc lahf or sbb nop and sub sub pop popf cltd stos data16 mov pop fbstp sti cwtl sbb mov add mov dec pushf sti (bad) repz imul lods jmp (bad) (bad) in sti loop adc xchg adc adc sub (bad) out ljmp xchg add xor (bad) fs push lcall mov push lret cmp shll clc push pop mov fs in repnz scas orl lret ljmp imul into mov push or dec fcompl jp mov ret and pop out popa dec icebp sub mov mov lcall adc jmp cmpsl imul (bad) mov xchg add stc or cli jmp xor mov mov movsb test lods xor sub out cltd gs jp lock pop push jle and dec ret add add call dec jmp mov sarl mov stc lret aaa addr16 or pop leave pop ss stc adc shrb fcmovne fidiv and push and lea xor mov mov jecxz inc int push scas popf push insb stos loop movsl sbb scas mov stos jge ret xchg lds dec adc lret xchg dec not dec ljmp push aaa in scas or mov xlat cmp inc cltd adc add lods adc imul add out iret mov jmp jge xchg sub dec mov jne mov or mov mov gs movsb lods daa jg jp inc lcall or cs pop mov in insl add mulb fstpt lret (bad) mov pop cmpl pusha mov pop add jecxz sub mov rol adcl cmp sub movl mov fidivr loope shll adc dec mov push hlt sub pop fwait stos pop mov add add cmp pop ret xor bound std out and (bad) xor or jmp or jg rep mov xchg mov loope inc cmpsl mov dec (bad) call into dec rorb clc mov dec adcl mov std inc xchg ljmp jno sub (bad) jns dec adc in sub jecxz,pn shrl xorb rclb adc jl lock popf icebp arpl xchg push sahf cmpsl fs (bad) cmp in shlb push jg scas popf fsts pop (bad) push xor mov stos call push mov cmp ret lahf push sbb sar xor add pop ret (bad) mov gs xchg and pop push and add mov cmc inc lahf das jbe (bad) fidivr add inc arpl call push cmpsl fwait pop bound sbb into jno in and jecxz xor incb lret and das out in xchg adc xor push movsl pop sbb mov dec sbb ret mov jne out xchg jecxz xchg lret mov and pop mov add sti mov mov pop jmp (bad) mov ret xor into fsubrs mov or cwtl sub jg mov call adc cmp jne lcall or xchg in xchg fdivl mov adc jmp dec ror push call xor sti test xor out mulb add jns iret xor cmpsb leave jmp pop inc mov pop dec sub das shr jmp les or pop mull sub and mov mov (bad) push xlat in adc movsb das mov add adc add mov dec (bad) out mov dec test cmp pop jecxz adc repz lahf jmp dec pushl mov jnp lret pop ljmp jmp int out push jmp push and daa loope and push pushf add in shlb test xlat mov (bad) xor repz roll add stc lret xor ret ljmp fiadd iret xor push fxch js clc mov jmp je sub mov in lret test ret rorl and es lret test add loop sti or jo xchg cmp sbb mov sub dec fnstsw push imul or xor pop xchg or pop mov and stos lds add daa dec and pushf imul daa or sbb inc ljmp dec lds cmp push pop and orl out mov fistpll lods bound movsl mov push inc dec scas mov pop test xlat jmp outsb nop xchg push test push scas in lods (bad) mov call pop dec call test ljmp div pop pop sub mov pop cmp xor mov loop aaa cmp sub gs scas add dec xchg mov test das push mov push dec mov movsb pop add xchg outsl imul inc lds mov aad stos pop loop cmp iret sub xchg fdiv fs sub xor sub pop mov mov mov lret and fisubl fild dec idivb push lret fs std add push mov mov fmull or add inc jb loope iret push mov icebp mov das adc das test movsb mov cli mov mov int mov cmp add push (bad) xor dec (bad) (bad) xor cmp jns insl pop loope js mov adc add decl lret jno repnz sub cmp adc lret mov cmp lret loopne or lret cmp leave add (bad) out jmp sti push and jno inc lahf ficom in stos bound ljmp mov movsl enter and lahf dec pop mov pop hlt mov stc mov mov clc xchg repnz int jp jp mov xchg jecxz mov (bad) fild lods cmpsl les fldcw mov fldl or push pop imul pop repnz das cli popa ret (bad) sub testb mov jmp and xchg dec hlt xchg fstpl sbb xor fidivl (bad) jne rol lods divl mov imul and or pop push sbb push inc xor add outsb xor sub jnp xor pop mov daa xor sbb sub sti ret mov jns in pop or pushf lret xor xchg loop xchg scas push mov adc mov movsb test pop loop (bad) sub inc pop add and bound pop xchg pushf cs mov pop push pop or jae movsl cld push (bad) idivl shrl and in push sub enter xor xchg lods adc sbb loope xor or xchg fwait cli push sub std mov dec jbe cmp mov sub icebp jmp (bad) mov mov push inc jmp push (bad) lret mov xor (bad) xor mov lcall push push sbb mov pusha mov jmp imul lds icebp inc sbb cmp in push in cmp sti in bound (bad) cwtl or mov movsl bound sti mov aad cs mov sti iret sbb xchg ljmp xchg (bad) out fwait pop pop mov das into mov cmp xlat sbb pop in into sub and xchg inc fsubrs daa js pop imulb stc in jmp mov jle adc inc and clc into mov add pop rorl and insb enter in call adc pop fs mov jnp and pop sbb movsl push xor popa imul pop mov mov icebp and (bad) lods push adc and adc loop pop xchg iret ljmp jmp push cli decb daa jmp dec std movsl sbb scas sub dec loope sbb mov scas push sarl adc push or loop mov push jnp cwtl test stc mov rorb adc sub pop movsb inc pop jne in sub dec dec mov adc sarl sbb sbb outsb mov and mov or fstps sbb clc mov dec adc sahf lods movb push mov (bad) movsb cmp lods dec roll sarb dec mov sub sbb pusha lods fs push inc xor lods out lret pop js popf pop xchg push nop mov xchg and and add lahf xchg and in sub sbb or mov xlat rcl sub cmp or jmp call cmp lcall push sbb ja mov in adc cld cmp sub jmp push adc cwtl aam cmp (bad) cmp cltd xchg xor pop adc sbb mov mov xor fnsave add inc sub mov (bad) xor dec jmp and fidivrl icebp cmp inc push pop hlt sub xchg repnz aad jmp (bad) data16 jge,pt push dec repz jae out xlat dec fstpl sub ret pop pop vmovaps sub jnp je mov (bad) jmp mov xchg test das sub mov inc cltd jne xor ret or ljmp addb sahf cs (bad) mov cmp cmp aaa sbb lret in into pop inc pop mov loop mov ja (bad) pop ja sbb xor mov mov sub notb add jg call and cld cmp or leave pop jae daa pop fldt bound push xchg adc xchg and fdivrl jmp stc aas leave lock mov fistl icebp aam popa ss inc lahf push mov jle jb sub jge jge jns fs or dec mov (bad) xor scas dec mov push sub clc pop cmpsl ljmp (bad) pushl sub fcomps dec out stos mov in aaa cltd xchg xchg pop mov mov push push jns aad out pop mov ret jle dec mov mov cmp stos mov xchg (bad) sarb and stos int loop repnz xor stos loopne inc daa sub (bad) mov shll mov fs add push sbbl jmp dec lea out adc pop jecxz dec stos test and mov xchg aas add icebp ljmp lcall jno xor cs sub repnz shrb pop sbb cs sbb and (bad) push lods pop (bad) sbb lds mov xor loop inc int incl mov das jb ret enter lds jo sbb mov inc insl (bad) and sub insb repnz mov gs pop dec and rcll push jl add jge out cmp cmp in xchg out sti sub jmp negl sbb xor or or notl push pop loop mov or cmp (bad) cmc jle sbb sub and cmp into outsb jecxz jl sar xchg lret pmuludq mov add sub push lds std cmp jbe pop sub (bad) dec test ljmp push ficom shrb loop test out out inc inc popa fs cmp jne int sub (bad) xor sahf cmpsb leave cmc mov pop mov sahf push imul and push flds gs das push jl xlat gs scas fisttpl sub bound test pop or pop loope add scas mov xchg xchg and les mov popa adc loopne xor gs aaa cmpsb jmp dec dec add or mov push sbb into (bad) stos cmp mov xor sub sub fidivr shll sub lret cld dec stos sti (bad) in xlat jbe push dec xchg out jl in pushf or adc lret push lcall adc jg btcl cmpsb mov ret call xchg xchg lods xchg pop mov jge xchg and ret sti sub or dec add mov mov xchg cmp mov or push mov nop addr16 sub xor (bad) xor gs arpl or xor dec sahf xor mov ja jge mov sub sarb jle test mov push jnp xchg xlat mov (bad) mull xchg ss roll ds sarb leave and loopne xor xchg (bad) notb flds pop jmp pop and mov int3 movsb xchg aaa inc icebp inc xchg loope sar das jecxz fist push ljmp test add pop xor pop sub mov inc stos push xor xchg adc pop pop out jecxz cwtl xor pop gs lods fisubl ret push lds sub aas mov addr16 jge inc adc sub push lret imul imulb out movsl jg nop mov in mov xchg pop lret cmpsb call shll sub or ja xchg jo mov rcll pop scas dec out sub xchg (bad) call shlb push notb sar mov imull scas gs xchg or xchg jmp pop movsl call ret in subl cmp xor and add mov add mov sbb push pop in xor out js loope sub adc sub lret mull dec pop popf or xchg push mov test inc popa insl or mov push repnz mov lds mov mov gs mov lds xlat xchg sar xchg jge loope iret aas lods mov add cmp xor out mov lret jmp repz or add mov pop rcll lret shrb mov rcrl or mov mov negl cmp xchg push cwtl inc sub aad aas inc test pop mov (bad) cmp sti cmp iret popf inc cmp and in sbb mov lds sub add mov xchg adc xchg cmc push mov and push pop iret jnp fs mov mov vshufps or jg mov push fcoml jmp jl (bad) xor push out jl mov pop push push bnd and fcomps sti jb iret outsb jnp out ficoml (bad) mov cmpl rolb iret out xchg das cltd and divb cs jge pop cmpsl push clc push (bad) cmp out xor dec aam sub loopne imull (bad) jne in push adc lret pushf div jbe add xchg mov sub andb inc sbb sub leave ja add gs test (bad) dec fistp mov jmp add rorl mov stos call mov popa or mov mov push lea sub out xchg lock and sub arpl loopne into int sub push sbb or out dec (bad) xor xchg stc ljmp lret mov pop jo xchg ss leave scas inc cmp dec push outsb or push push scas mov ret stos adc add mov sahf shr add es push xchg or insb pop push mov xor mov dec ljmp or mov inc jecxz fidivr jae daa cli add lahf or cli xor insb mov stc push cltd cli lock and (bad) xlat mov loop ja repnz push stc push push lock inc repz ss sub out pop xor xor xor mov or in daa pop int3 push out repz les fisubrl add xlat adc pop rcl fdivr mov ret pop xchg adc js dec jmp jmp stos pop xor repz cltd dec jle test xor les push lods lods mov (bad) in jnp sub sub sub adc fmul or xchg cmc sahf dec (bad) cmp ja sub or ret out and or push jge xchg nop roll incl pop xchg cmp pushf cmp push pop add enter pop cs (bad) xor (bad) dec and xlat cmpsb mov out lock sti int3 insl sub lea xchg cld mov or std mov push xchg mov data16 js jbe pushf jns xchg push jb enter add jns lea mov pop out mov adc cmp loop in xor adc mov mov dec scas sub mov xchg pop mov (bad) pop outsb adcl out addr16 in adc jmp and orl popf insw push jb testb mov pushf sub pop decl iret movsb xor popf outsb inc popf pop xchg cmp jnp (bad) aaa mov test jge sbb hlt xor add lret out leave (bad) imul insb or ja adc jb fnstcw xchg dec pop sub outsb loop fidivl ljmp sar mov test fimull sbb push aaa cmp mov or pushf mov shr das and stc jae push setge dec fincstp pusha pop leave shrl or and ret adc mov cmp push lret lods push jle roll test sub test dec xchg test (bad) jmp push sub dec mov das idivl es mov ret mov or mov push xchg push and adc mov cmp fucom in gs sub push add repz hlt mov push inc das stos sub out xchg into xchg rclb scas xor (bad) fsub sub daa fmuls mov pop scas xor push jbe push xchg or adc push xor ds sub and shrl dec stc adc push cli jno sub cmp and jp ds add inc stos inc jnp test out cmp out sub jecxz pop mov adc mov ret (bad) call mov fcmovb add stos sub sbb adc mov push push inc lret dec inc xchg pop ficom push mov rcl insl dec push jl out mov cld sbb push sbb jnp add or sub aas add add out push mov rcrb mov je (bad) cmpsb inc adc inc sub mov or add fs sti mov (bad) in jmp xchg ja push fnstenv or cmpsb jp (bad) js sbb fsubs rcr mov adc push adc ljmp fmul das jecxz inc jne out xchg lret lea fistpl mov push push ret sbb pop popa lock negb jnp sahf inc push ja sbbl inc cmp push xor movsb xor (bad) mov sbb ret pop popf js mov dec jle (bad) shl dec call push add adc xchg lcall and lret fstpl xor sti repnz and popa icebp out xchg push mov icebp xchg cmp mov dec out lret add stos repnz (bad) jbe int fabs aas clc in icebp in sub xchg dec and out sub stc xchg ret imul stos sub leave dec or and daa fbstp ret call jb and adc jg jmp (bad) divl je dec sub and sub incb mov jne ljmp pop rcrl pop mov push mov pop mov das cltd jle sub xor cs pop std sub mov xor dec int3 jb pop mov xchg jb push mov int3 xchg dec les push jne in sub inc clc push and jne cmp pop fstl movsl ja fidivr mov loope xor push jae dec mov jne dec daa out mov dec or add dec dec cmp xor mov shlb lock addr16 and ds repz sub add imull dec iret adc icebp mov arpl jmp cld arpl mov fwait sub into push sbb shlb add (bad) push fcmovnb mov cmp sbb push sub lock sub push daa pop cmc dec ljmp xchg sar or es push mov cmp inc rcrb js shlb mov sbb dec dec out sub aad ret jnp mov (bad) cs jge out out std daa into pop xchg cvtps2pd mov pop test cli fisttpll or outsb mov cmp test loop push sub cmp into fcomps movb leave (bad) or pop cmp daa arpl cmc dec cmp pusha xchg icebp fwait inc into cmp ljmp push xlat xor int3 push popf mov movsl xchg movsl or in int3 pop call jmp mov mov xor icebp mov jae jns stos xor jg add pop and inc cwtl cmpsl (bad) mov ljmp mov (bad) xchg fcoml mov (bad) in sub (bad) pop mov (bad) (bad) cmp sub out and les sub add mov jge xchg out mov stos mov ficoml cwtl sub repnz jb fimul jp (bad) cmp or ret jne sbb xor fbstp lea (bad) out stos cwtl and popf xlat xchg mov ret xor xlat ljmp ds xchg jnp pop (bad) xorl je out sub fucomp xchg pop sbb scas sub jmp push jo repz xor imul xchg (bad) ljmp inc into jge dec xchg or mov (bad) jae aad out sub add xchg xor or push push push repz xor sub ret inc mov push xor leave xchg sub xchg push mov (bad) call (bad) insb test cmp lret out push pop aad xlat js xchg int3 sub mov jae popa jae or add adc shll dec xrelease je pop (bad) dec jle mov push sbb icebp (bad) js ret negb das sub in and sub mov mov (bad) xor repz xlat mov pop or sub mov sub movsb lods mov add loope call ret mov sbb out jne sub mov pop imul scas loope dec pop add cs subl xchg in scas mov mov aad pop loope jns dec leave fcomps pushf mov mov repnz repnz pop adc mov mov outsl sbbl sbb lret or or fimul rclb mov repz cmpsb pop (bad) cld repnz xor mov das lods mov jo mov or fs and or jb lock xor and (bad) xor sti cmpsb xor mov dec add inc das or adc out mov je in aaa pop pushl loopne pop cmpl jnp scas sub out das jmp jp sbb dec lcall ret sub and cli mov cmpsb aam sti xor stos pusha push or jmp pop push outsb fild jge hlt daa fistpll cltd out or testl mov imul out adc xchg mov mov cmp push mov add aam subl sbb (bad) xor lock popf pushl cmpsb push stos push xlat out ret xchg out nop insl mov dec mov addb test inc xchg (bad) push shrb sti popf lcall test jo xchg shl lods inc pop inc sbb jecxz loop lcall popf xchg mov adc leave push in popf icebp jg push das inc sar imul (bad) std mov (bad) std ret sub repz stc decl enter dec cli lret mov imul cmp int3 (bad) mov sub xchg sbb out mov xchg pop pushf jbe pop loopne icebp mov lret jno cmpsl loop jne adc jns addr16 in test mov inc stos sub add js pop jmp sub out popf aam jb mov pop mov jno adc xor push mov das rcr test push pop lods xchg das pop in xchg (bad) or mov sbb jbe pop pop popf mov jmp out jge inc cmpsb es mulb push xchg mov sub aam mov lret push adc cmpb jno adc xchg out test and or incb out adc add das pop gs push or mov pop (bad) jmp and xchg push inc xchg xchg xor mov cld repz divb movsb adc into cmovns std insb fwait sahf and and xchg jns out roll push roll push mov aas jl fs (bad) aam or sub jbe mov decb mov cmp pop push std sub jns dec sub pop into sahf daa push inc scas push decb jno das mov pop adc (bad) xchg dec lock cmpsl add daa or (bad) out sub das inc jg lods gs pop leave in cmp push xor or nop es repnz insl sub push stos cld pop push and scas mov lahf xchg cli sbb pop jns imul pop dec std test ljmp (bad) cmp sbb and data16 or sub and leave repz jle std loope xor xchg dec stc dec xor out aad sub or or adc cld mov sub push shrb dec ret mov add push add add in test cmp xor cmp pop in scas test in jbe das popl sti sub aam lret push call push cwtl push leave dec mov add xor icebp pop test cmp mov adc and inc shrl (bad) xchg pop push insb (bad) sub jbe std jnp add jmp ljmp int3 lcall mov and ljmp mov adc inc roll push or imul mov fwait pop jno imul or int insb loop lcall dec data16 in add imulb ja daa push jl imul stc inc cmpsl xchg (bad) sti movsl adc sub icebp inc sbb or pop gs mov es push mov pop inc (bad) daa lcall (bad) mull (bad) inc add push mov mov iret pop lds lahf mov (bad) xor push or fistpll enter decl test imul add mov mov pop pop call jne rolb pop enter fbld mov rclb xchg (bad) in mov jg jmp rol stc xor rcr leave movsl frstor pop and xor jbe ret jl outsb push std fadds add mov notb xchg cli in or mov and sub mov pop sub ja mov push ret mov clc lret push jmp sub adc adc cmpsb hlt dec scas les jecxz pop mov dec xchg cmp add mov movsl insb scas pop sarl mov stc cld push pop jl (bad) xor inc vcomiss cli cmp popf test mov inc fimull or into inc jo jge xchg aam jnp dec aam leave sub cmpsl mov push shrb cld push sub pop loop shl add xor ficomp fmul inc pop arpl jb lret jge in pop push cmp lds cli dec outsl or xchg inc and (bad) jle imul and sub mov push repnz js fisubl adc cmp enter mov loop,pn adc pop imulb mov inc test mov sub inc and leave push movsl xchg or stc data16 (bad) (bad) imulb inc mov cwtl mov loope out sub movsl jmp test sbb pop je out xchg mov jae and dec xor mov add aaa add xchg sub lock sbb mov scas mov mov adcb mov mov (bad) sar aaa mov or cs or mov mov sub jg ljmp mov jle popa xor xor icebp call mov jmp or mov sub or adc mov sbb repnz fdivl imul mov loop sub xor xor ds xchg push jp push (bad) popf pop sbb repnz mov push ret test jecxz out push mov daa fwait xor xor xlat test addr16 push adc out int cmp xor inc add pop lock into mov jp ficoml xchg stc xchg sti jmp test sbb popf cmp pop jle jg ret or fs mov js dec add mov mov scas je mov add in in pop andb cmp cmp add or or sub lea stc into das loopne loope inc lret cmpsb ficom inc test or iret (bad) pop sbb sub jnp xchg repnz sbb (bad) cmpsb xlat xchg mov dec or dec lods jg incl daa divb xor push pop out das (bad) fnsave lret jae xchg stos lret add inc imulb test ds xchg lods std mov fnsave xchg scas xchg int3 mov mov mov and push ja ljmp (bad) iret stc (bad) push jb and or (bad) out stc cmp xor sub mov xchg lahf push xor sub dec setge imul jmp inc jno sti mov out mov out lds push cmp add lock roll movsbl insb sub mov or (bad) sub add rorb mov cmpsb mov or ret (bad) xchg pop mov inc pop add sub add push std xchg mov dec mov rolb dec and pop or mov (bad) mov or das int3 (bad) fistpll mov mov sub into push dec scas mov mov test mov mov int outsl hlt push dec mov fwait xchg fcmovb xor mov roll add mov adc mov rorb and divps aaa movsl xor shrl dec int3 jne dec sarb sbb add ret add sub ret es mov dec repnz mov ret sbb js loop ja pop ss inc mov dec or mov pop cs cmp sarl idiv jmp mov popf cmp cmp sti xor mov hlt xor pop jns dec jbe add scas imul out sub imul fadds push outsb fcmovbe mov push and add cmp arpl mov and ror dec add pop popf js mov and (bad) mov ljmp or mov loope test bnd mov xlat jno lds mov sar je lods popa dec fnstsw cmp mov sti (bad) dec or mov mov cmp test and or mov rorl stos lcall (bad) jecxz push into popa push or movsb mov and dec lods and and sarb mov clc fs lods int cld mov inc int stc push dec cmpsb sbb xor mov cmpsl push mov push xchg jg repz jge sbb add xor and cmp cltd jg push inc in pop mov ret (bad) or xchg ret scas (bad) fdivrs and jno dec out dec and psubsw dec fbstp repnz xlat jecxz das repnz push dec pop int3 mov push add xchg push std xchg iret mov js clc add ss mov dec dec and pop mov mov push jg jno mov jo pop (bad) ja mov js pop out mov fstl imul notl lret mov int3 lods cltd fsubs fsubrs fstpt jo inc stos (bad) repz mov pusha xor in leave dec repnz lds jmp xchg divl or pop adc lods push mov in and xchg pop movsl push std mov in rorb push lahf mov incl jmp insl jmp jb imul sub xor jmp not dec movsl inc xchg mov (bad) mov int3 popa test mov adc sub inc xchg pop fs ror (bad) fistp or pusha sub cltd mov dec fimul shll pop outsb ljmp aad mov mov xchg rolb leave repnz pop ds xorb cld fsts outsl test jp sbb fimull repnz (bad) es bound mov or faddl sbbl jno repnz push vpmullw sbb and mov mov loopne loope add movsl xor loop rol mov push lds sub (bad) out rep fs xor add (bad) sub lea call add cld mov xorb fdivs or xor movsl xchg rep mov lds xor add mov adc or xor dec cvtps2pi add scas xor inc divb or insl or (bad) bound repz mov repnz pop mov negl mov (bad) shrl mov loopne dec xor movsl xchg or cmp leave mov fwait loop (bad) repz mov add mov pop xchg loop mov adc cmp pop gs or lret jo stos jecxz xchg lret jmp ficompl xchg xor aam cmpsl jg mov leave data16 es out sub push mov dec stos cwtl js dec out out das sti add sub rcl mov xchg pand roll lock mov mov pop inc jmp mov xchg in fiadd xchg clc dec mov call sub push sub fadds call fidivrl xchg imul mov cmp sahf imul pop jp jmp sub sbb push pop sbb push loope cmp inc adcb fld ds ljmp (bad) mov lcall fistpl cmpsb jne mov lahf stc sub mov aas out push xor jbe push xchg xlat mov loopne lods jle scas rcll add in test in sub mov or ret in dec sbb inc and loope cwtl ret (bad) dec sub fldl xlat ret jne sti dec jg fdivs leave dec mov das out push ret stc and fdivrs test mov scas repz jbe leave inc xor repz clc pop mov push xor add addr16 push adc rcl xchg imul add adc xor movsl or add pop sbb mull jle icebp repnz xchg insl fildl sub inc add mov mov mov movsl jb scas mov dec push dec sub ljmp cli loope daa (bad) imul repz dec mov jmp jnp sub adc test mov shrl xor push (bad) add jmp xchg xchg cltd shrl add repnz ja mov and xorb xlat push mov sbb adc repnz pop sbb cmc add mov adc push pop outsl push xchg jmp xor hlt (bad) fs gs xchg push sbb iret and xchg call and mov jg lahf dec repz (bad) sub mov lcall stc pushf xchg and mov xchg add add xor and hlt loop add (bad) and in jbe mov shrl bound jmp call fimull jge mov and xor popf in test mov push pop fdivrs std lock mov cli (bad) jae adc pop cwtl daa mov mov cmpsl dec push xor mov push cmpsb xchg repz fwait repz lahf in ljmp rcl scas mov imul xor aad call int cs sub dec add and sub sbb jo sarl adc xlat push push pop ret mov adc dec loopne jb out ja adc xlat lret adc inc adc and pushf add xchg aaa data16 cwtl pop and lret div and and push mov sub and cmc imul inc daa (bad) (bad) imul pop stc loop loop nop rcrb ret mov push mov (bad) sub daa (bad) (bad) xor xchg mov shrl div aam mul sbb mov add pop push pushf bound (bad) jne mov popf adc lret lret dec divb out pop imul scas lea imul out push dec mov sti popf push sbb repz lret and or je outsl sahf or or sub adcl insb sub lods out lret fxtract lahf (bad) and or ja inc into mov mov leave jne and jnp xor lahf jae sub inc popf fld add es push cmp nop inc xchg int3 das dec shlb into sar (bad) not push inc mov xor lahf (bad) repnz ret ret movsl (bad) mov adc jg imul and and daa cld stos rolb xlat popf aam jmp jmp mov inc xchg and ficompl cmpsl in lods dec xlat dec dec sub sub iret rclb add mov (bad) imul pop jmp test xchg add jae mov fcompl stos sub call ret add mov aad cmp ret shlb inc popa daa push adc pop mov dec out pop out push and scas fadd mov adc push fcoms inc mull rorb cli cmp lock mov mov mov xchg dec jb loope cmpsb imul inc movsl mov mov fmull (bad) fsubrs jne ss xchg xchg cmpsl lahf push pop or int3 or sub xchg xor push inc inc ljmp xor out or rclb add sub movsb mov daa ret nop add mov adc cmp add (bad) int pop outsb in jne add mov mov fistl xor js or leave mov jge cmpsb das les or push and sub (bad) ss std out push add scas repnz xchg scas push xor sti mov movsb xchg (bad) xor sbb cmp ja sbb or mov lret jno adc xor dec (bad) (bad) xlat push sbb inc outsb xor mov cmpl push lds sbb popf xlat jbe shll lcall inc jp dec cmp xchg mov leave or jg shl adc int3 pusha outsb mov mov ret mov outsb repz sub fcmove xchg (bad) xor mov adc push pushf scas mov dec dec mov cli mov inc mov js (bad) mov add push int3 cmp jae or ret xchg addr16 arpl in jmp lds dec mov dec stos into fstps mov decl out pop (bad) ret dec pop mov adc ljmp sub das into mov pop mull lods push shrb inc dec mov sub fwait pop adc rol jmp push ret jge xlat imul outsl push cmp (bad) and in stos sub xor test sahf pushf or xor repz fisttp sbb ja xor (bad) cld push push or repnz rep or xlat sbb ss mov call sbb iret jl jecxz in int lods mov movsb inc pop fucomip push pop cli dec fcoml divl dec dec out mov mov ds mov cmp stc jo adc and ret add adc mov mov cmpsl push js push (bad) mov arpl xlat stc pop movsl aam and pop sub mov mov add xor repnz sub js xor jns dec (bad) repz loop push pushf mov clc outsl imul pop rorl out add sahf mov lret or in mov (bad) pop call outsl icebp add decb pop fldt into out sub into xchg faddl enter ret mov pop mov (bad) cmc das roll push rcrb jb dec nop loop and stos ret aam pop imulb or jle mov stc or push inc stc lds mulb sub mov push leave addl cs sti sub jmp jae pop dec ja fdivp push data16 sub fimul mov (bad) sbb jmp jb adc dec loope movsl xlat mov or ds xor mov mov push lret cmp mov daa sub jne cmp repz out pop insl mov lea sub dec push (bad) push sub fcomps xlat idivl xlat push mov mov ss mov not or testl jl sbb xchg mov pop mov push xlat data16 repz fist popf inc and into push popf (bad) imul xchg mov xor gs mov cli mov jnp loop sub aas test xchg daa sub dec nop dec repz bound adc xor cli jne in sub scas lret loop xchg dec add and jo mov fcoml ret test and dec push lret xor and das repz jb dec jg movsl scas sub push add push popf inc adc push xor pop jne popa mov jmp sti loop fildll fs (bad) ss mov ficompl ds ja xor push mov imull roll push popf scas loope push out jmp ret cmp test rolb lcall inc outsl add mov cli cwtl and fwait (bad) das dec mov sub and mov xor push loop or notl inc test ret sbb cmp fistpll clc pop lret jmp cmp inc inc and lahf repz lcall es imul xchg cld inc (bad) (bad) outsl popf push fcmovu mov out dec fisubr ljmp mov mov xchg sbb in fstpt insl fidiv or sbb inc (bad) and (bad) inc mov loope hlt rcrl sub push lret xor pop ret mov into dec mov jmp push imul add stos stos popf sub or add (bad) lods jge pusha xlat add sub mov or push mov aas add ss push out pop cmp mov in mov and imul (bad) fldcw loope ret mov xor sub xlat aad repz mov ja popf jns ret xchg sub sub or pop jb repnz xor ret (bad) ja mov shrd sarl mov pop mov lcall sub jl shlb idivb pop sub pop inc loop mov jecxz ja jb lock pop mov pop pop sti add leave mov cli imul (bad) scas adc push scas loop xchg repnz mov (bad) std sub cmp sti pop sti xor movb sub sub daa mov fisttpl sti mov das stos gs mov or lret adc mov shr popf imul pop (bad) cmp mov hlt dec loop or dec push (bad) lahf int3 add ljmp sbb iret jl or dec fsubl stc cmp mov inc pop popa leave jle idivl mull sti es push mov and xlat mov mov pop mov pop stos daa (bad) cmp pop adc in ret mov sbb fldcw jecxz lock les sbb inc xlat cmp mov sub ret dec or xchg dec cli in sub mov xor sbb dec mov or test sub sbb ljmp jmp jle pop icebp cld je hlt xor stc in stos notl dec adc inc loop fild addr16 sbb mov sti mov pushf test test push dec clc fmulp repnz icebp and mov mov call mov cmp pop idivl xor lret fisttpll jns (bad) scas popa clc mov and push dec stc lods and fbstp rcll ds int jno,pn mov xor and es and les out js clc fild inc jne adc fcoml sub or and dec and sub dec rorl sti aad test and cltd es inc xor icebp test idivb xor incb pop lods bound dec (bad) xlat into jnp roll mov movzwl cmpsl xchg dec cmpsl sti add dec mov adc rclb push pop mov stos (bad) jbe push pop xchg into dec sbb out (bad) jae call inc ret sub popf sti or add in sahf xor and orl popa push sub cld mov cmp mov popf adcl movsb mov (bad) inc (bad) and and xor xor xor pop jg jecxz dec jecxz xor xor lahf sbb or sbb andl loope mov pop decl jno inc lret (bad) leave pop xor stos or dec mov mov daa xlat in jecxz xor push mov mov push or mov jne je push sarb adc sub mov and je or gs fs out push and adc mov push bound into pop fstpt sub btc and mov (bad) stc data16 or jmp mov pop lret dec or ja mov popf dec loope or bound push testl scas dec cmpl test orb test (bad) xor clc xlat (bad) js loope jp out enter mov fcmovnu movsb mov scas pop hlt (bad) xor in push fistpl cld mov add mov dec aam fnstenv test adc mov xchg ds inc xchg enter bnd (bad) jns sahf xchg push xlat inc aad add out pop in (bad) xor xlat sbb dec sub fs or and sbb sub jno lods or xor xor (bad) ficom imul push xchg mov dec ret xchg test test test sti xor pop insl inc mov idivl icebp pop mov call pop ffreep mov es push notl rcrl jmp cmp popf hlt mov and nop xchg in push daa test dec push scas fs push xor sbb pop push sub jbe sub add das les mov add sub xor es sbbl mov or notl into mov call loope dec and lods mov jmp adc push add test and xor jl lds sub stc dec adc pop mov push or or (bad) mov fs mov cmp jmp xchg hlt loope mov and cmp mov dec lret icebp mov pop imul stos loop xchg xor dec lcall (bad) and mov icebp insb sub mov mov mov xchg fs xchg (bad) pop fstps ljmp xchg test or sbb mov cmp adc cmp lahf mov mov lds or loop mov jbe lret jno cmpsl jbe js enter mov jne adc repz cmp mov mov fdivrs lret div addr16 clc pop xor jp mov xchg in repnz out or pop ffreep movl xlat mov fistl adc mov (bad) jno dec addb cmpsl dec adc in divl gs jmp subl adc daa cmp sbb jb andb push addr16 mov movsl repz fbstp jp mov call mov enter and pop lcall hlt lret push icebp das dec xor (bad) dec mov or movsb leave out lret add mov push arpl bswap pop std pop rcll cwtl dec xor sar and (bad) mov sub gs in call (bad) shr rcll pop repnz imulb add mov and mov or notl leave pop je push shll xchg loope xor clc dec icebp push ds mov loope mov ss xchg pop xor call fsin and and lds idivb sahf and aaa and frstor lret (bad) inc loop mov adc insb ds out push or lods push xchg pop jge outsb movsb push add dec dec mov ja lds lods push lret scas fldlg2 shrb and push enter mov cmpsl ja dec mov push mov pop jp dec ret enter mov add lods fmul (bad) pop jns dec inc sbb fmuls ljmp sub out mov pop call pop pop pop in mov out and sarb xchg pop xlat push ret lds fdivr out dec mov jl stc lods rcr lret cltd outsb ljmp pushf fstpl fmull leave sub cmpsl inc xchg pop xor (bad) dec xchg repnz mov adc inc sub xchg dec mov lds jmp pop ljmp pop outsl mov pop xchg push dec mov popa ds mov adc roll xor (bad) mov jg jnp mov add mov mov das je adc pop jmp sub loopne,pt repz and push push pop ret jg sbb xor push sbb fcmove mov push test add push aaa jmp pop pop mov push ja and daa fidiv mov cwtl cmp into fwait pop ljmp and (bad) es add sub imul mov jne into xchg idiv sub xor add out test xchg pop add adc ljmp ret xor in and pop jmp mov jmp cmp je xchg iret (bad) (bad) pop mov out xlat dec sar push sub sub fisub leave jg inc xchg xor cmp mov pop or pop add out jae mov std adc test and xor and sbb stc and call into xlat cmc movsb push inc adc mov adc mov inc sbb mov xchg (bad) mov inc movsl test fs jmp ret repz or or pop loope in sub xchg push pushf movsl cs push cmpsl int3 cmp add pop divb repnz xchg mov sub pop and pop sub adc or dec xchg ljmp insb pop mov add negb or and ja ja das mov dec mov inc inc or pop ds (bad) or and add in lret (bad) jmp scas fstl sti sbb popa cmpsb ret add outsb add pop mov push aas cs xchg bound add cmp ljmp add imul pop ret push jle repnz stc fwait dec dec les popf inc js popa imul in scas int jg clc ja pusha cmpsl jne or das pop (bad) hlt jle cli stos xor popf sub dec jecxz push adc xor scas xor into pop fs ret cmpsb mov dec xchg or mov stos mov outsb and lods rclb adc mov pop in imul xorl cmp cmp mov mov test xchg add mov idivl imull sub push mov std mov (bad) test or lock cmc ficoml cmp bound mov ljmp mov daa in loop incb pushl inc xchg add dec push jmp (bad) lds daa idiv sbb mov and test out dec xchg xlat lock sub mov dec xor mov add mov sub out mov rcr das negb or enter mov rcrb bound ficom popa fisttp add fwait pop xchg movsl mov incl scas (bad) negl test add or and xchg out scas cld icebp pop stos sub cwtl jmp faddp insl jle shll push leave cs cmp gs out mov std dec and adc mulb fs push (bad) mov loope sub outsb xor cltd or hlt mov lret (bad) sbb nop cwtl pop push pop (bad) cmp fwait pop mov adc fcompl jg stc mov xchg cmp push jle push inc and idivl add je mov mov (bad) mov in jmp in mov rorl mov sub xor jne sub xor mov cmp xor adc add ja add shrl xchg dec add sbb xor sti mull adc sbb xchg jns ss push out push icebp adc (bad) dec mov fisttp xor jo sub xchg jge lock dec fsubr add push mov or fucomip jg out sbb (bad) lcall and fs int3 pop out popf negl mov or cld out mov inc mov push jbe pop mov inc mov loope rcll repz mov lret jnp rolb leave mov ret subb cld stos lret insb jecxz divb dec add xor pop movsl daa out inc xchg or mov outsb test mov ret loope cld push rorb cltd (bad) push dec xlat or push mov jb cs lea adc enter cmp je jb inc or mov das out xchg jae aas sub jmp jl mov loop pop repz std mov pop push sbb outsb and inc xor aas mov repz out inc add hlt and (bad) mov push sbb aam imul mov call cmc dec add push repz push scas add pop and dec js or jmp sub mov lahf js dec xor dec cs jbe inc push jne xor xchg cmp repz (bad) xor mov and pop rcrb hlt icebp mov decl lcall fs cmp dec add adc test inc add out dec xor aad lods adc mov or and lret mov xchg dec mov xchg lahf movsb sub (bad) lock xor (bad) or out and repz pop mov jmpw xchg cmp std loop jne repnz aam out push adc pop leave add sub mov jmp mov mov or stc or pop cmc or shrl int3 mov arpl jno push xor call inc jg mov add inc and stc movsl jle imul jns mul jbe jne ret or (bad) mov popf xor (bad) push idiv icebp mov mov sti adc push mov bound inc leave fistp mov lahf in lods add (bad) movsb insb lock popf push push das test or mov push out pop or sarl or mov into (bad) sub pop in and idiv in cmpsb in or and out shr mov inc sub dec cmp mov xchg cli fs (bad) loopne jecxz (bad) jns cli cmp enter cs fisubr loop fstps add xor mov mov fsubs xchg call icebp jg pushf pop push int3 or mov cmp ss rclb (bad) pop xchg mov mov into das (bad) bound int3 (bad) and push in stc adc mov mov fsubl or cmp not inc mov pop mov iret decb cltd sub sarb rol fildll lods outsb leave mov je out dec pop jno xor aas xor icebp dec push lds and adc (bad) jg ret inc pop sti sub das das pop mov adc mov push push and mov pop cmp pop adc repz mov sbb enter fistpl lcall outsb lahf cwtl cmp cmp pushf js rorl cld loop (bad) es push (bad) in mov je adc stos iret test iret pop adc dec mov adc push les fucomip in sahf lret (bad) stc call mov push mov lock sub mov test sarl mov xor cmpsb lret and or adc push or ret xor enter sub ljmp iret cld rorl cmp xor rcl xor insb cmpsb pop (bad) sti cmp in jp inc mov inc xor ljmp fbld leave sub dec xchg lahf fcmovnu das pop test shlb imul pop negb rorl in sub out dec fnop push add sahf enter or (bad) sub xor outsb xchg xchg and pop xchg and dec pop insb lods sub lret es push bound xor rolb xchg mov lock inc mov add scas (bad) and mov (bad) mov fist mov (bad) mov jg std xor flds out pop fdivrl pop in mov mov adc mov iret pop push mov (bad) xor (bad) out cmp int mov push das shlb jne pushl outsb cmpsb sub (bad) mov scas repnz jl out dec (bad) pop inc dec jne xlat mov cmc mov add out clc int3 movsl scas pop cmpsl adc push xchg or mov pop lods pop popf cli sbb mov ja aam mov fld add call das sbb cld (bad) mov cmc xor pop fistpl push (bad) or pop daa fldt push or out cmp scas sub repnz mov shrb dec mov pop and test aas xor aas xchg fdivrl in out fsubrs sub and mov movsl in fmul add sub (bad) daa xor pop into xchg mov pusha fimul leave mov pop fnsave inc dec test add lcall shll or enter cmp ret std pushf stc sub roll pop pop mov roll rclb (bad) and add pop pop leave jge sti jbe jmp mov sub fwait pop sub pop jp push or lahf or in lods test into jmp mov mov xlat dec or test adc jno mov lds data16 cli ja cltd or push push out movsl dec xor call push lds sbbb roll mov negb (bad) leave pop pop xlat enter aas call add negb imul pop push (bad) xor ljmp popa (bad) or lret imul shll pop repnz inc xchg and mov xor inc mov into cld ss dec sar jno movb into pop out jbe dec out and pop sub mov mov mov pop or inc das repnz cmpsl lods xor and add outsl sub dec ljmp ja or outsb stos xor iret adc mov jle fistl out mov fs sarl mov (bad) (bad) fldt out fdivrs pop fldenv push insb pop pop rorb fsub in and int3 and cmpb stc and inc sub pushf mov dec (bad) stc jmp lret div sub call and fxch fistpll pop add and lea lret add xlat mov mov je or dec sub push add mov xor mov mov or in xor repnz (bad) jl (bad) fiadd into mov lcall sub adc scas cltd (bad) lods push xor xchg das out push rolb out ljmp mov lods ljmp xor sbb push (bad) or add out adc aaa mov dec mov jle inc in sub std ljmp inc cmp mov add xor or jne inc imul movsb popa call movsb dec fdivp adc faddl dec rcll and mov inc xchg xor adc outsl insb mov call repz cmp jl sub mov push sub aam jmp divb add dec jne inc xchg loope mov or lea and cmp into das bnd push out ja inc dec jbe pop push dec test mov cmp loop inc ret adc mov les push inc pop pop fidivl ret sbb add xchg push ss pop jg inc sub inc jbe lahf jae or rcr mov or and mov aad pop dec dec arpl out add cmc adc xchg sub push jae cwtl data16 cltd jmp and stc addr16 cmp scas ds dec jnp sar cmpsb jmp clc pop dec scas sub repnz adc shrl fldt inc dec and movb (bad) jecxz or jmp (bad) and push nop ljmp clc lcall add loopne repnz movsb dec pushf mov (bad) es rolb xor pushf cmp mov mov sub dec and fcoms ficom jmp push aas lahf (bad) cmp pop clc ss add xchg lds enter and and (bad) fs and mov mov adc (bad) (bad) lret inc or mov push adc fnstcw sarl adc test sub pop mov cmp out les pop lock mov cmc jecxz fwait xor out cmp or sub mov jmp (bad) cmpsb in jg (bad) (bad) js shlb cmp xor bound mov cmp lret mov sbb dec dec gs sub imul dec (bad) mov mov push mov (bad) mov nop jge fisttpl mov add mov fnstenv push int3 sub popa mov sub xlat imul icebp dec mov cmp je ljmp sarl cmp lret and cli addb repnz adc push lret dec and mov enter les add mov adc mov sub movsb sub mov loop pusha xchg (bad) (bad) xrelease sub fistpll xchg or (bad) mov xchg mov (bad) scas xchg out mov scas pop pushf ljmp sti movsb sbb movsb inc mov int cmp mov repnz mov repnz xchg lret add cmp (bad) cmp inc insb xchg in idivl mov lea ja dec fs addr16 adc pop aas mov and int3 mov jmp and lods out dec jb mov sar daa pop fsubl shlb call sub movsb mov shrb adc gs sub adc or addr16 adc aam adc jo sar and mov and xchg cmp pop sub jg movsl lahf stc push xchg loop mov mov cli mov lret jae and cwtl jno pop push xor idivl sbb xchg push or mov and add add mov (bad) xor or (bad) mov (bad) sub or cli fcomi or or adc lret mov idivl in repnz out mov enter dec dec notb gs xor repnz iret dec and lret and sub and outsl jecxz xchg stos mov dec addl cltd cmpsb scas push mov sahf jae jmp and (bad) sbb stos outsb loop add jle roll ret lcall mov addr16 push xor cli adc orl addl pop enter aaa add jns dec cld xchg (bad) sar dec xor cmp pop (bad) pop xchg stc iret xchg mov pop roll pop mov test mov inc cmpsl or out pop mov sbb inc lcall (bad) mov fs outsb into lahf sti aam pop xor fimul push cmp ficom jl stc popf lcall stos mov fiadd ja and and ffree add push imul sub cwtl imul xchg inc (bad) cmpsl (bad) or xor xor cmp jecxz cmp pop mov rcll and cmp mov adc (bad) out out xchg xor add push push or mov push icebp sub jno les xor (bad) xlat mov and daa pop push rcr pop ret sub mov (bad) pop sbb imul sub and mov jge scas xchg jmp es xor out xchg push mov xchg (bad) inc add iret lcall int3 ss jmp or cmp lods cwtl cmpsl xchg sub jmp sub pop movsl loop dec scas mov cmp loope decb jnp es repz pushf sub cmp mov pop sbb (bad) arpl enter xchg inc lahf stc cli leave sub in cmpsb insb lods fldenv test shlb pop inc lret mov imul inc mov ror dec sub mov push xor lret dec and sub lds repnz push add stos lret mov enter pop (bad) xor aaa jge rcrb pop idiv mov mov mov mov xchg test js or scas bound inc fistpll add lods (bad) cltd mov or fisub into fnstsw add inc mov add in push (bad) mov aad jg jmp pop push push pop mov dec jecxz or mov sahf das jecxz outsb adc lret mov add out xor lods (bad) xor mov inc jg xor fistl testl (bad) outsb lds add cs jbe leave pop (bad) icebp sbb inc mov notb lods icebp in cmpsl inc pop out xchg or xchg push ret imul into sbb add cmpsl xchg adc dec mov lods pusha mov pop pop push stc (bad) xchg push xchg icebp dec lock and push js mov jg xchg dec jmp negb fldenv mov stos stc out push ret xor mov test mov mov pushf in daa dec aaa lahf data16 xor mov jo scas and xor popw add daa (bad) lcall daa cmpsl and xchg decl mov imul stos sub repz arpl and ret sub lret xchg test mov cli bound pop push rcl clc sub jecxz sub and mov ja dec out dec mov inc outsl clc test sub push ja pop fldcw mov xor sbb out dec and dec lds in sub ljmp in sub das ds sbb ds test jg scas nop loope sbb test mov mov leave push jge (bad) stc adc fstl inc (bad) push sbb enter xor (bad) movzbl pop push xchg mov sub shr sub into ficomp jmp aam mov mov sub cmp and add lcall clc mov repnz cmp js rcrl fiadd fisttpl cmp lods adc mov les clc push sarl icebp subb aas in sub pop sub out lds (bad) mov ljmp or sub push mov out clc lret mov dec mov (bad) jmp into pop jle imul mov ja pop imul std out in js (bad) adc adc sti lret push push call das out mov leave aam push icebp scas fnstenv cmp pop lret mov mov lock pushf and inc adc stos mov pop test in sbb mov dec shl mov sub push add stos and repnz clc arpl (bad) ds mov ffreep sahf movsl (bad) lahf leave pop cltd xchg jnp mov dec pop sbb in fnsetpm(287 sti popf dec dec pop cmp push xor mov jne and inc mov aad fldenv xchg clc mov or and add fcmove pop cs addr16 pop iret icebp dec pop lret sub cmp shrl cmp mov or pop es and mov mov pushf in fs adc add jmp repnz mov es sub adc (bad) sub idivb stc gs ljmp shr ret pop ret dec (bad) sub and adc pop sub fdivrl pop or (bad) xor or push adc loope or subb call xchg push jmp in shr dec mov cld scas dec lret std push or stos test cli ss loopne mov and mov xor sar add inc mov (bad) jmp cwtl leave push cmpb mov cmp enter adc and fist cvtdq2ps aad test test cli mov out mov lea imul adc clc mov (bad) mov daa pop cs sub sbb dec (bad) fcoms fsubrl std ret sub dec push out mov mov adc dec dec std sub jnp dec mov shrl sbb testb out mov xor mov lret int data16 stos cmp xor push repz sbb mov mov outsb (bad) dec leave push mov push push dec xchg sbb roll mov fdivr cli cmpsb mov pushf jb ja dec xlat cwtl add mov push and pop in xor dec in addr16 (bad) dec adc stos mov pop lods xchg xchg out (bad) xor out lods popf insl sub out cld jmp (bad) das jo fsubrs fidivrl mov movsl fmul pop jne push fnstcw les jmp sbb adc scas inc lret mov out jge orl imul out popa in add xchg movsb out test in dec stos lret mov (bad) cmpsb add pop ds aas ja icebp rorb pushl or jl in and dec leave fcomps dec add xor jnp sub inc sub and jno mov sbb adc pop lds (bad) xchg cli fs push mov std sub jle into push mov jmp jle push jnp dec enter and xor dec popf ret addr16 pop rol dec or jb ja pusha mov or xchg orl and xchg jb pop out lret mov jne xor fcmovb push jno dec bnd (bad) movsb test imul pop or call out lret xor cmpsb (bad) repz mov out mov jno jnp sbb cs pop clc inc push inc and mov roll ljmp jmp cwtl mov xor ljmp lret and popa mov imull fldcw cwtl lds fimull jl iret mov add pop dec test loopne fcmovnb xor mov sbb daa sub xor ffreep gs jmp xlat lock cmc sahf lar and xchg insl mov outsb and in call movsb jne mov call mov jne ds push dec pushf jg rcrl ja mov add mov adc pop pop xchg jl add std dec or mov movsb repnz dec jecxz imul sub add add jp lret adc sbb adc cmp das mulb mov lahf int3 push (bad) into daa or pop out in in popf (bad) mov cli or iret xlat ds pushf pop inc loopne incl cmpsl mov push jp mov inc sbb mov and out push shll (bad) div shrb pop loope lock test dec and scas je loop dec fisttp pop stc sub mov out sub outsl sub sub lret fcomps aam dec scas sub mov sti pushf je pop sub add repz pop mov loop sti fsts daa ja xchg or jg jecxz sbb jae push out arpl popf mov shl popf jmp sub or jecxz lea adc insb adc xchg pop sub outsb stos xchg negl jmp push out (bad) imul lret dec es xor in cmpsl lcall hlt push pop jmp xchg in xchg rep cmp mov dec adc enter jecxz push in push mov dec jmp ljmp lds (bad) (bad) call rcll jl inc or fldenv lods push push stos imul cmpsl sbb inc sahf movsl mov or pop sub fwait xchg sub dec lcall loope mov in xor stos xor cli or ljmp sub xchg and adc or mov scas into pushf add (bad) xor mov dec mov mov push xor int inc in sub imul dec inc inc xchg push sbb jae pop and pushf xor or xor leave fsubrs cwtl (bad) notl and mov push push dec xchg (bad) xchg idivl pop inc push add bound fiadd lods inc mov bound mov (bad) sub imulb rcl dec mov mov and xor pushf mov mul cmc pop stos push sub repnz xchg ja lcall sub fs icebp lret ret inc loope or push aaa roll jle mov enter mov dec (bad) stc scas call xor ds loop xchg rclb and stc xchg and imull dec lahf inc int das rolb movsl test adc mov cmp into ret negl test lret fcmovnbe movsl cmpb jb int3 push xor cmc or add aas dec idiv xor icebp out add mov push xor mov ret sbb repz or sbb lahf js xchg inc ret mov fldenv xchg cwtl mov dec ret daa cmp jle jg test mov roll add loopne mov scas xor call cmp or mov (bad) loopne repz pop jge xchg push or aad xchg icebp mov negb sbb stos bound and pop lds and mov jmp cli pop test sub bound ficoml sbb in mov lret decb dec stos (bad) mov jo mov sti ljmp (bad) mov fistl or (bad) je pusha add add lods sub sahf mov ret lahf push (bad) enter add sub cld daa cli pushw sub (bad) fisub xchg call ja jg fidivrl popf jno add js mov add mov call popf jns mov push inc bound jmp je adc ljmp mov mov fs push rcl scas jge or sub push add movsb jp mov pop push (bad) aam repnz divl daa out or or stos loop aam sar mov (bad) pop pop lret mov push inc or fnstcw and das icebp out pop pop bound leave in mov je stos test mov mov or (bad) pop xor add out out imul in lods sub pop cmp add mov or jmp dec ljmp push add jle call and test idivl mov sti xchg dec mov jnp icebp or mov inc add divb ds mov lret lret ret test out add add cld sbb mov int3 sub mov lret cmp push pop lret jmp jmp stos inc fsubrl inc push cltd (bad) aas xchg push mov sar popf ja pop fisubrl mov xchg dec fabs iret bound adc stos lret xor cmp (bad) pop rorl cltd (bad) and ffreep subb decb pop xchg fldenv (bad) decb (bad) stos sub sahf mov movsb imulb dec loop subl lcall lahf lret in sub popf aad add pop jle pop xor lahf je insb idivl or pop clc sahf daa xchg inc lea jecxz push lea pop mov add ret jne push (bad) lret sub pop xchg std lcall push add adc xor negl dec xor fs sub mov outsb pop mov (bad) gs out repnz (bad) je jae push mov pusha repz into arpl insb in dec stc mov clc ficomp movsl out mov cld (bad) loope xor sub (bad) mov jne cltd and mov dec mov scas test clc cmp enter push push jnp xchg mov bound and (bad) pop das shlb divb aaa ds pop pop leave pop adc xchg xor and imul pop stc pop imul pop inc test dec mov fwait sahf repz das mov (bad) or in mov pop ss pop movsb push test adc mov inc lahf ficom scas mov xchg sti sub out sub outsl push dec loop lods add xlat mov les xchg ja xor push adc in les add cli test sub xor sub test (bad) mov xor movsl imul imul repnz popl sub (bad) loopne (bad) repz mov fdivp test shl jae xchg in and addr16 sub fucom jg push imull xchg cmp popa cmpsb outsb mov in sub jmp cs adc or ret mov clc add mov inc mov xlat mov jg push add mov adc mov pop sub stos arpl dec and into xor in sub out sub sub lahf pop push sti jge loope sub mov or adc add ds push pop pop fsubrs xlat mov dec (bad) push xor enter add in cmp pop repz stc xlat cmc mov (bad) pop xchg fs xor mov popf pop aaa addl cwtl sti sarb cs and add ds out fs add or lahf popf push sbb xor pop mov in xchg pop mov lret mov stos cltd pop sub xor out cwtl sub insl adc xor jp sub mov rol adc and or pushf mov fidivr iret out loop xchg dec inc or and ficom test sbb repnz stos mov in or ret inc and jl push sbb or sbb add or stos mov adc repz xchg mov stc xchg loope or or je xchg cmp push imul aas dec mov sub jns,pn or jne mov mov sub jge pop and mov dec test (bad) lret inc scas xchg sub inc sar adc ljmp aad in cltd mov decl scas dec cmp sbb xchg jmp mov fdivr inc leave xor ljmp fldenv out push mov ret repz sub or or push (bad) mov and out pop dec pop pop shr ror inc and lcall xchg (bad) lahf xor add (bad) xchg inc pop xchg mov movsb shlb test stos mov test mov or pop test push xor (bad) lahf lahf roll sub mov pop mov outsb ficoml incl add daa out mov cmp test fldt mov movsb cli jb mov out andb jle push jb jp dec ret loop les dec stos ljmp les cmp mull push lret enter sub dec or je out mov pop xchg loope cli lret pop jle push sub jno dec (bad) mov jecxz cmp jbe out or ret push add xchg out dec cld pop sub mov jo stos (bad) imul ret inc in scas adc lock out (bad) jbe pusha (bad) repnz xor push jno,pn mov mov scas mov mov out adc popf shrl lods push mov mov or push scas fs jg loop cld (bad) sti lret jae (bad) cmp test jns dec cmp ss ljmp add and pusha nop and icebp xor pop sub xlat jecxz test inc add pop sti push xor sbb mov jb testb imull adc and mov xor add mov mov xchg mov lcall loopne arpl pop push pop lret cmpsl fs mov les or sbb daa fistpl ret sub fs fstps mov or (bad) repz rorl mov cmp das pop xchg fcmovb imul div daa mov adc (bad) repnz das movsl hlt mov sti add clc pop daa pop add or lahf dec lds xchg mov xchg popf insl js mov jle imul lds fadds and pop jg mov fisttp (bad) mov fsubl cmp lock into repnz in push into add add and ret and dec xchg into push mov cmpsl jne movsb out push pop (bad) jne pop xchg shll (bad) sub mov and (bad) daa (bad) jo xor rcll push mov sub fs (bad) sub pop into loopne inc das push mov rcrb jnp xor imull iret mov mov mov popf pop fwait into adc xor dec es sub and adc (bad) mov stos out inc bound rcrb add sub cmp shl movsl jmp orb ljmp dec mov and or mov hlt jne xchg sub lds push jo aas fdivrl or dec adc mov sti jne clc cmp out inc pushf fisttp xchg adc (bad) les jmp push mulb leave inc mov leave or xchg and add rorl mull jns cwtl xor mov ss aad cs addr16 xadd mov cmc sbb dec ljmp (bad) mov adc mov jae fimull pusha xchg push out ret aam sub (bad) cmc int3 dec hlt call xor leave pop mov add push adc mov das inc inc ss std adc inc or sti add or mov push mull jbe loop mov xor sar mov aaa fimull push sahf dec mov bound out pop pop jb divb (bad) hlt notb in jge fisubr adc or ror push adc cli xchg test add or mov ljmp mov repz push fistl ljmp cmpsl aas lahf fsubr lret xchg pusha repz frstor fidivr sbbb rcrb sub jo sti into and (bad) cmc int3 xchg out and ret int3 ret in xchg xchg shr and movsl push adc cld stc movsb out mov lret pop dec mov cmp (bad) jno lods fdivr mov bound xchg pop outsl jmp nop or ficompl and add jp pop (bad) mov sbb rcr enter and (bad) idivl outsl mov cmp cli bound std mov (bad) notl inc lea add cmp fldl jb or and dec add stos ja ret (bad) mov jno repnz mov mov mov daa loope xchg push add test mov add cmp jmp outsl outsl push enter cmpsl inc pop adc or cmp xor mov aam iret or hlt fistl sahf out lret lea daa into pop mov fisub neg pop inc jle mov enter in lds mov sahf pop mov dec or shr jnp fwait movsb out xor fidivrl into mov cmpsl lds clc mov lcall xlat lcall test mov adc (bad) jl pop add es mov fcmovbe mov pop fiadd add cmp dec (bad) test mov inc dec push out (bad) in out insb stc cmpsl mov adc mov dec (bad) addr16 mov or lods inc add icebp mov sti fnstcw xor dec test and jge push out cmpsb dec mov test icebp mov lods sbb pop insb pop popf jg jl data16 jle out inc daa popf add mov repnz lret lock jl dec repnz movsl (bad) lret fisttpl mov iret xor xor sbb in ss fistpl cmp xor fldcw lret mov xorb sahf sub leave xchg data16 rcrl mov and pop (bad) aad sti sbb adcl add or test dec cmp cs (bad) lret hlt inc and fadds add mov dec and push mov xor pop imul or sahf push loop lods (bad) or mov lea movsb out add or hlt mov lret add bound add loop fistl sub xor push mov out stos lret popa pop add mov scas (bad) cmovle aas rol pop movsb sub mov lods je lret aad cli inc ret pop test out mov or aas or outsb in push les shrb xchg mov pushf jp jmp loop ljmp inc out hlt mov jecxz lds add sarl push es cltd xchg sub leave sti in and sub mov and push xchg or test subl ds ffree out mov add jp pop mov mov out mov mov or push cmp incl fcoml imul sub and out jnp xor and mov xchg mov mov jbe and or out es (bad) movsb mov inc sbb or jno enter sub or and dec sbb xchg push inc sub mov xchg out mov in es mov hlt jbe (bad) call (bad) aam test clc (bad) mov inc lcall ss in repz notb add out scas dec fwait aas xor rorl mov bnd arpl cli sub mov data16 adc xor andb and cmp fsubs flds dec (bad) xor or ds inc lret popa push jle pop xchg (bad) fimull sub aad xor xchg pop test sub cmp pop pop mov popa inc ss call sbb push xchg test adc and pop clc and xchg into out into xor jle push mov lds xchg inc dec ret lea adc dec in (bad) lret xor cmp or call and movsl dec lret push imul sub xor cmpsl sar gs out pop and add xchg xchg ret fstpt xor aaa loop xchg mov clc test ds or idivl aaa mov mov lock xor xchg add and and mov xlat cmp (bad) jmp xor int3 inc mov pop stos sub (bad) sub fldt sub cmpsl pop repnz adc fbld sbb sbb push xchg inc lcall sub cmp and nop loope inc cmpsl jbe adc mov fs pop jle int3 lds cli cmpsl clc dec ljmp xchg jecxz add fisubl aad dec inc mov mov (bad) int3 (bad) or dec loope xchg xor ret stos rcl xchg or iret mov out and daa jne int and xchg cli sub cmp mov sub xchg xchg lds and das ret fdivr fs int3 dec xor mov ret (bad) negl cld pop push dec cmp sub and or inc cltd or ja in mov xor inc mov push ret pop mov shr int and mov or lods pop icebp xor sbb xor iret ja mov icebp mov rcrl mov (bad) popf ljmp aas bound cmc push scas dec cltd xchg xor cs xlat test sti cmpsl push imul mov sub cmp mov mov pop rorl push jno lret je imul pusha xchg fcoms pop fsts icebp outsl (bad) loopne xlat movsl adc es jmp jecxz adcl (bad) inc in cmp inc aad (bad) xor pop (bad) jbe js fcomps fmuls data16 pop shrl adc sti notb jmp push lds sbb and out or daa fisttpll mov in mov imul cli ss or dec mov fldcw mov mov setg mov xor outsb cltd repz and aad mov rclb xchg push cli in aas movsl movsl jo jle jmp in mov (bad) adc popl std push sahf mov (bad) dec jecxz push lcall leave cli jns pushf add xchg out int3 les (bad) out test movsl push out push and xorb (bad) mull lahf pop push push jmp sub and dec adc dec sbb mov out xchg mov sub xchg and aaa xchg jno and sub dec mov dec out pushf dec ss loopne lret scas lret mov into nop jge inc fwait or push idivb sub fbstp mov jge push pop les dec jno imul jmp and push xlat insb scas sarb mov mov dec lret xchg pop mov xchg xor rcrl fisubrl sub inc decl xchg insb mov stos jecxz sbb mov data16 cltd dec mov pop iret fcomp xlat leave push out test insb dec test xor (bad) mov add xor push mov mov dec popa push repz and rolb adc jmp jnp lods test push and lret push sarb enter fistp mov xchg dec mov jne lods bound addr16 inc jae cmp adc lea mov mov jmp ds mov icebp aas adc sub popa and repz mov (bad) es lahf jle push (bad) jns dec pop out mov cmp push and je jb jns or or sbb mov popf aam lds cld andl jmp xor sti push push in adc mov stc (bad) push push mov lahf jne and and mov popa (bad) sub push mov test xlat call pop add gs jmp mov cld rclb (bad) jl fs out gs xor cli in loope dec jmp leave out jge outsb sub ret lret mov popf jne in das add fistp push mov mov imul push lods adc cmc leave std inc pop mov sarl in sbb mov repz mov pop negl push or inc ds mov cmp in rcrl sub mov scas test add out cmpsl xchg jnp lcall adc and sbb add fisttp fcomi repz cmpsl push rcrl xor add test push (bad) repnz sub notb enter or (bad) inc or into sar sub mov out adc ret mov loop rorl jmp imulb and repz add or xchg (bad) jne ret cli cltd dec outsb cltd loope jmp mov jmp adc out add fucomip and sub sub cltd inc pusha (bad) xor mov (bad) mov jle pop bnd addr16 icebp push mov push push fdivrl pop sbb test cld or (bad) fwait imul fsubl sub xchg lods add (bad) call and mov mov pop clc add repz pop xor mov xlat xchg xor xor das (bad) lret clc add or cmp (bad) ret jle or jbe loop clc pop jle jb jns mov sbb int3 add mov repz lret mov int inc adc sar add inc and stc pusha sbb sub add ljmp pop or mov and jmp lret sar (bad) lods sub inc (bad) xor push movsb in sub js add cmp rcr adc in sti mov sub xchg or pop clc stos adc js notb fiadd jge jg into adc stos idivl inc sub pop xor jge (bad) cld push xor push imul push add int3 adc sub push stos sub adc ret mov or movsl push lea das mov out and cmp fnstenv call jo push push xor mov stos sub push sbb iret scas pop sub dec add mov mov pop mov jp push cmp decb pop dec test adc mov and jo loope into push push stos bound (bad) fild cmpsl adc inc or xlat int3 jae sub lcall cmpsl fbstp mov bound xor cmc cmp or xchg aam js inc xchg adc imul push call pop out xor adc out repz push mov cmp aam add leave or insb cmp jmp mov sub jnp add inc inc mov je test aaa cmpsl adc cs and repz xchg sub sub xor and test leave or cmpsl jbe push dec (bad) and sbb (bad) mov adc (bad) ds ja mov lods or into inc dec lock push in cmp daa (bad) sbb sub jae push (bad) mov bound test mov arpl inc mov out pop enter lret sub push mov mov dec cmpsb das adc lods push sub inc jl popf and rcrb lret jo mov out xor jmp pop jae xor (bad) int3 lds jmp in fidivl mov jmp mov fsubl fnsave add pop fisttpl xor (bad) xor mov mov movsl iret ret jecxz push movb jne stos popa mov cli mov sub push dec shll add popf xor das clc sbb xor cmpsb dec jbe leave loopne sub daa push out add fistp mov divl pop dec pop int sub xor fistl sub iret dec adc xor mov out push or gs push and dec lret out mov pop ret sub mov bound enter repz fs jmp jecxz lds xchg xchg lcall mov ret cmp mov add mov (bad) stos jns dec and dec call mov mov in fidivl or push call mov pop jecxz xor loop push sbb cmpsl fstps mov rcrl sbb ret lcall sub ret dec hlt ss or add out cmovnp test push xchg pop mov testl inc and xor test sub mov adc adc pop mov dec mov ficomp cld inc test push lea imulb scas leave nop lods xchg xchg mov es mov (bad) mov push ret sahf les bnd aas jne adc fisubrl mov aaa fucomp popa jg mull sbb stos jns cmp dec clc xchg adc mov xor orb lahf inc dec xor (bad) sub in xor loop rclb xchg mov cli out xchg mov fnstcw jno mov push ret push fstpt fptan dec adc xchg pop push (bad) repz repnz and xor cmp xchg out ret cs (bad) out sub add xchg xor ret repz mov fsubrs clc fchs jnp sti push adc scas pop sbb xor push add xchg pop mov icebp icebp jle push shrl in roll or xchg jae xchg fmuls push cmp cmpsl into repz sub pop bound out dec pop jmp push mov repz add or into mov fist sbb xor icebp dec decb mov sub out das dec ja sub sar push fs shrl out out dec jecxz or inc fwait (bad) xor xchg shll fldcw call fsubs sbb (bad) (bad) lret cmp mov add push sbb xchg std xchg (bad) mov xchg fstpl cli pop or ret pop lret bound jae adc arpl lds scas sub out sub cmp aam popf adc mov inc dec push adc sub pushf fiadd ret xlat xor cmpsb mov scas (bad) jmp mov movsl push and cmp (bad) mov pop push jmp push push dec lcall sti xor sbb cwtl dec cmp (bad) fldenv adc aam and cmc mov or pop pop mov dec fidivrl out (bad) sub pusha nop xchg dec adc xor fsubrs repz push out mov mov fcomps out mov or sahf push movsb push mov xchg adc mov sub clc dec ret into mov ficomp xor pop xchg add cmp aas xchg scas mov pop xor or aas mov add cmp xor mov ret xor mov mov ja (bad) xor cltd jnp fisttpll loope jle je dec pop sbb jbe iret add dec popf in pop mov xor mov arpl dec cmp (bad) ja imul and dec cmc pop fcomip jle je xchg push pop lods jecxz out add orb scas in clc mov jb sbb jns cld ror dec pop icebp rcrl push sub pop repz jmp push pop mov mov shr sub push aam dec ljmp jmp mov ret push mov pop (bad) sahf sub push int3 push or shrl adc loopne inc mov bound shl dec test sbb dec loope mov ja push cmpsl mov out lds mov push cmp xchg xor (bad) push adc pushf out jge add mov in jae (bad) jne (bad) jno push decl loop jno inc add iret xchg pushf mov jge pop ret cmc jmp cmp icebp inc ret push repz out sub lea repz sub pop xchg mov pop mov repz push out sub aad push add sub mov push jmp clc popf int3 ljmp in in cmp ret outsb in adc fucom mov ljmp or add cli push dec adc ror clc xor mov mov mov inc call scas mov pop sub xor dec les mov jmp ret cmp cld mov pop sub ficom adc jae lods adc rcr mov popf push xor sbb mov jb ljmp mov (bad) adc and xor add adc iret mov dec pop int3 inc pop pop lret and (bad) cmpsb das dec lret pop or in or scas cmc and pop clc (bad) cmp stos cmpsl sahf divl fdivl addb push leave sarl or xchg (bad) jmp pop cmp imul insl dec mov in cmpsl jg add jg xchg mov xchg jg inc mov jecxz pop add scas int3 int3 sub loope (bad) sahf daa jo dec pushf out dec pushl lcall out mul mov jno jbe pop jge std cmp jbe les pop adc fildll mov xchg daa int3 insl dec out and imul mov mov adc das div fisubrl xlat fldt lods std sahf out xchg lods arpl sub aad dec mov cwtl jle imul xchg in scas adc int3 xchg pop pushf jo jbe xor cmp add push and fcompl push insb lret mov add push mov dec call (bad) pop mov popf pop xchg pop xchg pop jnp add push loop cmc dec out (bad) cmp mov daa pop in movsl mul inc and sbb jmp repz mov xchg sbb cmc out lds mov clc and lret cmp sti je mov push add repz mov scas pusha mov sbb xchg push mov or mov stc pop jns and mov xor in lahf pop sbb mov jecxz std nop (bad) jle jne test mov or loop xchg sti daa lret daa xchg int3 push xchg lds pop sbbb mov jge or mov cltd pushf xor mov mov xchg gs call lret mov sbb dec (bad) jo cmp xchg mov fistpll cmp pop push mov pop and clc cs icebp xchg sub pop scas and scas adc mov (bad) jo adc push popf push mov rorl or lds cld push adc lea das (bad) and pop stc or or jae or lret outsl lret jle or xor xor sub add push mov push ljmp sti mov xchg ret aad xor fsubl out adc loope sarb add push pop sub (bad) push add dec push xor mov aaa jl push clc mov dec imull jnp jg sub and repz mov lds jbe leave lds add mov push pop (bad) push push ret sub pop and inc xchg int3 mov pop dec ja sarl outsl jecxz dec ret pop outsb test cmp sub test in adc test xchg ljmp jmp stc xor adc jb ljmp cltd leave jns (bad) sub jmp xchg fwait gs sbb in bound add test fildl sub mov sbb push mov jecxz cld push push adc and sub pop cld sahf in out sub mov insb add mov (bad) mov and out popf inc pop movsl push inc fdivp xlat xchg idivl push inc dec jbe add (bad) cs lcall inc popf div fwait dec fstpl dec cld sub dec jno mov sub cmp das in and jle les in add movsl div inc xchg or dec pop mov in add sub xchg lret call adc mov ja sub dec icebp out jb xor mov xlat rcrl or rcr (bad) push sub in add and out or add mov mov push data16 add std sti dec sub pop and out cltd jno lret sarl fcoml in (bad) lods cld daa popa fs jne or adc sbb (bad) and stc pop repnz rolb and push pop adc bound adc cld add das mov cli lea mov xchg push mov movb imul jge cmp and fwait push daa ret push aad push leave mov out dec repz add push out nop xchg movb pop out add lods pop xlat add ret mov mov shlb incb mov lods cmpsl pop pusha push and mov sub ret pop outsb sub rcr cltd mov js lahf xchg jmp mov mov test jmp mov addl and jge stos xchg push fs imul pop scas add out call cmp jmp js jmp pop (bad) (bad) out stc ret movsl fcoml inc xchg xor in push sub sbb clc out dec cld ljmp sub aam add xchg into mov aas xor pop pop pop push sar fs jg int3 int3 or push (bad) pusha mov fidivl add lcall test mov mov jl iret ja mov mov cmp dec je stos sub mov jbe pop out test test loope adc or sarl and (bad) jmp shll out add cmove ljmp sub sub xor mov xchg fist push daa sub stc xchg mov jge nop mov and or and mov repnz xchg add ret (bad) adc jle sub mov aas xchg aad xor addr16 or mov lock mov xchg lea cmp dec push sub dec (bad) fnsave mov fcom or xchg out mov push push xchg push sbb adc inc test xchg stos sub sub out jo sub or in add ljmp add lcall (bad) mov pop lds xor cltd mov outsb pop xchg ficoml cmp cmpsl ror imul xor sub mov push bound imul mov aad mov std bound mov cmp mov xor mov jg cmp repz xchg lret mov dec cli lret mov cmp popa lds add out dec out adc mov pop lock into push (bad) inc stos fldcw cmp sub lahf pop sahf mov leave sarl cmpsl leave jns mov leave inc icebp mov loop sbb pop sub or rcl dec lods in inc push push lret sub (bad) xlat (bad) fst jle dec mov lcall inc adc std mov (bad) ja mov push inc mov sbb pop mov sub lods or shlb idivl fisttpll fiaddl ja mov dec add bound mov jnp daa pop sbb aad lret xchg cwtl jl add sub sub push test push push adc sub rclb and mov xchg cli bound pop push (bad) adc add mov std mov and sub jg mov ret ds mov ffreep cltd mov jmp sub inc sarl scas sub dec fimul push xor push test cmp or dec loop fcoml pop mov pop cli sub adc pop and pop jmp enter dec (bad) repz pop repz aaa lock dec lock mov pop in mov mov ss pop (bad) mov sub repnz andl push jecxz repnz std in cmp cs mov dec nop rorb xor iret (bad) xchg (bad) int3 stos outsb rorb and cld add mov fidivl cmc inc jecxz sub push mov movsl inc xor xor stc ficompl xor stos pop xor test sub out stc pop push sub jne bound ret js hlt mov pop inc and xchg pop jo aad (bad) xchg dec pop jmp inc (bad) mov inc addr16 sub xor mov cli ja push dec jge leave jmp test fsts ds jge out scas push inc xchg mulb mov mov imul or xlat js pop (bad) scas xor sti sub (bad) stos sub ljmp cwtl in and pop inc popf or xor push fadds mov iret dec mov mov int idivb ljmp mov and adc stos mov or jmp in jg scas in add ret cmpsl xchg out push jne pop (bad) (bad) push mov movsl out in movsb and lret bound loopne mov pop sbb jae xor and mov pop enter xchg ljmp pop fmul push repnz pop add mov pop das int imul fimul dec outsb mov dec bound mov mov xor lret ds and mov les into mov pop pop pop jnp pusha mov add or or jne dec sub shll out loop aas (bad) stc xchg jnp adc xchg sub or aaa adc sti mov aam ficom mov (bad) (bad) xchg and cmc jno mov push inc add sub addr16 or jae scas fisttp sahf jbe lret xlat push inc mov add jle lret dec (bad) cmpsb xchg pop mov sub pop stos sub add dec sti (bad) sub xor imul dec mov xchg and pop es stos bound adc pusha lock gs sub ret xlat pop div fcoms or cmp sarb test (bad) push sbb adc movsl mov ljmp pop push stos mov xchg and pop ljmp jge mov mov dec inc dec add icebp push test or dec out sub cmp xchg push mov sub (bad) xor mov popf pop cmp xor jge and push xor test xor cwtl push dec enter test je push aad test xor fidivl mov or and mov xlat (bad) and dec push scas fs pop icebp and ja,pn test jnp lahf mov dec enter (bad) xchg push pop mov push xchg aas cld adc sub pushf dec or test or mov dec jmp (bad) mov add sub pop rolb add or gs sub push mov push sub dec sbb mov xor xlat aas pushf cmp mov lods in scas cmp pop loope sub iret shll mov (bad) pop add inc mov or inc pop add sub ljmp into ljmp push mul pop xor cmp call add xor push add sbb std outsb ret jge xchg jb stc xchg sarl aaa or inc xchg pop push lock jns xchg cmp and shlb dec cmpsb xor imul cmp dec mov mov cmp xchg aad sub insb scas cltd lods das mov pop popf xchg xor aaa xchg std mov pop sti lods repnz (bad) mov xchg movsb pusha and add lahf jne aaa sub mov aad xchg sbb test and jnp xor xchg xor sbb std cmp inc ret enter xchg push and add xor fs jmp leave jle pop mov das mov popf or xor mov mov pop aas add and or add mov (bad) je ret pop pop loope imul and mov in lods or lods mov add idivb pop sbb jne imul lods iret push mov mov xor or dec push cmp addb (bad) or mov lret pop test sub lods lock in cmp stos iret in and pop adcb jmp or popf js add and (bad) push ja sub add or dec insb in or or std cmp mov adc mov sbb clc push sbb ret ret inc add and push or cmc adc jg adc sahf cld inc aas or sahf xchg inc or hlt out lock stos bound push ja or icebp jb les fdivrs jle push or push or sub in sbb jmp insl pop and fcmovne add sarl das int add fmul or pop sahf rorl and xor xchg mov lret and or mov sahf fsub add cmc outsl icebp mov imul out mov repnz mov cmc comiss pop inc jmp lahf xor push add sahf leave dec cwtl jle pop nop mov cmc or mov gs mov dec add add mov cs lret push and jnp xchg mov pop inc jp sub adc pop dec jge cmp sbb cmp loop and out add add and mov (bad) pop sti sub add imul test jmp cmpsl testl jns enter mov sub out inc xchg fcomi rolb or push pushf lret ss dec mov out jbe pop dec fdivp cmp into pushf movsb pop inc jmp xor ret add mov or movsl sub pop sahf pop ljmp out in aaa xchg xor adc cmpsb push stc pusha xchg (bad) ds dec andl (bad) hlt xchg ret (bad) mov insb (bad) sub xchg xor xchg gs mov push mov mov sbb mov sub dec ret scas popf adc cld shlb repnz mov jge pop bound sub sub leave or scas in out (bad) xor out int3 mov pop std add out adc pop dec adc add jg xor ret xchg xlat popf cwtl stos or xchg lock mov xchg psubsb add or pop leave flds jne mov push pop rcll cmp shll jns push js (bad) dec push mov popa push sub jmp ljmp and in movaps lcall dec push inc (bad) cld add add std into mov jl pop cwtl imul das xor jbe ret aad inc imul xor loop push out adc push mov fmul add and jno ds stos mov inc jmp add shlb or dec das (bad) adc pop test mov (bad) test xlat add sti loope outsl in into mov jg mov lahf mov gs daa lcall pop pop mov or cld adc mov inc dec stos mov dec xlat xor inc or add (bad) inc gs stos test mov lods lds mov adc dec mov sub or fbstp sbb lds dec xchg mov sbb insb sahf mov rorb xor into xchg mov sbb mov or sbb jo dec into (bad) add lock lret or pop pop jmp ret divl js cmp or out and sbb add (bad) push dec shlb mov jno and sub movsl lds test dec mov pushf incb mov bound jp ss cmp mov (bad) or out je jmp mov subl jns das xor jle data16 or pop xchg inc dec or xor inc data16 mov bound clc ja inc and xchg repz sub pop jno bound cmp sub pushf adc and es dec mov cmp pop bnd pop lds and sarb scas repz ret adc xor mov mov data16 or fdivrl loope mov test add out jecxz and pop cmp dec dec or jns mov adc sub out push je out mov xlat mov pusha sub push jl sub je in divb mov test or popf pop sub lds lcall and pop loop das hlt clc iret xlat mov fistp das xor fptan imul jle adc clc jnp loop mov inc ret out sub ljmp mov mov add mov rcll sub (bad) cmp ret pop sbb mov cmpsb je jecxz roll adc mov pop scas sub mov cmpsb shrl sub or xor fsubl (bad) sub sub or ja add jmp testb lcall mov mov mov cmpsl (bad) mov push adc loope and in xchg mov or daa mov jno inc push std push test add mov aas test (bad) into add das push fnstsw xchg pop mov pop add pushl push mov jl mov sub xor out cmp mov adc jmp adc or xchg add ss push jg clc ljmp push or ret pop sub add mov sub mov dec stos (bad) lds fs or push sub sub mov sbb pop rcll add dec ljmp and push das roll test outsl add pop movsl test arpl add mov loopne xor test movsb mov pop mov mov push push pusha push sub lret and fs push dec sahf inc cwtl push pop nop test mov xchg jae push ret push dec sti sub aas in jnp pop imul les push mov out add jecxz pop stc jg scas mov imul imul dec pop lret (bad) dec aam lret xor xor sti sub aad out frstor mov inc push rcll adc scas pushf dec sti xchg leave mov pop xor mov pop or test repnz movsl movb sti jne cmp or and pop push pop mov fstl in xchg in (bad) dec ljmp sbb push mov movsl inc jge xor dec test movsl mov xchg jp mul lcall movsl std xchg fisttp insb bound push stos test out int jo ret mov or enter movsb cmpsb xchg xchg (bad) sti and es icebp xor jle cmp cmp mov call dec jno popf push mov ja bound je scas xor jmp or shl adc xor dec sub mov out jno inc mov jno test or cmp inc dec sub or mov stos negl xchg decl push mov sbb lds xor xor insb cmp outsb or or cld and stc loope clc push xor xchg jg and pop add out jo add std (bad) jb,pt add adc add push mov mov xchg clc mov stc daa mov iret adc push sub cmp pop pop pop pop pop pop pop pop popf sbb mov xor sti idivl dec pushl push mov stos and xor repnz sub insb in loope fiadd imulb fs icebp cwtl cltd lret xor popf jge fld push (bad) mov fild cmpsl int3 mov sbb pop or iret fnstsw imul testl fisttpll xchg pop mov xchg mov xchg pop mov jb dec sti jmp movsb add sbb data16 dec pushf lahf neg das xlat adc cmc jp addr16 aam mov movsl cmc gs add pushl lds (bad) aad xor mov loope aaa xchg inc dec mov dec sti xor adc ss popf (bad) sbb and xor add mov push ret mov and icebp movsl incl popf push mov jo mov pop lds std nop xchg repnz sub das mov into adc and sbb mov lcall xlat outsb fs pop repnz adc (bad) jecxz jbe sub mov jne dec push push gs (bad) gs adc add inc cld jns (bad) cltd inc insb mov out dec mov and cmp lret loop das jb xchg lock sub mov rol push leave das xor cmp lret les out sub xchg (bad) lahf loop add xchg jl sti dec por ds mov data16 (bad) push add jns es or and jg inc lret inc or mov cmp cli xchg mov or stos fs insl or cmp pop rcrl adc xor mov loop shrl mov outsb lods inc test andl jg jl cmpsb dec adc test add sub push or cmpsb fwait push comiss iret icebp xchg test rcrl out push out jnp cmp das add insb into pop lret inc xchg cld inc pop jg lret jecxz adc pop sti lret or jno and aas xor stos mov mov test pop or je scas cwtl mov js dec loopne mov xlat scas xchg mov jmp cltd leave rcrb mov xor mov sub out (bad) stc inc xlat mov in aas jl mov stc dec clc rorb imul in pop daa pop lret gs dec dec call pop ret xchg mov pop lcall popf mov mov mov xor cmp pop and add push hlt pop jmp in cmp mov dec lock mov mov and dec icebp (bad) xor mov and pop add sub jge and jecxz sub mov insl mov daa (bad) jp push cltd (bad) negl and ss ljmp pushf imul fldln2 jl inc ficoml fidiv pop push fidivl pop xor in lods ftst cld cmpsb pop and ror lock ret push test xorb cmpsb mov mov iret jp jo std imul icebp pushf push pop pop xor mov sub mov lret loope ds and push pushf in xor mov or jo movsl into mov fbld xor mov rclb pop xchg (bad) imul popa mov xor mov test sub mov mov popf insb xor push lret (bad) stos mov imul dec int stc and (bad) xor xchg pop and cmpl stc xchg push std cltd sbb out jp cli dec jecxz push or xchg add dec dec pop (bad) shrl adc out push cmc dec jbe sub adc xor int3 mov xor cltd test sbb popf notl daa pop mov (bad) push push pusha fsub add adc clc into mov add pop jmp sub movsl dec pop or inc dec div loope es jne rorl pop cmp out mov pop and hlt cmp ret outsl movsl pop lock sti repz mov sub lock cmp insb dec test mov and (bad) mov inc or dec mov stos mov inc (bad) cs sbb jmp icebp sbb or push dec aas pop cli mov sub mov cltd repz sbb aad xor into jge jae add cmp fistpl ljmp push adc cmp dec out sub cmp rcrb inc lds xchg cwtl mov add inc idivl fs fwait push add insl rclb jge aas mov fcoms (bad) or xchg testl lcall and pushf scas xchg in jne call gs mov mov or push data16 add push push (bad) (bad) std inc into rorl cld ljmp bound mov dec ror decb imul mov pushf (bad) sahf (bad) out mov jne sti into xchg dec (bad) mov sbb out jne bnd scas iret in outsb mov inc xchg mov sbb pop enter or sbb outsb nop sub pop or repz and mov dec out mov mov repz mov popa mov inc pop xchg repz mov jnp aas mov outsl sub outsb int3 pop xor pop lret dec gs push out iret mov xor sbb jl (bad) incl loop dec pop fucomp pushf out (bad) xchg and popf dec idiv xchg mov push je push or xchg arpl out push pop mov xor xchg and imull xor mov xor (bad) or and adc fs push or sub idiv int cmp sub and pop adc into lock call cmpsb popa sub lret mov fsts push inc sub notl out xchg cmp sub add add sub fstpl xchg aaa fsubl jbe daa aas pop mov add push dec sub bnd mov dec call iret sbb pushl aam jge mov scas push movzbl scas sbb cmp hlt mov mov mov test adc xor mov mov ds pop mov sub lock mov xor stos (bad) mov cmp jmp jb fsubrs std cmp lret test sahf mov ds jne mov xor out jb pop mov sahf decl gs inc adc pusha (bad) (bad) mov daa lea pop lds add scas inc imul outsl (bad) ljmp xlat and mov mov and xchg into xchg std cmpsl jne ja sub stc pop jmp call sahf and in cmpsl fs pop xor rorb adc sbb lods xchg pushl sbb mov mov leave mov jmp test jb daa movsb dec pop sbb test or into dec pop test cmpsl inc adc sub enter sub lret mov cmc stos int adc fnsave imul and in jae (bad) ljmp add and cli repnz xchg clc push mov repnz xchg mov inc or (bad) xchg inc ret inc jcxz (bad) dec aam push cmc fs popf aam inc enter das repnz (bad) pop (bad) adc sub xchg add outsl push mov pop mov xor xor enter rclb popf add or cmpsb and push jg inc pop and xor daa cltd adc pop jp popf jbe stc or test xor aaa (bad) jb adc xchg in cmp mov stc (bad) mov pop lcall xchg out ror jmp repz mov or enter cwtl mov push jno rdpmc bts push into push xchg fcom sahf inc lods idivl inc ficomp outsb daa lds lret or movd lret lock mov popf xchg add sub mov push xor or dec (bad) cmp lods in push mov push jmp cwtl dec xor popf sub dec sub adc mov jbe pop xchg loop xchg sti fs sub (bad) sub jno mov xlat inc lret call jp sub pop jge and dec flds (bad) and and mov in repnz sub repnz bound ret xchg fidivrl bound idivb data16 (bad) mov push push sub fdivp jp xlat data16 push adc inc cmp dec shlb (bad) loope rcl (bad) nop xchg sbb cmp sahf daa push hlt mov mov sti mov mov adc mov add into lahf jno dec notb stc push dec push and jnp cwtl sarl pop xor lret mov aad mov insl push add nop fs pop clc pusha (bad) or push and andb push and mov or jge icebp aam push flds inc xor jl pop mov jg test dec jmp faddl test out lret stos or je loopne sbbb jnp adc pop xchg dec pushf sub xchg pop fisubl mov popa sub jne or test sbb and and call xor jp,pt bnd out fsubp (bad) xor lcall enter ret pop jmp xor pop adc pusha outsl mov add bound data16 sti imul out mov ret icebp cmp sub sub and scas jbe or mov subl in movsl inc cmp and ficoml out sub popf xchg cld mov pop clc xor pop push mov adc bound mov cmp cmc lods test add xchg inc fucom cmp and and sub sub out mov dec in mov dec mov sub or xlat test sub adc imul bound test cmpsb or push push push or xchg pop sti mov ljmp pop push into test fdivs sti fdivrl andl pop jb leave ret shrl mov add jns pop push pop ret out popf or and fisubr scas repnz xchg scas sub mov out in dec xchg or jns lds jle lahf (bad) hlt push jle pop dec adc add sti dec test in mov cli ret jne (bad) pop pop xchg ja stc (bad) mov ret sub add lahf dec push adc mov incl pushf iret imul pop add lds adc xlat repz (bad) lret out xchg lret loop iret call nop es push or xor cmpsb rcrb jle push jecxz adc and (bad) xlat int3 pop pop call or and rorb iret std icebp jno pop mov add push jl push cli pop call scas push mov lcall repnz add sti mov ffree sub pop nop mov cli xor xor mov ja js mov mov stos imul or ss jle div ret movsb in xor or sub add jmp or in movsb int cmp jne cmc adc fildll lahf mov imul xlat into mov dec dec imul and mov jge sub xchg lcall add sti daa sub xor (bad) std cwtl out and lahf sarb pop cmp bound lods outsb xor scas xor cli sub sub push jbe in add and mov mov jb aad hlt daa inc inc or sti mov fidiv adc ljmp mov cmp lds stos out dec out scas cmp daa and push mov in shr cmpsb mov lods or stos sub sub ljmp movsl fild repz lret or cli pop pop call dec cli sub cmp pop sub inc mov es jecxz popa fldt shrl mov lods ljmp jecxz in xchg repz pop dec je inc rolb lret sahf (bad) sbb (bad) mov jmp iret mov cmp xchg nop or sbb sbb int3 xor popf nop jnp cs mov rclb mov int test or out bound xor std popa xchg loop cmp lods (bad) push push mov insb out jecxz (bad) xor hlt and sub xchg and pop dec icebp sub mov cmp mov xchg (bad) (bad) in dec sub (bad) in and xor dec dec mov (bad) std ret mov cmp xor adc call mov mov mov add cmp fistl or push aad xchg add pop cli loop push push test or stc rcl or out fucom ljmp mov idiv ljmp enter movsl push sub mov test stos movsl jmp (bad) or or mov push push pushf push sbb and fwait bound xor pop cltd outsl or movsl lahf mov mov into iret leave inc mov cltd subl (bad) xor insb addb jg cmp dec daa shr cltd pop outsb (bad) mov leave jno mov shlb adc xchg (bad) cmp call in pop mov add mov jge rclb adc and mov imul add pop (bad) jb sbb push mov and mov sub jmp in inc xor sub pop call ds adc fs jp jmp cmp mov push jmp dec mov add xor lret jle cmp sub outsl xor cmpsl inc cmp lret fmuls lahf insl stc xor jo loope jg and pop in inc xor cmc sub dec (bad) repnz ljmp inc sub mov cmp in mov mov xor stos cmpsb sbb mov lock (bad) add mov add xor sub and rcrb xchg ss leave pop xchg mov add or inc jl mov leave aad jo mov adc and mov not insl push js mov pop pop or mov add mov mov mov imull stc lods scas fsubl inc sub jo fdiv repz pop push fs add and or sub insl cmp scas int outsl mov add push add out mov (bad) pop dec xor fdiv fnop (bad) mov jecxz lds pop (bad) hlt outsb out fldcw out sbb lret (bad) divl das int3 mov das stc dec jns xor mov adc pop xor mov (bad) push jae imulb mov rorl push mov bound stos add clc push cltd addl xor jmp gs cli dec test cld fs sub les loope sub repz test bound mov popf out xor jecxz jns cmpsl loope lret insb ret sbb xlat imul or subb add and mov mov xchg xchg jne xchg dec repz pushf ljmp pop jae scas or push (bad) mov xor cmpsb cld or rorl (bad) je dec cs mov fimull pop (bad) sub cli popf adc xor loopne test mov icebp xor push cltd dec cmpsl notl mov mov imul (bad) dec xchg fmuls icebp push addl lods out test mov mov out loop (bad) (bad) or std inc loop mov mov mov xorl es push cmp jmp jns dec or add push ja push xchg clc stos mov dec push fidivrl (bad) xchg popf sbb fstpl inc mov mov sub repnz cmpsb roll ss push aam or mov pop jmp inc inc sahf or jecxz and pop ljmp cmp leave cmp je stos xor push push lcall (bad) jmp int3 test mulb xlat sbb sub cltd (bad) mov push movsb mov pop popa sub (bad) mov push insb movsl lds pop xchg inc add add xchg test je pushl pop and mov (bad) sub outsl xor (bad) xor sub add test lcall (bad) dec cmc std fildl jl cmp das mov sub xchg int3 (bad) stc imul adc imulb pop int push imul pop les cs enter lock pop repnz jae nop inc dec iret cld lock push jae je call out sub push out call mov aad movsb andb scas rcrl pop mov xor xchg (bad) push leave xlat mov jge es or push out inc sub imulb cmp loopne ds icebp repz in lods je scas mov xchg mov inc push mov test or sub out int loopne mov outsl mov add jg jb repz dec sti lea call jmp adc mov cmp add rorl or data16 dec repz mov gs mov sub sbb test add adc mov ret sti or add cmc inc repnz jae das inc mov out leave out jge jecxz idivb (bad) outsb mov ds adc ret mov dec xchg into sti lret hlt pop iret push pop test call mov (bad) out int3 ljmp fistl or out popf js loop xchg ljmp mov adc insb or mov xchg mov xchg ret sbb push in repnz test sar push or pusha dec icebp mov mov mov out mov sahf pop jo loope mov add lock test fcmovne insb das adc andl ljmp rolb dec sti mov xor jecxz stos mov aas and cmp clc add repnz out mov pop xor fistp das insb push dec jmp mov loope ja,pt shlb add mov notb xor push ss std (bad) dec and test iret mov out adc mov push xchg mov fwait cwtl push xor push dec fmuls push xlat pop or je rclb xor out jecxz dec push sar dec sar loop xchg mov xchg cli lock sub dec pop stc xchg xchg scas out or sub mov and movb sbb stos ljmp adc daa jne ret mov divb adc outsl cmp cmp mov sub sub adc out in das mov mov mov mov xchg shr out pop mov xor cmp add inc dec icebp cmp mov stc lods (bad) and cmp (bad) push sti repz cmp cltd idivb jns mov outsl rolb push out stos mov shr or pop pop add and mov fwait jecxz dec (bad) pop mov pop popa xchg mov das (bad) clc clc dec rcll lahf popf xlat mov aas sub jl xchg les sti pushf mov adc rolb inc xchg loope add icebp or add stos loop xchg push (bad) int3 jmp test cmp sub out sub cmp mov cli std dec mov lcall call lock xchg out (bad) repz mov push xchg movsl add sbb (bad) adc add stc dec lods pop mov jnp jge cmp cltd loop cwtl inc sar bound repz sbb arpl xor inc movsb adc sub cmpsl mov pop or pop test ss mov aaa or push jle push jmp push rcrl jl xor cld pop loope or lret cmp adc add mov push xor (bad) fsubs mov push or push pop dec dec popf std xchg pop xchg aam popa (bad) or sub lret and cltd xchg cmp ret or xchg xor mov sub fs (bad) in (bad) cmp cmp adc test mov jne cld (bad) das pop and inc gs jg jmp notb and bound testl lret cmc sti sub shll jmp mov enter cli sub mov popf jae cmpsl push cmpsl (bad) mov call mov div xchg or ffree lods popf push mov xor and mov das out rcrl xor or mov stos clc jne pop or lret sbb add pop pop aas push movsb inc sbb stos push loop xchg and int3 aaa sbb add or fstpl fisttp mov mov clc mov xchg dec out mov sub sub mov xchg mov xchg (bad) int xchg push add dec js icebp push mov mov cli or iret incl daa push out add (bad) and ljmp lods iret add cmp (bad) adc in fldenv (bad) jmp push sub mov xchg xor ret mov out lahf clc loopne out lret xor lds (bad) mov sub movsb lods (bad) pop addr16 jl scas jb pop push pop ja sub add mov sub (bad) push sti lret cmpsl sbb xchg xchg mov fldenv sub std add xlat (bad) mov out gs mov pop add (bad) jo fsubrs dec inc das add pop mov sub xor cmpsb test stos lds imul ljmp repnz imul pop ret pop es inc push inc movsb jnp aas lds outsb xchg inc ret xor lret je xchg adc and mov lahf cmp sub add pop sbb mov roll and or repz jle cmpb imul adc fild lods push sbb cltd into inc ret mov xchg das jbe pop out lret lock fldt jno sub adc dec imul movsl cwtl lcall add sub jne xor leave push popa jbe dec imull lds xlat test out add jecxz clc arpl cmp push dec add aaa fild cmpsb aas add ret inc repz test jge mov mov push movsb mov ret or clc sub push les xor jmp std or ljmp insl xchg shll sub dec and pusha mov dec jl sub jnp or push (bad) loope fcmove imulb ljmp lods xchg adc sub dec xor push xor xor out inc lret inc xor lods xchg jl push add outsl cld jmp clc cmp mov pop fwait xlat mov jge inc adc mov inc (bad) leave sbb jmp jmp scas dec sub mov inc push lock out or out fbstp bound cmp mov jge loope adcl cmc aaa mov call push fisttp add or cld xchg lret jle fs xor sti arpl repz dec shrb xor mov (bad) xor iret mov mov inc iret cmp (bad) cmp sub (bad) lret testb mov xchg push dec xor push repnz out mov test xchg dec or jnp add scas pop int3 pop and fcomps push add imul jbe pop out icebp pop test leave out mov ret jle push adc ret push inc push outsb and je lcall fistl inc and aas mov sub mov sub jne mov les sub add ds jnp or (bad) jae adc jmp imul loopne xor and (bad) mov lret stos mov rorb sbb xchg mov out mull std sub fstl cmp mov jle out xor add cli imul xchg scas cltd loope fsubrl (bad) out push mov sub nop ret jo pop xchg lods xchg out adc out sarl and aam jmp push iret aam mov subl push outsb mov sub adc inc mov pop sbb mov xchg and jg subl and mov xchg sub push or mov mov (bad) xor je jmp shll aad and rcrb sub xchg and mov inc into pop into in and pushl sbb (bad) mov cli pop inc lods sub xor loope mov (bad) adc xlat pop clc push and xor mov sti loop fstl fs mov dec mov orl sahf dec loop adcl or (bad) das clc int mov lret xchg mov stc jecxz pop inc lahf cld dec pop pop push int3 pusha fdivs xchg xor adc lock push jmp dec add fstpl cli (bad) mov js add rol and ds repz xchg (bad) push and cmp mov gs (bad) int3 lea in daa xchg pop sbb dec mov daa mov push rorb xor sub rorb test and popf pop xor (bad) stc add mov pop xchg xchg jne dec adc xor ljmp dec aas mov sub enter mov push pop inc adc icebp int xor cmpsl xchg sub jo (bad) cli pop dec mov incl or jmp pop mov je or mov repz pop pushf mov movl cmp add pop push fmul out xchg cmp and jge or bound rcrl fcoml repz jmp xchg cwtl aad inc pop and lds dec add inc xor popf add movsb out imul mov push clc inc pop sub sub jecxz and scas mov lret das xor mov pop jmp fidiv push (bad) or movsb outsl and mov cltd icebp inc adc pop sbb aad pop xchg fisubrl mov xchg mov cld and scas mov leave lret cltd sub and or and scas test aaa push pusha cmpsl mov mov aad mov jno or mov and cmp (bad) adc shrb js cs jae jbe pop xor mov popf idivl (bad) call xor cli sub fisttp mov lcall mov xchg je pop sub pop lret stos mov pop test inc pop test or out push out mov pop out inc outsb cmp into and dec xchg (bad) stos mov addr16 repnz fs sete lret and adc int add movsl xor or jb dec into mov or insb pop fist imul push mov bound andl icebp push out movsl flds push add jmp shlb fiadd popf sar sub ror sti mov loop sbb push and pushf sub xchg in test fisubrl sub push jne xchg xchg loop pop bnd xor (bad) jo lret test adc or fwait sbb inc cs lret movsb or out popf std xor out xor or push jle outsb push call xor iret movsb dec aaa sti fsts dec mov lods fimul pop repz xchg and mov pushf in dec xchg aam les in jo add das out popf push and sbb and xchg cltd dec sub xchg dec (bad) std push sahf dec xchg jns aas mov data16 sub or repz dec fs xor lds es rorl icebp xor dec int3 xor and test fsubr call lods dec cltd popf add push in sub addl sub dec mov xchg push out in dec aam pop mov call xor pop xor or mov xchg jae out xor xor mov jb jp es in jmp push jle pop inc pop add sbb xchg lods dec lahf xchg leave stos into xchg sub or sub and and fisttpl movsl les shrl or cmc xor jne jns idiv out mov or repz cmp into fnstsw adc mov dec leave xor push hlt in notl jns add idivl and xlat xchg pop jns fbstp pop loop mov movsl xor insl mov add decl pop mov or jg icebp lret jo jle mov or leave add mov sub xor push lea push outsl imul and insb cmp rorl dec popa add in mov or sub cli movsb ljmp jl mov ret mov sub pop sub clc (bad) push and mov sub add enter adc (bad) sub sub or stc rorw ja (bad) sub sysret and stos jno sub adc sub adc fwait push std add ljmp add xchg add notb sbb test xor adc sub push and lret mov pop icebp idivl clc (bad) mov pop daa aad push jne or shrb inc adc imul pop popf fistpl pusha mov pop jle add stc push mov lods xchg adc loope jg std stos fsubrl xchg aam out stos dec cli or out icebp mov cs push les add xor xlat push lea and add jl mov xchg mov lods lods xchg (bad) mov push xor mov shll ja xlat mov lock sarl call cmc movsl in cli ljmp cmpsl negb in mov jmp in sub cli push ret repz daa call cmp pop das mov ret and ficompl mov daa iret fimul dec pop dec ljmp xor xor push int adc idivl sub fmuls hlt enter and push xchg in lods xlat xchg inc mov mov sub sub or add pop cld push mov fistp cmp out lods rolb add pusha push ds sahf pop dec or mov fldl arpl xorl pop xlat dec pop stc loop jno imul dec push (bad) fdivr jl outsl dec lret push js dec jecxz mov dec pop mov and insb addl leave jg aad repz dec xchg out or mov (bad) jae pop xor (bad) leave add sti or stos push mov in push icebp clc leave icebp jg aam pop mov and pop xchg outsb mov fcmovnu xchg xor mov jo sbb cmp cld imul cltd outsb stc mov lret movsb dec dec lock push push ret add push xchg or mov leave (bad) jg xchg dec mov enter outsl popa pop sub mov mov mov pop into scas sub add pop (bad) cwtl sarb gs or pop jnp and stc out inc (bad) (bad) out dec sti ret shrl dec ret or push movsb imul sbb and pop test and push or inc and or ret ret jb repz xchg mov cmp mov sbb sub lods pop test (bad) lods fcoml roll xor dec leave pop jbe adc ret repz adc jp jle gs movsb push pop add and ss add fidivl (bad) fimul jmp shlb sub roll or cmc dec sub mov lods mov leave cli jbe and push rcrl sub mov jp pop jmp add es sub mov or xchg (bad) ljmp call mov jmp jp push or mov cmp mov or or (bad) jle push insl xchg (bad) out dec clc (bad) inc push xchg mov repnz dec add mov addb pop cmp pop cmpsl stc pop int jg xlat jp shrb leave inc jle inc jmp clc fs jmp adc xchg mov int3 cmp je out fadds or (bad) das lock jecxz cmc in repz mov cwtl in imulb cmp sub (bad) push and and (bad) imul xor ret or fsubrl and pop pushf pop add and fldl (bad) sub fnop and or ret sarl add pushf jo dec adc aam call dec mov bound pop lds out and je pop leave sbbl lods ds out mov std repz das sub dec add mov (bad) dec jbe mov bound pop out clc add leave into das fst cmp ret fnstenv push (bad) (bad) inc test sub and repz mov daa repnz cmp cmp popf loop pop call fcmovbe outsl divb sub xchg or addb repnz mov cwtl enter lods into dec out int jnp jbe push sbb fmuls orl mov xchg in sbb std daa fnstcw jae jle je sub sub es pop mov pop icebp sbb rolb add sti or adc idivb jbe bound (bad) push adc nop lea add xor enter roll jbe hlt mov or ljmp outsl xchg jmp loop out pop mov dec lret sub scas mov ret adc jg cs lcall xchg in test add negl jp push ja cli sbb cwtl daa call dec xor pushf dec sbb push mov sbb sub iret jge push inc (bad) pop popf fistp pop inc mov lret pop clc test scas lret repz or jecxz js xor mov sub sbb ret scas mov sub stos loop mov or (bad) mov (bad) bound sarl or xor fstps movsl fwait mov jmp in mov xor fs push pop (bad) xor xor mov repz sub icebp pop cld aaa jmp flds inc (bad) cmp dec xchg data16 shrb (bad) inc xchg mov pop jg data16 dec iret int xchg sub inc xchg test test cmp idivl repz into cld or int3 or sub mov (bad) daa imul pushl jne push pop jne insb or ja insb sub pop icebp and pop stc ret xchg or ja (bad) mov (bad) xor sti mov daa adc mov adc movsl jns and das js icebp das lret pop sub ret (bad) repnz mov or daa (bad) dec mov repz sub add scas int fldpi jp xlat movsl adc push test mov cmp paddd bound adc mov add adc lock lea nop mov add pop mov pop mov pop lods inc daa out std push iret push jecxz jnp movsb mov test fnstcw pop pushf xchg outsb push sub push add out divb sarl mov adc cltd pop ds (bad) fucomi idivl imul outsb mov jmp push mov shr dec sub and and fisubrl neg pop lret sbb and dec and xor leave fsubrs jb mov andl xchg jbe int jae dec ret pop or xor in lahf mov mov out dec mov sar hlt jp jb lds xor sbb adc (bad) lock push test ja push dec out lret jns iret aam or out scas pop jmp cmpsb dec xchg xchg repnz faddl test xor jecxz push lods rcll dec mov pop (bad) les adc mov mov fcom lahf push pop push or mov and ljmp add push ret scas inc std xchg push sub sub stc cmp shrl cmp cmp mov jge out pushf mov pop lret lods and dec lret push push movsl test repz and mov dec icebp call xchg push xor jns imul fdivr inc icebp lret aas call mov or dec cli adc lcall daa add xor mov inc mov mov and test cmpsl mov add cmp sub cli push je adc mov jae and fs add fs and das jge and mov into stc sub cld in or out dec mov jl test adc std jno mov out (bad) inc pop pop push jmp xor repz lods iret imul iret pop inc js out inc ss mov push mov mov dec fcmovb xor out or insb je and xor jne pushf fldt lahf push sbb or incb movsl ljmp popf jl jmp sbb push stc mov sub sub xor xor mov push or sbb xor bound fnstcw push mov rcr pop pop sub out pop ds notb dec sub pop lock testb push jns addl push jb les in outsl pushf mov pushf int xchg bound rcr pusha ret mov pusha sti jb adc mov rorb xchg pop and cmp ljmp sbb xor jo icebp (bad) in les fscale push mov xor xor repnz lahf loop jbe push or lahf test mov jecxz gs pushf out cmp mov mov or jo lahf adc es mov addr16 adc int3 jmp movsb in adc dec scas sbb sub inc xchg stos lds popa imul sub adc pop lret mov icebp mov xchg lret notl adcb les icebp loopne leave lods loope adcl pop scas push adc adc loop mov fstps fs pop call das out jne mov sar and rcr cmp jmp pop out xor adc mov push je std adc stos mov pop mov movsl push mov stos sub ficoml ret gs sbb jle test sbb daa adc mov out nop insl push mov mov sbb push xchg add loope nop imul das jmp xchg hlt lahf mov sub xchg (bad) repz jecxz mov (bad) shl cmp ds push push dec inc ds out rcrb inc sub cltd push (bad) jnp in mov out loop cltd cli or (bad) icebp mov mov stos xlat cmp lahf insb ljmp mov jg xor mov sub pop cmp push test xchg push scas jecxz add shrl xor cmp loop icebp out dec js fimul push xor mov ds xchg leave iret (bad) cltd imul jno testb push jns push stos lods jo ret pop ss pop mov leave add jmp mov dec dec mov pop push stos mov dec ljmp add nop add (bad) mov adc and cmp sub dec leave or cs sub or add dec xor ret lret mov sti cld mov es pop pop mov ja cmp ljmp movb dec adc sub (bad) leave xlat or jmp loope inc mov lock push in jae iret in rorl stos or outsb mov mov shll in out ja jle cltd movsb ljmp xchg adc adc aaa (bad) bound lock jg pusha mov sahf (bad) push repnz mov fsts ljmp mov test ret insl das (bad) mov rcll js mov adc mov xor sub in add add sub or addr16 jp les test sub out sti popa dec rorb jno sub mov jmp xchg or lret and mov enter cmp lret or ss mov aas out daa iret xlat xchg and or inc jg xor push in jecxz jno int aas bnd and jo scas in in pop mov pop out dec ljmp mov inc dec mov bound adc and dec push and inc iret sbb push sti gs sub (bad) daa xlat xchg jl mov cld pop xchg xchg push dec sub sarb pusha (bad) icebp dec fiaddl or add movsb rep mov gs inc loop lcall daa xor push cmpsl adc pop shl pop xchg in and and loop pop xchg aas xchg cli xchg xor int3 mov mov dec stc and push ret enter cld int scas xrelease (bad) idivl fnstenv dec pop and mov pop in mov inc mov js xchg adc mov push mov sbb cld test lods insb dec mov ror pushf ret adc (bad) or test mov out mov jno pop xchg pop das xor jge rol add and dec in fstps cmp std dec stos or sub aas ljmp push sbb add aas sti sbb or xchg sub fs and lahf push aad inc push (bad) cmp jp fmul mov (bad) fistp outsl lods jo mov jo les add mov in lods int3 add pushf dec leave mov ret out pop mov cmp out sbb jne or dec mov (bad) out mov dec ljmp int3 add cmpsb lock sub xor mov ret cmpl icebp add aaa add insl pop mov pop repz test mov mov push add or jmp iret mov xchg mov cmp mov mov cwtl imul or sub dec inc movsl xchg push shlb iret push cmp roll xchg lock or decl shr jmp out pop repz rcr push pop xchg mov fcoml xchg pop iret mov dec lret add int3 sub call ret pushf jns scas push jmp push (bad) push loop xchg fbstp jmpw pop fs sub cli mov sub lock and mov sahf adc fs adc cli fldcw mov sub bound (bad) ret insb add cmpsl mov into aam das in test mov mov pop mov or jmp lret cmovns int cmpb lret fisttp cmp dec lret jbe imul or or add sub mov nop and xor notb dec mov and fidivl popa into fdivp rcll roll mov lahf jle pop (bad) or mov divl cmc cmpsl jnp daa js dec (bad) lods ss (bad) (bad) mov mov std in xchg mov jecxz xchg lea cltd mov add push leave leave bound lret test mov add and jb mov adc les add clc fbld stos fs scas clc aad xchg loopne gs test adc je (bad) fs push jp sub xor jge add xor pop test xchg cwtl sarl ljmp jmp leave xchg pop pop or pop mov inc ret dec cmp push in das lahf js xchg jns fs mov outsb leave and loopne icebp xchg shl dec jbe add mov inc lods cmp ret fnstcw sarl and sub xchg mov sbb sub cmp fsubrs cli xchg mov call stos mov or xor aaa sub pop movsl iret test stos adc and mulb cmp cmc ljmp jbe adc stc pop sahf adc inc add cli pop popa jb fisttpl sub push fbstp dec push dec dec and cmpb mov mov xchg push movsl mov mov addr16 adc adc movsb out jne nop mov mov push jns fstl scas push push insb test repnz test push sti je scas repz mov xchg sti dec lret or jns shlb pop cli jne xor repz stc mov and mov push pushf xchg mov sub pop lods (bad) sub or mov jmp jle std push add leave add and inc sbb xlat mov fistpl ds add out into nop and or fcomps dec lret inc push pop mov notl jl and mov add add (bad) mov adc mov xchg xchg jmp cmp sahf nop enter ds sarl jns mov pop xor cld shl stos bnd xor pushf xchg rcr mov sub push pop lret (bad) popf insb fidiv or lret fistpl push (bad) test pop add adc shr pushl push fldl gs or xlat pop xor imul (bad) sub sub popf (bad) aam int or sub push and bound push or xlat lahf push xchg push mov xchg loop sahf sub inc das loop sar sub frstor movsb push js and es push pushf movb add es mov mov xor jl adc mov and cmp and add sub (bad) dec or fcomi mov packsswb daa pop out dec cmp into sbb mov movsb stos fstl into mov dec (bad) cmpsb in sub jle sub cmc sbb pop cmp call cmp and fucomip addr16 (bad) mov xlat addr16 mov lret xor mov pop mov mov and fildl (bad) sub popf push scas inc out stc jge xor jl sbb cmpsl clc or daa mov fcompl lret testl mov or jnp sahf (bad) xor cmp lahf xchg out jne scas mov jbe sub icebp adc loop test ret jmp xchg and leave mov notb insb lods std sbb pushf (bad) fldcw fwait mov push and mov jns inc or test sub pop xorb iret fstl xorl dec fist dec std movsb test loop (bad) jo lods scas and enter xchg mov iret in dec adc sbb add add and (bad) pushf arpl xchg and into dec xchg in lret xor (bad) int3 (bad) xor xlat jb movsl mov mov dec stos fldenv dec decb xchg mov and mov jg mov fsubrs xchg sbb dec inc sub dec (bad) int sub lahf dec mov pop xor jge imul add dec shl sub and in sub pop dec jle sub bound lcall lods negl jno mov ret xchg out imul lds or sub mov inc pop fpatan sub inc movsl push in sub and gs xlat sub sub int add xchg jbe jp sub aaa xchg and push cmpsl jne movsb adc cmp lret gs (bad) pinsrw xor mov outsl stos jmp shrl push movsl jl outsb dec popf fnstsw xchg mov jo xchg cmp mov dec ret cld jp adc xchg data16 mov cmp out lret pop jmp fsubp jecxz and rcll xlat or gs movsb (bad) sub cmp in dec fstp out sbb pop xchg mov jne pop pop push sub notl pop orb xchg inc loope js mov stc dec adc or sbb jecxz and ret es pop mov rolb rorl xor loope and pop stos jge gs sar mov out ljmp xor divb lds lods mov addr16 hlt ret sti stc fistl dec (bad) xor test sbb addr16 dec shrb cmpsb mov mov je xlat (bad) in xchg mov sub daa add push ljmp sbb test jle mov or out and inc xor pop mov daa pop dec (bad) mov mov or out mov into and pop lods test adc sbb sub mov (bad) sbb js int3 cmpsl mov mov iret mov pop or cld stc jno adc addl dec mov xchg fadd or jae xchg push adc or shrb pop (bad) (bad) or (bad) (bad) into jg push sahf leave fstpl pop cli loope out pop adc dec fnstenv push dec pusha push inc mov mov repnz jge nop cltd adc or and xor mov or sbb scas push rcrb mov sub daa xchg add sbb dec mov push imul pop (bad) cmp or mov ljmp or mov clc and mov imul shrb sub ja rcrl sbbl ljmp xchg out mov push scas fs dec xor imul xor daa sar call mov xlat aaa jmp push aas pop scas add ret sbb cmp loop pop int push (bad) lret (bad) cmp mov divl inc add push adc mov sub or scas fldcw jecxz daa ret adc dec mov int das ljmp stos mov sbb pop add jmp into or add xor lock adc stc xor dec inc test loope out mov xor jle fisubr mov mov fbstp out mov xchg aad pushl in lret int xchg loope sub js fucomi dec dec into inc push add mov mov xchg jmp pushf (bad) fildl push leave out push push mov sub adc popf sbb add testb pop loope cltd or iret push jb pop bound andb push out xchg (bad) clc and xor and and dec jne popf divl xor dec xlat and cli mov in sub test jecxz inc xchg sub movsb mov sub mov fimull sub sub and jp fwait or int daa cmp idivl dec repnz xchg loop xchg jmp cmp (bad) jl push fidiv icebp mov and cmp test scas pop rorl push adc push stos xchg std mov pushl dec jns lcall in jns ss jg in xor and push nop loop call mov xor ss mov inc dec jae out clc mov sti and xchg lods loope ret pop xor or jmp aam loope xchg dec and adc orb loopne repz popa xchg or jg iret mov (bad) fwait les mov imul or test pop in xchg xor mov enter xor es clc mov xchg push das sub popa hlt xor shl xchg adc adc adc mov std sbb outsb fisttpll outsl ja inc (bad) push aaa test popf push and mov cmp sub sub sub mov repnz push adc out cmp movsl cmp cmpsb sub push lcall mov or mov notl cmp jne js sub sub and (bad) arpl testb jmp cwtl push sub mov adc stos (bad) push cmpl xor (bad) in mov inc and stos jne into sub sub mov sbb lock adc stos repz hlt add mov mov xlat inc add xor shl (bad) sub mov ret mov lds call mov out and (bad) xor sub adc std jecxz ret cmpsl daa xor loop addr16 popa jb dec push (bad) dec cmp cmp dec mov or test mov mull adc add mov (bad) mov aam sub lock xchg data16 out fstpt mov mov out lea mov je imul fisttpl hlt sahf daa xlat sub or ja dec cli loop xchg mov sbb sub add jb lea or (bad) pop int3 cs inc xlat xchg repnz xor int3 adc jae or pop out hlt xlat cwtl lcall pop pop xor fisttpl inc outsb shlb rorb lret loop in scas out pop lret sub push xor push inc scas (bad) jns ret sub dec sub xlat out fstpl jecxz sub mov mov test add fsubrl ds dec cmp inc icebp cld lcall xor sub jge and int jmp aas cltd test or cmp sub sub pushf aam mov jb sub call rcll inc mov cmp pop lahf adc loopne pop mov js adcl mov push inc into and jns in fdivl dec imul xlat mov test fisttp sbb repnz nop jne mov test repnz jp fsubl xchg xchg (bad) xchg mov xor aam in stos or cmc gs mov loop inc orb ficom pop sbb dec repz lret out pushf insl dec mulb mov fisubrl gs mov stos sub mov mov cwtl rol pushf mov (bad) sbb inc inc pop out xor pushl leave inc sahf ljmp repnz adc clc pop repnz shll sbb or in std mov rcrl lea (bad) ret sub push or lret pop sub repnz aad shll jp insb leave jmp push pop cmpsl rcrb push mov daa out or (bad) adc stos dec sti addr16 lcall or imul xor and clc cmc inc dec pop divb pop (bad) jg fnop xchg jns movsl ja out dec sub test sub testl mov sar test enter movswl and imulb and mov adc pop bound pop cs aad loope push cmp enter add pop (bad) sub sub je inc add leave adc scas gs jecxz and xchg leave (bad) fmuls fistpl clc jmp (bad) sub sahf jecxz xor popf pusha sub xchg adc andl data16 inc xchg jl xlat adc pop pop or adc (bad) mov rcl insl mov xchg mov scas int cs sub (bad) sub fcmovbe lcall push push ret jl mov xchg inc (bad) mov sahf daa sub sub xor push fnstcw test je dec fistpll repz cli call pop lds (bad) leave or xchg (bad) leave sub popa cmp xchg stos std lds mov icebp lret xor mov mov ret mov fiadd lods in arpl inc mov data16 cmp std test enter sbb daa mov sbb pop pop mov xchg cmpsb adc sub cmp movsb out and mov into cmc push out popf jg inc leave scas mov fsubrp sahf mov stc andb jl ret fiadd hlt sti mov and cld roll xor call pop dec push fimull outsl and and or push jge cmp sti sub push out call or lret adc mov (bad) sub xchg outsb nop xchg push (bad) in loop (bad) xor lahf aam jae mov and fldenv into push sbb cmpsb push daa lock movsb push or dec adc or test ja cmpsb xchg xchg mov (bad) mov test daa mov push scas pushf mov xor mov add lea or test icebp lods outsb sub lcall mov imul adc imul xor rol jl loop pop dec and cmpsb xlat adc mov mov movsl xchg dec das out aad hlt xor and imul fcomi loop leave out mov sub mov (bad) lock mov dec xchg mov xor test and push lret out adc xchg popf addr16 push mov aaa dec test stos lret jmp sub add sbb or xor les and push icebp jecxz adc in pushf xor subl out and or push add mov jmp mov push frstor xor cs fs xorb dec sbb dec xor loope aaa negb add add push xchg mov iret jmp mov in ret movsb mov jns xchg add inc push repnz hlt adc in pop insl xchg (bad) xor fisubrl jb lock mov and pop mov icebp fs dec (bad) mov ds aam std movsl mov pop daa scas xor push or cmp push je movsbl or aaa jge das sub push das jmp xlat stos loop inc loop and fst cmp xchg (bad) cmp xor imul jmp cmp les cli iret xchg or dec sub pushf nop sbb gs mov aas (bad) fisubr in jnp xchg outsb icebp and inc aad scas cli jge enter pop aad jne push test and xor dec icebp ljmp outsl das jmp and sub mov fstp mov sti je xor xchg mov push loop push push pop lret stos pop jg lods imull and sti mov fprem xor loop push sub push sub and repnz mov pop mov mov pop xchg (bad) loop xchg inc pop jne add xor icebp into outsl jmp xor pop inc add push mov arpl pop push adc or or fmul das int3 outsb dec out mov mov adc inc fisubrl dec pxor scas repnz lret mov rorb lret mov sub push pop gs sub mov pop or loope mov dec mov in in xor (bad) sub syscall pop inc cmp xchg xor (bad) repnz ret xor or mov xchg cmpsl mov adc negl (bad) js xchg mov cld adc ja inc fstpl out rcrl (bad) mov xor mov sub test sub pop sbb mov iret mov stos popa jmp (bad) jmp jecxz mov cltd stc jmp mov lock fstl cmpsl push in daa shr sub fidiv testb sbb movsb push idiv cmp push out pop cmp jns push jl push pop push ret ret and push or ja cmp inc mov lret push push out mov (bad) fistp popf adc out jle jmp cmp loop jecxz idivb out daa ljmp xchg cmc cmp lret xchg sbb xchg fsubl insl jl sub xor sbb inc (bad) push push mov sub fnstenv dec inc sub fnstcw mov xorb in ret loop lret or lock lock les rclb and or mov jg push pop loop out lods sub outsl pop and je pop dec stos xor xor daa mov jne add clc sub pop mov or cli popa xchg loop sub mov pop pop mov into lock sub int3 (bad) dec pop je repnz mov cltd and sub (bad) repnz or mulb mov cs xor jg es fdivs mov adc xchg cmp (bad) iret pop cmp pop dec (bad) stc scas jne fdivl xchg jl ljmp rorb popf mov stc adc (bad) xor (bad) and icebp mov jmp jecxz,pn xchg mov pop pop scas popa js fmuls lock pop stc loope sub lods mov repz (bad) jl add push inc movsl adc sti push pop rcll out fnstsw idivl fst mov push sub (bad) mov sbb (bad) mov lods or pop fiadd jle inc std jmp push icebp icebp cmc jno cmp jnp mov or aad jge sub out sub sub xchg sub (bad) sbb daa movsl pop out daa aad pop addr16 push adc decb pop mov (bad) repz xchg mov mov xor cmpsb or and fs xor sub mov dec ljmp ret push or xchg cmp pop lock sub or xchg and test mov cmpsl test sti sub sub mov dec lock int3 cmp mov repnz in xchg mov cli cmpsl hlt fiadd push sbbb xchg jge pushf dec mov imul ret repz adc std jmp imul pop (bad) ljmp test or pop mov adc or cld jbe mov jle jb sbb cmp fldt mov repz push lret pop in or sub inc (bad) dec add mov inc lret xor xchg je gs call sub stc movzbl (bad) test cmp ljmp or push or cmp test movsl std sahf pop scas or pop xchg nop or arpl jo lret call lret xchg xchg addb xor insb adc pop add (bad) nop into pop data16 and xor jmp xor and jnp lret cmp dec pushf lods data16 mov in (bad) mov je jecxz das fistl pminsw dec call sub pop lods pop mov scas ror stc sub dec cli or or clc cli mov xor sub dec adc pop clc pop leave lret pop scas fwait stos imul (bad) imul mov or mov mov mov jmp stos jmp les stos push mov pop add lods (bad) xchg mov mov cmp jns leave cmc jae daa lcall fist movsl sbb cmpsb les lret pop lods sub lret push lahf jnp dec jne loop rcr jno mov aam into cmp out pop fldenv pop sti and cli cmp icebp pop add enter shr dec pop or or lds push xor sub (bad) ljmp lret jl in mov shl pop lock jg sbb mov negl lods or out mov mov mov push ljmp ljmp aas dec add js lahf jecxz add mov fiadd mov inc inc adc mul sub sub lock out xor pop mov mov pop adc enter shll aas fidivrl mov divl loope ret lds and xor ret or dec mov pop (bad) repz pop daa pop iret adc mov pop mov fwait mov push test lret gs fdivs mov repz movsl hlt sbb mov push call xchg inc dec xlat xchg ret mov daa (bad) mull add mov (bad) jmp fist ret ljmp test mov mov sub jns dec fmull pop push les pop pop sti (bad) cltd aam mov xor sarl jmp cmpsb int repz jb xor fsubs into lods mov xor jbe les jg sahf adc icebp jecxz jnp dec stos mov and pop rcl leave jmp shr fs mov (bad) cmpsl mov test pop lea das mov movsl pop ljmp sub pop test jg inc inc sub in xor repz jnp cmp (bad) dec mov xor cld sbb ret xchg and repz pushf add (bad) mov adc into clc dec out int outsb (bad) mov sbb call imul xchg or push (bad) out fcom lret mov movl repz xor push mov movsl icebp cmp dec adc shlb or je mov je,pn mov pushl push mov mov loop call mov dec add popf std xchg int3 mov (bad) sub mov enter push mov jecxz dec mov das or (bad) cli jecxz sahf lahf (bad) (bad) repnz repnz (bad) xor jne movsb dec imul gs out lret in rep xchg (bad) fdivs mov jae mov inc dec sbb fsub mov negb dec (bad) mov je sarl cmc shl sub jl in cmp xor mov bound xor inc jmp xchg sub lock mov into std repz push adc sti lret mov dec mov pop jg out sub push jmp and in icebp arpl xor ja mov dec sbb aas (bad) testl scas mov lods outsl imulb cmp jg jge scas leave cmp (bad) or dec xor daa das add je (bad) push xchg mov add cmp out (bad) mov pop sbb cld xor (bad) inc pushf push or jno mov jbe push dec sbb std adc popf aad sbb iret dec negb dec call clc ds stos lret sub mov pop iret xchg mov push ss push (bad) or in js and pop mulb out pop rorl pushf pop add ret mov into push (bad) popa shl mov or dec and scas frstor xchg inc pop adc xor (bad) jmp or xor pushf add cmp jp mov and and pop push pop pop jne sub pop cli into outsb inc scas sub imul xchg leave cld pop jnp add mov jo mov inc add leave mov shrl movsb scas pop and push dec and mov sub ficoml adc repz inc jne mov mov sub adc (bad) mov fsubrs enter out inc dec movsb icebp lods outsl in push leave or mov test fldt je (bad) and stos jmp push icebp add jnp inc mov ja pop mov aas lret test test rcl jecxz ja cmp cld mov cs sub xor sub and adc inc pop and lcall adc pop jb xchg dec sub mov cmpsb adc mov mov lock loop jmp test stos cmpsb mov rorb mov movsl add repnz loope dec xlat jne test cwtl pop sahf (bad) out mov sub sub sub mov adc stc mov cmp daa or sub and jae dec rolb pop loop popf pop xor push dec es (bad) popf (bad) popf sub cmp fs mul nop xchg rclb pop cmp or mulb ret mov and sub sbb xor mov mov and stos test jmp std sub and fcomps (bad) scas fs cmp push negb mov stos cmp pop data16 dec imul loopne mov test mov loop sbb idivb push adc xchg sbb jo sbb push add out mov sub cmp dec fbld cli rep dec and imul add lret sti out inc xor add add aad xchg pop adc xchg arpl push push mov loope das int3 insb cli dec sub sbb jbe pop daa jne repnz adc add mov imul inc and das dec lods jp inc mov pop popa into lret sub in repnz lods lcall push jle jmp inc fisub jno dec data16 inc xor add and sti xor add dec mov aad jg mov mov sub xor or cli xor imul bound out popa xor push daa stos jo ret cs mov fidiv leave cmc fdiv mov movsb and add es xchg cld das push enter fwait mov notb out fsubrp jno ds popf cmc fidiv fldcw lret cltd pop mov mov inc jns es leave addr16 jo pushl gs xchg aas mov sub in lods push das ja or mov mov fnsave pop scas jne xor cld loop lret add adc mov or pop (bad) mov movsl loop mov das or test aaa cmp xor sbb sub xor cltd and in adc lds pop mov outsb and cmp lret xor ss stc sbb shll fstps les icebp mov stc and cmp fmuls xor test inc cmpsl fidivrl xchg (bad) push lods lds cmpsl fsubrs sub and mov cwtl mov (bad) push je out mov xchg dec mov das sub fnsave leave inc in pop pop lret mov test mov jl and mov or mov out mov (bad) pop ja xchg (bad) xor gs mov decl cmp notl xchg add mov lcall sbb pop xor pop jnp mov clc dec les sub out repnz fidivrl push test mov fdivp ljmp pop out or mov pop jmp xor dec sbb bound daa push in xchg notl mov (bad) ja push clc fldenv fsts dec dec repz mov loop out jne test pop sub std popa test into out pop aad sub jae pop xor clc (bad) mov add lahf fildl add sub dec fsubr addr16 out lods xor push (bad) andb push dec comiss add xchg push not adc cmp jbe les out repnz xchg jno and jnp pop dec mov pushf or or dec add mov icebp pop inc idiv jno dec fmull ljmp pop arpl jge xchg leave or jge repz cmc cmp mov sub adc xor std out mov jbe iret ljmp push popf push sub into and out mov scas jb pop jl push aad cltd jne mov push inc lret fstpl jp inc ret dec cli xor out enter jae lods pop xchg pop jp xchg sbb sub daa and pop sbb daa pop cmp or (bad) fdivs mov xchg outsb sbb stos gs roll (bad) (bad) movb mov inc and ds and pop lahf xchg jle loop rcrl leave ja daa popf jae push into mov inc es jmp adc add fnclex push lcall ret jmp int3 jg jne sub jmp or lret mov push ss jge pop dec and fsubr xchg or pop mov mov adc pop xchg xchg mov lret test stc xchg leave push mov xchg sub mov xchg fnstenv aas data16 jno lods pop xor (bad) push mov mov fcmovnbe add inc mul sbb mov sbb push add sub cli (bad) or pop push inc dec addl add sbb xchg add fwait pushf pop mov xor cmp pop sahf (bad) sub mov pop dec ret push aas call push pop lods jnp ret out dec xor and mov fnstcw inc out mov orb jb push sti mov outsl loop leave loop stc push xor sub popf push cmpsl push xor pop sub aas or ret test dec mov pushf or adc shl jae and sub push shll and jno jns mov fstl mov and and cmp sbb lock insb sbb js leave aaa (bad) movsl mov imul mov pop and in test and xlat mov add sarl mov imul dec inc fidivrl out mov add and dec sub leave ljmp fs mov pop repnz sub mov cs jno xchg add xor or (bad) dec fldcw sub std cmpsl pop mov inc add mov xor jae daa mov inc fs test fnstcw out push add lods jecxz aad std (bad) lret cmp mov jg sub insl popa add rclb in daa push scas and out pop xor adc mov pop xor adc vmovapd outsb test inc mov mov sub push repnz fidivr cmp push mov test add fwait jecxz dec mov sbb loop popf xchg (bad) (bad) sub mov movsl or rorl xor ja xor xchg adc pop stc lahf fiadd addr16 imul mov sbb imul shr int3 push mov jg rorb push into cs lcall mov jg (bad) mov ret mov mov call fsubs jecxz sub bound out push adc and inc (bad) out mov jg xchg popf xchg roll aaa sub movsb cli cmp pop rcll cli fildl mov xchg fisttpll ret outsl repz idivb jp imul adc or mov and or sbb int3 sub dec fucomip popf test or test mov dec push pusha mov sub dec imul sub lds repnz xchg pushf ret dec fisttpl add decb xchg sub loopne mov sub and outsb xor jmp scas out xchg xchg mov lods clc lahf aam js pop fwait xchg xor mov adc add push adc mov iret adc cmp sub les and push mov outsb sbbl mov dec bound and ret pop and mov jbe jnp fcompl sub pop ret sub js inc gs and jno mov in repnz cli and add loop inc stc int3 fs into xor test xchg adc jecxz adc ret or xor cmp pushf mov adc jg popf xor popa add inc decl movsl stc cmc dec sti inc testl out insb pop pop (bad) cli sub cmp inc cmpsb mov pop bound mov js jg orb lahf stos push xchg jnp and and pop mov adc scas leave inc or pop push ja mov mov cmpsl inc dec cli cmpsb push mov lret idivl lds rcr inc sub dec aad cmp jecxz call mov jno pop repnz mov data16 icebp std imul dec cli fmuls xchg push jno adc xor int3 lret ret std (bad) ljmp jmp out sub push xor add adc das stc xchg xchg lret dec mov lock xor pusha decb xlat mov mov mov je,pt jecxz and sahf xchg idivb pop rcl sti pop jb dec call or test stos dec loope adc xchg add xchg ja dec imulb repz and xchg adc bnd icebp cmpsl imul push ror loope jno inc xor das mov jmp xor (bad) cli icebp fstpt xchg dec mov ret push add or out popa sbb or ret lcall add mov repnz std popa add xor add scas cltd sti ljmp repz jg xor push xor cmp hlt dec mov das decl adc ffreep test or shrl mov mov pop cltd pop lret jecxz arpl jns add popa sahf enter into cltd dec sbb ficoml call or cwtl add (bad) xchg xor lret cmp je lahf pop mov roll xor andb test sub push push push scas cwtl jecxz xchg jle pop je inc add ret das cld pushl jmp clc sbb pop gs cltd ret xor push notb sub aas cmp fsubl dec into or rcl inc adc mov pop add bound mov mov xlat bound das push subb push adc or out icebp push pop sub sub leave adc jmp cmp dec jg adc push subl jbe idivl out push fcomps xchg mov adc mov xor rcrl cmp popf xchg jle std and fistpll xlat inc fsubrs adc mov pop mov dec dec cld das icebp jnp and stos gs les out das icebp in cmpsl out or xor mov mov mov push out cmp movsb out xor fimull loope xchg fbld xor pop and xchg les mov push add (bad) fdivs sbb popf outsl fisub out (bad) jne cmp push daa shl stc into sub or cltd aad movsl dec arpl mov aad cld pushf sub pushf push movzbl add pop lods and pop stos push int3 adc shr icebp mov pop mov (bad) jne scas aas dec sub push add call test imul dec sub adc or lods sub sub push mov and out call outsl mov cli (bad) in push dec ret mov add in mov or add push xlat mov jb pop pusha push orl dec jecxz dec in xchg inc xchg inc or sub repnz add cmp test stc test ljmp mov pop xchg (bad) lcall push dec xor mov lds icebp xchg ja push cmp mov and xchg call cwtl xor sbb jmp adc sahf sbb mov mov cld and pop (bad) scas jb adc leave pop add mov and out xchg lods subb jmp insb lcall cli lret mov ds adc iret subb xchg clc sub adc or xlat cmp mov xchg mov lahf jmp dec sarl mov (bad) xor xor jg daa or cmp fbstp mov stc jecxz mov xchg test dec jne scas repz or pop add xchg aad js or sbb push aas xor jp rolb or aaa pop xchg push or push repnz mov inc repnz repz xor outsb pop pop pop shrb repz cmp jg xor test cmp and push cld (bad) je add and or cs xchg clc sarb into cmc fxch inc and push mov push or cmp or jmp push popf fucomi and js in mov add sub mov xchg mov xchg jns sar dec jmp in stos lds fldt sbb stos ret xchg out stos int3 adc dec sbb lods outsl repz adc sub inc insb sbb nop and sti mov xchg jg mov mov test jns xor out jbe aam push scas push mov imul lds lret movsb dec or xchg gs daa out notl mov xchg je mov das (bad) scas mov adc xlat std lods lret ret sub mov jl adc mov scas movsb out test sub push mov sub into add push scas imul mov xchg imull sub dec mov lret mov imul out call cmp shrl int3 cld dec pop mov iret pop cltd imul das jns sahf call sub sbb xchg stos xor notl lret leave out jg dec dec xor pop (bad) mov xor xchg fbld popa clc jmp stos jae mov in scas mov cmp out inc mov into cmp mov (bad) mov aas test adc fnop push stc jp popf ja loopne xor ja mov int sbb int3 enter cmc ja xor push mov outsb and (bad) mov jo mov push inc dec test jb popf pop mov and out stc sahf imul movsb push and sahf mov mov repnz in (bad) and pop jno pusha add dec dec and sarl push (bad) je inc outsb mov hlt cld pop and inc pop aas fdivrs mov test mov mov jecxz dec lret xchg pop dec nop lahf sbb mov stos ljmp mov inc xchg xlat xchg ret sbb daa jp mov or adc fadds push clc loop push outsb mov add pop in or fbld stos pop (bad) mov ret sahf adc outsb loopne into xchg in sub (bad) sbb lock and push sahf cld lret push xor cli mov xorb jg ficom scas sub xor clc hlt xchg fnstsw mov daa lcall mov push out add outsb mov cmp adc lea mov mov dec push outsl daa pop in daa push mov movsb sti loop push and mov imul add or jg push pop jno pusha repz or icebp cmp jbe cltd pop lods jge imulb sbb jb test shlb pop jns lret jle lds scas fldl popa mov fidivrl popfw and lods pop sbb pushl rorb (bad) mov bound inc into mov repz stc clc dec dec ss adc daa add pop lahf lods push adc fstps dec xchg dec out sub add sub aad ds popa pop mov jmp sbb push iret jecxz cltd jb inc stc push fidivr fdivs and loope insb lcall xchg pop xor xor sub jmp dec lret jle mov loop lds sbb in out notb dec sub int3 int cs pushf mov and mov (bad) cmc or jne imul cmpl sub cmp popf (bad) mov sbb (bad) or xchg daa jnp adc shrb jae js or data16 bound sbb cmp add xchg stos or pop push rorb sti xor loope cmp insl lret frndint stos gs dec or dec out rcrl outsb pop out int3 sub mov sub mov jae fstl cmp cmp xor lcall inc inc movsb xor cmp xchg adc mov adc repz xor sbb pop jae xchg ret push dec ljmp loop add stos faddp jbe,pt pusha xor mov mov and xor adc xchg add sbb dec loop test movsb jecxz dec scas fcoms push mov cmp out sub (bad) adc pushl push daa cltd call int in sti pop daa out ja lock sub ficom das pop rorb jo sub call daa cld outsl es in ja sbb or and mov or (bad) je fs mov inc lahf or adc sahf fstpl call adc ret fs test fisttpl add (bad) lock pop (bad) int3 pop call adc call mov bound inc pop aam loop rclb lret cli cmp jmp repz jmp mov inc cltd out cmp (bad) and rol sub out xchg push add in repz xchg dec mov insb xchg mov test mov mov pop lret mov (bad) mov jne daa add out cwtl jno sbb inc stos out jnp inc hlt sar mov fsts shlb aam test leave testb and adc stc mov cwtl test mov and pop sub xor cld imul ss rcl sbb mov mul sub mov or ja cmp daa call xchg xchg mov sti push mov (bad) cmc mov jns insl repnz call dec int cmp (bad) inc add icebp fstl into pop iret repnz jmp sar ljmp int3 cli push mov pop (bad) (bad) fdivrs push icebp jp mov cmpsb mov mov jmp sub mov add jne push mov insb in jmp gs jno out xorb xor or jmp or pop insb cwtl mov xchg lahf sbb fbld aam enter mov fildll or xor xchg sub cli (bad) dec mov es add push adc add lahf test (bad) mov dec and outsl clc into mov (bad) (bad) and repz nop rcll insb ret pop aas add or add sti ja mov lcall mov cmp (bad) xor push stos inc jg jl and mov xchg (bad) sub mov out push xchg aas lahf test stos out iret out scas fstpt lret jmp mov jmp and movsl call fdiv xchg sub (bad) cmp xor or mov xor dec add mov leave sbb xor lods mov (bad) gs stc fistpll jmp sub or xor cmp sbb icebp lock mov mov ret rclb mov inc dec mov daa add data16 fstl add push clc and jp dec sub adc lock (bad) dec push repz das inc xchg cld lcall dec pop pop mov and or pop cld pop in dec add mov xor fcomps mov movsl xor popf jno inc add jnp mov scas xchg sub fxch imul les push in sub jbe cmpsl lcall into inc sub (bad) or cwtl and stc push mov adcb mov lcall jb stc push cmc lods sbb (bad) stos sbb or notb lcall ficomp test mov popf jge fdivrl ljmp push fs push aaa out mov iret mov adc or or out lret or jmp pushl stos nop inc xchg outsb mov mov rcll decl dec sarl fstps fwait push inc loop or std pushf mov sbb cld jnp pop (bad) lahf daa fistp das push sbb inc mov push pop and movsl mov push out and mulb and cmp adc dec ljmp test out (bad) mov mov mull icebp into test xor cld push jmp sbb daa and daa ret lret rclb int3 mov cmp call scas das imulb jbe cs push fimul inc (bad) or leave jg jg addr16 repz add cmp in pop (bad) and mov repz xor jb xor and inc mov inc or sub icebp lds dec jnp and ret xor mov fstps bound stc lahf xlat mov add sahf lret mov adc das pushf mov lret nop sbb xor icebp dec mov jno sub jbe sub mov ljmp mov pusha mov (bad) cmc and lds cmpsl pusha cmp fldcw sub xchg cltd jle lods popf fwait xor leave cld mov xor lea jno outsl fildll dec cmp jmp aas repnz xlat lods sub jg pop outsb xlat (bad) sub rclb jb int3 push jmp loope loope fadd (bad) sub arpl insb push test fdivrs rorl aas dec test fnstenv mov push adc xor pusha mov xor stos mov insl dec daa int3 cmp dec and imul sub jo jmp push and loopne add lret jmp mov hlt lock or mov mov push les mov xor dec (bad) bound pop fidivr jo fsub popf pushf in leave ljmp fsubrp fwait movl pop or (bad) or jae push iret lods mov (bad) popa pop jle adc cli fist (bad) or sti fdivrs out repnz lret daa push dec add shrb pushf jne mov push mov iret sub mov adc and pop (bad) out test (bad) stos lods adc adc repnz sub mov stc ret sub mov xor pop enter or aad pop mov inc imull test loop jge jle scas mov add mov in das mov insl mov mov (bad) testb xor cmp push jp pop cmpsl and jmp mov cmp jnp or ljmp add jmp push xor (bad) mov and mov fisttpll mov lret ja or sbb cld repnz sub movb xchg jg mov adc mull stos pop ss mov xor ret aam push dec inc in and fist adc popf sub iret rorb aad fisubl mov sbb adc mov add movzbl stc dec leave sbb dec adc dec jmp loope lahf jns imul pop lret mull sahf sub pushf out dec add je (bad) mov ljmp sub and or mov pop push sub xchg gs fwait daa jg dec in and bound add add sub and add mov into adc jmp or adc lods (bad) mov xlat test iret mov adc or enter adc push and adc sti pusha xchg mov popf int3 push (bad) lret mov xor pushf sub mov imul out popa push ds push out mov stos jnp and test nop adc or jecxz cltd ret fldenv mov xlat pop mov mov imul gs mov lret sub fs in sbb push daa lret lock xchg dec mov clc dec divl cmpsl pop popa cmp xor clc cltd (bad) sub and pop pop (bad) adc pop imul je (bad) cmp and mov repz jmp fbstp movsl lock mov fidivrl jae mov cmp gs jb iret and xor xor ret mov xchg rcl dec or rorl pop out mov xor fdivrs (bad) out mov or notl adc nop (bad) mov addr16 mov sti sub lods sbb xchg cs adc ljmp mov shl ds xchg (bad) repz dec cmp (bad) dec cld out leave lock add and leave lock jb and iret out (bad) xlat or cmc adc daa xor rcrb or iret sbb push pop mov push xchg jge bound add jge cltd imul add popa outsb rcrl rorb sub mov ljmp pop scas sub roll mov mov les adc in in jbe jmp mov pop gs mov jg ret sti stos xchg xor sub sub dec arpl sbb sti xchg lret mov cli fsubl mov (bad) xchg adc sub loope jo,pt xor cwtl aam repz scas lret xor fisttpl out pushf add push pop outsl mov (bad) mov pusha ljmp push mov notb pusha movsb mov das (bad) jbe insb add xor aaa mov push aad add push push dec dec rorl xor push adc mov xor pop cmp inc rclb and push stos or xor mov outsl cmp cmp lock aad js add out mov mov rorb cmpsb test (bad) pop adc popf inc movsl in jle sub xor jne xor sub pop dec sub push jl jo repnz adc cmp das push pop lret or int3 xor mov sub and daa ja and mov stos or ret fstpl imul xlat gs lret jge and stos jl or ss xor in out push fstpl inc xchg lret pushf inc adc ffree mov dec add lods int bound push (bad) jecxz test iret cltd shll out and (bad) data16 cmp sub (bad) mov gs ds push jl fidivrl (bad) adc or into lret jnp push mov add test jl,pt mov mov jp mov mov fisttp insl jb jp xchg stc repnz (bad) in call jbe stos adc mov shr (bad) jbe (bad) cmp lds jmp mov add pop sub scas mov dec jecxz adc rcrb mov pop mov mov out dec sub mov jo sub sbb xchg (bad) sti and mov loop nop stc das add shrl pop pop sbb sub sub add (bad) jnp iret mov mov shl pop push mov dec into (bad) scas sub lods jl dec cwtl test scas push (bad) pusha shll xchg je push mov mov dec shrb data16 lcall cmc dec (bad) mov xchg adc je iret mov push daa fsub sub sub add out outsl xchg xchg xchg push enter inc sbb lock or dec add (bad) ret jge fbld pop adc outsl negl dec adc outsb xor and fsubs or (bad) hlt xchg cli fsub pop popa js inc sahf xchg stos fucom cmp sbb (bad) pusha dec push rcr push adc pop and arpl clc sub rcrb and xor jbe add lock iret xor lds jae mov negl clc cli cmp sub movsb mov (bad) jno lods ret (bad) ljmp sub fiaddl dec aaa movsl push adc in mov mov xor and dec repnz or daa or incl lock sahf xchg mov sarb rcr xor (bad) dec mov das or mov roll in scas data16 popf rorl pop mov aad add mov (bad) out lret lods push out xor fdivrl repnz pop pop cld pop mov lods push mov push (bad) cltd loop inc mov mov jbe push (bad) iret cmpsl cmp out mov mov or push sbb xor lret scas adc sbb dec (bad) out daa cmp inc dec sub cmp inc mov dec xchg imul das add and loope jmp sub mov cmpsb dec or (bad) loopne adc lret pop and inc and adc sahf lret ds insb fsts decl add and dec sbb and add or enter jns dec jmp fistp xor pop fucomip mov loope fisubrl and cmp pushf mov mov mov push hlt push enter lret js mov jnp mov lods sbb pop push stc ljmp (bad) sub popf movsl pop cwtl (bad) repz push das jbe movsl jne dec push icebp ljmp adc or sub xor add and and mov daa add pushf hlt sub sti fs jo sti sub ljmp leave test mov xor decb xor add mov into arpl xor data16 popf stos cmp cmp leave xor repnz fcoml or repz add mov and mov js cltd addr16 push call and jmp xor mov ret xlat mov xchg int3 xchg hlt pusha loop sub loope loope jecxz fs movsl cli or lods (bad) (bad) test xchg ljmp hlt out mov add cld js call lret out sub mov dec mov jns xchg mov inc push sub pop xor jb ret push jl jmp aaa jle sub pop inc push jo xchg xchg sarl jmp mov (bad) scas lret sbb or add fsubs test xchg jmp inc gs out add xchg fdivrs daa movl ret fidivr loop inc push es sub xchg fldl2e jo rorl in jl mov scas sub stos adc xor mov or jo fwait aas cmp aas and std jmp call push xchg (bad) pushf inc and enter add sub aad push add call or add inc push adc or (bad) mov jmp lock ret (bad) dec jmp cmp (bad) scas call sub cmc dec mov jno insb push das fucomi pop pop into sti cmp cltd cmp ss out iret sbb mov adc add out lret dec or fimul stc add mov fsubrp pop jmp push pop cmpsb jle pop lds ljmp pusha push inc mov xchg out mov cmpsl out mov jg xchg fdivl push push jmp jmp pop xor and or or out add inc cmp lret push pop xor or cs sub mov in daa movsb (bad) repz mov rsm sub inc mov dec ret (bad) idivl sub or out fisttpll int3 pop adc dec or into xor clc (bad) mov std out dec iret mov pushaw and adc jg xor lahf (bad) xlat lret jg mov jb xchg lods insl lret mov jl pop stc or xor sub ja iret icebp scas sub cmc out and lods add outsl daa sbb addl cmp into jge xchg mov fcomp xlat pushf xor sub mov ds sub fsubrl mov loope jmp inc jge mov mov div mov into add xor and mov dec (bad) stc xchg jo jmp xor sub roll or fisttp adc int sub mov notl cmp (bad) or (bad) and pop loop out inc ljmp jge inc mov adc pushl loope mov icebp shll stos sub ss mov mov idivl stos mov das divl cmp daa jge xor popf pop std imulb mov and add imulb jo mov insl sbb fildll repnz add mov jmp cwtl sahf iret xor int3 scas jmp push (bad) out pop adc out sub sbb xchg cmpsb lds int xor add and xchg pop fstpt cmp ds aaa imul outsl testb and sub into add mov xor into shrl dec test adc rorb jae and adc scas data16 fs repnz call jge add outsb mov jb dec or push aad inc xlat clc jmp jp mov cmp test or lea pop ds mov mov les (bad) mov adc mov mov rorl out jmp icebp loope inc bound into hlt popf push add push and dec or enter mov push add jne or ret imul fidiv xlat (bad) xchg sbb cmp lods mov and (bad) out mov roll daa call daa jne loop or cwtl mov mov repnz add call add pop ja sub push dec test out movsl lret cmp clc push lock sub sti lret or xchg dec je mov out mov scas or sub dec xor lock jns push cmp mov roll insl pop out jle jno push cmpsb mov dec xchg jne ss jbe or or pop mov jbe fnstsw repnz sub add adc mov adc pop push and sub ljmp adc je dec or cltd aaa xor fdivrs ljmp (bad) pusha pushl and sub (bad) scas repz lds push iret or lahf jmp (bad) pop bound stc fisub and loope xor mov test divl scas shr je sti mov repnz in mov sub push dec repz sub sarl jmp jle pop add xchg inc inc sub es in pop lahf (bad) mov or leave dec hlt test mov test ret rclb (bad) sti aam push mov add andb (bad) rorl mov and and and ret inc cltd dec idivb dec je push jl adc sub stos aad mov or and dec ret nop addr16 test sub jle or sbb xor cli xchg int shl jbe sub int aas cltd ds jb ret gs out lea sbb movsb pop fcomps xor rolb adc dec or test mov fstl data16 xor mov call pop mov jmp in xor inc xor pushf cmp cltd adc lret lcall inc fisubl ret xchg mov mov mov xor mov mov int3 mov mov jecxz in out sub out popf push xchg ljmp xor push out xor pop jmp push lret in jg adc shrb in xor cli mov mov jl cld pusha movsb ljmp imul xchg test ret xchg fadd hlt and mov mov icebp xor scas aam ds in mov mov pop dec mov mov pop in and cld inc and cld pop push out jecxz xchg mov push sub sarl call lcall fs hlt add test add stc mov add sti or (bad) not push cmp mov add cmpsl (bad) sub fstl iret mov imul cmc cli leave dec fdivrs data16 xor in cmpsb or lret pop dec pop add mov push xchg mov rep sub jecxz daa rcll xchg ds shll dec sar push adc push sub je adc cltd xor dec ret in xor mov dec jmp ret rolb cmp dec (bad) ljmp xchg movsl (bad) leave stos sub call rcll cwtl (bad) jecxz push mov fnsave xchg enter mov scas cld pop stc jnp mov dec and dec mov rcl pop call into jmp and daa jge push dec and orb xlat fisubl mov inc push jecxz int3 aaa out xchg in dec int fldenv mov test dec test cli out dec stos into addr16 pop lret jno (bad) negb jns sbb out dec dec inc lret outsl mov jp (bad) mulb cmp xor or mov (bad) in adc inc push jns dec leave out xchg lock repz pop stos pushf test lahf jne sub fsubs (bad) sbb dec pushf or mov push or push sub movsl mov jp push lea imul out data16 enter movsb stos lret (bad) jo pop pushf out out push (bad) push mov pop sbb sbb adc out cs aad xchg cli or and std cltd sbb mov dec xor pop jns adc mov daa sti int3 sbb jecxz cmp scas mov mov xchg xchg jmp mov mov out lahf xchg cltd test nop push popf stc mov (bad) pop cmp dec sub ret pop int3 pop dec xchg scas mov scas xor aas mov pop in add aaa rep push pushf aas sahf jb dec adc repz js nop out and (bad) sti popf xchg push and push xchg into inc dec or ds ret sub xlat add fcompl and mul leave adc mov and dec add and int in and pop jecxz and jl imul out xchg bound xor aaa (bad) iret mov clc popf mov jbe push int movsl mov sbb adc pop cmp arpl jne push lahf dec mov and in lods fcom scas adc call ret sub adc loope outsl mov add push sub stos notb cmpsb and cmc pop divb pushf loop push mov cwtl cmp (bad) imul push jne nop dec mov das cmp push (bad) push movsb outsl sbb and inc jb jmp sub and lock pop cmp ret sbb push test (bad) cmp popf je or lret push aam jnp sti addr16 jmp lds and out in out mov ret ja das lret jno rorl rcll lea adc inc cmpsb lea sub out xchg dec (bad) pop repz xor mov test aam dec xchg cmpsl cmp xchg mov mov cltd jle xchg int js sti loop,pt nop mov in push push inc sti push push lods ja jmp lea dec rorl in imul xor call add lcall leave (bad) mov mov xlat adc pop (bad) jne sub pushf mov loope add pop add pop fisub hlt push popf aam push fcom dec out mov test adc mov xchg in dec testl leave in cmpsl cld xchg (bad) into stos mov add mov cmp jne mov outsl fwait pop pop out cmp push imul xchg fistl rcr cmp sbb xor add lret movl ror cmc scas mov xchg notl and push sub sbbb push mov lcall cmpsb dec mov mov pop and pushf xchg xchg lock popf dec mov and jb insl xchg adc xor cmp out xor and adc stos (bad) cmp pop push mulb or jl xchg sub adc pop cmp fistpl icebp repz mov into fwait dec scas jp sub fcmovnbe sbb cmp outsb inc cmp movsl test shr fwait lahf (bad) pop mov std jno cmpsb sub adc into lret aad add lds mov ja lcall lock notl dec xchg pop insl imul outsb pop cmp sti and icebp pop pop mov clc nop xchg data16 int3 shrb pop cli insl dec xor sbb jmp pop xchg mov and dec xlat out fs pop fs cmp loop push pop jb pop or fnstenv pop add dec and out lods fldt or adcb push (bad) fldt or popf push jle and jae movsl mull pop subl pop adc xlat sbb mov add mov push ljmp or push xor and daa cmp int3 adc and xlat lret movsl cmp in dec or mov pop mov ret lds cmc xchg sbb mov adc xchg cltd mov test (bad) sub popf out mov add jecxz adc (bad) out mov das lods sub adc addr16 and in cmp push sub out test adc (bad) lods pop daa jmp mov mov je (bad) out lahf mov inc xor aas cld scas int3 jmp lea or daa (bad) scas or pop jae lret std xchg xchg popf (bad) sbb dec mov pushf and xor les xor sub mov sahf and sbb jle decb out cmp sub add out popf out rol dec pop lret dec push ret push sub (bad) or adc divl adc insl add idivb sub cmpsl (bad) mov incb inc push mov xchg pop mov xchg push push or mov or or mov adc mov repnz gs pop push pop mov (bad) push imulb jns aam mov xor lds cwtl sub scas push pop adc (bad) dec cmp jg js jb sub imul mov ss xor fisub and sub sbb into dec add cmp jno cmp xchg sub fsubs lods bound cltd lret fnsave pop enter gs cs jb dec hlt jmp pop push stos (bad) sar (bad) (bad) sub adc sub push fxam imul mov mov sub std and push into rorb clc or and icebp add into leave mov stos mov cmp push movsl inc inc pop and decl clc out out sbb icebp xchg or sub cmp sbb inc call push and push iret in fadds sub cld sub pop sub aas mov and mov and (bad) fs out cmp imul aam sub xor in adc (bad) adc enter insb xchg mov jle xor push shrl test cmp test pushw add mov fstpl add out lods adc repnz fucomp outsl dec ss jb shlb sub push pop xchg mov pop lds and outsb mov mov add std dec add fdivrs cli mov xor and (bad) xor fbstp or hlt addb add es insl jo sub movl decl sub out repz mov std xor unpcklps xor mov mov sub xchg test mov add dec cmp and sub mov sbb pop mov pop lods xchg (bad) test mov jbe sub xchg cmpsl scas mov mov negl dec (bad) lahf adc imul scas jge jmp imul imul clc or cmp and std loop into push inc xchg add sarb stc out xchg mov cmp mov jnp daa les or push mov mov sahf xlat dec mov jg sahf xchg shrl loop stc fbstp xor sub mov sbb xor xchg jecxz xlat in ds fstps sub add (bad) pop fidivl insl sub pop xor int (bad) scas ja movsl lock mov aam (bad) (bad) cld aas movsb out xor adc jmp ficom roll pop mov xor xor mov adc sub (bad) cmp les test enter add jl mov ret fnclex and shrl xor mov idivb mov mov or fmulp lock dec mov mov or jg loope pop adc lahf int3 jb int3 (bad) pop fsubrp xchg jno jmp jbe imul xchg mov sub js (bad) (bad) pop jne jb dec (bad) out cld mov call adc adc mov jmp push adc das mov gs add mov sub or jo xchg (bad) xchg xor sub cltd cmp andb xchg daa add lds (bad) repnz jge inc or iret lock mov push xor test jno out mov roll pop add es insl lcall movsl adc xor out das sub mov test lods das in dec jp outsb mov xchg repz dec and (bad) std add jb mov lock cmc (bad) sub add int3 jl pop push loopne mov xor fisttp sub or xor test add test mov call clc pop hlt repnz sub rolb add adc inc dec je stos mov insl xor and idiv pop or sub call scas sub cld inc sub sub enter xor lcall (bad) push (bad) jmp cmp sub out fcoml dec (bad) lret xlat in sub cmpsl int3 xor das out adc xchg addb lea inc movsb daa int3 jns sub icebp loopne xor out daa or pop mov imul adc sub mov (bad) dec das notb hlt vpxor jecxz cs pop loop xchg and out mov pop sub or insb mov mov stos xchg (bad) aas sub push ja adc cld aam and pop mov (bad) jmp mov (bad) adc flds sub lods add std jno dec push cmp xchg mov fcomi scas mov lret aam pop decl sarl xor sbb out mov mov fbstp or dec ss leave out xchg inc mov mov (bad) mov (bad) fsts test (bad) push out mov cmp mov inc (bad) sub xor movsb push or stc or negl dec xchg add add sub rcr mov sbb and push sbb inc leave or cmpl mov (bad) stc bound in lods fbld daa mov daa xor xlat xor mov dec sbb out push (bad) sub (bad) lcall jle sub daa leave pop inc cmc movsl loop or lret popa dec and add cmp sar jno (bad) mov es call sbbb scas fldenv sub pop in or leave stc mov icebp insl dec mov jne out cltd inc mov clc mov imul leave pop jp jmp jecxz pushf push and or jl xlat inc mov adc in mov add fsubrl stc lods inc jno inc xor adc je sub jo movzwl or adc push das jnp or pop xchg rorl std mov sarl das out insb cmp dec test ret pop jle push (bad) sbb push das push inc addr16 pop imul ficoml adc mov pop das xchg add push ds scas cmpsb pop dec test clc pop jae add bound xchg imul cmc xor lret pusha sub mov loope imul in or or pop push sub dec (bad) (bad) pop insb adc int jecxz lcall ret inc mov mov and jmp in ficompl out push mov dec push sub and rcr (bad) mov inc mov test movsl and rol mov scas mov xchg test (bad) in pop xlat mov shl stc pop jmp lcall nop in sub and es pop mov pop cmp cmp clc adc cmp and repnz dec lock test testl mov fidivrl addr16 addr16 fwait sbb sbb ds imul or adc (bad) dec mov and push cmp pop and and in nop sbb xor test push fs movsl sarl and enter int3 jmp mov mov mov mov or pop push push xchg ret scas repz mov xor mov cltd lcall mov mov inc cmc inc int3 bound lcall jb adc xchg rcrl xchg xor sub push xchg in cmpsl sarb adc sarl fstps cmc stc (bad) outsl mov and iret push rcll cmpsb push jle movsl in ds lret pop (bad) imul loope,pt lret lds jg test add nop iret popf (bad) sahf xlat mov insl jmp sahf test cld movsb lods fadd es mov sbb leave fs dec and add or dec xor nop ret ja push cmpsl (bad) mov push sub and or call dec or cli lock mov in (bad) std push mov out insb inc pop repz sub mov jp dec rorb int pop sub sub jp call adc mov push fildl gs sbb out imul jno xchg (bad) jmp lock hlt popf pop xor add sub (bad) or call movsb dec leave and (bad) repnz inc cmpsl aad aas mov mov lcall inc sub mov lahf or (bad) and fistp into inc xor xor or dec and mov or add xor xor gs fiadd cli adc (bad) pop sub or sarb popf xchg pop clc notb out push (bad) ret shr mov and mov jmp shrb in xor roll add sub leave jg xor lods int and add andl and or mov mov pop movb push lds xchg loop and fcmovnbe (bad) imul xchg (bad) jb loop (bad) jb mov mov xor icebp jl dec ljmp out xchg pushl xor cli (bad) mov add mov (bad) push retw mull xlat (bad) repnz adc adc cwtl mov popf pop mov xlat push aad or sub cwtl repz pop cmp sub shrb add stc das fdivr dec fnsave pop pusha loop leave and pop and add xlat and icebp pop jns test mov push add sub out pop movsb scas xor xor sub jmp shrb mov jp mov and icebp and popa (bad) loop (bad) gs and out xor lret jbe daa lock add je push ljmp (bad) mov or push nop mov xchg pop (bad) mov (bad) sub xor loopne shll or jne jle imul movhps mov shll ret (bad) mov out dec dec cwtl das scas xor lret and call xor in push pusha (bad) loopne cld pop in adc outsb lret push leave xor pop mov inc xchg test (bad) jmp mov push cmp inc inc icebp loopne out pop (bad) int mov xchg sub adc mov loop (bad) ret xor icebp fimul test loope or sub movsl push cmp gs mov jge dec sub aas iret scas sbb and out scas es adc (bad) mov jg daa and jg push in jne add stos sub cs ds cmp out das jmp sub mov or addl lods sub mov jl rorb enter and adc xor lret add stos mov dec inc mov imul lret fcom mov cwtl (bad) or dec and mov imul sahf cmp and outsl push clc sbb jmp push mov sub jb sub and repz in loop inc xlat nop dec out add adc cld divl jle or iret sub jl jmp xchg and (bad) icebp dec and daa cmc sbb sbb or out or mov lea (bad) outsl in test mov dec xor (bad) clc sbb (bad) cs divb xlat and push xor sti notb (bad) test fisubr push mov and or lret pop xor pushf mov xchg jmp dec mov bound push cmp fistp or aad fbld sbbb sbb f2xm1 and push mov repz xor xchg clc sti mov ficoml lods adc add repnz cwtl cmpsl xor ja outsl adc push jmp mov es or pop rorb std adc pop iret stos sub fdivp jno outsb in pop cmpsb mov push sub xor adc in xchg xor xorl sub jno imul out cld int stos adc ret icebp test test xchg jg mov pop out mov mov push pop xchg push adc lahf cli loop xchg add ret movsl dec and es ret lcall xchg lds jg mov mov lret push je vpsubusw sub mov frstpm(287 adc add loope out notb sbb gs xor cwtl adc xchg and insl shrl (bad) pop loope outsl jecxz int or sub cltd pop and test cli std fsubs or xchg and adc push jmp cmc out (bad) iret das mov mov and cmpsb das adc sub loop and es dec push xchg ds cmpsl jmp lret es mov jmp es lahf hlt xchg sti mov jmp lret ret inc mov xchg cmp scas sub mov mov (bad) mov repnz test sub jmp xchg data16 add sub into lret rcll pusha out popf pop xchg negb call jmp out sbb (bad) adc push sbb dec out pop std loopne xor mov and pop test out fcoms sub adc outsb mov jae movsb adc movsl std ss into and mov mov jno (bad) sub cmp pop or mov (bad) sub inc aaa pop (bad) les in repnz and fidivrl pushl jns push jmp (bad) movsb xchg push inc mov and cltd inc and aad lock xchg cmp jle push sub addr16 imul ds lcall push mov cmp outsb gs push (bad) imul imul (bad) and jecxz lcall mov mov (bad) adc sub mov movsl sbb xchg ret outsb mov addl maxps jp (bad) imulb sub pop out lods pop shlb xor mov push sub adc mov out jne mov dec cmpsl push mov jmp cld sbb test fidiv mov imul jg pop aad mov mov cmp scas cli pop pushf neg jl adc sbb mov lock cmpsl outsb sub test xor adc mov xchg addr16 cmp cmpb mov lcall (bad) idiv pop xor jmp dec adc iret push data16 xor adc xchg dec out fs out mov jns mov test ret pop xor xor xor cmp xor (bad) fldl sub aam mov sub push sub pop ljmp jle and inc xchg pushf adc dec out sub sub push mov sbb cld add push mov mov flds push lret cmp pop lret fistpl inc or repnz aam lret enter sub sbb cli add sti mov in mulb fdivr pop jbe lret add cmp mov sub push inc ja lret and jg repz icebp mov bound sub fstps mov push jp pop clc test jbe inc sub dec xchg bound mov jno lret cwtl xchg and stos pop xlat rcl mov je das aaa pop dec or mov push cli out fdivr pop mov sub psubusb push sbb ja sub in leave jns lods fildll push jb pop cmp xchg mov adc add outsb lods inc mov (bad) sub sub int and dec ss ljmp xlat test (bad) ljmp or jge call lret (bad) jge dec mov push daa je jno sub mov movsl (bad) jmp out and iret test in movsl pop stos adc pop pop pushl stos cwtl data16 add pushf sub adc pop sbb or jbe nop add incb mov push push sub push cmp pop cmp testb cwtl and fld into and mov sub sbb icebp inc mov iret xchg adc jmp iret fnstcw fstps mov pop push push popf mov ss neg and popf das aad clc hlt notl inc lods pushf xchg pop mov dec xor xor cmp push pop iret mov and cld sbb dec shr pop mov movsl adc mov mov rcrl mov jmp lahf cmpb jbe push push dec pop scas push or leave xchg inc sbb dec cmp test mov (bad) arpl sub sub cmp add out (bad) dec ret fwait xchg adc int3 mov xchg mov mov leave and xor icebp int3 mov pop pop in mov mov shr pop cmp xor sysexit mov ljmp movsl pop adc or out adc mov and ljmp xlat mov cmp mov mov decl pop ljmp out sub es test add (bad) popa pop or ja hlt or inc stos mov pop (bad) loope push push aam in pushf addl (bad) aaa addr16 sub xor mov push xor dec mov jns pop and scas popa lods or es sub adc jmp aas lock push jle cmp in pop in dec mov pop lds cmp (bad) negl sub mov mov sbb mov lahf mov mov test and dec mov fmuls jmp or dec mov cmp ret sub adc add add test subl pop mov mov push mov icebp sbb xor sub xchg mov jmp cli lret leave pusha jecxz xchg scas (bad) iret pop ret lea fstpt cli pop xchg sti xor mov adc mov es out imul js sub dec nopl fist sub icebp mov (bad) fcmovne ljmp xchg rcr lods fdivl pop pushf sub (bad) clc xlat test sti fcom jmp add fisubl cmpb repz sub int3 stc mov sub out rorl sub xchg sub mov jp test lret jmp xchg loopne loopne repz fs xchg out aad decl add test stc test fist cmp inc adc arpl lea repz ja pusha mov cmpsl or lock mov xor fiadd cmpsl idivb fmuls mov inc mov xlat cmp mov ja das stc (bad) sbb repnz inc clc leave leave lret icebp das add mov into cmp sub cmc (bad) mov push inc aam (bad) mov pop daa or pop fucompp push loop loop sarl jecxz mov push out stos sub pop movsb xchg mov (bad) and mov add (bad) sbb jne rdpmc or inc jp in repnz es jmp adc add sub cmp push sub or xor sbb roll aaa cmp xor sahf scas cmp jo dec pop stc sub hlt cli mov jnp mov jmp push ds or dec aas testb and sub xor loopne daa mov les sbb popf xchg fsin cs into xchg rcll stc loope mov out mov ret mov inc fwait (bad) dec inc fldl das add fld inc negl inc ds sub dec xor push or cltd (bad) fs out test sub cmpsb scas fisttp add pop push xor es jne sub dec or mov (bad) cmp xor aas test lret xor std inc imul or mov jmp (bad) and fs sub xchg pop jb jmp and or dec (bad) adc jo xchg icebp adc jecxz dec and xor arpl out mov sub roll popa in jmp mov pushf or pop xchg popa in stc adc es es out rcl out jb add fsubl mov mov cmp sub adc xor xor das inc pandn xchg into cs lret in rcll cmp je or pop (bad) sub pusha and push inc mov pop ljmp fdivrs xor or adc andl lods adc gs mov pop sub imul add xor or lods dec xlat clc xlat dec ficompl pushl out repnz xchg out sub pop mov lret ror mov lods out xor push mov test adc xor das lret push pop push mov mov incl icebp pop clc jne xlat fcomip negb push ds out dec mov xchg rorl je pop ret xchg lea aas mov sub rolb test jmp mov sti dec xor bound xor hlt stc cld sub mov sub js xchg mov adc push shlb das stc lahf dec jmp test mov mov pop sub daa pushl aam movsl in daa cmc xchg loope or cmc in movsb stos dec hlt or into push pop xor imul xor add fwait adc xor inc add and add push arpl xchg shl sub xor mov enter xor mov rcrb stos sub dec sbb add jae sbb push adc stos xor (bad) dec xchg or lret lcall mov mov out mov jno mov pop xor xchg lcallw gs ret mov sub (bad) xor int3 gs add mov mov jg (bad) nop outsb mov jnp imul movsl scas hlt add mov negl xchg push popf push clc jp test mov (bad) ja adc (bad) cmc jnp mulb mov jne cmp imul mov loope sub and repz sub dec mov out test xchg lcall inc ds js repnz xlat mov imul pop pop xor enter and icebp test pop inc mov in shrl sti xor add imul sub out xchg fstl jo mov xchg mov sub aad inc dec mov xchg je les mov add xor cmp push flds dec mov jg mov jp jbe into pop push xchg sub xor pop (bad) imul and pop fucom jbe jnp jnp jae ret push or mov stos push leave or es out cmp adc lods pop mov and mov xchg cmp jle mov call sahf idivb xchg stos imul and sbb sub adc ljmp dec dec popf bound xor sub add add mov sub add sub push inc std push inc xchg or or loopne (bad) push outsb sub stc icebp das lret imul test fmull xchg sub movl adc repnz mov scas sub mov xor mov data16 ja lods (bad) xchg stos into fsts (bad) imul iret xchg shll ret fsts pop jmp dec cmp sahf xlat daa add push cltd cmp dec xor gs mov jle fdivr popa jno adc fidivrl lret ret mov fdivl adc (bad) mov sti sbb sub jae xchg out scas mov sub pop mov pushl cmp cmp roll xchg cmc call pop fmull xor enter enter ret aam push jo dec lock xor rorb cld mov sbb shlb jmp sar bound add and (bad) jb lea aam roll xor scas clc push int3 jbe dec sbb add inc mov icebp sub pop jle lret fs dec scas xlat int3 lcall stc xchg sub das (bad) mov in fstpl dec pop xor stos mov push mov xchg bound adc push test pop and leave xchg add jmp mov mov pop stc push dec push (bad) sub ficompl cmovnp xchg inc clc es pop cld rclb std out das and mov arpl and xchg sbb cmp (bad) lret mov dec cmc sahf adc pushf sub and sub ret rcrl (bad) fistpl out sub mov jnp into int sbb and mov xor mov ficom scas je out not mov mov sub int es jae (bad) std iret fnstenv mov aam adc lods test xchg pop stc sahf and xor pop jae mov mulb add pop cltd cmp iret repnz inc fimul adc or add lcall add stos repnz ret push ds sub mov (bad) pop mov sub jle inc pusha imul jno out mov pop andb decl (bad) jbe lret and xor jmp fnop sub out out push xor or mov shrb push inc add push jecxz xor imul dec inc (bad) or rep cmpsb pop adc lret xchg add inc adc xor add aad arpl test stos lret jns mov aaa inc mov or inc aas cmp fisubl ret dec dec and jb pop clc jne out shr pop das rcl faddp jmp (bad) daa rcr push call adc cs jne xchg adc xor push sub out dec add repnz leave mov inc xchg push adc sub sub mov ds push cwtl sti adc in (bad) enter cmp cmp movsb sub ds and inc ret sbb lock fwait sahf and or test pop mov imul jge fs out sbb push (bad) pop and imul outsb fs sub rcrb fisttpl clc sub jg or dec pop insl add push adc aas and sti pushf (bad) pop popf pop and iret sbb out adc outsl adc or add sub ja xchg or mov push ret (bad) mov repz adc js std jge (bad) (bad) fldcw scas cmp sti adc mov testl add pop or or inc ret pop inc fisubl inc pop sbb das das data16 leave pop mov sub (bad) xor jno xor outsb out pop xor and in mov adc jmp pop out dec lahf dec jne icebp pushl push stc jnp sub in addr16 lret jmp adc call and xor xchg clc lods and push cld lret and inc pusha adc or (bad) cmp mov (bad) mov jge dec mov rorb xor mov fs (bad) jge into lock scas pop jne rorb aad push test mov xchg mov bound and and push addb jno and daa sub pop imul and (bad) out out inc jne dec cmp into ret or in outsl sub out mov or add scas jecxz mov aad cmp aad (bad) leave sub nop mov jmp xchg mov inc lret ja mov mov mov mov outsb and ret test inc xlat out fadds aam jmp es pop fsubr push mov push push cmp mov xchg ljmp cs daa mov clc push mov push cmp cs mov lahf (bad) icebp xchg mov fistpll cmpsl aam leave push pusha mov fisubl jecxz loope mov daa inc inc pop fyl2xp1 mov push sub or jmp icebp movsl inc mov lods push (bad) fadds ja fidiv gs dec push mov out xor xor mov popf or jmp jge rcrb call dec mov (bad) out pop push jb pop sub sbb imulb push jp add imul out and loope and sub or (bad) inc xor int3 loop sub mov and out sub add lret xchg ret sahf inc (bad) imul aam or js inc shr or negl dec mov add bound sub loop (bad) shr ret sbb rolb or xor dec ret jae push mov out ja test rclb stos bound daa mov pop ds xor sub pop clc lods adc movsl ds popa mov into popa sbb leave fildl ljmp push jb,pn iret insb ja sahf jae mov loope in sub stos xlat ret call sub js ror mull ds cmpsl (bad) hlt je idivb lret imul cmp (bad) rcrl testb ljmp cmp jno and das fldl test (bad) test fimull jbe lds loopne xor scas test (bad) push and jne xchg sub add pop mov iret rorb out aad lods lea push mov pop lock cmc mov inc call inc gs xchg call push cmp xchg shrb pusha pop clc pop repnz test mov push sub or rcll stos lret mov mov shrl mov xchg cmp imul ja and (bad) out pop xor outsb mov xchg cli lret and sbb add mov dec test lret (bad) (bad) iret loopne popa in dec mov ljmp aam into or mov sub or jo xor (bad) ds scas into cltd fld ds and out jne push mov fcmovnb pop pop sub mov ret and pop pop add xchg jne dec push or (bad) movsl test fnsave lods pop (bad) mov inc mov mov jns add xchg scas out imul mov popa jo lret xchg xor dec (bad) lea or xchg movsl ss sub movsl jne mov in push mov xor mov or push repnz add and out add popf mov pop lods ret pop jns dec jge mov pop notb loop lret xor mov dec mov sub lahf cld popf mov adc cmp das mov mov aam shl sub fsts push cmpl xchg in push in sahf sbb xor sbb cmp mov lahf outsb ds or int3 ss into sbb das lock cmp mov pop adc leave jge jp adc sub leave loope adc roll icebp xor cmp add bnd adc ror test or ljmp leave rclb xor mov inc not mov mov popf fbstp bound push sub daa xchg push and and shl mov pop dec ljmp cmp sti das jg xchg enter mov adc daa rcrl pop leave jecxz dec lods jg lods shrl dec aad notb jae pop pop loope fidivrl mov enter fldt pop mov mov push imull sub mov jnp in sub mov daa add and das adc xchg add clc cli movsb stos test popf enter negl pusha outsl clc insb loope adc xor ljmp test inc fs fisubrl ret jge jmp pop and pop cltd es add sbb (bad) pop jo mov push push adc in push icebp (bad) cmp movsl mov cmp mov sub fbld ljmp in mov rep cmc mov test cwtl jne dec data16 (bad) adc mov into xchg inc cmpsl adc adc xchg leave dec mov jle inc push das testl pop fcoml dec cmp fwait and mov push push imul aaa loope lret lret adc lock pushf lret sahf jns sub jg cmp xchg icebp push push mov aad jno and sub cmp mov jae and imul dec loopne ret sub push add imul imul int3 ss mov out mov jmp and imul fnsave pop out leave ret mov mov das scas jne mov cmp jecxz fist rcr jno cld mov xchg sbb outsb xor lds test pop hlt lret sub and lret sbb or pusha lods shrl ret pop lock lds enter popf cs jecxz enter pop sub sbb xor call mov mov mov cli push lods pop mov adc pushf mov or cli test pop pop test in mov dec cmc ds iret push dec or stos bound push and xlat or xchg in fstpl xor jnp ret cs es and lret mov jns dec stc sbb popa inc imul pop xlat dec push sub mov jg outsb pop mov and mov cmp decl loop rol dec mov xchg movsb inc and dec rorb jle aas out int jg cmp or (bad) sub cmc lcall cmpsb pop pop jno rcl mov sub sub or lret jp divl dec pop into lods cwtl (bad) loope xchg gs xchg imulb clc add and int3 jmp xchg (bad) cmp jmp daa add ja sbb cmp fnstsw dec pop mov mov movsl idivl xchg push jmp ljmp ret mov jb mov and xor mov inc xor cli sub cmp inc inc xor loopne idiv sti in lret test mov mov outsl cmp mov xchg fsubr loopne xor fldenv pop ret cmpsl mov adc lcall inc (bad) ljmp adc icebp leave jp maxps mov and dec mov pop popa mov jnp xchg mov push out outsl into rcll push xor mov sub movsb push sub loope repnz jbe push insb fwait mov pop enter pop fistpl popa mov repnz (bad) (bad) sbb jp test or or out mov sub cs push cmc arpl iret mov dec jecxz pop or mov push and lods in mov cli test xchg cwtl mov or xchg xor pop adc xchg fnsave xchg (bad) sub dec lcall data16 negl xchg out dec mov mov mov mov inc mov xor cmp movsl add mov jge jl or xchg out xlat out andl push cmpsb add push cmp sti iret lods jg or ds sbb push dec lods incb pop mov mov jecxz repnz lahf jb adc adc sti imul ljmp push aas loope cmp cld cs mov inc lcall out cs repz xor adc repz jne xor adc rcrb jo pop sbb lret mov daa lahf xchg push jb jmp pop push clc loope jg arpl jp pop rorb leave in jmp mov xlat push imul pop mov pop loope leave mov jmp loop xchg jmp pop jae or pop and pop test movsb stos xor or inc frstor leave das add add xor mov mov mov loopne out dec sub leave xchg xchg cmpsb push add and cmc sub lea movsl imul xchg test lcall mov mov add adc dec jmp dec aas negb cs xchg bound xchg bnd inc add rorl jge lcall into sub stos (bad) push mov mov insb out xchg pop icebp mov xchg push xchg push lahf popf mov (bad) enter (bad) test fnstenv imul sti mov sub xor enter in rol mov or cmp and xor (bad) call jb lds int and pop je xchg mov lods (bad) out sub push mov add cmpsl sub and adc xchg pop xor mov cltd push gs jb test add sarl je push mov clc test and fiadd out (bad) repnz or xor mov mov mov scas xchg cwtl fsubr aas daa mov or popa xchg (bad) fidivrl (bad) fist push cmp mov or mov sbb mov mov xor xor mov fsubrp pop sbb and and mov int3 push mulb fildll adc test sarb mov shrl jns dec jbe pop xlat out and inc cmpsb movsl lcall (bad) out or push popf cmp mov ljmp push cld leave lods lret xchg adc jb sbb sbb (bad) pop lret pop mov push fisttp roll imul sbb loopne mov fisub arpl fdivrp imul push int3 shrl mov aad sub (bad) in pushf into push jne xlat ret jmp ret dec jmp xchg lods leave mov adc lcall mov pop sub and dec jge sbb xchg (bad) jno sub mov sub ficoml and in addr16 xor pop pop mov add nop cltd lds (bad) cmp and fdivrp push cmc pop insl xchg sti jmp fsubrp xchg dec js xor jg and int3 (bad) repnz aam (bad) push into pop xchg lea jmp jns imul jmp mov repnz outsl sub popa cwtl add adcb out sub mov mov mov inc mov adc lea iret xor jp push pop rcrl loop mov mov sub repz ljmp mov add aas (bad) and adc adc mov fldcw mov jnp jo movb push add lods sub repz call mov fnstenv call stc cmp and lds mov andb repnz xchg push loop lret lret jp dec lret ret stos popa fnsave lods or mov (bad) inc xor cmp bound cltd and mov add stos (bad) jle hlt in add jle inc mov push sbb nop jnp (bad) popf in mov push pop stc xchg and mov aam pop ret add cltd imul pop push xor ljmp adc or out fs sbb add sti out inc rcll sarb cli push cmpsl pop (bad) lret sub pop push inc sbb daa or (bad) lock icebp jecxz test add sbb ffreep leave pushf inc adc pop pop in (bad) mov pop push or xchg lret (bad) out adc xchg pop lea aad outsb sub lret dec dec adc cmpsl mov not stc push test sbb jo dec int3 push cmc imul xchg dec pop mov or push mov mov pop (bad) fnclex out divl outsb mov inc push (bad) sub mov (bad) fimul lret mov aam xor mov xchg jbe leave ja mov sbb ss gs and or jg cmp mov lahf adc stos cmp push pop and cmpsl mov add push loop xchg adc int3 push or rclb idivb inc loop xchg call mov lret add pop imul repz mov push out xchg push mov jne or xor movb inc mov mov and jns xchg sub inc bound and (bad) mov jo fsubr and in negl xlat pushf shlb jne xchg out dec sbbb daa mov mov roll sub sub dec xchg stos jecxz addb das pushw xchg jl (bad) (bad) lret (bad) sub (bad) dec pop mov mov xabort jle mov cli mov mov sub xchg (bad) mov sbb sbb dec mov cmp mov das test loop xchg popf lock xor inc (bad) cmp in aas xor add test push fildll dec out aam (bad) xlat mov sub clc sarb pop push sub enter pop dec mov ret xor stos sub cld inc cmc xchg outsb mov dec mov add xchg cli ljmp inc mov (bad) lahf jns in int das lods lret dec pavgb xchg leave dec test scas mov loop add pop jnp mov aaa push out add mov sub imull test or out lods push lret mov not outsb adc xchg ljmp pop mov test adc add sub mov pop popf mov (bad) xchg rcr jns imul or xchg dec mov push mov daa cmp mov xchg xchg cld push lret dec sti mov shlb cmpsb jle negl fldcw sbb inc adc pop daa ret ljmp leave (bad) repnz mov (bad) lret lods in lock xor mov test cli and sub out inc mov or clc cs (bad) sub call xchg dec ljmp ret adc or jbe aas fcoml push leave jmp pop dec cmp test adc out lea xchg sub ret sbb xor fwait xchg stos xor add fs scas stos popf inc jnp jnp repz mov ss cmpsb enter pushf mov movsl adc cmp xchg and lds icebp out lret loope jnp or xchg mov mov fbstp xchg aam jmp leave dec dec push add xabort ficoml gs and push jmp mov push imul outsb sbb lahf or lret or mov clc lahf jl loop and imul addr16 and ja stos ss cli movsl clc repz cmpsb ja dec xchg leavew daa ret jae or mov icebp add out leave clc mov repnz xor jmp sub sub xor pop and xchg jbe pop jge pop fst leave and repnz or sub and push ss sbb adc cmp lods xor outsl cld and inc das fs jmp dec sub mov jecxz (bad) jb clc daa je pop or clc rcll shrb push or and jge mov rclb outsb mov sarb lea pop hlt dec insl pop sub jmp and in mov cld jno add xchg ret nop dec sub popf inc arpl xchg dec popa pop cmp mov add inc add imul nop dec or jns enter repnz lret jp loopne aad dec dec cli out sub xchg mov jno fdivr dec mov ret mov sub cs mov xor push xlat jb popf orb push pop mov add out incb fmul or cmp scas sub or test aas xor xor (bad) scas popf cmp mov mov ljmp (bad) enter dec ret ret aas push cmp or mov gs xor repnz lret sbb push mov add scas mov vmovapd stos jae or push sti mov pop rcrb scas xchg add push dec repnz push or int3 repz mov dec push lds adc or adc cmpsl dec jl xchg (bad) clc jle sub popa xor jle push aam push add jo xlat add push in mov mov ret sbb push jb insl sbb mov xor jno mov (bad) push cmp adc in dec jmp mov rclb or fcompl cmp cs rorl sbb in xchg mov inc inc mov div lds dec cmp mov inc jno inc add movzwl xor cli (bad) popf pop nop loop clc jnp push rcrl xor fnstcw pop adc xlat lds add lret ss outsb call fnstcw and es rcr mov sub pop push ljmp int outsb xchg mov std int test pop repz sbbb jb int3 lahf add lea lcall mov or xlat dec pop and inc bound dec aad dec adc in dec xchg jmp pop out pushf mov mov mov and test fildl scas loop xlat test sub sub loop xchg mov lcall daa iret aam pop dec mov inc fbstp and add pop addr16 sub or pop inc push jo mov xchg sub sub out imul add inc and cld mov sti push inc call cmp cli mov icebp push cvtdq2ps sub dec call out xchg test (bad) or mov pop jne mov sub scas add or (bad) and xor fdivrs into popf insb inc in mov push repnz dec cmp pop jbe lds int3 std sub out shll push push mov mov add jl mov adc sub mov insl test cmp popa (bad) daa adc sub into inc mov adc ficomp ret adc jb push fnsave jo cmpl loop push (bad) bound ret arpl nop jbe lret xchg outsl sub mov push imul or jle pop ljmp ljmp or jb (bad) xor lods push sub push xchg pushf xor icebp xchg push cmp mov push repnz movsl cmpsb cmp push inc dec pop mov arpl cs stos push loop (bad) jae push shrl inc (bad) into cmp pop xchg or xchg fstl xor ja and push aad inc fimul jae adc and mov dec mov (bad) dec adc xchg pop pop negb dec mov scas or cmp bnd pop mov repnz xchg in xor iret mov imul push or or clc sbb (bad) cmc ljmp frstor jmp add add mov clc daa les aaa xchg sti ss pop xlat and mov dec icebp pushl inc xor loop fldenv sub mov push into pop sub pop clc fwait dec ljmp sbb pop pop daa ret shrl scas (bad) fbstp leave xlat mov xlat inc adcb cltd pop mov fldcw cmp nop xchg or jmp roll jl mov imul stos jb inc sub mov (bad) jmp ljmp mov and mov sbb push xchg (bad) adc lahf sub (bad) jmp mov leave push (bad) lret push or mov and dec test loop dec bnd mov add push jne sbb ret test jg gs adc aas clc mov lcall data16 (bad) addb add mov popa adc adc and sbb xchg and icebp dec dec mov sbb fisubr dec adc mov inc js lret ret lcall lods stos aam pop fcomp testb cmp pop push inc pusha xchg test movsl hlt sbb repnz (bad) sarb sub xchg mov cmpsl jle add int3 pushf test daa jle and pop dec dec xchg aad lret test dec leave int3 inc dec lret scas test or imul and test dec stos pusha xor sub mov lds xchg loop add dec cld lahf shlb xor xor scas lret sbb pushf sbb gs js mov mov leave pop pop pop xchg gs add out pop cmp xchg mov jg inc lds dec lahf mov dec arpl es sbb int3 scas bndldx (bad) arpl dec sub cmovnp push push imul stos popf xchg xchg lahf mov pop and sbb mov mov shrd repnz mov out ror mov jne sbb mov test bnd adc mov test adc xchg push push push cmp rorl iret sub xchg jle scas or (bad) int3 cli lret out jne jo sub adc shl scas mov xlat loop xchg arpl lock add pop cmpsl imul dec ret push lock out xchg loop test mov jmp jae ret shr loopne cli mov in mov push mov jbe dec mov loope pop dec lret inc dec mov rclb xor (bad) lcall scas icebp ret dec stos lret inc dec jo push xlat mov push ret add mov imul xlat sti out pop sti lret adc xchg lret cmp mov (bad) fdivrl inc call mov xor fucom cmpsl jb dec cli cli lea jb,pt mov and test imulb mov shll mov fwait mov lret pop push adc sarb nop fdivrs test ret (bad) dec cmpsb test mov push sub dec mov movsb fimull push decl test cmp and jp pop mov add cmp pop das cmpsl inc leave lahf push in jb lock mov cli or pop xchg shlb out out dec stos add jecxz jmp lcall add sub xchg mov data16 je sti (bad) popa lret mov sub lcall out jae cmovg ret mov lods out mov and inc mov lea inc xor nop daa and and loope mov lcall adc and pop enter lret jg fs aas das (bad) negb add and dec pop imul xchg popa xor out js test test xchg xchg stc punpckhwd out inc idiv jmp push mov xor cld cmp ja (bad) xor mov xchg cmc xchg cwtl pop jp lcall bound push aam push sub and popf outsb mov inc sub popf aad xchg popf (bad) sub lcall pop mov repz and mov pop icebp mov rorb add mov xchg push iret sub xchg out cltd out ds add (bad) jne adc push loope negl pushf mov mov dec mov cmp mov dec jmp push pop mov fadds mov xchg push sub iret fucomp jle mov pushl aas movsl sub rcl daa pop sbb mov mov mov scas sub xchg mov icebp cmpsb inc out ljmp cltd xchg xor popf popf add test enter adc dec dec rorb outsb imul lock lret mov dec outsl rorb mov and (bad) mov (bad) xor clc cmp xchg mov jl and mov rcl jle mov adc les imulb push xchg outsb and mov lcall dec xchg test bound roll aas dec pushl pop ljmp bound sbb mov call xor test leave or push mov incl push mov jbe movl lods sub scas add sub mov pop test mov loop pop push jnp adc idivb add jno push adc xchg out xor stos mov outsb cmp add inc mov and icebp fdivrl mov or pushl dec jg jnp pop cli and xchg sti into out adc or pushaw ret daa aad lods scas (bad) sahf imul incl cmp cmp pop sub loope sbb (bad) imul dec mov pop aaa mov dec (bad) adc in xor outsb (bad) dec das (bad) jle rcr ds je loopne out lds movsl std xchg push (bad) jle scas mov ja mov sbb pop push dec inc (bad) out dec mov mov insl iret test out lret insl and lock inc dec sub xchg cltd mov sub out shl push test push fildll or xor pop dec (bad) idivl stos sub fildl (bad) xor es lret nop addr16 decl aad repz fldenv outsl imul popf ljmp aad scas mov cmp mov ja fadd or jg rcl xchg ret test mov cld sub jle icebp xor in fmuls (bad) movsl leave ja rcr push and or scas cmp mov cmp and or mov ds mov imul inc dec lods mov leave or js inc pop das stos cmp stos and call enter clc in std rorl les sar mov mov (bad) adc push xchg adc loop shr mov xor lahf jl rcrl das mov jbe leave stc cwtl in andl sbbl sbb add adc push pop lock bound xor xor rcrl mov movl test inc mov dec lock std insb lds sub idiv cmpsl in xor pop aaa push test std (bad) testl into lds fcmovb add lret xor (bad) mov dec clc jo sub ret in jae or xlat cmc in mov push mov adc mov cmp scas fstps das out sub jo xchg stc dec or xchg lods push cmp fsubr mov or in out aad lods mov es add or mov cmp lock gs dec push xor data16 add cs sub push sub sub pusha jns pop loopne data16 jmp (bad) sub push sbb dec bound pop mov mov xor push sub push imul adc cs xchg imul into cmpsb pop inc (bad) jecxz mov pop clc mov scas fsubl push mov dec add push mov add mov dec xor and push jae cmc test dec mov xchg int3 push push movsb jno push push cmp imul das fimul push pop fldcw lds je xchg sti cmp lods xor mov adcb xor add and mov cmc lcall mov push inc test mov in mov das jecxz pop mov lock into pop add pop out fdivl (bad) xchg sub pop and enter enter rcll int3 pop lret mov jle pop adc shlb pop lret mov jbe and add inc gs cmp fnstcw inc ret pop xor mov jno bound rcl sub les xor in ret (bad) lret and mov xchg test cmp (bad) rol data16 sub sti mov out jle sub mov push or sub movsl mov out sub lahf test out cmp test add jne jl mov and push sarl jg add push push push (bad) sub xchg lcall push dec (bad) out iret outsb mov xor loopne mov jmp or ficompl adc pop sti pop sar sub mov cs pop cld imul ret in pop (bad) imul aaa push fs pop aaa data16 and push out bound fistpll std and adc idivl push fwait mov or icebp push lods xor inc adc shrl dec push data16 dec lock nop fidivl (bad) xor inc dec ljmp pop jecxz sub mov ret test cwtl dec loop mov dec lret xor jge bound sbb pop xchg clc xchg jl inc ret pop sub pop push and (bad) mov dec fisubr sbb sub xor daa xlat ds loop ja addr16 loop sub or push dec sub sub mov push inc mov cltd sub es js call pushf dec or stos pop sub xchg mov out xor xor or test xchg enter mov or push push lret into faddl and add push lods dec aad mov lret cmovae cmp lock mov loope and mov jmp adc jge dec imull out cld lock mov repnz pop dec test arpl aaa mov xor mov sti ret xor jp hlt loope addr16 mov scas push leave (bad) (bad) adc or jae std push xor scas jne mov into aas repnz mov mov gs daa inc loope dec or sub push lds mov cwtl test jmp ljmp or stc cmp negl ds jns (bad) ljmp pop sbb and sbb xlat mov (bad) jne sub cs dec mov hlt loop pop mov adc xor enter jno sub imul and test sub mov mov sbb add icebp xorl sub jae decb call mov pop xor sub lock addr16 cli sub gs stos cltd sub stos xchg mov ss jecxz sti sbb jns xchg out je dec dec into jne ds std inc sub xchg mov out mov xchg stos mov outsl test cltd add out std ja daa add stos lahf int3 ret popf xchg adc xorl push dec (bad) dec jecxz das fisttp subb scas xor movsb push stos lret xrelease lods cmpsl fmuls out out call jmp lds gs out pushl scas test mov jmp fildll jbe pop mov and sub sub in sbb imul xor adc out mov mov fld dec pop add mov sbb mov and pushl or and and popf push (bad) xchg add out dec sbb xchg or jmp cmpsb loopne icebp push cmp lret and loope pop mov scas dec pop aad aam clc fistpll popa mov mov repnz js jno lods aaa and mov sub jmp ds and or cltd add jecxz xchg (bad) loope jae add cld and jbe pop roll jmp lods imul fnstenv adc or in adc mov mov (bad) out mov xor xchg jae and mov add addb in sub stos imul pop daa into pop xchg nop cld adc cmp sbb repz inc fs mov repz pop pop cmp push and dec mov loope imul loope mov sahf adc mov loop icebp out xchg icebp scas xchg mov add sarl jbe dec es rclb int inc jne adc xor add add out bound subb xchg cmp push popf fcompl out mov pop push mov daa (bad) adc xchg lock call imul ljmp fisttp and data16 xor add sub sbb pop or push movsb icebp ljmp cmpsl pop dec mov test xchg and add xlat sbb mov jb pop sbb mov xchg ljmp divl (bad) sbb push push popf jge nop and and mov sub push test lock sti ret shl dec jle sub mov xlat jb mov add fldcw push iret or outsb jg or push cmp jl (bad) out sbb xor mov lods sub xor mov or (bad) mov fisubl add loop xchg pop lock shl lret push cltd dec xor or repz add mov xchg movsb sbb mov sbb inc stos sbb lret pusha and sub or mov sbb push fs adc popf cmp sub xchg pop icebp jb sbb fidivrl out sub lds das not mov ljmp out mov dec xor xor jo icebp mov pop fidiv div (bad) push sarl mov jg and mov xor cmpsl in and in and and mov jl leave fistl pop and (bad) inc jmp lea sarb mov fild pop sub repnz mov sub shrl lret sub pop jno lahf out push ret mov sbb jmp cmp aad aas adc mov test adc loop xchg sub cmp dec jge push mov mov or clc stos sub ss aaa mov test or jmp imul sub out pop inc dec clc jl mov cmp sub movl cs and flds xchg add cmp sub std rolb xor sub idiv das dec cltd out jle sbb adc sub pop test rcrb dec in cld repnz ficom push or mov inc nop das (bad) fcomip jnp and pop cmp adc (bad) fnsave daa adc daa nop pop add nop in dec mov ret jle jl lea ret jns dec (bad) (bad) test lcall mov ja xor dec jp pusha xchg clc in insb adc add test pop ffree jg (bad) mov sarl ret test fbstp lock mov mov pushf push xlat daa lock xchg (bad) in push rolb lock jp dec (bad) push das mov stos (bad) or leave xchg repz mov xchg sbb push mov aam or sahf push in ret dec and adc xor out cmpsb ss mov roll xor jg loop xlat loope rcrb sbb cmc sub mov xchg jmp push (bad) stos cmp cld mov out xor cmpsb xor fnstenv mov fdivrl outsl or push cltd das ret mov push ss xlat mov hlt push das out daa hlt dec cli push aam jbe add sbb cli sub cli jb pop addr16 test pop push add jp loop mov icebp push outsl std test push adc mov dec xor inc dec hlt mov sub xchg jb or xor mov (bad) mov das xor inc push mov dec divl mov in inc sar into pminub pop je pop cmp test add push sub mov sbb inc adc cmc pop popf leave push sti xchg xor stos cld xchg mov shlb andl and add mov xchg push inc mov (bad) daa xchg frstor leave js daa movb push sub scas mov pop and cli push je dec pop cli mov mov ret add jb scas je mov jl jno cs jle inc into sti dec jmp aad pop push mov push into or cld cmp sub mov outsb scas bnd push push scas jo (bad) xor mov outsl push divb dec imulb ret call jmp push mov mov xchg ljmp icebp jne fcmovnbe out sub inc xchg mov adc or xor imulb cmp leave loop repz insb and pop lods and in mov (bad) sbb adc xchg sub ret pop (bad) addr16 pop aam out xchg lahf movsb cmc sti sub cmp lret rcrl adc iret sbb and add icebp cmp data16 out int3 pop stc xchg sti lods sub pusha and add dec pop (bad) inc call xor popf divb (bad) iret mov jns xchg (bad) int jb pop lock daa movzwl pop push ja addr16 (bad) dec sbb gs mov lret fisttp sar or and idiv and push out mov pushf test das mov mov jne rcll lods push dec pusha pushf lea cmp int3 inc xlat jo mov push (bad) mov out mov dec mov xchg add xchg in mov push jnp adc cmp cltd call leave negl and mov mov xor mov jg loop cli xlat pop lds ljmp mov cld jnp or jl and cld or xchg xor jge into add mov jp adc fdivrs movsl push cmp xlat adc call pop and in adc icebp or mov pushf daa rorl mov cmpsb daa adc pop in xchg sub mov into dec push push (bad) clc notl add ret mov rcrl into (bad) add fisub xchg into jmp sbb ljmp out mov adc out and mov in int or inc pop mov dec add mov mov iret aad jge pop mov gs rcll leave xlat jnp add dec dec out xor leave leave sbb inc mov mov or add mov out xor adc xchg int3 fwait add sarl clc lcall sub outsl daa jmp js ja fld lcall pop cmp and pop sarl jno inc insl stos cmp ljmp jl shrl fimull jb pop leave dec jbe je push ja movsl pop and pop ja mov xchg das js clc adc dec mov lea and mov and cmpsl push pop jl push push add jmp mov lods dec mov adc add (bad) je lds sub xor or xlat add out mov pop lret insb xchg scas mov jae mov push stc mov subb and add test push mov cli add mov popf lds and xor loop (bad) or (bad) jno sbb pop sbb push or pushf addr16 mov push sub lods mov push into popa sub repz cmp push jmp jne pushf xor out mov pop sub add div or mov xchg add ds imul pop fs out popf (bad) mov jmp adc push xor sahf cmp fwait (bad) (bad) cmc mov in push push lret lods mov scas dec mov call sub jg dec adc ss int3 shrl fs add inc pop sub sti cltd mov icebp shrl lret mov and inc mov imul and daa pop ja aaa cmp lret cmp scas (bad) aaa leave or lds mov jmp aam (bad) ja clc dec mov in pushf inc loop jb mov dec fldl xor cmp and das push sbb pop add loope aas ret lds mov stos sub test push and daa and pop sbb lcall mov xchg leave (bad) loopne loopne icebp mov pop sarb nopl ret mov xor and cmpsb adc icebp mov mov dec sti in cld mov fucom cmp cli push cmpsb or hlt sti push lret adc insl mov imul adc xchg sub popf out testl std fnstenv dec mov add mov sub ds sub sar mov pop xchg inc dec icebp push lods push dec xchg pop xor (bad) xor xchg sbb add aad dec negb sub movsl fistpll pusha out add or pop add sarl out into test rorl dec add adc xor icebp mov mov fmul mov and sub cs xor sbb inc dec or adc ss and jge ljmp pop xchg add cli arpl push push (bad) movsb roll and sbb lret add (bad) loope mov sub jmp sbb jnp mov sub and call dec stc out xor jmp adc ljmp not lret push cmp mov fsubrl xchg push cmp jmp pop pushf xchg push mov (bad) xor xchg lds icebp ror fistl lahf mov lea mov adc xor xchg sahf xchg out mov (bad) fs xor lds subb ds pushf sub and add xor movsb popf sub xchg jecxz pop pop ja add add xchg inc pushl or fdivrl into cld cld (bad) mov ret dec lret fldt imul cs je mov in inc xor jp dec leave daa mov test loop lds rcr xlat aas test jl loopne sbb push out xor lods inc movsb push decb add cmpsb mov aad mov fsubp push imul sbb ret sbb cmp mov sub std fldenv out sub popa fs test fsubrs cltd jnp icebp and cltd fs fsubl ret push out stos rorb push jge mov add popa pop rorb xchg out jne lea xor mov fbstp movsl jl gs out repnz out cmp leave pop ljmp idiv push mov and mov adc repnz or cs mov movsl xlat in out data16 cwtl add fdivl adc push arpl mov jno sub sub xlat mov sbb sub fist (bad) test ss mov in inc pop mov loop aas xchg mov inc mov ds mov pop mov cmp mov rcll cmc mov bound enter sub sub stos xor out aam pop adc sbb inc mov mov jmp mov or inc (bad) and cwtl (bad) mov mov hlt test mov lds sarl xor pushf push pusha pop inc mov loop sbb sbb jecxz std cwtl mov fistl push adc push leave or pop notb dec popf ror dec (bad) out mov or sti popa das xlat jp xchg insb jg (bad) out xor or dec xchg dec (bad) sti dec int3 jmp lahf lcall xchg (bad) and ljmp daa aad mov loop subb sbb fisub push jl faddp imul xchg xchg stos dec mov jnp cmp rcr repnz and lods dec test in push mov aas bound (bad) mov add xchg cmc mov repz jmp (bad) into mov and inc jg push lcall mov dec lea outsb mov ja cmp push add cli std inc mov push (bad) dec popf mov popf pop out jmp mov ror push ss (bad) xor cmpsb pop push sub pop out mov mov stc je or inc icebp es mov mov bnd test lods outsl and in sub adc xor cmp mov lods fadd and (bad) test jecxz lahf daa jns inc mov and mov rcll icebp cmc and cwtl fisttp lcall testb leave (bad) ja adc mov cli sti mov test xor cmpsb imul inc inc jno jecxz and pop push cmp xchg fnstsw xchg jmp adc inc sub jg add xchg push ljmp sub stc push jae and negb sub xchg ss leave add mov out push inc test shrb mov xchg fcoms sub in or mov adc or in lods push cmc xor frstor sub lods xor lcall jns loop sbb bound mov push sub pop and xor and pop dec dec pop addr16 es or xchg jnp mov inc jle sub inc dec mov test inc xlat xchg scas mov mov and add dec imul xchg mov idivl mov data16 lock std int3 sub add mov jae subl add dec data16 test stos cwtl mov stos push inc inc xchg fnsave pop or pop mov lods pop lds mov xor fnsave ret cmp leave out sub cld adc jbe dec mov xor sti sbb or gs (bad) jle rolb mov leave cmp fiadd mov and fcoml cmp mov xchg sar mov push addr16 stos pop cmp ljmp xchg pop xchg call jno sub loopne mov in in aas (bad) mov lds xor jle lret ffreep cmp jne (bad) lret imul pop sub test das ret push cmp cmp (bad) rorl jp ss cwtl add xchg stos nop dec nop rcrl xchg inc pop adc ljmp mov in push add sub ljmp loope leave xor and scas test mov (bad) and mov pop lea outsb mov int3 pushf mov sub lret fs pop out pop out out cmp add outsb divb xchg jbe push push pop mov sub js mov push dec add cmpsl push lahf xor sub clc mov add mov sbb lret push jnp push mov mov cmp sub push xchg repnz cmp xchg outsb ret rorb icebp xchg mov out movsl fsubrs (bad) xor mov iret clc pop mov pop mov mov jmp fdivp fwait popa xchg leave (bad) fisttpll adc mov imul or jns pop pop jmp mov push push dec lahf aad imul cld mov add xor out push out scas pop in ss mov mulb xor and or das or aas mov push divl mov scas adc mov hlt lret imul das and fldt sarl mov test popa das out (bad) dec push cli int cmp xchg enter repnz int3 ret repz gs sub jne imul dec cli (bad) testb mov call lock pop ret clc or mov pop (bad) adc call jecxz pop and scas les and daa fistpl mov mov imul (bad) ja and mov cmpsl (bad) dec jo out popf and out lock ljmp mov repnz ljmp add inc or xchg lods xor and mov adc psubd mov jmp mov add xchg aad mov rorb mov std jno (bad) adc out shlb repz xchg fs gs das push adc sub fildll xor dec or cmc vmovntps inc je (bad) stc inc xchg xor inc into loopne mov inc push dec inc jo das and je lret in xchg jge mov cmc ljmp fstl cltd fsubrs test mov or subl xor pop pushf sbb call jnp and mov push inc xor or aad popf xchg sub push or leave cmp pop icebp test mov std or lods pop mov jecxz das into incb mov or push mov pop adc fisubr jle pop xchg dec stos (bad) mov jnp adc jbe inc das out in xchg or inc pop fdiv or sbb jnp sub popa pop jnp cmc (bad) out dec (bad) imul push jb xchg pop or andl sahf negb pushf les mov dec jmp and mov in es xchg (bad) or add mov faddl lcall ljmp idivb add sub mov in inc mov sahf pop mov daa rcrb leave pop push sti lds xor dec shr pop les mov cs in sti pushf xchg sarl xchg shrl cwtl mov mov cltd (bad) ljmp xchg lret scas mov xor fs outsl jne mov shrl push xchg sbb mov js pop jmp add repz push inc ret and mov out das add cwtl ret mov daa sub fucomi popa cs jo sub imul mov fwait popf int3 jmp push out dec mov (bad) pop gs movsl idivb fwait adc out je movsl fwait imul pop xchg call and xor ljmp push mov cmpsb gs ret sub inc daa out sahf pop jb out jge and mov mov jmp xor (bad) mov pop leave or fldcw mov (bad) pushl mov push dec push mov xchg sbb push dec (bad) aam clc ds call sub jo mov mov push mov sbb divb mov sub mov and mov sub cmpsl stc icebp lret or stc pop xchg iret stos addr16 (bad) stc orl pop jecxz daa pop stc inc mov negb out pushl cmpsl sbb aam (bad) ss push inc (bad) test pop lret inc push dec add mov dec push ficoml adc push fcompl jg out std sbb or xchg mulw jmp std ficom fnclex pop sbb dec pop out popa scas into sub mov mov in dec popf das jne lret lret popf scas jo jp mov sub mov pushf lods mov xor out int push cmp jl push sub lahf jae aas dec or (bad) xor into cld lock negl mov rep mov popf push and out rorb sti repnz lcall lret jmp add cltd pop add popa aas mov jp sbb fcoml imul cmp test out mov inc mov xor icebp clc out cltd fistpl test sub ja dec ret mov mov xchg imul das and inc and pop test jno inc add pop jl (bad) (bad) out mov push pop xor or mov xlat and outsb cld adc mov (bad) dec pop mov inc xchg mov add cltd adc cmp icebp jge test loope cmp leave test out out sub aas stos fs inc jno iret (bad) mov leave (bad) aaa push sub rorb aaa sub and jmp cmpsb mov lret icebp roll sub xchg pop test mov push mov dec out (bad) clc mov push xchg mov stos cmpsb loopne or shlb or out mov pop add idivl stos sub out inc dec add sarl jbe fs int3 jmp pop xor or (bad) push lret insb popf xchg icebp movsl pop int3 jp aam adc and lret push (bad) imul out push cmp and mov push pop mov lods fimull dec adc (bad) lock mov or and sub xlat lds fmul mov add sahf add mov gs mov into aad pop lock adc bound pop sti in mov and psubw mov into mov mov xor inc push inc sub xor sub jecxz sub movsbl (bad) add in cmp push ljmp (bad) loop xchg enter lock pop ds cmpsb sbbl sub cwtl dec sub sbb cmc or aam push fist mov clc orl or jb dec mulb das test mov add loopne je push sub pop xor test stos test (bad) mov ljmp into dec ret sbb mov lcall pop jmp sub frstor jne pusha push bound gs stos imul xor inc pop add add int jecxz mov jns dec xlat jno xchg cmp mov (bad) out scas lret push lret jle and pop inc rep daa sbb fidiv jecxz add std jae adc mov cmp fnstcw mov imul adcb xlat sti scas mov imul mov push ret or call xor (bad) jns pop in pop daa rcrb add mov sub sub loop dec das fstps add iret push pushf jecxz test psubsb and mov sti je mov ret stos fs mov pop pop adc xor or stc rorl das adc mov fs repz xor sub mov cmp mov mov es and jmp loop cmp mov mov scas mov in and sub jmp push sahf xchg inc cs xchg push mov and or sub dec jmp lds cld fsubrs mov (bad) or and subb pop scas sub das mov mov inc dec mov or push push out push aaa mov mov loop ja sbb xchg jns dec sbb mov shl dec sbb (bad) mov mov and bnd lahf adc scas dec ljmp sub xor leave mov test adc sub pushf xchg pop mov in xor mov add mov add pop jecxz dec mov popf pop (bad) inc out sub ss les stos sub xacquire and pop es xlat (bad) insl lods clc jmp xor mov mov into mov (bad) xchg ljmp pop gs or test xlat mov (bad) out sub sbb push cmp push adc dec sub sti xor mov push test jecxz or jb pop inc addr16 mov xor dec (bad) idivb test pop adc pop fisubl rcrl lcall or fistl pop dec icebp pop rcr dec out or stc sub call jmp dec gs int3 mov dec cmp sti dec mov sbb das sub dec xor testl mov gs and addr16 sbb dec (bad) pop pop cli sub out mov sahf in and sti xlat or add jne iret mov dec rcrb mov fiaddl push (bad) loop ret cmc xor repnz lret mov push imul (bad) xchg out ds popf sbb cmc inc xor clc or xor out je (bad) fdivs add cld addr16 loop sub notl add pop or mov adc cmp out lods mov std and popf insb fisttpll cmp sub push sub clc imul add sub sub inc cmpsl mov data16 js dec into cld int or sub jae into inc mov ficoml inc xchg adc jg adc cmpsl or std push out mov sub into cmp bndstx sub inc ret xor and push das jl and mov mov pop dec leave (bad) push adc pop sub scas xor add push dec mov dec adc addb dec mov enter (bad) cli fidivr loope fsts add nop add ljmp sub push and pushf mov fdivp iret jg imulb sti push and sbb adcl mov sub jle xchg mov push or mov push lahf aam and into add jae fstps out mov shl push pop (bad) lret dec lods lods dec aaa bound mov jmp fnstenv enter repz xchg sahf push stc call mov cmpsl jae cmpsb add mov cmc ljmp fnstsw mov push mov jmp mov stos mov cwtl dec andl icebp ja ret add sub cmp add and sub ljmp sub mov scas (bad) cltd inc cli ficom xor mov lock adc je xchg popf pop and lret mov pcmpgtw mov in cmc jnp das dec mov xor add test aaa mov andb pop pop es dec push and mov pop into jno xor gs push cld xor and mov xchg lahf testb in and (bad) sub push push xchg inc or pop out or mov sub adc pushf es sbb or (bad) mov mov scas je test daa (bad) jne pop dec sub clc pop inc test and sub and lock (bad) jecxz (bad) icebp xlat fldcw clc sahf leave xchg loope dec push nop mov lahf js sub sbb ja xchg pop rep sub adc lret xor (bad) gs imul (bad) xor bound and sahf mov dec add xor or ja incl ja (bad) mov push test mov idiv dec push out xor dec mov pushf and mov (bad) mov cmpsb adc cwtl cmpsb xchg inc enter ret cmc fcomi and or jne push push push pop and lahf pop sub (bad) lret mov sub jmp cmpsl ficoml add and jl or cmp and or ss inc and inc cmc sub out jle pop das mov cmp sarb daa gs movsb data16 lcall pop out fdivs fidivl cli aad (bad) loopne incl xlat movsb push mov mov dec les popa and fisubr sub test icebp mov xchg adc lock add xor push push decl xchg add pop es cmp movsl negl ret inc lock test jo mov sub int pop sub adc sti test scas fnsave ror or movsb ret xor sub adcb push push xor cld add jecxz jno lret fist or and lods imul imul (bad) repz push or jno idivl in das fstps and fstl dec jmp fadd mov mov or fincstp imul push (bad) sahf inc and jge addl mov xchg stos je stos into je jecxz das cmp lods fsub hlt mov mov xchg mov call lret xor and pop dec imul rcll pop into add sub vpminsw add outsb adc pop shlb lret call imul lahf flds dec sti lret orb dec and lds inc bnd sahf pop mov out icebp adc fdiv mov ljmp and jg add mov adc or fs xor cld in or pop inc (bad) push jmp jb pop test aas test sti jecxz pop test pusha fimull mov (bad) mov andl icebp movsl inc clc (bad) aaa lret pop scas (bad) loopne fstps pop pop mov stc std gs add xor sti mov and das fcomp lods lds in fcomps cld xchg fs (bad) aam hlt xor mov jns xchg inc lods outsl adc mov dec fs mov (bad) mul lea arpl cli and aaa mov inc xor or and xor pop mov lods lcall jg or (bad) push add xor pop (bad) cmpsb push sub (bad) fadd or out add sub xor push ficomp imul dec loope mov dec and stos loop xchg push pop and lods or in int3 ja add ds into dec lret mov mov pushf sti lret lcall jb,pn sub inc or stos cwtl sbb pop out dec add mov cmp fmuls xor (bad) mov lahf (bad) cld sub cli fisttp idiv gs pop lret faddp in xor scas mov cmp jmp test sub lds stc push enter negl imull mov add mov scas adc xor mov (bad) mov scas mov xchg in sub and mov mov add es movsb pop xor mov jle lret fadds lcall mov xor movsb and scas imull int3 mov test dec sub jle,pn fnstenv lahf movsb daa or pop daa pushl hlt and inc sub sub xchg mov test mov adc mov test into fucomp sarl inc jmp sbb dec ss add mov pop sub mov dec and popf cmpsb (bad) push jge jecxz rclb movsl and mov or loopne add mov sti repz mov mov adcl mov mov (bad) hlt jae lock dec rep mov pop sti add xor sub mov leave lcall data16 inc adc stc shlb inc rorl out cmovne jmp dec js xchg push and add in push test dec push mov sub cmp je jge in dec cld dec jb into pushf mov ret xchg loop pop jecxz or js mov iret adc xchg nop in into mov ret adc dec frstor repz mov fbstp insb js mov inc pop out jle add arpl rol cmpsl rclb fistpl pop imulb sbb pop leave hlt xchg sub cmp sarb or add mov xchg (bad) sub xor inc mov ret cmpsl in dec fiadd adc or int3 mov pop mov fstl in xor sub xor jne mov or lods lods and insb push push lods test testb (bad) icebp bound dec ljmp out pop cwtl adc xchg and sub das loop sub in stos mov ret adc and cwtl push out add adc (bad) mov inc jecxz xchg lds jne push add es imul and push mov jmp scas and test cltd jmp push add xor out pop and jmp xchg addl add cs pop (bad) imul pop gs leave or (bad) bound mov imul sbb jle inc jmp cmp mov and mov jbe add nop test and sub pusha jnp pop pop mov stos cwtl jecxz xchg jmp clc sub in ret mov inc cli sub ds cmpsl rcr inc or roll jecxz or add cmc mov jl pop mov push and or repz xor out cli mov jge push lahf nop push (bad) mov mov (bad) cmpsb sub stc sub xor mov add cli enter pop fnstcw sub pop and xor jl es rolb jmp sub rorb loop mov inc mull mov add popf pop sbb daa push outsl adc popf std cmp pop jb mov cli sahf xor push push aaa (bad) sub cmp incb ret jns inc jmp loope push daa fcoms stc mov ret subl push dec aad mov (bad) repz fs or push sub daa sub lock popf call xchg adc test lds (bad) and mov lret fwait inc call cmp out jno xchg or adc test and aaa sub or cs and pop stos ja in stos cmp mov mov or add sbb cmp push (bad) cmp cmp xor cmc sbb xchg jnp cmp mov incl sub mov cld rolb sbb mov std into mov inc inc mov add mov mov sbb xchg sbb and lods pop dec popa fs es push cmp mov stc xor xor mov sub xchg rcll fldcw cmpsl cwtl imul mov push push lret sbb mov std jg enter jl pop cwtl fs mov hlt mov (bad) fldenv popf repz dec scas test stos lret fistpl dec imul stos sub lods pusha or dec mov add sbb loopne movsl xor add aad and or dec mov adc add aad mov inc and mov in testl bound arpl xor cs push fiaddl and add pop push or xchg jno dec jl and (bad) iret jmp cmc xchg daa pop fsts test loopne loope dec push daa cmpsb xor cwtl add fnstenv mov ljmp xchg cld jo outsb mov cmp mov out lahf (bad) in mov icebp fstps gs pop ret cltd rcr pop adc ljmp mov loope pop mov pop sbb add cmp insb and push xchg inc out mov cmc in movsl or dec jae jmp push mov repz gs mov or push pop jae cmpsl jne or imul (bad) mov lret cmc mov popf int3 mov insl and in out cmpsl outsl dec iret pop loop xchg adc fstl mov dec jmp sbb jae stos stos mov or lret and jne or mov sub mov leave pop imul jge out or push cmp mov jnp dec mov add and or int popa or mov sti pushl ljmp xchg jnp fs ret inc sbb (bad) je dec test add aaa test sarl sub inc fldenv mov jns fisttp mov sub or jmp sub xor popf xchg imul mov adc (bad) repz dec movsb adc ror cmp (bad) or scas cwtl sub sarl xchg cwtl or inc pop pop movl mov jb mov out sbb cmp push aas xchg cmpsl cmpsl aam sub adc (bad) lret (bad) ja dec mov movsl pop movsl adc cwtl push mov fs loop shrb cmpsb shlb jo add mov xchg pop lock sbbb int3 leave lret pop inc sub sbb leave pop call inc pop mov pop call mov lret xchg xor fstpl lds jno add sub lds mulb dec aas mov inc rolb mov mov inc pop pop jmp mov or (bad) or add stc pop daa (bad) xchg jmp (bad) mov in xchg sbb jecxz jae and mov push lock sti daa xor xor (bad) repnz mov addb xor leave loope rcll pop test out aam push mov test mov sub test mov xor clc cmp jle cmc sbb addr16 imul inc dec jbe stc popf cmpsb or and mov repz repz aas mov and add shrb dec loop push fimull xor lret and sub xor sub mov ljmp add in dec and out aad jmp xchg jle and out mov and dec stc mov xchg arpl mov ljmp loop mov call mov jmp xor fstpt push xchg mov xchg jne leave rolb cmp jnp pushf xchg lahf push cmp push push out pop lahf push lret enter pop pop mov xchg adc mov sbb nop xor jb or sahf and jmp idiv inc push scas and inc pop push jb and or xchg fbstp leave sub arpl das neg dec mov sub shr out ljmp or push mov outsl jns jle sub (bad) fstps das xchg das (bad) repnz lahf in fcmovne movsl fiadd push xor inc xor push hlt aad dec mov loop lds (bad) out mov das (bad) sbb xchg hlt xchg and mov inc movsl roll dec push push insb push sub and outsl stc adc mul outsl movsl bound ljmp test enter les roll dec push and xchg scas or call imul into xchg mov iret sub das jg stos mov rcl dec cmp das inc sti gs jnp fisubr call imul cs rcrl movsl fbld js icebp sub dec notb iret and push or lahf cmp lods loope jno bound leave pop xchg outsb add out add push pop lea xchg ficoml jmp loopne sbb packsswb fstps repz sbb sti sub in xchg mov jle lret jge test mov xlat add lea push mov pop or and sbb pop xlat std lods (bad) mov push and aad daa fcomps add call push and mov popf fs dec aaa loopne fistl xchg mov pop xchg xchg dec call pop pushf cmp xor aaa dec jmp xchg mov push icebp mov scas xor shlb fildll int cmp movsb jmp data16 dec adc dec dec lcall aad ljmp push cmp push iret mov pop mov mov fmulp mov clc jmp add push cmpsb scas mov imul iret dec enter scas xor ja jmp mov mov add jmp lret jecxz mov push sub mov push inc xchg (bad) andl mov bound iret add mov shr or stc jl fsubrs test (bad) cli cwtl sub mov in lock or ds cmp inc loop push mov icebp and inc sub or pop ret jne dec lds mov xor aaa xor out sub cmp dec push and std movsb (bad) enter (bad) mov push mov and add or or (bad) xor inc (bad) cmp xchg jg movsl inc js out push add cmpsl hlt mov mov jge ret in int3 dec lgs xor neg adc cs std cmp lcall push and adc out push mov jmp adc mov xchg loopne fxch pop out (bad) xchg jp pop cmpb push lahf aaa xchg lret xchg stos movsb sarb adc rcl stos lret pop repz sub pop inc dec lret xchg sub inc and daa mov mov fstpl add xlat push inc test call (bad) arpl das fcompl jo mov leave mov mov (bad) pop outsl lret idiv xchg xchg mov (bad) test into call (bad) cwtl xchg notl fwait int ret std sub (bad) cwtl pop scas adc and lds mov loop test cmp js adc enter jmp jns out outsl xor fdivrs xchg xchg push testl cli icebp fisttpll (bad) xor xchg (bad) out mov xchg scas cmc push das mov out je scas jne mov sub repz loop push cli and imul cwtl movsl push sbb icebp jmp cli movsl dec jbe jbe lds icebp cmp je (bad) xor outsl imul (bad) jmp cmp sub das and xor adc sahf xchg cmp xchg jbe aam addr16 (bad) repz cltd mov iret sti xlat push in mov sbb xchg ljmp addr16 pop (bad) mov cmp xchg fsubrl sub inc sub scas stc mov jnp stos call idivl test add mov popf xchg popf inc std xchg sub fiadd (bad) adc repz pushf dec push dec cli mov dec (bad) dec mov jge cmpsb jbe popa xlat sti cmp out mov aam xlat sbb cltd test inc dec sub cmp dec mov and js hlt or add cmc into xchg sub mov pop mov call pop clc nop daa ljmp lods pop jge mov adc (bad) notl icebp (bad) scas jbe push or and iret mov push mov (bad) mov mov cmp add ret mov adc lods inc xchg test cli jg inc ss inc pop xchg adc pop adc xchg jg cmpsl lret movsl mov dec push xor int3 fistpl adc push and std cltd jns bound ja inc push pop stc dec mov lret push sbb cmp fldt icebp push dec xchg ror mov movsl xchg mov lea out xchg mov push mov adc and loop jge xchg and sub xor jnp mov push pop mov mov clc push mov lcall sub pop lods or sbb jl jns insl cmp dec jmp or xchg movb xchg push pop in pop rorb outsb (bad) sub lock mov loope iret ljmp push fs pop and mov jb cmp adc add mov mov push dec jecxz iret mov mov push mov rcrl aad in mov cmp adc mov adc pop xor clc and pop adc sbb push cmpsl push test sub sbb xchg imul pop rcll in or pop xchg ljmp jp adc in out in xlat adcb in psrlq adc pushl push pop mov leave iret jne fsubs (bad) dec mov mov negl imul std mov iret cs cld sti and inc es sbb mov data16 xchg push lock push shrb mov jmp stos sub mov movsl mov repz add adc sti or mov sub pop imul mov bound mov lahf xchg rcll dec (bad) xor je scas test xchg (bad) cmp ds mov iret mov mov lret (bad) adc push xchg (bad) mov lcall cmpsl ret inc aad iret jg xlat xchg ret mov inc mov pop xchg iret int3 mov std jge shr loop lcall or sub loop xlat jns pop jnp or or sbb cmp mov shrb xor jmp adc dec cs or or gs test dec push xchg sub sub shlb push (bad) scas xor and add jnp es test mov pushf fidivr rcll rcl pop and add ljmp add dec mov or repz dec xor fmuls add out daa loope jnp in and inc (bad) pop and xor scas cld fcom lea fstl subl dec (bad) cmc mov mov (bad) out fcomps mov xlat jb shrl add cmp add or (bad) popa pop outsl mov pop lods setae loop sar inc and add dec sbb loopne ss (bad) lret bnd cmp int xchg cld push dec cld das hlt lods icebp mov push call dec (bad) mov sub dec not inc xor or jb mov mov inc xor pop jns xchg ljmp sub out dec je cli mov add test xor push cmp sbb pop push out (bad) out push hlt lods fucomi stos inc (bad) stc xchg popa xor leave (bad) xor jmp stos jns sub sub inc dec xor mov sub dec (bad) dec pop cmpsl sub and dec cmp bound leave pop icebp dec mov scas popa lock mov leave mov (bad) adc das ss cmp bound cmc inc scas inc adc xchg jne mov daa push push ret sahf fs mov pushf xchg xor dec out xchg jle pop cli or clc push call lahf push sub mov (bad) iret sti xor dec loope xor shrl ljmp (bad) fnstsw add xorps test xorps call aaa sub cmpsb xchg outsb and stos ficom push test test xor pusha sbb daa jbe or rorl sbb dec scas lret repz out adc mov call call in add lret or ja hlt mov (bad) cmp add add inc mov movsl aad mov cmp and or jmp test aaa lds xor mov std pop rolb pop out cmp push xchg lcall pop cmc and je in lods and dec loop out (bad) idivb mov bound sub (bad) mov jo test xor jmp dec and cmp mov mov sub in xchg xchg xchg mov rorb jmp fistp mov imul movsl mov rorl es movsl jno mov leave into repz loop std int3 pop popf xlat mov jle imul cmp xchg sbb xor popf jl sti cmp mov pop add rcr jp jecxz sub repz lret movzbl mov cld dec leave mov ljmp into dec mov inc in std xor sbb test and out popf ret cli divl push repnz js mov pop mov mov dec xor es mov push lods daa xchg pop cmp pop sub or bound mov mov outsb movsl rolb mov in (bad) cmp stos mov pop xchg fs stos mov pop aad test mov jne mov pop jl gs dec (bad) xlat jns imul sbb mov sub das xor lods jne scas sub xor test cmc (bad) out (bad) lahf mov or xchg mov stc stos outsl mov leave test notb into cmp push lahf in and pop xchg test xchg call adc cwtl sbb (bad) mov (bad) scas sub jmp jno imul xor or or fimull (bad) sub mov sub xchg daa mov notl inc (bad) bnd aad mov pop jecxz ljmp loop jl pop (bad) das stos cmp add jo xchg mov or jl mov dec bound or fisttp (bad) pop or shrl sub push xchg aas in pusha cmpsl (bad) pusha adc faddp pop cmpl out int add and mov xor into call stos mov shr xor sarl jmp pop mov (bad) adc decb or push cld pop repnz in cld xchg scas push imulb sub mov dec mov daa (bad) (bad) adc out mov dec les mov add sahf icebp adc jmp xor or fbstp push sub sbb jge sar or sub fs gs mov pop cld shr dec ss (bad) frstor aas adc mov and sbb popf push inc pop mov add add mov mov ret pop inc xchg xchg xor cld fs adc mov jecxz inc mov push imul jb incl jnp add ljmp push insl mov (bad) dec ljmp sub dec stos mov mov cmpsb jecxz ljmp ret cmp or stc das jne mov jl stc jle jle sub push dec out cli mov cmpsb insb mov pop cmp xor dec push xchg dec pop or and push in or cli paddw sub jp xor ret add movsl icebp int3 imul push ds fisttp fnop add sbb dec fwait mov pop (bad) out loopne jl inc mov adcb sub sub xchg add and fld lds ss add and loope lahf jecxz das pop arpl cmp repz cltd outsl xor leave mov mov mov xor or dec mov xchg cmp or mov jmp ret add sub in leave jp mov movsb pop or aad jle jge push cmp mov leave (bad) mov clc insb aad ret pushf dec bound fimul lock aam ret push out jo xor ret push xchg loop xlat lret jmp or int3 jb add cmp xor push xchg push mov xorl ds mov mov adcl out cmpsb push cmp pop loope iret out cwtl aas xchg jle (bad) iret and shll jmp pop icebp push insb imul mov test pop shrb add mov icebp jmp pop xchg mov xchg adc add mov push xor mov xor mov gs cmp outsb xchg mov ficompl jnp jle je sub into push xchg sbb mov inc jnp pop inc dec sahf and int cmp mov fisttp fbstp dec loop jae scas jno ds mov repz jo push enter jmp aas pop pop add popa cmp mov into sub dec popf cmp out mov leave xor xchg hlt push lahf jmp inc sub pop lcall mov repnz cs adc (bad) push push mov stos mov inc lods ds stc xor mov repnz lcall ss mov roll mov xor outsb je ljmp jecxz repz iret or adc mov ljmp sub not clc arpl in cmpsb sub bnd sub mov pop loop mov mov enter sub or add pop xlat mov (bad) xor pop in xchg test fist dec cwtl mov in cwtl and out add push jg mov xchg cmp sub testl into push dec inc xor fcom or aas xor in sbb leave jne dec popf jge mov xadd nop sub push out daa add sbb in sub mov inc les mov gs stos sub mov sahf mov hlt or dec stos lret ret (bad) leave js daa xor sbb dec (bad) adc ficoml mov daa pop adc push sbb ret or test popa std (bad) pusha xor adc popf shr jg xor fist mov ret push ljmp (bad) fs int ja dec (bad) iret cmp popa dec pushf or or cli dec in and (bad) mov and mov mov fldenv loope fisttp sbb pop cmpsb lea adc (bad) and (bad) lock mov and jg lock cld and cmc bound icebp jg jbe cmp aaa mov (bad) ljmp pop push movsl jmp (bad) das ljmp ret push dec add jns scas pop jp or lods xchg pusha data16 jne loopne xorps jecxz jl dec frstor xor sbb sub scas cmp xor subl add loope mov add aaa mov add fstpl jae xchg imul rdpmc aaa lret shrl cmc adc clc repz and xor sbb sub pusha repnz repz in cmpsl out addr16 out inc mov sti in xchg test fstps stos xor mov inc dec sub and and mov imul ret pop adc popf fdivp push jg or das cltd outsl jp ret subl xchg rcl les jne push (bad) mov pushf ja loope out or mov aaa jl sub ret cmp or sub out lret mov fdecstp das mov stc mov xor add mov push adc xor add and (bad) loop sbb sub test mov fs hlt cmp cs stos leave add or or (bad) fwait dec inc push and pop inc pop add push mov ret decl sub fs stc xor leave not rclb aas add mov insl lea xchg leave loop mov scas les cmp test test add mov les ljmp in lods jp fisub repnz popf jno lcall xchg cli or sti add in and sub add mov out negb add and incb push dec scas mov loop xlat int3 (bad) call mov bound adc ret jmp notb or fmull sub sub cmp mov push idivl xchg inc (bad) or and les xchg pop mov mov push or (bad) jne (bad) xor add push (bad) fsubs jmp push rorb jbe mov xlat stos xchg std repnz lret jmp (bad) aaa or cli xor (bad) xchg jge pusha or jge push pop mov cmp sbb sahf xchg notl bound mov frstor push push sub push dec mov add int3 ret pop cmp sub mov cmpsl xor shlb xlat push mov mov add and cmp mov pushf int fnop es sub (bad) dec stos sub jecxz pop cwtl lret rcr dec clc stc and sbb arpl inc sub jmp sbb and aam jecxz dec mov aam or lods stc js xor mov jmp mov (bad) mov lret xlat jmp (bad) and das stc xchg mov jl push xor mov gs sub lahf data16 outsb jo or add mov stos data16 lds fucom add data16 imul mov mov mov pop push push sbb mov mov mov pop pop movsl pop dec dec mov sub sub cwtl pop clc push dec mov in mov pop mov lret fwait pop repz scas das mov sub imul and dec (bad) int3 push xor push mov clc fbstp loopne sbb ss xchg addb and outsb jmp mov movsb out sbb xchg xor cmp ja loop push mov out jmp ret push jl loop xchg stos add jnp call dec std gs movsl jl lock jl adc loop xchg jb add in call xchg pop (bad) cmpsl jl push jg (bad) ljmp stc mov ret adc or icebp and mov sub lock pop and dec bound pop inc fstpt scas je push or xchg int3 push jp imul mov push adcb mov and (bad) cltd imul ja jge std sbb dec cld jbe (bad) in (bad) xchg pop fs scas std dec rolb in mov inc das jbe push mov lahf ljmp mov add or movsb lahf pop dec push jno xchg call adc add out lds pop inc push movsl sbb mov stos cmp inc lock dec mov xchg scas add pop xor jle sub pop fucomp (bad) add icebp push inc cmp daa out mov loop inc sub push xor lahf pop xor xlat or mov mov add dec xchg mov fstps mov xchg pop mov sub std inc stos icebp cmp shrl leave jne dec push clc push lahf repz xor xor loop ja rol ljmp (bad) imul cltd xchg icebp out sub xor push sub dec (bad) std xor (bad) mov xor push test into add (bad) sti adc jnp fiadd mov popa adc mov jp gs mov in repz and fdivl pop push xor xlat sbb shrb mov sar loopne dec xchg inc push mov push xor add test and add push cmp jle jnp and loop enter jmp clc daa lock push inc loop enter inc ret adc sar lea inc dec and repnz and stc push pop lret add ret rcrl clc jae or mov sahf mov rorl test lret cli sub sti sub push lret scas int3 mov pop mov dec jge les (bad) mov imul mov adc jle mov lcall inc int jmp into aad sbb adc dec int xor mov jae xchg sbb rolb notl loop mov sti lret adc mov sub or sub xor jmp sbb lahf lock pop orb pop sub addr16 rorl mov rcl int3 lret fld mov stos lock aas dec jmp and xor and jmp pop jmp cmpsl and xor ret fsubrl fcmovb mov cmp add xor mov fs xchg sub jmp out in out loop fidivrl imulb xchg rorb jg cmp ret fcmovne jmp les mov aas cmp (bad) pusha xlat or xor mov xchg jle in add test iret push stos cltd xlat aas fsub out imulb rcrb xchg orl data16 dec mul lock fsts out repnz jle int3 pushw movsb or xchg pop cltd xchg ja push push push jns lods jmp imul jg mov fbld cmp decb test rol sub adc scas or inc inc mov pop add mov jne ret in movsl push mov push push out popf popa mov stos mov jp xor or and jg xor and sub stos int3 mov dec or mov (bad) fnsave mov xchg aad stc dec lea and ljmp rcll (bad) into pop jg enter inc shll sub outsl add lret add mov dec mov pop das push sub mov in hlt sub iret sbb inc dec out xor add adc fdivrl pop popa inc jg mov and (bad) or mov out mov fldenv cmp jl or inc or mov ret sbb adc cld addl mov pop mov cmp pop mov imul clc or and cmpl xor test into rorb inc jmp icebp adc or cmpxchg dec or scas push pop fdivrp leave jno lods add int3 leave or add cld mov fwait cs push imulb stos cmp out pop add fldenv adc (bad) dec sub sbb rcll and mov (bad) sub sti xor dec fidiv mov test ljmp outsl imul lcall mov jae pop inc icebp stos jbe ss xchg mov mov sub mov inc mov push adc xchg imulb dec mov xor out loop into jmp or repnz jo pop jmp je mov pop inc movsl nop rcrl std int dec mov xlat xchg or aad insb iret mov pusha mov xor mov jmp sub dec stos and out or (bad) cmp shlb fyl2x ficom or mov test cmp sahf mov leave mov add xchg jbe out or cwtl xchg sub xchg (bad) insl loopne subb inc mov dec pusha pop or xor je and (bad) and mov jg xor (bad) mov lret out adcb cli adc (bad) sbb sbb dec test inc xchg cmp out ja mov ret push out call or sub cli pop scas xchg fidivrl sbb or out mov aaa or stos aaa aaa imul dec jmp pop repnz pop dec ret sbb mov repz outsl loope movsl jecxz xchg xchg fstpl addr16 icebp stos mov ret jne adc iret pop jle push insb mov lcall fs gs cwtl pmaxsw popf inc ss imul and adcl bound push enter lods mov xchg or push mov (bad) jp adc dec fs nop mov sarl sti jmp repz push sub cltd xchg push xor or xlat xchg jne fcmovne pop cmpsb xchg mov inc loop cmp xchg movsb mov bound idivl (bad) fwait and mov xchg mov jg mov ret mov xchg jecxz aas and (bad) (bad) repnz or pop pop icebp xchg xor or push mov outsb mov push mov orps movsb stos fcomps or clc pushf int iret sbb sub fnstenv lcall int cmp and test xchg movsl jg sbb mov inc ret or xor push stc and or dec movsb std fldcw scas lcall insl mov test push jp popa xchg push jmp cli iret push jns js xlat mov shrl dec jle in ljmp xlat jecxz das (bad) jae adc mov jg pop mov shll inc mov push loope in xor call xor adc mov jns and (bad) fs sahf xchg dec int3 push adc inc fbstp test pop mov (bad) aam nop dec xchg dec jecxz dec mov dec loop sti adc repnz test or fwait mov and inc test mov cld cltd leave (bad) jne ljmp xor sbb sub rol mov idivb (bad) cmc and out adc (bad) mov jg (bad) movsb lods daa dec jle and xchg jge jne sar call push cmp mov jmp leave repz (bad) into ljmp inc pop xor cmpsl jp push xchg add mov aad rcrl adc jnp mov into mov insb pop jmp lahf sub xchg std movsb or and or pop orl repnz ss sub aad sahf xchg jmp and jo xchg inc jae cs cs add xchg inc xchg dec cmp mov or ja sbb push mov cmp jo and mov scas mov decl fimul rcll xor nop jg rcrl push call bound ret jle (bad) jmp sbb scas cmp push bound ja movsb imul mov dec test (bad) cwtl jae xchg sti loop mov add pop jno gs push aaa test jmp icebp insl cmp insb lahf mov mov mov icebp outsl dec jg in sbb lea push stc fmull xor icebp jmp mov sbb fcmovb xor repz sti into xchg jae daa adc mov lods pop loopne xchg mov fcompl sub lods sbb lods lds xlat lea ljmp int add push in add imul hlt or fldl mov pop insl in out mov pop repnz hlt mov mov mov jno dec sbb pop jmp mov lret ret daa xlat out xor and dec add les divb aam inc lahf xchg push and pop jmp dec pop pop pop pop out jp adcb xor sbb sub ret leave aas mov loope repz movsl mov mov inc sbb fidivr imul cmpsb mov into sbb (bad) (bad) or adc dec dec scas mov sahf dec leave dec loop xchg cli (bad) movb mov out das jmp push out push (bad) test mov andb mov test xor jmp cltd rcrb push add and jecxz enter mov pop js movsl add mov push sbb mov sarl lds fldcw (bad) push adc xor loope inc inc nop jae aam and movsl outsb jmp mov mov adc or pop scas js pop adc adc pop bnd stos jo and addr16 jne xchg and dec pusha pop push mov es jo lods lds lods mov jecxz rcll lret sub push sbb out data16 dec adc pop (bad) mov fldenv xchg stc mov dec pop pop sbb and icebp or movsb dec xor andl lcall cltd out xlat mov sahf add or clc push stc sub sub in movsl aad scas push loop and decl xchg add fld out in test rorl mov daa out bound sarb popf push imul int3 adc adc jmp loope cmc xlat pusha dec or sub jmp sub lret adc cli mov dec sub out jecxz xchg test test mov cmc xchg adc jge xorl dec mov repnz cld mov orb repz jno jle adc xor dec sti add orb push inc xchg loop fidivr push inc loop dec sub or jae cmp leave xchg into add scas dec cld ds leave out (bad) xchg into (bad) mov mov dec sti mov pop jmp popf incb pushf scas test test and pushf inc sbb pusha das add add js pop imull mov fstpl sbb stc add jmp mov imul pop pusha and imul std fwait or daa cwtl pop jmp pop imul pop call fbld push jb leave jecxz push ja loopne scas xor (bad) cltd pop mov test mov js popf aad imul push sub test ljmp mov mov stos pop jnp jmp sub xchg pop pushf dec mov lea (bad) cli xchg xlat into or jmp cli mov mov pop add adc mov cli or adc xor xchg loop lds adc repz fs leave popa mov sub push dec (bad) or xor js xchg jns dec pop int3 xchg lock test mov testb fisttpll pop push mov mov cli lods int jmp xchg add test loope lret lock (bad) and mov psllw rclb jno sub das or sub jnp or addb add outsb fs cmc push sti push mov mov cli popf adc dec mov xchg out mov or mov jo psrlq mov pop cs fistp sbb dec movsb ljmp inc pop jnp sub mov or addr16 (bad) (bad) or mov lret inc pop adc mov js jecxz cltd loopne sub rcll sub pop sahf jno inc push decl pop (bad) cmc outsb call cmp fdivrs inc sub sbb dec rcrb ja cmc ljmp lret push xor stc dec push push cmp jge (bad) dec push scas and int3 or fildll repz cmp dec ret scas sub out mov or or jmp roll push fcmovnbe pushf or cmp xchg fsubrl scas repnz icebp sbb sub dec fmul mov and icebp repz and push jl fstl clc enter sti jl (bad) xlat rorl sbb sub lcall xor pop mov aad sub mov divl sbb (bad) stos cwtl sub push push fsubrp or xor dec push mov xor mov mov and out test cmpsb sbb and fdivl (bad) dec jge sbb xor inc leave mov bound sub add loop jno (bad) out ljmp stc int3 lret mov je fist ret and sub fs pop icebp lock data16 xor and cmp pushf dec repnz (bad) add push xchg and leave add xor xlat cli mov pop lret ds stos fmuls bound fdivrl stos and cwtl mov dec outsb je enter inc lahf fisttpl sti int shr imul xor jp sub cwtl mov imul std (bad) mov imul out leave mov in xchg (bad) imul fldcw xor or mov jecxz jnp pop dec fdivl sub outsb daa in scas loop lret data16 dec mov push push sub xchg in and and pop sti jle lret dec (bad) cld cs imull movsb pop dec and (bad) aam lock xchg and nop cmpsb sbb repnz (bad) mov xor int3 sub mov pop xchg dec repnz pop mov iret jnp mov adc mov fs jecxz repz (bad) and sbb add lret inc xor xchg (bad) call insb es adc sub scas fs scas mov dec int xlat icebp repz push jns sub cmc xor icebp jnp mov test jns lock adc pop adc mov push mov clc out xchg mov mulb push and les add fidiv add add repz cmpsl repz in mov jne cld daa xor xor imul xlat xchg inc dec loop iret call pop pop sahf gs cmc dec fldenv shrl es pop je repz inc add enter adc bound sti dec xchg cmp movb popa mov movsl push mov mov in sahf inc push xor mov cmc jecxz dec dec lret scas int3 fcomip daa roll dec bnd test push out sub pop fidiv addr16 rcll xchg fcompl fiadd push rep pop xor cltd aad int3 mov or sub cmp ja sub jnp pop movsl scas rorl cmp pushf fisubl adc dec dec ljmp mov push aam enter loop jnp xchg or mov push xor jle and jmp stos stc movsl (bad) aaa pop mov stos push mov xchg mov (bad) xor mov cmc (bad) movsl cli cwtl lods or mov les ljmp mov fisttp daa jg in mov push pop jl lock or or add ficom lds dec push mov cmp in and jmp outsl sub lock xchg mov add mov mov sub repz stos pop std or xchg jnp dec ds rsqrtps add mov out ret dec jne decb pop into dec push adc xor loope sub test jno mov sbb lret sub xlat push cmp or lahf insb or call mov dec dec fist cmp add sub inc jne jo xchg in pop out mov lods cmp jmp test and (bad) pop mov sub cmp in mov sar xchg pop cld adc cmp daa iret push jns pop outsb (bad) pop mov lcall icebp idivb ret jecxz subl fstpl mov jne pop das in das xor pop xor mov rorl sub or leave inc aad fwait cmpsl arpl sub stos or dec jo pop push mov lret (bad) pop dec jno das lret (bad) dec xor clc jbe add push cmp mov int3 mov pop sahf popf (bad) test pop in xchg into or cmpb push mov ss and pxor push into push adc sbb mov inc xchg sbb lock mov cld mov dec nop icebp push loop dec xchg mov dec (bad) mov xor pop icebp sub sahf icebp adc cmpsl pop add dec lcall sub lret bound ljmp (bad) mov cwtl rcl add popf hlt ret adc sbb decl cmpsl mov repnz stc sbb sbb mov add test mov jge hlt pop loope test les ljmp push jno dec mov xchg imul sub or and and lret sub adc repnz xchg mov cmpsl insb adc push ss lret xchg out mov sbb jle add sahf cmp push push leave sub pop (bad) push inc icebp inc or or or stos dec out mov mov sti cmp fnstenv dec adc imul adc loop pushl fimul and add fs out out mov xchg mov and scas push imul cli in int push test inc inc xor add jnp out push adc mov sbb jl push out std mov fimul sbb inc mov sub fstl pop mov int3 das add mov ja mov xor sarl mov mov mov jmp xor and sbbl xchg (bad) call push mov pop mov stos mov pop mov call xchg and in sub add iret jne ficom xchg push std mov outsb mov sbb add enter push mov push lods cmp pop dec fidivrl pop imul (bad) sti fcomps pop or ds in jg rcrl xor mov lock add cs outsb xor (bad) jbe pop clc pop leave fcomi xchg dec aam adc sti ja or xor xor mov gs dec std pop cmp dec cmp iret call outsl sub out add ret enter pop into insb arpl bound push add push cmp jmp dec nop mov out sub mov sub add (bad) xor scas cld repnz lea cmp repnz lret loopne lret mov cltd aam jnp inc ljmp xchg pop mov xor (bad) clc or mov add sbb lods sub mov sbb pop pop jle testb push adc rclb jmp (bad) out jnp mov mov scas or xchg push fisubrl cli add cwtl and cmc add or jne jnp xor sub jae mov or add inc out cmpsb mov aaa sub or decb jno xchg lret mov iret xchg (bad) js mov nop mov cmpsl dec pop (bad) cmpsl aad mov ja in lcall and in sub mov dec in dec ljmp out sub int3 mov (bad) cmp xchg xchg out push sub or pusha (bad) sub fimul sarb jno dec push out xchg popa or pop xor mov or stos xor push (bad) not dec (bad) jmp (bad) fistpll dec fimul xor pop mov das pop (bad) lret (bad) (bad) and jl (bad) jmp xor icebp and cmp mov js icebp sbb lds mov or rcrl cmp stos repz and ds aad int lds xchg sbb (bad) dec and idiv dec int3 mov xor insb xor std pushf mov test adc lret dec loop (bad) push push out sub icebp jo add mov negl les (bad) ja and pusha lds pop sub xchg push xor mov daa jb (bad) mov jb popf push or cmp xor add xchg pop mov xchg xchg icebp sti repnz cmpsl lock mov pop and pop inc pop dec aam add dec mov es je dec add mov imul dec lods push leave icebp aad inc call or (bad) fildll pop mov push cmp push dec sub js mov mov push fsts (bad) mov stc jae and xchg jmp dec lret xchg sub sbb and mov stc call loopne sub add ss loop shll and ficom test sarl mov sti (bad) fnstsw rcrl inc mov jge jo xor into sbb jns loope bound sbb inc push mov pop inc jns cmp push cmp inc and adc shll subl jg xlat lcall data16 and adc in ror rorl out data16 addb (bad) stos mov cmp jb and repz mov negb out jb jmp divb push loop (bad) mov es mov sahf out sub mov daa loope mov and fist out sub add out xchg xor pop fldcw jb sti insl daa fdivrl iret mov jnp inc repz ret mov xchg in das lock mov mov lret sbb push mov negb inc inc jnp popa sub in mov mov cs and mov aam imul out xor push add repz and push mov dec sbb sub mov (bad) xor (bad) mov dec mov das jne test ret notb xchg sbb jne ljmp cs outsl ret int adc (bad) xor sub mov loop mov adc aaa pop xchg xlat out call lds and je mov (bad) fnsave pop into out xlat divb sub hlt call imul jne and out rcl adc inc lret and in inc sub push or mov scas fstpl (bad) popf dec mov ljmp es (bad) aaa imul mov std stc cmpsb push jmp mul fucom jp nop lret mov pop xchg hlt dec ret (bad) push jmp inc sub pop out pusha es sbb icebp xchg push mov enter outsb bound (bad) cwtl push pop adc mull push xchg call inc mov cmp in xchg icebp ljmp idiv jmp mov (bad) movsb popl mov rol fxch (bad) fbstp xchg or pushf pop push mov and lahf mov (bad) mov ret add sbb sarb xor outsl call shll xor aad insb pop iret out sub imul mov sbb data16 pop mov mov fldl movsb loop shr fldln2 das mov icebp aas mov stos jae xor cmp lret mov (bad) ljmp add test das sub ljmp (bad) adc iret iret mov sbb mov push (bad) leave test rdpmc popf (bad) ss fldt push imul mov cmp jne mov dec xchg in cmp sub icebp pop hlt dec push pop adc jb mov dec dec mov stos add fsubr jge xor xor mov or or mov cli push pop int sub xor mov fcoml mov jmp in mov sub mov test out sub jle cmp dec out mov and notb jmp push repnz stc cmpsb dec out sub sbb repz xchg hlt add dec leave test jae popa xorl outsl sub outsb xor xlat and xchg add (bad) scas mov ret sub fldt das adc iret mov mov sub mov inc push add fwait dec xor adc shlb repz mov (bad) lahf mov daa adc stos loop lret arpl mov jbe fisub pop sub mov scas mov add sub mov sub (bad) hlt lret xor xor fbstp clc in pop mov in das rorl cmp sub nop push xchg data16 adc or inc mov iret xor mov jmp xchg jns aad repz movsb mov popf rolb hlt dec aam lods push mov sub xor (bad) hlt bound mov jmp and adc push pushf mov sub ljmp (bad) adc mov fsubp fisttpll loopne insb cmp jbe fs sub mul loop in stos dec out ljmp fisttpl xlat sub repz ret xlat sti lret mov aaa hlt dec fistl pop mov xlat enter xchg call movsb (bad) ss sub fmul pop cmpsb mov mov sub test push (bad) jns gs mov mov mov push cmpsb lods sub flds lret (bad) das push lds sub stc pop pop pop divb out pop cmp xor popf pop leave pop cli clc inc lock sub test mov stos fstl cmp (bad) adc jnp sub sub inc sahf and push js (bad) mov stc mov mov jmp mov mov xchg dec je or out (bad) (bad) fs test sar mov jmp and ljmp iret and push std xchg xchg xlat data16 mov mov iret bnd mov mov xor out mov add imul dec lret mov (bad) sub sub mov loopne sub cli jno leave subb pop dec test mov movl ja sub cltd popf jmp aas in rorb xor out mov xchg (bad) repz xor mov insb xchg mov pop scas sub mov gs test dec push cltd jb or imul add rcll fstpl mov or outsl pop mov js icebp xor les fist fwait inc or xor loope leave subb mov xchg fist fcoms int3 adc cmp or mov dec or das xor ficoml jecxz lret mov or das xor fisttpl and and mov aam pop mov xchg dec ret add pop cmp aad or (bad) sub das add stos test roll test xchg push xor mov repnz cmc add inc dec mov test mov data16 and lods sbb in rol iret jge div kmovd (bad) cmp add mov mov and push out cwtl adc and mov negb or rcll int3 mov adc in inc and mov push divb fstpl lret daa pop add mov loopne (bad) in mov (bad) movb push pop sti popf add jl lret pop sbb mov sub fwait mov cltd mov dec dec jnp dec (bad) cmp add scas sub xor lret xor (bad) lcall repnz sub sub repnz jle mov sbb xchg jp jg bound montmul cmpsb ret and dec stos xor fcoml mov mov xchg lock sub mov loope cmp mov leave push add dec mov sahf sub jl mov pop inc pop sbb mov notl sub roll mov lcall hlt aad out ljmp ret push xlat (bad) jmp std test repz jle inc sub and call std xchg xlat mov (bad) push loope pushf inc imul aaa out push mov outsb lods cmp add fs js ds push inc ljmp fsubrs std iret insb jmp movsb mov bound nop repz dec addr16 push loope jg test pushf mov xor mov cmpl cmp fstp adc in inc mov (bad) sbb sub in jp xchg movsl incl lcall icebp loopne out mov out inc outsb sub loope dec mov xor mov rolb loope leave aas insw daa sub fstl pop sub xchg inc mov fwait popf push mov les fnstenv cmpsl iret dec sti sub mov mov in pop loope aas inc add das icebp sbb xor sbb mov pop push mov cmpsl sub sbb repz sbb cmpsl fs sar test inc adc iret xchg enter (bad) sub sub mov fwait pop add mov stc push repnz out je les gs scas fisttpll cmp mov sub ljmp movsl int3 cmp mov add (bad) cmpsl js pop sti xlat je sarl push push xor sub je lds pop shrl shrb mov xchg and add das ret (bad) leave mov aas cmp adc cmpsl xor out push xchg cltd mov xchg xor fisub sbb push pop cwtl loop ret adc cmc xchg xchg push mov push push stc sub sub sub das jmp test repnz xchg mov arpl out add roll and in mov jle mov inc dec ja push push cli cmpsb add mov xchg daa jge das jge aam leave push lds leave lahf inc fist testl add test mov insb jle roll adc inc ret lock imul dec std adc mov loopne ljmp xor cld lods pop icebp into jg cmp popf je push sub ds xor call stos add cli sub int3 mov mov mov push pop insb loope jno les adc jno dec xor daa js jge cmp or add mov cli or out lret out sti or push adc sub mov cmp mov fistl out xchg mov and dec mov push pop scas sub les icebp test pop je fnstcw dec ret jb pop je imul gs cmpsb or sbb mov mov lret pushf cld scas fdivs inc in nop and xchg fcomp popf inc mov pop mov imul xchg cmp xor cmp xor ja pop stc dec dec jmp inc add scas sub jge and ja pop push mov daa mov pop mov pop jae mov dec (bad) cmc xor lret push sbb jne jecxz dec addr16 xorl push out sti popf add sti sub or mov icebp or inc jp in push sbb mov dec mov idivb testl call and ja divb sti (bad) idivl hlt daa ret lds out (bad) push xor add ja pop mov cmpsl dec into les push or xor add or sub repz add and movzbl mov shrb popf mov add push in or push fmul negb repnz dec pushf sbb jb dec (bad) out cltd jo out fs dec outsl addr16 test jmp je das lret inc pop call cmp cli mov leave leave inc je pop out jns in jnp rclb xchg rcr dec repnz addr16 (bad) pop pop aam gs decl mov mov jl cli mov icebp mov xor (bad) lods call pop pushf lcall into add xor icebp popf adc mov jns mov mul pop jbe push stos sbb and mov mov out mov (bad) mulb jle lret out push push dec popa mov repnz rcrb inc fcompl pop dec scas push xor add mov inc or repnz pushf and cs and popf shr pushf fist and lahf add add lock ljmp mov lds sar das pushf adc bound ss xchg pushf and pop mov jmp pushf cld ds cmp jge sub sti mov imul (bad) repnz idivl std rdtsc (bad) repnz (bad) push outsl push movb push insl mov enter xchg ljmp push pop cmp sti lret sub lahf pop cwtl call push pop adc adc gs dec repz loopne add arpl lret in daa imul gs mov dec fs push out cmp fimull cmp push fistl in mov lret fadds cmp dec dec movsl mov das sti push inc xchg imulb iret mov pop imul clc ja xchg or sbb add jge push mov scas (bad) (bad) and cmc sbb or jg repz adc mov ss aad repz pop xor shrb out testb imul sub add sarb mov arpl and repz out mov in stc xchg xchg dec mov xor fisttp ljmp out cmc fs out dec call jmp (bad) jmp or jmp mov mov and add (bad) xor (bad) adc ja imul ret xor xchg aas ret stc cmpsb cmpsl jo xchg sbb jg mov fsubs lret inc pop push dec add ja sbb icebp sti test leave pop jg ret sahf cmp daa insb or repnz or mov or mov and fisttpl mov leave mov or mov scas loope cmpsl push in sub add clc cmp pop repz sbb jnp adc scas mov pop jge cmp sub adc xchg icebp vpextrw sbb out dec or xchg lea add je dec xor shrl lock and add pop repz je pop leave and enter fsts scas ja into ja lret cmc jns and aam aas into sub mov mov mov loope mov stc jl lds sbb int3 jb xchg dec xchg add sub or fisubrl lret cmp popa mov aas push mov xlat das add mov dec not dec daa test cmp scas lret (bad) lcall outsl mov mov ljmp or inc (bad) jl jmp jbe lret in cmpsb adc jne pop add and scas jno sub cmp inc (bad) mov pop sub adc jb out adc sub ret xchg mov and add xor xor inc jg lret sarl xor sub jmp mov xchg xchg mov (bad) sub pop mov popa pop pop xor mov fcomp (bad) fwait mov mov jne inc clc iret lret add bound psubw das into pop call inc movsb sti popf sbb dec cmp add aaa imul fs jl jmp fdivs xor movsl and aas sub or (bad) hlt cwtl lret imul inc lret notl cld and in jmp jle mov xor dec mov or gs xchg mov push sub pop or sbb mov xor leave lock cmpsl sbb push xchg dec jecxz les pop xchg mov js movsl or leave fbld xchg out lret add movsb enter gs and mov out mov mov nop sbb or fimull lret xor lods jae jmp sub xor bound fmul xchg push and xchg xor sti pop cli rcl cli out jle ret jae xor sub add setnp adc (bad) jae shrl adc cmp push mov xor int3 js fwait sti dec daa out (bad) popf pop stos je jmp bound mov sub xchg cmc sbb lret rcrb popf push fdivrl ljmp sbb iret sub aaa jecxz enter push inc dec test xor push push into sub mov xor ret dec cltd adc inc sbb and xor fucom sub xor out push data16 stc mov xor mov cmp xchg or es ja pop or ret dec push push mov fcoms adc dec mov or cmp (bad) sub divl sahf div movsb mov lahf xchg rsqrtps push dec shlb mov fsts call outsl lahf test add les fiadd dec iret in out or sub xlat inc jg xor mov or and xor add xor mov fbld xchg clc add adc lock inc dec and dec lea imul add and jo push dec std dec xchg and popf adc adc adc fidivr scas jns jae fs or xor push lock mov sti rolb pop mov dec mov mov add jecxz mov jecxz cmp dec test shll jo das cwtl jns inc push sub popf mov std mov test scas lret cmp pop ret jbe adc mov mov mov add push mov mov das mov imulb push outsb cwtl xor adc sub mov mov movsl lock ja rorb inc call adc sti mov xor add lret adc mov (bad) sti bound ret lcall inc ret leave jg into popa es and sub mov sahf enter adc or xor idiv jmp test jmp fnop test lea jne dec nop inc js movsl mov loop pop mov pop (bad) mov test add outsb (bad) ja inc repz repnz xchg je sub xor xchg push mov shll dec in add fnstenv cmp outsl test add mov pop call fisubrl stos hlt aam stos in xor mov fcomip ds push pop xchg inc and sub mov adc mov cmp cltd (bad) js adc push mov jmp sbb fbstp sub add loope jg sbb aam cs lret push or (bad) xor inc insl stc cmp add pop adc jmp and mov fldcw sub fwait dec adc out test sbb cmp js sahf xchg xchg loope imul add dec rorb push andb mov xor xchg pop inc inc adc xchg call outsb sub into inc sbb les scas (bad) rcll or add in pop add popf jnp daa pop pushf (bad) cs or rcrb (bad) add jno mov rolb mov decb jno cmp lret mov push fsubs cli fbstp mov mov jmp cmp les repz lcall cltd lds ret mov or dec sub push shrl sarl fs ds and dec add es cmp jne xchg mov adc lret inc jge out add mov or out pop inc aad push push mov mov (bad) lret inc adc jge leave aas into xchg mov cmp imul xchg scas adc clc dec jb xor cmp push cmc sub icebp outsb test mov adc loop pop (bad) lret popf sbb imul xor add xor (bad) adc mov aaa fstps add jle out ds (bad) out pushf inc pop jno sbb mov add std push cmp test icebp loope cs icebp (bad) pop pop mov add mov push mov dec jle xchg lock xchg adc xchg roll scas mov xchg jne jle jmp mov int push aaa ljmp dec sbb cld ret ret outsl out pop jmp test push or jg insb cmp repnz cmp mov jg jbe hlt ds lock out ffree (bad) pop or add jne mov ror movsb popa repz jl mov jecxz adc lahf in daa dec mov push mov sub or loope mov dec push repz inc mov add jmp ljmp lahf rorl inc pop pop push lea subl push xor (bad) (bad) fadd fild test (bad) je repnz pop lret add jb fwait fs mov xchg popa pop cwtl or popf mov add fisttp (bad) xchg mov mov loopne jno cmpsb adc sub ret dec or insb mov sub add sbb mov push and into cld das mov pushf stc sbb jge mov xchg daa pop mov sub fdivs mov fucomp mov lret jbe lds pop aad cmp (bad) leave sbb mov inc pop lea sti adc add iret pop add xlat mov rol mov adc ret aaa xchg jg sub inc imul in pop pushl jns push adc data16 push test xor jg xor mov mov jg sbb negb in daa ja jbe lds (bad) jecxz and rorl roll (bad) leave xor dec popf jp xor fiadd repnz xlat into cmc sbb cmp add xor mov pop into lods lcall mov dec add (bad) mov or push loope imul lcall sti pop (bad) ss mov pop int jle cmp sarl movsl fnstsw dec jl xchg stos popa pop (bad) xor lods cmp into xor call aas out sub fimul mov les dec add jo mov push ret jns test add ljmp popf jle imul daa or (bad) xor popf in cmp (bad) pop xor in (bad) es or jecxz lret push dec ret loop inc xor dec fisubr (bad) jmp mov fstl mov ljmp outsl adc into xchg in mov les notb sbb mov xchg hlt cmp push dec repz adc cld inc fsubrl cmp out mov mov sub test sub das xor fsubrl lret inc jmp cltd cli xor lret or cli cld mov mov xchg push or and cmp leave xlat fild mov cmp lock cmp pop push das xchg dec mov scas fnstenv or sbb or aad ljmp mov xor mov mov dec test adc ret stc sub aaa xchg mov (bad) testl stos jne pop sub popf fstl and inc mov ljmp mov inc imul mov adc cmp (bad) jg sub inc cmc or add jo in lock lahf data16 sti popa out iret sbb sub mov iret mov jle (bad) jbe ds dec les cmp nop repz (bad) (bad) das mov fist ret into aam imul test and repz cli in adc or jmp xchg lret daa fidivr rclb jb mov pop mov cmp add lds sti and push fldl dec repnz test cmp adc and cmpsl mov push xor lds add xchg call adc xchg sbb jl jns ret test pop xchg inc js mov jbe inc shll pop push xor mov jmp xor aas jp push repz or cmc int3 (bad) push mov outsb jecxz inc push repnz std in out jg cwtl mov call repnz add jo or (bad) es sub xor adc mov in push ficom or and jb xchg fimul pop cltd mov and sbb test into adc js dec push lret pop (bad) int3 icebp into mov (bad) push jae movzwl in mov mov enter mov std mov in negb pop push loop ja (bad) mov add mov ljmp xor mov sub pop shlb and pop push xor idivb mov inc add pop adc les push inc into call pushl gs or stc shlb popf or fbld sub dec stc inc sub das xchg aad push ja mov subl and xlat fucom clc dec and es bound (bad) cld inc imul enter push xchg fiadd gs out loop xchg cli repnz nop ljmp clc pusha rolb jge imul xor movsb mov sub push cmp int sti add inc fldt push or pop addr16 sub and jns scas mov stc rorl out xor bnd popa clc and xor add leave sarb (bad) xchg test cmp and sub hlt push pop adc call leave out xchg jge shl adc lea js pop movb insb fidivrl add pop mov ret jne dec std lds int3 repnz lock mov and fcoms sub sub enter je,pn out adc push jg add push adc cmp xor or jg popa fldcw stos xor movsl shrb sub add cmp imul xor sub js popf xchg xchg jle je adc push xor in sti jb xor repz xchg aaa sti pushf lret pop push cmp test fnstsw xchg pop je push push gs mov mov scas out xlat addr16 push xor leave fistpll mov sarb aad ret movsb rcrb mov mov insl sub mov divl sbb repnz fisubl push or cmc insb loop imul mov xor stos jb dec cmp pop out xor mov push adc cs mov and inc inc daa push in daa jns mov clc ss xchg mov mov repnz loope lock xchg xlat subb xchg out add (bad) gs xchg mov pushf mov gs or cltd clc jmp mov add test ljmp pop mov sahf mov iret call lds testl dec mov adc sub xor add cmpsl inc sbb xchg sbb inc jecxz int ds into outsl imul or jmp sub sahf loopne push sbb jl out cmp and lods cmp or xchg popa or xor mov or push xor ret movsb fstpl add das sub sub add int jle sbb das repz dec xor push adc fldt inc pushf inc mov sub xchg cmpsl add daa lock mov movsl insb hlt mov pop das or ds shrb pop subb pop sub (bad) push imul inc or add and mov lret xor pop xor mov dec shrl or mov jae dec sub mov xor data16 (bad) (bad) in arpl and subb jg xchg pop sub (bad) loope sub (bad) mov cmc pop rorl inc mov nop and sub pop stc int3 xor pop push jmp ds xor jmp and inc aas int3 mov cmp lods dec stc and mov push push clc into mov cltd or cmp rorb pop or xor adc loop aam dec mov enter jge xor cmp gs int dec add add sbb lods xchg mov aas outsl arpl clc xchg fsin xchg jno sub fidiv cmp adc cmp (bad) xchg out test leave pushl test fidivrl push mov lahf inc and hlt sub cmp leave lahf int3 cmp stos xor cmp sub imul call inc repz hlt push daa idiv pushf out mov nop or fisub cmp xchg pop lret (bad) in ret clc pop ljmp cmpsb lret add repnz inc push or xlat pop repnz add or ja mov or push sbb xlat mov inc andl (bad) shrl dec insl ret mov notl pop in mov (bad) fisub aam iret add je adc fldcw add ret sub mov xchg push (bad) push ja mov call aam jo cwtl mov push lds popf inc outsl and ds sti insb lret dec or xchg call push push sub pop lds jmp mov jnp adc gs call pop aas sub sar pop dec scas xchg xor pusha dec or pushf xchg inc add jbe lret nop adc sub or add add pop movsb xor sub mov es fnop cmp test xchg (bad) repnz xor cli repz sub cmc and in mov (bad) mov push out pop fildll out adc add push or outsb les (bad) enter xor idivb xor pop cmp mov syscall sub insl or stc test add in sub enter aas popa pop mov das scas and mov in jae stos jne mov repnz test and cwtl movsb mov popa cltd sub or loop add mov cmp in push (bad) adc mov sbb jae (bad) into and add aad cmc out and xor mov out mov jle or mov lea mov pop inc mov jns bound call iret jp pop shll inc imull xchg adc das jmp (bad) popa and mov mov push adc (bad) adc or xor sub jmp int3 cmc xor xchg lds push ret sbb (bad) mov jle add and pop mov cmp sub lods mov stc mov dec adc jo mov push (bad) leave mov int3 divb ret jg dec push (bad) add xlat mov add jbe iret fsubl idivb pop sub popa inc cmp mov jg sbb pop fnstcw test fucomp cmc sbb xchg inc inc pop xor sub je mov push xor mov popa movsb call sbbb and sub pop int3 adc (bad) sahf pusha mov je lahf fldz mov popf fldcw popa pushl sub xchg mov pusha incl clc daa add mov les mov push in movsl mov cltd pop arpl pop imul fucomi movsl bound xor clc jb ret aam dec scas cltd lret das popf subl aaa jl icebp stos fisttpll std pop sub adc xor or scas pop fistpll sub add leave mov xor jno jne mov repz outsb les idivl dec dec clc xchg jp lahf pop mov push and sub out pop adc imull sbb fistpll xchg xor xchg mov jecxz xchg jmp int3 pushf mov lret xor or xlat outsb mov (bad) dec ss push mov add (bad) scas push push fsubl push add mov push cltd scas cmp (bad) out (bad) jmp test in movsl mov lret push mov xchg adc sub aad or sub out mov mov mov xor mov fwait mov xchg fmul sub pop inc cmpsb sub cmp jle cmpsb daa out ja sbb pusha add scas sub dec out test and ds iret push lds mov add (bad) jns pop arpl sbb sub pop xor mov jg rcrl jg inc mov repz and mov dec mov (bad) pop stc in outsl je icebp push testl sub inc jge pop lock out cmp sub lods add xchg pushf aaa lcall addl and lret xchg or repz daa adc and clc pop dec testl ds test rol loop pop pop or push in and fbstp iret cmc dec push imull jl sbb mov iret pop add neg out gs (bad) or popf push sbb movzbl push sub neg dec lds push popa dec fisubr mov jb shl sbbl sub decb add mull or movd das and sbb negb adc pushf scas pusha pusha ljmp and popa (bad) fisubr andl jno scas xchg (bad) lods mov sarb or sbb adc jno and rcrb mov sub mov imul or mov lret ret sub das nop ret add pushf xchg negb xchg inc out sahf lds mov inc cmp test inc or loop inc xchg mov cmovb push or out lahf test popl out aad lock sbb adc sar (bad) dec div pop (bad) test cmpsb cmp aas sbb xchg pop push pop sahf lret xor jmp mov ja repz xor stos bound pop in es out out and or scas push lret (bad) icebp (bad) imul lahf add mov jnp aam push push daa jge enter mov imul das ret mov xor pop jo out lret bnd je push add cli repz movsb mov and cmp inc stos sub je inc sub (bad) or adc and mov dec jb or inc add sbb jmp push jmp aaa dec pop jo pop or mov fs mov ret xor repnz lods mov fldenv push inc jmp add shlb pop test lock inc jl arpl push sub mov xchg xchg into adc outsb notl xor negl dec (bad) outsl test hlt and or ds pop lret mov or mov insb xor imul push add int das (bad) dec not std jb (bad) mov (bad) pop test add pop mov das daa xor mov mov sub xor mov mov xchg cmp sbb inc hlt or fcoms gs xor xor sbb call imul or push mov aaa imull jl push ret outsb xchg cmp mov pushfw (bad) fist push inc sub insl lret sbb movsl pop orl jno,pt xor and (bad) lock xchg xor lds or data16 add jg or pushf ljmp pop xor cmpsb add sti outsb clc cmpsb lods cmp lret sbb pop jo into mov xchg mov movsb fistpll stc test xchg cmpsl in movsb jmp inc xchg xchg lret dec enter xor cli mov jge or sahf cmp fdiv mov or mov lahf cmp cli and cmp xor push mov loope mov mov pop adc cli jae add add and out mov push repz xor (bad) sub mov and xchg rcrb dec in and and pop add test xor mov inc (bad) pop insl or out cmp les pop jl movsb jmp add stos mov ljmp sub repz cmp imulb jmp lret jmp pop ljmp mov mov add inc or xchg insb mov push push dec jmp cli std mov das push sub pusha or xchg pop fstpt push call mov div fnstcw pop add mov fwait (bad) sub aad rcll pslld rcr jmp sub sub add xor es dec out sbb cmp arpl ret push inc adc jle inc daa sub jb sbb roll icebp out mov and push dec jg push jmp aas sub repz sbb movsb out mov fsubrl lret inc xchg not leave xor sub mov pop pushf xchg (bad) mov lods adc repnz (bad) je adc mov rcrb add aaa jnp push mov pop mov cmp jl mov in xor dec outsb popf pop jl sarl fucomi lret jmp dec jp push xchg test leave repnz push mov lods inc cwtl push divb rorb and ror jno lret add adc sub (bad) cltd aas add test test (bad) xor pushf mov jo mov push bound push cmpsl xchg clc inc shll fist push enter cmp bound sarl testb xchg push leave sub sub pusha shlb inc pop dec out sbb adc enter sub pop (bad) jge dec fadds fwait sti xor (bad) std or inc sbb lsl mov mov push add inc movsl ljmp mov int3 push sub out cmc jmp flds adc sub add sub cs pop (bad) fsts mov fisttpll hlt or sqrtps or mov and add imul loop mov inc lock cmp add adc xor jne out call loop fildll fstpt nop js clc cmp mov cmpsl jge decb dec (bad) fcom jmp and (bad) and (bad) pop lds (bad) cmpsb bound sub and jno int3 in dec into ss xchg xor into sbb popf mov xor and add aas imulb dec jecxz das lret out cwtl adc lea add or mov out imul push pop and bsr aam imul mov inc jmp (bad) (bad) and mov cltd lods js jl in mov xor addl ror pop loope shr jb iret in pop pop push add scas xchg jecxz test fmul push push aam cli push adc or or repz jp loop mov xchg push aam jp inc fbstp leave pop mov lret or xchg repz icebp jae daa rcl inc jp fscale dec int3 xor in leave jbe dec dec orb sub ret jmp loop faddl jmp jbe mov inc frstor push loop mov pop pop nop cmpsl lret inc add idiv mov lahf push cs std dec jmp das add push mov jg pop cs out loopne mov pop cmc jg push push addr16 aam std js or pushf jmp xchg lock sub xor clc pop sti mov xor out hlt or inc mov leave mul loopne sub pop out bound mov out jmp xor rcrl cmp mov pop hlt mov mov into lea pushf cmpsl ret jbe imul or sub dec push push cmpb xlat cmp dec sbb (bad) cmc and popa pop add jle pop dec repz out push scas mov sub movsl mov inc jecxz push cmp (bad) xchg sbb mov dec mov fadd pop shll mov sbbb pop jns ret and xor sub jl fdivp mov aam dec push in xchg (bad) mov adc popa push sub cmp test xor push push cwtl lea xor mov or pop enter lds out cltd enter (bad) add out mov fdivrp (bad) imulb ret lret pop inc dec aam sub jp push or jg pop jmp mov fcoml pushl xchg inc fildll stc (bad) jg stos xor icebp std or les mov jl into xor jge xchg lods add inc pop or ja or std inc es sub pop add fcompl dec repnz mov fisttp icebp push mov xor push pop mov movsl mov cli mov leave push mov loopne addl push push and cmpsl sub inc add aas loop das or call adc cmp add jmp mov scas loop xchg ljmp or mov pop lret std pop mov mov xor and mov push sub mov jmp mov xchg mov insl and mov dec or sbb lret scas push push jo sub lahf ret jl mov xor xor repz dec xor ljmp scas and or pop gs jns dec dec repz and aaa popf fnsave sbb clc sahf mov pop jbe dec fidivr imul out mov repnz outsb and gs icebp test je stos xor mov jbe imul aas xor jbe data16 lret and stc add cltd push loopne or (bad) jno and push sahf push enter mov adc lods (bad) and fbld mov inc andnps mov loope mov xor xor cmpsl (bad) aam gs ljmp inc cmp out shlb sub sub inc daa inc in mov xlat mov ret xor pop dec (bad) mov pop dec out cltd cs mov data16 out sub movsl repnz out ret jbe push mov xlat dec cmp push sbb (bad) jne sti xor lods push (bad) xlat or mov cmp fldl or fcompl and cli (bad) out fcoml jb dec and sub cmp sub and (bad) mov jns lods cmc mov xlat dec popa mov cld push jge jl mov rcr mov mov xor xchg daa xchg sti xchg cli push (bad) cli adc arpl inc jle pop das jne jge push gs mov or out jle add icebp inc or leave stc pop dec add (bad) mov jnp mov and xchg enter or notl shrl lret sar add cmp pop repz ja sub pop sti fs out mov stos mov dec push mov clc jnp or lcall add sub fucomip pop mov jnp out xor mov stos out and and pop (bad) pop dec enter or das bound pop in es into and shl cmp inc and stc sbb or out bound push mov or sbb jo pop flds xlat icebp enter jne dec nop aam xchg hlt mov stos pop lds outsl adc mov pop ds pusha mov pop and pop sub mov adc rclw sub pop loop xchg stos mov in daa insl jmp fistp loope inc xchg sbb jp popf inc iret stos in push and and mov mov in sub rcl lahf and sarl push jg cmp aas xchg dec and mov add out rorl jbe xor ror sub add loop jno lret out inc xchg inc test mov jne and sub mov mov and ja inc aaa cmp and aas and lcall push cwtl xor mov and leave pop or dec mov lods hlt repnz out daa jg hlt push xor jmp aam ret insb pop adc add mov fisttpl pop rdmsr lahf call hlt cmp xor and fbstp xchg loop cmp mov das push fdivrs xor mov pop test lds nop fisttp mov lret xchg divb push negb mov mov mov jcxz inc or fildll push adc lods adc lods call dec xor out dec xor sub popf mov stos push in (bad) xor push stc add cwtl jnp dec xlat fs fwait xchg mov mov add sbb sub mov out fadds out dec mov (bad) mov (bad) aaa mov repnz scas ljmp dec jne (bad) mov or mov aad xchg pop xchg mov clc outsb mov cmp pop xchg xor dec bound lret das add mov pop xor loope add and lock rep and adc (bad) in fsubrs pop ret cltd dec sub sub sub and add ret call dec xlat in mov loope cs shlb cmpb daa imull pop dec jb push fwait out sbb and icebp cmpsl sub incl push lods xchg push movsb lods nop sarb in add idivb mov popf data16 inc xchg add (bad) xor fdiv add test movsb stos fadds sub dec jmp mov pop (bad) aaa mov push pop mov shrl ffree dec outsb je cmpsb mov iret push lret cmp and shrb (bad) incb and aaa and xor mov in das into inc inc xchg and jae adc adc (bad) mul imul and loopne lock leave or adc push push sub pop mov mov dec ficom outsb adc adc push xor xlat mov push adc pop int3 and xor les dec and mov dec push idivb int3 xchg icebp shrw jecxz movsl idivb (bad) cmpsb and or (bad) mov push mov cmpsl icebp sub sbb dec in xor (bad) sbb fiadd imul and divl mov xor and fisttpll js ret (bad) std out and (bad) fsub ja into push and lods fmull pop xor cmp push fisub fwait test sarl push add fcomps cmc ljmp adc sub xchg jno data16 add sub lret xlat (bad) cld and cmp cmp push pop push popa xchg (bad) pop sbb lea xor xchg stc inc idivb out add sub xor pop enter loop fstl (bad) stos repnz rcr cwtl inc shlb pop shrb mov fscale test mov xchg jns dec jl popa (bad) xor imul js loopne ljmp or mov add movsl push xchg mov mov sub sub mov test outsb out pop in xchg sarb test pop cwtl sbb sub (bad) mov cli inc icebp mov xchg jmp xchg (bad) xor cld dec lds fscale push test pop and mov push int jnp pushl insl clc mov jo popf je pop in sbb ds mov dec mov pop ret mov iret pop mov leave enter out aam (bad) jbe pop loope mov pop scas adc repz cmp icebp inc adc jmp mov inc ds xor out sub cmpsl dec test jb add and dec jb aad sub js xchg jae sub lahf push jno (bad) in sub or mov mov into ljmp jle jmp xor sub push pop (bad) or out mov pop dec cmp adc les mov repz pop add repz pop jle lret cmc fwait les popa stc leave outsl mov xor lods adc sub into dec (bad) jo xlat xchg xor lret nop loop in xchg (bad) mov and daa lock or xor jle jo leave popf je pop push fsubrl pop and cli idivb xchg pop out jp xchg push pop scas push fisubl into scas mov insb mov xchg fcompl sbb xor or aaa fwait and dec out push adc into (bad) popa jbe push addr16 dec and (bad) sbb roll or fldenv pushf push mov add mov adc hlt cmp sub push mov js adc lea mov daa or jmp je imul sbb cs xor mov mov mov xor sarl push imul icebp rorl mov xor icebp scas sub rclb mov mov or xor std inc fucomp repz in xor and add or jle dec out sahf les movb pop inc gs dec test jp in sarl (bad) leave xor daa and out and cmc mov push mov sbb cli xor mov mov aam mov mov fistpl jbe leave xor jg cmp or (bad) (bad) mov fwait mov sbb push xor mov xor and add mov sub add sub cmpsb add inc cld aam adc call ret stc dec and mov loope repnz xchg hlt add pushf sub jmp add mov push imul cld xor cmpsl aaa sbb inc (bad) dec sub add daa and push push cmc sahf test iret stos lret or xor test (bad) (bad) loop (bad) mov jo loope add addb xor or push or sub and jne pop xchg jg outsl or (bad) sub mov (bad) cli cmp pop (bad) iret xor sbb mov jo or out imul (bad) cmc mov jl aas or scas or sti inc push out cltd jo bound sarl or sub dec call scas jmp mov and and pop sub jp add push sub lret inc orl cli pushf add jmp dec inc mov cmp stc push xlat test mov jg ret decb out xor lret inc movsl je or mov add and test loopne add (bad) mov ljmp imul insl outsb int3 pusha xlat jnp lahf push xchg addr16 and push xchg lds lods jp or shll icebp fs rorl test sub sub stos sub xchg insb cmp ds sbb mov out lret dec pop cwtl flds xor mov mov lods leave out dec pop out sub sbb xor pop dec ret inc dec cmpsl repz lock loope test inc rorb fwait push mov mov cmp inc rol mov in sub pop sub (bad) ficoml shrl fidivr into in xchg mov mov xchg pop mov fs fsts enter push in or lret outsb imul dec fs lret scas mov dec les scas sub (bad) gs test dec fisttpll xor scas dec enter add scas mov jnp sub pop mov imul test cmpsl mov sub clc outsb leave jecxz (bad) xchg cs inc add fnsave call pop dec int3 ds shrb (bad) ud2 mov mov (bad) mov orl pop les xlat and rolb shll cmp movsb xchg mov push mov mov add pop mov dec sbb outsl je imul outsl in adc insl xlat stc push ret sub cmp mov ret jmp mov xchg ljmp test shrl loop push dec or dec inc leave cmp xlat sar dec mov cmp push push dec call das add fbstp fildl sbb ljmp mov xlat xor dec shrb leave mov mov cmpsl fcmovnb movsb mov and scas and or pop icebp ret fs mov inc inc out cmp and aaa mov cmp mov pop or out or fadd mov and mov (bad) sub xor testb adcb adc insb cmpsb dec (bad) adc scas cmp mov in xchg rorl je out and ret es xor stos arpl jmp fidivr sub lds out add add or cmpsl das mov lcallw jbe (bad) mov divl pop mov push mov xlat mov pop inc int3 and (bad) ja lret jmp (bad) dec jbe fdivrl add cmpsl gs aad popa xlat fidivl xor and mov xchg jl pop jge adc stos sub lret jmp arpl add js jmp pop xlat adc out xor xor xchg lds out aam xor ja mov mov testl xlat or add addr16 or xor andl dec mov dec mov ret xor sub mov jge fwait push add ds and lret and mov test and jns mov out imul lret clc mov outsb enter pop mov loop pop mov fisttpll repz in sbb mov lock fs xor mov fcoms ds lock sub rolb test (bad) pop inc sahf popf jo mov mov pop pop pop or and movsl pop and notb inc pop les repnz aad out push or int cmp loopne movsb cmp xchg ror pop popa out out mov cmp pop bound jmp out lods and jno mov das stos jne stos jb push mov or fstpl adc mov ljmp js call adc test push arpl ret dec pop sub add xor or mul or pop xor adc repz (bad) add fsubr negb xchg stos cmp or ret cmpsb pop fsubrs xlat stos movsl movsl cmc sbb mov mov fiaddl pushf dec mov lret add pop loop ffreep and lret add lods call popf in push mov leave inc add pop pop rol fild and sub dec xor lds mov and mov xorb icebp pop bound xor and adc fldt pop pop bnd icebp dec mov test pop mov cmp inc ds int daa add push out insl mov add dec mov dec int out cmp mov adc fcoms repnz xlat das sub loopne adc cld cld mov and lahf jnp xor out adcl jnp incl (bad) and add jae movsl sbb idivl mov and mov dec mov pop adc fidiv testb lret dec test xchg call xor adc dec fcmove out icebp fidivr and (bad) lea mov dec loop xchg mov lds outsb in push in mov repnz add push and fistpll mov jecxz xchg mov xor fs sbb jnp add sub in add inc pop xor jno or bound idivb inc and fisttpll fstps sbb pop pop out fistpll adc (bad) jne xchg leave xor xlat add xor jg cmpsl lahf lds mov or stos icebp pop sub lcall add mov pop inc push and adc mov fldt sub clc add adc arpl cmp sub add movsb (bad) lret sbb jge mov lret or aas inc inc cmp add icebp sbb mov or out push rclb ret cwtl lahf mov lret push push and lock popa mov stc les mov ljmp in aam push ficom ja int pusha sub adc mov call mov in imul xor (bad) nop mov adc lea out mov dec push ja je xor (bad) push dec mov lds stos lret mov mov (bad) push xchg adc and (bad) pop scas mov jg sarb sub sti mov mov cmc push sub pop inc call or pop jmp sbb mov pushf inc or rolb ja inc mov push ljmp (bad) testb mov pop (bad) ror pop or pusha mov xchg push mov int3 xchg push sub pop in cmp or sub and push and mov (bad) pop mov nop or in aaa mov xchg stc pop pop lahf out sub mov imull stos sub iret push add xor mov pop cs popf ret pop fistl push or ret addr16 and add (bad) sub mov rcll jno ds or inc (bad) xor pop cmp xchg or int3 (bad) (bad) mov (bad) and enter insl ret jmp jmp decb or xchg bound rcll idivb jmp out rcrl fild mov push fistp inc hlt decl jae xor ret push pop push xchg repz pop ljmp ffreep sub push jecxz stc sbb inc ret or xor pushf test fisub jmp pop roll and add sbb out rorb push mov jo outsb mov pop icebp xor sub mov fisttp repz scas cmpsb or push xchg cmpsb xlat adc and sub lcall dec (bad) fldl mov sub jmp imul jmp fisttp fsts mov idivl inc add xchg ds cmp mov push sub lahf pop icebp (bad) add jns (bad) sahf mov ljmp add sub mov dec adc mov sub daa and fldt sub jne add cmp fs sub xor loopne or sub xchg push ret mov xor bound in and in cmpsl adc shrb cli sub ret test scas jbe inc and daa (bad) pop pusha push or pop sub push mov pop aaa (bad) pop sahf pop mov ljmp cmpsl frstor xor insb jle mov xchg mov xor and (bad) sub (bad) je mov jne ds int3 mov insl mov in sbb shrb movsb cmpsl and jbe pop leave jae sub mov aad mov bound or daa cld shlb fisub adc and mov mov pop xchg cmc and push sub ror and jl mov pop mov add add push adc rcrl ret jge jecxz shrl add and sub popf movsb cld push mov cwtl cltd fsubrs sbb cmp repz test loopne xor add dec jle mov cmp sub pop lret out icebp stc dec push xchg loope (bad) fmulp add mov (bad) sub js test icebp mov sti push mov add aaa movsl popa icebp shlb or mov scas xor in mov fisttpl add lods and sarb sub (bad) xor sub in aam pop ret sbb repnz jg inc xchg aaa ljmp out loop xchg sti (bad) shrb out sub cli sub mov fnstcw dec cmpsb xor xor and mov stos xchg push jmp repz cmpsb scas mov imul lret jg cli xor inc push push mov popf js (bad) jp (bad) mov inc dec je mov scas pop mov mov imul push das fidiv pop andl (bad) xlat stos cmp xor sub cld mov or and out into mov sbb iret cld inc fisub movl add cmp xor movsl push decl test pop in add push je imul (bad) or and mov fs loop mov sbb mov dec call pop lret mov sub push push lret ret sti ljmp push sub in ljmp xlat sbb dec xor xchg xchg push mov xor dec inc cmp pop repz adc fsts ds xor sub pop xchg push push sbb out lcall push ljmp sub mov xchg leave in mov adc xchg mov movl push push loope adc notb xor dec mov jmp adc push and sbb test inc clc and subb dec pusha cmp jmp xchg ja sub cmp dec (bad) cmp xor sbb inc jae lret push lock pop sub leave jle bound mov mov adc cli into inc dec pushf adc test arpl xchg stos sbb cmp mov scas lret cmovp insb cs push sti and sub ds icebp push addr16 es lods dec or mov cmp xchg cli mov mov mov jne fnsave push jle cmpsl out mov int push or mov xchg pop lock lret sub sbb (bad) scas mov and jbe mov mov outsl sub push scas lret or lret xchg xor mov lret dec push pop pop add movsb lds push mov and fwait mov lret int3 daa rclb sub mov pop push and shlb aaa fisttp repz lret adc int pusha jmp push ds mov add or jmp add cmp arpl push outsl rclb add clc xor jmp sub dec les movsb mov inc mov repz cmpsb dec and test and mov in (bad) adc inc or lods shr call loope in bound jge out pop cmp pop mov pop test out adc pop (bad) and (bad) imul cwtl or cmp testl adc adc fwait cmp add fsubs add and adc outsb pop jnp xchg outsb mov xchg into and enter mov (bad) pop and popf push xchg dec nop fwait cwtl cmp sub or mov dec pop pop push sub push cmp pop shll into bound movsb adc out insl (bad) ret les xor cs sub pop cmp scas add jle stos mov pop repnz inc sbb js mov jmp xlat mov aas adc sub lret mov push inc xchg lret ds mov sahf stos mov in aas or mov fnstsw cmp into xchg add mov xchg xchg fdivrs in dec mov sar ljmp sub or stos mov leave out sub ds scas loop xchg sub inc imul mov pop movsb rcrb (bad) ror fmuls mov add je pop mov pop jp push pop push push inc add out mov mov jmp sub xchg xor or stc in clc lods and mov cli inc (bad) cmp mov add popf dec fcompl dec sub rcll mov aad lret in xor (bad) imulb xor or mov or pop xor jmp movsl loop add (bad) mov daa rep (bad) cli sub cs or sub into add xchg scas ret pop inc dec mov iret aam pop imulb (bad) fimull inc mov cmp cwtl mov notb jmp aas lcall add and fbstp and ljmp jmp add xor stc std dec out pop repz mov lret negb lds repz inc xor cmp pop stos sbb push mov imul fpatan sub movsb addr16 jmp loope sub xchg mov ja inc adc (bad) popa fmull jmp jge test into xor out in movsl shl es mov mov pop lock or sub sbb jp pop sub xchg and inc cmp push ss loope mov pop pop jg out xchg imul lahf xchg and xlat push imul fld insb xchg pop xor mov fiadd into scas jne push sub dec iret mov or icebp aas or and xlat (bad) xor sub and cs loope dec xchg lds lret leave mov cwtl inc call jns dec rol pop rorl ja (bad) add pop and fistl icebp out and and mov shrb pop call adc aas and xor lds rcll cs mov dec adc xor lods cmp cs dec popa dec push cmp add and test adc fidiv fwait pop push fiadd jp enter inc stc jl sub sbb xor inc mov (bad) xor add test xchg fdivp insl jb xor (bad) mov push mov cmp mov cmc cmp xlat pop jne mov xchg xchg shll sub jbe mov push pop jle fstl xchg (bad) hlt mov rcll add mov icebp xor pop div sub sub mov out jns sar (bad) repz and jecxz push cmp cli cmp xchg jae imul sahf lahf mov into adc cmp mov mov cltd std loop mov rcrb loop mov in xor fdivrs dec mov and add jbe adc mov mov bound or inc and push cld inc pop jne lods sbb sub push in push mov in es xchg (bad) mov out jne cmp dec movsb shll cmp and inc iret mov leave xchg lds cmpsl lods ret mov fistl and rorl xor add dec add cmpsb pop pushf mov pop out in sub popf pop xor pop or call out sub stos ret push cmp push leave push std cmp leave cmp add leave dec repnz je ret jl (bad) out movsb ljmp inc scas sub repz or test movl xchg fbstp sub cwtl leave icebp pop mov loop mov push bound shlb daa jmp int3 inc xor dec mov inc adc push push mov push mov mov sbb jge int repz fmull testl push test and inc popf jmp lock lret daa rcrb jae mov das or out (bad) dec (bad) lret ja ljmp inc jmp imul pop out aaa popf jno or sub frndint xor jbe das into sub mov mov mov dec lret loope cmp iret pushf inc enter pop (bad) shlb inc shlb dec call or xor sar ret jne (bad) mov jae sub popa (bad) sub or sbb jmp or clc mov out jns imul sub std xor leave xor loop pusha dec mov fbld xlat stos negl imul (bad) adc mov ja repz adc stos pushw push mov out in add mov push push test rorl push subw ljmp mov daa pop cmp rol xchg (bad) xor test in loop daa sub push dec push dec add test push dec lea jge xchg loopne adc lds adc add and dec and and stos xchg aam shl add dec fidiv rclb ja notl sub hlt (bad) (bad) js cmpsb aas or sub sarl cmp shrb add xor inc xchg xor sbb or xchg imul jmp sub nop in ljmp idivl mov test adc xlat mov mov push xchg mov push push leave (bad) jns mov jbe pushf lahf jl bnd and notb pop dec aad gs (bad) push pop add jmp mov sub lods adc subb push cld jg test xor mov fisubr test ret (bad) push (bad) aam es (bad) rcrl add push jp mov jne fmull mov pop fcomi ds ss xlat flds and cmp fidivl aad arpl push clc cmp xor cmpsl pop inc xor imul mov xor mov shlb fnstenv cltd (bad) repnz dec dec divb fimull fistl jecxz rcl adc mov fildll fidivrl stc sub pop outsb inc mov mov insb (bad) aas xchg stc mov notb out or or xchg imul rcr fsubrs mov or pop jno or scas fs (bad) sub sar sub out mov iret jb ljmp xor and ja (bad) repnz notl cli mov (bad) std xor mov (bad) pop mov std in ds loop sub xor shl sub mov add pushf mov icebp sarl cmp ret lahf out cmc xchg loop outsb mov imul test sbb lahf pop adc aad ljmp sahf and pop pop nop xchg adc push jle mov and sub pop push xchg sahf or and pushl mov dec sbb (bad) adc sub fmull in push in adc mov out and mov or das pop shrl xor push jno mov lock mov xchg push mov adc pop pop jl mov dec add mov pop add out pop mov pushf or dec inc add add push jl jg cwtl xchg sti jecxz pop (bad) inc mov push inc fisttp push (bad) xor push or data16 jnp dec ds lahf push pushf mov aaa adc mov aaa mov cs fidiv pop mov adc lret int3 inc adc mov add jo shl aas jne mov dec int3 loop xchg gs sub lods xchg out ja jmp add pushf mov rorl dec call ljmp stc imul push std mov sbb pop int inc pushl fimul adc and imul sub iret pop add andl mov push (bad) into lret repz sub test pop cltd mov and (bad) jb add push dec imul ljmp and fs jp and mov imul loopne xlat xor popf je pusha xor jns or into sbb outsb push pop or out rcl jle mov push roll add test lds cwtl add lret sub pushf jl or fwait inc and or jp mov xchg adc stc (bad) xchg enter popa cmp or xor cli mov fs ljmp arpl or xchg pop mov ljmp jno arpl pop xor and mov cmp das lret hlt adcl nop mov sti int3 ret nop fstpl jg mov xchg pop loopne cmp and mov xor das int xor popf andl pusha pop mov mov sarb mov sub jbe sub jb push cltd push fs hlt aas mov pop ror stc jg mov imul pop lcall add sub xchg jo call and mov cs mov mov xchg ret mov mov xchg sti call jnp leave add sti or jmp inc pop inc fmull stc mov lret in push icebp loop fistpl decb push out sub mov sbb cmp out mov mov aas mov xchg aaa and popf bound add mov cwtl push jmp sub xor cwtl (bad) add xchg lahf stos shrb xor mov nop adc xor jge jns movsl mov out cltd (bad) cmp inc sbb mov dec sub and and cld mov mov dec cs stos clc repnz xchg shrb loope js sbb pop (bad) sub add cmp cmp mov rcl push mov out and rcll loope sub mov sbb imul insl stos xor xor scas in nop fsts in stos mov out neg dec clc add fstl add xor and xchg dec ret loopne xchg icebp frstor cli repz gs enter repnz shrb jecxz or cld nop (bad) jmp ljmp dec jge pop icebp bound aaa or andl push inc or ss push push out lret out lcall loopne (bad) not popf inc pop sub fildll sub or roll push add out jo (bad) out pop stos push and rcrl adc into sub sbb add sub or push sub repz ljmp pop jle (bad) xor das xchg lea loop push pop fnstenv imul or mov jl imul fstpt pop mov ja add xor lds and or sub (bad) rol repz and xchg repz outsb sub shrb push xorb (bad) lods test pusha call xchg inc into shr sbb in dec ljmp into xor int inc sbb das (bad) (bad) adc (bad) mov sti and pop sub cmpsb jo (bad) add cs mov pop out repz dec lea movsl cmp add add xor out mov push test fidivr outsb sub std jl mov adc fwait call in lds add jecxz leave add dec ja sub pop xchg js add pop jg (bad) pop add ds jmp (bad) sbb cmpsl push inc or fist xchg mov out jne or or mov pop mov push adc int3 push pop call popf shl insb fs pop and dec push jmp mov dec lret popa cs bound subb bound (bad) mov push popa push cs xlat or shlb xchg mov gs aad mov and mov jne ds iret pop mov pop jb adc loopne or sub pop push fs push daa in or add cmc fnsave bound sub xchg icebp pop sub (bad) jno adc das mov push sub cmp xlat push xchg adc mov loop push mov or popf sbb xor push ss pop lret push xor shrb out and sub xchg ljmp and add pop mov add and lods cmpsb (bad) das (bad) (bad) movsl push xchg xorb sub popa xchg add mov push lds das xor mov mov loopnew lret pop cmp push sbb jbe outsb xchg jl push push js std outsl or fbstp lahf icebp xchg leave lcall leave push add mov test add ret repz daa ljmp stos xor cli mov adc add cwtl popf xor les idivb les sub jp mov das push in mov xlat ljmp lahf or pop daa (bad) jae adc sub ljmp fsts (bad) negb pop sbb add xor test mov bound daa jmp mov mov std add cmc dec mov loope popf pop outsl in shrl mov and out rcrb mov outsb adc scas cmp movsl xchg inc xor jl lds inc xchg (bad) mov cmp pop out xchg xor pop adc iret xchg pop (bad) and repnz mov inc mov in cmpsl pop inc pop pop mov sbb xchg (bad) cmp ljmp and ja in (bad) xor jmp xchg inc in jnp sub (bad) fs jg addr16 inc incb cmp bound sub shl pop fldl2t inc xchg mov jbe pop pop lret mov inc aas ret stc imul ljmp mov mov sub rolb fnstsw arpl int push lahf cmp fwait iret mov (bad) lret xor sbb mov frstor mov xor je rclb xor (bad) xor pop out xchg pop dec ret push xor rcrl (bad) mov sti jb xor call lods ss movsl fstl cmp sub jb cmp pop andb out int3 mov ret and xchg enter or push inc add and lret push push cmp ss (bad) fcomip sbb cmp cwtl push call fldcw sbb or jp ja and stos xor or pushf mov adc sub repz mov ret gs and pop sbb (bad) push lret sbb or mov pop cmp and or jl int3 pushf xchg pop and iret stos mov lds (bad) stos mov dec clc divps movsl fistpll in inc mov scas call jge sub sti xor and pmaddwd xchg loop jg (bad) scas push mov cmp pop or adc (bad) lahf sub std adc xchg jle sbb call jp das stc lret xchg bnd mov and jge sbb pop xor xchg xlat mov call (bad) leave mov imul and mov mov ljmp jno leave mov ljmp and pop xor iret jle push ja (bad) test lahf rorl sub sbb add dec (bad) icebp xor dec ret (bad) sub dec pop xor lret xchg loop adc mov and xchg mov jb mov xchg cli into pop sbb cmp sti mov sub adc (bad) jne inc mov idivb test jecxz jno imul lret repnz (bad) mov jp or and sub daa jg fisttp mov ja add xchg pop sub dec sub mov in dec mov xchg mov push add mov mov cwtl and lods lret pop ljmp out fldenv enter jp jmp cli mov icebp dec add and sarb fs dec and mull mov movsl mov aaa inc insb or clc mov out or push in xor out jmp icebp pop dec adc icebp pushf popf sbb (bad) xchg push sti outsl das fist popf cmp inc pop push loop mov add pop add xchg test (bad) cmpsb inc dec stos mov pop lret lods dec mov and sahf dec mov movsl pop inc in outsl sahf or push stos mov push pop imul por andl adc into lock jmp adc das (bad) jnp pop or pop sbb repz jbe adc rcll js inc pop push and mov std mov decb mov fisttpl adc lods outsl jb xor movb mov or add es ja (bad) (bad) imul sti adc dec cli insl dec loope jle js mov mov ret mov das mov jne int dec ss or (bad) hlt ret dec cmp and fildll test sarl push lret fiaddl lock xor mov adc mov cmpsb mov mov (bad) in mov call fistp clc repz lret xor imul cmpsl add jecxz lret fnstenv add mov mov insb cmp daa add aad inc dec cs nop jmp int3 push cmp cwtl repnz pop lret into adc test mov cs sub cltd loop sub push rcl es outsl scas shr or pop and call mov das shll incb scas xchg xor push adc loop mov cmp (bad) adc (bad) call cmp adc imul movsl jns mov mov pop sbb inc scas (bad) jle pop xlat or inc jl jmp xor or xchg ja (bad) insb leave (bad) pusha dec fmuls (bad) imull dec dec js pop repnz jmp xor adc int3 std xchg pop xchg xlat dec aam jne (bad) pop mov jle dec rol (bad) divl out pminub add push std gs fcoml popf sbb mov mov sbb cmc lcall rorb xchg ja adc cmp std add ds mov and sti add add cwtl add dec mov dec popf sub test clc insl mov int3 push (bad) subb loop (bad) ss in mov stc les incl dec loop mov outsl dec jmp cld popf mov shll lret shlb sub icebp or jb jge in jno xchg xlat ret mov ds pusha sub dec lret (bad) lods jl push loope mov iret sbb scas idivb out pop add sub push mov cmpsl fnstcw jp mov daa daa fistpl sbb sub mov mov insb mov mov pop enter fildl std mov rcl xchg test push test dec add push xchg stos adc pop pop lock iret xchg pop ret or sub cli add into (bad) pop (bad) adc nop mov adc out cmpsl jno adc mov pop mov pop mov pop cli cmp lcall insb sbb loop xchg jmp sub das jmp in xchg push scas lcall sub xor lods adc mov jmp cmp jge xchg dec jbe jmp xchg daa (bad) and add (bad) sti mov mov adc ljmp pop and lahf leave dec insb cs and lds add lds xor mov fsubrs push mov dec pop mov cmp out mov mov and fsubrl add shl or xchg in mov sar sub pop sub and pop dec outsb dec fstp lea stos or jbe pop or aad in dec aaa cmpsb mov push pop pop rol dec add xor test shrl dec adc xor in out cmpsb xlat pop ret pop push shl int3 pop lock inc int3 in js cltd (bad) repnz push testb xor and xchg inc (bad) cld lcall cmc lret and mov aam and and jmp movl int ja pop mov ret daa add xlat insb into mov imul or xor lret pop (bad) dec icebp sbb inc pop out dec sarl cmp test fs lds pop std lcall sti mov mov dec lock cmp add imul push xor xchg push jmp fdivrl add ds jbe dec into xchg daa mov out icebp pop sub pop fmuls xor and (bad) je and jne jmp cmp dec sbbl out jg pop stos pop inc gs fnsave xor fbstp pushf add xchg fcoml (bad) fild and mov aas mull pop enter aaa testb (bad) sub and (bad) xor loop and shlb lcall sub int3 pop (bad) sub or fwait ja add sti dec mov mov fcoml inc sub scas pop insl cmpsl std xchg and enter lret scas jo add sbb xchg scas mov dec repz dec sti jge jp jl roll repnz pop ret (bad) dec pop pushl into pop pop jae repz out sub cmpsb scas sub jg push scas xor (bad) sub movlps jae test cli loop mov add push call lods add mov jle push imul (bad) ret hlt xchg icebp mov push cmp lahf xchg fistpll rorb cmp movsb cwtl xor int3 mov pushf mov sub fidivrl pop xor mov (bad) bound xor mov sbb xor push mov mov fisttpl pop and jne push gs lret test ljmp mov sub xor mov das (bad) fist xchg jle jo mov cmp fisubr or push loope inc jne aaa add sub stos in cltd in push lret add push push stc mov xor rcll jnp add adc test adc out pop mov mov pop cmp dec ljmp pop mov dec jne test sub pusha cld add mov in sub out divl iret xor jecxz push sbb rcll mov mov (bad) jg ficomp or movzbl outsl popa cwtl and xor mov daa fstps adc sbb xchg mulb jne clc repz dec mov lahf sti in fbstp incb pop ret jnp sbb and adc pop enter dec jl enter mov lret (bad) sub pop push cwtl xor or adc push add sub out cli cwtl push nop out xchg les push mov mov cmc and inc mov push push and aas and leave lock adc pop push adc fsubrs jmp sub lahf insb sbb or sbbb call or int3 mov jne jmp xor out arpl dec mov push push mov mov mov ljmp test pop mov xor mov scas lcall in add inc pop in mov pop sbb pop out out sub xchg sub and or lcall scas xchg inc sub add inc mov sub scas cs repz repnz cmp pop fdivr out fsubrl adc sbb dec stos fdivr xor jo incl add and pushf mov push xchg sub movsb cli loop or mov decl stc das cmp xchg out add xor mov insb and xchg pop repz cmpsb (bad) add ja cmc (bad) cmp and cmpsb dec push pop mov scas lret adc out xor add mov sbb xchg inc add in insl adc inc or jge fbld cli fmul ss test sbb lahf mov mov and xor mov (bad) out sub pop adc xor call outsb sub and fidivrl fstpl inc jo jae sub cs aaa aas aad ljmp pushf jnp dec fidivr sbb mov cwtl fsubr jp mov pop mov cmpb cmpsb jg pop dec fstl mov fsubp pop push (bad) dec or mov pop idivb adc out sbbl (bad) leave mov pushf or shlb push es xor ds mov sub cmp adc xor ficomp cld or scas mov test out (bad) xor loope sub adc jno cs mov pop (bad) in or jl int3 rcrb hlt iret cmc pop clc push stos jmp (bad) lahf je enter cld dec iret sub pop movsb outsb inc sub stos sub (bad) in xchg lret lahf mov jae xor or lret imul sbb cmc dec dec push push sbb lock (bad) mov cli add (bad) lret stos mov mov enter sarl and mov push fsubrs (bad) testb cmc gs sbb test out repnz xchg mov dec std js ret mov and rcll sub inc adc push mov scas lret pop das lret pop loopne xor pop jns or icebp imul pusha cwtl mov fcmovu pop sbbl jp pop sub loop jne js mov push (bad) daa push addr16 shlb xor adcb cmp rcll push daa add add xor fmul aam pop (bad) or aas nop xchg mov add loop sub add sbb leave and movsl push mov sbb fdivrp pop pop jmp mov inc pop stos xor mov pop mov fldz xlat push rcrb xor cmp (bad) mov jge mov or ret xchg push fs ja push sarl mov leave cltd cmp inc mov cltd movsb cli fcom and xchg xlat mov mov popf dec dec sbb mov add cmpsl test loop ror roll scas fsubs mov ret (bad) (bad) jecxz flds cltd push mov enter push fcmovne dec xor push dec (bad) loop shlb out fistp mov mov and movsl sbb adc in scas sahf push rsm (bad) fistpl pop or mov cld mov out sbb movsb leave sub mov loopne stos arpl cld sti test in mov push add adc adc fstpl lock repz sub test mov gs daa ja pop dec pop lret mov sub adc lret sub cld push adc imulb or pop mov ret repnz add insb clc push xor add sub cs adc aaa adc sub xor add sar jae push dec push sub mov mov (bad) stos push mov or aas pop insl cmpsb xchg mov xor test push insb mov cmp shr fsubrs mov and pop test ljmp xlat stc pop mov xor (bad) sub and xor lea les cs aaa jg push push jno add pop dec xchg mov mov add pop gs arpl sbb pop mov mov dec adc dec scas mov mov fsubl xlat push and (bad) sub pushf adc scas (bad) mov lcall test add dec (bad) js or push ret clc mov lret sub fisttpl and sub dec cmp mov mov cmpsl ds dec out cli lcall (bad) repnz jge add mov adc scas mov sarb jb cmp cli mov popa stos fistpl adc add add mov clc mov adc cli cwtl cmp xchg mulb stos sub cmp out mov cmpsl addr16 sub xchg pop int ror in mov repnz jb mov dec mov test and fs pop inc mov xor sub js pop push mov and and mov push push xor or cmp lcall and xchg imull mov inc dec icebp daa rcll rorb sbb jmp (bad) xor addb and add inc adc xchg mov adc cmc in das loope lds and jnp daa aas xchg push mov fmuls (bad) mov pop sbb add js shr outsl sbb push cmp jmp movsl ljmp push xor fisttp jno and loop aas mov sar adc mov sub and pop pushf dec add push dec sbb jns or xor or push fyl2x daa jns or xor mov xor and or pop jae mov bound push pop and icebp fcoml mov mov push cld out jnp repnz mov mov rclb icebp std into imul loope mov icebp or movsb sti leave cld xlat movsb or xor mov sub or sub clc sub xor mov xchg push les es pop fmuls xor push sbb xor xchg loop sbb xor mov add int3 aam nop cwtl mov inc (bad) ljmp ret pop divb ja out stc push inc mov repnz xchg outsl sub xor outsl je scas mov int outsb xor into daa sti sbb sub add fidivl xor es (bad) std adc mov stc sub or sbb dec rcrl xchg inc (bad) adc sti mov loope pop jns push std pop push test pop mov and movsl repnz pop out pop adc idiv aad sti mov das ret pop adc das or sbb pushf xchg jmp push xchg imul sbb jne frstor cltd mov sub dec push shrl sub out cld or pop pop pop popf push out pop cmp loop loop mov ja and stos sub or cmpsb jmp pmovmskb loope push and and mov data16 dec xor and adc (bad) aaa jb adcl xor (bad) (bad) ljmp div repnz add pop es leave xchg negl jle adc cmp popf jns leave fxch push sub stos xor test daa xor ja xor add and mov imul sub lret dec dec jmp mov (bad) or iret xchg test mov (bad) xchg gs das push pop lods jle outsl jmp sub or out pop rcll xchg jge lods (bad) add mov aaa call out fisttpll xor pop pop and test and cmp comiss je sub inc test sub or sbb lea (bad) xchg std mov iret mov xchg bound and cmpsl dec adc (bad) je icebp cmc int mov loop xor test mov shlw jmp adc mov imul leave (bad) mov cltd stos popa add sub mov adc (bad) mov or xchg dec out push ljmp mull pop and pushf sub add mov and neg pop adc push lret cli mov cmp sar push daa adcb and dec (bad) fs mov or dec out lret leave mov icebp icebp insl xchg sti mov lcall stos pop adc sbb pop out jb notl jb lcall xchg mov movb xor sub call popf and jmp add sub lds stc mov mov ds xor imul jne,pn jecxz jg les leave add cmpsb push push cmp fsubrl and ret xchg outsl mov mov adc movzbl mov dec and lret push in push jecxz loopne lret in and adc or lret scas pop mov out mov pop pop mov out mov pushf cmp sbb sbb jp xor or sub and xor mov mov or cmp ja repz sbb add daa xor ret in hlt scas mov sub addr16 sbb xchg inc loop mov pop pop sbb add cmc dec pop aad rclb mov stc or int3 clc xchg decl sub and (bad) outsl (bad) add pushl out or or mov int3 mov imul push mov int3 add lahf insb or mov push mov aad mov out mov test dec (bad) ja in sub enter sub cmp or and xchg in cmp repnz shrb rcr mov fstp ret mov jno xchg ljmp pop ss mov mov (bad) xor sar stos mov sti int3 push ret mov sahf repz daa into pop roll xor cmp movsb scas mov dec in jbe xor cmc out movsl jge ja daa idivl inc test fmuls push jns xchg shlb stos pusha nop pop sub fwait es sbb in (bad) fldenv ret ds div and leave nop rorl shrl clc daa ds shrl dec lret scas lret add xor cli pop (bad) sub test mov add inc sar or cwtl xchg (bad) cmp mov arpl bound inc mov cmp xchg jmp fsubrs out dec shr test xor loop into jge imulb adc mov add repnz mov pop aad mov enter push jmp pop std mov outsb outsb fcmovb dec or pop (bad) jae mov inc or add (bad) aaa jmp push call int (bad) mov add or add pop mov mov dec hlt sbb xor mov call xchg mov add adc imulb add mov pop and mov push and (bad) jg pop dec iret pop lret add gs repnz flds mov popf or mov stos lret sbb xor jo cwtl out or mov into xor out pop lods xchg xchg daa testl mov pop mov fstp cmp fwait mov js push or push xchg ljmp fsubp or sbb pop mov je lret leave inc and fidivrl cmpsl jecxz rolb sub dec imulb mov xchg or fidiv sarl clc xchg xchg mov pop (bad) sbb jnp inc sub or pop and shlb adc pop push add dec aam mov (bad) ja fdivrp inc or xor sub mov pop cld add push stos cmp lret popf lds (bad) flds jnp aas fist add push sti imul decb repz das adc mov frstor rcrl pop sub mov orb ljmp call es add leave cmc pop andl fiaddl push mov movsl push sbb shll dec adc rolb aad inc test ja jno dec fs inc or icebp mov or push (bad) mov jp pop cmp sti repz in sbb xor aam (bad) fsub and cmp and pushf inc add inc ljmp add sbb mov test movsb scas sub js inc adc mov mov xlat push mov cmpsb dec leave or mov ret xchg jmp (bad) clc mov repnz dec add add add clc aaa adc or mov ljmp ret orl and push mov daa call inc add jl imul pop push imul and push pop dec incb push cmp (bad) int push pop sti jns into (bad) xchg push out xchg bound mov push sub inc jb mov fnstcw xchg push jmp cmp lea cmp sbb xor mov movsb push repz mov sbb and xchg repnz cmp aaa inc repnz add or (bad) lret sub xchg idivl pop fcoml sub mov sbb iret cmp jmp push loopne idivb cmp (bad) push std mov icebp push dec lret fist pushf jae adc scas jo sub pushf mov mov jmp (bad) ja adc lcall repz sahf dec push mov add movsb cli lcall or xor jno jg cmc sbb xor dec movb inc push jge mov leave jb push add adc xchg pop xchg mov inc mov test jo mov out fmuls push dec pop shll fbld test push fsubs push lds inc xchg insl imul mov fildl xchg jb inc add jne jo or cmp bound out in bound xchg lret stos cltd push push dec idiv dec out das jecxz (bad) jno aaa ja mov ret (bad) jmp test out xor test jmp ljmp mov and inc pop jge push daa mov sti pop repz sub repz mov sub xchg enter fimull pop inc je jmp repz enter pop repnz xchg fnstenv adc adc (bad) fmul pop jns inc mov mov add inc cmpsl (bad) fstpl jmp lret jle inc xor pop xor loop xchg mov rorl add add jge (bad) lock xchg pop (bad) push cmpsb (bad) leave pop or jg adc xor loopne loope inc lret xor mov xchg inc inc jb xchg (bad) fsubs and popa cli add bound (bad) pop cmp xor daa add imull test and leave push cmp pop fdivr push (bad) push sub mov xchg inc in mov into cltd cmp stc or (bad) out lret push dec imul in mov add insb movsb mov and or lock push sub aaa sbb jnp add out or sub mov jbe dec xlat lock out std mov out dec rcrl sbbl (bad) clc test add sarb ret adc mov or mov mov inc mov shr xchg fsubl sub aaa outsl pop mov or (bad) sub movsl jmp ret fistl mov mov mov inc mov out pop inc jb or in repz or loope lea into data16 pop fstps rorl pop lock (bad) or ss cmp sbb cmp mov dec ret jge test pop mov out pop mov outsl jmp pop dec xchg add fadds into mov test insb fist fwait xchg movsl testl jg mov jmp pop ljmp dec pop lret fldenv popf pop shlb cmc ljmp aas adc in pop mov pop mov sub pop mov fldl out in pop mov fisub sub mov or les add sub push clc push iret xor lods daa pushl and add andl aaa dec cmpsb and xchg push hlt test movsb out andb pop and lods mov lcall outsl lahf idivb js jno cli adc mov mov inc test aaa (bad) sbb cld shrl adc xchg pop xor leave hlt rclb xor lret xchg scas mov loope mov push adc cmp fs lds mov je push in arpl hlt das out and fsubrs mov iret sub scas sub jge mov pop sti dec ljmp mov xchg xor xor push adc lret andb mov ret xchg fwait std dec hlt mov dec mov mov lock add ret sbb imul adc mov xor sbb dec das dec mov imul nop pop or lcall stos outsb das push fsubrl mov mov xlat repz and cmp lret fimull scas xor cmp push push movsl daa mov fbld pop mov cmp call xor cltd pop in repz xor mov mov mov and xlat dec and pop lods dec (bad) addr16 enter xor cmp out sub jle enter stos je adc ljmp lods std mov pop test idiv cmp shrl sub lock popa mov movsb imul hlt cmp lret imul mov mov push push inc aas leave lret xlat in es imul add xchg movl mov push jae movsl in lea cwtl sbb outsl pop mov bound dec or and ss cmp ja bound pop xor jecxz ja xchg ret dec aad sub lcall pop mov inc push daa and sti test movsb mov sbb or out mov or sub fiadd mov (bad) fbld or (bad) and cmp pushl insb jno loop pop outsl jecxz or lret cmc pushf add sti lret (bad) dec int outsb lret leave sub lods sahf mov xlat mov inc outsb cmc out xchg mov repz lds scas cld adc clc push lret or (bad) push aas and mov test add mov call fmul mov dec jb xor loopne lret mov push imul jno push xor jne and mov mov ret push mov sahf dec pop mov mov jg (bad) push adc xor jae enter jmp mov sbb jle xchg pop (bad) adc cmp pushf iret popf imulb cli mov push xlat lds cmp leave pop mov out cmpsb cs dec and pop mov ret jnp enter lock push pop xor repz and jmp test mov sub mulb pop scas ja (bad) lods sub add stos nop data16 sub push adc fsubrs xor mov cld lock (bad) and mov dec xor add lret jnp and and jb pop (bad) jb mov mov insb mov ja add cmp leave out out cmp lret push cmpsb jle les add sbb (bad) mov clc mov imul in fistpl jb and push push dec out cmp push insb es out push add imul sub clc lods rcrb call xchg sbb incb jmp sbbb aad adc clc inc xor (bad) lock mov stc imul ljmp jno xchg jecxz ficom inc loop out gs (bad) movl inc aas clc mov sub pop or iret add out outsb jmp fsubr mov mov in mov sti xor cwtl cwtl xchg out les neg xor movsb sbb repz xor pop loope iret sbb xchg icebp lods pop iret sub push (bad) ffree aas repz cmp or mov cmc mov jle pop pop sub fstps cmpl div xchg (bad) xor shld sti adc adc mov int3 adcl pop outsl out pop mov sti mov (bad) and xchg gs xor ret add out pusha push (bad) xor hlt jmp jmp push inc pusha jno mov mov mov mov inc xor clc notl adc aaa push mov popf dec mov inc cmpsl dec push or mov jae jmp addb pushf jge dec and push call sbb (bad) add or data16 add or xchg mov or mov testl lock push sub sub jp jge (bad) movsl push inc xor adc mov dec fs jmp xor out sub jb add roll sahf push std fistp insb (bad) pop loop cmc cmp cmp mov and mov loopne out mov add out mov mov inc insb jno or in aas lret cli fs ljmp movsl jmp pusha cmpsb sahf and sbb xchg mov das and pop sub hlt jmp mov adc mov dec jmp pop adc ds notb gs stos lds pop and out mov (bad) lret (bad) xchg lods bound xchg out sub or ds idivb sbb and jnp and lret or iret sub and (bad) movsb pop mov stc xchg xchg scas popf outsl push test sbb pushl nop jge sbb stos xor (bad) repz or and shrl call faddp imul movsl (bad) adc std inc mov mov jecxz mov fs xchg mov sti fucomp xor mov mov inc mov xchg jb xor jmp push mov xchg repnz cmp pop popa mov xor ljmp movsl test das movsb fdivrl icebp test leave popf call lahf cltd jmp imul (bad) out sub sub mov clc add mov add ficomp mov fidivrl push push cmpsb and sub sti xlat inc call add fdivrs mov ret shrb or xchg enter out add dec add mull pop vcvtsd2si xchg sbb mov call arpl adc adc rorl xchg out loope adc das sub push (bad) xchg shr lret arpl pop scas scas push pop jmp xor inc adc sarl mov rorb sub test in sub xchg and aas add cs pop shrb icebp sbb ljmp imul (bad) loope scas xchg aas mov jo and xor mov mov mov or xchg pop pushf scas imul test pushl mov sbb sbb pop in movsb mov mov push or ret in xor aad lahf pop loop or mov lret sbb call mov sbbl mov mov inc mov add push sub and sarb pop fidivrl jmp pop lret sub and dec or inc or je or push pop sbb push adc cmp xchg mov inc jns mov insb out daa sub aam (bad) ljmp enter loopne or out ja jp fs stos mov mov cmpl fist ret mov (bad) sub or adc testl int3 mov scas add enter or xchg loop shrb and leave xor mov pop loopne (bad) ror out xlat xchg or out cmp push xchg and cmpl sti dec (bad) cwtl aam mov mov scas notl pop out pop mov (bad) sbb pop lahf bound testl test mov imul adc mov dec mov sub mov inc hlt mov lcall insb xchg add push dec (bad) mov cmc lds fdivrp adc jmp mov mov and mov adc and mov sub and ret rolb (bad) es xchg in dec dec (bad) fld jp (bad) xchg xor jno xchg jmp daa jp sub aad add cs je push repz inc xchg cmp decb mov jmp pop jg mov cmpl pop xlat push cwtl sbb or rclb mov or dec leave out pop hlt jo dec xchg mov sti mov add dec lds es sti lret stos lret (bad) pop xor cmp add insl lret lret sub popf in add imulb xor out lcall into inc adc and dec cli out mov pop ss shlb and or inc jmp insb xchg adc lret or in and (bad) sahf pushf push insb lret ret sub jne jno xor ja push sub in test mov rclb sbb pop mov adc push lock and mov js fxch dec push lock fildll sbb pop rorl mov or xor test and (bad) ficomp idivb daa loope shrl mov test jge stos lret clc cmc in iret outsl das loop mov arpl inc xor jg test adc push push mov xchg pop cmp mul xor stc mov pop adc xchg jl push out cld pop add test adc push sub and sub lret std out pop ret mov pushf cmc fcomps loopne and fistpll mov adc dec cli xor or popa cld roll ja or (bad) or sbb les push cmc gs ja or xchg mov into sti mov daa jns sub push lahf (bad) mov mov clc call push in pusha and jle pop enter push pop mov data16 cmp mov notb xor cmpsb in mull pop std rcrb xchg add and and jbe sub je bound rcll orl pop cwtl and or out inc inc icebp sub ljmpw repnz loope mov out adc outsb sub jle jle add dec mov pop js into sahf xchg (bad) ljmp clc mov mov jle movsl jecxz daa cmp fstps scas pop je pushf pushl lods mov adc push fidiv push mov jns mov pop mov push jmp mov or cmpsl iret fstl sbbb cpuid mov lahf push stos sbb jecxz fcoms daa std out dec imulb xor loop or mov imul pop gs and mov fdivrs ror into shlb pop adc popf fnstenv and dec cmpsb fisub fs (bad) cmp mov lea mov dec mov iret imul ljmp and mov loope or fnstenv aas mov icebp xchg imull cmpsl jl les cmp adc pop cmp push add or cmp jnp dec ljmp adc mov ret pop int3 mov (bad) mov and (bad) repnz jno lods adc adc mov or xchg jno sahf popf push or push cs jle mov mov jg stc stos mov mov mov pushl test pop pushf jmp rcll into push dec stos ret mov in lret out cmpl sub (bad) or (bad) fistp push xor or mov mov decb fs push dec mov imul in xor repnz stc mov lods movsb mov loope das scas sub sub push scas fnstenv sti call xchg and and sub mov pop iret stos adc and mov or ja push xchg push inc push mov out push sub mov cmp mov out test and das xor mov mov (bad) stos out or push (bad) mov ret mov dec mov inc insl mov and sub fs cli outsl mov enter or icebp jp or pop pop fsubrl (bad) data16 push mov pop sub xchg (bad) or test cld aad add iret pop sbb cmp pop pop in pop and dec out not daa out not pop hlt jae jecxz cli repnz mov rcl iret dec (bad) mov dec fsubp mov mov mov ret adc sub xor xor mov dec out and lret js add mov xchg push fist test pop loop (bad) icebp add jbe scas mov sbb repnz fildl test mov xor mov stos adc inc jb lret xor mov sub stc neg dec mov jg repz cmc push test movl lods popf jb pop repz bnd (bad) ja js pushw pop test andl cmp ja push hlt mov jmp lcall sahf mov cmp out lahf out and adc mov movsl sub mull dec mov jae xor jne fs push out test cltd out jg cltd (bad) stos and ljmp mov xchg dec jmp mov cltd inc fsubl jbe dec leave test mov xchg mov or hlt ffreep iret jmp push int3 inc arpl sti test out pop aam push imull in jge jp test icebp subb xor (bad) and cmp mov lods std cmp inc sub sub jno sub cmp daa add lret and xchg sar mov fbstp jae jle or sub lds das sbb bound addr16 icebp ja in mov in mov arpl add mov decb jmp lods add sti mov pop xor cltd jne xor (bad) mov xchg je repnz fs jns mov cwtl mov pop mov xor dec loope in test testb movsb push ret aas das xor ret fucom nop shl iret sub icebp iret sub mov or cwtl mov mov pop ret sub loop jbe in pop xchg ljmp dec dec pop jne test outsl cmp test stos call xor or inc movsb pop jge int3 adc jb push mov out daa push ss call xor cmpsl repz gs scas or push sbb adcb and mov pop dec mov aam rclb push pop dec cmpsl sbb sub cmp lea dec mov outsl mov mull adc (bad) add and or pop in adc loope xor jge mov push (bad) sahf repnz ljmp out mov inc dec or mov sti in jle cmpsl sahf and ljmp pop sub jp cli (bad) repnz out sbb ljmp aas jns xor (bad) into push mov bound repnz jecxz pop inc shlb jmp scas mov (bad) lock dec inc xchg aad movsl pop imul ljmp mov mov mov loop cld pushf sub and bound aad sub mov das stc rclb sub notl pop xchg mov ret sbb cli dec bound mov xor mov testl or (bad) hlt adc xlat pop (bad) jne jmp or or in fmull jge sub jmp ljmp lcall mov sub push add xor add or sub pop and dec das sub push cmpsl cmp or mov fdivp adc pusha iret out add sbb dec inc dec cmp sub sbb movsb xor xchg (bad) lret xchg orl inc push aad sub add lea ffree add and fpatan loop inc jb xchg sub das add push js out mov repnz in ljmp dec stc in cmpsb sbb inc adc add pop or inc inc out rcrl lock lret lahf push xchg add push xor pop icebp ja arpl sub mov xlat jno push sub pop gs test stc fs pop dec adc movq cmp inc mov cmp ficomp jo sbb idivl or cmp cmp cli xor scas pop sub mov lods stos loop (bad) xor (bad) lahf mov push pop and fistp stos pop dec aas sub add cmp ret sub dec mov pushf add sub pop sbb repz into and ja pop jecxz daa lret jge scas or mov xchg jmp dec js inc icebp or jge xor mov and ret inc xorb jp data16 imul jae in xor (bad) mov jecxz xor add jnp iret popf pop aas test leave cli pop cmpb xor popa lock (bad) out loop test sbb xor add pusha inc or mov fistpll sub and xchg push loop lret mov repz or loope imul jmp xor aaa rcr or add xor dec ficoml mov adc bound sub jg xchg leave adc out sbb pop shrl or sarl scas fs in mov xor mov xor add cli mov ret and rcrl cli add daa mov xor cs movsb push mov sub ljmp mov sbb add cmp mov jnp pop shrb sub pop xchg or pop dec les test movsb mov mov out cmpsl mov add adc xchg lods cwtl fistl jp inc xor popf rcll out sub out xchg call testb into mov jg fsubl outsb les and faddl mov leave jp lock lahf clc sbb testb mov mov pop cltd imul gs sub ret or mov sub les jmp mov push std and int3 in mov sub xor or pop pop xor (bad) pop add mov fldl mov fucom xchg cmpsl sbb movsl inc fstpl pop pop or xchg or lea jmp mov jle cltd sarb das mov push xor jle or add fstp push dec pop mov inc xor int3 mov cmp jmp idivl pushf jmp and das leave pop fchs imul in test xchg adc cmp in mov xlat lahf mov or sub jbe dec jns jmp or daa mov movsl sti popf mov mov (bad) fs out xchg out xchg int lds rcrl mov add int3 mov rclb popf pop mov inc mov ds cs gs pushl scas and lcall xlat mov jecxz inc push push ljmp in dec jo mov je inc mov pop mov jnp cmp pop std nop mov shlb out bound je imul mov dec mov or xor es lcall jno and lods dec mov dec and dec pusha mov lock out sub cwtl cs sub test mov inc add fs repz pushl add lret fisttpll or fs out mov movsb mov shll (bad) mov sti or push push aas cmp push inc jmp lret or and icebp jns pop and jns xchg stos int sub adc cli leave mov rcl lret (bad) or mov dec mov xor cli pusha mov sbb mov xor insl jle stc inc lods push repz mov adc push jl jae jecxz fcoml pop (bad) into adc dec cld mov fs aam mov mov fwait ret inc cmp mov popa or mov (bad) jecxz or in bound sub dec and shrl fimull mov shlb adc adc or popa jg jmp mov lock jl adc dec dec sbb iret push mov push push and imul sbb and out mov ret mov cmp xor dec xlat mov xchg lret or jns enter mov pop ljmp mov or (bad) repz xchg adc data16 mov mov repz pop mov or fnstenv movsl sarb movsl outsb iret sub pop (bad) mov add (bad) xor adc insl push and and out cltd jns sub (bad) xor and sub pushf and or push (bad) pop sbb icebp pop mov (bad) jge cmp jg add call in arpl xor sbb (bad) sti or sub mov or dec (bad) add lods imul popf lock (bad) jle fldenv ret in (bad) das jecxz or push (bad) daa testb inc aad ljmp dec sub pop sub or sub pop insb lds cmpsl adc mov aad add sbb dec lret inc test mov or (bad) (bad) lret int3 addr16 ja push icebp sub or sar inc pop outsl xchg hlt pop pop fs adc mov ss inc enter mov sub out dec repnz arpl in in repnz test pop sub lods pop scas imul lcall and bound jnp lods std lcall xchg out out ficomp and mov repz outsb mov outsl repnz fildll test gs inc and cltd lret mov xchg push push mov nop mov sub decb push or (bad) minps jmp mov fstpt jmp repz imull mov decb (bad) adc test ljmp daa cltd in das mov or inc or mov xor sahf or dec sub dec sub orl or mov sub cli cltd dec aas mov out mov fcompl xchg dec stos dec mov lcall sbb xchg cmc xchg pushf popf dec outsl xchg mov mov notl mov daa int3 fs xor sbb pushf jecxz add call jg iret shrl pushf cs sub cld sub repnz (bad) cmp jg sub test xchg call je pop pop push nop pop mov pop ds fmuls sub mov out cmp jmp and mov scas mov test xor push std jle sub cli rcrl mov mov sarb and gs lods in cmp fdivrp sub add xor ss or sbb (bad) inc mov fdivrl dec mov dec xor xor xor lods daa call or mov dec insb lods mov lock mov xor cmp mov xor sti test into out push or jb sub hlt cmp ja test mov bound subps cmp jge inc push scas test adcb xchg jb mov dec push adc push add or push mov or insl inc dec les xchg jmp popf std adc popf pop xchg rorl test in (bad) js repz rorl (bad) inc mov sti and and lea movsb je xchg fcompl lret push mov add adc dec in out (bad) dec imul sti (bad) (bad) dec std inc adc (bad) xchg bound push inc adc fcomi daa adc or xchg pop ss inc pop jg out loop xchg jmp jg call out inc aas dec push cmpsb push daa jmp repnz nop fwait dec popa mov test mov sub xchg ljmp decl jmp sub mov add daa dec test mov mov dec in and xchg (bad) mov gs (bad) lock fisttpll sub nop cs aad mov xchg out adc mov sbb in inc add pop sub ja add mov inc add push jg (bad) sarl adcb and cwtl leave jle adc lret and (bad) or lret imul out pop sbb and lahf ror out lret add mov dec dec data16 inc das not xchg movsb push add out sub and orl movsl xchg std mov nop cltd (bad) sub and fnstcw in out mov popa dec push test mov jb add cmp pop in cmp adc jbe stos sub roll adc mov cmc enter xchg (bad) lahf cltd shr gs push sub lds push jbe pop sub sub inc into xor pop mov or pop sar cmp mov push xlat rolb mov mov repnz fsts xor pop leave pop add inc fs pop push ja sti lock in pop xchg adc fst cmp adc adc test daa mov push data16 jmp das sbb ja cmpl dec lock repz into or mov shrl rcl push (bad) adc pop mov mov push aaa cmp dec or push and push test jmp out cmp sub ret popf into jge mov lcall lods out lcall int pusha repz inc jbe ficom mov sbb shll cmc sbb xor (bad) mov fisub fdivrs sub scas sti jg xor pop cmovg add ret (bad) fs or aas jge push repnz pop jecxz mov mov jmp sahf xor cmp sub xchg jmp lock and (bad) in sti xor out neg pop xor and ljmp cmp shlb (bad) jl push xorb (bad) lret jge sub ret mov mov ror je out mov pop aas scas lds movsl sub int mov jo cli into jnp nop or xchg dec outsl out add xlat (bad) out (bad) andnps das std mov xchg jl mov ret hlt dec fs clc pop jg cli rclb in mov mov ja (bad) lret or lods inc inc or pop push xor add (bad) jge loop lret das mov repz sahf addr16 add xchg (bad) sbb pop popf data16 mov and mov pop cmp cmc mov pushf (bad) dec jmp (bad) daa in pusha mov xchg cs mov aad das lret xor or mov xchg sub jle daa out add push mov dec jnp push ficomp inc imul hlt lahf cmp jbe add mov insb jge ss test or loop test push scas std pop test xchg insb mov jmp xchg mov bnd (bad) movsl mov fbld jl adc idivl mov pop mov mov push ljmp or aad inc mov xchg jbe push or xor or jl imul dec xchg out test pop pop negl adc enter mov imul jbe jbe push out fist xor jns push pusha fwait orl mov jmp mov mov jae fsubr cmp test sbb icebp test jle sti xchg xor pop inc jno pushf mov icebp in psrlw jg pusha aad lret dec sub xchg adc and mov mov jno leave aad xor shrl out js mov push popf loope jnp add cmp outsb sti (bad) es sub stc xchg rcll icebp xor (bad) pop mov mov inc enter mov movsl cltd sti xor push and and sub cld loop xlat push stc mov jmp and ret sarl ljmp xchg xor (bad) in push jbe (bad) repz dec push call test fdivrs push mov les mov jae adc iret fist mov jns imul add sbbb push loope mov (bad) and add (bad) and or mov lret lahf jp,pn call je sti int3 nop ret cmpsb pop and lret rcll xor sub arpl jnp adc push add les and (bad) pop clc rorl push mov movsb into dec and aad iret adc (bad) mov lcall adc out popa dec xor dec push dec in test in cmp xor sub int mov cmp sti dec fstp and sti add sahf (bad) push cmp sbb in push jge cld jmp es and push ret add xor scas lret xor ljmp inc ljmp jo pop icebp stc add leave push insl aam and pop into daa pop stc movsl xchg jmp les pop imul daa push test add (bad) pop scas push pop push jmp icebp aad dec dec ds xor sub xchg enter icebp or push and or mov adc (bad) loop cld mov cwtl sub gs (bad) xor ja (bad) pop xor adc sub fistpl add add and pop mov xchg mov xchg leave popf sbb cmp ja mov or pop hlt sub xor add scas pop cmpsb rorl nop jmp sub lahf in xor push test and sbb sti add scas sub (bad) jle icebp mov lock or inc sub in add add roll xlat sti bound xlat lods sbbl or xor fmul adc ds mov or jmp stos jl push jle enter rcll int cmp push dec and mov daa fstl xor repz xchg pop mov push dec sub sahf pop ret (bad) jnp mov or xchg ss fwait lods xlat cmp shrb jle ljmp andl into out popf cmc insb lods leave ret or push mov inc sub xchg inc pop call push adc sub scas or nop mov fwait (bad) sbb and rcrl push jge test faddl fxch sbb mov pop daa test mov daa or jnp xor es lods add daa push inc push mov push and bound lret xchg out mov int sub mov adc push clc mov xchg cmc aaa imul xchg mov mov mov sub or mov cwtl push cli cmpsb data16 leave pop adc mov icebp jge xor sub stos pop push sbb inc mov scas sub icebp lahf mov push inc sbbl push lds push adc xchg push sbb xchg aam in mov push pushf push mov out bound test cmp rcll xor (bad) fimull dec sub notl adc sti xor in inc sahf iret push jo mov jmp mov ror mov pushl mov jge test mov scas xchg (bad) in xlat gs mov mov aas clc jns mov (bad) add dec dec insb xchg clc mov jmp clc (bad) dec rol cli add and stos daa iret add add sbb (bad) (bad) cmp jge cld cmpsl data16 add (bad) xor mov das out push (bad) sbb jns lods out push pop loop mov jb cmp cld pop cmp pop sbb nop inc cld repz push leave pop fs xchg inc inc or xchg xchg or jmp sub out dec (bad) cmp sbb cwtl sbb xor shrl dec jecxz mov sub bnd aaa pushf sub in xor and push out test fdivrp fs xchg arpl jl out enter daa jae movsb daa (bad) and inc mov iret mov jmp fimul jae data16 popl rcll ret nop (bad) xchg adc popf (bad) repnz fildll fldcw ret cmp jne pop xor xor or lret push in cmp fcompl pop jmp and fcomps jno add pop (bad) call rcl in out repnz roll int3 cs mov shl outsl mov push sub clc jg xor adc pop pop aad xchg dec mov ja lock sbb (bad) or inc unpcklps sbb mov out lahf xor cmp cltd and sub scas and fdivrl loope inc sub jle pop lret or stos and xor mov adc ja adc xlat icebp ja sub adc mov mov cmp adc (bad) xor stc dec rclb es cmp in das scas xor (bad) dec adc sbb mov xchg stc push imul pop mov mov out aad jnp mov gs ljmp mov roll push es mov aad xchg outsb lcall pop inc add daa lret pop inc popa or xlat ficomp imul imulb mov pop (bad) sti (bad) jg nop aad cmp cmp in cmp lock test jmp rorl cmp imul aad pop xor adc mov push sar inc movsb push cmp jne mov fmulp mov mov and and mov aad or mov mov lods out xchg std and mov mov inc pop and ds fildll jle sub test mov in fstl sub xchg dec xor cmpb lret mov stos outsl sub loop insb and aaa in push xor test mov or mov cmpb outsb bound ja sub or mov frstor daa add incl push adc sub mov ljmp into mov out xor xchg sub enter loop mov jmp cltd mov dec pop repz push pushf mov and or or rorl lret mov pop mov xlat out xchg popa add jmp mov movsl cmc (bad) jnp cwtl rorl (bad) fsts jmp mov dec imull xor sub and icebp cmc inc ljmp stc jne scas repz das jno inc movsb sub and push (bad) cli adc sub mov popf (bad) jo mov push shlb add jmp mov jmp lcall pop mov mov mov pop insb lods xor data16 sub cli mov xor sub mov push mov pop mov mov ret (bad) fdivrl imulb cmp xorb add fist aas jmp (bad) loop inc pop adc mov sub sub mov mov sub js mov shrl popf mov pop mov inc mov inc movsl inc stos or add add sbb mov sarl mov dec sbb out pop xor lods add adc out loope data16 mov adc mov repnz (bad) leave stc add ret aas and rorb rcll (bad) clc cs add frstor icebp xorb ret stos cmpsl jmp cmp fbstp ret cmp cmp sbb hlt dec push loop mov dec xor mov cli loop lret out inc mov nop sarl test mov lds leave dec sub rolb pcmpgtd das std push xchg mov out nop mov aad mov jno out imul repz add mov mov push imul xor jae mov adc ret sub add dec jmp shrl movsl leave jge scas xchg out mov test jle pop icebp dec inc imul js mov and daa mov popf push fnsave dec mov sbb in push popf push and sub fcoms add clc mov xor xor mov lea cld mov loop ret data16 clc push pop xor add ret fcmovbe sub mov xchg push push gs jb aam add jnp hlt or sub adcl inc pop jb out cwtl (bad) add cmp mov pop lret nop push mov les repnz mov jmp cld scas sub inc add inc cltd ret inc mov adc adc mov jo movsb xchg lahf mov fstps nop hlt mov mov xchg int loop adc xchg adc dec push xor bound push mov sub adc jmp (bad) cmp mov imul xor hlt into (bad) dec xor sub outsl mov mov (bad) mov inc imul jns adc push movsl cltd test mov jae xchg push mov push lret iret jp jae and add mov inc jmp sub in out pop negl pop adc or ja mov mov push jno mov push icebp out aas in xorl idivb lret xchg mov cltd jmp pusha add fstpt pop cmp pop xor inc vpor or popf inc insl inc xchg stc mov or cmp adc cmc loope jle mov insb mov mov push imul movzbl mov cmp cmp lds movswl test out scas sub lods out sub bound pandn xchg fcmovu xor mov lahf pop jne pop jns dec out push js,pn imul mov cmc adc push jecxz sub jns imul pop add out add test sub inc adc jmp scas imul test clc ljmp fdivrp fs stos iret (bad) imul sub push inc mov pop mov xor sub mov les dec sahf cmp mov sbb ret xchg (bad) rorb mov xor sti or push mov adc and add adc cwtl in cmc cmp pushw add loopne cmpsl pop lret das pop sbb mov jl mov into ficom inc (bad) inc call jp sub out adc in stos rcl insb push bnd pop jbe fsubs or (bad) repz mov jmp stc cs test lea imul mov stc pop xchg mov dec mov mov xchg imul cli fisttpl gs push lea pop pop jb mov scas cltd dec popa dec cs popa pushf sub jnp daa mov push lods fs add out repz mov xor jnp das fwait jb fistpll or xor inc sub shll fsubs dec (bad) xor in fistpl xchg out lahf call test cs rcll mov ret jb roll out loope das fsubs ljmp nop mov and sbb mov jns ficomp pop xor fadds mov cmp cmc jo mov jmp bound loope xchg mov and jno xchg leave cmpsb frstor loope pusha fsubs ljmp sbb aas clc mov adc push push add ja out push push jl sar loop fbld daa sti in sbb sub xor in mov gs idivl sub icebp std fs movb loop jne push mov push add leave dec or sub mov in push inc scas fnstenv leave icebp sub test (bad) or icebp cmp aaa loope inc iret lds roll test es dec or pop lods stc rcll movsb jmp xchg adc mov pop ret fmull pop ds fildll aas test mov aam (bad) fiaddl mov jge cmp sub leave pop subl mov xlat int3 sub daa pushf out bound push cwtl imul shrb loope lods dec lret fildl lock mov lds xor xchg fisubrl sub and add sub ds jl lret sub xor outsb imul mov loop jae cmpsl pop movsl jae in push or test in imul mov enter int jmp movsb out mov dec or mov add negl ret sub and pop repz or into jne mov jp cwtl gs in mov xchg aam ja jae mov lret pop jg aaa popf cwtl cmpsb mov daa xor pop data16 stos fcomps fs icebp mov lcall dec mov pop lret lock sub pop dec aaa and cltd clc repnz dec rol sub aad movsb jne insb sbb lahf ret stos loop mov and fcmovb cs cmpsl sub sub lahf (bad) fbld sbb cs mov push (bad) jno leave jo add and add cmpsl in ljmp xlat (bad) jb and movsl jns cmp fcoml jecxz adc pop sub leave add jns lods or xchg orb stc rol lret push lret xor insb or loop ret repnz xlat mov bound into sti mov stos repnz mov clc jl sti xor ret pop or icebp fisubr imul aam fs icebp dec cmp and inc cmp dec mov xor jmp add out mov lret sbb mov add sub (bad) or imul aam cld inc mov arpl fsts pop cmp and mov mov stc push jmp jae mov out das mov pushf mov jmp out mov jecxz cwtl mov mov jecxz pop test sub jo mov mov adc add mov cmpsb outsl dec mov push sub xor repnz inc cwtl test dec inc cmpsl decl cmp mov sub or fcompl test call dec cmp fldcw xlat (bad) (bad) (bad) cmp xor out (bad) neg jg add lahf xchg xchg and push sbb ret or fisubrl ss push jo fisub xor mov stos push outsb fldl inc xchg sub sub cmp lods cmp mov idivb mov movsl in sub dec pushf in adc add add jne cs cmp jge xor jns adcl fs xor mov cmp out in cli roll sbb xchg aam test in xchg or mov xchg dec pop not adc cmp orb fwait lss cli adc jge daa out and cmpsb call test je mov add adc fidiv fildll mov imulb sti mov sti lods xchg dec mov xchg movb mov push movsl sbb rorb mov movsb cs sub sbb mov repnz jns imul and fstp mov jg mov dec xchg ret inc je mov pushf jbe jb dec xor sub bnd jmp rcr jno mov (bad) mov mov adc hlt mov pop mov xchg xor pop into out mov (bad) mov fucomip fmull in insl in mov lcall jl frstor ds adc sbb stos mov test into jg inc dec mov add rorl aad stc pop xlat out adc mov stos and dec lcallw push cmp dec rcr scas dec or adcb decl mov ja pop add jge mov xor ljmp xlat jnp sub cwtl div mov ret icebp jmp jge fcmovbe cltd fsubrl (bad) mov addr16 push push ffreep out fdivr lret mov jp cmp mov pop not xchg push (bad) daa dec xor xchg add xor sub jp aam pushl dec jne adc cmp inc das out addr16 mov sub mov ret sub sub stos fs mov out stc das inc and addb inc stos fsub repz sbb jle jno pop fsubs adc xchg loope or dec repnz sub mov inc pop notb jno cmp xchg xchg lret push test xchg dec and pushl sub fs jne fisttpll inc sub idivb mov push dec in sub or add call int3 push lret mov sti mov add sub cmc lcall pop pop mov or adc stc movsb cmp mov mov jmp push dec mov xchg mov adc lret mov ljmp pop icebp mov pop xchg pop lods xchg push rcrl in enter movsb stos fdivr frndint leave mov cmpsb mov pop sbb or mov cmp js fsubp rorl sarb mov mov or sub xor pusha ret xor clc lret mov (bad) jmp test or (bad) les or and mov test repz mov jnp test and inc outsb cld movsb push xor cmp inc jl repnz jns sub ret outsl cmpsb pop push inc push ret cltd std jg dec pop cmpsb fldt ret push out shlb add sbbl bound mov lcall push (bad) jno sti scas int and rorl rep sub outsl dec lret out pop fild or pushf bound fsts lods mov pop or out pop add insb adc dec repnz sub add mov pavgb movsb mov stc fildll ficom (bad) lock xchg hlt cli loop fistp mov dec jecxz,pt pop (bad) mov sbb int3 push negb xchg jle mov jb or jo jne test jmp jns cmc and cwtl jge rcrl loop test rclb rorb fxtract pop and and dec pop adc pop mov loop popf xchg ret scas sub xchg mov les dec aad inc gs adc scas push push and leave fimul or mov clc rorl (bad) enter sub pushl or pop fildl pop lods cmpsl ret (bad) fildll and mov mov imul ret je dec and jecxz ljmp das shrl ss jp lcall ja (bad) adc jmp add sub inc (bad) xchg xor push int3 and xor das cmc adc push sbb dec sub inc inc mov (bad) aaa adc mov mov test or pop push mov pop mov mov jbe push jae iret or pop cmp push pop xchg sub lret or add push dec (bad) sbb shlb test sub mov mov adc fildll lods rcll pop mov xlat inc (bad) cmpsl ret outsb sub lds mov mov jecxz lahf xchg repnz mov push or and icebp mov out mov adc lcall jge or mov dec mov daa push xor xor dec pop cld jp shrb xlat mull (bad) scas jb add mov std icebp sbb or scas jge loop adc sub sbb xor in mov (bad) and loope sub jns pop movlps jmp daa pop cld push in stos arpl nop shll fldenv sub call das scas dec cmp jno dec cmc in clc xchg pop jl test ficom es sub flds jae lcall mov inc ret sbb lahf fwait jo cs div sbb add rcrl adc sub jg sbb mov xchg cli jmp jne pop push scas mov dec cmpsb cltd and fstp jnp rep test lock mov push daa mov jo cs leave jge mov inc and (bad) fsubrs lahf and pushw inc out outsb mov or xlat clc cmp sub lods out out bound out xlat xchg add cmp cmp iret pop mov outsb test adc mov cmp das faddl jmp ja repz in add sbb cmc (bad) repnz dec ljmp lret dec push mov and xchg mov sbb inc sub sarb daa adc outsl push jmp divl arpl xchg adc stos mov pop mov lret ret dec stc pop mov sub out mov xor cmp mov push pop mov rcrb je sub and test daa shrb mov mov jmp or dec cmp fistp (bad) (bad) push push lods cmc daa cwtl and jns and arpl mov add mov ficomp sbb sub xor test int push push shr (bad) movsl jmp je mov mov test in movsb adc cli sub add scas push add cmp movsl mov cltd push fisubrl mov test xchg push loop ret addr16 je add pushl xor icebp js cmp push das test std into cwtl repz data16 stc push sti pop pop jmp testb fcomps or mov and js out adc mov scas push and sbb lock (bad) outsb push fist jg add dec pop mov pop sub stos divb xchg or inc and std je es dec xor pushf sbb lret into xor gs mov sbb cmpb dec or clc push or or pushf or mov jb mov mov mov (bad) xor sarb pop in movsl cmc lds xchg mov int enter cmp cmpsl leave and adc dec shll jmp xor add xchg pop and push out mov xor pushl cmp mov and call out mov xor dec jae test test mov xor sti mov rorl in daa mov mov (bad) jmp in xchg movsl xchg mov inc daa add pop daa xor int3 out icebp adc sub add std in adc lods xor or ja push std and jne mov cli rep leave out in dec fucomip mov into jnp mov add cmp (bad) jne test mov call lds sbb or lock add test rcll pop jl pop in sti mov mov imul jp push cmp mov adc pushf add jle mov add jmp sbb sub mov pushf mulb cltd or enter imul sbb rcll mov lods (bad) pop clc jb mov shll adc sti cld adc cmpsb pop das jmp xchg ret out dec pop pop lret scas mov out dec and test xchg lods add ds in daa inc add sub inc xchg sarl repnz pop icebp ds pusha addr16 jae mov loop imul enter scas gs sahf pop mov div aad push fs out or sar repz dec mov xor mov xchg lods dec fnstcw pop aam scas mov adc das sub out xchg jmp jecxz jecxz cld imull sub add push fwait mov pop cmp aad (bad) cmpsl xlat inc cmp pop (bad) in xor sub jecxz ljmp out xor out popa clc sub cmp aad scas lret subl sub cmpsb xchg mov or sarb fldenv cmpsl lds push push push les sti (bad) sbb xor and mov push iret adc and jg mov clc sub cli and sub adc lret lock mov movsb stos xor lods movsl xor and pushf mov jo mov mov rorl mov mov dec pop je fsubrs pop (bad) mov dec test int3 dec xor (bad) imul mov insb in mov test into decb dec pop add pop cli mov in (bad) outsb popa or pop cmp mov jno sub mov sub mov cld (bad) in mov inc and jg out repnz je xchg out loope rorb (bad) xlat mov mov or add xchg or mov popf fnstenv fcmovu mov and and jmp mov sub ljmp jge aaa dec out sub add pop stc int mov push fdivp push xchg cwtl cmpl sbb loop push pop dec (bad) add cmp sti xchg daa stc sub inc stc aas cld cmc movsl push add pop sub xchg sbb lret mov pop and stos xor xchg dec stc sbb xchg out out sub jmp push xor lcall mov insb fld jle pop (bad) mov or push cltd mov nop out pop call or fnop mov pop roll jecxz inc fadd xor roll adc mov or add aad (bad) in roll adc xlat mov (bad) sub add loope sbb inc mov adc sbb mov and xor mov iret mov mov repz popa ja or xor sub or daa sahf push adc mov sub or or cltd das enter ja lcall pop dec aam mov mov sub cmp xlat bound jne negl stos mov jle leave dec stc test adc lea fcmovnbe or cmpsl (bad) dec xchg ss (bad) mov shrl das leave add jbe add idivl cltd std xlat fs idivl scas pusha (bad) icebp ja push cmp leave mov iret in mov test xor adc push pushf add lahf cmp stos sub inc imul pushf rclb adc lods repnz and xor inc push (bad) jl pushl or in sarl xchg test and out xor xchg mov sub add sub int3 and and mov jmp movb dec gs jmp jp sub xchg jnp pushf shr jnp mov outsb xchg or xor sub mov jnp mov xlat stc rorb stc mov xchg fadd enter cli int3 add dec ret sti or jle pop loop lea xchg jl jmp pop insl imul pusha pop sbb out in test pop add daa dec mov arpl cmc xor sub pusha daa jmp xchg or mov mov jg mov imul clc jmp sub mov adc xlat jp or mov cli xor jmp lods adc scas cwtl inc idivl lods sub movsl lret or insb lea inc clc xchg sub cmc roll iret adc daa xor fiadd loopne mov gs mov les (bad) imul cmp inc sub pop mov sti popf (bad) xor and mull lods push mov sub rorb outsl dec push sub imul test shrl test mov add iret add iret xchg pop in sub ljmp cmp push add std orl fist loope sbb dec stos fisttpll or out jg lock insb push push xor xchg dec (bad) mov xchg mov (bad) xor cwtl loope popf ficom push dec (bad) adc fildl hlt and fs cltd aas scas (bad) jo and daa xor test imul or rcll mov mov pop loopne fldcw es scas mov jno cmp jle mov cmp das ljmp xor ret adcl add cmp and icebp enter or xor ds out or cltd xchg adc sti and (bad) mov sbb clc out sub cmp clc jbe pusha idiv mov dec ds gs out gs mov jle in add sub cmp sub or scas cmp mov icebp in fs ljmp incb lret mov pop xchg xchg jecxz sub outsb or add jnp sub jg pusha or out clc jo push loope ds (bad) arpl ret jbe push ja jbe (bad) jb cmp cmpsb sub or les adc mov xchg movsb (bad) gs adc ret mov dec movsl aad dec push inc fldenv xchg xor add jno mov sub mov add clc sub mov sar push sbb out sub into lret and push add jne (bad) popf mov jmp ret push dec dec jg decl add cld fmulp fs nop hlt aas jmp divb xor adc sbb cmp negb (bad) sbb ror cmp xor add bnd div inc push das negl or gs sub dec and jl and pop sbb push or inc mov jg sub loope jle gs mov daa shl icebp stos cwtl in xchg rcrb xchg mov call es mov fsub loop sub lods aas lret lds mov pop fbstp in mov das shrl mov and jl aad movsl (bad) and sub or sub pop leave jg lcall or adc fistpll test mov push and lea aaa fucom ficomp sbb sub shll testl sub movl mov sti xor push test idivb enter mov mov (bad) pop mov das sub aaa fdivrs stos mov out sub mov repz iret out push fldl cs dec xchg pusha jmp aam add popa movsb mov dec lret pop addl out mov and leave out cmp inc mov jne jl shlb push sub cld jmp push push inc lds (bad) inc add adc jp daa jne inc push lods mov mov jmp in mov add xor shr xor hlt xchg sbb jmp fsubl xchg jne xchg adc cli mov or mov mov dec enter dec stos les sti dec sub sub lock and test (bad) lret xchg pop xchg ftst or cmp pop std push cmp mov push sub call lret pop adc sub pusha ret xor pop cmpsl in xchg lods xchg repz cli lret fcomp add cmp mov sub popa jb jns leave jl sub and loop rclb mov add cmp add movzbl push jl gs daa pop test repnz in push leave mov call mov lds mul adc adc xchg pop fdivp cli push daa sub sub ficoml scas std adc mov popf jle ret xor rcrb mov gs mov stos lret push xchg pop xlat stos fdivs and sub ljmp xchg test or fcmovnu xchg push mov mov aad jb sub jl clc insl xchg idivb jae lods pop imul pop lea adc inc les ljmp lods pop dec xchg push pop inc mov aad jmp (bad) xor pop loope jle repnz cmp xchg adc push push mov cmp lcall shlb inc adc add push jbe sbb xchg (bad) mov dec in in or movsl mov pop stos and adc add push mov imul push fimull test icebp pop pop scas cmp add out inc push adc sub jmp int3 lret adc mov pop stc or mov pusha jnp pop into repz xor push es sahf mov ret push je pop sti xchg push adc and pop into xor hlt ljmp cmpl dec sub lret pop daa out dec xchg cmp mov inc lret sub outsl dec rcr lods cld in pop or dec nop icebp dec cwtl in sbb pop leave loop xchg fs jmp out mov in subl mov (bad) (bad) or jmp int3 pop push pop mov fcoml stc mov fnstenv mov xchg xchg stos push pop in mov mov sub lahf push mov or ret imul sub mov mull mov fist call mov repz cld jmp lods push lret jp push (bad) mov int3 das push dec pop mov inc cmp mul nop lods daa add inc enter xchg cld add ret dec mov loop mov insb es sub mov adc rcrb pop repz fdecstp add pop ret sbb ror sub (bad) std mov ret loop in push fbstp xlat cwtl into repz adc or jmp fcompl int cwtl mov mov push sub leave repz std cmp mov mov cmp pop lds ret jnp ja test lods movsl mov (bad) cs push (bad) int3 pop test and in es xlat inc push movsb cltd and mov mov movsl and pop lret das lods scas repz dec mov xchg leave add and mov xor push popa cs jg jae mov jmp sti divb aam jne dec pop lret cltd cmp xchg shrl jne mov jne out push or in iret in push mov popa fcomps lret iret mov aaa adc repz sub ljmp fisubr in cld lret fs inc in unpckhps rcll leave ljmp jecxz gs pop out frstor test stc xchg dec out jge fisub or sub cld adc ss (bad) dec xchg hlt imul and or stos (bad) out mov (bad) sub add lea mov das scas dec mov pop in movsl imul out sub out out adc pop jno imul ret mov xor push je in outsb outsl mov adc fidivrl add xchg jle sti pop iret das shl lret jl gs out shrb dec scas into in mov sbb lret push wbinvd (bad) mov or or mov push inc mull jae pop mov push push rol add mov add cmpsb push aas sub dec (bad) scas call lcall mov xorl and and loopne lret sbb dec mov sub mov or add mov jno fisttpl mov xor dec dec pop mov loope mov xor xchg negb mov jecxz mov into mov shl add repnz lahf dec fcomp pushf nop add cmp scas xchg (bad) addr16 imul mov or add xor mov call mov add or xor mov mov dec xorb das das inc jp or fsubs and adc int3 pop lret pop mov jb jns call add test dec mov outsb frstor adc xchg cmc pushf push add pushf or jg fstl ds andl in leave mov clc dec cmp pop mov push inc aaa inc or fistp insl adc pop sub in xchg dec es cmp jp popf icebp mulb xor adc xchg or lret ljmp jnp sahf out mov fnsave dec mov call add aam lret xchg mov jmp daa or fstl sub sub lret rcrl inc dec cmc and stos outsl mov popf push cmp sub push mov xor jns scas mov cmp js mov cmc add arpl and mov outsl addr16 cmp dec cmp add (bad) xlat scas mov mov mov cmc cmp mov ss divl stos fldcw shrb clc push or mov loope (bad) jle push dec mov push add stos rep pop add cmpsb mov sub jae jmp jne icebp popa sub sub lods or pop xor fidiv repz push int3 mov xchg mov cwtl test xor into data16 cmpsb in mov in test stos sub adc jl push ds imul add cmp out mov adc add inc test loopne adc mov neg lds testb (bad) hlt cltd jmp vmovlhps mov in es mov inc inc push lods inc repz mov push jno dec test add pop mov or mov mov les add pop ljmp lret cli into adc push sar inc sub and out icebp push fs lret push xor shl in test arpl mov into xor xchg push mov test add ret adc mov push roll lods daa fmull cmp pop and out leave je das push xchg push mov xchg notl les mov das je rol cbtw mov jp sub addw xchg fs sub ret popf js or lret add mov xor fstps test aas ljmp cmp inc push in xchg push fwait sbb lock (bad) pop in push je sarl lret lahf and sarb mov jno gs sub lret loop mov leave mov rol sti clc into push fnstcw lods add lret sarb (bad) adc mov (bad) sub shrb mov sub icebp xor cli (bad) mov add mov mov lds mov fmul push test push (bad) divb push sub cwtl cwtl mov sti xchg mov sub dec add mov dec pop mov mov icebp mov sti pop int3 decl inc scas popa gs pop dec push jl push out fstps adc (bad) pop xchg mov std sbb adc mov adc (bad) out daa xor push mov cmpsb lret dec mov rolb inc (bad) jne xor or add movb leave dec jp lret es pop hlt push jne enter inc aaa lock gs jmp in out mov xor sahf and lock nop scas xor insl adc clc and mov (bad) les scas sub xchg sbb enter lds or xor sti mov in es out add and nop in imul int pop adc (bad) mov pop fs inc inc (bad) mov xor xchg jbe aad mov pusha arpl dec jmp mov or mov jl out scas cmp xchg mov jl enter lods sub xchg fnstcw ret or (bad) fimul push lcall test rcrb hlt mov popf cwtl insl and cmpsb push shrb (bad) mov jl pop testb std ret nop mov and lahf push stos add inc je repnz jne lods cmp xchg xor (bad) shr insb inc xchg jno inc fidivr movsb lret aad pushf rol out pop xor iret mov cmp cld mov test cltd and adc fwait mov cltd fsubl push adc aam in mov fidivl cmp mov add repnz test sub cmpsb mov dec jg xor and or inc lea (bad) xchg hlt bound push jb movb or test mov outsb jb mov xchg (bad) jb add lcall in fnstsw xor imul cwtl xchg stc dec or frstor lret jne pop dec add inc out inc mov mov aad push xchg xchg subl jbe cmpsb pop popf xchg cmp xor gs push out jecxz push push jns shr and xchg sbb xor je out mov iret rclb mov dec popa mov mov lock aas xchg rolb cli int icebp sub sub scas jns dec mov repnz fxch (bad) sub aaa sub ror int jo pop or xorl ss and test (bad) sub push xchg fidivrl jge xchg cmp and (bad) jne int3 fsubs jo aas mov (bad) pop add aad aaa es xchg (bad) xor adc cmp lock scas dec mov pop dec ljmp and or sub stos xor mov lret out push sbb pop xchg sbb sbb push dec xchg ljmp add hlt xor loopne sub (bad) lret lods (bad) mov dec jo std ds xchg cli xor scas into dec imul add sbb out fstl mov shrb xchg mov iret pop pop mov dec test dec scas mov dec sarl popa je aas repnz pushf test push arpl jb leave lcall and or xchg (bad) mov loope xchg jbe jl push push shl mov jmp jmp lods iret mov (bad) je insb sub add jb movsb cmp pop xchg sbbl (bad) daa js lahf pop and and inc loop test pop jecxz adc mov rcll popa push mov popf sbb push adc jge fldcw repnz jne aad jle adc push (bad) icebp pop xchg or mov add mov dec and jae jecxz jmp ljmp pop fstl leave inc xchg cmc mov push add xchg mov xchg repz ds out mov and or out mov popf fstl out sub ss dec pushf mov test cmp mov jo pop pop out fs js (bad) xchg dec mov decb in and mov arpl and or inc iret mov orl dec addr16 jmp test rolb mov cli xor (bad) dec inc sub jnp mov xor cld les enter or add sahf and aas xor and cs lods jecxz xchg bnd jb mov bound rcrb add int3 pop xor lods (bad) in scas dec adc test enter (bad) cmp add ds xchg jns dec sti mov lret xor sub jp xchg frstor add cltd mov jle push xor jge popf std cltd push sub sub mov or outsl push sbb push xor mov sbb and or (bad) fs mov dec add clc jle and test shlb xlat mov bound idivb cmpsl fstps jnp sub lahf inc mov add add or shlb leave aad mov jbe xchg test ds in inc mov lds mov (bad) stos mov mov lret dec sub sub (bad) pop or (bad) lret mov add out pop or xor cs xrelease ret leave shrl and mov or and mov sti mov mov add mov push add data16 mov mov ljmp ljmp adcl cmp and lret add rcr loope mov jmp test loope,pn sub cmp mov imul mov xchg mov sub mov mov pop jp sbb loop xlat push add xor xor cmp test test in push add aaa dec push sbb outsb rcrl cmpsb jle (bad) cmpsb into adc dec lods ljmp jl adc std lret dec lret or add mov pop loopne (bad) jge add (bad) mov push inc or lahf adc lret adc xor scas cmpsb cmc jle xlat mov cmp dec xlat pop sub sarl leave sbb movsl mov sar fdivrs mov add sub (bad) jb rclb stc dec fdivr cli xor sbb orl aad loop stc jecxz leave enter arpl dec jo dec or (bad) mov repz xchg inc sub sub pop mov fistp or adc and jbe sbb or aas lea lock andb cmp sbb test out mov push (bad) jne jl adc scas roll pop clc data16 cmp mov bound in loope or xor xlat inc test add mov (bad) xor (bad) mov (bad) repz pop std out or push and dec in or stos inc or mov lret lods dec jno fs (bad) cld repnz push inc sti or lds mov dec xor in add mov shll and popf pop push push xlat or add sbb fisttpll sub pop xor dec (bad) call bound and mov test scas popa add into lock stc mov xor pop dec roll or mov mov popf pop push test (bad) lea fiaddl or movsl stos adc in dec popf jle dec cmc gs daa jle push or outsl adc out ja push das clc or lds lret loope fistpll jecxz mov cltd cmp cmp or sub or sbb xchg push mov cmc sbb lret jg int xchg or sub (bad) or pop and mov dec jmp dec shrb enter repz adc adc or mov pop clc call xchg sub hlt mov ret pop loope or jbe lock into out lret jmp idivl xchg out push aam dec or aam (bad) xor (bad) jo jnp imul je mov dec sti lcall add cmc daa jno sub sub out out lahf push xchg lods lock cwtl lock mov in ret dec idiv sub xchg lds shrl lods jbe pop lret or movsb aas xchg (bad) xchg inc bound mov pop jno dec out aas cld and (bad) lods and mov das call (bad) push or push jmp dec and sarb inc xor pop pop into and mov jl jmp fs adc xor movsb sti fnsave aas or sti inc shrl movsl xlat rcrl jmp pop call rcrl mov adc sti cld sub or ret or xor decl add sub pop sub icebp pop jmp cmp add cwtl test xor push dec mov mov mov ss mov jp push mov leave inc in push (bad) icebp add ja inc nop js or sub lahf lret je or adcb dec mov test out lods movsb movsb push mov inc mov movsl xchg sub mov scas sub jg mov pop movsl divl mov ret jmp xor cmp mov hlt xor cli add push outsl repnz test rorb lods ss and jecxz test pop xor fnstcw les mov call cmp lods (bad) sub pop or dec pop dec (bad) repz xor xchg or sub mov pop test iret sub mov cli xchg push xor xlat nop and lret cs mov adc out das adc mov dec mov mov dec daa adc lret (bad) ja fisubl ret sti andb jae adc lods int3 mov add jl dec xor mov add rcr arpl dec fistpll int ds femms cmp outsb adc sbb and lods mov rorl push divb mov dec imul or test lds sti jae loope in xchg call mov mov xor out loop test sbb sub and (bad) or or daa movsb out mov leave add xor push dec mov lret movsb ljmp lds add mov in lds jg notb mov into jmp or push lcall add (bad) rorl fnstcw jmp loop xchg in leave faddl ja mov add mov and push xchg into inc mov fwait scas adc aad mov sub mov xor add xchg loope xor jno in cltd cmp or repz scas pop test push fs push dec add lahf daa (bad) call ljmp xchg nop xor (bad) ror cmp and cmp fs dec mov jb dec sub mov jb jle or and inc adc cs shr pusha out or stos sub xchg add and xor xchg and fnstcw cmp add and repnz fwait mov dec dec push dec mov je,pt cli cmp sub lret mov aas and shr fsubrs pop popf jge xlat je test cmc stc dec loop stc ja mov lret mov inc push cmc stc fld jmp jno imul decb bound mov xchg icebp call aam pop fdivrs and fbld fistp fs (bad) daa test sbb popf pop dec cmp mov clc sub movsl scas sub pop lods sbb adc sar (bad) in pop sub rol and loope push jno pop int3 mov pushf mov add (bad) mov jbe push hlt enter inc aam (bad) lret mov sbb sbb or sub inc sahf add jmp mov sub call orl sbb and nop xlat add mov xchg leave pop and das negl xchg sahf icebp and xor mov and inc das test xlat out (bad) (bad) mov ret jle mov mov adc inc jl loope sub or lods popf xchg mov ljmp jno shl xchg stc fsubp dec or fsubs or add sub ficomp mov bound add sub (bad) jecxz pop das or add fisttpll cmp mov xor sub cmp mov push mov and mov lret leave pop data16 jmp push sub andb lock fmull sar jmp dec xchg and sub and mov icebp jns fs cmp pop (bad) call sbb xlat adc add cmp xor or pop fnsave cwtl scas loop xchg mov push rol xor repz inc loop into inc ss movsl divl (bad) mov pop push mov sbb ds std add out inc or and fldt cwtl push or push mov or pop (bad) xor jmp and leave cmp or movb movsb call dec dec mov jo sub mov outsb sub sub movsl adc into sbb push popf push jl mov (bad) gs test fildll sub cld icebp mov notb jnp gs cs (bad) jp cmp mov fistpll (bad) cwtl popa (bad) je pop cmc ss cmc repz ret pushf jne loope pop aam pop aam popf mov imul cmp mov jo adc xor sub jnp adc gs int3 push cmp dec rcrl das sar int fildl dec ret mov xlat push mov int3 jle xchg sar adc dec pop xchg ss jne xchg mov jl in sub aas pop test jmp add outsb push mov test scas fldl2e and or add adc repnz adc ret adc (bad) mov das mov xor add inc dec and insl iret mov mov leave shrb out imul sbb dec push dec sti push push sbb mov aam pop mov add enter rclb pop or stos xchg ja push jno leave mov add cltd jbe push test and jl push mov negl inc add sub adc sarb mov icebp orl dec or ds (bad) xchg push nop mov dec stos sub (bad) jg outsb add mov jge les lret inc icebp cmp mov lahf mov loopne mov dec jne scas js mov cli sub shlb xchg pop scas mov or leave xor out xchg pop cmp leave xchg push sub sub or pushf loopne add sub clc in sti or lret pop ss pop dec jmp lret adc mov inc fldenv jno mov fs scas leave lret or sub pop mov add out mov or mov out mov nop addr16 xchg pop icebp pop ljmp pop jle inc xor xchg lcall pop gs repnz mov inc frstor (bad) in sub hlt mov dec mov cltd add xor fdivs imul loope (bad) shlb mov pop loopne fsubrl dec or pushf push leave mov adc fsub sbb adcb xchg and xchg sub sub push std data16 jo or cmp popf (bad) xor notl es pop lods adc jg xor jb mov or sbb popf xor or mov xchg xor out mov add mov jp fnstsw xor sbb xor mov out adc sub jge fcmovnb bnd sub jae dec (bad) jno add dec lret cwtl or adc dec jmp cmp adc add (bad) dec imul jmp jno gs pop in adc inc stc test scas clc mov test out daa ljmp cmp ds sub notl rorl inc imul cmp dec cld cwtl mov addr16 out add divl add cmpsb cs ss idiv lods sub pop push and repnz mov and hlt mov mov jecxz push jecxz add or std (bad) iret push jle pop cmc icebp stos scas adc (bad) add iret sub call lahf or ret enter jecxz leave mov aad push and xor (bad) add in jmp stc (bad) mov lods push mov push mov or pop (bad) mov out push mov or bnd xchg clc jns repz pop pop movsl xor sub dec push add push mov xchg gs ljmp sub call les dec sbb push idivb add sub pushf and dec mov mov negl leave jmp cmpsb loope notb ret cmp insl cwtl sbb into xchg notl jne in xor daa scas dec dec add inc out ljmp add mov mov aas lret xor test cmpsb jle mov add xchg xor loop sbb push pop pop mov sub xor cmpsb int3 daa lret sbb into mov adc notl fidivrl pop cmpsl or pop into cli cmp xchg incb leave xor dec rorl xchg push loope sbb jmp mov cmc and repnz mov push or xor stos mov and xor sub cs lds mov icebp sub rorb mov pop xor sarb (bad) outsb sbb add imul mov xchg idivb jmp cmp call cltd sub js fsubs push (bad) outsb (bad) and jmp sub (bad) mov pop pop addr16 mov pop cmp cmpsb sub cmpsb push push xchg out mov sbb xchg cli xor pop repnz mov orl int outsb out pop mov push mov das in pop dec ljmp xchg (bad) jmp xchg jecxz and mov inc test sub add (bad) and jae (bad) xchg mov jmp mov (bad) scas out dec out sub adc fnstcw stc std xchg xor loop or int3 test pop pushf cltd (bad) in mul pop jmp xor call push adc mov mov push (bad) cmp or iret out xor ret in les sbb stc and or mov bound pushl sub inc fucomi cmp fidivrl cmpsb xchg (bad) sbb push movsl push xchg add in sub mov in mov fxam dec mov pop pushf notl clc shll xchg test movsb movsb repz sub sub repnz mov test sub insl das pop lods in add loopne popf jo mov mov mov mov mov mov les inc jo sub pop cld inc daa xlat in mov or out sbb inc inc popf jg es test ret loope jb xchg das push aaa cmpsl add pop pop pop pop pop pop popf ret push mov and pusha xor insb sub add dec lds shlb dec aas out insb dec daa icebp shrl ss and mov push add mov jmp mov xchg adc in repz sub mov les cmp dec into mov rorl add push and and dec aad jb and add mov (bad) loopne out aad xchg fnstenv pop or mov pop push and inc push push dec adc push ret fnop ret push (bad) sub es scas and ja rolb push mov fldcw cmp add pusha mov fcomps les fdivs xchg inc pop mov and mov adc call push sub or sbb xor stc pop jns xchg (bad) mov jmp andl pop adc rcrb xchg mov ljmp test and mov cmp lock or inc xchg xor xchg mov dec xlat ret data16 and pop push sub inc test cmp mov add out xor clc jmp movsb (bad) cwtl enter scas sub sub cmp and cmpsb dec cs gs xchg and adc ret sub xchg (bad) loop sub movsl jg,pt add mov cmp pushl xor jg inc dec mov jb pop pop gs imull fbstp pop loope cmp inc pop gs sub or into aad mov stos adc dec xor aam dec sbb cmpsb stc pop mov fdivrs mov jb dec clc jmp scas lock shrl sub repz shrb add (bad) adc or push (bad) clc push mov into sub leave jne std and lcall out xor int3 aas int arpl andb cli std push inc cmc jns hlt scas popf pop outsb repz add pushf sub cmp jo shll sub sub pop lods adc pop jmp cmpsb (bad) pop stc push and mov mov popa xchg sub aas sub outsl sub jg mov ret lock cwtl jns push mov popa add mov xor cwtl es mov jecxz psrld divl js loop jne (bad) mov pop and das mov jge push lahf mov jb int3 push sub icebp mov (bad) jl cld inc and mov pop or mov popa lahf jp das into push mov out scas sub add repnz mov aad popf or ret xor mov (bad) sub pop (bad) push dec shrb and xchg add and add or sub mov or adc jmp (bad) xor dec (bad) mov sti sub ljmp and cmpsb mov loopne sub fimul popl sub fsubrs sub repz add mov cld inc lret inc sub les and and out or jmp xor inc jbe int3 sub fstl loopne jmp cs sub xchg cmp or movsb push mov dec loop add xlat movsl cmc clc clc insl lds shrb test movsl scas test leave in jp in icebp cmc jno inc pop mov or loope pushf movsb mov jge fimull inc ret ror or movl or cmpsl daa lock test (bad) stc lret pop cmp ret rolb sbb or xchg insl imul sbb sarb pop test jbe enter add xchg roll das lret add pop repz int mov ljmp pop and adc into and in ljmp jnp pop pop xchg fnstenv push enter insl xchg push mov jmp xchg dec mov aad (bad) xchg inc mov nop into cmp mov pop aam roll aaa and adc pop or aam rcll or add ror fcomip dec leave jne xchg push cltd int3 jmp lret lret and jecxz dec mov xlat test (bad) mulb mov call loop roll mov xor cs sarb (bad) cs fwait das out jb repnz lcall mov and stos in (bad) in push shr jp or rorb loope xchg movsb mov pop or or pop lock or mov outsl int xor cmp jl pop subl sub or leave push (bad) sub and add adc das pushf inc sub inc das faddl ret jl gs cltd test fidivrl int3 mov jmp mov dec cmp lcall lret test cmp sub icebp cmpsb mov xor in sti sub sub xor bound sbb fs bound ret or xor iret xchg jbe lock dec mov mov mov ret pop dec xchg add ljmp dec roll adc mulb icebp scas repnz xchg adc ljmp mov cli loop lahf dec icebp add mov and mov repnz push xor cs sub cltd int3 adc pop add xchg sub pop lret push mov loop push lds and sub js das ret mov fistpl inc or jle in or repz xchg add ds (bad) enter repnz aad pop add mov add enter xchg nop cmpsb int3 xchg xchg inc shl mov mov gs call dec inc pop sub push pop dec mov repz and mov test loopne push dec jmp and mov es pop jge push fstl dec jnp movsl jge jnp clc jne xor mov jmp mov pmovmskb lret cmp jge pop or fdivp dec and or cmpsb mov (bad) pop jg fwait leave jp lahf lock mov imul icebp dec pop imul add inc and into pop sub icebp lds movsl out lea cmpsb xchg scas pop cltd iret xor push mov ljmp int3 lret or mov cmc and mov fsubp jmp add or or ds or (bad) outsb in ret test divl xor push xchg lret jno cmpsl aad out sar push ret or and xor mov sub sub shll clc dec jne clc mov iret dec pop inc cwtl testl mov roll daa out stos mov loop add or or cpuid cmpl pop fcoms (bad) dec sub je pop push push push in movl mov in mov mov push js or ljmp sub mov push outsb popf fldenv mov (bad) shr (bad) and out fstp aas mov xchg loopne rcrl pop or mov shrb xchg push dec xor cmp cmc sti xchg mov jg fcoms sub sub loopne pop xchg lds mov xor jnp insb outsb pop lcall xor pop sub sub outsl ror add xchg shl ror cmp mov nop fnstcw adc ret push and mov pop cmp aas dec mov mov xor jno mov stc fcmove sbb sub (bad) dec pusha xchg push xor pop add inc cmpsl pop mov mov sti mov adc mov inc lret lods repz adc mov imul adc xor in cmpsl cmp jno mov addr16 jae pusha xor repz inc xchg loop mov shrl (bad) lds lret dec out aam out push mov rcll jecxz cmp call in mov xchg (bad) xchg lret or std gs add mov leave or and imul jg cmc ret dec jp stc clc lret aad sub jmp (bad) xlat call in stos mov mov cwtl dec call (bad) int rorb cmp stos adc (bad) mov rcl mov jbe add xor scas xor cmp mov sub mov xor xor stos and shll pop or stos push jne pop mov xor adc push add push out sbb in lret cs sub jecxz mov repz add out pop mov outsl fs scas mov lock jmp shr int jg pop xor mov dec dec (bad) ljmp xchg jmp push pusha sub or sahf adc dec das fnstcw lcall inc pop daa cmp sbb (bad) scas js xchg je pop loop jns inc loop push xor xlat add or mov daa dec or xor sub sbb sub jmp sub loope clc jp idiv jnp sahf xor dec pop adc jecxz lret fcmovu inc leave push and mov dec loope cs inc ret and repnz pop (bad) js add dec xchg sub movsb aas adc popf sbb push mov mov sub (bad) rcll sbb lret js out and popf jp xor push mov mov or pop clc bound (bad) fmull shll xchg out mov cli fiaddl or or cs movsb movsb fsubl inc lret pop xchg xchg scas in push lods dec inc aaa adc push ljmp push out add es mov mov fs xchg jae movsl push shll in (bad) pop fucomp outsb mov pop mov xchg mov mov xor aas call sub push out xchg sub jecxz push adc sub cmp sub scas and in notb pop ljmp lret or repz sub cmp sub repnz sub sub pop sub loop jae movsl xor jno jle dec jmp (bad) lret mov and cmp inc adc cltd mov jecxz mov push into mov or loope ret sub xchg sub gs (bad) or loope (bad) scas add jmp mov dec mov lret sbb scas loop (bad) mull and sbb inc fldcw mov repnz inc sub jnp movsl pop loop lret mov les dec out mov cmp dec cmpsl add bound cmc mov xor and add leave bound sub or les lock movsl ret push sbb xor xor jmp dec cmp mov lcall mov dec test stos call mov lret lcall movsl (bad) divps xor add insb ja dec jmp faddl dec adc pop movsb jecxz pop mov pop mov movsl pop jo divl and push xchg scas popf fstl mov adc push xchg fist push (bad) mov (bad) or push inc cwtl sahf loop mov xchg stos inc loope das pushl stos testb push gs lods aad fidiv addr16 sti mov jge js inc fsubs xlat xor and (bad) mov es out je mov div jp rorl lods (bad) xchg sub mov jae call push pop out mov cmp in mov pop adc mov leave xor imul ja,pt iret or dec iret and aaa push (bad) fcomi mov movsl jg sbb scas mov xlat pop cmp push jae out jns xchg ret loop daa sti ja call xlat (bad) mov sub ror fnstcw clc mov cld mov mov jecxz daa iret out icebp add sub push pusha push (bad) xor clc dec fstp adc int cmp sar adc fcoml push sub scas fstpl movsl inc in cmp leave fnstcw std adc push pushf movsb daa je pop decl push xchg icebp jle xchg jg lret xchg imulb cli push (bad) out jbe jmp (bad) daa fisubr daa mov (bad) push sbb pop add add lret mov notb pop jp call andb adc mov pop and mov fcmovb ret mov xchg or icebp test sbb (bad) insb mov adc sahf dec cs xchg ja test mov adc popf mov shrb adc and xchg dec addr16 sub fcoms push sbb mov or iret mov sbb mov repnz lret pop pop inc push loop and add xchg pop mov dec add add push clc decb push and jmp inc adc cs dec adc imul sub and mov aaa pop int3 test int cmpsb out ret pop sbb add shlb push push sub mov and inc pop cmp repz testb lret movsl xor sub fstl enter divl or stos and cmp push jp add pop xchg loopne stc mov sub jmp pop inc fildl and rorl stos cltd cld dec adc xchg jmp or sub mov loop iret sbb pushf xchg fldcw jnp into (bad) jbe mov sbb fs repnz (bad) or shlb cltd xchg inc test mov dec loop xchg stos and jl (bad) pusha imulb ljmp xchg push add arpl lret stos out add adc jb mov push ljmp mov pushl cmp pop mov cmp adc fs decb imul into call inc ret mov pop pushf inc and cmpsl cmp shll mov xor sub sub or and pop jg (bad) xlat or ja add stc mov sti daa add gs mull mov inc loope mov ficom lock loopne icebp cwtl and scas movl mov pop mov leave adc decl or push push push adc dec cld inc pop and (bad) push lock out fcoml fcmovnu jae mov push sbb add dec jmp lahf dec pop mov hlt inc inc sbb push jp jg mov das test dec jbe lods (bad) mov ret subl add arpl fisubrl negl lods pop out sub dec and dec repnz xchg movsb fisubrl sbb clc data16 and lret push rcrb sbb push fs jg out dec cwtl lret or sbb jmp sti jmp fs add dec bound (bad) or les (bad) mov out jne mov jle sbb sub jbe ds mov xchg ret dec xchg fistpll cmp and daa adc push movl into dec xchg push mov in or xchg andb rcrb test int and sub mov cmpsl sub dec xlat cli lret aaa pop out inc and xchg jge dec add or rcr int3 or sub sti loop xchg mov shrb (bad) das cs (bad) or mov sub pop in xor push jl ret ss cmpsl test jmp out sub out mov pusha mov ret mov subps out jl daa lock movsl pop lret out bound cmp mov dec (bad) mov or sbb jno call sbb xor mov xchg divb add ljmp pushl cwtl fwait popf rorl aam movsl mov in (bad) loop pop push pusha mov pop sub je bound lret outsl or repz push fisubrl sub jmp std xor mov xor xor inc jg xchg inc or scas popf dec cmp mov jmp pop stos push push push dec fnstsw dec out mov lea cmpsb inc loop sub mov aad mov mov (bad) ljmp dec ds pop in adc mov pop icebp clc jl sahf adc mov cld sub mov pop int jmp lret lds (bad) aaa das mov jb test mov jge fisttp sub rcrb je pop sbb dec lods sbb pop adc cmpsl jg jo mov dec push call sub adc lds or dec repnz sub pop fild or jecxz jmp lock add push cltd test jge inc fbld xchg dec icebp popa das mov (bad) notb clc xchg out out cmp (bad) mov in out sub aad sub ret and test mov mov sub or mov loope out push jmp mov or (bad) pop adc (bad) out cli rcr into mov loop,pn mov movsb inc insb or ljmp int3 or cmp mov (bad) jns xchg mov data16 pop cwtl dec popf dec mov inc xor mov pop jl push aam shl xor and add cmp mov xor call repz cltd movsl mov fstps lret outsb adc aam (bad) pop aas xor cli clc les xor xlat mov repz jnp mov ret call push cmp sbb fiaddl sub mov fucom test ds loop fldenv push jecxz jb push in out jne,pn pop xchg xchg sbb add mov imull loope xchg adc out mov (bad) movzbl (bad) cmp aaa add sarl cmp inc sub push inc (bad) jmp icebp outsl inc sub cmpsb outsl and or dec cmc subb rorb movsb sbb mov test rclb scas mov sub xor xor sub cmp pop aaa sub add xchg dec push movsl mov stc ljmp daa sub js mov add and inc sbb std cltd popf fisubr call lret decl jae inc leave add cmp or xor daa add ja sbb or sti adc xor out outsl sub or (bad) into lahf (bad) imul mov out xchg push xor dec jne inc dec jbe pusha push mov mov into mov test lret xor insl fs and sub mov and add nop mov xor test push aas dec jmp dec add pop sahf (bad) sub or cmpsb sbb dec lcall mov std out das lcall out or lea add cli mov dec daa cmp mov fdivp ret pop icebp inc imul lret adc test shll add cmpsb xchg int add adc xor push mov in xchg rcll mov loop test xor xchg fwait xchg scas sub sub in loope push and das add and fptan popa outsl pop (bad) inc lcall mov and out push sahf (bad) fimull and sub sbb cmc ljmp js push xchg test add ret inc sbb add repz mov (bad) jae adc pop jle and jle fidivl jp xor cmp pushl xchg fnsave cmp or popa loope mov mov pushf into dec fstp add xor ss mov dec dec decl mov mov nop cmp mov popf (bad) push ljmp scas imul popf rcll lock in popl cli mov xchg test dec lret (bad) es mov ret jg in clc mov jg mov pop sub sbb loope test lock fs pop xchg mov icebp or mov bnd or mov add add and fldl popf loope ret repnz lea or push pop xchg mov rclb dec loopne sub pop inc movzbl inc in test in icebp rclb xchg (bad) fnstcw cmp mov dec scas mov pop cmp xor lret or sti lea fidiv cmp scas mov jmp nop sub hlt sarb xor jecxz cs cwtl jecxz lock lret fsubl cmpsl dec mov pop cltd lret (bad) or and rcll test jmp clc jge (bad) (bad) xchg dec pop push sub dec fstps fdivl xor adc shll or push into sbb into insl xor stos xor stos (bad) loopne push loope (bad) mov sub sub out jle dec jle idiv bound mov lret test stos mov pushf jbe,pt data16 push test mov int push out iret ss sub test xor sbb scas lret lds or mov popa jmp or and dec (bad) add test mov (bad) and sub push mov sub gs test aas lahf in jge dec cld idivl ret push mov ret or sub xlat xchg mov imul add mov ret mov dec inc dec mov mov das iret inc pop cmpsb dec imul sub push xor add lcall xchg dec mov jne notb and ret adc leave jnp (bad) xchg lods ds jecxz lea scas (bad) (bad) ljmp mov lock ret cmp fdivrs sbb sar enter mov sub push mov push mov lea sub dec mov addr16 sbb jmp cli mov xor jp push test sbb imul or testb in fldcw jle pop pop push inc xor nop jo leave lahf pop adc cltd inc movsl nop or sti pushf bound pop cld (bad) ret sbb (bad) mov ret sub icebp mov gs lock xchg enter jno gs mov jmpw push es loop (bad) daa (bad) push sarl xchg xor ret shrb mov imul mov jl fildll and testb mov mov mov int3 mov in test repnz movsl aas fucomip cmc lahf inc and repnz lock xchg sbb pop push inc jmp scas insl inc add test dec frstor and mov adc repz xchg scas not je mov repz aam (bad) ljmp or mov jg negl inc das mov mov orl repnz std push sbb sub rol movsb xor adc mov add xor sub xor or add aas xor mov (bad) clc dec daa pop xor sub in dec in jecxz dec ljmp (bad) jmp xor mov dec icebp decl pushf mov (bad) or into push or xchg inc imul leave push pop leave (bad) fcmovne sub out or push cmc xor out jp mov or (bad) dec lds jae fidivl push aad add mov imull and mov lods xchg mov mov mov xchg jae and cmpsl jbe pop xlat scas fs mov and daa (bad) lret jle movsl lcall mov xlat xchg mov pop (bad) in adc aam pop notb sub test imull in icebp jge fs stc imul repnz mov je out leave repz adc (bad) (bad) sub scas mov (bad) repnz or mov cltd pop cmp cmpsb inc xchg (bad) test mov lret mov (bad) mov and das jo xor sub and cltd add stc xchg shll aas lods cmp sub popf jg or js cmpsl stos fistpll fcoml sub xor nop ss push fldl cltd sbb xor cmp dec xchg cmp les pop (bad) jo in mov out test shr (bad) outsb clc decb in push add or call mov lcall mov dec mov sbb jb and cld (bad) pop cmp arpl sar popa xchg std inc dec (bad) gs xor pop adc xor and icebp sub je (bad) push adc les and pop mov stos dec (bad) or cmp jl movsb in pop fimul clc stc or out mov xchg lcall push cmp dec push (bad) rcrb xchg in sub movsl repnz ljmp cld fdivl jno xchg fbld out int sub out lods ss xor cmp sub xor and movsb imull sbb mov xchg das inc or mov sbb lret mov cmp xor imul sub pop mov xchg mov cltd lods lcall mov mov lret and xchg pop mov mov add mov mov sub pushf mov lret push jmp js mov mov or (bad) push mov ret pop mov xchg adc jecxz lcall push out dec out insl dec movsl mov mov ljmp jb clc inc test push adc inc xchg adc or add mov call clc sub jns cmpsl xchg cwtl aad mov scas push (bad) sti pop push frstpm(287 or push loope jmp jg mov pop (bad) push dec cli mov loopne arpl mov or jns and cli add jo xchg adc (bad) jnp (bad) insb mov insb ror or sub ja out mov push leave xlat inc jl cmpsl xchg cld arpl gs xor or ficom ja push gs jmp ja dec add (bad) ffreep push cmpsl std adc loope xchg mov add jae test test xor dec cs or mov lods mov jnp data16 ss cwtl ret std lds cmpsl sbb lret ficompl les ret and cltd out fist leave jl and pushf cmp adcb cld sbb gs out xorl shr pop arpl mov call lds daa fsubl pop lds xor and add sti mov pop sub mov mov fs dec mov lds add jmp cmp (bad) ljmp fs into cli mov mov push xchg mov add out pop xor inc dec mov mov inc icebp cmp xor and push xchg ljmp sub cmp or xor (bad) rclb nop jle adc adc or xorl cmp sub and jno xor jne sbb and jle pushf jecxz add decl ret orb mov dec (bad) sub or add ret sahf frstor cmp aas mov js pop inc mov insl call movsb arpl dec sbb out test scas fnstcw out mov movsl pop mov dec sti xor mov mov pop and or mov loop cld in mov ljmp daa ret inc mov hlt mov adc shrl jge xchg daa xor pop test lret pop ja insl jb mov into dec fcomp jle imul lock das mov rorb int jle (bad) sub adc jg xor (bad) out into jmp mov lods cmp pop adc or stc mov (bad) frstor and jmp out (bad) lcall mov jmp ror sub ds pop fidivrl lahf sub push dec and (bad) sar sub nop mov icebp xchg aad out and scas pop aaa js lods (bad) jo add jge out out sarb sbb and lret add (bad) cltd pop lods jbe mov fnop lods je leave push mov cli pop ret mov ret mov mov sub rorl daa imulb hlt shr repz mov push and nop pop test into xlat dec lret push cmp xchg scas lock cmpb into call in movsl jno pusha adc add hlt mov jmp repnz movsl movsb incb pop lret sti pushw fsubrp repnz sub adc push lret sub sub popf int3 cltd mov inc sub hlt mov dec stc pop cltd and jmp push (bad) icebp add fnstenv clc cmp adc lock iret lret out push inc test pushf cmp in fsubp out cli enter stos xor (bad) das mov add fnstcw pop dec jno dec inc or rcrb xor xor or xchg mov rorb repnz jmp fsubrs fcoms enter dec sbb test xchg shrl and enter inc and mov jns rorl mov mov sarl jecxz sub sbb dec lds push sti out dec mov sub divb cwtl push cmp cmp jmp ljmp imul dec adc fs lods mov push mov sub xor pop cld (bad) push idivb mov jbe,pn stc jp jmp pop (bad) icebp jecxz ljmp mov jle in daa test sti mov push test gs push in movsb mov mov ret or ret aam add mov scas int xor push jns das pop loopne jmp xchg adc adc jmp stc pop mov mov jmp jle rol add adc push adc sub xor mov push mov out out sub dec pop xor arpl das lods and sbb fisub rol (bad) lock lret sub das mov jmp xor and test adc in dec popf inc jns xor xchg test dec fsubl mov les (bad) repz and xchg loop mov add fdivr int3 pop add sti lret lea sbb in adc (bad) pop mov jle (bad) sti arpl adc sbb ret dec push rorl mov fmuls icebp mov insb mov loop int aas je icebp add push (bad) mov xor inc mov das lcall mulb sahf sub enter scas in sti push jns dec push mov cmc push mov dec fistpl mov lret fs adc mov xor incl out mov pop inc add inc inc das orl jnp or sub and mov (bad) lret sub outsl add mov and sub mov daa fistp into movsb jb add adc jle xchg fldenv mov xchg pusha mov fcomps outsl shll or cmp rcrb iret jae push or pop dec sahf pop lock lcall xor cmp sbb sub out imul out xchg aaa fadd sbb xor push dec jb inc pop movsb les sysexit inc add push lea rorb cli or jl or out inc or add pop movsb (bad) es data16 adc sub mov ja mov add repz pop sahf xchg mov gs xchg dec sbb dec xchg icebp cld sub test out push pop mov ljmp xor hlt add cmp mov ds scas or mov inc fmuls dec ljmp fldcw mov scas popa arpl shrl test addr16 movups sti mov or imull fisttpl adc push adc daa xor or xlat xor dec out js popf sbb stc (bad) dec inc mov lods xchg call add xchg aaa pop xchg pop jnp push out int dec sub mov fdivr ret cmpsb in leave mov xor mov jl (bad) jne ret jge jns sub or pop (bad) pushf popf stc daa mov pop mov mov and (bad) jae pop push (bad) mov iret xlat xchg cmp or sub sbb jb daa shrb pop add mov out adc jmp fs out mov push xchg (bad) and sub or xor sub mov add (bad) imul out cld cli movsl mov scas cmpsb aam dec lods dec addr16 ret add mov js adc and scas jbe outsb mov inc xor pop and adc xor mov sub stc jle jmp std dec stc xor pushl mov or imul ljmp sub outsb sahf adc sub das out cmp adc daa aad ret mov add popa jl xor inc jp mov (bad) ljmp xor (bad) mov push pushf loop ja mov in push mov pop xlat bound adc addr16 sub icebp cwtl (bad) mov leave xor je out xchg cs or ja and inc jmp xlat mov (bad) dec push or xchg xchg loope push mov lds mov xchg xchg push adc ret jp repz or inc push pop pop mov lea bound fist fcoml cmp jmp repnz fdiv out cli sub jge dec ljmp push movsl out mov push sarl lcall pop xchg xchg outsb pop (bad) mov add into stos xor jbe repnz out mov jge outsb sub fcoml xlat inc inc sub movsb daa xchg jge dec add pop pop outsl or mov push sub jb dec mov das (bad) add xchg pushw pop repz bound inc inc enter or iret xchg cmp xor mov adcl std mov push sub ret movsl jnp jbe loop lret fsubr xchg cs mov mov bound test and mov fimull stos hlt ljmp xor mov xor inc mov pop test pop pushl aas (bad) dec mov dec mov ljmp dec aad mov into cmc lock popf pop sahf repz pushf ret test inc mov fcoml ljmp inc faddl and mov fnop dec push sub dec int3 popa iret popf push jo and xor and enter out cs ret jne les and mov xchg loop xchg jecxz and mov xor dec mov sub andl xor cmc repnz push lret fwait lods pop sar int3 out out lahf int3 mov mov sbb subl xchg insb mov aam icebp (bad) or mov popa dec out scas pop stc call in cmp daa fistpll inc sti mov (bad) pop adc inc mov ret mov xor jmp cli negb scas sub lds and add sub mov ror mul and push xchg xor sti mov xchg mov and add cmpsl mov push pop repnz (bad) mov iret push flds cmpsb cmp (bad) inc mov (bad) jno pop mov xchg iret mov int3 mul mov adc or jg inc mov sbb popf data16 daa add ja inc sarl dec push mov mov je imul pop jbe ret pusha xchg scas cmp jecxz (bad) push pop negl daa popa mov sbb scas xor dec mov inc dec cmp xor fcoml mov ja jp xchg (bad) outsb cmpsb or adc ljmp negl sahf xor (bad) xor out cltd pop cmp xor adc aad iret stos enter jns jnp (bad) out loope add sbb pop mov test leave push push jmp lcall test icebp sub push call loop sub mov and xchg cld pop pop out pop leave or add popf push es dec push inc lds out lret dec dec stc ljmp rcr cmp sub sub loope idivb mov mov pop jmp pop repnz mov icebp dec ficom sub xor jg cs jne mov xor fisttp xor pop test in push mov (bad) shrb jmp fstl mov notb pop pop dec and or mov out mov xchg mov sub cmc outsl fnstenv imul cli int ds or push dec nop stos sub out gs test lret dec pop mov add push pushf and push leave pop lret imul movsb test mov cmp fsub sbb mov jmp xor sub loop,pt fistl sub scas repnz mov xor ds xor popf outsb out js xchg (bad) enter leave push jo ja ret pop push aas sub pop add daa (bad) pushf jge and pop ljmp mov rol sub out gs out xchg out in imul dec std mov aad add pop inc push mov dec fisttpll and cmp test xchg movsl xor add jle jo mov adc or dec pop scas imul clc (bad) mov nop hlt (bad) or outsb loope cs sub div outsb sub sub pop ret pop (bad) ljmp out cmp mov xor push mov and ret ja (bad) jb jns cmpsl flds icebp mov adc pop xchg mov out aam scas in jbe ret cmpsw sbbb push xchg pop notb lret mov xchg loop dec pushf cmp lahf fdivp loop divl insb bound dec sub pop pop cli fs pusha insl pop xchg or pop sub test test adc outsb inc cmpsb dec adc cli test xchg pop cmc mov jle insl mov jecxz inc push cmp fs jne dec fdivr (bad) shrl lock sahf xor jl mov iret mov das sub in in movb add icebp mov or xchg mov test or cmpsb jo test fstl rolb sub sarb xchg xlat push mov data16 dec jmp int cmp test clc fcompl xchg xchg repz add and xchg stc jns test repnz sti sub pop movsl inc rcrb cmp lahf into ljmp stos mov dec clc pop js fidiv pop iret das lods lret in mov mov add add pop mov push pop mov imul or xchg fnstsw mov xor jne mov push adc outsb lods (bad) mov jg jmp jmp rolb xlat mov cld sbb pop push and sbb bound dec sub into loopne mov push lea js gs adc test fildll je pop in adc xor cwtl jecxz mov inc pop pop pop cltd aad test dec add jmp lds jge stos mov xor cwtl sub sub mov and jo sahf dec jno xchg das cltd loop sub int3 push ret andb ja jo jmp xchg add jb lahf das mov test gs cmpsl mov inc pop test dec mov xor push out insb xchg sub call xor loopne iret add arpl subb push popf adc mov cs mov idivl pop mov jno sub sub test dec or pop popf jmp jb lods lods xchg int scas js fistp stos sub or divb movl lea adc xchg stos stos mov push lret pop out mov and std sub sub push pop xlat outsb fisttpl adc sub sub out push imul icebp rorl xchg popf xchg sub rorl cltd and sub into pop repz shrb fisubr mov xchg push jmp les mov lret xchg sub ja fadds push add xor or fwait mov bound sub push (bad) leave icebp js ret inc push mov pop shrl add sti mov push mov rorl insb push and mov or push loop test cmp leave mov out jmp test into pop stos xor stc test xor and and jmp add fistp and lds rcrb popf adc cld fistl xchg add mov xlat (bad) loop pushf das out xlat mov sub xor stc ljmp pop xchg in jge xor out stc sub loope and xor jl xor lods dec (bad) mov sub adc jb lahf int3 xchg xchg ret lret fs or or gs and and cld lcall (bad) loopne jmp (bad) out cltd ret das cwtl lcall sub mov adcl ljmp jnp xchg add xor mov addr16 xchg std push mov xor jae mov ret sbb fsubs mov cwtl pop sub mov mov test adc lret xor aad add jb sti loop jae adc cwtl xchg divl popf mov sbb jle pop pop sub adc add pop movsb or push jge sbb arpl out add or mov ljmp xchg or mov xchg cmc jl push ret movsb loope push jmp mov jns mov dec or push or mov mov or cmp call inc push mov stc imul fsubr and ret pop inc mov and aas xor inc mov clc sarb adc aas add ljmp pop xchg mov adc adc push (bad) sub push jno pop fsubs outsl rorb repnz mov ret mov in fldl (bad) mov push jae das subb cmp dec jb imul adc call clc or jp and xchg into cwtl add or lods dec mul adc sub fstpl pop push jg addr16 jge xchg ljmp mov pop or lret mov stos or adc (bad) dec out mov and rdtsc (bad) pop sub sbb in mov dec push outsb add (bad) cmp and mov (bad) icebp lret aas dec leave and sbb xor pop movsl jle stos lret xlat add shl pop sub push or ret inc mov jl and pop dec call or sbb cli sub fldcw stos adc fldl test and (bad) aad enter leave lods sub lods das pop scas cmp int3 das cmc bound lds lret mov jmp shrl jmp cmp fildll dec (bad) sub dec repz jno adc and out clc (bad) in cld rcl lea ljmp push or push lds jmp repz pop sub mov or mov int3 mov dec xor sbb jne mov dec dec decb and sub dec or nop test leave jmp cmpsb sti or sub stc inc mov jb leave cs sub cmp push (bad) or stc dec inc add jge lds or aam jmp repnz shrl ja push or rclb or ja mov iret push mov iret loop xchg sti lea dec fnsave or mov push jle lret push jb rclb daa ret or nop and repz push sub jmp sbb push int or mov push pop add mov dec stc pop mov rolb mov insl dec add stos adc pop mov and inc dec call lea mov inc ljmp in mov pop push pop mov pop mov cmp sub inc and nop pop in cwtl push mov dec xor imulb adc sbb je pop dec jb jge (bad) pop test xchg cmp jmp mov xor icebp iret sti push sbb jg xchg int3 aam sbb inc add das sbb cli repz sub jo and cmp pushl movsb or aam mov stos repnz xchg xor mov (bad) mov rclb mov aam push repnz leave divl and push aas and jge xor pop sub pop sahf (bad) jno daa xor inc mov mov leave add out pop sub sub sub out dec test fisttpll icebp lret lcall (bad) ljmp mov repnz pop imulb clc pop xor into stos pushf repnz or dec lods mov push stc popa cmc mov dec clc imul (bad) and mov or shll or push mov push add dec neg bound int3 mov dec mov jbe jo shll ret xchg jno inc add mov icebp sub pop clc repnz jno inc sub std sbb jmp outsl xchg push fsubrl jg push addl jnp jl cmp dec (bad) (bad) ds into add mov ficoml and movzbl mov lods scas dec mov xor (bad) adc repz inc repnz inc cmpsb cmp push adc pop out fmuls sub les pop aaa (bad) daa into jl adc negb test inc test mov xorps cmp pop aas push sahf and mov mov lret jno dec icebp movsb mov (bad) pop out dec xchg je and aas divl dec sahf xor mov (bad) popf sbbb hlt repz dec cli sbb mov sbb lret push icebp frstor xchg mov lods pushf and aas int pushw sub jle jno sub sub mov fsubrp (bad) mov cmpsl and jmp mov sub push pushf xchg cli dec (bad) xchg push ret mov loope mov scas mov fwait scas movsl pusha jg stos inc xchg aaa adc roll pop pop inc cmp push test and mov add inc mov mov jmp push (bad) and cmpsl cmp or das scas sub imul xor insl mov xor dec shr mov inc lock movsl xchg and shrl or sbb sub xchg (bad) mov or rorl pop sub xor pop lea cld cmp dec or sub icebp xlat gs jmp or sahf inc ret daa out xlat gs mov or jl rolb dec lahf dec add int sub xor in cwtl lcall push rcll jmp pusha mov lret ret mov rolb mov lret xlat data16 das push and bnd mov sub jle popf adc sub rol sahf sub cmp or ret push adc xchg mov jge dec mov test sub cmc xor inc aaa xorb movsl loope inc outsb cmp dec loop (bad) daa imul test fldenv pop (bad) xchg add jge outsb cld xchg leave or mov lods push xchg in loope loop cmpsb push sub mov repz mov ds gs movsl add sbb icebp clc ljmp and leave lret imul iret mov repnz xchg popf jmp cwtl hlt sub mov push mov data16 aam jmp and ds fmul or push or loop push cmp bound (bad) sarl or lret movl jmp mov push je test mov xchg adc pop dec les cmp xchg ja cmp xor lret incl and fstps jle xchg add rcrl adc jb call sti mov adc divb sub mov xlat mul dec mov cmp and jns imul lods push pop insl outsl inc jle pop inc jb ljmp bound inc ljmp sub mov push test sub push sbb mov lret iret push (bad) adc int add xor jecxz,pn adc inc mov mov daa ljmp add nop dec sub dec sub or clc daa inc sahf xchg pop (bad) or or pop leave adc stos xor in lods das mov pop pop or or xchg movsb pushf out or lahf nop pop aam mov (bad) and mov (bad) lret sbb ret inc adc push dec in pop mov or cmc xchg pop jbe daa sub jle jmp leave push lds pop mull icebp repnz (bad) cmp sti lret in stos jecxz dec lds nop pop or mov xchg xor jmp clc dec js dec sti mov jnp loope inc xchg push or push mov add mov xlat dec movsb fs call and leave enter add and sub jmp jle sbb imul lret out sub mov mov cmp dec mov inc dec mov and xchg jb fisubrl mov and adc mov mov mov or sub add insb jg jmp pop imul xor inc mov push ja xchg push xor cmc and adc ret mov add add pop xor clc rorb pushf mov pop pop sbb cli mov stos fs gs sub adc push out lret push mov xchg lods mov test push (bad) and (bad) xor sub (bad) pop mull dec lret fcompl cmpsl cltd cltd adc pause shr out pop mov xorl sub mov lret jge xor pop mov fldenv jmp lock mov scas pop fstpl push or mov (bad) cltd or push add out stos mov sbb js lock mov imull bound add xor adc lcall cmc nop cmp fs repz mov in pusha pop mov sahf xchg fs repnz hlt mov mov mulb push push xchg jp clc ds sbb fldcw xlat fs rolb sub mov xor stos lret in sub int xor xor adc add into movsl outsb add inc leave fisubr imul fwait mov inc xor sub mov test into xchg inc int pop dec lods or mov test mov jne call scas repnz xchg popf inc loope outsb jmp test imul push pop movsl stc repnz loope sub jge mov pop repz test sub xor sub xor repnz cld sahf sbb enter jg lret into in gs out add add (bad) aaa or mov not push inc dec cld xchg add sar pushf (bad) and cmp xchg test sahf push mov jb mov setle inc mov push cwtl or jmp insb mov cwtl std jbe dec fbld xor jge jb inc repnz lret neg xchg in jns es or insb les mov push push mov imul inc pop and cmp cmp xor jns (bad) dec shl sub sub mov mov mov out fxch outsl lods add lcall movsb sub leave ficomp xor jne xchg or mov jecxz iret push (bad) push cmp es or pop bound (bad) pop (bad) jmp jo lods movzbl sub lcall stos movsl pop stos mov mov insb jmp pop ljmp inc mov xor pop stos sub xor (bad) (bad) or loope xchg enter rorl mov cmpsb sub xlat ret jae lods xor push outsb cmp add push cmc cs lock test xchg cmp jnp inc roll mov jb mov pop xchg add (bad) jmp les lods jle mov push je,pt cmpsl xchg pop mov add repz fisubr dec adc jae daa pop inc pusha and xchg into loopne xor aas cwtl pop jb in jnp dec vmaxsd shll mov insl dec pop sub pop pop mov push adc or add int leave into sub pop outsb bound mul pop daa push (bad) dec mov xchg hlt loop xor xchg lahf lock jns xchg in and ljmp out jne mov lahf xchg pop and arpl xchg ljmp test xor rcrb or ret xlat xchg fdivrp jmp inc pop mov cmp xor movsb pop pop lahf add jnp sub add mov mul pop jne (bad) testb push repnz es mov mov outsb lods dec cmpsl (bad) leave fimull or mov add jne inc cltd loope mov repz cld and sub push fwait out lret insb daa int3 fimul mov ret or bound pop (bad) fcoml ret (bad) out cmpsl sub xor stos jecxz sub stos leave jbe jmp ret cmpsl aad stos mov mov push sub or mov fistp sbb pop (bad) xor jb mov or rcrl fstpt scas aaa cwtl mov mov xor sub rcll mov popf mov push and mov push je xor (bad) decl out pop and or xor out pushf fmul xchg xchg and pop test into sub rclb ja sub sub and loop clc sub daa lret adcb pop or add lods sbb adc sub mov rcrl mov aad cmp loop subl leave push std repnz pop add push jmp jno mov out scas out dec scas xor sub xchg ret lret or fcomps sub loop fistpll mov stc cmp daa daa loop push mov cmpsl daa sbb cmpb add mov movsb jecxz adc or dec jno sub imul xor mov insb aam in sub mov pushf pop add xor mov add jmp and lahf cltd add out popf int3 mov mov loop cmp push mov out push ret outsb out dec xchg out push negb push dec into mov clc push (bad) mov push scas sub notb mov aas push int add xlat int add add ds inc mov ja stos and stc addl sub and jb bound or fdivrs mov clc in call mov (bad) and cwtl (bad) mov pop sub mov cmp sub pop pop repz rcrl adc xchg fs lock popf std mov jmp xor push out push daa shrb in (bad) pop pop mov sub pusha jmp popa and iret mov cld inc loopne adc cwtl sbb xlat mov mov das stc push call adc lahf push add push test xlat pop pop movsl lock cmp imul dec jo xor outsb out adc sahf mov xchg mov sub fcmovne rolb rorl mov cmpsl icebp mov stc mov (bad) jg (bad) or popf jbe lods push pushf cmovle mov cld clc push out sub mov out in sub sub repz rorb test idiv mov fldl pop and mov jl pop idiv into cmpsb jmp dec idivb adc mov das (bad) sub ds (bad) lret test ret aas and mov ret xchg movsl cmp sub xchg push ss imul and das push or stc cmpsb mov jl imul dec mov ret repz pop mov jle mov int and adc pop mov push inc movsl cmc lds ret mov dec sti ret int3 pop add mov insl fnstenv fildll insb dec dec jmp and sub xor jl pop data16 or sbb repnz rorb cli xchg jle pop lret push (bad) int imul repnz mov mov mov out dec mov sub std (bad) and loope inc and lea out mov pop test dec shrb pop cmp inc daa sar int3 ret dec gs mov leave icebp jae push out sub jecxz lret cmpb pop fldenv inc jecxz xchg xchg mov cmp (bad) lret add push enter and dec push or pop xor std mov out or (bad) xor dec push ds pop lods (bad) (bad) jb repz jecxz pop ljmp ret xchg cmp xchg mov inc fadd xor or sub fmull loope xor cmp pop out pop int fcmovb sub sub xchg jae and fild inc imul xor jmp call add dec cmp mov lret push pop out daa adc mov shrl add imul cmc nop jge xchg xchg sub out jmp mov xor xchg repz push adc repz push push das sub test ds popf jge loop (bad) aam cmp in pop out loop jmp jnp cwtl or ss jecxz cmp and mov mov loop adc pop loop and dec push gs or xchg and lret push (bad) clc (bad) sub hlt maxps pop (bad) repz adc mov jl jb pop dec jae daa js daa and pop ret mov or mov popf insb inc mov dec xlat jmp pop ret mov (bad) dec out xor and dec mov test mov add pop mov pop xor push ss (bad) jnp push adc out lret xor mov pop add lret inc push mov xor or call stc mov xchg daa sub aad cmp xor sbb cmp lret and xor xor bound or fdivs pop or bound cld pop pop fldl pop jmp les repz sbb (bad) xchg neg (bad) xor and sub jmp (bad) mov add into xchg sub pop lahf xor xlat or xor push pop add or pop xlat add movb xchg mov sub or xchg pop mov repnz inc push xor pop xor jl pop stc xchg cmpsl mov repnz xchg mov repnz cmp rcrb xlat out outsb inc (bad) and in push sub dec mov lahf rcl mov fsubrl int out ljmp lods inc pop sahf lea xchg pop fsts jge std add mov jne push pop pop pop cld lret lds sub dec cmp jl xor aaa (bad) push fldt and and icebp pop mov pusha call addr16 dec sbb pop out dec repnz adc iret adc out shr fdivrp xor or push xchg jge cs inc lea sbb pop jae data16 mov (bad) dec (bad) mov imul inc add pusha dec push mov push in (bad) sub rolb xor push cmp sub xor push dec mov pop xor sub cld mov repz int3 mov or push xchg adc add mov ja jnp pop pop add or ljmp cmc outsl fmull mov or or imul lock and mov cmovs cmp mov mov icebp cmc dec lret notl push icebp lret cmpsl push les sub cwtl cmp pop mov add and sub sub comiss dec call daa lret sub das loop push adc dec repnz sub sub sbb arpl cmovnp xchg movsb cwtl dec call xor add repnz arpl aaa sub cltd and sub fisub pop lret je ds jmp jl sar shr imul mov bound ljmp repz dec sbb test cmp ret repz in sub pop xlat xchg gs imulb push mov and or ljmp sar lock pop lahf or sarl xor sub jmp nop xchg xor jg test or cld in jmp pushf cmp add adc lock mov sub lret push xor cmp push and sub stos cs and cmpsl or adc add xor dec enter dec push ds repnz add stos mov repnz test (bad) jmp leave xlat mov in popl or sub negb push out outsb fsts ja or scas fdivrl adc mov sub xchg sub (bad) icebp cwtl pusha idivl int3 sbb fxch sub jge cs loop (bad) int3 jae pop adc adc push jl jns jg jbe icebp pop cli push jle fs arpl jg mov (bad) pop icebp xor out add dec mov and and cs enter inc dec dec (bad) sbb stc dec aad ds ret sub flds ror (bad) loop fstpl clc sub xchg cmc mov or pop imul push dec into (bad) sub (bad) movsb or push add adcb dec popf jg (bad) imul bound pop out mov xchg xchg es dec subl sub lock int3 adc add sbb movsl stc mov sbb mov mov (bad) dec rolb push clc mov or xor ss ds add divl repz adc scas repnz pop xlat push jmp sub incb cmpsb movsl jp jb push test (bad) sbb out xor and sarb or add sbb mov mov mov xchg lods pop scas mov leave out cmp jge dec cmp cmpsl (bad) into (bad) and xchg idivl jecxz sti sub dec lahf cmp sbb mov stos ficoml and pusha in cmp cld stos jno and movsl mov lock sbb cmp aad icebp fimul bound gs ss dec ret int3 adc dec sti mov cli push (bad) and jg mov (bad) cld ja in in popf mov and ss pop dec jle and idiv sub xchg cmp faddl add push and dec test loop or push mov mov fcmovu dec push xchg leave sub mov dec jb pop test xchg int3 or stc daa (bad) out stos test movsl scas sub (bad) cwtl pop out lds sub ret loope hlt and nop dec xor fwait jg fistp (bad) imul cltd cli movsl push inc repz push adc testb fnsave (bad) push lcall or mov sub pop fs out int adc pusha pop and fidiv pop cmp adc sbb ss dec dec icebp adc inc popf mov push or xchg cli add divb cmp mov sub arpl (bad) add jbe ret stos fdivr (bad) mov idiv pop mov pop mov outsb mov sbb jne fsubrl or data16 aad pop into imul xchg nop fwait push cld inc cltd roll lock (bad) dec (bad) sbb dec in mov rolb pop xor or loop,pn mov (bad) daa movsl std out xchg push adc mov fsubp push rcrl mov pushf cwtl and mov cmp push dec cmp pop push notb cs pop fistp and push mov push shlb xlat and movsl andb cwtl hlt xor xchg fisttpll mov cs leave scas push push or pop xchg pop into mov dec rolb ret or inc cmpb adc fild mov xchg adc sub in (bad) movsb test and hlt cli cld lcall xor ss cli aas popa mov pop insb add xchg jmp mov imul add cltd (bad) dec repnz fisubr mov cld pop mov fisttpl sbb xor sbb inc mov outsb push bound xchg flds adc sub and popa xchg xor add and in pop test js mov jmp (bad) dec pop xchg jbe imul push and add sub jno sbb cmp lret fist mov shrb das xor das addb rcrb cli dec inc addr16 pop fsts cmp xor push jmp pop mov sub and sbb ljmp idivl add cltd daa cmp rol outsb sub sub or pop pop stc push and data16 mov add push push mov in inc mov sub dec jmp out sbb stc js roll fmull scas stc pushf das xor out add lea sub dec push or push inc scas in cli bound xor lret (bad) sub xchg lcall rcrl notl out jbe fs (bad) pop or das pop mov mov cmp stc cltd into mov sub shrl out fs clc adcb sti cmp xor sti sub xor dec adc xor pop and cs fs adc sub or dec out xchg dec sbb lock rcr sbb xchg mov gs into loop lds (bad) push dec call jb pusha scas mov cmp adc sub mov add rorl pop out pushf inc xchg sub ds out pop outsb enter jbe mov inc xchg (bad) xor and xor or fdivl or daa jg inc or xor pop jmp add sub jl add jg fbstp (bad) pop sbb in ds xor movsl fucom (bad) jb dec sar int3 lcall test lret sarl push dec (bad) xor cmp std stc xchg ret jge sub data16 popf in xchg repz inc pop or popf push (bad) and mov and mov rcrb and adc xchg mov inc in mov test xchg (bad) pusha loop fisub lock jmp aad icebp mov (bad) pop jg dec into mov mov sub aas repnz dec movsl lods jp ljmp xlat out loope sub jl mov dec push pop fistl das push mov lods mov adc shrl mov aas sub jge (bad) mov mov fs scas sub cmp nop lcall jnp jg leave pusha mov add fwait cltd sub dec clc xchg mov sti jb lcall add push and pop push xor rcr cmpsl jnp mov imul sbb add xor push mov fnstcw adc mov nop mov aad mov mov (bad) (bad) out pop inc icebp sub divl fstps jecxz sub test add mov mov mov into les call pushf lcall mov mov cli cmp mov sub mov subl idivl shl inc mov jmp mov jnp mov dec adc cli rcl ret mov mov stos jbe outsb xchg adc pushf js outsb daa xchg jmp (bad) and pop pop or lret aad mov jmp mov xor sub xchg push fildl icebp inc pop iret pop cli and gs push pop ljmp in movsl daa es sub dec xlat lcall adcb les out int cmp sub xor (bad) bound aad inc inc mov add sub push sbb pop cmp mov sbb cmp std popa rol cmp in dec add (bad) fsts pusha and or gs mov mov and bound sub popf std xchg stc lahf fiadd jle pop add in jo call mov adc out mov and xlat sbb pushf adc push dec lock pop mov rcl mov xchg scas adc and imull into mov addr16 out out inc ret cmpsl loope cli jmp movsb ret inc sub mov cltd daa outsl or iret ret mov pop (bad) mov in bound xor pop fcmovne sub cmpsb aas dec pop (bad) frstor fld sub adc add xor jne xchg push in pushf mov and fidivl jmp ficompl push push cmpsl dec stos sub xor add mov clc xor cmp xchg and (bad) pushf enter ss int3 pop (bad) scas (bad) fsts xchg pushf sbb jmp xor jmp and sub jns inc ds out dec jmp xor cmp or les mov jns cmpsl xchg addl scas xor and mov inc or (bad) and clc inc mov push fidivl into sub dec xchg mov out dec jmp mov loope aam jmp and bound lret inc or in imul (bad) sub pushf pop lods mov cmp dec out mov push xchg in add popf test imull fstp ss dec loopne stc mov (bad) xor add in dec pop mov xlat mov icebp cwtl pop icebp into mov pop sbb mov or pop and out inc lds pop daa movsl in cwtl loop mov push pop dec add or push (bad) mov lret lret jecxz xchg inc mov mov loop,pn shr jecxz adc ret mulb push lret inc cmpb inc leave push push repnz add out lds mov addr16 out or or repnz aaa cmpsl imull pop mov loop popf outsl in sub jae adc mov lret jmp mov das sub cltd adc jg mov pop mov loop or jae cmpsl divb repnz push adc dec sbb loop xchg in mov (bad) popl pop scas fldcw mov ret ja xchg mov ret mov mov pop jb inc mov (bad) rcrb shlb fcmovbe lret (bad) imull loop aad dec xor dec push ds (bad) daa aad xchg dec sub jg or lea cmpsl test enter add rorl iret adcl out bound mov xor mov (bad) dec sub pop dec (bad) sub or popf pushl cmpsb sub xchg inc mov addr16 xchg rorb decl pushl test cmp lock negb sub xor out xor sub (bad) jnp adc jmp xchg icebp jae ret cmpb xchg lock push inc scas out sub or push mov dec idivb ljmp imul and das mov cltd jmp push in aaa mov push and dec pop xor cmc mov adc ja dec in mov push repz pop mov jnp sbb into subb das jns push jbe push repnz rcrb das repnz leave repnz sub jo dec lret (bad) push in push scas mov ds push les (bad) je add (bad) iret icebp fnstsw cmp sub out fdivs adc (bad) push jne jne mov xor xor sub test lret out imul mov inc scas mul clc mov sub mov pop sbb pushf mov jle and dec jb leave imul xor sub cwtl cmp dec divl sub lret (bad) sub mov or hlt inc add popf jnp jns out push pushf jbe or shlb jmp stc xor jle popf jmp sub jecxz,pt leave out pushf adc (bad) fdivrp loope aas test xlat stos fisttpll outsb (bad) dec xlat cmc popa adc sub xor inc mov lret das mov out loope xchg leave add (bad) outsb and xlat outsb sub (bad) leave outsl fldcw das ja outsb push in movsb dec repnz pop mov jmp movsb loop daa (bad) jae push shrl adc pop sbb ja dec xchg data16 (bad) mov fidivl mov xchg xchg jl mov pop inc imul out fimull aas or add pop (bad) aaa mov idivb jnp or xchg add (bad) cmp pop in and popf pop sbb mov inc xor fist ror addr16 push cmpsl or fildl push or out loope rorb clc mov pop fnstcw xchg cmp hlt pop mov sub fistpl jns daa push pop jno inc sub pop and sub pop shr lods push pop es pop fistp xor jmp pop ror inc repnz divb cmp sub sub stc loop mov push sub rcll cmpsl loopne push fs loop add xlat into aas mov ljmp fsts mov xor mov sub mov rcpps pop je es das jne dec xchg stc outsl imul aaa or dec (bad) loopne mov add jnp es sub or fs nop sub push xor pop push jne lea sub aad push lock loope loop,pt xchg gs push je and out jge jae cli cwtl xor mov mov jns ja jl pop (bad) int3 push mov (bad) out push xor xor push js call mov dec clc pushl fxch xlat pop pushl incb sub and call sub sub (bad) dec cmp mov xor inc mov (bad) jne rol lret pop jbe (bad) push xor add lahf pop mov orb ret or push or push int mov jae adc gs rcr mov test inc scas out mov hlt pop sti aas mov jmp push mov sub xlat xchg test sub or pop ljmp mov sub into sti cmp sar fisubrl dec call cli sarl in cmp mov mov bound cmp insb jne js ljmp imulb lret mov mov inc xchg dec mov and or mov ds js icebp pop push lcall (bad) outsl or aam (bad) ss jge daa lods inc int pop push sti fs lcall out pop movsl cltd lods repz gs sub sti bound bound fcoms pop cltd fs leave cmp loope stos bound jg cld movsl pop xchg cmpsl xchg fldt aad scas and pop jne mov das cmpsb int jmp adc pop add push xor out aam pushf xor popf mov icebp cmp or outsb jl nop mov stc jb adc xor call scas xchg gs andl xchg push lock ror pop notb add xorl xchg jg call mov jp and xor out sub mov fstp pop adc int jg ljmp or or sub ret les pusha imulb adc jb mov jmp mov enter cli push pop (bad) scas sub sahf lods imul sub out test pushf xchg inc es icebp call adc cmp mov xor pop shrl shlb mov cmpsb push dec mov dec les cmp mov sarb jno mov lock or cmp (bad) or cmc insb push daa or and je (bad) mov cmp mov pop loop pop push (bad) push inc and jge push and or pop adc mov jmp cld les loop push sub lea lahf push xor les sub mov jnp idivl dec (bad) jge ret cmp xor into outsb sub cmp andl or cmp scas cmp lock inc bound push bound clc negl adc mov das je mov inc pop pop (bad) in xchg das rcrl (bad) mov sub aad in rcrl xchg addr16 lcall pop inc inc xor and or hlt mov or jne icebp imul push imul js xor pop mov or or divl mov cs cli xchg pop addr16 or jne sbb push scas pusha mov sub and push xor mov das and in xchg (bad) sub adc leave or push and inc popa shrb shrl sbb jle mov cmp int3 xchg das sub add rolb xor sbb in sub push mov les clc or mov mov fcmove xchg call mov in pop mov cmpsl mov inc push add cmp lcall js and xor sub stc mov lahf sti andb sub inc sub lret inc sub or add jp and xchg xor je dec lock dec test in push aam fs stc movq loop je jmp inc lret subb adc movl fisub jmp dec adc insb lahf ljmp mov int xchg in stos mov icebp fcmovb lret ja jl or data16 push sub add mov shll jnp cmp out out add or (bad) xor push lods pop ret mov (bad) out xchg mov xchg leave dec aad sub sub aaa test xor mov sub pop in cmpsb ret bound fcomip mov and mulb inc add cld int ret mov mov outsl pop jmp mov or lods mov test mov arpl xlat lret pop xchg ljmp cwtl movsb lods xor or jg dec pushf jae (bad) lods es (bad) mov sub in les xchg stos bnd sti rcl xchg xor imull bound xlat jns leave out and pop adc int3 mov mov jns jns scas or xor les arpl jb and bnd lds push mov inc or sahf or dec js mov out sub inc jmp je or mov add (bad) sub and add (bad) cmpsl in mov mov lahf jl daa push data16 adc adc sub loop xchg lods imul xchg add jge xor and sbb js dec bound popf jmp ljmp paddsb popf dec adc xchg xorl xor minps sub (bad) xor test cmp lcall daa jge jmp push inc xchg popa addr16 lods adc add repz jb into ja test fistp leave xchg cmp fidiv rolb rcl mov fisubr mov dec push not pop pop dec aad imul jmp loop ficomp cmp jne cli adc (bad) (bad) mov cmpsl rorl imulb outsb fisttp xor lods aam mov dec clc fnstenv mov inc arpl into add lahf shl decb xor loopne jmp mov sbb pop fs inc jnp push jg and cmp adc ljmp xchg inc lcall (bad) insl fwait jp in or aam iret aam imul mov jp fsub scas adc or arpl mov dec push clc push and pop mov push and movl jno xor movsb cmpsb dec xchg (bad) mov push aad dec aam std push xchg stos mov das loope pop or in xor out sub inc dec xorl popa mov lret pop repnz mov adc test lret pop outsl lods inc cmpsl lcall add rcll sbb ljmp call lahf fcompl (bad) cli mov mov or (bad) js or inc sarl xor xchg movsl fdivp lret sub aad jns,pt mov negb xchg sti mov mov sub or and popf loopne add in inc rclb (bad) aas push cltd fmul pop xor roll scas or (bad) or loope ds into mov sub mov cli or repnz push gs daa cmp push and or pop pop cld sub ret jmp pop mov iret cmp les fisub and and xchg mov jge scas dec adcb jb inc jne pusha imul sub sub sub and ret clc xchg (bad) scas idiv pop cmc daa cmp jns in cmpsl std xor ret mov loopne loop adc xchg inc out xchg inc dec pop in scas xlat mov jge jnp loop (bad) jnp pop cmp ret sbb aaa push mov xchg inc loop and pop mov ret sti loopne sub popf cmc push mov pushf scas movsl daa jno ret xor aaa or and sub jns das jne mov ljmp hlt movsl (bad) ss fst imul cmc dec xor push (bad) (bad) mov daa je ret push xchg push push sub push aad push cmpsb push jo insb cmp jne or insb cmp mov out add popw das add cld xlat (bad) enter cmpsb enter repz fs repnz xor xor cld fsub out test cld pusha mov sub or cwtl fistp add adc lods enter sbb sbb sub jns rolb aad cmp rcr sub mov mov call dec pop test and out lods das div mov pop mov imul in xchg lahf push sub lahf stc mov push mov mov sbb pushl jp and leave xor and enter loop das add dec inc sub stc pushf lcall add adc pop sub or ljmp adc inc sub cmpsb sbb out ja mov fildll xchg mov out (bad) fadd jle jno imul mull add mov imul and inc mov pop fcomps rcll ljmp (bad) enter lcall int es xchg bound js mov mov fwait jle das insl ja add or pushf add xor jl add ret outsl cltd mov int icebp loope pop (bad) sar jne xchg decb dec fcomps inc jecxz xchg adc mov or xor jmp test into mov adc (bad) fs out xor div sub sub out or adc rcr cmp add push rcll in out mov and xchg jp jne clc xchg stc push ret pop dec xchg rorb mov call (bad) shr cmpsb cmpsl dec mov loop add pop mov xor and sub inc loope jno dec (bad) notb inc cmp idivl pop mov cmp xchg dec mov sub sti mov notl xor sub (bad) out dec jecxz adc add fadds push int3 jp repz add (bad) xor jge leave add push ds dec mov gs sar das leave (bad) mov or adc push xor mov mov negb or and jle in out repnz lods iret add ret xor jb stc and cld pusha leave rcrb jno jmp jo dec call dec mov jg adc xchg dec dec inc repnz ds adc xor sbb in pop lds push push cli sub jmp out or or inc dec pusha inc pop cmpsl xor adc mov xchg pusha movsl jge stos call mov add jl jecxz dec leave jg (bad) lock test dec repnz mov push (bad) or add rcll sub pop jmp stc dec sub push mov and imul iret or fstpl push xchg push cmc pop mov sub mov fsin cmp gs out sbb (bad) ss adc mov aad inc daa mov negl dec out divb and cmp add mov mov gs sub add xchg ljmp (bad) or aam leave call add push pop push je daa dec je xor imul (bad) jg test push add cmp in add adc xchg jl push frstpm(287 outsb loop xchg or xlat jae scas into sub jmp sbb cli add mov xlat sarl sarl sub and clc mov std sub dec jns (bad) sub cmp add mov ja and sahf and inc pop hlt mov out mov aam push jo add push jecxz es adc (bad) lcall add ret push mov inc sub sub out push pop std mov add xor imul mov js (bad) jne jmp hlt or cmp cld adc shll sbb ja ja sbb repz sub lret push into add inc mov add scas cld scas in adc push icebp les cmp dec enter movb jns aad push push out pop lret or xchg in xor push push adc push insb mov fdivs rcrl je decb or fdivl (bad) push icebp xchg sysexit xor sti adc sub mov imul add add mov push dec jnp pop imul jno or lods mov xor and es pop mov xchg cli ljmp (bad) lds xor testl mov sub fisttpl xor clc sar sti popf dec sti mov popa lock cmp fnsave adcb (bad) pop call lret cwtl pop mov mov inc jmp jns xchg cmovns mov or mov pop scas xchg mov adc sarl aam (bad) push lret or rcrl cmpsl sub mov rcll jge xor and or mov lds ret pushf xor outsb stc and push xchg les fsubs out dec dec mov (bad) call cmp shl jbe push mov add mov movsl in pop adc mov jbe leave jbe das push push lods lcall xor je mov inc push push mov inc fisubr pop push aad lds imul and push add and mov xor mov subb jno into out loop xchg (bad) and cli test fstl mov aas mov lods push mov jae push mov (bad) mov push cmp adc fs ljmp push leave mov scas xor ss pop and sbb (bad) cmp and sub inc scas dec lret out mov dec cmp (bad) pop sub xor je repz cwtl (bad) inc ja cltd mov and in pop ret cmc mov roll dec cwtl sarl pop mov popf sbb add repz or lods or rcll repz dec xlat pop cmp jbe gs cmpsl and mov aam sub adc add or pop repnz outsl sub mov iret out and cmp dec sti testl daa orb stc cmp sub mov (bad) xlat add clc repz ret movsb cli push push mov xor or fistpll add sbb leave xorb xchg outsb pop sahf or gs sub not lret jge notl or inc add (bad) jmp push xor sub lret call jno sub jge out mov stos sub cmp mov das inc shrl popf xlat mov cmp mov lret cmc lds daa cmc xor dec fdivp sub add stos lods sahf leave ficoml imul sub inc xchg int insb fwait dec mov outsb shr out gs loope sub push les mov cmpsb jbe fsts les leave (bad) mov das fisubr cltd xor (bad) (bad) bound fistp jno cmp fdivs stos in pop jno fsincos pop test add test mov mov cmp mov xchg pop lds push mov rolb flds xor sub pop mov lcall jmp sahf lret ja outsl mov mov mov ret mov xchg test leave scas fsub push mov push pop cmp out movsb xor leave jle aas fnstenv add jmp retw popf inc xor jb cld dec mov fimul xchg push ficoml leave dec mov jg lds notl mov mov repz jne inc rcrb mov cmp fwait inc jne xchg pop sbb fwait pop out cs sub sub jge push mov add jns mov sub mov pop push dec lcall sahf gs std dec sar push adc xor sbb and mov cs lret repnz lea sti ficom repnz shrl jmp cld cmp test sub cli cmp add mov adc mov leave mov sub xchg in (bad) and pop push or andb jbe mov ljmp ficomp (bad) mov xor lods fbstp xchg mov test gs stc or lds jecxz adc sti gs mov das leave jns popa sub dec insl mov jno or sub negb mov add or cld jl lret dec into stos lret adc mov pop push push push mov clc xchg in lds (bad) cs mov (bad) xchg imul imulb dec push sarl loope inc lret lea jnp adc jmp aaa or into fbstp decl sub test inc xor xchg pop mull pop lods (bad) mov cmc adc push jns sub cld pusha lret in and pushf mov aam and cwtl and stos roll or add out jmp push push pop (bad) mov (bad) aas mov fwait push mov pop lret int3 aas and es inc fs ret out add sti sbb in and out mov xor popf cld cmp gs scas jl loope cmp jnp push movsb out mov repz cmpsb popf pushl stc push rcrb dec (bad) stos cltd pop add xor cli lds mov sar mov lret mov stos xor lret fadds adc dec ret into xorb mov inc xor jmp fnstcw jno hlt scas fnsave arpl lret dec pop sahf mov xor int3 mov sub adc mov sub (bad) xchg pop fisub sub sbb or repz out add add push lret mov inc (bad) idivb out mov daa jg js int add sti lock lret pushf es pop push jg movzwl mov fld sub in aas loop pushl xchg fisttpl loop ja mov aas jecxz pop jmp cmp pop xchg shrb (bad) adc pop aam xor dec or cli pop mov mov stos js (bad) inc mov loopne adc dec ret mov dec insb mov icebp mov ss in ret mov or (bad) lret sub cmpsl (bad) or jp mov incb stos mov mov in add xor ja pop or pop sbb adc cmp ljmp add mov stos mov xchg lds jecxz sbb aam rcrb add (bad) mov (bad) rolb push dec lods pop dec mov gs push jns out and jmp pop jg mov sbb cmpsb push cli sahf (bad) loop aas pop les xchg daa sarl dec icebp ljmp bound test add out adc in aas dec call push pushf lods push into or sbb pop (bad) mov out mov rcrb ljmp stc or ficom js into pusha xchg mov pop cli sub idiv sub sbb (bad) cmp pop inc dec lahf push xor sub imul sub sub aam lds mov test mul sti popf mov mov sub mov jb add jg insb nop out daa repnz fldl inc push sub jp push inc fsts dec cmp lar rolb sub fldl mov cltd xchg repz fisubrl xlat stc inc dec push sbb (bad) mov mov stos or les cmp std sub cmc out jmp cs lods test mov mov sub cmp (bad) popa cltd xor jmp dec cmp mov dec mov and movsb call (bad) (bad) int3 jle jne ss cs push sti clc in test insb (bad) xor jmp push sub xorb mov fst pusha xor mov mov add ljmp imul lret xor add adc and jnp cmp dec ljmp rcll dec popf in (bad) leave divl dec icebp cmp clc and shrb clc and sub ja adc lods in sahf push add std adc add sahf mov push cld mov fistp addr16 mov popf stos mov sti xchg fildll mov sbb outsl mov cs xor mov push dec cmp mov add xor sub or sub jle test or mov cmp jno jbe dec icebp adcl lret mov ret sub lds fistl fcoms in lea pop popf aam gs je repz sub cmp movsl cmpsb or xor ja std imul jns aas mov loope (bad) movzwl in leave mov into sub arpl iret notl mov stos mov mov inc repnz mov cmpsl (bad) ljmp sti inc daa jns jmp or movb stos fs loopne ret xchg dec inc rclb or outsb pause outsl insb mov push pop data16 ret xor std dec jns int3 xor fxch mov ds mov cmpsl sub xor mov into pushl dec call xchg daa mov out or inc dec cmp enter or pushf push out pop (bad) sti cmp xor cld add mov and mov scas cltd xchg outsb mov movsb sub xor mov mov scas adc mov mov out xchg decb stos loop lcall or bound push push and mov notb ret sub into dec sub mov (bad) or inc cltd push jmp jns dec mov decb test scas sub sbb sub pop dec jne stos ds in repnz adc sub adc mov mov add and mov push lret or xor ljmp sub cmc sbb jbe imul insl inc rorl sub in mov xrelease push lock sub ljmp cmp add cli fs push jecxz mov xor xchg xchg les fwait stos dec mov ret inc mov cmp pushl test and xchg repz sbb mov fwait xchg in xor xor dec (bad) push adc add mov inc push mov push xlat out add add lock stos imull cmovne out out js (bad) fnstenv clc hlt wbinvd ja and and adc pop iret sub jns movsl cld jae xchg cmp in int3 dec adc mov cmp imul cltd mov xor scas pushf add xchg cld sahf push jmp mov int3 jne into mov lds pop sbb fs add cmp movsb insb and pop imul adc mov or add (bad) mov aas insl xchg icebp mov dec pop inc cmp mov xchg xlat xor add xor rclb sti jb ret ja ss fistpll mov mov sub repz push dec and pop ss aad cmp sub and sub adc push mov add adc stc lahf mov jbe insb and dec (bad) cli int3 adc shlb dec stos adc cmp xor push pop dec lret pop jge inc cmp pop rep pop sub movzbl xor dec or mov dec fimul add rolb fbstp cs cltd (bad) jae aam adc movsl dec jbe sub add loope cmp or cmpsb or dec dec or into lret sbb enter jbe std xchg clc sub jmp lret xor pminsw test xor sub dec clc hlt lods sbb aas mov push dec lcall push jae pop jmp dec lret rcl int3 daa mov xchg push xor ficom sbb sti cmp sub or bound (bad) shrl into (bad) cmpsb out stos sub lock and or lcall fbstp enter sub std daa or stc inc bound (bad) push je lret xchg aas or rcl cli mov fs popa out sbb add inc mov es es or int3 inc pop into cwtl pop fsts cli dec jmp ficom jmp xor dec mov and fsts decl addr16 movsl inc mov mov stc fildll sbb cmp sarb push in test fist addr16 cmpsb lds rcrl out inc cltd jnp aad cld inc leave cli cmp lret cmp nop out push xchg movsl jg daa cmc mov fldt mov xchg adcl test or (bad) mov sti or int3 mov inc (bad) sub add rcl movb jg jae push xchg icebp mov or loope jg out pop fnop dec xlat sarl in mov adc das inc jbe (bad) stos jmp outsl pop mov movsb xor js pop mov push or jp dec stos popf scas popa enter ret divl jb out fs cmp (bad) mov and dec roll lods push jl divb mov xchg jnp sub out fmull subb cmpsb (bad) popf fistpl nop jmp (bad) lahf adc push (bad) (bad) dec xor add add ds aad xchg or jns shrl fnstenv fistpl jae cmp cmp inc fadd inc adcb in sub pusha xor pop jle add dec repnz popa mov ja cwtl pop faddp pop push cmpb aam out hlt pop dec mov das lods mov pop rol sub (bad) pop ret imul les xchg rcrb dec pop add daa imull jecxz pop xor ret pop adc in xchg xchg outsl adc and enter idivl stos cmpsb das fwait aas movsl pusha push (bad) sub enter stc and movsl decb adc out mov lea add xor dec scas popf pop pop leave in pushf dec aaa scas and movsb adc dec and adc adc aaa lcall aad jae aas iret or push dec adc mov mov inc popf cmpsl outsl sar add and ljmp pop or (bad) (bad) xchg jmp imul add or mov les cmpsb xor adc push stos jae or mov xchg scas shll or loope add sub mov out xchg fstpl (bad) int3 or push (bad) mov and test ret inc out pop lds pop mov pop push ret std rol out pop xchg insl adc mov scas int sub jmp dec mov incl imul jg shlb push adc pop xor mov or pushl mov inc or (bad) fild push jo adc loop sbb add xor dec pusha sub xor pop jmp or adc and adc inc adc cmp xlat dec nop outsl mov je imul sub sbb or sub daa pop in or (bad) push or (bad) xchg jmp mov (bad) test fmul lret inc sti pop add fimull mov xlat int3 cmp and mov jmp push fs or xor or sub ret push add adc gs cmpsl rorb scas shrl sub pop xor dec pusha lods in dec cmp clc jmp cld lods pusha or add call fstps icebp xor out fs mov and (bad) pop out sub loope sub jbe imul popf xor add mov push (bad) cs idivb sbb aam pop cmp dec jmp xchg push fs inc pop nop scas fs stc negl sub sub negl xor jns fdivrl stc pop lahf lods scas outsl shr bound fildl lds daa imul out and mov js sub shrw jmp cmp cmp (bad) lds scas out gs (bad) dec insl dec hlt nop mov cmpsb mov mov int fnstsw cmpsl mov dec xor pop or aas cmpsb and sbb xchg add leave ficomp aad fcmovu mov sarl movsb lds bound stc sub xor or mov sub push sub add dec cmp and fiadd fcoml dec addr16 add lcall mov (bad) fistp sub imul ficom sub bound sahf push es xchg imul stc lret or adc or lcall (bad) jge ret xchg dec (bad) outsb and push add pop or sub test out jb out jns inc iret add or decb leave cs (bad) das sub add fisttpl mov in xchg mov dec cmp mov add testl and loope outsl jne xor and inc jecxz sub cmc sbb or ret sub inc stos jne cld and mov jns inc jmp or pop adc dec add outsl inc or repnz xlat rorl pop xor mov sub xchg adc inc or bound and mov dec negb outsb adc xor push mov pushf addl mov pop dec in dec xor stc add adc mov shr sub mov xlat lock cmp mov mov ffreep out add rcr mov mulb jecxz cmp adc adc test mov ja sub adc popf push xor ds xor cmp xchg lods xchg fmuls dec pop cmp push pop push jne adc mulb int push pop mov lock adc popa (bad) out xor add cmp pushf xlat insb decb xor aaa fwait mov adc lret cmpsb pushf loope sbb cmp sub loop adc lret sub cs int inc ljmp pop mov mov lret jmp popf lret sub jo or jge xchg (bad) test lret int3 das mov in and scas xchg stos in xchg rclb sub or dec (bad) or sti jl (bad) sti (bad) xchg ret fs scas int adc and cs lods movsb jb and pop lret cmpsl mov out and mov loop inc cmp inc jbe and mov aad or or outsb ljmp pusha mov xchg and xchg xor or leave cmp sub jno js scas push loope adc stos adc call (bad) lock jo cmp out xor aad clc and out inc mov or xor scas cltd adc add inc test dec dec push ret sub push mov and ffree sub dec add clc mov sub push or pop loopne imul call or test sub push adc out mov mov stos jns jl sarl add pusha mov pop xchg add sbb daa js (bad) jmp lret sub xchg enter mov stc mov sbb mov ja notl and loopne inc dec push nop mov pop adc leave out js jle dec lret mov popa rol jnp mov jae sub lea pop jnp ficomp sub (bad) in mov mov dec loope and push mov inc popf ret push mov inc jp imul jne out loop push inc xchg xor inc mov mov dec lret bound and (bad) call in cmp ret cwtl mov dec jo lahf xchg push mov rorb fs mov dec call subb pop push out pop dec pop (bad) mov push push ljmp lcall decb (bad) jne (bad) cmp out outsb fildll mull in mov push dec nop mov xchg sbb push pop iret dec call stc mov ljmp loop push loop add lock dec (bad) mov push pop in push push les test sbb jmp or (bad) xchg repz ljmp ds (bad) notl and mov push and nop and jns inc movsl hlt lods push sbb sahf das lret jge ja bound test loope cmp insb mov stos and int3 lds dec test push cmpsl mov mov mov lret lahf inc jne pop outsb loop cwtl je mov xchg (bad) mov sub mov adc mov mov fst mov lret ljmp or (bad) gs jecxz adc stc loope xchg sub out (bad) mov fnop aaa call mov ljmp pop pop sarl adc jl lret mov xor pop pop imul lret in pop jbe cmp lret out fstpl cmovp clc aas sub add (bad) mov pop or mov dec dec xor je and out or or loope daa addr16 repz jmp shrl dec js sbb (bad) xor lods mov mov (bad) jmp lds mov adc pop int sub cmp pop das mov imul std xor insb ror mov out aam push je push sti xchg out lret dec mov js pop call sti hlt aad jne scas lahf icebp push jmp jo jge popa jg div dec mov inc xor jg (bad) fisubl dec pop pop push out mov cmc mov lock pop leave ja add mov cltd mov stos mov sub xor or aam movsl rcrl test popf mov lret or out sub adc out push inc xchg pop cwtl mov (bad) jl add inc inc or cmp int3 scas inc loop out imul xchg fadd or int3 subb xor lahf inc jnp xchg scas lods adc ret push cltd loope lods or or popf cmp pop hlt or push adc arpl add (bad) push mov or add out cwtl fadd mov jbe inc add test add push cwtl sub mov pop sub jns lods test mov pop mov sbb test pop pop icebp push (bad) mov sub adc pop loope lret adcb sub shr pop mov jns popf add ljmp dec ljmp jmp mov mov hlt and div push or jmp push and mov aad cmp sar out mov (bad) mov and jnp jne loopne stc mov jae jmp mov push cld icebp daa xchg inc or add dec mov in push dec test cmp pop repnz aam xor jecxz icebp fimull stos sub pop mov mov je jle shrb mov inc enter movsb mov adc mov jmp push std movsb add xor leave inc or mov sbbb pop cmpsl or push pop mov aaa jp push sbb lahf dec dec add adc adc pop stos lret inc aas and (bad) jl fnstenv adc cwtl clc and aad stos test shlb mov jmp mov inc and ret pusha inc add out fbstp dec (bad) test divl and sbb ds orb (bad) int3 pop dec iret ljmp inc sub xor or out adc stos lret mov cmpsb stc pop fdiv sub lret (bad) icebp push sub mov shrb jp jbe pop push mov jmp xlat xchg add mov mov inc fwait ja push xor stos cmp add mov or testl divb xlat jmp jmp mov jb mov xchg cltd sbb es push scas call mov clc mov xor mov icebp bound enter xchg or push in mov or ret pusha mov dec cmp sub aad push jnp sahf cld push push push adc sbb push (bad) cld sbb out pop cld push sub lods inc pop mov fstpt test sbb ljmp cmp and xlat jge add xchg mov or les mov sub in bound test mov mov popa rolb ds in ds (bad) jmp daa loop xor push fimull jmp out dec pop orl mov add sub (bad) loopne scas sub data16 pop sub xor test mov mov imul test outsb mov add pop test adc repnz mov out mov xchg jno add inc add push aam pop cmc (bad) dec out push push push mov dec pushl push dec loope sub mov lock fstpt mov mov add repz lret or dec iret sti mov dec jmp jmp mov out and decb adc or pop cmp jne testl adc cmp sbb fldt add mov pushf out cmpsb icebp shrb cmp jmp pop stos sub out jle push and jl fxch out ret and arpl negb pop jge jnp jl push mov (bad) fnstsw js call rcl mov inc mov sub cmpsl mov bnd fcomp pop mov notl mov add gs jbe fsubrp bound inc mov shr movsl mov dec (bad) not mov rclb pop lret dec rorl pushl ds and xlat movsb sbb sub sub imul sub mov push popf add add xor mov repz jnp fbstp rcrl inc imul xchg dec clc test xor lret lods cwtl cmp and mov or pop adc mov mov adc pop mov pop pop or or pop xchg out sub and lahf mov loope cld fist in or and jg out fmul pop adc dec cwtl lret out mov cmp shrl push xchg mov push aad mov and jo adc lock xchg lock shlb sbb movsl pop push add and fs int3 hlt cltd adc mov sub mov roll sub cs adc jmp mov and or outsb imul es jp sbb repz push outsb and imul add neg and lcall lods xchg sarb ret jmp mov les jle ret je or pop add ljmp (bad) cmc ljmp xor lret pop mov or xchg mov sub jne loop into mov lods lea mov outsb dec add pop mov and push stc in or aas mov add mov scas mov (bad) push or mov aas mov dec or push les fldl out rep xchg loope sub int3 repnz int3 xchg mov or fldcw roll testl jno lds clc je mov pop inc pop mov fcompl cmp adc xchg insb pop xor leave and outsb jno xor inc mov pop in outsl imul and lods or ret dec jmp cmp outsl mov test stos or lret ja adc lds xchg and daa add mov jg dec sub and jns (bad) xor out xchg gs or inc mov jle imul jle daa repz repz lea das negb dec add sub icebp pop add fnsave push fild fdivs push and je jno imul das sub dec stc cmp sbb fs testl (bad) jecxz aad mov push or xor (bad) mov mov mov mov lea cmp pop xlat ljmp xor jmp push arpl lock (bad) mov (bad) mov and dec (bad) (bad) js loop mov pop imul and mov int add inc stos leave add xor incb xlat pop adc ret mov xchg jb mov fdivs scas mov out dec xor dec pop dec shr addr16 mov sbb and xlat idivb jle push faddl adc lods rcrl cmp fstpt negl pop mov pop cld pop cli jns inc rorb or shll test mov xchg ljmp sub cs je adc loope cs sub sub push and and sub das cmp xchg fs sub and roll shll mov or xor sbb movsb dec out dec inc push stos (bad) mov daa jmp pop push imul xchg movsb popa idiv lods xchg push leave ljmp sbb push add cwtl mov dec or imull lret dec pop es push ljmp imul jge inc shl sub (bad) (bad) in xchg xchg dec (bad) ljmp mov out lods (bad) push lret dec jmp cld sbb push ss leave mov lret mov and shrb sbb cmp cwtl ljmp repnz xchg pop pop mov add lret sub cs je mov lods cmp pop out dec ljmp pop decb cmp dec sub scas mov lds mov aad orl jns xchg pop test sub clc or sub cltd in ds pop loop sar (bad) xchg mov out (bad) sub mov mov jbe dec int3 outsb (bad) mov adc out add pushf xorb xchg out mov popf add out outsl sub mov jnp push nop stc sub popf aam jmp (bad) pushf lret (bad) sub xor push dec add out sub mov negl mull cs lods adc popf ja roll imul scas out inc xor sbb xchg xor add and stos xor sub push cmpsb cmc leave mov lods test dec mov adc lret scas fs sub (bad) jb sub xchg jns (bad) mov or sub xlat add fisttpll rol xchg sti mov ret mull daa jo daa and js pop sbb pop pop in or (bad) mov mov out mov pop aad sbb ficompl cmp or or in es pushf das xor pop adc pop lret mov mov inc mov dec dec and dec aas sti insb mov fsubrl iret pop arpl popl xchg push xchg test mov push mov mov jbe jno sub fs adc sbb add fstpt cltd (bad) lods jbe mov leave push mov in mov mov mov iret adc xor xor add fsubrl pop out mov jl das movsb adc sbb mov dec in loope mov pop jecxz or xor (bad) sub loop cs mov dec (bad) std mov mov fist ret sti xchg adc lret cmc xchg dec daa maxps sbb sub test (bad) dec mov je insb xor lret or inc and jmp mov shr repnz movl or (bad) jnp jl jno cs cmp (bad) iret dec rorl ror fisttpll mov subl outsl cwtl cs mov adcb das out pop (bad) mov ret outsb and sub data16 popf jnp (bad) out sbb xchg movsb stos jmp and dec out repnz (bad) ja cmp repz enter sub or rol sub aas xor sti or jg jmp xor xchg xlat bound ficom adc jmp stos and rcrl aas mov out pop test mov mov insl jmp lds mov mov std lock xlat insb int jle cmc mov ljmp cmp bound pop push sub adc jno loope sub or out mov daa clc xor loopne xor pop clc hlt jmp adc mov mov inc mov shrb jnp loope daa add jge adc mov inc sbb mov cmp stos mov mov es leave inc mov push into push mov jns fs (bad) into mov xchg loop cmp sub and xor mov into add (bad) xchg stos mov jge stos cmp daa nop scas inc and or push pop es das gs int imull cmp sti cmp add mov sbb or xor mov iret jns test mov jecxz pop mov insb (bad) pop lret repnz mov or and out lea inc mov icebp adc xchg sar mov das out dec sbb xor sarb pop xchg fld mov sub adc cmc mov sub or push dec dec popf or std int3 add dec fidivr repnz iret icebp subl jno fistl mov test stc sub jno cmpsl push xchg sbb shlb jmp imul ret test jmp push or push jl imul out pushf and inc or or and sub dec lahf sbb push sub hlt jl (bad) cmp xor mov pop pop fcmovnu push mov xchg adc mov mov dec pop dec clc or fsubs fwait mov sbb jecxz inc rclb mov test notl fist popf int3 jae sti add into out test mov cmpsl pop or jo loope cmp gs sti ret push fisub mov xchg loop repnz xlat dec lods push xor xor rorl mov bound cmp add cwtl icebp cmpsl inc mov ja leave xor bound adc stc outsb call insb rcrl cld arpl mov mov aad lds or stc popa ret repz jno jmp push push out popf or sub cmp aas stc aas ret decl fist dec sub cwtl mov xor in mov cli je lods lock jne repz shrl sub push mov lret inc jne push or stos gs mov xchg ret in fimul in ret stos add ret cmpsl fstpt jne add cwtl mov cmp repnz in mov enter pinsrw and mov jmp mov outsb mov adc out or inc (bad) je int3 sbbl movsl jl pop call mov dec sub mov jne or shlb into adc fsubr jecxz pop dec cmp lret and mov pop test pop outsb adc mov jmp mov cltd pop aas mov jb fdivr addr16 (bad) data16 and xor mov sbb mov push sbb lret sub and adc hlt ret aaa fisubr scas push outsl mov mov xor mov out fstpl jp xchg scas notl sbbb mov imul les aam stos lods pushl or es jl (bad) int add mov jo or mov ss dec les or add mov sub jge test pop cmp stc pop inc inc and jmp les mull mov and call shrl xchg dec (bad) andl out sbb imul arpl or lods jns dec inc clc es adc xchg dec push insl sub pop mov fldt ret push (bad) scas jmp in xor lods in and imul fs cli popa add sarl mov adc inc testb sahf xor cli push iret or dec lret push cld movsb adc out pop loope sub add adc (bad) xor push or cltd (bad) ds cld rcll mov dec xor dec sub inc add xlat dec mov ljmp xchg pop and cmp dec call jl mov cmp insb and or mov and adc loope movsb pop (bad) das pop xchg xor mov mov daa leave inc cs adc lods imul (bad) sbb cmc dec mov lcall lret fcoml or mov mov ja pop xchg cmp push cltd inc ret mov dec adc push or push and clc mov pop fsubrl cmp and push mov or jne in (bad) (bad) xor aaa mov pushf fwait pop icebp push sar negl dec sub mov cmpsl push and mov cmp inc leave in mov int3 std or xor (bad) xor repnz loop pop add xchg mov mov idivl call outsb out popf sti pop or sbb inc mov add xor repz pop fldt pop lods or sti pop push fwait ss test cmp pop not sub and add dec pause (bad) jle imul xor out xor add lods mov scas test insb pop lret mov add lods into dec icebp dec or je repz xchg mov dec add or sarl push xor jecxz xorb in add lret sub (bad) popa and xchg jecxz sub insb loop push sbb cmp mov push pop adc sti gs gs lcall in gs hlt les pop (bad) xor jmp push cmp sub out ds lahf movsb stos cld dec repnz push int das mov sub stos pop jmp test add ficomp dec js or (bad) push daa jne flds in and fs test (bad) adc mov sub outsb mov ret daa mov inc cmp movsl into mov decb and aad sub repnz sbb jmp pop push mov out gs push (bad) stc imul pop mov outsl fucom imul and sub stos xor in sub cmp mov inc mov mov cmpsl pop jae daa pop int pop xchg jb pop and scas leave or pop push dec push sbb cmp fisttp push lods movsl cmpsb jbe push push pop jnp test or mov das icebp pop adc dec and xchg clc push dec aaa sub sub xor mov xchg jle imul loope in xchg mov jne lret pop sub es rorl pop loop jl ret in cmpsb bound sub mov repnz cld iret daa ret push lods pop or ja popf xchg sub xor dec mov leave jp cs or cli fldenv js repnz sahf iret xchg push dec or add mov out sub xlat xor lds dec js bound xor cmp int das (bad) adc mov xchg jno push gs sub mov aam lret rol mov mov xorl mov pop mov mov ljmp in imulb mov add dec mov and and mov dec (bad) mov dec out das sub dec or movsl push adc pushf dec mov xlat xor sbb or adc dec ror ficomp xor mov ds int3 lcall mov outsb call movsl mov lcall aas cwtl std repnz lret add lahf mov and mov add inc mov fisub outsl ss sar test cmpsb pop add sub (bad) cmpsl gs jge std shrl jmp pushf and roll pop cmp jno mov (bad) sbb sub movsl jb insb hlt mov addr16 ret les out je add or dec leave inc sti jmp or cmp mov pop ret in cmp xor xor mov jp mov decb (bad) push push data16 ja (bad) dec xor stos in xchg push mov int add mov cwtl sub pop repz movsb jne mov scas dec and mov dec cli lea sbb aaa inc fnstenv jns scas jl adc out sub sub pop or bnd and repz movsb ljmp dec push je mov (bad) popf leave pop mov jo add sub mov mov mov xor icebp mov out bound xlat jns xchg out repz mov sahf xlat (bad) std and sub or mov lret (bad) icebp mov lock out jb out push push stc push mov iret cwtl push idivl aam imul std jle xchg jle xchg ret sarb mov pop and xor out rcll dec or pop lret mov jno sub mov push call add push enter fistpll cmpb push mov loop adc mov dec adc and and js jp jae mov fnstcw out adc adc jae daa shll out cli xor pop xchg cmpsl cwtl int3 mov mov sub bound decl lea xchg loope cmp repz mov ret sbb xor ds push loop mov push adc or push add fst inc sub imul mov pop cs sbb xor dec jmp xchg data16 xchg inc mov inc insb or add scas fldl repz mov cld lret pop into pop mov mov pop xchg cld nop xlat jmp and iret stc or and idiv lret ret inc divb call adc and nop jb mov and add fdivr sub insb ret ja push lods or (bad) jp int3 aas mov leave xchg bound jg iret (bad) sub aad mov and fs mov push cmp pop scas inc mov xchg int3 loop inc or pop lock (bad) jg cmpsb add flds (bad) mov test ror adc icebp lods cmp dec lret fldl mov add pop adc popf call ds and sub call dec fdivs and clc sub rcl mov rorl mov pop das adc sub fild inc movsb xchg sahf dec dec andb cmpsl cld sbb sub and xchg mov push push sub lcall out clc push ljmp popf push adc stc add add std sub and or pop movsl push dec daa sbb push fisttp idiv aam js (bad) cld nop mov dec xchg mov sti repnz add shrl (bad) jns mull sub inc add mov aam aas pop mov (bad) adc fsubrl popa xor mov sub data16 mov mov or into mov ret int3 shlb fcoml mov lret jbe icebp pop movsl loop push sbb repz dec add xor add cmp inc lock adc out mov mov dec mov out dec cld adc pop or pop cld xchg ret (bad) xor or (bad) iret and or add das dec jbe jmp (bad) mov cli lds jns ret icebp lret fldenv je xchg mov dec leave (bad) jb in pop xchg pusha mov sub (bad) jmp dec push pop mov sub lret inc add push and adc mov jns in sub (bad) and fsubp xchg dec mov jp xchg lods mov sub mov sub jmp pop clc mov add cli ja scas (bad) mov movsl loop fisttpl pop cmp out stos mov (bad) jge push jns adc jne cli movsb hlt (bad) int and sbb pop fcoml std jnp (bad) sub add out in jmp decl (bad) mov adc xchg mov insl rolb mov pushf sub dec xor (bad) int cmp in cli cmpsb clc dec loop adc sti cvtps2pd imul lea or xor mov hlt cli loop rcr (bad) arpl mov mov jnp jecxz add add pop mov sub push mov arpl inc rcll add fwait xorb pushf mov popf jnp cmp int data16 data16 push int jnp xor pop push (bad) mov mull and out jp mov sub inc retw (bad) or (bad) push imulb mov cli and call xchg mov fstp in call and inc popf push xchg popf daa clc lahf mov (bad) imul clc ret jge xor (bad) hlt (bad) loop add in xor (bad) scas dec jns imul jno dec std out or xlat jge das out sub sbb push mov (bad) jmp fstps dec pushf push xor and pop xlat stos fs rorl mov repnz loopne insb cmc xor jne (bad) lret fdivl fucomip mulb push xor xchg push xor loop inc sub mov (bad) in push stos iret popf pop fwait pop pop push mov or push arpl out mov xor jne repnz dec pusha pop mov add or call outsl mov fstl or pop xor mov ret ja or sub out das sub pop mov inc loop mov inc dec sub (bad) into in mov jnp pop mov aam jo pop xchg gs and imul mov ret in insl lret or cli mov lea ds nop xchg test (bad) pop pop cmp mov sarl add mov jecxz,pt xchg out fmul negb sub jp dec mov push dec out xor pop and sub add out lret fcom sub fsubrl inc icebp rcrl daa rcrb cwtl mov negl imul push jae mov lret push inc cmc mov out dec and ret adc js xchg mov mov leave rcrb imul ljmp inc add xchg lock mov and rol ret pop lahf bound lock or out std gs das int3 fwait pop idiv xor pop mov or inc leave std test iret dec std dec stc jbe mov cmpsl mov jp arpl or xchg xor or sub dec inc pop mov jns dec mov jae mov stc jmp ret xorl (bad) sub repz dec stos mov pop mov adc sub mov push sub pop clc xchg sbb push jl (bad) mov ret mov jge in and xchg loop out jl jb test movsbl jmp imul ljmp in inc xorl add push es test add test shlb sub out xchg (bad) push enter aaa daa fcompl jns cmpsl jne arpl lock mov sbb cwtl jmp sub mov clc mov jecxz adc xor mov pop ja in daa sarl xchg jmp mov dec je cwtl cli cmp das dec and mov scas hlt (bad) mov cli push mov add fnop inc sub mov or dec mov pop in dec sbb adc inc dec mull (bad) mov pop lahf push or stc cmp add test out je stc leave andl leave mov mov push push cmp xchg (bad) (bad) fsubrs iret xchg stos or mov ret leave ljmp and imul sti test jecxz lea mov and fdivrl repz leave cli out jno imul loopne lahf cmp repnz lahf sti dec cmpsl jno xchg icebp stos insl jmp inc movsl dec sub mov ret ret mov (bad) fxch sub stos push cmp adcb mov sub or cli jecxz (bad) icebp jmp jmp and subb ret mov inc dec fisubr add xor mov mov repz and mov ret icebp pop mov pop in push adc in insl xchg cmp dec cmpsl mov (bad) jge enter sbb rcrl rolb mov xor push and popf into or jge,pn sahf enter pop jb ljmp bound or fidivl push das mov lret repnz aaa jp push sbb pop adc mov add push mov cmpl mov dec testl mov (bad) cmc sub push adc repnz or fistp fwait notb out scas lret sbb lret cltd imul imul ja inc (bad) jl adc cs leave push jns imul popf lds fidivl lods ret mov add mov (bad) sbb mov adc add xor or mov xor push (bad) leave push xor or adc sbb rclb pop loope imul movsb les loop aam and imull aas call cmp push (bad) and (bad) pushf sub ret push dec adc adc mov or and mov aam insl sbb xor decb gs orb sti add ljmp addr16 out push fistpl out sahf pop xor push sbb xchg mov (bad) xor cmp (bad) jl dec jle movsl push fistpl jb dec mov stc stos mov xor outsb add fiadd add fmul xchg ss push xor mov add or dec mulb mov xlat imul dec idivb scas sub add popf lods mov push daa push lret mov repz mov jge mov daa sbb neg sub or add ficom add xor sbbb or xlat into mov sti stos sbb and call push stos mov daa jbe gs lods cmpsl dec scas imul and (bad) mov sbb and dec pop sbb or in lock mov mov bts shrb or icebp test (bad) adc cmp and lock adc adc or sti lret or in rcll aad push sub or add mov roll adc jno sub and dec stos sub sub int3 fcmovne (bad) push mov dec rorl insl in xor jmp pop jae dec mov inc cwtl sub sub mov adc jg adc dec mov inc xor or jno jmp popa fucomp aas test shrl xor es mov (bad) adc pusha and lret pusha and lods loopne jb adc add outsb std stos xchg loopne ret dec pop sub ljmp or mov jge add or inc xchg xchg cltd aad in cmp sbb mov push jno cmc xor loop mov jle rorl ret lret xchg je jae clc sub xor mov decb fdivrl jne lcall les repnz lds daa fstpl sbb ds sub dec dec mov pop leave mov pusha xor xchg and inc and xor cmc fnstenv dec pop push gs adc sub fisubrl mov pop fs idivl cltd mov test out test mov nop sub mov fwait adc fsts hlt pop fldl es and outsl and sti push adc jae dec sub mov ja nop popf pop test icebp add in sub enter or add mov scas mov pop fs mov inc cmp decb (bad) cli xor pop aas cwtl pmaxsw mov mov jl fs popf xchg insl xor xor adc mov mov movsb es fs lods mov std popa lahf jmp mov sbb fildl pop call gs movsl loop cmp dec mov mov dec bound xor add sub sbb inc lods jne imul mov inc dec xchg add push and xor in jno out sub xchg xchg mov pop sbbl inc and mov aaa jmp mov adc cli mov roll dec and rolb cmpsb cwtl sub rol mov and inc and ljmp push xchg cmc nop imul mov dec mov lods dec ret mov ret aaa cli jns loope sub into mov sub mov ds pop mov scas je clc push jecxz and mov outsl loopne out xchg repz adc xor lret pop mov out jnp movsl sti xchg or inc xor movsl sub ret in cmp mov pusha and mov (bad) xor xchg jge add and daa out mov imul insb push add idivb sbb movsl fstl sub jmp mov cmc inc ds sub movsl stc aam jno sub cmp cmpsl jno dec out jno xor cmp adc outsb in sbb lret pop and xor ja sbbb loop icebp (bad) dec push jae and sub sub push jle repnz pop inc inc jl pop xlat int3 ret or xor stos sub pop jnp daa jns xchg sarl sub into loop xchg ljmp xor jmp gs ljmp icebp sbb add inc xchg mov stos mov or (bad) mov xor js (bad) out cwtl stos fbstp add mov add and ljmp insb xchg (bad) (bad) mov jp (bad) repz stc mov jmp lods xor pop mov jg in cmp ret cwtl mov mov clc xor popf movsb outsb sbb or mov or sub insl add mov outsb push mov lret stos push cmp adc scas sub pop sub inc imul data16 mov loope orb addl jl rcrl mov add mov xchg dec mov sti jle pushf or inc dec sbb xchg shrb out popf idivb repnz mov ljmp and popf je call xchg (bad) enter mov (bad) aad outsl hlt add into lea jnp in cmp sub sub pop pop mov add (bad) xchg cmp divl div pop pop cmp sub sti loopne gs pop test scas jb or js pop mov mov jecxz push notl xor enter int xlat mov xchg hlt cli jmp xor fildl add into rclb mov clc clc xlat cld or call mov lret sbb xor sub mov add and inc out lret mov arpl lods and xor pop dec bound push xchg rorb mov adc and and xor arpl iret cld mov outsl ret daa mov int3 jae fwait inc rol repnz or push dec imul in mov and sbb out iret data16 jmp lds sub in scas mov inc cmp fwait les add fdivs fsubs jne fs cli dec dec out sub out addr16 mov jl and pop push fsubrl mov (bad) xor lret lret sub das pop cmp fcmovu push dec js (bad) fimull add pop fwait push mov sub push ljmp (bad) (bad) dec pushw xchg lock mov rcll fstpl fs hlt ss (bad) jmp sbb out push rorb adc inc xor mov sbb jae das pusha scas testl leave leave ja jno mov mov mov mov pop inc sub push (bad) sub cmc popf fdivrl pusha jmp popa sub ja (bad) mov cmp jecxz xchg xchg jge lret cwtl cltd repnz add lret mov rcll jmp mov test fldt std pop sub sub (bad) sub jecxz,pt and or sbb inc push sub jne push xchg push fisttpll inc push jmp cltd in int3 test js in fsts cmpsb mov mov sub or push mov test rorl hlt das push int3 out loopne xor test subb push loope mov add inc sbb sbb fsubp daa sti rorb or leave leave or dec jp loope aam jge mov add lods mov mov ret insb les pop sub aaa (bad) (bad) jbe iret pop adc mov lret ss mov mov jne pop sbb (bad) dec stos clc sub dec pop lods mov ss mov dec lret xlat test jo scas (bad) pushf clc mov pop rep movsl jno (bad) mov pop imull push leave inc push and lock fs mov xor add jne in adc mov incb out jle push repz cltd mov rcrl dec sub ret pop cmp add push les cmp bound (bad) ficompl test aas stos lds mov shl out sub pop or cmp pop cmp or xor cmc inc out out cltd ret test loope sbb loope mov aas rorb pushf enter mov sti xchg pop xor loope ret mov dec cmp xor sub or mov mov mov inc sub push push pushl sub push xchg out ficompl dec data16 mov lret lds fsts adc icebp sbb out xor negl jle mov mov sbb rcrb hlt dec jb into push inc inc and mov pop add mov mov pop sub sti aam rcrl fidivrl outsb inc into dec int3 or and adc push gs xchg rcrl test das and int3 mov leave mov ret mov sub cltd incl clc xchg mov xchg imull call aam and xor rcl (bad) and lods in and out mov sbb fldz and jecxz cmpsb push rcll and ljmp aaa or out mov aam or sahf jns xchg or and ds cltd int je repz or mov pop cmp sub inc test fnstcw addr16 fnstcw mov jmp pop jg call sar arpl or in loop xchg push lret imul daa jl clc sbb (bad) xor cmc icebp xor insl sub xchg xchg imul dec (bad) cli fnstcw les (bad) icebp xchg dec les (bad) xlat push movsb pop sbb mov leave adc dec out out lret cmp pop je jmp and divl sub insb xchg popf decl and aam pop mov lods stos (bad) aam push or mov test into mov xchg repnz or sbb or outsl mov and sarb jns push mov push out sub add mov and mov or inc imul adc mov aaa adc cmpsb fwait jb (bad) sahf or and aas mov cmp push popf test sti loop xchg fimull in fisubr jmp (bad) jnp out out fisubrl jnp imul lock inc and pop rol jg cmp xlat in daa ljmp ret pop repz imul fldenv xor stos daa or clc test clc stos popf jo sub jbe add xchg mov jbe dec gs mov sub inc js ja dec jmp test jl or daa pop mov jmp and scas gs lret jae xchg shrl js loope loope out popa add ret or push xor sub (bad) imul or xor insb iret pop xor push or leave sub dec lret and movsl inc inc mov das pop xor mov aaa cmc xchg inc adc mov int3 xor jecxz xchg lea push xchg pusha pop mov cmp js hlt pop outsb fstps lret jmp xchg sub add roll (bad) sbb cwtl pop jmp mov (bad) pop jbe (bad) out fs into loop or cs jbe add ja mov sub add add jmp sti sub or xchg cwtl data16 or or iret (bad) negl jo lret lods mov pop push shll fisttpl lea (bad) scas add scas (bad) (bad) dec and jp add cmpb push test scas dec sarl loopne lret stc lret xor fldenv clc psubsw (bad) pop or arpl rolb lods cli lahf push jecxz sub push or push sahf jb movsl clc movsb mov mov mov mov mov loop push icebp (bad) in xchg (bad) popa lock outsb call mov push mov xor (bad) icebp das and aam into shrb adc sub xchg pusha push add xor lods (bad) mov add fdivr sub jbe fnop lods leave xlat pop out loopne adc repz dec mov xor mov adc add cmpsl jecxz lds mov (bad) jne jecxz pop mov stc mov or repnz push nop rcll int jmp movsb mov lds call sub inc xchg sbb inc mov popf pop push xchg sti add sbb (bad) pushf xor adc pop lret push outsb lcall pop loope,pn (bad) fdivp into insl popf cmc xchg mov jecxz jbe and or ret daa icebp pop mov into rcrl int outsl cld adc pop shrl das cli sub add mov push xor cwtl shr mov fdivs jge ljmp and lahf adc xor and (bad) sti lret inc test mov mov or sub sub (bad) xor idiv dec add lret sbb push es pusha int add mov mov mov adc sbbb adc adc cmp mov mov (bad) pop mov daa xchg je push dec jns scas jle ljmp jmp jle sub dec int3 mov sahf mov mov mov call repnz pop int3 sbb push add aad or sub inc repnz fisubrl iret push decl add sub dec and or or add xchg mov mov mov rcr add inc lahf outsl lret in insb mov lahf adc popf addr16 or sbb sub in cmp (bad) mov mov lea into add clc or (bad) push pop je test stos cwtl mov xchg int3 xchg ret dec into mov scas mov xchg mov jne jecxz js xchg pop sbb xchg into outsb les jmp add push pushl inc aaa (bad) out push or negl mov jmp mov dec cli lods pop jne jne mov mov (bad) cmp out dec xor out lds push dec (bad) out (bad) in imul lret les xor xor sub ja pop out sub add daa dec addr16 das dec mov and add mov push rcll (bad) addr16 and add add and stc je adc (bad) fidiv repnz sub add ds cmp mov pop pop imul addr16 mov out je mov shrl fisubr jecxz xchg (bad) bound and sti (bad) mov pop ds cmp xor flds fcoms cli ljmp jae scas bound push scas and cmpsl inc dec cli fs stos stc mov xor repnz mov push repz out popf mov enter call mov out sar jns xchg pop sti cmp out jp adc mov daa ljmp imul and add (bad) lods aam in or fnsave dec (bad) lret mov rcrl pop jl inc dec push sub sub sub stc jne movl mov mov gs push and and adc call ffreep pop fldl (bad) fimul (bad) mov mov push push movsl push pushf mov jle shrb xor xchg mov movsl jecxz mov xchg lcall pop mov jge jmp pop mov sub mov sub int clc scas pushf pop mov (bad) jp rcll xchg and decb sarb adc pop push das mov lret dec ds jl add ret pop sbb add xor and jle push pop fistl pop movsl incl xchg push call sbb sarl push idiv mov add ret adc sub jl pop xor lock lahf testb xor ss lret stos add sbb xorl sub icebp dec mov xchg (bad) cmpsb icebp pop ljmp push aad mov mov (bad) mov mov sbb pop mov sub xor in jle out test cltd cmp adc je mov cs xor push roll iret cmp mov sub ret (bad) mov adc push shrl daa divb add iret pop jns dec lds pop rcr repnz xor imul jecxz adc cmp hlt adc pop push pusha jp aaa mov xchg int3 popf inc out mov adc (bad) icebp loopne,pn (bad) popf jnp or rcrb and daa ja test sbb into aam ret jle push mov mov (bad) xor mov add mov and dec mov mov mov repz mov dec lods dec rclb in gs stos inc push pop dec pop jno adc cmpsb cltd and cli insl popf xchg sbb or and test (bad) xchg sbb jbe adc mov data16 jle and xchg pop mov out pop shrl test xchg xchg add out ret (bad) je ret outsb jl imul sub fistpl jbe and mov cmpsb jne into movsb hlt ficomp inc cmp inc sub and into movsl mov adc out or in sub out xchg (bad) push (bad) cmpsb jo lahf stc (bad) push into cmpsl xchg ror add repnz fistl or sub (bad) ja xchg sub xchg fs mov adc or cmovno mov stc xor (bad) scas xor mov ficoml shll pop inc cli cmp adc add jmp fs mov dec vcvtsd2si leave jno xchg xor lea mov xchg sbb loope xor jns mov lcall (bad) scas out pop mov stos sub pushf sbb (bad) lds addb sub or xchg mov call daa incb and dec xchg (bad) mov mov sub mov xor xchg push or test out orb add jmp xchg imul sahf fsts (bad) idiv sbb (bad) mov sbb cmp leave pop jg frstor js dec cwtl cwtl iret movsl mov cmpsl dec stos lret dec int3 mov push fadd lret inc lcall lret dec add je jb pop pop aas and sbb and mov jnp sar bound dec stos daa sete pop shrl and jle xor pop or xor das stos dec push icebp popa mov pop icebp outsl xchg cwtl rorb mov and pushf dec lahf push out push incl ficom xlat or divb adc xchg jne xchg push in and mov insl jbe lea xor call mov push sbb pop sub scas cwtl push mull in xor divb push shll mov mov dec jmp out mov mov add mov jmp sub pushf mov xchg xchg mov xchg iret mov push dec dec mov jns inc xlat fmull push lret sbb movsb outsl push mov roll adc scas jecxz cmp pushf mov mov icebp cwtl jbe lock out pop pop add daa repz hlt ret push pop sub in adc mov add scas lock xchg (bad) call jb mov jnp daa push dec ret cmc flds cmp push aas mov cmc fisubrl fcomps imul idivb xchg call pushf pop test std outsb popf test sbb cmc adc (bad) (bad) or cmpsl adc fidivr sub movsb aas or out and pop mov adc sar dec mov ret aam out sub inc dec pushl sahf cmp cmp xor mov xor adc mov (bad) jne fisttp or pop inc xchg push xor cmpsl gs out loop xchg mov cli in cltd loop in cwtl pop ljmp or adc sub mov xchg popf dec (bad) (bad) (bad) ljmp jo sahf lds xorb es jo imul data16 add sub roll sub sbb cmp test mov das add bound sub movsb jecxz push or push stos out or jmp mov lret mov push or ja loopne imull data16 ret insl mov icebp ljmp pop adcb mov push fdivrl dec sub loopne mov jp jl push pop push cltd fimull cwtl pop or mov pop ljmp sub out jge loope sub jmp mov lods inc clc test xchg addr16 iret and pushf mov cmp or int mov stc xchg in push iret scas xor cmp mov gs mov mov (bad) cmp (bad) sub cmp jo ucomiss mov inc daa out mov xor ja jne jle mov (bad) call jbe (bad) icebp jmp jmp pop jmp jbe cmp mov jmp inc ja icebp mov ss sub (bad) icebp cs test sub pusha out loop adc outsb jl imul int lret mov imul int3 inc (bad) dec sub loope cmp roll fwait mov enter sub gs mov lods fidiv imul dec das stc xor jmp mov sti cwtl sub rcrb pop test jmp xchg inc cli xor cld dec das xlat idiv (bad) fbld in cmp sub cli popl jmp in (bad) dec movsb imul lods push mov cmp adc add imul adc sub cmp sbb pop jb aaa gs and xor out (bad) daa out mov ret pop idivb push movsl sub xchg test repz je push mov dec out xchg ret dec add (bad) stos cltd out jl (bad) iret or aad fimul add dec xor fwait gs mov jmp pop repz je mov mov (bad) mov adc xchg stos insb mov jle inc push sbb or add xor dec mov rcr sarb xchg outsl xor stos or rcr test lret or adc lret insl (bad) test outsb pop cmp add inc or sarb sub or sub inc xlat lods les enter pop xor das or das out xor sub stc popf dec in adc or push or pop leave sti icebp pop sub xchg mov push xchg call mov mov mov jg jb call xchg xlat testb das jne das movsl cwtl jle inc les ret scas fldl mov sub lock push dec (bad) and lea ud2 nop or xchg fidivl hlt lods mov in clc sti xchg push inc notb cltd cmpsl lods pop mov das lock outsl ret xor xchg (bad) jbe leave cld loopne ret loop lret leave in fistpl mov jns fs xchg fdivrs out fstps jbe sub scas sbb cltd cli rorb dec mov ds repz roll into push mov nop lods ret inc lahf cmp sub outsb jno mov pop shl xchg cli xchg push lcall adc dec mov mov xchg gs fidiv movsb call cmp and and pop push inc es push sbb out mov or je lds add mov shr mov imul add shrl in or pop or sub push mov jl in xor sbb xor mov xchg xchg sbb xor stos int3 test xchg mov (bad) sub xor (bad) push outsl adc jmp mov cmpsl leave push sbb xchg daa stos mov dec mov sub mov imul or dec sbb pop mov dec or fildll xor rorl push scas mov xchg shl mov ss mov and xlat jae pop (bad) movsb dec in loop icebp inc fs mov (bad) dec loopne mov sub out adcb repnz jge das and jns cmc gs aad lahf cs test icebp mov mov mov jecxz mov pop cmp lock mov lods incl dec mul inc fwait jb xchg notl sub stos inc push insb sahf xchg out je dec ja pop (bad) mov push push xchg loope stos (bad) mov (bad) adc xlat xacquire and sbb pop (bad) jne mov push mov (bad) bnd mov push add sub cmpsb sub clc repnz xchg and push sbb sub lcall pop or adc and jle push jb mov push mov mov xor les loope fisttp jmp sahf mov (bad) mov popf insb aas mov pop xor insb notb bnd out mov sarl jl inc mov ret xor and data16 adc mov sarl int3 mulps shl lock adc (bad) pop mov imul sbb ja xlat push aad (bad) repnz sub ffreep dec or xchg xchg inc add imul pop xor (bad) repnz mov jmp xchg pop pop lret jl fs xchg std mov clc xchg or add roll mov mov aad inc daa imul gs scas xor idivb push push stc or xlat (bad) dec dec sub call sub sub xchg insl fwait pop ret mov jmp out lret pop orb jmp cld fcmovbe enter sbb jns loop icebp movsb or push test and mov jmp testl mov and add pop xchg and sti jno mov rorl ss jl add jl lret xlat dec push push ljmp add adc mov cmpsl fs repz fldl add adc and lea or and jp call movsl jno int and xchg lods pop sarl ja mov into push mov sub je fs mov push xor xor fdivl mov out ret fnstcw xlat mov xchg rcl push mov stc or fist or outsl mov ljmp xchg mov pop dec cmp or pop gs or rcr mov shrl pop mov mov hlt sbb cmp rcll lods inc rcll lret and mov ja (bad) mov sti lret or pop jns mov and or add lret inc mov decb outsb or sbb mov xchg add xor scas xor out (bad) mov push negb jg (bad) (bad) sbb jae gs sarl xor scas and sbb dec pop pop or mov push xor mov stos xchg icebp mov sub or rolb sub mov jne subl xchg (bad) popf push mov jge mov out and shlb lea adc notl sahf sub or dec pop (bad) and push fnstenv bound leave dec dec pop ss jnp outsl mov lret and push dec cmp mov es pop sub (bad) gs clc js fsubl pop fistp and add mov cwtl jmp mov pop mov xor xor rcll xchg shr push pop (bad) (bad) icebp lock cmc sub sub jmp sub xor inc mov push sti xor ret sarl add push (bad) dec add jle dec adcb enter push mov jae into sbb jmp dec fdivs mov xor ss jg ds out jne xchg mov outsb lock push mov shlb cli lret jmp clc mov nop (bad) pop add (bad) fstpt aad add mov ret xchg push or cmp sti mov xchg mov cmpl not lds das pop ror std aas dec mov mov fsub das int3 decl das adc push pop xchg adc dec mov push mov and aad pop and lret inc popa mov pop push pop or pop cmp es fcoms push addb std push popa jp jle xor xchg pandn lret lret outsl sub add cltd gs sbb negb out jge adc (bad) imull xchg jecxz mov aad cmp jns stc xchg rcl in push mulb sub add repz cmp into push mov mov cmp sub ss xchg js mov jecxz or mov loope fdivr jmp pop (bad) jp andb sub jg mov cli jle mov stos imul jecxz adc add out jle or xchg pop fbstp pop pushf in in adc push mov cmp and jecxz je in adc stos xor inc add pop xchg and std cltd (bad) ss inc dec add ror xor sar mov xor and lock lahf (bad) outsb imul int3 inc mov sarl sub sbb jb xor mov test cs mov xor (bad) push mov test lret decl and cld sub mov fidivl jg mov jmp xchg mov xchg push mov and sub add mov gs scas mov or sarb divl xor and stos mov (bad) mov cs or outsw (bad) mov insl dec push cmp call push cmpsb cmpsl and std xchg dec cmpsl pop into ljmp ret and mov lret mov out dec xor pop ja shll ret repz iret sub lock push clc ljmp ja out xlat lds es add ror jg das mov xor clc sub sub loopne fldz dec aad xchg dec into test out xchg outsb sub sub in decl jge sbb dec jne mov push (bad) fstl imul sbb inc repz pop jle inc mov mov sti in adc fsub icebp jmp rorl dec lret not mov pop jecxz inc gs notl push push ficomp and jne pusha (bad) add cmp imul add pushf and movsb fsubs imul out fisubr lret clc stc xchg lds pop and les dec popf lds xor (bad) xchg mov call pusha adc cmp mov mov cmp pop push sub repz jnp cmp idivb push ds xchg loop cmc or xchg daa bound push nop popa (bad) iret out dec clc clc pop mov mov ret mov inc pop (bad) mov sub mov pushl les cmp stos mov xchg mov scas push lods jmp jge mov dec jmp lret adc bound adc push ja push adc scas gs loop iret and jg nop mov add aad xor adc cmpsb xchg inc mov call iret cmp into pop lret cmp lock add fidiv negb push pop loop or mov pop mov pop std xchg hlt jl inc add and int or fildll pop and scas pusha xor or lahf push mov cmp shll xor inc jg sbb clc cmc (bad) das pushf les cltd cmp sbb mov cs int3 sub hlt repnz sti (bad) lret push dec cld in ret rorl lret jae pop loope cmp leave inc mov ljmp test sub jno mov ret call or iret ret shll mov out mov lods xor ds sub loop sbb and enter popf sti mov out js mov ljmp jns popf sti mov pop mov js std pusha push or xor mov into adc jnp add or jmp (bad) mov mov (bad) push push (bad) mov mov push cmc sbb and and add sub aas push push cmpsl xchg or ret and xor pop mov adc mov pop push pop mov (bad) sahf pop gs notl daa add (bad) insb daa or aad add and cwtl inc sub pop leave mov addr16 fisub cmpsl cltd pop add push mov adc inc xor dec mov push mov pop shll xor popf lcall negl (bad) std push lret leave pop jmp addr16 xchg mov add into out daa or outsb out sti lock add push pop test mov movb lods out out dec ljmp fidivr rcl xchg xlat mov add and xor pop jae and ljmp adc xchg ret mov je sub arpl sub mov dec stos sub add push xchg popa lahf and xor inc jmp cmp sub push dec push and clc adc fnstcw divl or std outsb inc negb fs ficompl (bad) mov aas inc xlat lahf dec rcll adc into and xor cmp xlat and bound push (bad) cwtl mov rcll (bad) out mov push leave jne xchg mov mov sbb popa mov mov and cld cmp dec out lods stos lods shll pop (bad) mov xor inc into pop mov aad xchg cli data16 mov xchg pop dec les and push mov notl adc inc (bad) or daa mov in xor imull push movsl push inc mov sub (bad) or out stos dec jl dec out mov cmp jb popf cltd and mov data16 mov or daa pop jnp neg add inc nop rorb testb and xor sub mulb or cmp sarb pusha ljmp addr16 xchg repz xchg daa data16 xor in jns dec idiv xor loope iret ficomp add sbb test mov pop (bad) pop subb pop lcall or popf pop mov hlt jmp lea sub pop jnp mov ret std xor cmpsb cmp int push sub das daa callw dec (bad) mov daa iret test fisttpl repnz pop pop rorl xchg out inc push push aam jmp cltd nop out ds xchg xor xchg or lcall out ja in mov int3 xchg testb shrb push or into lock sub pusha sub imul lret (bad) gs outsb out daa xlat test rclb pushl mov out or mov lock cld mov test lock inc push cmpsl scas iret mov jno out pop sub xor xor in daa push notb (bad) mov push and dec sbbl xchg sub mov stc mov ja int3 out daa xor lcall sti test xor mov xor pop cltd jb pop xchg cld pop mov mov fucomip xchg xlat insl fldt jg pop jae add pop add push cmp stos clc js jns out mov cmp push js popf aad pushf fsubrs add mov aas out mov mov inc inc adc and fsts sub dec mov pop out cmp daa notl cmc mov lods push mov push lds xor cli mov xchg and (bad) (bad) lcall lret or cltd push sub nop dec add and mov sub and push enter nop cmp out sub lods fldt or pop fidiv pop dec (bad) lahf mov inc sub cmc adc popf adc lods mov pop loopne mov shr je scas out daa add mov (bad) repz gs daa push sahf inc xchg loop fstl hlt (bad) mov ret lea mov repnz mov icebp push pop or mov inc roll popf add inc out cmpsb mov (bad) sub (bad) test jbe push pop mov jg mov decl adc sbb sti int out pusha cmp into sub inc mov push cmp cmp stos mov mov icebp dec jbe adc mov mov jmp sar cli jo mov outsl scas jmp xchg mov jmp dec add and jno mov repz stc movsl leave (bad) je imul mov or clc mov mov fistp mov push push cmp pusha add shrb insb jne subb push cld cmp (bad) xchg jmp lret xchg cmp movsl repnz das add fstp (bad) or add jb cmp jge stc jnp test mov cwtl or repz xlat lcall and xchg repz xchg mov jge cmp ss icebp pop xor mov xor lret xchg sarb mov or jle xor daa in cmpsl jle adc sarl jne mov (bad) leave xlat push dec mov shrb fdivrp pop dec (bad) mov stc test sub jae or xor arpl add cmp dec out push in xchg (bad) and in xlat mov pusha mov and mov lret in dec pop cmp cli pop imull arpl sub imul scas jecxz pop mov adc pop imul in ja jae pop mov add sahf orl (bad) lds pop mov xchg jecxz dec mov xorb das mov xor jp and insl jns mov fstpl sub mov (bad) cld lret inc cmp imul xchg dec ss xchg dec lret sti outsb les lods aad pop xchg stc add cmp adc xchg push or sbb mov pop pushl dec rolb mov clc cmpsb push mov xor add add mov mov popa fisubrl ret dec xchg outsl lock dec mov sub adc cltd xchg add iret adc xchg call add mov sub daa jbe movsl xlat xchg (bad) pop xchg sub daa sarb bound pop mov add xor negb lds fsubrs xor push daa add add stos loop (bad) (bad) sub cmpsb ficoml and xchg xor push push dec (bad) jne hlt push icebp popf imul fldz sub fwait mov mov cmp pop shr add mov int3 sbb xchg jno cmp rorb pop icebp stos gs orl loopne aad call add (bad) dec ret clc pop mov inc outsb adc inc push lds (bad) mov push scas repnz sub sub movsl xchg sbb (bad) into pop jle inc scas in shll jg daa scas pop adc mov xor or add mov icebp push lods imulb mov and cmpsl nop roll or push pop daa jg jo pop sbb sub jb test fsubrl xlat xor and popf divl testl mov pop rorl dec stc cmpsb xchg shll movl inc imul daa incl popf loop push xchg loope lea test icebp jge mov in cmpsl (bad) rcll les lret jns sub add xor sti push insl mov bound mov jmp sub jg cwtl rorb adc mov (bad) (bad) fisttpl in imul (bad) leave test sub push pop xchg xchg dec lahf add lret lods dec shr lea inc popa or push add cmp ret test and iret cmc ljmp sub sub popa or pop pop xchg lret xchg cld fmul ja or jno or sbb or hlt sub pop test pop icebp aad repz es orw pop lea mov add mov xor or and sub adc out call aaa and data16 ljmp xor dec mov sarb mov mov push or push push stos mov cmp jo (bad) stc jmp test and (bad) outsb and idiv aas pop sub mov cmc (bad) bound sarb adc or ret mov (bad) cmpsl inc mov and test pushf popa xchg (bad) std shl rolb jecxz daa inc sub popf fsubrp leave int3 arpl call push ss and xchg popf lds loop aam jmp mov data16 inc push and push dec mov hlt leave pop bound fs imull dec call fdivrl push (bad) mov pop pop mov add mov push mov fdivrl pop or pop jge pop out sub (bad) jmp mov jnp (bad) mov mov sahf mov mov mov jbe imul ja adc push adc enter mov pop xchg out lea or sub push rcrl xchg mov add adc and push int3 movsb pop out adc and cmpsb rorb enter (bad) shll pushf xor adc js cli fwait inc cmp jo dec pop cli jl push stos sbb pushf or inc pop test sub lea cwtl jnp mov loop lret or stc fldl aam mov mov repz mov (bad) or sti and stos pusha in ljmp ret xor std cbtw dec ljmp inc or int3 xchg lahf pop inc in cli pusha xchg sub and push xor mov data16 dec sub dec push sub xor or scas adc out pop out jp outsb sub jns (bad) mov ljmp ret push (bad) xchg and je pop sbb das (bad) mov adc and xlat (bad) cmpsb out (bad) xchg std mov out pop imulb sub les push movsl lret xchg das jmp bound insl je push sub (bad) jb (bad) fidivl and mov mov leave cmp or jmp movsl jne add notb jl rol fldt popf movsb fisubrl (bad) sbb loopne fsubrl add (bad) mov mov or jle push lret outsl out rorl pop sti inc adc mov scas cmpsb dec adc aas int dec cmp mov mov call add and push repz mov push lds add jne xchg push and gs out sbb add out imull xlat and fist arpl movsl fs mov sub movsl xchg fdivr (bad) sar loope jle js or adc (bad) mov std repz mov (bad) pop adcb (bad) (bad) stc jp push std push mov jg push dec fisttpll jp int cmp mov mov sub loop adc xchg dec cmp repnz into jo ljmp pop std jo icebp mov stc xor pop icebp cmp aaa out repz mov mov cmp mov mov imul push mov test sub xor rcrb sub cld dec mov xor sub push sti pop push cwtl pop cmp fisub lahf cltd lods lret (bad) pop or xor or dec in lods mov jne push loop adc jge ss repnz out xchg loope or xor push pop out cvtps2pd fdiv xor rorl into push movsl xchg (bad) sbb fidivr xor xor sarb (bad) outsb (bad) push (bad) xlat push out dec fldenv icebp xchg imulb mov fcom (bad) imul pop or cmpsl push in xchg leave lods mov push add cmpsb fldcw das lods pushl ljmp imul push push das pop cmp dec dec daa sub push mov inc and xlat push adc sbb repz sub (bad) (bad) imul jmp cltd mov test fisubrl mov pop call xor bound and orb (bad) and js mov mov stos xchg mov out stc dec insl pop scas (bad) fdiv jp add and imul pushf xchg notb or or xlat push xchg int and jle insb mov dec jl jmp pop dec mov add xor adc push pop push lds shrl push out aas out dec leave mov out push ja in lcall (bad) mov jne pop aaa mov out xchg push loope imulb sbb or sub fnstenv and jg (bad) cmc pop outsl sub gs pop insl fsubs fs ret mov jecxz dec mov jmp add push dec (bad) push adc cmpsl movsb out loopne loop push mov out (bad) fwait jge adc xor pop mov and cli sbb scas cld repnz bound sbb ss mov lea test das cli fbstp cwtl outsb mov out aam dec inc pop fsub pop pushf stc jmp push aam ss (bad) stos sub shrb jecxz add pop (bad) jg or push lret sbb mov ljmp sub sbb pushf cwtl cmp push cmp or cmpsb mov sub shrb cld ret sub in daa aad gs or adc sbb mov push cmp xchg push mov shll adc mov stos negl pop mov mov dec push (bad) lahf cwtl mov outsb xchg dec popa or (bad) xchg and cmp lret or push ret repnz out in movsl jnp movsb push and and pop ret fldenv in into lahf (bad) stc xor push push pushf mov shrb jmp in push lock adc mov imul setbe cmp xchg int jge out mov add test adc stos lret (bad) out adc lcall push pop cli popa out add hlt cmp dec mull mov cmp mov les out sub or mov jmp into mov xlat out cld iret mov inc mov imul or clc push addr16 and mov mov jae inc mov popf add mov mov repz fcomi xchg rclb adc aas loop leave or xor insb (bad) mov pop (bad) inc pop sbb xor in inc ret and jmp sub iret dec and test adc or pop mov movsl mov and repz adc mov cli movsb mov (bad) sub sarl add mov sbb pop sub fldenv out mov lret out push or sub rcr push imulb popa push cmp and shr cmp out mov add sbb out pop (bad) add xor dec cld repnz push xor jns loope outsb clc or jecxz ficom ds adc jp and pop test iret scas sub fidivrl daa mov paddsb mov xchg lret mul dec and cmp sbb rcll adc ljmp sbb lcall mov sub mov imul pop in idivl mov xlat xor sub dec adc mov sub fstpl ficoml xchg pop cli stos cmp xor push cmp lcall fidivrl ja jne stc xor cmp hlt or scas iret jmp dec mov repz in (bad) add xor je fs addr16 out sti jne cli std add ds bound (bad) xchg mov and xor cld daa mov out or es mov inc cmpsb push xchg out scas lret add mov adcl pop mov adc and xchg and test mov std inc push and movsl (bad) (bad) cmc ds in cmp pop pop es cwtl cwtl sub repnz jmp loop or mov mov fisubr leave jne pop ja pop add inc xor and dec dec stos (bad) cmp out lret mov lds repnz ja or (bad) aad mov jp dec or int lock pop cmp mov jl xchg cs rorl cmp adc add inc mov sub and add cmp xlat fucomi iret or sub or push movb out call inc mov icebp movsb leave push or xor jle mov mov bound mov ss xor push or lods repz icebp inc sub ljmp pop push push cmc movsl pop int3 add adc subb ljmp outsb popa (bad) movsl pushf push inc dec (bad) movsb sub icebp jle dec daa mov mov push stc add mov call mov imul sub fcmovu ret (bad) stc enter jg repz lahf jns inc add and mov fnsave idivl jne (bad) dec mov pop xor pop add jne sbb xchg daa inc les dec jl in jbe jns dec or jecxz mov inc push and lea sub popa out and jp adc loopne jnp idivl ja and pushf or or into scas daa out sub add dec push jle movsl adc sbb inc mov xlat dec repnz pop mov or (bad) jge stos das (bad) or and mov pandn shll mov sqrtps mov out push xor jns mov ficomp cmp push ret imul xchg inc mov divl (bad) jne xchg push es sub and push xor int sub xlat aad sbb popa in in fisubl xchg fs mov daa pop (bad) and xor mov cmp mov (bad) xor sub rcrl cmp rclb or and shl daa cmpsl or push popa and push xchg scas (bad) adc and xor std push fxch lods aad je in shll pop leave jmp push lret idivl inc lods mov in push out xor std popa (bad) pop lods cmc sub aaa stos aam jmp cwtl cmpsb mov push xchg stos shll aam push testl in lret je pop shll mov gs jno enter lret leave sbb jl das test testl das negb repz push pop mov mov popf stc add sti mov adc pushf mov push outsl jb pop aas fdivrl mov rcll cmp cmp cs pop xor pushl jmp (bad) imul inc loope cmp scas cmp test (bad) imul lret loop sub (bad) mov (bad) dec sub fsubrs call lea or xchg jmp in out sub and add sarl or divl mov fsubs dec pop pop inc xor test ljmp mov xor or lcall inc (bad) push test repnz pop movsb and add pop jb xchg rorl gs fnstcw xchg movsl push addr16 scas lret arpl (bad) (bad) hlt add xor jge fsubr scas xor test dec or sbb sqrtps dec xchg sti les dec xchg lret and cs repnz or ds xor shlb (bad) xor or ss imul xchg add movsb sti mov dec scas test sub cli adc subb notl mov outsb cmpsl fistpll roll add leave adc cmp jle dec jne mov or sbb addb and xchg add sub pop dec popa jae add mov mov sub dec cli popf testb add jecxz dec cmp push cmp scas addb xor jmp movsb ljmp or sub out sbb or dec inc xor cwtl callw imul sahf adc (bad) cmp (bad) adc ja xlat jmp push decb or lret pop inc mov imul pop out jne orb or outsb mov or ret fisttpl into int3 pop or mov xchg out scas repz repz (bad) and ljmp sub cmc outsl xor lods daa test flds into int outsb enter movq div mov sbb dec ljmp pop inc mov jbe lds test fdivrs ret in imul insl adc ror jae mov ret sub gs mov out xchg cmc cmp or insb pusha test and lods popf dec sti fcoms scas aam mov rorl (bad) (bad) lahf (bad) push lret mov cmp jl ret popf xchg mov sub and and xchg pop stc mov xchg jno add fldenv fldenv lods mov or popf push lret (bad) xlat add repz test sub test dec sub out addr16 or sub das iret add mov push add xor jle aad in jne fdivp cmp lcall mov into lahf gs das or xor roll add push push outsl in inc mov mov scas pop addr16 out mov aam into add dec imul (bad) (bad) (bad) or btl pop les lret mov pop cli dec pop in pop shl mov dec stos mov sub or das in test out jl jl bound sarb sahf arpl pop inc rcrb out push xchg pushf xor pop xchg lea aaa add push enter (bad) jmp movsb lcall bnd in in cmpsl repz out icebp sub mov xchg jnp ds in ljmp dec mov jbe leave test mov pop pop stc lods push negb xchg xchg mov lahf xchg leave cli bound jmp (bad) out add in ret xchg (bad) mov sub das sbb mov mov into mov cmpsb lods daa or jns jle xchg (bad) scas mov lret cmpsb repnz cmp and jge mov popf cmp inc hlt clc mov scas movsb jecxz dec xor aas push movsb mov pop (bad) xor adc jmp js mov xlat mov std pop (bad) adc mov aad lods dec data16 popf les lock mov xor xor nop cs fldt or popf int3 gs fidivr sbb cmp cld pop out and sub add cmp pop (bad) lods adc jbe hlt xchg je push lock scas sub and sub and cli scas mov and mov xor cmp je mov and mov mov mov test add scas sub decb mov sub lock scas sub pop stos or out jns push in mov pop cmp push push test mov fsts adcl popf sub jmp push repz outsb jmp divb add and cld clc popf push mov or cs mov in scas fisubr jmp inc xchg fistl insb sti je loop dec int leave sarb dec sahf push ret dec out mov push or das (bad) cmp sub jle add push ret sub enter or rcrb cltd mov jne sbb out testl fisubrl dec dec inc pop lret call add dec popa into das lret mov and fwait lret xchg xchg mov idiv les ret repz dec jmp xchg xor xor jmp ljmp out inc and cwtl hlt sub inc lods lret add mov jle test mov lcall dec shll fdivp hlt stos js mov lcall (bad) pop adc std (bad) daa mov inc or out cmp or bnd adc and ror das sbb cmp jmp pop inc mov add scas xchg loope sub std cwtl xchg cld outsb and cmova cld outsl and outsb pop and inc and mov dec or int3 movsb xor shrl cmp movsb enter stc fstl test add xor mov jnp dec mov lret pop jp cmp das iret fsubr icebp cld mov jl scas add fs jge and push inc movsl test mov ja mov jmp icebp aas mov xchg icebp sbb or mov icebp idivl enter inc inc movsb or dec push ds (bad) and and fistl movsl data16 pop rep mov mov sti push dec fnstsw xor bound cld outsb insb cmpsb or lret pushl mov fild pushf mov push jne pop dec cmp xor xchg jbe ret pop mov inc add scas fs testl mov leave and mov xor sarb cmc jns inc jmp sbb into mov lcall rolb ds sub je cmp sub xor (bad) dec nop insb mov sub clc xor lahf jne leave pop lods stos mov inc daa out xor bnd dec into mov (bad) out xchg jle ljmp add flds and or mov (bad) icebp fildll mov inc sub mov jne inc pop int3 add jb sti and dec (bad) and mov sub (bad) push leave mov mov popf jne insl lahf jl push pop mov xchg ret mov (bad) sub les test cld lret rcll std pop lods pop (bad) aas clc pop add imul sub sbb cli mov out cmp cld dec movsb sti mov xchg ret (bad) mov into mov sub gs sub and aam sbbl insb je xor stc les notb jp shll inc mov push mov mov fsubrl and mov sub push into outsl in ret xor or add jecxz xchg push pop icebp jae (bad) (bad) sub push xchg lds adc hlt lret push out jno xchg leave loope cs imul mov fldenv movsb lds jb scas ss jne repz popa repnz (bad) repz add xlat inc into pop mov fist and pop icebp scas sub test shr xor cltd xchg fnstcw adc mov xchg jno leave aad pushf inc loope ljmp stc shll xchg sbb je out stc mov mov dec jnp lahf loope jmp js fucomip rcl out and insb rcrb mov sub repz (bad) mov mov decb lahf pop fmulp adc rorl out or dec sub cwtl xor (bad) outsb incl iret inc call sub pop aas in insb mov flds jp pop sbb enter push int3 cli lcall cld inc mov and (bad) xor test into (bad) mul (bad) rolb pop mov xchg xor in scas mov es xchg push lahf and dec clc push loop and push dec mov mov push or adc jmp cli jne push in jmp lods cld xchg movsb stos ret test xchg and and (bad) cli imull dec rcrl or outsb xchg jb jns out ret xchg stos fistpl push inc adc in daa arpl cmp mov and test add out repnz xchg pop and lods push mov inc push adc mov es lods (bad) mov rorl sub dec (bad) out pop dec test outsl test mov sahf test shr lods push xchg mov flds data16 out popa jmp pop xorl mov mov xor adc clc mov lahf mov jno inc out xor pop je jb fs or (bad) xor scas or test add into cwtl push xor cmpsl and xchg loopne in jp jle call xchg xor inc pop xor fbld cmpsl fs lods aaa ret cmp insl mov add fcomps fcoml add adc mov add andb add mov repnz mov sub loop sar pop dec mov and sahf dec imul mov loopne in out addr16 imul xchg setbe mov jg pop out sub add pusha mov adc ds jp es and sub mov in dec mov aaa jnp lods dec loopne ds stos xchg sub jae adc adc pop aam fimul or xor sub test lret cmp mov cld jo call ljmp jg mov aam fbstp dec fisttp and out jmp add (bad) hlt cs pop sbb or xor dec sbb inc mov les cmp icebp push inc and inc call lret das xchg cli leave and into push mov add stos pop cli pop leave ljmp or jne mov adc sbb adc cld sub adc jp mov rep test adc and inc mov outsl ja push scas pushf adc (bad) mov aas pop repz xchg lret repz jns movsl lods xchg or lea or sbb int3 popf aam jae fsubrl or dec gs into ja clc mov out mov jb sahf xchg into jmp mov sarb dec std in pop xchg fisttp out adc lock xlat nop int3 sahf sub es add cmp cmc and add mov push clc das stos adc push mov jns lods jne ss sbbb or add cmpb xchg lcall scas aad and aas xor lock negl ret mov mov (bad) pop mulb push sbb mov outsl xchg jo iret int3 dec mov or les test leave (bad) sub movsl adc (bad) icebp cmp jecxz ja and ljmp mov popa adc ljmp jbe les pop scas insb inc mov pop mov sub outsb repnz sbb pop sub fisttpl sub dec fs test sti mov cwtl or or addr16 test push rolb imull dec cmp sub sub insl test push fs pop add sub das or inc jbe cmc jns inc sarb cltd xor pusha imul xchg mov jmp lock cmp pop sub test sub add (bad) lret lret and lcall rorb loop xchg stos xor adc or adc adc pop mov sub std into xlat daa ret rorl (bad) mov xor jnp je arpl cmp (bad) out dec addr16 imul add mov outsl pop ds xchg mov fs rcl rclb sub inc sbb sub mov das cmp out test fstl divb out ds in (bad) test cmpsl jmp cltd enter push adc mov xor notl push mov and aas pop (bad) push xchg call pop das mov jne mov jge fidivl je mov pushf xchg jmp hlt imul cli sub rolb dec ljmp ljmp fsubp loop cmp ror (bad) outsl call daa ficom lds stc mov or in xchg fimull jne (bad) out mov inc jmp lods dec pop mov mov test and cmp fstl push aaa sub lcall rcrl pop dec push cld gs cwtl lidtl jecxz push or mov in cld sub stos popf xor clc mov xor mov xlat mov add lods rol fstl cmp leave dec push mov jecxz in cmpsl cld lock or push xchg out pop repz xchg cmpb push aam push sbb fildll xor mov xlat inc add inc pop and or std jns dec push pop gs sti in call dec mov push (bad) clc or add mov shl mov add mov sarw in pop cld pop (bad) fadd fmuls (bad) jmp dec xor dec add and and lret xchg dec loop pop ja sub sub add push or leave cli in inc mov jae ljmp scas jns dec lock mov lds dec mov les cmp outsb inc (bad) xchg jmp popf jnp lods push cmp shrl das pop push cmp push jmp add sub pop xchg mov fisubr insl out dec idiv and ljmp mov jno call jae sahf mov inc in adc adc add cli or push jmp and push adc xlat xchg xchg mov pop mov out sub cmp dec lret lcall add jno roll jae dec aaa (bad) popf cmp dec lods xor sbb mov xchg cmp (bad) ret pop jbe fs scas or and daa sub pop mov out leave sarl xchg daa leave xor data16 fstpt movsl inc add sub add xchg cmp push jmp mov popf and fstpt jne jecxz adc popf mov in mov cmp leave pop mov lock dec scas fs sti or or add pusha loop les into ljmp loop xchg les notb les dec lret out es pop loop mov xchg int3 (bad) xor mov mov aas cmpsb cmpsb dec jmp inc daa ds and cmpsl jecxz and sbb movl stc xor in cmpsb dec stos sub sub ja mov xor pop icebp repnz divb cli out jnp scas jnp scas sbb mov sub clc push movsb int xor out mov cmp xlat popf (bad) cmpsb or push jae jecxz in or fnstcw insb xchg jg inc xchg lret mov (bad) ror out and sbb fstl adc scas pushf cmc (bad) dec or test or mov xchg push push mov fnstsw mov in and clc into lahf cmp push loopne lahf jns outsl jae out cmpsl xchg rcr sub adc movsl and jb dec inc push xor icebp bound das cli das sub fisttp dec push mov dec loop xor test mov sbb lret std das mov fld rclb pop sub cli dec jmp cli lret sbb repnz mov call stc mov add mov mov repnz fwait lcall pop je call xchg mov and test (bad) ja jne out bound pop loop push (bad) xor add subl or xor call js and mov (bad) lret adc jmp sbb push sarl or popa jae into js mov push pop loop aad pushf das cmp push notl out fisttpll sub and aad inc pop jns scas (bad) lret fbstp dec push (bad) insb loope lret loop sub push or pop pop ret or stc jne int3 test and sub leave stos ds ja mov fnstenv scas leave (bad) ret imul adc stc jno dec dec mov dec (bad) outsb lret lods pop sbb frstor push add jecxz push sub cld daa loope or js xchg sub pusha aam push and lahf jns outsl (bad) lret into cmc cmp jge fcmovnu xor cmp sar sub sub repnz (bad) mov fs bnd push mov mov stos mov shrb mov fstl and (bad) out dec xor mov pop sub stos cmp and jb xchg mov mov out pushf gs xlat push jo mov push nop adc push xor and ds sub add xor add xor jbe adc icebp mov scas (bad) mov push pushf mov mov mull lds lods lea xchg daa add mov push pop fisubr xor mov add mov popf in push push and popf std mov movsb adc test sub test mov jecxz je jmp aam push (bad) dec clc adc push je pop mov pop (bad) in or sub push mov and shrb pop out sub fistl call pop or repz (bad) sbb inc pop lea in cmp ret jl jmp jge pop dec insl fisttp xchg push lret es pop push cmpsl xchg (bad) mov pop daa pop sbb aam in mov mov (bad) pop rorl ljmp mov mov loop push aad std (bad) cmc out pop stc and ljmp jno xchg dec xchg (bad) cmp sbb pop jecxz sub cmpsl inc (bad) sti adc mov pop test lret pop or pop decl popf popf mov test scas stc inc lcall cmp or loopne inc sarl popl mov scas sub ds pop adc or adc jbe sub cmp data16 test and sub mov push (bad) push pop inc or mov pop les enter sar (bad) test dec test sub out xchg into adc push xor inc and add pop aam imul and jae add icebp inc lret add xor mov scas or aas cmpsb or js cmpsb (bad) mov daa jo mov xor lock nop dec mov cmc (bad) push icebp push (bad) inc jno subl jle cmp stc repnz shrl adc cmp mov stc packssdw std icebp jne jmp sub pop test cmc xchg clc les clc (bad) in aas sub push lcall mov in adc sub jne pop xchg dec mov bound stc pop xor xchg sub xor imul lea sub pop jmp dec dec (bad) faddl popf insb iret sahf xor mov push icebp hlt lret fadds mov sub mov das je,pn mov xor adc cli lret mov mov outsl (bad) (bad) stos fsubr xor in repz push adc sti mov adc clc out pop ret xchg jmp jl adc dec cli frstor and lock mov popf pusha mov and xchg push mov hlt cmp out xchg or fdivr mov lahf push cs jg xor hlt sbbl dec cmp imul xor add sub arpl clc dec pop dec push xchg jbe mov jo (bad) ja test cmp cmc or gs inc addr16 jo push fldcw dec or lock sahf lret adc mov jg push add movb pop stc push mov outsb adcl xchg cmp mov mov (bad) aam aam pop jno daa xlat add (bad) cld xchg pop imull repnz and dec fldt xchg fbstp cmp xor xchg push dec push rorb aad mov mov shrb push out lods pop shr loope mov jmp std inc movsl push pop (bad) mov (bad) repnz out sub push (bad) stos sub (bad) sub sub bound enter ljmp mulb dec es scas mov pop and dec sbb hlt mov into add and mov sahf lea loop gs sub pushf pop xlat jmp pop mov or (bad) xor jbe pop jg mov inc cwtl push pop (bad) push add dec jle adc call jmp test lret push sub cmpsb out inc jno scas cltd aad out jecxz jno xor lret imul mov inc lret rol push divl sahf pop out out sub test dec outsb mov xchg jecxz pop xor imull jb pop out sub out mov pop push mov push fistpll add inc cmp movsb repz mov jb xor mov leave dec dec pusha and sub jl in sub rolb out add repnz sub jmp push rclb adc aam ljmp sub mov mov rcrb cltd xchg insb lods dec out mov das (bad) pop clc jb mov pop mov hlt outsb push jge add jno cmpsl hlt shlb lret lds daa jl cmp mov xor xlat jns xor pop movsb push cmpsb push lcall dec bound repnz in leave sub nop gs and xchg jecxz pushf cmc xor push adc jecxz jnp add fdivrs out add mov xor repnz mov out xchg cmp mov sbb (bad) jl or fimul pop sub shlb into sub adc adc aad insb xlat mov jg ja lea lret ret mov cmp adc repz jmp test adc dec mov ficom notl idivb push mov and jns mov dec xor mov jns inc and fcompl push adc add jo jg push inc xlat xor mov cmp rorb xor mov ljmp jg int3 xchg leave movsl xor sub mov in outsb lret or xor ret mov adc mov add xchg lods dec mov dec (bad) (bad) pop add sub ret sbb mov mov daa ljmp mov movsl shrb mov xor sahf fisttpl or popa lahf (bad) or add pop aam push cltd daa sub out out bound jmp pop (bad) dec cmc xor push dec fucomp jmp jnp ss sub mov pop jo xor fdivs out xchg mov xlat jp sahf jle (bad) iret or icebp lret es in and mov daa jmp jge push or std jns fldcw (bad) xlat scas mov lods flds pop push mov mov sahf int3 imul pushf rol (bad) dec or mov jl xor jmp leave fdivl fist mov push imul pop lods jp and jl (bad) or (bad) xor popf movsl xlat inc and lret jl push pop out and repnz into idivl (bad) jb mov xchg push lret jg pop sbb inc xchg call mov or inc icebp pop movsb push inc inc or mov dec dec mov xchg loope sbb xor jmp adc icebp ret movsb clc push add adc enter dec lock iret pop sub lret ror sar ljmp (bad) mov dec mov xor ja adc mov mov or (bad) and dec icebp fisttp in xchg out xchg scas xchg mov hlt xorl lahf mov mov pop sub sub push adc mov dec and sbb xor cmpsb mov ret fsub imul cld jmp xor lock out mov xchg fisubl dec add cmc das mov mov divb mov movsl and dec mov das out or outsb add pop loopne aas test icebp sub mov iret jno cmp jne mov dec imul pop cmpsl xchg sub mov or jb mov and lahf add scas sub and repz push push sbb (bad) out inc sub testb mov int3 es or inc mov add push pop lods dec daa pop lock imul mov or and mov sub jg or pop mov fs sti nop lahf sbb repnz out sub dec (bad) cld xor into cmc xchg mov inc dec xchg ljmp add dec fsubrl sub mov xor push adc sub ja mov repz mov sti pop jnp nop test icebp push push ja mov sub ret jmp push aam loop sub mov dec mov dec mov add stos xor aaa jg push or or das std inc sbb sub pop cmpsb pop add popa outsb mov xchg mull pushf push (bad) xchg shrl mov add adc stos xor and cmp lret sub test pop inc inc adc xlat mov pushf inc js adc adc cmp pop mov cmc mov push (bad) scas popf sbb ljmp sub roll cli stos adc repz jmp inc daa cmp push adc cmp add into push das ret xchg loopne mov or jbe pushf mov vpor (bad) cwtl xchg or (bad) mov lock (bad) idivb dec test dec mov out dec pop dec mov add inc in imulb les int jge pop cmpsb pop xchg or rcl repz bound andl fs pop repz loope cmp repz jecxz and mulb dec or jnp stos loope pop in xor arpl jg pop cmp pop mov adc jecxz pop mov loope sbb xor mov xchg imulb (bad) (bad) into (bad) jge xlat imull sub mov inc das in addr16 pop clc push and mov jge shlb cmp dec fldenv call cs in es stos or pop stos xor dec sbb mov jne and out es or enter movsl cld (bad) dec mov jbe push and xor (bad) or xor sbb icebp xchg ret pop imul cli xor negb jp mov or fstpl fldcw mov xchg in adc in xor leave jne loop data16 adc out cmp fdivp loopne xchg mov out decb mov stos ljmp ret pop cmp insl icebp iret sub jo or mov roll adc es and xchg out call adc cli sub jge (bad) mov leave or mov add rcll inc fisttpll cld mov popf cs mov jbe icebp cmpsl ret push loop sbb mov ret mov jne fdiv jmp adc mov into jp dec inc push cli pushl imul insb loope out push xor jecxz dec ljmp cld dec mov and fnstcw call das into imul in mov cmovle das lret sub mov in mov sub xchg icebp das mov xor call movsl xor push jae xor lea fisttp mov rclb adc mov pop adc ficom adc jle ret and cmp push mov sub mov cmpsl jno cmp pop ljmp pop sti cmp scas add aad mov pop sub (bad) and dec jne and sub sti lds rol fnstsw or mov loopne xor dec icebp push adc pop pop fcmovb inc pop pusha aas popf pop mov sbb mov dec repz push imul rcrb jmp or push sbb xchg ss je sub push adc sub or push sub popf cmp stc mov push icebp mov sahf sub bound bound ret mov add pusha out xchg lahf and (bad) xor notl xchg adc xchg xchg add fisub cmp negb sub push xchg mov aas sub aam cli adc int jp or fisttpll jecxz dec in bound dec scas cmp lret cs push sarb roll jmp enter or mov shll pusha out sub xor mov outsb mov arpl fidivl cmpsl fdivl or add daa (bad) jle add outsb ss mov cwtl cmp icebp mov cmp ret loope cs cmp hlt adc ss mov icebp movb xor shr leave push pop add adc add sub iret sub fnstenv insb test xor cmp xor loope outsl jecxz xchg jecxz dec jmp mov pop sub bound faddl (bad) lret std mov aad aam fiadd mov adcl pop call inc pop test scas inc and icebp xor lahf repz xor lret and mov repz xchg sub cmp pop mov icebp dec sub cwtl push les loope dec dec popf xchg jmp les or or mov repz jno dec (bad) or sub icebp jmp pop xchg stos test jae xchg out adc push das divl dec push sbb add mov xor test gs and sub in add xor and or pop shrl fstpl ret or call mov (bad) iret stos clc push mov std xchg sahf push out jb loope pop dec ss and sub ret push cmc lods jns mov loop xchg out pop lret add ret mov ljmp xor jmp mulb sub mov sbb (bad) xor xor insb outsb cs js repnz and jae and jle xor mov jb xor repz ficoml (bad) mov mov loopne lret (bad) into bound into mov leave popf je call (bad) jns out pop pop push mov jmp cwtl pop into xchg stc adc pushl clc add xor sbb dec iret stos ret pop inc js jle scas pushl popl movsb mov lds add aam xor sub xchg fdivr adc lret and fcomi lods inc fs and jmp xor pop pop sar nop movsl les cmp dec xor jmp xchg test lods (bad) mov and push jmp add mov movsl mov cmp jmp and sbb pop mov xlat (bad) sub cmp inc adc loope mov das les xchg test mull push mov mov inc test add shr out addr16 adc imul in (bad) mov mov push add fwait repnz cli repnz shrb cmp (bad) xor clc add int stos test stos sub push xchg xor gs scas xchg xchg dec mov sbb cmp dec adcb insb xor or aam pop jmp faddp popf jg sub in popa dec mov dec scas lret shr adc addr16 pop mov sub test aaa pushf lods fistl aas sarb mov in scas jecxz sub dec dec leave mov cmp sub jle int3 ret sub sub and popa sbb loope mov jecxz icebp push pop loop (bad) or (bad) dec icebp mov imul mov xor ljmp add sbb mov cld (bad) pop outsb mov out adc out cwtl mov into dec repz inc bound (bad) jne xchg ret cld repnz test pop xor mov cmc mov cli and cs sub movsl ja xor xchg pop pushf lahf (bad) adc cmp push and std out stc sarb pop movsb inc das or ljmp push mov or ljmp ljmp sti jo mov and stos pushf inc xor stos imul out jnp add pop mov inc xor xchg in add pop adc and inc pushf or inc sub add fcoml mov scas fcomps pop or insb aad sti daa and dec test stos lea std loop lret sbb loop les push xlat xor (bad) mov insl clc les ret cmpsl xchg sub jle pop ret xchg mov dec pop push or hlt mov orl jp push cmp pop or faddl div aas cmpsl (bad) and ljmp push or inc shrb clc repz sti cmpsb adc add fmuls idivb scas test cli stos les mov cmp cmp lock ja or sbb and cmpsl not inc sub and mov pop sbb jmp sub sub dec dec and and popa scas adc ret mov fcoms hlt lods push dec xor pop add dec daa icebp cmc data16 das iret inc gs xchg (bad) or and and inc movsl mov daa xlat sbb and push sbb xor jg repz inc aas frstor fsubrl sub adc mov clc add xchg pop icebp ret scas sub xchg or inc mov adc scas mov sarl xor pop test xor xor mov (bad) sbb pop add or push bound fstps into ljmp nop (bad) xor rolb icebp push and cmp pusha jns jl out mov push adcb setge jo loope pop and mov sahf cmp leave jg (bad) enter mov inc push pop sbb hlt or or std arpl in mov sar movsb inc aam mov fidivr and jno dec sbb add popf repz add ljmp xchg leave sub cmc xor into jge add xor mov out mov icebp pop popf lcall mov pmaxub into leave fcmovbe add out cmpb sbb xchg fnsave andps les xor xlat add (bad) popa mov pop aas cmp rep jge cwtl leave movl into pop lret fsubs int3 dec repz (bad) mov jl pop repz pop movsl sub push jo lahf xchg stos lahf rcll (bad) out pop repnz and test jmp and in dec nop out repnz pop xlat adc pop pop sti sub das and pop push dec mov sub test clc sub mov push lds mov cli jbe leave cmc das add addr16 lock sti push call daa pop pop cltd or sub movsl mov sub pop add pop lcall (bad) daa lret (bad) pop pusha pop or in xchg rep add ljmp and in dec lods das push xlat hlt insl lret mov push loop jne cmpsb sub pop mov (bad) xlat in call add sub pop lret xchg in pop adc xchg and ss dec jmp fwait or pushf push fmull mov pop movsl cmpsb mov add test push mov or adc add test jmp ljmp sub (bad) mov test popf mov sub enter repnz out sub popa cmc mov mov pop lds dec sbb das fild fsubrl sub inc jg pop lods je int cmp and sub push sub stc jns mov cld jmp or xchg (bad) notl out mov mov cmp sbb or in repz inc inc repz mov scas xchg xchg fisttpll pop jp xchg ret in cld shl push add fnstenv mov lcall and (bad) out adc in push (bad) xlat data16 add mov sub or test cmp cwtl popa xor lcall sub mov out push pop out je mov fstl nop call pop mov out xor push mov stos data16 dec or out xlat xchg rclb lret fistpll jle push jge in div jmp jmp fsubs xchg mov sbb in cmpb sub cmp dec cmc jnp xchg out mov aam inc idivl add sti dec add inc dec and aam jecxz adc sub cmp mov add cwtl into xor idivb clc push mov add adc sbb or jnp bound bound push movsl cbtw popf adc inc sbb sti pop and adc test inc das dec (bad) mov aaa in rorb frstor fldt out imul enter push inc sub popa xor or mov jp dec repnz xchg fistp push push ljmp ret (bad) bound add xlat (bad) pushl dec out jb out test out test jmp mov sarl cmpsl cmp aad das loope cmp xchg popf cmp and push loop mov roll pop push or sub cmc push ds jno (bad) inc addr16 sub sti jo (bad) jmp fucompp into jnp cli jg pop popf stos insb jge mov mov lods jmp dec inc dec loop shr fnstenv inc dec jecxz dec sbb comiss jl jnp sbb mov dec out pop jmp lahf nop adc xlat mov xchg scas sub mov add xor adc fidivl jl and movb incb (bad) ljmp ss (bad) (bad) cmpsl jb cwtl jnp and test xchg ret push sub (bad) cwtl lock cs clc lds enter mov sahf pusha call sub lds stc or or out adc jl lret ffree cld lahf loope xor xor pop lods mov (bad) punpckldq pop push push (bad) push call mov cmpsl std cwtl cmp xor test xor or and inc cmp out mov jno cmpsl jle adc out mov pop andb cld notl test out cmp mov (bad) sti jne cltd adc ljmp jno and xor lods push pop mov sbb stc or fsubs dec test (bad) mov (bad) cmc adc fldl aas test and push inc pop (bad) xor mov je cmc xchg loope push cmp push scas cwtl in xchg mov sar xor call leave or (bad) mov ljmp (bad) push inc or or cmp adc or jmp mov lahf nop jo ret add xor cltd pop call push mov pop in mov add (bad) inc xor movzwl xchg loope and inc jne add jno mov xor rolb lret and aad inc pop lods push lret rcll xor xchg (bad) push movsl std cmp mov and jo pushf subl sub cld dec sub adc (bad) jge or or add inc cmpsb jmp and jno pop sbb ljmp leave (bad) push roll cs repnz and xchg fist daa or cmc cltd adc clc lock (bad) mov out jle pop outsb int3 xlat jp (bad) mov leave sbb fisttpll mov jns mov (bad) fstl mov push outsb icebp mov lret ret ss xchg jns xchg lret jnp cmp push or daa mov movsl rolb out rcll in aaa mov pushf mov pop mov aam lods adc pop mov sbb mull aad sub xlat or cmp dec lcall mov add and lds pop xchg inc jo ret pop movsl cmpsl lds ss testl cmpsl shr dec push jno adc add divl sub stos test mov lods push out cmp lock cmpsl jne push lds pop sub mov cld repnz mov popf notb inc dec imul push sbb mov daa cmpsw jbe push add mov in das mov xor xchg rcrb (bad) jmp xchg xchg mov mov popa daa xchg xchg lret je xor add xchg addr16 (bad) cmp les sar cmp test mov sub mov jmp inc fcoms jnp sti xchg ds xor int3 pop push sbb loope leave or jg push and cli popa popa xor jp (bad) cmp pop (bad) lret inc push aas push addr16 out (bad) mov inc pop les sub add mov xchg xlat daa ret xchg dec pop mov add jne movsl inc imul out in movsb out ds aaa jle outsb sub popf pop pushf repnz mov in cmpsb das lods (bad) push ret outsb sub pushl mov inc fldl sbb or divb in and sbb cmp fmuls mov stos into insb dec lds lcall push std mov mov cmp cmp aam jmp adc ss lahf notb inc mov addr16 jge sub inc ljmp mov adc data16 loop xlat cltd dec cmp mov jmp inc rcrb or (bad) repz pop icebp mov and sbb cmp daa pop out pop mov pop test cli test mov or xor (bad) in pop movsl sti out imul push dec dec mov stos mov or xor xor mov cmpsl ljmp fcoml out xchg in or incl xor xchg or in rcl mov les xor sub mov and into gs sub in xorb aaa idivb fimul jae lock mov xor (bad) je pop repnz test and stc xor imul lahf das in lcall push cltd imull add xor xor es fdivl loopne or cltd nop das out and (bad) sub push pop leave pop (bad) fildl mov and xor sub mov xchg (bad) mov into dec mov push out adc or data16 xor push fsubrp dec div or shr mov pop and in dec mov sub mov addr16 idivl sti (bad) sub rcl test lahf repz sub sahf es and xchg (bad) outsl cltd dec rclb pop shll test mov sub sti popf (bad) aas sub and in std lret call mov lcall mov das fsub cmp repz pop pop cltd mov or push or cmp xchg add ja loop cmpsb jne (bad) sbb lret leave mov mov ret or int3 das daa sbb pop out push mov jb cmp dec in dec and jbe fcoml push xor push xor mov push and das (bad) das add rcrb imul leave (bad) repz inc inc push adc jecxz (bad) jg mov add add std ret mov gs lods (bad) je cs scas aas fs decb cmc push mov aad pop xchg divl in add push imul pop sub pop inc mov inc xchg popa sar push aaa xor push xchg pop pop notb dec pop (bad) dec sub sub add in jb into mov pop and mov loop jbe in sahf add xlat lcall loop mov xor add loop (bad) negl xor call push icebp and divb sub scas (bad) (bad) daa outsb mov (bad) mov out pop push xchg sub cmp ljmp icebp jns (bad) out sub mov data16 loop mov pop (bad) ja xchg and push ficompl or add dec pusha popa mov add gs repz or and fdivrl test or pop jl les pushf inc pushl popf rclb mov mov jb xor inc jb lock cs loope jg les jmp push mov (bad) mov push gs mov mov pop cmp xor mov out movsb bound (bad) push mov fisttp xchg test lea sub lret push inc out sbb lahf (bad) push dec (bad) mov aas fsubs mov push mov pop sbb or test in fs out cmpsl in or (bad) (bad) sahf pop fidivl xor in jecxz or mov dec sub stos adc repnz int3 sbb mov mov pop mov dec jno and dec idivb mov daa adcb jbe leave sbb ds popf xchg pop xchg fimul push fistp scas (bad) enter fwait sub lds popf ljmp or shll fadd mov mov push sbb mov dec dec rorb pop add mov (bad) xor push ljmp mov shll out (bad) mov sub sti and xchg mov mov jg inc adc roll jmp adc ljmp dec lds cmpsl (bad) or mov or jecxz mov push xchg shl lock or lret xor std test in mov bnd add sti mov repnz sti fxam outsb xor repz and (bad) nop pop imul mov dec xchg shll into xor adc xor in add jg arpl cmp sub and xchg xor loop pop push xor into pushl daa stc jae adc cwtl repnz aam lods les into jecxz aas mov sub or inc inc add out stc enter jns xchg loope sub and popf push dec imul data16 pop adc mov push dec xchg pusha inc enter repz fcomps repz cmpsb and mulb ljmp jecxz jg and cmp bound cmp mov imul sub cmp inc cmp xor push jmp aam outsl stos into imul and outsl pop pop rolb push add (bad) loope sub jnp fsubl bound bnd outsb enter sahf lds rorb pop clc repnz (bad) and sahf mov enter push add (bad) xchg repz sbb cmp mov ljmp enter out push pop mov movsl je rclb loop or jmp push jns push push pop adc out pusha jg add jg mov test movsb xor pop and scas mov loopne hlt mov int icebp xor dec js fwait adc adc add pop pop pop pop pop pop pop jno lahf loop notl dec fstpt and fstpl cmp pop mov cmp xor sub xchg (bad) fcompl cmp stos iret mov add jbe xchg push inc adc push test xchg or les or dec pop inc aad (bad) xor mov leave cmpsb mov sub insl dec hlt loope stos sbb inc mov ret xor lret cmp xchg shrb ja push mov fwait jp xor jmp jno icebp mov nop out mov add into fbstp fimull xchg jl loop sub add sub push or (bad) or cmp lds stos mov test mov movsl (bad) fstps in push (bad) cmp jle jg ficoml aam mov jl and mov mov scas mov inc ds push aas xor ret ret hlt xor rcl adc inc stc lret dec js mov xchg cmc push pop and pushl lahf hlt pop sub xor pushf mov ja push pop pop not pop popa mov repz mov hlt ds or sub dec call scas sub (bad) ja icebp scas sub ror clc adc int ljmp jmp or mov cmpsb bound pop scas xorps (bad) pop gs sbb mov rorb cmp or mov dec fidivl fs adc jmp lods arpl mov std fldcw cmc xchg cld pop daa push inc lret das push fistp aam call push pop xchg loop ficomp (bad) scas cmpsl in dec mov adc fwait jecxz or sahf test fbstp mov bound and adc xor lret aad jecxz ds cmp inc in test mov and sarl testb fnstcw scas xor jb sub xor or mov sbb mov push incb adc aas sbb pusha call dec cld out mov lret daa ret (bad) cmp mov jnp out push lret and ljmp je push xchg mov jge and repnz add icebp hlt sub push dec (bad) bound ja aas (bad) or in push xchg cwtl movsb out orb fldt push (bad) xor sub jmp mov mov sbb sbb cmc imul pop and add subl jo jmp and mov outsb xchg loopne or in sub jb test add notb cmp mov xchg outsb je and mov ljmp std in adc or push pop call sub loope mov cmp sbb imul lea scas sub fsubrp sarl or gs adc sti pushf xor pop add sub aam mov sbb repnz xor add mov push or (bad) cmc inc cmp lret popf in popa (bad) inc push into cld loop (bad) push jo idiv sub pop cmc pop jb sar dec and or mov dec loopne adc xchg push or call mov mov mov mov pop mov xchg xor pusha ja dec ret mov jnp fidivr xchg (bad) int3 call stc push sti cli adc dec fist lea je or jl jmp das sub jp jo mov (bad) popf fnstenv jmp jno (bad) (bad) fstps clc sub mov pop mov outsl sub xchg xor push cmc out repnz and dec or mov push into (bad) decl (bad) mov sub enter (bad) and push idivl dec cmpsb sub stc das dec cld jno or jg ds mov in mov cld sbb out sub les cli sti loop lds iret cwtl flds leave push lret jmp sub pop movsl sub (bad) sbb fsubrs daa sbb xor test out add sub push xchg je jae inc push icebp sub jbe or or xchg mov xchg idivl add sahf push and mov test mov and nop rcrl jecxz bound fimul add jecxz in xchg xchg lods dec mov xor jge in rep loop xchg mov (bad) and inc dec adc pshufw cmp (bad) das add adc sub jns push add add (bad) fimull fildll fistpl add mov xchg lret cmp std mov rorl sarb push loope sub rcrl jno ljmp stos lods push mov int3 or lret sub fbld pop sar xor ret in xchg xor scas movsl clc dec mov shr arpl xchg cmpsl adc push stc ror cmc dec repz jbe push jmp mov in int mov sbb movb and sahf mov jmp sti shll sub adc imul imul xchg in xchg repnz mov int3 and movsl pop or lahf pop xchg pop les shl lods push sub jmp and sub xchg push mov add sub in idivb inc loope dec pop mov ss fcmovbe and push data16 das or dec and adc movb xor jmp jmp mov jg jbe ja fcoml xor mov adc hlt push dec cmpsb jnp rcl fildll (bad) arpl outsb and add into nop mov push mov adcl inc add push xor add adc or and loopne icebp mov mov xchg in nop (bad) inc sub fmull addr16 and sbb movsb mov xor xor pop cs clc in imulb add adc rolb sbb cmp lahf adc mov outsb (bad) sbb leave std xor mov pop sti or or in mov sub sub inc cmp mov push insl jmp out push ficom mov fldcw into dec movsb cmp pop ja mov cmpsl mov xlat sub repnz mov jnp adc add adc dec pop cmp inc (bad) (bad) cmp mov loope loopne and adc call (bad) dec sub mov stos pushf mov jle scas out push pop mov xchg ds scas lcall scas adc cmpsl lods pop jmp mov dec loope cmp sub add stos fs or or ret movsl js sub pop and lods jecxz inc inc or and jecxz,pn enter xor out adc xchg inc or adc adc xchg fcoml imull mov les rolb sti mov cmpsb sti and adc call dec das cmp fstpt mov mov decb and and adc dec stos ficoml shr cwtl push mov dec mov or add cmp ja in jle push in sbb fidiv cmpsl (bad) xor pop out test mov dec add mov out jmp (bad) (bad) xchg adc or jg sub dec daa lds sub and fstl push push mov pop imul xchg fidivr pop dec sbb mov fstpl xchg cmp xor in (bad) mov adc push (bad) stos es xchg stc adc jecxz inc mov loope sbb ret and add inc or decb xor sub cmp (bad) loopne (bad) mov jp les add add jbe imul push mov rclb cltd jmp pop pop pushf icebp dec jecxz in movsb lods cmp and cmc push sbbb out mov mov ret ret jge xor mov adc mov mov les sbb mov cmp fnop add jecxz adc (bad) mov adc sarl sbb dec mov and mov ja (bad) aad outsl je das data16 xchg loope mov (bad) repz xchg mov cmp fcomps sub (bad) idiv cltd adc dec ret outsb adc mov das ljmp lret or aam bound popf stc jl lahf jecxz repz dec inc test and mov in mov lods es sbb xor scas (bad) in pop divb sub pushf shr dec fbstp lcall push sub cmp sbb or pushf inc and dec adc gs jp push outsb push movsl jo sahf sbb ja lret icebp dec dec or fistp dec ficoml enter (bad) bnd mov sub adc imulb test jbe mov jmp lock mov xor cld dec out mov inc xlat and ljmp je inc add pop mov cmpsl push jle push mov stos and dec jp adc adc pop sub pop dec repz push dec or out in daa clc adc xor jg push shrl rep or pop xchg and and jbe adc insl and jno scas (bad) test xchg mov lret imul gs idivb out pop fist xor leave mull cmpsl push dec add and add mov jecxz,pn mov cltd dec mov cmp movb pop ret and mov pop inc divl mov lret in jle jmp mov xchg sub adc pop jmp xor imul mov lods sub imul xor dec or outsb fbstp mov sti gs add inc aaa (bad) push icebp mov xchg mov mov cli pop and in mov ja mov sub mov (bad) fbld data16 add add sahf out rclb cmp mov jp loope mov sub loop mov xor sbb pop add jae xchg xlat sbb (bad) xchg adc or lcall xor (bad) mov sti out repz and es pop push push sub pushf pop dec jne add xchg ret or dec sub out push out inc mov xchg repz mov add or rolb pop mov in gs jecxz and xor fstps push call leave mul aam pop sbb dec idivl es sbb aam and mov add cmpsb sar iret sti daa cmp xchg jno aam out fsubrs mov out dec and push xchg repz dec xacquire pop mov xchg (bad) addr16 mov dec push pop lods jl mov jno lahf or or push mov push inc and xor sub stos mov dec pop mov and ret push movsl shll enter fucomip cmp (bad) xchg (bad) mov sub cmp fdiv pop test mov jno ljmp mov cmpsl (bad) shlb add and bound and cltd aaa imull sub sub mov and stc (bad) dec clc push fwait shlb lock adc rorl bound fcmovnu push add sub and nop iret sub cmc in and push (bad) in push jmp mov (bad) pop popf (bad) sbb (bad) and rorl mov test sub xor mov jmp mov sarl clc notl imul out pop out fs test mov (bad) lret icebp and cmp icebp or add cmp adc fisttpl sub (bad) mov frstor mov mov xor (bad) das aam call adc mov mov cltd xchg sahf notl ljmp xchg idivb push push mov (bad) in vmovhps inc pop push out sub xor sar pop (bad) adc add and aad xchg out incb fcmovnb mov cmp gs addr16 inc ret into jne cli xchg lret aaa pop scas dec js push inc xchg movsb push leave push cltd outsl add ficom fsubrp cltd fild xchg xor xlat sbb idivb sub mov sbb jb xchg psrld iret push cmp les adc dec stc cmovb (bad) and lock hlt add or mov data16 cmp in or mov pop in and jmp mov leave enter aad (bad) sbb fsub enter mov loop jle and inc shll dec shrb repz (bad) add cmp movb dec movl sub or imulb push ror push dec sub xor fmul mov add push pushl ret and sub cmp out xchg mov mov xchg mov dec (bad) xor (bad) fisubrl stc js xor fs jns out lret jo mov pop push mov pop xchg inc xchg xchg repz inc add cld popf pop jg outsb inc cmp xchg es ret jno jg test mov add pop into mov dec ljmp lds je and stc push sub int ret push (bad) fs and repz and cmpsl mov sub xchg test inc adc add push xlat (bad) jb sbb xchg mov inc push jmp jmp ret sbb pusha jp push lret lock jg and xchg sti push neg push pop test mov xor add inc cs pop pop fsubs or xchg sahf jmp jb mov mov cmp stc loope cmp aam and or sbb insb das add cld mov or rol ljmp lahf cltd aam (bad) cmp jns mov cs pop jmp push int3 adc mov lret mov pop in mov sub jg enter jmp sub push fwait xchg popa cwtl sub cmp fs sbb mov in pushl (bad) jle icebp mov repnz xchg in les xor pop mov repz dec (bad) fstp decb xlat nopl jmp mov push xor enter leave pop subl mov sub frstor movsl stos cld fs add pop mov jecxz inc jne mov adc sub jmp loop sar repz xchg int3 ret scas jb lock ljmp xchg jae inc out test or mov inc jle imul aaa mov std imul hlt xchg out mov fldcw imul lea lea mov iret in and sarb ficom (bad) scas fabs sub ret fnop xchg jmp sub or push cwtl imul outsl lret addl dec cld (bad) subl fidivr pop sub scas sbb pop adc jb test mov lret xchg sbb lcall addl iret mov (bad) jmp inc xlat lea lret icebp mov ret mov mov and pop adc loope cmp and mov repnz adc daa mov mov or testl ljmp push push dec shrl pop cmpsl mov and mov mov add lahf stos rcrb mov inc xchg ds mov pop xchg sub out pushf iret add mov sbb bound (bad) mov (bad) dec insb mov out add scas pop cmpsb scas pop xor cli cltd in xlat das mov ror inc sbb iret add imul and (bad) scas mov addr16 mov push pop and ret sub ds int cmp mov mov xor es out cs xchg and push adc adc push jge dec xchg pop scas lret rol adc mov adc jmp sub int3 sbb scas mov cmp jo or xor lods push and lcall sbb lods or into jmp jae xchg cmpsl (bad) mov or mov push in daa in xchg stc xchg cli (bad) mov rol cmp xchg mov lcall dec mov (bad) loop pop mov (bad) fsub mov dec jns pusha or sarb lea xor test mov xchg pop xchg (bad) fildll je stc outsl push sub mov inc push stc push push pop xchg jp dec xor in ret notl jge or inc and push xor rcll sub xchg iret dec add jnp test sbb je jg aam jmp sub clc push cmpsl and jmp test test dec int3 mov xor stos sahf add (bad) clc add ret gs cmp iret cmp (bad) mov ds mov dec mov arpl mov stc xor jp (bad) or jmp push cltd mov mov dec jno imulb pop mov mov jmp add mov mov xchg ljmp ja mov hlt adc fildl dec mov (bad) adc shrl add add (bad) lret jae add dec mov repz mov sbb inc push test and popf aad popa jle pusha or or xchg or jg test scas mov movsb cmpsb aad xor mov push push xchg sbb and out aad sub cmp int3 mov add xchg fs out gs pop xchg inc hlt fldcw and (bad) pushf add std mov or outsb xchg mov push dec fimull je inc or (bad) sti (bad) in (bad) hlt mov push pop add pop pop lock sub scas dec (bad) imul dec dec mov push xor test ss in jp rcrb mov xchg into mov out cs xchg movsl scas cltd icebp push imul fildl xor dec lock addl sub or mov pop (bad) insb push or imul das repz roll sub or sub pop and inc pop mov xchg (bad) bnd pop pop pushf pop adc fmuls stos and sub jbe pop jmp push push dec inc xchg or repnz mov lea mov lds or (bad) add sub mov xor je lods inc adc inc loop mov sbb xor scas mov pop std les lret in and pop xor pop pop lret lret cmp jns or in or mov inc mov xchg and xor mov or jns loope and cmp movsb ljmp out sub add dec divb outsl mov xchg mov lcall mov lret jbe stos mov or test stc pop mov imul mov sub lods cmp int3 push loope imul or or stc sub push icebp jg sub mov mov jo cli sub jbe add or pop pop cld adc leave adc xchg das dec leave mov dec xor and sub stos fnstenv inc ret sub dec xor pop scas cmp pop enter rcr xbegin and mov xchg test clc cmpsl scas pop outsb pop popf fmull gs adc repz loop push mov popa push fstpt cmpl mov inc (bad) cmp xlat mov pop shll in lret mov stos mov iret jmp ret pusha sub lret inc xor xlat movsl mov ficomp adc int3 sub das mov adc dec jecxz add sub fmul xchg call (bad) xor iret leave aaa call (bad) adc sti ja test pushf or or adc dec rorl leave icebp add js leave (bad) push (bad) or decb ljmp xchg pop mov cmp cmp das rol xchg loope jle mov cmpsl int xor iret xor dec xor stc repz mov add out dec in (bad) push ljmp add ljmp jb pop scas jne mov inc loop xchg fs mov mov pop inc sbb jmp (bad) cmpsb cs call xor fcomp pop je push and popf pop xor mov repnz nop mov push sbb pop push pop negb jno mov ret push push push ja and sub sub mov jmp idivl sub aaa inc and jmp mov dec sbb xchg stos icebp aas cmp push xchg (bad) cmp je scas jmp iret ja mov inc xchg inc fiaddl jecxz mov and imul jmp add sub jnp or mov in aad or call push pushf cs sub (bad) fldenv mov cmp jg es rolb icebp sti insl pop ficom out xlat inc jnp sbb incl pop imulb dec mov xor or faddp ret fildl movsl inc mov cwtl loope add stos lret inc dec (bad) flds fwait or (bad) xor repz in scas shrl mov incb neg adc jns mov sub mov sub pop aaa sbb iret dec mov (bad) mov frstor ja or aam fbstp pop mov adc sub test das mov imul (bad) mov (bad) fstpl and repnz fsubrl ret sub jbe push cli sub add in sbb imul daa pushf mov sub xor fldz sub nop popl xchg sbb or push stos push sub test stos addr16 (bad) lret cmpsl cmpsb popf in lods pop xchg or sub popa (bad) das inc lret pop push dec push lock ret and in roll and bound inc push inc push mov orb sub adc mov sarb or xlat callw or repz fsubr sub rcrw test or fidivr mov out and in and out gs fldcw fs adc les push mov fadds xchg pop jl imul mov xor movb es jl shr xchg pop and pop ljmp xchg jle jns jg int and lods cmp add push stos jmp add mov push jno cmp stos cmp or sub out cmp add push sbb mov (bad) cmp shrb adc sub (bad) sub out pop call movsl pop and data16 outsb dec scas push jmp aad push sbb or xchg insb imul cli (bad) dec sub cwtl pop addr16 stc shll push in inc push sti inc pop and jecxz jmp out mov or mov mov adc sbb mov xchg les or dec pop adc mov aad ficom xor sub daa or and std pushf inc imul and dec nop mov loopne xlat mov mov outsl je cli stc lods repnz sbb popa push and dec and fstps inc pop mov jne scas mov (bad) push lret cwtl test inc sub dec ljmp inc pop push outsb test ror jne les cwtl icebp (bad) movsb aaa push int3 loope mov dec inc (bad) mov in rcll test out ljmp pop cli (bad) pop in dec daa loope mov pop std xor push jae sub jmp mov jmp sub pop mov sub movb sarb mov pop cli sub dec div stc push iret mull mov pop sub cmpsl and rcr aam (bad) sti int3 das (bad) ret (bad) out sub ret dec sub mov shll mov inc dec repz pop test test dec jmp jg and dec or popf xlat adc lahf faddl (bad) jmp into inc fcompl pop mov je sub jo sub jns add gs loopne divl dec (bad) (bad) xor mov stos sub into push andb mov adc leave pop nop rcrb sub xor stos int3 xor sub loop testb add ljmp ret mov cli bound fucom push mov pop mov sbb (bad) mov jmp xchg int outsl xor ret lods imul das cmp mov mov inc add cld test cmp movsb jmp ret adc iret sbb ljmp (bad) call add add (bad) xor push sub imul add addr16 jbe or cmpsl out (bad) in pop aaa xlat out adc call push dec adc pushf pop push fcomip gs in adc sub std jmp mov xor sub jo in and inc sub xchg fcompl ror xchg add fidivrl test mov das push cmp cmp mov mov push mov xor leave xor or add xor fmuls xor sarb mov and push aam leave pop outsl gs sub xor add test (bad) sub xor add js gs pop sub mov mov jmp incb loope fldenv adcb pop fstps or xor popf mov xchg loopne das jno and jle dec xor or test add iret sbb sub stc sub xor scas jne mov dec xor outsb loop ret hlt enter pop push int3 in das rolb les mov lods fcmovbe popa sahf or ds hlt or add inc cmp or je call frndint jae and inc or push xor push fidivrl dec and mov or adc pushf add enter clc scas adc sti sub dec leave adc mov xchg mov sub mov loope sub cmp or lock mov loopne sbb xor cltd in push repz sub mov mov push mov dec mov (bad) pop mov xlat sub sahf (bad) bound divl dec call or shrb push or gs test mov push cmp popa sub xor sub mov fldlg2 mov les leave cwtl js xchg jae mov rclb das mov cmpsl scas into pop lods in stos mov xor dec mov pop out adc xchg mov flds add stos or in sub mov iret movb lret in xchg jle imul add sbb out loop adc scas fidiv xchg in add ljmp mov xor cld ret dec push rorb das out inc (bad) rcrl int3 mov xor and (bad) or pop icebp fdivl inc mov pop jno das pop push mov adc add xor xor mov jg dec xchg jmp loop lret and mov out fsub jmp mov push movsb mov divl shr imul or pop insb setge add sub (bad) xlat mov mov fs pop add aaa mov xor cwtl lret push (bad) into stos mov gs or rolb ficompl les jg push dec mov dec sbb popa jmp mov clc repnz pop pop or mov sbb pushf jle mov jb out test mov pop cmp xor ficom daa sti push xchg (bad) repnz sarl sub negl rol and loop xchg push inc loopne out mov lret insl orl stc cmp jmp fld dec bound call lods cmp ds dec (bad) push push fnstcw pop lock add cwtl fnop call jns jle lods (bad) mov dec cs jae not les imulb jns push ss mov add out sub and jno or fcoms inc dec fcomip pop xchg out push pop ljmp into sub sub inc or loope xor sub das push popa inc dec es lret push stc fs scas sub push or lock inc inc aas add sub sub repz mov rorl lret divl inc arpl jge xchg xorb lods stos movsb mov ds mov push add and (bad) xor add xor add pop lods cmp scas mov sbb xor mov fsubrs sbb ljmp gs das into shll and dec mov or outsb shrl jno dec push in pop sub jb ret adc stos pushf jns mov sub clc scas js add lods mov add aad (bad) mov jb mov xor clc stc jb pop lcall mov pop jg aam sub mov adc adc fld fldcw sub sti jle sbb ret add scas lret jecxz mov sub das xor cmp sub out pop lret mov cltd jp mov xchg movsl in mov cmc adc dec mov lcall out stos mov inc sub mov test mov call pop shr or adc and sub decb inc push movsl std insb mov push stc idivl jmp sbb clc (bad) mov mov ljmp inc aam cmpsl inc push jne and add lret ljmp pop fldenv adc dec xchg rcl insb cmp or and adc das mov repnz out push xchg sti iret xchg dec lds mov aas dec push pop mov push jo mov (bad) icebp mov push dec jmp int enter jnp and (bad) daa imul mov leave sarb cli pusha jno leave sub mov aam loop jbe loope (bad) xor push les add sub mov jl les mov test sbb push pop sub fisttp or in jns rclb mov mov mov sub dec and ja out pushf push and and or ret daa mov (bad) sub popf movsl jmp pop adc inc out dec xor stos mov inc js pop push mov and movsl (bad) ss inc xor and lods icebp and or inc out add push mov pop xor add popf cmpsl sbb lahf mov repnz les insb (bad) or lret push neg jae call dec jmp cwtl inc in lcall sub inc xor or dec pushf jae out mov jmp and div test sbb out pop add push idiv jbe out stos pushf add xchg add cmc xor flds imul cmpsb into jp test jmp ljmp out mov loopw gs insb add bound data16 outsb cli divb sbb add bound jbe lahf les xor lock call sbb out sub outsl mov lret mul lods xchg out pop dec lret mov (bad) xor sub add loope sub repz xchg fnstenv imul xor mulb dec dec repz mov mov (bad) jmp or ja mov mov aad add and push cmp sbb and mov or push push xor lock aas mov ljmp mov outsb in sub int3 bound (bad) ret push pop gs or fsubs add jne cli jb sbb pop ljmp sar idiv aas and dec mov push fmuls stc decb xchg jb xor rcll movsl adc push sbb jmp test (bad) call pop push mov and xor out cs popf sbb xchg (bad) mov rcll pcmpgtb (bad) cmc mov sub mov or or mov lea mov mulb or jl adc out mov dec xchg in or mov sub (bad) hlt in dec xchg mov sub xchg jl fnstenv out loop leave push iret push incl repnz xchg adc mov xchg (bad) mov mov nop repz add jae mov mov test ror sub popa mov mov push pop call sbb out bound push ljmp bound pusha add aad inc add call jb lret pushf arpl or and push mov xor lcall iret mov inc cld movsw adc push out lret push icebp cmp dec pushf jmp ret (bad) mov mov jge xchg lods dec movsl enter sbb ficoml inc mov icebp mov sub ja sub push in cmp jle jne (bad) push jmp inc sub movl icebp pop imul sub mov lret jmp xchg (bad) and mov pop mov adc push ret fdivs jg insl clc and mov xchg (bad) sub mov lods cmp fistpl mov cmp mov mull dec cmp (bad) das mov shrl sub repz mov lret xor std (bad) jle ret add rclb jmp insl add adc inc dec stos pop sti bound (bad) lahf and cmp adc or sub ja scas imul mov pop (bad) fcoms or cld dec (bad) lret cli adc enter cmpsl lret les sub inc hlt xlat mov cltd or sbb add mov mov xchg test inc repnz mov jo mov les push in cmp cmp pop negb iret cs lods lock sub pop lods lcall fsubr xchg inc icebp pinsrw mov push js xchg fldcw jb out addr16 sti jmp mov xor sahf outsb pop or sar js dec out daa add rcrb push loop fimull dec out ljmp mov fwait jne pop pop xor mov jae adc lret mov sub xchg and ret mov or pop cmc sub (bad) mov xchg mov clc xlat pop jecxz dec repnz nop ret pushf jge and sbb outsl jb push fcomip and out out dec in pop cmp sbb mov xor int3 xor add cmp push xchg sub add fmuls mov popa imul dec push lcall imulb pop leave add imulb rcll inc xor add sub mov jmp sub and mov insb and outsb lods loope lret sbbl in and xor and sub leave add sbb or aad pusha gs mov ret cltd fdivl rorb pop loop xchg aam (bad) repnz mov push icebp mov (bad) and or fldcw inc sub jne xchg sahf ret mov dec jle loope imull addr16 fldenv mov add cmp daa ret sti push inc loopne fistl push or xchg hlt add xchg adc sti fadds mov and jbe add fcompp mov inc repnz xor jecxz or mov loop push (bad) or mov in pop mov mov mov xor and adc jmp (bad) dec or mov (bad) rcll ss sub dec ds xor adc xor (bad) mov add enter dec mov negb jle subl les mov inc push lea mov xchg mov jp sub xchg shll (bad) mov or xchg push mov clc pop add or jbe loop and add mov sub mov mov xchg fsubrs xlat mov jp arpl mov and push and push sbb ret xor sub push sbb popa arpl and sub add push sub (bad) pop (bad) or cmp pop sub ljmp out std in test xor call pop and ret (bad) jmp divb lret std ret outsb push mov sbb sub xchg push stc repz and mov aaa imul xchg adc (bad) repz ret pop cs mov xor das cld jns stos xor sub sub cmp add cmp xchg lahf lods hlt jb mov stos pop in sub (bad) pop push leave jge bound aaa dec sub xchg inc mov jo sbb aad push sti adc sub in jns into cltd shrb mov outsb (bad) add lods stc movsl inc mov pop neg jmp xor outsb pusha dec sub rolb mov mov and mov sbb jmp js movsb push and dec imul std jo xchg sbb enter imul jns shrb sub leave xchg jl nop add stc and (bad) popf aam dec mov xlat jnp cmp gs and mov or jne test leave cmp xor das xor adc cltd sub xor sub je sub pop xor xchg pusha push mov dec xchg out mov xchg pop pop mov stc mov aad popa ret into (bad) popf fstpl or add mov pop push enter insb jle sub lcall and cmpsl or jo xchg push inc or pop xor push addr16 pop ret aad jmp cmp gs or dec mov or mov lret iret jmp (bad) (bad) xor ret jnp cmpsb test xor xor sbb in out (bad) mov sti cmc outsl in jb (bad) icebp (bad) cmp insl adc sub and (bad) call jb mov popa add sub pop ss pop mov jge addb enter cmp pop call jp dec aas imulb leave aas cmc xor pop dec dec pop mov mov insb outsl loop cmc xchg sti popf xchg bound xor test xchg push cs movsl gs daa (bad) test xor insb std les idivl repz mov stc dec xorl sbb js faddl pop dec imul adc lret xor (bad) pop aam aaa pop out jg push rorl jmp negl xchg fcoml xor mov out das or fdivrs aam mov add lret jp pop aam mov jecxz (bad) push adc xor clc sub inc repz (bad) icebp dec cmpsl sub shr pop cmp dec push dec jp not jmp and pop pushf inc ds or and adc xor cltd repz ds jg or ret jge inc sbb leave iret cs mov sub xor or loop sub imul std (bad) ficom fildll fist xchg mov clc daa mov (bad) push popf js xchg mov in pop sub xor jmp and mov add les lock sbb test add pop sub dec stos out adc (bad) mov jnp sub push dec lret in sub clc movsl mov cwtl dec popf pop adc dec mov in lret lret icebp add or mov jnp mov (bad) (bad) cmc push int pop (bad) xchg and divl test xchg gs stc pushf add lret add push (bad) mov cmp jb divl and or pop pusha incb shlb adc cmp lret mov push sbb loop pop jmp fcomps fbld or hlt arpl sub jmp or add (bad) in sti mov jle call push push mov pop or mov jp push popa lret push xchg xor faddl aad cs test test adc je dec faddl dec lret les adc frstor xchg int3 inc dec jmp push fnstsw mov out add jmp and jne mov lock sub sub pusha push add dec cld ja mov out pushl push loop add mov jo pop jmp out arpl bnd or rol stos sub fstps out sarl adc sub dec sbb or mov into mov pop repz imul enter repnz jo cmpsb push xchg sti push lods inc adc scas mov cmp cmpsb mov inc movsl adc in lahf hlt out (bad) pusha xchg cmpsb aam pop mov push push andl andl negb mov push pop xor (bad) jne xchg cmp mov bound push dec jmp cmpsl push pushf stos in lret loop pop push rcrl (bad) pop icebp cwtl inc ljmp mov out push clc or lods mov or and cmp mov cmp inc xor push sub int3 mov add xchg call sub in out sub divl jle icebp sahf lods std sbb pop cmp pushf lcall scas mov mov push or movb sbb push outsl push pop jmp inc cli ja fmuls daa aam daa inc out daa pop divl clc sub xchg idivb add and scas mov or pop aas inc add jb sub (bad) jnp push scas pushf mov imul pop jno dec nop daa lcall jne push orb adc xor (bad) xor xor repnz sti xor jp sub sub in dec add jge mov in or jno mov xor sub hlt mov pop sbb xchg mov cmc inc mov lret and mov mov inc jnp lods and pop ret cmpsl test cltd sar lret mov std lcall push push repz xchg clc pop dec or xchg sub xor sub (bad) cli ret fadds dec add cmp mov pop adc fstpt inc imul rorb dec dec cmp ucomiss imul movsl push out movsl inc mov jle or pop jno leave rcl test (bad) xor xor inc mov push mov sub insb (bad) ja into dec clc scas lret and or mov imul cmp les xor (bad) sub bound cli sar rorb pop inc xlat mov lret decl xor outsb (bad) cld iret popf jg push mov ljmp jmp dec mov iret sti sub adc mov fstpt mov jmp xor std dec dec leave xor jo cmp mov sahf and push add ss and (bad) std cmp out sub cmp leave jne sub xor mov pop and stc mov dec fsubrl or xchg fldenv cwtl fldcw pop rclb paddusw cltd lahf xchg jmp xor dec push mov repz xor int ds arpl rcll push fisubl mov sarl outsb pop and xor mov mov imul aad mov test (bad) sti mov sub xor lds arpl push fcmovb inc add std sbb sub xchg (bad) mov jns movsl mov jg xlat test leave and mov hlt sub dec sub cmp ja ljmp shr lret add pop pop add divb ret adc sti add fstl imul ljmp out icebp daa dec push out ljmp add xor iret clc jmp pop (bad) sub ret test (bad) and xor lret ds mov inc arpl xor lds sub out pop out and sub in shrl mov mov xor clc mov hlt add xor dec cmpsl ficoml add out sarb repz aam jmp hlt les or outsb inc mov xchg (bad) negb xor orl mov sbb mov fisttpll mov sbb outsl lods ljmp cld push roll (bad) jmp adc icebp fistpll and xchg cli xor negl into sar mov sub mov clc sub lock call in mov andl or out or sbb imul in mov test mov (bad) (bad) fcomp xlat pushf sarb dec (bad) xor (bad) fsts add addr16 ret sub pop cs (bad) jbe pop sub xchg ret stos jne mov add fcomip ret lods sbb into jg push inc add jae sub jae jbe mov sbb dec push js (bad) (bad) pop sbb add in xchg pop test pop xchg repz subb add jb jmp lock xchg adc push cltd sub fs shrb leave mov mov (bad) xchg sub lret sbb sub andb stc (bad) jmp push xchg popf subl mov lea fmull out jnp xchg cs addr16 push dec dec mov test repnz sub sti cmp cmp lret dec mov clc jmp jmp fnop lret movsb aad test mov (bad) jne shrl mov out loop fist jp sbb mov shlb addb stc in sub in rcr sbbb mov dec (bad) cmp popf jne lea loope cmp ret out fs cmp out lret jle stc push xchg jg ds aaa ret loope call fbstp dec (bad) leave daa jmp inc ret pop idivb pop idivl cmpsb adc dec sti sub adc sub out mov lret rolb das and push xchg lea push int3 insb mov out fild mov jnp cmp movl popl sbb out sub xchg push (bad) or lods (bad) pop xchg (bad) mov jmp mov les lahf dec mov pop cli xor aas push xchg jle imul and xchg mov repz dec sbb cmp or fdivrl lret inc dec xor dec push fcoms inc (bad) jae dec push mov rclb out je (bad) imull rol sub jno outsl xor pop fs icebp and mov lock push jp mov roll add xchg (bad) cmp add xchg test dec cli mov repz xchg icebp into jb sbb or jns lahf mov into push in scas (bad) hlt mov mov aam add mov xchg into stc push or movzbl adcb sub adc mov (bad) mov (bad) divl push add mov rclb mov pop scas nop loopne pop daa out cmp shr jo sub sub fstps sub add int3 insl adc mov push lods bound pop inc and daa into ja xchg and int3 cli or out jb add adc push iret mov repnz pop xor pop sub xor icebp jmp scas (bad) out add and add (bad) jp jp sti mov push dec fnop mov pop bound bound out jg daa movsl jbe fs les cmp loope fidivl sarl mov ret aas loop xchg out aam mov mov xor and rorb jl movb mov xchg mov pop xor cwtl ljmp stc mov push stc aas dec (bad) popf inc movsl (bad) cmp and cmp sub popf jo add mov mov inc test jmp scas jne repz xchg fcomps sub test testb pushf or sbb or rolb sbb out push xor pop fsubrs scas jne mov mov sub (bad) dec add xchg or daa out dec bound fldcw iret or cmp mov (bad) es fstpl sub lock mov mov fisub mov mov lea fisttpl sub xchg xchg cmp clc xchg lcall mov or pop pop fprem jg jns test or data16 mov pop loope or cltd mov mov lds mov cs clc ret dec fs sti pop (bad) fbstp (bad) scas dec ja fbstp shlb jo mov jns sub shrl es insl ss cltd sub push mov pop xchg and fwait jle cmp (bad) je bound push xchg mov std push inc sar test adc scas je jmp (bad) mov push stc dec inc or les (bad) icebp sub insl dec lock cltd mov (bad) hlt xorl pop leave dec xchg cmp je ret sub mov call pop loopne jne in (bad) jb popf pop mov mull mov stos popf int3 or cli or adc mov lds mov dec or push std leave jne loop ret or hlt push jp cli (bad) lods jge cwtl or and dec push aaa lods in popf fdivs jb dec shr loopne dec int3 cltd pop icebp xor or or adc aaa js adc add and out jge dec or pop cmc leave cmp or nop and fstps ds ret (bad) xor fmuls jmp into fs push adc mov or cmp in xor or inc dec cwtl xchg ljmp pop jno or cmp mov lock mov xor pop out dec repz jnp inc or jnp in jo movb sbb or pushf mov or pop imul wbinvd adc sub ficoml cmp jmp mov mov dec mov (bad) cmp shll lock dec and and bound fistl add xrelease icebp sub jnp sbb cli std jnp movsl push (bad) push shl aad sub xor sarb jne imul pop imulb jno lret pop repz push adc xchg test lods pop pop mov sub pop mov fdivrp inc and test or adc mov (bad) lret ret adc pop pop insb or iret inc sarl ljmp lea stc pop cs jne cmp out pop jecxz (bad) xor mov sub sbb hlt xchg int3 inc ret inc pop ljmp stos je mov and sbb cltd ret mov loop adc pushf dec test xor mov xor std cli (bad) lods out mov cmc push jns cmp ret or mov icebp mov fwait pop (bad) in adc adc cli mov xchg dec or imul cmp dec std repz mov push cmp idivb mov cmp jmp pop sbb ffree out repz mov mov cmp lret repz jae push idivb sub shl cmpsb cmc inc adc xchg ja jnp sbb jmp xor add mov xchg mov call cmp (bad) mov stos xchg cs or sub stc daa in cmp pop cmp out jbe (bad) mov ret rcl inc xchg je lock insl jge shr mov push shl gs scas fcomps pop mov mov arpl loope or push inc fisttpl mov (bad) incl sub jnp (bad) insb (bad) je into xchg int inc sbb test das out shr push scas cmp push dec stos mov mov leave mov adc cli sub mov aaa mov ljmp ret test inc add jo loope jp xchg pop loop rol pop (bad) xlat dec out ljmp dec or imul xchg dec dec je xchg add je push pop add mov scas (bad) inc call (bad) stc and mov sub cld in int3 dec ret dec sub notb out jns stc mov jnp cmpsl jo mov pop movsl inc roll sub jp mov fdivrl icebp push int3 sub or out xor pop icebp inc inc push leave and jnp ret mov sub sti sub sub xor sub bnd mov push stc sub inc sbb or push in and lods out adc or pop lcall xchg inc push push push mov xchg call outsb sti adc loopne mov sub aam pusha and sub dec mov fstps cmpsl mov stos sub add (bad) xor or jnp jge dec pop mov in fs mov dec push mov and sahf sahf pop leave cmc xor divb sub ret icebp jmp xchg adc push jecxz aam mov sub call and leave dec fadd sub add xchg insb push les xor mov sti dec or data16 pop movsb aam (bad) sub adc lods jnp mov mov push ret movsl roll imul push inc cmpsb pop dec loope pop aam adc mov cmp ss lea mov xchg cmp dec cmp das mov jge out imul xchg out pop shrl popa into mov dec push imul cld fbld popl add inc ret popa push (bad) jbe jmp cld stc jb mov xchg inc pop movsl cmp pushf lret xor add dec sub (bad) pop into pop sub cld out std sub inc icebp out jg mov mov enter repz fmull cmc cmp aas add das (bad) push xchg mov in jmp pushf daa loop cmp push (bad) mov fisubl mov dec (bad) pop push (bad) adc add or mov bound or xor mov jnp daa jge mov dec test lret xchg (bad) fisubr or inc (bad) scas repnz lret xchg adc mov jg sbb dec (bad) jb adc je push or mov mov or cmp cwtl xsavec das and dec dec cmp adc mov adc adc sub or movzbl ja mov or mov xor imull sbb data16 ffree ljmp test pop mov (bad) lret dec pop loopne fbstp loopne dec sbb movsb sti mov and repnz sbb sub fimull (bad) (bad) rcrl jp inc fldl iret lret sub sbb sahf sar in lock inc sub sub cmpsl dec xorl insb xor ljmp add sub negl xchg sbb xchg sub mov imul stos fs adc xor clc fwait dec cmp repnz aad mov loopne adc not ret sbb jns mov xor dec (bad) mov and fsubrs xorl dec (bad) mov lcall scas inc dec cli pop movsl in xchg shr pop jne stos xor sbb jno (bad) jne lock popf icebp xchg imul or mov pop cld push inc out dec (bad) jbe or inc inc or and fmul xor sti jne mov stos mov (bad) iret xor and mov push add (bad) mov (bad) cmc dec test or pop dec js subl xchg mov cwtl mov lret nop aaa mov out repz fstpl lret xlat (bad) es push cmp pop or mov mov sub imul dec jecxz jp push (bad) ret cwtl sub xor mov lods pop arpl pop lock push add cmp ret jne out out push cld cmc mov cld xor out clc lods lods jl mov jnp push ljmp jb das rclb or pop sub mov pop mov lret sub aas sub xchg jo mov pushf (bad) xor xor lret mov lret icebp (bad) jl (bad) jae adc (bad) mov lahf cld in fdivrs sub rorl repnz xchg das mov push lock sbb sbb (bad) ds pop ret cmp in mov rorb rcrb imul das (bad) data16 in lahf xchg cmp add sub xor jge aas roll xor dec or dec xor ret mov mov aad adc inc dec jno xor outsl andl daa divl xor add mov insb daa inc lret enter mov cmc mov clc jno in and mov add daa or pop outsb jae ret fstps sbb and push jp mov or push mov cvtdq2ps push out out sub pop stc mov fild sub adc xchg jnp cmpsb mov lahf adc popf movsl mov (bad) pop and sti jecxz xchg icebp mov xchg fimul loope cmp stc call add mov xor popf inc cmp ja insl stc xor (bad) insl ss dec repz xor fwait test ret add rcll push xor cli ret fstps sub data16 dec ret mov add leave mov insb push pop leave xor mov scas mov adc cmp std mov mov mov (bad) stc leave push (bad) out jmp mov imul (bad) or dec inc mov imul lret lcallw ret pop lcall insb stos mov sub aas dec lret and mov fcomps inc or or (bad) inc sub mov mov xchg sbb and sub es adc cmp lock mov push imul push xchg mov fsubs das je leave push cltd imul (bad) or jg (bad) cmp sub xor imul das jle pop xchg loop adc adc cwtl xor add and iret mov jg sbb jmp (bad) outsl clc movsb movsl cltd jno loope jl mov test xchg xor shll fisttp pop push ja daa movsl std mov push xchg push xchg pushf jno dec popf pushf lock pop ret cmp jmp lahf cmp rol repz mov jmp sbb add int jg stc in mov and push insl push and icebp and leave out (bad) sub les (bad) mov pop mov or xor sub stc push dec mov jmp leave fsubrs fsubrl push push mov data16 pop and in iret lods fisub (bad) jne nop ret call mov dec mov push sbb xlat or and xor xor inc popa xchg pop or xchg xchg loop or std loop jne adc (bad) adc clc loopne loop push push or dec leave and adc xchg xorb dec mov fnstsw in sub pop sbb (bad) mulb cmp inc and nop add mov or or adc pop (bad) pushf pop (bad) je sti adc cli adc pop sub mov mov fstpt int3 cmp cwtl rorb sti jg imul or dec int3 push adc sbb push jbe out loop and aad dec sub push mov out (bad) jmp rorl (bad) ljmp xchg sti (bad) mov or les jmp enter (bad) rcrb aas call vmovddup sub (bad) cmp insl mov js out mov jno imul fs out bound repnz fldcw imulb shll sbb fadds sti dec mov divb pop insb xchg mov jge mul (bad) gs out out mov push xor pop cltd out xor (bad) and jl mov mov dec (bad) jmp sub and cwtl js mov and rorb jmp or decb xor imul lock inc lret rcrb mov or xor sbb sbb xor mov aam push mov lahf jl in lods roll xor sbb sub (bad) mov test repz xor in sarl dec mov movsb in mov jmp sub das xor dec jb fsincos fs pop mov sti xor stos mov das or mov ret xchg out xor fstl (bad) lods movl sub fisttp mov mov adc mov jnp and jge mov jl jo dec add inc xor fucomi cmpsb es pop sbb xchg iret push movsl push jno iret ljmp push pop sub fs data16 adc adc (bad) mov lahf testb out andb or or sti imul leave fsts and pop pop xchg pop (bad) jmp stc in cmp pop mov mov movsl adc add repz dec or je mov adc and mov add movsl jo cmp pop shll std add jecxz mov popf call scas pop pop stc push sahf fcomps xlat ljmp mov mov repz lods dec mov bound pop cs pop out mov mov gs inc jp movl mov mov mov xchg pop mov leave stc cmp push cmc insl lahf shr shlb xchg xchg enter mov inc mov jae out push adc dec add out mov jae lds pop mov pop sbb cmpsb xor pushf jo xchg or insb cmp pop mov imul rcr insl sbb xor out mov push pop out fs xor test jmp into inc lds (bad) pop mov rcr dec sub jne push dec iret mov and fiadd mov out xor mov and fisubr cltd or or (bad) lret fbstp roll or imul mov cmp push or or out daa testl xor cmp or loop movb add ret xor dec jmp inc jns,pt adc cmpsb pop daa iret (bad) cmp push cmpsb ret fnstcw adc add ds xor mov push or add mov or xchg or sub stos arpl mov mov jns daa sub push dec clc xchg cmpsb fldenv rep adc mov roll inc dec in cs test fidivr or sub outsl test mov or shl ret test dec mov pop repz mov add negb stc pop test mov fist (bad) gs mov mov pop in xor mov clc ret decb imul rcl dec cli or out ja imul je lret dec and sub or mov jmp cmpsb pop ret ror rclb sbb sub ret xor add in cmpsl xchg cmc sub pop out pop loop (bad) repnz lds xor in cmc (bad) xor sahf das mov sub mov mov mov sbb enter js dec idiv lret jo push add xor ljmp dec jle fisttp std adc sub test mov and imul insb lock jne lcall lcall enter divps cmp das and (bad) jg daa or hlt push das fimul vlddqu cmc xor add stos bound (bad) jecxz lret std mov push push ds mov push gs jne push je sub mov xlat mov inc test loope sub add jp aaa jecxz xchg push pop jne ljmp add adc xchg nop adc (bad) cmpsb xor and mov in bound mov adc or lcall in out dec jno mov dec sbb ret xchg hlt movsl pop mov cmpsl daa jbe call andb ds icebp push cs imul movl mov in test mov pop add out sub xor in cmc popf stc movsl orl mull xchg adc test fcmovnb out dec fsubrp or ja int3 mov xchg jns lret je and (bad) iret push subb popf mov lods jecxz add (bad) dec ljmp inc dec xchg mov daa aam jmp dec hlt jmp test stos (bad) fmull xor fildll xchg and mov xchg push fisttp rcrl lret mov shr mov vmovaps fwait pop fstpl popf stc hlt daa fldl mov mov cs cmpsb mov sub mov imul fnstenv jbe pushf sub mov dec scas mov rcl or pop clc mov ds mov icebp lods inc and pop inc fldl sbb icebp in pop lahf jbe pop fbstp movsl icebp or dec stc pushl mov repnz popa mov add clc jne fcoml icebp xor jecxz dec test mov mov inc stc and cmp stos mov cmpsb cmpsl adc sbb sub vpaddw test sarb dec (bad) aaa jae repnz adc cmp rcl test dec sub subb xor or mov lods sbb cltd imul (bad) hlt mov cmp adcl call dec (bad) cmp ret es sub dec loop (bad) jne push inc ret aad leave jmp mov ljmp adc mov (bad) xor add mov add or xchg shll popf pop cmp push iret push add dec (bad) jge push cmpsl in pop mov (bad) mov in dec inc rorl orps test outsb lret ljmp ds and outsb jb mov pop loop jbe push daa push adcb scas sub sub movsb cwtl and dec xor lods insb or mov cmc mov imul cld (bad) adc mov pop idiv add ds sub rcrb xlat aad gs fucomp jp lods sbb lods push lods aas xor test push in notl push mov xor mov jns mov xchg add cmpsb loope or les jo cltd mov fdiv (bad) in lahf jae cmpsb pop xchg fisubr loop xchg enter stos or fs pop cmpsl pop mov outsl xchg ljmp push shr sub negb ret bound icebp jg pop jl jmp sub nop fwait pop or xor lahf jle imul negl cwtl es inc outsl push mov bound xchg rcl push inc lret clc ja ret lcall mov adc sbb adc test decl lahf dec ja or popa jmp pop dec movsl test inc (bad) aad add loop xchg mov inc movsl lret cmpsl aad icebp lahf cwtl or sbb push cmp xor cmpsl inc cmp xlat (bad) sub adc lock push add jbe arpl and mov xor or adc sbb xlat xchg sbb popa pop jecxz cmp lea lret mov (bad) push stc cmc push sti sub mov and stc leave adc dec xor add lcall inc imul pop (bad) mov shrl pop das and arpl lret cs push inc xor test mov jne mov mov push cld jg test (bad) ljmp ror outsb (bad) and dec pop cmpsb scas cs adc scas mov fildll pop xchg je call push add add mov sub push (bad) not jb and cmp shrl data16 jmp out popf jae xchg sar and clc add in pop ffreep inc fildll test (bad) pop mov dec mov cs jne jge mov mov fxch jp dec pop mov xchg jmp hlt test cmp sub (bad) push loope adc scas pusha sub cltd dec mov push jns cmpsl frstor mov mov pop mov dec sub cmp (bad) pop neg int out or or inc xchg xchg out sub mov push inc (bad) insb fcomip negb adc push (bad) lret mov aad nop push arpl jecxz dec out cmp jmp clc dec movsl out je mov pop push aam (bad) mov insb mov sarl fwait xchg cwtl inc pop mov aad pop mov dec jmp jb ret cmp lcall das icebp imul cs adc sub mov pop mov aad xor ja jecxz sub jg push add leave or jne imul push faddl data16 mov pop cmp gs cld daa push jno imul out sub imul cld cs stc push jmp inc sub bound adc sbb lock pop rcll test movhps repz adc int3 pop dec add in call fdivs das mov in xchg lret mov sbb sub imul fsubrl inc mov outsb fisttpl mov (bad) lret push fsubs lods sbb dec lret leave jne das dec aas jp lods mov int3 repnz popf add jne xor push mov dec mov pop jle fildll cld repnz push cmpl jne ret cmc bound or popf enter movsb sti iret ds adc sub mov and xchg mov mov hlt add mov call and mov leave push cmp sbb jge push xor ss das test or je mov sarb mulb pop push or and xchg mov push je mov and ret in mov imulb inc popa adc out aas xchg inc xchg jo mov je and cmp pop imul adc adc sahf dec imul test ficomp or sti pop lcall cltd sbb out sarb adc (bad) mov insb ljmp or mov mov mov sub outsb into addr16 negb leave call insb sbb sahf mov jg mov dec cmpsl lds sub mov mov fidivl push scas lea xchg jl ljmp fsubs xlat insb iret dec fidivl mov movsb xor mov das test adc xchg and xchg fmul push (bad) inc mov fstp pop adc xchg mov shrb add fs sub push fisubr sub aam (bad) pop pop daa cmc xchg jbe js xchg cld stos inc leave push jns fnstsw dec push mov add jp mov adc cld add sub xor mov fxch sbb cmp aas adc and aam (bad) iret stos cwtl jg xchg mov or cmp xor mov (bad) push sub xor int rorl mov clc jne pop and lods int pop xchg mul adc pop sub rorb repnz arpl cs inc jmp test mov jne js add fcoml mov inc mov dec aad sbb pop push pop repz sub sub mov sub je imul pop mov dec add cmp jo fdivrs dec or sub sub jmp xchg mov iret cmc rcll mov sub push xor or cltd cmp mov fiadd imul sub mov inc add pop jp jecxz xchg or dec push lea cmp lods mov jge xor fldl fwait mov dec (bad) repz mov fiaddl daa push lods scas xor or aam ret xchg scas xor adc xor jo xchg xchg std lahf hlt fcmovne je or hlt pop loop xchg sbb add xchg (bad) inc sub jmp lret mov shrb dec lods pop ss mov xchg or loop in pop test jmp inc xor cmp ds push scas lds mov sbb xchg aaa and mov js xlat mov aad (bad) jg inc add sub and mov int3 mov pop out lcall mov jg or lock fwait aad add (bad) dec ds ret (bad) cmpsl xlat out mov stos mov and fs cld xchg pop fistpl mov out xor loope push xor or pop (bad) out mov in test mov mov repnz in jb decb sti jp (bad) add (bad) or repz push dec jp mov pop xor enter or lods sbb jge repnz push bound sahf mov ljmp pop scas jne test push stos sub dec (bad) in pusha (bad) inc daa xor pop in stc in mov daa ret cltd xor sub dec mov xchg in sbb xchg ret stos mov push pop mov push in movsb movsb jmp dec jg xor xorl dec inc lcall int sub push sbb pushf jb sbb adc scas loope ss mov imul mov jecxz xchg faddp sbb nop lahf jle jmp mov or push and repnz pop pop dec pop lret ja mov push leave hlt cmpsl imul aad mov xor jecxz repz popa mov bound (bad) adc sbb mov sub jp je lock adc mov pop aad sub loope dec sbb scas int3 pop rclb ret inc es ljmp clc in adc mov pop shll test fwait dec daa pop insb and daa in xor cmpsl lods pop mov jne call loop xlat stos fs pop and sub pop (bad) mov xor sub push out repnz cmpsb (bad) xchg xchg scas push fwait adc scas xor (bad) jnp and mov sub fsubrl add stc test cs dec cmpsl xchg dec stc mov lret xchg adc frstor negb stos fcoms call das add lcall xor mov cmpsb mov lds jb mov test (bad) in es pop (bad) sarb mov lret and or gs ret data16 mov cmpsl xor dec ljmp lock mov movsl stos das adc ret sti ret dec loopne test stos (bad) mov nop int3 shrl pushf int3 push jmp lret in pop movsb out scas mov repz jmp mov sub jo sbb adc lea ljmp and or sti repz push decl pop movsl (bad) add insb cmp (bad) popa enter adc adc aaa test popf lds les clc shll (bad) push into jge mov popf mov xor cmp mov add mov mov das repnz out inc jecxz xchg mov divb or imul jg iret xchg mov popa (bad) negl ljmp out lahf jo push (bad) mov mov or mov (bad) sti mov cmp cli sub mov nop scas add push or or mov pop out sub test or sbb (bad) scas cmp (bad) xchg sti in shl dec test push jns add fbld shl (bad) mov dec stc aaa cli test cwtl aam cld mov mov popf xchg sub inc inc cmp fisubr outsb movsl pop jge and fisubl cld daa sti fsubrl ljmp mov rcll mov scas daa xchg icebp scas lret movzbl sub sub out loopne push add sub sub sub pop lds cmp push inc xorl dec inc mov mov (bad) xor rcrl fs mov mov enter push mov (bad) fild push or mov ss pop xchg pop or out jle dec xor out cmp sbb outsl imul ljmp mov fsts rcr xchg lahf xchg pop cmpsb les jno add sub aad dec mov add ss popf rcrb mov add shlb fstps (bad) lret sub mov xchg (bad) enter ljmp dec and cmp loop out daa loop popa enter mov mov add call es mov xor pop and xor adc jmp outsl xchg decb sub mov popa or jmp sub jecxz xchg lds sbb add jno adc mov ja lods xchg (bad) jmp or ss popa std pop push push sbb push lret hlt ljmp test mov adcb mov push inc cld and daa loope pop bound cmp ss adc loopne insl shrb addr16 add pushf jns mov imul (bad) lcall xchg push divl lods push fs mov pop cmp xor fldcw xor repz push (bad) idivl dec stos mov jns mov cmc mov repz shlb sti push dec call mov mov scas mov add mov (bad) dec jmp fnstenv or mov pop mov mov mov (bad) xchg jg jo push dec jae jb pop push in adc mov dec pushf add stos mov dec mov and imulb repz xor sub sub test mul pop repz leave xchg fist mov mov and push jns xchg sarb sbb add xchg gs mov das cwtl das or dec jmp sub daa sarb sub in fiadd adc (bad) int3 dec xor fistp mov push ljmp cmpsb adc sarb adc ss push pop mov cmp jge js xor and stc push inc iret ljmp fnstenv es push dec in mov sbb sahf xchg sbb jecxz add ret aas xchg daa bound push mov push inc adc rclb sbb mov jne aam mov call jbe adc cwtl (bad) dec sbb sub decb mov cmp sti loop dec inc int3 ljmp jbe test mov sub cmp adc jb or (bad) push fildll add out mov jmp cmp xchg cmp movsb dec aaa pop xor mov dec and (bad) mov cmc inc stos cmpsl (bad) in aad je into stos lret std adc inc lret dec sub adc icebp test out into jmp (bad) lret mov rcrl or or mov adc aam jmp mov (bad) sub mov mov sub adc push xor mov dec test mov xor and sub cmp mov jg scas fsubr cmpsl pop sub xlat lret cltd mov and and daa (bad) jns imul jecxz out stc clc in in mov out test inc jmp cli jge lret es mov mov mov cmp lea (bad) mov loop lock adc jg cs test mov testb ja cmp in xor sub xchg ljmp sub sbb leave xchg leave sbb das or or add jecxz inc jp in ret int out or popa add outsb jl movsb adc imulb dec pop mov or clc out leave lret pop idiv fnstsw cltd pop scas sub push (bad) lret out (bad) pushf aad jl daa jns test add cwtl and and aad (bad) imul xor js and xor cmp shll add adc mov sbb lahf (bad) je add mov (bad) dec gs aas (bad) and dec andnps push xchg jbe push xor xor fdivrs jne dec xor cmp xchg adc lahf lock dec out in ljmp push and sub leave jmp and ret jno and jne (bad) aad repnz (bad) mov pop sub pushf nop cmp (bad) mov push cld call push jo inc mov in jbe dec mov mov stc jo add popf inc push das sub add (bad) out jnp es jp mov mov fs xchg mov rolb pop adc fwait or sub and inc mov inc jae sbb sub mov popf pop mov mov jge aad fsubrl (bad) into jns pop xor pushf mov cmpsl test add cmpsb sbb mov (bad) imul lret and push jo loope pop sbb (bad) mov inc and ficompl pop mov xor jnp imul mov jae (bad) jmp in cltd in aas stc dec (bad) pop dec stos bound cltd xchg xchg mov or (bad) xlat push xchg out sbb es sub mov lret into or sbb cmpsb std into and ds iret pop out mov push add xor mov rcrl repnz (bad) lret pop sarb cli scas sub inc cs xor mov and stos or stc dec add enter lahf in add sarb sub ret mov cmc dec mov add pop sub xor mov xor fnsave lds insl subb and loop sub mov add es adc test jg cmp mov sar pop dec sub imul and es stos cltd inc add loopne icebp mov aas (bad) rol jbe push fcmove jne jl add (bad) imull xchg mov ret sub nop jl fld cmp leave mov lcall jmp lods and imul adc stos jecxz sub inc push push gs pop fstps idivb ret xor fiadd add sub iret xor jge int out mov movsl mov ds fdivrl push outsb sub and std xchg out and cmp push pop incb or hlt pop fisub pop cs imul pop and xlat jns daa data16 mov mov bound (bad) jl or icebp andl dec or out dec iret lods xor (bad) aaa ret insb repz pop aas cmp push (bad) jp daa and inc dec mov push sub loopne loop (bad) dec push hlt dec or lret (bad) out pop ljmp movsb fidivr (bad) pop icebp repnz and cmp xchg add or out mov or fs gs aas pop paddq jne mov jge jo adc cli sub inc movsl sbb repnz ret and lods hlt mov mov cmpsl sahf inc mov lret and mov mov mov xlat push xchg pop (bad) int3 inc mov push and adc sub cmp push xchg cmc sbb jmp out sub data16 xor fisubr in inc shll dec sbb loope aas bound lret push mov scas popa adc add (bad) cs add pop mov mov imul fisttp xchg push sbb mov xchg lock jmp push nop sti sub mov inc xchg (bad) adc scas mov repz sub std fstl jge cmp xlat xor inc fsubl xchg out ret jl jns imul (bad) mov sbb jmp push sbb mov adc pop sub rclb mov stc mov push popa test popf ret pop or cld and adc sahf pop sub jle fsubl enter xor mov ljmp mov lock sub (bad) sarb cmp (bad) xlat push jge sub push and scas or lret dec push or cld jo pop sahf (bad) jmp sub in shrl or cmpsl jo aaa jmp mov call sub testb insb lahf dec call shrb notl dec testb (bad) inc jmp push xchg in sub lret stc hlt sub mov into arpl aaa mov out in test or in cwtl and pop fmulp push pop mov and decb stos sub into pop xorb pop shr or negb mov popf fimul lret in add pop movsl fidivl roll add cmp inc icebp imull mov pop (bad) in mov pop (bad) sub mov push ds test and out lods and sti mov test cmpsl inc cli and ds push cmpsb jg shlb jmp pop push idivl mov adc xchg mov xor cwtl int dec xor mov in pop xor cli (bad) test lret notl ljmp push mov pop cwtl cmp adc cmp sub lahf jbe repnz xchg mov push imulb test xor pop stc jmp leave mul inc mov out lds leave out mov sub adc xor pop leave repz and adc mov mov cs repz add loope mov sub aas int3 ror push xchg dec mov leave jge adc pop add mov pop mov rcpps clc jmp pushf dec std dec out cmp sti data16 mov mov adc ret or je out push les popa inc cmpsl jno ds jne jno enter gs fsubrs add das mov js pop loop mov cmpsl rolb or test dec push mov mov (bad) or mov mov xchg xchg out sbb ficom mov sub fsubs xchg idivb mov adc shrb loope cs sub mov out and pushf cmc movsl pop inc push mov xchg fcmovne adc les xlat daa inc lea pop mov jmp (bad) mov mov pusha out mov jge imull jle ljmp sub xchg xor mov (bad) rorl dec (bad) jle jmp push xor pop in out rorl mov call pop loope lds (bad) sub and pusha xchg xor sub cmp hlt push mov bound stc and out and push sbb (bad) xor out not test mov out dec out iret aad clc cmc and imul push dec lahf mov or jmp sar push jmp ja aam jl or pop pop in inc xlat and xchg and test add inc adc or (bad) (bad) or (bad) pop push mov cmp dec imul cmp xchg lret add callw jns loop push pop fistl adc sbb adc push aas and push dec jg stc lods adc xor mov dec push mov xchg std repnz stos xor stc cmp xchg das push lcall xchg mov mov aas test or cmp popa jnp pushf xchg imul in dec mov xor mov call movlps mov into aas mov ja push sub sub out mov daa ss leave iret sbb mov ja sub pop lock cld cmp and ret or add ljmp into daa pop movzbw inc mov inc js jmp push or fs adc push std pop dec jbe inc pushl shr jecxz push pusha inc xchg cltd movsl scas icebp sti sub pop inc or cli data16 fcmovnb mov hlt xchg gs cwtl push xor inc sub xor clc cld pop ds inc out in out negl repz leave cmp sbb in sbb push and dec and and and cmp push inc and and and and and xor cltd fs or xlat imul jo mov or jl sub or xchg pop mov mov cmpb fstps or int3 shrl leave mov inc mov jnp or leave pop frstor ja jno sbbb xor or or or repz or mov push or adc add add add push add pop add add add sub xchg xor inc xor clc aaa add add add add add push add and xor pop sub pop bound enter push fisubrl mov dec jne mov and (bad) jle push addl xchg push or aaa cwtl and pushf and lahf and and and stc mov popf mov mov lcall inc leave cmp rcll inc aad inc xlat fmuls loop lock or add out add xchg sti cmp add cmp adc sbb pop inc and inc and sub xor ss inc cmp inc aas jae inc push dec sahf inc push mov pop jp popa loope gs add js mov or jle iret sub adc cmp and xchg and cltd and and xor jns and and and xor mov add add cmp add add add add add push les lret or or sbb add adc sbb push add and es sub cs xor ss cmp mov adc adc adc dec and xchg dec jns adcb orb adcb adc add jo jae nop imul jnp cmpsb jle (bad) add xchg ret mov stos popl in xchg add add cltd nop sub mov adc scas adc adc mov add add add add add xlat add add fiadd jnp add out js add add adc xor or or adc ret sbb int adc and pushf sub sbb adc xor cmc ss cmp (bad) aas adc adc dec adc cmp sub pop jge shll data16 adc xor sbbb fidivrl loopne adc xor add nop add xchg add cwtl add leave cmpsl orb scas andb mov adc sbb enter xor or or push or or or loopne dec jecxz in push jmp inc clc cmpb cmpb mov or or aaa adc inc sbb imul xor xchg xor repnz add add dec add add add add pop add add push pop outsb add jae xchg ja xchg jp loope or adc adc adc xchg adc adc adc popf adc mov (bad) add mov sub inc mov xlat lds dec lret into nop xchg rclb sbb sbb or add out int add add testl (bad) adc add les or push or or or or and mov or sub stos xor and or or or dec or or push adc sbb add bound cmp and add add add add psubsb add nop subb add or or or test push stos or or or inc mov ret movb sub sbbb cmpsb fmull dec fisttp pop in test sbb or in orb sub addb inc rcll cmp sbb andb dec pop cmp cmpb push daa subb lahf adcb and adcb gs add andb sbbb orb (bad) loope or or outsl or je movsb js (bad) jge add orb nop or or fwait or or or or mov adc or mov cmp or (bad) or lret lret sub or into (bad) addl inc loop inc out fs jno add testb add cld add incl loop adc fs mov jns or or adc dec push or or and mov and and and and and and mov and dec and and and inc pop xor mov jns adcb dec jle addl subb xchg subb arpl xor cmp orb enter addr16 (bad) enter push int aam or or fisttpll sbb or out adc or or lock or clc or pop (bad) adc or mov or add sbb mov add sub das sbb xor add aaa add cmp das aas add adc dec adc adc pop nop xchg fs imul jno or adc jp jae jmp add add add xchg pop in add sahf add movsb add cmpsb add test push mov mov stc mov lds mov add int and nop (bad) adc ficoml inc fist push in shl adc icebp adc adc and lret add adc adc adc fistpl popf and jbe adc push in mov outsb xor loop cmp and aas and inc xor dec push dec add add call or xchg data16 imul adcb cli jg mov and imul lahf add mov sbb mov xchg mov xchg ret and xor lret add aam mov and fsubs pop fdivl (bad) (bad) loop scas out xchg ljmp add add add pop rcl les xor add adc push add sbb and xchg and popa es adc sub dec das and pusha aaa and and and and push and and and mov or xor popa jne int3 jp mov and and mov xchg xchg and cwtl and sahf and and xor dec mov les fnop add and and fidiv (bad) loopne in xchg call inc lock repz pop mov add icebp inc or js bound or and xchg or sub xor cmp inc and adcb adc adcb xorb xor sbb and and imul outsl and dec jnp imul xchg mov xor jns and and movsl bound xchg lods add int3 mov ret addb in or or rorl mov or loope sbb or or or icebp cmp adcb incb xor push or add adc adc add sbb cmpsl push add add sub mov jne mov or cmp sarb jecxz or inc or or cmp or pop or pop or or insb or jno fdivs push jns lds test or mov out sub xor add add add add add movsb mov cmpsb mov cmp and or add int3 pop and or aad hlt (bad) xchg or or in popf jmp mov and cli and std pop movsl pop jo xor or or mov or sbb ja or or or xor mov or adc dec inc cmpb andb addb cmp arpl imul cmpb out jnp cli addl sbb subb mov cmpb and addb enter jbe or mov mov ret and (bad) and and jno add fild jecxz add add add hlt add add psubsb add addb sub mov or aas lahf or and inc (bad) dec inc sub inc xor iret inc aaa dec inc cmp add xchg inc dec jl push popf inc push aam pop mov pop in arpl fs jno and xchg jns pop jle inc sbbb lret inc xchg pop inc xchg repz fwait inc inc lahf stos inc mov repz icebp mov inc mov mov adc adc adc adc adc adc dec inc out jno repz (bad) inc sti push inc inc cmp sbb js or addb xor subb inc and jg add ret sub cmp add xor ret cmp add add inc add add add or inc pop stos inc bound outsb mov jb inc jbe inc jnp inc jle inc (bad) popl incb (bad) inc xchg lods inc xchg pop inc popf addr16 mov inc stos hlt inc scas out mov inc mov fs add leave push adc push inc (bad) loope fcmovu inc in inc jmp inc repnz not inc cli mov sbb add sbb pop or andl sbb sbb cpuid xor nop and es sbb adc sub fwait or add add add inc add dec and and push and pop and pusha and and push push jb js add push addb test imul xchg add xchg add cltd add popf add add add lods and and mov sub (bad) and lret xor mov add xchg faddl in fild mov and out clc jmp xor sub add add add add pusha insb pop les adc add or cmp jne add push adc pop or add and daa and dec sub imul xor cmp dec and sub add add add add popa add or pop outsb add jo (bad) jae mov add and cmpsb nop adc adc adc lahf adc movsb adc test xor mov loope pop mov add add add add add fild xor add jmp push out add add lahf add int3 inc pop or inc or inc adc inc adc inc push aaa inc and daa outsb inc sub xor cmp fs inc add inc add inc add dec add dec add push add push add pop push sbbb popa in inc dec inc insb sti inc jno inc jbe inc jp inc jle inc (bad) push inc xchg add xchg add xchg add add add cmpsb add test jne add mov mov add add lret into cltd popa rcrl pop xor add loop and add in add lock cmc add cli add lcall mov and jl or push or xchg mov adc rcll and and and daa jne sbbb pusha xchg popa jp inc hlt push push jp sbb pop pop sub mov or jno in xor loope mov test inc and jl sbb jmp js repz shrl push cmp adc xor or push sbb push or inc jbe push push mov push sub xor mov or mov push shr andl paddusw cmc pusha lds fdivr cmp cvtps2pd and xchg aaa adc shlb mov (bad) sub rorl inc shl fbld add rorl nop or sbb mov cmp rcr lock sub add gs mov add pushl into xor push pop add pop inc xlat adcl jb aas dec adc orl xchg sbbb push adc sub stc cmp push pop adc mov sarb xchg or pop mov test add imul sbb jbe mov mov movl out ds sub fwait and out xor pop out push push sar aas xchg ds pop or mov sub pop inc inc add adc push incl loopne pop add dec jle decb add add pop push push loopne sub push mov push sbb mov push dec (bad) mov inc add lret aam rol inc jnp sbb into pop and inc push mov push inc or stos int in push imul xorl lock pop or repz in sbb or pop inc and mov or and or push loopne jg pusha dec or jl cmp lahf xor std mov or adc rolb mov rcrl js movsl cmp pop pop xor adc mov mov outsl loope das pop pop push ljmp xchg adc dec adc push aam mov das push add shl push mov (bad) (bad) lahf test add push or xor pop xchg test (bad) ret mov inc xchg inc or push std inc fcmovnbe stc addb adc push push je outsl es add or push rorl push push inc call addr16 test shr aad orl push rcl sub adc push push mov sbb testb mov xor daa loop xor adcb mov (bad) dec in mov pop push mov jge push add cmp cmp or inc jl jecxz or or adc adc in push addr16 sub loop ja cmp add mov mov int3 inc adc outsb or or sbb dec pusha dec out sub fldcw or enter jne test inc sub out (bad) sub cmp (bad) jnp div pop inc inc cmpsb and adc shrb (bad) push dec pop add jle fmuls or test fwait lods xor inc or lds mov xor lods int aad mov not or adc dec jo adc push cmp add adc ljmp cmp xor cwtl fcmovu lret push adc ret lock or mov mov imul addr16 adc bound push sbb xorl mov dec jb mov int jle sbb mov sub add into in xor gs aaa pop and push push xor test (bad) push push jb add sbb pusha sbb fidivrl cmc jno xor lds aam pop add ds and inc rcr inc sbb push or cmp dec xor add and sub pop mov cwtl dec or aad test xchg inc xchg push adc mov or pop aad lock pop cmp cld add fincstp (bad) ffreep lods pop xchg xchg fisubl add push into repnz xor addr16 adc aaa nop sub clc shlb ss mov add inc shl xor add bound jae ss add push mov mov push dec pop stos lret xor out daa int test or pop cwtl pop ljmp mov fcomps xchg adc shrl aaa xor addr16 inc mov sbb inc xchg mov or pop mov sub (bad) adc push add push mov pusha pop lock lods dec mov into inc xchg add pop cmp aad fstl movsb push jne and call nop or jle sub add push gs xchg into popa push push push les sbb or das pmullw push xor push ljmp cmp das lods addb pop or addb push mov ds ret or and pop pop shr add pusha dec pusha pop or cwtl push or jge dec es sbb sub sbb or adc fdivrl xor fadd lock mov sbb pause cli sbb add or pop data16 cltd sbb sbb mov or and out xchg and add test (bad) cmp jecxz cmp ret inc or dec push mov push inc push pop or test xchg fldt call cltd ja push lds pop nop xchg add imul idiv add andb and (bad) xor or sub push in movb and jne cs xor sbb pop adc arpl in mov icebp addr16 dec sti push adc add aam inc sbbl xor js xor dec shrb sub push sub dec add fiaddl sub or pop dec rol add sarb sub dec pop test mov mov sub nop add dec or fs popl pusha orl add xlat inc mov jle or pop xor outsl cs test mov mov add xor or add dec or mov movsl or push or sbb rorl jl xor dec rcll or adc jne repnz pop imul xchg pusha add jnp push insl clc or add push fwait mov push cmp push lds jl,pt sbb sub push loop dec ds movsl push movsb push aas push mov mov loopne repz xor incb neg xchg inc pop push lock add mov gs xchg (bad) jne mov or test xchg push or orps add cmpb jp mov xchg (bad) or inc dec bound pop xchg lret jo or adc sub lret cmpsl repz mov sub jnp pop mov leave lds ss fsubl lret or pushl jb cmp xor sbb mov xor ret xchg dec mov and and dec idivl dec xchg sub inc fnsave pop outsl adc dec mov add stc add inc mov fsubrs adc or roll mov (bad) dec and push mov shlb dec mov mov enter mov out jg and sub mov out mov fisttpl add dec lods (bad) or pop (bad) cmp jg push jmp jecxz inc mov fwait jno mov cltd mov icebp clts adc add cmp lock stos arpl btc mov cli or std and ret pop clc dec pop pop xor loopne js sub sub ljmp jo fcoms push and lahf add (bad) enter mov dec (bad) cld je push dec inc inc outsl sub pop add cmp jle fldenv into xchg es xor dec add sub jb enter and outsl adc test add jbe pop rcrl xlat mov sbb js scas inc dec iret aas xchg mov popf sub (bad) je test xor bound push cmp sub je jecxz (bad) adc jns cmpb add push or xorb add or and pop inc adc inc and (bad) notb and inc add in enter or hlt pop or mov sbb fisttpl jne (bad) bound lret fistp jmp inc xor rcll adc pop test adc je add psubsw add mov fadds mov clc jge mov push push add jno inc pop pop sahf stos js mov dec cmp pop push push dec add test mov adc adc clc sub nop dec pop pop xor push push jl sub jmp pop jmp push (bad) or jns xchg aaa shl imul jmp cmp add adc iret pop icebp sub mov and push jl js cmp jle in les (bad) add pop sub bound or pop add rcrb (bad) xlat xchg or or push data16 sub add gs adc mov or pop push sbb xor push orl icebp sub and pop test orl push cmp lods enter ja dec and add inc lods and test movaps inc pop cmp inc (bad) dec inc fsubs inc dec xchg jmp test cmp push adc adc insl sub iret mov out push les dec sbb and xor enter add adc cmp add push sbb mov push es push bound (bad) and mov test add sub dec dec inc inc cmp inc mov pop mov xor cwtl roll add rolb dec push pop les loop std imul xchg aas mov (bad) jo sbb dec mov xor or pop jle fimul pusha or gs push std mov xor xor push sti fs sub pop popa sub jp (bad) nop sub iret pop data16 add (bad) (bad) ds sub daa sbb and adc addl lods clc fimull out mov push cmpsl bound in inc insb fild arpl dec enter pop mov jb popa adc add fiadd pop xchg (bad) mov mov pop sbb sarl pop xor out and pop pop add (bad) mov sbb and icebp push xchg push or sub adc test push test add adc add int3 out pop or and cmp pop cs add sbb xor push xor push push nop adc sub xor pop rolb pop mov fwait push fwait sbb (bad) pop xchg lahf sbb in dec in mov push or and dec sbb adc mov dec sbb bound pop test add roll or pop dec adc mov adc cmp ljmp add xchg inc aam adc pop cmp adc sbb outsl add add popa pop cmp in inc jp cmc add lret stc push xor (bad) (bad) mov je and mov or sub sbb inc ret call cmp popa cmp sub push pop adc mov add shlb sub roll bound into sbb jno out push mov dec add repz push xchg pop inc cmovle push xor push lret cmpsl nop popa push scas adc inc leave and and mov sbb jb hlt insl xor add gs xor fldenv mov ss jbe xor pop cltd rcrl pop mov push bound std loop pop jbe lds dec or xor mov pop shr push mov in lock nop es mov nop cmp push lea mov cmp dec dec add pop push mov and loopne push out shll out jnp ret dec (bad) fldenv in (bad) xor mov cltd ljmp xor flds ret test dec popa and push sbb or xchg scas xchg or inc dec push test fadds sarl gs int cmp daa test dec nop inc dec in add loope sbb jecxz lret outsb leave push stc add arpl sbb in or xor pop divl clc bnd push bound pushf cltd xor adc and mov adc int and fs pop fyl2x jmp mov cwtl mov or pop rclb sahf push (bad) sub lahf dec popa ds push pop sub stc pop pop ret and pop or (bad) icebp inc or and add sub movsb and adc xchg dec push xchg leave cmpsb mov push jno insb imul or insl sbb or adc inc fcmovu dec aad cmpsl cwtl inc jle (bad) pop xchg push mov imul sbb or sub mov adc sub jb xchg or mov mov xchg andl add pusha xor dec add fnstsw pop xor pop rolb loope in xor mov (bad) dec insb adc lret inc and stc jb arpl or cmp add ret incl hlt or inc notl ds aaa mov sub add jno xorb gs dec cli add sti xor and add push or or out or mov lea adc leave lcall sbbb inc add mov cmpl inc and adc pop aaa mov and push sbb jmp push ficomp jmp cmp inc dec inc inc pop ret mov sahf cmp loop xchg push sti lea cmp adcb out dec pusha mov push ficoml pop mov cmpsb mov notl pop and or arpl insb fsubp mov sbb push dec rorb jg leave pop pop (bad) mov mov jmp aas add and pop fnstsw cli cli enter push mov mov dec mov imul fs push xchg out xchg jbe mov sets add lret adc stos std adc dec add mov sbb lods mov mov pop nop jnp popf or or lahf ret and gs repnz push in jmp fs aaa or sbb pop xchg daa icebp xchg xchg or hlt mov test addl or pusha addr16 add rcrb pushf fstps jle ja sub imul mov cli or mov pushf and sbb add xor mov inc push and sbb sbb aas out and test sub jg mov daa (bad) adc fucomip in popf push hlt xchg adc xchg dec push sub in cmovbe fistp add (bad) mov or jnp mov int3 pusha stos xor add mov jle push push jmp xchg push roll cld inc xor mov (bad) jle pop je jge jl (bad) push add iret add pop pop push and inc and push or pop cmp icebp cmpsb adc xor xchg test inc jp mov rorb cmp (bad) into jmp outsb adc ror pop or add inc shr mov addr16 and add stc in jns rcrb sbb test fdivrp lods jno std mov ret repz dec jmp or fidivrl aas pop push lock xchg mov jge subb mov cld jmp push vpsubsw andb dec mov add cmp lods lret mov add aas aaa shl cmp xor push outsl fdivs flds xor jmp jae (bad) and or in aaa pushl mov add ret mov cmpsb cs pop xchg jns jl mov pop push mov sub fild ja push popf pop cltd sub and or (bad) xlat add cmp lret dec pop cmp sti lahf sbb scas sbb mov movsb outsb or rolb jne pop leave push sub mov inc loope nop aas or sahf lock xlat ljmp fsubrl imull jge inc push pop add push (bad) icebp add inc add or cmp or pop jmp jnp mov cmp jns mov xor mov or and out sarb fadds add (bad) jmp das dec add test sbbb xor mov ljmp test jmp idivl xchg or pop movsl jmp and cld stos push shrl sub add or add je icebp dec clc pop add xchg adc fadds imull xchg sub insb add and nopl cli push adc jmp mov ss or pop add or stc adc inc test sub sub pop jmp mov add adc or dec jmp neg shr push divl cmp or adc pop lret fstl xor add add xor and ficomp xchg (bad) xor jmp sbb jmp mov rclb cli mov mov push adc cmp test pop outsb insb sbb jmp inc inc insl add or jns mov in neg jmp pop loopne cmp adc adc xor push inc adc or addr16 cmc cmpsb bound sub push js pushf stc pop push subb xor sbb jmp mov mov mov cmp mov std sub jp into fwait and xchg jp bound jp or js jno loope inc xchg mov insl cs lret inc pop nop aam inc xchg roll jle push icebp sti add push push dec sub adc jne or lahf add inc mov xchg pop add inc daa push push js or sbb out xchg rclb mov adc shl and inc test divl (bad) adc jb int sub rclb test pop adc fistl cld pop sub test cmpb jl gs xor mov cmp dec dec in jae inc jmp mov jg jl add das icebp adc out push cmp sub mov or shrl xor or repz and lcall pop icebp repnz sbb ret dec bound inc arpl pushf mov push les inc out and add dec mov xor xorb out pop jmp xor add das test sub popf mov das (bad) mov cmp (bad) jne jbe icebp push cmpsb pop add xchg sbb push loope add sbb add or mov pop lds or or fwait xchg lods xlat mov cmc xor push sarb push mov shl pop push add das push fstps js sub addr16 push or sbb dec cmp imull mov mov leave xchg sub push push mov (bad) sbb rcrb stc scas cmp into cmp and mov mov jmp lea imul push fldcw mov repz sub jl or test mov mov cmp (bad) jp push shrl jl cmp sub imul push sarb sub mov or push sub pop inc and adc add push not push sahf push inc and dec jmp pop ficomp (bad) mov mov cmc pop jecxz mov aas xor nop aam (bad) or fldpi jae sub lret cmp adc scas or pop jne xor testl xchg push pop fwait xor test pop cmp jne arpl adc (bad) cmpsb ljmp push pop push mov out and add mov push mov nop rcrl popf and out add push adc mov push xor repnz rolb add (bad) pop out insb and jg,pn adc jmp push js xor adc jb xor and popf xor adcb adc cmp add inc adc jae ds pop divb mov push mov cltd fsub cmpsl aas inc inc mov sub sbb leave push int sti arpl punpcklbw ja cmp shll adc or jo jmp xlat pop dec aas repz test insb (bad) sbb fs add jmp into push jmp mov dec sbb sub dec mov pop push push data16 mov mov stos mov push pop push push stc inc stos stc lahf mov adc jmp inc xorb rclb scas push cs aas imul or push fwait ljmp daa lods or ljmp addr16 cli rolb or aam adc insl or (bad) js add cltd popf lret push mov ss cmpsb pop fidivr jnp into inc dec imul push pop cld lret add repnz imul and andb adc inc mov push out loopne jo fcmovnu mov fwait or mov cltd xor pop repz push sub inc xor add icebp push les je (bad) mov jb ja jl jl add jge (bad) sbb repz xchg pop mov dec cld insb inc xor hlt cmp jo xor fstps lods jecxz add imul cli cmp cwtl lret and cmpsb add arpl mov or add fdiv adc xor sarl jg test push insb cltd mov scas inc cmc jecxz add sbb push (bad) repnz adc mov push push cwtl sub mov clc ret sub cmp rorb add jns ljmp push sub push sbb rcrl or adc push fcompl rclb adc sbb pusha xor cmp mov pusha inc icebp sub adcb movsb je ja repz fcompl loope push insl sub cld mov and mov add xchg push cmp test imulb add pop cmp mov mov nop test cmp xchg push or fs nop stc stos mov push hlt mull xchg sbb jp sarl leave cmp ret mov pusha (bad) scas int3 add or pop dec outsb popa test sbb dec sarb dec mov and movsl loope and pinsrw cmp rolb mov ficompl movb pop (bad) push cmp mov cmpl cmp jecxz lcall adc arpl pusha (bad) xor enter loopne imul jecxz iret mov clc fiadd xchg adc dec rol loop sub push popa insb mov or push add sbb xchg test xchg test xor or sub cmp add rolb fidivl and imul rcrl int3 cmp mov rcl adc mov mov dec mov push fadds sub inc mov xor ljmp jnp push add rclb ss xor add insl (bad) push ret cmp or xor loopne mov gs or out sub add inc add fwait (bad) mov iret push popf and pusha sbb adc push jl pop pusha pop aam mov push sub nop xchg dec and and fs adc orb mov test aaa scas addr16 add cmp xor pushf or mov jo sbb xor imul add adc shrb inc xor or xchg mov push mov in out add pop xor mov jae mov or adc inc shlb jmp dec xor scas cwtl xor cmp test pusha loopne fcoml push mov inc lret sbb faddl xlat imul andb hlt lods jo repnz enter incb mov inc imul xchg dec es fadds jmp sub daa enter ficom jg rorb dec gs push and pushf imul inc fdivrl mov insb lods adc add push push sub (bad) hlt inc (bad) push test inc jae mov fdiv sbb ss xor mov push xlat and add clc sub mov or xchg inc lock or and fsubs scas sub loope je push popa push pop cmpsl mov xchg or or push jle or mov push out xchg mov aaa push pushf xor or je or sub mov ss add fisttpl hlt aaa mov rcll and pop push jo enter fs mov je pusha call jbe push test testb pushf inc popf daa push enter xor cltd adc and mov shrb jmp jne rorl out xor mov add add mov dec xchg leave test sbb movsl dec pusha fs mov rorb adc lahf mov mov mov (bad) xor shll data16 js in sbb hlt imul xorl mov sti mov leave adc aaa pop loope mov mov jg add xlat es fcoms clc hlt jge and daa add les ds cmp push push nop test sbb cmp mov es dec jo dec imul adc lods (bad) in pop adc cmp addb xor enter adc in add lcall movb sub ds jg (bad) or add xlat adc pop sbb sbb lock decb clc push repz pusha (bad) (bad) xchg mov cmc jp push (bad) std andps test add lcall xor xchg mov add sbb xchg add pop cwtl out imul mov add sti repz add sbb sbb sub lea push jns and cmp addr16 punpckldq test out sub add push pop push movlps data16 shrl mov sub inc inc inc pop and xor lea out dec cli mov fcompl inc xchg leave inc (bad) mov cmp add adc popf iret pop pusha or outsb aam cmp add pop addr16 movsl bound jne push cwtl cmpsb inc (bad) add push cmp xorl add mov imul push andl (bad) icebp xor sti sub fildll adc dec je add push cmpsb add sub dec mov pop aam sub push inc cli mov subl ljmp push xbegin xor dec mov rorl add (bad) lret xor je add insb nop xor dec mov xchg push insb cmp hlt mov xor pop out push cld es sub adc fmuls cld push add (bad) rcrb xor add add cltd push rcll sub lds mov and loop int3 repz clc ja fistpll lods popf jmp or sub mov loopne jge dec push daa pop rcll repz enter pop fmul aaa fcom mul cmp cli insl pushf jo insb xor adc jo jp pusha je adc shll or push xor mov mov sbb and addl add push call int3 cmpsb arpl and ds and in mov adc faddp mov cmp mov pop add jge mov cmp mov repz mov sub push pop add xchg popa cmp push fs aad add je mov fisttpll leave push enter popa addl test out mov cs adc inc xor aad andl idivl add test pop insb add adc jmp daa aad cld push sahf or mov mov movsl and sub dec cmp push mov xor cmpsb mov mov mov pop pop push pop or rol lret dec push gs dec enter sbb test pop insl in push fmull ljmp dec into (bad) ret push push inc and pusha add fwait enter stos cmp es pop int add test add adc out inc adc pop adc jb stos scas and insb arpl inc add sbb (bad) jp jecxz push outsl lods (bad) adc insb sbb mov insb jmp cmp add adc addr16 jge fs pusha dec inc mov icebp iret mov data16 mov stc rorb adc push jb sub lods into add int3 enter insl add jl clc outsb popf lret outsl out nop sbb or addb jle sub fwait xor pop sub or mov lock rcrl aas push clc sbb es sarb outsl push add mov scas call aam inc notl sub push movl in pop push jae xchg add pop mov sbb push movb or mulb lock xchg adc mov sub imul movsb mov or add pop scas or rorb outsl xchg add inc aas call mov mov out xchg sub add add sub sbb adc sub cld adcb adc adc and out add push pop mov mov mov pop cmp or dec push (bad) jmp jae or mov sbb push mov pop popf aad push leave icebp loop mov aaa adc les or in loopne pop or addr16 iret in pop cmp arpl mov (bad) nop pop xchg mov sbb pop in fs clc std xchg or sbb test lahf add pop gs dec mov add adc cmp sbb out mov mov sub test xor jo call xchg inc sbbb jbe mov xchg or movsl gs adc in lods inc jge pushf sbb pop imulb nop pop bound int push cmp or outsl leave hlt add movsb mov aam mov fwait outsb fs imul cs sub sbb and and add adc xor enter scas in mov add aaa xor xor mov mov jno in ret sarb rcr (bad) mov cltd in out addr16 and cld sub and rcrl add pop pop sti and sub add jecxz sub xor (bad) mov decb add push aam mov sbb xor sbb shll and dec sbbb dec jl cmp std inc inc test push xlat fwait negl or outsl xor or xor adc icebp push popa add (bad) ss iret sbb cmc pop xchg in sub xor stc hlt add imul xor xchg pushl add or test mov dec imul test mov and inc ror nop xchg mov adc push inc jecxz in sub mov fiaddl push xor in shll insl xlat push adc pop aaa xor test sbb dec pop push outsb (bad) loopne hlt int3 cmp fild sbbl push jbe and clc add add jnp sub icebp popf dec cmp or cmp insl fnstcw push cmp ret sbbl sub pusha movsb mov sbb add lret sub mul into adc movlps daa add adc lods iret data16 sub sub pusha xor jbe mov sbb into sub out ds jbe pusha popa adc inc add add orb push nop push (bad) pusha (bad) cmp test cmpsb outsl jmp fcomp call or icebp adc sbb add cmp push mov fcoml mov dec and int3 add imul sub mov loope cwtl arpl nop (bad) das mov ret ret and pop lea ds pop xchg sbb xchg mov and xchg int3 fdivrs sub in push mov sbbl push push ret movsb sub daa push lods adc cmp fsubrs sub sub add mov mov repz cmp add xor mov in xor dec sysret jo lock inc add ret cmp pop lds sahf add cmp mov adc add out gs cmpb push push xchg cwtl or aas test mov add xor add pop call xchg repz icebp dec leave or test sbb pushfw leave loop lods shll adc cld mov sahf add xchg cwtl rcrl and lret lahf pop rcr nop push pop mov imul adc call push xchg and cmp clc data16 stos (bad) xor out ret xchg es cmp fdivs inc movsl sbb push xor roll cmpsl je fisttpll in mov mov xchg leave hlt shll and add aad and sub mov cmc sub jl lcall sub xor mov imul aam call adc xor sbbl inc fsubl test test test das mov mov adc jmp fwait iret mov test pop lds add pop dec xor mov mov shlb push and xchg sbb sbb dec popa and sarb sti es push pop adc (bad) mov pop pop js inc int3 inc nop fdivrl mov test adc sub movl mov push mov pop xchg lahf sbbl inc adc sub (bad) call int3 out and add mov or divl call sbb push in sbb les add add sub fwait push add push add push aad jbe aas out add daa (bad) rclb xchg add lods (bad) or in jbe imull lcall xor pop popf loopne mov or xlat repz enter (bad) icebp fstl pusha fcomps add test jnp mov mov jb adc dec mov mov inc xor faddl loopne sub dec cld inc ds pusha pop test cwtl push jo scas int3 pusha rcll movsb scas call lock push (bad) mov cmp fisub add inc pop (bad) push xor jecxz xor mov das insb adc or cs sahf sbb adc cmp nop or das ror test out mov jl insl add icebp loopne pusha push loopne xor adcl rolb div enter dec pop dec adc jne ds ret add dec push sub add pop adcl clc orl add loope (bad) repz jl jmp mov movsl pop and jns push sub rorb stc lods call jns sub cmp add push in rcrb sarl clc daa add and adc mov cmp adc add add fwait inc jge add jge and add mov jl clc cld mov or inc jbe jb fdivs icebp push out pop or clc dec push loopne push add addr16 or pop mov and cld jg mov cmp sub insb jge mov pusha (bad) sti add ret xlat psubd insb ljmp mov push movsb out xor jecxz inc fistl test mov xchg fadds sbb push and pushf ret adc rolb scas test adc add sar lds push jne cs add fmuls mov test into xchg dec ret nop mov push add cmpsl or mov les testl js add dec cmpb lret adc xor movsl push xorb je or mov inc sbb pushf push xor sbbb add push ret mov jmp jae imul mov out aaa std fucomi test pushf outsb sbbl divb xchg and ljmp sub orb jge in (bad) push loope icebp out loopne cltd leave rolb and aam xchg sub nop adc imul and or jmp leave les stc sbb xor repnz fucom or push jl adc jl aam jmp mov cmp jo in mov loopne mov push out dec clc jo sub cwtl mov xchg xchg ret movsl adc mov int3 add and jge push add out push mov push mov pusha and xor sbb and cs loop xor push push and dec and movsl adc repnz pushf insb mov loop adc rorl and or or cmp mov jo ret pop xor jecxz sbb xor pop dec ljmp push push nop inc inc or mov add and es or add jl shrb or mov test dec push dec lret and mov dec sbbb xor rcrb sbb repnz pop xor jo test test dec (bad) adc adc mov adc orl in lcall pop lret adc adc xchg sbb add subl popa sbb pushf ret in enter repz cmpb enter daa sbb inc add mov insb jmp sti mov test pop lods mov call pushf pop xor or jge mov in aam inc fsubl push sub cmp hlt mov fsubrl add clc sbb out ret mov adc sbb test jl sbb jmp push and xor mov insb push mov lds mov jnp mov arpl inc sbb fldcw add call push out inc jl cmp loop pushf pop repz jmp je addb pcmpgtd dec loopne je inc mov inc hlt cmp mov or inc adc mov ljmp sub cmpsl movsb cmp stos xor fdivp enter sbb jl insb add movsl xchg push aaa cld iret adc or push push rorb cmpsl test dec xchg fadds shlb sbb insb xchg cmpsb pop aam lret add cmpsb or out lods orb mov rcl int3 out add hlt bound in jle pop shll mov push mov (bad) xor (bad) sub pop sub aas sbb inc xor and ja mov mov mov outsl icebp (bad) sbb mov cwtl aam shrb adcb sub movsb or ret or push iret mov push jge push nop das pop add je dec lret mov pop ret fisttpl popa mov mov adc adc adc pushf or rcrb dec add jb movsb xlat shr cmp stc into pusha mov dec lock imul jecxz push (bad) rolb es (bad) insb or dec push nop push sbb mov adc mov clc dec mov jge aam (bad) sti (bad) mov mov add xor cwtl mov icebp aam sub pop mov jmp cld pop and push cmp (bad) das clc rol xchg pop xor enter and adc enter int3 pop and daa adc cmp sub es jl js (bad) bound call pop dec push ret sub movsl adc xchg hlt push into andb inc in leave mov out sbb jb xchg inc mov ljmp push shrb out movsb jl or aam (bad) xor dec adc add rclb push mov loop lock add ret mov jb push pop mov dec or mov or add repnz nop and test shll dec adc fadds jne pop or and in pop jns adc cmp mov ja clc adc cwtl insb sbb aas inc loopne pop rcrl pop sbb jne inc test cs fs js sub enter add and test dec xorb repnz mov or jg mov aas loopne xor nop xchg and pushf js jl cli xchg add out jl dec pop shr pop cmpsl jmp cltd mov enter lcall xchg gs inc cmp dec dec js mov in push mull sub push ds mov jbe je notl push outsl xor inc insb mov clc push cmp sub jo add (bad) rorb stc add push in es loopne int shrl test out cmp test add push sbb (bad) cli aad test enter aaa push cltd add addr16 dec (bad) fmuls pop inc adc or adc xchg jl mov ret inc ret jl push rolb aas punpckhbw sub adc mov pusha or loope rcrb dec jmp cmpsb lock daa daa rcll mov and repz inc mov xor loop push sbb mov xor rorl jle test sbb mov data16 je jl movsb and xor rclb and or mov dec sti mov ret nop rcrl adc out mov sbb sub idivl add sti pop jge dec pop mov add add test out mov adc xchg outsb push inc (bad) lock xor sub out stos mov movsl add cltd roll jo pop arpl pop rolb pop mov mov mov sbb shrb jb adc add call or loope cld jmp pop add mov jmp sub ret jae and mov cmpsb call inc inc out jns flds mov popf loopne dec push imul mov test and pop and sub mov rorb cmpsl jno jl call xchg jg pop or adc mov mov inc mov js or sub xor adc clc inc mov leave sbb test imul sbb adc fadds sub cmp (bad) add inc sub mov dec or add pop and mov cmp cmp xchg jmp add adc mov sub adc dec dec fwait sbb out sub icebp xchg rclb dec jne pop repnz add rclb inc es movsb jp adc ret je xor push mov lods (bad) mov add adc or movsb adc push bound or inc ja inc push pop xor pop xchg and rcll dec jns cwtl loopne and mov loopne sbb mov mov call ret inc adc cmp aas add jge adc mov jnp or push cmp repnz and add xchg rclb adc adc loop test icebp add xor mov sbb add inc (bad) es inc leave xchg in push dec fadds push pop dec cmp jbe sub and dec mov pusha sub push es pop inc jmp jl,pn popa push fidivl inc enter rcrl (bad) cwtl dec add pop mov leave mov in (bad) add ss movsl psrlq stc out loopne add stos jmp pop or js cmp sub icebp dec lock adc mov push xchg push (bad) in xlat repz lret movsl lock and add das nop push xor addl cmp mov movsl dec adc test pop cmpsb dec or lcall add mov mov lcall push push pop or negl push pop xchg pop ret cmp xorl mov sub js mov pop jb jmp nop imul xor adc mov aaa jl and arpl rcrl je sbbl xchg call sbb jl and sub (bad) inc jns sub add pop pop dec mov cli push and ret js sti outsl dec ror add fs sbb hlt push or pusha add ds push or sub add push pop incb rclb mov popf xor or addl shlb movl push inc (bad) jg jb pop movsl or int3 daa add and addl cld push stc outsl or mov add movsl cmp bound loope cmp mov dec (bad) adc test (bad) jns add push adc add out or push les mov add push ret icebp mov ja aam cld mov aas movsl cwtl in movsl xor add icebp in imul or jg mov add mov xchg lcall inc sbb movsl dec fsubs fcompl dec enter mov cwtl or dec imul and loopne push adc in inc clc and ret jecxz dec loopne jo mov dec dec add xor xchg enter and mov stos xchg adcb xchg lret dec xchg mov outsb push scas mov sbb (bad) and push pop mov mov adc rcll imul adc clc cltd xchg xchg mov shll lock sub cld jno aam sub cmpsb mov dec (bad) rcrb add xchg push cmp adc push (bad) sbb push inc xchg or (bad) lds stc xlat mov int3 sub dec popa mov bound mov rorl adc pushf aam add repz add sbb (bad) mov push add dec inc das cwtl sub lret pop enter dec add iret inc inc add jge or leave sub inc loopne pop inc rolb jecxz push sbb sbb ljmp and pop dec jns loope xchg push shr out add push cld xchg pop add outsb pop add int movsl das rcrl xchg mov pop aas cwtl xor xor sub adcb or pop sub aam adc xchg cld movzbl mov pop push add scas dec adc xor popa push jno cld jo xchg push jecxz jg pop adc adc sahf pusha dec pop test dec movsl dec pop pop cmp pop adc cs shll and push test jecxz inc leave lods movsl push out pushf dec sub xchg mov es sbb xchg cld add jg in popf addr16 add adcb outsl cmpsl test add mov push cmp dec das cmp pop ret stos add mov dec xlat adc mov push pop push add xor mov push sti imul in hlt add jge fstpt mov mov int3 xlat int3 push bound fsubl mov sub and pop xor scas inc testb (bad) push (bad) mov loope and icebp cld ljmp adc cmpsb sub xor repnz add lcall inc in xor xor cltd cmpsb pop adc (bad) divb movsl dec iret mov mov mov hlt mov mov mov sub movsl fisub sub repnz xchg and push push rolb pop (bad) push add jg pop pop cmp lcall mov gs out cmp test push mov cmpsb or js sub add xchg adcl push loope cmpsb jl push out adc add sahf and movsl xor add outsb ret add jle lahf xor pop dec test mov mov leave jbe popa rorl push push mov push dec fsubl pop mov jnp dec push fiadd sub push mov pop popf cltd inc xchg sub xor pop loope add mov (bad) ja inc mov jecxz xchg scas sbb cmp clc es clc data16 mov subl rcll js add mov jecxz icebp mov and and jo les fsubl pop xor fsubrs push ret push mov mov and mov movsl pop pusha rolb or xorb mov in fldcw jmp cld data16 inc or sbb or push clc testb cltd cmpl cmp adc repz mov bound cs pop or icebp leave mov mov add inc movsl movsb rorb mov jg fs push out sub in inc mov movsb test or adc add xchg dec cwtl and xor clc dec insb inc addr16 std sti cwtl mov jle js xor pop inc mov test test mov bound dec mov and push pusha rcll lret and (bad) mov cmp roll xor add das iret cmp mov arpl rorl call mov mov add pop dec cmp pushf cmovnp xchg (bad) or pinsrw add mov add sub mov ficomp cmc test lods enter push mov lcall rolb dec push mov fisubl add fldenv push sub xlat pop pop push in sub ret or jge mov loop lock (bad) mov adc imul lret add add push jl add fdivrl ss jnp xor sub add loope adc pop cwtl andb mov leave adc inc andb sbb or xlat mov pop je nop pop pop fs cmp inc push std cmp fcomps adc hlt test fild icebp inc (bad) std xchg xchg movsb pop inc push push jno xchg scas lock orb roll repnz ljmp cld lret mov shll add lahf xor inc or pusha test cmp xlat add popf loope xor hlt cmpl fs pop sub sbb sti (bad) push comiss pop pop xor andb ss mov loope lret into inc fdiv jle push xchg or cmpsl icebp adc pop cmp lods mov and mov je adcl sub mov daa and arpl es fs or inc int sbb out jne mov jge inc repz movsl dec in push push int3 fmuls insb jno adc dec pop inc es (bad) xor jo out sbb inc pop outsb and push sub mov pop pop lcall jnp pop add in xor hlt mov inc mov enter movsl sub (bad) lret push add and sub adc mov adc sub pusha add repnz les pop add leave cmp pusha out test loop in fdivp cwtl cmp xchg sbb mov repnz shlb testb jl popa or imul punpcklbw mov repnz mov call popa ret adc movsb add xor xorb xchg or cwtl or mov int3 add dec push push push cmp add mov mov or push sub cmp adc addb push lret pop in or shl add jb sub mov or fidivr ljmp sbb popl mov loopne lea and jb mov fdiv and pop cmp imul and sub imul xchg clc js xor push push pop mov int3 imul and jge rorl out in lock push cmp adc mov xor add mov jp lock (bad) adc sahf adc jmp test sub adc orb add repnz loopne xchg add cmpb xchg push pusha pop mov cs add dec andb (bad) icebp repnz mov lods (bad) xchg xchg stc pushf add imul mov xchg fdivrs mov sub pusha fcoms std adc sub and ja or fs pop subb ljmp dec xor repz and adc jecxz xchg or add clc xor ror imul inc sahf mov sbb jns adc rcrl fstpt sub loopne sbb fs mov and adc cmpsl jo fnstsw data16 rclb pop sub loope inc shrl aam push daa imul sti lock inc lock push and into (bad) pandn (bad) (bad) add dec add rorl mov adc lods xor inc or or pop shll cmp adc fnstcw mov pusha inc je jae mov sub sub les jmp mov add loope (bad) fldl add dec es adc lock mov cmpb decb sbb (bad) sub pop xor pop or cmc inc inc dec cmp pop out addb imul pusha or adc jno js pop out into xchg pop ja mov mov sbb mov adc rol fs cmpsl inc je push lret or or in dec cmp mov xor jo adc pusha out sbb or (bad) ljmp rcl rcl sarb stos or jno mov loopne or orl (bad) adc sub leave mov (bad) add add sbb adc or xlat adc sarl out shrb mov pop sbb xor pop repnz or (bad) je aam jno add mov push jns xor loop lods test dec mov adc shll jo pop jmp adc pop insb fs cmpsl fdivr mov (bad) call adc push pop adc pop pushf jg mov mov jmp jns cli xor push cli xor push lea fs cltd sbb sbb push mov (bad) mov pop mov push jmp cwtl mov xchg dec dec cmp jns add dec (bad) cmpb and xchg and mov testb pop dec test adc repz dec mov add pushf les bound cmpsb mov cmp jl cmpsl inc sarl and mov (bad) notb xor test adc adc stc mov xchg xorl mov jno mov push and and or ret mov sbb mov bound lock fist mov call ds (bad) or fs pop (bad) sub push xor jp lcall rcll clc sub sub dec inc push mov inc pop pop nop sbb in lock pop popf mov icebp mov mov (bad) cmpl pushf hlt xchg ficomp mov fmuls sub test call add and jno movsl cltd xor sub fnstenv roll ja and or jecxz push test movsl xchg ljmp popf adc xor add mov add jnp loope and xchg adc jl or (bad) mov inc sbb shrl outsb dec cld bound adc sub xchg dec pop aas pop adc int mov stos add add cltd push stc call jge loopne sbb les push jle jns outsb xor aaa idivl and in ret pop cmc jecxz push adc cmp in cmp mov aas movsl pop ja in in sub push cmp push pop adc dec lea cmpsb adcb pop xor es jecxz xor cmp daa sub pop add pop mov inc push cmp aam dec push ljmp jne dec dec clc movsl xchg and ljmp pop mov dec pop xchg loopne idivb inc daa push mov andb iret inc rolb adc data16 negb or or push push mov repz add sub xor (bad) ds sub pop mov mov dec (bad) ja add jmp in push xor scas gs add cmp ret (bad) cld add ret dec dec push fcoml mov push pop jge mov push cmp fldcw push mov leave in cmc add in inc aaa fs push lret das stc jmp fstps jns and ret ret cmp sub sub mov mov xor cmp pop fcomps pop cmp xchg hlt xor adc jge movsl dec jp loopne adc pop lret add and insl cmp or xlat sub inc sarb (bad) xor jb cmpb movsb movsl pusha inc fsub cmp lods add dec hlt dec cmpsb push fsubr mov xchg sub cmp push xchg test mov in mov adc pusha pop lock cmpsl adc in push cmp shrb dec sti xchg jl (bad) jp aam adc cmpb sub jbe,pt xor mov cs cwtl adc clc ss pop pop inc add fmull xor orl outsl insb clc stos (bad) mov dec jle int3 sub xchg ffreep sub inc add mov aam and clc ds inc and or mov int3 sti inc xchg js or leave movsl fcmove mov add mov xchg pop inc jo in inc sbbl orb fcomps adc lock push mov out roll mov jg dec and nop in add sbb mov repnz lret jecxz,pn push mov es push sbb pusha test lret push add sub or loopne movsl mov cmpsb cwtl or mov and cld ret bound inc pushf mov push mov mov inc (bad) clc aad dec lods test dec inc add mov inc pop push cmpsl xchg adc pop sub jg sub adc sbb les fadds pop push pop aaa jbe rol rcrb into les mov sub lret fadds fbld jbe add rol jmp nop cwtl icebp es pop mov dec cwtl or clc push out xchg add dec xor stos adc add stos sub jmp or xchg lods arpl pop add adc cltd mov add daa adc jmp cs ror fsubr pop nop int3 daa jecxz in or or mov pusha movsl xchg out sub and mov stos jmp aaa xchg cwtl test sub fdivl (bad) leave sub cld inc paddsw out lret pop xor test jecxz mov cmp adc loopne sub push push divl push mov mov insb cmpl out adc push lds add fs lcall ds aam mov mov ficoml pop push movsl jp dec dec push jo pop push sub cld insl fbld inc mov pop sahf cmpb or imul aam mov daa mov and andl xchg mov hlt stc sub (bad) mov dec xor bound fldcw (bad) lock jmp inc adc xor sub rol cwtl mov push lret arpl mov xor cld dec ljmp inc mov add dec or add lcall ss push push pcmpgtw xchg in push push or pop movsl cmp dec sub scas sub sub gs insb pop and inc popa cltd loopne mov aam jecxz mov fwait (bad) leave ss inc add and add cli pop dec insl out mov push mov repnz sub inc dec jmp mov in sub cmp sub pop lret push mov xchg jecxz lcall or sub add mov cli lds lock or iret out add push pusha jl ds pmulhw mov mov jb cmp push mov push xchg or mov fs out in test add and inc sti aas inc add mov push call or and mov and cltd and add jno cs sbbb pushf add je outsb inc adc out ret ror cmp daa lock mov mov lea lahf hlt add clc mov js add push aaa jg and add imul popf sub sbbl das or imul int repnz sub stc aas lock movsb or add jg pop adcl push and pop mov jo (bad) cmp mov loope insb addb push or mov xchg test out (bad) jbe jle je test lea push cmpsl cld inc push and xlat mov add jo mov dec andb cmp add mov sbb inc mov pop int3 add cli lret test jo dec and add lock insb or int3 testl mov xor xchg test std pop addr16 pop out jg dec daa xor stos mov xchg lods jno movsb and add and movsl inc push subb ja lcall add add fwait mov cs xor sbb in dec addl mov dec or jp cmp cmp repz adc out (bad) mov aaa cli dec sub lret mov push jo popa jns rol stc sar fildl xchg xchg cmpsb test mov fnop jb cmc (bad) jae je xor loopne ss add pop in (bad) mull push cmp repz ret lock repnz cwtl std mov cltd shrb scas push adc rolb cwtl stos sub mov or subl sbb jne in xor imul push and push add xorb iret cmp add pop cld data16 lcall pop sbb mov fs imul xorl dec addr16 pushf std mov cmp je imul jl jo mov jecxz push sub pop pop subb mov loopne push xchg jo add repnz lods cmc sub xchg orb mov push jge and mov xor inc push jge aam push add lret insb mov loop dec not repz pusha cmp lcall mov hlt aaa adc adc add xchg shr and pop clc mov mov and or aam incl inc cltd (bad) adc and fs pusha test pop les adc xchg xor (bad) movsb loope mov sub loop jle dec lret cmp add add sbb mov adcb xchg stos and inc aaa jg sarl pop out inc add or dec aaa inc pushf pusha imul add out sti (bad) les and (bad) dec mov pop clc insl xor and or sahf outsl out roll cmp pop pusha xor rcrl ds or ss or (bad) xchg xorb stc xor je cmp mov les mov dec cmp outsl ret push addr16 push nop inc nop int3 push (bad) mov inc out pusha sub mov lock add imul repnz dec mov (bad) cmpsl in js dec aad pop sbbl or sub je test insb inc xchg cmp mov add pop add sbb loopne fs imul add mov dec sahf inc cltd or movsb nop add jbe cwtl pusha jecxz and add in xor sbb pop lahf cmpb pop pop and dec hlt pop inc pusha push and and outsl xchg pop loopne cs and sbb cld sub sub (bad) jbe icebp je insb add lock adc dec jno je jne rorb or imul mov add scas and xor dec pop icebp mov es aam movsb fcompl inc pop xchg test pop jns lret ss int hlt inc adc jb push or cmovno cmp adc add push mov xor std sar mov cltd push or pop divl pop jl jbe mov (bad) incl xlat ret add push outsb adc in or outsl shrb testl cmp in mov fmuls movsl mov and jo arpl sahf mov roll (bad) test dec aaa push cwtl insb xor mov inc imul ds jo les push xchg xchg or mov adc mov mov jbe insl add aam mov pusha add movb adc or add (bad) fsubs je dec add movsb jne loope outsl mov repnz jns pushf inc mov leave mov cmpl lds xchg inc cmpsl aad test ss inc pop sub push gs or in ret sbb fdiv cmpsb xorl add jne add jg sarb jmp jp jl fs cwtl pusha inc outsb out and pushf add xchg into stos (bad) cmp pop imul outsb jne loopne jo movb or push into jecxz mov and rolb insl neg adc movsl adc (bad) sbb cwtl stos adc jp rolb sbbl xchg (bad) fwait enter test addr16 leave notl xchg popf pop cmp movsl mov pusha xlat jns add jmp inc cwtl cmp (bad) test push pop cmp adc (bad) cmc mov or lds inc testb (bad) scas cmp das mov push dec push add xor xchg sbb mov shlb scas sbb sbb repz pushf xchg inc pushf outsb loopne add pop imul xor aas movsb xchg dec adc fs xorl aam cmpsb and cmp cmp inc push pop add arpl mov pushf push xchg add js gs pop arpl pop or pop pop mov mov lahf pop mov xchg push push add jecxz pop iret mov xchg jl pop mov pop adc shl bound imul dec jge rolb adc pop imul loope (bad) adc and add dec in imul loopne cli div sub je cmp mov ja mov add jge fs call mov and es mov idivb xlat orl and (bad) in push xchg pusha jmp dec pop jo je sbb add outsl lods mov jne and sub inc push fsubrs cmp imul ret mov xor mov sbb fs out scas mov (bad) or mov pop lds add push es fdivrs test and mov jmp hlt inc add cmp mov insb sbbb mov bnd es mov js test and add into mov add cmpsb ljmp add sub aam scas or inc loopne (bad) jge add pop add pushf cs sub shll sbb mov test xchg addr16 add add mov dec mov pop add mov add sbb pop xor pusha xor lret jno iret fmull xlat mov adc or inc pop mov jo inc mov xor sub mov push adc lods add nop out addl mov cmpsb dec add push dec push cmp jbe add push jp subl je out stos cmp dec xchg ja scas fdivrs sahf sub add int3 jg dec cwtl loope xchg lock aas ljmp cld pop add lret mov cmp pcmpgtw add push add mov jge mov xor fimull test inc cmp aas add pusha sbb add and rolb lret cmpsb cmp leave stos add sbb mov movsb insb add insb je xor jne fiadd neg sbb xor rcl push cmp sahf pop mov outsl aam hlt enter test rcl cmp mov dec mov xor cld dec xchg push fistl sbb xchg add cli or xor (bad) mov inc sub xor xorl lret mov ffree mov call outsl (bad) mov or or mov xchg xor clc dec adc fs ror add adc cmp pusha rcll jecxz hlt xchg mov mov push test mov push mov and mov inc xchg notb js lret push js inc and or mov call ret ljmp mov stos add test lret push int mov xor sbb add push sbb test int3 push add inc mov mov mov push mov adc insl ficom mov sbb repnz pushf clc movsb push jno imul xchg add test mov mov adc push mov cltd sbb ljmp sbb (bad) push aam notl imul movsb outsb add inc test push mov cli lret push push loopne add push or adc push pop and addb in adc mov add rcrb add adc xor cs jle or pushf js mov and int3 xor inc mov mov sub ficom add test pop xor (bad) shl dec insb add push inc mov push push cltd mov push sub (bad) test xchg mov add ja (bad) sbb movb add ret sub dec mov adc xchg test dec lea adcb xchg sbb mov xchg push or les sahf cmovne insl push mov mov gs cmp pop cmp data16 imul fcmovne jno sub jb pop xor sub jmp add pop lret aam fs les mov nop xchg xchg imul pusha cmp add jb or mov adc jbe jmp mov sub push fnstcw lea pop adc mov rcr addl adc mov mov insb inc fs leave xchg and clc fs lret or movsb cltd mov push aad add fadds test cmp orb hlt pushf lret pop enter ljmp int mov jecxz xchg push adc insl (bad) mov aas aam cmp lods cs mov movsb js cmp pusha cmp inc sub int3 jb lods xor jae outsl lods sbb fildl adc mov test pop ss xchg xchg xorb mov xor hlt and jb ljmp setge insb adc les pushf push cmovbe mov xchg adc stos nop xchg pusha jns pop mov push nop dec test mov or fisubr bndstx xor mov nop dec pushf mov pushf jnp xor dec mov add lret dec ds xchg outsb pushf imul adc and stc das test loopne jae or add xchg or (bad) lods test stos std add pop or pusha test aam jmp adc cwtl xor shrl rclb mov sti add pushf jbe in cwtl test xor and mov mov dec lods enter add (bad) out xchg bound xor mov push cmp mov or sbb cwtl rolb movsl pop loopne push ret nop lock insb xchg xchg mov lcall adc scas add mov nop cs add xor fild mov adc pushf inc addb cltd mov lods xor cmp adc nopl ss push dec dec test jns testl xchg sub repz pushf add pusha push pop lea jecxz add jb into leave or push jmp fldcw sbb cmpsb mov push inc xchg jno sub scas insb outsb ret (bad) out or push loope sub add addr16 outsl xchg sub adc add add divl into jo test or adc pop stos cmpsb mov inc in adc test add out mov outsb push push cmp insl mov xchg cmpsl dec leave jl pushf popa mov or pusha loope,pn in add xor imul sbbl je inc sub (bad) lock add test and xor out push int3 mov inc mov add jno mov imul aam xor dec jg orb repnz and push dec add sub clc lret inc flds or mov add aas andl (bad) dec sarb sbb push adc dec lcall jb inc out test pushf jecxz hlt cmpsl inc pop fbstp or cmc movsb add rcrl lcall xor and push inc push mov jb xor add movsl cmc push jg mov jae mov popa ljmp sub cmp fcompl cmp xor (bad) stc inc cwtl insl nop jo jns sahf and fcompl loopne loopne cwtl add jnp sub jne ret and aam test and and add add mov adc add mov and xchg mov cmpsl sbb pop adc fimul cmpsl fcoms sbb mov pop lods pop or in shrl fucom out (bad) xchg mov pop lret insb xlat pop pop mov add cwtl addb (bad) in sbb cs testb scas aam cltd pushf clc outsl in movsl lds cmpsl dec mov test pusha add int3 sbb push pusha inc pushf out push add enter cld mov call shlb sbb and rcrb xor std fsubp js fs popa cmp cmpsl cmp add int xchg xor pop es lcall add mov inc mov and pop nop add push ss and jns sti test xorl rclb rcr xlat push dec nop dec mov or cmp repz sahf in inc sbb push mov inc or xchg shrd andl js movsb cld data16 cmp fcmovb adc (bad) js add fs push xor clc cmp cmc or pushf and inc add mov or xchg jne addl mov dec push imull pop adc ljmp push dec out hlt jle popf mov lock jecxz lcall popl mov inc (bad) mov dec pop mov mov or fidivr cmc hlt adc ds subl sbb mov out dec mov int hlt sti arpl lahf movsb mov add stos push mov sbb sub pop icebp cmp pusha fneni(8087 mov outsb push add inc sbb js xchg xchg inc sbbb mov pop mov inc push mov jecxz push xor test cmp mov (bad) insb or sbb in sub std and fs adcb add mov loope mov pop adc mov gs dec add xlat mov icebp mov dec add shrl or das mov sbb (bad) mov push jmp or ja mov stos xor mov mov icebp cmp add mov cs pop add mov mov pushf mov lea shr pop ja cmp rclb and dec xor inc test scas cmp sub push sub and mov insb jle add cltd or and or insb subl pop flds enter dec wbinvd xorb jne adc ljmp sub xorl stos fwait xchg adc cvtps2pi jo or add lret cmp mov jmp add mov pop cltd cwtl icebp mov fsubl adcb sbbb mov fs stc subps mov inc xchg bound mov cmp pusha xchg mov dec mov xor mov jmp mul xor add dec xchg mov cmpsb inc add sbb pop jnp inc jp loope lret adcb into adc xor and xor lock and sbb lret leave pop jmp jle cmpb fdivl je xor cltd dec rolb int add mov xchg adc jnp insb add dec mov stos mov leave add mov cmpl mov push mov loopne clc out mov aaa adc adc push or cmp and outsl dec cmpsl mov cmp insl or adc or incl sub loopne cmp (bad) mov jge inc packsswb lock sbb popa push and mov sarb adc iret mov out cmp pop imul xchg sahf cmp fildll movsb jecxz adc clc (bad) shufps addl dec xchg lock xor mov jae or pop jmp sub adc outsl cmp mov arpl and or in fwait (bad) add scas mov outsl add push xchg movsb xor xchg int testb xlat mov sub xchg incl pop dec nop adc or enter arpl pop testb and cmp jne adc mov adc jle sub mov cli aam sbbb mov mov xchg push dec pop push fdivrl pop adc add add dec or push dec mov pushf loopne orb cltd aad jno add (bad) aaa jl mov mov movsb add (bad) fistp cmpsl lock fcomi stos and lods mov pop faddl cmp jl cmp mov fcomps mov mov add repnz xchg subb int add cmpsb jmp adc movsl adc jge pop imul js jecxz mov cld insl je sub mov mov add sub int mov add xchg adc xor mov test cwtl pop mov movsb (bad) repz jmp inc inc xchg nopl cmp add sub adc lea ret mov inc mov inc cmp jmp imul sub test stos fidiv mov roll test mov jle mov jns xchg (bad) jne mov mov mov or xchg mov add addr16 ljmp add dec hlt xchg ret mov sbb mov jno rcll lock add aas lcall int mov add out inc sarl int or lods loopne icebp add insl or fadd clc pushf add idivb std wrmsr add jp push push adc dec xchg adc or xor xchg mov push testl inc js pop aam mov orb sbb into mov pop orl faddl enter add inc jb movsl sbb mov or mov and mov rolb subl clc mov ret lods xchg loopne xchg out loopne or jo lea cs mov in mov or add mov inc nop pushf das int3 movsb int3 xor dec cmp pop jo and (bad) out pop test xchg call dec sbb cmp cmp lods push xorb adc add ds cld loope,pn out add mov sbb pop mov mov or andb movsb jge add rcr mov xchg cltd rcrb xchg xchg scas mov in adc fwait cld test cmc pop adc lock fiaddl (bad) push and mov fcompl pusha add call in mov adc add cmp push outsl xor sti jae cltd je add lret test mov inc mov xchg dec ret sbb push sub movsb sbb mov dec cmc ds (bad) es insl push mov sbb jmp js mov insb jb inc andl incl test insb mov xchg rolb inc and pop sub repz movsb rcll jae mov or js cmp mov or jge scas test rorl xchg adc adc sbb (bad) adc or rcrb pop ds or inc movsb mov mov (bad) xor nop cwtl lcall mov xchg mov add (bad) test cmovg cmp mov dec jmp je mov mov xchg and adc cmp jo or mov lcall xor and mov adc adc add mov lahf xor insl dec in rorb mov xchg out decb sahf jp jmp sub mov or test jne cwtl sub cld out (bad) mov xchg fldl add xchg outsb je js push insb and test xor sub bound addr16 stos mov pushf mov mov cwtl mov jbe mov insb and mul pop jp movsb xor or cmp sub xchg add aas scas cmpsb mov nop imul mov (bad) fstl jle sbb test xchg mov sti mov inc mov push loopne ja jo xor mov jns aad cmp movhps (bad) lahf push add xor pop sti mov cmp xor outsl push int3 frstor sub nop mov shll scas sub cmp xor cwtl cld pop cbtw cmp icebp adc movsb fdivr cmp sub cwtl rclb add xchg (bad) or sbb mov test and mov xchg leave and sahf test adc cld inc mov inc push and push mov xchg faddl dec fisttp sbb xchg xor test push call push mov or cld xor adc inc and clc enter je pop adc cltd clc (bad) loope mov (bad) jb mov mov or xchg faddl push and (bad) add lods xor sbb pop add dec xchg int adc or push clc std pushf repnz bound jo movsl ret stos addb mov and sub js clc or iret or dec add jecxz xchg mov fcoml mov adc adc mov xchg movsb lock mov xchg dec daa cmpsb or adc push adc je clc fsubrp pop or sbb inc mov jmp adc mov pop or rcrl or adc mov add (bad) jmp in and push add loop mull sbb xchg pop mov loope adc lahf xchg cmp aam rclb in leave sub cltd pushf scas sub or lret adc and add mov (bad) cwtl ret xor mov outsl adc repz mov andl push sbb add mov test ret push mov orl mov xchg and lods cmp repnz out mov movsb xor mov nop push mov jle dec cmpsl ja sbb inc mov jge push mov jle fwait cmpb mov cmpl js mov xor jnp mov adc xorb (bad) mov nop jne and or jp test mov and add inc fmull lcall cmp test push fildl adc rolb scas adc imul dec pusha pop ds stos xchg sbb xchg call adc or in (bad) leave idivl rorl inc xchg inc xor sarb add add mov test mov insb and sub push imul and cmp adc and inc add aad lods imul int sbb adc js xchg popf mov scas add and mov jnp xchg pushf sbb in (bad) js mov adc xor adc sub les ret adc pop fsubrs or and and adc div sub pop or add (bad) xor lods add stc add fstpt imul aaa stc iret add sub xor rorb cmp sarl jnp pushf cwtl outsb loope sub test mov xor outsb sbb mov bound (bad) imul addb mov in cmp lcall push outsl dec xor pop adc mov dec sahf inc mov (bad) movsb inc push scas pop mov ss nop mov les test repnz pop push inc sub lret sub bound loop adc mov cmpsl test adc in mov xchg or or and enter movsb pop xchg jmp mov sub mov dec aam jl ret or (bad) testl mov decl pop and je xchg xor jl clc (bad) mov add sbb nop movsb or dec jo xchg add enter into (bad) pop stc add add push adc ret or and or inc call xor pusha inc (bad) jle cli pop add mov and fisub add sub jnp clc pop insl pop adc add out or add fistl xchg fsubr push add adc mov xor movsl cmp data16 or inc and jns or jnp shld pop cli mov jbe xor sbb xor test insl xlat adc inc and sub sub mov mov jmp xchg enter addb lock adc aad mov sub insb add pop cltd push sbb mov pop cmpsb subb call testl out pop rclb (bad) fimull mov mov sbb je mov xchg jno lea (bad) data16 insl ljmp movsb loope sahf cmc jne mov enter test sbb cmpsb mov shl lods test xor adc testl mov lea mov lods sbb inc cmp sub jne mov sbb adc jge lea push sbb sbb cmp and (bad) inc xor mulb stos jle mov pop or (bad) movsb push mov xor fildll adc inc sbb mov js nop test jae test mov adc inc fcmovnb lock repnz push (bad) add shrb jp cmp dec jns and bound pop pop push add sub sub and inc ja sub push stos adc sbb pop push push iret test inc je insb rclb repnz jno adc push data16 dec jp subl pop push or xchg (bad) pusha adc inc xor sub jl add pop pop and cltd inc fimull jns pop push movsl add outsb insb es mov ret inc ja pop mov pop jbe push inc jne adc imul inc xchg dec push scas rcll and adc mov pusha or pop adc jns bound inc adc jge pop enter cs rcrl xor jg (bad) mov dec imul pop insl movsl cwtl dec add push movsl clc pop sub mov dec mov sub or pop sbb pusha xchg or mov jb lock sbb inc popf pop adc call repz adc jl inc push imul ljmp les and mov pushf in dec and mov cwtl jne and xchg dec sub pop and mov or inc les lahf xor enter cs jbe pop push imul imul call inc ja pop inc cmp orb adc jne add adc sub int3 mov faddl or mov jmp add lock loopne pop xchg jno gs je and cmpsl sbb nop enter adc sub out add aaa ds push or pop add jae das add cmp push pop pop xlat cltd add and imul and pusha sub or imul cmp add pusha sub popa push inc arpl aas push mov out loopne cmp cmp sub and mov pop pop pop xchg mov adc xor xchg adc mov sub or sub arpl enter mov jo adc pop popa and adc cmp imul loopne or dec inc ret push sub xchg pop xchg xor inc loopne adc dec mov push imul or inc pop lahf flds add mov call add bound and push and popa inc enter xor cltd and je cmp cld jns pusha fwait xor loope pop xchg sub mov inc dec or pop jae frstor cld dec jbe pop es or dec test out sub les orb pop and inc or mov and mov mov inc rcrb cmp data16 ja and (bad) loope addr16 test and leave mov or sub fs pop dec lock arpl or push or dec jno and adc pop adc inc or outsl je test cmp and enter sub jl out call insb jecxz inc mov pop jbe inc adc xor mov add xor repz mov push inc sub xor es or ss pop stos and push add xor sbb int3 (bad) add pop gs lret jne or dec ret lds ss js mov or scas lcall jne mov (bad) adc call push (bad) mov test xor arpl sbb cwtl das pusha call adcl test stos add js fistpl mov cmp adc jl or jne out es test aaa mov pushf dec inc add inc js shrb cs cwtl popl mov dec push add or jns sub dec inc push loopne in cs sub sbb daa ss cmp js add jne lods bound xchg test mov mov dec and out js jge into xorl pop aad call movsb ret nop mov (bad) pusha adc aam jae sub movsb push ss ljmp add or inc inc lods pop push dec add xchg inc mov jo ficoml dec inc iret clc aam loope (bad) cmp add sub stc lahf (bad) bound test andl ret and jl add add and sbb pop jbe or fnstenv sub call jecxz and popa inc mov movsb cwtl dec dec adc pop loopne sbb add iret test jge push push mov push adc xor jns dec (bad) mov mov dec sub and lock cld test (bad) enter lds nop mov in cmp or sbb dec nop push jae cmp sub in mov stc add int xchg pop or clc sbb push add jae xchg pop dec outsb push fimull cmpsl out add fadds jns inc add sub push add inc stc scas add daa repz lds loopne call dec inc pusha xchg jne and mov pop add mov aad jns stos mov scas and cmp sahf ds xor xchg ret xchg cmpsl sbb push lret enter inc push inc add loope bound test and jno orb push inc jge les mov xchg call test dec (bad) xor add sub scas stos or lods mov push or enter cld mov mov ja add int3 repz pop jns jb jp add movl add add sbb jns add fsubrp dec les mov xorl add fsubs dec add xchg push mov cmp add (bad) or loope xorl rorb add out cmp mov inc adc les xor adc xchg sbb mov xor jnp lods xor in push cltd or sbb and dec ljmp push xor lock sub xchg cmp pop and mov cmp xor sbb in or loopne pop push mov jbe xor inc mov add mov cwtl sti adc lods dec int3 cwtl clc add orb push mov jno lds jo and movsb fcoml sub data16 stos dec leave add std xor mov movsl add mov lcall pop add rolb mov (bad) inc clc xchg push je in lds rorl jp shl in rclb rolb cmp loope push loopne mov cmc or pop mov (bad) in ret or pop jle dec es mov es lods (bad) push push mov out les lods and mov js mov mov lods loope jno and into dec and add in add lds pushf sub jb lods push add fdivrl inc fs pop lods jo nop (bad) fsubs sar (bad) push mov sub mov lcall push stos cmp push in sub jnp xor add sti or std lret dec shl push xchg dec sub jge and lods inc and add mov xchg imul aam mov pop jo xlat cmp sub add aam adc adc xchg dec and in dec test lcall ret xchg lock inc scas add mov or mov scas hlt pop inc push sub (bad) setb push or add pop movsb mov lds jns and outsb iret pop add inc jle mov add clc repnz hlt scas xor decb pop add mov sbb xchg loope mov pop mov je sub addl aam repz pop les leave push es movb pop jmp dec mov mov loopne out adcb pop jnp dec add pop and sub or loopne add xchg push fisttpll shlb push mov and orb lcall gs sbb icebp dec fs lds xchg ret and add outsb rcrb fwait sub mov arpl popa dec xchg jae xor and mov (bad) sub push and or addb les lcall push fdivrl mov mov pop jg lret (bad) rorl enter add push loope insb or dec in scas ltr jg lods jg nop in adc enter cmp push add push push mov inc sub pop ljmp movsb clc lds mov test jns shlb or or inc loopne daa or arpl or sub aaa add mov rol push add xchg sub add adc mov sbb inc fldl (bad) loopne aam js inc and add inc fmul push cmp jmp dec and mov add sbb add sub loope notl xor loope das push push enter loope bound cmp pusha mov cmp inc popa pop or bound imul inc test out mov xor leave sbb ret js mov loopne je cwtl mov loope adc cmp rclb pusha mov les xorb or js stc push adc pop mov and insl mov sub cltd jecxz pop jno mov mov add sarl adc cmp imul inc fwait inc js popf (bad) je add add add sub or jbe lods cmp les jno cmp pop sub pop inc inc js pop fwait push adc test dec jo mov xchg dec jo or stc aam sub (bad) pusha (bad) xchg lahf and xor (bad) aas xlat arpl les sti push dec loopne loope ret push sub mov dec adc fnop add gs add les and xchg jl out addr16 sub jne add data16 shl pop sbb loope jno xchg sub and lcall mov dec add lea and dec and pop roll push push loopne repz loope lods mov push mov inc stc sarl std or loopne sbb out cmp mov sub xchg dec pop xor xchg xchg mov sbb rclw or inc jbe sbb jge int3 loopne xor dec ret addb inc jno sbb cmpsb insb nop cs cmp bound sub scas adcb or pop jo sub adc test scas adc mov jge pop loope,pn loopne inc push insb inc mov pop loopne push clc out loop cmp pop push (bad) jecxz ljmp or inc lock push scas aas xor das jo and inc fsubl stos inc cwtl jle sub jno xchg mov std add jbe push es jge dec aaa jo push (bad) fild push out or enter scas data16 push loopne xchg sbb (bad) adc lcall orl sahf pop xchg adc sub (bad) pusha jg add push mov lods adc sbb repz ljmp lods add fisttp enter pop adc out scas (bad) dec notl adc in or sbb (bad) xor jl test adc cmp and rcll nop les fild aas fidiv or decb jae jno jne xchg lea sub mov and xchg jno and jg cmp push jns divl inc sbb andb dec (bad) cmp pop nop mov aaa les adc fwait add scas stc andl push lcall cli sub andb or push mov mov test insl mov dec mov mov (bad) inc bsr int3 push popa enter inc lods cmp xchg add lds cmp sub insb (bad) jo xchg nop out mov or pop mov xchg add cmp sub add jmp pop or lds adc jo sub nop dec jae adc cmc aam push mov ljmp loopne push daa xor nop push dec jns and or clc (bad) das loope adcb lret add xchg add xor inc lea xchg cld aaa jnp mov sbb outsl popa mov cmp xchg and sub mov lock cmp mov pushf adc xchg (bad) setp clc nop jg jo lds or push ret jo jno scas andl repz lret mov cmpsb pop push dec jle inc and int3 pop cwtl mov imull pop rcrl (bad) test push xchg and or xchg (bad) loopne dec push jle dec and adc or mov test mov lea hlt push and push les dec gs inc and lods repz movsb js bound lds xor lret jl xchg or jns outsl xchg sub sub xor sahf or and add lahf jbe adc addl inc xor dec dec pop dec scas and or push loopne inc adc or push inc insl adc xchg push jns xchg xchg xchg jo rolb pusha jae int3 xchg stos and and das and push jno test or hlt les dec add xchg lock adc xchg sub pop adc (bad) repnz aad mov leave popa or jg cmp add hlt xor inc mov and js jne test lds xor loopne dec in roll or int3 and add dec les les mov insb ror dec dec pop cmp or mov (bad) dec add xchg jecxz push xchg push cld adc lret sbb push inc cmpxchg mov loope rol dec lret shlb cmp loope lahf add push test dec xor es test lock mov pmaxsw jl lock mov push push daa in loope jo fs inc jns hlt push adc dec int3 je add or or iret dec pop mov shrb add pop or das loop adc sbb cmp test cmpsl or mov push jg add loopne cli add arpl faddl sbb inc jle inc in (bad) aaa push or mov sti pop pusha nop pop dec inc mov xor int mov xchg sub add cwtl add push mov pushf adc mov mov cmp mov xchg adc cwtl insb dec and sub or dec add cmp pushf add cs dec xchg mov dec test and or pop jnp je mov adc dec or or mov lods or repz sub shl push and arpl and xchg je adc sbb and cld loop xchg mov cmp je test add pop rclb add popa scas add jmp je xor loop (bad) imul sbb in loopne xlat jno push es cmp ds dec js loope sub or movb test jb mov push push cmpb add cmp add dec test pop outsb dec or repz lock lds mov add push lcall pusha jl cmp ret jp add cmp call add push add mov dec in sub or push inc jne movsb (bad) mov loopne movsl imul movl mov testl int3 sbb pop adc jnp orb push mov inc xchg nop int3 lock pop aaa and mov or and (bad) inc inc imul sub push hlt shrb add push mov jge push lods and add scas inc add je ss jbe adc dec fcmovb fs jmp adc mov lahf sbb jb mov test andl or and pop push push lds stc add or adc or pop loope push insl orb pop xor push and mov xchg dec sbbb inc and push add fs in fdivs xor xor sub mov aam lods pop test push jo movsb add xor mov push jge mov (bad) xor (bad) cmc add dec jne sbb xchg js aaa or lds (bad) lods mov lock arpl aaa mov mov jns inc subb stc cwtl mov inc sub pop mov ds out add jge insb mov cmpsl les pop (bad) in lods or add cwtl mov push mov js pop je mov add push mov dec xor cmp add mov out push pop clc xchg sub xor mov out cmp add mov sub nop mov cmpsl xchg mov pushf repz pop sar pop jns je mov (bad) sahf add neg add fbld shrl fildl or sub and clc push daa sbbl nop (bad) hlt xchg je mov loope mov (bad) imul pusha push mov dec sbb pop in outsb js xor ficom push lds adc and push sub fist mov add arpl mov add sarl jg lret (bad) push pop rorb xor enter loope test push jo pusha lret or dec lds bsf adc mov loopne add adc add push adc into push sarb lods push cli push loopne pop js xchg scas mov ljmp jge pop pop in adc out jbe dec or mov loopne imul loope inc ss inc jecxz add pop mov in push xchg mov xchg rorb lret sub fidiv (bad) pop and lret cli notb push ret movsb dec xor outsl fidivr xchg inc prefetch adc (bad) pusha loopne dec adc lods mov out in hlt cmp pop cmp rorb and pop mov imul add loopne incl lods jmp dec push clc rorb add jmp into mov jns inc in icebp arpl adc push loopne sar jbe add loope or mov push jns aad mov add adc call out fs jge pushf push add leave inc and add or inc add mov jl outsl mov adc ss mov hlt jecxz adc and push aad mov pop call sub es lret inc rorb xlat rol dec lret inc test (bad) and add les addr16 cmp push daa cmpl test test test mov pop cmc int test test adc cmp mov in add adc test (bad) add inc es sti xchg jae sbb add insl andl mov dec stc (bad) les daa fs mov jnp js push inc pop jge lcall mov add xor faddl xlat int3 push push dec (bad) stc lock pop (bad) add push mov xor jl push movl add iret jo mov sub mov pop dec adc push test leave add movsl cmp cmp out ret inc loopne in mov stc std cmp ret and (bad) hlt push jmp jl mov sbb and cmp mov loopne idivb and pop les jno cmpsl push dec jge nop sub fildl addr16 faddl stc cmp scas daa add jl jp pushf scas (bad) add mov outsl push or adc or psubq add jb sub loopne and (bad) rolb pop and sub ds push jno int3 cwtl imul pop sub test adc repnz es js fistpll pop loope xchg inc in mov shl xchg loopne jg or lret pop mov jle scas sbb js test inc fs scas fcomip pusha mov aas iret or jns and pinsrw push dec dec sbb fsubs inc jmp fisttpll xchg loope jp add cmp popa mov mov xchg je push arpl loopne out mov add push stc cmp pop inc dec nop sub and sarl push lods jns xor frstor pop loop xchg dec cld fmull hlt pop xchg rcrb push inc jl add xchg cmc icebp jno das bound cmp cmp push add loop jge push outsl add inc mov out add jmp loope test cmp sub add xchg bound jne dec out sub xlat push jecxz mov xor rolb jo hlt cmp jae and inc and lea jg add cmp loope popf add xchg jne add sbb das push and loop dec jl enter icebp sar pop cwtl call sub adc dec jnp adc es cmp or adc jo sbb loope outsb and jnp xchg rolb enter cwtl js pop jnp pushf loopne out add lds dec arpl or xchg mov sub mov add cld and push and addb add pop test push cwtl je or xchg push pop pusha in xor das push loopne mov js pop (bad) aaa dec inc fmul and adc test mov outsl pop (bad) mov (bad) adc (bad) lock scas push enter leave sbb aas loopne adc and mov pusha add aam stc push ds push xchg test cmp adc out inc adc mov jecxz test scas sarb nop pop inc rol pause lods inc bound cwtl fnstcw out inc (bad) mov mov aad in loope sbb enter ret out pusha jae sub or jge stc sub jmp (bad) loopne push iret pop dec (bad) in or cs sbb loope dec popa mov stc daa loope or imul inc enter jmp and scas dec fstps lds inc or add (bad) adc in and cmp aas cld insl jge jmp pop push dec test add daa std fneni(8087 dec push fdivs sahf add xor adc add push xchg shr outsb push (bad) sbb pop dec xchg cmp leave cltd push push bound jne inc movsb xor mov das add les mov lea into jne mov sub jl sub adc sub or test adc jno mov mulb cmp arpl cs adc mov push in dec sub lods or faddl dec loopne and pusha je popa mov jb,pn jns mov aas daa loope or cmp rolb sub adc out mov or mov sub add int3 sbb add or push jns pop ret jne xchg pusha push fildll push add pop pop sub push add and jge and mov pop mov push or push mov mov inc loope push push pop or inc push mov and jns adc jo daa adc test pop movsl or add sbb cmp loopne jae pop js push xorb bound shrl xchg dec add mov add sbb adc or iret and sbb gs (bad) jb add in inc addl sub fsubrl hlt push push cwtl push movhps call adc bnd pop adc test scas fild int3 fptan mov push fcompl pop jle mov adc and loop mov decl jns sbb fcom add cwtl add mov (bad) add and pushf pop and sbbl adc inc int3 fmull mov jns loopne lret mov push loopne faddl add mov dec inc test mov loope imul js ret sub push pop inc js add out in fmuls add dec cwtl test fmull clc sbb pushf icebp xor rol testl sub popf andl cmp inc lret dec lret lds cmp stos andl lahf in dec and and fisubl adc pop dec push cmp push cld inc or incl inc inc and cmp xchg jo lods add lods add imul adc (bad) fs es ret push push pusha adc add xchg push test mov add sub or push loope imul cmp pop lock or shrb jbe mov xor bound mov push pusha aam jmp jbe iret loope push js adc test call fisubl movsb negb and and je,pn xor push mulb push mov arpl shlb fdiv orb push dec mov inc movsb loope rorb jmp andl add mov mov xor jg lods aas adc daa les dec push lret fsubl and dec xor mov scas addl add cmp xchg fwait test addr16 sbb setl leave jb cwtl xlat push nop data16 fimull loopne shrl es sarb xor xchg inc lock mov cmpsb adc push inc test push sub fisubrl pop dec stos ds push xchg repnz fildll gs jae mov push cmp in cs xor xchg sbb cs sub push mov ficom loopne add or fs aas popa repz ja leave and loopne add lahf add xlat scas setbe add (bad) data16 dec clc bound xchg clc push (bad) xor dec jecxz cmp add call (bad) in xor inc xchg xchg cmpsl mov mov in imul xor jns add sbb in mov fdivrl js ja jns cmp add cmp sbb mov add adc movsb (bad) (bad) and and mov jbe popa scas or aaa sbb add cmpsb sub add in jle outsl xchg sbb inc mov jg add cmp dec (bad) mov enter jns push push out adc icebp imul mov pushf mov add and xchg rorl adc or jge cmpl and mov xchg and push adc sub mov lock cmp jno jp test mov add adc jp add sbb scas lods cmp sarl dec (bad) or test es out cmpsl lds sub in mov cwtl fs xchg outsl xor push inc cmp ss lea add in push inc test (bad) in sub or xchg adc adc outsb lds (bad) les mov push hlt shr aaa mov fwait add and data16 fstl scas push cmpsl out clc or jmp rcrb lcall out insb and dec ret dec dec call add lods mov test jns add xlat fild push and add pop loopne icebp arpl dec rorb push adc cld pop mov cmp mov lret inc adc mov push cwtl lahf call or dec iret nop je daa or jne lds mov xchg fdiv test rcrb cs add push test lds scas xor lret dec ljmp xchg insb xchg lds nop rcl or add or cmp lds popl test call iret push or mov clc loopne xchg and movsb out addr16 xor loope rorl dec jne xor add outsl imul scas xchg add jo mov in mov jns cmp add test push dec adc xor xor fstl (bad) pop push mov or xor adc jl xchg popa adc int3 add sbb jo lds inc stc mov (bad) mov inc movsb das add push mov aad and sbb fmuls push test dec addb jnp add sub push lea push repnz mov les add xchg mov andl shrl mov inc gs cmp loop pop call xor imul mov adc cld add enter lea inc insb or mov in xchg mov or add loope fwait pushf xor add mov push sahf adc xor xchg lock stc cs movsb inc xchg mov pop ljmp cwtl xchg mov xor inc int3 push dec (bad) movsb push adc jmp test adc je outsb pop scas in and movsl xchg cwtl adc xchg xor out and xor ss jl xor or mov push add int3 and fcompl dec add mov xlat stos jl outsl xor push sahf nop sub or mov jnp adc adc inc dec es and mov and imul loope add aas fs add test mov add adc sub imul shll dec cld mov fwait cmp fstpt jecxz pop xchg mov xchg rcrb jo scas add xchg mov xchg mov xchg mov sub add xor (bad) mov add cmp clc xchg shrb fs or dec movsb push pop sbb jge inc xchg and cwtl sti mov pushw or mov and add ss jne xor pop push lods add lods movsb fimul lds push add data16 js aad mov std lret (bad) xor ljmp je aaa flds cmp inc xlat inc stc cmp xchg mov dec pushf push or fimull inc insb fildl jl int3 dec pop fidiv mov dec adc lock loope lea sub and add cmp pushf mov mov pushf add aaa lds mov iret loopne pop clc inc jns sub out dec push in mov jbe or (bad) or mov xchg mov lock push mov orl or ds scas loope je pop xchg loop push add fstpl adc (bad) outsl scas push popa test inc cmp add mov fmull push rcr xor and add roll mov test hlt and out adcb out punpckhbw cmp add ret push xor les sub add lds xor adc or add mov push add jno subl add ret add scas dec movsb sbb inc outsb mull movsb add cmp mov add out scas mov or mov popf mov add scas inc mov loopne loopne outsl stos add test xchg or les test pop xchg ret and pop push dec sarb dec dec movl in add adc adc pop or mov xchg call or mov push inc mov (bad) hlt ret sub enter pop dec jne adc xor mov frstor xor loopne out aam fcmovnbe je loop adc push xor icebp jne push or inc aas push xor dec push push test decl cwtl and mov loopne add inc adcl inc sahf mov test sbb mov leave add clc mov int3 push add lcall push add cltd vcvtdq2pd and adc jmp pop jp or outsb in jb scas fwait roll loopne inc cmpsl lea mov add or sti and stos cs sub add (bad) mov mov mov xchg cwtl adc fwait stc int3 adc add mov scas ss xor dec inc mov sbb pusha fwait or dec (bad) rorl aad xor nop jg into adc fs mov movsb in add jo dec pop loope xchg andl push inc popaw xor inc add dec lods mov mov inc inc test add pop and ret test lock popf stos xchg add add mov mov mov push dec mov rcll sbb test inc xor pop lret xor mov pop or and add sarb dec add sarb and (bad) mov addr16 scas xor sbb push xchg mov jno add xchg fsubp outsl sbbl cld mov fisttpll bound out mov test ret pop cwtl mov push inc nop aas (bad) mov xchg int mov dec adc std jnp pusha mov adc orl aam ficom in inc hlt jge or stos imul jae push mul test dec (bad) mov push adc jne mov dec push add jge pop gs mov (bad) int3 jnp and xor and cwtl and or ljmp push in test lret xchg mov incb inc stc adc cs test inc iret lods xorl int3 pop pop nop sbb push xor pusha pop cmp lods loop je cmp mov cvttps2pi inc fidivr sbb dec add mov push add jns fwait add mov sub mov pop cmpsb mov rcll icebp ja jl sub test shr xchg rorl js in pop mov test rcrb add int3 clc je dec jmp fs repz or scas push popf add xchg adc in dec enter jp test shlb lods adcl mov xor in jmp xor scas pop loopne sub pushf sub inc in insl inc dec movsl clc adc adc mov inc sahf rclb xlat sbbl pop loopne sub or les loope popf push rolb sbb xor jp dec cmpsb adc xchg push add mov xor test inc xchg fcoms daa fsubr xchg sbb mov add push mov lahf mov adc enter loop mov mov or mov adc jmp (bad) fistp or aad add push push stos out and cld cmp add add push jno sub jo jns sub add testb push mov and xchg adc adc add mov adc and inc pop and and cmp and adc push fs jl js xchg enter cs les dec adc push int3 bound add pop daa stc mov cld fmuls add aam push and add inc cmp dec jg nop and sub lret movsl inc jns lods call push int ret dec outsb imul ljmp push popa add icebp scas testb xchg push and lds js xor or or lods mov fidivl and sarb sub (bad) mov imul lcall test les ret sti ja dec cmpsb jl mov ret lock mov inc mov xchg mov clc shrl jl adc mov ret aam add js xor jo cmp jae lock jmp push and out and add sahf inc add cmpsl mov ja push add or jp cwtl inc insl sub ret or icebp pop xor jl out enter inc mov sub nop push add outsb adc cwtl jne push inc das loope test mov push leave adc testb mov inc loopne cld movsb aam loopne sub loope xchg pop xchg mov ret jg enter fimul ret mulb das ret xor insl imulb lret and outsl popl popa mov pop mov xchg les inc xor out loope sbb das leave enter mov and pop pop cmc or lahf ret add fnop adc cmp fdivl fdivr lret pop fwait inc pushf sub pop leave cmp icebp pusha (bad) fidiv push mov pop in xchg jl cli adc scas (bad) out enter xor cmp or add cltd popa pop mov loopne mov iret pushf pop inc sub and pop adc and mov sub pop jo pop mov pushf push add loopne stos mov push in mov push test mov pcmpeqd pop add loope xor loopne repnz movsl adc nop xlat adcb add std repz dec xchg andl inc mov xor bound sub sub add or test mov mov mov adc loopne or pushf movsb les lods nop (bad) mov in or cmp shlb dec sub cmpsl mov mov stc js push les pop lahf inc sbb lds lret sub push xchg std or cli mov dec xor jne je inc loope xchg test inc lret mov push jge lock jno jb rcll std push or and xchg into push mov loop sub sbb jmp sub rolb mov sbb mov adc je in pushf lds test rol xchg xor and js pop and mov test sub inc lock bound dec loope dec or negl cld cmpsl adc and add xor and aas adc add push ja fadd insb lahf addb cmp dec dec xchg outsb inc nop imul jmp add jne loope orl scas pop fs out and xchg aam nop shl jg and cmp rclb add fnsave aas popf call rcrb push jl pop sbb pop ret int3 popf scas mov xchg xchg or push mov jb sub sub cmp add jbe cmp pop (bad) push add inc lds push mov rolb push ja sub loopne add lock test das pop adc pop cltd loope dec orl int3 dec add mov cmp out std loop or jmp stos adc add or daa loopne and xor cmc ja icebp xchg les pop mov cs loopne test cmp cwtl aad adc loop insb xor insl movsb pop dec xchg mov jb (bad) (bad) pop adc and push cs jecxz add mov dec leave mov xchg daa jecxz popa mov pop xor data16 lds xchg mov loop or js mov mov sub push mov (bad) repz cltd aaa and jge inc mov nop adc sbb rorl jo loope,pn lock xchg sbb lret ss je dec pop movsb push test ret jns fdivrp ss cmp lds repz bound jno mov scas xor call xlat pop cmp lods adc stc add rcl lret add pop lret fldl jecxz sbb testl ret or scas pop add mov sbb pop mov and jb rcr cwtl imul clc ss push lahf into sub call mov je les lock or fs or (bad) xor push push in inc das add lret test daa ss test in adc mov sub inc aad xlat (bad) xor pop clc sub mov push push loope hlt mov jp mov (bad) lahf mov jno adcb mov andl leave pop faddl push (bad) mov pop mov js pop dec data16 and (bad) mov mov push lock push loopne jbe push push ret stos sbb xor lret fmuls into adc cmpsb jmp fldcw enter jmp pop push fdivrl or scas sub xor jmp inc shl aas hlt mov mov call mov fwait xor xor leave fdivrs jge sbb pop add push push dec loopne and flds xor hlt pop leave mov bound negl xor mov aam clc sti xor xor cmp movsb scas sti push push and ret loope mov and cmp pop ror roll xor sub mov movsl xchg sbb pop jp leave stc adc repz push mov or pop push push jb or pop push gs push xchg push and adcb mov add scas mov test (bad) or jge fisub sub mov mov xchg and adc lcall out xor cmp xchg sarb jo cld sbb ret cwtl pop xchg add inc jge pusha adc sbb rolb scas rcll inc enter cmpsb hlt mov jge sbb testb jns sbb outsb testl push sub cmp sub adcb mov push shll pop std cmp pusha xor je pushf fildl and xchg add xchg cmp enter pop jbe or pop aam xor pop and sbb push rolb pop cmp push xor pop mov repnz cmp and loope dec js out mov jmp jl inc pop push scas stc add loopne lds rcrb lock movsl or rclb jns nop adc pop out pop incb lcall push les jl hlt imull sub or test nop add jmp jbe xlat adc les adcb es lds mov in lret fdivl lahf int3 sub in mov stos lcall sub and (bad) push loope sti out sub dec or incb xor addl push mov mov add pop mov mov call js pop mov mov les sarl stos jl xchg inc (bad) lds fiadd bound adc aad push (bad) pop loopne jecxz nop xor xor fiadd cmp in fnsave rolb add adc insb lds mov mov inc stos fwait push push mov test hlt fdivrl inc mov pusha mov loopne inc rolb and repz inc and test jno add incb inc add iret mov mov mov mov mov mov mov pop (bad) in pop test mov xor loop stos sub add dec jo lds leave mov in jns test test xor fcmovnu lahf xlat or das cwtl insl sbb pushf adc iret jl adc adc sub cmp jno sub jae mov push rorb dec shll scas dec or adc cmp dec mov push fwait pusha scas stc rclb push mov jle mov jns inc push (bad) xlat cmp jo xchg insl cmp and sub mov xchg pushf pop jns inc adc std mov dec mov push loope gs cli rolb adc jmp (bad) fiaddl sbb clc mov sub pop xor jmp loope (bad) ret (bad) lock test pop nop and dec sub xchg or fadds decb in mov addr16 pusha mov cs pop pop inc mov cmpl inc and push or jge int3 je stos inc loopne cmp add fdivr out cmp dec xor roll data16 jge in adcb xor test pop pop cli lods scas xchg ret lock rcll cmp enter sbb mov and popa sbb cs and pop mov lea cs in int xor lahf cwtl and and and sub stc push cwtl andb cli or xchg rcrb inc dec dec arpl inc dec add pop mov outsb lret inc rorb inc push sarl adc mov sub popa sub dec je test dec stos stc jg inc or cmpl cmc sbb inc mov or (bad) cld repz cmp pop outsl mov std mov pop push pop dec rolb aam (bad) loope fistl adc pusha scas in pop sub les jo pop pop cld dec ret dec lods and sbb out call xchg or jno in loopne mov add lds jmp (bad) cmp test push pusha stc and and mov call dec push mov add add mov add orb or push loopne fwait stos clc sbb dec adcb dec dec push out testl mov inc sub das (bad) lret stc aad test mov ds push sbb adc pop pop adc jge roll rcrb cmp js jge dec dec lds call dec push scas arpl lock mov and adc pop push xchg push iret aas jg sub clc sbb fmul push jo add xchg sub xor dec pop (bad) nop test or fisttpll test pushl in cwtl dec mov (bad) cld jns inc jo mov lret cld xor sbb jp sub loope jge inc les jb cmp inc outsl (bad) lret cmp jle fs jle xor mov fnstenv push inc insl sub dec loope arpl in mov xchg enter lret aam xor jecxz das cwtl repnz arpl lock dec add push jb add (bad) stc (bad) and inc add xor cmp bound js jbe adcb mov mov (bad) popa nop xor mov leave movsb dec das jp add loopne sbb aaa mov scas xor jmp mov adc xor pop lds das in inc pop add inc arpl mov incl fnstsw int jge fcmovnbe je push pusha hlt sti dec (bad) adc xchg and push dec add cmp out aas pop mov jno and add cwtl mov loope aas xor faddp jp cmp pop or mov sub mov pop test imul in pop ret ja (bad) fsubs adc test adc mov bound push scas and movsl adc xor lcall stc repz adc add pop mov mov ljmp nop (bad) pop mov mov dec daa stos stc sub jg enter (bad) outsb pop jp ret xor add sub push xchg pop dec das bnd addb dec cmpsb or sub (bad) jge lret jg inc push (bad) cmc sbb ja add in into movsl and add pusha add scas sarl stc mov lods or mov mov sbb imul xor jnp cli pop fwait add (bad) scas adc dec jge nop daa cmp mov icebp xchg cli int loopne das aam mov data16 mov mov jecxz sub push addr16 (bad) pop inc xor mov push add dec arpl pop ja insl dec adc mov sti dec inc ja and imul arpl sub add jae adc add inc outsb data16 ljmp sub push xor mov les repnz and pop push rorl mov cmp mov int3 sbb adc pop arpl inc pop ret es cli mov mov push and sbb add sub pop adc pop sub test call mov push jnp and js add sbb mov inc pcmpeqd push xchg pop cmp sub mov jbe jl sub push add nop js and pop mov call add lds push pusha mov out (bad) hlt pop or add dec stos and bound pop (bad) or das clc jne pushf mov push jae loope inc sbb fistpll lcall stc pop loope push outsl aaa (bad) movl ret mov mov and jns sbb int xchg xchg std repnz int3 adc test adc mov xchg sbb push lahf addl push loopne fsubl lds shrb add loope mov cmpsl mov fs mov or popl xchg pop lock addb negb adc lods inc daa daa xchg push adc push fimul mov pop cmp jge jo cmp fsubs int cmpsl loope mov cwtl sub mov sti add loopne sarb lock add bound mov mov loopne xor push pop addps jnp mov nop jmp push pop cwtl adc xchg adc mov fsubs add ret add sub stc out jle pushf and jns lcall adc xchg jp or fs push or xor jl push xor add cmp mov push enter loope icebp xchg incl (bad) sub push pop js lds loopne jmp mov or cwtl fadds int pop and inc lock xor sarb fcomps xlat in les or mov or les push rcl cmpsb lods adc dec inc jl push out and or add ret xor mov mov test mov and push mov inc sub add or shrb dec nop inc mov inc mov jo fs dec dec mov outsl push enter dec inc bound cs mov pusha mov cmp push pusha repz and dec add leave out popl repz jns roll sub cmc ret dec cmp mov or xchg push inc das in add enter ljmp out xchg ss hlt and vmulpd hlt xor mov push rclb nop add sbb pop jb (bad) xor xor adc mov pop dec cwtl xchg loope fwait popf in lock inc js sub push outsl or insb gs mov (bad) repz roll mov maskmovq testl stc cwtl cmp cmp repz ficom fsts push stos into mov xchg jno dec cld insb popa scas mov test scas mov call test cmp sub add jl in loope lea ds insb xor inc scas insl adc xchg addb fnstsw cmp data16 and sbb lret pusha mov jae scas cwtl sbb mov adc pop loope test lds and and (bad) add mov int3 xchg adc and inc mov add add cs es xor sbbb push jns loope xchg icebp mov mov test lds lods pop bound int3 or add popa dec lods and xor mov push mov cmp pop lods (bad) jns scas dec and lret fldcw cmp outsl xchg hlt add cmp push jns pop std les or nop pop add xor cmpsl add lret mov mov or nop aad scas push int add mov add mov jecxz jb pop sub sbb in lock outsb scas loope popf rorb add and push hlt in movsb push add mov les mov mov ds add xchg das loope nop fsubl sbb sbb pop inc adc mov sub mov test shr je dec inc repnz loope lea xchg push (bad) jg pop outsl push in pusha icebp xchg (bad) xor add lock inc jl outsl and mov sub adc add in aas cmpsl push inc fadds sbb add movl pop nop insl inc (bad) mov test mov mov fsubs lods inc scas push pop and cli fist xor mov push pop add or stos ret mov cmp lods jmp add int ret push stos mov enter pop shl sub mov add add (bad) dec or inc adc mov movsb adc popa nop stos loopne add jmp pop mov andl sbb pop test add mov ja sbb fsubl dec pusha cmpsl sti add inc shrl jbe add pop popa lds push mov or xor push inc enter cld ret adc sub mull cmp jle sbb dec aas xchg lods jns dec int3 sub pop add mov mov fstpt in lret (bad) fadds adc dec mov pusha or lds cld add xchg ficomp add sub loopne or inc pushf dec jmp dec lret adc out or stc rcr dec jg sbb pop cld stos inc cld out movsl jp mov jmp fsubrs hlt or and pop in int3 (bad) hlt clc add cmp adc scas push fsubrs mov pusha jo adc orb sbb call cwtl cmp ds scas push enter mov and and pop (bad) nop lea aam pushw inc adc push jp and popa loope addb or push ret repz pushf dec repnz cmp add inc fninit repz clc jne fsubrl pop cmp xchg cmp cmp pop xor mov mov pop add pop xor cmp stos jmp dec lcall lds xor push shl in push add jmp cmp and push cli imul push sbbb push sbb xchg push scas or lea subl xor incl xor add mov pop xor insb jle in inc ret or dec jmp pushl push mov inc push jmp push mov (bad) mov (bad) or call add sub jl popf adc mov sbb (bad) repnz jmp pop push mov xchg repnz pusha and into add jl addr16 mov push inc sub std and into sbb pop arpl dec cli pushf sub xor jle pop sub (bad) icebp jp sub push add inc and cmp (bad) cmpsl cmp ds not sti rclb (bad) adc adc mov or adc sbb jmp loop add add mov sbb sub addr16 (bad) xchg (bad) jl aad mov lret in jle pop dec and push push pop sbbl into out hlt pop dec adcl stc (bad) and jns xor lea cmp adc pop push jmp inc adc mov ljmp idivb push and and add jmp jbe shlb test lret push mov add mov pusha add aaa dec jmp (bad) mov adc icebp pop pop push mov cmp jmp rclb aas sti sbb mov sbb inc and icebp sub jae sbb jecxz cs or lods bound loopne fistp std inc ret xchg xlat xchg stos jne add repnz add push ljmp or sbb mov clts mov push insl mov into jb out loope sbb inc mov jp mov or dec pop mov jmp jb xlat inc (bad) fadds addl push pushf jb cltd pop push push shr cld movsl fs rcll inc xchg push test jmp sbb push dec push out aam cwtl out push push push push pop xchg and jmp adcl cmpsb daa sbb or test push inc test dec cmp sbb xchg test or push mov adc ret inc add and xor mov pop pop jne rcll jnp push or cmpsl dec roll icebp pop test xchg pop jp sbb dec xor adc cltd push pop add out in and repz roll cli mov jmp mov sbb lea xor test pop pop scas std xor pushf jbe out push mov mov (bad) scas mov push lcall fs xor into fcoml or dec add fldt add inc pop dec sub insl ljmp or stos addr16 sub mov cs aad cmp pop adc mov dec or in shl push test mov pop pop or stc movsl fldl int3 xchg pop (bad) jmp add leave (bad) and mov xchg xchg data16 test xchg adc xchg adc sub adc pop mov jnp and jno lret (bad) sub sub cmp push adc mov ljmp aas and repnz ret rorl xchg push push or cmpsb pop inc jge cs or call lds jbe xchg fnsave xor push mov ss pop sub push sbb xchg js cmp (bad) cld sbb insl push xor ljmp sti rorb add lret fnstcw decl mov fcmovb sarl and and and jmp inc or lret jmp cwtl ret push (bad) jbe rorl jecxz and sub mov add scas jbe faddl mov ror ja adc in out mov jge pop iret in add pop push fldl push rolb sbb out push xor sub or add sub push lahf ljmp push xor cld rcrb mulb jl push mov nop movsl cmp lods xlat jmp dec sar push mov mov or cvtps2pi xor pop lock xor jmp mov push xchg shlb jmp out mov sbb rcll popf pop test or jmp pop and int mov jl mov add add jmp adc jg cmc push ja es inc add mov sub sbb sbb add jge or insb addr16 sub add lods or dec addr16 mov dec dec adc add push dec shr jmp xchg int pusha aaa mov (bad) dec in test addr16 jb push pop jl in aad xchg pop and add or pop xor cli sbb push jbe pop or sub lcall or push inc (bad) sub mov pop push popa jg add addl mov cli sub jnp xor dec sub je pusha push xor es adc mov jae dec xchg sbb cmp clc sti inc leave aad leave and shl push add jns jmp and pop rolb sub outsb les mov push push movsl add xchg inc in mov add (bad) sbb add push fndisi(8087 idivl mov xor cwtl dec les (bad) dec in cmp inc add dec (bad) and pushf cmp shl push movsl push and sbb add imul fs and xchg notl inc or fidiv xchg xchg push push cmp (bad) fstps in cwtl xor wrmsr ja jg das cltd cmpl and in aam pusha mov ret lea and or ljmp ret mov jbe cmc and pop shr nop and cli rcll jge fisubr or sbb push xchg repnz jnp mov ja inc push push xchg stos enter and out mov push push movsl jnp inc and jmp mov scas je push add push dec faddl lods movsl xor xor mov jmp push cld rorl stos jne mov xor and call mov xor popa cs jge adc repnz add dec cwtl pop sub mov clc into ljmp rorl xor enter hlt or out mov sbb lret pop pop (bad) int addr16 jns adc sub xor or mov inc popa add add cmp dec add push js and bound loop cmc sbbb loope cli dec pop popa add xchg jge sub call cltd insb mov sbb test mov iret or (bad) sub push xor inc jmp cmp jae push add sub sbb mov pop (bad) sbb js (bad) scas jmp lcall cld adc xchg cmpsl add repz cmp or sar adc xchg rol inc shrb (bad) mov sbb mov push push std push and jl lret jb in add fs sbb jae lret outsb movsb dec pop (bad) iret adc aas adc cltd add in jns (bad) jl mov rcrb jmp daa ds and push add add jmp inc mov out out push sbb xchg mov pop loopne add push pop pop subl add add aam jge divl pop or inc mov pushf loope push movsb inc cltd dec pop repz jg push scas mov mov sbb mov int3 imul mov outsb dec shll lcall ljmp mov shlb add inc push pop jge rolb jnp jge xor sub adc in add mov clc in jle hlt es js sub push push or xor mov dec test add mov sbb jmp call sub jp dec inc pop push add (bad) xor pop add pop pop bound mov mov add xchg adc in in pop dec or (bad) dec rcrl add test dec adc aas (bad) out ficomp jge add aas pop push push push jmp ret out adc push movsb movsl and mov and or loopne out xor clc cmp fdivrl jb mov es and enterw (bad) fcoms push cmc sbb outsb clc mov dec es mov fisttpl aaa add lcall xor pop mov sahf and cs roll fild loopne (bad) xchg pop ljmp cmp pusha xor cmp jg inc pop sub push xchg (bad) movmskps sub pop dec or daa sub sbbl and lret adc shll int xor pop popa dec pop and mov mov adc push ret cmovbe aas daa ret testb lahf or jns ljmp jecxz add xor jnp cmpsb pop divl xlat cvtps2pd sti pop (bad) shr (bad) loope dec stc or cs pusha inc ljmp ret cmc mov add cli and popa faddp inc or jbe or sbb lcall or int3 add lock adc jae movsb pop pop mov nop enter jne mov out mul divb add add loopw push cld sbb lds push sub push add add cmp fwait out daa repz lds cmc sbb mov pop and nop call sti pop adc les push icebp add xor mov (bad) aas jmp xchg dec fdivs insb mov out mov inc mov ret push push sbb mov clc mov adc push or sbbl sti mov repz dec decb cmp mov jae push ret mov adc jmp dec clc nop inc mov cmp xor add inc mov sub dec pop out push out add scas push sahf fs xlat push ss mov pusha push ret cli cmpl sbb arpl hlt popa push sbb or sbb xchg imul push aaa add jl jae in (bad) jns aam pop push (bad) jno add test jmp xor sub adc addl mov cmp pop out arpl mov jge jns insl imul xchg pusha mov ret call das cmp cli dec jge rorb xor dec push and in mov popa ss lds fldl test clc sub sbb sbb adc mov push mov inc inc adc out add cs or (bad) cmc pop sahf mov mov in xor in (bad) xchg ljmp loop dec xchg movsb test jmp outsb mov movsb (bad) cmp mov test and push (bad) sahf insl sbb js mov push or andl add push pop sub rcrl sub fild push movsl pop je imul lods dec mov pop push add inc pop popa or std repz inc adc inc adc xchg push lret repnz (bad) aad jbe ficoml jno sub jge sbb shl add xchg cmp sbb test pop das add push test cli popf test jmp loope add jmp mov stos leave xor push mov popa push and or push mov jmp mov sbb scas (bad) aas xor jecxz add cmp xchg push arpl fmul and mov and or scas mov push mov test xchg or cwtl ret pop pop jecxz mov (bad) iret mov add cwtl cs fwait in invlpg (bad) push or sbb lret mov pop push xchg or jo inc adc mov lret and ret xor cmp jbe (bad) sbb and sub jl sbb jmp imul dec mov pop ds sub push add add sbb ret jb push ror stos or inc inc add or (bad) in and (bad) mov push pusha jp xor jmp jo lods lea pop pop mov xor lods hlt fsubs rcl push add hlt dec or out (bad) xlat inc pusha xor repnz mov inc shl inc fist fdivs test cmp cltd aam xor pusha popl scas roll mov jmp or add mov xor std pop inc push fiadd leave adc jae push mov adc aas ret mov push sbbl dec mov xchg add push fmul mov test popa add mov rorl and ret add jne and sub mov pop and ljmp sub je push lds test xor xorl xor inc vmptrst nop (bad) xor inc jmp dec xchg xchg mov out gs xor loope leave test inc mov incb mov mov rdtsc lea lret pop call inc sbb sub mov mov sbb ret mov inc push ret adc push icebp cmp (bad) mov adc mov and rorb jo popf cmpsl dec push cmp mov pop ret enter inc adc push push ret je and pusha ljmp dec mov mov and ret pop ret xchg hlt insb bound and ret pop jo add and pop mov ja pushl sbb sbbb pmuludq mov (bad) mov mov mov push int jnp jmp cmc inc scas andb movsl adc arpl or popl add pop adc loopne xchg adc cmc add leave test rorl mov je sbb lods mov ds push popa repz mov rorb or out pusha adc add loop hlt sub mov add jbe pop xor sti mov in das pop push adc pop pop and test push out adc push sbb push or add inc mov inc ret inc mov arpl mov add ret js mov xlat inc dec call (bad) mov enter (bad) outsb js in into ret adc or xor jne mov es fldl add in cs mov jle pop add (bad) mov sbb or movsl dec mov jno jmp jo push push jne xor mov add mov add enter mov mov pop add xor mov sbb mov popa add insb ljmp jb (bad) pop cmp and add movsb mov rep push adc cmp inc frstor in jecxz inc sbb mov or pop mov mov mov push inc mov mov adc jb fsts out rcl int3 push jp popf push cwtl mov insl sub pop inc lock adcl pop jmp mov or enter push pop das jmp inc cld or mov cmp add in push mov imul dec mov sub test jmp ss repz fstps es fdivrs push (bad) cmc pop or mov mov push push dec pop fs pop inc add mov add je lock mov add pop push and xor (bad) jge lcall add dec xor add add lea add out pop dec push movd ja rcrl xor dec inc sub adc cld push dec cli lret addb and mov lsl shrl inc xchg out (bad) testl add xchg pop xor mov add push add and shlb sbb out sahf xlat xchg icebp push femms cmp fdivr and jns pop fldcw ret and cmp push roll nop cmp jbe adc neg inc rolb jnp repz mov fucompp pop cmp arpl mov push sub pusha scas aaa mov push enter mov dec sbb and lock pop mov stc sub jg loope sub pop insl bound mov dec mov dec inc jne cmp add and and cmp mov inc fs imul test imul inc xlat xor cmp out (bad) repnz sbb sti inc add jno cld hlt or roll and jmp pop xchg mov ja sub mov adc add jno push adc arpl popa jg pop neg and cmp and ret test and cwtl lcall stos fucomp or ds sbb adc pop aam push push in pop sub push (bad) adc pop test and ljmp test adc or mov fildl or rcll repz inc push jmp divl xchg pusha std add inc movsl mov add sbb push scas add cmc cmpsl and push mov lahf mov repz inc in add mov pop mov (bad) xchg in loop xor enter dec adc push lahf jmp mov add imulb add imul ret push insl and cmp sbb pop add inc out or mov or or xor add ss or in ret dec xchg in clc sub dec mov cs pop shr mov jmp fdivrl subb xchg lret pop not dec jmp nop dec sbb daa add divl mov push das push les or xor out ds pusha push fidivrl or sub sbb or adc jns pop push cmpsl inc pop sub push test xor mov pusha sbb scas add jg shlb lahf leave jbe adc jmp mov pop push out cwtl jl add pop pop sahf pop push push push jmp add adc xor push pop jp adc mov repnz add lea lods mov add push das rorl je mov mov nop jle ja push insl push hlt mov pop aaa jmp test jbe in and or mov mov fs push xlat sti jp gs sub xor popa mov rcll addb push inc lcall dec bswap push add imul dec jmp dec jbe and xor fs pop adcl repz xor cmp jmp push push pop mov cld jmp xchg (bad) jmp pop mov jns loop cld dec pop inc ret push fs cmp sti xor dec (bad) test mov pop push ljmp cs pop iret mov add loop xchg rorb mov in xchg add es adc add or lahf cmpsb mov rcrb scas xor cltd rep jge in mov push or mov inc inc imul inc outsl sub jmp push loopne neg adc push mov dec add ljmp fisttpll push jbe ret or das jbe aaa idivl imul push mov mov xchg ret push or aas sub add push (bad) sub push pushf into mov aas xchg stc rcll mov roll add rolb pop or repnz adc dec push inc clc pop adc sbb pop repz pop dec daa jmp flds jne adc jge sbb xchg lret pop pop pop ret add pop inc mov out popf cltd mov add mov aam pop int3 sbbl mov pusha mov fdivrl push ret jnp rol pop adc pop bound adc add or mov push pop lds add pop dec movsb das mov add cs dec mov pop cmc push pusha or pop or and and cs pop or mov push andl flds push mov jmp push (bad) adc hlt mov enter add cltd imul sbb out fs cmp push call xor add sbb out add into jno push or adc jno jl xchg sub adc adc mov inc xchg mov mov push jmp (bad) fs pop push jne ret scas and xor jno push pop mov pop (bad) fmuls xor mov aad dec lods fcomps add mov sbb xchg mov (bad) fdivrl add mov cwtl pop cmp sub cmp sbb sub push (bad) or ljmp pusha leave gs rcrb aas cmpb push push jno inc xchg loope daa xchg and or push andb jp mov or rcll jp loopne neg fwait int3 dec push add (bad) rep adc js push push das dec popa inc out push mov and add mov aad jg xor and cmpsl les dec and xor movb addr16 pop jno outsl dec inc add push int3 mov add add mov add inc pop adc add push push pop xchg dec cmp inc dec add mov outsl repnz lods ds out mov aam in test jae fidivl add cs fmuls cli push das xchg cmp (bad) ja push iret dec andb push lock adc pop in fldl2e xchg inc cmp shl out xor adc lret adc mov aam sbb fisttpl adc mov push lahf outsb xorb and push mov sbb dec xchg push subb pop mov xor shrl mov sbb add movsb ret mov sub (bad) xor sub fcmovne je pop lret outsb xor call inc out dec and xor inc mov pop xor push inc jne pop xor add and inc fsub mov cmp inc push popa add scas add xchg xchg popf jb cmpsl adc mov js dec adc leave aam sbb cs adc cmp call and mov les inc cli jle ljmp mov mov or dec push test pop mov adc dec add shll pop dec in add mov mov call adc mov sub arpl in test repnz add cmp jo sbb cmp push xchg inc push xor loopne adc add ja (bad) leave ret out pushf in pusha stc cmpb xor shrl stc popf sarl xor fisubr add ljmp stc sbb dec or jno xor mov or test push rolb int3 adc je xor sbb lahf test inc and mulb dec and push pop add pop mov jmp adc leave pusha mov add add call jno int cmp sbb sbb inc adc sbb lret outsl mov dec and add leave es sbb mov mov mov push clc enter icebp push data16 js and outsl test int3 jae xlat inc aam add mov adc lea sub aad mov add mov jg mov cmpsb dec add movsb leave imul aaa mov cmp add pop sbb out sub xor cmpsl add or out (bad) stc xchg dec aam scas orb (bad) mov int3 leave xchg sub ss ror add dec lock inc xchg lds (bad) mov cmpsb sub test aam scas fwait xchg ret int3 add stc mov and mov loop jp enter sbb and icebp mov cmp in xor dec push and xor xchg mov push in loopne pushf (bad) jecxz adc sbb jmp xchg pop mov icebp cltd xchg divb mov test push repz or bound cs mov add inc pop xor pop mov xchg aas xchg pop shrb inc mov js xchg xchg lds rcl sbb loopne sbb scas dec rclb mov insl or orps mov pusha mov bound repz mov stc cltd add mov fwait xlat xor roll mov add les jae ss or xchg adc mov sub add daa inc cmpsb dec sahf lods push dec xchg mov pop popa jno mov addl setnp sahf xor imul stos fadds aad add mov pusha nop (bad) add ret movsl andl cmp cmp sbb sbb out aam sti adc dec xchg or into outsb adc enter sbb popa mov je lret jno cmp and hlt insl adc fwait jo leave mov sbb and sub sbb lret outsl jne jecxz pusha push cmpsb jae xor aaa (bad) loop add popa repz cmp xchg adc loopne call xlat (bad) call pop subl (bad) jno push roll int3 or inc test imul pusha lcall adc xor insb mov hlt xor xchg mov mov popa or lahf je test push xor sub je dec clc js and mov sarb xchg mov in push inc enter hlt fild clc stos sarl call mov fisubl add cmp push repnz xchg mov jno inc adc mov adc (bad) sbb fadds (bad) mov arpl std xlat add xor cmpsl lret sarb les adc xor repz lock (bad) fadd sub xor push sbb hlt pushf das adc cmp ss push lea inc jns jo (bad) sub cmp fildll insb dec dec mov loopne lahf sbb scas aaa or rclb loopne or dec sub xor cmp imul in add fld1 fcoml test add mov mov pop rorl adc cmpb pop cmpsb mov mov mov inc xlat jp sub cmp mov das pop or in push mov add xchg icebp (bad) add leave add and jo push iret loop sub inc sub jne or jp xchg inc sbb pusha xchg cmp popf ret enter cmp pop pushf adc add jmp xchg rorl jo dec stos popa add xor inc dec insl mov xchg in daa sbb mov cmp add test xorb popa xchg pushf sbb mov lods sbb sarb inc pop cmp jecxz inc push push adc xchg sub enter or push pushf sub add andb sub addr16 adc out pusha and add pushf inc subl call icebp ficoml xor nop outsl (bad) sbb stos cmpsb movsl les cwtl sbbb call (bad) dec lret and shlb push int3 int3 push mov lock cmp sub nop adc loop fmuls jle push lret and or pop and pop jb arpl add sub in add sub loopne xchg scas ret adc aam out add xor movsb jae add push ss jae push or pusha hlt pop ss jne andl mov sbb (bad) dec sbb sbb repnz dec xchg imul xor dec call cs sub mov repnz pop mov pushf add jge and inc sbb mov xchg lock cltd lods sahf push sbb test scas shld popf and mov (bad) mov rolb jecxz jo sbb and xor call mov enter loope cmpl or js push and adc push cmpsl cld in sbb outsl js inc outsb cmp jo xchg fnstenv sub shlb xor cmp lods cmp (bad) cmc sbbb adcb xor lods dec rolb or mov or pushf push push sbb pusha cld out stc pop test (bad) int3 xchg mov push outsb jl and mov call movsb rorb inc push add cltd push in mov mov es add jle add xchg lret jge push loopne sub push mov faddl call xchg (bad) dec fs xchg ss (bad) (bad) ss dec pop fisttpl dec ret dec xor jo push pop xor adc mov rorb cmpsl int3 xchg inc mov out cwtl add jg push xchg push cmp iret add in fucomip (bad) lods daa inc mov test jg je add leave jnp add add jbe or ss scas sti icebp ja add jnp add jae dec push push pop add and jo mov push push add lock scas jae xor sub jnp mov or cmp loopne and mov (bad) aaa outsl imul jg out scas lods jns xor or rclb pop ror leave push push test sub pop sbb mov sub push mov xor cmpl add loopne push int std jecxz in sti negl jle sub je add jge add movsb xchg push cs fdivp mov sti int dec push push cmp add fimul inc sub add fcmovb lret jmp popf mov add xchg int3 test mov es dec inc fnstenv pop dec or lods inc jb cmp lock add imul cmpsl or jae dec and in push mov lods (bad) dec pusha mov adc icebp adc dec xchg sub lret and test push stc scas dec mov mov xchg int3 fcoml inc lea cli and mov sub sub and fcomi add stos or mov adc enter xchg add xor test sbb loopne mov adc leave xchg xchg (bad) (bad) iret cmpsb or or imul mov or test inc dec ja adc add fwait jno fcomps adc aam test out pop (bad) movsb lret scas addb add sti xor aaa and out dec inc (bad) jno xor xchg push adc and or jnp test jl inc arpl insl mov fnstsw mov (bad) lock dec xor scas rolb pop cmp push ja out xor loope pop stos pop clc hlt mov lods psrad sbb fwait jo inc loopne jns cwtl adc mov xor push sbb or pusha push sub repnz pop or out add jb add xor and in pop add xchg subl bnd cmp das add cltd test add (bad) aaa fcoms fistl popa fsubr mov xchg adc add xor push fs int mov mov sub push rclb cmp dec add popa shll xchg mov fmull and push out push nop je stos in fistl cld or jo repnz in enter pushf cmp xlat jp or pushf or and mov aam arpl dec and out xor add out add sub or in and scas dec and mov sbb adc push jmp mov inc jae jo test adc inc cmp dec ja pop imul iret inc sub cmp adc sbb fwait dec fincstp repnz xchg inc cmp add adc in int3 ds mov and sub xor xor xor mov call movsb (bad) out (bad) xor sub xor xor sbb movsb lahf pop pop and test rol xchg movsl jb (bad) fldl ficoml mov jbe pop mov dec mov mov xor jle rolb and push lock adc cld push fisubrl cmp or pop cmp les je cld pop pop sbb cs data16 mov xchg adc fs div cmp add jge xchg pop inc into sti test and xchg repnz mov mov pop ret push test inc es adcb test push pop imul sbb push or cmp pop fnop push add mov ret inc xorb sbb jge inc jno clc jl pop sub in inc mov dec cmp push mov dec and xor mov sub cmp test repnz xchg xchg jo sti aas add sahf test loop xchg mov mov aad loopne ljmp adc inc scas lahf mov cmp mov rolb mov in pop xor sub test sbb add mov movsb rolb xlat sbb push xchg push pop dec andb dec add jg pop jns stc test std sub sub add dec mov loope mov or inc adc hlt dec xor and nop or test jmp (bad) cmc sti js fs inc fs xor mov adc mov mov pusha inc loop ficoml cmp dec xor repnz push mov (bad) aad std int3 mov out xor add xchg add fadd test mov faddl dec cli inc inc in jo dec ds js pop cld mov xchg jecxz sbb sub inc shrb sarb sub flds add mov adc leave enter mull sbb push pop rolb jle sub enter xchg push pop xchg clc xchg inc rorb sub fs mov sub pusha bound push jo pusha cmpsb js push adc rolb jecxz stc out rorb in adc (bad) roll mov sbb and pop lock in enter (bad) jle cmp les cwtl dec mov imul and xorl fs push movsl pop in loop xchg scas stc loop sbb jle jp fs add test loop lahf add mov lret out jns fs mov dec in je out add in ret add mov imul mov add pop outsl cmp sbb dec dec pop into cltd pop fwait jae loopne test cmpsb stos aam outsb add mov sbb jns subb add inc xchg and mov or movb mov dec shlb scas or repz aas loop jl out mov pop push (bad) (bad) leave je push sbb sahf xor sub and fldenv cmpb inc sahf (bad) pop rcr jb sbb cmp cmpsb scas mov and adc add jno adc xor popa subb mov jg or andb mov pop xchg dec or jno inc mov pop add push mov (bad) icebp test pusha fsubr outsb mov sarl (bad) call and std bnd fst shrb test push daa pop repz dec test test cwtl hlt or add inc inc mov popf pop inc int3 inc mov ds cmp lret sbb dec divl or mov call cmpl add lods shl out lock divb out in mov adc push sub sbb dec or cmp xorb pop dec movsb xchg cmp and ret fdivr movsb js add aad (bad) inc or adc push call lcall xor cmc roll les popa loopne mov loopne aam and je add and jns cmpsb lret rclb xor loop lock jl add inc dec push stc or or scas into push inc sub pusha (bad) xor xchg (bad) jl (bad) into dec pop cmp pusha xor cmp daa xchg adc inc or mov les insb cmp sbb into pushf cltd xor adc adc xorb or jmp pop adc test add push jmp xor adc push pop inc mov nop fdivl push mov aam sub mov add movsl xor jnp sub pushf mov cmp cmp lds push or push inc sbb (bad) sti or inc ds arpl mov xor cmpsb (bad) adc sbb cmpsl inc (bad) jp enter popf and push jne daa cwtl aam or mov pop ret and stos mov mov clc mov mov sub cmp adc daa inc ss jo subb bnd xor enter stos add cwtl test add dec fdivl (bad) mov mov xchg xorb dec cmp nop sahf dec loope push xchg mov into push dec (bad) and jae inc ljmp lods cmp or inc jg daa sub pusha pushf add es lahf hlt rolb insb push push push cmp dec sahf rorl push in pop pop add test xchg loopne add das lea mov xorl mov push pop sub jne push std repnz test or push test cmpsb add jb dec adc xor (bad) clc add xchg clc outsb mov push dec fidivrl and mov mov sbb sbb pop sub hlt cmp xchg push divb adcb xlat mov push mov int3 push sbb mov adc mov push add mov push repz repnz arpl out pusha and add and addr16 push fnstcw push xchg test ret into sarl movsb hlt add or sub test lock xchg cmp imul inc inc add cwtl int3 daa jnp push mov lds iret lret add jl push das xor in xor cmp xor push push push mov aas mov std mov hlt popa cmp int3 out adc and movsl or mov insl test adc sbb sbb js lret pop pop pop ljmp (bad) add int3 imul inc mov mov (bad) and clc test adc in sub add mov fisubl cmc mov mov jge (bad) cmp cwtl les cltd add push sub rolb leave push xchg adc insb inc out in aas cmp pop loope and cmp xchg xor sbb mov push (bad) stos mov test or push pop lods and fdivrs xchg int test out inc mov mov mov subl int3 jle mov je bound inc mov cmp ja rolb xchg scas or pop lock add into add jl pop cmpsb clc dec pusha adc test dec sub mov mov pop mov stos mov add scas xchg xor nop ss enter lret adc add pop call adc ret lret ds fs push mov push and sbb lret inc je nop pushf in mov bound adcl jecxz mov mov test inc jb arpl adc call adc mov pop or aas mov inc adc xchg adc loope push cld loopne mov outsl sub mov push jns stos call stc xchg and pusha or jo push xchg and push dec mov add cmpsb out fcomp aam or sbb rclb lock subb leave add add inc aas repnz vmread xor jmp (bad) es xchg movsl xor xor lods in sub xor fs stc add jmp sbb jecxz adc inc clc popf (bad) stc add call into cmp in inc enter pop out push add outsl cmpsl arpl mov mov jno push or hlt rcrl xor (bad) xor and or incb shrb push pop pop rcrb incl mov test sti push pop scas adcl jns nop fs jne push shlb adc cld (bad) repz test add jle pop adc out cld daa out mov jo stos adc push je mov aad insl xor test dec js inc mov jmp mov adc lods jle,pt mov aam ret push adc and scas call cld cmp inc add xchg iret add orb add sbb push mov mov adc push movsl push pop sbb add jle imul xchg pop and add out mov jle xchg test sub aam adc pop out push ud2 cmc fchs test daa adc and stc cmp cmp add cmpsb outsl scas testb (bad) fnstsw inc (bad) sti mov push andb add mov pop push jne mov dec push sbb lods test out xchg test repnz or in adc and icebp add mov add or pop jmp (bad) jbe fs push mov sub popa jl incb push in cmp ss adc add mov cmp mov dec jo push jmp cli leave jbe adc mov jmp pusha push pop mov xor cmp xlat nop stos pop fild sub add aam jne pop je loop jl inc inc xchg mov fldcw dec sti (bad) popf movsb mov adc push sub sub sub mov add jle (bad) push je adc jns push xor fmull (bad) sarb clts adc addr16 sbb and mov and daa add fs xor push sub (bad) pop sub test lods push mov cmp push pop pop and adc push adc or mov adc mov hlt pop mov subb inc mov adc or inc dec dec (bad) insb and cmp repnz xchg push add cmp add pop ret les jge decb and loopne jg imul sbb push stos cmp lret aad adc lock hlt sbb push subl div mov mov adc testb adc pop jo repnz clc nop imul int3 clc andb loope add xorb lock wrmsr insl psllq inc add aam add ret xchg lret mov add subb xor pop (bad) stc movsb call adc lds nop pop js jne sbb pop int3 jae jg mov dec fxch das or jl xor and imul test inc sbb xchg in add int3 test push mov sbb push out push pop lahf hlt sbb add inc leave std pop cld cwtl jp mov mov add sub push and or add sub xor add add lret sbbl movsb pop sbb and dec xlat jl pop lret xchg ret movsb pusha push mov lock inc mov je inc bsr cmp xor mov or lahf fimull push dec les ljmp je loop and add xchg lcall fwait adc cmp jge adcb leave fdivrp sbb cmp jecxz xchg pop push dec jp test sti outsb xor cld dec scas mov adc cli lret fadds test imul mov xchg repnz hlt cmp pop inc mov mov add inc pop std dec fdivl jnp adc out daa call fs jnp mov addr16 and nop test inc loop aas insb clc fsubrp out mov pusha and xchg test adc test nop in leave dec xchg add fcmovnbe fs fsubs or dec (bad) enter pop adc and mov pop add pop inc pop aad mov popa fdivl lret push mov in out mov adc data16 sub bound jl sub or sti js xchg test (bad) ds out inc cmpsl xlat cmpsb jmp add jae cmp pop je loopne out cld or stos pop mov push scas ja lcall nop adc adc mov pusha lock sarb mov adc aam mov in enter mov xor or jp fiadd fcomi daa inc rclb gs jg dec loopne out inc sub inc xchg jne nop sub (bad) xchg jle jge adc pop lret or clc hlt pop lock or sbb mov lock es mov xor add mov insb cmpsb pusha jmp pushf hlt add jmp outsb rol rclb rcrb push imul sub pop mov test enter (bad) pop mov xor pop ljmp sub loop mov sbb mov rorl roll daa xchg enter jge (bad) xor test adcl and js cli insb add loope cmp cwtl or sti add mov (bad) or (bad) jge jmp add imul fs popa adc out pushf push das xor xor xor aad ror lods mov and (bad) mov xchg pop push jo insb sbb push pop data16 test hlt lods hlt enter or rcrb pcmpeqw lods inc jne xor adc inc imul movsl js ljmp sbb cmc inc int bound lahf sbb add adc jmp or addr16 add test scas nop inc test sbb or jp dec imul in add inc xchg aam xchg xchg loopne jg daa inc dec mov pop fistl lods xchg addl pop shlb (bad) cmp test and in mov and or xchg mov aam test mov lds lcall push sub pop sbb mov gs xor stc pop fdivs (bad) pop movsl repnz mov mov and or test push test pop lea push mov pop adc sub jne xchg movsb lcall mov int insb aam inc xchg jnp xchg mov rolb add and iret add xchg dec pusha fldt dec fwait jno loope pop lds ficoml dec test lods outsb lock fisubr cmc mov adc xor xor loop rcrb push pusha add jbe lds jle mov aas push call pop clc movsl or (bad) in mov pop fwait inc nop lahf push pop lea gs sub push xchg mov sti sub jbe cwtl jae pusha xchg xorb sbb pop (bad) sbb les jg mov les clc mov xchg adc cmp add test daa stos mov jg sti nopl movsb jb xor pop stos jno cmpsl sbb pop repnz xchg jnp xor aas jae (bad) jge lock sub jnp (bad) les or rclb sahf push pop add xor out mov rol fldcw cmp inc jnp mov sub and movlps lahf loop add dec mov rcll sbb mov leave inc add or fnstenv mov popa cmp jbe add in xor mov dec push mov (bad) (bad) dec (bad) xor xchg rorl subl pop test xchg mov adc pushf dec and movhps into inc adc pop and orl or clc mov aas push rolb (bad) aam stc fcoml aaa push inc or mov dec push rclb lret in mov mov sbbb mov hlt add dec pop mov adc xchg sbb xchg or xchg ficomp test add cmpsb ljmp jbe pop aam into mov (bad) xor sar push adcb test rcl insb repz and mov imul sub int and pusha mov mov rcrb and xchg push adc mov leave dec adc add pop mov and cmpsl pushf stos xor sub pop test pop adc or lahf addb pusha push in icebp adc nop je cmpsl aam xchg nop (bad) lods xchg mov jo,pt sub pusha or adc jg lock mov mov push mov push jns add mov xchg loope adc mov push and imulb lahf sub sub jl aam add rol jo aas and in xor mov mov loop dec test jbe test test or jno insl leave outsb sub lock out jb xchg ret mov mov mov push adc lock (bad) test test dec adc pop push cmp int3 enter xor add std inc loop or mov mov daa dec roll stos add inc test xchg jle sarl (bad) mov pop jge or push jne loopne int3 fstpl pop adc adc push and pop mov and call inc outsl repnz cltd dec mov in loope fdiv or push xor decb mov mov dec pusha xchg arpl call push test xchg fld arpl push or pop xor push jl cmp stc jb push jge inc cmp xchg ds or inc fstpt inc cmp pusha (bad) pop cmp iret icebp adc arpl jge add je loope cmpsb adc sub or mov or sub test andl add repz fmulp add adc out xchg subl mov stos add or mov lock popa cmc imul movsl and mov clc cmp mov hlt inc pop js in or mov xor nop add and xchg clc pop push cwtl lds add leave divl jmp xor push sub cmp arpl mov add adc mov mov cmp xchg or arpl or mov sbb (bad) pop lds sbb lods scas xchg and icebp int dec inc jg or es mov push xor pop pop add jge scas or es push test inc jo push adc rcrl xchg stc inc stos and cli xor lods rorb test insb xchg push sub pusha mov dec scas dec aam and add ds push add pop sub lahf bt or pop add push loopne imul cwtl les inc inc mov push popa outsl mov lock sub push xor pusha mov ucomiss outsb jmp xor lods call sbb cwtl sub rcrl and mov das adc les je cwtl sub pop sub mov addl inc je fldenv mov xor fcoms icebp aas cwtl dec sub aaa arpl subb inc stc add cmp xor sub pusha (bad) loopne push pop leave adc add xchg aad je xchg cmp and push pop hlt inc hlt out mov adc xchg mov or shrb rcrb or pop jbe (bad) test sub jo xchg inc inc int3 sub adcb or mov or popa pop scas loopne dec mov mov add leave imul jbe add pop clc add push mov xchg jns or lret push (bad) int3 cmp rcll fadds pusha mov js insb test jnp ljmp das adc inc inc cmpl frstor lods test xchg jae mov fstpl and loop push xchg cwtl je (bad) jne js push jae or movsb jl jno add xchg xchg mov aam adc inc jnp f2xm1 add outsl mov push dec pop sbb insl nop loopne lds jge fisttpl gs add push js add nop repz je mov sbb adc mov push push inc cld add add or or push cmp and fist sbb outsl or cmp js mov sbb cmp xor jp and cs loope adc mov nop fs push sbb enter test sub std xchg cmp xchg mov (bad) push pushf inc (bad) push test mov pop pusha movsb cmp test jl dec add sub shll lret lock scas test add pop jnp shrl adc add scas rcr push push mov andb lds repz rcll lret mov clc sub lret mov push and lock ret mov or cmpsl (bad) in mov xor mov pushf movsb icebp (bad) fsubs dec xchg inc and dec dec imul push mov dec insb lock and cwtl mov es xchg rclb orb pop into test xchg xchg xchg imul jl pushf lock inc ss incb mov or xchg les (bad) pop mov lock dec mov shl mov add mov movsl fistp inc cmp mov cwtl les sbbl clc lret sub add in jmp sub sahf dec xchg (bad) in pop cmp push jne mov sti aaa xchg push mov pop gs lock lods roll push stc js rcll (bad) mov lods pop inc clc movsb aas enter pushf add mov lret cwtl xchg dec outsb inc or adc pop add test pop test mov xor scas ret add pop sub xchg iret imulb pop mov mov add subb imul aam lock cmp test hlt jg fiadd sub inc sub inc add jnp xchg fild add mov imul xchg or mov mov push dec pop adc enter inc sub adc cmpsb and popa jae lods outsl cmp out mov add and mov test fs cmpl lods loop adc xchg in test cmp jp (bad) lock (bad) out sub jae dec dec mov jl mov nop jg or stos inc push jl ss test mov movsb out shlb add inc mov inc lret push subb or push add or (bad) sti add pop xor sahf lret push and jle jae jnp adc add push push adc lret push xchg dec jl mov pop inc in jbe jge icebp sbb test fild jmp arpl scas jno aaa xchg jae add clc add fs and sbb add lahf adc add jecxz clc fidivr cmp xor js int3 fisubrl xor pop mov and ret decb mov sub xor xlat rcll mov mov push xchg add inc add cmpsb mov jp and movsl mov shrl fwait in sub add inc mov and je out pop scas pop push and shrb addr16 push lds movsb mov mov add sub lcall sti les jmp int3 push test cld movsl addb mov or xchg pop add js stos add lahf rclb pop sub call push jns add jmp and push or push test dec jecxz pop xchg mov mov popf pop inc rcl sbb icebp cmpl aam or xor test adc mov loopne cmp mov xchg sbb sbb pop mov daa sub push hlt push pop adc inc jmp mov loop lret or xor push fmuls add sbb insb rolb sbb clc data16 jp pusha push adc outsb int or xor sbb xor stos adc cmc xchg xor out jo data16 xchg push pop mov scas sub xor loop je test xor jbe pop or mov xchg mov cwtl stos nop fbstp mov inc ds mov in jbe addb or mov pusha pusha mov mov movsb or or adc xor daa xor inc inc aam (bad) bound fnstsw out subb xor iret push add or addr16 imul out or stos and cmp xchg aam and or jns add adc lahf mov fnsave int3 mov ret jmp rcrb or cmp inc xor (bad) lock loopne cmpsl popa pop xor adc cmpb cmp divb bound stc pop addb pop jno or xor dec cmp sub and and pusha sbb sbb xchg std sbb jle add arpl mov mov mov mov ljmp mov js xor xchg jg in insb test and dec cltd xor into inc adc mov idivl and subl mov rcrb xor adc jne dec or out cli dec mov rol pop jbe push cwtl add push nop xchg jmp mov add insl daa push addb pop fucom nop push outsl push test int3 and adc dec icebp adc adc incb hlt sbb push add mov mov sbb xor insl hlt pop mov test cmpsb aam jbe mov mov outsl not mov mov je mov sbb inc out mov adc js (bad) daa lock sbb test cs push dec fmuls les cs test dec adc and out pop xchg xor mov jmp mov enter clc sbb insl adc (bad) pop jo jnp stc fmuls or adc in lea add push push xchg arpl and loope addr16 and pop das dec and adc inc add adc cs stc or arpl (bad) jns pusha fmul push push cltd sbb xor mov xor repz cmpb sti inc adc mov pop clc js (bad) sahf std sbb sub xor sub popf add cmp lea lret iret out aaa xchg push lods or jo sbb stos sbb jp int3 add or mov push or andl rol mov popf mov cs dec jl stos mov mov push pop hlt ret cmp mov (bad) test popa or enter dec je aam mov (bad) aas aaa dec lret loop into mov dec decl mov and orb fs xchg addr16 mov fldl push hlt les loope stc pushf sbb pusha sbbb cli out mov jb insb cmp repz add mov add push les sar cwtl sbb xor mov pop inc orb xor and insb enter pop mov outsb sub mov inc add lods mov js mov adc ds aad movsb shrb xchg enter bound push push jmp fmull mov jns,pt sub int3 add adc xor add in bnd shll outsb inc xor (bad) xor or and mov or sarl movsb mov cmp jns and lcall push ret add mov xchg add push mov ret push rcl loope imul fistpll push sahf dec inc jl fcmovb dec xor dec cwtl imul jl cs mov inc test mov mov in (bad) mov test (bad) pusha fnstsw mov mov fsubrs mov rolb pop (bad) dec scas call lds mov fwait push mov jb xor push icebp xor js mov cmp xchg pop mov mulb add xor sub pushf and outsl sub add add lock mov jne push mov jae or push mov repz xchg mov adc ret pusha pop into sub adc pusha add sbb fcoms or sbb inc push push mov adc stos add (bad) mov pushf sar loopne lret inc dec push jne lock ds inc sub sub add stos loop aaa xchg cltd nop icebp jbe roll icebp and push xor and aas mov xchg in xchg or mov lods or (bad) mov out add push sub xor jno (bad) xor mov loope or jmp imul clc dec testb scas clc in ficomp mov movsl and pop sub daa cmpb clc fist movb adc mov pop adc test xchg stos sti sub les and aam rorl in pop dec test rolb fstpt or mov test call std adc sbb faddl cmp loopne or pextrw jp jle xor stos inc or sub xor push sbb cmp pop pop outsl daa rclb sub inc movsb add mov xor sbb cs loopne add clc add arpl call inc cld shlb sub sub lods js hlt mov add and popa into pop and push sbb repnz cmc push add and and jmp insl in add ljmp sbb mov movsb adc and xchg push clc add loop fiadd inc xlat adc lret sbbl pop xchg lea mov hlt lcall lret mov mov in int mov je sti les test cltd cmp pusha xor push cmp fstl faddl adc push push xor pop (bad) jne test mov lahf xchg in aaa (bad) andb jae sbb mov mov outsb inc fisttpll sub pop cld cmp int3 push add lods test fstps scas gs andb mov test mov or cmpsb insb loope lock nop add (bad) cld adcl dec (bad) adc cld rcrb insb mov push cmpb aad and clc aad push mov loopne mov clc repz (bad) mov mov test (bad) repnz es in dec push stos mov add push popf in sub inc mov dec test enter les or mov push xchg and test subl adc dec loopne addl xchg and jno add mov aas mov lret les orb fadds in add xchg jl cltd jno nop je mov add popf call xchg ret int cmp sbb mov and mov or inc call jp sbb js and test mov lea ds mov pop cmp roll xorb sbb insl mov test inc pop sti inc push push (bad) xlat lcall add cltd jne inc fldenv mov xchg out inc xor lret jp xor ss std jne jb pop dec daa adc cwtl inc mov in inc subb xchg mov hlt xchg lock xchg pop ror adc add aas cmp sahf scas js cmp test and fadd jo dec enter loop dec sbb add sub (bad) pop jns in cld add cld dec imul adc xor icebp jl movsb rclb pushf mov sbb mov cmp nop adc je cmp mov dec cli hlt jns cmp popf sub (bad) xor js jne add mov cld pusha rclb lahf push sar push adc push sbb xchg lret fnstenv je cs cwtl cmp mov pushf fmuls arpl dec add fcomi sub pop and add je mov push test in sbb pop cmp xor add pop loop jl test add jb mov int hlt xchg out dec popa std daa push fadds inc (bad) or test pusha cmp dec mov add cwtl add int lds mov clc push in inc add sub sub sbb rolb sbb and stos jo (bad) xchg lods test dec jl nop add ljmp mov mov fnstsw pop sahf push add push roll adcb adc lods cwtl repz rcll sbb es adc fdivs add popa repnz loop ror sub int mov add aad pop pop int cmpsl leave xor add mov mov pop inc pop pop sbbl test sub movsl sbb sbb add orl rol faddp push and xor mov jb xor sbb sahf dec stc add and scas test inc dec mov mov adc inc rclb lret add or (bad) (bad) test dec mov inc mov les (bad) pop bound leave cmp cmp adc xchg ljmp mov movsb outsb cli (bad) xor sub push jae aam inc jns mov shrl jmp dec mov cmp leave gs arpl in lret subb xchg xor inc mov push sub clc lods js aaa pop pop inc insl pop loopne xchg or mov add or push dec fwait (bad) nop xor cld and mov mov rclb xor fild xor outsl (bad) popa or or dec (bad) mov xchg xor pop sub cmpl push cwtl pusha rol iret adc jo ror cmpsl and push dec sub sub js dec mov call add lret out push mov mov rolb pcmpeqd and push or dec bound xor dec and or icebp push lock add adc insb mov sub xor push push arpl pop inc add sbb mov jb jecxz pusha dec js call movsl mov mov adc mov add adc jno add mov xchg sbb dec xchg (bad) in bound xorl pushf enter cmp gs mov lcall in add fisttp pusha xlat sbb pop call xchg xchg add iret sub adc xchg mov sbb cmp dec lods (bad) sbb jb adc sub and pop icebp xor pusha sar adc andl cli cmp imul pushf test (bad) cmpsb mov rolb sbb stos (bad) out cli nopl pushf mov dec aad adc rorl lods add mov inc mov pop pop movsb sub dec je aam dec fcompl cmpsb mov mov add popf xor aam push pop push repnz fisttpl pop pop sub mov add loopne scas mov sub les mov xorb jmp ss dec sub mov scas inc add xchg push push adc xchg mov adc fisubrl repnz xor xor fwait out pusha add jl inc mov lcall push dec dec scas sti bound and xchg mov xor fwait (bad) mov push add adc jo inc (bad) loopne mov sti enter adc sbb mov pop jo jmp in adc fs and out jnp pop faddl sub pop insl iret cwtl sub lds sub mov add jle push (bad) (bad) mov sub and orl sub jmp add (bad) jecxz add push jb push aaa adc fcompl push and xorb in fimul outsb les jl jno add mov ret hlt mov test stos fild adc mov std mov es add jb ret jl add sbb cmpsb sub add daa cmpb data16 in and ret lock ljmp pusha pop or clc std popf inc andb outsb and cli dec js inc xor push push pop or dec pop es imul dec push (bad) adc inc push fildl pop cmpsl aas inc dec adc sub pop xor sbb xor iret loope push lds fwait je and mov dec jno enter adc jnp fadds or pushl pop je mov or int3 aas mov push add out cmp in clc push inc fldl sbb jg lock (bad) (bad) xor and addr16 add arpl cwtl je flds jae lods xchg or fsubrs push pop test push jg movsl ljmp imull cs gs add repnz setae mov sub out cmp or test out xor sub dec xlat scas into inc mov sbb fildll sub cwtl and xor or outsl aaa test mov jno dec xchg add int3 xorl mov pushf sbb xchg test popf xchg mov aaa rcrb mov push clc push lock cmp pusha add pushf aas inc test in mov jl adc pop xor outsl adc js pusha push insl cwtl bts inc mov add push js add pusha push fimull xor and cld rorl bnd pop and mov aaa jmp cmp push jge push and aam call loopne push pop push sbb xchg adc ret add jns xor xchg cmc popa adc int3 nop sub mov pop shll frstor shll mov sub (bad) fdiv push mov (bad) adc add dec stos or xchg adc xchg int rclb pop outsb inc add xor jne test mov outsb inc fsubr xchg movsl or inc dec push pop pushw ss ljmp stc mov jg add xchg jl cmp dec mov lock pop daa daa sbb add notb adc xorl (bad) adc adc or aam push pop xor aad loope jle or and pop sbb lahf (bad) mov aas mov mov or dec fsubr cld dec rcl pop or cwtl cmp rcl into push (bad) (bad) outsb push jb sub jmp ljmp inc xchg das mov iret movsl nop addb sbb cmpsb push xchg and push or loopne push jp add mov mov add int xchg mov jecxz leave adc les adc jmp repz add pop inc aas add mov xor sub adc imulb aas inc jl jno ljmp rol add jp call cwtl sbb lock mov sub sbb inc jp or lods sahf pop mov ja stos xchg repnz mov mov jbe mov imul es xor xchg leave add adc or mov push xor push xlat mov fadd call adc inc add imul adc out adc jb jp xor loope push aam sub pop jnp cmp (bad) leave or sbb add adc (bad) je add or dec adc insb inc mov add test out adc sbb insb push lcall and js fstpt test inc enter mov lds shrb push out sbb add jmp scas sbb pop inc orb xor sarl adc loope jns add jmp fistp out add enter enter mov or in mov cmc imulb push xchg push mov enter lret addb (bad) jbe push cmp fbstp xor add mov sbb movsl call mov xor cmp dec fild add lods call xlat bnd ds mov mov cmp xchg mov jae xor add aas mov mov ss int3 jns lock lahf sarl sub movsb leave pop int push clc sub push out mov mov aad mov and push repz mov add icebp jle mov sahf push xchg sub mov xchg fnstenv jmp mov sarb add imul adc jp mov add stos pop fmul aad aam pop dec or lods push (bad) sub add andl adc sbb jge clc icebp cwtl mov ss mov xchg adc sub and mov mov idivl dec lods in mov lods and sarb orb add mov pop cmp mov inc push cwtl inc mov pop sbb pop ret shr sbb test mov movsb mov push adc iret or movsl enter popf and cmp test popa push sub lcall cmp jmp sbb pop clc nop adc (bad) sahf test cld cld not pop in scas sti call inc adc pop lahf jle push (bad) and sub xor lods pop inc sarl in fstpl cmpl or popf fdivp push pop jl pop add add cwtl rcpps xchg lock test sbb jo sub adc jecxz push push nop jo sbb aam or js cmp add jo mov call or int3 xlat add or inc clc or or (bad) stos ret les adc pop add jb push enter sarb inc ja adc fs loopne stos cs sbb cld out add mov lret add push jmp iret pop ficom jnp cwtl push lea jnp xlat mov cmp pusha (bad) shl jbe mov xor sbb popa mov inc inc rolb xchg add ja fdivrs mov call rolb test xor in fiaddl mov xchg inc add cld jmp jbe repnz add fwait add or or add test mov inc xor push jae push xor pop sbb int adc imul cwtl ret add pushf dec scas push xchg dec ss in and loop aaa pop (bad) lock mov push xchg add jb pusha fcoml xchg fbstp pcmpeqd or test int outsb adc pop inc add or cld (bad) or push ja or mov add lcall in sti add ss and out or pop mov in pop or shll add out xor or sbb cmpsb pop cmovl or cltd test repnz das idivl js mov jno shll add into mov and repnz aas push mov daa add add jo inc pop scas repz xor je pusha xor push xchg push test daa adc aam inc mov rcl dec mov outsl frstor int3 pop cmp cs jo adc shlb mov xor sub repnz add cld push push adc ficom inc repnz test pusha jb scas rol and ret ficoml and test jg mov cmp or pusha xchg inc int3 or sub add aad jmp rorb addb pop popf in lock test (bad) mov add sbb je or jb sbb xor push cmpb dec xorl (bad) inc add stos lret jbe mov inc lock mov jae mov dec dec in lock adc add pusha cmp sarl xor cld mov pop dec rcrb out daa iret lds orb dec inc movl adc ds inc mov call cmp int3 xor inc int popa ret adc cld cmp mov add test sub test inc std jb add nop mov and push pop add sbb in in pusha push and add fist ljmp inc lcall adc jb and lahf adc and add (bad) dec cmp inc movsb cwtl add je cmp push and (bad) loopne subl inc push dec jg add xchg push inc add fwait loope into out gs dec in jle add cwtl pop aam jnp pop lods push cmp jns xor pop add xchg cmpsl and loop pop add dec insl daa push mov dec dec push push xchg add insb sar lods pop pop mov inc es ds pop inc push adcb decb xchg test xlat add mov clc add xchg xchg inc mov inc or xor aaa into les ror mov js jbe pusha adc push and loop cmp inc mov pop les test mov aaa dec fidivr add xchg lea ret pop imul (bad) mov inc and mov push call jne inc add pop rcll loop adc (bad) jo jmp jl dec sbb pop (bad) popf insl jl les or mov jl ja pop inc inc insl lahf and scas sub xlat mov jge dec add mov jmp jne cmp xchg sub add adcb stos adc (bad) imull fsubrp leave in add cwtl adc push mov ljmp clc add xorb jmp in xor add pop (bad) nop pusha mov ror dec inc out (bad) xor in lea sub fnstsw add into inc jno rcrl popf mov rep adc add pop and jo sbb xor repnz fisubl ljmp add in adc fs int3 mov cmp add mov roll add (bad) stos lret nop jno outsl push or lea clc adc mov push or mov dec push xor mov jns dec clc jecxz repnz pop xor dec xchg and sbb je jno sbb lahf out loopne mov cmp xchg aam fwait add sub jae xchg rclb add imul hlt pusha cmpsb nop push or and add sub adc sahf push xor lods add dec out aad and jle jbe pop negb add mov pop sub movsl cmp js fs add dec add jb lcall mov pushf test xchg fwait jg in insb sub lahf jo add jp gs nop push cmpsl sbb sbb fild ljmp jnp pop mov sub mov add arpl leave mov adc and mov cmp sahf dec bound clc pop dec pop loopne lods mov sub xor inc rcpps mov sbb in fsubs cmc imul negb add shrb sub mov inc es (bad) inc inc fwait in lock add mov xor pop inc stos push pop popf jecxz int3 fsubrl dec cmpb or and push hlt mov and or clc fiadd aaa or adcb in jne cmp popf or xor add cli rorl in push sub or inc add inc pusha fs repnz dec xor rcrb push fcomps ds or cmp xchg add sub push mov rolb fidivrl subl loop sbb jp add and js lret iret stos adc inc xor lds pop jne add sub pop nop add enter ret loopne jne add fs add mov push shl mov dec adc push or cmpl adc sub add xchg mov add andb cmp push lahf (bad) dec or or mov cmp bound (bad) jg sub test jo gs adc push xchg (bad) cmp ret outsb push cld lods popl dec pop ficompl loopne fistpll add adc cltd sti pop xor std or dec xorb scas pop pop dec ja sub sbb jmp pusha je into mov inc fisubl sbb rclb inc adc daa sbb clc jmp sub sbb addr16 push orb test fcoml int3 jae add (bad) nop xorl mov xchg aam jmp add jb xchg add rorb adc inc fs mov data16 stos jg xchg rcrl rcrl add cwtl out jo add xor mov mov mov leave fist xor pop and xchg mov or sbb add push repz jp loopne sbb cmpl mov add and cmpsb add jp push decl xor cld add lahf and scas mov add mov or insb mov inc jns xchg sbb add add stos nopl inc orb push sti adc or (bad) insb xchg (bad) adc add jmp loope sub in cmp or add js inc mov pop fwait pop stos add push ret sbb lods sub sub call fstpt mov das mov pop das (bad) cmp (bad) int popa pop test jno pop sbb pusha and xchg mov icebp out dec sbb or int3 inc roll add (bad) (bad) cmpsb cmp jnp inc enter add sbb insl and xor not add mov push cmc or jne add (bad) add rclb or dec adc cmp rorl cltd inc xchg jbe out sbb bound pusha mov jp loope loop xor ret adc aam aas addl sub push xchg hlt push and std mov movsb shlb insb cmp sbb xchg xor xchg arpl es add andb add sub jecxz fwait das nop ret push xchg add adc add cmp or loop into pop xchg sub js rcrb sbb sub sbb mov (bad) sbb repz pop cmp xor fcmovne sbb out aas dec push imulb push imull xchg inc divb jmp icebp adc dec add es addb enter sub outsw enter mov nop add push and pop hlt xor movsb lds ss jecxz popa or pop (bad) cli sub and add (bad) rcll adc (bad) (bad) cmc inc add mov lock (bad) sarb mov idivl data16 lock lret je mulb push xor jg dec movsb add out clc stos sbb xchg mov nop mov mov xchg jo add pop push sbb fidivr mov and pop rorb dec outsl mov nop into (bad) call in sub fidiv xor sbb add iret add jge inc jb jp sub mov ss xor sbb sub push out int3 pop add or ja pusha cmpsl push jmp inc pop arpl mov adc sarb scas rcpps sub pop dec pop xchg mov mov add push mov or sub ds mov add sbb call and stos push inc add pop outsl xchg mov punpcklbw sbb and inc add xchg ja jo xchg push sbb cltd lods cli lcall add orb test mov sarl rorl push out int3 push pop jl pusha or inc xchg xchg cmp fcom jns xchg (bad) shrl adc inc pop mov xchg (bad) sbb adc int adc mov jnp add push mov and ss push cmpsl sbb out (bad) jne xor sbb lret mov sarb shrb in enter sub xchg jl push push loopne cmpl dec and sbb stos imul mov cmp inc pop pop daa sbb fwait outsl push add addr16 push jmp pop add add imul xchg pop mov in pop push xchg bound jno sbb pop add test or int push inc xor cmpsb xor fcmovne mov dec rcrb subl adc mov cld sbb inc sbb in add lods sub mov loop mov test addr16 inc lcall mov movb pop push rcll jmp les les mov lods aas inc clc xor (bad) shlb xchg sbb push cmc inc push jl xor sub add lods je pop xor arpl ja cmpsl add inc pop test push xchg dec cmp out test fisubr or sbb subl jbe repnz or dec movsb mov imul sub xor sub lret dec pop push subl popa jl xor cmpsb mov orb stos jmp int3 jb add xor or nop add shlb pop or test mov and popf into pusha or add mov mov in add test push jnp sub call dec mov inc add jno cmpl cmp xor sub sbb fdivrs mov rcr xor jmp xor add roll mov cs dec jle test or dec cwtl sbb or test dec jbe add lods std jnp dec cmp dec lret into push je add jge imul sti sub divb dec mov std (bad) lahf dec or or push clc outsl ficompl stos or std mov sub adc fildll mov rorl aaa icebp inc ficoml js add xchg inc add dec adc xchg add loopne xchg sbb sub pop inc or dec or or adc sub int3 jle xor dec sbb cmp jno mov sub add push clc mov mov jns adc (bad) scas or add popa mov lds jne jl or into cmp cmp cmp es mov les mov cmp es pop inc adc sub jo cltd sbb pop inc push push (bad) sub pop movsl loopne mov pop xor dec inc mov adc ja shlb pop lahf adc xor out adc test xchg pop mov sub add xchg popa imul mov test out lcall inc xchg sbb les std mov pop add push leave pop xchg push pushf dec js add inc decl and sti and inc nop or sbb mov imul insl adc push dec adc and sub imul xor mov insl dec fiadd roll add xor jns std xchg xchg (bad) dec in xchg xor or mov jne adc pop xchg (bad) xor out push adc xor xor adc pop fstps sbb ds xlat add shrb push ds popa lcall pop mov mov fs xor das mov test aaa lods xchg adc sbb test (bad) rorb mov and and cwtl mov xor jecxz movsb fmuls fldl lods cld mov mov inc icebp sbb xlat pop ds cmp sbb xor aam sbb xor xor jo jne adc repz decl icebp jg fs xchg add icebp xchg shll inc adc hlt pop sub loopne jne add push push or push mov sbb add movsb stc and jns das (bad) pop adc inc pop sub pop out xchg adc adc and loopne dec (bad) jmp aas pop push add xlat mov adc add dec add out std push cmp jp jb,pn sbb mov lret enter adc lret addr16 fsubrl repnz out imul pop pop xor adc bound dec fs test repz cwtl rol sti roll aaa imul pushf fiadd int3 adc js fwait out mov jne dec pusha and daa stos push sbb mov dec pusha mov pop rolb mov and xor xadd adc hlt out mov xlat aas loop lahf sub dec mov sbb jg loopne fs lahf fbstp add mov ss xor or mov mov dec adc xor lds mov pop add xchg leave mov je push cltd aad lea add or adc ljmp push out xlat sbb adc pop xchg pop dec cmp int3 lret mov jb lods aas adc roll and mov lret add loop mov clc adc mov pop popa xor sub shll das sub cmovo pop loope insb sub or jge nop fldenv jne push pushf jnp xchg pusha out xchg lret or push xor pop push add xor jno test (bad) sbb daa push or jno ret in inc (bad) insb cmp add mov int3 xchg jbe add fwait dec or sbb aad inc push push jnp sbb mov push cmp into scas cld rcll lds flds cmpb mov inc add xchg clc ljmp ds aam xor sbb inc xchg nop and insl xchg js cli jecxz aad (bad) add stc mov sbbb jne aas dec leave loop mov enter sub es faddl imul cmpsb cmpsl xor (bad) aam (bad) jp test push (bad) push jecxz mov xchg movb xor cmp dec (bad) cmp cwtl xor cltd in dec daa enter cmpsl lods pop cltd mov push into stos daa adc xor inc push call inc xchg jge lods inc cli adc negl hlt pusha (bad) pop test ja mov sti icebp mov push sub icebp inc adc xchg repz mov (bad) xor cmp hlt adc xor lcall into inc aad push pop push sbb sub ret push mov push into jle sub mov lods (bad) push fnstsw add out js and bound aam jno (bad) es xchg enter movsl loope cs add add (bad) xchg sub aam int sub fucom (bad) xor lock insl add push sub mov call sbb in sub add pusha xchg xchg inc mov stc inc test add jecxz sub pusha jb and js mov cmp int3 xor js mov sbb or lds dec lcall pusha jnp bound clc pop iret add in addl push sbb inc cltd mov (bad) pop cmc push adcb adc inc sbb mov dec cld add cmp xor push movsb mov or jg mov cli lahf pop enter xor xor sbb mov test adcl leave pop lcall add pop xor (bad) lret or pop cltd cmp leave push mov sahf or enter push add mov mov and and ret pop dec ret jecxz sbb or add mov int cmp daa lcall add mov inc fs in movsb lods mov mov fnstenv push test rorb add movsb add pop in sti push das js xorb cwtl (bad) xchg (bad) std dec pop and sbb test adc pop add pusha sbb arpl aad sti jne neg sti fs roll lcall mov clc add push push es pop and jmp add dec fdivr xor push rol sbb inc (bad) pop cltd xor and jae lods mov orl icebp shrl or dec and xchg xchg sbb popa mov shll insl push add or lods inc and scas push cmp addl pop test mov ret push insl sbb ja cmp iret or and push jbe movsb sbb sub jg ss jl outsl push lret dec or daa xchg xchg push pop js,pt pop add imul leave and add or outsb dec cmc ficomp into daa pop cmp std cmp test cmp inc (bad) les (bad) cltd andl iret in into sbb jbe add scas or lcall inc int3 adc inc sub enter push inc fwait rolb adc or jo adc out mov mov loope in jge pop mov iret cltd hlt (bad) pop sub fstpl inc add inc sub ljmp add pop jae outsb pop xor rclb cmc loope inc pop daa out hlt mov leave add push andl sbb cs adc or cmc cmp inc ss lds int lea (bad) mov dec and jecxz rolb dec popl adc push lock pop add sub cs xchg (bad) cld add xchg mov or and mov dec enter and test xor sbb out mov and xor mov dec fistp push and outsl mov ret cmpl scas pushf jmp adc jo bound inc inc sbb lea repnz jge pop add repz push gs adc inc dec add pop add jmp cmpsl pop jbe push sbb das (bad) and popa mov aad adc ljmp in sarb inc inc lahf cltd add add imul xchg inc subb inc jge fist xor add pop push arpl add movsb pop sbb xor fidivl and lret push and adc push jo pop mov jmp or adc and mov bound jle xchg jmp push sub pushf jmp and ret or mov jl add mov cmpsb sub cmp or inc dec inc dec movsb jg add xor les cmpsb into add pop pop frstor shll cmp xor xchg inc inc jnp inc adc sbb fisubrl sub pop dec pusha mov sbb adc pop sbb leave mov cmp movb int push (bad) pop inc sub or scas pop sahf in push push psubsb les out cmpsl xor xchg rorb lret cvtps2pi jo aam shrb add jg dec add cmp xor xchg dec pop inc insb xorb xchg popa push dec jns mov call sub add mov inc mov inc rolb loopw movsl fld cmp jmp cwtl sbb fldl xrelease mov jmp adc sub lods add repz test loope xchg inc add das loop xor fadds mov pushf dec and ss mov enter adc pusha lret mov je fstl xchg fcoms sti xlat jp xchg clc dec inc and jbe aaa dec nop sub dec xchg fwait insl mov ret inc dec or fcomps ja cmc xchg adcb rcrb out ss pop in jbe adc push les push decl movsb test repnz adc inc cmp mov scas add cmp push cld daa push xor push dec xchg movsb adc lock pop (bad) jne add jnp mov mov dec pop pop test pop pop sbb lea push test stc daa jne push or push icebp test xrelease xchg pop leave repnz add addl mov daa pop xchg loope mov adc push pop imul jg inc dec add mov and xor shlb dec inc adc push xor ljmp add adc cwtl jl cli mov xor xchg adc repz out mov dec mov mov and rol push or and or push pushf xchg mov jmp ja (bad) data16 dec stos inc outsb inc test sti cmc cmp xor adc pop shrb (bad) xor xlat sub xchg enter jle mov call and pop add mov pop mov pop movsl mov or gs mov fistpl aas or inc dec add xor imul push jae scas mov pop dec adc gs mov test pop xchg test (bad) pushf cmpsl jle jne rclb repz pop xchg cmp ret xor stos les dec sbb hlt sub mov les xchg addr16 mov mov pop mov xchg out call into add cmpl and sbb and jmp xchg and mov xor lret add pop bound sub cmp pop test (bad) add cld or jp mov cmp pushf stos mov (bad) jae add mov (bad) clc jbe popf pop movsl mov or pop push mov int3 xor xchg jbe in pop rolb mov mov aas notl rclb out pop push add xor pop push dec dec cmp dec inc dec sbb and jg add (bad) pop mov ljmp mov pop xor js pushl bound mov pop (bad) das or pop stos fwait sub inc cmp pop push aaa pop push cs hlt or push sub mov push pop and jmp inc andl test and push aaa push dec pop cmp inc jno xchg (bad) sub idiv xchg shrb xchg dec xor dec pop jecxz push push data16 cltd popf iret jg push mov add cld or adc in and mov xor mov lret nop dec scas xor pop adcl inc mov cld dec imul lret push and stos adc pop imul dec adc js sbb (bad) aas outsl stos inc xor cmp movsl pop lcall repz push jmp xlat pop addl stos push pop subb aam xchg aaa into mov lret pop mov push sbb pop xchg popf mov and or push das cld bound sub pusha push pop imul push xchg mov lea add repnz stos (bad) xor hlt call pop dec pushf or adc or fistp std jbe bound push mov jge test or das in adc jg,pt and in inc xor test pop loop jo scas sub pop stc push je test mov pop int3 sbb fs jg push cli or adc inc mov add insb movsb or pop sarl mov les rcll adc mov cltd decl xor clc pop lret dec push rcrl xchg pushf dec inc adcl cmpsb mov push sub call (bad) mov pop jmp sahf pop adc and adc add mov out pop getsec xchg xor icebp lret cli test fcmovbe dec push rolb mov movsl shr popa dec push xchg mov jmp and jb (bad) xchg adc mov test and rcll dec xchg xchg decb xchg jp ja jbe or fistpll adc sbb and pushl dec mov lret rcl inc loop insb adc push pop fisttpll sub or jp pop icebp jmp push dec adc xchg lods jo imul loope mov shr add pusha dec and jg cmpsb dec sarb mov lcall out push pop (bad) imul xchg push popa dec ljmp sub dec push rcll jmp sub and das push xchg adc jnp fdivrs int3 mov bnd pop cmp clc xor pop add outsl jg loopne fadds push push sbb xchg jae xor push mov mov (bad) xor lret add lcall inc pushf inc outsl push push cmc and stc inc xor adc mov xchg outsl and jle xor imul push enter cmpsl fs add fidivl push (bad) lods mov mov shrl je leave add fwait sub idivl mov and ficoml (bad) or mov cli sub or addb sub aaa lds fbld adc (bad) pop lret loopne loopne add inc loop cmp jmp hlt sub jne bound add orl or dec pusha mov imul pop add stos cmp dec and addl pop pop jb mov xchg jl or adc pop push sub xor pop and and out andnps sbb lods cmp pop jns pop pop jg mov add pop into les add dec nop jbe push mov xor pop fistl lahf add nop cmc dec push movsl add and shlb add and orl cmp inc orl push push add pop pop neg dec xor in movsb push pop add arpl xchg (bad) popf push sub mov and mov cmp fwait sbb push jae aam pop repnz out jbe div or mov push add jnp imul add add pop stc shr es add push outsl in movsl arpl or out popa je imul jae lea (bad) jnp pushf xchg aas sub das clc push add leave xor mov outsl mov inc adc fcomps jnp dec cmp mov rorl in pop mov gs xor jge les dec lret or pop (bad) lcall push or loop xchg jb jmp loop adc lret pop pop mov cmpsl bound mov mov cmpsb sbb out jge cmp adc and jbe dec test out xchg mov cmp or pop cmpsb js pop pop mov call es sbb bound cmp stc enter and pop sub shr jg dec pop arpl xor jp sub or xor jg mov stos (bad) adc dec adc (bad) adc mov pushf jmp int3 pop adc fildll loop enter adc out pop in adc mov aad xlat adc daa push dec jbe aad fidivl push outsl mov shrl sub repnz and push cmp jb inc in mov pop push jo fiadd inc fnstcw ret dec add movsl aas jo adc nop popa sete pop sub in mov repz out jle addl loop dec ror inc mov adc imull push adc jg xor (bad) data16 fs adc fs push dec push xorl (bad) outsb inc in sbb push jl xchg in dec bound decb xor ja,pt imull (bad) pop sub push mov movsb jne jno ficomp inc data16 sub push mov and insl add sub out sbb jnp xor lods ret or repz push add fistl jns out pop xor cmp sti ret pop icebp inc push inc adc and hlt dec pop std jg dec pop rolb pop (bad) sub sbb fadds pop inc clc push int push jle push scas mov sti das shl pusha add pop mov or clc (bad) and push mov dec cmpsb loopne cs push pop lret leave add dec mov push sti pop mov mov scas in es push mov push (bad) loop jecxz pop dec jae popa push cmp jge out outsl neg inc ret shr adc mov and push push sbb and dec inc pop dec cmc (bad) pop or jne mov fbld push sub call fwait xchg xor or mov out add ljmp aam mov mov or or js pop jb in mov out scas inc xor (bad) cmc lret ja push fs aas pop daa inc pop cmpsl mov add stc sti ja bnd fldl mov not and add (bad) or rcll adc and push rcrb sub fsubrs pop push xor movsl mov inc and push mov rcrl add gs sbb iret dec pop mov dec (bad) jmp sub push pop std xchg lret inc outsl pop in add xor fildll cmp push pop mov repnz leave cltd push nop and add mov mov fisub mov pop stc jp or jge and add fs jae xchg add pop and movsb fistpll push add cmp lcall xor fs inc push aam xchg add push cmp (bad) mov inc mov jmp icebp movsb adc rcll xor push js adc orb xor add dec sub dec mov mov out dec add mov mov or into and push cmp lods pop add mov sub add pop xchg mov pop out popa sub jno jecxz sahf stos sub fs test in inc shr fwait lods pop lret adc pop rcrl push aas pop popa pop pop xchg mov out and add pop xchg jg loope ljmp push push sti mov fidivrl (bad) add movsb mov mov inc push pop push movsl pop mov arpl cld and dec add rclb inc (bad) lret cmp cltd aaa mov pop lret push imul out ljmp shl or nop sub mov in jnp daa lods and out call (bad) cmp cwtl nop xor and push jecxz xlat rorl xor out idivl (bad) repnz xchg (bad) popf and sbb jmp sub sub addr16 add aaa mov popf xchg movsb xchg ficom push push jo xchg mov xor mov out dec mov outsl push push sarl jnp mov jge aas jbe push jne sub cwtl jg movsb xor aaa std dec inc or hlt out in sub (bad) enter stos outsb cmp push (bad) jl xchg out in mov pusha jle jle arpl fmull mov jnp jae add jle xor xchg inc push out fwait stc mov pop ss mov daa push mov ret mov roll dec mov jmp adc cmp pcmpeqb and jae (bad) jg inc rcr mov or push jo pop mov adc add dec sub jle mov faddl or popa insb xor imul push repnz mov iret push mov push (bad) sub aad cli js mov pop (bad) jg sub adc pop jle,pn imul lret push adc int adc sbb negl jae mov mov xchg lret fstpl xchg daa push (bad) mov push lret push dec mov inc in xor jno lret pop push sbb and orl leave pushf push lahf or jg sti mov scas sbb mov mov dec stc adc stos cs popf sbb cli push aad or sub add rcrb int3 out in mov int add lods adc xor (bad) jge iret fwait rclb mov jecxz movsb fld das sub lock pop shr dec aad add cs fistpll loopne sub in inc pusha or mov pop mov arpl xchg dec xchg adc add add js add jnp or lahf ljmp (bad) enter fs jb jmp (bad) bound sbb pop sub jle cmp ja mov andl add rcrl mov in and adc jne addr16 dec cltd outsb pmaddwd dec push repz add sub jl jbe cmpsl fnstenv orl dec xor test or inc or or jmp gs aad jns xor mov xchg ficompl cmp fsubl push pop and jae leave xchg repnz sbbl adc int3 push jge push enter sbb lds aam adc fwait dec add sti jns mov pop and pop into testl inc push sub sarl (bad) sbb sbb or add pop fisttp mov push fistpl leave pop add pop adc out outsl rcl (bad) stos loopne out enter jmp dec sbb mov es mov jg push sbb imul inc out aas adcb adc cs push dec dec orl dec jge sub push pusha movsb cmpsl mov push pop into ficom ret push pop jbe add inc shll xchg push push add cs in cmp mov pushf mov mov sbb dec cmp adc aaa ds and pop es or fisubrl or sbbb jg push adc cltd dec cmp cltd js fs push shrb cmp add lret std pop inc dec dec addb add pop (bad) cmc adc stc pop mov movsl data16 orl out jns and pop push mov push arpl loop mov arpl add push inc mov mov xchg add pop push loop movsb in (bad) loope adc test pop imul testl mov (bad) sbb pushf das sub hlt aam mov xorb push pop insl inc cs xchg cmc outsl ds sub aas or movsl sub adc jnp fwait shll shrb es push xchg roll inc ucomiss call and movsb imul jmp pand adc adc jle enter mov add inc rdpmc cmpsl pop test imul dec mov adc fs push iret add pop (bad) jno and mov adc adc sbb loop insl and or or mov dec and loopne cld dec sub mov sbb dec jp aad and adc outsl cmpsl cmp cmp adc rorb sub outsl or add cwtl inc cs (bad) mov pop push mov dec jno (bad) repnz adc es jb hlt sub push push imul push mov in add mov (bad) and inc xchg in insl (bad) dec int push pop call dec add jmp les pop sar sbb es mov imul mov xor jg shl shr or mov daa mov pop pop mov es push mov ljmp add insl xor or not icebp xchg pushl add adc mov addr16 xor push pop add jae sarl mov lock icebp lahf mov les daa inc or xor jp neg and ja (bad) xor or inc xchg mov popa push xchg mov xorl mov adc icebp dec pusha gs cmovae loopne add sbb jns push cmp sti xchg in fnop daa cmp add xacquire dec pushf imul push or xlat cld cmc imul cs cmp dec jg inc sub push popf je jns cmp cmc cld adc push cmpsl mov mov jp mov pop jg and neg inc sub xlat clc loopne and pop dec pop jns cmp scas sub and mov loop xchg lret aad jmp adc popf dec pop sbb mov clc add scas or add sub fisttpll cld out jle sub cwtl js movsb and cmp mov fwait outsl (bad) push out dec addr16 cmpsl adc push dec adc adc or (bad) neg lods lret dec rclb jle push (bad) jecxz sahf mov fnstenv lock test mov push push lahf (bad) lods leave insl add movsl lds in and ret push push and cmpsl mov jns lods (bad) mov fdivl out incl insl mov dec daa or mov les and mov iret jns (bad) stc sub inc mov pushf fisub arpl dec (bad) add (bad) (bad) add repz imul add aas cmp test lret adc mov fs inc pop fcmovb dec pop in sbb icebp pop inc sub mov push lods or pop mov out cmp or loop or loopne inc pushf add out lea fcoms pusha push or add pop jo (bad) dec cli mov add dec outsl call add push xchg mov add adc xchg add mov pushf push sub pop cltd adc adc sbb inc adc jp shrb aad sbb dec xor inc pop (bad) out or cmp pop jmp and or xor in test and jmp loope inc (bad) pop adc out lock sub lahf xor pop sub xchg add (bad) stos hlt sbb adc mov xor mov jne inc mov inc jmp dec add sub pop mov aaa jmp rcll push sbb repz adc cwtl or neg sub jmp lahf push cmc sbb xorb add ljmp jmp add out repnz mov lahf xchg sub pop ret push mov sub adc lret sub mov sbb std pop fldl2e push pop sub jmp or icebp bound cld or mov jle jg push jle cmpsl pop sub psubq int in adc and xor nop cmp jo or adcb inc add mov pop add insb push (bad) daa pop push data16 and add sub jmp outsl or fldenv imul sbb add (bad) pop nop jae pop push (bad) negl pop mov dec ffreep leave test jmp pop ret mov push mov xor sub pusha shl jmp pop cmp sbb (bad) xor and sub jmp js jp nop mov jb aad not mov xchg (bad) mov or mov test push mov mov aaa dec cmpsb sub push push push cmp mov xchg dec pop pop das or push pop fs (bad) movsb or dec clc daa (bad) jne and rolb or or (bad) ficoml fwait or mov mov out jmp icebp pop inc mov dec pop cli stos push dec jo ljmp cmp movb add push cwtl and pusha dec cmpsb sbb adc or aas fstps outsl cmp arpl sub pop mov dec push bound das and mov xchg adc stc pop test add lds call mov lcall adc test push clc adc sbb pop push (bad) xor fistl loop std push adc or jmp ret jnp aad (bad) leavew inc leave int3 cmp punpckhbw mov xchg and (bad) jns leave aaa pop jmp mov jmp icebp mov gs add cmpsb sbb or xor sbb sahf xor and (bad) cmp sbb leave or shl pop call push jnp mov push sbb out add out loop pop adc (bad) fdivr shrb std aam ret pop mov neg push inc adc into xorb adc jmp ret sbb jg add push add je or dec lods add int3 add adc sbb inc out rcr daa mov out add dec or sub sub cs pop sub les mov push imul jmp sbbb inc insl jae mov xor pop pop (bad) jb lret jp cld dec adc dec push pop mov shl add xor mov add in les and pop and addr16 popf add loope cli push insl pop push incl addr16 xor jmp jb add loop sahf and push inc pop inc sbb xchg mov or (bad) (bad) sbbl jne cmp stos (bad) jl mov daa pop sbb add bound dec rcrb add or fcoms inc cmp cs rolb inc push inc test mov (bad) aam aas dec lret std sbb fldenv int3 dec or jmp cmp xorb ds pop ficom add jmp add push cld out push rcrb mov stos xor rorl das test (bad) pop out lods mov and mov xor add push mov xchg leave fdivs push push (bad) xor sbb add mov dec cmp inc push xchg sti or add gs sub and pop sub out (bad) or add add add inc dec (bad) int sub test mov sbb cmc mov add jns ja cmpl or pop cld mov in mov lret (bad) std es sti stos add dec in xlat pop lret mov jmp loope js mov push pusha jo mov pop pop dec mov jmp popa add outsl cmpb insl ljmp dec mov daa push gs cmp (bad) dec inc sub add or sbb int3 dec cmpsl mov sub loope call bound lcall or movsb subb iret nop das orb insl lcall sub das cmp add fistpl inc (bad) jg inc xor jle (bad) mov xchg inc pop adc fs iret push xor enter fcmovb subl pop add xchg inc jno mov ret push pop mov push dec inc dec push push and adc xchg cmp neg jg mov dec push push add cld and or jns cmpsl sub or adc ret lea test es test or shr push add mov xor ja push xor mov idiv sub dec mov mov push sbb pusha push lcall add int3 and or xor out add cwtl movsb dec push testl sub gs sbb or xor scas mov mov jns dec pop xor stos rorl push add xchg jae lea cwtl or add mov push jns sub mov leave addr16 pop dec pop iret orb dec aaa sahf insb jno xor fs cmp pop xchg cmpsb daa jmp daa ja pop push addb jnp nop dec or cmp enter or pop pop add push xchg dec fidivr test adc sarl cmp lret or je push imul in push mov clc cmp pop cwtl in add jo push xor pop fadds add xor push pop mov out fcomps jno das ficompl sti sti lret bound popa sub je dec sub sbb inc movl sti add neg cmpb cs or cmp add bound or outsb or scas push dec sub and push inc add add pop shl jmp xchg or mov mov sub jmp dec jnp push lretw or mov insl dec mov jmp or pop xor mov lods loop repz push outsb mov dec push mov adc jmp fist adc mov fisubl pop cmpsb xor pushf inc pop ja,pt dec xlat jecxz push jmp loope pop lcall lret rcl jbe in mov adc and jmp outsl jbe outsb dec push test ret xrelease sub sub add aas arpl sti push popa in lods (bad) jbe pop inc mov push adc pop add pcmpgtb add fsubr aaa pop and jle pop push xchg js data16 pop push fstpl clc pushf adc outsl cwtl or push (bad) sub or mov push add push dec lcall stos and mov mov add mov sub jmp mov aad (bad) repz cmp or icebp mov and ja test fistp push je js bound pusha sbb out push xor and loop cmc or or (bad) push hlt mov push sub cmp lahf lods jno loopne or mov sub es add sub and sbb xor lret pushl add sub cmp xchg gs mov or pop js inc sub xor movsl mov mov mov adc fsts sub jb repz and and mov outsl xchg fsts push and rclb or adc pop dec or adc jo orb mov and std ss sub in and add (bad) cltd add push fild xor pop (bad) enter je aam jmp sub add mov add (bad) clc divl call mov mov push mov xor (bad) pusha popa sub imul outsl and inc imul pop int3 mov je aaa xor lds pusha xchg adc into add jp (bad) mov rcrb ss sbb ja sub idivl jno fisubl fcoms push adc add sbb jle pushl adc lcall sbb and nop mov push mov mov adc adcb sbb fs inc pop adc imul mov cwtl sbb xchg mov sub je adc fbld pop add pop xchg push push aaa aas and adc cmpsl add lahf pop mov jb in lock mov sub push mov sbb xchg cmp roll mov dec mov xor iret sbb sbb subb cmp jl pop or (bad) mov rorb push loop add and in lds sbb lcall sbb sub aam ret and insb push pop dec inc dec scas jbe add stos mov xor mov and in push xor stos xchg mov mov dec (bad) movsb or mov sbb rolb clc inc sbb and adc rolb shlb push or pop xor or mov and lahf and add dec or pusha adc fcoml lock shll xchg sbb sub cmp call add frstor popa ret movsb dec add cmp adcb jne das sub add push lods cmpl add aam and sahf insb and mov cltd fdivr dec test subb ja fimul (bad) push mov adc add cmp add xlat mov jne fldl pop cwtl add xor cmp xor movsb adc mov arpl add jno sub in or clc dec das lahf add dec adc add or and adc js xor icebp insb call addl lahf push mov and sub or ljmp mov insb iret (bad) add in lahf mov push rorb mov add push int test mov faddl mov inc mov jno add mov add lcall ljmp dec and sub repnz (bad) loope outsl dec cld mov je (bad) jno hlt cmpsb xor mov popa dec jo aas lcall cld hlt inc add mov adc add rcrb aaa cwtl mov push adc mov dec mov lea inc xor pop inc xor in add jge pusha xor inc xchg cwtl test add (bad) cmc ss enter icebp dec mov clc pop fcmovnb xchg xchg add jl add xor je pop mov sub iret adc add jp and xchg and ret or je je add xchg test movsb xlat add mov push lcall add cmpsl dec sub enter xlat mov sbb jo adc jl add cwtl xor cltd pmuludq jge add jle,pt cld cmpsb into out aad test orb xchg lret add sbb addl insb pop add inc pusha enter push iret ss lods pop mov stos add sti call arpl nop pop or xchg xchg lods xor aam add dec pop adc je (bad) loopne sub out add mov sub stos imul mov cltd test and add xor fnstenv mov sbb add xor jae outsb ret dec aam test fs and lcall nop add add add cmp dec xor sub adc insl decl dec dec push cmp dec sub test xor fldl lods std into fistpl xchg mov arpl pop jl push lds inc pop push xor popf or aam loopne push dec dec int3 sub xor nop js mov loopne add sahf rclb fs dec lret test sub and sbb mov xchg mov stc (bad) push jo (bad) icebp lcall pusha mulb mov and decl mov add dec jns ss mov scas inc dec add ret push mov cltd fstl daa in mov push hlt push fimul mov fcoms popl push js xor adc push insb ret or jb adcb ss lret int3 cmp jae rclb cmpb xchg mov (bad) pop in pop mov into fldcw jo,pt sub pusha addb pusha dec jns pop daa je subl mov and mov cmp cwtl outsb dec sub mov xchg add out enter or xor or addb mov dec fstl cltd push out or sub adc jb mov xchg inc or fcoml nop (bad) sub hlt or mov push and adc jno or in pop icebp push iret fisttpll loopne or adc push pop add inc pop push imul aas ja and imul fsubrp adc inc add push roll into add add test in dec call or lock pop jp add paddb bound sbb nop mov or mov sbbb xchg add mov dec js inc data16 dec movsl js add adc mov push inc loopne add pop movsb inc mov cmpb cmp mov adc mov pop or push mov enter xor iret or mov loopne fwait aam and add add out push (bad) dec bound and pusha dec push sub loopne xlat inc or aaa xchg adc xor push xor andb nop lods imul sarl xor adc mov cwtl add iret icebp pop sub (bad) push fincstp movsb mov mov pop imul aas mov sbb call test jae jl add pop (bad) inc push stc sub pusha and mov stos bound (bad) or fcoms andl xchg je cmp or push adc subb add pop xchg mov push shll lret push and add movsl and jo cmp mov xor mov inc and mov jns pusha lahf xor cmp repnz pop nop add std pop jno lock cmp int3 sub dec insl jl dec idivl mov add test xlat mov loopne or pop pop mov sub dec icebp (bad) lock test xchg cmp pop pop lea das in and add (bad) lock push add shrl movsb (bad) cmc repz add stos xchg cltd add bound sbb rorb adc xchg fsub fisubr sbb loope pop (bad) mov cmp or xchg xchg xchg fscale mov stos in sub pop mov das xor shrb xchg and add or (bad) adc xor add loope out sub outsb cmp lahf stos xchg jnp fcom mov jg add sti jbe mov repz lea ret cmpsl mov jge imul lahf lods add int cmpb or decl add pop inc inc xchg lods cltd sti add popa sub dec shlb aam push or inc js jle fcompl jo dec sbb dec fneni(8087 lock lock fdiv movb push pop hlt and xor ss xor lcall mov js insb sbb pop xchg mov jb iret flds or jne (bad) fdivrs xchg fldenv cmp insl inc rcl fadds int3 or fstl add push test aas pop cmp jl roll push rclb or sbb add (bad) ja push repz add dec hlt std test mov ja cmp push dec sub jae add mov lds sbb dec jl sbb lcall mov sub xor or stc stos nop mov ss or dec test shlb inc popa pop aaa fs pop push or movsb incb add orb sbb sbb pop add cmpsl xchg mov (bad) sub xlat stc shlb pop fsubrl cli or int3 inc repz xchg aaa xor cmp cld fcomp dec adc in rorl or fadds jae dec mov xchg add sbb xor xchg adc (bad) adc cmp in sbb outsb or test rcl cwtl push cld pop jle clc mov adc push call test jno test lahf xchg fstpl push data16 inc pop sbb inc enter cltd jne pusha push enter xchg nop (bad) jne adc add jg lods or lahf fwait or les test hlt ret or adc aas add sub mov mov popf js loope das sbb sbb test pop cwtl es add ret pop arpl je ret inc or jl rorb or out pop and les test sbb andl inc bound mov fbld faddl shlb out jge subb and jl add xlat mov fnstcw sub rcrl popa loopne xor mov or lcall sahf cmp or nop enter pop jg jne inc out jo and das and lock sbb repz mov sub inc out bound aas stos push in sbb pop adcl loopne dec dec xchg mov int3 sbb or adcb xchg pushl sbb (bad) pop add sub icebp add add add dec call orb add adc cwtl mov inc dec xorb dec push xor fs decl into and sub int3 mov mov roll mov shlb mov mov or add adc jge (bad) jne pop pusha add cmp inc sbb aas stos pop push mov insl int3 test cmp jns adc rorb (bad) adc mov inc add test mov push add ret adc and mov dec cmp sahf cwtl roll add mov push jbe pop inc push pop cltd or dec xchg add stc movsl dec add jne or jecxz sub mov (bad) push repz cmp cltd pushf sub pop sub dec mov sub mov jb add sub test adc call stc and fstps pushf call shrb jb xchg mov das shlb notl adc add andl int3 mov insb int3 mov jae stos mov pop imul and pushf pavgb xlat sahf mov mov insl jo fyl2xp1 (bad) pop cmp and xchg outsb and inc sub scas imul imul movsb add or jp sarb stos (bad) push mov or fildl pop xlat and mov clc mov jne lods enter insl pcmpgtb jbe sbb fnstenv inc push xor daa fwait out test out add cmp xor or sub sbb stos inc loopne pushf xchg test mov les xor push ret sbb js hlt sti add arpl dec cwtl cmp js pop repz pushf scas fist stos (bad) xor add mov add mov mov movsl sahf arpl stc adc in sbb adc adc pop fbld aaa pusha sub fcmovnb mov lcall lods or fadds inc push test xor cltd scas add frstor or add jp adc jbe push inc sbb hlt sbb fs add fs or addl call iret push sbbb jl adc mov es sbb adc jecxz inc cwtl and fwait rcll add mov pusha cld adc std adc add adc and sbb xor movsl mov sahf xor adc jb in mov adcb inc mov jl dec adc and sbb sti int3 push add mov xchg add dec data16 fcos (bad) mov push sbbb arpl daa daa movsl call jmp pop push jbe add cmpsl push mov xchg or jns cmc jno or js sbb pop add adc popa stos pop clc mov lock lcall jmp sbb (bad) add lods mov aad scas xchg inc js in pop mov ja icebp adc add sub pop inc enter add push inc adc lods push pop iret add pop xor shlb jb gs aaa cmp les and add push mov loopne js push sti pop dec je add add sbb sarl sti pop movsl push cmp pop in mov sbb mov mov push xor loope lds call inc mov jbe or pop or fwait push dec cmp lods xor test mov nop enter lods sbb in xor lods addr16 inc popl sub push xchg lret jl fdiv push popf push mov and dec jae shrb add js ja add add adc sub inc lcall sahf push pop cmpsl jo repz dec aam scas jl xor push andl js je inc lods jns sub add aaa add mov push sbb jne xor rcl pop incb cs and mov mov sysenter test adc in daa sbb addr16 mov popa fstpl ljmp jno add aaa (bad) rclb cs in loope les das rcrb mov mov (bad) cmpsl rolb scas (bad) jbe call inc mov imul fistl jno stos mov out mov jne cmp jle xor ja stc pop mov sub aas inc mov xor pusha mov mov in add mov xchg cwtl pushf nop add lock xor xchg stc je int3 add or cmpxchg fs dec lods das sub mov mov add jo (bad) andl and mov dec cli loopne in push cmpsl into xchg cmp push or and and paddsw pop orb and daa mov leave add nop inc mulb or mov mov pop stos loopne adc sbb gs mov mov movsl mov mov inc inc mov ss or iret lret pop pushf add in cmp xchg test and cmp mov std insl out sub mov push enter out inc js retw push add pusha jbe std adc push and pop and sbb lahf adc or add push cmp mov jae cmc push in pop repz add fistp sub imul add xchg jbe push stos push les imul lcall sbb add pop cwtl xchg pop inc sub enter cmp mov adc pusha in lds daa jl lods aaa add cwtl inc inc fist mov pop sub pop fildl adc cmp inc out int cmp fdiv fwait adc call add adc sbb sub imul or (bad) (bad) test addr16 xchg insl flds add jbe sbb insb jle mov js hlt cmp cwtl mov xor mov es add add sub aad sub adc pop cli loop or aaa sub rorl imul pop loop clc jg push or pop dec mov ret sub and push mov adc xorb addr16 cltd lods and test inc das add ret add shrb test sub pop sub jae and mov add inc movsb inc test inc icebp push outsb cmpsb enter inc pop data16 iret fwait cmp test aaa movsb nop fldl cld daa outsl scas test jle aam xlat int mov sub out jecxz fisub and rorb lods test fsubrs inc test xchg js mov sub and mov stc rol jle aaa scas sub cmpsl push add scas ret and dec lcall lds mov mov je lods xchg mov fs out or inc add test fstpt or jns and inc daa push mov pop xchg adcw ja aam dec incb test (bad) nop pushf aam add adc adc xchg mov pop push lods addb adc test ret jno push and xorb jl add jmp and cmp cmp mov inc mov push paddq xorb mov xchg stos ja inc jo xchg or cli out or lcall sbb bound nop adc and add arpl dec sete xor jne pop add add stos pushf cmp rorb scas cs push pop sbb scas ja subl and or jmp cltd das cld dec sbb pop lcall pusha sub stos adc add add lods adc das cltd clc push ss xchg sbb add mov sub and inc stos mov rcrb and mov cld sub push es adcl inc cmp cltd push xchg rol mov push mov push sti inc cmpsb aas add pop xchg add sub les cs les pop dec data16 nop push and dec sbb mov outsl arpl push jae mov add add (bad) loop xor pusha add xchg movsl xor pop cltd xchg mov rcrl and repnz xchg sbb xchg cs cli add or or xchg and xor sub or jns insb adc rclb push daa adc mov imul inc sub in add aas fcmovne bndstx test call adc xchg bound xor mov adc jbe or notb out (bad) add fs mov call sbb test aaa mov into add pop repnz pushf push das mov les mov mov mov imul fstpl sub clc das mov sub inc mov add test cmp ds lahf or fprem test mov aad push je fild lret pop decb insl out lods leave mov push mov mov push dec adc insb dec mov js and dec fcomps int pop cwtl movsb xchg add cmp mull fmuls mov movsb dec (bad) dec ret adc imul push bound dec jl dec xlat sub sbb push pop pop add jb mov sbbl orl mov and (bad) jmp and cli sub fimull add mov movsl dec sahf icebp pusha adc loope sarl jb sti (bad) insb icebp dec pusha (bad) add dec cs cwtl xlat roll push pop repnz fnstcw xchg mov xor sbb inc cmc scas rorl push fdivrs mov add pusha movsl jns or call frndint (bad) je inc bound repz or outsb js pushf sbb push xchg push test fdivl mov cltd hlt xchg sti daa jnp add (bad) stc cltd mov add fildll nop in and int in lock and fs push push adc inc mov (bad) mov daa pop sahf sarl pop or lahf lret (bad) cli jbe add inc aam add sbb add imul and or or mov dec rcrb push add push jmp or and mov test test pop adc add int3 (bad) out inc xchg je mov add popa fs psubd cmp adc inc pop in popa (bad) push add jg js fisubl cmp mov ret sbb or adc fwait cmp add inc (bad) scas push xor test xor out sbb and or sbb inc lock adc mov sbb call stc (bad) in aam ja mov push in sbb xchg popf cwtl pop fsubl sbb cmp lock and push push test sbb sub (bad) or cmpb push jae daa cli scas pop test cld es inc jmp cmp lea insb add inc rcrb sub fisttp lods sbb addl sbb ss aam ja and mov cmpsl nop dec dec push nop and inc movsb (bad) neg add negl sbb mov push xchg and mov pop fldenv mov loop add mov add push pop faddl add inc xchg sub loope fsubrs xchg inc cpuid (bad) out pop mov add fistpl push jno cli (bad) fs mov imul dec jno adc loopne imul add lahf int3 push or ja mov push push push fcmove rclb sub mov and cmpl sahf jl loopne mov scas lock sub adc pusha push movsb pop inc mov xchg stc aas inc test or inc sbb push outsl mov lret ret call (bad) pop add xchg lret mov adc repz inc xor jmp je add scas mov mov repnz and jbe mov sti arpl and fsubrl daa push loop add xor cli pop orl rol subl inc pushw and js mov mov (bad) cmc sub roll xor pop lcall imul cmp sbb jb cwtl or add scas jns push push dec outsl add in popa ret jns mov movsb adc jecxz cmp mov mov cld xchg sbbb ja rcrl or sbb dec (bad) cltd jbe inc inc fisubrl dec sti jl and sub add das popf xlat or insl insb rorb dec shr sar cmp add sbbl jns sbb or xchg mov leave enter out cmp mov (bad) adc mov cs add push imul ret mov add stc xchg bound lock pusha dec or xor insb pop js ds cwtl add xchg add fbstp and cld xor into sbb loop popa ret nop add xchg mov adc sub ret (bad) add sahf imul (bad) mov stos adc pusha lds popa mov repnz mov add outsl shll mov out adcb adc mov clc jb aam sbb notb int3 pop movsl dec mov xchg xor dec sub push and inc mov lods in lcall cltd rcl xchg movsl loope push rorb out test push pop mov lahf sarb add fldenv out xor add mov jae cmpsl dec xor push or lret add fwait movsb cmp cmovs fmul js push sbb inc pushf add (bad) pusha sub jp fcoms and dec test mov sub xchg dec fistp aas add pop insl mov and pushf cmp add pusha mov dec mov jo mov (bad) dec jbe loop or or mov clc out scas adc jl nop in ja pop invd sub and aas and add (bad) mov xchg mov scas add mov and sbb adc jae cmp add rcrb mov or pop dec add xchg dec mov sub pop mov mov pop inc fcomps fcoml push stos icebp pop test into mov test pushl popf push movsl fwait inc aaa ds icebp dec scas (bad) int3 dec add lcall fidivr and add or shlb xchg leave movsl lret xor mov mov mov mov ror mov lods stos movsl shrl ja mov scas mov xchg adc add jae mov ret and inc mov imul dec dec jno or add push cld or (bad) add pop imul sbb shll mov fimul cmp mov push cmpsl (bad) mov fildl push and lods add dec mull dec mov pop lods scas jp inc and ljmp js test jmp sbb jne pusha add into ficompl mov and jbe pushf inc inc pop sbbb (bad) jae aaa push mov jle adc adc mov or add ja and and cmp shlb push inc mov push adc push adc pop (bad) xor mov push add rorl xchg (bad) cltd pop or test dec xchg mov sbb aam mov enter jle pop stc and ss out xor mov dec imul sub daa hlt std xor pop or and push mov xorb xor dec and and aam pop out jno add add fiaddl adc lds add jl andb lea inc popa jo idivl xlat add jg nop mov xorb sbb pop loopne not scas jbe cwtl stc das sbb jno sub aaa pop inc mov mov push pop add sub inc sub pusha scas sbb mov rol and xor mov jne ret movsb push cmpsl pop cmp ds jge iret pop mov (bad) stos xor dec rcl and fs lock mov sbb pop sarb mov insl popa mov xchg mov or popa int3 cli fadds dec imul hlt js repz ret not jno popf popf adc inc int3 or fldt popf (bad) (bad) mov (bad) mov scas daa push or jno popa sub add loopne push or movsb push sub out xor enter leave mov rolb lret shl repnz add cmp test cltd lcall sti movsl dec jo in mov movsb add add mov jne pop lcall push and add popf sbb pminub push insb mov mov lcall test enter cmc stos stc repnz pop mov jbe repnz repnz xor mov mov lds adc mov cmpsb and pop cld inc imul rclb xor mov jbe and fxch mov or fwait dec outsb add add inc jp adc sub addr16 popf jo fsubrp sub add inc push or add shrb dec pop fdivrs fs daa xchg jne mov add and loopne mov (bad) (bad) sbb loope cmpsb mov mov in add lods pop (bad) jl inc repnz adc add sbb xchg clc jmp lcall aam push lahf or enter cld out inc int3 xorl fidivrl jg out js std jns and sbb mov pop pop js pop bound (bad) es adc out push xchg cmp aas or into stc nop cmpb jb clc scas subb jp sub shlb add jl pop out je mov cs mov mov jns outsl les mov aaa das pop (bad) fsub imul adc cmp xor shl arpl aad sub iret out pushf adcb ljmp jo lcall popa adc and mov or sub outsb and or inc adcl mov inc mov mov dec aam fdivl inc sub cmp xor hlt push imul adc sub loop outsl inc test push dec lods ds pop (bad) ja cwtl jns sbb add fsubrs mov push mov test add push mov sahf adc add add ss cld test insb push inc xor (bad) in adc push fstpl mov pop mov lret mov lds pop (bad) jae in pop mov mov (bad) xchg or sbbb daa out repnz and push dec mov cltd je mov enter int aad push fs ljmp popa cmpb test or jp mov pop (bad) xchg fimul aaa popa shll jmp mov cmp cmpsl clc ja lret jl jl jmp rcrb nop pop movswl or mov and mov push or fldt (bad) addr16 add sbb and insl (bad) cmc mov jno cmpsl pop lods push sub inc mov (bad) cmpsb pop pop fdivl jbe dec add mov cld out adc dec xchg xchg mov jne pushf mov jne mov mov aaa jbe mov inc jmp in out inc sbb cli mov mov ror inc adc sub test subb into or pop jno pop (bad) clc jecxz inc sbb jp addl cmp lods bound xchg imul mov frstpm(287 add or pusha lahf sbb xchg cs push mov push mov and xchg adc or shrb mov imul xor pop and adc (bad) mov jmp addb mov or xor sub lahf sbb and imul dec icebp jle and je add or pop aas loopne inc adc mov fmuls jo sub insl pusha mull pop jecxz fstps add ror out add add mov popf test aam into cmp (bad) inc jne lds push int3 sbbb imul push pusha mov add mov cmp push push loop insl sub lcall movl xchg stos sbb cld dec jmp enter mov inc popf loopne adcb sbb sbb cmp cwtl sub sti cmpsl into std add mov xorl xchg mov mov inc push rorb dec imul inc sbb std nop add (bad) icebp xchg lahf aad xor xor je (bad) pop add add int cli jle or pop jb xor push orb cltd xlat mov aaa inc add xor mov imul mov mov or loopne ljmp mov (bad) sbb mov or and fisubr or cmp andb mov cmpsb in in xor jecxz mov icebp jp xor pop adc (bad) xorb outsl out and mov mov rcrl sub orl in pop test leave enter mov xor mov (bad) ret insl fs mov inc push add sbb shr addr16 xor xor cli sub xor sbb shrb and aad or clc imul mov lds jmp or add lea mov pushl std movsb into add lahf loope xchg xchg hlt stos add pop pop cmp test jns mov gs lods inc jmp jo jne jle imul adc sbb mulb inc sub enter add push hlt xchg cltd add mov imul add push inc or ret sbb (bad) adc stos gs inc push (bad) cld insb add mov pop scas aas bound mov lcall aam adcl mov xor pop (bad) jb mov in add pop cwtl and jo sub xor adc xchg sub or insb pop push xor push xlat (bad) popl dec lcall lret aas ja mov dec adc sbb jp aam inc popf jo push sub pop inc mov (bad) cmc mov mov lds cli and add movsb inc jnp pop dec inc sbb xlat mov dec out bound aaa lahf pusha hlt pusha addb clc ss enter cmp pop adc rcrb jle xor (bad) hlt xchg fadds jle decl in or ss adc sar insl lahf insb (bad) mov enter test repnz insb cmpsl dec loope fnop pop dec pushf adc cli (bad) fcom inc in jl icebp lods push shlb mov repnz stc data16 xchg jno icebp cld rcl cmp out pop popa and aam xchg and inc cmp jns lods (bad) add ret sbb cmc mov jp sbb movsb rorb sub fmuls dec add es fs pusha stc mov push movsb dec add addr16 mov xorb insb pop and mov jb xchg lods and mov mov inc jl add nop pop xchg insb imul sbb les add adc xlat ret mov add mov xor xor pop nop push push add inc shlb sbb push fnstsw cli xlat test adc mov mov and mov rcrb inc andb jle je popf add jl sub xorb enter mov sub or inc int3 fisttp test pushf pop mov movl shr xchg dec mov fucomp sub (bad) and adc jne movsb push xor ss adc jle push inc xchg das lods push movsb sbb bound and ret adc or ljmp and xchg or add cli jns push jne xor and mov arpl pop mov stos outsb stos add in add pop ret popa mov push lds sbbb dec repnz push pop aaa js cli test iret add (bad) aas mov imul add movsb aad cld dec pop inc xchg push dec (bad) movsl mov (bad) mov dec arpl push adc add or xor adc jae adc push xlat aad cmp sbb push nop lods cmpsl and imul push xchg add adc scas push add dec sbb xchg aam (bad) xorb xchg fsubl xchg add pop bound aaa andb call mov and mov add and xorl sbb cmpsb enter repnz or and dec fisubrl mov add mov mov dec nop pop mov adc inc add leave pop imul cltd and inc adc add sti dec or jne dec sbb adc jb add lcall pop sahf sahf je cmpsb adc ja jbe cmp repnz cmpl sbbb outsb push jne add or ds movsb and inc dec cmp adc push loopne nop and jae int cmp add lcall pop sub add jo adc movsl inc fdivr xchg add fsubrp bound jo pusha add mov aam push test jne dec scas sub mov xor cld cld xchg xchg sbb (bad) adc dec cmpxchg aaa pop es mov fwait (bad) xlat xor xchg cmpb outsb mov les imul test adc cmp aam lock mov push add js bnd sub add add mov xlat sbb add cmp sbb mov mov das adc fs fisttpl inc dec mov fwait sahf xchg gs or sbb inc fwait movb mov add lcall test or and sub push push nop hlt jae mov xor les xor insl pusha ret popa outsl int3 into incl jg sbb pop lret pop xor js pop orb sub es popf enter cwtl jo pop jno ret and fdivl xor fnop repnz js add jbe or jo (bad) (bad) mov and push jle fistp idiv outsb sbb lret sub pop inc xlat icebp jnp and stc cmpsb push cmp sbb (bad) cwtl cmp cli cmc sub jns or or lock sub jge outsl xor lret inc jo js push lock imul jecxz,pt add pop ljmp xorb test inc xor sub data16 mov add addr16 sar test jg loope dec pop int jo add pop popa xor lods movsb sar pop add xor push add pushf dec lret add mov clc cmp sti fstpt dec fistpll sub xchg or jg nop inc mov incl scas and lret push push subl (bad) xchg mov adc sbb dec push leave and outsb leave fmuls jbe ret fistpll addr16 sbb xor fsub dec pop les cmp xor adc fildl add adc mov popa icebp loopne outsb cltd clc jp shlb add dec rcr push fisubl lret mov sbb inc mov and push insl inc or aas sbb insb orb arpl repnz xor fdivrp xorl cs cltd fildll sub lock loop or scas in mov dec cmp rorl add mov dec hlt or clc push cld jo insl or xchg mov sbb ffreep and push clc loopne or cwtl dec add mov pop add jmp sti jecxz sub push pusha test fcom ljmp xor lock or loopne clts (bad) (bad) push inc stos mulb pop sub add test icebp notl rorb mov add lea xor mov or repnz aam mov pusha xchg jno adc imul add outsb sbbb push test jno js dec (bad) repnz inc sub dec sub xchg push (bad) out popf jbe out sbb pusha ja add mov es pop cmp add das mov jl add inc rolb ss xchg inc shrb leave mov mov shrl in (bad) push xchg loope mov or neg lock pop or cmc add aaa cmpb xchg add fisubr icebp or dec push xor in rorb push add lcall outsb or sbb sbb jo dec pushf adc push insl jb push inc xchg rolb add fnstcw or sub shl push fstl push xchg push ficom addr16 jno push pushf jno int out insl cs cmp scas loop or add xchg mov cwtl mov cmp test add push mov mov inc lret add leave js rolb lods add ficoml xor (bad) out inc add mov int sbb push mov add ret inc das inc sbb dec test add clc out cmpsl (bad) dec mov sub hlt rcrb lock xor xchg rol js shrb mov frstor mov fsubrs into adc push jecxz add cmp jge adc or xchg push xor pmaddwd fwait pushl iret daa xchg adc pcmpgtb rcr sbbb sbb push adcl mov jb sbb (bad) sub stc inc (bad) inc push or lock fiaddl arpl cmp mov sbb jl jnp leave shll test xor pop push push cwtl ret lret xor jns ret enter add lods roll not roll in or inc mov in pusha lret addr16 or pop stos add fcomps push dec jae pop iret jl add test lock imul jns int js cli dec and fildll or loopne ret rorb dec mov sub xor fadds iret add inc or or mov clc push ret nop push sbb loopne in or xchg push rolb popf call and jns and lds push sub inc add arpl in jno data16 and push sahf sbb mov and cmp add sarb lods xorb test sbb stc cmp push push push lock test push cli in cmpb in push adc ficoml xchg or ret mov add cmc add xor imul add sub cmp pop inc sbb add fdivl adc je pop jae jns cmp or xor xchg rclb inc xchg adc aad test faddl push insl int3 inc icebp mov rclb mov sub cld (bad) int enter lock cmp pop xchg dec int3 mov lock mull jno fldl inc pushf add enter pop xor sbb jbe loopne xor or inc push mov cmp or imul mov out pop push pop sahf cld add or jle jp js rolb cwtl push pop add mov and add sti xchg daa dec xchg or push dec push xor dec xchg sbb add (bad) lret daa add and mov or xchg add sarl push dec out jl (bad) lret cmc lods sbb xchg in cmp sbb fstpl push xor cmp adc rcll popf jo adc cld xor cmp ljmp adc das enter pop pushf inc adcb pop dec pop in add addb push or inc mov xchg adc add and cmp test mov mov and fisubr push lods dec mov jl mov notl inc sbb cld mov (bad) add inc rolb mov lcall sub popf notl mov fiaddl fs (bad) jecxz cs addb imul mov es clc lock lret inc mov push leave inc xchg pop sbb jne clc lahf lock add sub in pop cmp (bad) repz adc mov add mov mov pushf add jbe clc loopne xor inc and or clc stc push outsl xchg enter nop lods sub inc mov jle pop xchg dec inc mov xchg dec cwtl and pop (bad) mov adc icebp add imul cs pop push push insb sub add mov dec xor add jno or pop hlt js,pt xchg dec sar in lods in dec je mov rorl test push xchg mov imulb adc les movsb call jns dec fsubl sbb lret decl popf sbbb fsts cmpsb mov xchg mov daa cwtl cmp mov add dec jnp ds push (bad) xacquire add dec sub hlt hlt imul and movsb repz cmp pop scas out out pusha std xor enter lods call fwait lds push ret movsb cmpb cli insb dec ja cwtl rorb aam inc (bad) inc push mov mov adc out test rol lds xchg (bad) adcl add (bad) jle enter mov add iret nop fcoml enter icebp push adc neg xor adc into push or sbb jecxz sbb pop lods movsl dec inc pusha jnp cld shll dec mov in xchg cmc subl fcomps lock (bad) cmpb xor push loopne jo out add dec sbb adc dec loope (bad) cmp dec cli push sub mov cli call (bad) jmp pop push xor xchg or pop push bound sarb sbb inc xor es mov movsb dec or iret movsb mov test mov cltd inc hlt inc daa sbb push and xchg dec add into mulb lret insl sub mov add mov and dec ljmp adc and subb pop or cmpsl roll in dec pop add xor in inc jecxz ret jnp and jg push mov imul pop in lods cmpsb cld and imul add stc insl ljmp loope xchg in repz pop negb fldcw push jno shrl ljmp mov cmp mov inc jns jno stos xor in stc in jmp jns adcb cmp add mov popf pop mov cmpsl push mov add xchg je,pn xor xor cmp in and xchg dec mov js cld xor mov out fidivr or sahf and or packuswb and shrb pop mov push cmp add add test lods dec rcrb je dec and jnp adc sbb push jo es das mov std sbb lods push ftst pop cmpsb ret loope cmp xchg andb push sub and jl add or xor sbb xor xor je dec and subb add out inc adc sahf icebp push mov adc jp mov (bad) test jae dec call pusha movl sbb in aaa dec and aam add or jnp gs shlb cmp pop pop add inc push sbb mov (bad) mov jecxz mov shll sbb push (bad) (bad) hlt test aas les std jne sarl loopne shrb push mov mov pusha mov jmp call outsb mov and aaa test (bad) sbb adc fadds push cmp loope and cwtl jno mov test cmp outsb fs sbb add mov cmp xchg jns adc inc or cmpsl push pusha and fiaddl insl jno sbb push mov or arpl and addr16 std mov xor cli add adc add je or nop js in loope xor sbb add and and jmp mov sub loop cwtl add test repz or cwtl push mov test mull and outsl sbb mov push ljmp add orb lahf or shlb lods movsl inc sub jbe sbb sahf add xchg push add popf movsb cmp clc in inc xor push gs test iret fildll or mov pop pushf sti inc iret fcmovbe loopne adc insl mov and (bad) dec mov das and jg fsubp arpl cmp and fadds cmp cltd add sahf add loopne and aaa cmp fiadd cmp cltd pop subb push and pop or xor cld cmc movsb clc inc clc clc ret fiaddl mov test inc or mov mov add mov cwtl jl jecxz pusha imul ds dec dec leave clc or xchg lock pop clc (bad) stos andb lock rol test imul rorb pop xchg (bad) je cmp scas or fwait ja cmp or xor add or out xchg inc aas andb imul inc into xor ficomp in cld les add jno jge add fildl or add cltd adc mov loopne movsb add out outsb mov add add je sbb out orl cwtl add fneni(8087 add mov pusha xlat icebp ret xor or movsl out daa mov add or jle and cmp clc std mov add shrl es insb add add gs lret loopne jmp cmp inc xchg les pushf sbb in in pusha test add dec xchg add fmulp in sub mov popl add add movsl cmp pusha cwtl movsl fsts add add mov loop cmp loope and loopne add push inc fs je mov pop and dec mov scas xor rorl add fadds and sub ja push pop sub or mov push pop dec inc pop sbb inc mov xor dec push sbb out aaa inc or mov cmc fwait cld mov sub in sbb xchg outsl lret push call push das or (bad) add ljmp inc mov test adc in and cmp out sbb insl lods (bad) jbe add test sbb ret cmp loop cmp jb sub and add sub and movsb test xor or add sub loopne pushf popa push imul push pusha and sti and mov loop (bad) xor ljmp jnp jno dec or cmp cmc mov xchg push clc ficomp daa pushl jge push cs cmovp xlat add addl fnstenv sbb sub add or fnstsw add mov add ljmp cmp inc sub aaa mov lcall daa adc add pop clgi divl das mov in add jno sar jl arpl and add or dec inc nop mov pop (bad) sbb sti movsb retw dec cmp stos push ror xor adc pusha and pop outsl xchg or (bad) push or pop or mov xchg out sub cmp jae mov cwtl fstps repnz dec (bad) mov andb iret mov and cmc mov dec push jecxz,pt insl jg jecxz shl sbb adc add sub sbb or xchg sbb push pushf sbb sub aam dec ss sbb add roll adc mov cltd push sbb loop inc outsb inc cwtl push dec or bound xchg mov add jmp (bad) or adc iret and mov cmp cmp add rorl repz loopne cmp je inc xor inc in inc addr16 subl inc out xchg jo lret or cmpsl out aam xor lea mov xor xchg ret add mov jbe dec jnp push xchg dec push inc test add cmp sbb add sti cmp stos das mov pop mov mov movsl xor ljmp xchg shrb nop inc mov lods out inc jns arpl lahf sti lds pop pop in pushf fmuls or movsl aas mov popa fisubl int pop andb je push sarb outsb ret push pop cmc imul add jne dec add xor sbb cltd add push popa sbb insl gs push cmp cmpsb jae jmp cld cmp inc mov sbb mov and mov (bad) popf inc add int3 mov sbb dec mov fstpt imul imul int3 aas lock xor ret sub test rolb insb ret jne jo xor rorl aam cmp lcall mov dec push and push cli gs hlt push jl adc (bad) adc xchg mov sbb and cwtl lret add clc sbb adc or int3 in adc movsl add cmpsl xor iret or push js pusha and push mov xchg js js adc jmp push fs mov stos pop mov pop push addb mov add bnd xor and pop fisttpll outsl jg clc inc cmc arpl in fwait shll mov cltd dec sub push push loop fcomi add mov xor in add add fstpt add inc mov fwait repnz sub dec add test je,pn inc out lcall and push emms dec xchg inc mov inc movsl daa jl out out fist dec add pushf cld dec ja insl orb and es (bad) insl xor mov dec mov mov xor xor out xchg dec dec jp add neg xor out cmovbe mov fidivr in idivl cwtl add cmp add sbb xchg jo das ds pusha sub test adc sbb (bad) cmp adc inc dec add rolb jnp outsb sahf out cmp orb inc mov test lea push push shr mov insl or pop dec dec sub mov sbb jg cmp movsb add test (bad) and push dec in xchg and and je sti adc add jmp dec fwait add out pop cltd stc jecxz sbb stos inc shl mov push popf and mov stos sbb dec pop roll aas sbb fimull into inc test sbb pop dec ljmp nop sbb inc adc nop xor ja cmc loopne cmp add imul cmp sbb or inc add outsb inc mov pop sub adc nop ja jle xchg jl cld je xchg lods add adc jle add and xchg fs sets cmp rcll xor dec xor pop mov jo adc or and or jle jns (bad) mov cmp pushf dec xor (bad) inc inc shl aad add or sub dec dec and dec mov cmp fadds mov dec nop test enterw push imull addr16 out mov pop sbb xchg xor leave push jmp mov jae pop pop popa push mov xchg (bad) and xchg push addr16 (bad) imul mov lahf xor or cmp cmpsb pop imul mov or add pop out (bad) mov insb mov xchg pop lock outsl test jb dec nop mov sti vmovsd pop add and icebp cmp scas mov mov or mov clc cwtl add sbb jbe test pop (bad) shll hlt push fdivs push cli inc test pusha iret cwtl in pop das aas imul mov and test pop or push orl push add inc dec les push mov pusha push or jg nop loopne lock add dec lcall inc xor cld pop sbb ror xchg add imul data16 adc loope mov pop imul inc push int push inc jmp je push pusha (bad) lock dec push and sbb dec adc xchg adc push push mov push inc mov sbb ss push cmp sub jbe xor pop xor jl or sub dec fmuls adc mov je xchg mov and mov mov and mov mov aam cwtl out pop push mov sub popa popa cld lcall aam test insb and popa xchg popa nop mov add jge or leave cwtl mov inc ss ds ss cwtl push loope incb xor and andl xlat xorb loope ljmp sub pushf mov mov jmp and adc lds push clc cmp lret dec push call lods lret and call out sbb rcl push or mov jle dec push mov shrb jno lcall sub cmp pop outsb les into ljmp ja test xor pop mov aas add hlt rcll pop cmp lock lods mov pop mov push and push pop and test inc inc cli gs (bad) pop jl cmp cs adcl jl add fsubs in test mov xor daa ja pop pop and orl mov add shrb out movnti adc imul push lret inc mov adc shlb dec add mov loope mov (bad) xchg cwtl add dec dec adc fisttp adc pop imul gs jae into push pop jl push rorb rol aam adc xlat jb fild addr16 daa mov jne les cmp add mov hlt dec sbb add pushf and sbb add add xchg cwtl daa out add rcll pop rcrb add mov push pop push mov loopne test je add push (bad) int3 rclb jbe stos xor push add shrb shlb fldz mov inc ljmp pop movsl clc cmpsb or or inc sbb adc mov mov into sti jns insb and outsb out cmp cmpb nop insl mov sub nop sbb cwtl pop xor adc mov adcb add imul fidivrl mov add ss add xchg notl mov pop cmp icebp bound movsb andb dec jmp cmc cmp mov push sub add xor mov ss out incl cmp mov xchg test jmp cmp and lret cmp inc inc add fldcw test xor pop imul add mov dec movsb inc inc inc cmpsl pop push push fcoml add sub movsb inc das cwtl stc inc js xchg push xor or pushf dec addl mov pop gs rolb les cwtl pop shlb sub (bad) popf jbe lcall sbb and sub xchg mov and test or clc test xor insl add test push outsl pushf mov push xor sub mov cmc jmp ror sti or flds out dec sbb clc xchg cwtl pop mov fwait sub pop sbb push push cmp push (bad) jo cs xchg and loop push xchg (bad) lret dec inc test adc gs xor push and dec cwtl (bad) imul dec pop out js pushw dec or mov push xchg into add xchg cmpsl mov push nop add dec and popa push aad je insl mov fdivrs jmp xor xchg js dec andb imul rolb add sub xor int3 adc sub adc shll xchg lods or or cwtl bound imul cwtl xchg int sub rclb pop lea cmp lock add pop xchg dec not push push or add pop cmp and sbb addb xor push mov add bound pop addb movsb cmp xor cwtl jl and and sbbb xor test xchg shr cmp add pop mov xor mov jl or inc push xchg mov mov sbb add (bad) push idivl shlb hlt xchg mov fcomps repnz pusha jae (bad) jp add sbb dec dec lret por or add mov outsb add add test test test inc adc ret popa xor pop lods mov and loopne add xor inc icebp jae jnp in aas mov lock aam add pop addl mov add add lock mov mov pop popa cltd pusha push ftst add cmp jns sbb adc fcmovnb popf xor fnstcw mov push aas add mov movsl and mov fdivs sbb imul push push loopne add jp call imul dec ret pop cwtl pop push mov loop jecxz je fdivs cmp fdivrs icebp dec icebp sbb (bad) or js fadds ljmp in push lcall loope mov mov mov jno decl out xchg cld cmpl mov call test ucomiss push pop add adc xor cld outsl pusha sub stc sbb js xor jne es aaa addr16 loope pushf mov aaa or (bad) adc movsb hlt and je push sbb xor out push (bad) sti daa sbb push mov test or mov cmp or add enter xor push pop shrb movsl (bad) cmp call add insb cmp push mov push scas popfw mov lret in jecxz dec fldl lods jl cmp inc mov cwtl lock or mov cwtl xchg push dec add xor (bad) stos js xchg sub mov pop xchg call and or mov repz sub lods aad cmp pop cmp cmp fsubrs (bad) dec lock scas xchg or jbe cmc popa sub or test mov xchg jns push xor push arpl xor and stc add insb adcb (bad) xor addl enter pop rorl pusha imul in pop gs ss or dec loop push add xchg jb adc pop xlat dec nop add clc and scas xchg dec mov or int3 daa add jmp and divb or icebp faddl mov bound adc add es adc xchg push inc pushf mov fcoml mov nop push add testb into mov dec mov adc test mov lret or xchg cmp mov mov sbb pop dec iret pop inc mulb add insl js sub push xor mov mov adc in imul aas mov cmp out add fst mov sub cmpb out pop sbb jo fwait in pusha pop lds mov inc int3 adc leave xor sub dec xor cmp sbb in jl out and cmpsl push sbb dec lods push orb sbb mov mov popa stc (bad) mov mov test movsl iret add fldt popa fsubrs shlb shlb add test jg out les data16 dec mov aas cltd mov mov mov lods test or mov (bad) xchg mov mov xor or fwait adc adc or adc loop adc cmp add lods in out push fdivrl mov mov jp cmp nop (bad) cwtl loop mov mov lcall mov call inc xchg cmp cmp lods jbe in js push insb add sub or mov push dec popf and jno xor jb cmp xchg sub (bad) jle pop clc lock pop (bad) mov and pusha enter sub inc fwait adc sub jp aad fmuls push icebp cmc mov add in dec orb call or sti xchg test dec daa scas xor add mov fisubl inc add inc mov add rolb xorb add pusha sub mov loopne and inc mov (bad) test jl int3 ss mov inc pop add inc cmp or out or insb fdivrl jle xor push add les add shrb jno add add xchg sub push insl outsb shll fildl and mov dec nop imul js ljmp cmpsb mov lcall int3 nop fs (bad) sub pop negb dec iret xor pusha push stos jnp fdiv loop loopne sub fistpl add imul cmp mov in push dec shlb arpl adc xor cmp or sbb sti (bad) inc in mov in cmp inc adc jecxz cmp dec fcmovnu add sbb adc jl iret or push sahf aam or mov call jo je push inc sub inc sbb ret sub or or (bad) and push clc imul (bad) clc xor mov sub je loope clc xchg xor lock mov cmp add inc jecxz sub pop and lds out (bad) xor sbb ffree mov or adc add jg fsubr cmpl pop fidivl lret cmp das inc repnz xchg xchg jmp mov sub add cltd mov into bound shl cs jge pop xor mov stc xlat sbb movsb fsubrs aad xchg add mov rcrb (bad) xor enter xchg dec movsb sbb test inc pop and sub lock repz adc fcmovnbe test adc sbb int adc mov gs nop movsb dec fdivrs mov (bad) roll mov lret fcomps les jae push ret cmp ss mov and and mov mov loop ds add aam and mov ds nop add add sbb sbb inc and out or adc outsl mov adc dec mov out (bad) xor pop iret inc (bad) and mov xchg mov add rcl test es loop fwait sub dec mov sbb leave cmp add nop add inc adc fiaddl loop in cli xchg out leave ret mov jp xchg mov mov in dec or xchg adc mov stc mov mov and xor pop sbb jne or lock push ss xor cmp xchg pop xchg sbb pushf fstl xchg and or js dec add test or ljmp mov in pushf dec pop pusha mov pop pusha dec pop mov rolb mov add mov cmpsb xor mov fsubs out sbb nop bound icebp js xchg and or in je or ss adc and pop push cmpsb add cmp scas sub jge and daa dec push adc mov faddl popa adc jnp xchg addb popf ss add ret inc inc mov rcr clc cwtl mov ss loopne out inc cmp push leave dec cltd or and jo jg nop and mov xorl icebp mov mov cli popf rcrl inc pop jae fucomp xor dec nop and leave pop repnz pop sbb jae (bad) xor adc sub xor sbb sbb push es and sbb add mov fs push or sbb hlt add test inc pop adc dec ret ljmp or sbb jns and call add enter (bad) js pop pop (bad) adc inc pusha stc sub pop xchg mov xchg adc ret rcll push dec dec and sub add inc pop sub push and and popa mov mov sbb jp iret adc lcall or jl push test jmp sbb cmp cwtl nop int3 lret (bad) push mov or and add cmp mov add adcb sti flds repnz test add movsb xchg pop pop es lcall xor fistpl inc test mov and jb cs andb adc dec shlb add mov cs in dec xor stc flds nop (bad) sbb jae test add mov ror dec out inc and lock movsl and bound bound inc imul mov enter insl push rolb aam negb and add jmp push sbb arpl fs sub mov push mov adc push lods xchg jnp inc pop popa xchg mov in insl adc dec mov test cmpb mov add lret pop xchg cltd mov sub xor ret adc out push sbb jl rorl adc (bad) mov jbe xor add inc pusha clc jno fisubr popa xor sub adc and nop enter xchg xor and rol rorb mov sbb sbb pop mov xchg push sbb cmp sub add out xchg adc aas mov add divl dec in sub jo mov inc inc xor out or jp subb pop mov xor dec mov fcomps xor aad fsubl les add dec xchg pushf or xchg and mov pop add push mov xor insb test and mov rclb iret xor sub in out adc or and loopne cld xor lcall jo mov pop inc nop cmp mov add xchg lret xchg insb push pop sbb or (bad) jno xor mov xchg fdivs (bad) cmp cwtl arpl cmp xchg jns mov mov or ds inc pop push jo cmp adc cmpsl cmp xor fimul movsl pushf mov es loopne xchg jb arpl sbb and and add dec clc movntq mov aas mov add flds pop and jae jge call xchg mov mov inc add sbb in js mov or pushf mov add ret ljmp inc or movsl sbb sub push mov lds jp int3 test mov pop pop push loopne inc cmp lock dec inc cmpsl xchg cmp aad jg sbb sub cmp std mov ds push add add test mov pop mov shrl cmovne adc lahf test xchg dec popa cmp dec lcall je gs rolb stc cmc (bad) in xor mov dec add stc add in add dec clc cmp xor sub int3 dec icebp and pop (bad) sbb adc pop adc int3 add rclb pop xchg mov pop or sahf in (bad) xchg rcr adc pop or adc pop mov addb sub sbb push mov xchg daa call enter fist rcll jl xor in test sub mov cmp cs sub scas mov cmp add pop or inc cmpsb addl pusha rcrb rorb push mov repz mov xor push pop push fimull cmp rcrb pop nop decl roll es pusha andl mov push dec or faddl dec or call pop lcall cmp lds in jmp bound fstl pop (bad) pop hlt roll add push movlps fucomp es push pop mov sbb and cmpsb mov rorb inc out loopne xrelease and push enter pop or mov mov sbb in sub add insb (bad) call movsl cmpsl adc push pop and jecxz add xchg cs dec cmp aas and out mov xor mov adc daa aad sub jo cmp or dec lods movsl jno nop cmc adc mov pop xor mov je cmp pop popf rcrl icebp test add imulb inc aad bound sbb nop call pop inc fmuls and or clc enter adc mov lock jmp cli in push adc push movsb cmp xchg fs (bad) fsub faddl decb push xlat mull sbb int3 add enter inc sub dec loop movsb ds fstpt insb add pop rolb cmp rorb inc add and dec add sarb or mov (bad) (bad) clc mov dec or sbb (bad) rclb es lret mov in aam addl ficoml leave sub inc add out pop dec mov flds or inc xor xchg or fsubr push pop dec jp pop sbb mov ret pop popa insb dec iret and pushf nop test les cmp test mov mov xchg enter pop roll push enter sbb adc scas fs repz xchg test cmp loopne add repnz test push int mov mov push push stos adc sub test mov and leave dec add adc and int3 add xchg imul sbb inc cli dec int mov movsb stos dec or loopne leave push adc xchg lock fldl addl sub push adc (bad) sbb sub ror and clc xchg and pop sbb mov add or xor rorl adc stc pop dec add hlt jmp sub push mov add inc les push push es adc xchg movsb cs mov add add (bad) pop and lret fwait daa sub ljmp lock pop pop mov push xchg sbb popa push adcl inc sub add and ss push and rcll imul testl cmp mov xor fnstsw jnp inc icebp test add mov mov mov xor (bad) dec xchg add jecxz adc cmpsb adcl lds sub mov loop mov aas fs clc cmp push pusha cs mov add in cmc sbbl (bad) cwtl je mov (bad) adc out pop jecxz test test in nop cmpb or icebp lock add xor pop xchg inc and xchg lea mov lock sbb mov mov (bad) int3 sub xchg sbb movsl daa add add inc repnz add cli mov mov xor push arpl adc enter push rep mov in add or movsl add (bad) xor mov sub out imul push mov cwtl add cmp (bad) loopne and (bad) clc fldenv aam in push cmp add mov pop dec stc in adc xchg cs xor xor push rcll dec lret and sub loope and cmpsb inc aam xor mov ficomp rclb repz push les sub dec rolb push pusha jmp loop jl adc or dec ror sbb inc inc mov sbb adc add fs jp leave jno dec xor out mov mov in hlt pop (bad) inc add push sub and fdiv pop pop iret cmpsl pusha fdiv andl fimull fdivs jnp push insl mov test in add icebp add mov push push pop sbb jno pop test ljmp xor dec test into flds mov dec movsb fistpll ds and mov mov add ds test add cltd iret mov push out mov or sub cmp push mov adc enter enter adcb sbb mov sbbl leave mov cmp test loopne subl or es adc sbb outsl xchg xchg inc mov repz jecxz cltd mov jmp inc loop sub sbb ret and int pmulhw mov mov mov dec movsl les addb or loopne mov jmp pop addl and aam in iret (bad) loopne out repnz subb sub lock adc pop lds jl cld or faddl movsl xchg mov xor add pop adc movsb movsb nop push mov pop inc popa push push (bad) sub dec jmp movsb mov imul pop mov push mov cmp cs push and push jecxz je push mov in xor lds mov cltd movsb or cmp ljmp es push out or shll sbb push movsl fidivrl or lahf or cltd or mov inc or jl sbb in sbbl data16 es je push lods addl iret dec and int3 push jp push jmp push shlb mov xchg pop mov dec xor jle jb test push or inc xchg cmp adcl in fadds lldt pop push out mov mov mov xlat in sbb ljmp add lahf aas subl inc inc shrl aam sub test xchg mov mov test xor and hlt (bad) iret (bad) cmp lret movsb xchg in clts mov adc enter (bad) stos mov add test add mov mov stos pop mov mov adc leave (bad) out test inc inc mov adc mov fdivrs pop rcrb sub fisttpll pop loopne int add add ds xor data16 popa add push jae pop pop ds movsb lock out mov xlat test int3 inc out add and (bad) pop mov add (bad) mov pop popl add mov ss rolb (bad) (bad) divb js rcrb hlt jle orl icebp cmpsb and xchg in mov add add negl xchg sbb test aam inc mov xorb loopne inc mov sub xchg in ret lock (bad) cltd loope (bad) sbb rorb ds inc xor (bad) (bad) fimul mov and inc push inc enter sub inc ds sbb in mov stos add xchg adcl xor mov fadds mov inc inc lock movsb and pop cmp mov int3 (bad) cli inc add sbb pop mov adc xchg cltd mov (bad) mov aaa pop das cmp hlt mov aaa lods jl xlat fisttpl dec jb,pt and imul sub data16 lods and mov in rol int3 aas adc mov cld mov push push fs ds cmc dec mov outsl mov xchg xor sbb out mov shl xchg sbb shl dec mov add negl test clc dec dec sub lahf add fucomp icebp push sub scas cmpb inc movsb add hlt push or shl imul jp fs fmull ss xchg mov insl jmp adc inc in loopne insb cmc outsl xchg mov sbb push add out push add lea mov inc loopne and pop mov mov xchg sbb dec clc sub sbb sbb mov sbbb pop sbb mov adc cmp (bad) ror ss pop fucomp inc mov int3 xor into fmuls cmp add mov or ds jo lahf addb insb aas in and dec sub sub movsl push mov or jnp and cmpsb inc rorb int3 add cmp loopne pusha inc jmp sbb or std addb push cmp or mov adc test pusha push ds xchg shlb and mov out imul nop pop out or xchg andb lcall and pop es insl cmp out and add movl push push adc call (bad) cmp hlt add (bad) inc pop xor jl push fbstp pop lock add and inc mov movl dec lods sub clc sub xchg inc add add adc xchg mov cmp mov xchg ret mov out out add add orl sbb cmp mov adc rcll sub and adc or rol lock adc mov (bad) push xchg mov dec idiv rorb and inc out shl hlt fidiv cmpsb mov inc push pop sub lods cmpsb cld add orb mov add sti xlat dec cltd inc in loopne mov adc push add dec or xchg outsb adc nop sub push cmp hlt mov xchg stc mov add pop mov add movsb inc mov hlt test cmpsb mov nop pop (bad) cltd ljmp lds add pop fldt rcr lock mov and inc out es mov mov pop sbb pop xchg add push out test (bad) xchg inc inc pushf pop rorl push lea inc enter add xchg fdivs xchg push ljmp scas mov fs mov and jg enter ds mov cwtl leave mov ljmp mov inc out push mov mov cmp xor hlt add jb sbb mov fwait push dec jl mov xor mov in popa fimul fldl2e rorb mov add fucom mov adc daa add add in pop and mov lcall or mov lods dec call mov adc mov jnp (bad) faddl or sbb jo lock test int3 adc mov enter push in cmp lods dec dec push call mov cmpl inc xor xchg adc (bad) insl faddl cmp push add cmpsb sub mov les lock jl mov and mov xchg add sub and cltd inc addb (bad) rcll roll and and inc enter cld (bad) in movsb int3 fbld add das and push and inc shll pop add rolb (bad) and xchg xchg loopne push test inc not cmpsb nop add pop push and mov lret add ja (bad) test sbb pusha aas sbb out addb xor mov nop or xor out mov adc stos je add add inc mov pop mov fcmovnu mov xor into push cs cmp push xchg shrb test or rcrb jge pop push cmc add mov test lods mov xor add jnp testl jecxz pop sub lahf pop aas xor lds dec mov dec imulb pop push jecxz jo mov loope jg in fnsave pop sub mov pop sbbb ss jne mov ret repz add pop sahf cmp movsl pop shlb decb aas xchg dec push add dec xor add inc jo mov addl and cltd cmpsl pop (bad) movsb mov pop int xchg test adc add jg scas dec jl sbb mov mov sub sbb cmp sub test cmc test hlt xchg add mov xchg xchg aad mov cmpsl aas xor and frstor in loopne mov mov loopne mov movl add (bad) push xchg js addr16 push adc or setg lret add pop out scas jno lods adc rorl enter movsb sub cld inc scas cmp jns xchg jb mov mov adc add add dec dec lahf test push sbb xchg jbe clc add xchg movsb jle test push cmp stc mov add xchg fwait inc cld mov jnp sbb shlb xor movsl push xchg xor jb mov lock fsubs roll mov mov imul mov cmp cmc scas aam push inc pusha popf sub xor shrl dec jo test insb es cmp mov add clc push mov inc inc (bad) adc das mov xchg or xor push adc movsl inc in push jbe stos insl ds push add rcl testl inc cmpb mov mov jne (bad) out inc mov sub (bad) pop dec subb pop mov jbe cmp jno xor mov pop lods and dec pop lret xchg shl fcoml pop xor adc inc mov jle outsb sub or aam lret setnp mov mov fcmovnbe int imul adc lods iret jb insb push pushf inc les mov jnp popa mov dec aad or pop xchg push aam hlt xor cmpb test in and test bound mov jp insl call pushf addl cltd mov movl popa inc adc icebp mov flds inc sbb add cld (bad) int3 inc dec mov adc mov sub lods cmp ss loop mov rcll (bad) adc xchg cmp dec and or push ds push (bad) scas adc mov inc imul or jae mov adc add xchg mull (bad) jle xchg xchg cwtl lods jl xlat loope shlb pmuludq sbb mov adc clc add movsb mov xor ret outsb mov rcl (bad) psubsb sbb sub fisttpll inc jge dec icebp test jne mov or mov xchg loopne mov push in or cmp cmp mov or or pop add sub scas jmp fiadd in psrlw ret lock xor pavgw imul daa fcmovnb push lret dec sbb cmp xchg nop sti pop adc xlat loop (bad) mov cmp pop sbb adc mov add les push add lret xchg aam testl cmc movsl dec xlat loopne test lea mov adc or add sahf pop loop jge dec test es adc xlat xchg popf or or mov iret or mov aas dec shl and test subb rolb into dec lods loope fsts (bad) lret inc xor fild outsl pop xchg dec push adc sarl or (bad) lods test or (bad) jb lods or mov hlt psrlw lods fs add push pop lods sub fwait int3 test cmpsb cwtl test add push iret (bad) sbb aas mov lods mov inc mov aam movsb (bad) rol pop call add pop stos mov in cmpsb sbb clc add popf sub out repz fs push xchg mov pusha popf sbb int3 pusha out adc pop ret sub push adc rclb pop xchg sbb mov cmp inc and icebp jmp sbb int3 and cmc or loopne xchg push std mov mov add test jmp hlt add mov and jnp push aaa xor rolb leave in enter or vminps rolb fcmovnb mov jo ucomiss mov push fsubr add add mov cmp inc xchg movsb push fwait lock pusha push xor (bad) adc or popa or xor mov inc push push xor fbld inc pop adc clc adc out jne and repnz popf cmp out js or mov pusha (bad) ljmp xor adc mov mov cmp add sahf add xchg ss (bad) in ficomp sub jmp or je insb repz cmp cmp dec arpl jne fiaddl shlb push or aas xchg dec mov cmpl or rcrb adc push cmp icebp mov mov (bad) (bad) pop or add imul bswap sbb in addb daa sarb inc add ljmp stc add rorb neg mov ljmp rcrl icebp lea movsb les jp subl in je adc (bad) ds pop test mov jb sbb jge,pn add (bad) ss dec js dec cmp sbb rcr dec inc jl add popf mov cmp (bad) mov jns shlb icebp xor sbb sbb dec pop add dec (bad) pop clc jle fidivl adc movsb cwtl rorb or cwtl mov xor je and or loopne mov rcrl int3 lock aaa push fldenv xor cmp pusha push testl mov adc cmp les pop lods (bad) jne lret mov add xchg jle loope jmp mov or xchg cmp or mov pop and loopne lahf push stos add xor inc fs mov aas subl and jge (bad) pop adc loopne sub sbb sbb aas sub cltd mov dec cli dec push mov loopne cmp xor push cwtl jl xor inc lods ret pop mov dec push sub clc mov lea dec addl pop sub call or dec inc fstpl shrl mov mov les jg xchg ret sub les pushf push xchg jl pop lods popa leave test test push mov xchg stc add jge popf and rcrb addr16 mov lods pusha push cmp add push ficoml mov xchg in addb shr inc js add cmp dec jp dec xor cmc mov sbb pop mov fwait lea aam loope nop and mov pop les mov hlt shrb cwtl dec imul sub pop add sub rcrl pushf add adc cmp notl icebp stos sub pop test and les mov loopne pop stc mov add mov out push add push mov lret sbb dec int adc xchg addl insb loopne (bad) ss mov pop xchg adc mov js lds xor or bound sbb dec inc adc bound test fsubl xor and bound sub inc or out lcall sbb xchg xor xchg add mov inc enter popa sbb jne fwait loopne pavgw scas sub add pushl rcll xchg jno mov push xchg push mov scas push inc jno sbb call xchg fwait push loop mov lret cmp and fcomi inc jle outsb xchg movsb lahf xor faddl sbb mov adc jo push adc shll call (bad) bound pop inc shlb sahf add sub dec or push inc movsb ss mov lods add push (bad) lret adc mov inc or jle mov fnstenv cli lret (bad) sbb dec (bad) lock dec adc add inc into ja add dec addb and push imulb or jno scas add repz fistp mov or js jo mov add xor in test sub pop sub popa lock push xor mov xor fimul mov push xor cltd and sbb pop pop jl mov push hlt loope aaa scas inc cmp sbb add popf rclb add movsl or mov add mov sub repz fisubl rcrb test lahf dec mov jbe pop jle mov aaa sub scas mov rcrb mov sub push insl stos in inc cld pop fimul out pop sub cmp mov and pop adc repnz setne dec sbb lds mov cmp test mov push mov sbb nop rcrl dec lret fsubrs repnz mov push scas inc outsl and pop jmp xchg int subb sti or push std gs jne lock pop lretw out add push fsubr add (bad) repz cmp push add movsb out xor sbbb stos jno je dec ret subl push outsb pusha push pop or mov add mov cmp or inc xchg add outsb std test es sub in mov imul xor mov sbb or inc (bad) ljmp push stos adc rolb movsb add imul sub lods (bad) and jge mov stos fisttp xor mov or mov sub inc test jb xor xchg inc mov mov es mov mov adc dec mov jno lcall call add or out sbb jb adcb rorl and les cmp jns sub fnstenv pop or push nop cld mov pop mov frstor stc sbb mov xchg inc fs jbe pop add in cltd sbb add dec ret sub lods fwait pop jns test mov or or sub cmpl popa pop cwtl push mov sub fs xchg movsb xchg sbb or push iret push addps dec nop cmp sub test sub mov shll das pop clc mov rcrb jnp push les push add fnsave clc aaa ss nop xchg mov imul pop mov pusha push jecxz inc xchg inc mov jg,pt add sub mov dec test test mov mov sarb add push jle inc mov sub mov adc push xlat mov and add imul js push sar sub scas and xor test shl sbb mov (bad) movsb (bad) push lret xlat and adc icebp out movsl nop sbb add adc sub add mov mov cmc dec fucomi mov andl outsb add jno lods mov mov cmpsb jns js or inc add cmpsl (bad) in sub mov das sub inc hlt punpckhbw fsubrs cmp int3 add iret adc je xor pop add stos push sub scas mov sbb push pusha xor (bad) adc ljmp add cmpsl xchg xor add jbe or push add pop jle aad mov fimull bound pop lock lock sbb dec sub pop jl test pop jp inc cmpsb and nop add popa and andb pushf and xchg aaa add outsb xchg xchg sub xor or mov mov out and aad lret arpl sbbl loop or inc cmp (bad) pop imul fs mov fcomps (bad) cmp sbb cmp call or dec add xor andb stos outsb cli xchg sub mov push add cs pop clc sub outsl test scas push cltd cmp enter dec hlt fsubs ret mov push add testb and (bad) cmp xchg pop adc fistl mov sahf and push mov add mov xlat out xchg push add pop xor pop fstpl enter or stos clc (bad) jb ja and out shr jecxz mov mov and in movsb rcr in mov dec push mov sbb fildl push daa add or icebp pushf dec outsb jl push test movsb ss js loopne and pop outsb test adc mov lock adc test cmp xchg add xor add loopne push push push lcall pushf cmpsb mov sub adc lods push fmull pop or je or js mov add cmp sub jmp (bad) adc pop pop xchg insb scas xlat xor xchg in mov and mov std xorb mov or xchg xchg pusha adc test fild add mov dec sub add addl fs fwait jns,pn push (bad) faddl sub int dec xchg and xchg mov ret inc jl cltd test pop mov push test pop stos adc sub inc push std cwtl mov mov jne test mov je jmp jecxz sbb pop cmp in add movsl testb lds pop movsl jl rcrb (bad) mov xor movsb testb dec or pop pop cmp insb jo loopne hlt add cmp or mov pop jb or rcl add sub data16 add mov and test mov ret or subb call or sbb sbb dec pop stos lods sub in dec xor and fcoms rorl aam mov cwtl pop pop dec pop xor sub fidivl inc out iret add mov clc and mov cmp mov xor nop add sub cmp pop jecxz add pusha fs add mov insb lods pusha test xchg xchg add mov repz xor xchg stos pop ficoml (bad) in and bound dec clc xlat mov insb scas xchg add add adc pop add cltd fistl cmp adc repnz inc push xchg dec or cmpsb dec push (bad) adc xor pop and adc sbb fnsave cmp out sub inc mov test add jno cltd in push mov cmp imul int3 scas jo add sti sub pop mov mov add xor xor lods rcrb shrl fist les pop iret or (bad) mov ss sahf cwtl loopne test in inc rcll add adc pusha mov sarl adc cmpb cmp sbb into call (bad) ljmp mov mov (bad) repnz sti pop lret pushf mov test adc ss or roll adc fidivrl loope jle sbb inc or add dec repnz popl add adc push je inc aas shll and pusha xor cld adc psraw stc mov data16 dec jle sahf add hlt mov imul mov add xor int inc sub jl mov add jmp movsb mov mov (bad) rolb out dec mov and lods in and divl sbb fistl add and add fwait lods mov stos xor jo mov std xchg lock push cwtl add jne sub fistpl lcall idiv pusha inc pop ffree adc loope insl (bad) loopne hlt dec (bad) pop test repnz les daa xor aas inc je aaa sti pop fmul sub jg mov in mov adc mov sub out stos test mov adc mov mov loopne add sub and dec fwait sub mov popa jns mov and js xchg add leave loop in mov mov mov sub orb mov or popa push xchg xor or cmp xchg test pop inc or push mov pop mull data16 pop xor mov cmc mov xchg loop pop dec inc jbe fadds shrb sub adc (bad) stos outsb xchg push mov pop xor jmp adc cmp mov incl mov test movsl push push dec cld jne push push movb add lock mov xchg movsb subb xadd fsubr jne cs lds xor dec adc fadds add dec jecxz mov test dec cmp aam es sub into and in sub inc pop pop sub ss in inc clc mov mov pop jecxz dec or adc outsl clc and pop int3 mov rorb inc pop or inc hlt cs push jno add push stos js fmull imul ds jmp hlt xchg mov loopne lods add or mov cmp (bad) add mov push xchg mov add mov xchg int3 dec pop xor push jl fadds in in xor inc ja add mov mov insb aam add mov test pop xchg cmp pop cld idivb xor fwait dec mov lcall in mov cltd or shlb popa aaa jne imul enter lods or lret iret sbb je sub in xchg add push sub push lods les fldpi (bad) cmp inc cmpb inc imul adc lods ljmp cmp inc pop mov scas inc or and loopne mov fwait lea js ja and popa push sahf adc push mov in bound (bad) pushf test xchg add mov mov mov push pusha lds pop lcall enter and jno mov adc and mov xor cmpsb pop ficomp inc and das ss pop inc xchg add cmp cld push xchg pop mov movb aad in xchg dec and lcall pop insl adc cmp mov sub or repnz add add pushf inc jl push add and scas mov adc xchg adc and incb cmp jle and sbb test and dec push inc dec mov les cmpsb adc sbb mov dec and (bad) lret fisttp fldcw inc lds frstor sbb aas push xchg jo sub mov cs mov sbb jmp pop test lods loopne,pt jle or sub cmp loope lods jb add andb test mov adc sub addb lret lock xor cmp inc loope sub sub (bad) mov lret inc sub shrl pop mov mov aas add loope sub stos jae pop xchg or dec les adc sub sarb mov shrb inc enter dec jbe cmpsl jns add mov pop ds inc add xchg mov lods andb das fistpl cmpsb (bad) mov (bad) sub mov aad mov jo loop repnz xor repnz popf decb fwait mov mov mov cmp mov (bad) mov je ss and dec rolb inc in or lea inc and add cltd xchg add jl push cmc pop fdivr mov movsb mov adc pop outsb popa push add (bad) push inc stos dec fs mov shl daa jo aas jecxz js insl add or xor push pop clc dec ds aas mov xchg (bad) ficompl test adc adc fist mov pop lahf aad jae mov cmp add setg outsb into sub add xor push add (bad) jae jmp fstl stc sar cmpb sub push fs cli dec inc or mov in sub mov xstore-rng cmpsl (bad) add lods sub movsl mul pusha lds cmp je fmuls fidivrl cltd add inc (bad) jbe flds xchg loope ret addr16 icebp enter inc adc or add push xor movsl int3 dec inc jo add js push pusha add movsb jl shlb or hlt nop add dec pushf adc js cmp jnp add dec lcall andb push jnp dec push adc add pop gs push wrmsr clc imul push aam add dec add and dec (bad) repnz shrb shr jbe std cmpb in cwtl push mov or fdivrl fs andb push jmp data16 sub sub roll sbb add dec inc aam outsl inc ja lods test dec jnp out fwait sbb js jl push mov jno mov mov mov dec mov imul dec or mov sbb xchg mov pop sub mov add dec ret dec (bad) repnz enter gs push (bad) xor cmp arpl (bad) lea push cmpsl sbbb test aas lock xchg cwtl stc faddp sub inc aam cwtl pusha push cmp sbb sub imul dec sbb test dec mov xor add cmp add add loop (bad) jnp (bad) clc cli or int3 rolb and insb add dec add dec imul loop jl xor sarl adcl mov dec leave adc in jnp movsb gs xor and xchg jg call adc and or sbb xlat stos clc xchg mov add push push out int jno and sti in pop out cmp jo mov xchg imul inc (bad) popa push push rorb mov ljmp add push dec mov (bad) mov fs sbb push add jno (bad) addr16 movsb ja fmulp push push test sar mov out add mov cmp lods add fisubrl repnz mov dec or dec mov lods notl mov ljmp cmp mov mov sub jmp mov inc pop push (bad) fbstp add mov adc rcll clc arpl cmp adc xor sbb iret testl mov mov movsl aam sbb mov pop and pop xchg clc xor hlt rsqrtps inc xor inc cld inc es mov mov rolb sbb and leave mov or aaa dec stc test and bnd clc in out add adc mov shlb mov (bad) mov pusha jmp cmpsl sbb js mov or mov push lods add repnz dec jns cs xor or add mov iret inc dec push ret mov addb inc add xchg (bad) mov pop and lods sbb rolb rolb and xor push adcl push adc sub insb adc pusha orb cmp xor jb and pusha add inc sti cmp gs pop addr16 mov and xchg add imul repnz cs and sbb aas mov pushf je sbb ljmp jo bound mov push test and dec cmp add push repz cld jnp mov xchg hlt jns out cmp adc add pop dec push xor movsl jb fs cli xor sbb add mov fldl sbb add xchg xor or push push fiaddl cmp xchg and stc xor in push (bad) int or in mov cli subb sub jo jl mov add jno test shr dec jns in and add pop shl and add mov imulb loopne sub and xor mov fildl sbb jb mov stos push sti xlat jne xor cmc nop mov and lods or adc xor movb jno mov loope add add xor inc add clc inc add mov test insl dec mov je and stc xor cmp push push sub (bad) mov mov mov outsb lock add push mov mov cmc in inc (bad) icebp cmpl push and add push sbb sbb xor stc inc ljmp push sbb lret xor orl xor cld xlat rolb mov flds jge ljmp int mov iret sbb sub les cmp shrl lock cli cmp and loope rclb cwtl xor fidivl or les es xchg repnz jp xlat push clc dec sub rolb mov mov add test (bad) mov cmpsb rolb adc test add dec jno mov and js adc dec and pop mov loope sub call aaa sub mov cwtl mov inc inc lock icebp xor daa cwtl inc xor or mov lds cmp or and mov sub jl inc cli inc inc lcall (bad) jmp dec or or xorb cli add in adcb dec jmp push mov sti pop mov fs test mull inc jno lcall rcl std hlt pop int3 mov jnp cwtl pop out fs and jp enter xchg jns xchg or icebp ror pop enter add push rcr (bad) insb lea es pop mov stc bound mov (bad) lcall mov xor in mov mov and stos add pop jge mov mov add or fcomps xchg repnz incl dec fdivrl or (bad) mov mov jb clc cmp adc loope or mov sbb pusha dec xor hlt mov push inc xor xchg inc bnd xchg xchg add cmp jo and test cmp inc mull fiadd pushf outsb arpl dec sbb push jmp cs int3 je test rolb imul rcr sbb addb in jmp adc movsb adc mov imul fs mov sbb in pop stos cmc add mov out and add adc xchg mov dec cmp or dec xchg in (bad) sbb lods les lret in enter lods out mov loopne and das pop push and add mov es adc (bad) ja add (bad) lock loopne test es cmp mov xor andl pop addl mov enter lret mov stos mov loop adc aam hlt push push push inc cmp add es sub test add popl xchg pop mov add ss add pop sbb inc add or pop enter mov xor push xor lret xor sub inc jnp jae les cmp cs xorb loope popa in inc fcompl xor mov cmp pop pop into mov movsb add mov lock dec pop in sub scas pop clc iret mov sub jnp and mov mov cld iret cmp cmpsl mov dec lds push int3 leave mov pusha (bad) xchg out data16 cwtl out sub adc xchg stc rorl jbe jle lock jns jne inc jnp into mov adc in jecxz iret in sarb or das and in pusha sbb stos adc roll je outsb das scas stc adc add push movsl iret or popf test xor or or or fcoms mov mov pop mov or jb pop jp inc call rclb (bad) cmp sbb call das sub jo dec aaa (bad) aas or bnd in in pusha push test add test mov in add add outsb and jge mov mov loopne jmp sbb jmp pop shl mov sbb fs punpckhwd subl adc adc hlt clc and cmp pop cmp int adc add rcr add pop out adc jno add jge ja xchg jnp pop loopne call add mov cmp jecxz int3 cwtl adc push je jnp pop je cmp or jns test cmp push dec sahf (bad) movsb push mov sbb add stos push icebp test cmp add movb clc inc lods cs push jp js jl and jno mov inc lds mov cld and mov mov push and aam cmp or iret into fs push add mov add xchg (bad) cmp sub xor xchg leave pop loop cmp ds lock arpl pop adc sub std out sti or add mov xor dec xchg mov inc icebp mov push rolb xchg push lahf in orb add and les lds lret int3 add xchg orl std or popa js add adc pushf add movb sub aas sbb mov push xchg fisttpll or add icebp sbb sahf lock cld mov sbb and stos cmp pushf xchg or mov add (bad) inc andb or pushf mov cs jle pop xor pop out stos and push mov cmp ss adc xorb mov jge or sub and sbbb dec adcl mov cli xor cmp imul inc jg push aas je pusha in add add (bad) ljmp pop inc lds ret enter and push pop hlt dec je insb push in rclb add cs and mov push cs mov adc cmp enter push sub dec movsb rcrb pop xor mov jns mov lea (bad) icebp add lcall inc mov cmp push pushf add inc mov iret push adc push or jp fdivrs je fistpll push and add fcmovnb mov or adc push lret sbb imul xor das push xchg lods imul mov mov test pop (bad) into xor lods push or mov add daa fisubl (bad) mov mov jo xor mov inc add sbb sub sub roll or adc clc jl jae dec inc add adc loopne xchg xchg or dec dec mov iret dec popf stos int3 xchg mov jb daa fidivrl pop xor cmp sub negb in add mov sbb iret les les jo daa add cld arpl lods lret jnp je mov popf xchg jmp mov pop jl int ficoml dec xchg xchg jb adc pop pop pop je or or inc inc sbb or fnstenv xchg cmp or scas cmpsl cld sbb (bad) xor (bad) lahf cli lock or enter add lcall sub mov xor dec (bad) js jle mov insl add jo mov addl xchg xor dec inc add mov xor dec fsub mov pusha cmp fidivl dec cmp fildl stc lock (bad) mov hlt in js adc pop mov flds mov jo mov bound dec (bad) flds sbb enter xchg cmp fwait cld subb lods dec out mov popf pushf sub add pop clc dec or clc scas fsub fs add jno inc cwtl addb sbb jmp or adc mov iret daa roll rclb mov cwtl mov (bad) pop or or sbb js pop xor pop mov int3 fistpll and pusha add loopne (bad) popf pop jl call jno sub loopne aad dec lret push mov daa test cmpsl push dec insl add fwait mov push cmp popf nop jb jle jno add decl ret cmp out add repnz mov jb xchg adc mov jg movsb es jecxz lret xor pop sub push sbb jp dec jns cs cwtl cmpb mov add aam pop dec pusha rclb and mov (bad) testb add xor pop loopne (bad) bnd jnp jns push lock test and and pushf add cltd and fstpt les xorb or adc xchg inc mov xor popf and push and xor pop pop negb and push cs ss rorb or fmuls faddl icebp mov adc imul popa cmp mov add inc inc push mov jl add jnp mov or adc sub dec dec test pop sub adc stos xor or idivl adc jo es in (bad) jge lods add pop jns pop and xor cmpsl rcrl push in std mov or xor mov jle pop lret rol jecxz scas arpl sbb enter pusha cmp aaa es add cmp repz xor sbbl mov xchg add imul dec dec xchg push mov sbb popa sti sub dec outsb jae or out adc mov mov inc adc mov fnsave mov adc and dec jo mov adc sbb int les cmp xchg inc js sbb mov xchg mov pop add jle sub clc sub stos aam movsb insl imul xor adc jns adc push cmc jne cmp push xchg nop js aaa sbb nop rclb adc mov test es push nop in rclb in jp adc xchg jle pop insl mov or lahf andb dec push fwait incl popl call aam subl in add dec xorb push cld push and push fwait lock in lahf call dec xchg mov test xchg sarb xor jmp adc xchg mov ror fdiv add xchg (bad) clc popf jnp xchg loope add or mov das nop insb push sbb ds cmp cmp or ret inc mov mov mov fild les pop dec adc mov into and sub add fldcw roll adc add xchg loopne popf mov inc pushf add call cmp repnz sbb test aaa das in inc add mov jo and mov jo scas popa test add xor cmp mov cwtl lds inc xchg sarb cwtl scas mov mov cmp add popf imul dec scas pop enter (bad) cmp orb aam mov lods daa inc cli (bad) fdivrl mov fmull sbb adc mov push jo add mov sbb inc (bad) mov pop cmp xor cmpl inc loopne fadds sbb fwait mov fs leave pusha test (bad) add lods sti push dec pop add xchg sub mov adc mov mov adc add cs and call mov inc mov jns add push or dec mov jmp or jge push inc inc add lea add mov nop lret test jecxz adc jmp sbb orb addb add add mov cld jo outsb mov add mov arpl xor cmp inc xchg out mov sub dec xor dec pop inc xor pop adc mov sub flds mov jno jns sbb add nop fcoml add js addb shrb fnstcw out add es sbb mov mov pop and mov hlt cwtl mov cmp mov (bad) lock dec adc mov mov add and cmp dec add ljmp or mov lcall push pop test (bad) les sbb imul xchg sbb cmc out xor jl add xchg nop test mov cltd adc mov pop add jb ja popf arpl loop mov xchg add popf lret rcrl nop jl jo add (bad) (bad) int repnz jl pop pop sarb jb mov add inc in pop cli (bad) cmp sbb pop movsb fwait and mov jo sbbb and fs movsb fisttpll add add sbb mov cld sarb mov ss loopne sbb in lods mov clc pushf out hlt arpl sbb pop push dec or call inc leave add arpl loope pop loopne push mov add mov cld inc das push clc cmpsb xor xchg pop fsub push or je sbb mov sti push arpl js add xor inc mov push sbb and jns xchg xchg out cmp imul cvttps2pi dec xchg cmp data16 mov fnstcw push push test lret inc and (bad) lahf fmul das pop jo xor inc hlt sub or pop rorb pop enter pop sahf dec adc sti add loopne int xchg xchg or xlat sbb (bad) push popf je (bad) insb mov out int3 add popf xchg cmp cmp jno sbb add hlt cmc dec jp (bad) sub xor inc fistp lods popl out mov fxch sub mov dec or movl ret inc ret pop hlt add incb add fsubs sub push add push jl mov mov in loope dec xor notb pop in dec outsb addb mov add inc adc arpl aam dec fild call sbb je xor jl shll mov aam (bad) or mov jo adc jge pusha inc and rclb sub inc mov dec jns repnz add in jmp in mov add xchg mov mov inc repnz lret jge inc dec add addl add push sub add std pop push push xchg scas jle rcll clc outsl and sub sub xchg push jecxz fistl bound xor inc pop pop daa add scas mov fcomps mov xchg nop stos add mov pop addl add mov icebp int xchg out sub imul mov les cmp sub mov lock roll or pushf dec arpl push pop pop popf push mov and test dec add lahf push rcrb rcrl push add sub repnz and pusha or mov add sbb pusha movsb inc fiaddl movsl aam std jmp bound sub out cmp cmp and dec mov int3 mov push adc adc cmp xor sub mov out and movsb mov test or sbb (bad) xor rcr or add in mov fcmovnbe testb test popf mov jae pop repnz sub movsb mov inc cmp xchg jnp addr16 jno (bad) test insb cmpsb mov adc pop adc pusha push je push sub pop xchg sub popl xchg xchg or call in test test orl cs push pop add mov mov pushf je inc or mov mov add dec imul dec nop inc and mov add scas xor add pop xor insl add mov lock pushf add jae or icebp xor jb shrb mov cs imul sbbl test pop lahf and data16 or mov jbe in or jne xchg and daa jb faddl push jle je xor dec fbld or pop shlb scas xor adc pop mov (bad) orb popf push xchg xor and pop mov push loop and dec loopne add xchg mov lods mov inc jmp jno mov inc fdivrs jp clc sbb dec insl inc jns add sbb mov popa icebp inc or mov jo xor dec imul int3 sbb jmp out xchg push xchg test lds or and xor xchg inc (bad) xor in (bad) add or mov inc adc mov mov insb cmp test mov or or inc jb pop test enter inc nop mov hlt enter lods bound adc mov in popf sbb sub sbb rorb and add aam mov addr16 out pop mov sub les aas cld fdivl push adc out add hlt test and pop loopne popl iret mov sub and sbb add sub cli jle pop inc test xlat dec xchg sarl or mov call jg xor xchg cwtl xchg scas cmpb stos mov add sub lcall aaa out loop repnz cmc mov inc jns test js das push or out aam pusha sbb adc leave nop add jo push push cmp imul js ss popa test adc movsb xchg add add enter js dec (bad) and shrl mov lds (bad) divb std cmp in fs xor xchg mov xor sbb cs and jns sbb and sub out loopne mov test add add mov (bad) hlt add in mov popf movsl push sbb bound cmpsb shlb test or xor jg push in or lods jecxz push nop outsl add xchg jae inc cmp add roll mov stc lds push adc rorl pop jo je sbb xchg lock mov or aam add mov std mov add dec dec insb or out add ret pop xchg cmp lahf mov add out daa add mov and sub aad call pop das push mov xor add xchg inc sub and xor add and add mov sub lock pop xchg sbb jns int3 or or in pusha bound pop add dec push pushf jb push nop fistpl rclb add mov call jge pop and mov pop inc mov push and pop daa push das subl flds xchg outsl mov mov add mov adc pop cmp insl jae mov inc ljmp inc inc xor add shr and mov rolb fmuls jne cmpsb cmp mov daa cwtl lret fmull jmp sub jbe cmp cmpl clc inc lods (bad) nop sbb enter sbb jbe jmp out push mov loopne sbb xchg inc push sarb push jecxz mov xor pusha shrb outsl mov push push test xchg add sub icebp outsb and sub mov or push dec xchg (bad) int3 (bad) push ja in add pop fistp mov addr16 sarb jp add pushl add test add xchg out jp or repnz fwait jo popf fcoms fadd negl jo add divb test xchg cld adcl nop aam mov add inc test xchg clc add repz nop and call add and xorps adcb dec inc outsb adc xor loopne adcb adc lock fildl pop sub add mov mov mov mov jl repz iret lock or jae jo xchg add jo cli pop jno in movsl and xchg gs test push fnop das mov test add mov push mov je sbbl cwtl fnstenv sbb xor pop popf fs add enter add cmp and dec jge icebp fmuls pop push and inc adc nop int3 sbb call mov sbb adc (bad) ljmp adc cli sbb in test popa popw insl or leave jbe xchg popf inc pop sbb lock (bad) pop test lret add sub insl xchg push mov mov fsts (bad) aam dec lock sub movsl jnp jo (bad) es xor fistpll lea push aad pushf mov push dec jl enter mov add jno es lods add in aas aaa adcl cwtl lret xchg push sbb xchg add lahf inc icebp jge or cmp cwtl add es xor mov push sbb lea push repnz add sbb dec sub and jns add shrb out sub shr jle xor mov mov mov push pushf add xor out icebp ja imul sub dec pusha outsb mov pop jnp mov xor jmp mov es hlt ja pusha out or add cs jmp mov xchg sbb lret shll in inc add xchg je push add fld add pop mov pushf cwtl add add cmp and in adc repnz idivb test xchg popa sub dec andb mov rcr andb inc xor test lods push sub js in cli xor add rolb jg fadds mov (bad) sub add es dec shrb nop cld call cmp addl cmp fld add inc inc jle jle add out jl xchg push mov fisttpll mov xor xor push lock sub repz repz push push mov xor (bad) mov add add jge addb mov push push jne mov scas add push dec mov xorb or add or adcl divl add push dec add outsb (bad) mov jle es inc lods cltd dec nop mov in nop loope xor jb add lea push in add loopne and loopne jbe xchg and flds add jnp push in lcall add lods push enter lds fmull (bad) hlt call stc mov sub xor sub nop xchg cmp mov das movsb and add push mov xchg pop jns xchg fsubl pop mov and sti dec das xchg je paddsw into mov enter (bad) mov (bad) (bad) cmc mov jp (bad) and cld cmp mov pusha add addr16 pop loope xchg call sbb pop push fstps loop dec sbb stos and cld shll cltd xor repnz cmp dec insl lock test movsb and cmp (bad) jmp inc test jl mov out push push inc icebp push jae rcl xor test repz (bad) adc ret or lcall cltd add cmc sbb pop push push push ret mov sbb in adc aaa call ret push je cltd orl push ret and cmp adc test or xchg push sub or or orb jg mov and popf pusha sub sti and pop ret inc mov and ret push sbb mov jmp fsubrl add in fs ret pop ret xchg mov add ret jmp xchg sbb inc and cmpl mov add jb and inc push ret sub xchg sub roll mov stc notb jb and inc push ret xchg cmpsl jnp add sbb cmp mov ret xchg sbb movb and test fisttpl mov das cs add (bad) popw xor mov xorl cld add test ret add adc jns xorl mov cmp sub dec out adc test movsl ret jecxz mov fidivl adc mov cmp inc push (bad) loop xor add nop mov mov ljmp mov mov and roll mov pusha mov iret call add dec dec add mov xchg stos cld push sbbb mov test imul and ret gs popa push cmpsb mov sbb sbb sub xchg push xor push sbb ret and insb bnd push add enter mov cmp shlb stos jge popf jne or pop push cli aaa xchg push adc push adc and add sbb rcrl test or and xchg jns scas bound mov dec mov jmp out inc cmp jbe mov in sbb and jo pusha nopl fnop loopnew sbb test rorb push jno push inc cvttps2pi mov stc mov scas sbb add mul xor or mov sbb call push jne or push test add xor rcrb int3 add sub sbb das push jmp (bad) cmp dec mov xchg dec roll (bad) cmp and add mov mov push lods mov add loopne and xchg mov in sahf add or loopne xor add in es loope jg xchg pop nop outsl lods and jmp stc mov int sbb (bad) dec cmpsb push inc shll pop icebp push adc and add aad push inc push in xchg inc lcall add in dec inc (bad) and cmp popa jae push sbb subl (bad) or lahf mov xor rclb rorb or push stos mov inc out ja mov or das mov xlat and mov or lahf (bad) dec xor push pusha lock popf and es pop (bad) adc (bad) (bad) and fs int adc inc sub lock sti fsts out cmp jbe xchg push roll xor out inc bound test cli cmpsl adc vmovaps jno sbb push xchg leave push mov sub aaa ljmp out clc adc mov cmp dec pop push sbb ret sub push ret jmp (bad) in pusha into jecxz test add xor xor imul mov dec cmc push pop sub clc inc lods mov shrb mov fisubl movl inc (bad) mov sbb add xchg or test xor jp (bad) in sbb pop call jno loope data16 dec and or sub popa pusha xchg ficoml mov cmp lcall (bad) cltd imul xor loopne test arpl xor lock rclb stc adc inc (bad) icebp sbb mov push ret adc in sbb lret cwtl and mov xor mov ds or add je in xor add sarb add popa int add es icebp and pop call popa xor hlt sbb cmp inc mov pushf adc mov lds pop add shlb or addl decl cld lock shlb pop das pushf add (bad) xchg cmp movsb xchg (bad) scas test and adc outsb adc inc dec fcoms addb popa mov loopne pop stos popf shr add jle push mov mov xrelease mov inc popa popf cltd ret pop repnz mov testl and hlt jno add outsb pop je or add fisttpl jo (bad) gs enter mov ss xor fidivl test mov add addb in add daa mov dec ficom sub mov test and or iret push push ret push jl push nop mov les in (bad) roll jne adc rcll mov shr mov jge or xor xor push outsl mov inc inc xchg cli enter mov (bad) cmc or mov or sbb jae mov or movsb xor mov (bad) sbb (bad) jp or cmpsb sbb (bad) dec and pop out pop ljmp pusha sbb push popa or pop dec add cli push cmpb jmp pop mov lcall push mov jp mov popa sub cmpsl data16 xchg jg adc loop sbb cmp addr16 inc sbb pop mov jo jb and push push cmp push add mov insb pop andl sbb cs icebp sbb aas jo add xlat rcrb or imul adc lods bound sub fwait sub sub mov mov scas popl bound xchg dec ljmp and and sbb nop pusha dec push pop push push add fimul and hlt std adcl adc out mov add ret push outsb or pop repz and iret repnz inc outsl out ja es and pusha sub ja ret sbb add lret or and add sub xor nop jno imul add lods rcrl jno into lock pop mov or sub notb cmp adc dec into adcb xchg mov mov mov jmp aad xor js cmpsl push inc sbb mov xchg push (bad) aaa cwtl push xchg addl icebp mov aas lods add enter jnp (bad) mov movb sub pusha stos mov cwtl ss inc cmp shl and jmp pop popa lcall lods dec add push lods push push je lret adc (bad) xchg leave inc push fs push lods (bad) lea int3 xchg loope dec cmc (bad) jno xor adc dec iret mov inc inc sbb scas xchg int3 push or jmp sbb sub sbbb call mov mov lods and mov repnz xchg popa decb lock fdivp or lret sbb lcall add xor mov dec (bad) adc push pop outsl sub nop lret outsb int push cwtl xchg adc out jo fsubs pop dec or sbb mov sub pusha mov xor sub iret and cwtl xchg add add aam loop or clc (bad) mov imul sbb add (bad) dec mov xchg push mov cmc add inc mov mov sub fsubp mov push (bad) cmp sbb add pop lock mov dec pop mov pop shlb push mov and sbb adc mov mov xchg icebp sbb movsl add mov mov lea cwtl enter imul adc inc xchg scas inc and dec xchg adc xor movl lods push pop cmp add popa (bad) insb in sbb push insb nop movsb test mov cmp and lea sub add pop ret aas fs add rcrb addr16 sbb lret cmp fidivr xchg aaa ja rolb push es add xlat push jno ret loope andb inc and into sub mov xor pop and adc faddl xlat pushf push pop test fcoms out je ret (bad) aam sub es inc fiadd les (bad) xor sub (bad) and (bad) (bad) addl mov sub movsl cs and add mov xlat mov jnp shlb lret cmp jp inc fnop stos cs jo leave enter xchg aad ret push (bad) jns mov loope ja icebp push add movsb cli adc and fisttp cmp pop data16 adc jb lea push xchg jp inc pop add clc pop sbb popa push mov imul adc dec pop push fs pop movsb lret push sahf ljmp adc ret push jg cmpsb mov jno aam and pop fsub and fdivr xlat dec jg notb mov movsl aaa xlat data16 pop nop aaa int3 cmp into jb adc or xchg pusha xchg lcall (bad) nop in (bad) test sub mov dec xchg xchg pop mov call add std (bad) pushf bound pop jl add xchg mov sbb xchg and sub adc scas (bad) repz mov movl or lea push dec mov clc or push lret mov mov or aas mov loope rolb mov and cmp ds fmull mov popa bound hlt (bad) pop (bad) js pop dec add call orb mov shr add push mov adc sbb pop mov loopne fdivl (bad) mov adc icebp mov mov movsb mov adc adc inc scas lods mov add add mov fnstsw enter scas jne xchg fildl loop xor sbb shrl scas cwtl pop jb jo add pushf arpl cmp sub dec sub xchg dec dec popw cmpsl fldl mov sub pop mov ljmp aam or jne and js mov mov sub ret push in scas xorb sbb adcl push jmp daa nop pop sub jg or xor push clc jb add jl (bad) pop mov js addb push daa or shlb or call pop out in sub mov inc fwait pop push fsub sub mov nop hlt add icebp cmpsl push out inc dec mov add test dec adc mov sbb fstl pop popf and outsb mov jl mov mov in pop into fwait inc fsubrl cs in pusha jb frndint out add cmp cmc jecxz dec xor (bad) adc inc cmpsb fxch xor test sub jp xchg mov sub mov inc cmc mov jmp fwait out enter cmpsb ss sbb iret ja lea and pop or arpl jns lret add and and jb add arpl test into add (bad) icebp fisttpl jge cmp push pop add xchg loop sbb xchg faddl sub (bad) dec inc es jge mov outsl or (bad) (bad) repnz xchg mov daa add popf mov push mov or pop scas sub add nop shlb addl movsl xor in add mov cmpsb sub and push dec push xchg add mov dec in mov and xor cmpsl das mov aas rcrl js insb xor ret pusha je inc iret out pop add mov mov aaa xor cmp mov and add dec hlt scas and adc lret add lods mov es clc pop sub adc fdivs inc pop call sub addb jecxz inc inc and repnz pop dec in dec loope or jne fiaddl (bad) xor clc loopne xchg lahf add jp (bad) push (bad) dec pusha aam xchg testb jp add loope xchg lds add daa cmp mov jge sbb idivl fwait movl mov or ds (bad) cld mov das sub jo pop xchg imul rorb push mov push dec pop pop push cmp (bad) cmp push and call insb (bad) leave add test nop dec dec sar mov adc xor sub cmp iret fdivp popf (bad) mov shll xor aam iret (bad) fwait inc enter cmp adc in mov mov mov xchg aaa sbb xchg ja mov out sub and add jae sub pop test xchg mov (bad) jne outsb push test sbb add popa add stos daa add mov push mov jmp jmp cwtl mov mov mov jns test add adc mov not lds xchg sub or jecxz imul sbb clc ljmp repnz fdivr fistp loop add adc and mov nop push inc or sub pop mov and pop (bad) pushf loop add call (bad) negl adc dec pop add mov mov inc and mov jge pusha loop dec mov push and push cmpsl imul cld add in push adc xlat or inc ret sub es cs push dec leave enter push pop jg xchg cld sbb mov (bad) loopne nop int adc lea mov enter pop mov xchg scas inc fcoms add enter push fwait hlt mov imul mov or mov mov mov xchg jl xchg and in (bad) pop (bad) and jle testb mov inc jmp adc mov test subb push jmp fisubrl addr16 addr16 pop add stos lea mov jg out (bad) lret pop bound jo scas out gs cli sub adc xchg lods movsb sbb sbb or jmp mov xchg nop into pop arpl inc mov imul mov jns call out mov mov fnstenv add dec xchg xor push addr16 repnz jb movzwl cmp pop outsl cmp sbb in xchg shlb or mov push adc xorb cli adc pop mov push mov dec xchg enter mov dec sti adc data16 and and call cltd aad add in xchg xor add push pop loop pop mov dec add negb adc mov pop xchg push add nop mov dec std xor imul cmp and int push fnstenv jb rcr pop pop popf sbb mov or xor add mov push pop adc mov adc movsb push lret fsqrt mov xor (bad) pop mov movb jne ffreep flds mov int3 xor shrb pop and add add pop or xlat push icebp shlb jns dec mov xchg xchg pusha dec das (bad) dec fwait incl mov rcll xchg cmpsb mov push dec and loopne mulb inc inc mov and cmp jo mov push and mov push loop jo pop outsb (bad) ss sbb lcall xlat test in lock std je add ds and mov inc jns add sub push mov push add ret cmp adc test repnz add call push mov cmpsb (bad) push mov bound and (bad) mov pop cwtl dec add add mov adc sbb adc mov daa fdivs aas add add in cli mov dec pop xchg pop sub mov add inc mov pop push and jo mov mov call shrl mov push adc or testl jecxz daa xchg mov push mov in add not mov repz movl test mov mov inc jo insl inc lock inc mov test pop mov cmp clc sbb loope inc sbb inc push xor push dec pop sub or sub nop xchg insl js xchg cwtl repz push ret xor inc and inc ja and mov (bad) adc mov and mov xor dec mov rclb pop shrb pop jle inc cmp push mov and jmp aam sub push ja out jecxz mov dec xchg dec xchg mov or add out push xchg or fisttpl fnstcw mov push cmc jmp xchg mov popf in add les pushf daa jmp pop xchg xchg sbb sbb call xlat xchg popf and aad cmpsb popf jecxz xorl clc hlt mov mov or pop adc outsb and (bad) fisubl or roll sub add nop mov sub inc inc mov ret lock add data16 out inc sti addb das sbbl dec shrb lret aaa stc pushf hlt sbb or rcrb (bad) dec loopne jb and mov and lods lret xchg inc add fisub cmc (bad) aam sarb adc dec add jg adc dec xchg fcomi addl mov mov aas dec ficompl mov sahf xchg inc jecxz adc xor cmc mov jecxz adc add fs adc jp sub adc movsb das pushf cmp sti cli ret jnp rolb xchg jno xchg adc xchg into mov loope xor sbb or jae adc fs or ret push pop inc jo repnz insl cmp cmpsb ja sbb mov jae in pop push xchg add xor cmp out or adc jns add fidivl test xlat out sub jo fsts pop js or lods adc or sbb cmpsb sub sbb pop hlt aas push jns add xor outsl divl fadds pop push xchg add test test shl aad lds test adc cmpsb jbe rcl in and dec and pop jae push add mov adcb pop shrl fcomi jae xor mov fdivl loop adcl bound repnz rclb repnz dec and lret fsubrs pop pop xchg leave sbb mov xchg xor add test xorps insl dec mov test (bad) sbb out pusha sahf push jge cmp inc jl xor cmp mov cmp insb out adc lods jmp push mov daa jb sub cmpsl dec lods mov notb mov outsb sbb (bad) xor (bad) push xor out pop inc add cmpb iret in cmp jg into loopne adc das push push fsts sbb cmpsb les and or pop cld mov mov cwtl jle mov and adc cltd test add mov and push cmp test xchg test mov test or (bad) lock and or nop bound add cwtl sub (bad) ljmp mov mov add outsl xor fdivl xchg loop arpl mov xlat mov cld ja add mov jge pop xchg (bad) clc setae or or sub arpl xor sbb xor stos fmuls (bad) xor fs or sub mov dec (bad) int ds mov or (bad) lods cmp icebp test jnp pushf adc or and fsts lea les pushf sub mov mov sbb ja pop mov enter mov daa int popa call sub jo or push fildl aaa xor ja outsl nop mov sbb jns inc loope mov mov loop add push inc inc movsb enter cmc xchg mov cmp scas mov add sti push pusha adc lea xchg add (bad) lock daa sti add inc aam into or divb enter pusha mov add mov loopne mov bound jae add mov lret sbb dec cmc andl nop out add shrb sbb pop or ret lret fistpll push xchg inc in push add cmc adc call jnp mov or enter (bad) pandn add cld mov xchg xchg add (bad) pop adc pop shl lahf out mov add jl pusha mov lea mov repz or or iret inc loop stos jle add clc and pop popf push ljmp lods sbb es adc nop xor mov inc xor negb push mov push push jl xor push popf mov xchg lcall (bad) (bad) fbstp scas and stos jp add mov sub imul pusha loopne lahf xor push adc pop in mov pusha sti in jp fdivl (bad) add in clc lret loopne jmp dec mov mov stos add xor div jmp (bad) (bad) lcall rorb mov xchg add mov out cmp incl jo mov leave inc push add lods pop fdivl popf inc add jno repnz pushf pusha lahf jp and inc xchg pop push rcl inc sbb inc jge dec loope push mov stos sub pop mov push sub les loop addl inc dec add ficoml add pop mov and add addl xorps push ja inc popa and movsb es xor and js cmp xchg add and fmuls ss aam sbb pop add push test sbbb sti sbb lock or mov sub ds sbb add lcall dec xchg inc lret inc add adc inc sub mov pop adc adc mov mov call (bad) imul mov lret ljmp sub push cmpsb fstp or pusha mov enter fcmovne rorb dec push cs and mov in out add adc sarl xchg mov maskmovq imull mov xor (bad) xchg fdivrl cwtl jp mov add and andl xchg jo (bad) loop add hlt adcl add outsl sub mov cmp js arpl add or or mov and (bad) and ljmp adc mov mov notl fsts sbb mov and jae add jl sbb lcall pop pop xor fwait movsl push test cmpsl roll push out xor bound add sbb rorb cmp loopne sub lret push mov xor push stos adc add add and ret popa jecxz cmp sub iret xchg and in jge sbb cmp add decb rolb stc mov fdivp in add stos jge lds or popf or fcoms pop add popa pop shlb pop cmp vpsraw dec loopne mov push pop es push ljmp shrl cmpsl mov push cmp push mov lods mov sbbl push mov push les in cwtl mov push mov mov outsb leave add in add xor inc lahf cltd xor aas lret rorb push cli sub jl xor insb aad loopne sub daa lods or jb push jl addl add xor add loopne push loopne mov (bad) xchg push push pop fiadd jb xchg loope adc fdivrs (bad) sub popa sti push pusha cmp inc sbb sub sbb pop add inc popa push push xchg cltd xchg cld xchg int shrb negl mov lock punpckhdq and ljmp movsb (bad) inc orl lret mov dec pop outsb insl cmp mov mov sti (bad) mov stos mov push push pop dec popf pop js (bad) jnp adc rep nop or xchg fwait push pushf add loope outsl addb popf pop mov pop fistl lret subl cmpsb pop loopne notb roll add (bad) iret icebp int3 jge pop xor aam inc xorb bnd cmp jo mov pop jmp or (bad) mov mov mov adc inc cld sub push repz rolb aaa cmpsb bound cmp ja and xchg pop adc add add bnd clc and jae ja push leave or cmp xchg xor test adcl je mov ja add add and orb mov mov cli fisubrl ret mov rcrb fistp mov js out adc ret mov push shr mov mov mov dec cwtl cmp mov jne ds jbe sub stos lret test fistp jo push addl xor out ja (bad) xchg daa test or cli test xchg roll or shlb loop inc jne xchg add jae shrl xchg xor shl lldt (bad) fmuls ficom data16 push stos outsb jge mov push jg add gs hlt mov push arpl loopne add xchg push and daa sub or jbe or jno add pop cmp rcrl out mov add arpl dec sub mov loop (bad) sub adc add ret ja lods std mov push add xchg jbe sub cwtl mov pop jne jne cmp xchg inc add fs negb add divl jg mov xchg incl push push aas lahf dec dec rolb sbb and mov daa nop inc sub xorb fs add addr16 cmpsb mov arpl insl lods scas add push or out push adc adc movsl in ds xor repz pop sbb sahf sub push push add sbb movb push add bound xor lret xchg cmp fs push add mov addl jnp cmpsl push xlat in jb fs nop mov dec or lahf or cmc pusha mov and and lock fcmovu add (bad) sub add rcrb and int or add outsl sub pop stos sbb add mov push and jl and lahf test mov scas mov adc daa xchg jge mov daa mov inc test cmp mov inc lea sbb and mov push pop adc adc mov push jo or and movsl aas cld clc test xchg cmpsl push dec push ss imul mov int mov push push jg fisttp mov jl add cmp or lret push mov push xor pop imul pop ljmp scas mov dec out nop pusha sbb mov inc imul and xchg std pop rorl push push push add fcom ja sbb popa cmc add cli pop or outsb jge push dec mov push nop adc lds sub dec dec aas add outsb adc cmp sub jmp cmpsb rcrl popf dec (bad) packssdw pop push ficoml or aad es pop (bad) rcrl adc popf aad mov popf aad mov mov mov adc call mull or sub cld jge xor imul push mov inc stos pop lock xor rcll (bad) pusha mov mov loopne push lea lods push dec cmpsl add jo mov mov ljmp or jmp mov je hlt add mov add mov pop add fwait mov mov inc dec imul and sub sub sub mov pusha push rorb adc rcrl sahf add mov mov push outsl daa inc jne loopne (bad) hlt lods mov movswl out push cmp lret pusha and cli pop or out out loope add push sahf xchg cmp xchg mov pop push push jle daa loope jp cmp add xchg sbb cld aad ret (bad) loopne or fcoml mov mov imul sub shrl dec lahf std inc push cld cli and stos lods jp or mov dec lds ret rcl das and push xor iret or lahf sub andb xchg sub sbb jmp hlt clc xchg pusha fwait js push (bad) daa icebp push in push mov ficoml inc sbb (bad) roll xor add out test aam iret and (bad) shrb pop addr16 inc inc mov sbb mov xor pop pop fwait and test rorb push inc hlt cmp insl rol cli and dec shrl add add cmpsb mov and mov mov dec popa pop push das cmp (bad) cwtl faddl pop push shl or mov outsb ret add inc aaa rcll mov mov fcomps jmp popa popf jmp cmpsb (bad) mov or es (bad) mov out (bad) sbb enter pushf mov add pop add mov les ret mov and push push inc xor and add add adc sbb dec jo cmp or call andb cltd jecxz das inc cmpsb add lahf fs test pop push cmp mov pusha or cs fs xchg out inc push cli or push and push std rol rolb and cmp sbb into imul and xchg jmp and jne jg and sbb or call mov mov mov in push loop cmp addr16 add shlb push push incl add movb mov std (bad) cmp dec ja ficompl add push push mov je jne and or ret jo sbb xor sbb dec mov xchg sbb add cmp enter inc cmp mov rorl add test cmp iret and lret sbb and jmp test cmp cltd cli imul mov lods arpl mov cwtl lret sbb test adc shr push lods add mov push mov lcall add mov or addb in add shr test rcrl (bad) mov add or fimul xor (bad) sbb mov mov scas orb loop into es int (bad) pusha int3 sti push shr cmpl xchg dec clc mov push test fwait movsl (bad) or (bad) or dec mov lret lods cli out pop jmp inc enter sub sub fist mov or pop inc jne jnp mov rorb decb sbb sub or movb push enter iret mov cltd or adc aas xor inc jbe repnz cmp sbb pop xor xchg xchg push adc lret xchg fs dec or adc xchg in decl mov and pop and pushf dec xor and inc stc call sahf inc mov add push jmp mov jbe test push sbb xchg and ret dec or xchg jmp pop pop pop (bad) ret ret rcrl adc or fsts push jmp mov orb fs adc pop add xor dec and xlat push imul repnz push fs xor jle xchg mov mov sub out mov inc mov sub pop xor push inc pop push push or xor mov dec cmp fdivp dec jg adc out test hlt ljmp dec fst jb jmp push sbb fist adc popf jmp push addl push pop js mov sub bound and pop mov sub mov jbe dec xor pop sub out sahf fsubr xor lods mov sbb add cmp shl rcll pop pop cmpsb add pop xor jmp xchg daa dec adc adc dec push (bad) cmc mov jmp call lods mov add jg neg cs dec fisttpll mov xchg push cmp inc sub sbb (bad) pop mov cmc and adc add inc ja cmp mov jae sbb test repnz clc push mov and out mov je xor dec push lods xchg pop add dec push xor sti nop sub fiadd jnp jmp inc stos in popa ds and mov sub pop mov pop jmp ret stc aaa std and out ret in inc jae add repnz xchg sti bound fild xor pop inc add adc push out sbb pop aas add dec pop mov and loope je loope add imul (bad) mov push outsb pop push mov jge add pop dec shr mov dec leave cwtl jo adc sub pushf push ret je cmp inc add mov add push push stos fcomps pusha sub (bad) mov jbe push sub cld adc or adc cmp or push loopne aam mov mov xchg inc addl daa in mov jmp add adc and imul mov mov xchg test sub (bad) enter jmp ret push push push pop test adc mov jmp mov jg in xor pop xor mov pop sbb ds xor pop xorb lods sub add sub xor addb add fwait add push mov push pusha arpl pop sub sbb push ret sub or mov orb or sub pop adc jmp mov ja xor xchg push add mov test dec and xchg mov push add inc pop arpl inc push mov repz rorl add in add push dec outsb or push jnp sti ret rorl and aam fimull adc movsb mov jmp xorb out push push add sub adc cmp cld add loopne not dec (bad) jmp xchg iret cli mov test pop scas cmpsb aaa sarl pusha aad or je pusha shr xchg mov enter inc xor insl add pop xor push push dec add out stc test repnz mov inc push mov mov push lret or ficomp jmp add mov jbe out inc push pushf cmpsb lea mov sti mov push pop inc fildll in xor lock les daa jmp ret push adcb inc stc sub mov add outsl (bad) es movsb push dec popf xchg add and outsl push repnz dec stos mov xor pop pop jle add and rolb icebp adc sub cwtl movl mov stos in xor xor cmp xchg js sub das ljmp mov sbb jecxz add jmp xor call cs cmp add mov jl out int adc xor mov mov (bad) and xor adc mull xchg aam add aas fcompl les subb mov inc insb xor push push pop cwtl adc push stc adc sub pop arpl push pop adc pop cmp inc ja dec sti add daa xchg es inc orl (bad) jbe sti or icebp in subl icebp sbb (bad) repz mov fnsave orb pop fimul inc push dec or add shl add mov xchg cmc cmp dec push jmp push scas sub js sahf imul xchg nop test xor mov push xor iret inc add or jmp out sub les jne push sub clc cmp or arpl sub sbb jmp (bad) ficompl repnz jmp pop and data16 sub jo add and cmp repz push fnstenv fidivr movsl cld cmp cmpsl jge mov push inc ja xor mov cmpsb or iret pop xchg inc adc and jmp adc test daa fistp js jmp cld lret es or adc aam pop sub pusha push cmp fisubl mov inc jmp pusha mov cwtl add cmp rcll rorl das pop adc xorb push cwtl es inc mov ret jmp enter adc mov cmc cmp xor scas mov inc dec neg mov cmp mov sbb add push test xchg xchg dec xor pop jmp int sub repz add add mov push cld jmp cmp andb mov ret xchg xchg add fcom icebp leave (bad) sbb shll add out testl mov push xchg movsl sub xor std pop mov add push mov daa loop cmp cmpsb push lret xchg leave push inc pop test sbb stos sti mov jo jecxz repnz fs shlb (bad) sub cmp outsl xor push lds push add ds add arpl jne sahf push rol jmp dec push adc pop or jg,pt or adc mov dec sbb adc cmp divb lock mov hlt add pop ss dec sarb add pop (bad) mov (bad) adc scas sub or aad adc xchg out vmcall lods add cltd pop into adc cltd pushf dec call adc adc (bad) jp push add cmp dec es pop xor scas rcrb adc xor repnz repz (bad) add fbld sub and es push movsb pop cmc xor jne or push and shr mov add lock push aad aad shr push inc add sub inc and or ficoml sub inc movsl inc stc mov fdivrs add (bad) push sub push push xor les sub fildl inc inc push add (bad) xor adc xor fild push je test inc out adc adc add fwait out jg add fbld jp or xlat xchg and add mov inc inc movsb sub lock js andl xchg popf outsb or and mov gs call push pusha push xor rorl mov or cs cmp ljmp andl add inc fstpt jmp popa insl xor out nop fild sub roll stos sub or and cmp cmp mov lock je js cmpsb sbb enter ret sub js pop loopne jbe xorb jp jmp push mov adcb cwtl mov or mov insb xchg push xor sub jge mov (bad) rcrb sub push enter sbb nop add (bad) mov cli std jb sub nop adc pop out movsb push mov xchg ds or leave push loopne fs inc data16 sub sub dec pusha (bad) lds mov or (bad) push pop dec fisttpl mov mov enter dec rolb xor fsubs rolb jnp jne cmp out jg xchg (bad) jmp mov fdivrs lock ja ret out mov pop int adc mov sub ds mov cmp sar or jge mov insb int pop and xchg mov cltd jecxz out imul xlat add xchg dec pop adc dec in add lds daa (bad) dec add addr16 enter sbb jle aam ret sbb adc mov in (bad) (bad) fistp add adc test cwtl cmp xor inc addb inc ds adc mov add adcb xchg (bad) test and adc push and sbbb mov mov adc fisttpll ret out xchg adc loopne sub mov shrb cs cmp or push jge stos test iret icebp fs mov mov mov inc in orl mov pop jl cmp sbb fmul mov add loope inc int je fistp jne clc js adc push and lret jg outsb test jbe or (bad) sub sbb mov push in jno sti ljmp fsubs cmp xlat jge pop rol out insb xchg pop xchg nop clc and jae cmp (bad) sbb push mov add adc mov pop shrb repnz pop xor add push xchg cmp fmull or dec mov xor and sbb out cmpsl enter cwtl cmpsb jp sub into pushf inc (bad) and or push dec les jmp mov adc pshufw hlt (bad) dec pop adc add jle cmpsb mov cmp aam (bad) orb xor sub jns sub int3 aam and stos ja (bad) add jae sub cmp (bad) jne sub rol data16 testl jl mov mov xor sub xor sbb and icebp adc addl xor fs add (bad) sub enter scas jp jl xor pusha sub dec jo jns jmp push inc xchg movsb cmp push jge inc xor pop je xor aaa push ret hlt push jnp les call cmp sti or adc enter lock inc xor jge dec xchg mov iret test adc push dec jl xor xchg sub fidivr inc icebp das pop mov inc cmp and pop rcr xchg or sarb and aam sub push inc nop call xchg stc mov mov sub push lcall (bad) add push cwtl or jae cli push xchg adc movl roll cld mov and pop dec push (bad) out mov mov pusha imul loopne add fs movsb xchg xchg adc jge inc inc mov cwtl insl je (bad) icebp lret aad xchg negb and out sub inc mov cmp add cmp stos inc mov mov add adc lds sub xchg jge jl mov or test das fdivs mov pop xor cmp lds hlt sbbb jp and mov jnp daa xchg mov pusha cmp mov inc jo cmp xchg push mov mov in test subl ud1 (bad) sarb cmp adc pop mov jl (bad) jp sarl xor adc jmp and test dec js jmp inc jo mov jmp mov andb das push and sbb les and xor dec mov pushf in gs fs out sub nop sbb add test lock (bad) xor rcrl or jo jbe xor (bad) int loopne in cmp sbb pop das fidivl and push add js inc (bad) cmp pop sub sub (bad) inc or cwtl and je xor cltd xor in jecxz add scas fldz and sbbl pop or mov adc sbb and jnp add xchg mov push jle pop gs add test insb gs dec mov push sarl arpl rorl cmp (bad) cwtl inc cmp shrl insb adc add xchg cmovge sbb dec add dec and sbb jp int3 add sbb lods or mov movsb sub paddd sub adc in and test (bad) or dec xor sbb or dec out insl enter mov fwait inc divl sbb loopne push push jge add push adc ja imul xorb and mov outsl movsb add sub lods daa and push fildll inc lret je insb cmp sub jle (bad) cmp and xchg sbb sbb (bad) sbb mov cmpb inc add mov cmp jp xchg insl xorb jge incl add nop sti fwait out loope lods clc aas and mov stos clc sbb loope or ds in call iret push dec cwtl lock xlat pop and mov mov fcoms aas lds inc xor bound mov stos mov push push nop pop add cltd push pop cwtl outsl dec mov push or rolb jle cmp jbe divb dec and cmpb inc test pop adc cmp addl stc ret fs push add dec add inc loopne je insl pop outsb dec jl movsl nop fcmovb and adc push inc cli fwait (bad) out dec subl (bad) fwait pop incl mov jns mov lock add jb and fs movl mov add push cmp (bad) aam add loopne cmpsl fistpl xchg scas push xchg es sbb dec push test (bad) mov icebp ret push jae in pusha dec loopne jmp adc fsts mov fdiv jae jl adc (bad) add sbb mov stos mov mov fwait ljmp sbb or add stc push mov mov adc add inc cmp or outsl fadds stos (bad) xchg ret adc pusha movsb adc dec inc test imul push sbb mov addb pop inc ja lret mov add loope addl adc arpl icebp push or iret out (bad) fs pusha push mov and cmp or push (bad) ja test clc mov mov mov or xchg inc cmp add jo and or adc inc pusha sahf js add fidivr xor je and enter sahf inc sbb jae and sub add enter adc cs in xchg pushf adc (bad) or loopne paddb addb test test cwtl outsl fcoms sbb or sbb mov mov (bad) insb push adc fmull sub mov (bad) pop pop jns sbb add lods and stc pusha js dec mov mov sti or jns add out inc cmp test rorb scas gs lods fs pusha test dec push sub push std xor mov aaa in push lahf fdiv lock add mov and (bad) (bad) (bad) ja test push dec add iret inc lods sub xor push jns aas fldt out jge psubusb cwtl inc popf add and pusha ffreep cld fsubr add cmp jb inc add inc add rcrl ret cmp call mov xlat add push rorb inc lcall notb adc das ds and add xor add je pop and movsb in faddl push sub mov mov leave lret jae mov mov clc and out popf or pusha pusha and add pop cmp sbb out inc inc push mov leave inc cmpsl (bad) fnop int3 divb add les je dec add lds and dec dec imul sti pushf inc pop mov add lods cmp adcb jmp lea loope fcoms or push subl test das jge pop sbb cli adcb sahf pop daa stos xchg lea push cmp and lods or push cmpsb jb add xor mov test out js sbb dec outsl add (bad) mulb cmp ds sbbb inc popf pop lret push add jp and je sbb lldt (bad) insb mov sub xchg inc popa iret jl inc rclb pop adc stc inc mov adc insb pop adc stos mov jne inc push repz idivb cmc pushf inc jae js push jg push sub iret sbb mov rcr mov aam mov cmpb data16 jmp add xor jmp ret fisttp or clc leave hlt insb sub and pushf or push not adc mov fiaddl into inc test lcall jl cmp js adc inc pop fs pop jno cltd andl sbb notb or movsb cmp fiadd push or cltd lds out sub dec test add jns push ret adc cmp xchg je xor imul add pop fadd jns dec mov pop xor subl mov or incl mov test and adc jle and les popf rorl add mov xchg xchg add loop or mov add pop push sbb mov dec mov inc jne lcall or jge mov dec cli jae int3 pop push sbb lock cmpsl sbb or inc (bad) lock mov inc pop add movl xor add gs pop mov mov repz dec sbb add aaa mov lock or push rol cmpsb mov lcall jns mov cmp jae dec cmp loopne xor push jge jecxz cs cmp adc and lds jl add movsl xchg inc cltd push mov pop pause push outsb jmp lock mov loope (bad) call adc arpl adc adc add or iret push inc pop dec jb sub adc sub out and sbb (bad) and sbb mov cmp dec lahf mov sbb mov mov xor add mov or shrl outsl loopne push dec adc test push clc fucomi sbbb fmuls movsb in mov xchg add fs dec pop in adc orb jne dec addl mov ret fcomps into (bad) mov cmc lock fist lahf aam test pop adc add mov push pop mov and std fs jle mov scas out cmp aad inc xchg lods cwtl mov jge daa shrb or les dec loopne js sbbl faddl add (bad) into ret xchg (bad) or inc imul pop dec jl faddl int fcoms jecxz xlat (bad) mov lahf fwait adc pop or or sbb xor adc xor inc mov pop xchg xlat in xchg outsb paddusb int3 pusha out dec fistp adc pusha jmp shrb nop pop dec test pop ret (bad) mov call popa add js pusha sbb sti aad sbb xchg push pop mov pop mov xchg mov inc mov (bad) mov test push mov fldcw mov aaa sbbb and jne loope rorb hlt add out mov pushf pop push and pop mov loopne rcrb test mov loope (bad) (bad) mov aas sbb mov push push jmp (bad) mov sub and dec lea roll in jae or roll orl sub pop out rorb ret push xchg int3 sub sub mov loopne lret mov std rcr stos xor out and dec js add mov ss add push mov sub imul cmp or mov shr sahf xchg pop inc std add (bad) mov popa push test mov mov sarl add insb mulb inc ret out cmp or into sbb dec pop clc cmc add dec dec mov insl (bad) mov adc enter add ds mov adc mov mov shll or adc adc iret cltd mov inc test jmp (bad) ss je adc pop push lods loope push das add add adc adc fxrstor das xchg inc divl dec or cmp dec xlat (bad) xor jae cltd lds push gs scas pushf push inc adcb movsl add jno xor ficompl dec fisttpll push and mov sbb pushf adc lock push xor test sarb mov out movsb movsb je inc add shll xchg rclb in pushf xor or push pop call and aas jne in roll mov aas movsl cmp aas fsubs dec add lds bound sbb imul (bad) ljmp lock pop xor and add pusha in dec push (bad) mov jb add je xchg cs clc ret and mov xchg lods or and jmp add or hlt jne dec adc jmp lea cs lock daa jo push fdivr xchg adc mov pop fcoms cmp sahf cmp gs sbb in enter or (bad) repnz xor inc les mov fiadd jmp out sub fwait mov mov daa (bad) jo adc xchg add pop (bad) cmc jb dec fist nop inc cwtl or leave xor dec cld call call or sub jb out lahf test adc ds int3 pop adc sbb lea add aaa aas loop mov cmc cld adc imul adc dec add shlb rcrl ss xchg jecxz pusha out pop aaa adc loopne or js repz or adc adc lcall mov cmp shrl fildl dec test or mulb add pop or pop sub test mov inc mov addr16 pop or xor push xchg cs inc xchg ds pop gs rcr je jno adc add mov and xchg cmp sbb or div pop mov mov and lahf push lds rcrb clc dec add xchg mov sbb and sub out js cltd dec adc mov inc faddl xchg sbb stc (bad) mov add adcb test (bad) mov add xchg sub xchg ljmp incl add sbb imul es loopne cmp ret mov add sbb xchg cmp push inc out loopne lock add mov cmp pop mov insb lods sarl mov or inc scas pop and dec or sbb ss repz repnz fsts adc sub dec mov and imul cmp movsb fadds fisub (bad) idivl add (bad) ficompl add enter lods push aam test fcomp popa mov cwtl lods add mov mov push hlt popf les insb arpl test js add cmp cmp mov xor ja jl stos mov mov scas fmull or movsl pop in sti pop cmpb add mov nop mov jb sbb mov pusha sbb jbe into in es and inc pusha hlt cmpsl mov fisttpl or test or loopne sbb lock dec clc in cld insb mov jo or mov pop jbe dec jns mov fnclex clc (bad) int3 pop inc sti cs test scas lret bound pop add stos mov psraw int cwtl inc xchg dec adc sbb in in pusha xchg add lods dec mov xor or in scas leave aad nop ds test lcall mov add ret movsb popa cwtl sub adc and (bad) lock mov add inc xchg cmc repnz jg rcrl pop mov and add fdivs lret xor jo add int pop test sub inc xor xor mov stos popa test dec push mov test push adc add sub (bad) scas pushf add out mov mov xlat lcall lret jmp insl fiadd mov mov cmpsl cwtl imul cwtl or jg xor je xchg mov mov mov xor out mov in and inc xchg movaps inc js dec adc rdtsc outsb jae in fistpll nop fcompl mov xor int ret scas dec mov cmp outsb xor add pushf andb jl xor sub and stc xor inc sti pusha out xchg aam mov sub leave adc les outsb lods ss pop movsl or xor inc out aaa ret lcall xchg mov mov xor dec orb jne imul mov pop mov cwtl push (bad) into add or xlat jl js cmc das adc mov add mov repnz or fistl adc add dec in outsl aad or stos mov cmp dec cmp xorb and sbb mov mov cmp and add mov adc aam xor dec daa or incl adc pop and pop xchg imul mov jp push sub int3 add test mov fidiv rcr dec aaa push lret test rol mov jnp cmp je cmp int lods je (bad) in inc rorb or loope mov loopne cmp insl popf sbb sub fnsave lock push dec outsb ss adc push enter das or sub mov or sbb sbb jp push mov (bad) dec iret xchg rclb jae push xlat (bad) rolb daa movsb popf add dec nop cmp sbb push faddp xor enter or or gs pushf and add ljmp into or shlb mov or xchg push mov jbe add xchg addr16 jno fadds jno add sbb dec (bad) pop ret testb lods les dec imul and add add and and mov mov inc lock call inc or xor xchg jo and mov push adc movl mov in mov inc and sub loop callw sub push clc and push test add pop repz rcl cmp cmp out (bad) mov fsubrl mov (bad) xor subl jp sbb or gs cld popf pop adc mov roll jno lods in jle push jp movsb lret js add mulb aas jg cld pop aaa dec or ds shlb lods jg and ficompl sub pop (bad) lock inc lock sub aad je add ja adc out dec lret cmp push loopne push xchg or pushf and push mov insb cmp scas mov dec sahf das and mov or test aam shl xor notb mov pusha xor mov (bad) or clc inc and lods dec call adc cld adc mov add mov cs in jno adc adc xor jnp sub ret or loope addl xor sub in faddl aam or jno pushf fdivr sbb out jle xorb test jmp cmpsb xor mov inc xchg bound mov mov sub sub add jmp mov es outsl fs (bad) (bad) pop xor sbbl add sbb sbb sub or pop scas popa scas pop jl or jo adc cwtl adc dec lock or xor jne loopne repz inc push pop push xor dec out sub and or call mov or dec or push mov add mov aad out mov sub imul or cmp clc cmp push rclb mov call and (bad) mov inc xor psadbw rclb xor jecxz loop xor add adc sbb test mov fs and push mov jg fistl fs xor cmpb sub add inc or mov sbb mov mov (bad) push and or ja pop adc push ficompl adc test fs mov int3 mov dec or jns adc pmulhw xchg les repz dec adc (bad) clc jge mov hlt adc pop lret je inc rolb roll adc jno mov fmuls lret dec add scas jnp (bad) and cld add (bad) loopne int pop add lret sti xor xor jp inc dec mov or cmp rol jns sbb cmp enter xchg jp frstor hlt jbe jg popl int3 call ret dec (bad) (bad) xor add xchg scas popa shlb inc ret lods mov into test jae xor xlat das mov out and or repnz sub mov push arpl cmp pop rcr inc mov pop or enter push xchg xchg jbe jae mov inc stos cmp cmpsl cmpl les cltd add dec jae jno dec into mov popf call daa jae imul mov incl jp mov sbb leave pushf lock add push stos (bad) movsl sub push dec stc add ret xchg test idivl out push setl push adc data16 xor je sbb xchg repnz push mov mov and dec ret sub ret int3 loopne lcall lret adc cwtl dec arpl mov repnz xchg andb push aaa repz les jbe (bad) mov sub stos subb (bad) ja cmp sbb cld jnp dec push mov lea sbb xchg loopne cld xlat cmp test push out dec insb test mov lahf xlat and call jmp mov jo or dec push xor adc cmp add nop pop mov xchg mov test cmc mov ret daa stos mov add clc adc jmp and in cmp pusha insl push pop xor fcoml jns mov test addl rorl int3 popa pop fcoms jne mov in scas inc mov clc (bad) popf adc push and or loope movsb lahf popf mov mov lds mov stos sbb add jo mov repz divl (bad) fistpll jp add sbb pop mov fdivl pop test push sti repnz sub adc shrb sub and mov cld cli test mov jle inc and shrl pop mov fsubl enter (bad) mov xor jbe sub or test xor and fstl fdivs pushf lock out dec jns or ret test xor and ret xchg xchg cmp insb add jl bound mov and push loopne or rorb adc (bad) adc or rorb or adcl std sbb daa cmc dec (bad) mov push push (bad) je cmpsl xlat add ret mov lret jo jnp pop loop cld xor jg xchg inc inc or pusha push addb stc stos or jmp or push mov and jl,pn cmp dec push pop inc stos sbb out ss (bad) sub cmp jae xchg adc (bad) mov push rolb dec int3 movsl cmp sarl add add push std cs add jle es outsl inc je jmp add rclb or sbb lds mov adc dec and add xchg xor xor inc sub and mov inc into stos das aam cmp data16 outsb popf or pop pop (bad) pop xchg or mov mov ja ficom insb sub and mov mov mov inc add and pop inc inc add or sbb cmp fs and mov roll outsb (bad) enter stos mov and pusha mov (bad) insb and movsb imul add cs nop aas hlt les and lds cmp xor repz imul cs push clc out sub (bad) jne outsl std and cmp sub pop dec stos pop add rorb repz insb jmp inc mov xchg add push add nop dec cwtl dec js test or fcoml lahf push mov gs adc vpshufhw fisttp rcll push xchg jno in sbb cmc adcl sti daa push dec push sub (bad) aaa pop dec dec add or aam scas clc hlt xchg sbb hlt add test cmp mov loope adc mov (bad) add xchg jno push mov pop mov es dec popa xor (bad) popf adc pop inc cmp fnstenv mov shrb add dec push or insb push cli sub test js push dec sahf je sbb mov enter add cmp or jmp insl popf jmp daa jno out in xchg add movsl xor dec lods pushf add clc pop pop inc insl or jno add nop fstpl daa dec pop xor sbb sub pop fs jge stc pop xor (bad) hlt or push inc inc cmp mov aaa rcrb inc and inc pusha mov mov popa mov idivb dec sub add mov sub dec push jle cmp jns (bad) or (bad) jae add roll pop pusha (bad) or dec rorl rcrb rcrl mov inc imul mov ret or fistpll ds insb scas jecxz les pop xor and or in fiadd push inc dec cld mov out inc notb add mov pop test ss add mov ds test or faddl add push lods aas imul cmp jecxz pop fs popf add (bad) ja (bad) in or push push addb jne es rolb sub pop lahf data16 adc pop outsb loopne add mov mov jb addl mov inc add pop dec jne daa xchg mov xor jno test pushf mov jge ss push les pop int mov mov pushf push add xchg mov call cltd mov or aaa pop sub add sarb mov fmul fldlg2 add sahf mov jno test inc pop sbb push xlat mov cmp xor push add sahf cmp push add (bad) pusha xchg adc mov rcll jle loop and cmp pushf aaa int3 or jbe loope jle cmpsb lock rolb and in xor outsb lods add xor mov pop jge adc addr16 jp lock dec jge cwtl or popf jle pop add in adc and pop mov pop repnz dec int jbe sbb (bad) sbb adc add pop xor push outsb cmpsl loop add bound rolb sub xchg in mov std lret or fstpl insl jl sbb leave out lods jl pusha mov ret dec jp cmp pop sarb pop (bad) sbb sti jno test mov pop imul push and das mov add jg in repz rorl and push out pop scas mov call or inc add (bad) hlt dec test sub inc je adc decl aaa lds mov andl mov or push mov loopne push mov mov aas into jbe pop pop pop inc adc clc pop push popf jge call and pop sti xor sub popa jno fnstsw fs pop (bad) sbb xlat mov and pop aas jp xchg add mov pop hlt push pop or rorb fadds mov dec jp loope push sub aaa fcoms out pop in pop and inc (bad) mov fsts jne int3 add and das jo dec repz mov push or xchg je,pn enter dec mov loopne mov mov pop add push push mov jp imul mulb add cs sub clc xorb mov out das ret cmp jl xchg mov call push push jecxz and je popa or loope fsubrl lea out loopne mov or cltd cmc xchg inc push jg jg xchg push gs mov jle into add push xor add aam sbbb fs add loope adc mov jns pop mov insl xorb rcrl pop repnz dec inc test inc adc icebp or gs hlt daa mov adc mov add mov data16 (bad) mov movsb cmp add mov add xchg loope lods cmp insb or inc and xchg mov push xor inc pop jns adc fisubr and repnz add div dec movsb test xchg aaa jg je inc sbb ret add lret sti das cmp inc int3 add test lahf pop (bad) test fsubr (bad) push xor push or inc sti mov pop movsb push jno ud1 mov aam negb les repz ja sbb mov xchg call int3 add pushf and imul mov nop sub pop cli test mov cltd add cwtl inc push adc jns lods test xchg scas and in push xchg mov mov xor lock imul sbb adc pop enter push jo cld cli mov jns stos pop lahf adc and jae out aas cltd (bad) in xor sete add or pop sbb pop mov mov add jnp pop inc cld adc push aaa addr16 ljmp push mov jno pop jp fwait add sarb or ret mov and mov (bad) fwait mov adc in inc add movsl ds (bad) adc test (bad) jg and outsb out mov (bad) mov xor jo add and (bad) loopne cmp daa jo jecxz in or jns pop (bad) sbb sbb lock pop push ficomp xorb into mov jmp pop pusha sbb jns inc mov lock outsb sbb inc xchg add xchg xchg inc cmp jno pop pop jno insl test bswap cmp outsb hlt add nop lcall test mov add outsb xchg adc (bad) push adc popa (bad) jmp stc pop add pop jno sbb add xchg cmpsl mov pop stos cmpsb mov in jl loopne jno cmp int3 xor dec jo xor fwait add adc mov cmp loope loopne lods in mov jge lods sub mov js pop cmpsb sbb adc add push das (bad) push and outsb lret mov sub outsl xor and mov pop rclb fstpl jl mov pop mov inc cmp call mov call je inc addb and aad mov pop mov inc loopne data16 out ret xor pusha lods addb or loopne mul je or les xor adc outsl shlb push enter and or (bad) cmp fcmovnu xchg add insb mov jnp jnp movsl fadds outsl and mov push push mov inc ja cmp (bad) or out mov add mov cmp enter push pop push (bad) je pop jbe push cld cwtl (bad) dec fcoms xchg add inc fsubl cmp shrb mov pop jo pop inc cmpsb fsub popa aaa dec add bound je cld aam inc dec add in and enter xchg inc jae shlb bound pushf or loope,pn cmp mov movsb or ret and popf mov clc testb dec mov sahf mov sub fmull adc cmp cs test sub mov mov in add sbb add out sub add push mov add pop andl sahf sbb rcrb scas pop jae fdivrs in insl ret add push sbb inc xchg addl dec jl add pop add or sarb es dec cmpsl leave xor orb lret mov cmp add sbb jbe les clc pop or xor xor popf es inc adc mov add mov fcomp cli out adc ss cld add adc repnz mov dec pop ljmp dec pop cmp adc orb in jnp push scas sub sbb outsl shll hlt fimul mov add jmp sarb sbb add arpl pop (bad) shrl dec ds fs inc cmpb dec add popf adc daa je sub movsl fmull leave fcoml dec (bad) mov mov jo jge inc push lods cld dec mov adc mov stc jmp call dec in cmp add sbb loopne mov or or imul mov jg hlt xorb mov cmpsl jmp push cmp fwait call cmp dec dec push ror jnp cmc sar xchg aas mov add js out and jge pop cld clc aam loope add sub loopne andb rclb jge push add leave fidivrl push cmp loope jne ud1 gs inc test int mov pop sub js sub dec mov dec (bad) mov pushf add cmpsb add scas xor pushf xlat loop add imul ljmp lcall pop or xor movsb and dec sbbl jge cmp ljmp mov shlb sarl mov movsb xor sub or jno clc and mov lds jno mov dec jmp ret (bad) mov cs je and add mov xchg xchg push pop inc dec pop out shrb fsqrt sbb push hlt test insb add xor (bad) xchg inc (bad) (bad) mov mov ret or xchg and dec xchg add test mov inc xor movsl mov jle aam orb bound je push adc xchg or bound movsb sarb aas push dec leave xchg cmp push lock out pop js nop add lods popa movsl jo (bad) jmp push sysexit cmpsb fiaddl outsl or xor ja ljmp mov push in aam mov xchg sahf xchg sbb inc push in cmpsb jns hlt test lds push mov fistp adc and xor fwait xchg add in movsb or push (bad) mov mov gs mov adc xor sbb aam pop or or cmp fdiv adc xchg add pop loopne add jbe or sbb jno nop cmp dec xchg mov out das rcrl imul adc fdiv test inc or (bad) hlt aad pop imul dec pop pop and add loopne sub add mov sbb mov lea jle das in add sub stc add cmc int inc xchg inc xchg sub pop lock or icebp les inc test mov add jns andb xor dec lods in and repnz cmp mov sbb and xchg mov or adc pop clc pop mov adc sub xor sub es push pop xchg inc or xchg lret insb push clc scas fisttpll test push loope mov xchg and push jns mov jae mov mov enter ja and out sub or xchg sbbb imul sbb loopne roll jnp dec mov or notb sbb xlat je or jo and xchg sbb and mov mov add xor mov (bad) leave xor (bad) dec lock mov pop xchg adc sbb outsl loopne add add adc mov (bad) dec adc sbb das cmp or adc pusha jbe cmp add out negb inc dec xor pop pop xchg sub icebp jg popa add das imul loop xor int3 or xchg mov inc mov call jp dec movsl mov xchg xlat andb xchg out add fistpl sahf push popf rclb data16 cmovnp outsb rorl or fwait int3 andb out mov jnp pop (bad) frstor xchg jge xor mov jle adc add pushf cwtl add stc pop and pusha sub js mov dec sbb jge cmp xchg sbb addb sbbl mov and out pop sub and push lds in or mov push push mov xlat push or mov and rcrb pop fmul inc std mov ret add and inc mov arpl pop ds jl or (bad) jmp insb push cmp notb mov out and push rol xchg mov (bad) jno imul or inc dec or mov adc mov mov and enter stos dec in (bad) iret scas sub cmp mov mov movsb adc add (bad) xlat test add test pop and cmp data16 add mov ds xchg sbb push loope mov mov xlat add push xchg rclb test js inc ret nopl inc push xchg and int xor inc loope icebp ds iret xchg lea add pop orb lahf and push cwtl clc mov inc or stc pop and fdivr in and sbbb add mul or xor outsb inc dec (bad) lret cld enter jb mov push pop js aam push (bad) jmp nop into jae pusha xor cltd add aaa imul loopne lea jns or mov or add ret (bad) rcrl xchg push mov nop add or push js sbb mov enter add or pop cmpsl int3 les pusha mov clc lahf inc insb shr and and lock mov xor xchg pop pop jmp loopne pop ret add mov inc jno adc mov add movsl sti push fdivr int3 mov jmp subb dec in outsl sbb dec fs sbb cmp out sbbb call sbb (bad) adc lock js gs jg add push loop xor lock add mov dec push add mov xchg dec pop dec add mov (bad) daa dec mov lea cmp sbb mov mov pop dec loopne push cmp cwtl mov gs rcrl push and jle inc adc lea cmp mov cmpsl scas sub xchg lods jns add push sarb pop push jae add rcrl inc in cmp pop ljmp or xchg jnp push loop xor mov push inc mov and movsb fcompl jl daa lods inc test xor test cli fist lret cmp xor jp xchg nop xor or outsb adc fcomps mov xchg pop jbe cmp and dec pop jmp pop fsubs pmaxub mov lods cwtl mov sbb push mov jg and mov (bad) jmp dec bswap cwtl loop test jmp jae dec push and int3 (bad) xor inc sbb popf add cmpsb (bad) iret es push adc popa cltd or pusha pop mov add cmp andl mov test andb add dec icebp int sub xchg ja bound das mov pop add cld pop movsl pop mov or cmp push jmp andb add cli inc mov xchg sbb cmp data16 roll inc jbe xor sahf add xchg or sti and or add mov cli imul sbb or dec test psubusw ds (bad) arpl das inc incb mov addr16 cltd test test or stos jae pop pop and arpl jl stos fcomi xor fcmovbe scas es ds lods imul addr16 lret das ds loop les jnp jns xorb mov dec sbb or xor add fwait inc fmuls sub (bad) jo (bad) cmpsl ja pop push or ljmp xchg test fadds ficom andb jp sub dec adc fs mov loopne and (bad) mov pusha iret or cmpsb dec xchg lds in adc mov dec push xchg push das dec mov cmp mov (bad) mov mov mov aad mov int3 pop inc inc add and jns sarb mov add fwait xchg or scas add (bad) stc sub sbb pop push sbb gs scas pop aam icebp std jo ret pop add lahf pop mov push enter pop cmpsb push loopne xchg imul negb mov hlt test dec jecxz xchg and or sub jle mov lods xlat mov pop push aas and sub shlb xlat adc mov pop divl pop xchg outsl mov js call roll fdivs popf int loope pop or jo or clc pop std xor ret push stc fcoml inc push int3 mov sbb shrb (bad) adc outsb sahf adc inc adc aad lret inc enter mul xlat xorl jge mov cmp arpl push pop push addl ret add mov es sub cmp incl cmp xor insb mov inc shrb scas mov call out outsb mov push add mov mov dec movsb dec (bad) jo inc add adc add loope fcoms mov mov cmp inc dec cs inc fsubl pop xchg jb sub enter (bad) jbe hlt add add add add cmp cmp insb cmpb and and adc lods or mov ret xor les mov cltd lfs sub stos adc cmp adc adc jl xor mov data16 xchg dec xchg inc adcl insl arpl cmp dec mov xor and push les out jl pop jle call jl arpl mov or mulb cmp add data16 inc xlat jnp outsl rcl cs out cltd and in loope lock fwait sarl and je mov cmpl pop dec cmp jge rcrb popf ror or stos js popf pop in adc scas jo adc outsl push cmp mov dec mov and pop cmp addl inc cltd mov data16 aad enter in sbb add addb imulb inc scas mov mov ja cmp mov addr16 lds cmp jmp les add pop enter sarb rorl inc test out dec lock sti jmp roll movsb cmpsl cmp je cmp adc es insl leave or add push rol lock push sahf test xor mov mov sbb pusha cs hlt out dec dec aas add loopne inc adc mov cmp fimull shr nop orl (bad) or or mov sub or adc sarb xchg cmp adc stos sbb and add adc xlat repnz clc jg cmpb lahf dec or or sbb mov pushf xlat mov sbb leave add fistp nop insb xor xor (bad) inc xor pop in leave pop movsl mov inc test cmpb out mov pusha inc add pop xorl js int3 shrb add (bad) mov loopne mov andl std dec es enter dec add mov in ljmp fmull mov sahf mov and in jg mov clc and or in das in jl pop out fmul ret xchg jb mov or test stos cmp adc scas and (bad) iret andb int3 clc jl jle xchg dec mov aaa hlt orb ficom push dec test out jg dec dec mov (bad) xor sub test scas iret xor shlb enter xchg gs xchg cmpsb jmp aam fnstsw mov push dec hlt add push mov mov aad in repz ret mov rcrl popa mov inc add into dec add add loope movsb push jge and test adc adc xorb jnp pop mov and rclb dec movl cmp shl scas int3 sub lock push cmp arpl test fwait jge (bad) xor dec push push or xor sub mov jo xchg fnstcw mov in or lret add pushf ret push les dec mov fdivrs sbb hlt xchg clc sbbb (bad) ljmp or jl notb adc data16 (bad) cmp setle inc xchg mov mov cmp sub lods mov jecxz add and sub outsb les hlt jecxz nop xchg mov js xlat ss (bad) dec pop mov push dec loope push fwait in mov test js or inc std jno sbb add sbb out mov dec lahf nop push cmovs add outsb add dec or int3 sub sub mov fisttpll into imul xchg faddl out mov and and mov inc push mov jns and push mov test lods xorb rcll (bad) aaa cmp cmp sub mov mov aam out and add sub jg jle loopne ss je push cmp sbb test dec mov xor jle jmp cmp mov xorb add mov jne in (bad) xor loop adc pusha popf add mov (bad) pop insl sub xor mov pop fdiv cli and pop testl cli fwait and std jo out add sub jne leave xchg sbbl (bad) push or mov xor pusha dec dec popf jne add xchg or push icebp js lea push pop jnp ds adc frstor jbe sbb and mov dec add in mov mov add cmp xchg xchg and les push lret enter inc int scas and sbb movsw dec jo dec adc clc or push pop mov add add adc push xchg inc cmp cmp adc xor lds push add push imul ret (bad) and loopne in call sbb jbe aam cmp push cmp add add bound mov mov dec push lahf cwtl stc add mov in mov mov mov cmp sub mov mov or dec (bad) xor push inc jge sar out xor mov cmp ret jmp rcll sbb (bad) fmull fnstsw out mov add gs movsb jge xchg jnp lods test imul xor int sti and add loope mov adc pop pushf mov jge jno adc inc out add cwtl jmp or mov jns inc xor scas loope stc adc sbb aaa aam out loopne and cli enter jo and mov mov push or jle nop or dec int3 inc and lods jno inc sub call cmc mov divb test test adc andl mov jge xchg mov fwait rol out bnd mov lds lret cld cwtl (bad) push je and jg ret mov or mov sub push adc int3 mov rcrl je sub (bad) jl add out sbb xchg adc adc xchg push (bad) clc faddl cld mov pop mov pop clc cli cltd adc out dec fidivrl enter int pop dec movl ret test into cli mov jge movsl in mov (bad) imul xchg or inc inc bound lods xor in sbb arpl mov insl scas aas mov cmp lea mov cmp div adc inc stos sbb mov cli add and sbb mov jge xchg vpsubsw xchg add outsb rcrb adc loopne mov mov cli add sarl dec push or inc out xlat fldenv mov lods je push and xor push sub cmpsl pusha lock dec fsubrs clc jo jg adcl test js add or push jg mov rolb pushf or jp jge mov mov mov push cltd pop les add pop in pop add sub mov or push adc mov insl add adc xor add add adc and rorl shrb ret lsl imul mov adc (bad) push jp call les mov int dec jnp inc mov pusha iret sbb sbb and pusha test adc (bad) ret ja lods xor sahf js jns in adc insb jno inc outsb cmp pop sbb bound imul pop repz xchg mov loope je (bad) dec bswap sub pop xlat mov call jle pop arpl add daa lcall pop gs and sbbl int3 test repnz enter push inc enter cwtl mov lds loop add mov mov test std scas adc lods mov push popa sub or mov fdivs aaa add and orl push das add xchg sub shr notb (bad) mov jno mov repz mov loope leave sub aad cmp mov fisttpll out jmp cmp call jge popl pop mov push mov push and leave stc add add cmp or add scas or add repnz mov push je insb mov push (bad) nop mov mov dec loopne stc mov sahf sbb lds lea and sub push add (bad) mov and fwait mov cmpb push add pop xor out mov xor push mov jno inc sbb shrb inc lods push jl add mov into lods jb mov adc dec mov popa lods xor roll call add hlt idivb adc push or subb or add leave and dec adc imul (bad) jge mov fsubrp push ret cmp stos fwait sti (bad) repnz sub mov shr popa jnp push rorb icebp shrb hlt (bad) cmp into add pusha sbb or xchg lods xor popa cmpl jp jae incl aam xchg pushf add pop int insb add imul roll into and mov sbb push jne and mov movsl mov js lret addb xor sub add pop clc inc lahf rcr out dec inc outsb movsb sbb add xchg movsl pop xor sub add add and xchg jb adc mov in daa xor push icebp sbb push pop add jle sarl or mov mov movaps and sbb test inc mov add or stos add sbb push push add cwtl and mov xor test and mov addl in inc add dec and cmp lfs adc and nop lea popf and or lods push add popf call add test pushl pop pop xchg dec imul mov push or jne int3 adc mov mov cmpsb aad fs arpl cmp roll mov pusha xchg sub rorb sarl call dec mov sbbl and leave je sub aas test sbb jb (bad) (bad) cmp inc mov jmp xor std scas rorl xchg rol loopne in lcall int pusha test cmp sub imul inc jbe dec mov and iret add (bad) push jle into cmp and adc or push (bad) add (bad) ficoml xor jo mov (bad) out mov inc test push push fsubrl jnp mov mov imul mov (bad) shrb add sub (bad) sub test rorl dec lds loop imul pop add xchg sub and data16 (bad) bound dec pop roll in adc lea out cmpsb iret loop inc add outsb push xor (bad) mov dec rcrl dec jg fucomip test dec jno ret lcall or add call adc jecxz sahf nop or dec cwtl pop and gs fs pop and sub and (bad) add orb inc lea pusha movl dec adc pop mov pop adc out mov sub lods dec incb xor bound shr adc push setp pop movsb mov ss fs pop sbb sub and sbb adc push and (bad) push rclb pop or or pusha sub jb xchg ds pop (bad) mov stos daa sub xchg lea cs jge dec sub and mov jb shrb testb (bad) push loope (bad) addr16 sub in (bad) pop push mov cli aaa xor out pop cli and sahf in loopne sub mov popa (bad) lods mov add mov ds es and mov int3 cld dec push sub popf mov inc lcall mov lea jb fbld add sbb xchg (bad) jb add out loopne loope mov out and lcall xchg mov mov mov fcoms imul mov add pop sub push cltd cmpsl std nop jo pop pop push idivl push pop stc pop pop addb testl mov inc and and or popf xor popa lcall xor adc ds jge (bad) jo inc adc daa or mov icebp inc xor push imull sarl (bad) pusha mov xor push jg mov in (bad) enter ds nop mov push jge repnz sub adc xchg ss cli pop lahf pushf jl (bad) mov popf shll xchg scas pop repz ja in or and add pop dec cld daa sub adc stos sub pushf js sub stc sbb add cmpsl lea inc (bad) daa addl cwtl nop sahf inc add mov add jmp push (bad) adc jmp mov aad sub lea dec sbb push jle mov test movb push xor pop pop push pusha scas aad subb std pop sbb inc cli fistl pop mov adc stc lret inc enter (bad) add xor lods inc aaa in add lret andl push push pop loopne add in and fnstenv cmp test or mov sub push pop dec add scas pop mov mov cmpsb rcrb pop dec adc cld inc mov jnp repz jo jl push cmpsb inc add (bad) mov loop add jne push xor fisub in mov lea mov cmp push test pop mov or add lret or sub pop data16 testl add xchg add push push dec pusha and sub add rorb loopne rcll popa iret incl and pushl pusha icebp xor add mull push lods mov (bad) dec adc iret push mov and xchg popf dec jge mov adc adc insb push fs push inc outsb call rolb popf fistl or cmp je sti nop dec jl sub rorl or shl fsubp jo mov jno imul mov add js cmpsb mov push rcrl sbb jg mov mov aas pop mul mov push fadd add pop sbb imul aad push cmp jl lret stc sti xor xor mov xorl xorl push sti cmp test sub and add fildl sub cmp (bad) pushf jb sbb and xor popa mov add cli in pop xlat repz jo dec add and inc push or push lea cmp xchg imul dec ffree (bad) dec mov popf test ret das sbb pop mov pop mov adc inc xor outsl jge sbb xor cs and adc (bad) xor roll fist out cld and iret (bad) je repnz mov in add pop jb les fnsave inc subb adc push xor sbb push and (bad) aaa enter mov pop xchg mov clc in movb sti or sub mov dec push (bad) jno xlat out push inc mov movsl sbb cmp dec push mov cmpsl call and adc and in pop lods cmpb notl das push mov or sub faddl faddl mov jae scas cmp dec sub mov cmp pop cmp mov mov lret inc dec and adc sbb mulb roll pusha push mov cwtl daa mov int pusha cltd int3 neg or popf sbb pop fsub xchg add fisubl popa sub pop add fisttpll shl jle push mov loop shlb adc sbb adc mov lods fs pop xlat and jecxz add loope jge xchg cltd jle push sub jge lock add adc pop nop out loopne cmc aas add push call add push jb in mov xor mov add adc jo in ret xor and scas mov inc dec (bad) xor ljmp ja je jbe xlat sub and adc add imul sbb jno scas aaa adc adc jecxz and movsb imul mov mov inc lock sbb adc sub (bad) loope sub fcomps rorl inc xchg xor xor pop sub insb fiadd push std lods fs cli cltd icebp xchg jb add xor cmpsl dec pop xchg xchg movsb mov push leave (bad) cmp pop and lcall pop push mov add fbld mov popf jne popa push pop loop add xlat jl cmp sbb xor lods xchg push adc lds xchg jb or mov push out gs inc inc push add aas mov fwait mov adc shrl mov imul lods insl or fsubl out fdiv jle dec nop xlat lcall mov (bad) xchg mov inc (bad) xchg fsubl push xor xchg (bad) loopne sub pop mov or sbbb sbb roll cmp stc icebp mov aam out add insl mov mov pop xchg xchg in push call mov jne and popf sub pop pop dec inc xor sub cld mov addb push pop cmp cs xor sbb sub jmp frstor mov leave lock cmp in pushf mov mov mov and scas and inc clc in mov loop adc movsl lods sbb (bad) sbb xchg cltd dec fistp xorl leave lcall stc lods pop mov jno sub push stos fs dec xchg add push rorl out pop sbb loop xchg sar dec negl sbb dec adc mov push das cmp fistl adc mov inc jmp lcall pop pop or sahf dec add push sbb mov pushf mov mov and jns xor jo pusha mov popf adc xor lock fisubl sbb loope and mov insl outsb mov fidivrl adc out (bad) mov mov jae lcall js xor pusha add nop and dec adcb nop cs push gs fdivs cmpsb out rorl lret add pop mov sub lea mov pop pop jmp inc arpl loopne or ret fildll pop fnstenv inc pmullw mov sbb loopne dec imul daa enter pop mov je in mov add stos test xor add in jge xchg dec inc int3 mov out mov xor out push adc (bad) ficoml sbb insl loopne xchg ljmp int3 mov enter popa movsb gs mov das or popa mov (bad) lret aas cs push add jno sub fidiv add push (bad) sahf loope aas cmp in outsl cld popf dec aam outsl jo (bad) and fisub sub cld out push (bad) push data16 shrl and in bnd push mov dec inc inc enter lods stos mov mov and test pop mov jmp mov dec cli imul mov jle loope add jge aad sbb push add sbb jno pop nop mov push cli xchg imul mulps xor sbbl aaa test jno repz xchg mov ljmp pop adc or fdiv push cmc push sbb mov andl jl imul or adc pop pop imul loop cmpsl pop jo push addr16 cmp dec push mov pop bound fwait (bad) jge icebp pop xor fiaddl mov fildl cmp orl (bad) jns fcom adc adc inc xchg xchg sbb sub sbb fiadd mov dec dec lock fstpl mov arpl add jns dec dec data16 xchg adc push push pop pop leave dec nop repz jno hlt add repnz xchg mov cmc mov pop in push daa hlt add sub push mov xchg adc push lods xchg out xor (bad) cmp in push sub sub or icebp xchg sbb adc pop cwtl xchg call (bad) jp pop lret xchg roll adc (bad) aam add xor popa push xor add xchg jl jb and (bad) stos test jo sbb mov xchg rcrl jmp add pop mov icebp ds stc jns xchg mov or lea enter xchg in test sub xchg mov rol mov pusha lahf push push lea adc jmp dec lods adc push pop pop insl add and jo sub cmp pusha (bad) movsl push lcall add xchg fs jge (bad) xchg mov je ja bnd sub ss cmc pop add mov and dec pop (bad) call add test fmull push add aam xchg xchg hlt xor and sub mov or pusha inc add inc xchg jecxz test mov loope bound sti sub and adc jns mov inc je sub es pop (bad) mov (bad) mov inc (bad) int3 stc gs bound sbb add rcr pop add or (bad) nop push dec mov dec sar push xor cs mov jmp sbb jge sbb rcrl subl jns mov repz icebp mov and aas jbe inc add sbb test or sub xchg mov push pop jo repnz push push faddl adc sti not mov cld mov add jns jb lds mov popa stos jne cmpsb mov add push pop jl xchg pusha and sub and das mov jno sbbl movsl addb push insl add jmp scas adc mov lahf mov xor dec mov mov popf cld mov dec inc sarl ja movsl out push popf cs int3 repnz jno push stos mov les dec les shl inc sub pop mov loope cs dec dec add (bad) in outsl into repnz jl add cmp adc push jmp pop dec push mov push add adc lods mov test dec adc xchg or push sub sub push inc mov jecxz scas jo test push pop xor push mov inc loopne jo fnstcw mov dec mov pop mov sbb pop add jmp or rcrl push add dec add rcll add test int out dec sub pop cli outsb sub and pop sbb repz dec stos pop sub add xchg adc ficompl imul push cltd andl popf xchg add cmc sub (bad) pop xchg insb push add inc subb or ljmp xchg sbb push fdivs sub fdivrp lret stc dec add jp add (bad) mov and lret or loopne ljmp iret stos aas icebp pop inc mov xchg (bad) sbb adc xchg mov cmpsb fcom push loopne add xchg (bad) (bad) mov sub mov or jns cmc in stos (bad) dec cmpsb inc idiv inc popa xchg jns add out adc xchg xchg ljmp dec es ficoml push ret test xlat shl xor jnp jecxz sbb inc sub dec loop call incl lcall rorl les and (bad) push repz add (bad) sbb inc jnp jnp fwait mov loop loope pusha aam lret enter xchg lcall mov scas jns subl (bad) notl pop pop (bad) aad mov mov (bad) fisttp loope repz or jae bound and add add pop imul imul sbb dec ret int3 dec jg dec out sub cmp cli inc add mov cmp add pop test adc aaa lret ret movsb xor add xchg sub push sbb sbb xor jp imul jae imul sbb pusha push loopne outsl ficom lcall sbb adc ja add rorl repnz inc inc jp push jecxz pop loope cmp jg dec (bad) icebp and out das adc add int iret jmp add xchg cwtl es (bad) (bad) in je insl scas dec loop sub in sub push pop ljmp out lds sbb clc jle jbe xor sti dec cli adc fisttpll loop mov cmp xchg sbb jg sti adc add ret push pop add inc pushf mov fiaddl add outsl adc cmpsb ss sbb and lods jb add inc ljmp movsl (bad) or and nop cmp popf dec je int sbb xchg subl out and sub popf push lods (bad) (bad) (bad) hlt add stc cld jno imul int3 popa mov mov pminub pop cmp dec loopne push icebp js add lea pop adc sub rep dec dec (bad) mov xlat jae daa jge fs les shll shr in pop nop jns das push scas sahf scas push sub nop lods and out lds push loopne add sbb loope mov cmc addb call xchg stc dec ds add xchg pusha mov test mov out push jmp in inc lock popa mov adc inc (bad) out add cmpsl gs fsubl adc stos scas out lock push data16 and dec add int outsl rolb aas dec leave pop nop push (bad) repz mov paddsb pop in and add add test sarb test push movsl add loope push je js aad (bad) enter lret xchg pop loop lahf mov and cld adc dec stos lea jmp pop (bad) xor ds adc dec stos pop mov nop test mov iret mov sahf dec push fadd sub sbb add loope mov pop mov fs ljmp pop dec loopne mov idiv std rcr js lret jp or fisttp xchg shl push ret (bad) in shl pushf push mov sbb cmpsb or jp xor mov lods sub es push dec pop icebp imul xchg outsl push (bad) repnz (bad) nop mul loopne dec mov and jmp negl or push mov add sahf fildl ret dec lds out fist add jno test sbb lea mov fimull cmp int3 into roll xor lods movsl sub mov leave ds dec lret pusha sbb test cmp sti pusha push xor and mov mov pop enter (bad) sbb lcall (bad) xor push out inc xor mov lods in push cld das shl pop inc pop push add fldcw pusha mov mov std mov (bad) sarb push cwtl xchg ret mov jb inc mov mov clc in sub xor and fnop and cmp stc mov repz int3 hlt loope pusha icebp mov xor test scas aaa and bound jge pop enter add shll rclb ljmp mov cs and test lods test push xchg jo in add clc jae jo notb sbb stos leave sub mov ds xchg jmp pop je cli repnz mov mov xor add es dec xchg lcall shrl and std inc and add scas mov test sbb out loopne pop aad adc pop in sub inc cmp adc push jbe cmpsl add mov and dec pop lea jo mov sub sbb mov xchg stc loop xchg add cmc dec pop data16 mov mov mov (bad) ds pusha xchg pushf jno xor fxch fwait aas andb sub pop jo mov jno cmp sti pop movb rclb pop pop mov xor clc adc add jne aaa lea clc dec pop popf (bad) push xor test or push sarl mov lea out stos add and es sub mov aad lods pop push sbb lret add loope push xchg add or popa aam daa sar mov int3 inc adcl mov addl jne add mov int3 pop jmp jmp test add jbe imul sbb mov mov dec aad rcrb aam faddl jg pop add add sub pop sahf inc repz popl pop push sahf mov (bad) lock dec inc jp int inc mov or pop adc int3 dec stos add outsl dec sbb rcll (bad) stc adc negb hlt push pop fs pusha cmp movsl popa call dec fs js xor (bad) nop test push cmp std mov mov loopne add aad repz cwtl sbb mov add fstpl pop leave popf mov add cmp mov cli leave or aas testl pop dec push popf add sub xchg jp add mov popa pop push cltd shr imul push cmpb lock pop mov in xchg dec mov sub faddl inc xor mov jmp push sbb and add les ljmp out and add adc cmpsl mov dec pop insl rcll cmp add push loope sub mov shl or xor xchg and out cmp (bad) jo aam jb lcall (bad) fistpll xchg sbb sub mov pop mov outsb dec (bad) popa scas sbb ficompl or pop adc cli xchg (bad) xor roll push lcall mov dec gs sub aaa enter loope sar add gs cs aas sbb shll push clc fdivr or mov movzwl xchg sbb mov cmpsl xor xchg lods xor enter dec lcall std xchg mov dec jo cmp cli sub ret (bad) fsubs xor lret or and shlb jnp std push sbb push sarl out pop bound xor inc pop xchg sub inc mov aam add add imul cmp mov aas and data16 es shrl std rcrb push rorl sar cmp mov clc dec push mov mov sub dec cmp push sbb sbb jl pop (bad) push jno pushf outsb ljmp shll clc mov mov inc outsl (bad) enter sub inc in mov loopne orl pop into das insb add fwait sbb add and add fcoml hlt aad adc adc pop rorl pop sti adc cmpsl jns cmpsl js lods sub sbb add mov jne repz fldl cmp sbb inc rorl add push mov add loope cltd repnz xor mov adc cli js mov (bad) push lds enter xchg ret int mov clc mov enter leave orl stos rorl or mov js mov shlb fsubrp push inc test fstpl clc and mov cs negb mov cmpl clc xor je (bad) lret fwait or push add push xchg inc or popf (bad) xor adc push lods loopne add cld hlt call pop movsl fwait sbb int3 cmp xchg jg cmp sbb faddl hlt adc mov roll inc leave mov decb cltd movsb shlb loope sub mov add pop pop pop adc out rolb adc fs xchg lret sbb cmp mov dec mov loope add mov sub mov (bad) xor or sbb imul lods scas dec xor mov aad (bad) sbb loop push jecxz dec cmp and push pusha push fldcw dec outsl mov fstl loop,pn aam mov mov push dec mov adc test jp or inc notb stos test repz jo loop fisubr adc aaa jne push mov mov fsubrl xchg mov les repnz scas pusha jp popa mov and adc jo inc nop add jno ss mov xchg loop adc sub or daa push mov or popa mov mov jmp das dec xchg out push xlat mov mov add movsl imul pop test loopne jg fist push nop je aas (bad) aaa xor push cwtl out push xchg dec and mov jne in push (bad) and (bad) int jl add mov hlt adc pop dec fdivrs or out xor xchg push pusha repz sbb mov inc in adc pop mov add push lock pop in imul loope jl ss mov cld out loopne movsb inc add test insl popl add int (bad) cmc popa rcr test cwtl das add lock adc test lcall jnp or mov push dec sti xlat and pop sub jnp bound push sbbl mov fsubrs xchg adc popf aaa xor xchg lds nop push cld adc and arpl mov in outsl push add jecxz xor and pop cmp sbb cmp ds mov add adc cwtl dec push mov test jns mov scas cmp rclb xchg push sub sub (bad) mov sbb jge and add (bad) cmp push pop sbb push push mov push mov pop nop mov ficoml mov lcall (bad) push push mov adcb mov mov or and dec fs jge dec push mov fdivs outsb shll daa push pop test mov mov ror jae or pusha add in insb cmp xor mov cs push arpl and mov mov (bad) lods repnz pop sub je mov (bad) push daa sti fs loop stos jne xchg push xor cs adc push sbb cmp pop movsl mov cmp call scas outsb xchg mov xchg or ret jg popa ds stos fwait dec orb rcrl sahf mov fwait rol movb xor repz inc outsl test dec test add add nop mov popf add inc inc sub out test shlb add movsl lahf inc jmp mov stos pop repnz sarb and ret dec je sahf jnp adc loope cld jo test jecxz add push cmp test add inc sbb enter jne dec popa mov shlb and sbb cmp outsb and lret push dec (bad) (bad) pop pop ja shrl pop xchg mov add shll fcomip and pop mov icebp fwait sbb fstps or es bound frstor sbb pop push lock dec in (bad) xchg insb fs xadd sbbl ret lods in and lods xchg sbb pusha and loope outsb cld dec (bad) cmc xchg xchg xchg lahf ret movsb imul popf and popf push pop xchg mov cmp inc pop cmpsl imul mov call adc add pop pop call movsb icebp popa sbb data16 xchg icebp adc fs jecxz push jl push (bad) cli mov (bad) add xor (bad) into mov (bad) idivl dec enter push mov adc sbb pop inc stos punpcklbw cmc and dec lds lods cs in popa fs lea sub xchg push adcb and mov sti add dec orl xchg mov add push mov push pusha js dec mov push dec push popa std fstl cmp mov lret stc sub mov sbb outsb loopne lods xor in add or ss inc jbe pop sahf add int3 stc add xchg jg add repnz or xchg leave and xchg cs sbb in add js add xor int (bad) ja xchg lds test xor push addr16 sbb sub inc cmp xor movsl push push fistpll adcb xor out xchg inc cmp lods pop out push out mov clc push jmp mov jecxz lcall sub out pop ret repnz enter jmp mov test and mov sti iret push pop loopne addr16 je pushf push push outsl fs (bad) sbb ss loop mov mov jo pop sub rorl adc movsl inc cmp or (bad) hlt push lret sub and push aaa mov xchg imul lcall xchg mov sarb pop imul add mov xchg divl pop mov ds pop sbb push imul push imul xor xor push leave xchg test rorb lcall jb xchg std add or lret jns mov push adc pop popa mov mov add push inc mov mov fcoms mov lcall (bad) add dec sub mov jmp mov push and dec xchg gs stc mov xchg (bad) cmp push (bad) shrb jmp pop inc pop push aaa gs jnp mov or repnz sarl aaa push sbb ds ficompl aaa enter sbb es cmp test loope les jecxz mov mov rcrb add jmp mov nop push mov pop add cli incl lahf pop out ret outsl cld pusha or ficomp out push sar mov inc dec cwtl js inc add sarl fbld mov add scas out cli add push and (bad) mov es pop (bad) lahf aam lods or push outsb or repnz adc pop inc aas sub push xchg popf and loope push aad sarb jl pusha loopne sbb push lret add mov ret cmp pop notl dec push inc std inc xchg xchg adc sbb sbb ret test ret js mov test shrb lods clc cmp adc mov mov popf lcall push es jbe icebp xchg xchg mov (bad) jae and (bad) pop shrl (bad) xor mov mov mov add push push fiaddl bound sub add mov push cli inc les push imul pop inc call fisub jmp pop cmp insl pop test and inc pop sbb gs jnp mov add dec lcall xor movsl adc flds call adc rorb pusha push nop jmp inc cmp and push dec and and addl jno sti sub pop cmp popf data16 mov mov loopne jp add loope popa out sbb adc cmp push sbb pop and add or in dec (bad) or dec add lea mov jle scas add and inc push das cwtl pop add sbb jno in inc out or lea jno and das loop push mov push mov pop cmc cs insl stc (bad) call icebp ja imul dec popf inc pushl xchg and sub mov mov sub and lods stos rcr aas xchg add sbb jno inc mov mov push pop lods lock loopne pusha mov or and in clc mov pop add xchg mov lret or pusha lods pusha or pop sub lods test (bad) jnp (bad) mov and fnop enter or (bad) xor xor mov cmpl and or dec add or pop cmpsb pop nop xchg call and jecxz repz jle lcall dec (bad) fucomp push sbbl add sarb adc (bad) jbe add mov mov inc sub pop popa mov les mov jl data16 fwait push sbb and pop les jo dec imull (bad) push jle mov aas ja cld and es xchg mov dec mov out int sub in aas push mov mov test pop xor mov popa mov push sbb pop data16 inc repnz addb loopne jge mov inc inc add sbb push sub sub sbb cli stos and jge leave test popa mov sbb mov imull fldl2e mov adc dec les push fsts mov jbe daa push std (bad) xchg popa shlb jle pop in sub (bad) xor adc dec push jb xor xchg xchg hlt das xchg jge mov cmc pop jb cmc xchg adc outsl or mov mov imul out in fsub pop push inc sub xorb mov orl xor cmpsl mov negb inc push cmc loop push adc rcl (bad) rolb test pop sbb cmc push push pop pop cmp pop add imul sbb cmp xor mov lds imul pop mov dec push push dec push nop test add pusha cmpsl sub sub and pop les pop sbb cmc add je jbe (bad) in or popf lods and adc pop popa fwait and cltd xchg push out jb notb mov repz lahf test pusha call cmpsb fucom addb cmp stos clc mov pop or hlt add xchg aaa pusha dec dec xor jmp inc out cwtl dec and add dec in mov xor ss sbb pushf neg dec pop lods lds add pusha and add ret ja pop cmp ret repnz les jge cmp inc mov or jp (bad) lock inc sbb aaa lock sub mov push mov xchg sbb inc das xor daa fsts in call push jb pop push imul mov adc je fwait pop and adc lret mov add push jno mov xor test dec sub insb enter (bad) mov pushf stos adcl push mov pop jmp jge (bad) out lahf sub add add mov mov das adc repnz and (bad) mov mov jae mov ret and pop jl pop mov in ljmp in stc mov in shlb and push cmc pop xchg rolb neg jl jno,pn jae xchg roll aas inc push xchg ja push sbb sbb adc dec add add (bad) mov clc cmp insb dec loop jle sub rcl jecxz inc repz sbb out (bad) or and push std add cmp sub inc ret xlat push je push pop adc add ljmp in shl or xchg inc jle shll (bad) jae sbb sub pop aas psrlw pop or lea sub pusha cli cmc clc xchg jo or xchg fdivrs (bad) pop xchg mov shrl jmp mov xchg rcr cli je pop aam aam mov xorb inc inc add adc cmpl pop popf les dec pop jne fbstp lret xor iret fistp insl add cmc add hlt scas jns sub adc push mov insl int3 sub and hlt lods hlt dec pushf mov ret lret pop pop add loopne push jmp fcmovu xchg test andb xchg xor fild pop mov push push pop fiadd mov xlat and mov ret dec arpl sarb stc jb fnstenv sbb add cmp (bad) adc ja add shlb les jmp shll out js (bad) cmp and (bad) jno js loopne pop insl daa add xor fldt (bad) sbb dec jmp outsb pusha inc bound adc xchg xor add mov dec jmp sbb pop arpl jnp (bad) aaa sbb push icebp fstpl mov and jecxz sbb sub dec popa mov aad popf sub mov cmp mov int pushf mov mov xchg aas scas lret jns gs push test jmp and mov cmp les xchg add out and mov int3 and aaa mov int3 mov lea inc fs pusha out fist adc cmp jne jmp pop loop cwtl movsb xor adc add mov je and and outsb nop push push je add mov movsb ror daa lret fistl pop lret hlt dec xchg and pop xchg cmp adc add push mov das and leave xor pop sub xchg shl mov test cmpsb push or add push sbb sub (bad) jnp pop sarb inc cmp mov dec sarl adc bound jae and cwtl mov fist outsb xchg pop push pop sub cmpsb xchg add lahf hlt insl adc repz mov out add cmpsl insl in push pop pusha jae cmpl mov and das insb dec cmp bound mov dec add sbb adc add inc sbb add mov loope add sub push xor add sbb add call dec out inc adc inc push add sbb in (bad) rclb loopne pusha push test out and push mov xchg adc jle lock sub push pop or insl test push in int3 iret in cmc stc xchg mov push mov add sub push inc xchg xchg push add aas cld rolb sbb and cmc add adc fcmove xorb cmpsb jmp mov ror lahf aas xor cld cwtl test add xor iret add jmp cli insb xor adc or inc inc sti add jae xchg jne pop pop pushf ret xor pop rcrl test mov pusha clc inc adc sub add sub cmp or adc dec cmp and nop adc (bad) dec xchg (bad) fldt jbe pop cmp cmpsl push jg jnp aad jnp cmp and push das repz pop inc lods pop pushf mov add ds sbb (bad) jbe sarl push imul jl add or jle cmp jne jecxz divb sti dec cmc inc repz mov or or xor or add jno insb dec bound jnp jp xlat mov xor cmc sti jo aad adcl jle loopne push mov mov pop adc and (bad) mov pop mov negl mov add (bad) mov pop mov lea addl inc add scas insl int3 test call sub aaa sbb cltd loopne add enter mov or and lea add out or jecxz jg iret cld fwait sbb sarb imul fsubl icebp sub cli jns popf mov fadd pop fiaddl pop jmp cmp xor mov push pop or insl iret pusha outsb ss scas add cs or xor (bad) jnp mov adc mov push hlt pop fnsave les pop xlat xorl cmp pop pop mov cmc jge cmpsl inc sbb imul sub es and rcl mov loop pop dec xor int inc cltd inc xor pushf xchg stos sub out mov out xchg add or pop test jecxz pop inc fwait scas in sbb fcomps sarb pop jmp adc loope lods xchg fidivrl sub daa mov aam (bad) inc sbb gs aad js or mov push cld or outsb cmp add sbb xor jge add mov repnz test xchg out bound adc or jo sbb fdivrs mov and fwait scas leave mov xchg pop lea mov enter cs xchg xchg int outsl outsb ja mov mov in sub mov das mov cmp sub sarb sbb popa adc sub and in imul dec mov sub mov jge sahf lret popf or cltd pop subb push aad js test xor or daa inc adc bound insl dec mov fcomps mov repnz mov sbb in mov dec popf push xchg add fwait cmp add pop fsts mov repz add imul mulb dec pop add jb and push ja dec aam fisubr lcall or daa in aam loop dec and mov sub mov mov inc btc sub ret nop adc outsb pop das lods push mov add popa lret xor imul pop das rorb fstpl cmp (bad) xor mov clc imul shlb pop jge mov dec cmpsl dec incb sbb pop aas les (bad) lret inc jae (bad) add ss jl fcoml pop les sbb jp add pop mov lods dec dec mov nop aam xor sub jo loope outsl lret jne data16 test xor into rclb outsb add jp add aam popf xor adc xchg pushaw pop arpl rclb loop pop pusha push add sbb mov pop cmpb int stos das lahf fnop fs (bad) dec inc mov inc or sub stos outsl dec add cwtl mov cmpsl or es outsl add xor inc jns mov xchg hlt call nop pusha push cld in lods lret rolb popa mov jnp xor testb add mov cmp jp out (bad) xor jo push pop aam inc inc insb leave loop cmc or lcall test popa cmpsb adc inc (bad) das outsb jne aas loope mov mov sti push add mov push mov push andl pop mov shl sub xor mov mov dec mov dec cmpsb or loop cmp test decb mov xchg and xchg jae fadds lret cmp xchg push pop lahf mov or (bad) rcl xchg push jge jg push mov xor testl jmp mov mov outsl or lret in inc inc add pusha (bad) aad inc sbb jmp enter jae lods aam adc cmp mov push xor cmp ret add add adc jle add cmc push jp push enter inc inc (bad) (bad) es addr16 xor pop les push jnp jge clc pop test rolb push cmpl xchg imul loope outsb ret lahf add cmp stc jne outsl xchg push xor push push iret inc bound jo add movsl xchg sbb push loop push cmp shrb inc sub sub (bad) push xchg sti jle jne lock ljmp or mov fcoml jmp dec mov cltd cmpsl lret je fiadd and pushf aas xor scas popf xchg sub push (bad) xor push pop jg movsl mov push sbb adcl daa pop mov pop xor sbb adc mov xchg add outsl test loopne loope add cld bound sbb mov adc mov add es fistp fcomps xor sbb dec arpl cmp push popf xor mov or xchg pop push pop movsl lcall int3 pop push pusha aaa jge add or aam mov stos loop rclb lea addb mov mov pop dec xor and or cltd (bad) aad adc bound mov lea mov ljmp xchg ss dec mov mov pushf sub mov xlat inc call inc sbb jp popa jg or mov scas pusha inc (bad) push mov jbe movsb mov add xor or push (bad) cmp pop push aad rcrl xchg testl sahf mov lea lret clc mov sti mov jns popf ret inc (bad) imul push hlt sbb xchg xchg push mov out std test mov les cltd cmp fistpll pop cmpb or fiadd test stc in cmpsl sbb mov jmp xchg and lock mov jle faddl fldl cmp ljmp dec sbb mov lock pop sub loop cwtl (bad) es mov aaa loop jb ds cs xchg loopne add mov das xchg daa push xchg shr mov mov and lods and loopne sub in mov fidivr popa icebp mov repnz pop shrb (bad) or sub fiadd mov ja push in test ljmp mov sbb jo pusha int3 xor das loop or pusha add aas jnp sarb sbb mov or add sub sbb add fcompl add lods xor aad inc sti jo popf jo bound jnp test push movsl dec xor loope imulb jecxz loope sub cmp shll or je out into lcall test stc dec mov das sub adc jmp add shl test push fs mov mov pop xor dec dec pusha jb fnop push dec xchg and adc enter jne adc (bad) mov loop add mov pop aaa int3 ss sbb sub test jmp aam cmpsb add insl pop push lods adc mov (bad) pop mov xor movsb jnp push xor mov mov dec push and fs add mov xchg out popa nop mov pop (bad) jne adc popa pop push add out and lock mov dec jo mov in jno sarb shll xchg notb xchg mov pop xchg or cs out daa popf fs adc (bad) loopne add shr fiaddl push test mov sub fisttp jne sahf subl aad inc xor js add int3 mov push and jmp add jle add mov andl cmpsb mov add xchg add mov pop jge add outsl shl mov popa or adc inc jmp inc and into outsb aaa ret xchg push lret jl in jmp icebp cmpsb mov add dec das mov dec xchg xchg xor rolb cmpl test ret loopne add out pop pop mov bound push aaa addl sub stos mov push sub out pop sarb or aam add jmp out pop (bad) jno stc je les xor ljmp push add adc rcrb shrb popf aam (bad) mov jno std jmp jmp and inc lea mov sub (bad) int inc adc push mov xor jo mov sbb cmp add push sarb pop pop out loopne arpl mov rolb push push add and push xor imul xlat mov cwtl rcrl pop into pop adc adc in mov bound lret cmp test add fisubrl sahf iret mov sub (bad) insl xor xor sarb hlt mov fwait mov adc in ss cmp jnp cmp push push inc repnz bswap flds decb lcall nop xor popa js pop hlt inc and fildl push sub mov pop xchg and cmpsb push mov rol mov out (bad) push je adc ss push data16 cmp dec dec add mov xor mov dec test xorb jo jmp mov popf mov inc add (bad) inc push fwait add arpl out (bad) in imull push push movsb lcall xlat xchg pop xor jae jg xchg mov jl pusha rcll (bad) mov stc int3 add mov adc fadds xchg (bad) dec mov sbb in sub popa sub fsubrl and xor push gs repz push mov jecxz mov sub push (bad) mov enter jno add stc pop subl aaa xchg xor inc inc cs mov mov (bad) jne pop lret push push lret xchg (bad) mov sarl cwtl pop adc orl sbb mov movsb jb xchg push sub das jbe or (bad) cmpsl jle movsl jno inc and and push dec insl inc (bad) jmp lcall xchg jno enter sub push jno xchg imul faddl rcrl cmp stc inc hlt sub inc icebp sbb mov jnp jbe ret cmp cmpb push xor sub out loope (bad) mov push out repnz adc add or push mov call (bad) repz cmpsl jae jo jg in dec pop mov pop mov insl mov enter mov or ljmp sbb push (bad) jecxz pop jl dec jecxz mov cmp rcll std shl xchg insb in pushl inc mov xlat js test adc pop in add cmp jb popf stc add rorl popf jno jns (bad) hlt fcompl xchg ja sbb je and pusha cmc add jnp imul xor sub gs jecxz add mov mov and fnstenv or jl xchg repz jg aam dec inc addr16 push push stos jo mov (bad) mov mov pop lret loop xchg mov clc xor and popf loope sahf adc jp inc xchg cld xchg mov (bad) sub jo mov push fnsave sbb ds in add cmp (bad) or jbe lock and enter xor add xchg push mov cmp insl rol sbb cmp mov icebp test movsb loop mov hlt inc push (bad) ret pop push roll jo jae push out push dec or sub pusha mov dec stc add fucomp xor outsl pop pop pusha mov jo push sub cwtl pop movsb js mov or std pmulhw mov and add adc mov xor int3 out cltd mov xchg push (bad) pusha push mov icebp add mov mov add stos sbb xchg popf push aaa sbb out push test lahf stc push jmp es inc call std mov xchg mov stc scas fidivl enter jmp out sub or fidivrl jno jmp add mov scas into adc jle insb in ljmp dec add cld xlat inc or das pop (bad) jp pop adc int3 pop inc movsl mov or push rolb andb add dec mov adc pop mov jns stc std test in mov sbb xor mov enter repnz popa cmpsb shrb fisubl popf add shll cs mov sbb outsl nop add jmp sti mov in fndisi(8087 sti aaa xor or out and pop popa das (bad) jg add xchg sbb xchg add add decb and pop out repz in test mov cmp jb xor add (bad) cmp fimull add mov sub pmaxub cmp es pop cmpl pop sbb pop sub sub add daa cwtl ljmp aad (bad) xor leave ds xchg divb jecxz dec cmp or rcll cltd sbbl xor dec xlat out lcall inc aas outsl icebp cmp add sbb sbb jmp repnz sub inc mov jno sbb mov dec out enter gs xor les add push (bad) xor xor pop push loopne jmp out pop and push add mov xchg pusha mov leave in nop dec pop mulb hlt es pop or or pop hlt add xchg addb ss mov push mov xchg adc xor cmc pop nop cmpsb sahf add xor mov mov mov inc xor add popa xchg nop mov xlat dec lret std call fucomip ja inc inc ret jne es or (bad) pop pop das push mov or jns fs mov sub (bad) jo pop nop fdivrs mov lock inc or cld loopne adcb pop repnz push ret jae push pop jle imul or mov fsubr xlat outsb mov icebp push addr16 pop lret xchg nop das mov mov jno add ret lods das add lahf pop imul push mov add mov in rorl das and mov enter or xchg mov pop cld in and xor pop mov sub pushf add (bad) xchg jb sbb add pop lods cltd jecxz add call jmp lahf cmp and pop jle mov xlat out mov add mov cmp (bad) mov push andl repnz sub mov xchg mov stc inc rcrl rol xchg add addl dec mov les sbb add test or cwtl outsb popa pop (bad) mov add lods adc lret mov xchg pop mov push pop inc sarl fwait cs inc loope inc popa xor cmpl sbb rolb jg fisttpl mov add bound pop mov inc shlb clc jg mov adc xchg in pop mov hlt fisubr mov arpl enter xchg lret (bad) mov push pop std adc push xchg div push push cmp mov add mov push dec pop xor loope mov mov mov push xchg sbb inc daa (bad) ja les sbbb dec je adc fs mov pop mov or push dec pop ret add mov jae sti cvtps2pd push and and mov push or out pop popa mov mov (bad) pop pusha mov cmpl xchg loopne push movsl loopne lahf or (bad) js imull mov stc std call repz pop sbb adc sub or mov push inc rorl dec sub add fdivrs mov loope mov mov repz int iret test clc lods cmp dec push jne adc ljmp add and add nop jecxz mov insb jle repnz add jnp cmp sub add icebp mov jae std les pop add popf loopne ljmp inc adc jo mov data16 enter ja jae insb xchg pusha loope repnz cmpsl rorl test dec lods add sbb testl mov (bad) push xor sub and sub xchg outsb addb sbb sub leave jmp (bad) js dec jnp jg adc push or in push arpl push fldpi sub or bound daa jl pop xor add cmpsb loop nop sub xor outsb fadds push xor jmp ja push aad dec adc xor push add sub stc mov loopne cld inc fisubl xchg mov aad cmp xor add mov cwtl (bad) outsl adc pop push mov test sub jb aas aam arpl and sbb jge pop repnz mov or fstpl loopne xchg mov (bad) and and (bad) loope cmc or push in insl (bad) je add and or outsl movsl push adc xchg mov mov mov in popa fwait scas and sbb inc cs add (bad) or (bad) hlt mov or push bound mov push push lea add or js (bad) pop add (bad) das xchg out sbb xchg mov cmp (bad) movsb cmpsl sub push push clc loop add loop mov fadd pusha or ljmp and bound jne cmp fidivl sti mov jecxz pop in push aam add jmp dec fidivl cmp call popf pusha mov sub xlat adc stos jle in mov out fs pusha xor aas rolb and mov hlt arpl pusha cltd fsubs lcall test cs imul mov add mov add fld gs daa out xchg jl sahf lcall insb inc imul jge push cwtl inc jbe sarb test sbb jns and cld add jae pop imul fstps pop outsb or jge lea adc mov and stos fadds cld push adc sub das xchg mov push lods bswap clc mov loopne in fldcw xor int3 rcrl jo cmp in mov clc jae sub testl icebp hlt cmp mov mov pop stc movsl jne movl xchg lcall popa xchg mov and (bad) sbb ret loope fwait aas pop sbb lods push mov mul int3 push addr16 add xor repz jae fmul je scas pushf jno push and jecxz sbb sub mov push ljmp scas lret adc es pop pusha scas dec pusha aaa bound mov or mov xor out mov test and (bad) cmpsb adc and mov adc and mov stc add out je add scas lret lret pop fidivrl je (bad) xor test repz scas movsb scas sub cmp xchg cmpsb mov cmp xchg jae stc adc stos out rorl (bad) es popa aam jns dec mov sbb lea dec jno fild sub mov sbb (bad) pushf sahf mul cmp lea outsl xchg jbe jp add pop or lcall xchg das add test je cli push or xor inc jno adc push pop inc mov or adc adc outsl jmp push (bad) add js cwtl inc adc test ret nop in adc nop (bad) loop dec mov adc adc shll add mov dec cld test shlb inc dec xchg sub xchg dec jp aad adc add or inc ret jno or jne pop fimul fisttpll push add sbb pop inc std stc lods or or mov lret or cli int jns inc inc push lahf rorb add (bad) icebp das jmp dec sti in in inc popf call scas mov mov add jmp stos adc std hlt push xchg pop xchg mov push gs in icebp das popf repnz adc sbb push add push and push xlat pusha mov add adc jb push ljmp pop imul jp add sbb dec xchg jae or imull aad adc cmove adc cld stos adc push lods jmp pop add xor cs scas push xchg mov cmp (bad) jne mov pusha mov dec adc and sahf lret mov mov and jg sub push dec push fcomps pop pop pop push les sub push ret movsl dec out push and jle adc mov ss lcall pop dec adc sti repnz sahf leave xor jle sub add imul lcall mov scas and or cmc add push mov popl movl gs mov jmp jecxz pop and movsb add js loop inc rol jns movsl into imul jbe imull mov test mov xchg xchg arpl xor push mov add push inc addb mov cltd push cmpsl cmp cmp popa loope xchg push pop pop (bad) jb (bad) mov fbstp inc push mov movsl add inc pop push insl pushf loopne fmuls add cmp jp cmc pop pop imul add inc (bad) in (bad) mov (bad) mov aaa and ss int and pop aam mov sar faddl push fs and test cld lahf push fisubl push mov push xorb xchg xchg call (bad) (bad) (bad) pop sti xor enter add int3 imul mov push sub jle pop out sub dec add loope clc jne jo add jmp xchg pop jg cmp mov mov jge mov adc cmp mov ja in mov int3 test pop fs fcom repz and mov cmp or or jns inc stos add fidiv mov mov test sbb mov dec ljmp aam xor and dec mov jb stos adc (bad) (bad) cs ret or in inc call pop push sub mov or cmpsb sub in daa ds sbb fs call add je cmp enter pop popa push aam dec mov cmp mov ljmp cmp cmp rorl sub push outsb das jmp das (bad) mov and (bad) fidivr mov cmpsb add dec sbb push sbb sub sub xor or inc movl adc aad daa mov rcrb test sbb js adcl ljmp (bad) stos mov dec mov xor lock in or loope rcrl dec xchg push sub adc adc mov pop push mov sub push (bad) adc pop or daa sarl mov and mov loope out lock and mov cld and test xchg into mov adc sbbb adc stos insl cli lea cmp test imul dec sarl (bad) jno pop incl mov mov imul inc adc add rorb xchg loop dec inc int3 adc xor mov xchg call inc xchg fbld xchg in add xchg push mov xchg inc andl loopne sbb test mov out sub adc loop js xchg push lods nop jle (bad) fcom cli push call lods sbb mov cmpb jmp mov cmpsb fdivrs push pusha lahf adc mov jp dec push mov and sub rsm or jb jmp icebp (bad) jne nop adc addb mov fsubs jl inc pop scas mov sar mov xchg clc jno sbb add js mov (bad) jno lahf push xchg and nop lock clc xchg xchg decb lret cmp sti xor repnz popl fist xchg xor jmp add jle (bad) jp cmc cld adc push add inc shlb mov cltd pop jnp std mov loop mov push out call ss fisubl enter gs mov mov in or pop jg pop mov js cmp bound outsb dec mov cmp add aas sbbb dec push push xor pop loopne jl enter loopne pop dec movsl push push in inc out rolb sbb sub inc or popf sub negl push xchg mov and ja xchg jle xchg pop popf mov push jo lods enter fcomps cmovns xchg aaa out add xor adc mov xchg mov add scas pop imul push mov mov pop pop ret push xchg xchg (bad) fldcw icebp xchg sub loope mov sbb xchg cmpsb mov push outsb xor xorb and push lret shlb push jnp dec fcompl test pushf cmp mov repnz out and pusha mov mov add mov in outsl and pop xchg popf aaa and pop popa add mov repnz xor adc jge dec cltd pop je (bad) inc sbb sbb lcall dec fisubl fsubr pop popf adc ret aad negb or sbb jns add aaa push stos out and cld pop fcomp jp les pop mov das sub add divb mov xor test mov sub pusha cmpsb imul push orl push mov fstpt lds aas ret pusha mov test call or clc mov lea jb daa mov enter (bad) xchg lock xchg outsb adc xor mov cli sbb sahf sbb mov or into mov loopne pop mov pop mov aam fldl addr16 pop cmc push cli popa inc lea mov push (bad) xor insb inc adc out das cmpsb or and shr pop pusha test ret sbb enter scas mov loope fldt xor adcb xchg add lret scas fdivrl pop pop add cltd adc test lds add inc jnp add loopne icebp jmp push dec cmp or sub mov xchg sub adc and and cld adc shll jl inc jle jne pop add clc jmp push xchg jno add jbe xor test icebp sub adc bound je push or and hlt push popa jp xor mov cli jmp pop call imul or or add xor adc mov sarb popa push mov sbb mov add enter inc sub (bad) xor or in outsl sub or sub rcrb adc ror loopne (bad) scas mov ljmp push push fwait (bad) mov imul fs push cld xchg and es push sarb sbb xor popa mov push xchg mov add pop (bad) jo push pop out cmp lea sbb add lds add mov loope adc add rcrl subl cs and or ss into nop mov mov xchg inc adc mov cltd xchg sub adc stc xor into or pop xchg sarb add in push mov inc mov push mov sbb mov dec stos fs in adc jge sub and imul (bad) jno dec add fwait pop (bad) mov add in add jmp insb sarb xchg into and pusha mov negl scas mov adc sub sub push push xchg sti push xchg mov adcl push add lcall xor xor add sbb ja cmp cs daa or adc mov fiadd push (bad) in adcl add je movsb cwtl add xchg inc push adc cltd pop and mov xor hlt xlat ror ret push sub mov mov add adc fcmovnb lock mov add lret add pop cwtl call cmp ret lahf fs adc or add leave arpl pop fs or cmp cli xlat add je std add cltd dec (bad) push add stos aaa jns push shl cmp sbb out lock hlt and gs in jecxz sub add mov cs adc call xor pop loop pop add enter cwtl pop dec cmpsb pusha add fwait cld and mov and xorb and cmpsl lods add pop dec mov rcr aaa movsl fld es lret sub push das clc cwtl stc and adc stos js mov lea add mov and push cwtl sbb dec and rcrb repnz pop jge and mov test or iret push adc imul enter add cli leave pop or pop add pop test inc movsb pop jecxz adc out push mov push pushf inc test cmp jl and pop mov sbb cs lock adc xor mov xchg lds inc test and nop test or shl inc pop dec xchg movb xor stos and sbb out pusha push nop inc add xchg mov xor mov dec mov inc mov popa rorb cmp xor (bad) lret jmp es and pop (bad) jno (bad) mov jo (bad) fsubs nop insl mov lods add jg cli push je dec iret jne mov xor shll aam jb sub lods or test pop pop rcll add sub pop sub pop insb fs mov cltd (bad) xor push nop out or inc imul lcall jnp cmpsl aam add out adc mov xchg adc nop xor sbb pop pop cmc or lods in push cwtl fadds add push es jg in sarb test mov cltd mov push or enter aam adc xor add adc pop clc lret inc ror inc push inc imul xor rolb cmc ret xlat or sbb cli push mov add jg add imul sbb push pop mov decb fwait inc jle rolb loope ret pop mov rcll dec clc and push sahf leave into or cmp sub test in lret test or (bad) fildll add mov enter push outsb testb popa pop inc mov inc out or leave call and or push mov pusha inc mov cmovns xor adc jmp (bad) rolb and lret adc out inc (bad) cld push xor push and stos push mov push rcrl rolb (bad) into daa inc pop rcll mov sub cmpsb add xchg mov je or test fisub push adc ljmp pop xor pop sub xor cltd imul xchg inc and loopne mov rcll and sub lds hlt pop pop stos xor mov outsb xchg out punpcklwd add lods fwait insb xchg pop add test lock or inc not cmp orb jne test cmc add mov clc jnp mov mov arpl add cli add enter mov jns push movsb subl (bad) or js cld push (bad) dec sub sub xchg insb sub and adc mov pop pop sbb inc push scas out test shrb pushf clc mov lret sub sbbb and mov iret add test pop cmpsl push mov xchg call hlt jecxz orb inc push sar inc rclb xchg push cli mov add es int movsl (bad) mov imul addl enter dec in sbb pusha xor xchg pop pop or sbb push clc hlt rcll xchg pop sahf mov cld adc jbe mov test les and popf insl inc push andb or pusha xorl repz add sbb movsl sub test mov dec js push sbb stos cs push add (bad) inc imul incl dec mov dec cmp hlt ss sbb xchg call push (bad) je inc popa inc inc inc pop andb xor lock mov cwtl nop and dec adc mov adc ds pop repz mov dec mov sarb add or js xorb and fwait add inc sar inc enter idiv popa inc push add jmp adc jl xchg lock aam push mov int3 scas int in inc cs icebp fs push lock adcl inc sub mov mov xchg xor lahf ret inc push (bad) jle cwtl int3 and imul push mov arpl sub inc mov dec xor sbb mov add insb pusha inc fcomps push int sbb jae aad add sub outsl add jo test or add andb push loop fs pop mov add xchg cmp mov fwait mul push fdivrl aas (bad) int mov or cs add or lock add (bad) in add ss lods mov sbb sub pop ret je add je dec pushf pop movsb pop mov mov sar xor inc mov bound sub inc imul mov mov mov rclb in sbb cmpl add nop mov mov scas orl dec call fistl mov fadds or in pop sbb hlt cwtl orb es mov cs mov and adcb and pop mov or jmp icebp arpl mov inc sub xchg movsl and cld in lea push cpuid test pop inc sub fnstenv sub in subl add cmc sub cmp dec mov jno lods ret dec sbb popa inc mov mov lret or cmpl xlat subb (bad) mov lock nop or out pop test pusha sbb pop xlat or in push mov adcl xor je mov pop add and xchg out bound mov adc (bad) enter stc cmc xlat xorl mov (bad) jp popa pop rolb cmp push mov add cmp sub lock icebp jno add xchg fwait loopne mov and je jnp pop dec push clc cmp andl js and and pop xchg push mov mov xlat loope (bad) in ror rol scas loope pop dec xlat xchg add add cmp mov mov sbb mov rclb add gs mov in fwait add adc dec lea lcall nop xchg cmc push dec out inc addb fnstcw push mov roll push je cmp loopne test mov sub cs push jns push jbe movsb push (bad) push mov les sub sarb lods pop (bad) jo cmp fldl fnstcw lret or xor imul sub pop dec lock popa push jg push mov mov cmp xor and pusha std dec push inc test jns jge jbe add add xor fldl gs es imul push push or and cwtl sub lock xchg or adc (bad) and push add leave mov sbb mov push and or test repnz lds insl pop jmp and pop (bad) int3 fcoms xlat lret leave int3 lods xor imul rolb xlat das fnstenv cmp mov nop dec sub in add jnp lea pop inc xchg and or cs inc jnp sub cs les jmp and dec pusha insl ds hlt add (bad) jne ret mov jno faddl push inc jbe dec jge pop pop pop xor pop add int3 std xchg aad lret cwtl jb or pop sbb push add cmc jge popf add (bad) decl sub into lcall fsubr adc and xchg pop int xchg cmp sub or pop rcr sbb jl add push nop pop fsubrs xor push jg cmp lret xchg pop ret in and add pop loope sbb pop xor sti faddl stos adc lahf arpl repz fisttp call cli jnp mov and cmp jo int3 sbb sbb pop mov push aam pop js in (bad) ret sbb jge or add imul or mov lods xor les xchg andb adc outsl jmp xor adc push inc movsl sbb imul sbb sahf ret cmp call aad sbb movsb (bad) mov in xor adc leave stos add push inc add mov inc mov mov mov lahf sbb leave sbb jo mov add lret or push cli popf xchg jne popa in lcall js inc push sub pushl add xlat repz add push icebp gs loope fdivs lock dec add mov push aam pop xchg subb inc and (bad) mov add jle pop xchg dec cmp stos and mov jo (bad) jle add fnstcw test pop add sbb push ljmp add cwtl and pop lret push mov rcrb shrd xchg xchg pushf cmp or xorl mov aam loopne inc pop push add addl out in cwtl xchg fiaddl scas lcall add jle mov pop pop add sbb dec imul push add iret add push pop sbb out pusha add (bad) jge inc xor bound iret fwait push outsl pop sbb and imul sarb xor push ds lahf push or adc adc mov inc inc or das daa movsb jae adc or lock jns pusha pop cltd xchg push xor out add push div dec dec xor mov pop sldt cmp lret ljmp in cmp cmp gs clc jmp lret loopne add pop jge push push jmp cmpsl stos jo xchg in mov fistpl cmp pop adc xchg mov push xor movl mov popa ds sbb mov push or (bad) mov xchg scas mov add push or jo adc xor cmp push ja cltd test lds lret outsb shll add outsl xchg add cmpsl inc sbb fcomip (bad) mov xor imul ret inc aas mov xor repnz hlt inc pop insb cmp in push into (bad) insl push inc add clc sub add (bad) roll jne sarb out jecxz xchg or xor mov pusha mov xchg (bad) js ljmp lock ret pop (bad) fbld iret sbb aas sti jb xlat int3 cmp or pop pop popa outsl sub push pusha add push jns hlt sbb out or jmp cmp cwtl ret cmp or or fidiv cmp xor add lods adc imul sbb cmp (bad) cwtl lock loopne fidivrl xchg insb hlt cltd imul push push push pop mov push pop les arpl sbb adc sub xchg (bad) pusha add push xchg faddl lock inc mov (bad) je jbe stc jecxz mov in loop icebp sub sub mov sti mov pop add leave jp xchg stc cmc out push test js pusha mov arpl lock out nop stc and add sub fiadd dec push fsub dec mov add xor stos mov in es inc jp xor sub and es add (bad) mov xchg aaa mov nop push les push cmp push bound and adc sbb push sbb xor icebp adc loopne and sbb cmpsl clc mov cmp popa push insl lds inc fwait (bad) jne mov or mov rorb and xor adc jne dec mov scas aas push (bad) mov fisttpl inc jne xlat pinsrw push imul cwtl or and cmpsb shlb dec mov scas jo adcl fidiv and pusha sub jo (bad) pop shlb int3 xchg and test cmpsl cwtl (bad) in cmp adc cmpsb jecxz add ds clc xor les leave push dec hlt pop add xorl je movsl xchg adc adc mov dec xchg enter hlt jno push adc in dec jns xorb pusha imul adc dec out adc fisubr call inc sbb les xchg pop dec or aaa jo add sbb mov mov cld add inc int jnp outsb mov mov adcb (bad) sbb xchg pop or inc and xor (bad) js lahf jo repnz mov pop xchg fcoml add push xchg (bad) push je add xor jge fcompl fs sbb test std int3 call icebp cmp aas dec adc jne sub (bad) adc xchg pop mov jne xchg shll jp pop add repnz xor data16 loope loopne iret add push rolb cmp mov pop fsubrl jmp test and mov mov push out std xor mov mov test lret out (bad) add ret frstor je loop aas push rclb sub enter dec push fadd fcompl pop rolb mov ret (bad) in jae xchg gs and sbb dec add ret loopne dec popa loopne sarl imul js lret mov rclb push js sbb jns mov and push insl rol inc js push lods adc mov or mov fadds pop test mov fldenv and mov and jnp sub in mov push sbb shrb pop scas int3 cmp (bad) xchg jne inc cmp sbb sub (bad) mov or sbb pop test mov leave inc sub loope or and test repnz pop ljmp and xchg push and mov mov imul fnstenv xor jle sbb lds fsubr xor push in inc xor push shlb jl push daa and shrl mov outsb testb or adc sbb les imul das and call cmpl inc or jne cmp std je and sbb rclb cmp push push inc xchg in and push fdivl sub rcr jne test jo xor addb mov push sbb jmp hlt mov out sbb mov inc call xor adc xor (bad) test xor cmp in cs jl lret add scas adcb fadds gs out (bad) in hlt inc mov mov mov js cmpsl xchg sbb sub push sub outsl push out and mov (bad) jae push xchg dec aas or (bad) mov add (bad) js pop (bad) (bad) push jne mov and in push add add in lcall cltd enter bound stos add mov fcomip inc jbe mov fiadd scas cwtl lods sbb add jge and cs test jl fadds or sub ljmp xor or (bad) dec mov and add hlt andb jp add pop lods push rcr xchg xor test sbb ds cmpl enter pop inc push out or out add ja mov cwtl faddl cmpsb add fistpl fstl adc aam or push das loopne in sbb push sub fadds mov xchg daa fstl sub dec xor cmp out in test jo cmp mov call ret outsl sub xor jne push mov mov bound cmp sbb mov push inc in ds ficomp rclb adc or cmpsl dec mov and pop je inc xor iret aaa pop and mov jne and jnp testb xchg (bad) je movsl les loop xchg mov nop add movsb stos inc in and sbb hlt cmc adc or cmp push stos add nop push rol sbb imul int3 fisubl mov sbb jbe stos subb lret cwtl dec add pop xchg rcrb gs mov cmp push sub fdivrl and aam mov mov mov orb jnp sub add adc cltd js in arpl rcr jecxz data16 pushf lock mov jb call and addr16 cs enter adc jle mov cltd cwtl lods jp hlt (bad) fs add sbb incb adc pop hlt aaa xchg loopne mov out push and imul inc mov arpl add bound cmp inc cwtl push repnz les (bad) rcrb cs cli pop rcl push jp adc or in repnz jmp in add std les mov lret pop test ret jg and dec aaa pop xor adc xchg and cmc out in scas outsb push arpl add inc lret lock (bad) and add add ret popl pop (bad) es frstor test iret adc sub adc xor or out cld dec fnop and ret add jns adc les mov movsb add mov in pop cld mov add hlt add mov push xchg dec js addl decb and jmp loop add or push xor in push ds repnz (bad) xchg mov xchg or and mov add pop lret and nop test push mov jne (bad) mov xchg out pop les pop sub (bad) sub add mov and (bad) cltd or xor (bad) mov shlb pop or pop add mov adcl in icebp fbstp cmpsl clc sub mov jnp in aas mov in cs inc or and data16 dec test add leave jb test mov xchg dec fs icebp loopne pusha push xor inc adc add sub (bad) (bad) push pop adc and mov out push cmc adc cld fisubr repnz mov inc pusha mov sub add lods jae xchg inc pop out (bad) push leave push mov mov jne daa cmp add push or xor loopne jns push fbld xor sbb or mov mov sbb mov mov outsl lret sbb jle,pt push ljmp pop push test enter lods push xchg cmp inc jne push jo and jle xor and loop cwtl lds mov add ljmp and xchg packsswb pusha es add mov js sub xor and add cmpsl sbb rcrb or or and in add rorb test add xchg push add jl jmp addl push cmp add jnp cmpsb jecxz,pn (bad) ss js jmp in aas sbb mov add mov cwtl or and iret add adc (bad) fsubrs repz xchg mov je push add sub xchg out loopne mov outsb xor push jmp xchg lods push jb add mov dec stc add dec or pop (bad) call push add mov push loop cwtl inc or xchg sahf jnp push xlat add jge ja add push jp les stos xor sub mov cld call xlat mov jnp (bad) push pop imul popa add divl add add cmp (bad) cmc push xor pop lds jnp mov rcll add sbb test push cmp dec ljmp roll pop sub daa add (bad) loope addb lahf inc or cmp cmpsl push fdivr push add fs adc and repnz in add sarl mov rcrl popa (bad) dec add ja rclb inc push mov js and fnstenv dec cmpsb add pop inc add mov xchg jnp in sbb pop mov dec push (bad) scas and cli sbb rclb inc loopne mov inc es fisub loop add orb and mov aad jnp add pop sub sub add dec not sub mov xor icebp adc movsb add jmp test xchg add test or mov pop fucomi jl mov shrl stos jb sub and xchg dec notb xor (bad) mov push add imul sub sub add pop sbb cmp arpl inc movl orb add loopne cwtl lock movsl add scas cmpsl aam adc or loope jecxz jmp enter arpl push mov push cmp xor outsb sub sub out gs push insl dec cli rolb inc pop repz push fcomp inc xor add xor jge inc mov (bad) dec jo inc sarb xor dec mov lea hlt idiv xchg xchg dec inc sbb nop xor push adc push and sti add push insl pop xor mov xor nop call out es xchg push add pop inc dec fs xchg or out or mov inc jmp rclb xor je add in cwtl mov cli test xchg inc int3 mov add cmp push add lret pusha ss stc daa call add mov lods mov sbb pop adcb add sahf repz test lahf fldl int3 jbe inc xchg or pusha jnp and fs mov cmp dec test imul xor call nop loopne push xor dec push shld int push mov imul xchg rcrb and mov mov cmpsl add xchg and and add (bad) test cmp xchg dec in shrl cld arpl and mov add add mov xlat and lcall (bad) (bad) cmp pop pop xchg push push push pop pusha pop faddl insl sub out divb mov fdivrl shlb add rorl xor xchg loopne call mov in dec xchg sbb mov imul and push scas push jo stc cwtl mov jnp mov and add lock enter pusha add dec (bad) flds add push and xchg lcall mov je pushf add lods lret push push dec stc aam push add pushf xchg mov sub pusha mov mov addb mov jno (bad) dec sbb mov insl test mov push hlt fsubl outsl inc sub add jecxz dec aaa fisttp scas cmp loope out mov cld lahf mov inc rcrl lock add test lcall jmp (bad) je jo mov rorl add lret enter fistpl add add mov push cli sbb cmp fnstenv fs inc xor jmp pop lret rolb fisubr inc insl mov jg pop lret push (bad) repz pusha out mov mov sbb add jle mov jb mov add out pop mov xchg in mov les push fmull fdivp push or cwtl add ror mov sub call inc loopne cwtl adc push std dec and add repz fsts jcxz insl or fs or inc stc mov jmp push dec dec rclb dec dec push add mov add jno js mov push xchg dec lcall jns cmp sub xchg daa inc dec enter add lcall or add stos (bad) xchg imul add xor orl sbb xor dec rorl or inc test or push pop repnz pavgb sbb insb and lock pop fs xchg sbb pop pop jo cwtl andb scas dec test stc or sub xor xchg test lods fsts cmp jns cmp inc push sub mov sub popa pop cmp add pop pop cwtl jo cld arpl push sub add nop fcomp push or push push pusha pop test les and (bad) iret dec fdivrl (bad) ja adc cmp call loopne xchg cs xor mov jo pop sub (bad) cmc shlb and and mov cwtl and pushf adc add pop mov inc lock sbb push add adc cmp test jle cli cmpsb inc outsl (bad) jo cmc out fild mov push fstpt mov and lret inc clc fbld fldcw or rolb add and fs mov xchg sbb lahf out add mov orb jl add int3 xchg or cmp xchg cli inc aam sbb fimull mov pop ljmp cmpsb cmpsl mov xor popf add jge sbb ror or loope fbstp add rcl sub subb div je,pn pop fnstcw enter imul add cmp clc out mov mov int3 and add or call fldlg2 mov lret xchg mov dec insb cli dec dec sub add test inc pop jno cwtl push pop in sub sbb jge enter adc rorl hlt pop push inc in xor adcl fimul jmp test pop push cs jecxz rolb fmull add in pop (bad) lock xor xcrypt-cfb cmpsl in and mov insb xor adc rcl xor jns inc loopne pop or mov mov nop mov sub stos rorb loopne cmp test sub inc nop icebp mov test push aas sbbb xor add int3 cmp push aaa add and aas or imul test fs daa rclb jns scas mov xchg push mov xor mov xchg xlat add insl jnp or add pop xor dec pushf lock xor outsb lods pop and push jge dec sub or and inc adc and xor dec clc das push jge test add out mov flds jnp rclb repnz pop ret repnz cmp lods jp jns xchg cld push cld inc xor and pushf hlt mov adc inc add pusha cmp (bad) dec mov or cmp fildl mov cld cmp call inc push add sbb sbb inc iret mov aas dec call out cmp push outsl inc inc dec fcmovb ljmp or push jae imul add dec dec call cmp sbb and jnp and stos xchg lock pop stos loopne add insl ret in inc addr16 imul rol adc and icebp lock adc mov pop pop pop dec xor call add push inc add cs insl sub dec hlt int3 pop fcoml and and std jno pushf inc inc fistp cmp int test stc shll and (bad) xchg inc jo dec add inc arpl adc ficoml add fsts add into sbb sbb imul inc js imul stc pop in xor test dec pop dec fcoml inc jno add ja mov push mov out fstl pusha (bad) jb jle in fsubl iret push mov cmp add mov ret sbb js cmp add scas lods stos cli pop insl xor (bad) adc xchg jo addr16 mov lret imul popf dec insb hlt add (bad) fdivl pop mov add pop out scas adcl mov inc daa sarb nop jecxz fdivrl scas push imul or jnp adc add pop pop add movl movsb cld pop aam rcll push rolb popa adc mov pushf sahf jle ds jo mov (bad) add cmp cmp push fs and add lahf mov movsb sarl or clc sub outsl add popa mov out push add mov ret icebp cmp adc or cmc lcall dec outsl dec mov xorb pop (bad) push loopne test mov lock xor cmp push xorb stos mov fs (bad) jno loope cmp in mov sub je push negb shrl inc mov loopne fwait shr rcrl sub cmp add inc repz nop pop jns add cld scas mov addr16 jno jl add imul subb or add (bad) or mov pop add add mov loope adc push add add push mov (bad) in push mov dec outsb fmull mov jno add mov rorb movsl into cmp sbb xor jecxz (bad) xchg mov sbb cmc jmp adc jp sbb xor (bad) inc mov adcl mov xchg dec int andl (bad) xor call add dec je mov mov pop cmp jno inc sbb mov frstor subb mov inc scas or leave mov mov rolb sub ret mov je out xor dec push push bswap rol (bad) icebp cld add movsl ljmp dec clc cmpsl xor dec xlat mov ds ds sub pushf es add mov xlat cltd pop and in xor mov or cmpsl xor aam mov or iret aad ja sub aam mov cmpsb push xor hlt bnd scas sub mov mov xchg cmp inc pusha in mov mov or arpl enter add mov pushf daa cmpsl push mov xor lcall adc sbb iret adc or les out add dec or movsl lret adc add fcomip or jge pop inc in push and xchg xchg mov push cmp mov es and mov push mov loope mov jae cmpsb enter jbe jmp mov dec mov lret adc or (bad) jns and xor subb in cmp rorb cmp ret gs (bad) add inc in pop push xchg imul arpl jmp add and sub cmp adc adc outsb out imul adc pop jbe in cld push add fmull sbb mov push add jns cmc data16 call mov push add gs sbb xchg sbb clc test or pushf xchg jbe inc loop inc jb xor xchg mov mov add cmpsl jo sub or imul push div adc jne int jecxz mov lock ds xchg es sbb jnp inc or push and loopne (bad) fs xor dec add inc mov shll xor push and pop cmp hlt pop mov lea jne call mov pushl jns sbb xor sbb mul (bad) loopne loopew jno xchg push add popa jp cmp out test les test jecxz and cli add addb (bad) xor out imul bound xor add jle adc add mov loope mov mov loope and xchg cs xchg or int3 out xchg adc out push cltd and jb fstpl ret cli loopne out in das or add imul pop push loope pop mov fmull mov adc repz add js inc jae or (bad) stc mov add test mov xor jae add pop inc and pushf cmpsb pop push test inc and enter sbbb mov es pushf loop add and dec or mov scas rolb jne aaa xchg push mov sbb add sub push pop mov add sub jp push cmp inc int3 (bad) imul addb lret sarl lahf es adc push cmp mov xchg popaw jo fsubs outsb pusha pop nop fcomps adc mov andb mov sub aaa sti cmp or xor (bad) lds addr16 pop mov sub and pop push add jne sti (bad) cmc enter add mov lea cmc mov and adc jbe add add cmc and pop call xchg mov add pop xchg sub loopne insl je mov add dec and and in pop (bad) sbb or xchg fs push add imulb roll push and (bad) jno (bad) int inc nop test loop ficoml inc xor orl pmuludq and cmc test leave jbe inc paddsw insb jae inc movsb fs jno mov inc jb dec test (bad) leave pop lcall movsb mov je push out xchg adcl fs jae or test enter js test pushf out dec sbb push jae ret dec jecxz xlat pusha sahf daa stc scas nop enter ret rclb jnp and lods dec aas nop test popa cmp lock mov shrb push push lea sub imul cmp adc sbb and pop mov aas jno pop jnp fnstsw sbb pusha rolb clc mov pop das fdivrl jmp add pusha sub cmpsb jns loopne aam cmp mov push rolb and ss test fcompl pop lcall add xchg dec push mov nop stc sarb mov cwtl cmp dec push mov pop dec pusha jmp mov xchg std ljmp mov dec pop out in ja xchg add xor sbb xchg lea jecxz add test das xor sahf inc fs inc and jo js adc testb gs (bad) movsl jl dec test (bad) ljmp enter inc adc xor xchg xchg dec jge sbb aas (bad) leave lcall jno je sbb jl mov loopne pop push sbb addb fistl mov aam add xchg in cmp out jle fidivr fild mov push inc mov rcrl and push fldl cmp push mov xor data16 (bad) xchg btc in loopne iret insb (bad) (bad) add mov lods adc subb scas fisubr jbe sahf (bad) or leave and (bad) cmp lods insb add ret mul xchg out fildl dec mov aas xchg imul push push adc iret outsb arpl mov mov (bad) jmp inc cmp fildll adc add in xchg movsb jg dec inc test mov mov mov sub and adc xor jo sbb mov lock leave sarl cld mov cwtl cmp mov mov mov ja cltd aam inc sub add sub mov pop mov lds mov push adc or add es push mov cld mov sub cmp push add jmp push ss loopne sub and and fxam inc lock sub and cli push jne shrb mov sub xor in mov xchg out inc pop (bad) cmp es mov pop (bad) mov lahf jmp mov add (bad) xlat mov adc es addr16 inc mov cmp sbb nop dec add daa or or cmpb jmp sub pop and inc cld jo icebp mov inc leave or daa je adc add mov sahf icebp fwait and and inc cmp pop sub popl aad sbb push outsl push xor xchg lods loope sbb inc jle loop pop sahf add jmp inc xor jno add mov xor ds sbb pusha pop cmp insl mov dec mov out jne daa pop (bad) loop add or add cltd or push mov mov inc inc mov sbb or rorb push jl cmp in (bad) in dec (bad) or or mov shll test sub sbb push and pusha xchg test movsl jns mov orb push and cmpsb jl xchg setae in xchg loopne enter shr ja or mov adc out in mov (bad) (bad) out popa sub mov cwtl fdecstp sbb clc out cmp push xchg jnp,pt or and jl add inc jg cmp movsb lret or jns pop fs add and add flds xchg mov sub pcmpeqb sbb mov and cmp and pop xor lock mov in and pop aaa dec mov push xchg add sub push add xchg add add lret fbstp cs and pusha shl notb push test addl or sbb mov insl loope add xchg cmc in cli cwtl das sbb xor leave jge add (bad) jb mov fs stos sub shlb inc sbb test inc or mov or lahf test cld ret jmp xchg and xchg addr16 cwtl scas dec shlb xchg cmp sbb xor movl sbb cmp stos ds push ja (bad) insl xchg adc lods fbld pop push and jnp pop aas cmp dec and add jnp outsl dec cwtl (bad) addl mov sbb mov mov xchg inc and xchg add sbb repz or sub fnop inc mov cmp adc pusha xor daa adc sub inc pop mov rcrl xchg dec inc pushl push dec adc xchg lea jge xorl loop (bad) cld xchg sub test xchg in push out add push hlt lds enter mov or mov xchg add jle push leave mov sub inc jp inc push mul cmpl adc sbb mov sahf cmpsb imul push punpckldq xchg shrb cmp or inc pop mov in sbb jp cli or mov test call add cmc or pushf xor sbb sub nop js jmp lock ret inc sbb or aas idiv adc jnp mov xor push inc sub inc cmpsb dec xor dec mov xor push roll idivb ja jmp mov loope xchg sub movsb or nop and in fstpl inc push test out sbbb mov mov clc out cwtl inc or inc out inc cmp push lock popf mov fstps inc cmp (bad) mov push aad js mov push jle inc mov mov dec inc mov adc sbb fnstcw sub sub js mov dec sub test xchg movsl jge or cmc lea rcll adc mov popa outsl mov inc and pushf cwtl insb dec xor shll testl mov jb jae cmp push jo popf adc and test or inc or or sub test cwtl push and or inc jne test dec push je or std or stos mov sub jae mov int3 cmp adc xor jl mov sbb data16 and inc call test xchg and jle adc push fadds mov cld inc insb adc fsts mov xor mov in cmp jno fs push dec xor inc push mov mulb adc jbe mov pop jno cmp xchg add mov or jp xchg loopne stc xchg sbb xchg int (bad) push dec in adc sti mov hlt popa je push rclb and xor pop xor xchg sbb xchg mov nop clc cli repz sarb dec add pop jae lcall and jae sub cs add adc mov or add add (bad) fs mov and xchg add out inc or mov pop jp lods mov fsubrs xchg sbb add and add mov jne sbb inc cmp push mov mov std and cltd test sbb clc push jle cli (bad) mov mov loopne movsl cmpsb and popa and loopne andl outsl push (bad) out nop cmc sub decl xor movsb movsl adc lret sub push aad divl mov inc adc in pop data16 dec pop add xchg aad dec out or loop and jmp addr16 inc je jae jge sbb jnp mov dec add (bad) pop (bad) and and lcall cwtl or loope mov xor nop xor pusha adc cltd fcoml pop xor and cmpsb rclb xchg roll dec dec movsb pop shll jno insl mov cmp cmp and fwait arpl inc jo and and or xor aam inc sub adc sub (bad) xor adc int3 or popa and mov lea es sbb or mov mov mov jbe inc mov (bad) xor jmp xor or push pushl xor enter xchg add in or pushf push mov or adc dec pop cwtl in adc inc xchg sbb sub nop or push jge pop je andl pop out insb pop add sarb push sub push pop fs inc sub xor int3 add bsf cmp rol imul mov add (bad) in adc lcall std and cwtl clc dec out push add add jne pop jo push fnop bound movl xchg dec push insb add sub movsl mov clc mov xchg cmp xor and mov aam clc jl adcb mov test fcomps sub xor add ja andb nop daa mov cmp mov ja pop es mov push xor adc out aam rcll and sti sbb adc int3 leave mov push push clc mov push jbe pushf call xor ret xchg mov fisub sub aam xor and push (bad) loopne mov enter or mov fldenv cmpl or sbb out popf xchg xchg cmp mov lret bound jne mov xor push (bad) enter cmp hlt xchg arpl xchg sbb mov dec mov loop inc clc lret push pop aam mov lds adc xor shlb gs adc pop pusha add fs cwtl in insb xor inc pop sub incb adc pop in incl jno mov adc lahf popa or cmpsl or imul inc or test and testl andb push xchg add ret dec mov dec je sbb and dec int3 and sbb cmp (bad) cwtl pushf cltd push aad adc neg sbb orl mov inc sub pop sub (bad) xor adc pop or pop sub xor dec inc ss call lcall adc sbb aam sahf dec rclb shrb out mov and inc sbb push push mov test lcall pusha in fs enter iret jno ret xor in cmp test loop lock stos xchg jb frstor xor sbb gs daa mov lods je mov sbb jne test adc or adc dec (bad) and cmc or cltd notb xor cmp mov sbb test or adc adc pushf pusha iret sbb (bad) xchg sbb adc js or fs sub mov pusha sbb pop mov push loope loopne clc pcmpgtd jns push or push add pushl mov sub sbb cwtl add bound xor popf mov and mov daa sub sub daa out loopne pop dec and les mov (bad) push rorb jb or pop mov outsl add fisttp pop out pop jo push xchg movsl neg movl mov adc mov sub insl or cmp cmp cli pop add rorb sbb push mov int or jl sub mov rolb sbb pop or xor enter mov mov sahf mov add push sub add and incl int ret push adc sarb mulb movsb leave adc xor mov mov jmp insb fucomp mov jl es jns adc rorb adc test (bad) mov mov xchg sar dec adc mov mov sub pushf dec mov or adc mov lea mov stc (bad) xor adcl loop or and adc xor ret mov add push and mov inc lcall (bad) pusha sbb inc mov cmp dec cmp cltd adc lods popa enter cld lea rorl jbe sub cli inc xchg movsl call or je (bad) int rolb mov dec es cmovp int3 mov jle hlt mov xchg rclb xchg push enter pop je and add pop cli arpl (bad) dec jl iret or js in popf and enter pop mov fs cmp fs fdivl sub push pusha add std add bound in inc incl pop lahf lods mov and adc add adc cmp pop mov add pop and and loope push mov sbb inc jo aam push enter cs pusha mov add mov and jnp mov in adc xor out dec sahf add mov and addl xchg push pop adc cmp pop loop dec pop dec add hlt push push ss sbb adc cli lret jbe,pn daa test in pop mov jo pusha gs pop jo data16 jg or jne xchg jge test ret cmp pop (bad) mov sub (bad) and enter test ret mov dec ret loope imul add adc xor insb mov ja ret loope jbe mov jo nop pop rorl jo jmp push test mull cmp cmpsb xchg dec loope mov sub mov test pushf lock imul enter mov jge and adc lock insb fldz es scas negb hlt repz into inc (bad) pop fdivp insb sbb outsb pusha sub inc add mov enter xchg rclb dec mov mov cmpb mov leave sub iret stc out scas hlt outsb das lret (bad) pusha test or add push or rclb inc adc pop mov es and (bad) repnz in xchg das fdivrs cmpsl and dec bound in popa popa sarb and sub inc xchg jo fnop pop cltd inc cmp pop mov ja js pop sahf inc cmp add lahf hlt sbb xor mov or hlt fstpt stc cwtl repnz and cmp movsb imul lds lock add mov xchg pop xor out add sub mov fdivs (bad) call and or daa or clc imulb xchg rcl pop jae fadds push mov or enter je adc lock outsb jo call bound outsb adc (bad) lret jo in xor push and das stc repnz mov mov int3 and stc and xchg scas pop addb shlb pushf jp add leave sub sbb lods or inc jg sub dec push mov mov sbb adc sub or push test cmp xor sbb push imul or or mov outsl and test jl mov cmp mov in mov and pop mov sub nop dec dec aam lock adc xor js add cmp mov mov cmp push jl lret test cmpsl in sbb or lods mov adc out dec add nop repnz or or jle insb into aas test test add push aad ss int3 pop and and (bad) xchg mov or (bad) pushf outsb sub adc mov mov or lcall orb mov fnstsw jb addb mov pusha mov aaa push lds xor xor jp cmp mov xchg popf sub or cmpsl inc xchg mov clc and outsb and cwtl cmp pop mov adc sub (bad) adc adc mov add dec push dec cmp and jecxz xchg popa test dec add (bad) xchg ljmp lock jmp pushf and fcoms dec and pop loopne adc cmp les mov add test xchg pusha inc mov cmp (bad) cmp and push cmp xor rcll fnsave ffreep adc inc nop int3 and add pushf mov xor hlt imul push or and push and es jmp test int3 or jmp nop push jmp and adc pop int inc push test cmp mov mov dec adc cmpsl aas in inc hlt jne ljmp inc jl sbb fldl mov (bad) xor fstpt xor mov inc and mov jnp adc ss jle loope cmp adc loopne push sub popa nop lods shll test popf xor cmp mov lock xchg jno pop inc nop xchg cmc add push sub and xchg or push push xchg push inc out add (bad) sahf mov loope push and out sbb and dec (bad) into inc and popf xchg call loop cmp in mov movsl mul in shlb xchg in daa pop test push mov fsubrs pusha icebp jne in (bad) xor dec add mov mov mov inc nop pop rorl cmp cld js mov mov in add sub je arpl jae or add sbb inc or das inc push mov push push rclb xchg or es mov in and cmp ja outsl mov push ja das pop sub or mov lcall jne incl call sub add enter test in test pop or push pop decl mov lods pop inc es popa xchg add xorl jle cmp fs mov (bad) cli jl lods or lods push pop jo shlb popl pop add mov add bound arpl jae shl mov stc repnz cwtl movsb fmull hlt ds sbb add pop push mov js and mov inc neg (bad) jns adc daa mov (bad) mov or add clc movsb jo pop (bad) mov dec ja test inc popa or jp daa test xchg cwtl xor inc lahf nop lock cmpsl mov adc js lds popf enter xchg int3 pop mov mov add sbb ja or jae mov mov inc call cmp js push dec mov lods mov decl rcll jae sbb sub mov cltd loope mov leave mov xor jge mov clc dec lods sub xor mov lea dec ror and sub mov xchg mov mov and dec in add popa pusha nop rorb icebp rcrb or lret loope pusha aam (bad) or cld in pop or push loopne or adc and add pushf push push jmp std mov pop xchg sbb nop jb fsubl jecxz lock cs (bad) aam add popf fcomip dec and lahf xchg dec test sbb adc mov call loopne mov sbb call scas xor and add in clc adc add xchg in mov js (bad) xorl cmpb fstps out sub mov adc rcr xor sbb or jns cmp mov sahf sub or call jl dec loopne cli in and and add (bad) pop in (bad) cmp loopne clc and cld sub dec lcall repnz and xor test js or or das mov jg shll scas xor ja xchg testl jb test cmpl nop push or adc aam es xor push lock shrl mov enter and adc or or sar jmp sbb xor imul sbb mov dec mov je xchg add add and mov mov jae inc inc push and inc fmuls pushf cmp and sbb (bad) lods or cmpb add gs and bound cltd shll out sub push dec xchg inc popf stos add daa nop xchg mov jae mov add insl mov jae bound in or loopne mov lret je cmp sub (bad) xor jo rcr sub rorb sub jae stc pop jp ret movsl hlt js mov xchg (bad) or rorl imul popf jns fisttpll cmp inc stc cmp daa shll cwtl adc (bad) mov pop incb add aas jp out xchg pusha cmp xor xor int xor sbb jmp dec push mov popa xchg xchg in mov movsl jo jo nop pop push out mov push and add popf (bad) mov jns rcll je push cmp and adc xchg or mov xchg add addr16 testl (bad) mov shr in ja fwait cmp sbbb inc push cmp push out add mov cld add std cld mov inc push sti and cwtl dec popf xor mov cltd lahf add xchg or add pop (bad) jb adc popa jge dec in add pusha fwait fs xchg xor ficom jno or push xchg sbb sub ljmp shl add fs inc sbb mov mov push in iret jno adc rorl (bad) std ljmp sub nop roll or lcallw or xor sub push or xchg nop les mov or push nop push rclb or dec jnp xor mov das pusha xor int3 add pop inc cmp xchg dec sub inc mov pop jl or adc sbb mov mov dec add or mov imul (bad) clc das or xchg aad and sub xchg dec and dec dec mov and clc insl dec sub cmpsl sub (bad) adc lods lods pusha dec inc mov imul notl push in xor add add jge mov (bad) inc adc pop mov mov mov push rclb pushf in cltd xor adc xchg mov cmp cs push inc aad ror mov pop adc (bad) loope fs loop nop inc inc or sbb rcr inc or xchg jle cwtl xchg sahf and loopne xorl movsb dec sbb sub pusha mov mov pop out cmpb and std inc or repnz dec or clc or and add push pop dec in inc and jl dec pop adc jecxz and fs mov lock adc cli pop mov xchg sub push adc xchg movsb test and adc je add jl sbb and pusha aad das add outsl jbe adc push lahf sub dec dec and (bad) jne adc sub mov mov or xlat and int3 mov in clc (bad) mov js shr lea (bad) icebp insb xchg stos dec mov sub outsb add mov mov call popa fs and pop xor mov lea xor mov push orb out add cmp jae loop in stos jnp lea jle out inc dec push popa push popf add insl imul pop xchg nop dec fs loopne fsubrs pop or js dec mov adc xchg and add ret flds clc lcall adc jo push mov add (bad) int3 dec push or loop xor enter lods pusha (bad) push xor ret mov scas or jmp mov popa rcl jo xchg fcomps pusha sbb sub push inc cwtl sbb jmp inc jns mov ficom out enter dec sub push out fadd cmp pop lea mov sub sbb sti mov xchg mov test js cmp ljmp lock sub inc in mov adc std mov fimull xchg (bad) cwtl cmp repz popf xchg or inc std add pop xchg adc mov insb inc mov pushf add and negl and cmc push inc add push adc or push test repz mov xchg fs adc push push cli inc adc cmp push jo dec push lock jns fs test mov pop mov mov xchg jge sbb sbb hlt inc push ds adc cld arpl dec loop and push lods fmuls push cmp pop xchg imul pop cmp mov pop inc mov rorb add jle cld dec mov hlt inc (bad) sbb and insl mov and int3 push ret subl in jns dec out loop add and mov outsb adc push inc and xchg mov lds mov lea mov nop dec faddl (bad) pop and or fs out sti and or or dec mov (bad) data16 repz pop js xor dec jo jl sbb or fmuls add sbb jle pop push push mov insb mov jno mov push push jmp pop push pushf inc into cmp dec inc xchg cwtl adc add pusha nop dec cmp and lock sbb je cmp push ret or mov pushf ja dec call or xchg add cmp push std dec mov mov mov adc or orl cmp (bad) fs outsb push and mov cs mov (bad) lods mov inc rcrb push fwait and ret in je mov or mov add les jb and mov pop popa rclb add cmp cwtl xor cs test mov push int3 xchg mov inc pusha das push jle in cmp push jno add or stos bound push xor push jl xchg movsb adc adc inc ret xor mov sub out add xchg pop (bad) xchg cmpsb pushf dec mov dec mov mov mov clc xchg inc je sub push adc mov mov adc mov sub mov pop push andb xor pushf mov xor xchg pop adc jge cmp xchg sub (bad) xor les sbb xchg adcl pop or in or inc les xchg lea rolb cmp jb js and add leave dec hlt fsub mov mov stos pusha push aad jne sbb loopne inc adc aam scas (bad) bnd enter scas xchg sbb xor mov sarb mov inc xor scas sub mov sub dec sub lahf in push in loop adc loopne sbb mov call popa mov add mov mov push and adc add inc movsb sbb gs add adcl or xchg cwtl push mov mov repz xor sub adc jo addb jno decl add pop cmp mov int3 push or and xchg or or in dec mov pop xor or cmp addr16 dec or inc adc inc cli cli sbbl sub ljmp and or test and mov (bad) testl mov divl test cmpsl mov cld loopne add pop xor (bad) sbbl test push sbb ret pop sub sahf enter push sub add mov repnz ljmp pop cmpsb aaa adcl mov add add data16 add push inc stos ja sub push adc (bad) jne fisttpll adc popf stos dec or cmp cwtl (bad) ja mov jge sub inc sbb ret sbbb jge (bad) shr shlb mov and push inc shr cli mov loop or adc sbb mov xchg rolb into inc xchg add enter sbb outsb push dec push add (bad) fiaddl orb cmp xchg lock cmp cmc jg loopne push xor pop negb xchg nop popf push sub adc adc sahf or inc or test and dec mov cs jmp xor movsb add dec and sub add ret cld lds cmp aaa push cs inc mov pop adc adc jbe test and inc insl popa cli jp es enter push or insb daa and jecxz fsubr (bad) sub into mov nop faddl and xor mov cwtl mov sub lahf add int3 ja (bad) add ds or jne sub jl xor cmc sub or dec xchg sahf popa mov sbb loope incb fsubrs or mov xchg and mov mov xor sbb (bad) js sub xor dec sbb aas inc add cwtl adc icebp add mov xor and mov test movsb hlt inc test in aam test mov dec enter jl gs pop pushf into mov sbb xorl jl jmp push sbb fmul repz rol push sub data16 and out test dec shlb cmp test or aam cmp sbb stos inc push sub and mov andl int3 sbb sbb cmp add cmpsl add xchg push push shlb repnz mov ljmp (bad) xorb and test inc jecxz adc addr16 test push fs sbbl dec lret jnp pop fildll dec enter movb mov movsl loopne and dec cmp dec xchg addr16 cmpsl test inc adc dec clc push cmp dec ret test (bad) syscall lcall adc adc test aas lahf inc test xor fsubs ja in inc jg xchg int3 mov cmc dec push orl or leave push jl in pusha jnp or out test cld addr16 xchg int3 xchg nop cmpsb pop dec loopne lock mov mov adc xor ror rcrl fs push sub mov push test outsb add mov mov icebp mov and adc test and xor movsb sbb inc js and aam adc add in sahf int3 adc sti push mov lds xchg out xchg inc imull ror sbb jg rclb cmp cmpsl add mov jne cltd jae scas cmp xor mov adc shrb addr16 andb test hlt cmp test or test bound add cmp mov addr16 cmp cwtl cmp lods sub sahf call pusha imul rcrb int3 push bound clc adc movsb ret out dec adc sub xchg or enter and mov je add (bad) or pusha mov repz mov push sub dec movsb or pop (bad) xor dec push lcall xor pusha jl out inc stos in dec push dec xlat loopne idivl rcll leave loopne add ja (bad) sbb sub hlt push xchg cld popl lret mov mov fwait rclb js add hlt push push jno psrad pop cltd xor (bad) les out pop mov jg push movsb mov sbb stos addb dec jg or gs cwtl outsl sub rcll mov loop icebp pop push movups dec push push mov xor movsl dec or and cld stc ja dec mov es and pop dec loopne bswap cmp inc push sub dec rorb push in cld mov or and or jg les mov lods add lcall pop adc imul fmull jo mov sbb addr16 shll dec rcrl mov test mov adc pop int add cmpsb movsb sub sbb in mov sbb xor aas cmp test sub stos jle mov xchg lahf cwtl movsl mov subb je push sbb mov dec and sahf imulb add addr16 (bad) xor and cmp pusha jns stos nop inc mov pop push sbb add mov mov je pop jecxz sbb fsubrs idivb xor sub pop mov mov add cli mov jl imulb push es js adc into cmp and sub (bad) mov add or cwtl in jo dec xor out xor (bad) push pop xchg pop shrl inc lea push inc iret mov roll adc loope mov sbb xor test je mov adc sbb (bad) pusha adc and (bad) cmc inc sahf add insl jne and call inc test xlat dec adc lcall or in (bad) sti xchg xor cmpsl push imul xchg add ficompl test or xchg lock (bad) lock loope fcmovu in mov icebp mov cli push adc adc scas adc (bad) clc inc lea hlt xor lret xchg and and jo push push xor mov mov adc adc or sub cmpl in andl mov xor sbb nop adc pop adc push or push lock imul outsb nop sarl jmp je jg cmpsb mov enter call adc or pusha (bad) in xor xchg sub movsl sbb mov rcll mov fcomps jo jg (bad) out mov sub fst aam mov sbbb andl pop and rol mov insl and mov dec in (bad) je dec nop leave or insb (bad) dec or loope enter dec or clc and icebp and fwait xchg add lds rolb push xchg inc ret dec imul cmc mov out shlb and sbb push jle movsb shrb lret mov cmp add (bad) (bad) stos fist adc es js lods lods or add aam cltd add enter cmc and shrb sbb inc add ljmp and mov inc push sub inc inc (bad) movsb and adc add mov or mov jo test or lret inc sub push shrl mov dec adcl stc add pop cltd inc loop rclb clc outsb clc lcall ret adc (bad) pop xchg call and jbe add mov pop cmp cwtl outsb xor insb and hlt test int inc or rcrl mov roll cmp xor add push ret sbb mov sbb xchg lcall fs adc dec or jns sub js ret out push or push adc cmp jg adc inc hlt andb gs push out mov adc push add inc leave in or roll jno adc dec and adc xchg mov ljmp aas add inc xor cmp mov iret pusha mov (bad) or test pushf dec lock or in adc mov pop sahf and and dec adc sub loopne jl adc stos (bad) sahf nop out or test mov xchg fcmovne js push and xor xchg test mov into mov xor cmpl push mov inc je ljmp jle lods sub bound js dec push xchg int3 in jge movsl jmp pop in xor pop inc sub or dec (bad) push cmp lds xchg jns incb push push lock lock lahf aas push (bad) ficompl mov les pusha daa inc lahf jmp add or pop mov popa ds roll mov jle lahf sub cmp sbb outsb cmp sahf dec imul add pop sub mov jg inc jns push xorb jae popa sub das jns mov cwtl sahf jbe dec add lock add fiadd daa add ret inc loop lock jnp jp pop pop fnstcw imul add jp dec push and add fnop cmp ljmp xor leave sbb stos push stos jb add or push aas shrb mov shl sbb dec mov push xchg push lahf ret xor or dec inc jp xchg push mov pusha jg add lret dec out sub cmp xlat dec or mov aas insl xchg sbbb rcrl pop mov sbb pusha call mov adc sbb and xor (bad) jns add xor jae clc adc or adc push fsts dec mov xor icebp cmp lods mov lds mov pop insb adc cmpb and lock pop (bad) es icebp ret and push movsb int3 js mov dec push fadd cmc mov ficom xchg pop jle add sbb lret int3 cmp movsl push pop mov adc pop push lock xor push icebp cwtl push dec mov ds jmp test pop xchg inc mov pop and aad cmp dec jbe push push xor dec pop jp xor pop sub in xor mov xchg insb mov xor lods push sub aas fild sbb sbb xchg add xor sbb push mov aas outsb add out mov jb int3 cmp stc push push inc movsb or dec xor cwtl fsubl icebp cld or js push xor stc nop fdivs ljmp ds fcoml inc jecxz pop pop mov push dec xchg inc mov add sahf lcall xchg xor test jne and nop les nop add adc mov test jnp cmp pusha je bound pusha subl add push enter inc dec push mov jbe cltd or clc push cltd mov adc inc push pop sahf dec sbb mov sbb hlt pop into xor jl lcall cmpb or test inc inc ret (bad) or sbb or lahf and or scas adc test inc js out nop mov inc mov xchg inc push cmp lfs pushf jmp or rolb adc pop mov stc fcomp add add or sbb sbb out arpl sbb movsb test sbbb test test push sbb sbb pop or mov pop scas andl xchg or and push call (bad) and fs movaps dec inc mov or pop sbb cli mov mov fcom pop push and scas jae xor sbb xchg out nop pop (bad) ja roll add cmp (bad) inc jmp movsb ret pop adc and and pop aam push inc or sbb shlb ds mov sets clc aad push pop adc add std or (bad) xchg pop (bad) or push dec mov test cmp and jmp test or sbb push hlt adc and lods rolb and dec repz sti xchg mov sbb sbb sub xchg nop lret adc cmp xchg mov jnp or scas jo adc push test cld imul lods mov stc inc pop push push fsubrl aaa loop test (bad) fadds push pusha inc das inc mov push or (bad) add in mov ss mov adc pop aad inc in xchg mov adc mov and and jmp nop push pop ss (bad) lods in or and push xor cwtl add test mov add bound push and sbb js adc pop add and and xchg loop xor push and (bad) popa sub lods icebp inc js adc adc mov mov or pop mov inc fsubl mov lds jno in call inc scas gs or jnp mov push les mov sub lret dec adc mov cltd fcomp rclb jo dec bound loopne sbb add push and inc xor repnz inc push xor adc xchg es add arpl and mov lcall push sbb movsl pop sbb and mov in (bad) push orl dec push xchg dec test xchg inc dec jg mov dec int3 negb pop xchg jne xchg mov out inc adc lods lock inc add inc lds mov pop xchg cmp mov xchg adc push adc imul jbe mov add jns nop cld mov xchg movsb shrl dec sbb mov repz or test xchg jp sti dec and add mov inc loope cld jl and mov loope cmp rorl xor cmp and cmp mov jl cmpsb sbb sbb test std xchg int3 (bad) clc cs lea push mov pop int bound mov and add call adc (bad) shrb add dec adc inc clc or lea and je mov dec adc ljmp mov mov and or pop push insb sub into rclb insb lret les pop mov xor repnz test mov ret adc insb push daa push cmpsl cltd adc imul pop xor cltd cmp lods imul lret sub mov bound outsl sbb adc add popf inc mov lds inc add or pop data16 adc pop les js leave lds inc leave cmp mov pop xor es (bad) push pop adc lcall and adc ret xchg add mov pop xchg add xor or jge xor add mov sub shr pusha or jne rolb push call jmp data16 push sub push sbb adc adc lods push xorpd (bad) pop jmp mov fcmovne ret push mov outsb call out dec scas fiaddl add cmpl and adc cltd call andl pop call push jns gs pop fs jb cmpsl das mov in gs das ficoml mov dec mov or bound movsb inc mov sbb mov inc pusha mov or push outsl mov jb insb or add test mov push js jp xchg adc push xor xchg popa pop shrl rolb lahf mov lret scas cwtl fmuls lea xchg movl dec xchg fmuls data16 adc mov rcrb push xchg clc adc xlat adc das inc push scas (bad) sti enter mov test idiv and and stos lahf mov and jo xchg out and movsb sub inc inc cld and daa xor jmp xchg inc pop mov sbb mov mov (bad) in lods cmp pop les adc pop pop or nop movl mov xchg push popa jle push das loope testb or cmp and or repnz (bad) lods xchg in cmp rcrb imul jge jae gs in inc je sbb xor push or and fmull push dec inc gs je jo sbb popa dec or outsl fldenv gs push rorl je inc rclb inc int3 cltd add mov sarl pop lahf sbb jb sub xor out or std enter in in mov dec jae xor sbb sbb pushf jle or and fs push or or add cld and sbbl (bad) jnp jo jne xchg and dec xchg or inc xor push adc bound or icebp pushl push pop xor (bad) fsts int icebp sbb cmp mov or cld sbb mov and rorl dec fisubr dec mov pop jp xchg sbb clc or adc inc sbb inc sub popa push xchg pop sbb mov insl sub push push repnz and adc adc sti add (bad) aaa rolb jne adc sub ret movb or sbbb sub or adc and mov xorl mov cmovg adc and jmp mov xor mov sub popf (bad) mov or ret xchg xchg mov stos sbb loop sbb and leave mov lahf and test or mov mov in mulb loopne adc es rolb mov add and adc push enter mov iret fsubr adc inc mov inc and lret jl lods loop aam jp inc jecxz mov mov dec sbb push pop ret cltd xchg mov pop nop in jp faddl push mov test test jns (bad) pop push and mov in sub fwait adc or subps mov jl scas pop add push lret ds pop shrb add push cmp adc sub sbb adc mov fcomi jl movsl pop test das and sub (bad) loopne pop mov (bad) nop pop mov mov popf repnz push add xchg std fdivrl lock inc jecxz popa loopne out fwait cmpsb (bad) xchg daa ds mov inc or xor adc mov repnz mov fbstp lds xchg ficoml ficom mov (bad) cmpsl adc dec inc mov cmp pop sar sub add fidiv aas fnstenv add inc das mov enter mov sub mov mov xchg iret fsubl aad mov or add imul push les mov call lock mov mov fisubrl mov jo sub notb mov shlb mov sarl (bad) cmpsl dec jbe sarb stos test (bad) aas jge cmp call push in iret and test sub aas leave ss add jae lahf aas fs mov sbb mov xor xchg cli xchg decb pusha jle push int xchg add add cmp cmp xchg cld xchg pop in cmp adc jmp push loopne ljmp inc rcrl mov pop (bad) dec outsb pop cli pop in sub lcall movsl aas (bad) push addr16 negl in cmp adc mov jmp sbb sbb es int push ret aas fucom pusha dec mov sti push aas repnz inc push sub add das in lahf jmp clc js pusha and mov push mov cmpsb fisttp repnz rcr xchg inc cld lock inc dec push cmp jle (bad) repz pop in cmp adc jmp (bad) loopne pop mov xchg lret cld add jmp into pusha inc mov mov ret sub aad aas enter mov std jg fcmove pop add mov mov lret pop in and mov dec loop es push nop out dec mov mov dec sub dec (bad) (bad) mov mov mov xchg (bad) or xchg out dec aas jne xchg inc cld cld mulb jo inc mov repnz ss in stc cli dec xlat add xor push sub dec adc xor sbb dec mov xchg jg push mov mov aaa push leave pop inc sub pop sahf push cli fildl jo mov popf push data16 adc mov pushf pop enter dec mov mov push mov jge lea mov lret jne inc xor in and xor (bad) push mov mov push xchg and ds adc xchg mov sbb sbb (bad) xchg test jecxz or push fwait adc popf test or xor xchg inc or pop xchg (bad) sbb and xor test sahf test shrb mov or jns and ret sbb gs sub and push rcl or bound test mov inc xchg mov and inc pop adc lahf mov fsubs mov lret inc mov call and or (bad) or xor in cmpsl test inc push add or and xchg sub sbb dec xor test and pop and push or test inc test sub lret or ret lds insb jp and cltd lock push or sbb jns lods sub int3 xchg sti or sbb lods or cmp scas movsb sbb inc scas or int3 push sahf or pushf inc sbb sbb push cmp mov add and inc mov out gs dec or insb mov jno dec inc or jo out and pop fstps mov push and jno xor push cmp cmpl push sahf lret jle and sub dec and and (bad) jbe adc lods (bad) add or adc mov or sub add (bad) cmp adc mov insl sub popa jmp jno (bad) cmp or mov xchg mov mov popa ret pop xor mov sbb jno scas in mov or dec add push call fsts cltd and xchg pusha mov xchg (bad) ss sbb jecxz fsub in in cmpl enter mov popa cmp add int3 in xchg inc add test sub inc ficom aaa (bad) sub xchg fdivrs adc inc dec mov push xchg and test rorl lret dec jmp int (bad) jo push fmuls mov (bad) mov addb aad ss out sar xchg aam (bad) pop pop jmp pop ljmp adc mov repnz pop pop orb or dec pushf and mov push ret subb out stos xchg and or push movsb or dec ret (bad) xor insb and test and mov test add cmp lret sbbl iret sbbl mov daa fistpl adc mov fidiv subb and std sbb xorb ljmp add in stc jle (bad) pop jge (bad) pop or mov insl and jne sub les xchg and pop dec push cmp jae jnp mov sbb jp adc sub xor push adc cmp inc rcrb mov cltd add mov add outsl lds scas xchg inc pop pop int3 sbb inc popf cmp lods lret imul ja arpl ret mov iret loop addb jae stos loope inc mov xchg lcall orb cmpsl rcrl or out xor lret mov rcrb imul or lea addr16 adc stos xor jmp sbb and add inc push mov sbb push cmp mov mov mov adc adcb cmpl push xchg sub cmc ret pop loope pop cltd aaa dec push aam imul cmpb push int3 ffreep adc mov js push add push (bad) xor fs loop sbb jb imul movsb out adc add rolb inc push xlat mov mul pushf xor jno mov cmp push pusha cwtl fidivrl dec mov mov insl add lods es and imul jne out verw lock lret scas mov jmp loope imul fsubl mov xor (bad) movsb jae jno mov out int3 pop pusha int mov movsl jmp sbb mov sarl addl lods adc jg jl push lock dec jmp dec in mov adc xor add xchg xor or popl and xchg imul add notl pop add xlat dec into and add push lahf adc cmp test pop pmaxsw rorl scas jae jl jne add adc push adc mov jp ds or fdivr cmp sti insb rcrb cmp pop loope lock mov daa cmp lods jo test sarb sub push in or sub adc xor and rcl addr16 test cmpsl jns movsb add jge mov xlat jnp mov sbb sbb inc test je dec in mov jns cmp xor lcall cmp cmc mov fdivl mov lcall (bad) loop fs enter xlat mov call out lock add adc pusha add jl cld cwtl jae cmpsl sub pop inc xchg cmp pop lret dec xchg movsb adc dec mov les xchg test jle ljmp add or mov out pop and pop push sub xchg es mov arpl pop jecxz fsubrp dec stc repnz out jnp int ret pop jle adc cwtl dec mov sub rcrb nop repnz jo push repz lret push mov dec nop cld add es and movl pusha pop pop sbb mov ljmp test inc or xor lret push jno lret out mov inc jge,pt (bad) jne and packssdw les (bad) jge xchg jno into jge add loopne dec jb call add pop mov sub inc lahf cmp or jg cwtl imul je pop and or jb in dec xchg mov jno adc inc cmpb out dec xchg and pop (bad) js mov scas lds gs dec loopne shl adc cmp fldl nop hlt inc test hlt icebp sbbb jmp jmp in imul jb nop and cmp in cmpsl rcrl outsl insl push jo int3 dec xor jp add cmpsl jge cmpsb xchg or sbb and and fisttpll mov sub sarl daa lret es stos mov xlat les add adc jmp int3 fwait add lea int3 lret mov (bad) leave lahf or mov (bad) xchg ja add out cmp dec andb xchg dec or lock jecxz xchg dec es outsb dec xor jb xchg fsubs inc lds jne,pt mov adcb aaa pop xor test into dec mov shlb (bad) xchg cmp sub loopne push xor or out mov mov dec cld jo,pt and add mov aaa cwtl add and add sbb add shll test xchg cmp xchg and xchg adc xor xor push je dec xchg aam add inc inc (bad) call jns and rcrl call inc or sub (bad) faddl fistpl sbb push int jo lock pop icebp out loope adcb (bad) nop pusha add jle and aaa dec mov js mov jecxz call dec mov sbb cmp push inc add daa or loope ret inc js sub int3 (bad) xor aad or xchg push imul xorb nop xadd popl das adc pusha mov add xchg inc add (bad) add lret sbb mov loop jmp inc les mov pop decb clc daa xor loope dec mov jo push pop lods (bad) mov add xor dec fldl in imul adc xchg lret mov nop dec cmp mov adc dec adc pop call cltd xchg inc sahf dec nop xchg pop add cmp or lahf gs mov sbb jbe and mov dec in and in cmpsl xor xor inc jns mov lods dec xchg xor insl add hlt or ds loopne xchg lret bound scas xchg outsb xchg push xchg aam pop pop andb push or es mov add in sbb int3 arpl jecxz call add movsl inc call int3 dec and mov sub push mov lds or lret add mov lahf inc xchg inc sbb jbe add jne cmp sbb xchg sbb push lods add mov inc call jp nop sbb scas mov mov icebp inc pushf dec or nop and jb xchg movsb add popf int3 mov ss es pop cmp std dec daa adc add test loopne cwtl int3 and add stos ljmp inc (bad) inc mov xchg lock js or shll in pusha sarb xchg mov sub cmp adc push and adc sub jg loop test jne pop xchg aam ja ret ret sub adc mov rcrb lods out fneni(8087 mov pusha jb mov add fistp jae cld push roll push lret add arpl inc mov mov pop jbe loope pop jb cmp fld sbb daa jno nop xor fldl mov cs inc imul add mov rorb mov shlb stos and fbstp in mov adc lret xchg les cmc mov ljmp int3 daa mov cmp adc scas movsl jo adcb nop add (bad) or add test pop ret adc (bad) xor sbb and lret loopne cmpsb cmpl in movsb add cmp push add pushf lret cmc (bad) add lret push jb jnp push mov cmp sbb mov add adc std jmp jnp sahf leave pop cmpb pushf mov ds sahf loope mov xor mov hlt fldenv rcrb cmpl (bad) xor sub lea lcall clc or int3 add fs adc loope pop xchg lret mov add xor (bad) addr16 call sub in sub inc std imul mov jo xorl aas fnstcw dec add inc cwtl inc ret movsb in sbb and xchg imul jecxz lock mov and ret or es mov int3 mov int3 inc shll aam mov fcomi fistp hlt add fsts push lret aad and mov sbb push mov test sub xlat add add mov inc mov mov cmpsb mov sub or out add dec add push and loope sub lock mov mov or (bad) pop mov adc dec test sbb pop and adc push iret ret xor mov enter add clc push add fcmovnb cmp fadds loopne fcompl xchg lret adcl xchg dec mov inc inc and jno add adc leave or lock mov mov jp inc (bad) dec fcomps arpl test jb fisubrl test push mov add sti lret sbb jb lahf dec xchg push fcmovnb push mov rcrb pop dec cmp nop les xchg cmp pusha add dec movsb nop mov xor aam or call inc sahf fwait and push or xchg mov jmp loopne fwait mov cmp mov push cmpsl (bad) xor cld xchg jg mov inc sbb cmp or cmc fs mov jo add iret out aaa enter dec cmp or roll les ret mov (bad) or push shrb pusha mov jb mov add mov cmp imul pop cmc jns pop stos gs ret mulb or sbb in shrd pop mov jmp jle push cltd pop xor or and jle (bad) or daa testl push push mov sub xlat sbb xor lods ret xor jecxz cmp xor stos and insl lods add (bad) cmc fisubr xchg xchg mov cmp out cmp cli add mov xchg nop aas sbb jg jb adc xchg sbb mov inc sbb fsubl jg mov mov mov push aas jne cmp xchg xchg lods xchg add mov sti and pusha ss lret add or fs out outsb addl aad js add int and outsl cmp xor and out push cmp cmpsl mov stos outsl add adc pusha mov ljmp add fistp and leave add cmp test push (bad) or jns sbb cld das xchg sbb ret sbb or xchg fadds or xchg aad push and cmp and idiv mov lcall and sbb js push xchg lret sbb add or ret sub xchg pop xchg ljmp or or negl mov adc mov cmp or sbb mov sub lahf iret add mov std cmpsb push fsubrp shll sbb jbe add push rorb mov add xchg mov and or add movsl pop pop or je add insb dec shl mov mov aas or jns and fwait xor sbb cld popf add mov mov cmpsb add outsb lock xor int sbb sbbb mov scas sti or jge push xor cmp xor and push cmp jns or push adc dec mov daa (bad) or (bad) sti nop cld or pusha xorl lahf aad sti or add push repz pop jle sbb xor jo jns (bad) mov xchg insb fidivl and or dec lods (bad) ljmp xor movsb xchg or adc ljmp outsb adc imul in add mov mov push jmp test mov cltd and nop jmp cli xorl push cmp (bad) mov mov pop push xor xor push mov fcoms mov insb xor push adc daa arpl push pop xor and (bad) xor movsl or sub loopne or cmp cld jg adc lock addl xchg xchg inc pusha scas rorb add sbb fsubrs mov add les inc xchg adcl cld insl inc movsb mov jo aad cmp out ss cmp dec adc sub xor cmp (bad) (bad) cmp xor mov sbb fwait or out jmp mov mov sub sbb roll lods fimull icebp ljmp push mov mov jns dec inc pop xchg mov dec xor sub adc cmpsb pop rcrb jnp dec pop sbb jo (bad) mov dec fdivs mov inc outsl loopne loope loop sbb and pop stos xchg scas mov clc flds lea add mov lret inc js mov hlt cmp dec lea adc dec add push xchg lds lcall (bad) aam adc loop dec test xor cmp or add es pop xor leavew mov addr16 xchg rcrb sub xor sub dec dec rcrb repnz neg add cmp adc pop sbb jbe addr16 add and jo mov repnz pop pop pop jbe xchg orb xchg sub mov and pop jno pop in ret sbb cmc gs subl loopne jmp push movsb clc sub and std xor imul pop sbb cwtl fcmovb js movsl mov test in (bad) pop dec jne sbb xor adc fcompl add nop sub sahf imul mov mov push xchg add addl into loop xchg xor inc sbb inc ret in push pmaxsw push lock stc mov es clc dec adc dec cltd clc mov jbe xor or pop add xchg adc dec fbld js mov sbb jmp mov jb mov out rolb jb leave int3 loop enter rolb or push pop push test fldl mov loopne adc or add std jae mov les andb loop xchg dec or inc movb js rolb sub pop mov push xor jmp mov or mov repz rcr mov sub xor ret add add mov fmull and je sub test adc js ljmp (bad) dec mov inc mov push (bad) or rclb in xor mov sahf sbb jmp fstps fidivl or cmp sbb loopne (bad) push mov inc int3 je hlt rclb loopne dec rclb sbb int3 daa push xchg andb mov push bound lret mov or fisttpl cmp out dec lock sbb icebp pop add pushf xor dec lret das cmp rorb push addr16 or les jb stc pop fsubr inc jmp add test sbb nop add rolb movsb mov jecxz pop lcall inc mov push jne cmpsl sub outsb lods cmp (bad) push mov or imul sbb add inc sub mov cmp mov or int3 sub mov fisttp cmc add shr (bad) jae jg lret or cld push mov lods nop rcrb hlt (bad) aam repz pop ds xchg addr16 cmp fs pop add add pusha push enter test mov push stos or push and pop out loop push sub xor popf inc test sbb pusha mov lock fidivr inc test and push dec xchg add lret xor clc xor jae or mov into jo les adc bt paddusb or rcrb jnp incl pop xor pop (bad) int3 inc insl pusha (bad) sbb pop jo cmp add mov push das push mov outsb add or add sub ja add out push fcompl or enter adcl rclb les cmpsl es or add (bad) jno inc xchg xchg cmc add lods fidivl add jge add sbb cmc jmp xor inc outsb out push push and or nop ss pop sti mov fcomps lahf bound sub xor cmpsb inc dec sub or int3 lahf shrb adc adc pop or jge xchg cld jg xchg cld mov xor dec or mov pop and xchg les test add adc xor in cmp adc je mov add inc add in sub fs or jmp movsl push psubd idivl cmp cmpl xlat pushf orb push sub push shrb aaa and cmpb arpl or xor nop adc sub lcall cmp push pop cmp (bad) shl jo mov movsl mov xchg dec cmp data16 dec jo sbb push sbb inc les add lcall bound insb in loope push jns xchg dec arpl mov out test push pusha jb mov les push jb inc mov enter cmp data16 add mov divl jecxz sbb jnp scas sarb std cwtl jo and insl imul pop push out push outsb test mov mov les adc dec pusha cmp enter xor leave jmp jl pop add and mov stc or push pop mov add iret jns imul sub pop test scas mov push movsb in sbb or rcrb add mov jg lahf test addr16 addr16 and or test inc (bad) jmp lret pop sub xchg ss push xor rolb (bad) (bad) addr16 lret push fildl cld ret sub xor adc xchg cld adc cmp mov push inc fwait jmp mov jns adc pop (bad) mov pop cmpsb xor inc xor jne adcl aas mov test pusha pmaxsw cmp dec cmp mov or pop pop dec popl or dec test dec in rol pop notb in test loopne mov xor xor add int3 ja mov ficompl pop xlat and loop add inc jp inc movsl xlat imul stos out adc shl fmul add mov sahf repnz aas dec imul and popl leave aas add ret or jecxz and adc loopne aam aaa cmp sti sbbb xorb jb popa in inc pushf xor or ret in shlb jnp mov lods xchg xor xchg mov jge pusha repnz (bad) outsb pop fnstcw cwtl inc (bad) ljmp adc rolb cli xchg mov dec pop cmp lret and fcmovne cld das cltd loopne sbb sub (bad) dec fs imul mov xor cwtl hlt or cwtl mov (bad) aas mov iret xchg jmp pusha mov push (bad) sub subb cltd in push add or xor int loop or xor fmuls outsl inc xchg mov in ds pusha pop mov xchg and dec mov sub fs pop inc jbe dec test test jl hlt and in clc ds or sbb inc cmp nop xchg je pop cmp cmp add jnp mov pop xchg outsl xorb sti mov mov fbld add movsb shlb in mov jne xor dec dec mov inc outsl pop mov adc sbb and lcall push inc adc dec adc xor xchg add mov mov movsl xchg mov inc data16 sub or push iret jns sub stos sbb in icebp adc in leave add (bad) loope add and sub xor (bad) jae mov bound inc (bad) stc cmpsb cmp jb pop mov jmp mov inc cmp add push inc jge and and jecxz sbb or inc jb fwait lock mov aas push fisubr rorb add mov and xchg je mull js cld add mov add (bad) sbb loop test and jnp xor adc cmp mov in cmp shlb xlat (bad) dec daa mov call adc sbb jbe adc push gs stos cld enter xchg xchg (bad) loop mov (bad) or je or push push stc push mov add dec xor add dec add xorl sbb xchg (bad) mov bnd cli es or and mov nop adc jno and lds cmp xchg std cwtl xor addr16 and hlt or cmp adc xchg add repz rcrl sar cwtl lods jp je fs xor push cmp dec cmp sbb cmp xor testl push cwtl xor mov or jbe in sub loop pop jmp and and add mov and adc mov mov mov and ss scas int3 (bad) sub pavgb ja pop dec adc xor jecxz xchg movsb push or mov xor or test dec jecxz push ja pop sbb (bad) jbe push fadds mov adc in (bad) mov fidivr addl cmpsb popa data16 nop add dec enter or sub popa adc pop dec xchg xrstor xor lods lods push cwtl cltd dec movsl add adc inc les dec imul mov nop xor sbb sub dec jl outsl popa xchg or jb cwtl add cmp or (bad) fucomp or mov sahf adc call out cli inc cmp pop rorl adc jae push mov sbb pushf dec icebp pop and mov pop insl jns cmp enter cmc cmpsl fstl fs cld adcl add lcall lea ss add fildl sbb add and sub pop xor xchg cmovo (bad) cmpsb adc inc push xchg sbb addl sub or ret xchg cmp hlt out je mov xor pop shll push add and sarb add mov push add jb pushf sub pop xor adc bound add ljmp mov xor subb fs push sbb jl lret es loop cmp rcr push cmp lods inc test xor push jb sbb pop jo add ds call call and mov jno xchg xchg rol ds sub xchg and dec insb xchg (bad) dec in mov pop fdivr jmp shr inc lcall mov popf and add divl push adc inc push rcll addl es xchg icebp ljmp mov add fcomps jo mov jb jle out ljmp dec subb inc sbb rcl test push insb jmp adc orl xor pop or jl clc fisubr int rol fcoml mov sbb lret fst pop inc add jl in dec mov cmp push jmp fdiv adcb fldl2t or out pop sbb pop mov add push daa in add js aam je add test add hlt test pusha jmp (bad) pusha mov sub xchg push inc scas out push cld js xor sbb xchg cmp inc add cmp jl dec xchg lea jae xchg cmp das push mov pusha insb or dec call int mov sub jl ljmp std xlat je je push add int3 cmovg fwait inc scas cmp lahf test mov or xor mov pusha fcompl clc arpl cli les rcrl and into adc inc mov shlb pushf push fimul add test dec lcall jne push jo test xor jne nop or mov pusha mov add inc xor cwtl rolb or add je push add enter aaa sbb and inc leave inc loopne pop ja jp movsb ljmp insb jge (bad) fnsetpm(287 or mov xor adc ret add xor daa dec inc subb mov out cltd add inc cmp call and mov pop cmp dec and jbe test nop je mov jmp icebp add hlt or adc or dec in adc push adc imul ficompl cmp dec mov mov fsubrs fwait sbbb jne mov ret std lret mov or jl add arpl xchg dec lret or sbb loop or sub loop aad push inc sbbl jge lods xor sbb mov dec test pusha sub out xor or push popf sub xchg lret loopne loopne shlb jns daa inc or xor leave sub push add icebp push and pusha incl adc in (bad) in daa arpl addb and clc incb or insl sbb imull push lret aas aas and repz outsl inc int clc sbb push inc xor sub out jno clc mov cwtl jecxz (bad) mov (bad) mov inc pusha dec inc lods jns (bad) cmp push fdivl stos add ss mov adc pop pusha xor fdivr popa inc adc push je mov xchg adc sub cmpsl (bad) (bad) lods cmp jns cld rcrl add xor push in dec pop out xor pop jne jnp roll add (bad) cwtl andb mov and xchg adcb push add jnp daa fs cmp mov es sbb xorb or xchg in daa dec popa call cwtl dec mov push dec dec dec lahf in or inc or mov and arpl leave and and pop xchg out jg sub pop dec add iret jmp sbb mov in mov lea mov (bad) loop mov cli sub pop imul popf jb rol repnz add and xlat je push add popa jmp adc push cmp dec in jp jae xchg cmp notl notb pop rcrl inc push data16 fcomps pop or inc jl or push in push add add xchg xchg loopne push cwtl sbb push inc hlt cwtl sub movsb nop jo mov adc test lret ret cmp mov rcll subl pushf movsb mov xchg aad or call mov mov cltd mov inc lock sbb sbb sbb lock add push in xor inc out lret or xor std ret pop jno icebp add loope,pt (bad) das or mov sbb cmp enter push lea add xchg xor push jo pop roll mov ss lahf jl outsl nop mov fbld dec movsb (bad) mov out lea mov out ds mov and jg mov xchg add movsl out sahf (bad) xor scas xchg mov xor add clc pop aam add in shlb (bad) stc cmpsl bound or mov inc cltd jns add dec xor cmpl loop cmp imul sbb loop enter leave dec dec jne push nop loope aaa repnz adc or xchg push out int3 add dec add popa sub lock aas dec insb pop les sbb xor xchg lahf or data16 out test adc ss faddl add repnz add or mov dec aam les push mov add add pop hlt xchg add dec testb cwtl rolb rcl sbb adc clc xor stc cmp sbb mov and stos cmp sbb xchg ljmp call cld call jmp sub mov push (bad) sbb leave loope outsb or sub jo inc xorl and pushf add out add in sbb push dec nop bound sub and pop xor adc (bad) popf repz sbb mov push xchg add fsubl push cmp mov mov sbb fs in lea imul cli les in mov and mov add xchg inc ss pop sub out int add push push lret addr16 cmp ds mov xchg insb add in xchg mov je fs pushf ljmp andb mov loop and mov mov aad out into out xchg add mov outsb fwait jae add xor xlat lods add cs shrb das jmp or adc or sbb jecxz sbb cli jmp cltd ret sbb test sub mov out add int mov or nop cmp movb xchg mov imul std add sub inc lret pop mov fldl2t mov mov xchg sbb xor jmp adc add push inc mov dec enter lock js push mov sbb adc adc adc xchg lret dec mov enter mov xchg fwait mov lods pop mov dec call pop ret mov adcl cmc pop gs enter push test adc (bad) dec xchg loopne inc push push cwtl or mov jge call and cmp sub mov push sbb xor mov and and nop (bad) pushf icebp sub pop or les cmp adc test rorl loope sbb movsb fdivl cmp cwtl int3 in icebp xchg sbb faddl sbb insb popa sbb lock cld aad clc jo xchg push lock scas aam cmp test and adc push jp pop lret sahf mov jl add call loopne adc add imul imul add mov in rol xor mov fs dec add fsubs pop cwtl add and mov xor inc stc (bad) push inc cmp and dec push lock stc push pop and clc xchg add inc insl popa jne lcall mov push dec lea xor out fs mov sub sbb fs xchg push jl push enter cmp dec call fucomp subl fwait in dec ljmp cmp test xchg add mov pusha lahf (bad) repnz jno and lcall ret add sub mov add cmpsb enter mov inc fwait pusha call pusha inc inc test add jb in jmp add jge fldenv or incb inc movsb pushf sbb cmpsl and ljmp movsb flds (bad) mov rep cwtl out addl sbb cltd lds lock jge xor inc loope mov or lea nop fcmovnbe or sbb lock pop jg (bad) lahf loope sbb jo jbe mov pop mov lahf test jne nop cmp inc in je add adc inc lock mov lds jp cwtl test lock js loop push cmpsl lea loopne sahf cmp jo (bad) sbb cmp sub add (bad) jae inc xor nop jo and push xchg add pop stos in push lock ret pusha aas loope popa and inc popa jge sub loopne adc dec add js rorl jp in jo jne sahf popf int3 push cltd dec (bad) pop stos fwait add and movsb mov lods loope jne call pusha or jp xchg sbb add pusha dec cmp test or loopne mov movsb mov inc sub cmp xchg mov push and stos js lds and es push sub test sahf mov or ja loopne jp clc aaa or shlb in push mov outsb sahf or hlt adc fisubrl cltd cmp or rcrb jecxz add mov movsl xorb inc jnp push out xor lock jmp xor jp test xchg mov mov xor mov xor add xchg or adc push test test int3 pop lock mov mov pop (bad) iret xor icebp inc mov jp test adc nop (bad) sbb xchg add xchg jo out mov pop xor dec enter insb nop or daa insl mov jl cwtl pushf push ja addr16 enter clc xchg sbb dec dec mov mov pop out mov loopne test adc sub jecxz js adc cmpb lcall js add movsl leave adc mov cmc pop ja xor cltd mov add (bad) enter js push repnz and xchg xor hlt mov mov mov and mov sub clc xchg xor ds xchg loopne sbb ss dec and les inc push xor movsb inc inc push aas jne cmp adc or sbb xchg sbb add mov insb lret sbb fs or arpl and jb (bad) and mov fdivs inc and adc mov cmp xchg mov stos fistl movsb fildl jl lea popf mov sar imul nop test add mov inc popf cmpb cmpl subl icebp test lea movsl and dec das adc add xchg dec sbbl add jmp dec or sbb inc fimul ret fadds cltd push or jmp or sbbl hlt push mov jb and add or add fwait add xchg pop cmp call xor xor inc adc pop jmp sbb add js or rclb out pop push dec push push outsl in arpl loope les loopne mov push idivb imul inc mov gs dec or inc mov sti add sbb lock add push loopne scas xor xor adc add nop or or inc mov cmp jl aas mov lods test xchg subb or cmp mov add inc cwtl pusha orl mov sbb sbb adcb ds push inc pusha bound push add aam mov insb add nop xor xchg cwtl xchg inc jo push mov outsl test xchg ljmp sbb mov mov in xor xor bound scas std aas (bad) push lock inc push and pop and mov bound dec and xor mov sub dec movb xchg mov js aam dec adc mov mov mov inc sbbl or jns add xchg and cmp jge call popa leave push pushf ds adc cli loop movsb or pop paddw adc mov mov clc jl ret xor mov leave xchg adc xor inc pop enter sbb decb add int test lret dec add xchg loop jmp les add out aas cli popa cmp or or xchg mov loope or adc nop push cmpl scas daa popa and add cwtl sub mov std mov pop xor jmp pop imul cmp ror std or sbb sub pop xor sahf or push or jmp adc push or insl test sub and xchg clc mov xchg or arpl pop shlb or add jmp cmp test subl add movsb aas pop fldcw cmp popa rolb jnp push dec or push and inc mov lock xchg xor jne add test lods es fs add inc and pop adc cmp jmp sbb xor pusha (bad) ljmp sbb pop cld inc sub jg cwtl xchg sbbb dec xchg mov adc les pop push (bad) add xor mov es repz outsl xor xchg cmp cmp call std and in adc gs mov xchg or jge pop xchg fisubrl fbld in adc (bad) mov daa lods in lahf and or mov clc xor and lahf cwtl cmp sbb and subl sub in and mov and seto mov sti and add cmp or je xor add and inc sbb jmp xorl aam push cltd loope push arpl ljmp orl ret int3 add or xchg adc cltd jle add jle out jmp pusha fadds cmp pop or cmp adcb shlb xchg and mov cmp shrl mov mov pop rorb jle or add push or sbb pop rcl cmp lock aas add imul jmp fs mov jl sub inc or mov add in lea clc cmp xorl sarl pop rorl pusha adc push and push loope ret add cwtl test (bad) hlt in out jno popf adc lcall dec mov add aas int3 std loop push jne je and mov cld mov xchg mov mov inc mov mov not pushf dec stos mov add fadds xor add (bad) icebp push and or mov push push cld adc call ficomp cli xor and adc es mov mov sub push rcrl or xor mov cmp test lcall xchg nop push jo sbb add inc pop inc lahf xor loopne nop jb xor dec xchg xchg and push and or stc jnp xchg pusha repz xor add xchg xchg test cli movsb lret pop test hlt ljmp dec nop js repnz dec xor cmp xor dec aam and dec ret or arpl lds sti dec sbb movsb cmp inc inc xchg add add xchg (bad) mov xchg fcoml test mov fsub pop push and mov xchg scas jno dec jecxz dec add imul mov or std adc jb lret inc dec test xchg inc mov dec xchg push jge and adc out and mov gs arpl and jg adc nop sub fimul nop aam sub in orl pop sbb mulb xchg clc cld les add mov outsb adc mov insb adc cs sbb push cmp or mov movsl mov (bad) cmp jno inc sti sub mov test dec popa dec outsl mov rcll dec push push adc add pop xor leave (bad) setns std arpl sbb decb sbb dec fcoml cmp test imul xor adc cmp (bad) xor movsl ret dec xchg sbb inc je push test xchg jmp add in xchg pop push fdivl imul out imul sbb xor adc bound push or pop jne orl pop xchg add push mov lods mov mov add add xor mov cli xchg pop in fsubs xchg pop add and loopne lods push fneni(8087 lock jae cli arpl inc faddl mov adc xchg jne dec mov int3 jl sub or xchg and cwtl jnp add adc in (bad) dec and pop je adc std xchg mov mov xchg and (bad) push sbb add mov or cmp arpl mov jl add dec push pop cmp test lahf inc jl js sub mov movsb mull jmp stos movsl insb test in mov mov add mov mov xor inc add add xchg push pop clc and mov pop or sub mov das inc add test lods jecxz and test jl test cltd push push rep ret mov add shrb scas adc add push and jbe fadds mov cmp xchg xor jmp negl or fild (bad) mov jo test hlt pop popf or or or xor mov or inc inc dec cwtl sbb fcompl mov js cmc or in mov andl in ret enter dec mov jns inc lods adc andb xor fwait pop adc enter dec and cmpl in pop jl and enter imul sub clc pushf pop pop inc cmp lcall (bad) adc xor xchg xor push add cltd mov out xor cld dec sarb add popl dec mov mov dec sub ret or movsb pop adc and (bad) xor enter movsl mov push sahf mov lock xor add (bad) ret adc fidivrl fsubp inc out sti bound adc pop dec adc sub mov and jbe cmp pusha mov imul xchg mov xor hlt mov hlt sub lea call sub lea ret mov sub movsl popa stc sti pop push jne frstor push sub pop test add sub dec adc and jo subl and push push push std ret push fmuls mov ret rclb or je add adc mov les cmp xchg or (bad) mov popa sti add jne dec aam jne sbb roll cwtl sub test ja mov inc mov orl popf (bad) shlb cltd shl lea clc add push lods mov or xchg (bad) cmp dec xchg outsb jo adcl and or inc mov insb and adcb jp or stc add nop sbb mov or xor icebp dec jmp movsb inc stc lods dec movsb dec xor rcrb sti inc sub fisttpll js jno inc adc push repz fmull das pop lcall sub adc out or sub out mov mov aam sti cmpsb movsl fcomp pusha adc pop out in mov jle pop mov les add jmp or cmp cltd add mov mov (bad) lea loop push inc js fs fwait adc and xchg cwtl outsl or push mov pusha dec loop in inc cld or imul lret xor test or repnz je cmp and jne cltd subl or pop test leave adc sub notl cmp adc inc or test adc mov ss sbb repnz inc addl xchg adc nop mov nop orb lock push and or orl inc adc xor xchg push fcoms cld cltd outsl or push or inc adc andb call mov inc subl out andb sahf orb cmp popf pop mov test adc jl aas xor pop jg int3 jge add cmpsb in popf pop jmp icebp mov xchg adc add mov adc or sbb test repz adc insb mov adc inc call call pop pop inc cltd out jbe or int push xchg nop inc call xchg daa js int3 cmp mov das sub mov xchg cmp jb shl xorl add ficompl mov adc xor inc inc and dec mov sub in sbb inc cmp mov push icebp arpl rcll sbb nop pop cmp xor ds pusha xchg jl adc ret jo xlat hlt mov in lea dec je (bad) movsb mov andb negl lods loopne pusha out aam sub das pop pop inc jnp (bad) mov pop inc push lock push pushf push enter xor pushf cmpsb push loop les lcall mov and out cmp add hlt jnp addb (bad) xor push shl arpl in lea clc popf jns adc ds sbb clc sarb insb fisttpll (bad) xor adc mov dec lods adc cmp xor or sti mov adc pop or and pop mov es outsb mov stos adc and pusha inc iret or jg jmp or test cmp mov inc jns sar and js mov or push mov test aam or pusha and incl sbb es or je and jo xchg repz adc sti inc les push xchg xor adcb push cmp test inc mov sub ds xchg mov mov xor movl or pushf sarl fcoms mov and xchg addl nop dec sbb sbb adc inc or sbb sbb push cwtl add adc mov insl in and jnp outsb imul testb stc jo push test cmp ret pusha cmpsl movsb sub xor mov pop add nop lcall and jg sarb js mov ret sbb adc clc (bad) or and cmp (bad) sbb inc sbb inc mov lea ffreep lcall adc enter sbb inc mov ds xchg cmp sbb das or mov stos push xchg xchg xchg test popa popa mov or lea mov mov inc mov (bad) adc les cmp mov in outsb in inc pop adc and sbbb xchg mov movsb sub sbb pop adc cmp test popa cmp mov fs cmp movsb test xor pushf sbb sbb inc pop sub inc movsb xor push or lea test cmc cmp mov (bad) xor adc adc nop loop mov out in inc xchg mov sbb je fmuls push inc adc (bad) and rorl sub rolb xor sbb mov push mov xchg mov cmc sbb cld cltd in cmp xchg cmp loop std push sbb fdivr icebp cli cld jb pop ftst and loope adc xchg loopne xchg mov xchg mov xor xchg inc push sbb sub data16 std or inc xor les and test cld xor test add je adc mov adc sub inc (bad) push sub mov push cmp pop adc ds xor lea push in and or mov mov jbe push jl mov and adc shlb inc jns or push adc mov lea movsb les and or or adc subb adc test mov inc (bad) adc push sbb in sub cmp rolb jns adc aam and cmpl js scas mov and cmp stc add cmc cmp cmp aas push inc insl ljmp add inc mov (bad) lea lock mov cmp and add fs mov push js mov sub mov cmpsl jp sbb dec xlat xchg pop pop shlb mov lahf cmp add add adc adc cmp mov sbb xchg mov push add add leave cmpb js std add lea testl js (bad) js stos call pop xchg loopne inc call lods lea pop jnp mov add pop test dec add push sarl xchg sbb or pop and xorl iret sub mov inc rcrb loop mov cmp es mov mov adc xor add test jg mov popf push inc or std mov les push sbb and es addr16 push cwtl fmull out test dec insb cmp push or and inc int jne add mov sub das inc in ret adc test or jge push dec clc adc and mov mov sbb dec fsubr ret add push xchg jle lahf xchg mov xor adc cld mov push add mov sub adc and dec out mov mov ds je add adc add fs (bad) cmp mov cwtl cld sbb scas and xor insb das inc mov push mov cmp add cmp or mov nop push pushf pop add hlt mov push (bad) fiadd pushl mov ljmp cmp lds ljmp sbbl xchg pop hlt jle jo xlat insb sub sbb xor repz imul xchg cwtl jg stc add loopne or pop jbe pusha mov jnp jae add push cmpsb fcmovbe rorl mov cmp mov sbb ret push sbb cmp sub jbe jns sbb stc cli mov ret xchg add cmp sub sarb pop bound sbb loop add out cmp aaa dec (bad) jg add add fldl cmc mov (bad) sbb aas sahf mov jecxz shl loopne sbb sbb icebp ljmp inc popa xchg xor jb imulb ja int3 adc jns lods jbe nop cwtl push cli lds pop xchg inc xchg inc mov (bad) sub push push mov jle xchg sbb fucom fmull shrb or int out (bad) mov jno add sahf or inc sub pop scas push add or mov out addb loop cmpb xchg lods dec mov dec sub sbb inc nop gs mov ja sub test inc addb mov jne cvtps2pi scas dec xchg stos ds pop loop jbe nop enter (bad) xchg int3 and add push ja jb inc dec xor enter add jecxz sbb ja popl sbb and stc push inc test sti inc andb or xchg xchg stos rcrl sbb mov or std fs jbe (bad) xor mov or jno out add and add in rclb test sbb xor stc sbb sub andb sub sub clc sbb mov mov inc aas jb inc sbb loope add pop jno and adc jge or pop mov test mov hlt stos shlb lret adcb pop mov (bad) pop xchg je fwait mov push (bad) jno shrb dec je pop adc jmp adc jp mov mov addb mov xchg add adc add loopne jle out fildl ja lock dec sub xchg loopne inc fcompl pop (bad) imul mov loope stos xchg mov add sbb test pop cmp jbe test pushf adc inc adc xchg mov mov fs sarl jbe xchg subb test mov call js incl jle stos or rcll mov imul pop pusha lret adc cmpsl xchg (bad) mov int clc lods testb adc or mov nop xchg fiaddl jne add xchg xchg add in rcll inc xor push je inc data16 add daa test jle cmp add push js mov nop adc adc adc sub cwtl mov pop add and es lods fdivl jge jne adc in add push popa xor add or mov icebp or push and and cli add inc pop ds push inc nop mov repnz mov push and pushf decl sub sbb xor inc negb xor fsubrl js and sub push sti and add cmp fist rcrb cmp add mov outsb fdivrl jmp sub inc movups sbb mov cli sbb out jnp mov sub imul add sub sub test add cltd (bad) repz movsb dec pop cmp or jbe ret pop pusha aam dec movsb jl mov mov jo or das jbe fnstenv sbb add aad je adc inc clc stos out pop mov in ljmp mov sbb mov xor imul jl pop mov clc ret fmuls lea add add fstpl addb adc scas inc insb stos jbe dec cmp xchg xchg call xor lods pop add mov push mov adc stos cmp push sub mov mov pop pop sub ret fmulp clc lret mov aad hlt js mov (bad) les inc and addb cmp jno rclb cmc xor cmp rol icebp out adc add andb pop insb adc mov nop (bad) sbb xorl push mov test mull and xchg aam jp movsl (bad) popf mov xchg push mov sbb cld jne xchg push sub test mov test cwtl xchg add xlat ret pop dec ja sbb add sub mov and (bad) cmp pop cmp mov (bad) mov sub test lret cmpsb inc cmp push loopne jge mov mov add push add add scas test cli bound mov mov sub xorl sub add test aaa (bad) mov jge push and or dec data16 and dec add add out lds fdivs sbb adc pop xor icebp (bad) enter data16 cmc xchg mov enter mov push dec xor jl pop cmp jb (bad) xor (bad) iret popl aam mov in sub ja adc mov adc out push push adc pusha lock jae (bad) sbbb jecxz es andb sub pop adc in test fs pop add jbe xchg dec push push lock mov push pusha pusha scas int mov add sub es outsl push add test mov push sar hlt or cmp insb addr16 clc loopne mov fnstenv pop mov xchg adc add aaa xchg call loopne or (bad) pop scas adcb jmp lcall push add mov add sub and es (bad) test sub stos or adc cmp xchg sub cwtl adcb fmuls mov adc xor (bad) lock pop clc and cmp popa movsl scas std sti loop sbb or mov pop leave inc adc jle mov cmp lock push fwait xorl jno scas inc push jbe lret add xor icebp fnstcw pusha lock pop add pop aaa cwtl es pop xchg sub lods push mulb insb leave adc sbb push sbb pusha add push ja push add sbb xchg sub xchg push mov cli stos inc xchg xchg hlt incb (bad) mov mov xor jnp pushf add add adc stc pop fwait cmp mov mov mov in xor clc inc cmp cmp xor (bad) test dec sbb hlt cmpsl jbe mov jge inc xor xchg xchg fs rolb mov add pop jo repz jg and xor xchg gs loopne stos andb add push fcoms loopne fsubs or cmp inc inc xor add ja js inc scas sbb cmc sarb shll bound adc or dec (bad) cltd mov adc mov cmp mov adc lea adc dec pop stos rolb inc add cmp dec xchg push rol dec jecxz js sbb adc (bad) pushf mov inc outsl pop sbb inc push repnz add mov test call repz fcoms mov mov int3 aas stos pop test or sub das nop lods inc mov pop cmovs and jle mov rol ret cmp add pop mov mov adc mov and pop sub hlt cld scas add je xchg push add mov sbb mov xchg jp adc and and xchg mov lods pop ja inc fxch mov scas jbe pop push fdivr movsb adc lea (bad) jo adc xor lock sbbl insb sbb mov or lea adc sti and pushf add jl dec sub add out lahf jg insl mov lods lds sbb (bad) (bad) push les adc add cmc scas in push mov and scas sub xorb (bad) out lock jge push adc ljmp nop push push imul add pop jg pop xchg mov pop push imul adc insb jns lret sbb hlt adc loopne adc in adc clc add mov mov movsl add dec xor (bad) hlt lret inc xchg and push (bad) sub pop push mov mov mov stc jbe mov mov lahf gs or jbe sbb or shrb loopne cmp add andb mov and out mov mov nop popf dec cwtl add les loope lock jbe (bad) je pop clc sbb gs rol xor mov mov jge jmp in push add mov stos cmp imul scas push cmp xor fwait and lahf lock sub movsb pop push push fdivrp mov push pop loop sub subl (bad) sub sub movsl push xor or dec or or or (bad) lret test and sub or adc (bad) lods add sub xchg pop cmpsb add jg xchg jb add cmp add add clc dec insb xor push sbb adc scas and jg pop fildll sti mulb add cmp add insb push inc cmpsb pushf (bad) mov or mov sbb inc push int mov and adc mov inc cmp sahf mov sub sub jo mov insl flds xor shr test pop (bad) je repnz inc mov add decl mov nop adc xlat cltd sub pop mov jne and mov movsb and lcall dec fcoml rcrb clc xor mov dec push subl xor (bad) adcb or cltd insb pop xlat add adc inc pop dec or scas push dec pop or mov mov inc fadd sbb fwait inc orl test mov outsl insb add cmp jg xor daa stos jl or jp push mov lods pop push out sub adc jl pop stc or ds pop jns and push or xor nop or shlb and mov add cmp subl adc aad xchg jecxz loopne daa cmp xchg add dec jl loopne cmpsb lods leave dec adcl and inc dec inc mov pusha or pop sub adc xor out or ret jmp jp pop mov movsb and test or (bad) call int3 mov imul add cmp cmc clc mov sub add inc jl ret incl les jmp lahf and sbb push mov mov sub repz cmp dec lods out orl inc mov popa xchg push inc inc je cmp pusha sub adc xor in cwtl lock push sub add jmp mov scas fwait cmp cmp ds pand ljmp mov (bad) paddusw addr16 pop xchg subb int3 add jp cltd ja ficom xor test sub jb js add dec leave (bad) notb sarl mov neg add sbb dec pop add pop incl adc out mov add mov xchg cwtl xchg stos mov fistpll and push in pop ja add subb adc add and xchg in imul cmp mov das sarb inc iret icebp insb in cmp mov clc sub test scas or jle cwtl push (bad) lock jg aam add jae inc insb and addr16 mov add inc xchg mov xchg clc pop xor adc xchg test je xchg push stos jo jns mov pop lea cmp mov and iret xor lea sbb and repz and xor mov add in loopne test aas or mov add mov (bad) imul into push or inc xor dec jnp xchg inc (bad) stc push sarb fdivl xchg dec mov or xchg inc lahf and (bad) and (bad) adc daa pop lods lock fcoml dec arpl stc or pmaxub daa andb (bad) add in jecxz sarb stc pop lods sahf outsl inc jmp loope xlat enter in sub movsb or pop jb mov ljmp sbb and cmpsb (bad) cmp out (bad) jge stos lds (bad) xor ds xor pop xchg inc adc sub mov int or ja outsl mov xor test dec and push std (bad) ffree or jno xchg ror mov lret ret sub sub sub inc cmp push andl fs popf add xor loopne add sbb jnp xchg ljmp shr js push add rcrb clc mov or or pop adc incl test pop leave lret adc or adc add lahf xor push daa sub testb fsubs ss sub cmp es pusha pop jmp rorb (bad) clc mov xchg jo xor or (bad) icebp pop leave or mov and sbb popa add jns sbb insb push sarl jno add push xor lods sbb lcall xor add mov (bad) insb push jno mov and cmpl arpl mov (bad) addr16 hlt xchg and aas pop stos rol mov (bad) (bad) add in mov pop test mov sub mov inc mov or mov xchg adc ficoml outsb flds clc sbb cmp dec std pop insl clc add adc pop std ret ja add push out mov mov icebp add ja add push scas cmp add arpl (bad) sbb cli imul push cld mov adc xchg mov jl mov adc cltd pushf xor mov and cmp pop pop mov and dec lea push mov jmp sub loopne (bad) lock pop lcall pop pop test cwtl push sub push add in aam daa fwait dec addb outsb jns rcrl ror (bad) outsl divps icebp pop xor jge mov pop add pop enter into sub shrb arpl insb push cmp subb popf cmp mov clc cmp fistp jae and fwait mov nopl xor jae inc mov push nop add out stos fcomi mov xchg xor sbb inc pop add pusha sub out or enter xchg adc add cli shrb mov xorl ljmp aas out and int3 cmp inc mov push popa xor xor add inc jno dec ljmp or daa sub xchg ljmp sub mov mov loopne lahf cmpsb aaa or mov cmc or xor les mov mov je add enter (bad) call inc push insl pusha add mov icebp repnz lcall fildl dec add sbb cmc mov cltd lock mov xorb adc roll imul out (bad) je mov call insb (bad) mov or push leave (bad) insb mov lock mov inc sbb xor lea or push mov pusha sbb or imul add jp clc (bad) mov jl test stos dec sbb pop leave dec xchg mov out loopne mov lds lods stos (bad) (bad) or push scas pop sti shrb jmp loopne mov cmc lods jae or add inc int out test or add popa (bad) cli jo call ljmp iret mov pop mov fnstcw fs loope lcall pop aas add test jb cmp outsb push xchg sahf push fcomip xchg push cmp inc add cmpsl mov mov push out and mov pcmpgtd xor pop lahf subb je add adc jbe push addb (bad) out jmp out adc enter into cmp push addr16 dec fild inc dec ja inc lds xchg inc adc push inc mov inc jg movsl jnp add mov jb shlb cld (bad) jl push inc out adc cmpsl orb cmpsb add xor icebp jne or scas push dec xor fwait mov and sti (bad) adc jne sahf add js xchg mov push add lods pop stc dec add test or dec add repz jb jbe cmp ret cmp or (bad) dec jo or cwtl loopne out call in push jecxz sbbb shrl fisttpl movsb dec ja jnp int3 pop sbb mov ret loopne xor jg clc (bad) pusha sbb cmp jns and rclb inc gs xor dec jge,pn mov inc push out push pop enter lret jl adc or insl adc in jae aaa jbe jns add pop enter dec mov cmp push mov shll sub repz xor push je sbb ss pushf add add fsubr mov and jns adc and adc jl ljmp ficoml and mov push push adc enter dec mov lahf or push adc mov cmpsb es xchg jl pop or push mov js packsswb movsb dec ja jecxz ret mov dec xchg jbe jl dec adc mov pushf les xchg add (bad) incb out sti add sbb push cltd and dec std sbb ljmp lods mov loope mov mov pushf mov add mov mov adc push lds in aaa mov outsb xor (bad) push pop xor sub add fsubrp loopne (bad) popa or lahf std enter or test cmp lret pop adc decl add lahf or jns call cld jne rcrb cmp adc rorl add pop xchg xchg push adc aam nop push add push mov push xchg pop add imul test push es (bad) hlt adc pusha fsubrl inc jle sub xchg add leave cli imul test or (bad) xor dec jecxz cmp lret idivl loopne mov mov add fldcw pop ds sbb dec and push adc lret int3 cmp push mov lret pushf into mov mov add out addb dec and push insb mov stc adc dec dec rcrb leave and sahf scas repz push movsl xor aam xchg push test lock loop nop movsb and ss inc movsb jge imul add jo xchg adc loop (bad) xor sub add jns mov aam cmpb xchg mov repz and mov movsl mov rorl mov in aas add add add adcl mov sbb clc je cmp cs pusha das mov and jae mov (bad) shrb sub sahf add (bad) repnz lret inc mov or sub sbb insb push inc repz mov (bad) aam pop int mov js mov sbb add mov inc dec lahf jecxz sub and test add mov js outsl call push loop xor dec xor mov or nop add xchg cwtl sub cmp push out cmpsb test lahf jo aas arpl popf jmp and inc in cltd dec lret out sub jae xor enter insb bound (bad) mov or ja jbe mov mov fsubl cld punpckhwd cmpsb (bad) inc mov xor pusha jno xchg call push xchg repz or iret mov nop xor push idivb inc movsb pusha pop test push lods sbb or inc add pusha push cmpl jl add pop adc lds push inc aam mov cwtl fstpl loope or leave es cmp sbb inc cmp lea adc dec out add jle test push jl outsl mov adc int icebp popa cmp rcrb lcall sub and or in sti test inc mov in int3 add jg jecxz inc cwtl jbe lea jmp cmp in out push cmp imul add pop and xchg push out add ret mov dec fwait push adc out lods lock jnp or mov stos pop pusha and dec jl out push pop or jge,pn pop pushf xor inc add inc push lods add and shlb sbb lock pop and in sub sahf pop mov and xor aam lahf add icebp sub cmp add jno and xor xor ljmp fidiv shrb clc lock movsb inc mov cmp and and sub dec dec cs mov and push dec mov mov imulb loop push push ret pop add xor sahf (bad) cld inc fbstp push xor call lea popf adc rcrb mov add inc mov cltd rclb pop push sbb or cld jo call test repz jne incb pop adc lahf (bad) push jb (bad) into bound sub push nop jo or and push mov repz aaa test adc add js xor int3 test insl loopne testl add insl xor sbb xchg test aaa movsl push pop ret jmp add pop and adc js xor ds sub adc pop in in mov add mov inc jecxz cmp cmpsb outsl addb push push sti hlt test push push pop adc jl push xorb jb pop push add push mov adc fcmovnbe movsb inc mov sub loop add lahf jnp test pusha mov sbb int rcrl add movsb or mov cmp jno xchg add rolb and add test ficom adc inc add xchg xor out test (bad) mov add insl or mov mov inc lret jle int3 xor sbb pusha jmp sub stc cld (bad) fdivrs add in adc pop cmp sbb pop sub pop cs or jmp lock xor (bad) repz (bad) xchg clc jle ret dec std cmp fs data16 and outsb lahf roll xor stos out xor clc sbb jbe dec cmp leave sbb pop sub add add mov inc push jle and add fisubr sub adc or adc leave dec push loopne popa add mov adcl arpl xor sub es les jbe add insb imul addb sub and scas sbb push cmp inc test add inc es sahf out and test push leave or and mov addr16 or test cmpl nop lods pop lret stc push dec lcall xchg pusha push loope xchg pop in push mov je out lods or fwait push pusha mov pop jp lea jle cmp (bad) mov mov js add add pop pusha jbe in push adc aas xor stos or cmp fyl2x aaa dec mov mov push ljmp in xlat inc xor mov xor mov ja and jo pushf mov pop mov addb dec psubb and cmc ret mov jmp sub pop (bad) ljmp push mov test add push xchg or or inc inc sbb and ret dec pop in xor cmp dec enter mov add cmc faddl add and je mulb add mov jbe xchg add imul push or inc add rorb hlt repz ljmp jbe,pt orb mov incb setg cmp jb mov inc int fwait sbb (bad) mov add insb ret sbb loopne and pusha dec mov adc add fnsave dec clc or mov rcrb mov and mov push push inc pop add test push mov fwait and xchg (bad) push jno jle push and dec mov je sub or cmp (bad) or adc pop jbe ljmp scas xchg xor in push fisubrl (bad) out or jae daa xor fld1 or lds xchg nop in add fs push cmp mov and pusha cmpsb into xchg sbb and fsubrl mov in jne mov sub jmp dec xlat fisttpl repz pop add mov nop or adc mov xor add inc clc inc test enter add fwait cmp inc das gs or xchg test mov mov and xchg push je xor mov je test push and dec shlb test push mov setnp mov adc mov push stos test and out into enter js pop mov or shlb in scas popl sub xor push sbb inc mov ss push cmp and test nop add inc pop or pusha enter xchg or pop int sub (bad) xchg negl adc jmp mov sub cs andl nop imul cwtl add sbb mov mov fiadd nop psllq and xchg cmp jge mov cltd add test popa dec rolb fwait dec dec mov push xor outsl push jl clc add dec mov lahf dec test nop xchg pop aaa loope xchg ja enter jnp lods mov and cmc fs or add out xchg cmpsl push and and es scas jo lahf pusha ja jne lock dec cld inc xor gs pop sub or gs ret fwait dec sbb sbb sub in add into out data16 add addr16 jns push iret add stos mov add adc mov push xor jo loope scas jb mov imul or (bad) and sbb mov add jmp notl add and mov loopne jo adc fwait js add add add or add mov push insl movsb adcl es jbe xchg call lcall rcrb je mov das dec int3 or add add jmp cmp fldl mov mov add ret add jp icebp adc (bad) lods dec imul in and insl sub sbb pop adc call pop fldt (bad) mov pop jo into cmc aas add ret and out and mov dec mov mov inc cmp add jno mov int cmp out dec add xchg call fsubs scas repnz lret sahf lea add mov pop jge inc jg loopne or lock mov movsl xor dec daa mov imul xor sub xor xlat cmpsb and and jo jl adc add jge inc push leave pusha jmp push fiadd les and xor sbb cmp sarb add es rolb add adc jg mov dec popf sub push (bad) sbb sub aad dec test fs mov mov adc scas dec push cmc movsb jb add mov push mov nop rolb xor push shlb das jo fcoms sbbl add int3 (bad) nop mov test sbb mov xchg (bad) jo mov xor loopne aam push push adc repz (bad) jb add (bad) in pop lock sbb dec jo js (bad) jae add jns fisubr xorl cmpsl out inc dec lcall insl inc add aad inc loopne mov sub enter sbb add cmp shlb aas fst pushf sub push dec add mov cwtl mov sub jle (bad) stc int pop pusha cmpsl adc pop les mov in add call add or pop mov mov xlat loop jo jbe inc mov aam add adc pminsw (bad) lds sub lea call sti adc mov sub add dec incl (bad) rcrb jne nop add push mov fucom xchg lret xor add dec (bad) cld popf imul (bad) xor jb or adc xchg inc xlat ret out sbb test jb inc or shrb pop or fs int3 lods push lock mov cmpsb jo jns sbb pusha adc pop js sbb (bad) and lds pop add (bad) cmpsl inc add test push add add popf cmp add mov mov mov dec out add xchg (bad) movsb js cmp xchg add adc imul jb fs inc lods rcrb sbb ja xlat mov push fs or pushf sbb adc popa dec and or test out cld adc les pop cli mov mov sarl hlt add sbb add lcall into or mov je inc or popa cmpsb ret test mov and sub dec mov dec mov in add xchg add sbb hlt mov sub lret int3 dec out sbb sub out js jno and lcall nop cld in fsub int3 es sub mov pop dec cmp lock insb pop je pop lret loopne andb (bad) in pop adc xor imul sbb adc push xlat pmulhuw add push outsb fistl push or xor rcrl mov cltd mov push jnp in cmp frstor inc rcrb adc push mov or scas inc and sub rolb push sub pop pop outsl adc adc sbb dec jne jne dec in mov ret xor shr flds cmp pop aad adc jnp addr16 inc mov sbb inc mov jo jge add push jl pop mov mov ja or stc test dec mov dec decb in push jne or scas scas cmp mov adc mov insb cmp roll push cmp jo xor je daa cmpl push push lock outsb or cltd test pop arpl rcr add stos int add mov and or or bt imul push add and shrb sti mov mov lcall ja add pop int cmp adc pushl lds sub mov add or xlat mov ljmp lahf sbb loop clc stc subl in mov loop rcll or imul add dec pop inc mov rcrl sub imull js sbb (bad) int3 rol xor mov sub adc dec sub enter lret leave jnp nop test sub pop test lea mov and inc mov ret testl xor sub sub adcb int sbb add dec shlb and mov or dec cmp push cmp jns stc mov xchg mov push faddl je enter mov inc add xchg push jae mov int xchg aam lret mov push or mov jns cs mov add fwait cwtl xchg mov add mull das shrd or and cmp je jnp (bad) mov cmp mov shrb into pop mov pop sahf jns mov inc (bad) int and cmpsb lret fsub or jg xchg add sub aam out or or mov adcb adc and rclb js cs xchg (bad) iret mov call mov sbb jne mov cmpl cmp add mov aas push add push outsb mov mov aam fsubrl dec (bad) push adc cmpl jnp movsb adc sub aam test mov mov bound cmpsl push add pop es mov cmp pop pop push add subb push mov push out cmpsl sub mov leave pop outsl sbbb add out push jb shr popf push or mov dec stc adc pop add inc mov js into test xchg add push cwtl popa xchg (bad) xor push mov dec aad mov lock in add lea out mov imul ss js and mov imul test xor or pop fcoms add iret push das mov mov test enter and aaa fadds mov sub push inc mov mov mov imul mov push pushf nop mov in test and dec inc mov mov ja or sub push cmp popf xchg or and nop adc add lret mov scas (bad) dec add jno lods adc push jle add cltd or and mov adc std add popa push adc push add add jne ljmp fadds lcall dec rolb push cmc jp add add dec test inc icebp icebp lds mov push add addps jbe lahf add mov sub mov mov inc lock lret and and lahf jo mov sbb andb sbb fcmovnb jle jns jb out sti mov into dec and sbb mov nop mov repnz jle and and jno adc add mov scas pop mov jo xchg pusha dec mov es xor ja inc rorb int3 sub jo jl sbb imul add mov add jne jo add rolb lea fdivr hlt (bad) sbb sbb push cmp jns and pop mov or lds mov push orl pop adc mov hlt or pop test jne sahf mov imul leave enter mov insb mov lret dec pop and mov xorb pop subb sbb leave popf sbb sbbb mov movsb dec sub push jge or inc sbb lock jo or fs sub add std in sbb mov jne mov dec fsubrl jge push loopne or imul mov or cs aaa pushf lods pusha or add jo icebp cld sbb push jge add push jb jne mov pop add dec loop (bad) (bad) jae pop xchg adc pop mov or add (bad) xor adc or mov dec or rcrb fmuls orb pop ror orb es call orb pop arpl xchg mov cltd push sbb movsb (bad) pmulhuw sbb add mov xor xchg mov mov or dec pop pop jl rorb leave out iret push or rorb sub es movsb shlb add out xchg fnop add push adc cld push add mov xor nop out pop test dec orb xchg pusha inc jle negl dec mov push cmp inc add notb into (bad) flds aam sub mov lods sbb jns add xchg ja mov xor orb inc and xchg insl xor pop jmp mov adc repz mov pop (bad) lock xchg adc int adc xor fildl xchg sarb or xor push mov outsb xor pop dec cmp pop add or mov jle pushf cltd add pop push xor popa fwait mov inc inc out or push and jb and mov cmp mov loopne or lds push ret or mov es sub nop or out mov adc and xchg pusha cltd add (bad) xchg mov pop jb xor int3 or mov pop sahf sub fdivl adc inc inc xor js cmpsb testl mov jl mov pushf nop sbb das cmp popf leave inc addl int scas sbb xchg hlt into test lahf test pop add in and xor or add andl leave xor and mov mov xchg xor jp or pusha addl leave pop imull jae nop rorl mov enter or mov adc inc push inc adc adc sub xorb fisubrl adc inc sbb inc dec call xchg push into fmull add outsb mov std je push hlt nop jne pop or aaa xadd sbb push imul (bad) daa pop imull push jb add pop stos sub push fwait and sbbb fimul test movsb xchg fstps mov cmc add cmp mov jno adc inc add push insl sbb rcrb addb mov mov test cmpsl push xchg jno pop add and mov mov add xchg outsb add pop je (bad) pop loope sub lods insb and repz xchg test aam imul pop test test mov lcall outsb js mov subl jmp dec add mov cld mov add xor daa xor inc mov vpunpckhqdq push jb aam dec fnstcw imul xor and sbb pop nop enter sbb fbld jecxz mov clc add or enter cmp nop add mov pop je rclb aad and (bad) mov mov lds xchg dec cwtl dec or push aad add pusha xlat andb pop pop push add fmull call jle inc push lock sar pop lret mov cmp (bad) mov lods std mov clc add adc pusha add cli test fs cmp dec or mov pop or jo scas add mov push or add sub mov test (bad) jns fwait mov mov cmp inc ja push lcall xchg or testl hlt loop iret inc dec or sahf inc inc lock inc adc imul add (bad) jno sbb jo or icebp inc mov pop aad mov mov and pusha mov xor dec roll (bad) icebp dec mov lahf ljmp sahf aad in (bad) movsb add jo mov aam pushf ret sarb mov xchg mov pushf bound cmp mov xlat pop fs insb xchg imul sbb adc sub test add rcr xchg (bad) movsb pop sub add jo rolb test subl sbb add mov xchg aam andl and xchg xor and cmp into or or and movsl pop dec sub add xchg test xor ja daa xchg int jl pusha mov jnp lods dec cmp (bad) cltd cwtl inc jl adc mov shrd xchg add add sbb stos and sbb xchg xor ret push mull mov add inc mov (bad) sahf outsl mov ret sbb cwtl pop sbb icebp inc sbb sub cmp (bad) or nop das adc mov and lds add dec cmpsl push mov cwtl test test jnp leave inc or fildl inc jg (bad) dec adc mov sub lds jecxz mov rorb mov cwtl or xlat mov cld les add fcoml push dec out nopl jecxz or and adc arpl sub aaa push push mov repz roll or (bad) out rorb xchg or shl pop fldcw sbb cmp mov sub sbb pop mov dec repz cli loope frstor fcmovu clc adc or or in or or fmul xor push mov and push and push lea int3 sub dec pop jp adc mov or sub push add or and in jne mov jmp cltd fistl pop pop clc or jae rorb in mov and lret sahf les mov popa adc cmpsl (bad) inc fisttpll aas adc shr addb add pushf inc add cwtl sbb or mov sub dec cltd roll mov test loop inc add lds iret sahf in dec or enter movsl lret mov cmp dec mov nop push jp dec jae int movb sbb push repnz adc stc or dec xchg cs adc add addr16 pop inc mov cmp sahf mov lods inc mov fnstsw or stc mov lods std pop push pop push add dec (bad) jae call (bad) test jo or es fwait sbb mov pop pop add fisubr mov or mov test add imull test jmp and add xchg in or mov (bad) mov orb xchg push mov call pop and aam push push or inc js or xchg in adc jno mov push fmull in add out orl or inc hlt lret inc mov mov or clc mov push (bad) idivb pop or inc enter addr16 imull rorb add movsb iret jle aam dec or stc and or addr16 fisubrl push adc mov and call inc loopne cmpsb add in andl adc arpl inc inc push xchg bound jecxz (bad) fs sub mulb cld sbb jmp ja pop paddsb bound push das daa scas sti or dec cmp mov push jns dec mov data16 das xchg aas jno push add jnp jge sbb add mov xor inc fildl jge add stos bound mov (bad) divb add mov in xor xchg inc aas add movsb idiv mov or sbb mov cs push adc sbb adc adc imul dec mov lods cmp adc sbb mov test rol (bad) loop imul in cmp jno ds xor dec cwtl dec icebp fiaddl aad adc call mov jl cmp arpl rcll scas adc push fs in xchg cmc scas mov jb xor add sub leave insb test test fsubrl adc add jge dec out and (bad) xor xchg add push and add mov test popl movsb jl dec sbb inc pop lea lret mov rorl ret and add adc int3 adc scas std dec fstl cld dec push (bad) test inc sbb sar and mov imul sahf mov mov rcrb stos sub lock xchg pop cwtl js leave mov push pop pop dec fadds js adc sub push xchg mov cli xor adc cmp add add clc adc xor sub add sub mov test push add push jbe xchg lock test inc add adc inc pop nop clc jecxz pop or in xor or ret pop lods add movsl cli jb inc sbb jl or inc adc ss xor sti loopne inc sarb sbb jo es cltd jbe xchg call (bad) xor mov pop pop or cmp stc sbb mov gs movsb int3 or lods mov adc add adc mov into out (bad) or cmpsl inc adc pop mov and dec in cmpsl adc xor (bad) xor push lods test xor into cmpsl and xchg dec xchg imul jmp mov insb subb in sub inc and cmp lahf push add and sub call insl lret push mov jp or addl adcl gs sub pop subb insl adc adc inc inc or (bad) mov mov lds pop jne fnstenv jp test and mov pop xchg js or inc enter cli in cmp jg iret push add xchg xor lock mov add xchg test xlat (bad) (bad) insl or bound mov rolb int3 lret push push ja sub je pusha lcall test addb jb das mov dec loopne (bad) fadd int3 xchg xlat mov jo add inc and (bad) jns inc movsl jmp repz xchg scas test mov push mov mov pop mov fcmove popa or cmp loop dec dec iret js add ficoml sub add gs cmp ret loope in xor sub nop out mov mov in pop cmpsb or add icebp test mov fnop adc in aad cmp add test loop or shll lds add mov ficom push add pop bound lods lods add inc daa push out lcall jg pop adc push scas jl sub push adc cmp pop testb xchg jle repz pop and add lock into or aad insb lret and mov mov pusha add sbb sub jbe add mov jl (bad) faddl stos imul aas mov mov (bad) or sub and (bad) mov mov add inc pusha mov (bad) pop mov mov add fisubrl push iret (bad) arpl (bad) lods and adc and orl mov mov pop add inc xchg mov cmpsl add lret jo fimull cmp int3 fsubrs dec add mov dec cwtl mov sarb add ret out push or sbb iret inc or push pop ja cwtl inc div inc sbb aaa mov lods cmpsl int3 ja dec xor add jg adc iret mov or movsl test push sbb sbbb push setae jo sbb rcl stos out (bad) push mov or arpl mov insb pushf add fmuls sub orb aas mov daa insl cmc (bad) rcll pusha (bad) mov aaa xor scas (bad) add ret sub dec out adc rolb cvtps2pi add fsubl mov daa add inc and mov movsb adc std inc jae bt (bad) xor sub popl je pushf mov pushf ret into cmp mov les pop shr jg js add jp cli xor xor rol ss mov mov mov mov divb lods pop notl stos insb xchg inc (bad) lret add test ja pusha fwait icebp jmp mov sbb add sbb add aas divb loop popl cmp inc xchg cmp pusha adc pop lret pop xor pop or popa xor jo scas and je ja sub sbb fsubl es add add fistl xor test in int3 xor in jo idivl xchg outsb and test mov add add push test cmp pop xorb clc aas sbb push pusha js inc test inc rcll sub sbb fcmovnb mov adc mov cmpsl jnp mov mov sbb ss imul add gs or (bad) shrb and insb add mov cld es mov jle pushf or cmp mov test pop es inc adc iret mov cwtl and lahf mov mov imul push jns add jl mov or lahf inc mov das pop xchg cmp movsl xchg mov (bad) pop lods and (bad) xchg out add dec mov pop cli mov and mov pop ret xchg pop mov aad orb pop test lock or mov shll xor pop and shrl mov push fisubl xor xchg inc jns or and in fbstp xchg or cli pop mov jmp adc test mov mov inc daa pop test inc jmp mov rcll pop call fwait mov in decb cmp scas and cmp xor pushf xor sahf mov and outsb mov fmuls sub add adc push nop add sub or int3 inc pop pop xchg dec rclb inc lods pop mov xor cmp push add jno int3 or jo dec or cmp pop xchg inc daa mov or (bad) repnz jmp xor and fs je mov mov mov mov adc cwtl push push cmpsb and inc dec into es leave cmp shrl fs call lock nop test movsb int roll mov cmp adc mov inc movl out adc sbb (bad) mov and dec hlt add add rol mov push add jmp xchg dec mov inc or imul movsl daa cmp fsubl push iret push mov jo imul ror mov jl mov sbb pop adc jmp and or sqrtps or stos xor hlt xchg outsb adc sbb mov (bad) xchg sub pop pop and pusha repz or popa push iret fsubrs es adc cs pop pop adc sbb pop mov and mov sahf mov in mov popa xchg addl scas imul jae lcall aad (bad) repnz cmp xorb add inc hlt add adc into subb cmc xchg imul push dec xor push sbb mov mov inc xchg inc aas add pushf ja mov add xchg out pop andb loope imul mov out test mov clc mov popf cs repnz push add cmp mov ret add push inc add pop or mov hlt pop mov dec add div inc cmp mov push pop ss add dec sbb xor sbb jge sbb rolb push xchg out repz andps fldcw dec movsb push add (bad) ds into add jnp pop mov popa xor movhlps test xchg sbb pop call add es mov ds mov push push push pop pushf push mov add (bad) fmull fcomi cwtl pusha out dec push lahf leave or push outsl mov cmp (bad) jle sub push rclb inc inc xor popa sbb cmc or cmp and imul add rclb mov pusha repz mov adc xor popa addr16 add dec loopne stc sub int3 in movl pop xchg call push cmp outsl add lahf outsb aam mov xor mov or out mov into pushf sub popa pusha cli jae jae in xchg inc push sbb cwtl pop and jmp or pop xchg aaa mov (bad) shrb push fmull (bad) lea sub sbb or hlt inc pop ja,pt movb je sbb inc mov or push lret test aam bswap out int (bad) push mov test push add or pop jmp sarb and sti scas mov in sbb subl mov add xchg cmp push and xchg icebp xchg and jno incb add popa aad pop mov in pop inc roll fsubrs shll or pusha adc sub mov xor adc cld and call adc or push icebp mov call jo mov or sub shlb loop int3 fadds xchg aam or lret fmuls mov (bad) ds inc add pop out (bad) jecxz aas lods xor add lcall push sbb or or ficomp icebp pop lods pop rcrb loopne out sbb adc dec or (bad) xlat sarb or loop jno xor xlat and insl inc adc es push push fsubrs or daa out scas popa sub jb mov inc js shll clc in xchg jl cmp mov insb aam sbb shrb dec sbb adcb enter and fstps adc mov and add fadds mov leave sub cli mov orb xchg inc xchg mov in shrb cld add andb add ret daa xchg in enter cmp and xor jo divl dec stos sub outsb (bad) (bad) mov mov mov push unpcklps (bad) dec push inc (bad) dec xchg mov imul cmpsb je push adc and add cmpl inc orb dec sub mov movsb cwtl je sbb inc imul addr16 es add jbe (bad) inc popf and mov jecxz jp (bad) jb and or jns aas add in iret jno lods cli (bad) add test adc push in leave xor add and aaa loopne ret int3 sbb cs mov xor mulb sbb fdivs add cltd cmp push adc push mov imul lea and ret xor xchg mov add mov jmp mov push sahf aam push push pusha mov pcmpgtb lcall cwtl mov cmp adc inc shlb test push jmp jbe pop inc push adc test cltd adcl inc enter add cmp jl,pt cmp mov pop mov dec ret cmpb add lods mov mov push addl jno xchg adc in or rorl jmp call push cmp xor imulb in xchg add cmpsl push sub inc enter lods and xchg shlb fmuls icebp imul add rorb (bad) call mov dec int3 dec add mulb add mov mov mov and add sbb mov ss aas pop cmpsl add mov cs fisubrl inc jecxz enter dec fadds mov loope xchg ret or sbb push and pop sub stos (bad) stc ja call sub pop cmpsb mov pop mov mov test pop add cmpsl out (bad) call test push mov mov mov add mov or xchg data16 xchg sub pusha inc mov jl int mov add sub aas add mov ds mov cltd lock sti cwtl lock inc aaa call or lods call inc mov loopne jge lds fwait pop in xchg sub lock add cmc (bad) cmp add int jmp xor nop test push dec imul int3 aam mov fcompl xor jmp push mov pop rcr xchg dec adc add mov xor addr16 dec dec pop pop js inc add dec hlt pop test adcb cmp dec ds jg xor (bad) xor jo jecxz pop insl cmp cmp jg hlt cmp mov xor iret mov lock lcall loope,pn and bound add xlat shrb dec bound add (bad) add mov sub or (bad) adc inc and mov aaa xor cmp flds lea pop add stc mov mov mov xor inc (bad) jl leave and and loopne popa push cmpl sbb xor mov mov dec mov sbb and pop cltd shrb xchg xchg insb lds lret insb add imul jecxz loop out js add pop sbb lcall test loopne push jbe stos mov pop inc sbb cmpsl cwtl pushf xchg sti mov dec lea lock pop mov fiadd leave jae,pn aaa mov bnd (bad) adc (bad) icebp xrelease in in popa cltd clc shrb pop sahf mov push int3 shl cmp xor inc int3 enter (bad) mov gs or andl ret pop xlat dec sbb test out pusha lcall fnsave stos data16 out insl inc dec jmp in push loope repz stc or ds add (bad) sarb jp adc mov sarb or adc or inc xor push inc push test or add pop mov bound popf popl xchg inc inc pop push cmp stos sbb cwtl mov adc lods lret fsubs lea push fadd mov mov lea add loop mov fdivrp push jg mov sub jns int3 (bad) mov aaa fwait sub cwtl loopne inc dec arpl fcomps jb out orl dec add add pop enter jbe dec pop cmp mov adc cli enter sub cwtl cwtl sti jge in std repz je or xchg cmc cltd sub sub pop fnstcw adc fs sti aam or and shlb adc push pushf inc dec test in jo fldenv movsb sbb push into out pushf movsb aas push cmp shl mov sbb add sbb js sub fidiv add mov mov les jmp inc dec push loope outsl cwtl cmp subl sbb js mov test mov inc pop add test jle popa push add enter (bad) xor std push add dec insl pusha into mov cli cmp test test jno outsb sbb (bad) mov mov push lds pop xor adc js add jae lret xchg aam fwait movsl fistp mov add mov add sbb shlb test sub pop jecxz add outsb add push and scas mov mov dec push add int add pop (bad) enter gs leave or insb loope dec add jge repnz sbb clc ret int3 xchg aam adc adc or (bad) ds test mov fiadd popa rcrb mov mov push push dec cli out jp imul mov mov sub add lcall pop out or adc mov int3 mov aas cmp or out mov xor (bad) in xor not jle inc mov lds and xchg or pop stc and xlat adc pusha mov ljmp pop (bad) clc push add pushf and mov mov test jo xchg xchg inc addb sbb inc add ret cmp cs in outsl test inc push mov xor (bad) test adc (bad) insb dec (bad) hlt cmpsb fs adc mov adc je test lret mov xor fist add inc or or in std pop cmp add mov fwait push dec icebp aam movsl mov loope add pop lret (bad) lea (bad) fimull repz dec pop mov jge push add sbb (bad) push pop fisttp and inc (bad) dec pop into cmp (bad) xor and (bad) jne sbb dec add or (bad) jmp mov dec mov push xor fs cmpsl inc fwait pusha insb mov enter in sti add or mov mov ss pop vmovups adc add inc test rcll sbb xor pushf call inc jb or or pushf insb push gs add scas pop cmpsb sbb xor sbb sub js xchg movsl mov jmp test test aaa imul js sarl sbb add scas sub add gs adc pop (bad) cld cwtl mov cli subb push jne or xchg mov test xchg pushf dec xor rorb or lods stos add or add rep pop adc fisubr and dec add jb add nop and push xor aaa jns inc nop ret insb add fimul xchg push xlat loope inc sub jl lods xor or aas inc aad test leave dec mov or loopne mov push popa jo data16 push sbbl sbb or sbb sbb in adc inc je pusha and push fwait mov dec inc mov imul push cs xchg loope mov setne sub arpl lret mov adc or dec inc add and sub js cmpsb mov add jo dec loopne test push iret (bad) pop push push mov es das cmp in sti je xor lods mov and add movsl and mov pusha jl aad adc adc mov add pop loop out leave dec mov addr16 scas jnp incb lea (bad) loopne test or add test dec iret and mov sbb mov cmpsl cmp movb dec je pop xlat push mov jge xchg xchg dec (bad) jno outsl mov jne,pn fldt js add scas je iret loop inc dec xchg dec (bad) aas or stos mov jnp addl in xor pop sub or dec stc flds jp dec out add (bad) jecxz daa bound (bad) pop (bad) and jmp add subl mov dec hlt sub sbb in sarl inc mov mov imul mov inc add inc into pop pop lea mov mov add xor (bad) sbb (bad) dec loopne mov (bad) jmp add shlb mov lock mov call fldt ror sub loopne and ja,pt mov add and nop fnstcw cld jmp stos dec jp mov mov dec mov jo enter adc (bad) in jle dec jmp xchg mov mov incl clc sub aad jns pop cmp or and sub push daa or adc jo push xchg sub xchg (bad) push push push (bad) mov stos add push mov or cmovl jmp aam decb and adc or lods mov jo stc push into or adc test adc push pop fsubs int3 sbb jo dec dec pusha or rolb sub add sbb mov sbb repnz xor push test int3 jmp and mov xlat fildl push subl xor mov sbb mov push iret test data16 popf adc mov inc roll cmp jnp ja add pop sub pop dec or cwtl push inc lret and insl pop and and add mov or add pop or outsl out das add mov mov add jne mov cmp fdivrs sub (bad) imul mov cwtl dec pop cmp cwtl mov pop add push out stos bound mov push xor loopne in ret aam sub fidivrl lret and incb ret push lock hlt dec mov sahf pop add push sub nop push sub add add jp cwtl mov mov jae (bad) call fcompl dec dec or adc cmc push inc mov xchg mov cmp dec push mov xor and addr16 sub push push cmp inc shlb add sub fucomip lods xor clc add or xchg in sub push push rcrb outsl xchg or faddl les fsts fadds sub push lods popa aas mov push sbbl add fistpl push and mov sbbb loope test push lea insl jno inc add xchg add sti subb cltd xlat enter jb enter push sar int3 push push sub xor push mov loope movsb add pop jg dec movsb (bad) push addr16 pop andl and and pop out inc sbb rorb call sub push or pushf (bad) repnz ficoml loop jnp or nop mov inc pop sbb push xchg add jecxz shlb cmp mov push push mov sahf cwtl ss loopne sub lahf cli pop add fs loope cmp lock sub sbb test fiaddl xchg lods bnd aaa fwait loope lret cltd sbb jo (bad) dec movsl or test add pop addb arpl xor repnz add pusha lock pop (bad) clc add aas jns call js leave in sahf test add add add ficom mov adc jl push les mov hlt popf nop fcomps cwtl cwtl orb jnp adc xchg mov mov dec idivb in dec mov cmp mov lcall mov mov ffree mov or and push sub test cmp cmp or mov mov adc sub fs fadds jbe ret adc prefetcht0 sub mov xchg cwtl sbb sub mov push mov mov add fcmovbe add adc rorb push push mov (bad) mov jo mov insl add push cmp push add mov rolb jge jns and dec ficoml cmp movsb or (bad) leave add pop push xchg jo add loope add lea (bad) jp subl test dec push repnz sbb lcall mov gs xor jno (bad) icebp add out push call xchg int3 ds mov xchg or inc js fidiv sub jne dec push or lret in sbb xor sarb and add xchg cmp je testb call adc and pushf sbb aam in mov loope loopne popa ret dec out dec popa addr16 cld jp aas sub sub and push subb mov hlt fmull call mov aad das dec pop add and pop out cmp dec out xor inc aad dec outsl icebp jb fwait loope adc sbb add lea inc pusha cmpsl enter popa add stc xor and fwait sbb push cld sarl fisttpl bound jb sbb push adc testl clc push push lahf jge jle je and mov xchg inc mov shll pusha pop adc (bad) push ds add imul pusha adc pop xchg lods repz adc cmpsb cmp into sbb outsb add (bad) mov imul mov jmp (bad) xor stc cmpsb add xor xchg test xchg sahf lret fsubrs xchg dec js and in sub dec dec and shll loop dec add cs push inc sbb adc push insb dec test and fiadd mov (bad) call repnz and rorb lods add dec sarb jo mov pop or inc xor out enter leave adc and movsl shrl jle,pn test jo push jmp add repz faddl jle mov aas mov shrl jmp add mov push fcmovb (bad) repz add fs out mov pushf dec (bad) push iret mov rolb stos das mov jns mov cwtl fs push xchg inc inc test mov js push and push imul fcomps lea shrl mov popf les jmp add lods loopne repnz mov je stc movsb push xchg jle and dec out xchg adc js sahf add sub dec sbb mov loopne ljmp lds or cmp adc cmc loope cmp repnz inc xor pusha and add xchg inc loope dec lock imul daa divl movsb add je test js adc dec adc mov fwait mov movsb es mov in or add mulb pop cmpsl sub hlt cltd orl sti cmp mov pusha cmpsl nop clc fs xor adc sub in in out cwtl xchg sbb dec in cwtl add (bad) ltr out and adc sahf cmp jmp jge add shrl add lods outsb lret inc inc rclb inc jo lahf mov icebp or sbb sub imul add jns movsl pop loop loopne loope sbb sti das pop sbb adc pushf imul dec call jns sub sar jo mov repz out movsl nop mov add push sub xor (bad) stc cwtl mov jge std xchg xchg iret cmpsb call mov or mov xorl add xchg mov mov inc shr out jo jns in or loopne out outsb push cld inc aam inc mov fs push lds and std shlb and fstpl inc and movsb movsb pushf and pop pop inc es adc and aam (bad) mov sti call lock dec cwtl add rcr xor leave pusha xchg loopne cmc adc inc push push adc test and nop dec dec lock inc xchg mov test lret xchg (bad) sarl das fistp push sub lea int3 fimul das cld je cmp mov bound sahf push cmp jo jmp aas pop lret pop mov xorl enter je sarb push fildll cmp jb adc mov or (bad) fsubr mov jle in mov or lods inc popf (bad) pusha cmpsb dec ja dec insb push test pop or (bad) pop add and add mov js hlt push lods jo pop mov mov mov dec add pushf inc pusha lret mov mov test sub pop (bad) jo adc imul ljmp sbb inc inc hlt xor sub (bad) adc add sub call pop adc stos inc inc pop mov cmp stc adc ret dec jbe sub push arpl add and adc cld addr16 mov and lods in cltd int3 lods test int3 andl xor insl jae pushf les or rcl clc repz jae inc leave fwait sub (bad) jbe pop jl lcall (bad) insb mov inc pop inc adc add nop push bound add lock push popf cld ficom and jecxz mov cmp jns jb pop jmp cmp stc mov ret dec push in das mov jge sub xor bound js pop lret test shrb push adc adc (bad) mov in es iret dec push call jb daa lea hlt cmpsl or repz cmp mov rolb pop cwtl mov adc in or adc push roll and out xchg (bad) dec mov dec jo sbb fs int3 (bad) xor push adc and jg add movsb push inc bound movb mov rorb mov dec or inc jecxz iret sahf mov push adc movsb dec jbe ror dec adc call nop mov cmc adc and sub lea scas add psrlw xchg jne stc cmc aaa clc int3 addl fnop xchg pop test insl add add test lods dec jge fs nop es mov or jae inc out nop test in movsb cmc addl add nop movsb ds sbb dec push sub push loope mov mov mov jmp dec and pushf jl and mov lcall adc rcr mov mov or movsb jbe push jmp pusha mov add mov and imul fst inc xor pop pop dec dec push push or xor in push js dec in daa cmp and cltd or in mov in fdivrs dec out and pusha pop fs push mov es xchg and outsb (bad) in lods and adcl je adc and int jno sub test (bad) fs les add jns cld xor imul call mov les or and loopne push lds loope sbbb addr16 popa in es mov mov ret mov js cmpsb push ljmp push sbb mov pushf add adc cmp sub cmp lret (bad) bound add mov popf rcrl mov sbb testb jns leave add xor and xor dec sbb fmull roll loopne cmp xchg movsl adc jp add and adc xchg mov mov clc int out js inc into psubsw mov sub je push andl dec fstpl inc sub cwtl adc js sbb shlb lock push cmc inc in out movsb imul and sub push push adc js add iret xchg add adc lcall es jb scas add inc cmp add cwtl rcll pusha and pop pop add push pop add push lea lds dec xorb sbb imul pop sub or aad test clc jbe cwtl lret addr16 pushf aas sbb mov add and ret cli pop sub or fwait push clc lret xlat add aam mov and (bad) jmp mov add lds data16 push push iret hlt mov and add add pop pop sbb rcrb push adc inc cmp inc lret dec cmc ret mov inc dec mov or fwait in pop xchg adc xchg and and adc popa inc and dec or repz icebp dec hlt add in js mov add stos or or clc sub repnz and add pop (bad) fist inc xor (bad) mov add xlat xchg int cmp add mov adc iret jmp add addr16 andl jae push test ljmp jmp in test sub jp and add (bad) test stos mov fwait xchg push jl clc test jns ret add push pop loopne stos push add push pop scas (bad) pop mov mov mov dec cmp or push leave out sahf add mov test jno out and sub inc icebp adc sarl fucomi rolb mov xor aas push or es mov push mov jp sub out sbb xchg sbb sbb or mov lahf mov sarb add mov and push lea pop xchg sbb dec add mov mov pop add fistp movsb test ficoml sahf adc add push ror popa add andl and fcompp cwtl jmp out in dec mov pop add mov out dec mov cwtl push push fisttpll cmpsl sub test add mov mov rolb cmc jne int fldl add push call or mov jmp lods push arpl fsubl xor mov pop repnz mov and add dec lea sbb dec (bad) mov mov into jle subl push sbb orl cmp lods mov push in mov fdivrs adcl aas mov xlat rcrl add add inc and loop nop xchg add mov and and inc mov in push addr16 cmp mov add loopne mull mov test in enter jmp (bad) movsb fwait stos and (bad) popa add pusha rcll adc hlt jne add mov xor pop sbb adc cwtl add xchg push dec push insb dec mov pop or or and adc movsl dec subb pop jne rolb nop loopne ret add mov lahf (bad) psllw inc adc repnz xchg inc in sbb or mov mov jns cltd mov inc addl inc in or dec out sub inc or hlt jl or out movsb js and xor call add out or icebp (bad) sbb push adc pop fistl jmp std ss dec cmp adc jg scas mov lahf adc xchg adc add push and (bad) je jnp push mov push push add sbb in and adc push adc out ss adc pusha adc cmp jo sbb lahf and int orb pop inc and mov adc fild sub push add movsb xor ret pusha cmp iret push cltd les add xor mov xor or jno and cmp add mov xchg mov or xchg dec shl enter loopne dec in aaa movsb cld ljmp cmpsb cs jno scas sub dec (bad) ja lahf clc cmovs dec lds iret jle ljmp lods nop push (bad) test jle pop add sti out test add (bad) lret push jno jge addl js add pop mov aas out stc add in push mov mov aaa sbb mov addr16 outsb pop add sti fidivl add dec pop sbb (bad) mov pusha add shll add enter mov in out loopnew fcos add sub add dec (bad) cmc jle inc cltd in add icebp and add ror dec jmp lret cmp push pop mov mov mov mov testb mov dec loop add test jmpw pop lods aas push mov aam shr push and cmp xor ds sub mov add mov loope push (bad) mov mov push mov inc lret cmp inc mov repz stc out imul sbbl sub pop clc fstpt js push sbb je punpcklbw into pop adc shlb shrl ds push push pop test adc cmp jg mov xor outsb xchg iret pop inc lea andb inc (bad) scas int add test lret pop les std iret push in inc xor push jge ja cwtl push and ret and jbe add repz aad xor in dec inc test mov push incb jbe mov lods (bad) pop cltd fisub jle push dec mov daa fcomip (bad) add orl sbb iret xchg inc shrb aam js push jno fistpl loopne jae mov bound cmp pusha xchg ss mov cmp push mov bswap xor loopne push cmp ljmp mov (bad) mov pop mov popa push fisttpl aam push sbb fmuls adc mov or (bad) lock add cwtl mov cmp jg das xchg lcall fistpll sbb and fucom stos sub sbb adc ficomp jno and mov xor loop adc xchg gs sbb dec and adc pusha call dec pusha jl cld jnp xor fldcw (bad) xchg fsubl les sbb (bad) pop mov mov cltd and add popf adc cld xchg sbb mov or clc lret call jno pop and movl cli jbe dec pop sarl andb dec rcrl add ficoml mov lea les or in xor (bad) cmp call xchg push fbld rclb jno sbb pop stc rorl pop mov repz mov sbb (bad) jl cltd pop or xchg push add or (bad) jp cmp adc mov or or into cmp add test xchg pop lcall mov add mov and xchg lds les subl decl and int movsb call mov and lock cs or add mov pop test rcrl mov adc aaa mov dec sbb das (bad) fidivrl add jge xor shl rclb loopne or xchg push add ret xchg jecxz loop rolb dec scas jbe stc mov movsb cwtl imul cmp jbe xchg sub pushf push sahf dec lods xor push jns push mov xor or rorl enter jl,pt ss fmul xor add xchg adc int fiaddl add pushf dec add adcb popf nop xchg add sbb (bad) dec jbe mov mov clc push lods pop add push adc mov add pop lods bound lds adc add mov fldl lea adc and dec sbb add lret shll (bad) hlt insb out lea movl in mov jbe push addr16 pop loope js js push jae sbb adcl pop mov fbstp cwtl jno jbe jnp adc add xor and xchg pop shll fadd xchg loopne adc sti lret mov sub and nop inc xchg out enter xchg inc enter mov mov imul into mov adc inc pop repnz dec or in and adc mov pushf add mov adc repz mov popa xchg divb mov ret and test push les inc mov loop xchg inc int sbb incl scas roll pusha xorl add inc mov sub test jmp dec pop repnz (bad) xor and dec adc adc dec (bad) xor jmp shlb push test sbb orb sub xor and jmp mov push lock push mov ficoml or in cmp and (bad) and jno scas mov repnz jmp add mov jbe cmp mov mov sbb mov dec or add fldt push sbb pop fcomps je pop jnp and mov add cmp and (bad) repnz cltd int movsb add outsl cmp out mov push leave sbb jmp ja aas or or or sbb ret mov add jmp ds jl clc add sub movsb adc mov in (bad) pusha les movsl mov dec push pop jbe mov xchg data16 shl cmpsb popa stos xor nop cmp adc rorb push jne xor lret clc (bad) lock cltd mov test jecxz out mov pop sbb and or lret xor cmpb dec shlb xor movl inc cli jns dec sti and mov cmp sub jb mov jnp push imul sub add stc dec (bad) mov push adc gs jmp cld xor add rcl push stos inc mov fnstcw add dec cmp dec pop jbe mov lds out ds lods adc push dec shl or nop jl inc insb aam test sub (bad) adc aas repnz push and pop mov add jo sar insl stc jmp mov cwtl lock fs mov lds and std out rorb or xchg jae (bad) faddl and add mov dec (bad) or mov pop xor loop cmp (bad) xor call inc pop or mov sub jge or aam sbb in jns lcall test sti adc jmp clc and push fs movsb jl test cmpsl in aam cmp andb or jns sbb in or dec or lcall sbb sahf rcll fwait adc daa pop jg pop adc sub mov fadds dec mov hlt sbb push int jmp mov cmp and dec pushf xor mov push push sahf lock fwait lahf dec pushf adc add stos out add dec icebp inc jo inc mov scas mov adc data16 add cmp mov mov inc in ds jl pop adc inc fsubr push add movsl add add mov cmp mov sbb cli out mov pusha sub (bad) xchg insl div xor loop cmp popa mov or (bad) xor nop xor clc push incl add pop cmpsb inc dec test enter mov dec roll xlat mov les imul sub mov adc mov je test push sbb fnstenv xchg outsl add inc push pop in push lret add mov push xor xor push cmp mov jne test adc mov sub xor aam lock xor out loop enter inc in sbb pop pusha pusha xchg and mov dec in pop xchg int3 inc fwait leave add mov mov and sub pinsrw fcoms bound in and mov push out sub mov outsb dec mov pop and cmp jo clc dec enter shr sbb movb sub insl fisubl fmuls sbb lods mov hlt in rcrb cmp mov push and inc out aaa cmp sahf push or ret in pop jns or or cmpsl sub xor clc cwtl dec add mov fadds lret sub xchg push push lods push test rolb push xchg hlt xchg pushf je lods push fwait nop push and and inc adc nop inc mov insb in pop push and cwtl inc cmp mov pop in andl test jnp cmp aam fwait clc clc add call outsl jl lea call into insb popa ror pusha pop mov push cltd nop mov es lcall test pop dec into int aam loopne loope je mov dec in sbb lret cmp js mov test add test xchg or test dec cmp sub in enter lods inc nop xor xor (bad) sub mov or add in lock lock jmp mov jp aam loope dec icebp add jae mov btc jo fldl (bad) lret xchg roll push jl add and pop dec mov fiaddl inc mov adcb dec mov cmp ja rcl call aam mov adc test add push inc cmpb jle shrl sti cmp mov mov (bad) fldl leave mov in push mov sbb fnstenv call inc lret and sbb fs fistl push adc and push orb push xchg arpl mov (bad) mov icebp cltd push xchg cmpsb clc popa js pop aam or and push enter lock lcall and lahf orb hlt xchg stc push xor sbb push adc push pop add pop rcrb cld xchg aam out sub cmc jmp add sub fwait hlt addb push rcrb loopne cmp fnop push or pusha mov (bad) stc add aad jmp test adc xor sub mov data16 (bad) or fnstcw out xchg pop or push adc inc dec sbb mov xor jecxz inc add vmwrite popf and push mov daa dec movsb add pusha xchg movb pop adc sbb adc and inc xchg rorb and (bad) arpl shrl stos inc xchg shl fnstenv es pop les roll jl add pusha cwtl movsb gs sub test mov rcrl adc test and out fsubl sub sub mov jmp inc loopne fisttpll mov adc mov push jnp mov sub or loope jg cmp movsl pushf cmp test mov cwtl shlb pusha or aaa mov mov in sbb out xor sub sahf add (bad) jb xchg in movsl sub clc push or call les fistpl repnz dec adc xchg stos aas pusha pusha inc pop adc cmp jmp sub push mov pushf inc lods bound shrl sbb pop or sub nop and adc fstl pusha js xor cli sbb push fsubrs andl lods ja enter sbb sbb and xchg mov add sbb rorl inc sbb adc mov es mov inc bndstx sub in add addr16 fidivr xchg clc stos xchg adc mov pop add in jns push push add push mov cs imul stc mov pop aas loopne insb xchg mov nop mov rorl jnp push fdiv les add movb mov pop cld imul loop je add movsb lods jecxz jmp inc push add inc ffree cs mov pushf mov add xchg popf test xchg dec dec leave les or pop push push push lods add fld pminub add pop ret cld stc aad push test cld xchg xchg xor fwait adc cmpb in xor ror imul push xor clc jg push test incl cs add in sbb add mov add mov fild rcl mov xchg pop dec aad adc add rcl lods cld out hlt cmpl dec xor (bad) dec and mov pushf imul dec mov xchg in insb ficoml ret and pop xor leave jl xchg or je aam ds sbb mov cltd loopne or lea enter nop ja dec lods fildl cmpsl mov inc je inc or cltd adc mov test aam cmp jns mov or mov pushf mov pop sbb push mov repz sub jl mov mov jl pop adc mov inc sub test movsb jmp sarb lahf out cmp test push fisubl mov xor adc xor call mov add arpl adc notb and pushf add lcall cmpsl insl frstor (bad) cmpl mov fcoml into popf test push movsl je,pn add xchg jge insl xor jbe xchg sub jnp xor pop rol pop push subl xchg les into mov insb outsb adc cmp jo lahf sahf pop pop cli out mov add xor loope imul or (bad) rcrb jge sub js test dec and mov pusha lods test pop (bad) loopne pop inc call and xchg add into adc out or sbb test inc sarl div in mov movsb in jne les sub fdivl in jbe scas adc and jl xchg loopne test mov mov add mov adc insb outsl cmp add movsl jmp add inc mov cmpsb dec lods jle cwtl shll cmp jnp js or xchg or or pop std xor rclb cld xor or and outsb xor jl mov inc aam and xchg clc mov pop enter adcb fadds mulb inc (bad) xor or push fmul fistl repnz mov lahf in out cli and cwtl in or add int3 push push lods and orb mov adc call xchg adc cmpsb inc mov mov jge xlat inc movsb rcll loop add pop sub mov add loopne rorl and lret outsb xorb mov call cs sbb mov int aaa or add and cld cwtl pop add pop inc sub inc test mov lret les cwtl out push push adc das cmc push scas inc enter cwtl push das mov inc xchg xor leave fistpl sbb and and adc prefetch inc inc jbe sbb and pop pushf hlt shlb pop mov dec and in add jp adcl cld jl or sub pusha out bound stos mov adcb sbb je arpl adc add das mov or ss idiv mov fcomps enter jo insl arpl roll xchg xadd enter das (bad) xlat adc adc stc stos jno add jmp roll sti idiv push scas push stos lret out mov xchg lea cmp js stos add sti icebp (bad) cli xchg add (bad) dec pusha pop lods push fucomp js arpl push movsl xchg fadd add push and fisubl iret sar in (bad) add mov nop (bad) push add push or int3 mov mov jo idivb (bad) and dec les pop loopne push pop cmp add pop and out fcomps loope push pusha mov sub dec (bad) pop push push pusha mov subps xor adc mov cmp add enter sbb test mov add or add pop xchg inc ret push push ja mov xchg loopne push dec jbe ret je cmp mov push flds fs (bad) xchg stc xchg adc cmp xor adc jne push push hlt (bad) rclb and pop mov mov cwtl mov and pop adc sub popa inc mov mov sbb sbb subb les xchg mov mov popa jbe (bad) or and outsb iret adc pop xchg ret pavgb mov push ret loopne add push jbe add pop lock js or add sti xchg add lea cmp js xor fidiv pop mov jns je cmp fadds pop rol pushf inc or rorb xchg loopne cmp mov inc cmp aaa dec lock or (bad) out movsb add pusha add and mov lret and inc adc movsb push adc xchg or sub adcl (bad) and add xchg adc jb pushf es pop or and movsb push mov push or push sarb pop adc jno rorl and and sbb xor frstor xchg jl sbb push lds add and cltd loopne mov aad jo int push loop mov popa out or mov mov sbb push mov enter jo mov pop cmp popf xor cmp notb pand add mov sub add cmpsb jle es and ficom xchg or xorb push fldl add call dec daa stos clc adcl xchg jmp fs mov dec lret push in and xor add adc mov fadds and enter jo es (bad) adc and inc jb lds jmp push rol pop push xchg add inc mov jl adc test push and sbb (bad) flds mov mov cmp jae fcmovnu outsb arpl add or jne outsl push in or dec sbb add ret xchg mov insb outsb cld dec and (bad) fcmovnbe movsl btl add and or jbe popl mov xchg dec and add jl mov xor mov cld inc cmp incl jb mov arpl cmp stc repz sub or gs jo or scas movsl int3 popa mov andl inc cmc push mov add insb xor xor sub and adc xor (bad) lock movsl iret cmp push ljmp mov iret test sbb inc cmp push movsl leave mov inc negl cmp pop rorl jl ljmp inc dec and movsb cmp pop and dec (bad) xor lret inc test mov sar add imul add out addr16 sbb loopne adc jae in insb sub xor push inc arpl outsb clc imul push jo inc xchg sub sbb mov es push adc cmp pusha add movsb xchg mov mov mov lea in or rclb enter insb int3 xchg or adc inc loopne cmp int3 add call cmp inc mov cmp push sub jecxz repz and add and xchg adc sbb pusha pusha jo cmp add cli addl add scas xchg cwtl jno mov cmp and dec inc add xchg xor mov jecxz fwait push popf test cwtl imul cltd adc adc xchg out cmpsl (bad) scas mov shrl and and enter aam fs repnz and addr16 xchg pop add dec add stos in lock pop and pop icebp call xorb out lock cmovg andb inc cmp and int3 inc mov or subb pop push sub add cmp xchg out or add push ficompl add subb jmp into (bad) mov xchg and mov mov inc dec xor enter mov loope xchg sub inc pop add xor mov and insl pop dec sbb and bound push pop stos push lahf and and mov sub sbb add les adc add or xchg pop shlb daa bound mov test pusha dec inc js mov dec lret and call and (bad) and arpl xlat inc out add sub les add push scas adc int3 nop sbb fisubr imul insl (bad) mov outsb cltd dec les dec cmp or loope mov test inc outsl sub js pop cmp add and push subl mov push adc cmpsl in hlt outsl jmp adc add test cmc cmpsl ret inc xchg cmp ljmp pop xchg sbb nop mov inc hlt add jge call jmp in lock pop imul pushf mov xchg mov repnz fwait add repz je mov and jne sbb or rorb jae mov and nop sub xor dec mull clc inc pop inc add leave jbe cmc add lret inc int cmp daa rcrb add pop cmp pushf aad adc inc or int lods incb pop add xchg mov lods and push test add and icebp pusha add jl fisub cs xchg js dec loopne dec lret stc push push pop fmull inc cs push or (bad) or xchg add xor mov (bad) (bad) divl adc sbb lahf insb adc test and mov xor mov xchg pusha and sbb or test push adc jg int3 adc or inc add add fmull xchg push push in mov and hlt push xchg add mov add xchg stos lea mov xor adc add dec dec mov sbb cwtl insl dec (bad) enter outsb pop daa add cmc ficom xorb (bad) sbb adc adc nop lret and mov daa cmpsl inc aad ret or add lds ret movsb mov (bad) icebp and and inc aad cwtl xor pop addb lret or insl xchg out sub push dec dec lea inc dec inc js mov xchg mov xor adc stc inc int3 jmp dec cmp inc mov sahf cs sub nop cmc mov dec jo pop pop or push or std inc insl mov inc pusha int3 add int xor gs pop and loope push lock cmp popf ret les or into or sbb jo inc cld xchg hlt cmpl inc pop sbb jae stc mov xor add pop inc push mov xor arpl jmp movsb jle insb xor loopne pop adc test inc pop mov or dec push xchg add or pop cli pusha or movsb push cmc inc stos jl iret into cmpsl daa pop add push dec add dec in adc movsb xchg je add (bad) cld ja mov cmp and dec lods xchg addr16 (bad) dec or fsubr fstpt imul sub or out xchg xor push dec in loope inc rclb and pop pop push mov mov and out or push pop adc addr16 add int3 repnz mov sbb cwtl and lock xor mov pop sub mov mov or jmp shrd xor add ja mov adcb sub push and pop adc mov in fadds nop mov dec mov (bad) ret add loopne xor pop pop hlt pop call xchg int3 insb cmpsl adc mov sbb inc addl mulb add fcompl add cmpsb or pop adcb inc stc ljmp (bad) ret pop add out cmpsl push orb es ds push mov shlb and (bad) shl rcrl stos insb push sub lds add cli xchg add aam adc cmp xor add mov daa mov push dec xor xchg inc add fldlg2 push add xor pop arpl jne add mov sub xchg data16 mov push fucom mov pusha hlt cmpsl dec mov (bad) push push add cmp cltd subb sub (bad) (bad) negb rorb push sub sbb jbe inc movl xor pop arpl inc hlt cmpsl test adc (bad) insb repz push lock sub mov add pop stos je iret jae pop (bad) mov mov inc aad test add xchg movsl rol lods inc pop xchg sub xchg test movl xchg fs or jmp andb icebp popf push xchg in lar adc push popf cmc ja and and xchg lds add fnop dec pop lods pusha dec or mov enter ja push adc mov mov popa test test cmp movsb add (bad) push hlt cli movsl xchg xorb xchg aam fcmovnb mov lock or add outsl pop repz jl movb andl lret push fldenv imul pop jmp and or xchg jns add dec cld add mov mov movsl add lds insb xor xor and adc enter dec cmpb fs mov push xor mov pop dec in mov add inc push inc scas or inc dec cmp push sub xchg mov mov xor cltd pop sub mov push test std sub lea inc rcr (bad) mov adc test jp nop gs out mov jbe add jecxz fs popl sbb arpl rorb cmpb cld add enter xchg xor xchg cmp push (bad) dec (bad) inc inc lret aad add in dec cs mov pushf dec pop and add repnz jns mov push neg cmp cmp rolb into or add mov in int3 jns inc add mov adc sbb pop (bad) dec cmpsl ret xor sbb sbb cmc aam popf and call adc jns mov pop cmpsl and pusha addr16 lret cwtl pop cltd adc (bad) lcall nop add rolb sbb and (bad) imul push add or rcll fsub mov mov xor sbb cmp xor repnz add fadds aam inc std mov or adc loope aad xor (bad) adc xor pop adc xchg dec addl sbb sbb push push aad add dec jmp add pop dec test mov sub push add cwtl mov cmp add add arpl loopne cmp out hlt inc addl cli fs mov cmc sub (bad) fisttpll cmp lods scas movsb sbb lret loopne stc xor mov inc stos or jge push push sbb add mov and movsb lods or add push pop mov inc jecxz lret add mov add je dec dec arpl inc (bad) mov push pusha pop mov sbb inc scas arpl xchg andb adc inc pop add dec ljmp mov inc jo inc sbb mov adcb movsl mov pop push es dec sub out pop push xor push addr16 leave arpl sub push insl or add sbb mov or dec jecxz xor mov cld arpl inc mov (bad) mov jecxz sub loopne push cld mov inc mov dec or js mov in test clc inc bound add dec adc enter push int3 xchg add rclb lret pop jl testb fs adc inc pop push data16 jmp or push (bad) out xor dec inc pop and pop cwtl add mov push mov or pop dec sub les xchg rcrb mov dec xchg cmc int fsub add push mov incb (bad) inc (bad) dec mov sbb push cmc mov mov sbb mov add daa loop in cmpb adc xchg (bad) fnstenv inc icebp sbb jmp test dec sbb les js push scas cwtl dec aas or mov int3 repz popf add pop leave sub or fisubrl mov sub and jge pusha in mov outsb and mov mulb loopne mov lea mov (bad) lahf subb add fstl cmp insb bound sub in mov mov lret push sub sub outsl cmp add inc (bad) mov dec lock mov pop sub loop cmp pop pushf dec add add and adc dec cmp add push or add fadds add adc dec ds cmp push inc xor icebp and adc pop addr16 or (bad) imul push repnz and mov lret pop pop add jmp inc or pop push sub jnp or test clc addr16 pop pop outsb (bad) jge mov add mov cmp jmp and pop sub push mov sbb pop or jle idivb adc ret sti sti ds sbb inc sbb push mov mov std add pop loopne fucomip (bad) dec shr add in pop xchg sbb add push mov add (bad) pop push lock push mov add je ret pop or xor call and jmp adc cli xadd add push xchg jne jnp cmp or cmp js push jo xor repnz or adc jle xchg cmp jmp xor adc (bad) ficoml pop pop sub lock sub add sbb pop push hlt inc add fstps inc lock push push dec mov sub pushf sahf add cmc pop push mov inc sub int subb fdivrs pop add insb mov sub sbb cmpsb add std nop repz addr16 or cmp add sub xor xchg xlat shr shl repz fisub unpckhps dec ss repnz push sbb dec jo cs mov and inc ljmp and inc add (bad) pop mov roll out dec outsl jae icebp (bad) loope inc or inc jmp lahf sti push dec pop (bad) fsubrs pop sub adc (bad) lds addr16 rcll test add daa push fistp or fstpl and mov or push andb mov add pop xor pop push push jle push std ret xor (bad) adc movsl addps add pop add ds popl push cmp jmp scas aas addr16 clc mov pop mov pop push es sbb sub sbb xor push adc and and sbb rorl sti jo test shr dec lods test out add leave adc minps fimull push mov bound pop repnz push inc cmp adc addr16 or bound lock mov or cld xchg xchg iret or xchg pop (bad) notl jmp movsb mov sub aaa or jns push outsl ljmp add xor push bound mov test jmp push push out lahf push adc adc xor dec push xchg lock add fcoml jle jmp test stos aad mov adc sub push sbb in sbb loope pop ficoml (bad) es and inc shl add xchg mov adc xor cmp mov in or sub sbb push push andl sub cmp pop jns insl sbb sbb add inc aas sti push push inc out lea push xor inc mov icebp add sbb mov jmp (bad) jns mov movsb mov dec call mov les cli testl cli pop mov jo mov inc (bad) dec cmp inc cld push fdivrs adc and dec loope mov outsl shl adc mov je lret push or lret add mov (bad) or or or into xchg gs popa dec popf add lcall sbbl ja call add sub mov and jno xchg ficompl cmp test pop sub int xchg hlt push xor add mov pop pop dec add xchg insl inc sbbl mov ss or (bad) jno lret cwtl add adc ja inc aam hlt xlat and add jmp inc sahf xor or pusha ljmp test push mov xchg inc aam or cmp sbb es push push xchg sbb and clc push cld mov (bad) shrl out dec pop xor sub and mov xchg sbb push add push dec repz xchg call jge dec psrld jmp jmp cmc push out ret push pop sub push pop add or sub add pop push push jns adc add (bad) pop push or add inc rorl cmp sbb shr jge and aas sub ss fwait gs enter lea ret fwait mov adc andl pop push add rorb push or jmp mov jbe push or push or jle cwtl mov jp push fwait sub punpckhwd sbbl fldcw inc pop mov mov (bad) sub pop mov inc sub cmp inc xchg add xor xor mov dec popf adc dec shl add sbb pop nop adc pop pop movsb push jmp push sbb syscall lahf jg pop test or sti sbb push into test inc out jmp enter (bad) pusha sbb jle mov push leave lods popa inc adc ljmp or and je and cmp mov sbb jp inc dec push pop adc js jne mov or push repz int3 mov popf icebp cli aad int3 and stos add sahf ja pop push mov jnp sbb jmp sbb push outsb mov pop in je push mov jmp pop mov sub xor shrl sbb add inc insb push nop js pop adc push pop outsb xlat xor sub divl xor jnp mov jno add in xchg cmp ss sub (bad) jno sub es add pop inc ljmp fldl xchg sub dec (bad) pop inc add pop sub pusha inc sbb xchg mov loope xchg xor push repnz pop cmp iret out cmp push jg sub push pop stos arpl dec inc jnp xchg enter arpl (bad) fmull xchg push xor pop out test mov cmpsl push popa sbb and cli mov dec push ds sbbl dec add das push sub pop or iret xor (bad) or sbb mov jae push rcrb xor cltd arpl xor insl pusha add pop lret into push and sbb inc or in ljmp decb repnz or jmp sub add dec loopne or bound sbb fild sbb cld aad pop mov test (bad) dec pop add repz push fnstsw or pop and adc fisubl mov fs fisubrl cmp out add and (bad) xor subb mov or fidiv and cmpsl lahf add jge popa ds xor add mov pop cs pushf add sub and mov and mov sbbl inc mov pop pop xchg notl negb enter sbb push (bad) roll lea jge,pt sub xchg xor mov cmp mov imul in jp add sub dec outsb mov adc sbb out add inc add lock add push fidivrl add inc pop add xchg mov and mov lods xor add lret lds or clc mov or (bad) mov mov push pusha js jl sbb orl sbb cwtl rcrl and add inc leave and repnz ret aam repnz adc cld dec adc inc jno jle sub bound outsb mov enter paddd popf inc aad dec dec add mov lock and nop sbb mov mov add dec dec and or in dec adc ltr idivb imul add pop jl aad test add add fild mov leave jb ficom jne mov inc sahf mov clc mov mov imul test nop inc (bad) xor sbb or push into fcomp stos lock cmp (bad) int3 inc stc jl aaa add into icebp xor outsb clc lea mov push inc jbe cmp add jno imul xchg inc mov pop nop or mov js push add adc ret mov rcrb sbb andb aaa push sahf and test cwtl xor mov mov mull add das ret pushf test add mov mov or dec cwtl mov dec (bad) fmuls adc das pushf jbe mov cltd lds xor clc addb shrl and cwtl mov sub outsl push inc stos dec or js repnz or add xchg and xor pop jl in mov xor les pusha int3 int dec sbb loopne or pop mov test shlb lods (bad) adc pop add add sbb xchg loop or enter nop (bad) pushf jle sub inc xor ret inc push cli aas xor pusha mov add cmp repz icebp cmp xor imul lods cmp shlb inc cli push add push fistpll loope mov mov xor cmpl xchg test xor add clc and or mov xor cvttps2pi mov leave (bad) jae sbb movsb jo in or add mov add mov out bound or test call or mov test sahf add jbe add or rcl dec add push jg stc xor push sbb test or popl testb test pusha mov int xor xor mov movb adc mov or sub data16 or movsb adc or jmp jne rcr and dec test or movsb repz sbb and inc adc popa add adc mov roll rolb xchg xchg mov cld push xchg xor in jmp cmp or dec jno push fiaddl mov std lds scas pusha sub push les ss push xor adc mov inc sbb xor mov imul dec pusha xchg push js push sub mov sub pop out and adc test in xchg pusha fmuls enter xor movsl clc mov call icebp adc jl xor dec jl rcll xor add ljmp cmc jae,pn lods popa fs adc pushw lret (bad) jge enter pop lcall sbb mov addb pop mov cwtl shrb cld inc add inc jge pop fsubs nop cmp lds icebp mov or cmp mov in and shlb lods dec imul imul sbb shlb mov (bad) push push jns or movsb test je and inc orl adc lock sub adc jo push jp lds das aam inc sub jl rcrb movsb and cmp adc pop psubsb add in pop pop sarl test sarb xchg xor or imul lret insb add out adc fiaddl inc les adc subb and or movsl enter inc pusha dec nop scas mov sbb xchg mov cmp mov adc sbb pop scas add and xchg dec inc inc sub add jnp inc in inc inc mov dec inc and data16 dec movsb jbe mov and test cmp and test mov and add out sbb fdivs xchg popa mov dec pop outsb scas pop fsts mov jo ss push dec xchg inc add pop int3 sub xlat xor loope add enter int3 or stc mov inc jb aas mov dec repz xchg mov jo mov cmp test pop add (bad) inc pusha inc pop insb nop or in ss jmp dec mov sub xchg popa subb sub xor pop pop cmp loope lcall dec xor pop xor js adc call inc jns aaa das aam mov sbb xor add push arpl cmp ror std outsb push test mov popa pushf and out cmp or or sub (bad) inc dec stc add sbb adc aaa mov dec sahf sbb and or dec xor cli xchg and imul sbb (bad) pop pop repnz adc repnz std test dec sar sbb cmpsb fldt push repnz add pusha nop jo jns and or jo insb movsb sbb dec dec sarb lock daa and inc xor cmp stc xchg les sub mov mov or mov pop testl mov pusha pop and fwait sub cmp leave jo repz or push and jge cmp and fisub xor add and mov jae movsl adcl lods push or inc jo inc xor dec mov xchg mov sub ljmp test jnp mov imul inc test sbb inc (bad) add pop push imul cmp or mov scas or mov dec pop (bad) enter or fcompl sub jle mov push adc xlat xchg mov or in or sub adc mov xchg nop cmp pop xor xchg in xchg dec mov dec xlat sub pop adc adc mov pop pusha add and sti and jnp les lock jae loope ss adc sbb push incb fsts mov sahf lock popa mov jno push mov add or dec fimull sbb or clc ret scas push dec mov or inc pop lods jl push sbb (bad) cmpsl dec cld mov out fdivl sbb xor add gs fidivl adc or push xchg iret jne sbbb cmp dec xchg scas xchg xor xor call add in call out add dec and push loop add push test push flds pusha cli xchg add mov push sub subl fwait jns inc stc aaa sbb xchg sub int3 mov push sub cwtl push jp xchg xchg mov ret or gs cmp or outsl adc pusha js fist inc rolb bound adc mov push lods push push dec jl dec push and ljmp push cmp pop push pusha addr16 test (bad) cwtl mov pop pop jl inc fs mov mov xor mov les leave cli pusha or dec fwait mov mov cmp jae and dec push arpl adc fs add mov cmpsl xchg fnstcw lret movl ret and jb std loopne (bad) inc aam xorl imul mov mov xchg inc mov popa test mov mov popa and dec lock mov add xor sar pop cmp mov pop jmp bound mov lods jge inc push cld nop sbb bound andl and inc dec call pusha bound lahf inc mov or fcom and push pop sub and xor add adc lods jl add dec push add fadds jo mov sar sbb adc pop pusha sbb sbbl add and or push jl fidivl jmp (bad) and aad (bad) jne dec add mov and jge xor (bad) jne dec aad inc push xchg add (bad) out aas outsl rorl mov or xor sbb cwtl or fmuls or sahf rclb dec pushf dec add mov push and xor inc add pop ljmp jg sbb (bad) xchg mov adc rolb jnp movsb fcompl clc add mulb fcoms or jge pusha clc shr sub pop pushf inc xor les clc (bad) or inc mov inc adc sbb fmuls addb insb cwtl adcb je xchg inc xor xor jnp and xchg imul neg pop fwait sub pushf das js push add sti jbe adc pop cmp out stos mov je lods cmp jl inc les jl adc out push add sarl mov orb mov cmp jae inc push test cwtl pop jl jno fsts rcrb or into push in cmpsl add aaa ret pop sbb popf (bad) fs adc rclb and loopne into and lea frstor subb test movsl or pop pop pushf je ret mov or inc movsb and add fmul xor pop mov add ljmp adc loopne sahf daa cmp les lds lods adc push add and cmp test pop test cmp push movsl ds push leave push or (bad) adc adc outsb and add and das push shrl repz divb andl cs shlb das (bad) popa jbe cmp stos daa mov adc adc mov loope aaa xchg jle add cs and pop push adc dec add pusha mov out fwait adc add cmp stos mov or jns out mov lock jne inc xchg add test bound xchg out push loopne sbb in (bad) imull cs pop sahf into shlb adc (bad) xchg stos cmc (bad) jnp cmp (bad) sbb pop add movl lea and std sbb dec pop cmp pop dec and popa f2xm1 or gs pop pop inc xchg movsb push fs je and imul popa loop mov or pusha jge (bad) dec stos mov fs or test test inc das ret xchg jno test adc cmpb xchg lcall jns add subb mov push loope add xchg out pop xor cmpsl out add mov insb push push pop insb jo add cs popf clc das icebp xor adc push xor gs jb xchg pop rolb cmpb mov mov and sub dec and sbb add xor enter xor push es cmp push add push cmp jmp int pusha xor push inc fs repz jge lods and add and add arpl xor or rorb mov mov cwtl adc adc pop fldenv (bad) mov xchg mov stos dec fs test insl dec cmp addr16 cmpsb fild mov xor add sub scas jne sbb xchg add sub pop pop adc ja mov and jae and loopne in roll cmp (bad) push inc lds xor bound cmp es mov inc (bad) mov push cmp cmp bound xchg cmp push dec mov mov fwait xchg popa sub sub es and orl popa xlat gs nop out loopne and test push push mov ficoml xchg sub popa and push mov or out fisub inc in (bad) mov xlat mov sub add mov arpl mov xor es push imul mov add push mov push outsb es xchg xor nop inc cld xor mov xor int3 repz pop jl dec sub adc pop fist pusha xor cmc push push fsubrs or pop pop pop push sbb dec das push and dec notl (bad) push mov jbe das mov xchg cmp lret xor dec inc xor daa mov into jle add sub addb mov mov cmp mov test shrb inc or lret jl xchg test pushf in fadds out cmp repz scas push repnz mov cmc adc jecxz and xor and dec lods mov add add in movsl test add or and xchg js adc out repz lahf mov and popa add mov fsubrs cmp inc fisttpl mov sub and (bad) fstpl dec or and sub inc sub mov in leave fcoms adc fstps xchg ss adc xchg push fdivl scas sarb jnp mov test (bad) (bad) xor rcrb in inc das cmp sbb pop inc and or dec (bad) repnz addb mov nop les and in pop out (bad) ret lahf sbb daa lds xchg dec (bad) icebp enter mov push sbb adc dec xor sub or pushf repnz pusha rcrb sub mov orl jno add addl inc mov popa icebp xchg sbb pushw adc pushf shrb aad pop dec hlt in mov mov ror inc cmp cld sub push test call adcb inc cmp int3 xchg inc popa jl sub das fwait adc or cmp or incl cld arpl fadds pop and inc add push mov aam mov dec xchg inc xor mulb lods mov aad js add xor loopne sub aas adc push pop lcall jns xor cmp subl rolb addb mov jb hlt add es dec dec icebp pop clc ljmp or pop les sbb cmp jecxz jae pusha cmpsb jo sti clc xchg push jns add lahf mov fiaddl bound lea or add stc or mov dec and and out inc les scas sub and pushf xlat jl add out jo (bad) xor xchg xor or push inc mov push popl and cmp cld jo shrl cmp faddl clc xchg push mov add cmp fldenv add push adc cwtl inc inc add out sub and adcl test dec inc aam pop cmpb pop sub or dec cwtl movsb outsl push js inc imul sbb popa insl xor call ss mov ret jle add das aam jl ret test iret add add jp xorl or mov cs insb sub xor mov mov jge jl sbb ss or add push push jecxz (bad) movsl nop add sub scas fisubrl in sbb xchg add or push or push fs mov (bad) popf dec fisttp je add pop and xchg jbe mov mov mov cmp mov fsubr push xchg mov xor rolb lds xlat mov add dec inc xor or adc vpsubsw and loope cmp popf roll es mov add rorb jmp cmp in xchg les sbb push bound cmp je sti (bad) popa test or xchg pop (bad) jb fcoms push data16 pop ret cmp and add cmp call js addb mov sti in sbb push addb xor adc aas xor sub mov orl and add ljmp imul in iret push mov les in inc cli and (bad) xor ljmp xchg and cmp push or js push adc jo dec rclb enter dec sbb cwtl outsb mov dec xor add fisub clc or ss cmpsl xor pop push popf dec xlat dec xchg les (bad) or (bad) mov aas les and sbbb jno add pushf mov (bad) cmp dec cwtl sbb inc push cwtl dec out mov push add push xor cwtl adc xor xchg and jno add push icebp cmp cmpl dec insb nop int3 cmpsl test sbb scas dec insb dec add dec xor clc mov loopne mov cmc mov adc mov sbb mov lea gs enter incb push xchg les pop call xchg hlt jne pop push cmpsl mov lea or fwait std dec dec xchg outsb pop fnsave dec les mov add jle leave inc push hlt add out and out lods test cmp orb adc xchg cs (bad) push cmp nop gs je les add sub ja inc sarl pop cmp pusha jbe pop sbb int mov jnp enter adc (bad) sub test dec bound mov (bad) ss pop inc add imulb loop sbb cmc imull les mov std imul mov outsb xor loop and mov add call add sarb xchg add dec fcompl xor (bad) mov pop add sbb shll inc stos pop jb or je in loop test popa stos and sub movsb pop cmp das sub adc orb mov add jmp sub and push out sbb pop mov inc fwait dec and daa xor lds cwtl dec aas or sarl mov lock ret pop sbb xor adc mov dec (bad) jo shrb xor jno movsb and or add bnd add adcb xor mov xor fwait push pop jbe out rolb dec cmpsl or push push insl dec orl loopne and or mov cld xchg test xor (bad) push xchg pop shrb jecxz xor add mov out add mov pop dec jb jbe mov imul mov jo and pusha movd xlat adc mov sbb sahf mov fs or push adc inc mov sbb fldt pop push popf in movups xchg push xor mov push sub adc jge aad pop aaa add dec out test insl mov insb mov cmp pop orl ss add cmp cmp adc inc adc add lahf cmp and or adc xor pop outsb popa sub std jl frstor adc sbb imul jno cld cmpsl insb sub stc mov inc and cmp add xchg loopne inc lods sub fsubr jge cmp roll and push js push sti inc push arpl cld addl inc iret mov outsb mov (bad) mov leave adc pusha jp loopne and push iret add and adc mov in repnz xor sbb xor lret xchg jle jb xor sti sbb jbe ljmp xchg in addr16 lods addl and bnd sub or mov sub and jae das xor cmp add in xchg test dec fdivs aaa pop mov icebp push adc sbb adc inc cmp xchg ret pop mov in test imul cld inc sbb ss es pop pop mov xchg sbb outsb pop fmuls enter pop test imul pop sti rclb dec movnti or fdivl loopne es sbb clc incb shr cwtl jge cs arpl shrb sbb xchg xchg add loope fldl pop jmp adc and repnz ret sub dec shll (bad) roll jns adcb push das insb xor adc ret movswl xchg mov cmpsl xor mov mov les inc outsb mov or jecxz mov ret mov mov sub or inc push (bad) addl mov aaa inc aas push dec mov xor cmc addr16 movsb xor push add icebp dec push pushf xor ret shr shrl mov aas insb test fsub mov addl inc das sbb pushf ds push mov jae popa cwtl jmp movsb int ret mov sbb jle lret pop inc inc nop pop add push add inc mov rorw cmp mov push pop insb or add mov daa jmp pusha dec cmp adc pop popa xchg pushf or or ret test jge mov mov push mov lahf add (bad) arpl add pusha xor sbb adc fiadd xor adc and mov pop adc pusha cmp stos or lock xor (bad) in push and pop dec inc dec xlat faddl subb cltd add mov dec dec dec jno nop fnsave sarb ds fwait adc popa dec je push movsb loop inc pop shlb bound sbb cli dec lods sbb enter and aaa or xchg pushf add (bad) mov xor inc (bad) sbb add jecxz movl jae rcrb fild dec jge jle sub dec inc sbb jno addl jb add ds xor dec jnp mov shrb out mov or xor or fsubl lds add icebp mov mov icebp lock sti sbb cmp mov cmp into push pop push mov movsb inc clc and jo jle pop adc fsubrl out sti pop add jecxz jae rorb cmp push add test fisubr je adc sti nop jo xchg lods clc (bad) (bad) lcall out push mov mov sub mov test in push add cmp repnz cmpsb sti xor mov ret fstl faddl inc fimul movsl test sbb pop mov cwtl pop cmp inc in data16 dec movsb sub xchg clc movsl push or and leave dec shrb dec push roll xor add lahf pop aam cwtl mov mov mov sti (bad) fild add out push fdivs sbb jnp in pop arpl push add add cmp or lock jnp push popa xor mov cld cli xchg sub lock sbb daa adc push dec fidivrl test mov pop and xchg psraw add fucomi (bad) nop (bad) mov adc sbb mov sbb cmpsl cmp pop cmp test sarb ljmp cmp je push (bad) add outsl cmpl icebp push popf pop mov test cwtl mov out dec inc jl inc lret mov icebp int3 cmpsb dec mov inc outsb mov sbb jo mov add test scas out stos shll add mov js sbb ja inc enter shrb cltd fwait cwtl (bad) and jmp rclb (bad) cmpl xchg push (bad) fisttpl dec arpl lret gs cwtl push mov int3 (bad) sbb inc and mov mov sbb push mov test xor pushf and cld xchg loopne adc sti aam fidivrl inc add subl dec hlt xchg sub push daa mov enter pop push or add pop or scas adc pop loopne push (bad) pusha clc (bad) sub or xchg add jmp xchg jmp cli arpl cld jns jb add cmp add shlb cld jnp inc aad mov sbb adc add jp add mov sub ds xor mov mov add divl mov xor out ret dec arpl loope xchg fcoms cld pop dec nop xor lret sarb mov fcomps cmpb inc repz js fs cld rcl mov push mov data16 adc and mov sbb arpl sbb adc je sbb jg test into mov push out sbb mov mov mov push mov aas add out jne movsl dec loopne cmp data16 push rcrb and or push pop mov dec push daa and mov test or shrl adc cmc test iret incl jp push push sbb iret mov test imul test fs xchg mov stos call push fcompl cli inc lods inc dec or mov ret mov sub xor sub adc das xor fwait and out scas ds cmp mov mov mov loopne sub test mov hlt pop ss push adc inc test rol bound jb mov add mov insb addr16 dec rclb js enter in insb (bad) lcall or (bad) popa xchg das and enter push dec xchg ret mov add mov pop test xor sub or das add sbb mov outsl add cmp add pop cmp xchg mov int mov pop rcrb stos sub rolb mov adc cmc je mov negb push ret xor andl jb aad mov (bad) jno fsubl jnp cmovl cwtl dec add aas jae xchg add loopne (bad) insl jbe add xor repnz dec add out insl cli mov bound cmp mov test lds mov data16 sub mov out mov cmpsl cmp mov or mov test adc sahf sbb sahf pop test cmp mov inc out push xor imul adc mov xor push lock pop sub (bad) lahf jecxz nop sbb arpl add aaa sub in sub orb jmp ret rcll enter or dec and mov int3 cwtl inc xchg subb fcmovnb fsubrs ljmp ret pop push scas pop mov add outsb leave mov hlt push mov mov inc mov imul xchg movl das and mov inc insb inc adc (bad) aaa in popa mov (bad) xor xchg and js loopne adc and push repnz or cmp xchg cmp inc pop sahf int3 and loop mov dec mov add xor mov pop movsb fcomps xor pop mov (bad) cltd mov ds dec xor fcmovb int lods les push xchg add out add sbb or sbb push add imul jle and push pop push (bad) mov add fidivrl cmc (bad) mov pop into aaa mov orb and sbb or push add sub adc inc cmp es addb xor loopne ja inc xchg lods repz cmp xchg test pop test xchg xor inc (bad) loop inc push jp es pop add shl mov in out jb inc notl int3 push popa lock loop enter sub mov aad das pop push dec xor outsl or pop mov lds aam outsl enter pushf jns jne dec pop and mov decb sbb lock jns insl insb inc add fs out xchg mov fisubl xor cmp adc jg imul (bad) fild sub lds stos sub mov and (bad) jbe je daa push int3 inc inc cmp cmp add jge test inc out int3 xchg mov mov dec aad daa or push ds ss or (bad) inc pop xor int call loop sbb arpl cmp js sarb adc (bad) lea sub loopne test inc (bad) rclb test iret and int popa cld js les aaa lret rclb js and xor add add cmp pop or les gs xor dec sbb and test push push mov and add mov xor repnz adc data16 mov or std xchg int3 dec and nop jno out das (bad) pop lahf xchg xchg add push push sbb (bad) mov adc mov pop or pop pop xchg mov cmpsb fdivs push adc add pop pushf inc jl and mov cmp or mov (bad) and mov mov pushf mov and aam mov jo mov dec inc xor addr16 in inc xchg inc sar imul fisttpl dec inc in ja std shlb lods pop dec xchg push idivl and rol jle clc aas sub inc inc insb cmpl dec jmp add bound xlat outsl rorb cmp test mov xchg mov int3 mov (bad) test mov adc (bad) lret sub insb adc and mov jbe dec or mov lret mov mov inc popa scas and or int xchg jo dec jbe pusha or push dec ret sarb ss sub icebp dec inc js into dec dec loop es add mov lea pusha dec pop in sub notb jg inc sarb (bad) data16 (bad) fnstenv rcr mov and xchg adc mov xchg lock in arpl sahf add mov fildl dec test repz add pop mov je and pop pop mov jbe mov (bad) repnz push jbe adc pop cmp pusha adc test roll and pop cli dec lock aam movsl nop add (bad) mov push pop mov jge in int3 or adc mov (bad) push pop icebp fadd pop mov ds enter fwait cmp mov sysenter or sub jno subb cld test clc loopne pop ret mov gs pusha movsb pop jg js test test mov mov scas push jns mov dec push mov icebp mov jae fsub out enter int3 sub inc mov fidivrl sbb dec sbb and cmc negb push popf adc daa mov push test les enter cwtl jno add pop lret push icebp repz push pop pop mov adc xchg jo das or inc call jb pusha jo jge push stos mov (bad) rclb pusha arpl push mov js push (bad) sub pusha cwtl inc orl adc loopne lods stc pop ljmp gs sbb test lock pop test popa mov dec inc sub sbb and push pop dec das int3 push mov xchg aaa mov popa inc xlat dec insb or adc int3 cmc mov or js inc enter cld scas add fstpl cmp adc and push fwait sbbb test jl cmp mov adc cmp out (bad) jmp or nop mov loopne (bad) int3 dec xchg je lods shrl or adc and das add std shrl adc jecxz add cli in lock adc push aam dec call mov sahf hlt cs fs cwtl add stos xchg nop scas xor loopne rcll sbb pop (bad) lock cmp inc push inc int xchg dec es orb xchg int pop push xchg sub rolb jno fstl cmpsb punpcklwd imul mov movsb loopne dec push adc dec xchg sub mov or cmp adc jecxz cld shrl add pop push rcrl test sub add and stos in push inc loope cmp xor mov pusha add sub inc pop rcll sti imul mov and jl adc cmpsb pop into push pop movsb enter movsl inc dec jno inc cmp push xchg call jmp cmp dec xor pusha ja xchg mov sub mov call out lock xchg movsb les add cmp lock sub mov out cld pusha cs mov jl add cld jae dec dec push pop fsubrl dec loopne jl xchg pop push sbb mov add lods inc and nop mov pop loop add es inc add cltd mov out cs push push icebp (bad) and mov add rolb cwtl mov push pop lock mov inc sub mov adc add fadds xor add inc loop adc stos push xor inc or mov test push jl out mov add mov inc je cli dec xor inc mov pusha jne sbb mov pop (bad) mov push mov mov sbb cmp pop fs jmp fwait pop sbb and mov fs add pop mov repnz js sahf adc mov add lret cmp (bad) out icebp test pop pop hlt pop mov pop pop movsb cmpsl add pusha mov aas je clc insb cmpsb cmp (bad) leave nop enter pusha mov sbb push mov xor stos dec xor sahf lock sub push xor adc daa push pushf daa xor sbb sbb movsb int in pop sti dec push andb sub push dec add jb dec inc xchg push push rclb (bad) xor xor dec inc pop mov jg mov fcmovu push jb fwait mov lods or dec jg int3 sub inc hlt or mov das les lds and pushf iret pop (bad) rol leave fldenv movsl dec test pop or and mov adcb pop fs cld lock into dec and mov fs cmp pop fildl xchg test out add xor les and call dec push adc sub imul pusha dec xor (bad) popf xchg int3 adc lahf andl xchg ret mov das jmp aaa mov bound jg das les daa mov pop int into pop add lods jmp (bad) bound inc jns push test mov jo jne rep or mov scas sbb inc int3 call add aam repz (bad) mov adc jg jp movsl pop data16 xchg int fsubrs pop pusha or xor add jno sub push jg cmp cmpsl insl adc cmp in icebp sub sub pop mov cmp mov (bad) xor sbb lea xchg lret faddl push sub fcoml xor pop adc imul jae lock push imul add mov jb cmpb push lods jae (bad) mov nop out xchg mov push jle and in push or (bad) jl pop sub flds or in push xor ficomp add scas fsts push mov add enter mov add push inc lock push mov push js arpl sbb or sub dec call dec fucomi xchg xor loop outsb cmpsl (bad) mov daa xchg inc mov loope pop add dec stc test rolb imul adcl icebp mov sub lock pop rclb add int3 sub mov inc fs mov and mov cmp stc popa test dec pop sbb adc sbb icebp mov lahf (bad) or mov outsb imul push or jns sbb fnop (bad) jl or pop sub add sbb movsl xchg adc push xchg mov mov push dec inc popa sub pusha xchg or or aas adc movsb sub test adc lahf (bad) and sbb mov and nop inc add in in cmp int3 inc add dec js pop push aad lock add add test pop nop pop add arpl imul movhps pop add jnp aas clc leave add mov insb add adc pushf push fs and adc mov push mov add scas adc jge test ljmp sbb pop dec cld ret sbb cmp and hlt mov popf insb movsb pop push push mov imulb rcll mov push and pop lods inc movsb test roll jnp js repnz aaa inc and pop imul sbb call test dec mov das les clc sub adc add mov fdivrl icebp imul loopne sub inc dec test or lock cmp mov dec cmp cmp xor ja jp insb rcl insb inc aaa pop add mov lahf inc call pop js push repnz nop push rorb out jbe mov sbb test mov inc stos shlb ret vmovss cmp aam add dec mov mov add cmp in lods pop add or mov xchg push pusha lock bound lret pop shrb push test loopne xor adc (bad) mov fs test call movsb push xchg add and mov aad or cs test xchg inc pop repz pop jg mov out cmc ret fidivrl aam push addr16 sbb jl dec mov xor imul push fisubrl fwait dec (bad) jecxz push (bad) mov push xor jne add ret mov mov mulb das outsl mov mov cs pop fimull add mov jb ljmp enter pop faddp pop inc rcr inc data16 jae loopne cmpsl push add mov pop aas sub test push pop leave or out movsb mov add in adc scas test or fmull add (bad) pop sbb enter daa mov and loopne lret fnstenv lahf es dec rolb adc fstl js and add and loope dec and and mov loop or adc pop cmp pop push rclb rolb pop aam add orl pop lahf dec in sbbl (bad) fiadd jns add repnz add jl cmp mov and add inc inc mov and repnz xchg test inc adcb mov cmp add xchg mov push pop jmp call into enter in pop pop enter jne push xor movsb add mov loope xchg push lock aam fs sbb lea mov add out subl decl add cwtl into pop mov xchg cs or fsubp pop and jl push pop mov xor sub sub push add lahf jg and xchg mov inc aam in fsubrs pop sbb rolb xor add ror pop idivl jne xchg pop mov les dec sbb push (bad) push icebp popa bound movsb ret dec dec jnp dec adc xorb dec test sbbl and jbe add arpl mov add sbb fiaddl inc xorb icebp pop push sub aaa sub pop mov mov addl adc or fldenv xchg mov nop sbb pusha (bad) int3 add sbb sbb shrl clc loop sahf push dec dec mov jge inc push mov sbb (bad) loop or movsl movb pop in xchg xchg mov and inc fwait hlt jo push (bad) mov push dec pop inc inc lahf pusha xchg inc fadd xor add lahf outsl xchg inc popa imul (bad) fs test sub add fidiv addr16 push push cwtl and inc jle pushf jl cwtl (bad) icebp inc test and cli movsb mov iret mov sbb imul into xchg push inc pusha fimull xchg mov lcall imul cmp add push jb add or icebp out dec lock rorb xor lods xor or dec notb and push adc sbb ret inc jmp push xor push loop addb rcrb adc lock add dec repnz add jmp cmp lods je mov add xor push lcall inc sbb out outsb enter hlt pop add jge sbb cmp xchg outsb lds leave das xorb add pop or ficompl nop ljmp test clc jno mov test (bad) insb and lcall jo mov pusha leave test aam mov mov es addb test lret addr16 scas sbb dec (bad) les loop add pop das fs sub push mov dec aaa mov jno fisubl mov in lods repz add inc icebp mov xchg ds adc inc (bad) and cmpsb wbinvd in push jo pop mov fsubl xchg icebp mov pop cmpsl sbb cwtl outsb stos lea pop popa cmp je fmull icebp push jne pusha pop flds std inc int3 mov test sar adc lahf mov dec fimul push movsl and sahf ret sub ja adc lret lock mov mov les mov and mov lahf add (bad) lret xchg xchg xor mov cmp cmp movsl jbe xor fisubl cmp and pop ficom dec cld mov cwtl out test jecxz adc fs je cmp and dec (bad) je icebp bnd loopne aad pop cwtl bound inc add inc in inc test cmp dec movsl fsubrs insb popa movsb cld pop outsb mov push jns addb and pusha js repz mov inc call fsubrs rorb mov cmp adc pop adc sub cld add movsl push inc lahf idiv add fisub das mov mov inc js add rorb lock mov in and dec xchg pop inc enter mov mov ret test dec cmp sbb cmp push gs (bad) xor and mov cmp push js inc mov lret sbb pop ret add out movsl fstpl pop jo mov xorb add in cltd push leave (bad) rorb xor sbb test lods ss cmp jns sbbl mov sub nop pop out add into push jp sahf push leave sbb mov adc rolb les inc inc sti sbb in sahf sub pusha inc sbb test or add mov roll pop mov icebp cmpsl es cmp pusha xchg sbb das add shrb lock imul push loopne push xor push mov push add push inc fadd shrb add clc imul fs jo ja aas nop ficomp pop push and js cltd inc js test inc orb stos pop fiadd inc pop or pushf adc lods nop or pop xchg sbb icebp repz fsub imul xchg test add xorl adc add in push jge mov xor jg call dec pusha loopne fiaddl dec pop jns mov fiaddl cli subb movsl dec fsubp popa dec in xchg push cltd push jbe leave sub rcr jns jbe js or and test es inc inc hlt add lahf jecxz loopne outsb xor in add in add jbe fs mov mov inc cli ret add jecxz fiaddl movsb icebp test cmp add mov cmp addl shrl dec mov into pop jbe fs imul jbe mov (bad) mov gs mov addb shrl pop loope jecxz push inc and iret mov add lahf xchg cmp outsl rcrb and add jecxz push insl shl out aas add pop addr16 cli sbb ss pop push gs pop dec fwait loop add mov add std stos inc mov inc pop sbb sbb and idiv dec icebp (bad) pop push (bad) xor jo fnop jl sub or jns add pop sub add pushf outsb inc add cmp (bad) in icebp mov jle mov jns adc call sub stos mov inc jg add pop daa adc pop jp out loopne ret clc dec ret sbb mov jne add aaa sub je add xchg cltd add aad cmp cmpsl shlb insl das inc and aaa addr16 xchg cs ss lods iret push or sbb lock add inc sbb mov nop mov cmp mov adc out lds add (bad) pop xor and mov jnp xor clc or jns stos repz pop or mov and in xlat mov mov push add cmpb mov xchg mov divb loop dec sbb inc rclb das sbb sti sub mov lods add mov scas mov sub xor popa mov (bad) mov pop add loop pop add lret cld ljmp hlt xor scas ss pop cmp cmp adc test sti jmp mov inc sbb inc pop es in pop pop xor rclb xor dec das ljmp push sub jecxz shrl lock xor and enter pop dec out outsb shlb mov (bad) mov fild dec xchg dec (bad) divl pop in je lods leave mov xor popa fsubrs mov sbb mov mov mov shlb int3 push lret (bad) repnz sarl mov nop dec mov ja shll std and (bad) add xchg (bad) jne jae ret sahf add xor add popf jb cmp jno add xor lahf xor mov mov aad repnz xor or sbbl xchg outsl adc (bad) int3 mov stos add mov add int3 xor dec pextrw test and fucom in or and cmp push pushf ret or clc xchg or mov orl scas arpl xor lahf sub inc fdivrs pop add jmp mov add add inc push popf outsl add mov mov divb push add data16 xor shlb xor pop data16 adc and rorb add aaa dec inc faddp (bad) xchg loop out mov jns out rorb insb jmp scas add push aad jns fs stos pop pop shll push nop pop shrb inc mov xchg inc adc or (bad) rorb (bad) adc (bad) or loopne inc pop add cmc sub push jecxz inc mov mov sub fildl in mov fnstenv dec jmp jle jno pusha push or push or adc nop popf das push cs or sub pushf scas call xor sub mov (bad) sbb cltd lods ret movsb pop mov sarl pop add (bad) mov pusha adc icebp and popf pushf push loope aad push fdivl or rorb mov rclb inc ffree mov or push xchg xor and shlb (bad) cltd sub mov imul out mov jle sub in cld mov pop scas inc int3 nop and lahf clc pop or fwait mov sbbb jae add cmpb fxch push stos mov inc adc sub pusha frstor xchg jns adc dec and adc sub sbb adc xor push sub or adc sbb adc sub js inc mov lods sti mov and arpl mov mov mov lea test call rolb pop fimul es lea cld push pop xlat sbb loope or cmp stc adc mov imul adc and and cmp loopne mov dec inc add adc adc mov test loopne out add jb pop pop ficom mov jo addb adcl push fcmovbe cmpsb add and test insb push mov nop test pushf nop xchg dec jnp xor aad enter jecxz pop aaa sub fcmovu mov add (bad) sbb stos clc inc icebp jmp popf test sub push lcall arpl fistpl mov xor addr16 dec mov add push sbb or cld pop pop adc jge sbb add add icebp push mov xor and add movsb xchg or cmp ja inc aad sahf popa add out add std fsubrp (bad) and mov pop cwtl pushf push cli adc lret popf pop inc sub push adc sub mov and arpl stos je push mov push add jo icebp (bad) icebp dec sub cmc add mov mov mov add data16 pusha insb nop lods add xchg lea jo lds enter popa or fisttpl sti mov pop sbb sbb aas add pusha in movsb xor jmp push into in outsl xchg push mov or adc sub mov clc dec rol cmp adc movsb cwtl add mov push popa xchg ljmp add inc pusha mov imul and add movsl cltd aaa clc jle loope mov add ret pop mov jb mov cwtl fmulp dec sti add sub fwait xchg dec xchg add lock inc push sub lret mov xor add int3 mov push loop mov fldl2e cs rclb test sbb icebp push cmp arpl fbstp shrl aam mov or cmpsb jge push mov daa pushf inc rol ljmp hlt adcb xchg loopne cli test mov lahf jb out daa jae or popa cwtl clc push pop or mov mov loope pushf pop xlat mov xor sub loopne add mov loopne pusha lret inc and adc mov loopne xchg cld xor fisttpll dec or push and (bad) jo mov xor pop and sbb sub bound jo shrb or es sub outsb add mov pop sbb cmp clc inc rorb cmp lods hlt subb decl mov cli neg shrl sub lahf xor pop lret xchg add fucomp mov dec cmp xor adc add mov pop subl lret push sti mov push and add mov mov mov lret add xchg insl bound mov mov xchg pop std jg lock test jle xchg aam loopne stos fsubrs mov aam or cli xchg jne sub adc test xor push mov enter mull cltd pop and fs iret xor pop pop cmp mov or lods and add sbb mov jo jg add iret mov icebp jge aam mov add dec shrb push (bad) out push inc gs js xor and and gs cs mov fldcw sti sbb cmpsl jl mov add cld add jo not iret add rcll sahf (bad) call js add fcmovnb loope pop nop call dec sub cld movsb in mov scas dec test aad xchg jne js js shr add cmpsl outsl dec lds inc outsb push loope xchg adc arpl push adc adc (bad) cli push xchg stos sub test push xchg hlt repz adc (bad) pop dec sub mov xchg adcb dec lods xorb sub arpl push movsb movsb ret js and lods sarb dec mov sub subl fmull or push mov push cmp out or ss adc xchg data16 call aas cwtl push adc scas adcb inc lret push lods add js dec add xor out es add rcrb into add nop push std mov mov cmp jo sbb jl test ret lods imul lods mov arpl pop pusha sahf or xor mov ret sti fisttpl sahf pop mov stos (bad) jns rcl and test or addb push aam inc xchg fninit lods into shrl lahf inc inc mov int3 inc stc cld add or loop sub dec jne sahf or push movsl test mov bndldx dec jbe mov (bad) push inc sbbb or je in mov enter ret fcoms scas adc daa enter add fmuls push cmp or sbb add out cmp xor mov push cmp pusha (bad) or aas hlt jns outsb or call and ja or lods jecxz push pop add pop push push and pop inc cmpl mov xor inc es add lock aam lgs and int3 push push inc das nop enter mov pushf add fisttpll or jo cmp or add xor jns out pop das and insl sbb sahf mov nop lds nop les lcall sti bound out mov xor push addr16 sub dec cmp or inc stc andb add mov popa test cltd xchg movsb xor pop and adc insl cli and mov push test inc jl inc mov movsl pushf inc call jmp fs dec enter cwtl dec inc cwtl lock mov xchg mov inc aam shrb gs (bad) mov daa je out inc es loop fsubs mov and adc inc in daa lea rorb push mov pop cwtl pusha cmp loope jb sub or xchg loope mov sbb mov push mov and mov sbb ret cmp or jmp jecxz clc cmp mov shll inc and test pop lock push aas mov addb jo push mov mov (bad) dec in and sub mov inc insb jbe fwait xchg xchg pusha jl in mov shrb mov add xor pushf pusha pushf int3 xor movsb scas jp push rcr das test jne mov fdiv loopne xchg bound fsubs mov xchg int inc cld sbb push push lcall mov sub push cwtl push adc loop xchg insl nop loop dec dec stos hlt icebp jecxz inc fadds add outsl mov andb mov insb mov (bad) (bad) cs adc dec xchg fistp in cltd cvtpi2ps into xchg std lahf imul adc push aam xor add adc cmc jnp out jmp inc cmp sub mov pop stos mov adc push leave xor js dec call in pop add dec int mov arpl or jno xchg or call adc mov pop movsb lds js int3 (bad) jecxz and pushf sub lret sub pop fwait enter sbb push ds jmp aas and sbb inc fmuls movsl add jno fistpl in loopne leave mov pop pop mov insl in add icebp push aaa arpl aam pop data16 sub mov das arpl aad and mov and lock pop adc mov nop addb xchg mov add fs in lret dec popf nop xchg nop xchg fldt or push mov mov int3 sub jp jmp pushf mov mov or loopne adc mov sahf (bad) fsubrs jns add xchg clc push or sbb in sbb sahf test sub cmpb sbbb xchg xchg cmp xchg fwait addb pop js das inc mov testb fadd nop dec nop pusha add inc or arpl and sub jl xchg and sbb sub inc dec xor rcrb inc push mov jne int loope insb inc scas sbb and fnstsw repnz test xchg clc les stc cmp gs addr16 aas in adc ss and mov lock add inc cmpsb pop jge lock push xor lahf and arpl movsl lods or imul cmp mov adc stos mov test and int inc or mov adc daa xor fsubs mov rcrb hlt pop mov mov lock push xchg clc sbb js fs dec and loope inc and in insb adc push hlt xchg add push cli imul pop sub movsl jle iret in xchg movsb insb add jg std xor pop frstor mov loop sub mov and sub ss mov cmp fsubrl jo gs xchg cmpsl mov cmp iret lods pop mov pusha mulb cwtl or cmp or test imul add mov adc psrld cwtl in mov lock lock dec dec mov adc adc in jle sub and add sub fldt and incl pop xchg iret add add fwait add adc add push mov adc push and mov add and test jecxz loopne pop loope inc stos roll pop test gs nop hlt add icebp push in rorb jns data16 fs rcll add setno adc push nop xchg sbb push rorb adc loop push jb sahf mov mov std dec or clc adc mov je (bad) and in sub xchg movsb inc stos int jne cmp mov (bad) cld inc pop jns je dec push rcrb sbb push popf and and pop sbb fsubl dec add dec jl sbb leave push ret adc shrl mov test adc loop add les xchg out fstps lds shl stos test push inc or rclb sbb popf enter cli aad add adc je and lods sub add fistp pusha test xchg dec dec in (bad) ss or pop imull es lock sub lcall inc jmp cmpb or ret mov push std mov push mov fstl std jns mov or mov andl movsb or mov icebp inc mov cmovae sbb inc pop jge hlt nop dec test mov xchg cmp (bad) je inc inc movsl loop hlt incl fstpl cmp cwtl push pushf add jg and adc adcl xchg inc cmp lods push adc fildl outsl ja adc xor mov cmp jl xchg repnz mov xchg push cmp jns aam push fisubr sarl je das adc jo dec jae mov jo add dec push adc cmpsb push sub xor es push popf xchg xchg inc mov (bad) dec jmp cs jne sti andb (bad) jbe mov cmp mov insb add xchg imulb add ja add pop sbb scas jg arpl (bad) aam add fcompl sbb push sahf or lock sbb add dec dec les ds repz xorl out aam clc movsb ret jg jbe inc jb and cmp lods sbb and int data16 or imul push and orb push cwtl pop fs arpl js jbe or jne cmp push xchg push mov lahf add xlat loope sub loopne mov add mov add jl incl sbb scas jns cld push test dec inc cmp fisttpl cmp ret jno test cwtl mov jbe push and cmc sbb mov xchg push push leave rolb sub and and inc or add add jmp ds xchg xor and push out movsb nop or call pop mov fs movsl mov (bad) aam fdivl negb add jp add mov adc or pop stos inc dec addl (bad) ljmp add aam fidivl mov jg dec push add push mov cld sbb sub ds fcom inc sub mov push out lock push test push loopne push cwtl ljmp sbb add dec dec loop xchg jl mov xor aam movsl add add sbb es push pop es and popa sub leave js mov rolb add add in sub outsl mov push pop sbb xlat and mov xor popa adc testl xor rorl adcl add push test fisub or or and add sar (bad) or xor xor icebp cltd scas lock mov in push push rcrb and lods add cwtl mov and aam or aam popf sub xchg push iret sti push ds cmpsb ss pop popa nop in into and es fucomip shr fwait js ljmp testb outsb hlt pop out cmpl cmpsb les sbb aam xlat sahf orb in gs repz test or pusha fnstenv orl mov rcrl pop xchg lods dec sarb add test mov lock or push js or adc xchg mov daa (bad) into rolb add aam pop sub inc popa cmp dec ret outsb pop ficoml pop dec repnz int inc push (bad) popa je loope jecxz or mov dec cld jl cltd mov inc clc sbb cwtl movsb and lea sub or xor rcr dec add cmc int3 sub or hlt les movsb push add incl into pop mov mov hlt push xchg cmp cmp add xor cmp test mov fcmovu fildl xor popf mov fsub lret add je add and imull lcall inc and rclb add aad addr16 int3 clc out add inc cmp movups cwtl (bad) shrb ja nop cmp mov mov and pop gs adc push sbbl or pop imulb add je cwtl push pop or mov imul movsb push out xchg sbb arpl ss add insl sub or push dec or into pop xchg xor hlt rolb mov mov mov ss movsb fucomip clc lods (bad) xchg cmpsl aam add inc and stos adc mov xchg or add ret lcall sbb dec das mov clc outsl shlb jl ss add jne ds insb mov add sbb jge sti cmc rcrb add (bad) pop mov hlt addr16 lahf out scas lds lcall mov pop xchg in lock lock inc pop and pop ds mov fwait loope add jne aam add or aas pop leave enter sbb lret and stc insl roll lods dec inc ret lahf adc repnz push sbb repnz or bound and dec mov (bad) les or loope sub mov pop push push mov sarl (bad) ljmp push or stos push jp jns dec movsb enter pop test out in inc pop push sbb pop mov lcall pop outsb loopne sahf cmp test add lahf (bad) cli jg mov xor push inc jo rolb xchg mov fs fwait stos in pop add adc push dec sub sub jnp jmp adc add cmp inc add mov pop test xchg jp or rclb jb fsubl add leave add cmp inc adc push jo rolb inc ret mov in orb dec and hlt leave xor test xchg cmpsb lock testb ds cmp data16 add into out test sbb in outsb mov rcl pop cmpsl sbb mov xchg cmp or lock std jno add jo insl mov add in arpl pop rolb lock mov fild mov icebp lods fldt fdivr push push and hlt sub cmp xchg loopne cmc dec add push push adc data16 sbb addr16 pop fldcw repz or js das pusha arpl push push nop xor repz bound jp inc xchg sub dec xor sbb in mov inc cmp fsubs pop mov nop add fisubl cmp jno push cmp imul or jle jmp pop adc dec test inc dec fcmovnbe into xchg xchg ss popa pop add cld mov gs fdivr aas inc in push add pop (bad) inc cmp stc push cltd sub cmp stc outsb popa adcb add iret mov in shrl movsb cmp dec jl popf (bad) sub add shrb dec or jnp movsb sub push popa inc or add mov enter adc scas xchg add pushf loopne push dec mov jl inc (bad) cmp mov or ret dec push js test and add aam je push inc lahf jno hlt mov add sbb mov bound inc inc fsubl mov cmp inc movsb mov sbb xchg enter lea jmp sbb and mov sbb cmpsl mov lock jno push pop sub push nop jns cmp loopne outsb jecxz adc call or add sub (bad) xor mov fild inc pop xor jmp mov outsb stos cld mov call cmpsb cld add cltd (bad) notl clc mov mov xor sbb push xor adc add mov cs sahf push add or or cmpb push lock add push sti movl pop push jmp jae jge lcall sbb jno jns je cmp leave add out xchg xchg movsl icebp add mov jo dec sbb pop rcl das adc dec or orl cmp jbe,pt xor lods sbb pop sbb ret xchg add sub xor mov jb jnp jg lret in or fdivrl movsb mov and call add xchg lret sbb pusha push lods sahf lds xor push add shrb lcall add outsb lret push or cwtl pop scas lcall and add push leave je add pop cmpsl mov (bad) inc mov add out test add daa enter mov xor aam or mov in sub movsb or rorb xor rolb dec mov pop push pop fldenv negl imul cmpsl cmc jecxz add or mov inc mov cwtl sbb mov push xchg sahf add mov or in test or (bad) push out or test pop cmp push fisubr fs shlb jbe lds sbbl cmpsl or cwtl daa repz xor ficom inc cmp data16 je adc push or or fwait sub dec test cmp dec gs push sbb dec pusha xchg loopne push jns frstor je xor sbb out inc push cmpsb popa pop pop inc add push and (bad) jl lcall sub or inc loopne enter mov xor in sbb leave add cmp add movsl jl xor mov mov out or call inc cmp dec jo insb add cmpsl aaa sti rcl push lods add fsubl pushf sahf and mov mov loopne xor jns add inc adcb xorl mov mov xchg adc mov loopne stos hlt jl int3 sahf ljmp add lds je add and sbb call pop dec (bad) jo les (bad) cmpb pop jge lock sbb xchg int3 inc les lds (bad) and dec les daa clc push lret ret mov test test dec add inc cmp dec (bad) lret add je enter sahf roll pusha dec xor xchg mov addl les lock (bad) je lock jge add cmp xchg add or add sub cmc dec imul jo repnz rorl mov js push or test push add dec or push mov cmp cmp add sbb pop jle loopne push mov inc ret icebp cmp sbb js test push jl add cmp pop sub add mov xchg (bad) xor mov cs pop test inc pop jns les add sbbb gs inc (bad) test sbb jns cwtl dec enter sub pop mov and loope inc xchg call inc adc dec les dec lock push inc jle movsb xchg popl sahf mov push popf nop inc call pushf sub lea push js xlat insl fs sahf je outsl mov pop cwtl clc push adc pop dec push add (bad) shlb xlat pusha loope test cmpsl arpl inc mov jns fwait xlat imul aaa rorl cmp push mov das mov stc and cmp sub pmuludq jo sbb loop and mov orl negl and in pusha fwait mov xor sbb outsb inc xchg push fisttpl imul loop,pt subb inc insb cmpsl add lods (bad) repnz dec stos cli pop jb mov into fildll adc ret mov add cmp dec mov scas add (bad) xor inc testb inc bound dec pop mov cld xlat adc adc enter mov je push or push or shll test lret add inc aas iret cmpsl orb fadd add loopne sub test (bad) cld inc lods por loop jle cmp push leave mov add in outsl lret (bad) cmp mov das dec and cwtl sbb mov inc mov or xor (bad) push cwtl and loopne pop movsb adc pusha and add xor insb mov rorb sbb adcl sahf fldcw and jge out rolb sbb mov push mov jns push mov xchg add or fstpt scas push sbb js arpl cli xor mov hlt inc inc mov inc fcompl movl lds and scas out mov ret mov or lock and xchg cld add flds call ret push push adc loop cmp cmpsb and and loopne daa mov sbb add inc xor pop xchg add sbb (bad) test and das ret pop sbb (bad) sub add rcrb inc dec dec vmovlpd nop mov push and aaa cmpsl xor in add ljmp push push jmp lret adc dec cltd ds mov add nop fsubl or inc adc or and inc add adc dec lods push dec add mov addl sub sub push jle mov xorl xchg stc (bad) mov sbbb push dec es cmp sub cmp or mov jle repnz dec add add mov mov scas int3 cmp xchg mov xor or arpl pop xor sub pusha or nop or xchg enter mov add dec scas (bad) out test inc dec inc clc pcmpgtb cmp rclb out shrl add xorl sub push cli cld adc and mov stos pushf sahf inc loopne rorb xchg es cmp or rclb aad addb lahf mov sbb dec pop inc fldcw aas (bad) sti popa add xchg or sub adc int3 shlb mov cmp and test pop jb rorb xchg dec mov sub and outsb cmp inc or sub mov adc mov in shrl inc add mov add dec pop add (bad) das stos fwait rcrb sub mov mov clc mov xor jns add cmp andb mov push aam cmpsb pushf lods xchg dec cs sub cs loopne inc push ret add stc cmp data16 inc add movsl and cmpsb mov xchg pop xor sub adc inc fnsave pusha lods xor aaa dec push add cmpsl mov mov and dec inc pusha xchg push xor imul jmp fist sub or inc inc pop das sbb in adc pop xor nopl leave outsl or andl ficompl cwtl cwtl adc and cmp xor cmp outsb adc shrd rolb fs pop mov out dec xchg rol lods xchg fadds mov mov jb and and inc adc xchg mov nop jp insl mov xchg push adc inc mov arpl xchg and jecxz mov inc xchg lods jo xchg mov dec or popa fisttp loope out inc mov mov or dec jnp (bad) iret xor sub pop sbb leave xchg daa dec hlt iret lock xchg pop push aas stos ret dec dec mov or sub add xchg pop mov pop inc push sub bound xchg test sbb inc sub mov clc inc pop (bad) pushf mov jo jo cmp dec test jge add sub xchg inc loope sub push jae hlt test mov cmp je xchg loopne gs sti cmp test aaa mov rolb mov cld and pushf mov mov lods add sbb sbb add pop sub jno and pop adc cmp add (bad) and fs ds xchg adc xor mov push add adc adc outsb lret xor sbb xor jo shlb and sub inc iret daa xor cli sarb mov jp ret movntps xchg sub push push add add insl jb or mov and in les push lods loope fs and aad mov push hlt inc push mov les rorb les mov loopne aam sbb lods adc lcall push jnp mov lahf std aas add gs loopne xchg sub add cmpsb and xchg dec popa push hlt add mov rorb sub dec mov enter sbb jo mov test xor add mov add xchg loope xchg les icebp pop xor inc jo dec dec lock mov test dec and stos dec int3 scas add cmp push (bad) hlt mov push fild clc cmpb (bad) xchg js or mov nop fisttpl lods push xchg pop sbb scas adc pop push fdivrs push test adc jns dec inc into incb nop or pop test or ret mov mov xchg frstor cwtl les or push fnstcw je jl add dec test or push lock mov and test sti lds cmpsl add subb adc or fwait mov inc fcoms out enter pop push rorb inc gs mov xchg clc and mov mov in ret push xor ret decb adc jl popa pop lcall sub pusha xor mov fsts lock cli add les xchg push mov mov in loop xchg inc je movsb mov in add cwtl sbb xchg es and xor aam xor mov xchg add and dec add mov add sahf cltd fldcw add inc inc sti andb mov loop int stos (bad) dec xchg add iret (bad) cmp pusha adc mov and dec add loope lret movsl mov pop xchg movsl add ljmp cwtl mov sub and sbb cmp test call fs rcl je inc mov subb je mov daa xor fs es enter movsb ror adc xchg pop hlt push rcrl cmpsb xlat cld dec or add xor ja or pop test push mov inc popl clc cmpsl (bad) popa add mov sbb dec or add sub push push in insl or inc pop aam mov xor pop rorb dec and dec dec in std push mov mov gs push movsb js dec and lods cmp dec xor sbb fs sub xor sarb enter daa fimul or pushf and ret xor push test xor mov cmp adc add sbb jecxz mov in push cli cltd jl out popa add fwait popa lods insl or call push test jb mov leave lods inc mov pop je call mov iret adc pop mov pop les adc mov rolb mov jo sub aam les mov add or mov inc je inc and shrb xchg clc mov dec hlt int or adc lret push mov (bad) (bad) loopne add ret sti xor dec xorl mov test xchg rcrb cltd xchg sub mov lods mov pop inc mov push adc je test and xchg and sub lds mov lret dec hlt xchg arpl scas sub aad inc das lret dec lahf fmul aas push test outsb mov inc test (bad) fstps xor loope or inc mov mov cmc jl xor lret mov daa sub adc test xchg inc inc pusha inc cltd imul add mov or add sub mov jo adcl mov push sub aad fdivl push xor dec lods lods sub test xor das sbb int3 loopne xchg loope int sub pop sub push cld and ret mov or arpl lods mov mov add scas mov dec roll lock dec xchg je mov cmp (bad) and mov psrlq es cmp fnsave mov jae push pushf fs or push call mov and pop add push je sarb pop sarl jecxz pop xor lods bound jl mov nop push test mov es adc sbb cmc mov xor sub insb test ljmp xchg push daa (bad) sbb pushf rol sub sbb and push or xchg pop andb adc mov sbb shr push adc and orb pushf gs hlt sbb pusha xchg and adc (bad) pop fnstcw inc xchg xor sub subb or dec jecxz cs imul ret mov jp pop fwait dec sub repnz pop jl xchg scas push loop xor insb dec andl and mov mov fwait scas fcos mov cmp sarl in sub lds sbb push push test sub inc push or jne insb enter stos sub jo cmp mov push mov pop xchg and inc test xchg cmp cmc bound add adc pop pop es scas add cmp movsl dec in imul clc xor addr16 add scas sbb push cmp xor add int3 out enter jo loopne outsl add jmp dec mov int3 daa roll gs cmpsl jge mov mov test sbb mov jo pop mov adc outsb sub into pop addl test pop and ds xchg adc add or xor and ret pop out cmpb stos imul mov loopne pop mov cltd mov sub jmp sub iret icebp in fisub xor sub scas mov jo and rolb mov lods sbb jo mov stos xor hlt in addb sbb xor jb inc cmpsl adc popa pusha and dec shrb sub add ja rolb mov inc lea cmp add repz cmp xlat cmp je mov and stos test adc sub sbb jle nop xchg adc ret add fwait fs mov enter jle js jecxz lods add ret insb add cmpsb mov jns repnz adc outsb js mov mov loop mov fiadd hlt push ret ret pop add ljmp dec addb pop rcll add lret add mov mov xor add jns cmp jg add add rcrl inc cmp pusha test sbb std inc xchg test pop and add jns pop aad xchg sbb cli inc pop lods push sahf es fidivrl jnp int mov pop enter or dec sbb sar test and sbb push xlat adc mov movsb xor lcall or les sbb pop or xchg adc add nop fmull push fldl add sub jecxz add lods fldl cmpsl test add add mov popa les (bad) cmp jecxz sbbb jp repz dec and outsl scas pusha ds pusha data16 mov mov jno add adc sbb imul cmp aam icebp inc mov add add into aad or and clc pop (bad) mov or adc loope leave and jge adc inc pop mov xchg data16 sarb out mov dec xor mov mov sub add stos fcoms fadd movsb dec lock rcrb std cmp das mov jl hlt and rclb push mov fildl sub or nop outsb mov data16 popa jnp sbb fisubr mov ret pop lods lret inc adc add lods test incl fs cld out mov and mov pop cmp mov mov stos push xchg cmp test jmp sbb pop mov mov pusha (bad) pop mov outsl or daa and (bad) push or std (bad) cwtl fsts cmp add in mov imul push xor add push xchg push mov in in enter repz adc inc pop push cmpsl pop andb movsb xor or lods mov stos nop arpl std or fdiv add inc xchg je push in sub jl enter adc and (bad) les leave adc sbb and inc xor in pop gs xchg inc (bad) jp pop imul and or pop out push mov xchg data16 jbe cltd hlt xor mov add in sbb sbb inc sbb add pop mov push or mov or imul cmp inc scas daa lret push and push inc and sar pop cwtl insb add (bad) sbb cmp fs nop push rorl push je les dec cltd xor add jno add cwtl xchg or clc cs rclb and push (bad) and cmp sbb add scas pop call pushf inc mov pop hlt dec xor and push repnz dec aad cmp pop js loopne scas mov and pop jge add popf mov pop daa mov add stos sub mov mov xlat add pop testb js cmp sti add add cmc cmp cld jg adc or rorl js fwait lcall movsb push push pop int3 adc mov loope out cmp jae enter dec add or imul sub out test inc les inc in jo sbb fs jl jmp test cmp or stc loopne add push lea dec mov mov imul (bad) rolb (bad) mov sub cmp mov lret add pop call pop push lock in repz lock lret fcomps or mov pushf mov mov fildl mov push sub or mov pushf or pop or popa dec loopne inc shlb add add loop and fwait lods loope lahf push cmp or add in fidivrl (bad) sub inc dec inc in add rorl inc xchg xchg stos test mov nop cs in mov adc es pop adc add mov xor scas xchg jl and dec and movb in aaa fisubl rol pop dec xor ljmp push adc fs rcrb fwait lods jnp dec test and sub push xor jo adc cmp mov jl insb push adc cs jp dec and dec sbb fistpl das cwtl xor cmp xchg add clc jo add aas fbld jle mov add sbb sub fldl icebp add mov stos jp ss or test sbb je push jae bound xchg out loop (bad) cwtl (bad) xor shrb add and cmp sbb cmp test or mov jmp pop inc adc cmp sbb shll sbb mov fwait test mov pop lret xlat adc sbb adc bound and xchg (bad) xor dec popa or mov pop sub stc pop repnz popa adc pop call add (bad) dec outsl popa pop add es cmp sbb sbb clc jno inc adc sub mov inc faddl dec jnp test stc or and mov fildll loope lock ret jno loop or call scas test push xor dec mov add xchg into fucom mov cltd movsb sub test lahf adc aad inc push lds ljmp inc aam es outsl pop loop inc inc add mov add js cmpsl (bad) xor data16 (bad) fs test push ret or sbb xor pop sub and nop imul lock bound and out and fstpt popf add jae int3 dec mov insb jl add sbb push outsl mov (bad) xchg loopne xchg push notb sbb mov clc (bad) movsb mov out adc adc push cwtl pop out cmp pop subb xor je mov aad (bad) ss enter adc imul stc add pop sub add imul add div cwtl push clc xchg lock jae cwtl jecxz movsb xor push jp pop (bad) mov and adc repnz cmp dec clc pop mov sub pop scas out rorb cmp mov dec xchg cmp (bad) xor pop xlat jge or mov pop js lods test add rorb xchg push pop pop test test add lcall scas test popa push test dec inc cwtl (bad) stos pusha into shr dec jae loopne or cmp dec add pop add add jmp or cwtl test stos push dec add mov dec pop pop pop jo inc das add adc fcompl out stos adc lcall repz fsts add sub or stos popa pop fcoms stc jmp add shll xchg dec cmp cmp xor adc or daa and push mov leave scas bound xchg add int3 or push fisubrl add rcl lret push mov pop pop inc sbbb and add xlat xor push mov outsb test ja in pop push cmp push jne adc add dec xor mov jbe insb xchg jecxz movsl out das (bad) push cvtps2pd or lods outsl cmp mov iret xchg add out push add rcl dec cmc push inc adc xlat cmp les pop add sbb dec xor jno shl mov insb (bad) andb adc imul pop (bad) adc inc lret add adc arpl addr16 addb mov shr sub sbb aaa xchg (bad) mov orb out adc mov or ja call shlw xor pop clc add out add or arpl cmp and push mov enter inc pop sbb add nop pop lret add loope pop js nop shlb xor dec cmp movlps dec and xchg or outsl jnp inc out xchg data16 adc sub fwait pop imul iret jg fcompl test andl sub jae pop mov dec outsl push add aam (bad) cld add (bad) dec outsl loopne adc lock aaa xchg mov add push daa test sub mov or (bad) sahf aam xor popa inc (bad) call ljmp push daa pop pop movsb dec sub adc inc mov xchg xor dec cmp add xchg mov mov notb xchg fisub xor popa push test add pop nop xor daa cwtl jo dec xlat xchg jae xor push push lock leave into out adc repnz xor das sub dec jmp or xchg pusha out cmp xchg mov mov inc fsubrs hlt mov pusha dec pop repnz push int adc dec in sahf adc and xchg sbb in add aad cwtl cmp rclb dec movsb clc xor pop sbb dec movsb sbb lret insl dec add (bad) push into sbb sti (bad) lock xchg mov in fs in adc (bad) jmp leave dec mov push sbb in into xchg and sahf loop jae jo bound lods movsl fisttpl mov inc push sub decb inc sbb pop sbb mov sub adc mov daa and cli jno cmp pop xlat addb push les and add test xchg pusha pop add pop int mov movsl andb pop loop bswap jne mov cmpsb movsb add shll stos inc cltd adc push push sbb mov pop xor xchg jmp mov fs add sub js xchg in pusha into jo jo ja enter test mov orb ret movsb cltd mov (bad) neg add outsl mov inc or dec jl push insb js add pop add movsl stc fcoms int3 bound ss or push add gs mov xor (bad) arpl jns mov cmc mov clc mov lcall cltd add push mov adc cld fs testb and in cwtl lahf add std cld and mov gs pushf adc aaa inc xor dec jle inc mov cld add test sbb adcl cwtl cmpsb sbb add es jae mov sbb (bad) or xor lock sub pusha cli into sub dec aam hlt lret jae pop and mov cmpsl mov jnp js jecxz push add iret in sarl lds pop dec mov xor (bad) mov cmp add lahf mov inc mov fwait cli push add mov xor add xor sub rcrb leave jbe push cld lea enter dec jbe xchg loopne and mov xor xchg std aam ret sub jno pop lock mov and pop les xor outsb enter mov add inc push push mov xor sbb push and movzbl inc or pusha cli es loope jns jo mov imulb fsubl cmp lock pop mov call fadd dec inc dec nop cmp push xchg mov rcl or push mov pop mov test mov mov lods push xor loope fadd mov xor dec xor add and out leave pop push xchg add cmp or stc pop loope cmp test push jo or cmp dec adc loop add push adcb cld test dec jo fnstcw inc inc sub mov mov daa mov adc nop add fisttpll inc dec jno pop dec stos (bad) adc shrl pop and fdivl enter cld xchg lds jp mov test push xchg and fisttpl das lds sub inc shlb push inc push inc mov push in lock sub push arpl or (bad) sub cmp sub lock and or test add std int or insl sub (bad) push lods mov lret sbb add divl adc daa nop stos mov mov stos js inc adc es es out and or dec xchg jno pusha xchg leave mov nop dec xchg rorb (bad) (bad) push aas xchg pop add test dec mov xlat fsubr dec add nop adc clc enter or fs xchg dec adc push dec xchg xor push or in fsubs xor mov lahf ljmp stos movsb jnp nop les dec mov xchg stos push fs les lcall ret jnp,pn shr stc mov bound add add pop bound dec ret movsb les das dec add insb inc mov add neg cld cs push add pop pop push shlb in xchg sbb push fstpt cwtl adc or (bad) mov mov fcmovnbe addb pop cltd sbb mov sbb movsl push mov sub ficom add xchg and icebp jb and daa js add jb sub xor mov mov (bad) dec mov add scas jmp push fdiv cmp push mov jge xchg jb cld dec xchg data16 jo (bad) xchg test (bad) push sti in scas cmp clc cmp (bad) js xor das popf je cwtl or dec xchg repz pop scas sub sub push loopne pop pop pushf nop out xchg pop mov xchg mov test mov fisttp popf dec fmul sub fsub (bad) xor jle jmp add push xchg (bad) mov enter les test shlb lahf loopne jg jnp push adc pop adc sahf pop lret sahf lods mov in adc and jmp and or stos xor inc cli or mov cwtl dec mov shll subb and nop inc add pushf insl popa mov xchg pop or lock (bad) mov ljmp lock popa or mov jbe aam xlat gs enter addr16 mov fisubl das adc sub mov imul pop cld int3 test je adc outsb and inc mov lock test cli lock sub adc loopne or inc push les xor add test (bad) add xorb mov in push add enter sub cmp nop cmp cmp cmpsb js xchg (bad) aam pushf pop or sub (bad) aam outsl or andb insl mov pushf popa pop inc cwtl ret jecxz and or pop add xchg into fmuls cwtl sarb and ret sysret adc sub loop or in fisubl sub xchg dec mov xchg les call nop fs mov repz sub xor xchg (bad) in popf sub fnstcw mov popl xor cmp fsubrs ret jae xchg mov or push jecxz dec inc lods (bad) pop pop fs cmp shrb mov enter or je pop inc pop xchg cmp or stos pop cmpsl dec xor sbb add mov add daa cmp pop imul cltd repnz sbb adc or xor xor inc xor pop popf aad and leave add push jbe xor inc sbb aaa aas mov movsl cwtl mov xchg loop jg or or lcall mov xchg call test or rcrb add pushl xchg cmp xor nop in mov inc je mov enter jns lods pop mov and fs inc repz mov aam rorl ds daa stos fsubl and jo ret adc lods inc jo or push in mov mov int pushf cmp out push or es mov xor xor and xchg add je mov xor dec fbld jmp sarb mov or shlb adc repnz xchg lea mov mov cmp in loope add stos jmp fsts adc sbb fcmovnbe cwtl adcl dec insb psubb cwtl and fimull pop dec pop loopne cs add jb xor xor xchg adc mov pop mov pop xlat ds sub mov sub pushf leave xchg jl push popf int or sbb push pop jbe or mov inc push in outsb pop xchg (bad) fs xor or jno or push loop popa ret rclb (bad) xchg out xor cmp inc mov jge add jp lods sbb outsb sahf mov mov mov add mov popa pop in push cmpsb fwait push shr je cli mov sub mov xchg mov adc outsb sub push inc push add lods stos mov (bad) imul pop sub in mov add pop inc dec cltd divl mov add inc popf add (bad) xchg wrmsr fild or and push (bad) or adc push xor jp cmpsl sbb jge lret push je pusha jg cwtl (bad) dec adcb insb and sub inc sub xor push pusha loop xchg mov js,pt std inc inc adc lods mov fiaddl cmp pusha ss ret fs rcr mov pusha repz in insb (bad) lock (bad) ror pop xor mov aas mov stc pop icebp loopne xchg popf mov sbb out xor (bad) push dec sbb cmpsl xchg mov fistpl or jno,pt mov mov add loopne fldenv es aas xor hlt test popa cmc add cmp push test leave lea xchg or (bad) cmp inc in aaa add out pop or mov jno sub test test sbb notb rcr (bad) out in ret lea adc pop std cwtl out inc aam cltd pusha xor decb pop ret pop and sbb lcall iret add dec add jle dec cmp outsb mov pop xchg inc push rol rolb lcall hlt scas adc add (bad) out sti jbe mov push test inc mov lds mov dec xor mov push add push shrl mov gs xor rorb jle and loop out sub mov fsubl bound xor cmpb aaa ret dec xor pop pusha ja out pusha dec and and jno sbb add (bad) hlt aam mov cmp xor int loopne ss mov jbe stc push push sbb or dec dec inc adc dec mov addl pop sub add sahf sub inc popf pop mov inc xchg enter test mov or inc dec and inc add fst lock jb clc or cmp out cmp sbb jge xchg push (bad) aas fs jl pusha xchg cmp push mov iret push sbb xchg stc or adcl loope push sbb pop mov or insb adc mov ds jmp repnz pusha mov inc insl (bad) jno mov pop and out hlt xchg xchg clc mov jnp imul sub sub imul shlb mov dec jbe add pop mov mov sub incb add lds jno xchg rcll sbb xorl mov fld mov jle jg add mov mov es xor icebp inc mov hlt add cltd scas je xchg xor push sbb jp mov and or mov out js fildll data16 cltd jmp shrl add jecxz roll mov sub cmovg sub push outsb cmp addb rorb lea adc xchg clc leave cmp jbe,pn outsb or jns outsl sub int stos dec dec ss sbb and cmp test imul or pop pop sarl inc sub push in insb and lret loopne push push (bad) in and jne sbb pop push fist sub notl enter or sub insl rorl mov push cmp or jo pop xchg dec inc inc adcl pusha cmp and sub push cld int3 dec cmpb xchg out test push add dec or push insl test pop sub mov fwait pop jl imul jno xlat stc push mov fst mov add lock leave int3 or mov (bad) clc jmp push push add rol in fistpll add inc mov stos (bad) test repz xor jmp sbbb jnp sub mov or xor sbb fsubrs pop jo dec push jl xchg ret xchg sar ret push add imul cwtl fs mov jl mov add jecxz cmp inc and cltd xchg test push test lods imul lods pop inc add pop mov mov orl loopne pop or call push stos pop fldt pop cmc sub test sti cmpl push repz lds ficom xor cwtl cmp and push mov mov add sarb cmp (bad) mov mov js js sub (bad) js inc notb push and pop jo nop test xchg cmpsl adcb mov insb add mov repnz das sub cmpsl ds sub ja mov inc and fwait addl mov imul sbb xor xchg js or jg jge xchg std push jle bound xor push dec xor out (bad) mov scas push lret orb pop push xchg lods add fisubr (bad) xchg add push ret mov ror je mov mov sbb or pop dec popa cmp and add aam mov dec fdivs mov xor das insl xor arpl cmp add vmovupd scas retw gs add mov or pop mov or cmp arpl mov or cwtl push pop pop mov aam out (bad) repnz cs dec test arpl xchg add outsb push imul int3 je xor or ret xchg mov pop popf mov add sub shr mov jmp mov cmp add pop es sbb push sbb les movsb test push push ds push jl or push push xor push daa sub stos je or push pop jmp push add ljmp les xor pop das jmp jbe mov dec mov mov push cmp (bad) push sbb mov lret in adc jle push push int cld rorl fcomps push scas jo scas dec add aaa mov (bad) lret rclb pop out add les cmp cmp in lods jo push out in xchg mov sbb fadds jp addl or shr cs sbb mov pop inc call nop insl in out cmp arpl mov jno addr16 push outsb repz or popf or or push rolb out mov xor push test jo cmpsl dec enter add cmp adc inc pushf in mov adc pop jl add arpl ret cmp mov mov or jae jb pop shrb pop movsl mov xor lahf mov pop (bad) pop sbb adc or fdiv (bad) or sub jge or andb aaa adc inc iret add push dec movsb add jl inc enter in out movsb test push adc inc sbb loop orb (bad) adc pop sub pop mov mov mov addl push outsb sti insl jno mov and rclb std test add add pop sub add mov pop sbb cmp sub lock xchg mov ljmp adcb add lret (bad) mov and clc cmpb xchg push sbb call or push (bad) mov inc or jns xor adc pushf and adc jecxz dec push or cwtl and in dec andb cli push xor movsl js mov or jno nop push js push ret jge pop imul cmp or gs pop jmp xor (bad) ljmp mov mov fldt out sbb orl movsb call push mov subl and mov xchg cltd jns in fbstp adc push cwtl rorb test in or push xchg nop jns jnp or or loopne movsb xor mov jp push (bad) jl fs cmp movsb add inc inc nop jo and sub sbbl ds push add dec lock xchg js and subb lock adcb adc or pop lock aad xor scas fld1 scas jmp mov push or cld xchg outsb stc sub les dec cmp or repnz and mov xchg add dec sbb (bad) test hlt sbb pop lock imul xor das cltd push cmp add mov add mov test les inc or xlat call jl sub nop jmp inc cmp pushf sub jge (bad) mov (bad) adc mov hlt rclb enter dec pop sbb inc jo xchg test inc or xor repz icebp insb (bad) mov adc ljmp xchg divb cld and ss adc lahf push adc add or xchg xchg cld or arpl cmp and cwtl fcomps nop push js adc pop jecxz inc mov xlat cmpsl les in push stos push or add insw adc out adc add xchg stc xor jmp cmp in ljmp popf pusha xchg jno sub (bad) stos and in inc outsb xchg dec pop xor cmp pop add inc push data16 xchg pop jl sub repz mov cmp mov add cmc out scas inc mov cwtl addl cmp loop stos or push ret mov sub or out add inc mov xchg ret pusha mov mov add mov push xchg addl clc ljmp orb mov sbb dec jb sub mov add mov add pop sub vpaddsb push adc and nop dec mov or imul dec inc (bad) icebp movsl fsts data16 adcb mov and push jl cld xchg dec cld sbb mov enter lods dec rolb sbb mov mov lds popf or lock (bad) nop call in cmc call cmp sub hlt adc adc sub pop pop test add rorb xor lods call jl dec jnp clc add lds int3 (bad) insb fs xor push and inc call xor sub jmp fadd or js mov das adc push and cmp (bad) (bad) mov xor lret gs push stos push shrb rcl adc push mov push ror stos xorb ds iret xlat xor and mov into notb add loopne pop jp xchg add movsb fnstsw out hlt xchg cmpsl inc jno mov sbb and and (bad) mov add push xchg sub lods mov cwtl push add ljmp jecxz loope add adcl and lcall jnp push or ret add inc ficom insb mov adc popa fimull pop or xchg xlat pop sbb add popf mov xor mov sbb inc bound mov (bad) das xor or and add (bad) out loop add jae fsubrl dec cmp pop xchg pop les xor and add in movsb or add push sbb mov in pop mov add in inc add rolb in test push das cmp inc je addr16 mov and aam outsb jecxz inc add rolb jle dec bnd push loope push movsb pop in dec and mov int mov cs das mov shll adc inc cmp sbbb in add mov shll aaa scas adcl sbb cmp xor pop pop mov js out ja xor add insb or sbb pop push pop xor sub and nop push ja nop sbb mov pop adc mov inc pop sbb adc pop insl ljmp or clc arpl mov inc (bad) repnz jnp pop lcall jecxz inc mov cltd loopne addr16 adc jl js sbb gs xchg cmp mov leave dec out mov ja inc cmp test xchg cwtl test inc add add sbb fs ficom or dec mov sbb jmp enter rolb sbb cli or cmp repnz subb and nop js cmc (bad) clc jne or js jl inc sbb jns nop lret (bad) or jne orl add mov (bad) jne mov mov daa add (bad) mov push xchg int add imul stos test scas mov xorl clc inc add ljmp js cmp sbb xor pop out adc int pop stc cld add mov dec outsl sub xor arpl cltd mov into sbbb sub sbb adc je arpl jns sbb pusha adc sub mov xor sahf shl mov add fwait xor mov mov push mov rclb jo sbb mov add (bad) cmpsl push adc int3 and add adc jb cmp adc sbb cmp inc pop loope sbb or sbb lea (bad) push push int and inc add mov pusha or jo mov xchg lea or xor add inc and sub arpl imul mov sbb xor or push cmp dec xor inc push loopne mov pop mov or hlt mov xor mov sarb adc pop cmpsb add jl pop subl add enter ffreep sbb in imul or pop dec adc mov xchg xor lcall aad sub xor push and cmp js or mov or xor rorb rorl cli inc adc sbb pop xchg sub or hlt xchg sub cld repz test pop xor lret std mov push clc test add test inc dec je and sbb push mov sbb sub push dec mov adc pusha dec add xor xchg mov pop ror add nop decb sub outsl or mov lahf and sbb mov out mov lahf ret es add rcll pushf jno jmp push and frstor int3 mov mov push ret push insl cmpb imul ss adc xchg dec adc mov add pop loop or mov gs insb dec dec mov data16 pop shll loope add sti jmp inc fimull sub fwait mov push scas xor loope add in sbb dec jb in and add mov xor jg and push dec sub cmp or insb sub cmp push sbb pop xchg pushf pop xor call ret incl faddl sbb mov jo lret dec (bad) dec adc or xchg lcall dec movsl xchg inc or push sbb ds jb inc fninit push sbb xchg push xchg xor addb xchg adc push test out pop iret push jo dec popa cwtl xchg mov dec daa sub fstpl inc ljmp js jl or insb adc push ss add cwtl mov xor cmpsl call out mov add or or cbtw hlt mov sub sub rolb pop outsl push xor push (bad) adc call int3 and adc mov add sub fiaddl cmp inc xorl mov push int data16 rclb mov adc xchg sbb popf (bad) pop or mov movb std movsb adc imul ret inc cmp dec pop push rorb or mov mov ds or popa sbb add mov sub xchg push dec xchg mov sbb data16 dec sti mov push and clc das lahf std cmp cs cmp sar pop xor roll adc mov pop test and adc sub push outsl inc pop xor rolb xchg mov cwtl pop dec pusha xchg pop jmp pusha xor ret sub pop or jno adc mov aad fldcw sbb mov movb fs push add popa jb sub xchg cmp bound adc and es cltd ss sbb mov aam push dec or cmp dec aas or test out sub sub aas sbb inc cmp add aad add cmpsw cltd imul sub rclb jae push cld in jne add ret mov gs (bad) imul mov add shrb loope mov sub push add xchg lods xchg movsb jno enter loop cmpb sub sbb sub fsubs ja hlt aaa xchg add add push sbb repnz movb int mov add (bad) inc inc dec les enter ret mov or stos cs data16 rcrw lds add push andb loopne xchg cmpb pop jl ficom lods pop pop sub mov or fnstenv dec daa cmp stos loope (bad) (bad) cli push into xor sarb push pop sub ret pusha mov inc andb or mov sub (bad) rcrl (bad) pop fwait jbe aas lret xchg insb push insb ret mov sub mov push iret sahf cld es (bad) (bad) jb mov add jae push popf xor sub adcl stc (bad) cmp adc inc add repnz xlat orl mov or std sub aas sbb in lods pop add ds test xchg in sbb clc inc inc cmpsb pop mov or xor mov jmp popa or sub shll xchg es or and push cwtl fisttpl add (bad) jmp pop or sub add ret jp or xor fstpl mov xchg pop (bad) push or imul (bad) and jne sbb fist pop push lahf and mov scas cmp js fsubrs (bad) fcmovnb inc adc and or push cmp jns addr16 xor cli pop (bad) rorb mov xor adcb jns sti sbb jle scas fisubl lahf jae into sub outsl push arpl clc dec in ret mov hlt subb je xor inc add (bad) jmp pushf jmp pop cwtl inc fldenv daa int and pop mov push popf pop shrl add inc xchg dec dec adc jge or push movsl (bad) pop inc or daa cmp dec inc dec push sbb in dec push lds out and jo or (bad) fbstp movsl sbb sbb icebp add push sbb adc fbld scas xchg xchg rcll (bad) mov and sbb jge cmpsl sbb in in add clc push push sub inc pop sbb fwait add push (bad) dec jo xchg jbe sub insl lahf and loopne sub dec rcrb sbb repnz (bad) ret pop sbb mov cwtl pop leave add orl and push xor push lock pusha sbb pop xor mov sbb nop push xor mov mov fimull push shrl cmpsb ret xor mov xchg rcrb push iret jg xchg repnz fldenv fnop sahf add inc xchg dec sub xchg or lret mov pop jge cmpsb inc fidivr adc add jns xchg sub loope fildl fdivl cmpsb mov es lds mov pop xor mov add push mov pop call orps pop xor pop pushf push mov add call pop out inc (bad) push add js pop decl shrl addl sbb sub rclb jbe push js mov out arpl je xor cmp jge inc ret (bad) adc addl leave push sbb sarb sahf and nop xor pop out sti cmp rcr xchg mov push mov mov mov inc cli in aad fisubr into int flds sbb add loopne dec add add inc add pop sub pop sub push popf push shl mov sbb mov neg lods ljmp inc push mov sbb lret (bad) pop pop fs sub pop xchg out adc mov mov inc xchg xchg enter or popa inc or mov xchg jae mov sub test mov pop test dec pop pop sub (bad) sti call adc jbe jmp mov pop pop lds packuswb (bad) inc out jecxz mov inc scas test add push nop outsb les dec jns bound fbstp popf not push or adc inc cltd fwait pop push std sub add xor mov add xchg fs pop or test roll add xchg sub insb xchg pop and test cmp ljmp adcb pop add (bad) jns pop dec (bad) ja push inc cltd inc sbb dec mov call xor mov pop call xor daa and pop cmp add sbb iret lahf out mov pusha fsubs push pop popa fistpll adc mov orl or (bad) jo pusha (bad) push imull cmp aad gs pop xchg xchg mov push es pushf jge sub and dec loopne jbe out pop xor stc add jne push mov imul and or sub sbb jmp sbb out cmp or stos adc cwtl (bad) push xorl xor or ljmp push xor cmp jl imul xor fwait insb popa dec lret xchg cmp in push mov andl sub mov ret movsl mov (bad) mov mov stc cmp xchg jmp push dec jne lret xchg leave or mov xorl mov jo lahf pusha scas outsb inc adc jne or jecxz and or inc cmpsl daa ds sbb xor inc popf mov mov xchg leave push and movsl iret xor popa mov add aas mov cmpsb xor pop sarb sub pusha mov mov cld and out aas mov dec nop ret mov xchg (bad) (bad) adc mov ja,pt test mov loop movb pop divb sub aam iret arpl int3 push in push fwait loope jae push clc push push push pop insb ss dec push adc adc pop jmp lret and pusha push adc pusha pop xor add inc bound fs push push push lea or jmp sbb push add ljmp push int xor das adc in xchg push popa dec mov in push mov xlat inc add add add fs notb and out mov (bad) push cltd pop ret out pop enter dec or cmpsb xlat add aas int or and xchg test mov push fnstsw xor outsb mov daa mov mov push push inc xchg shlb add pop push push xchg and pop fisttp nop cmp idivl orl add add (bad) pop imul jle call dec and jmp sub lahf mov out (bad) mov mov or int adc push xchg add test mov xchg cmp dec add and test or ja dec jg cmp push in inc push add popa push mov lds pop fmull pop pop jmp mov (bad) push sbb adc ds xchg ret pop jle icebp hlt (bad) dec loopne sub mov cmp and insl xor or int add lret orl orb jle aad dec adc js out incb jmp sbbl iret test rclb popa (bad) or stc jp xor jp ljmp in dec insl pop add fmuls sbb ret daa pop mov cs sub adc xor push mov or inc pop pusha xchg or ret push test add push lret (bad) xor add push popa mov push daa daa insb push std jns,pn test hlt pop repnz sti jp bswap mov and pusha adc pop aam or or add xor in jns add in push push rcrl add or aas pop sub das inc andl inc test jae adc and inc cltd shll nop inc icebp sub fimul add and leave int3 subl adc push rcl jle sub addr16 and xor daa dec mov xchg mov pop inc lret arpl add dec xchg int and inc sbb (bad) emms pop add lret xor or jg adc mov imul add aas add popa jecxz addr16 mov xlat dec sbb cmp xor (bad) out inc add mov mov aas pop sbb push cmc push loopne add pop test mov adc cmp inc add sbb pop dec mov push insb loopne dec xchg inc pop mov xor jmp or cmp rolb add cmpsb in (bad) (bad) pop push cmp and add mov scas pop and push test push or lea jge push and shrb ret push mov pushf sub add test sub xor add xor xor or mov sbb punpckhdq scas push xchg push xor movsb sbb pavgb clc bound test xchg cmp add pop ret jmp inc movsl jne outsl mov and mov je sbb (bad) loop add call mov mov in xor insb cmp mov fwait push mov sub inc sub es sub ljmp into dec mov xorl dec add dec jmp cmp test adc mov push and mov je test ret xchg cmp xor push aas pop popa add dec mov mov or sub popf mov jmp mov (bad) xor add or loopne comiss add (bad) sti jb (bad) dec in dec inc xchg mov add add je sbb rcr add xchg cmpsb xchg arpl add fisubrl pop bound int gs or movsb pusha push cli cs call sub icebp mov lahf aas dec jmp add popf push mov cli add rclb pop pushf pop or mov xchg push cs call iret loopne jae add sub negl mov jbe push call cli add sub push lret cmpsl inc xor insl add sub adc add (bad) (bad) xlat dec push lock add std push mov sub mov inc mov xchg movsb andb xchg or jae lods nop adc pcmpeqd sub jnp sub js push nop xchg inc cmp test jae inc xor sbb and sbb cli pusha xchg pusha pop add adc and push (bad) nop sti add mov insl add dec xor push dec in js push inc xor stos icebp push lcall mov mov mov mov and in popa sbbl mov mov (bad) xchg sbb sub add ret jl dec je nop and or stos add xor mov aaa inc xor push (bad) pop loopne and jle mov nop negb jge sbb add inc jae sub ja xchg xor test pop sarb cmp mov loop sbb mov xchg out sub cmp adc jbe addl sarl adc sbb ret xchg or xchg sbb mov mov popl icebp mov add dec lcall adc dec xchg sbb dec jno cmp or call jno adc es and lock cmc mov and je dec popa mov adc rolb xchg loopne add mov mov nop pop (bad) xor xor sti dec sbb cwtl fldenv jnp xchg push adc push in adc xorb jle and imul movsbl mov add push fsub push or mov push sbb xchg adcb sbb mov adc push insb cld call pop inc nop sbb jl add jnp and xor add dec inc dec fimul ret inc pushf or pop mov sub xchg xchg js mov sbb mov add pop lea repnz mov dec adc es orl xor add lea mov in mull and sbb mov adc outsl cmp mov pop call pop pop sub inc mov aas add mov ret dec scas xor popf xchg inc sbb add sub fs push inc clc dec jae mov mov xlat cmp (bad) fdivrs enter dec dec pushf fiadd cmp push xchg les or xor push cld (bad) out enter cmp mov push cld movzbl mov and add xchg push pop pop scas jnp test repz mov sbb popa xor testb subl lds divl add mov mov or call mov sub in mov xchg push sub sbb mov insl mov inc jl xchg stos jo pusha sbb out sub inc jns mov out add aaa adc cwtl cwtl add pop or add xchg push call pop adc outsl pop xchg lock push add mov ret out pop sbbb or adc test nop add jno sahf shrl jnp xor hlt xchg fmuls jg loop sub je jb and fldl jbe lods icebp sbb sub mov push inc mov movsb test cltd add xchg subl sub (bad) mov (bad) inc pushf xorl shlb push xchg sub insl int3 (bad) mov xor push sti mov and xor test loop adc call cld xchg das sub clc mov xchg mov (bad) add sub (bad) jo pusha or adc scas push (bad) sbb leave aas push cmc push xchg add inc mov push nop sbb cli adc inc fs mov mov mov cwtl cmp sarb push xlat inc pusha test push mov pop or pop neg les in pusha jb lock lahf pusha stos sub mov mov add sub mov pusha scas jo pop mov pop icebp insb or movsl add test arpl mov sub in cld popa pop sbb mov push clc pusha mov add xor push popa mov outsl sub xchg add xchg (bad) ds push test mov mov jo lods int3 adc adc call or jp cmp (bad) cli mov loope inc cmp lods mov in add hlt add lcall or push jno sarl and pop aaa das cwtl or push or push mov inc movsb in and adc test ljmp add mov and or outsl inc mov xchg inc stos (bad) cmp leave cmp repnz inc push xchg inc adc push adc scas (bad) fisubl out inc sub push pop push lods mov pop sub in cs or stos cmpsl lahf dec add stc dec in mov test (bad) mov dec aad inc cld and add push cli mov jmp mov mov leave imul inc pusha xchg pop (bad) fcoms xor inc inc or adc (bad) jl movsb test jo out and mov nop test lret pop and jnp cltd repnz in push faddl sub imul or and add push call dec js clc add push stos sbb mov pusha or jbe aam insl push mov icebp hlt add nop in sbb jnp arpl and sub lods xchg sbb rorl mov es in dec and pop add aam test rcr sub pop jnp inc pop cmc cmpl add cmpsl sub and hlt inc mov xor lcall xor fwait movsb (bad) jae or add (bad) out jno push addr16 adc call mov jo xor add push movl or in mov sbb jnp xchg or fdivrs ficom xor add push add bound dec mov or mov push push pop movsl (bad) pop xchg call es sbb ds idivl mov inc dec sbb (bad) subb gs mov out xor cli cmp or stos sbb adc sbb pop call insb add jnp mov mov mov mov sub mov out cli jo mov sbb pop (bad) repnz xchg fsubs add pop sahf lea jns in sub movsb in mov adc test out test pusha mov pop bsf out mov or or scas sub nop es pushf fs (bad) lock jmp cltd jle inc xor adc repz imul and xor inc mov int3 inc mov pop xor cmpl lods add imul xor xor enter or jae and add jns das mov mov sar jnp or xchg jp cmp push mov adc dec aad popf add imul pop imul outsb fnstcw stc lock sbb fcomps shlb nop lock push scas cwtl push insb or mov jp sub push in subl loopne add pushf add inc mov lret and add or enter xor inc push loopne pop lock inc add cmp cmpb andb jl pop cld jg shrb test xadd xor in leave imul push mov jns xchg mov cmpsl shrb sub popa or inc aaa mov daa popa push mov jmp inc adc mov lea (bad) cmp push cld sbb push add hlt arpl or cmp xchg jo or jle xorb mov dec fimul mov fcompl jnp and repz push addr16 add lock cmpsl ret and aaa cmp iret mov mov and or jo xchg out nop inc adc in xchg and aam mov cmp les inc pop sub jb movsl data16 push xchg xchg or bound pop cmp sub call pop and push out or xlat inc xchg jns pop aas bound pop mov rclb xchg push ljmp and lock sub movsl add add xchg popf rclb add push roll adc pop push mov push xchg pop mov out fsubl pop cli mov rolb ss ja adc dec or mov inc mov add jnp in cwtl or pop scas pusha jl and test sbb and jle fcmovnbe xor and pop push jp xchg push cwtl leave mov or icebp and or in fs jg mov adc test bswap cld pop mov cli sub orps loopne adc push and sub push and mov imul xchg or adc fisub mov push dec ret and out or rcrl loop add mov pop cld inc pop in mov add (bad) mov pop add cltd (bad) enter add cmpsl test mov fs pop lods movsb add pop sbb (bad) cmp in or cltd push rolb mov adc and add jge sbb jns mov shrb mov push xchg add add (bad) fsub sarb add push xchg sbbb sahf mov push loope xchg repnz into cmp add dec aas clc fstpl push add mov jne pushf lret push loopne add mov inc xchg out add pop mov xchg add mov xchg add (bad) and ret pop pushf xchg cld fsubl jle pop sub stc cmpsl cmpsb mov mov ds imul out mov push jmp pusha dec sti js add sub cwtl xchg (bad) imul repz leave add pop aam sub lock add in repnz xor add add orb lock sbb pop pslld rcrb xchg into fcoms add leave dec fistl mov frstor incl jns add (bad) bound add adc jmp xor leave adc fidiv addb push xor mov mov adc inc add xchg repnz ja mov mov add mov push inc add fwait (bad) cmp add call sbb imul gs sub aas push jge add (bad) add push push movb xchg stc xchg and rcrl rcll in jp add out stc mov mov nop push inc or sub scas jle dec mov aaa js xorl (bad) mov add adc inc push mull pop push movsb add movsb sbb jne inc and data16 ja lcall es ds aaa cmp rclb push xchg mov data16 in dec sub mov pop or jne jnp fcmovb jecxz add xor cmpsb leave lea jo stos xor xor call insb mov fwait mov pop cmp cwtl cmp adc mov cwtl jle pop adc add pop test and xor aam out daa sub enter sbb sub sbb movsb test fsubs inc sub or ret mov push loopne fwait ret rol xor inc fisubl adc popf pop add int pushf mov dec das or out cmp xchg enter sbb fwait mov sbb push adc adc iret cwtl mov and (bad) ljmp pop clc push dec adc outsb lds loopne and cli addb (bad) xor scas aaa cmpsl inc xchg lods xchg inc xor lods test and or lock adc and add fs fildl add int out and pop js jecxz jo and cmp xchg dec or in (bad) stc out ja pop add adc fsubrl test les or pop push mov sbb insb (bad) icebp shlb or lds les mov cmp add dec fwait dec cmp repz push rcr cmp gs and leave xlat xchg push jo jg dec aam aam cmp adc xchg popa int3 sbb sahf adc inc or dec notb xor adcb xchg stc xchg mov loopne cmp pusha enter (bad) or imul jmp xchg or arpl adc ljmp loop cmp rolb (bad) cmc mov shlb adc and in add mov iret add push rorl sarb pop jae adc xor and jmp test in pop push and push jb sbb insb adcl outsb mov jae jle and pop mov mov or lcall push dec mov mov push lret movsb fdivrl dec stos lcall mov pop pop mov and (bad) (bad) aas xor add cmp adc add jg flds sarb sbb clc mov push outsb dec pop and pop test test inc enter inc mov out jno add sbb sbb inc sub xchg dec stc adc movsb mov xor stos outsb mov ror dec xor imul icebp rcrb pop test imul xor lret orb sbbb and pusha push mov arpl stos leave pop ljmp push add xchg lret cmpsb xor in sbb aas iret cwtl nop push shrb pushf jns loop xor jmp dec jo lds or lock mov sbb push push into (bad) jo addr16 mov mov sub loop add add outsb outsl das sub je mov mov pusha sbb inc mov push push nop adc and jno inc vcvtsd2si (bad) lock jl adc push cmp push adc insb mov mov xchg test add aam aaa enter mov insb cmp mov xchg sbb jno outsl sarb mov cmp xchg rdmsr push adcb mov insl adc rorl xor and inc or das xchg cmp pop xor push adc sub int3 stos sar mov mov pop aad inc arpl ss inc popa or outsb adc jne es adc rorb sbb ret adc add push and aam rorb push iret test push into bound sub lock loop pushf mov cmp lock divb std rcl mov fs lock lods or inc sbbb jl les fcomps xchg push jbe adcb dec out in push aad test stos pop dec inc nop xor jne aam xor mov adcl mov xor mov xorl xchg idiv js out pop sbb or loopne imul xchg add mov out call push test sarb popa pop jno mov ljmp mov clc lods cmp popf sti mov adc stos or mov out imul (bad) scas dec aam lret cmp and lea int and mov add sub mov rorb and lods inc mov movsb mov movsl pushf call loopne (bad) mov dec and inc cmp sbb add and xor jg adc adc or or mov movsb clc jmp inc inc mov xor nop xor push xor inc gs les mov pop sbb into loop xor or inc dec xor movsb pop rcr mov sbb jb out pop popa ret mov rolb add push loop xor cli inc orb or dec leave ds lea lret cwtl jae lahf xchg xchg mulb mov cmp cmp loopne sbb test out repz or pop push das cmp out pop fdivrs lods mov lds dec cmpsl adc and aas (bad) cs andb add (bad) int3 ljmp loopne inc outsl mov daa add or mov mov inc fmull mov in add xchg repz in xchg lock push or cwtl lods pushf addl out cli sbb dec push adc mov ss (bad) in lcall add arpl int sbb mov cmpb stc call mov cmp sub and pop jg leave loop fcoml nop add mov inc sbb and jmp mov outsl scas and mov stc push xor leave inc inc loopne sub add pop sbb cmp adc (bad) arpl test mov inc rolb cmp mov or inc xchg sub jmp into out adc int3 dec loop fnstenv movsl fcoms fs push push add sbb neg mov aam lret lds pusha lfs lret and dec adc dec jae lock sarb ds imul cmpsb push add lods je aam add jg push jnp jnp lcall (bad) mov lock xchg jge mov dec jbe mov and xchg add xchg pop sub cmc mov jbe inc movsb test sti push insb shr ljmp out push sbb fsubs xchg jl dec sub dec mov cmp lcall push ljmp pop cmp push mov add sbb mov add jnp or movl cmp add stc nop pusha or adc fs mov daa mov and jg cwtl rclb xor lahf pop xor aam test mov mov and stos lds mov imul loop call mov les jb add inc and sbbb inc (bad) enter popa test cmp out xchg movsb and pop jp mov mov pop and ds fs lahf dec sti mov jecxz sbb jae push and inc xor aas sbb stc push xor outsl and stos insb test dec mov sub test bswap inc mov aam mov lods test aam loop add cld dec adc adc push add or lock jl inc lret (bad) and xchg cmp lea xor cmp int3 jo add ss popa iret adc fsubrs shrb jmp or pop cmpsb add fist sub adc repz les mov lock adc mov add cli xchg mov enter jl xchg mov test dec fs cmp shrb addr16 ljmp pop adc mov (bad) je mov mov pop lods add or rolb sarl (bad) sub repnz sub jo stos cmp mov jo or clc or xchg sbb shll dec js add arpl movb or xor leave inc daa jmp pop adc dec and fiadd jbe and add inc pop pop js dec les divl ret mov ret mov xor xor or lcall mov std mov inc (bad) push sbb cmp in jnp adc jae leave push cld movsl mov dec push lock cs test mov or mov pop sarb int3 loope mov jp mov cmp sub jle sub cmc adc out jp pop hlt dec (bad) xor mov jge mov sub test add stos lods cld jge xchg cmpsl mov xchg inc xchg sbb inc pop dec sub or push adc add pop jae int popf adc daa lsl addr16 sub rorl sbb cwtl jecxz bound addl loope pop add cld test mov pop fadds sub lcall (bad) call add mov (bad) dec daa rcrb loope insb nop push dec adc rcrb inc jge mov cld jmp adc pop and adc xchg jbe add xor xchg jns dec xchg nop shlb aad hlt cltd push out into push jo dec data16 push (bad) mov loope xchg and lret imul in addb rorl mov mov sub pop sub add xor mov cmp loop pop adc loopne out in adc sub roll cmpsl xor jnp push fistl (bad) test or lret push fldl adc test lcall xor insl test fcmovnbe pop jo sub sub cmp cmpsl xlat lea je pusha popa sub ret (bad) mov pop add (bad) gs sub (bad) hlt inc inc bound pop lods clc cmp inc xchg mov ficom jp or ds pop rclb xchg sbb add daa stos lock and repz orb mov out repnz fmuls sub xchg fwait push cld cmp cmp rcr push xchg dec add inc sub fcomip mov aad dec push jmp je ja dec inc enter xor jle (bad) adc add mov sti pusha hlt test add popf lods inc push fdivrs mov inc cli xor (bad) (bad) call pop enter js push add and mov or cwtl adc xchg xchg sub sub cmp bound subb arpl or mov int3 cmp scas dec dec jno and mov sbb outsb xor sbb mov inc or js jo lret mov addr16 mov ret dec or adc ss mov mov out dec enter or or add repz (bad) aaa aad cmp cmpsl cmpsb mov hlt enter mov shr or rorl add and int pop mov and ficomp xor xor mov pusha cmp add adc call jmp cltd push jbe xchg jge xchg enter faddp push jae lcall fcomps mov push arpl ja pop sub cmpsl or mov or and pop ds inc add movsb adc mov xor mov arpl std mov add aas je inc mov inc xchg repnz or sub movsb ret sbb sub das jae sub push pop subb aaa mull add (bad) cmc jbe push push lock imul sbb es imul ja scas push xchg mov dec sarl sbb shll dec mov mov or fidiv adc loopne xchg push adc mov rcll imul pop out test ror pop insb jb push pop lock xchg adc (bad) mov into add mov je hlt (bad) mov sarl loopne push jg,pn inc adc lret or sarl mov mov cwtl add inc addr16 fnstcw test lods push out enter dec pop push loopne inc loop add cmp xor cmp leave subl inc xchg cmpsb pmulhuw or subl xchg push je xchg adc outsb and insl call sub or sbb jle mov mov cmp xorb outsb add adc mov cmp inc push insb adc adc cmp nop into xchg cli add mov or add sbb fidiv and xor sbbb dec mov and xor fs mov inc push push adc lret pop je push push push push inc nop inc (bad) or xchg and les pushf add xor xor add xchg mov dec fcoml mov add test or mov inc pop test out pusha ret and lahf pop add mov loop lcall adc dec dec dec cmp test lock dec outsb and aam nop test pop add pusha pop inc icebp add push jle js inc loop test sbb push pusha ss xchg or mov testl sub enter (bad) push test xor pop sub jno aad or cmpb xor mov jmp or adc jb mov push adc jmp cmpsb sbb xor xchg inc mov mov pop pusha shlb and in mov mov sbb sbb jb clc adc add dec lods enter cwtl xchg mov inc scas lahf jbe jmp mov xor dec xor imul pop in dec sbbb mov pusha mov push pusha jl pop or pop sbb out and aas add cmp bound repnz stos cmc test mov orb cmp and push leave pop je rcl (bad) dec (bad) push scas sbb push rolb movsl push inc sub sti cld fwait xchg cwtl cmpl cmpsl inc inc pop insb test or inc scas sbb and je sbb fdivs and jb pop in addr16 outsb outsl inc mov rcl pusha mov iret inc and xor sbb sbb bound pop jg in stos add cmp inc test cmpsl movd fdivrp inc pop push es aas pop (bad) inc add js xor daa or addl pop add push pusha add pop jge into lret dec inc rorb push xchg jo jae dec (bad) pop or call sbb xor in test in fsubrp mov pop inc aad pop cmp adc push mov aaa (bad) and test dec xor mov jo mov dec jbe sub loop adc cmc dec and adc adc pushf insl cmp sbbl clc adc int fwait loope cmp cmp nop cld ljmp test (bad) int3 sbb ss adc and adc je clc push aam add outsb sbb (bad) loopne jno js fild adc jmp and jg adc mov push nop cmp cmp cmp fmuls ret cmp mov mov lahf mov movsb call add push inc (bad) clc pop in xchg gs (bad) fs (bad) mov mov xorb dec int es add into pop das mov ret or cmp mov sub stos and and mov pusha call dec test add mov lahf cmpsb inc test xor aas insl cmp fsubs mov or enter shlb les pushf enter xchg jmp cmpsl dec sub adc add mov loopne addl push cmp lods push jns inc jnp mov sbb xchg add ds jg inc cmp pop nop add test sub add cmp stos int xor ficom cmp mov or cli xor popf cld les aad je out add stos (bad) repnz mov mov add adc stos sbb push add bound add jg cmp inc ret add adc dec int3 dec (bad) int3 out fmull cmc out jg,pn inc sahf or mov add fs call mov sbb inc jecxz or push addr16 push insl stc sti ficom pop lods icebp lock sbb idivb jns xor xchg dec loopne movsb addb imul daa out mov das sbb pop scas add into fidiv call cmp mov outsl test iret jp adc push inc mov movsb mov push (bad) shlb addb mov mov and lods cltd inc leave enter add push fwait jp pop push test add xchg in push and jo int3 pop sub (bad) dec movsl inc lock dec fst (bad) movl mov cmpsb pusha add out jmp jno dec adc aam fst aam cwtl (bad) lods and inc jg stos (bad) xchg add insl movsb jmp mov je movsl lock xor cmp xchg add out adc xor xchg les xchg sbb and mov fwait mov mulb (bad) jb int3 and inc inc movsb outsb jmp xor and out add lret (bad) dec inc dec pop cmp ret andb mov mov movb mov dec and dec (bad) jmp rcrb mov pop (bad) hlt daa inc jno roll outsl movsb adc pop (bad) mov add push and sbb cmpsb loop add rcrl sub jae add fiaddl nop icebp fadds mov aas pop int addb mov js xchg xor iret sub jo mov adc add lods mov inc loop rcrb aam mov pop adc and subb add js inc (bad) stos and xchg and mov rorb or jl,pt stc and pop lahf jmp add xor (bad) mov ret xor hlt add mov mov dec sti shll cmp and adc cmpsl imul add pop push pcmpeqd imul rcl cs dec lea push pop dec xor insl mov arpl les cld dec fsubrs lea loopne sbb movsb sbb add mov pusha sub push add (bad) push popa pushf mov rol fimull fadds sub push test loope cmp js pop adc jp xchg mov adc scas cwtl in push cld enter ljmp jne pushf rcrb xchg push xchg cwtl (bad) mov iret add lock call add mov xchg mov jg cs mov pushf addr16 (bad) sub in (bad) outsl cmovns orb mov (bad) sahf test pusha data16 mov add sub enter adc in loope stc cmp mov and adc mov inc cwtl xor dec test push adc rolb faddl in les push adc loop aam inc leave insb loopne ret pusha popf dec (bad) mov xchg rorl rolb mov rcrb xchg lock lret aam xor or (bad) xor in loopne sbb jnp stc in or je outsl push mov push mov sbb es leave sarb (bad) mov mov imul xchg pop ds dec sbb movsl movl pusha push mov inc mov (bad) insb jno cmpsl dec pop or movsb sbb (bad) inc adc cmp xor push ja lock mov lds imul sbb sti sbb push aas lock adcb mov incb dec jle movsb es cmp rorl sub cmp sbb push mov and in or add (bad) (bad) xlat andb cmp mov dec add mov sbb add lcall jnp inc lret inc xchg sbbb (bad) sub cmp inc fisub test add mov call mov adc lcall push inc std cmovno ds shlb pop mov jb dec and nop nop subl jns xchg jno add add lcall xor sub popa repz sarb sbb xchg sbb gs cltd and add aam and mov jbe pop mov and sub xor push mov jge add jns jl or add imulb jb imul xchg adc outsl xchg xchg insl inc add mov dec and xor mov (bad) mov (bad) xlat cmp or rolb nop mov inc and imul loop jb cmp (bad) pushf out orl jbe mov loop jo add mov jmp out dec loopne int (bad) and in ret (bad) xor cmp xchg jae ljmp add dec pop mov dec inc rcrb add fcomps aas std das add cmp add jle pop sbb sbb add js push mov pop js add push pop inc fidivl adc enter sbb roll push mov inc cwtl xor idivl dec andb lds cli add dec pop inc fildl pop push loop lock jno add ljmp dec and not ja sbb ljmp xor fdivl pusha or fisttpll inc adc mov cwtl add dec push rolb repz int3 push sub mov push jno lret pop (bad) jo in push mov cmpsl sbb xlat les sbb pop cli clc or add inc pop dec xor (bad) adc mov jbe imul dec lcall dec mov add xor testl push inc clc pop jp xchg add ficompl pop dec sub lcall xor mov jl leave fs pop mov sbb jb sub mov adc jmp aas outsb cli (bad) lock mov bound mov hlt add icebp dec sub dec rolb mov call mov cmp mov xor dec loop inc jo xorl add decb dec push push dec (bad) test mov adc add add mov and dec sbb add fstpl rorl xorb cltd notb jp les sbb pop push outsl add jge and xorb cmp test fcompl xor dec pushf adc inc cmpsb adc cmc adc and sbb dec pop mov sbbb jl adc sbb mov add mov lea cmpb sar sub (bad) int pushf addl fmull mov mov fildl les pop add jbe lcall and daa lods enter add add cld test sub data16 jmp imul dec sarb and mov xchg outsb mov adc lcall push cmp jmp cmp imul orl mov shlb add xchg (bad) sahf pusha pop pop fiadd insb and dec sbb adc and mov jecxz imull pop or js add jl movsl ja cld hlt adc inc in or add popa push sbb sbb mov adc ret push inc in adc je or sbb jae pop dec or mov movsb and inc addr16 in add lods fwait push repnz int3 dec stos rcrl test cmovle hlt inc push in or jmp xchg cmc inc call adc mov js test inc add rolb add leave inc jae cmpl xor int3 or jno cmpb push sbb sub xchg sbb incl cmp je ret sub push int dec cli jne inc call mov or push imul negl jp fisubl dec and lds push and adc jp cwtl ss mov mov (bad) sub xor adc mov add imul cmp ret mov sbb ret xor adc nop lret clc push cs mov pusha test inc gs sarb sbb pop subps in add fmuls mov adc pop mov add xchg sub mov leave shlb lock add jb inc lcall std add or and mov add mov rolb xchg jnp dec add add ret mov inc inc sbb lock add xlat and test jg cmp or add popa jle in or repz jb inc sub mov ljmp dec adc jne je or adc pop ret xor sbb jb sbb lcall jecxz adc js les add jo pop shlb sbb lcall add dec cmp cmp dec arpl lods add inc (bad) (bad) mov aam in addr16 test imulb mov clc lods insb lock sahf sub or cs xchg push mov cld sbb adc and aam or mov cltd sbb cwtl call lcall inc hlt dec loope xchg sub jno int3 mov and nop inc sbb mov call push mov dec xor pop dec jnp cmp add lea mov xchg adc and ljmp stos add mov dec or jne and std int3 movsb mov popf into sbb aam mov adc adc nop shll es pop mov and js dec call gs nop pop adc cwtl in mov movsl jns sub in int3 push insb lds mov in fild pop add jb inc sub dec mov ds add jb lock outsl mov repz pusha inc xchg in (bad) adc lods or sbb orl inc rolb dec jo mov mov sbb jae dec adc inc or inc ret jecxz insb jmp sub sub and or xchg jo mov nop inc push mov or loope into fsts sahf xor dec cwtl loop cld inc idivb cmp mov mov stc (bad) jno jae adcb dec cwtl pushf test outsb mov leave mov fisttp data16 inc imul inc push lret sub notb pushf xlat xor inc inc mov cwtl adc int3 pop pushf leave xorl loop mov add mov adc cwtl test fldt imul sub dec and sar stos in sub les sbb cmp mov (bad) je dec test loope xor (bad) jge ljmp lods movsl stc and mov add call (bad) xor (bad) cs dec mov loopne std sub sti jne sub cwtl pop pusha jbe mov mov sbb cltd in ljmp das (bad) sub repnz mov push inc add pop or fnop and inc mov gs and in (bad) mov fstpt std loopne subl add and xchg daa jae adc (bad) add cmp mov in jge or mov dec and mov adc jl dec sbb rclb es inc add js cmp outsb jbe sub add sbb pop imul icebp inc push push inc cmp jl ss jbe push cmp dec pop jl movsl aam mov jno into icebp cld (bad) and (bad) jecxz mov inc (bad) inc add pusha cmp dec add roll mov jg js fcomps xor mov push sbb jae inc (bad) xor mov cmp mov jge cwtl pusha jne or outsl inc inc adc inc imul std (bad) add movsl mov lds call roll lds cmpsb lods push mov xchg sbb test mov mov insl sbb pop add add add push push xchg int sub and inc add ljmp or pop ljmp hlt mull shlb dec test lret add (bad) fucomi fdivl or cmp cmpsb sub xor test ds inc and (bad) mov and mov mov add jne movsb jl daa pop hlt cs sub and pop pushf int3 cs xchg mov ljmp xchg movsb cld and dec nop fcoms pop rclb adcb and sbb mov push or mov sbb xor clc mov xchg adc cwtl mov add bnd mov push roll int3 adc cmp adc repnz sub push je movsb (bad) stc leave lods and fadds fdivl sub sbb loopne sub mov sbb and pop fs xor cld cwtl mov cmp dec into adc mov pop js jb rolb mov adc andb lret mov push in dec test inc rcrb (bad) out and (bad) fidivrl nop cmp sbb push fbld and (bad) in shl adc outsb push hlt mov into arpl mov bound pop jb loop xchg arpl adc or xchg or daa sti lret fmul test into jae or pop dec je sbb (bad) xchg pop inc pop adc jae popf sub sarl imul mov clc jns and dec lds repnz mov cmp dec push gs mov fmull cmp sbb xchg fmuls mov ret (bad) and sub es test pop mov movb mov adc bound std sub sar and pop pop pop or repnz aam sbb nopl pop sbb dec add (bad) jno aas mov inc or clc ret sti stos rclb jno mov adc in mov cmp rsm mov (bad) out xor adc (bad) xchg sarl mov and rcrb inc add cmp push clc mov out jne dec jb sub shrb movsb or repnz outsb jl lcall movsl loop xchg mov dec xor dec test add and movsl popf pop repnz inc cwtl xor dec jmp cltd jl dec jecxz adc nop lret outsl mov jmp add fdivrp mov pop mov aad loop sbbl mov fisub pushf int mov push xchg or xor aas les or movl jae fidivrl fsubrl xchg (bad) cli dec cwtl pop andl add and and fisttpl add cltd add sbb sbb enter sub imul and and call mov or lret mov fstpl loopne pop mov mov (bad) loope sub cmp sub mov fnop pusha popa loope orb mov cmp dec fsubrl jo ja test and dec mov dec and push jmp xlat ja ss in and imulb add andb sbb cltd call ret das (bad) push sbb adc or int das dec aam dec pop push inc xchg fsubl fdivrs insl ret mov fisubrl jne mov pop or pop sub loopne add dec pop inc imul gs pop inc cmp mov aam sub xorb add cld inc in fsubl jl ja add out or mov imul xor std pmaxub jp lcall adc adc adc dec rcr or bound es andb aam add je xchg loop cld inc inc aam adc cmp rolb out dec mov fsub mov pop add sbbl xor fnstcw rol dec sub push lock pop mov ja mov and ror xor enter je dec cmp and or les sub test add pop mov int3 les add and test repnz or fistl mov mov (bad) repnz mov cmp int3 inc lret inc xchg adc in test paddb cmp cmp int jp push xor jl fiaddl rclb int inc nop repnz cwtl sub sti cs dec orb push cltd pop lahf push cmp adc add mov fs enter call je shrl inc push jae imul sbb jno loope add cmp enter jno (bad) mov clc incl or xor cld and imul mov jo and jb ljmp hlt std add call xlat xor imul je (bad) mov lods dec cwtl je inc or movl clc mov clc ret xor jns frstor mov add add inc cmp jo fnstsw arpl sub jmp addr16 fild xchg xor mov scas mov cmpsl sbb adc (bad) sub lock pop inc xchg ds jnp xchg icebp sbb or mov test leave cs jne mov bound xchg pop cmc enter outsl cs scas jg iret dec mov loope or adc adc movsb cs cwtl jl xor push popa inc and cmp sbb jle lods pop cwtl (bad) xor das lods in dec and jo pop sub es xchg push sbb je int3 push sub pop xor (bad) fcompl and lods mov push lods push push int3 jmp pop mov mov scas adc aam (bad) mov adc and jp dec lods add sarb push or jo adc sbb int3 movsb lcall add test sub adc push sub mov ret mov imul sahf cmpsb jp or call jno sbb sbb pusha add pop (bad) fbld lods dec mov or sub sbb lods inc clc (bad) int3 (bad) repnz add fdivrl imul sbb or add or mov dec fisubrl hlt xchg mov jae sub inc je loope cs sbb sub repnz dec fldl2e jge sbb lcall add movsl add xchg (bad) jmp push push xchg dec cwtl push fsubl inc movsl repnz aaa add loop pop int3 jg loope add (bad) aad js add insl movsl std mov jae stos cmp scas cmc pop sbb jge push mov (bad) js es or add sub in add sbb adc lret or add mov sub add adc or xor cmp or repz sub sub sbb or sbb out pusha xor pop add insl or sub daa jnp add scas jge push cltd adc push addr16 push dec cmpsb lea xchg inc dec fldl push push sub (bad) or push daa add mov incb insl push mov xor into addr16 cmpb loopne mov and inc outsb jmp sub pushf mov jo dec adcb mov test push pop inc sub shrb or mov nop pusha rcl and sbb frstor xor sbb and (bad) mov pop dec push inc xchg add ret mov push add (bad) scas popa cmpsl add pushf sbb mov cmpsb sub add int iret push mov cmpsl pop testb loopne add xchg add adc cltd xor or insb inc add jb cwtl adc sbb add loopne push add je fisubrl push ja aaa xchg gs fnstcw add mov lock insl (bad) sbb sub add add add ret (bad) pop shll lahf or sbb cmp xor and mov pop xorl fildll add jb lret loopne mov jns test data16 mov mov movsl out loope jne pop out adc (bad) outsb inc out js jl addr16 leave mov and jl push pop mov test xor xadd fistp sub and jg adc fcmovnbe push jo loopne jno pop mov lock stos inc add adc or popa or sub inc mov sbb loop test lods or repnz jl dec mov jecxz and jne add (bad) push cmp (bad) dec repnz dec stos je sar dec adc mov enter mov jno (bad) xor pop frstor leave scas out push fwait pop cmp pop repnz nop sbb inc mull push mov mov lock cs enter sub fwait or jg lret sbb ss sub push iret mov addb sbb push ret pop sub and sub mov out les mov fnstenv cld pusha lcall int (bad) push and sti cld inc xor test pushf xor sbb incl (bad) mov xor stos push test nop jle or call or push sub push (bad) jmp mov out lret cmp sbb cli sub shrb (bad) dec add (bad) es adc xor cli cwtl add rcll dec outsb mov aam pop push fcoml adc add push or and jae mov lret fiaddl jmp dec les (bad) lods push aam dec scas add pop lea adc add (bad) jne xor fmul loope (bad) call inc xor bts add rolb push mov (bad) lds incl jle arpl dec adcb mov out nop or push push (bad) xor into and mov mov dec mov dec icebp sbb popa inc js mov pop ds or xchg mov mov test jns sbb sbbb aas jp or out add pop dec sbb test (bad) xor sub add sbb ss sbb dec lret jle push cld xor jo xchg sub mov sub sub dec mov call xchg bound or mov jo xchg pop or js pop sbb xor mov mov sub dec jne lret es add and cwtl int3 or sub out clc xchg add sbb and andb push fstl xor xor in stos xchg out in or xor or inc add cmp (bad) fadds and inc xchg jecxz pop imul add xor (bad) push outsl push mov mov xor fiadd adc lret insl and add rclb sbb notl dec in mov sbb xor and push and xchg int3 pop ds sti add cli (bad) lret cltd xor enter sbb cmp jbe add and fcomi mov cmp and leave add fsubrl or sbb add repnz adc leave add jl mov into dec frstor adc mov subl loope and sbb bound leave mov pusha flds mov pusha mov lods jge sub rorl loop ja loope add xchg jae and add pop dec pop ret sub xor cmp fstpt xchg mov add popa sbb lods add outsb adc sbb and out push push mov sub test jge out imul inc lahf xor sub pop in or cmp add lea add repnz addl adc cwtl shrb leave mov dec pop ds mov fldl or lods mov test daa test data16 mov sub dec imul and or mov roll add jae sub std lock jle fdivp (bad) ss xchg mov xchg dec push sub aam and add add mov rcrb push sub push mov mov fs nop mov and adc paddq sbb sahf jg test mov cmp stos movsb cmpb inc pop je js and push movsb inc popf les aam push xchg add punpckhwd ret or sbb adc cmp add add xor mov and xchg xchg lret (bad) xor adc or xor rolb js jo subb adc adcb gs aas mov les (bad) xlat dec pusha mov hlt fcom loopne (bad) adc movsb cli idiv leave cs scas add cmp xor ljmp mov lret or add add or inc dec and cmp mov cmp popf daa cltd pop pop or leave shrl jne nop ret sbb sub mov xchg add lds cmp mov lret sub inc or stos insb ja and sahf adc out jg or add pop movsl jno in push dec add adc or hlt shll mov add xchg dec dec push push xor mov mov bound adc lahf mov or fdivrl mov push cli fdivl jo data16 test pop mov fnop cmp std mov fwait xchg jns xor movsb ja jmp and pushl inc push cli sbb mov push ret pop xchg xchg add cmpsl jmp pushaw js add loop fsubl pop movsb or dec push (bad) sbb fwait test int3 pop lcall loop push mov dec inc cmc fcmovne lock pop pushf jl adc and lock add or repnz and (bad) mov add xchg add popa pop test outsl inc mov inc or jo pop mov or sbb push out pop sub fcoms lock inc andb and les adc inc fs outsl js das cmp jl inc dec out push pop sahf mov mov pop movsl mov dec jge push mov aam ds and mov mov orb jge push sar les push out mov cmp rsm push inc loopne sarb dec les aaa bound scas pusha mov pop or aaa mov xor cwtl and sub ja add inc and xchg pusha mov divb jb js xor adcb leave gs insb mov pop rclb xor xor fidivl scas insb sbb xor mov insb fstps adc mov sub out insb add and cmp orl jl aad mov enter mov fisttpl jb inc shll jae pop nop pop repz push push adc ret loopne popf xchg add push cli pop mov test pop sahf in push movsl sbb fsubl fdivl (bad) hlt dec xor lret add lret lock adc sub push (bad) lock inc addl pop inc in cmpl js jno insb mov fisubrl mov cs je push add test add sbb and adc inc jnp mov add xor rol dec mov pop inc mov jb mov pop dec int sub mov xor ja cs mov rol xchg outsl cli sub dec pop fidiv (bad) lock je aaa cmp cmp jo repz cmp and xor dec add divl lret adc pop sbb mov call push enter mov jg insl mov and mov xchg push out pop adc sub push rorb sbb loop and xchg nop stos dec and push les rorl rcrl cmp add sbb and rorb inc imul dec add xchg add pushf dec call cmp (bad) xor rcll inc cwtl pop xor cmp sub pusha xor inc loopne mov cwtl mov fimul (bad) jle nop rdmsr imul int xor sub mov les cs sti xor movsb pop xor clts sub fmuls (bad) jg adc call test or clc rorb mov and pop out jae mov mov mov push jnp xor add or pop pop imul sub adcb mov repz pop stos mov les inc repnz add xchg jbe je dec pop xchg sbb mov dec push pushf rclb jge lret ja jp xchg mov nop loopne xor lret or loopne push push js dec dec push mov mov out nop movb or out xor into pop lods cwtl xor loop mov mov pop hlt xor nop mov mull adc lock popa mov add sbb lods cmp (bad) cmp mov pop sub and sbb and insl add jle ljmp add inc adc incl sub (bad) jns clts sbb pop iret out outsl adc in cmpsl fldcw (bad) jns dec add sub (bad) xchg add or loopne in push sub mov stc cmp out add mov adc (bad) mov (bad) sub (bad) pop mov int3 pusha mov roll sub lret adc push pop jg inc icebp gs andl jmp mov int and dec in push sub (bad) js dec cli fidivrl rcll sbb pop and repnz pushf add jns sub sub mov push push add inc mov stc ds mov add push stos cmpsl loopne jecxz repnz inc pop (bad) sub (bad) mov js xorb sbb dec lods push sbb sub into call and int3 pusha insb xor cli ss mov mov repz subl cmp lret stc cmp pop jb sbb cmp push sbb sub xchg enter scas add pop pop cmp mov mov mov pop dec (bad) les loopne add das mulb or mov adc in (bad) push cwtl adc adc add (bad) int3 adc xchg call adc and or mov add stc xchg mov rorb mov pop add sub enter adc fxch xor icebp je (bad) sbb lret dec push cli gs sub orl push (bad) pop jno or imul mov jno fsts imul pop push and nop cmp push inc xchg cmp stc je (bad) xor sbb pop inc mov in stc and lods add xchg (bad) flds sub loopne fs das jge dec into xor pusha add cmp inc xchg pop inc mov test sub (bad) and mov out xchg in addr16 mov jnp dec adc lret cmp fs repz adc inc jo dec cld pop adc testl inc icebp js int push add in or and clc rcrb in mov xor ret mov (bad) cltd add push lods mov lret inc dec shrb mov bound sub pop xchg fwait inc ss inc and jo xchg (bad) and leave push and fcoms push add cwtl dec bswap pop fildll gs add add jns xor sub xor pop ja or inc icebp or push add cwtl fisttpl mov dec frstor jmp pop aam inc mov in sub sbb add inc cmp les cmpb pop aaa jns or mov and inc inc pusha adc (bad) (bad) adc and test mov add cmp pop out repnz xlat inc mov nop and es mov lock sti repz int3 xchg aam dec mov adc adc lea dec and adc inc inc push (bad) and sub xchg pusha and xchg or cltd lock mov sti cmc pop mov fisubl sub mov repz add adc mov movsb sbb in mov push push lock ss popw (bad) push adc enter lock add andl icebp nop js mov fild mov cwtl pop pusha rclb outsb (bad) lock pop cli or clc xchg push xchg mov lock add lea testb addl lock out mov call mov mov out repz inc adc sbb sbb pop inc daa mov mov sbb xor mov setns es test add lods jp and adc (bad) lret adc cmp icebp enter jl and dec push mov add or sub nop nop inc es pushf mov inc imul mov xor inc cltd in ffreep sbb cwtl inc push test hlt ret popa test jmp fisub and and and mov adc jae imul dec loopne xchg dec fbld or and movsb (bad) push xchg inc cwtl outsl mov mov les push sub lock nop test mov dec or test aam lods dec fisttpl (bad) rcll mov sub sbb fs add adc jecxz jo cltd mov fsubrs mov fsubs mov lock sbb ds cwtl out sub aam xor mov sub lret mov inc mov sbb gs or push inc cmp or nop sbb inc lock movsl mov pop je pop or icebp and jns test sub xorb and movsb je dec addl xor xchg mov ja xor add pop xchg mov int pop jle push in push sub add adc mov or dec push sub xor push je js xor xchg outsl jmp add das pop (bad) fmuls cmc roll pop into fs dec fwait mov int3 insb cmp orl sbb sub push adc inc and fdivl cwtl pop pop test pop mov or pop loopne cmp jo daa in add cmp mov mov or dec scas add cltd dec jno je pop and out pop mov and (bad) jle aad mov cmp ss es lret lods inc orl add cmp mov in stos sub nop mov in add mov mov fsincos xchg lods mov (bad) aam inc mov jecxz add pop pop xchg (bad) cli test inc sbb cmp ret rcll adc sbb xchg adc and sbb mov enter adc mov push (bad) (bad) mov jle je das hlt movsb sub sbb and inc mov movsb inc cmp pop lret and int3 pop xor sbb lret rclb pushf jo in je cs or pop add sahf push enter pop pop and fwait rclb rolb fistp movsb andb repnz sbb dec movsb aad push inc fs mov insb shll dec jae es add inc xor leave aam sub pop push add xor clc add sub cmpsb rolb and jnp rolb movb gs and sbb cmp sub lret mov movsb jbe and push movsb add push mov (bad) inc es aam shrl or sbb add dec dec dec sub pop aas int3 popa test push ret and and inc shrl and mov mov xor sbb mov fiadd sbb mov scas out enter mov xor cmp and mov fs and adc and sbbb jns and add lods (bad) cmp xlat aaa or add and mov dec shlb js shll movsb and hlt les movsl gs daa test call mov push jecxz sbb sub sti pop sbb sbb adc add and adc mov iret add push ret shlb rcll cltd mov fstpl loopne dec subl sarb rcll insl add jbe lret fcmovnb bound or add mov js pop pop pop es testb cltd mov adc das push pop in xor cmp jb sbb ss jb mov add sbb inc cmp lock inc or and nop sub sbb std repnz or jecxz in mov add fiadd jno (bad) dec imul adc push inc daa loopne fistpll je xchg sub out add (bad) ljmp push xor mov cmp add clc je or jno lcall mov ret repnz and dec call sbb fnsave adc xor fistpll pop sarl int3 sub popa add add cwtl loop pusha aaa ljmp or aam cmp adc je xor dec adc (bad) sbb insb ret cmpsb dec mov neg push add movsb jno hlt push add pusha fadds push sti lret popf push rcrb loope das mov jnp jl test push fdivrl pop movsl xor mov adc ljmp lds dec mov lods in pusha test loopne fnstcw and xchg pop ds xchg outsb lds fadds mov ss add jno,pt add icebp sahf lcall aas and in add mov mov out cltd pop nop sub adc fistpll sub sbb mov add xchg add adc test repnz fs pop in add stos and mov cltd pop push dec add mov jecxz and sbb loope shll in adc pusha adc add push loopne (bad) or pop and mov jl aam pusha ret cmpsb enter add (bad) sbb or icebp mov lcall jecxz movsl sub or add sbb adc lods add lcall cltd mov sbb dec mov mov mov sbb and dec mov lods inc and (bad) repz sbb inc sbb xor cmp cld jno pop pop xchg popf pop push arpl inc push add xor out ret add popa inc mov and call movsb push dec scas mov cmp lea mov imul pusha xchg dec outsl pop ret dec add stos test jo popa lea cmp and adc test add adcb push je loopne pusha adcb rorb xor test les inc lods jmp xchg inc cmp stos out jno dec push mov cltd pop inc xor pop lods dec mov xorb leave ret adc jno jno adc add mov cmc aam repnz lret jp out sub loopne adcb and adc mov mov xchg sub add dec pop stos add out in imul push cltd push fwait sub adc loope xchg push add mov or inc notb add daa push fildl scas xchg imul xchg or mov ret rcr into xchg xchg push sub fildl fsts and push mov pop add jae or leave push mov dec stos jmp aam add mov ds mov xchg pop mov rcrl jmp push cmpsb inc push mov and sbb sahf add lcall inc (bad) icebp dec adc xchg mov cs nop sub mov sahf inc orb pop sbbl push jb movsb or add in rolb push mov stc add lea int (bad) dec ficoml rolb (bad) mov js test imul sbb mov mov adc insb std fadds popa pop out add ret rorl jne scas dec faddl mov outsl jle jmp xor js outsb jle sbb pop aaa scas and pop and sahf rorl pop add fstpl mov into xor inc jmp shrl add repz pop mov in and ss or scas push adc arpl test jl or mov loop mov pop adc sbb cld les mov es mov xchg mov jmp and jns mov inc mov xchg rcrb pop (bad) ja dec gs adc (bad) ljmp mov outsb xor (bad) int pushf out pop jecxz hlt xor dec cld pop fldl jp or int lods imul lods sbb out clc loopne push stos add das pop jne jnp ljmp and lds mov and iret int3 out movsl xchg mov shrl imul in ret push out mov push sbb jl cmp push or xor jecxz notb pop add push push outsb add (bad) pop cmp js add lods loope add std popa mov shlb push xchg lock loopne mov cmc add mov mov clc cwtl test arpl sub dec xchg pextrw and arpl mov xchg xlat add dec dec pop int sbb pusha sbb add or mov jmp jae loop push ds add out js dec adc (bad) lock mov mov pop sbb push adc jl popf int3 pop in sub push lahf jp add add xchg loopne js jge inc ficomp outsb push xor enter add out aaa inc les (bad) out loop loopne pusha idivb mov add push add mov stc ds jle jns add pop adcb out hlt leave stos js add dec jo add cmp and clc xorb sub jae dec add leave inc inc sbb or in push sub adc in or and (bad) std sub mov shlb lock add (bad) pop in inc push xchg bswap adc out adc int ret loopne test xchg push sti bound js sub jg push jne or push in mov add add test rcrb clc imul mov adc xchg push jge fsubr cmp rcrl ds aam and jl and adc sub enter das push sub or gs test pxor (bad) cli sbb cmc mov pop dec mov das push sbb insb in sub cld or popa lds shll xchg push dec out add cltd in adc or xor sbb sbb and js mov add das aas loopne paddusw out adcb aaa add call jg xor xor and inc cmp mov loopne mov inc loopne sbb jo sub sbb or add push jecxz faddl mov jb and push cwtl test scas std and shll push mov or cwtl add sub dec push in add add cltd lret clc adc dec push jo mov sbb das cs loopne jg nop push jge fdivs les adc aaa sti addl push mov or cld and bound pushf nop outsb sub int cmp cmc hlt mov shr xorb inc dec (bad) loopne or push mov push jae bound pushf nop fildl (bad) mov sub daa cmp lock add (bad) in mov (bad) xor sbb or orb push add in cmp fmuls cmp nop inc movsb jle aad mov mov mov cmpsb lret je sub xchg cld cs add xor mov mov sbb sub xor (bad) nop js push jo and sbb push (bad) adc or arpl ljmp and data16 add pop lcall add fcompl xor pushf shrl movsb pop and pop and or call mov cmp jae push (bad) or loope test and rcll mov cmc test cwtl xchg cs sub psubq js mov roll mov test jmp push adc push test aad aam les mov xchg jb mov subb mov inc sbb dec arpl test ucomiss cmp push sub cmp dec inc test mov popa pusha or jge jmp in mov dec pop mov pusha sub clc pop add dec sbb subb and out or cs and sti icebp and test sub jmp mov (bad) faddl idivb push test pop cmpsl out xor adc aas lds js call dec add or imulb pusha sbb test mov mov jp sbb je (bad) jo pop mov addl mov xchg enter out lea (bad) adc inc or pop adc out addb cli mov (bad) scas roll lds fiadd add ror adc mov or push mov add out (bad) leave cmc orl std push loopne xor roll pop mov jno lock push negb xchg scas (bad) sbb xchg xchg dec sub hlt jo arpl mov pop sub cmc in lret daa add ja ds iret subb add mov mov jp and add movsl sub cli add dec (bad) xor push mov add add mov mov mov fiaddl movb scas fiadd arpl sub sbb jo adc add leave jne pushf adc mov sbb in mov arpl and jbe pusha dec jge push popa jecxz mov xor dec mov push mov push add and mov fisub je add call or sti cmp jecxz and pop testl push add mov pop and fucomi sbb aad inc mov mov ljmp xor adc xor clc out xchg xor sarl sahf or pop dec pop mov cmp js (bad) (bad) movaps int3 jp sahf add jge sub pop (bad) xorl sub or xor adcb and flds enter insb lock stos in add (bad) or loopne xor mov mov xor push add xchg in sarb cmpsl (bad) stc cmp jne add xor xchg movsb or pushf mov or pop (bad) dec popf gs loopne jb dec mov mov in sbb push add cmpsl or sub or xchg xchg cwtl xchg fadd pusha cmp or xor jns jl mov dec sub pop into (bad) pop int3 movsl pop adc and and sbb pushf mov cmp mov mov iret inc push xor gs mov or mov mov hlt test xchg mov mov inc or and lock inc xor jecxz icebp or addb mov (bad) ss dec in js dec cld test or sub test pop cwtl or push add subb and push mov in sub nop adc fs aam cmp mov and add push ds mov sbb sbb les or pop (bad) xor or xchg xchg push jo mov and mov loopne jge pop sub fstl xor inc pop mov cmp ja stos outsl mull arpl test push mov add inc jns cli dec and aas jo test out gs xchg mov add and jmp loopne in daa mov mov add push adcb sbb sub cmp cwtl mov inc push (bad) jae lock lds testl xchg mov fwait mov mov fdivrl in xchg (bad) in andb bound cmc or cmp dec add xchg fs sub cmp xchg repz les sub sbb test adc sbb pop inc cwtl adc xor hlt xor (bad) mov cmp xor push push es mov int3 fcoml dec add cmp xchg xchg arpl std sbb sbb mov or mov fimull or mov xchg test pushl sub pushf sub xchg add lcall sub or test jns add sti out xor add mov or push outsb into cmp mov cwtl cltd mov adc pop xor push add mov jge add jne mov pop jecxz dec and push hlt or int3 add je or adc imul fimul or aaa in mov sub repz hlt pop out iret sub push cmovs shr xchg cmp or and mov aad hlt push and xor (bad) lret cmp mov xor mov xchg sbb lods icebp cmp or sbb inc sub pusha xchg movsl inc (bad) jno mov loopne pop mov or (bad) sub adcb xlat cwtl rorl xchg or mov mov ficomp xor adc int3 inc cld or stc (bad) out inc insb test or mov push faddl add mov repnz sbb jo test add addr16 mov or add cld mov sbb icebp inc sub xor aas add xchg xchg rcrb lock nop sbb into xor out add loop inc (bad) adc ret mov fcoms (bad) lock mov loopne inc dec sub movups call add sbb adc out js add or aaa add int3 shrb add imul int jo je dec dec dec lods jns jbe add fbstp xlat sbb push cmp jns aad xchg cs adc adc and imul add cmp cmp jnp aam add aam add sub mov and aaa sub (bad) dec out cmp shlb push cvtps2pi or push loope aam jecxz sub adc adc xlat add fcoml mov ljmp out xor aad push imul jge push and dec ret or mov mov cwtl jnp or popf sbb push movsb lods (bad) les loopne mov add test test lcall movsl pusha jne or shlb ljmp or movsb inc mov aad push call inc push inc jg popa lahf pop push lcall push mov sarl and push xchg sub mov pop repz ret fcompl push push xor cmp nop add sub mov sub mov sub mov insb push subl or addb les or fldl2e fs jmp dec pop add dec sub xor dec rcrb sar movb mov cmp add and insb hlt js adc in test inc arpl push dec roll fidiv xchg ds stos rcr dec cltd add push int3 clc nop adc gs mov (bad) pop fsqrt adc sub mov inc lods mov or int3 xchg inc or push imul int3 sbb mov gs xchg repz adc call dec pop movsb rorb rolb sub jl sub add add ss mov mov inc mov pusha testb into aam push loop inc xor lret and mov xor lret lods sub push sbb inc mov push (bad) pushf sbb aam cmp adc (bad) or xor jmp aad adc lcall popa gs push dec push xor jb fisttp mov cmp dec mov pusha or (bad) out andb das enter and shlb js sbb inc add test cli cmp lds add in bound mov mov loope pop push aas dec sub dec pushf das mov lods xor mov push aam jp cli test fsubr add pusha sbb popf nop inc and dec xchg mov faddl test mov adc push sub sbb insb cs mov outsb or rcll jmp or add sub jb and dec xchg mov rcrb pop iret cmp (bad) ret pop and pextrw test inc or xorl int and jp nop mov cmp push arpl jns (bad) clc dec cld addb or add sub arpl psubusb mov (bad) nop les dec mov dec pop pusha mov inc sub sub ret in cmp imul xorb inc jg adc sub movsb jae jb scas push jbe popf add aas xchg push fwait pop sub and pusha das ljmp mov sub inc inc cltd enter mov in (bad) negb push rolb ret sbb mov sub cmp les loopne aad add dec lea sbb add jnp add das enter adc and or dec add in push cmp sbb mov or cmp arpl cwtl add or bound pop (bad) test (bad) cwtl addb or sahf xchg add mov and push sub orl and psubusw sbb (bad) mov inc jo sub sub mov shl dec addb dec hlt pusha add inc pusha negl push and sbbb xchg xor add pop pusha inc adc (bad) xor push add push test cwtl jae imul push xor fstl xor inc cld jecxz iret loop push xor and cmpsb cld (bad) cmp dec cmp inc repnz movsl addb sub push movsb jne jl dec sbb fs in jb mov xchg out jl call daa jo add loope mov add stos and add subb jle imul pop repnz dec cmpsb mov mov push or mov or inc and and mov add jle (bad) and and aaa and notb mov hlt (bad) jo sbb ret xor xor loope sub sbb inc mov jns sbb test js (bad) xchg xchg js xchg cmp int3 test scas ret push iret mov adc xchg mov adc dec cmp mov roll fdivrs jb in insb or xchg inc (bad) xor or out lret push add les test mov cmp dec flds mov pop lea add xchg test and add mov push (bad) push dec xchg in pop (bad) popf nop adc or (bad) sbb pop stc pushf jl xchg mov add call sub addr16 jae ret adc add cmp jb adc into stos push cwtl lahf movl dec fsubl pop dec movsb sbb xchg mov (bad) roll mov inc cs push xor and push in sbb mov int3 dec rcrb cld dec jp cwtl pop xchg xchg dec mov shlb ret sbb loopne rcrl pushf mov pop nop or es clc rorb jge adc sbb insl push fs mov jno lock mov fwait push cs mov pop dec std lock cmp mov or scas loop fdivrs fisubl xor add aam (bad) jge fcomp lret or js cmp popa pusha cmp push fisubr fsin ret sarb loop scas mov cmpb xor sub lahf or add jo outsb loopne je jmp dec adc lret sbb fs and add add jge mov pop rcll add mov mov dec js sbb pop jp rcrl jl ljmp and das add sub cwtl leave push int hlt mov repnz imul cmp sbb test movsl push inc and icebp fcoml inc xchg sti shlb or inc inc sub lods or rolb sub inc or cmc push test xchg negl or sbb inc push jle inc pop pop loope pushf xor add adc lods push sti ret jne cmp mov outsl roll xor cmp push andb cs add nop lock shlb pop sub sbb sbb rolb mov add cmp xorb js xor in mov inc mov popa sub out inc movsb jge movsb fadds cmp (bad) jo mov and pop or orb in loop les aas mov pop xor fldl pushf jno push notb cmp pop jno pop cli or pop inc ja faddl inc aaa ljmp int3 cld test push inc sbb mov add and push sbb js inc mov and notl inc test and inc mov pop fsubl cmpsl mov cwtl or jbe or jo xor popf push push in or addr16 in fiadd xor jnp mov scas cmc mov dec adc add inc ja and imul fcomps xor push inc icebp xchg adc mov cmpsl rorb test jnp xorl xor clc pusha clc ss es add in iret shrb sti arpl pusha xor sub fstpl inc and cld daa sahf pop inc jge or pusha ljmp add add cmp xor adc add and out pop add push sbb lods popl cmp push int3 pushf jle mov lea stos pop add mov dec out sub sub jbe mov jl mov dec mov shrb sub adc cmpsb faddl xor es sub daa lahf push inc repnz je rcrl loope or push adc sbb mov dec data16 sub (bad) imul inc (bad) insb xchg mov xor jg repnz loope pop dec or stos lea push cmc sbb ret cmp (bad) jmp sub lods nop test pop add das dec pushf mov xchg ljmp add out inc enter scas add fwait pop mov lds lock loopne sub test pusha push xor adc mov imul jns ds sbbl pop pop add mov push cs pop sbb xchg xor inc cmp xchg aam js or aam sub mov xchg scas in fstpl add jo sbb add inc addb xorl push loopne xchg js mov inc dec mov aad push shrb mov jl push pop add pop xchg aaa icebp mov addb test icebp insb dec xchg add xorb repnz sahf xchg mov cli adc jbe cwtl sub fcomi push and xchg pop (bad) repnz cmp jnp roll hlt inc inc mov fildll loopne cmp cs negl add hlt insl and sub dec jge adc cli in scas jns xrstors fwait (bad) or inc pop pop jne sub cmc add out mov cmp fs xchg push jp adcb popa push push pop jmp xor inc addb adc js,pn js inc sarb add pop or pop cmc mov fimul jnp add push lea imul adc jnp inc add test adc cmp and shr mov adc inc mov mov pop push and push add xorb pusha fstpt jo js adc insb sahf movsb and sub xor fsubrs (bad) mov push rolb sbb push lret cmp cmp dec push adc pop cmp jmp adc das add stos pop les cmp fcomps nop xchg imul or das mov std push ds push push js xlat (bad) and xchg inc add pop cmp and repnz push incb lea adc mov mov in inc or ljmp jmp pop fiadd (bad) (bad) jle inc in stos rcll cmp sbb (bad) xchg inc call dec leave mov fcomi push and pop ret rcrb stc adcl lock loopne sub adc cwtl lock inc dec ret icebp and inc jne das push ret movsb pop or ja cmpsb pop in mov push callw and out mov sbb mov fs mov lock sub lods and inc inc push lret call cmp test adcl dec or xor adc fiaddl addr16 (bad) div add sbb push mov mov inc dec cmp jnp pop and sbb shll movsb xor mov jo js inc push and fs icebp mov add adc fmul pop fs ds inc mov dec xor enter stos insb hlt sub cld or int3 pop dec push sbb out or push lret mov mov das jmp mov lahf adc ret popa push add negl push lea add mov add fsts adcl ss jp sbb dec ja xor xchg and mov mov rcrl dec jb add mulb js adc xor lds sub pop rorl andb in movsb or test cmpsb icebp jo clc cld mov and fndisi(8087 mov mov dec adc nop repz or jae bound gs adc pusha mov lcall or adc pop and incl in out jo das or dec adc add mov jne jecxz aas push mov lds leave les mov jne jge mov jl mov push xor cmpsb dec dec jo sub pop icebp dec cmp shrl scas xchg mov pushf pop pushf adc mull sarb lret aaa push andl aam mov pop imul decl mov repz adc add cltd fs dec lds sbbb clc and adc das xor scas pusha rorb inc adc mov sahf pop xchg leave inc pop pop sbbl test push pop fildll jecxz sahf mov mov scas dec inc fwait pushf pusha sbb test add or dec fldl dec mov push sub test push (bad) hlt sbb pop and cmp or std out cld push mov and xor sbb sub bound subb es add xor dec and hlt nop fistl xor jmp add cwtl xor sbb xchg xor js (bad) push sbb js enter mov adc aaa test ret add mov mull mov dec cmp xchg xor cs scas adc dec push mov jb (bad) cmp cmp jbe jge pop push sub xlat mov add sbb stos popa scas push setbe mov push pop cmp mov bound les add adcl clc xchg stos xlat es sub pop int3 sbb jle add jo aas sarb or xchg push or jmp push clc fsqrt scas pop in insb xchg scas adc mov cwtl pop loope insl and in jle inc or fadd jl test dec add addr16 or jp dec mov inc rorb (bad) jo sahf test pop dec into ret cmp mov dec pop pop adc pop or jle fs mov push add iret push arpl cwtl inc mov cmp jns xor inc jp cmp test pusha lret pop or je or adc fstl jns inc dec and sbb inc shlb jg mov push ret mov ret call icebp mov sbb mulb cmp add ljmp dec mov mov bound dec cwtl pop es cs (bad) int3 dec adc aad repz push pushf cltd and dec pop sahf mov adc xor push or pop add (bad) stc mov arpl adc xchg es lods movsl faddl leave sbb repnz add add and mov or or pop vcvtpd2dq mov inc fcmovnb cli push inc inc pop add xor push sub mov sub sbb mov push push lock sbb push sbb mov mov push popf mov push cmpsb add cmp loopne test add inc roll inc jg,pn mov leave sbb jg cld jo ljmp test xor and dec loope or mov stos jne pop add dec sti js fs add pop cwtl clc aam pop pop shl jl mov jecxz add xchg js test fs test cmpsl jl add sar xor nop dec enter std cld mov in orb jno add sbb fwait cmp daa add std movsb sbb push xchg pop inc mov rorb mov inc mov int jle mov (bad) sub stos push dec or xor mov (bad) dec and inc sub (bad) movsl cmp add xchg out mov add fisttpl push dec xor add aaa adc pop dec pusha mov add dec cmp push mov push out add jp push pop nop jo sbb sub subl add fistpll or repnz dec insb rcr pop imul fdivp in test sarb rorl movsb hlt ret and dec mov add pusha mov xchg xor mov (bad) mov or (bad) mov js xor or or fs fdivr add adc divl loop adc arpl xchg addr16 nop repz movb out pop xor jne pop mov xor jbe and es xchg push and add ljmp sub (bad) mov test aas add inc out (bad) pop sbb sbb shrb xchg sub loop cs cs add loope or inc mov movb scas (bad) mov xor popa or and iret and add add push sti xor xchg bswap cli xor mov clc push cmp fcomps cmpsl xor pop or scas inc mov cld sub (bad) mov (bad) xchg sub jp xor sbbl pusha add ja jmp cltd push js xor nop mov icebp push adc inc and sub add dec mov mov fisub rcrb add (bad) cwtl cmp xor mov mov push or add dec cmp andl xchg in cmpsl pop mov (bad) lret outsl dec (bad) std and in mov jge mov sbb push dec inc pusha in cmc dec iret pusha sbb xor cwtl jns outsb pop dec daa mov and xor nop inc in mov sbb pop sub mov cltd hlt adc fdivs cwtl jl inc sbb inc inc test mov dec pop and je pusha loope cmp sub clc xor sbbl adc adc sbb cmp rolb mov or adcl dec lods adc adc xorb notb pop cmp jno cmp repz lock add pop (bad) hlt jnp movl jae ret popa rcrb adc jp inc mov xchg jo aas jbe dec nop sbbl pushf cwtl pop leave dec addr16 movsl repz cld mov lds out ror inc in jg pop dec push fiaddl loopne push pop pusha sbb push mov or les mov xchg test aam aaa loopne mov cmp fs or mov enter scas (bad) and push (bad) fcmovnu inc pusha jg or add js popf nop (bad) mov xchg in mov xor test sti mov aad jno adc pop inc add inc add ja cmp mov mov jns jno add sbb pslld cmp cmpsl adc cmc in shlb push ret adc pop cwtl or jmp rorb and adc arpl cmpsl cs push pushf and sub mov aam and dec and cmp cwtl inc adc mov inc dec scas cmp mov mov sbb sub inc fsubl inc icebp lea sub in mov sarb or xor push or adc fs cmp mov mov int3 imul jns je nopl repz subl aam je js sub jl add out xchg dec push stos and or loopne nop mov scas insl inc jno int pop jns bound push loope xchg pushf cmc push adc mov cmpl jns pop add movsl mov push xlat sbb mov nop cmp fdivl mov and js cwtl xor enter lock add imul inc add push mov lcall popa inc sub inc or sti or js mov (bad) int3 push push pop or iret xor pop lds loope int and inc dec mov dec pop and fsubrs jb mov bound (bad) ja popf test call call mov leave addl or or sub and or add xlat and sahf in mov sub and leave push mov maxps nop push jb cmp add pandn test adc pusha sub jns in rorl (bad) xchg hlt mov es mov (bad) sbb or outsl mov or (bad) push xchg hlt outsl stos negb add pop mov adc cmc add jbe pop inc aas push xchg push out push int3 (bad) fsubs loope push test or mov (bad) adc cwtl add (bad) jo repz xor test lods hlt sahf adc stc sub orl jns add mov lea jl jmp xchg add xchg adc mov mov sub int andl into and xchg sbb or hlt inc in test insl add fisubrl jmp bound insb pop fnstsw xor insb rorl addr16 aam xchg fucomip dec push xchg inc clc leave mov or adc les and loopne and aaa enter add leave sub adc shrl mov adc and outsl xchg inc (bad) xor popl or xor outsl sub (bad) popf data16 inc or or sbb push mov and cmp sbb mov and orb and add sub fstps nop addl xor icebp pop call movsl and dec pop insb xor sub fdivs xor mov jno push add mov in sbb mov xchg push push sbbb xor dec cmp push mov mov xchg iret xchg mov push fs in xor bnd sub es adc add cmp mov xchg sarl mov sbb push fsubrs mov add clc xor outsb les adc or notl pop pop test outsl ret lea xchg xor mov in dec xor call mov and mov addl sub dec scas dec jle adc fs or fs or xlat pushf stc push inc rcrl cmp push rclb jmp mov inc xchg fdivrl lods adc clc and dec push mov imul lret lock push shrl inc push or mov cltd loopne movsb es hlt scas mov cmp leave inc call call rolb xchg cmp mov in fdiv cmp movsb cltd les int3 loopne js mov movsb js test inc xchg xor outsb mov jno in and cld lcall mov repnz sub xchg rolb lods xchg adc or mov add pop inc xchg cld mov mov add (bad) rolb pop repnz jo adcl (bad) pop pop sub add rorb and and (bad) inc sub cltd aam and dec cmp outsb mov pop dec mov or mov push cmp pusha add sub ja mov enter imul aad sbb push in xchg mov test xchg orl jl lret pop js inc xchg mov mov (bad) mov fs in shrb lds mov push dec mov xor imul movsb pop arpl aam mov fs or hlt fdivrl (bad) sti mov fdivs and icebp rcl add or (bad) js sub or push xor loop ss push add mov stc or in add scas stos cmp (bad) repz or mov enter (bad) leave mov adc xchg icebp inc sti dec or and rcrb mov push pop aam cmp add sbb rclb add movsl mov in push mov gs or inc cs mulb or out cld test pop out sub sub sub adc shl fs mov add or and pusha stc pop inc in and xorl test lea lock adc inc or into leave jb test pusha mov sbb loopne jg adc jl loope lcall jo pop mov add out mov out (bad) mov decl add fsubl fwait mov ret mov pop or clc leave mov loopne test fisttpl sti pop cli or cmp or or movsb inc lds xor inc sbbb mov and pop sarl and scas popa mov mov lcall jg add stc call cmpl and out icebp dec pusha les addr16 lcall mov push dec push dec push pop mov xchg (bad) out pusha mov (bad) shlb outsl xchg faddl cld cmp add lcall mov cmp cltd lock shll movsb jmp mov repz sbb inc mov dec jg and icebp subl incb test (bad) int3 mov and addl push mov jno adcb std nop push rolb enter mov or imul mov lcall out (bad) icebp sub xor js and mov (bad) push cli pop dec mov push imul int daa mov or adc rcrb outsb pop decb and push xor aaa iret xor dec (bad) push cmp mov mov lock loope sbb xor mov xor mov push leave sub push mov sbb ret mov or popa add dec jmp (bad) repnz daa jl inc outsb ret add inc popf es push lret push jo (bad) jp or add ret std dec sbb rolb jle pop cmp push cltd mov in (bad) xor pop into xchg adc stos scas push add cwtl popf push add jb pop add cs movl dec std call lret mov fidivrl cmp xlat es jle (bad) in shlb out mov sar jnp sbb inc in push ret sbb sbb (bad) subw repz xor mov sub ret adc mov inc or add loope jg sbb pop mov adc stos inc test ret jo in and mov outsb orl add add mov jnp add (bad) outsb rol mov loopne enter xchg (bad) iret xor inc rcrl push sarl mov mov outsb int3 jb add icebp cmp insb sarl iret xorl in mov clc pushf out and repnz stos mov or ffree mov inc jge rcr inc inc repnz jmp and add jbe mov xchg mov or mov leave dec add adc mov or ds add (bad) hlt cmp popf adc xor jb mov xchg mov ret cltd nop mov or or in add lcall ret fsubrs or jb cmpsb add pusha jns stos out sbb mov fsub xchg xor fiaddl js,pn nop stos mov mov std adc rorl jp xchg call sbb (bad) je and stos sub (bad) or addl and nop cmp jne xor in addb push fsubrp push adc mov mov es test pushf lahf outsb js dec add mov or sbb aad mov das and inc int3 add or push dec cmp in sbb call jb lret inc cmpsb sbb popa add inc sub and aad mov mov in inc mov std or call test in pushf pop jno add test enter pop nop fs inc inc and inc push jle push cmp mov mov sub add nop cmpsb fdivs mov out add nop add lret lcall xor stc mov push repnz add xchg add xchg lock (bad) loop push mov (bad) hlt cmp xchg jo add out and outsl leave sbb mov xor xchg mov aad add call int3 test icebp mov cmp inc hlt test cmpl pop nop xor xor loopne rorb lcall fiadd ret (bad) xchg add lock push and jb adc ds add sbb stos psllw iret and repz fwait clc bound inc xor and rcl push pop cmp add mov pop and fwait jnp and into dec or sbb js and sub xchg xor ret pusha mov adc adc dec lock and add out push cltd sub loope rcrb push js sbbl cmp aas pusha les call pop movsb push cli xor inc imul ja xor in xchg and add cmp add jno lock inc call pop call mov pushf xor push or sbb jp cmp jnp fsubrp jo xor xchg pop mov lret sar negb dec push fsubs or add andb divl sub mov xchg js add pop in jl sub sbb lock sub movsb or cwtl out lahf les push pusha mov loop inc inc hlt or sub (bad) shlb (bad) loopne pop cmp movsl dec dec shlb mov add aaa lods stos mov cmp or push sub inc add jo sub push jg (bad) sub sub or aad adc pop mov sbb ret mov add outsl out test hlt cmp cwtl sbb dec sub adc int3 test rol add mov pusha les add xchg mov outsb les data16 negb mov sahf add (bad) jle addb notl pop repnz and or ja add (bad) aam (bad) jbe xor inc rcrl rcrb xchg lcall xchg scas mov das add fsubrs insb cs or lcall xor pop loope cmp int push fmull sbb jb push fs icebp inc mov js lds mov add xorb add repnz or inc inc or cltd and and es lock add mov aad test int cmpl ret push lahf or cmp and cmp pop divl outsb int3 push je add lds movsb and and mov mov adc jnp cmpsb and mov adc xchg stc out cwtl inc xchg or ret outsl add add or cltd sbb fadd push lock or mov push scas hlt adc orb ret fnstcw mov cmpsb or lock pop fisubl int fild push in (bad) and sbb loop add and je test cmp bound adc add repnz in mov jns dec lret sahf out add jo jp shlb lds and sub jg scas shll and xor mov and lret ss sub push shrb dec mov ret imul jns cmp pop mov inc and adc mov pop add dec jnp dec enter in push loopne lahf out in repz dec dec stos mov shlb xlat pop add cld jb xor sbb stc and ret pusha mov jmp sahf lret push mov sbb (bad) mov and cmp sbb add mov call or or popa jo test push jmp add add enter ffreep xchg les insb stc cmp jl or (bad) out lods dec cmpb fimul add mov pop sbb out call add aaa add and sbb or loopne cld add ret out sbb jmp xchg sub adc sbb mov cwtl insb cmp cs (bad) subb popf xorl sub add push repz test repnz js clc inc add mov cmp inc sub sub leave imul lods adc test jnp (bad) xchg mov jae pusha jbe lcall mov inc (bad) fbld lcall pop jge loope test in repnz mov mov jmp push push dec loope test dec test cltd (bad) jae imul adc sub sbb (bad) or pop lcall adc (bad) lock add push nop call and and inc dec push adc inc mov or push pop lock jo inc adc pop mov jmp lds ret pop xor loop pop inc (bad) cmp dec jle xor in add or adc xchg dec push ret ss push add push int3 loop xor pop sbb loope xchg push mov shlb jp inc je dec add sub sub clc fucomp stos adc pop sub push add and cmp sbb cmp add add repnz jae jb lds pop call push pop lods dec out xor es testl mov mov push stos lret into pop add xorl add sbb aam sub jecxz mov (bad) repnz sahf jne push xchg sub ret call push cmp and (bad) lea lods mov nop xchg pop add push jmp xchg out pop add xchg push fadds in xchg mov in mov decb and sbb adc inc pop stos xor adc pop dec call adc icebp sti (bad) mov add push sbb adc push les vmread mov add call mov aaa bound test ret hlt ds aas fnop mov fcoms js cltd testb sub out js out xor sbb mov cwtl rcll add mov mov ja or add mov and js and callw lods shld jbe add mov dec stos dec add int (bad) inc push rcr lds inc mov pop fbld or (bad) jo insb loope adc mov fmull rcll dec cmp pop inc sub xlat jne add (bad) sbb lods stos xor stos movsb in fcoms mov xor sub pushf cld cmp js fs inc mov imul test mov sub add call or fwait test add sub dec add cwtl test pop cmp int xchg (bad) adc ret repz movhps adc mov lret hlt das sub in (bad) repnz shrl lea inc repz lock loop inc call fs test lods inc in push fstpl call test (bad) push xchg jo lahf jo lds roll incl repnz stos pushf inc xor loop test loopne sub mov adc cwtl push mov mov jo xorl xchg popa adc add sub and das lods lret into fimull inc icebp js popa or ljmp test cmp jl sub sub fdivr push (bad) clc rclb fldt mov jle inc fdivrl inc inc sub xchg rorb test add sbb xchg mov and ljmp in test jns add mov addr16 mov add repnz aam dec nop mov hlt popa jecxz stos repz cmp (bad) fild cmp jb lret stos push jne movsb je in hlt mov mov push push cmp mov adc cmpsl sbb movsl fisttpll cmp std add js cmovno cmp sarl movsl mull jle sub and (bad) dec test fadds fwait mov or pop push repnz add sub sbb pop or ljmp push cmpsb mov lcall into (bad) sti xchg out jp sub pop es jl jns dec roll add xor and lcall jmp les cmp pushf mov mov repnz mov adc cmove xchg sub add fcmovnb mov lock lods mov arpl pop jne pushf xchg and lret in mov lods ret add inc inc ret jns jnp adc lock sarb repnz loope inc or lock and hlt ret in int3 xor inc fiadd in test xor sub into pop fnstenv mov addr16 lret push test xchg int3 call pop in adc cwtl jbe xor es lock setb jae dec (bad) pop fnsave adc loopne ss sbb lcall out add xor inc sbb mov aad clc ret test or sbb xlat icebp subb shlb ret clc orb or adc enter pushf pop mov dec add mov inc mov cmp push mov pop add mov mov mov lock add cmpsb mov cmp adc xchg fisubr and imul xchg jg movsl fcmovb mov mov jo inc cmp mov fadds mov add repz mov mov xor dec adc lahf or push and (bad) mov ret and jmp es sbb (bad) jns rolb sbb or xor xor es stc lahf into sbb int3 dec (bad) mov sub rorb or ret fs dec sub sbb fidivr add int3 sti push push fdivs pop je add mov lods lock pop jge add pop xchg dec inc je in xchg xor je xor cmp cmp mov fimul mov movsl popf leave fcompl sbbl sub imul mov popa scas rorl js lret jle push add enter add (bad) xor int3 pusha mov mov iret sbb aaa adc add or cmp mov inc test mov dec or adc adc subb sub shll add mov or call loopne xchg pusha arpl (bad) fldenv inc inc mov mov jg mov cmp lret inc lds pop or mov add popf ja pusha xor pusha aaa stc enter and jbe insb push xor cmp aaa pusha divb jg mov or and xor add mov inc rcl or pusha mov js and insb or lods not push mov stc fdivrs rcll fs lahf and sub add mov clc sbb loope stos mov or dec enter and push xor decb pusha fisub lea insb jbe enter call cld xor jecxz or sub push pop xor mov push xchg sbb and aam adc or and aaa clc inc xchg nop mov xor pusha xchg std xor mov inc mov outsb dec movsl lock movsb inc fistp add adc mov nop xchg std shlb pshufw mov xchg jge movsl sub xor sbb push mov fmull enter pop cmpsb pop add pop push les in add jae fucomp clc lahf xor xor dec add imul sbb dec adc and es dec pop inc dec xor xor lret and leave adc ja push decw stos roll sub dec les and add sub inc clc push inc hlt and add mov push inc sbb ror mov inc das and mov inc sub in je or adc add sbb mov push notl dec xchg (bad) jo cli pop xchg xorl pushf cld add sbb je ljmp sbb mov leave xchg push shr mov rorb ret pushf or or (bad) mov loope leave sub xchg jo add pop sbb add pop cmp push inc add cwtl jae add addr16 clc fsubl les (bad) int3 adc lret adc jl movsb adc inc data16 rorb mov push xlat and in nop jl dec jmp ror jb cmp push xchg push inc pop addb adc ss mov cmpb repnz fld stc and popa add aam jmp push icebp pop pop sbb or pop insl pop (bad) xor push fsubrs xchg (bad) (bad) stc add dec push gs test sub loopne in fs xor pop lods adc push add mov cmpsl add jo add push repz xor jb mov xchg add xchg adc pop subb roll mov sbb xchg pop stos sub add fldl ret mov add call mov sti (bad) sbb addr16 shll pusha lahf xor pop bound cmpsl mov inc loopne xchg (bad) cmp dec adc and pop xchg sub xor jle rolb add loop das daa cwtl nop pop cmp push add movsb testl and pushf mov stos pop push dec or push hlt inc lock addb call adc or add mov or pop xchg loope ret nop andb mov ficom sub test add popl (bad) mov inc add cmpsb ljmp inc cs decb inc insb outsl sub inc and pop add cld lret rorb cltd dec adc jmp arpl mov adc cmp jbe stos push inc pop and sbb sub fcomps inc sub std xchg int3 mov dec dec cld xorb push std dec icebp jne sbb ret sbb addb lds inc lock nop sbb or cmpsb stos jo add mov jb dec inc jecxz loopne inc adc inc and sbb sub add inc (bad) jle clc xor inc decb jp mov je sub in aas outsb mov data16 (bad) es push add and xor xor xor mov add xchg adc cltd call jge push push ljmp and lea jo imul test adc pop push test pusha movl xor insl sub jae je xchg imul add cmpsl pop adc mov jbe int3 sbb pusha bound (bad) jae or arpl sti xchg fs add mov scas es xor pop xchg pop add icebp adc add jl cmp orb int roll fmul cli orl or dec add ds sub sbb inc (bad) icebp cmp cld push sahf sub xlat insl push mov inc mov sbb xchg test and add lock fcompl sbb imul movsl sub inc popf add ret aad push and pop movsb cmpb xchg sbb enter add push xchg pusha cltd push fwait xor pop mov les mov (bad) ja push daa mov xchg enter dec sbb or inc inc std roll xor add lods (bad) add fstl push add xor inc xor cmp lock int3 les mov insl dec fidivrl mov and sub pop xchg cmp cmpsl push push dec cld int3 mull mov cmpsl add and out xchg int3 add cmpsl pop push js loop cmp shrl addl add inc xchg ret ret push shrb (bad) pushl xor stc loopne (bad) rcll add mov mov pop faddl movsl call les push mov sub push nop in loop xor cmp inc push nop add push scas inc aaa push gs test mov lcall sub mov mov cmp cmp gs and les dec mov lret fcoms and xor cmp (bad) rolb (bad) mov test xor inc or in dec adc test inc add fadd out idivl test out sbb jmp or cmp xchg sub test sbb ds dec and push popa cs stos outsl loope cwtl test int3 mov cmp cli fbstp call outsb clc mov sub cmp jg add lret ret mov test jb hlt rcrb xor addr16 sti out dec sub ficomp adc test fwait cld pusha ljmp js iret xchg aam addr16 pop mov loopne je jmp je add mov in mov sub dec and jmp adc fstl push (bad) add cld mov xchg cmpsl dec loopne pushf cmp rcr pop (bad) jae andl aad clc shlb inc icebp jae mov add pop cmpsb inc jno dec push clc in adc jecxz xor mov test inc pop or nop mov in jns add jecxz cmp sub xor pop push das xchg pop cmp xor mov push cmp into cmp pop adc out pop mov ja mov arpl inc stos roll xorl rclb dec mov mov push xchg fstpt movsb mov jb insb cmpsb out inc adc and dec stc dec pusha adc mov popf jae (bad) mov ret rcrl fldenv or (bad) or dec inc mov cmc outsl loopne adc loope push cmpltps mov (bad) aaa movsb mov int3 mov arpl adc add fcmove or pop add and movsb xchg xor mov cmpsl aas inc or push cld lods test inc je or mov pop pushf and fdivs and adc and add xor sbb add in lods push pop jb pop push add mov lods faddl and push sub dec je pusha test and hlt adcl mov jne lods push pusha and mov subb or pop gs cmp sub mov xor push xor in lcallw enter sub movsb xchg addr16 adc add popf xchg fnstenv in pop and dec test or xchg js inc nop rorl lods sbb ret inc cmp hlt es in aaa xchg movsl cltd js stc clc or pusha insb pop and dec sbb xor dec dec fsubl shll add loop sbb sub adc jnp mov pop jecxz mov mov loopne andb frstor sbbl jg rorl lods cli js sbb adc js xchg mov push movsb loope or pop shll imull (bad) or loopne sub sub push scas or mov call fcomps jo xor fwait in clc mov loopne pusha or clc out or or dec adc out sub vpsraq icebp mov (bad) icebp xor and or fiadd cmp add (bad) xchg je push daa add mov sbb scas mov or dec pusha xchg int3 or push and dec inc (bad) leave mov or insb push add mov and inc sub dec (bad) pop test test add mov nop xchg adc adc mov xor aaa into sub cmp sbb ficom sbb push mov movl out pop js inc cmp xchg cmpsb inc cmp fisub xchg pusha mov adc stc add aad mov cmp add mov inc mov jbe adc lock sbb xchg pusha js jnp jne xor sbb out add cmpsl dec jmp push out adc sahf dec rclb dec pop mov push stos (bad) xlat cmpsb fildll fcoml add test dec cmpsl add mov xor dec loop mov xor adc sbb fsubs insb sbbl mov xchg hlt xor sbb inc xchg pusha loop aam mov jp fcom or pop mov pop and add adc aam stos sbb xchg movsl ret incb push cmp call (bad) sub aam add jmp jecxz sbb sti inc in cld xchg inc xor mov add jae inc test push out sbb xchg (bad) sub stc push mov imul or mov pusha pop dec jo cwtl sub inc int3 cmp xchg inc fnop lock insl in and add fdivs ficoml pop inc pop add xor pop jb adc loope push int3 mov push in orb or xchg aas xchg add jae imul out or xchg or movsb addr16 xchg mov fisttp and dec sub hlt or adc inc jmp movsb cmp cld imul les add cmc inc fnsave sbbl dec sbb enter xor push divb add pop add aaa movsb inc loope sahf movsb lret ja arpl xor mov clc lcall rorl xor adc adc and dec jbe popf (bad) mov xchg (bad) cld jge ds push arpl cmp push test lea push sbb or sbb or andb adc outsl jl,pn cmc icebp or pop jg getsec dec inc and fstpt add enter ds cwtl sbb push js jmp add jo nop es sbbb rcrb call test in mov add cwtl int pop lock xor cmp dec orl mov pop ficoml ljmp icebp pop fsubl cmp mov jle js mov jecxz jecxz push adc mov ja je std fcomi jecxz dec out jmp pop pop cwtl xor mov cmp mov sti pusha outsl clc sub fucom sub sahf (bad) xor sbb in ret jl push jo orl xor loopne pushl jo pop scas jb dec xor aad inc add sub adc push dec nop arpl popf andl dec mov int3 sub adc faddl pop push and xor and or jle (bad) xlat sub lret add icebp pop in mov sub mov mov rol add (bad) cmovo mov xchg sbb repnz dec insb mov jb cs xor lret in sbb xchg push jb inc or fadds (bad) popa or add adc idivl push sub sub ficom (bad) xchg mov dec int sbb test icebp out je inc iret sbb arpl fisttpll or mov pushf adc insb or and rcrb das int3 inc push aas and mov icebp sub rolb int3 repnz mov add addr16 js shrl clc rcrb push lea push inc mov and shlb mov call jl sub aam or add adc inc xchg inc in and enter test push sbb inc cwtl inc adc cmp cwtl sbb xchg icebp add repnz shrl mov add fbstp adc add mov inc dec sub imul lret jns mov adc dec mov xchg shrl dec or loopne cmp dec xchg push in lock mov and call adc popa cmp mov loopne dec dec daa sub adc mov fnstenv int3 add push sbb sub nop or or daa xchg adc sbb mov enter cmp scas mov jo (bad) adc pop xor xchg xchg and arpl pop sub daa and cmp cmp xchg outsl dec lahf push sbb and daa lsl ss int3 or xor imul (bad) sub pop pop jl or push xor jg add lcall scas add loope push sbb popf pop dec fdivp jb adc (bad) pop and push push sbb sub xor pop and mov jno sub add jb das add shrl lahf sub xchg sbb call nop cwtl lcall scas pop sbb test jle (bad) sub lahf jg add push cmpsl add rorb bound mov ja faddl xchg jge scas xchg testl js xchg sub adc and adc mov cmp sbb and xchg sub push push test jp cs mov pusha xchg cwtl and icebp push (bad) cmp pop adc stos xchg ds and adc jle test add decb test rclb xor popa xchg sbbb cmp sub sahf xchg add push into outsl mov test or fidivr add pop sub add inc adcl out loopne movsb jle pop jge and in (bad) mov adc dec (bad) mov sub push xchg sub cmp jae jge lea and sbb xor insb push xchg pusha test jnp test mov mov repnz loopne cmp or addr16 jg cld adc and add notl imul sarb in or cltd dec adc pop andb bound push mov lcall mov or xchg ret inc pusha sub xor cmp sbb arpl pop mov mov and jle mov dec leave test or out adc sarb or add inc dec js push test dec pusha or and xor sahf jecxz xchg or pop or pop aas pop or lds and or sbb pop jecxz dec clc popf adc out add das cmp push hlt std pop or inc and dec (bad) jo add mov add fs and jns out cld push inc add inc fdivs mov push subl adc call lods add xlat push mov sahf and add add pop mov fwait jle rolb mov bound mov sbb and adc popl mov sub adc pop jb lods push test mov in push test xchg adc xchg cmp or hlt inc push and xchg xchg push xchg mov jle cmp adc xor mov push pop or push or nop jle cld lock lock lods cwtl iret push xchg add adc push test push push daa pop or and repz ss cmpsb pop add pop (bad) sbb sub out insb dec jg pop sub dec dec nop sbb cs and sbb cwtl mov mov adc inc push add jecxz mov pop and les dec and jle ljmp mulb sub jg add cwtl xchg mov fs push add and movsb add pop ja hlt dec pusha int3 adc loopne call sub add subb push adc fidivl or add jb pop sub lods push aas or nop les sub aam sbbl test sarl int3 xor dec push fcoml cmp les pop sbb mov sub stos fsubs hlt in int3 sbb mov dec (bad) popa push jg xchg inc mov push add aad dec sub xor movsl adc xor pusha add aam movsb sub adc add push das push jnp sbb or test cwtl push les cmpl or push loopne push maskmovq testl inc call cmovge or cmp inc and ss sti loop pop adc mov inc sbb mov hlt into sub aas les mov das orl (bad) xor dec enter inc sbb dec in or xor js divl add lods xchg mov xor pop pop int3 sti (bad) mov mov pop or mov in test mov jnp fisttpl subb in add pop jmp add jns sahf fwait cld mov add cmp add and push and cmp xchg shrl popf dec mov nop sbb sub je cli cmpsl mov cmp jp into push add inc addr16 test clc les adc push or pushf add push and stos mov add mov xor and jl and inc test inc inc sbb jns cwtl dec and push repnz or mov xlat push ja sbbb inc in mov or rcll inc mov pop add push icebp or jo sbb mov insb xchg push adc jnp jne mov jo pop adc xchg mov pushf pop loopne aam jns cli lcall add mov dec in lock xor sub dec sbb jge lahf pushf rolb iret es dec mov mov sbb push jge mov roll cmp out add xor cmpsl cmp jno mov add in addb mov (bad) test movsb xchg (bad) adc jb inc lods jbe pop push push cwtl cmp sub imul pushf loopne (bad) push add xchg test (bad) je es and sbb mov xchg sub push fsubs roll adc pop adc cmp xchg (bad) nop xor xchg mov adc or xchg jmp hlt or push rol jnp xchg xchg clc std inc mov jge cmp add push enter pushf cwtl stos sti ja hlt xchg push std dec mov push pop mov ds jno or sbb rclb inc pusha daa push out in (bad) fs and xor or add push daa mov pop xchg jle mov jge sbb xchg clc lea add dec xchg std out popa dec and or add in lcall pop sub test and incb mov cmp mov xor test bound mov and (bad) loop ret sbb inc push (bad) ja adc faddp sbb xchg xlat rorl xor and sbb mov mov sub pop hlt jp add sub rcr add popf mov add stos dec inc inc in cs daa mov jl lods cmp mov cld jbe ds dec adc sbb pop dec mov jmp xor pop inc je das or sbb dec adc add jl ds lods and sbb cmp mov lcall and (bad) jo sub jge cmp mov enter mov xchg dec std push aam mov sbb outsl rcr leave sub mov add inc rcll sub pop dec inc and push sub push cmpl add push jle fildl insb (bad) jno xchg dec test cmp and sub pop xchg push adc imul inc inc and or dec jle xchg cltd dec add mov jo jmp pop aas or push pop in pusha sahf cmp mov (bad) sub test add daa pop pop sbb jae shl mov arpl cmpl adc mov and ror cmpl mov jne loop xchg add daa sahf stc sbb inc and push scas fadd adc std pop xor movsb or add sahf aaa cmp fnop push aas jge addr16 sti movsb sarb js add clc scas add push ljmp fnop adc sti je push push cmp mov mov out sbb jae add and sub pop sar pusha iret rcll lahf fdivrs aam roll xchg dec mov push ja add cmp imul xor jp and ja in and push test mov add xchg sti aas or insl mov enter addr16 add jnp mov rolb or pop arpl mov sahf int3 mov pop je js pop cmpb pop jo das rol outsb xor jno ja xor mov jo sub push mov sub sub add out mov lret push mov sti nop adc repnz adc std push jnp ret xor pushf loop dec sbb das add xor jg sub test jp pop mov or and js sub stc inc lea inc std push (bad) fidivl pop adc dec pushf mov imul jg sub stos jns (bad) or test pop pop repnz repz es (bad) xchg xchg or cwtl scas xchg mov push insb add stos push xchg xor stc imul (bad) stos adc sahf insl push adc mov mov jne test lods subl sbb add fbstp icebp rcll cmp in dec sti add popf add jge mov setge sbb pop push and pop aam pusha add xchg xchg sub sub add int mov hlt add repz pop add sbb mov movsb adc out and cmp idivl aas sbb (bad) push mov outsl popa adc add rol in add mov jl dec lock add ret jno pop xchg push int pop sbb leave mov mov xchg (bad) popa add into and icebp push hlt pop jb xchg inc (bad) pop pop sbb sub arpl jo add sbb and (bad) sbb lea xor pop pop insl outsb ret ror inc mov or orb xchg nop sub or fyl2x mov jg pop mov or rcll push pop push out cs pop movsb or xchg lahf dec ror adc and adc or jnp adc mov jmp bound pushf xchg push or lcall xchg mov pop adc push xor mov jg addb sub std mov movsb cmpsb and pushf add pusha fcoml sub and add roll cmc pop cli lds or mov mov repnz and inc jne clc scas pop fisttp ja mov subb jno cld and add inc sub inc sub test loop push cli jecxz pop add testl and loopne xchg icebp (bad) mov cwtl scas loope and ss push adc aas imul mov jle es faddl ret push les lock pop popa cld bound into rcrb fld1 ret xchg out inc lock mov inc movsb (bad) rol shrl jb or pop xchg or sub xorl inc or or mov stc adc ljmp mov int3 inc sbb out aaa int3 xchg inc pop in es imul xor and enter (bad) adc xchg dec xor mov stos inc pop pusha dec scas xchg pop andb fmuls mov pop adc es cmp std in mov xchg pusha lods mov bound or fnstsw (bad) je xchg xor jnp sarl jg cs and sub xchg add sub jns add xchg pop gs fimull dec aam xor shrb scas inc loop jb inc pop mov rolb cli mov mov and add sub cwtl inc movsb dec test push mov lret test rcr ljmp mov jle inc push popf push ljmp push stos sbb mov sti xchg add xor xchg add mov xorl js add sbb jge xchg clc pop mov iret mov jne push scas add xor mov repz add pop and shrl movsb pop jbe sub (bad) xor mov pop dec sti fadds loop push bound movsb mov xor adc add push sbb out std jg xor sbb cmp cmp test fbstp push xor test xor xchg push mov mov lock inc lret hlt pop mov inc arpl xor xor (bad) mov lods mov dec stos inc jno (bad) fs out outsb sub inc lahf pushf ret mov inc sahf mov das or hlt mov add jae lret popf test sub call or pushf sub jmp jmp and add or stos mov pop insb pop idiv adc mov and stc mov scas es mov cld push (bad) int add adc jp je and sbb inc sub mov or lcall adc (bad) clc test inc add push adc mov dec scas push pop aam jae or push pop aad mov les pushf inc dec adc pop xchg daa stos test mov (bad) js pop in movsb and xor lock jmp pop insb mov xor subb adc bound mov add pusha jecxz xchg push cmp mov jp loopne ljmp icebp hlt lcall pop out jns aam insl add xchg jnp mov or pop sub sti jg inc pop in pop cmp push or pop sub das jb adcb mov rol xchg daa subl popa mov jl add jg pop dec mov daa test dec ret lods lock movb pop pop jb add push stos aam ret add lret add inc test out jg in loopne (bad) repz mov icebp in jle xchg in out or cmp xchg aas test addb inc jecxz jbe lds add aad push cmp movsb cmp inc add push test xchg loopne xor rcr loop lods loopne sub scas dec xlat mov push pusha lahf cmp mov in add lods push xor adcb add cmp xor fwait sbb mov daa pusha sub and (bad) pop addl and add pop das jmp (bad) lock cltd xor and inc add mov repnz fucomp cmp jo pop jno sbb xlat mov lea push and test jne fsubrs adc cmp mov int3 xor add cltd ror icebp (bad) icebp mov and repnz xchg sub into xorb xchg adc daa cmp ds jo enter scas adc adc in add (bad) mov or mov jp xchg add (bad) xchg or push lods pop not sbb das popf and xchg xchg xor mov andb xchg cmp dec test (bad) adc lods mov out rcr cmovs sub das (bad) pop push mov mov cs jnp aam dec loopne mov or mov in mov adc je (bad) hlt into mov aas push mov ja sbb and fcom lret inc and imul inc add xchg cwtl loope push scas sbb jne cmp cld sti mov jb imul cli fmulp outsl aad lea stc mov mov js push fs int test test lock (bad) push fmull add aam cwtl adc daa xchg adc movsb or pusha sub xchg addr16 in push add cwtl fsub add adc push mov dec dec mov adc sbb adc push les aam lods shl mov sbb rolb adc (bad) stos call test add jne shl push stc xchg sarb pop pop jae dec lock leave addb mov push iret sbb xchg jl sbb inc cmp sbb js loope out add (bad) insb cltd jno scas add mov push fldcw push (bad) icebp jne mov mov cmp sub sub xchg insb fsubrs xchg lock cmp pop sbb data16 lods add sub test or (bad) int3 js xchg aam add jge out sbb xor add test mov pop xchg sbb xor cmp inc mov sub movsb clc add mov clc pushf shrb loope mov (bad) jno xorb push sbb out test outsb fs mov scas mov mov pushf mov test hlt xor ss or sbbb push dec sbb adc xor push int3 and sbb xor mov enter xor sub les adc clc xor mov pop or inc dec jle and mov xor cmp mov enter pop test jecxz dec imul fs xchg mov pop xor add test fisubr inc sahf dec pusha les or and and out insb mov in into xor adc push ficomp mov cmp sbb or jg jne pop pop insl and adcl (bad) ljmp lahf iret and xor xor inc je sub mov xor lret dec sbb and test add inc je inc addr16 adc sbb dec enter js xor addb int3 lret rclb sbb orl lock movl in mov sub mov dec adc cmp cmp mov dec xchg loopne jl mov jl add cmp xchg movsb sbb mov push and or dec pop repz jl das jl inc mov mov cmp lods jnp arpl rcrb fs dec dec xchg mov fstl shl sbb test cmp add fistpll mov or push xor xchg cmp movb jmp xchg enter pusha insb push xor mov cmp ljmp shlb divl or sar jo aas and inc sub stos jnp or subb add mov popa leave lret add jmp dec xor hlt insl fwait pop gs jne pop cs lret movsb nop jp mov js add repnz data16 dec fcomip loopne std sub jns int3 clc dec sub loopne int out or push add ljmp lea aam xor hlt ds lock and pop pusha dec sub sub and (bad) adc xchg dec lcall insb sub mov rolb dec shlb pop ss sbb dec insb inc rolb sbb or fs sarb and xor or mov push fistp mov ss sub cld ret inc je dec add fcoms sbbb bound (bad) or dec mov rorb inc test and add xchg arpl jmp call or pop adcl cs cwtl push dec xlat adcl in clc dec push pop daa or push les cwtl loopne jecxz jg add mov mov sti adc pop xchg dec add pusha add inc jo int sti lods mov lock (bad) sbb mov mov scas in jecxz pop iret test es cs adc arpl jo push ds pop dec rcll adcl dec adc cmp mov push xchg popa cmp or and xchg addr16 and mov and mov xor sub push in sub jle das mov loop mov or fldcw jae jns ljmp jmp inc xchg loope sub loope cmovs pusha cmpsl inc cmp test stc mov sbb sbb inc jge pusha out sub push dec push and and fcom add add push lcall adc mov add or jnp cmp adcl rol add test cltd xchg pop and pop enter out sbb push xchg cld pop das and and xchg add and jl int3 loopne rcrb mov mov test mov lahf data16 mov or dec ror nop mov xchg sbb loop dec int3 loopne fcmovnu inc inc cmpb pop fnstenv sub sub mov mov add daa cmp ljmp xor popa (bad) lock fldenv xor inc leave inc (bad) xor push sbb add mov mov add jns loop adc cmpsl jl pop (bad) xor jb es cmp sahf cs dec pop (bad) call ljmp mov enter xchg loopne jbe mov js sub xchg jl jo add adc dec jae xchg ret ret inc jbe shll rol lret subl ljmp ds jmp cltd jl out mov loope lock mov pusha and push sub cs cld and adc inc or xchg xchg xchg cwtl add or sarl test mov inc dec xchg add mov fs sarb fsts xchg pop mov jnp sbb daa test sbb mov adc pushf jl fdivs push inc mov mov lods pop dec and nop or frstor jle mov add int mov add push in add jp mov pop (bad) sub sbb adc rorl (bad) jno subl scas add dec das sti sbb (bad) imul pushl jmp add cmp (bad) push sub cwtl mov inc addb aam xchg or mov cmp or repnz pop in lret subb mov repz cmpsl adc and jb popa jle adc or mov scas xchg mov cwtl xor cs fs cli inc mov mov and int3 cmp (bad) xchg mov xchg xor (bad) jae xor pop cmp xchg cmp and scas mov insb mov sub aaa xor pop popf test add test sub jg pop mov fs cmp or pop adc es mov and add rorb (bad) sub movsb out pop adc xor xorl cmp in rolb in shll xchg cmp jg jmp mov int subb mov mov mov and int faddl fs or jbe (bad) mov faddp es inc fdivl pop pusha or ret sub xor fildll sbb in dec loop dec (bad) pop loopne adc push in add mov mov jmp jne xor add subb xor cmp add push cmp pop ja or mov inc inc pop loopne js mov pop in xchg mov into gs or adc test dec sbbb cmp mov int outsb decl adc add pushf mov dec push add enter jle add push pop test mov lret orb or and jne push or loop adc mov fbld and mulb xchg adc xor cmp js test jae,pt sbb outsl jb (bad) mov cmp inc lods push mov cmp adc pop lcall cmp imul sbb cs cmp cwtl ja mov out add inc (bad) xor sbb mov (bad) xor in in mov jo inc mov jb inc sbb mov push loop inc add mov fwait rolb (bad) xlat add cmp sbbl leave into pop xor lret rcrb add lock pop lcall test adc or adcb insl dec icebp mov ffreep outsb jge cld pop inc add pop ret sbb or imul lods sbb add xor pop jnp or mov pop dec and pop call and adc mov add sub test add and xor shl andl cltd mov lds xchg in sbb ds or in lahf stos inc sbb mov pop and push mov inc lahf andb in mov (bad) push ljmp loopne cmp xchg push fsts or stc xor adc sbb mov pop cmp cwtl lods sahf or adcb jo sarl dec sbb dec or push or adc xlat dec test cwtl outsb sbb xor jns mov std lfs sbb add xchg lock dec xchg js js xchg pop inc shl sub bound cld je pop cmpsb cmp xchg xchg popf jno cltd inc jns xchg div and mov aam jno mov xor mov dec pop enter push or scas lods mov add or mov pusha xchg or test test adc mov and xchg mov and mov or add out lcall cltd (bad) cmp hlt or test jns mov xor jnp aam bound jnp or int3 loopne sub cmp push sbb mov add push int3 sbb pop adc xorl ret mov addb sarb out lret sbb loope loopne pop loop in sti jb push add arpl (bad) or lock lret in int rcl and (bad) icebp mov pop pop sti lahf xor (bad) mov inc pop sbb daa ja mov inc insb es test add mov dec fs fisub dec push nop inc mov stc dec xchg movsl pop (bad) push xor into mov nop pop test ret (bad) xor push sbb xchg orb mov jp bound sarl test je adc mov mov sbb or add jecxz jbe loopne inc mov pop mov push pop push add jge adc enter aam movsb repz aas inc push mov cmp mov (bad) rcr loope and arpl ljmp dec (bad) xor xchg mov and or (bad) sub xor fmuls cwtl fdivs leave add sbb fsubs in sarb adc dec call or test sub mov adc scas ds mov enter je das sarb enter dec dec xchg or inc mov std xor lret pop dec cwtl and dec inc mov mov sbb fdivrs mov outsb mov mov fildl mov rclb enter test inc das dec daa in dec sbbb add fsubs lock jo dec shll lret insl mov cmp cltd xchg mov cmp sub je add hlt sbbb push lods aaa pop in inc dec sahf or fwait mov sbb enter add fnstsw sti pop test sbb xor sub aad in mov fildl icebp roll mov in inc jbe faddl adc in jge orl cli sbb push orb jne mov pop cltd clc pusha mov push sub movsl push movsb push orb pop in cmp test jno push jns subb and mov pusha aam dec or ja movsl lock aaa lds inc push sub mov rclb negb jnp sub mov aam sub pop gs add stc out pop jnp xchg pop push test xor jle pop test push pop xor pop inc mov loopne dec push sbb sub mov mov pusha fisttpl and pop leave mov fmull repz and loopne push in adc push inc outsl jno sbb mov mov rorl addb lods mov es shlb cmpsl cmp add pop inc adc rcrb jne jb pop loop and add xor shrb mov add push pop insb and mov ret and out jo fcoml in push sbb push push cld nop fnstenv mov xchg jo loop lods lods adcb mov ret jo lock xchg jg clc sbb add hlt shrl add in into dec adc movsl add and mov xlat jg or leave xor in imul (bad) mov (bad) cmp pop cmp mov sub pop cltd pop adc aam adc sub lret sbb mov adcb sbb adc push xor add xchg lret sub gs ljmp pop pop jge clc jp clc dec push rcll add fmull repnz cmp pop jge xchg pusha adc stc sbb and cmp fwait lods push cmp lea sbb test (bad) push push bswap ret and stc pop subb push cmp je adc mov (bad) je out lock cld pusha shlb movsb leave mov enter call push sub arpl daa popf push adc add sbb jo into int loopne (bad) xor mov rolb imul pop call jbe pusha jecxz pop fisubl xor int shl subb inc imul daa stos xor faddp add xor push jbe push insb adc mov or jg add mov inc push hlt dec insb ret inc or xor or add cmp push sbb jns add movsb inc dec mov xchg or pop movsl pop dec mov icebp and mov adc leave mov add inc xorl popa cmp dec xor stos sub movl jmp int3 or lds jp stos inc push pop fwait cwtl xlat inc push les cmp and stos ss (bad) fdivrs jmp shrb pushf xchg test in cmp movsl cs fs orb push sub cmpb out or insl add sti pop clc push add cs fldt (bad) push adc lods pop dec dec or cmpl out add mov push pop test lock mov stos pop sub xchg xor sbb ret mov out mov add (bad) mov jl cltd or in add xchg pop fdivrl dec sub stc jno jle mov stc dec inc jo fwait dec push xor dec xchg (bad) mov or enter in cs das jae xchg pushf xchg mov sbb fisttpll mov jbe xor (bad) dec xchg mov scas and sbb addr16 adc lods in test xchg cmp in mov push pusha rol scas frstor sbb xor add mov jne add rcrl pop push stos mov xchg xor xor and (bad) movsb pop repnz data16 xor xor movsl push in test loop and cs sub cltd scas cmp mov jae cld add fdivs pop jnp (bad) arpl jg imul out add test inc sbb mov jne add loop popf dec in fadds or pushf and jl sbbb ja pop sub lea pushf arpl mov repz mov xor add cmp mov mov int3 fbld imul mov sub add jb,pt int imul lods inc mov and ss mov and jno inc xchg cmp out es inc jne sahf fmull add jno jnp std pop xor les movsb pop repnz inc pushf cmp and inc dec mov cld dec jns and sub add xchg call cwtl dec cmpsb cmp jmp or iret je dec inc enter fdiv and adc dec or loopne shlb mov add pop test cli and test cmp inc cld jl popf fdiv (bad) xor icebp adc sbb fisttpl adc xchg out or add imull xchg ljmp test dec into dec jne cmp shrb sbb icebp push inc inc push stos fs popa add inc pop sub jle and inc test je clc jae test mov mov add fcoml shlb movhps (bad) shlb cmp fwait jnp xchg and xor add inc shlb test arpl clc cmp std inc mov mov pusha movsb pop repnz xchg and push lock sbb cmpsb dec inc insb xor imul xor jno (bad) clc int or movb dec out lods addb ror jns pop xor inc out jo orl xlat xor mov shrb dec scas stc popa add xchg cwtl sub push scas push les sbb adc out inc mov hlt add in push insb mov jno mov mov sub dec data16 lahf sub push sbb xor push aam test shll adc dec pop js pop rcll daa das lret rcll scas dec mov xchg fadds mov mov sbb mov push pop ja adc cld fldenv add pop jno mov jb (bad) or add jl cmp divl and xor xchg add lcall xor fdivrl xchg (bad) testb cmpl push xchg sub cmp add out xorl pushf cmp push das pop jo mov adc or je adc sarl (bad) lcall pop and pop adc stos sbb sub sti call cltd push in lods dec sbb jge add or test add dec out add fiaddl in pop mov adc inc xlat in xor and mov ret scas loopne add mov mov push int3 mov lock xor dec or add pushf insb sub ficoml jno jne dec adc push dec mov add jo mov stc mov pusha fs add (bad) fldenv popf imul cld je sub jo mov stc inc dec mov add mov dec int3 mov dec xchg cs les mov cmp sti cmpb xchg dec push add xor jl or xor das adc jle test adc jecxz insl lods test or mov dec push in in inc call sub ret shr (bad) mov mov (bad) and or sbb test xor sub pusha int bound and mov lods and add cmp inc add cs cmp in xchg xchg push int3 xor mov cmp aas dec xchg jge and stc and nop std jbe clc xchg xlat in jl add xchg push inc cld or mov stos push in pop or jno lock orb mov cwtl push mov dec inc adc or mov and in add xchg scas icebp js or inc mov fimul mov fcoms or fwait stos fcompl sbb xchg xor push scas stc dec in cmp add fnstenv xor sub sbb lea cmpsb pushf dec and dec jo cld mov rcr jno cmp (bad) out ljmp loopne pusha add xor inc cmp mov std dec mov scas loop imul (bad) mov jne or add sbb leave (bad) sbb inc popf shlb jo insl sub pop mov fnstenv push ja cltd pushf jne jl mov add mov jge cmp sub mov mov daa out jae in mov (bad) and insl inc push add iret lods lds inc push mov les cmp mov sbb dec xlat pop inc pop jno xchg enter shlb icebp jae add sbb inc add mov in jae add lahf pusha mov rolb mov stc xor fbstp pop nop insb and out pop push cs cmpl adc add jmp mov repnz add sub jle loope fadds sub popa clc cmp xor and sbb pusha rclb and push or mov pop adc les jge imul mov inc add popf xor add jmp dec inc fs fsubp mov or cwtl nop sti ss fildl leave in cltd aam roll cmp cwtl mov iret icebp adc add outsl sub jno jp enter sub xor in mov rolb lock les jb sbb push jmp (bad) jecxz mov flds xor add scas add test fldl call mov push out lahf xor adc test add mov cmp out in push dec aad outsl jl adc mov insl out fsubrl out cmp jl aad sbb sub fwait mov in addl mov inc mov mov loope shlb out add test ljmp mov adc fidivr outsl (bad) rcll xchg fdiv cld jl add aad cmp push sbb hlt or idivl cmp dec cmp (bad) jo add test mov xchg mov push scas add or xchg insb dec xorl xchg xor xchg fmull adc and pop sbbl sub pop push (bad) lock movsb adc pusha sbb or clc test subb test add sahf dec sub or mov (bad) in add stos add lret xchg cli push or mov add into sub (bad) xchg ja pop mov enter sahf or out inc add mov les sub and insl lods data16 xor jl sub sbbl fcomps enter loope inc and adc pop push lcall push and and mov inc xchg add pop ds data16 and add lahf sub aam iret add push push cmp and add imul xor dec mov stos cmc pusha xor andl clc ucomiss mov dec push mov dec (bad) hlt (bad) stc in push pusha scas adc inc dec push xchg add lds push xchg les js sub mov mov push dec mov in loopne mov or push in jb testl fcoms in push xchg fs add imul aam arpl xor addl push pop add xchg test mov xchg sarb mov adc imul add es clc push pop fnstcw mov pushf inc ror pushf (bad) subb adc ret mov sbb jle cs rorb mov emms add pop jb loope add nop out cwtl sub loopne inc xlat icebp (bad) cmp fdivs mov adc mov sbb sub jb sbb inc add lds js and aam loopne call lock js xchg sbb hlt lret add sar add outsl mov or and test roll leave rolb icebp cmp fidivrl sbb push mov and lds mov test cmpsb ljmp pand and mov inc ja jnp push adc es cmp push js inc adc loopne shl inc add mov lock jo adc cmp scas mov sub clc jmp xchg and rorl adc bswap add test insl mov mov (bad) xchg xor in mov sub stos xor adc es pop cwtl rcr jg add mov in mov push and popf int3 je or dec inc add sahf pop nop sub int3 xchg add sbb leave push sbb mov push scas into pop mov jnp nop mov and int lret or dec dec call jl inc repnz insl sbb adc sarb bound xchg cs sbb jge cld add add mov xor xor and imul xchg xchg or cmc mov mov lds jae fmull xchg xor or mov fwait insb xorl enter sub xorl xchg arpl xchg mov enter les adc pushf iret dec mov and and dec mov xchg inc insb cltd add and aaa iret rclb mov (bad) negl inc aaa push loopne push clc nop faddl (bad) inc sbb push cli ss loop (bad) ja xor jmp xchg (bad) xor sti dec (bad) xchg in or test or stos dec mov jl cmp into adc (bad) jmp orb insb inc and cmp add inc addb fildl idivb jecxz xor sub cmp cmp loope sub das (bad) cmp subb xchg adc push adc (bad) jbe xor pusha lock mov ret cmpsl lcallw dec dec pusha (bad) cmp jnp xorl add sub push cmp cmpl pop pop xchg jle test les and push add xor xchg add sub mov jl mull push sbb cmp or sub xchg and mov sbb jae inc nop sub and and inc sub xorb clc je dec (bad) mov adc add sub xchg mov in (bad) les or and in mov cmp test and iret addb outsb cli (bad) mov aaa arpl mov sub push xchg pusha lahf add jmp sub test pop loopne xor add orps pop and orl mov mov mov pop xor bound cmp sub in or aad fisub pop div lock mov and mov mov push lcall addb (bad) mov mov inc fistp les mov fmuls jle sbb xchg out (bad) roll xchg jecxz inc pop or add mov (bad) and add xchg out pop in adc add out jg data16 dec xor imul push mov rolb test ja xor or scas in test out std enter movsl fsubs xchg js cltd notb dec icebp mov fiaddl inc sbb enter sbb jg ljmp inc in push (bad) xor jg fadds or xor inc add cmpsb sbb sbbb or mov push adc arpl mov rcll cs push adc mov repz push fsubl int dec daa leave sbbl jb rcrl push lods je (bad) lds roll fstpl jo push pop push fs xor cmp shrb dec int3 sub clc dec cld rolb jne es mov (bad) add mov nop jg push repnz sub jecxz fwait ret adc repz out stos push cmp dec fwait cmp push and xor cmp adc sbb insl xorb lods adc fcompl inc mov jle nop sbb out clc xchg scas add sub lcall mov std mov ret pusha push pop testl lret mov pop xchg cwtl mov out cmc repz outsb rclb mov pusha stos push jl and adc xor cmp add adc sub sbb imul add test pop data16 sti jb sbb xor cmpsl rolb ljmp jge mov imul mov cld mov or lds aam dec shl (bad) dec mov bound sbb dec dec xor inc nop sahf pop daa jae rclb adc xchg roll rorl aad or mov jl inc dec and psubb xor cmp mov push sub xor pushf arpl mov jle mov add int push cmp dec lock cmp inc (bad) mov cmp xchg mov or in (bad) rcl test mov clc dec ds (bad) fs cld inc jo ret test fwait xchg les adc adc pusha lock or cmp sub pop dec int3 adc pop ret sub dec sbb dec dec or or push fsubs mov xchg imul or loop hlt adcb inc pop aas inc pop negl mov les loopne jne mov or inc pop pop dec outsb in inc imulb xchg add jne nop jne mov orb or cmp cwtl cs dec sub adc or jp je mov jo rolb push jb xor add dec sbb ret loop adc rolb mov addr16 and xchg cmpsl adc add pop inc imul add clc insl xor pop sub test xorl pop out cmpsb testb xor jb cmp mov add xchg inc loope mov and cs imul mov mov leave pop shrl mov and popf loopne repnz sub and xor sub sbb roll insb dec mov (bad) jecxz cltd and mov pop or mov mov fs adc test jb push dec out sub dec sbb push adc add cs push dec mov iret adc xor daa or jb adc or xor test add fidiv fwait and push rorb pop pop das dec sub idivb add sub inc ja pop cmp cwtl fdiv jl ds push or or mov add fimull mov into mov mov mov push sbb xor shl add pop inc xchg add daa xchg rolb int cmp les subb jl adc dec aam push sbb push push cltd cwtl test sti mov sbb inc cld add test sar mov mov mov clc mov mov adc pop push sub sub ret mov aad dec sbb add imul out cwtl mov repz mov cmp cmpb loop addr16 je sub jo scas xchg test push or push insl rorl in jo bound cmp xchg mov push pop inc lret jo test pop jae loope lock cmp test xchg sub js adcl pop dec data16 lret dec push into pop div lods mov mov mov mov sub jmp jo push je adc xchg jne mov je adc or int cld out or or jnp mov adc pop movsl in dec mov (bad) lock lock pusha mul hlt hlt inc jns jle mov or or rorl pop mov push insl sarl clc inc sub mov les sub cltd pushf or nop and add test fmulp xchg inc rorl (bad) cmp fisttpl dec add sub adc loopne fiaddl mov pop dec hlt inc (bad) jo pop add outsl (bad) popf (bad) mov inc mov (bad) rclb pushf rolb ret pushf inc adc (bad) fsubrs pushf jl das fadds out push xor sahf loopne lret call pmullw inc aad insb xor pop inc mov inc and push rolb pop jne and faddl divb test jae cmp bound inc add pop cmp push ret add cmc push xor dec mov inc imul pusha adc mov mov into sarb aaa adc (bad) dec jge movb sbb gs cwtl aam in daa repnz lods add sti mov lahf fildll mov (bad) xor add sbb out inc in out jno adc dec pop inc pusha (bad) dec pop loopne dec das imul cltd cmp dec pop xchg sbb pushl sub (bad) mov jb inc pusha or jo mov pop dec popf fadds and test add mov add movsb xchg stc (bad) mov lock outsl pop adc xchg push sbb cwtl mov or and adc xor (bad) jle out adc and push fwait mov xor push sbb cld xchg rcll es out jl call mov inc cltd or pusha xlat fisubr xor sbb jb int pop das xor es or gs inc imul cltd dec xor fdivrs popf int jp enter adc sub out ja clc mov xchg pop loopne and fbstp jo mov loop icebp pusha out loope mov arpl xchg sub into or (bad) sbb cmp push xchg cmpl (bad) mov xchg js cmpsb sub sbb ficompl cmc dec loop std cli add testb mov (bad) mov inc aas popa stc xchg test pusha rclb rcr mov dec or pop xchg add seta jl add adc lds cmp push mov enter sbb jnp nop and xchg fidivl cmp aaa mov ss icebp or sbb gs lock ja add xchg or adc stos js sub and shl xchg push test movsb sbb mov jmp mov imul mov and mov sarb (bad) out out leave sar and xchg adc movsl mov and or loope xor cmp cmp add xchg add cmp xor fadds push fiaddl mov stos xor and jge lcall mov fisttpl mov mov enter sbb add cwtl movsl xor pop sar inc sbb jle mov or enter sub xchg outsl sub adcb je add bound xchg xchg (bad) xor nop imul pop movsl pop push mov popa out push sub mov (bad) je jmp stc arpl mov push movsl pushf add and pusha or sbb xor decl rcrl cltd dec xchg mov adc pusha jg loope xor adc xor or pusha inc cmp jo jae lahf out mov mov test loopne imul inc movsb shlb fisubrl mov dec iret js inc push jae adc adc outsl stos jo push jnp dec dec inc push int3 dec xor jo loopne adc cmp mov add fnsave xchg jnp or sub or imull xor push jne sub cmpsb bound push sbbl or add push jae push data16 sub les icebp mov loop sbb leave pop stc mov hlt orb cwtl or popf pop cmp adc enter dec (bad) test xor adcb xchg or aam lahf lock mov or aaa inc jl add sub mov cltd add loopne jae push add leave orb js mov cmp lea sbb and cmpsb push fsub pop aam adc inc sub fs pop fisubl adc loopne add mov sub loope sub add fdivrl or leave bound mov mov add sub lods and ret in or jge pop adc mov pop outsl adc outsl sbb inc jl pop adc sbb cwtl leave (bad) in dec xor jg shr cwtl jo jno xchg dec fmul and add push mov daa mov ljmp test enter sti in push call scas dec mov xchg mov or repz push popf adc iret adc or cmp push (bad) mov cmpl add andb cmp mov fist in dec mov lcall jmp (bad) out loopne jmp or fsubrl cli sbb push loop push mov insl xchg out js fchs lahf pop pusha push jno and mov mov (bad) mov jmp inc iret jl repz dec pop adc jge clc lret arpl pop jle call jge and add xlat lods cmp xchg adc adc mov dec lret mov dec and sbb push popf push adc pop mov mov iret add or jl jne fs nop inc sub lods cmp adcb (bad) mov daa mov nop add mov adc adc cld fmull dec xlat fdivrl jmp fisubl test mov mov mov es xor mov push and mov add cld jnp pusha and sbb test mov cmp xchg scas jo sbb jmp mov cmp and in jg pusha jbe clc and push sub push adc pop add inc adc mov or in pop or sub add xchg std xor add lcall dec xor sbb inc stos jno add add cmpsl push cmp scas es add das mov not fstpt shlb push push ret or mov xchg inc dec sarl xor pop adc mov fmuls mov or push sbb popf pushf add icebp shll push (bad) in mov sub or xchg or or add int bnd hlt fmuls cmp ljmp dec sbb jb push stos or cmp mov orb shl sahf sbb pushf and sub or cmp add sub add fcoml ja adc dec xor xor daa aad cli sbbl pop ret popf xor mov movsl dec mov pop mov dec cld pop outsl bound fwait or xchg xor call rcrl scas lods loopne sub dec (bad) xor pmuludq shlb push loop mov test mov nop or pop inc pop jb das dec inc popa add mov jecxz out scas cmp ss xchg jo ljmp or iret jl xchg arpl aam aaa sbb adc out and or jl scas adc aam arpl test addr16 movsb xor cmp je ljmp and loope cmp mov mov mov sub add je cmpsb insb pop inc insb or and mov and rorl cmpsb andb in sbb loope repnz or add mov cmp daa xchg flds xchg mov xchg and pop daa adc lcall in adc addr16 pop add pusha clc fcompl push xchg arpl push subb mov push mov dec xor sbb adc aas xchg scas mov popf pop xor add in arpl pop and mov and xor sbb imul sub mov rolb xchg popl xor es ss test inc xchg pop push pop add into ret fnstenv mov (bad) (bad) mov jns sbb pop popf dec mov punpckldq and or fnstcw cmp sbbl andl mov inc mov scas mov or cmp into cmpsb rcll mov inc sub push or or aam xchg (bad) inc ja orb sub jae xchg jns je arpl add push inc lds adc fwait cvtps2pd dec shrb lds sbb add cmp (bad) sbb repnz inc (bad) xchg daa inc lds pop xchg add les mov pop push dec imul cmpsl push scas stos mov leave or pusha push adc std jbe js mov pop mov adc cwtl xchg jno xchg inc hlt insl push add mov adc jmp hlt test mov (bad) daa push xor lret dec jle sbb test add lea xor stc add cmpb sbb aam pop sbb movsl xchg data16 lahf shlb mov adcb pop rol out ljmp ja or cld cmp loopne add lds sti adc rcrb hlt aam sahf dec cmp fsub mov push dec pop pop and push call adc pushl or add pop xor add sbb push pop std rorb test jnp or adc xchg adc cmp cmpb pop cmp into mov cmp stos aam jmp mov cmp fsubrl pop add jle dec add mov pop ret or add lcall add sbb adc stc push pop cmp xor (bad) mov xor ljmp shrb push lret xor and jno roll dec and sub jns imul fimull push add sbb jmp add push sbb dec stos xchg pushf or push inc xor lods mov push cwtl int3 out dec repnz or lret pop insb adc dec out cwtl js xorl clc pop cltd inc insb and push push loop push out adc rcrb xchg movsb xchg stos sbb repz dec and pusha mov add out or jb add aad pop loop or cs bound gs test and adc (bad) cmpl add pop pop push daa outsb inc or in xchg dec ds repz mov xchg xchg mov sti jecxz cmp cld xor xor inc and mov cli pop in push add popl jne add ret jns push jno les xchg enter xorb fdivl (bad) xor lret inc jl imul add lea mov sub inc push jns adc aam sbb and cmp xchg rcll sbb adc hlt and jle (bad) xchg cmp inc cmp jmp bound adc inc cmpsl push or push rcrb stos xchg mov ret in push jae shll jns pop mov push push cmp mov outsl mov mov pop cmp lds enter ret and int3 fist aas xor xor mov es call sbb fbld mov xchg pop ljmp mov add pop insb pusha es imul test push faddl and pop sub movsb stos xor mov jle add cmp mov xchg sbb bound xor popl xor inc add pop mov add and sub pop cmp subb jle adc adc sahf notb adc out mov loopne add add cld arpl aaa cmp iret sbb xor std sbb rclb mov mov push sbb sub lock fwait movsl xor inc sahf and les add pop pop push xchg test test cld pop xchg rorb push mov push and daa pushf imul pop js test cltd dec and lds jno xchg stc daa xor ret in xchg mov xor hlt mov daa and imul sbb add mov movl sahf add roll aad hlt push pop push cwtl jbe cmpsb fs push inc inc ficompl pop sarb push mov pusha xchg icebp push add div inc xor dec shll mov incl gs imul lds stc mov xchg xchg push pusha cmpsb movsl iret ret mov push and cmp imul push push cmp shrb mov xchg aas iret add notb sub scas mov in add sbbb xor scas das fwait mov (bad) mov clc xor shll xchg adc or xchg fstpl and add inc int3 cmp enter add fcompl pop stc or add inc aaa lods pop cmp sahf xchg add xor leave mov adc pop xlat jge cmp jns pop jg lret dec inc imul aad lds push cltd or test iret add in and shrb fisub push (bad) adc mov or mov add inc adc ror adc push xorb dec orb inc test inc jmp cmp pushf jb sub add xor fs and xor mov push dec xor aam icebp bound stos or stc inc jne push sub (bad) push inc aad out lea push cmp sbb inc adc mov mov xchg push sbb lea inc jmp bnd subl arpl push ds xchg add xchg pusha pop push out jno cltd pminsw icebp addr16 pusha mov push pop lods mov inc pop xchg int push movsb test sbb cmp cmpsb mov les aad pop add mov lahf dec out jb (bad) fcoms xchg inc adc push imul jmp jge js cmpsl out (bad) mov xchg xchg jp sub cs adc add cs mov jecxz in into and out mov cs in out cmc xorl add push movsl dec pop sbb add xchg cltd xchg jg mov xor (bad) popf imul jg insb add jnp std push pop cmp xchg pop fdivrs cmp and inc inc popa push arpl or les es clc pop jmp xchg xchg test iret andb movsl dec inc xor inc stos sub les repnz fmuls mov sti jns sbbb mov lret (bad) sbb pop test into xchg loop push xorl gs jge cmp dec and add dec jb sub mov test pop sbb add iret xor cmp inc enter je mov push cli or sbb (bad) out mulb movsl ret pop or das idivl or sub data16 out add insl xor mov add not test cmc sbb aas xor push pop xchg xchg sub mov jae push icebp lds sub jbe inc fstpl das stos fisttpl cli mov pop aas mov xchg add and lods dec and jp xchg sbb and sahf cltd or inc jns inc in aad sub dec dec mov aam xor push mov mov dec insb xor adc popa xchg rcrb sub pop inc dec adc inc decl cmp jb pop push int3 xchg mov mov or lods dec jb and jl adc outsl adc lock jle repz add push pusha xchg icebp sub xor fdivrs add cli sub mov or and xor pop or pop lret out pushf mov std in push xchg das or pop sarl sbb cmpsb jle dec stos daa fstp push bound out nop and dec nop cvttps2pi xchg or (bad) mov adc jb jne fimul test pop push add shrl inc dec sbb sub hlt cmpl (bad) add lahf dec or hlt cltd sub test push dec dec jno push jb in or dec repz jne add pop inc in ss xchg rcll je push cmp xchg sar notb insb test in mov add bound push push test dec or push dec test dec add dec cmpb adcb or jp add lret inc mov mov or test sub or mov in imul xor out cmc pop mov aas repnz leave std outsl or pop arpl adc push orl stos (bad) scas or rorb or movsl mov sub xor xchg sbb mov cmp xchg and xchg loope outsl push lcall dec jae stos xor arpl daa lahf xor or xchg into stos mov test pushf push add (bad) pusha lods outsb jmp repnz stos nop rcrl add mov add in dec addb movl incl mov fistp sbb push (bad) sub mov or push mov push scas mov pop negl subl add lea and cwtl sub push imul sub pop xchg mov aaa fcompl sti pop (bad) call jg dec xor roll fisttpll rclb dec adc fistp mov xchg lahf ret push out mov mov xlat repz push mov inc pop or pop fnsave leave fnsave pusha push mov sbb inc popf je jmp jo inc imul push pop fdivp jmp rclb push pop popf jg push pop pop rcll pusha popa pop mov dec jp sub rolb xchg fmulp cmc andb insb test add dec sub jle adc add fisttp cmp (bad) incl ss inc push pop xchg inc add mov adc push dec sbb jb jge add push imull test and loop pop ficoml or jno (bad) pop (bad) xor leave push ret xor imul adc cmpsb mov push pop mov add add sub cmp addr16 push mov out mov xchg std ret loope mov xchg mov jo cmp fdivrl shr shll pop aas (bad) loopne jl outsl sbb clc dec pop jmp lret cld xorl lds out xchg daa jns pop mov add sub and insl xor adc xchg je add sub dec sub enter movsl cli or ret lock jg add cmpsl or pop pop or loop imull cmpsl movsl ja (bad) pop add or push xor and mov pop sarb or push xchg adc mov ficom or sysret mov adc and lcall daa jne (bad) mov out pop popf aad mov lds pop adcl mov mov mov out lret popa in ja cmp push lahf pop shr push push mov in (bad) neg or add pop mov das fildl pop mov cli nop push or inc add add je divb xchg jnp fimul pushf out pop or ror (bad) jg sub gs paddsb inc pop mov adcl addl mov xchg add inc or xchg xor inc ljmp adc xor mov cwtl pop mov sbb mov sub out xor mov cmp gs adcl addr16 dec (bad) or insl inc adc adc ss cmc ret insb rorb cltd mov add rcr int3 rclb mov mov sarb enter je popf frstor pop mov add bound cs lods fisub sbb fnsave leave fst adc push adc xor jnp jo sbb push shll pop ljmp andl mov (bad) jmp and add rcrl cld (bad) mov pop pop sbb cmp pop dec sub cmp and push leave (bad) dec jmp and in jb fcom xor pop sub push mov xchg dec fcomps je js daa (bad) sbb aad mov push lds xchg push jmp test push mov movsb les push inc jmp add or orl add bnd add fs pop and pop test mov incl test movlps ds adcb jb scas add roll test push xor and ss inc (bad) pusha aaa sub int3 jae or pushf pop mov mov and mov ja call ljmp mov add sbb sbb enter lods (bad) jbe xchg mov jae jnp adc dec incl pusha fsubrl scas dec inc xchg fsubrl jnp lret xchg mov pop ja add dec imul mov in addr16 inc lds xor outsb xor rorb test and cmp pop mulps xchg add pushf push xchg jp lds mov xchg insl jg and pop inc dec push mov ja out stos bound dec inc pushl and sbb cmp andl mov mov hlt xchg push jb roll cmp dec sub jl dec pop xor dec push or aam fsts adc pop outsb mov xor icebp and shll jno push shrb fstl loope not xor jo (bad) out inc pop mov add pop xchg sub ja and sbb jno mov pop push ja sub mov xor ficompl jns test aaa aad jno int popa add sub das es (bad) add or jmp fs int and pusha sub mov push pop popa pushf pushf adc adc add xor pop dec jge and std in aad cmp outsb mov hlt inc inc es sub mov mov push rclb pop cwtl out xchg inc out sub fisubr push or not push mov cmpsl xor daa lahf xchg add xchg imul aas (bad) pop sub fisttp jmp jae fnstenv fistp roll mov rcll jp cwtl mov adc rorl mov xor or (bad) adc jle mov dec (bad) fistp mov ud2 adc push imul flds ja pop pop cld out stc int3 hlt cli lods (bad) nop xchg push dec xchg ficom add out xor xor mov jecxz jne (bad) inc addl vmread pop add (bad) pop cmp and xlat pop fsubr jmp bound or add or sbb pop aaa femms inc push je mov xlat sbb or xchg jno mov sahf inc mov sbbl or sub sbb loopne add mov dec adc nop dec gs mov pop not inc les and in fcomp test ror jno xchg inc dec push or (bad) outsb jl push jg aad aaa sar sub push rorl ja sub push xor insb sub push mov dec out (bad) fs rcrb ss cmovae pop push xchg pop popa es test jo out sbb pusha stos mov js test mov mov das and add idivl fsub add pushf sti jg push add add and sub es dec lret push das xchg adc mov ss pop mov leave mov inc rclb mov (bad) xor and pusha adc xchg xchg jo add mov scas loopne mov outsb xchg or add fisubr sti ljmp mov (bad) push (bad) out jg (bad) add or shrl aam lea daa pop ffreep loope fldt je mov add mov fnstsw arpl mov pop inc adc push inc test pop add rcll cmc jbe cmc sub xor je mov add jno fcompl popa add dec dec jmp cmp push shr or jle cmc adc ds xchg icebp cli les clc ret dec je leave sahf call sub leave das cmpsl jg,pt jle mov jl je repnz xchg jno (bad) pop jno dec mov mov pop ds adc outsl sbbl mov adc iret xchg enter xor mov adc sbb pushf mov (bad) int3 popf cli and inc frstor mov dec mov push push pop xchg ret pushf mov scas xor sbbb pop test test sub (bad) lock xchg cmpsb or adcl jns sub push sub loope adc add or push outsb push (bad) imull inc pop jp push inc outsl out jbe add sti ds addl lcall push je cmpsb inc dec sbb orl popf std cmp ja inc push push daa push jbe lods dec sub push sub push mov cmp cmc mov xchg lds movsb int test imul frstor arpl jbe lahf sbb push arpl push pop and push les test jbe out imul je and (bad) (bad) jle push clc adc repz inc sub cmc aas fs or or popf pop jg rcrb sahf cmp mov sub addr16 sub or push inc mov and jmp mov imul add mov popa mov add push mov add lods fdivs jmp pop xchg (bad) je push pushf jo movsl jmp adc out mov pop fwait repnz mov lahf pop mov add dec int3 adc xchg inc mov cmpsb jns xchg sbb add mov dec xor pushf popf sbb inc nop fnstenv das xor jbe scas jo sub adc in push leave mov sar repnz jnp divl xchg or xchg sub cmp cmp push cli clc pop inc cmp imul cmp inc push and xlat movl adc push sub sub mov pop pusha (bad) push xor xchg (bad) mov call in fs mov cs mov (bad) call sbb inc (bad) jmp push xor inc and repnz pop ja pop hlt cli pop fwait pop lret xlat push add and pop stos (bad) ja jp adc mov mov push es mov pushf out jb (bad) sub adc neg xchg fnstsw lods outsl pushf (bad) lahf pop adc pushf out jae dec cmpl add fsubrl popa adc mov xchg add div jnp pop and shlb pop sbb not sub leave and add data16 sahf add leave sbb xchg cmp mov pop pop shll arpl pop stc dec cltd add push pusha es xor pusha aas ja sub sarl mov xchg addl inc pop mov and sub push mov test adc pushf mov pop cmpsl mov repz popa in add add push mov cmp mov jg push mov push push xchg cmp (bad) out (bad) xor ficom xor mov outsb dec xchg les dec cmp adc pop xor shr cmpsb xchg xchg cmpsl je cltd movsb das cmp xchg arpl pop pop imul cmp out test pop mov adc enter jecxz dec add cli pushf imul pop xchg pop or and cmp aam imul es mov mov lcall inc add lea sub repnz or pop inc inc int dec aas int3 sbb pop xchg lret insb add cld rcrl push push mov sbb jbe jmp sub imull repnz lods add mov mov jmp push fldenv ss movsl cwtl add loop iret pusha js,pn jl pop lds xor cmpsl jne dec jle andl push push pop sar jmp inc (bad) movb mov ja (bad) or repnz in gs rclb aad clc jl mov jge loope std dec mov (bad) repz dec in out mov insl xchg ds and in pushf ret les or mov ret adc je sbbl sbb push mov jmp (bad) mov pop je jge rorl pusha xlat arpl pop adc scas fwait lret sbb (bad) lods jg xor adc jge dec pusha daa push adc pushf xchg pop jns add inc outsl pusha mov xor ds (bad) pop enter pop in leave dec lret jae jmp lock adc lcall add in or cmpsl pop inc pop and icebp sahf pop push jmp popf in add mov bnd repz cs push faddl loopne add push mov pop movsb ret in jl idivl jo pushf and icebp jns jg rolb mov cltd adc xchg aas pop push repnz dec sbb pavgb mov sbb push jmp aad pushf push push sbb lea inc pop adc push pop cwtl div iret lret idivl pop cmpsb sub sub movsb mov pop ja gs (bad) mov add pop cmpsb daa xchg jecxz (bad) xor push push mov pop jmp add pop pop pushf mov push dec lcall dec sub push mov es imul repnz and adc cmp jp in adcb mov sub mov stos lds sub jno sub xchg dec sub in mov loopne repz inc not add jecxz test add test mov pop xchg dec dec es (bad) loopne add jle out mov mov js mov pop adc (bad) pop fdivs icebp or aas sub sub mov js addb cmp fistpl in cltd ret xor (bad) sub push fnsave and sbb xchg hlt dec xor jb test pop nop outsl rclb pushf push pusha add ds dec fist add roll push push imul cmpsl xor movsl rclb lret outsl inc outsb in and addr16 in sub outsl loope fnsave adc jae dec aas mov rolb mov push add fldenv xchg scas lods lods loop dec mov xchg data16 dec xchg enter out xchg std mov lods enter test inc (bad) jmp xchg cmpb fidivr out add pop addr16 in clc jle stos int3 faddl or xchg push push xor fldcw outsb clc sbb pop sub push fs das adc mov ss dec xor push fnstenv cmp pop mov mov in jae and and jp in push and dec mov ss jmp adc add fcoml adc mov or dec flds fimul (bad) in mov je movsl xchg inc add mov xor fdivr mov push xchg divps hlt movsl push int3 dec and add cld jne movb aam scas aaa test mov cmpsb lods ss xor movsb cmpsl mov jge arpl mov or in scas push jne mov mov test jp addb mov into add (bad) scas arpl mov mov push fdivrl xchg imul mov jo jp adc cwtl pop aam stc aas cmp arpl or jae lret stos andb sti inc std pop push sbb jmp jg sub mov adc xchg mov jp xchg pop rcrb leave push stos bnd mov mov xlat add ljmp mov jp notl lcall add popa or sub mov fbstp xchg and cmpsb out jb imul stos xchg and xor push fwait into fbstp (bad) or mov and xor jnp push in inc pop lock mov pop mov in leave add gs add fucomp push jb add call inc and push jae mov sub mov xchg and push mov cmc push push xor xor es addr16 stos add cmpsb scas lds or and mov call jae ret push movb inc mov iret mov lods mov and push ret lea push push sbb mov in xor sbb daa xor inc faddl sub or and clc pop sbb ds fiaddl and push mov mov loope (bad) or cmp insb dec ds push xor lea cmpb pop and adc or orl (bad) cmp push movb flds pop shl push push adc adc add jl adc mov inc ds dec sahf add dec inc incl loopne dec out add pop jno pop xor and push call jb dec mov ja shlb push ret jae or xchg out sub lea leave and sub sub cmp jmp mov sbb jo movsl dec les pusha fnclex (bad) add call (bad) mov loop or jecxz inc push cmp push pop add clc adc mov pop jb and ret sahf jo add mov dec insl xor push xor in inc dec and pop inc push ret sbb add sub xor push shr xor jbe add dec lea aad repnz leave cmpsl loope xchg test rcll add mov loop adc loopne jl push jnp fild test sbb sbb mov or lea add push aam sarb jl fldpi pop (bad) xor das nop cmp add mov imul adc xor pop inc fdivrs lods flds cmp mov nop stos xor cmp mov or (bad) imul stc sub and inc add sti stc push sbb push scas dec outsb inc adc leave jl in pop jle jmp outsl sbb cmp lret add (bad) int3 inc adc in rcr ss cmpsl pop or push ret mov idivl ds outsb sbb or mov sbb xchg mov ss sbb int push call popf add xor and (bad) mov sub fistl sub xor fsubl push or and ficomp sbb ret pop xor das or cmp jle lret mov dec mov repz dec call sarl sti cmpsb xor adc jo daa stos xchg jb lret out ret in leave nop rcr mov pushf lds test xlat add inc pop pop mov add jae,pt sub mov lahf inc or xor movsb mov test or shrb les dec pop xor sbb sbb (bad) mov pop (bad) or cld or pushf (bad) repnz mov or lret aas sbb hlt rcl mov out scas pop inc add sub and xor (bad) sbb inc xor popf and jns test fsub inc sbb (bad) pusha fidivr jnp jle test mov and icebp fs leave inc hlt in add sbb xchg int adc push sahf pusha pop jmp push xor xchg inc or cltd pop test and sub clc inc mov call sahf or orb mov andb xchg add in cmpsb insb jle (bad) mov popa (bad) call ror add lods bound push out enter push sbb imul push dec rorb add add (bad) rcll mov or clc push push push cmpsb or lcall scas bound push flds out hlt pusha test xchg inc add sbb dec mov adc adc inc add jecxz in cmpsl xchg rol test adc mov rolb ret orb sub icebp xorb sub xchg push outsl push adc ljmp pop and pusha lods push or add test pop xor gs add and es add adc es push dec sub fdivrp cmpsb add add pop adc dec mov adc xchg xor arpl mov xor push dec pop mov inc sbbb lods inc sub adc iret adc xchg xchg adc imul and xchg and (bad) mov adcb pop mov sbb pop adcb or cmp ret rcrb mov sahf (bad) xchg outsl push xor rol int out ja mov jmp jb sbb sbb cmp and dec bound test and add xor clc fnstsw push stos add andl adc es fucom mov xchg cmp add rorb lock adcl xchg cld sbb lock or popf std add xchg loopne cmp addr16 pusha jo inc add ret (bad) inc and push loopne or scas fsubs stos xor xchg call lret add in pop push fstp cmpsb push lea mov arpl aad sti fisttpl mov loop mov add jo and mov add pop mov or fldl movsb push shlb sbb ss dec mov test int pop in push inc enter add pop cmp cmp (bad) add push test cmp xchg xchg (bad) js nop or or cmp adc out sbb sbb jl mov push pushaw xchg (bad) aas and adc into clc stc neg cwtl add out ss jnp or (bad) repz sbb adc and pop and dec add and xchg mov push sbb iret (bad) mov (bad) jae pop push (bad) or (bad) addb and mov sub sub inc clc mov add test fildl dec push xor inc aas cmpsb add and sbb fwait pushf inc sub (bad) sbb xchg pushf insl (bad) jbe popa test pop cmp int3 cli (bad) cmp inc add xlat mov call xor enter loope xchg stc (bad) add (bad) clc xor push xchg add enter orb jns adc sub lods cmp sub add js dec pushf adc arpl mov gs dec cmp adc dec mov mov test cs cmpsb and fistpll jo repnz and xor std pop cmpl pop mov (bad) lock mov js sbb (bad) jb pop mov sti clc test (bad) lock (bad) jl movl inc adc adc mov push into mov xchg fcom cmp jecxz icebp ret clc mov add pusha ret jns ja xchg or out cmpb mov js enter adc inc loop dec (bad) js pop es jmp movsb sbbb xor roll and je adc es add inc (bad) xor mov clc lret add ret or jle add in sbb (bad) and jo xor dec addr16 mov nop or cli jl xchg xchg or xchg (bad) stc add adc sub mov stos push inc pop cmp rcl cmp sahf jo inc test dec sbb or lds fdivl mov adc jne icebp and fcomp hlt pushf ja adc (bad) test frstor in (bad) pop xor aam jo test das cmc js lods fwait and push mov sbb sub adc rcr test sub dec rcrb bound popa pushf arpl sti and inc scas add orb mov cltd adc and aas xchg xor or cmp or mov and (bad) jb (bad) loopne rolb xchg rclb dec int3 dec inc jg push (bad) fld or test jo js fiaddl (bad) (bad) cs push cmp mov add xchg jmp movsb sub xchg jo sbb add loopne adc pop dec mov xrelease pop hlt lds loopne cmp es xor xor nop sbb lcall xchg decb sub in mul pop adc lret inc ret into add outsl dec sbb lret push push fwait push inc jecxz sub loope mov sbb fisttpll mov cmpsb or icebp movsb subb add sub (bad) cmp jnp pop mov cmp dec dec mov add adc es dec shlb (bad) mov js nop and (bad) pop movl scas lret pusha loopne inc fildll cmp movsb adc loop xchg push add (bad) and lcall test stc dec dec (bad) test outsb int3 es lret cmp mov (bad) int3 int3 sti or xchg add fidivrl ljmp lods xor pop adc adc (bad) push in ds subb dec jg dec or incl shrl into cli repz (bad) cmp add adc xor jl and (bad) aaa lods add cmp in movb pusha sbb loopne dec dec loopne dec test cmpsb lods add or and (bad) enter cmpsl adc or dec test cld pushl sub scas cld cs pusha and iret loope,pn shlb jl rcrl out movsb pop aaa xchg sbb js push sti fdivr mov xchg sbb cmpsb mov push ss add stos adc push dec adc in sbb ret aas or scas xchg sbb add test test mov mov in rol mov push inc dec fimul movsb mov or addr16 pop jbe (bad) cs xchg xchg bound add loop test call ret xor add gs adc sub dec mov fsubl mov pop je and cmp jecxz rolb mov sbb aaa mov test inc or mov push in cmpsb aaa pop mov out xor push lret aaa jp mov cmc mov loopne clc mov cmp sbb adc or sub mov push roll inc rcrb xchg mov incl loopne rorb cmpsb xlat adc rolb in or add xor test enter push leave test add lock jge pop or repz adc inc push dec lcall and notl aam mov incb mov lock inc dec mov jmp inc pop dec mov movsb mov and rcl adc add jge nop xchg in add xchg mov push dec xor dec popf adc rcrw and add fwait inc mov push lods mov push and in xchg mov pop sub add mov stc push mov push mov adc dec ret ret jge mov or stos mov add pop inc add mov pusha fwait inc (bad) xchg cli xor push sub sahf nop dec and cwtl xchg (bad) (bad) dec xor (bad) cs push adc pop xor mov out sbb xor nop sti cltd dec (bad) mov pop push and (bad) dec sar sub cmp pusha add cli xor rcrb and scas dec popa ljmp sub nop add inc gs imull lds sub sub leave add andb mov cs lretw pop mov add fwait xchg cmp add mov fbld dec mov push lahf je ljmp and (bad) negb sbb add ror mov add ret mov dec xor insb pop pop xor pop rolb out cs loopne mov dec and mov push inc je ja xchg jl in xor sbb mov fs lods lds clc dec jle fdivrs add test or test and pop cld pop (bad) adc push movsl and cmp pusha add and hlt test or mov cltd out jl mov cmp jo sbb iret xchg (bad) pop mov xor adc insl shrl add enter mov inc jae dec sti mov mov pop and mov shrl stos punpckhbw das hlt lods sbb push xchg cmp inc data16 add cmp add aaa addr16 lret in pushf push sbb notl rorb in jecxz xchg push shll loopne adc inc insb (bad) mov bound adc jge cmpsl inc dec add loope call cmpsb fsubrs xchg stos dec call sub ss ds sub shlb sbb jo repz lds iret movsb or dec and add xchg scas ljmp mov lcall adc push add sbb cmp sub (bad) push add jns aaa lock pusha stos adc and xchg mov add (bad) add loopne adc pop movsb sbb dec jge add (bad) or je and add add and into or sbb loope xor or enter pop in das cmpsb adc adc mov clc mov clc xchg pop pop inc pop dec fldl call hlt test ljmp or fdivrl or fimull sbb push jo dec push add scas mov add jb mov and and inc mov xchg loopne push xor inc sbb sbb inc rcl add dec inc pop shlb mov add add mov fimul dec rclb in bound bnd int3 mov cmp dec xchg lea sub add xor lods cld add in or adc sub pop cmp mov dec adc mov dec sub sub test and cmpsb add pop or dec push sbb mov xchg pop mov lret adc les sub and cmpsb sbb sbb lcall lahf es jmp js mov shrb sbb xchg int sub es jbe pop out or mov hlt xchg adc ret dec jp or out mov push rcrl inc int3 (bad) pop pushf and sub and xchg subl push in or pop int3 inc sub aam mov cmp add add ror mov mov notb sub lcall int xor aas xchg repnz add mov mov (bad) mov (bad) sub or mov test daa add roll add mov out pop sbb or ret andb fcoms xchg pop repnz cmp fcoms ljmp push es cmp pop pop enter repz push pop pop out fs inc popf rolb (bad) cs adc xchg test mov lods mov add or sub or mov popa roll cli (bad) cmp nop cltd mov stos xchg popa and sub pop sub movups loopne xchg or lahf punpcklbw cld lds dec add dec shr rclb cmp out mov lock sub jno mov mov mov dec (bad) dec mov dec enter sub or in jmp call int3 adc cld cld fild cmp into mov and aad shlb je dec pop push nop test mov int sub lds mov push adc jns inc sub mov sbbb mov movsl dec pusha push xchg popf gs fdivs push inc (bad) lahf pusha fcmove and sbb cs adc xchg add push mov xor mov lret div fdivp ss dec subb adc jb rorb decl daa lret shl test or mov dec aaa dec mov push adc cmp add es or and add ret aaa push sbb jl sub xor out cmp popa orb ja outsb lcall or xchg insb (bad) ret cmp loopne popa sbb add fcmovb sub xor dec sbb and stc scas sub inc dec sbb inc call jecxz dec pop in add adc mov repz shrl inc sub pop mov lds ja mov add sub push out and add pop cmpsl jl mov add jg or sbb pop negl fmull test add push xor fdivs arpl dec pop cmp cmp push outsl movsb pop pop and add hlt xchg les push or sbb add out int3 dec cmp sub or imul negb roll add mov bound sbb stc jno sbb movsb jo sahf pop dec pop dec scas add fimull inc jne push pop cmp mov xchg inc sub mov adc notl pop arpl pusha inc xor inc mov loopne mov xchg (bad) jecxz xchg mov jp sbb adc pusha cwtl adc rcll outsl xchg dec out cmp mov sti xor test xchg loop mov jecxz sbb mov out in rorl or pop sahf icebp js xchg ja (bad) sbb rcrb iret xchg push jnp mov add push outsb cwtl pop dec xlat stos cmp add xchg inc push test xchg jo jo (bad) aas ss fadds dec jb xchg xchg or adc add lret ret pop sbb fild jecxz mov jne sbb mov repnz lock pop or mov pop sbb xchg ss sbb inc and or add push dec add enter cmp scas or pop test dec sub mov roll mov xchg inc ljmp sbb dec shr push scas ds (bad) nop jnp popa sbb and add sub adc xchg bound stc add fild pusha xchg adc mov mov push push cli outsb pop push mov cmp pop jl add mov mov jnp jns mov pop ss movsb pushf inc mov push cmpsl movsb fisubl xchg sbb in mov sub pop xchg push ret sub dec mov and nop xchg arpl mov je bound mov inc add aas dec test ja mov add add (bad) rcrb pop (bad) int3 imul add lea loopne lret enter cltd or xchg mov fcomi mov mov push cli adc add jp mov add cmp sub enter jp lock xor dec xor jecxz adc lcall jmp add lahf jnp es daa hlt sbbb add pop sbb jmp pop cmp or repnz divb add (bad) jecxz inc packsswb test adc add mov mov xchg dec add es mov dec add testb mov (bad) ret xchg add hlt pop bound gs mov xchg xor and stos aam mov roll loope fxch add scas xchg jbe jecxz pop rcrb imul bound cli rorl lret ja add inc inc jno arpl adcb outsb leave jno adcb xchg xchg inc (bad) fs add out cmp sbb cs or push dec aam enter jnp adc nop mov jecxz (bad) scas cmp in cmpsl outsb cli cld ret and and popf cld outsl pop fwait mov xlat andb mov inc aam or dec std sub ret ret or mov sub sbb add stos pop aam adcb xchg pop ror pop inc fs xor xchg pusha cmp sbb jo dec in xlat pusha push shr mov dec aas fadds int and aaa (bad) mov cltd add sarl jo mov mov jo hlt inc pop add movsl pop outsl sbb xchg xor jecxz bound pop jnp popf pushf sbb ret jmp add fwait or bound jnp inc cmp out push cmp xchg mov sbb sub lods (bad) lock test movsb sarb scas nop and aas addr16 stc inc sub xchg inc adc lea or adc add push lea dec mov mov popa push xchg fcomps xchg push popf pop adc push aaa and inc shlb add mov sub xor and loop shl (bad) sub cmpb add outsb stos sbb icebp or inc or pop addb sbb xor (bad) xchg insl imull mov jno pop stos adc dec loope repnz enter add xchg shrl mov jecxz pop mov or sti or adc dec js mov add sbbl (bad) aaa insb mov xchg hlt xchg rcll jo lea subl addb xchg and jno lods add inc mov sti add inc dec or mov js lret shrb mov sbb imul pop cmpsb addl adc dec mov jbe (bad) push imul push lcall or mov mov test popa mov loope pop xor aaa push sbb sub sub adc sbbl inc call fldl ss jo mov or test or inc int3 inc leave push ret (bad) push imul iret adc in popa mov outsb pop pop add (bad) mov cmp jecxz or subl fstpt dec test fsubrl jne fsubp fadds pop ja jecxz pusha (bad) mov inc cmc jecxz test mov inc test dec push mov sbb jp sysexit mov jle sarl cs push xchg imul mov pop or scas xchg jne add lret jno lock enter pop add je clc add push jae jecxz inc ss call cmp add cmpb or pop xchg pop mov roll inc (bad) repnz mov xchg cltd mov jp data16 (bad) pusha inc xor sbb xor mov daa xlat mov movsb in dec lock mov sbb xchg add push mov ja jns adc jnp inc cwtl push test jo cmp or sub inc xchg sub mov shrl enter xchg jecxz inc add sub ficomp dec xorb adc out and scas sub dec fsub lcall aas add inc movsl pop cmp xor push mov mov fs ja jp or sti push sbb (bad) mov push push inc aam test add sub fstpt pop lret test fcomps mov dec popa fsubs sub lock sahf ret sbb pushf and pop sub cmpsb xor cmp das in add aaa shrb popf loopne adc jbe push in cwtl aam shlb sub jmp xor and cmpb adc xor dec add (bad) daa loopne fmull aas and add add lahf add sub pop xchg lds xor std mov xor xchg cmp mov inc sarb pop xchg mov lods cmp loopne xchg call sbb dec xchg js add cmp loopne mov data16 add mov jns in mov pop pushf in xchg sbbl (bad) push mov (bad) pop dec xlat mov sub repnz hlt mov and xor jg mov test dec inc ss insl pop cli cmp jp es (bad) inc xor mov test xor test test add xor jnp nop jl xchg mov inc fistl (bad) into mov das leave in mov mov sbb scas cmp cmc or jnp movsb push inc jno data16 and sbbb aad push repnz cltd inc adc xchg movsl push lock sub fmuls sbb dec push xor push push stc inc pop enter mov and mov pushf addl pop add jle sbb push cmp sbb inc cmp nop lock testb push sbb divb insl push pop mov lods add dec sub repnz push mov sti test (bad) enter nop (bad) lret mov popf pop cmp fsubr adc jb jmp sbbb rorl insb mov sbb bound insl nop in adc lcall loope xchg cwtl xchg imul and or push pop jnp xchg mov jb ds lds jl rorl fs aaa cmp inc in or mov dec pop fsubs ja adcb mov lcall jge xor sub dec jne mulb popf loop adcb jecxz fstl push sbb andl fstpl adc mov jecxz in cmp inc cwtl inc dec add sbb fsubr add loop pusha jl add out dec cld mov pop rcrb jnp stc dec cwtl sbb and pushf mov dec cld roll xor stos pusha mov cmpsb hlt pop nop or aad add jmp rolb (bad) lock je add call aaa (bad) mov in movsb je roll rcll incl xchg push fsts scas mov xchg scas mov sbb leave dec (bad) jmp mov gs add int3 insb inc mov jns insl mov scas add imul lods add call dec cmpsl lahf insb sarb adc jo sbb pusha add pop mov jmp daa add out sbb push cld add xor nop push scas or jb cmp lock pushf inc adc addl mov out and lret xor pop bound inc rolb mov add (bad) or enter mov in xor hlt inc or push cmp cmp test js push xorl cltd or mov or pop std push in aas mov jle add aaa and or add mov adc inc mov ljmp sub ja outsb push adc je pop roll cmpl pop fstl shl in clc xor mov xor mov jmp out hlt mov mov xlat push pop psubsb rolb xor push sbb flds icebp loope pop out xor add leave imul xor jmp xchg add push or popl fldl or mov xor cmp test adc repz pop lock push adc add add pop inc cmc cmp add push or enter add mov xor in push mov mov mov dec adc int3 loop sti shr stc add inc pop insl imul arpl or xor mov xchg or xchg sub inc cld xor (bad) repz fcmovbe sarb cwtl mov stc dec jg inc or mov mov scas movsb add insl lcall aas repnz les dec add and out test icebp sahf sub aas imul dec nop lret pop cmp lret mov sub xchg mov iret rcrb xchg mov xchg cwtl pusha xor sub pop in xor test int3 add mov mov inc mov out mov or add cs pushf hlt int3 add call in inc jl adc xor push mov jmp cmp mov add aad fcomps xchg adc add sub lahf call lods add call jmp cmp mov sar pusha fwait test and lods cli push xchg test jg sub adc imul xchg lods imul pop mov push test adc xorb ja xchg out pop adc xor test and adc xchg lods cmp ret or out fldl (bad) push jnp xchg xor (bad) ja sbb sbb add adc mov mov add jb je,pt aam add cltd icebp loop loopne test push sbb gs mov push mov push adc xchg imul adc and add hlt aas mov add mov and repz fiadd pop test adc mov or mov mov or or imulb les ds sbb adc aas (bad) mov loope inc icebp jmp add pop xchg push xor jge add add out out bound or sbb fisubr mov cwtl adc std adc int nop (bad) icebp xor add cmp mov adc mov in adc inc xor dec into loopne dec add dec push mov inc fdiv addr16 cmp dec nop sub pop les add mov cmp sbb adc lea sbb (bad) idivb mov xchg adc fwait mov and lock or orb popf in pop add inc xchg dec cmpsb mov add mov sub sub in xor add xor insb cmp jl mov femms mov pop popf sti sub sbb inc push aam cmp les push cmpb mov sahf xchg or xchg adc and mov mov jg add lahf mov and (bad) (bad) xorb inc pushf cld or mov lret sbb (bad) imul aaa push out enter jo cltd xchg andl test fsubrs xchg xor out dec add inc bnd jo mov push and scas loope xchg mov adc mov adc xchg dec mov or in aas inc and mov mov cwtl cmp stc mov sbb add hlt fistpll push test adc hlt int3 fsubrs clc jmp mov cmpsb scas add sub cwtl adcb push jno test rol xchg push dec fs out leave cmp mov repnz jae xchg or xor dec cmp add push mov add and shll add adc lods add mov jle add mov shrb jbe mov or adcl gs cmp and cmp mov lock mov xchg push mov xor push (bad) jne and fnstenv adc fcoms int3 pop jo jae or (bad) mov add adc imul xchg std icebp mov add dec mov mov mov pop test lcall mov cli xchg xchg xchg xor inc xlat or mov dec or in cli aas subb cmpsl dec inc out sbb mov adc or loop mov add push out push or test sbb pop pop pusha or inc outsb sub push and iret loopne lock dec pop xor xor add mov cmp enter les fadds aam or adc nop sbb leave (bad) cmp mov imul dec out pop sbb xchg push insb ret mov lret shrb subb iret ljmp push mov and push lcall and adc add sarb (bad) scas nop test pop pushf (bad) leave jno or or out xor inc or fwait rolb std fs repnz add leave dec jmp in or addr16 push scas nop pop mov dec lret add sbb push negb xchg adc add call adc rcrb in mov or test nop cpuid lret and jp (bad) ss aad or mulb aam push in pop iretw out test sub imul dec pop inc cs or add clc aas fimul mov xor mov or add call xchg icebp loopne mov add sbb pusha push pop imul push xor push adc nop pushf mov xchg movsb sub out mov movl dec mov jl xor test andb and dec sub adc adc call jnp stc sbb and lahf cmp clc push pop push hlt cmp add cli (bad) pop adc nop cwtl inc gs dec dec and mov cmpl mov popf xor inc lods sbb jo pop mov dec sbb xchg sbb inc bound hlt jne fnsave adc rclb inc repz iret add jmp mov outsl inc pop and frstor xor lret pusha jb and lds shl out pop cld xor mov mov adc out fwait push fs sbb jo mov out out test or movsb sbb mov cmp xchg into pop sbb push enter cmp adc add negl pop bound sub adc loop jl (bad) push jo pop add cs lcall mov adc (bad) add mov sahf or sbb nop loope inc sbb cmp cmp and xor mov push xchg clc xor xchg xor js xor inc pop ret push test xor fadds clc daa sbb mov ret out add bound pop mov sbb aam not lret xchg sub mov rorl fmull mov or cwtl push mov in mov mov adc push movsl ss pusha mov lea add sahf push icebp jmp je loopne mov sub addb fcompl popf jl cwtl jge clc lea gs jecxz add adc or mov cmp movsb ret xchg in sbb movsl push or jge cmp sbbb push fucom sbb fs (bad) adc testl sub xchg sbb mov add dec fsubrl fisubrl jmp inc mov sub mov incb sbb mov and add mov xchg stos test adc mov jl jae sahf sar xor mov push fmul sub push fst or cmp jb adc add loope sahf push push fldl lret arpl add fcmovb adc push adc jmp sbb add inc fnstenv jge xchg and adc test sub mov or xor fstps adc xchg adc xchg sub xchg aas and (bad) xchg in dec paddusw jo es (bad) xor aad clc or pushf xchg jae pop xor push fld1 cmp push mov add jo subb and jle add and and clc jle or xchg mov cli sbb push cmp clc pop lods adc stos (bad) mov sbb in adc movsb std adc or subl dec dec les inc sbb scas add jl (bad) and adc test pop in jns ret push dec dec and insl jae add nop or jle fcoms push push hlt andb push or sbb clc daa add xchg in mov add cmp push dec and xchg orb cmp push fcmovnbe add adc rcr in cwtl cmp dec inc movsb shrb addl cmp xor ret out sub mov and jns shlb cmp lods into ret push pop mov sbb adc adc push lds iret add cmp nop lahf cmc or pop icebp cmp sub mov aaa in jmp (bad) incb fcompl push push jle and popf ds inc xchg leave add jp enter icebp mov cmp xchg call inc mov sub test inc cmp nop inc add stos cwtl gs mov adc loope or aam enter rorb inc lcall (bad) nop inc call gs adc sbb jl jecxz fwait lcall add and push mov inc pop cmp hlt adc (bad) enter test js mov pop mov add and addl mov mov fbld sub in dec xchg dec cmp push loopne push add enter lcall jo test ljmp es flds add adc dec (bad) hlt jb fadds mov jne test test jmp sahf add aad repz pop cmp adc sub int or out add in stos cmp xchg repz cmp cltd or loopne pop inc pusha out mov nop sub aaa mov cmpsb lcall cmp loopne scas ljmp or nop stos add cs cmc xchg imul and xor movsb jl xor test outsl lcall (bad) jne stos adc adc push add and cmp push xchg mov pop lcall nop clc add pusha push ja xchg or sub mov mov add cltd pop add push cmc fwait lret push test pop sbb push xor lods or insb sub push lock cmpl xchg js add inc aam xor fmull jbe enter (bad) cs adc and cld (bad) js and dec sbb xorb mov mov aam push inc add or or fadd icebp stos xchg test clc inc fmuls mov cmpsb add mov mov xchg mov or jmp std scas cwtl and (bad) cld dec rolb jmp testb mov xor arpl insb jg pop inc ds mov es pop add popa and pushf nop add or inc in inc adc jle sti cmp mov test (bad) mov add jbe ret popl ljmp adc xlat loopne xchg pop pop (bad) loopne adc cmc inc mov adcb inc xor jo inc push push adc pop mov and add sarl xchg and cmp aad adc add cmp xchg pop dec subb dec fldcw mov adc hlt lcall sub or adc xorb dec fmul sbb cmp inc push adc divl sahf roll jl ja add (bad) dec loop leave push std fnsave add mov cmp mov out sbbb mov mov test movsb movsb stos movsb cmp add mov mov sbb mov repz (bad) push in push daa shrl fcomp fadds push xchg adc dec (bad) dec push mov inc fnstenv mov (bad) cmp and push ljmp pop bound in mov add jb cmovs sbb loop push nop sbb push push and sbb mov (bad) xor mov addb jmp (bad) push outsl dec push jo adc rol xor dec adc inc add sub incl adcl add outsl jnp rcll insl xchg adc gs cmpsb fucomi add hlt loopne and cmp hlt mov sti sub mov fsubl sbb adc notb ljmp leave roll xchg addl rorl xchg pop call dec (bad) es jnp test adc cmpb insl sahf (bad) out in aam add fldl out movsl adc push xor sbb inc sarl fs and sbb xor cld cmp popf adc orl jg call xor sbb aas outsb dec cmp push loopne mov push sbb add js aad in or add push cld mov add out addl nop addb lea iret icebp imul jns enter inc add cmp jg xchg fimul cmp adc rcll jns push (bad) inc xchg mov fmull mov pop pop aas xchg subl adc xchg clc add mov jmp jne in cmp mov pushf fmuls hlt inc in add cs sub sbb xor (bad) pusha inc pushf sbb mov push enter mov cmpsl test pop adc pop mov (bad) adc test add gs adc movsb (bad) fdivrp dec and push and ret notb adc lock xor out shrl orb and sub mov adc cltd and dec jg dec cmp inc arpl add adc dec inc sbb inc add mov daa jb dec xchg dec pop repnz adc pop adc nop insb loop jne add jb int3 sub (bad) jo out fcompl jge jg and xor je adc outsb jae cwtl int3 or test pusha sub loop mov insl ss enter in sti je sbb or cwtl or cwtl mov std ret cmp jae ds (bad) pop hlt push addr16 xor lock loopne or cmp push mov imul xchg ds push add test xorl adc rolb xor inc and fs xchg inc cmp adc mov clc call ds push jecxz out push and mov inc test push stos xor cld lods repnz pushf add pop out xlat push mov sti adc xor aam dec and mov clc adc and test sub dec nop add adc mov add mov fistp and out sahf pop mov jle add push popf xchg mov clc rorl or sbb jo ja popf int add lahf rorl aaa gs outsl ljmp pop add lds inc popf in mov add dec clc loopne,pt aam stc sahf fstl jl (bad) push add dec (bad) icebp sahf cmc inc or lahf adc lret iret roll loopne insb pop adc jle xchg push inc and fs cmp inc das rcrb dec fdivr mov pop push inc push mov dec clc mov js test inc and popf loop sub int3 adcb nop mov pop out add iret xorb call je rolb sbb ficom adc popf xchg pop mov daa cld or nop pushf add aas sbb loop inc jns shll enter dec mov ja add shll data16 xchg je fwait pop inc sbb arpl clc clc inc push sbb jle xor in sbb mov mov and cmp subl ljmp fsubl add pop aaa add pop sbb andb pop add cmp and sub into outsl add in mov xor aam xor into push cmp (bad) iret rcl pusha mov ret cmp pop add inc adc or lcall sbb xchg cmp ret xor and sbb push fs dec test add cmp xor add mov ds mov pop lret pop and ss mov js sahf sbbb xorb jecxz roll sbb hlt (bad) mov aas push jnp adc cmp add outsl mov stos sub push test movsl xchg sub jbe lcall dec push sbb cmp add sbb fildl out add iret pusha fdivrs mov pop negl roll sarl mov pop push add stc cmp xor mov cld sbb jns call push jno jl cmp dec pop orb and int push add inc xor mov mov and lock mov add sahf inc cli scas mov xchg push mov adc dec pop xchg sbb cmpb add xchg popf or jo sub or fcoms outsl dec je and cmp xchg ret mov cmp mov ds mov cmpb cmpsb in int3 jo or aas in xorb dec mov cmp lcall in push mov rcr icebp inc push or js fbld sbb jo std sbb aas or adc xchg cwtl sbb adc repnz ret cmp popf (bad) adc dec cs sbb ljmp ret push push sub or push sbb inc or test mov sbb pop enter mov popf shll pop imul (bad) sub stc and lea push add insl pop movsl movl test add mov rolb add jg leave push cmp stos sbb cltd fsubrl std dec in pop ljmp push pop (bad) inc shlb in stos lock insl lcall in adc cli stos addl ljmp add fs and addr16 notl shl test nop pop and ja adc pop adc js dec dec lcall xchg or andl inc pusha data16 ss or stos adc es pop xchg add xor fcomps adc lock pop mov adc mov test push daa xor insl xchg sbb push dec xor add adc pop in les std movb mov mov xchg add add enter add jle icebp adc fwait add add mov shrb push cltd cmpsb lahf mov add pop nop and lock add jl lahf loope xchg and insb or in aas add jle,pt add or lds sbb nop std cltd add rclb movsb jmp pop outsl mov add les pop and and or bound cmp fwait add js xchg test xor (bad) lock mov dec xchg add pop test leave outsl jecxz cwtl sub xor jl shrb loope inc cmpsb jp push lods cmp clc cmc push xchg add dec cmpsb or or aas sub push (bad) mov les or call sub popa rorb push pushf push add (bad) pop dec mov cli and in ja xor shrb bound push fs xor sub jp add inc mov mov xchg (bad) int xchg inc bswap inc mov mov sbbb icebp fdivl sub add repnz test aaa xor xor and mov jne add and iret push stos mov cmpsb orl cmp stos fpatan loopne jne lea fwait dec stc pop mov nop adc js mov add sbbb xor in add div mov jne das push or pop add sbb insb es push stos test jp ds shll xchg sbb mov xchg test inc fildl pop fdivs dec jmp cltd xorb pop pop mov mov shlb lcall popa add ret inc or dec call adc lock or push outsb sbb xchg adc xor mov mov and mov subl or loopne enter data16 inc add imul fdivrl dec sub pusha xor fs div or push inc int push inc add or mov add inc lods add fs iret pop sub clc mov out xor cs add sbb or nop push sub lea stos pop roll ljmp pop je jbe pop cmp js inc and int in inc xchg setb sub leave mov into push jae loopne add rolb inc nop ljmp insb add je adc dec outsl push jb sub pop mov sbb push faddp jo cltd sbb sbb or adc inc es add enter cmp or leave fstps add clc and jo lret adc cmc inc es dec pop xor lret stos push pop mov sub (bad) cwtl sbbb lods mov add dec outsb mov sub je and sub sub aaa mov xchg divb dec inc dec sub jl stos in test jno js jl pop movb push jl cwtl das leave add sbb mov pop sbb dec cwtl add scas or xor fnstcw jmp xchg or pusha (bad) mov xor shr dec lcall loopne jp aas repz (bad) into ljmp mov ret xor dec cmp adc or lret andb adc les je,pn mov dec fsubp in add rolb ret pop and ss mov cltd adc lcall and popl lcall nop inc mov sub shlb jmp hlt inc daa add xchg pop dec lret push sti das lahf add add xor loop js mov add (bad) xchg cmp stc xor xchg jne xchg ds lret or movsb repz sahf ds js sbb out sbb mov add enter and stc jecxz adc cmp inc adc (bad) sbb popl sbb int sti mov xchg sub add jle daa inc in xchg or add leave bt sub and add cmp pushf push test icebp out (bad) pop cmp lock cmpsl test add mov ficom push xchg fwait mov or repnz or mov pop mov adc pop xchg or add cltd jbe mov bound ja mov rcrl jg fcmovnu mov lds add imul cmc fwait cmp xchg mov or add mov pop adc clc add mov sub pushf mov add scas push sbbl xor add lods sahf and sub dec xor sbb pop lock mov adc dec cli and pop sbb rclb sub cmp je test lods inc ret roll pop cmpsb xor dec fadds ret push test mov push inc cmp pushf sbb out mov cmp and add xor in inc lea jnp xor js add in cmp push adc add sbb imul add aam or popf add sbb xchg adc aaa cltd pop sbb add jp fstl pop xchg pop sub sub xchg repz mov inc or add movsb push lcall (bad) fs adc outsl add add scas popf push loopne nop xchg aam cmc push rorl nop addr16 push aad mov add xor or add xchg dec gs xor add push notl ja dec push push je sbb jge cli pushf push mov add mov jecxz pop jl arpl and das int div add jbe add adc hlt mov mov iret call jno sti clc sbbb scas jl xor xor jbe shll rcll sub sub test or sub jl jmp outsl (bad) shrl push (bad) lock or sar add into scas xor jb hlt ljmp ret pushf xorb xor jb sub clc aaa jl pop xor andl lcall ss stos jb mov pusha fldt sbb mov add (bad) mov jle dec aas xor pop sub call xchg sti mov add ds imul add in int fwait orb adc xchg or push add pop aas int3 test sbb test out adc rol scas mov inc inc punpcklbw xchg xchg or shl mov xchg sbb xor loop scas xchg call stos lock and fldz lret hlt add arpl aad in adc push int inc fs add andb fs and sbb jns add push inc nop stc (bad) push sub mov and push sahf mov add ret jmp xchg add scas cmp jge or fnop imul xchg (bad) xor enter fcomp cmp push add sti aam nop lock in sbb cmp adc movsb add sbb rolb call sub push insb mov add xor inc das scas fistpl outsl addl jl and cmpb rorb mov inc mov sbb enter or cmp cmpsl pop add stos ret pop inc in pop add xchg test and ret inc xor ljmp mov lock dec sarb imul inc add add dec jl adc mov xchg mov cwtl adc out out or sbb or xchg push es push mov rcr or mov or nop les jl dec clc xchg inc outsl iret int3 add inc clc cwtl push dec lods and inc push push xchg rorl mov int3 cmpsb sub jb test add aas in pop lock jo out aaa add clc pop inc sahf xchg push push ret loopne mov add xchg sbb mov push push mov popf shrl js sbb in inc pushf jo mov test les into xchg mov and jae or loopne loope cmp fiaddl rcrb mov lds cmpsl es lock (bad) cmp fptan shr inc push (bad) les stos push push call add sub cmpb lret mov loopne outsl dec iret push inc and xchg push mov add xchg ja orb mov fidivrl or add roll insl pop rolb ror and cltd fcmovnb dec mov enter add xor inc pop lock add push mov loopne ds sbb and es sub nop xchg and or adc inc shrb add push aad sbb jo mov leave inc cltd lret mov push jecxz sub iret in xchg fsubs test test and or dec into xchg adcb fwait inc add pop mov pop mov sbb test add rorb mov sbb (bad) jecxz xchg jno,pn je inc xor xlat rclb sub test and mov mov andl nop (bad) xchg inc sub cmp push out roll (bad) imul rclb push (bad) cmpsb cwtl loopne or mov pushf inc fisttp add std push lcall add pusha sbb mov shlb popa xchg add push jg das mov es inc insb icebp adc in in or jmp loop jp cwtl mov mull scas xchg loopne dec add and fdivr and adc rclb (bad) out mov in inc jecxz mov jo or sbb mov insb xchg adc stos mov add cmc mov shlb push lret xchg or add mov and jno dec cmc xor call mov mov add jne jg fwait cld sub add aas daa cltd ret inc shrb lahf jp lcall les pushf pop rorl sub or ss lods pusha xchg test clc cwtl and dec mov xchg jne and xor daa jg and or cwtl dec das adc dec aam (bad) xor popf xor or (bad) ss lock rcrb test add pop (bad) push fnsave pop enter test add lret adc sbb jbe mov and push aad cwtl movsb add push pop cmp dec sub lock pop push (bad) sbb gs out mov nop mov test insb pop stos ror call nop xchg enter movsb and add shl dec xor das push insb dec push jle popa xor push xor dec push shlb fsub or ds pop inc push sbb test sbb xor imul clc (bad) xor inc out add divl pusha mov xor adcb (bad) ljmp jae sbb cmp in imull mov popf xchg cltd stc jmp (bad) push jo mov (bad) call add adc adc add fnstsw pop sahf cwtl js mov adc sub andl jns lahf cld popl or iret adc xor push dec rcl pop jl pushf nop pop mov int3 pop mov cmp ret jno mov into add xchg mov or add mov add mov cwtl pop dec cmp mov mov sub cmc jge insb lock into sahf out (bad) sub inc add add rorb cmc subl test xor sub (bad) in add ja and or xchg mov adc xor push xchg cmp imul cmp adc adc nop aaa adc or imul test in mov daa aam mov or or movsb in or outsb mov ja fsubl xchg jge pop jo aaa lds outsl inc fdivr pushf inc nop adc gs sub fcoms xor repz inc xor push rcll xchg dec xor push imul dec cmpl js (bad) xchg movsb xor or rorb push out imul cltd add shrb or rcrb sub inc xor or xchg push es (bad) mov push cmp adc pop ret cmp cwtl and add inc aam loop mov lds xchg cmp daa es fildl push (bad) test dec out xor and popf (bad) aam dec push mov clc pusha jb xchg jo xor pop mov pop dec fadds adcb add imul outsb aad inc ja fs sub push movsb xchg mov add data16 adcb imul xorb dec and push xor push adcb pop xor or xor inc lret add cld sub loopne adc and push sub ret inc movsb fs push cld add aad cmp stc cmpsl adc or je loop hlt ret mov or js add xchg mov mov fcmovnu adc mov xor cmp outsb xorl push sub lods inc mov mov clc xor mov dec or inc xchg cmp int3 lret aaa out rcr or and int3 (bad) and (bad) xchg push jb add outsb loope pop mov xor pop stc push mov add inc je push xchg xor cwtl and loopne add push adc jge jl and or ret daa roll insl pusha enter xor mov mov mov adc (bad) mov mov adc cmp (bad) lock fadd push adc sub inc inc mov adc pop shr pop inc fs inc dec adc inc dec (bad) leave lods jno push pusha xchg sbb aas mov fadd cmp das daa loop and or and push cwtl xor inc or xor mov add cli inc xchg ljmp jle and sbb pop out xchg sbb rolb pop sub enter sbb loope add adc pop sbb aad sub mov jne (bad) mov rorb sub insb inc mov add dec jno sbb leave imul push insb cltd bound ficom xchg fimul jne int xor bound loopne jno add push lcall orb je sub movsb add loop cmp ds lahf add xchg repz inc (bad) jmp and jo add sarl fld das fisubrl (bad) aad leave sub push orb add fisubrl shrl je push mov (bad) add dec mov inc push xor fsubrl loop push adc dec dec mov and ret and inc in pop push sbb sub sahf bnd js sbb fsubl and roll adc xchg mov stos jb (bad) lods lahf push inc shrb mov push cvtpi2ps dec dec jl pushf and pop test inc cmp push xlat cltd pop (bad) sti sbb popf ret mov in in call mov xor jp pushf add cmp bound dec mov (bad) call outsb push jne fdivrl add mov (bad) xor and cmp imul push gs lret mov xchg mov cmpsb mov mov jns mov pop xchg push or outsl jns aas adc rorl int3 inc pop cli add in pop sahf scas adc rcrb nop aam xor mov mov js out add cmpsl xor xchg das push inc rol cmp nop and lcall mov cs repz clc mov mov or mov orl pop sbb and and pop and and mov sub nop lods add push mull mov mov add push xchg mov subl xor ds push (bad) push leave nop mov or mov scas addr16 sbb popf js lock fadds adc or mov xor test rcrb xchg cmpsb clc adc (bad) mov cmp xchg adc sarl daa in cmp arpl sbb subl dec dec aam inc dec repz clc xor int3 adc push call test iret push int3 mov aam mov adc sbb fcompl rorb outsl pop lods jecxz sub cmp and (bad) rorb in lock ljmp repz pop sbb js mov push pushf adc push stc sbb add loopne adc sbb cld addl add ret sub jns xchg adcb pop repz sub add outsb sub mov nop jbe js pop dec xchg scas into sbbl adc xor push inc cmp ret bound lret cmc push cmp xchg lods add inc jno cwtl popf cs out mov push cmpsb xchg dec mov push cmp push loope loopne clc repz daa loop jl xor push mov add or fs adc (bad) xor addr16 pusha iret addl (bad) pop adc js push roll scas int int3 push xlat or mov mov test fmull inc adc xchg (bad) js fimul add lret sbb nop (bad) jmp loopne mov test push sahf mov and jl test rolb push mov and lea orl addr16 enter mov cs das mov gs mov insb out push xchg int jmp jno pop or pusha dec cmp add arpl adcb mov and sub (bad) flds mov jl xchg nop cmp movsl imul xor and in xor pop adc add std mov fistl mov sbb and xor out out pop and adc sbb andl jge pop enter pop pusha insb xor lcall out and dec subb push and rorb call dec cmp cmp xor sub out ficomp pusha mov and dec orl call and into pop pushf cmpsl push xor negb add push fdivrs adc cmp mov lods iret (bad) daa loopne jnp or adc xchg inc mov sub add sahf imul jne lret (bad) js or and aaa xor pop push jmp jmp push sbb mov dec push cltd sbbb inc fsubr sbb xor mov mov cmp push aad (bad) and and sub push das cmc repz add inc add (bad) pushf sti fisub loopne add test mov or adc adc pop adc pop dec popa and push (bad) out adc xor or sbb iret out jno loopne add loop push xor sub adc dec daa xchg ds pminub mov mov imul scas sub mov inc nop addr16 faddl jo add mov imul je dec push add push sub mov or mov inc pushf push lcall orb pop mov lret popf pop das fist outsb pop xor test sub mov clc bound testb ret push adc xchg and add movsb cs inc popa xadd push adc das or push pop jno inc xor rolb jp lock test sub int3 (bad) xor inc xor adc cs or sub jg dec loope fnop lock dec enter sub and add xor xchg repnz mov stc push dec in add jmp int rcrb jl sub push lahf pushf dec add xorl das arpl cs inc mov call clc adc adc push mov inc insb adc xchg cmp xor test fldl mov lret mov ds outsl add ret mov (bad) je adc lds out fcoms retw and stos fs xchg xchg mov dec xchg or jo js add push in test andb (bad) int adcb dec mov cmpsl and mov sub nop cmove cmpsb pusha (bad) mov les pop int sub call out inc test pop subb popf sahf xchg xchg inc orb testl adc cld and adc cmpsl add mov movsb add mov seta dec pop lret das xor add xor (bad) mov pop lds pop orb cltd mov add xor adc mov cmp outsb or jge jnp out cmpsb sub bnd mov in jg jno add sarl mov mov inc jnp xorl lahf insb push pushl or and sub repnz add es or xchg sti stos addr16 fcomps add outsb mov mov inc add or aam mov jnp ljmp mov mov pusha stos sub mov mov sub and cmp stc xchg int lods shlb cmpsb daa pop mov or dec mov or fsubr clc mov test cmp test fldt sbb scas repz sub push jne inc scas adc mov sbb lea sbbl push dec dec xchg icebp add movsl xor add dec test add lock das pop popw gs mov sarb xor mov jl adc and test mov mov cmp cld xchg add and lock push lret jno jmp hlt ds or add mov cs ret pusha mov (bad) imull jecxz push pop sbb movb sub popa add cmp add inc jge inc add dec addb test mov (bad) mov dec add sbb ss addb xchg in fcompl dec add cmp sbb enter incb sarb das dec add dec jnp test scas ds or sbb ds test cmp push and push mov jb arpl je jge add jg inc mov jns popa pop xorl out clc (bad) pop icebp inc cmp adc or sbb cwtl lea push add scas (bad) push ret popf fist add mov inc fmul rol mov sbb mov jnp ret sbb sbb iret (bad) test stc in xchg dec or xor ja inc aas (bad) sbb js mov sub test mov (bad) icebp adc add mov or shlb inc add jle add push jmp mov adc cmpsb lock jmp movb mov jb subl mov fnsave sbb pop jmp test add add pop mov adc rcrb xchg inc ss adc mov and cli insb add push addr16 out or xor adc aaa inc (bad) icebp ret push mov add inc pop and das cmpsb pop cmp adc int3 (bad) nop or mov and sub test inc adc cmpb ds mov mov test add push pop lret cmpxchg repz adc cltd pop add push mov push pop cltd or imul iret sbb test adc js repz xor adc or out jmp call (bad) pop les mov js nop and loopne adc aad daa and xor in and stos clc jnp daa jp ljmp (bad) or sub adc mov rorb loope sbb dec inc lods and add (bad) cs add fmull xor outsb inc and scas roll test or rclb nop stos sbb enter mov or divb arpl lret ja pushf dec cltd nop aas jmp push push scas xor push test and xor dec sub stos cltd (bad) lea push ss inc mov add test dec mov test and push rolb je les cmp lcall test sbb (bad) dec mov sbb sub or adc fs aas mov imul add mov (bad) scas pushf test inc push fdivrl dec xor dec mov adc mov movsb inc in and cmp andl les (bad) aaa stos or fldenv sbb icebp mov add dec mov or enter test cmp pusha xchg pop lret and or add sub inc dec pop dec in jge sarl dec lods mov hlt and dec add mov or mov stos rol dec lret mov (bad) and ret add inc inc mov les jae xchg rclb mov aad cmp dec add or aad mov dec push cmpsb mov xchg dec sbb lds cmp imul add dec in push test sbb popa add xor cmpsb es ljmp inc jbe lods and pop sbb mov lods dec cmp in jno cmp lock add dec mov jge push xchg mov sbbb insl ret lea aam dec stos jb add fidivrl add pusha mov add rolb enter inc adc mov xchg and sar or add mov pop push jge sub out nop call lock push and ret mov cmp ret inc mov roll ljmp movsb mov dec add mov or into test and and notl stc mov imul adc sub cmp mov add push jmp sub xor lcall dec push outsl gs sub push push lahf fildl mov cmp push xchg mov xor inc sbb xchg cwtl test (bad) and scas rorb push dec stc lcall mov and es sub or xor movsb and add jb inc sub and and xor mov sahf cmpsb xor cmp add adc xchg sub pushf adc mov push or subb inc xor sub mov cwtl dec push or lea sub push js in pusha fsubr dec aam jnp int3 dec inc cmp (bad) xchg pop cmp adc sbb sub cmp xor rcl in cli and xor push nop clc shlb or dec iret and mov shll mov xor adc mov rolb jge cmp add push inc rcr mulb add xchg xchg sti ds push or cmp mov push sub or test or adc xor add push sbb add int3 stos inc push mov push dec ret jnp inc test mov adc enter lods insb xlat pop add dec lods in pop mov inc insb xorl orb les scas faddl xchg cmp push sub jmp push dec (bad) xchg xor rorl dec call and outsl int3 dec xchg lock jl mul dec insl push xor mov pop lock dec and mov mov push mov dec lcall test enter dec and sarb nop ret push xor or (bad) sbb aam ss xor push test rclb stos push xchg out dec sub push add xchg mov jnp adc das dec in mov push (bad) xor push and movsl leave inc push xchg adc inc sub add add xchg rcll mov scas mov add or pop xchg pop notb subl cwtl or outsl test add sub sub jmp push dec test push mov sbb xor in dec or sti add push aas xchg shrl sbb (bad) mov xor push push cmpb pusha dec aas mov enter pop arpl rolb jb lret inc sub mov mov lock sub hlt sbb test inc adc cld prefetch add dec cmp sub inc or cwtl lds adc adc mov jmp jb test sub dec xor sbb movsb mov xchg cmp cmpsb test aam enter xchg pusha add fldt fwait in and sub and das adc idivb mov xchg jl cwtl loop push add call add pop cmp and add jnp pop inc (bad) lock pop xor pop add out jne push add mov or add jnp or pop jge or dec add enter cli xor cltd dec movsb cld rclb add rolb add pop push sahf add out xchg hlt loop mov in das ds pusha inc jb pop mov xchg cmp push sahf add lea and dec push xor jne inc in push add adcl jbe fistp leave mov or repnz add je push imul js sbb mov js lock mov fdivrs xor mov sbb lahf in inc push xor push popa add inc push out rorb and mov test cli iret test (bad) rolb lds in and test and inc pop inc pushl int3 jns out sbb in (bad) adc sub add fcmovu push in pusha nop inc sbb xor jo pop mov out jno fistpl jmp sbb out adc testl cmc ja pop bound lock pop cmpl push xchg mov mov mul mov je dec and loop push cmc and mov push inc push xlat sbb fiaddl sbb jmp je add in xor jge xor mov (bad) out cltd and fsts cwtl push js loopne sbb pushf imul (bad) xor sbb pop add or add push aam je jne xchg jmp andl push jns mov ja insb cmp adc add pop jg in add or push lock int add add (bad) daa inc bound add aad dec mov iret pop adc repz shrl sbb and mov jae push addb jecxz cmp sub je lret and xor xchg mov inc push add lret and sub add mov sbb and add or int3 lret add in into fisubr mov adc sbb icebp test loopne mov xchg or loope in test inc sub ja sub insl incl cmp xor sbb cwtl or notl dec jae add in xchg fs ja dec adc xlat mov out cwtl adc pandn add lahf add pop xor jbe cmpl outsb and cld sub into adc inc inc lahf xchg (bad) xor pusha push fld in push pusha movsb mov add data16 inc inc inc xchg js lret cmp mov xlat lcall push add mov push loopne dec xor or fcmovne jle push sub adc push adc (bad) mov or mov pushf mov adc aad fsubl or add addl push fwait jno dec outsb ja mov pusha add jns divb insl xorl rorb jge pop movsb bound dec mov push fisttpl cmp enter mov cmp xor ss pop lock mov lock push sbb stos cwtl add lcall (bad) aad xor loopne push push add inc jb mov xor jle or adc dec add pop and jg jp add adcb pushf (bad) inc fldl push push fild (bad) fnstcw cltd xor mov lret mov mov cli mov jne test pusha sbb popf add push bound and (bad) dec cmp cmpl pop jne and or sub adc rorl dec xor in aam or and inc sti and push repz fisttp aas lret mov pusha mov aas ret push sbb inc jg or js xchg cwtl inc into ret cld daa dec cmp push fcoms test test clc int3 and xor iret lcall mov and fs jne mov adc add or adc mov fist pop or lret (bad) add pusha sbb xorb dec inc nop adc push dec push repz mov lcall mov sarl jns das xor or sbb cmc sar jle mov sbb pop adc adc pop sub idiv or orb jg (bad) aam nop pop lahf dec pop fimull movsl in icebp mov fsubrp lods and fs lret jge jo in jb add pop les and out pop add clc je sbb push pop cmp and or ss arpl cltd les cs cwtl andb adc sbb leave push cmp outsb inc jae push test mov repz adc enter fwait hlt fild insb scas adc and xlat inc sti ds xchg fwait xor (bad) negl lock pop out cmp sbb push mulb sub fimull mov sub popf cwtl add fsub into mov pusha inc xchg test dec lods add nop lock cli push sub mov (bad) sti xor inc mov xchg add loop rolb or add movsb xor sub add (bad) mov xor lahf movsb xchg jnp or std lcall xor cmpsb mov test push push sub xlat and movsb lock mov (bad) les lods jbe lods pop inc pop je adc rcll iret sbb popa xor or ljmp xor mov in add subl mov (bad) mov add adc push cli jnp mov enter rorb xchg js cmc adc and jo aas cwtl scas add xchg xchg pop nop je rcrl rclb sbb mov rcr faddl push jp jmp insb and adc inc or rcll aas lret int3 pop dec mov xchg repz cmp or jbe shlb adc xchg xchg test jo loop mov repz cltd lods test add fdivrl mov (bad) aas mov lds mov imul add bound ja mov js shll loop nop adc add jg lods pop xor mov xchg and xchg xorb aad call roll or jbe rolb push push int3 popf xor sti or bound mov cmpsb jno loope pusha push mov sbb sub add scas popf or popa push out fisubr out dec sti or popf xor add pop inc jmp hlt roll xor pop pop pusha push int sbb cmp popa add roll dec dec lock pop int3 xchg ret push test or call rcl jae xchg sub int3 sbb dec push fwait pusha dec je jno cli add add out adc dec add push std adc cmp es sbb push nop xor lahf in add or je cmp int sub adc add cwtl inc cwtl in mov lock jl pop iret lret cwtl rcrb adc jecxz imul dec xchg mov ja dec mov pop push mov pop sub (bad) adc lea loop inc or sub enter clc fisttpll enter pop arpl leave mov mov sbb cmpb daa lret cs adc cmp xor fisubl rolb ja pop jbe push pop out cmp scas int lods jae sub cmp adc push or sub insb xor xlat jo loopne pusha cld push popa push dec (bad) outsb je lret adc push aam mov andl or xchg add movsb in in or nop adc jo dec add clc sub ret push xchg inc mov mov test sbb cmpl or fwait mov xchg shrl mov cmp mov add int in xchg test mov sub xor leave mul or sbb mov ftst xor js (bad) loopne jmp and add and les les adc ja xlat sub mov jp incl out es xor add mov xchg xchg push cltd cld mov cmp xor (bad) cwtl outsl cwtl mov jmp inc in push adc xchg xchg or mov loope in sub cs inc cmp lcall cmp hlt dec clc es js std or clc ss mov mov or pop out rcl ja lock test repz insb and fisttpll push add cmp dec cmp mov push sbb dec icebp and loope sbb add movsb push xchg insl pop xchg shrb dec dec rclb add mov int3 mov add cmc inc dec cwtl sarb ficoml test sub mov and or jmp mov subb popf loop rol orb jne pop out mov jnp test dec cmp cmp sub push pop mov repz sti scas loopne pushf mov push xchg pusha je mov pop pusha inc mov push sbb andb mov push sub rorb and ss lods adc jl add dec pop fsubrs push push push mov and adc jge (bad) cmp jno or fisttpl push mov mov add rol mov mov xchg repnz ret movsb and sbb xor lcall pop cmp (bad) mov mov push add shrl jns add lds sub cmp aad rol pop or addb enter stc pop insl jae xchg pop or pop mov add aas imul sbb fstps (bad) std loope imul adc ja mov pop ljmp and movsl lea rcl fdivs fisubr inc inc and mov (bad) es fistp ss jo aaa loopne icebp add aad sub subl xchg add mov pushf cmp cmpsl jle pop bound dec cwtl mov add hlt inc add int3 test lds push frstor rolb out test mov fisubrl add mov (bad) test mov outsl jne inc inc jl sbb out ret mov add adc mov outsb lock es or enter mov mov (bad) jo mov push cmp js xor fbld mov cmp cli lds aaa nop fcos xchg shl sti sbb xor popl mov shl loope loope push mov ret push cld jl mov inc mov scas add ss dec mov jg mov ltr mov in add cmp add pop mov das je inc push mov pop daa add mov push insl jnp insb dec leave cmp enter adc lods pop add or jg rol addl push cmc bound cld psubsw mov imul and movsl nop dec ljmp test popa insl mov test adc pop xchg mov sub test stc add lcall fs mov icebp int3 add adc test clc and mov cltd (bad) and scas mov add mov inc add pop inc rcll and push ss pusha adc xlat js and (bad) aam cmp test sahf sbb sbb or xor mov push stc mov shlb add push xchg xchg inc cmp sub pusha (bad) clc inc data16 mov xor or cld aaa mov testb test ds pusha mov sbb lods push mov cmp inc call les nop and or mov push sbb ds shll fcompl imul mov jnp nop pop fcomps sub repz mov mov jmp mov aam mov inc (bad) xor bound loopne mov adc jl adc add je lcall fst aas add stos icebp push lea hlt fwait lds lahf or mov mov stc nop and add call pop or lcall adc pop dec ja jnp mov loop lahf xchg jbe test insl xchg cli es imul stos enter inc mov test push add mov pop push cmp lahf cmp sahf or add sbb incl add xlat add jge sub inc sbb add shrb jb sub push pop ret and enter or fldcw cmp pop jmp xor inc add push mov and imul cmc repnz and clc inc lea movzbl fiadd pusha scas (bad) xor insb or sbb subps xchg cmp mov jno xchg fwait push or lods sub movsb push and popa dec add mov add pop jne in insb bound clc xchg cli fwait sarb test (bad) dec adc adc lock in xchg and in (bad) aad orb lcall mov dec jb mov movsb mov dec or xchg mov and xchg or nop and adc inc je inc xchg mov aam cs jne rcrb lock iret js inc lea jnp out inc ss mov inc add push or mov loopne bound adc aam inc andb mov adc cmp icebp or popa inc sub cmp stos popf push mov xor or adc or sbb stos test xchg mov decl cmp add lods mov aam jb cmpsb lahf add cmp lock call std ds imul add movb aad inc or loope test fs sbb imul push adc push fcoms fistp inc push adc mov ss lcall (bad) sbb fs sbb add pop addb xchg das js imul jno jmp pop aaa sub je fiaddl cli loopne popf cmp lods loope cli push jecxz out inc test mov mov cmp xchg cli and lcall xchg fwait sub lds and mov inc andb inc sbb movsb add xchg retw lret push aaa xchg dec rclb or mov nop lea (bad) xor mov xor cmc outsl pushf xor fisubr inc pop xor test outsb push arpl mov push add cmp je unpckhps push clc pusha dec out adc add iret adc stc xchg in sbb jecxz dec xor xor js sbb sahf dec dec fsubl xchg jb dec mov inc add in call push aas pop dec ljmp ja insl adc add lcall loopne add sub mov or iret stos push inc out (bad) idiv (bad) sub js cmpsb xchg std xchg call call push clc cld test (bad) adc sarl sbb xchg sub test or cmp lahf into orb and fadds loop sub jo inc adc pusha xchg sbb shll inc inc inc xchg lret (bad) jo push adc or insb and clc or and mov inc fs and bound inc loopne shrb or add xchg push push int3 mov xlat add jb lods add jp push cmp sub mov in (bad) into outsb into sbb insl cld and add and stos in aas mov hlt sar sarb lea push push xchg cwtl imul cmp add popa cmp out pusha adc push xor push or clc (bad) pop sub pop adcb xor or js jl sarb xor push loopne (bad) sub jle sti cmp movsb push js cmovp mov xor pop insb into imul xor adc cmpsb cld push fs call add cmp fldcw xchg dec paddw mov add into in (bad) orl loope mov ror lcall repnz mov ja lds add movsl xchg daa fcompl outsl pusha ljmp push popa test cmp rcll out out jg addb fucomip push add dec imul adc in test mov add sbb addl adc sub imul cli sbb cmp sbb lret or popa inc fbstp mov mov push stc dec insl inc add sbb arpl lock jle and mov pop jmp leave or lock adc pop add xor fsubl stos xchg (bad) lock add inc xor jl test jbe adc mov push sbb rorl loope outsb xor add in and and lret insl mov sub inc pop test adc lods or mov add in dec in leave and (bad) sbb adc and xor test push jo add enter insb popa xor and jnp fmuls inc add adc lock fisubl movsb xchg imul testb je imul add mov inc in jno and (bad) adc pop add jno (bad) call or test inc xorb in cs rorl mov fcoms mov aaa test shlb xor insb es xor fadds push push dec jb cmp xor sbb jno loopne pop add push inc rclb mov sub add cltd mov test add outsb xchg and mov adc push gs add popf adc and insl cltd loope and bound xchg dec int3 xor repz mov sti and adc (bad) jmp sub dec movsb add std sti jle xor xor loopne sbb jbe mov dec sub into sub inc cltd fldenv jge std arpl push push fdivs jb mov or push pop sbb add add push jmp sub push in (bad) mov jnp sbb mov push inc cmp inc xchg or sbb nop or mov sub into add stc cs jno mov mov or fwait or pop add movups and cld cwtl dec sub sub or add daa push mov cwtl fcomps testl outsb lock stc roll dec (bad) xor xor hlt xchg mov dec dec nop or adc cli sarb adc mov int xor out ret mov jmp jmp fsubrs add mov and dec add (bad) pop fimull pusha mov cmp pop iret sbb mov aam in pop lahf repnz sub mov add out jo and xor call idivl jb sub inc jl sbb dec sarb (bad) scas mov push xor or ficompl dec lock mov into xchg mov loope sub and push je dec les addl subl mov stos into scas inc adcb mov dec int3 sbb int3 dec xchg mov cmp repnz mov cltd inc mov xchg cwtl in pusha stc mov insb test add les sbb addr16 lds sub xorl sbb cli daa mov shr enter enter jecxz jl xchg fstps imul xchg aad or add mov popa loopne add stc cmpsl test push rcl das popf jb push pop dec ds rcrb movsb in sub test xor xor pop popf scas add mov fstpl hlt lds lock ficom or shrb adc and add cmp jle out pop mov add push test jo push add movsl outsb hlt repz or shrb out insl dec test mov rorb pop sbb mov bound mov sti inc or jnp mov inc cld fistp add insl or lcall stc mov mov lret iret sbb jp add test aaa loop jl add inc dec xor dec faddl sbb addl or inc jmp mov in lcall add sbb dec jae dec sub mov mov (bad) add push inc movsl xor arpl xor pop cmp sbb pop lds jo push mov test add mov cmpsl mov subb in pop jbe add (bad) mov pop inc sub nop test mov in cmp pop adc mov stos rcll inc bound adc xchg and xor and int pop pop lea jbe,pn shlb sub cwtl sub xor xor ret or jp inc and mov fisubrl lahf lea je and addr16 jl push adc sti add test mov jle popf sti pop push into repz les outsl xor nop das xor xchg mov aaa mov mov std mov rorl mov xor add cmp pusha lcall aad cmp push sub add xor cwtl mov push xchg add or or arpl fadds fcomps dec out mov jle lret jns sbb out pop faddp icebp daa movsl mov xor andl adc add cmpl inc arpl out es repnz and sub mov inc push and push add inc xor sub cmp ss pop fcoms aad (bad) inc ret push inc sbb flds dec popa shlb cmp xor outsl and pop inc mov orb inc cld bound pop mov inc and je or add push sub push (bad) xchg jno add xor pop rcrb cmp sbb adc sbb in clc mov lcall in and mov xor mov add data16 stos pop pop loope fstps and or loope and xor pop loopne mull lods mov iret je add pop dec mov out ret movsl repz pop add jecxz je jns nop xor sbb pop inc or and leave or fs (bad) mov xor aas or enter sahf xchg movsl sbb insl lea je pop sbb jbe in out inc cmp pusha (bad) mov push aam jecxz dec adc or stos daa add fs xchg inc sub pop out movl popl add dec add test xlat sub push outsb or xor cld xchg and sub push ljmp imul mov xchg int3 cmpsl imul sbb daa cmpsb call push lock inc add jb insb or mov jae and in or cwtl cwtl aam dec mov cmp dec clc sti lods enter std ud1 dec adc fnsave js pop mov xor adc sbb push mov dec fistl les and bound loopne js adc add mov sbb inc sbb mov clc and adc insl imul fldcw dec test sub iret popf mov xchg int3 adc movsb add pop mov bswap xchg dec rorb int3 cltd jne add mov mov cmp arpl jo jge ret sub push out add cmp out inc add (bad) jno sbb les outsb mov add jge xor mov inc orb cmp movb inc add pusha sub add hlt cltd mov ljmp movsl popa fs add and icebp push mov call mov xchg push les (bad) (bad) dec jae cmp arpl add loope mov jb inc add adcl mov fadd dec jae pop int3 fadds add inc pop pusha push stos push lcall pop push and dec sub popf adc mov movsl xchg sub push les jmp adcb orb push and pop mov sbb sahf movsb rcr mov inc push or loop pop sbb and and cli shlb inc xor (bad) add pusha add or scas add cmp out pop jae dec inc popa add xor or movsl add xchg pop popa mov inc pop rcll movsl pop mov fsubr add or aam mov test or inc xchg pop mov add jmp xor dec mov jnp pop sub push and lods add fdivl push les ds jle test ljmp mov clc mov mov pop sarl pop jae push int3 mov fsubrl lock nop adc les push test pop and jmp adc outsb inc pop xchg push sub fs leave fdivl xor xor lds nop int3 pusha cs and lods jbe je fs popa pop pop add push mov jno cld mov add fnstsw roll xor jg ja nop cmp mov cmp mov jp test xchg js jmp (bad) and xor add and dec inc test jl and sub test popa mov push or rcll add int3 push orl sub sbb inc jmp andb test push add sub jg or gs fldt je add pop push lcall inc jae mov lods test dec imul mov fdivr data16 les sub or or (bad) jns (bad) icebp xchg jmp xor aad outsl xor (bad) mov inc adc xor leave je cmc fs add je lcall (bad) cmp int3 test lods arpl jno pop mov and and mov mov mov xchg push add jmp insb ss aad mov mov add nop add or mov cwtl mov or shrb int3 sub (bad) f2xm1 xor adc rolb mov xor lcall add je outsl inc or cmc jle add leave xchg jmp sub popa add rolb rol pop in inc add nop pusha in inc test cli jle xor inc (bad) rcrb mov inc push mov dec or loop mov jo sbb js lret inc daa jne lret mov mov cmpsl pop push pop mov (bad) inc movsb xor adc lret mov cmc push xor mov cmp inc xor jg or fistl jae mov (bad) incl lds enter xor in xor pop ret inc or popa or imul jo sub and and shlb and in inc arpl hlt inc push pusha fdivrl mov xchg test aas mov jecxz insb or jbe pusha cwtl xor jg nop and or mov loopne adc test inc xor xchg lret push int3 mov fwait sahf dec sub popf pop ds pop pushf or mov outsb cs and aam mov cmc imul mov das inc inc push pop push dec ja jmp es fwait test insb adc inc sbbb sbb sub dec sbb call cld lds add in xchg shrb in rol hlt xor sub enter push mov sbb cmc mov xchg add add adc xchg push or sub mov cli enter xor jp mov jne xor jge (bad) sarb mov rolb inc and xchg dec cwtl sbbl std loop dec pop mov jl fyl2x sbb insb pop and mov dec pop rcrl mov out popa inc jo repnz pushf or test jecxz push rclb xsha1 lods add rcrb sbb inc cwtl imul jl adc out and stos popa int3 cmp pop xor out mov lret cmp dec mov dec outsb hlt fiaddl pop add imul test mov jmp cmpsb and data16 push lret add xchg in mov bound and and or stos mov xchg mov pop jns xor mov inc cmp push negb addb (bad) adc sub sarl movsb nop mov mov lods subb mov cwtl nop push xor les jecxz jne mov insl dec pop arpl jg cmp sub add xor mov in adc fbstp mov les aad daa int3 cmp xchg add icebp inc (bad) lock (bad) jno out and dec fcoml add lods xor andl jle xchg mov xor int sbb inc xor jle imul and inc fsubrl jo inc (bad) dec inc inc sbb lcall xchg sub sub xor hlt pop sub lods ret movsl call or dec push (bad) sahf jae fidivrl xchg aam and scas insb out add push sbb adc pusha add or scas fldl push cmpb in mulb mov (bad) add jne cmp lcall xchg mov mov arpl sub xor add push or mov pop xlat daa and iret mov mov pushf xorb mov (bad) (bad) xor sbb cmpb test and lcall and mov clc out xor xor mov cltd jg sub mov mov add fsubrl mov mov in jns pop or xor in sbb adc test or mov push sub sub add (bad) enter cmc push icebp mov adc int3 add aad pop rolb int and loopne es inc adc and clc mov dec and or iret loope in insl insb adc jmp add movsb cs lock or cmp pop xor test add les jb (bad) sub mov test lret and daa add mov dec mov add test dec rolb xchg dec (bad) fisubl clc (bad) int3 rcr add es mov mov inc xchg test and nop and mov adcl adc push jo out sub push jbe adc mov sub adc cmp push xor xchg dec xchg xor inc aad sbbb lret jns xchg and sub ret das xchg imul ficom add sbb jmp outsb stos mov (bad) cld outsb movsb imul je and add das aas movsl mov in adc nop adc inc add mov add jns das js adc xor push adc sbbl (bad) fwait and les mov test int ret pop jns inc jg pop dec add xchg roll push and mov dec inc mov mov mov insb aam iret mov dec cwtl cs xchg adc push inc rcll dec movq add insl or fistpl rclb in xchg int jae dec mov dec icebp dec mov in je ja sub arpl data16 pop jmp jmp xor sbb stc xchg dec sarb add sub test mov xor adc fnstenv bound adc xchg add mov adc jno xchg mov repnz shll adc popf (bad) dec test inc push inc add insb sbbb pop lret cltd sub pop test loopne inc sbbl mov adc test or data16 mov or scas out std push loopne in push pop and push js mov push (bad) les xor xchg inc push in rorb sub xor add add dec lock imul sbb dec xor xchg lcall stos add sbb mov sbb cmpsb aam aad dec gs xchg jne (bad) mov adc pop mov inc cmpb in mov bound mov sbb hlt add addr16 dec jo jl lock jmp xchg int cltd or inc cmpb or jp sub sub rolb arpl push mov mov test pushf xchg cmc add orl movsl push jnp pop add out testb stos push adc add lods push std gs or cmpl or push out aam adc dec out mov adc and xor push js pop mov dec movsb call sti cmp (bad) out push add inc adc sbb jns adc xchg mov sub (bad) xlat mov sub cwtl jne mov xchg xchg stc xor jecxz pusha orb jl leave lcall lea dec add fwait lret xor mov inc mov and mov push or and outsb jbe orl jnp popa push fmuls inc fldenv inc sbb add cwtl into add push call test jp inc mov mov push gs lea clc in add inc and lret add pop xchg call adc and inc dec movsb add lret mov js add nop lea js fdivl cmp cmp xchg hlt arpl cmp ss lcall rcll in cmp dec popf push push fwait nop int3 mov xchg xchg imul push (bad) popa adcb dec nop cmp sub or xchg orb imul sub cmpb pop adc or nop dec test insb (bad) sub pop adc fdivs movsb dec popf and (bad) fcomps or pop sbb cmp aaa jno sbb adc les jo pop enter jl (bad) cltd adc dec jnp sbb aam call imul add lahf add (bad) fidivrl test mov repnz push lods cmp inc orl mov push lea jne push jae pop dec rorb cmp and push mov out adc fdivrs insb pop and je aam pop dec mov in jge fmuls xchg lea cmp in sbb xor add nop xor gs push add jo mov lea add sub add inc jns in (bad) add add sub adc xor cmp sbb test xchg push jnp pushf add (bad) push mov xor adcl lahf add jl ficom xor dec adc jge or mov aaa jae int sbb popa gs das mov cmp sbb add repnz jne pop inc cmp push xor fwait (bad) lahf (bad) mov or test push aad mov and dec insl loopne cmp add movsb ret xchg fistpl mov test enter dec lock (bad) push inc std in sub cmp cmp push add jae cmpsl int not jp fiadd mov pop push movsl call sub clc jno cmc add mov loopne and mov lea push sub test pusha mov add test pop clc xlat jno jnp insl inc xor sub ret (bad) dec push in in in dec popa into add cld scas loope pusha data16 int3 outsl cmc jle stc pop push jmp addr16 std cld bound fs sbb divl mov dec out mov int xor or mov lret int3 adc lock jno subl sub js mov stc dec int3 fldl movsb pop mov std xchg xchg aam add fwait cwtl outsb sbb or fs xor jo cltd sbb cmp lock push in jbe xor mov sbbl sub out mov jae es mov rcrb int or fnstcw dec arpl adc sbb cmp outsl push addb xchg lods rolb sub leave xorb fimull pop xchg int3 nop test pop jl inc mov or push mov sub sbb pop out imul data16 test data16 and or push jb or mov push lods xchg or cmc jl adc add or add xchg cmp dec jbe ds add lods xchg sub test jl add cmp add cli enter push clc jo (bad) bound test in arpl loope movl lods repnz mov dec pop sti mov and imul push add mov adc xor cli and gs shll push mov mov sbb add xchg arpl out mov repnz arpl stos mov add jne add in movsb jno bound push or outsb jg jle imul addl add test outsl lcall clc sub mov mov lahf cli push mov int mov shrl test push or sub xchg pop inc cmp dec add dec add mov mov sub xor pusha xchg dec inc cli stc sbb scas iret push clc fwait add xchg jl (bad) sti jmp ds pop mov sub add push or mov ret loope mov popa test aaa stc insb stos out sbbb pushf add sbb mov dec cmp int3 inc add jp pop mov xchg imul mov test insb or or cmp push xor mov sbb out lcall inc sub test or pop adc daa lock js loopne push je insb into adc dec fstpl cvtps2pd xchg fcomp ss mov xchg adc fsubs cmp cmp je (bad) lods cmc sbb (bad) fsts repnz jmp mov ljmp in in or decb dec shlb jbe test push xor cmp sub cli frstor lret std add dec imul push int push push popf lret int3 mov mov dec add inc daa popf mov mov cmp in mov dec fild mov cmp (bad) dec imul pop (bad) mov mov cld sub adc (bad) mov jl js jmp jo sbb dec lahf nop movsl pop mov push pusha adc jle jb popf adc andl adc fiadd lahf and xchg js loopne rclb xor jnp enter cmpsl xchg popf sbb or test xor xor mov pop inc mov rcl dec xor sbb scas mov imul jo adc orb and pop test xchg fdivl inc add in push leave inc test sub adc call lea mov pusha fldenv cmp ja lret add dec push jae and fcompl dec mov sbb sarb push xor repnz lret fucomp inc xchg add xchg fadds or lcall test fstps cmp add int3 js leave loop jno pop mov and sbb mov ss mov jb xchg fs sbb mov push cmpsl je jl jl push add lea ss jge mov nop add mov movsb add sub ffree rolb cmp add faddp test inc jo cmovs fadds nop fidivl sbb add loopne mov aaa cmp mov sarl add stos mov push xor movsb ss mov add fldcw push rorb loope inc add mov mov push dec fist adc sbb imul iret add das mov pusha dec scas ljmp mov and sub push clc xor or ljmp fnstcw arpl std dec movsl dec adc mov inc adc inc mov sbbb dec repz add push push loopne lret das inc movsb test jb lock rorb test cwtl in cmpsb cld inc pop cmpsl lea ret fcompl inc not nop lret in nop xchg cmp bound repnz shr jbe pusha (bad) jnp arpl ret je jbe mov in ret or mov inc mov push mov fisttpl (bad) dec arpl and cmp mov test or mov jle inc scas add push push jo cli pop jge cmpsb das testl stc or pusha aaa cmp (bad) fcomps out jle idiv je xor adc test enter mov cmp xchg ds inc or and xchg add and push mov data16 mov nop (bad) sbb std inc nop xchg mov pop mov pop mov xchg and mov adc xor pop xor (bad) imul popa cmpb add mov inc mov addb push jno enter into lock in mov fsubr xlat loope sub pop or ljmp cwtl int add scas inc mov fpatan and aam lock movsl inc mov in mov js mov push ror les pop mov rorb cmpb mov cmp insb not es decl add or add inc and sub flds or fsubl push (bad) jb and fidivl leave mov stc mov mov mov test adc popa mov into cmp addr16 cmp jmp cmp inc jl (bad) jo loop sbb fmuls rcrb jge push push cwtl mov daa pushf movsb xchg and adc sub arpl sbb fcomps jmp lahf push ds or mov dec es xchg fisttp sub mov movsb add adc mov pop adc fxtract fmul js mov lds out inc xor pop add push rolb dec sahf pop gs call and jnp,pn cmp fwait cmp sub mov sbb fcoms push popa and sbb (bad) push xor sbb out add mov inc lods nop dec mov xor dec cmp cld jle mov sbb and nop or xor mov push cmp inc outsb aaa jle adc push insb jns and roll les pusha pusha lock test pop call dec clc sbb and cmp lods sahf les mov jge mov sbb mov (bad) mov and ss (bad) xor orb cmp pop js xchg dec and sbb ret mov test les repz mov jns mov pushf mov movsl sarb in (bad) mov xor clc (bad) pusha add add stos loopne stc (bad) and (bad) cmp lods (bad) jo cmpsl add xor lock dec pop negl icebp test inc xor jecxz (bad) inc add lds stc xor pusha sarb xchg loop repnz dec cmp imul add jle mov mov add addr16 je jge or mov nop je dec inc adc sarb clc fisubl inc xorl mov mov or addb aad xchg pop je sub dec cmpsb mov lahf add in pop clc fadds jmp pop fcomps nop sbb or or adc inc xor sub add je cmp pop cmp xor xor shll dec or dec add (bad) arpl cmp adc aaa lahf inc cmpsb jns xchg cmc adc inc loopne lock push pop pop cmp dec dec add pop dec jns adc and sbb cmp or sub stos push test cld sub cmpsb andb sub ss add lock les adc push or jo pop jl rcll xor movsl rcr adc stos pop js jo les jle fmuls inc pop call je mov xchg push mov ds ficoml (bad) frstor out mov fwait lcall mov arpl cwtl push jmp add in cmp pop sbb nop subl add imul sub add ret mov add xor out icebp push pushf cmp xchg lds inc add mov in xor pop fnstsw enter mov inc pusha fdivs jns add pop inc pop mov out mov xor add add or add mov cmp push fcoml inc and cmp mov mov xor sub fild cmpsb adc mov in or je pop mov cmpsl pop mov cwtl lahf pusha les (bad) xor or push or cmp or fadds and cmp js clc loopne cltd pop dec mov das stos andb jmp fdivl jnp test jns cmp add test mov test add lods out mov test test in dec mov adc fsubrs adc push inc aam mov icebp or add ss adc add inc into mov jp ljmp rol sub xchg mov add push mov inc mov push sbb cmp (bad) scas rorb add dec mov add dec popf rcr mov test add sub mov out nop cmpsb add fnstenv pop cwtl (bad) sti pop daa movsb inc push lock mov pop call xchg xor cli inc lock lock repnz mov into jns lods push cmp add sbb dec test adc push push insb lock mov push mov int test aaa and pop pusha sub add pop nop mov xlat lret mov rcrb inc dec rcrb xor cmp pop pop cli ret mov mov jb add inc or in sbb dec mov add in mov mov inc add arpl xchg sarb test subb sub mov out rcrl call add xor aad ds pop add in jge add push xchg sbb fdivrs jl nop sbb aad pop and lahf jo fs lahf mov cmpsl or in sbb cs insb xchg and cwtl int3 sub sbb (bad) fs inc addl xor daa rcl push push dec push repz mov push push lret xchg clc hlt ds or fdiv push in xor or outsl nop lock pop add push pminub inc pusha inc popf xlat cltd push rcr mov add int sub fild push mov push jmp or dec sub movsb outsl xchg test test aam sub lret enter or fcom and inc insb inc fiaddl add std imul inc xchg inc and pop jp pop xor dec push mov and sub xor test vunpcklps (bad) pop jmp sub and cmp or xchg dec nop fmul dec in imul dec (bad) int or stc cmp insb add jp fs int3 cli jb sub call pop fwait aam adc cmp mov and faddl (bad) lock inc rorl fsts mov push sub js cmpsl fcompl int ret subb lock dec pop jl rorb loop (bad) xor push dec dec sbb cld xor or popa faddl int repnz (bad) ss xor inc pop or pop fldl (bad) jo mov (bad) mov adc in push sbb xchg psubusb ds add ret je into test sub pop adc aam cmpsl push leave push js inc test pusha dec mov in rorl xor push mov es adcb add lret bound js push and into add mov pop cmp loopne hlt cmp lcall roll aad stc pushf movsb roll and inc cwtl or or je push pop fdivr add ds (bad) mov roll fwait iret mov fild xor add dec dec and mov out push call pop test mov (bad) negl pop add or ds dec sub add lods clc jmp lock les js (bad) mov inc dec es adc xchg xchg pop inc jmp daa rolb mov mov cmpsl adc lcall jnp pop cld pop cltd rolb imul stos out and xchg add loopne out add adc add lret fwait movsb (bad) mov test pop mov cwtl fsubrs cmp mov mov (bad) out add ja and xchg cmp pop divb push add fstpl cld pop mov shll nop shrb jae or lods adc pop je ret and inc cmpsb clc push xor rolb fisub dec jecxz xor stos outsl fcompl clc add xchg add pusha inc aad push push std lock cwtl lock repnz pop mov jne dec add or and inc and add lock add sub sbb xchg sub push adc repnz push add mov cld mov lock rcl lods lcall mov fsubrl pusha out add js lcall idivb jns (bad) rorb lods mov pop call movsl pop add sub pop add push cmp fimul pop popl test pop add popa sbb ds pushf lock add movsb repz cwtl leave pusha out lds inc adc dec movsl icebp les sub in mov pushf xor aad pop lds shrl jb push scas inc cmp pop ret loope sub and dec jne inc dec int js pop ret pop xchg mov add and push mov add add rorb insb xchg adc je dec cli push jo or mov repnz cwtl inc dec addr16 or cld push daa pavgb and sub fcmovb add add pop cwtl movsb pop cmp adc or leave pusha jae jg jns and movsl mov pushf enter sub call sbb add pop sbb jo adc pushf mov xchg and test adc adc or loopne dec sbb lcall push mov sbb movsl inc jl dec mov add mov mov and in add insl call mov jl or fisubl fistpl mov dec mov push outsl pop and jb push adc adc hlt adc les cmp arpl mov ds fnclex push pop in stos ja,pt xor sub in sbb mov xor jmp or mov mov mov and sbb mov icebp leave xor loopne (bad) clc aam jecxz,pt push jne cmc fisub popf mov call xor hlt jmp jmp cmp jbe sti add mov dec add adc sahf nop cmp fstl adc nopl repz rolb add imul lds dec sbb je sbb push pop cmp test imul sbb add hlt mov incl push sub clc add pop call and (bad) push mov pop jge jo aaa cmp imull mov jo ret push sub lds push clc push xchg dec sbb add in repz push adc les mov add daa mov jp sub nop sbb push pop pusha out and jnp dec adc (bad) dec mov dec les jp sub add add add rorl push ficoml add sub les sti or ds adc nop rcrl scas dec lcall mov stos cmpsl cmp pop mov xor fildll dec jl add lret inc mov lea movl rolb add inc insl adc test dec add in mov xor loopne dec and push jl scas imul xchg pushf add jne popa push rclb cmp add sub (bad) repnz mov mov jp pop andb pop push mov jl sbb into loopne xlat fild cmp (bad) mov scas xor xchg push xchg pop add daa repz pop shr or dec sub outsl push lods lcall lds pop mov pop pop xchg sub sbb inc xchg pop push dec fildll or int3 ss pop add push gs rclb push gs ds or loopne fcompl ret lock adc add cmp adc ret mov aaa push lds or orl add jmp and es mov xchg aam mov xlat (bad) mov push or adc call mov lret mov lcall es orb pop add aas push pop (bad) or cltd pop test sub out xor cmpsl enter push loopne adc jno scas mov rorb out mov and notl aam jo push cli push sub inc pop test sbb jae push or and add xor or inc mov clc xor jae jns jp jecxz mov enter ret or xchg mov xchg jecxz add mov jnp adc sbb xor cld push in sbb repz pushf jp adc outsl (bad) clc mov push mov orl pop movl nop or inc popf xor rcll ja or mov push das mov mov or add or push or (bad) iret andnps pop fadds jae test rorb adc or or cwtl aad dec sbb adc dec lock das sbb jp add movsl repnz sbb push sub dec test test mov nop clc or repz cs int3 adc dec inc repz nop add fildl sarb pop call inc rolb xor push add xor xor ja push repz sub mov or pusha pusha mov xchg add loopne or xor or movsb rclb out add add cmp int3 dec or mov pop mov out or mov sbb jnp leave xlat das cwtl cld idivb push xchg or dec dec inc sbb aas add loopne loopne push jle jl cmp repz mov and sub adc sbb or in mov jg fdivs mov add fdivrl daa cmpb rcr pop mov add cmpsb pop scas cmpsl dec pop es pop and dec faddl add lcall aam pop ds mov mov or or mov and arpl xor movsb repnz jl repz pxor jo dec or mov mov add scas mov adc nop push fstpl pop (bad) repnz sbb xor push pop imulb imul sub fs pop sbb add inc xchg jo dec lds lods (bad) in jp ljmp sbb mov jge rolb scas popa pop loop or push rolb inc dec cmpl add mov add test out xor rolb sbb faddl mov add out cmp lcall sbb dec insl add sbb add nop sbb mov pop add test fs cmpsl mov dec pop mov pusha adc pop mov mov sub sub pop add dec loopne or repz daa add pop sub add xor cli and ljmp sbb or imul scas popf jmp cmp dec jae fwait enter jb cld xchg sub sbb mov add xchg int cli rcr jge add adc jnp nop fs pushf enter dec push lret pusha sbb jne add rolb sti xor call fs xchg sub and repnz loop pusha or pusha sub cmpsb pop sub sbb clc mov int3 push push out lock enterw mov call inc cmp dec xchg in sub fcoml pop enter mov pushf sbb pop (bad) enter xchg scas into rorb add (bad) xor add jp cmpb out int3 pusha mov mov cld ljmp cmp jnp mov push adc push scas mov mov (bad) jae or in push xchg fs cmpsb sub orb push xchg pop mov jecxz mov dec push cli mov sub lahf mov repz pop loope add cld mov daa sub jns adc pop push rorb push dec cmp dec mov pusha out les mov sbb dec add sbb mov imul mov or pop imul sub test pop jp cmp sbb inc ret inc pushf xchg call movsb and pop cmp pop sbb loopne pop lcall cmpsl mov pop mov push xchg and ljmp enter test inc insl cmp scas sub js fs loopne nop inc add jge mov imul andl leave jge sub cmp enter es and lcall mov lea loop pop or rol ficomp push rcrb and lret push fs testl push orb cs push or mov pop push xchg push lods inc dec xor call dec repnz popf push je js pop les add in inc faddl pop int3 xor hlt fdivrs pushf add mov ss push out cmp or pop gs inc test sarb or lods in dec cmp cwtl add pop add inc add mov jno fcompl ljmp movsl sub aas (bad) lahf jl mov cmp add mov sti mov movsl inc jg movsb std inc add loopne xor mov push or sbb ja pop cmp or nop xchg sbb scas inc ds jno mov push inc or rcrb mov and loopne mov imull dec je cmp mov adc enter insl pop mov dec ficoml or cmp iret sub or sub rorb or lea out and adc xchg jl xchg or adc cmp stos xchg mov fisubrl ret into or adc call in fisttpl sbb fs dec push add test xchg or inc push rolb mov dec cwtl rclb ja xchg nop ret adc sub pop loope sbb sbb cltd into cmp insl push mov lods sub mov push or (bad) pop subl fildll clc xor flds orl dec inc cwtl push sub add cmp rorb adc lods test mov add jl enter push pop sbb cwtl insl test mov (bad) mov cli addr16 inc lock test out xor push pusha jne fisubl xchg inc add mov or xchg hlt outsl mov wrmsr in lret jb fstpl sub add int3 push cmp pop cwtl xor call loop adc push mov dec dec and inc xchg jo xorb xchg mov repnz vpaddd mov cmp add aam das lods jmp cli jbe pop je rclb add jge xor stos dec mov sub mov lahf cmpsl subb lods mov cmp hlt cmp cmp jle,pt push mov insl mov xchg pop icebp ret jl cmp pusha dec aas adc outsb popf jb or insl mov add int mov inc lods mov mov adc xchg hlt scas pushf and mov or or cmp test loopne xor cmpsb in inc dec cmp jge sar xchg imul add mov xor push clc sub add data16 loopne pushf out cmp in or sub add xor mov fidivl push fsubrs loope mov dec fnstcw cmpsl mov cli push jl jns outsb mov loopne sub (bad) jbe xor fild jo push dec lea and mov and jbe das pop mov pusha pop (bad) jb jae pop in and cwtl pop sbb fcoml iret cmpsb pop orb jle push and pusha xor adc fwait jno inc fwait and pop sbb data16 mov loope push xor or movsl pop sub or or sbb inc or adc int or addr16 xchg test in jmp pop popa fsubrs call rcrb pusha iret jle dec sbb cwtl sbb inc xchg les into bound mov push mov jp lock cmp (bad) mov out scas sub cmp add dec clc aaa ret jbe pop aam push push xchg or xor sbb test sbb jo pop add sub xor scas pop add adc dec out dec rol jo ret inc cli lds and add enter jae rcrb push (bad) cmp mov les add pop je js je add push or and mov pop cli mov push add sahf std or push mov pop mov lods nop sbb movsb jg out (bad) xor ret and les je fildll rclb mov pop mov adc push (bad) or mov xlat ret adc iret push dec xor push push jecxz pusha into sub inc add pop pop outsl enter stos jg sbb and inc sub or sbb mov rclb adc xor lods mov pop dec sbbb dec icebp out push jbe fsubrs xor or mov jl repz (bad) iret inc pushf mov inc xchg dec adc pop decb add (bad) shlb adc add lahf std sbb mov adc mov cmp out xor popa inc insl xor mov int incl outsb neg cmp addr16 mov or jmp call push pop (bad) dec sub and fldt ljmp add cmp mov add popf add add add icebp in out push xor inc or imul push add sub mov push and adc aad or add out mov cmp xor jg jns add inc push roll shrb jo fs push or in xchg jb (bad) je dec test test sbb xchg add jl mov dec xchg pop xchg dec out add push stos lods lcall xor (bad) cmp sbb dec les sbb add adc int mov negb repnz cs clc inc dec mov jno lods add mov mov ljmp add test test fadds adc and dec cmpb sub std cmpsl dec cmp xchg pop rolb cs mov add mov dec ds jl sbb mov aad mov mov xor les clc aaa jmp inc (bad) dec xor sub pop xor loop or xchg cmc add (bad) xor mov shll leave test cmp pop inc mov sbb and lahf gs dec add je mov adc cmpsl add inc arpl dec inc insb sbb add stos subb adc clc out sbb rcll add mov stos xor dec or inc icebp mov sub clc pop pop add imul mov inc add icebp sbbl pusha pop xor jmp jae mov mov ss xchg inc and mov fldcw lds test adcb push or xor loopne fmulp pusha xlat test andl movsb (bad) lock fs and mov adc pushf push add add mov movsb sbb mov xchg test add and add push add inc adc mov or hlt jnp push loopne test lods and rcrb loopne pushf inc shl jno add and xchg cmp rolb je pop pop add rcll jns pop inc dec fwait inc push sub clc jnp or dec push and inc mov sub push mov inc jg fidivrl ds cmp inc inc push pop xor push push jg sbb ficomp clc mov insl stos xor cmp movsl xchg add popa bound inc mov jl xchg push cmp fnstcw nop in and xchg cmp adc jns addl lret xor or xor sub subl push mov inc test xor xchg and mov adc rclb adc hlt add mov call int3 es mov pop xor out or jmp mov pop jge mov mov cmp fcoms and (bad) ljmp mov mov jp and cmp pop jl subl adc add inc xor leave push es and dec inc pop ret mov enter repz xor lock in sbb setno test (bad) pop adc mov inc mov mov jno pop ss int3 fnstcw shr outsl sbb gs push es lds mov pusha push test flds jge add iret ret sbb cli sub lcall inc sbb or mov sub mov cld and jg sbb xor pop adc frstor adc cmp dec enter nop add fs pop dec push push scas dec or lods add insl cmpsb mov icebp (bad) pop inc rolb jg add dec mov pusha mov add add mov jo cmp cmp sahf push movsb and sarb push mov and lods jg cmp or add pop loop out stos lock add shl sbb pop sbb add and cmp adc cmp xlat mov icebp ffree inc sub cs xchg xor lahf sbb clc mov xchg popa imul ret aaa in clc add je ret dec inc dec pushf and xchg cmp icebp or (bad) cmp lods add pop stos rolb pop dec leave gs fs push (bad) and (bad) jno and push aam xchg lock inc push jg mov push jecxz cmpl xor sub icebp jne add out xor jae les std aaa lods pop adc aam lods xchg pop std (bad) aas mov xor loop xchg dec hlt popa lods push icebp addr16 cmc sbb cs add sar outsb fs mov les adc sbb and les aas jmp add xchg xor int3 into nop adc dec adcl cwtl xor cs or xchg xchg jle lcall push adc add add sub dec jg inc add dec xchg cmp cld push je adc aaa sbb (bad) or lds cs add pusha sub mov mov insb mov pop and cmp nop dec inc xchg pushf es mov orl fiaddl xor dec pop xchg add push je jae add lock mov adc flds dec fsubl dec push jno (bad) mov dec mov jge sarb sbbl sbb mov inc add xor mov scas xor cli cmc fwait pushf addb dec mov jo inc jae xor roll xor imul jl xor mov sub xchg or push out dec xchg cs xorl mov fwait and leave out add popa jmp pop push add mov stos sbb and test pop cs lea out jns dec ja mov loopne sti jbe add xchg dec (bad) in push cmpsb adc cmp (bad) mov lods das loopne cmp add and shll cli aas cwtl enter mov add mov and push fildl cmc mov sbb in mov sub les lock nop loopne (bad) movsb test ret test pop xor and mov inc xor repz pusha aam pop and jae outsl mov gs mov flds bound add adc push les popf pushf (bad) and les xlat cmpsb push icebp test loope jge sbb test outsb popa add out movsb cmp imul push aam repz into aad mov or dec adc jl add inc dec xchg inc and add subb push mov sti aaa fist xor sbb imul test inc cmp int test mov hlt push (bad) hlt xchg cmp cmc inc sub mov and sub es outsb rolb sarb fsubs and inc loopne jl jp add jbe inc add test lret jne pusha xor aam inc popa ja push cmpsl sbb mov into or sub sub pop dec add xchg jg mov aaa pushf fcoms sub pop icebp (bad) mov cwtl xchg pop sbb rcrl add mov mov add popa dec and sub rolb arpl cmp fstenv add jbe rclb test and lock adc pop add (bad) and fwait or inc rorb in loopne insl push pop add int3 arpl andl add mov add jo add js mov test mov fcoms dec hlt push add mov cs repz mov scas mov sbbb lods add subl cmc flds dec push ja lock loope add mov inc mov sub lock in paddw jmp nop inc int3 push sbb bound cmp add adc cltd pop lods cld xchg lahf gs sahf push shrb pop inc jo cmpsl sub mov xor out mov push test es adc popa jno inc or das cli sar fwait push mov arpl pop jne and push add ret dec mov mov loop loope add fsubl cld mov cmpsl or nop in orb jge xchg mov cmp sbb cld jg mov clc jecxz lea ss add in movsb sbb fsub dec jle,pt mov inc or icebp pop enter int3 and mov adc test daa push enter aas or push aam add pop dec sub adc out faddl pop mov aaa jbe sbb mov add adc out sub push add scas pop dec sub pushf push arpl call fwait sbb and dec (bad) mov add rorl push aaa lods xchg in mov mov addr16 in fldcw pop jno daa mov in je dec add stc pusha add pusha insb (bad) adc fisubr sbb mov divl add pop in loope lods adc test xorb jnp fnstenv out cmpsl stos cmpsb dec push xchg push mov (bad) out loop add loope leave sbb pop xor or dec lahf es loop add mov pusha mov icebp hlt mov stc sar pop fmuls dec nop (bad) add (bad) gs pop aas sbb aam xchg fcoml pop mov loopne imul and jmp std sub push (bad) pusha inc cmp addr16 (bad) mov popa mov nop xor daa add and jl loope stos mov mov fcomip outsb ficom into and xchg loope int3 movsb movsb sbb xor or xor movsb insl add loopne jge cmp add in in mov or xor rorl ret call fcompl lods or je add dec sbb fmuls pop lds cmp iret stos loopne sub or rcrl xchg lock movsl and (bad) mov or dec xor cmpsl dec or ljmp mov cld pop xor mov mov lods sub subb (bad) jg cmp (bad) in into xor (bad) ja add dec sbb leave inc in or xor or outsl mov add adc orb xor cmp push jge roll sub aam rolb inc jl clc add (bad) imul and add mov ror jnp cltd cld jns adc test mov cld sub xor fdivs mov jae pop movsl sbb push test sub mov push aad mov push mov flds xchg inc mov adc xor pop adc push lods ljmp (bad) mov mov pop stos js lock cmp movsl (bad) je testl jno jo (bad) xchg cmc xchg nop dec mov jbe cmp test cmp xor push mov add je sbb adc int3 lcall lods dec add cmove fwait sarl add mov and data16 xor mov daa sub sbb push (bad) repnz mov ret inc lods and lods dec or pop inc or jae mov std lods hlt mov mov and inc mov jle mov push cmp rcll ljmp outsl add icebp in xchg push inc sbb mov dec aam popa push push (bad) mov adc adc add sbb lcall loopne ljmp xor (bad) outsb push xor mov xor dec ss pop mov mov cld rcl pop movsb adc into cwtl pop add enter mov (bad) cmpsl mov xchg dec ret hlt (bad) adc mov add xchg cmp cmp loopne or and adc jl inc dec jnp inc add rorl or lods or addb sbb inc pop into pop js cmp add int into fstpt or xor sti xor or inc xchg xor inc push ret rclb imul add lock inc bound out test jns cltd dec push mov lahf pushf popf add sbb jecxz jno test mov xchg loopne,pt mov adc and adc test frstor movsb clc aad xchg push xor ss ret pop clc pop inc les xor mov mov loopne (bad) rorl and pop jl mov fistpll and jnp jl (bad) lock jb mov push xchg adc inc pop mov je sub (bad) xor mov add dec rorl push push inc sarb pop mov clc inc or adc xor inc and add outsl dec fnop std das (bad) or shrb insl sarb in inc xorb cmp inc mov movsl aam inc test cltd insb sub add dec lods mov pop fbstp imul cmpl sub dec jns (bad) enter cwtl dec add xchg loopne in call fdivrl ljmp sbb xorl ret mov sub adc and mov inc mov lret leave push mov popl inc adc cmc (bad) je sub test bound pop cmp or mov add (bad) xor sti sbb pop or pusha cmp rcll jge ficomp or cld movsb add sti pop push les mov and cwtl adc shrl cld push mov aam clc xor jl in repz in ds add es dec push cmp mov in sbb pop enter pop lret cltd sub sub sub test sbb push or adc rclb push jns test nop je pop out in ds adcb dec mov aam adc jo je cltd xor in push out lock xor (bad) xor js mov cmp stos hlt loop sub mov dec cwtl rorb fistpll loopne sub test lock lods add xor sub dec and aaa fdivrl sbb cmp lahf clts jo in sub add out mov push lret dec sbb movq dec addb adc xchg mov add shll lds pop cs push adc push add aas mov popf inc shll push rorl add mov mov lods inc cmc or push (bad) pusha ret js icebp xchg mov js cs pop cmc mov pop or cmp push movsl js ds ja push in pop sub cwtl sbb ljmp add test incl lret leave xchg add and pop add xchg cmpsb rcrl mov pop adc cmp xchg je loop xor mov daa sub push sbb sub pop addl jo cs inc cmp xor ljmp nop aam and lods pop arpl inc mov test jns cs push adc fwait insl inc dec inc jns mov adc fidivrl (bad) adcl and in inc xor or mov adc adc and lret add xor jle push adc ret add daa cltd in xchg test es push mov jns popa and loopne add and sbb loop (bad) add mov add dec adc cs push nop or sbb adc inc xor insl jecxz xchg ja pop push lods jne mov mov fimul call call movsb das pop rorw mov setp add pop inc enter adc xchg mov inc and and ret popa mov mov push xchg pusha cltd pop mull adc add adc aad pop dec xor xchg sbb jb and dec call je test addl in mov addb clc sub pop je push outsb arpl sub xor insb shl dec push mov test int3 dec sbb push sbb std test sub xchg mov mov adc sub dec outsb nop inc sub insb dec scas dec push pushf les mov jmp push je xor in mov and jo dec cli jl add sbb and add inc push hlt xor mov push pop movsb lock xor ljmp add jbe leave sti sub and pop push xorb popa roll add jo js cwtl jecxz and xor shrb or insl adc call ja xor in and dec inc cmpsl mov subb ja test inc add ret add xchg dec add ds fnstenv inc add aaa pop cwtl stos or push mov shll in (bad) mov and fnop cwtl jns in bound loopne add push adc xchg (bad) cmc lret dec call notl and hlt popf jns and pavgusb inc xchg pop mov or rorl sbbb push rcrl xchg jns add mov sub cmp xchg mov pop sbb inc (bad) mov lods das add enter mov cmp mov stos push popf pop bound fisub dec xchg push mov dec or jb inc sub and cmp add dec xor xor xor and ficoml sbb mov add push notl les jo es and push dec cmp sub daa dec outsb jo fcoms ja xor (bad) jl xchg cmp jbe mov nop push adc lcall or sbb pop mov adc fidivrl popa sbb and pop push inc xor cltd adc pop sbb add sub pop push ja adc xor lcallw test enter pop pop xchg call jg fwait xchg add andps stc lcall fs rolb mov mov cmc cmpb scas jp test add add push jo or pop stc es insb ret rorl xchg mov aam push pusha and js mov mov jbe mov hlt stc into mov add inc jb xchg xor ja nop dec jb loopne and pop cmpsl mov lods push shrl in test (bad) fiadd and xchg sub pop cwtl adc and testb aad roll lahf andb icebp push imul lea dec fisttpll test rolb sub xor rolb test or add mov jbe xchg jmp add dec xor ret mov cli data16 aam addr16 das add jo sub add dec mov out push lahf test pop jno mov inc ljmp popf arpl cmp fcompl mov jo xor pop mov lock sbb jmp clc hlt popl cmp arpl xor xchg mov mov shll and jns push add hlt stos outsb ljmp push cmp sub push or jge xor add jae add add lcall xor mov movsb jae je or sub addl arpl sbb jb pop jo (bad) or push mov ss cwtl lcall lock cmpsb (bad) push pop and jae clc in xor pushf movsb sub pusha push out add inc repnz mov icebp xor leave sub pusha pop add lds mov fisttp cmp add jb jle mov cmp push pop pop add add cmp and cli mov cld add std inc xor jns insl popf mov and rolb lea mov add (bad) cmp (bad) cmpsl mov arpl xor pop sar sbb mov mov aaa adc sub movl aam dec shrl push test rcll add pop xchg push push xor stos jg jo sbb rcll jle sbb cmc push mov shll sbb adcl pop xchg push loopne shrb and or inc inc push xchg adc cmp cmp xor mov pushl add out arpl addr16 les push inc push or cmp fisttpll addl cld (bad) aad mov fldt cmpsb push add mov sub cmp adc push cmp mov dec adc jns mov pop popa inc push add icebp and (bad) xor pop in cmp and sbb mov or and pop pop clc fidivrl das inc (bad) fcompl (bad) adc jno,pn clc repnz in arpl dec nop test mov cmp sbbb mov or pop (bad) pop imul cli leave dec cwtl inc subb sar mov and lcall insb fwait addl push xor mov scas sbb orb lods or jb or arpl cmp rolb es ret cmp scas lahf inc pushf add jne fisub push inc add pop and cmp xor pop pop adc pop repz jp js adc add xchg pop sub insl pop sbb lea data16 test add mov pop cmpsl (bad) fadds addb rorb sbb lock fwait xchg or stos jne mov les sbb add sbb (bad) jb adc (bad) mov cmp hlt in repz dec mov mov dec ret loopne mov les cmp repz cmp inc mov xor adc (bad) (bad) lock and add xchg push stos add mov inc call dec mov cltd inc push or dec (bad) repz dec add and add cli sbb xor fidivrl mov jl xor xchg lcall in mov in xor hlt pushf push lock (bad) mov sbb (bad) jne pusha jg sub lcall add dec stos mov push mov mov fsubs in add icebp sbb nop mov add in dec or adc sbb add ja scas dec add insl movsb loopne sarb sub adc xchg mov sbb mov ss into addr16 sbb iret bound fildl or and jg push cltd cmp adc push adcb or fistpl push cmp hlt jecxz jo in add ret movsb stc addr16 cli push in pushf push adc mov addr16 push cmc and xor sbb (bad) fldenv add clc or jne aam jae xchg sbb out ret mov and and aas clc push push jae sbb inc or subl les mov jae inc mov pop inc clc enter sbb and sub inc ror mov adc in jae bswap lods dec dec rolb push mov xchg xor dec aas call or jo xchg aaa jb sub repnz fadd mov xor push jl ds dec pop dec cmovb mov mov fwait pusha cmp mov or loop xchg push lahf xor rclb lcall add fcomp aad mov mov jb call jnp and add (bad) xor lds sub add arpl pushf (bad) jecxz cwtl add pop and lahf add or lret sub mov add xchg xchg pop stc jp cmp decb ds dec adc add cmp xchg dec fsubrl push mov out cs pop inc stc adc imul mov add mov in pop xchg shlb dec mov and dec adc out add call arpl dec xor jne cli sub movb andb insb sbb xchg and stos sub hlt (bad) mov mov push mov xchg add xor bound add or test cmp add ret outsl cltd jp xchg xchg pop lock je dec dec sbb or stos sub push inc add cwtl (bad) pop pop mov mov stos stc aam test je out cmp ss dec shll add ret xor cs (bad) enter mov mov xchg mov inc and jae (bad) test sbb cmovp fs (bad) inc sub lcall imul jecxz dec and sub mov push add cwtl xchg pop movsl mov lods mov xor xor std rolb sub hlt adc or add and arpl add push daa fs jno fstpt mov pop adc dec add (bad) push push pop mov xor mov arpl out stc out sub in sub push inc sbb out mov stos mov aaa or push xor fadds jno rcrb cmp cmp lods pusha insl push pop and adc sbbb push add inc aad out dec xor cmp stos jg leave roll ret repnz nop rolb cmpsl rcrb sub sti int3 addr16 jae jns add and popa imul stos push adc std pop inc add addb mov xor int adc jae pusha cwtl dec lret jp lret or add cwtl xor mov (bad) ds int3 add icebp enter imul fadd sbb dec call or xchg cwtl inc orb inc sbb sub or in xor arpl lds call lret cmp roll mov (bad) testl es inc clc adc stos arpl pusha aam pop sahf add lahf test in dec cmpsb pushf dec rclb add push roll test inc (bad) movsb and and mov js push jno sbb int3 push je fistpl jl dec sbb or faddp xchg pusha dec jl orb mov pusha push js fist (bad) dec inc aaa fistpl mov sub int3 inc testb add inc into dec jne mov ljmp dec je or roll (bad) push jp shll dec or fucom xchg inc add dec push adc xchg jp int mov cmpsb movl sub mov fdivp xchg (bad) in and rep call inc repnz dec mov mov or sub ret les add dec ja pop cmp add int3 jmp jmp or nop mov add insb test sub dec cmpb addb sub notl xlat imul add ret mov lahf pop inc sbb mov jge pop or jmp mov or int xchg jns push jns mov sub push mov mov bound jmp lock add icebp fs sub mov pop xor and lahf loope test jb xchg sbb (bad) adc add dec nop repnz jp mov lock popa sub mov cmp insl popa adc lret mulb popf (bad) jp dec sbb dec ret aam dec loopne push in xor jg mov test mov pop dec js jb inc adc mov lds aad cmp mov rcll loope push aam mov jbe test xchg mov and cwtl mov loope xchg dec mov (bad) xor pop mov insb mov addb into xor jo call add movsb adc sub xor sub fs sbb sbb jne sub dec fidivl dec add test inc test add pop mov dec sbb lea xchg es sub lahf cli int3 les mov loopne sub test xchg dec test daa int3 cmp mov xchg add inc ljmp movsb add lcall sub pop cwtl jmp loope jp jge mov push pushf ljmp arpl adc xchg loopne mov jb std xchg xor and lret (bad) ret int adc mov stos pushf nop dec inc cs inc lock mov ljmp sub and rcll add pusha adc xlat mov add mov jae mov les leave add clc xchg add in inc shr mov call pop xchg mov or sbb cmp jp (bad) mov movsl mov adc mov push arpl add pop dec rolb in jb lcall add jne leave or inc les add jmp xor mov mov adc int3 adc in test mov sbb add inc mov adc popf mov adc movsb outsl mov test add and loopne into sbb in mov adc jno mov cmpsb jmp enter cmpb test (bad) ljmp dec dec adc fcmovbe mov aaa mov (bad) cmpsb mov int (bad) adc pusha mov or jg inc add aaa adc jo test lock nop (bad) lea push iret (bad) dec adc adc mov jp xchg or dec add or scas (bad) add add out push pop push push pop mov jmp pop insb inc mov (bad) fsubl pop rolb adc add popa mov icebp js inc cmpsb fisubl push movsb in and jb in jge sub inc jp outsl faddl mov xchg or mov and test loope sbb ds pop push insb xchg sub loope cld (bad) xsaves push fdivs pop fcoml arpl mov jns push inc movsb push pusha add and ret dec xor lods stos push pusha roll clc inc sahf inc xchg cmpsb lcall dec pop mov jge jp cmp aam std jnp ret hlt push mov add divb jmp (bad) rol cmpsb dec add call mov jae and sahf add rorb fsubrs mov xchg adc adc testb pop imul jle movsl inc adc mov sub or inc imull out jns,pt imul lcall (bad) and sbb jl pop push jp pop aas xchg lcall (bad) aam xor and xor jmp sub mov cmp int3 xlat mov out cmpb inc adc xchg xor mov or mov mov mov xor or enter lret loop mov mov add js call cmp xchg add dec jno lods sbb pop popa dec (bad) repz popf adc pextrw mov cmp sub pop pop xchg in scas inc push dec nop repnz lcall pop jl jle insb test rolb rcrl inc nop pusha add rcrb shl xchg cltd add dec int3 ret sbb lds out add sti jg fdivs add sub mov (bad) fcoms enter test or mov push cwtl dec mov dec jb bound pushf add inc inc lock push int3 fwait repnz pop sbb pop je aam dec mov or test cmp gs sbb inc cwtl lods sbb and enter pop push sub in or dec push xor shll xor lds or add push in add and pop cs (bad) sub andb cwtl mov sub or dec mov or sbb nop sub lea out (bad) negl xchg stos add dec in and movl add cmp outsl sahf pusha push ss loope pusha (bad) popf stc lods mov lcall jb mov cltd rolb pusha loop inc test mov xor or sbb xchg shll mov push sbb adc xchg lret or jnp lods xchg lret or add jecxz add mov jne adc adc push loop jle enter jmp pop add jnp stos adc (bad) je xor inc push add stc addl dec xchg cs push or sbb ss add sub jmp inc push imul pop fst jmp stos shr mov lods insb movsb adc mov push add jp call cmp jo xor inc mov inc enter (bad) mov and orl xor mov push addb lret mov rorb ret iret int3 dec in jl insb fcoms adc imul add cmpsl dec popf pop (bad) in or jg xchg and xor pusha pop fs sbb pusha sub sbb push pusha cwtl stos mov loopne dec push dec (bad) jb or pop pop add xrelease push nop sub add mov imull addl mov pop test ss fs and aaa cwtl inc in aas (bad) add fsubl lret jp and sbb add pusha mov sub ss add jno shl in xchg sub out loopne pushf mov cs js lcall xor push call or cmpsl mov inc faddp fdivl sub insb add (bad) leave fdivs add jbe fsubrs add push xor movsb or xlat js xor pop add sub iret mov loope (bad) xchg cld dec jmp lea (bad) xor loopne lds sub and add pop add loopne rolb sti inc fsubl sbbl mov mov pop push cli in adc inc sbb dec jne mov popf out orb aam sbb dec addl or push rcll leave (bad) jo dec push or mov test ss push loop pusha test stos jnp adc subl rcll xchg dec arpl call inc enter add xchg nop mov jae dec mov rorl mov push inc sub adc je sbb int xor pop add sub enter ss test sub pop add or cmc in pop in movsl cmp int loopne mov pop mov aam mov jecxz adc gs sbbl mov xor push mov icebp pop fwait sub pop imul ljmp cli out cmp popa dec addb stos clc sbb and fildll pop ljmp and push js push push or xor out mov jae dec xor push add sbb out adc add fwait mov add add popa es out mov push and in lods out mov orb jne and lods in inc repz dec mov push pusha mov pushf pop sub (bad) (bad) or sar popf movsl loopne les cmp out lds in mov jl int3 daa out pop mov adc mov and cmp jne test test loop loopne inc (bad) jo inc add xor add icebp push jns mov hlt add xchg ss test inc inc jg jne adc rcl xlat call mov dec add mov (bad) push or jo pushl sbb inc test clc rcrb mov lea xchg inc loopne cmp adc mov (bad) (bad) cmp into es inc outsl shll xchg inc loope fwait test insl pop ret cmpsb or inc loop pop push xchg leave add mov mov lret mov and out or sbb aam ret pop or add add mov cmp jo cmpsl xchg dec inc pusha cwtl dec mov in dec add pop sti sub adc mov hlt sbb out mov push xchg je push inc jl and andb aad mov in push jo aas lock loopne xchg in (bad) repz xor sbb inc (bad) pushf je mov sti loopne test mov nop pop aam sbb jo and ss push leave shll push mov dec mov jne sbb xor outsb adc xchg leave add and xchg test sarl stos mov lods xchg dec xchg adc stos fadd mov mov xchg inc push leave enter je cmpsb lret lock fisttpl jmp and popl and dec add stos mov jb leave push shl sti inc cmp pusha je xchg cmp pushf adc fdivr mov xchg xor into jo xchg sub sub sbb jb sbbb dec jl sahf pop jns xchg call sub or sub push pop cwtl fwait mov push sub test test movb in push cmp and nop sub stc call mov push dec jge repnz add xchg cmpl xor jle sbb mov pusha mov push add pushf andps fs push or jmp and pop mov in repnz ja test hlt inc add and mov adc and bound in xchg add adc mov into (bad) lock int3 xor pop push and and mov mov aaa xchg lock jmp test stc add xor in dec aad sbb inc iret xor mov pop fiadd xlat (bad) jbe pop xchg sub and inc sub lea sub push add mov das into les roll cmpsl into add dec adc inc add pop ret mov push enter in add add inc ljmp mov add xchg in movsl mov inc aad shrb pop add xor shll mov ss xlat push aam sub lods mov mov add push fs ret andl add mov clc inc imul call xor add in jecxz lock enter add xor mov add push add xchg insl xchg xchg shr int3 cwtl dec add cmp test call cmpsl add jmp test and (bad) push lods fmuls xchg sub sub dec sbb pusha sub test sbbb or ret dec jbe add je push push mov sub cmp rcrb or xchg mov dec cltd xchg jl adc mov add xchg sub std int3 mov rolb call mov sub stos adc pop imul rcr push cmp test dec mov inc add xlat cmp pusha test or icebp mov lahf add ret fwait sbb push adc add push mov call or jb dec out shlb or scas mov sub (bad) ljmp and subb xor adc mov mov push or enter aaa adc sbb jns (bad) loop cwtl mov xchg jl mov repz mov xchg in pop xchg data16 and xchg mov or mov cmpb inc testb push add dec dec sysret pop cli jmp mov dec sub cwtl shrb xchg repnz int jmp mov ja andb (bad) divb and addr16 and pop fldl cmp push push or add mov xchg mov cltd xchg adc and mov push or ja inc (bad) (bad) add mov adc jns mov (bad) adc sub sbb push idivl stc cmp mov sub or xchg pop loopne sub sbb dec imul mov daa int sbb adc jecxz mov pop sub xorb add test jne dec loopne int push xchg add inc push push jo (bad) mov fdiv mov jle clc pop push push fidivl hlt add jo inc cmp nop xchg addl ds mov into lret cltd xchg dec aam dec jae cmp cmp pushf daa icebp mov xor sub dec mul pop cwtl cwtl add sbb fnsave add inc scas sbb sbb adc dec ds or dec xchg pop jo bound dec jnp add call ss movsb pop imul pop pop test std das and lds adc dec mov aaa bound cmp stos call lret push and or dec es testb aaa ret pushf adc int3 lret push lret jg aam and jns and aad push or out fildll sarb dec aad rcrb or cwtl insb pcmpeqd inc xor xchg sbb push mov add (bad) enter or jmp add push sbb sub add clc dec sbb movl cmp xor ret rcr mov js mov add mov cmc mov loop adc ss int out mov mulb movsb mov adc pop pop bound mov orl cmp jne push dec nop nop sbb adc test sub push ds mov fimull mov ljmp mov pusha sti sbb inc cmp cwtl cmp arpl cld add mov adc fwait cwtl es lock pop test icebp mov and fdivs xchg loopne dec push and and or inc nop ljmp and push xor pop pushf fs mov cs fwait mov divl je cltd dec and sbb pushf sahf pusha or js jbe cmp rcrl and add xor enter add into (bad) jmp mov sbb dec daa inc pop xchg int shr fs in inc or (bad) call test insl mov mov sbb inc push sbb jmp std cmp or push adc dec mov sbb cmp push inc add inc xor out adc dec or xor xor repnz leave stos rorb lock shlb mov mov mov inc mov and or or xor push mov mov pushf inc jmp fs les aam adcl mov inc fdivrs and push mov pop (bad) sub jae arpl add pop (bad) nop lds clc xor xor and pop push insl mov cmp and inc es orb movl dec subl adc shrl enter add aad js pushf xor pop popa add pop dec enter adc push xor popf mov icebp cmc push fld push cmp dec pop enter test dec mov dec lea cwtl and mov mov mov add pushf inc mov xchg ret out or inc hlt in sub push sub or sbb nop adc lcall movsb jl pusha movsb pusha loopne mov add jmp jl push jge subb cmc lock adc (bad) enter push xor loop mov cltd xchg cmp inc mov adc xchg enter imull test scas rolb (bad) adc rolb mov mov mov push (bad) cmpsb or test mov nop popf sbb rcrb mov xor (bad) mov clc data16 add loope lock jge mov or pop inc ret pop sbb jo inc sbbl inc js inc mov mov (bad) jb (bad) mov stos add call inc mov inc add rclb and imul add test push and das rcll jmp test mov jo add inc mov imull icebp add int3 (bad) call rcrb inc mov dec and or sub dec dec jl insl pusha or add cmp test (bad) cli fs pop lock and mov (bad) icebp or cmp xchg inc (bad) or mov ss fs fsubs out leave jo movl js push test xor sub roll cmp popa adc stos cmp add pop mov add inc stos sbb cs gs aam mov push and xor loopne or int add (bad) sub or pop dec mov add xchg iret in rorb mov ss xor sub movsl and fsubl mov jo nop pop popl inc dec lea das lret add int pop and lret mov (bad) lock fsubp add pop aaa jo faddl adc cmc mov cmp mov or dec push movsb imul push or mov (bad) jo and or pop sub cltd mov cmp xlat or mov in sbb pop pusha push mov or and jle sub sbb cli cmp pop add sub sahf aam mov pop pop xchg test sbb inc addl rclb sub js cmp movsl or lock (bad) jmp jno daa loop xchg adc mov mov add cltd test cmpsl adc sti pop pop adc shlb jbe insl mov imul pop (bad) icebp addr16 fisttpll (bad) cld or stos sbb lods add fwait sub mov movb lds mov mov inc mov lea incb call dec or push jg push clc imul jecxz dec inc push mov xor sub mov sahf cmp addb push or adc or xlat push sbb mov and insb push es popa push lea inc sbb and js stos adc sbb and (bad) ret mov or orb cmp stos inc add jbe outsl pop arpl mov lea ja imul out pop and dec add outsl (bad) decl call cmp addl ss fld or les (bad) test in roll sub or adc ljmp mov js int3 and orb xor push add push dec insl out pop push bound sub adc and pop shrb cltd or add jns sbb les nop jb dec mov mov call cmp rclb push or shl sub mov hlt cld daa mov pop test sbb or loopne add mov inc sub add mov xor popa aaa add sub out cmp cmp xchg inc push adc add in push orb in and mov cmp cmc or fwait aam xor jne jmp in fadd cwtl nop nop push mov push xor xchg insb and loopne daa push push jecxz in sub or add (bad) sub cmpsb test adc add sbb fstpl and add inc mov inc jo sub jo popf (bad) lret mov es aad xchg add test mov popf (bad) shlb cld sbb ljmp in nop cltd adc sbb cmp push jne add jl xor arpl cmc xor cli pop add idiv or dec call inc cmpsl add or add xchg cld cmp add leave fisubl daa (bad) out push fwait lods add insl aad les jmp mov ja sahf in cwtl mov mov lcall mov xchg and add jbe jmp sbb das ret jno dec loope loop add fild sub jo push call mov decl and and add mov add rcll popa cmp mov sbb or inc (bad) sub mov ficompl adc test (bad) (bad) sbb xchg pop inc nop xor or mov (bad) rsm mov fwait cmp cwtl mov jg out fistpll or nop lcall mov lret adc daa xor mov and push sahf loope xchg jmp aaa mov mov or clc lret and or dec fdivl jp xor and iret lods mov daa inc sbb icebp or xor lock add push cmp add xor out inc or cli fucom jo adc push subb call add mov or dec cmpsb adc (bad) lret mov stos fildl add xlat arpl add pop aad mov mov (bad) fs ss int3 mov cli add mov mov pop (bad) sti mov sbb loopne rcll mov mov cmc dec sbb cmp js pop stos pop std add xor or add mov pop das add jbe inc ror aas inc mov lock fnstcw or insl mov mov sub movb and loopne mov adc mov inc add push push push add test xchg mov inc add movsl dec clc xchg sti cmp aam rcrb sbb sbb movsb andb fld enter pusha push mov repnz add mov fildl icebp pop push xor testb leave push cwtl add clc cli (bad) loopne nop pop mov cmpsb add in mov mov psubq xchg and outsb mov jb add sub sub sub add inc inc aam adcl add inc inc pusha inc cltd mov cmpsb sahf arpl scas pop add dec or and sbb fs sbb (bad) (bad) push cs inc sbb sub lods xor lock insb jno fiadd imul mov add int mov in sbb xchg and and in mov and pop inc or in sbb sarb hlt pushf mov jb inc sbb push subl (bad) sbb nop mov pop mov inc sub mov mov add add adc xor ret cmp fistpl and je dec xchg clc cmp inc push jecxz xlat fdivs cmp aaa and stc dec dec call fnop adc mov lods xchg sti sub add sahf or (bad) mov mov mov bt divl push push mov dec iret xchg dec mov push imul shl push xchg scas add mov jnp xor das mov es mov cltd jb cmp popl lock jp scas push andb cs pop sub add imul into or dec loop inc xor mov xchg inc push movsb pusha les (bad) mov mov jb pusha adc stos jmp xchg add jp cwtl es push inc cmp pusha std fs add pop in in (bad) or inc scas ds fadd jmp sbb pushf sbb aam or sbb or and es insb out dec push push lea mov shl test push sbb add ror xor mov orl pop mov mov popf movsb sbb jg (bad) adc mov shlb cmp repnz push xor push idivb pop iret sarb inc sub out pusha dec adc or std mov mov out nop and scas les fstpt nop lods nop inc in imul test adc loop adc stos out fistpl add mov and lods cmp dec sub scas cwtl push sub push sbb lock ss jge cs xor dec fs push cmp jmp data16 sbb and ljmp pop mov sub lahf lods or cmpsl cmpsb or pop xor adc add iret cwtl push xor inc mov out mov sbb and and jne cli aam stc xchg and andb cmp cmp pop add es add push jg dec test cmp mov (bad) stos cmp adc sub jno cwtl je daa pop xchg mov imul sub push pop std int add sbb push add adc inc pop call enter dec jmp aam mov pop fidivrl icebp cwtl and dec add pop int3 ss or les mov jbe add dec sub js nop xor mov add pushf cmp adc je mov rcrl enter popa inc sarb pop insl adc xor pop and nop or rcrb mov nop je mov sahf jb inc out cmp dec test (bad) stos xor incl icebp sbb add (bad) lret fstpl gs dec or subl mov cld pop jmp lock or rorb lahf inc cltd jo ffreep push jecxz cld arpl mov xchg xchg dec dec or in repnz ret cmp subl lahf repnz add hlt movsb add inc push mov nop loopne push jb mov test dec xchg test jle aaa ds pusha (bad) sbb cmp lea push xchg adc movsb pop fmuls mov cmp or xor incb lea ljmp or add nop and shll repnz add clc orl xlat idivb xchg mov mov or and insl aas xor es push leave mov icebp icebp shrb std xchg test ret int and insb call pop movsb sub add ficomp add movsb lret cli inc add aas xchg add repnz cmp inc dec (bad) daa push (bad) lock fwait (bad) jge and test loop (bad) ss jae sbb in pop jb cmpsl (bad) mov int3 dec imul add bound dec and push in cli xchg inc and and push pusha cs adc xor mov (bad) aam dec and sub rol inc dec jns add (bad) aaa cmp mov inc push test mov add pusha adc mov mov lods xchg sbb hlt and je xchg fprem1 cmp jbe addl add lret sbb lcall and inc add cmp das lcall (bad) js add pusha in (bad) mov add mov loopne add out push jecxz cmp mov add or pop dec aad stc xor mov push add out clc or xor mov xor and xor push iret movsl idivl jle push xchg adc xchg call rcrb cmp inc sarl sbb test push sub jmp dec cmp pop roll mov xchg push sub imul out push mov xor inc xchg add (bad) roll cltd inc aaa add pop add xchg das add inc xchg hlt mov scas push mov int3 xchg pop xchg nop add test jp sbb lods repnz stos and mov adc mov popa or in mov xorb xchg push or fisubrl lea cmp push out data16 popf xor rcrl push cvtdq2ps iret cmp call push mov fmulp cs xor lods sbb or pop or ror adc or scas xchg fdivrs lods mov aad rcrl xlat adc pop das adc and iret push or fstpt inc lret test xchg xchg xchg mov and dec enter add subl sub lea push loopne sbb add xor je add adc and pop pop push test mul mov in daa iret mov push enter shrb dec sbb shlb add cld cmp jp xor mov add faddp (bad) mov and pop pusha xchg dec call xor jmp inc sahf jb xor sbb mov out push fildll sbb dec call or jae stos inc adc imul and loope sub aad or push int add push nop sbb out mov mov add or push sub inc fsubl and dec add rcrb loopne hlt and push adc push fwait pop insb cmp into mov inc sub es test jge jbe fwait ret test inc push add jecxz adc jge test adc std fnop inc add xor add aam push cmpsl into test xchg add adc adc sbb cmp mov das push inc movsb les sub bound cwtl adc xchg xchg test js jae aad adc xchg inc nop xlat cmp pop inc and cltd out (bad) int3 and and push cmpsl pop fnstsw jb push pusha push fwait das cmpsb shlb push adc dec aam pusha xchg fmul ja pop dec imulb jl sahf pushf inc add add dec sub mov adc jns stc (bad) cmp in test or xchg insl mov add cmp daa cwtl rorl cmp inc adc nop or ljmp adc xchg rclb add mov push xchg (bad) push cmp dec aaa add in adcb adc sbb ret test dec lods push sub cmp push add jmp adc aaa out ss add mov das insl test and sub push lds cld jae jg daa xchg xor aam (bad) cmp imul add mov imul outsb add push les insb jg aaa and cmc and les loopne (bad) decl push and cs add inc push mov jne lds xor fnsave jno jl xor ljmp mov fadds and xchg pop hlt or lds fdivs outsb sub mov sub mov inc mov pushf pop es mov mov xor dec jo sbb dec cmpsb cltd lods xor xchg and andb fildl into add jp push mov adc int3 js mov test mov jae arpl fmul cmp inc test pop shll xchg fmuls lea dec pusha sbb inc xchg jne add mov sti cmp add inc adc adc mov mov sbb lret xchg adc pop sahf mov pushf or sbb aad jo and cmp mov add std cli iret (bad) les adc fsubrl mulb jmp shl mov outsl aas popf popf or jecxz movsb pop xor outsl sti inc in add cmp nop xor nop aam add fdivs es pushf pop mov push test (bad) mov nop bound mov inc ficomp ja add mov add push shrb nop push cmp add (bad) int3 mov and push pusha daa or xor inc add add inc and inc aam adc or js pop jnp cmp pop dec addl inc adc sarl or lret popf pop push pop add ret cli dec addl cltd or xor or mov iret pop xchg sbb sti data16 mov in jns pop shr pop push out movsb pop rclb dec enter aam lock cmp and out xor mov push pop call arpl jo sub lock xchg jne mov (bad) (bad) hlt bound push push in fisub stos fwait xchg imul and iret and loop add pusha ret enter shrl inc adcb stos outsb dec cs imul out clc or add xchg fs jo insl stos sbb push js inc pusha xor les rcl jecxz mov inc lcall daa popf repz test pop sub pop xchg push xchg nop add dec popw stos test sub fistl mov xchg clc inc (bad) enter xor or push int3 fs xchg jo ficom movsb mov cs inc push dec add (bad) int3 push sub or fwait inc clc xor push xor cmp int3 enter adc scas mov test shrb xor pop sub nop (bad) jb je push js in sbb ljmp adc jecxz inc adc mov outsl mov dec inc jnp adc push inc nop imull jo cmp or dec sub push add mov or ja leave push stc (bad) sbb mov mov jg cld arpl ret mov rorb add pop lods xor add xchg hlt mov mov and cmp mov mov test pusha adc int3 sbb adc das xorl out push imul in add pusha (bad) out add sbb add pop lret scas xchg and test std cmp das cltd je fwait int xor xchg lea sub or xchg mov or pop insl push push das movsb leave cwtl lods inc popf xchg mov insl add ljmp cmp sub js sbb aam fs mov out pop add out jne push into andl dec in cmp incb mov movsb (bad) dec in or pop pop push pop adc mov call rclb (bad) mov mov fmull ljmp mov dec daa in int3 sub movsl data16 loop dec dec inc mov inc dec fsubrs xor cmp mov and mov rcrb mov xor push mov add mov add pop inc or lea fldenv orb xchg loop dec out xor sub sub add in or sbbb fldt lret gs xor fidiv sub dec pop add push popf icebp sub mov mov dec lcall xchg add loope out lods mov push jle rclb xor mov and add sbb jg and xchg mov sub cmp adc jns sub jb into xor stos insl pushf js add (bad) xor sbb add loopne and push lock mov xlat or fldl dec insb add xchg daa clc add sub leave nop bound rcrl fcompl push test cwtl adc add cmp js in nop (bad) push jecxz sub lahf add enter mov cmpsb jnp fildll or mov push sar dec sub inc divl xchg inc insb lahf aas lods push and pop pushf nop or cmpsb push mov mov add nop or cld dec add sbb enter enter (bad) pop sub jae pusha mov xor outsl jb lods push push push ss daa pop jg dec in js cmp sub ror and aaa pop push js mov ret dec aas sbb or cmp les cltd xchg in mov mov test mov movl xlat jge (bad) xor mov and add mov enter push nop mov movb divb mov add mov sti shrl shll lret jns add movsl pop jbe ja add inc (bad) cmc add dec mov inc je dec xchg dec sahf int3 sbb jb add hlt xchg bound pop push dec xchg nop adc and cmp dec mov fcomps pop ss nop ja add xchg pop or mov xor clc add pop xchg imul in es rcl cmp push subl sti cmp loop and push mov jno dec pop add call add mov or lret test lods int3 icebp pushf les xchg daa out mov enter mov mov pop push or fs adc cltd or or xor push repnz adc cmp das sub cld (bad) jle sbb pushf iret ret test sarl fistpll pop add xor pop movsb imul (bad) pop mov xlat adc (bad) or es adc iret inc ror js nop es int and sbb or mov decb mov imul cmp adc (bad) mov xor xor push adc pop and and cwtl sar sbb fadds mov ljmp add push add shrl or or enter inc and push movsl inc add sbb (bad) faddl jb add xor add and daa mov cmp test test add mov shll xlat pusha mov or xchg in stc xchg movsb stos and (bad) cmp int3 (bad) sub add mov adc repnz mov cmp mov cmp sbb and add cwtl push cmp lcall test add fadd sbb sub ss lods es xchg mov cltd xchg add andb sub adc mov ja inc faddl or es sub inc mov pop outsl shrb into add scas lods adc leave sarl xor xchg sub ret cmp cmp add es sub mov lret mov mov (bad) lret xchg mov jle pop adc lock or or movsb dec jno inc or daa test dec or dec pop int add loopne sbb shrb stc in dec add push push inc nop cmp cli dec arpl pusha je mov ret inc ja xor or mov sub inc rcr out add mov mov outsl insb leave sub push cwtl jle verw mov call je xor add mov mov (bad) in mov jae xor add cmp sbb inc rolb pop ficom jecxz mov lret mov cwtl push adc rcrl mov lret xor or fadds scas inc mov (bad) or je pop sub xor aaa or sbb cmp (bad) ds xor ss movb inc enter mov test mov aaa js jae stos dec push push out fiadd sub pop add cmova (bad) push pop sbb inc addr16 and adc nop insb test and outsl aad movsb pusha outsb xor cmpsb xor add sub aam test xchg dec stos movsl leave repnz scas iret jp out or mov push (bad) es mov lock xchg add sub xor pushf ljmp popf jo mov mov add mov mov jne dec add push sbb ljmp out push dec sub jae add (bad) icebp pop add imul pop and pusha push or add pop inc test xchg lret cmp sub les xor adc inc orb scas or out flds pop rolb shlb add mov and mov mov arpl pop outsb xchg inc daa dec aaa or add ficom sbbb and lock and add (bad) jno mov xchg add sub es fadds sub shlb int3 add lcall cs fcoml cltd clc loopne or or pusha pop popw les lahf xchg pop into inc adc insl out push inc push (bad) push repnz loopne push sub xchg sbb mov daa fcomp xchg push add rol pop mov push add xor hlt push cmc push and and mov and lock jae push jle pop adc add or mov add fcmovne xchg test loopne int3 stos int3 js lret and test and jb dec rclb sub jl pop fidiv arpl add and adc lods and imul and cs ret add mov lds pop pop in xlat mov gs pop add es loopne add xchg cmp jge jo les mov add in jg cmp test fcoms pop cmp xor or movsl fsubrs test xor lret in jne rorl pop mov xchg call fnstenv out mov sub loopne inc adc je ret call leave adc push adc nop pop inc lock jl add enter jmp inc pop jo test je xchg call les jns mov and add pusha loope push adc lret pop cld fdivs or stos sub or and dec and stos mov xchg xor mov es paddusb ret jo and dec or leave xchg xchg push jb adc (bad) imul add mov add mov sub lods pusha or xor jecxz mov rcll js mov jmp (bad) in pop dec and int3 or in roll or or test push pop xor add or es mov pop jo add xor leave push cld add cmp push sbb push sub add and add xchg xchg cmp push adc test cmp pusha addb js add dec inc in iret jo push add (bad) lcall arpl inc scas add leave loope enter add xchg cld mov add roll add or mov xchg rolb sub pop mov sub xchg mov ret mov andb dec clc inc cmp inc add repz push sbbl pusha mov test (bad) sub into shll xchg add push (bad) adc and loope add add daa lret push rclb fdivrs cmp and pop sbb mov push xor mov lea addl jge rcl das js je xchg pop or out pop sbb shrb inc incb and aam or push pop xor inc enter xchg js js add jnp sub inc mov dec sbb aas sub mov cwtl mov mov gs mov push or call add sti cmpsl hlt or arpl or test outsl stc in pop sub lret pushf cltd mov xchg test sbb jmp pop pop cmp cmp loopne js push lock push adc inc pusha jae inc sbb dec xor sbb rcr test dec fs hlt xchg gs and and insb sarb popa xor push idivb mov je fs add mov jge lahf fistl sub xchg push xor push xchg (bad) dec fisubr xchg or and inc aam enter adc fsub daa dec nop subb sahf sbb xchg pusha sub mov add add cld aad xor push loope inc and lcall out mov sub adc or dec inc enter mov xor fwait js sub push jle pop fimull xor negl hlt sbb dec call push sub add dec (bad) inc xor (bad) push lods cwtl ret or sbb dec cwtl and and std dec gs mov inc loopne mov cld frstor xchg aaa ljmp faddl cmp jae in adc or mov dec pop clc faddl inc scas adc movsl out and and add repnz jge add sbbl mov and adc (bad) fldl adc mov xor outsl pop push or sarb arpl addb hlt or sbb imul lret mov mov push or rolb inc mov or mov xchg sub stos scas sbb pop mov jl push in add outsl fsts cwtl pop rorb xor and pop inc aam inc add sahf (bad) leave nop popf pusha enter loope inc push pop inc inc mov add pop fsubrs in xor add hlt pop in xchg add fisubl cwtl xor inc rcrl jmp add mov inc xor dec adc pop outsl and dec and lds andb mov dec inc and cmp fisubl and dec cwtl jl test jns xor scas test andl push dec push aam or add rorb or mov mov mov fsubs fs sbb mov mov cwtl add inc cwtl movsb dec dec in push jle (bad) les mov jg pusha (bad) xor gs fidivrl cltd jnp jl fdivr push push out xor popf inc inc adc shr cwtl stc jb (bad) cmp xchg addl add and pop push mov lret and and jne inc js arpl loopne xor jp mov inc aas lock sbb add pop outsl int jl test xor sbb xor (bad) (bad) xor call cmp mov lcall push push (bad) jg xchg xor mov test hlt xor dec repz jbe and add clc and dec or and mov sub (bad) or lock xor xor add and repz and ret push xor lods sub loopne jp mov jle pop add inc inc pop mov pop cmp sub pusha and add adc faddl rorl popa xchg and out fs cmp jbe sub xor fs adc das cli add mov inc std das xor aam add mov sbb add stc push sub mov sub out daa add pop sbb xchg jo outsb loop js lock add test mov es je add adc push adc push (bad) int gs sbb into xor pop hlt lds mov mov lock insb (bad) inc cmp popa mov aam inc pop mov test cmp inc inc mov int3 dec bound and mov and dec repnz js aad fimull aaa pop stos mov ret add or mov pop inc cltd fs dec pop mov adc imul pusha and xchg (bad) jl jnp push loopne fisubl jmp leave add outsl mov xor jbe aam mov xchg xchg imul mov sbb and xchg xchg sbb xchg mov shrl cmp xor and pop dec mov cmpb aam and out insb test xchg add dec test dec sub adc or jbe adcl pop dec test sub (bad) adc popa adc cmp sbb xor sbb data16 stos add xor es cmp mov inc dec push adcl push cmp or sbb inc subl movsb je mov or out lds (bad) loopne outsl xchg or mov gs ss xchg and cld xor dec addr16 push int3 stos (bad) sub je or push and test dec mov adc mov dec popa pop or xchg lea inc dec xlat fiaddl cmp add adc dec xlat int3 dec int3 and cmp decl jge shrl (bad) xor fdivrl and xchg pusha add lea gs or imul in loope dec jne lds add xchg push setnp adc roll cwtl ds ja dec cltd add test and mov fs fisubrl cmp add addr16 sbb loope xor and push out push fdivrs mov jnp mov ret add add mov jp lret popa loop push adc sahf int lods je lds add mov jae add fs cmpsl mov add cs inc jbe mov mov or enter lods add int3 xor gs and push jo repz nop mov or xor sahf movsb mov push or mov pusha lahf js jnp push dec out jb dec lods add inc jo pusha cmp bound ficoml pop add fxtract pop in fldt xlat aam popf adc mov mov xor or pop push divl fcmovnbe cmp jl dec stos or add sub jo mov adc xchg imul adc mov push js push mov push pop sbb pop cmovs jbe cmpsl (bad) lret mov in aas inc cmp add test inc je sub push outsb sub add packuswb cmpsl mov add pop mov add sub and and push adc inc mov nop lds and jo cmp or adc adc les lods loop pop add pop cmpsb xor ror xchg mov mov push std mov xchg scas (bad) repnz cmp inc aas imull popa push cld pusha in shrb lcall hlt dec shrl out sbb inc and push fwait jnp enter lcall adc dec inc add out mov add lods or push add mov pop outsb pop and push loop insb add int3 mov mov cwtl xlat pop imul jne xor cltd and gs sub cmc mov orl das or cmp lock and lock dec fcomp inc add lret and bound mov add xlat mov or or or cmc fldenv lds cld pop add mov aam mov mov rcr nop enter push inc test xchg aaa add into lcall pushf push data16 jle addr16 nop fsubs xchg sub (bad) xor or adc lods jg prefetch xchg dec sbb cmc mov pop stos adc or add loopne adc nop js dec cmp pop push loop (bad) fild shrb sbb hlt sub xchg mov rcl fcoml int3 mov fcomps xchg inc hlt hlt xchg (bad) jo inc mov (bad) cmp or xchg shll ja out xchg xor sub subl cwtl movb dec loop and and jecxz mov dec dec and inc ret pop add dec (bad) cwtl add rcll fstps sub xchg mov sbb jae mov fwait mov dec sub lock jl cmp or mov and and lods les fsubrl jb mov ds dec push mov xchg inc cwtl mov leave nop movsb inc add add add das sub gs rorb cmp nop sbbb lcall cmpsb mov push nop xchg mov or insb les lret and rclb loopne and es jbe inc mov mov pop add sub push xor jl pop insb push and cmc xor cmpsb mov mov test dec sub daa mov sub loop jge,pt add add mov adc cmpsb pop js add pop adc push sub mov sbbb dec mov mov pop sub dec pop or sbb loope addb add jg sub dec dec sar ret sbb gs add or cmp and or or add pushf lock sahf mov inc (bad) movsb int3 cmp mov dec ss mov fwait or cmp lcall lmsw or pusha cmp aaa mov pop shrl es xchg add addr16 cmpsb in mov dec pop inc les shlb dec sbbl or subb jbe add lea mov subl ljmp push sub mov and add (bad) outsl dec sbb hlt add (bad) int3 mov test xor gs ss mov leave xchg sar pusha js or and inc sbb sbb push test or out repz mov xor call jb push or adc pop shlb cmpsb push jns and xchg or and (bad) cld inc lds roll insb in xchg shrl push sub int repnz (bad) dec mov push out and mov mov es sub les test add fs push subb xor and cwtl xorb dec icebp sbb add lea or (bad) jbe mov ret xchg pop sub (bad) mov lods roll daa push inc stos sbb int3 fcmovnb subps lret xor adc mov int3 iret mov or std xor sub mov dec add pop mov push xchg ret inc xor push lahf pop dec push push pusha rclb lcall jle int3 sub push movsb das or lea je xor inc lcall dec das cmp test js dec push jl pop outsb cld xchg jle xchg dec adc les mov jbe sti cmp insl call fsub mov enter pushf in jge cmp push sub nop mov faddl imul nop or and or gs add cmpb inc cld clc mov lods inc sbb out pop add xor aaa fldt add inc insl mov nop insb dec roll test test daa xchg pusha int3 (bad) icebp call leave pop push sub stos dec and mov mov mov dec int3 lcall push jecxz fwait xor mov jl and sub cwtl lods inc inc lods add dec sbb sub enter or inc add jge js mov gs je roll enter std mov int3 cmp ficoml (bad) sbb push scas rcl int3 and add call xchg jo pop leave add outsl sub add out mov cltd fcoml mov rcrb sarb xchg sbb mov xor pop cmpsb or push adc dec sub xor arpl adc push ret add push mov xchg mov insb sub mov js dec out and clc push (bad) xchg in lds hlt mov xchg in pusha ret call iret mov pusha cmp mov shll js add add sub cli push mov insl push sbb dec aad xor sbb push inc mov jl inc cmp sub imul subb shl jle jae (bad) insb sbb pop test nop pop jbe aad jle (bad) aaa jle add inc jp adc jbe add mov je test cwtl inc sub addr16 add out int or pop fldl cmpsb out js push mov das add mov (bad) ja leave push (bad) aam inc sbb add int in mov adcb add inc data16 xchg adc cld jo sub enter dec inc repz cmpsb jmp adc push fcomps cmp add out cmp add cmpsb sbb or add lods ret fwait push (bad) mov lds enter add fiadd cwtl inc in gs in clc sub arpl (bad) jb lods (bad) faddl sbb mov push call jo and rolb in test orl adcl and cmpsb cmp (bad) aam pop mov sbbb pop pop hlt fdivl rcrl mov pop in cmp push add xchg add sub out sbb in jns jnp xor xor or sub sbb mov sub add adc mov xchg cmpsb popa cmp cmc sub mov arpl sets addr16 ja add lahf (bad) mov nop leave push orl mov sahf cwtl xchg lods mov in push lret rolb es add jns cmpsb add mov sarb inc pavgb js lods sub adcl loope add mov pusha dec or out or jns jno aaa xchg aam (bad) adc push jge and movsb mov dec ret outsl xchg add loopne movsb faddp and (bad) (bad) adc shll inc add mov (bad) mov (bad) out mov fwait call daa loop add or jns mov fcmove data16 pusha roll pushf fdiv or mov negl push or xchg add out xchg and sti ja sbb or in lcall outsl push (bad) imul pop loopne mov cli push pop repz and in add les fdivs mov lock xchg arpl mov sbb lea adcl push cmpsb enter (bad) sarl sbb sbb ret or push cld and dec cmpsb mov lds and mov pop cmp pop dec cmpsl insb cmp sub jne andb sbb (bad) fnsave shll out adc sbb sbb pop add lcall push dec xlat pop loopne dec lds out jb and and jns jmp js or dec (bad) ja push jg add rorb stos pop pop mov jb movsl adc loopne xor adc pop xor add xchg add icebp popa xchg jecxz or xor cmp and lea rep pop jbe (bad) fcoms sti fisubl out lock lret idivb add xchg push push out jnp add fsubs xor clc pop mov push outsb aam aad and or aam test in push push mov xlat and pop mov fistl push inc fdivrl and call or add xor or loopne xor sub xor ljmp mov test fldl xchg push cmp fldt movsl mov jno inc push xchg xor or cmp pusha dec movsl lods sub icebp inc fmul sbb imul andb and test leave pop mov call mov push dec push out sbb jb or mov aas (bad) sti push sbb pop lods and mov xchg rorb dec ret les mov adcb push icebp clc gs jmp lock sbb loope shr dec xor mov add dec cwtl pop mov inc lret jnp push cld sub pusha mov mov pop inc and mov cmp and jne or or pop add or adc in add mov mov mov xorb mov (bad) cmp cmp pop or mov mov mov sub repnz imul cmp add inc jae (bad) xchg jne icebp mov jb pop addr16 and sarl and (bad) hlt in dec mov or fadds mov test andl cmp jne cmp (bad) adc mull (bad) and mov adc mov push mov lret xchg cmp adc (bad) jne push sbb push pusha jp mov fsubp (bad) mov push mov pusha jae scas mov dec mull mov cld and incb add mov cmpsl push jno je push mov mov mov addl movb loop xor test orb sbb fcmovbe inc or int3 adc pop cmpsl pop xor cs xchg add fiaddl icebp adcl inc popf (bad) fsubrs iret add aam add pop inc movsb xchg test jg xor inc test add gs ds rol jmp mov ret lea dec add inc xchg fnop movb jecxz lahf rcrl dec xchg dec xor or push stos loopne jnp loop fidivr mov cmpsb cld arpl cld pusha xor popa jns mov sub cmp sub jge jp,pt cmpsl and into sbb das js push pushf dec push sbb pop (bad) out and pop or add add xchg xchg lahf push pop mov inc (bad) jl add sar (bad) jecxz (bad) es xor push jae lret daa pusha cmc and dec pusha imul push mov (bad) or jecxz xchg xor mov dec mov jbe,pn jp pop leave inc pop out mov pusha xor sbb push int3 pop fdivs ret add out nop ficom fmull and mov add std add je pop fcomps sub popa in iret nop cld adc cmpsl or inc popf xor pop sbb pusha inc insb mov cmp sbb mov push inc loop mov loopne sub int adc (bad) cmpsb ss sbb (bad) call mov clc push js pusha xchg (bad) jno jo mov (bad) inc orl add call iret add jno mulb fwait inc add jne test imul subl (bad) push adcb clc mov and daa jl stc inc movsb jle add xchg jo cmp adc out shll scas dec jmp push nop sbb cmovns add out loopne mov pop repz jge cmpsl adc xorl and mov adc adc lea (bad) mov sbb fcomps testl mov mov shll cmpb enter repnz lret pop xchg cmpsb es add inc sarl add stc xchg daa jge jnp es out outsl sbb add popa inc adc les sub or aam cmpsl jnp shll insb mov mov fsubrs icebp fwait sahf mov or cmp mov fdivrs inc out adc aam jne movsb cmc nop les and (bad) xchg (bad) jl adc inc add push adcl xchg or add jno in andb jl add (bad) fdivrs cmp dec xchg nop das mov jg dec xor stc sub es inc in adc popa fs mov and push inc add add xchg sbb add out mov daa pop cs add out adc add fidivl test sahf add sti int3 test inc scas adc jle (bad) nop fdivrl inc mov nop lds pushf dec inc or inc inc fnop mov mov mov and dec (bad) sbbl jbe cmovge fcomip dec dec adc dec mov in add sti xchg mov mov imul pop xchg loope sub iret mov stos push outsl lods xor stc or ljmp push add jns jl sub and add xchg pop mov add mov xorl adc outsb notl (bad) cwtl je test mov add (bad) repnz int3 pop (bad) push inc push mov test inc hlt mov xchg inc cmp std mov test hlt sbb mov jmp sub cld or jp pusha insb sub cs dec je pop popf aam outsb sub (bad) cwtl sub mov inc in stos test (bad) adc or inc jecxz jle gs add mov (bad) das pop lea and (bad) dec pop mov add xor adc sbb testl insb test cwtl sqrtps (bad) sbb mov add (bad) pop add ds dec or or orb xchg scas mov mov adc mov dec sbb je cmpps pop mov stc push jle adcb sub sarb adc add sarb movb rol xchg push xchg lret xor (bad) mov add mov jb push jl add mov or mov push xlat in xchg xchg inc pop mov dec subb push jne arpl jp xchg ljmp dec xchg popa adc pusha and rclb sbb out mov test mov add and sub dec (bad) mov lock test jmp dec dec xor out flds add insb fsubs and js sbb jno sahf std scas fsub jnp les add mov pushf inc sub pusha xor jb add mov cmp sbb lret and push (bad) jl jbe pop adc lds cld shrb pop lret xchg mov add sub jo (bad) in fsubrs cwtl test movsb int3 and adc xor addb in push mov std pusha or adc scas mov or in icebp and cmp roll test jo add out fdivl add ja into jns jmp sbb mov add xor out push mov imull jo and pop test add xor push push cmp in push jecxz ret test out add stc mov add outsl pop or mov add shrl pop xor and loopne jno or adc fiaddl (bad) or dec iret dec adc and or adc outsl out rorl stos mov pop add outsb ja add xchg and adc sbb sbb sub dec shr imul jns add int3 ja imul xchg xor add mov push loopne or or lea out in mov add mov out add inc dec inc push jecxz cli andnps seto adc push push out add sarb ljmp cli imul pop pop mov add cmp jns pop mov add repnz add lods pop rolb or mov mov adc mov mov (bad) dec pushf adc in inc and in pop lret mov (bad) jecxz addr16 jns inc and inc outsb mov and adc add mov js ds inc pop xchg shll jae sbb test xchg cmpl imul xchg (bad) cmp add pop imul push fdivrs adc add jo lret xchg pop fstl jmp add divb pop aas imul rclb (bad) fcomps push movsl adc pop loopne enter insl jl adc nop orb int jnp lods sbb xchg roll and repz add add mov dec xor add push jl jg add mov ret or push imul int (bad) or mov cwtl daa add roll (bad) adc testl fcmovb cmp push sub fist popf push mov repz add push inc addl adc daa lahf and sarl fistl fs add stos pop arpl out test mov out fwait cmp pusha jmp push mov jmp int3 push andl dec adc rolb lea jae pop add jg imul cmp sub mov xchg in test nop push mov mov and push or push imul cwtl mov rcrb mov or add adc dec push add ljmp js adc inc inc and les and xor pop outsb and sbb ss pusha pop clc popf add aam les enter jbe mov push add fs int3 rorb fcoml imul pop aas icebp clc insl jne fwait xchg mov cmp jecxz dec jne add push arpl push imulb mov gs push decl rolb mov jl pop jmp and pop or cli pop add mov lcall push js imul test mov loopne mov rorl sub xchg xor repz call mov push lods mov mov in pop mov xchg pop sub or lock (bad) xor sbb pusha cmp pop adc sbb cs pop fidivl ss adc xor dec mov and dec cld test fwait call cmpsb shlb push rclb lods mov adc ss push jns cwtl adc adc add (bad) lcall add cmp or icebp inc sub xchg int3 inc jne dec pop nop add xchg shl inc sub dec mov mov in into movsb mov fdivrl sub fwait (bad) or rclb lods or in rcrb pop dec or fist and (bad) mov xchg dec sbb (bad) out jp push inc push add rorb leave popa inc sub jae xor test lds add sbb movsl cmc inc enter pusha add mov fwait cwtl clc adc sbb add sbb in add int3 mov pop dec adc dec orb lcall add xor or cltd cmc add stos sub adc inc popa add fisub mov and popa dec jnp mov adc cmp lcall in test into out mov xlat call ss pop xchg mov sub shrb xor scas mov mov (bad) (bad) je jp cmp leave dec pushf pusha add dec aas add cmp inc jns adc enter mov mov fwait cmp lock add (bad) xor sbbb aam mov and es and mov cmp pusha inc fadds xchg push or pop cmp add or je adc imul push adc orl xchg ficompl mov fnop push out cmp test mov aad add or sub or sub jmp ficom loop addl test mov out push cmp pop xchg cmp sahf adc mov dec fucomi dec pop imul mov sbbb add add cld pop mov enter andl or add repnz add add adc add call cmp fidivrl jns clc xchg flds pop jg jmp and lcall pop push push mov movsb and imul mov adc aam nop int3 sub rol adc lds notb mov or adc fs cli lods aam shll pop nop inc dec in bound mov cs sbb push inc lcall bound add les dec cltd loop cmp fwait lahf sbb lret mov mov sti sbb test call outsl (bad) stc mov lcall cmp lock in enter negb add leave fdiv pusha sbb pop and push sbb jae mov call pop push xor push dec sti dec sub add dec lods ret loopne (bad) loopne add lahf scas sub movsb and out mov jecxz pusha pop dec dec mov lcall shll nop std add pop or add push call xchg js test fwait jecxz jnp sbb aam xor (bad) lods aaa repz xor add pushf out add xor inc xchg pushf mov dec imul jae xchg inc mov push ret inc (bad) in inc pop xchg sbb negb fcompl ja adc sub mov push lds add or mov cltd rcrl inc repnz mov leave or and jo out out jle adc js push andb sub jae or pop cmp add xchg shrl (bad) and (bad) jae les mov mov or sub lock in jg inc or or cmpsb xchg cld or pop movb je popf jmp lahf sbb (bad) jne cmpsl test shrb loop inc inc fimul cmp pop nop push jmp sub aam faddl push jne dec or sbb cmp inc bnd sub inc shlb mov test push rol fistp leave clc add lock lret xor add sbb or sub ss or ret nop inc jae or cld and (bad) or inc inc xchg clc lock ret sub inc lods jl add mov lret pop cs pop pop and and push mov xor xor orb inc mov dec lcall test mov sub xor mov dec cwtl dec push fnop punpcklbw mov movsb dec push mov in sahf jmp (bad) inc sbb sti loopne pop add cmpsl out pusha fcmovne movsb (bad) mov mov jb movsb cmp push nop jl push push pop inc xchg jo adc jmp cmp cmpsb loopne or xchg mov int3 xchg stos ja add push adcl add or push fldl2t jecxz and je add stc mov (bad) jmp dec add daa jl pop clc mov mov add inc fmull sti lods (bad) dec movsb or stos outsb mov les inc rol jno adc movsb adc mov jl lret sbb loop sub loopne sub and lock xchg mov nop add insb xchg push fcomps xchg gs cwtl jo mov (bad) mov add cmp jp call adc or adc cmp lcall xor mov loope repz jl or (bad) nop jo flds arpl out (bad) cwtl and adc test mov inc mov xor jmp inc adc dec pop mov ljmp cmpsl push mov nop jecxz xchg add into dec testl cmp add stos xor leave pop js or pop fildll sbb add faddl pop (bad) push int sub daa pop rolb fistp enter test sbb cmpsb faddl es (bad) jo and push or add cltd rorb outsl add sbb in pop rolb lds xadd outsl inc aas jbe sbb mov mov jb sbbb in outsb push pushf aas ss sbb jl inc aaa ds sub xchg subb inc pushf lahf arpl add fsubrl popa popf loope dec inc add xor push mov lret cmpsl add lret cmp sub mov push xor push add cmp add icebp pop ret fildll and dec cs in pop cmc cmp movl enter ds scas xor and mov adc inc lahf test insl sub sbb pop mov push dec repnz jno dec inc inc or mov arpl sbb jb adc aaa pop inc nop lock fwait sub rolb imul mov add scas sti pushf push lret dec inc jo in lock xor xchg and sub roll fsubrl pop clc cmpb movsb jge or xchg or inc mov mov call fs xchg inc cmpsb sarb add ret mov adc adc sbb ret pushf add hlt shlb ret inc test test out clc int3 jecxz sbb and dec (bad) pop daa bound xor ret sub dec xchg lock (bad) sbb adc mov lcall adc pop shll test mov test adc cmp adc lea nop inc sbb jo xor dec shll adc sub adc xchg pop stc inc push add (bad) mov dec xor pusha rcll aam adc ja out cmpsl arpl nop sub or add push popf add mov addl xor js add aaa jp test cwtl bound add in bound or (bad) pop cltd adc pop in push mov add mov jl fiaddl enter xor daa shlb mov add jge jp add js cmp dec xor add sti scas fidivr bound outsb ret cmp flds test sub cmp add fbstp push movb xchg (bad) mov fs ds test add xor arpl add jmp outsb add sbb mov cmp int cmp pop mov cmp and loope xchg pop cmp and add dec cld xor iret adc and add cld cwtl scas dec pop nop inc fdivrs les xchg mov js sahf mov repnz stos mov xchg dec adc sub mov fsubrs xchg pop or fsubl sub movsl jbe add push add inc les fstpl xchg inc mov repz out pusha (bad) jo les movsb hlt cmp imul pop mov lret js push pushf or or dec mov std cmp nop xor imul push sub inc jmp inc add mov sub inc mov mov out xorl mov sbb aaa xor fdivl xchg add sub cld mov aam xchg mov pop roll jl enter (bad) and xchg decl scas jns mov out sub lahf in add sahf pusha mov and lods cltd mov adc and add jbe cmc jge pop ret add ret popf xchg fildl mov inc fisubr pop out inc add push dec pop jp xor xor pop (bad) mov xchg jo push xor add jp rolb lds scas mov je rolb xor jb mov pop sub fisttpl xchg test outsb pushf or dec mov (bad) push pop inc ret jecxz lret (bad) dec push aam inc cs into jae,pt add adc mov lret enter push adcb pop cmp add (bad) in pusha fwait cld push and push xchg lds pusha and stos xchg cmp leave shrl in (bad) xchg pushf adc pop adc adc test fisttpll dec les push mov xchg add inc arpl dec fcompl mov arpl and cmc pop and nop or and ret xor test sahf lods pop pop xor fs inc add in adc enter and in inc mov cmp cmp (bad) mov les sub pushf inc (bad) and dec mov sub xor pusha push inc add test test pop fcoml test into xor cmp lods hlt xchg enter fildll xor dec add sub sub in xor inc cmpsb add sub mov cld adc clc cmpb push xor adc push in cmp icebp (bad) pop out jg in rolb add nop push push mov add rolb cli fwait xchg pop mov pop pop enter pop inc adc jp aam ret pop add adc or xchg adc inc add mov add shll clc jp mov mov jo orl mov sub or inc xor shrl sub lods xchg mov adc and (bad) push push adc je rcr movsb xlat ss jmp test dec adc jae push inc inc dec faddl mov gs add int daa repz loopne sub add in mov repnz pand add adc ljmp or xor pop test mov lods ret add jge loope pop push inc jg movsl inc ja (bad) out je add sbb in xchg cmpsl test push cmp cmp movl pop in lods or movsl jmp add dec sub bnd adc int jne aas xchg inc xchg cmp insl mov inc fildl pop mov and scas dec sbbb push dec add lret js sbb cmpsb bound inc cmp loop sub js xor (bad) mov xor push jecxz ret int3 mov adc movsl sbb pop adc (bad) jne loope js (bad) xor mov movsl mov adcl insb andl xchg jg adc adc xor or xor adc dec inc les fdiv mov jo aam and cmp xchg int3 or cmc or addr16 jb rcrb pusha mov scas dec sub add lcall lret enter sbb adc fsub add dec add dec xchg sarb inc fdivs aas mov jae pop gs sbbb fsubrl cmp js xor clc add ja mov jle jnp addr16 icebp adc movsb cwtl mov add inc jnp or movsl lock dec jno cs pop add push add adcb sarl or mov cmpsb stos jo sub aam lret or (bad) inc test cmp fdivl jns mov mov push in out mov pushf xchg xchg test movsl cwtl or orb nop add inc jge data16 xor cmp xchg sub mov arpl hlt dec cmpsb int3 push xor jb inc pop jg mov jge jne add in test adc cmpl mov adc aas ja xorb or cmc sbb sbb or std adc and xor cld push scas cmpsl xchg loopne push dec xor fnstenv xor mov and or mov push xchg mov cmp gs inc sub fild lods fs jle stc pand push cmp rclb ret shrl pop mov add add mov imul je add mov (bad) and sbbb dec fsubs in addb jl jnp add dec in popf cmpsb mov mov xor fnstcw orb mov loope mov nop add sbb insl in call movsl fprem add bound jge jle cmpsl and insl xor mov push cwtl mov mov or dec mov or sbb mov push aas rclb movsb fistpll add aad js pop mov gs dec jnp and addr16 sub stos add arpl inc ror andb add and loopne cmp in cs fisttpl fsubs push scas adc js (bad) xor xor or sbb cmp mov mov cmpb dec push fldt push xor (bad) mov mov cmpsb inc call shll je gs imul add inc xchg cmp in dec push add sbb pushf dec sbb inc lahf hlt (bad) pop pusha adcl (bad) add jb fidivl push repz inc push or dec movb enter (bad) je cld clc push lret inc dec xor js notb mov loopne shrb adcb dec and roll ljmp sub adc (bad) push sbb les rcrb or xor pop les mov cmp sbb and pop (bad) add inc int3 das cmpsl jecxz jl loopnew sbb movsl js (bad) (bad) jp aam push xchg pop cwtl int sbb mov hlt (bad) (bad) ja or inc cs loopne addr16 sbb mov mov add push lock inc rsqrtps inc lret pop int3 jo fcoms shr and test add cmp mov fwait cli sbb mov xchg jnp loop sbb or leave mov movsb inc dec push adc mov test dec inc or mov adc stos (bad) inc test mov jg movsl mov mov xor adc jno fsubr xchg movsl xor (bad) xor adc mov pusha gs aas or nop add mov or jne jmp push push insb int3 (bad) cmp fdivrl les add jbe xor jmp pop xchg gs mov xchg in mov adc gs mov stos add and and xchg jge jbe pop inc test or and push je in popa or (bad) xchg mov sbb jae test or inc fcmove mov dec lock jnp adc push cmp sub cwtl or out sbb in or pop adcb loope (bad) lods stos aam inc push add jns push xor adc push cmp enter inc sar int pop pop (bad) jbe cltd and ret push rclb ljmp mov loope mov bound xchg aas (bad) xchg add lahf aam rorb push ja add mov das add out jp call add subb add sbb and stc cmp adcl xchg dec fnop sbb dec cs aaa cmpsb mov (bad) jne rclb in testb int3 inc mov xor jle fwait push iret adc add rcll add xchg mov test rcrb dec cmp cmpsl sub push out or inc cmp mov ljmp push sub cli cwtl cmp jnp mov xchg stc in roll jns lods (bad) repz ljmp aaa add leave sub dec inc stos xchg add xor mov pop sahf cli dec add add xchg lret xchg sub out jb add push push in adc sub sbb pop dec xchg imul outsl adc sub cli sbb xor or xor add lahf lret sti les testl aad mov or cmp xchg jmp mov cmp cmpsl pop or popa inc adc mulb add jg daa add adc (bad) mov xchg cs dec add popf push push (bad) stos (bad) lock cmp jbe test xchg pushf add inc ss pop cmpsb pop add ficoml mov int3 push inc ljmp sub sub mov in cwtl repz inc jle fs dec repnz mov mov in add cmpsb cld and xchg push push popf rorb mov pop mov insl sub or test sar rorl sub adc mov cmpsl and fadd andl push mov adc sarb stc popf insb pop or test das push outsl dec or adc pop mov icebp popa mov add dec in push mov dec add push notl push dec sti mov xor inc or push jecxz add sbb mov nop ds pushf inc (bad) lock arpl clc sub out push add ret cmp push rcrl add sbb je je add mov movsl pop dec sahf inc mov jb mov cld xor loopne roll fs or push add sub push cmp dec leave enter leave or cmp js jmp cmp and fstl rcrl inc push mov add cwtl stos mov mov (bad) testb adc fstl add xchg leave ss add and dec and (bad) mov inc jl or inc test js cmc sti mov xchg jl add arpl pushf push loope add sarb into call or mov aaa es call push dec mov and mov and add dec mov fistl jmp push loopne cwtl pusha add loopne or fsts nop (bad) mov loopne gs add in xor push jle (bad) xor ljmp add loopne pop or (bad) jb test cld push dec (bad) pusha test pop push nop xchg inc lock icebp shrb pop sbb movsb and push push push lret dec pop pop (bad) jne cmp jl mov adc les and hlt add mov nop xchg test jne mov (bad) xor cmpsb pusha inc cmp or mov inc sub xchg pop rcrl sarb dec les stc lds sbb sub aaa add inc rcr mov push jg or mov loope add jle push xchg movsb stos xchg jae or push xchg rclb pop adc ljmp push inc add cmp movsb add inc xchg test xlat std (bad) mov cld pop add sub stc mov push movsl cmp les lea mov (bad) bound loop inc and aaa jle mov mov sub movsb or ss or inc add arpl not add cltd lret je add xchg nop das cmp xor sub gs cmp movsb ss leave mov or cmp incb pop inc orl inc mov (bad) mov roll adc subl aaa jns cmp xor repnz mov fs je push mov cwtl lock mov dec lret mov mov loopne add stos cmpb jae adc cltd test mov push or adc fild pop bound mov pop add pushf push ffree push fprem cmp daa add bnd pop imul push enter mov imul xor sysret dec xor push jo outsl mov adc mov cltd cmp (bad) sub add test mov pop rclb enter jl mov lahf ljmp push pmuludq pushf add xchg ja jno push sbb xor pop ss push mov and enter in mov and mov pop inc shlb add pushl adc cmp mov add sbb imul movl mov pop jns mov mov inc mov pop fcomps add icebp mov stos lock popa xlat test das and lods xor sbb out mulb in loopne jo mov out push dec ljmp xchg mov fist add repnz int3 jp cltd sbb or add leave add outsl mov or inc cmp lods js out sbb add pop test push js pusha or mov roll dec jne and mov loopne add ja pop sahf cmpsb dec add je push hlt iret loope push xor mov call pop xor push les popa sub (bad) xor push xlat gs clc aam cmp loopne xchg (bad) mov dec inc and pop scas test je pop ljmp fiaddl xchg or fistp aaa sarb nop aam fs dec je adc jl mov push mov dec push cmpsb imul loope aam inc mov ja inc add jnp je leave loopne std add in nop cld adc mov sbb sbb mov push xchg jae mov icebp loopne add cmpb xchg cli mov dec lock xor ret dec in add ficom shl xchg mov je or mov inc daa dec fistp lds mov add std mov arpl add fbld adcb in xchg arpl dec dec lahf adc pop lea bnd dec mov adc add or lahf inc int3 setnp addr16 jns (bad) pop sahf faddl sbb jp lods xchg adc add xchg pop xchg jo jl mov add mov pop and in rolb fbld mov pop inc outsl flds jp loopne std adc fsubrl andl xor test and and hlt movsl inc js pop dec mov cltd mov push test adc sahf mov adc out pop xchg jb cld jnp add outsl jo test imul loope cltd lahf push mov out cmp xchg add stos mov mov data16 jmp je xchg xor out xor leave dec sub sahf jnp fs inc popl cwtl add stos popf add adc adc (bad) nop or in test sbb and lock fldl push std je pushf push inc addb (bad) hlt (bad) cmp mov aas add lock and sub sub les mov adc jo add loop enter fdivrl and fcoml ja and or pop mov sbb dec push pop or test cld add jbe out sahf xor fs pop or push nop pop mov pop push sbb int3 add clc or into dec pop push adc adc mov pusha imul pop jne iret mov inc orl lret mov jbe ljmp clc cmp popa shrl xor adc add mov cli xchg gs jmp mov and sti add test nop iret push push out movsb adc gs add rol jp sub add and lock or mov sub adc adc adc add dec pop sub mov lods push scas adc jns xor (bad) mov pop or iret add (bad) sub pop mov pop lcall mov push pushf mov loop fs sbb sub inc cwtl mov movsb pop out sahf (bad) popa test cmp int3 sub call jb push add inc shl loopne add push bound imul fmul mov mov and mov add sbb rclb jge push xor push sbb movsl add jmp insb cmp ljmp (bad) divl rcrb or push das push mov jmp insl je mov adc test mov and enter popf add pop mov jle jmp cld add pushf jae call ret and add cltd pop and pop sub ss mov cmp or xor jle pop clc sub xor movsl js js pusha fisubl cli into mov xor xorl jecxz fbstp sbbb inc imul and mov into mov roll sub cwtl or call add and mov xor mov jnp inc ja ret fistl repz fadds mov mov jmp mov mov pop das int3 mov lcall outsb cmp cld lock addl jmp outsb mov fwait push fsubrl mov dec bnd outsl add push addl sbbl inc mov xor pusha icebp mov nop pop (bad) mov test lock cmpsl lock dec inc (bad) dec aam inc mov loopne test jo loop outsb dec cmc add mov xor push sub nop lock sub enter outsb in and adc lock pop xchg or mov add scas jo movsb sarb xchg cmpl movsl insl roll and repnz or add mov and and mov mov mov mov icebp sub cltd jnp add test (bad) or adc nop inc dec in add and lcall cmp ja add outsb xor sbb icebp xor sbb push call or add rcrb cmp int3 lods or jl pop movsl mov sbb insl adc ljmp sbbl and pusha aas mov adc dec out dec push ja (bad) (bad) fucom orb jl xlat ret (bad) mov sbb inc jg mov push mov mov mov je out fcoms lods jbe adc lea jecxz fcmovnb in aam nop cmp xorb out arpl add call sub lcall and mov fwait loop ja nop mov stos pop cmp cltd fidivr cmp xor mov (bad) inc xor adc mov xor mov jno decl or pop adc and pop hlt std mov nop addb pop pushf mov ret shll fiadd cmpsl sbb jp rorb dec xchg add cmp mov cwtl xchg or popa out add jne inc (bad) mov lods mov inc add xchg rolb mov loopne or inc das es dec clc movl adc mov fs fucompp push hlt mov sahf mov mov push xlat inc clc sbb testl outsb in loopne test jp cmpsl adc in sbb incb and mov movsb cmp mov bound and into or int3 add jmp dec sub bndstx jo outsl sbb jmp mov or and sahf outsb cwtl sbb mov mov add cmp inc jb add add mov mov scas cwtl in (bad) mov inc mov adc cmp sbb movsl subb call mov fsubl test or dec lods pushf (bad) pushf xor call adc loopne bound adc (bad) pop add and xor inc mov or cmpsb mov dec jmp ss sbb and xchg enter mov insb je inc test xor mov insb add fnop push (bad) dec loopne add mov inc xlat mov cltd in out inc jl lods adc cmc aaa enter andl outsb mov insb xor cli add test mov dec push jo adc sub pop fadds cmpsb cmp lret add (bad) jmp push fldcw cmp cmp aam sahf push nop inc mov mov aad addb sahf mov ja add add inc sbb add (bad) mov adc and sbb movsb jo bound dec mov cmp and add mov adc test push mov cmp lahf imul mov cmpsb sti cmpsb pushf push lcall cli sarb sbb jmp popa popl mov mov lret nop insb dec aam xchg xor movsb sbb mov outsb dec push stos and lock adc or notl leave ja test add ret jle outsb add and push jmp loope adc rolb pop mov dec xor cmp mov test je mov cmp cltd inc add sub mov cmp stos pop mov xchg cmpsb or ss call mov inc (bad) sub call inc pushf and (bad) jnp (bad) popl leave and popf pop mov sbb out (bad) cmp pushf sti add push fsubs xchg (bad) push icebp xor pushf or jl mov nop add out inc test imul arpl push lock add les shrl mov andl loopne jns add mov insl jno cmp mov mov test mov xor mov add jmp xchg cmpsb out mov inc fadd push popa stos rolb dec popf (bad) (bad) mov bound pop pop int3 orb xchg movsb sbb sbb shlb adc add mov mov jb in inc xchg sub ret mov mov push dec and rol fnstsw mov jp and xor cld add icebp test mov dec inc cmp dec lock cmpl lcall inc inc mov dec push xor jecxz add or sbb inc insl xchg (bad) mov mov jno or cli pop outsb int3 cld movsl popa jo sub jmp xlat xor sahf and sbbl jge sbb add jl fcomps xchg add mov aam mov mov xor incl push push jl dec pushf adc js mov and cmp cmp dec and add cmp repz xor jmp cs inc push inc prefetcht0 mov icebp or add push aam sub nop cli cmp add fidivr and pop (bad) mov or xor loope cmp sub movsb push sahf in js add dec pusha cmp mov mov jmp add add inc sahf cmc dec mov (bad) lcall jge pusha jmp addr16 mov cmpsl inc push sub mov xchg loopne lods jle cmp dec mov aad fsubs adc int3 wrmsr xor outsb pop pushf mov fisubr push les addb std clc fstp push lods and sbb imul or mov push in mov and add cmp (bad) or subl cwtl mov adc dec in lods cmpsb cmpsb in pushf and rol mov hlt add pop jl outsb jl mov adc enter inc add cmpsb mov pop in inc test sbb cli push das enter es lcall or push mov dec pop cmp bound imul nop xorb add call xchg mov in xor jo push sbb add and lahf xchg fadds shrl mov xlat jle sbb (bad) enter jb repnz sub sbb sahf out sub pop xchg enter (bad) mov jae pop mov or mov dec xchg inc int3 sahf pop mov add xchg mov or add add sbb xchg pop (bad) fadd and adc cli sub adc add sbb test add xchg fs hlt (bad) mov cwtl xor inc jecxz sbb dec xchg cmc ds pop roll mov add xor mov (bad) mov nopl inc scas ficomp inc cmp call dec inc int cmp int3 xchg inc inc lds and (bad) mov sbb add (bad) xchg repz icebp fsubl mov sub cmc pop outsb popa sub push cli mov cmp mov test adc mov sbb lea loop add and xor loope cld xor mov add adc data16 add mov sbb shlb jle and nop sub jnp test mov enter cmc jp imul inc add dec pop or rolb aam pop xorl add xchg aam ret rolb add test cmp xchg and out mov add mov sub add cmp clc cmp adc or pop cmp push adc push imul movsb mov xor sub pop outsb add xchg jo mov mov jns xchg pop jae data16 adc add sbb lcall call test jl mov and add pop pop out add ss insl stos add mov or mov js mov leave mov in xor and sbb mov sub or cmp mov pop jle add hlt in mov or orl add push dec inc inc lret mov adc mov add fstpl xchg adc int roll dec mov testb sub mov sub add mov add scas sub out sub lock cmp test adc jge xor repnz das call pop out dec test stc adcb add mov outsl sub xchg and inc jl movsb add adc test push cltd push mov add test test mov mov je xor pop cmp subb mov mov mov int3 fwait popf xor repnz sbb imul and xor scas or xor out lock jmp shrl add push mov mov outsl or or dec popa mov mov cmp icebp pusha fwait mov jl cs xchg pop mov dec lods stc xor orl ljmp or lea rcl or xlat or jle cmpsb popa cld arpl sbb push push stos lcall mov cwtl or out fadds mov jns shlb imul pop jbe pop mov inc jb sahf inc add xchg inc and or xlat mov sub insl adc add add push je popf dec sbb shlb lahf punpckhbw wbinvd push or mov clc (bad) jle shrb pop imul mov sbb add sbb dec mov adc rorl lock clc je aas into adc leave push adc clc add jo mov sbb add flds or clc xchg mov (bad) shr mov or adc lcall test pop dec xchg push pop dec sbb adc out add pop enter lea movsl shll insb rclb insb shlb in pop mov lahf push jns mov mov divl add (bad) out mov sti test add fsubrl and aam mov cmp sbb pop jns sub add icebp fisub jl rorb cmove jne test xchg in hlt mov jmp clc or jecxz mov or scas mov pushf inc mov mov out cmp sub jno mov inc lea pop or mov jns jno pusha pop mov sbb mov dec ficomp lret cwtl nopl loopne add push xchg pop mov sub into (bad) xor or not movb call mov leave icebp mov leave mov ja pop mov ret mov mov xchg leave movsb xor or js xchg xor and jl inc imull leave xchg dec jge ds (bad) rcl inc jl add adc jne inc (bad) mov add xlat rorl movsb push clc andb mov sbb or call mov xor lea pop pusha lock cmp in add test mov pop sub test (bad) ds cmpsl addb jae aaa jle fsubs clc out neg push (bad) out or pop pusha and add test xor xchg push popa enter mov lcall mov dec mov jo nop pop mov jp dec xor push mov int stos test push mov fs sub push push test push wrmsr xchg cwtl movl cltd das inc pop mov out jl sbb xor push and insb push loop inc add mov std inc mov (bad) lods or int3 xchg test add push sub orl loopne repnz push fs je (bad) sbb cmp add fcom orl mov and dec je cmp adc sbb mov aam inc push cmp mov lcall jne adc dec sbb add daa imul movsl sbbb add xorb adc in inc mov (bad) jle mov push gs icebp lock jo adc pop add movsb pusha dec lock faddl xor inc pushf mov sbb adc add imul xorb into push inc pop shlb lret xchg or scas sbb inc jmp inc mov je or stos dec xor int3 inc adc (bad) lea mov push addr16 add leave sbb cld in xor scas dec jbe enter push mov sub out or and rcrb add push mov sub xchg push sub adc in pop push mov nop aas xor lahf fdiv ret jg outsl (bad) push ja add fiadd out xchg dec (bad) lock loop sbb stc or jns xchg sub outsl orb call in dec and fwait dec push pop or (bad) push adc add push lock int3 das out mov mov and mov add fwait adc leave inc and icebp (bad) xor dec (bad) xor mov mov cmpsl mov aas test xchg or cld add inc cmp jb sub out mov in add and push add mov std add shrb cmp lahf mov movsl nop adc mov fwait outsl roll ljmp xchg cmp adc (bad) je or out jb xor (bad) imul lcall sbb ljmp cmp shrl sbb pop ret jg (bad) loopne inc daa and and arpl xor xor pop add mov xor and jp pop add dec es add pop lret rcr sub nop ljmp lcall aad xchg lret xorb leave iret mov jo invd push lods sahf push cs adc (bad) fstps xor jno inc or cmpl js mov clc fwait call add sub xchg dec lods cmp add dec or adc in add sbb jno or push add rorb fld pop test call xor mov cli mov mov add push xor add pushf pop pop repnz loope (bad) iret mov pop pop and leave ljmp sbb or icebp notb lret call cwtl (bad) aam cmp jne mov sub add xor add jno inc cltd mov push or jo inc xor add movsb sub pop adc lock sub adc inc sahf mov repnz aam sub push sbb bound xchg vaddsubpd dec jl or outsb jl add rcr add call imull movsb sub adc adc ss jl inc nop or mov push ljmp pop sbb lods mov js fidivl insb outsb and add lea jg pusha sub sub (bad) and mov mov scas std sbb insl push (bad) jbe (bad) push xchg jle add repnz aaa nop test rcrl movsl addb mov or imul sbb cmp add (bad) rorl fild out xor (bad) cli jnp xchg xchg clc sbb jae incl push xorb add push lods fcomp cmp cmp xchg cmpsb xor dec in add adc mov jle add inc cmc mov jecxz or enter adcl rclb imul test cmp push xchg sub pusha aad adc and push mov lahf jns inc push nop mov aas adc subb jg outsb or pop adc mov sbb pop sar mov in pushf (bad) outsl push sub mov adcl mov (bad) (bad) xor add inc add rcr mov mov xchg add aad nop and jno pop inc or xor adc outsb sbb (bad) cmp sbb xor and dec out aam xchg test pop inc mov xlat dec sbb add shlb lret test mov insb punpckhbw fs add jo lods jns iret sbb inc jle lods dec rorb pop stos mov cmp lcall aas fnstsw rcrb outsl std sahf es das mov fadds jg pop mov xchg inc add cwtl leave or fldz sub adc xor adc add add cs lods stos adc lds jnp xor sub xchg jo pushf clc jns cld iret lcall je lock mov nop icebp add (bad) repz fisubrl mov lods add pop mov cwtl js (bad) dec loopne pop sub cs popf dec and mov sbb out int3 andb dec sahf lcall xor clc mov testb dec xor popa mov sub jns (bad) les sbb clc add leave ja push ljmp push mulb cmp mov or cwtl jns push aam mov or dec xor mov lock adc rcrb mov sbb test mov mov rcll lock add cmp lahf push roll cwtl pusha test leave jp jge or aaa popa xor push pop cwtl ja addr16 cmc and dec xor (bad) int pop dec iret add addb xchg lret pushf test stos hlt push and jno fs daa movsl enter lret fmull das movsb nop int3 rol add lret inc enter imul pop cwtl inc add int3 mov pusha push test xor (bad) mov (bad) out (bad) xor push and cmpsl push dec aad add test adcl sbbb cli pushf sbb in mov adc mov outsb mov loope add jno jle cmp dec mov aam inc or push rolb movsb aam inc cmpsl cwtl inc or aad xchg xor cmp call adc push call add test faddl or or fucomp xor in xchg pop push mov adcb (bad) stos push sbb fsubp mov rcl add fistpll sub pop (bad) push mov add vmovntps incb inc inc test mov enter add (bad) lock test push pushf add sahf mov cmp dec cltd inc and pop add ds arpl adc (bad) hlt add mov (bad) cld pusha nop sbb shll clc ret add xchg mov pusha fdivrl mov add fstpt inc arpl mov cmc or pushf lahf lods imul push push and in xor dec imul shrb sbb sub nop mov jecxz int3 out nop adc add mov aas ret mov pop xchg pusha js lock mov jno rclb aam aam sbb les js inc nop mov fnstsw cmp test jnp lock cld xchg mov add lock add fwait xor adcb movsb repz mov (bad) fwait and xor (bad) lock andb add outsb fucom test jno mov out mov or cwtl sub str inc mov std dec push sbb inc inc pop icebp insl rcrb aaa fbld cmp insb pop loopne daa mov inc mov push or add mov in inc jg daa mov insb pop aaa popf loopne pop sbb jo (bad) aaa add pop sbb pop les mov push into lods add dec add dec pop inc daa inc push shll fwait sub jge std mov jg and push mov and (bad) mov aas xor inc jle mov inc scas jo popf jecxz fs mov add pop inc inc push fcomps pop in dec rolb gs imul inc jl push stos jl pop jns movsl fld add stc scas add lahf pop adc and (bad) sub loopne and inc inc lods aad jp std mov pusha movsl mov adcb add dec test rolb and add or pop xorb dec sbb mov sbb jp sbb test sub imul fdivs les xchg sub enter pop or aaa ljmp inc cmp mov popa jl shr negb ret out dec add xchg pusha imul mov addl add adc call xchg inc fdivp mov push test and and stc movsl xchg sub int3 jo and mov cmp sbb (bad) and push pop cmp add (bad) xor pushf dec and adc xchg inc rorb and push mov add bound push jns loop nop mov lock adc mov sbb and mov pop sbb inc xchg imul add lea add cs or hlt sahf add sbb or xchg cmp adc push (bad) xchg xchg or sbb and pop pop add inc push mov insb (bad) test jb movsb jp add mov or mov outsl cmpsb enter aaa mov jp rcrb out imul cmp pushf add fwait pop insl and movb sbb test sub mov es sub xchg pop arpl fnsave mov test rclb mov adc push push inc push out adcb mov (bad) jp add mov mov outsl mov das dec pop cld rorl cwtl fwait adc movsl mov pop jmp clc ds and cmpsb pusha out call mov insb jbe add dec or pop xchg lret fildll xor adc mov add out inc push lds (bad) mov sub pushf js adc orl enter rclb shll pop pop mov cmpsb mov ja fiaddl add fwait push imul add sub xor (bad) sub adc and xor pop (bad) outsl dec shlb sbb and push sub nop add aaa dec test addr16 xor dec or std jne scas clc shl sbb int add or push (bad) lret ficompl and icebp or lcall mov xchg inc xor rclb add sub rcl arpl lret adc fcompl xchg push neg add or outsl (bad) jo push adc inc adc (bad) repz adc cmp inc mov push push xor popa xor pusha sub sahf add mov mov stos jbe or mov and dec adc or sub add in dec add and loope cmpl in icebp inc rorb lcall movsl sub inc push or or outsb insb (bad) movsl repz jae cwtl pop cli jp add push lcall movsb add mov imulb adc cwtl xorb mov insb pusha lods mov add fmull data16 and gs or sbb xor fimul ret iret push mov jmp inc sbb pop int3 andb push inc sub pushf adc mov jno lock xor inc adc add subl (bad) mov cmp sti add pop loopne ficoml dec cwtl sub pusha movsl movsb mov pusha jl pop adcl pusha add stos pop (bad) in xor push pop ljmp mov (bad) jb mov dec stc enter dec xlat add popf daa jle mov add fisttpll cmp or popa in shlb pop pusha dec mov orb xchg ljmp out push and (bad) data16 call call stos adc lret (bad) mov clc scas cmc push pop lret cwtl cmp lds outsl push xchg nop or shr xor jp pop pop mov or movsb mov popf add xchg inc lret jmp mov add movsl dec add and ds adc pop jns mov push cmpsb pop jns pop xchg jl pusha sub js add mov nop mov and jb pop icebp repnz cmp insb sub sbb data16 cmpsb arpl xor inc rclb or rclb push adc in mov sub pop adc or (bad) mov push loop add xchg xchg ja mov jg movb test cmpsb les cwtl sub adc add insb rorb jp or lods pop mov cmp sub mov pusha pushf lock and and adc mov xchg pop loopne (bad) mov inc lret test clc mov add rorl movsb jne aas lock add adc dec test push cwtl in mov sbb and add pop push aam cmp js loop dec push mov add inc repz sarb sbb daa dec push cmp xchg add pushf nop ds es cmpsb sbb mov jg xor jecxz add xchg jo dec push mov cmpb xor dec jne or jnp rcr shll inc inc mov inc jl dec fisubl adc (bad) rcrb stos ljmp aaa outsl pop and sbb or adc adc mov ss in push xchg mov or pop in std jmp dec mov jae,pn push or or (bad) push push push xchg cmp push clc jns xchg sub je jle shr lcall inc add sahf fbstp add sar pop orl sbb rcrb push cmc push fdivrl mov rcrb iret cmpsb movsb dec (bad) xor rolb lock pop push add test add (bad) in mov mov cmp add and jno lea cmp rcr js add mov stc pop movaps and sahf data16 inc jle movsl add popa and clc sbb outsl jle fdivrl xor icebp mov add stc or cmpsb mov js pop imulb sbb or and jns add or (bad) add fsub imul inc out push scas sbb jge out inc xchg mov xchg pop xor int3 daa js sbb fiaddl jo cmpsb sub push jle mov mov add int enter cmp mov or sub (bad) mov inc scas fs jmp dec or xorb or add or out and jb mov ror push loopne adc mov xchg sbb neg pop cmp sahf call mov cs ror sub test mov lods xchg inc and xchg cltd push cwtl push fldenv dec int3 test mov mov dec jmp sub call imul subb jl pop aam xlat push jp adc mov call mov pop nop push wbinvd xor sbb push add inc dec lret push cmp pop mov aam gs pusha scas pop int3 cwtl pop add or mov ret push push mov outsb inc outsl jnp or pusha or or int3 test pop arpl jmp pusha pusha jg mov aam or rcl dec test mov loope int3 fwait imul and adc pushfw rclb add or in lret mov pushf sub xchg push fist dec or lods xchg or jb lock jns pop and aam fcompl add cwtl and push add and lock lods adc dec add jmp daa sub sbb rcrl insb in cmp add sub dec sbb add adc fucom fwait and js add xchg mov call sbb aam mov mov cmp add fs cmp (bad) xor sbb das xor insb dec mov jle xor sbb ror inc mov cmp add and sbb add sub js and (bad) addb loopne and lea ja in dec dec add jp and fdivp insl ds add call pop sbb jo,pn popf sbb and jmp add dec repz nop (bad) and add adc loopne mov pop sbb jb cmpsl cs out add roll les push push sbb push or ss xor cltd test sbb outsl sbb sbb jg pop dec iret sahf test sub sbb mov xor addr16 inc sbbl jg pushf int3 rcrb enter xor jg xchg nop (bad) sbb loope (bad) and push pop loope pop push add or imulb or arpl lea outsl ljmp xchg lock jecxz xor or mov movsl lea add test ds idivb in jp lcall xchg mov cmp and xchg pop repz inc cmp add inc or xchg adc adc push push push pusha adc lock mov movsb fsubl or (bad) xor in outsb or xchg mov fimul ds mov andb ja sbb aam mov pop push into outsl fadds xchg mov roll outsl inc je mov mov call or mov dec dec inc adc insb pop cmp or ret inc push cmp sbb mov ret and and outsl jns mov lock call or pusha ret xchg inc and sahf push sbb das cmp loope xchg repz dec dec mov mov outsl loop adc aas lock cmp inc aad gs sub test sbb jns cmc push in sub xchg or cmp dec cmpsb aaa jo dec mov dec in cmpsb pusha imul (bad) das push mov arpl push icebp push stos mov sub xchg inc mov xor cs xchg sub push inc and adc fs adc add mov cmp mov orb add lahf add push pop mov cmp sbb movsl mov sbbl xor push jns add rcrb inc sbb int3 cwtl add rclb mov and pusha in pop out lcall xchg push je mov test clc jmp out mov shl dec movb rorb xlat fbstp test dec es call lea cmp lret addl pop test mov add pop xorl hlt cmp pop negb jmp add sub mov sbb cltd int3 sub fwait push push rcrb adc (bad) sbb lock mov push call xchg rcll inc or icebp hlt insl mov or or mov dec ljmp pop add sbb jecxz mov sbb sbb cwtl sbb and ds pop adc or rcr mov jge imul shrb in sub dec add dec sar push hlt mov inc es mov ja je adc cmp sub xor cld pop mov lahf adc rolb cld cmp jp ret icebp into add fcoms inc sbbb or lods loope icebp xchg and cld hlt add scas clc xor push sub or fisubrl or push and (bad) les enter inc (bad) mov rolb inc pop mov mov adc iret add cwtl rcr xchg fs sub (bad) pop dec out popa inc add sbb arpl mov cmpsl sub sbb shll dec arpl mov mov lahf ret inc nop sub push xchg (bad) jbe pusha test adc aaa mov std add inc mov (bad) cmc sub xchg repnz aas mov insb lds adc add sbb sbb add cmp sub popa inc mov mov inc testl mov je xor dec xor xor loopne insl jbe aad mov jno or inc adc inc mov test cmp lcall ljmp xchg push ds xor pop adc ret push ret add jmp and jl scas sbb testl inc jae push faddl (bad) mov pop or pop and nop aam or andb push mov cwtl mov insb aam int push sbb cmp sub xor jbe jl add inc cmp inc popl pop call pop fwait jp ja adc pop out inc movsb or jno pop dec fildl mov pop ficomp or orl mov push out movsb or sub add add dec xlat rol jnp push insb fcom adc sub js sub push xor in aas pusha cmp call inc mov cltd push mov rorb sbb call test cmp mov imul mov inc test dec mov es lret faddl stc lock mov loopne push sub ljmp add adc mov xor mov add xor (bad) xor sub pop (bad) jbe imul mov mov mov add pop dec (bad) xchg iret rcrb ret lcall mov ds adc push stos pop jmp arpl pop ret add gs sbb addr16 nop lds js,pt mov add pop cmpsl push adc xor add divl push dec and add pop xchg inc lcall sahf push rorb inc jp imul fimull add and ss mov lock push iret cmp push ret pop icebp dec mov rcrb pop mov test sbb out xchg rcr cmc inc inc mov or jg sbb ror mov mov pusha pop inc out push sub notl adc xchg pop (bad) pop adc test rclb fbstp in int pavgb cwtl pop add sbb lret add push add (bad) (bad) repz lock movsb add xchg xchg not cltd inc mov sub or jo sbb mov push repz inc and add in sbb push lret lock mov aam xchg pop xchg test jmp add ret mov or sub sbb xorb adc sbbb aad cmpsl push stos pushf ret cmpsb loopne sbb add mov jns inc jge add in into xchg cltd aaa lcall and cmp adc (bad) call sub call outsb ss popa imul lret cld cmp pop out adc add xchg fwait pop ret aad jbe and (bad) xor mov xchg push cmpsl add xchg jno outsl jmp (bad) adc xchg pop sahf xchg or lahf loope add jge dec add cmc xchg fstl rcl int mov adc push dec hlt mov aas sub mov or push adc mov sbb lds (bad) into jl ffreep sahf fild jno add mov outsb daa add pushf fist in enter loop in push mov add and mov mul orb adc adc (bad) xor hlt (bad) in sub in sti add dec in mov xchg dec cli inc push mov (bad) loope call stos mov add cmp (bad) out pop mov push and inc (bad) hlt pusha ret cld les or or cltd adc xor add push rcll repz mov mov rclb mov sbb xchg js (bad) sbb sbb test bound lret sub mov xor inc or sbb lcall cmp test insl xor insb pop pop and in mov out loope es hlt packsswb ss sbb rolb test xor adc inc enter xchg mov loope mov add xor or xchg sti lea adc insl inc pop inc cwtl add dec inc xchg mov in push out push and mov addl hlt sbb pop sub adc popf movups add icebp pop xchg pusha sbb movl ret daa or aaa jbe cwtl sbb xchg addl add inc aaa arpl sub adc and mov xchg fwait mov inc fldt mov adc shrb fcmovb inc sahf add js rol lret jo sub movsl leave decb lock int3 fcom add clc pop int ret fldl xchg popa sub rclb or loopne mov sbb sbb lods imul out add or pop pusha or jo cmp movsb add or dec push hlt inc xchg inc pop stos inc pop mov mov and pop sahf and aad push cmp sbb stc mov mov push ds inc fs or out pop push and rol imul cmp add mov add push jp add rcrl adc movsb cwtl mov dec fadd stc out sbb pop rorb fldt xchg fisubl push inc mov or lods cld dec push jl push inc adc addb xchg fiaddl lods add ss pop js add scas jno mov cmp mov divl and daa js shlb push out stos aam inc xor addr16 ds je scas add (bad) das mov xchg pop and xchg popa cmp jmp mov or pop imul mov aas xchg mov inc adc adc (bad) bound mov mov xchg xor ret stos int3 shrb add lods out pop jns data16 pushf add sub (bad) pxor or adc push add stc rcll iret aam sub xor pusha adc sub ds enter iret xchg adc push jl insb add mov adc mov sbb repnz dec xchg mov test rol and out jns orb cld push and fwait mov adc mov in jg mov test divl inc push add mov add test mov xchg sub mov xor test add cmpl and aad notb jg loopne (bad) test lcall mov pop adc adc sub test jo call push pop arpl in add test sarb aas out add add or adc pop push in or inc sbb outsl addb add dec mov or xchg xchg cwtl pop adc je pop or fwait sarl popa jg xchg jo gs fmuls fisttpll test sub (bad) hlt stos xor into rcrb mov je mov mov adc sar insl cmp out and inc test lahf sub add popf jae loope dec push ds fsubr (bad) xor adc outsb loope ds test loop xchg adc add and push popf add mov popa pop (bad) xchg adc and and cmp pop mov and ja mov add outsb push xor int3 jl rolb outsl xchg or sub push mov push sub push push aad push pop sbb add xchg xor rcrb aaa sahf xchg pop or jle idivl mov cwtl or jge es push (bad) outsb inc xchg cwtl cmp add std inc add mov pop cmpsl cs push sbb xchg or lcall sub outsb cwtl mov push dec jns mov cmpsb ja shlb jp lea ljmp push add xchg sbb loope aas mov mov pop xor or int xchg js sbbl lea adc stos stos les cltd mov xlat sub aaa adc add xor sti (bad) push push mov jo push imul add inc jl mov mov xlat mov mov push sbb cmc arpl in stc sbb or jge jl mov mov add xor jl dec mov and fnstcw mov sbb (bad) loope int mov add fsubrs repz nop add jb pop ds or adc dec mov adc in lea fildl cmp cmpsb movsl push add sbb icebp orl cmp jo and dec mov add pop mov add cs push push mov jno adc push sub add add add inc mov xchg mov and pop ror imul arpl pusha xchg cltd jae ss mov mov and lods test movsb cltd pusha ret push mov add adc push jo ret mov push pop xchg iret jg lcall sub dec int or sbb xchg cmp or mov aad or xor les dec rorb rorb mov (bad) rolb add ss nop push push adc push rolb addr16 xchg fsubs dec mov xor call sbbb lds les mov add lcall jno inc add dec (bad) xor cmp xor sbb insb add push xor outsb les les imulb rolb adcb cld daa pop jp bound or jle insb add iret push outsl dec ret adcl iret js add insb dec xchg and test push popf (bad) rcl add inc jb jle add outsl push jmp jmp add mov (bad) cmpsb test xchg jae or rorb add iret stc int3 jg add daa ret sbb jmp inc pop in lods fstpt (bad) mov sub iret add add inc mov or add inc xor pusha lods push xchg mov nop pop std adc pop movsb push dec add (bad) aaa mov out nop dec and or adc push and aam sub add in inc call js inc push xchg pop stos flds fnstsw movsb pusha mov (bad) jno out add xchg outsb push movsb mov or pop add bound add cmp orl daa adc lods jp mov mov movsl pushf sbb or js and mov iret outsl adc push add mov xchg inc les iret (bad) rclb fdivl add fisttpl cld sbb pop and mov push jo xor std add outsb jne in add dec test inc cld add aas mov sub outsb aam js test add mov lea pop mov jge xor outsb mov stc add and mov cmp (bad) in or call sbb mov aad xor jp or add pop or cmpsl push dec xor sub sub pushf test fs dec mov shl jp add add mov test xrelease xchg add lret je xor out mov mov jmp add fdivl out call incb sub aad lahf dec add sbb daa xor adc pop add insl jne xor mov fsubrl cwtl nop inc out adc or dec or dec mov mov int3 add mov adc js inc icebp cld xchg dec add push jg adc push (bad) or lock sbb cmp cmp cltd sbbb es sti loop seto insl lahf mov data16 xchg xor adc push ficoml xor add out xor add xor out adc xchg and fisttp (bad) loope dec sahf adc or enter mov lock push xor fs aam add andl scas test pop andl cmp mov addr16 ja push mov cmpsl and inc faddl sbb adc and sbb out daa mov aas pop mov pop in inc dec xchg mov add jb fldl add int xchg add lcall fiadd (bad) aad jne and sbbb sub mov (bad) pop mov add adc add imulb or add andl mov data16 push cmp ret sub (bad) mov (bad) mov push mov or out aas mov push pop clc sbb iret push cmp xchg into addb je jle pop xlat and ret cmc add jne popf pop and pop xor adc xchg xchg mov inc push sti lea add add ficom cmp int3 lock std adc pop sbbb add mov inc das sub sarl pop sub and inc adc outsb addl cmp mov add loop aas aam pop arpl outsl cltd nop add (bad) sbb lret adc pop out clc mov fwait dec mov lds int3 ds insb or stc pop out and mov push shl ror sub xchg cwtl outsl dec or push inc js test adc push sbb cmp dec add ljmp lret dec gs je in popa lahf push adc sub pop dec mov and jns sahf inc in pop sub pop xor jge push or pop (bad) je jl mov adc (bad) adc cltd jns fxch push inc or nop mov fist push cmp sbb add loopne add leave mov imul push add xor xchg aam lret fidiv mov mov into (bad) mov (bad) xor add add push xchg push mov orb jmp repz call (bad) push add mov or (bad) xor emms sbb fiadd in andl sbb cmp or ljmp push ret hlt add mov mov dec mull fwait push bound pop aam ds add aad inc sbb loopne sbb add sbb xor sub add jle or xchg testb sbb (bad) xor dec mov call adc insb adc add andb add out in fwait js or pushf (bad) ror add sbb ffreep adc (bad) pop ss je nop iret sbb enter stc add jg lahf js push lods sbb inc pop mov ret pop push pusha data16 jno inc add dec mov fdivrl dec mov pop and fimul movsl or rcrl dec out inc sbb ror mov adc xchg jl jno pop in add fisttpl ret js sub fsts loope (bad) cmp ret in mov (bad) (bad) fldl sub (bad) mov aam or dec inc pushf pop shr pop fldenv or push mov push and dec cwtl sub lds popf mov fs inc sbb cld sub fs push pop lret sub stc and cwtl sub push in add jle inc and jb adcb scas mov jle or sub lds shlb push ret fs js jl and sbb mov jno xchg cmp scas mov fsts test mov or xchg dec sarb dec mov out popa adc sbb cmp dec or (bad) mov popf xor cmp inc dec fldl sbb repnz mov fdivl sbb or int3 mov push mov jge xor xor sarb in add leave inc push int cld and out add xor faddp cmp jmp stos lods add cmpsl pop arpl or lea push rolb fnop mov pop sbb mov push orb sub pop jne idiv dec daa lock add pop or pushf in ret xchg sbb andb jl btc xorb (bad) rorb shrb andb stos ja popa movups mov lock mov xchg add push inc cmp addr16 add pushf adc lock add lods subl testb subb xor sar xchg popf lahf xchg xadd aas inc cmpsl jae cmp rorl inc stos xor insl cmp int3 add cltd fucomi push add dec jbe pusha cli xor push ret hlt mov outsl mov xchg out add xchg push mov loope cmpsl xchg sbb push mov mov dec mov orb push subl inc push xchg dec jle in stc adc cmp mov js cmp jnp or js add ds cmp (bad) push or mov outsl dec adc arpl adc test and pop and rolb pop push pusha sub in inc insl mov sub clc inc push iret mov sub aas cwtl nop mov mov sub push cld rcr jg mov xor mov or adc mov add mov inc icebp test jg jno lea mov or push pusha les test mov movsb int pusha and and jno or leave xor sti mov inc int nop mov jecxz lods testl repz les andb mov rcrb (bad) enter mov pop mov insb inc lods sti fldl movsb in dec cltd inc jp mov mov pop mov push add ret jl das mov and lahf jle call adc or stos sahf add (bad) es fcoms clc lock sahf cld je aad adcb xchg or ret xchg and add mov pusha rolb or mov xchg jo sbb inc add adc cmp lods pop (bad) (bad) and dec inc fs xchg out and push sub mov mov inc aas and lret add roll outsb andl xchg xchg in push lcall fwait jl dec sarb sahf int3 add cmp inc cld cltd mov (bad) adc lret xchg mov scas adc dec inc shrl pushf push and push lods pop jb mov insb inc es inc pop or push sub fsub inc inc xor xchg shrb ror adc fdivrs xlat mov push add rclb pop adc std add test insb push orb push iret addb fwait in mov push sti loope lock xchg pop add scas add data16 (bad) mov int aam ror call bswap cmpsb and or sbb hlt imul iret bound add cmpb test lods push mov add xchg and add or inc (bad) sub lds mov insl pop xchg dec inc call and test orl into xchg and (bad) jbe data16 scas sbb pop adc jno in (bad) out push fild mov push adc flds push adc xchg jno out addl test xchg loop cmp sti add adc shr enter test sbb icebp xchg or mov sbbb lahf push nop scas or dec out es cmc push add lahf push fs psllw pop mov mov inc lock and adc test mov test cs mov enter ds lar add sbb pusha jne pop inc mov data16 dec das and mov fdivp bound mov mov aam lret pop sub repnz and ret lahf leave cli pop movl sub mov in jp jl or xor xchg mov lahf xor lds pop not je clc movsb add add or sub cmp femms loopne loopne inc pop das loope test addb cmp sahf sbb sub inc ds bound mov inc flds inc lea stc in sub ljmp pop ret subl or dec stos inc mov sbb popf push (bad) add push sbb dec lds sarb sub push lcall push leave (bad) cmp call add add and push sbb dec out ret pushf pop adc adc les mov idivb push and or xor cmp outsb cmp push lret addb mov push adc inc cmpsb data16 (bad) jo into cmp or inc jecxz cmp jle add (bad) ljmp je loopne adc sub sub cwtl or cmp popa leave loop roll lods lret mov loopne inc xor (bad) jecxz jle loop inc in repz xchg mov outsl lods add mov adc int mov icebp or sub dec cmpsb (bad) lock testb loopne loop mov leave repz fcoml inc jae add int arpl pop push (bad) loop mov or js inc jge xor faddl jg sbbl add push je (bad) std test pop cmp sub push cwtl icebp push shl dec popf inc xor imul repnz setle push and mov push jnp fadd popf xchg add and ljmp (bad) and cmp pusha sub dec aas cld fs js cmp inc push inc clc jb add aam push mov xchg cmp inc push icebp hlt sbb push cmp rorb adc cwtl add push jmp std fiadd jbe imul push sub xor add and aam pop jbe sub insl clc mov sub and dec pushf sub stc xchg lahf push pop mov fwait (bad) mov and sub xor adc push in push add cltd pop sbb or push cmp inc cld inc sub cmp mov mov sub add sbb push or pusha xor adc inc fsubs nop or leave xor (bad) jmp sub cmpb pusha aaa jecxz mov jne cmp xor pop pop clc icebp push int adc xchg mov adc insb lar faddl mov mov rorb rclb aas xchg sub sub adcb pushf pop or mov mov and mov pop push aam sti cmp roll je jo cwtl add xchg nop mov add rcrb jmp rorl stc pop sub movsl roll jecxz into or test in add sti outsl adc fdivrs and aas adc nop mov sti rcl cld mulb es pop pop xchg popa push cltd stc xchg jb cmp repnz sub nop addr16 rolb mov adc aam sbb hlt pushf inc pop add (bad) pop mov stos call add push popf in loop subb scas mov push push pop cmp sbb das cmpps xchg test outsb add sbb cld jecxz movsl dec loopne test inc nop movsl sbb inc adc adc fcoml or andb sbb inc mov mov rdmsr fcomps mov mov and xchg inc mov (bad) dec push data16 jo (bad) call push and aas add pop mov popa testb aam jb pop lahf addb outsb pushf out dec add mov dec pop adc jnp or add in dec pop lret aam push mov mov push nop pushf and add pop cltd mov repz sbb aam xor lret rorb arpl pop sarb push int3 or (bad) or rcll dec mov inc mov add je arpl xor (bad) and ret in loopne loope jne add xor add or das call push lea cwtl adc add out (bad) jno mov dec int3 or add arpl jae add jb nop push xor xchg or inc adc sbb or or dec cmp add rolb push stos jl mov inc cwtl mov in outsl loop cmpsl je add and add mov arpl jbe dec jns add stos mov sub mov pushf lods mov addb in fsts cmp add test ja arpl insl sub test mov lea mov push add popa fs add mov out mov or pop add test fnstsw add xor hlt add lret cmpsb or cltd or and les cmp and test pop lret or pop mov rorb jnp sbb push faddl andl inc fsubrs mov mov leave lds adc mov js cmpsb mov insl and jb sbb je add pop shl es sub sbb imul or in dec mov pusha mov icebp movlps or shlb mov (bad) pop xchg lcall adc or pusha push inc pop sub add mov adc cwtl inc ds sbb movsb add test popa mov mov add push mov add add negl (bad) xchg das aas pop hlt scas xor out adc lock inc mov dec or sbbl cmpsl or jnp lret pop (bad) call repz insb jbe mov andl push in cmp clc imull pop mov js rcrl mov lock movb mov mov sbb xchg jl cmp jb dec jae add mov mov (bad) mov pop daa jmp pop in in xchg out or push xchg jge mov dec push cmp or je,pt subb xor xor xchg cmp rol imul cwtl stos sub sub mov or nop daa ja mov cmp inc pop add mov cltd popa add sbb push xchg stos sarl add fbld popf scas std mov jge inc daa push int3 aas gs xor push roll outsl sahf dec mov push mov adc movsb (bad) aaa and cmp (bad) hlt sub add cli cld ret push imul loopne fdivs inc cmp push ss xchg mov mov adc xor clc jbe sbb iret (bad) lret pop sub pusha xor and mov loop aaa lds cs cmc pop push es fwait dec xchg mov pop iret int push test test lods std lock rol xchg adc xor add push adcb sbb sub popa lahf mov or mov cld mov mov sbb inc out push movsb int3 call dec add nop push inc sbb cli and jecxz fsts xchg pusha mov sub es sbb fnsave sbb imul stos or out orb push inc call aad jmp add loope in xor popa gs mov imul adc xor roll jg outsb icebp pop inc call fbstp int3 push scas mov les add and add pop add lret out out xor stos add jbe (bad) xor rcl push cmpsb mov addb adc jge sbb testl faddl add mov das jp clc add mov mov lods mov js insl mov xchg int3 adc les fisubl adc mov mov es jno test and pusha fist adcb fcompl out add adc pop loope xor ret xor sti and inc mov cld cmp test repz xorb adc mov orl mov adc mov xor je movsb mov jbe int cwtl mov icebp loope mov pushf out test jge push xchg pop popa (bad) jo ret inc pusha adc in js inc mov add jmp sub test add loope pop push cltd jo scas rolb test cltd sbb aas pop cmp cmp add lcall dec pop lock je mov dec sbb adc add or addr16 adc out mov pop add lea add lods pop sti pop push mov or push (bad) (bad) cltd sbb adc mov push mov mov mov pop sbb mov xor adc cmp push int3 sub notl fs and add xor in add icebp aam cmp test add xlat xchg out add loop aas xor ja or mov add out cs in sbb or xchg cmp or xor xchg push add pop pop jbe sarb popa dec and inc enter data16 pushf mov inc stos pusha add push adcl test aam push sub hlt outsl mov imull jb scas mov add adc test pushf xchg (bad) cmpsl outsl repnz fs xor clc lcall and and cmpsb xor insl dec push inc mov fs push jp mov sub xchg aam dec les add mov inc call cmpsl das xorb int3 cmpsb mov fdivrs xchg jecxz add lods sbbl (bad) or cmpb int3 cmp xor loopne in sbb mov push or jo call sub andb jp push pop pop call (bad) ss loope lds mov mov movsl loopne rcl pop shl inc dec pop pop cltd mov stos cld xchg and adc cltd dec imul (bad) mov test pop sbb lahf cmp test sbb es pusha push jp loope in test adc mov nop mov cmc stc (bad) test pop les aam jl push xor and fist loope cmpsl repz dec mov js sbb sub adc out or cld mov add (bad) sbb addr16 mov cld xor mov push cmp mov mov lods adc sarl push push dec dec sbb add mov es mov and dec lcall or roll movl lock add lock xchg and and inc mov pop xor test pop popa in orl mov inc sbb loopne shrl xchg in test mov sbb data16 add shrb pop sarl es inc je or sbb data16 popf xchg cmp aad adc xchg int3 inc cmpsb add inc add pop (bad) push add and inc sub rol push cmc stos add loopne xchg mov or lret xor mov insl mov jb scas sbb mov les inc mov mov sub add sbb popa dec adc cwtl (bad) ja push sbbb ds mov or in sbb xchg mov lcall mov cld orb push cs negb sti xor pop add iret mov pushf nop add fcmove mov jb mov es xor mov and js adc adc notb test call mov rolb movsb pop mov repnz adc es sarb lock ficompl dec sub test xor xchg fiadd ljmp ja clc cmp test jg ljmp in lods mov je sub roll jae push aas or ficompl add push pop add roll sub pop push loop xor lahf js mov pushf roll outsl clc pushl js push jmp mov psubusw jp (bad) lret ltr lods das addr16 jno ficoml loop in add gs or jae dec enter inc dec loopne xor xor adc aas inc fstp int rdmsr setne ficompl sbb or loop push pop dec and pop xor pop imul testb cmp xor mov pmaddwd outsb scas nop inc out and mov outsl dec jg or adc add out push jecxz sub xchg xchg jne icebp or push addr16 (bad) add pop je scas adc js dec xor cwtl sub or xor cmc cltd fcomp or add addr16 jae push inc les ja mov push aaa jg mov cmp pop push mov sub imul and xchg dec inc sub or (bad) push xchg cltd adc pop lret mov imul js int pop push mov test add sub push addr16 mov mov add cld pop jnp das mov inc push fldlg2 (bad) add xor and pop in push xchg bnd insb sbb sbb and (bad) pop mov dec add (bad) xor inc fildl out dec adc ret push sub mov mov inc pushf sub test fchs ficoml push aas out into popa (bad) in push dec dec jge add sub movsb (bad) mov adc sbb xchg lock rcll mov stc sbb cwtl call xlat cmp add jb push dec int3 lods push sub fimull jb mov dec fistl push lods jmp test and xchg insl rolb js and in add xor enter lock jge pop incw and add and cmpb ljmp jmp loope jl dec dec sub dec mov fstpt cmp cli aam lods jb nop push push sti fnsave rolb (bad) rcrl push pop fdiv adc add aam xchg mov js dec lcall cmp adc inc sub fisttp dec lret fcmovnb push pusha mov and int3 nop pushf add loop loope adc sub loopne (bad) mov dec pop insl testl pusha dec adc mov in and test adc (bad) pushf sub inc aam mov push cwtl xor pop dec arpl xchg ret icebp sbb mov mov iret roll jg movsb xor sbb cld add rcrb inc sub pop inc inc or pushf rorb jo push ror adc cmp cmpb push in jg daa pop pavgw xchg outsl and xor inc cld jb pop fsubs xchg aam mov shr (bad) cld ret xchg jo movsb popa cmp fnop xorl insb jae testl push lock lahf mov jb jne mov jle adc outsb stos cmp xchg loop clc sbb in add test mov mov andl ret iret ret aaa nop add pop pop fsubrs mov or add cmp mov fdivrp add xchg inc test cltd into leave adc mov loopne lret lds lcall test sbb push (bad) mov sbb stc and insb cmovs std jno push rcll xor out dec outsb dec mov sti jae add int fcompl xor mov dec lock jne xchg sub cld inc stos call cmp mov sub lahf xchg jl cmp scas jg mov dec (bad) and outsb popa test cmp addb sbb inc add jmp cmc cld mov stc xor ljmp xor xchg jo clc inc push sti repnz xchg sub movsb ljmp movsl aam mov loop shrl jae push sbbb test sahf mov test inc addr16 sarb jo insb dec fbstp jnp xchg testl lahf nop push xor push int3 fstl cld test adc xchg lea addb bound sub jl sbb xlat pop pop add test dec dec mov mov test bound push imul sbb cmp push int lahf sub enter add or fdivp cli sbb mov ret loope les insl test inc push push test js inc add or nop mov hlt in dec add jge mov cld repnz orb jns or sar add mov ja jge sub sbb jb xchg fs mov or add imul pop pusha (bad) jo aad cmp lock push sahf imul fisttpl jg adc dec in adc xlat push add cwtl or and iret add loop adc pop test daa repnz icebp jno loopne (bad) adc lds es jns fisttpll push xor or push or xchg mov xor mov jl xor xlat xor andl (bad) shlb push out dec incb cmp and push lcall xchg les clc pop mov (bad) xor mov add mov cwtl or and and mov jecxz jo insb push and add inc and stc fwait xchg cmp cmp push mov fsubrl mov push or mov andb mov jmp roll in push popf test mov loopne out add dec and pop dec add inc add stos xchg mov sub popa pop cmp ljmp and xor or add (bad) xor push mov cld mov adc jae sub cmp loope flds and pop xor pop fistpl inc and pop and mov xchg leave sbb fisttpll rclb or inc loope (bad) sbb mov loope and pusha daa pop add jp mov mov add or fcmovnu and mov mov and shr pop add dec ljmp mov fisubrl nop add xor int3 fiaddl and pop push inc stos into ljmp and loopne not xchg idivb rcrl mov imul jg add std inc inc and cmc add ficomp pusha icebp xchg mov mov mov pop addr16 pop xchg add shrb inc mov push cmp movsl lods jno cmpsb cmp mov or mov das push outsl mov lret or fwait test mov xor in push mov in sbb adcl sub cmpsl insl inc add rcrb sub scas pop cmp lahf loope,pt add mov and lods add sarl add aam jo sahf enter mov jecxz jb jle mov push (bad) push adc dec push cs dec add insb out stos lds inc mov pop jnp sub push mov add pop mov sub push xchg jb mov into pop push test mov jge and insl test lret call cmp add in ja mov mov rcll inc xchg push sub xchg pop xchg in inc adc cmc ss fistp or nop lods mov loope mov nop in push rcrl jno (bad) xor fnstsw adc orl inc sub loope add mov decb dec and lret pushf iret (bad) call or mov insl xchg aam adc mov jo sbb test push lret xor xor xchg inc sbb mov cld call dec dec es or in and sub test js add (bad) xor sub (bad) in mov aam loopne add fiaddl fadds adc adcb mov loopne xor lods pop sbb jmp loope jle andb addl cmpsl ds xchg (bad) inc lock decl mov ds xor lret and (bad) mov xchg mov add push test mov aam rcrb add repz lahf lods nop cmpsl add jae add loopne xor inc std sub push push pop adcb pop cmpsl mov insb add xor loopne sbb rcll add in push mov push jle mov rcll fs loopne rolb xchg aam test push mov pop add int3 ret shrd aas loopne inc adc cmp int3 sti subl adc movsb loopne rcll loope jecxz and arpl cmp stos lret xchg and sub inc fbld cmp mov mov xchg shll adc cmovo and dec in cmp out jo inc add bound lret and call push and dec mov xchg add cs jnp inc dec fsubl xor add les mov jo cmp cmpsl dec and pop and sub push or inc fidivl xor and jo sbb jl lods into mov push out mov and int in inc xlat ljmp push aad sub mov loope cltd pusha test movsl xchg in sub call jae adc mov add mov leave addr16 pushl dec adc cmp rcrl add dec sahf int3 je lahf add xchg dec mov ds lods and mov out push dec clc mov cmpsb or (bad) aam or inc lcall shll inc jb cmp push movsb mov movsb rolb int3 arpl mov add fdivl (bad) push nop cwtl or ds pop nop sbb and adcl xlat into pop cmpsl jne inc xor outsb inc cmp lods add adcl mov clc sahf pusha dec fadds stc add sarl xchg mov jne xchg scas mov lock sbb mov adc mov in add xor inc int3 (bad) cmc or add imul add roll push pop movsl (bad) call xor leave push repz pop nop enter test cmpsb mov leave adc jnp ret lea jge sub cmp add jp fwait pop or (bad) hlt cwtl rclb lods les add inc (bad) inc jbe mov cmpsb or mov sbb dec sub dec mov bound shld xor insb aam add jle cmp add pushf jg aaa or aam mov hlt mov (bad) mov mov nop hlt dec inc js inc xor sbb std mov test cwtl lock sub in and out pop rorb mov push add cwtl test jbe in add aam inc (bad) addr16 xchg lods sub xchg cmp repz je stos mov or repnz ja ds xor pop inc imul cmp in icebp std add mov xorl fsubrs bound inc clc fidivrl and inc cmpb push nop push dec into mov mov add add outsl loope int3 and push push sbb pop out xor mov mov add mov xor mov add insb frstpm(287 xor ror adcb je mov add fsubrl mov inc lock movsb test push hlt movsb push or add lret enter repnz fidivr ds lret xor sub mov arpl lcall jnp insb add add mov add add shrb jl (bad) stos lods call shr stc push push insl loope add clc rclb xor xchg or and xchg mov adc mov das jbe mov xor ret outsb or sbbb lcall lods dec popa add push insb lds inc (bad) div leave bound pop lods add mov ljmp nop cmp pop or es fcmovu lods push (bad) in and inc xor or popa pop cltd adc cmp bsf or sub jl pop jmp cmp aas (bad) dec push mov or and cwtl cwtl and loopne ret xchg jge mov fs jp dec or test (bad) mov enter stos xchg sub mov mull push mov sarb lods xchg jp sbb mov ret ds push (bad) loope push inc orl (bad) pop daa sbb xor movsb inc mov sbbl loopne adc xor push fs test fldcw inc loopne mov jnp adc test clc jns push sahf gs repnz insl add into mov mov loope or and test adc mov or (bad) mov push (bad) inc inc add and mov add lahf je jne sbb xchg add lods enter jle bswap and outsb popa or and pusha sub mov add mov jb imul or sbb jo pushf adc or or and add fsubl cwtl dec clc xor lret inc ret cmpsl adc shrb rcrl mov mov dec adc in jns pop xor xor jbe imul popa punpcklbw inc and add shl sbb add push addr16 sub adc add mov fiadd adc pop inc movsl mov mov jp mov (bad) dec cmp mov arpl lock lahf or add shlb fucomip pop xor ret (bad) addr16 aas xchg frstor xor xchg or addr16 inc int scas cmc popa test out hlt sub adc ja xchg insl sarb in mov add dec (bad) jo or loopne jns cmp inc add lea cwtl enter imul gs pusha adc dec lods add adc add jecxz pop fwait mov pusha push fmull mov mov mov call mov out jns and punpckhbw lock xchg adc mov shrb add mov and jl jno repz jne cs add jae or rcrl inc leave cmp (bad) gs push cmc out cld add cwtl push inc das sbb popa xor mov add inc sub adc jg cld mov pop pusha jne inc mov pop bound ret fcomps cmc adc push dec xchg mov mov nop sub or clc xchg js arpl or lea cmp dec add and dec lcall jl data16 adc sub mov add data16 cwtl ljmp and adc pop xchg rorb mov dec xor (bad) add clc cwtl (bad) cmp xchg nop mov lret rolb add lea repnz or and dec loope cs std pop and push adc add stos inc xor hlt mov mov rolb and lock roll movsb xchg jl es mov and movsb (bad) subb inc bound int3 jl mov xor das out sbb dec lock adc jo outsl or add enter int3 adc xor and je mov test mov cmp cmpsb int3 sahf lock sub cmp dec rcrl enter inc add mov xor add cmpsl roll imul push mov adc mov add (bad) mov lcall mov add mov lret mov jns or (bad) mov pop dec xor movsl enter divb loopne mov cs enter and or clc stc cmp (bad) push jmp push pop or sub hlt and or pushf (bad) out cld mov pop lcall jne sbb dec iret or cmp pop and fnsave ror (bad) jnp fs in int mov je xchg (bad) mov jl inc test lock push sub sub mull je pop fs mov lods dec dec mov add mov out mov (bad) repnz sahf add cmp insb testl je push adc rol mov add loopne imul fstps push inc outsl clc mov add mov pusha loope add pop push sub shll inc push mov popa sub loopne movsb sub jbe push jae sbb sbb test xlat sbbb jb lds (bad) mov or sahf insb js andl push ret xor push pop into or adc add fstl push xor push adc pop ret cs mov mov xor repz add andl xchg aam xchg in xchg sub jmp mov adc pop ljmp jbe jns cld lret cmpsl jb in or loopne lock fidiv lods push sbb ss dec sub (bad) cmpsl sub clc push loope xor jb xor pop andb and xor scas jecxz fistpll daa push jbe add je cmp cmp xor mov add jb cmpsl xlat add inc insl push iret roll ret inc (bad) mov in in daa (bad) iret jnp push or nop add xchg sbb int3 sbb pushw popf ds out xlat inc add xor xchg xchg push and inc repz in in add sbb mov xchg inc push lret adc ds add mov xchg add (bad) mov inc (bad) in pmaxub fdiv fwait xor and dec test lea add mov mov push sub xchg add push in add lret push jbe addr16 pop mov sub xchg mov loopne addr16 call or dec xor sub std xor icebp xor sbb mov mov pop push inc xor sub mov aaa adc rorb mov inc push xchg daa rcrb sbb rorb jnp incb jmp call inc xchg addr16 mov inc adc int sahf mov ret push imulb add in das gs pop (bad) jl xchg add (bad) imul gs inc push (bad) test sub push mov js je xorb bound sbb push rcr jnp test jge push into and aas xchg and shrl inc movsb in mov loopne rorb pushf nop movsb sbb xchg sub call mov gs mov js sub pop test out adc dec ss or fstpt dec mov jecxz sbb mov add mov fcomps adc jg dec (bad) push cmp sub insb sub dec mov adc jb add push add in cmpsb push or pmaxub (bad) and lods aaa rolb push mov popf xor pop jb add inc inc pop outsl fdivs adc scas push jl add insb or in jmp dec (bad) loopne mov fldl stos dec pop lods jne push (bad) mov cmp mov and sbb and xchg aaa mov mov cld gs push test out es movsl ds cmp add icebp dec xchg sub enter cmpsb or addr16 add sbbl int3 addr16 or and mov dec push pop popf lock add mov addr16 dec (bad) (bad) mov andl aad push fwait iret xor sbb popa (bad) mov loope aaa xor inc push xchg mov add enter mov sti and mov mov or test xchg cmp xchg les and sbb in lods cmpsl sub in mov adc mov dec inc inc mov test sbb fist ja insb ret add xchg adc inc insl cmp add xchg sbb (bad) adc test repnz lea loope and inc add cmpsl or xchg (bad) adc jmp mov mov sbb push add pop pop inc inc lock add fdivrl add pop mov scas and sar (bad) cltd add daa rcl or sub xor adc cmp push push (bad) inc insb pop out pusha ret jo push popa pop stos xchg or dec push push fnstsw sbb sub pop sti ja add push xor dec and les mov fsubrl gs sbb dec in mov xchg call aam loopne and push mov pusha push inc int mov sbb xlat ror push pusha lret lock dec jns or nop xor cmp xchg (bad) nop pusha add dec add (bad) mov andb cmp roll js sbb xor jl jb aad test mov jb nop sbb push xchg jl std insl lock add dec repnz cmp sub rorb xor lea push insl shrb shlb ds add addb ret movsb cmp inc add inc and jmp add xchg pop mov inc xor clc lret sub ja xchg les mov inc cmp sub cmp or sub mov dec test insb js (bad) inc or xor xchg and jbe pushf cmp pop and hlt xchg je ds insb imul pusha enter pop xchg mov repz pushf lock mov cmp sub jl inc mov or aad in jmp call (bad) lock outsb rcrl cwtl fmull jp mov int3 sar pop xchg out mov shrl dec dec jp add mov cmp xor sub imul cmp inc fist sahf jb or jnp in inc loopne leave push call lock je dec pusha movl imul ja (bad) ret out shrl cli add loop and sbb lahf ss fadds cmp adc pop rorl std pusha inc add push mov cwtl dec mov leave mov data16 popa bound popf repz add jbe jo ss stos xor out clc pop call shl or jno jo xor fnstenv inc sbb in push mov or push xchg or nop les fdivs fmuls mov mov cmp jbe enter mov (bad) scas add cltd adc sub add sub (bad) es movsb sub aam cwtl testb clc (bad) mov into lods pop xor dec (bad) fcom sub popa mov sub inc (bad) cmp les dec rcrl add xchg inc jno lahf mov jmp icebp test clts movsb es push pop mov push sub adcl sahf mov cwtl ret movsb or repz mov fdiv js and add mov jl adc and cltd sarl jno dec cmpsl faddl (bad) in xchg lret mov dec dec clc sbbb ja or aas sub and push jns pop inc mov scas sbb ret js add xchg sbb shlb pushf add mov mov xor dec call andb cmp dec push sahf cli push das fnstenv mov (bad) mov pusha dec call sub cwtl add repnz sub icebp xor pop inc call cwtl push lock insb pop or and add jl stos adc xchg xlat sbb (bad) orl pop add sbb fimull lahf das stos out pop dec (bad) mov clc or inc std pop adc int3 dec sub mov dec sbb in or inc pop ret sub pop jne jg mov xor lret fdivl sbb add outsb dec fmul scas dec and jb pop pusha adcl fbstp mov out cwtl push dec or out imul inc pop xchg dec add scas push lods push rcrb pop cwtl cld xor sbb lcall arpl xchg jl out in cmp jae jge sbb sbb dec pushf and cmpsb test hlt dec in fsubl push inc ret add dec mov mov fisttpl ret mov incl push sbb dec push mov or rcrl rol push xor mov inc push out xchg rorb nop mov das push xchg lahf dec adc mov adc je sub cmp adc push andl push and test push aam inc sbb xlat fbld movsl cmp faddl popf jae sahf dec lahf mov or jle xchg push addr16 mov ficoml dec lods jo jge js ffree jae add mov cmp adc pop pop test out mov lods int insb lahf rclb jg fmull add iret popf lahf inc (bad) sbb addr16 xchg sbb push add rcrb inc test pusha mov jmp out mov jae dec adc adc sub adc add cltd mov and jecxz shrb cmpsl xor faddp sbb mov arpl fwait das xchg sbb lcall or fwait ret (bad) dec std pop arpl jp push das pop int3 or jbe inc cltd pop jl sbb addb pop repnz js mov add mov jmp sub sub sbb dec jno mov ljmp dec cld pop inc cltd mov add mov and push add add pop or nop fidiv mov mov xchg mov nop int add mov sbb loopne or cmpsl aas int3 pop movsb pop les sbb out sbb jbe mov mov aas pop inc cmp popa fsubrs xchg nop cmp faddl xchg push (bad) int3 mov orl push mov or mov xor mov push xor test cmp push sbb jo cmp pop bound pop inc dec cmpsl add lods dec dec rorl daa ja mov and repnz test daa arpl sub icebp mov hlt mov (bad) out cmp sub cmp xor mov inc add sbb xchg or lock cmc xlat cmp mov lea int3 imul push or inc int xlat (bad) mov cmp loopne pusha sbb lock xor jmp shl call pop sub fstps cmpsl and adc lahf orl iret mov push ds mov adc fiaddl idivb cmp (bad) or sbb push add jmp jo add out mov xor sbb fwait shrb fdivrs mov mov daa xchg cmp stc sub dec rorl cwtl mov fsub push adc push mov ds add mov (bad) xchg fadd mov sub inc repnz cmp inc int3 popa aas shlb sub int3 mov fsubl (bad) push jo shrl dec fwait test xor or xchg adcb inc or cltd mov push es mov nop adc pop add sbb pop hlt fwait push adc add andl inc cmpsb ljmp mov icebp out pop cmp (bad) adc jg add (bad) ret pop push mov push mov insb jns nop hlt addl sub mov (bad) xor mov inc dec cs sub adc rcrb pop loop lods jp add leave rcr outsl test cmp inc sbb sbb fs sub dec (bad) mov dec int3 mov and mov rorb xchg xor pusha jp clc pop adc lock or xchg sahf sub mov int3 repz andb and xor ret mov adc push cmp adc cltd add xor mov (bad) jle ljmp pop (bad) stos and or or cwtl or mov xchg lock sbb sbb in fdiv xor push nop std add inc pusha sbb dec cmp sub mov pop dec loope outsb out lock nop stos test jmp jl jge pop jae movsl or std rcrb sub sbb push inc in gs push loopne shrl hlt mov push pusha cwtl xor or loopne mov stc cmp push mov push push xor cmpsb pushf add in jecxz arpl and or test insb loopne stc cmp pop mov push jmp pushf push mov xchg xor sub xor push cmp or adc xor and test add arpl int sub xchg rcll stos xor adc dec add out sbb rclb adc jp dec stc mov sub hlt fdivl or loopne or int3 adc sbb push xchg fcoml add mov sub fcmovb lea mov cld push pop xchg add sbb es out orb bswap pop xor or incl cmc sbb add scas adc cmp push dec or es pop pop test out pusha fcmovnb sbb arpl pop shr sbb mov pusha repz lds inc xlat (bad) test dec lds add add imul or cld mov mov leave shrl subl mov call inc rclb dec add sbb loop,pn test or rolb popa (bad) shrl addl stos or adcl jno mov out xlat fnstenv and and push sub lea and shrl aaa sbb push mov std inc mov xchg aaa sbb mov rorl out pop fs push and fisttpl les add lds add unpckhps add inc rcl adcl xchg push mov push xchg xor mov aad ljmp mov lock jo or sarb or cmp ljmp xchg js roll call or inc pop imul (bad) ja inc dec test imul jnp push loopne mov call dec bound push and pop seto rcrb sbb cmp inc ret and add (bad) xchg pop add ss andl rcrb fs mov xor add mov sbbb movsb sbb or xchg pushf or cmp dec cmp or lcall subl les push dec sbbb xor rorl int js jp (bad) popa push adc (bad) daa scas test imul sarb add inc enter xor or shll inc js mov push fdivrl mov jo aas mov pop stos and mov aam ljmp xchg and out fisttpll in push add and mov cmp push (bad) loop arpl insb mov out jmp cmp aas xor or jno xchg orb out push jge sarb inc lods movsb cld mov mov cmp (bad) repnz in jmp sbb pop out push outsb inc mov jb call dec int iret cltd aas repnz and mov mov test stc lock add ffreep xor (bad) lahf and in add pusha push (bad) push add das dec or shr nop pop or loope hlt sbb inc (bad) fiadd addr16 hlt xchg mov push inc rcrb (bad) icebp shll push decb js mov or rol repnz push (bad) pop addr16 push mov mov fmuls hlt pusha jo mov inc mov bound or stc nop or insb repnz icebp push push in shr cmp sar test add test xchg xor push out rorl sti and add aam testl add adc fstps push clc (bad) lock les push push (bad) je fidivrl inc jge loopne sub gs nop lcall cmpb cmc push inc dec sbb lock and jecxz mov push adc es add into pop inc sbb add divl mov fcompl clc data16 testb add lahf mov out add sbbl inc push pop sbb adcb fwait sahf jo xchg call cmp jg add pop cli xchg sahf dec mov repz adc or hlt fs ss insl rclb cs or fild inc or mov pop push push or rolb insl cs cmp adc add addr16 push inc enter sahf rcrb fdivs sti js pop ljmp add movsb pop cmp rorl bound pop aam add jp fdivrl mov pop jmp hlt mov cmpl rol xor das fsubrl test sbbl adc pop add add mov add mov push (bad) out add jle dec pop adc pop cmp jge mov sub js adc cld dec cmp pushf or pop addr16 sub out xor into xor dec and add or mov shr dec out xchg sbb mov push and mov inc mov sbb in xor fdivl int3 add aaa clc mov test mov mov mov out dec hlt or push xchg (bad) xchg cmp push xor pop out nop rorb in mov cmpb inc int inc loop push cmc and jb loope outsb xchg out loopne mov ja addb ljmp jns lcall lock mov mov rorb jno inc xlat add inc dec (bad) nop mov movsl cmp scas dec sbb or xchg repz or cmp jmp mov fwait pop xor add pusha mov cmp xor and inc aad dec imul (bad) movsl inc add jne pop dec outsl cmp (bad) add pop imul jge ret and bound inc into nop test das add pop adc (bad) test pop nop or testl add cltd in pop negb cltd fwait mov sub sbb inc cwtl or mov or test mov jno sti dec push addr16 push dec inc aam int3 pop dec loopne xchg bound mov add jecxz inc cmp lock (bad) ds pop sbb cmp adc or xchg push cmp roll shrl xchg iret push xchg loopne xor pop mov scas cld dec test mov mov stos push xchg cmp in push mov cld add push js mov sbb add outsb add cmp orl add inc std and fdivrs pop outsl inc mov in push shll push mov les jbe test rorb test aas ret cld dec imul add and and and hlt orb repz (bad) jne push xlat xchg les adc push xor xor test mov loope popf in or mov test sbb adcl and imul mov push push addr16 push lcall idivl mov adc aaa add add gs jmp rsqrtps pop push inc rcl xchg sub push adc xchg nop sbb cltd mov mov dec xchg cld xchg xor mov cmp inc xor add xchg in pop adc and movsb adc xor nop sarl adc jmp je pop leave test or cmp push add call jae pop or add add cmp adc or int3 mov mov or push aas adc call xchg sbb pop pop insb mov clc pop mov test gs inc dec push les es jecxz pop aaa daa hlt loop lods mov push and add xlat enter inc rclb mov cmp xor mov pusha cld loopne sub mov pop imul pusha call add mov cs xor dec push push (bad) lds or orl mov push push inc inc mov je loopne loop loopne (bad) lock clc call inc adc xor ret xchg std pop add imul aam sbb es add mov xchg (bad) shlb (bad) popa cmp movsl lock and loope sub mov aam scas lock popa jo shr in xor out jle sbb sahf xchg (bad) div jle daa cli inc test test mov in sarb jmp js cld cmc and mov cmpsb or and xor xchg clc pop pop ljmp shrb sbb addl pop (bad) mov aas not sub push add int3 and leave cmp cltd add in jmp inc rorb cmp cld scas test js inc aas aad add loope jno jl sar adc push (bad) push push lea cld and adc sbb loopne (bad) popa jno push and add aam add xor fldt rclb out adcb lds cld cmp loop add fs and push faddl mulb sbb push push xor adc xchg call inc pop xchg and in add sbb cltd add push add mov sbb rol xor cmp cmp fsubr dec add or ror cwtl les std jp mov inc and out fst ret xchg xor sub push test mov sbb (bad) repnz lods fnsave jne add cmpsl ret test and adc inc mov jnp xchg popf add std jo mov xchg andb cmp fisttp xor mov gs add fbstp in sub xchg sbb inc xor cmp clc insb fs sarb xchg cld jl stos aam nop xchg mov mov mov test (bad) pushf mov or push out inc int3 push cld test add xor xchg pop xor mov add rolb inc adc and and or cmpsb mov cld inc xor mov loope aam cmp cltd cmp dec loopne add push cmp push mov int3 ds add es add and mov lret pop pushl loopne dec add push add or mov add sahf add inc or push mov xchg dec and psubb or xchg (bad) int3 add movsb out dec loopne add sub (bad) bound dec inc pop pop inc mov push faddl sbb xlat les outsb ret repz sbb mov add ljmp in les cli xchg fiadd add or call sub mov out out adc mov dec inc adc pop bt sbb lock xor leave push call push (bad) iret pop jp push and int ljmp ror mov mov les mov fadds sub xchg inc nop or incl push pushf addb into push sub (bad) sub xchg loopne cmp cmp daa push nop mov xchg adc adc fiaddl mov in pop dec inc clc mov lock pshufw rcl insb cmpsl js lret setns decl add into (bad) call pop cld pop jno push and clc enter add (bad) add insb mov in inc into or sub stc imul or hlt cli adc and leave popa push jp inc fcmovne shlb aam in pop outsl adc movsl cli inc movntq out sti jnp add cmc mov xchg cmp roll test fsubr add inc rcll rol mov jle cwtl mov jbe cmp sub mov pop add add mov imul and mov add iret dec out and clc data16 js in sarb add sbb sbb cld sub or and mov or add imull mov cmp outsl xchg xlat scas cmp mov inc push push mov cmp rclb xchg cmp xchg inc jp sub jo jns test repz inc ljmp jge shrl mov adc cltd dec dec call push adc pop add mov cld mov les nop xchg sar add xchg jge lds loope add sahf jno fildl xlat dec lea inc fs cld hlt es mov or cwtl outsb mov mov sub adc lahf xchg or pop out stos subl sti and and xchg ds dec arpl push mov sbb rorl inc ret test adc xchg mov lret orl adc (bad) sub cmp js cmovo sub mov mov jo inc or add fiaddl loop iret cmp je addr16 push outsl test mov das add and mov push femms sub or inc cmp mov add sub aam fildl dec (bad) mov push mov xor stos cwtl add lock addr16 add jp or bound xor aad mov clc jae jl aaa cmp fs xor jae or push sbb or dec sbb adc adc sbb inc mov xor out adc jo push rolb inc xor cs xchg loopne in das nop pusha mov imul mov sub add aad push test andb loopne fild dec push xchg cwtl add mov push mov or nop jb cmp lods adc xor lock cmp xchg inc xor sub ret ja icebp or mov cmpsl or adc getsec inc pop mov inc mov mov inc cwtl out dec pushf mov add icebp cmc add jae push cs enter arpl pop inc inc or pop (bad) mov (bad) push (bad) (bad) fcoms js cli jnp add lret sbbl pop inc mov sbb cmp lret negb pop inc out xchg clc dec sub dec hlt adc fcoms fist mov mov sbb xchg and movsb fadds adc and add ss mov mov stos xchg pop mov (bad) cwtl adc imull lock pop and adc je cmpsb inc pusha mov inc sub jo sbb incb xor sub adc inc mov cld or sbb dec xchg or xor adc jge js inc movsb (bad) xor pop and dec loopne sbb icebp mov add cmp mov jl sbb fcoms mov mov out xchg sti jbe,pn out jne fucomi jg or cwtl dec stc xchg add lds es push loope xor addr16 test insb sbb lret orb sbb mov jbe (bad) jl sbb mov xchg jecxz add or mov insb movsb rolb icebp stos push jl or (bad) add (bad) cld xor mov jb lock or rcrb cmpsb push mov movsb inc adc or rorb enter sub jg pop das cli adc cmpsb flds into push mov add xchg add sbb add mov or inc test in jg popf ret mov imul or sub lods add xor int xchg call add (bad) cli adc cmp mov (bad) pop lahf es push mov mov xor and mov adc pop or and inc jo lcall xor paddsw push sbb jmp jge ficoml into fmuls cmc divps push push push aam push ret lock add std inc pop mov inc pushf addb pop shlb rol outsb pop jae add mov decl ret or nop mov sbb xor hlt mov adc mov aas (bad) dec test addr16 (bad) push mov add insl sub test inc repnz inc sub adc fiaddl lods add xchg sub lock add fimul dec xchg lods adc cmpsb rcl add shrb mov inc movsb fimul arpl push (bad) out jmp mov push mov cld loope cmpsl add push popa test mov movsb pop loopne inc leave and out mov jno or xor add lods stos add dec mov adc in andl dec pop mov jmp jmp fs xchg lock shrb test fcoms subl shrb or movsl sahf mov cmp pop add jno xchg sbb cmp xor mov mov mov shlb lcall sahf or cwtl mov movsl mov fs leave pusha adc ds pop mov xor push add sbb leave je fwait cmp pop ds jmp loopne clc jno mov jle xor jo sbb rolb lret aaa and enter cmp sub fsubrl dec dec loop or out inc sbb lcall xor cmp sti or xchg in outsb (bad) pop loop cmp dec xlat cmp sti push xor xor pusha mov leave adc (bad) mov rcr and lret add mov enter sbb (bad) idivb adcb sar std ss gs int and push mov (bad) pusha cld mov sbb loopne xchg jl rcrl mov js mov inc arpl cmp sub mov lods add dec mov (bad) arpl test test sbbb mov mov inc enter pop dec pop push push scas ret dec and mov mov xor rclb imul imul mov adc mov or nop js jo jl push mov mov inc inc mov adc incl enter es sub add notl pusha mov fcoms fnstsw mov mov test pushf imul jmp cmpsl mov xlat push mov cmp cs mov add es mov push movsb inc jmp out mov inc add push sub pop or (bad) repz cli nop add outsl add cmpl int3 sub push cmpsl fadds lcall pop push or addb rep or cmp sub popa jne icebp mov jno add out sub rorb fsubp jae rclb sbb lea insl outsb stos sbb push in and xor jb outsl loopne fsub sbb mov lret clc mov and sti push popa xor and xchg hlt (bad) sarb add mov cmp push and cmp and xchg fsubr cwtl shl adc and fildll int3 aam and nop xor jecxz je xchg dec pushf jge add sub cmc adc mov mov pop dec cltd mov pop das test xchg mov sarb or mov shrb pop shl adcl outsb xchg push stc sub or push movsb cmpsb sub sbbl add icebp ljmp inc pop aam repnz scas loopne adc es call hlt lahf mull sub rcr jo,pt cmp push fnsave repz dec pop in jecxz pushf dec and cmpsb pop repnz push (bad) xor ds out cld dec mov mov mov leave mov out add adc fucomp mov es adc inc stos outsl pusha jo xor and add mov frstor and test orb xchg arpl xorb push and adc std xchg test pop cld and (bad) aam test add (bad) inc xor sarb mov js xchg sub or xorb xchg jns pop mov adc pop inc loopne pop xor cmp dec mov ret nop cwtl xor jb xchg jnp inc xor jle cwtl dec xor push in adc pop test xchg cwtl xor imul xchg hlt outsb mov dec push mov lods dec adc add pop mov rcrb dec repnz mov mov cwtl lods movsb sub add or push js mov jnp jo mov xchg cltd mov add aam and fisttpl pop sbb pop (bad) rclb outsb les in popf into jp jno add loope mov xchg xor or nop xchg jecxz mov inc add or outsb sub push sub les pop pop test sub add leave push pusha not cwtl inc lcall call mov lock addr16 cli cmp inc mov scas mov incb aaa sbb cld cmp ret and add adc dec adc inc jnp add in shrl les adc pushf and dec fnstcw inc jb push mov add imul cwtl sub test pop outsb xchg call adc push fs ss jne (bad) call call call xchg sbb cwtl inc sub and cmp sahf in movsb xor out or add fnstenv imul ret jmp aam loop sbb and add cmp fnstcw roll in pop add add push jbe or or or mov sub pusha push or push jb rcrl adc insb add xor xchg in (bad) or xor lock lret xorb mov aaa sbb and test xor and or lea call mov (bad) xor hlt jl sub repnz cld bound sbb mov mov ret popa sbb xlat test xchg movsb mov out push pop mov or ret and sarl pop mov and add jb mov test push out sbb push pop jge add (bad) sbb inc push inc loop cmp (bad) lock dec or jp mov je lods sbb rcrl mov and dec fwait cmp fcoml inc out jmp adc cmp mov test (bad) push js bound add pop rolb jb (bad) std notl sbb inc xchg dec in push clc push lahf add aam and jmp sub mov xchg or cmp inc add mov imul and jo enter repnz pop pop mov push lea mov imul inc (bad) test and push rol negb mov xor loope leave je out push cwtl pusha push popa ljmp dec rolb mov mov and add cwtl in pusha lock fild int3 addb gs adc in jp pushf loopne dec and in ja adc add jb insb adc loopne cmp mov pushf pop add das lret pop xchg ss mov pop xor je push xchg cmp int and add fisub inc cwtl sarl xor dec adc adcl cmpb sbb pusha and cmpb add pop pop jecxz dec lret loop repz sub dec mov inc stc push dec or mov sub pop inc and lret xor leave movsb repz cmp andl inc (bad) jecxz stos jmp mov dec mov jp add push or push jmp fiaddl shrl div mov adc lods insl add pop or call sub add jne mov cmpsb fadds lods movsb cltd cld (bad) es mov add add cmp mov fstpl cmpl push jp add ret sbb pop push into mov pop stc pop jnp in push psubsw lahf out add (bad) inc cwtl insb mov loopne inc ja xor mov jmp add clc leave add fwait push add or xlat shrl inc fdivl aad pusha xchg movl add pop dec pop adc test les or xchg adc mov inc add jo lcall cmp jb add mov sub push ss mov iret bound rcrb xchg add insb sbb stos outsl aam push add pop mov insb out sbb adcl cltd cmp into xor ficoml repnz imul jae push aam and fisub and cld adc jecxz or fstpt ret fcoml jmp add ror jb (bad) loopne fcompl jno lods or repnz sub out test int3 (bad) movsl outsb dec adc pop nop lret lahf enter inc orl or adc lock cmp mov sbb inc in add aam pop dec adc aam dec cmp sub into pop push push insl mov imul jle cmp inc add and sbbl lock mov or mov inc stc jno popf lods out push shl loop mov or test dec sbb or fcmove dec pop and xchg mov jo scas daa (bad) lock xchg aaa push adc (bad) pop hlt stos mov push sub bound clc fwait nop xchg mov sub mov ret lret enter data16 add mov out ret addl repz pop jne into add sub mov daa push dec mov mov and xorb jne mov jge jl add lock adc jae jno insb sbb ret add push inc pop xchg shr and aaa dec sbb jbe pusha icebp cld fs out lret xor add xchg repz ret and or cmp adc dec mov imul mov mov mov and lock addr16 xor lret pop xor sbb or and dec mov dec dec dec dec add cmpsl repnz sbb or sub je mov inc add jnp mov shrb in mov lcall loopne lods or fild cmp pop mov pop roll mov mov nop mov mov push test push (bad) xor int and sti test inc mov pop xor xchg xor mov add rcll mov lock sbb int add xchg cmp hlt ds adc (bad) push or mov outsl sbb loope ss cmp inc dec (bad) pop loop test push pop clc and loope jecxz push fadds add call add push push mov add xchg xchg sub mov push sbb mov iret xor lock mov das das repz pop int sahf and mov inc mov xchg fsubr mov push mov aam push jg loop mov in xlat test mov (bad) hlt xchg mov push jle cmpsl xor ror adc cmp dec test (bad) mov mov aad cld sbb sbb inc add (bad) adc es add xor xchg fdivrl and xor jns inc xor pop aad pop outsl ds or test test dec jmp mov pop rorb sub cld adc sub inc movsl loope,pt push addr16 mov mov add scas jl sub (bad) cmpsl add sbb mov mov inc mov es pop jb fdivs and rorb rorl fsts cmp add jecxz into or add insl cmp clc shrb jmp lea add ss icebp aas repz mov jl unpckhps insb sub push jbe fsubl ret adc jae pop (bad) jl sub cltd insb cmp ss nop (bad) dec add mov clc push and lds (bad) cmpsb inc call xchg xchg fwait inc adc push pop adc cmp and test pop mov xor int3 js adc push movsb and and sub sub cmp sbb mov stos jbe mov push jg das xchg adc lea orl mov cmp mov or cmpsl push mov rcrb jp enter add jl mov inc and enter push bswap call jecxz enter adc sbb arpl pop jae cmp push ss cmp (bad) enter inc loope add stc push dec sub ja pop mov cs lcall cli roll icebp pusha rcrb fbld and shl sbb add outsb iret in in pop xor lock movsb push ss fstp gs mov add xor lahf roll push sahf lret outsb fisttpll clc in or cmp pop sub mov push (bad) leave aaa xor sarl test ljmp sahf call push inc and imul repz popa je add scas stos loopne test add push scas pusha sbb scas or sbb add js iret mov xor lahf push xor dec ljmp mov or push inc iret xor jne and ss dec add fnsave (bad) shrb jecxz adc inc xor cwtl gs out xor sub sub jmp and or add loope mov les aas mov je adc pushf cld dec inc cmpsl and add gs fs mov in dec or adc cmp je dec cwtl aam and ret lcall or rcl mov iret sarl inc mov add scas mov dec sbb sbbl cmp mov fbld dec push jp stos push fsubrs mulb ja aam sub enter and dec or scas sbbl adc sarl cltd gs add call fistpll mov adc mov nop loopne mov xor rcrb add mov fiaddl pop fsubrs adc in jl dec push dec call rcll sbb and rclb dec in add into call push push xor add jl and mov sbb xor mov add cs testb nop cmp add dec mov movsb cld xchg in movsl testb mov add add mov push call inc mov xchg fcmovb jo xchg push and add cli test and jmp add fs cmp (bad) aaa fwait scas cmp dec mov sub pushfw lds ljmp push clc pushf dec lods add dec mov jb jl xchg fisubl test xor pop adc and aaa les mov dec lret and andl push insl pop ret push loopne and mov cwtl dec cs sbb gs xchg mov mov cmp pop and enter movsb mov push mov xor (bad) jo repnz imull xor sub test or xchg lahf lods andb push cmpsl and xchg into sbb add fisubl shrb adc and gs xor lret push jbe pop push jecxz add inc int3 mov cmp rcrb mov loope sub push sub inc xchg fsubs add ret pop mov sub enter sub pop movsb mov pop int3 mov or mov mov add xor lods rol cltd add lods or or mov gs add pushf jbe jo push xor dec jne js jne stos add div sbb scas dec cmp das and jl add jo out ds xchg jge or (bad) sbb rcll loope loopne in mov sbb adc or jo lret lea adcl gs loop cs push test adc (bad) dec mov and iret in ljmp cmp loop scas fcomps js mov jl clc push clc pop (bad) pop push push adc adc mov and fisttp lret mov jp out push test mov int dec (bad) pop mov inc mov fnsave add mov arpl lret pusha jo push sbb push adc add jle or sub pop cwtl movsb and push jp loop push jl xor cmp inc add push int3 movsl mov lock xor mov pop lcall pusha int3 int3 or (bad) sbb fiaddl mov mov xchg data16 hlt add push cmp pop lret sub pop mov or stos loope xchg data16 jmp pop sub inc insb ljmp dec cmp cmp es sbb and and mov addr16 add jne andl stos in add and fmull or int3 hlt mov sub add push lods sti mov add and and pop pop (bad) pusha pop rorb addl jp (bad) jo jbe add ljmp or jmp sub xchg add sub fwait in or lret add add std adc loope sbb push xor and mov scas pusha add inc shrl cmp js shlb cmp mov sub cwtl insb sbb push pusha dec xchg popa jg jae add (bad) cmpsb enter inc mov lret or pusha js dec adc dec sub dec ds jge push mov enter inc xchg pop and xor xor xchg jbe adc sbb rol test push fadds dec mov adc sbb add push mov pop dec push mov cwtl add out xlat pop adc scas pop cmp lods insb mov add cld xor xor pop leave mov dec (bad) mov (bad) sub pop and inc add pop xor mov scas pop adc je cltd add xchg inc sub js stos and shr cld fadds rcll push call inc bound add or fadds negl call adc add lcall mov lods add dec push pop rorb xorb fwait add jae jmp cmpsl jo inc jg xor jp iret ss pop addr16 pop inc xlat xlat loope mov sbb inc jnp and add xchg sbb cmp mov dec and pop push xchg cmpps inc and or pop inc test ret dec (bad) popa leave popa insb adc and sub push sub push shr std sbb add nop push sub js xor imul add cmp mov or mov and loope push xchg lock sahf add stos mov imul int3 shlb clc sahf sbb cmp and or dec push pop and sub in (bad) ss jne repz jmp push sub jmp cmpb mov add pushf xchg js sub add pusha xchg jecxz nop insl loopne mov push cmp push add adc mov int3 xor jo test xor add xor nop or dec test jge and xlat cmp je and mov add scas mov or dec jnp mov cmc mov xor loopne jl add cld xor inc mov add stos repnz sbb xchg rcrl push sbb mov arpl mov repnz cmp adc call ljmp mov inc adc ret push and into add add or dec in sahf jl mov dec xchg test pop cmp test test and mov cmpsl mov and out shrb push dec jecxz out sbbb icebp cmp sbb outsl popf cmp mov xchg xor (bad) pop call aad pusha pop jmp pop inc out jns sbb lds js int3 jns sahf xchg adc jg and loopne add rcr cwtl sbbl aas mov cmp mov sbb roll in xchg push sbb mov call lcall xchg nop and add jb idiv icebp and shlb adc fcomps mov in test mov iret popa mov xchg xchg cmp xchg loopne nop cmp push cmpl mov and add and int aas in out add iret push add mov test pop mov clc popf xor cmp dec add cli out scas sbb cmp cmpxchg negb sub fmull and adc pop add les dec xchg nop test dec int sbb or jmp sbb mov pop shr and add pusha and or xor jmp (bad) mov and sbb fwait cs nop mov lods add insl jne mov mov call sahf negb sbb xor pop jb add fistp mov test add imul mov push (bad) lock jge (bad) xor dec cmp cmpsl xor pop pop xor sub add cmp sahf push aam fwait xchg push xchg popa hlt test inc sbb aad cmpsb add idivb inc add mov lret xor outsb push jb jno mov es push cmp xorb dec in test cs movlps xchg add popf ss icebp bound pop (bad) sbb push lods add jae or cmp add sbb add fwait imul in mov ljmp call hlt mov push int3 mov call cmp pusha sub adc cmp sub inc lock inc sbb jle push mov jg test sbbl cmp push jle pop xor subl pusha cld clc mov mov jecxz daa xchg pop cmpsl mov inc out popf imul mov outsb je pop pushf (bad) xor add lret xor out test or fildll movsl push mov dec cmovno movsb mov in push and xchg (bad) adc test mov xor loopne mov and mov loope xchg data16 mov push ljmp mov xor stc cld inc in xchg mov xchg sub jmp popa scas jo insb sbb test inc enter pusha and icebp inc stos xchg fnsave scas lock mov and cmpl jg out sahf aas out lcall scas xorl xor mov dec popa jbe xor cmp add pop push leave add mov push sbb xchg pusha push mov out movsb mov inc addr16 out jle pusha repnz rcr std inc cld and dec push loope stos xchg push xor js mov mov stos adc push sub pushf or lock dec aam scas sbb jnp adc sub mov loop into int3 push lods lret leave addl mov es xor jmp pop sub cmp (bad) ljmp out add je pop les icebp mov inc idivb adc or and div shlb push xchg movsb add mov xor js in sbb dec stc mov dec dec push adc and push cmp mov or lret jmp jl lock shr cmp push imul mov scas loopne mov in mov sbb sub sub or mov cwtl jecxz lods mov aas fsub aaa add add xchg fiaddl xor pop cmp in fisubr imul dec dec in rcrb and xor iret jnp sub outsb adc aam nop ret jbe xchg and pmaxsw inc in int3 cwtl insb adc cmp push sbbb cwtl add clc inc lods xchg loop add mov aaa out out fmull cmp icebp nop test aad ret (bad) lret fs dec mov pusha lret fcompl add dec push aam mov cmp pop or jno mov test jno xchg dec cmpsl adc popf and imul push or aam shlb xor sahf xchg aam inc push mov (bad) mov mov add scas data16 in jge fldcw je adc adc jl add sti xchg mov lods add inc cmp test or popf jae fdiv adcb jg ret push cld sub dec je and pop movsb add xor jns or mov and ss faddl inc sbbb cmp clc sub inc inc push sbb xor jge xchg pop out xor rolb rorl mov cmp clc movsb (bad) jmp fs add push aaa int3 inc cmp mov mov add sti jmp add mov mov mov fwait jno mov js test dec nop cwtl sahf and push or movsl int3 repz mov xchg or fwait jge inc in cmp mov xor push jnp test in cwtl rcrl push add push mov inc sub loope mov addb mov cs les jno les jo cmp adc loope xor shlb es xchg xor adc ljmp out clc and (bad) (bad) mov xor inc lcall mov movsb jno push mov xor std iret rol add push mov loopne movl flds add pavgb push out and pop xor scas jecxz sbb inc fdivrs mov mov push jg popa cmp push pop loope xor pushl cmc dec aas mov loopne xor (bad) jb sbb adc orb push mov mov lods inc in popf lea scas add push repz (bad) aad jecxz enter ret (bad) jb add call push test mov stos mov cmp sbb fucomip subb clc mov (bad) nop test cwtl sbb mov addb cmc lahf xor ror aad mov call pusha jmp andl lea sbb es add shrd daa add mov mov inc scas outsb clc imul add push daa int3 pop xlat in cmp cmp pop and imul pop insl call cltd loopne es add adc mov mov mov dec (bad) fwait mov sub in pop pop jl mov mov mul (bad) or pop ljmp push mov cltd rclb jl fistpll adc test dec stos mov into jae xchg ret push sub xor sbb in push idiv push mov (bad) int add cltd mov insb clc into mov sbb and push call sbb or mov mov in add lcall ds mov popa sar jmp sub push or icebp push xlat mov or dec jbe add fstpl push push insl mov jp (bad) xchg loopne test add inc push push mov inc pop add icebp imul mov xchg inc loop sub cmpsl (bad) and (bad) cmp aas pop dec adc xchg push in and or adc add je andl or jl ret sub ljmp in adc inc adc out xorb jle je fmull sub incl icebp sub inc mov cwtl add mov call clc xor xor xchg pop mov sub add cld les adc fwait jecxz mov adc jge subb mov adc jecxz ss jmp cmpsb cmc push jp mov (bad) les or loopne mov push lahf adc add cmp ja add push fwait mov data16 hlt add inc mov xor insl and mov imul sub add mov iret fadds cmp popf mov add xor cs scas call jge mov xchg mov xchg cmp out dec ret mov call inc loope hlt cmp mov lock pop pop push push pushf cmpxchg aad test inc mov outsl insb push and dec aam ja mov xchg stc pop mov adc xor jo sub mov mov sub stos fdiv lods pop push (bad) or adc and mov mov sub insl les rcr mov (bad) push (bad) push dec call push fwait dec mov push jo roll mov pop aam aam out adc xchg jae dec mov vpshufd xor les popl aaa clc ja add mov inc dec mov rorl jbe add dec and addl xor mov push ja sub mov sbb in or xor lds mov loop add cltd xor xchg dec xchg sub repnz rcr adc jae and jp out mov mov test rcrb (bad) mov and push sub sarb adc out ds fiaddl or subl in pusha or mov addr16 add jns push jmp pop push push shlb sbb mov sbb add pop enterw add std out insl pop sbbb push in ss add outsb fstpl nop inc outsl xor movsb push imul jmp mov cmp stos dec push pushf lods xchg jns add mov add push sub pop test or rolb lcall or les or lock mov and loopne movsl fcoms push xchg dec inc sbb inc push shlb add jge mov pop jnp nop or and or push shl xor xchg hlt es imul xor and loope or lahf out or push rcrl and inc mov lds ss leave jp inc add mulb inc pop adc mov stc add jo pop xor loope data16 insb fsubl jns mov (bad) aaa dec pop push and rorb mov sbb dec ret (bad) ret nop subl out dec ss add lret (bad) imul mov test (bad) je and adc and mov pop cmp add pop dec adc outsl iret lcall arpl sub nop addb pop inc je adc xor sahf ret stc jmp cs add fwait jae pop lds loop outsb ret xchg dec xor out xchg inc push dec dec adc cmp gs dec pop in js jecxz adc fistl insb in mov das mov pop sub ja xor jb push (bad) bound clc sub jo out or dec loopne mov sbb adc or ss lahf add adc and daa sbb fisubr sbbl mov cmp or add cmp or loopne inc cmp add sub sbb add inc add mov insb pop pop leave cs inc addb inc or bound mov jno sub out stos mov sar in fwait or pushf in and in mov and ljmp mov imul rcr out jg dec rolb stos dec rorw jb and leave inc cld stc bound rclb add orb mov cmp push mov lods leave sbb mov lods arpl pop je leave add push pusha outsb cmp sahf xor mov aas jp insb movsb or js lret dec fisub (bad) je cmpsl sbb push push xor loopne sub dec mov into idivl push out das inc lahf out sub rdpmc mov pushf cvtdq2ps js cmpsl es fs leave jb and adc testl or or jns push sbb test cmc adc add xor repnz add pop fdivl outsl divb cmp pop inc orb jno int3 cwtl pop enter pusha inc adc mov rorb iret mov loop in push jecxz call and jnp xchg in inc mov pop sahf test jecxz and jns mov sub inc data16 inc mov hlt inc mov dec jecxz mov (bad) les test add std mov out sub mov sbb adc xorb enter lret push mov sbbb out test adc mov and pop adc (bad) sbb stc sub dec or loop add es push les jmp fs rcl xchg sbb add (bad) jno cmpsl lahf sahf mov aaa fistpl sub sbb lock or fiadd adc cwtl add out les rcl out add into or mov mov jo sub adc test dec mov add dec (bad) jo sbbl sbb xor jnp mov (bad) mov aaa ficoml add sarb adc in push sbbl jo scas add popf shlb sub mov cltd xchg adc icebp shr (bad) lahf leave nop sbb mov adc pushf or mov xorl inc insb cmp insl iret or cmp lods rolb cmpl jle test insb mov sbb fs aas pop xor fsubs sub lahf xchg cld dec daa icebp in lock in (bad) cmp add lods lret add pop add mov bound fs adc or cld es mov clc sbbb in xor dec es movsb (bad) loopne dec inc push mov xor sub mov ret call pop loop jmp icebp and dec adc jnp arpl int cmpl cmp seto add sub pop jl xchg in and add xchg push add and xor mov xchg enter rcrb clc daa inc mov rorb push fimul pop in adc jecxz jo (bad) enter movsl movsl push hlt shlb jno pop outsb or push (bad) cmp and mov sub cmp addr16 loopne fisttpl dec dec pop fsubrs jmp inc les loopne (bad) imul dec out imul js mov adc cmp xchg (bad) testl iret sub fstpl aaa add subb add sarb xchg pop test dec dec add retw fnop push add loop mov jl cmp aas sahf ret jbe fnstsw jge aad icebp mov mov xor fidivr outsb loop xchg dec xlat dec into (bad) aad inc mov jae add xor pop repz das mov and mov (bad) mov stc and xchg xor pop xchg sub dec xor inc fldl aam or loope cmp pop into mov pop ret pop outsl in add jmp pop inc cs mov add inc aad insl mov mov fwait add stc inc jp rcrl push repz jl je js int3 or jo push call test push pop lods pop insl inc mov cld mov stc mov jmp pop cmp loope and pop sbb rol lcall pop adc xchg add lods ficompl push add inc stos lret mov int jle jecxz aam cmp add pushf pop mov aad sub pop add lret (bad) call inc xchg jne popf and sbb add cmp push fndisi(8087 inc dec enter jno outsl mov push dec sub repz lods mov add int jnp add pop pop jle inc push das je push fiadd (bad) (bad) adc ret fldt sub xlat jle push rolb icebp movsb adc aam jp sbb sub subb or fsts or aaa aam sub xorb inc add ljmp in add mov sti test lea push push sub mov cmp lock jno jp lret fldl loope sbb test sub inc add imul mov mov add sub mov std fistp add outsl jbe nop add inc jp popf je mov sub mov xchg shlb xor ja sbb jne mov and sbb cmpsl movsl mov push (bad) adcb mov push mov dec pop mov jmp call adc in lahf pop pushf ret and lret mov mov out repnz adc jno adc pop std push mov sbb hlt inc pushf add out insb pop push push mov subl icebp lock push sbb js mov test add enter or fwait adc mov sub push mov pop fisttpl mov inc pop or addl cmp ljmp imull (bad) jl pop cmpsb add add fisttpl xor xor cmp jnp add or hlt add jbe hlt add sbb add mov aas loopne rcll pushf xchg dec and (bad) popa sbb pusha cmpsl push imull mov mov push inc push test mov roll ret mov xor and add mov iret pop or les and mov mov adc fs (bad) lea pushf mov inc jle adc jg jno fldl test sbb inc les (bad) xchg nop cmp sbb js and or clc incb push cld fsub push sub push add pushw and dec icebp add int3 add push call rorl inc add int in outsb lret mov fcompl push mov insb cmpsb add iret cmp sbb popf inc cmp sub shrl roll lea mov mov jl adc add or mov adc jne fiadd pop les add xchg js inc popf clc sub pop push or test psubd lea mov push xchg xor sub pusha inc test xor and adc rolb add and mov sub fisttp cmp lea int imulb add add sub idivl pop sbb mov fcoms pusha sbb out adc add imull cmp sbb sbb xchg cmpsb add fild jmp ja lret mov adc es and jl aam cmp mov outsb inc lods call pop nop sar jo and pop movsl lock pop mov jne and xchg add daa lcall mov mov divl test pop pop xor sbb hlt in cld sub clc add (bad) add inc sub jbe dec ret or fistpl and cmp hlt add int3 inc lea add sub jbe cs gs scas mov pop add (bad) dec loopne incb pusha push cli add loop (bad) cmovs push inc cs lock mov jl lahf mov pop idivl add mov shrb cmp sub js add std adc jmp scas nop sub adc jl divl loope test mov sub sub aam mov sub mov or mov sub mov mov push inc and cmp or cmc or or inc dec add mov icebp (bad) add cmc test inc xor push fcomp aad push (bad) ja add jl pushf xchg ja add xchg cli xorb push lock andb xchg mov divb inc sub sbb mov pop xchg inc js pop fnsave insl push in pop lock sbb cli push push je push out cwtl mov cld mov je (bad) fsubrl cmp call insl push dec cmpsl mov (bad) mov fmulp add jmp arpl or xor mov mov icebp call inc inc ds cs insl xchg loop jno cwtl inc add xchg jl or (bad) (bad) rolb outsb inc push test xchg add and sar push scas nop push lods movsb sub hlt fwait outsb sbb mov cmc rolb outsl sbb popl loopne push or cli mov test jo adcb lret xchg cmp add xor mov add cld rclb xchg psrad mov xorb mul scas xchg clc add jno dec adc add mov loope movsl xchg pusha and hlt jmp sub sbb cwtl and mov inc int3 mov (bad) out pusha mov stc (bad) sub jge add bound push add lcall lock (bad) cli stos (bad) out int mov ja scas mov and es add pop add pop aaa lds (bad) mov loop xor andb cltd call std outsb mov pop nop imul mov lahf lock and insb push sub sub push mov test clc xor push jo fs xchg shlb mov testb cmpsl jp ds test sarb mov add sub rcrl cli ss incb hlt mov movsb les arpl sub outsb or inc (bad) loopne or push clc mov and sub or int mov xchg and lock xchg sbb loop jp fs fadds int push (bad) mov mov pop or mov testl out mov push dec xor loopne ret fdivl js mov mov add insb xchg mov push fnstenv clc dec add fidiv insl or push (bad) call aam mov adc dec add dec leave out cmp jnp loop jb fcoml pusha sbb popf orl int dec mov add sub sub je jns mov mov and fidivrl add mov call leave sub pop into and sub cmp dec scas loopne ror (bad) or in lock hlt rcrb insb add xchg imul dec pop mov cmc orl and mov fcmove enter lock cmc movsb push lock pop (bad) loope popa pop sub scas jp je lock outsl xchg stos ret cli jg sbb mov (bad) enter or fwait (bad) xchg jo add fcmove or mov jp les sbb inc xchg pop fxch cmpl mov call adc mov xor xchg jl jo pop mov push (bad) jb pop sbb outsl (bad) test lods adc add add jg xchg jno cmp pop in scas (bad) hlt lods ret xor add cmp mov inc andl push and test sbb inc daa adc mov sub sbbb or (bad) repnz enter or sub or pusha fmuls (bad) pop sbb and inc inc pop mov add jl lods fwait int3 mov sub nop push (bad) call int3 jbe pop icebp pusha fdivrl scas sti xor add int3 jecxz or jmp popa add jnp xchg bound add mov ret ljmp adc mov and fsubp outsb test sbb push cs mov addl fdivrp in jns sbb mov (bad) mov (bad) pop daa cs inc adc and mov mov inc pop mov push jmp loop rcl push mov pushf out loope lcall sub ret xor jo pop mov fisttpll inc pusha (bad) jg mov icebp data16 (bad) les dec mov movsb outsl out lods mov nop mov outsb inc sbb fidivrl inc jns cmp adc out sbb out pop add gs popa jbe mov lods and pop sbb jp lahf in inc movsb lds jb push (bad) pop pop adc inc (bad) out out jns fs mov fiadd scas jle push jmp push dec js push mov jle mov jbe push (bad) jecxz fadd pop jnp bnd push movsl add pop in rolb rcrb repnz mov push dec cli sarb outsl aad xlat loope aam mov popf enter insb jbe arpl xorb loop sbb push xor add pop cli imul dec icebp rorb out mov inc popf lods pop xor push fdivs adc clc xor mov push add int3 adc jae js shll pusha cmp subb aad fist mov nop cmc idivb addb fnstsw ret pop pop stc cltd ret addl push jge rcr stc or shrb mov mov pop stc into or xchg adc jae mov or fistpl jns cmc push sarl sbb sbb adc and stc mov push mov inc nop mov jecxz sbb sbb rcrb push lods sbb (bad) push enter jmp ret add jp pop add lret sbb push xor movsl adc loopne push leave fdivrs add mov add jne mov leave ds xchg add cltd loop je pop test int inc and jecxz pusha adc jmp mov or adc pop sub or mov rcr adc inc hlt loope sbb jno mov jp mov mov sub or adc out lock pop mov adc (bad) rolb sub mov fcomps outsl dec loop add cmp les add jno adc sub out and sti pusha add xor jp adc jae add loop lock (bad) xor xor xor and (bad) inc inc ss call push js lock hlt add in pusha push sbb and popf mov mov lds je add dec popf ds adc icebp lcall in jb push mov push inc enter add jmp mov mov icebp stos loop call hlt add xchg adc (bad) adc mov aas imul int3 dec inc pusha adc je fdivrs push or pop sbb mov lret jp insl pop movsb fisttpll cmp sbb rorb add mov pcmpeqd jnp shll mov test sbb push adc xlat push mov in sub sbb andl and adc cld pop add xor js sbb pop pop movsb adc sbb movsl add sbb adc jp es or icebp fwait jo pop stc lcall inc enter pop jp outsl sbb adc mov pop jno mov pop pop sub inc mov insb add fwait adc push inc or inc pop or add test add or xor xchg iret lret js or pop scas test arpl (bad) (bad) lldt fbld lods (bad) mov (bad) (bad) adc test cmp xor popa out (bad) stos mov or fwait mov inc jnp cmp pushf and std inc mov scas xor insb dec (bad) loopne adc jo add call add fbstp xlat es cli test inc inc push inc pusha dec dec mov and inc vmovsd push or mov push hlt add inc sbb shrb fild hlt das cwtl outsb or pusha adc adcb rorb icebp jbe mov fcmovnb imul cmp add (bad) pop mov cltd pause cmpsb out lahf add push pop mov xchg xor fadd pop add or lods int xchg or or jle xchg add mov jl rcrb subl pop adc fild scas or lock or add stos cltd testb subb pop add test mov out arpl fs outsl push pop cmp scas mov jp pusha fimull fs add shr cmp inc push push andl cmpsb jge xor jp or mov loope or cmp mov daa jbe jne loopne mov add or pop sub imul xor cmp ror mov pop push inc imul and pop scas (bad) loope dec aas loope js inc fyl2xp1 mov dec loope popf shll in aas push fcompl in push daa add mov or fnstsw push lret lods mov stc test rorl mull xchg shll xchg mov sub shl jbe aad clc pop cmp cmpl dec dec add sbb maskmovq dec faddl push add cmp pushf or in scas add or sub mov xor aas sub cmp outsl and cltd adc inc call cmp clc xchg mov or out lds mov adc jns sbb add mov xchg imul push mov lock dec push or lcall test push dec pop enter (bad) xchg cmp mov xchg mov xor cmc andl push test sub push movsl cmp adcb pop insl add fnstenv xchg jb fmul call mov adc sar daa pop cltd sbb xlat mov push fcomip inc rolb jecxz in enter popa jb cvtpi2ps mov add add push lds jb xchg int3 add es roll test dec pop dec arpl (bad) push sbb sbb lock adc mov sbb lret mov test sarl pusha popf sub pushf inc push aad outsb xor pop sbb adcl ficomp pop (bad) imul and lods push push cmp add push test (bad) pop and mov aaa jp xchg push and out cwtl adc jns lock cwtl adc pusha or loop dec adc inc xchg and cmp hlt jo test arpl daa sub test pop push repnz cmp dec and add roll jo add test push shr jle icebp mov mov mov imul add jnp dec sbb dec leave je adc fsubl adc jecxz adc aad pslld mov xchg cmp adc in test pop (bad) adc jb cmp int3 enter or jo pop push bound xchg push add push adc cltd jnp or test jo cmc rcll and dec fidivr inc or je pop ret add pusha and (bad) out mov mov dec push mov sbb jb flds lock mov add mov sbb je and dec mov push jmp mov mov adc dec sahf out xor cmp jno (bad) ja sbb out lock cmpsl divb or jno push sub je ja pop sub sti and dec out cli loope aas inc cmc sub sbb cwtl push sbb jl cld roll aad jge cmp ja cmp and scas fiadd push add js inc pop inc add ret mov push sbb loope nop inc jo mov jae incl cld sbb sub sahf inc out ja ds or inc mov inc mov xchg jg jnp nop push mov cmp jg dec jo sahf es in (bad) pop ja sbb ret js and adc dec push xor fsubrs jge mov mov outsl jg lods and popa sbb push fcoms cmpsl xchg sbb call xchg push ds and mov inc loope jbe or jp lock in and (bad) xchg cmpb jp orb fimul mov test or cmpsb add loope or push sahf pop or jge and test aas icebp jle cs pop pop mov ljmp sbb dec cld lods mov ds ja push insb jnp mov or lahf mov mov inc stos add dec ret push inc add insl adc push add inc out cmpb scas or cmpsb and (bad) xor sub pop or inc mov aam cmp and and call dec jge loopne stc iret loopne jne pop sarb sbb sub add push or (bad) dec es (bad) push rcrl cmp (bad) es pushf jmp mov incl jnp (bad) aaa stos add jge gs mov pop mov push dec add sbbb rcr pop leave pusha ss cmpb ret dec inc call jle adc (bad) ja data16 add inc pop sub je mov xchg or pop dec sahf mov mov push add stos std add jl cmpsb jne pop lcall dec shrb sbb subb ss aas sbb add cmp test pop mov ljmp pusha inc push cmp fbld shr push or pop insb les add jnp cmp sbb and ret js cmp add add das repz push push lea mov nop nop sbbb cmpsl iret js mov daa add (bad) push clc aas and add pop xor sub into cmovp sbb call sbb add les js pop mov (bad) mov pop dec add test push lock jle ds jo pusha test cmp xor jns in pop add xchg jecxz add and push (bad) pop cmc shlb push pop add int jne rcll mov or or adc jb jo mov fcomp enter sbb mov inc adc jne in lds scas add cmp pop les mov bound sub sub push pop sub sub sbb pop in aam imul insl sarb in loope icebp cs pop es adc in data16 cmp sbb roll inc mov scas je inc xor test dec lret xor sub jp incb mov mov dec add fadds push dec fldl sbb stos fsubl inc add imul lock cwtl call or loope adc (bad) or and xchg cmp cmpl lret and aam cmpsl jno jecxz ret sbb mov mov xchg jp mov cmpsl add mov xchg xchg adc bound mov add cmp adc inc bound add aaa cwtl or add inc popf jae ret xor add mov jle sbb ja mov inc add cmp ljmp push inc in pusha push adc dec loopne mov sub add add jns pop (bad) add cmp or pop lcall andb dec hlt fdivrs push in add fdivs push sub xchg xor scas add lret dec push int jbe mov sbb in add (bad) cwtl (bad) dec add je pop inc xorb mov aad mov mov testl push add push loop pop inc mov add inc push pop out adc sub adc clc cmp (bad) ljmp pop sbb divl jns sub subb jbe test ret sti inc xor (bad) dec jns xchg pop mov (bad) stos fldl sub aam push clc or (bad) ja sbb cli xor rclb and pusha dec cmp shr add imul dec mov dec (bad) adc xor (bad) in xor inc dec add mov sti cltd adc add pop movsl adcl out insl xchg cmp adc pop jb js cmp test faddl and dec sub cmp xchg and add std mov mov xor sub and sbb in imul ja sar mov shll add push cmp dec jmp add test mov jmp cmc add mov pop (bad) jns mov xor jmp jno pop les sahf mov loopne and pop les inc loop daa mov (bad) in cwtl adc les (bad) xor pop mov popa shll mov inc mov lahf adcb iret adc mov shlb mov lds and dec test dec je mov sahf fsubs sbb gs rolb mov clc mov sub movsb popa mov ss xchg nop jb pop (bad) inc mov and and dec das adc mov les mov lock (bad) daa pusha fsubrs pop mov test sub push xorl push subb fild movsl mov test xchg adc and repz je rcrb pop rcrb fimull adc sub sbb push cwtl pop jae cmpsb inc ja and daa add pop imul push add sbb fnstsw jmp in loop popa or xchg and cmc faddp sbb nop ja mov test xchg cmp jo and sbb inc scas inc push adc add loope daa mov pop and sbb jae adc ret jo xor mov test jbe dec mov inc out and mov or daa jg add test jecxz loopne sub sahf or jge scas sar dec and sub jl sahf dec cmpsl adc out push hlt fldl ds adcb adc inc and add adc call cwtl ffreep loope push test push int movl cld pop add lds mov dec int3 pop jns sbb adcb jnp push push or out add (bad) imul add and mov sbb cmpsb lods shll loope sbb xor and std dec dec inc and inc mov xchg enter shl mov add xor or adc cld add sub movzbl in cmp push pop add ja mov in mov loop repz inc pop inc movsb or or or jle cmp inc test ret push jl cld sub (bad) or xchg sub mov mov mov push push shrb sub test sub or test pop cwtl sbb rorb and sbb pop enter xor inc nop mull mov add test aas in mov and add fucomip les sub and notl jne lods sub jo aam mov adc out sbb movsb push inc cwtl push out add mov test inc jmp jp pusha in es jns fldl int3 or add jmp add sub jnp rcll out std xor mov push ret and ffreep lods cmp or rcll loop and sbb lds nop insl and ret inc test mov test xchg aad adc and adc adc icebp sbb sbb adc mov aad push pop and arpl in sbb stos addb push inc sbb dec enter gs inc jge mov lods mov and lds adc mov or or cmp push seto gs jne loop inc test lods jmp inc popf or test or add sbb xchg stc movsl pinsrw (bad) xchg in and stc add inc and sub xor in aas and enter push mov xchg xor add add (bad) iret mov xor loope hlt add (bad) push push xchg (bad) and pusha sbb test fucomp ret add cmpl xorl or mov or icebp in cmpsl sahf and and cmp pop and test push pop and xchg mov call out pushf nop add ret push adc inc orb inc das out fiadd xchg and dec cmpsl cmp aas push pop loop inc dec enter add outsl cli std push rcrb fsubrs xor outsb add movsl in mov popf imul pop pop leave add mov iret cmp push call insl dec jle cmpl mov jge cmp jo push push sub cmc subl dec or dec call xor add lret xchg jmp ds loope mov push adc cmp fldenv or test or aam adcb jl pop mov aas pop std pop xor out sub sbb stos sbb cmp addr16 adc xor mov daa test add add bound fadds pusha push mull sub pop jbe push mov movsb fs jae insl enter dec xchg pop cs (bad) jb aaa or push lret push lods addr16 xchg std sbb sbb or out add mov loope icebp fwait jnp popa sbb or or nop add and test fwait sub pusha int3 sub cwtl inc aam hlt sbb dec adc add adc lea aaa stc pusha inc push mov and cmpsb xchg subb stc mov test js sub cmp pop (bad) sar ret inc pop addb cmp add mov aas pusha imul jge jns pop rol push stos xor ja arpl push inc fadd jne stos test or inc movsb repnz mov xchg xchg and inc iret popa out lds or xor or aaa loopne lret lahf add stos mov xchg test pop add jl push mov (bad) pop arpl or les mov imul in jae pop shrb call int3 jo sub js faddl loope adc jp stos adc in pop jl lock fcomps or sub (bad) lret lods xor es xchg ljmp sbb ret adc xchg xorb inc cmp stos dec jge js or data16 loopne cmpsb outsb mov mov aaa cwtl mov sbb (bad) push mov roll add push rcr push stos push sub push repz jno adcb cmp push or cmp push andb jae xor in sbb xor pop cmpps lea add int3 or or (bad) clc add sub addb sti (bad) lock push sbb (bad) jo test mov pop imul or mov mov les sbb or mov mov mov jmp cmpsl je inc imul imull jp outsb ss add jae (bad) push mov cltd test fwait adc fldt lock movd xor or mov adc inc push cmpb sarl (bad) mov mov cltd adc jo push je test movsl cld es std test add sbb cwtl add in dec fwait xchg fstps into cmp cmp pop xorb mov (bad) (bad) out dec sub sub dec xor sub cli jo addb push mov dec mov mov push adc sbb mov push mov xor (bad) frstor push shrb (bad) and test rcll xor sbb dec pusha test xor push mov adc xchg lea (bad) mov mov inc clc xor inc pusha rclb lock xchg ja,pt fwait mov xchg rorl pop xor sti insb mov xorl aad push adc add adc out mov flds hlt or mov decb jb std femms (bad) adc inc push (bad) hlt pop push xor push rorb cld pop enter stos aam add mov pop or pop call jge push jl add xor xor stos xchg xchg add addr16 pop mov subb adcb inc pop inc xorb outsb rolb fs fs mov test mov dec imul aam mov xor xor js stos dec sub push lret push nop inc dec stos inc lret movsb inc ror mov pushf sub xchg and and push push lods jle cltd add stc test into test lret scas sub lods xor (bad) or ss fdivr or test js dec push inc cmp sbb aas and fcoml pop mov pusha ljmp adc or mov lock xchg sbb sub cltd cwtl adcb lock xchg arpl xchg push add or loop push cwtl syscall dec stos inc cmp adc jl lock sub icebp sub or push pusha (bad) stc adc fcoms jb aam test lock (bad) mov je shr adc aas lcall xor test (bad) adc fwait hlt mov xor (bad) jno or mov leave sbb adc lret push fsubrs fcomip mov ficom orb (bad) outsb ret or aam ja cmp cmpb adc out sbb aas cmp sub cmp cli hlt cmp iret pop (bad) fwait into jmp subb enter add gs popf inc adcb roll push ret jb movsl pop dec push inc pop mov push dec js scas jecxz ret bound je mov mov adc lret (bad) jne movb inc pushf or xor pusha push shll bound xorb mov rol add sub add sub cltd adc xor push mov inc and out xchg clc int3 sub add scas cwtl add pop rcrl inc popf lods pop call xchg ss push push and mov add rorl cmp cs psubsb add mov ret lods push aad rcrl sbb scas sub cs xchg sub insb push inc xor cltd je add outsb nop int3 insb pop jl add or mov es mov xchg call aam add fwait ja xor outsl rorl rcl popa dec mov ret int add or push cwtl sarl xor popa sub mov inc mov pop mov je add push in mov repnz icebp add jmp adc dec or mov fcompl in out out sarb adc mov insb push adc mov movl (bad) mov int3 es sub and inc sbb inc add xor popf xchg cmp or (bad) cmp or or push or push cltd xor sar mov loop mov (bad) mov scas cmp (bad) xchg inc lods pusha mov push mov rolb xorl or jl clc xchg mov jecxz and test inc out cmp (bad) enter iret rorb lahf enter add cmp push xchg insb inc (bad) mov mov clc inc inc cmpsl popa pop push add sub inc pop mov icebp mov nop (bad) clc enter mov out das ror test jne and bound add lds fnstsw cmpsb pusha leave mov mov ljmp push pop test push push cmp push mov add dec rcl xchg pop adc mov or cwtl pop mov faddl lcall ss xor (bad) ret adc jo mov inc clc add and sbb push dec mov int3 push int3 adc hlt cmpsl call mov add shl pusha jne sbb and xor and (bad) or nop stos cmp sarb mov orl test add loopne xchg out mov push mov push pop test lcall sbb xor and adc ss sbb xchg fsts cmp push and sub test cmp mov std bound mov cmp movhps push ret push mov sub mov (bad) jmp and mov test cld aam dec or lret lods sub fsubs xlat push rcl orb clc add je inc mov nop jae outsb call push mov push adc pop xor fadds xchg dec inc or mov add sub (bad) xchg mov mov pusha cmc mov shlb jne add and and sysret (bad) insl add loope lock enter jge hlt dec push adc xchg insb pop pusha sub inc dec push sub mov lds int3 fs push test pushf lock or mov add add (bad) mov (bad) shr cwtl cmc and xchg lock inc cmp inc stc xchg popa sbb fs push pop pop mov into push cmc fwait or xor mov ljmp nop dec add add ret and loopne mov scas adc add fwait sub aaa push sarl add and scas (bad) aad mov int3 in xchg (bad) mov mov test add out jns mov fistpll add push in add (bad) lods sub add mov add xchg mov pushf xchg sbb fisubl lods int3 faddl or inc mov or mov sbb or mov mov dec dec cmpb (bad) ja add fadds out pop lods adc insl xchg xchg or xchg adc mov xchg mov stos imul pop cmpsb ljmp pop push mov cmpsb mov std mov adc cmp cmp add push add push add mov mov fcomps mov xchg test das in sbb add or iret sub xchg and les sub mov loope pop loopne cmpb addb mov jne ret jl mov insl sub cwtl fidiv sbb mov pop movsb add test into xchg jbe dec cmovno sahf popa ficompl mov pop sub in add and pop mov sub lds lods shlb push int3 push lock jl mov jle mov mov int3 sbb cli out ror mov xchg mov dec into mov jmp pop add adc (bad) lock insb cmp incl ret aas cmp cmpb mov ss sbb cmp (bad) cmp aas loop popf push lods inc ret ret push add jl inc pop push insb dec aam lods aam adc sbb das xchg test repz scas (bad) sub push mov pushf adc sub hlt cmp andb sub pop xchg fs mov imul (bad) xor (bad) adc lret xor adc or stc xorl das inc inc call jo neg (bad) mov mov rcrb mov push mov push enter inc inc cwtl pusha enter in mov in dec cld enter adc scas fsubl mov ljmp mov das dec jecxz mov xchg stos mov pusha insl cmp les lods adc dec dec lahf add mov jg jle and fsubrs (bad) jae insb dec and add mov jp in dec hlt les xchg and ds or sub xchg xor js inc add mov testb sbb add or in pop add or lcall ret or xor dec enter sub adc addb test leave sbb loop add arpl and ret bound add (bad) leave (bad) xor inc sub pop xchg and (bad) push nop loopne mov xor loope inc mov xchg xchg dec sub mov xor push (bad) je fldenv loope xchg adc inc hlt lds and iret dec sub (bad) lds rolb sbb jmp out or fcomps adc rorb leave sub dec out xor sub std add test xchg fdivl xorb jge nop mov adc or adc in pop inc mov pop or fnstenv lret xchg sahf adc call lea or and or pop outsl and push call lea and rorb sahf ja out rorb cmpsl push cmp adc adc and sbb mov negb push dec push jb add mov cmp lahf imul xor inc pushf sub or sbbb daa mov mov adc std popf out loopne cs (bad) lret and push orl and (bad) pushf inc addb lock sub push imull sahf push cwtl jo or inc mov inc jnp add (bad) or js mov cwtl mov cwtl adc jb and adc pop xchg push rcrb out xlat mov fs and iret xchg ss add hlt mov mov push test aam pushf ret inc xor mov test pushf adc sbb or cld mov xor int loope and leave jge push and das mov cwtl jo xor jne enter or sbb iret xchg push adc test sbb mov fimul jl and jno test xend cmp adc pusha test fild pop movb scas inc ret test jb jno pop jno jo add fidiv scas into mov sbb jne pop cwtl (bad) mov addb dec std adc enter dec lahf ss and xor adc test mov hlt sar nop sub test jo mov inc xor mov insb mov or lock dec pop test xchg arpl dec js dec inc lods incl sbb int3 or jo or cmp fwait add pushf adc cwtl mov das push or aaa cmp (bad) jae addr16 mov (bad) (bad) iret lahf jp push loope,pn loop push lods pop es add cmp shr iret jle sbb sbb divb push mov dec lock lret (bad) add sub mov push jmp adc xchg add (bad) lcall sub popa xor adc stos xchg inc test adc dec in add (bad) lret gs das mov xchg inc adc adc mov xor jo (bad) imul addb dec mov xor adc js mov xchg mov mov jle sbb test outsl sbb or dec or add sub das xor rorb les rcll or into out enter xchg and enter es dec sub xchg push sub arpl inc jmp insb push loopne sbb or rcll js push rcrb inc shll push orb cmp xorb mov sbb into (bad) and xchg test sub sub pop xchg pop pop repz or mov je aam lds mov (bad) shr iret xor push add sahf dec xor dec cmp out lret jl add fisubrl testb xor add outsb stos push fisubrl ret inc hlt iret rcll mov add cs test xor les loope dec and and cwtl pop insb in es or sbb fsub ret pop in add loope iret movsl cwtl adc adc sub cld dec cmp mov sub nop xchg pop and ret push movsb aas mov add cmp sbb add lods cmp xchg mov sub (bad) dec xor mov icebp out test pushf xchg push mov das xlat loope je sbb add adc rcrl add fdivs testb add mov cmc jecxz ret hlt or jge pushf in pop fwait xor xchg loope loope jnp in pushf lcall das cmp adc xor adc add (bad) push jecxz mov scas cmc (bad) in lock popa scas mov xchg cmp dec push pop ret sub nop incl (bad) hlt ja ret inc sub mov popf adc add mov js in add stos pop aam das xor or mov add push ss xor adc outsl cwtl mov call adc (bad) cwtl inc ds adc dec jo xchg inc pop push pop shr sub rolb lds lahf xchg hlt mov clc (bad) and jg loop loopne call add dec lods sbb xchg cmp dec and ljmp imull leave xor stos pop or dec or nop cltd mov pop xchg in cli mov cltd add push or and adc add sbbl pop out (bad) add lods xor insb xchg xor jbe push icebp cmpsl (bad) jo xchg jle lds sub movsb adc adc rorb cmpsb sub shrl ja pop sbb gs (bad) mov xor mov cmp jle es fwait and cmp xchg jl out add add cltd add jl lock add lcall mov ss jb rcrb xchg cmpl js add inc pop sub xor cmp shrb das mov jne out mov call sbb sbb dec cmp test push add jnp mov stos js sub xorb sub mov jo das (bad) jmp add mov pushf or subb inc clc pop pop setl push dec call cmp mov add repnz pop mov fisubr xor lods xchg jb shlb xorb in mov bound mov dec sbb loopne xchg or lds mov ja xor sbb push leave xchg mov adc add repz xor mov ret call out scas mov and icebp aam mov adc fdiv enter inc add shll loope clc ret fmull fs out lea cmp push lods mov add cmc pop mov pushf imul loopne add (bad) mov sub or adc popf push js adc dec jne aas mov js push dec add xchg pusha (bad) mov jmp clc lahf (bad) imulb cld or or inc mov insb jns loopne (bad) or sti rorb ret sbb add jbe nop pusha mov inc movsl cwtl lcall lods pushf xchg rorb or adcb ret in cltd sbb call jns dec clc sub adc pop (bad) mov dec loop adc sub roll mov mov stc sub add jl dec inc add ret ds sbbb jecxz or adc xchg add lock inc lock shrl ret flds int3 mov add sub lock sahf sbb push pop mov mov or xchg mov into andl mov jl push cwtl cwtl lods mov cmp xor inc adc outsb pop adc popf push jmp subb mov sub add push mov add icebp and mov or out add dec push mov sbb mov cmp or mov inc lahf cld rolb push les rclb repnz mov imul and int cmp fwait in inc cmpsl add xor add and pop cltd cld les add xor or and arpl or jnp add hlt jno insl nop cmovnp stos rcrb xchg lret or jb add add mov xor mov sub add push inc sbb mov (bad) pop inc into mov pop push mov mov out xor add loope pop jo lea mov loopne shrb outsb enter loopne dec mov adc push pusha cmp cltd or lahf add xchg mov rcr sbb cli dec (bad) cmc gs enter mov inc call mov xchg push aaa mov dec andb dec aam roll adc decb mov cmc int jnp sub leave adc sub or imul push pusha lret lods (bad) sub ds add enter jl add outsb addr16 ljmp xchg xchg push mov add arpl adc add nop xchg aad sti and stc add mov push mov jno test and aad (bad) mov xor mov addl jge jbe inc lds shl mov adc adc mov sbb enter push fdivrs add insb mov imul or (bad) mov into adc stos add or repnz in test cmc cmp ja sbbl cltd ret rolb jge cmp into enter test loope xlat cmp dec jle push sub mov vmovddup dec pop push mov out fisubrl addb or mov loope adc dec push inc nop adc and cmp test andl in adc or rorb pop push add jnp xchg adc notb lods int sarl inc cmp add xchg (bad) mov xchg stos lock roll push inc or dec (bad) js mov bound add arpl push pop or test (bad) mulb xchg addl dec cltd mov push sbb enter jg xor ret (bad) (bad) push mov inc cmp dec xor fsubp and jne add sbb and stc test push mov sbb dec loopne pop daa add aam fildll pushf nop pusha mov and or cmp dec jmp cmc (bad) push and add in add push add in inc mov mov (bad) arpl insb addb jns enter adc jae lods mov xchg push sub mov cmpb inc cmp add das or lods enter sbb add das and jo scas cld rolb adc popf jbe leave push jne inc dec fisubr ja (bad) out js dec pop add jbe add or jecxz add movsb mov dec dec shll or ret lcall cwtl cmc and (bad) mov mov std or mov dec inc adc inc shl fs dec sub leave rclb xchg xchg add jno loop pop outsl orl aad rol ljmp inc and shl test enter insb push cmp call and adc lods daa push and sbb or sbb adc jbe xor mov negl loope adc cltd addb pop xchg fiaddl and jns add loopne mov lods cmp aam or les push mov gs sub add sub jl lcall xor cmp (bad) and push dec fidivrl bnd int3 cmp jp mov xchg lods mov adc dec add scas inc lock adc stos int push and add jns insb adc in or sbbl cmp push add je add push pop stos aam adc fistp aaa sbb and in sbb adc sbb cmpsl lcall fs mov mov jns sub mov in femms movsb leave ret aam (bad) js fucomp stc mov add mov jb sub xor jns push into jo sbb fcompl xor or out subb scas pop mov enter inc adc daa in loopne lret (bad) jge add repnz hlt mov addr16 add loop adc or and cmp push mov mov insl shlb mov inc jb ds and les mov or cmp or dec jmp mov xchg or (bad) mulb rclb ret imul cmp xchg xchg lock fidivr cmc xor mov lcall fisubr jle into adc dec fildl xchg jo leavew xchg rolb les xchg push mov or or sbb imul insb rcrb add int rcl adc sbb cld out sub loop add cs movsb add sar add jg xchg mov xor add push ret push fadds sub (bad) sbb rolb mov aam cmp cmp dec add shlb push or and and cs push es stos and dec outsb imul cmp xor rolb pop jnp or mov and dec and adc push dec and pop nop imul loop add jbe pminsw inc and jecxz mov mov push sub and in add imul dec (bad) jno imul repnz jp inc movsl dec std adc das loope jle jne push movsl push pop in aaa lock test mov mov ret clc out add int3 clc sbb ljmp add dec (bad) rorl sbb leave shlb dec or push fsubl pushf nop adc ljmp lock push clc mov pusha cmp xchg loope push in add adc (bad) push bound jo jne mov add xchg ja sub or push idiv mov test sbb push enter dec add lcall rorb pop inc or out subb rcrb scas gs enter mov mov loop or sbb maxps sub sbbl dec clc in and jno int3 add adc mov and and popa inc mov push add sub and mov js or and add stos (bad) pop mov mov rol and add aam dec pusha inc popa mov xor loop pusha sub cmp int3 add sub push push popa push or push add sub leave clc jne cwtl cld xchg mov (bad) fildl jl repnz inc fdivrl mov adc call js adc fidivr aaa add dec sub xor cs in or scas flds iret push cmp inc call jle lret leave sbb adc test orl cltd push add mov or sbb mov ret cmp sub pop push js in dec fs mov rolb call push sub aaa sbb pop jo mov pop pop cmp mov mov mov add test or xlat leave popa add cmp aad push mov push add pop and adc sbb sahf add int inc cmpl fdivrs pusha and xchg test insb daa loopne imul test jmp push lret fs xor mov cmovs nop loopne add loop aas lock add xchg sbb dec leave add pushf iret jns push jmp sbb clc movl test std fiaddl in mov andl jns aam andl xlat jno pop int pusha mov xchg scas push adc leave lods xchg adc cmp xor mov aas mov sahf push in and mov fistpll dec fidiv jp nop and pop iret fwait sub adcb sbb sbb add mov shrb push add popa rcl arpl adc jo cmc xor or hlt cmp (bad) (bad) cmpsb aaa aam xor fnstcw dec mov movsb adc nop lock adc test jmp jo ret test add mov leave push mov lret nop pop adc nop adc sub adc sti add pusha (bad) sbb fadds clc lar out (bad) push cmp mov dec jecxz and ret pop cwtl pushf xor les daa or loopne mov adc xchg push xchg inc mov fdivl and and mov icebp les xor hlt or pusha imul aaa add shrl fcoms (bad) cmc mov cwtl es enter aad xor jnp push pop les and incl (bad) mov ss jns xor inc cmp mov nop mov push aad add pop cmp in sub aad push aam push inc je or cmc data16 daa adc aam int3 or mov subl jmp and ljmp cmp lret pop rcll pop pop leave add pushf dec adc add mov adc mov pop add add adc out pop adc add cmp inc mov mov add incb in and bound or out inc mov rcrb repnz push jne xchg sub push add pop outsl jae (bad) fwait je shrl lcall cmp dec xchg repnz nop insl cmp fcompl pop in sub popa xor (bad) jbe pop js,pt sbb mov adc (bad) adc je inc sbb lods inc sbb and adc dec or je aaa mov rcrb sbb and shlb or cmp enter jno inc rcrb and cmp test and adc dec sub mov xorl aad loop pop dec cltd dec inc inc push jecxz pusha test or mov inc inc dec dec popa mov test xor pusha lea push (bad) ret shl xor xchg sbb mov lock insb jle pusha adc cs and outsb mov cmp adc sbb loop nop push sub sub (bad) mov dec rcrb pop adc les push adc adcb add cmp insl or lcall outsl enter pop outsb cmpl xchg xchg sarb add push and push or adc cwtl adc les outsb or cmp test push sbb sub xlat sbb or (bad) nop sbb adc mov fadds xchg adc dec pop jae cmp add mov lock mov xor rclb std push add pusha add mov mov or out add sbb pop cld cwtl or (bad) mov mov sbb pop mov cwtl xchg mov inc lret imul popf inc adc inc movsl mov es pop add sarb nop xor pushf xchg shrb push scas pusha addr16 lds mov call lcall dec push adc pop mov sahf std add pop fadds test ljmp mov cmp sbb mov ret dec pslld add pop es add mov js sbb add jne sub cwtl mov aas rclb sbb pop inc xor mov cmc lcall jecxz lods mov shrl popa mov (bad) adc js dec inc pop pop (bad) or or call sarb xchg enter fwait cmp jmp push push sarl push xor sbb bound cmp add fild pop jecxz mov lea popa add push mov xchg das jne sub xor mov and mov fnsave (bad) inc mov mov cmpb xor loope pusha test lret and rcll inc cwtl test or jns push sbb xchg test shrb add mov inc or pop in mov or add xchg pop dec fsubr and add lods mov sbb lds shlb add fdiv mov enter int3 inc dec ret push (bad) popa or jb cmc mov in jns fsubs fmuls xchg sbb adcb pop push push jne add dec and pop or adc mov mov mov lods or sbb test sbb mov pusha mov nop shlb xchg rolb push and push mov xor jg adc push adc je cli lcall ljmp nop test in mov movsb dec cmp xchg (bad) daa loopne in gs or pusha push call scas icebp call cmp or popa mov xchg cwtl pop mov mov imul cltd or mov leave ljmp cmp aaa and fsubrl shrl push xor data16 clc cli mov xor clc in jne fstps sbb (bad) sbb add bound dec or enter dec inc sbb adc inc clc xor rclb push add aaa xor data16 xchg outsl add cmp mov outsl enter lock into adc int3 fisttpll fcoml add fiadd adc jbe xor add clc jle or sub mov divl orl xchg loope and adc dec adc push sub or xor adc add int3 mov icebp add repz pop ljmp push imul pushf mov ficompl rorb mov push (bad) cmp mov jne xchg mov clc dec lahf addb or cmp cmp and xor icebp sbb mov or repnz sub add inc jmp fisttpll and add sub and add popa mov add xchg and sbb out sahf lds push pop (bad) jo mov push dec add jmp or add nop clc stos ss adc addb mov ficoml add jmp sbb add and int3 or adc xor mov jb push jae sub mov in pop ljmp add imul addr16 cmp pop lods or fmull sub dec jno int3 mov push std or mov in mov enter push nop push arpl addr16 sub mov xor jae jnp lret leave mov cmp inc lock or cmp and xor mov addb andb arpl loopne jecxz mov into nop ret cwtl jl lahf adc std mov nop sbb inc sarl sbb mov and roll js out and mov xchg bound leave cmc dec loopne andb and add jg sarl fwait mov add add in cmp lds add into mov pusha or orb cmp loopne xor add add cmp sub jb xchg fdivrl or sahf inc mov add cmpl fimul or jecxz dec adc or dec or jle jb add imul faddl push inc and cld mov pop into mov pushf cmc and pop iret mov mov (bad) int3 pushf loopne sub xor or push adc sbb mov and pop and inc rorb add and test test sbb pop inc jge mov aam push clc mov hlt dec or inc movsl and test cmp sbb insl std xor and inc jl mov jae add sub in xchg mov sub cltd insl pop dec jae jo enter add push fsubrs movb cmp pop fistl or jmp dec shl push scas xchg leave mov adc test add cld and xor pop cli sub test pusha xchg sbb and and gs jo sahf repz cmpps call or jp nop dec xchg sub sub pop bound daa push stos xchg dec or inc and bound inc aad xchg or xchg xor pop or add bound push push or lea xchg xchg pop push pusha leave push cwtl or and xchg and pushf je pop mov loopne mov dec cmc xor rol xchg xchg out pop bound (bad) (bad) inc mov sub add les lret mov pop psubw dec mov and xchg jl daa add (bad) mov fs mov inc ret loopne jl add (bad) js or xchg daa pop popf adc das jb shrb lods rolb cmc mov shl or sbb mov add or int3 cmp rolb movsb sub xorl and xchg mov test and push sub pusha les nop add xor out jo jne jo aas xchg push xchg inc push xor or add adc add or jno jecxz jo xor mov stos mov fs and aam xor inc cmp adc pop ljmp sub push nop bound add fwait pushf xchg cmp cmp setno je or pop and xchg mov mov dec cmp push addr16 push jne and pop sbb dec loope je (bad) xor mov add jne mov ret mov in andl cmpsl les mov mov sbb mov pop fdivrl mov xor enter popf mov dec add (bad) cmp or and jl mov add dec mov orb ljmp dec insb jb rclb aaa jg push repz ljmp (bad) and or mov xchg mov xchg inc mov mov adc daa jne and and js mov push add mull (bad) mov push and push mov push dec rorb or ljmp sbb add out (bad) in push int3 unpcklps or dec adc mov add inc inc cmp or jle push int3 in push inc pop mov fimul add ret add xlat mov sub idivl in dec and pop push inc sub jae icebp inc sub pop cmp xor adc dec mov or in cs lcall aas xorb sbb push lock sbb out add dec add aam push adc mov ror mov push add lcall fwait nop push sub push cmpsb hlt fnstcw add popa ret pusha mov add jne mov lret adc cwtl stos aas and sub pop fadds std sub jle inc ficompl das and movsb adc aam mov sub push or adc push es test pop xor imul push out outsb mov ss jg or sub in and or add sti fs mov and and sbb mov rcrl xchg adc add clc mov pop les or xchg inc fs mov out or lcall std jno aam popa and pushf push add mov fsubrs mov sarb ljmp xchg js sub xchg (bad) mov or add push add xor push sbbb clc pop rclb inc inc fwait lock (bad) int3 and dec incl mov dec mov xor popf ret sub mov pop adc push cli push mov jmp ds pop xorl pusha js cmp push mov loope pop jl pusha (bad) or add add js movsl mov inc and or andb sub jmp pop push and and jl pop fmuls and fcmove push cld test stos rcll cmp pop lcall ret add outsb xchg mov lds cmp ret out or dec add xchg jmp mov and nop neg cmp sarb mov lcall or cmp lock add push test add push dec sysret mov inc mov cli in in movsl cmp add and or in out or mov sbb ss fsubs cltd add pop in fmull and lock cwtl inc test insl add add mov or push mov add stos (bad) xchg dec enter push dec mov fdivl and or subb addr16 mov add mov iret sub loope and insb lds adc andl scas dec cli or test cmc and mov bound push fildl icebp lret xchg mov cwtl dec sbb add and push inc loopne,pt dec aas or loopne mov stc dec shlb mov fcomi jge (bad) shufps int3 lods add add or mov sub insl fadds lds test adc test sub xchg rcrb and and pop sbb dec faddl mov adcb mov xchg les xorl jno xor mov pusha enter jle add ss pop test loopne inc xchg addb and xor dec div push adc mov fs outsl dec xchg pusha add jle add imul in in orb mov (bad) cmp enter cmp push pop ljmp cmp enter std lods les push dec sub xchg jne clc scas fs test aad sbb orb xchg in sarb popa (bad) mov and inc outsl fucomip mulb dec add (bad) sbb mov les out in cli nop das lea or add or jp add inc stos fiadd dec lret push call add das sbb loopne mov jecxz fld clc dec je test inc sarb push sub push sbb add push adc add into mov ljmp outsl add nop mov pop xor jmp adc or mov jge adc add inc mov repnz mov leave add addl xor xchg into xor inc xor mov push sub lock lods mov movsl cmp adc add mov xchg test (bad) test insb mov stc xor and push cld mov iret jae into push (bad) clc or adc add icebp dec push mov cwtl add dec cmpsb mov stc and inc into dec add jns sti loopne movsb pop pusha (bad) loope mov int add sbb xor movb cmp mov xlat out pop in stc jno push out mov nop pop out sub ljmp fadds inc jp jbe,pt hlt es add mov mov pusha inc jns push cmpsl and lcall and in xor xor scas jmp mov xchg sbb add or lods loope push add mov je stc adc out sti or and or push mov cwtl or inc lds mov loopne push xchg pop ds dec and mov inc sub cmc (bad) sbb push aad inc lahf mov cmp push push mov pop add ret mul add (bad) sbb pop mov add test sbb xchg pop xchg mov pop inc fmulp and or sub jl adc orb jle inc bound or add push loop mov fwait mov add mov cwtl adc arpl mov jge jnp jle lock in pop xchg test in pop push or sub mov sub adc lods mov add test jno adc inc mov lcall fisttp and mov fdivr add mov mov or rclb sbb (bad) dec or cmp add hlt in xor or and hlt and es pop int or sbb enter in add and and mov sub jmp cwtl mov inc dec pop mov dec enter out in lods xor and clc test mov mov or (bad) jle inc sub stos jbe inc mov mov or lds scas push rolb lods mov mov mov fisttp adc mov pop das add push add mov popa jne sub fmull push mov shlb add adc mov xchg pshufw aam push jnp lds jmp push dec jl mov or (bad) addr16 cmp mov je sahf inc jecxz pop clc cmpsl cs mov and pop out sub inc les add push jno or lock hlt push inc (bad) mov xchg xorb daa (bad) mov cmp aas and push adc in pop pop hlt add mov mov xor into and cmpsb inc subb pandn sbb push add pop dec mov pop dec inc scas push sub fs stos rcl mov adc cmp or jae push sarb cwtl hlt sbb dec and fmuls pusha sarl push call dec or cmpb xchg pop add sbb mov push xchg fildl rorl jmp sbb dec test test add fcmovne add pop sbb and add pop inc out jo and push addr16 sub push test and xchg in inc push dec push sub loopne adc movsb add int add adc into das (bad) ret int xchg enter sub add add shlb loope mov xchg dec out daa or (bad) cmp push cmp (bad) aas and adc int3 divb adc or loope imul lods out mov sub lock push rclb or (bad) stc ds adc test xor js aas adc repz popa mov jl hlt movsl fsubs inc sub xchg dec (bad) push cmp imul popl sti pop call xor scas popa cli loopne lcall dec pusha cmp xor imul sbb jmp xchg loopne cmp pop sub in rcrl adc push mov and iret dec mov mov lock lcall lahf shrb aas mov aam lds lcall pop lcall adc xchg popf loopne test add and pusha bound push add sbb aam and dec int3 (bad) adc cld mov or mov add xor inc js xchg xor sub rol push sbb or je sub sbb rcl or rorb dec aad add add loopne mov pop adc cld ret add pushf dec push lods incb ljmp std add jo (bad) push ror les icebp gs pusha ret pop xor add and repz push ds rolb push xor inc add movsb (bad) xor loopne dec stos lods adc adc mov dec cli xchg or pop int jb aas clc jns mov dec or add (bad) mov add add xor adc lods (bad) dec cld add loopne xchg cmp shll subl outsb adc push (bad) xor sbb stc add push xchg mov adc jle xor mov sbb nop sbb sahf lods orb cmp add iret jmp out add cmp sbbl add faddl xchg xor mov pop add push dec dec pop pop jo adc push andl repnz add ds cmp cmp addb and (bad) call sbb bound push mov xor movsl add mov or add test insb pop push call aam lock mov add mov pushf dec out inc mov adc movb pop fildl clc mov jl sub and daa dec inc pusha or in mov jmp adc lock mov jnp es sbb xchg stos sbb add aad jle mov mov jecxz les data16 imul cmpsl sbb adc in push and mov inc fwait mov test mov cmp lock cmp push test (bad) loopne xor fdiv add add adc scas es xchg add lret pop push mov dec dec jmp test roll subb and cwtl inc mov jbe (bad) mov stos ret rclb add jns xchg adc int3 dec daa lods out jo ds or nop cs jne iret add or in orb ret add pop and cmp add xor lods pop push sbb jp push ds push and insb cmp mov rolb pop popf inc pop rolb dec mov lds jo jge mov dec xor pop add bt inc xor lds sub pop pop add mov aad pop pop fstl add insl jl loop daa xchg loopne mov xor stc test fldcw push mov int3 pop in pop inc ja add dec cmp mov iret leave sub fwait jns,pt loopne roll cmp push negl xor add (bad) test or cmp in add sub add add inc ljmp jge mov cwtl ss out add int lds shr in xor lahf sti or outsl in push in xor shrb or lods push vmwrite or (bad) in sbb jmp mov jne jmp insb push fwait cmp jg sbbb inc adc push in sbb add add sub xchg and cld mov sbb incb in mov fwait lret arpl mov jb inc add lea mov inc inc cmp and push lea adc (bad) jle inc and lret jl add aam jle or inc push push adcb mov mov jmp sub sub xor js mov inc lahf adc pop sbbb orb push lret cld pusha xor repz jg xchg cmpb or adc cmp repnz sbb and test hlt out add pop int push mov imul andl mov cmp xchg cmpsb xlat inc add test fs adc jmp decl inc pop popf and enter test inc adc seto xor sbb inc adc fnop pop rorb jge dec rcl or mov repz cmpsb push lock mov or mov nop ja mov insb adc jle jmp cmp sub fadds out and sub mov sub jno add mov add inc fisubl sbb pop jns add icebp sub cmpb psllq sub stos dec inc mov cmp mov roll test test push lds dec jge inc sbb pop jne inc add shrb scas jle jl xchg dec xor xchg (bad) adc daa shll inc (bad) pop out stos xrelease mov nop adc repnz cmp mov (bad) mov (bad) ror sub xor and lods push cwtl or imul and inc or pop sub and cmp jno in jnp add push in hlt add (bad) dec push js and mov push sbb jl jo fs sbb rolb mov add out (bad) jne pop scas nopl push sar push mov mov jmp push mov mov ss adc mov mov dec mov popw and add sbb iret inc pop lea pop mov lahf imul pushf add shr ds mov adc (bad) movsb sbb lods rcl (bad) jmp and jmp and push rolb or in sbb lds mov mov cmp xchg pop dec cwtl lods mov pusha push jne pop or xchg shll cmp push test aaa or add inc push sbb cmpsb push xsha1 cmpsb mov and (bad) sub das mov js mov movsb adc sub scas push jp push push ret (bad) cmp xchg jno mov xor fs cmp xor rcll push add ds ret dec leave fs sub adc jl cmp js and or add pop insb add nop rclb mulb lcall inc repz in dec jo add inc xchg mov arpl or ds into add cmp sub inc cmp add pop lock pop decl dec jge inc push mov mov sub jo adcb gs sbb sahf dec xchg cmp mov xchg sarb push nop sahf mov lods xchg incl ret je push sub jmp jo mov adc (bad) add mov xor cmp popl sbbl pop jg add sahf shrb sbb mov insl (bad) push add mov adc push add out push jb jo stc pop add outsb or mov test add cwtl in jl jne add imul fistpl cmp (bad) and pop sbb pop sbb inc out mov dec add xor jo xor rorb iret lods sub xlat mov add push sahf pop ret push sbb adcl repz jge (bad) aaa (bad) jo mov xchg inc popf add jl into push popa insb or loope (bad) sub mov dec js push mov jp jne in call push sub loopne aam insl ds and sbb cmp xor ds into xchg sti add mov mov mov sbb decb std sbb pop rcll rcrb mov in cmp das aas inc inc loope add jecxz ljmp push lret cmp mov xchg inc in xor dec and or adc sub add shrl outsl out dec inc cld push mov push ljmp push mov insb std add inc jo enter xor fadds les xchg inc jmp push les outsl jb and pop add inc mov test inc cwtl xchg div add test stos xchg jl test ret (bad) out stc or outsl mov arpl mov or push rcrb xchg sahf jmp movsb mov test mov dec lods push add jge jae je hlt (bad) push cmp or xchg div sub addb lock lret add jne pushf push (bad) mov out movsb mov mov (bad) mov in loopne sbb add xor sti add add pop loop add out dec jge xor xor or pusha xchg add mov fisub dec ret cld pop mov loope call mov jno dec movsl or mov sbb lods add dec inc add cs inc stos mov or add jae pop (bad) pop aam nop sub cwtl pushf adc jns dec or cli sub dec and arpl xchg pop in or add sbb jbe nop cmp xchg (bad) xor adc call sub (bad) sub adc or nop sub hlt popa aam or or push scas sbb jl xor fwait mov mov add ja mov mov (bad) fdivl nop or and dec loopne sbb clc jmp xor cli std adc jg cld inc cmpsb mov lods or or ret or (bad) mov loope and cwtl mov jl push lret cmp test mov test inc arpl popa push xchg (bad) je rcll call push movl shrb push adc jg pop add pop jmp or pushf rcrl jns cmpsb dec jnp lret jb mov or cmp and add aam jne (bad) lret stc add and (bad) sbb fs mov add loope jns xchg int sbb push fmul fnop add js mov cmp arpl test aaa or pop icebp add lcall cmp add shrl add gs out loop xor jp cmp ret clc push and sub push jnp movsl cmp inc push (bad) sub movsb jle addl dec ss iret add lods or push inc sbb pop xchg xor pop shll out in fcomps test jl movups add push pop dec fbstp and das push sub cmc xchg test fdivl pusha xor and push iret inc add cmc fwait (bad) add adc mull jb mov or test add lret dec shrb cltd pop dec jno add aam leave in lds mov cwtl loopne xor (bad) clc push jecxz mov jge fildl (bad) lock xor lret inc lret add sub jle outsl movb cwtl pop xchg in add aam loopne xor sbb das add subb add mov idivb or push fidiv mov jp in or lret sub push aad inc loop xor add sub add addr16 dec ret fcomps mov lods sub mov sub (bad) aas adc aaa clc test popa pop add andb jae (bad) out add fsubl add inc fprem pop lds mov sbb arpl fcom loop or bound add (bad) or or lret andb and or add jecxz xchg mov fcomps pushf and aad push gs mov (bad) gs mov cmovae inc movsb mov mov mov clc loope dec dec je lret cmp hlt mov or push xor fwait mov cmp push loopne into push pop shl addr16 xor pusha mov xchg mov cmp xchg arpl mov xchg mov jnp shl cwtl pushf adc inc das aas movsl clc sbb sbb aaa adc add outsb xor (bad) fdivl cmp adc ret cmp dec test mov lds fsubs sbb adc xlat mov fsubs jg iret mov sub sub addl sub xor loopne xchg outsl jo sbb pop pop add popa ds je and mov xchg push incb inc mov adc add mov test cmp lcall repnz insb sbb test inc cli inc (bad) out andb orl nop xchg push pusha mov adc call cmc (bad) push jnp test rcrb hlt push xchg insb faddl negb pop mov dec sub add out xchg add sti sbb fldenv sarb ja mov cmp bound insb js pop movsl sub add addb lods pop add xor xor fidivrl dec clc sub leave push hlt push and add mov orb adc cmp cwtl js and xchg cmp or pop dec rcll push leave repz sbb subl sbb adc inc jmp add jns sub and inc cmp (bad) leave push inc ret pusha jl sbb mov sub shrb fldl call ficoml cmc inc push adc xor lret in sbb push movlps lds mov cld adc call jge sbb in jmp in jmp xchg mov add test unpcklps xor pusha adc jns xor jb loop jecxz adc lock ret cwtl imul and loop pusha rclb sub inc int and xchg jle outsb adc cmp jbe dec and shlb inc add hlt lea pop mov add dec es xchg and andb mov lcall je inc and add cmp xor jo fbld aam loop add (bad) leave (bad) les scas test mov cmp pop mov aaa inc xor es (bad) mov fdivs xchg xchg sub mov sbb push sub and fldenv pop out shl jecxz mov (bad) and ds repnz mov je ret fcomps sbb mov mov lea adc pop idivb enter add jb xor sti lcall (bad) add fmuls shl dec insl nop pop fs (bad) hlt xor pop jle fnsave hlt rcll rorb sti mov out jae loopne push xor lret sbb call mov pusha fdivrl shll push jae sbb push scas mov jbe lock cwtl test int3 imul ret inc xchg (bad) add arpl push add pop and gs inc add loopne mov fildl mov cmpsb mov rclb aaa xor out dec mov inc dec pushf int3 push or sub fs mov inc test add ficom add xor mov add es flds push fdivl dec (bad) xchg mov sbb push int3 xchg mov inc pushf test in mov mov scas sbb test xorl add add pop mov fwait lret push sub ja mov add fidivr inc rol or push lds sub je pop lock into pop mov pop pop dec loopne add sub enter js out add fstps jns decl cmp not out sbb in mov fsubs and push inc xor adc dec nop sahf xchg das xor sub and nop nop dec ja add push or dec rclb ja xor data16 add sbbl inc (bad) nop sub push rclb test das mov and sbb inc mov push nop xchg cwtl cmp mov add shl add lahf add sbb mov out daa test push add sti loop hlt add out cmp cld cwtl xor (bad) sub ja rorl mov repz es sub xchg inc pop (bad) cmp and dec cmp int3 rolb mov mov add push dec pop hlt call cltd movsl add xchg mov or fdivrs pop sub in out gs adc add jg mov js inc loopne mov jge leave inc les mov fsubr pop scas sbb or xor sbb movl xchg movsl ror lret nop cmp loopne imul mulb cld mov hlt jecxz test je add pusha icebp rolb sub (bad) repz jnp inc dec inc rorl jge pop loopne mov movsl fbld repnz jecxz mov dec or stos mov aaa cld xor fdivr aas jp adc enter in into push insb pop mov mov xchg stos dec je add jle ljmp push in inc jmp outsl outsb add jp add adc sahf inc push push mov mov idivl ror add lock sbb rcl xchg add lret mov xor push mov add loopne jnp mov dec sub mov mov pusha or ljmp jmp out in stc fsub jo loopne lret (bad) data16 call movl pop inc dec gs or add jae xchg add jp,pn and pop orb hlt test add inc jbe jo lods pop es shlb cmp fisttp pop push dec (bad) dec push outsl stos lea pop sub pushf cmp in jnp adc orb jp sub es mov loop int3 subb lar test mov lods sub mov cmp call in mov add or fistp mov jnp ja inc andb test jae dec mov mov andps (bad) fcompl outsb add lahf jae mov mov adc sub cmpsb (bad) push rcl mov mov add call sub mov jmp nop or rolb les bound sub popl cmc les daa mov or je sbb jns add sarb popa xor mov test mov fisttpl adc mov ret aaa sub mov test fist dec adc cli add setns adc js pop mov inc jns fsub fs mov cmp or push test ror and pop jmp xchg xor int3 or mov or mov inc loopne xchg lock push rcll divl adc nop mov push andb sub loop test inc push call inc add mov test jo orb clc sbb dec ret (bad) jbe xchg or mov push ret xor das push imul lret xchg add (bad) jb adc fmul jo inc mov adc fcomps nop and inc push shlb lcall rcll jmp std xchg sbb add mov divb xor xchg outsb jl push (bad) xchg mov jns fwait xor pop rolb les lods xor pushf and scas pop push daa sahf lods cmp imul fwait mov or xchg add fucomp or sub cmpsb sub loopne xor push adc adc mov adc push cld adc pop inc mov mov fisub mov sbb pop aam in lahf inc repz inc dec cmp fldcw inc inc (bad) jo mov lock std pop stc test pop dec inc popf decl mov xlat in sub das shrl jno xchg aas andb add inc add sub adc stc ljmp pop add or jnp sub sbb or shrb fwait add dec sub popf pushw or dec fs sub in inc ret fnstcw addr16 push (bad) fs jns jbe test and or std xor inc inc enter and xchg test inc test push mov cltd add add lods cmp sbb push loopne sub repz add in in rolb nop sbb gs add add cli push out add add les jno je data16 xor and push repz sbb addb (bad) sbb push sub jno and adc add mov push gs outsb dec lods adc or mov push dec xchg addr16 xchg hlt daa insb add out xchg (bad) pushf mov xor jnp inc lods push mov pushf mov mov lods mov adc cmp inc sub mov movsl outsl js mov jp (bad) ds jns add movsl push fsub stos lds fistp xchg sbb mov test push imul push add btc push mov lock or push aaa aad add and adc add mov and dec cmpsb add adc adc mov test jo adc (bad) dec sub mov cltd mov add or or jne jo jmp lcall aam mov sub lods and pusha push push in add mov mov adc (bad) mov popf fbld aad in cli sbb pop shrb add add pop mov in pusha add add sbb aad jecxz in push xchg xchg fcoms cli mov inc imul negb push dec pop sbb mov jmp add adc je loopne mov rol push lods and adc sbb popa addl psubb sbb in (bad) lcall push and adc and or bound cs jl mov mov stc popl or hlt ret mov adcl lock sbb adc or rorb sti stc push xor stos adc mov and add out lret out xor xchg pushf add dec adc out push add dec ret enter sbb cmp enter or stos lock inc bound or hlt (bad) shlb mov sbb popa mov mov daa shll and aam or inc pop add or add lods fadd cmp push aas push les pop add lret into dec and or fildl shll nop icebp aaa in pop mov repz lods jns (bad) push pop xchg dec add insl sub xchg int3 xchg test ret fldl and (bad) pushf sarl bound cld pop add push mov notb je in xor jno (bad) je push aam movsl movb mov aad pop loopne js rclb test mov enter iret adc in xor je nop pop aad mov cmc jg mov sub (bad) mov xchg std or mov gs pop dec dec push rolb lret sub pusha mov sbb std testl ficomp cmp out dec icebp xchg mov add or mov cld pop addr16 mov sbb add dec pop lcall rorb mov je sub fisttp test loop or sub or mov push aam js arpl pop pop lods inc jae adc adc pop or adc adc jp insb pop jo ljmp mov pop or mov adc and int3 sbb je out mov mov push ds pop adc sbb addr16 dec adc addb (bad) mov cld lds cld or test les loope xchg mov repz xchg lahf add popa andb negl and mov sbb inc scas pop add mov cwtl or out cld dec bound jg jnp out jl pusha sbb mov cltd and lret sub sbb clc inc pop lea add xorb push jl mov (bad) and and xchg out sbbb jne enter stos add (bad) add fsubp dec lods out xor inc lret sbb add out smsw (bad) cld (bad) pop clc subb inc cmp add cltd push pop ljmp or movsl (bad) cmc push push rorl punpckhdq dec fs arpl jmp add push add mov es add (bad) jno movsb jne mov cmpb dec and xchg dec mov and ss push pusha sub enter mov inc mov nop pop inc lret out mov or lcall mov inc xchg dec push imul mov addl leave mov int3 or aaa fwait or jecxz dec std test loop lock mov push nop movsb inc mov aam pop insl hlt mov sub xchg movsb xchg mov xor inc lds pop mov adc cltd mov pop inc inc and add lods xchg sbb xchg popf std inc test das add idiv xor add adc jge loop push (bad) or int3 (bad) out lock mov sti xor in or das in cs adc dec add xor stc sahf sbb test dec sbb test test mov iret xorl jo test shrb pop (bad) or mov xor or mov je push cmc dec das pslld imul mov inc cmp fdiv or sbb pusha xchg mov sub xor jp js rclb enter add in mov and aas mov (bad) push add test xchg pusha lds inc adc ret dec pop push test mov aas pop push push inc dec mov rorl pop cli adc cmp push jmp stc push add inc in sub dec adc addb inc std jg call inc loop mov loopne mov lds sbb xchg pop dec js lods mov inc lods test push jns add cld add or jno sbb in sub add and sti dec data16 (bad) orl adc pop scas popa pop (bad) fiaddl push pop adc pop pop insl adc (bad) leave adc pop arpl (bad) lcall add lods je or pop cwtl pop dec (bad) jo or inc ss xchg iret or inc in and dec push inc sbb jnp mov mov mov stos stos (bad) enter jno mov sbb inc xor pushf xchg pop push (bad) jnp je or jne jmp or push push pop je and leavew hlt loopne scas push aas pop mov adc rolb and andl (bad) cmc push mov mov or scas push add loopne sub pxor push aad lret push add mov cld add push and or sar sbb loope loopne jno jl sub rolb sbb jns out adc gs lcall data16 pop add cmc fimull add js add iret or cltd das lea push mov orb aas fisubl pop pop pop xchg test fsts jl mov nop mov add gs add jne sldt inc mov out add mov ss add mov or mov and data16 mov xor cmp sarb add add xchg dec cmp add movsb stc push push cwtl mov popf cmp pop fisttpl shrl rolb lcall dec or push test inc inc les adc cld rcr sub mov lcall xor push mov cltd gs andl int3 push and sbb pop in data16 (bad) jb mov cmpl add xor stos shll dec push mov test push in add fwait mov dec cltd add push cmp rcrb into fimul inc sub and dec je adc movsb sub jns sub inc lcall add fidivl cwtl push cmp mov popl and sbb inc icebp movl push clc pop imul scas mov js dec jb add repnz and dec pusha pusha add adc shrb pop lock repz jno adc lods adc or test std dec cld mov xlat repz lods push jl movsb out and mov cwtl cwtl adc push xor mov ja mov loop pop push cli mov dec cltd inc andl pop and push xorb repnz inc dec addr16 or mov popa adc pusha add and xchg outsl jo push add mov cmp aas add mov rcrb orl loop enter imul lds outsl bound mov add mov inc dec push add jg or adc adc cmpl rorl hlt xor lcall out call sbb scas and jg sub xchg mov addb inc inc fiaddl dec sbb jae mov pusha sub movsl xchg cld adc outsl arpl loopne sbb (bad) sti or enter and nop push loopne in repz mov add adc sbb add and stos add repnz das orb insl mov push mov inc dec and jl out mov adc sub mov test adc inc sub adc add stc sbb and or adc adcb pusha mov sub cmp in mov or and pop adc jo xor dec lret mov sbb (bad) in inc sub xchg sbb mov mov fdivr mov rol xor rclb mov push sub test inc fstpt adc push adc inc mov mov mov inc push ja pop fstpt mov sbb sti add push mov loope cmpsb imul int3 js xor or negb cs cli sbb or fwait cmpsb mov sbb setp xchg popf sub xchg scas test adc imul add cmp cwtl add (bad) mov pop add add xchg loope inc jb rclb test dec push push fistpl sbb add inc and mov add adc (bad) mov cmc dec sbb daa jl sbb sub add js lock les add xor dec and pusha cs xor xchg in add int3 jo es hlt sbb sbb mov call pusha jl ljmp ja mov or out call inc fstpt xchg add andl sub add adc xchg aaa into hlt inc add jns lret fsubs pop jg outsl jmp pop ja popl mov adc fcomps in ja loope jno and add sub jne outsl or mov dec aaa cmc hlt cmpsl sbbl pop fild jno dec sub and sbb sub jbe pop cli sub fsubrl sbb add jnp int3 or cltd sbb loopne addr16 popf add mov pop mov or xchg mov and push cmp push push lcall fdivrl jne repnz int3 sbb in cmp test lds xchg and mov lret mov cwtl in add cmp repnz and dec or test fbstp add jge fs fs mov stos mov popf les inc mov dec add xchg mov cwtl mov dec sbb cld mov (bad) adc push (bad) sub outsl ficoml ret add xchg lods push inc popf outsl ja add push cld scas add fisubl dec cmp mov add fisttpl lcall add (bad) repnz cmpsl cmpsb add cmp repz sbb cmp mov je and jmp pop mov test push mov mov bound xchg or sub lock rcrb push lret rorl nop jl out xchg cli in pusha (bad) add add inc repnz into xorl fistpl adc or lock push push inc andl repz pusha and add addb out imull adc imul mov push mov mov inc repz data16 adc outsb pop loope mov enter or dec cmp ds push push repnz pop mov mov adc push add or add adc pop (bad) (bad) xor mov fisubl mov imul rol movsb or pushf andl mov jge dec mov sbb cwtl add jo push cs xorl testb subb mov andb push xor cmpb xchg cmp inc arpl pop add sub fstpl inc push xor mov into mov jg add lgs xlat ds and adcl out fwait movl push mov jmp push mov push sarl add ret mov mov add xor xchg add hlt jnp enter push mov push push dec adc sbb jns push pop push mov lret je dec mov mov leave and loopne pusha (bad) mov sbb jp (bad) and add sbb insb icebp pop mov mov push mov dec push and cmc mov arpl jp ret adc dec pop add aaa (bad) adc icebp imul cli push pop mov popf (bad) cwtl cmp hlt into sbb shrl dec adc sbb push mov mov or and xchg fisubrl dec pop jecxz roll push lret (bad) imul imulb jg into cli push xor and add fsubrl or bound icebp in sbb movlps pop sbbl je or out (bad) jbe mov jmp out mulb pop mov pushf add int and movsb mov cld jg mov ret pop adc adc mov xor (bad) cltd inc fnstenv xchg lock sub mov lods add cltd xor lock pusha mulb pushf add add push nop popa clc sahf leave bound pop outsl lret arpl add xor add sub dec inc fs pop pop inc dec (bad) or jmp lods (bad) cmp jp cs iret push outsl and ret ss imulb popl je cmp lret cmp loop cmp arpl add cmpsl leave sub (bad) lds jg or aam mov push shll adc rcrl pop popf nop jns and les pop stc (bad) push pop xchg daa xchg dec or adc cli pop dec test ss ret sub or inc inc outsl inc dec repnz jl insb adc add je cli ficomp mov xchg add fstl xor inc and fadds add inc dec jmp add fisttpll jl jns add test fs jae pushf sbb sbb mov push roll jo clc addr16 xchg or sub or cmpsl mov inc sub ja sub lods mov inc loopne shrb jo (bad) cmc cwtl test sbbb jg dec add xor test and (bad) repnz jbe lahf aad jl add lods (bad) fs mov push inc inc jnp int push movsb dec jmp adc cmp fstl cwtl cmc mov nop inc rorb ja push bound add sub dec push inc ds adc movsb invd call add pop sub mov stos popf test add or mov xchg jmp mov and xchg inc mov loopne and pop add movsl in fsubl inc or adc clc popa test int lret jl add or mov add inc mov xor sti ds add loope mov iret mov mov pop shl repz ret push adc sub call insb lds test xor fsin xchg (bad) cmpsb sahf repz jg icebp shrb (bad) sar jle aaa adc or dec outsl add dec mov clc add xor mov hlt pop add push pop pop nop rclb and repz ljmp stos jge mov pop dec rclb out jmp add push or sub dec dec add inc or (bad) out arpl js test rclb rorl adc adc push stos add push push notb adc mov push (bad) mov jge and fs sbb dec mov aam sbb lods add push jns xchg js lock push sbb lock mov fisttpl xor xor mov fnstcw xchg mov add or (bad) mov or fwait adc mov pop in and pop sub inc hlt jae xchg aas pop bound sub inc cmp aam in add mov mov push into and and mov push or xlat pop add mov mov xor (bad) xor pop loopne (bad) or jl fs mov mov cmp dec add imul pop push test aad dec and nop push lds divl pop mov sbb ret jbe bound jmp add (bad) lret popf pop mov xchg mov xchg shll sahf or add leave xor sbb inc cmc cmpsb mov sbb push icebp xor jae inc or jo gs lahf dec jge ss jno add pop mov (bad) lret cltd add sbb sahf dec add cmpsl xor fs sbbl mov fcmovnbe push (bad) icebp sub push add stc jecxz clc test push sub xor xchg inc add inc test pop dec add ret rcr lcall scas daa xor lahf rcrb add xchg int pop imul aas sbb mov icebp lods fisubl rol incb aaa in popl and (bad) jne cmp das add test subl daa cmp pop pusha fbstp mov mov sbb and std iret add arpl xchg or in daa sbb scas je push xchg mov mov dec hlt cmp dec inc mov iret and dec mov cmpsl (bad) adc andl xor pop xchg xor push sbb xor test je sbb mov jno cmp add add cmp jl rclb xor cmp jp xchg and jl add add jecxz mov (bad) jg inc mov and push test cmp xchg xchg in sbb inc jbe loopne mov mov mov cmp add sbb subl or mov loope mov (bad) imul movsl adc iret ret stc outsl fs sub cld popa and aaa subb xor push sbb arpl jp add scas mov sbb add daa out xchg lds sbb pusha inc mov fisttp mov cmpsl adc push mov pushf rcr lock add rcrb sub sbb add mov push das add loop jo mov fcomip pop mov sub dec or int sub pop ffreep push mov cld stos xor xorb xor cmp or iret pusha push inc or clc sub movups cmp xor das add push js popa xchg xor push adc popf fnstcw pop push das out icebp mov sbb fiadd xchg xchg cld inc mov push add inc js cmpsb sti loope or cmp mov and popa sbb jle xchg add into out mov shlb xor cmpsb pop test mov nop add dec mov je insl jb test in lahf pop cmp cmp sti inc and test push or int3 inc mov push dec mov pop aad dec add pop repz mov popa dec inc adc into or xchg mov push enter ss jne adc push lds or push sub cmpsb cwtl lock jmp enter jno cltd (bad) repz dec push out add (bad) pop mov insl add sub movsb repz xor pusha or cmp (bad) mov cs add ret pop nop lods or dec mov mov xchg repnz push cmpsb mov jno jg (bad) or or lcall test add add jl das jnp add sub xchg loopne add mov sub add and sbb xchg add xor add inc mov and bound xlat pop inc cld lock xor add inc ljmp pusha dec repz nop inc jl test push add jnp jae es pop icebp and fcompl xchg or clc sbb jecxz int3 and or or push add inc dec nop enter js inc pushf imul fisttpll jno repz into fisubl add movsb in cmp (bad) pop rol mov xorb xchg add and cmp scas add mov ret nop movsb stos mov les xchg adc cs aas and loop jns stc cmpsl pop jmp add inc push iret add xchg js sub dec shlb dec xchg movsb test mov sbb sub bound sub das or push pop dec pop faddl out xlat ret mov mov int3 mov cli subl inc pop jle clc mov pop cwtl sbb scas icebp pop pushf les xor int3 pop add inc lock out dec outsb push xchg cmp add sahf daa add adc in sub mov xchg xor loopne jno mov pop (bad) xor test pop std inc inc mov loop adc lods imul mov sahf outsl lds push mov inc add add mov inc adc fs pop ja inc mov or dec inc nop or inc mov add or fcompl dec cmpb sbb stos jo pop arpl cmp lock and mov mov cmp or in shrb jbe xor sub fisttp test and clc sahf stc sub or int3 sbb and pushf fisttpll jmp cmp mov cli sub loop je ret sbb in lea sbb push loopne add out cmpb mov adc add out cmp cld dec dec push sbb lret adc or mov into loopne mov push add fsts call push sub add movsl outsl add fisubrl aam lret xor cld rcll mov hlt jo sub xorb mov dec (bad) cmc pusha lods dec push add jmp pop push rol add sahf or push mov les inc mov aam inc add test pop xor sbb fbstp jl adc inc loop sarb test loopne stc xor adc outsb in loopne sbb mov arpl bound (bad) fdiv hlt sti pop mov (bad) iret fcom xor cmp lcall call xchg inc mov dec icebp cmp gs xchg out dec and jno addr16 dec ret mov or enter xchg cmp arpl movsb inc cmpsl cmp add (bad) xchg xchg fnop repz sbb adc andb jb or cld add ret rcrb xor clc sbb xor (bad) push and mov rcrb cmp add pop in popa cmc imul sbb mov test pusha xchg add mov loop pop hlt in (bad) je add mov cmp cmc xor lods setl push xchg rolb enter fldlg2 dec push add xchg inc stc or push adc sub ret pushf or iret clc cmp js or or xchg add mov je add (bad) xor xchg and dec fistl push or mov (bad) nop pusha movsb fcoml out and jl das mov mov pop mov mov inc lock add jp les psubb xor jne mov fsubs pusha sbb sub pop cwtl ja,pn push sbb std cmp adc call out add jmp aaa popf cld mov add jmp (bad) lods sbb push dec cwtl test mov sub lea fucomip out sti add call flds cmp sbb add rolb sbb adc mov mov push cmp cmp aad hlt jp out mov sti lret repz sbbb sub (bad) test sbb repz mov jns cmp jbe pop jecxz loopne mov and pop push push fadds mov enter lret and pop lcall cmp sbb sbb dec aam movl out sahf pusha or mov jae ja loopne subb add inc fwait test sub inc mov sub pop sbb pusha adc les aaa push add mov mov push inc add cwtl push test mov js add or lcall fistpll push sbb cmp add add pop or sub pusha mov pop out lahf (bad) mov and pusha into sub or rclb cmpsb jo mov bound outsl adc or (bad) or inc jp aam and jnp fmull push mov inc mov mov and or cmp push sub jmp add pop mov in loop dec dec pop test adc testb lea dec mov roll enter cmp mov add and add sbb mov test inc jl or adc dec jmp or cwtl sbb popa lahf mov dec pop pop pusha cmp jnp clc nop sub test shl xchg aas loope cwtl adc push fcomp jl adc jns lods sbb lret subb add sub fisub jge scas rolb stos pop dec out sbb adc or addr16 jl int3 jbe psubb leave imul js enter dec lock js popf std sahf sbb sbb cmp push pop xchg lock inc sub or xor test adcl sub sub inc cmpl mov pop loope dec add sbb xor add jnp adc in sub xchg mov dec xor xor repz add dec mov pop clc push dec mov jae je inc psubsb dec mov les push pop leave pop out sarl subl pop out sub test scas xchg pusha xor sti xor loopne subb clc addb sub (bad) and adc xchg xchg bound stc inc aam xchg or test icebp mov arpl inc lret pop pop jo insb in mov insl adc cmc cmp push fadd jnp inc push sbb add loopne dec test inc orl inc mov loop sub loope mov das scas add cltd add popa jl sbb sub cld loope push hlt xor and mov jne or ret inc rcrb fwait or jno dec sbb in dec sub xor xor dec into dec inc or push iret aam fs mov push xor out sbbl enter (bad) or add sahf jle outsb pop pushf orb lret cmp es lds daa mov out adc or (bad) nop or cmpsb dec adc adc jae inc sbb loop cld sbb lock aam nop jle or mov nop xor mov sub adc rclb in inc xlat pushf adc clc adc pop orb roll or xor add out sub test inc popa andl jl mov and movsb mov inc nop ret cmp dec push inc mov mov cli rorb pop push add aas cmpsl mov add sub shll add into dec sets fidiv shr flds rorl dec sub push movsb add lcall outsl cmp dec push and pusha sbb adc fdivl mov shlb leave mov sar sbb or addr16 xor xor inc sbb inc dec pop daa push out xorb push dec and add add or inc pop xor mov ljmp xor (bad) mov or push sti or xchg sbb sbb push or sbb or xchg sub and cltd xor jl pop xchg arpl adc lret nop dec lret fs xor sbb sbb movsl test sbb inc daa push ja push and test mov push out pop add andl mov pop xor push adc stos xchg xchg sbb stos mov fadds fisub fs sbbl add inc and add mov mov inc dec add pop inc adc lret call lcall je pop pop cld sub dec add or mov pop cmpsb xchg dec cmp jnp out xchg movsb inc clc sti and sbb adc test es hlt lock xchg clc push cld mov ret adc repnz (bad) and inc mov cmpsb adc inc adc add fstps sbb popa pop inc enter (bad) pop add push jb rolb pop jnp into sbb or mov loope enter xchg in inc add xor add insb adc mov xchg pop hlt stos leave (bad) push lds cmp xchg inc in enter sti psubw sbb add loopne aam out test inc jecxz adc arpl js pusha outsb push out push adc mov enter dec cmp pop or and (bad) mul push test sahf sub outsl push xchg pop imul pop inc or add test adc hlt push lods jl push lock orl addl pop inc nop and shlb add mov push mov adc and or cmc test (bad) fs mov adc cmpb sbb inc enter clc sbb roll testb (bad) sub mov nop jmp cli stos add into mov mov je jae pop add clc rolb out add outsb pop mov xor add out inc and loop bound sbbl add sahf imul orl xor adc sub mov sub jns add pop mov and adc add stc mov jmp mov jne xorb pop push pop sbb insb dec or mov (bad) cmpsb mov lods sub imul jle add in loop loopne dec bound lea adc mov push add sbb cwtl sysenter dec dec cmc aas cmpsb fs jb inc in enter jne or pop adc and subl jg sarb (bad) pop sbb sbb push inc test (bad) mov or popa push rcrl jmp inc mov adc call jle mov fisubr and orl sbb sahf push adc mov dec or xor and xor cmp and popa and sub adc mov icebp add jae mov jnp lock cmp sbb push pushf xchg inc dec or or stos ret and (bad) in xor mov aam pusha mov dec xor dec cli sub sub adc jb sub mov mov xlat movsl cmpl add add or jbe and push inc pop les sbb mov mov jge pushf psubw call imul out sti in jmp sbb cmp jno cmpb ljmp cmpl pop das mov lock or es push sub in lahf sbb jp or sbb push in out push xchg mov mov dec bound or cmp or call sbb in addb cmc lahf inc incb pop iret lret xor arpl insb mov mov leave xchg jno sbb gs xor test arpl fcomps popf jns movsb sub (bad) jmp shl add push sub add and cmp insb stc repz aaa jecxz add jmp test fwait xor data16 (bad) lds or loope cmp mov inc pop mov imul dec sbb xor cwtl and jb mov and fwait gs popa cmp sbb xor ret (bad) inc or ljmp les mov pop add add xchg mov js insb cmp daa call test int3 push xchg inc hlt sbb pop xchg lds sbb and inc movsl xchg jns cmp jns add inc jmp rcrb mov in and bound mov adc call push (bad) cwtl pop dec mov repz inc and lods mov or sub es or jns movsl faddl inc mov xor inc push dec push test mov adc orb mov and or (bad) call mov dec imul xchg loopne mov jl lds rorb push or dec int3 cmpsl mov in addb dec inc inc call cmp add outsl sbb cmpsb cmpsb adc add shlb gs add push mov inc and pop dec ret and sub (bad) sub stc es sub movsb jle or mov or add (bad) enter test arpl dec in cmp rorb sub sub jge stos and loopne xchg popf pushf ffreep xchg in cltd sbb fs test cmp scas sbb inc sbb push cmpsb sub and pusha aam movsb mov cmpsb pop push mov add pop and gs adc pop inc or xor test roll inc adc (bad) mov mov movsb sub loopne std mov orb test aas sbb mov xchg in jmp inc sbb dec jl sub dec inc lahf push push sbb and mov popa jo or lods nop js adc sub xor cltd lahf adc jo sbb call push cmp mov repnz dec push pop loopne push sub or mov shlb pop popa out sub loopne or inc flds adcl mov cld dec cli add or insb out xor js and dec je xchg sub push call inc popa push shll jg xor push sti hlt jo bswap add popa lds cmc orl add or sub (bad) jo mov mov int3 mov rorb and jns in test subl inc sub mov inc cmp push mov loopne sub dec ret mov test push inc mov or mov xor test add push insl les push jmp adc sub and pop jmp cmp andl xchg adc test in pop rcr push test pop adc adc loopne in and clc sub frstor cli pop xor scas xor pop andb cmp sbb mov inc cli inc sub sub rclb inc mov pop inc enter add fisttp mov jo stos cmp es sti pop mov sub daa ja aam mov or adc cwtl mov sbb mov mov adcb (bad) adc bound sub pop inc outsb pop adc test data16 and ds add test mov jg or push xchg inc dec add jg pushf les fidiv jge xchg bound and mov lahf xchg jge sbb ror (bad) mov inc sbb adc mov adc movsb jo iret sub imul movsl sbb xchg fwait arpl sbb xchg cmp jg stos cmpsb leave rclb mov add or inc xchg leave pushf sbb mov jns out mov fld or iret imul or (bad) icebp stos lret rcrb inc mov repnz (bad) mov hlt push in rcll adc sub call aam enter and fiadd in int3 xchg mov rcr shr ljmp cmpsb nop popa inc or and jo outsl hlt push dec loopne adc sbb pop insb pop cmp movsl xchg or test rcr mov fistp int3 loop xor or mov rolb pop imul jmp ds cld bound aam test sub cmp push arpl sahf push jp in mov add push repnz xor or fnsave push jl jno xorl ja fs adc ret adc lods lods xchg aam cmp fwait jp cmp and mov adc pop (bad) jl xor sub ret and pop mov pusha in mov repz xchg sbb push movsb hlt cmp cld mov test push (bad) jo aas movsl sbb xor sahf mov jae ficom mov cmp scas sub pusha add jae orl mov add inc sbb sub ds mov add and inc sbb nop fbstp dec dec mov xor repz sub out fcmovnb adc addb mov rcrl or cmp lock int3 mov pushf js adc dec or wrmsr adc or push int inc mov pop aam repz in adc jnp cld dec pop rcll decl mov jno (bad) or adcb aam xchg outsb pop rorb push cli ret push add movsl jno cmpsl jp mov adc push cmp pop mov les test inc fdivl enter fadds jl fwait and inc outsl xchg and adc enter loop les cmp xchg sub or in lahf sub xchg pop or and jmp int3 adc or mov cmp add out or adc imul and lods ret rorb mov in shrb mov cmp mov push repz add and or aad subl repnz inc push sti movsb cwtl arpl mov or and clc mov or test inc mov (bad) fsubl adc loopne jmp or xor push add push mov dec mov cld scas sbb (bad) insb clc fs push or sub push (bad) cmp cmpsb enter inc add adc pop lock addl dec adc pop jnp pusha dec scas imul mov dec xor call fldl inc stos dec test inc lock test loopne fsubrl iret xor mov rclb xor fsubl xor mov test jl xchg push in push ja add cli ss ret ljmp sbb mov mov ljmp add sub add pop mov addr16 sbb icebp inc pushf or dec hlt push sub xchg imull mov pop movsl dec push cmp sub sbb or adcl push jo xor nop pop dec or and mov lock (bad) and xchg pop outsb sbb jae push nop and mov pusha inc mov xchg mov add ljmp and xor pushf out push je xor adc repz xchg mov mov mov inc push ljmp cs movsl pop cwtl stos or sub xchg sub pushf lea mov xor or mov push cld pop sbbl mov jbe adc in push mov xor sbb outsl cltd rol inc cs add sub gs enter mov pop out enter jne xchg jl shrb xchg sub xchg or into xor mov pop addl fcomps (bad) ss pop pop xadd data16 cmpsl or push fstpt xorb push xorl add lcall sub push lea or in add icebp add sbb dec scas pop (bad) mov lock jmp xchg cmp jmp xor lods sub outsb xchg sub mov or or dec enter xor jle mov add adc rcll fdivp adc mov xor or adc sbb shlb xchg sub adc mov xor mov shll sub les out sub add or mov movsl cmp sbb or mov bound fs jae andl mov test adc and cmp push dec les loopne test fadd mov les xor es les cmp lret fcmove pop add sbb inc (bad) sub push or pop pusha mov mov sub loope xchg cli push push in cmp test movsb (bad) std adcb enter push mov call cmp les xor rcrb adc inc in loopne mov cwtl addl inc test test es in xchg inc and jo inc addr16 dec and sbb jb lds xor adcb mov xor dec xor fs adc shll orl adc xlat in xor sbb mov pop dec xor out outsl fsts cmp sbb scas in inc pushf mov or adc and xchg push cmp imul out popa pop jne dec inc jbe mull cmp push cld pop inc push lret pop dec pop mov push fidivr xchg ror in pop push in das leave out push xor incl and mov dec leave dec in adc mov out push sbb push xlat jp mov fimul mov xchg pop adc sbb push loopne mov push pop je pop repz imul pusha xor (bad) in fsubrp sub pusha inc mov lret out push mov add arpl inc stos jbe in (bad) ja movl add add pop inc xor mov pushf add stos (bad) ficom dec push add adc (bad) cmpsl mov dec (bad) gs mov sub adc inc push in xor cmp (bad) push sub xor test roll or xorb or sbb xchg sbb sbb repz insl xchg inc xor jl sbb jecxz cwtl pop mov movsb loope fidivr jnp adc xchg adc push int3 sub dec cwtl scas dec and popa sub (bad) repz mov in pop pop arpl pusha mov into push je daa outsb (bad) or xor pop insl and and lahf (bad) shr push mov out mov push inc cwtl inc jp xor icebp fdivs add xchg divl mov or or push inc lock arpl inc sbb addl adc stos inc int3 xor xchg inc push xor fisub sub or rcrb shrl push mov inc movsb adc or pop xchg adc mov jae iret mov adc xor xor inc xchg sarb pop gs lds clc shll push je rclb int3 addl dec xchg or push push mov lods xor or testl inc ret push xor push adc or fisttpl or cmp push jl or push aam xchg call nop mov dec or mov mov adc xchg mov mov fnstsw arpl dec fs cmp inc repz mov lock push or dec fnop je into mov arpl or jno jne and cmp cmpb adc std push and shrb ja pop inc outsb dec sub pusha insb js xor cmpb or nop push ljmp movsl dec adc push cmp loop mov loopne jo cmc inc push or push mov (bad) push mul movsl sbb push sub inc push jb movsb mov dec adc or (bad) sbb or xorl jle inc fadd lods das mov movsl xchg or mov xchg cmp adcl jecxz adc push sub (bad) fs test mov adc and inc sub inc or or adc adc ror sbb adc cli mov push cs add mov dec fstpl mov loope xor cmp jl push and adc add dec xor pop mov inc and out adc add sub or mov test (bad) bound xor rclb outsl mov cmp xchg jg cmpsl mov jecxz mov or movsl push or sub jno mov inc loopne push dec xchg bound dec jae ror cmp mov inc daa sub or es and mov or push and push and mov lret rep or loopne sbb add inc test (bad) xor dec add test xor sbb das sub xchg inc insb sbb cmp les sbb adc std dec mov adc add loopne sbb mov stc sbb mov lret mov add jge and xchg sub pop shrb mov dec inc jns idivl pushf pop or out pop push sub sub out inc xchg gs mov scas mov dec loopne sub popa xor gs and and ljmp pushf lods rclb fadd sub jg cwtl or dec pop sub sub (bad) mov xlat inc movsl add push mov leave clc xor or dec daa hlt (bad) ret jecxz pushf mov fdivs jno nop or arpl adc dec sub lret xchg push (bad) sub sub bound pop jl sub inc mov push sub ljmp push cmp ljmp push leave adc jl jmp push xchg adc or sub ds sub adc sbbb in mov jge hlt sbb or lds xor mov cmp sarl add movsl mov cmp and adc int3 jl sbb adc push pop push loopne lock rol sub dec in or pop fsubrl inc hlt add sub xor xorb cli jmp add or or movsl bound pushf push or xor adc cmp add adc xor adc push adc or jmp cmp xor sbb sbb inc cmp and xor ss mov jl fwait and stos std or cld mov xor xor mov add sbb mov movsb cmc imul sub dec adc push stos adc aas sub lods mov inc sbb inc or add dec push pop call xchg sub sahf add xor xor fild pop inc cmpsl mov sahf pushf sbb pop adc dec inc xchg pop and and and push adc and push xor push lock dec pusha pop shl xor cmp lret xor nop repz movsb dec mov add repz add adc adc mov adcb orl pusha das or sub adc add mov icebp ljmp dec xchg insl aam add mov jp or mov in cmp or stc push and stos add or sti wrmsr jo cmp ret mov mov sub xor push addr16 cmpsl (bad) or sub mov mov cmp sub sub iret cmp mov lcall xchg rorl pop xchg pusha es xor lods and scas and shlb lret add aam lock or bound in pusha add je or and mov repz psrlq cwtl jo or (bad) xor cmc or aas pop les pop mov inc test or xor mov ljmp and and stos loope xchg sbb adc and pop andl inc mov dec sbb arpl js or adc or mov mov (bad) jno sbb call sub dec dec pop xor or cmp cs je push icebp or mov add int int3 sub rcll inc dec sub pusha sahf xchg clc inc pop sub cmpsb lods les subl cmpsb sbb or data16 sub inc test stc mov (bad) pusha and add loope and fdivrs cmp mov test mov push or jno mov or (bad) sahf pushf lock inc xor lods int3 jo or xor xchg sbb push sbb or das mov lods mull or sbb fmull mov xchg enter push test mov daa inc repz je or xchg and dec cld inc lds ret je adc pop cmpsb sub mov add adc add arpl xor push adc mov mov push stos neg and mov inc je push cmp mov dec mov leave insb jbe sbb cwtl cwtl outsb push adc or xor fs aaa addr16 sbb pop jge cmp and or in loopne dec mov or lock aad inc xchg sarl orl into push aam add mov test xor (bad) mov mov cwtl ficompl inc sub cmp cmp jnp arpl popa fbld adc imul dec add mov dec cmp clc shll loop adc mov adc cld movsb adc mov xor adc popf js and sbb push dec cmp cmp jb inc nop adc test or push or rcrb (bad) test pop shll mov push push dec addl sub jae stos int3 inc cmp repz aas mov add or ret test mov jl xor insb push jo and rcrl ljmp push and xor push inc lret mov jo fisubrl cmpsb push clc xor mov pop or mov xor or or xchg xchg push xchg je inc dec pop dec loope sub cmp lods insb dec addb mov sub adc es xchg push xchg (bad) js xor or or aaa prefetcht1 add nop inc cmp mov mov add add pusha mov push adc fbld cli inc adc test xorl jo inc or test xchg adc pusha xchg hlt js xlat mov or add cmp sub stos lea (bad) xchg std test int3 jae in cmp fldl mov or jne mov dec lds repz push es inc (bad) fcoml pusha test jg xchg mov xorb adc sbb mov jns addr16 sbb mov loope dec xchg jo (bad) call shll test loopne mov rcrb dec or loopne add dec cwtl cmp push inc mov xor dec jo adc hlt ret sbb or fprem1 xchg movsb pusha popa dec xorb or mov xor adc int3 pop and or xchg adc mov mov mov mov test or xchg (bad) or mov or repz jns dec cmp push xchg inc stos cmc dec inc loopne push xchg js addr16 mov dec sbb cmp cmpsb subl (bad) hlt leave dec sub lret inc push dec xor lods into clc notb decb push lret gs lods lds cwtl lods imul call lahf mov sbb or (bad) fwait imul jno mov js sbb cmp fs fs out sbb jle cltd sub sub xor adc and jb jae jbe sbb mov add mov and shll cmp add adcb dec or aam or xorb pusha sbb mov sub add jo jge and xor and xchg enter dec xor stos push int3 fdivr sti inc mov sahf test cmp jge xor dec sbbl clc xchg or (bad) outsl xchg push testb data16 or sbb or pop push xor or lods sub scas sbb call dec (bad) xor and mov test jmp jl gs fisttpll mov stos inc mov jl add pop loope inc movsb lock sub cli inc jp dec sbbb cwtl mov xchg leave xchg sub mov jmp jmp sub jl sub ret test sub or lods (bad) adc shr mov jo les jnp test fidivr subb add and clc insl test xchg into (bad) xor dec dec loopne push sub dec dec je adc mov xchg das or mov cltd xor inc pusha jp jmp sti or aas data16 or add mov jo xchg rcrl andl push test sub rcrb xchg adc mov mov dec pop cwtl xor jo int3 sub leave jmp or fwait dec mov or insl sbb adc sbb dec xor loope and jmp int sub pusha test in xor push fmull or cmp xor dec inc ss subb or data16 sbb or mov xor mov xor cmp cmp mov cwtl adc imul mov fimull lret cld add adc sbb dec jns jmp xchg fldenv sbb sub or in sub and mov inc push sbb insb xor pushf or dec cmp leave push adc or pop and inc es aaa or lock xlat inc mov in add fimul sbb dec sbb cwtl adc leave and lea imul or add cwtl adc inc test negl sub sub mov dec dec xor or arpl inc mov test or dec cmp cmp fldenv jmp mov add (bad) (bad) aaa or inc sub int3 and jle jecxz insl or or mull sti add xor insb add and lahf inc mov data16 add sti adc adc pusha popl nop add add adc mov das sbb mov jmp or cmp sbb xor imul add add sub or lods mov mov mov jecxz inc call dec mov adc or and (bad) mov stos jnp adcb sub xchg xor pusha shll in or dec and clc and ss cmp repz pop nop sub xchg or push mov or fsubrs jno and jb (bad) in jae scas xchg and mov xchg inc pop xorb insb add lea icebp (bad) daa cwtl lret nop icebp sub or bound adc jg fnop adc or jmp or sbb invd ss hlt jle leave or sbb add mov cld and loopne or (bad) lds xor xchg je movsl into movsb cmp xchg insb dec sbb adc pop adc cli xchg inc mov inc sbb pop iret adc ret push push sar lss mov mov (bad) loop cs and mov or and sub fisubrl pusha negl iret sub sub push pusha arpl loopne hlt adc in xlat lock fimull ds out cwtl rorl pop and popa xor test inc int3 adc test cmp or and ret and xorl loope mov stos inc push mov xor imul sbb aam js addr16 sub xchg cmp sbb lock sub cmp lret sub xchg (bad) push or (bad) jmp or and and and push test (bad) aad pop xchg adc cltd push adc rclb sub adc xchg pusha stc ja jo mov jl sbbl fsubs mov mov nop sbb xor js test sub (bad) and mov or add inc xchg xchg add jno fisubr inc adc cmp test adc out test xor enter cmc fcompl push daa inc inc sub and rcr loope cld inc mov inc xchg dec mov or mov xchg mov dec push mov push adc sub mov incl dec mov test adc push data16 sub out mov push into push js add jl cld pusha adc test in cmp adc addb sub adc ljmp test sub dec jo es cmp loope push (bad) or mov push (bad) dec loopne roll add mov jl scas or add andl (bad) and add mov imul sbb mov adc adc movb inc dec xchg or mov jmp sub and clc fs xor or loope lds testb sub dec out or pushf inc jo push sub mov lock adc cmp adc sti dec and cwtl inc push call push xchg pop and inc inc mov dec xchg je dec dec jbe jae jle jo sub adc dec cwtl sti outsb lock cmp inc nop idivb cmc xchg test xor orb stos das adc in dec ja adc cli ret rcrb add sbb rcrl xor mov into mov insb mov cmp sbb mov push sbb enter call insb rclb mov or mov test add lods test mov adc inc adc push imul xor dec dec pusha loopne lahf mov loopne imul sub leave and (bad) cmp xor (bad) sub (bad) loope or inc mov int3 pop aaa or inc xor (bad) xchg adc sub jl insb add imul add xchg or test xchg sub mov addr16 cwtl mov test push xchg sub and orl add cmp mov shrb shrl ret call xor aaa (bad) sub fisubrl push pop mov outsl and fsub xor out adc xchg push adc cmp sub (bad) pop leave test mov xchg mov ljmp stos push cmp adc adc adc xchg into ja xor cmp lods jg popa in sub lock push add push pop int3 inc jo or je xor sub push adc dec sbb or or jl jl and adc mov mov push or adcb call push cs pop push mov divl loop sub adc mov cmpsb (bad) xor lock fs or push leave mov sub fimull jo push jnp mov mov mov sub (bad) (bad) int3 cltd xor movsb mov push bound pushf jmp xchg push or test leave (bad) add mov jmp adc push sarb mov stos fnstenv lds push adc stc js js in xchg adc xor nop rcrb sub nop arpl mov out and adc mov pop adc loope mov clc inc aam cmp lret push sub add or addr16 mov test xchg cwtl push push push popf mov jmp jbe leave movsl subb scas mov xchg xchg idiv xchg mov bnd inc ja jp mov mov add mov outsb xor or dec dec imul or mov xor mov cs and pop in xchg scas dec inc xchg pop or imul sarb fbstp out (bad) and mov mov arpl or pusha daa dec cmp jo dec mov jg inc dec mov rorb dec in inc xor jecxz mov dec cmc sub mov jmp test jno les leave test xor push jns cmp mov (bad) pushf dec jnp nop fcmovnb sub jl shrl (bad) xor dec sub cld jae sub sar cmpsb (bad) in and adc jl scas testb pusha jnp (bad) xor pusha adc (bad) xchg push or lods cmp test cld sub cmp sub andb nop sub js xchg bound or pop add dec push jecxz xor (bad) into js xchg cmp (bad) mov int rorb push insl lds xor push dec out lods loopne (bad) ja xor add sbb dec push or add test xlat inc jo add add and sub (bad) add rcrb fmul ret mov getsec enter lock nopl jle sahf inc hlt rolb sbb sbb jmp push inc sub jb jmp mov rcrb push mov subb xor jb xchg lods mov or jnp mov inc cld hlt sub mov and push adc mov xchg or dec lods and pop sub push out sbb loope and subl push and popa stos xor adc movsl je imul test inc enter mov shll add (bad) jmp jo fs dec cmp adc int or mov push gs popa or cmp pop sarb xchg out inc adcl jl movsl aam sbbb loop adc pop add and rcll xchg movsb mov cltd cmp repnz jle adc pop and sbb test push jp and and adc adc data16 xor dec shlb mov mov xchg mov mov mov inc push dec add and imul adc ret add adc inc lds mov out sub das mov xor or pop add add and inc sub push dec std xor cli shl add in adc ljmp out test or xor add test mov dec push jo fwait ds push and inc cli aas sub out and pop ret bound test inc adc sti lret jle pop and xor (bad) clc lods out andl xor or add (bad) jbe inc sub add inc into loopne nop sbb lret loope mov adc pushf les rorl orb xchg xor sub xchg jo mov or or fwait add test loope add add std shlb frstor push jne lock enter adc adc orl mov idivb mov push pop out into subl int3 adc ljmp jbe xor sbb dec rcrb dec (bad) popa test mov add test loope jmp mov in negl adc xchg xor mov xor push je mov inc and xor or cli js xor hlt call add push movb loope xchg fdivr adc pop sbb adc jbe mov lock cmp clc add inc mov mov test loop mov nop call jmp cmpsl pushf add jnp inc xor ljmp pop andl (bad) xor test mov out sub add dec ja lods xor adc push push inc bound iret dec and jo fwait sub mov or out pop push sarb sti call jg mov push idivl or xor jae dec mov hlt mov lcall cwtl pushf xchg nop aaa sub cmpl dec sbb inc pop sbb sahf loop xor clc rorl jmp or das aas pop jne push cwtl sbb test mulb fisttp shlb adc not ret adc gs je inc addb xor call mov popa push enter add in xchg sbb dec dec fdivl cltd or add loopne int3 or mov mov push or daa adc dec gs jno nop pop subb xor adc mov les rorb or ret test pusha push mov cwtl xor loop sub jge std dec cwtl push enter inc sbb cmp add sbb adc andl or pop jnp cmpb or pusha jo mov outsb popa icebp enter nop sub (bad) arpl push outsb sbb insl sbb nop nop dec (bad) xchg sub push push push aas add cwtl dec mov jl inc lock cld mov xchg cwtl adc push xor add or mov ret imul sbb adc or sbb popa rorl jecxz aaa stc xchg or mov cmp mov mov rep sbb jmp mov xchg sbb mov or loope je js and xchg pop adc dec in or sub pop enter subl fisubr popa dec and mov or and popa pop and std or loope (bad) (bad) nop or out sbb addb cmc lahf xor pusha (bad) je xchg pop test lret sub inc adc pop and add lret adc in out add imul add pop ret xchg pop popa mov jne sub mov push or into sbb jmp sarb push enter adc js (bad) pop sbb push or mov sarb and mov or inc bound push dec and inc xor aaa and inc and fldenv push aam sub add push stc stos das lock add pop orb cwtl add inc add ja aad jne sbb andb dec shr std gs mov sbb sbb push (bad) xchg sub lret (bad) hlt ss movsb test cli sbb adc mov outsb mov lret sub cmp xor cmp lods cwtl icebp stos cmpl imul and or add js mov xor loop dec mov pop mov adc xor push hlt inc xchg test add pusha cmpsb xchg enter xchg or pushf or stc sub xchg add mov aam jb repz aaa and add es lret call inc fcoms (bad) out pop movsb add pop and push cmp lds mov movl pop add dec mov outsl fdivrl sahf cmpl mov mov sti pop aas or add mov add out sahf scas sbb frstor cmpsb add mov add shrb sarb repz sbb movsb in add xchg push mov call das or daa xchg repz add fbstp rolb lds mov negl fadds push pop pop pop xchg add cmc mov xchg jp lea scas push add lret gs xchg dec fisub repz imul (bad) call mov add imul test pop sub adc and mov (bad) hlt mov push inc repz cld in xchg xor inc sub fbstp add test sub lods push in or mov pop outsb out cld dec out cmp stos test add lock add scas jg jmp out push std subl mov mov lret mov outsl inc jbe xchg push xchg dec repz inc and mov (bad) dec pop adcb cwtl fistp rol pushf mov adc scas nop or popf xchg cwtl push or pop cmpsb pop sbb js or or push mov fcomi add jo mov inc test test pushf push fldt test (bad) fcmovb adc pop lock or mov repnz fadd pusha jb mov mov dec cld fisub add cmp fidivrl mov nop dec pop pop std or jo push cltd pop (bad) pop xor cmp xor inc push adc loop mov jb xor insb pop adcl fcom lock test jb stc shll (bad) addr16 rorl pop cmpsb dec fadds lock cmp loop inc les loop (bad) push xor push sbb inc inc loopne sub repz cmpsl xchg add loopne cld dec jp addl jo jmp cwtl xor xor push ds inc pop addb ret mov loopne lret cwtl dec push stos shll in outsb int dec fistl fmuls movsb (bad) pop push dec push pop lods or mov push test dec outsl mov dec add inc push sub lock shrl fs mov jecxz call clc push psubusb and mov js xor xchg fwait jns int3 jle movsl jge add pop outsl lcall push dec xchg (bad) sub inc push divb adc mov (bad) mov adc pushf push (bad) push cmpsl test cli cmp xor js scas or hlt pop inc pop push add rolb arpl lcall notb jnp es and fisttpl add pusha ret xchg test mov addb inc sub rorb mov sub (bad) push addl pop adc xchg xor mov push pop mov xor mov add jle mov mov add movsb sti push adc pop and movsb add fucomip mov add jbe or or dec notl cwtl xor loopne fcomps sub lock pop mov (bad) push notl add push adc lcall test repz int3 dec loopne pop pop mov xchg lock add xchg inc push add test pop in aam add inc dec cwtl mov sub fstpt xchg jbe pop test mov mov adcb dec adc in and push cmp inc in xor mov lods mov jne pusha in mov lock icebp out xor (bad) dec xor orl repnz add rcll int3 les jae push adc mov ficom pop imul and addr16 rclb jo jl icebp sbbb pop std fcomp push nop push pop cmp xor mov clc xor bound jge add movsb sbb repnz (bad) xchg jmp nop mov mov push sub adc add push and lds mov mov xor cmp add push inc pcmpeqb fstpt (bad) mov fs movsb or add addb rclb repnz or add cmpsb sti loopne hlt mov add ret cmp xchg jae (bad) bound int mov stc add ja mov mov inc mov les in dec cmp pop inc adc mov mov xor jae das ret adc pop push out xor add xchg push aas jge subl pop test out std aad je outsb cmp add js sub incb stos pinsrw lret fisttpl add xchg xchg outsb push lods mov sbb outsl test lods mov or mov or stos add pushf test inc or push jnp pusha or push pusha fisttpl jae inc cmp inc unpcklps data16 and add xchg loope add jmp or pop dec cltd pusha jno add outsl je lahf jg lock sbb cmp or scas rorl jo or ljmp loopne add les xor aaa subl or imul jno outsb pop push push xchg repz pop pop xor ss fsubl lds shrb jb subb cld add lcall shlb test repnz in mov pop dec dec mov jg pop adc mov clc or jmp pusha sub mov les or sub (bad) adc aas pushf stos and lock movsb mov or jl je pop lahf xor and jae sub sbb or lock test inc pop cmp cmpb cmpsl or sbb in mov pop jecxz xor pop jge xchg push jl ds ss (bad) jp mov sub jb mov jbe push add test ss aam adc gs sub jae push rolb loope push add ficoml sbb inc in and and xor fs mov pop and repz insb inc outsb fstl xor jmp sub ss dec mov lret fnstsw sub icebp aad out mov lods add insl sbb cmc subb (bad) adc push push int3 push xchg or push sbb hlt add scas rcll in and adc clc xchg shlb xor in clc sub mov in movsl mov popa cmp lock mov sub mull popa lahf sub stc iret mov pop pushl cwtl jno pusha lcall adc cs rorb call pop pop or pop sbbl push sbb cwtl enter dec lahf mov push mulb dec cld out xchg or jb and fstpl mov xor aaa cmp xor push fisttpl lcall call xor jbe fidivl cltd ret xchg xor cwtl test jno fild dec std lahf cmp or adc in add and aam call imul cwtl jo add negb outsb cmp push aaa push xchg sub jb xchg je jnp hlt es add sbbl es mov dec mov test ret dec inc push or add add ss cmp fadd insb sub xchg jmp adc inc jno jb and aas or lea rcrl enter cmp pusha jl cwtl lods or push mov adc aas or fcoml (bad) je (bad) cs sub fidivrl nop clc xchg cmp push mov mov pusha or fdivs adc nop dec push dec add cwtl pop xchg or pop mov arpl lock inc cmpsb cmp loop adc orl mov lock add movl mov add pop pop xor loopne loope add sub in or sub shl pop ffreep cmpsl ds insb or add and cld xchg sbb add jle pop fsub aam push pop insb cs fbld fldpi fwait push ja add jmp push adc add jge outsl mov pushf lret lods loope (bad) xor mov xor mov arpl (bad) adc jl sahf jg xor and jae popa and ror xchg and and inc andb inc fldt xchg js pop adc movsb mov cwtl stos movsb push dec lret jo xor inc jbe jle mov mov cmp dec mov xchg fs orb pop push outsb sahf dec pop aam dec add test (bad) (bad) add push add xchg or or leave outsb xor mov cmp jae pushf lock add xchg pop adc inc sbb xor iret sti call push std fistpl inc adc xor or clc xor xor pop pusha mov inc xchg push addr16 sbb lods mov sub insl xchg shlb xchg inc fdivr inc fmull pusha je add in mov mov pop clc mov xor mov repz sub pop loope xchg push in or pop faddl pop int3 add push push in mov adc pop sbb stc add push cld pushf push imul fs jg lods dec mov push push inc ds dec xchg (bad) addr16 lcall lods shrb sub out lcall sbb popf push inc movsl push add xor mov xlat xchg xchg push test addr16 (bad) jns sbb and sbbb pop add jmp dec adc inc cmp (bad) hlt fiadd faddl js movsl inc fistl mov lahf mov push sti lret pop mov into or or repz pop ss nop arpl or sub inc lods cmpl psubusb dec and shrb call out test add xor mov out jle flds mov adc add adc mov sub xor outsl pusha enter or dec xchg adc aas fmuls cmp cmpsb cwtl test cwtl inc ljmp cmpl and and sbb shrl rorb sbb adcb or or (bad) mov dec mov pusha or adc stos and xor inc leave test mov jns outsl inc cmpb imull (bad) mov or out or pop sub pop clc test push and call inc mov jns fldl test push je je sub inc xor adc inc loope push or inc incl imul adc and mov ss and rol dec out call jp inc dec sub sbb xchg cmp push mov add outsl test stc cmp loopne pop sbb pop xor lret enter xor test (bad) jbe and (bad) xor cmp jmp pusha stc inc adcb sbb mov dec mov xor sub aad mov cmp sbb adc push xor add sbbl mov insl cmp sub enter movsb popf mov jo mov mov inc loopne jo xchg mov adc fnsave jo loopne sahf xchg sub lcall fs ds add es dec (bad) mov inc nop ret cmpsl mov mov jne (bad) sti int3 insb ret test adcb push std sarl stos int3 mov add and sub mov test or rcr pop push fs mov gs sub pop mov add jge dec pop mov nop dec mov test stc lret cmp add (bad) daa push shll movsb cmp add push jle lds push (bad) xor sbb jns sub add clc in sub xlat push xchg mov lock add out lods add nop repnz dec mov icebp test loopne add pop add and fistpl mov imul dec inc add (bad) fwait dec and adc mov jl and rorb sbb pusha and xchg int xchg mov xchg sbb mov pushf sub or inc fwait push (bad) mov push xchg jo in and mov adc sbb sub xor add out orb test nop pop sub fs or ficoml scas push dec cmp xor or push or and rolb popl jle xor push sbbb xor pusha xchg dec sbb dec add repnz jmp pop jno js push cltd outsl xchg enter and js call fiadd adc neg addl push (bad) pusha mov aad mov xorl xor addr16 pushf push dec push and add mov or test lea mov pop mov test and adc sbb je rcl js add cmpsl cwtl or test nop xor adc push lock mov rclb pusha dec loopne add xchg imul adc push sub dec test adc jl imul xor sub push lea adc pop sbb jle add add xor push fs push dec cvtps2pi push insb paddd xchg add (bad) aad ds cwtl cmp aas sbb mov fidivr push inc mov adc orb andb jge adc and mul out (bad) (bad) in rcrl test add pusha scas xor sub sub test movsb xor push mov (bad) movsb add push fnop cmp pop xor call aam rol dec mov or call or out cmp hlt sbb inc and cwtl or xchg fisttp inc mul mov nop pop fdivrs dec fidiv lahf mov add aam roll lock (bad) stc pop call adc add (bad) std test ret mov dec and mov (bad) mov sbb sub add cmp push test movsb imul xchg stc cld inc in add cmpsl out sub mull popf (bad) mov pop lods (bad) sti inc jae sahf mov gs sub ret mov sub push aam scas adc dec add xor xchg out mov rorl xor das dec adc push fimull and sub (bad) sbb push mov and sahf ljmp loop adc sti add pop arpl loopne sbb mov add call incb add add lock addr16 dec addb inc push clc into repnz (bad) and mov push cmpsl hlt add and nop push stc fistp lock add jno outsl mov fisttp leave xor (bad) xchg sub jnp mov jge push sbb jl sub or mov cli push cwtl icebp fnstcw push ret popf sbb or lahf or sti enter add sbb and inc add adc adc or js outsl xor sub clc imul sbb data16 fsubrl cmp add inc mov aas (bad) pusha dec int3 aas sub mov cmc add and xor mov xor cmp (bad) mov push add adc add mov xchg and icebp xchg mov shrb dec add iret mov sahf push subb mov mov ret inc pop mov mov bound pop cmp pop mov aaa mov pop insb xchg push fmull addb dec push inc jo lcall es xchg aad mov lcall mov lods mov repz mov dec iret push mov mov mov mov mov xor mov adc lods add and xor jo mov arpl mov pop adc inc xchg dec push es icebp or popa sbb push enter or popf inc les in jo push imul mov addb scas scas jne xor or jb loope fwait (bad) mov mov mov lods push fisub mov add cmp jmp popf test jae ja enter int3 add notl xor or jo shr daa mov jl test adcb rorl fwait mov sub mov ret add lret xor addr16 cld pop incl push pop adc dec les bsf cmp xchg inc dec pop xor adc sti dec and mov (bad) jo sbb adc pop scas push jmp lods int3 pusha add lods cltd pop jbe add cmp int xor movsb xor roll test test fwait (bad) jae shl mov lret jmp pop int3 push push xor cli pop clc ljmp xchg xchg mov fidivrl scas push mov enter addb mov decb xchg daa je sbb sub lahf out lea cmp (bad) dec test lods outsl pusha xchg inc js dec pop pop add out or lods jo repnz (bad) xlat cltd rolb adc je jne (bad) ja cli scas lret pop pop cmp adc pop adc and sbb repz dec insb push vmovss loop inc cmp inc stos adc divb push cmc jb xor in arpl xor dec ror clc sub and pusha movsb pop ss aas jne and add and add jbe clc jo add imul or fcoms pop push xchg test mov je mov xchg jns dec adc scas sti je pop mulb xor mov pop adc lahf adc sti adc add (bad) lock pop ret xor inc or cltd rcl ficomp sbb sarl mov or lods xor rolb xchg in (bad) sbb sub mov mov lcall mov repnz jo add pop rep (bad) mov repz gs pusha add movsb call fmul lods test or adc jg ror mov mov cmpsl in xor or fldcw enter push clc jle pop aam ja add imul fdivrs stc ficomp inc mov or roll pop dec and sbb jle mov push sub push and jnp add pop push xor aam pop push in test sub add dec iret xor cmp cmp test and call outsb mov mov sub pop es jle adc or add jp pop push fcomps mov adc mov ja test jle test test loopne mov ficoml add stos push fsubl aam icebp mov repnz sbb lods clc push or outsl mov pusha addr16 lea fadds imul jo add ss stc lret or mov add sub lahf rolb mov sti jo add andl cmp or sub stos xchg dec push int cmp (bad) ljmp (bad) ficomp pushf loopne mov jle add test (bad) mov and and cld rep movsb movsl add sbb sbb aas in cmpsb dec dec ficomp dec dec xchg out jg or add cmp lcall fldl cs or mov push mov xlat jnp or push movb sbb add mov nop (bad) pop cltd sbb xor push mov scas xor ficompl repz mov or dec and xchg (bad) and rcrb in add pusha xchg nop pop mov das stos add xor insl xor mov or rcll mov subl dec sti je inc mov sbb fildll sbb sbb sbb hlt test ret inc std xlat pop cmpb sub or into daa add mov insb sbb ficompl push out cmp and and pushf movsb outsb leave std adc sub and rorb mov pop pusha adc fadds fild scas sub xor loop pusha clc add or jo or jl or pop dec icebp add cmp jno repnz pusha pushf jb push in inc test jl xor clc adc gs cli mov fadds cs cmp sub imul gs (bad) ror js daa daa cmpsl sbb pop mov outsl int xor lock push mov test int loope mov mov dec adcb lods sub sub aam sub insb or xor mov xchg xchg or loopne push iret js inc clc dec movsl cmp aas hlt sbb push add sub insl adc add adc icebp mov test shrl cmp cmp mulb pop mov (bad) enter in idivb inc sub (bad) fucomi icebp inc lea idiv inc adc fs jecxz rolb pop mov inc rcl das add add test add inc or popf nop stos and xor sbb mov sbb (bad) and popf add rolb rclb adc add dec push je bound or mov fmulp add (bad) add pop sbb rclb adc mov sbb cli or loope sarb push or push arpl je sbb cli daa mul inc cmp xchg (bad) gs pop test add (bad) fwait pop and js test add xchg mov add ret sbb cmpb xor (bad) cmp in sahf dec mov or adc lahf je xor out loope in jle jecxz loop cmpxchg test cmc call xchg fmull shr mov mov push push add or mov je add inc push popf xchg mov test out mov jge (bad) enter inc and sbb mov cmp movsb jg nopl faddp or mov out inc sahf add ret imul leave push loope push call mov push cmp fbstp in sarl cli push mov cmc and (bad) in test cmp mov xor or or sbb mov adc fcoms mov int3 stos and sub and mov xor sub push mov cmp pop add cmp mov adc hlt stos hlt push adcl push and or jle and cmp popf pop add inc inc and lock xor rorl imul in mov cwtl push push dec dec and scas mov sub jne mov xchg inc in mov out loopne cmp cmp out fwait jns orl add clc jns xor lods add lea mov or stc mov xchg adc (bad) sti inc cmp enter add pop push sub dec or pusha nop xchg (bad) in es sbb and aaa jne push enter movsb push int3 add loope xor je pusha or rcll jl aam jb nop xor sahf dec cmp cs sub imul xchg or je jo aas nop dec xor add inc add inc test pushf adc scas lret loop lods in jno add (bad) fs es loope add xchg arpl cmp lahf add pop nop aam popf je dec jecxz xor push jl pop jle push dec cmp movsb adc inc fdivr bound inc ror xchg adc pop in mov jmp mov cltd repz mov or rorl and es out test lock call setge push add mov cmp scas sub rcll mov in cmpsb push push insb adc mov xchg or loopne jp mov dec and add xor dec push outsb pop lods sbb imull into or lret pop mov add and into arpl adc and leave ja jbe jbe dec lahf sub pop stc inc outsb popf sbb mov dec sahf and jg fsubl xor adc jg add mov in add mov add xchg mov xchg dec jmp add in data16 mov jae adc shll sbb test adc mov movsb add bound cld cmp in insb (bad) mov or cmp mov lret cmp lahf inc xor jb int mov xchg xchg es pop sub iret or mov pop sbb ret inc jge dec cmp push stos cmp int sbb iret call imul sub push mov dec jbe or pop fadd icebp pop nop push or (bad) sbb mov stos cmp xor add push and cmpsb clc sub mov inc mov aas fsubrl and jmp or jmp inc add shr cmp shr adc mov mov or or inc push xor in adc mov cmp lret sbb mov bound sub aaa dec sbb imul sbb push pop sbb xchg add dec test rcll (bad) xor imul movb ljmp or or mov dec fidivrl andl arpl and mov movsb jg sbb cld int3 xor sub int3 ljmp xchg sbb es mov insl das adc les mov adc arpl rorb adc sbb add push dec inc js outsb adc sbb sub sub push les jns or dec adcb mov sti jmp xchg cmp (bad) mov mov mov add xchg jbe dec xchg inc or sbb movsb and cmpsb or dec cwtl hlt ds pusha aam sub mov xor jg rolb mov xor cmpsb pushf and cld cs mov sar and cmp fxch enter xchg rcll mov jo cmpsl lock xlat mov mov adc add sahf adc pop mov sti lods pushf cmp sub popf mov (bad) lock sub insb and adc push mov mov xchg popa push adc int cld and and mov add and (bad) in pop hlt and jno (bad) or mov insb mov pop mov test shlb adc inc lahf ret cmp adc add repnz test iret enter and ficoml sbb mov test mov and aas or xchg enter sbb je inc inc xor and xor shrb pop push sbbb add rorb pop jg imul adc inc xor into cmpsl leave faddl lods icebp cld adc push fwait (bad) inc xor subb mov pop aaa lahf mov insb shll mov sahf lea (bad) or xchg (bad) or jecxz stc nop push inc mov push push pushf push adc (bad) ficom mov lret adc cmp xor test cwtl roll dec int3 pop add push aam mov push add scas rcrb fsubs das inc add cmp add out add jge loopne jp add movsb clc aam sbb sub sbb popa rol sub xchg loopne,pt imul jno add mov insb dec cmovno push dec or inc xor dec mov dec jl loopne sarl je push dec cmp add (bad) adc adc cld adc cmp sahf insb and sub sub or test sub xchg fsubr inc sbb add xchg xchg cmpsl (bad) lock cmc aam cmp add push sub orb hlt shr or inc sbb and cmp cmp lmsw test call testb mov std or add ret add rolb out mov enter push jb add xor sub inc xlat sahf sub cs add or fnsave dec sub (bad) cmp cmp lea add pop popa pop dec adc cmpsb inc pop stos lods xchg fdiv cmc cld pop les aad ds loopne call pop adc mov pop bound cmpsb adc popf mov call or sbb add pushf jp mov sbb sub push or adc scas (bad) fildl shl lock adc ret fcompl inc (bad) mov xor and xchg xor jnp fisttp add xor and test push xchg jae xchg fdivl sbb add jle in imul out pop and dec std mov lods adc add js xor fs stos ljmp pop std fimul mov dec hlt dec call out leave ret mov ljmp push pop sub lock int3 and jl pop int in stos (bad) xchg sbb ret mov movsl and cmpsl mov sbb (bad) les rclb mov jge jb mov pop dec push outsl cmp daa jge loopne mov push pusha inc cwtl loop stc test pusha inc cmp cmc sub pop repz loopne mov mov fdivs push adc cmp xor movsb stos imul fs mov xchg pop into xor xorl dec dec mov push outsb je jle add mov or or orb mov cwtl mov inc out cmp jne inc or clc mov cmp inc or or inc mov sbb test mov movsb lea and sbbl xchg push lcall add add mov sti or les cld dec test mov mov cs mov and scas jl test add xchg dec rorb add mov inc push or or or add mov fadds test xor mov jg aaa in lods test loope addl mov adc (bad) or (bad) jae jne rcrb xchg rol bound xchg fadd or sub incl movsl pop mov mov xchg push aaa movsb test pop pop ljmp adcl sbb adc fldl lods (bad) (bad) mov add push fsub mov inc mov adc out add outsb es mov pop fs jle fs mov xor lds enter inc aam outsl sub jle xchg lcall mov mov mov inc int3 sub test add push mov push cmp (bad) stc pop rolb inc mov and add stos and je inc int mov lock pop lds mov jp sub mov lahf psllq mov repnz in dec inc rolb hlt shrb mov jno enter adc pop pop jo aaa lds mov lods or cltd (bad) xchg je push and mov sbb in adc lock stc daa fadds dec scas or fwait pop pop add pop scas inc test xchg jns cmc repnz sub mov cwtl andl fdivrs jae sbb pusha xchg push push add cmpsb int fstpt in scas jb scas sahf shrb in arpl inc cld dec or int3 push jecxz cmc mov (bad) mov ret add ret pop imul rcrb sbb xchg cmpsb add rcrl mov lock sbb sahf in jl les mov sub pop sub jmp xorl decl mov popf inc add mov push adc mov mov sub mov fnstcw das jne sarl cld add jmp roll test mov mov inc rcrb adc in add mov pop dec push popa adcb add fxch and xchg fcomps sub or mov push (bad) jnp add push dec js lret mov das adc movsb xchg nop push sbb jb pop clc add jle dec dec mov les xchg scas mov add xor and repnz sahf mov cli dec cld xchg enter add movsl sbbb (bad) and add cmp push xchg cmp sti sub mov repnz add cs jne mov add stc test mov pop stos fwait xchg out and aad movsb sub add add sub or daa xchg add fmul pop xchg add mov stos lods sbb push lea lret ljmp xchg sub xor pop dec jle ret xor push movsl add sbb hlt mov dec jbe push addl stc mov pop xlat and add xor inc mov leave ret lcall or add (bad) mov xchg es adc test scas cmp jb or sub test mov adc sbb orl popa xchg pop lods out stc in dec and cld and jne or out xor test les rcrl es jbe mov mov mov pop sbb (bad) clc addr16 xchg pop jo or rcrl add nop cli add lea xor inc shlb add mov xor jns,pn insb pusha push pop xor mov or sub idiv pushf dec nop adc cwtl stc inc shlb jp xor mov adc jge add ja popa inc sub in or incl and movsb pop loop orb ficom leave ret pop out xchg ja push enter cli das sub ret xor sbb inc icebp lea into sbb add push push dec mov sub push inc xchg (bad) xor adc imul daa lock dec js xchg push xor sub dec push mov or jo mov pusha adc or add adc repnz test mov xor xchg jno sarb xor xchg outsb pop les out addl cmp imul pop dec movsb jne shr pop fldcw loopne gs sub sub push sbb fiaddl xchg shrb xchg pop mov ror mov xchg inc std cmp add (bad) mov je mov insb add push sti movsb adc push aaa icebp nop and ficoml js xchg mov aam push cmpsl clc shrl inc stc and outsl jns nop add inc fcoms dec add dec mov fldl ret shrl xor fisubrl add pop lcall jae sbb stc popl out fdivrs pop cwtl add jnp lahf das hlt inc frstor mov fadds add xchg test or mov inc push sbb (bad) and je jo mulb shl lea mov stos mov xchg adc or (bad) xor clc enter out mov jmp es jl gs das dec or push fdivrl repnz pushf adc pushf push or test jne ret pop mov cltd sub sub dec int3 mov orb adc mov xor xor mul or sahf mov lea pushaw dec jp lret adc or fwait mov ret inc sbb loopne sub jbe adcb push add sti rolb cmp pop inc lock inc lods or lock push in add cltd or rolb xchg xchg and push nop repnz jp pusha jnp or lock or cmp or roll stos dec insb add sbb (bad) mov pop or popa cld ret sarb or (bad) pushf push and (bad) sti faddp clc add nop inc (bad) lock bound adc add xor xchg jo adc clc test dec cli jl jmp lcall cmp pop xor jl add mov xchg sbb xchg push gs mov movmskps sub aas pop test sbbb push js xor imul loopne addr16 mov push add push stos xchg sbb sub mov stc mov xor add enter orb leave or (bad) fdivrs jge xchg mov ror pop cmp inc add pop pop sub repnz fsubs loopne les fcoms rorb inc mov mov or ljmp sbb popf sbb xchg imul dec mov fldl in pushf pop sahf (bad) adc mov nop cli or rcrb sti push xor stc es std out sbb jp in push test lea dec loopne add cmc inc sti add lods jae scas adc repz psrad loopne inc cwtl xchg (bad) push sub in (bad) dec data16 call sbb push (bad) ja out loop inc inc jne add pushf repz psubsb sahf in loope xchg jo inc mov out push jecxz mov inc jns sti mov sbb js push add or cmc xchg in push add into and mov adc (bad) pop aad repz xor sahf xor or adc cld js popa fyl2x cmc jns lock in push or add or mov nop mov mov ja push addl sbb popf clc mov sbbb xor sbb int3 pop inc testl cmp cmp shr cmp xor sti inc shlb push pusha lock rcrb mov adc or jbe adc bound clc mov inc mov push jge xchg mov add mov inc xor and inc or xchg fadds fwait dec and lea push push incb push xlat xor push fbld mov pop push (bad) (bad) icebp jns jb loope adc mov scas add popa into (bad) in xor and adc inc fsub inc push sbb mov das add sbb inc jo clc rorb mov xor outsl jae and and xchg (bad) in fwait jno mov xchg test pop clc lds jl add sahf pop fs ds or rcll adc dec jl add xor pushf and pop mov int3 jl jl sar jo call bnd out clc add sub aaa (bad) and inc lock loop xor cmp jecxz xorl idivl cmp sbb je or add cmp inc lahf insb or pop pop in andb rclb jl (bad) jne sbb imull jl and jl inc sbb jge mov jl cmp sbb rol mov xor sarl jmp push mov pop sub stc aas dec test lea imulb cmp cmp and dec and cmp push mov dec nop adc out loop xchg test and mov push and call das (bad) adc iret inc adc shlb and inc (bad) fs mov pusha mov imul movsl or lcall add mov jno outsl (bad) cmpsl es shr or mov test clc fildll cmp test imul ffreep dec cmp or loop (bad) icebp mov pop add insb sub dec pop int3 loopne test push mov mov cld pop inc mov stc mov fimul scas adc repnz out iret sbb inc jne (bad) sbb pop nop adc incl scas gs cmp (bad) jo out and shl sub outsl adc sbb add push mov sub mov and inc cmp and jmp int icebp and cmovs adc les cmpsl clc (bad) cmpsl mov outsl jl das call sub shrb xchg lods clc mov pop pop inc mov inc xchg inc cmp loope pop das mov dec or lcall lods ds jno fldl push cmp sub icebp scas es jl clc insb dec jl mov adc inc sbb clc or mov je jo pop and shl sub mov clc repnz push or fs mov rcr rclb and loopne xchg xchg inc into mov pop lret lods mov mov sbb stos add insb jge out inc je xlat cwtl out inc fistp and fs pop incl cld ret inc jecxz ds and leave inc cld push cltd and popa call push je ltr mov cmc inc orl pop jl sbb sub outsb inc pop stc add cmc adc in mov jo int imul add xchg lock add (bad) cmp add popf sbb sub pop orb push adc pusha in inc out cmp shll pop sub test ljmp inc or or add xor icebp adc push and adc push sbb push lock jns cmova mov sarl and inc mov mov popa lock add shl loope sti ret cli std (bad) enter push test pop mov sbb inc arpl lods and dec and adc adc push inc add je pop add push decb mov (bad) fidivrl adc xchg xor pop rcll mov bound sub dec or dec pushf lea inc mov inc cs xor in je or xorl dec push js adc mov cltd cld inc dec ja inc les adc daa pop push lods in int3 push push imul and push mov pushl imul aad std inc mov sbb sahf inc xor dec (bad) ror sbb loope inc in push daa add sbb mov loope orb std enter adc or and push pusha frstor sbb push push inc test xchg mov mov movsl insl shlb push add xchg arpl cld cwtl (bad) sub pop add pop mov (bad) sub int3 inc imul push cmpl shrb imul pop adc aad cmpxchg mov movsb pop roll pusha clc stc repz jle lcall pop push dec (bad) xchg jl adc mov stc das aad and rcr adc fs push dec movsl (bad) pop repz add lea test cmc popa xor jbe leave cmpsb push jnp add pusha dec loopne jp or and mov repnz jge pushf jbe ljmp pop test imul nop fstpt std arpl push insl or mov xchg nop pushf sub (bad) sub push or roll adc cld jns jne ja or sbb enter js xor aaa add lods popf std adc out clc pop mov mov adc mov into add lods inc add inc addb addr16 push loop (bad) flds add sbb sti sbb mov and xor mov rorl in cmc xchg ljmp in pop test aaa jno dec test jns mov stc xor dec push enter data16 test xchg mov sbb (bad) cmp jmp int push cmpsl test scas nop and int3 movsl jl test in sti (bad) pop clc movsb mov inc jl add jns lods fs sbb inc sub std mov cld xor sbb cmpsb ret dec std or dec dec and xchg in xor daa xor sbb leave pop adc mov jnp push adc adc fldenv loope jl pusha out aas ss lcall enter mov cwtl testl and lock and adc pusha dec les (bad) loope dec cmp adc or pop js addl sbb test and mov fs push push add jecxz xor push jb cmc or pushf pop and or movsl dec mov cmp ljmp repnz sub or cwtl mov add fwait imul mov scas movsl inc add and and adc adc into and ret mov int3 call sbb pop dec adc movsl dec test out daa cmp out inc stos and pop mov xchg adc and test sahf xor mov insb and pop shrl or xchg leave lret hlt sub fsubl and mov sarb adc inc mov push xor sahf mov nop out adc loop mov push les sub lock aam push sub ret jmp (bad) nop mov mov or adc loope enter fwait push adc and fildll sbb jne je outsl dec mov xchg xchg adc adc jmp les dec push mov cmp inc test inc xchg enter xor cmpsb in icebp add scas lahf and (bad) stc and int movl lret pop jbe movsb push pop inc cmp mov je lcall std loope add sbb mov movups inc test repnz push (bad) adc mov roll js test in mov dec ja icebp adc or xchg iret sbb push int3 and jns daa je sbb loope decl mov push js dec popf xor xchg sbb jl pop and pop rcll xchg xor pop mov and jne adc pop outsl xor insb test loop insb cmp mov xchg loopne mov (bad) jg pop pop jle les mov adc divb rcrb (bad) mov lea inc loopne mov or jecxz inc jne (bad) jno adc jle ror or int3 adc (bad) lock sbb mov pusha ret test mov pop and loopne negl add std xor mov xor sub add addr16 pop (bad) and inc (bad) movsl pop lret pusha pushf xchg mov (bad) jp test test sbbl mov je repz mull nop xor adc lea push notl push scas add add mov addr16 pop orl dec sbb jns add in jo push mov sub jmp pop ds sbb enter in mov daa mov aas adc clc sub les cmc xchg pop push jmp push imul sub hlt push mov or mov mov daa sbb leave lock jge (bad) in or add shl sub mov sbb popa cmpsb pop xchg mov mov pop rcrl and roll jno xchg adc mov sub or and repnz sub sbb jp jo scas jns push movsb mov adc arpl adc pushf icebp add movsl or dec loopne bound sub pop jno push or mov cmpsl add inc push pushf mov jo xchg stc test icebp jns inc enter outsl add (bad) lret fs mov and inc push push arpl dec pop sub push jbe loopne repnz pop lcall sub inc dec inc test mov rorb cwtl sub push mov orl mov inc mov cmp adc xchg sbb or les popf xor je mov jmp dec repz int sbb push mov cwtl pop mov rorl lock jge jnp,pn sbb cwtl icebp loopne insl push ds fdivrl je lock mov loope enter shrb pushf mov adc repz sub test mov sub dec sub (bad) testl or out dec xor subb sar test mov xchg cmp jmp pop enter movsb je gs pop pop fdivs or add (bad) cli and imul js jno cmp add mov push xchg rorl and add js cli dec nop inc addr16 fnstcw add push std enter and lds in je lock popf cli daa pusha and sti add and aam int3 movsl gs nop pop jg les iret add fs push out adc lds lods inc sbb or pop fstpl mov xor adc sub xchg cmp test cwtl clc xchg stos jl or push stc sub jg xchg icebp mov jo pop sub cli in inc inc stos imul ret pushf jge cmp cmp mov pop pushf add add outsl sub pop lods pop xor adc addl fwait sub in cltd rclb (bad) pop (bad) add jmp inc inc mov sbb cmc or in and mov sub push or nop js (bad) icebp push cwtl adc mov gs adc adc and sbb push (bad) adc adc or sbb adc adc mov mov test shll or jp hlt in xor popa push jbe daa xchg mov jg (bad) or sbb xor add mov adc js mov faddl dec je add adc inc leave std je push inc mov mov aam lods jmp aad test jo mov rorl inc repz pushw test pushf pop mov mov xchg lcall int3 sub mov ret cs inc mov push rcrb jl jne (bad) popf shlb lods mov add cmp fwait dec repz jp cmp lds inc nop or mov dec (bad) mov sub aaa je or (bad) call cmp pop inc mov push adc pop roll pop adc jle dec and fcomps xlat pop gs lods xchg adc and dec sub test daa mov in sbbb (bad) xchg ljmp insb roll out daa cld (bad) fsubs push add mov cltd pop or jbe add clc jmp mov pop or adcl lods sahf or test mov push and and push sub clc mov sub jmp xchg mov mov push lods sub mov adc add daa adc clc mov fstl cmp xchg add xchg lret stos out scas cwtl shufps sahf les jnp jno scas movl nop fucomip ret or loope mov mov pop test nop jg loope push and or cmp adc add or adc add dec inc pushf aas inc es js add mov add inc adcl and adc add (bad) nop nop orl out jle sbbl add push pop nop sub mov enter jo stos jne pop add or mov and and add fmuls add mov add cs xor out add (bad) push (bad) sub and push or add inc shr push xor jecxz dec jno arpl (bad) cld inc adc sbb jns inc sub mov mov push orl cmpsb call pushf dec lea scas adc orl test xchg sub dec shr stos rolb inc xorb push and push fist scas stos lret mov sub pusha pop push outsl loop push add mov dec pushf and mov and push test mov add cmp push xchg inc rcrb sbb dec xchg sub lcall sub cs lahf enter inc dec add inc sbbb aas sub outsl or scas jns jl in xor (bad) in inc pushf or fsubs sbb pushf add pop mov add icebp mov (bad) rclb and pop nop aad (bad) nop movsb and dec adc and scas daa xchg or push js inc adc and inc add mov add adc scas adc adc (bad) jb push ljmp or mov stos test cmpsl xchg fdivl ja pop xorb rcrb movsb sub popa test les sub add mov jnp pop jo pop mov and aad and popf shl sub shrb and jno push xchg and mov ljmp sar cmp inc jne xor cltd fcoml sbb mov aaa fimul test jb dec cwtl push push or jne sbb fimul mov test pop cmp mov xchg and mov or lods adc and mov into and xor pop dec out mov icebp es movb or sub jmp stos ja addr16 and inc mov sbb dec adc xchg mov xchg dec mov jecxz int3 (bad) dec movsb sub aaa mov inc adc jl dec nop imulb ficompl add adc test add test sbb enter sub jg sbb and push push mov sbb pop dec cltd or jle and loope sbb mov add fsubrl movsb ror xchg jl jl sbb rclb push pusha and and outsl test pop inc ss mov sahf pop movsb aam fsubrl lea fsubrl jecxz shl sub mov push mov ret inc lods subb jne pop dec sahf adc push add (bad) or movsb inc cmp lds xchg popa add test mov sbb lret (bad) out mov or cld pop and or xor stos shlb add lcall bnd cmp pusha xlat sarl fstpl xlat or sub sbb leave pop xchg jne sub lret push or lods fnop sub add push xchg aaa cmpl jbe test cmp test mov addr16 fdivl adc cmpsl push push orl adc out or test xchg add adc or add mov insb lea (bad) hlt mov loopne or mov cmc cmp cmpsb add pop and in mov jg jb js pop adc lock dec orb and or cmp xor jns aad and (bad) addl lods jo subl and jns sub (bad) hlt mov add adc jbe pop inc xchg cmpsl and outsl cmp cwtl and sbbl add jmp push fsts (bad) push pop out and orb mov and fnstenv dec add dec pop or shll mov sbb rcrb stos mov sub pop add cmp (bad) xor jno jbe (bad) jno hlt inc lods push add cld jp mov and pop jmp fimull arpl mov cmp xor push movsb rclb dec pop mov sbbb sahf jp mov add sub movsb sub test andl mov std addl add push ret in mov enter xchg leave lock push outsl adc push fmuls sub push orb and jns xor add (bad) cmp nop or adc add ja add std cmc subb in xchg sub jg js clc adc xor add xchg mov cwtl pushf pop jnp enter nop cli inc (bad) aam scas xor inc pop xchg jle mov out ret stos add jne mov cmp ljmp pop rcrb inc jo or sbb mov inc clc or add lods or adc cmp (bad) push dec iret test pop sub in ss adc dec or jnp or and add xlat adc insb lds and and cmp std mull imul test and cmpl jmp push cmc lock rolb push jns cli add xchg cwtl jbe jg insb lcall inc add js mov mov dec pop movsb lret push adc pop xchg mov sti push testl adc imul mov jns add movsl nop adc add sti mov imul int jg clc stos add inc xor add dec push pop pop jl fs pop ja sub in jns dec stos or inc jmp push idivb fucomp sahf in and (bad) or cmp jae or mov mov add or ret xor push push pop enter in dec aas fcomps rorb orl pop or scas adc sbb (bad) xchg add (bad) js pop lcall (bad) sbb call or stos inc test pusha sub sub inc and push ret lcall jg sub add sahf sbb mov mov aam pop faddl and call scas push or jle jns mov fmull inc loopne in dec or add jl cltd popf sub xor xchg xchg xorl roll test or or mov sub push scas inc loopne rcrl in cltd cld cwtl xchg std sub push and add test adc adc add add setno cmp outsl inc imul jle sub mov mov pop addb in jge,pn pushf inc scas ret push dec lret mov jno incl stos and lock xor movsb xor push adc xchg std lock (bad) pop jg (bad) pop orl push (bad) sti adc adc cs add or jmp mov push adc add (bad) pop cld and mov xorl add repz and movsb into cld inc add add cmpsb in inc dec cmp icebp xlat pop nop nop loopne jle es cmp frstor lret inc test push xchg ret or fstl leave jo xor aaa or sahf cmpsb or or daa mov sti std (bad) enter adc cmp aas pop repz pushf daa (bad) jmp add fcmovbe inc mov push icebp test bound mov pop mov rclb loope (bad) lret leave bound push sub add jae cmp xchg push loopne pop (bad) lcall mov mov inc mov cmp data16 or mov and xor lcall dec out pushf add cmp sub sub clc mov outsb xchg out sarl inc xor loope jbe add sahf pop mov or dec add movsb xchg lret pop jg (bad) pusha mov ret add cltd imul pop and les cmp bound cltd shlb fstpt xchg or adc dec mov lret lods sbb mov fistp pop sbb adc adc inc movsl aam xchg cwtl cli std inc and movsl pop mov cld pop mov and stos cmp and sub add rcrb and fmull mov adc mov add pop push rsm or add loop ja stos lahf lret faddl adc dec lock sub adc cli add icebp push int3 aad add inc cmp add aad mov movsb aas xor sub ret inc xchg (bad) push and jg jbe faddl loope xchg flds mov xor pop mov int3 adc ds mov cmp (bad) sub icebp inc cld or jae sub nop push cs in inc stc ret add mov (bad) jns push out ret std mov test in cltd xchg inc in inc cmp enter add nop je push lcall cli pop dec sub pushf xchg flds lcall test cld test add and enter push and pop jg and adc mov pop rclb adc stos call dec mov pop cwtl in repz je pop jmp dec out add adc pop or dec rolb sbb rcrb hlt sarb loop or and imul mov icebp add inc xor add loope daa mov (bad) pop add fadds (bad) (bad) lock push popf or pop push add ret insl movsl jo pushf clc cld push xchg test mov dec fmuls movsb aaa cmpsl andl xor pop mov in dec aas xor out add pop jmp push fisttpl push push (bad) mulb or adc sub popa add inc stc cli add imul mov push jbe pop cli (bad) lret mov xchg movups incb xchg or stc lods movsb sbb ret sub call loopne stos add or int3 mov cmpsl in add movsb mov test fcomps int add xchg pop lds jl xor stc (bad) jg pop push pop inc mov or push adc inc pop fisubl lahf repz cmp dec cmpsb or mov aad mov lods jo ss lock pop nop call fdivs cli push repz sub sti movsb pusha (bad) xor cli lcall and in mov mov push mov addl inc ds cltd push mov or shr and pop addb int3 cmp test sbbb mov arpl mov inc sti push dec insb adc mov jle sbb adc add in pop and stc data16 arpl add aaa add lock orb add gs jecxz lahf inc sub (bad) addb cld out inc adc or vmread addl sub incb enter jmp dec xchg arpl pop or add add push cmp sbb fildll add xchg or in add (bad) loopne (bad) xor sbb mov aam int3 imul add add mov push inc jge sbb sbb scas sub xchg push mov ret add and or rcr enter add sub xor push (bad) jecxz test pop ret push lods subl js loopne dec sbb xor icebp (bad) jmp jnp dec cmp divb rclb or jecxz mov cwtl cmp (bad) mov scas jp mov stos xor inc cmc setbe jnp outsb testb add in inc xor or dec rcrb subl sub ljmp push punpckldq add mov clc cltd or pop lret jp jecxz clc pushl in sbb mov in (bad) mov call push sbb sub jo add xor push jns sti mov (bad) jmp push add or pop jae dec addb xchg sbb sahf fcomps lds lods pop add jnp push cmp pusha mov loopne stos mov xchg in inc jbe jo add cltd mov les jp add ret (bad) sub adc fistl ds mov inc sbb std cmp in lret xchg hlt mov xchg xor jo push jns xor and int3 nopl or pusha (bad) adc cmpsl iret add ret rolb lock pop mov repz push sbb add sub pusha mov sub mov pop sbb dec pop sbb out rcll addr16 imul imulb out or (bad) pop mov xchg lds popf sbb cmc clc adc movsb mov or xor sub mov push adc fmuls and xchg icebp cmp and ja adc (bad) (bad) jle test mov jl lock pusha sbb lret icebp inc xor or add or add xchg (bad) dec mov xor stc je push push mov cwtl mov cmpsb sub jge testb loopne pusha test xchg rcl movsb mov cmpsl lret push add sbb out movsb sub pop in (bad) mov jb rcrb lahf push mov daa lods imul push xor movsb out ret dec sbb add aad je add xor mov push cmpsb shll rcrl ret sbb mov xchg cmc daa sbb cltd inc and mov cmp or or push mov mov push loope add lods icebp cld jne repnz loop pop cmp sub pop and add cmp cmp mov pop jecxz cwtl (bad) notl dec jle ds sbbb call inc stos mov jo lcall mov mov das sbb xchg lock rclb or xor out addb iret sub in and sbb lahf je add fimul je jno push add add loope movsb pusha dec cmc int3 aam dec icebp nop sbb jne addr16 shrl and jecxz sbb add mov sbb out mov in fdivr lcall push or jl dec out adc push add stc lock xor sub (bad) pop xlat and sub div lea mov fs stc sub adc jno test popf cmp shrb adc cmp jp stos outsb (bad) cmp dec sub mov add inc ret adc clc icebp mov or add divl jns cmp xor lcall add test lds call sbb jg sub xchg movsb add cltd mov pop add icebp rolb faddl pop push add sub mov out jecxz pop lret push push test and sbbl aad shll push add neg mov or add adc fs mov jle test push (bad) call jbe test adc jle jg mov test adc xor cmp les sub (bad) mov cmp test loope scas bound mov popl testb or push rcll test add cmp pop les jo test pop sbb inc xor mov pop mov mov sub mov cmp add xchg ljmp mov mov dec jl add test dec clc fadds cs pop out stc (bad) test push and jge cmp movsb popf sub add (bad) cltd add ss add lods mov inc out add rorb out pop xor (bad) mov xor daa push lcall push cltd sbb movsl fist mov pop das jl call cli daa (bad) ljmp cmp es inc xor lods xchg loopne js and jo test lock imul pusha in inc test sub add or fcoml mov int3 inc hlt inc bound inc push xchg jecxz dec mov jg xchg out stc mov aam out inc sbb popf js jns adc sbb and xchg pop pop test pushf sbb mov and xchg mov int or js out mov andb cmp and call xchg clc or stos (bad) out aam test mov addr16 clc popf aaa and mov mov add push mov mov clc jno add dec (bad) sbb and inc mov xor fdivrs insb pop lahf neg inc lods cmp add movsb adc leave xor or jno icebp or push outsb fscale lock ds adc nop mov stos imul sahf popa lods mov cltd pop sbb pop push scas popa jae je cmp clc add pushf dec ret (bad) out mov jmp sbb popa negb sbb in movsb mov fucomip out mov test ret push cmp xchg fcmovnb and add enter es cltd push mov ret sbb icebp ja push loop add xchg stos xchg sub rclb xor test lock fs cs fs mov stc or and jno cmp mov push mov repz mov sbb mov mov ja lock cmp cmp (bad) mov push inc mov mulb call inc or ret out outsb sub lds jo push inc les cmp cmp jl pop out cmc ja add adc sub mov (bad) xor sbb fwait pop call push lods cmp xor jns lock call daa dec inc insl addl call pop insb xchg lods test add or push pusha jmp add adc push jo test mov mov dec cmpsb adc inc adc mov push cmp notb je mov flds adc push xchg and in fist cmpsl and imul cmpsb movsb add xor pop call or jg push aas popa out push xor mov add addl add mov insl out or pusha out dec push shlb adc mov pop mov into or test aam andb test rep xor xchg push ljmp mov xor jno pop loope push (bad) sarl push pop inc dec inc lret fsubl xor and sbb jb ror out adc adc sbb push bound dec mov dec add add lcall rolb add xchg pop test add push nop movsb scas loopne mov mov add add les insb hlt pop push addr16 and popf add mov out bound push fnstsw in xor mov js stos fisttpl lock add or add push fildl cs add stos bound add jne lods cmpsl xchg xchg scas xor mov aas popa addl loope nop cmpsl icebp xchg adc (bad) jmp bound or and cmpb (bad) mov xchg and sahf adc and lods pusha cmpb fbld adc dec add mul lods jmp orb or mov sub cwtl xor dec xor or fadds adc bound insb cmc cmpb arpl pop add nop ja les sbb jo daa cmp add mov and int3 dec mov add testl push and add arpl mov add cmp add andb add sub popf je add jmp xor cmp pusha lahf call inc adc lock clc sbb xchg add and mov add mov add push mov pushf xor cltd std push subb mov jecxz push mov push scas xlat and jl cmp push (bad) xchg movsb inc xchg pop popa mov dec (bad) add test or xchg jle jp xor and addr16 mov mov or call js push js pop fs push mov loopne jg sbb adc jecxz mov sub leave popf pop mov jno add loopne inc xchg add sbb into xor add jmp insl dec add push shrl sub pushf rorb and add loope jbe mov in cmp lods dec mov jle xor sbb mov xchg in add rorb rcrb cmp dec sbb mov push xchg jecxz or jb sysenter sbb insb cltd stos loopne (bad) ds jmp pusha xchg imul or loop jl xchg adc insl push pop pop orb mov out mov mov jg add cld out sub xchg mov push mov jo mov jbe sbb add repnz or sub push and xchg push out sub sbb add cmp test jl rcr in xchg in test mov dec mov cmp add mov jo test rsqrtps adc add movsl xchg loopne mov sub cld add mov adc xchg adc out outsl js cmp rolb sub ljmp or jo xchg insl inc inc (bad) pop ret cltd mov stos enter or loop xchg and sarb decl mov sbbl inc jl xorl mov insb fcomps add jg push and movsl out pop shlb mov mov inc inc pushf dec hlt mov adc popl mov add lods shl jo adc cmpb xor xchg cmc data16 add out push nop or dec jno ds rcrl (bad) int cmpsl aad adc push adc adc push mov stos sub mov mov adc jg orl aam inc jnp mov add rcll or sti and (bad) add and xchg push out (bad) jecxz xor add vpperm push loope pop mov pop shlb mov mov mov mov xchg inc xchg xchg or enter (bad) addr16 mov cltd mov push lcall sub mov faddl pop daa cmc sub test xor dec pop adc dec loopne test push dec or out mov cs inc cmpsb jl arpl cmovl iret add insb repnz push inc stos mov (bad) mov decb xchg in inc xchg popf inc (bad) push add fisub insb sbbb leave add loop xchg cmp test lahf cmpb sarl ds and pushf sbb mov sbb dec sbb ljmp mov mov and ljmp rorl jecxz cli inc test jo hlt jmp mov push mov aad jecxz xchg push pop pop je push add add nop jns xchg (bad) out lods orl test mov loopne dec and xorl sbb iret push or clc out inc gs or mov mov push add or stos testb pusha xchg dec xor out hlt mov das fs fcoms xor in leave pop or rcll push scas push movsb sub fs dec pop or orl adc in in jle add inc out dec cltd sbb xchg lods jns cmp into and mov push cltd pop sub movsb add jb sbb jp xchg push aas ret xchg loope push push (bad) adcb daa add divb enter fiaddl add mov fstl loopne add or fcomps add xor mov jbe mov sbb jecxz pop pop mov insl out dec xorb inc cwtl add (bad) add sub imul leave shl jbe add inc clc add cwtl clc adc or sbb push or push xchg lods nop sbb (bad) mov hlt dec add sbb mov dec das pop or sahf mov jae test mov push je dec mov imul nop mov js mov adcl lds test mov fcompl dec adc and pusha inc movsb sbb inc movsb cmpsl stos add sub ror or add in in jle inc fisub inc stos add jno loope xor adc icebp (bad) es mov loopne das sahf mov mov addl aam xchg jae out mov sbb mov sahf add lea inc rol ret pop js adc and cmpsl add push or dec mov (bad) outsl (bad) orb (bad) dec pop test push and or gs inc icebp mov rclb xchg pusha (bad) ljmp add cs cmp xor arpl iret and test pop jae in add repnz flds push add mov andl out and cwtl inc movsb pop dec insb mov add xor (bad) pop fiadd mov sub cwtl or add push les dec mov je aad (bad) scas adc pop xchg nop or popf add cmp dec mov cmp xlat or mov jns mov shlb loopne rolb cmp out sbb dec (bad) fadds mov mov (bad) clc pop push and ret inc adc iret movsl sbbl test inc int3 les nop lock mov mov loope sbbl pop fidiv sub enter push sbb add pop pop in dec icebp mov shlb or mov aad mov and fmuls pusha adc insb or pusha loopne bound add dec sahf loope popa xor mov mov cmp sarl fsubl add xchg roll pushf and add pop loopne push jbe aas xchg sbb xchg inc adc sbb pushf add cltd pop les mov cmp fistp push dec lock out in call ja add (bad) dec addr16 adc push lds or or out mov lcall js mov test inc sbb pop add rcll clc mov mov inc cltd mov cmove mov jg cmp xor test inc jnp cmpl push insb mov add mov jp dec add scas in push or xchg pop mov pusha flds mov add pop pop mov cmpsb xchg addb rol lods int3 add (bad) adc push or push popa sub add sahf rorb sub shl dec push cld add fcoms cmpsb xchg push xor xchg loopnew xchg xchg add fdivs inc adc dec sub ljmp cmpsb push test push mov pop xlat add mov out mov dec cmpsb clc pop push and mov mov xor mov dec xchg ret or (bad) shr dec inc mov add mov lods lods sub movsb test push or push jnp add frstor sarb loopne pop inc jl sti or xor sub jae adc rolb sub cli sbb inc push jp das push pusha xor nop inc sti sbb inc push jg inc mov add push out dec sbb mov sarb ret orl and and inc (bad) push xor push addr16 xchg hlt fwait push lahf and sbb dec divl sub adc mov xlat adc lods dec xchg add mov test add cmp push fnsave xor inc std and cmp adc or mov (bad) mov lret aas loopne xchg add fwait xchg pop mov loope mov add mov repnz adc rorb lret fwait std and xlat pop dec dec or popf dec jecxz sbb in (bad) sarb (bad) in dec fcomps stc test xchg or mov bound mov ficompl out sbb (bad) es fmuls out push sub and xchg adc icebp fnstsw js cmp adc repnz dec into (bad) lods mov push and cmp lcall xchg enter aam mov roll int cwtl nop mov mov js movsb imul sub pextrw mov sbb add xlat jb push out test (bad) repnz aaa mov les loopne stc mov ret pop mov ljmp stos into out pop loope push std pop pushf fld adc popf jbe shrl add aam out adc or cwtl add xor orb test jnp lea test (bad) pusha imul scas (bad) das lock das xchg xchg jp mov jo incb sub in fldl sbb xorl add mov xchg jo nop and leave mov cmp jle jl imul pop (bad) cmc lods nop xadd cltd pop sar inc add lock push aas (bad) jno mov ret sub jmp push mov xchg sbb (bad) mov rcrl shl adc mov pop xlat leave cld jmp inc mov dec add pop fiadd negl sub sbb cli test scas push sub push cmp insl lea and outsl mov or das jl cmp xor jg add xor test fwait pusha int3 pop mov jmp out cmp and mov out dec sbbl xor rolb lahf cwtl xchg aad subb mov push push movntps inc or and cmpl jmp sbb bound data16 in fnstcw jl movsl adc lock mov sbb mov xor test es pusha cmc aaa dec xor adc push push dec cwtl test enter add pushf je sub je sub loop xor pushw loope jle dec xlat imul sub loope mov lds jecxz addl mov adc or mov jl iret sbb inc pop pop test sub aas rorb add insl xor fimull jae outsl addb bound xor sbb pop or push pop lods movsl cmp pop mov and sub jmp scas jmp add add popf sub enter and dec gs mov and xor arpl push fs movsl add lods dec (bad) cmp adc orb sbb into and adc rcrb fbld nop jbe clc scas add inc cmpl arpl and mov push pop xor xor mov (bad) jno mov stc imul mov adc insl cli mov insb add sbb mov (bad) add jmp pusha fsub and xchg js insb dec push test mov sub mov dec add xor loope fiaddl xchg mov mov pop ret jmp xchg clc jmp lret call jecxz jns fdivs cli fld adc xchg (bad) lods in mov andb test sbb enter sub and push clc xor mov roll test ret inc mov dec out test int3 leave jno xor popw outsb add loope je mov xchg or imul pop and repnz dec call aas pop lds fcomps js dec in jbe sbb mov movsl enter push pop jp mov inc test jmp xor dec add (bad) jae and mov mov outsl fcomi leave adc (bad) bound pop xchg enter or mov and push xchg cmp push jg xchg test jo or nop and dec mov add xchg sub and or or dec xchg flds cmp outsb and sub pushf add gs rorl cli mov and dec inc cs sub clc jl or adc and loope push jl ss sbb data16 test lret mov lret sub rcrb add jo sub orl (bad) lea inc popf sbb adc insb (bad) mov add mov rclb fcomps fildl loope enter (bad) mov inc enter jl add push push insb sbb mov lret movsb shlb jle fsubl and dec or pop mov xor or jle (bad) andl enter jg clc into loopne add shlb mov dec or add inc fimull clc sbb sbbl js mov pop jbe xor test mov into sbbb adc ja push mov mov orl add ja mul gs cmpsb movsb fnstcw js pushf pop dec adc mov test and adc js and fidivr mov cld sub add pusha and subb pop add dec push lea outsb or push lret adc sbb (bad) add add or (bad) jo mov outsl push jecxz orl jp jno mov cld mov sbb sub and les ret call jo xor negl dec test orl xor pusha test push (bad) adc mov dec data16 add es pop sbb jg dec inc adc xchg fldenv push movsl popa add mov (bad) jnp in pop xchg add imul shrb movsb popf pop stc push insb pop sbb in mull js stos out push in pop cmp inc jae cmp pop addb lods loopne enter dec dec movsb aas nop int3 inc add inc je xchg js test xchg adcb add sbb add push or gs mov mov add add jne imul test cmpsl xchg push and push ror jns or addr16 in mov and fs push jmp dec lods cmpsl push mov adcb fs sbb adc test xchg roll mov push jecxz les les pop enter xchg pusha jb inc imul sbb rcrl add inc push pop or lds iret xchg xchg and push push jbe or sbb popa sub dec nop mov cmp rcrb (bad) hlt outsb and repnz loope and lds and hlt fs jbe jmp adc (bad) icebp mov or and les pusha ficompl dec call inc mov xor cwtl add mov insb (bad) enter in ret jno mov out cld mov orb in xor andb mov and test inc adc pushf jecxz mov cwtl int3 cmp gs loopne or es pop repnz test mov aam add sub movsl mov and cwtl test mov pop add jmp cmp (bad) fwait mov cmp mov repnz xor dec ret in (bad) ret add fs add dec leave repz sbb jecxz fwait adc push sbb stos pop mov nop ret dec add push dec in pop add fsts lods fnsave sbb (bad) shrb dec pop insb cmpsl sub adc rclb sub xchg jp lcallw mov sti out dec and add mov mov xchg mov lock rclb add jnp iret mov sbb rolb into xor xor (bad) add xchg sbb mov cmpb sub std push or dec shlb pop jae test push in nop pop push mov xor push add or call fs sub or push lock in in push adcl jmp sahf pusha push test or inc les fwait rolb sub add xchg push pop dec cmpsl inc sub mov addr16 mov jns adc mov mov add rorb lods push sbb xchg adc insl fisub arpl test incl adcb add punpcklwd push sbb or xchg mov rol jmp pop xor lock and dec mov rclb fsubrl das dec inc addl mov dec in mov or mov (bad) and cmp sbb nop sbb insb fstp test add aad rcll cmp test imul xchg jne orl adc mov fwait mov (bad) rorl fsubl cmp xchg sub adc fcompl sbbl dec jno sbb sub outsl fnstenv fidivr mov mov adc mov and (bad) movsb andl or dec sub lock fimul stos cmpsl dec jno or (bad) out in lahf or mov das xor pop mov lock dec xchg push aad or dec ret mov sub nop pushf cmp outsb add ds adcb lret aam inc in mov rolb mov adc gs sbb or (bad) movsb inc dec (bad) and inc in test inc fdivrs lock cmp adc int3 repz inc and inc lahf and xchg test mov (bad) divl sub or push mov sub (bad) out ret cmpsb imul push cmp xchg add xor sbb in xchg test push mov jle rorb cmc mov xchg mov push xor xor sub cmpl into sub andb push inc lods test test je test test mov lds xchg das cltd clc outsl jb add dec push int3 adc mov out xor jnp hlt je pop xor add jns and cmp clc test test or fist icebp and mov fcomps add ljmp sbb and iret dec mov pop ja xchg shrb (bad) ds outsl and inc nop fsubs sbb mov loopne sub xchg add mov mov cmp add cmp cwtl sub mov xchg mov (bad) jno xchg rcrl je jmp sub xor mov add inc icebp jge xchg add leave mov mov add add push mov stos add add rcl adc and or xor mov sbbl mov loopne lahf nop add aaa popa stc mov stos mov fcoml loopne jbe push mov bound pop mov cmp mov repz or xorb gs jb lcall jmp add sub dec sub mov in cltd mov mov into es inc add xchg inc add dec sub mov sbbl jns xchg jb and sub add add orl mov lods adc and insl dec (bad) xor xchg xorb xor adc enter test jne ret or ljmp adc mov gs mov sub push std dec dec cmp divl fadd lahf out mov add inc fidiv add add dec je add rorl les pop fimull andb ss sub nop repz mov mov sub adc adcb or push out mov shl movsl fs movsb int3 add addr16 push loopne jb fild hlt pop jg inc adc jbe je call mov dec ficom add lcallw mov rcl add lds mov add sahf in (bad) adc cmp jmp mov rorb loope push mov mov or loope andl (bad) sub or arpl mov imul add ficom mov push mov mov test mov test bound sub dec test fucomi and cmpsl cmpsl inc (bad) les hlt movsl or lds push enter and pop in inc pushf jge mov repnz jne sarb add cmp adc add das loopne imul outsl loope xchg push inc push push sbb ror mov adc xchg subb adc out (bad) in mov addr16 jmp (bad) fsubs lods xor adc cmp rol mov jnp (bad) or cmp (bad) leave mov ljmp movsl xor mov pop test scas mov mov inc rorb ds or add xor inc push add call cmc inc js and add push int test sub add push dec pop adc pop push pusha daa mov (bad) sbb popa add fildll ljmp and fldenv loopne mov inc stos add add pop sub pop aas adc movsb pop and xchg loope daa sub mov jo das inc rcrb cmovle int3 push loope or movsl add sbb loope and test xor cmp dec inc mov dec sti sub add mov adc cld inc sbb cmovne push movsl and cmp pop inc mov sbb loopne xor mov je mov push and test xchg leave je xor jno jl,pn pop mov mov mov icebp add jae inc dec mov cltd inc int3 scas sbb ljmp adc sub pop jg or loope mov pusha nop cmp nop inc repnz sub jmp mov call dec dec dec adc add jmp lret cmp add push cmpsl ret add insb daa dec inc gs rcrb fisubrl mov icebp jge mov fdiv (bad) mov pusha push push loope clc add das lds iret outsb add mov fsts mov push cmp fs sub pop call insb addl jne cmc loopne xor inc add stos scas hlt add je out dec pop or fsubr xchg in mov aas xchg adc inc pop loopne int3 add xor and mov pop dec or sub mov rolb test shrb inc test das xor xor aam lea ficompl int3 or pop mov les repz mov mov cltd in cwtl jge and add mov inc cwtl fildll bound add imul enter loopne icebp add arpl movsb pusha mov lret pusha mov rorl adc or xchg inc dec push in lods andb xchg and scas int3 sub pop les pop sar idivl (bad) mov or imul push test loope and outsl add imul jbe fimull test rcrl inc push and mov (bad) into dec mov mov loop add pusha movsb cwtl adc sti mov add imull rorb xchg adc jl shlb les push in pop lret and arpl repz sub or test (bad) mov frstor adc sbb loopne dec out inc mov or loope mov push fdivs add or test inc stos xor or pop test loope adc push movsl sub test cmp mov pop jns int3 mov fmul dec jb jno test ljmp or push mov add sarb out jbe cmp pop cs xchg test and pop shrl dec pusha in rolb jbe (bad) cmc nop jo das adc loopne pop dec enter sub push add pop mov popa mov mov sbb xchg mov add test adc imul push inc or sub pop xchg mov enter sbb popf cltd or sub pop xlat mov push xor add mov loopne mov ljmp adcb sub loope cwtl nop sbb bswap add (bad) mov aas pop mov lods cmp cmp mov adc test enter sub cmp and xorl inc dec jae and adc out dec in add mov jg and xchg addr16 dec dec push push (bad) leave jno pushf jo mov sbb mov cmp or xor das rolb mov mov or and jae mov aaa push cltd cmp xchg add (bad) dec std scas jno sbbb mov inc or pop (bad) or loopne sub faddl xor call and popa fs adc mov pop pushf fs cmp out fdivl loope clc mov sbbl inc addb (bad) std push xchg jo loope icebp repz les sbb dec mov mov mov ret clc lcall pop andl cs movsb hlt test mov add pop cld (bad) in inc dec ja call rorb imul daa cld insb inc and dec (bad) xor ja scas (bad) jo cmp lea cmp sub fs add sbb jnp sbb adc shlb jl pop std and mov xor or add sub inc sbb dec jnp loopne add insl popf jl mov out pop mov pop adc or adc cwtl mov sub jecxz (bad) and popf push data16 sub inc mov jo mov daa or add movsb sahf sub adc es mov add add sbb in mov mov sub repnz add add pushf jecxz repnz mov bound sbb push mov das dec and adc test cmp jne rcll pop sub inc xchg fldt stos mov mov mov mov (bad) dec push lds xchg mov es and sub (bad) mov add arpl xchg or dec loope jl pusha sub in add out ja jle xlat aam jp pop xchg pop rolb push mov xchg cwtl add pop adc inc int3 hlt adc add pop mov dec cld psraw push cmpl pop cmp push jo jno mov mov mov and sbb xor adc xchg mov jg lret mov cwtl mov push add add rcr dec cmp add xlat test jl add adc mov sub cmp loope mov inc call lahf cmp mov mov add hlt lret in sbb add fwait imul std nop ficom mov mov adc jg sub xchg pop adcl sub mov cmp ja cmp dec cli sbb scas adc xor (bad) sbb mov stc sti rclb inc movsl mov and dec add jne int3 int3 push xchg enter sub sub inc cwtl add aaa push js mov in loope or pop js push arpl and mov mov xor cli cltd das andb inc je sub loopne jbe push dec inc jo xchg outsl inc xor adc or dec (bad) and sub jg in jno lock outsb jnp out scas pop mov inc jmp enter stos mov xor mov int inc daa and add mov faddl xchg sti lock lret or sub dec mov mov ljmp imul loopne ret inc sbb jbe mov or push add cmpsb and dec cmp xchg (bad) xor or popa jns dec xchg mov loopne scas clc xlat dec out inc jne jp pusha push and stos popa in and add xchg sbb add inc imul cmp jge or xor cmc bound pop jge lahf mov xchg add ds jle adc mov test movzwl enter jmp jl mov mov divw add leave pop add mov xor dec or or rcrl icebp jae mov xchg add dec mov xor mov mov sub pop xlat pop add or mov jb or mov mov (bad) mov ret test mov loopne clc pop cmp out pop xchg xorl mov fdivrs hlt jno adc call mov repnz in sti or stc scas das call dec addb xorb mov cmpb xor in mov adc sbb mov add test dec xchg movsb push xchg std mov sbb add mov es bsf cmpsl pop adc xchg movsb pop nop sti inc mov in pop pop ss mov inc mov aas cmp outsl movsb xor ffree pop jmp sbb aas sbb lods inc int3 xchg sub lock inc cmp mov stc jb add lret sub inc pusha pusha es sub (bad) pop stos and adc fcmovu jne int3 adc jp add pop add mov (bad) ret or xchg adc sbb dec (bad) push push mov mov ret cmp je add dec pop ret mov in and mov cvtps2pd adc (bad) std inc data16 inc add xchg mov popa xchg add mov push mov (bad) dec (bad) out add jge int3 fdivs loope sbb mov dec xor mov sbb xchg dec fs jecxz fist add jo xchg andb inc enter js mov int3 add fwait decb jne jp iret sub test fidivr mov jl jge pop in add adc pop in scas add and bound adc add mov or mov lock lock mov test nop or sub adc add stos push repnz push push add add in nop mov pusha jmp mov jb cmp leave add pop out adc push loop into dec add push mov add inc and sbb mov lock test mov js cmp sbb inc cmp jl clc add loopne negb jmp std (bad) adc out dec cs movl sbb out sub mov or mov rcrl rol rcl cmp ror and mov cmp and sarb icebp aam popa fnstenv pop cmp mov test add inc (bad) sub (bad) repnz sbb and ds dec insb sbb or lock rclb lods jae xchg js mov sbb in loope xor mov jne dec add (bad) (bad) shrb add (bad) cmp add nop mov push mov mov sub or pop cmp roll and jno add std stos jmp aad incb sbb sbb mov cltd add push sbb sbb testl xchg andl mov (bad) mov jle test cld repnz add xchg push add popa bnd mov fsts hlt jnp and lcall loopne aad int3 xor xor xor clc pop imul (bad) mov aaa push rorl jne xchg add lret hlt jge dec (bad) out push pusha dec push pop addl roll clc mov or xor push sbb cmp push cmpsb outsl add andb add and fwait adc arpl push cmp add cmp test sub adc jg mov sbb call xchg stc push dec (bad) or sar ficomp mov lcall xlat js out add sub dec and add repz popa fldl out inc in cmpb roll jle lret les jl mov mov shlb lahf adc xor ja fnstenv or sarl jmp jb or push (bad) adc arpl sub xlat mov in jl add std jge or jo cmc int jle test mov jg aad or adc xor imul addr16 nop mov out push (bad) rorb add or and adc and cltd or inc inc adc or mov in add jae sub les imul aad jmp add stc ss ds mov les lods push lods sbb cwtl push pop aas ss add push int and add dec xchg push call loopne xchg sub enter push xor dec rcrb fcomps negb ss iret out pop fdivl inc inc push test mov ja data16 fwait adc jl cmp xlat jnp cwtl pusha mov jmp sbb lock insb fwait xor xor fstps sub ja rcrb imul pop cmp loopne lock test cmpb jne (bad) mov (bad) icebp andb cmp inc mul mov push jbe mov adc jl test movsl mov push dec in xchg add push imul mov pop xor dec mov ss loop mov add (bad) out pop ret in insl jl push push jo inc lods jne push test inc fsubs push push adc xchg cwtl pop and jmp aam sub dec in (bad) repnz mov lock imul sahf sbb andb int3 jno cmp add xor xor or adc or loopne int3 sar push int3 orl nop mov std (bad) and icebp lret cmp adc add jnp xor out lods rclb scas lcall push dec ds dec push clc insl mov xchg popa out jmp add and fisubrl push faddl add mov or ret mov aas clc std push imul jns fucomip cwtl lods add push sbb mov add aas add sbb enter fcmovb mov popa call aad xor cmpsl xor jb data16 sub sub icebp fwait xchg xchg jge call push ffree adc mov and lret and fmulp sbb or sbb dec (bad) pop rorb add mov test jbe push cmp insb stc add sbb push jns jnp adc mov call cmpsb fstpl cli popl sti es sbb andb and in mov mov out push lock cs xor fdivrs add and mov leave dec scas pop das or lret inc adc sti dec ss sub test imul inc lock shl sbb dec lock push add jl mov popa mov sbb (bad) jae or test adc sbb push leave sbb sbb and mov inc rcrl into fistpl loopne je pusha push adc inc xor cld dec fcoms popf lds mov inc add ret rorb mov stc dec add outsb mov pop stc mov mov add aas aam adc pcmpgtw and add pusha hlt mov cmp nop pushf push xchg ja,pt andb outsl or jmp test rolb push sub fistpl or adc clc ficom rorl mov or jb pop lea mov fisubrl mov push es inc shl cld (bad) pusha mov pop push jo dec pop jb add mov cld (bad) dec push adc sub je divb and or test mov fnstenv inc iret push ffreep pusha xchg lea mov stos adc xchg sub aam sbb iret lret ret jne and and cmp shl sub jae test imul adc sub in add pushf mov mov jnp in inc icebp lcall push ljmpw ja xchg mov js push (bad) adc add movsl push leave pop mov rolb loope rorl loopne (bad) icebp cli pop mov xchg bsr (bad) js es pop rclb dec adc aam cs (bad) mov and fistp inc subl add mov push shlb loop push or mov mov or mov and (bad) push pop (bad) pop jle and movsb xor clc sbb jg push or pop xchg add inc mov cmp loop stos mov add xor mov stc roll add call lock scas adc mov cmp mov and cmpsb pusha sbb add add (bad) pusha loop push sbb in rcrb pushf push leave adc mov adc lock jo add lods icebp shll inc inc orb ja cmp lret add adc xcrypt-ctr cmpsl popf adc or aas lock add nop adc mov push mov xchg sti pusha enter frstor rolb or (bad) (bad) nop dec sbb rcrl (bad) aam push call aam aaa loope pusha scas pop out add bound int inc cld dec push and adc dec dec mov (bad) loop add mov out add lock add jnp jge jl dec ret loopne jae fcomps and push out iret inc add xchg lret mov movsb mov add mov and ja and mov je hlt pop pop enter or roll dec jg inc sbb add sub int3 out xchg clc sub push (bad) mov jns jmp pop fldl enter cs and or popl jnp or lcall cwtl pop add jmp mov test sub (bad) loope xchg adc adc mov les mov cmp push fisubl sub into lret xchg sbb in (bad) icebp out cltd inc jecxz and add dec cld push push dec pushl xor pop inc subb (bad) mov or rclb sbb dec dec push test sbb cwtl pop inc (bad) test nop adc and jmp pop or test dec sbb add icebp pop xchg sbb imul add rolb push jbe pop xor mov aas cwtl mov mov inc fldl sbb js push ja inc (bad) xor hlt jecxz or dec loopne rolb mov and lock mov (bad) clc sbb mov add insl ret out cmp mov cmpsb nop pushf sub and sub jo or sahf xchg sub cmp jl and cmp fsubrs push pop xor sbb dec je pusha inc adc imul test repnz adc enter or ss jp adc lret inc jmp loope in ljmp inc sub mov add int fldcw cwtl dec js mov add push sti pusha mov sbb mov shrb sbb xchg pushf adc dec mov mov jo fcoms add repnz test sahf dec xor jo les ret sbb adc xor js or mov lods push icebp shrb pop loopne js and rcr (bad) mov cmp push imul mov loope adc dec int3 xchg push or imul sbb mov sub inc add mov cwtl add subl divb js fadds clc push lods mov jg add sub in pop mov mov sbb mulb je jp pop jb lret jmp xchg iret dec add fsubr add sbb rorb pop add sub push add fbstp js inc xlat pusha fadd xorl cmp in mov (bad) nop loopne lcall int3 adc es or pop pop cmc and add push arpl lahf movb lock push cmpsb iret xchg out sarb mov push inc jb clc and dec mov pop test (bad) rorb xchg pusha xor pop sbb push xor cld in cmc push mov xchg inc leave push (bad) sub cmp sub xchg xchg mov out rorb sbb jbe scas sub push sbb dec or scas or inc push rorl dec (bad) pushf add aaa cltd les pop mov hlt and test adc push push hlt scas mov aad dec jp (bad) iret sbb imul sub mov xor or xor fnop pop and fdivrl mov cmc xor inc pop and imul xchg adc popa lock nop xchg clc out clc faddl jb jecxz in and cltd mov icebp inc inc es mov (bad) (bad) mov ret iret mov loopne bswap push in jle jge xchg mov add ret and mov jmp fstpt int mov cmpsb test push sbb subb fs pop data16 dec pusha mov xlat dec cmp mov xchg roll rcrl into xchg mov jo or lcall mov pop roll sbb jae adc sbb add out mov in push lahf or stos push insb and xchg pop jmp sub xor pop je mov and inc fiaddl jl mov mov inc jmp icebp adc jo nop cld xchg pusha add sbb mov hlt dec jmp aam outsl movsl cmp add mov pop add xor add xchg (bad) pop or dec cmp push cwtl dec sbb and lcall fiaddl sub outsb loopne cmp jecxz sahf mov adc loopne leave rclb mov aad mov mov lds mov addr16 xchg sbb and movb lds leave or push add inc aam adc aas movsb or jbe test sti jne out aas loope xor xchg fsubrl sahf aam (bad) mov xor sarl add inc push cmp pop add fs std lds rcll ja pushf inc mov jno xchg xorb rcl sub dec pop enter xchg sub js mov jo enter mov adc outsl enter mov xor jb xor addb sub xchg mov xor insb sbb and cmc inc and repnz mov mov xor test add pop addl push adc xor add icebp mov sbb lret or sbb pop clc jmp outsb add les or lret adc jle ja cmpb push xchg mov adc ret xorb xchg into rorl shrb sub clc inc xorb mov lock test arpl rcrb inc adc push mov lret gs imul setbe dec subb clc loope mov xchg int subl adc and bound fisubr loopne in or pusha mov dec lret pop adc or rol adc insl push add xchg push mov sub mov lret aad push (bad) sahf sbb add sub sub pop cwtl dec mov adc gs inc fs adc and and add dec test and int andb pop (bad) lods fwait add mov (bad) and sub xor out push push pop push push xor xor push jno mov mov je sub add mov xor xchg jmp cmp sbb in xor into jmp (bad) out scas lcall mov pop out xor jp cmp ja bound data16 sub test pop jl inc dec adcl add test inc daa push or lret test test loopne adc rcr jecxz mov add push lods or fsubr test sub dec adc jmp xchg xchg add test mov sti or test jo and je arpl lahf stos add mov add or push test dec into dec or adc push jb sbb call jl inc pop fcom daa lret add sub dec xchg mov push inc or sahf pusha sbb xor test push dec es fs add xchg adc pop in ds dec and stos pop xchg add push and or lods lods cmp adc push or xor push and add or mov mov fisubl cmpsl dec daa insb mov imul sbb loope int in adc push push xchg loopne imul mov cwtl sub adc fsubr add and mov jmp sbb or sub cs lock in into sahf in fistpll arpl inc lods rcrb push mov out enter sbb adc add test push jo,pn nop add cmp stos movsb xchg rclb sbb jno call lods paddsw lds lret push ficomp push xor sbb aam xor loopne ret (bad) les cwtl pop add stos (bad) or in aas add mov jl push lret sub mov mov ds adc in test subl push ret in or jns inc movsb dec jmp lods xchg loop andb jno lahf adc test test dec test fadds jecxz addr16 sbb nop and sbbb out add mov das or iret cwtl add push mov popf in inc test movsb add or cmp repz cli push les xlat add or (bad) mov jno or add mov rcl push pop insb sbb rol add pusha add adc mov mov mov adcb fdivs movsb lock js cmp and nop push pushf inc hlt xchg adc inc fstl adc insb or fs pop mov push inc sub sbb fsubs lcall sub adc clc push pop or and push jb loopne mov dec lahf adc xor dec decl mov sbb and xor (bad) clc cwtl ds cmp ds insb and pusha ds push adc adc or push ret jg add mov and mov cmp cmp into (bad) inc daa rcrl add ja or push mov jp repz sbb cli sbb inc or xor ss mov loope add push adc lldt mov dec jle add out push mov sti add xchg daa ret insl je cmp jg in and add mov popl and ret pop sbb inc add jecxz adc add cmp push mov mov outsb (bad) xor outsl aas js push pop xlat (bad) fimul mov mov sub mov loop add aam clc int3 out pop in outsb ret adcb popa add insl xor dec ljmp mov lods push test and push out pop or fisubrl imul (bad) mov add pop cmpsb loope add push sub add sbb pop xchg cmp mov sti (bad) test mov jne adc push pop leave add cwtl and and and or sbbb lret mull inc add cmp inc aam or xchg xchg addr16 clc pop scas or jb sbb or push call sbb sbb test push mov or pop insb rcrl inc repnz mov add lods daa lcall pusha ret fiaddl in mov add arpl or mov inc nop push and les and or dec xchg adc aam repnz or in loopne aas adc adc cmp cmpsl push out xor mov add and scas dec adc sub js pop int3 and xchg adc add loopne sub xor mov inc std mov push add dec rolb lcall add xchg sub jnp dec and push pusha call mov cltd mov sub and xor or inc xlat movsb movsb aam and mov testl imul test sub cld aas ror and roll add xor mov in test sbb sbb inc adc jl pop mov sbb push add adc xchg loopne push inc mov pop stos sbb sbb je and test add (bad) push mov mov push dec push leave rorb add or es jo mov (bad) in add cmp int3 sbb cwtl mov sbb mov add jmp and or and nop (bad) mov sbb shlb add lea pushf dec iret lea xchg xor inc cmp cltd xor idiv add or fimul jmp mov insb push insl cmp add pop dec adc lods push xor push xchg push push mov mov xchg xchg sbb lock and jp push push movsb or mov sub cmp int3 lret and (bad) (bad) aam nop inc sbb jecxz adcb cwtl sbb push js dec adc cmc push mov or imul int3 add pusha xchg mov add lds add or pop mov es sub jo xchg adcb addr16 inc js add aas fsubl add xor lcall mov pop add outsb sbb add pop xchg shrb imul jmp xchg and sbb mov xor (bad) dec inc mov pop push fildl int3 sahf scas jns adc dec mov mov xor cmp adc add and mov add push add negb add sbb test daa jne jecxz imul cmp push jecxz scas lret xchg sub shrl repz sbb sbb pop mov xor xor push (bad) xor mov fiaddl callw xor push imul or push sbb adc xor inc popl sbb cmp test sbb pop sbb or daa orb lgdtl jnp cmp cmp adc sbb jl movsl insb inc jge sarb push fwait pop push adc sub and dec mov fidiv xor xchg or sub pop out push pop xchg lods scas sbb fldcw pop dec sbb lock addr16 aam inc push pop aaa andl nop or sub pop rclb inc add dec and jmp popf das push sbb and lds push adc inc jecxz adc mov mov jo aas push shlb lea add gs xchg sub mov cmp sub add inc mov imul sbb cmpb arpl icebp mov fcoms push stos (bad) cmpsb hlt add iret repz cmp push enter data16 rclb in mov mov pop test or or insl test test jbe jo pop lcall adc sbb xor movsb and ret push mov and add insb push je test jne add pop push aas pop repnz jns data16 sti inc cmp dec out cmp xchg loop lcall xchg sub push in nop and pop in or sbb aaa movsb xor and orb cltd mov pop decl sub nop hlt dec add mov push add sahf push fcompl or icebp lahf cmp xchg sub adc cs pop clc push adc insl in jo hlt imul or (bad) cwtl mov stos sbb nop lds mov jo movsb mov andb push sbb int3 xchg pushf sub pop pop push or push jge fdivl mov fmuls adc ret mov xor add cwtl mov lahf mov or pop adc cld add pop cmpsb insl inc xchg push outsb outsl inc aas xchg inc add mov push bound adc rcll les inc sbb push xor cmp cmpsl vmovaps inc inc daa les dec test push xor sub std cltd das pop sti call push sub mov mov push loop xchg sub add mov enter nop and adc pop sbb add xor std cmp adcl xchg pop pop jmp inc mov and push mov idivb sahf jo movsb add mov jae xor mov add inc xchg add mov nop inc stos lret push sub dec cmp add sub sub pop push js jp test popfw add mov xchg adc add pop dec addr16 jge insl ret jnp pop or mov (bad) daa jmp loope lods dec dec push push xchg sbb mov arpl addb nop je cmp mov push add inc lret dec xor call or adc in or pop popa stc push popa push xor push fbld into ret sbb xor push test aaa stos pop add mov (bad) fwait xor add outsl and adc mov orl xchg adc in push mov sbb xchg mov dec test and arpl test ret leave jo pop and lcall notb cs cmp mov jno pusha push mov mov stos xchg inc sub adc addl mov mov repnz test or (bad) enter cmp in pushf pop inc lods cwtl sbb je sbb fisubr or add and jl cld add gs icebp or (bad) dec add adc or loop loope pop leave xor jo sub mov rcrb movsb add movsl xor add lret dec adc sub in enter rcrb add or icebp call sub and inc aas rcrl push or lret cmp fwait inc cmc lcall jmp sub sub lret pop mov data16 sahf push leave sub pop ljmp cld add add insb ljmp xchg subb lock xchg mov push push push in adc js stos lret icebp sub mov loop mov sbb mov test lods xchg mov repz cld dec lods or xchg sbb jae cmp ljmp add enter push xchg add xchg mov sub test mov mov sub cwtl mov dec xchg jno,pn cli add push shlb pusha je adc pop xchg sub xchg mov push stos sarb sub mov jge add and xchg or adc push push add sarl adc xchg xor push clc pop or or and add popf mov jo sbb int3 mov orb test add cmp lock ljmp imul cwtl add add push add adc sub ret cmc mov add sub push mov or stc loop clc cmp add sub or fs in mov nop xchg lock push mov out lock xchg les inc imul mov cwtl bound push inc mov mov mov inc push jo xchg nop fsubs int3 mov adc adc inc xchg fldenv nop lcall movb sub mov ret push arpl cmp pop dec int3 mov or push mov pop add or inc push dec mov sbb inc add stos and push pop mov or and jnp das negb leave sbb loop push add pushf jp scas push cwtl mov or mov jl cmp sub pop insb or mov push mov loop hlt push les cmp mov sahf or test and inc adc pop adc or mov xchg mov je js dec pop sub jns xchg jmp cmp dec mov adc and daa jmp xchg add or mov fadd stc or push or shlb sahf sbb add fdivr int3 sub je add cwtl call mov or dec push faddl stos adc mov pop inc sub inc add test mov sbb jl adc pusha sbb sti sbb push mov data16 dec dec nop add lcall cmc jne mov and xchg cmpb and repnz push leave and in inc bound jl add adc cmp and jmp add and clc mov aas or push je mov jge stos push les loopne jns push std jno sub lock in mov pop scas and xchg xor xchg add cmp pop scas sub insl dec mov dec adc add dec movsl and insb pop push orb jmp ss push or pop loopne (bad) xor pop xor aas ljmp dec add mov cmc jae adc lods out leave add xor pop jge mov dec add sbb lret mov movsl ljmp push data16 sub mov add in lahf out pop test add mov push mov jmp (bad) aam sub cmp add xchg movsl xchg loopne data16 jl or nop jmp sbb leave jp stos test mov sub mov cs test cmpsl or xchg mov jecxz jne jle and dec (bad) sti sbb imul dec cmp test cmp push add pop aaa (bad) sbb add leave lahf mov jbe sub jo add clc add scas loop mov (bad) (bad) mov inc flds sbb mull mov xor adc add sbb and into jo add jbe inc cmp add fmul xchg push (bad) jo add inc sbb xor pushf and sbb sbb add jbe shll popl ret or cmp sbb arpl testl mov mov push push mov popf add sbb push add xor into cmp clts and mov (bad) jmp dec add xchg in or or es mov mov inc inc sbb or xor popa jl cmp pop mov mov idivl adc jmp (bad) arpl flds scas push movsb xchg add push out add incb xor ficoml sbb lahf fstl xor cs insl or movsl add dec (bad) jbe sub inc (bad) jb pop cltd inc push or fstpt add loopne (bad) pop lock cld and push sbb mov adc dec inc inc nop add fldcw test and add mov rclb mov adc rorb sub dec add mov mov jbe (bad) dec cld jl test inc rolb lods xchg cmp rcrb dec nop pop lods pop jo js xor xor fnop dec pop jno add (bad) mov hlt sbb inc ret xchg pop mov out add lea arpl add pop push lret jns std mov lret or jp loopne dec inc inc add aaa dec add push sti adc (bad) xor cmpb mov clc xor mov fistpll bound jns pop xor stc xor cmp jmp rolb xchg adc and xor and sbb dec popf fnsave inc adc rcll adcb dec add sub jg loope and mov test pushf inc jbe arpl mov adc xchg inc sbb sbb les sbb das or bound mov in jne mov sub orb and mov add lds push xchg add je mov sbb lea (bad) clc sub stc or add and jecxz cmp nop test and je xchg or dec outsb jnp push (bad) rclb add shlb adc orl push xchg inc pop (bad) int lock outsb fcoml sub cs outsl add push dec aam mov push test jg mov ss xchg mov or xchg and jns out inc sbb andl adc loopne scas mov cmp mov scas lret xor jns push dec or and jbe adc test pusha data16 js stc stos inc inc rclb jbe movl or add movl jl adc movsb xchg inc mov faddl jb cmp add sub call push shlb jle jns adc adc clc push add jg es and and and push sub dec xor fidiv mov mov sbb cmp cwtl push and inc mov int3 popl pop or cmp and push add jb mov pop clc cmp push ss or adc es jno dec sbb pusha in xchg xchg dec (bad) or sub mov icebp fmuls pop outsb add shlb and mov cmp cmp pushf or and cmc dec and cwtl dec lret pop std rolb fcmovu mov ja pop mov popa js or inc mov xor sbb aaa into (bad) out or dec mov pusha xchg (bad) lds movsb xor sbb adc orl cmpl add push das test insl add icebp mov rcr sbb in add or cmp addps adcb dec mov jbe inc (bad) pop add int addr16 lret cltd (bad) jg std inc push loopne mov add mov pop loop outsl mov test (bad) add sub fnop shrb dec add dec (bad) int3 cld nop dec lods pop jg dec pop cs inc je sub pushf or mov add in push add mov jb or inc cmp sbb ret dec hlt in add aas xor fisttpll jb js (bad) xor cwtl cmp xor mov cmp loopne jb adc push add ds xchg mov mov ret mov xchg or adc lret and insb or pop xchg roll cmp nop dec sbb pop fmuls jl fisubr mov bound jne mov or pop or jo or fimull out lods add sbb and outsl cmp dec movsb pop movaps (bad) out or add sbb (bad) push fcompl in mov lods inc pop cwtl rolb scas xchg sub fmull sbb add mov out inc ds rolb rolb js test lahf fmuls adcb add flds stc pop jge rclb mov xor (bad) dec push xchg je sbb xor add pop (bad) pop sbb sbb push mov cmp cmp xchg icebp icebp cld or dec loopne xchg adc and outsl pusha test or int3 addl jmp xchg add mov push insb das out or cmp call push inc and enter test cmp and frstor push loopne jno rcrb mov mov adc out dec pusha inc data16 enter rolb push jp paddusw dec sbb sbb or and sbb add pop jge and or test je aas movsb add or adc setno inc mov popa dec or add and pop (bad) mov and sbb rolb cmp inc repz dec ljmp pop int ja cwtl inc xor push lods cltd cld or and jnp mov inc popf push push lds outsb pop add push loopne inc add je xchg fistpl add mov add repnz lahf mov aam je lods add clc andb mov add fcmovnb jnp pusha jecxz loop pop push push push gs sar jbe inc jo pop loope add int3 (bad) xor or and fwait sub shlb pop inc lea imul xor dec xor stos ret cmp lret jg sub out push mov and inc jl sbb xchg jnp arpl addl addr16 xchg inc mov data16 out sub jo sarl cmc push inc sbb push ja add jmp mov repnz push es add add mov stos pushf cmp jns rclb pusha aaa mov ds into add mov jg jle cmp cmp out mov add dec int3 xor add out sub mov mov pusha mov jns nop xchg or sub lret add mov fisttp cli nop pop enter adc mov andl inc jnp xor pop add dec push push mov cmpsl stos mov fnstsw popa (bad) (bad) popa hlt cmp out daa adc sbb addr16 test out add dec pop xor (bad) cmp mov add addr16 pop aas mov push jl jmp test jno xor xchg xor add jb dec and sub sub cmp pop xlat nop or xchg add pop ds push in (bad) xchg popl add mov add cld hlt outsl lock push into aaa dec mov jb pushf test mov inc lds adc (bad) call push xor repz xor dec aaa pop pop test xchg dec enter imul (bad) and jno pop push je stc popf or add divb lret loopne xor add clc cmp stos or adc sub xor cwtl nop in into inc loop cmp outsb fwait rolb (bad) loopne add add xor mov mov loope or jmp into (bad) mov or sub adc inc add lcall cmpsb adc in xchg (bad) jo sbb push sub pop xor enter mov lock dec mov nop mov sbb sub movsl and orl je jo mov inc jo sbb adc je in push lock xchg imul pop div sbb xchg cmpsb cwtl int push mov add repnz inc int3 mov sarb dec roll aas div loopne into adc imul jle add cli adc mov add (bad) iret and xlat add mov push inc add fild decl cmpsb adc push push inc add cmp adc imul shlb ja insl dec pusha pop xor fiaddl jge int3 in pop xchg decb sub insb enter and mov nop pushf jp jge adc sbb popl inc pop (bad) mov movsl in cwtl or stc adc sbb or cmpsl add or cmp mov adc (bad) pop sarb inc and push inc xor in mov mov jno mov xchg call imul out pop cmp mov scas aaa das mov xor jb or mov jns and lahf adc cltd cli test sbb or ljmp aaa sbb loopne in add sti push int3 mov or imul jp push cwtl clc (bad) je cmp sbb loope pop sar nop mov sbb cmpsb adc (bad) fnstcw cwtl and gs add mov pop mov pop je imul adc xchg jmp je sub inc mov lods or insb and mov add add xchg jecxz loopne cltd mov sbbl aad adc or mov jmp dec test xor pop leave add mov mov clc rol inc shrb inc dec mov fadds mov nop mov inc lods add adc jmp je and xor xchg js cmp mov jb mov cs add aaa dec push scas xchg push mov xor (bad) mov dec pusha pop sub xor xlat fidivl xchg ss add in inc xchg mov dec sbb inc sbb cwtl add (bad) cmp adc mov mov test push int or mov jmp mov push mov or inc icebp adc sbb add cli add repnz and or jae and add flds mov js je fwait lock mov mov inc loop add jecxz,pt jo in pop orb sub mov jb pop xchg insb movsb popf inc scas (bad) into jo mov faddl push lock mov push push or leave call pop jl cli adc insl or int testl adc push xchg xchg xor call lcall xchg xchg jmp mov xorb enter fmull lock push fstps and xor in and cmpl cmp je jno push dec inc iret stc pusha mov xchg xor xchg and push xor adc cwtl adc xchg rorb imul int3 add pop push sub cmp aas pushl (bad) jle add push xchg pop mov mov dec inc test push xchg (bad) or stos in push sbb xlat hlt xchg and sub int3 pop xor imul test xlat in rcl dec inc add jae push inc (bad) or sbb scas jbe push lcall adc sbb ss add mul lods add cmc dec push jecxz lock fstps xor jb cs cmc add or pop ja or test jmp add negb hlt or mov test aas cmp (bad) cmc xor push and pop (bad) sbb (bad) (bad) data16 fwait scas dec add into mov jno sti lock adc add mov xchg adc mov std loope sbb fstpl scas shrb or pop aad add shrl (bad) xchg inc add ficom add mov sub sbb xor push aas dec pop jge lock (bad) jno orb mov scas push arpl sarb in mov add and add test mov push cs stc and or mov jecxz xorl and scas xlat pop test clc arpl add repz mov mov mov push pushf addr16 mulb ret mov rorl imul ss rcrb std pop jbe aas rcrl fdivrp lock xor mov loope lret pusha jns add (bad) mov xchg add mov push popf xchg (bad) jle (bad) xchg in iret cmp (bad) adc mov dec push lods addb mov xchg sbb aaa inc xor sti lret adc or enter mov or pusha mov stos fsubs mov xchg mov xor dec jns adc gs (bad) add dec in iret adc and sub sahf add nop push xor icebp out into lret cli add push dec in mov je add dec mov mov imul dec mov out in test inc es add inc ja xchg dec (bad) lock add xchg std add push push mov xchg gs add mov loopne add in popa lea std aaa add mov js scas stc fmul or lea cltd rcl mov add mov dec nop jmp jmp xor psubusw push lahf lcall mov xchg push cltd cmp and add lahf mov adc mov adc add and xor popa ret jecxz sbb sbb xor inc cmp repz mov mov in add jl push xor pop adc and sbb in outsb pushl xor add bound add call rolb dec aas cmp add mov int3 xor pop lds pop add ret add and push push pop add add sahf movsl cmpsb push or adc arpl xor and push fwait and and fistp addr16 xor sbb mov add cmp jns mov xor sbb xor loope jmp adc lcall adc add or cmp (bad) xor sti ss inc ljmp jmp leave insb (bad) sub push jns bound inc add jnp jno or in push xchg mov sbb add fwait aam xorl loop inc add repz mov mull pusha ss (bad) hlt add mov sarb xchg dec es and jno in sbb or loope dec nop add lea push sbb (bad) jb aaa xchg inc fidivrl insl or cmp and or sbb add adc add cmpsl cmp push aam notl test rorb xlat jns mov imulb and int jp add add pop nop pop or push pop cs xor ds pop push js add and int3 add jecxz in or add add and mov jge lods mov dec mov (bad) cmp pusha adc pop ds push lods push lock inc in imul sahf dec mov (bad) fstpl (bad) out jo (bad) or rcr push jns and add outsl push in inc or mov lret sbb pop addl mov adc icebp or lahf cltd aam mov pushf cli or out sahf adc sbb repz les xlat jmp xchg ljmp add jle sub hlt aam lods cmp pop or pushf pop leave push and add pop rcll and and into ss test push xor sbb mov (bad) and xchg mov pop or cmc clc or insl int sbb inc inc mov sub popa cmp xor ret jns outsl imul (bad) mov push sbb mov inc ljmp add nop popf fcompl or aaa test insl or sbb add sub adc stos movsb adc adc in test out pop arpl sub pop loopne lret add adc movsl xor add push jl ret xorl test or push es jns mov loope or clc (bad) push pop notl addr16 aad jge dec mov mov ja inc dec pop jae add fcmovnb fmuls (bad) xor cwtl adc or dec orl inc mov sbb push dec les cvtpi2ps cmp cld roll jp and add add ds lock push adc and xchg rcrb push and add leave (bad) or jl sbb add jns enter rol or scas and jo adc add lret push cmp pop sub repnz push fadd sbb or out lahf in add mov dec addr16 sub hlt (bad) ja (bad) and dec push fs jle ljmp in mov jmp lea or test pop nop hlt nop cmp repz sbb sbb xor (bad) add roll mov enter icebp test ret mov jb pop pop sbb sahf add mov shlb xchg push cmp push add mov (bad) lock (bad) cmp test call inc ror or dec or rol sbb sbb loopne jp popf into or sub push lock or loop sbb sahf sarl add or in xor and push add push repz add mov sbb pop pop cld inc imull hlt fcmovnbe jl sbb (bad) je jp and adc or push mov cmp and inc mov clc ja cmpb jnp add jns imul out and add and or sbb iret and cmp sbb mov fwait add sahf jb add mov aaa inc sbb ffreep popf iret ss mov lret daa aas push mov daa jne stos adc lret fcomps or (bad) flds into adc lea cmp pop add sub mov lret sbb sub push sahf les and add or shl stc cwtl and cmp (bad) and adc add pop fsts or jnp jo sbb test add xor xadd leave jns add test jge pushf add mov and scas movsb mov insb mov pusha scas pop shlb ret and jae pop mov mov dec pop mov dec call pusha leave nop pushf and push lock nop mov or pop sbb sbb fdivrs jp (bad) lock mov jge mov add test dec loopne or (bad) xor sbb rolb and int cmpsl loope mov push sub adc adc (bad) testl add out mov (bad) sbb fild mov pop push pop cmp jae xor (bad) push scas dec outsb cwtl js pop jp into add (bad) sbb inc dec fsubrl movsb pop pop lret cmc add pop adc inc fcmovu lods dec test scas mov outsl fwait xchg xchg daa xlat movsl loopne aam or push dec fidivrl add add test add and das cld push sub cmp sahf cmp (bad) mov enter les rolb mov stos dec jo sbb or or (bad) nop pop lods sbb popa leave cs add out sub or add shlb cmp andb pop loope mov adc into add xor pusha adc xlat rolb add lahf lret lcall in and xchg cmp push test stos inc lods xor jae addr16 add stos sahf mov nop xor adc cmp fwait in rcr nop insl pop mov mov cmpsl icebp js (bad) xor push xor cmp and add and or sbb ss leave and mov add rcll fwait and fsubl or push pushf add jns jns pusha mov adc jne sub xchg das rcll cmp int3 mov lds rcrl add aad int3 or xor cwtl popf push or rol add fidivr add ljmp mov adc jl or inc add pop xor adc andb jno dec adc cmpsb (bad) test sahf inc js mov (bad) in pusha jmp sbb into movsb adc icebp cltd sarl cmpsb add es (bad) clc and mov adc loop mov sbb mov jge dec (bad) shl (bad) xor mov pushf mov mov pop xor push adc mov or pop ficom push loopne mov (bad) fisttp mov jecxz and add test or inc scas jne loopne loope ss sub or or adc loope xchg iret or outsb push mov icebp mov lock or adc (bad) int3 call cmp push ror pop popf jno call daa mov jl pop mov fwait jmp rclb sub adc ja ret push sbb enter or iret mov or ds insb pop pop dec adc xchg outsb rorb or cwtl xlat cmpb iret (bad) nop fisttpl jne sub test or orl dec lods pusha mov rcrb test pmuludq add into loopne inc mov and mov aam dec dec in inc loopne scas in or push jmp and test pop jle lret add xor dec sbb mov rcll jecxz push or cmp lret fsubr imul subb dec adc mov mov push lods adc test lret shrb jge sbb xor or (bad) sub lds mov icebp out mov int3 ficoml add mov cli jno push imul adc iret xchg cmp xchg test (bad) rorb dec cmpsb movsb add dec fs xchg or lods push pop and or (bad) lods pushf cwtl (bad) and mov cltd mov dec fadds cltd inc mov test inc ret sub mov add sub dec nop pop xor inc fnop pop mov xor aam stos dec rolb jge mov scas add adc mov lock test push subb inc jno lsl clc add adc mov sbb test fadds adc fcompl add or adc leave or xchg and mov or adc mov push addl ss pusha cmp cmp push sarb les mov push or pop scas mov push inc cvtps2pd xor stc fild xchg movsb (bad) aam mov dec aam dec or dec cltd mov test mov inc jmp sbb jns shrb adc mov jl xor cld push sbb xchg dec fs add les shl cmp leave leave aam fs push (bad) movsb or mov pop sub (bad) pop test ss cs fnstenv sbbb lock add add pusha and (bad) lock pop cmp aaa inc mov es or xorl rolb jmp cmp lock (bad) jns add (bad) push mov sbb and add add negb ficoml xor clc add aam push sti ds (bad) sahf das mov test je add arpl mov mov test jae mov iret aas xchg out sub xor push xor or inc hlt pop fwait add insb push call and (bad) shl sbb sbb cmp or lret pop adc aam shll mov movsl or add arpl cmp enter sbb xor iret jno pop mov xor add xor stos push jo outsb xchg or in test addr16 inc adc imul mov mov lret mov sub fldt loop shll sub je xor repnz sub pop into call mov sbb and int stos add jb aad xchg pop scas cltd cmp cmp sub pop ss je ret adc push call cld xchg ret pop test (bad) lahf inc out cmpl mov in cmp add dec cmp adc push (bad) out mov enter ljmp pop mov and xlat stc add sarl dec lods cmp mov add push outsl cmp xchg mov mov pop pop jb leave pushf add sbb pop daa rol movsb int3 or (bad) nop sahf and fmulp nop fstpl rcrb pusha add jnp dec or mov rcrl enter mov data16 mov mov lods dec das je sti add add ds movb pushl (bad) sbb add jae pop jbe xchg out or inc out std clc jle sbb ret cmp in rol mov add loop pop pop mov (bad) xchg insb loopne inc inc and shr inc lahf mov pop add shrb hlt nop add ret inc loope push sbb mov xchg xchg jecxz add jne das cmc jmp sub and pop (bad) aam add mov pop sub gs in mov test jecxz je clc push shlb test sub mov pop fsubs int adcb les mov or xor mov mov push sub adc add lret (bad) inc adc add lds arpl jge insl enter xchg pusha nop pusha inc rcrl mov pusha arpl xchg ret and into cwtl mov mov add sbb add xchg fsub sarl js sub xchg or pop cmc mov int (bad) mov inc out add arpl out fsubs mov or orb fidivr push cltd and adc or lods cmp gs leave cmp loop clc sbb loopne xchg int3 jno aas aas mov jnp add mov rorb add (bad) fstl insb push xor dec cltd xchg sbb in clc icebp mov sbb and fimul sub (bad) cmp xor mov pop mov cmp push test clc and mov jge movsb clc dec cmp mov jae enter mov sub sub test and dec mov ret roll (bad) jbe dec dec push add imull jne jp imul dec add je mov lret lods mov add je ret mov pop mov inc sbb in jl jecxz sbb ss sbbl and ja inc adc xor clc lea loope aad mov pusha and loopne dec aad popa inc in xor test xor test sarb add push rolb mov popl loope aad push mov lock fs sub add repnz lock sahf in add jg out or inc jmp inc xchg sub add aam lret jbe xchg jl nop sub aad ja xchg push mov nop or jecxz push mov and fmuls add lods jp and cmp dec imul pusha add mov lods sbb sahf popf dec in sbb mov xchg sbbl das add rorl lds xor mov shlb dec rorb fbld shr sub dec sub pop sbb mov rclb jns shl add pop scas sub pusha negl and aam (bad) mov pop cmc out mov mov cmp fldt stc test fild jbe int or add pusha pushf call and icebp loope lock inc sub sbb int scas cmpsl jecxz mov push je sub sub movsb je lret nop pop sbb pop sbb aam cmc loopne stc adc add and xor and mov shll push test dec adc bound enter fld1 pusha sbb cmp icebp adc out repz nop jno inc add mov xchg dec hlt adc (bad) xor or add sub cmp xor loopne mov rorl aaa (bad) int3 or add pop mov push and pusha or inc jmp xchg rcrb mov mov push dec lods inc pop add add rol outsl mov cmp sub xchg inc pop or dec add cmpsl xor aas fdiv (bad) jmp adc addb fnstenv scas adcb outsl sti lret int3 sbb ss fistp in das push xor xchg add or adc clc mov jp dec mov nop add jo ss xor add jno cmpsl (bad) aad or lahf and cmpsb and push aaa insb inc lods ljmp push dec movsb xor pop test add xchg test les adc je (bad) sub ret dec movl xchg xlat or addl cmpsb clc scas icebp push add test insl jle push mov mov mov jmp sbb add push push cmp mov cmp add cld sub movsb call sbb int3 add loope rolb fdivrs dec push dec cmp push lods outsb lock cmp (bad) lock mov xchg add pop mov pusha cmp clc roll cwtl adc in ja in fs mov adc add and push or in sbb xor fiadd inc lock jno (bad) mov add mov call iret sbb subl mov (bad) fstl cmc fidiv and aam (bad) mov sub inc inc fsts imul cwtl das outsl or popf mov je lret imul lea int and add je jl xor xchg imul fucomp adc push test mov pop shl out jecxz (bad) fadds in sbbb or push xchg je ss fstps adc add push push mov xchg inc sub fwait mov bound or rolb dec pop cmp scas out mov (bad) and push (bad) cmpsl mov loopne push mov sbb push sahf pushf repz inc pop shlb call push test je mov dec jl jl sbb and or popf push mov inc mov mov bound imul iret insl lods popf nop jno clc out adc and or cwtl (bad) movsl push out push cltd clc xor mov rorl mov push test or or cmp fwait int3 repnz mov fild pop (bad) pop xchg add inc (bad) jne xorl jno imul add push push mov mov std add rol jnp jg es test adc push xor pop xchg mov test leave lcall sbb sahf mov movsb add push or je je xor dec pop push xchg mov pushf mov sbb (bad) push int3 sbb and inc inc mov xor addr16 add sbb repz leave jno loopne incb adc fnstenv cltd push add stos test insb jne mov mov out insb insb or lock jnp xor push sbb inc cmp add mov call ljmp aas mov or adcb adc push aas cmp pop pop cwtl add cli inc mov xchg hlt add or jnp xchg or inc mov les (bad) sbb lods cld mov inc fisub dec add cwtl nop enter cmc or in sbb mov mov mov push lock movsb dec test xor and sub dec lock cmpsb dec add sbb cltd js push sbb lock leave mov pusha xor adc ljmp jnp xorl sbb adc mov cmpl out mov cmp inc mov xor pop cwtl xor mov les sahf loope cmp cmp mov xor inc (bad) add mov mov mov cmpsl loop or adc das scas arpl fistp and add ds mov add cmp pop jo add stc jmp xor add fimul sbb push inc mov adcb push jo ret jmp push (bad) incb cld mov mov fisub fisttpll movnti (bad) sbb imul stc fadd and push (bad) scas add sbb jb test and out jnp dec adc pusha jae push inc sbb incb cld sub xor jne jae push jb sub or mov dec pop sub and jg xor dec aaa jae xor xorl lods stos mov hlt add iret jo add leave stos dec loopne jns out ret popa dec ret or mov pop adc or adc xor add sub int add jno mov jne adc sti daa mov ret icebp add dec arpl and hlt adc fnstsw fsubrs add xchg mov fisttpl sub das mov orb pop shrb push rorb pop out add test arpl jl sbb popa mov pop sti xor negb (bad) and jne nop ret sti movsb mov scas sub mov jg test dec push xor ss jnp push lods lock nop cmpsb and (bad) xor sub mov lds mov imul mov inc push pop jge sbb jg xor push dec sub mov mov cmp jl in icebp out rorb or and test enter subl jae (bad) pusha out test push mov add int xchg mov xchg stos mov mov or mov add add push mov (bad) mov sar jo sub xor les shlb jl lea scas cmc push call les pusha jae mov int pop shrb aaa daa sub fsubl add adc inc ss adc rcll push ret or pop les dec enter inc pushf push fs testb mov dec lock loop xchg sub ret jl inc cltd lret dec jne add fs inc inc sbb push add (bad) mov xor les pusha fs out push sbb lret or ds movsl fldcw les mov pop mov jl mov rol or arpl inc mov nop dec cwtl nop popf fnop adc ss sbb repnz mov inc xchg imul adc rcrb add mov (bad) mulb mov dec sub add inc push adc fdivr jecxz mov mov pop dec lret ja sub rolb cmp bound sub js test fmul stc fisubr cld push (bad) js adc stc sub push sub pushf (bad) ficomp pusha pop sub pop cmp push push xchg loop pop in inc add and add lcall pushf stc xor jno movsb xchg cmpsl addl mov add fs mov aad jo jle and adc loopne inc sub scas or and movsl fisub and mov cmp xchg cmp add jmp add sbb add cmp dec adc fdivp xor dec mov and add or adc and js add mov (bad) insl movsb xchg call shl jecxz push cmp lret xchg dec icebp cld mov sbbl mov sub xor sub dec xchg pop sub pop lods add dec fisubr std enter fs scas mov mov js in notl cs arpl mov daa xor mov aas imul add adc mov enter dec pop push enter add es out inc xchg cmpsb cmp je add jle add lret lods int ja add mov ret and xchg add fsub xor or sahf (bad) inc scas and dec mov inc fdivrl inc or jle jne push sbb lods leave sub mov aaa shlb inc aam out and pop sti or and cmp inc mov (bad) hlt movsb inc (bad) xor rcl mov cmp sub xor pop int3 clc push and sub pop xor xchg in mov popf jno stos xor aad sar les add clc test and out insb xchg fldt fdivl mov pop popa and and fild ljmp cmp rol les lret dec adc sub andl loopne mov mov and ror out dec call sbb jns iret adc outsl adc and shrl add clc cli or fldl aam lret add push sbb cmp pop mov xchg aas jne inc mov push or push cmp orb cmpsl lahf into and subb xlat add jno andb and fwait mov or call dec sub cmp xlat popa mov xor jne push popf pop adc sbb (bad) out in nop roll mov pop inc stc les jae sbb (bad) xor ja jbe add (bad) fisub pop jecxz cmpsl jle femms sub mov cmp cmpsl or mov dec pop in sub pop mov xchg fsts call add mov inc or dec fnstenv dec xchg fwait roll dec fdivs or add adc test lret scas add mov insb pusha cmp jne push jge jl inc and popa cwtl shll rcrl mov and popa pop sbb push add (bad) adc ret jns xor sub xchg cltd movsb cld nop das into xor xchg sub ds call xor mov imul push fsubs push mov rorb xchg sub (bad) loopne cwtl pop call pop pop dec lock ds sbb mov mov or rclb or in mov adc aas loopw xor push adc mov cmp bswap cli jo imul iret mov jo inc shlb mov inc int3 push add fsubs mov and js inc sbb cwtl and (bad) mov hlt pusha (bad) enter mov sbbb xor or int jecxz imul lahf sbb mov fidivr and enter outsb lods mov push xchg rorb out dec repz sbb cs add mov nop dec add popa out adc cmpl adc push jnp dec jmp test aaa iret subb roll add lea cwtl pop xchg les mov inc mov cmpb mov mov add sub stc mov out fmuls pop cmp add jae (bad) inc xor and mov bound sbb add out xlat cwtl xchg push inc and push mov stos mov jns arpl ret js les jmp mov push xor dec cs lods or add pop pop out xor stos (bad) mov dec adc lock inc into mov loopne les hlt xor std lret in dec bound pop insl sahf adc popa mov dec sub nop xchg dec mov int test shlb int3 lds (bad) and and dec insb sahf mov add cmp mov pusha inc rcrb and jne mov in out mov xor sub xor shl das adcl sbb fiadd call pop push loopne sub and dec mov cltd pop movsb xor adc sbb nop mov addr16 mov jbe or call mov inc add xor add (bad) ss aad push or mov addr16 repz sbb jecxz in jbe fs or leave les lock loop pmuludq jae pop pop outsl ret push lret sbb les jl leave cmp cmp ds ss or and fwait cmpsl repz and int xor add dec dec test and add jno xor out idivb aam jo adc jl jl insb and adc dec sbb ljmp jno sub xchg jg xor in xchg fildl cmp sbbl xchg js insl nop mov dec mov mov adc jecxz out pop and push jge std dec inc sub push mov cmp cmc adc jae mov clc subb jmp push mov cmp popf adc cmp hlt jns adc mov mov mov mov or push hlt lods inc inc leave jmp les lods test aas fstps les adc arpl js inc add enter bound sub xchg sub fsubrs or iret adc les clc or adc or rorb enter loopne insb mov xorb in xchg test push push bound dec sahf inc pushf xor rcrb mov sbb sbb addr16 add lock bound xchg aas addl xchg iret xchg nop mov nop divb stos insb mov testl jge sbb mov ds out pop movsb (bad) popf mov cmp jo mov xchg sub pusha pavgw adc xor leave push and adc xchg outsl mov sub sbb addr16 jecxz dec imul insl inc and cmp mov xchg adc enter sahf add loopne cmp stc adc mov mov cmc movb lods aam pop mov push cltd push test in mov cmpsb imul inc nop bound adc dec or pop xorl addb inc jbe cmc add mov enter or aam push mov repz (bad) cltd pop outsl pop cmp gs int3 add sbb jp popa or fadds push mulb push shlb daa call jno sub xchg cmp shrl pushf lods mov test dec cmc and leave (bad) repnz adc (bad) loopne push and loopne pushf xor or jbe (bad) inc std rorb add push add jns rorl addb push sub mov cmp loop or sti inc addr16 (bad) mov cmp xchg pop dec jo js cmp lock add push sub add cld aam shrl hlt or orl xor mov or cmp shrl push data16 xor rcrl dec aaa andb dec cmp sbb or aam mov push xchg xchg push mov aam dec cmp mov stos test shl (bad) mov sbb icebp nop/reserved pop loopne inc pop and mov call mov and dec leave pop fnsave xchg gs pushf fdivs lcall push (bad) (bad) icebp add (bad) dec aam in or inc addr16 sbb loopne adc cld nop mov sbb push sbb (bad) cmp push and adc test mov cld or or and test cltd stc mov inc mov out pop out iret mov test mov mov sarb bnd adc sub adc ja imul inc add (bad) mov xchg clc cmpsl (bad) push mov inc fsin cmpl loop dec dec add cmp and adc les (bad) loopne jo adc add or negl inc es popf pop sub fmulp mov test into imul mov push add inc pop (bad) sti sub sarl push sub mov add mov aas xchg mov sub sbbb adc leave (bad) cwtl lock add push nop jl adc sub add dec sub mov daa clc push clc adc insl and xchg pop adc pop rolb sbb pop (bad) int push xor xchg adc rclb push into ds clc fiadd pop cmp jl lods cmpsb clc iret sub mov inc lea adc push inc (bad) jae add jbe jmp push dec pop stc xchg or mov inc sub mov inc int3 push lret scas inc (bad) jl (bad) push dec les pop add mov stos cmp add ljmp sbb sub cmpl pushf adc cmpsl popl insb or inc push imul repz stos jp shlb rolb add in daa js lock lods (bad) popf sub mov xor adc leave add xorl push cwtl out xor call es add icebp jo add gs jp mov repnz cmp lods std xchg push sbbl dec inc loopne pop add icebp int inc addb push lds cli repz pop jo shlb xchg shr push push lods or sub push nop mov int3 mov adc push icebp adc (bad) cmc outsb xchg mov (bad) or mov add movsb scas outsb jge cmpsl mov and cmp mov push push mov cmp add arpl jb sub mov mov ret outsb lahf push push dec xor or repz loopne stc js xchg add fwait inc fcompl mov data16 push clc pop add mov and cltd push xor leave mov adc or js in (bad) repz insb hlt inc mov adc jl shlb pop icebp aas inc cmp xor call aaa add xchg sub push pop mov sub or mov sbb dec shlb aam jp js xor jns jle and fcmovu pop push lret lock mov jp pushf sub xchg mov sub sti add fidivl test jle dec pushf lods mov lods mov insb lock add fild push push jne dec (bad) xor gs shrb mov jp sbb (bad) nop adc cmp inc inc jmp mov (bad) jb add and pop test add inc repnz inc or push stos pop cmpl jbe xlat xchg in mov and push add call cli push add sbb add rorl lods or bnd mov (bad) mov aam adc mov add sbb loopne add sbb data16 icebp pusha js insl xor aad push scas add mov pop inc sub dec pop add pop scas daa sbb add pop test call popa mov in (bad) bound jo clc adc and add cmp mov outsb inc dec or mov lcall cmp cmp and or add mov lods mov xchg add (bad) dec pop in repnz fild inc clc xor mov push stos int3 sub movsb xorl add mov jnp xchg ret mov nop fmuls add lock mov cmp scas xchg aaa mov add mov mov loope mov pop xchg rcl push cmpl negl jbe mov dec outsb lods test lock mov shlb pop mov outsl aaa sub loope and mov sbb cld movsb rcr out repz jl or xor jmp pop icebp movsl sahf mov sarb or iret test add dec push jl mov cmp add xor data16 ljmp in movsl (bad) push jle mov sub add pop mulb and fistp pop pop and push in sub imul and sbb mov fabs aad dec dec pop inc pusha into mov fwait push push add cmp add out and push jmp das aad sub sahf pusha pusha call popa rcrl mov pop pop jne ja cmp cmpl loopne mov rolb fsubs (bad) pusha fcomps and mov cmp and test push inc arpl sub push out cmp test loopne cmp stos add ljmp add sbb jnp adc inc or daa add sub adc push add push rclb mov fsts pop push sbb xor dec pop mov and pop out xlat jae test (bad) and (bad) notb loop orb mov push dec push mov add (bad) push outsb (bad) clc cs or cmp xchg (bad) out xor mov pop mov push in lock mov or out or inc or je cmp inc xchg call adc xchg hlt sub xchg dec sbb popf rcrb adc adc rorl addr16 (bad) and out or pusha test add jbe mov cmp imul mov add add sbb add adc pusha ljmp and es lret loop adc sti and cmp add pop cld icebp pusha outsl jmp call fistpll sbb pushf push in or int3 xor sbb add enter and test in aam sub loopne incb andb push adc sbb ds lret cmpsl (bad) sti aaa (bad) iret shrb icebp add sub mov int and xor pop movl mov sub (bad) cwtl inc jbe add mov pop popa inc sbb cmp rcr push dec and ret and or mov add int3 mov cwtl xor mov cmp popf add movsl push sub dec jle add and sub jo or dec movsb (bad) mov pop mov lret ret mov out jns,pn adc push mov pusha cmp xchg fldl in and push insb mov lds or cwtl insb xor ret divl or xchg js lret mov jo and loop jg arpl xchg leave dec adc aad mov or aas ljmp addb add and repnz pop out pop cmp ss add das or out nop aam pop mov xchg dec ja jp push adc xor (bad) je adc adc add std jo jbe sbb adc (bad) mov (bad) insb test nop test loop add dec mov call (bad) and mov xchg test pusha int3 mov inc jns in add jle dec stos lahf mul pop sub adc dec or jbe pushf add pop scas or pop sbb xchg inc data16 fsubl test push push aam add and pushf cmpl pop and (bad) fdiv movsb jge sub repnz xchg nop (bad) lods out popf dec mov jo push and fnstenv add (bad) nop stc sub mov push inc lods jle inc clc or lock test add xor cmp fimul xchg pop mov popf out add jg cli aaa sub add and add jns std inc and jl addl and mov and xchg icebp jae rdpmc inc pop pop add imul pop and out and xchg add aas (bad) lret js std sbb or xor or aaa xor ret (bad) mov fs xchg mov sub out sub adc js and and push cltd sub (bad) mov (bad) js xchg rolb addr16 jl push dec add fbld jne jecxz and dec lret lcall mov and pop pop sbb add inc sbb in cmp imul sarb in (bad) dec add scas cmpsl pushf mov stos and add xchg inc test adc pop fdivs xor add mov inc xor js sahf inc or and pop js dec add test mov pop inc xor daa or cmpsl sub mov or out scas pop stos aam or popf fstps xor lock or insl sbb cwtl je mov lods pop add aas sub mov in (bad) enter jmp hlt popa xchg cs add cltd jecxz jns aam add test dec mov dec outsl (bad) sbb xor sbb mov jle fldenv stos aad push popf and icebp fildl or pop stos gs es inc or adc adcb dec cmp jne adc js adc adc movsb dec int3 cwtl pop xchg adc test jl sarl jg enter lock imul xor cmp ss adc hlt (bad) je add cmp lea subl add mov cmp jo sbb mov mov enter and mov in xchg and stc adc test aam insb dec push fs or inc push inc xor jo and pop or and dec test rorl inc pop pop iret dec push cmp add and out fsts xchg rclb lahf test fnstsw dec push movsb adcb jge pop mull sbb cs adc add cmp addr16 add add or mov xor notb imul push xor pop or bswap mov shrb mov cmp pop add sbb (bad) pop dec in sub mov mov icebp outsb (bad) icebp incl outsl cs push or leave or xchg mov dec and in add ss xchg pop mov cs mov add jns add mov lock and (bad) shufps sub cmp add aas ret push pop add test pushf lock ss push imul out and loopew ret and pop adc fildll inc adc sbb add jne jns imul xchg cld mov add les xchg loopne push inc outsl scas out or (bad) negb jne ss add jns cmpsb aad dec and movsl inc hlt push jge sbb imul push inc ret inc fldt xor sub adc bound insb outsb cmpb insl mov sub mov fst mov cmpb in gs test out lods add lss mov add mov rorb ja ret in cmp mov daa pop cmpl or xor jp pop loopne push loopne dec add icebp mov mov cmp mov in fcoml pop jnp sub and sbb pop enter int mov inc and inc or mov jno addb jb jae js (bad) fsubl orb jb cltd dec add test fnstsw push xor les dec pop or (bad) cld pop out adc scas add mov pushf add xchg push cmp or nop mov or inc lods jbe into cmc adc push pop movsb ret repz enter lock gs (bad) in and lods pop or out lds js xor cmpb shlb jnp push add hlt and js out mov mov dec and sub je push fs out ds (bad) out mov add insl lea xor xor add and cltd add lods sub cmp mov cmp dec call xor jbe mov addr16 lds test jmp les pop mov sub and roll call mov fldl mov je aaa add push pop jmp cs mov push jb mov add call sbb out repnz jnp sbb jmp push sub pop addl sti lock ja push (bad) mov iret or xchg dec push rolb addb fistpll lds leave push add stc cltd dec xor cli mov cmpsl pop sbbb frstor and add mov imul bound mov add lds scas cmp cmp pop cs mov mov fs sbb and push cmpsb enter jge out and add ds jg push cmp push and bound push fcmovb sub xor cltd pop add or sub or or sbb enter dec sbb and in add fnsave pop test jb stc or (bad) mov jle out jp add daa fs (bad) sarb into push jne sbb jmp mov or cmp xchg add and push mov jmp bswap lods adc cwtl repz lret jae mov outsl (bad) adc mov out mov pop or push imull xchg sbb mov adc movsb jo psllw int3 pop ficoml add fsubrs dec inc cwtl or mov lock jmpw fidivr aaa or sbb jl js inc les jo cltd push popf add mov or mov (bad) in lods test into mov push dec mov xor lahf or outsl pop es mov dec adc sbb mov and out or (bad) cmp jp out xchg pop xorb inc cmp adc add int3 (bad) mov pop lods and jne lds nop cmp lods add lock outsl fdivrl inc mov sbb push in push inc sahf mov cmp mov mov (bad) lods sahf sbb mov arpl je mov xchg nop lock inc adc xlat mov hlt push jl add nop xchg or sbb in jl cmpsl push add repz lock sahf add pop loop add stos dec cwtl mov into add ljmp lret mov and mov xor mov jp nop push js mov push sub addr16 loope (bad) test cld cmp sbb outsl pop mov popa mov bnd inc xorb scas adc test add hlt xchg sub mov push jno add int3 dec pushf or test mov ret xor aaa and insb loopew add mov mov pop cltd add inc add and mov lods cmc test in mov aam mov add pop jb das fsubrl and and pop add xchg xor push add jp clc pop inc inc push mov push cmp dec nop lock in mov aad add repz mov (bad) xor push and mov push push pusha (bad) sti adc dec add mov cmc or jmp call xor pop sbb or sub js les adc icebp and in add data16 nop lods jp add dec push jne shl cwtl inc add popa xchg idivb fstpl dec push ret daa test dec sarl sbb pop nop cmpsl xor xchg jp pop push sbb loop (bad) out (bad) or pop (bad) cmc xchg xor (bad) mov cmp add nop test mov or cltd mov add mov pop sbb ret pusha pop add push cmp push mov and xor jg mov cmp in ror add cmp lods std cmpsb xor xor and or add clc cmpl inc mov pop js rclb xchg int3 lock mov adc adc cwtl mov cmpsl shr mov lds push adcb (bad) hlt (bad) add (bad) aad jns leave lret push std or cltd enter xchg fcomip mov insb adc dec add repnz je js pushf pop adc int3 test mov jne pop mov add imul pop ss push adc cmp frstor pop addl mov jl orb inc add xchg out push jns cmp aam sbb inc incl test jb jns pop in adc pushf pop (bad) sbb xor pop cmp cmp aam and or fildll pop ret repz movsl lock jae jmp int (bad) daa ss lahf sub clc (bad) cmc stos xor ss (bad) mov loop dec sub add roll out jge outsl and repnz mov loope inc pop sub js jl inc cmp xor add into sbb lahf adc add push dec xchg int3 and stos and jg pusha (bad) mov out cs push or sbbb jecxz mov stos push (bad) xchg sub sarb mov jo orl mov imul daa mov jg jne imul data16 les xor icebp adc aam shrd and bound push sub pop hlt cmp xor sub push adc mov mov mov and mov cmp mov jecxz or shrl arpl nop outsl jns or or jbe mov and mov iret jb xor push mov jl adc xchg dec jmp int movsb stos orps push add jp xchg adc push out and xchg cmp or cwtl add les loop add mov scas mov imul faddl aam add out mov or add cmp push (bad) pop adc add add incb cltd pushf mov xor xchg cmp xor jns mov push aam xor or jbe enter or jle cld adc aas mov (bad) lock test and add shlb add jns and mov pop jns sbb lock in pusha xor dec push ja out pop xor mov call jle movsb adc cmp cwtl (bad) add inc mov int3 fsubrl add xchg notb jae scas cmp outsb xchg insb or jno str pop fsubrp cltd inc add pop rorl daa call mov (bad) xor xor mov fwait sub call mov test leave jo add add or loopne dec ret movsb int3 rolb pop sbbb bound inc add xor cmp arpl nop lds leave sbb lcall adc rorb inc mov addr16 ds sbb adc leave repz mov mov jne andb mov push and outsb (bad) mov or mov add gs cmpsb xchg mov mov call push out xor pop cmpl or test leave lods movsl dec pop jae xor dec das or mov pop add pushf add jb sub hlt test ret jno add dec (bad) jp inc pop roll sbb cmpl js xor daa inc in test movsb add iret pop add sub mov dec dec js scas js xchg cmp push mov or rolb popw mov sbb or test xor out shll mov add dec fisubrl test jbe add scas add lock inc popa mov add mov sub das cmp add dec mov pop ds adc cmp pushf add mull mov mov int3 nop add add jne xor jnp je inc sbb add call inc xor cmp test subb stos clc roll rcr mov add cmp jecxz dec pop sti popa lds or adc int3 fnstsw and xor jbe mov adc dec and arpl and sbb pop bswap mov adc sbb jle add sbb int3 add nop mov mov mov clc push aas imul mov mov sub push xor popf mov sti jbe in jns repz fmuls arpl orb xor clc push jp aas test push and inc sar loopne ja push lock xor mov lods mov mov add push inc add jle adc rdtsc add mov mov leave pop fistpll mov cltd mov aad ljmp jecxz in dec jb add xor cwtl mov pop in or aam or out push push add imul les xchg pop mov fidivrl sbb mov pusha push xor or es out add jbe scas add or mov les jmp aaa in add mov add sub pop push es insb add fistpll pop or add xchg pop repnz hlt ss enter js add jecxz mov sbb hlt jge cltd nop xorb pop mov jl cmp jbe add add xchg lea add pop push ficomp pop in test rolb insl mov pop mov inc cmp lods in sub xchg out inc or es out dec xchg and enter mov lods std and test pop xor sub or (bad) out add add loopne hlt add inc loopne mov cmpsl add xchg or lods push popf add and (bad) pusha shrb int3 hlt (bad) pushf dec sbb push sub mov lahf mov mov mov pop xchg jg add or stos pop dec push push (bad) lahf sbb inc jae xchg sarb jo imul push inc mov rclb orb xchg mov jbe add xchg jp sahf xchg int3 (bad) sarl addr16 ret dec les (bad) pop adc adc cmp add push dec sbb dec subl pusha fdivr das mov cmp aas cwtl adc cmp xlat ss xor movsl aaa imull and pop icebp mov push mov test repnz mov and pusha push fnstcw lds aaa scas cmp push push mov adc cmp stc cmp jo hlt jl sbb call mov add sub push jbe mov add (bad) dec jecxz cs cmpsb lcall stos ljmp out shrb mov aam mov and scas or jnp jae or adc test mov sub in andb xchg lret cmpsl mov mov add adc add sub fistl mov sub enter push lret movsl mov jb jge add xor sub or dec jne xorl test in xchg add daa mov (bad) icebp mov hlt and mov ja aas dec jo jl pop cmp push add dec out adc test xchg sbb neg add mov inc jg add push push inc mov imul jne mov jo fstp pop test jecxz loope subb icebp pcmpeqw mov lods mov cmp add jb lds cmc cmp sbb rcrl inc adc add jg aam popf add mov aad cwtl fnstsw pavgb pop mov push mov fld inc lods mov mov repz mov (bad) dec xor inc jns push mov pop add and mov dec sub pusha pop out xchg nop add dec pop mov daa xor ss xchg (bad) out mov push push aaa inc sub out cld int3 adc pop xchg adc jg rolb (bad) imul out add jbe pop mov mov dec add loop inc inc dec sub add mov pop push es les push xor icebp cmp pusha inc fstl test mov add mov pop pusha add or xchg ror fmull and lods stc push pushf addr16 inc mov add mov jg rcll mov stos adc into in nop cmp dec cmp popa push mov adc cs xchg jo clc loopne inc call inc mov mov mov (bad) mov loope loopne pop add mov adc xchg xor jp addr16 arpl sbb pop jmp mov mov pop add push cld pop rorb sbb sub ret lods shrl out and sub cmp insl jbe or fcomp adc int loop mov movsb mov adc add and jnp call add pop adc (bad) pop mov add and inc test pop adc popa pop xchg sub inc jno les mov scas jmp jae add dec cmp or push repnz mov mov add fnstsw push iret test js cmp pop adc rorb pop cwtl test and cld loopne inc mov xchg jbe xchg sbb xor clc mov and and dec int cltd inc and pop sbb mov inc cmp lcall addb or lahf or lret mov cmp in jmp jl es inc cmp das cs (bad) xor lret adc shlb adc xor int3 push es subb inc and js cmp (bad) push xor xor or mov add add shlb pop add test popf mov in xor adc mov sahf inc add lds (bad) fnstsw imul push and xor sbb (bad) js add insb push inc add xor push out mov cld icebp (bad) mov cwtl dec add pop inc cmp gs add and repnz fs dec add add sbb mov inc sbb lret in inc mov push xor and and rol cwtl inc or add dec pop leave loopne mov outsl dec pop fs push fmul cmp and sub (bad) nop mov jg popf cmp push cmpl mov cmp add xor shrb rcrl add into stos push add (bad) mov push icebp xchg shlb xchg push and aas sbb out (bad) mov jp add sbb cwtl push push fstpl pop loop,pt push arpl and cmp jge in sub inc clc orb mov add add pushf gs imul loopne sbb fs fistp add lret sti incb adc cmp sbb imul mov and addb dec rorb push out add add dec inc aam push or sub addl jg add pusha rcr call adc jmp add jecxz mov pop (bad) jns dec lahf adc add xor loope jge test xchg int sub clc jl lods mov iret mov pop lret pop add jg lds das call mov cmp pusha push in cmpsl inc movsl in add pop rcll or jns inc call push sub xor or pop inc cmp add es repnz dec icebp and xchg push aam ret mov xor xchg or test (bad) xchg xor dec js add push cmp jae (bad) repnz push lret int3 rcrl sarb int3 andl lret add lock add fdivrl push push add jmp sahf lret mov pop add in xchg xchg das sub cld add adc lods and mov mov add les jl mov push add xchg xchg in pop shlb movl scas sbb sbb mov add out push adc ljmp lea xchg push fwait test sbb shr out sbb rolb or xor fcoms add jno xor (bad) fs add adcl movsb sbb iret and in cli ss xchg add inc push or mov fwait (bad) nop push add mov mov enter add inc (bad) fwait shrb and mov cli mov pusha dec and jmp inc mov adc xlat cmove pop and jg xor cmc xchg dec (bad) loopne js rcrb add std int3 movsb push nop cmp mov mov mov cld dec xchg lock or sbb fnstcw nop add xchg add jb add stos test xchg (bad) mov sahf dec or and test daa movsl or push xchg cmp aad xchg inc mov outsb les xor pop inc cmpsl movsb mov jmp jg mov push pop loopne sbb pop dec and test aaa jns xchg inc pop shrb mov sarb setae daa (bad) mov push add fcoms lret add jmp inc hlt push sub push (bad) test in mov xchg mov add jne cmpsl mov fmuls xor andb dec sti jo (bad) pushf mov pop movswl in jo add cmp fs and cmp fiadd and inc xor call outsb push or mov mov add cmp sbb jecxz dec adc adc adc sub mov jb or pop mov add mull repz mov mov sbb sbb add cmpl wbinvd pop add repnz inc fcoms sbb inc add testb cmp jp in lret pusha sbb rorb and xor cmp test call std xchg and aam adc add add leave pop push cmpxchg stos jge jns adc fcmovb stos and aad add add cltd push mov adc pop inc mov insb xor pop imul add jle test loopne pop fdivs test lret fildl nop repz ss and (bad) shrb outsl add aas hlt dec iret movsb dec pop add cmp sbb push mov xchg push push add inc or cmp inc mov mov mov scas add pop dec lock dec insl mov cmp dec fwait cmp lock fmull inc add nop or pop push ja sub test add xor (bad) femms pop rorl repnz mov push arpl sarl or movsb pop out push cmp adc push sarb dec mov (bad) loop outsl and loopne clc mov pushf arpl (bad) sahf (bad) cwtl daa loopne and inc cmpsb bound mov jecxz xchg fistpl or xchg ds add inc stos or adc jnp or add in add jle jne xchg cli data16 add pusha sbb mov jl loop xor clc mov add int lahf mov les add push icebp sub dec movsb sbb mov adc cltd nop subb scas aam add lods mov idivb ret or les dec dec (bad) xor or or mov xchg movsl inc ret adc add in xchg xor out inc sbb xor subb pop mov mov adc add (bad) ficomp xorb mov jmp adc jnp sbb aam pop or shl js push imul push add pop insl arpl cs lock rolb fiadd in int3 mov loopne je sub dec and add adc addb inc jno mov fild lret adc dec sub cmp mov and mov mov loop lret adc xchg dec rorb ds andl xor sbbb mov dec add or fsubr nop addr16 rcr lcall sub xor dec or add xchg sub add rcll adc sub clc mov shrb add add mov jb adc rcll sub loope inc inc fisttpl sub std scas dec ss pop sbb and add stos bound int imul sbb jmp add xchg call and call sbb dec sahf cwtl shlb mov add (bad) jle sub xor outsl and dec mov loopne lret mov aas outsb jbe cwtl mov sub xor in jnp add mov mov pushw sub pop xchg les add test sub scas add call lds insb and and inc sbb mov pusha cwtl mov push or cli push mov adc mov or in and dec movb xchg out les cmp jns scas and xchg nop mov aad pop add addr16 add imul lds or fs add inc lret push faddl std sbb xchg ljmp fisttp ret shlb sub subb enter mov ja lret dec cmp leave and faddl imul add fwait adc dec subb xchg ret enter faddl cmpsl cld mov (bad) std loopne sbb and sarb push out cmp and pop mov lahf dec lds pusha icebp dec add inc dec push cltd xchg pushf shlb xchg or cs (bad) xchg popf sbb call push fimul push inc ret cmpsb and clc or push xor sub insb sbb movsb unpckhps das add mov and daa pop out pop inc pushf sbb loopne mov add inc in xor out pop or push mov or cli add adc lret lock add mov mov mov pusha mov adc adc inc pop inc push (bad) jnp and pop ljmp out inc xchg add imul and push jne andl popa mov inc icebp dec cli int3 add xchg push stos inc xor orb test imul mov mov fbstp push xchg aas dec movsl mov pop and ds (bad) and inc or in cmp adc sti mov add hlt (bad) xor add xor inc adc xor fist (bad) xor ds addl sbbb inc dec fwait add sarb and adc mov imul jns push sub ret mov sbb sarb sbb adc cwtl mov cltd test sbb pop sub jmp stc or xor out sbb cmpsb add inc and add aaa xchg add mov mov fcomip test or xchg loop mov ss and xchg les inc mov xchg xor aam inc lods add daa shrb daa (bad) jbe add and xchg xchg fwait popf popa arpl sbbl test sub subb push fsub add stos loope cmpl inc cmp cwtl fucomip push les inc aaa sbb add mov lea or in xor ds adc add int jge (bad) enter add dec jl mov dec scas and and add sbb out and je sbb mov pop add mov int testb pop loope mov inc mov mov add dec xchg inc mov push pop jno nop dec pop cmp outsb sbb jne (bad) push into in xor cltd jo cmp rolb mov fisttpl cmc data16 xor sahf xchg add repz dec insb inc jp mov adc push call or fdivs inc mov js sahf cmp xchg xor adc jae popf sbb int3 cmp je mov inc fbstp push or inc hlt inc in and int3 loope das dec mov sub pop jnp dec (bad) mov sar inc sbb cmp fsubl fwait push pop clc pop in aad jnp daa cmp ds loopne adc xchg sub lock dec insb dec adc or adc mov stc or cmp les push lods mov push push in pop cli and and out inc pop leave push pusha xor mov insl jae jg stos out add mov xor mov cmpsb inc (bad) push inc dec push add mov mov jne cld dec jns jno cmp inc xor sbb aas pop rcll add adc lods loopne add ljmp and xor or negl pusha push dec inc add fcomip orb sbb sub xchg mov mov add ffreep mov mov subb dec ffree and mov inc loope dec insb fnop mov cltd lock (bad) push into mov mov lret add bound xor aam xor push fisubr lods out arpl mov add (bad) pushf sbb mov pop lea rcrl pusha sub xchg mov adc aaa jecxz (bad) or in jg popf adc cmp and sub inc cltd xchg insl lds fdecstp mov jp inc dec fdivrl dec mov sub movb jo push or xor sub hlt mov and mov sbb or subb mov test es add fs clc or and inc ficompl cli add (bad) loopne inc inc push int stos adc dec push mov cmpsb inc out fdiv test xor jle push fisttp les xchg dec pushf cwtl dec nop and adc arpl into xchg dec ja nop aam push aaa push fs lock data16 jbe dec mov inc ljmp push and inc xchg movsb adc push or jge push (bad) add negb rcrl pop icebp in outsl lock cld inc add test or in pop cmp adcb push and xchg in out shrb mov sbb daa enter xor mov or adc xchg adc add lcall sbb out xor xchg int push mov bound cmp in (bad) mov dec out andb add lcall jns add and dec pop push add inc pop test xor and sub fwait les loop add ret cmp (bad) dec test xchg (bad) icebp adc adc dec pop xor ds pop xorl notl pop out mov aaa dec ds mov rcrb add inc xor adc mov xchg enter or sbb (bad) repz sub push xor sahf les add sbb push sub mov push and sub push adc cmp and sti add push movsl dec stc call or hlt jno mov sbb iret xchg add xchg sub dec adc addl pop insb hlt add jp pop hlt in dec xor (bad) push test mov movsl mov add xor or xchg rclb outsb cmp dec ret adc popa rolb fbstp and add mov add aas jge mov adc mov xor je or mov add mov ss rorb add cmc dec test adc add sbb lahf adc push add lods mov loop sub ss (bad) cs sub fistp lock mov je leave xor add push inc cs shlb repz cmp mov enter lret ja nop movsb inc mov mov lret ljmp xchg mov je add inc aaa inc cmp mov stos jb dec fnop hlt cld add in cmp cmpsb mov fistp xor pushf mov jnp add mov mov adcl xchg add or icebp mov std jg dec cld jnp fwait inc jno sbb movsl arpl adc or pop iret aas ja test in inc ds pop pop rorb clc pop add and (bad) cmc jnp add inc les adc add cmp mov rolb or in push cmp fiaddl (bad) out adc xchg insb jns mov lods out adc sti add sbb xor pop mov sarb or or sbb in inc mov mov call outsb pusha or jmp push push movsb cmp push pushf and adc inc cmp adcb push test pop fwait add lcall aas jp in inc mov sbb rcrb sub xchg lods shrb incb push cmp cmp data16 stos into add aas add out int roll jecxz cld pop iret jnp add add mov bound lahf stos shlb sub gs js adc je incb mov push jno push (bad) jbe dec lock es fdivrl outsb mov push or test or (bad) adcb stos add fsubrs pushf or les int3 jnp,pt pop pop dec xor mov mov adcb mov push add out ror mov cmp push sub popf or popa arpl cmp pushf or jnp add iret mov cwtl or lahf sub mov adc cltd or (bad) out push jne add pop dec in lock nop inc in xor je push add mov mov push adc orb add add add subl jo add jno inc xchg ss inc mov addr16 mov xor in pop pop sub sbb and inc mov sub (bad) mov sub lea test sub cmp mov lret arpl inc adcl nop or scas adc subl test sub addr16 test ret dec jnp add shrl xorb and fild fstpl ds js shrb lds insl add xchg inc push pop ret inc pushf loopne test scas enter popf inc adc or or pop orl or add push adc ret mov sarb pop push push lret nop fcomps sub add cmp pop nop in cmp adc push fbld mov lahf add inc cltd dec sbb push inc add push or or cmp lcall dec enter stos add and xlat push pop testl jl sbb fmul call mov sub das pop push hlt (bad) mov stos mov (bad) fadds cmpsb mov mov daa in andl cltd cmpsb int add mov mov sti mov sub sub faddl icebp jnp pushf push call ss (bad) int mov test inc mov pop fcmovb dec int3 pop cmpb mov les mov out jle cmpb jns jmp sub add and roll jl or test leave cmp fbstp inc enter or aam jno fsubs or cltd and jo dec fs lret (bad) je xor dec out sub sbb loop dec (bad) out inc lret pop mov inc lds jl outsb sbb adc lock dec (bad) iret fsubs jge call pop bound jmp and dec inc mov jp inc pushf push lahf into add inc lock cli jne mov mov orb add mov rolb xorb jo jg cs je outsb dec or dec add gs scas jno push dec rolb int3 lods leave aas insl stos adc xchg add pop mull jno ret mov pop arpl add jo add inc and pusha mov dec sub call sbb dec jl subb daa mov mov cltd and cli shrl cmp cmc dec call mov pop addr16 jnp mov mov or test cmp jo dec mov add xor jp cwtl adc movsb (bad) daa ret sub je add and repz push ja add out add stos cli icebp pop jo add stc repz or xor pop insl adc (bad) aas fistpl (bad) mov jo push int3 add jne add add sub add adc add and add add add add add addb add add add add add add add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add cltd add add add add add mov add add or add and mov add pop lock add add add add push jp add add add add add add imul add add add push pop add aam add in add or add add add add add (bad) incl add incl add jecxz add movl add pop add clc aas add cld aas add clc pop add icebp popl add movl add incl add incl add add add add add add add add add add rolb add jmp jns ljmp pavgb sub fild cs fadds sub xlat add sbb add outsb add mov pop inc mov inc sub add out cmp int3 add add add add incl add incl add incl add pop add fcomip add fcomip add fdivp add fdivp add fdivs add fdivp add fdivp add fcomip add fcomip add rolb add incl add incl add or or add or add add add add or add add data16 and dec inc inc push js in popf jns sbb popf lcall fnsave es and (bad) add inc mov and mov pop xlat or leave adc js clc jns mov jecxz loop pop test ljmp pop fstl mov xchg adc loope nop test ja out (bad) out idivl xor aad aad jge jge push je jne jnp mov (bad) iret pop add adc dec push push mov sbb scas div insb jbe lods lds rcll or jmp or and add inc mov inc hlt inc inc hlt inc mov and (bad) push pop sub push rcr mov cmpsl addr16 fcompl cwtl insb cli fdivl add mov xor rolb loopne sarb jle mov (bad) sub popf aas add pop pop ljmp push imul test mov add repnz xchg mov add lcall push add bound addb movsl fbstp push fisttp sbb mov xadd mov xchg lods add je mov push lock xchg fldl jo mov jge ja xlat xlat lahf push xchg or adc dec fnstenv sub xchg (bad) cli iret inc xchg insl mov mov daa scas pop cmp sub shr hlt pop out out mov aam lods push dec out (bad) lods jmp fisubrl inc lret add loop add xor add dec gs scas outsl and inc dec xor mov out xchg int insb xlat (bad) mov mov sbb push sub lods lock jbe or add into mov pushf in cmc arpl push jb fdiv cmp add mov mov test jg and andb cwtl fadds mov mov sub jns movsl outsl jmp stos xchg add add int3 movsl ljmp or out test cmp jae out imul pop xchg jle pop subb mov jo or mov jecxz mov xor add test flds and (bad) dec je stos aam stos jb (bad) call xor pop pushf push inc lahf jno xchg and pop xor pop out xlat jg sbb movsl mov in js pop xlat inc jl loop xor inc dec xor push aam pusha and add mov movl scas mov xor jle out jbe sub mov mov xor pop fist (bad) flds push clc fild out fidivr clc (bad) xchg or add roll xchg sub push and arpl jge cmp add jmp out cmc add push addr16 (bad) mov mov insb cmp jns test adcb jnp inc jp clc stos add xchg rclb xlat imull or es push aaa (bad) leave jmp fisub push into lcall mov mov dec add punpcklbw je mov push xchg push test fisttpll je sbb push xorb mov das jmp stc mov adc cltd mov in aad insl sub mov jmp add in cmc dec bound or jae push add in ss sbb lret cmp pusha or bnd ret fcmovne out or adc je xor (bad) loop add dec sahf mov dec mov jb push inc es std adc dec mov mov je andl sub add mov iret jmp stc xlat das popf fisttp (bad) mov cltd icebp stos adc dec aad cmp pop add fwait aad repz jp jb aas sbb (bad) cltd adc movl push mov out and fwait in add dec xchg dec sbb into sbb int3 xchg jmp push mov xorb xchg into aas out notl inc adc cwtl or test cmc aam into (bad) fldenv mov cmp mov xor mov adc (bad) jno add (bad) and stos bound aaa and cmc cmp mov inc (bad) sbb jp mov jne das sub fimull adc mov dec sub hlt inc ret stos iret jno or loopne cmp jmp dec mov fnstsw cmp mov (bad) sub jg stc shrl dec mov pop movsl arpl ljmp ljmp repz iret insl jg inc push aad inc arpl jl or or shrb mov fcomps xchg dec sarl fidivr mov jge insl outsl add fidivl jp push cmp in jge pushw (bad) dec push and or bound xchg iret lods pop clc or fnclex shl push cmpsb cwtl xor movsl pop inc pop cs pop or mov jecxz bound iret aas adc or test stc aas jnp ret movsb insb scas cs xor pushf stos sub pop fildll pop pop inc pop cwtl ss push push shrb rcll fcmovnu pushl jg mov out das add outsb cld pop cwtl popl mov nop pusha sub fbld aas aas mov jecxz pop push pop jno div mov test movsl and add rcll (bad) mov push pop cltd je les jecxz ljmp jne (bad) mov sbb (bad) sub jne,pn jg (bad) jg push fs pop mov mov or pop jmp jg jns dec mov add test jnp sub std and pop rcll lea clc repz stos push lods xor sbb out mov lods fstpt push mov pop test pop add cmp dec ljmp cli sbb andb cwtl enter inc pop mov pop pushl clc xlat lea mov sbbl xorb push inc stos or and or xchg mov sub cmp xor mov add fnsave adc sub in cmp pushf mov xchg call out jo lahf mov jmp push inc mov cli cli (bad) push and or mov addl jg addb gs stos mov cmp ret aaa add ds inc add jmp jg imul jne add add es xchg add inc (bad) or movsl ja mov jb xor in jle rolb cld jae push cmc mov ja adc stc int mov (bad) xor add rcrb shlb adc xor mov arpl pop leave les test je rcr mov mov pop jb jp mov dec jbe or mov into out movsl aas fldl mov insl sub and pop pop (bad) jne push call add repz scas xor cmc pushf icebp add (bad) sub inc rol xchg pushf mov mov fcompl lret sti jmp adc fst push aam lds mov sbb pop cmc stc jb add mov mov (bad) or and sti cmc aas pop sub adc sbb out mov in pop jo (bad) hlt leave adc dec pusha mov andl insl jmp dec into repz (bad) cmp (bad) cmpsb mov cmp rcll aam lret icebp inc aam mov pop push push (bad) lret data16 mov (bad) mov pop fdivrs push push popa lahf ss scas xchg add inc (bad) cltd nop add or loopne cld (bad) pop jne xor sbb pinsrw es xor jp (bad) hlt xor add add xor ds cmp jne jae ljmp out pop add xchg enter fistpl inc xchg jl (bad) sti pop sub xlat aaa stos ds lret pop add add fistpll outsl mov into out inc xor inc dec xor add out xor scas inc cmp daa popf or in ja or ret mov push or inc fistpll imul imul je add and mov out aaa pusha aas es xor out std aas mov add iret stc cmp jbe in pop add fistpll dec lahf insl jne fs std lret jg addr16 outsb pop (bad) mull xchg add inc (bad) sbb (bad) stc mov loop or (bad) push jmp fcmovnbe bound and ret fwait stos sbb out jnp xadd ljmp push mov rorb xchg repz je icebp add fst out xchg pop jle addb jbe,pt je add pop scas outsl stc cmc pop pop add faddl lock rcr pushf mov add rcll sub cld push sub movsb out push aam dec test and xchg add jp cmp pop sahf jnp inc std out call aaa cwtl fimul sbb jl aaa add es lret aad push popa sub pop add cmc sub xor mov movsb stc or cld cmp mov add roll lds decl mov mov pop ret xchg pop or pop add inc imul decl (bad) sbb repz jle xchg cmp fisttp decb push xor jno pop std in in push ss movsb pop mov adc pop rcrl aaa add out pop imul xchg sub pop addr16 or adc int3 push repnz sub add negb mov ds (bad) fnstcw out adc iret sub rclb loopne movsl cmp dec shl pop loopne push les mov mov jle cld jae mov int xor ja or mov outsl (bad) mov xor (bad) and adc inc sbb inc movsl jl fisub outsl mov jecxz test aas dec jns sub ljmp mov jne sar js out pushf adc inc les iret push out mov loope mov ja movsb mov aas (bad) jmp scas sub jle aas xchg andl pusha dec into add andb test pop mov pop aas incb (bad) (bad) xchg adc push cmp and xlat and out (bad) les lret popl dec pop mov scas add into add push addr16 xor jg cmp rorb iret add insl ret (bad) cmpsl dec cmp pusha dec into add pop push js xor dec in into mov xor outsl enter call cli aam mov stc (bad) jbe imull lock call push xor sbb adc fimul push sti sub cli mov fs jnp jle xor inc dec xor pop sbb mov adc or and (bad) dec cmp xor testl or scas fstl fwait repz out (bad) mov fcom add sti hlt aaa add xlat dec add cld pop jmp scas iret dec mov jae aad das leave add or or jmp sbb arpl insl aaa fldenv out int3 xlat stos into mov arpl rorl in fiadd jbe push out stc dec (bad) push outsl mov popf mov (bad) xor push xchg or (bad) std sar add cld jbe pushf insl dec in addr16 out pop mov mov int outsl add mov je push and or je loopne out add fstps js and lea fstpl fwait jnp mov into dec jae lahf jnp cld enter cs add gs sti scas push loopne aaa jle adcb arpl out pushf scas call or cmpb aaa cli out clc inc add (bad) sub testl or iret fldcw iret lahf shll and add repz jp ficomp jne mov mov pop or mov fildl inc stos pop ret mov mov pop neg push je push and or stos push stos stc (bad) xchg mov cld jmp xchg or mov cmp aam add mov xor jae cli lods push jle jmp push mov ljmp xchg jbe shll sub or mov pop add mov scas push mul dec sahf aad and repz cmp out ds cmp mov xchg fwait dec gs mov or jnp stos dec subb cmp add rcll decb lock jmp stc insl mov pop pop jno,pt cmp lret (bad) aas add into jbe cmp aad ficomp mov andb negb cli mov mov add xchg (bad) adc sbb and das jns sbb (bad) fsubs jns dec stc outsb push cmp jb xchg cli scas mov test push je loopne lahf pop arpl sub leave out stc inc jmp lahf aad inc pop (bad) pusha mov jecxz das mov lock mov mov mov jle inc jmp adc iret jmp fimul aam fwait mov pop sub jg mov jge int3 js imul out (bad) testl dec stos push stos fstpl out jns dec leave add enter js inc (bad) popf pushf into outsl jmp sti xchg fistl push cld cli push orb out sub dec xchg pop xchg aaa lods mov or mov mov pop push and repz pop add jmp (bad) out aaa pusha (bad) loope cmp push sbb push mov mov pop xor dec (bad) pop out sbb (bad) sub inc sbb jl cltd jle rorl (bad) mov inc pop xchg ja imul (bad) imul repz push jno aad test mov out xchg mov jo cli or stos test fidivl pop loope outsb xor stos mov movsb and test or dec std addb icebp or mov out cmp sbb rorl loopne aas sbb out pop imul add inc (bad) sub pop rclb push out dec jg fwait jecxz push dec je (bad) mov sar in lcall sbb pop sbb into inc jp aas std fmulp mov mov rclb mov pop in fistpll aaa rorb (bad) mov or imul mov in add sbb ror cld fidiv xchg sub out fistpll imul int push (bad) mov aas hlt addr16 cmp push into jbe jmp repz icebp inc repnz or cmp sub (bad) xor lea jmp popa lcall jbe in push lahf fwait xor stos aaa bound insl add cmpsl aas jecxz sarb aad cmp (bad) sub add rorl std test fwait movsl mov aaa je cld aaa push movsl add arpl cmc sbb jle mov shll aad repz pop negb mov sub test sbb add test sub pop scas jp pop clc jg cmp jle dec (bad) mov (bad) lods pop leave add rcll mov xchg in rcrb mov mov sbb mov stc cmc mov divb movsl gs inc iret sbb (bad) push cmpsl and cli push jp xlat adc push (bad) int3 insb sahf cmp int3 (bad) mov (bad) cli jae out mov adc stos out cld into push xchg mov outsl jnp out outsl nop or adc int3 push aaa pop mov (bad) pop test lea xor xchg ja arpl test hlt cwtl mov cli (bad) mov pop mov push sbb fdivrs mov fwait cmp stos push push std push aad pushf jbe sti repnz lret (bad) and sti inc push fwait int cmpsb (bad) and sub xchg in mov push inc dec iret data16 xchg add inc (bad) sub push pusha mov pop and adc cmpsl xchg in out jmp imulb fcomp jns (bad) cmp sarl or mov xor in insl mov lods push mov xchg fistpll mov dec out pop ljmp push aad pusha mov movl mov test xor push pushl repz cmp repz adc enter stos mov iret xor jp xchg movl push or add sahf movntps call outsb push push xlat test jge cltd pop inc iret and call jg ret xchg jp sbb xchg rclb jb jl idivb movsl xchg movhps pop bnd xchg dec adc inc adc int3 push je scas mov mov fistpl or pop lods lods lea sub mov jmp out cwtl xchg jl aam pop call push cmp jbe test int3 xchg xor int loop and gs jno add and xchg dec addr16 cmp ljmp daa fdivp sub jmp or add add pushf sub fidivl and cli push sti sar pop jl out mov ljmp mov jae mov lcall jb xchg push jecxz mov test fidivrl dec jmp sbb and jle cmp outsb push pop js sbb add imul (bad) jmp cmp div push popf fistpll scas jmp fidivr scas repz mov gs hlt jns shrb inc lds mov ljmp loop lahf push push test xlat dec xchg add adc xchg rorb and (bad) lcall jle stos sub jbe movsb mov jg pop imul in cld jns mov int3 popa cmp push and xlat aaa aad cmp ret mov aam stc sub xor and push sahf es aad adc jl inc lcall mov ljmp mov (bad) xor add or js dec mov call jg (bad) into cmp xor pop orb add jno xchg neg sti fistl jmp aam stc rorl sub xor jae int or mov mov test faddl rcr jp add push lcall push xor add push jns push lods xchg repz sub pop inc fdivs popf xchg (bad) (bad) pop cmc adc push cltd jns out sti and dec inc pusha push mov jne add xchg shr in test into push or mulb movsl (bad) popf dec mov mov xchg scas loop dec fwait dec cmpl test icebp pop inc and jg pushf or xchg cmc jmp cs and loopne xorb sbb stos dec sub lea outsb add or data16 mov jmp push lahf xchg pop cmp lret lods adc lods loope jne (bad) rolb xor out inc jge and push jo mov fstpt jns in push out sbb xchg fbstp cmp negl add pop jl xchg ds lods sahf aas inc movsl hlt cltd push pushf or cmp fbstp test std cld fsts (bad) call int cmp loope add call and aam cmp pop add jae ret hlt lds push push pusha xchg cltd stc notl xchg aam mov push (bad) mov mov pusha inc sti push aam stc jae jg jns or adc dec loope subb add pusha insb std icebp pop jno inc fmul imul or andb pop movsl (bad) aam stos mov into adc fdivrl into outsl cmp fmull jns jae iret jb cli mov xor inc dec xor sbb cmpsb inc pop mov dec loop aam cmp ret sub (bad) aaa call push xchg gs add push jmp scas push cli insb jge lods mov jle shl inc mov stos out jne push repz out xchg out sahf push pop inc xor inc dec xor stc sub inc jmp mov xchg (bad) dec aam imul pop push aas jo xlat xchg ficomp into add cmp sar mov sti arpl xor js push adc std sub stc sti pop jle and mov loope jmp das mov pop leave add roll adc inc xor outsb imul test xchg mov scas out in mov test add and repz jge,pt aas out sub mov ja iret and cli mov (bad) mov loope imul add test and lock mov rclb mov jg mov mov cmp sahf push inc call scas adc push pop fisttpl cmp push popf fbstp sahf aaa ljmp fbstp call add add stos xchg mov add pop add (bad) mov inc (bad) enter and int or or js xor iret shrl cmc imul lret cs aam push cmp imul cmpsl push das out int3 int sbb jb daa mov xor incb leave add rorl sbb xchg lds subb cltd aas hlt rcrb cwtl jle jns jge fcomps in mov cmp xadd (bad) stc cltd jp pusha pop inc pop aam jae cmc int repz sarb imul pop clc (bad) and pop into fisttp jb jnp jne jp ss mulb sbb ss popf pop pop dec inc aad mov pusha cli cltd out add out mov stc call add inc ret ljmp dec mov repz jle rclb mov fwait jmp ret popf repz (bad) xor xor jnp fistp sbb aaa cli iret mov inc adc dec pusha push loopne sbb xor test xchg mov pusha and fdiv mov xlat std rolb jl movl push (bad) sbb mov adc int in sub insb mov lcall fcomps xor daa push das out dec (bad) push pusha pop fnsave xchg mov jae cmc add add inc (bad) or cmc and ss jno test out pop mov addb or js jae cmp repz push xchg ficomp jg (bad) hlt (bad) lds push mov fwait (bad) dec lahf pop add mov pop ljmp mov loopne adcb cmp adc mov movl aad push lahf push xchg (bad) push ds daa add xchg stos sbb push mov jo loopne dec add (bad) aaa mov mov stc xor repz (bad) popf idivl mov popf fisttp xor in xchg add inc (bad) or push add mov sub pop das fdivrl add jle aad mov fidivrl mov push add sbb mov adcb stc adc xchg push pop lods lahf aas scas mov cwtl mov mov aaa iret push mov lret in cmpsb ror xchg pop outsl hlt jge push pop mov (bad) (bad) push loop out sub js add inc (bad) or insl subb mov mov jp scas jmp mov jno rclb repz pop std sahf lahf jmp add out aad xor inc mov into add mov lods ljmp (bad) out add xor pop jg pop sbb push imul lret add push dec add js sub xchg or adc dec call cmp mov jmp sti jp jle (bad) sti ss fdivp pop add movsb stos aam lret mov popa out add divb jbe std add lahf stos xchg repz cmp add sar add dec cltd xor ret lret neg pop dec je lods (bad) arpl decl pop cmp jg push ja cmp pusha dec sahf xchg outsb movsl fdivrl add int ljmp lcall rorb js add test sbbl add je sar push xchg mov rclb repz aas (bad) fdivl test test lods xchg repz push mov and mov cmp mov push sti cmpsl or jcxz and xchg add inc (bad) mov jp pop cmc addr16 cmp neg das mov sbb popf sbb jge add std mov mov mov fstl std pushl dec lea lea inc into lahf (bad) mov push cmp cmp out insl mov iret cmp std pop outsl fistpll mov jecxz push hlt dec push and or mov je push jo sbb fs ret adc fisttpll sar pop scas mov call insb push lods out int aam mov leave add lods mov inc enter mulb push ret ljmp in pushf or jno mov jg int push mov add or dec inc inc push hlt cmp jmp hlt hlt not sti imull cmp mov add inc (bad) mov jg icebp inc lods add push out cmp inc pop das sub mov nop mov jp jno imul pop (bad) or xchg pop (bad) pushf fisttp cwtl aad daa int iret jno pop jo push lahf add push decb inc xor inc dec xor or lods cmp jne int sti or test enter xlat pushf or ret jns cmpsb mov adc dec pop inc jmp loopne fwait add dec mov shrl fcmovbe pop andl mov cmpsb scas inc shll or adc dec xchg or sub add mov dec jge and or mov add inc stos (bad) pop arpl xchg pushf mov int mov xchg fistp cmpsb adc add sahf add pushf fistp cli sahf mov jl out in add cvtps2pi lock clc scas std pop push leave add roll cmc lahf mov jecxz push iret stc sub aam xchg dec cmp push (bad) cmp cmp dec in pop jno das mov cld jnp cmp or jp (bad) xlat stc out out sahf mov outsl imul jle loopne cmc fwait mov ja push leave add rcll and into outsl clc mov popf imul add mov mov push (bad) push (bad) aam mov dec mov (bad) jmp add mov jno pop jg out test jb mov xor out ljmp int fistp test xor lea fsubp xor rcl mov add int push stos add inc aam dec lods cmp mov dec cs or xchg pop push popf jg out jecxz cmp mov sti mov pop test push lahf cltd (bad) pop sub mov fistpll pop or cli (bad) fisttp stc push and imull or adc cmp (bad) cmp jnp add (bad) aas stos add cmpsl inc adc pop jge stc shll cmpsb jge scas stc mov jl xor gs insl out clc lods ljmp mov roll loope (bad) ljmp jle jp or subb pop pushf lds scas int loopne jg mov and dec or or mov add xor stc mov imul in movsb pop ljmp pop xor push lahf jle fild mov outsl call or mov ret out sti jg icebp xchg js sahf pop add outsl scas pop (bad) mov aad rcl mov hlt arpl sbb shrb cmp jg cwtl iret (bad) sti fucom jne and adc adc add mov repz jnp pop mov ret jl mov jg mov mov push popf push jae ficomp stos hlt fcmovnu rcrl mov cmp jg pusha mull lar jne fmulp aaa call lret sar (bad) popf sub mov mov jle pusha lds jnp lods pop cmp cld dec je int3 clc aaa and xor test arpl lock dec add test in ds or or ss rorl cmp (bad) push jecxz cmp sub out jmp shrl sbb stc int ret xchg add inc push jae loopne stos es pop sbb push fisttpll inc stos scas sarb movsl leave fsub stos jecxz cmc cli sbb jns mov xchg cmc ja lret (bad) repz out lret add mov and adc add scas mov mov cmp repz pop pop mov pop pop push xchg and mov test lcall sub xor pushf fbstp jne (bad) shlb (bad) sub add test mov out adcb mov (bad) sti popf mov fimul push iret (bad) sbb or push (bad) jle sahf mov xchg fisttpll aad (bad) inc aam ds loopne outsb sub mov arpl (bad) (bad) int3 fidivrl (bad) xchg mov jmp in imul cmp lcall or repnz xor jns enter sbb andb cwtl dec add add imul pushf or jge test ds out add mov add jle xlat stc pop ret or adc dec sbb add mov push mov push repz pop pop decl pusha pop int3 sbb pop rcrb stos movsl iret jno add and aas xchg push and dec xor insb pop pop cmp dec andb mov aad adc sub rcll lea inc or cmp in aaa fucom mov or aas add and or xchg in pop push into jns inc addr16 inc adcb les xor std push mov jle das cld mov loope xchg mov pop inc xor inc dec xor shlb mov dec push popa cmpl xor pop shl lods ljmp and or enter movsl aaa add jmp adc popf mov aad xchg jg jg popf fbld sbb add and lcall push sbb into nop pop rcll lea jae mov dec pop cmc jnp push pushf fbld sbb add and lcall or or cli mov ljmp iret out inc xor inc dec xor mov inc and mov pop add push sub sub inc cmc data16 test and dec push and or xchg mov inc mov imul add mov lods sahf inc sub adc cltd aad ret jnp push insb mov aad repz adc fdivp pop add daa scas mov out pop add mov pushf sub iret pop push leave daa gs stc or add (bad) out out xchg out aas out sub push cmp pushf sbb fisttp nop mov jnp jbe jae bound jge (bad) jne pop add aaa ss icebp fldt incb pusha mov nop fstp sub cmc lahf test add fdivrp test test icebp jg pop shrb fwait leave out pop lds cli jb adc push pop fidivr mov or dec xchg jae leave add rcll jecxz xchg push mov push xchg int3 cmp add ss and adc dec lds lahf jg test mov pushf fbld sbb cmpb jb fucomp fwait out in cld js out ret xlat scas sahf push shr cmp push sahf dec adc jno push xlat (bad) jne add fdivl jns (bad) ljmp xlat adc insl sbb or aam aas or jecxz inc hlt pop jae jmp mov pop jge cmp shrl ds jb add lods fwait push sub jae out cld jecxz in jle add add adc add mov mov imul xlat scas mov mov jg jb aaa lret pop add rorl sub andb subb jle das jne cld data16 iret mov xor inc dec xor cwtl mov lahf mov outsb pop jae pop inc push jmp cmc mov mov stos mov movsl jl pushf pop add (bad) sbb push rorb pop mov jg lock xor sbb (bad) std dec push and or out loop sub call push notl daa lahf mov inc in cli sbb jns cmp divb push fidiv pusha sub push sti addr16 in iret (bad) sbb cmp je outsl repz pop inc addr16 jecxz fild call loopne jmp movsl lods push add cmp inc mov into cmp in stos idiv xchg jle mov (bad) xor inc add (bad) fstl mov sti push mov add rcll icebp imul rclb out inc push cli outsb pop cmp inc stos in or jmp push lahf mov xchg inc lahf icebp rcll in lods test test mov fistpll add in (bad) dec iret (bad) test jp ss (bad) nop pusha stos xchg add jmp xchg mov jns insl pop jae sbb sbb repz cmp xchg and dec lcall (bad) and fdivs add (bad) cmp add aas xchg push pop sarb and or (bad) int3 pop lret jp ss aam sbb mov sbb cmpsl sahf jl xor mov sahf cmp inc mov xor test jg cmp adc push push xlat cli sub lods add (bad) in mov mov jg push test or add rcll cmpsl mov xor cld or pushf imul add xchg mov dec add pop jp movsb push sub push pusha cmp fwait sbb cmp (bad) push adc movsl ja jne sub repnz push jnp rol shr dec push hlt outsl pop clc leave scas jle inc leave cmc int movsl cmc dec push and or lea mov xlat mov cmc ljmp rorb add ss add xchg cltd xchg xchg lods pop pop lret sti stc sub aad daa sbb add jge or (bad) mov cmc dec push and or jge pop stos mov mov mov call adc add loop mov mov cmc dec push and or incl add dec push jl add add dec inc dec inc scas inc pusha (bad) sub add xor add pusha add add add add add add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add inc add add add inc add inc add inc inc push inc inc inc add inc add inc push inc inc inc add add add aad pop insb shll pop imul push insb aam pop insl (bad) mov xchg jp insb (bad) push push gs or add add inc add inc add inc inc push inc inc inc add inc add inc push inc inc inc add add add inc add inc or inc or inc add add add inc add inc inc or jl pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb (bad) negl into rcrl xchg pop imul pop insb fadds inc inc inc add inc or inc or inc add add add inc add inc inc or inc add add add add add inc add inc add add add inc add inc or inc inc or inc inc add add add adc push je push jecxz insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall iret lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall aad pop insb (bad) outsb pop insb (bad) adc add add inc add inc or inc inc or inc inc add add add inc add inc push inc inc inc or inc add add add inc add inc add inc inc add inc inc add inc add inc or inc inc or inc inc add aam pop insb aad pop insb (bad) fistp lcall lcall int pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad pop insb aam inc inc inc add inc or inc inc or inc inc add add add inc add inc add inc inc push inc inc inc add add add inc add inc or inc push inc inc inc add inc add inc or pusha lods sub insb sarl pop insb (bad) lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insl aad inc inc inc add inc or inc inc or inc inc add add add inc add inc add add add add add inc add inc inc push inc inc inc push inc inc inc add push pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall lcall jmp inc inc inc add inc or inc inc or inc inc add add add inc add inc add inc push inc inc inc push inc inc inc push inc inc inc add (bad) add aad pop insb aad pop insb aam pop imul pop imul pop insb aam pop insl (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall negl pop dec pop popl inc inc or inc inc or inc inc add add add inc add inc push inc inc inc push inc inc inc push pop insb aad pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall lcall (bad) lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb sar pop push lcall lcall lcall lcall negl pop inc inc inc add inc or inc inc or inc inc add add add inc add inc push pop gs negl aad pop insl (bad) lcall (bad) lcall aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insl (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall lcall negl dec inc inc inc add inc or inc inc or inc inc add add add add add inc add inc add and jmp imul pop insb sar pop insl aad pop insl (bad) lcall aad pop insb aad pop insb aam pop imul pop imul pop insb aam pop insl (bad) lcall lcall (bad) lcall lcall int3 call sar push (bad) call (bad) call (bad) lcall int pop imul pop imul pop imul pop insb aam pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall jmp inc inc inc add inc or inc inc or inc add add add inc add inc add inc inc add add add aad pop insb aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall lcall (bad) lcall lcall into lcall into lcall lcall jmp lret decl mov out rcl in (bad) fsubr dec shr pushl (bad) gs lcall enter into lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aam inc inc inc add inc or inc push inc inc inc add inc add inc add inc inc or inc add pop insl aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into jmp int3 ljmp hlt cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push repz ljmp mov lcall int3 lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall aad pop insb aad add add inc inc inc add inc add inc inc add add add inc add inc or mov loope insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall aad lea out push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call enter mov pop imul lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad add add inc inc inc add inc add add add add add inc add (bad) jbe imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb aad mov cli std (bad) std std std push cmc cmc push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc stc cld lcall pop mov pop push lcall lcall lcall lcall lcall lcall lcall int pop insb sar pop insb aad pop insb (bad) outsb pop outsl xlat add insb aam pop imul pop imul pop insb aad pop insl (bad) lcall aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pushf cmpsb in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc jmp out (bad) mov mov (bad) (bad) mov call mov lock stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa mov pop push lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall loope insb fadds pop imul pop insl (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb sar jnp aad lock idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc std pushl js lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad imul push hlt clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push hlt stc pushl sar gs imul pop insb aam pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop imul pop insb aad pop insb (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) jmp (bad) call aad push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) cli sti std call insl (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall lcall decl cmc clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec shr call lcall int pop imul pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop insb sar pop push lcall xchg inc inc inc add rorl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall aad lea (bad) (bad) stc stc stc push hlt hlt push idiv lcall insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar xchg sahf (bad) div stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld std incl addr16 lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push rcll mov add add inc inc inc add ret and insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad leave iret icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc inc lret pop insb int pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop outsb sar enter stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) in push arpl lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) lcall aad pop insb (bad) notl mov add add add iret inc pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall aad div cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push lcall lcall aad pop insb aad pop insb aad pop insb (bad) lcall lcall into lcall into lcall lcall lcall lcall lcall incl repz (bad) stc stc stc (bad) (bad) (bad) (bad) push hlt cli call mov lcall lcall into lcall into lcall lcall lcall lcall lcall lcall rolb inc add add add aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall aad pop insb aad pop imul ja aad std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsl (bad) lcall lcall int pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall jmp fdivr out cmc push hlt hlt (bad) stc stc stc (bad) (bad) (bad) (bad) ljmp sar imul pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall lcall push add add pop insb aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall aad pop insl (bad) lcall decl cmc cmc (bad) std std std (bad) (bad) (bad) (bad) call xlat in lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall (bad) (bad) fcomp cmc (bad) stc stc stc push hlt hlt (bad) stc stc stc incl imul pop insl aad pop insl (bad) lcall lcall into lcall into lcall lcall aad pop insl (bad) lcall jp add add add add mov (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) call cmc cmc push cmc cmc (bad) std std std dec iret call lcall lcall lcall lcall int pop insb sar pop insb aad pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insb aad rcl repz (bad) (bad) (bad) (bad) stc stc stc push hlt hlt incl imul pop insb aad pop insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insb aad pop insl (bad) xchg add add add add mov (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) decl std std push cmc cmc push cmc cmc call aad call sar insl aad pop insl aad pop insl aad pop insb sar pop push lcall lcall lcall lcall lcall (bad) lcall lcall into lcall into lcall lcall (bad) (bad) fcmovu cmc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc stc incl imul pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall mov add add inc add aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) (bad) jnp (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc (bad) (bad) in lcall lcall lcall (bad) lcall (bad) lcall aad pop insl sar imul ljmp ret jo call sar insl (bad) lcall lcall into lcall into ljmp fdivr out lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) lcall int3 lcall lcall aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall iret lcall lcall jl add add inc add shrb aad pop insb (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad popa jno (bad) stc stc std (bad) (bad) (bad) (bad) (bad) std std std push hlt hlt (bad) js mov lcall lcall (bad) lcall ljmp (bad) jmp idiv hlt hlt hlt (bad) stc stc stc (bad) in out idiv fs lcall (bad) lcall lcall lcall into decl std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc sti lcall vsubsd pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall lcall lcall lcall into push inc inc add inc add int3 inc pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad int repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std std inc lret push popa mov pop imul pop insl (bad) lcall (bad) js (bad) clc stc std (bad) stc stc stc push hlt hlt push repnz insl js lcall (bad) lcall (bad) lcall (bad) jmp (bad) call fsubr push cmc cmc (bad) std std std (bad) (bad) (bad) (bad) dec int lcall sar pop insl aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall lret inc inc add add add shll pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar xchg fwait jecxz cld std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti sti cld lcall pusha mov pop imul pop insl (bad) (bad) jl (bad) cli cli std (bad) (bad) (bad) (bad) (bad) stc stc stc (bad) out out icebp ljmp mov lcall (bad) lcall aad mov jmp push cmc cmc push cmc cmc (bad) sti sti cld decl aad pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall negl shll inc inc inc add add add or rcrl iret lcall into lcall lcall (bad) lcall lcall (bad) lcall aad pop insb sar pop imul popa jo (bad) (bad) idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc stc sti call pusha mov pop push (bad) jge fdivrp sti sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc idiv jo mov lcall aad mov std (bad) (bad) (bad) (bad) (bad) (bad) std std std push cmc cmc call aad lcall sar pop insb (bad) lcall lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall rcrl aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop push (bad) jg (bad) div cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld std jmp arpl sti sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cli cld pushl sar imul mov out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc cli (bad) jp sar pop imul pop insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb aad pop insl (bad) inc pop insl (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul sahf cmpsl loop cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstp out call (bad) jnp (bad) (bad) stc cli cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli cli std pushl lcall (bad) fstp out (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld (bad) lcall insl aam pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop imul pop insb fadds insl aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall lcall (bad) lcall lcall lcall int test cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out call mov push repnz (bad) std std std (bad) (bad) (bad) (bad) (bad) cli cli cld pushl jmp (bad) jmp jmp hlt (bad) stc stc stc (bad) cld cld (bad) ljmp insl (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall (bad) lcall aad pop insb sar pop push jecxz push jl inc inc inc add inc add add add jb insb (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall lcall aad pop insb sar pop push call icebp sti (bad) (bad) (bad) (bad) jmp out call sar xchg push icebp hlt push cmc cmc (bad) std std std (bad) stc stc cld pushl (bad) jno (bad) in out cli (bad) stc stc stc jmp out call insl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop push jb inc inc or inc add add add inc add inc add inc inc add imul pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul jo xlat inc enter fdiv lcall sar ja fdivr div sti push cmc cmc push cmc cmc push idiv pushl (bad) lcall (bad) (bad) fcmovnu idiv (bad) leave out pushl xlat lcall int pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall fistp adc inc inc add inc inc push inc inc inc add add add inc add inc or inc push pop insb aad pop insl (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall lcall (bad) lcall lcall lcall lcall int pop insb sar data16 lcall pushl (bad) div cld (bad) std std std push cmc cmc (bad) in in repnz lcall (bad) jmp fdivr pop insl (bad) lcall aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall lcall lcall into lcall into lcall lcall lcall add add add add inc inc inc add inc add add add add add inc add inc inc push dec pop xchg adc mov pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall jmp fdivr int3 (bad) repnz (bad) idiv fucom cmc inc lret ljmp insb aad pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall mov inc inc inc add inc add inc push inc inc inc push push mov insb aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) jmp xlat jmp xlat lcall aad pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into jmp pusha lods sub inc inc add add add inc add inc push inc inc inc push pop imul negl aad pop insl aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insb aad pop insl aad pop insl aad pop insb sar pop push lcall lcall lcall lcall aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insl aad pop insl aad pop insl aad pop insb sar pop push lcall lcall aad pop insl aad pop insl aad pop insb aad pop imul inc inc inc or inc inc or inc inc add add add inc add inc push inc inc inc push pop push push pop insb aad pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop push lcall lcall lcall (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insb aad add add inc inc inc add inc or inc inc or inc inc add add add add add inc add inc add inc add inc push inc dec pop adc int3 push pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall (bad) lcall aad pop insb sar pop imul pop imul pop insb aad pop insl (bad) add add add add add inc add inc or inc inc or inc add add add inc add inc add inc inc add inc add inc push inc inc inc push pop imul jmp insl aad pop insl aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insb aad pop insl aad pop insl aad pop insb sar pop push lcall lcall aad pop insl aad pop insl aad pop insl aad pop insb aad pop imul pop imul pop insb aad pop insl aad pop insl aad pop insl aad pop insl aad pop imul pop mov inc inc push inc inc inc add inc add inc or inc push inc inc inc add inc add inc add inc inc or inc add add add inc add inc push inc inc inc push push gs mov pop insl (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall (bad) lcall aad pop insl aad pop insb sar pop imul pop insb sar pop insl aad pop insb (bad) lcall (bad) lcall (bad) lcall lcall into lcall into lcall lcall (bad) lcall aad pop insb aad pop insb aam inc inc inc push inc inc inc push inc inc inc push inc inc inc add inc add inc add inc inc add add add inc add inc or inc or inc add add add inc add inc push inc inc inc push dec pop xchg adc push pop insb (bad) lcall lcall lcall into lcall into lcall lcall (bad) lcall lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insl (bad) lcall lcall lcall lcall into lcall into lcall loope insb aad pop imul add add inc inc inc add inc push inc inc inc push inc inc inc push inc inc inc add inc add inc add add add add add inc add inc or inc or inc add add add inc add inc push inc inc inc push inc inc inc push pop imul pop insb aad pop insb aad pop insl (bad) lcall lcall iret lcall iret lcall lcall aad pop insl (bad) lcall aad pop insb aad pop insb sar pop imul pop insb sar pop insb aad pop insb (bad) lcall (bad) lcall (bad) lcall loope push mov add add add inc add inc push inc inc inc push inc inc inc push inc inc inc add inc add inc or inc or inc add inc add inc add inc inc or inc add add add fadds insb aad pop insb aad pop insb aad pop imul pop imul pop insb aad pop insl (bad) lcall (bad) lcall lcall aad pop insb sar pop imul pop insb sar pop insl aad pop insb aad pop insl (bad) inc pop imul inc inc inc add inc or inc or inc add inc add inc add inc inc or inc add add add inc add inc add inc inc add inc inc add inc add inc add inc inc add add add or shll pop push inc pop imul pop insb aad pop insb (bad) mov mov aad pop insb aad pop imul pop push rorl add inc inc inc add inc add inc inc add inc inc add inc add inc add inc inc add add add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add add add inc add inc add inc add inc add inc add add add repz iret iret add stc icebp rolb movl add add cmp add adc add sahf add add js add cmp add addb add add loop add add add lock add pop add clc add add add add add add add add add add or add add add push add rolb add pop add rolb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add sldt loopne add add add lock add pop add clc add add inc add cld add add arpl add icebp add popl add add add addb push add ret rolb nopl add loop add popl add icebp rolb movl sti push add sub add and add inc add add add add add add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add add outsb fadds inc inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc or inc add add add add add inc add inc or mov push pop insb aad pop insb aam pop imul pop insb aam pop insl (bad) lcall repz insb aam pop push lahf pop imul pop insb (bad) or add add inc add inc or inc add add add add add inc add inc or inc add add add inc add inc add inc add inc or inc inc add add add push pop insb rorb pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall icebp pop insb (bad) mov push inc inc inc add inc or inc inc add add add add add inc add inc or inc add inc add inc push inc inc inc add add add add add inc add inc or imul pop insb aad pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall out pop insb aad inc inc dec add inc inc or inc inc add add add add add inc add inc add add add inc add inc or inc inc add add add aam pop imul pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov inc inc inc or inc inc add add add add add inc add inc add inc or pop cmpsl or mov pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov pop movsl or inc or inc inc add add add dec add imul lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall mov inc inc inc or inc inc add add add inc add inc add add add fs insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall pushl sar fwait mov aam stos mov lcall jns call ret lcall lret lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall bound inc add inc or inc add inc add inc push pop push aad pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall (bad) jnp sar aad in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) call xlat in pushl (bad) call ret lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall aad pop insb aam inc inc inc add inc add add add inc add leave xchg pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) jmp cli sti push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld push cmc cmc (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) cld cld std lcall fs insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall mov add add inc add add add (bad) or icebp pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld cld cld dec shr call test (bad) js fdivr xchg popf loop int3 shr (bad) cld cld cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call vsubsd lcall (bad) lcall (bad) lcall lcall into lcall icebp pop insb (bad) or add add add add pop pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) pushl fcos out lock cld cld cld (bad) std std (bad) lcall insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall call cli cld (bad) (bad) (bad) (bad) push idiv jmp mov lcall lcall (bad) lcall (bad) lcall lcall into lcall push add add inc inc inc add lahf pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) (bad) mov cld cld push cmc cmc jmp insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall jmp cld cld (bad) (bad) (bad) (bad) pushl lret imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lahf inc inc inc add inc add rcl pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall aam repz cld (bad) (bad) (bad) (bad) (bad) ljmp lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall aad in icebp (bad) cld cld cld push icebp clc call ret lcall lcall into lcall lcall (bad) lcall (bad) lcall roll inc add add add cmc pop imul pop insb aam pop insl (bad) lcall (bad) lcall pushl sar cld cld cld (bad) (bad) (bad) (bad) (bad) mov insb sar pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) (bad) mov cmc cmc (bad) cld cld cld ljmp (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall repz inc inc add add insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) (bad) jg (bad) cmc cmc cmc (bad) cld cld cld jmp insl aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) ljmp cld cld push cmc cmc pushl lret lcall (bad) lcall (bad) lcall lcall into lcall lcall lcall add insl xlat add insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) (bad) jnp (bad) cld cld cld push cmc cmc ljmp imul pop insl (bad) lcall lcall into lcall int pop push iret lcall lcall into lcall pushl (bad) (bad) (bad) cld cld cld pushl (bad) lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall add inc inc add cmc pop insl (bad) lcall (bad) lcall lcall into lcall jmp (bad) cld cld (bad) (bad) cld cld cld dec shl call ret lcall (bad) lcall (bad) incl shl call (bad) ljmp insl (bad) lcall lcall into (bad) (bad) cmc (bad) (bad) (bad) (bad) (bad) sti cld std lcall leave lcall into lcall lcall (bad) lcall (bad) lcall lcall (bad) repz inc inc add inc add rcl pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall call fdiv (bad) (bad) (bad) (bad) (bad) cld cld cld (bad) jnp sar push lcall (bad) jmp cld cld push cmc cmc call insl (bad) lcall (bad) decl cmc cmc (bad) cld cld cld call aad lcall lcall lcall into lcall lcall (bad) lcall (bad) lcall roll inc add add add lahf pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into decl (bad) (bad) (bad) (bad) (bad) (bad) out out idiv outsb jns lcall int3 jmp (bad) (bad) (bad) cld cld cld lcall insb aam jge fdivr hlt cmc sti (bad) cld cld cld push cmc cmc decl insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall popf inc inc inc add add add pop pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into inc int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cmc stc jmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jge push idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall push pop insb (bad) or aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall jmp sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp int3 jmp cld cld (bad) (bad) (bad) (bad) lcall xchg fdivrp cmc cmc cmc (bad) cld cld cld call fcomi jmp xlat lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into repz fs add inc add inc add lea (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall jmp iret (bad) mov std (bad) (bad) jge sar mov cmc cmc (bad) cld cld cld lcall xchg loope sti sti cld pushl jno lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lea inc or inc add inc add inc push pop lds pop insb (bad) out pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into pushl (bad) push cmpsb out cld cld cld push cmc cmc call js (bad) js fdivr pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall out pop insb (bad) push inc inc inc add inc add add add inc add inc or imul pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall pushl fdivr mov in pushl (bad) aam pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall shlb add add add add inc add inc add inc inc or insb shrb pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall movsl inc inc inc or inc inc add add add inc add jbe pop insb sarl pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) mov inc inc inc add inc or inc inc add add add inc add inc add inc add jbe pop insb shrb pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall lret pop movsl or add add add add inc add inc or inc add inc add inc push inc inc inc add add add add add inc add inc inc or imul pop insb (bad) out pop insl (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall lcall into lcall lcall out pop insb aad inc inc dec add inc inc or inc inc add add add add add inc add inc add add add inc add inc or inc inc add add add add add inc add inc or lds pop insb aad pop insb aad pop insb aam pop imul pop insb aam pop insl (bad) lcall (bad) lcall lcall into lcall lcall (bad) lcall (bad) lcall icebp pop imul sbb add add add add inc add inc or inc inc add add add add add inc add inc add inc push inc inc inc add inc add inc push inc inc inc add aad pop insb aad pop insb rcrl pop insb aam pop insl (bad) lcall aad pop insb aam pop imul pop insb aam pop insb aad pop insb (bad) or inc add inc push inc inc inc add inc add inc push inc inc inc add inc add inc add add add inc add inc add add add inc add inc add add insl xlat add add add inc add inc add add add inc add inc add add add inc add inc add add add add add jp mul add xor add cwtl add or add pop rolb add add add add addb add add add add add add add add add add add add add add addb add add add add add add cwtl add or add (bad) into inc add idivl add add add add add add add add add add inc inc inc add inc add add add inc add inc add inc inc add add add int pop imul inc pop insb (bad) inc pop imul push arpl add add add inc add inc add add add inc add inc add inc inc add add add inc add add add inc add inc or inc add add add mov pop pop insb aam pop insb aad pop insb aam pop imul pop insb aad pop insl aad pop insb (bad) repz imul pop insb aad pop imul or inc add add add inc add inc or inc add inc add inc add inc inc add inc add inc or lret cmp insb aad pop insb aam pop imul pop insb aad pop insl (bad) lcall lcall sar pop insb aad pop insb aad pop insb sar pop insb sar pop insb aad pop insb sarl inc inc inc or inc add add add inc add inc add add add inc push inc inc inc push pop imul pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall (bad) lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc dec or inc add add add inc add add add inc add inc push pop push outsb pop insb aad pop insb aad pop imul pop insb sar pop insb aad pop insb aam pop imul pop insb aam pop insb aad pop insb sar pop imul pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc inc or inc add add add inc add inc add cmp sti pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insl sar jge aam xchg popf aam xchg sahf xlat (bad) jnp into lcall (bad) lcall into lcall lcall aad pop insb sar pop insb sar pop insb aad pop insb sarl inc inc inc or inc add inc add orb aad pop insl aad pop insb sar pop insb sar pop insl aad pop insl aad mov repz (bad) (bad) (bad) (bad) std std std push div (bad) std std std jmp call int3 lcall enter aad pop insl aad pop insb sar pop insb sar pop insb aad pop push push inc inc inc add add add iret push pop imul pop insb aad pop insl aad pop insb sar pop insb sar cmpsb scas out std std (bad) push div jmp jmp lock leave out jmp in (bad) std std std (bad) std std (bad) lcall push aad pop insl aad pop insb sar pop insb sar pop insb (bad) push pop insb (bad) mov insb sar pop imul pop insb aad pop insl aad (bad) mov push idiv (bad) std std (bad) jmp outsb sar pop insb sar pop insl (bad) jmp aad mov cld std (bad) cld cld std (bad) jnp leave lcall sar pop insb aad pop insb aad pop insb sar pop imul add add push mov insb aad pop insb (bad) lcall lcall sar pop insb aad aam hlt (bad) stc stc stc ljmp insl aad pop insb aad pop imul pop insb sar pop insl aad pop insb aad lods mov (bad) std std std dec shr lcall lret lcall sar pop insb aad pop insl aad pop insb (bad) repz arpl sub imul pop insb aam pop insb aad pop insb sar arpl (bad) cld cld (bad) (bad) stc cli cld jmp int3 lcall lcall aad pop insb aad pop imul pop insb sar pop insb aad imul (bad) cli sti cld lcall enter sar pop imul pop insb aad pop insl aad pop imul pop insb aad pop insb aad pop imul pop insb aad pop insl (bad) pushl fcos div idiv out hlt lcall int pop insb sar pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insl (bad) (bad) call div ljmp int pop insl (bad) lcall lcall sar pop insb aad pop insb (bad) inc pop insb aad pop insl (bad) lcall lcall iret lcall pushl (bad) sti sti sti jmp call leave lcall aad pop insb sar arpl jmp lret lcall sar pop imul pusha outsl aam icebp repz (bad) std std std ljmp leave lcall lcall (bad) lcall lcall sar pop insb aad pop push cs insb aam pop insb aad pop insb aam pop imul pop insl aad icebp repnz (bad) sti sti sti (bad) jnp (bad) lcall ljmp fdivr hlt cmc clc push repz bound lcall incl sti sti (bad) out lock lcall iret lcall iret lcall lcall (bad) lcall lcall lret sub imul pop imul pop insb sar pop insl (bad) lcall lcall iret pushl (bad) (bad) jmp in jmp ljmp (bad) cld std (bad) push idiv jmp leave ljmp fcos ljmp ljmp insb aad pop insb aam pop imul pop insb aad pop insb aad pop push or add add mov imul pop insb sar pop insb aad pop insb aad fs jmp out (bad) (bad) (bad) (bad) jmp loop ljmp lret cld (bad) (bad) cld cld std jmp leave jmp in (bad) (bad) (bad) (bad) jmp out jmp sar pop insb sar pop insl aad pop insb aad pop imul pop insb aam add add inc inc inc add push pop insb aad pop imul pop insb sar pop insb aad pop insb aam outsl jge (bad) (bad) idiv repnz jmp int3 push cmc idiv cld cld std ljmp into push icebp idiv fcmovnu icebp pushl (bad) pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall (bad) pop inc inc inc add inc add xchg or rcrl lcall sar pop insb sar pop insl (bad) lcall jmp sar xchg mov xlat (bad) clc clc cli push hlt cmc jmp int cltd mov sar pop insb sar pop insl aad pop insb aad pop imul pop insb sar pop insb aad push gs add add add inc push pop push aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall aad lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insl aad pop insb aad pop imul pop imul add inc add add add inc add inc push pop push jb insb aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall lcall lcall sar pop insb aad pop insl aad pop insb sar pop insb sar pop insb aad pop insb aam inc inc inc or inc add add add inc add inc add inc add dec or int3 jb insb aad pop insb aad pop imul pop insb sar pop insl aad pop insb aam pop imul pop insb aad pop insl (bad) lcall lcall sar pop insb aad pop insl aad pop imul pop push outsb pop imul inc inc inc add inc or inc add inc add inc push inc inc inc add inc add inc push pop push aad pop insb aad pop imul pop insb sar pop insb (bad) lcall lcall iret lcall lcall (bad) lcall lcall sar pop insb aad pop insb aad inc inc inc push inc inc inc push inc inc inc add inc add inc add add add inc add inc inc push inc inc inc add inc add inc push dec pop xchg or push pop insb aad pop imul pop insb aam pop insl (bad) lcall lcall lcall repz insb aad pop imul dec push orb inc add inc add inc push inc inc inc add add add inc add inc add add add add add inc add inc add add add or int pop insb aad pop insb aad pop insb shrl mov add add add add inc add inc add add add add add inc add inc add add add sbbl add add add add add add addb add add add add add add add add add or xor push add sbbl add add add add add add add add inc inc inc add inc add inc add inc add imul pop insb rcrl sarb insb aad pop imul pop imul inc inc inc add inc add inc add inc add inc inc add inc add inc add inc add gs movsl pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop mov inc inc add inc inc add inc add inc inc add inc or xor jmp pop insb aad pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop imul add inc inc add inc add rcrl pop imul pop insb aad pop insb sar pop insb sar bound (bad) jle sar jg aad pop insl lret insb sar pop insb aad pop imul pop insb aad pop mov inc inc add inc add cmpsl pop insb aad pop imul pop insb aad popf cmpsb loope icebp repnz (bad) (bad) (bad) (bad) stc stc stc push hlt stc lcall push lcall lcall sar pop insb aad inc inc inc add sbb sti pop insb sar pop insb aad xchg lahf (bad) std std (bad) pushl jg pushl (bad) scas mov (bad) std std (bad) call insb sar pop insb aad pop imul pop imul pop imul pop insb aad pop insb sar pop insb sar ljmp lcall lcall lcall lcall (bad) mov jmp int3 lcall lcall lcall rcrb aad pop imul pop insb aad push (bad) (bad) sti sti sti incl imul pop insb aad pop insb sar pop insb sar mov jmp iret lcall lcall lcall jl insb aad pop insb aad pop imul data16 (bad) cli cli sti decl insb aad (bad) mov incl insb sar xchg popf loope std std (bad) jmp int3 lcall lcall lcall jle imul pop insb sar pop insb aad pop imul xlat fcomi (bad) (bad) in jmp lret call aad dec int3 in gs (bad) fucom repz (bad) in lcall lcall sar pop insb aad pop insb rcrl (bad) sbb sti pop insb sar pop insb aad js fdivr hlt cmc cld pushl aam dec shr (bad) mov cmc sti (bad) js fcos pop insb sar pop insb aad pop imul pop imul inc inc inc add movsl pop insb sar pop insb sar pop insb aad je xlat call shr dec int lcall adc lcall lcall lcall movsl inc inc inc add inc inc add mov pop insb aad pop insb sar pop insb sar pop insb aad pop imul jns fdivr js (bad) pop insb sar pop insb aad pop imul pop insb aad pop insb shr pop gs add inc add inc add ret insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb (bad) xor inc add inc inc add inc add inc add inc inc add mov pop insb aad pop insb sar pop insb sar pop insb aad pop imul pop insb aad pop insb sar pop imul pop imul inc inc inc or inc add inc add add add inc add inc add inc add inc add sbb pop pop insb aad pop insb aad pop imul pop insb aad inc inc inc add inc add inc add inc add add add add add add add add add add add add add add add add add add xor add add and test add add add add add add sbb add add add add adc add add add add or add add add adc adc add add sub add add add add add adc adc add add sub add add add add add adc adc add add sub add add pushf add add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add cli add add add je jb imul inc add insb add dec add data16 add (bad) add add add add add add add add bound xor add sub add add inc add insb add inc add jae arpl jb imul imul add add add add add imul push add jb jae imul add add xor sub and xor sub and cmp sub and xor add add pop add add insl add imul add arpl jb imul add inc add je outsl add je and jbe xor and push add jb imul cmp and xor sub and xor sub and cmp sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds fs outsb fs arpl or and gs outsb fs je jae gs bound or and and jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and addr16 addr16 jo outsl arpl jae jb jb push je jb cmp jo bound dec gs outsl imul and xor xor xor arpl xor ds popa jae gs bound fs je je ds and fs outsb fs je jae gs bound or das fs outsb fs arpl or jae gs bound push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret aas addl sbb cmp jb in jl push xor or xor push subl pop add sub neg sub mov push pop pop dec xchg push negl pop shl push mov xor pop push mov sub pop mov 