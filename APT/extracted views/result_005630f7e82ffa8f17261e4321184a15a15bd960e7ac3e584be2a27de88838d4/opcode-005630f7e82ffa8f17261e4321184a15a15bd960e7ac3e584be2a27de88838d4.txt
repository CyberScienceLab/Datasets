(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea push add sti fstpt fcoms cmp push push xor (bad) dec mov xor inc add cli jg mov mov int3 rep cmp xchg or (bad) fucomp push mov and adc jne add (bad) mov cli aas inc push mov adcb add add add es add dec push inc sbb ret int andl test mov mov sbb clc add or or push pop mov add pop sti push fcomi xchg dec adc rclb add mov mov or gs clc add cmp jbe insb mov movsb cmp or xor push push jmp mov imul shr push xor fidivl lret or outsl insb mov cmp dec je add sbb pop push and push sbb adc or rolb mov pop pop bound xchg sub test (bad) (bad) call jns outsl lcall push add add cmp mov fcmovnb and in jmp inc pop pop sub xor outsb or push push push push ucomiss sbb test fsub pushf sub inc inc and push mov mov das adc pop and push insl shll cmp je inc dec mov sub pop cmp push cmp scas sub inc adc and mov dec fsubr jo test push push daa insb pop nop sub add imul arpl xor add insb add aaa aas jnp inc pop insb mov jne push sbb lea add fstpl inc inc mov xor call sub mov xor dec jae jmp mov sub notb cmp and (bad) mov mov inc scas dec sahf mov roll mov nop insb push insb cmp xor dec and pop and mov and inc mov push or inc subl sub sbb mov loope add push push cs dec cmpsl mov xchg or xor je push (bad) xchg add pop adcl mov mov push push cwtl mov mov adc jp outsl and sbbl rorb pop push push pop pop pop add leave les in ret mov imul mov jnp cli jne popf mov aaa mov mov xchg add mov fcoms or mov dec mov stc and pop mov push push mov movsb jbe cld repnz (bad) fstps test jmp sarb xlat xchg push fs or mov mov clc sub push std inc sbb (bad) cmp sub idiv cld mov jbe movsbl leave and mov movl cmp jb pop jb (bad) pushf xor jbe sub fidivr int out inc cmp fisttpll add push enter xor xor pop push add add jle pop test rolb sti or add imul pushl stc shr inc inc cmp mov jb pop or (bad) fwait in lock ret lock fild loopne shr mov or add push mov mov mov loopne add lea jns hlt outsb mov lock mov sbb adc mov inc call add aam or pop mov mov jae mov or push lret and push call (bad) jmp shr cmc dec (bad) push add push mov insl ja mov jne cmp or lock popa cwtl sub inc cmp mov (bad) jge es xchg movsb cmp push fcoml cmc pop imul imul out jo pop xor xchg xor mov push jecxz rcr sahf sbb popf jne push push push roll (bad) (bad) in idivb (bad) jne push clc push (bad) int or sub pop fsubs sub lods fwait mov or mov arpl xchg bound pop adc std inc pusha sbb (bad) jne movb xchg add adc stos adc and xorb mov sub add (bad) mov (bad) push in adc sub cld mov sbb mov mov jns fbstp push pop andl add add lea mov or adc sbb imul push movb adc ljmp push cs and mov mov jne decb cmp pop or ds jae or jne push push jne or fdivl or add jne or (bad) (bad) jne add add bnd add pop popa adc xor fistpl call je sbb neg ja cmp jno imul loopne out lcall fnsave lcall xchg ror mov jne mov pop repz pop les clc pop sub mov mov movb pop mov cmpl mov lahf jmp clc add idiv jg jb or inc sbb push jo jecxz pop dec xchg adc pop mov mov daa gs adc ja lea movsl add shlb sub sub or xor or mov add pop jl cmp js pop or icebp or pop xchg xchg jmp sub mov imul mov and or add and rcrb push mov fcoms in jle std outsb push outsw cmp outsl jmp sub push pop jne and or cmp jne xchg std and in outsb dec cmp imul pusha loop in add outsb lock cmpsb outsl and test jle (bad) mov jb ret or (bad) sbb cltd pop adc pop pop xor js popa push push test fistpl xor jl mov xor and je test aaa sbb mov sub push add cli into repz pop pop daa test rcll inc jb test test call mov pushf jb nop flds xor sub jl shlb pop jb or fisubr pop mov adc out xchg push movd or pusha sub aaa into or fidivrl (bad) mov and mov mov orb and xchg outsb in subl and mov insb shll mov test (bad) push push mov mov in cmpb pushf push push lock inc jae inc lcall add adc mov mov (bad) fdivrs sbb xor jnp push jl arpl sbb les loope in sbb push mov lea jne movsl add cmp ds inc adc push xchg inc jbe cmp fisttp or push mov push adc inc or and xor jno sbb mov leave jl dec pop jmp inc (bad) lea push in leave and adc adc repnz push jne outsb fdivs jmp mov add xchg jp (bad) (bad) movsl fs je jl mov lods mov cwtl inc mov mov (bad) pop xor js mov es mov jg aam or icebp mov xchg mov mov or sbb dec notl mov xchg and mov inc fsubp jg (bad) xor push mov addr16 jo test faddl push adc dec je bound add clc or imul mov or and testb movsb push adc ret (bad) mov mov and push (bad) push test fidivl int add inc add or and cmp jne les sub movsb adc mov xor inc arpl xor lahf rorl xchg adc imulb lea mov fisttpl outsl fcmovnu push jle test and dec jne (bad) int or xor (bad) push fldt mov jne sub shlb jae pop pop mov insb inc mov add mov fdivl and jmp xor or xchg mov icebp shrb pop mov out jno repnz mov cmp lock in test sbbb leave and jbe mov mov fildl stos cmp lods push outsl mov (bad) stos dec mov out adc inc js fwait pusha dec sub and xchg scas dec mov (bad) push outsl pop rorb lea or lret mov or lock push add mov pop add mov mov mov and (bad) mov push test fcompl pop sbb fcom gs mov jno imul cmp insb cmpsb lock loopne push ss cmp mov loopne in mov jmp sub leave mov out push cmp pusha xor cmpl roll enter inc pop jmp stos movsb cld aad push test test dec daa jne xchg test jle pushf pushf mov cwtl scas dec int3 call xchg insb and in or xor pop jno adc in test sbb pop (bad) mov sub pop mov add or cld stos pop js rcl out es push lock xchg adc test stos mov or mov cld mov add add mov inc push sti sbb call (bad) sub repz dec jl mov mov rclb cmp ss pop les sbb es in imull or adc popa sub ficom and push adc mov aas (bad) andl lret jnp int3 pop imul cmp pusha dec incl or pop adc bound dec or adc leave adc mov xchg mov in pop mov push mov push mov enter and int adc sub push sub sub mov mov sub sub cs insl mov xor xor sub scas pop xor cmp pop xchg pop xlat cmp cmp lods aas or inc and inc or dec fstps dec cwtl dec dec and in lcall push aam imul int push push jnp pop pop xor pop pop int pop pop shrb dec pop push pusha popa scas bound cmp (bad) fs xchg lods imul fldt push adc insl rep inc fdivs xchg icebp mov je jo or mov call mov jl mov mov (bad) scas adc imul adc push jmp push push or loopne cmp out mov fnstcw orl jne jmp sbb xor cmp pop push sbb jo inc call and bound xor fsubp in xlat lea mov jae test inc sbb in sar arpl fmull dec pushf push sahf mov dec adc test add mov push cmp iret sub movb (bad) lcall cwtl imul sbb xchg add add mov and push enter cmp inc loope or sbb fsts mov and and cmpl dec pop xchg sub adc test or push fsubrl adc jmp sub into pop inc push sbb jbe add inc pop imul insl shrl push xchg jo or fiaddl aas mov fcmovnb rcll outsl loopne roll fidivr mov push xor jb sub inc adc mov dec frstor clc push divl pop jb and push fldcw in lock push mov dec push push mov adc scas lea push mov pop xchg push sbb push fcompl (bad) insl loope mov push push lock xor mov inc cmp sub inc in sub lds mov or add scas mov sbb or jo push adc mov pusha mov sbb and push hlt push (bad) jnp add mov cmpsb iret jb je test adc sbb jns push addb mov jo jo or mov push jbe mov pop push inc movsl mov xor inc cwtl pop aas pop enter aam mov fidivrl incl mov imulb pop jne gs fbld mov cwtl sbb dec adc divl outsb fs adc lahf adc fxch add leave adc pop or in or inc in add mov adc shll cli daa push xchg pop xchg call in inc or enter xchg xor dec cmc int inc lock icebp inc push pop repz arpl lret in push or stos push mov pop sub mov xchg mov and sahf jbe push and and sub dec rcrb cmpb jne adcb jne add add or leave adc cmpsb rorl pop xchg jg sysenter je xchg in pop hlt add or push dec push je in scas rclb mov mov pop lcall xor jbe mov iret movsb dec or push inc xchg outsl or add cmp jl sub xchg jo sarb ss inc or cmpsb cs fdivs sbb ret or pushf pop in (bad) xor es daa fidivrl dec push adc insb cmpsl out inc push sub push mov jge fxch sbb loopne sbb (bad) sahf adc dec cld jmp cmp or decl add movsl push xchg add rcrb sbb add mov clc mov in insl push jno push insb and jnp add addr16 jmp sub mov (bad) shrl cmp flds push push and pop arpl rol outsb jnp enter mov mov movd shr cli bound rcll add and push dec out dec fdiv and cmp dec ret imul pop pop add adc or aas mov sub add ja pop loop insb xchg or fmul jle xor and adc add xor add or mov or leave mov pop jo push push inc imul push mov mov push fs cmp (bad) je add add xor pusha lea push hlt push sti mov xchg mov rcrb xchg movsl popl (bad) jae add or add js leave cmp jno,pn adc outsl scas outsl jb insb addr16 mov dec or xchg xchg pop pop pop in inc sahf push dec mov mov hlt add xor dec enter in enter in mov leave rcl jbe adc and and push adc push inc sub inc sbb (bad) mov push or and adc xchg cltd lods mov js push test jo das jp movsb jne cli notl lea add add or push daa fstps sub sub icebp js mov mov mov and cmp loopne rclb adc pop hlt mov cwtl cs push sbb inc sahf je jmp in push in mov roll addr16 mov mov pop mov enter push outsb push iret pop outsl cld inc jo mov push sub add mov (bad) or xlat add mov push cwtl mov fcoms jne lods xchg sbb mov add pop push bound pop push adc into testb push jne lea movb shlb (bad) mov add mov add lret push push out or dec mov push push (bad) mov or cmpsl inc add push jge clc jae cmp xorl mulb and mov mov sbb mov leave or pop pop pop clc lock xchg in adc test sbb xor mov push mov sub aad decb fsubs stos add push or (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb dec cmp push cmp in add das xchg aam add mov pop mov mov call inc or pop xor mov adc add cmc out pop add je xchg out xchg loop jns les data16 neg fsubrs xchg sbb mov sbb int3 mov xchg mov cltd sub andl fcomp cmp cmpsl aam jp xchg mov inc add shr pop cmp and mov fs push mov cs jl mov movsw pop sbb dec mov jnp fisub jne (bad) mov (bad) insb mov mov hlt pop shr js lea sub outsl fidivl rclb (bad) xadd push adc fistl je push in ss idivb imul push inc lcall cs not icebp sub cld xchg enter and mov (bad) inc sub aam lahf js adc xor sbb xor gs mov mov jbe mov dec les add pop xchg lret stos cli mov pushw add push dec mov pop sbb mov cmp sbb mov jge aaa sbb xor xchg adc ljmp sub mov xor idivb xchg xchg mov mov es ret pop roll xchg sahf stc mov xchg mov or fwait cmp cs jbe add cmp lret mov pop sahf pop lock sbb imul or test hlt cld enter leave data16 std sub (bad) loopne add mov or fist xchg cmp stc jmp mov add mov push push js add adc inc pop push pusha lock mov cmp jnp fisttp add lock (bad) pushf sub xor mov mov jmp sbb mov mov icebp sub or sub fisttpll push test in mov mov jne addr16 sbb ret mov dec (bad) movl outsb jb ss add or cmp add fsts xchg or and or sti iret or sub inc push add or inc int3 jle jno fisttp inc es (bad) enter psubusw or into push test lea nop or aaa in sub jge dec cmp into (bad) xor mov das xorl femms xor jge inc jbe pop and push push outsl add jno sbbb outsl shrb subl xchg rorb (bad) xor mov ret push add popa sub mov jmp popf pop aaa dec add cmc pusha mov pop test bound enter loope mov pusha inc mov jne pushl and adc push ficom das bound xor sub push inc or xor dec cmp int3 sub std sbb pushf pop test add rcrl adc or xor das add bound loope add xorb repz add mov popa rorl add test cmp mov jne push mov imulb lock or (bad) cmp push mov and add cwtl push cmp pushl les xor dec pop sub pop enter or adc pop and add mov adc enter adc cmp movsl fdivr lret pop add je or dec test jg add cld fildll add sarb movb push dec (bad) jae pop or stc clc movsl clc mov iret cmpb sbb movb je ret xor mov cmp jne jmp inc sbb pop mov cmp ss add insb inc push incb jb rolb stc aad pop idiv or adc push or das mov cld mov cmc mov int and pop loopne or cmp sub push idiv sti ss mov adc mov inc mov xor lea (bad) out push push pop xor jbe xchg xorl cmpb fbstp and test test lea andb cmpb jbe xor shll dec push shrl push ljmp sbbl jmp push inc push inc cmp cmp or (bad) push fcoml push jb adcl pop cmp test stc std clc std stc repz push lock movsl movsb push loope jae push push or jo (bad) adc cld in add cld in in rclb stc adc in cli in cli xlat inc inc js (bad) xor lock jb xor std sbb sub and std (bad) mov and and adc inc (bad) jne xor dec mov pop lods push outsb or or push clc mov cmp test push test faddl shlb push dec mov sbb mov into sub mov xchg cli add sub stc pop test leave in pop inc nop into into into and push and sbb push call repz pop out mov push nop sbb inc xchg mov xlat inc stc sbb out scas nop js or pop dec add jo pop repnz mov dec clc cmp xor mov pop out adc pop pusha stos sub test mov sbb idivl sbb iret and xor in or test mov xchg xor dec insb jb sbb push lea and ret dec imull inc push jns je mov loop clc jl jle inc mov and popl in xor mov jo add cmp mov lods or jle loop push push sbb inc mov add push dec cmp xor adc mov push dec clc jne push mov cmp pop iret dec inc mov jae movb push out push movsb dec fcoms push nop adc sub in mov mov pushl add push adc loopne addl scas add in xchg cmp mov xor xorb sub cmp xchg sbb cmp mov or or test add mov sbb cmp mov or (bad) clc sbb cmp adc (bad) aas jb scas jb inc xchg adc pop push xorl dec push and call lds subl popa test call nop imul xchg mov mull mov nop fwait ret push xor mov notl xlat push test in xchg js xchg dec jbe sub jb inc push stos add jnp sub pop jmp sub jl je arpl in js sbb pop mov lcall inc xchg insl sbbl aam mov mov jge cmpsb mov mov push pop (bad) or push push add pop lods fwait shl (bad) or dec gs movsl faddl in cmp add inc sub jecxz adc mov scas lock mov aad je add lds ficompl loopne adc int (bad) lock mov and jmp inc movsbl testb dec mov aad inc mov std call adc shr or or sti pop in push sub (bad) sub neg push call jmp ret ret adc adc insb loopne enter or add adc mov add mov cmp hlt and imul je pop fs into push pop leave adc or and xchg cwtl data16 and dec pop mov fcmovnb sub jnp ret lods call loope adc push fstps inc imul mov and push mov jmp mov lcall gs mov jg inc xor sti enter cmp sti push adc pusha (bad) dec pop fdivl inc mov pop cmp jg pusha adc add icebp mov mov gs scas fsts adc leave jb call sahf ffreep sti (bad) sti mov mov inc nop xchg call adc inc sbb das xlat push xchg sub pop mov stc mov cld sbb jg mov cmp or push pop jmp test decl jl lea mov add push push dec jg add sbb aaa jns lret mov push imul insb nop (bad) enter movsl stos jg aad pop push or mov mov add (bad) das mov push test or movb fdivr out add add je and jecxz and in vmsave incb pop ficoml mov push add jmp pop cli out jbe test jge sbb push ret and push in pop sbb mov imul xchg hlt aam or or dec add push das dec ret pushf dec sbb leave lock lods fcomps mov call inc out jle lock lea mov bound xchg mov ja mov and je,pn dec inc mov xor inc xlat lock inc xor pusha mov popf xchg or mov shlb jg jp mov pop incb pop pop add ffreep push xor mov push sahf jmp inc je adc cltd xor loopne ds cmp and nop cmp mov mov andl xchg push mov mov cmp sbb (bad) push jb (bad) xorl fmull cs pop aam mov mov pop xchg insb pop add out and lods lret aas push pop mov mov push pop mov jge decl mov push lcall out test cmp dec test jg mov inc mov mov push sub (bad) in std lods sti adc lock add cmp mov idivb cmova cli xor sbb and mov and xchg jmp sbb xchg and dec add leave push adc daa xor roll add mov jle inc push mov aam cmc push popa popa orl dec push jl (bad) (bad) divb mov xor inc lcall subl icebp addr16 lcall jb or cmp jb and mov mov xor cmp push sbb stc and shl add mov xor imul sbb cmp outsl enter add js shr shl add mov fstpl outsb add jbe sub mov inc clc ljmp mov sub dec hlt lret fisttpll jmp ss out inc pop sub (bad) add jmp rorl xchg mov push adc add std movsl in lret lea inc (bad) lock dec or inc adc les mov adc and rolb std add out dec or inc jne cltd add scas test leave push and loope (bad) cld inc add mov mov cmp cmpsl mov jae sbb adc push mov xchg xchg or lret faddl adc mov cwtl xchg (bad) leave mov and lock mov jo sbb enter je pop leave push sbb sbbb lock notl jl push lods lock dec cmp cs lods mov pop std inc pop push cmp mov add mov add lret shlb dec mov ret and mov push push lret push and (bad) and pop mull decl sbb (bad) push movzbl dec clc mov outsb insb fisttpll add jl and notb push test testl aaa jae sub push lea cmp popa sub jnp mov jge subb mov nop sbb nop pop jecxz pop add cmpl fstpt loopne pop jg mov sub sub dec and pop adc mov sbb or sub push je,pn inc mov sbb ja ret testb rcr orl (bad) cmp mov or push sbb fcompl mov notl addr16 sbb adc push xor jae pusha shrl xchg xchg insl jnp dec scas cmpb adc or test xchg push mov xchg loopne fstp sbb xchg xchg dec je clc xor clc lods jg push stos outsb inc cmp pop mov jl ss out push stc shrb jge cld (bad) cli pop jle je insl jmp add dec std ret mov mov mov push jge stc int inc mov mov test sti nop add adc or add repnz fnstsw pop inc cmp (bad) data16 xchg mov iret fimull mov and (bad) jl pop out sbb repnz cmove push mov les dec fstp push ljmp push mov in adc (bad) mov and sbb (bad) mov lock sub sahf cmp jno or sbb mov inc (bad) adc or pop push dec push pushf push nop je sbb outsl sbb and inc or negb inc cmp sbb adc popa mov movsl leave inc mov cld das and sub pop push sub mov xchg jns jne jmp add add fnstcw cld nop push jne mov push jne and mov adc mov mov imul je push andl pop push test in mov push pop fcmovnu xlat inc add daa lret dec clc inc or xchg shrb jns xchg test xor mov in dec inc stos xchg dec mov inc jns decl (bad) rcll js lahf sbb out mov xchg lods addb push clc clc fidivrl test mov test xchg mov outsb frstor lret inc dec shr inc ret lea addr16 mov push popa insb sub mov or cmp adc inc imul hlt dec add sbb mov inc loope shrb fmull push xor (bad) not mov mov sub clc or icebp jo call sbb bound mov pop xor inc pop aaa xor fistl jne enter jmp and jmp aas fisttpl xlat sbb jns add sub jmp mov mov (bad) jbe push std sbb or jle dec into xor xchg std imul or xchg jmp fdivs add push test je mov fildl in or int3 mov insl pop shll outsl mov leave fstpl call pop sarl jnp adc push add inc scas and mov lods loop push inc aad pop movb out xor lock push movb in ret mov jnp inc adc fistpl movnti add dec outsl aad clc adc sub dec xor inc xor insl js add or push enter fcoms push mov mov movsl mov dec pushl js mov and and test lahf scas jnp test cmp fistl push cld sbb add sti addb dec aad rcrl lret inc dec cmp xor and sbb and push in add inc cmp or scas movb and addb or leave dec enter cmp je mov loopne cmpsb cld insb and push (bad) adc add push push and add inc inc jmp imul push cwtl orl outsb and xor mov inc and xor adc xchg in jne mov sbb inc sub js xor add clc push int inc adc adc (bad) xor out ljmp and insb mov inc and or je pushf xor xchg push rclb sti inc loopne xor xor jle add or movl lahf add insb pop or lds push add and mov int3 push pop leave imul pusha xchg ja pop jne out movsb jns je in mov imul imul cmp mov or aam xchg ret push out test das enter mov das shrl xlat das dec aad aaa loop pop adc mov scas add inc or pop adcb sar loop sub push inc sar push or jle movsbl inc jmp fidivr or inc cmp jle and fdivrl cmp push and inc fbld mov scas (bad) int3 adc dec bound (bad) sbb in add mov jge add cmp mov or and jle rcrl xchg or ljmp inc add js bnd mov test rcrl inc imul jno imul cmp fcomps mul seto neg or push lea push das push (bad) std and xchg daa push mov inc push and mov sahf xor rcrl cmp pop mov dec jb out out loop rol push inc adc sub pop std push call xchg and adc div ret cmpsl ret enter cmp mov fildl daa sbb pop lods pop shr fistp ret imul cltd sub (bad) clc outsb imul or jge pop in inc and add lea into or mov pop push das movsb pop inc lods cltd add popf adc mov lods cmp and mov test cld cltd mov mov popa add xor imulb mov jl dec mov dec fisttpll add push pop mov addl adc loope es push mov pop sbb add push pop sub cmovae jne cmp pop in cs or into pop notl mov push pmaddwd pushl lea cmp je push pushf fmul pop shr movsb cs lock fnstenv mov sbb (bad) push pop or imul inc or in loop pusha dec mov test push outsl xor dec adc inc mov push xchg jae fmuls ficomp mov cmp inc inc inc sbb icebp pop pop fildl (bad) mov in clc sbb fadd add divb (bad) jne shl dec imul out lea mov push (bad) jl mov imul push xor ljmp jg push or dec sub adc test or aas inc pop lock (bad) fstp push cli and dec inc or inc test js aam mov inc ja cmp push adc mov pop (bad) (bad) push mov into lea loopne stos dec (bad) jbe test test push mov dec inc sbb mov mov mov fisubl int mov (bad) mov dec inc mov ret rolb add fsubs ja mov add mov in dec in mov ficompl sub loopne fdivp (bad) cmp jne mov cmp jne in inc in jb fistl sbb sub adc fdivl call call pop fldt decl sbb jbe dec (bad) dec popl jge jg inc or jne sbb or es add sbb ds cmp insl in outsl ja movb inc push shrb in or and push (bad) int3 gs or or jnp add sub xchg out ja (bad) clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc pop adc popa push sub fwait inc sub ljmp xor mov inc dec loopne ret pop fiaddl sbb fisubl mov lods pushf jae (bad) cmpsb aaa fdiv orl mov jb lods jmp idivb loope jbe cmp jae mov sti xor mov push or test mov or mov in push sbb sbb xor movb push pop mov arpl sbb pop in inc dec inc and hlt dec in test xchg in pop clc xor fcomp adc or fidivl dec add push pop sub pop mov mov loope sub push (bad) dec in (bad) in das mov cmpsb or adc jne std in cmp pop add mov fxch xchg icebp pop lea fs mov lret pop outsl imul xor hlt mov add in in loopne pop orb fwait mov outsb adc push push repnz sbb mov mov xor inc dec mov xor pop (bad) sub pop xor or data16 jae inc jno mov push faddl sub test ja inc jmp lea clc lea jnp xor adc (bad) outsb aaa push jbe cltd sub cmp cmp and and int fstpt inc jb jmp push add adcl adc jmp and aas jb (bad) mov push mov mov adc push sbb rcr out push lret lods xchg fildl add fdivs ljmp add add cmp mov (bad) lods push aaa negl sub mov fwait inc test aad pop pusha imul (bad) mov insl jae or mov jnp mov leave mov add or bound xchg jge mov rorb mov or or stc in mov pop adc roll lret in lods lret xor ds cli fidivl sahf lods mov test mov push lcall push cs inc mov jle inc jle cmpb and dec dec aam add xor push fistl cmpsb pop je sbb inc sbbl push sbb out or mov jge bound pop push mov or lods call mov push push orl je mov aaa inc insl fs mov icebp push cltd pop push lea xor mov cltd sbb (bad) jp idiv mov add in or nop mov test cmpb iret dec adc xchg mov mov adc and inc pop incb sbb adc mov pop pop jecxz adc add jne or sub jb and testl scas pop or inc shll flds add or and jg popa mov sbb aaa pop and jb inc push dec mov inc ljmp jge push adc adc adc mov sbb adc xorl int push lcall mov dec push dec sbb fadds jne cmp pop jb mov cld cmp push sbb es push pop or pop (bad) xor push js pop int3 and and sbb xchg sub mul pop fwait xor imul pop pop push mov pop (bad) sub leave push cvtpi2ps add mov and pop cmc add pop push cwtl arpl aaa dec xchg mov ret mov stos push xor adc add and or jo ret mov push inc or adc cmp jl push sub aas sbb pop dec jns push mov cmp jle sbb add push jae mov pop xchg (bad) loopne lcall add insb mov xor or push test mov or add cmp adc mov push xchg lock pop and je or add cmpsb icebp push fidiv and sbb mov cmp add and ja outsl incl or cmp push sub inc mov les pop xor movups lods mov or decl add add imul aam push mov or les je pop push inc loopne mov (bad) mov fsubs lcall inc arpl xor push cwtl adc into mov adc je adc mov jns pop mov clc and insl push jnp jne dec sub dec or or push push sbb adc fpatan insb and dec inc jo pop leave test (bad) dec lock rcrb or pop add adc add insl xchg add fnsave push push out add or in fdivl icebp fs push cmp aad jge pop push push lcall ja pop insb mov mov jl jmp mov xchg push insb mov popa or fidivl shrl add push mov push mov pop rolb (bad) movb pop je xor rolb xor mov mov xchg cmp mov mov and pop loop mov adc push cwtl das mov (bad) fs js ficomp testb and add paddsb mov add mov push push jo add push push js add (bad) mov adc fldl ret cltd mov outsb ror into push push mov shl or adc and xchg sub decl rcrl iret adc (bad) xor or jmp adc ret cli or jmp and cs and fldenv into add pop fxch repz push imul ds cli add mov idivl dec adc add addr16 mov std pop pop shl or jo dec mov orl inc adc jo inc or inc adc xor sbb and sbb push or gs or (bad) outsb mov xchg aad pop or add (bad) xor push scas push or scas test lods push sub clc jae pop push cmp push push mov jl movsl call mov nop or dec ds clc sbb inc fdivrs mov das xor adc (bad) mov ror jo jg sbb mov int3 xchg test popa and inc mov push inc shl push xor cmp bound int3 int pop dec push inc loope mov add (bad) sub fadd imul push roll dec bnd call add or insl cmp push push jl pop push push sub mov dec stos mov jle cmpsb lea sub sub push out adc xor jae sbb push xchg xor pop or xchg int3 (bad) cmp insb sub or je jb pusha leave inc lods cmp (bad) je inc jmp or bound pop jnp ret dec jge imul test push and enter and jp jp push inc add mov pusha les push arpl jge and xchg lods add daa in sarb adc mov pushf push adcl stc (bad) or imul mov fisttp mov (bad) out (bad) stc add xor or push pop lods test or sti ss pusha test jle je add cmpsb clc mov dec fistpll (bad) or cmp push xchg ja jo mov jge or pop or fdivrs push pop sar inc adc enter sbb movswl inc adc jnp rolb pop adc pop or ret aas sbb stc outsl call mov nop sub jne aaa call dec aas mov ja mov outsb (bad) add push push je add xchg aad loope rolb imulb adc out cmpsl sub inc or test adc jle dec add pusha rclb std loop test rorl (bad) jbe push hlt pop add adcb enter and (bad) xor mov pusha cmp adc (bad) and push mov imul faddl pop push adc mov dec push movsl dec push pop mov xor push sub push adc mov test push adc add dec inc jbe mov lsl xor clc mov sbb (bad) push jo rcrb addr16 push pop pop xor pop enter lcall and add in pop lods cmpb and pop inc add ja pop cmp adc fdivr or mov sbb int3 mov mov mov dec aam sbb or cmpb mov lret add sbbl bound shrl push xchg add mov mov rol dec rcrl inc push push xor aas cmp jl sub cmp imul push popf pusha xchg sbb jne popf or mov mov imul shl inc sub xchg mov repz (bad) mov pop or adc cmp (bad) lods jle mov adc ret ljmp jp scas mov jmp pop fmull mov xor xchg and push adc or or pop jmp push mov out out enter cltd or inc or jge insb add bound sub ret fildl sbb cwtl mov dec (bad) es cmp xor or ljmp call jl ret jnp pop push ret inc or push cmp sub mov pop test sar cltd stos jg mulb jge cmp xchg jne mov mov dec fiaddl cmp popa out push pop inc ret ja jne ja enter incl pop mov mov sti push dec mov int je push test vmovups ret dec mov leave push xchg jb cmp lea outsb dec les push adc adc mov (bad) mov adc pop inc push push push or pop xor fs enter push or js dec (bad) cmp jg (bad) adc out cmp xor dec jne pop mov ss push push mov shlb sarl scas aad and adc pop mov int push shlb or cmp in (bad) cli sub mov push mov xchg xchg (bad) icebp ret repz add and sub test sbb sub xor fstl stc cs jl sarb adc sub xor mov mov dec arpl mov jg mov nop add or push jb mov rolb rcll ret jae pop xchg xchg jmp int3 int3 push test jecxz cmp cmp lock jg mov push cmp jne inc fldenv add inc ja out fwait sbb sub mov pop pop fldcw pop pop pop sbb push mov inc daa push sbb add inc mov popa fisubrl mov cli jb jb loope test add mov push lods fsts and dec push jecxz stos mov ljmp inc pop call lods cmp jne sbbb div and pop jne push orb (bad) (bad) (bad) dec pop add dec add mov andl rcl (bad) jg int cmp jbe jecxz stos inc jmp jecxz stos movsl cli out inc xor insl pop jecxz mov test incl fucomip out dec sbb lods mov cmp cmc dec mov jbe pusha fldenv mov mov and lea xor or jbe je xor push xchg add mov loope and repz sub cltd test fistl inc fwait mov add push inc cmp loop outsb dec add cmpl call jne xor (bad) and adc ljmp pop andb ficompl js (bad) mov test je mov xorl xchg push mov arpl sub cmpb jne adc or test jle decl or insl mov or jge (bad) divl add je negl adc push clc mov push pop or out mov push mov sbb push inc pop cmp mov xlat mov rorb or jne jmp ss cmp pop fcoms lret jno adc fimull mov inc adc push push adc push fstpl push jle je leave outsl inc pusha outsl push jecxz jne test xor cmp mov sub fnstenv es or push rcrl adc mov and adc sysexit in stos or add je xlat and (bad) mov cmp dec bnd inc mov lcall push push sub call xor daa adc pop xor or xchg or pusha addr16 enter sti adc cmp std add dec push xlat push dec push (bad) sbb cmpl push push push bndstx or mov or lock std dec faddp jmp subl cwtl inc out mov add adc pop inc and lds and or adc gs xor lds push scas mov and xchg insl sbb adc and roll js mov (bad) pop aas subl loopne dec inc repnz jmp cld test jmp lea fcoms adc and loope in (bad) into mov and xchg das mov in sbb cmp push or pushl cmp cmp push or aad pop add pop sbb pop sub adc stos mov mov outsl sub pop cmp popf push loope jne test outsl in sbb jae push in fld mov inc test sbb fs aad jno jne pop mov cmc jge jge add sbb fisubr repnz or (bad) jmp leave dec xchg in imul push out cmpl adc push loope insb xchg cmp mov push test and push je xchg addr16 aas or lea jp das das outsl or sbb je inc jle inc jle mov test jmp push pop jmp inc clc incl bound je dec jne push lds jge ret adc lea lret pop mov cmp pop mov insb inc jge mov fsubrs lds aad bound jmp inc aam xor lea mov pop lret jbe jmp jbe je add aaa jb add dec push cmc add mov call xchg invd jne push push push xor pop jne stos push jl mov pop jne gs shrb add test mov or je roll cld sub or and in jge (bad) inc fistpl or cltd into dec aad cmpb mov dec mov icebp outsb fwait cmp aas mov or pop subb fcoms fimul mov xor out push or (bad) xor aam push aad inc loope stc pop outsl sub lods jno push push mov adc test fsub sbb push insl adc inc mov rcll xchg or jb cmpsb jns orl (bad) or test or inc cmp xor or das push ret test xchg sbb dec dec jp mov add or int inc rorl fstpl test cmp addl incb sub xchg test fldt and jae push add test cli (bad) adc (bad) out mov jae dec cwtl hlt out xchg insb adc adc sub orb jae rcl fcomi mov inc fildl push fldl fmull mov fwait aam bound imul cmp test in call nop roll in add fmul fxch inc in add fmul mov or fdivl fsubl fldcw sahf gs lods xchg jb sub sbb (bad) adc and mov push aad aaa mov imul dec (bad) sarl insl out pushf (bad) test fcmovnu leave jne mov mov ficom into add lcall sub cwtl fldcw mov push and sub add aad sbb add loopne pushf push jp sbb in insl dec jge and mov cmp cld mov decl scas (bad) (bad) in add adc sub movsl mov inc enter add and inc jb ja xchg add call (bad) sbb pop or fsts mov add xlat pop mov ficom jbe fcmovne neg sbb out push repnz mov xchg and mov add or fldl movsl stc cwtl push lcall sarb bound inc push cmp sub pop xchg adc xchg fiadd or pusha daa inc add cmp test pop mov mov inc fisubr loopne lgdtl mov cmp loopne fstpl inc fcompl inc loope int3 in fcomip lods into fisttpll dec lret incl pop inc into outsl fldl (bad) (bad) je jecxz je add add or sub xor push sbb mov dec inc add mov pop mov insl dec dec js,pt adc pop adc loop jmp or ss push and jne xor mov mov cmp je cmp je sbb or push push jo insl fsts daa and add mov and fldl nop add adc sbb sbb inc jle push add jp pop jg push outsl push xchg mov push xor fildll adc sarb xor fimul cmp fiaddl outsl ret inc cmp jb mov pop test sub mov add sub jae out mov inc pop movsb and jbe ret fimull outsb push clc movb mov lds lahf cmp pop and or pop and fsubl pop jnp xor cmpsb cmp mov sub or js pop push push insl pop ja push jmp xchg sub ljmp mov pop jns add adc movsb and mov add sbb pop cmp lds sbb push ss and andl pcmpeqw inc stc jne jmp or imul jb jne jmp rorl mov into dec movsb pop or push sub (bad) dec out or mov (bad) mov push push lea cmp mov popa lods fmuls inc sub xor inc xor push in mov cld mov (bad) and call pop adc jmp test adc rcr jmp es incl aaa int3 add cltd xor sub ret or lock fmul or loope cli fldenv mov icebp repz adc mov dec jg adc add or outsb in aaa (bad) mov or adc push or mov push pop jmp test mov out mov xor mov sbb int3 outsl repz add mov out cmc icebp push jmp push adc pop int adc cmp and in outsl call aaa or or or xor mov push adc cs ret test imull inc mov decl mov call cmpl mov push add push les push test pushf adc dec add lds cli sti add mov jg cmp push ja int unpcklps push shr and add lock sbb jle add mov insl imul sarb and cmp jbe loope stos adc (bad) pop (bad) jmp movsl (bad) lods loopne xor or xor cmp out cs dec stc jmp push and jbe fstpt int3 sub cld add sub or outsl ret or inc ljmp pop lods push loop dec fldl2e mov (bad) fsubr sub ret rcr fstp adc call or repnz inc int dec fidiv push push mov and xchg stos aad sbb sub int3 add stc cmp or test std push fnsave mov xor je xchg or cs xor cmp dec cmpsb push sbb jno ds cld loop add sub scas mov jb xor cmp pop pop mov mov pop imul dec les roll lret dec out mov dec inc ror imul xchg pusha dec leave add (bad) push jbe int int3 mov mov in and inc mov aad in push adc daa mov jo cmc xor call push pop jne ja dec add mov pop pop movsb inc sub sbb aam pop pop add sbb add lock xchg xor and inc ja pushf addl mov nop add and jo movb pop fs (bad) movsb push mov cwtl cmp mov hlt dec push ficomp ljmp or ret decb push aaa mov jp cmp sarb or jne push add push cmp cmp jae cmp je call inc jo push fwait lods or pop das adc adc xor insb jo mov pop sbb aaa stos or mov dec loopne push (bad) sub mov cmp mov jb subb jne mov inc dec push push icebp mov xlat push mov fs jp mov jnp sub add push push push and push test dec or or lods lock cmpb call dec aas data16 adc ds bound xchg fwait xchg je jae cltd ljmp dec cmc sahf clc dec jl push arpl xorl inc push inc xchg and mov add scas pop das mov mov ljmp leave popa fsubrs inc sub mov in rolb cmp stos mov xchg in imul fdivl (bad) movsb stos adc mov push push daa (bad) adc mov jne and sbb clc lahf sbb in lock pop mov cltd imul xor and fistp xchg mov or jg jnp mov das fisttp jb pop (bad) nop in sahf pop movsl push test (bad) jne fbstp add mov lahf jp pop push xchg push xchg fcmovnb xchg aaa jbe (bad) ret or (bad) in adc inc ss fsts call call inc push jp rolb mov inc loopne jbe test xorb mov fldl or add push mov sbb pop adc test clc or cli decb sub cmc pop outsb push adc xchg pop ret movsbl into mov dec jmp mov or adc adc mov or imul dec mov (bad) ja scas jmp scas jnp outsb add incl dec pop ljmp (bad) mov dec push dec xchg push sub cmc pop js sbb jg mov mov mov mov dec clc fldt sbb shl add mov and push and mov and push js mov sub sbb out test pop imul adc add and dec mov addr16 and push mov pop sub add push cmpsl pop mov sbb or mov inc add cmp cli cli je sub push jbe push push std push decl add notb mov mov push cli pop fisub jbe pop jmp mov mov mov inc xchg popf adc jne inc dec add les jecxz push data16 sbb mov cmp push mov sub stc add adc negl paddq and xlat orl push sbb pop jmp cmp push or into add pop in push movsb sbb jge scas fs or rcrb mov xor cmp fidiv popa add adc and mov xor call jmp dec adc sub ret jle lahf push mov pop mov inc mov jmp aas push adc pop mov xor int3 add inc out push adc jmp add outsb lods cmp xchg movsb push adc jnp aad push add pop sbb jg jge add movb dec mov push adcb jg sub add mov sbb pusha add push and adcl mov pop adc ja xor cmp and (bad) popa xor aas or inc mov add mov xchg lock and add pop mov add xor or or test (bad) das cmpsb inc push cmp (bad) jmp adc outsl adc add pushf or jnp movsl push xor jecxz add jp xchg cld (bad) std or xchg lea jae enter add popa add adc cli mov xchg les mov fildl (bad) orl jnp push mov mov xor xor and ret pop sbbb sbb cli xchg shl push nop (bad) imull sbb cmp xor jecxz inc mov test jne jmp lods push mov int inc mov cmp je xchg mov shlb and add mov sahf cld dec (bad) lock and add push and inc pop jne pop pop mov subb je ja push mov call adc mov (bad) decl push inc mov push inc cmpb loope xor mov (bad) or dec inc and je out lcall scas xor stos mov add adc push adc cwtl adc mov hlt nop (bad) push add mov mov or ljmp mov or adc pop jae pop out sbb adc lock push rolb add push mov (bad) and push or lret cmp add stc jo adc xor push bswap mov arpl inc ss loop cmp cmp hlt sub xor sarb add nop sub leave into or pop push loopne mov xor imul mov cmp addl lahf nopl inc dec fmull xchg cmp fsts out xchg jbe outsl xchg popa inc cmp ja pop hlt add adc fcomps and sub outsb lods (bad) lret push sub adc inc mov adc xor or push dec mov jge faddl sub sub iret insb loop (bad) pop icebp mov push (bad) fs jae test mov (bad) stc fistpl add fiadd inc jne fidivl pop mov add aad scas xorl mov cs add jae jg test ficom std push loope fmulp sar and xor or jecxz je loope scas es es add xor jecxz rolb jp adc mov test cmp pop add mov sbb cvtps2pd mov push pop mov xor idivl mov inc pop ret leave fist push adc (bad) jbe test (bad) pop inc es cmp sti mov add inc push fmuls pop ret pop arpl (bad) incl rcll pop sbb pop xchg es add jecxz fisubr adc xor pop jmp pop add cmp je add mov jmp fcmovu rcr push sbb cmp cmp and sub (bad) pop jne inc shll leave mov adc lret repnz mov insb mov ret jmp sub pushf adc mov repnz or add shrl mov loope mov mov outsl incw data16 or xor add movzwl add and mov jns inc push pop sahf jmp lahf dec pushf rorb xor mov push or stos mov inc add and mov push pop cld call or add sub mov and movsb stos xchg (bad) sbb invd and cmpb pop clc xchg addl insl and xor insl mov adc add dec bound and and add inc dec dec imull mov inc inc inc and and jg das add cmp nop inc (bad) stc and mov mov into push or lret pop adc mov mov mov inc rcr jge jp nop stos ds push inc dec adc int3 out seta pusha sbb data16 adc jmp push sti out adc movzwl xchg cmpsb enter jns mov iret fistl popa dec mov in inc or or push pop add outsb (bad) mov jmp pop ja push sbb pop ljmp repz iret lret inc inc popa in fxch push inc sub fstpl mov icebp cbtw adc fdivs lods xchg fcomps adc jg dec inc loop sbb neg sbb xchg xor leave not jg xor jge xor je jns sub sbb dec inc shll insb inc xor sbb clc fwait je or pop mov or or cmp in cmp inc or or jne lods stos ljmp cmp or fild jle cwtl rclb cmp cmp push inc rcll fcmovnu das jne pop (bad) rcl fldl insl imul adc outsl cmp push jo cmp mov cmp jmp add add xchg cmp or and inc aas std dec rcrb out lea je or incb xor sbb inc inc add add enter add out and add xor andl sub cmp (bad) dec pop add out mov aas loopne idivb sub push cmp dec sub or mov jbe (bad) shrb shl or jmp leave and mov add jg jne sbb int3 dec test call insl adc pop hlt mov pop popaw pop pop addb out fwait adc pop or inc jge ss in push add imul (bad) or daa push insl sbb adc add or cmp test push int and push push faddl xlat int inc fstpl mov xor mov jo mov add and jo int push add or nop xchg pop aad outsl add lret add dec pop out lcall popa cmovae cmp ss xor mov add sbb mov add sarb je and jl add je aad or sbb add test iret (bad) mov inc adc mov pusha stos sbb lods stos imul mov test sub fs and xor fisubr sbb push rcrb into sub xor hlt adc dec idivb icebp pop sbb test push daa push xor xor push xor xor dec dec inc inc xor xor cmp xor xor xor sub and xor xor sbb adc fs mov pop pop pusha fs in inc popf jge mov mov mov stc jl test nop mov lahf iret out mov mov mov mov mov sbb jns lods mov and fldt fs and and int3 rcl and and fcomp loopne and and call and and cld add inc mov xor xor xor xor fs sbb fs or fs add xor cmp out enter mov xchg xchg xchg xchg je insb xchg mov imul mov enter (bad) sarb mov bound mov fstpl push mov cs insl add imul pop inc pop pop lahf aas incl pop pop push inc dec push inc push inc dec dec push (bad) dec push push jns je insl push outsl outsl je and mov push pop and pop push inc dec dec push popf int and outsl and inc dec int cld stc pop push dec dec dec inc dec dec dec xor push push rsqrtps jle gs das add cmp push fucomp (bad) dec push dec push inc pop push mov outsl dec inc (bad) add orl dec pop inc inc sbb sub btc push dec dec sbb inc dec push dec cmp dec dec dec dec push dec rcpps push dec out (bad) jl addl dec push jb fs je xchg out push inc push gs imul in (bad) jne jb outsb je inc dec popf mov aas inc jne insb fs jne bound sbb jnp adc popa bound outsl dec dec popa fistpll jg inc push push inc rcrl arpl jae data16 inc idiv pop push imul dec push pop jno push inc sub mov inc sar sbb jnp dec dec or inc daa inc addr16 push loopne dec inc dec jo jmp aas in ret popa push pop inc out insb push and add fdivr imul outsl jne jae loopne cmp aaa push inc inc dec push pop inc inc push inc inc xor or iret mov or or insb outsb imul pop in sub repz data16 sub lea cmp insb jae adc ffree fwait or lods insb add (bad) fmulp int jns jae je imul (bad) jmp xor xor xor xor and xor xor adc jecxz cs adc add add cld out cwtl xchg jo inc popa je add arpl shll jne sub cmpsl movsb sub (bad) pop inc js insb outsl adc push push inc outsl lcall sbb (bad) pop gs je cmp inc jno repnz push push push imul sub packuswb pop jae nop mov inc aaa add jg inc stos push popa jae mov imul cmp (bad) sbb xchg or popa fs mov outsb call push jae mov imul jns je xor (bad) xchg out ds or and push inc push xor (bad) sahf roll dec movsb push outsb jnp mov outsl or mov xchg push lds inc and (bad) in or mov fs mov iret push push inc inc sbb push inc es addr16 and push push dec or lret mov aam arpl inc sub or and jb lea sbb fisubrl push fisub imul mov xchg je cmp dec sbb outsb sub jo arpl mov push xchg sbb dec out push mov mov cwtl insl lahf je je jo ja add jb jns cltd adc sarl ja xor sti pop mov add sub and outsl imul sbb fidivrl test push push inc outsb pop fldt pop and cmpsl mov fdivs (bad) and fs sti test xor je cmp rcrl sub dec jle jo popa dec mov push adc push inc pop jae xor (bad) mov sub fsubrs jno js sub icebp or xchg fwait popa popa inc jmp inc testl out ficompl inc test push jp pop add push (bad) push jnp pop fildl inc out popa mov (bad) ja (bad) push jne addr16 pop insl popa push pop popf rorb addr16 push leave sub jne mov pop out outsl xor fbstp je push pop pop xor popa jo pusha pop ds packuswb sbb pusha dec addr16 insl lcall pop imul or or nop lods je (bad) push dec arpl xsavec stos ja and test or jae jl pop pop push inc inc dec dec dec dec dec adc or mov pop pop lret jno outsl lods arpl jl imul jno pop loopne jle jne ja jns xor xor ss cmp sub jnp aaa (bad) xor imulb add dec jbe pop mov pop ja pop xor jns aaa out sarb je inc cmp add xor cmp mov xor pop sub sub gs or test sbb mov loop imul pop cmp mov dec stc adc push xchg pusha lock pop add add sbbl (bad) mov jae arpl jae and jmp (bad) and or pop and sub fs mov xor mov lret stos xor sbb cwtl push add (bad) adc pop adc inc outsl ret rclb sub mov jo mov jns gs inc xlat rcrb cmp arpl mov dec js ja sub push pop insl or insb inc clc ja frstor or or xor notl cs pop pop cs arpl mov imul ret (bad) mov inc sbb jne fisubrl insb cmpsl cmc fsubl xor call jns add and jb add andl (bad) and or and sbb adc cmp jnp (bad) jp jb and (bad) pop lea mov sub ja fisttpl adc sub outsl dec and pop (bad) xor inc (bad) arpl into addr16 (bad) (bad) clc call in loopne loop in call in jmp and int in mov jmp icebp in imul call sti cmc push out jmp in out and sti repnz movsb jbe lret and jmp cmova imul adc adc ja sub push ss cltd add and mov push and test ds jmp cmp inc push pop inc dec jl lea or dec pop push pop jns das add jbe push ja push arpl dec outsl jbe adc and pop mov mov adc push insb popf xor scas data16 pop adc insl outsb mov cmp call mov arpl push adc es add pop cs das fsubr in inc xor inc pop dec cmpsb stos fnsave xor or sbb cmp mov clc mov lods push sub xor push loop cmovle push aaa inc ja aaa mov inc and pop add and pop inc out mov in nop std pushl mov iret adc mov mov pop xchg inc mov enter hlt jbe xchg in pop das std idivl xor add ss pop (bad) repnz test or nop scas inc leave nop or stos and test add in imul xchg push jmp cmpsb leave outsb mov dec push cmpsl sub fs testb das jl int inc xor leave lret and sbb jmp seto mov pop loopne and fsts dec inc fbstp jecxz pop fist (bad) mov mov xchg and or ret testb bound fs fs shrl pop dec das or in dec rclb scas fsts (bad) cmp cltd cli scas jne push leave nop or hlt (bad) das inc pop les test add in repz testb wrmsr mov popf negb loop pop push fs cs (bad) popl add add inc loopne or (bad) adc addr16 add dec aas dec jbe pop jb cmc lahf repz and aam jge xchg xor fistp sbb adc sbb and xchg jo imul sbb cmc inc push leave test out fs xchg inc in xchg inc call jb dec bndcn dec ljmp out adc cmp jb sbb hlt inc ss or cmp dec xchg cs inc jb xchg negb add enter idivl nop cmc xchg inc pop dec repnz aas daa dec int ss jb (bad) fbld mov mov sub mov sbb das sbb mov loop and xor ss pop xor jmp xor imul and xor sub nop inc adc sub and mov pop cmp sub sbb sub nop or enter fsts sysret lahf enter and cmc repz fsts sub pop repz and enter aas pop das or fs or repnz jb or das xor xor push inc data16 (bad) nop rcll (bad) in hlt push push fsts lahf xor xchg inc mov fs cs pop (bad) icebp xchg add mov dec testl xchg fsub psubusw cmpsb xchg or mov jns sti mov and and shrb adc sbb scas insb and rolb dec xchg xchg jg or pop pop ret nop aas xchg div jg enter dec iret pop das fs and scas outsl nop mov sub lret rclb mov flds sbb bts bswap and (bad) ror mov sbb pop and sbb aas xchg and xchg mov ret mov push add cmpl add cmpsb stos into (bad) nop lea test mov cs push paddd xchg pop movsl add fs std cld pop or das cmp pop (bad) das leave nop or add jns fsts sbb sbb nop or jne test in or xchg hlt popa and xchg (bad) pop test pop das clc das push nop or dec das pop in push leave add repz sbb mov inc jb mov insb and jbe pop (bad) dec xchg mov xchg pop and fs fdivrs xchg ret lods dec xchg movsb in inc mov clc sarb nop or das ret scas femms leave nop or cmpsl sbb dec xchg inc sbb fs mov pop and inc xchg movsb xchg dec fcoms negl or nop pop pop inc outsl xor pop in pop in or lahf and pop jb jp,pn cmc (bad) leave test or out outsl nop or nop outsl sub leave nop or push das cmp or cmp nop or nop cmpb nop or lock or nop or jg nop or nop bnd inc push leave or repnz and or ss lahf and fs xor jo sub and fisubr fs xor inc xor leave nop out sub mov sbb (bad) test dec xchg fcmovu xchg popf adc enter adc dec insb dec xchg pop lds mov dec xchg (bad) out ss push dec sbb das or fs es inc repnz sbb pop xchg and pushf aas xor negb or pop cmpsl pop rorb and nop or sbb insb dec cs jmp pop xchg push adc xchg or ss mulb inc sbb icebp iret fs xchg in idivl inc or repnz sbb sbb add xchg and sbb das sbb jle icebp notl out lock dec into jg fsts mov inc arpl fs fstl mov jle fild (bad) je pop jb pop xor xchg and xor jg inc ss jae dec jmp and sbb fildll std and xchg and mov in enter lds push movsb cmpsl xor mov leave nop pop enter imul and (bad) nop aas pop aas cmp and movswl add cmp or leave test ret push clc (bad) or nop or mov or pop fsts mov adc dec bound fistp nop or mov dec icebp das fdiv inc ss or pop mov mov stos or dec pop outsl aas or xchg and pop aas and pop mov sbb sbb push aas push add xchg and nop test stos jns sub inc scas sub adc mov inc rclb add outsl les mov std adc pop bswap outsb mov jb cmpb (bad) sti xchg mov cmp jg jg ss movsb cmp shr movhps incl sbbb lret inc repz adc fidiv fs (bad) out dec mov inc leave (bad) jb mov pop aad jbe xor add jo inc ss movzwl fs adc pop pop sti loope loop jb push jne out mulb movsb inc das or test fs mov test push inc (bad) lcall outsb call repnz test pop cmp std and rolb push mov xor test loopne xlat add ljmp scas or (bad) in xor gs xchg dec add scas (bad) lods dec popa push or scas int mov or loop add sub leave nop xadd or or leave add bound fsubp jbe xchg add popf movsb sahf pop add mov adc (bad) push outsl imul test mov popa insb mov push inc push dec cmp xor data16 fisttpll inc dec inc push pop dec mov push inc lods aad cmc push or insb xchg push enter and outsb popa and add je xorb pop fwait aaa in fs gs mov push jne dec (bad) popf inc sbb lods mov out jecxz adc mov pop lods pop add sub and int push cmp inc vmovsd adc mov add fwait addr16 and add sub add andl add test adc addl mov (bad) add add insw pop cmp in mov add add mov xor cmp adc xor mov aas adc add add inc push rcll add cmpsb imul aad push add add fs insb jo inc sub decl inc dec arpl pop imul sub dec push inc dec pushw bound outsb mov (bad) pushl inc xor imul cmp xor push inc dec inc sar push rcrb insb imul ja jns cld (bad) (bad) pushl xor xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) ljmp add push dec pop pop bound push pop push push arpl mov imul mov lods xchg pop mov aaa ss sub xor int lods xchg pop (bad) jno fucom imul icebp popa bound neg jnp and cmp push neg jnp xor cmp dec push inc pop test push lcall add lock out lret mov pop clc adc cld and sub add pop mov add insb je inc jns gs outsl push imul insb outsl (bad) fcos inc lds jecxz insb jae jb outsb push or push inc stc arpl inc cmp imul dec imul cmp xor arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl push or gs jns push gs and push push pop fldl divb je add add incl push imul jmp jo sbb adc push jbe push imul sbb add add loopne,pn leave fisttpll imul pop push dec and fs add push push popa mulb push jb mov cmp add mov lock shrl jne jo xor adc lods inc fstpl (bad) and dec mov or mov inc inc outsb jbe dec cld mov outsl xchg (bad) imul and jbe movsb mov fs hlt pop mov jb adc jbe mov sbb jae negl mov les xchg jns popa and lahf stos jmp fs or mov and cmp push movsb lea sahf sbb int3 xchg fcoml or lds push in or mulb int inc cmp aaa and adc outsw mov fadds push (bad) or or push jns adc sub push icebp arpl or jne xlat adc test mov mov jge push sbb popl dec or jbe pop cmp rolb dec add sub pop push pusha jne addb fcomps push push or xor (bad) push and mov pop notb sub outsl pop dec sub test das or pop and test mov adc out push inc mov pop or dec outsb xchg adc cltd sbb mov sbb cmovno jne jl xchg push ficoml adc and push (bad) fisttpll aam add mov jb mov xor sbbb dec popa push lret inc sub imul push (bad) imul insb mov lret mov or add sbb push or int test mov push push lcall dec nop push dec adc adc jnp sbb cmp cmpsb pop xor mov or sbb data16 cmovl pusha je sahf ja jae xor dec insl rcr nop xor gs outsl js sub bound add jns jp sub push dec dec popf mov push (bad) jae cmp and pop stos in inc add dec add add or shl xchg add repnz fnsave add add loopne (bad) add outsl mov fsts add add mov pop or adcb ret jecxz pop cmp in add mov pop sahf lahf nop mov push or xor pop ss sti inc add inc and sub rclb pop orl rolb lea xchg in sbb add add add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add fdivl add dec xor add xor add add add add xor add xor add add adc add jge add sbb add mov add and add xchg xor add xor add xor add xor add xor add xor add xor add xor add xor add add add xor add add add add add add xor add add add inc xor add add add add addb add push xor add add add add add add je add add add or add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea push add sti fstpt fcoms cmp push push xor (bad) dec mov xor inc add cli jg mov mov int3 rep cmp xchg or (bad) fucomp push mov and adc jne add (bad) mov cli aas inc push mov adcb add add add es add dec push inc sbb ret int andl test mov mov sbb clc add or or push pop mov add pop sti push fcomi xchg dec adc rclb add mov mov or gs clc add cmp jbe insb mov movsb cmp or xor push push jmp mov imul shr push xor fidivl lret or outsl insb mov cmp dec je add sbb pop push and push sbb adc or rolb mov pop pop bound xchg sub test (bad) (bad) call jns outsl lcall push add add cmp mov fcmovnb and in jmp inc pop pop sub xor outsb or push push push push ucomiss sbb test fsub pushf sub inc inc and push mov mov das adc pop and push insl shll cmp je inc dec mov sub pop cmp push cmp scas sub inc adc and mov dec fsubr jo test push push daa insb pop nop sub add imul arpl xor add insb add aaa aas jnp inc pop insb mov jne push sbb lea add fstpl inc inc mov xor call sub mov xor dec jae jmp mov sub notb cmp and (bad) mov mov inc scas dec sahf mov roll mov nop insb push insb cmp xor dec and pop and mov and inc mov push or inc subl sub sbb mov loope add push push cs dec cmpsl mov xchg or xor je push (bad) xchg add pop adcl mov mov push push cwtl mov mov adc jp outsl and sbbl rorb pop push push pop pop pop add leave les in ret mov imul mov jnp cli jne popf mov aaa mov mov xchg add mov fcoms or mov dec mov stc and pop mov push push mov movsb jbe cld repnz (bad) fstps test jmp sarb xlat xchg push fs or mov mov clc sub push std inc sbb (bad) cmp sub idiv cld mov jbe movsbl leave and mov movl cmp jb pop jb (bad) pushf xor jbe sub fidivr int out inc cmp fisttpll add push enter xor xor pop push add add jle pop test rolb sti or add imul pushl stc shr inc inc cmp mov jb pop or (bad) fwait in lock ret lock fild loopne shr mov or add push mov mov mov loopne add lea jns hlt outsb mov lock mov sbb adc mov inc call add aam or pop mov mov jae mov or push lret and push call (bad) jmp shr cmc dec (bad) push add push mov insl ja mov jne cmp or lock popa cwtl sub inc cmp mov (bad) jge es xchg movsb cmp push fcoml cmc pop imul imul out jo pop xor xchg xor mov push jecxz rcr sahf sbb popf jne push push push roll (bad) (bad) in idivb (bad) jne push clc push (bad) int or sub pop fsubs sub lods fwait mov or mov arpl xchg bound pop adc std inc pusha sbb (bad) jne movb xchg add adc stos adc and xorb mov sub add (bad) mov (bad) push in adc sub cld mov sbb mov mov jns fbstp push pop andl add add lea mov or adc sbb imul push movb adc ljmp push cs and mov mov jne decb cmp pop or ds jae or jne push push jne or fdivl or add jne or (bad) (bad) jne add add bnd add pop popa adc xor fistpl call je sbb neg ja cmp jno imul loopne out lcall fnsave lcall xchg ror mov jne mov pop repz pop les clc pop sub mov mov movb pop mov cmpl mov lahf jmp clc add idiv jg jb or inc sbb push jo jecxz pop dec xchg adc pop mov mov daa gs adc ja lea movsl add shlb sub sub or xor or mov add pop jl cmp js pop or icebp or pop xchg xchg jmp sub mov imul mov and or add and rcrb push mov fcoms in jle std outsb push outsw cmp outsl jmp sub push pop jne and or cmp jne xchg std and in outsb dec cmp imul pusha loop in add outsb lock cmpsb outsl and test jle (bad) mov jb ret or (bad) sbb cltd pop adc pop pop xor js popa push push test fistpl xor jl mov xor and je test aaa sbb mov sub push add cli into repz pop pop daa test rcll inc jb test test call mov pushf jb nop flds xor sub jl shlb pop jb or fisubr pop mov adc out xchg push movd or pusha sub aaa into or fidivrl (bad) mov and mov mov orb and xchg outsb in subl and mov insb shll mov test (bad) push push mov mov in cmpb pushf push push lock inc jae inc lcall add adc mov mov (bad) fdivrs sbb xor jnp push jl arpl sbb les loope in sbb push mov lea jne movsl add cmp ds inc adc push xchg inc jbe cmp fisttp or push mov push adc inc or and xor jno sbb mov leave jl dec pop jmp inc (bad) lea push in leave and adc adc repnz push jne outsb fdivs jmp mov add xchg jp (bad) (bad) movsl fs je jl mov lods mov cwtl inc mov mov (bad) pop xor js mov es mov jg aam or icebp mov xchg mov mov or sbb dec notl mov xchg and mov inc fsubp jg (bad) xor push mov addr16 jo test faddl push adc dec je bound add clc or imul mov or and testb movsb push adc ret (bad) mov mov and push (bad) push test fidivl int add inc add or and cmp jne les sub movsb adc mov xor inc arpl xor lahf rorl xchg adc imulb lea mov fisttpl outsl fcmovnu push jle test and dec jne (bad) int or xor (bad) push fldt mov jne sub shlb jae pop pop mov insb inc mov add mov fdivl and jmp xor or xchg mov icebp shrb pop mov out jno repnz mov cmp lock in test sbbb leave and jbe mov mov fildl stos cmp lods push outsl mov (bad) stos dec mov out adc inc js fwait pusha dec sub and xchg scas dec mov (bad) push outsl pop rorb lea or lret mov or lock push add mov pop add mov mov mov and (bad) mov push test fcompl pop sbb fcom gs mov jno imul cmp insb cmpsb lock loopne push ss cmp mov loopne in mov jmp sub leave mov out push cmp pusha xor cmpl roll enter inc pop jmp stos movsb cld aad push test test dec daa jne xchg test jle pushf pushf mov cwtl scas dec int3 call xchg insb and in or xor pop jno adc in test sbb pop (bad) mov sub pop mov add or cld stos pop js rcl out es push lock xchg adc test stos mov or mov cld mov add add mov inc push sti sbb call (bad) sub repz dec jl mov mov rclb cmp ss pop les sbb es in imull or adc popa sub ficom and push adc mov aas (bad) andl lret jnp int3 pop imul cmp pusha dec incl or pop adc bound dec or adc leave adc mov xchg mov in pop mov push mov push mov enter and int adc sub push sub sub mov mov sub sub cs insl mov xor xor sub scas pop xor cmp pop xchg pop xlat cmp cmp lods aas or inc and inc or dec fstps dec cwtl dec dec and in lcall push aam imul int push push jnp pop pop xor pop pop int pop pop shrb dec pop push pusha popa scas bound cmp (bad) fs xchg lods imul fldt push adc insl rep inc fdivs xchg icebp mov je jo or mov call mov jl mov mov (bad) scas adc imul adc push jmp push push or loopne cmp out mov fnstcw orl jne jmp sbb xor cmp pop push sbb jo inc call and bound xor fsubp in xlat lea mov jae test inc sbb in sar arpl fmull dec pushf push sahf mov dec adc test add mov push cmp iret sub movb (bad) lcall cwtl imul sbb xchg add add mov and push enter cmp inc loope or sbb fsts mov and and cmpl dec pop xchg sub adc test or push fsubrl adc jmp sub into pop inc push sbb jbe add inc pop imul insl shrl push xchg jo or fiaddl aas mov fcmovnb rcll outsl loopne roll fidivr mov push xor jb sub inc adc mov dec frstor clc push divl pop jb and push fldcw in lock push mov dec push push mov adc scas lea push mov pop xchg push sbb push fcompl (bad) insl loope mov push push lock xor mov inc cmp sub inc in sub lds mov or add scas mov sbb or jo push adc mov pusha mov sbb and push hlt push (bad) jnp add mov cmpsb iret jb je test adc sbb jns push addb mov jo jo or mov push jbe mov pop push inc movsl mov xor inc cwtl pop aas pop enter aam mov fidivrl incl mov imulb pop jne gs fbld mov cwtl sbb dec adc divl outsb fs adc lahf adc fxch add leave adc pop or in or inc in add mov adc shll cli daa push xchg pop xchg call in inc or enter xchg xor dec cmc int inc lock icebp inc push pop repz arpl lret in push or stos push mov pop sub mov xchg mov and sahf jbe push and and sub dec rcrb cmpb jne adcb jne add add or leave adc cmpsb rorl pop xchg jg sysenter je xchg in pop hlt add or push dec push je in scas rclb mov mov pop lcall xor jbe mov iret movsb dec or push inc xchg outsl or add cmp jl sub xchg jo sarb ss inc or cmpsb cs fdivs sbb ret or pushf pop in (bad) xor es daa fidivrl dec push adc insb cmpsl out inc push sub push mov jge fxch sbb loopne sbb (bad) sahf adc dec cld jmp cmp or decl add movsl push xchg add rcrb sbb add mov clc mov in insl push jno push insb and jnp add addr16 jmp sub mov (bad) shrl cmp flds push push and pop arpl rol outsb jnp enter mov mov movd shr cli bound rcll add and push dec out dec fdiv and cmp dec ret imul pop pop add adc or aas mov sub add ja pop loop insb xchg or fmul jle xor and adc add xor add or mov or leave mov pop jo push push inc imul push mov mov push fs cmp (bad) je add add xor pusha lea push hlt push sti mov xchg mov rcrb xchg movsl popl (bad) jae add or add js leave cmp jno,pn adc outsl scas outsl jb insb addr16 mov dec or xchg xchg pop pop pop in inc sahf push dec mov mov hlt add xor dec enter in enter in mov leave rcl jbe adc and and push adc push inc sub inc sbb (bad) mov push or and adc xchg cltd lods mov js push test jo das jp movsb jne cli notl lea add add or push daa fstps sub sub icebp js mov mov mov and cmp loopne rclb adc pop hlt mov cwtl cs push sbb inc sahf je jmp in push in mov roll addr16 mov mov pop mov enter push outsb push iret pop outsl cld inc jo mov push sub add mov (bad) or xlat add mov push cwtl mov fcoms jne lods xchg sbb mov add pop push bound pop push adc into testb push jne lea movb shlb (bad) mov add mov add lret push push out or dec mov push push (bad) mov or cmpsl inc add push jge clc jae cmp xorl mulb and mov mov sbb mov leave or pop pop pop clc lock xchg in adc test sbb xor mov push mov sub aad decb fsubs stos add push or (bad) pop xchg push push xor dec ret sarb pop out xchg xor pop jb dec cmp push cmp in add das xchg aam add mov pop mov mov call inc or pop xor mov adc add cmc out pop add je xchg out xchg loop jns les data16 neg fsubrs xchg sbb mov sbb int3 mov xchg mov cltd sub andl fcomp cmp cmpsl aam jp xchg mov inc add shr pop cmp and mov fs push mov cs jl mov movsw pop sbb dec mov jnp fisub jne (bad) mov (bad) insb mov mov hlt pop shr js lea sub outsl fidivl rclb (bad) xadd push adc fistl je push in ss idivb imul push inc lcall cs not icebp sub cld xchg enter and mov (bad) inc sub aam lahf js adc xor sbb xor gs mov mov jbe mov dec les add pop xchg lret stos cli mov pushw add push dec mov pop sbb mov cmp sbb mov jge aaa sbb xor xchg adc ljmp sub mov xor idivb xchg xchg mov mov es ret pop roll xchg sahf stc mov xchg mov or fwait cmp cs jbe add cmp lret mov pop sahf pop lock sbb imul or test hlt cld enter leave data16 std sub (bad) loopne add mov or fist xchg cmp stc jmp mov add mov push push js add adc inc pop push pusha lock mov cmp jnp fisttp add lock (bad) pushf sub xor mov mov jmp sbb mov mov icebp sub or sub fisttpll push test in mov mov jne addr16 sbb ret mov dec (bad) movl outsb jb ss add or cmp add fsts xchg or and or sti iret or sub inc push add or inc int3 jle jno fisttp inc es (bad) enter psubusw or into push test lea nop or aaa in sub jge dec cmp into (bad) xor mov das xorl femms xor jge inc jbe pop and push push outsl add jno sbbb outsl shrb subl xchg rorb (bad) xor mov ret push add popa sub mov jmp popf pop aaa dec add cmc pusha mov pop test bound enter loope mov pusha inc mov jne pushl and adc push ficom das bound xor sub push inc or xor dec cmp int3 sub std sbb pushf pop test add rcrl adc or xor das add bound loope add xorb repz add mov popa rorl add test cmp mov jne push mov imulb lock or (bad) cmp push mov and add cwtl push cmp pushl les xor dec pop sub pop enter or adc pop and add mov adc enter adc cmp movsl fdivr lret pop add je or dec test jg add cld fildll add sarb movb push dec (bad) jae pop or stc clc movsl clc mov iret cmpb sbb movb je ret xor mov cmp jne jmp inc sbb pop mov cmp ss add insb inc push incb jb rolb stc aad pop idiv or adc push or das mov cld mov cmc mov int and pop loopne or cmp sub push idiv sti ss mov adc mov inc mov xor lea (bad) out push push pop xor jbe xchg xorl cmpb fbstp and test test lea andb cmpb jbe xor shll dec push shrl push ljmp sbbl jmp push inc push inc cmp cmp or (bad) push fcoml push jb adcl pop cmp test stc std clc std stc repz push lock movsl movsb push loope jae push push or jo (bad) adc cld in add cld in in rclb stc adc in cli in cli xlat inc inc js (bad) xor lock jb xor std sbb sub and std (bad) mov and and adc inc (bad) jne xor dec mov pop lods push outsb or or push clc mov cmp test push test faddl shlb push dec mov sbb mov into sub mov xchg cli add sub stc pop test leave in pop inc nop into into into and push and sbb push call repz pop out mov push nop sbb inc xchg mov xlat inc stc sbb out scas nop js or pop dec add jo pop repnz mov dec clc cmp xor mov pop out adc pop pusha stos sub test mov sbb idivl sbb iret and xor in or test mov xchg xor dec insb jb sbb push lea and ret dec imull inc push jns je mov loop clc jl jle inc mov and popl in xor mov jo add cmp mov lods or jle loop push push sbb inc mov add push dec cmp xor adc mov push dec clc jne push mov cmp pop iret dec inc mov jae movb push out push movsb dec fcoms push nop adc sub in mov mov pushl add push adc loopne addl scas add in xchg cmp mov xor xorb sub cmp xchg sbb cmp mov or or test add mov sbb cmp mov or (bad) clc sbb cmp adc (bad) aas jb scas jb inc xchg adc pop push xorl dec push and call lds subl popa test call nop imul xchg mov mull mov nop fwait ret push xor mov notl xlat push test in xchg js xchg dec jbe sub jb inc push stos add jnp sub pop jmp sub jl je arpl in js sbb pop mov lcall inc xchg insl sbbl aam mov mov jge cmpsb mov mov push pop (bad) or push push add pop lods fwait shl (bad) or dec gs movsl faddl in cmp add inc sub jecxz adc mov scas lock mov aad je add lds ficompl loopne adc int (bad) lock mov and jmp inc movsbl testb dec mov aad inc mov std call adc shr or or sti pop in push sub (bad) sub neg push call jmp ret ret adc adc insb loopne enter or add adc mov add mov cmp hlt and imul je pop fs into push pop leave adc or and xchg cwtl data16 and dec pop mov fcmovnb sub jnp ret lods call loope adc push fstps inc imul mov and push mov jmp mov lcall gs mov jg inc xor sti enter cmp sti push adc pusha (bad) dec pop fdivl inc mov pop cmp jg pusha adc add icebp mov mov gs scas fsts adc leave jb call sahf ffreep sti (bad) sti mov mov inc nop xchg call adc inc sbb das xlat push xchg sub pop mov stc mov cld sbb jg mov cmp or push pop jmp test decl jl lea mov add push push dec jg add sbb aaa jns lret mov push imul insb nop (bad) enter movsl stos jg aad pop push or mov mov add (bad) das mov push test or movb fdivr out add add je and jecxz and in vmsave incb pop ficoml mov push add jmp pop cli out jbe test jge sbb push ret and push in pop sbb mov imul xchg hlt aam or or dec add push das dec ret pushf dec sbb leave lock lods fcomps mov call inc out jle lock lea mov bound xchg mov ja mov and je,pn dec inc mov xor inc xlat lock inc xor pusha mov popf xchg or mov shlb jg jp mov pop incb pop pop add ffreep push xor mov push sahf jmp inc je adc cltd xor loopne ds cmp and nop cmp mov mov andl xchg push mov mov cmp sbb (bad) push jb (bad) xorl fmull cs pop aam mov mov pop xchg insb pop add out and lods lret aas push pop mov mov push pop mov jge decl mov push lcall out test cmp dec test jg mov inc mov mov push sub (bad) in std lods sti adc lock add cmp mov idivb cmova cli xor sbb and mov and xchg jmp sbb xchg and dec add leave push adc daa xor roll add mov jle inc push mov aam cmc push popa popa orl dec push jl (bad) (bad) divb mov xor inc lcall subl icebp addr16 lcall jb or cmp jb and mov mov xor cmp push sbb stc and shl add mov xor imul sbb cmp outsl enter add js shr shl add mov fstpl outsb add jbe sub mov inc clc ljmp mov sub dec hlt lret fisttpll jmp ss out inc pop sub (bad) add jmp rorl xchg mov push adc add std movsl in lret lea inc (bad) lock dec or inc adc les mov adc and rolb std add out dec or inc jne cltd add scas test leave push and loope (bad) cld inc add mov mov cmp cmpsl mov jae sbb adc push mov xchg xchg or lret faddl adc mov cwtl xchg (bad) leave mov and lock mov jo sbb enter je pop leave push sbb sbbb lock notl jl push lods lock dec cmp cs lods mov pop std inc pop push cmp mov add mov add lret shlb dec mov ret and mov push push lret push and (bad) and pop mull decl sbb (bad) push movzbl dec clc mov outsb insb fisttpll add jl and notb push test testl aaa jae sub push lea cmp popa sub jnp mov jge subb mov nop sbb nop pop jecxz pop add cmpl fstpt loopne pop jg mov sub sub dec and pop adc mov sbb or sub push je,pn inc mov sbb ja ret testb rcr orl (bad) cmp mov or push sbb fcompl mov notl addr16 sbb adc push xor jae pusha shrl xchg xchg insl jnp dec scas cmpb adc or test xchg push mov xchg loopne fstp sbb xchg xchg dec je clc xor clc lods jg push stos outsb inc cmp pop mov jl ss out push stc shrb jge cld (bad) cli pop jle je insl jmp add dec std ret mov mov mov push jge stc int inc mov mov test sti nop add adc or add repnz fnstsw pop inc cmp (bad) data16 xchg mov iret fimull mov and (bad) jl pop out sbb repnz cmove push mov les dec fstp push ljmp push mov in adc (bad) mov and sbb (bad) mov lock sub sahf cmp jno or sbb mov inc (bad) adc or pop push dec push pushf push nop je sbb outsl sbb and inc or negb inc cmp sbb adc popa mov movsl leave inc mov cld das and sub pop push sub mov xchg jns jne jmp add add fnstcw cld nop push jne mov push jne and mov adc mov mov imul je push andl pop push test in mov push pop fcmovnu xlat inc add daa lret dec clc inc or xchg shrb jns xchg test xor mov in dec inc stos xchg dec mov inc jns decl (bad) rcll js lahf sbb out mov xchg lods addb push clc clc fidivrl test mov test xchg mov outsb frstor lret inc dec shr inc ret lea addr16 mov push popa insb sub mov or cmp adc inc imul hlt dec add sbb mov inc loope shrb fmull push xor (bad) not mov mov sub clc or icebp jo call sbb bound mov pop xor inc pop aaa xor fistl jne enter jmp and jmp aas fisttpl xlat sbb jns add sub jmp mov mov (bad) jbe push std sbb or jle dec into xor xchg std imul or xchg jmp fdivs add push test je mov fildl in or int3 mov insl pop shll outsl mov leave fstpl call pop sarl jnp adc push add inc scas and mov lods loop push inc aad pop movb out xor lock push movb in ret mov jnp inc adc fistpl movnti add dec outsl aad clc adc sub dec xor inc xor insl js add or push enter fcoms push mov mov movsl mov dec pushl js mov and and test lahf scas jnp test cmp fistl push cld sbb add sti addb dec aad rcrl lret inc dec cmp xor and sbb and push in add inc cmp or scas movb and addb or leave dec enter cmp je mov loopne cmpsb cld insb and push (bad) adc add push push and add inc inc jmp imul push cwtl orl outsb and xor mov inc and xor adc xchg in jne mov sbb inc sub js xor add clc push int inc adc adc (bad) xor out ljmp and insb mov inc and or je pushf xor xchg push rclb sti inc loopne xor xor jle add or movl lahf add insb pop or lds push add and mov int3 push pop leave imul pusha xchg ja pop jne out movsb jns je in mov imul imul cmp mov or aam xchg ret push out test das enter mov das shrl xlat das dec aad aaa loop pop adc mov scas add inc or pop adcb sar loop sub push inc sar push or jle movsbl inc jmp fidivr or inc cmp jle and fdivrl cmp push and inc fbld mov scas (bad) int3 adc dec bound (bad) sbb in add mov jge add cmp mov or and jle rcrl xchg or ljmp inc add js bnd mov test rcrl inc imul jno imul cmp fcomps mul seto neg or push lea push das push (bad) std and xchg daa push mov inc push and mov sahf xor rcrl cmp pop mov dec jb out out loop rol push inc adc sub pop std push call xchg and adc div ret cmpsl ret enter cmp mov fildl daa sbb pop lods pop shr fistp ret imul cltd sub (bad) clc outsb imul or jge pop in inc and add lea into or mov pop push das movsb pop inc lods cltd add popf adc mov lods cmp and mov test cld cltd mov mov popa add xor imulb mov jl dec mov dec fisttpll add push pop mov addl adc loope es push mov pop sbb add push pop sub cmovae jne cmp pop in cs or into pop notl mov push pmaddwd pushl lea cmp je push pushf fmul pop shr movsb cs lock fnstenv mov sbb (bad) push pop or imul inc or in loop pusha dec mov test push outsl xor dec adc inc mov push xchg jae fmuls ficomp mov cmp inc inc inc sbb icebp pop pop fildl (bad) mov in clc sbb fadd add divb (bad) jne shl dec imul out lea mov push (bad) jl mov imul push xor ljmp jg push or dec sub adc test or aas inc pop lock (bad) fstp push cli and dec inc or inc test js aam mov inc ja cmp push adc mov pop (bad) (bad) push mov into lea loopne stos dec (bad) jbe test test push mov dec inc sbb mov mov mov fisubl int mov (bad) mov dec inc mov ret rolb add fsubs ja mov add mov in dec in mov ficompl sub loopne fdivp (bad) cmp jne mov cmp jne in inc in jb fistl sbb sub adc fdivl call call pop fldt decl sbb jbe dec (bad) dec popl jge jg inc or jne sbb or es add sbb ds cmp insl in outsl ja movb inc push shrb in or and push (bad) int3 gs or or jnp add sub xchg out ja (bad) clc pop jmp cli lret add (bad) cmp jne cld or and cmp jb fsubrl inc pop adc popa push sub fwait inc sub ljmp xor mov inc dec loopne ret pop fiaddl sbb fisubl mov lods pushf jae (bad) cmpsb aaa fdiv orl mov jb lods jmp idivb loope jbe cmp jae mov sti xor mov push or test mov or mov in push sbb sbb xor movb push pop mov arpl sbb pop in inc dec inc and hlt dec in test xchg in pop clc xor fcomp adc or fidivl dec add push pop sub pop mov mov loope sub push (bad) dec in (bad) in das mov cmpsb or adc jne std in cmp pop add mov fxch xchg icebp pop lea fs mov lret pop outsl imul xor hlt mov add in in loopne pop orb fwait mov outsb adc push push repnz sbb mov mov xor inc dec mov xor pop (bad) sub pop xor or data16 jae inc jno mov push faddl sub test ja inc jmp lea clc lea jnp xor adc (bad) outsb aaa push jbe cltd sub cmp cmp and and int fstpt inc jb jmp push add adcl adc jmp and aas jb (bad) mov push mov mov adc push sbb rcr out push lret lods xchg fildl add fdivs ljmp add add cmp mov (bad) lods push aaa negl sub mov fwait inc test aad pop pusha imul (bad) mov insl jae or mov jnp mov leave mov add or bound xchg jge mov rorb mov or or stc in mov pop adc roll lret in lods lret xor ds cli fidivl sahf lods mov test mov push lcall push cs inc mov jle inc jle cmpb and dec dec aam add xor push fistl cmpsb pop je sbb inc sbbl push sbb out or mov jge bound pop push mov or lods call mov push push orl je mov aaa inc insl fs mov icebp push cltd pop push lea xor mov cltd sbb (bad) jp idiv mov add in or nop mov test cmpb iret dec adc xchg mov mov adc and inc pop incb sbb adc mov pop pop jecxz adc add jne or sub jb and testl scas pop or inc shll flds add or and jg popa mov sbb aaa pop and jb inc push dec mov inc ljmp jge push adc adc adc mov sbb adc xorl int push lcall mov dec push dec sbb fadds jne cmp pop jb mov cld cmp push sbb es push pop or pop (bad) xor push js pop int3 and and sbb xchg sub mul pop fwait xor imul pop pop push mov pop (bad) sub leave push cvtpi2ps add mov and pop cmc add pop push cwtl arpl aaa dec xchg mov ret mov stos push xor adc add and or jo ret mov push inc or adc cmp jl push sub aas sbb pop dec jns push mov cmp jle sbb add push jae mov pop xchg (bad) loopne lcall add insb mov xor or push test mov or add cmp adc mov push xchg lock pop and je or add cmpsb icebp push fidiv and sbb mov cmp add and ja outsl incl or cmp push sub inc mov les pop xor movups lods mov or decl add add imul aam push mov or les je pop push inc loopne mov (bad) mov fsubs lcall inc arpl xor push cwtl adc into mov adc je adc mov jns pop mov clc and insl push jnp jne dec sub dec or or push push sbb adc fpatan insb and dec inc jo pop leave test (bad) dec lock rcrb or pop add adc add insl xchg add fnsave push push out add or in fdivl icebp fs push cmp aad jge pop push push lcall ja pop insb mov mov jl jmp mov xchg push insb mov popa or fidivl shrl add push mov push mov pop rolb (bad) movb pop je xor rolb xor mov mov xchg cmp mov mov and pop loop mov adc push cwtl das mov (bad) fs js ficomp testb and add paddsb mov add mov push push jo add push push js add (bad) mov adc fldl ret cltd mov outsb ror into push push mov shl or adc and xchg sub decl rcrl iret adc (bad) xor or jmp adc ret cli or jmp and cs and fldenv into add pop fxch repz push imul ds cli add mov idivl dec adc add addr16 mov std pop pop shl or jo dec mov orl inc adc jo inc or inc adc xor sbb and sbb push or gs or (bad) outsb mov xchg aad pop or add (bad) xor push scas push or scas test lods push sub clc jae pop push cmp push push mov jl movsl call mov nop or dec ds clc sbb inc fdivrs mov das xor adc (bad) mov ror jo jg sbb mov int3 xchg test popa and inc mov push inc shl push xor cmp bound int3 int pop dec push inc loope mov add (bad) sub fadd imul push roll dec bnd call add or insl cmp push push jl pop push push sub mov dec stos mov jle cmpsb lea sub sub push out adc xor jae sbb push xchg xor pop or xchg int3 (bad) cmp insb sub or je jb pusha leave inc lods cmp (bad) je inc jmp or bound pop jnp ret dec jge imul test push and enter and jp jp push inc add mov pusha les push arpl jge and xchg lods add daa in sarb adc mov pushf push adcl stc (bad) or imul mov fisttp mov (bad) out (bad) stc add xor or push pop lods test or sti ss pusha test jle je add cmpsb clc mov dec fistpll (bad) or cmp push xchg ja jo mov jge or pop or fdivrs push pop sar inc adc enter sbb movswl inc adc jnp rolb pop adc pop or ret aas sbb stc outsl call mov nop sub jne aaa call dec aas mov ja mov outsb (bad) add push push je add xchg aad loope rolb imulb adc out cmpsl sub inc or test adc jle dec add pusha rclb std loop test rorl (bad) jbe push hlt pop add adcb enter and (bad) xor mov pusha cmp adc (bad) and push mov imul faddl pop push adc mov dec push movsl dec push pop mov xor push sub push adc mov test push adc add dec inc jbe mov lsl xor clc mov sbb (bad) push jo rcrb addr16 push pop pop xor pop enter lcall and add in pop lods cmpb and pop inc add ja pop cmp adc fdivr or mov sbb int3 mov mov mov dec aam sbb or cmpb mov lret add sbbl bound shrl push xchg add mov mov rol dec rcrl inc push push xor aas cmp jl sub cmp imul push popf pusha xchg sbb jne popf or mov mov imul shl inc sub xchg mov repz (bad) mov pop or adc cmp (bad) lods jle mov adc ret ljmp jp scas mov jmp pop fmull mov xor xchg and push adc or or pop jmp push mov out out enter cltd or inc or jge insb add bound sub ret fildl sbb cwtl mov dec (bad) es cmp xor or ljmp call jl ret jnp pop push ret inc or push cmp sub mov pop test sar cltd stos jg mulb jge cmp xchg jne mov mov dec fiaddl cmp popa out push pop inc ret ja jne ja enter incl pop mov mov sti push dec mov int je push test vmovups ret dec mov leave push xchg jb cmp lea outsb dec les push adc adc mov (bad) mov adc pop inc push push push or pop xor fs enter push or js dec (bad) cmp jg (bad) adc out cmp xor dec jne pop mov ss push push mov shlb sarl scas aad and adc pop mov int push shlb or cmp in (bad) cli sub mov push mov xchg xchg (bad) icebp ret repz add and sub test sbb sub xor fstl stc cs jl sarb adc sub xor mov mov dec arpl mov jg mov nop add or push jb mov rolb rcll ret jae pop xchg xchg jmp int3 int3 push test jecxz cmp cmp lock jg mov push cmp jne inc fldenv add inc ja out fwait sbb sub mov pop pop fldcw pop pop pop sbb push mov inc daa push sbb add inc mov popa fisubrl mov cli jb jb loope test add mov push lods fsts and dec push jecxz stos mov ljmp inc pop call lods cmp jne sbbb div and pop jne push orb (bad) (bad) (bad) dec pop add dec add mov andl rcl (bad) jg int cmp jbe jecxz stos inc jmp jecxz stos movsl cli out inc xor insl pop jecxz mov test incl fucomip out dec sbb lods mov cmp cmc dec mov jbe pusha fldenv mov mov and lea xor or jbe je xor push xchg add mov loope and repz sub cltd test fistl inc fwait mov add push inc cmp loop outsb dec add cmpl call jne xor (bad) and adc ljmp pop andb ficompl js (bad) mov test je mov xorl xchg push mov arpl sub cmpb jne adc or test jle decl or insl mov or jge (bad) divl add je negl adc push clc mov push pop or out mov push mov sbb push inc pop cmp mov xlat mov rorb or jne jmp ss cmp pop fcoms lret jno adc fimull mov inc adc push push adc push fstpl push jle je leave outsl inc pusha outsl push jecxz jne test xor cmp mov sub fnstenv es or push rcrl adc mov and adc sysexit in stos or add je xlat and (bad) mov cmp dec bnd inc mov lcall push push sub call xor daa adc pop xor or xchg or pusha addr16 enter sti adc cmp std add dec push xlat push dec push (bad) sbb cmpl push push push bndstx or mov or lock std dec faddp jmp subl cwtl inc out mov add adc pop inc and lds and or adc gs xor lds push scas mov and xchg insl sbb adc and roll js mov (bad) pop aas subl loopne dec inc repnz jmp cld test jmp lea fcoms adc and loope in (bad) into mov and xchg das mov in sbb cmp push or pushl cmp cmp push or aad pop add pop sbb pop sub adc stos mov mov outsl sub pop cmp popf push loope jne test outsl in sbb jae push in fld mov inc test sbb fs aad jno jne pop mov cmc jge jge add sbb fisubr repnz or (bad) jmp leave dec xchg in imul push out cmpl adc push loope insb xchg cmp mov push test and push je xchg addr16 aas or lea jp das das outsl or sbb je inc jle inc jle mov test jmp push pop jmp inc clc incl bound je dec jne push lds jge ret adc lea lret pop mov cmp pop mov insb inc jge mov fsubrs lds aad bound jmp inc aam xor lea mov pop lret jbe jmp jbe je add aaa jb add dec push cmc add mov call xchg invd jne push push push xor pop jne stos push jl mov pop jne gs shrb add test mov or je roll cld sub or and in jge (bad) inc fistpl or cltd into dec aad cmpb mov dec mov icebp outsb fwait cmp aas mov or pop subb fcoms fimul mov xor out push or (bad) xor aam push aad inc loope stc pop outsl sub lods jno push push mov adc test fsub sbb push insl adc inc mov rcll xchg or jb cmpsb jns orl (bad) or test or inc cmp xor or das push ret test xchg sbb dec dec jp mov add or int inc rorl fstpl test cmp addl incb sub xchg test fldt and jae push add test cli (bad) adc (bad) out mov jae dec cwtl hlt out xchg insb adc adc sub orb jae rcl fcomi mov inc fildl push fldl fmull mov fwait aam bound imul cmp test in call nop roll in add fmul fxch inc in add fmul mov or fdivl fsubl fldcw sahf gs lods xchg jb sub sbb (bad) adc and mov push aad aaa mov imul dec (bad) sarl insl out pushf (bad) test fcmovnu leave jne mov mov ficom into add lcall sub cwtl fldcw mov push and sub add aad sbb add loopne pushf push jp sbb in insl dec jge and mov cmp cld mov decl scas (bad) (bad) in add adc sub movsl mov inc enter add and inc jb ja xchg add call (bad) sbb pop or fsts mov add xlat pop mov ficom jbe fcmovne neg sbb out push repnz mov xchg and mov add or fldl movsl stc cwtl push lcall sarb bound inc push cmp sub pop xchg adc xchg fiadd or pusha daa inc add cmp test pop mov mov inc fisubr loopne lgdtl mov cmp loopne fstpl inc fcompl inc loope int3 in fcomip lods into fisttpll dec lret incl pop inc into outsl fldl (bad) (bad) je jecxz je add add or sub xor push sbb mov dec inc add mov pop mov insl dec dec js,pt adc pop adc loop jmp or ss push and jne xor mov mov cmp je cmp je sbb or push push jo insl fsts daa and add mov and fldl nop add adc sbb sbb inc jle push add jp pop jg push outsl push xchg mov push xor fildll adc sarb xor fimul cmp fiaddl outsl ret inc cmp jb mov pop test sub mov add sub jae out mov inc pop movsb and jbe ret fimull outsb push clc movb mov lds lahf cmp pop and or pop and fsubl pop jnp xor cmpsb cmp mov sub or js pop push push insl pop ja push jmp xchg sub ljmp mov pop jns add adc movsb and mov add sbb pop cmp lds sbb push ss and andl pcmpeqw inc stc jne jmp or imul jb jne jmp rorl mov into dec movsb pop or push sub (bad) dec out or mov (bad) mov push push lea cmp mov popa lods fmuls inc sub xor inc xor push in mov cld mov (bad) and call pop adc jmp test adc rcr jmp es incl aaa int3 add cltd xor sub ret or lock fmul or loope cli fldenv mov icebp repz adc mov dec jg adc add or outsb in aaa (bad) mov or adc push or mov push pop jmp test mov out mov xor mov sbb int3 outsl repz add mov out cmc icebp push jmp push adc pop int adc cmp and in outsl call aaa or or or xor mov push adc cs ret test imull inc mov decl mov call cmpl mov push add push les push test pushf adc dec add lds cli sti add mov jg cmp push ja int unpcklps push shr and add lock sbb jle add mov insl imul sarb and cmp jbe loope stos adc (bad) pop (bad) jmp movsl (bad) lods loopne xor or xor cmp out cs dec stc jmp push and jbe fstpt int3 sub cld add sub or outsl ret or inc ljmp pop lods push loop dec fldl2e mov (bad) fsubr sub ret rcr fstp adc call or repnz inc int dec fidiv push push mov and xchg stos aad sbb sub int3 add stc cmp or test std push fnsave mov xor je xchg or cs xor cmp dec cmpsb push sbb jno ds cld loop add sub scas mov jb xor cmp pop pop mov mov pop imul dec les roll lret dec out mov dec inc ror imul xchg pusha dec leave add (bad) push jbe int int3 mov mov in and inc mov aad in push adc daa mov jo cmc xor call push pop jne ja dec add mov pop pop movsb inc sub sbb aam pop pop add sbb add lock xchg xor and inc ja pushf addl mov nop add and jo movb pop fs (bad) movsb push mov cwtl cmp mov hlt dec push ficomp ljmp or ret decb push aaa mov jp cmp sarb or jne push add push cmp cmp jae cmp je call inc jo push fwait lods or pop das adc adc xor insb jo mov pop sbb aaa stos or mov dec loopne push (bad) sub mov cmp mov jb subb jne mov inc dec push push icebp mov xlat push mov fs jp mov jnp sub add push push push and push test dec or or lods lock cmpb call dec aas data16 adc ds bound xchg fwait xchg je jae cltd ljmp dec cmc sahf clc dec jl push arpl xorl inc push inc xchg and mov add scas pop das mov mov ljmp leave popa fsubrs inc sub mov in rolb cmp stos mov xchg in imul fdivl (bad) movsb stos adc mov push push daa (bad) adc mov jne and sbb clc lahf sbb in lock pop mov cltd imul xor and fistp xchg mov or jg jnp mov das fisttp jb pop (bad) nop in sahf pop movsl push test (bad) jne fbstp add mov lahf jp pop push xchg push xchg fcmovnb xchg aaa jbe (bad) ret or (bad) in adc inc ss fsts call call inc push jp rolb mov inc loopne jbe test xorb mov fldl or add push mov sbb pop adc test clc or cli decb sub cmc pop outsb push adc xchg pop ret movsbl into mov dec jmp mov or adc adc mov or imul dec mov (bad) ja scas jmp scas jnp outsb add incl dec pop ljmp (bad) mov dec push dec xchg push sub cmc pop js sbb jg mov mov mov mov dec clc fldt sbb shl add mov and push and mov and push js mov sub sbb out test pop imul adc add and dec mov addr16 and push mov pop sub add push cmpsl pop mov sbb or mov inc add cmp cli cli je sub push jbe push push std push decl add notb mov mov push cli pop fisub jbe pop jmp mov mov mov inc xchg popf adc jne inc dec add les jecxz push data16 sbb mov cmp push mov sub stc add adc negl paddq and xlat orl push sbb pop jmp cmp push or into add pop in push movsb sbb jge scas fs or rcrb mov xor cmp fidiv popa add adc and mov xor call jmp dec adc sub ret jle lahf push mov pop mov inc mov jmp aas push adc pop mov xor int3 add inc out push adc jmp add outsb lods cmp xchg movsb push adc jnp aad push add pop sbb jg jge add movb dec mov push adcb jg sub add mov sbb pusha add push and adcl mov pop adc ja xor cmp and (bad) popa xor aas or inc mov add mov xchg lock and add pop mov add xor or or test (bad) das cmpsb inc push cmp (bad) jmp adc outsl adc add pushf or jnp movsl push xor jecxz add jp xchg cld (bad) std or xchg lea jae enter add popa add adc cli mov xchg les mov fildl (bad) orl jnp push mov mov xor xor and ret pop sbbb sbb cli xchg shl push nop (bad) imull sbb cmp xor jecxz inc mov test jne jmp lods push mov int inc mov cmp je xchg mov shlb and add mov sahf cld dec (bad) lock and add push and inc pop jne pop pop mov subb je ja push mov call adc mov (bad) decl push inc mov push inc cmpb loope xor mov (bad) or dec inc and je out lcall scas xor stos mov add adc push adc cwtl adc mov hlt nop (bad) push add mov mov or ljmp mov or adc pop jae pop out sbb adc lock push rolb add push mov (bad) and push or lret cmp add stc jo adc xor push bswap mov arpl inc ss loop cmp cmp hlt sub xor sarb add nop sub leave into or pop push loopne mov xor imul mov cmp addl lahf nopl inc dec fmull xchg cmp fsts out xchg jbe outsl xchg popa inc cmp ja pop hlt add adc fcomps and sub outsb lods (bad) lret push sub adc inc mov adc xor or push dec mov jge faddl sub sub iret insb loop (bad) pop icebp mov push (bad) fs jae test mov (bad) stc fistpl add fiadd inc jne fidivl pop mov add aad scas xorl mov cs add jae jg test ficom std push loope fmulp sar and xor or jecxz je loope scas es es add xor jecxz rolb jp adc mov test cmp pop add mov sbb cvtps2pd mov push pop mov xor idivl mov inc pop ret leave fist push adc (bad) jbe test (bad) pop inc es cmp sti mov add inc push fmuls pop ret pop arpl (bad) incl rcll pop sbb pop xchg es add jecxz fisubr adc xor pop jmp pop add cmp je add mov jmp fcmovu rcr push sbb cmp cmp and sub (bad) pop jne inc shll leave mov adc lret repnz mov insb mov ret jmp sub pushf adc mov repnz or add shrl mov loope mov mov outsl incw data16 or xor add movzwl add and mov jns inc push pop sahf jmp lahf dec pushf rorb xor mov push or stos mov inc add and mov push pop cld call or add sub mov and movsb stos xchg (bad) sbb invd and cmpb pop clc xchg addl insl and xor insl mov adc add dec bound and and add inc dec dec imull mov inc inc inc and and jg das add cmp nop inc (bad) stc and mov mov into push or lret pop adc mov mov mov inc rcr jge jp nop stos ds push inc dec adc int3 out seta pusha sbb data16 adc jmp push sti out adc movzwl xchg cmpsb enter jns mov iret fistl popa dec mov in inc or or push pop add outsb (bad) mov jmp pop ja push sbb pop ljmp repz iret lret inc inc popa in fxch push inc sub fstpl mov icebp cbtw adc fdivs lods xchg fcomps adc jg dec inc loop sbb neg sbb xchg xor leave not jg xor jge xor je jns sub sbb dec inc shll insb inc xor sbb clc fwait je or pop mov or or cmp in cmp inc or or jne lods stos ljmp cmp or fild jle cwtl rclb cmp cmp push inc rcll fcmovnu das jne pop (bad) rcl fldl insl imul adc outsl cmp push jo cmp mov cmp jmp add add xchg cmp or and inc aas std dec rcrb out lea je or incb xor sbb inc inc add add enter add out and add xor andl sub cmp (bad) dec pop add out mov aas loopne idivb sub push cmp dec sub or mov jbe (bad) shrb shl or jmp leave and mov add jg jne sbb int3 dec test call insl adc pop hlt mov pop popaw pop pop addb out fwait adc pop or inc jge ss in push add imul (bad) or daa push insl sbb adc add or cmp test push int and push push faddl xlat int inc fstpl mov xor mov jo mov add and jo int push add or nop xchg pop aad outsl add lret add dec pop out lcall popa cmovae cmp ss xor mov add sbb mov add sarb je and jl add je aad or sbb add test iret (bad) mov inc adc mov pusha stos sbb lods stos imul mov test sub fs and xor fisubr sbb push rcrb into sub xor hlt adc dec idivb icebp pop sbb test push daa push xor xor push xor xor dec dec inc inc xor xor cmp xor xor xor sub and xor xor sbb adc fs mov pop pop pusha fs in inc popf jge mov mov mov stc jl test nop mov lahf iret out mov mov mov mov mov sbb jns lods mov and fldt fs and and int3 rcl and and fcomp loopne and and call and and cld add inc mov xor xor xor xor fs sbb fs or fs add xor cmp out enter mov xchg xchg xchg xchg je insb xchg mov imul mov enter (bad) sarb mov bound mov fstpl push mov cs insl add imul pop inc pop pop lahf aas incl pop pop push inc dec push inc push inc dec dec push (bad) dec push push jns je insl push outsl outsl je and mov push pop and pop push inc dec dec push popf int and outsl and inc dec int cld stc pop push dec dec dec inc dec dec dec xor push push rsqrtps jle gs das add cmp push fucomp (bad) dec push dec push inc pop push mov outsl dec inc (bad) add orl dec pop inc inc sbb sub btc push dec dec sbb inc dec push dec cmp dec dec dec dec push dec rcpps push dec out (bad) jl addl dec push jb fs je xchg out push inc push gs imul in (bad) jne jb outsb je inc dec popf mov aas inc jne insb fs jne bound sbb jnp adc popa bound outsl dec dec popa fistpll jg inc push push inc rcrl arpl jae data16 inc idiv pop push imul dec push pop jno push inc sub mov inc sar sbb jnp dec dec or inc daa inc addr16 push loopne dec inc dec jo jmp aas in ret popa push pop inc out insb push and add fdivr imul outsl jne jae loopne cmp aaa push inc inc dec push pop inc inc push inc inc xor or iret mov or or insb outsb imul pop in sub repz data16 sub lea cmp insb jae adc ffree fwait or lods insb add (bad) fmulp int jns jae je imul (bad) jmp xor xor xor xor and xor xor adc jecxz cs adc add add cld out cwtl xchg jo inc popa je add arpl shll jne sub cmpsl movsb sub (bad) pop inc js insb outsl adc push push inc outsl lcall sbb (bad) pop gs je cmp inc jno repnz push push push imul sub packuswb pop jae nop mov inc aaa add jg inc stos push popa jae mov imul cmp (bad) sbb xchg or popa fs mov outsb call push jae mov imul jns je xor (bad) xchg out ds or and push inc push xor (bad) sahf roll dec movsb push outsb jnp mov outsl or mov xchg push lds inc and (bad) in or mov fs mov iret push push inc inc sbb push inc es addr16 and push push dec or lret mov aam arpl inc sub or and jb lea sbb fisubrl push fisub imul mov xchg je cmp dec sbb outsb sub jo arpl mov push xchg sbb dec out push mov mov cwtl insl lahf je je jo ja add jb jns cltd adc sarl ja xor sti pop mov add sub and outsl imul sbb fidivrl test push push inc outsb pop fldt pop and cmpsl mov fdivs (bad) and fs sti test xor je cmp rcrl sub dec jle jo popa dec mov push adc push inc pop jae xor (bad) mov sub fsubrs jno js sub icebp or xchg fwait popa popa inc jmp inc testl out ficompl inc test push jp pop add push (bad) push jnp pop fildl inc out popa mov (bad) ja (bad) push jne addr16 pop insl popa push pop popf rorb addr16 push leave sub jne mov pop out outsl xor fbstp je push pop pop xor popa jo pusha pop ds packuswb sbb pusha dec addr16 insl lcall pop imul or or nop lods je (bad) push dec arpl xsavec stos ja and test or jae jl pop pop push inc inc dec dec dec dec dec adc or mov pop pop lret jno outsl lods arpl jl imul jno pop loopne jle jne ja jns xor xor ss cmp sub jnp aaa (bad) xor imulb add dec jbe pop mov pop ja pop xor jns aaa out sarb je inc cmp add xor cmp mov xor pop sub sub gs or test sbb mov loop imul pop cmp mov dec stc adc push xchg pusha lock pop add add sbbl (bad) mov jae arpl jae and jmp (bad) and or pop and sub fs mov xor mov lret stos xor sbb cwtl push add (bad) adc pop adc inc outsl ret rclb sub mov jo mov jns gs inc xlat rcrb cmp arpl mov dec js ja sub push pop insl or insb inc clc ja frstor or or xor notl cs pop pop cs arpl mov imul ret (bad) mov inc sbb jne fisubrl insb cmpsl cmc fsubl xor call jns add and jb add andl (bad) and or and sbb adc cmp jnp (bad) jp jb and (bad) pop lea mov sub ja fisttpl adc sub outsl dec and pop (bad) xor inc (bad) arpl into addr16 (bad) (bad) clc call in loopne loop in call in jmp and int in mov jmp icebp in imul call sti cmc push out jmp in out and sti repnz movsb jbe lret and jmp cmova imul adc adc ja sub push ss cltd add and mov push and test ds jmp cmp inc push pop inc dec jl lea or dec pop push pop jns das add jbe push ja push arpl dec outsl jbe adc and pop mov mov adc push insb popf xor scas data16 pop adc insl outsb mov cmp call mov arpl push adc es add pop cs das fsubr in inc xor inc pop dec cmpsb stos fnsave xor or sbb cmp mov clc mov lods push sub xor push loop cmovle push aaa inc ja aaa mov inc and pop add and pop inc out mov in nop std pushl mov iret adc mov mov pop xchg inc mov enter hlt jbe xchg in pop das std idivl xor add ss pop (bad) repnz test or nop scas inc leave nop or stos and test add in imul xchg push jmp cmpsb leave outsb mov dec push cmpsl sub fs testb das jl int inc xor leave lret and sbb jmp seto mov pop loopne and fsts dec inc fbstp jecxz pop fist (bad) mov mov xchg and or ret testb bound fs fs shrl pop dec das or in dec rclb scas fsts (bad) cmp cltd cli scas jne push leave nop or hlt (bad) das inc pop les test add in repz testb wrmsr mov popf negb loop pop push fs cs (bad) popl add add inc loopne or (bad) adc addr16 add dec aas dec jbe pop jb cmc lahf repz and aam jge xchg xor fistp sbb adc sbb and xchg jo imul sbb cmc inc push leave test out fs xchg inc in xchg inc call jb dec bndcn dec ljmp out adc cmp jb sbb hlt inc ss or cmp dec xchg cs inc jb xchg negb add enter idivl nop cmc xchg inc pop dec repnz aas daa dec int ss jb (bad) fbld mov mov sub mov sbb das sbb mov loop and xor ss pop xor jmp xor imul and xor sub nop inc adc sub and mov pop cmp sub sbb sub nop or enter fsts sysret lahf enter and cmc repz fsts sub pop repz and enter aas pop das or fs or repnz jb or das xor xor push inc data16 (bad) nop rcll (bad) in hlt push push fsts lahf xor xchg inc mov fs cs pop (bad) icebp xchg add mov dec testl xchg fsub psubusw cmpsb xchg or mov jns sti mov and and shrb adc sbb scas insb and rolb dec xchg xchg jg or pop pop ret nop aas xchg div jg enter dec iret pop das fs and scas outsl nop mov sub lret rclb mov flds sbb bts bswap and (bad) ror mov sbb pop and sbb aas xchg and xchg mov ret mov push add cmpl add cmpsb stos into (bad) nop lea test mov cs push paddd xchg pop movsl add fs std cld pop or das cmp pop (bad) das leave nop or add jns fsts sbb sbb nop or jne test in or xchg hlt popa and xchg (bad) pop test pop das clc das push nop or dec das pop in push leave add repz sbb mov inc jb mov insb and jbe pop (bad) dec xchg mov xchg pop and fs fdivrs xchg ret lods dec xchg movsb in inc mov clc sarb nop or das ret scas femms leave nop or cmpsl sbb dec xchg inc sbb fs mov pop and inc xchg movsb xchg dec fcoms negl or nop pop pop inc outsl xor pop in pop in or lahf and pop jb jp,pn cmc (bad) leave test or out outsl nop or nop outsl sub leave nop or push das cmp or cmp nop or nop cmpb nop or lock or nop or jg nop or nop bnd inc push leave or repnz and or ss lahf and fs xor jo sub and fisubr fs xor inc xor leave nop out sub mov sbb (bad) test dec xchg fcmovu xchg popf adc enter adc dec insb dec xchg pop lds mov dec xchg (bad) out ss push dec sbb das or fs es inc repnz sbb pop xchg and pushf aas xor negb or pop cmpsl pop rorb and nop or sbb insb dec cs jmp pop xchg push adc xchg or ss mulb inc sbb icebp iret fs xchg in idivl inc or repnz sbb sbb add xchg and sbb das sbb jle icebp notl out lock dec into jg fsts mov inc arpl fs fstl mov jle fild (bad) je pop jb pop xor xchg and xor jg inc ss jae dec jmp and sbb fildll std and xchg and mov in enter lds push movsb cmpsl xor mov leave nop pop enter imul and (bad) nop aas pop aas cmp and movswl add cmp or leave test ret push clc (bad) or nop or mov or pop fsts mov adc dec bound fistp nop or mov dec icebp das fdiv inc ss or pop mov mov stos or dec pop outsl aas or xchg and pop aas and pop mov sbb sbb push aas push add xchg and nop test stos jns sub inc scas sub adc mov inc rclb add outsl les mov std adc pop bswap outsb mov jb cmpb (bad) sti xchg mov cmp jg jg ss movsb cmp shr movhps incl sbbb lret inc repz adc fidiv fs (bad) out dec mov inc leave (bad) jb mov pop aad jbe xor add jo inc ss movzwl fs adc pop pop sti loope loop jb push jne out mulb movsb inc das or test fs mov test push inc (bad) lcall outsb call repnz test pop cmp std and rolb push mov xor test loopne xlat add ljmp scas or (bad) in xor gs xchg dec add scas (bad) lods dec popa push or scas int mov or loop add sub leave nop xadd or or leave add bound fsubp jbe xchg add popf movsb sahf pop add mov adc (bad) push outsl imul test mov popa insb mov push inc push dec cmp xor data16 fisttpll inc dec inc push pop dec mov push inc lods aad cmc push or insb xchg push enter and outsb popa and add je xorb pop fwait aaa in fs gs mov push jne dec (bad) popf inc sbb lods mov out jecxz adc mov pop lods pop add sub and int push cmp inc vmovsd adc mov add fwait addr16 and add sub add andl add test adc addl mov (bad) add add insw pop cmp in mov add add mov xor cmp adc xor mov aas adc add add inc push rcll add cmpsb imul aad push add add fs insb jo inc sub decl inc dec arpl pop imul sub dec push inc dec pushw bound outsb mov (bad) pushl inc xor imul cmp xor push inc dec inc sar push rcrb insb imul ja jns cld (bad) (bad) pushl xor xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) ljmp add push dec pop pop bound push pop push push arpl mov imul mov lods xchg pop mov aaa ss sub xor int lods xchg pop (bad) jno fucom imul icebp popa bound neg jnp and cmp push neg jnp xor cmp dec push inc pop test push lcall add lock out lret mov pop clc adc cld and sub add pop mov add insb je inc jns gs outsl push imul insb outsl (bad) fcos inc lds jecxz insb jae jb outsb push or push inc stc arpl inc cmp imul dec imul cmp xor arpl pop adc and jo xor inc push jae dec popa outsb fs push dec jo (bad) push add dec gs jo insb mov fistpl arpl push or gs jns push gs and push push pop fldl divb je add add incl push imul jmp jo sbb adc push jbe push imul sbb add add loopne,pn leave fisttpll imul pop push dec and fs add push push popa mulb push jb mov cmp add mov lock shrl jne jo xor adc lods inc fstpl (bad) and dec mov or mov inc inc outsb jbe dec cld mov outsl xchg (bad) imul and jbe movsb mov fs hlt pop mov jb adc jbe mov sbb jae negl mov les xchg jns popa and lahf stos jmp fs or mov and cmp push movsb lea sahf sbb int3 xchg fcoml or lds push in or mulb int inc cmp aaa and adc outsw mov fadds push (bad) or or push jns adc sub push icebp arpl or jne xlat adc test mov mov jge push sbb popl dec or jbe pop cmp rolb dec add sub pop push pusha jne addb fcomps push push or xor (bad) push and mov pop notb sub outsl pop dec sub test das or pop and test mov adc out push inc mov pop or dec outsb xchg adc cltd sbb mov sbb cmovno jne jl xchg push ficoml adc and push (bad) fisttpll aam add mov jb mov xor sbbb dec popa push lret inc sub imul push (bad) imul insb mov lret mov or add sbb push or int test mov push push lcall dec nop push dec adc adc jnp sbb cmp cmpsb pop xor mov or sbb data16 cmovl pusha je sahf ja jae xor dec insl rcr nop xor gs outsl js sub bound add jns jp sub push dec dec popf mov push (bad) jae cmp and pop stos in inc add dec add add or shl xchg add repnz fnsave add add loopne (bad) add outsl mov fsts add add mov pop or adcb ret jecxz pop cmp in add mov pop sahf lahf nop mov push or xor pop ss sti inc add inc and sub rclb pop orl rolb lea xchg in sbb add add add add add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa jmp lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 