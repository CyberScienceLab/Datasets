out push push cli inc mov int3 addl loope movsl mov lods popf dec data16 mov sahf rcrl cmc mov loope and mov lock cmpsl std aaa sbb ds mov not imull mov fsubr imul cmp cwtl sbb (bad) es vpshuflw xchg pop push dec push scas scas adcb mov xchg cli and mov arpl cmp jns fs mov mov mov mov out sarb push mov orl fldl pop cmp add sub xchg test out mov dec xor insb int sbb push jns mov mov insl or orl and add mov std subl adc or inc push pushf pushf lea jmp push pushf stos movw lea jmp push movl jmp movsbw not lea pop jmp lret in or in inc and rclb sub mov jp jbe push mov pop lcall inc lock dec dec mov xor popa pushf (bad) xrstors in (bad) adc scas xor rolb mov addr16 add leave add mov jge adc mull test dec dec or sub mov inc inc jae pop xlat cmpsl outsl push jae int3 cmpsb lea ljmp push push les repz jmp cmp pusha pop pop in adcl adc test xchg or and movsb adc jmp xchg enter and xor mov loope add fs imul add pop inc dec push xchg rcrl mov cltd shll popa add gs or test sbbl sahf or enter scas add jle jmp iret or pop movsb movsb dec jle test and inc and lods and inc in test icebp cmp adc mov (bad) fidiv popa (bad) mov jnp sub (bad) mov pop jl xor test inc (bad) xchg or mov add mov outsl cmp pop dec jo add jge scas adc jg loope lods cmpsl or mov xchg sahf pop enter xchg cmp out inc (bad) jnp (bad) cmp or fwait lods fnsetpm(287 adc xor cmpsb jo je sbb dec lret (bad) xor fdivrp push xor xchg mov imul repz adc shrl inc out sbb jb mov fisubl adc xor andl mov add xor lcall pop cmpsl adc adc repz push jmp lods mov mov stos sub push pop int3 out inc cmp or fdiv loopne movsb sbb addr16 push je push imul mov inc sbb fsubrs cmc ljmp or xor mul mov (bad) stc mov sbb adc push mov ss iret andl or (bad) jae lods mull and lods cld out movsb xlat dec xor cmp sbb cmp inc push mov stos pop pusha popa sbb adc xor mov addr16 add fdivr (bad) ficomp enter ss mov daa leave (bad) jae loopne inc mov pop jge (bad) aad mov aam cwtl mov leave fdecstp lods sub and mov (bad) xchg outsl fldl loopne sub xorb clc sbb mov (bad) jbe and adc lret fmuls in fxrstor adcb fsubrl test repz mov cmp pop inc call insl pop gs mov xor insl dec mov popa push inc xchg inc jp or cmp ljmp push mov jp lods xor adc jns popf push add push outsl and jg push jb jl adc add inc inc add stos psllq pop sbb jbe or fcom jae xchg leave push cmp and fs mov insl cmpsb test (bad) roll lea jge inc pop mov push xlat add mov (bad) imul das push test cmpsb pmulhuw pop add pop inc and sub jl adc and or test or imul cmp rcrb sub pop out (bad) sub sbb cmovp test inc addr16 es dec sub cwtl mov mov push (bad) dec (bad) push mov jle nop out test sbb jle insl lods out adc loopne mov inc loope jge scas cmp or inc mov xchg fdivrl outsb loope sahf out push fist fmuls push pop iret out jle sub imul sarl pop int outsb mov dec add movb cmp test call lea jae jmp iret hlt sbb loop inc xor aad jge ror sub flds sbb cmc and cmpsb cwtl sub cmp or jnp sbb rcr sbb fs es pop lds mov sbb addl jp and popf sbb test out lret dec cmp loopne or js mov test (bad) inc pop sti and out jns (bad) cmpsl pop call lods or repz lock jmp in push (bad) add sbb dec rcll dec mov aaa mov inc add insb (bad) sbb fadd adc pop xchg mov fild jl dec adc repz adc xchg jo pop sub sti (bad) mov mov daa or push in jl xor int3 fcmovbe push ret add insb cwtl insb rcr fisttp xchg push mov and int3 ja inc test lea sar mov jo jle mov repz adc lahf mov call (bad) xlat xchg repz push testb pop int3 repnz imul fistpl add add mov lret or inc inc ds adc aad out enter push dec sbb shrl nop loope in (bad) shr popf gs repz in mov fsubr cltd xor stos or push lcall add or mov cmc cmp in movsb (bad) add add jmp jae mov or out outsb cwtl mov lock cmp popf (bad) mov sar ja add lret test jmp cmp test (bad) mov in cmp cmpsl ss loopne pop leave iret imul fldt negl out stos call cmp fldcw push das out nop dec xchg (bad) xchg arpl pop push cli outsl push adcb inc and imul sub inc shrl xor lret andl cld icebp mov repz sbb pushf mov push jl iret xchg xor movsb push sub fwait lods push cmp sti test mov (bad) jle stc notb loop lret fsub push idiv xchg xor push push movl repz jns xchg dec in pop inc mov dec rcr stc mov mov fdiv xchg rcll xor insl xchg jo out adc mov or inc pop insb adc or jecxz (bad) int3 adc jmp add in xchg sti dec mov xchg mov pop mov imul add repz rclb in sbb add jnp jge out push std adc jae cld cmc or subl cmp lea jb pusha call pop mov in pop inc mov inc pop xchg aad pushf lods aam dec fstl sbb and test mov sbb ret int3 jge dec (bad) shr push dec mov sub mov xchg xchg dec int3 dec cmp dec xchg cmc xchg cmc (bad) pushl fist ficompl pop clc mov sbb mov movsl pop or jno jno aam push cmc imul mov jb ret fs xchg insl sub push lods mov ja dec insb jbe cmp add push jno jnp shr sub push xor jmp stc add (bad) (bad) jbe add scas dec push out pop xchg lea jne ja add (bad) lock ror sub lea xor cmp add add mov or not (bad) lock mov test repnz push lea jne movzbw bswap pushf lea movb push push cwtl setl mov not lea mov pusha movl pusha jmp arpl out pop inc adc dec push pop xchg dec insl xor pop xor cwtl jp gs jge dec adc cmpsl ss daa or jmp jge sub jp cs lcall test and dec adc stc cmp jp call jecxz pop (bad) lock adc cmp loop jg mov pop int mov aas gs out dec lods aaa adcb mov mov xchg iret or out pop inc (bad) or bound push dec jae inc ret dec aas or lods add fmull cmp mov pop js add jbe outsb out dec roll sti mov (bad) (bad) and xor lcall sub (bad) out outsl or scas mov xor jmp loopne fistpll and std dec mov outsb mov sbb clc pop mov add inc mov (bad) ds xchg ret push jl and out int (bad) adc not sar not mov add test sub stc cmc rol rol test neg pusha stos not setl not mov push lea js call push call lea jae cmp inc movsbw mov bsr and stc mov inc mov jmp jmp je call push scas imul xor jg aas jbe stos push add xchg in fisubr hlt sbb ss (bad) push lds mov add cmp xchg xor sbb dec adc int mov xor je outsl and cmpsl int jl mov or fwait dec jmp adc sub sub xchg stos gs fnsave insb arpl xchg jp mov (bad) (bad) dec mov outsb sub ljmp mov inc lock mov shll fldenv (bad) aad mov lea mov rcr push mov call pusha push push lea jne bswap movzbw bsf xor mov inc rcl and sub mov mov pushf pusha sub clc stc pushl popl stc test cmp call sbb in pop inc ret cmp scas or push mov test adc cmp (bad) lds mov pop mov pusha adc pop push xchg or ja cmpsb js movsb stos dec and outsb cwtl out fnstenv jae jecxz popf and cltd push sub jo xchg mov cmp in iret push hlt imul (bad) inc jnp add jae sbb and loope mov leave push cld inc add in xchg xor ljmp pmaxsw imul xor xchg shrl dec ja popa adc add (bad) push daa ja dec jp dec adc push (bad) cld (bad) jge mov sbb fdivl add cmp lea ljmp mov popf pop stos adc fldt shrb sbb insl int3 mov jp push jno sub mov jle movsl or xchg aaa xchg int into lret test test xchg jecxz and (bad) aaa call mov pop inc dec pop sbb lcall push insl inc adc xor xor aad or mov lret lea push inc adc add add add and mov xchg dec push mov pop jle mov jne and lods or mov dec mov adc sbb mov loop mov push in enter add adc adc pop xor out cmp dec nop (bad) jmp lods fsubr pop xchg push mov sbb rol out stos mov inc scas sbb aaa lcall mov enter sbb lret inc aas pop lock call (bad) sub scas push inc mov out mov or shlb lret (bad) push test jp xor in mov push nop popf popf or mov faddl and arpl mov daa push xchg aaa sub pushf add aad adc shlb sahf push icebp xor add sbb jecxz xchg aaa and jne iret sar cmpsb int xchg push lret ror mov xchg das test inc pushf repz inc hlt push adc sbb or fwait ja pop inc (bad) push in mov mov in sbb aas sub lods bound mov aas sub push lea int3 (bad) popf pop enter push psubq sbb imull std mov call (bad) mov cmp add insl popf out bound jmp xchg lea or mov mov and push dec dec dec cs push push add orl or pushf test jmp call add push je imul movb lea jae or stc mov test bswap not shl mov or mov bt call lea jne push pusha stos push lea jmp jmp mov pop xchg pop inc jb and sub adc repnz mov sbb ja cmp (bad) and popf lock sbb sub fwait popl sub (bad) dec mov loop jae repnz outsl das mov and cmp pop fildl stos lods fdivrp adc enter add or je mov shlb loope lcall push lahf cmp imul sbb pop xcrypt-cfb cmpsl movsb shlb cwtl call movsb jp xchg cmc pop inc test mov fs dec je pop fwait arpl pop scas jae sbb dec and fdiv adc mov fistpl cli imul loop jne add push xchg daa adc fcomip bound mov xchg sbb or push push mov sub leave rcrb adc add iret mov out jmp sarl aas pop enter jnp test cmpsb dec mov (bad) ljmp add and loopne sub add icebp and aaa pop shrb leave push int in jmp lcall xchg mov jmp notb inc adc cltd scas cmp in enter mov dec dec addl out int ljmp insb loopne or outsb ffreep push outsl xchg xor mov ss mov sbb sbbl pop push jl push ja movsl fwait outsb jb mov cmp scas sahf mov lret leave or (bad) out ret or or gs sahf cmpsl out mov adc hlt sub icebp orb test test repnz popa dec (bad) repz stos roll cwtl in popa ret dec ljmp mov push mov out cmp out insb mov pop inc xchg daa or add loope add jnp adc (bad) iret jmp xchg lods sub jae xchg sti dec insl sti icebp mov int3 add fadd pop ret lcall stos push loop (bad) not dec shll xchg dec or ja sub test pop dec test push sub fwait mov xchg mov mov fstps int pop inc mov mov jo dec aad out and stos jnp inc mov adc xor iret lret mov or jns fisub pop sbb mov idivb in les ret dec add pushl mov pusha pushf pusha lea jmp mov mov lock inc fwait out fnclex repz ljmp pop jg add pop lret pop cmp sti les push sbb mov sti push push jge add das jbe (bad) jno jmp mov pop or rorl adc jns push pop dec push int3 add dec or pop mov (bad) cwtl arpl (bad) mov mov cwtl or cmp push fidivrl xlat test (bad) (bad) dec push popa pushf out out pop add cmp push push mov mov jl mov cmp or arpl inc and jle cld sub xor pushf mov pusha push lea jmp lea ja pushf lea jb pusha jmp mov pop inc popf xorl or pop mov sbb mov mov nop dec mov cltd mov (bad) ja repnz mov xor mov out ss nop jp out sbb hlt jge jle or pop aaa mov mul enter or cmp adc jmp in jl mov std movb jnp shrb dec psubusw mov shrb imul into test dec cmp adc fwait jg dec js fstpl icebp push dec pushl pop fistpl sbb inc test push movsl shr arpl add pop xchg je leave icebp pop inc cmp jbe and ficomp push push mov call xchg cmpsb and jo stc or cmpsl mov add push daa push icebp stc sub jb xor mov and xchg xchg shll adc movsl jle (bad) cltd sbb pop out fiadd lods fwait enter ret adc in dec xor in (bad) jmp inc add or adc xchg mov cwtl push mov jno out dec xor lock (bad) cld stc or inc stos adc adc jle sbb dec adc ret jle fldenv out and aad pop mov insl and add cmp (bad) xor pushf pusha pushf lea call jmp push dec cs inc aaa inc jae or fistl push insb mov lcall push aam pusha push lods pop jb scas sbbl xchg flds mov cli jp (bad) data16 xor (bad) icebp outsb test sbb ret inc je in xchg inc (bad) sbb jno cmp or adc std sti mov lock es adc fisubl (bad) sarl addr16 popa lahf (bad) mov add adc inc shll add popa pop in add and xchg mov xlat jge adc add mov push mov (bad) sub cmp sub movsl xor pop inc push jmp (bad) clc out pop mov xchg mov add adc in mov in imul clc add and xor pop aas dec outsl pinsrw pushf fcomps pop loopne add paddusb pop cli sub push mov mov ret xor clc mov mov jo xor fldl dec dec mov pop fwait movsl je cmp dec out inc mov stos mov loope inc in pop jp flds xchg dec jae out insb imul or loop scas ds or outsb dec cld idivb sbb mov sub idivb and not mov jmp push jmp jmp or cld pop inc in js adc pop sub push inc cmpsb and leave push and in (bad) in into lods sub cmp faddl xor xchg adc mov sahf mov xor aas daa mov mov jmp mov sar lods jb cmp int3 int xchg loopne xor push lods sti add fstp push inc sub mov sub and jns push or dec add shr imul sbb jmp push imul mov adc bound rolb aad mov in scas xchg push subb mulb pop inc xchg jmp mov mov aas ja sbb dec push dec jl js push mul loop ss sub fisubr inc pop push adc xchg sbb jns cli or out pop xor out and mov add xor scas test inc jbe lahf in loope test sahf fisubr push cltd cmpsb lret add push push jb add sbbl or addr16 and (bad) xor repz sbb mov sub dec sbb lea je not xor movsbw add or mov stc bt test add call xchg mov pushf push dec clc call ror jmp call cmp or jmp mov es pop inc (bad) push pushf (bad) mov and or push xchg and jl dec imul test or add dec mov pushf hlt mov sbb mov mov inc dec and dec (bad) icebp dec imul popf stos (bad) sub cmp fsubp pop cmpsb jmp push pop aam cmp inc dec xchg xchg iret pushf and dec hlt js adc sub sub cmp jge add je pop mov negb xor jp ficomp gs adc ret das sbb mov int rorl out adc cmp (bad) lret ljmp pop inc aas scas lods or roll mov jl mov cmp xchg pop call and and jge jle notb ffreep xchg push sbb nop (bad) mov xchg xchg xchg dec or inc inc mov popf inc frstor imull mov xchg sub sub pop clc push mov lock ljmp xchg ret xlat pop pushf dec andb test and push mov push insl int3 jae adc inc data16 test stos xchg add inc gs outsl fs gs imul add les call inc movswl pushf pop test scas ret xor scas pop xor lods outsb out cs mov or inc fild adc inc jbe aas cmp jl dec lcall fs outsl fcoml pusha movsl sbb and push inc sbbl repnz sbb mov and call mov mov clc stc add cmc jmp faddl inc sub clc fldl test xor bound push dec cmp sbb inc or adc (bad) repnz into mov adc loop lahf push xor mov adc test mov aad mov mov in cmp mov stos roll xchg ljmp xchg loopne add inc and gs jl fcmovnu roll sub sbb or and inc pop bound aaa aas push jb inc push push dec jns data16 pop dec (bad) dec cmp and jmp mov mov xchg int3 or insb xchg ss loopne lret stos jl and mov js mov insb jb fildll mov mov ret push inc fdivr rolb insb pop xor iret dec popf inc push loop push xlat test xorl push xchg lods inc mov loop jg xor ja adc mov subl ja dec fndisi(8087 mov jle adc xlat or add (bad) jge fs call jmp lea jne xadd inc dec pusha mov pusha inc rcr test sub bswap pop ror lea test push sub push pushl popl cmp jmp mov push pushl mov not inc mov setb jmp pop jge (bad) stc pop inc in scas js sub les and and iret rclb lods cmp jbe stos imul mov inc jbe pop mov push jecxz inc xor xchg mov cmpsb jne push xor mov push out out or push fcompl pop adc sbb jnp incb dec or sub lock sbb add mov fnstcw in mov add push add test js dec pop and popa cld into stos dec adc into add pop ds shll push mov push push clc arpl cmp pop std daa mov xor pop stos outsl push jmp lea jne mov movb movsbw lea call inc mov cli pop inc (bad) neg or mov lret pop outsb hlt divb dec jle jb jbe std inc cmp pop aad shr mov ljmp cmpl sbb and std (bad) (bad) cmp aas mov dec movsl jle fild pop lods in std movsb fcomi push adc out jge sbb outsb xchg cwtl std fwait or or push fs out daa or inc fwait data16 jno lahf xchg add jbe (bad) and or sub scas test cld push jle or lea sar sbb or sbb mov mov not pusha bts add call rep lea call sub sub sti pop inc shrl push push popf stos fadds cmp cmp mov dec mov stos mov cmc cmovl jle adc dec add jnp notl and dec or shll push mov loope jbe jo adc pop mov push cmp (bad) in and es aas jae enter sbbl or or lahf sub inc insb out mov inc in jmp popf xorl jno push push lods and jecxz pop lret clc enter mov or xchg lock ret test scas popf mov cmpsb add rcll stc push bound mov (bad) push imul jg dec adc pusha mov lahf lods inc mov inc pop rorl movups paddusb popf cmp mov dec popa lds cmpsl stos (bad) cld andl inc push mov cli out mov jmp mov or pop push jns js iret dec fwait jae adc icebp das mov or daa scas idivl out sar pop jmp aas add fs mov and mov shl sub adc cld ret dec clc lea mov jmp incl adc fimull fs jns loope mov add (bad) xor or jns inc adc cs aad mov jnp lahf sbb xchg enter cli jo fildll or or fisubrl xor jnp movsb inc (bad) lock jne into or pop add call ret sub and mov push (bad) fstpl inc pushf mov pushf pushf call setp push pushl popl bswap setp pushf mov lea call pop mov js sahf or dec adc mov push jns inc pushf popf adc repnz adc or mov ret sub aaa fisubr (bad) pushl mov dec adc cli and xchg xor sub push shl pop adc dec cmp dec dec jle push test adc xlat mov test adc jno daa pop jmp mov mov or xlat cltd inc xor ror pop aas add pop test outsl std inc pop dec xchg dec mov stc dec sub adc cmp orl push pop adc pop insl sbb test jle cmp call addr16 movb ror sbb lock addr16 push inc int inc xchg mov in repnz nop pop sub or pop inc aad push imul dec pushf mov pusha xor aaa movsl dec cmp inc add and jae sub cwtl repz mov test lahf jp xorl (bad) roll inc jb pop mov aaa jno mov loope mov inc mov push mov insl pop xor popa daa (bad) popf dec sub sub movb lea jmp jmp pusha pushf lea jb clc cmc push cmpb push jmp pusha push movl call pop inc leave adc je adc ret and loopne jae repz stos arpl cli fcmovnu push cmpsb daa mov imul and test mov lea cmp (bad) arpl stc add (bad) ss mov (bad) adc mov (bad) jg mov test add ljmp adc test jecxz (bad) enter shll ret (bad) aaa addr16 fcoml mov (bad) dec fstpt test mov xchg pop xchg adc pop cltd dec inc or cwtl negb mov ficom fs int rorl popa lcall cltd or jmp mov div ficoml mov enter sub imul ret dec xchg imul or xchg in push test mov in dec sti lcall das hlt int3 loope sahf sub test sbb push pusha popf mov insl sahf imul cld dec int iret add mov int3 pop mov adc xchg (bad) movsb mov sbb cmp ss push mov jo sub gs imul (bad) mov adc jbe cmp sub xlat mov lods cmp or adc jb adc movb cmp movsbw lea bswap movsbw lea lea jo bswap setbe pushf mov call mov movl mov movl movl lea jmp out pop int3 adc adc xchg insb arpl dec push repnz daa dec dec inc dec mov push daa or in lock out fsub call cmp arpl xor shll divb rcrl les (bad) dec lods lcall clc insb popa addr16 adc (bad) int3 push (bad) insl in sbb pop lret (bad) stos lret enter daa and int3 fwait bound inc adc xchg ret cli (bad) cmp lea jle cmpsl and xorl mov shr scas les jmp call or ss cmc out mov adc clc xor add fcoml int adc pop inc push pushf shrb xor mov push adc cwtl out shr in cltd lock sub call mov int imul mov jno divb (bad) (bad) mov aam test xor lret daa mov int leave push call pusha lea add mov in xor or data16 (bad) cmc pop rol add or (bad) mov lods pushf das aaa cmovs jmp (bad) loope pop pop jbe cmp xor bswap jmp gs or lods shll call lret inc pushf in jnp gs hlt dec sahf test inc or cli fadds pushf aad cmpsb pusha mov lock pop inc mov addr16 pop fs pop xor mov pusha push mov icebp and lds shlb popa and out add aas cmp pusha pop or in and hlt std adc dec inc scas fstl jg popa xchg stos push push fmuls mov jns mov sub sub mov jne jmp mov and lea mov adc push mov inc and lods in xlat pop and mov sub push jno or aaa fild xor jg inc pop or add inc ret ds cmpsl rolb fwait int3 sbb inc shl add repnz jmp dec bound outsl idivl push outsb addr16 mov push outsl ret pop xchg mov ljmp sbb jle ss lahf xchg sub test ja push into (bad) iret dec ret add aaa xchg insb enter rcl dec inc shr mov push push popf sub std push in mov mov xchg cmpsb mov dec loop ss jle xor sub pusha insb pop mov imul pop push lods push sbb fsubs movups mov pop jl rcll sub divb gs aad cwtl ffree pop (bad) xor dec in stos inc jmp call jmp pushf lea je pusha pusha pushf cmc sub movl clc stc cmp lea call cmp xor mov pushf call mov adc rolb scas stos or cmp dec fstpl or ss push andl bound decb pop pushf dec mov popf je adc test pop xchg cmp test clc and addr16 les jae dec test lret fwait nop scas xchg aas mul pop mov (bad) es sub or sub inc jmp jp xchg fidivrl ret sahf std adc dec or cmpl dec stos and ret lcall fadds push xor in adc fist xchg out clc push cld fwait mov adc mov cwtl mov aad xor sbb cwtl iret cmp mov aaa pop fucomi push stc in pushf mov stos adc dec nop mov lods je (bad) push imul jle int3 adcl sub std dec aad popa mov and fwait adc mov icebp mov mov xor ret std or cmp mov adc (bad) imull fisttpl loopne cmpsl int mov (bad) imul cmpsl cmp (bad) and in xchg add add fdivr pushf test shr pushf lea je push pusha adc mov lea jmp push sbb push push adc lds lods mov jl or mov sbb pop into push data16 outsl ss int3 add repz cmp mov and clc push pop (bad) inc push lahf ds jle adc pop aas jbe xchg jp or fs mov call rclb push mov xor jge mov test dec in (bad) incl cmc ljmp out jne out push mov pusha rol add stos sub push pop jecxz jns sub inc sbb movups pop nop (bad) xor rclb push jl sub test shr adc data16 cli sbb mov jno cmp nop mov test (bad) into jo add in shr loope xchg cmp jae pop xchg dec lahf pop inc push imul push adc sub imul ss jecxz scas add aaa rcl push or (bad) out daa dec jp xchg push xchg mov lret adc pop add rol push xchg bound sbb adc in stos (bad) push test pop mov and daa mov in shrl pop vcvtps2pd adc repnz mov mov xchg inc rclw xor adc lock outsb lods rorl pusha test jl dec movsbl mov jmp mov not movzbw lahf movzbw movl lea push lea pusha pushl pushl movl mov pushl popl pushf pushl ret enter or inc cmc add fdivl jno std or fyl2x or inc pop jbe and push mov push adc je and dec inc test mov push inc lea lods hlt ficoml sbb sbb aam gs out leave xor clc int outsb xor aaa push push inc enter add pop mov cld (bad) std jge (bad) aad add movb pop mov ds push jmp mov aad mov cmp cs aam fildl xor ss jle jno test push xor sbb lcall outsb arpl data16 adc sbb sub rolb inc fwait or inc (bad) mov daa sub int3 add xchg adc dec mov dec outsb pop sti push mov lcall sub stc rorb sub adc adc hlt (bad) sbb clc xlat rclb jl aaa fldt mov dec xchg pop jg lcall fimul loopne fstps mov ret mov mov dec je and imul mov push cmp pop std das mov rorl mov and jmp stos iret jmp pop popa mov or inc fwait sysret ja and push sub mov ret or lahf jg aaa scas ja aam idivl sub cmp sti jno push mov jle (bad) cltd fiadd or pusha dec lahf js or mov bnd test sub mov sub fisttpll (bad) scas add mov xor sub mov or (bad) jno in push jl sbb loopne mov (bad) in ljmp fisubrl in or or ja (bad) adc push sub xorb mov or out jno xchg pop fimull add and add sbb xorb push lea jne sbb mov bt cmp test clc add push movb movzwl cmc sbb pushf mov movb add stc pushf mov cmp test mov jmp test cmc cmc xor movw mov call jmp xchg rcrb or inc je dec mov sub pop mov out rcl ljmp and inc divb xchg jg adc imul adc ss aas aam xor popf jg rorl aaa sbb sahf inc rorl movsb jp icebp test lods jns cmp roll sub scas int mov fsts cmp mov cmpl mov lret mov iret stc push dec add ret push jle cmp dec lock out push or mov movb lea jnp call pushf pushf pushf movl pusha mov movb lea jmp xchg insb in or inc in push push fmull xchg stc imul add fimul les mov test or add andl mov lret mov nop xor mov dec lahf pop ss insb jl xchg ja jmp mov and cmp pop push xchg (bad) add jnp adc mov gs xchg sub call out adc int hlt imul mov (bad) std dec (bad) outsl movsb xchg jmp mov mov mov adc adc adc insl push fs jge add les icebp fsubr loopne (bad) in (bad) xchg adc inc push movsl out sbb bound xor inc lea xor jle mov fidivl push cmp lahf into inc xchg test xchg ja aas iret (bad) (bad) repz inc push cmpsl add daa sbb jae (bad) mov scas jbe leave test add int fwait xchg loop out cltd test pushf xchg push inc pusha xchg lret lahf inc mov ret or add and and fidivl adc xchg rcrb mov inc xchg scas addl mov push sub not repnz divb scas cs inc lods loope inc pop nop dec add nop mov ja arpl sti movsb (bad) lahf nop das neg and lahf movsb inc rol dec xor push and dec push fnop cmpsl add (bad) icebp out mov cmp and jp xchg dec pop (bad) out (bad) push scas dec and mov in clc mov push insl daa push roll into rep std sbb sub dec lds fsubrl sahf adc int mov cli popa (bad) jg xchg jae pushf xchg mov adc adc adc push sbb int3 add jl xor pop mov adc jo cmc (bad) ds sub scas rolb lcall popa lds xchg mov cltd decl xor mov mov jp je pushf jne (bad) movsbl popf psubq sub jb pop pop mov iret and pop mov add in test xchg xchg adc in std xor add in or out insb add push push inc mov sbb dec push lcall fwait (bad) sub inc cmpsb sub lea cs adc hlt std (bad) xor aad lods xchg dec dec mov call (bad) cmp repz or sbb xor xchg push scas push xor mov inc xor adc fldl xchg jg and lock push negl mov cs push mov loopne loop out sbb pop sahf pop mov sbb pop adc movsl jae jmp dec sub cmpsb mov (bad) loopne fsts adc adc loop jmp pop rolb ss mov enter mov pushf movw pushf pushf lea jmp adc jmp inc pop mov mov xlat into imull fild (bad) xlat ljmp pop (bad) call jp lock xor std les sub lods pop insb push mov inc iret out out mov pushf mov arpl sub loop mov imul in adc nop test fisubrl xor pusha mov lods or jns xchg add cmpl das mov mov dec mov jbe in mov add cs or stos cmp cld push pop cmp cmp sbb call adc cmp mov lea call pusha pusha lea jp adc pushf lea jae call (bad) push movsl mov adc push data16 imul pop iret das scas pop fldt bound pop pop mov or cmp push or lods addr16 dec dec inc mov imul and scas scas fwait lahf mov je pop stos or dec loopne xchg push mov (bad) stos pop lahf adc or movsb mov inc jno push (bad) cmp rolb xor (bad) in rcr jmp mull jecxz add mov movsl or stos not dec inc or lret xchg test and rol int3 aad jb (bad) (bad) bound test or stc stc jmp lea jb stc cmc cmp cmp cmp push push pushf jmp ja pusha pusha lea jb stc cmpb call es int3 adc adc lods jno inc test jno shrl (bad) jmp xchg out js dec je push dec jae std sbb cld sub je inc ds cmp (bad) (bad) out cmp pop repz pop int and insl mov inc mov push add (bad) dec xor enter mov popa mov and leave loop xchg lds xchg add xorb imul sbb mov inc xchg fs fldt enter mov addr16 dec xchg imul imul and inc decl fs jb clc cmpb call adc jae adc inc mov js shl enter leave repnz (bad) inc sahf mov jb dec and xor fisubrl add xchg jne mov cmp sub mov add push push loop mov mov inc mov mov push mov cmpsl shrb mov cmp mov adc into add mov and ljmp clc (bad) jg ds sahf (bad) fdivs loope mov sbb call jle add xor adc mov call adc imul ss jle pop (bad) repnz jae fisttpl pop imul xchg xchg jo add jmp cwtl or mov adc xor (bad) mov loope sub fistl push jl add int cmp imul xor call cmp mov lcall int pusha lcall lcall aas xlat add dec cmpb xchg mov lods test not lea js sub stc push rol push pushf neg cmc bt pushl shr pusha push lea je jmp dec orb adc inc icebp mov ds outsw outsl mov pop test adc movq add xor (bad) je push mov jno push movsb add aam scas mov mov bound sub sar (bad) mov fs cmp vcvttpd2dqy ror cs push (bad) mov cmp pushf pop faddl sub lahf pop lahf test std inc pop jp dec push push imul lds ja (bad) sub ret in cmpsl or push dec inc dec xor cs insb add add popa insb inc insb insb outsl arpl pushf call pushf call mov adc sbb push ja xor lock in roll mov aas sahf ret sbb mov mov cwtl aad xchg addr16 lret in mov aas push cmc insl dec gs out loope test das mov call add inc sti sti arpl mov adc fwait loopne,pn mov inc and (bad) dec in xor rcrb jmp sub xor fisubr mov add mov xchg or sub into sbb jne fiadd iret pop insl jl lods adc cmp shrb pushf mov mov subl outsl sbb and ja inc setg neg sub cmp add bsf clc adc sub mov clc and rcr jmp mov adc in fcmovu xlat sahf mov dec insb xor mov je je jg pop int scas jmp cwtl aad (bad) int loopne or jecxz mov das or inc push dec jle fsubs mov or gs out shll xchg mov inc in rorl lret add je jno inc pushf lods in sarl inc inc icebp bound out and or loop push jo scas test sub sbb aad adcb cs int scas negl inc or jb insl test pop push ret sahf (bad) push out leave push je dec jle dec mov cmp cmp pop and mov sbb push mov mov insb push push push in (bad) xlat mov jne jne and dec sub mov push dec cmp (bad) xchg aaa daa addr16 mov sti xchg push ret mov inc cltd addl cli pop fcompl dec fcompl fdivs mov hlt lret scas adc sbb pop fucomip (bad) inc lea outsl fisttpl (bad) cld leave mov sbb mov add nop sbb cmc inc fdivs sub sbb int pushf and scas or movb movl call jmp xor out add adc mov sub scas or sahf jmp adc sub out in fbstp ss addr16 daa add mov push clc xchg mov add lods shlb dec mov jae mov mov xchg adc xor jne inc push mov (bad) loopne sub int jle sub pop dec xor rclb pop push out jo inc arpl adc sbb popf test push push aad jle or data16 mov dec mov and imull lock roll rcrb push fdivs mov por jmp adc fildl movzbw pusha lea movb pusha mov push movl push lea jb pusha pushf mov pushf pushf mov mov pushl ret lea js test push add pushf bt stc pusha movzwl neg shld rol btc mov clc jmp jmp sub rorb sbb inc xor mov pop arpl push test sbb jae or rorb xchg pop and int sbb lods and popf in mov out aas imull fcoms pop daa test imul push push xor repnz jnp mov mov push xor lods fucomip and dec xor inc or enter ljmp add sub add loope shlb test mov test imull jg loopne in dec test mov push roll loop fsubl std insb and jno jle and jmp xchg pop movsb iret and mov outsb push popa cmc xor pusha push not clc call in or push sbb inc cmp push inc cmp pop xor sub scas adcl sub sub xchg mov hlt xchg pusha pop nop push je dec mov sub int3 loopne xor or fldt inc movsb fidivl repnz je cmpsb int3 mov lahf bound inc xlat aad mov xchg push imul dec loope in lds outsl or faddl rclb or cmp jmp dec (bad) xor xor dec mulb jmp icebp and pop sub add movsb inc add push ds call sub leave (bad) daa sti sbb inc push jnp (bad) dec fcoms cld lret aam fsub call ret lock lret repz mov or mov mov mov leave jns adc lret xor pop or ds andl xorb adc mov dec imul jge imul cltd mov es add sti daa outsb xchg loopne xchg or cmp cmpsl inc xchg ss sub outsb inc scas sbb std daa cmp lea cmc push xor jmp cmp call push push call mov add sbb inc mov push pop pushf mov dec aas dec outsl cmp sarl (bad) or mov add inc imul jecxz jae leave adc pop xor jne mov and xchg push es xor ffreep (bad) xor mov lcall push lods xlat lcall mov ljmp les sub divb ljmp sbb mov movsb (bad) jno mov sub outsb jno dec push in cmpsl fdivs stos cltd mov in xchg roll xchg je frstor jecxz in lahf ss lods in push dec shl bound cmpsb inc je mov cmp pop icebp cmc cmp add push jmp insb xor sbb inc add dec pushf leave leave clc xchg mov or test sub rclb cmp add popa pushf int cmc or pop push push dec insb inc lret adc fdivr inc xor call aad in xlat cli cli pop mov inc inc int3 cmc insb sub xchg push jp sahf mov and jne add clc xchg jp or stos cmp or popw and jmp jge cmp add jmp int3 add leave mov inc mov repnz int3 dec lcall stos push in jae fistp jno cmp and inc cmp push fs xor loop jnp bound bound dec cltd inc insb mov popa push or inc cmp mov cmc repnz repz jge ficompl xor mov mov mov mov adc movsl insl out push push pop dec inc clc push (bad) jns add (bad) (bad) fcoms mov sbb arpl inc mov adcl iret push call mov pop xchg push xor sbb mov (bad) and cmc mov into xor daa arpl xchg or data16 mull incb xor sbb sub shrd clc call jmp movb neg pushf cmp test xor add ja cmp mov pushf movzbl lea call pusha add test clc stc cmp call add pusha clc pusha movzwl bsf adc pop cmc mov test bt cmc add mov mov test bt call dec fwait mov inc inc (bad) lock rorb jb bnd fidivr insb pop jl dec (bad) sbb pop cwtl std jl mov cmp xchg mov fdivrp mov xor dec into xor mov or ret (bad) insb es pop ret lods cmpl xor jns int push inc repnz jmp imul or popf pop lock (bad) mov xchg out cmpsb shll clc sbb arpl or push (bad) fmul inc out jo sub dec (bad) fcoml add sbb sub dec rorl (bad) adc jne bound (bad) mov mov sbb cld add jno xchg stc cld mov dec mov bnd xchg mov les aas stos adc js adc mov jl mov or adc mov arpl test mov into push leave out push loope mov jo push push xchg jae inc aam cli daa leave in add mov dec iret es or jmp nop daa jmp push outsb in andl push ss mov fldt xchg mov pusha lcall (bad) push mov mov test jl test (bad) cmc jecxz (bad) pop push jp add xor xchg int3 ret aaa test test sub or sbb adc pop lret lods mov xor fdivrl jns cmp or jne sub movsb xor cmp test lea sub incb push add sub hlt sahf js popf dec addr16 shrb push (bad) jbe data16 push sbb xor mov and pusha or mov pusha out mov rorl imul cmp int3 aam and inc out or mov ret add add push jl dec addb test or push sbb scas negb sub push lret out aaa pop ljmp mov mov js push lock rcrb mov std in jmp (bad) lret xor das in (bad) (bad) xor dec enter lret mov fnstsw insb roll fs stos jae scas test push sbbl adc lahf dec jmp ljmp pop movsl mov xchg lret imul sahf mov iret cmp out bound jp jne dec rorl inc xor insl ss push ret adc push pop (bad) (bad) cmp xchg shr add outsl (bad) pop xor (bad) das adc cld jo or add enter and jmp repz pop and inc and (bad) movsb mov in mov add inc mov les cmp es mov stc inc mov mov arpl mov jl mov xchg cmpsl add out adc fwait or cs xchg mov iret jle sub jl xchg in lahf or push (bad) dec inc jne loope xchg jne and push lret push sub iret pop inc sahf (bad) and popl inc jg gs arpl fidivrl es leave jmp rcrb jmp cmpsl mov push nop das scas out mov (bad) cmp popl and rcr not mov movb pusha not stc push bt sub jmp fwait test xor dec jne insl xor test fs cs jno fisttpl push mov inc sbb mov test movups fdivr int3 mov movsl fstpl push dec sub xor rcll adc cmp fdivl sub lods ljmp mov lahf xchg add sbb jmp sub ljmp pop xorl aas dec movsb xor sarl sub push or aad clc push bt mov inc bsf sbb pusha sub bswap push bsf rol stc push or push add aas jmp popa ds and inc loopne push insb lcall cld fldenv in (bad) sub fdivr shl shl sahf mov (bad) mov aas sub call movsl inc sbb out out ret popf fcoms clc sub icebp lcall or sub dec mov push divb mov xor rolb testl pusha fldl dec cmp je lret stc push mov mov mov movsl and (bad) loopne add lahf push outsl pushf dec push das mov das xlat loope sbb repz pslld xor lock and inc roll (bad) fstps lods adc xchg jne popa xor mov rcl rorb sbbl lods cmp repnz lock dec jmp (bad) icebp fisubr loope add lods jne (bad) jae loopne pop call pop in shrb imul out loopne scas dec sub mov cli cmp push jne bound test aas es adc and add jg mov lea je test add test cmp call neg pop xchg inc mov sbb jp adc fstps int flds dec std or repz mov cld and insl cmp jno xor out push mov pop mov xor stos cli imul mov testl out popl xchg jns fdivs (bad) (bad) xcrypt-cfb cmpsl out dec jg mov pop dec xchg cmpsb jo jle xor iret jnp enter push in cmc call popf inc jns mov mov add jae jmp cwtl aas jl sti jecxz js outsb bnd jnp (bad) scas addr16 xor jg mov cmpsl outsl repnz jbe loope xlat adc (bad) or sbb push or stos nop pop cmpsb fwait movsl push xchg fsub mov mov xchg adc ret in ficoml call pop ja orl jno sub xchg sbb aam cmovl inc add loop pusha dec jnp scas in lock mov mov and out fild jg movsl cmp stos popa jge mov insl xchg and iret sti jnp out js cmc xchg jbe jecxz sbb ret js push cmpsl mov xor scas jge add (bad) xor cmp sbb lods jge dec hlt ret and iret jne ret iret in jmp out pop jecxz xor scas xchg popa in mov ja rorl mov pop orl or sub jecxz pusha push xchg inc and es fcompl sbb pop and daa cmp inc xor add pop inc mov int3 mov mov mov jbe pop jb add xchg test jnp (bad) mov std cmp jecxz in repz pop mov (bad) insl and ffreep dec jno repz pop fisttpl xlat aaa mov (bad) fistl decb pop into and popf xlat pop bnd sub cwtl das (bad) test (bad) xchg adc mov dec add dec insl popa addr16 imul je outsl jns pusha call jp (bad) and adc xchg mov sbb cmp sub insl sbb icebp int3 loope loope xor inc jle cmp inc dec dec and arpl mov jb dec sbb inc lret sbb cmc lret popa dec lahf in nop lods cld data16 fcompl and pop (bad) call push pop sub ds shr jecxz add jecxz stos jge les mov movsb std mov add lahf int cld pop sbbl xchg mov sahf out sarb insb in and cs sbb iret pusha rep pushl mov pushf lea jmp push pushf call mov dec inc inc inc cmp test bt rol xchg neg stc shr ror mov shr mov bt pushf pushf xchg btr stc mov bt cmc test sub call push je jne adc dec in and mov dec daa popa shr pop ljmp loope jmp push cmp or lods out aaa cmp cltd mov push lods stos rorb push mov sti ds sbb mov (bad) shll mov lock sbb mov addl xchg cmp add rclb test or inc cmpb repz and jbe and jle jmp pop out es pop mov mov mov cmpsl and inc xchg (bad) icebp push sarl pop xor adc adc fsubrl iret push js fdivrl jo sub inc fidivr ds xchg aad (bad) or bound sub mov push mov out sub icebp aaa dec aas jle push imul movsl xlat arpl dec cmp mov leave mov mov jecxz ja adc mov andl dec loopne sub mov test mov int and jle dec test addl push cwtl xchg pusha mov inc imul pop adc adc and inc xchg pop push push mov adc add cmp sbb xor jb add (bad) in or pop cmp adc push lds stos or test rorb call pop sub and adc repnz fcmovnbe inc mov int3 fildl test pop jae xor in mov mov sbb nop xor xlat cmpsw outsl jb and pop sub fistl fsin ljmp std outsl or cmp or rcll out push xchg mov mov or (bad) pop push ds add stc jle fistl mov jg cld js add add adc fldenv lods xchg fs xchg lods jno lcall pop mov popf pop (bad) or cmp fcompl fwait push stc pop mov sub inc ljmp dec push repnz xchg jecxz cli jmp les enter mov jae scas imul bound fiaddl sub insb push js sub jp jne mov loopne aam insl mov mov sub popa add js or pop pop cwtl cwtl mov inc cmpsb ds loope mov adc pusha mov push cmc push jns xchg loopne (bad) (bad) mov daa push (bad) int jbe data16 divb fnop pop stos sbb sbbb aam lcall add or mov sub inc xlat popf mov cld push fs sub xor movsb lods stc jae cmp movsl repz or mov (bad) aad (bad) icebp push (bad) push dec (bad) pop jbe pop and (bad) in shl (bad) hlt inc out pushf mov xchg or or mov mov jmp (bad) xchg mov jne ljmpw rorb mov xor out cmp push pushf aas cmp sub sti pop jmp adc mov pop inc movsl fbld add push mov xchg push inc push mov (bad) inc into pop loop je (bad) cmp pusha push mov call inc mov sub into jmp mov stos icebp repnz (bad) (bad) mov cmp jns,pt inc shll pop mov enter xor std jbe (bad) add loope les call loop and mov stos sub sbb pop add inc pop xchg sbb aad mov mov (bad) lret lock adc je sbb mov leave sub xor xchg push add mov pushf test pop in push cmc or mov stos pop ret pop push test (bad) dec pushf fsts sub mov pop (bad) xor dec xchg and test (bad) sbb out mov xorl icebp out daa dec out bswap hlt loope movsl xlat jbe adc adc out jge add sti mov jg insb out dec popl xor push sbb (bad) nop adc or pushf call jb mov adc sub mov add jl,pt cmp pusha imul dec outsb lock mov mov aaa (bad) pop jmp insb clc mov xchg or push ss lret mov leave add dec or jae and jle pop xor mov mov mov push daa aas push xlat sbb lahf cmp lds addl pop not pop mov imul cmp stos cli add repz fdivrl pop faddl push lock adc jmp in adc and and adc add adc jns cmp xor or mov out lahf mov sub arpl test aam pop add lods xchg push jbe aad ficom cmp lods adc pop add fldenv jno ljmp dec mov inc dec icebp repnz dec mov sub clc add mov les cmp mov pushf adc pushf and mov test xor aas popf adc ja icebp adc xchg and pop fidivl adcb sti push int int push scas sbb fs xor cs insb add jmp inc xchg lea sbb mov mov ljmp (bad) and or ficoml out mov je,pt or xchg (bad) ss mov arpl lea pop add test out push ret pop sbb sbb insb daa outsb xchg lret pop xchg dec inc fidivl cld cwtl stos cmp call ds xor mov lret xchg sub cmp inc push sbbl fstl add xor jg movsb xchg jmp xchg arpl scas pusha rolb pop sarb dec mov test dec jge push js jne sahf je and rcr mov pop and jne adc es add add xor test sarb adc mov clc stc jmp pop xchg popf ret dec ret xchg xchg adc scas int lret and add inc mov cvttps2pi push cmp lds or repnz call sub xor rcll mov pushf mov cmp inc lods popa xor leave loopne ffree pop xor lock (bad) imul je pop add and lds jnp in int3 fistpll fdivr and xchg mov faddl (bad) js add lods out dec (bad) scas test lods dec sub dec jmp icebp dec data16 xchg adc mov inc stos mov lcall or ds adc subb jecxz mov test pushl movw pushf call jmp stos pusha mov pushf lea jmp loopne push fidivl adc mov stos loop out jmp out mov stos inc das aam (bad) flds mov pop push dec gs stos mov mov and (bad) push outsb out insb sbb lods pop into out or push les shr mov xchg or mov rcll sub ja push push inc xor sub mov in clc imul mov or push adc push push ljmp inc adc push push xchg jbe js jmp mov mov pop push dec and stos ljmp ss inc test inc (bad) or ljmp sub xchg push outsl ret or inc popf mov roll cld jo pop jnp sub outsl cmpsl in es adc das xor inc fisubrl mov int3 ret out mov cmp adc pop fwait mov sbb adc mov in mov icebp out mov loop scas or or pop imul rcll add adc inc arpl and fs push mov or xchg or jmp ficomp int3 in test mov int3 jmp jo mov daa lods mov das xchg jmp adc arpl jne scas or dec into mov popf shl pop cld mulb aas adc push sti negl or es push dec test sub inc fdivl out cmp mov inc xor inc arpl leave loope jno fldl pop xor jb movsl cltd jp pop pop jbe inc movsl cmp or movsb cltd sbb lcall popa push dec cmp add add leave mov xchg imul sub or xor mov shrl jg scas mov dec mov jge fcom and mov push sub sub pop (bad) push mov xchg jmp enter dec (bad) in dec popf xor pop mov cmc or andb cmp lock inc mov jb inc and pop jb outsl pushf lea jmp jmp xchg rorl xor inc vunpckhpd pusha mov mov addr16 mov mov dec mov clc dec xchg xchg pop or cmp sbb test pop cmpsb jnp (bad) mov (bad) dec movsl in xor push push xchg adc mov mov adc cs cwtl fs xor imul jg mov xchg loop inc out jecxz (bad) je mov mov test add inc add mov pop (bad) jg jmp and aas sub sub jl or in pushf mov pushf pushl ret push pushf lea jne pusha pusha push pushl stos mov lea jmp add insl imul insl dec jne add cmc dec or or mov lea movzbl mov neg add inc movsbw shr test adc pushf rcl mov dec movl add lea jmp fcoml jp cmp inc push es scas xchg sub mov outsb or popf ret cwtl mov cmpsb mov dec incb push xchg pop std outsl mov inc xor push (bad) fmuls xor add fs aaa xor test adc cmp subb dec sub xchg pop in xor inc fnstenv mov aad lods adc dec mov mov push inc leave in xchg out cmp gs inc mov popf push lcall je sub nop outsl orl sub push xchg pop sub les (bad) fdivrp dec ret cld mov cwtl out (bad) repnz iret repz subb sahf push xchg in in adc movsl jo lods stos mov in aam je cli loope jg sub ret lret lods inc imul xchg jnp cmp (bad) mov adc dec into pop and not movsb fwait pushf je or insl jno and shrd dec lods lret add xor fistpl cmp xchg dec stos mov clc mov ret out xlat add xor sbb xchg inc movsb cmp adc mov stos lods rclb orl sahf mov add (bad) or push jmp je lret fidivr aas jae (bad) clc push or stos ljmp xchg adc jle xchg xor pop out aad pop jo insb loopne xchg lods mov outsl jle addr16 pusha call and mov es scas lods add (bad) shll pop jb es or sbb push add nop dec jo mov repnz add loop decl call mov stos and mov icebp fdivs cmp rcll fimul pop add loope fnsave aaa xor xchg out (bad) or js push add inc scas or scas scas fnstsw test lcall mov adc pop test fdivrs iret cmpsl nop xlat lock push enter cmpsl sarl push cmpsb and and insl pop movsb or fucom sbb jge rcll nop jl mov dec fnstsw inc jbe dec and and sub rolb add sbb push std xchg out aad lret sub xorl orl jg xchg mov out xchg pop stos xchg cmp adc out jl loop push fiadd or cmp add sbb push cmpsb fidivr ds mov clc test call adc adc outsb lahf out ret ficompl ret call scas push pop iret in cs dec pop sub dec lret ljmp jmp pusha aad inc repnz adc in pop iret inc sbbl js dec pop test adc aam out stos aas lret lea mov xor lcall mov popl inc imul jbe cli (bad) xor std adc sbb and aaa mov jns ss mov in dec mov push (bad) mov and dec pop add sbbb movb mov push pushl ret out (bad) or adc jge sbb push cltd xor sbbb adc cmpsb adc fidivr fidivr and leave addr16 je inc repz add lods sahf bound out mov dec fstps mov cwtl shll mov adcb cmc jo and das dec lods cmp pop hlt pop mull test xor sub bound dec mov scas fnsetpm(287 ss cltd imul mov int jne pop inc xor outsb out xor jo ljmp ficompl pop jp imul xlat inc (bad) in stos scas jns lret push mov ja adc sti cltd sub fstps lea jmp mov jno sub cld lods adc inc fcmovb mov xchg loope scas adc scas dec sbb lods (bad) loope pop pop jo fild repz outsl xorl mov ss add pop mov xor mov lahf pop jg inc lcall dec adc jl lds pop stos mov jl adc mov mov xor lock (bad) push out sarb mov add icebp push jb mov pop jo es std push scas fisubr popa rcr mov loop pop pushf add rcrl or out mov xorl scas mov popf or mov mov movsl jp jnp fwait or adc add jnp dec addl les sbb cld cmp xlat push xchg mov repnz xchg or popf loop bound xchg xchg or popf xor loope pop or mov test cld jb jno (bad) pop dec (bad) fdivr (bad) ret cld jl outsb popa jnp inc cld fmull dec sti inc jo (bad) jno cli repz xchg outsb scas cld popf mov adc or insb mov pop mov sbb fnstsw jmp (bad) popf imul scas pop mov inc or inc mov inc dec or jb mov ljmp mov xchg stos pop or and adc decb jge lea add or jnp add xchg or lock xchg or leave lea jae lcall push addr16 mov sti xchg insb mov jb or sti mov leave inc jl jl popl add or dec inc xorb pop orl pop jnp (bad) roll add mov sti pop (bad) sti adc mov lea xchg or (bad) je roll cs inc rorl sti add repz nop lea jmp imul sbb aas inc mov test xchg add test lods xchg fwait jnp or pushf jmp fwait aam and dec cltd or sti xchg or mov (bad) sti add jnp or xor mov jae stos push inc jle jbe jnp or jnp les jnp lcall jne lea testl mov sti iret jnp test mov adc sti out jle mulb xor or mov sti mov xchg jne jge jnp roll movsb push loop xchg add mov sti out pop repz lods add mov fidivl cmp mov mov inc dec (bad) clc pop rclb mov jae sub cmp (bad) repz insb mov scas sti xor movsb add cwtl jb scas jno pop cld fildl or mov std out (bad) bnd fwait jns inc mov mov test test and mov mov ret mov jle and adc add lea (bad) icebp repnz mov xchg (bad) incl add xor sub xor repnz push adc add or repz lahf sbb cli jmp add setle sub js xor xor jge push add inc int3 sti cmp add cmp (bad) fstps add mov push in test inc add add outsb ret aad add test push imul mov cmp out add lahf cmp ret aad add mov lret sti imul jmp das add and das inc mov xor aas scas jmp outsb stos push push in sub outsl mov ret cltd mov repz loope loope subl dec decl fwait xchg incl test push jae add imul fdivr mov mov (bad) stc jb xor (bad) out fbstp call aaa sub shl lcall mov daa arpl arpl repz push pop xor and mov jmp push movsl daa repnz pop sub test and out jmp ret divb gs fcomi jmp (bad) pop cli fs add xor mov add or jp jl (bad) (bad) or pop scas mov imul cmp sbb dec (bad) mov stos jmp imul xor cmp out loopne mov fild pop enter mov cmpsl (bad) mov jmp jecxz cmc and es jmp dec and jmp lret mov push xchg (bad) cwtl jmp jnp mov jmp dec xchg outsl leave insl jmp mov sbb cmp mov sub add cltd mov repz lcall push mov movsl and (bad) sti incb add inc sbb mov incb pop les (bad) movsb xchg (bad) insb orl lock or mov mov jmp mov outsb add ja (bad) jmp and scas sbb jnp sbbl inc jp inc jbe adc std mov mulb in dec cmc push outsl or ret imul daa mov data16 mov cmp loopne std xor out lret std xor out mov std or roll add mov add (bad) je leave pop push pop mov idivb lds enter cmc mov add loop xchg add and mov repz lret pop mov cmp fisttpll sbb fldl inc jl add std in mov ret mov mov xchg icebp xchg rcll pop pop adc mov mov int3 popa jge fstpt fstps ret xchg lea ljmp pusha scas mov sti mov mov (bad) loopne or add in mov push lret jmp and add out mov xchg fistpll (bad) fildl jge call push iret (bad) bound std inc iret pop rol roll mov add adc loope jg shlb pop leave mov in ret mov mov aas jbe frstor mov addl add lahf lea test cmp aas push push cld rorl mov shl out mov cmp dec das inc lret popa mov icebp xor inc adc adc pop cmp adc in idivl ljmp outsl push aad bsr mov mov mov inc xchg das jle cmp (bad) sbb or (bad) cmp cmp sbb push sti cmp outsl lret rcrl ficompl cmp fwait push iret sbb jmp mov cmpsb mov fmull add les cmpsb pop scas or jno sar fisttpll cmp inc out inc (bad) jmp inc jg xor jg cmp or adc dec psraw scas pop stos orb nop ret lahf (bad) jo mov outsl pop mov xchg decl outsl add (bad) adc mov cmp mov push mov movsl fisttpl dec sti (bad) out mov mov jae fstpl fwait or jmp pusha mov lret cld cli xor imul (bad) sbb adc mov jb mov xchg sbb lods cmp mov mov mov test mov or lds ds std cmc mov stos mov out stos jnp addr16 pop test mov inc adc decb ds loopne cmp sub pusha add sbbl dec or in rorl fdivp xchg popa mov mov mov popa jb xor fild ss add fsincos cmove push icebp fldenv adc xchg test fstpl add mov add xchg jl mov (bad) stos loop subl add ljmp adc les inc ficompl mov mov xchg rclb jle add jae push (bad) arpl mov outsl xchg xor pop inc lahf ror dec mov arpl or inc jg pop xchg or out mov mov inc inc aam jo incb pop add daa dec mov outsl imul rorl das adc push pop push jmp btc arpl sti adc pop and xor mov sahf das in inc loope icebp pop aas jb jl jae loop or add pop adc pop inc orb inc jl lds push bound inc inc jecxz inc (bad) jo pusha jecxz mov or mov cmp lea xor lea in ret daa aad movsb insl mov mov (bad) (bad) cmpsb jl clc mov popf cld mov subb sbb int in inc jg mov lret pop repz mov out adc jg adc jo cmp shl into jecxz cmp mov mov push mov push mov arpl mov cmpsw xlat aas add cmpsb or popa cmpsl (bad) pop jl lea fwait repnz aaa adc sarb es xchg push nop popf shrb mov (bad) xchg cmp or scas mov inc or imul cmpl adc imul loopne lds dec dec pop pop pop and lds sahf and mov mov mov jl outsl popa fnsave jg mov loopne inc lds fdivl test sarl add add sahf (bad) lock inc mov pop add add and cwtl mov sarl add dec adc iret nop test xchg and push loop mov add mov add ds jbe mov aad add push (bad) lahf vmovd jge push mov cmpsl inc mov jle adc mov aam fildll adc mov mov ljmp mov test mov jg test push inc jae data16 sbb xchg mov lods lret push xor pop jg dec push pop test movb xor xlat mov add jge xor push add cmp xor and pop add inc stos mov and mov pop mov shll int sub addr16 inc movsb jno add in icebp dec rorl jg and sub dec add xor xor lock arpl sub idivl (bad) mov leave enter imul out hlt mov fistp xor (bad) sub pop dec adc (bad) mov loope cld mov in rcr (bad) xor jg (bad) fwait sbbb lds push movsb mov inc xchg sbb pop scas aas cwtl (bad) jmp push les lea pop pusha adc jmp leave sbb aas mov xchg sub add xor dec sub mov inc outsl sbb dec ret pusha les jmp out mov inc out out fdivl les jnp lcall ds fistp mov (bad) push aas mov mov test (bad) sbb inc insl movb sub add shrl cmpl mov push jecxz push pop ret movsb fldenv (bad) mov adc sti or shr add out fwait pop sbb mov xor shll mov mov hlt jo pop jge mov cltd outsl jno sbbb push icebp mov js (bad) (bad) insl rorl push ror (bad) fildl mov andl fadds add cmp mov sub mov cld xchg test test repnz jg jns pop add jmp inc inc mov sub mov mov std int jnp pop sarl add add rcrl jecxz pusha aaa and pop xor (bad) (bad) cmpsl mov or inc test jnp jnp cmp and pop rorl add shrb and jae pushf lea add and xchg inc sti and insb insb add mov cmpl adc xorl loop dec mov add cmovge xchg jnp mov jp jg adc outsl jo mov or xchg cmpb add loopne pop add pop add call or jmp xor jg xchg movlps adc scas (bad) jle cld push push pop mov ret dec and mov imul loopne mov (bad) cmovne out pop jle inc cld nop push xor mov adc sbbb mov shlb mov xor pop gs cmp add (bad) ficomp mov lock inc sbb ret std inc cmpb nop xor or sbb les fidivr inc add mov ds cld lods jnp fnstenv insl lds ljmp jle push mov cld mov pop lret inc pusha mov add inc add add or les jge inc and dec sbb bound mov dec dec popf movsb imul mov or incl in nop aas sbb loope xor movsl out xor fs mov jge loop nop call jnp aam add cmpsl mov mov sub imul cld cwtl mov rolb mov cmp stos cmp lods adc mov sti xchg ret jl cmpsl inc adc pushf lahf cmp lahf pushf pop mov add sub pop orb jnp mov push movsl inc mov xorl or add cwtl fistl sahf jg aam cmc daa test sub (bad) adc (bad) jge add (bad) in fwait lret mov rclb sub push cmp (bad) cmp ret sbb add mov pop mov icebp pop pop adc nop rolb cmp xchg pop int jg and xlat pop pop jnp sbb and jge sub sub test jg cmpsl mov nop mov add dec inc aas loope in cld addl sbb sub xor test pop aad test dec sbb mov lret push divl loop aas jns sahf sub jecxz pushl cwtl cld rolb cmp inc adc movsb stos dec loopne adc inc lods cmp mov (bad) pushf and pusha lea (bad) loop inc add xchg inc and jecxz xchg loop (bad) mov and add inc sbbl loope adc dec push mov mov sbb pop jo fnstsw sar shr shl push sar pusha jmp cmpsl mov inc scas pop arpl push pop jne jp jne xor ss sub dec out popa (bad) enter push fwait popl stos pop or inc mov jnp aas sbb pushf fisttpl inc mov jne ja shrl (bad) leave sahf incl push fist or aad out jmp jne jnp clc pusha pop lods mov add jno adc enter jecxz mov repz mov adc adc sbb js cmp adc insl call mov jns in mov ljmp imul fldenv cmp and push cmp fldenv pop mov test push loope notb lahf gs lods loopne xlat ja divl movsl cmpsb lret push int3 adc aam subb jne ljmpw mov inc cwtl inc jno xchg ja mov push (bad) xor (bad) xchg hlt rcrl pop imul shrb mov adc shrb cli xchg idivl fwait ret and subl jb cmp jp jo out xchg add mov xor xor popa cmp dec jp imulb mov (bad) (bad) sub sahf pop or jnp xor xchg mov mov push ds mov xchg sti xor fstpt fwait mov mov dec psrld stc dec or movl scas rolb sub mov pop sahf cmpsl and out imul fsts inc xchg aas jnp add stos subb xchg or lds jg int3 fiaddl push jp lret mov or test mov add dec fmull fldt sarl and fcomps jnp fcomi sbb sbbl adc sbb (bad) mov stos push dec test roll sahf jnp jae aas mov add mov mov arpl mov lods mov mov inc pop test rorb icebp pop add roll nop push jmp mov rorb pop rcll sub into lahf pop mov mov cmp jnp out sbb dec cld int cld xor scas scas mov and or xchg sbb cmp adcl cmp mov jle cmc scas sbb int mov insb or pop push cmp sub scas rol lret cmp jg push lahf mov jl (bad) lods in push (bad) mov roll aaa inc lock lea leave fwait inc in push add les xchg pop sahf dec xchg jl add and movsb lods or jecxz lds mov sti mov and lret movsb loope push test rcll ret stos in jns fs gs pop fnstsw imul sahf sarb ror test dec jle fildl jmp popf adc sub lret push ret xor sbb fs popf popa shrl (bad) fwait lcall inc aam in fmulp test data16 std cwtl mov mov cmp loope adc push loope pusha fwait lock aaa ffree inc test (bad) mov mov xchg mov jle push xor daa jg fwait out loopne xchg lret fstpt ljmp mov mov or and jae dec jge es iret (bad) sti jnp (bad) mov loopne idivb sbb jnp jge mov mov or test ret mov rol push xorb adc sar test jnp add movsb sub xor add imul inc jne xchg mov mov stos lahf insl jl popa leave and mov mov lret loope xchg mov into (bad) jl (bad) nop jg pop imul les cmc popf push add dec push xlat ret pavgb call dec sarb int3 sbb or jecxz push out fstl pusha cmp mov cmp std xchg pusha or fwait inc fstl mov imul ret mov pop or dec sarl inc mov mov packsswb pop mov mov mov jge inc dec popf xor mov or jns popa pop sarl push lea mov push xor cmp dec lea dec cmp jg mov ds dec sarl (bad) or ds enter xchg movl ds pop sti or sub mov fwait inc mov mov adc iret inc or dec sub lea inc cld lcall movsl enter lods or movsl dec mov xchg movsl leave mov incb and sub jg jae xor lods dec xlat push mov fsubr mov lods lods or (bad) xchg and sub std aam lock mov sub jmp adc fdivl roll jo or les sub cmp adc sub (bad) xor cmpl xchg pop jle lods pop (bad) sbb push xor jle fs jnp sbb repz pop dec cli sti jge (bad) mov sbb xchg add aad mov mov ret out or insl ret xchg decl mov fistpll in shrl mov test lret aas pop dec mov std sbb mov sbb pusha and or adc cwtl add cmc cmpsb pop jle sti or mov dec fstpt clc int or mov push or mov cli and push mov pop xchg ss out mov in and mov or scas fwait xchg push pop je push inc (bad) fild in lods xchg nop scas test pop sti lods xor fistpll jg rcr repz or mov mov sti xchg or or jmp pop jae jp std sti and lahf scas or ret je out mov stos repnz cmp fs pop aas mov enter mov adc cmc dec mov mov mov cs daa imul xor lahf cmp lods or pop cwtl aas jnp in aad jae pop or (bad) imull sti je jns push cmp loopne mov loopne ds cmpb cmpsb lret push mov push rcr jg ja fucomp std dec lret mov jl xor and xchg sbb sbb in add ret add mov sti mov sbb (bad) test je sbbb push push loope mov inc cmp out stc push scas js loop popa push rcl xor lods mov jnp ret push or add lods mov test fstl jmp inc lock scas fisttpll int add int scas pop adc lret mov popf stos or vmread cmp push leave dec iret xlat dec dec sbb in (bad) push jb mov adc lods (bad) int or xchg adc or push push sti iret int enter cmp dec sub ds stos int lcall pop push jle dec inc or mov sbb ljmp out lods or mov adc cltd push add sub les push jbe nop shll xor xor add rorl stos cmpsl pop pop and lret inc nop jle mov and cmp jnp movsl dec fwait imull jmp sti or fstl mov leave xchg outsb dec mov add out or lods clc and scas enter and lods add push pop ret add imul pushf push or int3 (bad) out cmp lahf and (bad) cli clc decl add xchg aas lds dec int mov sub or vmaxsd jo loopne pushf (bad) aam movsb mov jne sti jp and add mov push pop mov mov xor xor imul sbb sti xchg mov test cmp (bad) sbb xchg mov sub dec dec into stos das xchg dec aas jb inc leave sti pushf or jp inc imulb mov ljmp faddp in movsb adc lea stc leave lea push lea fs adc outsl (bad) and adc pop and dec and or sti xor and jbe push lahf sub pop dec fs stc sbb addl jle jecxz cs cld xchg pop aad jbe pop sub sbb shr fstpl enter sub dec lock and fwait jg loopne loopne test jl dec jo xor cmc imul sbb movsl add jl adc ja lcall popf insb sub sbb lea pop inc fnstcw repnz rcrb xchg xchg outsb and test call dec in lahf or hlt in (bad) in daa add cmp inc rclb cmpsl add pushl pop aas sub cmp xchg mov dec daa jg das mov int3 movsb inc cmpl in (bad) ja (bad) daa xchg mov fsubr lea inc lea notl sub pusha mov dec lds sbb lret mov mov pop pop int xlat or leave or or cmpsb loope add sbb movsb mov mov mov sub lahf xor sbb leave cmp dec dec cmp add shr pop ret rolb inc fild or cmp rorl cmp pop das inc lahf (bad) fiaddl subl pop popa xchg cmpsb jno mov movsl mov scas mov sub lret in leave lds cmpsb cli cmp xrelease in xchg jo shl iret fs mov jp and push addr16 add sbb dec adc mov sbb (bad) insl inc sbb fistpl (bad) in push dec push inc xchg test push sbb and xor adc decl mov inc sbb push pop pop sbbl ja out loopne lahf jl repz stos call dec add adc stos mov push pop jo fsubrs xlat sbb or rorl xchg mov movsl pop roll mov jnp movsl or jnp jns (bad) stc adc lahf xchg enter inc and inc repnz mov aad push (bad) stos add lahf pop movsb jmp sub fdivr dec hlt add imul add leave mov test lods loope mov (bad) cld mov lret jae or and std xorl ds jmp jmp mov xchg cltd imul push sub sub repz fisubr in insb sti in lret mov in repz stos add fucomip (bad) pop pop add mov sub pop ret pop mov rcrb jo push enter dec add pop and push lea int3 xchg int3 in sti repz xor (bad) into sbb aaa push dec scas sbb test sbb (bad) ret push cs int3 pop sbb orb test pop int3 ljmp cltd mov imul sub xor das aam fmulp cmp inc add mov rolb in test cmp mov mov xchg das aaa cli sub cmp pop (bad) push aad imul andl lods imulb or mov or lahf push dec cmp mov stos lods insb cmpsl sbb xchg lret adc dec or outsl rclb pop outsl pushf js scas fisubr scas cmp movsl jecxz lods pushf pop or stos mov rorl (bad) lret sti (bad) mov dec push mov mov adc stc int loopw int3 mov add xchg scas mov out dec gs cltd jnp mov sbb lcall or adc ret adc inc and hlt xchg or lods imul cmpsb mov push sti or xor das push les imul and lcall mov and pop push je mov rcrb sbb xchg fstps (bad) mov lds sahf inc sti rorb leave sti pushf xchg sar fwait sbb cmp and movsb (bad) jo pusha dec arpl cmp cmp arpl leave pusha lods mov dec cmp repz fdivrs int3 enter icebp jge fisubl push sub mov inc fs sub ds or les cs xchg xchg cmp std mov lds jecxz nop xchg flds or imul outsb sbb ret in pusha loope lea sbb (bad) sbb cmp cmpsb sbb sbb jnp popf movsb sbb mov or loopne jno jmp sub (bad) into psrad loopne movsl cmc rorb cld or std sbb xor sub cmp stc vmwrite dec mov mov jnp or or push xchg push stos pop add mov xchg lahf ds or (bad) mov mov lahf add mov push cmpsl add popf fimul adc fistpl adc rol mov add dec ficoml lcall lea inc test leave int sti sbb stc mov sahf mov cwtl pop add add or mov ss pop mov inc jnp scas add aas out mov inc or sti dec or push mov jmp lods sbb push jmp cmpsb add fs mov xor fsubrl lret jmp push cmp shr push movsl movsl scas movsb mov lock std jmp out xlat mov sahf push nop xchg cltd fwait mov sti push or jmp dec push cmp nop cld fistpll stos sbb in je and outsl dec add mov mov adc shrl xor mov out je dec pop and mov adc aas add repnz mov pop lret jmp cmp fstpt jmp dec rcll pushf nop dec xchg sbb in jmp (bad) cmp insb fwait lods stos add jle fdivl sar mov pop in lret adc mov pushf pushf loope mov inc sbb mov inc xchg jnp mov inc xor dec dec movsb mov push mov push jg jle and (bad) pop leave xchg or adc pusha inc xchg dec scas int3 xlat cmp inc inc xchg imul in mov scas pop (bad) inc dec (bad) jge mov fisttpl mov call lods fsubrl (bad) jnp,pn cli sub (bad) std inc mov inc cmc int3 push outsl stos out and push cwtl and fist xor push scas pop push mov cmp sbb or enter lea stos add stos push fwait xchg mov (bad) insl mov mov invd les or (bad) pop outsb xchg clc sub outsl (bad) mov cmp mov dec xor faddp jp adc lahf pop fwait int3 add fwait adc push and ds popf jge lods lds inc and lcall inc ret mov popa movups push adc xchg adc pop sti sti xchg mov sub mov int3 adc dec mov jns loopne dec push inc fist lods or xchg call call dec jl hlt jne,pt inc mov jnp repnz add out mov loopne iret lea stos mov adc sub call mov std dec or jmp adc add cmp push addr16 dec inc test pop pop cmp fsubs or mov inc xor (bad) out fwait and test insl mov arpl mov fwait adc adc popf (bad) dec fisubl jl xchg cld andl scas cmp stos or mov cmp mov dec push int lea xchg std mov test or int3 mov inc sarb or pop pushl jne fisttpl xchg outsb and or mov outsl and movsl and pushf adc jle pop push jl inc or leave aas mov outsb orb arpl out pop jl add mov push lods push popf popf (bad) lods inc (bad) hlt rcl add movsb lds sti icebp jg fwait mov je mov cmp repz loope in adc sbb xor lcall pop mov inc cmc pusha enter pop std insb jg xchg adc jmp leave add push ret pushl dec push pop pop nop sub pop lret call (bad) mov aas or imul jnp dec xlat push outsl inc sbb push jnp mov dec mov fcomps fs or into pop pushf cmc call xchg sub pop lods test jnp cmpsb or adc (bad) mov or dec inc iret mov loope lea inc lea and push sahf xor pop xor push mov or xor mov push dec std and xchg sub testl sbb lcall push mov fs sub movl insb rorl fwait sti dec fcmovne dec push imul in sbb mov lods jg inc sub outsb out mov icebp cmp stos xchg or sbb or pushf xchg jle and or mov xchg pop inc xchg dec ss mov sbb leave xchg shll aas popf enter mov inc push inc lods mov adc movl push sbb sbb xor push and add imul mov mov aas repnz inc push mov mov push inc addr16 and mov and pop or mov aam movsl xor hlt popf xor xlat stos add add (bad) cli xor mov push mov ret hlt out mov (bad) rcrl mov aad std mov mov adc cwtl popf push mov int3 add testl push mov dec daa lahf into cmp pop movsl mov lea xchg nop xor xor xchg arpl cld mov or enter cli ja jg xor push dec mov jbe push loopne pusha inc lds std dec inc stc jmp ds dec int adc cmp mov inc outsb das jnp jns lret xor pusha pushf xchg mov xor leave add in fisubrl ret rcr bound fisttp stc jo mov cmpsb faddp std fidivrl leave xchg or clc add ret daa lret mov (bad) leave repz lret (bad) outsl lret aam (bad) jmp adc mov dec mov test loopne jnp or les or lret push mov ficom inc fs sarb (bad) fsubp xor das push call or insb mov jp jl popa or sbb insl orl mov in pop add or push pop sub nop subl (bad) fild cld push fldenv xchg incb jnp int3 shr mov scas mov loopne mov inc sahf jl pusha mov sbb pop cmp (bad) mov arpl lcall xor test sbb mov mov mov scas and lea push out repz rcrl repnz repz push out shl mov cs insl out push (bad) and (bad) popf and pop pop xlat hlt pop and movsb sbb xor ret fs jnp,pn dec (bad) dec dec cltd test cmp push dec mov pop dec cmp mov xchg pop dec mov adc mov push das add mov inc pushf shrb pop hlt stos xchg pop xor push hlt inc adc dec mov sbb into repz lret shrb cmp stc mov adc jle fwait adc fxch jbe adc sti pop jmp xor xchg pusha mov das sarb jp jmp std dec and das ss fsts xor push add lahf pop cmp add sahf cmp rclb (bad) cmp adc ret lcall lds nop or je aad inc lret sub jl stc pushf pslld out lods sub push ror mov dec jae adc enter sahf in mov sbb push addr16 in sub arpl mov je pop das xchg int mov mov dec sar and or cwtl cmpsl add pop adc sbb pushf xchg jno sbb decb cwtl fisubl mul cmp dec mov mov das aas dec inc pop lret arpl inc mov inc sub push inc gs pop mov add sub lcall jne xor jge mov nop leave sbb mov mov and fidivr dec adc sti cmp std cmc (bad) in cmpsl fcomi fnstcw stc ss loopne cmp aam std imul std (bad) and stc das cli jns and (bad) into and mov xor push push jl ljmp sbb jnp jmp (bad) jno add push or jmp (bad) xchg add sarl movsl xor lahf add pop (bad) repz divb sti and repnz mov mov xchg ret fs ljmp inc psubusb push fisubrl xchg movsb cmp fxch push xchg fnstenv mov out mov cmpsl in sahf push pop cmp movsb std ret add int3 inc mov dec fstps or mov leave lret test (bad) leave in jnp call push shrb jae cmp leave lea dec test lds enter pop pusha gs (bad) iret xor scas dec inc wbinvd mov repnz arpl out decb mov sub mov dec mov mov ds and fs or roll ret mov and or dec mov int mov jnp aaa jge adcb sub (bad) leave dec add jnp lds daa and push cmpsw lods and jne je imul cmp mul into mov jle lods mov int3 jbe dec dec or nop test cmpsl mov ret arpl add adc roll inc mov inc stc das outsl ss fwait test or sahf add jo jnp cwtl cltd (bad) leave inc jp mov sbbl leave pop and mov dec xlat jne in into rclb lds or test fldt (bad) scas pusha cltd and repnz pop pusha loopne jle or rcr dec lock xchg cmp pop lret iret cmpsl fdivrp lds and pushf gs ljmp mov mov sbb push xchg mov rcrl pop push ret (bad) cmp std xlat dec lret ss jae pop mov xor lret pop jnp js es push push test pusha xor roll cltd push add js (bad) repnz mov add mov les outsb add dec or inc jo stos pop sub adc sub dec dec in and fwait or mov icebp mov xchg inc jl stc xchg int3 sbb jnp push pop test mov test std cmp or mov lea xchg dec fstps pop inc mov or push pop pop jmp pop lds aaa push or mov movsb pop rol xchg pusha jp adc cmp cmpsb in jl stc pushfw jle jb stc popf cmp or add pop rcl mov leave leave mov and cmpsb std inc loopne cwtl dec add mov cmpsl push and mov xchg dec xchg mov ret add lahf test jnp iret mov mov (bad) ds cmp out adc daa in xchg outsl sub mov rcrl mov mov lahf outsb add xchg test add push xchg or (bad) and cmp mov imul sbb in loope adc mov in add or (bad) out mov cld dec arpl das lcall sbb push push pop pop sbb dec aas add sbb aad aam (bad) jb (bad) pusha and decb sub cld jo (bad) out xchg mov push adc inc mov in mov cmpsb out jnp xchg cld es out loop mov sub xor lock stos mov jnp sub mov stos ret mov jbe and imul mov dec fsubrl in sub sub mov mov or push mov cmp or sub in push pop dec push lock dec jnp imul sub jl fwait push pop mov jo or and lods faddl imul cwtl sar pop cld pop ficompl adc xchg test test into push pushl cmp jg pop dec inc mov cmpsl push clc in (bad) aad fisttp mov fs xorl sahf adc sbb cmp (bad) jmp add sbb mov and xor pop jp mov imul cmp (bad) lret mov in mov mov mov call and fimull aad mov aaa iret jnp call xor pextrw adc lcall into pop lods sub repnz dec (bad) out mov (bad) das mov mov call push mov ret or dec push (bad) mov fildl sar (bad) mov inc fidivr sar mov jne jne outsl push mov pop add test popf jb push inc fwait xchg ffree andl dec int mov das shrl and push xchg lea mov mov sbb push out mov cli enter das aas test fldenv pop clc push mov jbe aas add lea in roll mov dec xchg push or mov icebp dec push jne imul es cs outsl fstl test fistpll mov jne push mov (bad) enter repnz ja stos (bad) popa sbb leave or icebp and xchg (bad) adc test std (bad) loopne mov inc sarl movsl pop in lods push mov sbb incl sbb pusha add inc hlt out fnstsw imul cmp lock mov nop xchg cmp sub test jp arpl mov push ja scas pushw jl inc popl sub xor add nop jecxz pop sti add mov jnp inc out roll inc dec aam cmp fisubr enter (bad) popf mov cmpsl jno cmpb popa in ljmp sub sarl inc outsb mov push sub xor scas fs into test stos or jnp cmpsb sbb jle (bad) mov scas addl inc sbb adc icebp or or roll int sti xchg loop mov or cmc sahf dec ja faddl lcall in call movsb int mov sub dec ja dec jge ja je jmp popf add pop jge xor push rol imul push dec and pop add cmp ja cmp sbb es pop aam aaa jne lahf ja rcr jnp push popa gs mov sti sub jg push arpl jp and adc mov addr16 rol cmp inc lea xchg xchg sub inc fiadd add hlt insb add sub xchg movsl push sub or adc xor mov mov scas in push loopne jp mov aaa jo aas mov inc test fistl lahf push inc mov out add xchg sbb pop or scas pop pop leave pop xor pop stos repnz scas cmp sbb in shr sbb add or fwait cmc out mov mov jge and mov mov sbb jg lret hlt jno int mov data16 stc cltd cmp xchg fwait xor bound dec sbb rcrb cmpsb mov inc aaa pusha enter outsb and mov push lcall bound dec insb ret cli cmp adc int3 pushf mov faddp lods cmp movsb xchg out xor sub xchg int inc daa repz dec lahf or push mov sub lods lock jl mov and lahf daa add fistp rclb cmpsb lret das fdivrl lahf lods daa fisubr adc nop or push into jno pushf cmp adc mov xchg out pop movsb and mov mov dec sub iret mov incb lods aaa ds fistpll out mov mov repnz jbe mov and add enter lahf mov mov or in or mov outsb stos mov pop jnp sbb xchg outsb pop cmpsl int3 sbb fstpl ss mov pop inc mov testl sub rcl rorb rcrl jle movsl xor sbb sti sub rcrb int nop push and mov jl or xchg add out out test sbb (bad) aad mov inc scas push pop inc cltd test mov orl inc fistl xor lahf movntq jmp test imul mov pop add test inc push cmpsl xlat and loopne cwtl test cmp adc rcrb cwtl pop imul adc dec xlat lods cmp dec sarl pop cmp and fldt xor leave xchg or sub ja and mov push mov je scas xbegin aad add aaa in int3 rol aaa or inc xchg (bad) push stc in out adcb mov mov ficoml jnp mov ja mov jbe stos cmp aas repnz inc inc sbb fiadd sti outsb mov (bad) mov pop sbb cmp and sbb cmp or lahf sti stc mov ret inc sub pop ss add push lods xor xor mov adc cmpsl movsl andb outsl cmpsl arpl push insl cmpsb sbb pop pop dec cmpsl fsts mov lods pop mov jne jbe xor add push outsl jae sub fist in (bad) lock dec mov in out xor cmc add mov inc jne cmc push mov repz pop push outsb clc scas push adc push adc rol xchg or outsb mov (bad) jae xchg push ds xchg xchg fdivrl lea aaa jo insl pop faddl jne inc jge mov test cmc icebp mov sub inc insb mov pop jnp jbe mov jbe stos cmp mov push arpl mov insl addr16 mov loopne inc fsubrs xor jle and ljmp hlt (bad) mov data16 jle sub fidivrl mov cmpsb inc pop repnz sti mov mov repz pop lret push rcl sbb and test mov fnsave test ret fsubl push adc cwtl jno mov (bad) (bad) pop lea rorl nop sub inc push mov je or scas ret inc ret mov icebp pop jo sbb mov jle cmp lcall inc jge daa out movsl mov push sbbl in mov push and out into aam mov enter xor or cli push shr sahf bound ss cwtl sbb and es sahf xlat loope daa leave push add mov jbe or es cld xchg mov or movsb mov pop lahf es ja push daa dec and (bad) mov movsb imul ja scas mov or ds shlb lcall push push jo (bad) mov mov dec pop popa out (bad) jle je pop and push mov adc cmp mov das push ret xor push xlat fcmovnb or aas xchg cmpl or push (bad) dec rcll xor in lods push sbb nop fcoms icebp lcall cmp div (bad) mov or inc mov call out fnstcw mov mov (bad) jg rcrl mov sbb jb ljmp jnp lret je popf mov test add shrw (bad) les cmpsb in lret rcl in mov xchg inc xor (bad) xor fisttpl sbb in ret bound push imul fwait (bad) jne mov mov add mov imul (bad) push repz push (bad) sahf sbb mov (bad) arpl dec sbb mov dec sbb mov dec pop cli push imull sti mov out lahf stc mov lahf cmp pop mov cmp sbb sbb or cmp mov mov mov or (bad) out mov cmpsl cmpsb mov xor out (bad) jp xor jne pop mov cmp mov dec cmpsb test mov or sbb xor fdecstp or jecxz lret ss arpl test (bad) jb lahf mov xchg cmp inc and (bad) cmp aaa out or popa push dec dec push movsl clc call leave inc (bad) xor call leave mov sti mov ret or es (bad) push lock sbb scas pushf jbe add sbb aam add test inc xor cmp test push outsl fwait or bound loopne cmpsb sti and xchg cmc pushf sbb popl pop pop pop nop lret rorb sbb addr16 push stos scas test mov xor cmc imul test das lea jne cs ds lds jbe add gs cmp mov out jne (bad) scas mov shll add pop mov sbb and push iret rcll ja dec cmp mov add jae add mov in repz lcall (bad) xor cmp adc (bad) jecxz xchg push (bad) (bad) nop mov outsl js ret outsb push popa pushf dec push cmp xor mov orl add inc loopne xchg inc push test or or push ret xor clc mov pop or notb movsl cwtl lret call sbb lds test pop (bad) jns push pop scas push fstpl and lock lret rcrl push adc stc mov mov sti repnz xor jo mov or mov sti leave add or mov push sub inc inc xlat sarl nop mov add and xchg arpl fwait lret cmpsl jnp lods dec mov call mov and mov jnp mov pop and lahf repnz lret mov (bad) mov sahf sub mov jp and arpl lahf pushf adc adc adc push pushf sub pushf dec push adc inc push dec mov mov mov xor dec adc dec lea pop nop jnp mov dec inc aad add lret addb shrl rorl cmp pop ret test lea sti clc cmc loopne cmc push inc test cmp or or rorb xor or sbb test stos mov int cmc dec mov lret sar mov jl out or lock (bad) xchg jno add cmc loopne ret mov dec cmp push sarl ja xor in add and sti cmc in dec iret pop mov mov ficomp (bad) (bad) jl xor adc out sbbl xchg pushf pop in inc inc push aad sub (bad) aad xchg push push mov rorl or sub lods mov js jne int3 mov mov aad or mov cmp add pop into aas sbb outsl dec mov stos lds mov dec inc xchg out jl lods jl or inc stos divl ffreep jae faddp push inc xchg mov iret cmp mov loopne pusha or movl mov pusha lds gs mov pushf lret sbb int xchg iret lahf adc push add mov jge xchg aam ds cmp lret mov mov mov sti or ss (bad) aad push in leave fiaddl xor mov mov loope fst push mov movsl mov (bad) cmp (bad) push cld into int3 notb ja sub jnp nop add push sbb add dec or jno nop ss imul mov jmp mov or mov outsl xor lods cmp xchg or cs imul push mov ret mov das sahf dec imul add leave lret scas and xchg outsl xchg ret lret or test sbb jg mov or cwtl push jnp (bad) mov push xor out pushf aaa test inc pusha ss test mov add pop mov dec xor and pop lods imul rorl push sbb outsl inc out cmp mov mov sahf pop mov (bad) in inc xchg lods sbb (bad) sar je push adc icebp outsb inc mov jg pop add xchg fsubr inc cli mov mov or call add js mov fbstp lahf popf mov mov dec and pop jnp fs lods lahf jns fidiv push pusha lods repz lret sbb pop add dec add ret sti xlat sarl jbe icebp (bad) cmp ret jb fcoml arpl addl div inc sti call hlt cs out jnp pop inc ret cs divb mov repz sti push mov scas lcall mov lahf xchg fdivl in arpl xor gs and mov lock ret and inc mov and scas fisub push idivl sti fdivs xchg inc adc int3 pop scas adc jne shlb lods mov add sub testb ret and mov push ud1 scas jo push inc data16 add rcl int (bad) (bad) hlt xor xor dec cli and ret push in inc out out rcll fldl stc pop or cli testb in and int3 aam mov dec push les cmp cltd jae cmpsl insb pop add les lahf xchg pop mov lods push xchg xchg cltd pop test arpl mov outsb xorl lahf mov ret sbb xor movsb fnstcw addr16 mov sub xchg sbb stc inc addr16 xchg mov lea jo setge xchg mov pop daa bound popf xchg sbb dec or push xchg dec ret scas xor dec jge xchg shrl mov pop mov and pop scas adcl sbbl addl mov pusha and pop imul mov lcall mov add js ljmp dec dec cmp sbbl ja in lret es fdivr ss jno mov pop mov jae lea shll sbb mov les jno (bad) rol ds (bad) std pop or arpl je rolb popa add stc arpl or packsswb mov push loope sub push in mov xor cmp test lcall adc pop xlat fimull or and int mov push adc jl loope adc dec mov movsb cmpsl push pusha lds cmp fwait (bad) add es sbb fistp mov add stos xchg in add mov stos xchg fsubl xor or ljmp fisttpl mov sbb leave jp leave mov mov test add ret inc push fsubrl (bad) insb lock shrb js push rorl push or ds pop mov das clc mov sbbb sbb out adc push lock inc outsl ret les subl xchg fucompp mov out add mov scas das adc jns aad adc push inc mov push negl lret dec sahf pop in lret or pusha inc fdivrl fcomp inc cmpsb xlat fidivl cmp (bad) out lods mov push adc push push and aaa and je (bad) rcll pushf adc aad test pusha push flds xlat sub jl sbb push xchg das mov and jle shrl mov lahf and jns arpl pop stos push adc and and leave movsb or xor pop sub mov loopne sbb cld int3 aaa out iret aas or inc lods negl adc or mov int inc push push or adc inc lahf xor dec add je clc push nop push jb std adc ret imul ljmp addl cltd sbb imul cmp jnp repz lock lods loope ds sahf xor jnp cmp repz jecxz sbb fsub sti loopne arpl sbbl jecxz lret jecxz lcall cmpsl outsb pop popf jecxz or rcll les pop shrb push enter cmp inc sahf xchg push jnp outsl xor lahf inc add jnp rclb sub mov push xchg inc lods cmpsl mov lcall ret jnp decb (bad) pop ret cltd sbb or ret inc or cmpsl fidivr std mov mov lds jae mov mov repz sti (bad) mov mov xor dec mov mov mov mov andl (bad) mov lcall xchg push arpl xchg cmpsl out lds jb hlt xchg or popf xchg mov mov sub ret push jb jnp lea xlat (bad) jnp outsb push scas lcall (bad) cltd sub lret push mov jb sbb cmp jb shlb jb xor test hlt aas int3 test inc bound sarb jl bound fldt jp push cmc push add mov push repz push ret testl push lahf or icebp or dec inc sbb outsl push mov inc ret push cmp inc lea mov xor not je cltd cmc rclb pusha inc jnp sbbl int3 arpl jnp cmp xor imul push fidivl in rclb addr16 (bad) scas xor int3 aad nop daa and jb in shl popf add adc in and and fisubl and arpl and mov sbb scas jne ret pop mov mov in jnp sub add (bad) sti inc add lods adc adc into push mov xchg add lea std add insb add (bad) loopne test repnz in add repnz xchg jb cmpsl outsb sti (bad) xor iret bnd cmp repnz repnz imul jle cmp loop add push loop dec add arpl jnp lea pushf cltd sub rorb imul sar or rcrb lods mov rol xor mov mov inc xor cmp ret adc mov jns rol lea xchg sub mov sbb cltd mov mov mov mov ret sbb repz ljmp jns in lea lcall xchg jnp cmp xchg lea inc cmpl or sbbl lods xchg add sti shrb cltd sbb out sub das jno or jno sbb in jno push mov popa ret jb and dec xchg andl sbb popa shl dec or lock pop push mov cmp push lods mov push ret add lcall ds sbb call inc test stc fisub incb mov xchg inc sti ret inc fistpll fwait jno (bad) fnstenv xor push fidiv bound pop xor in mov mov pop fiadd jbe shlb repnz adc jnp js adc enter scas push jae lahf inc sahf cmc daa (bad) int3 push push mov dec jmp or ficomp mov ret insl (bad) xor inc lods or jecxz or scas cltd fildl cmpsl into mov icebp ret inc xchg xor icebp lahf ss icebp lods sar loope add movsl and cltd sbb and clc pop mov mov dec rorl sub test push add or (bad) repz test shrl or scas dec inc sbb mov or mov test mov imul mov or mov sub mov or andl mov mov mov cltd sub (bad) xchg out inc inc lock and inc xchg jne push lods mov and jnp pop add scas in xchg ret and ljmp (bad) push subb ja jb adc (bad) pop into scas roll or jo fildl xor dec add scas je ret and xor shrb cltd sub dec cmp orl fisub push std or cltd sub and cmpsl dec add repnz jnp pop andl sub inc lea (bad) in jecxz (bad) push out inc inc push push mov loopne iret push out jl ljmp bound mov inc cmpsl out sti jne mov inc ret sub (bad) decb inc fist mov outsl or lahf mov stc sti rolb fisttpll lahf gs and pop or outsb and lods lahf (bad) in dec add sar adc rclb clc nop pop inc inc out adc adc test mov inc popf mov add jg add mov out ficom addl add xor addb rcrb add jnp mov cmp lock (bad) sub mov lock dec mov jo lock xchg sbb incl cmp (bad) and add scas arpl ret and insb add lahf and jo add scas in (bad) lock fildll pop adc adc lods dec rcrb int3 push lret das and lods sub pop pushl cmp arpl xchg arpl lahf inc lea adc add mov mov cmp sahf out adc je and cmp mov push sbb popa push jb pushf xchg cmp or push pop cmp mov jne or push or xor lahf add stos std nop cmp sub (bad) jnp rcrb outsl xor daa or inc add cmp leave fsubs pop pushf enter lods inc in cwtl fdivrl xor cmp dec xchg rorb mov cmpsl mov popw mov or mov xchg push add gs cwtl pop cltd ss sbb aam mov ret pushf imul inc push dec nop sbb sub push adc xchg nop pusha sub sub lods push mov push add sarl or nop es xor or mov imul enter mov gs cmp pop lcall pop lock dec mov xchg cs and nop mov in mov xchg rol and lea stos pop inc xor scas in negl sar pop lahf test or mov stos jl pop inc inc scas push lods jecxz jne fcomps pop nop dec add push push test add and stos lret cmc leave nop imul packssdw dec add jl jge into mov cld aas xchg cwtl jnp mov dec div popf inc pop push sbb jae xchg test pop mov mov and scas outsl sti mov imul sub inc sbb into scas or (bad) cli outsb pop test sar int popf enter add dec mov (bad) jnp loop fisubl subl ret lea jnp mov dec out cmp sub in xor push sar cs xchg jg,pn cmc mov cld pushf lret adc push mov jp mov roll out popf push int3 sub push mov fidivrl aas mov ds std push or ror (bad) (bad) mov sub sbb (bad) push hlt cmp pcmpeqw loopne pushf lea iret mov sbb dec lods inc std dec mov lret sbb or stos ret lahf imul push nop jmp and loope push cld repz or jno mov lea test scas roll jo hlt lahf lods lods and (bad) cmp das fildl hlt sbb or insb push in jle or jnp mov inc fildll ret add orl repnz xor or xchg dec sub add mov stos aaa or movsl push jo xchg int lahf ret pop mov pop movsb mov lahf adc test cwtl dec ja jp mov inc mov lret push cmp xchg jle mov add jle push in add lods ret das mov pop shr inc mov lret scas jle outsl lods jmp sub mov pop sets sbb ret push inc push popf pop pop push shrl clc push loopne bound push mov add (bad) mov out sbbl or cmpsb add das pushf sbb loope and in xchg jl rorl and mov dec insl lods and xchg roll fistl xchg (bad) or inc lea jmp jno addr16 xor sub call lahf lea sahf lock outsl cmpl pop and sti jns and xchg cmp mov xchg std jge jo mov repnz or push mov hlt in (bad) scas aad cmp add popf or scas nop jg (bad) adcl adc cmp fmuls mov dec mov push les loopne,pn add push push sub dec push (bad) int (bad) insb mov jno repnz mov cmp inc and cmp sub adc pop cmp pop inc movsl pop enter std sub mov adc sbb or imul ja ret dec stos dec leavew (bad) cmp or imul lahf ficom test dec xchg std sti jle fiadd (bad) and push push push mov into popf inc inc mov add or shrl fcoms cli ret or daa cmp test inc fildl mov jae lahf outsb jnp mov inc add add loope in mov scas test fnstsw pop outsl lds inc cmp loope insb pop dec shr push mov sti mov jbe xchg enter sbb dec add sbb mov outsb (bad) mov nop add cmp pop xor xlat sahf add dec jl xchg scas in mov jmp addl pusha mov sahf inc test jp pop aaa in cmpsb mov push or out (bad) jl call popf inc push fistp (bad) aas repz rorl mov outsb mov fsubrl add mov (bad) mov mov jbe mov ljmp ret nop mov int repz mov sub xor jne dec pop xor fistp (bad) ficompl dec push je cltd push in cmp sarl repnz or mov in jge (bad) xor ffreep pop iret mov shll xchg cmp inc (bad) xor add ret fisttpl mov int3 bnd mov or sbb repnz jae pop fs add (bad) adcl fwait push cmp push xor daa lds stos jecxz jae or push cmp cmp sbb shrb inc mov dec mov popf (bad) std pop inc pusha add xchg gs add or dec pop pop or mov push fbstp shll ja outsb push aaa add dec push (bad) call cmpsb sahf add dec or cmpsl mov push push add leave or insb push sti icebp sub rcll sahf fsub lahf fnsave or push jmp sahf sub inc cmp sbb jnp push dec jl dec xchg or arpl jnp mov pop mov mov pushl cmc sub (bad) dec insb cmp xor add pop cmp aam mov lret push (bad) mov pushf js lea push ss rorl (bad) ds push je inc incb or mov pop jp inc int xlat push cmpsb in adc dec xchg jge fwait clc mov roll psubq popf dec jb icebp jns shr int3 sbb stos cld popf add mov cmpsl int inc add xchg lods dec lret jnp mov or rcrl std mov inc popf (bad) sbb xor jp ret jo and mov test and inc or mov (bad) idivb or in push push push lds shrb mov mov push dec pusha test xor mov jns rorb out sub ljmp mov jnp sbb dec add bound jae pop (bad) pop aaa pop rcr fwait es divb imul int mov test into ret jge out pop in sti (bad) xor popf clc out lock xor lods jmp mov or jb repz fstl (bad) sbb data16 mov lret (bad) fnstsw lret ret scas fstpl add lret fmul std mov sub xchg and aam stos jle iret (bad) pushf into fstl fwait adc xlat sub mov repnz lods in mov jns xlat dec jbe push adc cmp jg and mov aad jno push imul (bad) cmp lods scas sub mov imul mov cltd xlat mov cmp adc mov xorb lahf sarl ss inc mov push inc fldt rcll sbb fwait mov cmp lods add ffree fwait insl push lods and ja sub or lods adc cld xchg jno fistpl hlt adc lahf jnp int add fisttpll lret adcl aam dec mov mov mov add lods sbb arpl cmpsl sahf sti lods xchg push ljmp xor adc mov out jge es movsb es (bad) jl (bad) rorl lods std fcompl xor lea (bad) std mov (bad) fcompl imul jle dec lea mov push xchg jp or test xor push pop sti insb and mov fisubrl jae movsl fcompl and mov jae mov push mov jge adc dec loop jnp,pt mov jecxz mov int cmp repnz push aaa sub shrl enter dec adc xchg and mov xor push mov ret scas (bad) xlat push adc push lcall or mov sbb add gs mov cmc push dec xor pusha push popa adc sbb ljmp insb enter cmp pop mov ret inc insb xor outsb hlt push (bad) mov fldcw out sarl subl insb cmp push jmp mov push ret aad mov test lods lods pop pop pop jns fsubp xor jb push aas mov out pop xchg push pop insb hlt ret enter adc outsb rolb jnp pop mov ret xor mov lods adc ljmp ds xlat dec sub pop fs inc add mov ret jbe outsb lods or popf lahf or mov aam or inc add xchg sbb mov sub mov fs lds ret cmpl iret cmp jnp mov (bad) fldcw mov sub aad jns mov sub call sbb dec fdivrl stos insl cmpsb ret out sahf mov fstps clc test pop (bad) aaa mov xchg sbb jnp sbb mov mov dec pop ret lods sbb int3 scas mov mov inc and or xchg or mov sub inc adc hlt pop addl add enter subl cmovl add call je enter popf ljmp push cld outsb lahf insb lea lret pop mov dec scas loope aas aam out into jne mov sub jno ja dec mov es in add fwait jae leave es (bad) xor ret mov (bad) repz xor pushf in idivl lcall sub inc test test mov pop push fcmovne sti inc sbb iret jae cld sub clc and mov fldenv mov dec xchg lret mov in pusha adc mov lock mov leave int mov int3 scas mov repnz mov cmp dec or mov or arpl ljmp or sub (bad) push scas les xchg jle dec bound es out (bad) loop push cmp pop int3 dec lods stos mov sbb jecxz lods xchg inc add shll lods inc mov push adc insl dec push data16 shrb imulb and jne mov std jg aas cmpsl dec or mov lods inc mov popf sti pop clc int3 and push data16 imul ret xor jle or aas cltd int mov stos mov rcll dec ja lods lods mov inc ficoml mov adc sub mov jae lcall mov dec sbb mov cld test xor or mov into lahf call cmc shrl (bad) in push adc pop pop mov lret jge lods aad shrb jnp fwait inc mov lods into popa xchg dec mov pusha lods mov jle xchg pop sbb imul mov push lea (bad) (bad) insb push adc pop pop rclb pop leave jg push fisttp daa out pop movsl inc mov nop add sub (bad) mov sbb aam aad mov push lods jmp mov cmp test (bad) aas mov or push sub mov dec sub outsb mov das dec lods aad fdivl and nop inc sti inc popf jnp (bad) and insl or je test push movsb rorb jae jl (bad) (bad) in jne stos jb cwtl imul inc loop stos fstps pop sti dec xlat push xor push ljmp or mov cmp cmp scas cmp cmp cltd loopne push loope in stc jp jp ret and clc out outsl inc fbld xchg test cmp pop or sbb outsl test leave int mov lock mov cwtl or or test (bad) (bad) leave mov cmc mov loope add fadd cmc or std jp dec cmp sbb sbbb int3 adc lock xor hlt bound popf push jg insb jne outsb lahf jecxz cmp imul xchg cmpsl aad mov push sbb xchg sti aam lret mov nop lret outsb cwtl or pop inc jp pop sub out xor adc ds xor sub sarb and push (bad) in xchg or dec xor decb aas test pop loop jp pop cmpsl popf or ss mov lcall out test sahf and or test outsb sub pop sub pushf push sti mov add push add pushf inc or prefetchnta jmp push jno pushl les lea mov push xchg (bad) and and xor push or jmp cltd cli sbb in cmpsb cwtl and push jns lret clc jmp sbb ss stos cltd sub test loop push lahf aad xor stc dec adc pop mov gs adc in cwtl sub mov ret mov cmp push cs mov fcmovnu dec popf repz push insl fcom imul bound stos sahf sbb fistl dec fs xchg fistl cmpsb cmp lahf int hlt inc mov push inc dec ja push pop (bad) and pop outsl lret push sbb sub cmc add and dec mov lret ret rorb leave lret incb push rol or dec jp sbb push dec sar push addr16 dec or sub clc mov xchg mov out mov ja bound mov inc xor dec adc lahf dec mov insl leave fld mov sub fs dec fcmovne mov adc stos mov das cmpsb scas in add enter sbb sub or dec dec hlt jp fcmovbe hlt stos add (bad) jne shrb or sbb pop mov jecxz push stos pushl nop cmp inc sti subl jns sub std into mov push es mov mov test xor sbb rorb lahf cmp dec jg aaa in lea lock in (bad) in add xor fs sbb hlt dec cld adc lea mov mov dec mov mov mov mov ja mov fisttp out movb popf mov jle push daa or cmpsl in stc out cwtl mov push add fnstsw jg xor xor adcl pop in gs mov push lods mov mov out dec lods (bad) out push lds aas scas sbb (bad) mov or lods cmpsl dec pop rolb xchg inc loop leave fcmovnb jecxz push lea enter xchg inc adc mov imul loopne out lret push or repz sbb int scas repz imul mov insb (bad) cwtl adc ficomp (bad) incb pushl sbb sahf xchg ret jo (bad) and out ret sub imul cltd outsb popf dec cmpsl push mov mov push arpl dec xchg jp sbb scas fcmovu sti fwait mov jnp or adc inc xchg sub iret jns inc dec dec push sub mov data16 push jbe les lods or add or cmpsl scas sarb lret jo and sub sub insb cmp mov xorb mov sub mull jo mov loopne pop lock stos mov ret gs dec int mov jle aam mov mov xor jo xor movsb repnz jnp mov mov sbb add mov ret cmp xchg push jo negb mov jmp ret xlat shrb pop mov sub jg jb ja adcb movsb ret or (bad) mov (bad) aas mov inc xchg pushf insl ret ret lock dec (bad) (bad) dec mov fwait (bad) mov cltd jecxz dec movsb lret add leave push fwait test adc mov fcmovne pop mov pop aas call mov push add pop fist dec dec test add jle add sti push enter or dec adc push mov jl shlb pushf xor or into movsl imul sbb cld imul fnstcw pop and bound lods ret (bad) out cmpsl addr16 jmp mov sbb idiv fwait lods inc es dec std mov clc es outsl fidivrl add pop je mov cmpsb fnstcw lods or and pushf cmp jecxz cmp xchg cld imul (bad) in pop mov dec std jmp (bad) popf call mov mov cmp cld adc (bad) fcomp dec out push mov ja fst fildl xchg insb test mov fldt fwait mov jo enter iret jmp out in mov mov pop mov jg dec cwtl cltd mov push sub and popf lahf or insb mov js std arpl and imul imul test aas mov adc adc xchg int adc jae rcrb test roll test mov mov mov (bad) jge outsb push clc adc add loopne or jnp (bad) cmp pusha scas mov inc andl inc and mov cs inc or (bad) insb ret (bad) punpcklbw adc sahf test mov and lahf test add cs inc push hlt mov fwait pop sbb sub rorb mov and test push outsb scas mov cmpsl lods add sbb repz mov xor dec ljmp pop or std insb addr16 dec cmp mov je jno jg int3 mov int3 repz shrl jns std in mov dec mov out cmp stc lcall adc sbb push pushf imull pop cmp cmpsl mov rclb sub lods cld out pop pop cld scas jge (bad) fildll mov das lods inc mov xchg mov cs sarb stos out fistl fs cmp iret aas fdivrl lds rcrl xor mov jo or das cmp jp cmp addl or xor xchg cs inc push test idivl subl aad shll lea push (bad) in mov sub jg jb adc jle fcmovb xchg lea add cmp iret cwtl lret or push pop mov push mov inc jp jecxz (bad) pop add mov sbbb mov and andb idivb add sub xchg xchg (bad) mov mov sub xchg push or push mov lea test imul aaa mov jg mov mov jge and jle aam imul popf add (bad) sbb and jmp sbb cmp ljmp add in cmp sub addl pop (bad) (bad) in jg and jg out nop (bad) dec test xor jge iret inc sub inc test nop sub mov cmp into jno adc mov dec test push popf in cld pusha shlb (bad) jl mov mov add or or (bad) mov outsl test and and xor inc pop and adc ret xchg add repnz ror aam fwait arpl and cwtl xchg imul jne shll pop and xchg mov aad mov ror jnp mov dec mov pop mov frndint (bad) lock cmp sbb add mov fstpt imul (bad) xchg and ds mov (bad) mov sti sbb or ret sti cmp or mov movsl xchg std cli jnp add inc repnz inc fisub push inc loop adc (bad) lahf mov xchg mov dec push es pop movsb lods scas adc imul jno ds mov adc lea out adc subl sub cltd mov std test jl mov jge loopne out sti nop push xchg pop jp dec lcall or loope fidivr in adc cli lods cmpsl sti push inc sar cmpsb data16 lea jl pop mov mov mov pushf push sarb stos pop int3 mov test out ja xchg and ljmp bound push add fwait xor push pop mov (bad) and test jle daa rorb adc stc (bad) mov push adc ljmp add and xchg dec mov nop cmpb (bad) xchg je iret pop imul aaa pop xchg insb sahf jg mov jmp aaa lahf or jo (bad) int3 fistpll pushf mov popf sub mov inc jbe and pop jl iret mov push mov sub pop or adc pop xchg cmp clc add mov lock jl or cmp or pop mov sbb fdivrl pop mov or clc int3 and iret sbb jle stos lahf sub sar mov xchg adc cld lock mov push rcrb nop cmpl ficomp mov int jnp aam or xchg fwait inc cmpsl pop lods cwtl adc lods push mov xor add fwait rcl imul jne ljmp dec cmp scas or lcall jnp cli xchg or ljmp inc aas jnp xor jmp cs push mov (bad) cld testl or jl ja js lods lcall inc adc cs ss int3 mov or (bad) and xchg lret push sbb inc rcl inc dec sti cwtl cli nop into mov stos fwait pop sub arpl icebp out call or cmp cld pop scas pop cmpsl sub inc mov scas pop or sbb std cmp jg push (bad) aam es jl mov sbb aam ja sub pop sub roll lods cmpsb jp and das sahf jae aam das or pusha scas ja mov jl movsl lret (bad) mov lcall pop popf cmp sbb mov jle mov addl lcall mov mov sub push sub and arpl pushf inc jge rcr mov sbb mov inc iret aas std mov xchg and sub sub mov arpl scas shlb cmpsl sub add mov or std push fnstsw mov das add scas dec sbb sbb les iret out stos push or rcl mov incl arpl mov pop fiaddl sbb xchg dec (bad) mov mov push sub cwtl lods fisubl (bad) mov mov repnz rol jge mov xor fcompl lcall mov mov fdivl pop xchg or movsb andl or jle aam (bad) or push enter lock mov cld imul dec adc cmp (bad) cs or add xchg jp or pop push fsts dec fs xor sahf stc rclb cmpsl test test int mov scas fisubrl jnp jge imul scas mov jne loopne test addr16 xor mov test push jl stos ret mov xor and mov pusha jo mov mov cmp cltd scas jp test xchg in inc lret xchg cld sbb add mov dec lods shr push xchg mov roll add mov jle lret push (bad) mov mov fwait adc sti mov not or add xor pop jg ret (bad) sti sub or stos inc jge jnp pop pop ffree int mov bound jmp daa mov dec dec adc cmp mov sub mov fs cwtl jg std ret or add inc sbb bound ret fstpl pop int adc cmp pop jp cmp (bad) jge out xchg bound pop psubusb inc aad or loop ret iret cmp adc nop cld icebp sub fwait leave cmp mov int sub scas pop xchg fistpll inc xchg shrl cmp idivb or iret jnp dec fcomps push pop sub mov mov sub sbb and test mov mov sahf jo outsl movq pushl adc popa ret lods into jnp mov push dec or mov jae pushf lret xorl or or jg int3 inc sahf mov hlt dec daa mov or sbb (bad) and int or push cmc inc pop mov roll or mov jmp dec jp mov adc or iret bound test pushl outsb loopne ds jo popf jecxz cmp jbe sub or lods out lret cwtl test lods pop test jp stc cmp xchg ret aaa inc mov mov or loop inc fst push sbb jnp xchg jns stos fcmovnb add cmp scas cwtl insb mov insb pushf in imul cmp aas cmp stos or daa mov cli xchg push leave pop xchg (bad) fild notl aaa adcb lds mov and dec jbe mov push inc in mov or xchg xchg mov mov and out adc push jl (bad) xor xchg or rclb adc sbb or loopne int3 cmpsl jmp (bad) mull out and cmp add sbb pop popf or cmp arpl lock clc cmpsl xor (bad) (bad) xlat sti in pop push sti mov lahf mov aaa sbb ret rcr fwait dec mov pop inc pop jge lret subl lea mov pop jl cmpsb enter dec or sub adc sub xorb or and das jl dec popf sub or ror jl mov mov fstpl and ret repnz cmpsb shrl ret push (bad) sti mov adc fldenv and pop jnp rclb mov adc inc pushf ret mov pushf cld rclb sar inc mov lahf add adc push notl push loope mov jnp push or fistl lock rorb mov pop ret fwait loope cld or adc aas lods cmp aad test sub jp jge movsbl add rol xor fwait ret mov mov or dec in pop leave ror xchg sub adc insl lods cmc pop lret mov inc mov pusha add mov cli ret jne cmp pop stos (bad) nop repz pushf hlt lahf rcl mov mov inc adc lea cmp in push outsb cmp xchg sti or mov jecxz int mov xchg or fisttp sbb in mov mov mov jnp pop push jb xchg push ret popa fwait mov je adc jg jge mov or fmull inc mov ret push aam cli movsl lock sahf pop mov jmp pop test ja cmpsb push adc push sbb (bad) lock adcl xchg mov add ds mov fdivrl rdpmc pop and mov inc jle inc lcall je or or int pop mov fwait sbb and sbb or fdivr cmp out jg mov mov mov dec (bad) js cli pop sub mov xlat stos lock push (bad) mov fidivr decl (bad) jno (bad) pop cmp jno in jmp mov leave mov inc inc (bad) mov stos psubsw (bad) insl xor popf add int3 mov inc decl mov adc push push jae dec mov (bad) (bad) cmp adc sub mov push or jo push addr16 popf jecxz inc mov xchg movsb cmp popa cmp lds lock sbb push jecxz pop xor movsl inc out cmp stos adc (bad) cmpb mov cmp pop cmpsl pop dec adc jnp pop iret jle fmuls jbe xchg push push sti loopne jg (bad) cmc inc add dec sbb inc cld fstpt dec inc loopne xor lods jge aad fsubl mov sti (bad) fcoml mov cmpb add test std inc sub jno jge cwtl nop pop inc loopne out mov pushf jo sti cmp cmp inc test (bad) loopne mov sahf int3 stos lods mov jge mov subb hlt mov cmp jl es lahf xor mov xchg sub mov pop sub xlat mov xlat stc jnp or movsb fdivs popf cmc mov cmc loope pop inc mov cmp mov frstor adc push fnstcw in subl scas cltd mov mov or fisttpll xchg mov mov sti or sbb in xchg test jecxz sti push and jne jnp jp or adc jne jl jne nop dec imul das push xlat pop cld or xor (bad) lds ljmp lods xchg sub xchg popf push outsl jnp mov test add mov cwtl jl aaa sbb xor push jl push pop lcall psubb jl jp mov fisttp ds and ss or jp out or insl sbb xchg pushf add or cmp cld mov mov jge outsl sbb add sbb mov cld jl push lret sub pop jmp addr16 xchg repz mov ret popf xor or aad sbb lods (bad) mov imul dec add sub mov mov fstpt or scas test mov lock cmpsl pop add jge sub xchg adc mov std cmp clc lods loope push adc dec scas cmp mov sub fwait call stos xchg cs sbb mov sub jp mov jle push fistpl mov add push scas sub iret pop mov lea xchg sti loopne mov fwait test inc jge iret das dec add (bad) out xchg jns nop mov mov mov mov mov or cmp (bad) ljmp mov or and jg sub xor or cs jg jl inc inc shrb lahf fwait jno jl enter mov lods cmpsb sbb inc fstpt ret mov out or push jle ljmp (bad) sahf sahf add sbb sub xchg idivb mov (bad) pop data16 pop stos out ds test cld push mov pop add pop pusha push test outsl int3 sti (bad) icebp mov adc jne adc lods ret xor ja jg cmp xchg mov jns aaa nop mov mov aaa (bad) fsubrl pop mov push movsb inc push out mov addr16 outsl loop fdiv mov lock mov xchg cmp jg sti in cmp adc dec mov inc dec lret mov dec mov lcall cltd sahf mov sub pop add mov jmp jl cmp fcompl cwtl xor jge ljmp mov xor out mov sbbl call sbb inc cmp push sbbb scas ljmp cmp cs orl leavew sbb movb cmp inc popf mov mov adc cmp ret test xchg cmp sbb mov scas xchg sbb jge cmc (bad) mov movsb or (bad) (bad) outsl dec subl scas pop hlt ret (bad) push pop and aas shrb pop fdivrp call adc insb sbb test pop sti nop cmpsb (bad) jnp ror sub pop jg das jle aad pusha mov dec int adc movsl fistpl subl sbb jge loopne lcall mov addr16 psrad add pusha nop jg pusha mov ret jp (bad) scas cmp push and test pop sti daa mov adc repz fwait sbb sub andl inc mov sbb sti leave das jg loopne jp xchg int3 nop stc sbb lcall adc push or mov lahf imul sbb cmpsl int push (bad) push hlt jae rorb xchg gs mov adc pop lret mov sbb push mov pushl and dec adc fistp adc test mov ja pop call xor mov (bad) push stos cwtl sub adc or cs test push cs mov shl iret fwait ljmp pop pop xchg cltd jp stos loope sbb rolb lret pushf lahf or std stos jb (bad) notb lret xchg test movsb loopne mov sbbl jge push clc outsl xchg jne xor insl adc or mov repz jo mov hlt lret cmpsb pusha xor xchg xor test loop aas sub push jg dec mov gs sbb cltd test inc les xchg mov xlat cmp dec sahf jo lcall lock mov aas adcl sahf movsb movb xchg cmp jg xchg mov popf sub push add sub (bad) test or outsl inc sbb mov and or dec test push jle xor pop mov (bad) notl xchg (bad) adc icebp inc add inc mov test cmpsl adc gs stos push xchg push sbbl or or push mov aam imul dec jl sbb bound xor or (bad) push fwait or cs push popa int into cld mov sub pop sbb adc (bad) hlt pop xchg mov sahf cmp mov and add mov add pop loope add out nop pushf sub pop (bad) iret push pop or pop cs xorl scas sub push adc mov pop inc into ja in test sbb mov cld fwait dec ret insl (bad) mov sti sub jnp mov mov jnp test push adc lahf or cmc mov mov xchg aam jnp dec imul jg sbb xchg call test add xor stc aas ljmp in xlat scas mov fnop jmp (bad) cmp lahf sub sbb and lods mov dec packssdw mov pop xchg mov sbb (bad) icebp loope arpl lods xchg sbb icebp mov mov nop mov cmp cmpsl in dec push adc or fcoml insl pop das out leave inc je cmp mov mov xor enter add int3 lds cmp push lret pop push ret pop sub (bad) mov pop sarl cmp or cmp test loope or (bad) (bad) orb fcmovnu loopne mov es test push in fwait bound fcmovb imul pop jp or je add hlt mov nop aas in mov cmpsl (bad) (bad) jno jne adcl or xchg xlat sahf dec or fstpl mov stos mov fildl jmp sti repnz negb sub nop jno inc jg pop sti mov lahf or or ror or outsb and int3 or jnp adc popf sub cwtl std jl sub adc hlt sbb test add ss js mov inc add and lock sti inc jmp or les mov andl mov incb pop sub pushf inc (bad) sti add xor (bad) and mov xchg jne in neg sbb leave std xor jl fwait rolb xchg add xchg pop gs movsb xchg lcall lock mov sarl (bad) aam pusha pop cwtl imul nop ljmp in sbb mov sbb aad sbbl (bad) (bad) pop jae push cltd or shrl dec in decb repnz xor pop in push das cld aad sub xchg inc mov fcompl mov lods mov push cld cmp push adc pop aam inc hlt pushf subb dec scas mov es popw jge pusha add shrb in in adc xor fidiv ljmp xchg sub gs add dec cmp cmp enter rclb fnstcw pop das mov cmp pop mov sub ret fistpl inc outsl std jl add add or sahf pusha (bad) outsl shlw aas mov inc clc adc and cmp inc jg (bad) mov inc shrb mov mov repnz lret or or movsb out in repnz nop jp dec xor int3 mov in ret jl jmp sahf call xchg repz mov jp xor add dec pop mov adc sub lods and loope subl (bad) xchg or mov pushf push mov sub jo orb cmp mov dec or shrl sti fwait sub xchg insb sub (bad) lds imul enter mov in push mov shrl imul xor mov rclb pop sbb pop fnstcw imul cmpl push inc xor dec bound fcoms jle inc rcr (bad) and mov sbb pop pushf fwait ror mov jmp sbb jl cmp or lret adc mov aas and jns mov mov mov repz (bad) addr16 adc cmpsl push sub repnz mov add ret int3 and call in sub rcll ds inc cmp (bad) pop stos add add jmp ja push addl xchg add mov cmp (bad) lahf sti cmp stos test cmp jmp cmp (bad) jo pusha aad sub mov in jle mov inc push movsl rorb push mov mov insl lock movsb and int dec add mov sbb lds xchg push rcl rolb mov and inc rcrl fwait mov push cmpsb inc pop mov mov aaa mov movsl fsubrs adcb pop mov xchg shlb sahf outsb test (bad) mov sbb mov int mov or push add into repnz jmp jmp (bad) jno int mov arpl or out scas leave fwait lods jge,pt lret adc int3 stos jo adc mov dec lods mov jmp int3 xchg cmc rol inc test push movsb cmp mov hlt xchg jg lods popf pop inc push fsubrl inc add and lahf (bad) xchg lahf scas pop lods jle pusha in fdivrl movsb in jle ljmp test fwait imul dec adc sbb xor in jle sbb sbb cli call (bad) mov movsl cli jno test and test aas rolb insl sbb dec xlat ret roll and adc and jge xchg cmpsb rorl inc pop rorl and aam fwait sbb scas cli push ficoml jne cld or cmp es (bad) int3 out jle lahf and jnp xchg adc hlt adc pop pop insl repz push rcr lods push dec sbb fbld adc cmp adc cltd push ffreep xor icebp push ja inc add pop sbb ss push sti outsb test mov into mov fldcw sub adc sub fwait jno out das lods dec jl addl adc push or (bad) cld inc fwait mov icebp lea lock cld adc les inc lahf mov mov sbb cltd pushl nop or int3 mov int3 cld pusha add arpl adc hlt movsl jge mov int jae pushf (bad) mov push mov inc aam mov mov jmp loope jmp mov out cmp pop loop mov mov sub cmp int3 arpl pop mov xor jl or mov push outsl pusha jo add pushf mov cmp loopne out outsl sti rcll dec je ficomp jnp cmp pusha mov and (bad) or dec lds ljmp inc rorb fwait (bad) mov sbbl jl nop mov lock mov mov xor mov das sahf jle and ljmp mov inc cmp jp jns outsl test dec loopne out inc in jnp (bad) ss hlt sbb xor dec jg fmulp enter test mov sbb xchg mov (bad) pop iret or int3 stc or outsb add add pusha repz inc insb fcmovnu sbbl cmp jl iret (bad) test leave fucomp mov jo popf (bad) dec jecxz jmp mov mov lret push dec sbb rolb pop adc imul push shlb pop push in popa pop and jno (bad) lret sti test popf dec push ret faddl push cmp ss mov daa sub pop fcmovu push and jnp mov data16 jle (bad) imul cld push push or inc stos rorb mov or push fwait sub xchg push mov and and sarb scas (bad) push and jge jg,pn xchg shrb outsl cmp cmpl or addr16 repnz mov scas sub stc jl or jae lods sti ret aas sub imul mov orl bound jl mov orl or jns rorl fwait sub jb decl push dec adc mov sbb hlt js add aaa jmp cltd mov dec xchg insb rorb (bad) cli test inc pusha je popa aam (bad) mov iret mov jmp push dec popf repnz je push jp sub mov cmpsl jnp jmp adc adc popa sti cmp je js cmova jmp sub push cmc fisttpl sbb dec in sub dec imul push mov and ret cltd inc lea mov mov cld pushf cmp lcall mov jp cld jb aas push mov pushf inc in adc (bad) and iret fcmovne xchg inc jnp lods mov pop inc jle xor mov (bad) mov out push jle fwait (bad) jnp dec stos mov cli adc jbe das adc jae ja in xchg pop pop inc or (bad) mov cltd lods xchg test add or mov mov movsl cli jns inc or jno bound sbb iret test mov outsl mov pop cld leave out rep cmpsb and or in sub (bad) sbb lods ror loopne pop aaa pushf or mov sbb insl out nop sub inc pop stos (bad) sbb pop sti lock xor inc sbb cmpsb vcvtss2si jmp or nop lahf pushf stos nop out dec mov xchg or push pop xchg mov outsb sbb rorl jnp aaa jmp stos mov sti jns mov loopne and rcrb push insl and int3 sbb fiaddl mov into int3 fwait mov sbb mov pop mov mov fsubrl loopne lea jg lret push lods mov lret dec xor sbb inc fild outsl bound sti cmpps push mov ret push mov cld and inc and sti stos mov cli sub test inc (bad) jns add mov xchg arpl xchg pushf jg adc add mov dec enter jg fistl push cmpsl mov scas jnp cmp xchg xchg shll sub insb sub pop arpl lds and sub xor xor lds pushf sub xor add cmp fs mov add cmp inc lahf in inc lret adc scas mov (bad) dec rcl rcrb test orb outsl loope repz sub adc cmp pop dec and adc mov or xchg loopne arpl push jo iret inc mov adc aam test call or pop pop in cmp mull xchg das inc jb push adc pop (bad) mov inc push push ja,pn jge pop xchg push mov xchg rclb xor xor das lods and inc aas dec popf in xchg sub mov mov mov scas jl pusha mov mov sti jge test pop add or pop rclb dec ljmp cmc leave add cmp ljmp testl fdivr adc pushf and int int mov lock push gs pop out outsl adc (bad) mov ljmp sbb (bad) mov mov mov sarb in cli ret cli sti sti ret mov xorl (bad) orb lret lea mov sbb jnp mov lahf lcall jl scas pop out dec imul les repnz je inc iret std push inc pushf bound push loopne mov je rcrl and ret mov popa aaa sbb adc add pop bnd mov push add in insl fwait scas push nop sub lret jmp dec ss popf aam loopne (bad) pop add mov insl xchg out das mov aas sbb and das sbb dec inc mov rclb arpl jnp mov scas or sbb pop mov sbb ljmp sub xchg sbb aad int mov enter (bad) cmp pop xchg cwtl jl mov cmc pop test or adc stos (bad) xchg cld mov mov sub or or adc loopne xchg xor and jnp cmp or in mov aas fmul leave xchg jb mov adcb mov xchg mov dec xor mov jne int3 cmp lahf adc seta inc test mov movsl and xchg rcl aaa sub lret mov imul divb icebp (bad) pop (bad) pop push ror in fneni(8087 jnp jno push dec sbb inc and sbb int3 pusha push data16 repnz ds or or dec xor int3 das jle nop shll pop mov xchg mov out jge push cmp push or mov stos adc sub std jb mov (bad) or adc (bad) or shlb cmp es nop pushf mov and mov cmp mov sti lock movsl fs das sti nop mov pop dec jo xchg std push jns arpl (bad) (bad) or mov shrb and mov cmp push mov inc aas mov sbb cmpsb mov jecxz ret xchg mov mov sub sub call pop stos cmpsl xchg or gs rorl (bad) movl je in lcall fisttpll sub mov pop xchg adc test sub cli mov pop imul addl fwait mov push call xchg (bad) jle xchg mov mov inc mov mov mov mov jg addl test sub sar add cmp xor inc sti jnp xchg sub stos fs jecxz mov pop pop mov mov jo fwait xchg mov fcoms mov mov mov lcall bound jg jnp sahf scas popf or sbbb (bad) pop inc std mov ret cwtl loop add mov outsl jmp ret sbb cld dec sarl adc jb (bad) mov or xlat stos fbld mov jmp int mov push mov push dec mov lahf (bad) addl xchg sbb je lret push jl in cltd and adc add int (bad) out test (bad) cmp mov bound cmp in adc cmp mov push sti lock frstor inc sbb je jnp push les push test scas idivb fwait pop cltd cmp pop jnp in scas xchg dec add imul push fcoms push add mov jns pop fs ss repz addr16 push mov scas mov (bad) pusha (bad) jl in fwait ror jo ja movsb jmp ss jmp mov add ret mov add loopne or mov sbb ret jge push pop jnp push mov std jg (bad) (bad) enter sqrtps scas inc das test jp jb xchg jl imul jno (bad) mul arpl mov mov xor inc pushf movsb sub rcrl pop add movsb mov push test mov push add fucomp int fldcw das test ret (bad) cmp mov pop (bad) stos xlat std fnstsw sahf lahf rcr xchg cld lock inc push ds push jnp repnz nop jno (bad) pop inc and cld shrb mov xor sbb (bad) xchg adc jl jnp bound mov dec and aaa lret xor cmp ret sbb outsb dec jo outsb fldl fcoms movsb pop jl nop sub cmp scas call cmc pop andl mov into jne mov mov adc sub out push add mov cmp bound sbb stos pop test cli sbb sti cmp das stos stos jne mov lods mov or (bad) lahf inc cmpsl cwtl dec mov mov pop jg fisubrl mov in jmp adc stos scas ret icebp iret in test jnp cmp xchg (bad) int3 jg jle lcall cmp (bad) jnp sub cwtl pop xlat or jb inc push mov aaa sti adc shrl dec test push (bad) repnz or mov mov pop sub fmull lret scas adc mov cmp subl lock dec pushf mov or cmp jg add cli sub pop cmp push roll cmp (bad) cs stos das popa push test push test (bad) pop das mov nopl in sbb loope mov or adc lret iret scas pop jge fcmovnb ss lahf inc shrb and mov jp std out push je jle cmpsb inc sub mov cwtl mov sti mov daa dec jae lock cmpsl sbb jl mov nop mov movsl lret pop bound test or shr popa jo sbb cltd imul push sti dec in add fimull and cmp lds ret scas jg push rol cs push cmpsl push mov in mov add jl inc arpl cmp sbb cmp sbb mov xchg xor inc xchg mov jle or sub dec adc lods (bad) mov out sahf add mov or aas ja,pt dec jmp push dec mov or dec mov adcl (bad) fwait lock ret xor mov fwait adc jnp mov lds mov jecxz or cmp jo (bad) jno inc pop fistl xor (bad) out and mov mov sarl xchg (bad) push add sbb jo lea fstpt roll rcl and lahf push or dec arpl mov mov outsb lock sub pop incl xchg dec fwait lods lock cmp subb jae mov xchg mov mov push andl mov incl sub out mov int sub data16 mov push or pop jnp dec adc (bad) pop and xor imul dec subl pop push jmp pushf gs pop xor (bad) popa sarl in mov cmp mov mov aaa loopne xchg jno aad adc sub adc scas mov mov cmp test ficomp sbb clc xor sti test xchg rclb sub lock xor enter loope mov add fadds jecxz dec cli enter pop and xchg jp mov mov sbb pop jb push aam fcoml js cmp mov inc mov movsl pop push imul mov or jnp pop pop mov add mov mov rcl loopne insb sahf mov dec lods icebp push or ret aam push pushf hlt add cmp pop in leave insb or subl push enter loop sub (bad) mov push adc (bad) int3 and fldl lods jnp movsb and fiaddl xchg scas add mov fildll jge mov cmp cmp cmp (bad) mov mov xchg rcrl mov dec pop sub clc or add jmp sar cmpsb sub fbstp andb inc shlb push addl xchg nop imul fcomi fldt jae and mov (bad) popf jne cmp and jo leave mov iret inc jmp movsl mov aas pop and nop jnp and test inc int3 mov imul jle js lret popf or incl ret inc jbe or jne jmp pop xlat bound pop mov add mov imulb popa xchg insb pop mov jecxz inc or fcomps loop mov sbb test inc addr16 outsl movsl inc and test jno loop cmp leave lret imul jbe lahf push jle adc pop pop jbe lods lret adc or inc insb rorl adcl (bad) bsr ret ret imulb push lret jg mov sbb nop jg (bad) lods mov jecxz dec sbb mov dec mov jle cld dec lea sub addr16 fucomip inc in add scas outsl mov rcrb aaa shrb push cltd pushf fsubrl sub lds inc out jo sarl bound or xor hlt lret cs mov jo cmp xchg inc inc mov pop cmp in jmp and mov inc aaa stos or shl pushf ficompl andl jmp int jle decb int3 mov ja lock sub jmp sub loopne cmovo ja mov sahf and sti or mov das in int3 cmc mov dec enter push pop es sbb pop std lock xchg or insb aas mov jp clc mov std mov stos cld pop insl lea cmp lds jle mov mov lea adc loopne sbb repnz sahf pusha outsl sub andl mov aas pushf mov loop mov sbb and jnp (bad) dec mov rcrb jmp aam test decl or adc push lcall add outsl or sti mov lock hlt dec sbb mov inc inc cld xchg xchg and (bad) xor aad sahf into int3 or movsb jns xchg or cmp cwtl aad fsts ss aad or mov ljmp (bad) adc jmp rcll inc lea addr16 int3 lods xchg add push xchg inc xchg mov or cwtl xchg push or xchg (bad) cmpsl mov repnz pusha std gs lea xlat and mov adc lock and scas pop fdivl xor lret ret imul adc lret jbe ret lahf loopne push push mov sbb aaa ljmp jno sbb mov into sbb mov inc mov push mov call (bad) lods cmc cmp dec mov inc cmp add mul inc jo (bad) mov call nop dec mov movsl xor dec xor jecxz movb (bad) sti lods bound fadds jae fstp mov xchg mov int (bad) and shll mov push jl jge or mov dec cmp decl push xchg add sub jo and pop or and aaa xchg mov sub call ljmp test dec cltd lret add cmp (bad) in int ret cmp jg jl mov and shrl stos fildl fwait sti (bad) fucomp mov ss cmpsl shrb outsb sbb cmp jge lods push loop xchg test xchg lret repnz or mov pushf (bad) leave mov pusha movsb sbb out (bad) insl fwait jecxz dec mov jl int push lahf iret mov jb ret pushf lods sarl in out sbb mov mov bound push test sbb cltd (bad) cmp inc or cwtl cmp ret mov pushf cmp push lret jmp mov adc sahf jmp cmp or push outsl test decb gs and xchg dec mov jmp fwait mov jg cld mov popf cld scas popl mov nop imul mov jb add pop jmp push and push sub in testb jnp pop cmpsb out adc scas mov call xor or mov jnp and insl lcall (bad) dec cmp pusha inc cmp xchg mov nop pop cmp ret cmp mov mov inc dec xor inc pushf cmpsl jle or add fisttp lret aam pop dec fwait jb sub sbb cmp inc mov inc add sarb fs xlat or xchg cld ret mov inc dec cmc pop ds dec sbb lock cmp jl movsl mov mov orl sub cwtl push sub cmp cvtps2pd call and div sbb sbb test pop test cmp dec (bad) cli push arpl outsb gs cmp fld pushf jo hlt sbb mov mov jge inc jl ret popf std or cmp or es insl fisubr or jle xor lahf mov xchg les in negl mov and pusha out in sub sbb test or xchg push sub xchg push xchg movsl (bad) daa fistpl lea movsb in movsl mov xchg (bad) (bad) mov daa ds mov xorl xchg add iret adc fsubl fisttpll cmp mov (bad) in mov popf ss arpl nop xchg sbb push lret pop pop in in je cmp xchg mov mov popf sub ja fwait mov jmp xchg xchg and adc nop int mov ds jecxz adc lret lcall dec shr mov icebp ds push ds pop inc lahf jecxz sbb imul cli inc ret scas je add mov xchg cmp sbb js fbld xchg cmp mov xor jg cltd adc imul dec fnstcw jg xchg or popaw rorb pop pop test int3 or fnstenv adc pushf hlt fisubl mov add imul xchg add shrb sbb sub inc fsubrs (bad) test ret adc dec push lret pop in cmp jo inc jl cmp mov push divb sbb faddp xchg jg xor ficompl cmp cmp pop inc pop mov push mov imul cwtl jnp mov ret pause mov sbb ret popf ds outsl mov stos mov nop aas pop pushf pusha adc out arpl push mov iret das icebp inc cltd das aam jg in aas mov adc ret jge bound dec mov push popf xlat inc adc jbe in out jb jnp rol in in adc cmc lds ret or cmp stos mov fwait mov jecxz,pt lcall or in jns loope add iret pop xlat add (bad) adc fwait xor pop lods cmp addr16 xchg (bad) lea mov (bad) roll push fstpt lods int pop inc popf mov or pushf (bad) jle xor cmp mov xchg aam fisubrl sbb mov inc (bad) jmp rcr (bad) movb cmp (bad) sbb push sub (bad) sbb sbb jmp cmp ffreep jle arpl sub mov and in adc xor mov mov test pop add sar add das sahf add push scas pop jg pop adc inc iret or jne mov in leave push cmp aad cmp add jo mov xchg imul sarl jp xchg ret lock fbld or cmp pop add dec into dec imul insl test add or aas add je outsb out aam or repz and mov lea nop mov jecxz inc js or push jae dec push fcoml testb or xorl sbb pop mov std mov xchg add fwait adc or repnz sti repz push cmp xlat inc inc imul xor mov jle sub add inc xor lods xor (bad) sbb inc cld or mov sbb cs ret push gs loopne xchg push jecxz pushf push bound pop xlat inc mov out movb adc int daa lahf mov add loopne test es test (bad) negl push mov push jl or pusha inc inc addl jnp sbb or dec fdivr mov aam insl out pop aam pop pop adc add and sahf in xor push add out mov inc mov pop fbstp int leave jbe enter ror ret movsl stos mov jmp repnz lock movsb xchg fs insl ret cmp cli cmp xchg loope pop pop (bad) mov daa aad test shrl xor (bad) or or xor (bad) mov pop enter addr16 adc mov out stos jnp adc rcrb stos or popa sahf xor add sti sbb repz mov and popf add sub mov dec push aad and std mov rorb xchg sub ffreep lods sub jle fstps movsb sub xchg repz cmp and mov and xchg test or mov loopne je push jg push lds mov add mov mov jl and fistpll rolb das jmp out cmp or push lds jge in mov mov das (bad) mov shrl or popf mov xchg sub jb dec cmp rcll mov lods mov cmp sbb inc mov pop xlat ljmp pushl push cwtl loop mov dec int3 mov add and leave int3 sarb jns sarb add mov rolb sub inc testl or xor (bad) aas lods and pop daa mov jge xor mov lcall mov and xchg xchg mov mov dec call pushf cs aas repz adc dec jmp jle sub pop mov mov (bad) mov cs ficompl popf jnp push leave push sub xchg stos dec cmp sub inc pop ret xor cmp rorb pusha mov lret sarl cmp or jb hlt mov sub lods outsb lcall icebp lahf jmp std add pop fisttp push mov loope bound lcall daa ret sbb jnp pop dec shrb mov out fistpl mov scas or sti and fdivl sub pop mov xchg add ret psubusb ret fsubl add xchg pop js mov inc and inc pop xchg outsb mov add jnp xchg jns addr16 fcmovb aas adcb hlt xchg ret jg repz clc jo mov jnp pop or jg mov mov jl mov int stos add jnp jno mov stos imul and jecxz or or adc stos ja out push fs push lock (bad) mov int inc rolb jbe mov inc sub cld xchg jl movsl ret mov jno in lods mov sub das fild adc int3 jmp push jnp pushf or jbe jno jnp (bad) stos sbb or hlt mov push stos push sarb inc mov rcll mov (bad) lock and es jo rcrb test push mov push pop out and xchg sti aam or enter aaa pop ret and lods mov divb add decl add (bad) lret ret call mov jge cmp push mov jle iret xor cmp out mov lea xchg mov mov clc push test or cmp sub inc mov jae mov mov outsb insb inc push adcl ret repz sub sub es sub aad gs dec sub push mov jmp cmp pop fwait or mov in jmp je test xor push (bad) lret pop aam fdivrl adc mov mov mov ljmp scas loop cmp (bad) addr16 mov (bad) call ret dec sahf cmp lahf clc lods (bad) repz ss mov sti jg xchg push xor cmc sbb jl sub sbb add jl subl xor sarb hlt add sub sbb cmp add xchg jnp rol sub xchg int jp,pt aaa jmp ret xchg inc loopne sbb sbb lock xchg jp into arpl test xor lods adc movb lretw repnz fstpt insb int popf fwait lahf mov inc mov dec scas pop ss es push xor or (bad) xor cmp dec cmp sub jge aaa xchg or adc mov rorb pushf pop (bad) jp lea out movq imul pop lods fcoml push cmp pop pop (bad) mov sti or push in pushf gs repnz clc xchg jl in test dec aad pushf sbb popf push repz and add sub ret mov dec cmp mov decl pusha lods mov jne repz cmp and dec inc push mov cmc pop jmp mov sub mov add mov lahf mov mov adc dec adc pushf jne loop push lcall stos ret jmp push aas out sub cs pop push mov fldenv xchg sbb or sub into loopne adc mov in cwtl mov mov jl xor loopne jns push push pop movsb stos and pop cmp sbb jp fs ret adc pop push pusha cltd loopne popf (bad) cwtl mov scas orl (bad) adc xchg mov adc add mov mov push and push mov mov rorl dec ret push mov mov sbb enter xorb out push icebp loope cli imul xchg jnp daa cli jns pushf xchg bound pushf cmp mov lret dec nop imul sub mov lods (bad) cmc mov loope std rcll iret iret inc sbb xor sub nop inc insb jecxz or in mov dec lds aad std lea sub sbb test retw jl aam (bad) adc arpl add outsl out aas jmp adc dec dec adc popa in sbb or in or int3 mov jmp sti ja shlb sti or ja test cmpsb addr16 xchg sbb popf mov mov stos mov inc mov adcl sti dec ja jbe test mov xchg ret push aad mov hlt in bnd pop mov addr16 jle or jbe sbb into xchg in pop add inc push push xlat fsubrp xlat dec adc mov (bad) or pusha or add cmovb push sbb xchg mov icebp jl xchg (bad) mov call mov add xor leave xchg jg adc cmpsb sbb sti xchg test pop jge stos incb movsb cmp fmull sub mov mov cmpsl enter movups pushf nop xchg or in imul jmp jge pop mov popa pop mov pop stos arpl aas mov stos scas sub sbb stos push jno ret inc cmpsb les pop add sbb adc fstpt cmp (bad) call cmp out loopne out cmp mov aad sbb add inc xchg es jg mov xor xchg or or je push mov sahf sti sbb or incl loope xchg pop pushf paddw or ret jle inc xchg test xchg je xor addb mov mov rcrb lods orb fbld xchg cmpsb or adc out xchg call lcall sti mov jb lock ret add stc test xor dec das mov adc inc add lock xchg mov mov mov or mov jo cmp arpl sbb xchg push out test leave insl jg adc mov imul aam cmp loope and cltd sbb (bad) sub inc mov jo inc test scas jnp mov incb lahf loop mov adc das push scas and (bad) mov hlt (bad) aam mov sub pop push or movsb in (bad) jg inc xor dec movsl sbb lods jae jnp push add xchg repz cmpsl sbb add test dec sub push cmc xor rcll mov sbbb fcoml cmp cmp je,pt cmp adc fwait or lret push xlat inc inc (bad) repz jecxz loop cmpl (bad) stos mov and jno mov pop cli mov shl xchg addb rcrb push mov fdivs add adc xchg (bad) lock std xor and lahf pop cmpsl orb or and cs ds jo or cmc dec push adc popf adc lret loopne aam mov movsl push test adc jo jg or sbb roll add jnp pop inc loopne rolb fstl fs inc lea sbbl pop add adc add jle lea nop adc mov xchg test dec cs das test dec dec fimul jle mov push in jle add fistpll pop stos movsb inc push mov mov mov (bad) icebp fs inc sub or lds inc cmpps ret loop arpl mov and (bad) fisttp insb xchg push fisubl xorl xchg insl dec (bad) leave test push cmp stos (bad) cmp inc in mov mov jle sbbl sti dec mov inc or fsub fistpl and push add lahf ret jl cmp out mov push mov add sub mov ret cmp movsl std and push mov pop sub test pop mov lods mov ret hlt inc add negb ret (bad) or mov cmp (bad) rorl iret fstps test cmpsl sbbl mov shr adc bound sbb adc ss dec mov xchg pop rorb popa movsl xchg jge inc movsl cmp cs jl movsb out add fildll insl jecxz add rclw movswl jno,pt test sub cwtl movsl loopne fwait ret pop xchg ljmp pushf cmp mov rcrb mov int fcoms mov xlat mov dec inc out add int rclb insl mov dec jnp push pop mov sarb cmp sbbb or ror outsl xorl dec fisubl push sbb into dec sub repnz les mov nop xor in add jle mov push je dec roll mov pop push enter sarb dec or dec sbb gs xchg mov cmpsb pop adc addr16 (bad) stos xor subl lods aas mov jbe xchg fstpl jl pop int pusha and int roll mov mov les sahf and and mov inc push pop rcll mov mov leave adc popf orl shll setae or pop mov (bad) lock out add cmp xor mov mov mov jns or mov jecxz shr insb mov jo neg daa adc mov loopne or and jecxz add jl mov mov outsl rcr fisttpll jecxz je (bad) nop mov test or scas mov mov test in shlb xchg cmp je lea lahf sbb (bad) pop jg mov test jl fwait scas push inc ffreep push cwtl mov inc mov pop mov push jle jo (bad) out lahf dec jo gs mov notl imul mov adcl scas and nop repz mov fmuls mov xchg lea idivb add mov mov jecxz mov imulb pop cmp cmp dec daa add adc sbb xchg in insb int rcrl mov cmp (bad) aas or mov andl add outsl or mov sbb (bad) mov ret cmpsl add movsl fwait inc leave jbe call pop repnz test mov add cmp jg sbb add lret or pop inc sahf adc iret push rcrb rcll mov cmp push aas xchg push aam (bad) and fabs repz jnp inc or push pop sub dec jmp int3 lea jge jg sbb mov (bad) fadd cmp lods cmpsb imul pop sub out push mov jo cmp call mov js dec pop aas sub sub ret ja mov dec cmp (bad) int ficompl fwait add jl dec pop add pushf sarb sub cmp mov xchg or loop ljmp ds or sub adc in mov imul (bad) movsl push or sub in push push out icebp mov cmp int sub call repnz mov test das and sbb clc lods sbb xchg lcall cwtl imul xor mov or jnp jle mov jl repz out jb ja out pop outsb inc lea lret out in in mov (bad) js jns adc mov loop or mov sti sbb fistpl jg fiadd add adc iret iret fcompl or ret cmp mov rol sbbb shrb sbb xchg cmp or popa xchg xchg in js movsb (bad) cmp jle scas mov cmpsl dec xchg subl ud2 push sub sub sarl cld cmp frstor add stos imul int add inc test jne lds add xchg sbb (bad) and test mov scas les loopne (bad) repnz iret xchg leave cld lret pop mulb xchg test das (bad) jb mov test adc cmp or cld xchg aas popa xchg or lock cmp iret cmp or push je xor xor push nop inc stos xor aas jg xor push nopl push std jge mov jmp add jnp sbb pop ror inc jg loop add sar and lret sbb imul in or push popf mov add lods lcall jbe lods pop (bad) out xchg inc cmp adc pop sbb iret inc call pop int lods add orl popf jle int3 xchg jl inc xor mov or mov push cld push or pop (bad) movsl fnstsw sahf adc (bad) out push les movsb mov pop ljmp arpl and jne push cmpsl pop xor fwait nop scas dec aam lods mov or add ljmp rol cmpsl jmp mov sahf sub in cmc test xor loopne sub clc (bad) in std aas xchg std rorb test popf or stos insb dec (bad) dec ja int dec mov aas (bad) mov pushf cmp lahf orb push adc and fcompl jg leave orl push lods add stos mov int3 or sahf test or inc lahf pop jnp (bad) add ret jmp sbb mov push cmp jecxz sbb loopne and push cmpsl inc lea adc push jns push jg sbb sub gs subl pop cmpsl aas xchg fsubs xchg pop xsavec ljmp out dec (bad) lcall ret stos scas and inc mov and cwtl lock push jecxz sub fidiv mov jg sbb sti ss sub loopne cmpl outsb xchg mov test (bad) mul xchg ss mov in mov mov in inc ljmp in sti inc int aas add aaa pushl lods push dec lahf sbb lods xchg push rol adc lds pop mov leave sti das lahf xchg movsl lds xchg push and movl sbb mov push jnp shlb sub lcall sbb aas sub adc sbb fistpll jle lods mov aam mov test addb pop lahf mov sub push jns nop add and mov jecxz pop mov mov sub test lds pushf (bad) mov (bad) leave sbb out mov stos hlt xchg lods jg fwait rcrl mov xchg outsb mov jnp (bad) lahf pop inc sub daa lock leave jnp jg int lods addr16 popf mov pop or pushf imul mov cmpl testl addl pop sbb scas cs notb fucom and fldl mov dec hlt decb popf push lods stos loopne rorb shrl ret mov arpl fild insl (bad) mov lahf sbb (bad) lods fdivrs adc sbb add leave push jne jg mov mov jg xchg leave or gs aas jg add mov das leave rcrl pop pop (bad) scas jg rcrb pop subl hlt jnp push xor andl xchg stc addb xor jg sbbl stos jae xlat loope mov hlt jg push xchg push cmc sub lds add mov inc cmpl mov mov dec arpl add repz mov int fstpt gs cmpsb xor or scas ljmp mov (bad) push (bad) xor or cs mov sbb bnd mov add lods (bad) push lret icebp fsubs pop sarl or scas cmp iret mov inc in adc cmp inc comiss jp lods xchg daa inc sbb cmovp push scas js repnz ret adc cs mov dec sti nop add or push mov jnp ss xchg jnp (bad) sub sahf mov and xchg mov or mov in and in ss out cs inc sbb mov ret ja push je cli aam and cmp rcrb dec int3 and cmp nop inc cs rol xchg sti rolb fiadd sub scas pop lods mov jecxz rcl add in leave cmpsl and ror sbb inc sub cld xchg movsl and aas xchg out xorb dec int xor jns xchg out ljmp pop cmp xchg xor lea xchg pop adcb or (bad) repnz push push push jnp sub decl popa mov addl (bad) push je (bad) xor std sbb ret cmpsl dec xor enter or test data16 in push cmpsl and fs push or sahf div rolb cmp push imul je (bad) pop je ret fadd popa mov sbb dec lret outsl movsl xchg cmp pop aas lret mov imul dec std aas push sti jmp je add outsb mov add jmp pop lods mov mov movsl adc orl push pop inc add mov lret jnp add (bad) lret and stos and mov jl popf insb jg ljmp insl pop or inc and add inc popf (bad) mov mov cmp ret lahf les test add test popf lods out fwait (bad) jge popf mov ret lret xchg dec cwtl mov inc iret mov sti lret enter int mov int mov test std mov in cmp dec imul outsl pushf add pop and test out inc cwtl lret push jo push les sahf add out mov or scas clc sbb insl sbb aas jnp push leave iret repnz mov jns pop mov xor inc icebp outsl jle xor push xor lock push jns mov sub das mov cmc xor mov fidiv jge jmp mov or (bad) aad jp mov (bad) fadd shrb or popf loopne adc cmp adc stc mov jnp inc int mov inc sub lret cmp jg,pt (bad) push testb fwait scas inc cltd cmp inc sub sbb in (bad) mov out test cld ja jle add push loope mov inc faddl sti sub xchg loopne inc mov popf jle (bad) int sbb mov push pushf sarl mov repnz inc fcoml mov daa jae shrb pusha mov xchg or loop add ret jnp cmp lret sahf hlt std jbe (bad) fbld scas aaa xor pop push xchg xor lods mov loop pop pop inc cmp sahf push arpl or aaa insl cmp insl and cmp jl mov rcrb or cmp lea jo xchg pushf fldt inc ficompl cmp addr16 hlt pusha dec mov subl sahf xorl mov mov or pop lods mov call adc dec xor cmp ret xor dec sbb xor (bad) xchg ds sub adc xor inc push rclb and dec sub inc (bad) adc out jl mov xor mov xchg mov aas lret (bad) or cmp int sub rolb jle add ret es call inc ret push or jp data16 scas pop shll rorb mov adc cmp sbb inc test adc sub int3 jle int3 nop push ja xchg andl inc int (bad) adc cli dec dec dec scas in sarb mov inc mov out cmp enter pop pop or add lock pop mov xlat adc and pop push xchg dec inc cmp jb adc push leave xor jg (bad) fild jnp test or push xchg cmp push pushf repz push loop sub xor lds push push dec dec xchg add ret out movsl fdivp test xchg or test pushf cmp loope add shrb push popf mov lret and jge xchg (bad) xchg or or or jl iret popa or xchg mov pmaddwd out mov or shlb lret icebp mov xchg cs dec (bad) xor loop jae iret and in test call mov dec iret scas pop das sbb popf adc xchg std jl mov pushf sub ficoml dec int lods or fstl cmpsl ss fwait aad inc sub sub mov push lds mov jnp test outsl or jmp adc add mov mov mov jae jle pop jg js incl sub pushf inc mov inc or out mov cmp jns das or mov jne arpl cli leave xchg (bad) add mov or pushf call pop add outsl je fstl rcr jecxz outsb dec and mov hlt cmp adc movsb lahf or inc jmp pushf or test jl repnz insb mov repz jl xchg mov movsb cmp add pop out in push dec inc addr16 push add fistpll or enter push push cltd loopne cmpl daa hlt push ja sarb fildl in jle jle pop inc mov xor add cmp lret adc mov lea jo in sbb mov fstpt mov shrb jl addl lock inc jo (bad) jmp or add mov mov push out add jno (bad) fisub ficomp sbb cmp ret xor ret cmpsb scas adc add rcrb xlat or rclb out push xor cld orl add add or fwait and mov aas pop das push pop mov xor xor add out or bsr jo and das dec cld sbb add pushf adc jle add imul loopne cwtl and movsl in fwait or loop insl arpl push and xchg xchg sbb jge (bad) dec jb pop mov jne cmpsb mov and mov sbb sbb inc (bad) iret movsb and inc (bad) xor mov insl inc dec mov push out mov nop in dec leave fcompl mov pop jmp jl sub data16 fwait lods fidiv or mov xchg mov lahf lret (bad) mov sti inc add jmp test lret and es dec (bad) jmp mov cmp sub xor sbb sti les jnp mov sbb cld jnp cmp add mov (bad) lret mov fdivrp fdivr and jnp mov fimull lea shlb add popf inc mov lea mov add mov sti inc xor ret lods (bad) jecxz add inc mov into add mov mov xchg pushf outsl cmp inc iret push inc xchg xlat dec inc sti outsl test add adc (bad) (bad) jnp add xchg cmp mov xchg enter lea mov leave xlat or jmp sub lods dec mov or dec xor mov cmp (bad) lahf mov add sahf std mov mov add mov add pop adc ret lahf add mov mov addl add inc mov add and lahf inc lea mov cmp shrl pop aas fwait mov cmp jecxz int jb in imul mov jle imul add mov aad add rol in sbb dec inc fmuls fnstsw mov inc loop sbb mov lock cltd xchg mov push mov xor push sbb mov and jg in cmpsl mov cli mov jge icebp inc fcomps imul push push xchg xor rol addl stos mov leave loopne movsl xchg and inc fcom or pusha inc inc fistpll inc jmp stos rcrb or mov movsb xor cmp pop lods xchg fpatan inc popf push sub mov cli sti inc out mov lea data16 ds or in xor xor sbb js add pusha test (bad) jecxz daa test cmpl (bad) push pop subb sub dec sti leave jge,pn (bad) jle xchg xchg js aaa cltd jo cmp sbb jnp sbb pop mov or fwait inc data16 lods push mov popf pop fcompl xor adc mov insb lock or ret dec cmp and jmp jg add inc mov and mov and nop pop add mov inc fistpll mov (bad) lock push add or lret xor mov add sbb mov or bound pop les lret pmulhuw dec add invd les clc cs cmpsl ret mov lods sub dec sbb iret out ret dec mov in add orl mov lahf and lods jl mov push clc jge xchg outsb ret jge bound xchg or dec cs push xor mov cmp add mov fcmove and xchg xchg dec ret mov xchg shrl push add add lods mov pushf in in xchg jle xlat xor ret pusha inc add shrb addl push rclb std shrb cli lock mov mov mov sub aaa ss jle inc add rcrb add (bad) hlt outsb lock mov (bad) incb jne flds data16 jl push or sbb subl lods mov adc dec cmp jecxz aas add aaa js push lcall cltd xchg out add cld je push scas add shrl imul mov jo (bad) repnz sti fsubl in jl or xchg cmpsb push hlt xor sbb mov adc repnz lret xor push or or cld (bad) mov (bad) or mov out cmp lret aam out call cmp xor ljmp pop push xchg jnp ljmp jae mov testl inc imul sbb sub mov lahf xchg or cmp mov test mov aas ret mov lret movsb stos hlt fsubr popf clc inc dec loopne ljmp pusha dec mov ror mov sti div or jo mov sub dec xor pop pop jne pusha dec cmpsl ret (bad) cmp fisubrl add inc or negb inc sti xor dec push mov xor out push or mov add or mov sti scas js test addr16 call add jne mov test ljmp adc rolb mov aad repz mov (bad) cmp or and and pop push lds in in sbb mov push pop out cmp cwtl cld das cli and adc sahf adc dec rcrb popa leave test or mov add push lock test adc mov js mov ljmp inc dec test jle aaa and iret hlt insl jg sbb out xor ret (bad) icebp adc sbb inc mov arpl es stos je xchg movsb dec (bad) inc shrb call sahf pop cwtl cmpl jb sub rclb xchg cltd and or (bad) mov and icebp and jle mov jecxz insl mov cmc xor mov icebp out push and jno out decb or mov js add or xchg xor and sbb int3 inc mov (bad) mov cmpsl jne dec push mov mov nop je pop dec cmc (bad) rol push in jmp hlt adc loop jno lahf add fisttpl pop cwtl sarl add mov cld leave or or and inc mov ret gs mov pop sbb jnp mov and lods fbstp into sub and xor jnp daa mov in sarb pop ret jg mov adc test (bad) xor aam xchg jecxz jae scas sbb scas cmpsb push gs test imul test sub or or arpl and jns cltd mov jge (bad) out jnp iret ja jl insl inc ret lea mov fcoml xchg jmp fisubl jo outsl out mov aam ret mov add cmp pop orl ret mov sti lds xchg and adc or int lock in scas adc lock add and sar sbb pop out and loopne ret imul mov (bad) int3 jl xchg inc addl popf stos push adc es xchg add sub xchg cld xchg xchg mov or outsl xchg push nop imul fwait add adc loopne and addr16 hlt mov roll into mov fs xor mov jo ret lods cli add jg shll ret test (bad) (bad) mov dec xchg xchg mov add fsts mov mov jmp pop leavew adc or xchg fistpl or xchg sbb sti fiaddl mov ja pusha (bad) (bad) aam cld in xor sub cmp add ret daa pop mov jle lods sub lods test int (bad) mov xchg bound adc sarl insb out lods inc pusha bnd pusha in xchg mov cs push sahf mov jge push cmp mov push mov pusha stos dec imul fs popa mov or cmp cs push cld pop jnp sti scas rcll (bad) xchg lea (bad) and xor dec sti sbb push out adc fistp xor pop ficom aam dec push cs xchg les jmp rcrb xchg in call insb mov or repz mov cmpsl or sahf push movsl lods (bad) mov es negl push (bad) aam pop pop lret fwait cld mov push adc jo mov test cmp (bad) and lods push leave aaa cmp mov in inc jp ja sub xor cmp mov bound or iret add push push cmp jle sub pop sbb sub loopne jmp cmpsl mov push leave mov nopl test jp adc cld insl sub push fistpll bound xlat pushl xchg mov adc xchg aam fcomi pop mov scas nop mov int push adc cmp or dec lods popf mov mov adc xchg lcall iret nop fisub push mov pop mov push fild mov xchg jg lea sahf mov mov add sbb pop push cmp es pushf scas xlat shlb push out movd or and push mov sbb loopne pop dec inc iret nop insb cmp fidivl xlat (bad) pop xor jnp pop lods xchg stc fwait push repnz mov insl jg pop call cmp popa push adc daa sahf jg xor pushf jl pop xlat mov popf fistpll jmp das adc cld dec adc btr pop (bad) dec jp orb jns rclb fildll in (bad) cs dec xchg jnp cs sub movsl pop fldcw out clc popa inc adcl hlt mov or jp sti lock mov in shr add lods sub pushf or inc movb mov mov fwait push cs stos jno shll mov jno lahf into jg xor (bad) loopne cmp xchg jnp xchg or pop pop movsl push fdivrl mov xchg fisttp jecxz hlt test push sbb fcoml pop push in xchg fcoml adc (bad) jnp sub adc loop xor push inc insb push fstpl notb sti sbb inc pop pusha aam bound jg in or mov mov sbb mov enter stos and mov push mov loope test lock dec push hlt mov jmp sbb jmp ds sub in xchg mov gs lea jecxz cmp mov pusha cld arpl sti dec inc test inc dec mov (bad) loopne jg loopne iret push lods call call insl repz stos fcoml pop orps sub fnstenv adc sarl test stos mov mov fnstsw test pop sbbl out test fsubl das lock ljmp inc orl in jl pop lods jl jae xor loop loope in js stc sub aas mov adc loopne int (bad) pushf sub push pop push dec jb jp fs lods mov sbb adc sti mov cmc push hlt mov cmp jo sub pop cld dec jge dec sarl test lock stos popf mov or or les scas hlt and adc cwtl pop cmpsl stos fwait or jmp mov mov jmp mov dec (bad) or dec loopne loop mov xor pusha divl jg inc sbb (bad) or popf arpl xor mov mov or mov loope push xor sahf (bad) outsb push xchg out test insb push mov iret xchg daa push jle outsl das sahf repnz fidivrl arpl mov cmp int xor lcall mov test mov scas clc lahf adc daa add cmp dec xchg jae,pn sub jno cmp mov movsl jno mov mov cmp dec jge sbb push mov repnz ss push jae mov xlat push mov out dec jo lods test outsb sub fsubrl jmp mov addr16 fistpll jg mov (bad) pop cmp in push scas add mov inc stc cmpsl mov imul jmp fimul push or cmpsb in and or sbb cli xchg inc outsb lock (bad) or jnp cmpsb out pop subl dec (bad) je cs addr16 xchg push cmpsb adc leave sub push (bad) mov jg decl sbb mov outsl ljmp aas test jnp cmpsb jge jmp add add es and fs orb pop pop sbb push loopne in callw (bad) or mov inc scas ljmp jno subl insb (bad) cmp sbb inc jge xor std cmp sbb stos jnp out int3 fwait ret cli xor fcoms aam cmp or jb jnp lods stos inc das cmp in xchg lods add (bad) xor (bad) icebp jmp or lea enter sahf jae scas cmp shlb mov push loopne dec xchg push test scas cmp push pusha jge mov add add jge out adc adc loopne push pop xlat cmp lods repz add mov xchg sbb add jne mov xor xchg jge in fcmovnbe or mov push jmp jb aad mov cld jle xchg or sbb fidivrl mov jbe test loope or mov jb pop pop mov cld mov jle sub enter add (bad) xchg jge (bad) pop movsl aaa mov or dec mov repnz sti jbe lds xchg sti or dec subl and xchg jl (bad) stos push test push add jg bound adc or lea rcll mov xlat les lds inc jnp add push (bad) addl fwait sub mov pusha mov lock cltd adc adc lods and stos lock adc pop cmp in pop push or jbe mov test ret add icebp icebp in std (bad) jmp pop jle fist int3 sti fwait jle cmp or lods test adc mov or add or pop sub idivb mov jle,pt pop jp or mov or jns xor aad andl add (bad) and push insl sti sar lcall sarl das cmpsb cmc lcall loopne js push pop out jo push sbb adc pop mov mov mov lret jnp leave xchg int3 xor xorl movsl call rorb insl imul mov and dec ret fist or imul stos call jo aad push mov pop std movsl test mov xchg jbe and cmp fwait call rol adc setl scas movsl and pop testl mov sub (bad) xor fbstp cmp push das sti lds adc stos lret lods push pop mov or mov and mov cmp lea sub mov xlat pop pop pushf ja push leave scas mov push rcll outsb jmp push mov jae mov xor push shl mov and or loopne mov or std jp call cmp sub push insb inc lods cmc or negl push (bad) (bad) in push or fldt inc aas (bad) std mov cld sti repnz push and add mov add jecxz sub fnop xorl (bad) cmp mov mov cmp jge rcrb int mov (bad) sti pop mov mov ljmp aaa jge popf lods rcrb cmp sbb ljmp iret xor mov pop (bad) aaa rep push mov cwtl jecxz mov scas mov popf or jl lahf orl ljmp jo sbb cmpsl push pop stos in in xchg cmc cmp dec jnp cwtl xchg sbb jo out or adc (bad) (bad) out fbld outsb cmpsb sti addr16 xchg ret push add push mov add addl jno lea cmc mov xor or xchg test test inc adc ret stos pushf add lahf mov jecxz mov dec iret dec xchg xor into int or and rorb aaa into int loope (bad) cmpsl cltd (bad) inc pop es jecxz sbb cmp arpl das push shlb in jmp out cld stos cmp lahf imul mov mov adc data16 in (bad) mov mov test jl sub stos jge ret lods mov decl mov jnp add lods test cltd arpl mov mov jecxz inc mov ret jnp sbb mov inc scas rol arpl or lods pop fcoml jnp pop cmpl pop lea mov mov adc stos jnp or subb fidiv mov sub pop lea aam pushf (bad) ret addl inc cld xchg add les xchg rol arpl dec or cmp xchg scas push lea xchg (bad) lahf fs push insb mov jl popf cmp pop fs leave jnp icebp cmc mov sbbl add (bad) std mov pushf aam fisttpl or leave popl cld mov fwait enter ret pop inc roll (bad) adc test sti (bad) fstpt icebp (bad) sti mov std mov pop aaa fmull cmp ret fmull push mov xchg xor addl sub or sbb fwait enter out fadd push mov add mov sbb (bad) mov push xchg dec cmpsl mov rorl icebp out lds add (bad) mov fisttp sbb cmp pushf jp jne jg ffreep sbb lods or movl jbe xchg xchg or mov sbb xchg xchg popa mov xchg or insb jnp ljmp push push cs (bad) out jge out xor fs push mov mov stc sti sub mov xchg add roll jbe cmp dec pop adc mov jl je (bad) popa daa add jnp sub movsb xchg jecxz lahf cmpl (bad) sahf lea cmpl addl inc bswap sbbl cmp in pop dec cmpsl or cmp arpl pop mov push lods cmp jecxz mov dec lods xchg mov movsb icebp dec or jnp inc or cmp sbbl ret pop or into aaa loop outsb mov cmp fidivr ret arpl xchg addl inc leave or arpl sti lea mov sahf jl fstpt ret test fdiv jmp cmp fwait or fidivrl mov sti lahf int3 lods fstl mov jno mov stc movsb scas mov fwait inc std cli jnp enter cmp xchg test aaa lea leave in fidivl mov mov test mov pop out pop mov pushf dec incb shrl loopne shlb xor bound or clc test or jg inc or sbb dec ljmp mov data16 dec cld ret cld push (bad) out aam mov fdivrl pop in ror mov pop xchg dec fs mov push popa cmp mov insl adc dec xchg push sti movsb ljmp loopne pop xchg scas (bad) stos mov sar push fsubrs xlat repz cmp loop dec mov lock mov das jge mov mov iret scas jl ljmp sub stc mov int popf scas (bad) aad mov in jg mov out lret sub ret sbb scas ret data16 xchg (bad) jg aam jg lea dec int (bad) xchg sahf (bad) rclb int push push sarb (bad) or rorb stc mov cld or fcmovb sbb push iret cmc push lahf or iret xchg jnp jg lods xor dec mov or xchg or stos les cs or es sub scas xchg jnp out cltd sbb mov mov mov les sbb lods or pop xchg sbb mov mov sahf ret mov loope mov mov hlt cmpl inc sbb rolb sbb xor xor cmp pop out push arpl les mov push call sbb inc enter mov aad mov sbb sub or ret data16 (bad) cltd mov or shll adc sti xor call cld div push add jnp add inc add push outsl dec adc pop dec push sbbl dec idivl xor xor inc jg lcall push mov xchg mov enter aaa push jge sbb insl or xor jmp mov push mov out jle aam sti cwtl xchg (bad) lock psubusw (bad) push pop pop xchg in sarb push add dec and or jg jnp hlt ret ds imul xchg pop outsb sbb mov mov cld lock xor in fildll loop pop lock inc sbb mov lds add pop in nop xchg int3 test sub ret lahf call enter pop xor mov or dec dec or mov and dec mov or in or js mov push loope xchg enter cmpsl mov pop xchg popf sti sbb into and (bad) push repnz xor inc mov std and (bad) cld jp dec in jecxz lcall add pushf pop xor push mov adc (bad) icebp ret gs stc cmc fldl jmp and ret lea fwait int ret arpl (bad) mov jno push insl arpl imul movsl xchg lahf rcrb imul and fildl push std sbb inc pushf cmpsb dec cltd pop pop inc insb sub push (bad) mov pop xor cmc pop shr mov pop and repnz into out adcl pusha sub push fs das add mov fsubl (bad) mulb push push pushf push mov rolb les mov pop or lock sbb dec inc std nop (bad) (bad) dec or addr16 inc mov out mov out sbb roll out jg iret imul mov enter inc in lcall mov lret xor repnz and mov mov cli and xor es inc push nop subl mov pushf jecxz fwait inc inc xchg mov pop sbb out shll rdmsr pop ljmp sbb or scas cs std dec mov fcompl pop or sub pop rcr mov xchg ret lret mov adc (bad) jecxz mov cmpsb xchg inc (bad) cmp scas in cld cmp (bad) jnp sub jecxz jo in mov inc sub mov pop out sti ljmp loopne push mov rcl and pop andl lods in inc cmpsb xchg xchg pop mov mov (bad) loope jo pop pop ret hlt cmpsl cli jl bound imul (bad) cs je outsl lods jg jle sbb sarb mov sbb rcrb add xchg lds sbb lods cmp mov or nop daa mov sbb mov mov shr jl mov mov pushf push fimul sahf scas xor mov jge cmp inc fsubrs popf je hlt inc or cmp mov pop (bad) aas mov push lods add dec fstcw scas xchg jp aas pop jae sbb dec gs (bad) xchg jp mov aas mov into rclb sub adc sbb js,pt cmp bound (bad) mov cs jnp jl jecxz xor das mov imul sti arpl mov mov add add rcrb lock sti jp add int xchg inc or push fwait es cwtl xchg or iret lret and mov mov test or mov stos (bad) mov mov pop sti adc lea rolb xor dec rcll jp out in push and jmp xchg cmp jo and jae nop lods inc xor sbb (bad) (bad) stos push and aam into sti insb adc lea fstpt dec mov or or aam cmp xchg jnp adc cmp adc add sub decb sub int3 loopne popf mov lods (bad) sub nop int3 or stos sbb or xor imul (bad) dec test or (bad) sub and or sub xor jne call aaa cmpsl cmp mov ds loopne iret jbe push lds pop dec cmp fidivrl sbb in pop lods inc or mov mov (bad) cmpsl and insl cmp je in sbbl scas sti pushf std mov mov pushf push mov stc jle mov cmp sbb mov in lret xor pop mov pushf ljmp mov icebp pop or adc lea aas xchg jmp std jle push adc pushf lcall (bad) pop sti and ss insb sbb mov test and or inc inc xor dec fmulp aas call cld movsb lcall adc dec and jbe cmc xchg mov sti repz push lea pop jb sbb mov lret xor push lret cmpsb jg mov call std mov pushf outsl push in in das stos jmp pop xor cld add rcrl pop rolb add ret xor push scas aas add lock mov cld xchg lcall cmp xchg xor stc (bad) daa in pusha jp jns aas cmp or mov mov lods hlt inc std sarl xor clc insl lea rcrb insb adc inc sub (bad) adc push sbb cmpsl jge xchg cmpsl cmpsb mov hlt nop cmc jne (bad) jo and xchg roll ret mov mov test pop lods cmp fdivl mov rorl jae push or push leave stos iret dec lock lds sbb adc mov cmp push inc xchg jle aas cmp int3 stos dec xchg inc enter shrl jb mov inc push dec mov sbb ja pop dec mov xor stos repnz mov addr16 jecxz cmp testl ds mov lods cmpsl and rcrl mov aam fmull es outsl and sbb lcall mov or aad ss out mov popf jo push push js or and (bad) loop fwait and (bad) sub and negb sbb (bad) jp add insl repz repnz ss divl std mov inc pusha sarb jb stos mov jo or lahf mov ds and lds push adc test push lods cmp or mov ljmp jmp cmp or inc sbb je ret popl jbe hlt xchg in mov dec mov cmp xchg popf int jmp mov adc cmp out dec cs out push ds add mov int and bound js in cmp outsl movsb jne movsb fs xchg xchg mov cmp push std sub jmp pop imul fs std xchg das and cmpsb test xor pop or xor inc or in int mov sub or adc nop lret fwait push (bad) movsl popf rorb add push push fsubrl pop jecxz mov and and jne mov jo push hlt cltd rcll xchg add adc inc imul and xlat adc lods ja pop rcll mov pop or push jnp in ja push das popf and rolb jl mov mov push das pop mov dec ja xchg mov xchg enter in aas and movb hlt inc lods int3 or fldl xor les xor mov cmp jl xor cmpsb adc std shlb pop adc inc divb add enter in add sbb push int icebp imul iret in cmp ds das cmp jne push ret mov fs daa mov adc in cli adc or lods mulb popa cmp cmp mov out xchg push psrld push push mov int enter nop xchg mov cmp incl or into cmp fsubrl xchg pop icebp add mov orl test mov push pop jo es fdivrs loopne sub frstor leave out jg divl pop (bad) les scas push add arpl or add adc xor data16 data16 rcll icebp add xchg jg push inc cmp cmp xchg imul (bad) pop pushf cmp mov xor rclb mov jle sti imul xchg das push and sarb xor dec cmp jl push add mov or or mov jg fnsaves out inc popf pop cmpxchg insb rclb inc add adc out shlb cmp jne mov cmc lods pop (bad) into fnstcw (bad) inc sbb pusha xchg test into pop sahf mov xor jge je mov or fadds mov jg (bad) mov sbb movsl cmp imul hlt sbb insb cmp jp sbb in call sbb pop in xchg add cmpl inc sarb test or cmp lods sbb nop pop jbe sub ss les mov jnp daa out sub mov inc mov jnp pushf xor shrl in js adcl rorl loope fdivl pop sbb mov outsl xchg mov roll sbb pusha test mov decl mov sti push or cmpsl test xlat clc es push jle add daa scas dec iret rolb call push leave xorb icebp daa dec xorb stos add mov add jae jmp int3 pop loop sbb jle (bad) mov xchg loopne lea and loopne dec js mov out mov cld sti mov pop xchg popa push clc sbb mov mov or pushf pusha jb imul push cld sub mov and popa iret jbe out fldt mov sbb jg jb cmp or or and lods das xor dec es pop aad test cmpsl adc cltd adc ret xchg jp push sarl rolb add sbb lods adc or movsl or push lahf (bad) mov push fwait pop cmp mov imull cmpsl lock and inc push mov add inc sbb hlt push movsl out lods lcall pushf push jno imul mull and nop or xor jp jo cwtl lds iret jnp jp push add push mov xor pop lock fistpl mov sub mov ljmp aaa fisttp xlat pop (bad) test loope xor pushf clc mov lret sbb sbb mov lret sub dec adc bnd inc add jnp push inc incb in jp add rorb push call mov cmp pop movl cld das add push mov xchg test shlb mov dec jl sti incl xor in daa shrb cmp jo pop in sahf xor mov cmp into mov dec movsb jns insb jno pop cs bound cmp jle adc sub sub mov aaa call adc ret xchg out jp pop cs cltd adcl (bad) jmp mov (bad) hlt ss std jnp sub mov or cmp (bad) ja cld iret and mov (bad) aas mov in inc les inc daa inc jmp xchg out xor push xor push inc lock shlb cmp jg cmpsb mov mov cmpsb xchg loopne jno adc push cmpsb lds mov push pop in into fistl add pop and lcall pushf lret aas cs imul cmp mov ljmp jg mov cs sahf jge xchg lock cld clc lea dec jno loopne or (bad) sub insl jne or lcall fisttpl cld jae insl adc dec stos out fbstp pop jmp adc dec insb rcl mov sbb sub and sub icebp lret aas stos lcall lret push test test nop stos lock pushf mov dec sbb std jg test adc ja inc pusha into dec push icebp fmuls rorl ds cmp (bad) mov cmc test push mov xchg lock fistpl lea daa mov or loop jge pop les outsl lcall mov pop dec sub (bad) lret jge aas jne lret mov sar popf pop jno mov or popf lcall lods (bad) test gs mov fwait push cmp and and and fmull mov sub cld bound in mov fwait ss call xchg mov sub jbe dec and jbe mov ds pusha lds lahf aas pop mov adc mov fistpll imul sti inc (bad) mov jns,pn jmp dec sbb push cmp (bad) sbb (bad) adc popf inc pop fldenv lods jnp sub push pop sahf scas ficoml jp push pusha ds pusha xor jae lea fcoms int xor call mov in test fdivr sti das js mov adc pop xor add sbb bound insl jg push jno push adc xchg or xchg dec decl pop dec inc mov lods bound (bad) cmp or xor outsl add (bad) dec sub xchg xor dec pop iret mov lea xchg jl inc cs ret mov mov (bad) or lahf mov mov ret push pusha mov (bad) (bad) mov repnz add shll xor jle inc int3 or mov push icebp aaa cli lock inc in clc mov loopne (bad) pop negb clc sti add jno jge stos sarb (bad) lret and add push inc dec add in cmp (bad) mov add xchg out inc push inc pop loopne pop scas hlt mov dec cmp je cmp cs sti mov fdivrl das std rol mov ja in xor jp and mov mov sti push je aas or ror bound push (bad) jae mov jmp jg inc pop ds cmp sbb jge mov rorl fstpl sbbl push dec ret pusha sbb sbb mov jle pop leave int3 in or cmp ret cmp insb or popf hlt lahf xor inc jl icebp pop mov shrb pop test push fnstcw xchg mov dec aam sub dec insl movsl out rclb and (bad) iret pushf xchg std cli test insl iret xchg ss repz dec lcall in cltd stos or push cmp scas mov daa addr16 sti mov popa dec loope rorb jge movsb out and and mov jb push sbb pushf test test pushf sarb jmp jg aam sbb pop lods lcall dec out lods jp,pt sbb sarl jle fwait sub or push jnp sbb pop out test xchg sub jg (bad) and or sti dec mov sbb sbb dec jp jnp and push popf cmp scas cmp cwtl daa adc (bad) loope jmp lea jle sbb dec jge mov or sbbb sbbl push jge cmp lahf jl (bad) pop add pop or pop cs inc hlt in add mov aad or sub mov popf adc pop sbb fwait js jg or sar and mov add in mov cmp dec pop loope jnp lret lds sub jo push mov dec mul inc icebp ret test sahf adc sahf cmpsb push sbb (bad) lret in outsl ss loop sti xor jnp insb dec jae inc xor xor cmp outsb xchg mov jo out in or sti iret cmpsb cmpsl int3 sub xor pop pop in inc mov jg cmp jo aam inc fimull fsubr xlat aam sbb int cmp mov divl xor mov fbld sbbb push mov out pop mov lret imull xor inc xchg pusha inc jno sti (bad) in and add jp mov lcall cwtd xchg mov inc cmp cld mov bound mov sub iret das cmpsl cwtl sete jne rcpps mov into int shl push rcl jp mov cmp pop aad jne fsubrs xchg outsl inc dec dec cld test mov xor out lds scas adc mov jmp jne mov or mov stos mov loopne cmpl xchg cltd cmpsl outsb or test (bad) (bad) mov fstl pushf fistpl xchg push cld or pop hlt aas xor testb (bad) or dec faddp insl inc test add push loopne mov fcoml adc push or jo inc sbb scas loopne or add sahf pop sbb mov aas push mov lea mov fucomp push cli add jo mov xor in test xor jno hlt dec mov int and jge mov (bad) incb mov mov jae std scas shrb adc inc imul inc add cld inc push push adc push test xlat lcall fisttpl pop aam hlt xor jg leave das sbb (bad) outsl fsubs sbb inc cmp jge push jae ret adc int xor pop das jo push or fist not (bad) std add call and jo or pop lds jge mov aad xchg cmp and mov push inc mov in mov loop lds xchg test fwait dec sub daa call fwait mov mov shlb rorl and out test loope xor adcb sbb hlt inc jmp jle mov ds int jle dec xor dec xlat mov adc push aaa lahf adc xor xchg inc idivb xchg mov push push mov pop je (bad) mov pop xchg inc cmpxchg enter (bad) aaa incb sub out fwait div or pop jl aaa aam mov cmc jne adc add xor mov mov lods fisub add repz (bad) adc cmp ret xorl xor inc (bad) xor bound test dec rcr test leave mov in push or mov dec (bad) (bad) cld cli pop insl mov sti mov arpl or popl scas dec xchg add sbbl mov jo adc adc and dec sbb cmp push in add daa dec mov push daa and jo sbb xchg mov mov add pop xor push or sbb icebp sub mov in lods jnp sbb mov or popa push sub repz fistpll in mov fwait ror inc mov cld mov and sbb lret (bad) mov daa inc mov push adcw add clc jnp (bad) stc imul mov add mov jmp jmp sbb int3 xor mov sub addr16 cltd mov pop stos test dec pop (bad) nop or pop lea js insl call lret mov push jp sbb inc shrb out mov ret outsb cltd call xor in jge mov loop loope mov or pop sbb xchg loop add adc lahf call pushf push das call jbe js orl shl pop rorb lock push leave ds sarl cmp mov ret (bad) xor cmp mov or cmp cld imul enter jge push push aas movsl xor sub fildll xchg lds cmpsl cmpsl sbb fcoms loope (bad) push inc in (bad) or xor push jp push test loope bound insb push mov (bad) imul rcr cwtl cmp sub stos ret test pusha (bad) cmc clc sbb stc adc jp add pop pop rcrb (bad) cltd scas xor movsl pop repz jp fwait jmp xor pop test push imul sbb jg mov ljmp pushf addr16 jnp jae push xchg stos nop mov (bad) push movsb inc out lds imul jno (bad) cmpsb adc cltd aas xor and add ds (bad) jge cmp (bad) cs (bad) sar sbb pop mov or lret jo lock mov test nop cmp ds jp rclb mov pop add or imul mov pop and xor sbb (bad) jmp mov xchg xchg lds pop mov movsl test addl je clc in and lods fs sarb xchg xchg sbb lock and jne mov and mov mov ss imul imul pushf jge mov sbb mov xchg mov jmp adc pop mov out lcall jle lods out aas push sub imul sub mov test mov dec dec scas and jp fimul sahf mov fisttp mov pop mov fcmovne jg jo pop fimull ljmp xchg (bad) cld dec cmp sarl mov push iret dec rcrl lret xchg cmp mov andl xor pop dec xor inc push das sub mov iret jl mov stos imul mov dec inc pop sbb inc add ret mov dec pop add push jle loop ljmp out movsb stos movsl jl add xchg cltd fidivl push dec roll xor sbb pop popf (bad) jo cmp fnstsw cmp pop add lret clc lock dec pop jmp sbb sarb or dec scas mov adc lret lcall std mov inc cld and xor mov jnp push xchg pop pop sub xchg insl (bad) pop push xor pop mov hlt cmp std mov add inc add push inc xchg fs bnd imul push rep sub shr les inc mov in rorb pop std fwait push mov lret sbb jo,pn add pop leave stos (bad) das push sti mov jnp (bad) jle stc jo add dec in (bad) lods xchg cmp ffree shr jae mov ret jmp aas sub sbb lret fistl sbb mov arpl aas or insl sti jle in pop sub push adc or fcmovb mov xor mov pop jecxz (bad) cs adc inc enter pop (bad) mulb scas fstl bound push dec dec scas arpl sahf sub xor cltd jae xor stc pop (bad) xor sub dec call ret (bad) ret fild fs or add and sti (bad) mov pusha rorl (bad) dec imul dec (bad) jns xchg repnz adc in lea mov aam push pushf int enter cmp push xor mov cmc test mov push xchg mov adc sub dec mov push lcall loope fild je and mov stos cmp xchg mov imul xchg mov lds int3 add incb (bad) into jns jns sub (bad) mov push cs jno inc mov sub std fldenv dec or test xor fs aad mov fildl inc (bad) popa add ret mov loopne cmp imul (bad) cmpsb jmp dec (bad) xor push and (bad) std dec (bad) clc or test test cmp test mov jnp out lret imul rcl daa popf jae lret and incl pop insl adc sub adc push dec or jne sti imul iret mov jnp cmp idivl xor incb push movsb jnp faddl out cmp mov mov dec les mov jo push jl mov mov dec xor xchg scas pop jg add nop loopne (bad) clc cmp jnp xchg pop movsb or cmpsl rcl cs inc in mov leave jno daa jo cmpsb mov test ret fnstenv lods and shrb jnp jp mov cltd (bad) repnz jae in mov mov cmp cmpsl popf subl lahf xor imul test mov sbb add cmpb dec pop shlb cmpsl xor inc and or sbb in int cmp incb jecxz add nop aam inc rol inc or adc jo in mov gs popf (bad) mov xchg fnop sub fnsave addr16 popf loopne in jge mov pushf push mov fisttpl lret (bad) ret adc jge test sbb (bad) int3 sub push mov insl jae xor mov cmp jnp ret std rolb inc int aas sbb insl rcrb lcall aam or fcos stos jnp jg rolb cwtl sbb bound scas lret mov push lret test pop mov mov sahf add addb stos in fcmovne xchg pop jg add push shll ss cmpl decb xor mov mov xchg jnp ret fcmovnbe sbb or jb lret (bad) cld push sar jae xor cli mov and and movsb pop test out int3 sub fnsave push lret xor mov adc pushf jmp cmpsb fs lea mov popa or jle inc call sbb or push sbb das sahf (bad) add cmp movsb arpl sbb mov lahf call jge inc (bad) push sub outsb ret cmp shrb std xchg sbb xchg in push rcrb in in fwait shrb sub mov jl cmp iretw je icebp hlt mov inc repz mov lods repnz jno lret pop ljmp (bad) dec (bad) push xchg lahf cmp xor test out cmpsl jp (bad) mov add popf mov ret cmpsl jae clc jne (bad) leave lods in bswap mov ret lods jle sbb rolb push pop not add mov test das inc cltd lahf dec orl imul fistpll out repnz xor int push adc sub sub pop xchg jo in push fmull xchg fistl or int cltd cmp mov (bad) repz pop jg sahf lret adc xchg sarb fdivl (bad) mov hlt dec cmp inc push xchg aad sbb pop daa lock pop pop ficoml aas adc xor xor push addr16 mov clc xor jp xchg jge imul out xor cmc jnp rcrl int ret sti add lcall (bad) xor mov adc and icebp mov stos cwtl outsl mov jb out mov sahf aaa jo and xor inc (bad) xor xchg mov pop add sbb mov lock push cs xchg jp push and inc cwtl popf xor xor cltd inc sub imul pop lret inc xchg pop test pop stos add lret repnz mov mov outsb cli fist (bad) aas cs test mov imul xchg sti sub add (bad) insl rorb aam call xor mov shlb xlat inc jnp movsb and pop (bad) jl loope (bad) lret cmp inc or fcoms fidivrl jmp std movsl popa cwtl push repz adcl iret mov std mov jp push inc inc addr16 xorl inc or (bad) lock lds and add xchg fdivrl pop and mov push sahf mov xor (bad) scas jnp mov inc cmpsl mov sbb test fwait mov mov xor fisttpll xchg test sbb (bad) adc jmp push int3 pop xchg add int3 mov bound sbb punpckldq cmpsl adc sbb or lret es xor pop stc shll jl cmpsl mov call int dec test cmp inc rorl scas incl lock pop leave fwait je sahf js mov (bad) jb mov add or push outsl ds pop push pop xchg jle (bad) in pop ficompl xor insb rorl mov sub push mov movsb fsubl fxch jl sti ficompl or sti jbe divl sub xchg push mov pop mov mov mov shlb rclb inc jecxz cwtl jl add repnz cmpsl cld ret shl (bad) or pushf mov sti icebp mov std ja mov mov fucomi jae mov push or or add adc sbb (bad) aad rclb sub loopne cmp jge adc fwait adc out sarl push lahf (bad) fsts mov faddl and outsl sahf pop xorl inc imul mov mov gs mov int xor mov test mov pop in (bad) pop fstl dec movsb pop xchg loopne (bad) add push cmp jle cmp or or xor cmp add test (bad) cmp xchg adc popf add adc pop sub mov or adc lods jno aas mov (bad) add mov test sbb frstor rolb je jb dec adc or jns lods stos add mov cmp fmull outsl dec jnp lods xchg sbb push xchg lods jo xchg es jb fucomp fsubr jno fstpl jbe inc pop pop inc out cld or cmp sbb ror mov enter ret lods mov fninit add inc sub sub xchg inc (bad) ror imul fwait push sbb lods test pop test (bad) adc jbe add or cmp pop int pop inc jbe jb jnp xor rcrb sti call mov in iret ret cld (bad) test (bad) mov jnp mov mov adc pushf xlat mov sbb ret jb pop or xchg adc push mov int mov cmpsl or movsl sbb in dec inc push insl lret aaa or jbe add rcrl sti jbe lahf cld jo mov cmp and cmp fucomip pop adc jb pop leave out jle adc xchg sub sti push in (bad) rolb movsb dec and jmp mov jle mov lret jne shrb jb inc mov and popa (bad) sbb inc mov push ss push sbb aas jge sub mov pop xchg pop (bad) jl sarb pushf popf sti lahf cs or cmpl mov push outsl mov pop xlat mov jmp jb dec push js addr16 inc fisttp pop xchg mov (bad) (bad) mov insl sbbl gs pop sbb outsb pop andl shrb jg jnp xor sbb (bad) lods sbb sub es xlat das lods fisttpll cwtl fisub cld push pop push gs ret push pop rclb movl jbe and or in and xchg movsl bound lret dec nop (bad) jbe cmpsl jl fs xlat mov mov (bad) pop jl adc fsts adc movsl arpl dec mov push loopne jl lds push ret mov jg das add rcrb enter (bad) hlt lods inc adc je pop or je xchg jl test add (bad) or add jl mov lods negb fsts ret xchg inc or je lods popf aas incb sub in sbb push lea sub jle mov xor sbb decb lret jbe in cmp jae stc gs scas jecxz xor lea imul shrb loope in or mov rol jne jle mov sub inc lock fcomi addr16 xchg cmp ja xlat hlt jbe mov nop pop sbb add fistpll sub aad jnp and sub stos cmpsb fwait cmp xor lahf loopne enter jg pop pushf cli enter (bad) aas outsb add xchg push jnp add mov mov loop (bad) popf add mov std cmc mov cmp hlt scas mov pushw ss fwait das jnp (bad) fs popa adcl loopne mov int3 xor jmp or call lret insl mov or mov xchg pop pop dec (bad) mov imul sbb push cmp pop cmp lret enter jge cmp loop push mov ret pop out lret and pop xor mov loopne out add fbstp xlat add sub scas imul jno push scas mov cmp mov or dec mov pop push cmp es mov cmp jmp mov pop jmp mull mov jge mov test ror and xlat cmp sbb or pop mov sub iret in cmp xor movsb pushf outsl jp outsb std nop and pop icebp xchg fcompl fwait rcrb (bad) in jge out adc enter adc scas xchg ds nop mov mov (bad) out fstl lret in mov fwait jle lock jecxz scas mov or into push sub pop dec pop cmp jae sub hlt int lret xor push js sahf cmp mov loopne pop mov (bad) pop repz roll ret mov mov or sbb pushf inc pop or aas rcr xchg fcomps jge rorb pop fidivrl loope push clc mov mov xlat test mov in mov lock or js and fcomi dec lret (bad) (bad) dec cmc or dec insl pusha stos or ljmp add popa mov iret xchg dec inc xor call sub mov enter bound imull add int dec mov adcl or jecxz (bad) lods sub icebp xor nop fistpll pushf lret aaa or movb pop insb mov dec pop scas pop add bound mov cs jmp sub lcall (bad) mov inc aam lret sti mov arpl scas jmp cs adc jecxz test pop jb sbb xlat xor cmp stc int3 movsb mov call mov sbb jnp bound cmp mov mov add xor or or dec loopne mov sub push lods and mov jle in scas loop mov pop jle (bad) testb sbb xor pop dec push xchg (bad) mov sti aas sub in xor dec cmp push mov ljmp or in and pop jle cmp lods pop (bad) xchg xchg xor insl add adc fisubrl test sbb in iret mov out pusha repnz cwtl add loop lahf sub adc mov imulb push mov sub (bad) cmc sub rcr inc nop adc mov stos mov mov sar pop push inc shrl stos orl mov push cmp pop scas mov dec stos push stos xor es mov mov sub cmp fdivrl dec ljmp jbe xchg xchg push xchg aam pushf mov xchg jle repz add add cwtl pop jnp imul sub sti mov les inc push adc std jnp sbb inc fild lahf mov div cltd mov mov or arpl ret mov repz pop mov stos daa rcl cs push push and bt fcmovnu adc pop jmp addl fcoml and scas push adc lds (bad) loopne popa sahf adc adc and call in sbb mov adc in (bad) jg and jnp pop lock pop or sbb adc mov int3 push push mov jnp add jnp mov in call loopne int3 mov push xchg xchg dec mov aas push adcl mov push or push adcl fildll ret inc daa pop push test mov ret push fisttp pop shll lea lcall pop lods xchg push jle lahf rclb add inc inc inc lret sahf lahf inc adc shrl mov xchg js outsb and lods mov inc fbld (bad) repz data16 xorb in jmp aam mov and das add mov push adc ret (bad) jmp fstp jns inc pop push inc je cmp bound and dec loop in xor xor jecxz mov popf leave mov jl ret popf jle testl pushf sahf mov inc popf sub shrl aas jnp and pop or xchg inc popf cwtl mov jno mov jp ss or or cmp ret daa shll ret mov fistl lock aaa popf dec pop mov (bad) mulb stc jbe in jne push fwait mov and mov sahf rclb jnp sbb inc lock lcall sti xor mov sbb mov rclb sbb push xchg push out ds dec out mov xchg lock xchg xlat fwait imul pusha jbe xchg das and add je xchg pop mov sub inc popw movsb and or je jns or jnp pop outsb sbbb mov xchg shrb sbb mov scas std pop cmp mov scas pop jle roll popf inc lea xor arpl fildl aaa std inc rcrb jnp ret fildl or fs mov leave or mov lock sub cmp xchg pushf rorb (bad) in sub or test jp pop movsl (bad) sbb cld out stos mov scas add pushf dec push pop popf or xor into or push imul rorl or mov ss adc flds jle call lock mov cmp sbb cmp jge sbb push mov sahf decb lea jnp pop inc mov sub add mov dec fwait mov inc mov pop cmp jo repz cwtl mov mov fmuls mov add pop add or mov lret lea subl fwait popa movsl daa loopne dec mov jnp (bad) mov lods adc adc push jl sub push rolb xchg arpl std adc (bad) lock aam and pop lea jnp mov shrb adc inc out xchg mov iret mov (bad) or ret cs roll pop lea inc sub shl lahf subl inc pop lea cwtl jae mov cmp (bad) ret sbb scas jecxz inc dec andl jbe outsl jo ss adcl xor pop lcall shrl insl (bad) jp lods ds (bad) mov add mov negl ret jmp movsb adc lahf cmp dec ret lahf jb add jge push jbe scas loopne and cmpl jmp xor xorl xchg dec cmp or push xor jns sub jge and dec out insl (bad) enter lds or outsb mov fistpl jb cmp cs sub xor push cmp or popa sbb adc test hlt js aam rorb loopne jno jecxz iret cmp lret imul jp inc inc hlt enter iretw mov jnp inc mov movsl sahf adc jmp (bad) loopne cs int fwait cmp cmc xor sub outsl repz fimul pop inc xchg das test les dec add or cld or mov subl aam leave pop mov mov fistpll insl (bad) mov insl shl inc cmp (bad) jle mov (bad) or aas sbb sahf lods jb mov mov xchg jp push push data16 mov sti and adc mov push in pop jo popa jg or adc mov fcoms pushf jg jecxz xchg cli jo mov pop xor lds in push sahf sub cmp adc dec (bad) in cmp pop pushl dec fisttpl out cli divl or inc xor xchg or (bad) (bad) xor jnp sub xlat pop cmp sti lahf mov cs es pop or gs adc lds or dec adc jnp or xor inc std andb xchg add jp jo aas mov mov cmpsl cmp ret pop jle xchg fsubs xchg adc lret push loopne xor xchg pop pop xchg jne add std ficom jecxz add push rcrb xchg jnp xchg imul daa or popf iret push xchg xor mov lods rcrl cmp jnp mov imul loope movsb pop sbb nop fwait and cmc and stos mov rclb ljmp movb nop adc outsl jge aam cmp lret xor push negl jae mov pusha sub mov cwtl push sbb pop add std cwtl cmp push mov lea loope enter test out sbb pushf idivl inc jle nop mov dec insl leave add ret pushw cmpsl jecxz cld add mov ficom mov dec sarl in ret call mov subl lock aas rolb test jbe subl xorb imul xchg dec push shr insb repz daa mov lahf gs xor cmpl daa test pushf jbe loopne xchg sub ret std scas inc jg xchg daa xor cmpsl jg (bad) cmp push aas sbb and dec mov xor add lcall jge jmp sbb cmp sub loop cmp loope in sub pop or rorl pop or (bad) xor mov mov or jg cwtl mov adc sbb inc enter add dec xchg dec popf rclb dec or sub rcr sti add dec cmp (bad) sarl jb (bad) inc xchg sti lods in push inc cmp jb xchg repz mov outsb inc aad jnp subb nop add and sub cld je adc cmp and push std (bad) mov jge or jnp loop lds jo cvttps2pi into pop int push aad push movsb add mov or mov int repnz fisttp inc cmpsb jb jbe cmc dec xchg fs (bad) rcrl shrl in repnz jp adc (bad) mov and and cmpsl std insb call cmc jg les fisubl push mov das pop mov int3 jl sbbb (bad) fdivr movsb and sbb xor rclb push adc sbb test mov push inc xor and xchg add jecxz jb dec in mov lret adc je ret sub ret sbb aas in add movsb adc pop or jne and lds jmp nop add sahf dec inc add sbb sti imul imul xor rcr lea cs jp int3 dec leave sub aas shlb lods or mov cmp cmpsb pop loopne aam inc or mov mov or dec bnd (bad) jno dec mov lahf or fsts aam pop stos mov mov mov sti outsb pop sub cmp jge mov inc scas push dec movsl pop mov cwtl mov (bad) (bad) dec test fwait jb pop jp or adc inc or iret dec add std int jl jo ljmp mov xor and aaa popf pop addr16 sbb dec out xchg rorb add orl shrl add in aaa sahf enter cmp loop imul push shrb aas ds cld cld dec xchg ret sbb sbb mov call or dec pusha jnp sub dec inc in test aad xchg jno sbb jns ja,pn inc push outsb movsl or (bad) out int3 es dec lock jb pop sub mov adc into jmp shlb imul mov ficom clc clc or sub xor pop cmp inc mov dec pop add xchg push jnp ficoml and push inc aaa mov push jge pop or pusha in inc xchg sti mov cld inc xchg push hlt dec outsl movb fbstp sub (bad) sbb insb (bad) lea mov mov jne push mov (bad) psllw ret inc lods out inc test fsubr decl jge cld xchg lods xchg fs adc cmp std push gs je inc pshufw lods outsl mov sti cmp xchg je xlat mov jp hlt xor cmp pop adc cld aas lcall jecxz cmp cltd mov lret mov repz mov push cld (bad) jae outsl inc jae int sbb hlt (bad) mov mov icebp inc adc and add or or or push mov insl arpl and jae add adcl pushl xchg mov ss jns jmp xchg jb adc push mov pop xchg pop adc mov bound fwait sarl push orb cmp orb sbb ret fistpll xor pop adc ss pop pushl pushf dec fild dec add mov push lock jl cmc je ffreep cld adc dec fstps das nop pushf pop lret jp pop xchg pop jne test lock shrl in xchg popl add cmp fwait and rolb mov aaa fwait insb pusha jb jmp xchg jecxz pop mov in popf nop int3 mov (bad) fist call xchg jle sbb jecxz pop outsb (bad) (bad) mov cwtl xchg mov testb jp dec adc or mov mov dec mov in push mov les jecxz xor test add pop mov adc mov pop push mov (bad) fiadd out hlt pop push (bad) mov not ret aas or xchg dec scas or xor sbb jnp rcll add jo int3 adc popf inc inc fwait jns jg outsb add (bad) push push adc ret bound lea and sub pop rolb (bad) es sbb (bad) cmc push fisubrl movsl (bad) in inc lds xchg nop aad sti sub shl sub mov push mov mov loopne sub fldcw xor pop fs es add stos repnz enter lahf jnp popf repz int3 or jle (bad) pop pop adc or mov pop jbe out int jge mov int3 or xlat iret fisttpl inc jecxz int out iret push iret and (bad) hlt dec lods mov std aam ret ljmp lods sarl sub insb sbb cmp paddusb out dec je push cmpsl pop lret mov pop (bad) sbb stos rcrl ret xchg inc mov push mov fildl (bad) sti sub sub movb jnp arpl push and inc repz pop ret lea sti fwait inc sarl test mov dec out or pop and mov (bad) fisttpl test les cmp fcomp pop jo xlat push ss jns add jmp pop mov mov xchg mov jae mov adc jmp mov xorl stos adc sub jle or cmp pop add mov in dec aaa mov (bad) cmp mov jo mov jnp jl sbb ljmp sti pushf or mov push dec ret add mov scas pop adc cmp mov lret sub int3 cmp mov jns jnp divl pop mov lcall pop aaa (bad) outsl xchg repz cmp ret mov arpl popf fldt or pop pop or xchg setae jle mov sbb nop bound mov popf in fidivrl ret repz sti cmc fidivrl insl iret rolb insl (bad) aam orb gs lahf ret or adc mov ds push sbb stos into popa frstor add mov dec in fdivrs pushf dec sbb aam cmpl sub sub mov and int3 cmp pop xchg lret lret or lock jge mul enter and inc data16 enter lea dec pop or mov mov mov and inc push inc push jecxz movb jbe jmp pop flds or sub mov push jns sbb nop xor pop dec jo xchg push nop dec scas jl gs jl in std (bad) dec loope ret cmc imul scas cmp jl push jecxz decb pusha mov gs pusha push xchg sub fdivs jge or pusha jnp lods jno add repz xor ficom add jae hlt push out (bad) mov jae mov stos mov mov mov and ds (bad) in mov or pop leave sub mov dec cmc leave push out sti jnp cmp lahf cmp jl xchg in cmp je push inc inc xor pop ja sbb dec aad xchg add lret or test jo inc xor jnp cmpsl cmp xorl push dec pop jb push arpl push (bad) mov es cltd sub xchg cmp or imul inc cmp clc out add subb imul mov cwtl dec adc stos or in jb adc scas test jmp inc xor (bad) and sub or lods add int add pop pop sub ljmp inc test jbe xchg int mov xor add and fisubl jecxz push sti jp test clc movsb mov xchg sub push cld call sbb sub or push add sti sub test xchg imulb mov sub imul data16 iret (bad) in loopne daa jnp cmpsb pop iret imull mull mov lahf xor movsl and add push clc cld xchg mov or insb dec stos lds sti mov and dec ret xor out dec enter rcll aas std in jo pop jg mov or mov cvtpi2ps adc rolb add in push fdivl add sti mov flds setle or in lahf jnp lods xchg and pop adc pop sti mov lret cmpsb jle mov ror (bad) cltd shlb cmp dec mov pushf jg xor lods pop or lods mov push sti push ds jge xchg sbb jns add ret scas jle movsl js popf lahf jl or cmc jnp mov (bad) (bad) cmp jle ljmp in dec rorb mov push ljmpw push or nop pop push pop lea adc jp or or das or (bad) (bad) cmpsb sub or int mov add pop nopl push imulb mov lock in inc xchg aas jle bound pop push loop xor dec sbb cmp (bad) sarb (bad) lret fwait cmc pusha jmp cmpsl add int mov dec shrl loopne or jp test (bad) movsl mov jl imul or jb loop sub sti leave jecxz inc mov popa and jp sarl nop addr16 fistpl sti or or lret mov lods sbb fcmovnu cmp mov push insl stos xlat setns hlt imul pop ret mov mov call xor adc mov stos mov negl mov sbb sbb mov mov test (bad) sub lods mov jg,pn daa sub sub sub push sub mov mov cmp js cld fistp cs push fwait inc popf nop adc in dec inc sbb cmp mov jno and inc pushf inc enter fiaddl (bad) rcll xchg lret cs les jl mov (bad) lcall push mov stc inc sbb jo inc sbbl dec leave and mov mov mov test jg jne xchg jg mov mov mov mov je xchg dec sti pop and inc lret add lock movlhps sub dec mov inc cmp dec sub lea pop test jne ljmp out sbb xor add movsl xor push or mulb cltd mov ret pop push mov (bad) xor (bad) inc or xor fdivl fsubl cmp sbb xlat cmp je test sbb (bad) inc bound call mov (bad) loopne insl inc (bad) ds fldenv fnsave push ss and ja ljmp je push mov sbb roll dec ret pop adcl popf or in mov nop (bad) mov lods cmpb inc sub adc pop mov outsb fbstp jge or xor adc rcrb (bad) mov daa lahf andb stos mov mov aam and add sbb or jmp std (bad) add inc jne sbbl jmp xchg int jnp cmp cmp jno jb xor add (bad) in add pop inc dec mov lods cmp jge test sbb jbe mov ja arpl in xor movsl (bad) sbb data16 inc inc adc sar cmp insl jb fildll xchg adc pop mov mov jl add std loopne mov xchg cld jp andl aaa push repz lods mov js loopne mov and dec or pop sbb (bad) ss mov sti pop jle,pn std jb sub pop test not jnp sbb mov iret mov mov jb (bad) aaa mov lret jecxz jnp pop das mov out add lret repz sub and js ret and sub push jmp cld push addl iret sti pop stos push mov (bad) ss dec mov sbb outsl mov inc jle inc pop es stos call sbb or (bad) adc aad push hlt and ljmp mov mov dec in call mov add out lret inc xor xchg and cmp sub insl cmpsb scas (bad) testl lods mov push mov mov sti inc pop nop nop push jb pop nop decb test cmp std mov cmc rorl cwtl and add push loope mov fistpl pushf ret ret adc cmpsb insb mov mov rorb imul rcrl in sbbl roll lock sbbl xchg push cltd ret sbb outsl add imul cmp cmp push test roll daa xchg sarl mov imul mov mov dec cmp (bad) xchg cltd jbe lahf stos call xor jb add dec inc daa cli xor pop mov mov xor rcrl movsb imul int add xor (bad) imull mov mov push mov or in sub jb bound xchg and test pop inc mov jle bound pusha xlat hlt or decl jo scas xchg cmpsb insl in enter dec jl push xchg adc insl cld sub push inc ret das add pop out add and push bound xchg repnz (bad) pop pop (bad) les inc test lret sbb mov xor js jg inc jnp out mov mov pusha adc nop rcrb push mov xchg add repnz inc fs pusha (bad) cmp testb scas lret or mov pop pop cli push xchg cmpsb aam jns,pn dec pop push add add push lods gs dec mov inc mov inc sbb mov mov call pusha jbe lock rorb lahf orl inc dec loope andb xor jmp out mov jge sbb std repz push add shlb xchg (bad) mov sti daa test jnp jecxz loope outsb pop imul push xor xchg jbe or push dec inc loope xor and sbb (bad) ret idivb jnp (bad) cmc sahf xchg inc push and popa addl lcall jbe jl mov insl fsubs lea loop add mov jbe (bad) insb xor leave nop or jne in sub and mov negb lea pop sbb (bad) jmp fcoml (bad) js jp mov push (bad) ficom nop movsb cmp add pop (bad) sbb mov les adc jnp sbb jne sti lcall (bad) cmp add xchg and and add shr mov mov mov mov pop xchg and cmp stos ss fldenv mov or adc cmp ss js xlat subl das imul push lcall jne imul inc lds cld leave mov inc add daa mov icebp (bad) jno cmp les pop dec lretw jg xchg test shrl mov lahf pop cltd cld push mov pop (bad) dec sahf mov xchg ret pop fadds cs mov sub ret rorl pop loop mov adc push mov stos mov sti dec adc je push pop das adc lods pop cmp xchg rcll xchg mov fmuls jbe dec iret cmpsb and fistl jle mov jl adc pop mov pop lods nop xchg xchg int lahf inc lods cmpsl ret mov sbb (bad) fisttp and movsl mov cltd cli sub jle and mov cmp je mov ret subb mov inc cmp and sub sbb pop pop or scas int jl jnp inc pushf mov inc add pop adc imul mov clc inc and sub in mov cmpsl mov int dec out cmp mov add in mov sbb clc sbbl sti add xor add inc shrl dec sub or push push loop mov imul rorl add leave fstpt call add cmpsb dec mov das clc (bad) lock or iret mov cmp mov cmpsb mov jl ficomp daa rcr lahf lods lock int xor fs mov pusha pop lret subb fstps push scas enter mov shl pop xchg sbb ret lods cmp push clc cmp jbe jmp fildll fwait mov xor loop icebp mov inc inc ret add or scas int add nop xchg mov int3 mov fwait mov adc imul fmuls push loopne pop std iret add clc in data16 fcoml jmp std sbb dec orl and std or out mov xchg sub pop pop aad hlt fimul (bad) add ss ret (bad) adc rol in int dec (bad) ja cmp jo adc mov (bad) sub decl int3 jnp ret pop xor in sbb and sub add idivl sub mov std mov and and or lods mov ret adc jmp or xor call push jle lcall add (bad) push cmp sti and push lret int lods inc jp ds push outsl xlat (bad) pop mov insl or xchg mov stos ret mov and or pushf xchg clc cld in std call or fldl cmpsb jne shl xchg jns les movsb mov aaa cli cmpsb movsb cli fistp add std pushl sub fildll gs inc sub dec out cld push bnd inc popf test mov das jnp xchg lret jo mov mov ljmp dec hlt rolb xchg sbb jge sub sub pop fmull loop or sarl popf inc inc and mov sub (bad) sub adc push repnz cmpb mov cmpsb mov cs or or mov pusha pop or iret test mov nop xchg pop shrb stos fdivrl dec (bad) and (bad) or iret xor cmpsb mov or movsb cmp mov int mov frstor and rcrb add ret jo or stos mov cwtl sub clc aas cmc lods pusha push mov lds jge sbb jge pop js decb test mov sub jnp adc jge jle xchg sub push push xchg bound mov sub mov sahf decb jg shlb dec cmp outsl inc mov (bad) jg int3 rorb sti pop pusha dec je outsb add icebp js pop daa push mulb sarb sbb or jnp mov push loopne sub aas pop cwtl stc add inc in js daa jb xor pushf outsl cmp or mov sbb sbb nop hlt and (bad) lods inc sbb add jp outsl push jnp out jp mov jg ret and jmp mov (bad) aam sti xor test nop adc cs xchg pop jnp cs das ret dec mov inc add add cwtl and inc push push outsl insb push in xor mov pop scas mov ljmp or arpl sbb mov mov sti and push bound test sarl scas in adc and popf cmp das or mov enter push jg out jg push pop jae enter sub test lret xchg orl cs xlat lahf fwait jecxz cld jo mov adc aad jge mov sti and xchg sahf iret (bad) xor incl jae neg lea sbb popf dec pop inc inc add jae,pn mov dec mov and movsl push popa nop lea es mov sub xchg add shr outsl sub push icebp ret xor sbb aad jbe ss push mov hlt cld push les inc mov (bad) mov sarl iret dec movsb sub in pop mov lahf jl cmp cld fcmovb cmpsl pop cmp (bad) mov ret popf out (bad) xor int3 cmp push inc lock ret jle mov fbld lahf hlt jl jo pop pushf (bad) div pushf insb and (bad) test mov mov (bad) xor sbbl incl add (bad) mov fcmovnbe les add roll (bad) dec lret or (bad) or jnp and rcrb or or insl cmpsb push fdivrl (bad) popf lock in mov sub adc and jle xchg mov mov hlt aas cmp jle popf mov nop mov add faddl cmp dec repnz mov cmp mov pushf jbe lret inc add loop add adc sbb stos mov sub dec loopne xlat call adc adc push xor mov addr16 lock sbb jp gs add vmread jnp inc jge ret pop rol sbb add cld ljmp pusha fdivrl adcl sub cs nop rolb aaa mov (bad) mulb sbb jge xor dec dec mov mov cmp cld sbb xor xchg and cwtl fs xor jns cld xchg cmpsl sub mov and jno pop fsubr frstor scas add fdivrs fbstp or insb inc iret cmp (bad) das cmpsl cmpsl xchg jnp jns,pt out (bad) mov jecxz mov in loope rcll (bad) loop aam xchg loope mov pop jmp lock rclb inc add leave call sarl scas mov nop ds jne adc dec aad repnz sarb and sub cmp in sbb mov xor setae ret add fwait add jecxz loop cmp in jo or repnz dec jmp (bad) xchg jnp hlt sbb jns movsb jle iret xchg xchg pop sbb inc lods cmp inc sub sar imul ret mov mov inc lds aaa sbb je xchg jb pop (bad) cli sub lret or mov and or movsl dec lods cmc pop inc andl and mov jae scas (bad) pushl aad loope jb push call in pop fstl aaa xchg mov out lea push or mov inc (bad) fld in cmpsb or imul pushf pop inc fldenv jae jg or stos push lea test std sbb bound cmpl ret pop jl (bad) mov add stos mov jnp sbb mov pop mov jmp cmp or cmp sbb dec aam dec sbb orl pusha fnop faddl shr cmpsb dec mov mov sti mov lds fucomp dec arpl mov repnz sti mov (bad) fidiv rorb popa pop sahf pushf mov lds xchg and cs loopne out sub lret fdivrl iret (bad) sub jbe ss std mov lret call xor jnp mul sub sbb xchg jmp aad ret mov push or int mov xchg sbb (bad) cs pop xor cmp shll in pop adc icebp lret sbb jns nop jb adc dec in cmp js jae rcrb imul nop jg lcall xchg jge jle lds test mov adc push or (bad) pop sbb lret sbb jl sub (bad) imul jne and orb push js test fbld into data16 sub and adc cmc cmc outsb xchg fcmovb cmp inc ljmp lock sbb jne add and xor or int or sub mov (bad) or scas pusha pushf ss imul cld mov aas ss pushf ja stos stc (bad) fbld imul xor add or outsl add xchg add pop adc dec rcrl or inc scas add lods and cli cmp je fs add jp shrb stc js sbb js insb rcrl jb push out gs idivl cltd fisttpl jnp pusha (bad) data16 jnp and imul mov es add mov mov pop jae mov dec pop jb mov test in lock xchg les inc ds pop add movsl (bad) (bad) sub pop dec gs jmp xor iret shrl inc lock inc inc int3 or xchg mov cli gs dec (bad) cmp xchg cmp arpl mov add out das fwait push aas arpl mov loopne in lahf mov clc xlat loopne cmpsb das sbb (bad) mov pop loopne push in xchg (bad) cwtl mov pop add pop mov aas fwait clc jle jmp xchg in xchg xchg jb pop loopne cmp push std test imul mov jo push int3 in pop subl jmp aam in pop xchg popf sahf mov imul sarl dec sbb pushf (bad) mov int adc dec cmp rcr push jnp (bad) leave fs pop jbe leave shlb scas mov enter push or inc add and ror dec repz mov fidivl aaa loop mov pushf subl xor loope ret (bad) xchg pop aam pop orl xchg mov sub inc push outsl pop (bad) rclb sbb cs les jge lcall stc push jg (bad) (bad) adc in cmp push sub sbb or pushf in xchg mov nop fwait (bad) jmp pop bound insl jmp xor mov mov call push sub xchg inc enter push add jg (bad) sbb adc movsl and jmp fs inc imul push xchg cmp (bad) ret addl (bad) jne ds adc in adc push shll lret jp jmp xchg addl (bad) jg mov lcall inc jne sub mov loope jle fnstcw push or sbb inc cmp xchg push in cmp and lods fwait jecxz pushf add sbb les dec (bad) jmp mov (bad) sti mov sbb (bad) and dec mov jg push xchg push popf mov cwtl adc xor movsl and and add ds inc mov inc sub in cmc jmp adc movsl xlat rcr mov std rcrb movsb (bad) js fs rclb sar and ret aaa sti jnp pop daa fldt mov mov aaa pop mov mov cli push (bad) jo push out pushf ret jle pop rcrb mov test sbb jno scas mov test out xorb add orl push xlat jp and inc dec cmc loopne push repnz dec cs imul out out mov fidiv inc pop mov adc pop rcrl adc xor cltd xchg testb ret inc push and pushf test fcmovb ljmp pop sti mov nop loop (bad) test subb orl push in jbe mov xor mov stos sbbl xchg mov sub (bad) loop rorb or sbb mov add cmp idivb or pusha xor and int add xchg dec js icebp dec fisub rorl cmpsb movlps aas jge test ss jo lcall sub cltd int3 movsl add hlt roll mov lods xor pop or fs and push mov push or bound mov xchg inc popf xchg int3 jnp xor jle mov sbb rcrb int3 jnp or pusha enter scas ljmp jo push popf (bad) cld push in cmp cmpsb mov pushf jle pushf (bad) jle sub jbe notl pop out leave inc sub (bad) jl push sub cli rorl cli das adc (bad) ret dec cmp test or (bad) mov aam xor mov or dec movl mov stos pop cs out (bad) out stos mov pop je (bad) jbe pop cwtl leave mov or jle test push xchg std outsb adc incl (bad) bswap ds int fbld inc lahf call fs add add xchg dec call test ror or pusha cmp push cld mov push mov or jae mov xor pop mov aad sub jne cli push out (bad) adc lods mov push sbb fnstcw (bad) faddl mov jnp dec ret rcrb adc mull pop sub (bad) outsl movsb pop adc jne mov fnstsw int and inc shl loopne ds mov and xlat (bad) lret nop inc dec and das cmc aam sub mov es incl nop std aaa movsb push aas movsl lock xor ror xor fnstsw dec dec or scas mov fnstsw negb repz in mov popa mov mov fwait (bad) lret xchg xor movsb mov and jl movsb lods std mov ljmp popf mov or aas repnz les adc and js dec out push sbb les mov dec cmp fwait (bad) in pop jg add fisub mov xchg popf in in xorb rolb jne lock (bad) out iret jl daa or cmp mov mov dec and scas mov rorb jg test or fwait rcl sbb lods xor mov insl mov jge sub inc mov xchg lahf jnp add lahf lret pop inc cmp mov jge scas jg sub xchg ss ret fwait insl outsl cmp xchg mov por xrelease inc scas pop pushf and mov xchg pop mov cmc cmp cmp mov insb push testl push test imul rcll andl lods or and lea fsts xchg mov cltd push enter jl call jbe cwtl jecxz (bad) mov out sbb cmp mov sbb jnp lret mov shlb mov mov pushf jle pushf pop mov fisubrl pop sub xchg xchg bound cld push mov dec or xor jmp mov jg or or int3 imul add add adc sbb and sub jge dec mov dec fiadd fmull push mov pushf push lret aas cmpl push jp push cmp push mov lret inc push jl leave sbb or ret xor jle movsl xchg cmp or nop outsb std push pop or cmp pop cmpsl inc or lcall sub insb in dec inc loop data16 push xchg test jnp es lret mov in mov pop dec fistp les mov repz cltd fwait inc inc cs outsl xchg and popa test add xor lret fidivr sbb dec sub enter sti pop std pop xchg push mov lret in popf ret stos adc pushf sti mov mov cmp cmc jle pop mov fisttpl add fidivrl xor push mov cmp aas jmp loop,pn or (bad) cmp (bad) std fildl add (bad) lret iret push and fstpt jno adc push std xchg dec mov fcmovnbe and mov (bad) jno or stos jecxz dec fistl and dec aaa inc inc or pop jle sahf jl dec in xchg xchg xor cmpsb lods add and int3 mov mov dec inc adc push push leave mov es pusha mov pushf jl mov hlt addr16 in scas adc jle (bad) mov pushf sti adc xor push lret (bad) lret ret push icebp sti popf push outsl jno sbb mov mov jle jae push dec jl loop dec lds nop repnz stc mov mov jmp mov inc jg xchg loope lods adc push je loop mov sarl lods xor mov sub jp dec jl dec mov push hlt paddusw push add add push pop fild and mov pop imul repz mov or loop push add cmp and in push sarl lds xchg mov or sbb sbb mov mov (bad) inc sbb aam pop push mov push inc loop lods xchg adc cmp adc lods shrl enter lret push sub btc pop and nop jge fwait mov int (bad) push and inc mov arpl or popf add outsl xor pop mov dec das jle add nop pushl jbe (bad) lods inc sbb hlt add pop pop data16 int cmpsb (bad) outsl (bad) push aam dec xchg mov cmc cmpl (bad) orl sahf xor cltd inc clc sbb sub test dec dec cmp mov xor or clc inc ds jo xlat enter jnp decl mov lock inc (bad) fcmovnbe xor repnz dec pop pop cld jb xchg jnp addr16 or mull push cs faddp inc sub int push (bad) jb fcomi ret jnp cwtl lahf and xor or aam sti jo mov push push pop mov sbb outsl dec dec sub and pop or shrb movsl pop fwait sbb (bad) notb sub loope loope or jno jbe data16 data16 ret (bad) xchg and sti idiv mov lcall nop mov repnz xchg out test ret clc hlt xchg (bad) xchg addr16 sub repz pop pushf es add out push cmp jmp push pop cmp xchg mov pop jno xor jbe and daa xchg fisttpl dec jge in pop (bad) jmp test cmp imul push lret addr16 ljmp push inc mov cmp cmc sti (bad) mov insl ljmp popf insb sbb aam pushf adc jp push in jb adc fsubrs and popf push xchg scas mov outsl xchg ret jl mov sarl (bad) cwtl fidivr inc sahf (bad) adc pushl sarb mov mov cmp mov xor adc push lret push dec lds push pushf adc pop adc or add (bad) pop (bad) mov mov test xchg fistp cwtl mov pop enter mov cmp (bad) pushf fwait sbb mov iret cmp das pop outsl jg sbb lret std insl pop pop pop lcall jno outsb pop mov iret ret cwtl mov dec adc dec cmp or add jle mov cmpsl mov pop or sbb lcall pop cmp int3 cmp sahf pop iret jl mov cmpsb lock lea pop jecxz jg fstpt cmp aad jae scas adc leave dec dec nop jle in adc add jecxz dec (bad) lods (bad) arpl out (bad) fdivl sbb les fdivr ret iret sbb dec jp test aas cmp push ds lretw cmp add sbb in sub push xor and daa popa clc loope imul jb xor jb add or pop fstpt adc stos pusha inc add add cmpsl or scas push je push sub test dec and (bad) out popf scas subl mov test cld cmp loopne mov (bad) ds arpl mov cmp in fistp (bad) je loop jnp rorl inc jl mov movsb stos jg aad sub dec cltd xor sti std pushf lahf scas nop fwait in cmp subl call cwtl orb and repz (bad) adc sub sub cmp mov mov das mov sub lock mov into mov adc or test jg sub cld dec stos test outsl mov sbb mov into and mulb pop lods add adc sub popf bound jb jbe movsb in and repnz loopne xor out cs xor mov ds rcrb jle faddp nop clc mov sarl mov add pop ret ret sbb xchg push cmp pop cs (bad) sbb ds pop pop ss jl,pt incb lods fildll (bad) dec jge add je,pt cmp or xlat mov scas push mov or or data16 cwtl in shlb stos jecxz jle sub xchg pushf popf cmp jp cmp add sbb sti ret pop stos pop inc add mov xchg test inc in xchg stc lods dec jle jp outsl xchg mov pop bound jge ret insl xor jl lcall or sbb lods adc lcall sub (bad) jecxz xchg adcb cs les popf insb mov int3 repz cmpsl enter popf cmp or inc sti iret jnp add out cwtl out jmp iret adc into pop jg sbb daa ret push sub fsubrs imul push dec imul (bad) pop dec in adc push xchg mov lahf daa push pop sbb ret cmpsb mov sti dec mov (bad) out lock lods inc mov ja icebp cltd call xchg aad mov mov mov shll hlt mov inc jbe and (bad) test jl fimull sub cmp out jle cld pop cs inc mov sbb xor mov and (bad) adc pusha mov mov push pop pop js pushf cs daa pop mov aas adc xchg adcb (bad) jo xor mov (bad) fnstcw pop push lock std clc xchg pushl faddp out fldcw push push sub add mov lds insl leave repz ds dec mov and test imul adc dec fsub pusha xor jl hlt shrb cmp mov in sete pop pushf jnp sbb fisubrl push lods inc push imul mov (bad) jns add xor lret loope mov stos and rorb xor repnz subl imul sbb cmp jp mov mov jb sahf xchg pop (bad) lea lods and xchg jnp inc shl add mov cld nop adc pop mov sbb ret aam (bad) rcr inc ja mov push dec push stos (bad) fcmovnb adc scas and bnd ds inc xchg mov cmp (bad) pushf rcl xchg xchg jnp xchg sqrtps xchg cmc fisub nop pop inc mov or pop scas cmp aam nop push mov mov clc sti sub pusha cwtl fisubl sti push mov in mov and dec and cmpsb and dec sub mov sahf (bad) jl jne push mov mov cmp outsb sub push aas inc jle inc imul inc movsb sbb jmp cmp cmc pushf pop mov mov mov jb sti popf cwtl mov mov (bad) cmpsb jl int3 (bad) add (bad) push (bad) adc pop xor das mov jle addr16 addr16 sahf mov xor mov test data16 mov aam movups clc cmpb scas pop cmp cli in arpl add push pop cmpsb cmp mov cld xchg cmp or mov jb cli lods bndldx add mov mov pusha mov scas fistpll pop cmp sahf mov jp cltd enter inc cmp inc mov jae dec dec shll cmp inc mov daa (bad) std mov iret mov dec or adc rcrl xchg inc mov and imul hlt mov les pop mov cmp push cmp cmp repnz dec and movsl fistpl dec jp mov or aas inc jo push ret lea sub xor dec lock mov sahf adc push xchg or fistpl lcall mov andl int3 mov add or das push jp mov fistpll dec mov aam sbb and sub sarl dec xchg stos or mov in idivb inc pusha push push rclb and fs dec jl out sahf (bad) ror push sbb lods cmpl enter aaa (bad) (bad) aaa (bad) fdivl lock lods idivl and xlat push cmp cmp nop lock mov cmc mov hlt pop fistpl lods xchg xchg dec sub xchg cmc sub adc sub jnp loopne (bad) ss repz dec ficoml loopne shr jo sub mov mov adc or mov outsb cli insl jbe out daa jmp jne lds stos fild push aad mov negl push inc cmc mov mov mov lea flds test ljmp xchg sbb ljmp jnp repnz pushf ret test add inc (bad) xchg stc jnp pop lcall lds inc mov ds mov stos mov sbb sarb into pop cmp pop scas or jp ljmp sub mov inc loopne inc add xchg outsl push mov aas cmpsl inc lret les push pop pushf clc pop jle mov mov sbb out cmp inc dec cld ret sbb pusha pop mov xor mov cmp jns mov inc sub stos std cmpsl jnp (bad) add ret xchg push jb rolb add dec add cmp or and cli mov lock cs pop and mov jecxz jmp sbb adc fisttpl lret outsb lea repnz mov dec icebp test cmp jbe jg pusha xor push call sbb mov cld or imul sti xor enter sbb mov arpl mov ds nop ss nop add fwait rorb sub das sti jmp pop stos mov and jo fidivrl in nop inc xor fmull jns push cmpsl repz daa or or adc fcmove xor scas pop int and fstpt bound test xor xor mov pushf mov pop mov in jb,pt lods cmp pusha jecxz nop scas lahf mov and add popf nop loope add mov xor and cmpsb mov nop mov (bad) or loopne fdivrl iret hlt push mov mov cwtl repnz sbb int shlb mov cmpl shlb test cltd xor push push jl cli lcall or (bad) sub push mov jg out or test xchg ret inc jle std (bad) lret xor mov mov mov push pop fcmovnb je lahf mov idivb insb dec add sti dec sbb inc cmpsb aad pop add jae lahf lcall or mov jl dec xor rolb mov sti dec pop adc mov insb dec repnz inc pshufw adc inc jg cmpsb sub jle stos push mov xorl sub ficomp cmpsl and push lods cs sbbl inc mov or shll and pusha and pop (bad) sbb rcrl jnp push sbb mov insl ds mov imul cmp clc or sahf fwait int3 mov or pushf sbb pushf in or pushf or dec xchg stos ja int3 sub imul ret int jp jge pop outsl sbb ss sub nop pop xlat mov vpunpcklqdq adc sti cwtl out push pop push in (bad) aas (bad) cwtl lret fidiv fwait lods pop loopne and adcb into push jle jns cmpl mov jnp stos and aas dec popf xor (bad) stos mov sub pushf sub add ret (bad) cs xor xor (bad) sub in cmp sbb loopne scas clc nop out movsl cs aad or lock inc jecxz popf loope push mov rolb mov cmpsb and xchg dec lret jo std data16 scas popf aam push and rcrb scas loop movsb loop fist mov mov xchg pop pusha aad (bad) or aam sahf and stos adc lods mov dec xor movsb ss fdivr and jmp loop mov mov sub mov xor push mov out cmp and aas iret pop mov fnop aaa lds jne mov dec mov lea scas int mov aam pushf loopne jmp add jg cmp inc jge nop xchg jg pop xchg sbb insb add and stos notl outsl sarl lret mov in jnp mov popf cmp jl add out push pop and and pop sbb mul cmpsb mov (bad) stos daa das push sbb (bad) adc (bad) pop test lods popl aas popw cmpsb in cld cmp or add push out mov and cmp xchg push notb movsl push js sbb pop cmpsb mov xchg mov mov loop jae pop add imul mov cmp mov adc push scas hlt fwait xchg xor psrld fbstp adc push (bad) out inc adc rolb add push iret cmp inc push add (bad) push adc fmull cmp or add cmp jge jmp dec stc sti (bad) scas cmc and jno sub xchg xchg mov das scas (bad) in mov out notl gs nop into cmp cltd xchg sahf mov std xchg add jnp fs sub sub cmp or sbb adc imul (bad) dec lock cs mov addr16 (bad) jae rcll test adc jl mov repz jmp cmp jg xor addb sbb adc cmpsl xchg or nop inc xor mov or ja lret pop pop pop jbe iret or cmc sbb insb les inc cmp mov sbb fnstenv mov ret push mov hlt pop fistl and das mov or mov aas cmp lds xchg lea mov sub lds mov add aam or mov cmp xchg imul (bad) outsl cmp inc sbb or scas mov repnz jbe ret pop outsb and bound movsb cli ret ds jg mov xchg add jns out (bad) stos cmp cs loopne popf popf aad aam xchg jnp mov stos fsubs shll (bad) dec lods and and add sarb addr16 fstpt sarl or and or jle jecxz jnp jns inc jl pop dec mov mov fwait rcrb sbb loop lretw std sarb sbb lret or test nop xor rorb xchg ret cmpl adc stos das push pop and jo xchg das fmuls or aam in push fcoms mov pusha stos mov push int rolb sub mov ds loopne bound imul jnp fnstsw adc (bad) mov jb fdivs pop insb rcr cmp cmc xlat (bad) pop dec xor mov andl jnp jl dec rcll sub sbb jg ficoml cmp ficompl sahf nop insl jl mov xor data16 out jb pop add pop mov aaa rclb push jp jp clc jno mov nop or es imul and scas cmp or xchg arpl mov inc aam icebp pop in dec add jo cltd insl clc xor les adc pop push fsubrl fcoml dec sar sbb iret cli sahf cltd push scas jns sub jle cld sarl mov sbb loope jo mov mov adc jp insl (bad) cmp dec dec arpl jne lahf adc dec mov adc dec mov add test cltd mov or push ret adc nop jecxz and andl popf or sbb ss jp inc inc dec add out dec xchg cld movsl mov mov xchg pop ret (bad) les lea test lods (bad) je jl or rol scas pop ret pop xchg or mov jmp (bad) jle mov mov (bad) out or aaa (bad) hlt adc adc shlb mov lock jne adcl movsl imul pushf out ds in sub std (bad) jge fidivrl inc pop shrb add mov cmpsl lcall ret rorl mov jge mov lret mov sub imul aas dec pop scas test add dec mov lds push sub pop mov dec repz dec test adc (bad) cs pop pop inc test xorl pop bound imul clc xchg jl xchg xchg push pop idivl orb pop adc mov and ret jmp adc mov nop dec (bad) push movsl sbb cli out sarl into adc mov sahf (bad) (bad) cld and cmp repnz mov cmc test adc mov xor push sahf das xchg mov cmp rorb stos (bad) lea ds pop ffreep xchg inc xor pushf sti ss iret cld es pop jecxz aam cmp lea inc stos fildl mov stos push pop add scas or sub mov inc push sub mov jle add popl (bad) and jnp jo std divb and lock roll call mov ret lds lahf fcompl insl gs mov lcall inc pop (bad) notl out int jg je cld test mov mov lret sub dec cvtdq2ps mov sbb data16 jnp push push (bad) and xlat repz repz and fwait aam stos insl cmpsb lea scas ljmp mov test jae fistl rorb sbb inc mov jl jl arpl lret lahf enter dec in test stc pop cmpsl or or lods cmpsl jge popf lds movsl js dec jge or mov hlt ljmp lock inc xchg cmp push jb mov inc sbb in add ljmp mov sti scas lods std iret dec fwait into lock lret push inc addr16 or and and jnp lret add in jo cmp push jmp outsb cmp mov adc push or sahf jb push jl (bad) jmp sbb sahf loope loope xchg (bad) das scas mov jl sbb mov push jl shrl add dec adc sub outsl xor mov xchg push cmp and lock std jb loop mov popl mov or or pop dec arpl jno int3 add mov cmp rolb int3 sub sbb push dec lea loope icebp mov dec cmpsl js idiv fidivrl outsl jmp leave mov cwtl outsb rorb sub cmpsl clc or test mov fistpll pusha imul xchg add sub or mov cmp mov jbe lcall enter mov aaa outsl pop pop bnd sbb mov xchg shl leave arpl mov mov lret mov ret jmp fisttpll adc inc in loop inc and test mov das out jle (bad) icebp and pop js xchg and lds sbb and xchg jp xchg jg out add dec sbb sbb (bad) loopne push dec lahf pusha jecxz sahf js xlat (bad) mov jae xchg or ret hlt outsl cmp ss jb jae fbstp pop push mov add popf and insb xchg adc add fwait mov mov lret add imul adc inc (bad) stos xor add cmpsl fsubr push (bad) xor or adcl pop add nop gs or movsb pop loopne cmpsb das mov ret scas jle ja leave je das jno pop xchg ds daa jle sar out sbb ret sub popa leave loop repz xchg into cmp incl cmp cmp adc mov test clc in push push cmpsb xor aam jle mov sub jle add rcrb cmp (bad) fs jmp movsl pop aaa mov lahf sbb stc pop xor in sbb mov mov jno fcomps popf fwait shrb dec movl add fmull pop nop pop ljmp cmp (bad) push test lea sbb aad hlt adc fisttpl xchg shl xchg mov loope in dec inc ja lret push and xor add pop adc seta jne inc add orl movsl jge call pop dec mov inc fcmove add cmp xchg inc xor push cmp movsb pop mov mov or push ljmp cs mov cwtl loopne inc inc sub mov (bad) loopne adc pushf xor notl int3 mov xorb mov or or or cmp and push dec leave stc mov in and enter jl aaa (bad) scas push (bad) pop pop fsubr fldenv (bad) mov sti bound ret popf sub push fisttpl push xor (bad) ja sbb mov mov movsl das pushfw (bad) add push js mov dec mov mov jnp sub add cmp mov rcr xchg inc and sub add cmpsl in or in mov in call test xchg mov test mov mov pop fistpll push sbb cmc scas roll iret lds popa mull jmp jbe (bad) ret dec subl ret inc or jle xchg adc pushf leave popf mov cld outsl adc xchg or popf adc jnp rorl mov mov adc jnp mov iretw sbb push xchg dec (bad) outsl mov inc mov outsl scas sbb fs pop cs outsl jecxz push dec mov mov in outsl push ret fs cmpsl xlat push push or sbb dec or mov fldl push mov lock stos dec or pop repnz mov xor loop imul lea push andl outsb mov je mov xor mov and ja jmp fisttp jmp outsl add mov mov pop cmpsb sub xchg das jnp pop in stos xchg nop (bad) dec dec cmpsl movsl (bad) repnz stos ja int repnz sbb jno push imul push pop arpl cmp loope jle push lods or das scas mov (bad) xlat cmpsl jbe pop out jge mov adc jnp pop mov sub sub or les sar pushf sbb (bad) or fwait inc and mov push jb roll (bad) lods and fs imul cwtl xchg xchg fsts cs (bad) test lea data16 in mov (bad) aas jnp lea inc sub pop cmpsb test test add mov sbb inc pushf jle adc lret ret aaa adc (bad) fistpl or bnd mov pop or pop push in adc cmpsb xor pop and dec pop and es pop jmp ficom (bad) jle mov imul add leave pop adc jae mov test test xchg pushf push mov cli xor cmp lea sahf pop jge,pn mull dec or pop inc lods int3 dec or sbb sbb aam fdivr mov lea iret stc jl cs out xorl cld sbb sbb fidiv mov mov dec loop movsb (bad) xchg cmp adc das adc hlt dec push sbb or in cwtl pop and in and xchg popf mov sub imul aaa mov dec or inc std in jb pop push popf nop aam xchg (bad) cmp xchg mov lods outsl sub lds cmp or rcrl gs pop int dec or xor jle rorb sahf test jle push jl cld mov sbb sub enter or push mov sarb loope xchg loopne sbb inc push loope ror mov add pop ret jp fsubr jl fdivrp jno (bad) xor jg xor or daa adc pop and push add xchg mov testb mov mov inc imul fiaddl inc (bad) cmp mov dec fwait fs imul mov ja outsl cmpsl cmp mov and and xchg ds sbb cli leave jbe xchg aam cmpsl dec ret dec fwait jl sahf xchg ljmp jo jnp rcrb test xchg dec ret push ss mov adc lcall das cmp lods cmp mov or adc enter push test (bad) jne mov sub pop xor and or or scas sbb jge mov jle (bad) pop and cltd mov (bad) fisubrl cld sahf or loopne and push mov jge orb in cmpb and cmpsl pop (bad) in mov (bad) ljmp cwtl xor adc pop inc sub stos mov int jge mov mov jmp pop iret cmpsb inc sahf cld stos mov mov mov push cmp cmp cmp dec or jo fcoml lods pop and pop outsl sbb cltd lea sub jbe jp pop push and outsb lock (bad) mov hlt loopne rcrb loop jo es dec fisubl mov (bad) adc mov adc push orb ret adc sub test pop bound pusha xlat test adc scas sub lret mov jl das pushf popf mov shrb or int3 int3 fimul sub ljmp (bad) xchg dec and pop sbb mov out rolb stos inc aas insb pop ret mov add ret xor fs pushf lock out int push out push sbb pop cs adc sbb dec mov push aad mov jp in lock add jge shrb push pop ret cmp addl jl jnp cs or jb cltd jo xchg push in add sbb insl scas mov (bad) in and sub das iret adc sbb std dec je jno pop sub push movsb das mov lret repnz pop cmp fcomip cltd xor jb mov rolb inc dec jnp add es arpl into jnp test sahf popl mov adc inc loope dec pop fistl and mov pop cmp inc xor mov or sbb jnp dec (bad) xchg inc or xchg dec (bad) das jp loopne std jg stc pop add mov fistp repz (bad) pop jne jae or (bad) stc rolb dec cld (bad) mov scas pusha pop sbb pop cwtl push (bad) and insb mov shr pop rcrl pusha add into pop and (bad) sarb das push cmp fdiv enter lcall (bad) aam mov lods or fmull mov and mov rcr add int fidivr or fwait push stos push dec jno mov and jo jmp sub fistl iret sarl pop xlat ret adc div ljmp int xchg xor push aaa je xchg cmp xchg cmp int mov notb pop add push je loop mov ljmp testl pop dec push sub push mov movsb les dec adc push loopne imul xor lret or dec sbb jb jb cmp inc cmp out mov jle lock enter rcrl push ss xchg sarl pop lods mov jno shlb jl jno mov rcl pop lods cmc jg or jl xor insl sbb nop or lods pop sub adc aam fsubrl cli addr16 imull sub or push fistp pop lds pusha std cwtl or out mov cmp divb (bad) fiaddl mov js jmp mov ds mov out jle (bad) sub sti aas fistpll rcrb xchg cmp or getsec enter sti cwtl and mov imul adc fiaddl (bad) fsubl movsb rcrl das movsl (bad) mov jp stos fucom xchg push sahf jmp insl lods lea mov fiadd dec test adc push fisttpll xor sbb movsb popa pop (bad) xor sub ljmp arpl sti pop loopne push sub jle negb push clc in push xlat (bad) mov jge mov add icebp jle cmp push or iret or xlat pop cmp lods add pop push xor or fwait out ljmp sub orl fwait pop sub cld into or mov imul (bad) mov xchg lret hlt push sahf rcrb push adc pop jnp or (bad) std push pop pushf fisttpl jp (bad) mov pushf push (bad) jp icebp inc mov push pop addr16 mov sub xchg jne rcrb (bad) mov pop or test test adc or pushf push leave ss mov dec cmp (bad) jle fistpll jno add add popa adc cs out mov sub cmp shrb pop mov sub or mov sbb int ret sbb aad sbb in int mov jnp fwait ret lea jle rcrb ret dec stos mov fwait xor add mov hlt into jl inc cmp out or stos aam mov adc mov or xchg popa movlps repnz or xchg aas mov inc movsb pusha add (bad) cmp lea add inc fisubl aas push shrb test js in inc mov ljmp (bad) add pop cmpsl mov int lret popa lock cmp push std xchg cmp inc mov test xor sti xor mov mov std in xchg imul mov inc lock mov leave fsubs jecxz sbb mov inc mov or xchg adc mov push cmpsb jle pusha adc pusha sbbl lods rcl je fldl pop cmp xchg pop test int3 or (bad) lods xor (bad) fcmove out pop (bad) decl jnp call mov sub mov mulb (bad) adc stos sub lahf pop subb insb mov aaa and es jo and and mov mov int3 loop xchg js imul pop frndint leave aam andl sarb push push xchg js xchg cmp mov insl pop lahf pushf jle xor (bad) xor ret pop lds in cld jo jno mov inc fdivrs adc std xor ret call pushf fidivrl fistpl call fsubs jnp fidiv mov mov mov inc jg mov pop mov inc adc aad add (bad) jb dec (bad) mov cld sub bound push mov jnp pop lret dec or mov xor pop lret cmovg fwait push call lock and and daa stos add pop adc lahf (bad) iret js jbe (bad) jo mov (bad) mov or lods inc push lea call mov test dec ljmp js cmp push add mov popf sbb aam jl bound push pop mov sti aaa fdivrl mov pop pop hlt cmpsl int sbb mov cld ds adc fstpt cltd mov insb ljmp pop cmp out imul stc xchg imul jmp mov jl,pt ret dec out or pop in and mov rolb adc mov imull mov shrl push pop (bad) and aam xor add popa add mov outsb adc in jno test mov mov xor movsl jno cmp and or bound pop mov mov inc jecxz mov ret jmp (bad) (bad) lahf (bad) bound lret push sahf dec and aad and cld and imul mov add call mov add arpl shrb mull arpl in mov sub movsl jmp jle sub lret arpl sub movsb mov (bad) pop sub cmp jnp (bad) mov adc or or pop sarb dec fidivrl sbb stos mov push fldt pusha insb sub imul xor xlat setg lock loop sbb jne fnstcw jg ja and push lods call cmpsb jg,pn (bad) aaa xor inc lods mov sbb add sub jbe ss jo add jl mov mov cwtl dec sbb jl cltd cltd and aad ret sti jl (bad) data16 aad push add data16 jmp mov adc jg js decl or pop fisubrl jmp xor (bad) hlt rcr mov daa dec xor xchg rclb rcll pop outsb mov push scas insl mov jl jle imul jae sbb adc inc xchg iret call mov add imul jne out sbb fnstenv das movsl icebp mov inc dec std push xchg xchg cmp sbb cmp sbb or or pop jmp and ja mov shrb sbb pop inc les dec ret lods int jge mov adc imul in push push sahf mov pushf cli pop cwtl pop stos inc mov stos lea dec ljmp in repnz and sub ja out or popa and int cmp push or or jge xor or loope inc (bad) jmp cld sbb add or sbbb rcr jne lods imul jecxz rolb dec lcall adc std int mov test imul sub nop mov sbb push fbstp lcall sbb (bad) pushf push lret mov mov fisub test mov or jg test sbb pop dec xor imul imul adc test leave je inc xchg push sahf ret pop mov loop stos cwtl sbb push out or sbb push fbld lds inc mov gs (bad) inc je jg xchg jp push stos jae mov dec add les or add dec pop lds rcl mov fcompl jp jbe mov mov mov mov xchg out push cmp mov sub pop add pop cmp ja pop sub jg pop sub push dec adc mov aas mov rcrb das xor and lcall outsl pop mov bound loope jg,pt push xor pop add sub xchg or push mov test xor mov adc stos jg xchg jg lea xchg mov int3 dec xchg das mov (bad) jp int dec push int fnstsw inc pop iret imul add lahf ss jle inc adc daa js sbb xchg jl out mov and nop fsubrl in mov jo insl inc jmp pushf cs pop shlb ror cmpb cld cli cmp sbb movsb inc add and mov fisttpll lods pop test xor (bad) cmp fdivr or lods push pop mov sbbb push andl aad and mov scas jmp loop mov inc sti mov push inc dec das push push insl mov aad jle lret fstl scas (bad) mov shrl cmp fnstsw xchg or or (bad) test add mov mov pushf aam lret pop leave mov dec rcrb push lods mov andl and mov and int3 cld cmp nop aam cli push or dec cmp lock lods jle add xchg jle jo jnp stos pop lods xlat push or adc fsubrs cmp rcr lock je mov jl idiv xchg or and mov or cld ret into lods xchg dec fildll icebp cmpsl stc jnp jb jecxz mov jo fcomp mov mov aas mov mov imul mov fmul (bad) push aad fisttpl jno xor lea mov sub push mov imul sbbl and dec rol inc imul jl mov sbb out jnp lahf sti fisttpl xchg cmc clc xor fimull mov inc rcll add mov lret aas pop fmuls ret incl mov inc int push fs and test jg xchg lcall arpl push pop mov popl dec insb cmp pop pop popf dec inc cmp in pop or outsl mov mov enter (bad) jge xchg (bad) cmp mov leave jo cmp data16 inc cmc adc pop add cli daa fs (bad) out sub es aad add je xor inc pushf shrb jp push or xor in sahf add or jo lea dec and fwait ja in and nop icebp cmpl mov mov lea cmp sbb add dec sti sbb jne jge mov in xchg push daa push call pusha mov add dec pop test mov cmp lds loope sub push fistpll and test fistpl ret jbe (bad) pop shlb jge mov cmc (bad) sbb out xchg call (bad) fcoms mov sub jecxz mov inc inc mov or jg mov fcomps push add xor pop mov mov lret jl fisttpl fwait jecxz int3 ds mov lea (bad) lock lods lods loopne stos inc repnz mov xchg cltd xor pop xor test adcl repnz fistpll pop std aad repnz rcr push add pop inc mov mov in mov or mov outsl and lahf push ja scas mov (bad) adc lret test iret cmpsl jne add inc add inc lret aas (bad) mov add ret clc mov lea sub outsl repnz cmp mov (bad) ret and (bad) popa push call push xchg push aaa stos sbb in push or fwait pop xor outsb loope sti insb mov movsl lods ret pop xchg or rcl mull mov mov pushf scas and clc push shll adc (bad) xlat sbb or cmp das movsl push ffreep pop add sbb add popa or hlt lahf push add pushf popf out in adc add cmc pop jnp or les xchg test sub fldl push hlt inc and fwait pop mov add shlb sbb cmpb (bad) cmp or inc mov call (bad) aaa imul sbb sbb shlb xchg subl ret mov dec out mov mov xlat adc (bad) es cmpl mov fdivr jb inc imul rorl pop cmp cld push push pop mov or lock repz mov mov out bound pop push jno (bad) out stos adc mov cmp mov xor testb lock sub jecxz cmp (bad) bound mov sbb push mov pusha add stos lods jo cmp aaa int3 cmp or lock aas ret mov pop add bound mov lods cs xchg jecxz inc outsb add decb mov pop icebp xchg lcall add adcl (bad) push rorb in outsl push (bad) fsubl subb sbb or (bad) fucomip ljmp mov xor repnz mov loopne mov add lret sbb sahf ds sub mov sub and inc lods enter ret ds nop push sbb stos mov scas jne cld xor daa cmp add inc or sbb aam inc add mov loop pop xchg insb pop bound hlt push dec pop pop xor (bad) lret out stos sbb or clc xchg pop (bad) jae (bad) and rolb jo adc and pop lahf out or ljmp call fwait sbb jp dec or xorl rclb jg cmpsl mov (bad) bound imul pop pop (bad) adc sub stos pop popa neg mov int3 inc (bad) push jb lock aas loope (bad) push inc sbb xchg (bad) xor stos xchg imul and xchg bound jns enter adc mov cmpb dec xchg (bad) (bad) leave (bad) push in and or jge (bad) or stc icebp mov jl xchg subl adc mov (bad) sahf and push lret (bad) out mov fwait adc add jp mull (bad) cmpsl lods mov or (bad) and jge out mov xlat mov inc popa xchg movsb aas mov adc jle sub push jge aaa (bad) (bad) je inc ret sarb push arpl mov (bad) hlt mov xchg rolb fadd mov or popa pushf test sbb (bad) outsl test loopne mov pushf jge mov sarb hlt repnz iret into insl adc rclb dec sti fistpll mov mov sub inc mov (bad) adc lret repnz add and test pop loope hlt (bad) cltd sarb movsl sbb into test pushf mov push xor sbb mov jg cltd xchg xor jp inc stos push jbe adc jns jge iret xor push popf mov out mov cmpsl aad (bad) outsl mov addl (bad) out aad pop mov sbb test push mov push push or fdivrp sub adc ja shl aad dec push mov jp cli push xchg push pop adc mov or js fimull dec xchg (bad) lea mov mov test add adc xor push jbe aaa push test lock xor sbb roll fnsave pop ret fmuls int3 cmpb lret aas pop pop jg imul inc mov mov and (bad) sub insb inc push and jp pushf aaa mov sub pop (bad) mov pop or mov jle loop movsl test gs je and out mov mov in jno pushf jnp and xlat mov dec popf fsubr cmp push push adcl fisubr js add std pushf jo xchg jnp mov and int js adc loopne pop ret jnp ret xchg or out pop push lea das mov std je push sti cmp fstpt push sarl mov loop insl sti jb pushf and cmp and mov fwait movsl jnp jl aaa add pshufw dec sarb fldcw out push ret fistpll das xchg ja mov pop cmpsl hlt fbstp jmp pop lock test adc call call inc sub jle das sarb lods scas sub fsubl popf push or sahf sub ret outsb sub decl sub lods stos (bad) (bad) dec js mov or addr16 pop lea xor cmp std lea fnstsw hlt push sahf xor adc pop (bad) cld add add jne jg mov sbb jae mov inc xor or sbb push cmp add hlt lods inc pushf jg xor sub jl cmp test sub pushf (bad) enter dec incl pop sti je xor (bad) inc and and lds repz dec dec and aas mov sahf sub jb js leave xchg fimul pop lahf pop jno xlat stos sub sahf (bad) lret jg sub mov mov fdivrs jae xchg movsl cmp jmp push inc cmp std nop nop cmp stos popa mov pop mov mov push ljmp push or cmp movsb les pop rcrb popf ds fdivs or and adc add cs out adcb add loope loopne cld fsubrl or (bad) jbe aam inc xadd sbb in inc pop nop push cmpsb jmp or inc sub mov mov aas mov cs ficompl cld cmpsl vmwrite mov imul scas sarl sub xchg rcrl xor add aas mov or push (bad) mov (bad) outsl mov mov mov or lock imul jns sbb (bad) and sti jg mov jnp iret xchg das xchg std (bad) out fs pop jbe out imul xchg cmp es (bad) repnz rolb loopne stos push mov or iret sti sar push xchg cmp in cwtl jo xlat xor push xlat bnd insb push movsl gs mov push bound pop mov jle pop leave sub dec fs into push and lcall mov cmpsl pop insb xchg jnp lods xor mov mov fsubrl pop sbbl jo push bound dec ja mov and sbb (bad) jae mov cltd ror insb sarl nop lret mov jnp test cli or sbb aas dec jp loope mov mov enter (bad) hlt jb loopne,pn jl xchg stos rorb das popf pop adc push xchg mov pop outsl jo inc mull lods hlt out ret mov fwait cmp push lods push nop jp cmpsl mov sti push imul lahf movsl cld mov (bad) outsl or sub pop sarb repnz pop cmp dec dec add adc pop dec adc mov jle lods movb inc je lea sub push sbb das pop lahf aam int3 rcl lods pusha inc hlt jbe lock loopne push add insb inc or sub sarl aas test inc cmp mov in faddl shlb call (bad) fstpl aas cld or cltd stc dec mov xor mov and jecxz xchg adc mov (bad) push dec aad cmp inc out mov jnp push fnop cli push add sub pop sahf pandn cmpsb mov inc adc mov fwait ret dec lret cmp mov testb mov and pushf or push dec mov popa js mov and std or mov mov push rclb bound lea xchg mov repz mov dec ds sbb std int3 mov mov (bad) pop sbb pop stos jae sub imul mov roll inc sub loop push and or bound mov (bad) stos out xchg ds std out jnp mov rcrl adc shlb mov inc pop jl dec and mov mov pop mov (bad) mov test aam pop cmp test pop call test loope mov adc repz jl add inc and lea leave sbb cltd jbe jo cmp mov jnp mov inc add mov dec push lret push int dec cwtd nop cltd pop movsb sub lods outsb (bad) insl sti push aad outsl adc ror ds loop enter fiaddl loope xchg and fwait jmp decl mov sub mov insl loop push mov shr lock cs inc cmp or clc pushf movsb pop stos hlt fnstenv insl sbb insb cmpsb fidiv or xor shrb dec cmp mov je ret fnstcw es cmpsl sbb movd push push xchg inc imul lds xor xchg daa iret mov xor sub scas jge das stos mov fildl inc jbe mov std cs shlb mov cmc xor jl and mov fldt mov cmp out xlat insb icebp cmp cmp push mov ja mov ret mov jl rcll dec (bad) repnz std cmpsb pusha or sub sbb xchg dec es loopne cmpl xor and repnz rcl and icebp loopne outsb mov cwtl lods repnz iret lods mov inc xor dec pop lea and mov (bad) int3 aad aam or call jp jbe xchg or pop mov xchg hlt cmc pop inc jge xchg dec movsb lock stos repnz adc xchg jp cmpsb in adc ljmp xchg pop jnp ffreep iret cmp pop cmp repnz push dec add jae daa lods lea cmp mov popf iret int3 mov rclb inc in mov or mov stos das std mov sbb or cmp and test xchg jbe sub sbb test push pop jnp sbb insl stos xchg cmp clc sub cmp stos jl orl sti mov cmpsb push cmp rcl push (bad) adc call cmp rcll pushf mov cmc rorl jle jnp loopne push icebp and or lods orl stos and loope int adc jbe xor mov jno pop int3 aam aam cmpsb icebp fmul sti xchg jne stos stos pop idivl clc mov lods cmc clc adc lock xor fisttpl push jmp mov fldt insl movsl cmp pop fisubrl std xchg xor pop cs ljmp adc ja xor dec inc or rcrb jmp nop dec sub and mov mov mov scas inc sahf stos fistpl nop jnp lahf jg or push mov sbb jo rcrl and aas inc hlt dec push aad test sub sti xchg test dec adc xor cld push xor ds mov jl cmp mov incl cmp or dec fstps testb dec or xchg push (bad) sti iret fcomip lock mov lods xchg add mov xorl aad movsb xor movsl out aaa fdivrl loop and shl inc dec push ret dec jbe stos sub lods push or stos imul enter cltd or sbb sbb push sbb or dec stos inc lret out xlat jecxz ja fs or daa pop jb pop or mov or stos push lret xchg lea imul pusha xchg aad cld xchg lods (bad) mull xor int lds lcall jb test pop push std or xchg xchg mov repnz xchg icebp ffreep lock hlt mov pop stc inc lock aad mov mov leave popa push mov sub xor mov mov sbb mov aaa out add adcl sub xchg adc xor aam pop in cmp xlat in xlat test int3 in pop or jle jg xor sarl in jbe ljmp mov mov inc push dec mov cli mov cmc (bad) jl insl sarl rolb (bad) sub mov jle in or push mov pop cmp mov and or mov fcom lods repnz xchg mov mov into pop lret ds ret push js sbb jge rcr push sbb cmpsl jl (bad) jmp lock stos in sbbb or mov into (bad) pop pop inc and xor bound pop (bad) jle das push adc xchg pop cmp out int cmp ds fidivrl mov mov mov mov (bad) sbb push mov add leave in cmp sub cmp aam pop push add jnp inc fiadd in scas ret out push jnp sub rcll mov incb out add push or xchg hlt cmpsb loop push mov (bad) repnz arpl jnp xor es mov test frstor data16 mov dec es ds mov into inc dec adc adc ja,pt jns dec fdivrl addr16 mov mov movsl mov outsb jnp sub lcall pushf or push push dec js outsl loope nop adc jne lea (bad) mov jno cmp orl lock (bad) loopne adc das (bad) in nop jg mov ret shll mov sbbb and or jnp or movsl outsl jmp stos outsb mov jnp dec sbb dec pop pop and pushf insb or pop push add lret sbb mov pop sahf sbb mov mov int cmp pop xor pop in ss jb xor xor mov sbb adc dec and or mov mov mov mov xor push pop sub shl push mov in aam or fwait push lods mov adc fmull int3 fcmovnb ret scas imul cmp mov push movsl mov jle sbbl mov inc sahf or int test push je inc push push add jne push out or push ljmp aam stos ret sbb scas or sbb cmp inc dec roll ret stc add jnp sub sqrtps and adc enter rclb int adc add pusha sbb ror push cs rclb fisub jl lods (bad) mov mov popa fdivs lods push pxor mov dec cmp push mov pushf mov insb or std lods shrl jmp loope cwtl cmp adc dec adc stos or nop (bad) cld add jge jg inc and adc cli jno add test hlt or cli icebp mov cmp in inc inc pusha shll sahf test repnz jg xchg or xor leave test xor (bad) jbe and or sbb mov jb mov insl frstor adc lret pop lock fs cmp je lahf cmp mov mov pop imul xchg xlat ret mov arpl cmp jnp mov xlat scas cld mov sbb fdivr xchg idivb adc fidivrl pop (bad) loop add popa xlat fwait lret mov pushf mov cs xlat sti dec pop (bad) popa pop mov punpcklwd sti pop jns scas sub mov xor push mov lahf pushf sub push imul neg dec cmc (bad) out mov loopne ss ret pop cli jl xchg pop sub in dec cmc mov jo xchg mov mov add fwait lahf outsb mov cwtl add cwtl loopne js sbb movl in pop adc shll insl imul or aas adc xorl xor popf mov mov add lret (bad) out ffreep (bad) add imul arpl lods add imul push mov push cmp fisttpll add sti fwait aad xchg mov push mov xchg shll sbb call xor cmp jbe and sub or dec or xor mov jp or inc adcl ret pop ss ds rcll insb mov push add mov aas into fcoml fnstcw in xlat (bad) std jae fild popf imul push and sbb push xchg ds xchg cmp sbb add repnz sti outsb fistpl stos dec lods ret jno sbb dec jmp sbb jnp subl jnp ret xor sar cmp leave and aad fcoms in xchg pop fsubrl adc pop mov int push iret nop mov lcall push mov add pop lcall inc adc xchg mov addr16 sti pop dec bound pop sbb add fdivrs pusha mov mov jbe adc fiadd int and (bad) sbbb movsl mov mov clc push aaa scas sbb add and jmp mov add repnz adc jp or rolb mov pop sbb jp push sbb outsl (bad) jl xchg cltd mov popa stos (bad) mov cmp sbb adc xchg jl (bad) push out mov or sub and pop lea cmp dec sbb test cmp add loop cmpsl or push dec lock daa xor roll out inc xor (bad) lock fcmovnbe sbb jb cmpl leave add jmp jg mov xor and (bad) aad loop adc jecxz push repz dec jecxz jge jnp push jb jnp jg jl nop cltd mov out dec mov pushf mov cmpsl jecxz lahf mov subl xchg repz xor jle cmp push scas fsubl cmp shrl daa call or sub stos xor dec sub jmp lds xor ljmp sahf and add aaa pop pop sti shrb cmp stos mov mov pusha lock jne inc jno inc or or mov lea subl cmpsb or out cmp or push out stc dec or mov in xchg in mov daa mov pop scas pop leave or ret lods imul mov pop lods push sti aas fdivrl lea pop cmp test jbe ss stos test jg jbe mov loopne add les inc jbe push nop or test in into add orb fwait push jg adc pop arpl cmpsl dec movsb outsb or add cmpl ret movsl xchg (bad) out lods adc xorl xchg (bad) sub mov jg sahf loopne cmp jge neg lret mov cmc mov inc mov leave dec and jge add std mov push pop push xor mov and push inc xchg aas icebp mov outsl mov mov mov cmpsb cmpsb bound insl je,pt lret xlat sub push imul push adc jl jle popa xor mov subl sub mov dec aam inc int cltd pop data16 loope outsb cld sarb and cmp sub xchg cld imul insl sbb subl dec mov rclb popf cli popa xchg xchg imul jecxz imul sub add pop bound push cmp mov lock es call out not sbb sub cld push imul out dec cmp cmp enter jle jl test pop pop dec jl jb push ja cmpsl gs mov notb rcrl (bad) in mov mov out mov adc in xchg mov push add or mov sbb ret jl jns cmpsl out cmp mov cli push andb leave dec je sub add lret stos pop pop push inc xor rcrb rolb jnp mov jbe test pop push mov daa imul outsl mov dec pop ret mov mov addr16 or cli subb inc sub cwtl hlt daa cmp jmp add mov sub js xchg jg pusha mov mov lock mov mov decb hlt mov push mov push cmpl mov sti mov cwtl test lods cmp dec push sbb icebp push loope push pushf fdivl sbb mov scas iret aas mov sub xchg leave cmp andb rcl js or jecxz mov pop hlt outsl mov or (bad) out xlat sub adc mov and xor pop pushf xchg jle jl pop fildll inc xor xchg dec and inc adc dec js fidiv pusha xor insb jle lock or jno or hlt into push xchg gs sbb lret jnp push xchg mov dec outsl adc pop pushl inc pop dec cltd cmp int scas lret or and outsb ds mov js aam xchg push or or xchg mov test mov sbb sarb xor jnp push pop cmp fcomps jmp pop push test orl ret adc push fisttpl mov jmp cmp fs mov sub cmp test add sub xchg or iret inc add stos dec rcrb push int cmpl cmp push enter cmp mulb lock decb cmp (bad) (bad) pop xchg or pop les jmp out or xchg or lret xor mov push mov inc push ss add notb or push sti or shlb call testb ret or negb mov in jnp lea cmc das mov loope push inc shl test jns dec nop xchg mov fwait adc dec xchg dec add adc test in imul xchg xor inc (bad) push jl inc mov dec sbb xchg mov mov dec jae xor sbb bound jle lahf sub lods ds xor jle pusha out jl or outsl rorb xchg xor or adc (bad) out fwait in scas fwait pop aas ljmp mov cli sbb loopne inc imul daa and cmp insl sahf fcoms xchg push mov dec icebp cltd and mov inc mov out xlat ret hlt int3 pop jge std cmp jp test pop push or imul fistpl mov fcom lret rclb ljmp push cli cmp adc ret std int loopne jge es push hlt jl pusha pop pop jmp jmp cld fstpt jl int3 mov xchg mov fdivl sub lods sar mov mov cmp pop in and and aam insl xor hlt fiaddl imul (bad) pop xchg dec (bad) loop and imul imul push shrl sbb jb pop popf popa ds and or sbb cmp mov mov cmp jne shlb cmp jo loopne push and imul push jb sti add hlt push inc cmp inc pop xor pop test jl int pop cwtl out jne xor imul sbb cmp aas push xor lret out and mov push (bad) or imul loopne cmp mov cmp ror pop push std fs hlt (bad) mov pop sub add sbbl lcall rolb sbb pop jg sub mov iret cs xchg add mov lcall pop fcoml scas (bad) jo data16 fisttpll jle ret pop jge xchg loope push (bad) cmp push rclb mov add test andb xor aas das fisttp mov adc xor rcrl push addl push pop (bad) fnstenv jnp or adc sub ljmp xchg xor lahf mov enter push in addr16 out pushf pop lods pop lods mov movsb popf lods imul or pop xchg cmp iret dec (bad) stos sub pusha sti lahf jg,pn mov (bad) jae cmp mov mov push cmp xor dec cld push inc pop clc pushf cmp mov dec lea ret or adc adc paddd addr16 mov out cmp and (bad) clc pop pushf or sbb mov (bad) pushf cs pop bound repz cmpsl sub repnz popa xchg mov pop dec rclb popf bound push shrl cmp inc xchg dec jnp rclb pop push or cwtl adc push xor loopne jl and adc xcrypt-ofb lock jg hlt xor xchg (bad) mov pop sahf int dec jnp pop xchg hlt mov xor pushf in sti mov push jg ficompl and sti mov cmpsl xchg out mov leave or mov jo jl xchg sbb or (bad) mov cmp adc xchg pusha xchg push (bad) xor jb and les push and or sbb (bad) std xor sub dec pop mov lahf notb dec mov fistpl dec insl in or (bad) repz insl ss mov lods jbe test or andb adc loope jnp ret test sar ret movsb sbb or push bound pop inc hlt call dec lahf jne xchg xchg ja push ljmp call cmpsl jno add fmull mov lods and std add pop mov (bad) xor movsb mov into xor out jnp les mov mov ret mov jb adc das jne xchg fwait and movsl adc pop jnp jge leave mov pusha sub mov sti and lcall fstpt mov jle add imul fwait sub xlat sub fsubl xor clc mov std adc sbb test stc notb inc inc push inc xchg dec es repnz lock sti aad dec fdivl (bad) mov out mov lea inc sti fs fsubrl (bad) scas add fild bound mov mov push lahf jge fildl and mov add inc jbe cpuid inc cmp in xchg dec mov sbbl mov push (bad) cltd push sbb xchg jo clc in enter dec outsb fwait jmp into lret mov inc jle imul nop inc mov xor sub xor scas jbe cmp insb mov or mov pushf and in pop jo jbe push imul xchg dec jmp (bad) or xchg pushf scas cmp push sti cmp jl mov jge mov je (bad) fstpt jmp jl adc scas mov (bad) jg xor pushf loopne test hlt lret jnp or lods adc std pop push into pushf mov xlat adc push xor jg cmpsl add add xor cs imull pop and decl cld jg add mov ljmp rol jmp add or cmp jecxz cmp pop in lret test xor pop int xlat (bad) aad scas mov cli xchg decb mov mov or lock int sti call call bound push popw cmp mov jo aad insl sub xchg cmc mov xchg sub popa daa sbb test jmp sbb std mov sbb ret jno push popa inc xor das (bad) fimull jnp dec adc call xorl xor push pushf xor adc pop cmp mov adc rclb pop push out nop jg lea mov jnp mov outsl push or popf clc lods out jg loopne jnp mov fmull push xor xor cmpsb jge cs inc adc or pusha mov je ret mov jg lret pushf stos cmp inc mov or mov mov ret scas mov add dec adc pop xchg outsb stos xchg mov int push nop mov pop xchg test mov jl cltd push shrb (bad) repnz pop jl or and les ja loopne sbb mov cmpsb (bad) cld rcll jnp mov mov out jnp repz mov or je xor jno stos push xor fisttpll nop and cs sub loop aam in cmp sub cmp or push add lods scas mov fwait push fwait cwtl mov rclb int3 push ljmp mov (bad) xchg fdivrl lods loop lea jle adc nop in pop jno mov or sub xchg push pop xor ret mov sub (bad) sub in incl je and mov int3 jg mov mov (bad) sub sub cld ret add add fnstenv pop lea fsubs leave cmp movsb and aas out mov xor pop dec lods rcrl xchg xor jnp rorl rcl dec or inc (bad) mov scas test daa mov mov stos adc leave cmp popa loopne push bound bound clc outsl mov out imul lods les cmp imul xchg sti sbb sarb repnz fldenv ret mov icebp (bad) mov jns sub mov (bad) int3 sub pop fildl jnp aam pop push mov pop les sub mov mov cmp dec and insl loop mov or enter dec add mov jecxz outsl pop sahf cmp sub mov mov aaa pusha mov lret sarl push adc mov jge or std and cwtl xchg cmpsb mov xchg pop lock ret in test ljmp mov cmp xor cwtl (bad) xchg and (bad) aas fmul mov adc adc adc and movsl pop int3 push and adc mov es das and test add push fisttpl (bad) data16 in insl ret lahf arpl cmp inc jne pmuludq sbb in inc lahf jo and lock and hlt ret popf fs movl xchg lahf mov and pushf push mov adc int3 scas jp jae aaa add sbb repz mov cli movsl mov or push mov pop ljmp std arpl pushf adc nop mulb push in out iret and adc xchg pop or dec dec insl and mov ret sub shrb pop cmc ret cld nop cmp push sbb cmp ficomp push adc adc in fwait rorl push xor ret in lahf in arpl push (bad) push jl nop cmp inc sbb mulb adc sti (bad) cmp dec fldt pop or insb aaa push mov sub mov in mov dec (bad) jo dec mov addb lret and mov (bad) mov fwait xchg or mov bound sbb add fistl into jle sub sti sbb cltd mov sbb mov call push iret add addr16 ret repz (bad) push jo lock or gs mov mov push or bound inc mov cli fcomps outsb and int3 jbe in aaa push push mov int3 xor or jo add pop push inc out fsub movsl mov pop stos aam mov or sub pop loop loope or push mov inc ss lock dec and cmpsb jnp iret inc cmpsb out sub outsb mov (bad) jb insl shlb fcmovne dec xchg loop mov loop pushf (bad) or movl cmc add cmp ret or ret test or or in (bad) enter mov loopne aas out pusha fist movsl aam push gs (bad) movsb iret cmpsb ljmp jle and sbb imul sahf (bad) cmp add imul mov out (bad) rolb mov add sbb jle test iret dec cwtl outsb jle push cmp pop lds mov fwait gs into aas dec test mov push sarb ret adc div iret sbb cmp jecxz sub push loopne mov test push cmp pop jge ret mov nop jne add xchg xor jmp (bad) xor loop dec enter xchg call cmpsl cmp sbb jg scas mov mov rcl sub pop pop scas push and lea fldl xchg idivb fwait sub loop leave xchg das push inc jle or xchg nop pusha cmp dec pop dec pop fiaddl mov in and sub je int3 hlt roll das push jle leave je (bad) call push popf imul leave lock jl shlb std lcall push cmp add stos dec mov add and pop negb dec imul xchg adc inc negb or aaa pop sub rcrb xchg mov push xor clc int nop xchg jmp pop add add jnp fs or inc push fwait cmpsb arpl dec push bound mov xchg imul mov ja cmp mov cmpsb mov pop push dec mov in jge fwait mov test inc lea mov data16 dec xchg das mov nop rclb lods mov loop and lret (bad) adc xor mov sbb sbb int loope stos or stc or lret jbe push dec push ss int sub call cmpsb inc andps pop loopne cwtl mov daa pop cmpsl data16 adc pop jge inc cli popa out sbbl pop sub iret and movsb mov mulb sbb loop ret xchg aas insl shlb cmpsb mov push sti and popf imul imul pop push jp and add pop lahf adc cmpsl and dec inc fldenv dec push mov push push xchg adcl out (bad) in mov insl hlt sbb jne mov inc ficompl ljmp jo (bad) mov insl sub and lret push mov or push addr16 sbbb nop je rclb add mov stos jns pop pop inc or orl mov or lret cmpsl aas popf je scas pop push fisttpll (bad) lods add shr jg xchg pushf xchg es loopne lahf data16 fist pushf fst mov pop int jg outsl int stos adc push jnp es or rol sub mov nop cmpsl jle scas imul data16 mov mov lret leavew loop jno repz jnp and fwait jle loop sub xchg cltd push inc cmpl or mov adc test mov xor mov (bad) xor cltd aaa and aas andl adc add fidiv sahf mov dec mov jle int or test and dec add js jne sbb push ljmp out mov mov xchg cltd and dec sbb inc sti out mov das or in or cmp push add cli dec jnp cwtl sbb pop cmpsl fistl cmp dec xor nop and cmp mov scas mov and imul cmp mov outsl or lock pushf xor and cs xlat mov jl pop aam add pop jmp xor dec adc pusha and cmp jle cmp pop cmpsl mov xlat (bad) cmp lahf das jbe pop nop mov pop stos cli push jg push out cs fsub inc cltd or orl sub test xor (bad) int test outsl pushf cmp fsubrs rcrl sub aaa nop sahf sub jo sub jl test lods sub scas (bad) push (bad) and push fwait adc stos nop or (bad) xor bound leave imul mov (bad) pushl pop scas sub loop in pop push xor sub rcr sub ljmp mov sbb out fimull ljmp jbe popa loopne shrl adc adc or fisubr dec adc mov jle adc jg stos sbb push rorb sti jbe pushl push movsb and cmpsl jns aaa inc lods insl sub out xor addr16 mov mov int sbb ljmp xor mov or push adc popl xlat int out mov fildll pop mov cs ret mov cmpsl mov imul mov imul lds mov stos sub xchg lea cltd std js ficoml mov ret or sbb aas insl ljmp and pushf and scas mov les and out xchg mov repnz add lret jge or pop sbb ret lea xor cmp or add es pop mov xor ja in mov pop xchg or jnp mov mov inc std daa faddl sbb lret mov in lods mov mov and mov pushf xchg xor dec pop xchg int js or fdivr xor pop sbb jb push mov js cvtdq2ps push stos mov xchg cmpsl mull lock fisttp xor pop adc mov xchg aaa pop shr cs adc and imul sbb mov and dec mov jg mov popa repz add addr16 cmp push adc sub outsb shrb (bad) jg sub rcrb ss adc push dec dec (bad) mov mov jo fcoml stos movsb dec int3 ficoml mov loop or fwait (bad) decl fistpll pop adc imul xchg xchg cmpl cmpsl adc sbb imul mov (bad) (bad) cmpsb jb xor mov inc pop test lock cmpsb push pop jnp (bad) popa ret jle jp (bad) scas sub flds mov jg mov aas mov lret cmp sub cmp xor dec sbb or rorl (bad) sti or adc int clc cltd and lahf repnz add push sub test mov jl rcll testl sbb pop jnp outsl sub (bad) fnsave sbb aaa lahf loope push lds inc or cmp in jl scas test inc xchg cmp dec sarl loope pop mov das inc movsb scas int3 xchg scas les push movsb jl mov sub out ret push enter and cltd xor or and out pop loopne and mov fcmovnu push and ret lret insl into xchg daa and lock ret orl in addl movsl cmp mov mov sbb or push xor and out arpl jle adc pop inc jle hlt rol pop sti test or jb pop mov xor push or (bad) mov mov sti jmp cmp jg xchg sbb mov ljmp pushf and jp repz jg nop mov sbb xor or dec inc cmc subl push add pop sarl pop jge nop add jb xchg jle gs jmp pop pop fadds xchg cs push bound adc sub (bad) ret dec pop mov push fcoml mov pusha xchg inc iret xchg add add xchg mov cmp xor (bad) xor jae loopne rcll cmp (bad) mov or dec rcl cmpsl lahf pusha jo (bad) xor into and test mov push jle or pop adcl lcall in jl xor inc iret lcall insb sub sub pushf or or mov fdivl mov in jmp mov inc sbb pop rclw int3 xor jnp cld out aam xor insl mov and mov (bad) enter paddw fidivrl jge dec std or add addl xlat cmp cmpsl push (bad) lock int3 sarb jp mov xor or xor pop jl aas fldl sub push int stos insl xchg dec push jne enter dec das pusha xchg nop (bad) mov mov loop jg xor lahf push mov mov faddl xchg (bad) mov and or pop jnp mov or and or icebp xor xchg aas pop sub or outsb pop jmp test out xchg pop xorl das cmpsb jne divb inc enter addl lret adc data16 (bad) loopne push test xchg push (bad) sbb in xor jle mov sbb jle int3 xchg aas xor dec mov cmp leave or insl or xchg push or xchg int popf iret xor shrb cmp loopne pop push les (bad) pop cmpsb inc andb stos mov int3 push and mov (bad) mov xchg call pushf mov cmp scas and std into (bad) add xchg sti xchg cmp ret and fucomp (bad) rclb adc mov sbb pop mov lock scas and push dec js mov xchg cmp inc cli pushf rcrb xchg jl cld mov imul int (bad) sub in or orl adc pop lea sbbb cmp sub jne sbb addl jnp jle xor or jecxz sub inc fisttpll or xchg (bad) pusha push popf adc xchg inc jmp push sbb jo jnp cwtl add push add mov test jmp imul mov xchg mov testl push mov add or cwtl add sti add cli adc popf or pop dec push cmp loope sti addl inc lcall cmp cmp jle push jge or inc push nop cmpsl aas pop dec push adc fwait mov bound int xor push xchg push jg in xchg dec push mov jp das sarl or mov enter cmp ficomp cmp cs enter or cmp das mov inc xchg sbb fwait lret mov push int3 imul mov aam imul sbb mov sub fwait int3 sbb sti jae adc stos sbb sti or cmp andb lret cmpsl pop and pop mov and mov cld jl xchg cmp and inc add mov test fwait cmp arpl in xor pop push mov mov aaa fs imul add jae xchg mov clc popf mov push xlat adc mov (bad) cmp jne ret (bad) sbb cwtl inc cmp rcrb fisttp dec lods add scas xchg mov cld mov mov jns sbb (bad) std xor das fcmovnu insl movsb dec cld fistl jg xchg aas adc mov rcl lock popf mov pop sub inc xor mov jae (bad) cld sbb pop mov cmp mov pusha dec nop cmc arpl mov (bad) cmp dec mov jge stos xchg cs sub sahf jnp xchg or cmpsl or rcr add mov inc cwtl insl xchg sub jp sub xchg sub cmp lahf (bad) ret mov fcoms hlt int3 scas cld and adcl adc pop pop jns pushf out fbld test ud1 std and cmpsb mov mov adc push inc ret jp dec xlat in xor (bad) cmpsl andps fsubrs cs mov pusha ss jp and outsl push adc aaa addr16 push (bad) adc inc xchg cmp ret mov lods inc pushf fidivl cs push or mov lds lock xchg dec mov push xor test mov jnp (bad) scas sti push cmp sub inc bound inc out xchg xor (bad) ds outsb xchg and dec and adc jle in mov jg jnp jo push jle testl imul repz dec scas jnp cmp jl jl cld or pushf imul mov inc adcl sti pop shrl or pop jp call xchg sarl jnp sahf jae mov fwait mov popf rcl pop sub or pop sub (bad) xchg cld or jnp cmp addr16 daa cld jbe or loope sbb and xor jno sahf push or lahf (bad) inc jmp pop (bad) in aad test inc add daa (bad) mov jb xchg dec lret movsb and dec pushf inc mov insl dec shlb hlt lret inc mov ljmp jg cmpl inc test add mov pusha ret inc roll or adc lods (bad) dec cld shlb lret mov and push sub add test lcall aas sub pop xchg lret sbb dec shr cmpb or cmp jb popf rcrl cwtl insl mov xor into mov mov mov mov jbe sbb scas push out mov fisttp aad pushf add int3 mov cmp and push jb jae mov adc cmp cli fidivr jl mov (bad) cld lods mov add lds movsb mov adc and cmp jnp add cmc pop and pop push aaa or or mov lcall pop loope push ljmp mov pop scas gs fstl rcll decb pusha daa addr16 mov xor push jne push bound pop ret xor fstps inc mov sub int xlat ret adc push (bad) test inc pop lcall mov stos sti mov adc loopne ja mov js es scas pop add mov les lods jnp hlt and mov jnp dec lahf xor mov xchg add mov scas es dec fdivrl inc movsb movsb pop adc sub sar jnp inc (bad) clc shrb mov stos sarl add adc jmp jp loope insl push mov xlat or sub xor fwait inc push rorl sti mov xchg sbb (bad) mov arpl cmp dec pop cmpsl decb clc ret push xor jl or or cmpsl enter mov mov lds mov mov pop mov mov cmp (bad) repz inc inc push orl out sti adc xlat cmp cmp dec xlat jnp jg sub mov (bad) push sets sub cmp xor pushf ror inc and mov rclb sub and mov sbb mov cli sti (bad) jns mov inc push sbb sub or leave incb je lcall (bad) xor aaa add cli sbb lock gs dec xchg jbe loopne sbb xor mov xchg pop sti pop xchg inc int push int idivb sti or mov xchg pushf pop (bad) mov lods clc and into mov out pushl les dec jg pop lcall pop aad jle push notb dec mov jge int3 pop cmp inc mov enter mov outsl mov int3 test or dec pop mov in sbb adc dec and in mov xor cmp pop sarb pop cli js es mov in arpl (bad) mov cli scas nop mov jg addr16 pop adc jmp jg sti (bad) cmp arpl iret xchg andl lcall popf mov addb fisttpl mov and lret xor inc xlat inc lret clc add pushf sbb fxch sub sub mov ret dec fwait popa in pop xor or (bad) push out in cld or add mov fmull fs xorb mov mov cmp lods or pushf or jl mov pop inc (bad) leave stos xchg jnp (bad) add lcall or jg aad mov lret pushl mov or sbb jmp mov std scas mov dec scas dec mov push pop mov cmp dec inc or mov or cmp mov push mov ret cmp jnp mov pusha lea ret mov cltd jle sbb pusha jne fadd xchg sbb cwtl dec lods xorb mov scas es cmp adc mov add imul add dec add sub sub sub cmp sub cmp cmp cmp cmp cmp cmp sahf cmp popf push ds aas cmp test ret mov cmp sbb or sbb sbb sbb sbb sbb jecxz xor adc add xchg (bad) xchg lods mov insl int ret (bad) fistpl (bad) jle aad push mov jg fistpl or xchg dec call cmp (bad) ret arpl or (bad) int3 cmp arpl mov in loop jnp (bad) call xchg add pop popa nop sbb and jl mov pop jl jnp lret mov cmp pusha inc (bad) jnp cmp and jnp fwait shll (bad) shlb add mov ds jnp pop lds adc jmp gs hlt shll lahf cmp jle and xchg pop cmp push xor adc and xchg fisubr shll add xchg mov cli mov cmp mov leave push (bad) pop rcrb fnstsw mov inc rorb sub push cld push sbb jb cmpsl outsb rclb lcall das stos jl add les les imull mov ret iret fildl lods cmp or pop adc fwait daa xlat lret nop hlt or lret or push (bad) lds dec fadds arpl sarl cmpsl adc scas pop clc stc fadds mov lret imul or mov in popf sub or jg mov mov push jecxz dec lods jecxz xor test das add or add pop cld mov repz or andl ret add lret (bad) or dec or stos pop ret sub lret int push cld pop ret dec lea xor push rorl cmc gs imul shlb dec pusha adc dec pushf add or xor nop dec cmc push movsb iret mov push (bad) movsb mov fisttpl jl cmp cmp loop xlat or scas push stos and cmpsb fwait ucomiss bound sbb aas (bad) leave xchg adc mov fwait sub mov sahf fist sbb mov mov mov add ljmp in int stc push ret shr lds jecxz mov jg xchg rol fwait mov pop jp loope add mov int paddusb (bad) pop xchg pop pusha pop dec fmull dec or cmp and into rol aas xchg divl dec iret std cmp sbb xchg xor ds sbb pushf dec or cmp add adc jg mov pop aaa adc pop dec jae push lods xor and xchg and or jae xor add sbb std mov add mov xchg scas sbb add cwtl lret or lret aam das lea cmp fiaddl fucom mov leave test pop ljmp cmpsb into loopne scas lahf stos or lahf inc mov xchg addl push lret jp or in push sbb xchg mov and jp pop pop mov lret push (bad) aaa inc ret adc push sbb test inc xlat inc and xchg sub lret out mov or push mov adc push lret mov jmp bound cli cld and jne jmp in jbe call (bad) xchg mov sub cmp jp sub scas pop loopne (bad) std xchg rol add mov jae aaa (bad) jg pop push dec sbb adc das adc fild out pop jle aaa hlt and pop es arpl test mov cmp fldcw dec outsl inc or push repnz out int3 jle cwtl in bound cmp ljmp fcmovne add cmp int3 cmp inc push sbb into sbb or cmp jl jne sbb add jns pop in mov xchg pop mov fistpll xchg pushf fistpll rcll sbb jl mov fidivl je pop repz test cwtl inc mov push push push nop mov insb rolb mov les (bad) mov mov ds fscale mov sub pop or cmp test dec incl jge lcall sarb sti clc adc fwait ret stos sahf jmp cmp ret or mov sub push add iret cmpsl jp (bad) lret fwait xor mov or rcr xchg int3 andb add lea (bad) mov cwtl bound lods mov xchg aad adc add pushf cmp adc inc sti and xor mov sbb pop and or pop popa mov cmpsl and fwait andl test mov pop test sahf push insl cmp lahf mov push lcall pop inc push inc pop pusha adcb mov push pop mov or jl loop cmp notl cmp (bad) adc and pusha inc inc inc sbb push pop inc mov jmp jnp sbb popf dec ds mov jl sbb outsl inc jg lahf sbb sub lods (bad) ljmp int out cld mov (bad) mov mov mov iret fwait jge,pt lods popa inc faddl rol in inc (bad) sub out jno cmp cmp bound pop neg mov adc roll and daa push (bad) cmp insb pop ret jg sub cmp pop mov xchg js push or lahf sahf movsb icebp jnp or push outsl push inc cmp lods sbb cvtpi2ps push pop xor dec int3 imul and test pop jp add ret in scas cmp cli ds pushf shrb xchg stos (bad) sbb xor inc (bad) mov dec pop push fisttp aam out mov cmp jle lcall add xchg (bad) aas mov sarb mov mov comiss or rorb aad in adc jns mov loopne sbb shrb fdivl lds xchg outsl add jg sbb imul scas lret (bad) inc adc jp sbb add in jmp leave sahf push mov sahf inc fsts sub xlat inc xchg jns jg (bad) pop insb fucomip jo add repz cmpl jle mov enter addr16 jno call movsb push mov sti call fsubs (bad) in cmp addr16 dec (bad) decb push mov sbb adc hlt jl (bad) jnp adc jl lock lret inc mov (bad) sbb ss jae movsb xor cmp mov scas fdivrl jge mov or cltd lods mov loope popf rcr fwait pop pusha loopne fild repz xchg lahf jg (bad) aas inc repnz pushf dec or xchg jmp and push fdivl inc hlt push push or mov mov fadd mov sbb ljmp jbe in jg nop dec and cmp xor (bad) xchg adc pop outsl dec aas jle lock lcall pop mov and bound (bad) jg mov jge jmp jl mov pop sarb mov jnp mov (bad) or js adc xchg into stos shll outsl jle mov xor faddp pop cmp sti add fistl add inc pop mov jge es lret cli inc mov (bad) (bad) fwait rcrl mov mov jp cwtl cmp arpl cmp or cmpsl xchg (bad) mov inc mov test jge int mov mov mov cmp test pusha mov inc dec test ror aam iret adc in mov ret jl mov mov xchg or sarb jge mov sti or int lock daa mov lret es jmp or test imul mov jnp pop das and hlt dec mov or repnz (bad) adc xor stos rolb push pusha incb (bad) and jg inc add pusha cmp jne cmp inc lret sbb jne push imul add push into cld rorb add and dec adc cwtl adc pop mov outsb xchg arpl jnp mov nop and fcompl fsubs loope lret divb rcrl cmpsl daa into mov je pop or sub cmc push rorb lods push sbb pop pushf dec (bad) mov (bad) in push ret out cmp jge imul mov inc sbb xchg fdivrs xchg xchg or adc mov ljmp lods jl or add hlt pop faddp scas jbe idivl jbe adc lds fdivrl into or mov fisttpll mov mov ja ljmp das pop sbb sub xor push inc inc pushf pop mov cmc sar faddp dec int rcr (bad) std or mov (bad) and arpl jno hlt cmp adc dec test gs mov xlat es sti aaa call xlat jnp test sti push sbb pop (bad) ror fcomps shl cmp int sub xor sbb incb loope lock push rcrb pop fild std movsl xchg dec cs sbb adc xchg lods mov lock sbb adc mov int3 enter mov push rorl cs mov test mov cmp mov cs mov cwtl fwait adc add cwtl jge and push jge,pt sub roll in sub insb cmc lcall add fnstsw xchg xor dec lods sub fstpl cli and lret xchg ret jbe shrl mov test xchg enter (bad) cmp mov bswap ja mov push pop aad daa push push jbe sbb pushf insb inc stos lret je xor fidivl sub bound mov sbb ret bound sub aam ja sti jno outsb mov andb (bad) mov popf inc mov or pop or sub xchg aas inc or xchg xor inc repnz add lcall shlb push cmp aaa or inc in rcrl in nop data16 mov sbb int mov rclb cmp xchg xchg movsl cld pop add loopne pop dec ret out or pushf movsl aam and mov negb hlt test iret add adc cli mov cltd inc xchg mov jnp iret and movups pushf cmp mov jno add or sbb cmpsl cmp in mov cmp xchg sbb inc xor xor adc inc test lret jl add lock aad clc mov lret aaa inc shlb sub pop out or je mov cs lock test xchg mov sbb insl lea fs ror xor mov mov or sbb jbe insl ja mov out inc hlt mov je inc push (bad) mov je ror stos ljmpw adc mov mov jns adc aas mov mov push pop lret mul mov inc iret xor imul out mov int3 pop mov mov and sub cmp repnz adc pusha hlt enter int jge scas pop or mov lahf sti ret jbe mov ret jl push jl andb out jg dec pop subl repnz jo cmp add (bad) (bad) lret mov aad cmp jnp (bad) leave pop mov loopne adc in sti test nop adc sbb (bad) imull dec out in xor out push imull ja add fistpll jge cmpsl mov hlt inc dec movsb lret or xorb dec push aas test mov xchg out and imul sub mov mov sub jg pop mov popf mov mov dec aas pop xchg mov or xlat add cld nop xchg xlat loope push jnp or shrb sti dec mov stos stos xor out or jo or sub or dec sbb and mov dec jne clc mov movsl mov mov xchg jl loopne sbb ret into std or xor push aad jecxz xor jge and stc dec pop test lret sbb (bad) shll push inc jge push add xor pop popf inc mov cmp and cmp test pop ret lea sbb or int3 jge inc popf mov mov cltd or (bad) out cmc lds or ja jg xor inc push data16 adc clc xchg mov stos dec fild xchg in sub nop cmp lock jecxz in cs sarl movl add xchg xchg jbe lea rcrb (bad) jb lret pop negl fwait or cltd popa movsl xor mov jne pop int add (bad) mov adc pushf sti push and add movb addr16 add sub popf fwait inc rorl push mov test std cmp popf mov lret mov mov (bad) jnp,pt and test fcmovnbe loope (bad) mov cld pop add xchg sub shlb lret xor shr xchg dec (bad) aaa adc lea idivl aas mov imul hlt cmp sbb pop jb testl sarb sub cmpsl cmp jecxz fdivrl jp cmp out (bad) xor xor mov jo mov or (bad) adc lret xchg repz lock or mov pop insb or cld jb inc dec (bad) out in (bad) sbb addl loopne rcrl adc xor cli psllq aas jnp test or aas jnp pop add adc sbb lds cmp cmpsb fsubrs gs movb rorb pop imul lods adc js in cmpsl mov lods pop or testl pop and sbb gs int3 loopne fwait es xchg sbb lock and ret xchg fildl lcall testl push dec (bad) out jl jnp sbb mov xor mov mov in lcall jne imul and or mov leave and jle add push cwtl mov or mov mov mov inc xchg and dec pop or into rclb sub fdivl orb in daa and scas pop jg fcoml inc pop ret jae or out mov or jmp or pop addr16 inc les xor or gs push lods xchg sahf pushf mov dec mov cmp cmp insb rcrb sub cld outsl mov nop std mov popf mov test in fsts stos jmp stos (bad) or imul int fildl mov xor mov fwait jge out cmp es sbb and lret push mov xchg hlt rorb lahf inc dec sbb or dec ret lock adc adc xor push shrl pop cld fsubrl std push aam movsl pop je cmp jmp cmp xchg mov and mov xchg jbe out mov or sbb stos movsb sti movsl dec push push clc mov inc pop xor add (bad) fimul (bad) fwait or mov or push cmp mov jnp mov addr16 int push lret movsb ljmp fisubl and je sub mov mov or lret jns jl (bad) iret cld pop gs (bad) jne xor pusha mov insb lret fs negb js data16 sahf xlat dec pop daa mov mov std or (bad) xchg dec test cmp je xchg repz lret mov call mov cmp pushf das pop (bad) dec lds movsl push aas sbb insb test test pop inc or lahf lret jg xor sti jb pop cmp cmc pusha sub jnp adc (bad) add jmp lods dec push popf xchg je mov (bad) push push fstl out (bad) lock dec and mov or or lret mov adc or (bad) (bad) push fistpll cwtl (bad) adc push push into push repnz push push scas cmp sub add je cld flds in dec ds xchg add movsl and in and rcr adc cmp mov or sarb push in pop inc ret add push pop adc inc sahf ret shll or pop or pop push pushf int iret add cwtl sarb cmp sub fwait (bad) or sbb xchg pushf rol in xchg sub ss sbb mov xchg inc xor mov cmp ffreep or mov mov sbb jp data16 mov (bad) sti jbe cmp mov gs cmp jnp hlt cmpsl or (bad) repnz mov xlat jp mov jmp and or sbb pop sub pop fwait mov (bad) dec xor mov (bad) xchg loop mov mov push repnz inc std inc inc test out out daa les xchg sbb faddl imul idiv cmpsl push scas scas iret lds add xlat bound mov adc shrl (bad) and and pop je cld push vpavgw dec rorl fistpll shlb mov lock jb push std jbe mov pop out and aaa add add jle les lret xor or (bad) xor xchg loop leave mov push ljmp jge mov addr16 lret mov enter sar jge pop and popf inc jo and xchg push loope (bad) enter aaa cmp sub pop push in jbe xchg lock cmpsl jle sbb stos loopne pop jp rcr aad push decl cmp sbb mov out cmp fistpll lea sti inc cmp aaa mov mov sub adc xchg jns loope mov movsb jno mov adc adc adc mov jns movsb movsl iret lods shr ss enter in rorl cmp or ljmp movsb fildl shr xor xchg ret stos adc fmuls mov or dec jle ret sbb scas push sub aas mov xchg fcom popf aas add dec xchg inc rolb mov mov hlt add add xor adc push mov insl rcrl ret (bad) outsb sbb mov je xlat sarl jle test jbe les and mov inc mov mov ficomp and or out inc sub or sahf add fmull gs shlb (bad) mov rclb sahf jbe push mov sahf lea inc lods sbb lock testl das add cli dec xor xor push jae sahf mov test mov mov xchg sub sbb (bad) clc (bad) mov push in stos pushf ljmp repnz mov cmpsb nop pop jge das (bad) into fcmove pop pop jnp mov cmpsb lds (bad) lock jecxz and xchg (bad) jle mov jne xor cmp pusha or loopne inc dec push pop stos ret ds push daa pop inc xchg in leave pop cmpsl aas jle sbb mov cmpsb fwait jno (bad) out pushf sbb movsl cmp loope popf mov jne xor and sub pop subl add add sbb leave shrb lock and sub pop push and ret or fwait (bad) lret dec aad mov movsb scas pop (bad) pop cmp cmpps in das add inc sub addr16 pop inc data16 outsb adc cmc (bad) pop hlt (bad) adc sbb add pushf add fstpt sbb and push fist mov cmp or sbb push mov push int or pop incb xor lods jge cmc cli adc mov xchg ret test xchg dec mov or scas lock jmp fcomps xchg das loope in cmp int3 (bad) in xor push sub dec in add mov push cmp push inc hlt pushf insl sbb or fist in or add pusha pop adc shll (bad) jo push nop and (bad) bound mov xor inc les ret sbb std popf arpl in das shrb les mov cmp push das adc adc jmp sub adc cwtl lods fstl imul jg jmp sarb and mov jg inc enter dec xchg and jb sbbb cli int3 sbb add adc aas out ds add add (bad) xor pushl jmp fcompl dec push inc inc mov sti imul out jle ret out pop rcr sahf aad xor mov cmc (bad) jnp xchg scas cmp jp stc mov int movsb cli push mov popf ret push sub push push sbb loop pop cmp xor addr16 jns rcll dec shlb adc aas jbe insb sub pop xchg xchg sbb pop mov outsl adc (bad) sub leave mov lods test inc cmp das cmp add jae fldt adc lods mov jmp ret aad ljmp std ds jmp adc adc jg lret push sbb pop sti pop dec pop sbb xchg les out lret xor push cs outsb (bad) shrl push or movsl test lods dec dec adc fwait lock lcall fwait ljmp jmp ret gs adc mov stos jmp test stc gs je mov cmp pop shlb jle pop xchg push dec sti (bad) test out or leave into inc scas in pop shl gs stos aaa cmp (bad) pop add jle loop adc or jmp cwtl rcll sbbl cmp xchg mov les xchg mov dec inc jb test int das jle sbbl dec xchg pop jl mov dec mov add fsub lods jle std movsb insb add cwtl jb sahf adcl or fwait (bad) mov loope cmovo int push jmp xchg push aas mov mov jp inc push shll inc sahf pushf jae jge jg dec sub mov dec test ret pop icebp dec xsha1 cmpsb mov mov icebp mov pushf dec pop cmp fs imul inc movsb pop fstpt or fnsave (bad) mulb sub mov dec mov stc (bad) or inc loop xlat push mov insb jne cmp adc and test cmp pop lea dec fcompl xor lcall mov mov pushf cld jg das nop push cmpsb push jg jp dec nop enter inc add (bad) pop rcrl mov adc leave mov in mov outsl cmp mov mov loope push int out push xor leave mov test add inc out notb imul and sbb (bad) movl mov xchg (bad) sti ljmp push sbb or ds mov add int or adc xchg std sbb jl (bad) ja mov inc pop in xchg leave mov add ds scas sbb subb nop pushf leavew sbb mulb std ljmp sub cmp mov mov test or cmp (bad) sti sub cltd dec js cmp inc mov loope (bad) int3 cld or cwtl dec sarl or and mov or pop sti sub jecxz mov or xor mov fistpll mov das inc or adc sbb jbe test or es das test lock sub mov cmp jmp cmpsb pusha mov gs pop add mov lock loop xchg xchg loop push cmpsb add rorl ss inc les sub cmp jbe inc movsb cld push shrb pop aam out loope jo enter or mov std push es out push mov mov lea scas add pop mov cmpsl out (bad) ljmp pop repz pop or aad jnp ret (bad) js jg sarb xchg sub jns repnz or xor jecxz or cmpsb dec jb xchg dec rorl xor jns aas sub adc loopne jg daa imull shlb pop cmpsl (bad) sbb insb mov push and mov or add (bad) mov insl ja xchg mov mov cltd and mull or aaa popl mov sub (bad) mov jg cmovo pop cmpsl adc dec fisttpl sub aas aaa jge and insb mov pop imul rcrb add popf adc jl or push jge jg xor adc xlat inc add pusha in sub mov xlat ja jns (bad) jp jb lods dec aas fldcw cmp mov imul lret cmp mov jle icebp bound jmp int3 enter mov pop in mov lahf popa (bad) jbe jne mov inc test inc jg call lock in lods fisttpl xlat fnsave (bad) sahf inc lahf dec jmp cmp outsl or mov nop nop mov xchg aad imul sbb movsl lret add ret fdivrl or add ss lret popf add jnp aad mov jns (bad) jge imul ss lock jg push mov fwait jo (bad) in popf into dec mov sub push (bad) movhps xchg int cmp push andb jg xchg hlt jns nop fildl (bad) (bad) dec jge enter dec rol sarb mov mov dec jnp das inc divl std inc mov js aaa fs (bad) push je es mull les cmpsl and cmp mov jo jns mov es dec inc xor (bad) mov or push fsubr dec or xor xor mov lahf mov inc orl mov pop mov jl fdivp add sub in icebp mov sti dec mov xchg jnp aam in cmp fneni(8087 or sbb jp and sar jne mov dec jns call adc sub and pop mov pop pop inc ljmp repnz (bad) sub js test fwait inc out lea mov bound insb pushf lods mov mov (bad) sub cmpsb cmp jnp insb xlat push sbb or into das cmp or leave adc lods cmp add dec push movsl lock lahf outsb sti movsl out sbb add addl adc pop dec in and ss enter in aas adc call cli xchg icebp adc fdivs mov or inc rcl mov xor dec mov lcall jb in sbb push ds cmpsl bound mov push aad cmp js pop push mov cld int inc sbb (bad) jnp stos push add rorl cmp add mov pop sub pop sub dec int3 cwtl int mov movsl push insl xor test add rcrb testl sub imul adc in push jno mov mov dec sbb add sub mov pop inc addr16 outsl aam imul scas xchg push aam jg repnz fstl sbb push pushl loop sub and in and adc mov xchg jg clc adc cli aaa or mov add loop mov subl loopne gs test mov xchg cmp outsb xchg jbe hlt or fimul inc lcall pop inc dec push popf ret jle jg mov int pop push roll mov dec xor adc repz xor ljmp add cmp xchg mov jne inc jecxz pusha pop pop pop pop dec and int3 popa lods rclb int3 sti push daa cltd mov mov pop sbb cmp jnp pop xchg cmp outsb test pop xchg dec fwait daa shrb mov and inc mov sub rcrb movsb std das int3 mov or xor push push rolb jmp xchg nop pop and sub or mov loop test pop xchg sub cmp xchg jb sub andl aas mov leave pop cmp lahf jg cmp dec daa cmp xchg into jl arpl jp andl cmpsb add jno push aaa lahf (bad) gs sbb pop pop rolb xchg sti bound mov mov int std or mov popa jle cld pop push loop outsl enter ds cld xchg or xchg cs imul add or jg xchg inc out mov loopne xchg jnp pop fwait aam push loope aas idiv fcoml xchg addr16 cmp inc clc imul mov sbb push ljmp sar rcr fistl dec jge sub es pop outsl ljmp or inc inc mov cmp jg xchg or mov xchg leave jb imul pop xor nop aas push (bad) (bad) ja pop ljmp outsl jp icebp inc add adc lcall sbbb mov les mov in push rcrb or mov sar jo mov jp jle cmp mov mov cmp jle adc fsub shl push and pushf rclb clc dec imul ret mov mov lods ret movsl (bad) jnp repz dec (bad) lret sub cltd jle sbb ss push or dec xor sub dec inc cs and sub cmp cmp lods in xor into xor subl sub mov mov xchg subl movl ret lret (bad) js add sbb leave push dec push std mov fstpt cli cmc jl mov fstp call xor iret rcrb aam fldl mov inc cwtl loope mov jge mov dec popa sub xchg mov and stos xchg inc stos outsl xchg repz movsl cli sub jg popa fcoms js arpl scas sub mov idivb and jbe shll sub dec pushf dec scas mov std aaa cmp hlt mov pushf in dec sub fs mov push (bad) sti pop (bad) cltd sub int3 rol subps icebp lds lret or or pop sahf cmp mov jl mov add sbb push nop sar ret lea jle jb pop add sti inc lcall arpl sub pop lods pop dec mov inc rorb pushf mov popf xlat aas mov mov xlat adc pop faddl push pop pop aam sub sbb in adc faddl mov adc cmpsl movsb push in cmp movsb fmul push xchg xchg adc (bad) pop fiaddl sub jl and adc loope aas jl dec inc sbb fadds pop popf inc cmpl incb mov mov mov jb mov jge cmc jo (bad) xchg adc adc push xchg cmp fs cmpsb jb movsl loopne fwait (bad) notl lcall fbstp bound and jle mov bound mov cmp ja dec mov mov rclb out fcoms add daa ja and insl lea xlat sar push lods xor sub std mov push xchg sbb sbb stos pop rorb sbb inc shrl (bad) xor mov or mov add aas mov cmpsl inc ret lods mov sti sub xchg sbb inc jg xchg jle cmp call fdivr mov dec jo pop int test pop andb push push popf sbb sbb add or or push cmp mov xlat outsl lret pop jge aas xor pop ret pop jp lods out mov popf (bad) jmp dec dec adc sub fistpl xor ss enter popa sbb jnp lret push dec mov jecxz fbstp mov gs iret jo out test dec in cmp aaa jl in pushf xchg cmpsb xor or popf nop inc push push cmp or aam in sub fld dec or adc push cs enter add lret sub sbb cmpsl cmp xchg dec (bad) pusha dec (bad) lods sbb lock decb in fldt pop test or inc pop leave (bad) adc mov adc cmpsl or lock mov and pop insb inc sub mov test mov insb scas sbb insl cmpsl pop jne cmp xchg cli dec dec (bad) (bad) insl aad (bad) lock or movsl inc (bad) sbb mov pop add cmp jecxz nop outsb das mov xchg push cld movsb jp xor pushf or sub stos mov inc rolb cwtl or adc cmp jge daa add mov jae mov outsb inc xchg outsl jno ja adc cmp lahf jo out xchg pop or das mov adc and in rcrl sahf and jge pushf push ret mov inc jnp jnp leave in push pop add mov push test fcmovb popa popf add adc adc mov pop inc test cmp das pop inc lret xchg dec add push dec push and sbb xchg in pop add pusha loope mov jbe je cltd xor dec movsl add sarb je xchg pop pop pop mov inc loope dec xorl inc (bad) fstpt cltd mov into idivl pop jmp push or jmp (bad) (bad) ds movsb dec mov xchg imul pop dec test dec cmp (bad) hlt insb fwait or mov jo xchg daa scas jmp clc or xchg mov dec addl (bad) mov fsubrs mov cmp aas jg or xchg add cs pop addr16 nop aad mov adc xlat jl testb rcl xchg xchg dec mov mov jge jle stos lahf sub sbb jmp enter dec mov repnz imul aad js movsl es sub decb cwtl mov outsl xchg mov inc (bad) js aad stos sub cld push popa les add jb in (bad) (bad) lock out rclb ja cmp pop xor jl cmp push sub mov lret fildl sbb dec sarb push fwait (bad) push jbe xchg imul pop xchg sbb lret jmp sbb push inc cmp dec jnp xor insl cmp loop add xchg xchg imul pop loope mov daa inc mov push nop jl xor pop ljmp repnz fistl pop sahf add dec data16 ret lock test push js cltd inc shlb cwtl lock fabs add mov or std int repnz mov or loope jb cmp cmpsl mov stos mov add ror cmpsl or or sbb add stos mov xchg rclb xor sub and xchg rol cs jnp mov hlt lret mov jnp cmpsl pop cmp mov sub dec fmull adc pop dec adc lods cld push inc fwait cli pop sub iret sub rcl jl cmpsl jmp lahf (bad) cmp adc lods enter shlb je cld out movsb (bad) xchg xor in cmp cmp or jp cmp add inc push dec into mov push cmpl pop (bad) cmpsb lds jle pop leave pop sbbl xchg jg mov jb pop lods mov das mov jg sbb loop mov adc pop stc daa push or fwait lds stc daa xor fwait ret push adc sub cld insb sub pop xchg jg lods and movsl sub cmpsl cs fnstsw add mov mov loope pop aad jnp dec loop int adc jne adc jmp push lret mov jg mov fs mov pop int3 sub push movsb cmpl inc loop pop fsubr pop in dec lret add sbb dec (bad) inc pop or inc sub add or inc inc adc mov xor addr16 movsl mov ficomp xlat roll dec mov je scas or jl outsl cmpsl lcall sahf popa lcall mov cmpsb cmp insl (bad) ljmp les lods dec nop stos mull mov sbb inc dec inc pop and cmp ret mov mov scas fcmovnu mov cmpl mov mov adc add push pop fwait ret adc mov or jae test push aad xchg sarl adc in (bad) inc jecxz mov sbb insl inc push and adc or adc addl std rol sub sbb aas or sti xor mov adc xchg pushl fs icebp out inc cmp lock mov sbb pop lock mov jne ror stos ret jge rorb lcall or mov xor add mov lret sub push xchg and mov or mov pusha and jmp mov add pop out sub fs cld or or or iret mov (bad) int out loopne mov cmp lret add xchg or imul hlt fbstp js ds call pop mov dec jnp inc mov sar cmpsl inc mov push mov pop pop ror sbb cs jg cmp sub lret nop inc mov ss and imul xor adc shl mov inc cmp mov add mov fistpll loop addl ret outsl add arpl lret xchg mov jnp outsl mov rcrl pop mov lcall jge push jl nop in int or add mov push xchg (bad) rcll jl cmp nop adc ljmp jb lcall fwait or scas inc popf cmp stos cmp xor sub jge mov in and mov jmp inc mov inc dec stc ljmp movsb cmp cs adc jb xor and je xchg cld and adc aaa jo lcall jbe test cmp dec pushf xor dec add push mov lret or mov add clc mov dec (bad) pop sbb push in jle mov cmp shrb movsl sbb jle lret jp cmovbe fstpt ret xchg insl adc mov sti (bad) cmp jg mov jne add sti xchg aas adcl pushf lea sbb bound rcrb lea push imul in adc xchg out sub std lea popa (bad) (bad) jl int lea adc mov mov add adc enter inc add icebp fwait mov mov (bad) loop dec push jo mov dec mov inc das jns (bad) or (bad) sbb and fisubr js jo push lods push dec (bad) xor notb rol push stos mov cmp lret pop or sbb repnz xor scas xchg rcrl pop mov sbb insl add idivb daa push out pand sarl incl xchg push xchg aas xchg sarb (bad) jmp xchg or or test pop pop pop pop xchg mov in jbe jg sbb pusha xchg push lcall stos lock mov imul mov imul psubusw xor (bad) sub cs in pop sub mov test out and or inc or das ret mov pop jge daa flds fmull mov or push add test je (bad) das dec jo call or jae ss dec lds mov mov (bad) lret je cmp xchg cs sahf ret pop ja mov es push cs inc cli pop mov mov popf mov xor cmpsb xor ljmp jle add pop cmp pop adc or sbb testb outsl ss mov push xchg cmp ja,pn dec sahf jg jb popa iret cmp ret add adc sub fnstenv cmp ss testb push stos (bad) rorb dec repnz xchg dec jnp mov mov dec mov shlb jl pop jle scas test pop cmpsl lret mov leave jno icebp and fnstsw std push xchg mov sub imul pop orl cmp loopne sub (bad) imul dec fwait pop xor fnsave out push cmp xchg ror mov aas jl (bad) adc jle xor shlb test lock add adc cwtl loopne int mov jge iret add stos into imul mov fisubl faddl dec or imul pushf jnp (bad) push test adc (bad) push mov sub pushf sbb lods lods mov insl fisubrl jnp mov test lock jne adc pushf sarb in mov push pop fwait incl imul ds jmp jl mov jle sti cmp pusha cltd lods imul packuswb iret inc std sahf std rcll std (bad) cmpsl dec jle mov or jg xor lea lock shlb (bad) sti scas cmp or push jle dec xchg test sahf (bad) dec sahf mov aas sbb mov aas jae (bad) lahf test lods pop lock adc dec or mov movsl out xlat in lahf lods jg cwtl mov sti loopne sarb cs mov ret mov mov lahf leave sti xchg push lods mov xor out inc mov or adc adc adc jg adc lret (bad) sub or rcrl push xorl fsts mov pushf mov stc in pop outsb sahf cmp mov aaa fwait rcrb xchg lods cmpsl mov (bad) in push stos jge mov xor movsb mov or push jl movsb add cmp test daa fldenv sub dec mov mov jle or out push push pop bound sub mov mov outsl add popa out cli int sub (bad) enter data16 lcall pop lods (bad) or xor pop cwtl mov adc cmpsb pushf sbb dec dec loope rcrl out inc push outsl insb push cmp xor sub sub mov lods push push hlt fistp imul (bad) in lahf xor lock out bound and ret in ret or inc (bad) incl imul and sbb loope pop sahf jmp data16 xchg jp lret (bad) xchg pop cmp xor (bad) dec fwait sbb cmpsb xor sahf (bad) push jg in jo in and mov add sub clc lea mov sub jbe aas mov jge mov outsb sbb xor dec shl jl push (bad) pop jg jnp add hlt mov add and mov adc inc mov inc push adc aas loope dec push mov ljmp mov lret outsl and adc inc aaa and mov popf jns jp pop push (bad) cmp (bad) jl jle mov pop aam adc out (bad) jbe sub (bad) shrb sbb add pop add xchg ret lds ficompl push add cs sbb jb cld in in cmpsl add mov fstps fsubs (bad) fldenv gs addr16 lock add arpl jle daa mov or sbb neg adc pop jo nop inc mov or pop mov push sbb mov jo mov (bad) push sti (bad) sub and pusha pushl sub sbb mov jns,pn xchg fwait xchg mov loopne ljmp incl dec pop cs (bad) (bad) std sub out lahf mov jge mov adc ret jno popf int3 inc call mov (bad) add cs pop aam mov test adc ret iret adcl xor jb jecxz aas mov push loopne jl cld repz insb inc cmp sarl loop lahf jo out or out sbb cmpl mov jo dec cmpsl movsb mov adc jle xor pop mov (bad) xchg inc pop gs mov (bad) popf sbb cmp daa mov mov pop inc enter sti fwait test mov jge inc xor loop mov outsb aas push andl mov lods hlt xor js add call enter jecxz xchg ja les mov std lahf or xchg cmp loop in dec ret repz xchg sub dec inc (bad) dec daa (bad) repnz add jo test sbb push std into mov pop ret scas sarl cmp (bad) (bad) mov pop push dec outsb sub aas add cmp add bound pop adc addps pop cmpsb stc xlat andl sbb mov and adc or dec push shrb movsl pop mov orl push loope xchg and outsl jne sbb cmp (bad) pop jmp mov lea inc dec add mov ret into mov fisttpl rolb fldl cmp movsl daa sar cmc mov mov dec not pushf je int xor mov xchg adc mov les mov pop or pop mov bound dec mov cld aad sub in sub loop data16 pop jl shrl fimul data16 xor mov loop insb loopne pop fild mov cmp pop outsl std push xlat rclb mov fldl fwait push (bad) mov int xchg addb out int and rorb cmp pop iret mov ds ret repz paddq push das jl outsl adc adc mov sbb cmp and inc mov popl sub jecxz std inc sbb dec stos adc dec insl pushf push or mov sbb xchg sbb popa push fdivrl (bad) cmp xlat cmp mov (bad) mov xor sub roll mov or gs dec push imul adc jnp add loop lahf in ja add add aas pop mov dec or xchg cmpsl fmull ds lods mov lret jno jp cmp in inc out inc out leave lods push xor add and ret jge add out nop mov mov adc (bad) jg fbld sub popa idivb mov fsubl push pop sub fcoml sbb sub out ret std mov jge cld mov xlat js lock inc jp fcoms iret mov cmp fstp aas jcxz mov aas ficom mov in dec popf cmc rorb out ljmp cmp dec adc cmc mov (bad) cwtl cli repz ror imul dec jge ret repnz dec inc jbe cmpsb adc icebp inc xchg add icebp mov and lcall mov jp pop push pusha sub lea mov xchg or add jne jl mov sbb mov xor (bad) pusha scas popf add ret int3 movsb mov mov pop jmp push ljmp sub movsb mov dec inc mov add shl imul jnp mov lret mov adc into mov into (bad) cmp add mov jg jp fwait shl mov js sti adc les insl mov aas outsl inc mov xchg xchg ret jb xor sub mov or push nop std fsubrl ret add xor cs inc (bad) sahf sbb sbb mov mov scas fwait xor xchg cltd jecxz or mov dec xchg cmpsl sbb movsb ficompl and cmp loop jae fwait adc cmp lds sub cld addl movsb (bad) cmp ret arpl push cmc arpl pop mov es loope sbb xor mov sbb mov dec das sti jmp loopne (bad) lock push gs mov lret arpl loopne rcll sti pushf pop movsb jo in in cmpsb test cmpsb push adc daa (bad) fcmovbe popa and mov mov push rorb mov push jmp xor fnsave mov dec cltd mov jmp sub aaa inc insl (bad) xor mov mov mov iret or mov rcr xchg std jns insb add inc sbb jb iret int3 lahf sub add movups mov mov pop repz loope mov mov dec xor mov or inc mov iret fwait jo jns,pn test js pop xorl xor jmp js pop push inc xchg cmp dec out gs inc cld adc cld push sbb std sti ret cmc sbb cmp lds lret stos push adc ljmp loope add or xor call jmp dec pop pop test dec jbe icebp mov imul or xor jo pushf add arpl and lret push or bound inc loop lcall push jg call aad add fdivrl mov jecxz pop sub sbb xchg jg add imul add mov push sahf sbbb mov jg mov and call mov out fidivrl sbb mov mov or mov fwait xchg or dec mov ja cmp leave (bad) cld int dec xchg mov lret and shlb shll cmpb data16 xlat push icebp adc adc int xlat daa int pop inc jecxz fstp daa std pop pop sub jmp lcall jo imul pop psadbw or ret cmp jge mov lea dec sub cmp cmp mov fistp jp cmp xchg shlb push bound add adc in inc sbb lret jg stos dec cmp jo int (bad) adc rcrb aas jo stc or jl add cwtl inc (bad) xorl cmpsl mov fisubr and aas lods mov xchg cli or repnz mov add popf (bad) push push cmp cld lcall nop xchg xor arpl fprem cld shrl lret mov ljmp push in rorb in sbb xchg int lods in inc dec pop mov cwtl and mov movsl dec mov (bad) subps pop xlat std pop xchg and cmovbe (bad) mov loope jb cli (bad) mov test add jo jnp xchg (bad) test lahf jno jle shl loope,pn mov adc pop ljmp in int mov adc jno xchg orl in cmp sbb inc inc or std and or movl jge sahf cltd mov or push cld jb daa push jp int xchg outsl aas mov mov movsb adc aad sarb sub xchg mov cmp out adc es mov xor push js mov cwtl or jnp sbb in addl (bad) mov cmpsl in nop or xchg les repz mov aaa inc xor push aad xor mov rorb xor and fistpll pop aas cmp adc pusha rclb gs lods cmc mov adc ja adcl aam pop aad int3 add lock push or push stc add mov loopne sti add mov in aaa cwtl in xchg jo std das xor clc movsl cld sbb (bad) jmp fldcw pop adc sub jle dec faddl push sbb dec cmp cmp push sbb xchg out sbb rol sbb outsb lods xor ss or mov sub (bad) jo aas icebp sahf lock cmp inc xor xchg mov jl xor adc pushf inc lods fsubp shll xchg mov jle cmp pop inc mov add hlt mov jp dec fwait pushf or xchg cmp mov cmp stc shrl fisubrl jmp jbe cmp sahf add sub leave and sti dec loopne mov or jle lret testb jb or cmpb add inc cmp mov mov sbb add add sti and loopne icebp mov fwait int adc adc sar dec xchg jbe icebp movsb jne xchg jg les xchg mov cli jle push cmp stos sti (bad) aad sbb aas sub ljmp xor (bad) xor add in cwtl test in pushf in (bad) enter fcoms bound (bad) mov sbb call daa push jb imul xchg lock and lods outsl lock pop mov cld mov xor mov push mov xor pop sbb add xor push xor outsl bound lcall jae sbbb push nop push (bad) jo lret data16 or dec inc cmp jle mov sbb stos lret sub mov xor mov cmp lods cs adc cmp insb or pop pushf sti cmovnp adc sbb std outsb pop xor sbb bound enter sub mov test push outsb adc pop add in push adc jge les imul jge lds lods dec mov cmp mov sub loop andl movsb sbb xorb jbe xlat pop xlat shrb cld jo aas lods pop push inc sub sub cs adc mov sub iret mov (bad) ds pushf cmp xchg shll jno pop outsb test jg aam adc test sbb decb dec add rcll call pop (bad) ds out mov jo push inc pushf push (bad) adc mov lret lock out and out jg sahf shl mov cwtl dec js jne pop (bad) loopne data16 fild (bad) scas xor jp adc dec push insl push call jecxz push dec mov enter sub cld das cmpsb rcrb mov mov loopne mov xor xlat and dec lret and scas sbb jb jp rcll idiv sub data16 or and mov jge movsl ljmp jno cld loopne outsl lahf loopne jg mov (bad) jg and mov pop adc (bad) les dec inc push cmp pop mov std cld pushl inc xor sarb adc push std hlt sub mov sub lahf cld nop xchg sub push xchg in fwait and mov dec leave and mov inc push (bad) and iret sub dec jg pop jmp js leave mov lret movsb imul popf mov add push xor xchg frstor sbb lea add mul pop jg push mov mov fwait or cmp xchg mov mov push movsl jo cwtl stos nop mov movsl mov mov cltd cld fwait ret pushf dec lret ja sti and mov loop lea stos cmp lahf sti mov add loopne mov inc xchg ljmp mov mov cltd pusha push cmp int pop js cli les popf xor stos cmp mov fdivrl and mov js push das mov lret inc pop cltd std lcall (bad) dec xchg nop or ljmp cmp or lods mov push add push das orl sti (bad) dec or stos sbb lcall xor das subl pop es sub ds sub mov pushf sub jmp mov sti lods cli mov lods ljmp lods lret lods mov adc pop push xchg lcall (bad) sti add std fwait push xchg pushf imul inc cmp mov mov sub test push sbb pusha das and mov das into xchg adc rorb adc mov lahf xor mov lds sbb cld je in fwait int3 (bad) out xchg xchg cmp mov sarb test in into or sub (bad) push jp xchg sbb fstp ret es or pop imul dec or (bad) cltd jb outsb dec mov pop mov das dec addl jnp and loopne xor push fldenv cmpsl addr16 imul in insl cmp fsubrl adc cmc mov mov mov lea (bad) pop (bad) dec pushf sbb (bad) jmp jle fnstcw add test mov mov outsl jle xchg imul lret pop shr jbe fwait jl bound sbb sti jle call dec mov xchg in aaa mov imul shl jle rorb stos adc cmp in xchg movsb loop lcall add insl push movsb cmp mov mov inc pop mov sti xchg jp xor add sbb mov cwtl jno mov lea pop lock aaa cmp push jl lret cli js data16 iret lods sbb and nop jmp mov mov mov pop cmpsl xor ret add pop rolb push sub (bad) sbb imulb lea push call and popf addr16 (bad) hlt add mov and sbb lret rcl das rcrb jg jecxz inc popa in scas mov lds or inc arpl js pop cmp (bad) int xchg mov cwtl sti lahf sub jno ds xchg js jbe pushf cmp push mov enter loopne sub aam and xchg leave xchg std cmpsl sti dec mov mov sbb mov add cmp mov pop mov iret dec mov jp mov loope hlt loopne adc rcr push jns ljmp pop jne jb jg cmp mov bnd cs mov or ror jp push lahf stos sbb xor dec jne decl (bad) xchg fisttp cmp mov pop pop jae arpl (bad) mov push cmp xchg insb mov push sbb sbb sti insb sbb pop mov adc mov push or int3 dec cmp jnp rorb ss test mov and aam xchg loopne mov lods movsb mov mov sub lret hlt jb push lret xor in push lock js adc test ret mov clc idivl adc xchg push mov popf mov iret cmp lahf mov fcmovne push hlt mov in jge lock lods push pop jne js out aas jo add (bad) icebp push lods test mov inc mov xchg sti push ja imull jbe es insl inc movsb (bad) ret jg jp push movsl pop in insb ret (bad) jo std adc jo out dec xchg or adc jge xchg imul push mov andl mov sti outsb inc ret adc popf cs lahf mov ljmp (bad) dec rorb mov pop mov sbb in sti (bad) jmp pusha scas cmp pop fisub xchg mov outsb adc push movsb jl mov or or fdivs icebp (bad) mov adc jnp lock roll shrl xchg sbb inc ret testl jp mov imul and test shlb test push push adc mov inc mov insb push inc lock mov push cmp notl or insl mov push aad pop adc inc clc push arpl (bad) out dec xchg and dec pop cltd xchg (bad) in sahf adc cmp mov aad scas das push inc lahf vmovdqa out lods push lods rol and fs ret dec add das and jge mov loop mov lock adc mov enter or in or push mov mov ret inc pop scas cmp push cmp sbb sbb int3 jge pop (bad) mov mov jb cmp mov (bad) cli jle xchg jmp mov mov jnp jge jns std loopne jecxz iret iret sub mov jae ljmp sub aam pop pusha sbb ja loopne or inc or std mov add add sub mov jmp and repnz aas mov jb iret (bad) (bad) xor push inc int3 mov lcall and cmp push adc fdivrl out mov pop sbb nop gs fwait pop push andl (bad) xchg fnop (bad) in sub stos mov test xchg or xchg stc or test aam sbb (bad) repnz iret das sub fldl inc stos ja test sbb (bad) mov sarb std test in pop test xor repnz or dec lahf mov and imul repnz jg fs cmp lods lock mov adc lea mov rcr (bad) je push test scas jbe mov mov xor adc xor rcl xchg fidivl lock push sti iret aaa ret cmp jns dec roll pop push fisubr in jecxz movsb or xor xchg pushf sti sbb push pop inc adc nop mov sarl dec fldenv push gs (bad) xchg xorb arpl repnz push dec pop jae rcrl xor or pop clc and or dec subl cs jae jnp xor adc cmp jne xchg inc test lock pop sub xor sahf pusha dec aas lock std sub fistpll pusha lahf out mov inc test and lea push es loopne jmp inc or dec mov lret dec ret xor mov mov mov add xchg dec add cmp pop mov pushf or popf cmpsl dec and jge ret cmp or inc jnp jl dec (bad) mov push xchg int3 sbb pushf iret xchg insl jne jp dec mov (bad) fimul cmpsl jnp lret loop cmp test in push push or pop add ret mov sub pop mov stos mov push sbb sti jg fstpt add cltd jo pop inc stos lea (bad) or xor mov pop inc int3 in out int3 imul mov and ret rcrl or outsl or or sahf mov faddl call inc mov add (bad) mov inc in in lahf mov add insl sti pushf dec subl arpl test sbb pop scas out je popf mov push dec mov mov stos (bad) fs int3 push add mov push scas and out mov sar loopne fiaddl and pop imul std repz pop push sbbb lods adc inc and sbb xlat push cmp in jns jmp ds pushf ds push ret stc stos (bad) mov sbb sbb imul jo push jno sub scas insb cltd lahf sti stc stos jle push jl rorb mov mov cmp leave and sti dec or mov jmp inc in aad int cmp jnp fcom pusha push and adc jb mov jmp xor out mov test test pop in sub mov and inc std mov dec push out (bad) aam cmp insb jns jmp sbb enter clc jb push fadds adc loopne fisttpll fistp adc (bad) jne jnp mov or inc lods in fxch add mov sti aas and inc test insl add inc or addr16 mov sti dec (bad) (bad) mov lods mov mov iret insl pop insb jp and and les jae add add pop sarl or push mov sub bound adcl sahf shl rcr xchg dec jne pushf arpl lds or adc idivl add jecxz push dec enter prefetch sbb (bad) in mov nop mov sahf or jle sti pop dec sub das dec repnz jmp mov fcoml jo pop xchg cmp out cmp decl cmp mov pop and cs divl push cmp push leave pop jmp loop and ret lret addr16 pop push adc inc sbb pusha (bad) jle pop lock repz das mov inc sbb or (bad) mov xor adcb (bad) push test or lcall notl cmp arpl cmp (bad) repnz mov lea (bad) fnstsw std dec in rclb aas sti (bad) sub pop mov lea push test add jp sahf aaa xchg (bad) sarb rcrl mov lds scas rcrb insb aad mov add ret push dec cmc std inc out jge pop inc pusha shlb js movsl bound jno (bad) mov test int call mov sbb dec xor lods fldenv jg sahf negl jecxz jecxz xor outsl (bad) mov adc lods push arpl dec mov jo jecxz mov push cmp cmp mov inc mov sbb dec sbb rol dec lods test cmc or xchg jp rcrb hlt clc in addr16 arpl sti aam push jb dec stos in and pusha das leave push push xor scas jnp dec inc pushf sbb push xor push jno sarl mov adc daa stos push imul and push rol es popf mov pop sub rolb mov push mov add lods bound mov nop movl and mov sbb push stc dec lahf xchg outsb scas imul and add push mov inc adc subl (bad) jb pushf test das jnp stos sbb leave lock lret lret mov pushf xchg mov popf mov popf call out mov or inc xor std (bad) scas scas mov or sar mov or cltd xor int3 outsb movlps das xchg or js mov fild das push mov xor ds push or cmp xchg and pop ds movsl scas fwait inc mov sub add sub adc adc xchg xor pop inc stos sbb hlt cmp (bad) jbe clc enter cmp lahf dec mov jnp ds popf adc stos mov sub out pop and xchg mov sub push dec adc jmp adc pop outsb pop and ret cmp mov cli push push mov and or pop loop lods mov call shrb xor popf out xor cld dec call cltd cmp (bad) dec (bad) (bad) dec test pusha mov inc mov daa sarb stos jp fistp mov call xchg test arpl push das fwait stos (bad) cld lock loopew cmpl mov cmpsl xchg push (bad) popf xchg fistp cmp add repz outsb bound push and cmp xchg fstl xor out fistp mov imul jmp pop dec cs (bad) jae lea mov mov jmp sti dec jg loopne mov lods out dec lret mov dec mov sbb int in mov lock push outsb cmp pop jl sbb or cmp add mov jmp inc or mov jb mov andl mov and jl popf rol (bad) cmp xor xor inc ret ja dec fmul lcall (bad) stos sub int into cld xchg nop sub or add mov cmp mov cmp or or cltd stos jno aas inc jb,pn dec push cmp mov das lock jb mov icebp cmp lahf pushf push sbbl push mov ficom (bad) fistpll popf xchg das adc pushf xor lret loopne in (bad) std imull mov in sarb stos jbe mov inc (bad) add push mov dec ds rcrb daa lods jle inc jo xchg or dec in std adc push push fistl test paddsw mov xor dec dec mov pop jp imul inc lahf xchg ss xchg add movl lods adc xchg add mov jnp in lock lret mov pop popf test push cmp ja cs jecxz das arpl std mov mov outsb jge mov ljmp jl pop cmp add fdivrs ret xchg mov repnz push mov insl sbb clc pop xor push (bad) cltd mov sbb cmp out dec jg fnop mov test mov (bad) mov or call (bad) sub popf add sahf push jae or std and xorl sub xlat cmp (bad) jne dec data16 jmp outsb pusha xchg add fucomip faddl fwait mov testl mov fs int3 hlt lods rcrb enter mov pop ret and out sbb sub cmp or test and adc cmp mov xlat ficomp jnp cmpsb sub (bad) sub or and adc int or fnop fcomps xchg lock cmpl sub fisttpll or sbb mov push (bad) lds leave (bad) cmp mov imul xchg je dec mov cwtl jp inc (bad) (bad) cmp xchg ja adc cmp mov aas repnz adc sti imul push inc loop jmp mov sub fwait dec mov adc mov and clc outsl jle adc or neg sub sbb mov cs and out adc ds mov lar aam jle cmp rcrl pushf jbe push ret rcrb insb mov lea cmp test adcl nop mov je jnp mov xor mov mov inc mov add mov loopne lock lock sub push dec pop sbb jp pop insl in div or (bad) hlt mov inc cmp mov pop imul jl inc jge aaa xchg call push or cwtl sbb pop sti add notl jg mov jnp jo jo push (bad) std sarb xor sbb das mov enter cli int sti push adc (bad) and add test mov inc adc mov das cltd call and jle pop imul push rclb je,pt and cmp jnp rcrl and (bad) test rcrb es rclb es pop shld jg adc pop imul mov dec (bad) mov inc mov jnp cs hlt and xlat dec daa (bad) iret sbb pusha daa push aad add (bad) loopne xor pop ficom ret jl add mov lods sub ret cmp mov inc movsl mov rorb (bad) adc jae dec das dec mov jl sub xlat aam jae push jg jmp push xchg je mov adc enter pop jecxz and xchg push cmp push movd xchg dec mov lock pop repz jp fwait jmp aad imul xchg daa push int3 jg out out pop (bad) lods dec jle and sarl and test xor push sbb mov mov xchg adc bound cmp add aas xchg insl push scas popf nop lods loop add repz jle bound insl cmp jge (bad) ror insl add pop dec adc test sub pushl inc jp pop mov call (bad) in jae pop nop push sarl iret fwait scas movsb (bad) xor mov addr16 out seto ret xor add es mov aad inc xchg nop push adc add adc xor das sub inc iret test push push and rol cmc sarb in sarl inc push push pop cmp (bad) stos repz pop aas pop push nop or scas fs cmp mov movsl mov cmp lahf mov imull in pop mov pop pop fistpll and jmp mov jp ja test cld xchg rcll sti loope sbb aaa lahf ficoml jge cmp or xchg cmp nop rclb mov rcrb addr16 xchg sbb pop roll lret loope sub into (bad) lock jecxz cmc or mov push cmp divl mov jo push add dec das arpl aam mov push out jle push add cmp nop mov cli push ljmp xchg fwait mov and aas xchg enter xchg jbe imul xchg mov arpl jecxz outsl xchg fmuls mov pop aaa (bad) out std jnp pop test pushf nop pop mov lcall movsb cmp pushf (bad) sti sub mov cli mov adcl hlt std insl (bad) dec cld push (bad) jge inc fnstcw cwtl push aad out xchg mov cmp popf pusha pushl mov xchg les jl cmpsb in leave loopne sub push mov (bad) mov jg (bad) into xchg ljmp xor sub mov mov mov adc mov jo mov lea sbb cmp icebp dec arpl sarb jl sbb inc sub leave out push dec sub sahf int3 in (bad) pop aas ljmp imul inc imul sbb jp (bad) xor loopne jo fwait mov (bad) pop or adc push sahf scas mov jo add lahf cmp sbb sbb sub push mov push xor (bad) js inc ret test sub dec cs mov es mov pop stc in cmp pop popf cmp dec jl cmpl sub and adc lods adc popa dec insl jo std pop pop js and jg mov adc lcall jge or out je and jo fimull sar sub fwait jb dec or loope mov sar (bad) fcoml sti ret lods mov mov lret nop jnp adc cmc cs pop ret out idivl mov and imul lahf fstpt sub inc rorb ja mov in dec inc inc pop cmpl jp pusha or cmp mov ret mov fwait mov mov inc loop inc stc fnsave insb jle or xor lock das mov rorb cmp data16 call add push ss jo and xchg sbb mov (bad) pop test (bad) dec (bad) jnp roll add mov (bad) push popf xor inc inc addl mov mov repnz loopne pop sahf mov mov imul aaa jecxz out or fild (bad) jg lock sbb cmp mov fisubr xor xchg cmp sti lret fist dec lahf in or fst mov (bad) mov loope,pt adc push xor inc mov outsl adc lock mov js dec dec pushf adc jmp lds lods lret (bad) ret pusha sti int inc cmp mov pusha adc ds fmul test mov inc xchg bsr sub jnp or aas xlat push jge jmp jns or jnp push xchg movsl lods les lds or lock aas sarl (bad) rcrb xorb inc por sub sub dec rorb or pop (bad) neg mov (bad) icebp or pop mov aas test xchg xlat pop insl inc imul push sub or mov sbb or (bad) adc dec mov mov in imul mov mov adc mov pop inc lahf xchg sbb cmp loop ret movsl sti fsubr mov lods jp adc (bad) in pushl (bad) xor lcall sub and or cmpsl jns jle jno jnp arpl sub inc enter stos mov jp dec outsl pop jl cmp lock ds daa cmp aad call das fwait leave mov pop insl mov rorl bound add mov iret push sbb ds jg mov shrl or jo and popf inc mov outsl addr16 or test enter cmp movsb pop test iret cmp jle jae out or test in jg mov jbe mov mov out je into sbb push or sub rol adcl sub xchg stos xor in pop es pop dec mov lahf mov aas pop popf loop movsl bound adc sahf xchg loopne fstpt insb imul xor scas out mov outsl jnp jmp (bad) bound pop lods scas incl or pop sbb mov (bad) aaa loopne jmp mov insb (bad) in xor enter sub call imul lahf push mov (bad) imul nop xchg shll jg iret int3 dec fdivrs cmp push and pop stc push jo xlat push aam (bad) cld mov pop mov dec rorb mov (bad) call insl jb pushf mov les lods or ret movsb cmp ret fcmovnu iret and ret mov or push pop rcrb (bad) in enter scas scas das jge mov (bad) in mov mov pop lds adc xchg adc adc push div pop xor bound adc dec or daa shrb inc add pop inc adc or inc or js sub decb incb cltd mov testb ret lds or adc (bad) call dec push mov mov jnp push dec or mov jbe add jne cmp fcomip pop es outsl jmp add rcr adc imul jmp jo adc sbb out and adc pop lods pushf jle in add imul jnp fwait (bad) cs mov ds cmpsl adc xchg sahf cmp loopne fwait pop aam and jge jnp mov dec inc repz xlat pop mov jecxz push ja or hlt sub or mov or das adc sahf mov (bad) jbe xor xchg push jl sub rep sbb lds cmp test pop mov hlt or pop push ljmp arpl xor mov cmp mov mov jmp stos out (bad) or fwait (bad) jle jo mov nop pusha sbb mov mov insb mov out jb jle jg push cmp and in jge call in cwtl xchg sahf mov jmp adc pop mov aam mov adc imul pop mov lcall mov outsb fdisi(8087 jo cmp dec es std lret xchg sti int3 jge pop jb cli (bad) out cmpsb dec (bad) jmp cltd mov and repnz lods mov mov inc cmp movsb sti jmp sahf mull dec push sti lahf cmp lahf mov fwait mov mov or fwait push inc xchg int xor sub jecxz test daa pop lods push sbb inc mov xlat das mov test xor das test or (bad) das push pop pop jno mov (bad) dec aas (bad) jg je fidivrl xchg adc inc subl cmovs ja jecxz hlt fwait pop jle xchg mov mov cmp fldt movsb or xchg pushf inc jnp adc daa mov mov ret jnp fucomp add notl cwtl aas pop in stos lcall pop mov (bad) sub jbe push std fnstsw xchg push or add insl stc test pop adc fstl cwtl add pushf in xor insb and add sbb dec jmp ficompl outsl outsl jmp push cltd xor add fild sti adc pop (bad) rolb adcl outsl (bad) pop push xor lock xor jge sub lock xor ds lcall outsb mov dec int xor int mov push inc jl cmp xchg dec jnp mov or inc mov inc lea mov rolb test rcrb loopne jnp add pusha sahf pop mov adc jp add add push adc pop cmc xchg mov mov push push xchg shll pop add sti stc cmpsl shrb fildll mov sahf pop flds add (bad) xlat js shrb mov and adc push jnp push hlt mov rorb or cmp imul pop (bad) mov outsl or cmp pop mov mov pushf jnp cmp jnp jge cmp nop push and outsl aaa push pop jg mov scas and jecxz int sub mov sarb and out lea xor jg negb in mov aas iret in movsb sub xchg mov jae cs adc ret ret (bad) mov jg loope out nop add lods lcall sbb adc fsubrs and mov mov add pop mov push daa in les imul mov fwait mov and inc (bad) aam add or test mov pop push enter xlat ds lret jle pop pop std gs pushf into (bad) pop sarb xlat in sbb shrb cli int loop enter pop push jbe cmp mov ljmp push fdivs xchg in jo insl jmp insb mov and out and add mov fimul fsubl xchg iret push outsb movsl push xchg and mov add clc (bad) loopne jle fwait and ss test mov imul and dec xor mov rorb or xchg lea stos lock and sbb jl cmp jl hlt fimull jl and xchg scas mov fstl dec sbb mov xchg mull add and xchg jo inc dec bound movsl mov (bad) (bad) repz mov ds ja add jae add sub loopne pop outsl xchg jl mov les pop lahf or dec pop (bad) jge cmp sbb lcall (bad) aad push cmp or ljmp outsb fnop pushf pushf out pop cmp pop add es and pop lea xchg hlt int3 and cmpsb mov mov rcrl push cwtl mov ja nop fsubr aam mov adc lret (bad) cmp lahf inc enter gs cwtl push dec xchg xchg sbb mov (bad) and xor repz and mov inc enter ret cmpl pop cld or es (bad) sbb lret shrb push jge fildll sahf mov test es jo sbb shl lret notl int3 nop xchg mov gs mov movsl lock pop xor push (bad) or sti or xchg int fnop mov scas out jl sarb idivl stos or pop lret jne outsl or add jbe icebp stos sar cmp push daa rcrb cmp pushf aas cwtl imul or cli sahf clc in rclb dec aam xchg and es xor repnz jnp mov (bad) mov mov cs rol xor sbb clc je mov js mov popf or sbb cmp jg pop insb pop adcl xor cmp daa mov ds mov imul dec lods xor popa fnstsw xor imul (bad) fscale pop les je mov and scas lret xchg lret sbb jp jle (bad) rcrb (bad) cmpsb xchg pop mov outsl or sub lds inc mov push into mov sarl fisttpl push test pop sbb aad mov inc sahf rorl es and es pop or mov or lcall popa aaa frstor or jns xchg pop and mov fsubrs mov mov cmp xor daa (bad) dec adc lcall mov mov cmp pop or dec mov hlt add mov or cmp sbb add dec xchg mov jae sub xchg adc cs cmc dec inc and push addl jo pusha push xor pop divl (bad) mov push cmp stos iret mov stos iret or mov push mov mov jno ja scas out subl cmp icebp lock test int (bad) cmp or imul fadd rcrl rcrb fsub mov test add or shrl int3 cmp ja loopne inc jecxz aad sti popa pop leave lea fistl dec xchg pushl lods mov cmpsl pop arpl movsb xor popf add cld cmp fildll daa hlt shl outsb dec mov in test jo jae and xchg push and mov sbb fist xchg cmp or jl or inc mov mov push xor and lahf mov fsubs outsl roll in add sbb fldl pop jle jnp jno or jg sbb mulb outsl out sahf mov mov sub sub xor ficomp aam sarl mov sub out (bad) sub push or mov sbb into mov scas or xchg fwait lock insl cmp pop out shrb ret lock (bad) cltd sub stc pop (bad) jge in jp mov dec ror ror push mov xor stos fwait sub mov mov jmp push leave dec jp in shlb (bad) jp sub pop mov sub sub daa addr16 pushf sub add aad add or cmp cmp bound lret xchg sbb movsb cmpsb or and lods sbb or mov xchg je cld push pop pop mov jge mov test and dec (bad) lods shlb xor inc icebp in pop enter jge test jb jmp lds lds outsl push pop mov out lock sub jnp ret cmpsl or (bad) dec sbb hlt push lcall dec cld arpl pop das xacquire call mov mov lahf cmp cmp les test shrb stc mov pushf dec imul mov loope cmpsb lret dec adc cmc nop fcoms subb loopne adc lods clc ficompl or lods call pusha cwtl jge xor lcall adc mov insl sbb cs xor sbb shlb jno scas pop push or fistpl jmp pop fdivl into aas xchg (bad) into add jns xchg fwait adc jg xchg inc mov dec loopne xlat pop or aad out pop pop push add sub pushf lret (bad) int enter mov out aaa stos sub lea xlat lock movsb mov dec test xchg jmp ret aam sub cmp mov mov push cmpsb shrl mov pusha mov mov leave enter xchg mov cmp jnp mov aas leave mov add cld lret adc cmp fisttpl ja lea add sbb mov or xchg movb orl sbb cld mov cwtl stos add dec pushf push pop out lds mov imul adc mov xchg sbb jl aas cld mov adc xchg in mov xchg xchg lods les or mov mov andl cld rcr cltd andl cmp jp ror add jnp or aam cmpb (bad) movsl movsl push enter test lea test jo les sub or jae in stos in pop out std pop in sbb insb lods std leave std inc std jae std stos std pop out in pop std sbb insb lods std leave std inc fnsave (bad) je cmpsl cmpsb mov js stos pop fild push iret or aaa loopne lock nop add stos sti pushf push iret in adc cmc popf jecxz xor inc dec adc aas mov mov mov xchg cmp jecxz nop lea lea add fwait outsl xchg mov cmp das sub mov setle cld cmp ret mov sbb cltd mov (bad) scas mov sti mov rcrb in rorb stos mov adc inc (bad) scas pop (bad) repz cmp jg mov (bad) cmp adc mov lea pushf outsb pusha aad xchg ret push sti stc add mov mov (bad) movsb lret shr out rol mov add mov pusha das stos movsb mov mov push mov xchg fiaddl jecxz mov je in and cmp and insl loopne jnp pop dec xchg pop insb jo xor add pusha pop push cmp pop pop inc jp jae lock les test inc sub pusha sub jp inc or dec insb xor lahf in adc pop dec pusha and adc dec push lret cmp out lret and mov sarb mov pop mov (bad) int cmp iret cmp jno das ja mov pop das pop push dec enter push pop mov mov js inc aam or pusha pop push scas mov xor ja mov fsubrl cmpsb popa adc (bad) jo xor int3 imul inc mov and sub or dec dec mov pushf mov (bad) int cmp sub push mov fwait inc je mov cmpsb or rol lock adc mov jb outsl and aam stos mov cmp or cmpsl xor call xchg add jl int pop add scas popf jb je pop push lods gs loopne imul adc jnp add push inc and cmp mov ret int cld sarl jo test movsb imulb ret mov inc and inc cmp je fcomi jnp hlt or jne je xchg jo loopne pushf push jns mov jl xchg fnsave shlb aad xchg aas mov fs fistpll xchg mov cmp add jbe mov jne pop sarl cwtl sbb mov cmc (bad) or pop push sub dec ss push test xchg xchg lds jg in or (bad) paddb (bad) fildl jge repz inc (bad) roll mov lods (bad) mov ds pushf mov mov ficomp lret jo enter cld jb (bad) call dec lods push enter (bad) out mov mov add popa mov shrl (bad) (bad) adc pop mov add pop mov or add out ret mov pop stos movsb add bound mov movsb bswap arpl or arpl dec fcmove inc fildll pop imul mov js test cmp lcall adc mov iret int3 lea cld add jne mov fdivl test pop jl sub sti ret pop (bad) mov data16 cmpsl outsl sbb mov push push out mov pop int shlb xchg mov cmpsl js hlt cmpsb pop adc imul adc mov pop ret rcll int inc xor frstor out cmp inc stos mov sbb hlt push adc or les in and movsl mov aaa jecxz and test jnp scas mov nop inc stos or (bad) pop lods lea add mov (bad) fwait mov scas daa jae xchg (bad) sar in mov les adc jle mov popf arpl pop aaa dec xchg xchg cltd mov into push sbb cld fndisi(8087 and sbb or add or mov pop mov mov (bad) lods cs lock int xor mov popf leavew div jecxz sti mov ret sbb pop add cmp add mov or mov lret mov xor mov subl test mov clc mov inc add jl or cmp sarb je mov jmp insl push inc test and push push jle sbb outsb mov pusha in decl inc adc movl mov or call inc (bad) and mov pop jl mov out adc add sub das xchg out lret ret push jg out mov sbb push arpl sbbl sbb lea popa cmp adc or fdiv mov fwait pop lock mov test cld xchg push jmp fldenv scas cmp das shlb rcrb movsl or cld xchg cmp imul mov push sbb cmpsl orl jecxz enter add or hlt jne add lret xchg pop aas push addb or and stos out adc (bad) fsubs enter mov push sbb loop xchg push mov je movsb and push jp jg test inc (bad) inc mov aaa jnp in add mov sub mov ss insl shlb dec dec std or adc jne out lret dec push mov adc ret sar mov dec jae jp sti adc shl leave lock pop insl or arpl pop out mov mov sbb hlt (bad) icebp push push add xor push xchg sub sahf lahf adc les clc and ret pushf jae sbb mov push xor add or nop mov mov sub cmp cmc jmp enter add nop mov dec adc (bad) gs cld fildl ds adc sub cmc ret std or (bad) pusha xor xchg clc scas pop cmc icebp or adc pop int3 adc addb and add lea loopne mov xchg jnp cmp out sub add jnp in negl (bad) fistp add notl (bad) fistp cmp or out or shld adc lret ret xor adc iret imul dec jecxz adc sarb xchg xchg ds pop ret sbbl inc xlat iret arpl mov mov movsb pop cmp lds lods push or popa add and jge cmp lea ficomp pop fist nop jge xchg jecxz or add out sub call lret or orl cmp xchg shrb pushf lret (bad) xchg fist jl cmp movsl xchg int3 jne pushf cmpsl rolb or mov jo add mov ja adc pop mov or or jo push push rol lods mov fwait xchg loopne xor sub lcall pop ficoml jle fidiv lods repnz negl pop push cmp (bad) push mov scas pop rorb imul adc jp pop cwtl insb cmpsb rcrb repnz in repnz shrb (bad) pop cmpsl fbld jp cmp pop sti mov sbb and mov xchg push fidivrl das cli lahf sti jo pop sarl cmp lds daa das shrb adc dec (bad) insl loopne mov cmp scas cmp dec jle dec sti mov xor icebp out pusha arpl mov and cli mov pusha add das add adc sub int or mov mov lea xchg mov add jle or jb mov mov jecxz dec sti (bad) hlt adc data16 int3 mov push ret mov lret lret lahf outsb or mov idivb adc sub test add cmpl hlt ret adc pop cmp ja daa mov popf fisttp fsubl shlb (bad) ljmp and cmp (bad) fild test jnp pop int mov hlt or outsl pop adc iret jmp or pushf int3 push mov fwait (bad) dec pop mov xchg lcall xchg xchg and jle test insl or dec push push mov inc aas cmp and mov neg cld pop pop pop xchg loop dec mov rorl mov mov xorl xor test adc iret or test mov jl xlat jecxz jnp cmp push or xor ljmp lods leave pushf ret cmpsb mov push lret cmc add or ljmp add (bad) and dec imul add test cs add sar insb inc dec xchg inc dec cmpl pop (bad) sahf enter test sahf pop pushf (bad) aad add int3 subl shl pop sahf jnp xchg (bad) movl dec subl ror sar jge sti or mov jg scas shrl cli mov das xor add sbb xor mov mov or loop ret jl les mov cmp ljmp adc sbb xchg mov inc sbb fnop and mov in ja hlt pop push jb cld or neg and aam dec inc xor or inc aaa inc cli push xchg and sbb lahf sbb pop icebp cmp jb shrl mov cmp lcall jle cld xor mov mov add mov stos jecxz mov mov (bad) in mov sarb jb add cwtl sub stos std stos adc pop push sbb jle not jo pusha stos push stos pop adc cmp jae pop jnp mov (bad) and xchg aas cwtl or sbb fsub enter xchg icebp cwtl pop lahf sbb std or or lods lock push mov cmp fsts aaa lds in leave pop mov in push lea push outsb adc cmp std sar xor dec mov cmp pushf lods sbb inc adc insb mov negl enter or ljmp fisttp sub xchg cmp dec mov outsl fldcw in mov addl lock sbbl or (bad) arpl pop dec mov sub mov sbb sbb nop ljmp pop jge ds jns dec jmp lahf in inc stc xchg mov jno sbb out ss dec jo xchg or gs (bad) sub mov inc les (bad) sub push and pop fwait mov or lahf repz subl movsb push repnz rcrb das add pop lock adc lods and cmp daa loop lock mov mov jecxz push mov in xchg mov push mov and cmp mov dec (bad) mov loopne cmpsb sub andl iret loopne lret sub xchg andl stos cmp xchg (bad) adc les xchg adc inc sbb fsubs insl pop add or call dec mov mov or pop (bad) int3 lods imull jmp roll fwait sti adc sbb and and jmp fwait cmc cmpl add clc mov cmp mov repnz ljmp lock sbb imul push movsl adc lods mov out (bad) fs mov test adc aas cmc adc xchg hlt or jg fsubrp sbb lods xor xor jg xchg fsubl adc ljmp out pop xlat test jge push cld loope and rclb pop popw daa or mov xor push repnz aam ficoml cmpsl jnp stos jecxz sti cmp fistl pop jmp in inc mov xchg or add int call and (bad) lahf imul xor add stc sub fdivs mov mov mov mov popf pop std cld hlt jmp mov dec fidivrl (bad) cmp cmpsb addr16 mov jl (bad) or sbbl xchg cmp test or imul cmp mov andb adcl mov xchg lahf push pop push add and mov dec ret jo mov (bad) out pop daa mov movl or movsb and xor lods xor mov inc or push test mov or ss pop mov jnp or mov sub mov shrb inc sub mov into mov out push (bad) dec mov dec outsl or jg (bad) ror les cmpl mov adcl pop xchg sub rclb xor push pushf jo lahf jecxz imul adc add pop lods test sarb or xlat (bad) nop loopne lods dec fimull aas jge sarb xchg dec cmpsb dec and idivb cmp (bad) inc and data16 or or and xchg mov jnp and push and push mov repnz lds cmc xor mov mov (bad) xor ds mov mov cmp dec pminub fdivrl mov stc mov inc aad xor sub (bad) cwtl cltd ljmp inc jg aas inc test jle pop mov movsb aam mov pop loop dec and or imul xor jl dec xor lea or sar dec movsl clc insl cld sub cmc or ret xchg les imul dec lock lods lea orl fwait sahf mov lock dec xchg insl mov or or incb rorl outsb sub push sub jle mov dec pop pushf add (bad) sti xor ret push push add mov out call mov xchg aam fwait jle xor jl (bad) mov mov cld push shl sbb int xchg aad fisttpl push aas cld dec and or test loop push mov xchg (bad) ret cltd sbb mov mov ret or inc xchg jbe dec push lret sbb dec jns out add dec cs jb pop fistpll test cmc jmp push rorb adc cli mov std add (bad) dec pop cmp je mov fistpll ret xor jns xor js rcrl nop or jb pop adc add in mov aaa mov repz mov pop addl jg std in roll (bad) les (bad) sbb cwtl add je mov or mov mov out adc les (bad) je jns insl pop or mov sbb and mov adc mov test insl loop adc dec fidivr jae lods push outsb orl jnp xor xchg fwait imul mov mov lret aam movsl or jle outsl dec rorb repz jge (bad) mov ret popf mov mov cmp xchg ret aas sub adc popf subl push dec out lret pop inc dec mov adc icebp sbb mov mov cs outsl ret dec sbb push test lods pop cmp cmp std mov adc out clc or lahf xchg push jle pushf push mov rorb dec push roll mulb cmpsl cmp sbb jb mov xlat mov cld fistp jnp rclb cmp mov aas sbb inc int3 jl andl pushf xor fildll test loope mov mov lods mov popa fstpt or mov jp lods (bad) cli addl mov cmpsl pop dec ja adc je iret xlat or pop adc xor cs mov mov out in icebp pop ffreep mov sub xor or jg and or rorl or push or xchg push adc mov add dec fcmovbe sub xor sub into gs clc (bad) push out mov xor jo icebp nop pop fsubrl loop pushf es lods add outsb loope adc sti or mov pop sarb cs arpl outsl mov sub fsubr jne pop loope out inc cmp jo fstpt jg fstpt fmul jbe insl test jbe sti stc push add sbb arpl dec (bad) dec outsb ret cmp push push fwait add mov cmpsl mov mov cwtl int3 cmp dec sbb push dec sub mov push pop add cwtl inc or pop jle sub rorl dec ret add sub add sti xor jle adc pop jg ss add shrl push mov in (bad) lods sbb mov out sub pop cmp mov mov push andb and iret imulb mov jl sbb mov out adc jg loopne cmp inc mov jp xchg mov jle enter sbb rcrl mov ds mov dec ss aaa mull sti fldt test das mov (bad) sub sbb pop bound aas fisttpl ja,pn sub mov popf inc les es test lock push nop mov outsl pop loope stos sbb lods (bad) xor cs ret pushf sub jp (bad) lret lods cmpl into (bad) mov in pop (bad) cmovge mov sti lods inc inc pop movsl fsubl xor mov imul in lods add xor mov push jl jle sub sbb mov cs dec or fstps adc les add or mov in daa out mul getsec pushf cmp mov jl mov cmp jle cwtl (bad) (bad) sub (bad) xor enter sti fadds push pop clc insl jnp int3 xor cltd xor insl lods rol jge or mov and cld frstor xchg lahf stc add leave js dec (bad) cmc sbb mov dec aas xchg jmp cs pusha mov cmpsl daa in (bad) int sbb push popl mov movsb fdivrp in in mov lea sub sub test lahf movsb jge and sahf mov popf jns pop add mov sti daa cmpsb mov ret test ret stos sub add push imul xor sbb addr16 or push movsb cmp adc sub test xchg idivl xlat pop int mov jnp dec stos or test sub idivl xchg gs push adc sub outsl shrb icebp jns mov ljmp addl iret nop jae pop xor (bad) negl jp add pushf fwait mov inc scas fwait push and repnz lods mov and mov mov add jne mov add pusha add push mov xchg pop sti inc sbb fadd dec jle sahf inc stos xchg xor pop lds lret mov sbb dec cs aad jmp xchg outsb movsb mov sar pop add sahf pushf sbb jmp loope inc cs in mov or xor fstpl and loopne outsb cwtl shlb pop fwait adc sbb sarl cmpsl fs (bad) cmp pop (bad) in mov (bad) ljmp (bad) loopne mov gs pop mov iret pop sub sahf (bad) mov mov jb or mov fnstsw pop inc cwtl sti (bad) pop pop or pop iret (bad) and mov movl fist jecxz movsb push (bad) mov aad movl pop mov (bad) jne pop cld das popf es test lahf mov push add fdivr aam jle movsl lahf cwtl cvtps2pi cmp loopne sub or mov or js leave repnz mov rcrl pushf dec lahf cmp fnstsw dec dec push dec jns out xchg mov xchg or packssdw enter xchg setbe jae shrb add in mov jnp cmp adc and int lcall das cs inc lds jbe aas pop jl inc mov ret ja ror xadd fbld cld lret std sub jle inc and imul pushf lahf fsubs call jp inc les push mov rol rcrl adc movsb mov sysret pop xor cltd imul and lea mov jbe js into sti inc sub push pusha inc bound (bad) or nop or or (bad) in lods xor add adc lcall mov mull out leave inc mov sti scas (bad) lods mov movsl mov enter (bad) rcrl fimull mov and or xor pop in test lods (bad) es xor inc pop mov aad or jecxz (bad) xchg inc negl pop insl roll out test sub imul rcrl mov decl sbb ja inc sbb pop and xor push jmp inc cld push xchg pop push clc mov jg loopne and (bad) bound mov xchg jg mov in in lahf out fsincos add sub push aas jl mov sub push mov insb sti mov mov ret mov negb mov mov add sub nop lods mov inc int3 (bad) or jp jl stos pushf clc push test loopne inc push push movsb ret lahf push or test in test mov inc inc lahf dec (bad) (bad) sbb add jl pop leave adc bound mov cmpsl cmp xchg pushf pop pop and (bad) jb sbb xchg lods add icebp fsubl adc ret sahf sub mov or xchg dec inc adc push pop jmp fs pop jmp (bad) mov xchg xchg sub sbb jmp dec popa les or insl adc pop (bad) pushf int3 add lahf push ljmp addl ljmp jb fmuls cmp jne sbb push mov test push add push mov xchg mov inc xchg arpl lock add jecxz bnd enter sub lret mov mov loop jnp dec add lret mov mov pop ret mov jnp inc in push or imull mov lods lret xor in bnd sub add (bad) cld mov (bad) cmc jnp and arpl mov xchg (bad) loop loop mov jnp mov sahf stos cmpsl jg mov inc jb fistpll push dec push mov cmp jae scas or int3 cmp pop (bad) ret mov imul jns orl xchg inc fmuls popf mov or bound mov mov jmp push cmp mov jle mov push movsl lret xchg inc or mov das inc mov pushf mov test cmp ljmp fdivl mov imul add sbb lds fildll lcall cmpl mov fadds xchg lods mov jecxz lock lahf mov dec inc into imul rcrb or add iret xchg (bad) sbb or adc jo mov test sahf pop cltd sbb inc ds add jg mov nop push add add fwait in push rolb sub shl sub xchg sbb js lcall mov sbb and adc mov mov daa iret sub cmpb jo pop enter pushf push mov jne jle test call mov jl add pop shrb ret sbb mov fucom cld xchg sbb pop lods stos jo test mov jo cmc test decl sub mov data16 xchg cmp sbb sti imul add jnp ret (bad) mov cmp sti clc push (bad) lods cmp (bad) jnp sub adc or psrld mov fucomip cwtl or cmp shrl xchg call fnstsw mov daa or sub mov out pop xchg fmul fsubr mov inc or add cltd xor push (bad) notb xor (bad) mov popf inc fmulp jmp loop test mov sbb mov orl addr16 jp test shrl lea add popa mov mov inc aaa and divl inc movsl in add mov fistl sub mov add repnz mov mov push push add add mov mov neg jle add pop xchg or adc xor pop jbe nop pop fwait cmp movsl jge xchg fdivs dec adc scas jg xchg push mov stos (bad) nop xchg int dec add jb (bad) sbb cmpsl pop gs mov or jl and bound or dec pop lret pop pop int3 fcomps ret xchg pop xchg sarl bound or xchg push mov out push jl outsl sarb pop push jle (bad) aaa adc outsl push xorl daa jno and aam jae daa xor xchg les add das adc in sbb in xor sbb or and hlt repnz xor mov int3 adc mov mov icebp mov lock pop mov arpl add or jae arpl and or cli (bad) out insb lcall enter jl iret lods and push fistp jecxz pop imul scas outsl cmp dec les pushf in ret ja (bad) sub outsl lcall adcb jl jo cmp nop inc lcall pop mov int3 in int3 jg call in cmp lahf cmp out jecxz pop mov aad and or jmp cmp lahf xor aaa mov xchg sub mov xor lea add jbe mov mov or push pop lea lahf add aam push sub adc jmp and add scas cmp ret mov jle push jo imul ret jnp dec xor pop lahf imul jno push stc js in xchg pop sti pop out ja sub aad inc outsb add jbe pop loop and sbb xchg cmc pop dec faddl clc inc adc jnp ljmp fstpl and mov lods fcompl push cld jp inc push and ds je fisttpl lock cmp repnz mov int sti out add leave cld xchg mov adc imulb mov lret enter or jl std inc cmp mov fdivrl stos aas into cmpl aam lret movsb jnp add cmpsl subl inc int xchg xor jge xorl push imul mov dec jecxz je nop imull aas cmp jecxz or leave popf ds mov pop add int3 adc jae ret mov das xchg and or cmp push rcrb fistpll jg mov mov push pop ret lcall subl mov cmp int3 xchg jge roll pusha loopne inc sti out jnp ud1 xchg (bad) push push pop sbb xor dec fwait push xchg iret mov (bad) hlt sbb stc xlat or shll iret sbb out pushf sub jmp loopne scas pop sbb sbb test pop sub mov push out shld jnp adc stos testl dec sub mov pop ret imull pushf jne jno add shrd mov stos cli sar mov aas out or leave xchg push scas notb jle add ja nop std fild push inc jle push push int adcb sub popf nop addr16 std xor test decl mov stc xor sub push push jge ret daa cli test mov call pop jg fucomi bound xor xor xchg mov scas jnp mov iret test jecxz (bad) cmp sub lret (bad) jmp sub cmp jle xor sbb lahf pop cmp cs popa scas add mov pop mov jmp out sbbl mov ret lea sbb push sarb dec movsb add mov adc scas mov sbb fadd mov cli stos dec adc cltd sbb popa aam push cltd gs dec add pushl sub xlat fwait push push test loop and sbb orl pop dec das lcall sar sarb and frstor in je repz and out jnp xchg popf sbb mov jo inc mov hlt xchg push xchg inc sbb subb (bad) jle pop dec cmc xchg dec (bad) int pop jge mov sub or lret in out call cmpsl mov push mov cmp sub lds loopne test mov in ret outsb cmpl movnti and push stos aas jbe xor mov adc jns aam xlat jg pushf iret xor and mov cld lahf std nop dec sarb jge inc adc (bad) mov mov pop push lcall push pushf aam leave or add or mov adc cmp jp or ja pop cmpsl loop jo jb mov aaa fstpl nop mov sub pop xor dec jg sti or adc das mov je jnp rclb mov xchg xchg sub aas int jp arpl inc add pusha cmp fdivr pop imul fucomip loop mov push push rcrl stos pop cmp fistpl sti mov andl aam and andb or xor lret jno loop adc stos nop ret xchg fildll std stc xor jno push ret jg jg movsl and out sbb dec popf mov jns jnp mov clc mov jge inc (bad) out sbb std pop add sti imul sub pop dec push cmp lods cs mov xchg in jg sub and (bad) aas and sar add or lcall adc push loopne cs and stos mov lods cmpsl mov mov xchg xlat sarb fstpt inc mov pop lds clc push scas or jmp fisubr repz mov les or daa pop scas mov movsl outsl std cwtl js inc dec lods clc mov std stos cmp inc imul xchg sub inc mov mov idiv arpl add cmp imul cmp add mov inc inc or icebp cli inc sbb pop cltd inc jnp push ret jmp jne inc ficompl mov stos cmp lods les (bad) pop lcall xchg mov popf mov push mov mov fistpll add mov lods add mov pop test sbb les sbb fsubs in or push adc stc imul loope movsl stos lods pop test notl jnp popf cmp xchg mov jl repz xor mov jecxz daa popf aas and clc inc adc jle fs jns fs mov jge loopne js stos sti popf mov jmp push popf sbb xchg fwait xchg rolb xchg mov mov cli push cmp dec xlat roll arpl imul movq sub movsb sarl xchg pop pop inc idivb std imul add and add mov imul pop sub cltd sub stos or mov movsb xchg xchg adc mov pusha (bad) pushf xchg pop mov cli (bad) ss cmp push (bad) jl adc jbe mul jns stc ret jmp movsl xchg mov iret push inc stos push jnp call mov sub movsl sar in and divl dec in inc jge mov mov (bad) or ja pushl loop inc (bad) jb pop aaa sbb mov pop inc pop fcoms sub faddl insb pop cmp pop test mov mov out inc sub cmp imul jmp outsb jns in sbb add jno bswap jnp push call jnp jl mov inc inc (bad) punpckldq cmp or dec fmul sti mov or ret push scas mov les mov aad cltd sti in ds add add cld pop sbb nop inc in lods lret sbb in sbb in or aam cwtl into mov mov dec ret mov (bad) in dec cmp pop lods in cwtl or fwait jno sti in mov test xlat adc aam in xor aas sbb cmp mov jg out ja mov ffreep fwait sub dec sbb js scas or mov test ljmp dec mov sub lds in cwtl adc popf xchg push push xchg dec stos ret jnp pop nop sub scas clc leave mov lods adc (bad) add xor adc mov jge popa mov inc add mov daa movsl je or pop push sahf or mov dec push adc imul das ss js,pt or imul pop pop scas cmp cmp addl in popf or rolb scas cmp out xor call add add cmp out sbb and fdivrs lcall insb sbb lods sarl dec lods or mov jmp sub or cmp lret dec add pop test imul mov (bad) mov jmp in imul jmp adc cmp fdivrs insb dec fimul add xchg add or outsb mov cmp test iret std movsb sar loopne mov mov cmpsl pop shr scas push in sub jl popf or xchg neg mov ds cwtl std jg outsl push fnsave hlt jp scas mov fwait sbb nop cmp (bad) fmull xor imul adc mov std iret lock sbb int adc in and add pop mov push repnz jns mov inc cmp outsl sbb call xor sbb or jge adcw sub and pop (bad) push push (bad) xor std jnp mov rol popf insb rclb (bad) jle adc bound or jg (bad) or cld jle add lds xchg (bad) rcl les jmp scas mov shr gs outsl lret (bad) shlb repz sti pop lret jbe mov pop push jmp jnp mov jle jl jns negb je add stos push push mov sarl ret sahf std fidivrl sbb clc sbb in cmp outsl adc mov jecxz cmp rorb sar lahf scas mov out jg fdivr stos sub les popa sbb dec fild or jo sbb (bad) jp jg and int loopne popf and (bad) xchg out mov scas sub mov adc sbb mov push jl sub sub arpl mov pusha adc xor jge xor cmp fwait test mov (bad) fstpt lods iret icebp ja jg xor push es add loop sahf inc cmpsl jo enter jg sahf loop sbb sbb imul in stos and xor sti and popf mov cld push push cs mov push out test aas movb (bad) aam orl jmp (bad) cmpsl adcb mov outsb js stos mov lea xchg (bad) bound adc and inc xchg jno in stc loopne jbe push adc xor inc mov out fildll and cmp jbe mov sbb insl pop ljmp sub enter mov or jb scas dec sub dec cmp bnd daa outsl push int push ret jle mov adc mov push or repz jb or jmp push mov or daa or cs mov jp push cld xor cwtl push jg pop sub sub mov push test cli (bad) and mov push das sub cwtl dec fidivl outsb ret or fidivl (bad) or cs mov xor test jae pushf mov decl lock insl ret jle sub popa mov (bad) add int3 int3 adc popf sti (bad) xor arpl ret rcrl jb subl xchg sbb dec xchg cmp and xchg xchg add pop test xor out lock jno pushf adc push mov fimull cmpsl sbb xchg dec jbe add add orb insl mov xor and and sub rcll adc pushf mov das push rolb lds cmp mov aad pushf clc xlat cmp xlat es scas add clc outsb dec (bad) scas pop gs push enter in dec inc orb rcll ret int lret fdivs inc mov push push iret mov mov insb push add push mov xchg mov xor inc sub or pop mov xchg jge fwait or mov cmp mov nop or jg cmp lods mov or mov ja imulb scas adc jo loop mov add inc jbe lret movsb add insl movsl jnp (bad) lea xchg add repnz inc dec test ja daa pop jmp les inc in push sahf jns les sub pop adc jle adc sub dec and ret into inc fcoml xchg (bad) add pop and fs ret sbb in and add stos das pop jg jl dec jl mov pop ljmp pop jb ret ljmp (bad) int3 jbe dec pushf and shrb add stc pop cmp shlb push or shr xchg sti sub add xchg daa push cmp nop aam popf jbe add into pop sub mov and (bad) inc dec add pop jne push inc aaa ss cmp rclb jle cld dec gs imul out popf sahf add lahf jmp mov js lods negl jne repz sti or jp out movsb cwtl mov insl lock sub inc lds cltd ret xchg lods jbe push adc fimull push inc outsl aaa jbe or daa push fwait ljmp outsb shl pop pushl pop ret in push es shrl dec arpl fwait mov dec pusha (bad) popa or pop std jl mov subl push jno mov stc (bad) je (bad) out int3 add dec stos out or test pop icebp push cmp pusha test xor pop dec bound lahf and cld mov das arpl call enter (bad) loope loope xchg shrl adc xchg xchg fwait pop cmp dec mov and sarl insl xchg cmp loope fwait lock push sbb hlt loopne das jo jmp add std jg fcmovb ret aas ficompl add stos aas lock mov pop out mov fbstp jmp or and imul mov outsl xchg loopne dec test cs pop mov push xorb jb or lahf test int sub xor mov inc cmpsb cmp sub jmp ret mov test in add add xor aaa mov push sbb cwtl (bad) or das ret movsl seto les (bad) lea jp in data16 xor cmp or jg jnp mov sub xor adc rcrl lock fwait xchg jnp dec mov mov jg rcrb sub mov mov cmp aas or add xchg jns jno std add jo mov jns pop inc xchg dec je mov xchg incb xchg inc stos out cwtl je incb je jns fs daa arpl js mov fisttpll fwait dec ret jns or cmpsl (bad) iret dec add push loope addr16 (bad) pop add daa lods mov cmpsl enter inc ret mov mov cmp xor jmp test rcr mov mov sbb xchg add jg cmc push cltd sti push mov xor push add lret xchg mov sbb loope jnp sub mov jle out cmp xchg (bad) or nop adc imul push fwait sbb jmp mov call les rorb mov inc movsb lret or mov or adc call mov push imull std jge mov loopne xchg ret out int pop int3 mov cli stc das movsl call jle dec and dec xchg pop dec mov add push fsubs xor inc lds bnd test jmp cwtl mov aas and roll mov sarb scas adc ret fwait cld inc aas dec xchg ds inc mov mov mov popf dec xchg jno shrb popf push add dec push fsubl lods sahf lods cmpsl fstpt popf lds push iret cmp pushf cmpsb rcl in mov xchg xchg std clc xchg sub jno mov repnz in xchg leave or add out mov dec pushf bound mov ss aas mov and add mov push adc iret push stos sbb popf sub sarb pusha mov jg loopne mov aam mov sub sti test lahf add arpl add call int movb inc lock in dec leave ror addr16 mov push clc mov dec pop push loopne sarl inc xchg or inc dec mov or push nop pop jb pushf add out adc sub jo subb nop push fldl sbb dec das stos xor mov jg inc (bad) push and ret sbb lods je dec insl xchg lds dec bound rol add lahf ret pushf push adc cmp arpl jecxz mov or add inc imul push loop pop mov stos jmp leave sub or sub pop jb jnp aaa into mov push icebp stos or inc push scas imul mov les add (bad) leave xor ret or dec add leave cmpsb or int push sub bound jle sbb dec mov cmpl lret movsb mov and mov sbb and jnp mov or leave push inc sbb push mov bound or imul jmp xchg push decb fwait inc or iret push adc add dec jnp sub jg and les fisttp and jecxz loop add aas jge adc lock stos adc mov adc pop int mov xchg enter lods rorb stos push imul pop lcall adc mov mov sbb mov push mov jl xchg mov sbb int xorb mov add das repnz int push ret mov nop adc into addr16 pop inc sbb sarl dec or mov ljmp popf outsb inc loope sub xchg sti mov inc lret iret jge jae dec dec add pop test stos xchg pop imul mov or pop push in pusha aas adc lret (bad) dec loopne sub jmp icebp (bad) dec pushf es std scas sub xrelease jns clc dec lret (bad) es push xchg mov sub out repz std cmp mov cwtl lret ljmp mov xchg inc fnop pop jnp ljmp pop ljmp cmp mov ljmp push cmp jbe sbb adc xchg cmpsb mov mov push cwtl shrl sahf adc movsb jnp xchg in pslld stc jl adc repz movsb push popa cmpsb repz (bad) in imul pop (bad) sub sti cmp shrb pushf xchg hlt sub into lret call pop mov fwait adc fnop dec add jle and add push or sbb pop ljmp aaa pop sbb and aaa (bad) mov fs mov sub or lahf ret arpl or fbstp lock xchg orl dec jl adc mov aam imul xlat pop lahf or or int hlt mov fbld insl adc dec jnp dec mov sbb cltd mov xor test pop fwait ds out mov mov pop pop inc mov popf out sbb popf add mov (bad) sub mov dec add lret lods popf fistpl jmp int3 push sti gs xchg and mov cmp notl das lret loop or inc aad cmp mov in inc ret or xor push adc cmc rolb mov mov cli ljmp xchg and scas mov sti fs mov jp nop mov jl addl xchg push xor or xor leave fcoml stos sub cli int cmp frstor ret int stos jg lret ror push rcr push mov add insl mov loopne or shlb stos rcll cmpsl mov cmp push jmp xor cwtl repz dec (bad) or xor ret inc loopne (bad) scas ljmp (bad) fildl dec jge mov daa ret push add insl je mov sar cmp and rcr xchg sbb and mov jle sbb decb mov std sub fwait mov adc mov (bad) stc jle cwtl shrb dec (bad) outsb jge and fwait push push ret (bad) movsb pusha loopne leave push (bad) test dec and enter xchg inc int lods (bad) test fcmovbe mov xor stc lret xor pop xchg aas test xor test in xor mov add add test add xor (bad) mov pop lds jb push std shrl mov popa insb aad fstl mov sub mov add cmp add lds (bad) xor jle std je xchg or pop std aam pop ret ja dec ret mov test (bad) jl or xor lahf add loopne lahf lcall (bad) lahf add and sti push push icebp push es loope and ds cmp mov sub int3 mov jnp add test mov cmp sarl aad xor dec mov sub mov addr16 sarl loopne sarb ljmp sub jp hlt or jmp mov cmp (bad) mov or cmpsl jp mov movsb outsb mov ficoml cs test sarl inc sahf mov cmp xlat fcmovnu jle mov or mov push xor sbb std mov push jns push std arpl add mov std cmp sub add int or fxch in cmp inc in dec fs jnp mov and aam ret sbb mov (bad) xchg mov loop cmp jl fsubr out into ret fimull xor or ljmp (bad) leave jbe mov mov jp or scas pushf scas mov cmpsl or sti jecxz mov xchg outsl and flds push mov loop test mov aad jnp mov adc stos sbb mov adc push jmp dec jnp add arpl ret add adc fild xorl fmul pop or ret outsl scas outsl or pop addr16 lret pop push pop aaa push mov or add sti dec std cld mov mov and xor cmp (bad) pop inc or pushf shlb jl fldenv lahf inc lret or aas ss xor sbb or xor jb xchg adc mov arpl shlb jnp out or cmp push mov lds dec lods mov fild jmp cmpsb jbe inc sbb fbld xor js std movsb cli sti jae adc pop mov ret fs adc mov mov lahf je lods fistpll pop add (bad) and adc pop psubusb xchg (bad) jl stos fistl and cmpsl cli fsubs sub int leave jae mov test lock stc rcl mov sbb inc pusha int3 push pop mov cmp sti cltd sahf and fildl js insb add mov lret jl rorb (bad) mov mov gs mov negl xchg xchg (bad) dec inc cs mov and (bad) sti mov or mov jmp cmc add dec (bad) xor jl fstl repnz push ret jecxz (bad) (bad) int3 test add add xor cmp add pop mov or push stc mov ds pushf add adcb cwtl out jmp sbb mov xchg adc jb scas rcll fistp jge cld dec loope loopne push or push ficoml mov cltd inc mov inc jge insl sbb dec (bad) aaa jle pop (bad) pop pop or incb das sub xor xor (bad) pop jg test cmp or mov mov push or mov xchg mov pop mov fwait movsb pop int jns mov fnstenv not js shll dec fwait add inc repz pop jnp call add sub stos mov insb cmpb xchg cltd sub loop jecxz sbb ret or (bad) sti sub xchg leave stos mov cli out fwait adc cmpsl jl daa mov sti mov ret pop adc and mov inc add mov inc cmpsb dec and int lods jl mov xor and out sbb int loope and xor icebp call pop (bad) push das movsb add mov xor adc cmp iret jle or outsl dec in mov test ret cmp out fcmovne mov jl lods std int and dec subl int int3 mov in lret pop xchg jecxz into xchg push roll aam mov mov (bad) fidivl sub jmp mov stos shlb sbb enter ret lea das int rep mov js into cld test push jnp loopne hlt cltd inc pop inc inc push xor cs mov clc mov mov stos mull xchg dec fist jns jl xchg test mov cmp fwait adc cmp (bad) scas mov outsl popa inc loopne pop loope cltd inc pop ljmp int sbb lds adc stos mov cmp sarb int and fistp clc iret mov cmp jl repnz data16 dec xor jae in loopne lods sbb push inc rol insb mov ds (bad) sti mov cmp mov arpl xchg mov sarl scas adc cmp cs mov or lea sahf shrl lahf mov fsubrs xchg xor aaa popf notl sti and movsb inc xchg sbb fs popa mov push fadds or cmp sarl lret jg jmp pop outsb pop mov pop lods sbb cld popa (bad) mov sahf (bad) ss insl push lods sub adc jg xchg push push push int3 mov dec mov arpl leave pop and fdivrl or enter adc pop loope and sbb mov rclb aas xchg hlt sub sub ljmp cmpsb es jno adc ljmp jecxz mov jl or ss sub lahf mov mov adc rcrl pusha jnp mov inc mov sti loop popf cmp lods and jl mov ret lahf sahf dec sti mov and loopne outsl popf cmp leave cmp jnp lret pop lea popa cmp mov ret fisttpl mov out add push gs jg mov sbb lock mov sbb loope fcmovb push adc mov idivl push mov sbb pop sbb sbb fsubrs mov push xor sbb popf dec stos mov popf ficom push jb xor inc mov pushf push rorb adc pop xchg pop das ror cmp (bad) (bad) out orl jecxz dec jg cltd mov cmp call hlt jb sub in scas xchg negb xchg loope scas pop rol dec jne mov push aad mov add scas pop mov or push add call mov inc rol mov inc sub (bad) sub dec or scas mov sbb sub jl push or scas enter pop push rcrb loopne jo jo dec lods jle sbb mov jbe jp popl sub lahf jbe lret pusha mov and adc cmpsl mov lods add (bad) aas das ljmp or add sti (bad) (bad) std sbb push roll leave mov orl mov das mov and mov jnp xor cmp lea mov ljmp or mov mov dec mov ljmp cmp dec and and push lods dec loopne inc and inc js pop outsl into aas (bad) fwait xchg pop dec fdivs add jecxz lods in jge out dec cmp arpl popf pop mov outsl test cmp pop pop jl cmp sub pop sub aad mov ret add (bad) std imul fistpl mov jl cmp (bad) sbb and xchg loopne fidivrl loopne inc jg inc std jecxz sarb xor cmpl mov jno sbb or dec mov scas test mov lret fsubrp loope jo pop cwtl xchg mov cmpsb aad iret addl xchg or add push mov fbld fcompl jnp adc fwait or loope cmp icebp lock aam mov out lret in inc insl jo jg add mov loop test (bad) ret mov aaa sar push fstpl in and or lock lods insl sub mov cld cwtl mov lock mov xchg ret (bad) (bad) cli ret jge (bad) push loop les (bad) sbb jl lahf xchg dec and stos (bad) mov pop mov jmp aas xchg and or nop pop push ds sbb jle xchg push sbb sbb inc adc mov push mov jbe cmp jnp xchg mov cmp pop cmpsl das lea jno xchg mov cmp push shll mov mov xchg dec mov lods fadd sbb repz pop sarb imul push loop adc jo and lcall std scas jle loopne scas mov scas dec and bound mov dec xlat inc les dec (bad) (bad) inc dec or mov out popf lret pop jb lods pop mov int adc sti in and xorl in rcrb inc lock push (bad) enter shll mov push repz inc cmp rcl loopne pop lea in loope jnp cmpsb pushf mov out ret jl pop test add xchg adc cmc ja ljmp or jge jg ljmp adc push mov rclb mov cmp xchg push popa repnz sbb jl dec imul bound jb mov jno cmp ret add movl dec mov incb nop add sub je xor mov outsb jmp push mov pushf add mov popa fistpl int3 adc sti in repz test ss and add ret and xchg xor mov (bad) nop js xchg pop cmp rcll inc jmp lods in jmp mov mov push out lea push inc in je sub ret xchg sub push xor fistpl xor push add add (bad) xchg stc add sbb or lret int3 push mov add pop rcr std jmp mov std popf sub sub sbb loopne popf sbb push sub ljmp sub dec xchg orl sbb xchg mov into mov sbb int aaa dec sbb pop dec std jp and xchg in pop lods inc daa pop pushf adc std pushf (bad) sub pop loope (bad) hlt mov dec jg push ret cmp daa add test rcrb test pop mov cld dec nop lret adc in jo andl xchg scas jp push (bad) mov jg or cmc or shlb popf xchg arpl cs lock cmp jle loopne jecxz adc or xor adc test loopne call inc sti push adc jo sbb cs call cmp adc lahf (bad) ja xor test push loope add jl icebp inc stos int3 or xor mov lret popf scas and push lahf fildll sub or sarl jmp sub cmpsl ss lock repz pushf cld adc mov adc dec sti pop jae fild nop jnp popf (bad) jg es das ret add add out int repz aad mov imul arpl dec sti jnp xchg jmp int3 scas xor pop icebp cmp addb jge cmc orl mov mov in fs cli movsb je dec jns gs repz jp inc fadd pop (bad) ljmp ret loop mov jae loop hlt cmp popf repz push mov rorb arpl pushf (bad) gs (bad) mov add sub and dec les or push lods mov jg nop dec in dec jae aam adc in ljmp rcl cmpb std and outsb mov in cmp mov cmp mov gs jae or push jle clc dec insl ret and push aas pop out xchg sub jnp in bound jmp sub stc jnp addr16 inc inc mov jl cmp repz rep push negl lcall add testl jge sub mov add imul push mov popf cli add pop shrb or mov pop jecxz pop out jp add jecxz adcl mov mov add shll imul inc cmp push mov inc sarl xor ret sbb jl je sbb jnp addl idiv stos inc imul lret jne cmp (bad) sarb stos rclb cmp popl ss jle jnp scas jae mov mov pop jbe sub fiadd jecxz and lds jecxz jno cld pop cmpsl (bad) lds inc sbb loopne jl (bad) fbstp ficom pusha sub lds cld fstpt xchg add mov iret int3 lea sar jmp mov mov pop aas cld jge jne inc mov cmp pop leave push push mov sarw push mov insl sbb lret and jnp lret iret jg or lret push mov enter sbb jnp lods cmp cmp inc lcall mov pop dec mov dec repnz add sub mov mov sbb pushf cmp cmp imul mov jle in daa das cmp out fwait call add add jp push loope lret leave push movsl mov mov mov adc dec popf sarb mov mov mov dec sbb adcl xchg (bad) or xchg xchg sub mov fwait jg,pn lret sbb in push lock pop mov adc mov loop push (bad) pop or pop ljmp (bad) ds (bad) fisubr push cmp test xor or mov stc mov cmp sub in (bad) inc push jmp lret or pop stos pop cmp or (bad) stos (bad) aam and out ret add pop orb scas hlt mov jbe sbb sbb repz cwtl xchg mov xchg shl outsl mov pushf push fcmovne sbb iret repz jne xchg dec cld mov inc sbb shll add cmp or mov sbb add inc mov loop das dec adc bound jbe es popa js inc cld dec dec jnp cmp lcall adc cli fsubl inc mov push clc imul pavgw cld cmpsb lahf jnp (bad) push adc sti shr xor jp (bad) loope out push cmc call jp jo fsts jle jp adc sub sub scas pop (bad) jbe scas gs ret ss insl inc scas ja cmpsb adc pop (bad) insl adc rol subb out les lods std arpl dec dec inc xchg dec lret sub dec lods push test and mov dec loop cmp in mov jnp push sub sub cmp push insl sarl pop push iretw fistl loopne dec add mov jl push pop cmp jbe (bad) punpckhbw mov rorl clc (bad) je or cmp push test fwait jg sbb movsl mov xchg adc pop mov insl push jg dec call daa jg and mov bound movl push (bad) inc ret das mov jecxz xchg in fwait ret flds adc loop sahf xchg cld and pop jle inc ret xchg outsb jnp push xchg mov pop mov int mov (bad) sbb mov out adc cmp push or loop add cmp pop cld je xchg adc ret aam aaa movsb das (bad) push lcall lock fistp rcr adcl addr16 push inc adc (bad) mov cmpl das xchg cltd dec fwait mov cmp fcomi movsb pop fisubl ret sbb inc arpl out shrw sub int3 lahf idivl int3 push jo xchg loope lret loopne daa mov mov mov lock mov imul lcall pushf (bad) fcomp sbb dec pushf cld push mov int or cmp jle cmp ljmp mov sti imul jl or push pop mov sub fwait xor pop shrb cmp clc xlat cmp loopne sbb sub stos and call or mov ret cmp jmp loop mov sti push sub cltd negl mov dec int iret and rolb adc pop jg push xchg lea ret xchg clc nop mov lds or ds mov dec pusha popf sub adc inc jg push pop adc loopne inc xor rcll mov in lock xchg push cmp fstl mov pop (bad) fadd sarb xchg mov loop pushf or lock (bad) mov jle fs xchg int cmp insl mov movsb lret cs push adc xor pop loopne jle xor xor nop cs cltd jbe mov cs mov sbb cmp or jb push mov push sbb mov adc adc loopne scas xchg cmp ret les aam xchg mov cmp cmp in and (bad) lods push stos push std lahf loope mov shl mov jnp test jecxz or or cld movsb clc cmp mov jg loopne sub (bad) push inc jg sti add cltd sub pop add mov mov clc lea test inc incl loopne jl imul xchg arpl sti cmc dec pop int xorl (bad) cmp sti inc scas sar scas mov nop cmpb mov pop (bad) (bad) addr16 punpcklbw xor and push mov adc sub stos (bad) jmp movsl add fwait lret cwtl push call (bad) or hlt sbb (bad) rclb adc (bad) and in sti cmc xchg mov mov xchg rolb loopne leave mov daa fwait adc sub rorl pop test sbb sub outsl andl imul fcomp imul out fcom mov cmp ret pop and jge ss ffreep rol jecxz xchg dec mov adc pop or add mov cmp xor add imul aas out jns adc rcrl adc gs jp (bad) mov dec ret add add jns loop pushf or stos rorb rcr imul int3 pop add adc aad mov push stc xor sar test mov addr16 sarb rcr xchg sbb into mov push sti dec sarl mov jnp sti lea lahf cmp inc out jge pop iret xchg add out jecxz (bad) and int sbb fmull in pop inc mov push (bad) xor das mov cld sub pushl cld test push (bad) dec lods icebp mov push mov add cld lods (bad) xchg jnp divl cmp sti aas (bad) scas andl dec cmc (bad) and adc in lods lds lsl inc mov lock cld add xchg (bad) pushf mov xlat adc inc fbld sub adc test iret mov daa jge dec packsswb cmpsl mov mov mov decl mov addl iret and cmpsb jl sbb and mov shl cmp pop data16 fild jle mov clc and orl int3 add mov pusha sbb hlt adc stos ljmp mov and pop pop aaa aam stos xor mov cmp mov and cld int cmp xchg push lds xor dec test cmpsl pop int inc lods mov ret outsb pop ss or dec cmpsl ret jb or dec test aam push shr mov lret sbb repz lods repnz push dec fmull cld mov gs cs mov dec mov fidivr test or repz (bad) push lds std cmp out mov (bad) cmpsl pushf xor pop ljmp push dec jae push jnp cmp cmp (bad) sub cmp cmp dec movsl pop xchg insl or inc fwait or inc push mov sub lods mov ret or xorb push sbb rcrl jbe push xchg sbb push and leave sahf ds mov jl aam pusha sbb xchg lahf jg mov push jns inc std xor rcl mov xchg cmp (bad) xchg fisttp push outsl and cmc (bad) lods xchg data16 mov push inc jg mov das mov mov in push or pop cltd sbb bound (bad) ret shrb mov add sbb sub cmp jecxz sub out js pop dec pop adc ljmp or dec inc mov fist mov sahf pop nop pop sbb jle add sbb xor sub or or popf jle lahf sbb (bad) sbbb mov xor mov jp pop xchg mov ret mov popf or dec mov fwait leave and sti adc fdivl lret insb jle (bad) sbb scas (bad) testb pop movsl jge fldt xor rcrb sub push jecxz ret dec mov cmp sbb jle out shrb lret add loope jbe fistpl sti add pop mov push loopne cmp inc add inc repz sbb cmpl jne arpl fdivr aas add xor add fbstp jp jg jnp pop rclb dec mov push push mov or movsl xchg das fldenv add sub in in imul xchg add sti ret sbb int3 mov xchg jecxz aaa pop mov arpl sbb cs dec in pushf mov sti (bad) in (bad) jecxz cmp xchg (bad) cmp test in rorb adc sbb fnstcw xchg adc sub inc xchg dec jecxz mov xchg mov push push jg sbb or repnz dec nop lahf add jecxz xor add int3 iret int cmp outsl nop mov fistl adc out sbb fs inc lahf sbb cmp xchg sub sbb test rolb neg mov mov mov iret mov cld jg dec cmp fistpl inc fs jo sbb loope jb jbe imulb jo fmull xor sbb jnp push mov ds and ret push cmp inc daa (bad) stos dec outsl ljmp lds pusha test mov mov jae and push mov or mov mov out sti neg cmp xor sub push movsl and lahf shrb lds lahf (bad) insl sub xchg shr cmp jecxz jge imul stos shrb shlb lods cmp das arpl inc adc inc mov jmp and sarb xchg mov lret hlt leave mov sbb mov es jge fwait test loopne cmp xor pop mov pop sbb mov cmp mov pop shlb les sbb mov xchg loopne,pt test mov xchg call adc nop push pop in jo mov addl sub or hlt cmpsb xchg mov add push lret es mov pop das ljmp mov dec jp dec push out xlat cltd jg das add jnp cs pop mov lods and es sbb subb sbb pusha sbb (bad) xor inc cwtl (bad) adc pop bnd (bad) lods pop adc sti and push jmp mov push sti hlt inc imul aam stos xchg mov or cli sbb xchg cmp xor lds or ja mov jg enter cld inc loop mov add lea adc push sub aaa inc pushf push rolb dec scas das jp sbb rclb ror ljmp test jge mov xor jns adc in sti mov dec ljmp imul leave inc nop inc cs xchg subl daa (bad) std mov add imulb roll fmul jb pop hlt ficompl movsb out jl lods loop sub stos cmp add jle sbb in adcb aas test jae cmp sub cli dec lahf mov repnz and xor (bad) rorb loope hlt shr loop roll loopne sbb or scas ljmp mov dec into insb daa ror add sbb xor stos ret dec and test stos jnp sahf nop inc les jle fwait adc add mov add cmp xor scas (bad) jbe popa pushf jnp ja into ljmp div (bad) gs jmp sbb push or mov cmp push inc outsl (bad) fld cmp in cmp add sahf (bad) pop mov dec bound mov test add cmp ret lea loope push outsl jp inc adcl cli lcall fmull xchg jg add mov xlat xchg sub nop pop jns cmp mov add sub mov xor gs sub int mov or std rorl jge adc fimul stos add cld jg mov out scas int mov push rorb xchg adc mov dec das sub imull adc cwtl stos faddl imul dec pop icebp xlat sbb jp lods cmp fisttpll popf mov or or sub add or stos lret fdivrs jmp fsubrl pop and movsb sbb jb pop cs aas cmp out cmp xchg dec sub gs jbe cmp jnp loopne dec adc cli pop pop mov push or cmp mov jl in adc iret adc fstpl jecxz cmp loopne rol mov mov sbb popf insl xor movq mov lret mov aaa cld or lds aas rcrb add push pop dec xchg inc sbb in mov roll cmp lods inc fisttpl xlat xchg jl sbb loop int lock into subl sub jl faddp int3 xchg add movsb sbb out mov lret push lret vcvttss2si sub ret testl xchg cwtl pop or adc jge (bad) jne fsubs push mov dec mov rcrb in mov jnp sub push cwtl lods popf aad mov rcrb lock scas push inc cmp pop gs movsl mov add enter mov sub sub push push scas mov pop push negl or pop mov sub daa sbb je jae test cmc es jg movsl mov sbbl xchg cmp mov mov sbb mov jle and adc cmp lds ficomp aam iret sti inc lods rcll imul mov push push lods sbb call popf scas ret sbb subl iret jge xchg jle xchg sbb cli and or or shll ds mov clc sbb cmp sbb push insl xchg sub sahf popa cmp push dec addr16 (bad) ret add sbb xchg lahf ret loopne sbb (bad) mov shll int imul xor inc cmp sarb mov nop hlt test fcmovnbe outsl cmc ret xor lahf dec scas adc dec test jns adc add in push (bad) jecxz out and add (bad) and insl push mov add scas sahf cmp sbb add pop sub jle and scas sub scas xor push mov movsb add jmp push int lahf pop call xchg adc and jl cltd addl or xchg (bad) jno mov imul loopne lret jb and and pop mov mov nop xchg mov (bad) out cmpsl xchg lret addl xchg dec pop stos rcrl rorl xchg dec sub sahf or popa push sbb (bad) sub ja rorl repnz aas std orl out jo subb stos jnp loopne (bad) icebp repz or jnp lret mov push cmp and cli loope cwtl mov daa decb hlt adc mull jl divb pushf std and divl mov (bad) fs addr16 test cmp aaa sbb cmp push (bad) mov mov or stc dec mov mov ficomp cltd pushf mov negb fdivrs scas pop lea repz (bad) cld nop mov cmp or mov jle xor inc (bad) (bad) cmp xchg xchg cltd loope add cli ret loopne imul xor ja sysret call dec mov inc pop jnp cli dec xchg imul popa cmp cwtl pusha mov xor aas lea mov add jge cmp scas stos sub sbb nop lret mov mov mov cli outsb ljmp icebp jge sub fwait cmpsl pop or and iret fwait dec xor push mov cwtl stos xchg mov xlat std aad xor jle ljmp inc xor jle cmp xor daa mov cmpl mov pusha outsl push ljmp (bad) iret cld inc sar (bad) jl iret adc lret sahf insb cmpsb xor pushf xchg imul stos xchg in pop xchg mov mov push arpl shlb pop cmp and pop rcr stos cmpsb adc mov fwait sbb (bad) in aad and cmp and fimul jbe inc cld adc push in ret out dec push ljmp mov mov add jp incl mov lds (bad) xor test imul mov jp mov pop xchg insb (bad) aam movsl and jge mov pop xor negb sbb repz fiadd sbb jmp (bad) mov jns cmp jl and jb int mov mov mov jle popf sbb and int aas jno pop imul or jp loope pop sub scas (bad) dec mov paddd jle mov cmp mov jle jl je cld mov and jae fstpt outsl xor adc test out hlt cmp jle stos ja,pn dec mov mov (bad) aaa out and adc mov or xchg lock lret popl mov sahf lret jge sti cmp (bad) add faddl push mov sarl mov rcrl mov sub xchg jge divl xchg or inc popl sarb xchg (bad) lahf xor sub or test or mov mov iret cmp add call repnz add mov mov jo iret std imul rcl pop mov or push dec adc ret jge lea jnp pop sti cwtl cld adc fs icebp cmp xchg mov out sbb (bad) mov pop jnp sub sahf or mov mov cmp add aaa push das fldl mov cmp push bound mov rcrb out test stos notb lea lcall mov adc add mov ret pop mov icebp mov in mov int jne fbld rorl in push in xor sarl push ret jo mov sub adc inc test cmp cmp sub or sbb in pusha js bound popf or popf add add scas repnz movsb mov push jnp jb xor jno pop js test mov lcall and add ret ret addl or lock pop dec scas (bad) pop push mov or test fucomi test mov or mov mov cmpsb mov lea adc scas rcrl mov in cmp call in adc je lahf test ljmp jae (bad) rcl jle mov ret fistl push sbb roll sti loop iret fwait xchg das mov cmp lret mov rcll popl lods jp cmc leave aas inc int3 bnd (bad) rcrb mov hlt xchg jo mov leave or gs lock in das ss jle arpl insl or (bad) cmp cmp mov jge jg dec ljmp jne add imul xchg iret ret rclb mov pop enter (bad) (bad) xchg adc jmp (bad) dec xchg xchg push cmp mov rcl mov call data16 das das jge scas ficomp mov ret cmp enter iret mov sbb adc out fwait inc shrl jbe xor fdivs in and push dec mov xor rclb shrb clc sub es (bad) xchg lock or decl mov mov jnp sbb adc mov pop sbb sbb std xchg lds add cmp (bad) je lods mov dec (bad) mov mov jle jle ds lods pop inc ljmp cmp loop sarl mov push fwait stc lret sub jb stos cmp sar xchg mov jle sbb lahf loopne sbb adc fsubrl adc mov jmp fs movsl mov sarb test ja js pushf add cmpsl shr movsb mov stos arpl cmp add adc add xlat adc cltd clc add sbb mov rcrl sar call pop in sub and inc xchg xchg mov fwait inc add xchg dec insb mov pop insl outsl aad xchg cmp fild mov das mov idiv xchg icebp pop pop test stos adc cltd mov mov and cmp sbb movsb push add sbb cli test in out fnstcw xlat cltd mov sbb and mov mov fwait stos notl jns inc sti pop inc bound cmp daa ds adc jb mov xchg xchg xchg iret xor adc xchg out aaa adc pushf mov sbb cmpl outsb movsb jmp sub mov fcomps lcall mov (bad) cmp add ja lcall lods or shrl jns mov scas or or mov decl lock or xchg sbb lock add mov cli fistp (bad) gs xor adc fistpll push jl push cmc adc sub in xor fwait nop mov sbb mov aam loopne adc pop sahf jg push jge scas mov (bad) enter sbb mov out iret add xlat push xchg pop dec (bad) fcomps jne fdivs hlt (bad) enter cmp arpl out sub mov cmp aam mov mov (bad) jnp scas (bad) lds mov mov decb add or adc in aad push in cltd xor push out sarb add jp pop inc rcr mov (bad) (bad) out pop and mov (bad) push cld sti or cmp icebp jnp mov xchg xor insl in outsl adc mov mov pop sar cmp mov lea shrb scas int3 pop or xor addr16 das pop scas out xor scas cmpb aam mov (bad) pop push out sub scas adc out xchg xor aam pusha imul lret insb fsubl add mov rolb push imul mov inc fucom xchg add insl sarl push adc popw lcall rcll loop cld dec cmp xorl test lods and incl les movsl push movsb sbb lock les jp fisttpll inc or add ljmp pop add lcall out or jp test mov aad push xchg jnp cld ja dec mov subl clc daa sbb sub dec xor jl mov stc stos lock or inc int insb mov mov es inc jno jnp std (bad) nop ss adc push arpl cwtl ficompl mov es push rorb mov or mov iret mov jmp or sub jns xchg inc out iret sbb cwtl sbb movsl out jge ja cli clc mov stc (bad) adc jmp call push pushf push pop push sar shrb and lahf lock jns mov subl jle xor in mov mov ljmp bnd sub ret loopne inc stos or push adc lahf xor popf idivb cmp mov cmp sub fnstcw in mov mov mov mov inc xlat fstpt rcr aaa sbb add int3 push push mov jae add push cmpb mov or jmp mov push inc adc aam roll jl add stos cmp pop mov mov rorl out push push sub out ret cmp js subl mov stos jns sbb cld jle pop jge cwtl sub fistl (bad) mov test sbb test pop xchg insb jp sbb fwait daa add (bad) sbb les stos dec and loop xlat cld cmpsb fldt xor and lahf jp or sbb sub (bad) std xchg sbb in push mov pop fcmovbe stc mov (bad) or mov xchg pop (bad) pop test mov xchg mov and inc out mov orl mov dec mov inc stc das jnp jecxz fisttp cmp es cwtl add push cmp rolb fcmovne pop or lea jnp inc dec (bad) test (bad) mov push (bad) cmp lds xchg (bad) mov fidivrl cmpsl in rorb xchg pop fwait add (bad) cmp jge xchg das mov push cmp mov (bad) mov xchg add ret fisttpll push mov cmp mov ret push push call jecxz dec sbb pop (bad) aas dec mov add idivb in jg xchg jo sti cmp pop cltd mov push xchg cwtl insb pop mov sbb in (bad) insb pop cmc shlb dec rorb sub add mov or pop call int3 pop test daa aam jmp int imul aad xor ljmp loopne jmp or lods test sahf addr16 or sub pushf sbb out adc in pushf xchg pop mov mov andb xchg iret lahf and push imul inc cwtl aam sub sbb or fwait cld sbb or sbb xchg xor je push bound mov jbe outsb in and dec xlat jbe inc fsubs xchg jg jl ret setae mov js mov gs push nop lods mov mov lea add js and cltd mov insb lcall mov inc adc jns jmp fstl mov fwait pop loopne sti cmp setl fwait jno out sub cmpl dec out and jmp and cltd cli sbb cmp jge fadd and sahf add mov cmp int addl (bad) in aas ja insl pushf sbb int3 (bad) mov (bad) xor jnp stos test sbb int3 xchg (bad) pop inc push std sbb nop jl fcoms dec push imul mov add and add pop mov repnz mov pop inc adc ret cmp or push jnp mov jne sub mov (bad) in std movsb fs and adc sti lods outsl jecxz mov lret or add push mov or andl and fbstp push std fcomps outsl ret (bad) pop ror leave jge test xchg lea in int mov adc mov mov ret sbb outsb enter (bad) inc dec sarb out imul jge mov out ret shl fdiv stos rolb repz leave in fsubrl cld push shll ret into jmp pop fwait push cmp adc mov in (bad) imul mov or jle pop or (bad) jbe insl lahf cmpsb lea mov jnp ficompl imul jecxz push or mov mov push inc out jnp jl fbld aam or clc stos or call cli call dec rorl inc cmpsl fildl jmp lret fstps jp jns xchg stos cmp int sub loopne add std gs pop in mov fidivl dec out out pop dec inc test notl out push dec fisttp jno shlb add push mov insl loop in lods dec mov out sub (bad) push fsubs mov add xor xor leave ds sbb lahf cli sub das jg popa (bad) sub loope nop xor (bad) movsb inc inc out cmpsl mov cmp sub pop inc dec insb dec aas stos cmpsl pusha bound aaa aas lea mov daa dec push hlt lret add insb fisttp mov lcall push inc sub push mov mov lahf (bad) stos cli push ret jp ret (bad) jbe sbb popf jmp adc inc cmp in dec punpckhbw sahf pop pop inc mov xlat cmp cmc pop jg aas mov cmp mov scas outsb mov aad jge add pushf inc mov inc mov movsbl scas lahf sahf ljmp mov sbb test push sub or enter mov ja lea cmc lret xchg shll mov in scas int3 sarl roll hlt or std jmp int3 imul les cld ds xorb fwait mov jnp sub add push jb in push sub es dec pop adc mov test jns inc sub jne inc mov mov out cld cs aad (bad) lret sahf lds (bad) out outsb fdivrl mov or fsubrs add dec mov test cmp ret mov in (bad) jns int xchg push mov call pop inc aad clc mov dec out scas adc arpl mov mov xchg das jp push or xchg movsb mov add mov clc add and mov fldl pop cmp adc out xchg mov jmp pop sub xor adc dec imul fs inc in scas out inc cs aaa repz pop (bad) pop dec dec xor and std mov aaa je (bad) xor adc mov mov nop loopne pop enter repnz mov fadds in lods or inc loopne jne xor cmpsb mov movsb sbb pop lahf jo test std scas or (bad) mov and cmp bsr outsl mov sbb cld and jle jbe push outsl sahf cmp jl add nop lcall ds lahf and cwtl cmp add clc decb inc test xchg imul pop push adc or sub cmp ja mov test or jmp data16 pop jmp outsl lret enter dec push arpl xor xor jne lcallw (bad) je stc ljmp adc pushf (bad) mov repnz and nop ds arpl or add sti jg (bad) inc (bad) mov idiv adcl lahf iret mov rolb jp,pt shrb ds pop fidivrl mov or cmp sbbl lea cmc dec xor lea pushf sbb bound popa xchg ljmp lds cmpl dec jbe and dec cmc xchg (bad) shrb pmullw fs add pop jb pop mov mov stos inc or cmp mov lret lock or push fmul in add fdiv pop inc int3 and outsl in sub add sbb lcall std dec jmp inc xchg push pop pop push push jge cmpsl es dec mov sbb loope cmp inc cmpsl add adc leave inc push dec mov fcomi fwait stos sub cmpsb int3 adc or (bad) cmp loope cmp jg popf lcall addr16 fildll imull dec mov dec or xchg fidivl inc cmpsb cltd nop pop xchg inc sti or fwait xchg xor xchg pop fnstsw adc xor popa adc pop jg aam cmpsb daa xchg mov mov in mov xchg int ret jnp or and mov pop or lock dec pop mov (bad) mov push out push ret mov das pop lods test push decb adcl xchg repnz adcl stos (bad) mov adc mov sbbb lods out pop or mov pop setge mov pop xchg jnp adc push or adc pushf mov les daa in rcll les cld js aam (bad) fnstcw sti jp inc out sbb jp jne sbb cld lds dec pop jne lods std and mov popf sub cld cmp popf cld mov int3 lea int3 daa sti sbb push mov push xor lcall sub outsb sub sarl fmull and test cwtl cmpb jg pop or fistl aas xchg mov mov jle insb push stos nop lcall mov iret push mov adc xchg fldcw mov int3 pop inc jle inc test jl or adc dec (bad) xor xchg mov or mov xchg dec repz adc jmp sbb scas sar sbb jb in in jo or decb sub adc test jo leave fstpt test fsubrl mov (bad) in loopne adc sbb push cs jge adc cli or cs pop mov imul inc decb jle or pop mov jg xchg rcll mov fadds mov jp add jle sub (bad) (bad) inc loopne lock pop fwait or xor outsl jl sbb mov and sbb jg dec cmp mov mov inc mov aam lods xor mov sub add dec mov lods (bad) jo sbb notl cmp fwait int3 or push mov jp or loopne jne ret inc add and jnp cld dec add scas mov lcall add lock hlt sub push int3 pop sahf sbb push xchg push mov fs es out mov and mov dec arpl lods mov cli leave jl xchg mov loop jp jns push pop and mov cli adc cmp (bad) out xchg push or cmp mov std jg inc mov lods sub sub sub (bad) push xchg jle notl or pop cmpsl (bad) (bad) dec and setle lds inc js leave insl mov pop adc mov scas popf ljmp popf vhaddpd adc xchg dec movsl cld cmp lock ja cmp popf roll decl mov jl or push rorb call push and inc inc or jg or movsb subb int3 inc jg (bad) hlt repnz xchg jnp cmp arpl (bad) incl push xchg (bad) mov test or stos pop xor mov loopne ja sub mov xlat mov push xor xchg imul cmc andl xor pop mov repnz fistpll or push pop in jecxz repnz push xchg incl push pop imulb inc cmp jp cmpsb test jle popa add jo sub outsl cmp lods pushf cmp subl (bad) lret (bad) neg (bad) mov aas and pop stos dec (bad) jmp cmp ffreep fildl cmp loopne and xor pop aas mov jl jge mov cli mov mov loop push pusha stos stos ret and loopne insl mov imul daa push push ret (bad) aaa mov scas push ret lods jecxz sahf and adc pop jle subb and or jg std inc movsl hlt pushf push xor mov jnp push hlt mov cmp push inc push cmpsb inc into (bad) xor out jno mov push mov in and sbb sahf aas loope cltd lret cmpsl sub fs dec fincstp (bad) iret jg outsb (bad) mov lcall push adc negl fcmovnbe xchg sub mov sbb cmpsl pop pop push lods mov cmpl dec adc in jbe inc sti fs lea or or punpckldq pop into popf and lods lea iret test add pop ror aad jge cltd (bad) mov jg aam rcrl inc int3 pop push mov test cmp add std sbb or sub (bad) es sub pop (bad) mov pushf sarb loopne into fdivrs iret add mov lret in lods cmp sti pop cmp or data16 jp stos iret call mov rcrl adc xchg cmp pop sbb mov sub jecxz dec imul push jnp mov mov nop add movsl std dec ds lcall push xchg or shrb sub pop and inc ja push test in jmp in test loopne xor mov (bad) fildll adc ret test cmp ljmp leave mov adc lods mov sti sbb sbb lock xlat sub in lock loope push adc adc cmp adc data16 mov adc xchg addl leave or test out cmc xchg push adc loop and pusha sub aam jge xchg cmp or mov jns mov outsl and scas dec xchg adc clc in jl mov stos fcomp frstor push mov nop jo lcall pushf test xchg jo,pn xchg pop inc sbb xchg mov cmp lods xor push or loope pop xor xor es pushf cmp mov (bad) sbb jne test insb sarl nop xor lret out lret push ret (bad) sbb or daa pop mov js leave or adc lahf dec inc xchg cltd cmp sbb sub lahf jge imul outsb shr xchg xchg ret xchg inc jle dec (bad) sub pextrw inc inc jns sub push lds fcompl pop adcb adc aad sahf imul push test repnz jmp xchg sub jmp int3 pop add dec stos and ret mov nop call nop inc mov loope (bad) mov idivb jne (bad) mov pop pushf in jge mov cmpsl cmp or movsb cmp lods imul or clc xor jge jp mov xchg (bad) cmp mov jo (bad) popf movsl push pop lods cmpsl sbb mov in cli movsl nop sub cli popa in outsl pcmpgtw popa cmp mov sub out add fs mov jns (bad) sbb orl adc lds xlat sub sub dec cld test inc pushf inc ss std lea mov jg pop sarl cmp into jmp jg lret add inc ss add gs push push sbb push stos fistp jle pop jecxz pop neg add add idivb mov insl fwait mov fs jle or das aaa ret cld dec adc in std leave fs inc cmp imul hlt movsl or movsb sahf xchg push popf nop add add xlat jge jecxz xor xor out or lret fdivrl jne cli rcll dec dec sbb rorw lock es jb out call inc clc incl not lock mov pop int inc xchg or sbb fmuls call add sbb sahf clc (bad) iret or stos add adc lcall jge sub mov icebp xor leave pop pop xor lods or xchg insl (bad) enter (bad) cmp jle or push scas insl out lahf add repz xor int3 xchg dec jnp in jl cmp jnp fwait stos push jo jl scas pop fnstcw cs and adc out int3 adc pushf or ret and sbb mov ds sub (bad) mov cmpsb pusha sub popf inc mov decl insb xchg or cmpsl lds sarl sbb jmp push movsb (bad) push jno fistpll xchg xlat neg push pop push pop cwtl adc lahf sti inc or pop xchg dec jmp jl sti stc mov xchg ja lahf addr16 pop push mov lods cmpsl stos sub lahf ss nop or rolb add sub or adc adcl mov xor add add push mov lock mov stos pop push sbb out add or in jp sub (bad) ljmp ficoml sbb jg lcall out and std hlt jo (bad) lods add jle inc push dec dec pop test je jb ss flds das imul ds loopne daa (bad) test ja inc inc sti out push mov mov leave mov aas cmpl cwtl adc fisubrl jnp loopne or pop ffree sbb insl std dec dec push stos mov loopne lods (bad) aad unpckhps rorl mov mov nop lret mov mov sti pop (bad) icebp jmp sbb jl mov xchg (bad) frstor xor fimull fsincos jo or sub enter (bad) mov add (bad) adc mov inc popf dec iret in or out stc sbb aaa mov mov popf lret xor mov nop test pop jl popa mov adc shrl push mov add or add lods or adc es or sub jle cmpsl sar cmc cmp push in in cld push inc lahf pusha cmp mov cmp mov push jge xchg mov sub stos stos out cmp jnp,pt int js clc out lahf dec cs popf (bad) jb add repnz pop stos jl lret push out mov cmp mov dec cs pop pop ljmp cld inc insl add iret mov push lret sub aas jno pop outsb cmp add scas and std inc mov (bad) mov sbb mov mov mov jmp hlt inc bound stos movsb pop push mov lret xor sub out shll mov inc ret push mov inc pushf sti imul pop cmp aas bound ret iret rol or sbb int pop mov fsubrs fsubrs sub fwait sub xchg lods lock sub jno inc in dec enter dec xchg sub std in int xchg mov cmp lods sub xlat ss mov mov dec and out jp ret and dec adc iret imull aaa inc jo cmpsb xor mov (bad) jnp cmp loopne pusha add out jbe xchg aaa jb subb lcall jmp sbb rcrb pusha dec pop mov inc ds cld imul loope das sbb sub insl test cmp push mov add (bad) and iret push dec pop xchg mov std dec xchg add fimull das cmpsl push loopne insl stos sahf xchg mov push pop pop jle xor fistpll jno inc cmp in xchg cld in lods out divb rcrb pop sbb xchg outsl enter add pop aam iret pop pop inc repnz pop mov data16 or xlat jne jnp mov xor xor dec cmp cmp jg ret in jns in mov jo and xchg shlb dec or dec mov xchg (bad) out add jns subl ja pop dec and test les cmp repnz out mov inc popf add (bad) push popf arpl mov push mov lret neg mov xor xchg adc jo cmp lds in pop mov push jbe rorb sarl jp pop lret push ret test sahf sar scas shrb testl jo mov pusha lds mov enter cmp sub xchg dec icebp enter test and sbb mov xchg pusha jle fstpt or adc pop pop ret lods pop mov pop xchg xchg call cmpsb dec mov push rclb push repz aas jmp pusha sbb (bad) rorb or lods dec jmp mov mov inc (bad) fwait mov xchg out adc jge je bound loope adc cmp xchg push insb stos loope (bad) pop bound push cmpsl sbb or mov or add push js outsl cmp ret outsl push mov or test sbb pop sbb movsb rcll and nop sub mov push fs test cwtl test inc sti lret mov repz mov das scas (bad) or xchg or aam out iret clc mov sub add pop sbb popl outsb inc clc cmpsl fdivrl mov push bound std movsl cmpsl lahf cs icebp lahf out xchg xchg jae sti add cmp aas (bad) daa out xchg (bad) pop adc js aad sbb rol jb sbb lds dec je lock mov popl test sarb mov sbb je arpl je xchg or or jg fmull (bad) fsubl mov or cmp lcall mov mov pushl dec out cs test pop cmp pop scas ret decl movb inc test test dec fnsave inc das or fucomip mov icebp fldl mov in xor jl je into test (bad) jmp pushf add cmp in mov addps in mov mov ljmp push jg dec or imul (bad) ret jg aam ficompl test jbe movsb out in in ss lea mov fist clc and xchg pop dec push neg out inc cmp ss std iret xchg cmpsb xchg (bad) or cmpsl cmp repz push loope inc sbb pop daa mov leave cld cmp call xor mov (bad) out mov les imul jo rcll cld xchg frstor mov int3 cmp sti in rolb iret fstpt iret dec cmp sbb lods dec jg cmp iret mov or or stos scas mov loope outsb or shrl pusha adc and add in adc jno pop pushf xchg lods iret ficom arpl push stc dec mov mov cmp or jb pop dec rcrb pop jo pop daa fcompl cmp mov mov popf dec std or iret lock lahf xor fwait sbb xor sti add lods inc adc lods xor jb xchg clc imul (bad) dec pop adc push lods dec scas ret jl inc rcrb lahf aaa roll dec iret insl or rorb outsl mov and push pop cld cmp jl pop data16 cmpl or cs sub dec xchg cmpsb mov cld in ss stos out or mov test xor (bad) mov imul or and loopne adc fbld orl xorb outsl cmp mov cmp push or lods or sub adc mov xor jp jbe lods or hlt loopne mov mov mov dec pop sub pop mov cwtl stos sub hlt mov adc xor dec sbb xchg mov sbb cs cmp sbb ret shrb daa sbb mov push mul push jae loopne je mov mov cld rcrb lds incl jle pop aam adc insl jg loop das xorl test jl push fistl xsaveopt jl cmc inc or cld xorb lret fmul mov add pop pop mov out pop add lcall cld cmp jle mov mov cmpsl fimull stos inc out inc mulb xchg cli nop bnd addl shrb ds rcrl femms xor xchg es sbb (bad) mov jle mov xchg jg mov stos pop mov sti xor cmpsl mov mov ret cmp popf lcall inc divl and lods mov or pop ret jle out dec pop lret pushf int3 ret out arpl cld adc and cmp (bad) jnp dec inc push int (bad) ss mov mov lock dec or lcall ss testb pop mov popa leave enter jne pop sbb sbb scas xor loopne dec int in imul sbb cli fsubl mov lret stos mov cwtl adc jnp mov sahf sbb adc jnp mov movsl clc jo jnp fistp push dec adcl mov testb xor mov xor jo or xlat jge cmp cmp dec pop int cmp iret clc add jmp imul xchg or test and jle and mov mov pop fwait lods mov mov adc aas add mov (bad) out mov jmp sbb mov mov fdivs jae dec ds mov shld ret neg jle lock cmp jmp ret lods adc fistpll repnz cltd push xor dec adc sbb lds imul dec cwtl cltd and sub jnp subb add mov pop lock imul cmp sub mov std loop test in push popa rolb push out sbb dec cmp (bad) jmp rorb pop sbb iret negl rcl fwait jecxz inc mov sbb jge adc outsl aam pushf cmpl mov or lods inc outsb sbb fadds (bad) sahf out mov inc mov inc mov js in sub cli cwtl sub sub adc or test movsl and or cld arpl test cltd xor xchg jge lock lahf sbb add pop add xchg fstpl mov sti xor sub cmp jle pop xorl std gs xchg mov dec ret xchg jnp dec mov ss push pop mov mov jl or adc add bts mov push pop aam mov sti orl add push lcall (bad) in cmp or icebp pop bound mov sbb inc xchg fist js or sbb ret stos adc and cmp sahf in repnz (bad) inc (bad) fisubrl es jg das xchg sub pushf xchg fdivrs jge lods mov mov add cmp dec into mov nop add mov in movsb jmp enter mov jl sbb or pop push mov stos dec pop mov adc bndldx xchg add jecxz xor push sub mov stos imul xor dec and jmp adc aad mov pop scas push sbb popa add das push imul (bad) fucomip sub fstp and cmp pop inc cmpl (bad) sahf xchg rcrb pop cmp (bad) mov addb mov sbb push bound xchg mov pop jg xchg mov (bad) popf test fisubrl mov cmp mov jns sbb mov jmp xor jnp or das jmp and mov xor mov popa int3 or out mov fldcw sbb lahf push mov push lds or pop mov negl ret fdivl mov in cmp pop jp dec movsb mov xchg xor rcl shrb das push push insl dec or pushf hlt std shlb dec fwait mov aaa lahf xor adc jp std out sbb or test mov loop push ret (bad) cmp or jecxz (bad) roll fnop iret or dec lods enter jle mov pop imul pop xor fadds adc sar mov sbb cmpsl lods lds add cmpsb cmp mov xor mov inc and in cmp out inc and es adc pop mov inc mov jg leave test cwtl jno clc adc pop add sbb or (bad) fnop mov or sar or lods add call add in and jne les or cwtl (bad) cmpsb sub outsl mov aam cmp or xor add push jae adc mov (bad) fistpll add das xorb adcl cmp int fst mov or sub test fild loopne (bad) aam loopne mov mov mov jnp fs push pop add lea std add and fstl ret cli jl ffree cltd dec in and mov add xchg xchg adc cltd sahf mov mov lcall xchg sbb push pushf add mov ds cmp inc outsl std movsb sub jg popl add dec jle (bad) mov (bad) inc std fwait mov pop add xchg xchg pop inc xlat push into pop es (bad) addr16 nop int pop mov sub cwtl hlt cmp or mov sbb inc mov out daa bts cmpsl or repz rclb nop jne je popf push nop cmp add stc jmp jno mov (bad) mov ret or jb stc pop adc test sbbl sarb xchg adc repz push add popf sub movsb and lock pushf sub bnd fsubl les sahf loopne jmp xor int into xchg lods sarl mov lods popf add adc cmpsl sarb das clc mov sbb addr16 inc mov mov fdivrl es cmpsb int3 ror fwait adc adc andl add ljmp push xor pop in cmp jg (bad) mov int cmp pop push lcall test stc mov jnp cltd dec jnp jae daa or xchg dec inc sti lahf insb or imul das inc jb mov adc ljmp jnp aad mov xchg adc xchg fdiv push rcll adc neg cmp mov mov test sti fistpl mov cmp mov jo pop test add mov cmp lret xchg popf adc jns jp ja jnp pop pusha pop xor jg ljmp xor jnp decb mov insl scas cmpsb adc jne,pt rorb hlt (bad) int shrl and push movsb notl adc sahf scas jp lret repnz repnz jb lds push jl bound movsl mov pop jg inc (bad) mov sub mov test sarl sahf xor das daa fnsave stc dec adc das pushf sub loopne add sbb mov dec mov test push push push jbe cmp mov mov test cmp or test inc in sub std lods addr16 jg pop sub jp test mov bound lahf sub inc adc lods iret stos xor add lea add out nop lahf into (bad) cmp sub mov rolb mov mov in test loopne xor insb mov mov fmul jl lahf lret aam adc push iret cmp roll fdiv (bad) popa and stos (bad) cmp iret ljmp call pushf rcrb inc mov add scas mov inc dec mov faddl movsl insl rcrb movsl push lcall add out pop adc insb dec ja push or push add test in lds outsl push sbb jle add fidivl lea add mov jg pop jp jg sbb fisttp inc add adc pop push inc repnz mov out jl fwait hlt pop test adc clc cld stos push daa (bad) cmp and icebp fdivrp rcr add or cwtl inc push mov add inc insl jo lahf loopne add jnp pop dec inc in adc fwait es cmpsb sbb jle fcoms push stc pop or in lcall mov lahf out mov data16 jmp inc mov mov and xchg arpl popf lds push or insl pop lods dec ret mov insl sbb cmpsl popa dec in int jmp add mov (bad) mov aam lret push pushf fistl icebp jo mov test arpl pop mov jle add inc decl (bad) mov rcr mov adc imul (bad) jle sar in cmpsl inc pop mov lret adc pop imul enter mov out jl lock idivl pop mov mov jnp add mov cld mov dec fwait cmp insl push jb lds mov (bad) mov inc sbb out ret popf loopne dec iret movsb fcomip repnz push mov and fwait imul ret jle sbb adc pop mov aam cmp es xor jmp mov or insl mov fldl mov jle stos addr16 sub data16 sbb xchg sti jmp cmp dec aaa sar scas jne jl inc (bad) sub ficoml icebp push rol add or lret or push cmpsl mov dec jnp adc inc lret add dec test sub dec in xor loopne push loope ds (bad) mov pop cmpsb xchg xchg sub mov test fsubl sbb fucomi mov push cmp outsb fcmovnu pop mov popf imul out inc or lcall pop jp hlt sbb pushf pop jp sub or imul inc mov jl cmp push inc sub rol inc jecxz dec int xor inc movsb push sbb cli rcr or imul xchg cli lcall sahf xor cld push push inc fwait cli jmp inc inc pushf (bad) ss rcr and movsb cmp sbb btr or xchg das ljmp adc xlat jle cmp xchg cld hlt sbb sbb emms lret pop cmp (bad) and int3 jge jle sub push sbb sbb or xchg (bad) jnp rcll and test fst mov jno jnp,pt sahf add mov jb stos cmpsl rol push lcall pusha or popf mov cli jle sahf jnp out scas lahf dec ljmp sbb repz (bad) jge in push mov bound push fcompl arpl mov rol (bad) adc rolb push rorl jge orl xchg xchg dec push jp popf (bad) je frstor cmp pop pop mov scas pusha xchg aad mov test sahf nop mov (bad) jnp mov pop mov cmc xor test movsb or xchg insl xor fdivr mov sub adc sub jl imul lret outsb xchg ficoml or or test ficompl test sahf sahf or jge add sbb push inc lods in push and jl movsl (bad) in push cld xor mov lods dec std stos (bad) xchg sbb scas lret pop mov xchg jp gs hlt leave push jge orl xchg xor cltd lods insl test inc (bad) fstps imul pop shrl pop adc xor xchg cli ret sub xchg and aas push (bad) jmp out mov or mov and fwait ret mov xchg dec mov dec inc iret cli cmp push shrb cmp ja int fisttpl add pushf stos jo jl loop mov add mov lds imul iret and jo adc gs xor pop lcall dec sub jns inc pop xchg js mov push idivl sti addr16 sub aad xor test (bad) inc in jnp jg es mov add jp mull dec iret push fdivrl sub bound pop out fwait adc loop xchg pop inc xor adc jge and cmp sbb lahf lock test loopne aam mov int3 push loopne jg (bad) mov sahf mov add lock mov cmp fisttpl inc (bad) aad xchg push add jl iret or (bad) cld sub sbb (bad) mov sbb js (bad) or mov (bad) fcoml cmp adc sti mov pop jnp mov or push mov pop inc iret mov imul dec pop fwait push les push adc mov xchg mov jb pusha mov insb (bad) sub sub push popa sbb xor out movsb sbb pusha loop xchg lahf jp sub vpsllw xchg mov (bad) and mov sub outsl mov (bad) fiaddl dec ljmp in cmpl lock fsubrl mov jnp lds cmp or lods imul addr16 adc add xor int call xchg shr jl push bound fidivrl push mov cld bound fist in push adc jb mov or jne push (bad) int jge fnstsw aaa adc aam sub xor out outsb fistpl lcall mov pusha xor xchg mov popf xchg sti sar bnd fs das dec nop or push mov in inc fs mov add mov jl pop cs aas push mov pop or popf icebp or sbb aaa add mov (bad) adc push cmpsl es jle sbb add mov inc fsubl pop rcll add mov jl cs (bad) std lret (bad) jne xchg aas cmp xchg imul imul lret bound test je mov daa sbb or mov mov sti xchg cmpsl int xchg mov movsl mov mov out pop mov sub rorl and push pop adc in sub test data16 cmp sahf outsl sahf mul repnz subl mov push push mov outsl mov sbb mov xchg add mov inc (bad) and sub loope inc mov or mov fsubl push mov loopne stos fisubl mov jnp mov sub mull scas pusha and push xchg dec mov push incb fdivrl (bad) fiaddl mov scas and adc out rcrb lretw outsb out sysexit push push mov push and in popf mov jl ret movsl sti dec dec pop mov xor push rclb jle ja mov sti inc xor das (bad) pop cmp adc jnp bound sub sarb jl jge in push mov mov arpl push and fwait dec or jno cmp mov in and xchg in in fsubl sbb stos and or xor jns mov xchg (bad) and fstl cld mov cld mov aam mov push cwtl adc scas rcll jle dec imul (bad) adc mov pop mov xchg movd cmp popf sti push fiadd or fdivl ljmp jmp js in adc enter xchg cmp imul out fidivl cmovnp cwtl sti jge loop cld int mov in cs xchg sub imul or jle imul (bad) std jp lcall lea aam test push incl mov add push xchg rcrb pop les jge jl call xchg jp sar inc fwait in aam add xchg cmp mov fnstsw push sbb xor jns xlat sbb sbb rcr sti cmc leave jnp and push fsincos imul pop xchg xor mov fdivrs fadd dec lcall cmp and dec test das push lea (bad) xor mov subl ret (bad) scas adc fdivrp (bad) mov dec scas dec or test push jmp fidivrl push xchg push sub dec loopne pop movsl mov test add and xor sbb (bad) mov (bad) (bad) cmp sarb or (bad) fwait mov test pop in xor sbb jo cmp pop jge out imul dec inc add mov mov lret jl pop or popa cld daa mov lock mov addr16 xchg popf or mov mov cmpsb (bad) stc adc push xor mov repnz jne ja mov xchg jns pop rcrb dec mov jecxz fwait insb rclb in mov sub jnp inc cmc movsb es mov xlat push (bad) shrb fdivl lods loopne cwtl sbb stos nop mov (bad) ljmp jns lea mov jnp movsl push lahf jp sti dec mov icebp dec ss xchg mov jge (bad) call lret xchg cmp lcall jbe or push jns stos insl loopne cmp dec rcll jge xchg and sub lahf dec rclb add sahf jl lcall sarl (bad) mov lock je or push jecxz xor push outsb and inc insb xchg sbb in lock inc ljmp popf jae dec arpl cmp in (bad) shrb mov into cmpsl mov (bad) cmp lea shrl jle,pt sarl mov imul out jnp mov ret jg or dec lret outsl jecxz and popf sub xchg sub cmp jmp pusha in int3 xchg mov mov or dec mov ret dec out sbb mov aad xchg clc or je lahf mov sub dec mov mov test in inc jg (bad) faddl lcall lcall adc data16 pop jmp das pop jecxz inc add jb test mov inc pop insl sub stos (bad) in fwait xchg jmp jg lahf sbb call mov or mov mov and ret clc mov inc lods subl mov shlb xchg sub and cld or fdiv shl test or inc cmp or xchg dec xlat dec or (bad) in cmp jmp dec out adc lret jb imul stos ret mov xor adc cmp push push xchg movsl mov shlb fsqrt mov pop popf push mov sbb xchg ret in cltd sub in outsl adc and pop push adc mov cld lds daa (bad) fwait idiv inc (bad) and lahf lahf mov insb nopl clc push out sti mov and dec lods mov mov mov or mov pop push push ret jl push (bad) mov repnz sbb jo mov jb xchg sub sbb xchg jno xor fisttp cmpl out cmp fimul jg mov or fmul jo xchg lods sub adc sar jecxz icebp fistpll inc or ljmp mov xchg add hlt loopne out out int fsub xor inc lcall mov arpl int adc lock gs lods sbb insb nop jo mov or pop push cs outsl sbb jnp fdivrs mov jne dec adc xor lock pop dec and cmp fbstp sbb std (bad) mov push dec add rsm into in pop aaa scas out (bad) sahf shlb sbb leave or loope fistpll outsl xchg shr add push loopne sbb xor mov imul fwait adc leave in in add add fs out ret sub test or into jecxz mov cmp out mov test and ljmp test mov xor adc jnp sbb out dec rcll lock (bad) and xor pop fwait test (bad) xchg jnp sub dec add ret cld loope sbb pop ret lret adc fmull dec cmpb mov (bad) aaa mov in imul pop adc sub push jle mov cld mov imul mov adc mov lock push mov repz lds mov jbe iret out js test js mov sub pop bound repz (bad) pop es test jne js sub pop add mov cs jp imul das sarb call into (bad) jbe adc scas std dec std or (bad) (bad) test or push repnz pop cmp std ljmp cmp loope sbb mov add aas (bad) stos mov mov ret outsl jle aad shrl (bad) or add mov sbb dec stos mov and cmp pushf roll xchg cmp stc xchg (bad) das mov out movsb out mov sar daa jo rolb sbb jg rcrb jnp adc les pop jl outsb cmp dec mov dec push sub mov inc cmpsl lcall enter fidivrl jo fucomp jle aas cmp dec adc xchg sarl mov dec cld sbb dec (bad) cmp jl iret les pop fld testl adcb lret push das ljmp dec pushf xchg or (bad) sub cmp decl iret or lahf test cli sbb dec stc sub lods mov sbb les lods test nop and push pop ret and loop xor or cmpsl xlat jp or mov in jg add std inc cs pop (bad) sbb mov cs in das or adc ljmp sbb inc or cmp dec or arpl xor sti fstpl outsb adc cmpsl sbb dec (bad) push stc or and xchg jle cmp xchg fnstcw ds mov add dec mov pushf jg xchg or mov lret mov xor pop adc mov popa scas das push mov mov movsb sbb add hlt sbb or nop lea cmp adc sar inc mov mov inc lahf jle mov aas lea mov pop push jecxz cs push pop cld add sbb sbb sti ret dec cmp add or dec mov xchg das add stos movl cmp fsubrl or pop in mov cmp cmp sahf adc add jge xor mov cld movsl jge inc lds idivl mov jmp sub imul cmp mov and mull stos int rol int fstps adc xor xchg sti push arpl inc dec out test xchg ret in push mov test lret dec push repz mov jg xchg iret ret sbb rcrb ljmp ljmp or jle add (bad) call lret adc popl jg jle (bad) lret fdiv cmc sub inc ret in fidivrl movsb sarl or xchg dec xor addr16 loope dec sbb ja and test lahf rorb and scas in fucomi fwait loopne mov mov outsl imul mov out mov out cld pop mov aam jo sbb inc jmp add jecxz jo push mov stos sarl sbb aam jae ljmp xor stc nop sub (bad) add imul (bad) add sbb xor sti and fcomps shld bound jb adc lods (bad) test add mov pop jmp lock add mov xchg mov and and mov (bad) push sbb loope aas mov mov pop movsl jmp jbe movsl sub jns mov sarb xchg or fwait jne jge loopne push pushf or pop jmp xor test jp push movsl ficoml fistpll adc repnz mov scas test jl jge xchg stos or in pop mov push mov adc test shlb aas jge mov addr16 mov push into adc fs and and in aas cmp loop fdivr iret inc sub (bad) jb je jl aas mov inc cmp and orl popf xchg push ret mov mov enter and outsl adc out mov popf loop loope shl add cmp negb aad sarb dec imul inc arpl mov xchg das inc not pop mov mov xor sti mov jnp xor imul cmp push in lock and pop mov or cmpsb pop cld ljmp (bad) fistpll rcrl add xchg inc cmp jnp lahf mov lds aas pop mov cmp xor and and rorb mov out in mov arpl push mov push lods mov loop mov mov and lahf inc jo jge pop fadd jecxz and mov inc fs arpl or leave xor mov test jle pushw fwait and test dec push push add test or jecxz xor lea mov jl jl aas scas pop mov xlat dec pop (bad) loopne cmpsl or lea add push lea repz jle clc xchg dec dec mov sub cmp pop ficomp and mov dec std std add lea adcl cld fsts call add out adc scas (bad) incb and sub mov int mov out xchg mov lods cs cwtl lods xor sti insl arpl or dec cmpsl inc mov push das mov adc lods sar (bad) fbld data16 inc sarl cwtl jmp or test add inc imul clc inc mov adc cmp xor lcall rorl sbb lcall inc mov repnz fwait je mov inc nop cmpb pop push movsb and cmp mov fwait stos sub cmp cmc mov outsb and push scas das popf sahf inc jb das imul int3 xor adc dec (bad) fsubl test xor imul cmp add pop pop clc cwtl hlt pop sbb js mov imul mov les test fwait mov pushf ss adc lea lock add cmp xchg xor mov pop inc pop daa fsubl int rclb into xchg adc lds pushf mov ret xchg xor ret cltd loopne dec mov mov cs sub and lds cmp sti fucomip movsb cmc mov mov xchg dec jmp sub inc or pop pop call adc or xchg push xchg push fnstcw cmp mov les adc xchg mov aaa cli pop mov bound lods arpl dec ret cmp pushf cmp pop (bad) cmpsl adc lahf in xchg sti (bad) fisttp jnp adc fcmovne cmp in popa mov mov pop mov cwtl mov (bad) mov test pop cmp mov inc and push mov pushf cmp nop jns lahf out ja ret or js cld aad jge pop jnp outsl insl mov lcall icebp or cmp into add outsl lret inc mov scas or les mov rcl popf jnp popa sbb xor or xchg adc inc jecxz pop aad lods pushf mov aam loope push pop sub test cltd test cmp je pop enter arpl mov push mov pop sub lret rcr add movsb fnstsw or xchg sub dec (bad) sbb or sbb std inc mov std (bad) fsubp inc mov cmp mov and (bad) in push je das fwait rcr lods stos inc movsb sub xlat xor (bad) xor cs popa push fbld mov out sbb or movsl or fmuls lock add sbb dec gs sub mov mov popa adc mov jle (bad) sbb repz (bad) ret in notb shrb xchg sub rcrb push mov pop add in xor or test jl inc std jno ret cmp adc mov push nop xchg mov leave aam (bad) icebp cmp mov aam sbb sbb mov pop scas imul sahf and popf std shll iret jecxz mov outsl popa je aaa mov fild mov imul call xor push (bad) jno push mov sub fmul lods mov jg xchg mov mov cld (bad) fdivrl mov mov push rclb push mov dec xchg lahf mov ds lret sbb cld ret mov std (bad) inc jnp fidiv in push cmp dec push stc sbb shrb cmp test jbe mov xor in loop mov seto addl inc mov and mov mov fwait ja loop xchg cwtl popf pushf cmpsl jbe test push lods fs repz test loop mov jg jo movsl jg scas jl lods cwtl jmp mov xor or imul sbb in lea (bad) xchg or mov (bad) out push rclb adc rcl mov xchg cmp xor mov dec dec outsb mov popa cmpsb mov pop arpl pop das movswl pop pop push pushf test sbb dec (bad) sahf xchg xchg test mov ret push sub cmovo lea (bad) xchg lods (bad) xor cmpsb and (bad) outsl jne iret cmpsb lahf fldenv hlt or and jle xchg fsts adc jmp inc jmp aam mov outsb pop jae pushf mov outsb lods lahf dec cmp sub cs sbb mov push daa sbb jo mov mov and pop jae daa or jle xchg cwtl fidivr (bad) mov pop jnp leave xchg (bad) test jl jbe mov in lahf jnp leave xchg shrb mov (bad) cmp xor sbb ret dec or std cmp lds mov lea sub cwtl jnp pop (bad) les ret fildl leave fwait jl movsb add lods xchg sub gs add into gs mov std inc xor (bad) cwtl inc adc mov jge aas out pop mov int fmuls jecxz sub loopne or mov cmp jnp test (bad) xor das iret aaa stos cli jp cmp (bad) xchg fdivrl sarb or cmp lcall inc xchg das (bad) sti fwait xchg and jnp sbb sub mov insl fcmovne mov sahf lock repnz jnp mov xchg or stos push int push add lods cltd cmp dec sbb cld lcall scas fistpl sub sti fwait or imul pop sbb mov fsubl daa imul push mov (bad) ss orb sarl rcr mov aam lock nop push xchg into aaa push das add clc xchg test jmp or jnp lret inc inc outsb mov pop cmp mov adc dec dec pop ja aas ficompl adc (bad) or lock lcall movsl aam push enter outsl mov dec jle dec insl inc and mov xchg (bad) jecxz lock mov mov adc cmp scas dec mov rcrb (bad) mov mov pop mov xchg pop push jmp or movsb addr16 int or (bad) pop mov fbstp out repz rorl pop mov adc xor fmull jl add and mov sbb and ds arpl clc lahf ds or cmp cwtl pusha jecxz jg inc je xlat iret mov add or sbb cmp xlat movsl arpl fcmovb and pop mulb mov add jb sbb mov xchg add push movsb pushf sub out dec lcall sub pop push or inc cmp push sbb scas xchg jne pop aas popa push push or add int3 add lods (bad) fstpt xor mov cmpsl rcrb add add push ljmp lods (bad) (bad) or add or insb push add mov (bad) mov cld jno sbb mov ds sar cmp jle ja sbb mov into lods dec pushf add or test daa lock movsl cmp dec pop mov jecxz lret adc dec fcomps insl rcr jae int3 sarb lds das inc arpl jecxz jl mov lahf aaa pop add lods movsl cmp jnp daa push inc call stc cmp xor push mov and mov add in add or xor pop out inc dec pop or out (bad) flds sub xchg cli int pop fildll sbb (bad) or lock pushf and jbe push sarl hlt test lcall lret sub js test ret repz stos xchg (bad) movsl fwait xor lahf xor lea loop fcompl daa js lds stos push in aad cmc add sbb push jl in fstpt cld sbb scas sarb ficom cmc test sub cwtl mov mov xchg jge mov fsubrl xchg repz (bad) ds cmp fistpll fisubl call or lds fsub sbb mov movsb lret mov mov jecxz jnp (bad) sub pop fwait lds addr16 and cmp push rorl repz scas mov add mov fldenv imul sbb mov test (bad) movsl and data16 xchg popf push (bad) out cmp push jne imul (bad) lea pop push pop dec sub mov dec inc fwait (bad) mov ficompl aam push pop mov pop arpl mov (bad) mov xchg jo cwtl arpl cs jb add mov dec sub mov cwtl mov out test nop rcrb sbb fimul pop rcl xor or cmp leave and mov popf pop sub xor sbb sti jle push stos inc out hlt cld lods or stos push add cmp int push cld aad push sbb out jg pushf xchg jb mov xchg sarb rolb loop iret aas jne pop int3 cmp fldt dec sbb cltd les data16 sarl arpl push or inc lret mov lock fdivs and add lahf cs mov loop mull dec mov lock rcl (bad) stos sbb mov or mov ds aad lea rcrl orl dec adc xor aaa jg popf mov insl lahf mov jmp xchg test sub imul push push std and (bad) xor xor in loopne popa call imul pop pop movl in fs or lea stos xor loop lods imul push pop push or imull ljmp sbb inc addr16 mov jecxz pop and xchg (bad) push and dec mov sbb or mov incb popa nop loop sub std push lds lods fistl call xchg cmp popf xor pop fistpll adc clc aas jle fcompl ja mov jle (bad) cmpsb jp push scas les jge jle adc insl mov les scas xlat jl call (bad) outsl loopne ja in mov ds pop add icebp iret add out mov std (bad) fistpll xlat lea cmp mov mov pushf fwait out ds add aas push xor push lds call call out gs pop mov aad es dec jecxz cmp adc sub mov ljmp sar inc (bad) (bad) notb xor mov fs lods add repz push mov scas adc mov popa (bad) jns xor push xor stos or cmp pop pop push cltd out cld aad pop leave adc dec ds jp lods mov mov shlb xchg sbb pop cmp dec inc add pushf or icebp inc aaa mov push lods ja mov xchg jp mov jmp ffree dec pop adc test ja (bad) mov or ret imul outsb jecxz in jecxz cmp mov or xchg pop adc pushf dec cmp xchg imul jp push shlb fisub xchg pushf lods xor or fidivl (bad) cmpsl pop inc nop sub cmp pusha mov fcmovnbe add lea inc in cwtl jne adc push cmpsl inc enter pushf in inc lods and aas (bad) jnp add jae add cmp mov pop inc dec decl fstp mov mov mov mov jnp cmp out pop pop (bad) mov faddl sbb sahf (bad) out xchg adc (bad) nop jl test (bad) loopne push int3 in mov movsl dec fwait cmp mov mov out sbb loop bound mov pop repnz scas add cmpsb lds or xchg and leave jecxz movsl or scas jp fsubp xchg lods pop mov inc cmp xchg pushf cmp xchg int (bad) scas adc inc mov sbb add aaa clc cmovs sub outsl inc dec mov test fbstp test mov push jl imul jb sbb bound xchg call jge xlat lock xchg imul test test sub push jo mov enter imul xor aaa int popa call mov rorb jnp cmp int inc cwtl icebp cmp sbb mov jnp idivl and sbb ja loop pop iret int3 add jnp ss or cwtl pushf lods pop insl bound push cmp or icebp imul and cmp popa jmp push mov mov dec inc add je dec mov mov addr16 test cmp sbb push jae sarb jl push cmpsb mov sub jns xchg or pop mov sbb ret cwtl popf aas add cld pop imul pop mov push jecxz insl xor mov lret and and mov jae subl xchg rorb inc or sub cmp in cwtl or lret das adc pop inc jnp cmpsl lahf xor pop pop xor pop jle mov mov mov shrb cmpsb dec or ret cld xchg iret sub sbb and xchg xchg test cwtl je jnp or sbb pop jo fs lds sub sahf stos pxor mov cmpsb add (bad) aas dec (bad) dec push jp lcall fisttpl aam aad mov push pop xor (bad) dec dec push cmp mov jns out sbb rclb arpl add out cmp jmp push (bad) sti jg imul xchg leave jnp mov pushf jo mov pop or xlat mov sbb scas lods stos rolb fsubp sbb add cmp sub jmp xor or or int3 rcrb mov mov adc mov sub stos cs loop mov mov add jle sar cmp lea loope mov jg jecxz stc lea addr16 (bad) aas sbb jo test je pushf mov (bad) rol pop add jnp repz invd fsub int mov adc inc inc sahf and jl sbbb sub stc cmpl mov add mov ds or mov adc mov repnz inc scas pushf test jnp outsb cltd loop outsl and repnz rcl pusha fdivs push lahf movsb ret or pop sbb test (bad) or mov or sub pop mov sbb mov push xor add add popf nop mov pop cld iret aas and pusha mov adc jbe sub or jne mov push jmp and sub dec pop loopne stc fwait pop imul jge stos cli nop fidivr xor fs fiaddl aas sbb xchg mov pusha lea ficompl jecxz and jl sar jge xchg lcall sub (bad) js popf add jecxz sub fild push test sub enter out in add scas and jg pusha mov outsb (bad) mov pusha jnp push add cmp pop jl sbb xor stos xchg push push xchg ret daa jp addr16 sub sub push aam xchg pop xchg jmp mov getsec stos or dec add into pop push jg mov mov mov jno es sub stc mov pushf xchg cld jge jbe push sbb add (bad) jle jae stos lahf daa test ret add or bound push sbb imul jg or cs add mov cmp repz stos adc cld je movsb fisubr imul das push leave xchg mov subb hlt bound mov ja sbb cmp cmp std push (bad) mov cmc repnz pop sub das pushf test ficoml mov push ljmp lahf stos jg lcallw outsl jp sub lcall int lods (bad) aam lods lods jbe jns lods mov sub jmp and dec pop outsb (bad) push addr16 popf sbb lods mov or mov (bad) insb add mov cmp cmpsl xchg sub (bad) mov xchg or mov int3 ja sbb in arpl stos stc sub sbb test cmp inc mov jp scas jmp add popf fimul lcall jmp dec mov sub fcompl mov in pop or es pop in dec mov mov lods (bad) sahf sahf fsubr (bad) mov insb jnp ret repz fcompl and mul jo jno popf and pusha jns int jecxz jp out mov lret dec push sahf movsb pop pop test push cmp (bad) scas pop jbe mov jbe outsb lods les or pusha jo stos mov jns outsl jbe std testl jmp xchg enter sbb scas mov mov sub lods ljmp jg pushf xchg adc mov cmpsl mov mov jnp mov and or cwtl pushf xchg pushf fwait sub sub xchg push sub imul dec mov gs jle (bad) addr16 jnp addl or (bad) stos mov out mov dec mov imul sub rcrb popf adc and add dec in in stos cmp (bad) mov pop (bad) mov lcall cs js scas xchg jnp bound jle call out mov sbb mov mov jle jle xchg xor or (bad) sbb (bad) das cmc mov adc movsb jnp lods cmpsl cs mov repnz mov stos in mov and loope or sub or and adc jl push cmp mov pushf (bad) rorb aaa dec sub pop push imul aas movsb xor mov cmp sub in sbb lret jb lods sub aaa mov jl sub xchg jl fcmovnb into mov xlat aas aas pusha movsb push jnp inc out fmull (bad) or (bad) ffree clc lcall pushf add test in adc popa pusha cmp xchg call ss push fs cld mov (bad) (bad) cmp (bad) lret adc in int3 push cmp cmp xchg or lahf adc jno push jle divl data16 std add fadd out pop jl enter xchg push sbb pop dec and sub xchg push add cmpsb inc insl ret push adc xchg lods xlat sub cmp mov sahf sbb fwait xor xchg mov jge jmp sti fmull stc stos sub outsl insl mov aam jge int3 test jp or jecxz pop int js test bound inc andl loop xchg neg and push repnz push jg decl mov loop movsb xchg mov and and jl cmpsb sub add mov xchg mov (bad) xor popf and pop dec cmp cmc add rcrb insb mov inc cmp xchg jbe dec (bad) (bad) rcrb ret into ljmp xchg xchg inc jnp pop and dec sub xchg imul cld mov pop sarb arpl fstps jl adc test and xor and out mov add fwait push xor mov (bad) pop aaa aad adc fldl test out add xorl cwtl or sub (bad) jp or int shrb test rcrb aaa sub xor mov xor loopne mov push mov shll stos jo ds dec test and je xchg jg rol mov les mov andl pop mov fnsetpm(287 mov xchg sbb adc jo sub je mov scas hlt xor mov add xlat xchg jns fwait lcall aad data16 loop jle xor movsb (bad) xlat fsubr mov stos cmpsb (bad) data16 in sti mov and xchg xchg cmp ret mov mov das sub sti (bad) cld cmp das std (bad) mov push (bad) loope popfw xchg popa std stos xchg mov push lods int3 xor xchg in push loopne mov sub hlt ljmp dec test rcr cwtl stc pop adc and lret clc xchg test inc push pop sbb je movzwl cld sbb ret cmc jg sub inc jb outsl aaa mov negl and sti movsl int pop ror shrl mov jb xchg fucomi scas sbb cltd imul daa mov cmp jmp pop cmpsl pop or xor ret jp fistl daa testb dec sbbb es jo (bad) pop inc inc xchg cwtl scas cmp sbb frstor cli outsb pop xor into outsl lods dec fmull add and fwait nop int inc gs dec inc (bad) mov cmpsl push outsl sub rolb fstpl ret sub imul fwait (bad) lock (bad) cmpsb lods pop add sahf mov cmpsl imul sub sbb or inc fsubl mov cmp adc mov cltd push pop and xor mov ret (bad) pusha arpl movaps xor mov addr16 push aad std inc movsl in and xchg sub subl push inc mov iret jp mov aad adc bound les add (bad) push and inc add or add jl addr16 jecxz js adcl push adc (bad) jle or data16 fsubl xchg adc or sti add (bad) jne jo outsl (bad) xchg jmp arpl sub jecxz jo sbb inc ljmp sti adcl int3 (bad) popl add add movsb jp fsubs (bad) notb pop jmp in adc gs mov jp std jmp xchg pop inc adc scas jl mov mov dec jnp loopne popf jg out push aas fmull lock outsb mov mov fidivrl inc sti jnp adc cmp cmc jecxz lock push dec jg mov mov xor das cli mov mov (bad) cmp push in les or xor xlat lea jl cmp (bad) cltd and cmp xchg adc push xchg xor dec add and xchg hlt gs mov jo cmp rcpps in movsb jmp adc mov xlat add inc (bad) out (bad) jmp sbb add mov jbe lahf sub mov fwait inc cmc pop jecxz or xchg sti push fwait add fisttpl adc popa insb cld test xchg cmp sahf push fiaddl mov out mov daa lret shl sbb add push jnp cwtl cmp adc ret pushf mov inc inc lods fwait push mov or sahf mov jl pusha jle scas jl pushf sbb lods adc mov xchg dec mov (bad) (bad) cmpsl cld jnp push ret jne fwait add jbe outsb aad cmp fistpll les arpl cli cmp out in pop aad fbld inc lods push mov jb xchg push es outsl shll jns sub call cli xchg push jnp stc imul mov cmp jo sbb push shrl decl std sahf mov int3 sarl (bad) cmpsl jg mov lods and sbb cmpb call or push pop pop js xor sbb sti aad adc adc pop adc lea in cli sahf jge jle fidiv (bad) fistp cmp cmc ds sub int3 (bad) in push mov mov xlat adc mov lahf jno xchg lods or add pop jne mov aas push sbb and cmpsb scas mov incl and (bad) xor jp jnp pop push sbb mov rorb pop sub sti cmp push mov lahf and movb rep popa sti jnp pop ret or add popa pop and mov in or fcmovb js sub pop loopne clc ljmp aam and and idivl popf aaa ret jecxz je scas aad jle sti sub and stos cld loope callw mov inc pop out addl lods jl cli pop cli aad push dec push int3 adc rol aam sub (bad) push mov adc adc dec cld pop popa or mov out cmp subl xchg mov xor adc lahf and mov cmpl inc mov test sarb movsb jge nop or aad mov jns push dec sahf mov lds popf (bad) add scas mov (bad) mov lods add or in jle lea mov rorl es sub in in mov mov cltd gs or cmpl add or sbb lock and push ret pop sub ljmp cld add add nop fwait sbb jb test xchg aas adc jl pop push adc add inc pop (bad) add out xor pop xchg out sbb cmp and and lods out out sub jp jb sarl sub inc mov fdivs xor stc (bad) ret loopne mov add movsb mov adc adc dec cs inc jecxz adc bsf sub (bad) sub and xchg and fnstsw lock or std jnp scas pop (bad) jl inc push arpl pushf pop xchg and insl imul cmp adc sbb push and cmp push sbb xchg in sbb in jmp mov mov rorl adc sbb out mov jl fcmovnb cmp std sbb sub (bad) (bad) jl mov ret insl dec arpl sbb int std aaa insb fnsave cmp arpl popa adc into gs cmp xchg sub cmp dec shl test int sbb push lea mov dec cmp and xor mov out fdivrl fsubl popa popa or aad jl xchg aam jge mov fwait enter lret sub std push mov incb rorb test cld loope jb xchg pop imul lahf lret lods sub inc leave and or lods fsubl out mov std scas clc lea mov rcl or into jne pop jnp jecxz std mov jp mov lds mov loopne inc push stos je sbbl ret int (bad) movsl int3 jecxz fwait test add sahf inc fimull jns mov mov mov jb mov stc xchg addr16 or jns push (bad) jmp ja xor icebp subl and jp nop mov or int mov (bad) dec fwait mov pop and jg rcrb subl xchg jl cmp sub hlt lock dec mov test push dec ja xor sti arpl or sysenter mov xchg mov loope dec xor loop ret inc inc mov and lods dec mov bound cmp and mov enter test les das (bad) and sarb and sarb and push sub push mov test imul rorl lock push aas stos push pop push add cmp mov lea (bad) iret outsl lods xlat movsl hlt add xchg jl pop inc jmp std push xor dec mov cmp jb int mov bound sub push sub pop sub adc jno mov (bad) stos imull rcrl adc ret bound pushf sbb les pop adc aaa dec inc fwait mov (bad) sti mov stos outsl shrb ficomp cmp cld xchg mov dec lret dec push aaa cmp bnd scas adc jnp or sbb pop daa pushf jl sub out popa jae mov lret xchg sub or cli jecxz jp bound outsl add stos in ret imul call add fsts lret jnp xorl adc rorb xchg cltd jb cmp (bad) jl jg jo popa sbbl test cmp and add addr16 cmpsl pushf pop sti getsec mov dec test push fcoml setnp dec movsl sub xchg stc fs adc cld cmp push push mov sbb ja faddl cmp addr16 into lods pop push negl rcrb repnz fnsave nop stos cmc fildll adc pop jae leave lret dec in in xchg stc pop mov pop fiaddl mov sub (bad) push mov mov sbb cmp jnp jne and pop mov fdivr lcall daa movsl fnstcw and (bad) jmp ror jnp mov es lcall out mov or cwtl out push adcl jg out xor dec mov (bad) cltd mov sub movsl mov rcrb cmp (bad) push leave call (bad) pop mov add inc lods dec (bad) push or pusha hlt scas loope lret lock adc or ljmp or movsb xchg test push xchg rorb rol cmovnp roll orb ficompl cwtl pop insb and ds popf mov repz push daa xorl cmpsb jle in or js push nop (bad) mov push es mov ja dec dec cmp add mov add aas mov ret push xor (bad) xlat sbb jl (bad) bound push add iret cld fldcw lea xlat pop sbb pop mov sbbl sbb mov stos jae popa in sti fcompl cmpsb fisttpl (bad) mov insl dec xchg pop fistpl sbbl cmc adcb pop add dec push mov (bad) out pushf add subl inc push lds cmpsl jl lcall or aad and fdivrl inc cmpsb sarl into inc mov outsl mov test sahf jnp mov and sahf cmp adc add sub lahf cmpsw pusha sub (bad) pop jge aam jge call lahf aam sahf lea scas hlt out subb int pushf dec ficompl es inc inc orl jl insb mov xchg sbb es jl mov int sub adc sbb int3 pushf pop and negl mov pop les imul mov int mov fbld ds sub in rorl fldcw sti popl mov (bad) fisttpll icebp jnp lret xchg cltd and pop sbb cld mov cmp movb scas jg push out inc sub aas jnp pop cld mov sbb jecxz pop push dec loopne push sbb ret add ljmp or xchg mov fwait mov mov mov jecxz aas ret fldl sub stc jge xlat mov cmpsl movsb in xor (bad) hlt rcr pop push push sbb add adc sbbb jnp (bad) jnp cmp inc xchg ror pop xor xor mov movsl jnp sbb mov mov ret cmp fwait xchg xchg sbb cmp fucomi jno jne mov pusha jmp mov pop std outsb stc xchg in (bad) and sbb mov jge inc fcompl adc cmp (bad) or push fbld (bad) mov outsb stos sbb pop jl push mov (bad) mov jecxz jo (bad) xchg and cmp mov ds outsl or sbb out dec hlt jmp jecxz movsl stos repnz cwtl and leave fistl add popa sbb fwait dec pop mov xchg cmp movsb and or icebp and (bad) push inc (bad) scas lea mov imul jle das (bad) cmp lahf mov xchg push addr16 sbb add sub pop mov xchg sub xchg mov sbb rol nop dec add xor andl (bad) aaa ds fsubrl lods fwait aad out sbb cld cld push stos pop cmp inc mov mov fildll inc enter fs jle cwtl adc inc jnp ret dec iret rcrl in dec imul sbb jb mov lret pop cs sbb mov cmp mov fnstsw add dec mov mov leave pop je mov xor adc iret ljmp or (bad) movsb (bad) jnp sub xchg jle mov sub repnz aaa mov inc mov mov xchg popa push pop popfw lea jo (bad) std sbb mov das popf fldcw (bad) ret sub shrl cli fwait mov and ret jnp fstp mov inc loopne push xchg fistpll or xchg jo scas ljmp xchg xchg out mov mov add fidivl push ljmp call sarb test pop data16 enter orl push or add cmp (bad) or stos stos lcall std pop mov int fwait xchg lahf sub shll sbb mov stos mov add out xchg mov iret out xor out adc dec jmp mov push adcl mov pop loopne daa mov and movsb fwait int sub lret out add (bad) fcomps jo fidivl mov lea sbb shr mov or jle inc sbb sti rorb dec shrl and dec stos bound xor mov adc je pop xlat mov leave or lea mov mov cmc and adc dec iret (bad) fs lock pop cmpsl loop les or rclb mov sarl test mov mov (bad) lock popa ret insb stos out push and and testl xor dec rclb loop sub mov mov mov nop cmpsb shrb fwait add and and popf xor std mov jo fisubrl test jb mov jmp ret xchg mov es mov mov (bad) nop mov mov or pop jnp (bad) jp dec (bad) lahf imul pop stos pop mov jp lcall fwait sti fsubrl jnp in lret xor cmpsl (bad) jp pop cmp pop ds push add pop ret cmp adc jnp lds int3 cmp pop stos mov int fwait cld daa jg (bad) jl cmp xor and mov mov pop sub shr xchg jae int repz mov xor mov add in mov movb rorb push mov loop iret push sub lahf push and stc (bad) mov pop xor jnp push shll mov or xchg fldt stos sarl jle stos mov mov xchg das stos clc inc test add dec out pop or outsb sub pop cmpsb fwait ret jg enter fcoml aam adc jmp aas fstpt sbb mov or push mov lret aas xchg push mov jl mov pop int3 adc xchg sub cmp xor jp mov cmp and loop jmp lea test jmp push leave inc xchg add sti cs cmpsl dec sub inc pop ljmp add imul out fistpll aaa mov sub push in and les bound add jne xor pop cmp pop sbb rcrb pusha inc stos outsb and stos push outsl pusha add repz add pop popf cli pop cmp leave sbb ds lcall inc nop mov and and fcomip dec mov jg cmp jns lea cmpsl adc gs inc pop ds insb mov fsubrl pop stos js pop add adc jb mov imul sbb mov sbb (bad) cmpsl xchg cmp pushf jge es loopne faddl cmp sbb inc shrb xor sarb imul add ret in xchg fisttp adc lret mul out sbb push pop dec push mov std call jnp sbb fcmovnb aam sarl mov int push popf cld cmpsl sbb stos daa fcoms aaa fstp push inc sarl sbb sar jle (bad) and enter xchg insb out ss rcl sbb fwait popf repz add pop mov test add jnp mov scas clc xchg mov jno mov fucom cld adc stos int jmp cs in cmpsl icebp push pushf mov mov das (bad) clc ret js insl jae sarl sub imul cmpsb add mov xchg jno sub pop hlt pop jne pop jle inc mov fnstsw (bad) enter fsubrl mov mov loopne dec jb call scas stos cmp sub sub jns pop orl fnstenv xchg jae mov sub jb add in jne iret and dec jp sbb insb cmp aas or and scas mov ja into mov leave ja mov ret lahf stos push inc xor inc (bad) adc (bad) lock sbb bnd mul adc and mov mov pop ret popf inc aaa lcall outsl mov hlt mov xchg cld stos cmpsl fcoml or es mov mov ret and neg jbe xor sar dec ds xor mov (bad) fcompl mov pop add ljmp lods adc in mov call jl nop cmpsl dec sub pop xchg imul mov insl cli sub sub (bad) insl popa add push clc xor pop jmp jnp cmp jge xor mov add pop pusha add fnstcw (bad) cmp fisttpll mov sbb repz mov xchg add xor pop imul push jne push push add mov in stos xchg jo test (bad) mov lods sub idiv leave aaa ret les mov std ss sub or lds pop insb add sar out imul decl push push es int (bad) sbb jle dec inc test aam xchg gs xchg pusha lds push daa or test jle popf dec or mov clc insl push lea and dec in popf sbb test cltd or dec daa sub addl xor inc pop mov push xchg adc pop in inc stos push (bad) ret daa in enter or adc scas mov imul arpl cli or sbb test mov js outsl jge shlb je jne xchg imul ret add mov adc sbb fwait data16 push or cltd jns (bad) mov pushf psrld dec das pushf push inc or in out lcall sbb or insl inc sbb iret test dec mov and jecxz movsb fmul mov mov adc shlb push mov aam lret mov movl inc or pop mov or push sbb sti add mov clc pop (bad) test adc jnp gs sub xchg add sti repz aad rcll sub xlat ficomp (bad) div (bad) pop jno,pn aam into lahf pop jp inc popf in (bad) sub data16 sbb pushf inc movsb jp dec xlat cmp dec cmp ss daa push ret add in jle das ret jle push jg jb adc sub lret les test jno adc stos jnp xchg cmove (bad) enter jle mov sbb add push loop aaa mov insl cmp mov (bad) mov cmp dec xor or pushf sti or jno pop fwait ret lods stos cmp xor or xchg cmp dec cmp add fnstsw das es dec rclb out cmp sti cmc jl mov ret (bad) cmp fmuls lret pop xlat insl fcmovnb (bad) in jmp and pushf cwtl or cmpl mov sahf andl stos std retw jns pop mov or mov inc jle jno pop fwait in push adc stos mov xchg ret (bad) xor push and pop or xor adc xor cmpsb sub dec (bad) xchg shr cli adc jl sti add sbb adc loope dec les xor out shr arpl mov cld xchg les jg fild jnp sahf mov cld aas negl dec mov in mov inc sub mov fidivr jp sahf inc pop sbb xchg sahf cld or ret or add cmp repz sbb mov cmp pusha jne in mov push xor rcrl enter sbb mov dec pushf (bad) rorb std or daa mov jnp jp mov rcrb aaa mov imul repnz icebp and cmpsb xor mov inc cmp loop nop test push std mov cwtl push int lods pop js,pt test ret cmpsb mov lret (bad) rcll adc sahf jmp repnz or (bad) ret out pop fild cmp outsl dec jecxz (bad) mov ret adc pusha jp jbe data16 ja push and rorb fisttpll mov pop idiv lret fnsave mov pop jp inc mov or fwait ret push sub ror xchg fstp popf xlat jge (bad) lcall std adcb mov sbb pop insb push xor push xchg sti mov cmpsl inc pusha hlt pop ficompl popf shrb cmp lret ret daa add push aas inc add jns pop xor aaa adc jnp outsl push push and hlt mov or add xor pop loop lret jg out call xor ds nop daa pop call mov mov sbb lock lds (bad) cltd xchg mov or enter dec mov push mov adc inc dec ja ret and lahf mov cmc sub dec sahf (bad) cs lcall mov int3 fs clc and inc out add pxor je jnp jl repz cmp mov jp popf dec les insb inc lods sti mov add jle aaa dec popf or xchg mov leave adc mov and inc fs ret aaa mov mov pop fsubs lahf jl mov xchg mov mov mov les (bad) xchg mov sarl xchg rorb dec loop fwait xchg stos sbb mov inc sbb mov fisubr mov jae mov lea dec imul (bad) cmp lods (bad) mov xlat lods sarl jecxz jb pop in leave cmp jne out or scas cmp repz mov fwait mov mov loop ljmp cld ss rolb js rorb pop sar test inc lcall (bad) add js cmc mov insb adc mov mov iret sub mov sti lods and mov pop mov jne add sbb sbb dec stos adc sti fs jg stos test imul xchg jae xchg mov sti xor sbb xor nop lcall (bad) hlt push sahf add out sbb (bad) imul pop test xor ja fcmovnu jg pop push add mov xor std outsb popa jae sub mov out or ljmp push push xchg mov stos or jnp dec stos jnp mov fild ja stos lcall repnz lahf loopne test enter mov push or iret das or lcall or push loop arpl jecxz movsb lret push pusha mov sbb add sti inc (bad) and std rorb cmp jns in jp sub dec cli jle,pn dec and jp sbb add xor loopne dec mov fdivrl aas cmp std sub pop in and adc dec xor test xchg repz mov out lahf fs in popf xchg adc in shrb out rcrb mov fistpll add xchg sub stc leave pop out jl or lods mov mov sbbl push dec in push jecxz or roll lods jg scas cmpb cmp sub push cmp mov sub in pop rcrl push jl popf xchg call ret fldt or jnp or mov jb int xchg jno or pop xchg mov (bad) mov lahf lret xchg cmp aad cmp cmpsb repz les mov imul and (bad) pop or (bad) call ret xchg mov mov or pop sub fs and rorb sbb add pop sar ja in push sti jle loop pop pop cmpsb stos les scas pushf insl push (bad) sbb out sbb add xchg cmpsb ret or adc mov in jp xchg leave or jbe and aad dec punpcklbw xchg add mov fwait ja mov sub push aas mov pop popf xchg adc mov stos pop mov idivl sbb pop ss add lret shll mov fnstsw mov jle xor cmp adc pop aas jmp jmp stos jno xchg xor xchg imul insl mov test lods ds mov mov push pop push es ret jno cmp cmpsl lahf test lcall shrl xchg xor mov jnp jo orb jp jb push sub add mov cwtl mov nop loop mov movsb dec push test fidivr mov mov lahf add lds inc pop and fbld psraw fwait sti sti ret adc aad cltd dec out xchg popa add add testb push sub sub push push (bad) (bad) sub in clc outsl clc cs inc lret out jp rorl jl imul dec push mov xchg fcompl mov mov adc notl mov inc out and jl ret sbb mov dec cwtl imul daa pushf or cld cmpsb js fwait mov and xchg and cmp stos ret pop and iret rcrl push mov mov cmp sub (bad) cwtl mov mov outsl or lds movsl sub or ret sub jg mov xchg push cmpl in lcall pmuludq addr16 add icebp in mov inc sarb daa adc testl mov jnp rcrb sub xchg rolb cmp sbb mov bound sbb movsb sub jecxz and fwait ror sahf push fcoml mov int3 cmp clc iret and popl push les es inc mov adc ljmp mov dec cmpsl test lahf das loope mov aam daa mov int int3 addl fbstp rol out popf call (bad) sar cs (bad) out cltd fbld pop add push dec cmp or popf mov sbb jecxz mov mov in mov mov dec jae xchg andb sub or rorb jle rcrl out cmp sbb lods xchg cmc punpcklwd sti or and jns push sub stos push ret push mov push jns fisttp fcmovne cli mov jnp das jae mov mov insl mov out rcr lods add jnp,pt pop lret mov les and jnp out addl mov nop lret inc adc out lods loopne push add xchg mov and mov and xchg cmpsl (bad) jl mov pusha cmp dec jg push lods mov lds pushf or mov sub jmp sti xchg movsb xchg inc (bad) fisttpl mov add pushf sub xchg sbb lds pusha adc lahf in pop or in push push cmpsl (bad) bound cmp mov mov lret xchg mov nop in jp dec add xchg mov test dec fsub hlt or insb pusha das mov andb mov lock lods xor cwtl jne dec pop hlt jl rcrb ss inc cmp cmp (bad) repnz int pusha sbb fwait (bad) xchg mov add sub cmp xchg std je rclb repnz push loope fabs out stos or dec ret jnp test jo mov mov pop lret lcall pusha out into in xor ljmp arpl ss negl xor nop jp sbb das faddl push cmp loop pop movsb jle pop mov mov jmp incl test daa cmp cmp jnp push test mov mov scas xchg sti fcompl mov dec jns add (bad) (bad) aad ficompl (bad) xchg or out xchg das ret jns (bad) push mov cmp andb push aad pop out int ret mov daa mov loope and jo push jne pop lock cmp cmp dec sbb dec pop sub mov out inc gs inc bound jp mov sub sub cmp je or repz dec mov jb jmp test hlt inc xchg pop lods cmp adc lds aam ja and outsl sti rorb aam call xchg jmp mov aad jb fs xadd xchg pop loop inc movsb pushf ljmp das inc mov cmp dec popf cmc xchg (bad) cwtl sbb sub push mov mov xchg cmpsl pop ljmp jp das daa mov and add mov dec sti sub mov jmp and xor and sbb push ds pop pop pop add fmuls xchg mov sarl xchg test fdivr fwait popf fstpt cld cld or ss and lcall jns je cli push imull xor out mov (bad) pop lret push outsl sbb cmp sbb daa xchg fdivrl mov out add mov sub cmp inc into mov jg sahf movsl fwait mov adc loopne (bad) lods mov fisttpll aas pop push roll (bad) jecxz divl cmp fdivl dec push stos adc out mov inc popf jmp int3 (bad) jo stos sti pop cwtl sub pusha rol xchg cwtl lods jge stos add mov mov adc sti ljmp push lock jl pusha sbb mov inc jmp xor pop push dec inc mov ret mov jl shrl lcall stos loop ss mov iret and shr in mov pop stc add dec mov inc pop mov das call jmpw mov out or imul sbb ret (bad) out adc sub sti or dec cli sbb add cmp in insl jp mov add jnp sub push aas xor ljmp adc int mov in and (bad) and arpl (bad) enter fistpl in inc cli aaa cwtl fildll xchg sbb cmpsb fnsetpm(287 sub push mov xchg lahf loop (bad) push mov mov ss mov jae push daa out mov (bad) mov jg fwait jmp scas mov jo mov xor push jle dec mov sahf jl fisub pop imul and fldt xchg sbb push loope inc sti pusha data16 jmp (bad) mov jl sbb mov ret pop inc pushf push stos sub cld addl mov jno or repnz pop lock jp mov jne adc fmull jecxz xor mov pop mov popa push hlt pop movsb mov out push inc rclb loop dec in xlat inc iret sarl dec subl push dec cmpsl inc stc dec fs adc int3 bound mov les jne cmp inc cmpl push mov stc push xlat movl mov sub xor mov nop in xor inc jg jge sub jle sar mov or add daa dec clc push fcomi inc ss lods adc mov push or xor (bad) (bad) cmp push mov sub adc (bad) xchg mov dec mov (bad) push mov addl or stc (bad) fcoml lods or clc adc dec insl jae cmp adc lret cld into ret das mov (bad) ja,pt mov push or push or mov jecxz sahf int lret ljmp push iret inc movsb mov mov lea xchg (bad) mov push pushf and in adc sti mov pop sub lods xlat nop mov jbe sbb mov int cmpsb ret sbb adc sarb mov push loopne (bad) rcll xchg xor xor addr16 jge cmpsl or lret clc es imul aas add (bad) fbld mov add dec mov xchg in sti sarl dec sarl pop jo fistpll jbe push pushf adc into xor fidiv mov jae rorb mov lds das jmp pop cld lahf sbb lock sub lea mov cwtl xor adc mov in xchg dec mov mov push sub gs mov sbbl nop or inc mov jo cltd in jae mov pusha mov adc (bad) xor int fcmovnu lods sbb bound inc push adc nop xchg ret loopne push dec or mov and lret jmp loopne sbb mov mov loopne inc dec dec lsl int (bad) (bad) js add add mov arpl sti mov scas and and pushl and clc sbb or rcrl mov and lods test jne lcall adc dec lahf stc sarl in jle dec popa pop subl pop cmp fstps jnp or int insb in inc cmp roll mov cwtl jp or and pop xor jnp (bad) hlt repnz cmp fwait jp add scas cmp in repnz push imul xor in cmpsl mov fcoml xor mov icebp jbe cmp pop fs mov sbb std insb dec jnp xchg sbb pushf jge jno adc aaa pop jge in pushf insb mov mov les and mov lock inc adc jl ret (bad) shll ss jnp fwait pop std cpuid test ret inc ljmp (bad) fldenv fdivrl cmp mov sub mov lock stos insb fcomps jle jge sbb cmp fwait sub or lret jbe pop mov and mov in adc sub mov lret fwait and repz cmpsb xchg pop jnp cmc add (bad) adc hlt pop out pop add xor cmp ss or stos gs push adc mov jg mov inc inc pop pushf cmp mov jne inc inc adc ja stos sahf sbb lods shll lret ucomiss (bad) mov push mov fisubl inc push cmp scas das cmp fwait sbb (bad) outsb cltd fsubrs sarb int (bad) pushl lods fstp (bad) pusha adc fs xchg cwtl xchg jnp mov inc jae rol pop inc mov cmp mov cltd loop mov push test dec sti aam ja push jg (bad) push inc sbb adc push pop jge sahf rclb sbb fmull cld or mov push pop call add jg mov and mov (bad) lahf cs sub push cmp in ljmp cmpsl bound mov sbb test (bad) popf xchg mov nop mov out sub jle pushf stos ret pop sti inc mov pop or adc push jnp inc pop cwtl or rcll add pop push add int rcrb icebp fstpt repnz cld mov lcall mov cmp cs fldcw inc pusha pop pop je mov das negb pop sarb push pop test mov inc sub insl or cmp (bad) jl pusha or out repz cmpsb sbb js icebp repz inc sti fs cmp (bad) insl bound jb xor test sbb pop mov and cld xor or (bad) sbb sbb or xchg cli int cmp jbe and sbb xchg pop cmpl xor push mov inc add fwait lahf repnz in jg sti aam sub inc cld rcr xor shll push ret pushf cmpsb data16 movsb or xor mov adc jp shl jmp sahf (bad) cmp cmp mov mov repz hlt mov or loop inc shlb dec jb imul cmp cmpsl (bad) hlt into sahf mov push repz mov fmuls pmulhuw push iret push sbb mov dec mov inc push push out (bad) in scas sub add stos xchg sbb fildl ja lcall imul lds scas ss dec inc jge bound pop scas (bad) rclb push imul xchg mov (bad) adc cmpsl mov fisubl (bad) jb clc aaa xlat jp cmp push fcomp xor mov jg lods or jnp jge (bad) shlb inc inc hlt push adc cmp mov jl lahf mov (bad) mov jecxz mov fadd test cmp xorl pop and and (bad) jmp in outsl xlat xor jbe repnz icebp rcrl mov and xchg out arpl jbe rcrl cmp into xor lods xor lds cmp dec int add aam dec js sub mov jne loop mov shl pop and lret in xor adc xchg mov cltd imul mov push jl mov sub dec sarb inc movmskps mov jg lret mov and push in add sbb mov stos mov or pop cltd xchg stos and pusha and push jge add stc loopne into inc bound test push call push test adc jno or cmp or cmp xchg call in in jp in ret cmp gs rorl cmp mov dec mov loop and xlat into jbe mov aas fs out pop mov pop fsubrp cwtl and lcall and loop pusha cmp xchg xchg jnp ret outsl stos insb rorb cmp push and loop xlat sbb insb pop test xchg aas insb jge lock mov lret out nop dec jns inc xchg inc mov mov push mov ret imul in cmp push dec fdivr les data16 xlat ret push lds lds adc ret fildll ss mov inc lds fnop loop pop push mov lahf lock xchg ret add add ss inc and clc cwtl jl push inc icebp mov andl push mov mov sbb xchg mov jg sarl or cli pop or inc rorb ja out nop pop mov das pop jge cli adc in sahf mov sub jl fisttpl out dec inc cmpsb jnp cmp ret xchg mov insb cmp imull adc or lret xchg mov (bad) sbb dec mov shrl das in pop xor into xchg jbe movsl scas in arpl into lret dec cmp xchg mov and or hlt sahf mov add in fcoms push daa mov or imul xchg jle or adc jne cmp cmp nop mov repnz xchg je out mov sub or push cmpsb mov (bad) sahf fimull loop dec dec or or cmp pushl adc cmp pop fistpll cmp test ds jle jnp test sti jl push int3 cmp pop pop mov pop xchg jg fnstsw (bad) jne xor frstor xchg sub and iret test mov lcall cs shlb (bad) cmp add nop jl in pushf je mov jle inc mov adc mov outsb xor je (bad) mov ret or push inc test push cs mov mov sarl fwait cld xchg test cltd stc in sub mov xchg cmp pop scas pop faddl mov add (bad) rol in cld imul push jecxz cmpsb insl rclb loope daa sti or rcll in out jle and cmp adc mov inc lahf mov jnp gs jecxz stos mov test ds mov arpl cld adc sub lahf mov sti in sarb sbb clc sub roll inc mov pop mov icebp jle mov inc mull push rclb xchg (bad) es rcrb inc jge push mov mov dec mov mov pushf lods scas adc ret push or push jl push lea cltd xchg mov shrb adc push push xchg jnp cld inc mov fidivr push lods add movsl decl pop icebp (bad) shll popf test repz aaa jo loope push sbb mov adc and inc pop loope and sahf cld idivl add ret cmp cmp fsub loopne insb mov in jp std cmp (bad) jp mov cmc pusha lock sbbb add rsqrtps cmc push lahf mov lock xchg push dec mov (bad) cmp lret sbb bound jmp in mov adc jl imul outsb pop pop mov xor or clc cmp cli pop lock push add xchg push dec push mov or (bad) stos in jp or outsl decl fnsave push mov imul mov shrb inc push push lcall int mov arpl mov jmp jl sti movsl int3 (bad) fldenv mov outsl mov cmp mov mov scas adc arpl fldl aad outsl sti jge cmp cmp cmp inc sahf jae sub jnp daa (bad) pop jge sub ljmp xchg roll mov xchg idivb xchg inc or bound pusha ss enter (bad) pop cltd cmp mov cmpb push or cmp lods dec enter pop add icebp std and stos xor inc fnsave das sti push xchg push ret push jmp pop test (bad) xor inc pop jnp clc jb fist mov fsubrl lcall insb pop jl xchg stos ret sbb jmp imul es push and aam adcl (bad) inc ja outsl ret fisttpl sbb out call orl adc sbb jp push sbb roll nop push pop sub addr16 mov ds mov and sar int3 addr16 jg lcall pop and jo add shl in incl out sti fisubr add lahf loop out and xchg scas mov push jb mov in xchg push imul or or ljmp adc mov in add cmpl push pop (bad) sti adc stos rolb lret ret pushf cmpsl adc dec pop cmp addl (bad) xchg mov jp sbb inc cmp sbb lahf sti orb jle sahf into push and cmpsb or jg clc mov sub inc loopne jnp mov mov jnp cltd and test cmp jl fwait jl cmc jmp mov aas rcr pushl push dec cmp in out push sub mov lods pop and mov imul outsl out xchg adc dec ret xchg dec sub stos les pusha lcall and pop add xchg mov jnp inc fadds pop mov mov pop ds pop lahf jns sarl call fistp roll pop out (bad) inc mov test incb in mov cld sahf ret xchg inc orl mov mov cmp mov cld mov lods sbb loop call and cmp pop dec inc mov mov test fidivl inc pushf adc lods jecxz mov mov loopne inc push mov jl je (bad) insl mov cwtl sbb stos ror int3 mov movsb mov faddl cmp cmp jg lods cmp pushf fisub mov lds add jle mov jg xor addr16 jp inc movsb cld jp jge jnp leave add mov repz sub nop aad jnp cmpsb test in stos sub xchg pop sub test cmp push and inc and aas (bad) cmp inc sub ds insl vmovdqu jae fdivl lahf jae mov (bad) jo cmpsl pop sub and in mov add std push cmpsb cs repnz adc jg and imul mov cld add pop (bad) mov or faddl xor andb dec mov outsl and or into push mov jmp and shrl jo (bad) scas outsl addl xchg das iret mov ret mov mov inc push nop jg push leavew xor loopne add pushf or cltd in cmpsb jge dec cmp dec push sub ljmp fisubr stos sub imul pusha call sub inc imul push fwait and divl push js test mov pushf cmp jg pop adc rcrl xor subl das xchg or mov dec cltd sub adc and (bad) decb push adcl mov mov jl add cwtl sahf (bad) sti faddl movsb xchg dec lret mov popf and lods (bad) icebp push sub in movsb cld clc mov (bad) faddl mov mov cmp mov add pop (bad) mov mov mov fisttpl fisttpl xchg lea xchg mov stos mov out jmp sbb sub out push pop lods imul mov cmpsl scas cmp mov adc inc jg,pt cmp cld push jecxz imulb add mov scas repnz mov pop mov push inc imul mov pushf cmp add (bad) pop popa test xor sti or mov (bad) jg mov lret mov test rol sub shlb gs jecxz or xchg push jg in xchg mov stos nop pop or call or pusha xchg inc shll sub das cmp xor in inc roll cld cmp lahf psubb sahf in movsb daa aam ss mov mov imul in pop mov scas int out int mov lahf jg lahf aam cwtl pop stos jo mov scas cmp pop loop pop cld adc fwait jl jb jle mov push pop mov cmpsl scas xor mov mov mov dec mov pushf sbb std push adc mov push mov jmp and fwait aad or or xor and fiaddl sub cmp adc out lock loopne leave xchg adc test sarb aas fnstsw sbb inc cmp mov movsb sahf adc adc insb movsb in fsub test dec mov mov and inc insb jg inc pop pop shlb jbe cmp mov sti sbb dec and scas cwtl ds or mov and add loope std lret fsubr shr lods inc push aas ret imul cli int cs pop add enter pop push pop ret mov scas mov lods (bad) cmp insl rcll loopne lcall scas rcll jne dec test bound aaa int popl (bad) daa inc pop pop mov sbbl sbb mov mov inc sarl outsl cmp inc movsb ret out cmpsb std popl (bad) mov sbb cmpsb cmpsl int3 sarb xlat ret jl jae adc lidtl dec jo inc cli jle les dec hlt js (bad) xor jle add mov or sbb adc mov pop sub xchg std mov mov cmp cld lock fs cmc add sub pop fistp sbb sbb mov or sub sbb mov pop cmp into xchg push sub dec cmp sbb sahf fsubr add push cltd xchg sahf fisttp cld adc (bad) mov imul or jle or int insl test in and mov add insl leave lods or (bad) push test and dec pusha jle imul lcall adc cli faddl push fadd mov std mov test cmp jge stc mov pushl das and mov jnp adc lods ss andl rcrl in int lahf sbb scas std sarb ds sbbb (bad) iret or std fdivs push xor xchg or sub ret adc lea cmp (bad) mov mov cwtl add and fist jnp (bad) (bad) mov inc fwait mov and mov inc cmp sub inc sub cmp sbb mov loope cld cmp cmp rcrb andl pusha mov xchg inc dec jle inc insb inc and sbbb add add int inc fldenv (bad) push call fwait shrl bound sbb repnz sbb imul mov mov (bad) lahf bnd mov (bad) negb cmp outsb add mov jle int aad out adc xor insl in (bad) xor ret dec and in add xor jp int3 jg je mov inc adcb imul or mov cmp pop jge sbb inc ret popf orb std mov xchg cmpsl pop outsl lret pop xchg or outsl (bad) std jg mov sbb cli fwait xchg inc cmp loope push ljmp mov int3 add and push xchg sbb jmp cmp sub clc or iret (bad) imul lahf adcl jmp ret dec sub loopne popf pop inc adc les and (bad) xlat mov in call mov xchg imul adc pop inc or in and mov jnp gs lea push pop je sbb xor pop jle sbb adc mov test in movsb cmpsb sahf mov mov add mov lret mov push or imul fdivrs fbld mov dec aad jbe outsl mov sarl and outsb mov mov inc cwtl or rcll sbb cmp outsl outsl scas pop inc std cmp sti xchg pop daa leave fcoms in test adc sub pop xlat hlt add aaa sub xor loope or add movsl or out stos fdiv jecxz xchg fdivl out divb fsub add pop xor push jg (bad) je push loopne push inc leave mov push cmp jecxz or inc shlb mov jg push orl push mov ljmp pop test pop lock (bad) (bad) xor xlat mov sti jnp jnp test sub xchg cmp lahf inc push lea jge imul clc stos imul cltd ds fwait call add test or stc cmp xchg mov jge aas les repnz adc mov pop push (bad) bnd mov dec jg mov test bound idivb int rcrb ret or mov adc push in jne icebp adc and lret pusha or aaa loop pop rorb insl push movsb adc mull push loop push (bad) cli lret sub sub sub mov aas leave inc loope (bad) cmp push add sbb jmp sarb repnz (bad) subl aaa jae pushf add push mov sub (bad) or sbb pop nop (bad) sti push sbb cwtl imul fwait fwait cli xchg sbb enter sbb lods or pop xor repnz sub fmul gs lock xchg xchg cmp and cmp (bad) mov lcall sub pop push call cmp jg fisub jge cmp call out mov lcall ja shll mov or xchg scas call (bad) movsb cmpsl adc incb out and mov ret jo and rol push mov test adc mov nop jp or loope pshufw push das int aas push (bad) sbb popa add movsl (bad) aaa or scas xor mov mov scas sub sub mov jns call push mov repnz pop mov je addl adc incl jmp cltd jmp push call mov jnp inc imul test pusha lds fwait pop mov in cmp jge pop jge adc push adc sti jno das imul in mov adc hlt daa hlt int3 add outsb add push popf dec mov or jle or fisubrl dec push sub jo lahf adc jnp or jle cmp mov faddl add cmp pop lods mov iret xor sarb sub aam xchg cmp jmp imul mov pop adc push dec loope jb lcall and pop push xchg xor loop jle pusha sub int3 inc jnp inc int fsub pop (bad) sub nop mov add push add (bad) in loope nop das mov inc sub lods in xor test pop jg dec cld pop fstpt mov das mov or stos loopne sbb fistp lcall jge mov jae xchg test movsb xchg repnz (bad) sarb add mov popf sarl lock out push repnz and (bad) gs jmp stos push adc xchg sub xor stos xchg jp leave sbb rorl lea call mov test cltd inc gs cld sbb lret adc push ret adc sub adc lock inc mov bound cmp pusha inc fdivrl sub sahf cmpsb or jp out sbb jbe cltd leave or push cmp lret in push std mov lahf in jge in inc (bad) lock mov (bad) fdiv sub push outsl and and cs roll pusha stos jl and (bad) out pop lods (bad) jp imul pop push xchg xchg test cmp cmp lret ja cwtl cmpsl clc paddw inc out loop or mov pop fsubl es fnstcw push fcompl cmp std fistpll pop mov shll and jns stos add cmp inc push cmp pusha mov lea lahf or sbb out pop add xchg pop xlat lcall sti add or cmp popa cmp ret lahf pusha int dec hlt repnz lods arpl cmp lea inc ljmp jle pop mov fbstp or xor adc mov stos daa aam outsb fldenv push imul adc popf iret pusha jnp sahf call xchg mov std enter outsl jge xor (bad) fdivs out shr lahf (bad) mov lock pop mov scas stos and or stos mov mov stos shr or popf dec (bad) lcall sub stos mov sarb mov popa jge xchg (bad) int iret pop in test movsb rcrb mov mov push mov aad out add orl mov mov jecxz jb cli imul (bad) xor pusha addr16 xchg cs jmp aad sarl out dec test (bad) movnti sub ja jl cld mov jo cmp jmp add cmp test push mov cwtl repnz adc add hlt in nop imul jp fyl2x fadd leave gs movsb or (bad) sarl cs sahf (bad) fdiv out mov inc sahf leave fwait insb mov mov fcmovne mov les sub dec fisttp arpl leave sub shrl ret pusha cmpsl or adc and sub xchg (bad) adc cmp cwtl mov sub int sarb cwtl fldcw cmp jb stos xchg pop inc mov in rcrb lret ret popf sahf mov (bad) bound mov lock ret lea das mov push stc jg dec std cmc mov test out sti push iret xor jo mov or int ror add cmp push push sub lods mov sti mov xchg or stos pushfw bound pop or movsl imul pop mov or mov fdivrs dec mov push sbb mov mov adc pop mov mov lahf jl add mov dec xor or popf (bad) cs (bad) ja jge into sub xchg test mov jmp cmp cmpb (bad) ffree mov adc insb mov push nop and sti popf xchg inc pop ret jo jnp or push xchg pop testl in icebp mov adc jg lock out fnstsw jnp xor pop sub dec repz cmpsb pop mov sarb ret push xchg rcr stos inc mov sbb xchg pop mov pop hlt (bad) decl popf pop cmp je add push and stos nop sbb cmp insl pop xor xor das mov mov rorl mov loopne aam or nop cld cmp lds je xchg pop nop push cmp cmp sbb scas dec mov (bad) das cmp jecxz lea lahf cmp repnz stos pop jmp and stos cmp jbe out sti jno xchg push and lret jbe jb add out push lods (bad) (bad) mov sbb mov arpl jg jne stc nop addr16 pop ret ja mov pop test mov loop (bad) stc push fwait mov adc cmp pop inc test xchg push cmpsl pop inc std lods or aam enter jnp int cs xor add mov sub (bad) xchg cmpsl adc sbb jmp in sub andl xor cwtl sub (bad) fidivrl (bad) cltd pushf orb pop cwtl lahf jnp inc xchg fwait test out pop sahf (bad) stos lock mov outsl xchg push dec jno sahf pop nop repnz fwait add adc xchg leave pop mov inc xchg pop popf inc movsb or out pushf and adc notb out inc sub pushl lcall push movsl adc sbb fisttpl fimull ret adc adc cs sbb jbe in pop mov iret adc cli cmp mov inc (bad) mov push mul jo out jle lods sbb mov jmp call daa xor push jl or xchg mov fiaddl jmp cmp sti xor test pop test adc je pop jns loop xchg loopne (bad) add dec lock rcl add or std js lea sub sbb pushf jl mov mov xchg ds outsl out jge push das sub jle out es shrb shll scas push fcompl mov jge ret cmp cmpb xchg pushl scas cmp shrb pop cmp lret loop jbe in pop stos mov insl adc jmp lret sbb in jnp in or xlat sti mov mov (bad) xor mov lret xor pop cwtl or pop das or repnz pop add cli pop cli (bad) or push lahf addr16 jle inc jns movsl call gs mov cmp nop pop insb ds dec inc arpl adc inc iret incb nop pop sub mov stos outsl arpl das sub sub fstpt jno mov int3 sub push sbb lcall mov xchg (bad) sub mov sti outsl pop lret sbb nop andl addr16 xor jnp pop cwtl or xor xlat or adc data16 lcall adc fcmovu fmuls xchg outsb adc mov push int push lcall sub out adc jmp sub cmp adc xchg jne sbb loopne pop mov (bad) mov repz das jge dec call mov mov das add mov xchg adc cmpsb pop daa mov xchg call in cmp das xor and push or xchg xchg jmp cs pop cmp xchg es das and outsb xchg xor xor sbb sbb out sub jnp test stos push pop cmc cmp or xchg in mov shrl aam mov pop scas cld pop dec (bad) adc popf insl loopne sbb add mov faddp cmc aaa dec xchg movsb outsb sahf test push iret add ret jle in add dec (bad) int outsb popl inc sbb mov or mov dec std lahf inc addb and dec insb js icebp fwait mov js inc mulb mov jns arpl mov lods sti pop mov push jo call pop sbb inc inc mov xchg shrb jg ret (bad) mov je call test inc lea stos pop inc or vorps mov push mov mov lahf pop sti sub movsb xlat mov lods movsl into sbb lea mov or xchg out mov loopne das fildll cmp jmp wbinvd aas ret (bad) mov shr dec (bad) lret lret push inc stos int3 sbb movsb pop mov lcall xor mov dec or test and or jnp sbb or or xchg test lret mov insl (bad) cli rclb jno jle rcrl mov int3 daa sub jns jg and jbe pushf mov stos push ljmp aas cmp je daa sbb or mov mov aad jnp imul bound daa cmp cmp ja xchg sbb sbb cld jnp and jl adc jg sbb (bad) xchg lods cmpsl xchg das jl addr16 mov inc sub outsb mov mov and dec cmpsb aam (bad) out sub add dec add pop aam or mov pop ret mov mov les sti sbb jne adc (bad) mov ljmp and (bad) sti jle jnp test adc int3 cmp cs aad loopne fisubrl sti jp mov test cmp or or das ret iret into jae inc in jg dec stos call xor loopne shrb ja pop adc mov jno scas popa jg sahf stos call sbb test lea xchg push inc mov xchg xor or mov dec xchg das and adc and cmc sti mov mov add or ja add stc in mov fsubrl pop popa jge (bad) mov ret outsb lea scas mov mov mov ds cmp or ret int inc aaa mov jnp cltd aas out outsl jl cmp sub sub outsl das (bad) push repz aas daa mov mov ret call adc sub and scas popf jl scas lahf mov push add aas out cwtl mov jecxz jae iret dec sbb cld cld pop das jl in jnp int3 jge aas sub sarl sub mov pop scas negl cld scas (bad) jl es out insl aam sti ja std js jmp push stos lcall mov jecxz shl addl mov sahf mov mov adc mov inc xchg (bad) jg ret (bad) jecxz sarb lahf xchg pushf cmp idiv loope jg in or movsl mov lea pop cwtl sti sub es jp dec nop loopne mov aaa mov sub ja aaa xor or (bad) imul add lds cmp jno and out push pushf pop or aas lret dec mov cmpsl fstpl jp adc rcr out jecxz (bad) lock pop cld popf aas scas mov (bad) call out pushw out in aam repnz stos mov cmp push mov rolb or push adc cwtl jae cwtl ret push jl mov in dec sub into scas sbb sub push or ja add mov and test test mov adc or arpl pop jb loop (bad) xor fnsave push gs arpl icebp adc stos and dec xor inc jnp push popf imul mov mov cmpsb or popf jo loop mov (bad) mov sub jg and test lret sub js mov insl push inc jle pushl shlb inc xor jl mov sbb and cmp aaa aam addr16 loopne cmp sub out sbb mov xor jge stc pushf xchg mov cltd stos xor push pop mov and pusha rclb lock cmp jne pop adc pop sbb xchg fs xchg hlt and out shr inc aam cmp jg das rcrl addr16 mov int3 jbe std mov jle dec xor sbb roll pop aas push pop imul pushl pop jne push data16 pop add sbb jmp cs fwait aad imul cs nop pop sub add sub mov xchg pop rol inc int jmp cld pop shlb push mov test (bad) mov loopne inc inc jmp jge push pop mov aam in mov rcrl roll aad fmul pushf pushf sbb fstpl fstpt cmp push xchg lds mov pop jnp fsubl cwtl jecxz and pop sbb decl dec (bad) push push dec push lret and cmpsl mov mov pop test cmp lret jge das pushf mov fsubrl repz mov xor mov mov shlb jl rcll pushf call in xchg ljmp enter jmp xchg xor cmp mov sub insb xchg mov repnz mov ljmp movsl scas shrb sub mov imull cmp loope ds mov insb pop push add icebp or (bad) (bad) jle add push sub scas xorb sub jp xchg cmp fs push mov insb (bad) push ds std and (bad) in jle mov (bad) mov cmp lods xchg push push mov dec xor shrl push (bad) in cmpsb inc rorb (bad) dec xorb (bad) lahf lods int enter mov jb push movsb or (bad) aas jle leave jg sahf sbb rcll fmul adc (bad) jp jle loope subl (bad) lods cmpsl stos scas or jb jns cmp jg mov clc pop repnz xchg pop mov movsb popa add and (bad) jae dec cmp add dec gs and pop sub stos and cmp mov xchg std lret mov sbb rclb sub pop fbld loope ret and lea ljmp mov pushf mov addl add cmpsl xchg jecxz popa or xor xchg daa iret cmpsb fwait dec add ret add push xchg mov jl adc ljmp fildl inc jp cld dec pop fwait movsl lret mov negl shufps aas jg jle add cli jbe mov rolb fisttpll mov cwtl inc insb jg loop mov fwait pinsrw popf sub arpl shll mov sar jle cmp inc testl call push inc loopne leave pop dec jmp push ret push add (bad) or les mov sub dec les add sbbl sbb stos cmpsl xchg jnp add aad xchg sbb ret jg mov add or push sarl es in push jo mov add xor rorl (bad) xchg push push jp test aam (bad) (bad) adc xchg (bad) cmp mov dec push pop sti push adc fimul in jnp rcr cmp mov sarl add sbb inc je adc lea push daa insl sub int3 pop mov inc dec push fild inc xor mov int3 adc mov daa xchg sbb add loop sbb mov (bad) jno and repz lods add inc and pop and xchg fwait pop loope sti jge inc xor fstl in jmp cld sub imul arpl cmp ficoml insb mov sub push lods mov sbb or sub ljmp decl flds dec maskmovq divl movsl add loopne test cmpsl ret xchg jno push ss push test pcmpgtw insl xor and sarb or mov fadd (bad) movsl mov push push outsb add jl es adc in cmp push out in jecxz xchg rcrb xor mov lahf movlps mov or stc sbb jnp (bad) jmp and sub ret into jnp in mov cmp nop jmp shll cmpsb push pusha sub jle mov lahf (bad) pushf cmp (bad) push cvtdq2ps arpl cmp dec and mov xlat cmp daa pop sub sbb out das push or sbb sahf aas jge xchg shlb xchg pusha sub jge pushf test add cld push out lea cmp cs dec jo imul push or aad das arpl sarb xor sbb pusha dec sub (bad) sub push mov cltd dec adc adc xchg sub mov cmpsl and ss stos or xchg cmp fs stos add lds dec int pop rol or sub push push out push and insb cmp rol aaa cmp lcall jge bound mov imul mov jg aaa sbb or data16 stos test jl sub or adc mov adc test das (bad) adc sub pop push cmpsl out (bad) xor psubusb mov adc hlt sub xlat and lods cmp add fsubrl aad push mov or mov sbb mov sarb nop (bad) jae and loope ds roll adc inc das adc (bad) test sbb test sub lds fist testl push and ret ret fsub mov and test sarl jge mov outsl xlat fnsave jg jl insb movsb cmp sti adc sbb add mov stos in arpl dec dec push jg lds cld movsb iret mov das mov popl popf sub stos iret imul sbb adc sub mov movsb in bound fdivrs test rclb sbb push neg lods cmp dec pop pushf cld or icebp std les mov stos mov jnp push mov hlt scas scas mov pop mov repz adc add xor dec (bad) pop ret sbb pop pusha hlt roll add sub pop adc cld rcrb insl cwtl mov iret dec (bad) jl bound lock (bad) jnp sti jp jo pushf es mov cwtl neg adc cmc test push pop sti pushf nop lock cs (bad) pop mov cmp mov hlt inc outsb insb shlb stos cmp push pusha mov mov jne dec stos mov push mov dec xchg mov push dec ds sub jl add mov ret sub mov insl fcoml cmp lret mov stos test add sar divb (bad) inc nop movsl inc (bad) movsl xchg fdivrl in jmp and aad test repnz pop push std lods imul mov sbb movlps rorb lock das es (bad) xchg mov and in jl orl add and cs stos mov pop iret int3 xor xchg jge lahf lock xchg adc jl int3 in jb lret in arpl mov lcall mov pop inc cmp pop cmp mov cmp jecxz adc fisubrl xor jnp xor fcoml mov cmp jo call xor pop inc vmovhps pop push push sub inc mov int3 fdivl dec jge,pt adc inc insb lcall inc sbb rolb movsl rolb (bad) pushl iret inc mov pop test jbe ja mov popf xor out cmp insl sbb sti shll jnp bound or and les or stos imul lods pushf push fcomip jecxz lock pop lcall jg jle cmp lods outsb shll xchg les int ficoml sahf xchg fimull pop les add rorl sub mov aam imul mov mov pop push inc test mov jg sbb sti sbbl sbb mov inc dec inc lcall push mov jo inc shr das xchg mov dec cmp mov mov dec pop lods and xchg xlat lock shll enter push outsl test in mov stos add pop in or jle sub nop xchg or jnp push das and (bad) add sti cmp adc jnp push loopne add ret aam dec loope cmpsl loopne sbb lret push add mov outsb jl xchg sub sub (bad) fsubs jbe lea es fs in aad xchg inc lods stos dec jb mov xchg sbb pop mov outsl nop dec cmp sbb cmp pop sbb cld xchg xchg nop jmp xchg insl lret pop imul arpl jge nop xchg jecxz push adc jg pop push js jle movsb jle jmp mov sahf cmpsl mov lea mov incb imul sub imul push dec int mov repz ds pop jl repnz inc pusha ljmp mov mov push les pop mov sar or ret es mov mov in jl jmp sti jge test test sbb scas aas jle pop inc lods inc sub test jle or mov jmp cmp addr16 insl lods push enter mov xor sarl xchg mov jge inc or ds mov add and loopne call in std xor bound push pop inc add lea fisttpl jp cli push imul xchg outsl cmp (bad) out inc imul jle xlat push inc aam lret lcall daa xor xor scas lret mov popf test das leave mov mov mov xchg jecxz push repnz sub cmp xchg dec mov mov cmpsb jl fistp pop fdivrl mov sbb add push stos (bad) nop and decb pop jno xor or mov les jg data16 scas pop cmp insl test push xchg jl aaa mov push int cwtl arpl mov pushf mov and mov fwait mov enter cmpsl mov add inc rep inc xorl sub xor xchg and in or and lahf je lahf mov mov std mov arpl movsb mov ret and sub cmp or jecxz dec clc mov inc push test xchg lahf hlt xlat adc adc add mov fwait cmpsl movsb imul pop iret sub xlat sub insb xchg cwtl push ret rcr cmpsl adc mov pop data16 sarb dec sbb inc jbe lock (bad) ss adc sbb sub or inc adc push in mov out insl jl cmp mov or pop sbb xchg dec sahf orl in lea outsb push scas movsb or aas cmp adc int shll mov andl rclb ja xor dec fnsave (bad) adc rcr cmpl (bad) jecxz mov inc and pop pushf rorb mov mov xlat cmp popa inc andb adc ror sub (bad) sarl std push adc lds mov insl pop jp shlb stos mov int mov pop lock sbbl pop dec xchg xor std stos xchg mov jmp cmpl xor push xlat in push movl lock test ja push sub stos or icebp mov xchg xlat (bad) ret and xchg repnz adc daa idivl xchg iret dec inc sar sbb xchg imul loop bound sbb (bad) mov jo lea cmpsb cmp repz insl lods (bad) mov inc clc inc lret andl std pusha clc lods repz testb mov je cmpsb dec cld cltd jnp orl add enter gs cmp outsl jge loop rep (bad) mov mov (bad) aas test in add and mov sbb add xchg jb imul xchg xchg pushf mov mov daa mov mov xchg fsubr push (bad) push lret in (bad) adc add push rorb stc ficompl fidivrl std mov dec pop cmp out loop inc push loop pop lods roll sbb jae add (bad) fwait push ret mov and push jp or test sub (bad) xor mov je inc les xor jg mov pop repnz jno ja arpl lahf outsl lahf adc (bad) loope cwtl add cmp stos mov lret dec das inc int cld xchg rolb inc ja add int pop jmp inc ret add popf daa fisubr notb cmp mov push adcb jle xchg cmp sti and popa insb out adc fstpt cmpsl mov test mov jno loopne inc xchg dec es test rolb jnp mov aas cmp iret sbb push inc xchg xchg in mov sub xchg inc sbb ret jle lea (bad) data16 pop movsl out iret es sti push insb jl pushf lcall jnp jecxz jl jecxz pushf hlt cli movsb iret in dec mov or inc stos xchg sbb mov ret pop sbb jle mov adcl mov pop push mov add fbld daa pop shll pop sbbb fmull sbb mov jbe cmc rcr push mov pop adc (bad) fiadd add clc (bad) rol ds cmp fsubrs add lods mov fdivrl subl jg in ret (bad) fiadd fsubl dec jle out pop sub add incl (bad) mov add sbb popa cld test xchg sbb sbbb in add stos cmpsl adc fsincos mov pop loope insl add jecxz test lahf std jp insb scas sub mov or cmc cmp out stos popf (bad) sti lahf mov jp add jl adc add mov push scas xchg mov push mov lea or (bad) add repz push xor and xor stos (bad) dec inc adc mov je xchg stos stc mov lahf mov or (bad) stc pushf adc mov loopne mov dec sbb dec inc mov int3 mov jns out push les nop mov fadd cmpsb in ret cmp mov mov dec incb push (bad) mov scas rorl (bad) sub clc movl sbb shrl ret or xchg mov jbe xor and or jge ss into jnp in pop sbb lods pop (bad) pop sbb add jbe ret adcl les push mov mov jecxz sub inc popa hlt inc xor lcall xor cmc cltd dec cmp insl cmc xchg iret bound jge sub enter cmp push test pop or cmpsl push adc je aas cmpsl in push sub mov out inc into push scas mov mov sbb test xchg ds pusha icebp leave jnp xor jle lahf mov dec bound push fidivl cli pop mov ret test data16 ret sbb sbb in sub jl mov dec (bad) (bad) cs cwtl cltd (bad) inc rcr scas ljmp (bad) orl (bad) sahf pusha adc mov or stos orl idivl jp (bad) mul loop sub das repz popf imul xchg (bad) enter jmp leave push mov sub jns xchg imul mov sahf xchg mov or in les das xchg imul int adc mov enter xchg (bad) rcll std and add and lahf pop sarb jmp push jnp movsl cld int ret mov addr16 out cs stos (bad) nop bound iret sete pusha popa out nop mov lret pop pop add cmp movsb xchg pusha inc iret (bad) mov popa cwtl out rolb popl mov push aam inc fnstsw lret fstpt xchg push sahf mov ret xchg mov sub cmp stos lea int cld pusha daa add xor jp mov sbb fnstsw negl push outsb xlat fimull (bad) je std inc dec mul in ficompl pop mov xchg inc popa jnp test das out and idiv push je jg jl mov or push inc inc (bad) xor push (bad) inc xchg scas jnp mov in pushf pop mov cwtl fstps imul jle,pn jle jmp in cmpsb in shll cmpsb fildll call sub (bad) popa pop mov jle mov fimull fwait pop lcall clc sbb fdivrs (bad) shll wrmsr fstpt sub pop cmpsb mov dec dec les clc xor mov xchg out and loop loopne ljmp test mov mov mov mov fidivl stos shl cmpsb outsb std gs loope or cli adc outsb leave jnp hlt dec adc sahf sti jnp or pop out push mov cmp imul push push dec mov mov and sti test stos add rcrb das push subl (bad) shr pusha mov cmp scas cmp lahf hlt adc mov js jge cmp jnp push shrb or popf cmp mov ficom pop pop (bad) lret jne sub not imul andb sub mov sti sarl lock push mov lock fs fs adc outsl ret stos (bad) dec in dec ljmp cltd test test hlt mov outsl inc ret pushf jecxz mov jle push adc inc (bad) xchg and pop jmp mov sbb ja sti imul shrl jne pop and dec pusha (bad) enter push test mov adc movsb or test jmp lds jl inc lahf rcr ret es mov push cmpsl xor xchg mov jl cwtl cmp xor push mov cmp cmp lcall lock mov inc in or ret mov and cmp push or fsub pop push fwait mov and and xchg pop push jo jl shrb push jl aad jnp test add addr16 mov cmp das xchg lods push dec cwtl insl outsb mov stos cmp fwait push in inc mov pop into lock std add sti lahf out push mov cmc sahf popf (bad) sbb out pop add xor fmull mov sbb mov jnp cmp js (bad) or mov sbb or pop dec mov and insb mov mov adc xlat (bad) jg nop jle and out pushf cmpsl mov fmull pop sub xchg leave sbb mov sub sti iret fcom dec dec cwtl lods imul inc loop adc jo (bad) icebp sub sub mov xor sub arpl addr16 ret add outsl push lcall add sbb fiadd jge sub cmp mov ljmp dec cmp mov stos mov testb xor mov or cmp inc jne sbb test not std adc jg xor stos sub xor lods push outsl mov xchg dec xchg mov sahf jecxz jnp outsl das mov mov mov or lds mov fisttpl (bad) outsl xlat pusha xor push jp xor adc stos js mov lock jle jmp rcrb scas adc or pusha cmp push int adc lock xor les popf mov push and mov lcall mov jle inc push mov sbb cvtdq2ps add iret jb jnp lods scas (bad) cmp jnp jb dec push push inc cmpsb xchg mov lcall push mov arpl dec pop pop add outsb cmpsl pop scas fsubl and jl fs sbb jecxz rorl cmp jmp imul mov mov scas adc movsb out mov pop fsub (bad) mov aam pushf push push arpl sub mov push movsb jnp std fistpl sbb ret out (bad) in xor mov fmull mov pop mov mov push imul call push addl add cmp fbld rcrl add jl push cmp xchg jmp lods mov jg ds stos cld sahf les popa jmp dec mov std jp mov roll jp hlt mov aam sarb rorb sarl popf dec lahf sar sub rorb sbb lahf iret mov repnz jp (bad) cmp mov (bad) call mov cmp (bad) xlat mov into sbb aad xor and add (bad) icebp jno int mov jl inc sbb adc setnp ret nop ret add or in insl lret nop inc movsl leave inc pop lea gs mov push inc test mov inc mov adc arpl test clc leave mov sti leave inc or inc hlt cwtl jl mov mov sahf rolb lahf sbb ficoml aam in cmp cs mov fiaddl dec mov and mov fcomip in fiaddl cmp cli (bad) (bad) xor jno mov push test dec push (bad) sbb pusha addr16 jmp or adc cmc add aam mov (bad) xchg sub int3 mov dec sub push mov loopne jle loop bswap sbb mov mov xchg aam or (bad) call fdivr or xchg pop ds jl xor pushf sub sub xor repnz cld insl mov in repnz fmulp cmp or (bad) and fisubr add mov ds mov pop jge ret push or mov std cmpsl mov sub (bad) stos jg test mov adc cmp and fs nop cmp mov imul outsb mov lcall (bad) jge adc in or das data16 aaa dec inc sarl (bad) imul and popf sbb arpl jl arpl hlt sub fcmove outsl dec xlat adc adc rorb or mov sbb and xchg and cwtl adc in fnsave fidivrl or inc ss jge mov rcll imul dec push clc xchg pop out std cld idiv dec jp pop jl std fnstcw stos cli inc push mov mov outsl mov jmp (bad) cmc int adc cltd mov sbb mov nop or pop mov and inc pextrw xchg sub cmpsl js inc loope sarb popa mov inc cmpsl mov cmp adc int test sbb jle and (bad) addr16 cmp mov and sub cwtl test sbbb ljmp cmp std rorl repz dec insb sbb sti cld sti lock cmp aas mov movsl lods jge repz ret (bad) push or mov jo dec iret jg pop add jae inc into mov insb or fwait lods cs mov insl push cmp loopne mov mov mov cmpps push jecxz insl xor rclb data16 movsl int push lahf repz lcall shrl xchg leave push or call jo dec mov push stc and cli fldcw int3 jb xor pop sub pushf xor cld xor jp cwtl xchg jns adc aas in fcoml repz adc mov outsl sbb sbb stos xchg mov push mov cmp lea pop sbb movsl sub push or out cmp sti ret in scas ret (bad) dec cmp cmpsb cmp xor xchg insb cwtl rcrb inc jmp inc xchg pop rcrb mov dec ss (bad) sub sbbl movsb dec sub psubusb add cmp push bound out insl pop test jno jo (bad) lahf pop mov mov fistl sub (bad) stc lea (bad) sar ret lcall ret xor fsubs dec cltd out mov mov sub frndint fsubrl imull cmc lock jecxz mulb push sub cltd mov shrl lahf xchg mov ret dec add (bad) (bad) hlt cltd frstor addl inc pop add xchg mov (bad) dec loop nop mov push xor lds adc mov xor adc repnz add aam outsl into cmp aaa int (bad) adc jge jmp mov dec lock or xor loopne rcrb mov aas lock mov incb jl xchg test push mov in sbb pop dec pushf lcall (bad) fmuls add mov mov das or inc push mov fdivl das dec jns xlat dec movsl mov pushf out push xchg xor fldcw (bad) jne adc clc stos jmp loopne mov mov jg adc ret roll enter jmp repz mov test jg pop out lea cmp cmp mov cld sbb cmc jecxz pop jle dec aaa fucomi bnd cmp insl jbe ljmp sub jl imul cmp in (bad) insl and or popf sahf sbb iret xchg (bad) (bad) dec notl cmp add test xor js sbb ds pop cmpsl sub imul clc jb pop idivl cmp lds xchg pushf or mov mov dec mov add sbb lret dec inc cmp pop lods mov fxch push fnstsw push jge (bad) dec inc cmc les fwait movsl lret pop xchg mov cwtl mov adc dec dec push cwtl arpl jmp pop daa pop mov dec pop sarb mov lahf ret push and (bad) mov sbb or sahf sti cwtl mov jnp cmp sbb or imul add lahf push (bad) (bad) mov or loopne xor jecxz movsb push mov ret push or je mov es mov add arpl test mov int fcmovnbe add push and pop jnp nop sti jl aam into and sbb mov inc push imul test jnp mov xchg adc mov insb adc (bad) test ffree arpl jmp xchg inc mov out adc cmp into jle imul bound ret jp cmp iret ret inc pop xor dec popa mov and cmp pop out inc adc sbb or push mov arpl mov imul (bad) bound mov movsl cmp out or sub divb in mov (bad) int pop (bad) adc push in aad std addl cld push pusha fldenv in pushf test fld ret lock mov mov sub popa std mov jne call in xchg inc loopne pop lods sub dec mov xor icebp xor sarb mov test sub dec pop push mov or cmc cmp sub jge jne gs scas cmpsl mov popa cld sbb mov test push dec cmpsl in xor sub cmp mov lcall ja iret adc push jnp (bad) iret push pop js pushf cli das mov xchg inc pop cmpsb divb xchg push push mov loop xchg mov rolb in xchg sbb jnp je mov xlat cmpsl sti out adc negl jmp bound js das jecxz loope (bad) std mov lods leave es test jo mov mov iret leave cmpsl push (bad) jmp fisub iret imul dec push xchg or pop push pop lcall test jl jg hlt jle sbb ficoml jle or imul xchg in jge push sub cmp push mov mov faddl adc out imul scas rorl sahf dec mov jle adc loopne pop xchg cmpsl pop add cmc add cs jnp mov add pushf inc data16 add in jbe dec in popa sub pushf sti imul inc pop adc jl addl adc aas lock pushf scas or sbbb int xor xlat addb cmc aam push push lret mov faddl out ljmp jle ret xorb and pushf (bad) and movb fcomi jae std fnstsw pushf cld (bad) fild aam stos loopne movsb test jl jnp dec sbb dec pop std and (bad) icebp jnp and test out mov adc repz scas subb xchg jnp into or aam or (bad) lock (bad) scas adc cmpsb rcrl stos out mov ret lret inc jne stos imul sbb or inc (bad) fcmovnbe xor lea cmp sub pop iret jno rcl xchg mov test inc mov mov (bad) pop mov jo scas test and das ljmp dec outsl inc in ffreep je dec rolw mov rolb mov mov xchg and or scas and mov bound cltd ja pushf cwtl or pop push mov (bad) lock push enter cmp inc inc (bad) std mov mov jg int pop jl jl push jg test mov xchg (bad) cmp add cmpsl jae sub aam incb push or imul mov mov jno cmc dec mov inc mov das sti lea and sbb dec cld push add mov dec and jne bound dec sub jl ja pusha or out xor scas ljmp adc mov xor das loop push icebp add out xor ds loopne push mov or xlat xor shlb mov pushf ret or push adc lret mov pop and xchg jns mov popa xchg sub mov xor push adc or lea rcrb sub add jle mov in ret or push mov add sahf mov fsubrl dec dec out xchg dec rorb mov adc xchg (bad) mov aas sub lcall jo scas pusha jl (bad) and leave inc mov jo andl adc imul sti js pop lea in xchg (bad) lea aaa loope adc cld pop adc mov pop cmpsb mov inc out lods cmp sti sti adc xchg fisttp xchg jno pop inc xchg test imul out lcall jg (bad) (bad) pop test (bad) leave sub cmpl jmp pop insb xor std and call ret ret fsubs stos popa inc and mov cmp inc inc and sahf (bad) loop fwait scas mov out sbb divl cmp jnp pop loope lahf (bad) jb xlat movsb shr icebp mov (bad) aas mov push movsb mov adc fwait pop lods das push fbld mov cmpsl ficomp push jp lret popa inc addl cld adc mov sahf mov or xchg ret push mov je cld sub fcmove xor das fsubrs sub pop lret xchg xchg ljmp mov mov dec fwait sub pop mov sbb dec mov jnp xchg sbb push iret sub lret jecxz push mov mov sbb sub movsb addl rcrl rcrb jge shll outsb stos loopne mov push mov lahf pop sub ret and cmp mov adc sbb push rolb test jle inc mov mov cmp loopne or sbb ljmp add (bad) cmpsl data16 adcl shr jns subl negb fbld outsb loopne (bad) lcall pushf jg out aad popf test fnstsw xor mov jp (bad) sub dec adcl xchg popa sub std fcoml sbb mov mov nop mov xlat iret fnstsw cld cmp xor sbb rorb enter pop push mov and xor cwtl sbb cmc int3 xchg mov xor js inc jle les lds cmpsl std add insb cmp rolb push das jbe mov jb ds pop in sti (bad) icebp adc jnp push call mov orps lahf pop fisubl arpl imul push and sub shl stos and adc cwtl dec stos dec cmp cs xor mov leave loopne pop imul das sub push adc ds adc pop xor in clc addr16 or shlb enter xlat movsb or into cli cmpsb sbb mov mov and add sub pushl push jmp mov insl cltd fwait add (bad) leave mov mov bound jge inc pop pop sarb cmp sti in sub stos out jp loop and add addl sub stos cmpsb enter xchg mov pop inc lock adc sbb jae jnp test mov mov (bad) jbe js dec mov mov jmp pushf cmp and outsl mov mov jge jle sub imul cwtl push mov pop sbb leave mov (bad) std cli loopne ds jp cmp mov jle jp ret or clc lock fcmovnbe mov xchg (bad) adc mov pop pop imull mov sti popf dec fistpll pop aas sub imul push cmp sub push and orl int mov pop adc sub out mov in mov fnstenv and sub in ret xchg notb xlat sub std add jne subl mov call loopne fmulp pop jnp jl adc jg jns dec inc jb int pop sbb aaa test lock ror or dec xchg insb lods mov cmp jnp lea sub cmp (bad) (bad) jle stos in ret arpl xor pushf sti mov inc data16 das xchg stos stos ret stc jge xchg out cmp aaa mov pop jl lret pushf nop or jecxz mov cmp and push or (bad) in stos cmpsl iret sbb dec cmp and loop jae out ss es xor push mov mov push les adc push sbbl sub mov iret pushf ss jp push int cmp in (bad) xor psrlq in add push or pop nop cmp in jmp sub sarl stos add jnp jl mov jae push int3 push sub sbb mov jecxz mov test stos lods pop rorb (bad) fwait cwtl sub mov and jb loopne test xchg iret lods gs aam pop movsb sbb in mov gs into mov lcall and pop fcoml sub add sub push jb inc sub cmp cmp out std push or jl add mov jno aaa jg inc mov in rcll iret orl aad add and lret sbb push loope sub jl fwait in scas les out lret sbb dec cmp sub lcall dec sbb js sbb mov fldl jns sbb je pslld sbb adc decl sbb sar loop cld (bad) imul xchg loop mov incl sahf jnp sub imul nop adc inc mov shr push stos test bound mov fwait dec iret ljmp mov lods (bad) and sbb sbb cmp or nop out sub sub or pusha or shrl int jmp adc mov clc and jl lds mov ljmp aaa in pop push cmpsl out and adc imul hlt stos push push pop int pop rclb rcrl xchg insb insl shrb inc mov std xchg fwait pmaddwd fldcw inc mov push mov xlat cmp jmp pop mov std push icebp std ret (bad) lcall mov cltd push popa sahf cmp aad add imul xchg cmp dec inc pop inc popf cmp (bad) cwtl sbb pusha sbb int int3 mov nop lahf rcrl mov mov xchg jmp int mov push jb popa xor jb addr16 call adc mov cwtl mov xchg (bad) jbe mov jl int3 repz pushf cmp jge lds addb lock (bad) jmp lret xor and std mov icebp in fsubrs insb mov das dec jmp lcall xor mov cli cmp push pop mov pop stos aaa jae jge mov add outsl mov push sub dec stos adc or adc mov mov add movsl test lods jmp sub je push lock imul or jl test (bad) cmp mov incl aaa add movsl in xchg push or ret xchg lods cmp lock jle movsb inc (bad) or mov or mov pushf jne,pn arpl mov shl sub sahf (bad) clc jmp or (bad) cli test push imul mov jl jnp scas into lret mov in sti lea das shrb shlb dec mov add imul jp mov xchg fs bound stc lahf mov sub pop loop pop pop popa adc stos (bad) fwait xchg sub lret movsb or loope mov jp subl shrl adc rolb xor lcall (bad) mov adc dec rolb outsb into stos jl jg subl xchg incb (bad) std (bad) and test push faddl pop movsb iret (bad) adc dec cmp mov es mov jmp in stc lret insb xchg fnstcw iret xor std out cmp cwtl and imul add iret pusha imul std (bad) mov pop loop ja rclb jae lret xchg dec ret mov fidivr imul gs imul cltd pop pusha xor xchg cmp jp sahf rol lret ficoml jge xchg mov jmp mov mov loopne and int xchg inc out std lock nop test mov sbb xchg arpl and xchg in mov ret and inc repnz sbb mov mov (bad) mov addr16 sbbb int sbb scas inc and (bad) dec mov jle cltd jnp xlat jecxz xor mov in test mov (bad) sahf mov incl add sbb jb push jno pop xchg fwait sarl sbb insl popa mov nop jl cmpb push ret xchg call (bad) pop sarl pop inc mov mov add mov add int3 cmp daa cmp mov mov push movsb mov sbb xchg push outsl fimul (bad) cwtl shrl sub inc fld or into pop cwtl mov push pop xor pop push mov rcll inc das out sub or cs jb push mov inc cmp das rcr rep ja jnp lock pop jl stos out push sbb mov cs push lods sarl push mov xchg cmp lret jge xchg push cmp push mov addr16 push bound xor sahf in mov ja fwait daa aaa jno das out jmp rcrb imul xor imul xor mov bound pusha das nop jle sbb add jge (bad) fwait into aaa inc sub cmp aam xchg test mov lock in movsb push fidivr and fdivr fwait out shrl xchg jge pushf add xchg push (bad) and imul mov test and pop test and xor and and sti mov add stos cmp pop add inc loop pushf sbb sbb sti lods inc push dec push out (bad) xchg inc rclb cmp lods inc negl movsl inc cmp ret push (bad) aad fcmovne pop xchg lods clc add push mov rcrb pop or jl in cli xor cmp iret push out dec stos or popa xchg ljmp movsb jne into jle push xchg dec das aam mov mov add nop inc loopne bound dec cmpl mov push add ds incl adc add das sub inc and jmp xchg mov ret lret xor adc ret imul dec ret mov andl mov stos mov test fcmovu int jb mov sbb or fld and in repz std stos cmp je enter inc adc push aas xor ljmp push or rcl inc loopne ret add sar pop adc sahf pop jg xlat adc lds and sar daa sub mov std fwait sub cmpsl push sahf std call or sub and mov fldt add mov and fstl or and ret fisubr and movsb outsb dec push mov mov mov cmp rcl fadds scas or fsubl sbb cmp outsl stos or add fwait imul scas test sub dec mov xchg stos mov call rorb cwtl lret fimul mov shr jns jns cmc clc sti xchg out fwait std std cmp jl sub mov or mov push mov ret cmc pusha fstpl pop andl test addl loop inc pop ds movsl in sti loope lret int movb cmp lods fwait ret mov inc orl dec je addr16 outsl add jg pop pop add xchg add sub adc or je repz sub and xor xchg mov inc and cmp insb lock adc mov cmp mov xor (bad) fisubr repz popf test mov lods mov fstp out psrld pop test (bad) aad jne cmpsl inc lea push or test mov aam jle nop pusha cld iret lea add daa xchg sarb ret je das inc out pusha fwait jbe push lods inc pop and (bad) imul mov xchg jle aam lds fwait stos push push mov js xlat jb loopne push mov jp jle,pn aam les cld inc cli pop dec out dec mov lcall je lret icebp or cmp adc stos adc lret aaa xchg push (bad) daa aam add fucomip out sbb push scas repz adc cmp jns (bad) mov (bad) loopne sahf rorl ret inc sub jle stos fcmovbe cwtl (bad) cmp mov (bad) dec jg repz push popf int out xchg jb jo ret pop shrb xchg int xchg data16 push adc xchg out xor fwait bound aam pop test or cs adc cli jbe sbb ljmp jl inc repz mov rcrl cmp icebp fwait int add add aad and jae xchg xorl aam xor fildl jb xchg in (bad) xchg push jle rep pushf mov inc ds adc aad sar (bad) out inc test add pop pop (bad) lret popf (bad) shll xchg call xlat push lret (bad) fild or push mov adc fwait adc mov int3 cld dec pop mov cmp push (bad) sbb and (bad) dec imul lcall stos mov decb ds pop daa mov mov dec movsb xchg popa cmp mov and cmp mov xor sbb lock das lcall test ret fwait mov movsb pop fcos (bad) or push es insl jecxz xchg dec xor test ret ljmp cmp fidivr push mov mov test outsb cmp jb aaa cmp popa push in ret (bad) in loop xchg cs nop jb or cmp pop push pop pop cmp cmp push pusha lret inc or cmp test mov loopne in push into fsubrl adc cmp fdivrs adc lea push jb,pt stc sub mull mov or jp xchg mov jle sahf dec jmp pop add mov cmp jle inc mov cmp repnz rorl pushf cwtl outsb adc movsb jl nop lock cmp mov iret in out outsl test mov jae addb gs cmp (bad) negl push add mov (bad) dec sbb inc inc in cmp cmp adc dec std jle (bad) pop jl shrb mov jle cmp jb lods xchg or jns push mov mov pop mov and add cld lock xor add jg cmp sbb fnsave adc mov jmp dec xlat movsl mov pop repnz push pop cmp inc addb mov pushl sub outsb in cmp xchg inc and jb adc scas sbb fild movsb stos mov inc push push aas jg inc lods imul jae xchg sbb popw out sub cld gs cmp sbb pop rclb ds movsb xchg clc in sub sbb (bad) out repnz clc cmp (bad) es repnz sti cmp pop sbb aam or enter adc pushf cmp xchg aad sbb lods sub mov test jp xchg das aaa jnp inc and pcmpeqd mov pop jbe inc (bad) lods subl sub adc mov movsb cmp sbb stc xchg movb int fdivrs jno inc add push lods out sbb stos int out push nop jg int ss and pop push sub (bad) mov daa mov jg scas add and xchg xor insl or fs jg mov pop pop sarb jno mov mov lahf call push popa jecxz sbb jne pop subl cmp inc aas mov lods or dec dec notl sbb shr push sbb insb sbb aam add inc dec clc xor outsl outsb test adc xor add mull push je pop add popf adc scas and movsl adc dec jns nop scas outsb add lcall test pop or adc pushf repnz pop mov sub ljmp mov jp sbb jmp cmp loopne xchg repz call cmp and cs xchg cs push adc mov jp mov stos cli int or add enter push outsl mov xchg push xchg or pop or cmp lret int daa sbb cmp repnz ds jo xlat clc inc mov call mov test stos out test das mov xor insl insb pop add push lahf (bad) cmp dec lods cmp lea int or das je test jmp inc loopne cld cmp mov add lods rcll sub fs xchg dec out or dec popa aas mov pop ss mov cmp cltd push and (bad) fsubrl mov dec dec mov fadd fwait je in out adc push lcall jg,pn mov jnp jb sbb mov cmp lret (bad) xchg push pop bound icebp jo daa imul fcoms sub sbb jmp inc jo mov ret enter sub xor inc jae std ret nop outsb mov jo xchg adc push xchg push inc or sahf inc mov add test push or xor scas jo (bad) shrl inc mov add test je jecxz ret clc dec jns add dec ret lret pshufw mov aas and adc leave add mov roll cmpl subl bound or pop je inc test gs sbb popa loopne movsl fiaddl fabs data16 add sar xchg pop xchg push jno sbb movsb cmp inc arpl jnp xor dec jnp rcl pop pop stc push lret pop lock push (bad) mov dec cltd loop cmp dec mov mov jo cmpsb arpl (bad) cmp mov sbb or mov mov adc cmp mov mov xchg xchg jl or jbe or xor hlt test (bad) push cmp jbe mov push xchg mov ret mov sub xchg mov lods sbb ja bound jge lret lahf (bad) lock mov add loope inc nop out mov mov xchg bound sub rcrl xorb mov or rcrl jge aas jp bound jo fcomps mov dec outsl sarb dec push mov pop add in out jbe sub dec jp std mov adc hlt ret pop jo cmpsl jnp,pn xchg jbe jecxz adc shlb sbb ret movsb pop popf shll pop lcall adc inc jge je cmc mov (bad) loop adc add and insl mov sbb jbe sbb lea pop mov sub jnp iret lods jge mov jmp idiv roll xchg dec mov popa jnp ds or push sti push jb cmp sub jge sub or lahf or pop lds repnz loope movsl push inc iret mov jmp into or and rcrl clc stos in ds or mov cmpsl leave push js push fistpll (bad) lock cmp jnp stos sub (bad) mov add jnp stos mov (bad) cwtl sbb imul or or rcrl sub inc repz cmpsb add out insl mov aas cmp (bad) xor jnp inc mov lea xchg sti adc jl imulb jge (bad) (bad) subl test adc push jge sub jle movsb loopne fdivrs jmp scas add (bad) sub addb fldt andl mov and pop loop mov push sbb cmp and icebp lods call mov mov lcall jle or xchg (bad) (bad) jge sbb pop mov pop adc test and pop mov lahf clc es and fidivl jle mov mov test repnz fsts les mov mov mov outsb adc pop scas jo add adc ret and adc aas mov ljmp scas mov sub jns int push sub jbe jl ret sar dec or bound mov mov push inc cmpsl jg in out lret ret cmp jnp cmp add sbbb sar cmp lea data16 mov cld imul ljmp in mov sbb outsl mov ljmp iret cmp cwtl add sbb mov sub xchg ljmp loope dec cld fdivl inc cld pop shlb mov push mov and decl or push xor lods mov std loope jns push or cmp mov das cmc sub (bad) lea idivl lock xchg out xor push stc jnp cmp movsb lea nop in jp jl add ret int jg xchg cmp int and adc mov adc sti lock outsl bound fistpll pusha push inc leave mov pop loopne pusha dec mov rclb leave mov (bad) adc repnz fcmovne xchg push jl lcall imul sbb fcoml adc push jb sbb pop mov pop gs push cmpsb or and adc insl nop mov push cwtl divl or sbb mov jle cld push repnz cmp sbb ss dec pop jmp jl xchg sbb jmp nopl ljmp cs mov cld mov pop push pushf inc dec data16 sub xor mov sub sub xchg fdivrp iret xchg sub and lods in cmpsb arpl mov ror mov or or xchg std sub push jg and cmp js (bad) in push pop outsl ljmp sbb pop xchg mov adc jle dec cs lds mov jg mov aas aas jl ret inc stos and jg pusha (bad) and test rorb sbb pop dec xchg or jnp call rorb repz sbb sti and inc cltd jae sbb pop adc les jae ret xor jl iret lret cs sbb out sub rcll std sub (bad) cmp cmp push fucom outsb out nop mov mov xor (bad) cmp shl lods fdivrl dec xchg aam cmpsl adc call mov lock mov movsb mov or sbb mov popa icebp and push pop lods ljmp cmp mov enter sub mov pusha mov and mov or cmovne sub out shr mov or mov sti call add sbb cmp pop loop mov clc cmp lods mov lds mov popf or out cld add jno xlat aam imul cmp aaa pop inc hlt xchg stos xchg adc ret sub push out and es pop popf xorb adc adc sbb sti in pop les cld insl loopne or pusha (bad) xchg push sub nop lock sbb jmp dec ds inc xchg pushf (bad) dec enter repz sti adc pop sahf shll rcl sub dec rolb je jo lods nop sbb and or cmpsb cmp addl sar enter orl adc cmp sti adc sub repz mov jnp jns push mov push mov push das out lcall mov and mov iret out push arpl (bad) pop or lcall dec lahf ret xlat cld cmp mov inc jg xor fs lods mov lahf and pop rcrb lock mov into fistp mov xor inc inc inc xor cmp ret push and cld cld test mov sbb cmpsl popf xor call mov adc popf or mov pushf add ret pop stos jb mov add xor daa lds mov adc (bad) jo insb pop ss insb pop pop aad cmpsb mov imul movsb push lock cs sti xor inc cld pop mov dec sub (bad) pop in dec flds fcoml mov out or jg cmp pop fwait sar pop mov mov iret sub mov xor adc data16 mov inc inc (bad) mov add cmp mov xor xchg sbb out sti sub mov or mov stos push xchg pop pop ret cmp aas cmp aam jmp or les adc ja outsb ret cmp or push (bad) pop sub cmp pop push lahf cltd mov pop mov movl add inc push movsl xor cmp xchg ljmp enter jle imul fwait xchg inc mov sub orl fs sarl pop xor ret fist (bad) jnp cmc movl jg sub mov dec cld stos pop mov and scas nop rcl ljmp fsubs mov mov push insb cs out xchg sub xor fbld inc cld (bad) sub cwtl (bad) mov in mov mov push mov mov ds xchg dec imul mov mov lock xchg fstpt adc scas mov ret sub pushf jle (bad) sub les jno add idivl pop lods jge lcall mov push cmp cmc mov jmp adc test or mov aas push xchg out xchg jge mov jge cmp cmp cs jle test test xorb cmp scas inc jle jmp pop pop inc and repz mov and mov mov push cld add ds sub xchg jecxz jge orl mov lea xor scas or cwtl or sub add fnstsw xlat push ret mov lods jns test pop sub out adc sti cmp dec push mov and mov push hlt inc pop push dec xor sbb jle (bad) lea xor repnz (bad) int sbb adc cmp push aas cmp fcompl in mov and (bad) movsb cmp lock jg test mov sub xor repz call lock mov fsubr add add orb je xchg lock sahf dec std push paddd push scas mov insl sbb loopne lds bound jg mov repz sti xchg pop (bad) xor xor (bad) jge mov mov inc inc lret das xchg imull lea out cmp lahf insb add aad mov ret jge iret jge mov mov scas sti dec mov test jge dec add (bad) aaa fistl cmp lods insl (bad) cmpsl (bad) mov stos cmp fidivrl sub inc mov cmp pop push test scas loop cmp sub lds pop ret fnstsw sti ss or es (bad) stos fcoms push pop sub sbb ds jae adc repz leave cli aam sbb bound leave cld out in xlat fadd out cld das cmp mov loopne scas fisttpl mov int adc stos pop jns dec popa andl sub add (bad) out pop mov loopne out mov imul pusha out sub sbb shlb inc lahf scas lods cld push je push xchg iret mov lea mov ret psrld add mov mov sti cmpsb (bad) cmp loope pop test sbb outsb mov dec or (bad) stos push mov jmp lock test cmpl sub cli or or pop stos cmp add adc imul addr16 mov rclb pusha jg adcl dec lcall and xor pushf das mov repnz jnp mov jl roll jbe inc jle jg jmp lea mov cmp pop jl imul cmp sbb in mov arpl mov addr16 sbb jmp daa bnd xchg push dec lret lea push mov (bad) push sub or (bad) mov sub mov xchg shll mov out jg push out fwait pop bound int fwait out sti ret or mov fstpl pusha sti lahf sahf inc pop leave xchg in xchg in lcall mov scas or test xchg mov pushf mov dec xchg bound add mov and add mov cmpb xchg xchg andl inc sub adc push jl scas xchg or adc mov and lock subl mov jle mov (bad) pop bound stos lods push in xchg mov pop xchg cmp in push push loop ret sbb mov mov int mov hlt mov jae mov push mov icebp xor dec mov loope bound aas xchg xor arpl sub and out jge dec fwait (bad) fildl sbb jo orb add pop sbb iret xor bound popa or repz dec fnop dec pop add and lahf scas pop or aas mov (bad) jecxz xor adc inc cmc push mov repnz pop sbb push xor cwtl cmp dec or repnz mov das lods inc push inc xor in push or sbb sub or jmp xchg xchg add gs hlt aas jae adcl in pushf roll cmpl jns je or inc fmull stos cwtl je inc in mov push daa inc pop jmp push xchg mov pop cmp push in pop push or add ret pop aad xor cmp je adc push push and inc (bad) aam insl fistpl fwait arpl jge adc jl ret or ror cld sbb out insb js add jns jne icebp (bad) sti mov jle inc dec sub fcompl fldt outsl xchg mov xchg stos or pop adc cmp sub push cmp loopne das repnz lret jnp aas sti nop pushf inc xor test jnp outsb aam push sti hlt sbb mov outsl pushf rcrb lds mov mov dec and sahf dec in in lcall jecxz or dec mov std inc xlat fildl jl push pushf push mov cmpl test sbb mov jmp jle enter xchg pop mov lock pushl fwait sub lret jp out les pop stos bound arpl stos in movsb push mov cmpsb popa fldenv iret mov adc movsb lcall lret lea jo or lahf xchg cmp in call mov cmp dec (bad) loopne xchg cli pop das data16 push cmpsb lret mov imul dec bound mov hlt inc ja scas ret out mov pusha int3 movsb or or repz (bad) and sbb test call pcmpeqb pop xchg test add cmpl add fsubr fimul cld loopne clc movsl lds fildll leave cmp lcall pop mov xchg xor inc aam mov mov cli (bad) addr16 cmp aam call dec popf je jg inc out mov add lea movl dec imul push fwait dec rol es ja cmc xchg fild stos and sub int ljmp fstpt pop imul xchg push iret ljmp stc lods push add scas pop lea cld sub (bad) test adc add popf aaa (bad) std push xor into cmp jne lods mov push fsts dec stos addr16 mov push in shr clc adc cmp cmp pop ss push adc cltd mov dec insb test push shrb mov mov jbe jg sbb sbb add pushl dec test adc (bad) minps es mov push fwait xchg xor sub and fcompl int3 mov lds arpl mov sbb mov mov int out and sbb stos push je in cli adc dec or jae pop sbb mov xor stc imul mov imul mov (bad) fwait into fisttpll aas mov pop or je jno add mov adc insb sti push jae ja jle xchg cli iret or sbbb lds popf push fwait test mov out jne ret clc mov out cwtl sbb mov or jle adc xchg outsb and subl adc cmp popf cs cwtl (bad) inc sti jae mov pusha cmp dec or or cmp cmc jge lods mov (bad) movsl cmp push mov loopne int data16 enter ljmp call cli cwtl pop out mov fcomps sti adc sub inc loope sub insl insb push (bad) xor and mov push (bad) in jle inc aad shrb jo loope xchg dec (bad) sub sarl mov nop jg sub push xchg insl lcall outsb insl jmp out jg xor aad les or adc std and shrb sub int fisttpl and cmpsb outsb xorb and jnp test jmp sub jmp mov jle andb pop rcrb test int3 xchg rorb hlt cmp jecxz inc mov xor jle and jge push or popa insl or mov or jnp adc test mov xlat outsb cmp insl or sub lret inc loop imul mov sbb sub xor (bad) nop loopne pusha cmpsb rolb push inc inc jmp sub dec push mov cmp pop add std mov sbb mov es divb call jne in mov imul scas lahf cmpb cmpsb and sub dec sahf pop mov xchg and stos js push icebp adc jmp jnp fldt sahf stos pop and jecxz xor jp mov jnp ljmp out mov mov ficompl or stos jl add sbb jle xchg cli mov fwait or mov add adc push lret mov jecxz jl jg (bad) xor adc arpl les shrb mul add mov mov jnp sub or sti inc cld inc lods jl mov imul add pop stc inc push sub outsl bound inc cld movsb in cli ror mov fucom cli icebp outsb ds mov (bad) (bad) out push inc and jmp adc sbb rcll adc sub fmuls mov xchg xchg jp sub adc setle rol jl imul dec nop lcall std xchg testl pop adc cmp sbb popf inc cmp adc lock dec pop mov je lea adc cmp mov in lds mov jnp stos and (bad) jl fwait (bad) stos push lret sti fldt mov shr mov jnp fildl mov pop fstpt cmp adc jge add ljmp les cmpsl popa mov mov inc imul mov std stc dec or or jnp fisttpll inc repnz lds inc lods cld pop xor leave cmp mov les pop pop mov or mov cld in les jl pop sahf inc fs outsl fisubl nop fildl jl pushf cmpsl icebp mov pop mov pushf and or mov push (bad) stc mov or cs idivl data16 sbb mov movd loope (bad) and cmp ret adc mov rclb int (bad) std call fninit lahf mov sahf jmp test movsb mov jno pop jbe jb mov in decb adc lcall movq stos mov insl ret stc push fwait jle and adcl or pushf jge enter ret jge jns nop pushf and fstpt pusha jnp scas addl cmp fwait adc add sub xchg test mov jno gs add fwait mov push aaa xor jl ljmp loope fisttpl in inc lret xchg in sub scas aas mov and cmp jmp cli and jl mov sar shll cmp jl cmpb or pop add dec push xchg test mov pop inc mov lods mov xor pop popa fdivs push mov sub sub adc xor sbb mov (bad) cmp shrb sub (bad) and stos icebp mov mov mov mov stos leave js mov ss jge,pn mov pushf xchg adc add mov cmp mov add stos cmp movsb andl sbbl (bad) hlt test outsb les push outsl sbb sub mov (bad) popf jg test mov mov pop (bad) lret nop or icebp pop adc lds mov sub fbld cld jmp cwtl adc outsb jne adc sub push sahf int3 jnp jl outsb rcrb pushf mov pop mov fwait xchg stos fwait mov lret jmp adc xchg or mov and data16 sbb mov cwtl cltd xchg sbb mov pop call mov sub sub movsl into sahf sbb cld lods pusha add add xchg (bad) hlt inc bound sbb fcmovnu mov daa xchg cltd jmp xor mov dec movsl dec int3 cwtl ret jg movsb mov jns cmp cwtl test mov mov jecxz mov sbb or js inc lret cmpsb xchg scas add aas cmp sar mov sahf add pushw lahf mov jo add in decl daa sbb std pop fwait jno sub (bad) sbb mov daa aaa cld sbb mov insl sbb fs and lret adc pop dec call inc test add mov (bad) lods cmp jle pop jl lock mov (bad) mov es add pusha std mov add sti mov mov imul test or lcall pop or lock sahf xchg loop sbb fmull jle mov push jp hlt aaa bswap inc jo push in mov loop fbld sbb jl sbb xchg cmpsl xchg lea cld pop pop scas cltd sti pop jne insl das jg std mov rorl jg das into push adc (bad) dec and mov decl idivb (bad) loopne and test popf cld mov pop ljmp aam mov pushl sarl insl rclb adc aas add pushl nop (bad) cmp mov mov xlat jle dec mov mov (bad) hlt cmp xor (bad) sarb dec cmp jl jnp xchg (bad) mov inc push lea (bad) adc les test xorb jge mov aaa and aad inc fsubp divl jg (bad) dec or or cmp lods push popf xor in stos sub push add popa mov xchg xchg adc mov mov sarl inc mov pop fimull push pop push jl and ficom lods jnp and mov loopne add or loopne or ret cld add pop cs int3 and jecxz or jl cmp mov or dec fnstcw lock or pushf mov mov fwait or pop daa sbb mov or rorb in dec sti sub pusha bound cmp inc cmc or inc addb roll dec (bad) int3 and sub aaa ja dec subb dec test add out jle sub imul repnz xchg jnp sbb std xchg pop pushf test cld sub andl sbb aam jl sbb test jne in xchg test push mov jl jle inc rcll jae xor loopne jle jle push cmp pop pop jmp adc outsl jle insb jnp xor xchg xchg sub cwtl mov lret stos push xor mov aaa mov (bad) sub xor mov je mov repz jne pop cmpsb fs sti pop mov (bad) out cwtl insl fbstp push or sub pop xrelease test push xchg xchg in popa call mov mov push xor arpl inc imul fildl out add (bad) adc push fcomps stos sub cmp sub xor xor ret lods push mov xchg or adc pop loope int3 push les fsub lret cmp addr16 sub mov mov xchg imul pop add pusha test sub mov fnsave jle adc inc pop jp mov adc shrl out jnp cmp sub pop cmp mov adc push cli cld popf jns mov rorb pop mov jmp ljmp pop xchg sar movsb ret mov or ds sub jg sub cmp jmp mov mov inc cmpb mov stos movsl jns data16 mov mov (bad) pop scas fildl pop iret cmc mov mov xor fistp lds cmp and lods sbb aad insl cltd mov lea scas dec cmpsl movsl mov ljmp imul adc adc or out pop int cmp std pop stc cmp jnp (bad) in popf (bad) lock push aas int3 cmpsb jb shll jl sti lahf mov test jns test mov mov (bad) ljmp mov cmp push mov lock add and sbb dec cmpsl cmp xchg daa mov add or ret rcr repz fisttpll adc pushf das mov pop test mov sbb push mov stos (bad) lock stos sbb test pusha push push insl xchg adc fsub lahf test incb mov (bad) shrb xor jo dec lret mov mov sahf inc fadds (bad) enter lock mov and adc and mov jnp or lret sbb adc jmp subb jmp adc ljmp rcll dec add mov fwait inc aam jmp adc je lock in dec stos pop repz rorb mov stc (bad) mov inc xchg in movsb loope jbe fnstsw sbb cmpsb sahf movsb lea sub aad mov and xor mov adc mov pop cld pop outsb sti xchg out or xor or in adcl int inc testb std mov adc mov xchg push mov jo (bad) mov in (bad) and and mov mov shrl mov jge nop js (bad) add inc out and addl fnsave and cmp jb dec aaa push pusha push sar mov lahf imul insb or aam movsb lods lock cmp sub iret outsb mov call cmove (bad) push shrl mov xchg pop jecxz sub ljmp mov push cs mov push jnp inc ret mov imul xchg rcrl sbb pushl imul and mov movsb adc cs mov lea cmp outsl jno int3 push sbb xchg mov iret jae mov incl sub ret setp cmp mov (bad) and fwait add adc cmp and add jmp mov fwait jecxz std cmp out sbb fucomip jle decb cmp fadd inc adc add (bad) sbb pop popf mov ja add cmp ss jmp cld fild sbb adc xchg sbb das mov sbb in sbb (bad) mov nop mov mov and imul mov fistp fwait sub loopne jl cmp inc ja fucomip fsubr push push and xchg sbb push lret jl mov fnstenv cmpsb push add cmp out adc sarb adc mov cmp repz push pusha fild or push pop adc pop test pusha sti mov pusha push aas pop mov movsl cmp (bad) jge add mov and push and imul cmp (bad) ffreep mov bound or or mov (bad) jo push pop dec sbb pop mov les mov lcall adc loopne fwait ret fstp jmp sub adc rcll cmp dec (bad) movb adc cs jnp iret (bad) pusha cmc fimull pop jne cmp ja jp lock pop mov imul push and (bad) adc pop aaa daa rcrl jp movsb lds or rcll fwait pop mov insl mov and cli push cwtl ja jnp aaa ret push shlb cmc lock xchg sti leave fcoml pop push xorl cmc pop daa arpl aam jl int loop add iret cmp mov mov orl dec lods push jle xor xor test push mov fstps pop inc (bad) ss push or nop jg add fisttp movsl jl mov xchg cld adc mov icebp push sahf push mov idiv xor pop shll rcr lahf lods jo in cmp idivl mov sbb scas imul cmp mov jg cmp scas and sbb dec push movsl sub jbe aas jg hlt sarb jmp es or insl jns,pn cs loop mov pop sbb jo inc je ret push fwait dec mov jmp or jns mov or inc insl mov push fstpt pushf xchg test mov xchg inc jo andl sub cld nop gs mov xchg cmp push in (bad) or jmp jle lcall adc jp popa (bad) js,pn imul xchg sub mov mov jg xchg shlb cmpsb inc pop cmp bound decl mov dec js jb sbb cmp mov in sub add pusha shrl int push mov iret mov xor call pusha in mov rcll inc or jle pop adc jnp mov cmp sarl sbb in test sti lahf sub call ret mov outsl cmp sti adc mov jl xchg cmp loopne xchg iret sbb nop lods lods mov inc fst (bad) lret cmp cmp xchg jnp (bad) andl jp fnsave addr16 ds test cmp jl jmp (bad) mov jg outsl nop adc push call sti or pop enter shr push mov and add cs push xchg adc or pop (bad) pop loopne ljmp push (bad) imul orl test dec leave nop push lret xchg fadd dec and adc cld sahf sub jle add ror xor mov mov ljmp pusha aam pushf cmp lret or mov xchg adc sbb and in bound sub jns popf or loope and pop outsl jns or mov jp xchg jl jnp mov fidivrl ljmp pop arpl out mov fadd add (bad) jo cmp jp icebp das jo mov or sbb dec adc xchg push lret lods lock sbb dec js repz movsb cs mov jge jne (bad) and cmp mov aaa loopne movsb ret rcl mov aaa jl jo adc subl clc push (bad) sbb mov lahf cld (bad) lahf cld mov pop mov mov cmp out push mov push cmp std dec repnz ret dec jl int addl push fs aaa cmp or sub pop mov pusha mulb and push bound cmc mov xchg hlt ret xchg out sub out fwait adc jge dec loop movsb movsl jb xlat lock jp lods stos call loopne aad je std and jp hlt lea push lret aaa mov (bad) mov cmp jb push or movsl mov fcompl lea rcrb push sub jnp fsubs cmp into lods repnz mov sbb mov sbb xchg es jge call jg sarb jecxz imul adc jl or xchg cli xlat popa stos and sbb inc push (bad) pop jp jp pop sbb cmp dec sti add xchg cmp stos scas sbb int3 pop sub xchg insl lahf pop dec mov or testl aam sub lds mov push add cld (bad) cli pop cmp insl mov cs sar and jl (bad) cld mov mov cmp cmp rcrb loop addr16 and leave mov push jnp dec lods dec in call jae or and push in lret sbb sbb mov mov rcrb jb push pop jns xchg adc jnp movsl adc sub jg addr16 jge or (bad) out idiv adc and and imul sub xlat in pop or in sbb orl imul test push and fdivs cmpsl cld (bad) in mov cltd xchg pushf inc xor pop lea shrb lret mov push lret lods call and jo lds (bad) stos cmp dec push out and sub pusha daa rcpps add mov jg fisubr or repnz insb adc add pop cmp cmp stos jmp movsl pusha out inc inc in xchg sbb jl daa loop cmc int (bad) mov and fwait push inc push inc mov ret imul ja jle imul cmp dec and jp xor pop xchg rol (bad) imul add jecxz pop xchg ds lret rcll ljmp pop stos sub dec or scas sbb pop or fwait loopne jne push mov mov aad repz pop ret lret jg push sub nop repnz inc mov and sub sub xchg cli xchg sti pop leave lea mov imul pop xchg or out cli lret or into fcoms cltd les cs pop stos mov jnp ret mov push sbb mov addr16 lahf sub ret fisub scas adc fdivrp mov loop (bad) into or test cmc jmp lahf xor xchg mov je stc les mov je mov xor sbb (bad) mov (bad) (bad) cmp sarb or (bad) fwait mov test pop in xor sbb jo cmp pop jge push mov mov ret add mov mov lret jl pop aas mov movsb jp icebp and jge out mov or int mov in into out mov adc das or xchg dec and hlt (bad) call xchg xchg push out mov xchg popa test cs lock mov mov sub pop fs stos rcrl mov pop inc sbb ret mov lcall fist xchg and loop out iret sbb cmp push (bad) inc inc cmp clc mov jle cmpsb or jmp mov (bad) xlat in inc loopne pop xchg jge (bad) (bad) inc cmp mov movsb push xorb inc fdivrl int cmp (bad) dec dec or js loope fwait daa fs lahf imul jnp (bad) fimull mov (bad) int3 cltd cmpsl bound cwtl test lea jg int3 leave push push je addb xchg aaa pop outsb or pop rcrl aas loope int (bad) or stc dec sbb sti dec cmpsl fadd (bad) sub cwtl lea mov jge mov or xor bound inc pop stc outsb int mov loop iret sarl mov ss mov dec addl aam mov test (bad) ret inc je mov sahf ficomp and cld dec lds and mov push or mov sahf lahf fstpt adc jl jbe dec stos add mov jmp mov movsb sarb xor jnp fisttpll push mov stos repz orl cmp jge dec jno cmp mov movb subl add repnz sarl popf and mov sti pop dec stos pop or and xchg inc cmpsb pop dec stos in fistl jmp cmpb mov push mov sub pop ds dec icebp daa cmp loopne loop (bad) stos pop or push xchg stos fwait push lahf pop ds shll dec or sbb sti scas daa stos test mov or stos imul fbld jns xchg (bad) xchg mov push in scas mov pop or or out enter dec imul cmp neg ss mov in or push ret inc jns sub pop cmp cmp jns sbb (bad) fisttpll xchg cmp cld in mov decl xchg (bad) fstps push sbb xchg outsl (bad) pop sti (bad) insb lcall mov scas mov fisubl scas mov xorl mov subl (bad) jge shl push sar jo xor cwtl sbb mov and xor int dec les sahf sub pop adc imul xor call and cmp mov xchg jg lcall daa imul adc jge out mov jle and push jmp adc or adc xchg inc mov lea aam test clc int3 in cmpsl insl int3 int3 mov popf test dec imul sub jle xchg icebp push imul lahf xor addr16 data16 ret jno sbb push roll iret popa mov push cmp test call mov (bad) nop add fist lret inc idiv cmp or mov (bad) fisttp imul mov aad cmpsb and jnp sarb std inc (bad) pop inc fsubr rcrb push dec cwtl cltd adc sbbl subl xchg adc loop sbb lds andl mov inc jl (bad) add mov mov pop mov add stos das fdivrl sbb idivb pop add ret push adc or adc inc imul cmpsb movsl fdivr xchg jp imul outsl ret cmpsb iret insb es into push fsubrl sahf sub jae in jge push mov mov test negl adc hlt sbb jmp adc jge ja,pn (bad) sbb jl sbb and mov rcrb push dec inc sub mov inc lret jne mov jo popf xor (bad) sbbl pop and adc push in std nop jb rorb cld lock leave loopne pop mov dec inc dec enter cmp cmp rolb jo mov (bad) cmp ljmp mov sahf fwait lods and ret pop xor lds in fmul add xor mov mov dec dec pop mov mov (bad) cmp (bad) push movsb addl sub xchg or adc cmp outsb pop dec popa mov (bad) rclb test xchg fwait (bad) (bad) (bad) mov cmp rorl pop mov jbe or lock ljmp nop cmp cli xchg inc lock push lea test adc scas (bad) sbb or cmp cmp add fcmovnu imul insl scas (bad) xor cld push add test pop test sub fs push sbb mov sub xor cmp shrb ja jnp sti add rol imul jb jb dec push sti jmp lods inc test sarb mov cmp test xor pop ja or jno nop add cli iret jge dec test lods cmp cmp fisttpll cmc push test inc add rcll pop rcrb lret mov xchg out sub or js mov and sub cs pushf add inc xchg dec ret leave aam call lock or jnp sub vpinsrw sub jae lds inc dec test and mov ret push adc sbb pop jl jo lock push push and xchg cltd test xor je or add test xor pop bound lcall pop add pop pop movsb movsl in stos lods push jecxz out fwait imull fwait sbb mov mov test xchg insb adc sbb out orl mov (bad) stos sbb faddl pushaw fild lods inc or bound fcmovbe enter cmp div lods (bad) jmp call sarl lds shr cmp pop leave stc orl adc inc and (bad) out outsl xchg sbb cld xchg sub push mov xor scas fnstsw enter lahf in jbe cld mov imul andl nop add stos call lea test mov loopne jge push push sub push sti push std inc mov std sub mov jl imul imul add cmp mov je jl sub jnp pop jne jnp xchg mov stc add rolb outsl movsl outsl std add jmp and inc nop out scas adc ret rclb (bad) lock (bad) xor mov or mov aam jg je jg adc pop adc jg jnp movsb jo and add data16 (bad) sub fisttpll sub mov mov shr push cwtl fsubl fcmovbe mov mov jp bound mov jnp push (bad) cld lods dec pop sub lods dec jb jl ret jno dec jp jb (bad) mov mov jp ljmp xchg jp xchg enter lcall jp and (bad) lea (bad) adc cmpsl es jp lret jp and call mov mov jp (bad) repnz jp insl addr16 jo in cmpsl cmp jp call aad pop push cmpsl bound mov ret jp lds ss jp shlb jp and or out xchg add and mov or jnp mov adc adc fisttp aad jo pushf mov pop cmp leave mov push mov inc insl arpl mov loop frstor pusha jb andb inc out push mov sub lods dec jp lds dec repz push cmpl add lock inc in dec cmp mov arpl and or xchg jp or nop in jne lret jmp push jp jp inc push jp pop jmp push jp pop int3 incb mov fwait push icebp mov mov xor jle (bad) sub jp in mov sti std pushf dec jo bound insl dec xchg cmpsl and dec cmpsl xchg pop (bad) jae or dec jae push pushf dec sub imul rep dec enter pop mull decl mov fs lods dec mov cmpsl cld lods dec into xchg cld lods dec sbb cld lea dec and lods lods dec (bad) jno lods dec sub hlt lcall jmp pusha lea adc (bad) out inc ja leave add mov lcall jl mov cmp pop cs cmpsl shr push loope xor decl ret push sub mov (bad) jg insl out jnp mov mov jno xchg push or dec fwait scas pop sti pop mov mov dec enter loopne jne add or pop lock test sti xchg lea dec jmp inc (bad) cs (bad) int call repnz mov es (bad) repnz pop inc iret mov sar mov jne sub xchg int stos jle lock jp mov rcrl lods icebp dec xor (bad) mov xchg jnp push popf sti lock sub lsl into mov push inc mov jb mov loop (bad) mov jo mov addl sbb dec incl add jge clc mov or or jnp,pt and hlt mov fistpll mov mov sub adc cs jbe inc or sarl cs inc gs lret jnp adc lock outsb sub inc mov aas std push jg sub cwtl loop cltd mov or fisttpll mov sub mov daa cmp fildl int (bad) push mov push add push or sbb ror test rorb jbe neg ds pop and (bad) shrl popa sub fsubrl push fstpl add daa pop inc sbb adcl fwait lret or push clc pop shl bound or (bad) dec fdivs xchg pop xchg mov test rolb (bad) (bad) jnp sbb xchg fldl ja in in jecxz ret lcall dec nop sub stos pop rcrl mov inc ret push stos scas and dec pop shrl jle aas pop insb nop scas pop and pop cltd sub mov cmp test add jnp idivl pusha cmp jp mov fisttpll cmp add or add dec push push out pusha mov mov cmpsl lods cltd ffreep sub xchg jge pop lds pop sub mov sbb jge loopne cmc icebp mov jecxz jg mov sub cmp fcmovnu cmc mov jb shll sub cmp and cwtl ja,pt cmp add fidivr xchg movsl dec shrb mov or sub lahf ret lock adc cmp lds pop cmp jl push test sar add test pop les stos lcall jl jb mov pop stc jne daa inc and dec xlat xchg jns or add mov pop mov sub sub xchg add jne idivl bound dec cmp ljmp xchg stos stos ja add rorl dec pushf sbb outsl sbb int3 cs stc imul mov sub fucomi mov push insb sarl adc fldt dec jg dec dec mov push cs movsl sub jmp loopne pop adc jp pop subl mov test aad cmp test cmp pop or xchg ljmp mov popa lds push (bad) jne ret subl inc lds adc nop push adc jp leave stos or (bad) repz lret stos adc mov cmpsb dec outsb insl std int iret mov xchg lret or inc or (bad) decb ret mov sub mov scas pop xor jne jne rolb mov mov imul mov rclb pushf (bad) insb dec jl jl fbstp cld nop mov jg add inc lea or int sub xchg cld clc pop jb xor cmp xchg pop add loop mov jl xlat mov cld add and out mov xor pop jno nop push leave inc adc lods mov int mov mov imul adc mov lret cs or cmp jmp xchg add into mov cmp imul in jecxz lods mov inc rol int3 fwait mov or les and jl or ret lock nop outsl out insl mov cmp scas pop jne rorb call imul mov in dec pop push rcl int cmp fcoms mov pop inc jo add (bad) add xchg mov xchg dec add xchg pop mov cltd jecxz and (bad) cmp jne cmp imul mov (bad) cld inc pop loopne add cltd aad push sub out pop cld int3 jle cld add cmp jl cmc dec adc lret pop mov xor add pop cwtl pop repnz add inc mov repnz jg sub out xchg lahf jge mov push test lcall cmp mov or add repnz (bad) cmc and es call (bad) in fdivrl jp movsb inc lods cmp jle or je add cmpsl out sti adc push mov dec add add dec cmp les push daa idiv popf mov (bad) jl inc lock cmp jle hlt or or add mov pusha add mov (bad) enter popf inc les (bad) lcall sbbl inc or scas xchg jo pop (bad) nop lds cmp ror lcall push fmull ret subb xor cmc aas mov movsl int3 ret push (bad) adc pop rcll sbb dec adc stos mov insl push scas cltd or xor and lea int dec ret pop popf mov les movsb mov movsl or test inc add mov pushf inc xadd jl push shrl repz sti stos sub lahf pop sti lods std aad out rcrb xchg repnz add scas out movsl scas cmp mov js mov cmp lret add xchg sbb in (bad) std jl push push xchg push data16 or cmpsl clc jmp (bad) lret std cs mov ret cmp add nop xor fwait adc lret pop ds popa insb mov adcl mov mov cld or mov scas mov jle scas mov addb in popa push (bad) rorb test sub dec int pop inc cs imul push add sub xchg cmp outsl sbb ljmp rcrb push aaa bound pop cmpb jns iret sbb lock dec sbb pusha inc or daa xor jp jecxz pop adc lea or adc fdivs lods movsl mov ss cmp aad pop popf xchg in outsb cmpsl popf inc sbb add push jns mov ja popa orb lret ret mov jbe jbe pushf cld popa bound dec or mov insb negl mov cld (bad) out sub sbb outsl fmuls jnp mov mov or fsubrl pusha push enter lahf inc imul pushf push cs (bad) das test rolb lock mov sbb shrb js adc cld repz inc cmpsl add in (bad) mov (bad) mov and sbb xorl lret mov xor add push mov lret std xchg incl lods lcall lods lret aad pop ss pop (bad) sti push (bad) fwait mov push cmpsl int add add ds xor dec or test sar lock rorl mov mov jp push dec or cmp pop ficomp out scas cmp rcll das and jl add lods (bad) stos mov addr16 std jg inc cmp lret popf int sti ss xchg jae fsubrl scas les cmp mov mov sbb fidivr mov mov xor loopne (bad) sbb mov fisttpl (bad) mov dec pop ret mov jo xchg sbb push sub (bad) es jle sbb mov jle cld cmp dec add jnp (bad) lock or imul movsl inc jnp push or lret dec pop movsb fsts lcall ret int3 dec mov add (bad) lock push mov jge mov outsb sbb mov inc mov imul setae jg mov in dec popf cld inc lods mov or adc push gs test ret xor or (bad) les rol or (bad) pop cmpsb xlat dec cmp (bad) arpl or dec pop ret rorb lds rorl jno jl (bad) mov shlb cmp cmp add sbb jle or sbb rclb mov mov fbld mov or sub xchg add mov movd push nop hlt cmp repz lret push ss test or aad push fsubrs lahf or stos mov fistpll adc or jle andl push jb sti nop sub sub hlt stos in dec xchg (bad) popf sbb push xor sarl pop mov rorl repz jp mov sbb jle int jmp mov enter jnp lcall xchg and cmpsl or or jnp jp iret or mov rolb sub lock bound aad (bad) lock scas pop xchg popf nop rcrb rorb jmp nop rcrb fildll arpl (bad) rol or xchg push stos cli daa dec scas xor jl and cmp and int3 jl rol lret sub cmp push aad (bad) jl hlt lcall hlt adc mov dec and adc rcll or mov cwtl shrb sarl cwtl and shrb pushl inc lret bound sarl lock cmp mov fidivrl aas or mov repnz push jae movsb and lret mov or and jl jmp mov pop sbb js incl xchg dec fist or or add mov adc scas xchg cmp pop icebp daa ds int3 (bad) push paddusw adc or leave xor push xchg sub insl mov std inc fwait push (bad) or push pop leave mov mov dec les lods mov xchg jae (bad) stos or pop pop dec sbb lret jae or sbb jne,pn jge fwait mov sub je pusha adc arpl lret (bad) push push test sbb mov jbe mov aaa leave or fimul pop adc xchg dec mov jnp es nop jne out adcl mov sbb jb jno shr push lret (bad) dec cmp cmp dec stos adc mov lcall test or (bad) fwait out dec daa xchg in xchg pop xchg lods int (bad) imul (bad) loopne in xor pushf lret mov loope rcrb and jl cmp out cmp mov sub jg mov mov movb lds mov inc mov dec adc (bad) adc sbb cs (bad) dec or push xorl push das jo test (bad) xchg xchg fistpll js mov jbe mov mov fidivr (bad) jle sub mov lret sarb aam lahf cmc xchg sub je aam cmp jle cmp mov stos push mov dec lods or pop and add fwait sahf loop or jg or mov rcrb mov adc movsl icebp adc (bad) jp mov pop lods loopne jnp and jg ljmp jnp mov fist fimul or or icebp mov loopne and in or cmp stos jg aas add push aas subl mov lret jp and shrl sub push cmpsl pop sbb xchg shrb sbb cmpsl loope cmpb jp pop sbb cmpsb popf push and xchg jmp cmpxchg mov sub pushf mov dec sub lret add fdivrs cs loope mov mov mov (bad) in scas cmp and push jle or cmpsb push sbb add nop loope xchg call inc aad lea pop mov inc push imul cmp add inc pop sahf mov and adc cli loope mov subl stos rcrl dec adc jge xchg jne shl js (bad) sarl mov inc lds xchg ja ds inc mov sarb cmp jecxz sub stos mov pop jae mov in imul ljmp ss pop addr16 cmp fstl mov sbb cli push lcall cmp stos jecxz mov cld add mov xchg stos cmpsl xchg sbb in sbb sbb pusha ret cmp xchg dec std (bad) insl das fistl sbb lds or xchg cmp mov (bad) dec pop jecxz dec dec add mov pop (bad) jg mov imull stos loop pop lret jle int sarl dec fistpll sbb nop test mov or mov rcl sti xor dec push pop adc ret test or lahf fistpll jmp jbe and js and insb add or insb pop lret mov inc arpl push jmp insl aaa mov dec push (bad) nop lret insb jg push and test icebp lea adc adc cli mov xchg mov xchg stos mov (bad) cmp popf lret cwtl mov out jge stos and sub cmp sahf mov rorb ret push fcmovu negl or dec lods cmp pop mov add pop or out test adc jecxz in insb cmp mov mov push outsb push jnp mov mov mov xor cmp sub xchg cmp aaa rcrb jp hlt mov jb jmp mov sbb mov out dec inc fs movsb clc lds cmp outsb jl fistpll std loop or js les dec pushf sahf inc sbb or dec or cltd das or fwait push in sbb mov fdivr fisttpll dec int3 (bad) fidivr mov cld mov scas cmp lcall jnp aas test pop popf mov or mov mov fsts pushf insl fwait inc xor pop dec add gs jnp pop into push fisubrl les in push pop pop shll ja pop mov push sti rcrb pop mov jle jg cmpsl pop dec sarb (bad) mov gs mov nop (bad) xchg or cmp inc add (bad) sbbl adc xchg mov jle mov sbb xor sbb dec pop xchg stos mov and jle rorb lret mov hlt xchg sbb dec or rorl stos fcomp out leave stos xor xchg fsubr dec lcall or mov push bound lds nop sbb jb dec cmpsl lea cld jnp jle sub jmp dec icebp sbb pop aas cmpb sbb movsb dec sbb ljmp stc mov push or pushf xchg cs dec cmp sbb cmpsb das xor lods faddp in sub push dec sub jp cmp cld xchg mov jnp or push cmpsl cld fs rcll and in loop ror out sub jg dec mov or fdivr pop add and inc dec jae cli dec adc loopne cmp or lock or in ja adc (bad) aam scas push push cmp addl xchg divl add adc arpl jnp inc add loopne sbb test imul ret pop gs daa das out and cld xor mov hlt fisttp jnp xchg mov xchg ja jl mov or or aam ret xlat pop pop mov or jo fnsave xchg xchg pop jmp mov dec sti mov sahf mov std mov inc jl mov cld xchg pop and sbb cltd mov and mov movsl enter or leave or sti adc std xchg jmp (bad) xchg xchg adc arpl bound insb push lea dec sbb movl xchg adc out cmp outsl xchg or dec dec mov mov sub outsb adc (bad) sub call test into les jmp sbb fadds mov jg into inc mov push inc cwtl mov mov lea xor pop cmpsl cltd mov mov sti pushf mov xlat hlt pop mov jge cmp int mov add sub imul push cmp (bad) mov inc mov roll or push les das lcall mov mov mov fistpl adc xlat outsl stos mov add sbb pop jp mov stc adc pop xchg mov int3 inc mov les push andl leave pop jns pop ret dec cld test imulb xor dec jle,pn add subl cmp pusha mov pop cmp pop add jp call push ret add mov (bad) adc sti dec lea test inc jl add (bad) mov lahf xchg sbb rclb jge dec fcomip cmp inc pop xchg (bad) sbb lret cmp push daa sbb cmp int3 mov add pop pop sub sub sbb fdivr jo mov (bad) clc pushf fistl add inc xchg lret push lahf mov pop notb mov test (bad) add ljmp dec fimull mov push and je stos nop imul jg lods dec cmp pop pop mov addl (bad) mov nop sahf xchg xor push sbb and dec popf popa or std xor stos ljmp std mov jg and stc aas jmp scas lock loopne ss sarl sub push xor push popa (bad) fstpl aas mov mov std add mov sbb frstor stos pop (bad) or jl mov std xchg or and mov inc rol into push leave inc in divb test cmp popf push cmp inc (bad) jae aaa mov lcall cmp cli test pop push out je inc mov dec add pusha loop push mov roll std or sti inc jl cmp and sub xor (bad) (bad) cmpsl enter pushf imul xor (bad) jmp loopne adc subl mov cmp (bad) xor push pop (bad) movsb mov (bad) or mov jl daa push mov loope jg mov sahf std pop mov leave dec and fild dec dec ror es sahf sub sbb mov rcrl lgs cltd das mov mov (bad) repz pop inc loopne call jnp sub test lret jae mov lock test mov das or push xchg xchg inc shr or paddd adc adc mov xchg fst mov stos insb push (bad) xor cmpsb jp jmp outsb (bad) jae cli xlat push ss dec pusha mov loop or and data16 lret xor lret (bad) and pop lret pop xor mov jle mov or pop daa add xlat jmp mov (bad) jg adc dec and popf scas jp fucom push or and push sub push push or icebp ret (bad) ds in jle loope cltd fwait (bad) mov aas shrl pop jg jecxz mov idivl ret ja popf xchg lret lcall fistpll pop test xchg jle push bound dec xor pop or jge loop and movsl jno push or cmpsb jl movsl jp in insb jmp push (bad) stos jg mov mov pop sbb (bad) ficomp rclb das ret mov (bad) mov int xchg or mov sub add mov push sub ljmp lea arpl mov dec ret lea cltd out mov adc ret lods (bad) xor bound aas mov leave or (bad) mov mov mov cmp (bad) sbb sbb mov test cvttps2pi mov (bad) jmp pushf adc ficompl or out ffreep mull inc into int sbb jmp pop loopne movsb fwait dec ret xchg fisttpll loope mov addl adc insb mov cs test and sub or push mov jnp loopne inc add inc fwait lea xchg imul mov jnp mov sbb sahf ret pushf decw sub bound dec cmp pop fisttpl lods or jl or adc sbb das sarl in mov xchg lods rorb enter (bad) test jle adcl rcrl das add dec ja test lods xchg pop jle,pt or pop pop xchg jp pop addr16 inc stos xchg sub xor cmp or les ljmp mov imul xchg (bad) or jmp pop mov pushf je jbe adc mov mov scas nop lret fsubp into insl xchg cltd jl and (bad) iret push jo test das xlat or cmp xchg push cmp js and jns imul insb add mov out inc xlat or (bad) in mov leave push mov (bad) cmp pop mov xchg nop or mov push sti inc aam inc scas cmp outsl mov sub push (bad) test sbb enter push add or in mov fstl jmp rorb fcoml add or pop out or add fisubrl scas (bad) lock jl cmp lret cmpsl push sahf cmp in jg xchg loopne add mov jl mov jl insb (bad) adc xor jecxz add or mov out jae out roll call inc jl mov and pushf or sbb cmp adc enter lock and fstpl repz mov scas xor and sub xchg fnsave roll mov rol add xor sbb add adc jle or stos or leave inc loop adc inc (bad) sub ret push incb adc xor ja xchg xor mov lret cmp les cli and mov ret or lahf mov mov sub jecxz cmp mov mov dec jnp stos fs push or mov cmp sarl push lahf insl enter int push cmc popa pop lds dec pop mov add mov jnp jg ja dec (bad) gs pop (bad) lcall cmp stos hlt cmp jo (bad) jae xor pop leave jb and mov bound aas rcr flds rorb xchg sti mov dec or xchg pop push fidiv in popa lret fimull and sarl sbb iret lods clc and jnp mov addr16 es leave nop add roll and and push lret fidiv insb xor add xor xor jle or inc push or ds les outsl lods add mov add inc popf scas mov and movsl dec cmpsl pop mov mov cmp push popl mov xchg aad (bad) jo subb xor mov das sbb aas call dec jbe je sbb sub outsb cmpsl ja dec lds and leave pusha adc pop xchg js inc cmp enter mov and sbb mov fildl or idivb mov or fadds popa mov out roll or push and pop add or jge nop xlat je push movsl popa in dec loop adc stos lahf pop xor mov jecxz push cld loopne mov movsb mov ljmp push iretw add fdivr sbb iret mov mov jle fmuls jnp mov pop repnz xchg (bad) jne clc cld (bad) scas dec adc rclb fiaddl cmp jg or adc add (bad) sti jo inc xchg push dec outsb cld sti jnp inc jmp and hlt push sbb and mov mov cmp or cmp loop shrb pop add mov rcr cld xor mov and nop mov push mov jmp int pop add xchg test pop popf int ret iret (bad) cmpsl (bad) jo cltd xchg fidivl jnp pushl das in mov mov test cld adc mov sti xchg push dec stos jg mov mov add xchg sbb in lods sahf lcall in sti mov rcrl jle inc pop inc or mov push cld leave out stos cmp and or xor mov cs or and dec (bad) and adc cwtl pushf std ja xchg push inc push (bad) stos iret mov sbb mull out mov and fild push repnz cmp pop repnz rorb mov fisub dec mov cmp mov pop adc push inc fstps mov add xchg dec mov add cwtl decl push pop ljmp adc mov rorl adc test jp or adc stos aaa sbb pop add dec mov iret lea (bad) sub cld stos (bad) out and dec and cmp imul aam bound mov call aad out (bad) adc mov adc sbb sbb cmp cmp sub imul xchg mov lret lds stos push stos std shrb cltd inc arpl movsb mov and or push xchg sahf dec jnp les and mov pop inc jle outsb dec cs mov xchg push mov mov lahf out cmpb enter push cmc clc or leave jns mov mov rcll les sti movl cmp sbb ficoml xor xor aas aam lods jg aaa jp mov fwait aam stos les xchg jmp and sub loop ljmp xor movsl cmp dec shrb cmpl fwait in lret mov les mov or cmp in jae das lret jmp sbb or mov ret xchg inc sbb cmp adc imul or jp test mov xchg outsl add (bad) xchg dec dec cmpsb (bad) mov sbb ljmp sub jmp in divl icebp stos mov inc mov ret or cmpsb dec jecxz xchg adc or adc test and push scas lds cmp jl or mov or xor mov jbe stc jns test cmp push lret out mov adc pop rolb jne ret jb pop mov sbbl mov xchg insl mov cmp or insb mov jp lcall xchg lock jg dec pop test lods mov sub in xor pop into cmpsl add push jo inc (bad) (bad) lock pop or cmp repz jg add xchg testl add or loope inc cmp cmp or push insb mov jbe jmp shrl dec in mov idivl cmp stos inc mov ja fdivrl jle jnp xor imul lahf pop sarb mov inc (bad) repz xchg sub inc push data16 and lret inc push cmp pop fwait xchg enter or movsb xchg enter insl inc icebp int pop lock loopne movsl cmp and mov or jp ficomp sti insb cs (bad) or cmpsl fdivrl mov jae push cld and stos dec cs mov ficompl sbb into test out lret jg (bad) mov mov aaa jns jns inc fwait shrl lahf jp inc dec jl mov jl in test mov adc inc movsl scas daa aas push lds pop (bad) cmc divl setl mov and test jp decb mov daa (bad) pop fisttpl loope sub fsubrp mov xchg orl mov sub mov dec pop stc fwait pop mov xlat xchg ret xchg mov (bad) lock jg iret lea dec dec mov add (bad) adc mov jnp fcompl xor push push (bad) ljmp test xor jnp,pt adc xchg mov iret and loope in add push inc test jbe sbb sti out pop sub test loopne pop repnz incb je pop hlt fsubrl cmp (bad) pop loopne mov push aam inc lock jl cltd lret mov push aad or mov mov mov stos pop dec rolb dec sbb fildll mov cld add inc cld dec fcmovne inc pop (bad) lahf mov sti fildl cmp lods push dec cld cmp jecxz fcoml push cli dec loop pop ret dec mov insl jl pop mov popf push lds mov jns aaa mov sub push dec adc cmp outsb ds sahf iret xchg arpl xchg mov dec or punpckldq test mov cmp repnz movsb enter jl,pt or dec jp mov rorl test jmp pop mov dec (bad) jne stos jmp mov sub cmp or iret or push mov jle imul ljmp data16 js cmc xor sub inc pop pushl xor repz (bad) ret jge pushf subl aas sti test mov (bad) mov inc mov add mov mov (bad) inc jl jnp fstl sub cmc xor sub mov gs lahf cmp cmp add popa pusha test xchg dec add scas (bad) ficomp pop mov test xchg pushfw xchg icebp cmpsb xchg mov mov les mov mov jmp fdivr jg or cmp aam lahf mov fnop cmpsb nop push sbb lcall lods mov adcb in imull (bad) jnp mov xlat popf mov and jnp scas sbb jmp les icebp in jo add or ret jo jg mov inc popa dec mov push vdivss stc xor xor adc imul fucom mov mov pop ret cwtl imul out mov bound mov adc adc popa in jmp fcmovne cmpsl inc pushl sti fdivl pop adcl sarb xor add pop lea inc jle xor push adc inc and jnp mov negl insb lods lea sub call in cmp inc cmpsl bound (bad) pusha mov test cmp push incb divb lea cmpsb lcall std jp scas adc lcall mov jg or movsl jl push adc shrl aad rolb inc jecxz orl shl inc pop mov jecxz and rolb add or pushf inc or pushf mov or pushf jnp push fs mov lock fmull xchg pop mov imul xor mov and dec (bad) out lcall pushf push mov in push cli and xchg fwait int mov or pop and addr16 pop andb and mov rcr add imul dec adc jnp adc (bad) into jg in aam fldt sbb add adc mov (bad) lea mov jl loope lods cmp hlt mov (bad) into adc cmp mov sub sbb fs add aas jae in jno aaa and mov push arpl movsl mov adc jb or pop shll fwait push mov enter icebp rcrb aam mov hlt movsl nop das pop push sub jge shll sbb in add and outsl xchg jg or lcall mov mov mov int3 push (bad) (bad) pop ja mov cmp push test pushf (bad) sub cs ret or in mov inc mov cmp pop sbb test scas add fildl decb push or loopne test adc push lret subl aaa lret insl mov mov mov imul outsb and cmp std rclb cmp scas pop outsl xchg aas mov mov ss xor jp icebp ds fsubrl sub imul fwait adc mov aad in fimul push adc daa sbb or adc ror popa xchg mov ljmp stos jge (bad) (bad) jnp rorl mov in jns pop add mov testb and icebp jl mov fiaddl push insl and lock addb pop jbe push or or xor sub jmp sbb mov clc push and cwtl or xor add mov adc jg inc add imul or dec jg pop insl cmp into fadds in mov ret cmp and mov sbb pop inc dec mov nop imul push mov or push sar sub cmp ljmp das shr sbb mov or dec sarl imul clc (bad) fldt jnp sub fild mov aaa sub fistpl dec mov addl jnp sti mov cmp inc pop sub lret lahf std xor or sarl xchg jnp and add xor faddl hlt xor nop add lods cmp (bad) jnp mov jnp cmp test jge mov or mov loope adc add mov into cmp mov lods cmp orl pop xchg mov lea sbb dec push movsb pusha mov test adc mov jecxz rolb mov and pop dec call pusha mov in add fnstcw pushf adcl int mov push inc jl add or test call add int inc and in movl (bad) rcl leave sub iret add add xchg cmp or add inc jg ret sub jmp scas repz or inc and inc lahf test lds add pop add (bad) mov or or mov ret add mov or pop sbb adc sbbl enter xor int (bad) mov dec mov in mov movsl mov jnp lods rol lcall test inc stos mov jp (bad) movsb insb mov and add or popf hlt inc std or xorl adcl fbld mov loopne adc mov rcl cmp ret in or inc inc jp add inc call movsb negb jl,pn lock nop sti jnp inc jp cmp outsb stc jo xor jbe aad mov add rcl and jo cmp xchg xlat loopne (bad) rcrb mov ds dec outsb inc pop or insb imul sub je dec cmc ja mov push andl cmp sub mov pop loope pop pusha adc in jb mov popa arpl pushf mov int3 jnp std jg iret pushf or sbb mov mov faddl mov cmp stos aam movsb aam xor jge and cmp sbb sub jmp inc les sub cmp das notl (bad) xor push outsb stos pop cmp imull enter xor cmp ret add or cs fs scas jb xchg mov fs and push leave sahf inc testb push scas or sbb imul pop lods lds mov outsl dec dec loope and sbb inc ljmp xchg mov mov push (bad) jmp dec test or fistl scas shr mov and (bad) std mov cmp jnp jns es popa jb pop loop xor xchg cli add sbb jne mov add leave inc rcl rcl mov mov or dec arpl sub xchg adc int3 mov scas call pop mov lret push adc fwait lea pop cmp in xchg shll cmpsb push push xchg aas rorl or nop cld inc inc iret or leave pop je (bad) mov lret pop jnp out std ror int out and or or push icebp xor push or push (bad) call fimul popf int3 inc rcrl pop jl ret add sbb hlt aaa aas test push fs add lret sub dec aas jb add dec push sbb (bad) ljmp (bad) add mov mov xor and mov inc inc les mov fiaddl jge jecxz mov lcall mov data16 mov imul jge imul or loopne mov jle xchg mov fisttpl std lock cmp add jne and sub jo inc int3 sbb mov or push punpckhwd pop (bad) xor (bad) fucomp push bnd addr16 jmp jb loope jbe fstpt adc lods clc cwtl (bad) mov mov fstl loope push repz mov pusha add jno xchg mov jnp or mov loop or or pop jp dec (bad) fbstp shrl push mov jnp mov repnz mov rcrb daa jl fwait das and mov jge push cmp cmp jmp addl (bad) sbb jo ret lcall mov addl fnstsw mov pusha out inc (bad) sti cmpl (bad) fmuls pop cld loopne scas cmp (bad) jg mov fwait mov fistpll lock push sbb jge or mov pusha adc pop mov jl cs mov cmp sbb lahf out nop push adc push les or mov jle adc fs or xor repz mov dec pusha ficomp xor rorb pop push xor dec and jmp sbb cmp outsl cmp pop insb and jg add push sbb jnp roll add push insl cmp adc mov pop call rcrb xor push (bad) cmpsb ljmp jp pop dec adc sti and or pop lahf (bad) jl dec cmp mov xor int test (bad) hlt xor push push inc repz fneni(8087 mov xor bound jle jl cmp jg insl push mov iret mov js fwait dec mov push cltd outsl xor mov mov jg mov and xor sbb mov mov arpl mov insl aam daa inc adc jle jmp daa sbb mov sub lcall in fwait iret daa insb lret inc int3 inc dec cmp xchg stc xor sub dec xchg pop nop and add pop push addr16 shrl stos pop (bad) mov test sbb xchg ja sub jl mov das adc add jecxz leave pop (bad) or add sbb push mov dec push (bad) dec imul sahf movsb fwait mov out lahf add or test pushf cmp stos dec inc add jne lea or fwait ret and (bad) cwtl or adc cmp cli xchg lods fild negl mov test out rorl movsb mov pop pop clc cli or cld loopne mov mov idiv lods or or lahf popf (bad) insl lret add stos insl mov fidivr jg push mov xor push push xor push jnp loope lea mov je xchg test clc mull push jg ret and push mov outsb mov push push movsb inc inc test nop dec xadd jne out out or lock dec jo addr16 mov push roll int test negb jg jno jle nop je (bad) call jmp adcl fcomps lds jp sahf jmp sti in nop sbb stos adc inc cmpsl cmp les mov or or push mov push nop daa mov mov fs lahf add cmp add sub roll nop cmpsl fidiv or pop dec shr or push mov fs pop adc (bad) sbb sub cmp cmp or mov or add fldl2e mov out pop mov push in mov push repnz gs nop cmp xchg lea mov negb sub pop (bad) inc cli clc pop xchg mov ljmp fistpl gs fdivrs sbb hlt es or aaa stos mov fdivl push xor mov rclb in enter sti andl mov fldt lret jb push loop cmp and (bad) push mov dec mov and ret fstl cmp loope add adc int scas cmp xchg adc mov jecxz iret mov fidivl sub inc pop xchg nop nop jbe hlt and and mov cmc sbb add dec xchg les arpl std push jno inc sub std pop push sub xchg test lock cmpsl jmp subps and mov (bad) mov stos jle push ret dec leave mov xor xchg ret and lock lock ret jl ljmp sub jno adc rcll repnz and push rcrb rcl dec loopne ret cmp test in mov in and outsl stos addr16 mov sahf shrb imul imul sti sub in mov fstpl fs ljmp jmp imul (bad) ss jno dec aaa or mov cmp aaa sbb int cmp out popl add popf cmpsb mulb sub cmp fdivrl cmp mov push and cmp testb mov sbb (bad) push adc mov and inc cli cs mov (bad) jp,pn pop mov insb lret adc cld xchg pop fsubs out ret lea and (bad) jmp mov xlat (bad) sbb jge xchg adc mov rolb inc (bad) pop aas lahf fimul aad xchg mov add decl int orl insl test sti jmp cld rorl outsl adc sti (bad) out xchg and sbb int mov fsubrl hlt or sbb arpl cwtl sbb jbe hlt imul int jle pop cmp iret mov (bad) int cmp jb push cwtl lahf mov imul lret sub stos jne jnp (bad) push dec int stc les mov add push outsl cltd sarl jmp mov ss and (bad) cmp jnp pop add loop inc and add pop jb mov jo repz rcrb daa and in aam cmpb mov xchg cmp jle cwtl mov cli push sti (bad) sbb call or orl mov cmpsb jno dec xchg sti xor popa out mov mov sub adc pop (bad) or call test in movsl sbb jge jae or add sbb in mulb movsl inc insb xor outsl or mov push sarl stos push and add ljmp rcrb and dec dec add add mov adc pop loop pop outsb dec clc out sub mov cmp fisttp sbb push xchg ret push unpckhps pusha aaa sbb sarb scas cmp mov push lret lahf in rcll popf shrl addr16 fildl mov nop js cmp xor sub xor mov outsl test or iret mov jl loope and loopne adc sti and sbb or cld loopne dec std cmp dec inc cwtl daa lret (bad) out movsb les lock pop fnstcw stos mov jge lcall out and out call arpl fwait (bad) pushf xor aas add test movsb rclb (bad) jge push mov scas lds pop rorl mov pop iret pop fdivl sub fwait cmp enter enter mov or fstps jl cs cmpsb lea pextrw popf push repz mov dec test add je jb jl das inc test test inc jbe call add inc (bad) sti jae (bad) jnp dec mov dec outsl lret mov xor mov dec ret cmp mov rol lahf or mov fnstsw inc sbb repz pusha cli nop mov adc out shr (bad) xchg adc insl into pop (bad) jmp mov lret pop adc cmp fcmovne sub jnp ficomp cs loop rol loopne jbe mov (bad) jno aas mov scas out add int3 ret (bad) insb push jecxz js jg cld pop punpcklwd stos dec leave fld push pushf (bad) sub aam pop sbb push int mov test inc mov fwait dec movsb inc std call mov cltd rorl ret test cmc in xchg pop cli sub xlat gs add outsb mov (bad) sti fstpt mov xor mov (bad) jmp pop mov repnz pop add out addl das movsb push pop or adc pusha add pop das push mov adc imul and dec jmp xchg (bad) aad jae insl repnz pop sbb fcomip out mov mov add inc leave aaa push ret lods jmp add loopne pop cmovs jnp roll les fs bound mov fildll popa push je sbb incb lds ret leave or lahf sbb lods adc je mov dec mov add das push jbe pop adc xor or adc xor dec aas mov pusha rolb aad cmp ja std or inc (bad) or mov mov mov cmp pop shlb or nopl or mov ljmp int inc int3 addr16 add xchg fistpll jo push insb loop loopne push add adc xor jg sub loopne mov (bad) adc ret lcall sbb xchg fdivr dec ja inc cmp jno aas pop paddusb mov mov jle mov ficom decb lcall xlat xor xor adc or loop and inc pop push or movsb or or rcr imul sbb or or fistpll loope mov jle lock lods xchg cmp cmp fwait mov adc jo pop repnz xor jmp mov lahf mov sti or adc rolb mov push mov jge dec or in jb das dec pop sahf and ret mov push jne sbb pop es push xchg repz dec inc and dec and jmp mov mov ja sub jl inc cmp or or or push fwait dec lock push dec mov fucom iret inc dec ds mov pusha sub jne (bad) stos inc pop lret (bad) icebp (bad) pushf sub fnstsw dec xchg xor mov pop mov adc loop cmc sahf push dec imul adc xchg and movsl call or lahf rolb icebp xchg inc mov jnp in jmp inc pop xor jg inc fistpll in into scas jp sub fstl sub ror jnp ss in inc stc sub or lds lods cmpsl pop fadd adc jge pushf daa or adc adc out or push repnz add mov inc popa lods sbb loope lahf push fwait xchg dec shrb mov cwtl movsb xor in mov add cmp lahf dec pop fwait dec (bad) ss lahf mov dec push loopne cmp xchg cmpsl or js pop and sbb lret dec cmp push lret push fwait aaa subl add cmp stos jl imull test ret xor sti sahf cmp jnp mov add cmp sbb dec push mov fwait cli push xchg xchg mov stos jg int pop dec lret subl aam rol scas xchg out dec sub inc adc sbb fsubrp out test pop inc int add dec (bad) (bad) ds scas aam out push roll mov cmp push popa inc in loop lock add inc jg adc sbb lret (bad) cld dec dec cld push ret mov gs push subl inc jp pop aam outsl and (bad) sbb add movb dec and js,pn sub push fidiv pop sub push inc push pop mov and fildl xchg inc add ljmp xlat or (bad) mov aad imul xchg inc cwtl pusha jno aaa dec lea pop scas (bad) pushf ucomiss cwtl add pop fwait leave and incl and aam xor fs adc ret and ja and enter in mov xor add (bad) sbb mov faddl push lds sub or and mov jl cltd dec or jbe push mov add rcrb popf clc pop insl push lcall and in bound loopne add push jmp leave or (bad) push jbe xor or adc into add and and ljmp pusha add mov rorl cmp mov lret mov mulb (bad) adc hlt and inc inc cmpsb push int3 or jmp out jecxz xor adc push je mov or mov fwait ds sub fdivrl mov xlat lods imul in mov jp cmp xor lock and popf roll (bad) loop cmp dec rcpps xchg or sbb nop mov int add das xor or lods loopne daa or lock das cmp mov cmp fnsave jnp out pop pop rcl mov sub rcrl ret push sub push sbb repnz les cli test push mov mov ja hlt jmp lea mov mov (bad) cmp mov popf push sbb fwait or xor mov or cmp adc push dec lahf push je sbb cltd sahf jmp rorb shrl sarb out xor fdivrs sub mov arpl ret sahf cmp xchg mov or cmp push cmpb movl hlt lods popf mov mov lods loope stos xor push dec loope mov lods sbb add leave or jl jmp imul jnp popa mov pusha ja dec shlb inc cld mov cwtl mov mov cmp aas sbb inc and xorl ljmp aas jge repz mov (bad) jl imul in clc pop xchg sbb out jg cmp mov mov jg fisttpl into test scas pop mov xor loopne xlat jle (bad) sti push dec pop sbbb andl (bad) jnp inc cmp lcall fisubrl aam and push or xchg lret imul in adc or (bad) outsb es sarb int lret jp jb lret mov test push add fistpll mov and sbb jle loopne lret std mov or mov or cmp mov stos jo frstor push in cmp and shlb xchg ljmp cmpl popa test jg cmpl sahf cmp fidivr mov mov std cmp cmpl cmp fstpt cld mov cmp (bad) cmc mov lahf mov xlat cmp push imul mov (bad) xchg scas mov jl std cld jmp xchg sbb lahf xor sub (bad) sarl sahf sarl and or push add in fwait inc (bad) sti pop dec or outsl dec into outsb fistl aaa orl inc rorl push test (bad) bndmov and push pusha mov cmp (bad) xor loopne cmp fistl cmp rol jbe adc sti inc jle or in cmc or (bad) mov pusha test dec (bad) xor jnp push push jg adc cli cmp sbb iret push or mov or bound adc xchg mov inc les sbb lahf rorl bound jb adc push popf sar push push sbb dec std test cmp data16 data16 jbe cmp pop xchg pop idivb add inc xchg cmp mul cli push sarl jmp call lcall mov imul shrb jg sub cmp cmp sahf adc mov adc ljmp xchg push loop clc test pop bsf mov (bad) dec mov push lret pop cmp xor orl push aas inc mov fwait xchg repnz sub mov and rorb ret into adc fwait pop cld or dec lds (bad) fdivrp andl or pop hlt lcall hlt cwtl outsb mov mov les sbb test fs pushf in pushf mov sbb add scas int dec pop lds sti xor jmp ja,pn pop loopne mov mov imul std (bad) fdivp bound (bad) in sub fadds imul lods ljmp sahf mov add shrb (bad) enter push mov (bad) je mov fildll clc mov adc ret mov add hlt lret bound sti jl jmp in std mov inc aam adc xor jecxz jge (bad) fmul lret std push adc inc xor xchg pop (bad) and sbb pop dec aam and cmp mov jle adc lods mov jnp out xchg add add cltd sbb rcrl cmp xor int cmp and push nop jmp fwait movq daa scas push pop cld cmp adc cld (bad) insl sarb xchg into jle mov pop rorl stos pushf mov pop jns mov adc (bad) pushf push add gs test ret push xchg jno jo mov mov movl pop or in cmc xor sar std (bad) and (bad) fucomip dec and stos sub into lret (bad) and adc pop or pop pop ret pop lcall dec int mov mov cmp jbe push dec jl fsub mov push stos aad or popf out xchg pop sarb mov xchg pop mov sbbl add fimull ret bound subl push mov pusha aad cmp addr16 outsb pop hlt add pop js push leave jo and mov (bad) lods push lret es cmp out fisttp (bad) dec xor std (bad) iret inc mov adc je push ret inc dec dec or not std sbb add push scas cmp mov dec sub sbb xor inc sti (bad) jne mov or add inc mov xchg push lds mov sti or int3 mov std sbb inc mov sub xchg cmpsl lret or ret sbb enter mov mov push sub xchg or rep jecxz lds mov add aaa dec sub repz jle or jmp fsubp incb mov shr test aas mov pop pop mov std aas ret lods xchg movsl mov xchg movsl mov sub adc stos xchg cmp in mov nop sub sbb lods int3 mov dec inc or jge inc mov pop mov (bad) gs sarl stos adc add sarb xchg popf repnz mov jle (bad) out mov dec add arpl je rorl dec add sub cmp iret test sti dec xchg inc out pop jge nop dec daa mov inc jl (bad) or add sub hlt cmp lret jnp fwait adc adc ljmp cmpsl pop mov dec in xchg xchg lea imul xchg mov mov mov cmp xor dec lds sbb (bad) jbe xchg jnp popa add add sub push shll inc popf xor aad aad arpl scas ret pop jbe scas ljmp xchg mov int3 inc (bad) sub les or out cmc sar sbb mov ljmp pop adc (bad) sub js aaa and mov push leave ret dec loop cmp xchg pop (bad) cmp push daa xchg fldt cmp mov inc mov sub sarl ret push push mov ret out iret out out mov lret sub cmc lods xchg inc xchg iret cmp mov sti gs ja push sub mov pop dec inc push jmp stos test loopne aad jmp test (bad) sub mov xchg inc pop or (bad) pop sti movsb fisttp gs (bad) mov outsl inc mov scas mov push outsl jnp out mov mov in mov xchg stos jecxz mov cmpsl push pop mov sub xchg cltd cmp push std movsb (bad) cmp jns test ds sbb pop jl lret mov mov dec pop sbb pop xchg add and cmp mov xchg (bad) hlt pop mov aad add or imul stos pop dec (bad) cld outsl dec fbstp add roll xlat fistpll lods aam ret or xlat leave mov pop jl pop fldl add push xchg inc jmp jae out add nop cld je in std mov mov insl aaa cmp jp hlt pop scas and jnp pop mov pop jl jp jnp (bad) adc sub out mov mov enter lret jo enter xchg stos jge or mov insl xorb incl mov fs ret pop inc xor pushf mov xor enter mov std and sbb cmc rcll pop rol pop loop out xchg psubq push lds das push xchg fistpl sbb movsl mov push push dec jnp stos xchg scas mov popf mov or bnd cmc leave jmp jecxz inc lea ret xor das int mov inc mov mov push mov mov mov mov dec add je xchg popf in ret outsl jecxz (bad) xlat stos xchg push cmp cmp repz dec aas mov lahf (bad) std pop jp das push nop ret cmp cld das clc insb and xchg jns shrb pop aad out ja or push jne movaps and aaa or cmpsb push and out dec adc add mov mov and ret jge push outsl lock movsb and add jecxz cmp das inc and xchg outsb pop pop or ds cld sbb iret (bad) fstpt inc in jne mov dec dec iret sbb lret mov subl lret lahf xchg lahf and int3 push cmpsl sbb mov cmpsb fidivr int3 jnp pop fwait mov and xchg add std stos lods jge pop pop cltd cmp xchg mov sbb mov inc ficompl enter fcomps call leave test out loope aas jae jecxz mov inc lahf adc push cmp (bad) leave popf outsl mov loop mov leave lods jno aaa add adc lahf pop lea jle push push rolb ret pop mov data16 mov xchg mov lea sti xchg add lods push aaa (bad) call ret lea add jge add xchg lock mov shr (bad) push jmp lret mov in aas lret mov or mov lock std push cmp add cltd js xchg sub cmpsl sbb mov gs fs cmpsb mov rclb shl repnz outsl adc pop or pop fucomp ret arpl add push add ret rolb pop bound (bad) add inc scas pushf jp rclb mov rorb push and incb pop loope das pop lock jnp pop sarb bound popw jg data16 ret xchg iret xchg mov inc cmp xchg shll mov test or inc jge lahf sub bound xor pushf push xor das loope pushf sub sti mov pusha (bad) adc cs inc fdivrs (bad) jne or pushf mov rolb xchg test out iret (bad) decb jbe mov jge pusha adc sarb insl movsb pushf leave rolb push inc cld mov and (bad) test inc vpshuflw insl shrl adc add push lock push add add cltd mov push bound ret sbb lock (bad) test loope push (bad) xchg jno jl cmp add in scas ds stos xchg jecxz (bad) lds fistpl add add cmp addl pop inc in loopne je xor call lock sub lret fsubl and pop std lds scas push mov dec cmp (bad) xor bound cmp frstor out ret hlt fnop dec pop popa push (bad) mov add jecxz pop std push (bad) add cmc lret and leave fst mov ljmp iret xchg jb mov pop std pop or stos push mov sbb cmp mov js,pn scas jns nop (bad) test jl or jo fsubrl or push ja xchg cmp pop int adc mov or cmp add jnp mov fbstp inc cmp mov loop inc xchg sbb jnp in mov cmovle pop fcmovnbe xor lock clc jle inc lods jmp sbb in pop loop (bad) dec cmc jnp add cmp insb test subl pusha daa pop dec pop mov mov cmc xor stos cmpsb not dec in xchg stc or je sub aaa push mov dec mov jp push xor pushf mov gs mov sbb push es mov testb mov mov push lahf mov cld mov mov aam aam or mov cmp iret loope pushf and dec cmp notb popf mov cld pop (bad) je mov aam push (bad) cmp xchg jge or xor pusha mov popa or test and aam mov dec in mov dec mov pusha sti xchg dec dec jp imul xchg sbb inc pop pop fwait cmp dec and repz xlat (bad) adcl mov cmpsl push enter cmp stc ficomp jno pushf sbb and and nop mov dec adc loope dec dec negb das or repnz daa cmp fldenv jp fiadd shl jnp adc jo xor ja (bad) jne sbb popa xchg or jnp sbb pop sbb or sub mov fcomip std jg (bad) sub loope (bad) mov pop and ja sub xchg gs add ret rcrb cmpsb lock jae sbb inc stos push gs int sub push ljmp mov lds sub jle inc scas stos add (bad) int imul aam inc out and pop sub xchg sbb (bad) fcmovnbe inc popf mov repnz test loop mov test (bad) sbb fsubrl ss mov fist dec dec popa and mov fisttpll daa addl cmp lods adc dec fild shrl xor jl test shr xchg cmp pop lock push cs enter into sarb loop mov call mov pop imul lret and pop enter loop cld cs js push std fsubl orl test lds std xchg pop pusha sub or (bad) xchg add jo (bad) mov jge dec or push dec in scas sbb fs arpl pop (bad) xlat stos jbe dec push mov mov mov loopne movsbl xchg (bad) xchg scas repz leave std and sarb sub lcall popf fldt mov (bad) mov xorl cmp mov or xchg cmp sub sahf sbb or out and in push or adc lahf or fistp add test cmp ret ret hlt jl outsl outsb std push pop lods mov jno inc add inc cmpsb int3 lods fstpt adc rcrb decl in cmpsl dec adc sbb xchg or or add mov imul cmp lahf daa xor notl jb mov insl jge cs out pop push add lods dec es js lret test jnp daa sub daa in cmpl imul or cmp and mov and insl shr inc fwait push ret mov add or add cs jl or repz inc pop fmull pop mov mov jae lcall xchg mov sti sub fcoms call dec mov fwait ret fistl or cmpl or aas adc fnstsw pop out xchg xor push into mov int3 movsl cmp mov adc and je lea test jmp test mov cwtl pop jmp mov push push sti scas pop jne or pop enter sub pusha mov rol sbb leave data16 scas jg mov or pushf pop adcb lahf pop insb iret jnp cmpsl ret cld fldcw sub int3 mov mov sbb fwait shrb jp add mov sbb jecxz push sbb cmp mov sub lahf imul adc arpl ficomp out mov sbb mov jp pusha jl repnz movsb cs xchg mov jg jnp (bad) sub mov xlat mov outsl scas fildll or push xor or aaa cmp pusha dec xchg jecxz and add inc jo std jecxz lret sbb push push or and mov add in sub jge xchg test fstpl jle cmp mov movsl xlat addl jnp dec mov mov in jb sub rcll (bad) mov jle xchg lods sbb cmp and daa add pop popa pop lds push leave lea push data16 mov jmp mov sarl sbb dec fwait adc cmp cmp test movsb aam das pop leave repz mov ret push pop or std subl inc adc push jno adc mov jnp and lret push add repnz (bad) mov aaa xor test out xorb jo aad lea das insb mov push stos mov (bad) xchg in add sahf mov loopne sbb mov and add mov xchg lahf fucom push add (bad) lret mov insl mov mov jmp and int xchg sub sub int xor addr16 sub cmp aam and or cwtl adc gs jge ficoml clc bound mov jp sahf cwtl repz fsubrs rcrb loopne cmp fimull roll ret (bad) (bad) int mov rol mov add mov pop ret lock and scas or xchg ss push mov jbe (bad) dec jp xlat adc sbb popf jp sarb (bad) int cmp jmp ret nop nop mov cs mov das insl in push hlt repnz call jnp xor js sbb int adc enter dec sti jne add stos or stos push inc jl jne mov sbb lods scas loop,pn mov jb mov jmp and movsl sbb repnz je das pushf xchg sahf mov hlt xor ret addb (bad) sti ss jno cmp jmp sub testl dec mov push xchg jecxz add push dec push sahf cmpsb push iret xchg or (bad) cmpsb mov scas lahf jle or aam inc jg push std rorl mov or fwait test stc sbb and out fidivl repz aas ret dec insl mov add mov cmp adc dec sbb js int iret lea add or jbe outsb in iret and loopne pop cmp in jmp mov adc and into lock adc (bad) stc pop cmp lret mov scas mov jl jg insb int xchg cmc cs (bad) aam or outsl or push mov xor and inc cmp inc or movsl adc cs xchg jmp push and sbb inc loopne test pop cmpl les lds jb cmpl cmc mov add or test lea jge mov cltd jbe pop cmp leave test mov cli loopne sub lret inc ljmp test lret sbb into xor outsl je hlt mov jge (bad) cmp add or cmp or cmp add dec jne jmp cmp shll jnp les mov xlat movsl mov cmp jo push aad lods pusha push (bad) or jnp and das mov adc sub pop inc lock outsl fisttpll adc out out push lret inc mov test mov xlat pushf jecxz (bad) fldt mov (bad) dec imul into lahf cmpsb fwait movsb add pushf (bad) pusha int3 lods rorb mov sarb adc jmp addr16 lods lea loope sbb ljmp or jmp sbb push sahf adc shrb std popf fmull jg pop or fmul loopne pushf sbb and (bad) test lea cld push mov bndstx sbb dec lret (bad) lock dec loop dec lret jno decl lar ss popa sti fcoml fwait mov dec mov cld or mov cwtl dec mov mov daa ror loopne pop ret mov lahf lock imul pop insb loop cs adc shrb cmpsb mov mov insl scas adc jmp fwait inc shr repnz push pop sar cmp (bad) sti cld dec dec jge ljmp imul jge ret xor cmp (bad) cmc je jno fwait mov test test or or push rolb aas nop xor loopne dec sahf call dec sti jl andl ret stc movsl or lds xchg and mov jo adc int3 jl mov (bad) sub dec lcall test (bad) jle xor mov pop or push mov mov arpl inc psubq sub jae (bad) ss pop dec pop jno lods (bad) or pushf dec sbb push punpckhbw jne mov jae adc iret inc scas sbb data16 std jle dec ret dec xchg fdivrl (bad) testb test lret sub ds call dec add mov ds stos pop mov sbb mov addr16 dec negb add bound push jl movsl mov mov in xor out jb jg lods sbb pop call dec std xor dec ljmp and (bad) add sbb pop int fisttpll pushf adc sbb std pushf push scas sub push fsub nop cmp in sti call fbstp scas mul xor cmpsb lods mov imul mov data16 rolb inc leave les jae jl (bad) dec scas sbb insl popf cmp lahf push mov inc sub sbb or cs pop jo mov fstpt pushf pop faddl xlat mov lea xor cmp hlt dec jns iret add sub in and jg inc lock push or pushf in (bad) or mov rcll add lahf and notb jnp mov (bad) (bad) loopne dec cli aad mov imul out or mov fbld jp add das dec mov stc out aaa add xchg xor jp mov dec push pop fsubs inc xchg or stos daa fdivrl or push cmp pushf (bad) cmovns pop jbe xchg pusha aas movsl cmp add fsubrl arpl mov in (bad) call cmp and push into into test mov clc sbb inc incb cs out int inc ljmp xchg int fstps add mov loopne sbb inc (bad) je js test xchg jb test dec add mov jnp mov sub mov sbb dec inc stc xchg into lret sbb mov mov or enter dec jge int fdivr fist adc frstor aas in inc fdivl test xlat add add cmp or pushf rolb mov lret mov sarl jmp aas mov sar adc lods sarb pop xchg mov lret cli cs je mov sub adc sbb sub rcll mov je sti mov sti lret sbb xchg cmp inc jp adc and mov xchg jecxz mov or jmp lcall mov dec push xchg jmp dec push icebp sbb cmp in jae or mov lds ljmp (bad) cmp div in in jle mov (bad) jmp (bad) idivl (bad) sti pop int inc fldt fimul loope mov sbb sub fldt scas sbb cmp fwait ret nop pop in xchg int stos xor xchg pushf loop adc int jae je mov je (bad) sbb cmp cli lods jg or ret push pushf shlb inc mov pop jmp movsb pop in enter cmp movsb aam ret push cmovl push jg ljmp xchg cmp pop inc mov sbb sbb lock out imul pop cltd jnp ret pop pop dec arpl xchg gs push std aad jp dec or cmp fs dec dec test shrb mov popa shlb and lahf stos or lret data16 lock loopne into inc icebp or pop iret sbb int fcomps (bad) pop lret xchg cmc pop push lret inc pop insb fcmove sbb addb (bad) bound push sarb out mov popf push out mov sbb je mov mov mov scas push or sub scas dec lret jl mov push pop cwtl into test push pushl cmp jne or adc cld sub dec nop pop or into ja cmp dec rcll repnz push or inc test mov lea (bad) nop mov cs push inc popa mov and pop sbb mov gs aad jne test lock pop push ljmp ss push out adc mov cwtl mov jo daa pop mov (bad) jae mov ficom adc cmc inc pop rcll add rcl push das pshufw lods sbb lods sub ljmp jmp jb mov jle cmp mov dec cmp xchg pushf or jnp ljmp pop outsb int3 jnp in mov aaa aad lret push push sub inc cmp lcall lret loop jmp mov push ds xor jnp xor std push fisubl loope sahf sarb pusha mov jmp loope popa cmp inc sub pop fiaddl sub and roll ljmp icebp outsl aam jp nop adc and sbbl lret (bad) mov add (bad) sub jle fisubr outsb sbb std mov movsl add test int jno pop ficomp pushf dec es xchg mov leave pushf into std xchg lock imull push push jge mov or faddl pop sbb jno lcall jnp sub leave outsb pusha insl push ljmp in popf (bad) mov decb imul movsb sbb lret imul (bad) push or rcll mov and les xorl sahf lret hlt jp andb repz jmp sahf das into sbb in mov std sbb stc inc mov in lret invd pop inc sbb mov (bad) lcall enter daa xchg xor (bad) sahf mov leave pop mov inc mov pop mov fstps je sub (bad) dec popf lret mov jle jle pop (bad) adc xchg jmp push rorl add cld xchg nop (bad) or and adc mov or xor mov ret sar mov stos leave jge dec lods cmp int cld inc hlt mov jl pop xchg sar decl add jo fsts les movsl or out mov sahf xchg xor cmp push pushf fs jle or scas xor mov add in xchg xor test pop test ja aam xchg mov mov test imul neg mov cmp xchg scas jnp fwait and lret test lods cmp sub (bad) ss into cmp xor jl cld push loope dec push xor lods in into mov adc stos dec inc push mov cmp adc mov mov cmp ljmp bound dec fucom xor jl dec mov cmp pushf mov adc adc adc mov push inc pop lcall (bad) mov int fisubl jge fistpl pop jbe lock mov push stos fisubr xchg push pop xor cltd push clc and jecxz add ret adc ljmp mov pop aas cmpsb es mov movsb mov mov pop scas dec jle jno rcrb and (bad) mov mov rclb xor cmpsb sti lahf jl inc imul ss sbb decl push jno xor adc repnz imul inc jg lahf cmp bound out fsubl cli adc inc nop cmp inc mov mov mov add or (bad) add jl add mov cmpsb adc rcrb cmc or (bad) out push cmp dec xor lahf nop sub scas cmp (bad) leave inc (bad) shrl xchg popf dec sbbl jmp mov cmp pop jecxz sub fwait cli or and sbb adc nop hlt (bad) cld nop (bad) aad cltd es mov cltd repnz mov sub sbb xchg shll mov stos or int lret pop pop lods sbb imul or loop fadds cmp scas adc pop gs xchg rol inc dec lret xchg xchg vmovd cld jnp sub or mov mov cmp jl stos lds add (bad) mov icebp fnop repz pop xlat mov add or or add jecxz inc adc xchg out push mov ljmp ret and ret xchg adc jns daa lcall pop (bad) mov inc in mov push (bad) repz push sbb push push cmc add pop clc imul movl adc mov sub cmpsb inc test pop (bad) adc dec xchg (bad) dec or cld xlat fsubr mov sti ret push cltd jg jp xor in test (bad) xlat inc testb or or sbbb test xchg jae dec cmp aad cmpsl inc rolb test sub pop xchg stc sti out stos or mov outsl dec xchg mov pop jmp popa sbb rcrb out into push mov jg xor (bad) pop fistpll inc fistp mov pop xor add nop rcrl in xlat scas nop cmp add jnp mov ss out repz and pushf (bad) pop ds sar pop jge xor data16 addr16 mov js pushf sbb adc (bad) outsl test loopne dec aam iret icebp nop pop sahf repz pop pop mov out pop mov mov ret ss js push cmp scas cld add stc jge (bad) mov mov scas xchg jnp mov sbb or cwtl cmp sub subl mov fdivrs pop add jmp pop cs repnz add mov loop pop or out dec int push test mov lock jne nop cmp jnp pushf cld int jnp sub cld std test aas addl andb jb rorb dec cld mov pop fdivr xchg mov insl mov int3 sub (bad) mov and inc mov hlt xor push pop jnp (bad) xchg dec cwtl stos jmp cwtl popa and rorl push ljmp fwait popa negl mov cmpsl int xor mull dec or scas dec dec inc mov sarl pop push cld inc outsb orl inc or movl mov jne pushf (bad) out idiv push inc add aad popf fstpl add cmpsl (bad) in subl sbb inc jle mov dec popf or mov pushf (bad) mov arpl pop push jae mov in call call call das repnz repz or sbb lds (bad) jle sub lock pop cmp sub pop shrb cld cmp xchg test (bad) scas mov leave dec lcall outsl loope ret andl scas int test scas push or orl lea mov lock mov jl (bad) (bad) jns daa inc sbb and inc xchg imul stos sbb scas shrb or mov pushf ret mov cmp xchg mov ret in call call (bad) add jl test or inc mov and mov lahf inc jns dec das cmp outsb ret sub lret mov cli push sbb sub ja xor sub mov or inc decb mov lahf (bad) sbb or shr outsb repnz lea and adc mov sbb mov inc jnp out les dec xor cmp enter insl adc inc add mov lcall mov mov lret lods adc aad fiadd test sub test dec mov mov dec (bad) cmp cmp lea pop xchg xchg mov mov cld jnp (bad) das les sub mov push mov (bad) jp outsb daa mov movl add leave sti or sub push mov mov jle mov sbb imul mov sbb inc adc neg cmp aad rcrl adcl mov pusha pop or sbb add adc lahf cmp lret rorl xchg xor pop sbb cltd jne push jg dec pusha or or mov xor mov shr push jne rcrl mov xchg fs call lods pop sbb outsb lds ljmp cmp dec pop lods leave cmp lret push out mov cld (bad) int add movb dec test and inc mov jg pop and cmp fcomps sub cmp sbb movntq and jle pop nop outsb mov (bad) add insl das push clc mov mov sub ret std aas iret and dec or scas fisub loopne sar pusha adc call es jl xor stos xchg lret cmpsl das fdivl add test cmp cli cmpsl cmp sti cld pushf shl ret (bad) or pop jbe jecxz mov sarb inc sbb mov or in jno jge cld mov xor test cmp and or cs push std mov xchg pop in (bad) jne lock sub fidivr movsb sub xor push mov cmp mov mov push das pop mov jg push xchg in bound dec imul or in fdivr mov rorl dec and cwtl les push sbb xchg mov movsb pop sti mov lock mov pop sub lea mov mov cmp in jb or push xchg xor jnp mov shrb add imul dec imul dec inc xor aaa aaa cmp sub sbb push std mov pop mov subl outsl jnp adc and repnz stos repnz pushf lock push (bad) jge xchg pop or pop dec jg dec pop loopne adc and and mov push cmp dec jmp stos lret lea push cmp push pop push jb jl jge popf ljmp or in mov clc pop xor std and mov fldt out push xchg jne lahf sbb movsl mov cmp or fist (bad) fucom adc iret cmp push or push sbb out adc xchg push pop push jg pop out sbb adc jle dec xchg jnp andb xchg sub xchg push mov jb pusha push in sbb sbb jl xchg sub (bad) xor pusha mov jle sbb (bad) dec cmpsb sbb shlb and pop add push test cs cmp repnz jnp or or push add mov mov mov lea and lock fcomip sbb pusha adc sti sahf mov mov repz mov sbb lret mov pop sub jmp jmp stos es test or jg mov pop iret cmp xchg cmp jle xchg sbb decl or mov sbb adc out iret adc jbe sbb outsl mov xchg or add rorb and or popf mov adc xchg xchg pushf or lods push lahf jp std dec lds aas pop popa into and dec xchg pop mov lahf xor lods and lahf (bad) sbb nop subl mov inc pushf pushf sbb out sub fdivl (bad) jl mov pop jp jle pop out sub or cmp mov push mov (bad) lret (bad) pusha jo cmpl or fimul cltd in cltd leave lcall int3 dec adc jnp cmp cwtl inc cmpsb push and mov pushf and pop dec dec add shrb inc stos enter sarb loopne,pt inc and add lcall add dec (bad) popa or and mov int sbb insb sarl fldcw add sbb fnop push and bound mov push dec jg xchg imul jne cmp stos fdivrl int cwtl jne push std cwtl xchg rcrl add shrl das mov sti xchg jb lret nop (bad) add add inc push or sbb cmp inc (bad) call lret cmp in stos test ret add movsb mov js popf jl ret adc mov dec push dec pop sti and hlt cmp in xor lock mov adc pop cli je mov xchg mov sub sub (bad) rcr cmpl jo jle mov cmp jp xchg fstl popf data16 test repnz aas loope out xchg lods xchg js xchg test and ljmp mov pop mov imul insb mov shr loopne or dec int3 adc ret cli repnz call movsl jle sub jg add fidivrl cmp cmp sbb pop shrl lods sahf mov std or mov test (bad) mov mov gs cli sbb inc test out lods (bad) jmp adc pusha dec mov into cwtl push (bad) aad xchg add hlt sbb std icebp xchg cmpsl fisttpl ljmp nop mov std sub push testl xchg jp lret roll or lcall push shrb aas cwtl or mov pop in testb shrl sub inc xor stos popa add or cmp test popa push push mov mov fdivl add test mov cld cld fistpll xor (bad) hlt sub jl fwait icebp and mov stos and in into mov fmull lahf cmp in pop xor mov rcrb (bad) adc adc sub lods lods mov test mov int mov adc pushf movsb sahf jmp inc call pop dec mov mov cmp sbb stos js jnp fwait cmp jo xchg pop fdivr shr jnp std pop sbb cmp sbb cmpsl xor adc ret pop dec adc jecxz,pn in iret cmp pop push inc xor dec add adc xorl jnp jno mov jl sahf into scas loopne pop lahf jno sti cmp push sbb mov lds movq xchg jle cmp lea jo sub and lea fisubrl lods sbb xchg scas cmp mov shrl push in repz out mov jge scas xchg jmp ret mov sub shld sbb faddl add fcmove testb mov sbb mov jnp sahf mov push fisttpl loop outsl mov data16 ljmp aam cld jno xchg or lahf js aad jbe dec loopne lea mov xor sub jnp mov out sbb lret dec pop fwait movsb fistpll cld cmp inc mov fmull loop aam in dec ljmp sbb popf lea fisttp dec sbb lcall mov repnz or aad test dec xor fcmove sarl fcmovnb mov sbb sahf mov repnz or lds icebp and fadd sahf or or sbb fsubl testb dec sub imul std pop mov push push cmpsl mov jb or jmp sub out enter pop push jo mov sbb insb jecxz sbb jmp adc stos fldt xchg bound mov inc sub or push cmpsb test clc pop (bad) mov xor adc jecxz mov ret std rolb adc stos idivb cmp lret jbe or test jo push lods inc push dec pop mov cmp ljmp lret sub jbe and inc xor and mov (bad) jnp rorl sti in mov not stos imul jle mov jl fisttp mov cmpsl xor jle lods dec or jnp dec shll test leave cmp push adc hlt fbstp (bad) sbb adc test pop pop sub fnop jg popf (bad) lods sbb pop int add adc pop mov cmc mov mov jnp xor mov and mov or fcoml push pop test dec ret mov test and adc mov or ljmp xchg sahf jge sub add jp test std cmp inc push sahf mov mov shl sub xchg test mov ret mov jecxz mov ret imul ds xchg inc jge fsubrl pushf (bad) lods mov dec mov out push rol sbb cmp adc pop int shll out dec xor sti xchg inc loope lea das sti lret sub sbb loope test sti in and cs pop sbb jp mov adc push sti xchg bound xchg inc (bad) out das cs mov add dec sbb (bad) in xchg sahf jg popf inc lods or insl out or cmp jp outsl mov add stos repz ficompl and cmpsb push insl jnp clc jne fnstsw mov loope sub int xor (bad) pushl cmp or mov fldt pop sub push and push mov repz dec adc (bad) and test mov jbe lret push mov das js into pop mov dec imul hlt pop push decl dec and mov test lock std rcrl mov imul push leave cmp sbb jmp movsb movsl outsl int inc push mov xchg adc aas lods aas movsb pushf data16 fwait mov inc data16 pop loopne sti inc cmp call in sub jo insb popl jbe (bad) jge and adc pusha daa dec movl popa (bad) sub js shl insb add jmp (bad) lret add jns lods cwtl adc aam xchg and mov in orb pusha cltd and loopne,pn mov sti or rorl (bad) cwtl inc mov pop pop mov jmp mov adc rorb cmp xor dec mov lahf cld cld push sub das adc rcrb jmp mov mov mov sub fisubrl adc lea stos push or popf (bad) ds mov lock mov std jne and dec popf inc jle xchg xchg pushf rclb mov xor jbe out mov mov push pop out into popf and sti (bad) insl inc cmp das or stos enter test or push sub inc add mov inc xor sti xor pop add add jns (bad) xor movups (bad) mov cmova lods pop test cld mov rolb sub mov dec lcall sbb mov add out xchg pop ret cmp (bad) in or xor sbbl idivb or (bad) add adc (bad) das cmpsb jle jns or mov out ret mov in loopne adc xchg movsb and aaa cmp sub in cmp add jl jne lods xchg imul (bad) loopne (bad) popf and pop fwait sub cmpsb dec lea jmp movb and cmp add (bad) xchg and sti xchg push (bad) data16 pusha or push into and in bound cmpl lahf sbb lods out testb ret and fwait inc push add les movsl mov in shlb pop out lock adc inc in or movsb and add popa push test outsb test xchg add mov imulb (bad) push fisttp sahf imul inc inc xchg inc popf ret bound or lcall jo test lahf scas dec dec out add add add test dec test lea enter shl loope imul mov pushf cmp jne test inc jl orb mov test psubd mov push xchg inc (bad) sub jnp out (bad) movsb shr sub lcall xor int mov fcoml or or inc aas xchg ret loop fwait lret dec iret or movsb cwtl dec cld pop test ret jnp pop je sbb push das (bad) adc dec (bad) aaa pop mov pop push dec cmp or stc in mov cmp pop out xor insl insb sti or or or jno cld sub jl cmp (bad) mov xchg addr16 fdivrl (bad) xchg out (bad) sbb push mov dec and xchg stos sub shrb xor lock jbe jmp jnp and add mov pop and and dec mov (bad) and data16 add jle and mov in xchg in sahf lock insl add adc jae lahf inc lods cli xchg movsl (bad) lret mov cmp (bad) rcrb pusha mov xchg and jbe xchg pop push mov inc (bad) adc xchg add adc adc sub mov mov cmpsb dec push mov xchg sbb cltd in loop loope mov push xor dec sub iret sbb mov jnp jns mov sbb or adc outsl das jecxz call sbb ljmp add or add call pop push jae sti ret cmpsb sti jmp pop rclb sbb xchg sub jge sarl stos adc rorb adc pop push imul out fsubrl in pop (bad) cwtl inc iret pop pop imul cwtl push clc loop ljmp aas mov mov mov pop (bad) and ja dec jnp fcmove out pop bound adc push xorl in (bad) cmp sar addr16 cld imul daa fwait arpl and test addr16 std lock in adc (bad) fisttpl std add xchg push bound sti sub mov or mov add pop rcrb push add cltd mov stos xor pop mov dec rolb daa lahf adc aas stos push and mov daa int3 add or aas add or mov nop cs mov jge out pop sbb inc loop rorb (bad) pusha (bad) lock or push insb test mov mov dec sti mov lret or rcll cmp xor sbb fcoml movsb inc imul jmp pop add fmull mov lret jo ret mov or popf push mov sub mov fucomi xchg mov cmp push sarl adc sub push pushf pop lea aaa push pop pop gs imul dec je out sbb stos jo mov pusha pushf jg idivb lret lea jnp add mov scas repz sahf push pop xor outsl leave mov pop (bad) loopne mov jnp (bad) fisttpl lret bound dec jb mov mov xchg stos nop popf adc leave and sbb adc cltd imul aam sahf in aas and xor jb push xchg or dec or jg imul fistpll sbb int3 jnp and dec addr16 sub adc sbb jp test (bad) cmp std or push inc mov outsb loopne push or popf ret and fistpl adc sbb jae jno ss pop lea pushf sbb cmp and cmpsl xchg adc push fistpll adc cld push sbb lea enter jle ss call pop mov cmp xor cmp jnp jl cmp adc xchg int push imul cmp movsb mov xchg in sub xor (bad) movsb dec shl daa or das mov jp add aas cltd fadds push sub dec aad (bad) out imul pop imul scas jle mov out mov int3 sbb call mov and sbb pusha shlb mov jle or adc popf nop (bad) xchg loopne xchg dec fldenv push imul mov pusha add and ret iret scas jmp ja mov sarl xor jmp dec xlat or mov mov ret (bad) int dec mov jle,pt or jecxz mov cs mov dec xchg xor adc repz cmp ret and mov adc test into ds insl sbb cmp (bad) outsl sbb leave pop frstor pushf add dec push in pop fstpl pop pushf cmc push nop sbb insl mov jle insl std rolb mov iret push cs fs mov mov das inc out popf or into rcrl xlat sbb xchg mov stos outsb mov jle push iret mov xor ja jbe push inc scas jle jge cmp sti xor loopne add sbb push fimull cmp es stc icebp xchg mov shlb mov pop hlt xlat sbb dec xchg or push daa loopne adc sbb ror lds out in popa jbe das aam jo and in lret sub jge ret sbb mov lods jo fstps test pushf leave jbe stos test push or push cmp mov mull and mov jmp mov cltd fucomip and iret nop lret or cmp leave fildl push cmp (bad) mov pushf add clc mov mov fcoml or and adc push pusha jge sahf or mov sahf and ds dec iret add lods sti iret insb notl shr mov pushf (bad) jl std mov pusha push xchg mov (bad) data16 jbe adc xchg dec mov out ret imul sbb rorl sub loopne scas (bad) loope add mov js and bndstx out cs or mov dec xchg mov cmc stos daa loop lret add and idiv sbb cmpsl jmp lret (bad) cld sbb inc out mov cld sbb sti pop mov dec mov add jb sub mov dec xchg push jge fwait (bad) repnz test cmp in or inc decb ret or jnp in mov mov or lret and test mov adc (bad) mov fwait and out aas push (bad) (bad) gs aad sbb sbb outsl mov test pop ds push cs popf push lret ja inc testb mov sub cmp mov push and push test mov jmp cmpsl cmp movsl lods lahf scas repz xor jge aas xchg cmp mov das sub push nop jp pop push outsb dec xchg jae stos cmpsl ja jge jo stos mov pop mov shrl dec cmp push iret dec clc stos loop mov push add mov addr16 es inc pop test sti jecxz out andb stos lea jge dec xor or cwtl mulb add inc loopne rolb jmp xchg jg rclb mov cmp push cwtl sbb pop or dec mov and dec (bad) mov sti loop pop add lret bound cli (bad) pop add mov dec cmpsb scas push mov negb shlb into cmp jns adc dec xor (bad) in ljmp ja loopne aaa push jge fisubr push cld ret fildl sub mov mov lock add gs or jle int scas sub sub or pusha imul cmp push imul fs sbb aas addr16 jp sbb cmpsl dec repz mov mov sarl shll stos fs (bad) jg push aaa int cmp call sub div mov cmp mov jle std loop (bad) ficomp fdivrl mov mov mov lret rcrb and lahf or and cmp adc lea test fbld cmp out xchg sti jle cmp jnp sbbl mov rorb add xor stos push aas sbb in ret mov sub inc gs addr16 fistpl mov out loopne int pop sub push dec adc or shr cmp pop push std xor push (bad) sbb dec rcrb imul jnp dec lds mov cmpsb in sbb aad stos jmp mov push scas cmpsb pushf jne add out mov movsb lock mov out jl mov hlt jo inc mov loopne out or test imul add ret lret rorb outsb xchg mov stos std rcrl jl xor sub sar mov data16 repnz sub sub stos cmp das cmp jp and xchg inc lods roll pushf out cwtl lock pop cmc adc mov sbb jns into mov mov cmp std popf mov mov inc lcall mov or mov lret shrl cmpl fwait ret jl xchg push cmp ret and iret lahf mov maxps (bad) jae inc or and inc aas adc dec xchg jl adc xchg mov repnz outsl adc sbb cmp pushaw push ret ret pushf and or pop adc dec jns pushf aas lea loopne (bad) push sbbl (bad) bound cmp lahf int jb sbb dec ret dec or jmp mov cmpsb sub shrb ss jbe sub subl jo not call jp leave sub fisttpll fnstenv xchg js mov cmp andb inc sbb popf push sub adc pushf mov mov inc xchg cld int3 sub out stos daa mov cs push in push cmp xor mov faddl push mov dec jl stos js cs (bad) mov jecxz sahf or (bad) mov xor pusha dec addl xchg ret jnp dec xchg movsl ret jnp dec lahf mov rorl lea std jecxz jnp dec movsb add xchg and xor pop jo adc and ffreep fwait adc or popf insb adc mov mov pop sbb inc out lea sahf jl cmpsl lcall es sub push mov jno xor lods ret (bad) ljmp push fildl je dec jnp pop jb cmpsb loopne jg (bad) cwtl loop jmp mov jl,pt jb pop sbb repnz adc mov cmp cmp adc jg imul and cmp lea mov ret outsb test std mov (bad) out (bad) daa into cmp nop jnp lahf fwait (bad) insb ret cltd adc stos je (bad) outsb insb les cs jge fldt ret aam inc pop inc sahf adc stos pop adc rorl mov dec cmp pop (bad) fisttpl push (bad) testb jle data16 xor das xchg fsubrl mov xchg sbb xor cld xchg pop or mov jo pop ds test fdivrs cwtl hlt cltd popa mov dec sbb mov jecxz sub inc jg jmp jl stos push mov pusha imul and rcll lea pop sarb test mov dec xchg out push lret sbb mov jle sub or sahf sbb rorb sub scas fmul cmp dec mov (bad) push sbb lret insb adc jle sub mov cmpb push jl or popa pushf leave rolb or xor jp hlt sar jecxz in mov lret std sahf stos lcallw push aad imull iret (bad) fisttp scas cmp pushl hlt hlt push std popa insb dec (bad) add popf push leave mov or sti js pop jle cld imul cmpb cmp mov pop scas adc iret cmpsb jne push xchg mov sub sbb gs xchg mov mov loopne mov (bad) dec mov sub in imul jae push popa jle push aas mov lods xchg rclb mov and mov mov lds fsubrs cmp pop addl sub pop or push lret cmp fwait out sbb nop cmp rcll lds jg shl push pop ret ret lcall jmp stos sub xor test (bad) (bad) sti push xchg sub cmp sahf imul shrl test and pop add aaa (bad) push sbbl sbb movsl (bad) pushf cs lds iret in mov fs mov ds xchg dec mull jle or lret ljmp adcl sub ss push mov fld pop dec or jo scas lahf mov decl pusha xor push sub or jge sub fmul (bad) mov and leave dec sub pop popf jl push jecxz or mov (bad) push ja (bad) ja (bad) std sbb sub adc xor push loopne lods sub and lret test (bad) push pusha add cmp cld sti aad inc cmpsb mov dec push loopne (bad) xor les mov adc add mov mov xchg mov sti addb xor test xchg mov xchg pop mov xchg pop sub call mov mov push pop lds or stos add ljmp and test sub sbb lahf cmp pop fistl fwait sti and add fstps mov scas cs inc (bad) hlt xchg mov mov cs jp mov mov pop and std add mov mov in das int xchg aam sub inc test push (bad) and mov xchg mov popf fldcw fildl insl aas js in sti cli cmp dec mov hlt jp lds sbb and sub or mov lds xor and jle out mov cmc pusha (bad) (bad) mov popa scas dec in cld scas sbb sbb xchg mov mov loop (bad) jg insl pop pop mov sahf add jbe sbb jl stos cwtl sbb add mov sub adc mov push in call adc dec fldenv or lret and pop fnstsw loope xchg decb call mov and add jle mov mov dec xor mov add sti jne adc dec cmpsb scas xchg adc add adc lret mov fwait mov inc enter cmpl dec jl jo and ret jl jge je xchg push mov iret (bad) popf mov xchg inc sti or jmp mov (bad) decb lea sti roll push push sbb movntq push popf mov sahf adc sbb test push xchg cmp sub sub int or pop daa andb cld pop and aaa iret stos jge dec pop dec imul call cmp xlat jmp pop mov dec into bswap mov pop enter call pop fistl sahf xchg (bad) mov loopne cmc lret in dec setae mov mov jne jnp (bad) jbe ja rcl dec add mov push scas sub cld (bad) iret cmp daa imul test cmp movsb loope test mov icebp sti in adc icebp in or jle sbbl adc xchg mov inc (bad) je scas mov xchg push xchg pusha mov faddl pop ja iret loopne xchg jnp shl push pusha (bad) je sub test push es mov stos dec mov or jae ret push ss jno adc mov iret cmp cmp sahf mov mov and (bad) cmpsb insl clc or xchg pusha shrb cmp pop sti cld lret fist int or xchg clc or cmc mov subl cld pushf sub dec loopne movsb or out mov lds xor sar test sub jnp mov xchg (bad) dec inc dec xor xchg jmp sub in cmp popf pop mov mov cld lcall inc and cli add sahf cmpxchg das or imul jp push xchg sti or cltd inc sbb inc ds jg aas in cli lahf pop outsb mov and roll pop in fdivrp popf test xchg shl push or and dec lds and (bad) enter mov jl std mov (bad) cmp scas lea and mov bound push sbb fsubrs mov or insl fwait cs lret jge push sub stos std adc inc dec sarb dec xor push cld cmp mov push jbe cwtl jo inc popf pop mov test push mov int repz ljmp sarb jg pop xchg dec es sub sub sahf and in adc stos sbb rcrb fldt fild cli push push sarb int3 pop cmp ret daa sbb push dec lret imul sbb mov pop cmp sbb ljmp jnp mov and fsubr adc (bad) lods mov mov shrb mov pop int out repnz xchg cmp (bad) adc outsl (bad) xchg or hlt dec adc loopne pop push jno flds mov fsubl cmp fisttp gs add mov xchg push stos xchg daa nop or rcl mov cmpsl and jge xor push and pop movsb xchg xor and stos notl loop or jl lret cs inc push out mov pusha pushf pop and mov xchg adc add xchg mov fst pusha jnp clc pop mov out iret bound rorl mov cli cmp decl fwait cmp inc mov mov dec fistp lcall sub push fistl das testl insl repnz (bad) mov popf pop nop jp cmp xchg sbb in lcall mov xchg push mov aaa ret xlat pop ror int3 mov fistpll std aaa ljmp sub in test stos xor mov sub shrb fdivrp adc jge out cmp std bound xchg jge adc out xchg leave xor sti push movsb pushf inc stos adc xchg addr16 sbb lods and faddl nop jmp dec (bad) and sti mov test mov jp sub call lret (bad) in mov in subb push popf ficoml sbb rclb sbb push dec dec adc mov cmp movsb mov negb aam (bad) xor test sahf cmp inc mov lock es pop mov xchg in jnp hlt xor dec shll int mov jle mov mov movsl mov lahf out addb cmp sbb rcrl sahf pop dec sub pop or sahf ja lea dec and mov sti push mov mov pop jge ret sbb fist arpl ljmp cmp shrb jl stos push sbb xchg sbbb pop paddsb xor sub sbb xchg (bad) (bad) shrb popf mov sbb dec pop jl inc sub nopl bnd mov sub mov mov pop sbbl cmp inc push dec fwait mov aam sahf shrb repz mov hlt idivl pop aad xchg rcr outsl push daa cs popa jg aam push pop add pop mov mov dec dec movsb mov ret dec jmp sub enter dec repnz sub fcmovnu in jl cmp adc loope fstpt ret ficomp mov mov stos xchg lret mov xor xchg pop ja cmp mov cmp ss lods lret adc in mov add adc aam xlat test stos inc std aaa lahf push cmp cltd push sbb push pop mov xchg ret mov jp aad loopne sub insl adc push mov fnstenv es leave mov cltd or (bad) cmp ljmp jmp mov xor inc adc ret jmp cmp fistpll pop dec test sbb mov jl sub (bad) xchg (bad) push lods dec sub mov lret jae mov popf mov lret gs inc jecxz inc (bad) dec (bad) cld mov dec fs insl mov mov push cmp test je pop dec stos sbb mov dec cltd cmpsb es mov or mov les jbe cmp xchg cmp sbb mov add adc pop pop scas int adc data16 test nop dec lret and fwait pushf mov jl das jb je mov dec imul pop sub mov xchg cmp sbb daa mov inc mov sti mov adc aam push and clc sbb lahf ret insb pop xchg mov jl int3 sarl or push sti (bad) xor sbb adc pop mov (bad) loopne cmp incl adc movsl cld sub sub mov gs sub jg lret cmove in std dec dec inc sbb rcr mov cmp lods cmp jbe les rorl ret and mov pop loopne test ljmp mov sub iret dec mov jnp lock repnz mov mov stc xor mov sarl pop (bad) lahf andl cmp add mov and iret (bad) fcmovnbe pop jne cmp fsubl cmp cmp inc push and add outsl jg scas lods int3 lods mov mov iret cmp dec sahf clc or or inc push xchg xchg or test sub lock pop test lods into push mov push dec push add mov cltd mov (bad) (bad) inc roll xchg dec push xchg xor inc and cmp fnstenv sub mov push mov movsl call xor or inc jmp cmp sbb add cld mov ret popf in lret mov inc addr16 jl cmpsb dec shlb (bad) (bad) mov cmp std push pop mov push xchg or xchg add idivl mov jb mov add cld (bad) sahf (bad) sarb mov jbe push pop int3 cmp loope xor cmp daa cltd aaa inc ret movl adc pushf mov ret aaa pushf (bad) xchg loope sbb lods arpl fldl mov addr16 mov cwtl lods aaa mov test sub cmpb into mov fnstsw dec in cwtl sbb mov ja pop loopne lret subb or hlt shrl ret es mov cmp loopne sub sub jae or bound int3 iret fwait add fsubrl add dec setno shrl cmp xchg sar ja mov stos cmp xor or ds adc iret cltd jl sti stos jecxz fwait fwait adc popf sti jl mov cmc pop mov add add inc xor inc (bad) jnp dec lret inc test mov adc pusha mov dec paddd aad jnp insb jg xchg push cmp mov or mov (bad) int3 push das testl je orl mov (bad) jns add es inc ss cltd sbb mov int xor fisttpl inc add cmp cmp push subl mov (bad) fcoml and std cltd jmp (bad) lods mov cmp jge jmp or jae insb jns outsl mov xchg sbb insb mov mov lret imul mov xchg es or ljmp mov cmp test test push dec sti jno mov popf incl mov jge mov add jnp cmpsl std cs jo push orb mov daa xchg lret or sub lret cmp and loopne mov fist mov int3 cs or int3 push call push sub (bad) and lahf adc aaa xchg loope sub jge xchg sbb jae int xor test fwait push xchg mov pushf mov addr16 push or cmp inc scas inc mov dec mov insb iret sub loope pushf insl push stos cmpsl mov sub adc adcb or add cmp test iret call mov adc jmp rolb fiaddl or pop mov adc and jns xchg jp pop xor stos jbe jp pop and ret shl xchg mov mov ljmp std sub lods jl je add outsl ficompl leave gs lds jb xchg pusha call cmp scas loope adc dec cwtl je jle cmp pop stos jb or jbe pusha sbb je int3 xor add (bad) mov push lods ret pop jnp push pushf inc pop cmp add xor xor push clc sub inc and mov repz jae mov out aas push cwtl sub call xchg push hlt loope dec imul sub movsb add xor push cmp xchg pushf jp stos mov sub push or and add dec scas in lds dec xor lret adc fwait sub sbb (bad) adc pop popa cmp mov in fistpll pop mov and dec sub int sub jnp push pushf sub cld mov pop std cmp adc aas jns fstl pushf lods fbld test fdivrs mov mov xor xchg enter mov mov imul cld adc imul movsl cmp cmp test pop lods and sub sub pop sbb out leave icebp pushf and imul push int aad jnp pushf or inc rorl dec mov xchg inc aad lcall cmp or test mov (bad) jo pop int and int3 xchg mov pop (bad) push (bad) je stos lods fs or pushf aam movsl inc add pop cld dec sub or aad jmp or mov dec pop (bad) ja or nop mov dec add jecxz ret das cmp mov stos jg jo push jge sarb xchg jl sbb jle push sbb shll xor xor iret inc cmpsb out int3 lahf cmp in sti (bad) or and push or mov rcr pop push loop aad or popa in inc or mov mov out add dec add popf pop stos or insb lods (bad) add fisttpl hlt lods lret scas adc loop ljmp dec push xchg push and aad (bad) xor jnp push mov pop jo aad loope mov (bad) lret and bound jge and sbb pop cpuid (bad) xchg out jns fimull push mov push lret (bad) lret pushaw repz rcrb aaa mov cli and andb (bad) jl cmp push inc rorb das inc add cmp scas adc lds jecxz into mov fwait ret sbb in push jnp les imul push sbb icebp dec add inc mov outsb stos mov fidivr sbb inc adc sarb dec and lods sti scas iret cmp mov lret mov mov stos pop popa xchg ret and daa int call sti xchg sbb cmc inc call les xor pop ss push cmpsl mov cmp mov popa int or out push (bad) or (bad) or add pushf loope cmp dec ds jecxz jl inc adc push jnp cmp fist add arpl add pop mov or out xchg mov xchg add pop or daa sbb add or insb jno ljmp mov test add mov iret ret add and daa pop daa aaa lds daa cmp inc insb cli imul fistpll lahf outsb mov inc sbb dec mov cld cwtl mov mov out or cmpsb aaa or adc cwtl (bad) test lea add shlb mov or popf inc lods cmpsb push out scas inc sub sub fisttp mov pushf mov test add cmp bound push pop daa lds (bad) sahf jo insb dec dec mov ffreep decb lds add (bad) ror sub cmp sub cmpsb addr16 adc cwtl (bad) test lea scas lahf add or cwtl jg cmp ret cs in adc iret std sahf lods jg aam (bad) in add scas js cmp (bad) (bad) dec sbb sub repz cld (bad) sub cs cmp or daa sti jle cmp sarl jnp add jno cmpsb pop mov sub push dec pusha aas jl ds cmpl sub push (bad) lahf jmp cmpsl daa push add push inc sub adc inc repz dec push scas pop xchg sbb (bad) in lcall xchg or int3 mov add jmp (bad) adc mov mov stos or fimull in jmp jp sbb fild pop cmpsb pop dec std sbb lahf mov rcr cmp add xchg sub sub sbb push sub ret mov sbb adc (bad) mov jmp ss std mov mov mov sbb or cmp xchg sar ds mov (bad) repz mov mov fldl mov test mov rcrl cltd ffree cmp cmp rcrb dec dec inc leave dec lret mov mov leave mov adc cmp dec rcll aad mov bound pop sbb test jge pop jge loopne inc ret mov mov dec or ret fidivl icebp add in scas push scas fs arpl inc out cmp lahf jae push xchg cmp aas xor mov cld add test adc adc sbb pop stos or jge mov pusha adc push sub ffree int3 daa fwait arpl dec and std sbb sub cld jg mov (bad) sbb mov jl dec cltd imul add adc dec push call fisubrl fidivrl dec es add xchg scas cmp fistp mov jmpw lcall popa inc call les subb ds roll sti or pop lock fwait dec mov mov or push inc xchg jbe or and scas mov pop push inc push xor cwtl outsb stos std adc cmp or lds inc mov test dec or jp (bad) jg sbb hlt aas int addr16 loope mov ss mov inc sar xor mov push jns jb push push das rorb lret dec and stos sub mov fmuls mov pushf (bad) mov pop sarb mov ret loopne adc or mov pushf lock jbe mov mov mov push mov insl and outsb mov fmuls cli jbe fisttpl ret fnstsw lcall dec pusha mov mov lret xor xor adc rol add mov (bad) mov jmp pop mov js dec iret cmp sbb lret push pop push mov cmpl test aas iret (bad) fisubr lods std xor iret xchg inc scas mov outsb lcall cld dec call adc (bad) je and (bad) dec fbld iret cmp pop and dec or test jge cmp (bad) and sahf inc shlb pop add mov (bad) aad outsb xchg inc push paddw pop and cmp sbb fistp jp fucomi fiadd cmpl outsb out sub or add cmp lods or dec (bad) mov cld int or stos mov mov mov (bad) jg push jne pop stc sub dec (bad) and clc or fistp addr16 sub or out iret mov jnp cmp das hlt lcall mov sbb lahf cld subb xor xor mov add out xor jnp insl jae daa js mov scas inc and adc xor sbb enter movsl iret and and (bad) push das lock xchg add cs lods mov jb sub sbb sti insb pop xchg add or jle test sarl cmp clc rol add mov cltd xchg mov clc inc (bad) fistp xchg jae loope mov out fwait shl dec pushf mov sti pop dec and lret aas mov insl pop lret idiv insl mov pop insb mov sbb xchg inc adc cmp das stos add ljmp mov mov lods push orl (bad) mov sarb iret loopne test jl cmp mov or std add jl sub sub jle lcall mov mov (bad) mov pop ss push iret das mov stos shlb dec mov data16 dec jnp cwtl xor add fnstsw or insb xor sti jle or stos add xor xchg jmp push out icebp rol xor sbb sti sub pop ds leave cmp mov pusha aad xor xor arpl lock cld clc in js iret cmp mov cs (bad) imul mov mov jbe inc mov in lret data16 lea aas pushf mov loop scas out jnp dec mov push aaa sbb dec or cltd dec fmul fldenv lret aam out pop sbb aam into and mov lahf cmp lahf mov (bad) les and test mov js or mov aam xchg cmp sbb ret shlb daa ja inc or add bound dec inc or xor mov jno in fldl repz scas jmp push or pop jnp loopne ror rcr (bad) bound std frstor xor xor mov mov cmp out test pop (bad) add and outsl or pop pop ss add xchg mov fucomi cmp jne push push (bad) jmp sub pop mov imul or jl sbb ss mov xchg mov or sbb push std jnp jne ret lcall out sahf push mov (bad) xlat (bad) mov add push push mov into insl aad enter mov rol mov mov in out outsl xchg jne mov adc hlt or sbb shll mov mov lock cmp lock jnp or (bad) jno ljmp pop cmp sbb cs cmp jno pop jmp mov pop pop xchg cmc fwait shrb mov push enter push mov mov push fldcw sub or stos mov aas mov and sub cmc incl cmp inc and addb inc std popa enter scas or out xor jl enter xor ret es xchg lahf and dec ja cwtl mov ret jle or inc xchg adc mov orl or outsl das lods pop hlt mov jns sarb or xchg xchg ss xlat rorb mov bound mov dec (bad) (bad) iret or ret push cmc (bad) push mov or xchg int3 cmpb mov push jns xor dec lahf loop jp sti mov mov popf sub outsl sbb sahf jmp mov hlt dec xchg je sbb sub js jle cmp aas mov mov leave cltd cld push (bad) xor int mov sbb je mov imul mov popf movb sti loopne hlt mov ror push or fbld inc add rclb mov pushf aad dec lea add loopne fisubr ljmp jnp adc cs xlat out jle push (bad) jg mov xor les insb inc sbb adc and mov push mov sub mov leave adc stos insb cmp (bad) mov repnz sub add mov nop jp push sub fwait dec dec cmp test xor sbb data16 stos pop out enter sub fs popf cmp daa hlt xchg in cmpsl mov stos nop jp ret aaa jp or jge pop popl jmp fild push or sbb outsl mov rorl dec test das adc or loop outsl cmp addl cmp orb movntps outsb sbb mov pop mov xchg jle hlt sbb in fdivr pushf xchg pop sbb roll stos outsl dec dec (bad) push das inc pop adc test aas mov cmp jbe fcmovbe (bad) ja cmp cmpsl pusha jnp pop fist (bad) mov jbe mulb xor imul xchg ja aaa mov fsubl int jo fnstenv pusha xchg mov inc ja cs sbb push inc jns idivb pop cltd ret xchg rolb ljmp jae iret pop es punpckhbw (bad) dec enter out sti out dec dec cld jl out aam jbe test add sub nop jge sarb and jae rcrl (bad) aaa pop fisttpll pushf int leave (bad) pop lcall mov pop fs cmpsl xor xchg push subl mov cld inc pop xchg sbb movsl mov mov mov fwait jbe aas clc scas jge movsl jl xchg cmp outsb lds (bad) (bad) orb mov mov jmp or sub mov lcall popf mov lahf std (bad) push dec imul xchg scas popf jne xchg jbe fwait mov jnp mov push iret nop xchg pop jmp dec jbe stos loopne test sbb mov jl aam sub and or ret add or xor orb push leave int js pushf cmp mov cmp in mov cmp and pushf push mov je add cwtl fidivrl mov mov fwait das cli add or cli ret iret dec das mov pop cmp jb cmpsb cmp add mov mov test pop roll mov popa out jbe cmpsl test dec enter lahf pushf dec les mov pop js sahf (bad) loopne leave inc xor sbb fildl (bad) cld sarb push cmpsl mov es fsubl scas sti jp aam cmpsb xchg sbb fwait sti mov loopne pop jns jnp incb (bad) and mov sub stc sbb mov push cs lock pop ss jge out inc lret cmp pop (bad) cltd adc imul mov popa mov test xchg cmp mov inc mov xchg dec add mov int3 std dec or (bad) insl nop imul imul sub jnp cwtl lahf in jl (bad) xor cwtl movsb sarb mov mov sub rorl dec add mov cmp pop mov xchg out xor sub cli les jbe sub or sbb pop pop dec inc jbe cld negl mov mov iret mov sub jmp pop out jo inc fldt and nop cli mov sti cld cmp jg jnp cmp rcll pop dec repz cmp mov sub dec cmp push nop out mov add xchg lds dec mov inc sub lea mov mov mov dec movb mov push cmp add mov sub sub das or or mul daa lds (bad) div xchg out pop sub imul xchg inc mov lock (bad) scas aaa pushf dec fstpt cmp push cmp fs aas loopne cmp jp pushf ljmp jmp sub loop and and das push cs sti sarb jl int3 mov movsl or push aas fwait mov inc push mov xor sub subl (bad) adc mov cmp sbb mov and pop sarb aam imull push (bad) aad icebp sarb jae sub cmp mov das pusha cs sbb push out cs ret addr16 fwait jle cmp mov (bad) ret aas stos mov and nop insb dec sub mov jmp pop cmp xchg push mov push jbe (bad) jbe sub sarl addl les shll mov cmp pop rolb nop add imul or int (bad) push leave mov pop or popa mov cld rorb (bad) loopne lea icebp sub ret sahf push or xchg test pop mov in repnz and adc int mov les idiv mov mov cmp mov lret sbb jl scas inc cmpsl or add jle mov add push mov (bad) xor test mov outsb jp adc out lods mov mov or add xor adc adc repz mov inc jbe mov (bad) and jg jge jg lods loop das fcoml mov and adc outsl sub stc scas mov mov lock mov (bad) in mov mov lods xchg pop sbb push pop jb iret or fcoms ds in mov jecxz mov ficoml (bad) add mov cmpsb lods sbb push add xchg push insl jmp mov mov mov outsb xor add pop lret push cmp mov mov jp in fs sti (bad) fstl jge rcrl (bad) adc jo fldt mov sub push jnp mov scas adc lods inc imul fs jg pop (bad) jno inc lds adc pop inc pop mov test sahf cmpl in stos out cld stc in mov ret das jecxz,pn cs cmp sub ret and add scas jp sub rorb icebp and jo mov lret cwtl cltd out cmp sbb add sub add push push pop mov outsb bound stc pusha pop push dec xor pop pop popf orl shrl imul pop inc (bad) mov lret lods inc add imul lret sub sub shll outsl arpl iret cmp shl sub jno adc and frstor and push push or adc pop out sbb pushf push sarl popf add mov mov pop mov cmp fs sarl sub ret cmpsl div bound out jbe fwait addr16 sub daa inc jne cmp add sbb (bad) xor in push inc in call adc cmp sub sbb pushf dec hlt mov loop fistpll lods sahf cmovp adc pop adc dec mov mov xor movsl (bad) scas sbbl xor sti dec adcl clc lret lods jge push adc popf (bad) into (bad) or mov repz xchg or in jl adc xor adc dec pop mov add insl fidivrl test lea nop or fwait lret notl fistpll sbb jl cmpsb enter mov loopne sbb cmp sbb jnp (bad) negb fwait dec pusha in push pop dec popf (bad) out or ret mov insl test xor fdivs or mov dec pop mov jge call fistl mov xchg stc push pop cmp cmp jnp add hlt fcmovnu scas and add mov hlt mov repnz in decl add clc fisubrl dec imul jle mov scas pop xor (bad) (bad) mov lods int3 std lret lock cli mov notl xor mov cmp or jecxz mov mov loope cmp pushf mov mov leave (bad) and scas push pop jge ret push xchg insb add shrb in xchg cli test jg,pt gs xchg cmp pop push cs add in sub jmp test adc add cmp cmp inc psubq out arpl inc dec adc sbb sahf jae iret adc inc lcall jl adc mov jo leave (bad) cld (bad) cmp rolb popf stos orl popf test imull cmc adc sarl jge sbb mov pop and dec arpl sbb outsl xor mov test lret cmp pushf sub (bad) mov mov addb jp lods mov imul sbb loope ja int lea scas xor xlat ret fisub pop in sbb push sub ret repz lahf popf sbb jo xor scas imul push dec xchg js in lds popa inc scas cmpsb aad add mov adc pusha and or rclb lds out cmc jl inc mov and pop (bad) fistl jl scas xchg adc stos jmp add xor hlt xchg xor cmp imul mov mov mov or adc dec pushf adc jne lret xchg sub mov mov adcb out xor pop pushf int pop lea stos or adcl call or (bad) fcoms stos popf jne push inc cs rcrb sbb cmp shrl sti cmp int3 adc xchg or rorl sti or sarl repz add jnp fistpll (bad) aaa ljmp mov pop mov cmpsl pop lods mov sahf iret adc xchg pop stos stc dec inc mov in inc cli loope test stos mov or inc xchg loop out jmp jmp mov mov sub mov push cmp xor stos xchg nop or push mov fdivrl or hlt xchg (bad) xchg mov insl inc fdivrp shl into jl pusha adc adc scas sub lea sahf xchg adc and div lods adc cmp sbb (bad) mov adc xor dec adc mov movsb push (bad) mov outsb dec sbb sub push xor mov aas and mov adcl mov imul int sub stc cmp pause imul push std xchg cmp mov ret push cmpsb movsb lods lahf jg test adc pusha jp rclb jl and cmp lahf mov mov pop mov mov ret stos stos mov xor rorl stos daa cs jnp lret mov in or andb or lock jmp stos mov sbb mov pop dec sbb sub cmpsl pusha rorl xchg fsub jo fs pushl incl pop pop loopne inc mov mov add jnp idivl mov jp (bad) loope fstpt add loop sub icebp lock (bad) (bad) jp add frstor and cld jl imull out or ljmp int sbb imul aaa inc sbb jo loop int3 mov in push or cmc sub or mov lahf pop mov pop mov jl add or cld fisttpll mov inc lahf in mov ss mov or dec mov and loope adc add test mov fsubp (bad) or int3 sbb dec or sbb mov xchg popa sub cmp mov dec push jl cmp xlat jo or jmp sub mov jmp cs into fwait jmp sti mov (bad) sbb clc std mov or inc mov incb ret inc sahf inc or rcll jns rorb pop test aaa bound mov push pop (bad) cmp jg stc fisubl popf adc inc or cmp dec shr adc xlat xlat sbb pop mov mov add lret cmp sarb xchg iret jle mov inc mov pop pop xor cmp inc mov fcmovne add sahf push rorb sub popf loop mov dec or xchg mov inc lcall icebp sbbl push push adc or push cltd add stos lea in add (bad) in jmp jge or push test and fisttp xor stos cli (bad) pop sub mov mov mov and ret cmp adc push add pusha (bad) xchg lds test les pop push shlb jae mov lret lret test or xchg cmp ljmp pop (bad) scas jle pusha and jnp scas cmp call sbb sub mov add cmpsl aas cmp fwait cmpsl mov or mov mov xchg sbb cwtl lahf add push imul fldenv int sbb lds xchg mov mov cld loop imul (bad) out cltd xchg cmp mov rol repnz sbb in ret lret lahf and xchg xchg sub cmp push hlt (bad) fldt mov cmpsl out scas xchg xor stos sub xchg pop pop inc jno inc sub int mov dec cmp push je jg repnz push mov leave cmp mov add insl bound mov addl movsb (bad) push mov xchg and lods fwait mov inc push add cmp fistpl cmp mov jnp pop dec pop cmp shr adc into imul faddl (bad) loope imul (bad) inc jno adc lret xchg leave aas pop fwait mov pop lock into and pushl jnp (bad) mov jmp jbe pop inc fidiv int3 mov imul out (bad) cmp lods sbb jb xchg xor jle mov popf fsts gs sar inc outsl jmp sub mov inc xchg inc add jp fadds jl or jo out sbb jbe ret sbb arpl and dec xchg dec in outsb ret popf push decl mov mov aam lods pushf fwait daa adc sbb pusha lahf lahf jmp jge or push jo xor ficompl sbb data16 aam sub sbb mov jle pop lea add inc mov outsb sbb inc sbb inc orl add hlt repnz or or and mov arpl mov add (bad) insl fbld pop pop js (bad) pusha xchg in or mov inc popf push inc push fcomip nop movsl mov or (bad) add push lcall jae push les flds and dec lods sbbl jp xchg int3 aas mov or popf fwait pop rcrl sbb pushf jge aad cmpsl sub movsb ss and imul popf dec jne lock lret sbb rcll rorb test inc pusha mov in add call mov dec loope (bad) mov mov dec ret (bad) mov mov jle push in push (bad) pop xchg ficoml ficom lahf popf or orl mov movsb lret into or pusha and sar (bad) hlt push jnp cld push sahf bound mov cmp pop push sbb aas xlat decl add stos sbb insb jnp adc sbb mov or jecxz lret scas jecxz cmp sahf cmp mov (bad) cltd in imul mov stc push sbb gs xchg (bad) dec dec cld dec insb xchg add leave scas movsl or xor out xchg cmp push ror bound dec or adc inc push push or push add xchg iret xchg jmp lds push dec popa hlt mov in int xchg adc sbb or mov dec (bad) sbb aas push adc jl cmp mov or xchg jmp pop mov fidivr adc call cmp mov call mov xchg cmp or (bad) leave xor adc out mov adc or sub mov jge or mov (bad) mov cmp and sub fstl sbb add inc push outsl push jg pop sbb sar pop jmp ret mov movsb hlt jnp ret je out sub nop mov push cmp mov or dec rol mov jl (bad) or jl sti cmp sub dec fwait scas add adc adc sbb sbb std cmp dec jle rorl or rcll jl xchg int sbb pop divb lock (bad) sti sti or scas cmp scas test sbb dec xchg mov xchg int lods jno mov pushf sub shrl add sub mov pop adc les push cli sub iret fucomp sbb xor cmp and push fwait xchg xchg cmpl idivl adc sub lock inc xor ds sub mov pushf mov (bad) out cmpsb pushf push inc fcmovne arpl add cmp sub in xor add dec (bad) iret (bad) cwtl dec add jle out add faddl push mov push dec ljmp mov cmp mov (bad) or add hlt jl push (bad) xor sub dec sahf cmp es loopne mov cmp pushf sti sub cs jbe or rcrl mov or scas das movsl jns (bad) cmp adc xchg add test stos scas addr16 inc push rorl aaa mov add sahf testb adc cld or jl xor outsl adc dec adc add or inc add in ret add xchg or adc and faddp jnp (bad) xchg or pop add jl addr16 mov sti ss jmp pop pop or xchg jb lods xchg pop dec and add pop dec mov repz xlat mov or cmc int3 clc xchg xor in jnp nop mov push outsl es lea fwait mov or inc aad sub cmp nop lea cs ja pop cmp mov cmp push jnp fcmovnu lock jl shl out lahf outsb inc jg test out stc js enter jecxz mov nop dec dec movsl loope pop mov leave pop or cwtl and or mov (bad) int loopne jnp cli xchg push jmp ja (bad) gs mov jmp mov mov test ss push push inc pusha lret mov (bad) mov mov inc inc mov pusha leave or mov sbb mov mov add jle std jbe xorl pop sbb dec scas mov adc xchg dec xor jge test fiaddl pop out (bad) scas jmp (bad) rcl fwait jno mov and loopne ljmp jnp jb lcall dec test in ds xchg mov repnz jo cltd mov cltd addr16 add outsb out (bad) adc lret xlat mov jle xor pop (bad) clc jmp mov inc test testl ret push and jg sub lahf push sub aam xor xchg (bad) (bad) mov out (bad) (bad) push sbb pop jmp jg,pn dec pushf fucomip (bad) pop dec (bad) jmp or out movl inc xor push jp sbb sbb cmp or xor xor xor aaa jp aam imul lods jno rorl sbb dec pop cltd mov add (bad) fsubs and mov add adc mov pop (bad) pop (bad) repz jnp dec aam fcomps jnp mov repz adcl xchg xchg aaa aad xchg jle aaa stos cltd (bad) xor jp insb mov je jbe ljmp dec xor push insl inc inc cmp popf je daa stc aad jo pop sbb jne,pn (bad) cmp mov fidivrl shr cmp sub fwait rcr and add insl out adc and add or sbb outsb pop or dec clc jl mov insb xchg cmp gs roll aaa adc js jns test mov dec (bad) ds dec or cmp test loope xchg jnp cli cmp inc repz mov repnz mov or push or xor sti (bad) fistp (bad) movsb xor imul cld pop xor xor cmp jbe lret mov lea push cmpsl jl lahf jnp ret dec std or jge pushf test xchg add insb cmp ret mov push mov add cmp insl and mov repz adc bswap rcrb mov jp int or out adc rorl cmp xchg fiaddl adc int jb pop ja (bad) add push mov inc adc sbb mov xchg ret stos xchg cmp xchg std lret pop cvtps2pd and hlt shrl sti (bad) fwait stos sub ja test lds (bad) popf jns push clc imul pusha (bad) mov sub ret imul mov jl loope cld lret add mov lods pushf (bad) lret push and pop lret imul rcrb add outsb mov fnsave popf (bad) dec mov (bad) sti cwtl jge mov sub int3 adc or cs out or jae and mov sub ret or adc lods add popa mov pop pop clc or pop sub xor popa popf int pop sub (bad) rcr lahf cmp xchg icebp loop mov mov mov inc (bad) pushf mov insb and mov sub stos sub or dec rcrl stos and mov xchg les dec sti in imul pop sahf dec (bad) cmp push mov js mov or mov dec jle bound mov inc push inc nop inc cwtl sti ds xchg push sti pop lock or sti add adc scas lds inc sub mov adc and lcall repnz cld loope in test incb add fwait notl lret (bad) mov or and mov aaa sub test mov or aam dec incl fs (bad) cmp pop sbbl sbb cld and jg jno ret xor (bad) cmp aad adc adc or add loop jecxz fdivp sarb jle adc fnstsw sbb push pop fsts add ds mov notb pushf cmp repnz add mov andl sub lret sbb mov pushf sti mov repz jmp cmc les es adc xchg jnp mov or xchg jg in call imull mov xchg adc mov and pinsrw jle mov mov pop mov stos pop repz push mov adc and push not cld scas jp sbb push cld mov movsb jecxz pushf mov dec scas inc xor pushf cmp mov enter sbb sti adc add dec or int3 out sub pop cvtpi2ps inc insb sub xor add or mov ss adc fiaddl js xor cmp sbb ret iret xchg imul cwtl push sbb add add leave xchg add jl mov sub lock les inc fidivrl or sbb imul fdivrs cwtl xchg loop ficom sti xlat pop int and mov fistpll (bad) dec push push inc xchg test jecxz iret mov int or (bad) aaa or lcall xchg stos popf lcall cmp out mov and pop movb jp stc jmp dec pusha add mov pop jb sahf ret sbb fildll sbb addr16 cmp cmp push fistpll xchg sub inc mov fildll (bad) out sbb dec bnd sub cmp (bad) fisttpl jmp mov outsl test mov add sbb inc push cld setle add push cmp testl cwtl scas jno incb movsl ja cltd les scas mov addr16 push mov jnp loopne sbb xor das sbb dec insl mov push insb xchg sbb fistp and ret (bad) lea dec adc pop push mov mov sbb inc arpl or scas imul decb adc sub (bad) xor fwait mov push aas mov sbb pusha add popf cmp dec lahf bound stos add subb jl dec rcrb nop push sub (bad) sbb lock pop or and insl sub pop imul mov cmpsl mov xchg js enter pop dec mov int3 in test testb (bad) decb sub inc lods xor nop test sbb popa scas lods inc fwait repz cmpsl in clc sbb lret stos rorl sbb (bad) int nop pop push xchg loop fcmovnbe (bad) out aaa mov add xchg jecxz fucomp sub lea inc imul cmc movl sti shrl push movsl dec loope (bad) fisttpll test int3 jg fcmovu (bad) adc push jg adc fwait jg jmp ljmp lds or add xchg out bound sub aas sbb sub lods push mov mov and mov daa in mov out lods ffree mov cmc sahf sub sarl mov dec jae push ret mov out xchg adc (bad) outsb pusha inc pop cmc popf lods notl or adc icebp rcrl pusha mov lcall dec ficom iret fwait lea pop in repnz cs add insb push ficompl xchg jno sbb insl and std push and xchg fimul pop mov mov shll add inc in push or mov xor sbb xor mov outsb push push or jl push and aaa ja ds jo push rcr sub dec mov jl out push cwtl mov mov push (bad) fldt sub movsb cmpsl xacquire mov hlt (bad) out movl jge (bad) mov xor cmovns mov pop push sub xchg push fistl mov mov sahf scas in lret ret sbb sbb ret or and push cld or subb mov addb rol mov mov or iret pop mov dec adc pop adc pop pop ljmp sbb cmpsl sub pop push (bad) cltd sub mov sbb in enter mov sti dec in add es std inc addr16 jb dec int3 jmp jecxz test je push xchg pop mov mov pop rcr out adc stos mov clc and leave leave fst mov shrb aam jb pop jle dec push xchg test in shrb nop add rorb notl or (bad) negb fstps mov dec subl jno int3 push lret (bad) push mov jg mov push inc and test pop loopne mov push scas xchg jl mov fnop lret mov mov bound jp push fwait ret xchg pop sbb dec mov push or sbb sbb (bad) or outsb sbb jnp inc or ret lahf sbb cmp pop jbe,pt cs pop jg inc repz jns sub lds sub pusha push inc pop lea mov fwait cli js inc fbstp rcrb inc addr16 or sarb or pop cmpsl push enter mov jnp pop mov and push flds cmp sub mov cmp sub flds scas test std pop les int pop je jmp sbb test bound mov lahf adc jb ret (bad) dec (bad) xor lret sahf stc xor outsb in mov push lahf dec cld dec mov and mov arpl stos (bad) push pop push mov bound inc jbe pop dec fdivl scas xor sbb jge imul or pop icebp add enter push xchg mov or jne leave loopne ret cmp or lds ss int out fcmovnb add or popf mov (bad) jo int jne out cmp inc mov mov rcrl pop clc jcxz jge push mov add add rcr xchg push fs sbb sti out mov sbb leave cmp stc not sub sbb push pushf add inc lods push loope ret fdivr psrlq mov add mov cltd aas (bad) jle or lret nop mov aaa aam sub sub sarb jl lret or xchg fwait (bad) es push add mov inc jg loopne rcl ret jo daa pop or imul mov jno test jmp cmp jnp add inc mov xor sbb popfw xor stos sub mov (bad) cmc cmp insl sbb icebp push (bad) je test inc imul pop adc pop fsubs xor mov jg mov add lahf imul mov lea imul setg lahf js mov jmp clc (bad) cli jbe rcl jmp push pushf outsl or mov cmp fisttpll in fistpll mov (bad) sahf imul push orl stos sub jle lahf mov mov sub aas outsl mov xchg cmpsl cmp mov jne xchg in pusha loopne dec (bad) cmc insl cmp lods add sbb imul xchg jecxz mov add or aam xchg pop push dec pusha mov call inc popa lret sbb jge jnp cld roll ret jl jge cld scas jb (bad) gs add push roll mov popa add xchg xchg dec lock aam ret js push scas xor pop xor cmp mov loopne cmc inc int jg sti mov or pop push roll jno in jmp adc mov sbb lahf fwait mov pop mov adc or pop xchg add incl push fildl icebp jmp or inc lods mov das cmp andb jp and jae hlt outsb inc push mov imul call mov or push das cmc rol stos add mulb stos cwtl (bad) mov cs push je cmc imul xor ds std dec cld fistpl shrb or mov mov pusha test sub loope push add push mov xchg or or ss stc or and or inc jb jnp jmp sahf lret mov popf push inc outsl adc push scas aad lahf std stos mov add adc idivb or push cmp mov lock mov xor packssdw sahf push sub mov adc xchg loope std dec popa xor adc lods loopne popf lcall mov ret ljmp xchg jg sub cmp arpl cmp cltd and mov test and jbe stc rcll mov aas cmpl scas jnp jmp test shrl sti popf sub pop sahf loopne xchg push (bad) pop and (bad) and (bad) fstps paddw dec mov xor les jno in fidiv scas add or jg cmpsl fneni(8087 pop jl push test (bad) (bad) and mov mov stos loope pop lret lods (bad) out mov add mov xor adc hlt push lds adc and jmp push mov jmp push jb jb push and pop push pop int3 mov int3 stos pop insl subl insb std std dec aam sarl imul mov add sub rolb in push std js adc mov jmp sbb (bad) xlat inc cmp shrl jp lods and scas lret and je ret clc and cs fistpll rclb sub pop mov dec addr16 nop loope xchg sbbl daa cmp ret sahf rorb int sbb rep fnstcw dec aas jg push pop mov inc or xlat inc lods jg int sti xchg loop ret std popf int3 cmpl lahf popa pop inc sub jbe jne cmp jl jae pushaw pop into fwait inc loop stos or push dec pop enter lret cmpsb sbb xor inc fistp inc sub pop jmp xchg iret daa xchg push jbe and rolb daa bound or pop leave sub mov jb std (bad) sti sbb (bad) jg mov fmuls cli (bad) insl shrb outsb dec divl xor lahf imul cmpl sub add lock mov sar stos call push and sub xchg adc sbb orb sbb jmp jns ret push and test jo adc stc and subl pop xor insb sub test mov lret rcrb add out scas xchg fistpl bound sbb pop sub adc sarl xchg jmp lods ret je jge push sti mov mov xchg pop and cmp cmp mov shrb int std mov adc mov fst cmovnp test cmpsl and icebp (bad) and call jo les fdivs imul in aas mov cmp cmp fnstcw outsb stos (bad) idivb lods js pop sbb pop adc and rcrb imul jg pop jp push inc pop insl ljmp sub insl lock outsb ret inc mov std add fidiv leave ja xchg mov loopne int xchg lds mov mov and jecxz mov jp push adc or jo lock (bad) leave rorl xchg jb push add (bad) insl addl cmp pop cmp stc mov movsb lock cltd adc dec aad add out stos and pusha pushf xchg xchg sti js dec imul pusha cmpb push mov aaa loopne xor jbe orl fsubrl push mov and divl stos (bad) inc jmp lods ja ret push mov cmp push ljmp shll rcrl popf jle mov jl pop rcpps movsl xor daa rorw cltd pushf mov lcall cmp sti mov (bad) mov jo cmp sub mov fwait std cmpsl pusha jg mov xor jnp mov or or jnp jbe jg sub jp test test fildll push stos push mov jbe (bad) in ja xchg lods inc stos movsl inc jp add int jl sub push ds pop insb adc mov out or aas mov add push cmp insl arpl jns mov jp jl sbb pushf lock jno es cs jo (bad) ja pusha adc movb out cmpl movsl add and addr16 pushf ror pusha lea mulb xlat pop dec loop pop rcr popf sbb pusha int lea cs mov pop sbb or jp sub (bad) xchg data16 mov std rcr pop push nop mov xor mov dec (bad) sti sbb int les fisttpll jg call mov cmp xchg sub xchg lods addr16 sub jmp in insl cltd iret mov imul and sti pop adc imul jp sub adc cmp clc mov sbb push aaa dec adc test xbegin sbb sbb (bad) push sbb push jge (bad) jnp sbb pop (bad) mov mov pop jne inc push fwait mov dec clc movsb sahf jo mov or adc pushf pop dec inc movsb hlt cs repnz lds and sub sub lcall mov ds sub and mov and (bad) enter cmp mov test inc imul cs sar pop in loopne in cmp lods xor mov xchg movsl sbb (bad) mov lret stos mov or inc std xchg fs jb (bad) les xor ror pusha jmp sub jp push dec pop mov dec inc mov sbb mov lds xchg stos nop add inc fbld add int mov stos test or cmp push mov subl sub pop call bound sarl cli not insb imul and xor mov dec jnp or mov add inc pushf stc push into rorb mull or mov cmp push rorb (bad) pushf lock out aad jl iret xchg cmp dec xchg loopne sbb lock imul sti or mov cmp movsb fmull mov or mov jl ret xchg push jbe rcrb push (bad) cmpsl dec gs sub xor ljmp out loope lahf (bad) shr pop cmp cs add cmp pop arpl pushf mov sbb cmp int in ret int pop jl cmp pop cmp std jbe pop sbb in mov adc andl cld loope mov das popf pop mov or inc mov xchg sub scas clc dec lods dec test mov dec rorb stos pop (bad) sub sbb pushf adc jle mull mov fnstsw js inc sub (bad) aas sti imul aas scas xchg dec add sahf xchg cmp in mov lock in sahf fisttpl fcoml pop jmp shlb jnp lcall or jns inc push aas lret or xor jns out hlt (bad) and mov fsubl ds add adc cltd mov pop stos or lcall das push pusha pop and aam insl dec push jecxz aaa lea add ret inc hlt sub sahf lods sti jp test sbb or rcr call sarb push pusha gs jg add (bad) fcmovne mov adc jl lods lea std (bad) cwtl xlat movsb inc aad xchg fwait mov lret fisttp mov loopne lds xchg test call push cmp sbb push mov xchg (bad) mov (bad) or pop lret lcall out or out call jecxz push test scas mov mov (bad) push iret (bad) cmpsb push fwait jl or negb ret nop jnp movsl dec cmp xchg popf pop daa (bad) push inc ret or cs mov lret sti pop mov push jle mov testb mov jle cld jecxz mov add sbb and int cwtl or or les js inc mov mov mov lds mov iret aas pushf rol jg rcll dec adc shlb fildl (bad) lea into int cmp adc sysret ret add mov pop test jno sbb cmp jge cmp dec add jecxz hlt xor fcompl mov lahf push push sahf stc (bad) int3 out ret nop (bad) mov jmp jle shr cmp add xor push fistpll mov test nop xchg std jecxz lds mov insl mov mov xor lcall sti leave jnp std dec or xchg cmpsb jl push sub jg mov lret (bad) dec shrb stos out cmp mov push push inc repz repnz lcall cmp push jb xchg pop sbb push inc lds pop lret pop (bad) ss sub and mov jl mull add cmc inc movsb inc lea mov aad mov fstpl inc and xchg jge mov std adc pushf sahf mov xor fnstenv iret or pop outsl mov lcall dec aas xor ds add sub fcmovnb (bad) out std xor push int3 mov push fldenv cmpsl cmp pop jae lods out or mov pop adc flds fsub std stos pop (bad) sbb pop icebp fwait movsb sbb jbe fisttpl dec jns std sub aam xchg movsl ret cmp mov pushf push jg enter dec pushf mov mov out in shlb push outsl push inc add inc inc movswl dec mov sahf and cmp shll xchg mov aad pop mov jg adc out cmp or jb xorb or push pop cld rcl mov sti push ret xor jp bound inc mov xchg mov mov jmp add xchg jnp outsl mov aad fistp jno movsb js add pushf pop pop pop lcall aad out jge xchg push mov (bad) data16 nop or cmpsl push ds lods pop test inc push jbe (bad) push mov (bad) jp into and add push add push ss inc dec stos push push adc or pushl pop pop cmc jecxz aad and push xor int stos fcmove les (bad) mov sbb adc and (bad) cmp or jb inc stos cmpsb (bad) mov jnp jle sub cmpsl in bound rol jnp push cli dec fcmovnbe cwtl mov orb push sub test dec fwait jnp pusha dec pusha test call jno (bad) mov push or ja rorb movsb cmpsl fwait out daa cmp cmp mov in xor mov and and repz sti add mov fisttpl (bad) sbb movsb dec pusha jnp mov cs or std leave xchg mov sub call xchg push adc push lods in stos in pop mov idivb and repnz jle loope ss imul ret jmp (bad) mov ss jnp xchg lcall xchg shl cmp repz sbb pop sbbl (bad) jl pop mov jecxz add add nop push lret imul adc and das add loopne and fs jb insl addr16 adc sbb ret cwtl dec jne sub lods dec scas fiaddl xchg loopne insl enter sar cld cmp xchg mov insl mov dec jnp lock add mov lret mov out sbb call subb sti stc mov sahf sbb scas sub test outsl inc ret cmp sbbb fmull mov dec pushf cmpsl hlt xchg cmp pushf mov pop xor pop testb or int3 xchg mov pop lahf mov pop (bad) idivl lods jmp sbb mov (bad) cltd clc lods and and push fistpll jg jbe pop xchg adc out adc stos mov sbb xchg pop push imul adc (bad) push pop or cld push fisttpll or push aas pop lahf (bad) fcomi mov inc pop fs insb pusha ljmp aas (bad) jnp imul dec push push xor in mov cld lea mov ret pop scas xchg mov push push mov xchg adc sub push in inc inc insl cld jge sti imul sbb push push dec rclb mov lret fisttpll das rcll cmp jg push pop popf xchg pop push and sbb aad mov jecxz ret jnp rorl movsb add dec aaa inc mov dec sti aad push sahf imul fwait out pop mov outsb sahf or mov sub mov jge cld push mov lods add dec add mov add mov sub cltd sub push push jmp cs mov cmp pop scas or sbb imul xchg in inc sbb aaa outsl cmc call dec and mov idivb push sbb (bad) repz mov (bad) jge add stos ljmp sbb lcall cmpl push pop jg fdivp pusha stos fstps jecxz push cmp sub dec sti add js je xor loopne jle adc adc and leave test cmpsl pop loopne ret pop jle adc sti loop lock addl aad stc xor and insl sbb fwait jnp and inc xor add movb ja cmp outsb xchg jmp jo inc cltd std insl fisubrl sub mov and test imul enter cwtl jp mov stos cmp rcll jnp in popa dec xchg aas mov xchg push sbb mov fdivrs pop pushw mov lods fadds iret leave inc sti fstps xchg sbb adc imul stc aad xchg or scas fwait dec cmp cmp test pop gs push fldcw int3 divl sti stos mov push loope fisttpl push xor bound or or push aas jle pushf add test cmp fcomip jge xchg adc in xchg popf incl dec add imul lods pop ja dec push lods push call mov in cwtl lret (bad) sub test dec jp push mov imul xor nop mov jnp aad and test rorl ss (bad) insl shrb xor pop dec insb push ljmp (bad) mov outsl push add cli or mov or xchg push sub jp mov lds or idiv inc subl push stos hlt sbb lcall insl lcall sub fsubrs and (bad) jg cmp pop inc pushf adc ljmp mov dec pop fwait in cli push sbb outsb pop test lret jno mov sub jg lock push rorb pop int shrl test xlat repnz mov xor ficompl inc sbb cmpsl add mov (bad) jp repnz ret inc jge lods xchg mov add cmp lcall stos inc push dec mov movsb add pushf cld mov xchg cmp jge stos and adc fidivr mov ret lds aam fucomi mov das sbb das movsb dec cmc std mov fstp sbb stos scas or stc adc cmp dec mov (bad) sti lods imul jb fcoml sub dec rep inc lret outsb (bad) in push idiv push and fwait jb cld hlt rcl in cmp shrb aam repz jno jl and jg insb mov fmull icebp scas push mov stos xlat (bad) jbe xor pop inc xchg adc jl cmp xchg lret setl or insl dec lret dec cld cmc pushf mov cld jne cld dec mov push nop addl sub push (bad) loopne xchg push lret dec or loope sbb pushf sbb jb adcb fwait xchg loope ret (bad) int adc (bad) mov sbb mov pop or push fcompl repz sbb xor dec pushf repz (bad) dec pop (bad) cli add dec cltd jb and (bad) ja mov pop or lcall ja push lds mov lock mov std cmp pop jnp lret inc imull xor scas test sub sbbb jnp or fwait cmp stos fstpt sbb neg cli js jp mov (bad) dec (bad) or (bad) mov addl (bad) sti (bad) xorl cmp push cmovae mov fisubl imul loopne sub repnz fisttpll in push cwtl cmpsb xchg ds adc add (bad) daa pop ljmp mov pop bound mov inc lret rorb add (bad) jnp scas sub repz mov ljmp ret sbb and repz or js sbb stos push enter xor mov add mov in fildl jle cmp mov mov sbb mov add adc mov xlat xor (bad) dec xchg push (bad) iret stc fistpll cld pop je jnp sub sbb ljmp test cltd imul ret rcrl mov sbb ljmp xchg sti add repz dec cwtl je aas push aas rorb mov pusha and jl or sub fldt mov test jbe roll ficomp test out pop push mov movb adc add (bad) aad adc pusha ret or add enter je lret mov fistpll aas sbb cmove and out leave out pusha jmp mov mov push lret or adc sti cmp loopne adc and imul or insb sub inc or inc aaa in xchg mov mov pop mov inc (bad) bound lods scas sub and dec or xor lret jnp cmpl ljmp repz sahf or sbb aad idivb jno mov dec cmp or sub xor sbb in rol loopne inc jmp sbb mov and xor mov (bad) mov add movsbl jl xchg aas fwait xor push fadds (bad) push dec frstor jmp orl lods jle or in xchg shrl imul mov jo ja mov movsb cmp lret jle mov sub mov pop ljmp test xor ror adc clc xchg pushf inc sbb ret scas mov ret lea lahf lahf mov int3 (bad) xor adc aad xchg xchg add sbb aaa and mov fsub push loop mov decl jb test xchg xlat movsb and lret push lahf sub fnstcw mov sbb lods cmp mov fcmovu cld sub fcoms lods (bad) ffree imul scas ljmp lods call lret imul cmp addl ds ret cmp pop jge sub pop lea push pop mov fst fistp int3 ret rcrb mov fnop (bad) fdivrs add cmp pop rol lea cmp out popf lock mov movsb sbb stos add movsl push gs test mov iret ficomp les mov insb jl lahf xchg add jmp dec fistp enter cmp lcall rol or fwait xchg jmp or scas adc sbb push mov shl sarl mov movsb popf adc sub sti sti in hlt lahf dec xchg insl mov lods nop dec ret cld or movsb jnp ret loop ret outsl out mov sbb xchg test movsl in and sbb pop dec mov int3 ret repnz frstor lret cmp rolb push shlb sbb pop and leave xchg fbld (bad) pop add mov sbb repnz inc fwait ret lea inc sbbl mov mov into stos xor inc and jbe xor lret insb mov addl mov pop mov leave sti add lret cmp je pop test ret hlt scas lods fstpt dec fmul push sub fdivrs jl pop cmpsb inc fucom inc jmp ljmp ds or lds (bad) int3 push sub jp adc xor enter push xchg or in or pop loop pop iret mov addr16 test rcll and (bad) (bad) movsl pop sahf xchg (bad) mov xor pushf mov jp push cmp rcrl add mov aad (bad) in shrl sub pusha push pop sub sahf jmp inc loopne data16 xchg mov (bad) push inc dec or aas or js mov sti (bad) ss sbb sbbl push inc nop cmp and inc or add pop (bad) jmp push fwait push in jne sar pop int inc fldt xor push mov jecxz cmpsl addb mov bnd neg add pushl cmp mov (bad) icebp enter dec lret xchg sbbl sub in jecxz nop (bad) xor xchg add adc xchg test bound mov arpl fistpll in push dec push pop push cld adcb mov arpl (bad) pushf jb andb idivl fistp jecxz bound setg iret loopne iret jmp frstor fistpl jo jbe testl imul fucomp and xchg int jp pop jmp adc jl mov cmpsb add add mov adc in and je pusha sub ret arpl gs fwait cmpl stos das shrb pop das add jmp pop stos fistpll pop pop add movsb xchg mov bnd inc fcmovnu or adc (bad) movsl out xorb rorl cmp inc mov mov jo mov jl pop jle ljmp ret sbb sti push jle mov add fild add loopne mov fistpll dec mov add bswap dec das fimull jo inc fwait repz nop clc sub push mulb adc push std jnp mov xor popf mov ljmp dec xchg (bad) (bad) xor and jecxz jne clc sbb xor in cs (bad) mov push add or shr and movsb or clc xor fcoml scas add xor (bad) xchg or push movl enter jnp push into loopne gs xchg dec lods (bad) aas rcrl ficomp fild and ret xchg add enter xor ret mov ja lret fnstcw pop jbe mull push loopne add push inc mov xor fstpl add outsl adc lcall cltd pop lods aaa (bad) xor dec pop in dec xchg movl movsl mov mov rcrb out jmp pop aad sbb sub pushf rcr add mov mov adc add mov imul mov int3 (bad) out mov fbld mov loop dec nop dec mov stos jnp cmp xchg out enter cmp or test cwtl or daa mov adc fwait inc dec xchg jo xchg mov or push inc das sbb (bad) outsl (bad) cmp scas mov int mov outsl insl push sti xor push mov mov dec fdivrl adc jmp mov sarb inc es test mov leave lock mov or inc mov cmp add mov sbb mov xlat cmp pop je sbb sbb cmp mov pop mov jp lar xchg sbb cmp add (bad) cmpsl push test xchg pushf rcrl push push mov mov mov rorl ljmp bound lds decb inc fstps or mov das mov test cmp mov fwait sbb adc add mov push fstl inc lahf ret jnp add (bad) jg mov std jge je fbstp sti adc or dec lahf lea and xor lcall jnp xor test mov jl add ret mov inc jae ss rcl test cmpsl imul (bad) jmp sbbl int pop outsl mov xor adc jl dec lahf mov ret fistl jle mov mov jl lea (bad) std pop lock xor jg in cli sub cmpsl jnp lret sbb or push mov ja lret (bad) pop imul pop sub (bad) ljmp popa mov dec incl je scas lret les push test mov mov xchg dec rcrl pop add loope adcb inc jmp mov mov cmp aaa jg or sahf mov sti lods fldt fwait data16 cmp ret push and adc pop lods push or or push (bad) clc sbb pushf xchg cmp or mov mov into hlt jg aas pop add mov std push jnp jle mov cmp jbe mov inc xorl xor scas push pop cmp dec cmp stos ljmp pop sahf cmp icebp push cmp cmp xor jmp fcmovne cltd xchg aaa or les xchg (bad) in adc push mov or test mull popf mov sbb pop stos pushf pop jnp jnp mov jno jnp jl and shrl or cmp sti and cvtps2pi popa rcrl fbld mov cwtl data16 cmp jle sbb jg jecxz fisttp inc jl jb cmp xchg mov mov add sbb clc cmp mov push int xchg inc mov imul sbb popf mov mov les pop in adc dec xor sarl lods mov sub movsl lods ret xlat push push mov ret adc jl pop aas jecxz inc cld pop adc fistp push arpl cld inc test mov mov pop in lahf (bad) pop mov int3 sahf and ds mov (bad) hlt fisubl clc xor lds inc mov imul fistpll fnsave and cld pusha inc or cmp lahf dec out repnz inc (bad) call std pushf mov lds push out out and xor insb paddusb popf sbb sbb mov pusha jns push fsts movsb pushf rclb shr or push jl (bad) cwtl jmp (bad) xor push xor push jecxz mov ret jnp xchg push test push das lea loopne fsubl jecxz dec mov and andb push xchg mov mov test lods fdiv mov pop test jne add ljmp subl xchg pop in sub lcall aaa or dec cs sbb mov movl mov mov fisttp cltd dec fwait (bad) je (bad) mov out rorl std push lods jg jne mov stos (bad) outsl (bad) outsb sub push or mov shrb push jge ret not insl clc push mov rol or pushf test into mov push pusha and pop mov inc stos arpl sti add test pop push mov mov pop lods int dec lods or sub jo sti adc lahf jle jge or in cwtl jp orb inc pop clc cmp mov or loop xchg xchg mov loopne jmp dec sbb lcall pop dec inc dec loopne cmp int3 add sbb (bad) movsl mov mov add adc jne popf sub and es push or inc fisttp push cmpsb add lock rcll out and jo xchg in ljmp ret adc and mov mov cmpsb aaa push mov pop lods cmp sbb ficompl adc sbb repnz nop lret dec (bad) xor xchg jp test pusha and shr sbb out ds fildll (bad) cwtl and push sarl inc and and fstpt ret pop roll sarl leave lods sbb dec or (bad) push pop sbb xadd fsub jp lret inc jnp addl lock adc jecxz iret mov cmpsl cld add popf mov jo mov test pushf ds fimul clc dec xchg sbb sar jnp mov or cmp pop pushf jns and add xchg std es ja,pn fdivr jnp sbb xchg push (bad) mov xchg adc sti xchg cmpsb scas pop jl jge pop pop movsb lods cmp mov pop mov jnp out lds or in cmp (bad) in cli in xchg push or cwtl outsl dec mov mov lret mov hlt pushf dec mov sti bound pop aaa ror jp xchg mov pop scas aad ret and sbb jmp add jb add jae,pn bound pop xchg dec adc fnop xchg test or inc test aas pop lods adc fldenv add pushf push cmpsl push and adc int mov push lods pushf inc sub or je mov adc pop or mov jle and cmpsb cmp iret lods mov xchg cltd fwait inc lea cmp js mov and aad mov xor adc scas pop ret ret in mov cmpl rorl sti fimull adc dec popf xchg inc inc cld faddl lahf in orl mov outsl inc fistpll test hlt out aad sub or movsb out lock imulb dec aam add or fwait clc sub add inc stos cmp or push adc pop sysret ss cmpsw xchg je cld ja sub insb pushf pop xchg push inc cmp test lahf jl call out nop mov (bad) pushf fldenv repnz nop sbb repnz scas push fbld jp (bad) je pop out mov test int pop jbe push jbe xchg cmp fdivs and mov fldt xor loop and repz pushf mov stos sbb add lods test inc lret out sti (bad) aad loope dec scas in or xchg popf ffree testl mov mov jne imul fldl cmp sub jno psubsw (bad) lahf lods ja xchg fadds dec pop sar push sub scas push fucomip dec or mov int add pop mov insl bound push mov push ret loop mov adc out outsl lcall add ffree sbb test xchg fstps into addl loop pushf adc mov adc mov fwait ja std mov aam cmovg ds jnp mov sbb das and mov sahf sar cld das cmp sti out sbb sub xchg imul sahf sbb jne mov jb pop test cld push jae pop dec or or xchg out mov xlat pushf sub (bad) lea scas cwtl cltd movsl jb fisttp pop pop add addb and sahf cmp cmpsl jne push sub and aas nop rorb cmpsl (bad) cmp repnz repz mov jb inc push adcl lock ss (bad) mov cmpsl mov jge hlt adc inc arpl nop mov mov jge call lahf mov mov in cmp add int inc lea mov movsl sub pusha inc call adc sub jl inc xor vpsrld dec (bad) sti cmc aaa mov mov pushf or fldt pop mov add or mov pop mov dec popf aam iret xchg mov pop nop ficompl loopne shrb sub mov mov push (bad) adc mov push mov ss inc imul repnz sbb popa into pop sbb jnp xchg adc fnop or inc sarl sahf (bad) and (bad) push dec adc cmp insb (bad) out dec dec addr16 lods cmp aas pop je or (bad) std in loope sbb outsl mov mov adc push jg cmp mov popf jnp das xchg sti jg dec jge sahf (bad) rcr (bad) or repz imul mov add sti sub jecxz cs sbb lcall imul cwtl ljmp (bad) mov cmpsl cmp jne ret mov movsb ljmp (bad) mov jnp das loop jle pusha ds push sti addr16 jp movsb sub int ja adc sub jl mov sub push leave in jnp dec aaa jo jno cwtl out mov pop pop gs les dec jp cmp mov cmp pop push lock clc push lea sbb dec hlt adc fisubr xchg out test xchg or out jle jnp (bad) pop dec xchg (bad) or (bad) cmp inc xchg ds orl in mov push and sub and mov mov rsqrtps les inc shll aad mov adc scas jecxz fcmovnbe insb and sub xchg push jo sbb in out sahf pop pop in jecxz mov sbb add xchg add dec sahf or sbb push adc sub sti dec push or mov ffree cmpsb aaa pushf out mov mov pop ljmp pushf adc cmpb mov rclb sbbl and lahf dec jnp mov jg (bad) pop (bad) jno adc inc jo mov cltd ds pop loope lods fwait rcll popa dec dec aad movb loop lock faddl pop sub icebp outsl mov mov mov mov mov add push push cs or mov push das adcl dec lea lahf ds xchg sub lock mov cmp jnp dec aad mov test fisttp out and jmp and js adc inc int3 (bad) pop inc dec mov xchg cli and in ret pcmpgtb hlt lea insb stos cmpsl xchg loopne fistpll imul jae lds cld xchg add and lret push aas jecxz xor cmp adc popf shlb test xor es mov jg add push popf add mov loopne clc and xchg repnz fisttpll out xchg mov in sbb cmp sub adc pop adc in loopne xor sub cmp pop (bad) or add cmpsb dec cwtl push or dec fistl mov dec pop jnp mov mov lea or dec mov int push xor stos adc mov mov lret pop enter subl mov ja xor stos dec test cli pop in sbb sub jle jg add cwtl cmc mov daa mov or cmp movsl mov in sbb mov cmpl and cs test mov and jnp (bad) (bad) mov test inc lahf data16 fwait mov je bound jl inc push inc cmp sbb int cmp cmp (bad) lock jo sbb outsl test lahf fwait shrb cltd daa mov mov cmp jbe mov jnp ret jle fwait arpl dec (bad) lock jno push adc dec (bad) sarl sub mov pop xlat popl popa mov pushf and jnp adc xchg add add ret sub in or into push cmpsl mov push dec cs inc (bad) not dec fstl or or xchg and gs pop pusha push sbb jmp lea fldt add ret int xchg add test or cltd xchg aas bound das out or or dec adc lds mov mov pop out in popf sbb clc sbb inc aad mov jecxz,pn bound mov mov add cld inc lods mov fcomip xor mov lock cli test add aam ret xchg xchg pop and xor push mov in iret jnp cli lea lcall add outsb ret mov xor idivb ljmp aaa dec xchg and cmp faddl repz andl fwait adc dec sub inc and out aad sbb imul jo mov jp rol ficompl push out cmpb jnp mov cmpsb pop (bad) pop cs ret mov out loop pushf xchg mov js dec adc fwait xchg js mov jmp mov mov pop mov daa rcll repnz jb mov sub in gs sub jnp in arpl fnstcw push mov stos repz push pusha pop xor jecxz push mov and cld jnp jl mov cmp pop shrl lods pop mov iret lods out cld sbb dec push js pop repnz es test pusha sub jle nop or sub xor movsb mov ret jo,pt push push add push pop das stos push aam std and mul dec sbb jo gs push int test xor out or ljmp sub (bad) repz mov xlat xchg jae aam cwtl mov jp sub xor jb cmp mov dec add pop hlt jle or pop xor orl stos cmp mov jg rorl movsb aam or movsb xor push mov out jb push call inc cmp decl call push fwait js nop sbb push out mov scas rorb dec push inc mov mov (bad) pop mov dec rcrl lods adc iret aam xchg pop adc jmp nop jp sahf inc sub sbb push (bad) flds imul cmp idivl jl pop stc outsl mov mov (bad) cs add and imul or bound jo pop rorb ret add cmpsl mov jg sub and or insb dec test lea (bad) les or jbe push sbb push or rcll fdivrs popa ljmp add movsb cwtl (bad) push pop jp inc sub test sti repnz sub not call mov fcom shl inc push cs pop push jl lods das data16 bound mov bound push test xor hlt nop jae enter lretw push fistpll dec std cwtl pop push push xor pusha lahf and or dec ja jge (bad) cmp add or jge jp mov mov pop lahf (bad) cld roll je mov inc movsb rcll clc test in dec cwtl addl jge test inc in iret dec ljmp les dec mov int3 mov imulb hlt int pop lret aad cmp dec fcmovne pop leave jecxz outsl mov sub (bad) push jbe test sub scas mov pop test loop aam mov (bad) mov addl adc adc mov add jnp xchg fcmovb (bad) icebp dec inc fild dec dec and mov lods jns es sbb mov mov jmp pushaw rcrb jmp or aaa (bad) sub add cld pop jle dec jbe jp adc cmp sub xchg jnp repnz sub mul push pusha mov stc mov mov cli push xchg insl jns sub or xchg (bad) cmp sbb mov dec dec mov es mov sbb inc jg jmp imul mov incl push sub cmp jl lods jge pusha enter stos add fmuls cmpsl push lock rorl test cli fwait test sub lods mov rcrl push rcrb sub insl mov into jl pushaw dec arpl bound jb rcl or mov movsb dec mov std xlat js inc bound fcmovnu fidivr inc mov popa jnp js adc pop lret pop adc aam stc adc sub push xor add or jle sub or es cmp inc out fstpt in sarl (bad) outsb inc add mov ret iret lock push loop (bad) into mov sahf imul imul inc pusha ret cmp jecxz or lods mov int cmp cmp loopne dec inc jmp and scas xor sti xor test cmp cmpsb sti movsl fistpll mov rorb or popf sub sub and sbb mov or add (bad) in pop jg leave add xchg sbb prefetch push pop dec adc aaa ret mov and pop adc xor cmp adc pushf icebp cmp jbe adc cmp jmp aaa lret (bad) mov repz pop lods cwtl jae fisttp and fbld adcl xchg pop and pop insl test mov stos in xor mov push data16 iret jge add in lock dec or lock mov faddl enter sbb cmpsl scas aas or jg mov daa cmpsb test xor scas pop lock and xchg cltd and iret dec sar rol out dec or insl aam ja psubusb mull ret sahf fwait mov jnp loop sub fdivrs jg shrl in xor cmp enter stc mov pop push adc ljmp xorl out push fmull cmp fdiv ret cmpsl mov xor (bad) enter cmp push aaa ret sbb inc push pop mov decl cltd cld (bad) adc and sub addr16 jle cmp pop popf or adc jmp sbb pop push (bad) mov add push pushf push xchg daa cli es inc mov cmp mov or test int jae cmp push (bad) loop inc (bad) fdivrl stos hlt push movsb ret aam lods jg subl xchg xchg mov les push inc int jle sbb jge xchg push mov sub mov std ficom mov aas inc outsl xchg jp addl mov outsl mov neg fdivrl dec inc lods xor lods stos add stos push pushf push xchg lcall (bad) fsubr sub outsl imulb jp test add imul adc rolb insl sahf repnz inc (bad) jmp adc in in sbb roll outsl pop cltd loopne ret sub sbb mov xchg dec in add stos shr (bad) xchg cmp out cmp sahf jecxz and movsl pop or sbb jle cmp cmc add sbb pop jae pop imul call mov mov cmp fist jo push lods aad test add fiaddl cwtl lock mov dec outsb mov inc (bad) mov cmp enter push (bad) push sub ljmp or in pop jge add xchg sub aas fldt cld add cs leave inc iret movsl push jo sbb inc out dec jmp pop leave lods mov and pop data16 jmp outsl movsl push pusha sbb dec cmc add mov jmp or gs imul or fldl cmp lods lods add aas dec test push lea jl pushf xchg xor jmp fwait push cmpl mov popf lahf je add insb push pop pop cmp lcall imul pop xchg std imul cmpsl mov rolb mov and fwait mov leave call lsl les mov dec lcall mov mov push jbe pop mov int js enter arpl std mov pop (bad) out imul jp inc (bad) lret pushf ljmp shrb add outsl mov jecxz mov (bad) das (bad) cmpsb xor dec imul jp or mov and lret mov and mov int3 push and dec adc jg push mov jmp xchg sbb mov cvtpi2ps loop xor and and xor push cld mov pop cltd jb daa sbb callw xor das rolb adc inc pop mov push xchg pop jecxz xchg pusha lds dec lea sti (bad) lods das lock clc cmp or ljmp mov aas xchg dec jge add cmp add fild and es pusha pop pop lods repz jg and jmp or bnd mov (bad) sbb sar sub cli (bad) stc xchg aaa mov cmp dec mov loope into in loope hlt mov clc pop sub pop push mov sbb mov sub inc xchg xor jle cs test sbb mov imul mov movq ret hlt outsb mov sti jnp or sbb inc dec mov scas leave jnp mov loopne add mov push ret fcompl jge cs cmp or sahf add or add pop popf sarb pop mov mov sti jmp jmp loop lock test and (bad) pop ret pop or dec pushf hlt xchg adc push nop mov addl call aaa add or in mov aas mov push jg (bad) jp cmp fs cld lret push jno xchg xor adc sbb adc fisttpll je lret sahf jl or fldt mov sahf pop dec sub popf in adc or add (bad) inc mov add or data16 sub xor nop lahf inc mov xchg fmull inc ret scas mov insb aad inc cmp xchg adc in ficoml mov (bad) aaa dec das das sub add push (bad) test sbb pop imul mov push xchg cmp test xor jb adc es pop mov fisubl jb sbb jge out aas mov xor or int repz jle adc sti std (bad) xor pop inc std cmpsl insl fisttpl add out loope frstor lret mov mov pop push cmp loop cmp popf int3 sbb cld shlb xor pop adc mov sbb pusha (bad) mov sub push test movsl leave add pop pushf mov mov enter pop sub scas nop pop movsl push mov mov inc cmp les mov xorl ret (bad) ret mov mov push and stos sub ljmp and outsb sbb pop jge or sti pop (bad) adc sbb push pop mov mov loop lea sbb sbb push lahf test (bad) adc sbb add sbb mov jl push test fwait mov (bad) mov pusha jno fwait popf sbbl and (bad) or jb xchg and mov push psubd push add je dec mov je fwait cli cwtl lods pop repnz mov sbb jle ret jb test xchg lret mov in jg jnp sbb dec push xchg cld push cmpsl mov and and cmp sbb dec xchg (bad) mov xchg shll sbb movsb jmp jbe sub push jo mov mov lods movsl loopne scas xchg rorl fs adc jo adc mov cs mov outsb and lcall nop dec ret fist clc jnp fwait aaa sub (bad) das in data16 push loope es lea pusha adc mov sbb aas ret pop dec pop cld lods jne inc or cs sarl stos lea cmp out cmp jbe daa add rcll or push clc rcll inc ret jmp mov pop je inc mov in das pop es aaa and shll fwait dec adc mov mov mov or fs push jl lahf add push pushl in lock or push in rcr or ret xchg adc jmp adc mov jle mov cli xor cli xchg pop fwait mov mov enter pop mov mov inc xchg subl scas push cmp dec inc jecxz xor xor das clc addl shrb sbb in rcr dec jns jnp mov mov mov out add cs std in add (bad) push xor lods (bad) or add sti pop mov push or adc mov adc mov xchg dec test sahf pop lcall mov lahf out pop out adc jle fadd cmp aaa (bad) ret mov addr16 add dec insl bound push cmpl push fbld cmp jge add push in push cmp ret xchg aad mov mov push push rcrb leave sbb outsl or mov movsb cwtl jno xor fsincos rorb cmp outsl mov mov bound inc in mov lret sbb push loop leave cmp pop pop adc (bad) mov pop pop jecxz imul stos xchg sbb in push dec outsb cmc pushf push (bad) out outsl jg outsl sub les mov push or loopne movsb add mov test jl cs inc aas sbb outsb cmp xorl lahf clc inc loope sub sbb push or jae pop jb or arpl in mov mov xchg pop xchg shll or xor daa sub push hlt out int dec cltd js (bad) cmpsl movsl in lret xchg arpl inc inc mov mov xor pop scas lret mov mov sub scas cmp cmp add out xchg add cwtl push sbb out mov lods xchg and mov iret hlt sbb icebp movsl (bad) (bad) es je pop jmp mov in aad movb xor push push or std stos push es psrlq ud2 add fldcw cmpsl dec mov and dec jp (bad) mov add jnp add out add mov inc jg repz addr16 idiv and clc and mov scas adc std inc inc sub cwtl (bad) pop ljmp ljmp in pusha cmpsl mov dec cmpsb andl daa cmp push xor movsb xchg jle rclb fs cmp ja lods stos dec test jecxz mov mov cmp and mov int (bad) mov das std cmp iret jge shrb mull lret jg insl (bad) adc mov add add mov mov cmp call stc jo fsubrl push add adc xchg (bad) jo and xchg push or push pop addb nop mov jb jae das stos pop sbb stos adc outsl sub ret ss cmpl mov cmc xchg ret xchg orl mov ljmp std fcoml pusha pop cmp pop test mov imul shrl jmp mov push into adc jl cmp mov scas icebp sti mov or loopne inc add adc iret jl aas lods cs sarb xor shll jne clc add adcb or aad dec dec scas (bad) jo leave cld and stos stos jg pop aam int int repz dec lods (bad) mov mov mov jno stos int pushf lahf ret push mov ret push mov popf test lret lods loope jg xchg or inc sbb sub aam mov sbb fsubrl pop dec dec rolb addr16 (bad) adc pushf loopne add sub and fmull jge adc xor movsb lret arpl dec jne jge mov std jbe data16 leave mov cmp inc cmp cmp jmp inc aad sub cmp movsl pop or insb mov jp movsb mov leave or mov dec fwait jae pop jmp xchg mov dec push mov in imul leave and std cmpsl add pop neg enter test aas daa loopne lock iret adc cmp push mov aad stos fs sub jg hlt mov jno int sbb addr16 cmp mov xor std ds xchg push xchg cltd dec cmpl int3 sti mov std cmpsl outsl repnz xor mov (bad) inc mov mov mov mov cltd push imul inc sub stos cmp push dec or dec repnz addr16 repnz rcr or mov fs mov dec or pop popa inc (bad) lods cmp jo loopne push jae dec addl jns pop jp pusha cmp push mov ret pusha mov mov das push les cmp cmp out and inc enter hlt stos jl hlt movsb xor (bad) out insl neg in fmuls sbbl pop stc push lret jp out (bad) in lods div lods add mov pop adc mov loop jo shl cmp cmp sbb pop scas movsb lret mov sbb cmpsb ret addb test cmp int fdivrl pop sbb lods add data16 sub sub and cmp into fildl mov cmp adc mov xchg lret clc inc imul mov jl push (bad) std pop scas ss (bad) mov xor dec iret xchg mov or xlat in push xor dec sub push mov xor int inc dec mov or imul cli pushf inc push push jb jp cld call or mov pushf xor ljmp xor imul xchg adc cli (bad) mov std mov cmp pop mov sti mov xor push sub sub ljmp adc pop (bad) mov cwtl xor cmp pop movsl ret jnp cmc jg mov nop fstps adc js dec (bad) jge fdivl mov jae sub jnp addl push aam push inc mov and sub jge test xor or cmp and cld lea ja cmp (bad) imul lcall dec pop scas and lahf stos lret jbe aad jle fnstsw sub lahf cwtl pushf dec cmp test dec cmp pushf adc and lods cmc int out inc mov popf fisubr mov add std bound pushf test and push movsl cmp insl adc mov or cmp pop jge xchg int pop or inc div cli sahf cmp cmp mov cmp or cmp pushf outsl xchg (bad) jg ror pop jb mov leave out test push xchg push push adc pusha sahf je pop outsb pop bound sub inc or pop sbb jmp pop movsb fidivrl cmp pushf push add pop int pop test pop adc sarl mov xor (bad) mov out hlt (bad) (bad) xchg cmp into lds mov cmpsb (bad) dec repnz leave mov pushf push add sbb (bad) mov lret xchg je in pop add jns cmpsb out ret dec cmpsb pop mov mov and sub out sbb pop jae aad sti mov sbb mov pushf lock roll nop pushf (bad) sub fbld mov leave push pushf cmp (bad) pusha outsb lret rclb jle sarl lods fcoml fdivr es push mov or jg jmp push push lret push push push or stos mov out in dec pop push cmp sub cs cmp or loop jle (bad) push add rcrl data16 mov mov inc mov out mov sbbl lods (bad) mov insl addr16 test mov and insb int lcall outsl or mov jle mov mov popf addr16 mov sbb push xchg fdivrl lahf sub mov dec test xlat std sbb sub push pop stos jo mov lcall dec stos movsl loopne xor divl das mov sahf ljmp cs pop or in mov dec aam mov shr mov sti mov repnz dec adc mov xor push dec hlt mov fucomi rol adc in pushf addl fmul mov or lea push xchg jmp (bad) jo or jnp xchg cmp mull outsb jmp dec jg leave call and pusha mov mov pop data16 jnp call jg adc mov rorl pop lods cmp and pop (bad) call sbb int call mov push ss test fnstenv jb lcall icebp mov bound and scas sbb icebp mov dec add loopne movsl jmp (bad) sti fsubr or mov pop pushf pop xchg ud2 cmp jge movsb push sti cmp xor in xchg ret fistl cmc jg lea pushf daa mov fdivr or push sbb popa mov adc or add ret add (bad) fcmovnbe sti scas push mov fnstsw int mov roll mov mov cmp jmp inc (bad) or mov jno sub stos mov xor inc popl pop or sub add mov insl push adcb xor inc (bad) mov aas nopl imul out pop sbb repz into mov jl dec dec dec sbb insl jmp stos pop shll xchg cmp fisub push cmpsl mov add test ds mulb jns fldt cmp out mov mov (bad) jl jmp stos rclb dec scas daa sahf push xchg addl (bad) in int int dec cmp loop aaa adc jg imul jle sub call pushf enter imul sbb jp loopne out mov or idivl lea cmp mov or lahf push add sbb xchg cs jp sbb outsl push in mov jbe lcall sbb into bound mov pop mov mov mov movl lea sbb addr16 aad and adc xor popf inc les ret xchg fstl mov addl sub cli (bad) rolb jle jne lea pop stos mov cmpsb sbbl jg mov cmp out fsubl xchg aad popf lock cld cli pop fs and hlt lret hlt mov out xchg rolb adc mov sti inc push pop sti mov sbb outsb outsl int repz js lret pop pop jmp push subps or pop fwait in aad mov aas fwait jbe cmp mov dec daa mov add cmp sbb jmp xchg mov popa mov pushf adc aas incl daa or mov aas mov fbstp push jb xchg mov or test jle (bad) or sti dec das mov popa nop (bad) mov xchg imul std pop cli mov cmp in rol push push sub add in enter out int3 lods mov and or dec ret scas icebp mov aaa lock sub loope shll (bad) push stc dec mov ret cmovb shlb mov push aas inc enter xlat jp push lock pop mov fcomps mov lods (bad) jae shl pop std lock and lock andb cmp jl jmp mov inc ja and and cmpsb lea psubb xor push lock dec or dec loop cmp mov inc sub aam mov jnp dec int jg sub mov popf and jmp mov or add cmp and sub aam ss xchg push shrl inc push lret cld jge stos push pop pop xchg fwait push lcall inc and idiv or (bad) jmp mov cmp jbe (bad) dec mov ljmp xchg pop pusha cmp mov (bad) lret nop mov repnz jno (bad) lret add jmp mov inc sbb pop mov inc and shl push xchg dec pop cmpsl jmp adc sbb adc orb sub mov and repnz adc sti cmp jl jecxz push adc add rcrl jg xor cmp stc imul aaa jge xchg push cld daa add adc (bad) jb adc insl cld mov pop pop (bad) add lock xor xchg mov jge or sbbl cmpsl and inc std repnz lock push xor mov sbb lahf mov stos aaa add pushf lahf xor sti lret dec enter mov leave pop pusha jg cmp enter mov lret cmpsl pop mov movsb sub stc xchg mov imul pop jbe orl mov loope jnp push add adc push ret jno pop add and mov mov je push enter lcall out mov icebp cmpl stos xchg cmpl mov lods inc hlt mov leave dec xlat stc inc mov push jl mov jbe xlat push fldl pop pop enter push add mov out pop push sbb mov push scas fiaddl repz or xor loopne add push inc jg mov mov mov pusha repnz enter repnz pop inc xor loopne sub lahf mov or cmp orl pop rclb jns inc loopne popf push push or movsb and and or fcompl cmp jecxz loopne mov out out aam addl cmp dec test cs jmp fidivl mov jne mov adc (bad) mov jge mov or addr16 push out lret inc add xchg adc rorb or push in out jo fcmovb adc fucom and mov sti dec sub mov or xor leave xchg dec jle int3 cld or addb js inc test xor movsl adc lret aam xor cwtl sub aam test inc sbb cmp or or popf add add push cmpsl lea insb xchg popf push pushf pop xchg incb sbb pop outsb push mov int3 mov dec sub mov sbb xchg lea cld ret adc add jnp mov in ret aaa pop push add pushf or imulb lahf jnp sub loope or lods pop incb cmp sbb incl xorl test outsb sub in out push cld sbb orl cmp lods stos pushf inc push adc js xchg in push test push les dec cmp iret repnz sbb movsl lahf test ss xlat out mov mov (bad) movsb test lret nop sub mov add or xchg xchg mov xor cmp leave movsb inc int jg sub jne xchg lcall jg and or xor pop movsb imul ja stos sub sbbl enter iret inc lods jne fsts mov sarl cltd das or (bad) cltd pop push pop enter insl (bad) mov mov outsb or ds lret (bad) aas sbb or dec adc push roll and popf hlt sbb xchg mov ja (bad) xor and fwait cwtl jg sbb movsb aas sbb insl cmpsb push pop and lock mov xor sub andl in (bad) jo push mov push mov dec sub (bad) std push repz test cmpsb (bad) fistp cmpb push sbb mov or sti lcall mov push das ds adc pop push aad inc insl mov jb add push call (bad) add mov adc insb or xor xchg arpl (bad) ljmp xlat js cmp sbb pop sbb add ret lock fucomi fwait mov or in insl mov xor xchg and add mov jmp inc je ss test mov push or scas push push decb loop loope iret rcr mov (bad) int (bad) jb xchg call cmp mov pop test leave push or into dec and sub pusha or mov jecxz mov ret (bad) mov inc (bad) jl mov aam sbb xor pusha mov push mov or adc cmpsl xor dec jmp sarb cwtl sbb cmp inc stos pop scas mov cwtl push sub (bad) fdivr dec sti mov stos sbb jg (bad) or movsb scas arpl cltd rorb out sbb jnp push bound cld dec sub mov int3 mov or loopne orl or sub push adc sbb into push mov add movsb enter addl cs popf sbb outsl cld pop cld mov xchg repz lret inc lock inc incb jo insb push dec mov (bad) pop xchg add or loope pop rolb (bad) in fistpll fldt or pop pushf xchg push ret pushf mov dec push (bad) rorb pop lret movsl scas add sub lods dec dec jp ficom es or testb add fisttpl cmp rorb inc in loopne rcrl jo imul js pop sti js mov inc xorb lods sarb sbb or das mov stos loopne lahf pop add xor loop aam data16 outsb imul repnz mov dec std sub rcl jnp add fwait in std mov cltd cld cwtl inc popa stos in jnp push push adc mov xchg mov (bad) outsl loope (bad) mov fimull in test mov cld ret mov inc cmp out icebp sub aad test adc les jp insb outsb cmp (bad) pop dec mov add std mov xchg pop sub or and stos push and and cmp push jo mov repnz lods mov (bad) add rolb add test adc adc pop mov sbb imul rcrb je clc (bad) pop push clc xchg sbbl int lea rcrb jmp loope stc loopne insl lret or inc stc mov pusha mov (bad) outsb xor sarl lods push jns jmp dec add lret cltd pop out das or sub jnp lcall aas leave sarl stos jge nop in dec decb jb loopne test lret or inc fsubp lret fdivrl das pop jne nop pop cmp popl aam jl lock add push xchg daa push inc push add mov xlat les shr or cli in cmp lods xchg push outsl xchg mov test pop jge loope xchg addr16 adc das dec ud2 mov (bad) mov lea das pop cld mov fwait mov pop inc std lret in inc cld sub jmp aaa dec (bad) popl and ljmp xchg aam stc xor out push (bad) neg sub sarl iret (bad) or sbb icebp jl sub dec inc xor lea ret out data16 mov jl fwait add jl fcompl push in xchg fwait ds and cmp dec jg push or loope inc fisttpll ret add in add inc pop in rcl push dec dec fwait sub pushf jg add std nop inc inc nop or scas sub mov fcmovnbe sti outsb xchg mov mov jnp (bad) (bad) ret add sbb jg dec cmp add sub mov add or mov or fwait jnp sbb sti jmp popf mov push mov lea sti sti xchg push add mov lods gs mov jl lea and adc (bad) pop mov jle add outsl dec lahf or mov fisttpl mov or pop or mov jnp mul lea (bad) sbb jle or inc in dec fwait mov push repz adc in or sbb int lcall push loopne int cmp inc pop push lods fwait adc in push lods and mov out xchg inc add in leave jmp adc (bad) jo lods push add pmulhuw sti daa imul jmp imul bound sti sarl mov push out int3 loop je cmp es xchg push int3 add push outsl nop lods sub pop push sarb cmpsl ljmp bound mov inc gs jb sahf out add lock mov sub jns jl or ret inc cmp or (bad) je ret inc leave out imul push fpatan mov scas fisttpll ret mov mov movsl mov mov mov jmp push stc sti sti nop ret mov adc aad cwtl cwtl push fsubr sti in mov pop mov sti pop imul and cmpsb movsb mov lods sub cs sub cmp pop insl lods and outsl mov xchg movsl enter sbb ljmp std mov into rcll outsb mov test shrb push mov or inc mov mov push push sbb mov mov sbbl dec cwtl rcll jnp in (bad) call (bad) fmuls sbb test cmpsb (bad) insb cld push mov sbb mov push mov or sbb outsl aas fwait dec mov movsb lods divl sahf repnz push (bad) (bad) data16 data16 or mov movsb inc cs jae jo fcoml cli inc jl ror dec push cltd mov jl jne rorb aas and sarb sbb stc adc mov pop leave fimul xchg dec jns adc cmp test lret addr16 mov dec xor in pop pusha jbe inc jg push fucomi ja loopne xor mov push push insl popa cmc pop pushf hlt out add jmp dec inc subl arpl repz int3 cltd xchg push pop hlt or dec sbb aam jmp sbb popa fcom lcall pop push loopne in sbb jge cmpsl cmc mov push fistp push mov push mov fnstenv jno jg int3 or xor mov sti into and cmp jle (bad) xor (bad) push pop add jb mov xchg fildl add addr16 or xor iret or sbb sti mov mov pushf out pop popf mov lods cs xor setg mov mov or das (bad) mov inc xchg or push push xchg pusha arpl push loopne aam cmpsb mov adc ret inc dec mov idivb push fs ret jg outsb inc outsl jo rclb lahf mov dec mov pop mov lods dec lds jbe mov and pop out repnz lret jno subl ret push (bad) enter or int3 dec sti scas adc ret xor push sbb insl xchg cmp mov sbb ss pusha gs mov push jle insb (bad) push (bad) mov or jmp das mov xor insl movsb jg dec push (bad) rcrb xor fisttpl imul cmpsl nop mov inc negb js inc outsb insl dec test push jae test pop stos pop call popf sub or jo (bad) add insl into pop xchg inc fisubr js or lahf and lret dec or sub test mov aas pop jl dec sbb scas and dec pop test adc or sti fstpt stos jnp cld mov icebp dec pop ret pop sub xor arpl outsl cmp loop jl shl push xor jecxz hlt rcrl imul inc mov jns jae mov or aaa fistpll (bad) faddl pusha inc (bad) adc cld (bad) push jp sbb sarb adc and sarl cmp in jnp jb dec dec jge jle cld icebp cmpsl inc or pop cmp jg gs sub pop loopne insb mov sub pusha sti and insb cld mov jmp aam xor lock imul data16 inc xchg mov mov dec inc adc jg or xor push and imul int pop in jg mov pop movsb fmull fcompl jne lahf movsl fdivrl push or mov jl ret int loopne in cmp popf dec push pop mov dec pop test xlat js scas mov xchg push mov test add or lock mov cmpsl repz fsubl negb rcrb inc psubb xorl sbb xor cmpsl sti shr fisttp clc mov sbb pop inc fwait lock adc cmp clc jnp adc int3 sarl add xor lret psubq jge add imul in jg fstl or scas iret pusha xor cmp add fdivrs add sti jl xor mov jns jae push cmp (bad) cwtl scas xchg cmp ffree ja inc (bad) (bad) pop xor stos (bad) push mov jl push jmp subl mov or add pop repnz and push (bad) inc pop pop mov mov dec inc mov test outsl jo clc jo das fist sbb lds pop gs stos sti cmc arpl mov sbb in mov loope pop jmp ret push cmp jo cmp (bad) jg push rolb aam sbb cld ret jnp and dec push and test mov pushf dec push mov lock pushf daa sub (bad) imul idivb daa scas dec mov loop nop mov test rorl xor int lods ljmp push xor xor jl lds ja jecxz push repz sbb sarb jmp das xor imul mov in cmc sub sbbl hlt nop xchg and cmp jge sahf outsl jbe lret fist repz sti loopne add xchg das (bad) dec or mov test sub mov lock pop mov cmp mov rclb je rcrb push jae fdivrl jb xor and add in fdivr mov imul and fist lods in lret sbb add stos jge pop push les mov test imul sbb dec shrb cmp push nop inc imul sub xchg sar stc int3 jnp cld adc scas pop fs loope xorb jg (bad) lock imul xor lods cmp mov fldcw pop decb xlat (bad) pop test adc cli pop rol loop loopne fdivrs cmp pop xchg negb stos mov sbb jl int orl sub in fisubrl jge push popa cmp ret ret pop gs sar dec or nop out insb jae or scas inc dec into clc mov lret test xchg call bound in lret ret mov cld pushf sahf loop sbb jae sbb aas jp jnp add jg popa movsb pop mov or xchg fisttpll pushf mov pop sbb or mov cld jbe jne jl mov in add and or fsubp pop pushf leave cmp rol sub push sbb or mov push cs leave jp push xor adc mov int3 jbe mov adc cmp sarl sarb pop inc outsb int insl insb jo movsb add jmp jns jg adc les aaa pop adc das push and mov or mov imul xor push (bad) dec fcmove mov insl lods rcl lods frstor xor mov dec adc pop adc movsb mov insl cmp or test mov pusha push jge loopne das add mov andl push frstor inc jecxz jbe mov or pushf adc sarb aas test rorl cmpsl adc push cwtl jb sub adc sbb stos loopne lods pop sub divl or pop push enter or add mov outsb or in adc fs (bad) idivb das decb pusha addr16 mov loop and out sbb jecxz xchg xchg jb dec mov test or mov push sbb outsl fidivrl sarl push add or (bad) push push lret pusha loop incl imul ret fbstp repnz cmp jmp inc clc push mov mov lock out pop sbb mov hlt sub cmp insb mov jle or cmp out imul mov fnstsw push jo dec out fdivrp pop addl bound mov testl daa cmp sbb xchg mov rcrb jle out ret pop outsl and loopne dec push movsl movsl mov or scas fbld (bad) lods add cmp add cmpsb cld (bad) mov bound stos mov jp pslld rolb (bad) xor (bad) cmpsb (bad) xor jb (bad) ss dec xchg cli pop repz movsl (bad) hlt xchg repz mov repnz outsl cmp sti movsb ja insl test pop jbe xor insb in jmp ja wrmsr imul jnp data16 xchg leave adc push cmc enter dec add ljmp inc fildll sbb sub repnz sti pop mov insb int push and scas dec leave mov adc roll mov in mov and mov push scas mov and clc sahf daa jo aad xor and jne movsl fwait neg (bad) aaa fdivrs sub and ret add adc sahf sbb mov mov push mov mov pop fs popf (bad) cld or or ret cld and push das push mov inc dec sbb (bad) fcompl scas jmp stos jne cmp lcall ret (bad) mov pop xchg lret mov xchg pop roll cmp sub (bad) fisttpl push outsl sarl jl cmp scas xchg sti lods stos jle push decl sti or jge or ret pop call and mov jo dec das mov jne mov jo call mov mov mov aad jle repnz ret fs (bad) leave insb inc mov inc ss int3 xor cmp out dec fbstp jno rolb popf jmp cmp pushf sbb and ret dec xchg in ss jl or or sahf ret sbb pusha sbb outsl and ret insb add imul adc loopne or ret mov sub lcall cmp lods dec mov xor mov and sbb (bad) imul jmp mov or (bad) loop jecxz repz (bad) jnp jge xchg sti iret bound mov add arpl dec xchg (bad) jge add dec push and and lock adc fmull xchg test sub loop or lea clc cmpsb inc push (bad) push (bad) je cmp mov push shrb mov mov pop or push bound mov sbb cmp je test loopne hlt pop xchg popf xchg xor sbb mov mov (bad) dec in mov and sbb lock xchg sbb sub ret out jle xor adc xchg pop adc mov fdivrs mov push lods add hlt xor imul sub or pop mov xchg les test lcall mov cs lcall xor ds lfs lcall push jp jo push lret je cwtl insb test mov and (bad) (bad) lcall xlat push cmp sub loop lret pushf sub lods shrb loopne xchg das sarl pop cmp pop sti ds lea sti mov mov arpl cmp xchg jmp in push cltd jo pop add mov or dec add fstpl and jb mov xchg adc mov sbb xchg push jo stc pop mov pop or ret ffreep sub jg cwtl pusha lods xor cmpsb jnp push and fwait nop and test pop mov arpl pop inc jl pop dec xor lea pop (bad) push jns jge mov or mov jle aaa aaa test std push xchg shrl out jmp dec mov aam inc js dec int3 lock or sarl test nop adc jle adc mov in fwait (bad) mull out cmp test push ds je jne test or and jle xor add and stos mov push gs inc ss jg xor inc push or cmp mov insl fistpll in dec outsb enter xlat dec in fsubl in push in stos cmp inc mov mov shlb add ljmp (bad) in sbb (bad) cwtl mov cmp and mov pop mov stos dec mov jle and fmuls sarb sub idivl push and cld add jno push jnp loope sbb sti xor test cli clc (bad) add mov mov mov pop lahf int3 sbb stc push jle test mov cmp lea fimul sbb stos sbb stos sti and fwait sbb ror jl nop pop jmp shrl pusha cmpsl fimull sub lret lret jecxz sub shr jne nop xor xor fisubl lods jecxz addr16 mov adc das xchg sub xchg jle negl fwait (bad) push jmp adc fdivrs cltd xor mov pushf push loop gs xchg mov mov cwtl aam in push cmp xchg mov sarl mov (bad) jle aad imul pop add pop enter (bad) sub movsb sub fwait nop add (bad) fildl outsb cmpsl test jg mov out jg sbb loopne jl xorl call insb xchg jge aad hlt sub and repz fcmovne pop cmp sub movsb jg js cli pusha or push fbld jnp jg jp sarl es test xchg (bad) dec add jmp mov pushf stos jne and jle lods lea mov jmp fmull push dec inc stos jg jle aaa shrb add nop test rcrl xchg je push ret push mov fwait xor jns xchg pushf push test out mov inc mov fbld sar jl push movsb jo inc loop xchg pusha stc jno jmp orl outsb sbb fwait pop test cmpsl xlat mov or fwait cmc std aad hlt xchg mov or sbb addr16 or lret push xor movsb or pop loope adc and pop adc sub (bad) xor fcoms xor dec sti mov jo lods ds fcomps inc mov push dec mov andl jecxz cli or pushf out and fs call (bad) jp pop rorl or ss mov push (bad) xor mov imulb lret mov je sub in inc cmp pushf pushf mov mov in sbb cmc imul mov jl or loop or adc and pushf cmp add add int sbb das decl inc sbb add in lods inc mov mov mov push dec sub (bad) mov sub pop sbb jnp jmp mov adc pop enter loop pushf pop or into cs add xchg ret add or jmp bound arpl rclb popa pop lea push pushf mov mov pop ds push sarl cmpsl cmpsb fwait popf orb push cmpl andb push (bad) adc popf xchg das mov cmovae pop in mov movsl ficompl pop je in jge int hlt bound mov ret subl fildl xchg lret lret or sbb jle ret jp sub lret dec jns inc das sti (bad) mov out mov mulb add push pushl push jb or movsl push das lcall cs adc stos fdivrs lcall push in push cs add mov nop sahf push loop ljmp sub clc adc mov jle shr pop or mov pop jmp mov mov (bad) fimull lea cmpsl xchg ret arpl fdivl mov push lock test sub imul and and lock out dec and xor xchg gs outsl jg mov lock and je cmc ljmp adc sub xchg push (bad) clc daa mov pop inc int dec jg mov inc add and mov push es jmp mov pop sub fbstp sub fisttpl adc aad adc xor je adc sbb jecxz loopne test test aas ss cli or add sti aas lods lods int mov mov sbb add mov mov or inc add and aas dec adc xlat mov aad outsb jne icebp popf lahf call lret cmp leave push dec bound mov aaa and mov lahf (bad) faddl lahf jne add inc jecxz xchg arpl sbbl and mov das mov aaa fdivrp jecxz xor mov ret xor pushl movb je jmp fmull arpl mov mov mov cmp or pop pop add mov xor dec xchg in mov pop lret fcoms sti mov or sbb addr16 lahf sub imul push std add lahf sub (bad) mov push push dec jmp mov push aam (bad) or xchg iret sbb xlat cmp xchg jnp int adc or lds ret jns dec popa jae cmp (bad) and and int3 fmul mov in fsubp jg mov lods fs sbb (bad) xchg lods adc mov jmp out mov sbb add imul sub xchg nop xor in or decb sbb push pop push xchg icebp xor insl dec ja xchg or add push in adc sti push jns cmp (bad) adc push ljmp scas xchg and mov rcr or adc (bad) xchg iret insl out mov bsf sbbb fiaddl jg mov push jmp movb arpl inc add lods pop inc jg,pt mov cmp sbb repnz mov dec repz (bad) scas push xchg inc pop sbb mov push inc sti int3 inc mov fisubl stos inc mov sbb pop jne jne cmpsb repz aas fcmovnu in aaa iret in push test sbb cmpsb lahf imulb dec sbb out jae jo addr16 ret decb inc jl,pt or sub jle out cld (bad) push xor adc pop fsubrl jl sbb (bad) pop sub and jge jnp inc sti jle insl mov dec pushf xchg lods cmc push lret ret sub ret jg sbb aas adc xchg aam pop add lock cld add daa pop lea push pop int3 push jmp nop or xchg dec (bad) sti and out cmp mov icebp leave in xor mov lods mov adc popf insb ret jmp sub shrl xchg ret push loop sti popf add popa sub outsb lods jmp pop (bad) push bound mov imul cmp fdivrp dec xchg push jnp xchg push fidivl jmp stos lret mov scas lds testb and lods add movsl fdivrs lods xor lods roll lea push jb hlt movsb lods dec pop and (bad) jns les insl sub sahf lea push jne pop scas outsb dec mov aas xchg out jb clc sbb jp mov loope mov pushl mov inc push or test cli jge idiv add (bad) lods das lret fldt fcoms sar mov rcll add sti pop fs mov jl cmc (bad) fstpt jl (bad) (bad) dec jnp,pt xchg aas lods jle sbb xchg enter cmp (bad) lods jge pop lods fsubl (bad) sti or (bad) cmp jnp jo lahf adc push adc (bad) (bad) daa (bad) repnz idivl push dec jnp xor je mov rcll mov ljmp decb mov pop out xlat push ja dec mov gs in jl sub dec fwait les or pop sbb imul cmp mov pop (bad) mulb mov js xchg jmp push stos push js jnp bound xor push jno ljmp jns mov jl or xchg (bad) sub test cmp add mov ret sahf inc jmp test cmp sub xchg mov push mov dec mov or loop fistpl (bad) bnd push or push jmp sbb iret mov cs stos sub or out dec mov mov sbb mov cmp and and sbb sarl pop lea jl mov jecxz mov aaa loopne or pop cs out loop mov cmp dec clc jne movsb and adc in dec or (bad) das ret test or pop lock mov nop pop pop cmpsb ret test cmp xchg push push mov pusha aam mov adc and mov sub xor mov sub push jp push or and add sti xchg rcrb sbb or mov cmp popf int inc rcrb pop or clc sub les (bad) mov fstl lds ret mov sbb pusha dec sbb stos divl movsl adc inc or push mov (bad) lock jg enter shlb pusha cmp pushf or movsb inc mov aaa mov daa cmp or rdmsr out stos xchg sbb cmp jg jg std xor xor fwait mov nop pop jge inc or xchg das pop or xor gs cmp les jnp sub xchg pop mov xchg and gs out pop xchg pop fldt cmp sarl inc fwait adc popa lret or dec add (bad) je xchg cmp ja rep (bad) shlb lods pop cmp lods sbb scas and orl mov mov ds mov pop cmp loopne ja (bad) aas imul test pop lret jnp (bad) nop mov mov shrl xor out mov movsl cmp lods push adc mov mov (bad) mov add sbb cmpsl js cmp mov cmp std pop int3 cmp jle mov loopne sub out out jno test dec jbe mov rclb icebp in loop ret pop (bad) adc (bad) jle (bad) iret fdivrl rcl loopne sbb push jecxz add sub add imul cmp inc cmp cli xlat fbstp or repnz fwait ret jae addr16 mov aad cmp or stos pop test ret jns dec xor test test (bad) push mov subl push pop mov xchg xchg jnp cmpsl jns mov dec cmpsl jecxz pop dec pushl fistpll xchg mov nop (bad) or xor scas cmpsb mov mov jle bound mov ljmp js into outsl dec test notb sar or aad add movsb es imul js shr pusha dec fsubl or clc dec (bad) mov pushf dec add insl imulb nop mov subl es ds jg out movsl (bad) mov cwtl mov jbe rol bound dec jo mov jnp sahf sbb js scas outsb insb jl pushf mov xchg iret or xchg lcall lds sarl mov mov add xchg sub lods xchg adc xchg adc daa mov cmpsl sub jmp push cmp add push out popf dec lods int xor xchg add push sbb mov lret or pop es cmp add mov aaa jp (bad) mov push dec (bad) leave mov mov lods push nop dec mov sarw (bad) js ljmp and or jo test fbld daa cwtl push xchg imul adc pushf push insl mov clc jecxz or in xor pop cmp fcoml in mov loopne roll xor jo sbb (bad) and fdivrl cmp out cmpsb jnp ret and adc xchg lahf (bad) lock loopne fildl cwtl lock sbb inc mov pop loope repz cld mov stos push imull xchg add in mov and lock js stc fimul (bad) cmp sbb sbb mov bndldx fnsave cmp dec pop pushw repnz stos std imul js (bad) sbb loopne sbb in xor in and (bad) xlat mov push mov andb lahf xchg int3 or or lahf xchg and mov notb jne lcall xchg lods int3 notl mov clc sbb mov pushf ljmp xor call (bad) (bad) xor adc aaa das outsl pop dec call fisttpl mov sub cmp push xor mov sub jo js leave pop or pop dec add mov and je je sub cmc dec popf mov js,pn in push pop adc ror scas ljmp lcall add or mov ret cmp push push mov lods outsl imul xor jb and imul pop cmpsb (bad) shrb fsub repz rcrb repnz mov cmp call sbb int pop fstps or lret aaa push mov scas (bad) lcall call inc icebp addr16 cmpsl das push sub (bad) rorl adc das jle idiv fprem ret or sub dec push jne xor or fnstenv push adc xchg cmc and in add cmp bound std stos in jnp push inc jge lcall cmp adc inc mov xchg fcmovbe rorl mov adc sub xor push sub (bad) mov out in cli loopne dec es xchg sti mov (bad) cltd inc inc clc mov lock jmp (bad) add push sub jbe jnp lea cmpl test ret hlt or fnstenv push xor lcall (bad) scas (bad) pop testb into mov mov push and into dec fnstcw push or mov mov mov lds sti mov fucomip cmpsb scas pop aaa inc rcrl xor adc dec pop sub cmpb adc sub iret adc or jg int std shlb push (bad) cmp mov mov sub das jge push outsl test (bad) cs push mov sbb mov push (bad) sbb pop lock push adc sbb pop mov or mov or loope in in repz sbb and push loope hlt mov icebp test sbb xchg inc pop push cmp lcall outsl push push dec inc ret mov pop stos add cli or add aas fiadd aas fmull jg push stos pop adc cmp add add jmp in push adc dec (bad) iret jo sub mov imul or jnp xor push (bad) cmp add sub int (bad) xor mov cwtl sub or (bad) pop in ret xchg int3 int (bad) pop jge,pt mov pop or cld and or imul cmp nop sti mov (bad) cs lods mov ljmp mov stos or xchg jb mov outsb in cs or out fsubrs popa and jno imul (bad) neg cld je jle jmp out cmp fs sbb ret or aad pop add out fbstp lods cmp sbb sub in jp pop in jo ret jg push push fnstenv mov mov mov mov jae aas je iret add (bad) outsb cwtl add decb roll xchg sti sub ljmp mov push fsubs jg sti sbb and push push (bad) mov mov movsb dec shrl inc fisttpll (bad) jle scas xorl xor es call fdivrl jo mov test fbld cmp pushf xchg (bad) push mov dec lea sub push mov pop jnp mov jnp addr16 mov scas xchg (bad) cmp xchg xor mov lcall ret push mov dec mov inc scas jmp iret jecxz pop (bad) cmp pop popa push xchg mov inc or add mov mov pop (bad) sarl es vphaddudq sbb (bad) movsb iret or or mov fsubrp testb lods sub push ret lea int3 lahf (bad) mov jmp push sbb mov cwtl loop cmp jns inc pop cltd hlt cmp std fstpl std mov push push xor and mov ret mov and jg adc cs and movsb pushf js sub add mov sti inc mov pop ret int or lret sbb stos jns adc pop lahf je aas in lock push lods jnp leave or pushf or mov pop mov mov popf (bad) lock or fstps xlat pushf in rcrb inc push add or cltd sub cld (bad) add ds or sbb stos pop sarl hlt cmp mov aad movsb jnp les adc add sti ljmp ror adc fnstsw int or ljmp sub push cmp inc nop inc mov and adcl hlt int test pushl pusha jg loopne add jns stos or push imul pushf push arpl stc push jae icebp aam arpl hlt jecxz pop fistl push dec stos lods mov lcall cmpsl lret jg std scas mov mov out push mov jmp adc lcall and (bad) shr xlat out rorl cmpsb add lret fwait ret imul pusha inc in in in nop mov fcoml sbb (bad) sahf bound das xchg mov mov loopne xchg loope (bad) dec sub cmp pop sbb xchg mov or pop add mov lods mov rcrl push call out push inc dec outsl packuswb outsl pop dec outsb jo or aam mov mov fwait sar inc out push push and cmp or movntps cli or adc xabort or rorl (bad) pop mov or cmp sbb ss sti mov mov sbb push sub add xlat lds fadd lret loope int3 push (bad) jbe (bad) (bad) std movsb add mov jo sub or jecxz pop push pop xchg add and loope pop inc loope nop xor mov aas cwtl mov mov pop rclb add sub and adc std mov int std pop pop sbb int3 daa cmp add gs pop push or inc (bad) jae cld xlat xchg jnp comiss or xor pushf xlat mov imul je cmp shlb push imul sub mov popa or xchg fs fsubrs mov aas pop lea cmp outsb push or (bad) sub pop iret aad mov in outsl enter mov xbegin sub stc push mov cwtl shrb outsl bound jl hlt push test jae jae test pop and jo ljmp ret leave or mov mov mov rol imul rcrl and ret jns dec or push pushf pop push dec rcrl sbb lods loopne jp les pop cld clc sti add jae lods cmp loop rorb jne into xchg sub insb pop int add fldl aad push addr16 sahf and mov or aam xorb push xchg ret movsb idiv lahf sbb adc shrl sti fbld add lcall das das jmp test testb out mov push adc insl jnp out inc repz sub lahf jecxz iret lret adc pop (bad) mov cmp and ds js leave (bad) jno pop nop or add mov (bad) sbb or jb sbb sub outsb cmpsb mov enter fldcw in test fs jb add xchg xor fwait in mov jge adc btr test adc lock int cmp fwait cli pop lds add jmp xchg popf sbb in stos pop adc mov or call inc and outsl rorb sub sub dec xchg dec sub ret dec mov dec (bad) cmc cmp jge inc mov dec inc cmp or mulb inc cmp push mov arpl decl sahf repz stc ficom hlt sti cmp in mov xlat push arpl and in sub out xor jnp (bad) mov in pusha stos aaa or pushf mov int enter (bad) mov fs out mov sbb ret pop leave pop nop in je jnp les xchg mov cli daa lock pop std repz cld adc jge cmp mov ds (bad) cld pop rclb inc jg sbb ret insl xchg hlt lret xor pusha pop adc hlt mov jge orl pop cmp cltd xor lods enter je fwait jl jge sbb xor xchg (bad) or mov sahf mov or push add dec loop cmp adc sub or jle gs xchg (bad) cmp or lea pop popf insl hlt ret add xchg push cmp jg (bad) pop sbb ret jb add push sub (bad) fisttp jecxz cwtl lods aas cmp mov pop dec js and imul (bad) jnp pop sahf cs iret dec pop es stos push mov jge cmpsb add add daa xchg jecxz jne pop lcall mov sahf xchg mov mov int3 or push cmp mov iret inc push pusha mov and scas add sub insl imull (bad) or (bad) imulb nop mov or cmp iret mov or sti loopne push add aam add push fadd adc lcall pusha mov sbb adc shrl sahf into cmpsl pushf fbld loope jl std push jge iret cld insl (bad) cmc jns push jb into xchg sub int xor cwtl xor xor sub cmp jne push enter sub call cs test xchg add ret or lret or rcr (bad) and popf in sbb pushf pop jle sti push mov insb cmpsb adc push mov sti sbb fcmove movsl (bad) and adc imul mov and inc data16 (bad) sbb sub lods loopne out (bad) dec xor cs push xor or pop lret xchg les dec or pushf add sti mov int3 cmp getsec or sbb xor iret mov mov sbb and repnz negl arpl xor or rolb lea jbe mov push ret (bad) (bad) xor mov adc push (bad) stos jae pop push out punpckhwd lcall add inc lea mov add lahf pop pusha jg mov push jecxz in mov mov inc cltd push out dec data16 pushf imul lret pusha imul jge (bad) xor stos sub int xchg das ljmp push and mov lods mov jnp and dec lahf fs sti clc fwait scas test add lea jg sbb jl inc std bound aas jnp lcall cmp test (bad) mov pop jl mov addr16 inc pop jns or cld pop pop std fsubrs rol lods loope mov cs dec aam (bad) fistl pop inc int3 dec ficom jl or lds movsb sub scas arpl shr mov jae sti cmp mov rolb test maxps subl push bound add pop mov xchg or test cld cwtl sbb pop cmp jl lea mov arpl xchg mov add cwtl and mov sbb mov lods mov popl push adc sub pop out rolb jecxz or lcall lret push (bad) jno add and cs int adc shlb push sarb std fistpll ret cmp or xchg popf sbb mov cmpsl pop nop add dec mov inc jb sbb jmp mov mov add jp rcll adc push cwtl or and jne jg cmpsb test es in (bad) xor cmp sub sub fistl pop dec bound lahf dec xchg je mov test xchg push cwtl sub jbe (bad) jg jge cmp enter aaa mov adc mov aad and pop stc hlt outsl jo stos jle or daa (bad) lret mov sub sbb and jmp lea cli pop into neg push scas outsl clc aaa test mov sbb and jne pop cmp push aam sub shlb lock xchg hlt fistpl test fs stos mov mov (bad) or rcrb sub scas and nop pusha or mov dec insl (bad) pop inc push mov out inc sahf jl add pop sahf outsl push mov ret inc cmpsl mov mov cmp pop push dec aam sbb sub leave push xchg xor sub or ret repz out lods out inc mov hlt cmpsb imul add mov imul sub cmp popf jnp jg divb xor dec jp inc push jmp xlat insb test push mov cwtl or pop les jno fcomps xchg outsl cmpsl pusha mov push (bad) cli imul jp xchg mov xor les inc cmp insb stos push mov mov xchg ja adc push inc jmp bound sarb cmp xlat bsf stos fnstsw leave mov adc dec xor fcomps mov mov jmp pop mov push idiv iret lods bound push in imul mov mov add aas loop outsl dec pop pop out mov popf or pop or mov push sbb mov dec push adc push jo pop stos sbb cmpsb sub add xchg mov mov and dec push jge push dec or sahf pop imul pop dec ja std pop lret add and test fmulp cmp repnz idivb dec test fs adc (bad) xor sbb or stos ficompl xchg mov sub adc push stos in out je popa notl xor add pop scas stc adc iret lods rcr enter pop push gs iret xchg jmp jo mov (bad) xor mov jmp push mov lret icebp ds lcall outsb notl push js lds pop jecxz in push xor jmp push push jecxz pop stc xlat pop js or bound jl lods cmp jb xor in fcmovu mov cmp jns pop pushl ljmp call (bad) sbb adc repnz cmp xor inc cmp pop mov in jl iret lea fistl adc mov stos dec dec dec or bnd lret push dec lods ljmp leave push movsb sbb mov es xchg jmp xor out in mov sub and jle mov iret xor push sarb rcrb pop jb movsb push rcl jno cmpsb repnz push sub (bad) mov popf dec aaa jecxz popa ret sti push fwait mov pop pusha or stos mov dec lret jp cmp fstpt adc pop xchg in aam cmpsb mov jb and add nop in mov stos and add mov jbe pop jbe pop mov aam sarb inc (bad) inc sbb faddl cmp int imul add dec add jge mov dec xor sti mov inc test mov inc hlt jecxz adc push push bound adc jo fwait add mov bound jbe in adc mov into je adc mov int (bad) xchg cli xchg outsl lret loopne adc and leave inc les push daa pushf add add loope cmpsb mov sti inc roll cmpl pop mov sahf ret (bad) mul push mov push or jecxz add pop test fmull mov test jo push mov jmp dec fistp stos out pop or xor cmp mov nop mov mov pushf push decb cmp or jb push aaa xor or rorl test andl fldcw lods std push nop dec mov ret je jae jp addr16 jnp lods loope popf test pop bound dec iret cmpsb or fwait arpl jo jae cld or pushf cs add in and or xchg sbb int cltd inc cltd pop lahf sti out mov adc sti mov lahf sbbl (bad) mov std or jbe imul xor sub jp push xchg (bad) (bad) xor pop pushf add push jle add sub cmp scas loope jecxz jge jnp pop ret add jne jne xor outsl xor (bad) insl inc adc xchg flds cltd stos hlt mov xlat arpl movsl ffreep mov mov push push or xchg ljmp jnp out push or xorl inc repz icebp push jnp loopne sbb decl mov xchg mov lret jge out iret or inc or pop adc and or mov imul call ret push dec push pop bound scas js (bad) imul (bad) xchg push hlt sub scas in sub pop scas cld jo add roll mov push push bnd push mov mov clc outsl sahf xchg or imul stos ljmp mov ja imul fsubrl and lahf mov lock bound sbb fwait lret sub mov xchg mov movsb xorl jb xchg loope aam js pop xchg adc enter or pop pushf jnp xchg mulb push sub dec lds lldt aas fildl sub push inc lods repz fistpll std cmpsb xchg fcmovnb or (bad) hlt sti jno dec add (bad) je inc push and mov pop in sti push xchg pop inc xlat subb mov mov daa jae (bad) pop stos andl jl mov inc pop sub and push (bad) jnp int3 (bad) push ss or add bound dec (bad) lds lods mov add add mov ljmp imul dec addl push fsubs fildl dec in xlat or (bad) and lahf add cmp jb mov int mov mov jg add aas pop test imul mov or loope mov xlat lcall sub imul xor push addl int3 jnp dec (bad) mov es lcall add fistpll stos and jge (bad) add mov sti in push cmp je lret mov nopl cmpsl orl push gs sbb dec je or in ret pop pop incb push int fs cmc shrb pop pop aaa jecxz mov pusha add sahf mov dec push mov cmp xchg mov jg (bad) mov xchg jnp test push jnp rorb and out mov pop or fstpt adc (bad) lods or ror testl and jne xlat cld and scas ret xor add and inc jp and mov sub (bad) and mov lea mov pushf sbb jp rorb dec add pop jmp sbb imul (bad) cmpsl setp mov fwait insl cmp std dec (bad) lahf push outsl push mov les pushf cld dec xchg mov (bad) xor imul popf and lea scas rolb add xchg cmp inc lahf push int3 or and xchg ret sbb jns jne (bad) ret andl sbb (bad) lret add outsb and mov int adc lret or jmp in fucom mov das arpl mov (bad) inc imul push fisttpl daa adc shrb insb ds or jle adc inc and cmpb in pusha add pushf outsw cmp cmp or (bad) jle pop add cmp testb inc mov mov bound stc fwait xchg mov or jg xor mul xchg jg mov jle call das xor inc mov iret hlt fwait cmp fdivl or cli or loope sub mov mov jbe jecxz sarb into dec mov cmpsl test xorl (bad) add pop pop std push add int stos hlt add mov and jge iret xchg mov mov into iret in mov test data16 adcl (bad) lret cmp cld loopne sbb int3 jo jo jg call mov sbb xor pusha mov mov xor int3 scas sarl add mov xchg jp in fiaddl jb xlat movsl add pop or adc and test ret jne push inc pop push jle jl or popa mov scas push xchg rcl bound cmp std cmp out adc in movsl sbb test add (bad) mov xor aas push cmpsl adc mov pop int jnp sub pop shll nop fisttp adc mov int pop push (bad) dec repz addr16 sahf ret mov dec pop aad sub imul popf inc data16 or xor mov fisttp fadds lret adc xchg or aam mov push jbe mov and fwait jp inc xchg push fcmovnbe (bad) cltd sarl push sti mov inc xor les mov insl call inc or lret rol ret mov xchg xor sahf adc jo das cmpsl loopne movsb inc rclb jb jl xchg mov mov xchg pusha jne jnp cmpsl add push addl sub xor lret aas bound lret cld orb fldt int3 mov sahf cmp mov loopne cld decl sarl mov add cmp push push jge sti aad repnz and bound sub or arpl mov add test push sbb sbb mov jecxz inc jmp sub add neg rorb rorb pusha outsl pop int pop repz (bad) ret add scas enter pushf jnp mov adc add mov sti cld mulb inc in inc rolb je jbe movsl dec pushf gs jb xor jae es jg push add push test mov imul lcall fstps mul int sub out les jmp rcr arpl mov insl dec jg push sub mov xchg imul cmp pop jmp mov mov test lods mov mov rol lods mov sti (bad) jle scas jge int cmp test sub add jecxz cmpsb push sti dec cld mov xchg das loop and push push test push and pop movaps jecxz mov add jecxz (bad) add xchg push ljmp loopne (bad) dec in ret lods fcom lret push int3 jle ret (bad) nop insl mov xchg or clc push or push insl or mov je or jnp cmp push mov stos jp jne pushf mov shrl mov bound cld lds mov sub mov call sub cwtl aaa sub cmc stos insb xor stos mov mov (bad) (bad) hlt sub ds jle jg ret lock sahf and (bad) xor roll scas dec add lcall push dec inc pop mov and loopne (bad) jecxz bound mov in xchg jg,pn sub xchg sti fwait jg sbb lods insb cmp push push mov pop adc stos mov jnp das aad sti cmp outsb cmp xchg lock dec mov mov popf sbb sbb push jnp jle cmp lahf xor fnstenv push mov push imull fisttpll lret cld or adc dec jle cmp sahf push sbbl xor sub sbb dec shrb mov imul ret pop pop xor leave xor (bad) jg ja pop enter jl pop mov into mov push cltd jb xor pop or enter out lahf sbb cld iret mov je sahf bound add push jnp call rcrb and push or in dec ret jnp cmp rcl lock pushf in fcoms rolb cmpsl fisttp dec pusha add daa and mov arpl inc jns inc ss movsl stos aad add sbb cmpsb adc push xchg push or and add mov jl data16 imul cmp jle cmp cmp xlat (bad) jns xchg jecxz ret adc pop pop jg mov mov mov or cmp ror loopne cmp (bad) loopne add pop inc push mov dec test push xor pop fcmove loopne hlt fwait add jae cmp popf xchg and jecxz and movsb cld cmp or repnz lock jae push adc xchg or in adc or jo divb int ret sti std popf insb cmp jl (bad) jge mov ljmp inc push cld pusha xchg push call pop out pop lret xor (bad) pop pop enter or test sbb aam mov std cs mov xchg imul lea iret cmpsl (bad) ljmp nop cmp jo and adc add nop xchg mov xor push subl jmp inc mov test cmp je cltd cmp adc sbb cmc inc xchg inc or cld imul adc jne and fwait in mov or add nop outsl mov flds hlt cmp push popa hlt nop stc cmc inc jae (bad) iret and push rol in test mov and repnz gs pop stos mov dec test or add push cmp setne sub xchg push xchg ret dec xor fsubrs js jge and xorl inc xorl sti and jns mov push lods orl ja mov push or dec and cwtl sbb push addl or mov insl sbb jo push (bad) add inc movsb mov addl jns imul (bad) cmp mov adc cs jb mov sbb fcmovnu insl adc cmp push adc push dec jmp and xor popa jp sub sub movsl into rcrb xlat sbb fimull push ss test lods out or (bad) jl sbb idivl and fiadd ret imul ficoml clc dec xchg cld xchg (bad) mov int3 insb shlb mov stos mov add fistl pushf fldl in mov dec xchg push fsts cmp or sub mov pop ret mov mov sub sbb push idivl add xchg dec add mov scas ljmp ficomp notb ret lahf mov (bad) cmp xor mov (bad) xchg jge js cmp inc mov fdivrl js xor sub iret loop and push cmpsl and popf cld clc mov int out inc cmp dec inc xchg pop pop mov inc mov mov pusha cmc xchg push rorb rol mov out imul in data16 hlt movsb lock aam cmp xlat inc jnp fisttpll jno lret js test xlat cmp (bad) cmc push or or dec mov repz inc or insb dec cs jge sub bound push ljmp fucom sbb fwait rcrb jb lcall aad xor mov adc mov jo flds inc nop pusha add xchg jge enter xchg and add sub shl push sbb cmp mov jl mov popa cs or mov aam add (bad) mov aas cmp and adc and jl mov scas dec (bad) xor shll add (bad) inc fsub test (bad) (bad) xor lahf sub fsubs jo cmp addr16 loope in negb movsl in ljmp lahf test lahf cmpsb shrb or outsb mov rorl inc cwtl adc push in jl xor lods lea adc dec aaa mov nop imul fiaddl aad mov in mov adc stos dec subb add das cs or push (bad) shrb or vrsqrtps lcall movsb or cmp cmp pop lret movsb cs repnz cmpsl and stos fwait xor mov pop push sbb and (bad) or add mov (bad) outsb fwait add push ret cmp xor cmp (bad) cld and add cld or cmp (bad) cwtl call add divl lret int jp inc jmp imul push xchg dec and outsb incb subl adc jmp lret cmp mov fcomi js adc jnp add xchg pop mov int3 pop sbb std mov outsl sub inc push mov pushf sbb fldl jg or notb or js dec das (bad) sub pop push ficompl bound xor jo out nop jp pop loope popf jo sub sbb add iret or push sti nop or sub add sahf sti or pusha adc cmp cmp add nopl pushf jne mov fistl out sbb aad cmp cmp dec or or ja,pn and cltd data16 mov push push mov imul and (bad) nop and sbbl orl (bad) scas ljmp push xchg ret sub sahf and (bad) jo add adc mov jne mov (bad) loopne adc popa in add mov and adc (bad) lret push mov sti mov sbb arpl (bad) test scas mov mov shr incl push mov xchg push push sub imul push mov and fwait jecxz pop stos or ja inc and rclb in push rcl xchg pusha mov repz mov and lret mov jecxz push add dec or inc push pop (bad) (bad) (bad) lahf jbe sahf clc fiadd test cmp test fs push xchg jnp mov or cmp int mov fdivrl jnp cs cmp popf fs fnop movsl (bad) mov adcl or lcall pop cmp hlt shrl idivl repnz movsb ja push addb inc add dec sub int lcall sbb insl fiadd cli jnp sarl pop cld cmp xchg fcoml xchg dec mov inc loope leave inc lds and lahf nop lret add jo cmp cld mov dec add imul ret mov inc xor mov or push adc jle clc jle int push and or daa dec mov nop mov mov pop fnstcw xchg push stc ret jg cmp pusha sbb repz js fcmovne and or pop xchg loop sub push rcl and mov and mov int sti jo iret iret roll sbb cmp loopne sbb cld (bad) or fisub insl and call mov and mov pop mov sti mov imul mov cmp xchg insb jnp out sbb and das fwait es jbe pop cmp mov int repz mov (bad) xor (bad) movsl out add int3 pop ret rcr cmp push cmp sub (bad) push mov das iret leave ret pop xor lret mov push loope jg cmpsl lahf daa ret sbb or int rorl dec pop jecxz arpl mov clc aad fwait mov (bad) popf std mov in cmp (bad) mov ret inc dec push pushf call (bad) (bad) dec jnp mov orb mov pop ret enter sbb rcll jae adc ret cmp sbb jp dec jp les sub (bad) out shrb mov and mov ja lret test sbb inc cmp jg mov out xor jecxz insb shrb cltd adc mov sub mull fnsave mov adc sub lock mov mov pop mov cltd (bad) fsubrp mov iret hlt jmp add sbb push pop mov daa cmp xlat mov mov or inc add nop cmpsl mov cmp outsb and aam mov xchg mov sti dec das mov mov rorb mov sahf cmpsb lahf xchg mov jbe fidivr mov pop mov (bad) jb adc mov aaa push mov jnp (bad) sti js aas jnp (bad) stos inc push xchg mov lret lods es orl stos and bound add sbb pop jb mov mov jmp das dec popf dec shl sbb dec mov xor leave and xor popf sarl (bad) sbb push rorb mov inc push xchg dec or stos add sahf mov gs dec sbb (bad) mov xchg in jp lods insb mov leave rcl or mov insl cmp rorb push inc xor push pushf je dec imul movsb sbb rol and pop jnp loop xchg mov push pandn pop cld jnp daa shll ss in ret mov (bad) mov dec xchg add jl jnp in push inc leave sub add out inc push das lods ret (bad) pop lret out mov jnp lock mov repnz mov add (bad) call cmp nop pop aad in dec pop push cltd add jle mov xor add push xchg imul hlt int mov lds out inc (bad) in xchg outsl mov stos scas stos jg sub jmp ja pushf aaa add int3 cmp or mov or in iret frndint mov xchg jae aam mov lods or sbb (bad) pop std fidivrl ror mov sub (bad) loopne addr16 shrl mov push mov (bad) in xor iret xlat aad scas and mov xchg cmpsl dec rorb xor hlt (bad) dec add mov add movsl rcrl stos es add mov adc cmp ds mov xchg or pop jle je push (bad) insb jnp xchg pop scas or dec std or pop ficompl mov or or (bad) cmp fdivrl mov outsb push mov mov lahf leave cmp in sub mov and movsb lock pop scas ret sbb xchg call sti test add cmpsl pop push ror adc dec inc xchg add mov (bad) mov or lret xchg add data16 shrb or xchg xor jo or mov dec mov mov ret ja test fbstp ret subl push mov sahf lock fcomip (bad) xor call pop aas jb push aad push imul iret jp and ds lcall mov mov imul test xchg stos lods sbb adc jnp add (bad) lds dec sbb movsl or js leave dec xor aad push sbb (bad) stc imul jne inc jl xchg movb pusha movsb jp cltd addr16 and adc sub xchg jp mov jnp cwtl (bad) xor jmp jo in xor push out xchg xor pop pop shrb loop mov add mov jmp out (bad) popf inc or and (bad) js aas pusha add jmp xor mov aam dec cmp ljmp repz fistpll test adc xchg roll jg rcr jb sub sub add cmpl fdivl sub adc lahf lea clc jnp push mov push loop dec sbb pop cmp (bad) rcrb jae loopne and ljmp fldcw jnp xlat mov fimull cmp and icebp add outsl jbe xchg mov repnz mov sub push pop in es push mov rol imul adc fwait or int sub adc sarb dec pop int fsubr xor inc je mov imul xor pop sahf pusha jge cmp jb inc hlt jg fstpl (bad) and push mov inc mov jle sbb std jnp sbbl imul mov jg jl repz add push fwait xchg cli aad pop outsl sti inc sti xchg push xchg mov or dec insl aad jno add shrl std (bad) lods out sbb xchg sbbb xchg (bad) roll subl jg xor lret cmpsb out faddl jnp xchg ret lahf rcrl mov jle push jg addl repz aam jl enter add mov and cmpsl add (bad) popf mov in inc dec add mov pop xorb jl jb adc out movsb mov std mov xchg mov push fs add mov push pushf xchg mov (bad) mov sbb lahf jnp mov sbb xchg or (bad) xlat add leave dec decb add lret xchg cltd popf cmp scas or test and xchg arpl popf test pop in in lcall mov or jns (bad) or jge test mov or pop cmp repz add dec mov sbb xchg mov pushf fwait lods sbb (bad) (bad) scas jnp cmpsl sub aas jnp and movb sti cmp cld mov push sbbl push stos add jp dec ja adcb (bad) testl lcall fdivl dec mov add cld jge add insl mov dec sub int sti lods (bad) mov shr popf add cmc sti inc ret mov or mov iret inc sbb popf mov pop inc lcall aad pop jg dec inc mov popf inc jnp pop xchg faddl sub loopne cmp jle ror xchg mov dec sbb jl ret jp pop mov int3 xchg xor std adc jle xchg or xchg jge jl dec orl add jnp add add xchg or test sti enter cli jecxz add dec or and push jnp ret aaa adcl fwait pop cmp mov and add jnp jg add xlat jl add mov or jnp jle xorl pushf rcr test mov sti mov mov or jge lahf cmp lds cmp xchg mov ret jnp jnp std or incl jle inc lahf (bad) enter int subl pushf add lods xchg rcrl adc xlat test cmp scas jnp dec inc sub mov jg fisubr cmc add xchg mov (bad) enter or mov xlat jg mov xchg lds lcall ret mov dec cli add mov sbb orl fwait sbb add stos sbb leave sbb (bad) popa sti fwait aam pop add lahf test jle movsb std rol ret add mov lahf add lds sarb jnp in ret ret pop jnp movsl les fs lahf lds mov push add inc pushf mov mov fucomp shrd pop cmp std mov and cld jnp ret push fnstsw lret dec sbb daa pop inc fnstsw in adc enter jnp add nop dec sti mov cld lea jnp dec or (bad) fildll ret pop cmp inc pop lahf decl cmp lahf orl stos out sbb add test pop enter loopne (bad) (bad) jnp inc pop (bad) mov cmp popf mov ret popf loope lahf orl repnz jnp (bad) into outsb out pushf gs test lahf les scas push mov sbb jnp lods sub cli or fcompl in cs sbb mov mov xchg pushf or hlt pop cli lods push cmpb lods jae std add add mov mov mov add test add mov inc lods xor dec fnstsw jg or cli mov jnp and jecxz push cld xor loopne test push cld jnp and lret add cmp dec popf pop add mov (bad) (bad) cld in sti inc adc jl orl movsl popf mov lret std mov test (bad) fcoml jnp sbb push jle aam test out (bad) int3 int3 cmpsl int (bad) cmp cmc sti inc ret aaa into insb fcmovu int pop les out push lea arpl repnz jno scas jg inc add adc xchg mov mov ficompl lahf pop push mov mov sub sub inc out jnp mov in and mov add rclb test cltd rcrl jl (bad) xor xchg aaa stc fs xchg jle daa pop jl test (bad) lock pop jle push lahf mov out adc inc rcrl rcrl add add mulb xchg inc xor std or lea and jno sbb mov xchg push sahf cmp mov popf xor lea mov and jle add je add jge xchg or jl or jnp jle jl lds push xchg jle mov jge add jecxz cmpl aam sti loope push mov pop xchg jg sub add jl (bad) lea xchg inc cmpl xor mov lcall mov ds ret mov or inc and jnp add lahf jge xchg lret lahf mov enter xchg cmpl mov jle cmp ret rcrl dec pop (bad) jle ret or mov mov in and add jnp leave lea stc and std or inc dec flds ljmp call popf mov inc (bad) int (bad) sarl mov jmp push or addl jge add cmp pop dec test add mov mov dec sub std mov jg or mov jl or mov jnp pop mov and lock mov mov inc inc (bad) push outsl jae xchg into daa inc sbb nop push sti fnstcw in mov pop fucom bnd mov sbb sub pop xchg std mov insb add (bad) sub mov das pop clc sbb in jnp shr sub test dec cld ja rorl insb scas sub sbb (bad) mov mov inc pop popf test push jge xchg and cmp jg pop inc jae aas mov (bad) add loopne subl cmpsb fisttp jg lahf sti pop ret lods sub andb adc in repz in ret xchg aad mov pop mov das add jl or and pushf (bad) aad dec fwait sub sbb mov fdivrl add lahf add xchg aas sbb mov sti sbb test popa pop xchg sti in cmp orl std (bad) jl or (bad) xchg rcll pushf jg jl inc or jg lea mov popa int xchg sub or or sti aas sti fcoml lcall jnp mov mov dec cmp (bad) cmc lods ds jnp push jl orb mov jg (bad) jl add push xchg leave (bad) cld pop add test mov add daa (bad) in jle,pt and or pushf sbb test add mov add (bad) mov sub jne movsl stc cmp dec lea fwait aas jle leave mov cmc (bad) xchg add cli jmp mov add popf cld adc ret repz test lret add sbb sti jg jnp add and add sti cmp jg enter orl mov mov mov in mov xchg std add jmp dec mov push add lods mov sbbl pop (bad) std mov sbbl jnp add or jmp sbb push addl sbb jae bound aas adc scas rorl adc imul jnp aad jl adc int3 addr16 add std jnp adc sub jge in arpl and lahf add inc xchg (bad) sub insl mov lods mov xchg lea cmpl xchg jnp add movsb jle jl gs jl in popf (bad) jnp mov add mov (bad) shll (bad) jl lds add outsl cmp xchg add rcll xchg cmp cmp in movsl loopne add scas outsb (bad) (bad) sti dec adc xchg adc jmp (bad) popf adc sti in lea mov inc (bad) adc sub faddl dec mov pushf cmp jecxz test and mov scas rorb faddl inc mov pop enter sub mov jnp int push adc dec insl cmpsl (bad) dec add cltd cli sub adc ret dec adc mov and (bad) adc dec lahf and sahf xorl cmpsl ja adcl add dec adc (bad) adc dec push out rolb scas jne adc outsl mov add lock sbb nop cmp mov out pop aas ret lahf mov add sti into shr rorl pop loopne cmp add movsl (bad) mov pop mov mov add (bad) xlat mov popf cmp lods (bad) hlt addl mov sarl add cmp xor std inc loopne sar pop lahf rolb xchg iret test int3 incl dec adc and add mov cmpsb lahf stos std cmp (bad) cmc sub ret scas inc lea arpl xor mov jge add mov lods inc cmc push jle mov jl sbb (bad) cmpsb ret sarl sti jl cwtl lods das jp and sub jle insb out jg push lods rorl in (bad) jl push push outsl add ret test daa add inc pop (bad) jl mov sti mov or pusha xchg jge adc jl inc xchg fldenv or sti movb std lea sbb sti jg mov popf add nop add lds sti mov pop dec hlt and cmp sub enter mov pop or sti scas jecxz sti push call jnp ret pop enter movsb cmp ret scas rep movl lea fdivrl and inc mov aad pop xchg sbb cmp cmp mov adc (bad) aad mov mov cwtl nop dec xchg fdivr fistp in add lods add ret nop mov rorb inc mov add lcall ds pop push mov adc jmp mov lds popf jl lea cwtl rorb dec aam cmpb jnp cmpsb mov les pop or jg inc add lret jnp jnp jle push xchg rorl sbb imul dec xor in mov add push mov sub mov sahf jle add aas ret int3 add inc mov cmpsl cmpsl fwait and sub iret mov or sti daa (bad) mov fiadd xchg cmc jnp testb loop xor pop cmp insl shrl xchg fldenv loope jg jl ret fistpll cmpsl mov aad inc pop xchg test xorl add test add incb les xchg pop (bad) mov sbb jle xchg cld (bad) sti inc lcall mov or pop xchg sbbb inc andb in inc or test std (bad) xchg xor loop outsl add or popf sbb nop (bad) jle jnp fisttpll stos leave loopne or dec or mov sti sar sub fnstcw mov ret jg (bad) xor sub xchg adc add lahf mov in in rcrl or subl ret or ret add jl cmp pop sub ss das sti aaa mov push lea mov add xchg std add enter add fwait inc mov inc out sti addl inc cli sub popl enter adc std xchg popf cld push lahf rolb cld mov add xor (bad) mov mov push jnp pop std and xchg jle add dec lea sti sti jbe inc dec add lahf jge inc sbb sti add lahf inc stc mov sbb fdivrl sbb push (bad) xchg pop pop mov test or loop jno mov dec dec mov dec fldt test in jecxz lahf (bad) lea jle repnz and lahf mov push fsubr fs mov lahf xor xlat jge or xchg adc icebp jg xorb in push jg (bad) repz mov mov or adc sub stos or std add test mov or mov roll sbbb lahf faddp fadd adcl lret cmc mov fs lods out sbb stc mov mov out out mov inc push insb iret mov jno xchg mov clc fdivl outsb lcall lret pop sbb jmp mov lret pop sbb pop fbstp cwtl mov dec add pop sbb sub mov cmpsl in imul cmp jae cwtl mov lret pop sbb sbb mov sbb imul pop cwtl xchg mov and pop sbb mov jae cwtl mov lret fild ret mov add add cwtl mov lret fbld push outsb ffreep ss inc mov (bad) pop mov and pop xor mov push sarl loope cli lret (bad) (bad) cld (bad) mov mov aas outsl fwait test pushf add jl insl roll mov fwait jbe mov (bad) mov fstl outsb cmpsl (bad) add cld xlat mov xchg jnp jecxz dec mov add ret sarl dec sbb add popl mov sbb je mov test dec or add aas mov adc pop pop pop sar xchg jl pop push add or addl add pop dec mov add stos int3 inc rcrl jl popa adc loopne addb andl sbb mov lea mov push test adc incl sahf jnp push scas cmpsb adc xchg int sbb inc scas in stos adc dec out popf mov sbb inc mov scas push jg nop test mov mov std add jp in (bad) push cld (bad) popa pop pop jnp jnp add and aas orb mov lods inc das test mov in pop xchg lea cmp cmp cwtl test mov jg jo aaa test std mov mov sti push pop pop jnp sarl jb sbb mov std mov jle (bad) fstps cwtl cld lea (bad) jecxz test inc push jnp or add daa adc das jl ret lret mov jle sub mov in in mov jle add jl pop cmc mov add cmpl lret mov inc dec sbb mov or xor dec pop push aaa pop orl daa out movl aas mov xchg arpl mov movntps cmpb pop adc les mov jl mov inc jnp mov jl insl and mov or lahf inc fcmovu jg inc (bad) jb adc (bad) fidivl (bad) (bad) mov mov mov mov leave pop addl push cmp jnp mov sahf jnp lds jnp daa add loope mov cmp sti dec shll test jl push mov push cmpsl lea sti add inc xchg inc dec sahf int adc lret push add sub inc test mov mov cmp xchg jle inc sti stc jo inc aaa mov addr16 lcall lds lea enter test mov or pop xchg xor pop dec ret sub add std nop sbbl (bad) roll jg mov imul or adc sub ljmp xor (bad) sbb push mov repz add andl mov mov and sar sti cmp shrl sti dec jmp inc xor std rolb sti jl andl adc mov test mov (bad) insl pop add movsb adc adc ficoml adc inc xchg addb popf ret std push jge lea mov xchg jnp je jl dec mov mov inc and mov mov xor xchg cwtl mov add fdivrl inc aam xor call push mov add (bad) decl push sub pop lock jne xchg cmp dec and xchg sti pop cli adc or aas (bad) fldl add mov add test repz lcall push orb mov scas cli mov ds bnd vpunpckhwd ret add push jnp cmp test aas and jle push rclb fldl2e or sti int3 xchg mov fwait mov les stos rcrb rcll test jg ds lahf (bad) (bad) adc or inc mov fcoms add lea adc add mov lahf int3 lea je push fiaddl mov xchg mov popf aam lahf and adcl in sbb jle and mov mov sbb dec clc adc sarb cmp lods add add inc mov pushf fisttp fwait sbb push add mov mov iret rclb popf (bad) sbb sti mov inc insl inc add jl xor addb jmp mov cmp jnp enter mov pop xchg push or popf and mov nop add repz rol pop les iret loop addl mov fcompl (bad) inc push popf jle mov cmc leave aas or pop lea add test ret mov xchg add pop int3 (bad) clc jl iret xchg mov mov test cli add dec add push add lcall std mov inc inc dec xchg inc add mov mov jnp faddl push mov fwait pushf mov mov add inc inc add ljmp add add xchg lret insl cmp add repnz push repnz jle mov xchg mov les xchg fcompl inc push mov or fcmovb jg sub lahf in add adc sbb sbb faddl fwait orb in xor pop lcall mov les std jg lahf or jecxz or mov xchg pop add std jge mov sbbl and mov rol test std or ljmp push std shrb adc mov mov cld lcall cmp xchg fcompl adcl xor mov jnp cmpsb aad lret fcompl (bad) (bad) xchg push aas arpl jl jge jle cmp dec (bad) jl out ret sbbl mov inc mov add mov mov pop push jge xchg jns jno insb or cltd mov fwait int3 mov cmp xchg jle pop jbe lahf mov jns leave mov lods jl xchg dec adc jns mov fwait dec pop sbb cmp aas mov mov inc push xchg cltd inc sbbl enter lds iret push xchg cmp je inc dec (bad) out cmp mov dec pop jne fs adc int mov mov sbb imul pavgw movsl mov jns jnp mov jg std stc iret imul ds mov pusha (bad) cli xchg mov in push or jnp test sub movsl in or jge icebp jb mov stc mov add or mov addr16 sbbb sti cmp std add out cmp fmull jo dec aas out sarl aad pushf xchg sbb cmp push inc and push adc lahf pushf inc cmpsb mov test lea jnp cmpsb push lods inc popf (bad) fdivrl aam xchg mov xchg das add xchg das or clc scas mov cpuid (bad) popf xlat inc jg lods cmp pop pop xchg mov stc dec aad lret xchg mov or in rorb add orl xchg mov pushl lea popf imul (bad) shl lds rorl sti fsubl test cmp and jns loopne or jmp (bad) xchg sbb mov cmp call cmp movsl insb mov pop dec or cltd out mov pop pusha add push ds std jle ret lahf or mov sub dec test mov stos jl and ss push dec add sbb lods inc cltd movsl cmp xor and loope fdivl xchg aad mov clc push je mov inc xchg imul dec imul push lods addl adc mov inc mov popf leave sub dec sti in ds sti pop arpl xchg clc jle (bad) sbb popf jnp scas xchg inc mov sahf cld jecxz fsubrs in sar pop stos popf sub mov in sti int3 lock outsl aas xchg cmpl jle pop add std mov jg jecxz xchg jmp les lods ret test dec fld adc jl les out cld lea (bad) add pop add pause std mov iret jne push mov xchg (bad) sbb out sbb lret sbb jecxz repz fistpl out lock ljmp pop leave cmp into xchg sbb inc cmp adc add push jbe imulb ja idivb mov and dec scas lcallw inc shrl jno test sti ret outsb and mov pushf push loopne pop xor push fsubr adc lds dec push cmp cpuid sub in sbb (bad) outsb add in push outsb in sbb push or popf cmp inc test and in sbb and add mov into jecxz in or sbbl test sub stc dec out cmpsb test dec outsb test leave test jmp imul in inc out sbb rcrl mov (bad) jg je das (bad) adc jmp in and or xchg xor (bad) sub inc mov or sahf add push jle jb push and pop call xchg les or push (bad) fistpl add push lret imull push dec jae cmp repnz sbb pop mov add movsb das xchg das jbe jp and les rcll inc pop scas dec lea push dec iret into add ljmp repnz inc aam cmc loopne mov out xchg pop jge pop xchg jnp xor ja jg pop xchg sar (bad) mov std jo mov das mov pop cmpsb push mov testl sahf adc jnp sbb mov pop adc and and popf xchg sbb pop xlat inc sbb mov mov pop leave mov pop inc fcoms adc sbb mov sbb mov insl test inc insb imul or fisttp ja sbb cmpsb cmpsl (bad) mov jecxz insl inc jp cmpsl daa cmp sub and mov in les adc insb sbbb mov sti popf fcoms mov stos mov add (bad) fidivr loopne lret xor jmp pusha repnz pop (bad) out lret cmp add scas inc (bad) or sub mov enter daa ret push push xchg lret jb fcom jecxz fwait jmp mov pushf movzwl sub sbb bswap mov push add pushf jmp inc lea call push sbb pop jno sbb jno inc pop mov add clc out out (bad) repz and mov out fistpll jns loopne sub add jb cmp jbe outsl cmpsl (bad) (bad) jnp jno mov pop mov cwtl sub xor pop cs mov in xlat jmp mov out lock pop jae (bad) movsl fimull (bad) inc testl shll lds sbb (bad) outsb test sbb pusha mov xor adc mov mov sub insl dec addr16 test repz js aaa scas push in loopne repnz jmp inc and mov arpl out fnclex iret (bad) rcl sbb test out xchg mov sbb in dec ja leave shll daa sub out enter pusha lds xor and or nop pushf jge xchg fs dec and dec add xchg pop out xchg add push imul adcl es sahf fidiv mov movsl test add pop or scas addb adc ficomp enter xchg loopne lds icebp jae sbb loop xchg loopne dec (bad) sbb xchg mov sahf ret cli lret mov ret loopne (bad) not mov (bad) sbb jle push in fsub (bad) leave inc mov scas push push cmp jnp mov add xchg lret pop sbb jbe rcrb inc inc out and int3 dec (bad) inc push jno ret mov (bad) loopne enter negb bound imulb jmp mov sbb xor lds dec out push (bad) loopne shll lds inc scas pop or xor or es (bad) out mov aam inc rol pop xchg dec (bad) jl sub or cmp inc (bad) mov xor push pop push ja push mov push enter in pushl sahf fwait push or aaa jbe cmc out fadds scas xchg mov jl out imul dec or (bad) mov mov push clc xchg jnp cwtl mov repz repz aaa sarl mov mov fnsave insl cmp fisttp in mov jmp leave pop sub (bad) call jp adc inc cld lea pop cmp inc mov xchg outsl ss xchg sar ret mov cmpsl xor fildl cld xchg push pop mov mov (bad) out inc mov jmp xor add sbb push cltd sahf xchg int3 fs sbb popa in into fstl lods leave out and jo pop jbe imul mov in cmp mov mov push in cwtl mov dec mov fidiv push cmpsl cltd pop aad stos mov roll cli out xor dec mov lods inc inc cmovne xlat dec sbb lahf pusha adc (bad) out or jp int bound out sbb cltd (bad) push test cmp sbb (bad) push pop hlt mov push into movsl jne mov inc xchg not xor sbb pop xchg nop or jnp push pushf pop out mov mov mov jg sbb lret pop pop add ds inc lds aad pop loopne stos mov mov ds movsl (bad) scas subl push imul sbb mov pop cmp arpl ret and and repz mov push xchg (bad) jns jo cli jmp mov arpl test cmp pusha cmp sub call push pusha stos pushf pushf lea jmp or pusha mov cmc pushf aad sbb add jge or push inc xchg aas sub addr16 pop adc leave (bad) lret xchg xchg xchg push test xchg mov out mov dec int ja mov mov (bad) cli adc gs mov jbe jbe xor adc sbb cld int3 sub pop jg xor popa dec movsb insl push das in mov sbb mov int3 insb repz or mov ds popa ret mov std pop mov out lea rcll inc xchg and mov in mov pusha cltd (bad) hlt dec insb imul sbb popf jns xor and mov mov retw push sub xor or cwtl inc sub mov xchg xchg and test mov (bad) xchg repnz shrb adc gs test xchg aas ficompl vmovd mov mov cmc lret push outsb aad pop push jmp test mov push cld inc push cs push xor push jb dec hlt push dec in inc xchg sbb adc sub lock mov cmp sbb inc lock adc call andl fwait mov fisttp aad stc mov mov or shll mov sti aaa hlt dec stos push in orl enter arpl stc cld mov xor push add iret xchg lods icebp in (bad) ucomiss outsb xchg inc ljmp inc sbb in jl xlat daa and or aaa xor jmp xchg jecxz xchg rcrl cmc mov hlt pushf ss push xchg add mov sti adc popf inc jns loop not outsl das jne push outsb mov inc push cwtl les cmp popa dec dec jp movsl aam mov add (bad) xor or sbb pop out dec pushf call insb dec xchg inc push imul mov mov push (bad) xchg stc cli or xchg loop adc xchg js out pop mov int3 ret fcoml push lea inc or xor push xchg ret rorb lods or xor push outsb sbb push add cmc adc pop sar fstpl sub adc jmp dec icebp ds dec cmp jae or pop adc adc adc std pop scas test sbb push jg scas test mov push insb jo add fisubrl loope xor stc add pop cmc pop push mov dec inc mov fs aad int3 addr16 lea jne push sar add mov call mov fildl xchg sbb in sarl aam cwtl int or inc jge hlt jb repnz push xchg xchg xor es scas outsl ds push rcrb cli nop (bad) leave enter ljmp dec popa xor scas orl pop jp pop lock inc mov cltd in sub cmp cltd adc adc inc int3 inc dec sub xor and (bad) std dec in cltd icebp pop fiadd jle pop fs (bad) jl cmc je cmp aad rol andl stos sbb mull lods add movsl sub rcll sub adc (bad) pop mov int3 jne fisubrl lods dec jne mov not lea lea push pusha mov movl jmp jmp pushf lea jb call pushf pushf repnz call call jbe mov inc jae test adc mov xor pusha jg jb pop out sub int3 jecxz mull lods sbb (bad) pop repnz shl (bad) cmp out add aad pop ret movsb int jmp gs and imul jle movsb mov push and js jnp loope loopne pop cmp and inc cmp adc mov add outsb icebp cmp icebp dec inc xor pop jnp clc or enter sub xchg leave ds adc pop cmp mov js sbb fst or pushw in shrl lock dec mov jle ss inc xor xchg les lret mov sbb aaa lea jne call mov fildl xchg sbb or outsl cmp jmp shrb iret or lods pop mov and fstp mov adc jbe or jbe out out jge (bad) outsb fdivrp (bad) int3 (bad) stc fs sbb lods pop push mov add xor daa push xchg inc push cmc push scas inc xchg mov iret dec loop fstps mov xor cmp inc in xlat xor js cli pushl inc in jge les jge mov inc dec clc pop mov sbb out leave or in fstl inc (bad) fisubrl jle mov dec insl and xchg dec cmp in mov lret insb (bad) lock inc test sub pop es out les popa lds inc mov push imul push addr16 push jecxz mov dec xchg cmp js test jnp dec mov xchg inc iret movsl (bad) adc sub fist pop jecxz rol cmc shrb loope and scas push subl (bad) (bad) jge jge pusha out adc (bad) neg cmp inc and pusha pushl ret mov lds xchg sbb cmp pushf mov jle and dec pop pop cwtl (bad) and pop dec cs mov lds movsb adc mulb pop inc mov jle mov lcall sbb inc add sbb mov out xor les mov push inc mov adc mov push xchg enter dec sbbl out mov jl pop adc movsb jle sub pop in jp mov lods pushf mov push jg xor leave xchg stc fisubl pop mov in daa call inc cwtl or mov out stc rolb nop mov repnz loopne mov push and xor call int3 lahf into repz or into cwtl sbb push sub addr16 mov jne mov mov aas testb rolb loopne mov test and mov decl sub mov mov cs sub jle stc mov pop shr rclb add dec out xor movsb xchg pop lods mov push shlb or mov jae dec sub xchg push fdivrl mov call das adc push xchg sbb sbb stos and rcr jbe test out pushf mov stos jnp fcoms lds iret call es outsl (bad) (bad) or jecxz out dec xlat push inc repz sub cwtl int lock xchg lock fs jle pop dec clc mov mov repnz daa adc bound test enter dec popa pop adc push icebp loop stos mov mov sarb enter and jo push and cmp stos movsb enter in fsubrl aad push stos test ret bswap adc sbb pop or jle jns insl push adc or out stos inc xchg sbb add cmpsb aad lods (bad) sbb push sahf cmp stc xchg mov flds loop xor jbe pop mov into adc test push jns rcrl sub pop mov mov stos mov jge movb sbb (bad) lret sbb in push push (bad) push push insb fistp add sbb push ss xor jmp mov pop std sub inc icebp push sahf ss out repnz and cltd dec mov push dec arpl and cli mov sub pushf sbb push or push cmc inc loopne jnp addl xchg push xchg andl add jp cli repz mov mov sbb xlat jo jae sub fwait inc jbe cmp jne push push mov dec aas sbb out or jb call int jp pushf sbb or and jecxz push out xchg pop rclb pop subl push addr16 lea std pop inc pop xlat sub mov mov lret xchg jns fdivr mov pushf fisubl xchg push in sbbl and jnp (bad) mov lock ret jle inc (bad) mov adc mov fsts aaa add cs bound notb sub outsb js in les cmp test sahf mov or clc or add mov cwtl mov lock ljmp rclb aad and lea jmp vandps sbb adc idivl jo das push jae pop mov sub ljmp fwait ret mov test xchg jnp cmpsl mov push pushf call jle xchg mov xchg adc adc pop lock push out adc cs movsb jle mov adc (bad) adc or inc sbb test int3 xchg mov pop cltd mov xlat mov dec clc sbb imul inc xlat fisubl and lock mov test (bad) xor and mov fs faddp and fs jb pushf cmp cmc bt cmp push call (bad) adc sahf sbb clc rorl shlb movsl mov in les mov lock bnd imul in fwait mov mov lcall mov cmp and clc scas jle inc cli hlt out mov pop ss ret adc insl bt (bad) mov fsubl lret movsl push jae mov movsl mov mov ficomp adc fidiv outsl bound pusha test lahf bound imull mov jg jo xor sbbb fsubrl mov push ficoml shlb mov pop adc dec mov or mov lahf sbb leave fisubrl push es or adc push push test ret pop sbb dec dec push pushf stc cmp mov int int3 repnz mov scas xchg pop xchg dec inc je or inc leave outsb in or and jns ja adc dec xchg loopne loopne loopne push push jp jne out ret gs fnstenv outsl xchg dec xchg add jp or push loope push pop or dec mov fstps test jp aad les jmp push mov inc add adc adc cmpsl arpl mov jnp sbb loope imul outsb cmp mov xor in test out (bad) nop inc lcall adc adcl sarb cmp pop xchg cmpsb mov in push or aaa xchg mov out hlt xchg sub shrb jp aaa es xchg out in jae movsb ds subl pushf (bad) mov (bad) insl and adc inc cmp xor inc xor test mov rolb jne jmp iret aas push (bad) cwtl sbb nop in leave mov jne sbb aam (bad) jbe xor jno cmp mov sahf insb leave xor cwtl (bad) decb in je sub int3 sbb pusha sbb cmc add push adc clc js fcomp mov lock (bad) cli inc bound notl add movsb pop adc test das aam test hlt clc mov xchg jg jne (bad) xor fisttp (bad) xchg sbb dec mov ret leave ljmp (bad) in sbb outsb movsb lret rcr and add shl mov rol btc dec (bad) lock rol bt mov sar mov test clc cmc mov pushf clc xor jmp pushf lea call push movb pusha pushl lea jae pushf stc sub push lea call call mov jmp add add test push ror lea movzbw mov aad sub or jmp addr16 cmp out loopne,pt adc aad mov inc lret mov xchg mov inc xor dec leave mov adc outsb cld xor fsts mov repnz subl sbb mov sub dec sub cwtl mov es sbb sbb out mov or into stos adc lret pop outsl cmc fs cld sub add arpl adc xchg inc jg xor test mov fsubl scas jnp decl xlat aaa jno jg in mov sbb mov aaa out sti aas or std pop test cmpsl pop fcomps or cmp inc inc jo pushf mov daa loopne,pt pop lahf lods aas mov data16 lret test fidivl mov push fwait push mov addr16 sub or push sbb and sbb add out mov in jl mov sub and sbb mov cmc jo ja sub mov push rclb lea je push bswap movzbl pop mov push lea not lea pusha call pushf lea pop not pop pusha mov mov mov mov bswap pop pusha push movw pushf pushl ret add push gs insb outsl jae dec gs add and mov loope shlb push loopne and icebp fsubrl cld sub (bad) pop mov dec dec mov jo lret xor lds pop sahf jno mov out les imul mov test and xchg fiaddl add loopne pop loope jle dec gs mov push bound pop rolb mov clc add add (bad) loopne dec jp into scas std outsl sbbl test mov in outsl out cltd cmp or dec pop jge dec inc cmp int in aam pop jge mov nop sti xor cmp add cmp int add sub cmpsb mov jno into cmp jae loop mov ror dec (bad) dec pop xchg sub jno movsb sbb data16 dec pushf ret outsl and enter mov and out sbb pop mov aaa test loop jg adc iret dec pop int3 roll push and add in dec cmpsb xorl cmp xor jne leave int3 imul or adc push mov pop pop pop push push (bad) test push ret insl (bad) dec mov jge test ficompl jbe xor push inc imul outsb cmc sub pop popa lret lcall push (bad) lea pushf seto movsbw lea mov pusha pushf lea ja push movb lea jb clc stc push cmc cmpb jmp add sbb out or pop call (bad) mov add loop mov dec jl jmp dec (bad) ja and test in cs out outsb xor push scas push push cmc (bad) lret sbb add push mov push pop mov lea cs sbb call or out out les jmp nop add push and sti dec arpl xchg cmp rorb nop outsb jb test aas sbb hlt adc pop jecxz lock inc gs jns push notb inc js je jb arpl jae and add cmpsb sbb ss mov sti pop xchg stos ret ret shr mov jbe scas addl add ret and or push sub jae inc pusha push adc sti pop test jle jecxz lock shrb pop xor jne ljmp out jno (bad) mov xor mov jecxz dec push mov sarl pop or jns aad inc lods and or pop pop cmp loopne jecxz mov icebp dec push push insl (bad) jb cmp and je sbb jns mov inc jle enter aaa inc scas sbbl sub mov imul pop mov aas dec pop mov outsl dec adcl daa xchg pusha fisubr pop fisubl movsl push dec mov pop adc lods into inc arpl sarl (bad) jnp dec jbe or xchg pop cmpsb lods xchg lods inc inc push imul dec push mov mov into out in jo loopne mov sti or mov sti sbb mov mov lock and and inc iret (bad) xor shll sahf xchg sub sti pop ror jo adc and daa xor mov adc movsl (bad) stc push outsb or cmp mov cli cwtl xchg push xor add (bad) mul fsubrl mov or ljmp or ss lcall (bad) les or dec out loope or jl negb cmc je xchg fsubp jb loope out (bad) adc xlat xor insb subl jge rclb and jnp subl jne dec dec push cmp add mov pop jo inc sbb lods ret lods bound mov dec (bad) mov mov sub mov bt xchg mov clc rcl sub lea jbe setge lods (bad) repz adc mov push adc sub pushf ror rcr rol rol cmp add cmp neg movb pushf setae stos pushf mov lea pusha jmp test mov test pusha pusha clc shl call xor mov sar cmp rcl sar add btr mov mov add ror not (bad) icebp add add add int shrl dec sbb cmp call (bad) hlt add mov loopne pop push mov sbb and jg dec push adc scas or mov icebp mov mov or push mov push cmpsl (bad) sub or sbb lods aaa inc jge mov call scas gs cwtl std xor add add nop sbb insb sbb in ljmp xchg pop xor int pop add idiv gs dec and mov (bad) aad subl mov pop and repnz dec push inc xchg dec xor xchg (bad) es iret addr16 mov and lods jle push adc xor mov outsl push cwtl cmp fisub jne jo out sbb or xor or loopne std sahf in ret push jp pop or imul pop adc xor es loope ss inc xchg mov xor or rcll testb xor fldenv fwait cmp adc pop mulb mov or insl faddl (bad) sbb xor mov inc mov xchg mov xchg push sub mov xor ret iret stos nop fwait pusha scas xor xlat inc xor cmp mov leave push (bad) push popf xchg mov dec pushf aas addr16 fstl int fucomip cmp inc jo pop fs std jl cmp cmp cmc pusha xchg mov aaa aas and mov fisttpll and and scas inc fwait mov jb inc jo xor inc sbb loop scas adc xchg cmp fld1 daa xchg push inc mov cmpsb cmp dec ss mov push sub out (bad) lahf mov test call dec cmp push out fsub fstps (bad) cwtl lock cmp inc jle sbb sbb lock xlat jno icebp mov mov cli xor fwait es in int sub mov add mov mov pop adc sub (bad) bound insb lret xchg out mov in mov add pop mov xlat mov xchg sub es mov add sbb js inc push cwtl (bad) xor xor add mov sub les repz out out je lods push jo mov xchg and push bound jmp shr bound sub add inc and and sahf xor inc and loop orb aaa xchg pop add xor jmp js dec push push pop inc lret mov je lret cmp cmp push dec imul fldl2e jb aaa sahf xor sub hlt lods sbb test xchg mov sbb add mov push movsb mov xor inc std movsl arpl dec out das shrl dec sbbl (bad) jb (bad) cld cmp aam sub mov mov stos std and std shrl test pop (bad) jbe xchg out push scas inc and sahf (bad) (bad) rcll (bad) in das jbe ja je adc jl lcall movsb rolb pushf repz addr16 test and inc cmc push mov ror xor mov fdivp lods sbb (bad) mov xchg data16 jns fs sbb mov loopne mov sarl arpl dec jnp push insb xchg (bad) xchg (bad) push xor jns lret dec or mov or fistl pop cmpsb ljmp mov (bad) out xlat pop jl hlt insl dec (bad) jae sub and js inc into push movsl das xchg sbb inc add hlt repz dec cmp pop add hlt bound out sarb in in scas popa push mov pop pusha sahf jmp fiadd js xor or sbb lret adc ror or in xchg loopne (bad) mov out fsubr mull push nop loop clc push in pop mov sbb mov fidivrl repnz int3 sub jmp fwait in ds push mov int lods pop push jne dec mov push mov pop loop fisttpl aad (bad) fsubrs rcll pop mov mov int3 sub insl test lods sti rclb nop add adc inc xchg xor xlat jbe int3 xchg (bad) hlt inc stos and cltd mov fimull repz jmp pop and scas sbb inc jp jl,pn sbb inc (bad) (bad) sbb (bad) fucom js mov mov ljmp add push push aaa pop xchg xchg add mov (bad) outsl xchg pop xor test loopne push movsb mov ret sbb aas mov std sahf mov mov fdiv jmp jb dec rorl ret jecxz mov mov decl lods flds loop pushl bsf mov stc add mov cmp cmp mov movzwl rcr shr jmp cmp rcr jmp loopne lds sbb lahf mov sti clc ss shl (bad) jmp mov pop andl xor iret or dec adcl hlt andl sbb push enter aad xor push mov jbe xchg dec testl es add stos inc or jl pop lahf je test movsb into xor fadd pop cmp test jl adc ret and test push sbb sbb movsl xor mov jge jecxz fiadd cmc bnd imul sbb test inc jmp loopne rolb adc or jle icebp repz mov jb sub icebp and push inc fcoml sbb movsb in insb adc sub xor dec fnstcw mov mov push call sbb shlb jmp cmp inc add sub pop push stc jp fisubrl out sub hlt sbb decb inc adc popf push jb add sti movsl mov lea (bad) das packsswb fldt (bad) lret stc arpl jge out cmpl es rol ret repnz in jge scas jnp dec mov fsubr cwtl mov sahf mov loope out inc ja daa push addr16 inc jnp sbb imul push mov pop pop lods popa leave out in imul sub daa es shl aas sahf or hlt jmp pop sub mov mov test je dec mov adc test insb clc push lret ljmp jmp fsubl loope aam repz sub je xchg lret daa mov loope xor hlt pop add ret jle pop mov sub dec and movw adc lea pushf pusha pushl ret pushf jmp dec xchg sub out lahf push and pop push xor lret and and jg notb push pop jge imul lahf int3 xor mov xchg cmp xchg jnp push arpl ljmp mov or dec or icebp or mov es mov push stc rclb mov cli out repnz stos call (bad) sti or fstl cld dec sbb hlt sub mov mov dec pusha js inc adc movsb sub fildll lret add pop jge xchg test ret ljmp mov dec imul mov add pushf lea call push lea jae pusha bt cmc sub movl pushf lea call push call inc pop cmpsl jnp sbb cmpsl mov inc arpl cmp cmpsl (bad) (bad) stos and mov sub adc clc movsb xor mov (bad) test push icebp push jb adc pop xor inc pop loop lock (bad) mov xor or xchg movsl cld aad mov sub push cwtl cmp in les and out push jns push dec lret je mov mov or insb mov sbb jmp shr dec jl xor stos int3 inc mov pop inc mov loopne pop xchg dec movaps pushf mov xor xchg mov xchg mov jge sbb hlt andl cwtl cs cmpsb rclb xchg popf sbb pop movsl enter ficomp jbe pop xchg cmp sbb loopne jg inc fildll cmc mov mov mov pop fucomip (bad) and xchg and mov clc push jecxz aaa adc pop mov sbb add jns clc and fidivrl jbe pop idiv mov or mov in pop or (bad) lock cwtl out fsub bound cmp lods nop lds push jbe xchg in mov xor dec daa mov iret xchg push sbb or cmp inc aas push popa xor in movsb push xor xor add add nop push (bad) mov add rcll lds mull fwait (bad) sub lcall (bad) mov inc xor dec (bad) pop xchg test ja jle mov adc or xchg xchg sbb dec ret mov in jo cmp pop (bad) xchg sub pop and arpl dec lock adcl jnp cmc std ds cmpsl xchg mov fisub daa inc jecxz xor pop mov cmp mov imul cli add idiv in xor push dec inc andl js idivl stc mov (bad) pusha loopne stos in int inc fldenv sbb sub lods bound jno sub (bad) fcmovb adc hlt ret and fnstsw call mov enter inc loope loope adc push inc and xchg xor jl dec outsb xchg pop xchg jnp sbb pop (bad) dec (bad) movsl xchg sbb inc outsl ret lret push bsf and or pop mov mov movsb lock aad movsb orl into fwait pop add push rcr jecxz add cmpl ret scas mov jp sahf cmp mov loope (bad) fsts push icebp xor nop leave add add mov jle xchg inc pop push mov ja js into arpl inc mov fisttpl mov shld bsf rol setp mov mov clc cmp lea jl pusha lea jbe neg mov sar bsr add push sar movzbl mov inc add bt bt movl sbb btc call pusha test inc add cwtl mov push mov push movsl scas les jbe (bad) clc (bad) xchg pop cmp jns xor mov cmp and jp xchg scas push movsl lret mov mov sbb pop and lret jmp out and xor inc in or dec mov mov mov dec (bad) sub mov mov xchg (bad) sbb sbb push mov (bad) mov cwtl cmp nopl test and dec popa xchg pop jge or pop hlt and std cmp in add es add jae aad dec mov inc push xchg jmp mov pop jbe inc imul (bad) lahf fsubp xchg mov adc lods xor pop call cmp enter fwait jb push xchg push scas cmc aad out pushl dec sbb pop (bad) xor cmpsl pusha cwtl pop enter fdivrl in addr16 and out in ret mov into lret or clc xor int cmp jmp loop subl adc rclb or pop in out in dec xchg mov fsubr subl (bad) or roll mov inc mov cmp mov enter xchg lock jns add scas lahf and into xchg into xor or and sbb test cwtl lahf enter jecxz dec dec fdivs inc mov popa mulb ret std sbb push sbb cltd mov dec out bound iret and int pop dec ss pop inc mov jbe pop push out jb repz inc cmc dec mov push in (bad) push aad mov mov stc mov and xchg jge mov push mov movb lea jmp lea call call jmp jmp js xchg dec mov inc imul inc leave clc in fsubr nop mov aad int es push mov mov data16 and or in iret enter or xchg pop in lret mov mov repnz repz test (bad) push sub xchg cli push je out jge dec mov dec sarb jl test sub xlat enter inc or fcoml xchg pop (bad) push mov mov popf mov and jle cltd fcomip movsl bound cmp xchg aaa sub pop mov lods adc mov inc sub jne (bad) mov in out repz enter mov ljmp xchg test stos sbb repnz stos sbb ss test pop cmp mov xchg cmc or adc mov aas dec adc sbb mov andl or mov xor popa mov and xchg in fldenv (bad) mov loop aaa sbb clc push jle inc pop les add push or call fidivrl dec mov movsb xchg dec lahf jnp test mov mov leave jecxz fnop dec cmp iret jbe push stos sbb pop or mov inc lock insb es out (bad) je jo dec push out fiadd or sbb cmp mov pusha xlat mov insl jb inc into mov pop shll pop push lret cmc repnz pop mov (bad) xor sbb mov lods pop pop jg popa mov mov xor in scas je and add (bad) xchg jo cmp or stc ret out pop cmpb (bad) push lcall loop (bad) xor ss push sbb and xchg enter jp sbb out mov call xlat hlt xchg mov inc arpl or dec aas dec adc (bad) xchg mov icebp sahf enter dec xor rcl xlat mov sub in add (bad) push (bad) cli or hlt mov loop lods dec mov mov sahf and es cmp sub mov lock dec jmp arpl (bad) ljmp aad pop jb adc dec cmc jg lods notl xchg fcmovnu popa xchg jb imul and push movsl and and add out cmp mov push jnp adc and ja xchg mov cmp and in movb mov inc and jns data16 add testb movzbl stc sub bswap mov pushf pusha push pushf sub clc stc pushl popl test call mov mov push lea call pusha mov call inc pushf setnp pusha mov jmp into xlat sbb mov je pop lcall push adc xchg es mov sbb fbstp js clc flds stos rolb add fistpll add xor xor (bad) cli cmpsl and jmp sub leave lock call mov stc cmpsl inc mov xchg popa xchg (bad) cmp mov mov jecxz push lods xlat jb mov cmp or cltd test lea push (bad) jbe jne dec ss adc inc adc cltd mov ret mov aam and xor xorl js or xchg stos push movsl hlt fnstenv decb popa mov pop imul push aad cltd xchg je xor lahf gs pop xor inc lods add mov xchg outsl fwait cmp inc cmp jb inc mov add in test jp mov xor bound sbb xchg sbb clc xchg sub sub (bad) addr16 out fmuls inc dec outsl ret inc inc out mov ljmp stos inc mov call push rorb jbe push scas dec iret inc outsl pop add addl rcrb pop call mov aam pushf cli jbe sub js scas xchg sbb xchg outsb add add fiaddl adc mov sbb scas ret or in jbe andl cmp (bad) cld je pop dec xor fstps xor pop xchg add jmp test push cli sbb pusha mov jne call adc pop cwtl enter dec sub add mov stc repz pop push (bad) outsb loop xor popf xor pop cltd (bad) jge ds pop ret sub (bad) cmp push cmp pushw popfw mov mov inc jmp cmc cmc cmp pushf jmp ret sub cmp sbb and or test fmul adc adc cld lret add or das ds adc ljmp sbb jns pop repnz cmp add repnz stos pop inc mov lock pop push std mov (bad) repz add add xchg push mov lods adc push les dec xchg jno dec jp sbb xchg jge mov gs mov ret out (bad) adc push les imul mov leave ljmp outsl (bad) dec cmc add imul decl and sbb push and add inc adc cmp mov int3 notb mov dec cmp cltd das mov cmpsb loop and into repz dec pop push jl and jl xchg dec pop notb jle into add jp pop stos xor (bad) hlt jb ret sub jno push leave cwtl je stos (bad) popf or (bad) or lret sub pop lcall sbb imull movsb sbb arpl lock rclb outsb ret cmp lods xchg into cmpsb xor add outsl rcrb cmp loop add push cs inc sbb pop test inc fisubr mov mov inc xchg mov lods (bad) repz dec (bad) pause out outsl mov in mov cmp push sbb aam loopne inc mov rorb out pop movsb fwait xchg pushf xchg mov inc mov popf lds add bound cmpsb outsl sbb jbe lea sbb shr cmc je inc imul decb insb in loop shl clc pop aas mov xor js or nop fnsave aad mov arpl inc sbb jne mov cmp add outsl cmpsb jo adc sbb fidivl cltd adc add sbb mov jb cmc cmpb pusha mov lea jne rol mov test jmp adc pusha movw lea jae push push lea jne pushf push pushf push stos movb pusha push pushf lea jmp out pop aam mov mov (bad) repnz mov xchg out iret (bad) sti jmp ret hlt adc iret xor shrl in pop stos jae push and inc (bad) mov and scas push jo aas (bad) daa push repnz js xchg icebp icebp sahf jno aad dec add sub and or bound jno push stos les enter int lds jo ja mov test in xchg fnsave mov xchg adc mov inc add cld jecxz pop mov dec fistl leave cli jnp mov dec (bad) xor (bad) outsl sbb shlb pop popf fstps andl fimul push test call xorb loope subb jl cmp outsl inc cmpsl cwtl xlat inc ret sti fdivl int3 std insl sub xchg out out sub popf push cs cwtl and pop stos stc insb cs mov push out out lret add cld adc dec dec test mov lock jl nop xchg cs cmp loop and leave xor xchg push test cmpsl pop (bad) mov pop xchg jmp jl inc sub loope add test mov and adc push jl imul fs adc pushl mov repz and aas sahf mov test inc add push mov jmp (bad) mov ss sub xor and (bad) mov adc or aaa dec sarb sarl jae mov dec jbe jg push mov and pushf lea jne data16 lock clc cwtl rcl rol mov jmp sub add mov cmp sub cli mov mov sub mov push mov mov inc imul fmuls stos adc xlat in or jno ja in pop xor xor sub enter push es lds ljmp repnz inc push imul or pop mov test push je dec iret lock pop push and fsubl adcl or add adc mov outsl (bad) jmp loopne push out mov mov loope lock stc insb mov sti cmp pop in pop push test mov lret subb imul jmp bt stc call movw or call clc cmp pushf pushf movb push lea jb stc bt cmp call jg popa mov xchg xor rorb and int3 adc push insb loop xchg cmp push nop and rcrb frstor and xchg xor repnz dec dec insl xchg (bad) insl xchg movsl cmp and test fcmovnb jb xor dec jl jl pushf ds inc leave xchg inc push jb in ret aad fldt jb call mov xor dec pop (bad) lock mov jno aaa roll xchg sub dec push ljmp mov scas jo adc (bad) out insl fdivrs mov stc push mov in adc mov pushf mov pusha mov mov mov pusha lea jmp adc push mov cmp sbbb sbb lds test jge bound es fnop fstpl jmp or xchg xchg xor xchg dec stos or cmp sub mov mov fwait pop sbb das aad xchg mov sub jmp les mov push scas fmull add mov sbbl es xlat mov dec lods jg je push xchg cli jmp stos test xor (bad) inc or ret xchg add jl int push ds push pop fldl inc call ljmp movsb xor icebp lret enter pop sub push sub xchg push scas out aaa push pop jae out jmp jecxz jg std cld pop fimul aam clc in mov imul int mov xor fucom xchg fldt dec or out dec cmp inc mov mov imul movsb leave xchg lret icebp jo mov ds ss pop shr popf hlt test scas (bad) jno lcall inc insb xor imul out lret lods mov into inc mov daa push jae fwait call lods add gs dec jns jo inc jne xchg insl xlat jb adc lcall sbb cvttps2pi dec (bad) ficoml mov ss popf movsb fimul sbb clc loope rcrl outsb and xchg sahf in sbb dec insl sub and hlt jecxz xchg sti push fidiv mov shrb pop mov push mov push mov mov cmc jne jmp in shlb bound int3 loop nop jp addr16 int3 cltd (bad) js into mov pop jp clc cmp jmp push mov (bad) xor dec int or sbb outsl and mov jmp (bad) jle icebp sub add std xor ljmp dec push popa xchg ret add jl enter cmp fs je pusha add clc cmp pushl lea jb test cmc cmc cmp pusha lea jae bts shl shrd sub mov neg mov neg shld ror stc mov cmc pusha sub call into fist rcrb movsb shr (bad) jg adc mov push inc orl ja bswap and test ljmp gs jb xor shll leave pop icebp jmp sub lret mov dec xchg out js push mov jbe mov loope stos cmpsl pop in mov cld cmc mov sahf or imul xlat or (bad) (bad) sti sub rcl rol (bad) stos push loop pop int3 inc rep sbb xor sbb dec fisubr push (bad) jbe add jb sbb dec sub xor mov scas les fwait shrb pop add pop outsl mov mov sub mov ja sti xchg mov sub aas fstl outsl sti and ds scas test sub (bad) pushf movsb inc inc pop mov mov adc imulb jae leave mov cmp dec adc xchg shrb mov xchg jne lock dec les shlb mov cwtl xorb jnp mov loop mov inc xor ljmp aas dec jns xor or cmp pop jne jno cmp loope dec insl pushf das mov push adc mov sahf sub loope outsb mov or rolb dec cli fnstsw add insb jae jb outsb inc add leave jmp jge (bad) push rcrl (bad) mov je and pushf sub ja dec fs xorb fldcw jnp lods in dec xchg xchg (bad) cwtl dec push push adc jmp lods add cmp lcall sbb xor mov mov sub adc inc xlat mov mov sbb cmp and jle out stos pop std (bad) leave mov inc pop roll ret sbb jns push lret int3 clc dec mov enter addb mov dec inc cmp je fistp cmp fs je jne stc pusha sub pushl stc cmp pushl pushl lea jmp bswap pushf mov lea js pop setne movzbw pop call lea call pusha mov lea jmp pushf mov not inc movb mov jmp lods jb repz sbb dec addr16 lret adc sbb push mov sbb jo add pusha lea jecxz ret jb push pop (bad) xlat into pop xor insb rcl add xchg fsubl adc or dec scas movd sahf cmp and cmovae sbb xchg daa lock sub call or mov jne sti fistpl xlat call sub addr16 pop int push xor in and andb mov mov out in dec jmp inc data16 out ret sbb jp add and mov add fnstcw and aad cmovge sub xor dec mov xchg sahf in jbe fcoml js stos pop notb jmp xor inc das mov aaa in adc sbb popf call out and jae mov insl dec inc test int3 es pushf pop dec add into pop add loop xor dec les out cmp push rcrl mov add jl dec mov fwait clc jo mov (bad) fnstenv lea jae stc pushf test cmp pushf lea ja call repz pushf movl call dec js int sbb lcall inc stos jg xchg adc ja sti and xchg loopne ljmp out ja in pop fcompl adc fld1 mov dec insl insb pop mov mov outsl pop push push ds icebp push cmp push fwait pop push cmpsl push push neg and sbb mov loopne xor dec mov push pop sub add cmpsl cwtl xlat xor (bad) aam mov inc inc mov add jb add pop test int and popa in sub push int inc mov or insb mov out std bnd inc inc mov sub jae jnp sbb iret pop inc mov jp and sub jmp xchg add and test cmpsl (bad) out jmp scas add or lret cld loop add je mov or or enter and les imul into sub mov xor dec mov aam test aaa cmpsb fnsave arpl es mov mov repz inc imul add push cmp movb lea jb jmp cmpsb xchg or into sbb and ds adc test add popa mov or xchg hlt cltd stc repnz cmpsb or push jne lret bound out ret jmp pop cltd pop inc mov shll test mov (bad) jp adc cmp mov mov jae je xor push cmp lds jg cs addr16 idiv test gs int3 std inc xchg jg aaa inc mov into dec mov addr16 push in adcb inc and mov cmp xchg xor mov cmp stc or pushf jmp (bad) js mov sbb and fimul jp pop jae mov (bad) negl mov adc sub outsl mov aaa sub sub sub loope scas loop jge push arpl xchg pop das pop js mov pop outsb fidiv add (bad) inc xor cmp sub inc xchg or pop lfs je repz and or jne mov sub xchg pusha and int3 repz mov xor inc aas and cli pop notb add dec add test push test lea jne cwtl not movb lahf not pushf mov movzbw lea not lea pushf pushf pusha movb movl jmp push int3 adc sbb out (bad) arpl mov aad clc and jne cmp in and and mov lret mov (bad) add push ds add push sub ret jns add mov ficoml add imul out in mov mov rcrl mov xor push (bad) and dec stc push jbe cmp jns sbb and sbb cli dec inc test adc mov std icebp inc scas mov pop push sbb mov hlt jl (bad) gs mov jle (bad) cld or pop into push leave add sbb push jno sbb movsb sbb fisubl mov enter jns sbb and rorb xor mov jae push das lahf mov (bad) les call sub rorb in mov cltd inc andl repnz sbb and je inc imul mov dec imul mov or xor dec adc adc fiaddl and (bad) cmpsl clc or or mov cltd mov popa push stos sbb sbb dec mov add dec add pop dec cli call shr pushf aam add adc cmp sbb mov xchg rcl cmpsl mov mov pop dec xchg aaa sub push out push xor adc inc add call mov loopne fadds lea or adc mov cmpsl jge mov shr mov or sbb xchg cmp adc mov jge ljmp (bad) mov or aam xchg cmp and jecxz and cmp jbe pop sahf stos sbb xor movb adc arpl cltd popa or and sbb lods dec push fidivl out xchg add repnz lret fs call jmp (bad) (bad) cmp sbb sbb xchg push pop jb stos inc cs (bad) (bad) not xchg cmp ss je sub jb xchg push jae outsl dec mov sbb sbb sarb ret sub (bad) lods mov cmp and mov jecxz pop push insl push push xchg cltd pop imull or xchg and pusha test mov jo push jbe or pop pop int3 (bad) mov mov inc movsl cmpl dec mov movsl mov or add cs in rorb jg,pt cmp daa inc in pusha jmp add mull sub inc or push test push insl inc movb pushf lea call pushf movb call call lret lock pop cmpsl mov fisubr push pushf sarb (bad) mov add in into pop xchg mov roll aaa repz sub (bad) outsb fdivrl aaa or lret pop push pusha pop sbb or xchg (bad) (bad) mov mov cmp dec lret and pop inc pusha repz cld (bad) nop gs and jmp test leave push enter ret aad inc mov aad inc sbb fwait leave nop fdivl nop xchg ja push movhps fldenv push movsbl mov inc push dec xor cs insb add sbb clc in in fsubr nop (bad) lods test aam cltd mov loop loop rorl adc or mov jbe popl (bad) mov xchg (bad) out test xchg insl ret jbe inc ljmp mov popa idivb sub xchg out fbld lock pop jno xor adc jmp pop iret bound cmpsb pop mov ja fwait jno adc or addr16 xlat push adc and adc popf xor setle fidiv das hlt sbb rclb jg aam inc adc xor outsl nop dec imul cmp cmp (bad) lret jne mov xchg arpl test rorl xchg push xchg pop xchg push xchg mov xchg xor fidivl xor hlt pop loope fsubs sub xor rolb xchg popf push adc cmp pop cmp les (bad) imul xor addr16 cmp fmul lds fsub std mov pop push mov es aam pop mov dec aam rcrl cmpsb enter pushl fiadd cmpsl aad inc cmpb vpaddsb fdivl loopne lock fucomip jle into add (bad) mov (bad) test xchg adc popf (bad) in cli sub sbb ficom push adc sahf mov out mov fs (bad) fisubl pushf decl lods jnp sti dec dec mov (bad) shrb lock pop adc dec imul rcrl (bad) rcr mov and inc neg scas fucom nop orl scas (bad) pop mov xchg nop shlb jne (bad) push pushf lcall sahf aas push cmp lahf inc test mov xorb sbb mov and push (bad) mov mov cmp xor les testb inc jle cmp lahf push imul inc push into aam ficomp (bad) ljmp sahf les insl pop sbb mov or push cmpsl aaa mov xchg jg sahf call (bad) aaa sbb pop pop stos nop pop inc jnp lcall mov xchg add or mov jmp xchg sbb mov (bad) into sub lret popa xor xor popa fdivrl pop add dec lahf pop add pop add lds add add add push pop add add add lock add add pushl adc add add push add add add add in add add add rcrb add add add add addb add scas sub add add or add adc add push push pop add add add cltd pop add add add loop add push add mov add pop push or pop mov pop out popa call out scas es or iret lds sbb sub mov sti arpl outsb cmpl lock sbb fdivr cs out jno aam push mov mov or lock inc lds xchg inc stos (bad) pop dec mov cmc xchg (bad) cmp jg test insl (bad) imul (bad) rcll std enter jns sbbl or xchg movsl test and xchg (bad) lea ret xlat dec mov in shrl push and aam movsl (bad) pop sbb jnp jo or sub stc jno aam les push js adc jle test mov pop add sbb addb test pop movsb pop sarl scas mov lcall lret negl pusha lret xchg pop mov popf add push icebp pop xorl and (bad) scas push cmp cs test int mov clc or adc arpl sbb or mov dec cmp movl xchg mov into mov push add jb cmp daa (bad) dec inc mov cmp mov adc mov fisttpll adc adc sbbl or push or sti jbe xchg insl lahf outsb cmc mov mov rcrl fsubl mov subl repz mov xor lret or into jo jno xchg aad inc mov xor push add jle mov fneni(8087 add sbb lcall or mov sbb push ror cltd mov inc test ret cmpsb aad add xchg (bad) xchg fiaddl sti xor loopw mov mov arpl ds bound hlt cmp mov mov dec mov pop and ret (bad) repnz jl or out sti adc add std (bad) push xchg jmp ret in int3 es xchg std into pop arpl js pop je and xor sbb inc mov cwtl in leave dec cwtl (bad) mov adc inc lahf push jg jg int sbb xor out fnsave scas int3 mov adc mov mov nop xchg push sti stos dec mov cli rcrb xor packssdw andl xlat jne frstor mov lods bound jb ljmp xchg jmp dec (bad) shlb aam jmp dec adc fbstp add jne int das xor aaa inc arpl mov enter mov fstpt lahf ja dec push ss and cs in into dec lock xchg add add lret mov push mov jecxz (bad) lds inc fist lcall fcom aas and cmp ss fisubrl mov cli fidivr cs lock mov xor (bad) inc andl mov pop xor add (bad) fdivrp jg sets mov imul push repnz out pop mov mov add pop (bad) mov add je in sarb sub lods xchg test jecxz lahf and xor fistp mov mov mov outsb stos cmp adc fstl mov pop (bad) jge mov mov pop sub cmp pop lods outsb dec cli (bad) repz pslld mov shl cli ret pop shlb cmp loop dec dec test push add mov push fildl test or xlat cmp pop lods pop sbb cltd xchg jbe shll aaa fimul cmc sub inc rcr xor dec orb cs adc negb adc jnp psrld jb add push mov or xor cmp dec push ds dec xchg xchg mov decl das adc test pop gs xchg mov dec mov pop int fwait in lret push xchg xor (bad) roll dec inc lods iret xor and jno pop out xchg lds dec push sub test test inc bound fimull sub pushl or inc fldl2t dec subl repz sub fdiv scas jae (bad) loopne cmc dec mov push (bad) int stos insl dec pop in jnp jmp addl (bad) or push xor int es add (bad) dec mov xlat mov mov and repz (bad) bnd nop inc cmpsb pop add adc sbb jecxz and faddl loopne sahf mov clc jnp,pt xor sub mov in fsubl inc sbb push adc xor mov inc (bad) fucomp shr scas adc sbb in lds inc rorb sysret sub roll cwtl dec pushf (bad) jno aaa outsl scas cmp ret in loope into jge xchg ret lcall into out jbe jb push cmp mov pushf pop fwait pop xor xor hlt leave (bad) pop icebp scas out sbb mov dec movq clc xchg pop addr16 mov sub aad jecxz push adc scas push inc lock pushf xchg adc mov and or cltd insl movsb (bad) pop cmpl sub fiaddl lds push and orl dec int3 fidivl jne loope pop pushf in inc (bad) aam int3 adc push jp je sub push stc call push jmp xor hlt (bad) loope test mov lahf orl xlat cli sbb addr16 sub sub daa rclb mov scas pop xchg ret ja mov (bad) scas enter sti mov inc sbb cmp test mov mov out cmp sbbl push fucomi mov mov pop mov add loope inc add out das mov cltd es into mov sub pop fsubrl call sar push jge cmpsb repnz popa ja xor dec mov cs add cs push in mov clc jne les mov dec in lods mov adc push push test cld mov add xchg aad rcrb dec sbb mov xor push sub shrl daa push jg cmovg ja cli jecxz add add popf jbe notl cmp pop in mov pop push inc pop mov adc xor mov jp cmpsl sub rcrb jecxz lods sub xor aam add add or cmpsb mov aam mov loope xchg hlt jl mov das psubd inc or lahf mov ret xor sbb push cmc (bad) fdivrl out mov cmp dec adc push mov fistpl pop add push mov and pop push loopne adc add dec mov clc cmpsl push xchg lahf js or mov dec pushf inc mov xchg dec aad jge ret mov es jmp subb cmc psubb inc popa adc adc pop ljmp pushf jecxz cli cmp (bad) cmp mov and jmp lret out cmpsl je inc push negl jbe movsl mov rolb ss negl mov lock jae sbb popf (bad) xor xchg dec sbb xor clc and scas jne sub loop mov cld or shlb push mov xor mov idivl mov (bad) sbb push lock sbb push ss andl xor (bad) mov ja andb mov mov mov xor adc mov fstps ftst das and aaa push leave xchg std push imul int3 mov lock cwtl add jmp dec stos ret mov cwtl xor cmpsb push mov xchg je stos insb sbb aad or (bad) xchg xor (bad) ja shr imul je jae and xchg adc jg loope insb jno xchg mov aas js das push shrl les aas popa inc and pop in popa lret jnp pop dec push loop into sub stc mov or lcall aam lcall jnp cs mov iret xor stos jl push adc (bad) mov lcall mov repz incb push inc movsl cmpsl jl bound cmp xchg pop ja lods test jmp or in and insb inc jmp call (bad) int out movsl movsb mov or sub add sub lret push mov das pop fdivrp dec jl movsl outsb jae repz dec inc mov std lret jno ret xchg scas les popa fs jno sbb sbb pushf xchg stos ljmp enter xchg lea jb push or jno addb mov bound repnz mov xorl outsl sub fnstenv je movsl sbb xchg sbb addr16 sbb dec popa dec leave inc pop fildll ret cmp jmp mov or mov daa sbb mov dec (bad) pop push xor dec xchg and add lret sub nop push sub sbb out add push sahf hlt aam (bad) adc push aad or lock int mov adc out cmp repnz pop add jae push inc and mov cmp testb jnp (bad) aad or dec sbb mov jnp insb loope ret jp and shrl (bad) jg mov addr16 movsb enter lock sub das or daa mov xorl pop add rcll das adc stos lret dec mov push pop sti cmp jge inc xchg jge sbb dec dec push insl mov xor je push (bad) mov or push mov mov xchg jmp push push fnstenv xchg push ficomp sahf dec xchg xor movsb mov dec inc movsb pushl sbb insb aas and jnp gs sub shrl rcrb pop dec mov adc or insb add mov pop or cmp xor inc repnz sahf sub adc adc push clc cmc bound popa loop mov or jns popa mov mov add aaa lds orl mov push loop mov sahf scas xchg ds (bad) xchg (bad) test popa or enter mov pop add icebp mov sahf or and mov cli insb sbb xor stc mov outsl lahf daa mov nop (bad) gs stos mov xchg andl popa imul arpl imull jecxz inc xchg scas ret jp roll out sbb les mov lahf xor inc ffree xchg lret inc mov xlat fwait nop mov int3 movsb fnsave push sbb popa sub add (bad) ja lea fistp popl js shr mov out jp xor sbb je jb xlat sti and xlat imul xor or cmpsb pop scas rorl or scas dec inc jmp (bad) xor out push cmpsl enter pusha aas sti movsl (bad) stc mov jbe sti jnp mov pushf pop jle faddp repz xchg fsubrl jbe mov fcompl jno in rep mov ds xchg dec mov inc add outsb es dec mov add and add in fucomp scas cmp sub incb in cmp shrb or and pop fmul (bad) cld lea mov sbb cmpsl jne jmp test adc jne inc jo int jge or movsb jno push push sub sbb sbb jo add iret pusha xlat xor lods ret mov or jecxz cmpsb or adc inc lret fnstcw call push lahf movsb (bad) cmpsl out out add cmp pop daa punpckldq js mov fwait aam hlt or mov call ret xchg mov or xlat insb inc shll mov out xchg xchg adc add pusha shrl jbe fistl lods iret insb outsb add loope sbb adc insb (bad) sbb or call fdivs push inc pop dec mov and push fcoms jp fwait incl push call sarl or mov call arpl fildl xchg (bad) pop dec fildll sub mov (bad) rorb dec mov movsb cltd ja dec mov sti dec leave pop test js jmp arpl movsb into stos lods or adc movsb xor int3 in test dec mov xchg pop test in jns push push test cmpsl hlt punpckldq cmp gs lahf in out inc and or or les mov mov add xchg jmp xor ror sub push mov test movw pusha cmp cmpb movb pushl push pushf lea jne test add sub sbb btr rol das mov shr push pushl not add shr adc neg rcl mov pushl stc test mov jmp xchg outsl sub negl inc insl lds popa push dec cmp loope (bad) lock cmp (bad) ds lcall fmulp or ja jnp jge,pt cmp popf mov cmpsb push js jbe dec adc and mov (bad) cmp and inc jmp js xor inc jnp xor jp pop push mov mov add mov rcrb enter fs inc push cs push cmp fs mov add icebp push dec jnp orb cmc sahf adc xchg push mov ja cmpsb sub fistl sub push jno cmpsb sbb fisubrl (bad) and mov or sub cli (bad) mov sbb out div cmp aaa xor shr ds xchg xchg aad movsl jbe mov test aaa mov cmp scas adc (bad) pminsw int3 mov push in pop xchg jmp jne clc jae stos cwtl in xchg stc pop sub add jge cltd bound mov mov lahf mov jo js sub cmc or cmp test int push ror fdivrl js insl mov xor mov push sbbb cwtl sub int jb xor lret dec je es cld js mov loop inc mov test inc stc jmp inc inc push inc push dec xor cs insb add dec sub add push sub xchg scas int int enter mov movsb pop dec jbe cmp in adc jae jge jge icebp pop push jb dec jno sub mov jnp ja scas jmp inc test clc add mov cmpsl lahf test jne jg daa (bad) fxch aaa add sbb pop xor cmp push je fsts xor dec cmp ret xor fs ficomp and nop mov or cli inc icebp jae xor mov pop xchg pop dec idivl pop and sbb mov or (bad) fldcw pop dec sbb mov and add jno pushl mov pushf lea jmp lea call push lea jmp lea jne adc jmp mov mov clc rol stc jmp dec mov repnz inc imul mov add pusha dec andb sbb xchg pop imul mov rclb mov ljmp push or xchg xorb mov jne inc cmp push jns loopne fidivr cmp xchg lock pop std ret (bad) push addr16 jo pop loop int imul mov fwait inc shrb xor dec cmpsb test mov sub jmp leave sbb jnp lods out ret out fnstenv add inc mov js (bad) or out pop xchg cmp clc stc adc xchg mov stc fmulp fisub mov sub pop jbe cmp pusha mov mov cmp divb stc cmpsl pop jne pop mov or pop lea or cmpsl xor out aad dec xchg bnd out loop pop popa dec js or jae cld jo int3 in mov pop (bad) ds dec aad data16 adc fnstsw mov (bad) repnz xchg les xchg (bad) push adc fs insl aam xlat inc lock cmp mov (bad) push mov test jge dec pop mov dec or loopne add inc cld sbb dec jnp imul mov bound push js lds adc lods jbe cmp xchg jmp test cmp jmp xor into (bad) xchg out aad or rorl das cmp std ret jecxz pop pop push adc gs cltd (bad) ss push fsin push dec lret fcomi mov (bad) xchg loopne pop push mov test mov xor dec mov inc fsub pop push insb aas (bad) repnz mov cmpsb (bad) mov inc push push pop mov sahf decb adc pop out leave rorb in ficoml and test or andb inc push in xor (bad) in (bad) mov in mov xchg lds negl push jbe and movb adc pop addr16 je mov or xor dec push lds (bad) push leave mov push ljmp fstps (bad) xor in mov orb and sub stos in and mov test adc add popf jg sbb cmpsl in push aam movsl cmp pop mov add js lret pusha inc sub dec gs mov roll inc std sbb xchg addb lret loopne ret adc xchg pop push or dec (bad) in fidivl sub xchg push fisttpl push into test or inc push popa or lcall push hlt pop daa xor hlt fistpl mov pop jae lret push jns cmc fildll stc fs sbb mov movsb pop mov je dec adc popf pop xor xchg xchg jne clc sbb out and adc dec je mov dec add cmp pop jns or or cmp ret imul nop insl dec push sahf popl test push cmp mov (bad) dec xchg push adcl shlb (bad) xlat jne inc cmpsb pop and lcall dec inc iret ss fistpl cmpsb dec mov repnz ss (bad) xchg addr16 mov pop out lds ljmp cmpsb jmp daa or inc outsb out iret ljmp lahf ret subl push jge out adc lcall pop leave inc push pop sar or fs mov ror (bad) mov leave jge dec call (bad) adc mov in mov fs push (bad) mov push popf mov cmc dec sub test sbb out pop hlt xchg (bad) (bad) sbb mov mov or pop inc arpl pop (bad) mov jmp jnp arpl inc inc dec pusha push movsl sbb shrl jo test (bad) mov xchg test xchg pop scas scas fucomp je leave sub aaa cmpsb adcl ljmp lret push cltd dec js cmp and enter push fwait sub lcall dec inc dec js xor test hlt mov stos repz pop rcrb inc insb (bad) mov cmc fs fucomip xor lock stc sarb mov mov test fs ret (bad) xor push adc loop icebp pop jl cmp mov fdivs dec cmp cmp les and dec pop inc popa sub pusha cmp outsb lods gs mov aaa mov push push dec cltd mov sub sub out mov inc clc (bad) and or jp sub rolb ret clc sbb push mov aad adc mov test cli ret stos mov adc cmp pop dec mov adc je stc inc jl sahf in push movsb dec sbb sti sbb sub fs add cmp mov (bad) sub in or call or icebp not cmp dec ja push fwait or xchg lahf imul test out int3 and cmp and scas adc xchg je daa pusha mov jno test sbb pop push outsl out xor cmpsl div xlat aam fmull fistpl out dec mov loope xor movsl pop lock sub mov pop out (bad) xchg adc rolb rep inc (bad) pop push mov xlat pop xchg adc inc sub pop leave sub lock push dec dec in dec movsb repz in jg xchg dec cmp outsl std and imul ret mov loope pop cltd and and push mov test (bad) int test push cmp aam test add xlat mov iret push data16 xor and mov call roll cld jo insb sahf pop push (bad) stc sbb mov xchg sbb mov xchg jg (bad) jg insl inc mov aad dec mov mov add lret jo xchg and or lret out cmp shrl div xor jmp daa mov ret das out stos push add dec bound nop mov push cmp aad clc inc mov dec andnps and xchg pop adc cmp xchg jle sub cli jno ljmp fwait es mov shll inc ja jge lahf cmp push stos (bad) pop data16 out adc and push add sub sbb inc jl cli sbb cmpsl outsl adc ljmp sub iret cmpl (bad) cwtl push clc mov jbe pop fisubrl mov adc test fsubrs ja cmp ss dec pop mov (bad) mov adc insb nop test je xlat jp stos pop dec inc rclb insb imul pop icebp lock push movsl cmp mov imull lock push lahf sbb xor ljmp mov jp mov mov add mov movb lahf call pushf test cmp pusha pushf jmp adc pusha mov loope lods popf lds push inc imul cltd jge aad (bad) (bad) sbb xlat and add ret popa mov popa pushf mov adc xor dec xchg mov jle stos xchg or (bad) ss arpl (bad) icebp or push hlt xchg inc or adc mov cmp jle and inc mov test xorl mov push xchg inc out dec imul mov jno sub popa ljmp xlat xorl scas add lahf or add inc adc movsb push jl xor ss or push lea ja pop push bound stos pushf rorb out xor inc jno cmp aam mov dec sahf sub int3 pop (bad) mov push mov push cmp cmp adc out inc popa lds jo (bad) jno scas addr16 into ljmp mov movsl sub adc lretw xlat sbb mov dec fbstp cmp inc push push (bad) pop jmp lock jg stos push push cmc or nop in frstor arpl les scas leave or jecxz lock idivl jge xchg push mov addr16 adc sub add add mov pushf lea push call dec lea jo push inc setl pushf not setno mov mov jmp push pushl pusha lea je lea movzbl mov setl lea xchg call pushf movw mov lea jne sar adc shl add mov pushf call incl jnp add lods mov pop xchg add xchg test mov cs sahf xor and cli mov popf and fistl fisubl and int3 push cltd jg aas xchg mov sub clc jo xchg adc ret sbb outsb inc pop iret inc jl int3 and fldt lock (bad) aaa jecxz (bad) adc cltd hlt push outsb in outsb dec repnz pop add push lock je divl pop popa in mov pusha popf cmpsb lcall dec adc rcll test notl in lss insl pop xchg inc push jo inc dec inc into xor dec iret jne pop xchg fcompp dec data16 inc lock pushf push jmp call cli push xchg xchg test out mov mov fcoms cltd in cmp xor insb (bad) pop push sub mov xchg and fimull mov pop fwait imul mov mov out mov iret cmp (bad) fdivrl cmp ljmp stc lret xchg mov fwait inc loope jp sbb adc adc mov (bad) (bad) cmpsl ds inc jl sbb or push pop xchg sub cltd or add sbb xchg jmp jp sbb (bad) mov (bad) lock push push fcmovnb mov push push shl sbb lret push bound sti int dec sbb xor inc mov lea popf icebp popf stos orb (bad) mov push lods jg jo jae mov dec loopne nop adc mov xlat dec sti jo addr16 mov out insb xor xor ss cld xor cmp mov sbb sti stos test or push test sbb cmp pushl sbb or push push cwtl sub jle mov nop mov adc subl jmp add adc inc inc add imul jo push jae rol mov stos mov pop xchg aad ret int3 inc test repz push ja out cmpb sti ret sub mov adc add push sbb imul loope negl loope cmc sub sti imul ficoml jl outsl cs or pusha pushf sbb out pop mov jle or or inc (bad) or fs ljmp cmovge lret or add loope mov arpl push pop ficompl inc mov (bad) sbb adc or cmc add out and inc sbb sbb or sub jge push (bad) int loopne cmp mov cmp fnstsw insl out cmp cmp or inc add out mov mov (bad) adc std and test movsl shr (bad) std lock adc inc loope sbb fs jne stos push stc mov cmp pop pmulhuw pushf mov in inc xchg imul mov cmp scas add test jbe add sub push jle pop stos inc arpl sub mov sbb jnp cmp fisttpll push (bad) cwtl xchg test mov sub fdivrl das cmpsl lds cmp adc adc jno xchg or fwait mov sbb imul push jae jl push mov sahf aas pop mov (bad) mov movsl rclb xchg insb fcom jg pop lea iret or fwait push movsb pop cld add push adc std lods mov into mov sbb adc and and popa jl xchg xchg std insb pushf lock mov jb jae les sbb (bad) out mov and daa imul cmp sbb sti pop test sub outsl xchg push scas rorb mov lds movsb (bad) in push or sbb fwait pop inc out nop push pop sbb sbb and add push icebp loopne cmp xor sahf dec add das fwait icebp lcall xlat cmpl inc xchg cmpsl mov sti xorl js inc adc mov iret movsb aad pop jne cmp cltd or jge jge adc dec outsb or cld out cmp test lret dec fsubrp roll stos cmp xor push andl dec jge jae cmp stos sbb test jmp cmpsl (bad) je sub mov add rcl hlt cmpl js jnp test mov pop (bad) rcrb ljmp lret push (bad) cmp loop fldenv pop ret inc pop add or aas add rolb andb pusha dec movsl cltd dec mov hlt outsl test or enter fimul lret xchg arpl (bad) fwait mov iret cwtl sti and sbb ror scas pop mov mov add cli lea je push mov stc push inc xchg pop jnp and sbb cwtl add dec jmp jmp inc pop lods popf adc mov fdivr lahf iret jle or add pop test fnstsw (bad) xlat stos subb js (bad) mov dec (bad) jle mov xchg int daa mov pop stos rcrb out fucomi std cltd sbb inc cwtl sbb ljmp mov lret push jae xchg sbb aas dec dec fidivr call movsb xchg cmp or mov adc sti test pop (bad) lret aaa mov in aas xlat mov cli sbb mov outsl (bad) push xchg push inc pop stc sbb mov mov cmp lods fmul (bad) into shrb int dec std lock pop push inc mov dec sahf mov sti pop fmull or loopne (bad) xor xchg pop mull nop or in cmpsl lret ljmp sub outsl or cld call rorb push adc and mov sbb push inc fimull test cmp add or mov sahf (bad) fcmovnb mov mov sbb adc scas pop mov or nop sub popf inc sbb jbe rorb adc lret cwtl lds and rcr fiaddl repnz fldl repz push ret xchg ja push pop mov inc push je dec fistl or std inc ljmp add scas leave stos imull sbb mov movd mov popa ja xor fs inc cmp adc bnd iret pop sti xchg cltd cld lret enter (bad) xor mov imul jge mov jge js xchg mov imul (bad) jle push rorb cmp add dec mov (bad) mov cld iret lods sub lea out sub jg loopne cmpl mov cmpl enter mov decl jmp into ja std push ret xor push test xor or sbb decl adc xchg jnp sbb cmp sub (bad) (bad) cmp cmpsb test jnp inc loopne popf addr16 std js cmpl ds jge sub add bswap shll sti lahf add nop cmp inc mov ss lahf jg add (bad) xchg gs xchg push push inc lret xchg mov lret or ret hlt imul daa lds jnp jg jge leave (bad) or (bad) loope std inc inc xchg fs ss pop add test add in or lahf xchg add add loop (bad) mov jl inc or mov or and cmpsb ror jl inc inc fdivr add xadd ss scas jnp and xchg inc or mov std sub inc dec addl addl push inc fwait mov lods ljmp jl xchg mov mov aas add pop push inc repnz inc (bad) aas or adcb test jb inc and in or shrl mov sbb mov addl jmp stos in mov outsl test adc mov inc push pop leave loopne hlt outsb mov jnp dec cmp pop xor cmpsl xchg xorl (bad) dec leave pushf jmp or cmpsl stos xor xchg fimul cmp mov and adc idivb push fist (bad) repnz ja jle test inc jle mov xchg or mov jmp cmp adc mov xchg stc dec or ret and jg cmpsb movsl ds movsl cmp add fildl fucom fsubrl jnp push jmp and scas inc ret ljmp and add cli (bad) mov rclb aaa push test sub jmp xchg daa lret mov out std inc js jle mov cmpsb cmpsl jno and popa or (bad) mov fwait xchg push (bad) lods push aam nop sub cmpsb jmp int3 inc or or (bad) mov add cwtl aam fndisi(8087 add push xchg jo out es not stc mov rcr bound js mov sbb or (bad) mov les pop out xchg (bad) lock rcrb lods movsl sub fwait push hlt repnz inc arpl (bad) lea pushf ljmp mov and inc mov arpl jb jl or sub sub imul sti pop xor jl mov iret jmp add mov mov hlt mov (bad) divl or pop fwait test cwtl push ret cwtl push fisubl xchg fcmovbe sbb outsb inc and shlb adc xchg mov mov std popf stc pop outsl movsb (bad) inc orl movb aam add jle aas clc cltd hlt add (bad) mov mov mov adc lea icebp add jns std and push cwtl scas jge ds sti fwait add dec add sarb test pusha push (bad) insl test iret mov mov fildl (bad) std add dec adc inc dec neg or xor aas rcll jge xor mov push idivl sub mov mov or add mov mov or cmp and mov loop aas sbb jbe cmp loope pop mov cmp jnp imul js or loope xchg dec lds add mov fwait add mov add sbb leave test pushf mov jle fwait std mov mov dec push sub addr16 jmp push fstps sbb push sahf cmpl add push loope mov call sbb push int3 shlb hlt movsb mov inc sub inc or js jg aas xchg addb or mov int3 lds sbb mov ret jge mov jle jle rolb inc mov xor jnp mov xlat inc div mov cmp sbb ficom (bad) outsb (bad) adc or pop fwait mov jmp fistpl cmpsb sub or or test xchg cwtl ficomp dec or aas push dec aaa and (bad) cmp jge jge inc pandn adcl imul lock or or cmpsb icebp pop mov call nop out push mov mov scas mov sahf jmp mov (bad) cmp jl (bad) jo lods insb or dec test add test inc pop arpl outsl jle inc cmp fistl or sbb mov stc pop (bad) cli sbb hlt mov pop (bad) sti or or jo jl mov push lret mov popf hlt cmp add or ljmp dec sbb mov daa mov aad lea cmpsl movsb sub xchg repnz ljmp les mov jno sahf fwait mov std mov out lret insl call inc sbb fistpll in rorb fisttpl mov out jle fs fmull push sbb mov cltd jnp mov mov mov in in in or test mov inc fwait sbb jbe sbb mov sbb rorb cmp cli push mov rclb add add sbb mov xchg mov sub mov push hlt int add inc add icebp cmp in cmp pop iret std sub jns es jecxz,pn sub sbb sti xchg xchg push adc into lock aad sahf fstl or adc and loope shlb rol stos push cld mov jl mov mov adc jnp sub or in or mov ljmp push sar aaa push inc (bad) rolb int3 jo cmc (bad) fldt sti or dec dec add fidivrl flds movsb shrl mov mov movsb dec in or add cmp sub and loop (bad) jne iret adc rolb or (bad) mov pop inc (bad) aaa pushf imul pop dec in imul addb outsl in mov stos mov sub or shrl mov sbb call sbb (bad) adc mov icebp and in std lods inc mov add and aad xchg or movsl add mov (bad) xchg (bad) dec mov test fisub mov jl cli (bad) or pop popf xor push ror or outsl mov and xor push inc out xchg je sbb scas or int cmp sub xchg fs je push std imul arpl lock add dec imul mov (bad) scas mov rcrl dec inc mov aas outsl mov out or sub jmp push (bad) or or cmpsl nop adc mov sbb dec stos lahf into mov nop mov dec mov imul sub jno call dec mov mov adcb pop sbb jg fdivrl xlat imul repz (bad) das pop mov inc out cltd (bad) mov cld sbb sub push mov cmpb and (bad) imul pop mov xchg or es lret jmp mov xor pop mov mov rorl adc test ret adc xchg sub cwtl jg mov jl fildl xlat out (bad) call jg or movsl lock inc add mov dec mov sbb or lahf arpl add jbe mov jnp stos fnsave mov sub fsub lret cltd add imul xor xor nop add mov adc jne inc inc push inc xor sti mov je insl inc dec pop jge xor cwtl sub aad test or pushf outsl ret enter lock inc add ficoml pop adc xor mov mov (bad) std enter mov cs loope dec push outsl xlat mov and ja jl sarl mov lods xchg (bad) push mov and sbb sub (bad) rorb fistp movsb test push xchg jecxz scas adc mov js cld fs mov push jge (bad) daa jle movsb add add jmp mov cmc push sub jge xchg inc or mov dec mov lock cmp mov scas sub pop mov dec (bad) adc adc setnp (bad) and xchg popa das mov pop mov mov outsb addb ja or rorb cmp mov sbb sbb sub mov fsubrp das in dec (bad) imul rcll push xor cli inc xchg test xchg in mov inc ja popf push leave or pop xchg in xor shll into mov add rcr inc lods jbe jo xchg add mov xchg add fs fwait ja (bad) mov les movsb push aas cmpsl pop (bad) int3 lods mov cli mov rcrb inc or fisttp fistp inc dec rcrb lock sbb mov (bad) cmpsl (bad) outsl mov fwait ret enter xor cmp in (bad) scas pop add roll mov pusha imul xor dec mov cmp stos or ljmp ss cmp out daa sub sub (bad) jp inc sbb inc (bad) (bad) aad push aam adc rorl js mov add or imul pusha jmp or fcmovb clc cmpl inc pushf daa inc sub or test or sar add pop lods push or out mov outsl fstpl sbb test enter inc xor push xchg inc sbb (bad) mov xchg dec les jge lcall cmp mov or inc mov lret ret pop ljmp (bad) push xchg (bad) sbb mov push add out aas das add rorl adc xor fwait pop push lret push sbb js mov sbb dec sub ret imul loope jno cmp sub leave dec (bad) fimull js inc cwtl movsl jl pop ljmp daa inc ljmp cmp mov stos (bad) mov xlat packsswb int stos fistp (bad) cli out loope xchg pop jo outsl xchg call cmp fcomps sbb push fcmovnb les add sahf inc xchg mov paddsb pushf pop mov std iret pop lahf (bad) push sbb ljmp (bad) popa pop mov push jnp js xchg fiaddl data16 add data16 hlt aas lahf push fs aad push aad jl call mov (bad) sti jmp (bad) ljmp jmp ficompl shlb xlat mov mov (bad) cmp dec mov test pusha ss or push ss adc xor js jl std pop add mov and mov cmpsl cmp into xor fisttpll mov fwait adc movsb adc movsb repnz mov aas dec jnp xor jg and test sbb add sarb and fwait sbb xor cmp rep imul add arpl hlt dec lods jge roll add ret (bad) mov loope add outsl addr16 jae and pop das shl movl ffreep mov cld (bad) scas out gs je (bad) aas adc clc dec adc sbb mov add jmp nop sub in mov jl lahf (bad) sub adc xchg rorb cmp rcl stc nop adc sbb sbb add mov cs test push cmpsb mov cmp sbb add xchg mov or scas push pop inc or dec cmpsb xlat push and insl jge jae inc out sbb pushf inc xchg (bad) pop cmpsl xchg or int inc add (bad) mov nop inc add ds pop mov adc fwait in out (bad) cmpsl jnp test imul cmp push sti add loop jmp jl fisubrl jle pop cwtl mov add imul xchg fcomip lds les sahf es loope fisttpl jle std jle sub sub pusha lock mov (bad) jae inc cmp loopne push adc sub jmp movsb xor pop sub xlat sub xchg and dec out (bad) jle push test xchg rdmsr ret lahf gs or ret rorb inc popa pushf loope lea mov or mov add xchg in iret aaa popa mov pop add pop fstpl addl sar pop cli xchg push scas clc sub adc xchg dec scas add cmp jmp sub pop pop insb inc fwait or and shrl jne clc insl loope push lods and push daa fisub fidivl ret xchg in loope enter test inc (bad) popf dec mov mov ljmp (bad) mov or inc mov (bad) fldcw or aas inc shld popa lret jg (bad) mov xchg cmp push (bad) aaa les dec lds xchg (bad) add and std dec jg mov dec mov mov add aaa pop add xchg imul mov or mov test fcomps cmp cmp add mov addb xchg mov sub and rclb cld je das mov lret addr16 (bad) aaa fwait inc push xchg imul jecxz inc add mov (bad) fstpl dec mov push addr16 inc rcrb mov pop stc pushf (bad) movsl out outsb ret ljmp call sbb fisttpll mov pushf cld enter sub inc xlat rolb insl push or pop pop fcoms sti push adc push jo loope nop aas mov mov js pop movsb inc add movsl inc jle scas movb lea test std pushf fcomp outsl mov inc and sub jl push push mov incl cmp xor aaa mov cld imul jp,pn aad subl fcoms mov push lds inc add in loope addr16 adc jne stos inc fildll pop (bad) aad cmpsl rcrb (bad) int3 or scas ffree push (bad) repz cld mov mov push in sbb mov push or inc pusha pop cmp add mov add mov in mov inc jo ret js js xchg push mov clc mov push xor pop sub das inc sub pop mov sbb xchg xor and loop sub sarl cld sahf cmpsl shr sarb fs or jge mov inc es cmp pop push jbe mov dec cmp (bad) je rolb mov (bad) jl cmp cli les into aas les mov icebp sbb pop sarb movsl jl sbb nop jns ret scas push cmp sti mov hlt push fisttpl xlat mov sti cmpsl jl pop movntps nop push adc fwait lods incb je sub inc push cmp test cld cmp repz loop decl or xchg loopne out add add lods repz imul jo cs test pushf mov adc mov pusha int aad rclb mov insb repz (bad) pop cwtl sub jbe int iret cmpsb pop (bad) mov movlps cmc inc icebp xorl mov push stos mov push add test jo test cmovle jo scas jae push test xor push or mov std jnp inc dec sbb rcr loopne outsb aas std mov jbe push cld aas jno clc dec loope lret inc sti mov inc jge (bad) mov cmpsl mov or adcb arpl movsl (bad) (bad) fsubl pusha addl or sbb mov dec fadd mov fsubrs stos sub pop mov or mov mov xor test add xor les leave je xchg add outsl xchg pop ljmp jle ljmp xor enter cli imull mov push jb mov insb mov mov jl push fs push jge and je cmp or pop lds insb dec es rolb sbb in cltd sbb in push mov jbe adc inc mov sbb rolb test xor popf mov (bad) jle sbb int and add push xor xor xchg pop mov bound jp out adc mov clc aaa mov mov mov or sub (bad) or adc dec aam aas mov sbb lahf cmpsl nop sub insb inc int or incl jnp dec jg lods cltd jmp je,pt imul cmpsl jle jecxz add inc sub cld xchg fwait mov xchg ja int mov push (bad) shll xor ret stos pop movaps out ss sbb dec setb mov sub imul orb sahf mov mov repz fsts and daa add pop popf sbb jge andl push jb lods xchg cmp rclb arpl icebp inc stos addb popa xor sar ror ret or inc fnstsw test push inc jns sub cmp and or cmp xchg dec mov or rorb push and cmp lock push hlt mov add mov jae cli mov out inc scas std mov mov mov addb mov mov sbb add test dec das (bad) sbb mov popl pushf sbb or jne (bad) bound ss jo pop xor mov jbe fmull add js mov push mov mov or inc xchg jp dec mov lock push mov imulb pusha mov in mov push mov xor mov ds xor mov pushf iret mov mov (bad) addl scas repnz mov jg int mov fcompl cmc fadd jle lcall lock or mov fdivs mov push add mov xchg out pop (bad) or (bad) daa imul ds rolb aam das add int3 scas sub jae mov dec imul das jnp pop (bad) out aam (bad) xchg xchg push aad xchg mov scas adc or dec pop shrb mov sbb fnop fs inc jl imull mov into push inc fwait lcall mov shrl pop sub inc xchg mov push inc sbb mov sbb sbb arpl paddq add sub sub stos mov (bad) in in pop int mov in in adc test or mov push mov cmp inc stos mov and jge cmp add fbld sbbb imul mov dec jmp jmp sbb pop mov cmpsl pop es jge lds aas mov or sbb adc or jp loope pop or dec mov xlat dec mov cli mov jae int3 lds fmull ret addl or jns repnz mov sub sahf ds xor push pusha xor xchg ljmp fldcw cwtl inc subl daa cmp dec loopne mov pop mov sarl insb xlat sbb test sub sub xchg arpl movsb ja fwait inc test push add and (bad) mov jg jmp pusha and shll xchg inc ljmp cmp push or dec (bad) (bad) pop repz popa fdivrl sti pop push xchg sbb popf cltd pushf clc xor sub adc mov sti add sbb mov lock adc mov bswap (bad) mov cmp popf jne jle push xorb or mov ffreep adc push jnp imul adc sti jg je pop pop out andl cmp roll ret out sub and mov sbb outsb adc add pushf xor (bad) sti xchg sbb (bad) in inc test jge sub jg fwait push movsb cltd inc aaa out movsb jecxz cmpsb stos scas es jg adc mov mov xchg popf jg lods int bswap (bad) ss sar pushl and movd rolb ss ret jo popa mov pop push rol xchg adc add jge in cld jle xchg xchg add mov jge sbb aas nop iret lret (bad) xchg push inc mov loop inc je sbb pop adc pop xchg cmpsb fmul pop and data16 push xchg sub (bad) dec push mov icebp pop xchg or add add and push xchg cli jl add push dec popf and or repz xchg cmp or pushf push dec aam hlt adc add pop or adc mov jnp dec negl repnz rorb or add or iret mov cmp gs pop dec fstpl xchg (bad) ds xchg lcall sub outsl mov or mov gs xor daa imul push or push mov insb popa fwait pop lahf or lds add sarb je mov cmpsb cmp (bad) and sti movb rorb repz shll push in or cltd ret or add sub mov cmp test push dec (bad) scas cld fldenv aam pop push add push fildl xor xchg pop push pop mov mov cli pop scas pop xor cmp or movsb lcall (bad) mov or jge jmp xchg (bad) mov add sub std jnp faddl mov inc rolb cmovo fsub fstps or (bad) pop fild pop xchg (bad) pop aaa push cmp ficompl and jmp jmp lahf or icebp repz mov (bad) (bad) loope aad sbb call cmp mov jo repz mov pop ds mov je push enter std inc or pop and xor push mov push mov call jle jecxz cli test test push mov inc popf lret sbb xor out pop mov jl sub dec pop loop clc loop mov sti cmp cltd and jnp nop mov in xlat lock lds fwait jle cmp cmp inc jo movsb cmp and xchg jbe and mov (bad) aaa test (bad) mov xchg lret movsb push cltd in ds cld or pop xchg shrl cmc fwait sbb adc mov mov pushf mov sti add jp mov dec mov lret add xor mov nop jle das dec addl sbb (bad) imul xlat mov insb inc (bad) cmp push add movsl pop std ds push incl bnd arpl or pop sbb mov cld lcall fcom jb add jo (bad) xor mov and sbb int sbb pop std or stos aam jno dec or stos sbb adc lods xchg cmpsb lods jle outsl pop outsl loope je push or scas xor sbb cs xor mov out jbe inc and xchg aad xor or push loop adc inc (bad) dec sbb das mov incl jnp lahf cmpsl addl out popa movsb and inc mov ret push mov in sbb cld pop adc cmpl fwait pop cmc cmp cli add inc sbbb addr16 cli dec and add mov sub cmpl cwtl adc out mov inc pop test (bad) jmp iret pop ret sahf mov add ror xor sub xorb sti mov adc fadds add in ds fiaddl mov cmp xchg sub gs xor in adc inc xor adc mov lock cmp push or rolb or jle (bad) pop sbb jne mov sbb (bad) cmc rclw lcall es mov iret fs std inc (bad) mov stos adc fs pop add rol insl mov outsl mov in mov ljmp int wrmsr std dec cld rolb jo cmpsl jecxz add fwait mov jle repz add pushf inc sub lods cmpsb add lret (bad) das jecxz mov xchg stos movsb dec cld or std push xchg add sbb int fldenv mov pop (bad) jbe inc sbb es jge addr16 call (bad) jnp rcll adc cmp cmpsw mov movsb cmp sbb jo int3 mov test iret xchg xchg pop push gs mov call add mov ret int stc push mov sbb mov push mov pop cmpsl add lahf insl dec mov test lahf mov sbb xchg push xchg jge mov mov mov xchg mov ret add mov mov (bad) pushf or dec les ret in pop mov pushf sti jl add (bad) dec sbb insl or int cmp and out test push xor fistp fstpt or dec mov (bad) outsl sub xchg adc sti addb or mov int fisubl push int cmp pop scas loop adc xchg jnp inc mov rorb push aas mov jge pop (bad) push call call mov sahf (bad) cmp mov test push mov rcrb or xchg jge stos (bad) mov adc test lret cli inc lret jl jnp add adc sub stc jle popa jne (bad) fistpl xchg sbb mov mov leave push xor pop sub out and push inc rcrb into add or sub add (bad) jae clc pushf push xor inc mov cmpsb adc rol mov lea cmpsl jnp sti adc xchg inc cmc test loope (bad) psubsw adc pop inc and jl fcoms inc mov sub jmp push lret loopne arpl popl into push pop cmpsb lods repz xchg outsb or mov pushf rolb jne (bad) mov cmp leave sbb lcall mov xchg stos mov sbb mov (bad) insb (bad) lret push out setae xor or popa mov mov adc lock (bad) test adc mov (bad) sub sti icebp mov fidivr pushf out stc xor xchg dec or cmc subb mov push pop inc ret pop imul and dec aaa cmp or imul mov outsb dec xchg daa xor lods ss dec jge mov addl pop (bad) sub outsb or (bad) mov das inc movsb loopne jns scas aam nop xchg (bad) (bad) push ds je dec icebp xchg lds callw push mov jo xor xchg js push dec stos in lock shlb nop (bad) cltd sbb xchg insb loopne insb cltd mov cld xor or mov loope enter sbb (bad) bound int3 pop andl mov loopne mull fwait shll or aas mov mov jl adc stos mov das xor cmp jecxz mov nop pushf lods pop mov and (bad) and or mov sbb dec mov data16 add xlat push push sbb jno cmp xlat xchg imul pop jl and int3 mov pusha aas pop (bad) jl inc popf test fwait pop mov mov out sbb mov and add jnp incb imul push and jl pop pop mov std sbb add cmpb adc ret pop sbb or jo les test push repnz sbb fmul int test popf adc push adc cmp or pop (bad) popf (bad) out std jmp nop adc aam and (bad) mov std in jg enter adc jmp push rcrb or and xor mov lea mov out je lods mov xchg add mov xor sbb leave aaa and jo repz (bad) fiadd les add iret fiaddl sbb and leave aas push mov sub addr16 jge daa (bad) out adcb pop push les or or mov cmc xor push sbb or mov mov clc sub in sbb mov push xchg test jecxz fdivrl add xchg cmp dec jbe cmp (bad) push frstor push cmp mov mov add stos jg popl jle (bad) stc fdivrl pop or jle,pt add ljmp jne pop aas inc xor adc stos push movsl mov pusha (bad) or mov ljmp out test add jns rorb mov fidiv nop popf jnp incl lret mov xor jnp sbb scas out lret in ret mov pop push int3 lahf pop sub mov push jmp or repz popl push (bad) lea bound push std stos and rclb pop insl ret mov mov add (bad) sahf das aas cwtl add lret sbb cmp pop xor cmp out lea in (bad) mov cld outsl xchg pop jg mov std sbb pop pop ljmp fdivrs pop (bad) mov mov mov sub je aam pop xchg cmp or lds loopne sahf (bad) cli mov das lea and scas fcompl ss clts mov xchg dec push or and dec cmpsb jge inc xorl out aam cmp mov mov jle mov lds jnp or in in jno inc fwait les or xchg push xlat mov imul (bad) xor lea addr16 push cmp jno cmp das add sahf add add push mov mov pop ret test xchg xchg mov fisubr test inc ds in mov hlt (bad) cltd jae (bad) (bad) xor xchg or pop add in mov shrb pusha pop mov imul inc stc xchg out jbe sbb ret pop rorl neg adc adc sbb dec mov movsb jo addb and pusha mov in fucom inc in lea lock cltd or mov stc add cmp push dec outsb out cwtl lods xchg cli mov call sbb inc rclb xchg inc lret mov dec orl loope mov push pop sub adc jmp addb xchg push mov xchg cmp dec pop fdivl (bad) cmpsl add cmp stos leave or jecxz mov das mov cmpsl push mov xchg cmp hlt icebp mov scas stos add sbb arpl dec sbb xor push dec xlat stc mov lods insb rol fs mov sbb addl pop popa mov push mov or mov scas push cmp adc (bad) jg cmp outsl sub (bad) xor enter add fwait push out outsl inc mov data16 out test sbb stos aas in (bad) lods in inc movsl insb sbb test dec out movsb jne lds (bad) or push leave pop mov push mov loop inc cmp mov adc jecxz inc mov sbb into dec test fwait arpl sub cmp jnp cmp jg push xchg or adc sbb xor pop or popa das jge insl (bad) sbb push aaa repz mov mov repnz cmp sbb add or out push and pop fwait lea in and mov sbbb pop sbbb in mov mov addb ror xor aad inc fmuls push mov dec call or dec js jecxz fs addr16 test decl xor data16 (bad) jp jo or mov scas add jo or bnd fs (bad) pop mov cld rcr add push in push jmp push add fistpl sbb lods lods test and xchg jnp sub jl push pop lds push enter add sti pushf or sub xchg seto mov push or add adc jecxz (bad) and or fs in jo lods ret (bad) hlt pop in xor mov cs adc mov (bad) dec cmp (bad) adc out mov push add bound jo insb mov pushf jge stos mov outsl pop mov lods jle add insb ret (bad) push dec in sbb out sbb push sbb imul adc lret data16 incl imul push lods and dec mov sub and loop lea jmp sub loopne sub dec jnp jno inc xor push xchg xchg stos cmpsl xchg cli std or aas inc push inc and outsb lods pop pop inc mov clc add out pop icebp xchg ss jns (bad) aaa mov (bad) mov mov jg mov scas insl sbb clc iret mov scas jp in pop push arpl or mov cwtl push mov fwait cwtl lcall dec jge repz add or lods jo jl lods roll mov sbbb in movsb imul lret das pop mov mov pop and int out pop or lcall inc pop dec loope push push mov mov pop scas test (bad) inc or cmpsb nop fwait push gs xor cmp jae inc jbe jmp xor pop xor xlat mov sbb or add in imul in out lods push shl xchg xchg cmp or push imul (bad) out repnz addr16 idivl sub ljmp cld or daa sarl lret xchg mov (bad) jl in mov or mov lock cmpsb cmp in addb ret test add pop or cld push sbb adc mov mov jne adc inc mov add je inc jbe ficom mov add xor add or sbb add jae int fwait mov jge pop add add jge push cmp sub cld jnp iret jecxz jo adc imul ds std jg leave lods aam fwait dec add (bad) jl or add pop loopne cli fwait nop sbb mov sbb (bad) nop pop jge fs scas cmpsb pop pushf jns mov das sub mov inc ljmp jge,pn fwait push aaa adc jnp or rorb push ret and in xor dec inc aad js sub loopne (bad) fisubrl ljmp cmp (bad) pop xor or mov xchg lahf dec pop cmp sbb stos seta scas sti js pop or jle call mov or pop and in inc sbb rorb out xor push idiv pop aas enter int3 sbb sbb stos jbe inc leave pop cmp push push clc jg sbb aaa pop cmpsb pop xchg push fmul (bad) mov rol lods mov (bad) pushf push adc loopne sub xor mov jnp stos sti or mov add mov dec sbb cld inc inc clc inc je or add sbb adc xchg inc sbb imul test adc arpl mov adc sbb sbbb mov sub lea (bad) mov or pop rolb enter jbe js mov out andb jg,pn inc loopne dec jle jnp inc loopne cs cmpsl mov mov jle ljmp xor (bad) mov fwait ds lahf (bad) adc mov pop mov jo xor add push jo out or mov cltd jmp aas mov or pushf or clc movsb adc mov xor dec xor std mov test lods sbb iret aam mov xchg jp fadds frstor mov nop loope in sti jo push (bad) lcall add mov jne mov addr16 dec pop jbe stos (bad) jge sbb xor test (bad) inc out mov jnp and stos adcb movl movl cmc xchg adc sub leave jg add (bad) lret add jecxz add movsb jmp mov adc fistpl cmpb (bad) jb or jne xchg outsb xor hlt cmp xlat xchg loopne cmp adc (bad) pushf mov mov das cmp mov jnp jno in fsubrl xchg add ds push push adc dec inc push int dec fwait pop jne xor mov stos xchg cmp lret mov xchg fisttpll int3 cs hlt bound sbb add dec mov mov mov xor loopne and or test rclb sub clc nop sbb (bad) jnp (bad) cmp pop sub push scas pop outsb push sub (bad) ljmp pushf or push pop jns ljmp decl mov xchg mull mov (bad) test les inc add push lock shrb sbbl or roll and dec xchg push or fs dec je (bad) out push neg movsb popa subl jbe movsb rcll js xorl stc pop fcomps pop pop sub sub jo xchg push out nop pop test mov jns add push out xlat mov fnsave fwait cmp popf cmp test int rorb flds mov cwtl sub enter dec sbb vsubps jbe cmpl mov jmp aaa pop sti sbb hlt (bad) pop imul popf or icebp pop (bad) jns jae ljmp in (bad) mov sub xorl orb (bad) sti or dec mov jne mov pop jns mov loope jnp jnp adcb mov mov mov add pop sub push test jnp sub cmp inc in cmp ret fsubl pushf flds adc int mov lcall push aam pop inc xlat add push add (bad) std mov add bnd inc dec in (bad) xor jae mov dec stos je lea in adc add outsb insl xchg repz icebp loop ficomp adcb test (bad) sahf pop sbb das pop cmpsb data16 push adc repnz iret xlat xchg sub jns cmp add lcall pop jns adc mov pop nop and adc mov jae aas pop leave insl cmpsb imul out jg sub push cmpsl sar and xchg call loopne xchg add jno mov pop (bad) jmp int3 push movsb out xlat fnsave jl lds (bad) xlat das and add lock in leave aad mov and mov movsb inc or (bad) scas nop fldcw and loope pop add stos push jnp out mov mov pop lcall mov (bad) add dec clc (bad) jo adc mov lds adc sub xor mov sub sub xchg add in pop hlt mov je jge cmp push out out iret jl jae or fsubs rorb dec sbb sbb jg jnp shll dec pusha push and stos mov xchg stc inc add mov ss mov mov inc les and outsl xor xor and iret sub add (bad) in mov add mov cmc add ljmp stos frstor imul sbb fnstenv cltd fnstsw push and inc fild je or ss pop sahf out aaa ret xorl sub inc add sub dec push mov cmpsb mov sahf pavgw cmpsb sar jo enter pop dec repnz jp sbb lret add cmp pop subl inc add add rclb cs jg scas mov in push sbb xor dec add fwait imul xlat adc mov or jle ds cmp mov sbb mov mov lods ret pop mov pushf ret jle pop pop addr16 pop sub jecxz add mov in out pushf or jmp mov sbb lea sbb sub jmp imull push loope push (bad) mov shl adc popf xchg jno aam mov js fiadd cmp dec mov cmp xchg in int3 jl and push jecxz in movl pop movsl pusha sbb dec pop dec sub jle rorl loope jb pushf pushf xor push pushf or mov sarl push ret fsubl sub adc ret add pop mov ud2 mov pop adc or cmp popa inc cwtl fisubrl jbe shlb mov lret insb lea int data16 fistp or adcl clc mov xchg xor lahf sub xchg and jle sbb addl (bad) fmul cmp xor pop and movsb mov xor rcr mov mov imulb out sbb mov stos sbb cmp dec cwtl ljmp mov or mov push lcall xchg popa (bad) sbb push arpl xor cmc call inc call and clc mov push lret push bound pop sarl dec inc dec mov lea lret dec jnp cmpsl add das (bad) dec sar mov jnp xor and fdivr mov sub enter hlt add daa insl sti cld push cmp (bad) sub aas jnp xor sbb addb mov lods mov pushf stos lahf mov into aam lds sbb pop jmp sbb cmp and xchg or ds inc movsb cmp je fcompl add mov ljmp or jo sbb cmp mov adc aas (bad) adc pushf or mov xor fmuls out xchg dec lds fstpl xor jl cltd adc aas movsl lret (bad) push mov add outsb hlt (bad) mov out fistpl (bad) jg hlt adc int (bad) fsubrs dec dec stos or aaa and add andl loop rorl xor xor out stos test xchg xor lock mov mov or adc push dec lcall jg in inc push mov jg add mov or jle ret pop dec std sbb lahf cmpl loope rep xor mov mov xor adcb icebp xchg test pop jle push dec lods in mov (bad) pusha and add (bad) xchg adc and lock jno add mov xchg fstl add bound jnp mov add xor push cmp cld xor std pop xchg xor add out add pop cmp inc jmp lds mov mov push pop outsl mov fwait add jp pop adc ljmp iret xor inc mov jns in push mov mov jg mov js sub je push cmp fwait pop or xor adc bound jmp gs in xor mov je leave adc push pop stos movsb cmp xchg sbb push adc out adc cs or xor jmp test sub mov fdivl scas loope mov push popf nop jbe mov fwait add mov push xchg sahf addl cwtl lcall cmp (bad) enter xor repz (bad) mov adc lds les xlat jb mov sub (bad) mov data16 lods psubd mov or int xor out repz push jmp in mov xchg sbb push (bad) dec repnz xchg sbb mov inc (bad) inc xchg mov push test ret mov aad and adc popf pop mov cmp xor call jo aad jle mov dec fwait jno jbe shr pusha pop pusha lea mov or jg push or lcall test sarb adc lret insl or mov add fidivr and cmpb sub adc xchg jbe adc arpl mov add mov and (bad) xor in sbb sub les mov pop insl shll cli cmp xor mov fcmovne pop cmp jne enter or aad sahf fwait mov push sbb or gs sar in aaa stos sahf fdivrl inc inc dec sbb sub push es push mov xchg cmp pop mov mov inc mov cmp rolb int or xchg and aas fsts test cmp xor add or inc xchg mov add aad mov add dec sub and ret cmp push mov pusha stos lahf add outsl leave gs in xchg push in std jle das mov or test jbe out and add xlat insb pusha popf mov mov mov bound cmpsb pushf pop dec mov pop sbb push adc adc adc arpl call jge (bad) insb ret add cmp pop fnstcw pop adc push jecxz pop lret add ja movsl cmp ds inc ja xor push add sbb push xor gs stos arpl psllq cs or push call fwait cltd and sbb xchg jg cmpb test lret push xchg in pop test pop es cmp (bad) mov (bad) sbb sbb cmp xchg pop xor ss push movsb xchg xor or cltd scas lahf inc mov inc stc das roll inc cmp dec lock xchg test (bad) push mov ret push (bad) das in jle sbb cmp jnp mov xchg rorb push sub pop and cmpsl jge mov fwait bound inc fs push or or icebp mov xor push cs test or mov daa hlt jge mov bound push pop movsb adc int loopne mov jl fcomip mov (bad) mov sti je push lahf jno pop sub xor enter pop adc lret and and jecxz pop and pop lahf push add mov mov fwait mov or push movsl xor xchg loopne lds pop xchg jmp in sub push push pop cmpsl push dec adc dec adc mov push pop mov cs leave mov jae add push insb stos adc xor sub icebp sti aam fadds addr16 std add or inc int3 mov or push inc (bad) pop cmp (bad) sahf out sub and mov stos push movsb in mov pop std test add negb (bad) (bad) into andl mov in xor adc gs lods cmp int hlt mov fldl jmp mov push xchg sbb sub (bad) jl stos int mov in xor cmp int pop pop das bound gs cmp cld push (bad) jge bound repz ret (bad) outsl sub stos arpl addr16 pop repz imul je ret pusha xchg aam cmp lock rcrb jmp fnstsw sbb mov mov adc (bad) int bound les arpl (bad) inc (bad) sti lret xchg inc popf pop add les (bad) push mov loopne aad xchg pop mov sar mov rorl lcall xchg mov xchg cmp mov pop loop or mov and add in push (bad) in cmp hlt add push sarl inc les call pop movsb pop jge cmpl xor mov mov dec scas js int andl jg bsf sub push out jle add pop jecxz cmp fwait xchg dec out or push sub mov shlb imul inc lret (bad) add jg jg iret pop addl inc pop inc adc pop mov cmp mov rcrl add cmp xor inc mov movsb mov jp mov add adc in adc sub jge xor out ds cmp pop mov data16 daa ljmp adc scas add add rcr out out adc adc inc push data16 paddusb shrb subb jge fidivr pushf (bad) jl dec insl lea adc sub lcall xchg sub fsubs cmp jne xchg sbb pop repnz ljmp jae jge js bound repz test out pop fidivr sub add imul roll fcmovb push sbb mov add and aas jg mov add popf push dec out sets nop sbb (bad) movsb push inc inc pop or andl cltd xchg addr16 jge test leave cmpsb pushf std and xor insb and cmp iret nop or xor sub cmp mov decl fildl insl pop sbb push (bad) xchg rcll dec or mov addr16 add (bad) test pop add test test je repnz pop leave jae xor je sbb xchg nop adc dec or xchg ret lds pushf pop xor xchg add xchg lret imulb jns pushf roll pop imul (bad) cli fwait and ret and pop jmp ss cmp cmp cmpl jp sahf push mov lods cmp adc push ljmp aad jbe xor sub adc ds les (bad) push test (bad) mov incl pop call sub add sbb (bad) push mov mov mov lea sub fwait push test xchg jbe inc jmp xchg cmp pushf or sbb cwtl out adc pop jl mov push push adc jo inc push dec aas lret fmull adc movsl insw jle test push imul ss mov out ret push push sbb popf les movsb es scas inc test sub mov insl (bad) rorl mov mov xor mov mov adc xor mov jge mov sub sbb test mov jo push int pusha add or nop dec jecxz jmp idivl adcl mov xchg aam fiaddl dec fwait call jne adc cmp cmc cltd hlt adc dec je mov jb sbb sbb (bad) pop inc or lods or mov add xchg push in fs adc push pop loop fsubrs (bad) ss xchg xor mov push pop mov adcb push hlt lret nop std repz mov push scas jle pusha adc or xchg xchg and test jmp jecxz dec paddd pushf or push add arpl cmc mov movsb (bad) cld cmp lcall mov push leave or les (bad) dec dec mov dec jb int sti pusha insl inc sbb int in mov shlb popa xchg add pop xchg xor cmpl adc adc loop cmp and sbb cli andl xchg (bad) mov inc sbb mov jle xchg push jg ret daa loope add pop xchg daa dec in insl jl add sbb push jb mov mov inc jno mov pushf pop (bad) lock inc push ret fdiv outsb xchg mov xor popa sti frstor push jg es cmpb fsubs movsb dec jbe xor movsl pop or stc mov arpl sbb mov int3 pop dec popf loop ret lret pop pop sarb mov mov cli push sub xchg popa mov push lods sub mov mov push mov xchg repnz pop ljmp xor (bad) mov sbb inc idivl mov xor call fstpt xor push aam scas cltd ljmp sti test push sbb and sbb ds cltd hlt iret int3 xchg icebp ret loopne inc dec mov jae or scas inc jmp dec and and addr16 cs push mov add cltd fwait push aas mov test popa stos inc add addr16 cmpsb jo push dec or sahf out push sbb sbb mov add lods jle jne out cmp and enter psraw sbb or aas push lret dec jg xor jne xor stc adc jns and cmp push xchg mov push sbb dec js adc sahf fwait add rolb cltd push lods int seto hlt pop incb (bad) out jmp dec dec push pause mov or sti jnp mov xchg sbb cmpb and mov add stos addl dec xor sbb mov push loopne arpl fildl or mov sahf or dec adc into sbb cwtl sarb insb test add fsubrl adc jecxz mov jo test out orb jbe jp dec xlat pop add cmp jmp xlat fdivr fcom sbb stos push mov mov inc cmp push mov outsl push adc (bad) leave test iret sbb insl insb xor sbb int3 adc add jbe outsl ret mov test push or stos add iret sar mull lret in push cli lahf fist jb fisttp lods sbb add and sbb loopne xor xchg and jbe fsubrl pushf add sub sbb int fwait out pusha mov push xchg jns mov or nop inc xor scas and add cli faddl shll scas xchg mov inc add jl jo lods (bad) shll and imul push jecxz jle pop xlat (bad) dec adc mov xchg push cmp inc push insl jb (bad) jge add and xchg clc or (bad) lcall pop dec xor into cmpsb loopne or outsb lret xchg adc lret adc hlt lds xchg fisttp mov dec je mov push mov roll test shll cmpsb dec lret or or lock imul lret loop pop lods cmp jle jbe dec fisubl add inc jle xchg xlat dec mov jge xchg inc aam ljmp push inc aad cltd xchg andl push mov sub data16 (bad) das sbb das in fldenv dec insl stos mov es dec es or and pop stos lock lcall notb fildl (bad) lea mov cmp xchg je push adc mov scas fwait ret shlb jle dec cld jg fmull cmp add stos lret sbb lret insb xchg add inc jno xchg cld sbb push cmp push insl add dec loopne clc sbb popa fstpt inc mov push or out adc mov mov arpl popa insb in cmp sub mov add push outsb (bad) iret outsb lahf bound pop sbb call aam popl test jp mov addr16 arpl nop or xor or test xchg stc or test in mov pusha push mov std jbe mull (bad) pop call pusha add mov push sbb sbb or add dec xor mov cmp jne push push fxch add add inc dec sbb insb cld or add adc out adc inc add push test les sub leave dec or push movsb mov inc xchg mov xor push je lea jg hlt mov mov cmpxchg clc rorl (bad) fistp xor mov push dec add sbb ror push add je cld push mov inc pminsw incl bound mov iret ss pop ret repz sbb out leave cmp stos test enter pusha pop rcrb lcallw push add stos inc or (bad) movsl in jle cmp mov adc imul sub pop in sub and xchg or mov scas mov ret xor mov lds js idivb jo or or sbb les testb cmp sbb das sbbb mov dec (bad) lock outsb xchg push cmp cmpsl jl aas jnp imul dec lret pop ljmp mov gs into addr16 jmp mov mov das cltd mov les inc (bad) ss (bad) inc cmp lahf push std or xlat push ljmp fsubrl movsl aaa ret cmp test std inc jno push dec cmp push mov push jl sbb ret (bad) in outsl ret sbb xor and fs mov cmp pop fild mov neg mov dec and jmp mov cli dec fadds orl push fmull sub jp dec jnp int3 (bad) imull fxam pushf jae mov add out xchg sbb adc es jle sahf fildl pop ret xchg mov or roll lock add sti imul push pushf mov (bad) fwait and add outsl jle je imul mov shll jmp mov nop add (bad) mov add das ret (bad) cmc jnp orb xchg pop arpl jle add das dec addl xor pushf inc jmp ret pop popf and inc jl mov pop aam xchg jnp fwait push sahf jnp sbb outsb jl cli mov inc out das or or push add (bad) ss push xor or cmp scas pusha mov test add imul or fstpl bound mov flds xor roll jg cld nop xorb or test in push aaa mov adc pop stos push mov ficompl add jl pop test push adc shll movsl roll mov lds outsb pop cmpl or xor ret lock rcr cld sbb jg xchg or pop dec mov lret inc lods sbb push jnp or in sarb jecxz (bad) fsub out add mov pop or adc movsl or mov shlb jg je cmp adc pop inc mov cmp jl cmp or or sbb (bad) fnop nop testb repz mov bound xor mov sub inc pushf (bad) mov lahf dec sub dec pop push hlt repnz mov loop wbinvd repz movb and arpl jns jl mov and jg cli jl sub add pop popl jl bound stc or lahf repz mov fnop xlat lret xchg jo insb jle xor aas dec dec xor mov ljmp xchg dec jl sbb sbbb negb jle mov sbb (bad) sahf dec add andb or or fstps cld fmuls or sbb clc jnp cmp adc fsub fisttpll push ss iret xchg push fsubl or sub mov fucom xor pushf dec rclb jo aas loopne popa jmp push aas cmp jle arpl sbb pushf gs mov outsl paddusw dec sti ds mov jne inc aaa sbb mov push sbb popf test xor jnp add pop repz add xor mov aas into or sbb xchg xchg loopne clc leave and in cmp push fwait pop add jbe pop mov stos jne sbb mov neg xchg sub leave inc and mov xchg imul mov fwait mov (bad) mov xchg pop sub (bad) push adc adc pop add pop mov lret sbb idivb jno cmc adc cwtl pop psubusw jno push inc ror imul push popw push fs mov jnp jnp push arpl rcr mov push bts adc xchg fisttpll dec mov aas cmpsl xchg xor xchg xchg (bad) out ret xlat push daa sbb stos (bad) xor decl dec xchg enter sbb fs mov rcll leave nop inc (bad) jge loopne cld sbb aam adc mov test movsb add lret orb movzwl and mov (bad) fdivr xor ret insl fcomip je adc or aaa pop mov sub or sbb fdivrl (bad) iret (bad) dec adc (bad) xor and insb les and cmpl lods push bound jl cld in add inc add fmul inc pop pushf (bad) push sbb push mov mov sbb or movsb outsb andl mov xchg decb push imul loopne sahf add adc xor js adc incb fadds or push jb pushf cmp jp sti insb rcrb dec dec shlb das (bad) fiaddl mov add leave and test cltd xchg mov mov add stos fsubrs push aad sub inc cmc or xorb sbb stos out lock cmp sbb sarb sahf stos xor inc xchg jg push (bad) push and push rcr ret incl sub push lods mov xor xor sti jg pop inc in lret adc sbb sti inc or insl cltd out fwait dec jae or or and push jmp ljmp sbb pop (bad) and adc ljmp ja loope or sbb pop test mov dec test test leave or sub xchg dec jb sbb mov test or jg mulb xchg shlb test push or pop cmp adc mov mov in in sahf mov mov mov jne sbb inc push std and ljmp push daa add xor test repnz sahf int lahf out xchg or in fxch (bad) test in das xlat lea xchg es adc pusha inc adc mov mov add pushf fstps xor jns subb ja cmc sbbl es sbb scas mov jno jmp and js or into dec adc fmull or pop adc push mov imul test mov cld adc test shrb and adcl out dec mov pop clc lret mov xchg cmp and mov jmp in repz add stos dec es mov or add test int jne js adc mov xchg test cwtl cmp lods repnz push stc lret cmp lret jo std lods sarb loopne pop rorb push or cmp add aas pop das add push imul mov insl cli sbb jmp push int3 (bad) cmp fisttp mov js repz mov dec add jne sbb fcoml adc fdivr sbb ret pop sub test call xor jmp jg and aas jmp addl sbb and mov mov mov (bad) add aam pop or test decl int add or in lret lret rol and jae data16 dec push or add ror mov xchg imul jge push xchg mov inc pop pusha mov sub or lcall jmp bound cltd mov mov sti into es add adc mov lahf mov out vmaxpd pop fmulp sub popa mov push lods cs mov jnp popf sbb push fwait outsl push das negl fs jmp imul fistp popf ds sarb add mov stos sbb (bad) xchg aam mov pop fstpl sub sbb enter add add out jb data16 (bad) cld sub mov test es pushf aad sub pop jp adc addb in dec fwait xchg cmpsl adc gs js clc jge xchg scas pop stos adc mov cltd xor sarl pop sub sbb inc and add lods pop in inc inc mov dec data16 mov pop cli jo pop push outsl cmp int orl pop xor mov sbb pop add cmp mov (bad) push sti das fbstp mov fwait jge push popf (bad) xor sub int pop rclb daa (bad) loope mov or adc scas aad mov cmp outsw mov int sbb and adc into cmp push dec mov loop jg mov jns shrb add lcall outsl sarb test icebp add inc sub cmp ret lret ja mov pop jle sbb ljmp movsb mov dec jmp xorl mov subb aad test sub mov enter icebp mov dec movsb mov cmp mov push mov out movsl jns iret movsb sbb jne outsb jge movsl sbb lock cli sbb xchg mov pop push ud2 fildll mov or xchg mov mov ret push pop sbb jo and cltd addr16 inc sbb sbb add xor ss mov bound mov out mov outsl lods std jbe and dec mov xlat jle or pusha xor sbb iret sbb (bad) push insl add cmpsb das cli test lods mov xor xor ds movsl xchg pop lea xchg mov cmc add out cltd pop hlt jmp or xlat outsb repnz mov add jo out mov (bad) movzwl xor inc les rolb jbe add push mov mov (bad) fsubs imul push and or test aas mov jae aam or adc jl inc or lahf sub or sbb mov into add mov dec add sahf push ss xchg (bad) insl mov sbb dec cld out cmp xlat rolb xchg jnp add dec push xor stos dec imul stos repnz mov imul xor mov data16 xchg paddsb mov pop sti push push incb mov in loopne sub or mov jge daa pop mov sbbl add lret pop jns inc mov arpl cvtpi2ps mov into imul mov xor sub inc xchg arpl iret (bad) daa pop mov mov push fimul push pop mov (bad) fwait stc mov dec loopne pushf or ss sbb out lea xor push cmp and ret dec mov mov loop adc add das push test xchg or and leave rcl jg mov mov pop aad cmp outsl cmp xchg inc fidivrl adc jle nop cld inc lds or test mov sub xor hlt or cld mov cmpsb push std pop cmpsl incb jbe es inc in clc inc mov movsl add decl lea sub (bad) cmp push mov lods test sub sub daa enter nop (bad) mov int (bad) loopne popa cmp repnz cmp mov cwtl push pop mov add icebp sbb ja fwait shlb sub adc mov sub (bad) lock pop mov or push xor mov pop je in cmp push imul lret ss ljmp mov or mov movsl jnp jns test test rcrl jg jl je pop push xor jae popf cwtl ret pop lcall or adc mov jmp mov dec push sbb cs add jmp and xor mov dec push sub and lret add xor jle mov pusha or mov repnz shrl xorb cmp scas bound (bad) mov push hlt mov mov adc inc out jp mov stos mov addr16 push and and test mov pop sbb mov sbb js (bad) movsl in add imul push or cmpl adc jno and stos aad or add sbb and hlt mov and push cld cwtl in or rorb jne fisub inc mov dec lods jle gs or or push sbb jnp ss cld lcall cmc mov add sarb addl mov mov and mov or leave push adc xor inc or (bad) sahf lods aaa push in or (bad) pop and (bad) sub movsb bndldx push (bad) es push clc pop adc pop (bad) repnz dec and and lahf mov repz call adc dec mov xchg push fidivrl hlt repz push hlt adc inc push add pop in xor cmp gs adcl das fnstsw test jns out fwait add push daa mov aas je jl jae addr16 sahf enter pop sbb xor out aad andb inc add test sahf sub addl fs loope and cmp in fcomps test dec add dec (bad) cmp (bad) psubd cltd inc cli icebp adc pop dec enter sbb sbb add call push scas mov jns sub rcll rol or mov jnp xor xor or ljmp add and int inc (bad) xor sub repnz dec rorl movsb or lock push or repz icebp add cmc in into std daa lcall (bad) and scas inc inc aaa add adc xor pop jle and add clc adc lret mov das lret ficomp jnp or cmp (bad) test mov loope pop and fildll lcall inc sbb sahf jge inc push push push adc (bad) cmp xchg clc mov dec mov lods mov test xchg jg sar or iret jo sbb test out inc adc aad adc xchg jle cmp xor adc xor add fucomip test jle mov cmpsl xchg shlb or xchg loop push inc xor cmp ds (bad) mov sbb and adc ss (bad) fdiv popa xchg cmp jg sahf fs sbb mov leave mov sub xchg int orl jg in arpl sti test dec xchg adc jg loop add or jae rclb mov push adc je and mov popf insl (bad) shrb cmpsb (bad) xor cli lret xor pop test mov imul push movsb call xchg movsb ficomp or nop hlt mov or rclb (bad) js test cmp std nop stos push mov mov mov mov cltd sbb xor das ds lret jle (bad) jg pop lods in fcompl jbe mov inc (bad) pusha mov aas mov hlt in jge push je je sub xchg sub popf push mov push inc sub pop cld rorb mov push adc cld or and add push out pop lahf je mov add das push xchg jno dec mov xchg mov lret sbb pop bound inc add cli sub out add in pop pushf sbb adc pushl jl pop mov push (bad) pop lret inc pusha cmp push fstpl sbb aaa ret and (bad) fmuls push adc xor mov push push repz mov xor fsts xlat neg (bad) sbb or adcl pop fldl movsl pusha bound fmull gs hlt push lods push or mov inc out jp std pop sub pop or (bad) lods mov cmp mov scas mov es lods je iret lahf data16 mov out add call mov cmp outsb dec fild sarl arpl js and rclb jle fucomp mov xchg sub or std mov inc dec fs popf mov test pop lods mov push test adc push adc add (bad) repz add and dec jbe addb jecxz push int xorb bound pop es movsl xor jg shr jbe sbb in ror jae les xchg loop xchg xchg (bad) mov push into pusha push aas cltd jl cmp sbb xchg imul add inc hlt jnp sbb mov adc mov cltd push add adcb push cmc mov mov cmp push push stc dec sar jno jp jnp mov add lahf scas and cld mov xchg test repz adc faddl and push push lds outsb cmp xor imul pop pop faddl jecxz lds lock iret or cld jne xor jno,pt dec pop xor and jbe fnstsw and ja bound sbb mov push mov or ret rorb cmp cmp (bad) popa std or jle fs call xor out mov sti add mov test flds push fnsave pop dec lea add fiadd lods jg scas and imul xchg or push popw xchg or xchg xor adc inc push xchg fs sbb push or sbb (bad) sbb mov xchg jbe stos (bad) lret add jg scas fs jo fistpll push insb imul xlat pop xchg aas incl add icebp xchg add mov sub add in jnp sbb cmp loop leave int add cs mov mov jne,pt cltd sbbb outsl push or (bad) fistpll and ret fbld cli sub hlt in mov jge data16 pop dec cmp enter rcrb pop mul test sbb movsb xchg cmpsl dec jnp aas push repz inc pop mov fwait (bad) sbb adc or jecxz aad jp scas sub stc pop push mov outsl pop sbb cld mov into adc jg movsb rcl aas jmp jno adc sub mov pop call pushf adc pop stos jmp lahf and xor out xor cmc adc scas mov add sub pop sub pop fmul sbb into lcall cmp lods (bad) imul xor dec cmp aas and (bad) sub loopne push insl sti pop sub jnp in mov mov mov sti cld dec lret add push icebp negb lret dec cmc adc push hlt pop fxch fsubrl gs loopne aaa not (bad) mov lahf inc ror mov mov insb push aad add mov cltd cmp leave xor add mov adc cwtl add test loopne lock xlat cltd rolb adc movsb movl ljmp jge xor out hlt (bad) lock dec add sub or sarl sbb test je pop sbb xor sub mov aas sbb ret mov sti ret xor clc lea inc mov cli out fdivs jge dec xchg movsl or pushf insl ja movsl xor aas xchg xchg lods pop notb inc jb ficomp add jbe mov or adc jb in (bad) xor cmp or imul int movsl (bad) pushf xor lods rcrl loope in mov lods andb int fs sbb add icebp mov and push cld and aad pop stos out pop add xchg push sbb rorl sub aaa dec jae ds cs xchg mov push mov sbb and dec xchg pushf orb out mov das icebp lods or outsl mov dec mov push fcmovnb int3 fbld out mov add mov or movd xor mov mov cmp sub sbb adc mov pop pusha call movsl outsl pop cli adc into (bad) jne icebp pop shrl and mov xor stos xor dec int loopne adc adc nop xchg or xor shll jbe popa mov (bad) push clc movsl dec add xlat pop ljmp insl movb mov popa xchg cmp xor ret or push jg cmp in inc cmp dec or cmp (bad) jno mov dec and jl push es or dec movsl pop nop inc test fstpl adc loop sub mov mov cmpsl or repnz (bad) cli mov push inc push hlt inc mov mov in je inc jecxz xchg and add hlt inc imul dec and lods dec lcall ja ja sahf enter clc add ret jo xlat mov adc daa (bad) mov hlt xchg xchg movl (bad) in jo cmp push mov in add pushf sti jl (bad) jbe lea jge push adc inc mov pushf pmullw mov sbb push pop jno dec test pop inc xor mov mov adc sub rorl mov add and bound loop xor pop cs lods add repnz aas icebp sub mov mov stos mov sbb std sbb xchg imul faddp xchg aad push mov sbb movsl enter inc sbb (bad) cmp cwtl push xlat outsl lret sub push lahf cmp dec test subl test outsb and cmpsl mov jae inc sarb add push movl int3 (bad) int mov sbb sbb rcl add in xchg test dec arpl rcrl addr16 in out push inc aas imul push cmp ss popf test arpl je adc cmp sub lods hlt movsl addr16 data16 subl jb push push xor test fs in mov mov rcrl cmpsb jmp or jge out rorb jbe xor push jno mov jnp push pop pop jne xor jne lea sbb pushf loop movsl (bad) xor sub lock cwtl pop es fimull ret jl push das nop cli cmp fistpll cmpsl aad xor aaa sub mov fistpl test mov nop or xchg push mov push push or mov push ret (bad) aad pop jp and sbb or je xchg dec (bad) inc jnp in push std mov and xchg iret xor (bad) mov mov mov jg cmp sub cmp jno,pn aam insb pop das into gs inc and mov sbb rcll ret mov inc aaa pusha out jle jge jo push and call xchg lahf (bad) (bad) jmp int loope jle ss add arpl fisubr dec gs les add cmc cmp shrl aas fcomps pop dec aas jnp inc add lods ljmp enter scas mov in jl loop,pn popa pop cmp cli fs jne insl imul xchg cmc mov or cs sbbb cmp and rorl mov lret sbb xchg jp out dec (bad) scas dec jbe mov int stc (bad) jbe mov cmp repz sbb push test jno insl loopne test subb push dec je sbb inc enter jae daa xor mov in in mov jae imul pusha dec stos jg (bad) xor out test push stos adc jp mov cmp aad sub xlat and ljmp dec movsb xchg out sarb or mov or dec fstpt dec aas (bad) sbb ljmp or jb mov in or incl (bad) out mov or pop jb mov call popf xchg mov xchg inc sahf ja dec pop jmp push mov pop (bad) add leave idivb push cs xor dec lahf pop adcb andb scas rcll (bad) or add lods jp loopne pop dec sub xchg push pop call cmpsl adc mov lret sub fs loopne das lret pusha lods ret sti jp jle das inc cwtl and fstpt and or aas and jecxz cld cmp popa inc mov pop scas mov inc and nop cld lret add add fcomp push mov mov or test or push push xchg push push mov lahf out xor or jecxz mov aas adc mov std lret add sbb push xchg xchg dec ret adc inc adc xchg and pop xchg and pop xor aam jle and in xchg jp test mov ret fidivr mov push pusha jne cmpsb jb jnp addr16 out roll dec mov sub pushf aas xlat push push imul flds (bad) cmp mov fcompl mov fisubrl fwait or out or xor fstl or mov aam test mov test iret lods data16 dec add adc jns push je push inc cmp or (bad) popf push lock jo hlt mov or or enter sub mov mov sub push pop sahf sub xchg lahf jge cmp sbb xchg add stos je jecxz mov mov dec sub xchg cmp mov ljmp inc jne mov or (bad) sti and mov jns mov sub xor int cmpsb jnp pusha add jmp cmpsl and jb insb and mov test adc xor jo mov (bad) adc ljmp lds mov add mov hlt jge mov xchg mov dec xor into (bad) sub lret xchg fisttp in ja inc mov jno ret dec hlt imul out mov out pop int3 cmpsb cmp sub adc or loopne (bad) mov jg sbb out cmpsb rcrb pop movsb cwtl cmpb movsl repz dec in push movsb aam out daa in cmp arpl outsl jge xor out cltd cmp test or lods xchg mov sbb xchg xor pop xchg sbb in fdivrl lods or in iret push mov lret sub and dec ret adc cmp pusha mov mov mov push dec into xchg sbb std out pop push mov aad fist shlb lea sbb sbb mov insl dec adc xor mov sbb pop push xor scas sub dec add ljmp adc and pop sahf inc jnp out outsl ficom cmp cwtl es pop call clc or sbb aam adc ja mov and ss loopne lock fcompl add repz cmpsb sub jbe sbb mov jge inc (bad) jmp mov imul (bad) jo xor (bad) xor fmul cmp xor aaa xlat xor dec aaa lods xchg sbb adc fldl ret lock cmc decb sbb and sti sbb popf mov or dec pop ljmp push sbb adc jp inc mov test popa mov add mov call popf lock in sub leave stos mov push or (bad) and pop outsl mov fcomp outsl mov in or and xor shrb insl push lret adcl pop subl test mov jnp sub pop (bad) orl cwtl pop lret inc rcll mov call xor arpl adc push pop lds movsl push cmpsl mov fistpll (bad) adc fwait or mov mov pop add sub pop mov xchg jbe (bad) sbb test pop in xchg dec (bad) ss jmp std push adc (bad) inc clc mov das stos add mov jge (bad) push out cld outsl and mov cltd or lahf pop out fstp adc cmp adc pop add dec insl jmp sub pop and fimul pushf mov fwait jno add test (bad) cmp push andl vmovsldup xor push es ss or mov dec adc or test inc jno lcall push pusha ljmp sbb inc mov fistpll jbe jo int (bad) inc loopne mov test adc hlt sub pop mov mov add push pop leave fucomp jg push jle xchg xor xlat notl in lcall jo or ljmp lods pop mov xor pop aaa cmp mov rcr fisubl mov scas js sbb push inc push je test test xlat pop or popf inc push daa sbb stos or jmp je cwtl fs popa mov scas xchg sbb adc fmuls mov sub ss bound hlt sub cwtl mov fwait ret sbb sbb rcrl pop lahf movsb fwait and test imul addl imul popf out mov je mov add sbb pusha mov fisttpl mov dec xchg faddl pop loope fsubrl notb sbbl nop inc cld inc icebp sub out xor sbb xlat cli out and sbb int call adc sub das bnd (bad) lods aaa jne imul or hlt push jle inc xor mov lahf fcompl mov mov xchg xchg mov dec and jb dec cwtl (bad) xor cmpsl lcall dec dec cwtl pop out sbb sub push mov add lods pushf test mov mov mov mov sub sub or fwait xchg inc mov lcall (bad) jo in popa adc sbb mov push xchg pop cmp sarb shrb cmc sahf (bad) fcmovnbe adc mov adc imulb flds xorl out mov push rorl xor leave fnstcw mov push lods mov sub orl add jnp out hlt pop sbbb xchg loop aad aaa aas std cmpsl add dec cmpsb imull inc (bad) and and (bad) fbld mov xchg test adc fcompl mov sub stc mov or gs jne cmp in push (bad) pop mov jl sbb idiv jl push cmp (bad) popa mov mov or cmp leave subl sub lods sbb sbbl push cmp xchg incb push jecxz pushf pop inc pushf das int3 cmpsl lret dec xchg (bad) les or rol sbb lret ss (bad) test outsb mov mov jmp push jge (bad) push lods std or sbb (bad) and lret (bad) out cmp outsl mov pop push mov repnz popf push pop xor loopne or out idivb enter jo xor imul sbb jmp (bad) mov or out dec pop mov jb,pt pop mov pusha adc je sbb rcll loope ds dec popa dec das mov lods fild (bad) cld test std mov mov xor lock mov mov dec in fild ja outsb add push repnz popf or push sbb punpckhdq add jo setp mov pushf add sahf mov call lahf ljmp jbe xchg pop je jne cmp push push inc inc lods hlt cmp add cmp xchg sub sbb pop stos mov lahf loope lea or mov push adc leave mov movsb adc cli out mov xchg dec or add cmp popa mov ror mov push int3 out rcrb dec in jle fdivl sub (bad) fsubrs insb sbb push inc xchg lcall daa adc jl adc push shlb es clc inc mov rcll dec shrb pushf sbb ror std mov in sahf jle add adcb loop push rcrl sbb add add (bad) jne fcoml je test add sbb sub cmp cwtl es adc shrl mov hlt (bad) cwtl nop or inc pop in (bad) repz pop sub insl mov mov pusha cld inc xorl jno pop adc fsubr cld sub sbb aad or xchg add adc add cmp test mov leave jle int test lcall inc xor cld in int adc sub xlat fwait mov adc (bad) and inc dec insl cmp xchg test xorb fistpll push jle (bad) cmp iret push mov jge pop jae fstpl pushf addl xor out dec js js jo or add or cmp jl mov fmuls pushf pop jecxz data16 xchg out sub mov xor push stos ss cmpsb push pop mov aas cmp sub pusha out adc xor xchg in dec stos jl aas add lods addr16 mov jbe aaa fist jle mov mov or lods ret in mov push or cld adcb inc push or add cmc loope adc rolb movsb xchg popl out mov fwait sub insb lods cmp or add add (bad) sarb outsl outsb push daa and dec mov outsb shlb mov fildll in addl xchg daa sbb fidivl or xchg add enter mov jnp xchg aas enter jl adc pop lea mov (bad) mov ljmp sbb or (bad) je inc pop btc mov (bad) in loope faddl packsswb fstpt push push or cmp sbb mov push les sarl cwtl sub mov decl xchg jae je insl frstor aam or add jo dec jae (bad) push jl jne popf das rolb or pushf sbb fisttp mov add int3 nop cmp dec stos aas popf xchg mov lret fimull adc ljmp imul (bad) mov pop pop cwtl test or leave fdivrs jno pop jecxz sarb add push lock cmpsb jne lock jg sbb lods xor pushf ret inc cmp dec fsub xor add sbb cld lods mov out push sbb mov push hlt jg data16 mov or lds je incb inc sbb push xchg lea stos loope sub aad or inc add int xor mov aam arpl push (bad) in mov rclb ficompl (bad) out push dec pushf cmp stos je add jge mov cmp jp in push inc mov inc (bad) fnstenv in add (bad) inc imul dec lret popa lret sbb inc loopne push mov orl cmp fstl repz sub adc push div jo cmpsb jmp mov cmp xor stos loopne imul jge adc pop xchg mov sbb jno jb (bad) lods and js stos pop mov and test inc addr16 test jnp lock push ss sbb mov ds inc jbe fs mov jl mov insl mov sbb cmp inc std xchg lods sets lds adc sti push adc pop addl cmpl add xchg fwait test adcb mov push sub pop bndldx push daa add les cmp lcall sarb mov sbb lcall adc and mov movsb pusha adc adc add push mov out mov and cmpsb pusha cmp call imul pop repz call cmp jle rolb clc call xor pushl popa mov add mov aaa lret sti sbb jecxz int stos and mov jbe enter fwait mov es mov sbb aad fidivrl mov add or push popf cmp dec mov hlt sbb or sbb fsubrs or dec btr rcrb dec xor mull not rorb adc mov aam mov fwait dec push cmc daa movsb clc gs jle cwtl push jno jle or mov push fbstp out ret push shrb and loope dec and sarl mov in pop sbb push in and test aad jno dec fsubrl fwait mov mov leave push dec out xlat je iret fwait or xor clc adc cmp aaa xchg sbb add adc faddp sbb cmpsl cmpsb push aas mov daa js in insb movsb clc stos pop mov fdivrp jno sub push movsb out mov in inc test mov xor fucom and test push addb loop xchg imul outsb or scas addr16 add xchg sahf ljmp adc or mov loopne xor cmp enter icebp xor push out xlat andb iret xor add outsl jecxz popa mov xor or mov repz or cmp cld adc in repnz ljmp jle jo out mov push or in xchg pop mov add and mov hlt int or add or stc aas cmovne push pop jecxz xchg test out cmp std test or mov jge add sarl dec mov stos std int mov cmp xchg in ret aaa adc ret mov pop mov dec ret out xor (bad) pop insb mov fstps loop test fwait jo pop sub push test std cmp or insb data16 cmp lahf cmp jb fwait stc or lret shlb lahf xor jecxz aad (bad) (bad) xor or add sbb negb bound imul cmpb jp and test add mov bound cmp xchg in cmpsl enter and and outsb daa ret (bad) xor sub xor mov test dec addr16 dec push outsb push xchg daa add or jns sahf lods dec xchg (bad) xchg out and pusha test sub decl aaa in lea adc pop jg inc jbe fs lods adcb adc gs jne jnp inc pop mov mov arpl adcl jmp xchg lock movsb mov cld sbb pop rcl lahf xchg pop sahf loopne vpcmpeqd and mov jmp popl xor stos push cmpb sarl sub pop mov mov xor fist inc scas lret rcl test cs mov add in aad iret mov loop jecxz nop push nop dec fcompl dec jp daa jae lock xor in cmp push mov add or sub add repnz inc sti mov call in (bad) pop adc sub out in pushf jle add mov sub lods arpl movsl jbe pop fimull xchg loopne pop stos jb outsb mov add mov mov sbb cmp mov mov insl arpl cmp inc pop mov out es mov lcall rcl adc adc dec fnstenv sbb inc (bad) mov mov push inc xchg imul mov inc xor or and (bad) cli push and fisttp mov fstpt dec enter jno push es xor hlt daa nop (bad) stos cli mov or cmp aam (bad) fwait xor stos sub jnp mov outsl lret sub rcrl pop das adc ret sbb jb push js push andl cld pop (bad) data16 jl mov (bad) (bad) int3 mov arpl xchg and (bad) cmp out add std cmpsl clc movsl xor jbe dec (bad) je sub sahf stos fs fcomi jmp or pop pop sbb addr16 jne movsb or sbb pop inc imul pop fdivr add or sbb push mov inc pop fdivl xchg lea pop popa cld sbb adc dec jns shlb scas or pop scas mov call out aaa jge data16 notb or data16 mov pushf push or sbb mov pop or push and call cmp dec xchg inc cmc or dec push sahf cld pop push sub arpl xchg loopne push dec sub sbb add mov in xor jle jle or cmp fstps jne push bound push nop scas fwait es add and gs sti xchg test jl cmp rcl add mov or cli dec lods mov mov mov test mov or pop cwtl sub fwait mov insb rcrl lcall jnp rclb lock aam fs cmpsl sub dec mov sbb push outsl sub jle fwait mov sahf sbb rep popa cwtl arpl hlt or adc lcall pusha (bad) leave mov jae sbbb jge add or pop push and lahf scas repz fimul ret aas movsl push adc repnz fdiv (bad) fs cmp sub fwait lods mov andl or pushf or outsb stos xor sub jns jl rcl pop add xor ljmp dec pop inc sbb adc movsl push sbb call jl aam movsl inc and xor cmpsl or (bad) cmp xchg mov repnz call xor xchg bound jp or (bad) lods inc and xchg jne fnstcw cmpsb xorl or adc add fninit pushf sub jl sbbb int fwait leave aas pop jge lea addb loopne dec adc xchg inc and nop jg push cmp mulb ret aam loopne xor cmp repnz cld jo jnp test add std sub sub xor inc repnz rol cwtl andl dec adc (bad) movl cmpsb cmpsb cmp ljmp inc out daa add fisubl xchg or sub adc mov les xor imulb test xchg test mov das decb aad jnp incb pop insl xor xchg lcall adc xlat add push mov add mov dec testl movsb inc ret test pop movsb xchg lock ja sbb lds xor jle or push (bad) sub dec addr16 (bad) sarl push ret shrl lds mov jecxz test cmp xchg sbb inc fs clc insl sbb andl push aad xor imul sbb les sbbl shll jbe xchg add pushf mov mov inc xor cwtl outsl or into pop sub insl sbb popl stos pop mov xchg mov mov xor sbb ret mov loop xor ss popf (bad) rolb xorl out fcompl lea or sub push pop (bad) enter sbbl movsl mov jbe cmpsl sub popf mov ret xchg outsb mov xor enter lret call jl push mov fdivp jg rcll jl sbb in pusha adc push pop pushf adc bound sub (bad) jl mov and imul and xor push cld lods ret mov sbb lea cltd xchg movsl nop nop jae push mov enter adcb in cmc das lret xchg push je xor stos mov leave ljmp xlat jle push in sub inc mov aam push aam mov or data16 (bad) imul dec (bad) sbb add es cli rcr jecxz daa popa rol (bad) adc dec jg popf push lock cli inc jg cmp out xor aad xor sbbl int3 flds sbb fwait sub push dec movsb out fidivrl pushf xor shrl js loopne lahf fs data16 adc add mov xor sub add popf and sti xchg cmpsl bound xchg or fdivrl jno ljmp mov rcr into push xor mov mov out xor pop push jmp jnp mov movsb fwait out pop test fcmovb inc cmpsb (bad) push mov add sub (bad) mov dec subb jmp cmpsl adc or inc jmp mov cmpsb sub test loopne and imul pop cmp lds xchg mov pop in loope sbbl loope push adc mov das sub jecxz adc mov jmp xchg lret xor scas cmpsb leave repz ja xor mov insl sub adc mov movsl lock push lds xor ret dec sbb push sub (bad) adc and dec inc mov (bad) fdivrs or cwtl sub fwait call add (bad) (bad) xchg lds jl xchg or cmc pop dec bound cmp sub jle mov push into pop pop clc cmpb xchg mov mov lea cmc ds aad adc dec addb inc knotw and mov jbe or push push and mov cmp outsb fwait hlt aad ret jnp mov mull lods mov jmp mov push sbb sbb and jmp mov les test add aaa mov or jg les mov sbb shlb out pop cmpsb xchg test mov push lret mov jne sbb dec push cmp cmc int mov ret imul bound hlt fucomip in inc sbb and pop inc lods jbe (bad) fwait into std mov xchg out test xchg lods pop iret lret xor jns pop mov shrb loop add add and les lahf (bad) adcl das popa xchg cld imul mov sbb mov sbb fcmovnb sbb add sbb sbb add lds adc dec clc test inc dec cmp iret mov mov andl and or (bad) sub inc js fs pop das fisttp (bad) ja sbb or inc pop unpckhps subb add bound int3 stos hlt push mov lcall or jb fwait jns add mov or loope sbb shl xor jg in jo daa cmp das mov inc andl xchg dec push negb pop cmc sub rolb das adc daa xor mov das jl add insl out mov mov xchg xchg orl pusha ret inc in or shrl test test jo or mov fwait jle inc cmp (bad) push icebp cli leave (bad) jo dec fcoms mov sub fwait inc xor test test leave loop shll outsl mov add data16 add hlt pop add (bad) fstl cld es push adc inc jo stos loope sub pop das push imul jge cmp pop sub xchg mov sub and adc or imul fistpl dec (bad) cld dec push addr16 popf dec sahf xor in pop aas push add (bad) xor jno add ficomp dec les sti mov (bad) xlat sub mov add in or sbb cmp ret jg xor dec cmp mov dec fs push and jge add jb out aad cli or cmpsb mov ret dec inc inc adc pop arpl push (bad) adc (bad) hlt iret aaa ret cmp sbb pop mov in rclb (bad) xor dec (bad) dec enter add mov and mov daa in pushl push sub cmp dec xor pushf dec fisttpll jge or rorl mov fdecstp (bad) mov leave cmp je das and dec mov add mov (bad) push jmp dec xchg movsb (bad) mov rorb arpl jmp and or add or and addl mov push xchg and les pusha decb sahf lret mov jb jb sbb lret add out mov std bound push aas cli movsb mov addr16 sub es xlat mov subl jnp arpl cmpsl mov lock mov std push cmp jnp cltd jge or mov insl fisttp xchg add jle pusha xchg add add mov cmp sbb ret add adcl mov (bad) jnp pop sarb jp int3 loope xchg outsl andb push das iret frstor insl or enter shrl or ret lret nop aam mov popf les jmp (bad) das loope mov rorb ss or jg inc lods add add icebp nop andps ror mov mov add mov sub adc add ret dec cmp pop xchg movsb daa and and jle (bad) sti jp jnp or test fwait daa adc adc lods cltd les mov mov ss sub cwtl outsl stos outsb adc pop loope adc cmp pusha jo rorl jl mov out mov adc add mov pop xchg add push pop (bad) ss mov dec in adc push jmp add push imul movsw xor mov sub jae lcall add pushf pushf rcll mov je gs sub shrb xchg sbb lahf lret inc rep icebp addb in jle push movsl inc (bad) adc lret ffreep inc push mov jo inc inc or dec iret jl ss pop push lds (bad) insl xchg sub jle jbe cltd aam mov mov (bad) or dec jno repnz cld pusha xor sub ss movsl mov mov imul and dec (bad) sub das pop jle andl add or lret pop xlat xchg xor imull pusha xor jl mov push xor insl aas adc popf inc xlat mov lea mov mov sbb push jp dec bt adc (bad) mov xlat xchg mov mov push mov in lret (bad) push adc xchg enter xor xor pop scas dec xor mov adcl mov sub sub inc sub add and lock fwait mov fcompl lahf push sub (bad) sbbb dec xor mov clc in jno (bad) jge adc cmp icebp push ret outsb or push outsb pushf arpl and or adc shlb rorl mov dec push pop cld rcrb je sub aas sub xchg (bad) cmp jmp in cld test sbb push and cmpsb fisttpl je rolb xor dec mov comiss movsl jl sahf pop add frstor je or mov mov addr16 xor or cwtl add in xchg xchg sarl insb sarl enter mov nop sbb jnp aam and mov aad and and repz icebp dec adc fisubl cmp dec mov pop mov cmpsl dec fisttp les or mov aas jg loop jne lods sbb fcomps ret push push jo mov inc cmp std pop cld ds mov fidivl push xlat int (bad) and (bad) push xchg dec dec mov push fcompl insl mov lcall orl outsb pushf xchg addb mov fwait enter mov jg push pop imul sbb rolb push sub bound (bad) pushf xchg mov jno sahf mov out ljmp aam jbe sahf push adc nop pop push mov pop xchg stos or mov xchg cmp xchg lcall inc je movl in jnp ja pusha add pushf movsb in mov mov pop int xor xchg mov pushw and mov sahf xchg cmp sahf lret out cmp adc or push mov fsubrs negb push sbb sbb pusha mov loope adc sbb outsl fwait mov ss sub mov push sbb outsb mov xor popf push enter xor pop pusha xchg call popf scas stos std imul mov (bad) je cli xchg aam or dec or (bad) notb (bad) test movb cmpsb insb dec out imul sub popa loop sub push stos cmp insb add dec push mov inc mov xlat (bad) (bad) push (bad) int mov xchg ret mov test cmpsl push sarl push mov mov ficompl inc jb push call adc (bad) out sub stos fstps lock jle,pt push test inc inc sbbl inc add jmp xor sbb push mov mov (bad) xchg mov mov or in mov jbe repz xor jge push aam scas mov outsb push sbb adc or leave jb imul inc decb es les lock aam xchg dec jno add pusha push les dec inc xor leave sbb mov in cmpsb das xchg pop add inc out andb sbb andl and loopne xchg ret imul and mov nop push mov add negb je js,pt nop test hlt xchg int sbb pushf nop xchg test cmp dec add or fcomi dec (bad) das pusha lret adc mov and mov addl xlat cmp inc jge add subl jg ret cmp mov daa mov cli punpcklwd jl fcmovnu mov ficompl pop popf jl sbb inc leave pop inc xlat xor adc adc xor cmp push xor dec test pop and andl mov es loopne mov jo outsl int3 jne pop pushf mov sbb icebp fdivrp pop mov xor mov cli dec loopne mov add test mov inc cmpb data16 lcall adc addl arpl movsb dec sub cmovg test test cmp pop push loopne or add or rclb sub outsb stc xchg xor sbbl jl popf ficomp pusha andb test mov sbb adc scas inc bound or es dec lds inc inc xchg fisubr mov stos int3 inc mov aam btr cmp and cld loopne sbb cwtl ror ret mov cmpsb add movsb lret sbb addb dec aaa fnop pop stos je inc test adc or xchg adc xchg insb pusha insb das aaa xorl mov jecxz sbb sarb jno fwait imul fldt sahf mov xor or add cwtl (bad) sub call adc ljmp rorb sub pop pop in mov sbb (bad) jmp hlt jnp jns mov adc pop sbb lret test xchg pop int movsl lahf pusha loope adc jnp aam fwait inc outsb (bad) stos xchg xor pop mov xchg mov (bad) jl movsl sbb movsb mov mov cmp sub fnsave mov sub pop movb lods jle (bad) fisubr mov in rcll mov jle outsb les or pusha push jns mov sbb dec imul cmp add les adc pusha sbb add dec sbb sub inc mov int fisttpll rcrb dec aad nop fwait xchg add fisubl stos push pop scas xchg movsb sbbb fs mov int mov test adc jo cmp sub je mov fwait jbe (bad) cmp out mov repz leave dec xchg gs fnsave inc mov push cs mov dec sbb std daa lock es mov lods adc push repnz xor jae add stos js dec adcb jnp adc adc push addb hlt imul xchg xchg cmp fstpl stc imul cmpsb xchg lods mov dec mov call in aaa adc xchg insl cmpsl lods jp fcomps sbb repz arpl es add push int jbe jl add push or repnz or (bad) fcomps shrl sahf pop lret outsl jne lret movl mov xlat pop das mov cmp mov rolb jnp push loopne dec popa push mov lock (bad) or syscall jbe mov sarl pop or outsl sub fucomp in cmp ret mov lahf std repz sub rolb cwtl sbb sub lods gs gs mov fimull fldt sub jecxz aam jle (bad) rcrl jge add repz or addr16 pushf inc sbb aas add loope loopne inc out xchg push std sbbl and (bad) dec rcr (bad) fcmove pop inc stos jmp inc pop (bad) lods out xchg into dec data16 mov ret xchg pop jg ljmp sub or jmp xor ss sti jl cld mov inc inc es adc movsb jg add mov xchg and add mov repz dec jo mov dec and jmp insb xchg or out movsl lcall (bad) add jecxz (bad) repnz adc or mov mull mov test mov push or sbb push pusha lods inc push das faddl mov push orb hlt mov dec pop data16 sbb xchg cmpsl mov xlat mov les xor cmpb (bad) pop xor stos and testl (bad) cli jl dec push or jbe icebp xchg aam xchg pop xor cmove add cmp mov or (bad) mov (bad) cmp jle into xchg std push or call fwait test dec dec in adcb lods (bad) mov fnstcw mov or outsl xlat xor dec cmp push fistl js jno pop add lods adc or inc nop test adcl add dec ljmp imul lea fwait cltd push jmp loop js repnz pop xchg sub sub loopne lcall in cmp cmp insl sbb inc push (bad) push mov or xor pop pusha in and stos or sbb push pop adc push jbe fistpll inc int and sbb pushf pusha jg dec jnp jne pushf (bad) mov xchg insb fsts (bad) daa clc xchg add insl adc dec fcmovnbe nop or pop aad movsb shl gs add popa insl mov pop mov pop pusha gs mov fdivr xchg mov sarl inc out sub jnp sub sub incl mov mov in andl lret out xchg shlb pop gs or in pop sbb mov fsubr lret ficompl and push les push xchg rorl sub ss jecxz pop jp (bad) nop cmp fistpl in mov rorb fdivr xchg mov jl out sub or ret daa lock popf push int mov imul xchg cmp push mov push stos cmp jg pop mov mov sbb jns fcmovnb rcl inc std stos mov add fs add cmp mov sub mov mov sbb add mov cmc hlt rorl mov add add cmp cs jbe stos iret or push out leave cmpsl in push rolb or stos xchg dec mov int cs pusha or sbb add add xchg xor jge xor shrl punpcklbw mov jo (bad) fninit dec scas push push cmp enter push stos dec gs adc push add sub mov xchg pop add adc sarb rcrb les or sub outsl cmp cmp sbb push mov mov push mov pop xchg dec mov pop lock arpl sbb sbb (bad) add mov rcrb sub (bad) jmp sbb out outsb (bad) or pop push mov in test or pop test sbb and pop outsl and cmpsl fstpl jmp and addb mov mov test popf in push adc jae xchg mov mov scas xchg es dec dec push sub imul jp fwait or mov and mov into lret cmc add js cltd insl push lds sub push cld add or add push sahf enter push pop sub xchg adc or lock cmpsl pop mov sub push add add aad xlat mov fimul pop int3 sub rolb sbb (bad) out ret inc or fcompl cwtl pop scas sub xchg popa aaa int cmpsb dec cwtl sarl data16 or repz stos out cmp push test xchg xor imul hlt push add popf incb test loop lods cmp pop loop lret stos adc push inc pushf fwait pop (bad) cmp jns (bad) mov sbb lock lahf sti das mov daa jg fnstsw ljmp pop andps orb pusha push fisubl push jl add aam popa fs push ret pop gs jg sub cmp rcrl loopne iret add (bad) addr16 test sbb fstpl and and pushf jb push (bad) cmpsb xchg jmp mov mov call or cmp xchg rcrb pop enter (bad) cmc mov add or cld jo andb and ss incb addl add pushaw test cwtl or out fmull and pop fwait add sub (bad) xor sti out sti push pop lret or pop dec stc out sub addr16 and add xchg add xchg pop mov xorb dec in fsubs push fsubrl sti or mov js xlat adcl jmp pop lret cmp fstps jl dec and adc arpl pop rclb xor in jno cwtl mov repnz pusha sub aaa or mov push stos hlt cld in (bad) or rcrl add mov sub fs pop (bad) daa rorb mov push shlb fwait lods stos popa fnstsw ja cld movsl in pop daa mov pop (bad) add xchg cwtl push je cltd sub gs cld rorb inc adc xor pop pop dec xchg loope bound cltd mov adc cltd (bad) or gs pushf push out out xor mov pop insl addb movsl add fsubrl gs mov insl rcrl mov inc mov jns lcall imul test and sbb out or stos popa or inc jo dec gs in mov or fwait inc add out mov popl fwait cmpsb lds push pop movsb mov lahf inc and cmp ds xlat add dec push cmp mov or pusha cmpl ficom push mov mov push test cmp mov fistpl lcall add push jg inc inc imul movsb pop into push adcl mov inc mov dec push loopne sbb jle aaa in cmp xor mov in add or ds mov mov pusha sbb aaa push inc dec fldenv mov rcl mov gs stos outsb mov popl adc jbe popf xchg mov xor sub pop mov aam adc push dec pusha mov das mov movsb push lea cmp jmp in pop loopne mov leave data16 add inc ret jo shl xchg movsl bound add sub mov in pop movsb dec pop lds mov (bad) mov jo out and cli fadds jnp imul jle adc inc lds outsb push inc in cli mov pushf add jg jge stos in mov or pop xchg pop push inc jge mov movsb add int3 rol sbb sub fcoms lods push add pop outsl lods movsb push cmp dec aad (bad) mov push fcmovne std or add jp pop movsl adcl or sub pop sbb fwait push int mov jae add test adc mov nop adc cmp push jle mov loope fdivs test lahf repz inc sub pop (bad) shl jg cmp mov clc sti call sub inc int3 adcl lock and xchg jbe ss outsb aad inc inc ds leave jl add je ss xor mov sbb push (bad) sbb (bad) mov jne leave sahf sub push shl cld lods lds inc xchg cmp out ds mov dec (bad) cli mov mov nop add pop inc jnp pushf add es outsb mov femms inc sbb lock mov iret pop bswap lock fisubl sub dec adc add add mov xchg or push xchg adc dec cmp xchg outsl inc mov adc pop mov jmp lahf xchg sub test push mov loop adc movsb xchg jl cmpsl in xchg (bad) sbb add sbb lahf cmc or insl (bad) xchg adc movsb dec fiaddl push ret out fiadd lret fwait (bad) or (bad) iret (bad) sbb ljmp jb outsl pop sbb add rolb enter movsl and loopne inc cmp mov adc add xor sub jnp jge fstpl ss sub leave roll cmp out loop jne inc mov mov push xchg repnz pop xor addr16 adc mov xor or mov pop pop xor cmp mov or inc popf popf mov daa xchg add or add sbb add insl xor jg les jecxz ret in inc pop in push inc ret pushf or pop test jo stc and repnz xchg fstpt push js inc popa hlt lods rorl inc inc xchg jo xlat shrb in add add pusha mov jg lret aam or and pop addl adc fadd xchg inc sti mov fisttpll inc mov je fucomi mov ror sub or nop (bad) sbb jg ss push hlt inc movsl clc dec std bound push add and test jl repz lret and sbb mov test add rcll fwait xor test leave or lods in loopne add sti movb popf cmpsb clc (bad) lock jg faddl pushf inc test fdiv xor jle mov sub movsb add in pop test outsl arpl decl push into std mov inc into xchg pusha adc xor add dec and rcl mov rcrb xlat test cmp mov or ljmp test mov out pushf pandn shrl outsl mov xchg fwait sbb out inc into (bad) cmpsb add int cmp ret mov sbb into cmp push hlt sahf xor cmp mov adc (bad) adc sbb jmp das or mov sti sbbb in add sub lock inc jns stos add lret cmp fmull push and adc test hlt pop test fdivl lahf jl lret pop imul adcl mov rcr lods fwait push jge inc mov (bad) mov movsb adc popf (bad) cmp std fs sbb dec bound jge lods ljmp movsl decb cmp data16 push add bound sbb xor sti push in inc jo inc jb and nop pushf pop add (bad) jnp cltd mov sub pushf or push xor test jbe ret jb jmp xchg gs lods fwait lret or xchg lahf fdivr bound ret and (bad) push out push ljmp mov mov add mov add push sbb pop jge push sbb mov movsl rclb cli ret or das lret xchg jb (bad) in btc fstps push pushw test call mov dec pop repz dec loopne idivl xor sbb std add jnp int3 enter inc jl xchg sti inc cmp cmp data16 in iret insl stos (bad) loopne add inc fstps xchg pop jle (bad) push jmp test bound ljmp cmp sbb movsb js push (bad) fnop nop daa mov add ret cld jl sub fild rcrl icebp sbb push add out add adc cmpsb xchg add jecxz and (bad) in leave movsb jle push aam sbb insb or dec popf push mov jo pop inc mov adc xchg add mov pop dec dec mov cwtl int or jle or xchg nop pop rol imul push (bad) arpl ror sub lods cmp inc lods (bad) sub lods xchg pusha adc mov xchg cmp sub imul xchg lds inc sarb mov push int and insb es or lret sti aam lock xchg (bad) push cmp xor mov xor mov into outsl pushf ds jge and push imul push sub sbb stos mov and sbb push and dec fsubr aam fwait add pop fwait in movsl or in paddb or or push push lods addr16 out lds push repnz outsb mov cmp push pop loop dec imul inc mov lret jle add mov arpl cld popf sbb fs cmp movsb adc loopne jbe lret (bad) aam lods fistl jbe mov sbb xchg or or xor inc mov push adc add cmp lods sub xor stos iret outsb mov jb sbb mov push jo ret jns sub hlt sbb sbb inc lret cltd or push dec jae int imul sahf aaa cmpsb ds aas rclb imul (bad) xchg jecxz or push jne push mov or dec fdivs pop inc xorl test add dec sbb rcrb push push mov pop popa mov sbb in ret cmc (bad) xchg sbb clc cmp (bad) cmc add jmp pop mov push ja cmp sub ljmp mov loope sub pusha jmp cld or mov mov mov enter repz outsl adc (bad) cld loope mov in out (bad) (bad) lock xchg jmp lret lahf push cmp mov xor mov jl mov cmpsl add fild das shll dec push data16 jo mov nop push mov out jg xor xchg pushf (bad) adc add ficompl ljmp pushf sbb rcll mov pop or inc ficompl mov xor mov inc sbb sbb dec icebp (bad) (bad) cmp xor fcompl dec (bad) mulb lcall xchg mov out (bad) mov cmp mov and bound mov jno mov xchg pop out push rorl xchg jnp (bad) out pop xchg xchg cmp push jnp ret cmp fcmovu mov mov ret repz mov movsb push push mov mov clc adc lahf or mov test push xor iret out cmp xchg insl movsl push sahf std adc push mov inc imul cmp mov lods cld cmp fadds adc pop mov dec adc pop jp cltd push int in int3 cmp testb divb movsl cmpsl fwait add jp push or aaa jle enter pop icebp mov cmpsl popf inc sti (bad) call (bad) mov out outsl loopne mov loop cltd jb leave aas mov testl sub gs mov fcompl add cmc xchg test sarl cmp add jle jg push lcall out adc xlat mov adc (bad) adc cmp sbb shrb andb and arpl test jle jle add or cmp pop lcall insl insb adc loopne mov add jnp arpl sarl sub pop repnz xor jno push mov jnp push test fcomip js lds inc pop adc stos xchg and xchg jno xchg in cmp cmpsl out push cmpsb pop or and es mov stos push and mov jo scas sub add sahf test push mov es subl aaa jge jl and ret xchg lret and pop pop in punpckldq int imul pushf mov xchg clc scas jge inc das add iret push cmpsl pop adc test pop mov leave xchg das jg or stos je mov repz mov lret aas sbbb inc ret bound outsl fsub lret add fistp pop mov xchg (bad) popa ret fsts or in fidiv mov mov or pop or xchg (bad) mov or cmp sbb repz sti or rolb pop xchg popa cltd adc adc jl fstp jb call xor stos lea inc lock mov lret add out cmp xchg sti (bad) mov fnstcw out sub insb push in cmp scas ds add cmp adc push push (bad) into push test cwtl fdivl inc hlt xor (bad) (bad) mov icebp faddl sbb popf dec push sbb mov cs sub push in arpl jmp xchg xchg in jge or inc sub and lret fistpl sbb aad rclb jno or mov js mov ret jbe or xor cmc es add les inc and mov iret jnp (bad) idivb sub fidivrl enter lds dec inc out sar and add push ljmp or mov lret pop jo fnstsw mov test call popa or jmp bound out pushf fstps fs adc popf inc jecxz ficom jns test push (bad) mov std pop sbb mov stos or mov loop pushf sbb sbb sub pop cwtl jl or sbb pop xchg xor adc inc loope mov gs sub andb pop mov lret add lahf sbb add (bad) push dec iret imul push cld push mov push cmp inc xchg ret or bound fsincos jl daa (bad) fmull xor cltd outsb inc push outsl jg jg mov cmp and and pop or adc mov ret scas pop pop pop lock push sahf repz out dec or sti add xchg jno or inc jno xor jg rorb (bad) int3 and and xchg dec mov iret mov mov gs mov or fwait jmp mov pop sbb nop mov or adc stos xlat mov int adcl (bad) xor pushf sbb and mov inc sbb or pop cmpsb jmp push dec mov and inc mov iret (bad) ljmp and cmp cmp rcrl mov test idivb or insb (bad) aas jp dec repz lret ljmp inc xor cli std cmp push mov mov (bad) or cmp cli leave jle pop (bad) jmp (bad) inc add jnp mov xchg add dec mov inc add sbb or pop mov pop xchg popa mov sbb lret add ret sbb fstpt inc (bad) aad xchg or pop push push adc sub jp xor (bad) jne movsb jge cmp cmpsb pop and adc sbb cmpsb push adc inc or rcr sbb rorb shrl frstor (bad) lds out icebp or (bad) xor test lods jno and out mov mov jg xchg cmovb es dec out movsb fidiv or (bad) inc cli dec fdivrl gs push dec outsb pop aas popa push shrl imul fadd and mov nop out aad test push in unpckhps outsb out mov inc stc push andl xor and insl ljmp fisubr sub cmp shr push sbb int3 orl jl scas push jl hlt mov dec ss loope lret mov push and xor xchg mov loope movsb pushl xor jg in push mov sbb jb mov das inc push pop outsl (bad) lcall loopne push xchg add xor mov outsl jne adc lea mov adc dec or in mov inc movsl lret add mov cld cmp xor cmpsl scas push inc push sbb lds add or gs dec mov fcoms inc xor cs mov inc jp or xor aaa xchg sbb pop mov movsb stc jl sbb cmp in mov ljmp xchg xchg adc nop add or aaa (bad) push inc sub jbe inc cli fidivrl sbb sbb pop nop sbbb roll rcll mov (bad) jge dec rep mov pushf fdivs cmp dec addl mov ret cmpsb into or lods jmp loopne cmp cmpsb push sbb jl dec and push or pop fidivl out movsb or jp fisttpl xchg lock sbb sub mov call pop push sbb xchg pop mov lcall push outsb lods jle popl and fmul sub sti xchg pop psubq les dec mov sub xor pushf or pop sbb sbb imulb add mov insl inc out and js lds mov jg sbb das fbstp mov pop dec cmpsl pop inc lcall push pushf cmpxchg8b jecxz dec imul mov icebp gs cli adc movl loopne and mov nopl popf icebp fwait add xor insb aaa pop sub mov imul sub mov (bad) xor or xchg out or adc bound int add push cmpl adc mov or addl xchg mov pop pop adc and movsb notl add mov es pop inc sub push xchg in jne pop sub es fwait das fwait sub push shrb rcrb xcrypt-ecb cmpsl or adc xor movsb sbb popa loope mov std mov movsb pop or mov add cld rorb sbb xor rcll jo add imul push jns jo aad insl xchg sahf iret mov out cmpsb xlat fisub pop aas mov aad cmp or push sbb incb push mov sbb cmp jmp xchg sbb sarb or out ds stos jmp js rorb and mov das pushf loope mov clc aas push jmp jmp or loop inc add cmpb xchg out mov sbbb xchg stos ds movsb jne mov ret fistpl jbe jg push call addr16 pop jne ss lds lds jb mov cmp push pop aaa std mov xchg ss fidivl inc sub in outsl das jle pop outsl mov lds cmp aas jne push cmovo pop xor pop push dec (bad) or das mov lcall add (bad) dec loop (bad) fcoms jb add and enter xchg xchg in sub (bad) int pushfw (bad) push xchg mov xchg lock xor ds push sbb pop daa pop dec lahf les ffreep stos pop ret jmp xor nop push popf adc mov pop setnp sbb jg mov sbb repnz or jnp std in insb jno je cli dec xchg ror sbb into daa cli xchg fwait jle jp ffreep (bad) cmpsl adc xchg mov jl sbb (bad) sarb rclb xchg cwtl lods mov rcrb rolb sti lret pop pusha push iret shrl outsb add sbb jne lret in jmp out lock popw cld subb loope push xchg add cmp sbb xchg stos sbb loope mull jbe mov (bad) ss fldt in or push mov ret neg dec xor add popf or mov pop or push mov imul cli jno adc stos pop adc loop push and fimull xchg cmp nop aaa fidivrl (bad) cld jecxz xorl insl pushf stos or push adc jmp pop in es mov mov or jmp push push jle pop andb aam adc sub xchg add imul cwtl mov in or pop mov cmpsb dec xchg faddl mov adc bound and push dec cmp or or mov pop jle dec fdivrs add in dec test jno mov (bad) data16 jae aam aaa sarb cmp jg push and pop mov and addr16 pop pop sub cld negl cmp loopne ficom das and stc outsl xlat fisubrl or rcl jno cwtl insb pop and or sbb sarb jl pop nop loopne push negl adc aam inc ds inc xchg lcall mov insl (bad) jo sbb cmp ret movsb push das in (bad) or cmc mov subb and std jp das jbe popf in out sub pop stos jecxz mov neg leave xchg daa push in cmp mov pop pop (bad) sbb loop cltd mov js add nop jge clc push jg dec jle inc sub add insb ljmp push fstl sbb or fs (bad) dec dec insb and inc mov mov stos cmc mov sub sbb cmpsl push movsb jo sub xchg (bad) fcompl sti jbe cmp inc jns lahf rcrb mov imul fidiv lods nop cld xlat sub cmc xlat mov insb mov sbb (bad) testl lds mov push out xor mov add pop test mov xchg test shll lods sbb and xlat sti in nop andb jae popf jmp fistp and mov lret aam cmp scas stos adc mov std rcrl dec mov or addl jmp out push aaa sbb mov cld test repz or pusha xchg inc mov adc cltd (bad) add jle jo (bad) outsb cmp movsb pop lds sbb fiaddl outsb (bad) inc cmp mov pop inc push hlt or jg in mov pushf aas inc stos inc fisubl les jae aad dec adc sahf test adc sub sub mov push or imul jo inc test mov sub jmp and mov inc (bad) xor pushf xor pushf jecxz mov cmpb pusha add cmpsb inc cmp push xlat push ss mov (bad) call jle add (bad) cmp lret push mov (bad) aam and mov sbb pop es mov jg sub sbb mov adc mov pop jecxz popf pop or ljmp hlt orl mov or mov or test dec pop mov leave sbb push cmp loopne pusha clc out es popa or mov lods aas sbb and aaa rcr mov aam mov stos or je jne loop and mov int push imul mov mov cwtl adc cmp clc (bad) aam mov lds or cmpsl jecxz int testb inc sbb loop sarl and mov push xor pop pushf mov popa dec enter xchg aaa sbbl push xchg pop cmp outsb idiv adc xor sarl sbb mov pop inc ss int orl and mov mov mov outsb or sbb nop jbe push dec jno fcmovnbe scas icebp sti cmp jge int cmp stos int3 jp xor cmp jno data16 btr pop inc jmp mov or xor mov fstl add cmpsb push sbb add int out add xchg push dec sbb orb add sub sbb or jle fwait sub or mov jge (bad) scas mov or cmp or pusha dec int jns jg rcl cltd jge xchg and sti cmp lods sbb imul das daa pop mov add mov jno add add scas inc mov mov and cmp xchg out and mov in scas jp cmp push adc mov lods and push add cld test sahf ds das movsb sbb sub push vmovupd mov jle add or out mov jbe mov es mov cld sbb jmp fs sub je sbb or fidivrl sub popf and repnz fs setge dec inc pop cltd or mov test lahf loope xchg cli push xchg and inc pop mov imul adc movsb cld test sbb pop xchg andb or dec add fwait add cmp push ret fcomps sbb xchg xchg add adc lods cmp dec cwtl pop out (bad) jae repnz (bad) movsb loopne int3 fwait inc (bad) adc cmp ret loopne dec nop repnz xchg (bad) enter stos addl notb mov add jmp xchg cmp rcrl sub jl adc mov sahf cmpsl xor in add mov add pop or or jns mov test cmp cwtl subl jl xchg gs divl adc std sbb loope mov push mov pop mov cmp ret mov push popa push aaa mov test orb mov arpl in mov dec idivb and pop dec push inc (bad) sbb sti fwait or cmp imull iret lock fldt jbe inc mov mov fiadd outsb xchg es popf daa mov setnp imul mov (bad) push mov xor mov sbb mov sbb xchg cmp add sbb pushf xchg pop stos stos push dec cmp (bad) sbb mov mov cltd adc je subl cmpl stos push popf push or pop pop sub pop pop sub (bad) dec fistpll xchg bound push das rcrl mov push or cmp hlt lahf (bad) sbb orb adc pushf data16 leave aam ret jns push cmp adc (bad) jo xlat push xchg jl xchg cmpsl rcl hlt or add or hlt enter sbb scas mov or push xor dec sti pop dec add leave or push xchg in jb insl push out push test dec (bad) stos cld pop orl jnp mov (bad) lea mov xor pusha fsubrl pop fidiv xchg fwait cs mov push or xchg xlat imul gs add mov jo jge lds enter cld xor push mov or mov nop jno adc (bad) xor call rolb push (bad) cmpsl rcll sbb jmp push xlat fsubl gs inc pushl js mov adc (bad) pop clc leave xor sarb mov fild mov pushl add pop (bad) push add bound rcrl lret add fbstp lock inc xor adc in dec daa into test sub mov dec mov subl hlt or mov sbb imul out shll xchg (bad) add sbb or inc adc xor pop or sbb lods mov rorb xor lahf fwait test leave xlat outsb mov fdivrl pop fist cmp loopne in cmpsb sar popf jnp or jo lea dec jbe lret lock (bad) lret test mov sbb sub in inc or mov jp sti cmp fs pop (bad) sbb cmp (bad) cmpsl mov lret xchg cmp std push push loope bound (bad) xor (bad) loope lcall pop (bad) dec sbb mov or gs cli pop loope jmp cltd popa fildll gs and jle imul mov insb loop pop loope addb es cld or lahf sbb outsl dec lods sar lahf aaa stos lret and or mov test fwait ret push maxps dec into push pop jecxz aam mov loop insl mov das imul loope push jp dec add pushf dec pop jg xchg xor sbb pop out xor scas dec mov test (bad) mov mov jg les ljmp pop test outsl out xchg popf pop xor push cmp (bad) mov fildl (bad) cmp in push pop repnz cmp iret nop xlat lret or andb inc lea fs add in jbe and mov push int push xor (bad) sub in pop and in and cmp jno shrb add shr in lret je (bad) data16 sub or mov repnz cmp adc popa movsl mov (bad) imul fmull (bad) or mov sub jo shlb dec mov ret rorl dec xchg xchg andb mov test notl cs ljmp xor ss (bad) pop pop inc popf lds dec inc cld or clc xor cld incb push daa dec mov and (bad) mov outsb and or adc fcomp in outsl jl sahf xor push lods out mov xor std (bad) movsb or pop push mov sbb jno cmp popa mov inc (bad) sbb mov inc xor add sti sbb (bad) insl inc pop sbb xchg rolb je sub mov loopne mov xchg or fwait add push xchg test mov lret (bad) jmp cmp and (bad) pushf xor (bad) dec std mov push movsb mov stos and jne dec inc sub adc or xor fdivrs bound adc push fwait inc push xchg fistp add pop mov add testl xor movsl test jge sarb jae add ss popl sbb scas aad xchg and sub dec out roll ljmp fldcw fldcw (bad) jecxz fs lahf pop xor orl mov jo jle movsw fisubrl or mov sbb mov (bad) push cmp aam inc xor cmp jb sub jg out sahf jge loopne xor (bad) jg push lret push (bad) fsts jecxz mov shlb imul fistl stc aas iret adc pop mov daa pop xchg mov inc dec push stc ljmp loop stos daa add dec fdivrs jl or outsl sub mov dec mov fwait cmp lods test ss adc mov scas push adc or loopne mov (bad) mov jmp xor add or push inc sub sbb lock stos push mov mov pop or xchg scas ror (bad) ret mov add push int or fcoms cld nop add les mov xchg lds andl cmpl insl ljmp int3 jbe ret or (bad) ja xlat adc ret addl enter into pop subl addl mov push call sbb pop in and (bad) imul icebp jnp mov das push push out xor adcl aaa push shr loope lea arpl adc aas (bad) aaa pop mov sbb dec aaa add sub (bad) aam or sub mov int3 dec andl js cmp mov sbb loopne lcall mov test ja mov xchg or les je int pushf mulb mov andb pusha and pop or or jmp push dec xor lahf jg lahf mov fwait sti shll jge sbb cmp dec lahf xchg clc es jb stos cli mov add xchg xchg das pop dec pushf fmuls int je jge (bad) in ret or xor cmp fldt sbbb sub mov stc lret sbbl push out stos cltd hlt mov jb arpl mov jns add or and mov mov call jge or xor push xlat adc pop or jo mov or jle div jle rcr lahf sub fwait and cmp xbegin jl mov cltd cmp mov mov and aas cmpsl cmp lret dec lock aas ljmp xlat leave pop jge sbb cs pop push xchg (bad) add add (bad) bound mov mov (bad) fcmovbe add imul pop lods sbb adc bnd dec (bad) xor pop sub sub pop (bad) imul add in in dec fisttpl stc mov push sub adc mov push in dec cmp mov fsubrl xor out orb daa icebp popf mov sub ficomp push lods enter sbb mov int mov dec cmc imul nop das and movsl aad or mov rcll xchg cmp dec repz cwtl mov push dec cmpb aad mov sub pop or clc mov les mov or or mov sbb cmpsb and adc cmp int int3 pop add mov push iret xchg cmp push jge or scas xchg inc fdivrl fdivrs (bad) or or hlt mov arpl mov inc pop fs lcall push cs push scas mov sbb (bad) jnp or add andb jns xor divps decl aad pop in cmpsb roll int leave xor adc mov dec mov mov jmp sub es sbbl jnp push jle out das push mov jbe jns cwtl pop mov or scas mov push mov jno xor xor add push inc cmp hlt add imul fiadd das mov ljmp mov test or adc add xlat add fistp mov sar mov jg inc mov fwait or stos mov xor bnd mov sbb cld pop mov sar dec test push addl xor enter mov pop sbb xor lods and stos jmp add stos cmp pop dec add jb mov sub sbb clc jbe mov test ljmp hlt cmpsl push (bad) data16 xor repz xor xchg cmp jo stos mov mov sbb xchg fwait and insb add data16 jecxz ret bound sar lds pushf repnz stos mov cmp mov clc pushf sub scas repz fmuls cmp inc jno popa fwait int inc xchg adc or push pop (bad) ffreep cmp lock pushf inc je jnp in mov fildl push aas sub stos add jecxz subl jmp test jnp cmp jge (bad) mov stc movsb call loopne faddl es test cmpsl addr16 (bad) mov loopne lret pusha sbb fstpl adc inc push (bad) jg inc xor ret sub in (bad) mov xor je push fwait xchg xor scas mov push cmpsb insl sub mov loopne xchg dec iret jp imul lret out or mov sarl xor lcall dec add mov pop hlt dec sbb fidivr int nop (bad) repz sbb mov es cmp jne (bad) je pop cmp pop mov push xor mov jmp sub (bad) fbstp sbb xor (bad) sbb or iret pop mov sub sbb push and pop and sbb push (bad) pop jo lods cmp xor push mov lock mov lods fbstp xor fisttpll hlt mov sbb popf sbb lock in hlt mov inc loope xor or aaa orl test sub fisttpll xor dec hlt cmp in sub test add inc mov je (bad) inc dec xchg jl loopne nop sbbb repz adc add outsb cmp pop dec sar inc ss push pop movaps sbb push cmp aaa mov nop hlt push testl rcll mov ja enter jae xchg (bad) outsb aam push adc adc cmp adc call dec cmp mov dec movsl in sti je cli pop jge add jmp xlat rcl dec sbb inc add mov xor les leave xchg hlt and movsl (bad) lock cltd mov (bad) outsb lret lds mov (bad) jne mov fnsave push mov xor dec lods inc imul pop sub stos mov or in add fwait and test adc or adc xlat lret cmp hlt mov lcall lds fildl add adc lahf sub imul scas jnp mov rcrb mov cmp repz (bad) xchg imul fnstsw lcall dec jl fsubrs leave sbb inc in subl sbb push lcall pop xor in push sbb jno lcall icebp lock andb movsb in dec movsl mov mov lcall loopne push and dec mov out cld jne xorl push into push jecxz jecxz adc push das mov mov ljmp es jge out loope push jns ljmp aam ret xchg push dec enter mov sbb mov sub xchg outsb test or jp inc jne popf sub adc and push lock movsb aas jp xor adcb cmp jnp xchg stos out and push sub into fwait mov dec jl ds aam aaa les pop fnstsw (bad) pop jb push mov push fild popf cmp push mov inc pusha in ret add je cmp adc sub xorb stos lahf jae imulb mov out lret scas sbb loope mov cmp xor fcoml xor inc push int stos push rorl jmp insb and add or xor mov jp (bad) out ret mov sub clc sbb xor dec stos addr16 orl shll inc push pushf mov pop lahf cmpsl fwait out (bad) popf stos or lods lcall stos push mov push xor cmp or loop movsl jg,pt ja (bad) jmp mov pushf pop sub test cvtdq2ps mov mov add sub push cli inc xor icebp dec add ja (bad) mull rcrb dec addb daa fwait in sbb pop imul cmp (bad) cmp popf (bad) or daa pusha inc dec dec mov dec sub xor or pushf lock je cmc or popa (bad) mov repz mov adc lret lret pop fnop mov ret fwait (bad) or repnz cs adc out popf cld jecxz aam adc mov lds mov jecxz scas mulb js add pop (bad) cmp push cmp mov push cwtl cmpsl and (bad) sbb sahf xorl push popa or and pop fbld add scas mov cmp push pop or or mov clc lret cmp (bad) bnd adc loopne mov jns sahf push cmp out aas in inc xchg nop or jle xchg or aas lea das adc add insb or mov inc push adc pop mov dec fnstcw xor pop push inc (bad) and (bad) dec fwait adc in dec idivb (bad) ret pop xor push xchg mov mov add dec in shll insl ja movzwl rcrb or push inc lock pop inc and fdivl adcl test pop inc jl xchg (bad) lahf hlt and rcl aam pop arpl xchg arpl pop (bad) mov adc cmp or mov mov stos bound xorl rclb popa pop add pop dec imulb add dec shrl or inc xor pop stos shrb jae add enter scas or out push cmp insl lcall dec sbb mov pusha cmp pop test scas inc (bad) or je lcall mov fldenv jge pushf push cmp jnp jo repnz nop sahf xchg cmp jmp in add jl cmp and insl rcrb rclb insl mov push sti inc loop jle or jnp pop mov imul mov jno (bad) xor adc or xor dec push xor movsl mov or stos fcomp (bad) aam cmp sbb (bad) idiv insb das (bad) enter es repnz call mov xchg cld push dec (bad) and out bound cmp stos and mov push das int3 call jp rcrl cmpsl or sti jno arpl jbe and sbb cmp fwait sbb or stos (bad) (bad) mov dec add jge aam dec pushf add testb orb cmp sub iret test lods fs pop repnz imul into (bad) ss mov push xchg dec js lret xchg xor popa pop aam pop rorl push rol data16 enter pop rcl lcall mov int mov sbb mov xor inc fwait add adc xor push fwait dec pusha out into fsubr mov pop (bad) in out (bad) movsb or sub stos in (bad) (bad) or and (bad) jo sub push (bad) sti sub xchg fwait add sahf clc insb cwtl ljmp and mov pop push mov sahf mov sbb inc int cli mov aad insb gs imul jmp ret pop pop outsl jg movsb push das inc les fadds dec jp xor pop rolb cmpsb add (bad) repnz lods jge push jo mov or xchg (bad) in xor and pop xlat pushf sbb push xor add add dec insl sti mov pushf sbb pop inc inc jl sti loop repz (bad) jbe push hlt pusha or pop cmp xor jb xchg or aam in scas sbb arpl dec aaa jbe xchg or cmp (bad) jle imul int fwait pusha xchg jg outsb decb pop push sbb mov cmp inc add dec (bad) imul cmp (bad) pop mov dec aam mov xchg int3 imul cmp sbb mov insb inc in clc cmpsb repz lods jae stos lret out insl add mov push ror jmp aaa les iret stos mov cmp fidivrl mov sbbl push arpl mov push lahf insb xchg dec gs cmp jae roll xor ss out pop dec rcrl jae sub xchg lds cmp mov xchg scas movb into pop outsb dec jecxz add xchg mov or cmpl xchg pop push jmp inc fldl and pop sub adc cli aaa xlat cmp out (bad) outsl jns xchg bound or cmpsl jmp loop lods stos enter bound push adc ficomp adc and aas mov and jne push push push adc pop inc (bad) out fcompl mov push sbb mov add repz mov outsb fwait pop addb xor push xchg mov popf mov or mov jp add mov mov or xchg fidivr push xor fstl movsb gs jns xchg xor mov movsb popf fs add mov pushf inc mov push nop sbb mov mov fs fistpl fidivr rorl orl xlat movsb adc loopne jl icebp movsb jne pushf (bad) popf push cmp fdivl (bad) xor into and faddl mov push push adc mov push push rcrl insl aam mov mov in insl data16 jo cmp hlt sub pushl int repnz adc rorb pop cmpl and negl aas push (bad) dec add fist jle nop andb in jns inc les push dec push (bad) cmp push sahf repz sbb in pusha xor imul xor xor lods (bad) aam cmp cmpsl sbb sbb sub or pop (bad) dec jne pop push inc or sbb in xchg jno stos data16 push sub mov xor and inc inc movb dec ja pop sbb test jmp (bad) out add mov sbb fwait cld inc jp or rolb jne dec test (bad) movb lds sub test mov mov inc pop arpl push add pop push movsl icebp jmp mov push mov ret mov jp pop dec (bad) in add fld1 fisttpl negb jg sbb mov les push mov das xor cmp push xchg cwtl rcrl jo,pn lods je test push out loop pop mov sbb imul out and cmp rcl pushf pop bound mov shrb lret add add testb pushf cs mov push clc pushf inc daa repnz stc mov gs add bound ret lcall fstp jnp lods jns xor sbb add mov stc out lods cmpsb leave xor (bad) js inc jbe ret in cmp (bad) jecxz push lcall sub add sbb cmp cmp test inc lods jns int3 sbb (bad) ja or push adc jge aad js outsl sbb add mov icebp ljmp mov dec xchg mov mov pop and mov fsubl lret cmc xchg push mov jbe or in out mov xchg dec cwtl or push es mov sub inc xchg push int xor stos data16 ficompl je add add inc repz rolb andb fdiv adc mov add adcb sbb bound aad push enter jecxz subl cmp fdivrl je imul stos mov scas in or push mov pushf mov push repz xchg mov sbb mov pusha (bad) push fmuls mov sbb lcall ds gs sbb or jb add dec mov and ret test or (bad) lea sbb dec fnsave sbb cmp mov subl mov lods mov es (bad) imulb dec ret gs (bad) aaa sbb adc push sbb xchg int push call fildl mov or (bad) loop mov or rcll and int (bad) shr jbe sub sbb adc jnp mov stos mov out incl xchg pop addr16 and pop call sub lret fnstcw rcrl movsl cld sbb std adc insb insl sbb lahf and fistpl js xor dec cmp orb cltd dec subb xor xor push mov std int dec in sbb dec mov (bad) in or hlt push sub mov sbb mov inc fsts std mov mov push fidivrl inc mov arpl cwtl xor add mov xchg jb iret nop lock stos bound mov dec sub (bad) shl sub dec dec mov mov (bad) adc ja pop je xlat and xor imul sub inc push and adc inc sub mov call dec pop xor mov pusha test push fisubrl mov fxch add sub in push jbe cli adc lcall cli cwtl push cwtl xor (bad) rolb (bad) shrb (bad) lods insl jge add stos arpl jns aaa push rorl pop inc ljmp and test inc ficompl lret out pop fdivrl sbb test xchg out cli test stos cmp xchg cld fsubrl pop imul mov push aam clc push adc fcoml jl add inc adc pushf nop xor scas cmpsb lret push jne cmp popa adc pop push out or mov enter cmc outsb and movb (bad) (bad) pop dec mov dec pop cmp cmp xchg pop aaa in dec movsb pop cwtl popf xor lds popf push fldl dec daa and jmp lret not outsb push mov aaa sbb or xor mov dec cmp orb dec fimul in aas addr16 in push adc dec jg xor mov inc pop adc out aam imul pop imul jle add roll add or sub or (bad) mov rcrb jb mov outsb movsl cmpsl les pop adcl and loope int mov xchg push add pop repz je inc and into sbb mov outsl sbb in aas pop std mov mov loop leave mov xlat fisttpl loope inc lret or adc fidivl movsb push popa aaa ja mov mov rcrl adc (bad) mov or pop lret sahf inc jle ja nopl jle scas sbb pusha or add pop push fincstp popa sbb xor add pusha or lcall pop fist testl rol or push loope lods mov sahf sbb xlat in in jno jbe adc sub sub push pop or das enter cld in xor lds jno adc sub pop clc es (bad) and pusha jbe icebp pop std add lret add call jno mov sbb mov push movsb pop mov or pop ljmp jb dec mov dec add leave rorb cmp or in and push mov nop mov mov push or cmpsl ss lahf or and sbb jecxz outsb std cmp push xor cmpsl xlat add add mov movsb jmp pop mov (bad) add lods and or fs in sbb (bad) mov popl aam or insl inc cmpsb insl call lret cld enterw mov movsb push and outsl nop cmpsb mov add add outsb (bad) pop movsb jnp pushf outsl lods loopne sbb bnd hlt std lret aaa inc addb xchg mov xor (bad) mov push mov out loopne inc arpl cld std mov adc mov jae ds mov mov loope stos and in xchg fcoml jbe ss sbbb scas enter adc and mov sahf les fcoml or xchg call mov jg mov sbb fwait mov loope jb push xor int fisubrl jl pop int3 inc or mov add pop es jnp or jg cmpsb cld stos pop jmp hlt (bad) pop sub mov outsl sbb in sbb or mov (bad) data16 sar mov cmp inc ret jle pop pusha jl fwait insl out or sub mov jnp sub push jl pusha (bad) fcoms xchg add add mov stos bound xchg push xchg xchg add js jb inc xchg (bad) mov cmp ss add lret insl in std push lret dec fwait sbb pop inc sbb int mov mov test cmp jbe sbb fdiv dec pop test cmp out adc lret lock jl mov mov jge mov pop lret add imul sbb jae add cmp in xchg imul mov xchg ja rcrb sub clc (bad) gs test sbb push xor add inc mov aas pop dec xor lods jl mov and cmp jecxz js mov pop (bad) jns add mov jge lcall xchg push into cli pop mov dec inc es inc xor sarb cmp pusha arpl inc ljmp add aas aam adc test push xchg aad xchg (bad) sbb push insl mov sub and out mov pop icebp add (bad) js xor mov ret (bad) pop pushf loop mov add sbb jl cmp insl mov (bad) lcall mov adc les xor sbb scas push rorb push push xor and outsl push add fsubs orl insb xchg outsb mov sbb cs cmpsb test adc jle add pushf imul mov std pop les fnstenv rcrb rcr mov leave dec lret and adc js and (bad) jge or inc mov dec sbb pop test add dec into inc push pusha insb movl jmp push (bad) jl nop mov aad jl test out push pop test xor es cmp and push dec lock xchg cmp inc lea loope xchg dec mov fisubrl mov aas jl aam out xchg in jo xchg push xlat mov pop mov test mov and pushf xchg in lods sbb dec pop mov push outsl es mov shlb pop adc sbb (bad) xor jmp jle js and xchg add ret or clc stos test fwait enter out clc ja mov (bad) add and sub sti and leave in sub pop xchg fstps cwtl xor push xor mov sbb psubusb lret jnp sub popa (bad) je sbb xor rorb mov imul enter outsb dec sbb repz sub mov test movsl js scas xor hlt lcall mov dec inc outsb xchg xor xlat fwait push pop mov int3 mov jl add xchg and dec inc mov sahf xor je lret push sub pop (bad) add jmp test push stc nop sub cmp mov jne fimull dec fwait sbb cmp sbb fsubr ljmp cmp (bad) mov divb sbb lret (bad) xor or repnz dec out mov mov imul push jbe call or cmp mov jae fstpl adc pop mov push mov loope mov cwtl pop gs stos subb outsb lret push aad or xchg adc jge fimul int push jno jae pushf mov out je cmc xchg inc jecxz andb not pop pop in sub js sbb xlat mov cli outsb scas test repz sti pop inc inc sbb dec xchg push mov fbld jl inc lret xchg mov sub and loope (bad) in inc jnp int3 or sub or push ffree lret sbb jl imul add int arpl lds push inc scas scas int in mov cwtl inc dec push movsb and pushf push imul frstor fsubrl sub adc pop or pushf or mov out (bad) jnp cmpsl add xchg mov sbb pusha or xor aas cmp aad pop push iret push repz jbe jge sqrtps jmp push push int add and repnz sub int nop pop sbb xor fwait cmp imul scas inc or fildl and lock sti pop sub xor fwait (bad) fs or popf mov pop push mov jo inc (bad) stos cmp mov pop loope cmp jmp insl cld daa cmp sahf sub pop xchg push aas jne fdivrl jae sub jo ret push mov xor rorl cmp inc lods in mov pusha cmc or sbb (bad) xchg add mov cmp shll sbb pop aas pushf pop fwait lds and and inc je sub cmp gs aaa lret jo aad sbb popf cltd call fiaddl mov (bad) or sti test rol outsl xor add fstps cmp lcall mov xchg pushf or rcrl push add jl out add mov in jnp out cld or xchg push dec dec add lods mov repz adc mov dec pusha push cwtl aad call push push jmp xchg and mov or cmp rcrl hlt mov adc cli mov dec negl pop sub cmp rorl (bad) mov or pop add (bad) (bad) mul (bad) mov jle xor add js inc aad cwtl and mov pop push jl stos pop je inc cmpsw push fwait mov gs or dec ja (bad) lods fcomps in int jo sub adc xor dec movl mov daa cltd cmp push cltd ret dec negb repz push notb jge xchg bswap push int3 mov ret mov xor pop add (bad) in sub dec ja or sub and mov mov pusha pop xchg mov mov jle push xchg pushf divb pushf shll inc int3 mov sbbb fmulp push mov leave movsl ljmp mov repz stos add jge and or sbb sub sub adc push jb sar sti (bad) xor mov (bad) incl (bad) test sbb cmpsb enter xchg or inc pop push pop daa cwtl ljmp scas aam jbe fidivr mov cmp cmp jbe push ret daa daa loopne sbb (bad) mov cmp sbb mov and mov ficoml (bad) sbb adc in arpl int cmpsb loopne imul mov inc push sbb lock nop pop mov lods in sti jl mov jb mov sbb aam jl cmp sbb cmpsl sti cmpsl adc cmpsl sbb pop sbb (bad) xor in in movsb sbb sbb pop fwait js xchg pop xchg add test sbb xchg pop dec add sti daa stos xor mov imul movsl mov inc jbe ss stos daa jp dec fsubl cmp (bad) sbb mov push sub repz inc out (bad) jo push out out pushf push push add das xlat fstpl fidivl (bad) jbe jmp dec sarl sbb push subl jge xorl imul sbb push push jns (bad) nop pop mov sub sbb ret sbb imul das ss shrb cs sbb in in jns iret bound aam (bad) xor add xor jl mov inc sbb adc lret sbb sbb cmp (bad) rorb rclb sahf nop inc icebp and jne imulb jge popa bound or pop and lahf in xor popf in mov pop add cmp sub xchg jmp cwtl pop addr16 ss or lea or xor fdivrl jae xlat das ds add bound das data16 push or (bad) mov cmp push enter inc addr16 add mov xor and cli adc or shll cwtl pop mov or fwait mov out or rclb (bad) rep out in pushl pop test pushf sbb or fwait sbb cmp mov cmp fsts pusha insl test (bad) outsb or test mov dec jnp (bad) cmp sbb fwait push sbb repnz fldl out or hlt stc xor je xchg outsl and mov sub jnp xor (bad) dec aad lock fsubrp adc (bad) dec sahf or inc incl sbb ja loopne jbe xor pop xchg mov lock aad fdivrl hlt cmp ja mov add cld sub daa imull cld shrl fnstcw mov daa mov or add pushf ret inc data16 lds ss cli mov sbb sbb mov (bad) shlb add mov (bad) pop nop jo lock dec dec mov sbb jne orl dec test hlt xor ret sbb or out mov movsb mov sbb pop insb out cli mov inc popl addr16 dec (bad) pushl add (bad) pushw aam mov int3 sbb (bad) (bad) xchg sbb jnp jmp pop cmp jl lret or inc adc bound jp aam sarl xlat mov inc data16 xor push mov adcl daa inc jp test mov sub or sbb sti or dec andb cwtl mov mov in fwait cli das xor cwtl adc (bad) sbb (bad) clc lds aas push mov movsb inc sbb dec aas cmp xor loope rclb es sub lret add jmp inc pushf cmpsl push and dec in push lock or stos jle dec or push mov pop pop in dec dec mov (bad) xchg enter push fs lahf dec cmp mov push mov lods data16 lock pop mov call dec rcll mov push add lock mov cmc xchg popf mov dec div and out outsb les not sbb and aad (bad) test or call adc sub sbb leave cmp fmuls adc divb nop mov xchg add adc adc in lock add movsb cmpsl xchg (bad) aaa jge mov aam cwtl sub sahf inc pop cld xor adcl pusha xchg in push lahf in and stos scas or mov aas jl fbstp stos aas adc mov rorb aam pop cmpsl scas push inc out and jmp movsl cwtl popf push outsl add decl sbb xor jl and jns xchg pop adc mov (bad) mov and fdivrs sbb in sub shrl jg add mov call outsb fistp push cmp jge adc push mov jo les hlt outsl sti out mov push jle push inc call and push das jb adc fsubrl jb aas (bad) ljmp inc fnstcw shl inc dec pop cmp lods stos cmpsl repnz sub and add addr16 inc scas cmpsl insl jl sarl cmp jns or out push lret in cmp lock jo inc and push insb shl aaa mov cs cmp pusha xor or jmp cmp jo and cmp jbe sbb and sub sti push adc ljmp scas mov fcoms (bad) repnz sbb sti jl push add stc jbe and and notl xchg lcall mov mov test leave push mov in mov cmpsb jbe insb mov dec stos lret xor sbb cmp cmp add pop xor (bad) popl xorl sub into stos and loopne dec pushf lock cmpsb inc cs lods fs icebp pop sbb cmp aad or call in push rcrb pop jmp push pop (bad) xor adc pop roll test push xor addr16 lock pop jecxz sbb push cltd and sub int clc jmp sbb dec sbb nop rorl movsb ds cmpb cltd movsl insb push mov andl rorl sbb test sbb cmpsb mov into push jbe stc add std int int sub adc xlat sub mov ret push inc adc sahf jno leave mov cld xchg das fist jns mov push xor sbb mov jge lods pushf nop (bad) mov mov js cmpsb les clc pusha cld movsl repz mov mov dec (bad) aam push clc mov (bad) fildl imul or outsl dec insb sub sbb roll mov mov sbb mov (bad) adc mov hlt mov (bad) xor xor add (bad) fwait cmc rolb sub stos fdiv dec cmp (bad) mov sahf fsts ret divb (bad) test leave jl and sub dec sub int xor lcall inc arpl mov jmp out hlt jb loop push push dec rcrb lock pusha sub lcall add mov or cmpsb dec fwait (bad) dec pusha pop mov lahf addr16 pop cmp cmc ss in btc call sbb movl test fwait push pop fisubr sub outsl mov outsb and inc and jg fild aaa scas jge loop test cmc cwtl insb in and add aam dec add loopne iret jl jl mov insb int3 je xchg sbb sbb imul les sbb ds fistl jae movsb sub dec push push cmp loopne and mov push fiadd pop aas mov enter test data16 lret jo test clc repnz mov mov lret sbb test sahf or je ret pop or sub test jl push xlat cmp pop mov pop pop movsb aas adc sbb jle push push push lret sbb je sarb lret stos in hlt add cmp jne clc sbb imul jle xchg sub movsb cmp nop push jle adc aas dec ja mov add dec and stc nop lahf pusha and test leave sbb loopne (bad) mov notb popa xor scas cmpsl sbb or and push jge out cmp mov (bad) sti fmul jmp adc fcompl in or pop or aas push push xchg sbb add adc std add and sub xor cwtl push loopne or pop push icebp (bad) jnp lock orb nop jmp in loopne lds movl outsb inc lods hlt push lret int3 lahf (bad) adc nop mov aad (bad) jle sbb aad xchg xchg fildl les jns sbb fnsave (bad) xor test out mov aam cmpsl jae std xor sbb mov cld ret ret pusha mov aam or mov ret and push mov test sbb cltd out dec mov mov sbb pop les adc xchg and shrb mov sbb loop stos inc (bad) cmp gs dec adc inc xchg cmpl or cmp mov mov pop mov mov sbb inc pop mov inc mov xchg or or fwait jbe std das sbb add lods adc daa repz cmc scas daa push sub pop inc mov adc ds mov orb adc lcall sbb sbb dec pop mov sub pop mov fist dec (bad) loopne jb adc add loope add sub in shlb xor sbb pop shll repnz adc jmp pushf ja unpckhps jge fnstenv push xchg (bad) sbb xchg pinsrw or adc neg add add cltd into pop pop (bad) or inc push in das sbb movsl in repnz or (bad) cmpsl pop nop (bad) jmp inc mov adc test sbb dec xchg jecxz cmpsl adc mov lock add or add (bad) in push mov add xchg mov (bad) jnp jns mov rol push or test out lock (bad) jne mov adc cmp sbb lods sarb cwtl js rcll sbb or test cs mov ljmp pop into fdivl and data16 lds mov xorl push (bad) mov loopne adc jle fwait add push js (bad) push mov jns push loopne xchg lret xchg repz es jno push dec out pop xchg pushf cli cltd subb movl cmpsl (bad) sub xor inc mov sbb xlat inc fwait lds cmp insb cmp into add push jmp mov aad push shrb cli cld xchg jb mov add pop mov add outsl mov pop pop or rolb movsl mov (bad) mov sbb mov mov jbe xchg cmp nop daa dec nop lock dec outsl xor popa push fidivrl mov jns sub mov stc mov pop cmp mov das cmpsl dec xor pusha jmp or jg int dec fidivrl jg ja jbe dec mov jl addb mov sub arpl test push pop and cmc push xor pop adc enter mov mov aam (bad) loop js jbe (bad) sub cltd arpl stos sbb sub dec rcr sbb push push arpl sub lods add sub mov (bad) jns pusha mov xchg mov inc xor xchg idivb out pop cmp pop test outsl push sbb sarl add int3 sbb cmp pop mov rcll out or mov cmp loope jle jge xor fdiv mov add aam out dec test cmpsb stos mov fcoms push mov dec pushf jnp or (bad) cld test cmpsl je add add popa add jle insb cmp mov and aad loope mov xor add cmp sbb mov lock cs mov imul popa rcrl push in cmp fstps or mov inc dec jno jle movsl in imul pushf sbb adc adc jno or es push xor mov daa cld sub pop or sahf test jge xor and jbe pusha pop cmp sbb lcall mov cmpsb test sbb or sub sbb xor pushf mov sbb in mov hlt mov pushf cmp mov lret mov lock test push fcoms addb push dec (bad) nop popa sahf xchg or lea imul jle rolb scas mov (bad) inc push xchg scas or or mov sarl outsl out pop mov adc inc std dec nop pop mov fidivrl aas pop mov rcrb movsl int jno stos jg (bad) jnp or jle inc add (bad) jo dec imul adc push add faddl aam add cs push sub enter fcompl aaa jo push jo push add adc inc pop or frstor sbb lods add gs scas cltd mov xchg sbb aam mov cmpl sub and jle out or imul push xbegin cli mov bound mov int push add inc xchg and or mov fs mov add push das mov sub lret pop mov jbe xchg cmp add push mov aad rclb xchg mov lret fistp inc inc sarb cli test cmp push sbb sbb xchg dec sahf les adc movsb fs cwtl inc cmpsl outsb gs int jnp sbb push and in movb pop jmp jo sub aaa push inc mov lahf cmpsl xchg and (bad) cmpb push add gs in mov jle sub push movl pop cmp int inc jns lock lcall loop mov pop jmp jo,pt mov cmpsb loop or outsb loope in imul test pop mov loope or push cmp sub out loop cmp push adc xchg imul fwait cmpsb popf lods out (bad) inc mov fcomps jno push rcrl fwait daa push scas std out js jmp adcl xchg add imul popf jp push ret stos jp stos add pop xchg insl fwait cs pop xorl add dec mov in into out sbb fsubrs fcoml jge xchg lds dec sbb test pop and inc jge add mov pushl xorl bound and loope jbe into inc call and cmp or cmp ret push pop mov std imul add mov xchg jne gs (bad) xor (bad) cltd jbe mov mov inc xchg jo icebp sbb jmp jg in scas dec push lods add xor fstl sarl outsl jg sub mov lock pusha std mov xor mov cmc loop mov ljmp fnstsw xor dec rolb add in cmp in jl outsb cmpsb addr16 sub outsl and fldt outsb pop das and movsl insb lock cld inc fidivrl loope hlt mov xorb cmp aad notl ljmp dec inc push mov ss in movsb mov inc popa and jne mov dec xchg in pop mov sbb xor emms or push out xor js mov std and mov lret (bad) bound sub add dec sahf loop cmp add mov mov shlb nop add sbb andl (bad) jb dec es cmp jp adc lds in or lahf dec movsb (bad) out dec pop adcb cmp in ljmp and movsl test pop jmp ja inc aas inc std jbe fcom jle add je lahf aad push mov cmc mov xor xchg xor inc cltd fwait sub push fwait pop mov fisubr imul into mov adc sbb pop out lahf loopne jo (bad) xor xchg adc mov jmp mov push dec jge jbe hlt insl ja into js out scas jne (bad) dec (bad) pop rclb cwtl in call add push out add add add mov jmp out sbb cmpsl or mov add loopne xor jl ds repnz sbb (bad) imul lods stos add or and xor pop push enter mov xor jo outsl cmpsb lret or fwait adc subb mov inc jns sbb (bad) sub jge push lret mov mov lret subb jb testl lods pop dec mov or add push adc iret jnp or dec lahf in add in sub daa sbb (bad) ljmp scas dec (bad) scas in loopne add ret ret pusha cmp pop repz dec jge push sbb imul mov xchg cmpsb add or xor mov xor sbb out or (bad) pop sub fdivrl mov cmp pushf or dec cltd mov fwait pop add xor movsb sbb bound xchg jbe sub clc sbb mov adc xchg xchg mov cmp das (bad) lock add mov (bad) call inc jp test mov push clc and scas push mov push jns popf test je mov adcb lret jl fsubrs (bad) mov sbb andl mov pop sbb pop popf jno mov repz movsb enter loope sub inc xlat movsb xorb cmp xor jge enter fcoms loopne ror addl and add adc and lret lret ds aas cli mov pop push xchg push inc dec push sti sub fisttp test mov outsb jecxz mov add pop pop lahf sbb repz out mov cwtl push stos in negb push out sub adc mov out data16 cwtl and sbb mov pop (bad) jne pop in jecxz stos icebp js jno adc std fnop pop xchg pusha mov js iret dec (bad) mov cmpsw pop shll clc mov mov addl fmul out (bad) jg movsb leave aam (bad) mov dec aas dec (bad) pop aaa xor movd (bad) out int3 iret xchg (bad) sbb jge push in stos movsb enter jle addr16 in fidivrl repnz mov lock aad sbb mov mov cmp mov jecxz imul ret lds incl cmp cmp dec add (bad) sbb or or lahf data16 sahf inc lcall sbb adc fcompl mov mov jp fxch push aas repnz (bad) in mov mov adc xchg sahf lcall sbb xlat dec jnp mov cmp in mov mov inc fidivr push mov push and (bad) popa mov movsb mov lahf inc shrb adc ljmp sbb scas jecxz xor mov aaa orl xchg test test mov fwait jecxz in add int sbb fmull jp push push lcall addb fs sub mov adc orl ret inc add sbb fnsave sbb sub loopne xlat cmc insl or mov mov mov leave add mov inc xchg (bad) sti inc sub aam addl jbe inc movsb push adc pop das mov call jo inc jne add push dec insl ds icebp fistpl sub push jg or ljmp add out mov push sub lds jbe les mov out cmpsb mov mov js push jno out jecxz mov inc shrl rcrb cmp jb adc rcrb in add in (bad) or xlat mov mov pusha daa xor loope call mov jo and inc in push cwtl jb or or xchg jo incl cmp or shll jge adcl fdivl faddp jmp loopne pop dec insl out bound pushf pushl cmp xorl pop cwtl sbb inc xor inc sub aad loop xchg and add movsb loopne (bad) mov sub aas adc (bad) sbb aas fldt jb mov jge popa sbb or adc ds add (bad) outsl pop xchg and rorl sbbb inc jne es sub lahf out cmp vucomisd dec push aam xor roll and xchg mov cli dec cmpsb pop into pop sub in jge out pop ss outsb pop iret (bad) out xchg xor iret fmul xchg aas mov add dec jnp push push inc dec pop out and pop xor sahf clc xor cwtl mov cmpsl push and stos add or jmp mov ss fcoms (bad) mov inc pop lahf inc mov jmp adc add sbb pop insl mov sbb sbb pushf inc dec inc test add jns add sbb add mov dec xchg inc pushf xlat std xlat les aas in inc js out mov push inc mov push sbb jmp cmc inc lahf jp or sbb pop xchg adc aad out hlt jmp xor mov cli cmp (bad) add xchg push leave pop mov or cmpsb add js (bad) lcall lods add and and xchg pop or aaa cmp push mov sar sub int cs out jnp (bad) rclb pusha xchg mov fisttpll jl mov call inc jge mov int pcmpeqb cmp ss push pusha sub jbe dec cli or jge je cmp orb ror loope arpl mov sbb adc inc lahf insl push shrb out push fist pop movsb sub sbb das sub cld stc jmp inc outsl (bad) xchg test xlat jns xchg mov jbe loopne or pushf and mov sbbl adc cmp sarb add jo sbb movsb movsl mov mov dec add add jbe mov (bad) pushw inc dec int inc outsl (bad) xor or rorl or mov push test (bad) fldt lcall in adc ja call sub sub imul jg ficomp jle ss pop movsb cmpsb jp inc aam push cmpsl cmp rolb scas (bad) push out ret inc test in xlat loope dec inc lret jb xchg ja fisubrl lods repnz pusha mov cwtl mov pusha inc fsubs add and jl push pop pop sub idiv xchg inc pop les add repnz shrb push hlt cmp mov insb data16 scas jno into xor dec pop cmp int xlat mov cmp lcall popl xlat sahf (bad) push xor jl movsl call ljmp lock cmpsb dec jnp fisttp sbb dec adc pop jge jmp sahf push jns loope cwtl cmpsl push mov jnp in or test jl aam push test xchg sub jg pop sbb xlat pop test and pop (bad) xchg and lods jle sahf jl aam dec aam ja cmp mov and mov cld cwtl loop inc add (bad) cld and in lods dec lahf dec sbb mov lahf imul dec das insb loope idiv push call pop inc pusha dec out adc and inc pop int aas das rcll sub ss push fistpl mov or and xor lods in iret sub subl test bound push mov inc (bad) mov or or sbb push cmp mov adc jnp out dec pop sbbl je rsqrtps cmp fcomps fwait push xor movsl push jae dec sbb outsl es lcall or mov mov pusha add or pop cs dec lret inc sbb jbe aaa mov loopne push mov fldenv dec jle jle lds lods test nop pop xor mov or mov decb push popf das cmp dec pop jne int stos jbe add flds fwait xchg repnz test mov or iret aad inc lds xor and nop mov divl push mov insb jno out pop repz loopne mov sti push out jmp cmp (bad) or jl test mov dec test loopne and add jne les xchg jle mov add pushf or sbb and loope push mov and addb outsb jbe xor adc mov or xor lahf push setae adc mov ret das inc jmp mov cmpsl imul mov cmp int3 pop aad sbb call mov xor adc mov addb imul push dec add mov lock sbb pushf xor fnstenv push mov insl jge pop mov and mov rol push outsl dec data16 or movsl inc sarb cld test and add mov jle je (bad) jmp xor fdivrs insl cmp mov or lods ret (bad) mov (bad) sub push ljmp push movsb xchg andb adc pop or sub outsl movsb xchg leave mov pop adc or push scas in leave xadd sbb sbb out pop ljmp cmovns sbbb imul out stos imul fnstsw mov mov mov jnp xor add mov mov mov (bad) ljmp iret pushf sbb scas dec add ljmp sbb fcomp stc (bad) or adc jp sbb aam pop loope cmpsl bswap and mov movsl pop mov cmp jg sub jne pop sar sbb pop loop or mov cmp fbld add pusha push data16 mov out sbb mov xchg test add jnp fstpt (bad) leave lods sbb adc add mov dec cmp test loope sbb (bad) sub sbb inc mov inc addr16 enter loope dec loop sub mov test xor das xchg jg rclb aas andb stos das lahf inc pop mov repz test inc (bad) daa lret out icebp lret mov mov push cld adc jge dec loope call rcll mov cmpsb mov mov xchg (bad) enter outsb pop sub lcall xchg int3 shll jne cmpsb sbb jge mov lret jae in xor out xchg sub int in pop movsb cli jle or or popw jge insb xchg (bad) jne,pn dec jle xchg pusha mov bound rcll xchg das scas xchg xor cs loope (bad) lret nop lods ficoml xchg popa mov pusha xchg arpl leave fldenv lock popf fsincos and (bad) adc mov ss lcall out dec jp (bad) repz push aad and es repz test arpl mov jbe daa push repz pop fisttpl xchg incb sub pop sub pop inc stc xchg adc addb mov jo andl xlat loopne push adc mov movsb out lds cmp arpl (bad) icebp cmp lods cmp shlb pop in ret test add das sub push nop dec jnp lods jl insl pusha fadd push je loopne inc push jg mov into aas lcall (bad) xor (bad) adc mov jp pop and ljmp xchg movsb inc (bad) pop sub mov push js jae adc (bad) xor aaa adc or loop,pn adc mov jecxz inc push fwait or or and jp out jg sub sub xor jns push pop push (bad) es repz cld ds mov jae dec add lahf adc in xchg cltd adc movsb lods mov and add pop mov pop inc push test lock adc lods lret jmp adc aas xchg pushf sbbb push jg mov pusha leave test movsb jae xor ret cmpsl mov mov addr16 test movl mov stc (bad) or jecxz in and mov leave loopne mov stc pushf inc movsb push into xchg jnp es add loopne pop cmp leave jl inc push or push jp aaa mov cmp or jo das inc test xlat mov mov sbb and (bad) xor pop lods in dec gs or daa (bad) jo mov lret mov push fcompl pop xchg cmp push rcr xchg aas int dec adc daa lretw and xchg les cmpsl bound daa lds mov mov stos dec mov add aam pop jo jmp xchg xchg lret je not (bad) pop scas jle clc xor fistpl lret mov lods fsts dec jge xor xor lret (bad) fwait push xor stos xchg xchg das loope or (bad) sbb jl sbb inc in cmp sarb xchg dec mov lahf push xchg rol andl and addr16 roll (bad) aam lock mov nop cmpsb aam loopne cmp int3 leave or mov cltd movb ljmp xchg adc dec cmpsl mov iret mov mov outsl xorb lods dec sbb xchg sub xor push or adc fcom dec mov imull or ret pushf jecxz sarb fdivs les sbb jmp loopne cltd mov pop push (bad) push pushf xor xor addb pushfw adc decl ja cmpsb mov dec jle sbb imul jp mov jl fidivr or cmpsb or push dec sub sbb xchg shlb orl das mov mov fisubl xchg test adc pop jbe cld test stos jo mov lret mov pop cmp insl push pmulhuw xchg dec mov popf fistl fcomps jge jle sbb jno insl scas sbb xor ja jmp lods xorl xor cwtl in xlat stos or insb int std dec cmp pop jl mov sbb dec mov repz jno lea fdiv xchg dec mov insb cmp nop adc jg call push clc inc adcl lods es xor (bad) jle fs das out push dec (bad) jp sub insb pushf inc dec das fstpl test push ret cwtl push roll lret hlt (bad) ljmp test int std push rolb mov gs cld rclb addl (bad) xchg cli outsl mov fnsave out adc and pusha stos cmp aad popf fwait add ss sub js imul roll and jns cmp xchg xchg add adcl stc adc hlt mov pushf mov adc pop test decb (bad) iret lock repnz jo pop (bad) mov sar sarb hlt or outsl cmp or mov das daa (bad) in cli outsl sbb mov cmp (bad) and std (bad) pop pop loopne adc (bad) int pop (bad) mov jle cltd (bad) bnd aas xor lcall fstpl push punpckhwd mov lock adc fist daa mov push mov int3 hlt sbb mov cmp (bad) std nop pop fsubr pop popf int3 mov jbe dec push sbb movsb lahf clc or fstps and pop in lret je mov jnp cmp adc cld std jb outsl and test push jge shl pusha fidivrl (bad) mov fwait add pop add rolb xchg test mov orb (bad) (bad) push test pusha pushf dec mov sbb jo inc sub leave and pushf sub pushf (bad) cmp ds (bad) pop or sbb stos add xor fild test in sbb negl fs subl inc mov hlt test (bad) in scas fbld xchg cmpsb fisttpl mov mov add lea sbb xor imul jne xchg adc aas mov mov cld outsl aam or inc mov (bad) lret ds jecxz jle mov ud2 add push loop push push in or pop bound lods mov adc les mov loopne jno mov fnop roll roll cwtl addr16 mov mov or data16 insl dec insl xchg sbb (bad) push xchg mov jle jb in es std push stos daa (bad) sub or xchg mov std pop int jp lods sti out mov jns pop (bad) pop ret dec push xor dec adc clc daa scas jb data16 lds lret push cwtl dec xchg ljmp sub jo pop stc loop inc std dec aam push hlt jl mov das aaa sub mov pop sbb enter je xchg clc cld cmp out mov sub cltd scas or enter data16 pextrw dec mov cmp std aaa das mov mov out mov mov int3 mov pop movsl pop inc jno push inc cld add inc (bad) cmp mov (bad) ljmp (bad) xor xchg jle int xchg sbb pop mov fmull movsl ds ror xchg inc mov lock js mov pop enter data16 sub mov dec in and lcall lds and imul and ret sbb fcompl test jge cmp and call das jns loope jne inc (bad) mov pop in inc rcrb cmp and sahf jge inc cmpsb pop aam or add sahf sbb sub lock inc cld add cmp cs mov jp orl bnd jb xor lret fldenv jmp aad fcompl cmp fldenv lods scas aaa hlt lock mov sahf (bad) xor popf add jg jecxz stos and insl call xchg xor scas dec clc rcrl jne int inc int lock add and je popf xor out test in cmp in xchg (bad) adc mov jns or push xchg ljmp out ja jge xchg mov mov sub cmc call jp pop (bad) out mov orl ret lock dec xchg sahf popa fdivl dec sub cwtl fisubrl sbb or sahf insl (bad) jbe cld sbb sbbl leave add cmp xchg shrl adc or fisubr movsb push xchg pop jp sti push es push xchg or fcoml xchg iret or add in shrb fidivrl add pushf and dec mov leave xor jbe fnstsw push mov insb sbb test jo mov fidivrl ss xor aam mov jl lock adcl std ljmp inc loopne cli outsb dec fs dec sbb jnp addr16 jl jge bound loop fbstp bound mov or jg or jbe dec rol insb lds sbb incl fstenv xor adc repz push inc xor jmp (bad) inc push add es mov cmpsl out inc mov pop mov fwait pop mov dec (bad) outsb push ljmp mov pop adc sbb xlat sub and lock adcl push outsl gs add dec shl hlt cmp popa sub pop mov mov loop mov cmp lods or lods out mov repz loope jmp jl lcall sbb into hlt or mov adc gs test push sub mov jne adc xchg shll jmp xchg das (bad) jne pushf je mov shrl cwtl fistp imul cwtl or add xchg mov shlb jo inc loope pushf insl jb push fwait jl xchg rcrw je ss inc add cld movups jp lret inc and iret das scas sbb xchg cld push nop sbb loop pop insb cmp jae push sbb and call inc add sbb jo xchg rorb inc fs dec cmp push es and mov xchg clc pop xor cmp jmp aam and sub mov inc xchg sbb das hlt mov fstl out mov xchg movsb inc push push add add push clc jne pop fistpll cmp or sarb in fsubrl sahf pop mov nop mov and int push sbb out and cmp inc jo cmp dec hlt jnp add cld mov mov jmp push inc mov inc das mov adcl xchg es xorl xorl adc mov mov and loopne dec add aam cmp mov jp jb popa mov push mov add pop loopne dec cmp or pop int3 push or push stos jne cwtl cs xor push sub push (bad) aam jns push jmp push pop aas out mov fdivrl mov xchg and sbb jb les ret mov rorl mov sub cwtl or fs jne dec insl jnp lea bound jns jnp lods jge push sub or pop cli jl jbe adc push pop or fistl scas scas lahf pushf test or and call adc or call jo push nop mov or jo idiv or lret addb and fldcw test xchg mov xorb cwtl hlt (bad) into push pop bnd sub es jb adc ret rcr ja pushf add mov pusha lahf mov sub lock dec pop lods and jae orl outsl xor push ja dec cwtl fistpll lock push cmpsl popf jmp fwait mov mov xlat mov add and imul fwait mov (bad) dec or xlat xor xchg jno fstpl inc jg fsubl test lret jbe xchg mov aad push pushf ljmp mov mov jb negl nop inc loop sbb inc pop jne pop adc inc cmp sti sahf ret jge out sbb cmp sbb (bad) xor sti test pusha cli sbb pop push cld je pop xchg xor xor mov rolb out sar popf out and stos adc gs test add sar jo insb mov jl inc inc jnp (bad) push fisubrl dec sbb sti stc jp xchg and out xchg mov mov push flds int3 cld out push mov and cmp adc sbb add clc jp call jge adc neg jbe mov movsb and clc aaa inc inc ret sbb or push and in sbbl jle add int pop sbb jnp pop jb int dec stos mov je sub outsl (bad) xchg adc (bad) cwtl mov sbb repz movsl aam movsl jp sbb cmp pop addr16 imul xchg movsb sbb loope decl test fnsave xchg sbbb pop test out insl cmp ret add push mov shrl push orl insl pop test or decl inc into mov push push incb cld xor loope data16 xor leave mov (bad) fstl cmpsl ret cli leave faddl mov inc push mov subb ss jno ret fs push sub add xlat inc aad jge push (bad) (bad) cmp cmpsl or xchg pop insl cmp inc call fdivrp jl add in dec sarl outsl in loopne add jbe dec shl or inc lret push adc jg adc fldt sbb test and inc movsb cmc leave (bad) jb (bad) push xor jle add or mov jns repnz push mov mov xchg iret jle xchg pop jo sahf jecxz mov out in add sar cmp jle sbb rcll imul or cmp mov inc jb testl jl jle add fwait mov inc je adc jb iret outsb cmc sub add push dec imul jns mov jmp stos dec lcall jo jnp adc ss andl or stos and or mov imul mov stos sbb push dec addr16 into (bad) mov xor sbb mov and xlat jmp mov clc movsb mov das pop mov sub jg subl fisttp pop sbb ficoml gs dec insl cmp dec dec or push in dec clc (bad) mov aad and outsb inc sub jl lcall lods rorl jbe dec or cmp sbb sub mov pushf xor pushf or jle cmp jb ret sub or out mov sbb mov movsb xchg mov cs sti call in divb pop mov sbb mov xchg lock sbb push jl out idivl inc jo aam xchg mov sbb movsb pop cli cmp aam push shll inc inc out je,pt insl xor imul jbe adc fcompl xchg dec or data16 and insl push push ja or jo lret pop sub loope cwtl pop (bad) xor enter (bad) (bad) jo mov xor imul mov sbb jg scas (bad) xchg test andb add lea or aas hlt xor adc mov pop jl js adc jg sbb or inc push sub lret lock aas out fwait xor sbb or mov and mov inc sub add xchg sbb sbb je add add mov popf dec sahf (bad) jo das das notl popf ret cwtl cltd pop jle xor push fs jmp hlt shrb mov das cmp cli adc in mov dec or mov movsl and sti jl pop pop ja cmc fs jb mov sbb (bad) out jg xor pusha cmp int3 mov fimul inc or (bad) es push cld stos cmp sbb sbb pusha xchg or mov jbe add xchg fs xchg add sub dec hlt dec xchg stc subl lods rorb out pop add out ja dec les mov clc jns sbb in mov stos in rclb pop incl addr16 mov mov (bad) fnstenv push lods cmp mov sub mov xchg cmc sbb cmp ret jns jb and push loop cmpsb out test (bad) jl xchg add mov mov lds hlt jl xchg imul jl jmp cmpsb mov sub add addr16 mov xor adc xlat inc inc (bad) (bad) aam lods jle xlat mov push scas add ds movsb dec fcom fisttpll jp mov out add jecxz in dec insl sahf push jae je int sar pop insl jo xchg mov or push lea dec xor sbb push or aaa pop add jecxz jae dec int3 mov pop dec popa mov dec stos idiv stos cld add (bad) jbe stos (bad) lods inc jo xchg or push mov inc push sub jmp inc mov xchg call repnz rclb push sbb add sbb adc mov xchg jl pusha xor sub push lock frstor int xor sub mov idiv (bad) mov pop sbbb push add xchg jbe mov add sbb test push out or push jb fimull daa adc jbe mov sub roll cmc ds loop push xchg push inc jns mov push jg fdivp xor jne xchg test ljmp mov dec add (bad) dec ret xor daa mov lret cli imul (bad) movsb outsl jge add push fnop lret pop cmp add adc imul in mov lret (bad) fldt in lahf adc out ret push cli jnp or push and addr16 cli fnstcw xchg dec test in std jmp lcall cwtl arpl mov jge pop pop iret pop lcall inc popa mov sbb mov jp or call jl sarb sub out dec sahf sbb xchg add in mov cmp pop je (bad) adc hlt cmp std dec sbb imul cmp mov aas popa hlt push fistp or sbb (bad) sbb lods mov (bad) lea test mov mov repz inc mov pop xor cmp add cwtl xor jl add test adc pop and xorl sbb orl xor push mov jg bound jno loope jecxz xchg outsl mov (bad) bound movsl int stos jmp movsb inc jg jecxz ds or loope leave cmp hlt (bad) mov jmp stc hlt cwtl pushf mov (bad) in add cmp fnsaves dec pop shrb and and pop cmp cmp push sbb xchg stos jecxz pop or sub mov push inc jg adc leave push and or add pop pop dec lahf das dec cmc bound jnp ret inc push mov xorl pop jnp push jl inc push outsb dec cwtl fwait add pop fistpll inc mov shrb inc nop jle out fcom push imul ds iret std sbb or add gs (bad) fldl mulb push repnz nop or aas mov push in (bad) mov mov pushf sub xchg fisttpll jl sbb cmp adc mov jge arpl mov data16 push adc xor xchg mov lret and test mov pop loop xchg rolb nop (bad) call xchg ja and jl (bad) ljmp and leave xor jl xor mov or js push js test push test bound push sbb mov or addl sbb (bad) in int3 out loop outsl in jns cltd (bad) push jo nop rolb sbb test mov or loop movsb lahf in adc cmp xor stos insl mov add inc call sub cmp dec dec add push adc rorb hlt ffreep stos push dec or mov aam sti fsubrs dec jo divl push int in jg jle jo inc push loope sbb test pop fcmovu int mov sub pop imul mov fwait cmp rclb mov pusha comiss loop mov mov sbb push movsb pop xchg mov push adc pop inc dec push ds jl orl pop aam es sub or mov int inc adc ret sbb lret or (bad) push mov mov popf (bad) ds adc or rolb dec int pop loopne sub mov jge mov out or in xor jbe mov stos (bad) in sbb (bad) fiaddl xchg adc push loope dec or in adcl int (bad) xor fidivl dec mov push (bad) push xor sbb int3 sti imul xchg pusha mov add lds arpl and cmp push sub addr16 inc and push mov dec and xor stc pop jp lds add push sbb insl imul cmp ret fnstenv mov cmp in clc in and xor xor pop pop mov push rcr sbb fwait pop (bad) aaa cmp mov outsb lret (bad) cwtl cmp cli es icebp xor cmp push out mov push (bad) pushf in jle xor stos test sub sbbb dec pop scas enter call int3 sub push mov jne (bad) jb push dec pop mov int inc scas loopne adc dec xchg out and jge jnp sar in xchg imul and sbb jmp sbb ss add xor mov sbb fwait jge jecxz mov fcoms cmp cmp sub fldt rcrb es mov push loopne push jmp xchg in lahf cmp outsb in aaa sub adc sub jg xchg mov (bad) push mov push dec xchg fsubl call mov jecxz push outsl pop test repnz mov call scas int in es das (bad) das and das les jns out or jne push aam pop xchg xchg add lret dec rcrb jp mov fnstcw lods idiv popa (bad) jl addr16 in mov int3 stos inc fwait in mov or das sti xchg out fcomi (bad) cmp cmp daa lods jb mov or fwait or gs cltd aas int inc mov sbb pop out mov std sub in sub jg dec (bad) jbe outsl jno mov cwtl and mov test mov lock xlat dec lea aad jnp jge sub scas in push or jns jmp data16 imul sub push xchg mov ljmp cltd jae dec and pop xor es dec jo lret pop sub nop lds push int3 loop rol (bad) pop mov dec outsl cld lahf outsl push cmp sub repz or mov aas or jnp lahf push out jo popf mov push loope or sbb scas bound fisttp fcompl sarl cmp sbb and ljmp xor xor xchg jbe adc pop push pop cs test mov insl jecxz cmc (bad) mov or shlb pusha push je subl (bad) cli jmp cli shrb scas mov std push mov loopne sbb bound inc mov xor ret test pushf je add aam and sbb xor mov mov inc xor mov push or (bad) (bad) ss jecxz add (bad) in mov adc cmc inc xchg decb push nop (bad) cwtl in add sub stos mov outsl pushl lret insb out int3 push xchg rolb add mov add ss sbb movsl arpl jae or or (bad) xor pop js ja mov or adc cli subl mov xchg add xchg je lret out pop arpl inc lds rolb sub rcr mov inc scas mov ss aad xor push pushf xchg add pmuludq loope sahf xorl call mov in add inc mov scas and stc jo scas cld mov popf sub call into mov inc les loop movsl arpl loope sub push cmp enter pop push push mov push and jp sti and in bound enter add mov in sbb jecxz cltd leave push jb insb fstpl push xor adc push sub sub mull mov les loop add dec inc (bad) jne inc sbb aaa push mov into pop pop data16 add or notb bound jg dec and xor xlat pop mov or jl sbb insb dec pop inc cli sub mov movsl adc adc adc mov loop das mov je cli out sbb out aad pushl jl cmpsl push mov fimull popa pop aas and (bad) (bad) cmp xor lahf inc outsb push add ljmp add push movsb jg test inc sahf es std cltd jge and inc mov adc repnz fisubl aaa pusha sbbb cs hlt inc mov test xchg inc lcall jl cld add movsb xor mov or lcall pushf es pusha mov sbb cld push mov imul xor mov lds fwait push cmp lods aaa or push add sub je pop xchg aad adc shr or mov xchg dec mov mov xor (bad) js icebp rcr jbe lret lods sbb jns pop mov jne int (bad) aad movsb mov andl ret adc jl add xor mov movl lret sti bound imul mov or fisubrl shr jne mov jno lods (bad) or es cwtl sbb ds xchg andb jl jl mov sub mov sbbb sub dec adc xchg cwtl or shll push nop out cmp stos sub and cwtl pop sbb jns int3 xchg mov jmp adc daa mov mov push sbb in lds cs jbe xchg imul inc (bad) rorl lret or popa inc jnp add or xchg dec aas jg (bad) jbe sbb inc mov lret adc lea mov sbb xor pop mov aaa into sti mov mov dec aaa mov or inc mov repz scas cmp lcall orl subb dec call fwait pop push arpl lock dec or imul add pop lods mov (bad) mov jbe push pushf hlt sub adc es hlt ret add ljmp push jge inc push pop xchg data16 sahf mov (bad) jbe nop leave shr xchg dec push or mov sahf in hlt pop clc sbb jb rclb mov clc cmpl in rolb add pop push or push jge loopne mov sbb fmul mov mov and std jno cmp nop or push mov pop mov mov push or mov push mov mov loope mov addr16 jae sub pop insb xchg aam sub add mov rclb insl or adcl aas frstor cld push lret push cmc lcall cmc lods popf push fnstenv mov popfw dec cmp js jo xor sub adc mov jae mov inc mov aam pop or in sub shrl int shrb mov sub fwait leave xchg cltd ret in jbe fcmovb jo lret pop iret mov pop ljmp rolb push rorl rcrl push add fs aam pop test mov push jne inc out mov sbb mov stos ret xchg (bad) aaa aam cmp push and sbb or pop add inc jo,pt inc xchg ljmp mov imul aaa mov mov das pop xchg rcl call data16 jg dec (bad) pop lds (bad) cmpb les xchg addr16 fwait pop fstpl mov mov sbb inc push xchg lret sbb cmp rolb lods mov push gs jno push in add cli add xchg int push fwait push sbb push ret nop sbb (bad) sub aaa insl mov or leave push mov pop cmp xlat push jbe xchg mov xlat iret push push push sti mov xchg mov sbb cmp inc jle pop push frstor (bad) mov mov test (bad) ds into lea and leave pop inc movsb add fimul adcl jae xor or pop sarb jbe push inc loopne stos mov jle lock inc push pop sti test bnd icebp out jecxz push int add lods ljmp idivb or pop enter xchg mov cld (bad) imul inc cmpsl xchg sbb loope fwait ret std cmpb push or scas xchg js jne ret cmp decb lret pop xor cs fwait into lret lahf int3 sbb jns inc and and mov xorl fwait cmpsb iret (bad) out sub in (bad) popl fstpt gs es flds pop add sub mov mov cli jecxz nop inc decb ss xlat stc test mov sub push pop jno push xor divb hlt pushf aam js mov or cld fucomip push pop fwait jns sub int xchg sub push dec dec and xorl scas jmp mov jnp (bad) push adc pop push pusha push xchg das jo pusha stos (bad) mov jl jle mov sbb push mov out xor cmp loopne mov mov or sub push add inc sub add ficom ret js das hlt lret sbb or cmp dec cmp cwtl mov and fldcw adc mov jp js cmpsb mov test pop shrb dec ret cmc push inc pop mov jne dec jle mov insl test add addl sbb xor call xor push xor mov rorb lods imul and xor pop dec loopne xchg rcrl pop sub pop loop mov inc data16 xchg push (bad) add adc popa (bad) fsubs adc lret pop pop outsl jne scas xchg loopne add cmpsl addl lahf fwait or lock xor adcb sbb rep mov loope adc aaa pop dec shll jnp das inc dec (bad) cmc jp ja and and add dec mov push adc and out dec add iretw jne inc mov cmc dec mov cmp push mov hlt cli jne aaa shr sub pushf je test jle sbb mov icebp stos fisttpl mov mov sub jp dec lea jle test mov push lods mov push sbb ret outsl mov inc or in sbb xchg arpl jp arpl xchg test mov push and enter leave out in sub lods fs aad cmp loope cmp ss (bad) rorl ljmp jbe in xor nop add cs arpl jae mov addr16 or fcompl popf sub icebp std fmull cltd push stos or mov pushf stos popl dec jge push sbb and orl pop imull sbb movsb mov mov pushw (bad) (bad) (bad) add ds pop dec adc leave pop jbe into aam popf in sub mov bswap xchg adc mov xchg mov mov pop in je ret (bad) add insb notb test lret mov mov ja arpl and xchg mov or jmp (bad) jl pop sub (bad) push bound cld mov sbb jp xchg (bad) (bad) mov shrl mov pushf jo and and inc sbb int push push rolb and nop insl ret int3 lret and or pop and (bad) adc and mov cmpl (bad) mov sbb jbe popf out in test leave fnstsw sbbl mov das inc adcb mov std jmp xor bound push sub push in mov aam jno int3 in aaa div outsb sub xchg and fwait daa mov nop cmp sbb push and dec cld cmp jbe ret sub ljmp or outsb xchg and daa cmp sbb or test fs sub mov adc push pop pop test xchg push fs (bad) cmpsl lock jle das push popa mov inc (bad) pop mov mov cmp mov ja or aam lds loope (bad) jbe cmp sbb cmp fnsave mov prefetch add pop push add push xlat in adc mov iret decb adc adc or mov jbe jg (bad) add lods aas mov or aam pop xlat cli add repz out push mov out test inc mov cmp push xchg mov mov jnp nop ss fnstenv lock mov inc mov adc ss jmp je jmp shll sbb cmp std cmc (bad) push push push imul adc mov sahf dec or cmp jge ficomp lahf xchg je xchg in pop xor mov xor mov sbb rcrl int inc daa arpl popl ffreep pushl mov add movsl sahf mov das loop add out dec lods or iret dec adc jno push addr16 aam push lds mov and inc bound lock push add mov shll imul dec jbe cmp cmp pushf cmp movsb xchg add jbe jns or lret or mov adc lret add ljmp addr16 in imul sub fs push pushf and aas xchg nop push mov popa or dec or shr sbb add sbb int3 jae cmp (bad) and fisub push ret pushf movsb lods iret gs inc (bad) rorb lock scas inc add lcall jge inc aaa xchg mov dec adc fstpl lcall pop ja add sbb jb mov jo mov cmpsl push (bad) jb mov or and int mov jecxz or icebp jge mov inc jle jne dec dec rcrl lea sbb push dec popf sub call add icebp and pop cwtl pop movsb cbtw pop pushf mov push push sbb inc push jnp inc jne mov cmp push dec iret ret lret xor inc xor stos faddl aam xchg jmp cli in xchg (bad) xor in lahf pop (bad) dec mov mov in lock lods xchg and cld jne and pop mov addl dec xor mov movsl ss ss imul add jmp (bad) jae jg lock mov jnp lret lds add add dec test test cmp test inc sub adc fadd mov ret cmpb jno xchg bnd dec add xor push add xor int (bad) mov cmpb shr sub arpl adc fsubrs push (bad) sbb push ds pop test push in jnp int iret pop jl mov cmpsl mov mov ret in out lock iret sahf sbb je insb in mov jbe sub and pop addr16 and push test xchg pop xchg gs outsb nop xchg jle (bad) repnz pop ja and mov inc (bad) and sbb push add test repz out js add movsb stos movsb aam aaa aam mov aas hlt fldl clc (bad) push inc jg inc pop (bad) repnz sti xchg insl (bad) das mov pop pop push lods data16 push fwait xor add out pop pop jbe lds pop mov cmpb mov push mov fcom lock or in or adc pop sti or in jo sub adc repz push decl out lock test bndldx cmp or jo repz or aam (bad) cmpsl (bad) lds pop or pop ret dec push cltd lahf push stos sub mov movsb nop inc fbstp pushl scas cmp sbb int pop inc sbb leave mov and ret repnz pushl sbb mov leave push jno cli xchg or jno xor outsl aas mov add insl fisttp icebp test mov dec jle inc mov adc dec insb orl xor jmp mov (bad) sbb jae adc sbb pushf mov js sbb mov xor mov mov nop call ss cmp sbb movsl int jnp push call pop sub ja mov and aam mov xor test xchg leave test dec and mov enter out mov mov icebp pop lds lret xor inc push andb sahf insb and add ret pop pop or fadds mov shlb or jle xchg cs fdivrs pop shrb cmp mov xor pop cvtps2pi rcrb clc mov or xchg aad inc push nop je clc (bad) (bad) xchg inc aam in nop shrl xlat push mov (bad) enter jg or or xchg push and mov dec xchg (bad) mov mov pop mov imul mov add mov pop xor and shrl cmp sub push pop out pop add daa movsl fldenv aam jg lea and mov ret jne inc (bad) mov cli push xor xor (bad) jmp mov enter sbbb cmpsb cld sub cmp stos jp out loopne insb sub jp jg test icebp xor shrl adc ret xchg movsl fsubrl aad xor push (bad) xor cmp and daa pushf pop and dec pushw pop add insl xchg cmpsb cltd leave xor jb aad cmp and rcrb test (bad) or out lods mov sbb sub push xor pusha jmp sahf loopne xor pop arpl cwtl aam test inc mov ret sub and push negb xor cmp js mov jb (bad) jns xor or test imul fbld scas lret or push test repz or std mov enter pop lds and push adc sub inc mov popa mov mov mov cmp sbb insl pusha insb cmp sub leave xorb sbb mov dec repz icebp jecxz mov aas cltd jnp inc (bad) push pusha push jae outsl lcall shrb mov or mov shrl or lahf in sar test add xchg repz xchg or mov and cmpsb pop xchg les mov or std jl lcall cwtl xlat mov cs xchg rolb pop shrb (bad) out outsb leave mov shrl in sub fcoml add in aad adc cs js roll sbbl fwait call push fisttpll sub mov push int3 xlat rcll aad sbb xchg dec push sbb jo adc or and sbb aad sub fwait xchg dec mov lret jl add jo gs (bad) mov xorb jge or sbb outsb jne add add mov sti test lret or test push jp enter push mov dec jp (bad) mov leave mov cmpsl je popa dec sub add cmpsl je movsb push das stc cmp jne add or xor ljmp popa xchg xor or and dec pop aaa dec fsts xchg jmp or std sbb inc (bad) cmp mov adc addb jae pop loop jmp push push sbb mov or pop jae js int or inc mov (bad) movsb (bad) in mov adc jle mov xchg roll sub sahf (bad) stos daa xchg jmp in mov mov cmp xor fidivr enter sbb rorb aam sub (bad) lcall (bad) loopne movsb lret mov mulb jb mov test xchg or xchg (bad) lret jnp aas ja arpl jp arpl sub nop cmp cwtl push in movl sbb mov xor ljmp mov sbb sbb subl mov cmp sahf adc hlt and jg,pt push pop mov sub dec pusha aad adc mul std lds aad mov sub add mov or ljmp pop stos push inc stc ds jge mov test daa pop dec add dec lds jge fadd sti push lods out lds rclb add add cmc aad js cmp out int mov mov mov pop mov xor mov hlt jae es test inc lahf xlat add xchg fnsave int sar clc fdivl outsl xchg inc pop fdivrl or sahf sub test shr sub cmp pop hlt shrb arpl dec iret jle xor fidivrl mov inc stc inc or out aaa aaa jge leave or ret cmpsl mov int3 sub sbb movsl xor xchg xor fisttp or les ljmp movsb fdivl lea or push sbb mov sbb jns mov lods cld and call outsl xchg addl xor cmp nop jns loopne dec push xor aaa bswap jnp lock add pop and xchg (bad) loop pop cmpsl rclb dec sbb (bad) jbe data16 cmp repz pop stos add ljmp aad or sbb add adc (bad) je das fnsave push cmp fwait stos add clc test pop andb pop out inc adc in pop xchg int lret je mov fistpll test dec (bad) mov cld addb dec bound idivl sahf in sbbl inc lcall fcomp test arpl jmp xchg in (bad) jbe adc fcompl xor sbb mov xchg mov xchg lock jb std or push cltd lock lods and outsl shrb mov pushf fnstenv jo add mov mov insl mov push mov out loop pop dec jmp xchg cmp mov sbb stos scas add dec cmp enter push mov ret loopne enter cmp push inc stos pop scas mov add ret rcrl movb xchg and iret mov pop mov push dec dec jb or (bad) loop imul into xor add push jle lods add sahf repnz (bad) pop or xchg sub or sbb or mov (bad) sub xchg and insb or jnp adc cli xor push ljmp enter push xchg bound addr16 pop pop xchg xor and (bad) mov and leave mov push out stc sti dec daa jle pop orl int in dec push or add fsubr movb (bad) in or or mov pop ss lret mov imul lret jl dec inc add adc mov gs mov stos inc jbe xchg fwait sbb mov add subb int3 pop pop arpl outsw (bad) push adc std sbb sbb mov test shll dec cli mov jne ret add sub rclb add stos aas hlt cmp adc ljmpw lret mov js pop (bad) sarb sub cld adc fwait pop dec xchg push dec jg add in cmp mov push leave rorb outsb add scas add test loope test (bad) (bad) sahf test xor sbb ljmp mov lds leave push cmp lock cmc lret ret sub inc sti push mov rorl sub fwait mov shrb cmpsb sub xchg movsb jbe add mov sbb ljmp int ficompl hlt (bad) pop inc (bad) and lret inc shr cmp push or (bad) ljmp inc sub nop pop sub sub lods mov enter dec xor (bad) movsl xor add mov fnstenv js mov jo test sbb outsb cltd ljmp add popa jle add cmc mov ret test mov mov cmp mov ret push movsl dec push dec dec insl pop in cmp inc pop mov out jo out jecxz pop push ret je in fmull lahf mov jle pop out push push xchg and mov in fs xchg in mov or in sbb mov mov sbb mov outsl das add aam dec push jg in dec inc cmpb out jbe cmp cmp or aam pusha ror push fldcw loop jb xchg lret lret mov adc or or das test shlb (bad) cmc in or leave mov stos xor sub sbb and (bad) loopne das sbb aad jp nop in or inc jb mov add adc int xchg pop or std cmp imul inc add movsl sbbb jns mov pop inc and jmp nop icebp clc loope push sbb or mov mov or xor push lahf mov pop mov push xor insl or mov mov repz scas dec pop lds stc jno in jno in hlt movsb loop mov movsl cmp dec cmp push or (bad) jo ja push je jns cmp jmp adc or stos sbb and sbb imul fwait jle scas pushf fild aam enter mov lock (bad) jne jb xchg gs jmp test adc inc stos std jb aam mov xor test insl mov jbe or cmp push idivb or cmpsl push jno add test fmuls or jl jge push xor movsb mov es stos aas pop lcall add inc inc mov cmp pop jbe xchg cmp pop fisubl sbb add cmp std clc imul mov cs xor ss mov xor dec sbbb push dec mov push sbb xchg inc or push aam (bad) jecxz adc mov shrb nop testl or jb or aam or aad test cs popf (bad) jo repnz jp adcb ret sbb jne and inc fninit lea dec add or or jb mov imulb add inc hlt cmp data16 lahf call lahf push test sbb je dec pop add sar jo xor addb and ret test cmp sbb dec das adc mov (bad) aad or sbb pop les dec mov nop fst std sub or jae and movsb add or (bad) jge rclb xor jg mov outsl mov inc mov mov cld lds jg dec lcall (bad) data16 insb pusha jbe pop mov mov daa jg or ljmp loopne stos ret sbb jnp adc in pop mov shlb cmp sub imul stos xchg (bad) lahf xlat rclb test sbb and sub out sub or or dec inc sub pop or lret add stc push fwait push fsts adc aad adc fwait hlt sahf mov (bad) icebp cmp add stos int dec cmp xor clc (bad) imul jl add mov inc enter cltd dec jnp pop dec push push test rorb xchg je jmp clc aaa insl pop (bad) lock (bad) sbb sbb xor and int3 jbe ss stos cmp and leave in xor and fisubl popa mov pop jmp scas call pop idivb sbb mov je mov mov xchg out pop scas inc sbb lahf xchg or call repnz push leave fistp movsb imul imul fwait inc cmp out mov jle dec mov cs aad idivb nop mov cmp sbb mov dec cmp pop andb or sub inc inc push jns fbld or mov (bad) xor mov pusha mov adc out cmpsl push test hlt xor fcomp call fwait pop push xor gs scas cmp lock pop xlat lock fbld (bad) (bad) cmp daa xor (bad) jno add insl adc sub cltd mov or jns jnp shr jae test cmp pop mov std pusha insb xchg sbbl and add or movsb mov jle or push lcall lods push push mov fnstcw pop loope repnz xchg lahf xor jp jge and (bad) es adc jle ljmp out pusha cmp loop sbb mov insl jbe mov popa in cmp jge jl loopne push adc mov pop adc xor sub push test cmp into lret aas ljmp mov and enter adc loopne pop nop cmpsb fmull xchg adc sbb test inc and mov test dec (bad) jbe hlt cmp dec dec or and pop mov sub jo cmp sub mov and insl inc stos xchg mov enterw outsb idivb add in mov adc pusha ljmp das adc pop cmp shrb addl adc jns hlt stc testb (bad) mov add cmp mov xor adc lds lahf fisubl fdecstp daa mov cmpsl out ror ja daa mov imul cmc fwait pushf or shrl cmpsl add jge fisttpll cmp test rcrl in mov or js std pop nop xchg movsb in mov out and insb hlt pop aad adc ficompl or pop in xchg les cwtl push imul and or lock mov dec jp xlat fsts in jnp mov dec push jg outsl cmp rcrb out add or jns sbb sub mov sub dec sbb mov or xchg sti xchg or adc imul inc imul ss roll insb xor ja xchg jmp cmp sub cmp cwtl movsb sarl bound iret shlb xchg lcall add jo xchg stos adc mov mov aam cmp bound jo mov test push mov ficompl xchg (bad) adc es xchg lea sbbb in mov inc pusha movsb (bad) push lods and popa rcl pop negl and dec mov jbe inc cmp test jbe je,pt arpl pop (bad) adc daa xor sub cmpsl shrb add mov loope in inc mov movsb jnp sbb stos cmp adc ljmp sub mov dec dec jmp fstpl pop push adc push out push push imul cmpb push xchg in lret mov adc cld adc cmp mov or jo fs sbb pop jno mov add movsb or scas mov lods pop dec mov sbb add jnp add clc cltd or fucomp xor mov add movl sahf int adc lds arpl fbld mov sub or imul movsl cmpsb sub sub das inc and test sub xchg inc aam lcall mov imul jnp dec push std les mov pop dec test push push adc add out cmp push loop cmpsl add mov jno (bad) incb or nop fxtract fsubl sub test cmpsb xor xor stos sti enter rolb mov sub add jmp jne sbb mov mov out jo pushf inc xchg and in mov xor test sbb movsb test sub push jl jecxz push push push lret stos (bad) mov xor rcrb arpl in mov cmp mov (bad) or cmp movsb xor fcompl (bad) mov fisubl addr16 (bad) leave (bad) dec out int jp mov loope pop pop jne xchg xor das je fcmovnb test ss addr16 adc xor and insb mov xchg popa inc push fwait lods jp enter push and repnz xchg outsl test xchg lcall and popf ficomp clc lcall int lret out pop jge dec mov xchg adc std add jmp mov xor mov mov xor xor nop fs and sub sub ljmp push daa pop jle in or xchg les xchg cmp inc xchg mov shlb movsl mov ret (bad) pop fwait jne sub adc hlt push test mov dec sub inc push and cmpsb sti scas test dec push add pop fisttp (bad) (bad) mov (bad) aas inc xor adc push rcrl mov enter push (bad) lods cmp je xorb mov mov das mov lret sarl fisubl rcrb insb cli rorl popa flds das or cmp in mov jle sub std xor pop push mov outsl dec aas mov ljmp popa out out aad lea inc mov aad jge fldpi in add arpl xchg push mov lahf lods insl lock push xor pop mov sbb lcall or mov bound ss push scas stos cmpsl xchg je xchg dec pop test xor mov cmp or repnz fwait pop (bad) jne (bad) movlps and add xchg bnd adc mov popf xchg fsubl insl pop adc out xchg les jbe add sbb jmp sub aam jmp icebp pop fs add fbstp loopne outsl lods rcr sub lret and scas jge or dec xchg lea sub sbb insl (bad) sbb push lahf fdivs popa aaa jno sahf popf test fcompl (bad) rcll inc jmp mov cltd mov xor inc fucomip inc pop or in into roll mov fwait add addr16 stos negl je leave flds lods cmc pop jge xchg xchg mov lret jb push js (bad) jl das pop ret popa lods push call repz je sbb jmp sbb xor mov mov aam mov mov inc cmpsb push push in imul and xor jg data16 lock rol push pop xchg cltd (bad) stos call inc cmpsl decb and mov mov hlt rcl cmpb out pop sbb mov (bad) push movl int jge sbb xor jp rorl (bad) stos out push leave ret bound xor jmp ds adc sbb fwait (bad) adc into jnp add btc jmp push leave lret ficomp sub push imull inc repz fild mov stc test fwait push js pop lahf mov lock jle imul movsb mov cmp dec push xlat inc or mov daa ss mov addl mov nop rcrb jno mov push xor pushf popa jge mov sbb jnp in or jne inc push outsb in pushf inc rcrb pop fadd cmp in imul pusha push sbb fs jge leave imul stos cmpl and fnstcw push hlt jp mov xchg scas ret stos in addl es add xchg and jb jle mov aam lret sbb xchg int3 mov outsb mov enter xchg sbbb bsf ret lcall insl jle cmc add add cmpsb mov repz pushf mov ret (bad) and mov jmp sub cmpsb (bad) pushf adc dec clc inc jne cmpsl jg js jbe mov or imul cli sahf push nop subb jno (bad) lods sbb sbb adc (bad) cltd sbb xor (bad) add cld push lret sbb or ss popa incl dec pop or fnsave lret dec sub mov fcompl adc sbb cmp out clc fnsave and lea inc pop adc scas mov push jg dec pop or pop mov or mov in xor psubusb std jge repnz adc cltd icebp xchg pop sbb mov nop or inc xor sbb xlat imul std test ljmp int cmpsl mov movsb int pop sti test jnp jo sbb pop (bad) lods xor xchg lret fnstsw pop mov rclb mov xchg mov (bad) xor lea jae sub in add (bad) je mov clc dec stos or push test ljmp push cmp loop sbb into arpl lcall mov lods cmp xor mov in lock add in nop faddl lea dec stc and push sbb movsb std jbe pop fs or sbb in sub or ret rcrb dec mov fstps sbb aaa cmovo jg jp cltd mov adc pop insl jl mov es fdivl inc mov sub int pop (bad) xchg push std sbb add jge,pn or cltd push sbb fs adc jo gs xchg mov jge add nop jle add sbb test int sub addr16 aam dec std pop inc cmpsb add out xchg mov add jnp inc pop mov fmul add xchg push add adc jge pop mov or (bad) sbb sbb aad (bad) xchg movsl nop jb in cld mov pushf push or lret mov das ds out cmp loopne lock cmp xchg push divb xor (bad) sbb jbe cmpsl mov sbb lret xchg jnp xchg adc mov cmpsb sbb sub cltd insl sbb jle (bad) lods leave mov xor mov cmp dec out sti dec das add xchg clc pusha leave jbe mov daa lds loopne pop loopne (bad) outsl nop push js sbb pop jns lods add std fnsave cmc cmp clc mov (bad) xchg mov (bad) lret popf adc push in jae dec out stos mov push cmpsb insb mov dec pop lods ds test jg lret xor mov and push aas adc jne (bad) sbb psubsb and fcomps imul add cltd psubb int lret jb (bad) movsb xchg mov cld lds dec xor cld mov les popf andb pop scas and (bad) lock sbb inc (bad) adc popl xchg jo scas lock mov jmp mov xor lds jle es mov sti jmp outsl jno cmp inc mov int3 sbb adc sub mov fucomi jle jns mov mov jb xor (bad) aad pusha divl movsb out push loopne aas fdivl pop mov sbb add bound dec (bad) jns flds pushf inc xchg sbb ss pusha shrl mov ds lods mov add sub icebp sti repnz cmp (bad) sbb (bad) or lods jae fwait push mov dec mov out pop cltd inc jg int3 lret add fs daa aad xchg clc mov ret and xor repnz mov mov dec jns icebp (bad) test mov jge mov mov sbb pop or hlt xor jae sbb insl in pop shrl imul add ficomp and in pushf mov mov insl cld cmpl jne xor mov adc fistpl xor shrb xchg jo push xor add adc int sbb lea cmp pushf nop and add je test add std loope jne call xlat fist mov test and xlat mov cmp add lahf add int push push daa ss jae shlb mov stos dec sti push adc fwait popw mov orb jnp pop pop jns fcmovne popa sbb xchg cltd mov dec jnp in xor cmp cli cmpsb data16 fldenv out mov pop fist jp arpl cli xor popa pop or out xchg inc pushf mov dec pop cmpsl int3 mov pop dec inc cltd sbb mov imul ret loop sub in push jl (bad) or mov clc fs cmc out fadd xchg push inc call sbb lds jecxz push mov bsf call decb rol aam mov lock pop xorb lahf test sub bound or cli fucom pop mov lret sahf pushf sbb jmp ljmp sarb sbb cltd or cs pop mov mov pushf es scas stos jmp gs (bad) stos incl movsl mov fiaddl pop sub dec out mov stc lods jle xchg hlt clc call xor pop das lret (bad) sub clc out pop fbstp fldenv sarl fbld repz test jbe jge fisub xor in push cmc xor adc cmp iret dec sbb in pushf shlb and fimul sarl je loopne cld mov popf push in sbb mov mov xlat adc inc pushf sbb lret popf dec shlb stos nop or insl add mov aad ljmp std int pushf cltd lea stos pushf mov gs int pop lock dec mov repz mov test lds in lods sub aaa lods cwtl lahf and sub xchg add into fsubrp push stos imul or mov pop xor cld cmc mov pop xor jno jae dec or mov (bad) lds fwait inc add mov mov inc xchg mov lret imul fcmovb mov cltd or fs sbb sbb or mov mov lods sbb xchg movsb fidivl jne popa addl mov test negl dec loop mov inc loop jg mov pushf push pop ret lret sysenter lods cwtl stos adc (bad) pusha imul cli test dec daa in fwait mov and mov cmpsb xor push cmpsl xor push jno push out paddusb lods cmp jbe stos cmpsb or daa pop lock test sbb add push std adc test (bad) dec cmp cmp fsubp loope jb jo mov sarl lea movsb pop xchg enter or scas mov lds cmp jmp cmp add imul mov mov jg nop in stos add stc add pop push jp aad sbb push mov cmp clc sbb mov or pop sbb adc enter loopne or fsubl dec imul mov loop roll fs out outsb adc leave insb test mov test (bad) into int sub jno addr16 jo xchg pop dec add pop jmp mov pushf dec imul js aam or stos jecxz ret repnz in sbb add out insb dec pop push mov nop mov mov cli test add dec xchg mov rclb (bad) jg sub cmp sub jmp cmp nopl inc pop dec dec outsl or xchg push sub daa or shrl imul loope push ret std andb add fcomi and or stos cli jl push pushf sbb lds pushf inc lea pop lods mov xor mov and iret lahf fmull mov lock sub sub jge mov sub mov addb insb lods dec sub pop (bad) sbb jp lea or outsl int inc pop jge fisttpl jp hlt add inc outsl hlt fisubl pop cmp mov insb kmovw pushf jge mov jp ret (bad) xor inc jge (bad) (bad) jle and jbe enter pop xchg jg push mov (bad) add bound jns hlt mov and rolb add scas xor es stos sbb loop jmp (bad) into ret bound xchg add iret (bad) nop mov out pop ss cltd lret mov inc jbe push clc push xor jmp pop and xchg fisubl in and and fdiv pop pusha cmp or in jae inc lahf aas shll inc popf pushf ror lods jne test or add add cmp dec aad jge sbb les je sbb sbb cwtl dec fwait jbe cmp push shl fildll inc insb ficomp ljmp iret jne loopne stc sbb fcompl pop and nop jae ljmp aaa stc xor ficom cmpsl lcall mov outsb fnop hlt repz push mov sbbl or lock mov into mull xor jbe mov inc repz lret push or dec lock mov and popfw cmp inc lea incl pop mov jecxz scas and and jo imul or ficom inc testl xor inc repnz mov jle sbb es movsb and aam scas cltd cmpsl js mov ss mov sbb sub cmpsb xchg lods mov lock js cmpb iret dec shl add adcl arpl push mov mulb push mov xor pop insl popf cli lds jl mov cltd in jne add in arpl and js mov cli cmp in jbe mov imul dec dec inc dec pop jl fs jb iret loope test and test das in gs or outsl movsb pushf outsb fsubp hlt cli adc push outsb psllq inc pop adc clc dec mov mov int mov xchg sbb mov mov dec add clc xor popa ficompl fwait mov xchg imul ja pop pushf cmpsb add in mov cmp sbb outsl insb fild movsb mov dec (bad) mov leave aam or or push jns sarl adc pop jbe jns shr adc add mov mov lahf push mov lahf mov (bad) je mov sbb add or mov je jl shrb cmp jns lods pop cmp in and stc pop dec lock (bad) mov les dec or xchg push shrl and jmp add dec mov (bad) sub movsb aas loop push ds adc jbe sub push inc sub (bad) (bad) jae int out mov repz sarb out adc lret pop push adc jle mov mov mov pop (bad) pop je xorl or outsl xlat xor inc jp jmp xchg outsl lock ljmp mov lcall sbbl and or mov js jb dec cmc mov (bad) push push add mov call fsubrs push sbb movsl rcrl sbb sbb das out mov aas pop and and daa and aam cld add adc cmp or test pop pop cmp addr16 mov mov shrb movsb lock pop pusha rorb mov cltd out rorl lods cmp (bad) (bad) cmc in jb pop shrb xor xor rcrb xchg jns mov mov push xor dec mov inc lret mov xchg cmp outsl frstor xor xchg push cmp pop dec xor lock insb stos sbb cmc push pop pop imul aad fidivr push xchg mov mov (bad) mov fyl2x cmp stos int3 addr16 cli (bad) cmp cmp jge or dec adc inc fldcw sub lock dec cmpsl jo aad fdivr insl or movsb jae jmp pusha adc (bad) ss or mov je mov clc setne jp dec xor ds or inc sbbl in js dec aad push adc stos andb push inc data16 xchg leave or jbe adc (bad) lods mov lods loope sbb sub pushf scas clc sub jb push jl pop sub into sub cmpsl repz lahf cmp (bad) jecxz xchg ret ljmp mov jnp pop nop loopne inc and nop (bad) lret mov in aas in arpl mov xchg jns push xchg jne xor inc je pop inc or adcl jl,pn add and add (bad) imul sbb cmp push xchg xchg jmp pop scas imul je or das scas inc inc out jle or popf jg cmp (bad) cmp mov loope repz sbb sahf loopne lcall mov incl inc adcb jbe lret inc sbb xchg test sbb (bad) sub mov xchg (bad) xor or cmp in (bad) xor jl cld jns adc mov and lahf jbe mov xchg push jbe fimull mov scas pop cmp sbb add hlt cld mov sbb movsb jmp xor add jbe adc pop xchg jno push cmpsl pop mov dec lcall sbb mov out add cmp aas or pop jnp stc rcrl jl add pop dec xchg sbb popf out or ret outsb add xchg push jle fdivr cmpsb pusha (bad) rep push xchg ret (bad) jne cmc mov decl jmp and (bad) push (bad) lea imul cli pushf push xchg jle push cmp fwait inc jmp rorb add xor sub push fdivl clc std jae cli lods cwtl xor addr16 lret popf cld pop and jg push data16 mov push cmp adc int3 dec in aad ljmp in (bad) jne (bad) aas imul mov jmp pushf pop xchg leave nop pop push inc jno clc mov in sbb loop mov inc pop jmp mov gs jae or and jge push sbb push das add pop fwait sub arpl xor push pushf or jecxz insl addr16 sub push call xor popf das (bad) jo jo fistpll test dec lahf xchg rcr sbb cmp in das push or inc adc dec cmp je pop xchg mov test in mov movsb inc popf data16 jg nop mov das imul sbb insb fistp pop ja sub jae xor pop gs xchg jmp leave pop mov sub adcl sbb push pop push nop push scas sbb pop outsb insl lret das in cmpsb mov fild mov rol adc dec jne repz ret mov popa fmuls sub int data16 push xor pop and sbb xchg loope adc add cs xor or je leave inc and mov scas dec push orl sub lret pop xor push (bad) jb in js clc push je lock xor cmp mov mov loop jne adc mov inc inc ret or pop or mov imul xlat jl push ffreep int3 fbld push je push shlb xor sbb (bad) jmp pop jns subb movups nop mov insl adc sbb pop and mov mov mov addl pop rcl je int and or adc lds cltd xor sbb outsb idivl dec xlat in push imul jns test mov xor addl hlt (bad) lret ss xchg xchg (bad) out call cmp jo (bad) mov add or dec (bad) fwait repnz pop pop lahf sarl testl mov std loopne pop aad bound or mov ss cmp out mov push mov jmp add hlt test jne push das jg (bad) test adc inc push clc dec sub or sbb movsb stos sahf xchg sub cmp lsl test popl fwait rcrl test pushf (bad) arpl and std repnz jge popf insl ss xor scas mov push mov cmp jmp (bad) jg dec mov pop sub cmpsb xor or ffreep mov mov push xchg sbb mov pop decb jmp popf cmc cmp jge cs (bad) aaa sbb lods dec stos data16 (bad) ljmp pusha push xlat mov ljmp loopne imull roll test notb or pushf jbe inc jbe pop cmp sub xchg mov in shlb mov or in mov test es dec in xchg in cmp mov jns sahf lds inc lods mov inc sahf insl lcall mov or int push shrb sahf push adc push cmpl outsb pop lods repnz sub movsb dec jmp aam push fsub xchg xor aas orl or mov mov and sbb pop mov mov out pushl inc les stc mov adc pop sub rcrl pop mov js add lds in sahf lock notb sbb mov test mov sti xor cs cmc loope insl jl pusha ljmp or in shll popa aas ljmp sbb test rol and mov es jmp loopne push insb inc cmp dec push and or iret jo and cld bound mov cmp jp mov in scas gs mov pusha gs pop leave movsb in mov jb sub fs jb or jno dec stos adc mov lret and int3 pop sub mov jo in xchg je rolb add dec xor ret das shrl inc (bad) cltd dec mov pusha sub push jmp or jnp mov mov xchg leave pop push pop sub sbb in add ds mov inc push push popa (bad) push cmpsl fmuls mov mov addr16 out sbb mov adc dec push popf movsb add jg push jb outsb sbb cli xor cmp pop in adc and or push push bound cltd dec dec call hlt or rcl push fwait jmp leave lds inc jbe pop mov mov aam loopne jmp or xchg mov pop add pop jns xorb add add mov push sbb dec jb sub add mov mov cli xlat dec daa mov fwait iret (bad) icebp fwait sub jno mov lcall arpl inc lret mov xor xor aas inc in cmpsb adc pop mov ret mov ss fwait shll daa fs stos mul pop xor sbb cmp jp andl popf adc mov mov scas daa lret and pop cli lea les sub inc mov fwait pop imulb adc fstl add int movsb and lods clc inc adc (bad) mov call scas lds movhps shrl sti push loopne cmc fbstp or xchg test outsl push adc aad pusha xor inc daa (bad) dec xchg loopne dec aad adc stc sub xchg jecxz jne mov jmp mov mov iret cmp fldt mov andb push shlb inc cmpb lods mov enter jo aaa sub push mov iret inc push out cwtl lret popf jno fwait or int add add (bad) adc fstps dec xor addr16 cltd insl loop and mov aam or nop fwait mov loope ret sbb repnz pop sub stos in mov andl xor or jp cmc add adc rolb mov adc mov dec popa ret sbb fcomps jo pushf outsl mov or in adc test mov out flds ljmp sub mov adc das js mov repnz push xchg sbb or rcrb insl jbe xlat dec fild dec inc cmc aaa jo pop dec pavgw fdivrs jp popa fwait sbbb fstpl negl sbb mov test andnps in xor push pushf jle and push stos dec sbb fcompl loop mov or out pushf ss cmpsl xchg imul testb inc pop scas push adc add and std sbb (bad) mov in push mov mov pushf add test lret jo inc mov sub lret movsb xchg pop mov adc mov ss mov and mov push out sub in mov mov add inc mov xchg (bad) xchg je orl jmp cltd das je inc mov mov aad and push mov or sbb ficoml aad pop add push inc inc sub out sti fwait loop cltd xchg (bad) jp outsl inc std jb jnp sbb mul std (bad) pop adc adcl (bad) adc imul shll pushf cmp call ret sub or sti push movsb leave adc mov (bad) mov mov mov xor in mov mov inc je repz or mov dec mov or xor sub xor imul dec andb pushf iret mov jge sbb mov pop fsts sbb popf sub pop sti dec mov pop lcall fcmovb mov sar lret add push dec push repz xor mov inc (bad) outsl lahf outsl popf mov pop fsubrs cmp lods ret sub mov lock jo xchg mov pop rclb inc mov scas in sub push push inc andl lock mov ss xchg xor pushf aad push jb in mull cmp dec mov mov (bad) cmc std cmp mov jne mov mov (bad) fimull out jmp push fcmovnu iret fistpll or inc xchg cmc pushf pushf ds push pusha dec decl mov mov xchg sbb pusha fwait add add pop mov dec out ds pop insl mov sbb js lret sub or sbb andl push test sub mov inc mov shll adc add sbb aaa jb xorl or or (bad) push adc or lret leave je pop mov and imul movsb cmpsl sti addr16 cmpsb push call lock dec mov inc stos sbb or xor nop test (bad) aaa scas mov test insl jge idiv jno mov add les push stos add loope rolb mov jae pop mov or jbe daa push xor sarb dec jo leave aad cmp jbe,pn dec add pop (bad) and in jo andl daa mov nop jnp push push or dec js repz mov clc xor enter push cltd dec jp lods add sarl sbb rorb repz sbbl push mov jl outsl xchg dec enter mov or lret add repz jg pop mov and sbb int (bad) xchg (bad) jb mov sti or rorl iret mov jnp pop lret fwait rclb insl rol popf int lods adc or sbbb inc jmp dec pop addr16 (bad) xor fsubr sti ds sbb push add cltd cmpsl xor fdivrl cmp aaa (bad) mov ja daa sbb scas lds add mov fsubrl or (bad) sbb insl ret in lods lds loop lea push cltd mov or add add add adc (bad) adc adc movsl or aas jmp xor cwtl jnp or mov negb push cmp add into dec xor inc in inc sahf mov popf add mov cwtl mov jno xorb (bad) push ret add dec inc sarl pusha arpl pop aam push daa test mov incl xchg inc mov push sbb dec in mov (bad) cmpsl xor imul add sbb lret pop gs xor or aaa push pop push fsubrl mov mov inc xchg jg sub push jmp cmpl and int iret mov mov mov add les std orb push leave test lock inc in mov xchg bound lock cmp pop jno cmpb call hlt ljmp fs cltd or xchg cmp xchg pop xor mov push and add repz pop jbe mov fwait (bad) out (bad) insl (bad) negl repz mov outsl cmp mov lea pushf cmp loope in (bad) movsl test jo dec testb imul mov adc loopne sbb jo leave das push aas xor out push and pop lea out stos push mov jo andl movsl sbb out push dec ret je xchg stc test mov mov adcl pop outsb pusha xor jb lods in cmpsb bound add mov bound sti pop mov (bad) icebp je divb hlt sbb notb mov adc jp scas mov cmp nop mov lods sub dec cmpsb outsl jnp cmp je (bad) js inc and or sub lret adc sbb movsl sub int bound mov push nop xor or test mov imul ljmp mov imul xchg subb test push and sbb cwtl xchg or add sarb sti js (bad) clc (bad) sbb and xor das aam and in mov in xor jg adc imulb xor out inc scas mov sub in pop mov or stc out jl (bad) or sbb mov mov inc adc inc or test and aam sahf (bad) pop sbb push dec jle jnp add jg test in in inc sbb lods outsb repz pop enter dec or jns sahf push add mov cmp mov push lds pushf jb sti aas in aad insl mov adc outsb jmp cmp dec cmp aas xlat imul xchg test fistpl in push hlt cmpsl or sarb in das dec mov ret jl inc hlt out (bad) leave push pushf (bad) or ret inc jne xchg dec lods out mov xchg jno adcl movsb ss jno push mov pop movsb lods ret aaa and (bad) repnz sbb sbb shlb adc inc jo mov mov sbb insl icebp cmp stos or insb pop cmp lret and adc adc sarl inc adc jae je mov mov lods sub ret or push jnp mov cmp sete jnp mov pop jge cmp shlb ret in jb ret cmp pop jnp shlb (bad) leave mov sbb imul pop mov mov or pop xchg xor sti sbb add dec and lret add mov mov sub leave mov adc sbb insl mov in jnp push inc mov mov lds cwtl dec es inc xchg push or jp adc inc and pusha jg pop fadds and mov pusha gs insb insl mov inc or loopne out movsb mov pushf mov push pop imul out pop sub cmc or int enter ret add (bad) pop jbe ss xor dec (bad) (bad) xlat pusha xlat or ret push xlat dec (bad) or xor arpl sbb int3 add pop daa cmp push inc push mov cmpsb mov movsb pop iret jp roll mov add iret pop sub jb mov test (bad) aam inc add in and xor rep stc imul nop aaa fdiv pop dec inc inc push imul adc push jno (bad) mov loope jge push sbb jnp pop (bad) mov pop ds cli call jle data16 aam imul shrb ds adc or (bad) mov in das and adc lahf mov add nop jg daa imul dec push cs mov cmp pushf jne sbb xchg sbbb lret xchg or xlat cmp stc mov mov fwait mov data16 mov ret mov test out popa push sahf push add clc sbb sub jbe and jno inc lret add mov aaa xor leave ljmp addr16 or test in stos jl xlat sub xorb jg pop mov mov ljmp add push in fcmove sub (bad) sbb xchg xchg xor orl pusha or ljmp xchg ret loopne sub jo cmpsl cmp (bad) repz mov add mov ret mov cwtl add pop scas sti int std out sbb mov mov test push or lods fdivrl pop cmpsl add dec mov push pop int3 scas adc sbb add add ds xor je mov pop das and in aaa cwtl (bad) mov and or mov adc popf hlt test sahf fwait sar mov xchg (bad) insl add outsl jp cwtl shll leave add lds mov xor (bad) lock mov cs add cltd pop jge (bad) dec jecxz cmpsl xor xchg mov dec inc xchg stos scas in xchg and jnp or dec es fsubrl sahf insb cmp add adc add adc pop cmc add or jmp add (bad) xor or lds cmp adc dec (bad) push cmp repz das lea xor das (bad) jbe out jo push dec js xor mov lret lret sbb sbb es rorb mov sarl xchg xchg xor dec xchg sbb ret or or mov outsb sbb push add push inc flds push lods out mov inc pop je fcomps add fidivr rorl lret mov jne pop cmp pop push test add cmpsl jle jno sti push pop ljmp add hlt imul inc jp mov or leave xchg fwait mov or roll es jp movsl jl cmc xchg scas xchg (bad) rorb inc pushl dec int mov lahf clc aas movsb in pop push pop mov pop ds jne inc jnp add adc pushf inc cmp shrb dec idivl movsb outsb xacquire lea ret rclb nop bound mov sarb lahf mov jo andl pushf push stos mov dec sbb add mov lret add les push (bad) clc out mov enter (bad) jbe pop or cmp adc mov push jmp dec lods js ja pop fwait (bad) inc inc pop nop fdivs (bad) mov lea pop insl daa popa std stos mov or out (bad) aad mov xchg cmpsl push jmp mov mov cwtl add fldl mov loopne insl pop mov sbb jmp insb mov or sbb pusha aad inc mov or dec outsl xchg inc inc pushf add or arpl sub adc sub mov mov in adc outsl and push or (bad) xor mov pop or jo pop outsl jl dec sub cmp (bad) es sub xchg (bad) cmpxchg sbb xchg push addr16 imul or sbb cmpsb xchg xor mov sub ljmp adc fwait jbe inc xor jl push cltd test inc loopne lods mov rcrb jns jp cmp xchg mov xor adc jle rcl sub pop xlat (bad) iret dec adc dec shr dec ret xor loopne in cmp (bad) push cmp inc pushf jle and xlat push xchg add inc sub cmp mov testb pop mov and repz repz mov pop add add fcom daa mov aas mov sbb test add xchg or adc push test and xlat in in rol std scas push xchg ljmp xorb out pushf ss iret mov jecxz nop sub jbe pop mov mov inc enter (bad) lock into xchg sbb (bad) inc mov inc push sbb mov cmpsl push in idiv test (bad) scas pushf mov push fisttp mov adc insl push sub jge scas pop mov sahf push cmp add ret pop add movaps repnz divl bound or cmp xlat jmp sbbl gs hlt jl enter call push cmpsl je loopne std (bad) adc inc and inc stos lahf sbb add or dec pop ss adc jb xchg jle daa fwait add clc sub and jg insb cltd jl dec jl mov add scas fmulp xor push xchg out or rcll jmp movsb add mov lock push outsl push mov iret popa insb add mov icebp lock adc out or adc scas ret repz aam xorb (bad) sbb inc sbb pop sub add dec jecxz mov pushf or or std jnp pusha mov lret sbb lea imulb sbb cmp jmp lret jnp mov (bad) into jae jb cmp rolb mov mov fsts (bad) mov fidiv mov or xchg adc nop cmp jl in sbb mov (bad) pop add xchg pushf cmp adcl sbb aad fisttp hlt push cmp add add pop (bad) xor sbb xchg adc sbb aaa test add mov jo mov (bad) xlat mov aas cmp jbe aam cltd add xor call test mov or or jo (bad) imul addr16 rcrb mov ficompl es or aam mov mov and sbb sbb mov lret or adc cmc rolb andb lds nop xchg mov sub xlat sbb and (bad) in mov add es mov int popa ja jo cmp add mov sub ljmp adc in out in lahf and (bad) out jmp mov push jp cli frstor inc sub sub mulb clc push test into outsb addr16 xchg stos mov jo adc sbb xchg inc pop data16 loopne cmpb or sub push jmp ret and fmull mov sbb icebp and or xor cmp aad in mov sbb or xchg and call add or xchg mov iret sub lcall das (bad) mov or nop push adcl pop jl aas in sti sti notb (bad) (bad) je add jle ljmp and pop cmp ja mov lods jns add or test adc mov cmp sbb cmpb or (bad) sbb movsb push fs aam gs out addl sub cli or out push mov (bad) mov cmp sti or pop lahf and out loopne jo xchg hlt cmp lds iret nop sbb pop loop dec pusha push dec cld cli add mov ljmp call sti push sar sub inc aad fwait push dec lahf jb pop adc fwait jns imul push (bad) in dec ret push pop inc ret dec adc cmp sbb std rclb test ret and or stc mov cmpsb mov shrl mov xchg dec mov fnop add enter in ljmp call sarl adc push jbe ret std or mov sbb mov cld in sbbb bound loopne or repnz xor shlb mov inc daa and mov push mov mov push dec sti cmp and or lcall sbbl pop sub call jge or push sub loop add push jbe es inc jo mov push in pop ret outsl popf pop mov iret movsl cmc mov les outsl mov xor pusha or inc lea pop and leave int3 lods outsl ret mov add xor lods push jecxz mov gs test and mov mov mov mov rorb cltd hlt and jbe (bad) fistl in repnz cmp or inc pop dec (bad) movsb and enter jo je stos add jo mov add pop sub adc adc sbb pushf ds mov pusha shrb lret imul ds xchg add pusha pop jge fstpt push (bad) cmpsb sub mov icebp imul add int mov ret and int rcl sbb mov mov adcl mov cmp xchg fwait dec fs jns js les or mov in jo jb in adc bound mov sbb inc inc cs ja shl roll or jb (bad) arpl movsl adc lcall cld fwait xor loopne dec in aaa lock inc jb cmp subl mov and loopne inc int sbb and jbe inc inc mov dec push mov xor pop sub popf fs mov push ret lahf adc dec jne mov push ds cmpsl pop insl outsb js sub jo and outsb (bad) fwait aam dec lahf jmp (bad) xor loop fisttpl dec int fcompl xor inc push int3 xor out pop lahf (bad) and js inc mov inc adc out leave das pop jg jle inc js movsl jne and pop test in jmp fmul rolb insl into jne sbb fstl inc aas xor rcrb mov ss jle jb into int3 sbb push das sub push adc sbb test mov rcll mov cmp add add add jbe aad mov sahf push push iret sahf fwait add imul (bad) mov add adc cld das es enter cmp iret mov mov rorb hlt add rorl sub rol lcall cmp cmp inc jbe xchg mov mov test or jbe push xchg sub divb adc and hlt push jbe loopne sub push jp incb fmul cs stc mov pushf xchg mov pop das and hlt cmpsl inc or jo or lahf push pop fs or cs mov push ror lret movsb in lock (bad) pusha hlt fimull push cmpl and dec mov ss add lcall lea jp nop xchg xor inc push sbb jecxz data16 push add or fcmovb (bad) enter mov aam push scas (bad) loopne mov jnp sbb inc pop fiaddl aas aam push jno rcrl jb jl insb and mov scas bound mov int fdivrs dec movsb hlt shlb push xchg mov pop and lea lea stos mov mov xor fcomps stos (bad) sbb sbb cmc add das lods (bad) xor clc lock lahf jl fsubl sbb mov xchg aas aaa aaa pop aad jl push and fsubp hlt sub xor fstps push ljmp sub push xor mov orl repnz mov mov fisubrl into mov cwtl add fwait inc xor mov sbb jle push in cmp inc jbe sub xor mov movsl inc cmp mov (bad) xchg jl arpl (bad) imulb mov cmp cltd jne jbe stos int dec jg or mov or fmull jbe aas jne andl pusha imul mov mov mov pop adc je aaa loop fdivr aam xchg call je nop sbb je ss aad mov test dec mov out jg decl push add adc and pop cmovs mov xchg scas inc nop pop mov mov aaa jns cltd push mov mov and fcomps fmulp not jo add sub repz ljmp fnstenv cmpsb (bad) mov notl dec mov or lret and or sbb sbbb data16 das jmp mov pop sub xor and pop push lret mov dec aaa sbb mov pop xchg shr push pop mov mov adc iret xor leave mov outsl repz add and mov pop dec xchg xchg dec fsubs shll (bad) clc lods adc sbb pop cmpsl xchg mov ljmp sti jp dec sub subl pop xlat push (bad) xor sti rolb hlt cmp mov cmpsl or or xor sbb enter xchg pushf push sub sbb js pop (bad) jo xchg lds jne shrb add int sub ljmp inc push pop and lds jbe mov xor (bad) insl or mov jmp fcmovnu jo pop mov out insl xchg ja ret push mov rcrb fcmovbe sbb push mov mov andb out test jbe (bad) aad lea int push inc out pop (bad) or mov adc cmc addr16 xchg sbb push rcrb ljmp pop es in fisttpl sbb jge jl iret push lret cmp mov pusha and mov sbb aaa repnz add mov in sbb ret sbbb test lock insl aas xchg pop inc loop sub rcr ljmp pushf gs dec inc xchg sahf (bad) jne fsubrs popa out jl pusha insl repz enter cltd hlt cmp mov or sbb std in dec in jmp sbb xchg adc fdivr add fld (bad) jle add lret movl sub jne into lea push inc scas pop addr16 aaa xchg add pop push jne push cld mulb sbb mov in out adc jbe shrb clc sub lahf jmp bound jp sbb xor rorb xor xor cmc shll and pop sub jns int jp lods insl das adc jle mov out testl subl sub cmp xchg stos (bad) mov loopne add adc lds add or xor sub jne (bad) xor jmp push xor xchg int or movsb cltd dec nop popa test cmp mov std mov or or (bad) lods imul arpl lret xor scas ss pop mov xchg push or test push test lahf or and out sar or push add lods lcall js mov fwait orl mov lret scas xor cld jnp add jg or xor push sub fwait (bad) mov ror cld imul rorb mov or lods mul mov leave les pop mov sbb das or into mov mov call pop sub or pushf iret mov xchg or pop mov daa mov in or xchg pop mov int adcb out (bad) (bad) dec push jns or xor adc loop sbb pop mov and outsl sarl jp push add or cmpsl sbb stc mov (bad) cmpsl sbb xor (bad) mov push lods jmp insb xlat mov dec ljmp adc sub mov xchg ds push dec js mov (bad) push push fwait popf mov mov jl cld mov dec jne fild (bad) mov psraw sbb sub or add xchg imul int mov rclb adc (bad) movsb divl and movntq and cmpsb mov jl bound add xor addr16 loop xor cmc sarb cmp jmp inc cmp pop enter sbb fldl or pop cmp jmp pop ret into lcall mov jne sbb cmpb test or sub pop ja dec jb inc sub sahf dec lock mov lds pop add or xchg std inc jnp cmp into pop push push jne or ffreep (bad) xor fs jl inc fsubp xlat cmp notb out hlt add xlat je in mov and sbb jg repnz out inc icebp in adc out sub sbb or xor ljmp and push enter dec in xchg subb outsb pushf sub (bad) push add aam xor sub js (bad) jbe xor xchg pop rcrb hlt shlb xchg (bad) jl shrb adc pop test les pop repnz aas jmp shll outsl jbe mov pushf (bad) xor pop lret cmp sub or jnp or push push sub adc popf sbb popa jo xor scas invd lcall jp test xchg (bad) (bad) pusha jb orb popa inc pop xor lods xor inc xchg and and xorl in mov pop addr16 cmp xchg jb lods rorb inc cmpsl loope adc xorb cmp ja je in repz dec sbb adc pop sbb test test pop andb xchg mov and movsb inc xor mov shlb cmp fnstenv pop data16 fsubrs mov jbe or movsb fucomp adcl fsubrs adc mov leave in dec int adc ds adc sarl in imul sti shrd sub inc push cmp fninit mov mov inc xor cmp rorb add in loop lcall jns mov das out adc mov je add push inc pop test movsl stos adc enter push add or rol adc arpl je jge hlt lock mov movsl jno cmp ret in cmp shr hlt pop xchg xchg push sti push jecxz sbb hlt (bad) jmp (bad) and sahf push xor jecxz dec (bad) aam dec out mov or xchg adc (bad) mov fdivl adc push mov or ret (bad) cmc jp add int in push mov outsb pop xor incl popa sub xor push xchg push or aam outsb pop add xchg and xor insb or push int3 and call ljmp inc movsl inc inc (bad) or xor int inc jo sbb repz cmp loopne jl in mov les add insl sub add cli out hlt ljmp dec pushf rcr xchg es push icebp int test fwait cmpsb sbb jbe pop xchg add inc mov jg xchg or aam outsl adc dec lods pop out inc ja jecxz pop mov aad push jl xchg mov push in icebp fcompl inc test or xchg xchg and mov jmp cld jp or shl addb shrb test test push push fcmovnu inc in dec mov jae mov clc fxch push and add inc mov pusha shr sub push mov insl jmp cmp mov or pop cmp add (bad) xchg test leave xor (bad) adc cmp xchg mov xor or repnz or pop mov js xchg xchg dec fwait test mov xor ss loope mov dec or sub dec outsl (bad) sahf cmp clc int dec daa outsb mov jnp add or lahf jne out pop sahf sub imul sbb pop mov in sub pushf cmpsl xor inc jl movsl test pusha mov mov enter or xchg pop ja jnp out imul sbb test outsl mov cs xchg addr16 cmp ret and stos inc add sbb xor jae jo jnp ja pcmpgtd mov push xchg lcall scas cmpsb nop shl add test push pop insl out cmp jle sub mov dec push mov xor jge test push adc test or dec and rorb enter loopne cmc (bad) fildll push fwait add fsts cli xor iret cmp movsb push pop test lcall pop adc adc sub lret leave pop loope inc les adc ss insl push xor ret pop sbb xor movsl ss ret ret xchg add fldl2e cmp sub subb pusha jbe push inc repnz mov decl mov cmpsb add std add sbb mov hlt inc xchg inc cwtl jg xor add jnp fwait rolb rolb ss sbb gs xchg test ret jle lds sub xchg or cltd xor push lahf push dec jnp arpl add cltd cmp out xor cmp ljmp sub aas sbb sub lods das (bad) sub xlat dec pushf orl jp xchg pop mov ljmp mov xor orl xor sbb outsb stos (bad) je mov adc ds xlat in cmp popa mov mov xchg jo mov add in fnstenv pushf lods or rcrb xchg sbb push mov mov popf dec dec and lock mov push add mov mov mov repnz cmp sub or cmp enter cli and add adc mov clc mov shrl leave jb sbb sbbb lahf lahf loopne cmpb insl mov xor mov mov hlt insl out adc das sarb shlb push xchg loope mov jne sub add fcompl cmp pop call addr16 dec aad inc cli add aam push or jl arpl hlt cli xchg xchg rcrb pop push mov aaa fcmove pop cs mov out (bad) jmp sbb sarl jbe inc sti or mov jecxz aaa mov pop and lods in (bad) mov imul cmp fcoml iret jle push pop inc xchg inc mov sbb wbinvd inc jae inc scas xchg cmp jmp push inc std outsl lods dec push or je add xor (bad) test xchg cli push shll add std pusha inc shl enter jo imul sbb or dec ret mov sub rcrl stc sbb pop fimul jg adc jnp adc (bad) idivb cs jnp xor cli or xchg xchg jae add mov dec xchg (bad) mov in rorb mov decl js leave jp in pop push and xor sbb sahf dec adc popa mov sub adc fcompl sub cltd push sti adc in lret sbb mov fwait add pusha mov jmp xchg aad sub sub jno mov adc or adc incl mov add or scas adc jl inc or jle movsl cmp push xor add into and sbb inc andl pusha lock or jne xchg out and iret es push je pushf ds xor (bad) or push cmpsb add popf dec lods fucom data16 and sbb add icebp xor int sbb or test xchg adc shld pop mov loope ret imul dec push aas xchg outsb sub hlt (bad) push and rorb add pop aas cwtl fidiv test addr16 or or loopne mov iret jmp adc jnp push xorl cmp in (bad) (bad) inc xchg shlb or or (bad) fisttpll dec sbb fiadd int lahf add sub out mov add test test or fwait push mov js mov int3 push loopne xor cmpsl add fcoms mov das jecxz xorl add jl add inc (bad) das lret or xchg (bad) jp mov out into or shr sbb jl je mov xor jle inc pushf aas add mov mov cwtl sbb outsb movsl and lods negb lods sbb ret jbe mov in imul xchg and adc inc jmp mov push xor rcrl cmp push push test and and mov lea xchg iret sbb outsb fidivr fcompl pop rcrb pop push jno pop (bad) (bad) jg ret (bad) hlt pop adc add mov dec test imulb cltd outsb xchg mov fiaddl jae mov into add adc pop mov jle dec ret xchg imul or xlat dec jo sahf mov pop mov xchg xor cmp outsl pop inc and and lods or pop movb shr cwtl aaa pop jne aam dec mov bound adc adc jl sbb pop arpl jge (bad) adc inc xchg add sbb adc (bad) jne cmp or mov rorb movsl dec jb or lret add mov outsl in adcl sub sub add dec cmp push pop or hlt ljmp cmp and cltd roll ss mov xchg les inc dec stos (bad) jbe sub mov or (bad) cmp in sbb pop pop mov clc jns sbb pop jecxz int dec in xor sub jge add lds pop push fcompl shrb les pop (bad) xor push push pmuludq add xorb cltd jno test jle jl push push scas lret jnp ja loopne repz jno je xorb dec mov pop jle and call and ss mov loop sahf roll adc xchg mov imul xchg push sub inc push mov movups cmp push mov ds cmp jo mov repz stos add push cltd jnp jnp je or inc adc push (bad) mov mov pop jnp (bad) mov fsts cwtl cmp (bad) mov push and sub bnd gs mov movsb repz (bad) adc ret sbb mov rolb out pop call mov or mov and test jl bound push lahf in mov shlb pop clc (bad) int mov push sbb test int lock fwait cmp cli or pusha jbe clc xchg push jbe outsl mov jge cli cmpsb jg data16 mov lea rcrl ss jb sarb sbb lret (bad) or je jp je sub pushf jb (bad) pop jmp fbld dec out dec jecxz loop push xor jo jg xor add lret push xor push pop pop xchg test out mov mov cmp stc mov xchg xchg mov jp and mov xor pop xchg push test add push push push lock ret fmul xchg inc (bad) mov testl pop pop cld sub test lock add mov mov fistp or inc add jmp cmp sub inc push addl push fstps rclb orb push adc jne adc enter add cmp jle cmp sti jg sub sbb mov lret and pop xchg mov push adc sbbl loopne fnstenv ljmp mov and fwait movsl sti and (bad) jle add cmp push imul in lds cmp xor pop or xchg jo scas hlt mov mov and or stc (bad) imul lods scas jge movsl outsb lock cmpsl stos push mov inc (bad) jae pop jecxz dec (bad) iret and sbb and mov lcall out mov or cmp (bad) jne inc popa mov int mov sbb sub jns scas pusha push repz cmp mov add or popa mov es mov rclb ds jg push ljmp outsb outsl test xor aam jno jbe ret adc popf push cmpsb leave repnz sti adc pusha pop fldl (bad) jns ja sbbl (bad) bound or cld push push movsb or push jmp inc out mov and push fmul mov jo push pop fs jge add xchg adc stos sarb push stos rolb dec in sti jecxz,pt sbb push cld jecxz les addr16 add in daa mov mov sub mov dec inc sub (bad) inc sbb and std out cld or psrld dec test or cs pop aad pop repz rcrb push fldenv xchg rcrb shll adc lods inc cmp aaa fisttp sbb cmp mov loopne jp out fimull jge sbb cwtl push addr16 mov sahf in and es or xchg fcomps outsl jnp mov sub jo xchg push pop push push jo sahf rcrb adc lock sub loope mov xor out hlt rcrl xor mov (bad) mov popf out push pusha enter xchg fcompl push lea xor sub mov adc mov sarl xchg ret xchg add out and loop push adc pop mov pop or daa or push add jecxz clc inc jecxz in xchg add pop xchg sbb jg out roll mov sarl pop mov xor fnstenv scas fidivl mov or pop jbe adc mov cmpsl inc add mov arpl jo gs out jb rcll pop (bad) xchg pop inc testb into cld rorl pop popa in scas (bad) cmp imul xchg rcl mov push xorb lods lret mov pop pop (bad) xor push (bad) jmp aaa aam or push adc xor pop mov adc mov or push jle jne xor mov push scas add into push lahf ljmp cmpsl fstpt movsb adc or push adc push hlt cli cld fs insb aaa ljmp push (bad) enter or mov mov pop sbb sbb jge (bad) in loope jg mov into orl xchg insl mov insl (bad) int3 call (bad) int (bad) das jge mov inc jmp loop roll lcall push cmp pop mov and dec sbb popl lods out push push cld cmp fdivs (bad) xchg (bad) mov mov push dec cmp sbbl sahf aas in jecxz repz out hlt ret push ss cmp mov mov jns in (bad) jno adc add push jecxz lods rolb jle (bad) push xchg cltd xchg cs lcall fdivrl mov cld add pop insl iret mov les call jg xor add jbe hlt push jg jbe xchg jne pop or sbb insl gs adc mov add inc xchg cmp mov stc loop inc jmp pop mov ret in or test fbstp mov addr16 adc outsl sbb pop fcomi cld mov xchg rclb pop xlat repnz fstpl lods pop jne adc je cmpsb js jbe dec mov stos test push pop push aaa mov outsb aam jmp and inc pushf jg test sbb cmp sarb andl jb daa es fsubs add sbb (bad) int lret sub mov mov out mov pop fwait (bad) out sti or scas cmp stos add jmp in in mov dec sbb aas (bad) xor mov gs mov mov push mov aas aam xchg push push jecxz fwait jns jbe mov fmuls cmp pushf or cld xor test or loop shll (bad) jmp in jg negb in or inc cwtl xchg scas fsubs mov dec jecxz fldt ret cmp push into jge cmp ljmp movsb jnp jae sbb xlat or sahf fistpl or test pop mov mov or cmp lds push pop rcrb les enter push lret out pop sub push outsl xor mov xchg lds jle or cwtl cmp leave (bad) js fistl loopne aam sti psubd cwtl inc cld pop jp sbb loopne ret jp jp iret sbb mov sub mov inc ret sahf outsl (bad) insl push xor xor add nop ret divb (bad) out and jne lret pop push incl push addl mov in xchg xchg insl xlat pop (bad) sbb or pop fcom leave sbb mov lods call xchg sbbb lret or or ja es or mov int jp outsb or dec push mov add add lahf dec fsubrs sub sbb jge dec (bad) enter jg,pt mov (bad) mov ret fsubl or hlt cwtl xchg fwait push adc aam stos jg pop decl xchg in mov mov and insl fcoml sbb push and sub iret hlt cmc loop cmpxchg8b jge pop rolb aam mov mov dec or out int3 (bad) mov in incb andl inc test mov es adc sbb xor jbe aad ja push nop or sbb sbb ja (bad) pop cmpsb mov pop push aam and js lds pop scas mov xorl cmp pop xor stos dec out push loopne xchg sti push sbb out es push inc pop mov inc out fmull push sbb out sub and push mov outsl jno xor nop push sbb mov push jne (bad) cs lods xor inc mov jnp rol pop fs sarb pushf sub xlat ljmp jge jmp jp jl and inc xchg aad lahf mov daa sbb sub cwtl adcb sub push push in push xor fisttp mov jne sti xor add adc mov sbb cmpsb xchg and incl fsubl rsqrtps loope std xchg into dec and xor shlb pushf inc sbb mov xchg sbb jb clc in push inc sbb (bad) aad imul xchg xlat out mov xlat sti hlt push loope sub mov mov imul cld sub cmp mov movsb loop mov inc dec and sub xchg subl jb in daa lods jmp or lret cmp leave cld lret push xchg add inc test jns out sbb fldenv push (bad) and sbb ja int (bad) sarl sub sbb test int int mov jb insl or pop cmp pop test jecxz or xchg lret mov dec fisttpl cmp pop insb sub add sub or or inc sub fs cli cmp ljmp pop push or xchg fwait mov je mov or mov sub jno lods ds xchg loopne xchg fistpll pop lock lret jb or xor in in repnz je fwait mov bound xor jbe sub lods dec and push sub fdivs jle mov in shrl addl cmc aas cmpb lret sbb jbe pushf mov scas push movsb sub sub or sub repnz cwtl fs xchg and std aam or cli mov mov xchg in sti clc pop aas (bad) je mov dec (bad) sbb addl xchg mov or ja dec or cmp inc popa in lods push inc xor pop sarb pop inc push push xor cmp mov jl int daa jge mov xor inc cmc (bad) ffreep sbb dec cmp aad ljmp sbb and xchg sub adc inc push cmpsl sub enter fcompl test ja mov (bad) sar mov mov ljmp sub xchg (bad) push adc xor pop sub add inc xor pop iret push (bad) jns lods sbb lock fsubrl or loopne mov pop icebp cmp sbb insl in push in push pusha stos aam mov xchg es mov fisubr sbb mov or inc jl sbb mov sti fcoms stc in js pop xor leave neg les pop decl psrld cwtl jnp mov and ret mov test jg sbb es jmp inc xchg cmp xchg das shrl push push push xchg cmp add (bad) push pop adc jae test insl fsubs push and jp (bad) lods push push pushf pop xor cli aas cmp push jle xlat mov inc push mov aaa mov or out lcall (bad) (bad) out xchg pop addb or in inc pop xor sub add sbb xor call sbb dec scas inc jbe adc adc sbb (bad) mov jae hlt jmp jmp frstor mov push sub (bad) pop nop test stos add adc cmc mov xor xchg push mov jecxz mov sbb shl (bad) (bad) lahf repz mov push cwtl adc sub pop es push bndstx and cld mov loopne adcb movsb outsb rolb sub dec push sarl sarb jmp (bad) mov add mov push add sbb sbb pop inc mov mov add lret lock xchg adc mov cli pushf or lods je dec bswap lahf es sbb pushf in sbb xor test push int and arpl stos out cmp sbb adc jle in add iret pop jne sub fsubs (bad) movsb adc jnp mov stos sti dec jg ja dec nop outsb cmp (bad) out das cs and inc mov loopne dec mov jnp das pop mov mov (bad) lock cmc call mov lock add enter in or fstp aas dec add cmp jo mov in adc popw cmpsl add inc inc cmpsb movsb jne xchg pushf (bad) xor lret (bad) pop das pop mov aas add popa aas cli cmp rorb add adc aas mov xchg xor push pushf pop and mov or fwait out pop ss cwtl sub daa pop dec cmp jne loop sbb mov sub sub mov push lret sarb sbb in mov (bad) (bad) fisttpll adc pusha jb pop test push pop adc jbe ret fldpi mov or pop sbb fwait or call jo imul and cmp add call cmpb xor sti bsf lahf adc js ljmp fstpt jbe pop push pop bound in sahf jo mov stos ja in lret pushf xor pop pop push loopne or lods das mov sub repz jb dec push es jmp mov xor inc mov jo cmp pop jno jbe add sub or sub xchg jle xor fwait add xchg mov dec stc popa out sarb das rolb pop cmpsb stos jmp push imul je (bad) lock jge cmc cmp or fwait and pop imul xor xor xchg jecxz mov ficompl cmp sbb adc jb insb mov mov push int pop push ret in xor or fnop std jp push add cld mov pop je mov hlt fiadd jp sbb push int ds sarb xor or jo movsb adc mov sub shrl sahf test dec xchg mov cmp mov add pop cmp xchg xor jnp mov sbb rorb enter jbe aas push into shrl mov and fisttpl movsb jmp sbb jne xchg lods clflush pop push mull popa pushf mov bound outsb adc outsl mov cmp sub leave addr16 dec jne dec dec xchg sbb xchg mov xor ds mov and sub or jae jl js push mov mov repz addr16 sti pop fcmove mov mov cmp push pop or rolb xchg and enter int3 aaa clc mov mov xor push xchg sbb ja ret lret xchg xor jmp or or xchg jge fwait outsb adc insl dec sbb (bad) sahf jge jmp mov gs adc mov loopw sub (bad) or push es sub inc and pop lock jno lods repnz lcall cmp xchg gs fwait hlt adc (bad) pushl jbe push imul sbb test mov push push adc or sar adc add cmpsb push sub sbb add mov rcl cmp fs push in lds jl add add ljmp cli add add enter sbb adc or aad out xor fdivs shrb adcl push in fisubl imull dec rclb ljmp adc adc sub sbb mov nop and push je and mov sbb jmp mov sbb mov pop popl clc dec sub add repz call cmp cli pop adc adc mov mov loop sbb mov inc inc pop xchg pop xor and xlat mov fwait push call sub jo jle daa push and adc mov mov (bad) jp mov mov jge outsb mov stos scas add dec movsl daa (bad) pop loopne cmpsl int fmuls cltd fwait ljmp aam adc shl cmpsl fiaddl pop and rcr xor loope call rolb or stos (bad) out clc sbb aas push mov mov sbb cmp into cmpl insb outsb push lods push int jmp loopne cmpsb xor (bad) sbb jo rcrl int insl fisttp fwait mov lahf shl fcomps movsb cmp pop pop push aad scas gs out movsb push sahf adc call pop and mov xchg lods or movsl ja dec sub sbb xchg xchg or outsb mov sti int3 push push fadds sub jb loopne leave or sub push les inc int mov mov addr16 mov mov push fstpt ret (bad) lods push (bad) aad xchg mov xchg insl sbb gs jne ds sbb jecxz (bad) insl mov push sbb dec aaa pushf sbb or and stos add dec mov or inc xchg call xchg cmp or lahf movsl cmp cmpsl es and repnz push dec mul in mov mov mov insb rcrl gs fwait pop mov or sub aad icebp push mov jmp or leave mov mov mov mov (bad) adc jge pop je lods aaa xchg lahf stos pop aas daa imul hlt test repnz iret btc lea ret adc fwait push in inc push sbb cmp pop mov sub imul js repz and arpl mov jmp add xor lcall sbb mov mov sub clc push test adc push jmp rcrb incl cs adc xor fidivr and xor inc loop jnp push mov shlb icebp jl jmp jns or push inc jl lret leave fwait xchg faddl mov sbb lahf xor xor mov pushaw xlat mov imul jns pop (bad) repnz ret xlat std jns mov shr aam arpl adc loop in jle adcl jae rcll addr16 push (bad) faddl mov movsb out test add xchg hlt popa nop and dec in inc loope sahf mov push sti mov int popa xchg sbb sub jge ds adc movsb jg push mov clc cwtl mov push cmpsb (bad) into xor and aad lcall fisttpll fstl testb in dec rorb mov sub dec fs or loopne cmp cmc rcrb pusha sub push jb or pop es fcmovbe xor jnp es int jmp rcl sbb fdivrs xchg cmp pusha int3 or xchg mov jno and lods (bad) loopne or and call in das push movsl pop loopne sbb sub pushl sbb pop pop movsl decl adc test cltd int and add rcll mov rcll loopne and in out xchg jae call dec (bad) sub outsl jne xchg movsl jle xorb xor jmp (bad) jl jp jno xchg and hlt jecxz gs mov (bad) push sbb and mov pushf les rolb xchg (bad) lahf dec pop sahf pop jbe,pn cmp arpl (bad) in (bad) or loopne mov dec scas repz sbb (bad) jne dec jne inc das jbe and xor mov xor je cld js es cmp ret jecxz pop in ret pushf push stos movsl xchg cwtl and loope pop jne std insl fisttpl shrb sbb sub dec pop jae leave xchg cmp in xchg mov (bad) loopne xor sbb dec inc cmp imul or mov dec or xchg xchg pushf mov std test mov fisub xchg mov mov mov xor sahf int sbb (bad) mov out and push xchg insl dec pop sbb push push test cmpsb and jns dec mov fldenv inc sub test cld movsl push mov add inc push dec jnp mov push lds pushf fsubr push and pushf mov push pushw insl fadds sub pop enter pushf mov mov in sub jbe lods dec push mov inc cmp test ret push and cmpsb out adc push jb aaa jbe inc idivl (bad) test sub adc loopne (bad) loop adc xchg jo cmp dec fwait pop mov pop test and xchg das xor jnp mov cmp repz mov test cmp shrl (bad) jno sbb aaa jnp push popf pop addb lret mov mov and pop pushf sub out jmp xchg clc lds fnstcw scas adc les push pusha lods jge iret jle loope outsl aas xor gs adcb jl or gs jne pop or dec insl jle dec fmull subl xor push and (bad) rcrb stos aam dec jl insl in out sub lea insb aam nop clc jnp add add xchg pop nop fwait pop jle paddsw mov sbb add stos xor lea sbb cwtl sti daa cmpsb push pop sub adc in xchg fldl movsb mov jmp adc bswap loopne,pn in arpl cmpsb sub lcall jle inc out in insl mov hlt cltd pop sbb adc or (bad) cmp nop pop cmpsl fnop cmp jae add lock dec jmp pop (bad) pop clc js bound fs psrad sbb movsl mov push xchg pop mov add int pop or pop jl mov es out cli test cmp std in out daa lods lcall mov mov (bad) jle stos pusha xchg pop push jno out mov and pop ljmp xor push rcrb push push bound jnp mov ljmp cmpsb lret cld and add lock in pushf sbb add sub inc (bad) adc inc pusha and sub adc je mov sbb xor pop mov in xchg jno xchg rcll int3 and nop jp sub jo or push lock pop leave dec mov jb inc stc insl push xchg cmp arpl movsb std dec mov mov pushf lods mov lret add xchg xchg lods push and sti inc add adc je mov loope or pusha rolb jb jbe adc mov in syscall lds imul sub loopne ss jne int loopne (bad) bound ljmp pop lret fsubl sbb lcall sbb insl mov lds and fisubrl add and icebp cld or subl cmpsl rclb cmpsb bound cmp mov stos (bad) ss xchg addl in popf les jge add insb (bad) stc cmp cmpsl xchg decl clc cmpsl mov xor sbb insl jbe push jbe stos push mov stos shrl int xchg mov cmp mov pshufw or jo sbbl cmpl and mulb jmp (bad) push hlt xor stos or loope mov adc mov es sub or sub mov subl mov pop movsb mov push mov ljmp (bad) cld outsb pop aas adc movsb sti push or mov mov nop cli xlat rcl mov adc cmp outsl mov je hlt push in setns mov test xchg dec (bad) stc push mov int jno xchg movsb sbb add pop or lret adc push shrl insl xchg sbb and cmp add lcallw jnp cmc les ja mov cli (bad) cmpsl cmpb inc xchg outsl adc pop push adc sbb mov mov int fidivrl (bad) fcmovnb add rcrl mov ljmp jle ret fwait sbb les adc jecxz mov je (bad) aad push mov sub andl or test pop lods dec lock fsubl (bad) mov sbb jne or sti lods jle out push push push sub (bad) dec fstps pusha lds xor add jp lods mov pop add insb dec lahf xchg imul shrl nop add adcl pushf dec jbe mov lock mov cmp cs je jge roll inc lret fcomps sub inc inc push repz mov shlb push mov test add idivb adc xchg out add xchg cmpsl enter repnz lret inc sub aad push mov inc jbe inc hlt int sbb (bad) in arpl pop fwait lods out cwtl jecxz mov push add (bad) stos xchg inc mov ljmp pop sbb outsl dec jp aaa imul ret sub ljmp mov push movsb cmp cmp sbb hlt lahf add sbb inc pop out sti adc gs pop sti test push cltd test (bad) mov pop fwait add mov jmp lcall ja mov cmp icebp sbb movsl test jl push inc fucomi sbb std xchg fcompl das call mov les jg sbb pusha test loope shll out loop and mov in mov dec jb jbe jb dec (bad) lret test insl pop (bad) mov loopne inc fidiv xchg cmp and cmp cwtl mov aaa jbe push push cltd jns xchg lods ret dec outsb jo (bad) mov hlt jne aad loopne or aaa enter fadds scas add cmp dec jmp mov inc push movsl decl notl lahf fldl pop test sub jbe pop mov fcmovne test jle mov mov mov fwait (bad) out cmpsl inc pop add sbb sbb pop pop add rol notb jnp dec aad leave jns les test add aas cld fs jne cmp add fwait add sub fwait hlt std mov mov ret loop mov js jb outsl add or movsb out fcoms cli jl sub movsb (bad) clc nop xchg cmpb lret or xchg sub xchg mov push popa jns mov sbb adc ret shll xchg sub ror pop mov adc cmp test pusha mov push mov xchg and daa mov fwait sub clc mov mov ficompl out cmp cs jno mov mov cmp adc mov aaa or add in cmp loopne mov xor xchg cmp movsb mov mov ret push fsubr inc sbb mov mov arpl call xor movsl popf jg mov (bad) or push mov sub loopne xor inc decb int push js jecxz add push testl fwait push push jns mov mov int3 jl push addl mov test fwait les mov mulb ljmp mov mov pop lock and mov cmp sbb arpl add rorl xchg mov cli push idivl mov shrb stos xchg adc xor clc lock pop sahf (bad) fsubrs xchg mov in arpl mulb cltd xor xchg add lahf cmp movsb mov mov cmc rol push sar sbb popa lock test fcompl movsl repz lock jbe cmp mov andb popa cmpsb sub lods clc mov popf lds lahf xor das int or call jl sbb xchg ljmp loopne sarl outsl dec std lods je add test or push xor xor enter or mov add fwait sub dec mov bnd call push cwtl es xor dec mov (bad) xor dec xor enter jl or (bad) xor and daa cmp std movl test sub rcrl push dec popf icebp lret dec or inc ds lods or jle leave roll jae (bad) cli pusha sbb cmp cmp leave mov cmpsb mov or nop xchg fdivrs cld add fiadd test ds pop fsubrl lods xor mov or or push pop pop pop hlt into clc (bad) mov dec lock add jecxz xor dec ret mov mov stos cmpl scas jl es out dec sbb pop jmp sbb addl aas js inc data16 aaa lds out sar ljmp inc mov and adc mov push fs test add hlt inc or sub push fprem push xor cmp jnp mov pop das ror xor out jp fdivl sub sub pop pop mov loopne shrl sbb in cwtl mov cmp dec data16 movsb mov (bad) call fcom cvtpi2ps stos stos aad jbe cld das lock dec bound dec xlat add jl (bad) hlt jge outsb inc insl or xchg int mov mov aad shr js jb fdivr dec fmulp sub sahf test divb pusha lea mov roll pop push jge mov inc cmp mov xchg mov js sub in loop jbe adc aaa or rorb (bad) faddl sti mov sub jg ret inc movsb test add jbe stc sti push mov shrb in mov dec cmpsb aas loop add test popa mov or push sti mov cmp jae or movsl pop inc (bad) pushf or push nop sub cmpsl inc loop push sub adc dec lock pop das pop jns fisubr and mov pop mov push jnp fnop bound jae je xchg add (bad) sub orl cmpsl add xlat add sub pop mov seta lds outsl sub bound jbe aam lds xchg mov and lds sub inc pop test jb je mov adc adc add xchg js cltd fisubrl jne sub lds dec fiaddl pop inc mov jge stos test adc sub aas mov and fs push mov clc in lock (bad) sbb mov ljmp mov icebp ds icebp out jp pop push cmp ret sti movsb sub push mov addl sti dec or loop mov sbbb aaa je push add add fstpl inc sub dec lret adc adc ret or push cmpsl push lock movsb or cmpsb cmp nop in aam imul push lahf xor pop adcl lret stc pop clc addl outsb je mov inc arpl sbb adcl xlat mov roll adc in or mul cltd and addl fist adc pop or cmp fnstsw mov mov rorb cmpsl repnz or lea mov adc adc in xchg xchg int3 aas and adc xchg or inc movsl jle and cld xchg or ja xchg or popf mov jae push test push lcall dec lahf jp jmp or mov mov cli or mov or xor mov cmpsb inc xlat out jnp iret repz in (bad) jge jae xor cmp das push inc daa popa call mov jl rolb push iret ljmp or std or (bad) mov aaa pop aas mov fdivrs cmc add add xchg push sub das in or pop int3 and inc cltd bound push inc cmp mov sbb xchg and push rcl movsl add fdivl rcrb adc les sbb ljmp insb and or push add pop jo and sub cmp out xor xor outsb dec jnp mov cltd call and xor std xlat cmp push adc and repz std xchg jl lock inc sahf scas mov xor aaa int3 and lahf iret pop test mov popf mov pop nop ss test and xchg rcrl aas mov mov fwait add lock and dec cmpsb int add rcr mov adc rcll inc dec leave loopne in data16 sti pop int3 fnsave in xchg sub cmp aaa syscall mov pop jl sti lods or movl daa ljmp pop dec sub stos inc mov adc add adcb dec push hlt sbb inc jo cs (bad) mov cmp and lcall cmp inc pop or in add cmp push mov ja scas cwtl mov rorb mov loopne aas scas sbb (bad) cmpl mov lret xchg xchg icebp cmpl and outsl mov gs ficompl lods or xchg pop fcoms je add aaa sarl add mov mov pop rclb dec mov clc sub inc jge add insl aas mov (bad) fsubr mov hlt sbb lods jne ficom pop jmp js nop repz imul in push outsb push jno xchg pop mov out mov lret pop sub leave jbe dec jle push bound pushf mov fisubrl mov cmp divb add sub int3 add jle gs mov push ret inc int add and (bad) mov incb or (bad) movsl (bad) fbld jle or jbe in add adc fnsave sub or fistpl dec xchg rcrb incl jge xchg call add jo test cltd (bad) mov and repnz imul push jmp mov mov xchg imul cli pop pop push (bad) dec popa mov mov aaa pop movsl fldt or xchg ficoml je fstl mov mov push add mov xchg adc push push push sub decb mov mov cli (bad) wbinvd (bad) sti mov jb (bad) dec add leave mov sbb add push dec push or xchg pop sbb dec jle add push loopne pop ret cmp sbb mov or adc (bad) fwait mov std adc lock fcompl cli push mov push (bad) cmp (bad) (bad) mov mov lods cld add repnz xchg sbb mov pop jo cmp out xchg pop mov push inc lcall iret adc sub jne pop xor sub adc jge push push test aas pop out sti mov mov push fsub test jbe jnp out lret mov sbb adc out add jbe xchg pslld sarl int imul (bad) and cld popa mov add in jl dec jp mov or mov mov jg xchg xchg cs mov xchg imul sbb clc xchg add cmpsb (bad) std and jo push lods call cmp imul or adc icebp in sbb pop add insb lahf sahf fnstsw ja insl xor xchg int inc (bad) scas pop jecxz call fwait mov xor dec pop lods sarl add mov lret das (bad) or sub js in aas test outsl jne jl or test subb cmp add leave rcll jl pop sub nop flds in lock inc rol shrl cmp cmp fidivl stos pop movsl mov sub movsl cld sub movsl sbb and push sbb and out cmp push mov clc push cmp aad cld movups ja jno (bad) jl fwait pop dec jb push test rcll test push xor cmpsb fwait pop test (bad) in lahf sub lds sti iret dec and rcpps or push rcrb lcall emms cmp and adc push push (bad) jno leave jae and dec pusha lcall imul cmpsl rolb repz pop inc and (bad) and cmpl out outsb xchg roll ss inc xchg or push jmp and pop and in and cmp mov xchg (bad) negb pop inc or cmp fmull push mov (bad) or sbb push in data16 inc add pop dec icebp pop pop cltd (bad) push sub sahf sbb cmpb cmp xchg add aaa pop nop cld cmp push mov xchg mov inc adc xchg or es add aaa (bad) cld add jns mov lds mov or (bad) lahf xchg sbb pushf jb,pn daa pop or les inc xor or movsl adc or jae loopne or jmp int3 sbb sub cld adc sbb sbb mov stos pop lret insl jmp jnp mov or and mov inc cltd or rcrl jo lcall jae dec mov inc and movsl ljmp sbb jl fstps icebp (bad) add push std adc mov xchg pop lret sbb test dec repz pop loopne pop in pop cld sbb push ret mov cmpsb ja call (bad) (bad) xchg jne push pop daa test rclb pop push in cmp hlt cmc jne mov test push xchg or in sbb es lcall lock addr16 dec cmp clc mov rorb sub jb push std pop jmp (bad) cli ret lret push or lahf (bad) out mov push cmpsb mov (bad) loop in cmp jle add mov jg jno push pushf xor sbb push out add adc pusha into xchg fidivrl loop,pn add sub test (bad) sahf push push jae mov adc sbb shl clc xchg add dec popa fild dec ret movsb sub outsb clc mov stos js mov dec mov mov jg int xor jge (bad) xor add jbe push sbb sub sub xchg lods aam or cmpsb out les andb (bad) cmp mov add sub mov cwtl pop inc popf cmc mov in push adc xchg xchg jae inc es jnp and push jl push pop mov test push lods int3 (bad) xor ret fsts cmc pusha adc dec idivl enter out (bad) call add jne rclb cld movsb xlat xor rorl mov in cli adc cld fmull (bad) and out push jbe ss add (bad) xor fdivl or data16 mov imul insb ret pusha mov push mov mov sub das mov in lret inc stos and push cmp and aaa jg cmp lods push jg mov gs mov lcall stc rcr aam sub and mov es mov aam (bad) loop or pushf pop mov or cmp adc aas jbe cli shl enter fidiv mov inc fdivl imul add and adc cmp insl xor sbb add push inc sub jbe dec in bound rclb mov pop jg sub cmp hlt mov mov lea sbb cwtl sbb test cld fimul mov inc mov test lods push fucomi lods popa add sub pushf mov jnp adc ljmp mov pop fisubl add add inc adc sahf jb repnz rclb incl cmp mov popf jmp faddl mov or dec jbe adc mov fadds out cs pop dec cmpsl jb add and xor addl sar mov aad movsl movsl adc fsubrs push pop sbb gs out test pop jge dec stos or cmp lock popa in push loopne rorl shr dec shrl inc jb add es aaa fild push add inc fnstcw xor add xsaves or sbb add mov lock (bad) jle xor enter jnp jg dec mov sub out sub add rcrb and cli out and cmp arpl cld ljmp lea mov push sbb lret xor test dec dec add inc cs inc push mov or add call out (bad) mov mov out dec in jo loope popw sarb add inc mull add xor mov fild (bad) pop fcoms imul mov xchg (bad) ret je sbb dec jo (bad) push mov sbb data16 shrb push repnz sbb jle sbb incb pop loop pop aaa jns sti xchg and push iret xchg in adc fstp nop aad insl jmp jp mov and in cwtl xor (bad) je xlat cmpsb adc int hlt adc lods xlat in js icebp movsb inc inc arpl (bad) cltd or mov movsb mov jl sub aam or clc sbb lods mov xchg je add out movsl xorb scas mov pop xchg push movsl jnp daa push fidivr paddusw adc dec mov mov add (bad) in pushf or jle push test cmpsl inc xchg sub add dec mov xchg cs rcl andb cmpsb int3 cmp jo jp mov ljmp push pop in rcl sarb sbbb popa dec pop ljmp insl loope in dec mov cmp adc arpl cmp aaa mov pcmpgtw outsb les sub cmp in repnz out in xor fstps scas cli loope or in push mov aam or (bad) sub fwait or mov popf out pop cld repnz pop jl enter out xchg sarl (bad) shrb aaa cmp (bad) push add adc mov cmp call xor int3 jl int pop (bad) sbb mov jb mov xor in imul repz inc pop arpl fsubs pop jecxz sub fmuls inc xor lret add outsl xchg jbe test jg dec out adc pusha mov jne inc jl jg mov jle insl popf inc ret pop push fcmove jg and hlt or jo xor dec lret sti inc repz lods andb nop jl lods push inc jb scas add in test sti push aad cmpsb jg mov sbb setge fstpl push es mov inc mov jae hlt or jge adc mov lods push lods fisttpll ret fiaddl sti lea mov aas fmuls jg sarl enter lods sbb or jge out push cmp imul lea sbb mov insl int sbb sbb in mov cmp lret jg cmp xor or out test aad inc insl pop std stos dec jg inc scas xchg lahf add cld outsb sub jbe adc inc jo xor fs push inc pushf xchg sub push jle hlt xor mov call js dec inc xor cwtl scas and xchg jbe fmuls mov inc mov pusha or js add cmp ljmp (bad) out jbe iret (bad) sbb aam loopne and mov in ljmp inc (bad) into cs sti cld or testb mov jg jae fsubs hlt cmc cwtl push mov adc mov pop or subb sub movsb sbb pop decl push pop lahf scas push inc aam sub pop lods stos push int3 test sbb cli mov aas scas (bad) insl insl (bad) push jle dec adc or add (bad) adc les je es shll sub push jbe inc sbb and mov gs xor jbe dec xchg dec inc sub cmp (bad) xchg push fistp ret pop sub lret lahf lea mov incl mov jge xchg ljmp pop mov or rcrb jecxz loopne adc add cld addr16 push and pop inc scas xchg ss lahf xlat xchg add mov cltd or lods clc jnp xchg je nop push xchg pop jge xor imul or testl xor shrb or je pushf aas in sbb push ja stos fsub xchg pop cmp push repnz pop xchg pop pop test (bad) (bad) sub and cmp hlt test mov jp mov mov xchg fisubl faddl sub in dec push stos dec neg jb add or xchg xor je mov or jne push adc hlt xchg jo aam xor (bad) or pushf and xchg or in out cmp lods push rcrl (bad) cwtl push mov in decl dec inc (bad) rorb push stc mov or sti lea lea subb ret push popl outsb lock pop fistpll jg icebp jo inc mov sbb orl outsl mov rcrl cmp out cmp inc pop jno popf mov jmp ret out mov test inc mov xchg dec cltd and dec daa xchg and pop pusha pop cmpsb jecxz lods (bad) mov and inc sub push rcl les jbe and adc (bad) popf lret pop pavgb flds push xor fistp jns adc sub and rorl mov and inc popa in or ret push mov xor cmp lahf sbb pop pop test imul loopne aam pop mov adc inc and enter rclb jl jl fwait add popf shll fwait add mov jnp cmpsb out adc lds leave (bad) cld (bad) or je (bad) or leave jne cmpsl outsb gs sbb jle push cmp adc push jae ret adc out stos in hlt ljmp adc outsl loopne push adc or jge mov addl adc cli jo push sarl (bad) arpl in or inc stos nop pusha dec or cmpsb pusha pop adc jns sbb or add inc add iret xchg jo les jnp lock cmpl sub js xchg jp xor jbe aaa (bad) lock int outsl cltd lods roll jg ljmp pop and mov loop cs aad out pop xchg fisttp inc andl stc mov popa lock mov shr add jns mov jo test flds rcr mov sub ret ja mov cmp test and sub ret push xchg daa adc jo cli sbb shr mov js mov outsl dec iret addr16 inc pop nop adc mov push jle movsb aam mov shlb repnz jnp jle aas mov xor lods add mov add push nop xor lods xchg fcoml or ja ljmp xchg cmp iret and or lods lock decb jge push sub lret or or mull jnp in fidivl cld mov test inc fwait add pop xchg lret repnz jnp testl pop ss ss popa inc out and mov testb fsubp mov mov jl sbb (bad) xchg pop movsl ja imul cmpsl pop mov adc es or ljmp imul sub aaa sbb xor push mov loope popf lret lcall rorb mov mov xor sub xlat fnsave sub arpl fcmovb gs jl (bad) pop repz fildl jne (bad) mov cmp shrb fstl xchg inc xor and mov je lea push dec mov loope ss aaa mov jge push cmp xchg divb lods lcall (bad) or arpl add push push test ds fwait inc xchg arpl mov cmp mov rol mov add lds adc jnp cltd movsl movsl xchg hlt or fdivrl fsubr mov aam cmp repnz push or mov cmp orl dec jle add dec nop mov (bad) or (bad) push or mov sarl sbb insl lds movsb (bad) int mov dec cmp mov xor cmp test mull cmc repnz pop das fwait jbe lods mov mov pop hlt push push cli sub jge xchg inc pusha lock mov in pusha sbb cmpsl pop mov movsb adc rclb and loopne lret aam mov jg jb xor push cmpsl push rcr sub ja mov sub daa test jnp inc in rorb jb add mov sub xchg inc popf out insb mov mov aam cmp cli cmp push add imul xchg loope sbb mov add lods ja mov sbb mov dec rcrb mov popf ficompl es repnz jmp xchg nop sbb jne add fcmovu iret stos out xor mov jl xchg mov jbe mov xor mov add (bad) lahf push mov mov push or adc jo lock or pop (bad) shll pop pop inc push mov out outsl pushf cs jne mov dec popa loop mov add mov mov sbb mov pop xchg iret aas push addl (bad) mov push push cmc in lea sahf sub cmc xchg cs repnz push leave xchg mov movsb dec in jae adc fdivr mov mov sbb inc dec (bad) mov rol movaps sbb imul sub imul mov (bad) mov dec fisttpll adc loopne sbb cld pop mov movsl lds das or sarb and jns jbe cmp mov test add jge sarb leave (bad) hlt adc jg inc add adc lret (bad) mov sbb fiadd mov (bad) and hlt pop movsb movsb shlb sub jmp (bad) subl fist aam andb pop push rcl push pop dec jno add pop add cmpsb fwait into cmpsl repnz xorb adc rsqrtps or or mov hlt lock or or adc (bad) xchg mov mov jle add sub jbe lods rdpmc scas jp imul xor fcomps jo mov ja pop je (bad) popf bnd xor mov sti aas test movsb push adc (bad) imul sub inc sbb sub movsl std fsubrs sub jbe push add mov shlb push in add xchg gs mov jl sahf xorl mov jnp fwait xlat jle mov les inc inc mov mov ja into cli push jae xchg cltd cmp lcall or push adc xchg sti es jecxz cmp int aad push and jbe cltd cmovs rorb addl call dec cld test pop int3 cmp jl push add not popf mov sahf pop (bad) cmpsl das movsb das push dec cmp pop sbbl xlat es into mov lock push add int bound cmp mov lahf lock int pusha mov push fs data16 int add sbb sti pop dec jae sbb xlat cmpb xor xchg fisttp jge jp clc add push xchg mov repz pop in mov sub sbb inc pushf imul hlt gs aad mov lahf outsl test and and xchg xchg ret je mov lea jl xor cmp xor mov push lods jb push rclb and add pop jbe or shrl or aaa add outsl test in mov pop adc adc jb aas and jmp pop dec mov movsl mov out lods cmp adc lods sbb aaa jg xchg movsb clc leave cli lcall mov mov ds push bound scas icebp inc loope pushf loope push enter shll hlt daa pop pop add cmpsb jl pop in or lcall (bad) xor out pop mov leave imull roll jne pop sbb add and mov mov cmp jge adc mov in es aas pop sub sbb sbb xlat loope pop sub andl cmp mov add fwait push or push adc je cwtl out jb mov outsb sbb mov push aas ljmp xchg add jb mov inc int rol out sub or pop (bad) xchg pop insb out int fldcw test hlt lock sbbl mov or cmp aas add cmp jb xchg pusha cmp add add dec ret dec stc xchg sbb add or dec mov or adc dec jbe jecxz inc mov pop fimull sub mov out lea insl pop mov roll push or xchg iret sub xchg js adcl jl cmp sbb fmul push mov ljmp sbb mov add sub call idivl out sub pmaxsw sub jnp cmp and pusha mov test (bad) xor mov push ds (bad) or cwtl mov insb imul ss and cwtl test aam sbb pop sbb (bad) jns mov out (bad) sub cmc test pushf add stc jbe pushf lret mov or xlat std lods sub mov in cmp mov adc cld mov add stos popf push out fmull stos lahf ret movsb mov ds jne mov out sbb pop pop out into mov dec orl int3 jg fsub mov add dec mov fimull aam mov push addr16 xor add mov roll inc push sbb loop loop rorl or xor movsl repz dec fwait pusha cmp push xor jl lcall iret xor cmp or inc sbb xorl mov sub cmpsl aad orb adc aas jo xchg jg dec ret adc jbe call and lret movsb mov (bad) lods and nop mov xor les daa pop and push mov mov es (bad) push js xchg adc inc stos jnp pusha xchg mov sub cmp mov mov testl insb fisub adc mov inc imul es and add outsl xchg jb add xor xlat xchg xor adc jae mov addl insb push fwait add js stc jle or push adc add push mov xchg pop aad add sbb jg cltd jle or sub movq mov pusha push pushf aad scas mov fs sbb divb jl fisttpl fcom or xlat inc cmc fdivl loop pop xor hlt pop aad adc in lret out (bad) mov sbb jmp call push (bad) or mov mov cmp xor ror xchg sub add insb jecxz fmuls clc jle xchg (bad) pop aam clc inc dec int loop lock mov sbb aad sahf sbb scas (bad) xor stos pop sbb test fidiv xor in mov addl or or push mul push insl jmp in inc sub movl or insb sbb and gs movl add ja mov or mov xlat and addr16 xorb xchg hlt jne imul test hlt loopne aas pop mov mov xor or repz mov jnp dec rcrb sti test hlt orl clc push xchg aaa cmp das jo loopne mov enter sbb (bad) sbb das (bad) sub add dec out cmp sub imul sbb mov ds xlat adc enter decl jo inc pop arpl pusha jo dec test iret push in sub lds imul aaa cmp movsl xor mov add jns adc scas mov shlb lea mov in mov inc dec cmpsb sbb aam (bad) jb mov xor mov sub push inc sbb dec cli mov adc loopne cli mov mov lret cmp jb stc push fs test mov dec mov rol roll mov test xchg lods stos xor and bound call or push cmc in aaa sbb push jmp mov int3 lret or xchg popa mov leave lock add xchg stc push mov mov in add cmpsl imul push lock mov dec daa lock lret hlt lret push xchg mov mov cli xor pop test cmpsb mov mov push and fistpll das add and jbe imul ficom jle dec pop es pusha add add xor xchg and or inc dec lods sbb jecxz push shlb inc push cmp add (bad) daa into or popa dec das daa mov stos pop es cld cld xchg in or cs mov xchg cmp out mov sti add dec fxch xchg repz pop cwtl je inc and (bad) push mov aas lds cwtl hlt add push mov push push popa and lcall or ficompl loope jecxz pop idivl cli call daa in in (bad) iret and sub cmp mov arpl jne decl (bad) mov fild pop jge and lods pop cmp fdivs (bad) test inc mov or outsl sbb pop xchg in mov or loop cmp (bad) outsb sbb cs subl fcmovnbe (bad) adcl sbb (bad) in inc fisubrl xor add (bad) lret dec cmp adc mov ljmp pop lock pop adc repz adc popa scas pushf nop sbb mov ret cwtl popa mov inc stos jmp adc out mov into adc outsl nop mov xchg mov mov xor mov sbb bnd movb or sahf jns jns mov cmpsb pop je sub xchg rcrb idivb sub pop out mov jge sti cmpsl lods mov outsl inc out xchg or xor (bad) xchg sbb mov dec jle (bad) jge xor cld divb leave xchg xorl cmpsb sbb imul mov roll lret or outsl adc mov imul sar push in nop jp mov fwait add test lret add add xchg pop xor add pop movsb dec xchg xlat jb gs xlat and pop add mov divps mov push xchg adc mov mov dec ss aaa jb lock mov pop sbb ret or xor fidivrl movsb ret dec pop (bad) fidiv cltd add (bad) lds cmp xor imul scas stc pop cmc sub lret repz cmpsl int cmc loopne adc fsubl mov pop mov and les clc insl inc jnp std mov leave in push ficoml lret jbe nop inc gs xor push clc out (bad) pop mov push iret insl (bad) int push fdivrp xor divps push lahf jnp inc pop mov psubsb sbbb mov xchg ret mov mul dec jno mov sub mov das aas jg push scas sbb dec cmp inc ljmp pop add cltd xchg scas push (bad) hlt js in mov sbb jo mov shll lcall push sbb das cwtl scas dec outsl sbb mov push and mov push push movsb xchg jae jecxz fbstp pushf in mov jmp sbb dec loopne out in and loopne daa mov mov mov mov adc test cmp or movsl add sbb les sub pushf movsl cltd out rcrb sahf (bad) or xor dec scas std hlt pop clc out (bad) sarl loopne xor push fidivrl ja jge cmp nop xchg mov or mov jle cwtl fwait dec fstps insl iret in (bad) cmc (bad) jbe xchg mov pop xor push fcmovb test shrb shrl in xchg jbe icebp mov mov mov iret adc mov test jb mov lock dec or pop (bad) push (bad) repz mov in xchg cmpl fs jne inc outsl loopne (bad) sub sti pusha (bad) (bad) push in add stos adc adc aaa sbb shrl mov repnz cmc adc xor out or outsb xchg (bad) xchg lods cmp (bad) jae sbb test cwtl mov xchg xchg cmp (bad) push mov ds hlt dec (bad) mov push icebp andl cmpsb daa (bad) rep (bad) and gs in je dec xchg lock push or mov out inc out jp pop stos push xchg addr16 fldl2e jmp das pushf scas test (bad) es sbb add cwtl adc (bad) sbb fidivl je pop inc pop (bad) xchg xor and imull xor sbb push add jecxz aam daa pop es in setl mov sub push pop ljmp and jl in add movsb fisub mov sub xchg xor test pop pop rcrl fwait icebp push dec sub or je call mov (bad) scas jbe shr push fnsave jle cs or sbb and dec lock inc push mov adc int3 cmp addl mov jnp ficompl or sbb imul inc rorb adc fistl or fwait loopne add imul hlt ficompl or in aad cmc mov jb inc xor call test data16 push popa ljmp cs cs or daa jno ss push mov mov fadds cmp push dec test sbb in push pop jge add ss std packuswb sbb sub outsb sub lods sbb scas mov inc dec (bad) dec fadds adc jo lret dec cmpsl xchg mov push jl (bad) leave push in xor dec loop xchg add add and shrl add mov (bad) xchg sub push xchg stos mov push aam lahf rcrl pushf adc iret iret push or lahf adc push jp jmp xchg (bad) ds adc jno lret mov cltd inc jnp out invd (bad) fsts lods jp inc and inc loopne stos ret pop push stos jbe jae add inc test (bad) imul pusha inc jmp out and fnstenv inc jmp mov mov scas ret in sbb das jbe add jmp dec arpl and xchg dec loopne ja or and mov add cmp mov adc mov lock push jns aad and lcall daa mov ret cmpsl pushf mov aam daa lock bound mov iret lcall mov aas push mov jb imul or ret add pusha psllw sub jle aad std ljmp sbb pop call js and mov sti (bad) int cmpb pusha add hlt dec movsl adc push faddl jnp out call pop adc add mov add stos dec sbb jnp test pop sti jbe std sbb mov push in out mov cmp or cmc cmpsl sbb shll rcrl mov dec cmp lea sub mov push fdiv lret rorl stc jns and add mov cmpsb int3 cld mov lods scas or push in imul (bad) mov xor pop inc dec jnp inc mov pop cld dec or fcompl (bad) and movsl adc icebp dec in pusha das xchg out xchg gs mov xchg leave and jnp jge fisttpl mov push xchg loope sahf testb popa iret cmpsb xor add add cmp loopne lock into (bad) push add lds inc xchg sub xchg andb jbe xchg xor cmp xor test xor pushf push fs sub and or push out mov leave mov addr16 or jo clc cmp or mov cmc xchg push sarb fimul lds dec pop push clc mov sbb shrb dec int in movsb jecxz mov fsts (bad) enter fwait inc jge mov popl pop lods inc or push aas addr16 lods incl divl and in (bad) nop or push mov outsb leave rcrb push lcall inc jbe rorl add fdivrl int call mov sub pop jg jne call das (bad) push cmp jns push fldenv fsubs (bad) xchg test es sbb aam aam add jle sbb push negb mov (bad) cmp test clc movsl inc test clc sahf roll push xor xor pop inc mov jne stos (bad) out rcrl jge rolb (bad) clc stos fwait cmpsl dec dec sbb sbb jp and jle cmpb mov sbb das inc (bad) jle xchg call (bad) or dec xor jl dec cmp call hlt decb int cltd cs pop dec pushf push shrb mov leave jbe dec outsw jbe das ljmp mov mov mov mov loop pop iret add dec dec stos jmp xchg or adc cs movsb sub out mov pop movl sbb and xor (bad) out or xchg jle push mov and mov xchg pop or sub popa xor mov fdivrl jecxz fistp jge movsl jl sub jo (bad) (bad) push adc frstor dec cmpsb jbe cmp add add das insb jle (bad) lcall mov push sbb loope ljmp mov dec add test mov shrl mov push adc xchg addr16 or aam and test lea jo out div enter sub lret mov cli clc xor insb add or imul fwait ss lret jle cltd push mov mov cld add and lcall movsb fbld cmp push popw es or lea jge or cmpsb popf jo push xor jnp in add (bad) cmp gs mov mov lock mov and push fwait pop push fldenv (bad) ss (bad) mov jo xchg fwait inc rcl cli lahf or adc inc mov pop repz mov mov and pushf sbb mov pop adc jge loope stc insl xchg adc fcmovne aad mov test dec xor cmc cmpsl enter or jnp pop adc xchg push mov in repnz mov sub outsb out pushl sub cmp test xchg mov jbe nop mov clc lcall inc push sbb leave jge add in fs insb add cltd int adc sbb pop test addb push xchg bound lahf lret in sbb add jne sahf and das cmp cmpsb popa jg cltd and xchg dec into fiadd decb pushf aaa stos imul xchg pop cmp sbb lea and adc push cmp lea cmpsb lret lret jns xchg sbb imul pop mov mov lahf lret movsl cmpsl mov das add popf icebp rclb jl xchg xor jo jg or mov dec xor adc cmp lods pushf adc mov cli add jo mov daa mov pop push jbe jge xor gs jl jmp add mov sbb sbb insb xlat aad sbb push cmp cld loop jl out mov jo push mov aaa cmp jnp push ds (bad) cld imul mov jle movl inc xchg bound (bad) jbe jne mov mov sbb inc dec or xorl lds pop in ss or out pop cmp pop out insb sbb push ret andb push fldcw jle mov jle (bad) adc or inc lahf sbb (bad) dec test pop push int mov or arpl int in lock and cmp (bad) mov fnstcw je push jg stos cmp mov loope jnp sbb inc in mov add pushf mov and inc jb test test arpl aas das xlat and lahf dec (bad) xor out sbb mov adc mov repnz dec cmp ds imul or sbb das hlt ss es mov and (bad) inc pusha dec dec jbe test mov enter mov test aad lret xor scas dec jnp mov test clc mov fist dec sub or (bad) call jle ds jmp jmp test pop sub dec fsubl lret dec rcr sbb fcompl and cmp or shrb xchg arpl jbe fbld ret clc xchg or lods repz push mov xor hlt sub add and das lret or out cmp dec mov or or mov xor mov add and sbb mov sti mov lds xchg sar jmp imul lret sbb aam xchg mov stos mov das jmp sbb sbb nop xchg (bad) sub (bad) das cli xor (bad) jo outsb insb add stc repnz sbb pop ljmp cmp and sbb jle mov xchg sbb lea mov leave clc jl cld pop loopne jge movsb mov movsl clc sbb aad cs dec jmp stos and pop sbb inc add data16 movsl movsb data16 punpcklwd and loopne xchg ja jo cmpsl xor mov lods sbb jge ljmp sbb mov inc jns jno and adc jle adc pop sbb and mov aaa and insl cmp push lock enter jb cmp adc stos and adc stos sti hlt repnz jae out or inc ds outsl xor cmp mov ror cmp ss lock and imul in push cmpsl inc jo pushf push xor movsb xchg dec adc mov inc jno mov (bad) mov notl nop or in sbb push imul or (bad) gs ljmp mov leave data16 insl and stos out xchg ja sbb nop jo das in or sbb jb jp inc pop push ror jne rclb cmp sub inc and adc jg pop inc icebp (bad) and mov fsubr fadds stos mov int add out lods or jns popf jge sbb repnz add mov cli xor rolb cmp push test inc pop lahf push lods cld push mov cmp test into out inc pop cwtl jne xor mov lcall add inc dec pop ds pushf adcb lahf in cmp (bad) mov out std mov in insl xchg jl adc rorb (bad) jns lret inc mov inc push or and pusha cmpsl hlt mov es push outsl push in (bad) in fstps sbb stos cmp cmp outsl push jle es (bad) int3 ljmp (bad) int dec pop out push and ljmp fistpl fadds push mov jg mov inc aam mov decl movsb mov aaa xor jnp fsubrl xor jnp stos (bad) or xor in pop gs pushfw sbb fistpl leave fs add nop cli mov or pop sbb ljmp (bad) je fstpt xlat dec or call mov jl pop adc inc mov cltd lret or lods or imul and stos push cmp or jmp or dec inc sahf xor xchg jb insl insb jge xor in test lcall push cmp icebp cmp sub jmp xchg mov sbbb hlt jo repz mov ljmp xlat and out dec insl mov pop xor pusha sbb cmc test mov fimull addr16 push imul add and dec mov daa xor jo mov lahf or test dec jbe call adc jbe sub js adc pop pop and arpl pushf add aaa ja ljmp add int3 jns pop cmp stc add or cld lret aad jnp xchg inc adc or lret inc adc cmp or fwait (bad) pop mov leave adc (bad) movb call sbb or cld lods loopne dec sbb and gs loope push mov cbtw sub insl cli jle daa dec jle add inc fnstsw xchg les movl hlt dec aad adc out pop xor push push mov lret rclb paddusb dec or jle outsl pop test xor mov jne mov (bad) jmp push cmp test pusha sub lods lods fisubrl dec mov fucomi sbb jno mov imul mov dec mov in or inc cmpsb fistp mov sub sbb sti out mov mov test push int subl jnp sbb cld andl fwait outsb in dec popf adc nop mov (bad) in insl push ret (bad) mov adc into pop add push inc xchg ja sub mov add mov inc jge insl in fdivrs nop jecxz in outsb ds cmpsb je jns mov daa rcrb pop jbe into mov sub dec push repnz ficompl cmpsb sub imul (bad) arpl mov and xlat cmpsl dec movups jno and xor std inc bndldx test cltd lods push inc in movl mov dec sub lret jbe pop cld sbb jmp add adc jmp adc mov xlat sarl push push repnz (bad) jo add fwait inc add and sub lods and and lahf adc (bad) mov aam (bad) pop sbb in mov insb push cmp inc rorb inc push daa insl add rcrb push mov mov mov test mov dec call push sub adc mov (bad) jp pop iret dec enter lret (bad) sbb mov fs add repnz in or cmpsb add daa push xor adc popf sub rcrb aam push sbb pop lret xor push jnp (bad) xlat sbb sub or mov mov mov add xchg repnz mov pushf cmp sbb ja xor jo movsl daa sbb xchg adc mov jp jno mov mov leave jo mov jp scas jns aaa adc cmp push inc xchg jbe (bad) fisttp sub test cmp sub lods push outsl iret sarb sbb jno in cmp xorb inc scas (bad) mov cmp xchg xchg (bad) es xor and and insl insl addr16 stc hlt fist test mov inc (bad) xor cmc jb (bad) mov in push shrb aaa rorl adc inc sub dec rclb xlat and xchg mov gs fcmovbe (bad) fwait arpl sti pushf ret cld pop jl mov add mov cmp cmp inc stos pop jne repz pop pusha aam in pop adc and es out mov xchg jbe mov jp dec pop insl sbbl int cmp mov push xchg adc or push lret cltd sub (bad) repnz mov cmp cld repz xlat hlt mov int test lret cmpsl mov or nop test pop jl cmp int int sub push fildl xchg pop push repz lods xor adc inc adc jp pop inc (bad) pop jne out repnz fistpl ja push int in inc inc imul and mov mov dec or pop (bad) icebp int inc test test lock push or add mov jg push xor and mov mov mov sbb pop cs add jae in mov mov jp adc mov jp int mov pusha sbb mov mov iret aas add jge mov pushl mov jnp mov lahf test cltd sbb jl movhps xchg inc insb addr16 (bad) inc scas dec loopne mov mov (bad) sbb xchg stc pushf aas lea ret push sti ret dec ret mov xchg xor jae mov inc pop mov dec imul test (bad) xor lahf push cmpb adc jno ds push or roll jae ret and cmp mov sbb in adc push cmpsb addr16 xchg or fisub popa inc jne xchg xchg sti xor xadd ret sarl in (bad) jl add aaa sbb jae jb mov pop pop je or or in cmp adc mov mov sbb out arpl aam loop and insl xor stc mov add cmpsb pop aas scas sub insl cmpsl imul lret cmp aas dec sbb je add or rcl inc xor loope cmp jbe,pt add imul add dec test jne mov int lock int dec outsl pop push scas popa add mov mov jmp mov jmp in jne (bad) in rolb (bad) sub shl daa push lods cld and fcoml sub dec lods cmpl clts int3 cmp imul daa pusha cmpsb xchg pop push cmp enter mov xor fxch or or jmp push add lds or cmp sub fwait cmp mov xor addr16 cwtl fwait xor add outsb movsb lods push jp pop repz fdiv or (bad) dec mov std sbb mov ss aas lds les mov es loope xchg dec cwtd and adc stos adc add push push cwtl insl mov jae jnp inc stos aam fwait ljmp gs xchg jo pop in cld push in aam les push cmpsb setge mov xchg stos aad out test sbb mov leave xchg lea or sub mov in lods mov mov ss push lds scas sub pop inc cmp xor and pop fbstp popa movsl cmpsb stos adc sbb mov add cli push faddl test cmpsb sar jp adcl jnp sbb push in mov repnz daa rorb inc lods shll xchg rcll and push sbb movsb jns (bad) sti jbe mov and push sub pop mov pusha addl test fnstenv xor xchg mov ljmp ljmp out movsl and cli movsb test mov push popf and aad mov adc or (bad) mov inc sbb sub xchg sbb jnp data16 lcall (bad) mov jecxz out daa push jo and call inc lcall outsl loopne mov ljmp push addr16 in jle lock cmp sub or test xor xor loopne mov (bad) mov popf mov ds jns imul mov lds int3 fwait cld sti (bad) dec in sarb (bad) jmp popf sti xor lret les stos sub movsl mov jle sarl and rorb mov sbb lods nop dec pop mov pop pop fisttp cmp jnp mov (bad) adc mov mov cs mov repz or push dec rcl add out xchg inc pushf mov outsl add sub aam leave xor jno sub mov lret add add mov or cwtl cmpsl or (bad) repnz adc (bad) sbb add (bad) xor and dec pop dec and test ret stos mov fldl xlat std shlb (bad) mov inc lods or inc jge orl fist push or aaa add adc in xchg pop xor shll push mov lret push ret arpl out pop bound push (bad) sub jp lcall lods pusha aaa cmp mov enter cwtl test inc jg lcall push test inc cmp das adc jnp mov mov lcall pushw aam hlt lret xchg fidivrl js rcr sti jg ss push mov pop nop mov dec fisttp push or pop notb xlat fcom and jb push lock push addr16 cmp (bad) sarl jae add fistl mov sub cmpl sbb add cwtl repnz leave es push add clc inc jnp testl hlt push mov dec (bad) loope sar pop ds xlat jl mov jb pop or mov repz fcomp lret cmpl pop mov mov sbb cltd jp fnsave sub loopne subl das xchg xchg xor cld xchg repz repnz push dec shlb lcall push das out pop imul xor push call pushf adc outsb mov (bad) lcall xchg dec popf adcl loop xchg rorb add or neg scas push fs inc xor pop lcall insb arpl test sbb push add xor ss cmp add dec andl (bad) sti aam dec xchg adc nop dec mov lock or jg mov cmc insl lea push xchg inc jge jne mov jne (bad) lahf adc stos jno outsl dec push sahf sbb imulb dec subl (bad) push lods sub mov adc stos sub adc arpl ss add mov addr16 push lods scas pop mov add push add cmp ja shlb fistpl mov or loopne clc enter (bad) sbb cmpsb pop mov mov frstor pop dec xchg mov popa imul and add and cld leave in (bad) sbb mov addb or mov test sbb mov out jbe adc dec jns icebp fistpl das enter jae (bad) xor pop cmp push cmpsl push repnz push negb test jne ret mov das movsl push mov mov std adcl add ljmp ret xor mov lods sbb jb data16 mov jb and bound aam push jb push int3 push mov xor xor repz rcrb int dec pop sub or mov pop gs push cmp add andl fldl jns or cmp xor fldcw cmpsl test mov hlt xchg out xchg dec mov movsb xchg pop inc lock inc and inc cs cmp push push pusha sahf ret and outsl jns lahf xchg loop jno inc xchg int3 pop and add adc xorl fwait or push enter int or and loop aam or sti lock scas inc mov aaa push int3 inc fisubrl ss insl dec xor mov xchg xchg jno loopne aam cmp dec cmp sbb sbb xchg or cmpsl aad adcl xchg add inc (bad) (bad) pop stc mov or fmul sub fisttpll lds mov into jne push das and adc mov das sub je jle sbb sub jnp push add xchg (bad) cmp xchg mov in mov (bad) xchg add push xchg sub test cmp pop xor sti sub or stos js mov jae pop fwait mov lods add movsl jp push add bound cmpsb mov sbb push push cli xorb xchg and jl push cmpsl aaa sbb (bad) xchg and add movsl cmp push in jno inc in mov and push jecxz xchg lret lds cmpsb or mov add xor sbb mov call (bad) stc cltd mov int aad andb mov in hlt es arpl and push pop push nop push mov fsubl inc (bad) ljmp xchg fsub daa int subb dec xor out movl sbb xorl (bad) pop push cmp pushf loopne dec into jl push adc loop fisubr stc ja sbb xchg stos jmp push loop (bad) js xor cld adc pop call mov fucomi jg push (bad) xchg mov sbb (bad) adc jne sub jp jmp sahf jge sti adc adc and bound ret dec in adc shll fwait mov jno and ds ds loopne call aas add movsl pop fidivrl inc sbb lahf ret inc adc imul lcall clc mov xor ja xor dec sbb mov dec orb push iret adc pushf insb roll sti scas jbe bndldx sub mov imulb mov xor cltd inc mov fs cltd (bad) mov (bad) mov rcrl fwait cwtl mov or jo jecxz test xor bound xchg cs aaa stos popa pushf (bad) fwait gs popa icebp pop pusha xorl int pop les inc xor inc (bad) negl adc jmp xchg cmp jge test sbb sub xor movups fcomp popa pusha sbb mov into rolb out xor in dec scas jno and lret mov or sbb adc call push pop stc loopne insb iret imul je jle xchg inc rolb (bad) xchg (bad) adc cmp aam xorl rolb bsr jne sub cmpl out sub cmpsl mov int movsl pushf xor sub lret insb mov sbb jnp jno and lock jbe pusha sub jnp out daa or les mov in jnp add xor lods dec lea cmc push push xlat pushf hlt dec inc lcall repz pop fsts fcomi pop loopne lock shll pop jne arpl mov mov dec xor gs mov adc add aam add xchg mov adc dec test ja sbb int pop aam icebp sub fwait imul sub shrl fwait in sti mov out cmp ljmp addl jmp xchg fwait lret (bad) sub jns cmpsl in iret jl jge test dec (bad) (bad) out enter cmp or das fsubs fwait cmpsl mov jnp cmp leavew popf (bad) xchg mov pop lret jb rorb or inc xor pusha pop or and in dec push hlt inc adc js cmp add jae (bad) pop jo xor xor aaa jo xlat dec xor sub clc movsb mov in push fldt daa inc mov out cmp inc ret push test js lret and inc jo push das xor mov or jecxz mov cmp pop in jbe (bad) mov and pop test xchg inc adc xchg in shr jb sbbb inc add xchg fs in and fadds inc jge (bad) mov fwait es pop jge cmp arpl hlt pop movsl push and jp gs cmp dec jb add jle push ljmp (bad) adc andl dec sbb sbb inc js or pop test or in je jl in jmp add mov adc lret sub xor jns daa cmp jl push xchg lds pop (bad) (bad) dec sbb xchg imul cmp ret sbb mov add in xchg call add lahf pop int rorb stc rclb and imul shlb stc pushf cmp test daa clc int arpl dec sets imul pop sbb mov (bad) in pop mov inc push mov mov cmc repz fwait into ja xlat mov xor aas shl data16 sub pop insl adc pop adc repnz add sub mov pop mov aaa or cmp ljmp (bad) push ds (bad) mov pusha pop lahf jb in ds dec and mov xor fnstcw or add das shlb mov mov xlat out xor (bad) jle ds cmp sbb addb add sbb into dec mov push adc mov imul jecxz pop adc out or or xor pop jge inc aaa adc pop inc stos dec add xor shr adc adc mov sub loopne cmp or aaa dec sub lahf mov xlat daa jb imul (bad) push mov cltd mov imul xor and jnp or push jp xlat cmp push cld or add push (bad) pushf or daa adc test dec (bad) fisubl jp push movsl pop push shlb mov jl insb jge popa push and push out fldcw mov jg xorb ficomp fdiv cli xchg cmpsb or add cmp orl sbb jnp cltd pushf rolb cmpsl or inc aaa test pop add cmc push out dec mov repz inc cwtl pop add push (bad) jns sbb shlb fcmove lds mov adc fdivrl movsl xor dec test cmp lds daa lock sarb ror mov add jne adc and dec outsb mov sub in das popf out or cmp sub or xchg and mov mov sbb xor fmuls push cmp aad and mov in and push push jecxz cltd test enter leave lret pop arpl mov xor mov mov addl stos leave mov jle cmp xchg std or sarb mov xchg scas loopne ret sar test mov in das cmp jecxz (bad) fwait sub sbb or scas inc lea dec inc cmp clc stos mov inc rcrb lahf pushf mul movsb lock mov mulb nop mov cmp pop or inc and insb (bad) jl out outsb movsl cltd lods sbb sbb jnp push es pushf orl push cmp xor fidiv mov testl jge xchg mov call adc (bad) movsb mov (bad) mov or mov clc sti fldt outsl inc xor dec into loopne test mov test dec ds loop xchg inc push nop lods fbstp xchg cmp dec xchg sbb sbb inc jo pushf add dec cwtl or (bad) sahf std mov js (bad) (bad) pop (bad) add cld adc push or push jo (bad) aas shrb or jl add pop cmp rcrl push sub fdivrs inc das mov xlat loop mov (bad) mov or pop out ljmp add mov repz push enter cmp mov sti dec mov xchg call pusha adc jno pop je or xor sub push sbb push cs fcomip enter pop inc lea test in mov je sbb push cmp gs dec daa sub xor sbb movlps xchg insl cmp sub rcrl push repnz push xlat mov adc or xchg xchg push xchg xor call push inc mov sub adc or inc nop lds in lods lret and mov (bad) sbb in mov fnstsw aaa xchg daa lods mov lret mov (bad) cmp (bad) xor sbb nop xchg test mov sbb enter jge arpl add fmuls add aam mov xchg pop push es icebp rcrb and mov pushf jl cmp push and into sub jge test add pop popf jbe ja cs test test adc sbb mov lods mov pop stos mov nop mov xor xchg or jp mov imul (bad) rorb cmp push cmp cli mov insl dec pop adc in das js add cs jbe int call aas cmp pop sar push jo dec mov xchg xlat adc lret pop mov pusha icebp fisubr mov jo pop (bad) stos jb aad push sub mov (bad) mov xchg dec mov xor lea pushf or fistp ret imul jp mov out sub adc pop xor or xor bound fmull add or lods enter jne ds mov add push aaa push cmp das stos orl ds and out mov jp cmp stos sti test jne loop or push movsl xchg ret lock data16 (bad) pop push adc mov push mov ror aas jp pushf pop or (bad) inc sarb es das int3 sbb jnp mov loopne fsubrs imul add dec dec xchg xlat pop mov pop fild into sbb jmp pushf addr16 enter outsl rolb fmull jg stos outsl lods scas mov leave cmp enter fdivl add leave fcoms xchg (bad) jne fnstsw add adc int3 ljmp cmpsb pop cmp cmp sbb mov push push jmp movsb out sub mov hlt clc std je mov fsub addl lock xor add enter pop and lret mov lods and jge xor out add inc cmp int in aaa jbe dec or inc lods inc testb jge mov int3 xchg inc mov jne jmp insb repnz fbstp (bad) cvtps2pd mov jmp or xchg dec mov mov add mov adc subl lock push cltd insb add mov push fs sahf mov stc les scas push sbb std fildll clc jne push mov push dec pop sbb xor jo arpl mov stc xor test jno jnp jle cltd or xor sub cmp pop and xor pop xchg out nop lret push stos mov lea imul push shlb mov push out or or gs xor jnp loopne lret imul push leave jnp loop jg test jo adc jne rolb mov clc loope xor mov fdiv adc insl pop lods mov insl jg decb scas pop cli and sbb addl std xor mov push (bad) cwtl shll mov addr16 popf clc fwait mov or popa (bad) inc pop and mov xchg mov ja scas sub popa push iret in (bad) jo or dec and pop pushf ljmp inc (bad) (bad) cld inc cld adc mov sbb mov adc imulb pop lods sbb aas xchg mov add xor or mulb or sbb mov jo sarb or loop push add aam aam and push int3 rolb mov pop scas arpl data16 xor push ss push repnz push cmp mov mulb int xor pop push jbe sub mov xorb push adcb jo dec mov int jmp dec jbe and inc cmp ret hlt sub adc ror sub shlb xchg addr16 imulb test inc sub lea xchg jbe add add data16 pushf push adc xor popf or and push sub ret add fdivl inc cmp xor (bad) icebp in cmpsl call add jbe (bad) mov lahf fldcw push fucomi repz mov fmuls out mov and cli (bad) mov add lcall push cmp cwtl push iret jo lret cmp mov sbb imul cli mov pusha lahf mov leave mov cltd ja sub add shrl adc push in push pushf cmp push sti repz mov jns loope imul (bad) cmp mov xlat stos movsl xor push fisubl and cltd sub ficom call shrl stos xchg jnp push mov fbld xor add mov (bad) mov push mov orl loopne mov inc loop loope xor dec mov adc jp orb aas cmc outsl inc push jmp in xor xor sub in imul pop inc add jns xchg xchg scas add add or cmpsb pop push adc or pop std out adc and sbb lret or mov (bad) cmp dec cmp test xor mov and icebp aas iret xchg test pop lds jle ljmp sub rcll jmp and fildl pop mov rorb and scas push adc pop dec ret nop mov xor nop pop adc cmp lret cvtps2pd cmp cltd xchg aam sbb sbb jo mov in jg aas lret add test in or push jge ds cld dec fnsave inc pop sahf push mov add dec push mov fucomip je ret arpl loop clc mov sbb push (bad) fsubr mov lret add fwait negb pop sbbb in cld aas mov mov pop leave pop mov aam dec movsb and insl bound les stos arpl dec adc add aad pop mov mov in or repnz or add mov clc mov (bad) or ret pushf int3 cwtl imul mov jb mov lds fwait add jno (bad) lock mov xchg dec push mov mov pop push mov inc lret inc mov lods fcmovu fbld xor mov pop paddb mov inc push xchg mov fiaddl jg jge pusha cmp (bad) out jmp fisttp or call push cld cmp hlt or sbb insl lock imul icebp xchg xor and fs int mov adc fs (bad) push mov sbb mov rol ja hlt or inc adc xor stos mov push push mov xchg dec pop adc loopne lea rorb cwtl bnd int3 cld push mov jg,pt add cwtl or jb jecxz add pushfw arpl xchg jg jecxz orl call je mov sahf cmp test jecxz int push (bad) lock xor dec pop mov shrb sub (bad) rolb add cwtl cmpsb lahf and aas rclb or add fidiv sbb xor fcompl pop cs xchg scas and dec push xchg push loope mov add pop enter push xchg movsb add add jnp ss add adc jb pop cltd or xor ljmp jecxz repz dec (bad) lret xor pop push pop xchg int cwtl mov xor add adc rcl xor push imul dec push or ret dec or jne jp jmp ljmpw mov outsl arpl cmp pop movsb add shl jle mov pop nop pop test imul mov or push xchg push jp cmp xor jns sbb mov mov jns data16 (bad) xor mov add mov mov es incl out cmpsl mov mov fcoml pop sbb sbb int3 mov arpl out movsb adc cmc bound rcl push push loope mov or nop ss pushf mov xor aam fidivrl out insl ret jg aas (bad) mov jp js jl ret das lea aaa mov clc adc fisttpll sub inc cli rorl rolb dec mov repnz jl cmp fmul mov into aad loopne pslld inc cmp cmp in adc sbb add mov loopne fiaddl adc push pop ret pop and mov imul lock mov data16 or and xor cmpsb mov add jl adc fdivl sub ret (bad) xor push (bad) or or dec cmp adc (bad) test or out movsb cmp push add mov clc imul call mov xchg mov xlat add sbb es ret sti std adc es add fiaddl xchg movl cltd sub mov sub mov scas fsub lret jle pusha jae jecxz inc cld sub aam jle addl sub stc lahf sbb dec fwait es xor mov in in push leave in arpl lret jbe pop scas dec lods cmp and aam inc hlt lea popa clc adc sti lods ljmp xor stos in fcompl pop xchg shrb dec inc jl inc movsb mov push lods mov fucom and aas ret add test push mov xchg mov jnp pop sti and aad jl add mov rcr sub rcr fwait dec cmp jmp dec jo aaa dec imul mov dec cli mov lods das pop hlt repnz sbb cmp sbb out push mov pop imul cmp cmpl popl xor pop or notb or dec sbb fwait push nop aas add jo mov mov fs leave add add sbb pop push fwait jl or loop outsb cmp sbb sbb mov mov push xlat xchg js fs pop sub hlt leave inc (bad) dec rcll test xchg dec test adc pop adc push mov sub loope pop sbb insl nop inc aaa jle or aas movsb add cmp and push btr xchg adc ret test pop mov adc (bad) lahf sbb outsb je sub js push test pop enter sub fst mov data16 adc stos mov sub or faddl in fs clc pusha and push popf cmp shl xor pop movsb adc push out push int pusha scas mov pop or adc in jb pop adc js popf imul lea out jbe in cmpsl add inc loop bound adc ret mov (bad) fdivrl inc lret lds xor and insb adc and pop inc nop sbb dec mov dec es cs xchg push jl mov jae (bad) cmp iret mov outsb push dec push mov push inc stos add in pop test fnsave lret mov rcrl nop jae cmp js scas gs sub cmc (bad) and lcall push add add or pusha cmp or dec dec iret push xchg sub cmp add out (bad) sub ja mov xor xchg mov bound in xor xchg jecxz jne mov xor mov hlt push push lcall mov mov fildl int rorb lcall pop test push (bad) mov and mov push aam and loop out mov mov dec bound push xchg jno sub sub ss fstps rclb mov pop das inc mov add mov mov stos int (bad) es push repnz pushf inc jno sahf jno lret add aam push xor in arpl and stos push add mov jbe dec data16 jnp jecxz enter xchg xor inc ficoml push mov pop ljmp lock js mov out lret add add push push mov inc xor push mov imul xor inc jg shll ss jl addr16 push mov jg or jnp inc xor dec jnp rclb loope fs pushf sbb xchg stos enter pushf dec bound pop (bad) mov adc cwtl popf rcl test xchg rcl jge sbb (bad) mov jo in sahf fnop xchg (bad) (bad) mov dec call iret xor les imull cmp subl or jnp aam pusha jo pop or pop roll and int inc jb lods call pop xchg mul jmp jne ficoml or xchg add sub es andl inc dec xchg pop inc outsb (bad) pop jg xchg ljmp in xlat outsb mov sub les in inc popf jbe or add lcall (bad) movsl lret ds bound pop stos mov iret aam or xor mov int inc ss push adc sbb (bad) add pop lcall xor ljmp cmp jmp (bad) sbb mov xor mov lock pop mov cmp mov and je cwtl mov xchg dec mov ljmp (bad) stc (bad) test sbb mov sub push or (bad) mov or xor inc (bad) jecxz fsubr fmul mov mov xor cmp rolb sub sub hlt or mov pop jl adc mov out jns test fistl xchg cmpsl rorb lcall mov das loop (bad) call jns pop int lea and jmp and mov stc mov out dec stos rol push push sbb jge and stc hlt or push notl mov movsl mov add fnsave es push xor cmp fs rcll js vpand and mov or fsubr xor rcrl stos jo scas stos aas add cmp pop movsb sub scas xchg jg add dec cltd mov mov or enter andl lea cmp push sbb fistpll mov (bad) jecxz inc lock inc cs ret adc lds cmp js bound inc pushf mov jp arpl or shl pop wbinvd cmp ds sbb les daa pop push or pop inc je (bad) fsub test (bad) xchg scas outsb cwtl aaa lock test inc popa (bad) pop xor in nop mov into stos pop stos dec stc aas jl add inc stc mov sarb sbb gs jae xchg add enter adc push dec pop (bad) fwait xchg nop sbbb movsb xchg jl or xchg adc jbe sub jmp xchg lret cli test or push or cli add lods dec fidivl jne pop jb mov push (bad) push (bad) xchg push aam lock stc das test leave subl aam (bad) xor jnp add adc (bad) aas add pop (bad) hlt inc dec leave jge sub and (bad) (bad) mov jb cltd jnp popa pusha leave mov sbb out sbb dec sbb pushl (bad) mov sub jge mov add fwait lods sbb mov dec xor push sbbl push je inc arpl push leave inc push or sbb sbb add addr16 popf lods loope rol (bad) outsl push cmp fwait jmp ja push imul sahf cmpb test ret (bad) stos repz or pop sahf mov add jno es or push ds mov mov dec jmp lahf aaa xchg fsubrl mov es (bad) mov std inc or test hlt push rcrl imul (bad) push movsl or inc lcall push cmp clc sbb mov or outsb in stos jnp enter pop jne pop mov xor ss clc add mov scas icebp add movd mov inc mov sbb lods and into jne and jecxz lahf int3 sbb mov mov mov mov stos mov mov jle dec mov int adc mov sbb clc dec ficompl and scas mov movsb imul xchg push add sub cmp mov adc es mov sbb rorl fisubr xor mov sbb fiaddl jne rcl fcompl inc inc jne loope lret mov xchg xor inc sbb test imul ja nop daa jno mov test sti mov lcall int rcrl cmp dec aad or aaa xor cmpsb cmpsb sub sbb cmc cwtl outsb adc sarb pop jge fdivrl dec push fimull pop hlt imul inc pusha out push enter lret sub sarl pop sub inc subl int xor inc pop out sti movsb dec in cli and call outsl enter add mov jns cmp cmp xchg jae int in add dec or and rorl mov fwait sbb jnp jecxz or jbe roll fcmovnb daa pusha cld lret add xchg inc cmp and test rolb ljmp add ss loope jle or lock fwait pop rolb jo fisubrl test xor cmpl inc nop in sub jo sub fld pop or sbb inc mov bound xchg fs (bad) mov fs xchg or sbb movsb mov and les aad addr16 negb jecxz add and (bad) (bad) xchg cmp mov xchg les in sbb lea std inc sub sbb nop cmp enter hlt stos mov add cmp or cli jb or mov jo pop mov and addl sub insb das inc pop sbb fisttpl sbb cmpl lock pushf hlt addl cmp xchg (bad) int jne shll clc mov xor jl lock mov ret or aaa out pop clc mov aad pop js repz pop mov data16 pop pop fcomip cld xchg jle pushf pusha jle dec mov aaa ljmp jge out cli mov fdivl mov inc push and mov mov stos mov imul jle,pn mov lret ds cld sbb loope das mov insl mov adc in jb cmp mov out push inc gs ret adc xchg ljmp clc and sub adc fwait dec dec test dec mov cmp sbb (bad) ss test push jno push adc cld xchg imul fisttpll mov iret dec jp inc and lret lds test iret inc mov jmp call jnp cmovg xor push jle (bad) pop cs (bad) jo push or loope pop scas aaa fdivp mov loop (bad) cmp rol push cmp mov insl mov loope aas repz inc add pusha test in push (bad) out in add add lahf loope mov cld rcl (bad) aad cmpsb fwait lock mov bound (bad) pop lahf adc mov mov rdtsc fcompl jnp stos dec cmc fisub mov aad pop popa mov mov mov dec outsl pop loopne (bad) mov jecxz dec dec pop ljmp jns in push cli cmpsb andl jbe cli xchg call mov nop push stos call add or loopne call adcl inc and rolb leave xchg ja pop sbb bound lret xor xor mov lods xchg pop inc jnp lds hlt add imul (bad) rclb sub adc sub push sub cwtl dec outsl lahf cld imul dec and inc push ja mov pop test push into sti faddl ds test lret popf orb sti xchg insb mov mov or mov and sbbl ret or (bad) in or scas xchg xchg sbb jno adc sarl data16 mov lcall aaa addr16 adc cmpsb shll pop ss jle hlt bound xchg mov lods pushf or jbe mov mov call xchg repz mov in scas add movsb in cmp pop inc pop lahf push aam push jb or test xchg int3 xchg sbb pushf sysexit shr inc mov jle jae daa mov lea repz cmpsb enter fwait lock rep jmp and lods sbb test mov jo lret jo (bad) cltd jne push sub push dec loopne jl sbb mov fsubrl repz lcall push (bad) push adc cmp mov add fstpt (bad) sbb bound sbb das jne jecxz fstl imul pop movsb xor cwtl dec popa outsb jo inc (bad) outsl scas movsb cmp jns mov cmp xchg mov dec in sbb aam mov or out push jecxz das shll movsl xchg adc mov out add sub cmpsb add (bad) ss xchg ret out loopne sbb ljmp lds cs sarl xorb push adc dec push jge (bad) sbb inc adc or xchg lcall adc push inc jmp (bad) rcrb mov hlt mov cmpb jb imul lahf fnstenv test mov cmp dec jns sub insl push sar jecxz imul jmp mov mov jae pop push (bad) mov iret jnp mov enter cmc mov jl in jbe test daa pusha pop imul data16 leave or add adc aad mov push xchg test cli mov out inc and int and push bound mov add inc mov sub mov mov xchg cmp call mov add xchg movsb repnz daa ret xchg pop sbb icebp sub dec jb push rorl inc pop in test add popf xor cmp mov cmpsb in push jo data16 mov inc jnp add xchg sarb dec lahf outsb (bad) pop es cmp add stc das cmp xchg sbb inc push cli sbb cmpsb sub (bad) enter test dec inc inc cmpsl sbb dec mov dec bnd jmp ss sub mov pop mov mov jb,pt sbb lret push push mov adc xchg sarl xchg ds fldenv xor loopne add arpl daa ret dec lret call xorb cmp cld jmp adc shll dec xor mov mov pop hlt mov dec stos xor dec test or mov xchg xchg cmp lahf sbb fbld add xchg inc les xor fwait bound fwait sbb fld test mov inc jbe pop ret or or fs push add jmp push fwait icebp lahf sbb lds call inc test movb adc adc jbe pop int leave pop pop or push add fs sbbl in mov sbb lret push orb in pop inc dec mov xor addr16 push cld hlt pop xchg mov stos das insl rolb xrelease gs and push pushw xchg lret out cmp or ret movsl mov mov popa mov adc adcl lods cmp ds cmpsl movl dec inc push (bad) shrb cmp movsb or stos (bad) mov sub push or push or aam out mov clc add and jg aam xchg xchg jle stos xor sbb stos add cmp inc and aaa (bad) (bad) sbb fiaddl push adc repnz out mov ret hlt push fnop sbb sub hlt mov movsb enter add out test mov rorl adc push das push sbb pop push in mov and dec mov sub xchg mov sbb pusha cmp jg sahf dec mov test or pop scas pop sbb pop xor in popa sub ds (bad) ss shrl aad inc out jo adc ret sbb ljmp ljmp dec cs mov push mov jnp faddp or cli and fmuls jge push push jnp test ficoml andl in mov mov lret pop leave shll mov (bad) out xor inc out enter mov dec imulb mov insb cmp mov push xor xor aad add sbb dec jnp mov sbb sub loopne (bad) mov jne lods xor aad leave loop inc sub fwait add xchg and in sahf jne shl cmp fcomps and pop jle or add (bad) iret (bad) cmp in cs jge rcrl aaa fwait pop dec test fistp mov mov pop mov jg xchg out iret fnstenv push ss xchg lcall and or and pop sbb in subb sahf mov loopne sub push movsb std mov mov mov or scas pop cs inc push mov sub rolb cmp pop xor (bad) pop mov ret jmp stos and (bad) fcoml insl test js arpl add pop dec xor mov xor (bad) pop mov insb mov test mov imul jbe cltd jg div adc stos push xor push mov das hlt lret aam jg daa jecxz or gs sub jo dec add mov inc add int3 sbb imul or and push jmp pop xlat clc cwtl xchg cmp mov push dec mov hlt fcoms lock (bad) aam push jbe xchg mov cmp aam rolb or js pop jb test cmp pop dec xor mov push push add sub je cmp mov add inc sbb xchg pop add push and or movsb inc xor dec sarl inc mov jmp dec push cmc sbb xor cmp enter fistl push stos pop sbb sbb and and fwait push loopne (bad) jg adcl push pop inc outsl daa or push bound mov gs out mov insl jg ljmp jbe (bad) mov cmp sub aaa adc fsubl in jmp leave mov push cli in aam mov retw mov mov stos mov (bad) pushf sbb sbb (bad) lods add xchg and movsl pop and pusha sti sbb adc mov or xchg push movsl daa (bad) add pop inc xchg loop sub sbb imul mov cld xlat ret mov dec sbb loopne jle cli addb lods (bad) add inc icebp daa aad and push (bad) jb out jne sbb mov ret (bad) dec (bad) leave jbe jnp mov popa movsb in ret sbb pop inc jmp xor push rcrb jns xchg es in lahf inc sbb outsb mov nop popf or in ficoml dec movsb test mov mov stos xor jbe and aam xchg (bad) xor fsincos adc mov cmp in mov mov imulb lods mov out repz or and (bad) (bad) push dec pusha xor or mov sub xor (bad) cmp push cmp ret in jp std fnstenv jge mov popf mov adc cmpsb pop and push je mov sbb out cmp and int3 sub movsb mov gs in push (bad) jge push mov and test enter push cli xchg cmp (bad) call dec xor jg push sahf call push mov or lock xchg jl xchg (bad) xor push jmp ror cmp mull dec fisubl sub jl pop pop or push xor xor adc inc ss enter inc push cmc jg fs jp icebp mov not push cmp xchg or outsb xchg insl loope fwait inc lock rorl cmpl cmc dec loop pop test lret into xorl push shrb push orl (bad) out pop call ret mov jl jg in pop pushf cmc mov inc mov mov or xorl (bad) je push lret sbb mov jp mov add mov sub clc aam push enter dec push je pushf inc test aad and out push bound aas cld mov (bad) hlt xor leave aam int lret sub or jge push xchg jo sbb add or push pop ss adc pushf mov xchg sarl mov xchg pop pop jp pop mov hlt je (bad) sbb loopne mov lods jbe add test jle lret pop fadd out add xchg jo sub (bad) mov in pushf movsl pushf mov add rcll ret ret jne pushf inc roll sbb inc lds int sbb or ss imul xor push popf adc iret clc or lret lret xor sub xor cld inc pop subl mov and adc add cld shrb (bad) and lret xor loope cmp cmp sarl pop aad push test inc sbb adcl sub int3 and lret int xchg jle lock jns aad sbb out xor inc addb sub dec cmpsb das cli and push mov jecxz sbb popf add push mov or push popf movsb pop bound pop pushl bound sbb pop std repz loop inc ret (bad) aam jne sub rolb addb or fstpt pop daa loop pop iret push adc stos outsl test insb xchg out xchg jo sbb data16 outsl in rolb imul sbb jmp cmpsb dec sbb mov nop pusha andb in push test fsubrl shlb cwtl push arpl dec repz rcl add cmpsl jno jb add pop movd or pop pop lcall sbb jle add addr16 or sbb cmp sub push lea lods sbb (bad) adc fs aad outsb ret jbe or test or imul sbb inc lcall fwait pushf andl xor xor push out xlat push xorl repnz add dec cmp insl data16 adc push lock pop stc mov popf inc inc xor add push int mov cmp in cmp into cmp fsubp pushf sbb fistpl pop aad cs outsb mov popa jle fisttpll push stos jmp push sbbl lret ds ja aaa jle daa das push jmp or sbb ds data16 sbb in or loope jo lds jle ljmp xchg pop sbb xor popl jno aas (bad) xor inc dec div sbb sbb push add lods sbb push imul mov add nop sbb lahf push push fistp insb sti mov ljmp mov adc (bad) xor sub cmp push fsubs add outsl nop rcll xchg or add pop clc sbb mov cmp and aas shr push lds push xchg je adc sub rcrb bnd xor pop xchg mov lret pushf icebp pop inc xor and push aas mov loope push cmp andb add stos inc cmpsb jno aad test fsubrs mov cmp mull test aam fmul xchg in sbb add pop xchg adc sbb rcll pop mov shrb and xchg adc or jo xchg push das and mov sbb pop inc leave shlb mov lahf je push inc inc add lret xorb jmp or ss test hlt pushf shrl mov push inc imul cwtl jl cmpsl or rclb inc mov or int3 cmpsb push mov aas jno hlt fimull loope dec push jns adc or pop sbb sbb xchg or dec in sbb cmpsb cld pop (bad) fwait mov dec pusha fs fnstcw push cmp push pushf push (bad) mov pop faddl test mov popf sbb lahf and cmp lock dec cmp adc insb addr16 test inc jb in sub or loopne jb mov aad mov data16 and mov fidiv je pop repz pop das popf xchg pushf pusha mov push sarl mov add inc pop addl jb into pop lock jp add add (bad) (bad) xchg mov jae or bound (bad) mov add into xor add cmpb inc enter (bad) or sub ds cmp (bad) decb push add scas ret popf jmp lcall lret ljmp ret and (bad) or sbbb cmp xlat test cltd or push popf stc aas lock sbb ss jae add dec (bad) pushf cmp sub outsl call xor adc sti fwait xchg adc dec xor in sub cs adc repz (bad) aam cwtl test pop lret mov inc push xchg jg test adc stos pop jg adc cmc jbe mov jmp mov add fidivrl or das xchg out or xor inc jg or stos sub sub rcrl xchg xor jbe (bad) xchg fadds repnz (bad) lret sub jle sbb mov xor push xchg cli nop xor add xorl and cmp jns test iret dec pop rorb div xorl bound jae scas pminsw test idivl pop jbe adc mov push fs ret (bad) negb jne repz adc (bad) jne and lods cmp loop repnz les sbb ds (bad) fnsave mov mov sub pop sar mov or ret inc mov pop cltd fmuls neg mov sar aas test pop xchg enter jge inc hlt rol data16 jne,pt test sub xchg xor rcrl je ja or pop cwtl rorl scas mov fildl stos xor mov clc or hlt adc loop les movl ljmp in fsubrp pop lahf adc cmp push or and jne xlat sbb popa inc jns cmp cmp clc jbe dec inc xchg cmp imul fnstsw cmp jg add sbb inc push xchg jnp mov outsl (bad) sbb xchg dec pushf sti inc xor jno sbb jge mov and add je in mov jmp sbbl mov sbb and xchg outsb in push leave jnp sbb movsl lods insl ds or ss out mov or mov push cmp popf push fcompl mov xor xchg fldt pushf (bad) sub lahf sbb (bad) mov sbb scas add out pop add mov mov push or fcoml jae ret add jle sub mov pushf mov loopne cmpsl jb mov xchg pop push (bad) call sarl cmpsl inc lcall rcll test lods clc pop sub sbb add add cli mov (bad) xor mov ljmp (bad) rcll cmp in pushf outsl dec negb mov gs mov mov add and fwait lret jnp adc jo adc ljmp jp cmp lds push push mov inc dec push sbb cmpsl or int dec sub aaa int lahf mov enter (bad) cmp sub cmp loopne pop mov cmp inc xchg lock in jo adc leave mov or sahf (bad) mov aas add test dec sbb cwtl push fisttpl jmp add loopne or aam mov ret push ljmp test pop add fisubl fstps cmp mov pushf gs cmpsb cs lods fs mov xchg (bad) push sub add or scas ret aas sub enter dec repz jge sub hlt sbbl pusha sub nop push movsbl sub cld push sahf test inc push ret sbb jbe out mov imul movsl push movsb data16 mov ljmp pop cmp cld inc dec mov and xlat xchg movsb lahf ljmp dec aaa jbe pop (bad) jmp inc imul ret cmp and leave call jo nop das mov loopne push push sub shl mov inc pop cs push mov cmp jo lret mov lods rsqrtps sub mov cmp mov pusha mov mov jl add and sub shlb sbbb mov jbe es imul mov movl lds repz das adcl popa fdivrs and add inc adc mov movsb ret insl push mov out cmpsb fsubl mov jnp pop push cli mov push sub jo divb outsl sub daa (bad) jae or dec xchg adc out jno sub inc gs adc mov (bad) ss or add mov das cs push sub xor jecxz pop xor (bad) push pop lods inc cmc xor pop call pop cmp stc je cmp (bad) jns test pop cwtl stos jle mov iret ret mov or out pop sub cmc mov lods sbb mov je mov nop ror in jb pushf mov (bad) pop pop push mov movhps dec adc test out out lock sbb xorb nop cmpsb xor repnz pop sbb pop inc dec sbb mov mov pop je je inc adc call ss pop shrb aaa xor ret (bad) jnp lahf sbb loopne clc rorb cld jae (bad) addr16 sbb lret xor lods inc or adc push (bad) outsb adc dec dec add pmullw jno in pop or fcoms xor dec enter inc push push cmpsl jl mov insl call mov mov ret sbb or jl mov jae sbb lods cmp les mov sub dec sbb scas int3 in bound ficoml insl jnp cmp lahf mov jo (bad) cli addr16 stc mov jb mov test mov sbb push je into mov dec (bad) jbe pop jnp insl mov inc mov leave stos sahf dec dec pop loopne (bad) push jb mov mov fcompl xchg xor inc es xlat mov jne mov or push xchg dec and and adc enter imul cmp popf and in xchg inc je inc mov sub and ljmp mov ret addl or addl bound push jns or in aas add mov cmp jne cmp cs ss imul xchg outsl fdivl sub std les adc in mov xor inc and sbb scas lret in xor loope add shrb adc push mov lret or cmc sub cltd mov push or or jo or dec mov push dec stos cs xor pop sahf and dec push push sbb scas cli nop inc xchg nop xchg sub and lods pop cmp lret mov divb push insb jge xlat and cltd xor xchg push jge sbbl push not sti scas xchg repz inc mov jne sbb sarl outsl int lret jo push inc adc loop mov jmp jle bound mov sti or in cmp (bad) loopne sahf jne push inc out rcl lds mov sbb or sbb xchg add jnp stos sub stc xchg bound inc sahf data16 xor out jbe jo int clc jle dec enter or dec (bad) arpl leave add mov sub int3 mov (bad) push (bad) cmc insl mov (bad) js std sbb (bad) cltd ret add daa cmc or outsl out subl cli mov les mov out xchg (bad) rep sub sub orb std mov add aas arpl push push lods insb jae outsb (bad) fdivs xchg mulb lods int3 sub push and bound sar push lret or jp mov pusha xchg rorb xlat or movsb or clc xor mov mov push ret das lods xchg das sub in jnp roll out and xchg sbb pop mov mov pop stc xchg sbb jne mov adc (bad) movl nop push in pop xchg sbb orl or add pop mov cmp mov push mov inc addr16 inc movsb lcall (bad) xor outsb pop loope push mov sbb test negl add scas add push (bad) or adc sbb rcr orl xchg jns insl inc or push (bad) mov out adc jle mov add in mov add push test test out mov pusha inc pop popa jg fldt jle je loope push ret mov pop sbb mov es cvtps2pi inc or scas dec cli movsb mov dec sub shl int3 add pop in dec or popa aad mov bound loopne lods jg xor pop das lea add mov xor ret out (bad) (bad) addr16 pop dec ret punpckhdq fnstcw mov int3 cmpsl sbb outsb mov clc mov shrl push pop rcrb mov aam in cmp stos pop lea mov pop cwtl in cmp xor add mov daa pushf jge or mov mov mov dec pop xor dec repz clc mov insl aas inc lock adc jge add es lods pop xchg jnp lahf push sbb mov (bad) mull jb imul sub or neg hlt das movsl shrl fisttpll push push insb xor xor add ljmp sbb dec andl lahf jb push xor cmpsl inc cmpsb sti movsl jecxz test imul hlt fistl orb out mov add cmp test pop push ss ds mov xor sbb sbb ss add xchg movb dec ds add sbb add or mov mov sub dec mov imul pop imul sub or (bad) mov sbb sub mov pop and xor add (bad) push mov in test fs pop (bad) or pop sbb mov jnp mov push mov test jne sbb nop out add jmp bound xchg insl shlb pop sbb push pop lock movsl adc dec mov or jg test lods lds pop jle out movsb pop jp lock pop pushf popf lods lret insb or cmc pushf movsl imul inc dec inc loopne lcall (bad) icebp cmpsb lods mov notl xor sub add stc rolb adc dec jbe cmp hlt inc stc sub repz add or add sub push xchg pop adc popl sbb inc sbb push data16 inc cmpsb pop adc pushf jge (bad) and fildl in jnp or cmp jp mov pop rorb mov (bad) insb xchg in and xlat js sti loop cmp test cwtl loopne fnop (bad) mov mov (bad) mov mov and inc lcall fnstenv push adc pop add push cmp xor mov dec jl mov and pushf push add xchg or testb add jo outsb push gs cs fisttpll inc stos (bad) test es fldcw aaa jp (bad) pushf or pop mov mov push dec push loope,pt xchg add dec jp bound movsl in pop sub lods fcomp mov and xor sbb out enter xor in (bad) xchg out sbb aam cld call cmpsb out in or push cmp clc mov mov (bad) je jg xor jl jnp jbe adc xchg push leave (bad) lret xchg stos sbb in movsl xchg add sub mov adc frstor test aad jecxz xchg mov (bad) adc into sub stos pop sbb jp inc jg (bad) int bound jae add adc jnp,pn fwait fs sbbl dec or push mov sub or ds pusha icebp jecxz xchg push add lahf jl jbe,pt xchg jb (bad) test lds shrl jbe into push ds jns mov mov das push xchg sbb or xchg xor lcall sbb in in xor mov mov imul pusha and push (bad) neg mull (bad) sub cwtl movsl cwtl movsb rorl mov ljmp rcl jecxz scas les fwait sub out cmp shl sub mov fistpl aas addr16 xchg dec or mov mov push push loopne in nop lea sbb pusha test jmp movl aad sti add ja mov pop loopne pop cli fidivrl push mov add sbb rclb leave fadds or xor xorb lcall fidiv cld or add setb xchg add sub pushf jb mov or ds pushl enter mov jo mov inc push in sbb (bad) out sbb mov cli push adc push sbb xchg sub or hlt pusha pusha pop lods jl test push cmp mov out test mov pop outsb adc or add pop aad sbb mov dec fiaddl mov inc cmp cmpsb mov into fwait cmp mov add and (bad) icebp je pushf push ret cmp lds movsl mov insb cs sarl lea repz sub fxch rcrl cmp jo mov aas add (bad) mov or jg sahf fsubrl push mov mov popa out in cmpsb or in repz (bad) (bad) push sub sarb dec jo xor or mov insb imul mov aaa fmuls std push fs pop push sbb das ljmp jmp or mov push cli test pop add (bad) jnp dec aad cmpsl mov enter out (bad) mov xchg push das iret jbe imul addl pop jnp std lods or sbb stos lret mov data16 add or cmp xchg xlat jmp mov or inc (bad) mov fs insl cmp sbb mov mov pop inc dec sarb jo cmp push outsl jae cmpsb cmpl inc nop push pop fsubl loop add jo adc jb int imul xorb jl jle add movsb pusha jb cmpsl xchg mov je cmp andl repz out pop sbb pop sub call sbb pop add fucomp ret aam cs add add mov int3 into inc mov rorb test xorb jmp jg (bad) xchg add xchg add (bad) push or in xor js and xor or (bad) fmul inc pop in or out aam call and outsl xlat sub or (bad) xlat or xlat pop xchg add in dec or mov out cmp mov lcall addl mov mov sub mov imul js xor jmp sbb (bad) xor mov xchg or adc lds push and inc jae add sbb or cmp inc test das cmp mov push cmpsl add loope scas push loopne jle push xchg pop push add xlat push inc cmp (bad) mov leave mov push adcl aad std out and push in scas ret pop lret stos cli cwtl push mov iret std pop fidiv push inc sub hlt inc pop (bad) sbb rol sarb repz adc (bad) test fidivr add push in mov dec pop mov cltd xor jge pushf cli dec jp mov ja lods add nop je or xor mov mov ret idivl std push out push popl popf adc push aas imul call popf ds xchg aam fwait xor test mov add cmp sbb jnp pusha icebp lahf std pusha stos rcrl ret sbb ss push popa aaa adc and (bad) sub nop aam stc fcomip xchg nop int sub gs clc mov cmp cli aam push push (bad) mov add and les ljmp adc loope add inc cmp mov adc adc mov jo,pn fisttpl sbb sbb orb aas data16 aam add pushf inc call rcl jl or sbb xor jb or dec pushf jmp (bad) lock sub or mov cwtl and jbe cmp sub pop jnp lds out jg mov enter xchg outsb add xor ffree (bad) jecxz jecxz aam stos mov cltd jbe sbb les dec andb int ret popf sti cmp mov cmp push movups pop mov jl fwait call stos lret popa lret sbb push pop ljmp in adc (bad) xchg loopne movsl outsb jo aaa ret sub inc test cmp aas lock in insl popf dec add lcall outsb (bad) ss loopne mov cmp dec mov and dec out pop js les add gs (bad) mov rcr adc outsb (bad) mov pop xor stc in fimul js jnp pop push or xor mov fwait aad push inc or cmp insl test outsb sbb bound int inc (bad) (bad) jnp lds pop mov and mov arpl decl pop xchg es das iret inc jmp jb (bad) into lret mov decb stos jg pop mov js in ret xchg jg stos nopl iret icebp cmp jecxz jb pop sbb adc xor dec jp pop call mov test xchg sub lock fimull outsl add push nop repnz hlt fcomps std inc sbb jmp sbb sarb add nop mov sub xor leave or xlat mov mov cmp xchg sbb ret or test pop mov ljmp push inc dec lods inc fs iret pop outsl lret (bad) dec add push (bad) (bad) jge or or sahf xor jg hlt lock adc pop push in fcoml popa mov sahf xlat xor jmp push xor int arpl rcrb jno xchg pop add test dec xchg js add mov cmp adc ficompl jns or and in es (bad) mov loopne pop dec mov stos jle pop inc dec jbe call pop pop nop mov jnp lret push xlat lret xor push xchg cltd xor jmp es int pop mov test add pop or movsb push push aaa mov mov aad inc addr16 sbb lock rcrb adcb test mov xlat or sbb push std outsb push imulb sbb out inc dec jo adc xchg jnp mov clc out sbb cmp jge or push out or sub fcmovnb xchg int mov xor lods mov cmp push xchg arpl pop mov lock pushf les lds ret stos pop add push fs nop fwait jb (bad) push rolb sbb stos add cmp mov cmpsl mov dec push mov add imul jo mov pop ret pop icebp cmc sbb mov std insl mov xchg jns int jl movb push in or or cmp add sarl test adc pop mov (bad) in hlt outsb push pop aad or loop fimul sahf fcoms cmp xlat lods mov or and adc push bound and int mov cltd push jmp (bad) cld negb aad jb push xchg nop pusha adc ds jmp (bad) in mov lods jmp mov mov mov fmull add sbb or or ds push aam jecxz push (bad) push lea in jmp dec (bad) sarb or xor mull sbbb in hlt push adc adcl and sarb loop mov ret fsubl push dec push dec xchg cld pop jb imul (bad) jg sub negb dec pop loopne sbb push not out in and pop mov pop rclb jle cmpsb pop iret jo ret sbb and iret inc fdivrs cld pop jl pop pushl sub mov sbb jne loopne fs aas jg aaa or mov (bad) xchg mov mov cwtl add push and lcall rsm rorl mov pop (bad) mov js jb (bad) mov andb sbb sahf lods loopne mov sbb inc cmp dec jg sub repnz mov inc int push ds fidivl pop dec push push insb gs fs cmp push lock cmp sbb pushf hlt add or or xor and pop cmp jnp nop cmp fidivl xchg mov std data16 scas in cmc mov std mov pushf hlt jmp insl or stc in iret frstor lret neg and loopne test xchg adc pop xchg jno cld sti mov xchg dec inc add lds faddl and fmull xchg cld fcomp in insb call add push lcall sti out or pop (bad) ljmp inc pop sub rorb fwait push mov test push into daa push cli lret xchg mov pusha push je jg jae loopne xor sbb ss mov add cli xchg xor pop cmp fistpl jmp mov jbe add sbb aad mov xchg push adc cmp ret imul fbstp int out push sub push add or and movsb (bad) mov test mov jp cli fwait aaa add aam add es xchg xorl mov adc icebp xor outsl in inc pop ss cmp push jno jb (bad) je incl sbb jp lret movsb xchg pop or sbb lahf test outsl sbb mov jp inc jecxz movsl dec cltd cld and pop nop mov inc cld sar add out and push jno xor iret (bad) xlat es inc aas pop mov mov jo das out (bad) pop mov sbb mov mov jo push and sbb aas jne push mov dec sbb jle and jnp leave ja sub mov dec adc xor pop insl outsl aad or xchg aam js sub push jle cmp pushf es sub punpckhbw in add jl jecxz and cmp pushw and cmpb (bad) aad in inc dec (bad) pop jmp loope test test push sub sub (bad) xchg xor jbe fiaddl mov add ds inc cmpsl xchg stos push push inc int add mov pop lahf fimul aam rolb mov add das fnop rclb imul cmp into daa fcomps jbe fidivl mov or in ss xadd push je push sbb imul push stos add test fbstp dec cmp imul adcl bound jge sbb xchg pop mov sub or add push cmp insl scas lea inc (bad) fisttpl xor lock leave cmp push orl mov jle std pop loopne hlt adc aas ret cmp mov lds xchg jle test adc cmp out (bad) push mov in add loope lcall inc mov jle sbb movsb jmp xor mov in inc or mov les out fmul stos mov icebp inc (bad) les dec jae (bad) sbb std test in mov sub bound rorl mov das sbbl cli test imul add (bad) imul add push bswap inc adc cmp or pop bound sbb bswap sub sub or or jo aam js cmpl cli call int mov and sbb or sbb addr16 das fistpll and (bad) pop dec mov les cmp inc popf aad xlat mov repnz or pop bound inc adc push xor in xor addb xor loopne ja cmpsb mov fimull pusha enter and and outsl adc enter out (bad) loop inc adc sub inc mov jnp add dec adc stc rcll rcrb ret push dec pop fcmove test add jns and push add das push lock mov loopne notb lock jle fstps jecxz,pn lock cmp fist pop fisubrl inc inc das inc inc pop mov mov add sbb sub push mov popa jmp lcall adc add push (bad) mov popa jl iret mov mov cmpsb adc xorb dec cmp jne mov mov and push inc push aad add xor jae in dec and sbb inc push adc into sub pushf sbb nop dec leave lds dec hlt je sub bound mov sbb push sbb mov dec mov push xor test pop or (bad) shll and movsb stos mov popa pop dec push add push jne pushf stos jmp add fnop imul jne adcb dec cmp inc push enter mov rcrl ss roll xchg xlat lcall test or test or ret fs cmp sbb jnp jo xor mov cli outsb ljmp arpl clc inc xor inc fisubrl push xor sbb pusha iret jo xchg fs lcall xchg jp add cld and add test dec (bad) into lcall xchg les imul adc (bad) hlt xchg adc push adc (bad) adc inc gs sub in or stc sbb xchg or xor adc pop inc (bad) hlt les cmp adc insl mov test dec test ljmp sub out sarl xchg idivl jb stos pop out mov aas dec jmp sbb dec fcmovnu nop sub cmp (bad) notl pop aaa lds jnp roll or rcrb sahf leave fs mov das inc inc pusha add dec add cmpsb daa pop out mov (bad) mov loopne (bad) mov das push jg (bad) pop jle mov jge mov lea mov xchg mov es (bad) leave cmp add jae sbb mov sbb mov insl jb scas or outsl in sti jne call dec pop in aas mov jno jge shlb pushf into pop add jne sub mov enter sub (bad) and cmp sbb pusha nop mov adc (bad) repz mov adc dec out xchg data16 insl mov stos mov sbb inc insl pop out clc les jp sahf push mov mov sbbb dec pushf loope cmp cwtl xlat fs movsb cmp mov int bswap icebp fwait and sbb (bad) imulb outsl mov fldt andl push dec outsl lret xchg push mov into add jae mov jb bound xlat cmp inc std jl add mov mov sub dec cmpsb xor and (bad) sub call push or test call sbb rclb imul hlt sbb mov mov jne mov or shrl push lock cltd movsb cmp fs out lret cmpl xor aad cmp or test movsl xor sahf stos mov cmpsb adc repz adc jne inc test out lahf jge rcrb pop pushf test jno push fwait shlb adc adc fdivrs ds or cmp sub repnz add lods adc or aaa push xor rol adc cmp mov adc fwait cltd loope xchg push fs lahf jbe jmp test add fwait jmp sbb adc dec xchg idivl (bad) mov (bad) cmp mov xchg test sbbl mov cmp ret lret lds movsl test testb push loopne jle movsb rcrl cmp outsl rol lret pop shll jnp cmc repz aam jecxz mov or (bad) lock dec cld and ss push popf or xchg jp test popf mov test popa adc mov and or ret aas repz jno (bad) fs out cmc sarb pop dec sbb stos or push ljmp data16 (bad) lods iret pop sub lods les loop jg ss xchg cli sbb jecxz cmp cli jl xchg xchg leave xor mov xchg xchg in cmpsl call or sbb orb leave les mov outsl rorb mov jbe mov lods pop divl mov nop scas add cmp sahf and jo aad inc push jp mov jg jmp rcrl cmpl jno xchg imul and mov (bad) fcmovnu dec dec add popw and add cmp sbb add inc movl inc insb sbb (bad) fwait ss loopne cmp push adc call inc jne,pn jl ds fstpl fdivrs mov dec sbb (bad) enter sbb pop fcompl enter xor test les push fsubl xchg mov or mov add xchg ljmp sub cmpsl insl out aaa repz rorb pop xor mov adc jl mov (bad) xor push insl lods pop test subb and sub push dec test pushf movmskps xchg xchg ss pop iret push fs xor (bad) sub jecxz xchg xchg pop lods or inc popa hlt ss cld or lea push (bad) insb xchg xchg pop mov fs dec test sub fwait scas cld aam out mov xor xor test push xchg xchg out das hlt in push test aam inc ja fsubl jle adc into add xchg imul sbb ss inc clc mov lods scas push in pop add jno pop sbb out cmp subb imul ret je or jns into jg loopne (bad) sbb sahf aad xchg adc add add xor sbb pushf pop (bad) test scas fistp xchg sbb inc pusha test sbb getsec in imul or push stos fwait mov mov insb cmp out clc push sub int sbb adc popa jmp add jne cli mov jge or addr16 aas int jb inc fmull loop sbb pop outsb adc sub sahf scas pop sbb das mov jae pop mov jp aad push or fsubrs in loope fnstcw mov or add inc cltd or and jle add pop pop hlt dec sbb inc aas inc in add sbb dec shrl lcall sarl xchg lods adc in push call cs xor mov (bad) sbb and repnz lret insl push popa pop or mov rol gs mov sbb mov jecxz push cmp jle pop or inc mov push and and mov dec ljmp jo jo (bad) mov fwait and pop repnz mov lock sbb cmpsb (bad) aas mov nop cmp hlt mov xor sarl repnz sbb sbb in jb outsl xchg ret outsb sub outsb stc rorl lret inc cli (bad) or mov dec out inc xor rorb popf cmp aad add loop clc xchg inc or popa ficompl jp lods int adc test mov dec lret push mov dec or jmp xor shll mov mov pushf inc lods jmp daa inc stc cmp xor dec std jecxz dec sbb fwait es fwait pop and pushf pop cmp loop cmpsb ds test fisttpll mov mov dec sbb dec cld enter push rcr mov cmpsb jnp iret sbb and pop sbb fcoml jnp push pop adc jge jmp xchg sub dec and cs hlt (bad) imul (bad) pop xchg lcall inc lahf shlb ljmp cmp dec push movsb or mov push mov lods xchg and jbe ljmp sub or cltd repnz cmpsl sub mov mov push lods cmpsl or cwtl ret int das repnz subl dec in insl enter nop test loopne push and lcall jnp dec dec loopne aad lods push bound pop lret adcl (bad) mov (bad) jp mov cltd jae sbb or lret adc aam jl sbb jle out sub and jns js or pop sarl jne mov xor cmp xor mov arpl cmpsb movsb push rolb aam mov sti fnstsw pop or sub mov test add mov aaa fldcw loopne cwtl cmp int or inc jge mov fnstcw inc aad mov lock das dec inc js lock pushf lds xor inc adc pop (bad) mov in sbbb (bad) loop push jne stc sbbb (bad) fimull test aam leave cmp or enter cmp mov fdivrl sbb iret push dec cmp addr16 fwait jb sbb pop dec out hlt mov cwtl iret movsl les adc pop sub jnp cmp xchg mov or test push push fidivrl cmp push xor sub push cmp ud2 movsb mov mov movsb sti jnp sbb mov jle rorl jg adcb cmp or test mov iret in or xor rolb pop push xor call nop cli (bad) rolb aad mov popf cmp mov cmc xchg push mov hlt mov cmp add push test push mov repnz mov repz sub mov mov pop xor fwait pusha sti scas push in and outsb scas mov mov jnp cmp or push dec test (bad) sar aad lock fisubl movsb pop xor push jnp cli xchg dec adc jns ljmp add ret inc out pop jae xor cmpl out jle mov lret xor sub adc shll jl sub mov out sbb lahf adc cmp pop and shl hlt fucomp or dec ds aaa aaa adc mov pop mov mov add orb jnp faddl (bad) jp add mov and (bad) (bad) sbb daa cmp aas or ror mov adc fbstp iret push sub daa lods sbb jnp insb xor xor and in comiss jns cmpsb lcall mov mov or push adc jae adcl icebp mov (bad) ja decl (bad) sti popa mov mov and negl int lds imul insl std mov repz add jl ja addl inc pop jmp fildl mov jg,pt sbb in out adc cmc xchg ja or das cmp cmpsl andb xchg lock es insl pusha ss gs fwait imull movsl adc mov sarl stos add adc and imul sbb mov gs mov fwait cli fistl lret les jbe jns dec dec jecxz inc xchg (bad) sbb or mov mov ret dec cs out js fcompl sarb hlt repnz adc or scas (bad) add lods mov xor xor mov jbe mov std jo test (bad) enter jbe xorl into mov add jge dec sahf add dec outsl pop inc movsl ret xchg scas sbb mov dec cmp pop cmp pusha test and mov imul cmp push or pop iret mov pop sbbl jo jns pop out das loopne xchg popf sti mov adc push push pop in mov sub jo ja cmpsb mov mov add add or sahf jp daa jno add andb mov lods xchg mov movsb mov jb jg loopne inc dec or mov inc gs addb leave mov insl jg sub jl dec or shlb loope sbb (bad) outsl dec stos xchg xor (bad) jmp lods adc sbb in popa or loop imul or inc (bad) xor jge or mov iret add int (bad) mov or fcompl loope and imul insl pop xor mov xchg inc cmp push or xor xchg loope xchg add dec sbb fwait or pop add xorl sbb mov sbb mov or jle lret jl je add int imul cmp sub push dec adc mov nop insb mov add push or ret rolb inc or mov push jb rcl loopne test lods cltd insl ja sub fdivrs clc stos cmp test loope or mov fsubrs inc adc sahf (bad) out mov aas jno adc (bad) shll popa and jnp outsl rcl or or cmp dec mov and shll pushl mov jne je mov mov adc aam mul inc cli mov movsb rcrl nop sbb in daa jg push nop push jmp jno jo jl cld sbb ds fs pop inc add outsb (bad) out fbld (bad) sub js lahf jnp cmp movsb mov mov rorb xor sub cmp call enter and (bad) mov outsb ret dec shrl dec xchg dec sub int3 adc jecxz pop lret clc test mov pop enter add fwait pop popa and sbb push jmp inc or sbb inc test (bad) jo sub test adc sbb in adc sbb sbb dec adc inc xor mov bound fwait daa xchg adc daa shrl inc test in pop ret aaa jge or ffreep stos insb (bad) icebp and in data16 or ficom aad mov ss lahf scas pop popf wbinvd and and mov lret jb repnz (bad) cli into outsl mov cld pop mov pop adc mov nop inc dec lret inc lds out sub dec dec or adc push and jle cmp inc or clc insb lahf adc (bad) cmp or out adc jb ja sbb imul lret in mov inc mull sbb mov mov test push sub dec cmpb add scas (bad) cld movsb xor pushf (bad) push and adc adc int lods push rcr jno pop sbb jb mov iret sub sbb pushf aam add jg push rcl mov pop cmp mov loopne ja inc fsubl mov mov (bad) in mov add outsl lret (bad) pushl ss pop pop std push lcall sbb scas or gs mov sarb (bad) (bad) xor outsl insb xchg push stos pop add cmc sarb push dec fbld aaa sub and imul (bad) imul jl pop and cmp sbb xchg aaa add xor sub jne cmp and dec imul xchg aaa push in mov (bad) jp jp aam sub fadd xchg mov sub add cwtl sbbb jo sub nop pop jae jl cmp jbe jne movsb ss or or pop xor je imul xor cmpb aad jg sbb and mov jno movsl int3 jg pop loope mov out stos and jge or pusha dec lods shrl addl sbb add and cmp adc push dec xchg (bad) adc or push or xor sub sbb hlt jmp add xchg mov pop pop (bad) mov sbb ret jg mov or ja out scas jb addr16 jl insb (bad) sub rcrl mov rorl std mov xchg mull xor iret das lahf mov (bad) sub (bad) xchg in xor sub lods es popa int or push xchg mull or jmp fstpt shrb cmp push loop (bad) or (bad) push and add das add mov mov mov pop ljmp xor insl xchg pop xchg jecxz shl sbb es (bad) sbb dec mov clc lret add movzbl outsb jnp,pn xchg xchg jbe jg inc es daa add popa and pop inc jbe jnp scas sbb loopne pop xor ret in call xor addb mov movsb vhaddpd cmp nop xor pcmpgtb lods xchg cmpsb fiadd pusha xchg (bad) int or inc mov dec iret movsl xchg adc or adcl jle (bad) dec fdivrs jg cmp mov (bad) test xchg mov jae mov rorb lds adc ret mov sub sbb cli jl mov pop (bad) lock sti das je sarb fcmovnbe aam int mov add call jmp test and cmp lods fsubrs repz mov and enter xor sbb or xor loope (bad) xchg pop or push movsb dec jne fwait xor sub fs cld js jle scas loop push mov out fwait add mov nop jno and notb xchg aad push repnz lds rcrb jb and sti rolb mov inc push fs decl testl sbb jbe roll jle testl jge repnz repz or push hlt outsl cmpsl mov cmc movsl movsl cld sbb push into mov fnstsw aas jg pop mov lock aas inc aas mov das (bad) int3 ljmp je xchg in jb xchg sub rcl pop ljmp or daa pusha lods nop dec xor ss enter in outsl inc in cmp (bad) jbe shr cld icebp push in (bad) cmp mov loopne sbb add jmp movsb sbb mov xor add dec xchg loope lock mov clc outsl mov jmp and or pop xor daa xchg sbb arpl pop sbb fwait add mov hlt xorb fbstp addr16 inc mov push or adc cmc enter rolb ficomp fldt movsl in lret mov jge sbb and jo loopew int dec push lea adc (bad) lock mov cmovge add jg mov push cs inc sti sbb or or (bad) pop or dec sbb ficompl ret cld outsb xor cmp mov mov (bad) sub ret or adcb movsb rcl or dec sub rolb pop jae push orl xchg and xchg aad push data16 xchg or mov xor insl push popa rclb mov pop mov mov popa lret and dec jl mov pop cmp sub pushl xchg repnz out in and dec in pusha cmc les lahf int3 imul aam lods jge mov and xor insl xchg fldl sbb pop lock cmc les sti cmpsl rep les xor or and or pop aaa lods and mov iret (bad) push test cmpl test pop popa or add cmc shll cwtl fmul fistpll data16 pop aas jbe cmp push nop shll dec push bound jmp add mov (bad) std lods xchg inc sub (bad) xchg or dec and fwait stos mulb shlb and mov xchg add inc mov test and repnz lods push mov in movsl out adc leave mov leave push dec sarl test pop push mov adc lock sub pop test repz sbb cltd sub adc mov pop and lea push push test hlt pop fsubr hlt inc mov or adc jecxz lods adc aaa adc jp lea mov lock leave and inc sub adc mov (bad) xor pop outsl mov or sbb (bad) dec pop fistpll add sub and jp lods cs scas outsb movsl adc lahf mov jl add loop test in pop in jne iret adc andb mov mov jns or rol jbe mov jg test xor outsl outsb mov jle fwait xlat insl sti add dec xchg pop test addr16 dec push std pop sti movsb (bad) pop push pop fcomps fisttpl jo pop mov in (bad) cmp or xor cmpb sbb xchg lcall sbb dec sub mov out cmp add insb (bad) or insl cmpl inc push les shlb ret mov mov sbb or out or mov loop data16 xchg sub ds fiaddl shrl jmp jnp stc mov or adc xor or push dec sbb popf popa xor fbld jo dec mull out jbe lret inc mov push loopne rcrl out ficompl push jo ja pop lods iret hlt add mov js adc test jp sub lods add loop notb fcomps insb push psrlw into mov (bad) cwtl cmp mov (bad) aad (bad) pop dec (bad) idivl xor scas sbbl lret hlt test (bad) mov inc loopne cmp xlat or push mov adc mov xchg xchg jne lahf shrb mov mov leave hlt cld sbb cli iret inc or jle mov xor rsm std cmpsl jecxz jp imul idiv push (bad) pusha push or push adc sahf pop sub or jne pop cmp xchg jle add jb mov call inc lods pop orb jg and (bad) loop and or mov or push jmp out movl fs push lds sub cwtl nop lds dec push cwtl sbb in lods or cmp ss jle sbb mov int (bad) cmc fadds dec lock repz (bad) pop ja insb imul adc (bad) or add xchg cwtl shrl aaa add leave dec dec mov je bound jno fnstsw mov lahf sbb das int xchg (bad) notl mov sbb push insl aad dec xlat repz std lock dec pop add sbb sub and xchg jl and addb std mov bound cmp aam push fnstsw xor or fcmove mov test sti xor sub gs sub add cwtl jg or mov js loop out iret mov pop dec andb push sbb xorl jp and fdivrl (bad) lret inc dec in xor lret mov or mov rcll jae cmpsl aam mov lods xchg mov jns lret jge mov pushf push jl gs sbb mov mov xchg outsl in lret jne mov and xor lods or and popf pushf out test pop stos (bad) mov movsl shrb mov call jl jns clc movsb rcrl mov sti jno cltd nop addl pop sub mov pop jne xor cmp add ret stos push in push hlt pop sub mov or or mulb xchg ret lret inc pop mov jle test pusha xchg jno mov adc pop das pusha and xor frstor sub fadd or or xor xchg cmp push jg sub imul push in jb fdivl aam mov int inc ds loope xchg ljmp mov jb (bad) hlt cwtl push sub or mov mov aad lods sub jnp (bad) push cli pop push and pop daa and imul ret mov subl add mov jb les shlb or inc add pop enter stc mov sbb jecxz sarb adc dec flds ficomp sbb pop mov test lahf ss or loopne cltd shlb push push xor pop mov testb fstps or je ljmp or and sub movsb cmp psubq dec xor lret xchg sbb jmp stos out cli jle push jns cmc cli lods sti sub or dec cmpsb out fdivrs das inc add jmp xor cmp xchg mov movsl xchg repz scas enter cmp dec sub mov gs notb jp mov shrb sub mov (bad) in popf jns cmp (bad) cs (bad) and inc sarl sub stos loop insb rcr std loope stc pcmpeqb bound sub sub add xchg cltd pushf sbb push dec je jbe dec (bad) pop leave mov add loope insl sbb fnop adc mov in cmp xor jmp test sbb int bswap (bad) lahf pop xchg add mov call gs pop int adc in cmp jb cs mov push hlt lock cmp je sub mov addr16 and in lods add pop cmp addr16 xchg cmpsb imul xor push pop sbb (bad) xor orb sub xor bound and push jns xchg dec cwtl les scas jnp jnp out dec ss mov arpl enter inc roll inc call movsl inc jnp xor nop pop mov je pushf sbb out dec adc les jae xlat xchg sahf movsb mov and stos dec ds push movsb push and (bad) lret pop sbb out sbb push jnp cli clc jg,pt test xor sbb in dec sub insb jmp aad mov xor mov mov mov lcall xlat fwait cmp ret jo sub in xor xchg or adc fidivrl jb idivb or mov sbb jbe push adc jnp xchg xor push xor dec (bad) aam ss add cmp addr16 xlat push (bad) arpl pop sbb pop cld sbb or jle pusha pushf insl cli shr push lcall lods cmp (bad) into mov cmp rorb jo xor int aam adc aad pusha jno mov jne inc xchg ror cli push xchg inc ffreep xor dec jne shr das jne mov divl mov push pushf xchg pop mov enter sub xchg and adc repnz pushf pop lret cli insl inc test jae std nop stos lds jle in or mov sbb and iret (bad) stc push push sarb and push dec fdivr mov sti dec adc jge push cmp gs mov into mov mov adc pushf cmp scas add inc or pop cmp (bad) pop fnstenv fbstp mov insl subl in in pop ss or or and jo outsb insl mov das pop aas (bad) push pop aas fnstcw sub incb repz test jns (bad) xor fwait and imul out (bad) mov int mov int das mov (bad) xor fsubp (bad) out xor push jle add lock push push lcall xchg xchg cltd lods (bad) sub cli mov stos add push sub mov (bad) popf ret popl test in xchg mov and mov test lods or or sbb cmc (bad) das sbb pop pop rolb pop mov mov (bad) mov cs cmp bound arpl mov push mov aad scas xor and inc cld sbb cs inc sbb pusha push ljmp mov (bad) xchg shl fwait mov sbb dec popa dec cmp std pop push arpl or lret cmpsl dec or (bad) or fisubl dec mov pushf (bad) jb ret xor in cmp mov out fbld (bad) int3 or adc xor xchg xor sub jns jecxz push xor sbb adc insl (bad) or jbe adc gs je test jae sbb test mov mov out push pusha jo xchg or out pop cmp lods aad and push xchg add rorl test test lock lret or movsb sub dec lock sub addr16 stc pusha (bad) adc fadds jnp sub fwait add jo or ljmp mov or add in in xor mov test imul mov pop aaa fisttpll (bad) jb sbb cmpsb jp push (bad) sti pop jnp lcall leave or adc jmp test scas ror stos pop mov fstl in and mov pop sub mov xchg jl or les jbe leave add outsl cmp (bad) pop push (bad) xchg and mov push sub mov fdivr movsl loope lock jnp roll (bad) cmpl daa xchg push pop and push fwait add adc test into push push inc movsl jge ror add shrb mov test imul mov mov cs and fdivl bnd add mov sub and mov movsb aaa ret (bad) int3 adc mov sub jo mov clc xor movsb (bad) sahf cmpsb sub in out pushl xor dec popa xchg lds nopl jmp push out dec stos das pop push adc or inc shll mov (bad) (bad) mov mov or push xchg lock xchg ds pop insb sbb xchg clc movsl mov or inc in mov push push out insl in xor jbe test stos insb or jg and fisubl std (bad) les ucomiss jnp pop jmp in sarl jle add push call mov pop and std fsts pop mov aam jecxz and sbb sarl out int fadds sub aam xchg mov stc cmp jge sti jbe jge mov add aas out (bad) fs push add xlat cmpsb xor aas dec inc mov xor xlat sub mov dec fdivrl ret jmp int std test aaa xchg outsl lea fwait lret out sbb imul xor adc aas movb out and cwtl sbb bound jae data16 lea sbb sub inc stos xchg xchg sbb xor clc inc test sbb call inc call pushf cmp lods sub ja fs dec mov sar add push add adc pop mov or pop cld mov and cmpsl push lock das mov or jge lahf adc gs loopne jp pop add xor and mov inc xchg push push shrl or xchg jg jbe mov in mov cmp cmp mov insl aas in adc xorb push lea fsubl imul movsl sahf (bad) jmp mov inc jae test imul inc mov es xchg mov adc adc int loope (bad) or mov push mov fisttpl in stc jne rorl dec fldcw sbb ja fsts sbb pop push mov xorb mov jl add incl xor add push xchg iret fwait clc dec jmp mov popf push ret add add rcl cmp and push or test bound adc push xor adcl daa or cltd test (bad) lret ljmp (bad) dec sarl add mov arpl push push pop loopne fcoms hlt cmp mov movsl idiv cmpb mov js repnz insl lea (bad) and fnstcw push pop ret jmp add movsb repnz xchg or dec (bad) pop mov add cmp push push adc push inc out jnp or mov adc pop inc aad sti add negb stos je fcomps jp nop xchg in out fwait aaa add ret lds je (bad) jg mov out test xchg js push (bad) scas mov lahf jb jle icebp adc int or xor std push rcr or aaa xor jecxz sbb test xchg inc jae stos lock in paddusb js mov (bad) cmp sti mov xchg (bad) (bad) insb scas jge mov and in outsl scas jmp mov sbb push jo subl int mov dec test push iret out pop adc insb sbb xor inc push jmp pop sbb ret cmp jmp call fimul xchg push les mov dec sub sbb clc lods cmc and inc sbb push mov aaa pop xchg mov (bad) scas and sbb or mov rcr mov inc xor ljmp cmp lret mov and sbb mov add (bad) shlb loopne adc (bad) pushf dec inc pop (bad) lahf xor aaa nop and inc test pop ror dec cld mov xor sbb fnstenv dec (bad) mov (bad) hlt push stc addr16 sub fldt cmpsb lock cmpl push xchg in cmp (bad) xor es or jb std add (bad) adcl lret cmp push inc inc add loopne fcomip mov addr16 jp pusha inc xchg inc or sbb pop adc jne mov push dec pushf fstl movsl nop adc adcl xchg add adc loopne fstp inc pushf lahf scas das fwait push adc cmp sbb dec xor sbb ljmp cmp subl jnp lods out cmpsl inc jg hlt cli and test adc jle stc pop mov mov mov in test push push inc arpl mov sbb inc cmc aam js mov popf test sbb lea fs movsl pop (bad) cmp sbb outsl xchg sahf jne addr16 mov xor stc test inc mov (bad) mov mov out das adc cli rcrl cmp cmp adc mov daa sub cltd and (bad) std or adc mov mov sbbl or mov cmpxchg inc inc sbb sub incl test push add ljmp lret idiv sbb fimull cmc jne xchg jp gs clc xor int3 mov and sub ficompl xor inc xchg enterw in pop cs mov or push lret sbb jne popl lods mov jo stc in pop jge xlat pushf (bad) iret adc push mov adc sbb out call cmc and sbb movsb sahf xor loopne jmp jbe,pn sbb inc sbb add (bad) jge dec rol das pop xchg jae mov bound pop lods fidiv jl hlt notb sbb inc xchg pop iret or cld das jne (bad) push and rol or (bad) int3 jmp xchg sub in jbe sub movsb mov xor jl sub inc xchg or in call inc push cmp movsb iret in dec pusha mov aaa (bad) dec or sub inc adc jnp loop push xchg xchg xchg ljmp pop imul les aad cmp hlt push mov xor stos dec nop es pavgw data16 pop (bad) sub or loope xchg add pop pop lret sbb sbb clc mov (bad) or xor xor in fimull sahf popa mov or pop add sti xor (bad) and jns out xlat xchg add jns scas mov cwtl mov loopne pop imul ja or jmp dec lea add xchg stos add dec gs dec inc xchg pop and rol mov or mov jl push adc ss (bad) flds xchg mov adc ror cmpl das ss sbb in sub sbb inc push icebp push xor push pop xchg add loop push push adc xor mov mov jge or adc sahf das into mov push fnstenv fiadd or mov clc movsb mov std add pop inc jl daa icebp (bad) xchg and dec test or insb in jp and sbb fidivl (bad) cmp cmp insl (bad) bound jg pop or nop js dec scas ljmp imul pop fldenv push arpl jl je sbb shl lcall cmpsl xchg push jo jns mov lods pusha movsl mov mov insl cmp push fcomps mov xchg xchg cmp dec std sub inc fwait (bad) push aam push aaa mov call leave jl sub in sbb sbb orl mov or xchg pop jbe mov jmp stos andl add cmpsb pushf mov repnz push xlat dec sub out inc (bad) and mov mov popf xchg pop mov lret daa pop and pop sub mov in adc adc add fiaddl pop cli sbb cmp and cmpsb lcall int3 jecxz inc cmp push mov movsl aaa xchg out push xchg pop mov imul cmp ficompl roll adc lret inc or jmpw xor mov shlb int clc sub mov lea das inc bound mov mov add adc repz inc sub add xor dec lret enter loopne imul stc iret adc frstors leave or das cli add mov data16 mov call pop or inc insl stos mov fisttp test jnp jbe jns in aam cmp movl dec inc scas mov dec cmp pop aam mov pop and mov (bad) jnp mov cmpsl out or or and in popf xlat in push imul xlat add jno fs push out (bad) insb jae xor sbb xorl outsl pop xlat mov lret lret fwait and xor int3 in mov mov jl ss xor jge push aas xor mov out mov js imul dec and lcall jl outsl aas mov mov loope mov out pop dec repnz push sbb pop xor xchg sub clc dec lock sbb imul add mov mov dec cmp and pop pop inc shrl sti iret cmp lock adc bound loopne mov fabs data16 hlt push cld sbb mov add gs clc mov repnz es jnp lret xchg into adc aam loope or loopne outsb inc or jo sub popf repnz jp mov mov cltd cmpsl add sub jo test pop cmpb ds push or dec mov sti mov movsb sub pop mov addl inc ffree inc lods fwait scas jecxz mov mov cwtl push xor jns stos xor adc mov pcmpgtd pop sbb push cmp sub testl int3 mov jne xchg inc or inc pop mov push cld push push shrb out das sub lea inc and (bad) sub rorb push jle addb int3 add push pop jnp pushf outsl jne loope int mov pop jnp das ret shlb incl sub bnd loop sub popa fwait ss (bad) scas jo ja sub xor pop mov jl jge movsb dec mov mov cmp loope int movsl lds cmp pop and sbb mov or xchg push or rcr push (bad) lret data16 sbb out mov or shl shlb adc aaa out rolb pushf dec xchg and lods pop jl data16 insl inc (bad) fidivrl cli or fisttpl mov pushf aam push dec mov inc imul loopne outsl roll es call dec cltd push sbb sbb aam jle jmp mov mov pop or sub cmp jno arpl lret push (bad) lret sahf xor mov gs mov or pop iret jne cmc out adc sbb mov push sahf and xor add push test add dec jle jns fsubl adc lods adc clc and pop and jg lret inc lret add xchg sbb popa lahf dec les out out sbb shrb lret and xchg and push lret sbb test pushf dec test xchg test roll mov sub (bad) (bad) mov adc mov dec mov push movl hlt movsb stos fnstenv mov jbe mov cmpsb dec in cmp popf jp addl mov push push or outsl cmpsl mov sbb adc gs inc loopne test add push fwait mov pop xchg loop (bad) iret jno jae inc ljmp dec (bad) (bad) fdiv dec int push repz in fcmovne and inc push jne add pusha xor xchg rcrb rol sbb dec test sbb pop or (bad) mov cmp sub fwait nop push xchg mov stos adc repnz pop push not mov push jl adc dec int3 push pop test bound shrl sub jbe lods jg adc fadds rcrl movq jle fistpll hlt aas jle xchg xor xor jle lock pop lock loopne shll sub stos lock outsl sarb mov int dec jo adc mov jb mov jp inc mov movsb jnp cmp loope sub xor in inc adc jb dec lock sbb hlt add daa sahf push xchg mov xchg jmp add rorl mov inc shlb shr je outsb xchg lahf or mov xchg push sub (bad) sbb fs cmp std repnz pop and out and jge mov mov jns loop movsb inc push (bad) or jns int3 in add jg cmp jp pop je movsb add loopne je mov (bad) mov add adc jne shrl sbb ret cmp repnz sbb inc sub cwtl ror xor popf or sbb jae mov mov loopne mov stos push mov inc add adcl jmp xchg ja or jl test lea rcll mov cld or fsubs (bad) xchg and in add outsb mov ja sarl jo imul sbb add push jg and std out leave xchg rorb sbb int3 cmp cmp movsl cmpsl movsb cmp add int mov sub or mov pop push lds icebp cmp add or cwtl push inc pop sbb mov dec nop andb xor imul sub mov pop fwait rclb mov nop adc pop lret add dec leave mov (bad) xor xor test aam mov mov outsl fwait int pop out fwait xor lret fstpl pusha or movsl mov notl js pop xchg mov pop in (bad) call or inc xor andb int3 pop pop or mov add data16 lea or and jns loopne inc jl mov mov mov jmp loop and push movsl (bad) mov and lods pop lcall lahf cmp scas inc repz jne lea add aas xchg movsb int or std jno arpl pop aas sub test test cwtl sbb mov add push add repnz and das dec in push lcall je stos sbb and aad push (bad) je and imul pop mov mov mov adc mov and int pop ret or cmp jo adc jns pushf pop adc jo mov loop add xchg jo int3 jp jne aam fwait jo mov dec test sarl lock pop cmp and push popf scas sub aad dec sbb negl rcrb mov hlt dec xchg xchg or idiv insl adc nop cs xchg pusha int3 dec adc enter fwait mov mov fsubrl fist bound aam js movsb in inc jo loope xor rcll in push lods ljmp or mov ja xchg sbb push inc stos hlt rcrl cmp adc pushf add jnp ja adc pop imul pop pop in iret inc push push cmpsl sbb pushf cwtl pop int out jle add fwait lret and das pop jnp sbb adc sub push add into sub fsubrl mov mov jg loop sub lods xor stos and jne inc das jg xor add scas and pop lret outsb mov mov jp loopne aaa repnz cwtl mov lods icebp mov ds or add in out dec fwait lahf and jl mov mov or xchg in mov dec hlt jle pop int add and popf aaa in lcall sbb mov xchg mov adc inc jno ret movsb push mov repz (bad) cmc test cmp jmp push in mov jmp fdivrl xchg dec jmp in sub test fmuls or je clc (bad) ljmp ret adc cmp int (bad) movsb sahf push in cmp lret (bad) rcr add rcrl jmp mov xchg sub call shll inc aad cmpsb ret and pop lret adc fwait add and imul es mov dec fnop insl pop mov lcall mov dec add jle cmp dec xor jb movntq rorb xchg mov add sbb frstor mov push pop mov xchg xor lock fst mov ret mov and jns mov push cmpsl sub mov dec or test cmp insl lret mov inc pop jae je xchg xor stc pop adc and sbb xchg mov lcall enter or xor aaa sbb jle or lcall es adc jb jmp jnp es jmp into inc test outsl and push jge pushf pop ret cld rclb cmp push jl or iret gs inc pop cmpsl rcll or gs decl int fsubs sbb in int3 aas jle imul sbb out inc ss and fnstenv mov imul hlt push or push xor jp arpl inc orl jge add pushf int push sbb sbb mov sbb imul lock imul mov pop test bound cli (bad) (bad) mov jns je test jge pushf insl or das jno and popa push sahf loop sbb lods adc out or mov mov cmp mov mov outsb iret sbb and push (bad) aaa aam adc jbe daa aam mov es pop loop (bad) in inc inc jbe cmpsl cmpsl sti inc lock mov mov mov add xor push sub es jns push dec loopne push imul adc fwait cmp icebp jmp dec push jle or in loope hlt (bad) (bad) jne pop andb push outsl sbb adc arpl xchg sbbl jl add xchg rcrl sub inc jo dec fnsave mov jl mov push js pushf sub lret pop inc dec cmc inc xor sbb fwait je lea lods andb mov in insl leave jecxz fs andl push push mov jmp out dec pop push shrl mov out faddl lock cmp aaa lock dec mov inc out jbe sbb dec in adc and or cld arpl or cmc fadds push pop ss sub dec popa fucompp mov mov movb and mov mov fwait xchg ljmp jno mov jge nop cmp jge sbb mov imul outsb popf int loopne repz out stos pop aam dec pop (bad) jle bound cltd (bad) push fistpll jl cmp xchg lcall jecxz outsl fwait push mov sbb cli mov jp pop fwait stos int dec leave xchg xchg jne sahf or pop inc jmp jbe es pushf or cld imul pop fcompl or (bad) popf stos aaa subl inc jp mov adc loopne cmp and jne lret (bad) cli jl cmpsb (bad) movsb pop xchg (bad) mov and in popa xchg loopne mov cmp adc (bad) jno or jno push (bad) jnp imul push sub imul inc das fiaddl into or sarl sti inc push fsubs popl push imul add sahf pop movsl aad lods repnz test ror or aas shrb ror lea jmp push push popa xchg mov enter or aaa daa (bad) sbb imul push jne and adc mov push gs jg jmp std gs outsl jmp movsb mov add xchg in test cld xor sarl das xor or lret cmpsb sub xchg or rclb pop push cmp mov jo xlat (bad) leave dec pop jge xchg cmpsb cmp (bad) (bad) cmc jno and xchg jle dec or mov (bad) cltd or jno dec sbb jecxz (bad) imul xor sbb push les mov imul jo mov pop leave sub dec pop lods out adc (bad) jp fildll outsb and in aaa lret jecxz daa xchg ja cli add mov sbb lock aad cltd xchg jne push iret pop jne std aas inc adc shll popa sbb pusha cmp adc cmp cmpl lret add fstps or lret sub and inc aad incb mov or pushf mov enter jmp call xlat adc repnz jecxz cmp dec cs out adc xchg insb outsb xlat cmp mov dec loop sti bound mov push xchg push pusha in popf pushf mov jmp dec cmpsb and into sub sbb loop inc xor and push and lcall jp shll repz imul insl push cwtl insl cmp int pushf gs cmp xchg adc rol and je inc mov sbb inc push imul add repz or fcoms clc aad or jno int xlat pusha mov orb mov mov lahf mov mov js pop adc inc idiv and dec jns and or mov (bad) push pusha gs shll mov pushf jle cmpsb cmp ret sub aas mov enter dec fildl dec enter call mov and mov push jnp pusha shl hlt push add lods jg outsb or adc dec repnz daa cmp or adc in push rorb ss pop aam mov dec int3 ret jo jg xor jl push add enter sbb xor in cmovp mov fwait cmp pushf pop add jle mov test inc out arpl pop mov shrb sbb lock pop cmp mov jge dec sbb mov mov xor jg jecxz (bad) pop sub pop das insl gs decb mov jae xlat push in mov pop ffreep inc push movl call add pop mov das jae stos sbb outsl std sub outsl and inc push sti cmpl test out ss orb cmpsl repnz xor inc add fmull bound outsl fdivrs mov les lahf test sbb push mov pop and add pop pusha cltd lock sub and adc cmp mov sub jo push pop fucom and sbb rclb enter mov or (bad) fprem or insl push sbb or (bad) dec lretw push jmp adcl sbb les les jae loope mov pop into mov xor mov and xor pusha pop out stos into addr16 adc add push cmp fdivrs mov aam cmp and outsl mov dec add cmp push in or movsb outsl (bad) mov push mov bound jg push sahf mov mov loop push adc or jno scas mov lret xor stc sbb mov sbb jmp in rol mov sbb sbb test lds andb nop sahf out mov (bad) shl mov and add pop push pop outsb xchg data16 fmull sbbl or mov mov sbb mov inc clc in add mov xor push cmpsl xor nop mov pop and xchg imul push fadds fistpl pop dec xor int3 or addl nop hlt xor and pop pushf ret or repz xchg sub pusha sbb test adc fwait add cmp inc out movsb inc jbe mov sub mov or repz sbb inc cmpsb insl aas fisub cmpsl (bad) andb sbbb jmp stos or inc cmpsb jmp rol mov bound mov outsb xchg (bad) aam scas js and sbb aas loope ds dec push xchg (bad) sahf dec push jp pushf adc fsubrl inc mov mov and data16 jl daa sahf add push push and mov xor mov xchg cmpsb pusha or jl sub and out rcrl repnz jno xchg mov out insl jae pusha negb jecxz xchg movsb lret shr xchg pop adc hlt pop mov cmp mov jg and mov or imul cmc aas mov xor js sub incb inc mov sarb cli lret cmp mov scas mov xchg ret mov in jbe (bad) jb sub ljmp lret (bad) or mov sbb inc rcrb mov dec and mov pop cmp dec cmp mov arpl mov xchg (bad) lods subb mov pop testl xchg xlat fcmovnb rolb int (bad) sub cld or popf jge mov and das pop sub lods pop les movsb int imul jp fstpt mov mov mov je out lret push pop call (bad) and subl aam xchg xchg dec sbb dec xchg sbb dec lds jmp or ret jns pop and mov push xchg inc aam inc mov push add stos data16 or cmp (bad) cli sub sub mov lahf add ljmp jb popf clc dec adc or test sbb inc add vmptrst (bad) out sbbb clc loope je xchg flds into cmp outsl jne xchg test pop jnp popf fdivs cld cld cmp sbb add std loopne sbb add inc stos call test push data16 add ljmp jnp std mov push cmp mov lret jae jmp jnp decl addb je daa nop loop mov mov mov stos lret cmp bnd (bad) pop outsl stos lret or xlat inc data16 fimul lods jae (bad) xchg or xchg mov insb xor lods jg sbb in fldenv jnp cmp pop sub cmp mov mov pop mov xor mov das mov dec out mov jns jns mov out out cltd ds notb jle idivl or add and orl aaa movsb enter outsl bswap or lea out pop inc mov test or fbstp mov add sub insl jb jno mov movsl imul pop pusha mov push lahf andl pop in add inc jns xor jo dec ljmp clc lods outsl cmp pop fcoms jbe add movsl or inc popf pop scas stos nop adcb push and shll pusha jbe,pt orl add cmp push jb aam sub negb pop outsl out stos sub out sbb jp sar inc xchg ds in or in inc add pusha nop stos add jge out jge insl push repnz test insl sbb movsl adc pop test cmpsb dec mov sbbl mov movsb (bad) cmp sbb adc aam mov and sub daa lock and fstpl adc sbb aas fsubrl pop inc jg data16 push out mov lret and jle fidivl jbe xor sub pop ret mov sub in sar jl cltd popl outsl pop (bad) imull pop push mov xchg aam push push test mov insl lret inc ror mov mov xchg popf bound ret cmpsb add movsb aad xor movsb stc or aas fcmovu popf std xor and jecxz cmp es dec scas cmp sbb insl xchg lods push int3 outsl mov movsb xchg sbb fcompl imulb add outsl mov jns iret dec aas inc (bad) mov inc lods inc es mov sbb sub sbb hlt mov sti int (bad) mov mov push insl or add insb shrb aas testb jecxz aam adc insl mov jl pop mov pop sub and cmp pushl pop mov jnp adc aad mov or sahf mov and sbb inc push sub in cmp adc insl or ljmp dec and sbb or movsl in jo xchg xchg jl,pt (bad) clc inc adc add or leave jle mov roll mov inc rcrl push (bad) jg push dec sbb sub dec pushf adc pusha pop mov fisubrl notb push cmc or (bad) in push push sbb add sti je les sub nop fsts stos lcall mov xlat lock dec sbb es jo (bad) mov test ret fsts fcoms add gs mov cltd jb movsl push mov inc xlat cli adc (bad) and pop mov fnop and mov movntq nop adc movsb pop add test jge add aam jmp xchg or cmp es sbb rcll (bad) dec pop rcr xor add dec ret lds jae pop lret ss pushf sbb jl out jmp jno and dec insb cmp ljmp jbe ret xchg addr16 xchg and mov pop (bad) lret mov xchg jge mov int mov pushf push sarl inc popf das aas push or (bad) push loope inc xor mov xchg fwait add dec xchg cwtl clc rorl in push aad sub fdivs mov mov or mov mov xchg xchg jb xchg mov dec std popf lret sarl inc cwtl xchg add mov jne push or hlt lcall mov mov inc movsl cs (bad) xchg dec out hlt xchg jo pushf xchg (bad) sub outsb and stos pop sub and lods das add fdivl mov lcall mov xor into sub mov mov mov mov jg leave sub xchg jnp fdiv aas inc mov sbb xor mov or mov call orl into aaa lret xchg inc dec enter outsb (bad) lea lret cmp repz das outsl dec inc or sbb push (bad) dec stc pusha in aad out and dec inc mov mov pushf sbb stos movsl inc or sbb inc mov into or cmpsb fimul inc pop mov xchg imulb pop sbb jg jle fwait lahf aam adc jo daa test data16 insb or repnz dec lods je cwtl pop inc mov add dec xor adc lcall pop jl imulb in mov ss enter sar je push aaa xor ret mov lretw adc dec xorl xchg jnp xor adcl test sub or push movsb mov stos (bad) sub leave inc xor cli mov sarl mov sbb xchg aad outsl mov shrb aam sub in (bad) mov out and mov jmp inc nop jl jle in das inc push mov sub or cmp cmp mov lahf sbb push mov cmp mov adc test (bad) popf push xchg xchg cmp push out scas test outsl aaa lcall lea and pushf cmp ret mov adc add and pop pusha xchg mov xchg sub xorl fwait and adc push test cmp pop (bad) std xchg fstpt je push jo cmpsb mov and mov jge arpl ja movsl movsl and fildl test mov outsl adc sti push scas leave daa sahf fistpll xor push inc jge jne xchg int jae jno dec xchg in sbb and pop sub shrb das xchg inc nop adc mov je cmp or mov loopne sub inc test jbe (bad) mov add mov cwtl sub dec cmp stc imul inc pusha inc loop cmp push es sbb dec ss ret xor inc cmp jp das inc stos mov mov popf or sub fadd sbb push push imulb lock mov jecxz adc cwtl stos pop repnz or jmp jnp lock xchg (bad) adc jo xor or and leave in imul cmp adc addr16 add dec xor pop pop imul enter fcompl push xchg cmp dec mov test adc pushl repnz sub or imul add dec cmp hlt imul and jnp aas mov daa xlat ret push adc (bad) push inc xchg push cld adcl mov inc dec or mov nop imul roll mov stos scas and lret or jbe inc or lods or es (bad) mov mov call jns cwtl push int (bad) fstpt js mov in jecxz leave xchg cmp je pushf xchg sbb mov push sub popa adc and lret xchg xchg fadds retw push jbe and in xchg jbe or mov jle arpl decl mov and loop loope (bad) fadds push push lds xchg xor pop pop mov pop sarb mov pop in sbb inc mov lods dec ret xor cmp or adc ds cli mov mov sbb fwait push add push sub sub leave push add iret sti or andl outsl mov aad aad mov or out (bad) pop fdivr adc cld nop and pop cmp cmp push xchg sbb stos lcall add adcl outsb test insl mov pusha mov cmp jo sbb mov jl (bad) je lret jle or or mov rclb (bad) and xchg scas or dec fistp push pusha and sarb pop rorb icebp stos adc pop ss jmp xchg jbe add cmp or jnp and sbb popf cmp sbb sub sbb inc popf pusha cmp and mov xor mov fadd ds ljmp sahf jne push int les imul and sub rclb sub dec jnp xor or sub ljmp jge inc add xor cmp sbb pusha cmp stc cli and jb add mov insl and adc inc jecxz sub aad inc mov push pop jo (bad) movsl aaa lock cld sti xor push sar (bad) pop push mov add or shll cld imul rcrl mov xor in out bnd mov dec mov xor (bad) (bad) lret fdivrl inc xchg add pop or or movsl mov nop clc iret or jle or push xchg iret ljmp aaa imul out sbb jg aad mov mov mov pop or cmp mov push imul xchg add sahf jo lds ds xchg clc xor (bad) aaa xchg lods mov xor imul ljmp or adcl nop (bad) xor iret out rcrb test insb test inc xor sbb xchg mov hlt xchg adc lock jae and push mov push and loop sbb push jp sbb dec test mov repnz fwait sbb cli pop inc lods mov inc mov push ljmp and leave or mov loopne lods cmp int std cli xlat mov xchg (bad) xchg jno inc pushw test mov pusha add (bad) jo cmp std das add (bad) fistpl jns pop call mov mov lret xchg (bad) or je stos jle xlat mov aam jge xor inc and or (bad) xchg xchg sahf lahf stos xor js cld mov cld ds cmp (bad) xchg mov adc inc das jb xor push add int imul jno pop movsb jns inc pushf sti push adc mov ficompl lods jnp andl and add xchg (bad) add dec out mov push ss in outsb push int3 push aas xchg mov loopne imul es sbb jge ss int3 pop pop test lahf jb sbb pusha push mov or push xchg xor push daa adc fisttpl jbe pop je std sbb push jmp pop xor ret push mov jg les xor movsb fwait in inc pop clc jle inc jge cmp mov (bad) mov add dec cld pop or push aas push into in inc xchg pop jmp scas (bad) push in pop mov mov fwait add pop call punpckhdq xor and adc sub xlat int3 push and flds lahf sti cmpsb inc sub xchg inc addb std jle cmpb mov out pop mov lock mov (bad) push mov sahf jo addr16 adc mov jg test mov repz fimull aas pop test jl mov sbb dec enter xchg decl and rcl and (bad) pop dec iret mov jp cmp push push in jnp mov cltd pop push dec adc push shlb sbb pop (bad) push cmp scas add and cmp adc jb addr16 mov inc mov cmpsl pushf push sbb es mov jp das (bad) nop mov int and lds pop inc stos and cmp (bad) lret cld sbb movsl hlt or aaa data16 and inc out gs jb,pt sub test bound push mov xor outsl sub push push hlt in add aam jl sub roll not add ds xchg test aam sbb sub jb pop test (bad) mov out push rcrb in dec xchg mov mov fnstsw incl int test xor enter adc add mov and (bad) cmp std int aad incb aaa je dec fistpl mov mov lcall adc movsl push mov mov or xchg mov nop xor or je orl add adc and enter mov je sbb add js mov les loopne or jo mov sub int3 gs xor sub sarl ret mov adc cmc jb jne inc leave out lcall fwait dec ss icebp or sbb (bad) jnp jg sub in mov mov ds sbb xlat mov lahf or mov jb pop (bad) daa cmc jl jo dec ljmp add and mov cs xchg mov cmp mov sub sub out inc inc add js movsb lds adc loop xchg mov pop movsl push clc (bad) (bad) sbb shrl mov or mov jo cmp push fsubs sahf outsl add mov and inc sub cmp sbb pop jge mov cwtl or push mov mov aas or cmpsl pop call (bad) mov sub jbe pop jg fsubs repz adc xor mov add jns push add sbb scas jbe test sub jp lahf adc cltd mov imul mov pop jmp push in adc add push or or das (bad) insl jns mov add out ja fldt sub xor in int stos xor dec lods sub adc stos (bad) mov roll adc icebp sbb mov push mov ret mov mov inc mov push jmp mov lock cmpsb jl mov cmp push loope stos cld das jo pop push data16 mov ja mov data16 in stos pop fwait adc mov das test shlb cmp dec jbe sbb and mov xor fdivl loopne xchg rcr mov sbb dec xor (bad) (bad) jge test pushf lcall add or xchg test jge or mov in sbb jge pop lock xchg js mov hlt sbb add aam je inc pop jo ds bound mov pop fimull inc jbe shll adc inc stos jl pop xor sub aam ret nop add lret sbb push mov jl jnp bound or adc seta push movsl int jcxz stos pop adcl (bad) int inc test fmuls mov inc jb sti add sub push pop mov mov push cmp inc pop push in lret add ret adc dec xchg dec pop dec pop in push or mov popf lock outsl arpl (bad) mov mov or insl push push xor or push test cld fsubl movsl (bad) lret and rorb jns (bad) js mov aam cli or mov xchg add sub call in lds aas loopne outsl in fdivrs lock fmuls cmp testb sahf pop mov cld (bad) cmp cwtl cld xor addb shlb or xchg lock repnz cmp xor or jo xchg mov pop xor popa sbb mov in push sub push (bad) mov sub aam push js pop js lret push mov aas test add lea repz push mov loopne sub or shlb pop pop jns sbb adc dec call pop jmp mov inc xor out aam addl pop in repnz xchg nop sbb test or lret int aad rorl inc jl and push add add xchg scas cltd xor das or loope mov je pop pop pop in test (bad) ret jge jl mov sbb pop and pop push adc fcompl add in xor pop cltd push cmp rorl rcrb jb and aam xchg inc js out adc movsb orb push dec jmp rolb aaa and negb fstps add cmpl sbb sub xchg adc mov dec aam int lcall add movsl adc insb and in or and int ss jnp enter and in pop or popf xchg xor popa enter adc mov test clc cmp fisubr (bad) insl dec (bad) ss xchg out mov into call and jle or outsb mov mov inc or jp es pop sti fimul hlt and fnstcw inc cmpsl mov leave lock pop xchg cli or add sahf adc mov call repnz outsl mov incl sbb adc xchg rorb mov andl or cmp sahf push jo xchg arpl scas jp or sbb mov mov and mov imul or ja xorl outsl pop xor inc push cmpb fist sbbl jl sbbb cmp lret push xchg mov jo lcall ret or cld fsts inc aas das jne (bad) and or cmp aam mov aam or jecxz mov dec xor out mov mov lock adc add mov cmp mov (bad) idiv cmp insl movsl cs mov sar lret xor jl and andl aaa mov (bad) rclb jbe sbb mov xor sub mov push push jmp and lea dec lahf xchg gs push adc aas or test in lock out inc sbb or or dec ss fdivrs nop sub mov in out test jo sbb xor push shr add leave and test sarl movsl incl fistp mov loopne in loop adc xchg fldt mov adc icebp out xor addr16 ja inc (bad) cmp iret push jge mov repnz std cmp adc cwtl mov and leave mov pop loopne leave inc pop int adc inc cmpsb or lcall gs pop ljmp mov sbb in and adc push push and fcomps fiaddl insb leave sub or mov xor dec pop and add adc push mov xchg and fmull test (bad) outsb add or mov jbe leave pushf loop (bad) jle addb pop inc jnp je mov jmp and pushf mov ret movsb jns cmp das lea adc xchg jo hlt xor push mov cmpsl and adc and je shlb aam jp and leave jne lock mov mov cmp push pop out movsb (bad) dec mov cmpsl pop test insl xor mov mov cmp inc pop jge push std add sub jb and mov adc push cmp loopnew add test push mov inc and lds mov clc rorl js sahf cmp pop nop dec stos sbb dec mov mov insb rcrb jp sub pop movlps mov mov adc jns mov mov rol add loopne shl imul movsb rclb lea mov stc sub imul iret in mov jmp sub adc mov shlb fwait mov inc shlb aad push xor sbb pushf std add rcrl loopne es in inc out push xchg aas mov test sub add rolb mov jge jno (bad) jl push int ret lcall lods adc and es rcrb or xorb icebp or sub cmp les cli jbe addb outsl xor les or ret inc adcb lods lcall pop (bad) je jne xchg leave pop inc adc lods or cmpsb nop pop enter mov sbb adc lcall push pop xchg aas xorl sti jl fst inc adc (bad) xor pop lret or jg jl fcomip fiaddl pop cmp add fwait in in pslld fwait add arpl or xor lea lock hlt aaa cwtl repnz mov xlat xchg jo xchg rcrb cmp cmp pop xlat mov xchg ja sub idivl fdivrl xor add add push jle (bad) scas pushf addr16 xor xchg pop imul mov scas idivb stos out push push or jle sahf aas and movsb pop movsb xor and sub lahf fwait or pop hlt movsb bound (bad) int3 pop add nop testl or ds jp jmp lret mov inc mov out pop leave (bad) dec sub push cmp (bad) stc mov mov or jo sbb dec sbb push lods jp pop sbb pop or and out stos mov loope inc rcrl fnstenv std sbb jns fcoml xchg xchg js insl (bad) push xchg ljmp mov sub cli dec dec fmull ret outsl pop mulb push xor je outsl or call je enter scas dec into pushf ljmp push pop push fsubs sbb sbb (bad) mov sub imul aad xor sbb lret cld (bad) into mov aaa out or fistpll (bad) add push jle or insl push cmp sbb add and cmc jle call mov mov mov pop pop out add das dec mov add push jnp push xchg mov cltd push push mov jecxz jmp enter fbld fidivrl jl jae mov cmc push jo clc in inc cmc movsl add (bad) loopne inc or sbb and fwait or (bad) adc mov sbb xor pushw arpl aad fadds jecxz push movl movsl push pusha or lods (bad) xor sbb mov std pop mov fistl test (bad) push pop mov inc in cld adc push push dec mov out les jp sarl inc call in mov or mov outsb daa xor cwtl ret xlat push jmp sarb adc loopne and cmp mov testb adcl sbb pop stos pop fwait add xor jo aas cmc jp pop pusha sbb imul push data16 dec cmp rcl pop (bad) cmpsb or pop add test sti dec pop lahf jmp sub sbb dec sbb test pop sub repz sarb jmp sub insb inc jb jl xchg or push imul fwait ror push jp cmp add and hlt fadds lcall cmpsb int pop xchg enter or mov out jbe xor pop jb mov popa pop leave and out mov fcmovb lds es dec adc mov stc mov or dec cmp repz mov push std cmpsl pop cwtl xchg sti imulb add add test mov mov cmp add stos je push sbb jb mov xchg cmp std (bad) mov pop faddp adc aad movsb aas sarl enter cmp or inc and fwait mov insl aam cmpsb pushf xchg lods mov enter cwtl test clc sub cmp push adc push push adc inc adc push notb pop jl add addr16 sub rol hlt add loopne das jg test cli or and jb xchg int out lea lods nop enter nop adcl xchg addb int xadd mov push xchg mov lock (bad) out outsl ljmp mov popl mov sbb lds hlt jmp add mov or push mov (bad) push or dec es bound cwtl xor mov loopne (bad) in dec ret aam cmpsl inc jmp adc sahf add dec rolb xchg xchg loopne lods push sub sbb jecxz sbb fistp ds shrl sarb ljmp sub lret shlb inc cwtl fs inc push fwait cmpsb test sbb push sarl mov out nop rcll loope movsb sbb pop xchg xchg or sbb mov sbb imul pop cmpsl cmp leave xor (bad) (bad) mov jbe adc rcrb push jb (bad) sbb jle add lock xor in or call repz mov add xchg xor bound hlt cld xor fildl movsb int jle xor mov pop (bad) add mov test xor xchg inc es mov inc cmp repz xchg movsl andl push notl rcl pop fstps cmp or jp (bad) js sahf fs aam (bad) mov jbe pop jg mov inc test jo je in cmp pushf pop stc xor jno sub xlat cmp fsubrs sub and push and enter push jbe push adc sub sbb adc mov inc das ds mov push or testb or cli lds jl push pop cmpsl ds es mov dec xor jmp jge cmp cmp int3 fs aam test and sarl mov gs outsb add test inc jns movsl and ror inc cmc je andl aam push mov enter int pop movsl add movb or in (bad) loop adc nop aam (bad) push or addl jb,pn out push xor fild jbe mov mov mov sbb push xor loop cmpsl mov add or mov fiadd add or add mov add sbb adc je rorb es xor fwait xlat pop dec rcrb adc pusha movhps add (bad) sub in std (bad) lret pop fnop pushf inc and pop inc jb sbb sti sar mov cs jne repz int test sbb dec push inc inc mov push inc jb icebp cs (bad) push pop arpl sub cs aas pop imul sub sub lret in push aas adc inc imul cltd push mov pop inc fsubrs or int ja add pop jne adc mov push sub mov and subl stc add mov stos mov int fist out jge adc fwait (bad) jno push dec test shld shr enter push jbe mov push les jp ret arpl sbb sub sub hlt add cld inc xor lret pop sub insb push sub fs or sub jmp pusha int3 jg aas or add adc xchg mov push imul in mov (bad) mov push inc sti jne test jae or sbb xor lret mov inc or (bad) in cltd jmp jg xor adc rolb cli fimull and inc cld cmp mov in mov je mov dec jl cmp mov test cwtl sub sbb loopne fdivs ret fs dec lock push add xchg clc xor fbstp lock lret cmp and pop jl sbb adc xor xor xchg pushf stos jns inc mov mov inc lret xor xor dec jns pop aaa mov push jns sbb add or lods mov ss push mov sub iret mulb movsb add imul lds xchg or mov or fsubr into xlat adc in inc and in and out nop push outsl (bad) xor dec ret add popa mov (bad) insl in aam mov mov push int pop mov or loopne daa lret jb xor mov mov adc or fimull ror pop sub repz jne sub in loopne test cmp inc jnp dec jo jle jle adc loopne or in test mov sti mov pushf inc jb sub or loopne clc pushf shll sbb movsl push cmp xchg mulb loopne xchg mov pusha mov adc mov xor sahf and mov cmpsl popf rcr or mov mov out pop loop jno sub pop pop les cmp jne rolb out aam inc and movsl adc cs stc xchg sbb push movsl clc hlt cmpsb movsl in icebp xchg adc or lea cmp faddl sbb mov add nop or pop dec lods sbb (bad) push and ffree test lods (bad) lock stc mov jl pop adc xchg push inc push mov add les and xorb mov fucomp pop aam and jne cld adc shrb out pop or fnstenv mov jno call lods cmp loope and mov test xlat cmp fadd jae mov punpckhbw jb ds stos ret xchg add pop and fwait add mov ljmp clc add out pop cld sub jnp fxch inc inc pop lret pusha mov or test cmpsb imul jnp aaa mov add popf outsl or mov mov or test sbb jbe cmp cltd ljmp or xor xor push lods std fimull jl push idivl dec jnp and add je cli jne fisub or pop andl rol lret add inc std or sbb xchg dec cli in (bad) (bad) sti xor out sub add xor or adc xchg push and jge scas repz pushf mov dec xor into inc mov xor fistp push jl pop cld or mov jb mov rolb push repz sbb inc cwtl cmp xor iret std jp fnstsw pop movsb in cli mov xchg fldcw jo cmp and add (bad) mov adc sbb mov xchg add sbb mov and nop inc fs adcl or out and fisubr pop add jns jp jg test ja sub aaa fmull nop fildll push sbb pop xchg mov pop leave dec incl pop (bad) adc mov push push out ljmp out adc imul je or push sbb movsl into or sub or test mov sbb cwtl outsb and jo inc and mov es sub outsb cmp mov jle fptan or and out or pop daa mov cmc inc in outsl js scas xor outsl int and aam mov cltd test gs test pushf jle xchg in insl adc cwtl addr16 add mov les bound test das arpl push lock inc stos cmp shrl mov jle call or mov mov jg jb lret add or es xchg jp jge outsl mov arpl inc mov push ja fist scas jg fisttpl dec xor fwait imul jg add ljmp (bad) loopne repnz out push mov adc aaa scas ficom xchg movsl pop rclb add clc pusha gs ja iret xchg mov and mov js fcoms test xor mov mov mov push loope fwait push sbb push cld notl clc notb xor pop sbb cmp (bad) or or cmpsb sub fstpt add jg jnp shrb pop nop sbb test sub cld sbb mov daa cmpsb (bad) mov cli int mov xchg inc xor adc inc les sbb mov push loop cmp xor addr16 jnp inc pushf push cmp sbb xor hlt lcall xlat adc cmp lds jns test cmpsb lea mov cmp out sub sbb or sti leave cld and sub sarb sub mov cmc push fdivrl adc fwait sub mov jno iret pushf jecxz push inc jne aam aam xor aam inc jge push add mov sbb lods roll and dec jo in cmpsb loop test dec int3 mov xor icebp aad insl sbb adc dec fstps sbb lods mov jmp adc lret or mov je insb jo push xor jl inc rolb out inc test add pushf sbb pop xor mov fimul ja lahf cmpsl repnz cmpsb lret xor sarb inc jnp dec or (bad) push jo jg cmp lret add loope inc mov and pop and add jle lds popf add pop cmpsl loopne dec mov mov jbe ljmp ret test sbb repnz ds lcall mov stc or leave push push lods cmpsl inc jo into imul fsubrs loopne mov in lcall pop sub pop in sub data16 sub adcl leave or rcrl cmp sub vmovdqa int pop add (bad) outsb test (bad) (bad) out stc mov jmp in int test and sub sbb pextrw pop cmp inc in js xchg mov and jns or or dec push (bad) jno cmp adc mov cltd jle mov jg subb mov fwait cld pop xor outsb inc lret popf mov push ljmp nop arpl sbb xchg xor cmp (bad) xchg mov push jle in mov push mov fisubl out add cmpl or test (bad) cld insb lds sub repnz in stc pusha sbb add mov jae push jecxz adc push xchg andnps jb push movsb jl cmp lea add rol cltd sub das lahf roll lret std or imul int std cwtl mov mov push enter inc adc jge std ret gs (bad) loop lds xchg aas push or ret xor mov push jae cmp add mov xlat test add es cwtl mov xorb push pop ret cmp jmp push inc xlat sahf sti in mov roll in mov ljmp (bad) mov mov inc mov je sti mov and ret data16 (bad) shlb insl aaa test in inc pop mov and dec push sarl imul pop test xor inc dec nop decl cmp or mov lret gs out sbb in subb cltd adc repnz aaa clc xchg mov stc movsb or rol xchg push out movlps aas pop jns int3 pusha psllw inc repz and fwait xor add (bad) cld addb cmp mov pusha dec mov push icebp pop pop push jo clc mov pop mov jo or in nop or push cld int jle add fisubrl jb arpl inc jnp lods je xchg sbb cli movsl push sub xor add imul sbb cmp mov inc into hlt pop lock and xor dec aas jg jl xor push pop or aam fimul out mov mov int ret sbb dec sub or jle or (bad) pushf pusha xchg mov xlat or sti int ret jl mov dec push adc xor pop jl bound adc addr16 rcl cmp test jle and adc jle fdivr stos push sbb cli leave cmpsb sbb divl or cmpb lods sbb popa inc ljmp push jns mov pop xlat jl mov mov test lods dec shr pop out lret test jne je psubq and fmuls insl lds cmpsl addr16 xchg push stc call adc data16 pop pop das dec ss imul cmc loopne sbb mov pop (bad) and adc cmp scas jb (bad) mov jl (bad) pop lcall je (bad) cwtl xchg sub repnz push insl hlt (bad) fincstp lock sbb add and leave adc jl sbb push jnp push cwtl out sub inc fcmove pcmpeqb stos aad lret int (bad) cld sbb repz mov call call lea mov stos pop jle fsubrp (bad) pop out push xor fwait jae pop jmp jmp pop aaa adc repz mov pop imul subl movsl addr16 inc std jnp push xor inc or inc mov cmpsb adc pop mov je xor stos ds sbb and les loopne cmp add or jns sbb sub cmp sub mov or cmp mov sbb inc jnp mov push into pop mov outsl pop or push inc aaa or sub call ds ja add jnp test push mov mov xchg mov pop pushf enter or adc stc fbstp pop push sbb lea dec mov pop es fsin and jg push lods lods cmp movsb sar cmp daa jp lcall pop test mov xchg add bound mov jecxz sbb xchg das lods bound jne jp xor or in movl or std sub add sbb fsubl jne rcrl in cmp mov shrb mov xchg nop dec dec cs fildll cmp mov call mov addr16 xorb jne fsubrl fbstp pop sbb xchg mov push xchg pop mov jecxz dec mov repnz or mov mov dec mov js leave (bad) out lret nop mov push and jbe inc inc jg fucomp fisttpl movsb jp and orl movb pop movsl enter (bad) push lahf (bad) std mov clc xchg lret cmp sub in mov xchg imul je stos out call xchg mov repnz mov cli pushf (bad) clc stos stos fstl sbb cmc xor stos leave aad and mov mov fs cld popf cmp (bad) lret push mov loop shlb mov loope or or cmp jo or repnz lock pop pushf and jne (bad) inc dec ret pop push jns insl cmp (bad) icebp jecxz mov or in aas inc loop roll mov (bad) nop jmp scas popa sbb or mov jbe data16 fs adc push cld jecxz add add or ret xor xor mov and or jecxz cli xor negb xchg dec xchg sbb jg mov push xor cld pop aam test sub jecxz movl mov (bad) push lods ds push lret push inc sub andb cmp imul cs loop or jne (bad) lcall dec pop adc ja push mov push lret xor cmp icebp mov mov cmp iret mov dec fild mov popf ret lahf icebp out mov push test (bad) in mov add loopne test push pop fs pop gs hlt or out push cmp subl clc cltd fldl dec and aam dec jno lcall lock inc or test mov loopne rcrl fcom loop xchg imul xor mov repnz stos movhps stc sti stos (bad) mov orb (bad) pushf fidiv popf inc fwait aas add frstor inc stos add pushf pop xorl push add enter jecxz jnp sbb test popf cmp pop xor xchg or jl,pt (bad) daa jmp cld fwait js (bad) jmp inc jne stos xchg sbb and xchg mov cmc adc mov pusha mov cmp mov inc dec fsubrl add xchg fistl and insl aam nop notl and jns stos in or loop xor jg popf aaa cmp ljmp xchg outsl xor or std hlt mov xchg dec in push leave jmp or sbb pcmpeqw and push roll cmc mov sub inc rclb add cltd fistpll cmp clc xchg adc pop xor js push stos jge xchg add mov rolb sbb sbb xor and push pop lods pop mov or in push movsb jle xlat jbe mov jne jo int ss imul rcll cmpsb cltd dec push incb stos repz (bad) sub fcomps popa fs pop fwait xchg and mov lahf mov add xchg mov pop and shlb cli mov dec add sbb out movsb test es into cmpsb add movsb iret jnp loop enter adc in cwtl insb dec cmp dec ljmp fstpt in pushf or xchg jnp mov mov inc or xchg push pushf push hlt push stos inc nop mov sbb imul cmp pop xchg cmpsl cld pop aam sub cli xor jmp dec popa iret popa jbe mov lods jns (bad) shl lds iret or sahf cltd loope (bad) jno sbb lods imul pop lret pop das pop cld sbb inc add adc jle fwait rcr fcompl loopne lea mov cmc lea push xor rolb pop into mov (bad) adc jmp lods push fwait adc test (bad) sbb icebp fdivl test mov imul lar mov cmpsb and movsb jb jb adc adc adc xchg jg addb cmp loope xchg sub mov cld in movb and popa (bad) add xchg sub or rorb sbb mov jge rcrl incb add xor and pop sti popf aam fdivs push subl sbb fs ds and inc cmp dec clc lods fimul pop add imul xor xchg xchg insl fsubs xor (bad) (bad) jbe in or das adc fidivl out cmp call mov or ret sahf outsl or nop mov popa sbb push inc add js or fnstcw aaa cmp add cmp repz cmp test std das xchg adc sub add loope ret (bad) jnp loope mov sbb xor gs adc and loope fild or or inc pusha dec adc jge sbb cmp imulb rcl lret sti sub sub and cmpsl mov pusha fwait push mov inc arpl in cmp xor xchg scas nop pushf jno mov jl scas stos mov inc dec mov mov outsb ret mov call pushf adc ret inc popa in and push test outsb jae jne mov cmp and adc pop xorb jo add sbb cli test ds adc lahf dec sbb lods (bad) pusha or cmp enter shr hlt leave push (bad) pushf ds mov xchg pop cmc dec mov sbb push pop int3 or ja aas jbe xchg add rcr or das jo add shrb aas sbb (bad) pop inc aaa jbe sub js pusha cmp jo pop and and lods pop out das sbb fsts mov dec cmpsl mov lea clc mov xor rolb int3 and stos mov and rcl addb mov imul or jns mov or out in mov add fsubr daa or push out (bad) pusha int cmpsl jp push dec and jae add sub jmp inc aam lcall add jae mov pop dec mov js push lods movb xor or pop test or mov or lock mov mov (bad) xchg incl xchg mov aaa js das jecxz stos pop push sbb lret push sbb movsb cmp cld sbb mov add jg adc prefetch repnz or das inc push mov sbb test mov mov (bad) fstps mov and xor xor jmp add ds push movsl movsl jb cmp jo lea sub rorl ret xchg sarl loopne (bad) int leave das xchg std dec scas push xor add mov iret inc and fnstsw repnz negl testb mov cld idivb sub repz int pop dec pop stc adc jle add sarb xchg scas dec insl mov and fwait mov shl inc fwait mov inc shl jne repnz insl xchg xorl sbb gs pop test (bad) pop das test orb inc and pop pop test pusha push cmpsb cmp pop in (bad) xor test push (bad) dec jp nop mov leave inc push (bad) mov dec adcl cmpl add push jo mov mov add sub out (bad) push and adc lds ja cld xor inc xchg cmp or fsubl and cld jo insb mov xor cmpsb and popf icebp add popf fisubl and lret inc insb push mov xor push in ficompl movsb fiaddl je les outsl mov pop and es movsl inc pusha adc cmpsb xchg std cmpsb loope xor mov mov loop mov daa out mov pop repnz pop push fldenv mov xor xor adc jmp sarb mov pop fmull cltd pop pushf loopne xchg push mov insl sbb je inc ret cmp inc mov in adc push pop push push xchg dec xchg pop bnd mov mulb jg or jg inc nop test push enter ss inc sti lods or pop and sbb sti test mov jbe dec or mov daa jo aas js jmp fbstp test mov sub jnp mov mov add fs lahf dec mov mov test loope sbb dec adc xchg stos aad push inc dec orl sub push mov mov lods xor inc scas xchg adcb les pusha mov fwait pop ja inc dec clc sahf insl (bad) sti push rclb clc es sub test add ja cmpl xor mov in inc mov dec sarl xchg clc or rcrb cs mov nop hlt (bad) and ret sbb xor (bad) pushf adc test jge loopne xor and jp das jg dec or data16 stc adc push (bad) (bad) or mov movsb repz adc or int sbb xchg push lods out ljmp jae mov in cmp adc cmovge fdivrl flds add fs mov jbe add aas aad mov rcrb pand sub sahf je ret mov jns dec xor aad xchg sbb dec fs push xchg mov outsb js or int inc (bad) hlt xor push mov arpl inc jle cmp das inc push fmul jle mov push cmp mov cmp jne popa (bad) cmp and pop popa fmuls addr16 sbb ret icebp adc (bad) call dec push jo or mov out and cltd data16 pushf stos stc stos mov xchg lcall push fnstcw leave mov pop sub sbb xchg pop mov or lret push pop and push shlb imul mov dec mov inc sub call add lock fbld mov dec sub inc fs add mov ljmp mov jb cmc mov jo fidivrl fwait sub aaa xchg in aad in ja cmp pop leave sbb mov push insl push aad mov cld cli popf jnp lahf fldl dec pusha push idiv inc clc and repnz fisubrl mov in ja cmp lock dec add mov daa (bad) jecxz es fistl stos cmp mov adc scas cwtl es cli dec add cmc aam cmp mov adcb ss mov nop inc lods or pop out add mov jge sub shlb cmpsb iret mov adc push pop and (bad) popl jnp cmp pop sti pusha pop mov push aam push or nop pop test jp inc pop movsl push jo adc nop add cld mov dec cmp xchg rorb xor movsl sub into test arpl inc push or nop lods push mov inc roll push xchg aam (bad) or push xchg xor ljmp mov data16 sub and cli out mulb mov test lea test (bad) sarl (bad) lods jmp inc hlt mov add pop xor lret sti cmp div mov mul pop push movsl xchg inc push stos hlt pop add imul and jl imul xchg insb xor sub or loop push and (bad) adc imul cwtl fcomps cmpsb sub pop mov pusha lahf fisttpll push (bad) test xchg jle test mov repz push inc cld or mov lret in rsqrtps cmpsb xchg cmp loope jns and andb int push in mov pop lea xor pop xor dec cmp out xchg push push add faddl jl push enter dec daa xchg pop xor es aam cmp and sbb or xchg jmp mov sub jl pop mov add repnz sub fildll jb rcrl sbb add mov pushf jg mov sbb in or jecxz mov scas xlat ret adc das sub or jge or jbe cmp pop jl pop rol sarl adc inc adc xchg fs mov pop adc inc das jbe cs shll aaa jp enter pop xchg data16 mov sbb xor lcall add fdivrl data16 les and adc add gs add inc jle es das js xor inc jnp inc or fidivr (bad) dec push pop rolb addl cmp repnz (bad) and jg and cwtl sti rol mov daa push lret mov cmp push fbstp jle mov fcoml dec leave sbb (bad) mov scas clc into pop subl cmp (bad) arpl jecxz (bad) fisttp xor inc dec das and hlt pop or fidivr mov gs cmp das imul xchg mov cmp jnp or pusha jnp aas js sbb and mov jb cmc fildll cmp adc movsb and jnp push dec ljmp pushf (bad) popf and loopne jae js xor and popf gs daa or pusha inc or or xor lods or sub js push xlat inc in jbe jge,pn or jmp mov inc push inc jns dec hlt shlb pop jg push (bad) (bad) iret std mov add xchg add add sub leave je jb pusha jbe lcall mov adc push loopne xchg push movsb fwait mov cmc shrb xor pop dec sti jecxz mov lret movsb mulb add rorb repnz push cwtl orps movsb fdivl lret imul sbb mov (bad) fsubs add call out fwait loopne mov scas loopne stos ret sub add enter lods cmp adc adc (bad) outsb dec ret out stos jge mov leave rcrl mov imul sub or insb das ss dec dec jecxz bt sbb add shrb add mov push sbb xor ss mov adc mov pop in xor daa mov adc jbe inc sbb adc xchg das movsb inc jb add cmp mov je mov lock jnp xchg sbb repz (bad) xor xor mov or test sahf xchg adc scas add push outsb cs into popa jp,pn xor xlat xor data16 ss push (bad) inc rcrl outsl cmp in mov jp aad mov out jns das dec pop fstps push inc int shlb push iret jnp add in cmc adc jno sub inc inc adc inc cmp hlt imul sahf or or add mov xor mov pusha imul or dec jne imul imulb adc jb xor push cmpsl in lock gs dec cwtl pop push jle fs es add arpl enter mov sarb fbstp std xor sub adc cmpsl xchg ds mov out cli dec inc xor rcrb pop and int popf lods mov dec jecxz aaa ret jp adc xor mov outsl mov ja xchg pop cmp scas push sub inc test fisubl xor imul mov and jge and pushf or ficom add fs sbb xlat dec stos add mov push cmpsb ds xor data16 mov mov add leave stc push hlt sub sub or mov int3 fadds jge jg sbb sbb jae xchg pusha mov and punpckhbw rcrb and (bad) fwait shrl mov or pop or inc inc push test xchg pop add cmp jg add jbe leave or fs shll xchg data16 mov (bad) jae into push mov pop add adc loopne xchg cwtl inc dec mov jge lret pushf jbe sbb nop push in lret (bad) jnp adc and sti loopne push arpl push fsub subl loopne in pop jg mov rcl fisttp jb std imul push fwait mov mov les inc sbb jbe out fnclex xchg cmpsl addr16 into pop pop movsb insb enter pop bound shrl arpl mov test mov dec movsb mov es ljmp sbb in out xor mov jl push jg mov mov mov aam pop aas icebp inc popa nop sbb xchg (bad) mov outsb std cli test xchg adcb dec rcr sub or loope or xchg mov jnp movsl (bad) bound sbb push sbb ljmp and adc dec push and inc or lcall fist add pusha and je decb stos push inc or shrb out xchg imul sub sbb or scas mov cmpsb mov add imul vunpckhps cmpb and pushf into mov jne mov or addb inc mov and aad or adc cwtl mov inc in jg scas pop sub xchg (bad) mov mov pop scas daa mov adc inc cltd addr16 add test xchg add dec dec aaa inc pop enter xor xor hlt jge xchg add sub cltd or inc or adc sbb loope lods fbld cwtl jae ret xor in lods inc rolb push aad mov popf dec sbb sbb (bad) mov lock xchg loope pushf mov insl adc and xchg mov dec mov mov push dec mov imul cli mov xorb stos and lds je int les ret sbb das pushf pop imul mov mov dec cmpsl icebp orb xchg nop add int3 pop fdivs mov pop xchg outsb mov jb ret pop xor out orb sbb sub cmp jle or cmpsl pop shlb mov mov or inc xchg pop xchg idivb call cmpsb mov cltd incl arpl jb cmp xor mov adc sub rolb aam lea and push xor test cmp (bad) fidivrl sub outsb mov cmpsb push jg aaa add add mov and sbb xchg in and hlt repz add inc xor mov sbb dec inc jnp gs dec xor ds jnp int3 test aaa adcl pop dec jg,pt or pop or inc push ret xorl pop addl in add fildl cmp sarb ss inc (bad) out (bad) xor rcrb jle roll ljmp mov lods (bad) in cmp xor adc push out ljmp jo mov sbb sbb loopne jne adc mov inc inc xor jle ss ret inc hlt adc int push inc mov sub push xchg (bad) mov xor in (bad) dec fwait bound inc ss loope mov adc or insl pop xchg jg (bad) insl daa out adcl push lret push outsb mov div dec cmp fmul sahf xchg pop and xchg sbb pop leave adc push xchg and jl fcomps cli mov leave xchg mov sbb movsl inc adc mov xor in jl lock add and pop dec stos jb xor loopne push xor out and out decl mov arpl mov xchg mov xchg mov mov (bad) mov jg xchg cli cmp mov adc push loop or aam js inc pop jl cmp hlt lcall xchg leave in sbb outsb add xor lds pop xchg cmpl stos inc pop subl dec lahf rcrb adc rolb or push cmp addl aam pushf aas and nop adc add sub addl call cmp fstpt pop fs mov ret sbb aad frstor xchg imul cwtl (bad) les cmp imul js jne sub in fs dec movsb push inc pop (bad) incl ret (bad) jp dec xor scas stos mov adc dec inc cli jecxz sbb pusha xor add inc mov xchg sub lods pop loop mov jnp int3 or dec xlat pop mov mov cld ret jmp lods push xor addl fwait jg add xor or cmc fsub rclb xchg mov arpl and mov aad cmp jge mov or adc shrb aad or (bad) fisttpll iret jo (bad) in adc (bad) jbe cmp pushf scas (bad) shr push mov cli cmpsb outsl stos stc pushf mov cmp adc add xchg fildll push ds adc jmp scas pushf (bad) jbe sub adc add mov fadds in pop inc repz not lock repz testl mov punpcklwd lret out sti mov mov adc sub xor subb cmpsl clc es jns mov popa dec leave fistp aad jbe add and sbb pop cmp sub sarb adc popf cmp and (bad) por pop imul sub pop adc mov mov jecxz in sbb cmc cwtl hlt fsubs dec push movsl and cmpsb sub popf pop shrb cmp lcall aaa sub mov ret bound fsubs (bad) jnp pushl jl aas test test add pop adc mov lahf add dec cmc sub adcl add jmp push push ja mov and pop mov and xor xchg and dec xchg (bad) cmpsl mov sub dec lret lods adc adc xchg dec fdivrp mov jecxz add stos imul push movsl pop adc mov (bad) int xchg inc mov test pop jb popf xchg fist loopne add inc js mov push rolb mov jmp out push mov mov mov pop iret add ret and or cmpsb jmp or imul outsl addr16 nop push aam out pop int insl mov mov sub mov mov xor movsl mov xchg fsubrs xor cmp xor mov xchg sub or or mov sub sub cs add lods jbe (bad) popf pop jg add jnp shl in mov bound dec fs iret sahf jnp roll stos imul mov test loop stc mov mov xchg xchg int add or aad bound xor add leave rorb xor lock adc nop aad jo adc jns dec call lea in cmc (bad) mov cmp fimul pop add inc int fsts xor adc out scas pop mov rcrl sbb pop enter push and pop lea push sbb (bad) pop leave or loope loopne in push sbbl sbb mov lock aas and add xor inc mov lock es pop pop out xor mov cmp fdivl mov sub enter test push add fwait jmp pop negb sbb cmp push es mov add in insl arpl iret shlb and xor out in sub shr mov sbb or mov out and fdivrs outsl jbe cmpb jo pop ss cmpsl pusha push cmpsl xor adc fsts add mov xchg (bad) loopne sub aaa es pop and pop test xchg xchg xchg std pop xor xor or sbb push add pushf (bad) cld dec jbe sbb in test gs in test mov adc push shl mov imul pushf jnp rclb pop sarb test test jns cmpsl xchg sub inc rcll (bad) addr16 test sub or sub jg jnp out or jo loopne xchg jae xchg cmc mov inc cmp mov pop lahf addl cld lcall nop sub jb insl or xchg cmpsb sbb sbb mov aam adc pop (bad) cmp mov jecxz mov sbb mov pop pop xchg xor jns inc test pop inc adc push xor add sbb jne xor pop and cwtl lret adc cld es xlat movsb jo mov mov fwait mov cld movsb jbe xchg mov add push inc xor push daa push lock (bad) insl jl clc adc shl hlt or add repnz shrb adc lods inc xchg cltd or sub incl loope mov sub pusha xor inc movsl call sub je push sti bound outsb in or int nop lret add pop addr16 xor rcrl repnz int3 jo mov adc push pop mov mov data16 cltd add (bad) xchg push int mov jnp cld mov (bad) jbe int pop adc sti leave and inc jbe mov jge out xchg inc and dec mov pushf xor push dec jmp es sbb cwtl push imul xchg pusha cmp jl cmp mov add pop aam mov mov out adc (bad) push int sub jns dec sbb pop jp and (bad) fwait xchg cli bnd cmc lret jno (bad) in call daa push mov jp out or jmp add inc and add jne or pop mov movsl das mov adc movsl js mov shlb scas mov jnp addr16 xchg in xchg add dec jbe cs adc adc push sbb scas fdivrp xor inc jge cmp push sbb (bad) xchg xchg and popf cmp and push mov or jp div leave stc pusha jbe out pop push in loope xchg repz mov and mov cmp rcl adc jp int3 jnp cwtl or icebp cmp (bad) out xchg push mov inc mov nop dec aaa pushf sbb subb xor insl jl push call adc mov mov jge jecxz insb rcrl outsb or inc test inc push sbb cmp mov (bad) icebp daa and js pushf cmp out jb adc pop pop loopne add jae jp mov pop xor fisubr insl push movsb mov add in dec or outsb jnp jae sar xchg sbb mov in xchg lret mov aad mov call fdiv cmp pop or sbb or sub adc lahf rol iret jnp mov repnz mov mov insb rorb lret lods jns (bad) or sub push cmp shrl sub fidivl out mov in fldl imulb and lds sub pop sub jl iret jle repz sbb adc pop adc adc shlb pushf cli mov push loopne jno inc int cmp push dec and push popf nop scas int sbb loop push and dec pop pop push xor cltd in outsb jge jle rolb scas pop in push pop sbb addb movsb or push cwtl cs sbb insb xchg mov fbld jle,pn add and adc orb xlat pop jle push andb inc mov xchg test push aas and adc shl mov mov sbb arpl stos loopne addl sbb pusha (bad) sub nop (bad) hlt cmp sbb pop xchg scas mov lret orb add adc nop jo sub sbb scas mov aam addb movsb jmp shrb (bad) gs orl in shll sub push jno das sti add push lret mov (bad) push push jns ja ret orl and cmp xchg fnstcw cltd mov fildl cltd lret add jo and daa cmp (bad) mov scas roll pop fidivl add in mov js call or cmpsl sbb stos std sub (bad) adc and xor jnp jno out cwtl lcall inc pop sbb and lret sbb mov sti fwait pop mov outsb stos sbb aam pop dec xchg popf xlat (bad) mov or gs mov mov jg sbb movsl mov cmp aas cmp jecxz mov xchg ret push test adcl pop fmull push or and adc xor bound mov mov add pop inc inc clc xor outsb mov out mov push or mov or add fisttp mov ljmp sub mov adc ret mov mov ds gs ljmp jp and adc inc sbb xchg mov mov test (bad) push je movsl mov pop insb add jge outsl aas cmp repnz in inc mov aaa add xchg rcr repnz pop mov sbb dec mov repnz popf in pop daa inc add sub cmp hlt in (bad) push ficom test push sub rol insl jle mov es pop xchg stos dec xchg int dec xor ficoml fimull or push popf mov jo call cmp pop inc mov mov out bound sub js sbb add aas sbb xchg (bad) sub bound jmp mov mov ljmp push mov pusha add enter push movsl xchg push insl mov aas bound mov nop int jo das push pop cld or (bad) aam jge dec sub stos pop adc jno pop jge cmp sbb loopne stos jnp adc lock sbb movsl push mov push mov fmul clc ret sbb push sbb (bad) ss dec shrl movsl inc jp lcall pop cmpsb jnp mov mov (bad) fcoml aad inc and insb lock jbe sub or push inc insl sbbb subb add or mov add shrb mov add mov pusha jmp push (bad) mov addl inc aad or jle or sub jmp lret stos fcoms add and cwtl int3 sub es sub cmp or (bad) loopne mov xorl mov dec dec outsb pop (bad) enter and xor mov xlat dec fucomi mov add add daa sbb cli mov push sbb fildll or cmp jg inc jae out mov sbb and ljmp and cmc jle in mov dec cmpsb and inc push mov sbb inc ficoml add and jns xor outsb or sub jle pop xchg xor (bad) jae xchg pop mov cmp cmpsl faddl sub and or xor sub icebp rcrl pop xchg orb jbe jge sub xchg stos stos cmp push fwait xchg pusha loope pop sbb inc mov sbb push leave push js or stos mov jns push xchg mov inc adc out push gs subl mov bound cmp sbb dec cld sub icebp int adc mov lret outsb add pop scas lret pop add jnp jnp pushf sbb aad leave (bad) xchg dec inc lea repz fs or inc and imul (bad) hlt outsb in js sbb fnstsw xlat or pop pop insl and cwtl dec rcll pop shlb and adc (bad) hlt mov jbe in fnstsw andb sbb int cmp imul ljmp sbb sbb pop scas fcmovne jle or jp pushf cmp inc (bad) cmpsl inc dec les enter test xor cmpsb push rolb jp andb sub jo push inc fistl lods mov sti arpl jne cmpsl xorb jge jl pushf push aad xor sqrtps cli jge adc sub and pop push xchg xchg je mov bound lcall pushf sub jmp cmpsb cmpb xchg stos nop inc mov movsl push (bad) jbe aas aam mov scas stos and cmp sbb js or jp and cmpsb leave addb dec pusha jmp mov rcrb mov jno sub xchg adc andb movsb arpl push xor int3 jb cmp push hlt ja rcl (bad) and imulb xchg sbb adc push dec cs pop xchg movsb sbb outsb adc ja cmp cmp sub push movsb dec add sbbb push cmc loope cmp insb (bad) jns or (bad) or cmp ljmpw sbb bnd rcrl and cmp mov inc mov add es fwait mov fmuls mov enter mov pop or sbb rcr shlb sarl std jle int fisubl repnz or pop mov repnz pop insl es jmp sbb lock mov xchg (bad) arpl imul scas fwait dec adc xor adc leave or adc jns or push test fmull mov adc roll sbbl adc sbb sub or sbb inc cmpsl andb (bad) arpl xchg ret add imul stos jmp fcmovnbe cmpsl push ljmp ljmp or cmpsl int3 repnz inc or sbb sbb sub mov push sub rorb mov sub cmp pop sbb xchg leave fwait pop idiv mull dec and je adc sbb xor ror je sbb fnstenv cwtl fildl xchg movsbl std jge loope dec (bad) or shlb add cmp movups testl dec adc push push add mov adc sub cwtl sbb fildl int dec mov das pminub or mov and inc push pushf pop jp insb inc jle add lock xor jbe pop cmpb movsl mov and es cmp lock mov jne test inc pop addr16 jge into bnd jge ss jp aas or push xor enter dec mov jp or pop and movsl cwtl aad sti xchg in adc jns jo push jmp adc insl pop jmp nop sbb leave and dec jl insb mov mov fldenv sbb pop add jl jns out test add dec test dec lods lahf popa fcom xlat mov mov outsb sarl mov jno or lcall pop lahf jno ficompl enter mov sbb lds fwait jp add es and cmp movsb and test test jns add mov pushf and sahf xor rclb es int inc sub push mov imul push push mov pushf mov add insl ficomp jae push xlat ss jne scas pusha push jle xchg data16 sub aaa sti adc out dec loop (bad) outsb xor mov in sbb xchg sti push adc pop test jle aad pushl push (bad) (bad) sub mov push enter cmc mov or nop nop add push mov ret mov xchg pop pop sub mov imulb or and xchg mov push mov stos adc push or in and push inc mov call pop fmull andl ret popa pop lcall int push xchg clc rcll mov and and lret pop daa cmp movsb nop (bad) lret repz inc arpl call inc jl repz and stos mov mov cmp mov cmpsb add ss pop cmp (bad) or mov or (bad) lock pop je push push movsb sub jl cmp dec jle sbbl lea add test xor (bad) das imul cmpsb movsb dec repz jnp rcrl cwtl mov mov js rorb out adc xlat jo lea xchg push shll dec lock add fwait mov mov out pop std lods gs dec xlat insb adc jp fdivrs mov sti sbb adc scas das fiaddl sbb sub das push cs dec scas add js (bad) out lahf insl in jnp mov add mov pop adc lret or clc adc pop xor jmp je out sbb mov and ret aam sarb and cmc out inc cmc outsl lea inc out pusha addl push (bad) leave stos sbb sub jp xchg ja jno rorl clc icebp xchg dec out shrl cmp insl jle add sbb mov test insl mov imul dec sbb pop jbe mov mov adc xchg sbb dec sub test jle stc cmp iret pop push and repnz es jl add in (bad) adc mov pop sub rorb cmp sbb cmp icebp jle adc lret rcrl ja imul xchg xchg mov loopne adcl (bad) push or sbb daa dec js call mov cmp sub mov or cmp or lret mov sbb lods cmp mov dec lcall mov add ss add in xor cltd movsl xchg mov movl jg or dec into ds sbb push dec sbbb (bad) mov and add (bad) lock mulb jge push sub fiaddl add add inc sbb pushf push inc call testb cmp mov xor inc cwtl xchg push push cmp mov inc scas call pop adc in adc jmp inc mov or or xor push pop das test adc inc pop sti (bad) sbb rcll ljmp (bad) int3 sbb or int push daa nop shlb int3 call cld (bad) test add (bad) sbb out xor lea (bad) into lods (bad) fwait out mov std jg dec sbbl adc jl ss stos fldcw jne push popf jns inc outsl fwait imul add sbb sbb or das jnp push adc cld jbe jle inc adc mov cmp sbbb andl sbb jecxz fcompl inc cwtl jns sub pop jle out mov pushf adc ret fwait push ljmp xchg fwait popaw pop or adc adc adcb add jns outsl pop mov sarl sbb or mov (bad) dec jmp and mov add lret pop fadds inc rcrb lock dec jp add add mov mov arpl or mov fcompl lahf scas mov and mov mov adc fbld pop jg pop add inc dec mov in loopne mov lea push lods (bad) mov inc or test mov dec (bad) ss insb adc dec scas or xor rol mov lcall mov jge fwait mov dec das jo out sbb sbb lock xchg sub test mov movsl pusha test mov lods push inc cmp mov jl cmp leave push call imul mov imul cltd fist fwait mov jo or mov pop lret push out or nop pop ret and lds ret dec sbb mov mov pop and push xchg cmpsb test mov add or and push mov enter mov jge jmp loopne push movsl lret mov jmp ljmp jno gs and sar sbb mov popf or cmpsb sbb cli pop or inc js xchg or repz lahf adc mov jg or sub sub aam push jno mov add je push movsb mov cmp ret jge std cli call xchg es pop les and pushf mov inc add pop mov push fs sbb cmp mov fisubrl cwtl fsubrl gs (bad) movsl or in adc or sbb jecxz add pop (bad) fist stos fdivl out jp jo push popf jl xchg push mov fwait add adc jb lcall xchg bound lock push les adc fcompl jne mov mov sbb mov push xchg jo sub mov (bad) jg xor movsl (bad) iret cmp jmp mov insb jne (bad) mov (bad) push add push loope popf movsl fdivl scas push les pushf lcall add jp outsl ret sub cmp add je gs icebp dec mov repnz xor xchg out mov stos dec pop es mov fwait xchg les mov (bad) jle mov cld sub mov push add jns imul push mov mov insl jne dec mov subl hlt pop mov lock ficompl jo aaa cmpsl or jl sbb pushf jnp inc or jbe add shl (bad) dec jle xchg sub jg and cs xlat or ret daa jp les mov push push popa cmpsb pop dec or pop enter push xor loopne ret insb xor sub cmp rcll inc int mov jb not sbb mov nop adc or enter or das mov pop btc (bad) data16 imul cmp adc cmp or js sti pop lock in xlat jmp cmp cld sbb punpcklbw es sbbb push enter clc std add rcr notb or inc pop add fldcw mov lcall mov call lds aas mov add es push pop and jg mov outsb fdivl inc xchg daa mov inc or data16 fldenv or decb insl push pop jnp jbe outsl dec test insb mov sbb jne loope sahf in pop cwtl stos pop shrl icebp pop mov adc push leave outsl xlat leave inc out cmp pushf pop dec aam mov outsl stos flds aas jg jbe out data16 and gs xor inc cmp push enter sti cmp xchg nop mov pop lea mov pop movsl sub das test test roll scas mov incb jnp shr add repnz sbb sahf adc push xchg push xchg jp mov mov rcrb sub pop mov jnp ret cmp scas mov add add shrb jbe jp cmp mov rcrb jb int leave push cmp or jb nop jmp out inc in cmp cmp dec scas pushf adcl add loop adc push or shlb stc add aam out dec pushf xchg adc jbe loopne push ret sti or es mov fstl push push adcl jbe jns jae hlt mov dec bound jecxz and les pop push aas pop push out (bad) data16 sbb repz or add dec push mov out cld push rol pusha (bad) xchg sub repz outsl mov or lret fildll repnz or stos mov outsl dec pushf in xchg mov pop adc inc mov pushf leave sbb aas cli pop stos notb jmp xor pop jnp xorl in into outsb movsl movsl imul out (bad) mov adc push daa sahf aam push pop inc fabs imul sub cmp (bad) enter dec outsl popf inc xor sbb mov test cmp fwait ss ja sti xchg jns xor in (bad) fadds shl jg (bad) neg nop mov add and sbbb lcall mov nop pop mov mov mov mov enter xlat and or stos sbb idivl ljmp addb add in cmp sub adc hlt xchg push xlat sub and (bad) lods loopne cmpsb or xchg cltd push sbb push or mov rolb pmuludq push inc jae cmp test pop pop push jne imul mov and rcrl jae popw sub inc cld cmp mov mov jb cltd push movsl jg popf xor push mov ljmp jl xchg test arpl cli lock jmp fistp sahf in jo nop repnz rcrb ljmp js or test cmpb fildll jns jg inc mov imul and pop fs cmp or lods sub in clc (bad) leave in pop or push add test mov mov test mov jp and dec insl imul push insb inc mov inc stos or mov outsl dec iret (bad) mov xlat sub popf mov and jo sbb fldenv jae add mov jae mov adcb add lret test mov call mov mov push imul pop sbb push mov dec dec lahf stos js add gs push mov (bad) dec push (bad) rclb (bad) dec adc cs bound or add js in sbb aas push sti or cmp test (bad) mov push push sbb adc mov mov rcrl pop xor popf repz mov sub dec dec outsl push fs jp iret xlat and lock jno mov add sub push mov jecxz test insl push xchg clc jl mov sbb pop pop adc cli (bad) sbb lahf sarl or or pop imul push adc in (bad) push call add jbe pop faddl int and je inc bound sbb sub loop enter aad flds (bad) mov add push sub cmp and mov subb aam loop mov inc cmc fcoms int cli sbbb push or fisttpl ss loopne lret lods out dec imul jnp addb xchg out movl pop xchg insl popf sub repnz hlt dec inc ret (bad) jbe test sbb ret jge scas push shr ret xchg mov push adc jnp pop xor ss jns xchg dec lahf pop cmp mov es hlt call pop cmp jnp jb jecxz (bad) xor clc cltd (bad) xor fildl pop imulb mov inc movsl daa repnz mov xchg xor adc in incl inc or cmp test test jne in or adc (bad) clc loope insl pop add cltd std mov xor call or xadd mov adc test cmp jne add adc jg int rcr loopne rorl aaa aaa pop dec fldenv cmp fildl jmp or sbb sbb pop shr sbb mov jo nop pusha fwait pop or jle (bad) repz jbe adc in inc pop cmp sbb sub adc fsubs sub mov mov insl push dec add (bad) fwait cltd cmpsl fcoms fsubrp dec push stos dec pop das and shlb fistpll es cmp or stc das add (bad) xchg cmp ret or sbbb or add ja sbb das addr16 or lds shrb push das ficom and shld cmp and les je mov adc push ja dec scas jne xchg jns sbb aaa (bad) mov (bad) jno mov je cmp sbb mov cmp inc mov sbb pop adc mov repnz or xchg or inc fs push push scas or adc pop dec bound insb or jbe mov pop push mov mov shll jo push repz xchg cmp mov mov add loopne pop (bad) out ljmp xchg hlt pop inc movsl or dec push mov or pop jle add ljmp dec or stos lds (bad) in cmp fnstenv jno pop cmp mov push je es testl aas mov sbb cmp sbb mov notl fsub pop pop or testb (bad) xor js stos mov push (bad) sbb push mov jb scas jne dec or jbe sub lods lock test ljmp ljmp mov fstpl mov jle ficompl aaa jo xor insl lods daa jle push push in mov inc sbb pop cli mov lds lods in lahf lock mov cmpsl cmp inc add shr shld call aaa jl and dec jne mov mov add loopne pop shlb cmp xchg pop or mov (bad) out lahf ja cli daa std repz cwtl iret jge cmp ljmp rcrl jl rep mov andl das testl imul (bad) adc sti ret push pop aas outsb add scas (bad) ljmp inc (bad) mov test or lret nop leave js adc push pop insl ljmp nop mov pop out mov sbb add es (bad) push push in jb out ja cmp sub xor imul or lods sub push aaa scas sti pop (bad) mov int test ds nop inc lret push dec lcall and pop test mov adc push repnz adc cmp out inc rorl orl jnp ja daa stos xchg pop push jge pushf fmull fwait cmp push das sbb in mov inc (bad) (bad) adc fwait sbb sub mov fwait push ds in mov enter jno pop xchg or pop mov jge ds (bad) mov inc lret gs or xchg cmc xchg insb and insl xorl or mov sub iret pop in subl (bad) and pushf cmpsl push adc inc mov push cld mov fwait push sarl popa xchg popf jmp xchg ja xor outsb in imul arpl lret sub out dec fistl test add push mov and xchg mov inc sbb lods push in push mov int bnd sbb inc pop push or call ljmp or cmp cmp mov (bad) ljmp jbe jge adc sub jg sub (bad) addb dec mov dec inc icebp jle nop jne gs mov (bad) or mov jbe xchg xor or mov data16 je mov sub push jbe cmpsb sbbl aam add dec adc lret inc xchg lds (bad) aam mov jbe mov clc fmull (bad) in pop scas xchg out cmpsl (bad) loopne das sbb subb and shll jmp add fnsave adc xchg fwait mov (bad) aaa addl cmp pop pusha sysexit lea loopne or mov jne lock outsb xchg mov loop sub ret clc and cmp xchg add lcall or dec sub ret or leave inc je pusha int (bad) lret push (bad) icebp idiv pop mov std jbe int out pushl inc fisubr cmpl add stos clc dec cmp adc inc sahf push or push and mov sbb sbb cmpsb rcl ds pop mov andl jl push add lret xlat push pop aad sub push jg mov jl out lret cld rcr into sub lret pop pop push dec jg sbb mov xor add jmp repnz pushfw xor test imul jge repnz je inc inc mov inc or decb jmp cmp js ret pop push pop ret or test fwait jnp out mov inc in sub cmp fisubrl mov or outsb ret or ss bound rclb in sub mov addr16 cmpsl pushf and test mov mov (bad) stos cmp add jbe (bad) sbb movsl jnp push add mov or push xchg imul push mov xchg sub movsl jl push dec nop out push jl jp cmpsb es imul add pop lcall jo sub cmp or sub or subb and pop cs xlat in ds jbe (bad) and lds ret cmc pop and mov or inc jnp xchg push fild cmc ret dec and jle lea stos mov push sbb and xchg (bad) pop sub leave or lea adc sub or mov enter adc test insl cltd sub lods and cmpb cmp cmp jo lock imul into pop lods jp pop add lret dec daa add mov mov or lret cmp fs jnp pop imul addb or mov repnz pop xchg rorl add jns mov mov ss fild (bad) js leave xor addl pop movsb aad dec outsl (bad) lds pop imul andl cmpsb add xor pop and lock jne mov das lock test (bad) outsl invd mov sub adc mov jb,pn mov addl movsb notl add add pushf (bad) ss sti jg in push cmc push fmull pop mov mov cwtl push (bad) addr16 inc xor sti xchg pushf sub sub add pop pop stos jp hlt popa aam and rclb mov outsb aad xchg jo or add jbe jbe (bad) fistp jnp xor xchg lods sbb insb repz mov aam mov clc fcomip jo xchg insl adc ja jmp inc jle rcrb xchg flds inc jo (bad) jne (bad) hlt ljmp testb lock lret cwtl sbb xchg or cmc mov cmp cwtl cmp inc mov push mov out push movsb ljmp cmpsb ss fwait ds jne (bad) xchg add jnp cmp movsb jbe jmp or sub mov adc pop sub add sbb push push data16 mov nop lahf mov add adc (bad) xorl cmpsl mov lahf mov stos sbb mov adc aaa fdivrl hlt pop xchg push stc cmp xchg decl xor fsubs dec inc sti addl in dec xchg sar mov push lret (bad) int3 pop std addl xchg push sbb inc inc mov or xor jle sbb push pop sbb inc jo sbb enter or fldl adc sarb push call or (bad) sarl dec mov (bad) mov shrl daa pushf idivb mov jnp in mov or xor cld pop sbb jb push (bad) pop je into aad lahf stc (bad) xlat ss ljmp sub out scas adc fwait mov cli fdivs inc jb jno xchg outsl jp int test gs add out leave lock or mov or pop and jne jb sbb cli mov push or stc les int jbe pop leave mov out gs daa loop mov adc push les xchg movsb scas jno mov or bound popa push subb data16 or adc sbb jmp aaa push nop jp loop popa insb jle and (bad) push dec pop jg or pop mov mov cmc call leave lods cld jb mov jp xor dec cmp jmp mov sbb rcrb mov or ds (bad) cld sub arpl mov leave out jb test imul cmp and imul jb push sbb push movsb js stos stos (bad) sbb jb sbb lock aad xchg mov movsl int cmpl push adc mov sahf adc out in pusha or (bad) mov cmp movsb xor rcll xor mov sbb data16 repz mov loope xchg adc pushf fsubs push int fsubrs cmp rolb fidivl mov into xor fucomp lahf loope dec aad jne or mov leave push aad popa or sti repnz aad xchg (bad) hlt cmp dec sub (bad) adc inc push mov ret aas add popf insl cmp mov cld insb adc xor add add scas outsb jae cmp push ret sbb add mov (bad) mov roll or clc sub sbb pusha adc cmp push mov fild or mov pop inc jmp jns addl sbb outsb ds jo pop ja xor adc cmpsb adc test loopne mov or ja jmp mov xor add icebp pop sub test in dec dec sub mov addr16 popa xchg call std repnz add call and aas mov add inc imull orb std jb sub and data16 dec mov adc pop push add or (bad) repz out out popf in orb mov mov cmp rcrl sbb add test ljmp mov mov add adcl addb or mov addr16 insl fild add or dec sbb mov ljmp outsl imul push clc pushl sbb dec sbb vaddsubpd sub aam inc lret add jnp pop out (bad) into (bad) btl add add fistl dec addr16 cli jbe dec sbb in mov aam insb (bad) sbb pop lods inc dec pop or scas xchg inc loopne test inc sub inc lret addr16 pop sub loopne adc test pop (bad) clc lock nop cmp (bad) sub dec das das into insb loopne lds xchg shrl inc cltd add sbb (bad) call sub adc es sub pop sbb xor sub xor aas gs aam cmp sbb jge xchg xor pop mov lret jno cwtl ss insl pop js jo push mov adc repz push fnstcw loope insb xchg jo sub mov fidivl mov mov inc mov shrl pusha hlt insl pop xchg loope cld fistpl push idivb and pop inc fwait xor leave stos imul rclb push and inc xchg out add pop jl mov jo add mov dec push mov or or movsb gs xchg push ds dec mov andb lea dec mov and or mov and mov in movsl push test push scas pop or fstpl xlat test popa pop jmp xlat push test or push push into mov add cmc xor inc mov xchg inc dec daa adc push fcoms test lods or sti add fistpl adc rorb or pop mov mov mov movsl dec or sub mov xchg push pop cmp cmc lock xchg rorb stos lcall sub xchg mov loopne jge add jnp push sub and not mov inc std (bad) sbb fninit adc mov out (bad) ja push mov pop sahf ss dec or and or pop dec gs mov shl lds nop mov mov lds mov add pop outsl dec test mov pushf stc adc mov int sub sub imul adc in pushf or ss mov xor sub mov pop fstpl fist push pop sahf les pop leave or out xchg test into pop cmpl add aam (bad) inc add inc inc aaa fwait je and repz mov popa push inc lds sbb and in push inc rorb movsl xor pop sahf sub nop (bad) cmp les mov loopne in inc or add call shrb xlat fs push sar out aaa ss xor sbb movsb xchg xchg (bad) push sbb mov or sahf jl xchg dec imul sbb loop jbe sub inc fildll jp add shll loope mov into movl test bnd push test cmp or enter repz jg (bad) inc movsb inc jge sbb add jne mov sbb mov cmpsb mov (bad) data16 dec mov imul (bad) pop and jnp lock sub mov sub pop mov xchg or test testb cmp je lock jl push outsb ror pop lods sbb add loope jo mov movsl (bad) and mov or mov insl enter sbb sub cmp incb jb lock sahf enter add movl jmp test sbb mov sbb cwtl push push ret sub ljmp xchg xor in leave sbb imul add stos cmp in jb mov mov stos repz ljmp nop (bad) push dec jno sbb nop pop (bad) nop jae lret xchg negl dec inc cmp sbb fwait incb mov or xor jnp and adc into imul inc and icebp out or in dec lock mov iret cmpsl scas sub mov ret inc sub xchg data16 ja hlt daa mov mov and xor inc add loop scas imul xchg (bad) xor out push outsl fistp mov aas push mov (bad) adc test add cmc mov cmp cmp and sbb mov sbb fwait xchg cmp push inc inc inc dec vmread xchg lret daa es iret data16 jnp test inc clc jnp or sbb jae sbb (bad) and (bad) loopne jb mov add push cmp push dec imul mov cltd jmp aam (bad) mov movsl sub mov nop cld xor sub xchg sub repz dec push and dec inc pop arpl fstpt adc sub jo,pn mov cmp hlt dec lahf add aam cmc lahf arpl adc fwait daa int3 inc adc cmp daa (bad) lret mov lock les es outsl or (bad) jmp adc or ret lcall sahf cmp xchg jbe enter aad fadds mov push (bad) or sub jl aas (bad) mov (bad) jo jbe cltd cmp in stc cmp cmpl or bound push movsl icebp sub push insl adc xor loop lock pop pop push ret pop addr16 aas sub (bad) jbe aad inc faddp adc or cmp cld sti cmp aam decl lock jl push jne hlt dec mov mov adc adc sbb mov adc cmp sub and fdivl jo pop pop xlat (bad) sub jecxz add in loope addb inc cs sti xor cwtl je movsl mov fst movsb xor mov (bad) jle insl cmpsb dec or sbb mov jb iret inc push repz fdivrs mov imul imull add mov ds dec (bad) fwait je inc or (bad) pop ja dec (bad) jo loopne int pop sahf in cmp sub adcb ret mov js jge pop push adc inc adc repz add hlt sarb or push jbe sbb ret jmp lret push cmpsb mov cmc loopne jns add outsb cmpsb mov or (bad) or subb push decl xor arpl push cmc ficompl jecxz sbb jbe pop jle iret (bad) or int (bad) iret ss rorl or jnp or push pop inc or xor push jge lret sbb push cmp sub push adc repnz mov sbb add xlat pop jae push jmp lds dec popf lods xchg xchg sbb add push and dec pusha gs stc stos push cmpsl cmpsb inc out add jb and jmp and adc test ss pushf xor rcrb push bound push cld pushf nop loopne add sub mov sti jne sbb jb or int add out pushf mov sqrtps js cltd ret or sbb sub arpl or jo (bad) ss aam clc xor mov push push (bad) push jnp dec mov jns push cmpsl mov lds cmp loopne adc loope jmp lea pusha dec or ja push rcrb and or push cmp fs mov dec das sub inc push test and mov add cs xchg insb test inc sub sti xorb cld jecxz pushf dec imul sbb sub (bad) loope pusha out cmp ja pop jo add insl jb jo rclb hlt mov js add mov rolb inc sub dec outsl test mov pop xor dec or dec xchg insl adc in es (bad) mov repnz sbb dec dec sub fsubrl add sbb mov cmp jl montmul cmpsb add and push pop cld add adc dec mov roll js movl xorb cmp cmp outsl cmp (bad) mov jbe inc (bad) rcrb sub fsts call daa aad add aam mov jp mov inc repz (bad) dec fidivrl mov popf shl addr16 fild inc xor loop lcall fcoml inc loop jb push sbb and sbb test pushf ds pushl mov lahf gs push pushf mov sbb sub (bad) lret enter cmpsb stos std imul push pushl jecxz add jmp sbb add lock shr push fisttpll shll outsl or loope dec (bad) repz jl pop and mov pop jo push outsb (bad) cld shr enter pop in lds insb jb or rorl pusha mov add pop lods pop hlt inc lcall and ja jmp cmp sbb int3 inc mov or fsubl xor testb stc xchg in cld arpl inc pop insl (bad) jo ds mov mov dec clc add push dec (bad) or push or jne jne pop pop jge ficompl mov pop jo outsl clc push scas jmp sbb jbe xor xchg mov cmp mov add push or bnd cwtl aaa jl jno mov test sub xor int (bad) not sbb mov or jle xchg sbb (bad) lock f2xm1 addl rorb shld push sub imul pop dec (bad) cmp scas cli mov lcall jmp xchg test sti push dec outsb xor mov or lahf mov jl fwait inc in or daa push bnd dec divb add sub mov push cmp cmc push sbb push pop xlat lods in jne push pop lret pusha cmpsl out insb add pop je inc sub int3 add fnstcw andb mov mov mov popf pop mov aam cmp mov movsb mov push jne movsb clc or pushf mov jnp or xlat ljmp xchg xchg jno mov push clc enter sub je push test sarb inc dec hlt xor popf jl fistl mov (bad) ss jle enter scas inc xor or mov inc cmp aad or movsb lret push push xchg sbbb jno dec mulb jle push mov or jo cs fwait xor sbb or dec into loope dec jecxz pushf sub fwait (bad) sbb jle (bad) aam bound adc xlat subl sbb mov add repz xchg mov mov fild or ja xor jecxz jle inc jbe mov in jge std or je mov mov lret popa rcrl addl loopne mov push pop xchg popf mov add xchg cmp lret cld popa cmp sbb sbb das push fstl add cmp stos lods jnp icebp repz cmpsl push lcall leave jp lods mov pop dec dec movsl jge fdivs add or scas push movsb sbb insl push fs rcll add pop xor xchg or js mov xor ret outsl jbe sti (bad) imul jbe inc call in mov sahf addb test sahf push mov push cli or mov mov or (bad) imul jb mov in xor jbe mov mov in add in pop test pop dec or or andl (bad) inc cmc pop sub mov jae loopne popf sar push in shrl stc and cli adc sarl pop out push or loopne imul fnstenv inc xchg sbb daa jp enter pop sar int3 adc jecxz fmull lea mov inc ret enter pop fiaddl sbb vaddsubps adc or fwait aad sbb sub sub fwait mov in mov insb jbe popf dec or push pop pop adc xorb inc cmp jae and sub sarl or loopne sti push imul cmpsb mov (bad) insb dec inc movsb in cmc loope jmp push or rorb sbb andb cmp aad xor jg rolb sub inc popa test mov push xchg add psrlq rol hlt sbb pop fistp fldenv imul inc lret pop fisttpl (bad) hlt xor pop push xor sti mov pop sbb adc (bad) lret fadd cmpsb mov dec jg push (bad) (bad) pop push rolb mov push and ret data16 gs fs shlb sahf jbe mov test mov sbbl enter push leave push pushf clc xchg incl cli fisttpl sbb inc mov or mulb sbb mov push movsl sbb jns pop or add push (bad) das int pushf mov cmp repnz xor cs mov pop add dec cs pusha lret pop repnz add mov inc mov leave fsubrl pop add mov xchg test pop jo stos (bad) xchg das push mov lods cmpsl inc jnp movsb mov ljmp sbb (bad) sbb xchg inc or mov pop push pop mov in leave movsl jns sbb test jae rdpmc jo inc dec je mov add roll fcom gs scas mov mov fwait sbb pop push adc adc dec pop jo lea loope lahf mov xchg das add push int3 pop sub or sbb xchg stc fs push fwait mov add jecxz les mov jne sub test test in out stos cmp dec lods sbb mov (bad) cmp push cld add xlat or sahf or sub pop jg stos dec pop in push xlat and (bad) iret or test pop add pop das orb cli fldt popf sub lret ds sbb add out mov xchg insl cmp fadds aam out xor movsb add sub jp and cmp loope pop mov add cs mov fldenv cmp sub sbbb dec arpl xor lret inc aas mov xchg pop mov outsl sbb call sti rcll and js incl xor scas lahf in or fnstenv les pop dec in inc pop (bad) (bad) arpl pop repnz push lcall repz sbb aaa (bad) xor and add (bad) fsubr add hlt push nop or and outsb pop fwait pop jns aaa xlat fild in fnstenv pop int popa lret vmread in push enter outsb or je dec add sbb das fs push or push bound rcll in sarb add jno clc fisttpll adc pushf popf ss andb jmp sub sub data16 add inc jl mov pop xchg push push cmp mov push rorl or inc push fwait roll and mov pop fisubrl movsb xchg bound pop sbb int pop movsb popf push (bad) data16 adc leave adc jl int3 mov lods int pop enter or sub (bad) fnsave rolb cmp (bad) les push or enter xchg cmp imul add shll mov aad push pop ljmp lods rorb sub insl xchg addr16 cmp or negb or and in repz imul movsl test inc push dec add leave (bad) and aas inc mov pop push shll lret cmp push mov nop pop mov jns bound stos xchg rcl iret ds std stc sbbl jbe and dec das ficomp xor fadds psadbw lods repz (bad) jle push je fisubr adc lock jnp adcl xchg add xchg and lock incl in push add xchg leave sbb push in mov adc xchg sbb fsubrp leave andl inc pop into lahf sbb dec (bad) mov cmp (bad) data16 lret in push mov cmpb sbb xorl sub xchg fmuls (bad) or add lret sbbl xlat dec fs pusha movsl xchg test cmp push int popa dec dec loopne imul iret repnz sahf add mov loopne ror jo (bad) ds les sarb push mov in fcmovne pushf add movsl mov adc jae mov or sbb inc es pop mov pop cmp sbb sahf sbb pop scas mov in xchg and adc addb inc aas cmp in insl dec mov sbb cmpl jg je (bad) lock jmp in pop (bad) and das cmp cltd add dec nop scas xchg sbb xchg fwait mov cmp and lock jae cmpsl nop jo cmpsb sbb or inc xchg (bad) sbb lahf inc std jnp mov fildl add addr16 push add pop cmp pop pop push lods pop cld sbb and enter dec dec pop add jnp dec les (bad) hlt test add jae mov mov adc cmp std inc dec mov jne mov lods clc adc orb pop xchg sbb cli adc sub mov push jae loope xlat insl clc mov or arpl enter es cmp insl mov adc in cmpb pop xor test fdivrp fbld mov add add neg sbb pop adc jl aas xchg pop push cmp inc fcomi ljmp xor mov pop add push and add hlt mov jl in jo test sub inc cmp sbb jge movsb ficompl aas lahf nop arpl sbb sub adc add bnd in jecxz les lret je in adc dec es jne push sbbl in or lea xor repz add loopne xchg or rcrl dec pop jmp push or and leave add (bad) push push xor xchg pushf fisttpll cmp jl push push dec scas push inc pushf or sub scas mov push dec (bad) int jle lock dec bound (bad) mov jno mov xchg mov cld or adc mov or fnstsw push mov sub push in sbb out push sub cmp pop lret test xlat xchg mov lea fisubrl andb jo lea push mov outsb sbb xor mov jge fldcw push clc stos adc out outsb fdivrp and sbb mov lds or cmp jp dec add jmp outsl repnz repz sub test mov aad xchg in enter jl (bad) testl push push stos ret (bad) jb (bad) mov (bad) xlat fild pushf mov call xchg cmp sub xor imul enter sub adc adc mov mov push or push adc iret cmp mov mov lods cmp mov mov or out ljmp les push stc lock cwtl xchg sub rolb jae cld mov add xchg pusha pop popf in xchg pushf es mov dec mov dec cmc fwait dec adc mov imul je mov cmpsb xorb int and outsb test or jbe je jmp cmpsl sbb cmp jecxz jo sbb fs add imul or pop mov pop pusha jbe ds xor or mov jge pushf fisttpl lret push sub xchg cmpsb (bad) enter push or sub jnp aaa mov pop or in insl push rcl push dec jo (bad) xor cmp popf lret les test out mulb into mov insl xor mov cs mov push sti mov push mov inc js daa ss mov cmp nop mov mov inc cmp lds jnp cmp (bad) in pushf push repnz and adc test (bad) in dec sub cmp add mov push push mov jbe sti pop push pop add jae jp cld push mov das dec sub mov aaa jmp mov pusha test cmp out popa (bad) lock mov test (bad) in jbe lret sbb out lea stos push jmp sti pcmpgtw idivb cmpsl test dec mov mov sub fwait in ss (bad) push pop sbb or and sti inc adc xor pop pop aas sub ret xchg push inc jecxz aam lock (bad) push jecxz aam cmp das inc mov and std xor pop repz mov nop in push lock data16 mov ja xor push jne jnp stc adc jge movsb popa or xchg sbb lret gs dec movsb sarb dec (bad) pusha add (bad) iret xchg push sbb lds call mov add mov popa push gs or (bad) sahf (bad) (bad) ret sarl sub cmp inc inc aam outsl ficoml (bad) or cld outsb mov and or mov mov int3 icebp or lods cmp (bad) push adc in adc sbb je adc sub hlt clc nop push sbb add push enter es in sub in or loopne inc (bad) in and add hlt das es inc das (bad) mov sbb dec and and push cmp rcrb clc mov dec fistl cwtl rcll enter daa or rcrl dec fdivs stc mov mov add sub ljmp sbb inc aas ret pusha or (bad) into sub sbb sbb test mov int mov cmp pop outsb mov mov icebp cmp mov adc (bad) lret pusha or in sahf test aad inc adc sbb mov pop add push mov add or pusha xor jg popa test sub lahf mov fdivl mov sarb mov xchg xor add mov dec clc movlps sub add mov clc and and into stos ja or lahf push or ss jo pusha addl sbb jl fs outsb sahf loop movsb xlat fwait sarl clc cwtl jmp push sub sbb jl add dec inc lods rclb outsb scas mov (bad) pop adc add jb stos das fcompl sbb orl jg push rcrb adc jle clc out adc jge sub xchg cmp sbb push dec adc in sub jns xchg out pop aad xor jge je pop adc cltd xchg mov and inc in mov or in push rorl mov xor inc fs jp jl cwtl out push push shr mov push (bad) aad jmp cmc sub mov mov mov addr16 xchg pushf inc sbb pop mov mov movsl (bad) repnz (bad) out cmp mov hlt stc sub adc imul mov xchg push inc push add xchg (bad) or or lahf lret sbb lcall test int3 jge fs jp mov jge dec inc imul xor jbe sub fs outsl sub mov push ror push jbe gs fnstenv pop cmp adc cmp push or adc mov aam push lahf jp adc push sbb pop add (bad) sbb aad jbe or sti adc wbinvd stos sub cmp dec std movsl sub dec sub jge fild dec push mov mov lret scas xchg ss xchg inc (bad) lods fs loop dec jbe add cmc jge inc or push jle pop add (bad) or cmpsb sub jns adc push mov mov pushf push xchg sub repnz cmp cmp pop mov xor out sarl sbb fisttpl inc add out pop mov push loopne adc inc sub mov in incb lcall test add push lds rol fwait mov sbb (bad) mov aam sub mov jae mov jmp (bad) jecxz in or mov (bad) das jmp nop jl sbb adc and lock jl adc xchg popf xor pop js negb mov push adc or inc pop sbb jge jp push or jns out adc push (bad) push mov sbb lret xlat std adc dec int3 dec out mov rcll pop push xlat sub pop lahf jle adc pop adc xor mov stos xchg decl adc frstor pop imul xor stos insl lds bound (bad) jg dec sti jmp in inc push scas movsb fnstenv jbe pop mov xlat cmp (bad) or mov xchg movsl or push cmp add pop (bad) pushf pop add sbb les stc cmc iret add mov xchg add sbb inc and (bad) ds dec into sbb or add or xchg fcomps pop cmovge dec xor mov fimull dec pop rep iret addr16 nop pop mov ss fs mov and jp mov aaa mov in pop cmp loopne pop lods daa dec jne or test mov xor in mov jne push mov push xor or in idivl xor jg sbb jae ss xchg int3 or mov dec cmp or xchg and pop popf out (bad) sbb mov or mov inc sub shrb mov mov push std jbe mov jmp xor enter ljmp inc mov lock jnp jg cmp repz outsb hlt lods lret cld inc cmp pop push loopne aas ficomp aam sub dec popf bound test cwtl mov add or mov add data16 pop or fdivl ret mov pop (bad) xor fstpl xor dec sbb add sub pop lds ss xchg call lods xacquire xchg xor push mov mov inc fnstenv andl xchg addr16 bnd sbb sbbb mov outsl push xor jg stc inc insl daa cmpsl and or jo movsb mov hlt jmp jmp movsl fstl add mov xchg imul push cmpsl sbb and ljmp jb inc inc sub xor push mov xchg in add mov testl pop call shl rclb sbb dec sbb ss mov jo fnstcw imul pop dec jns sbb icebp or leave inc repnz fstl repnz pop outsb daa cmp in data16 pusha test outsb mov orb lock aad mov test fnstcw (bad) mov sbb sub rorb xchg mov loope in xchg dec xchg adc (bad) push push mov add sbb or sbb push jp cld outsl and nop xchg jne mov sahf and push sbb jno or add bound imul int3 repnz mov push sub mov mov mov pop imul mov xchg in xor push not pop in mov movl jnp cmp movsl cli xorb pusha mov jle lds mov imul pop push jo das or jp out test mov insl xchg push testb in mov and outsb (bad) xlat popa pop aaa adcl xchg ret scas sub mov adc mov int pop inc mov es (bad) in addl ficoml lcall cld shr mov bound dec mov ja outsb sub xchg loope dec sub orb aas cmp (bad) (bad) push int3 (bad) mov ds test or cmp jg fnstcw inc push jg add sbb jle,pn sar lret rcll dec test ret add scas jl mov jle rcl sub imul sbb fidiv jg loope pop sbb fsubr bound mov out and stos cmp out push mov lods sbbl pop es imul leave repz stos loopne xor leave and xor push outsb andl mov and ret mov loope outsl xchg lock dec sbbb aas mov jp cmp sbb xchg push pop xor adc and repnz pop pop cmp (bad) hlt sti insb movsl or push cld in or add sti xor inc mov sbb sub aam inc ds cmp mov pop push dec mov push jg jge divl cwtl mov xchg imul pop sbb fwait pop sub add jg mov movsb test loope xor sub pop and insl ljmp add dec xchg jmp xchg lcall pop push pop jne and js scas cmpl sub pop sub push int3 jmp sub sbb fcoml xor pop imul add jmp test ret call sbb out pop hlt outsl fdivp xchg mov mov mov scas ret pop and mov out push adc les adc cmp movsb mov (bad) mov sbb sub mov out lods fcompl shrb sahf std (bad) ja ret pusha imul push jb leave gs xor jb mov jg aaa (bad) into jge movsb or movl (bad) jb mov popf inc cmc movsl (bad) or ret insl (bad) hlt mov ds shr dec push adc mov fs mov sub daa repz cmp clc repz ret cmpsb jbe ds sub test cmpsb mov push cmpsb push sub cmp lods jb decb leave (bad) xor test mov cmp popf rcrb orl js loope imul (bad) ss fldl popa mov mov add and (bad) xor or scas (bad) inc aaa fisubrl jl cmp or xchg aaa lock mov icebp adc scas jl push hlt leave mov mov jne int sbb ljmp add mov ror jae lods mov push or xor in fdivl or pop xchg jne mov fstpl sbb shrb aas lds xor sub adc pop cmp inc (bad) dec and xor pop popf push xor dec cld inc sub adc add or jne mov or sub incl pop sbb repnz aad loopne or imul call and push cltd outsl fwait in std js repnz int mov aaa les lret mov cmp hlt test lods or lock jbe push cmpsl jge add movsl hlt fsubrs jp (bad) loope mov inc and out shl mov jg mov jle movsb das cmp inc add fs shlb mov cmp or fild mov jbe aaa and stc mov sbb pop test adcb sbb fldt pop fistl mov (bad) js shll or sti cmpsb mov inc adc push or pop addl out xchg sbb mov stos push lret shl pop jl mov sbb or das movsl adc lock fidiv dec bts loop fwait push ror mov in or pop cmp int add cmp xor popa adc ja mov mov leave sahf push test mov aam sub mov mov fstl movsb ja lds push cmc push je push xchg psubd add data16 cmp std adc sub cmpb pop in fcomps (bad) jl rcll add repz (bad) adc sbb enter orl and addl sub xchg sti inc or xchg cmp fs add cmp mov mov movsb xchg jg push movsb arpl repz test pop mov xchg bound inc call and pop sub jg pop sbb je test imul jb inc dec stc minss ds xchg fimull sbb add add (bad) pop sub dec aam insl dec dec push out sbb or jmp push fs lds pushf mov cs jb push mov call (bad) sub xchg es mov movsb inc popf cmp (bad) fsubl popf adc sbb xchg ret (bad) xor addl mov cs mov sbb cmp fidivl push cmpsb xor push loope addl fwait pop repnz jg xor lret (bad) xor push or fs aad loopne movsl dec pusha fbld mov or (bad) lock mov inc mov cld push stos jbe in jns push xchg cmp aad or fldcw jbe jo adc sbb xor dec addr16 ljmp jg sarl push jo mov lahf hlt inc sub mov lods push cmp jmp sub fiaddl fdivrs inc jl mov mov (bad) incl mov add sbb pushf lahf or mov sbb mov pop fsub sbb loopnew,pt cmc aad loope and push sbb lods jl sub ljmp unpckhps add mov push insb mov sub mov cmp mov jp xor repz inc inc and push jge pushw fdivrs jne inc in iret divb stos addl mov xor inc or lods sbb (bad) aas repnz mov pop or mov (bad) shrl aad test insl push xorb fdivl dec cwtl or aaa movsb insl sti leave repz add xor jae lea sub cmp cmpsl sub in inc mov sbb fldt mov (bad) xchg insl dec xchg jnp push fmuls fistl jl pop jbe or ret orb xor les inc lcall ljmp jbe pop outsl lret mov fwait rcr jp loope xchg cmp popa xchg and sub incl dec jns aas jge inc test or xchg sbb icebp lahf fisttpl mov and repz bound test je xorl adc in and dec rclb cmpl loopne das out test add in jmp cs aaa mov lods cmp xlat lahf repz leave adc popa mov add jo inc fs jb and lods xchg or mov inc jl pop jae aaa xor mov mov imul test push call enter (bad) or xchg shlb mov mov mov in xlat pop (bad) int mov sbb in ret pusha cs add subb mov in das in sarb lret scas sti jae add xchg push fldt xor daa xchg insb test scas rclb xchg fwait add out insl test les mov ret in lea push xor cli push or data16 (bad) or (bad) je test mov add lcall lcall inc push call in cmp jne arpl cltd sbbl or or sub mov sub pop cmpsl and inc cmp push mov mov test or push imulb sub xchg push xchg mov imulb js ja pop pop clc nop sbb out (bad) imul rcll (bad) enter aam jbe cmp adc cmp test jne mov movsb jno and jp sub push pop mov xchg push dec cmpsl sbb loope xor jns or rcll loope dec mov lods dec sbb pushf subb jecxz adc dec mov enter scas call cmp xor test (bad) cmp stos cld fistl popa hlt jo push add mov pop mov fstps das inc sub (bad) push cmp mov fldcw lret mov cmpl in aaa xchg mov dec lods movq pop in sbb mov add in ficompl jbe xorl jne and and dec adc adc and ljmp out call sbbb pusha jb pop mov (bad) rcll mov mov cmp inc int push popf cmp sub pop inc and (bad) mov repz xor push nop push sub mov ficoml jmp or mov push sbb insb jb orl data16 int test and sub lods mov fs scas rolb test inc test push pop and std sti (bad) in mov mov adc jb scas js jecxz or in mov mov sbb incl add pop lahf jge (bad) lods pop aam pop mov add xor xchg das rclb cmpsl pusha xor jne sbb or dec sub ror mov sti lret push mov (bad) mov xlat or jbe lods jno mov loopne lods or sub (bad) jbe xchg cmp sub test test dec outsl add cld loopne movsb (bad) add nop pop mov out scas (bad) sahf imul icebp push jb ss icebp jnp sub sbb adc test sbb fwait jbe ja stos (bad) ret cld dec js aad bound int adc in roll add add jge sahf cmc jl cli mov jnp and lock pop je iret and add nop add dec mov xchg jb pop jne or sti andb sbb data16 lods mov add rolb rolb jmp jo mov (bad) xchg add adc mov sbb sbb sub pop push adc add xor lock cmp xchg xchg push or dec push mov inc dec jg mov add push fldenv sub stc fcmovb out ss enter pop sbb rclb in push pop lcall test sbb je repnz cmp and jno,pt jecxz jns ja lret (bad) mov mov insb add insl cwtl lret out pop loop pop rcrb faddl jnp test or and push popf out xorb inc test and test sub sbb or dec adc rorb sbb push fwait jo push jo mov iret mov ljmp pop movsl fcomps adc sahf or sub int push rcrl mov cld loop cmpb and hlt pop enter sub push cmpsb sub ds aaa dec and jle add jg xchg sbb inc loopne,pn or clc push mov sbb out movsb je dec test mov push sbb inc add dec addr16 sahf xor fsubs ja push mov test and (bad) sbb add mov cmpsb cmp mov je bnd shlb test add sbb loop ss sahf stos add push enter dec lret sbb gs cmpsb mov lock xchg mov jo fwait shrl fwait stos pop adc shrb icebp dec cmp add (bad) xor hlt scas xor xchg sbb adc test movsl sbb out mov cmp lcall jns jecxz inc adc cmp jae xor test loopne mov cmp xchg sub out pop xor jo adc sti in cmpb jg movsb xchg ss cmp arpl or ret movsb fild mov imul xor jecxz rcrb mov (bad) adc mov jbe insl pop int sti or mov cmc mov inc fwait xor and sti adcb (bad) das scas pusha cltd fwait adcb mov pop mov cmp sti scas loope in pushf mov xchg ds add lds shrb and sub mov sbb bound (bad) jnp fmull cmp mov fistp addl outsl stos xor insl enter icebp lods inc in adc xchg mov movsb jno cmpsb sarb add push into (bad) mov push nop jnp test adc sub cltd in xchg rorb adc loope daa adc and lret mov rorl sbb les stc lahf pop shrl add loopne jg subl sub bound lods inc jle repz popa xchg or adc imul sbb pop je adc xor cmp push jg dec lods sbb sub adc push imul int jl or aaa roll adc jbe lret push jp add cmc sub cmp mov mov mov leave xchg mov arpl outsb aaa cmpsl nop or push dec fimull add cmpsl scas sbbb aad mov xchg mov ret or insl jge mov fidivl loope addb lock loop rcr cld or (bad) loop jle imul movb ret lret rolb mul xor bound int3 mov cs aas inc jp ljmp bound ret cwtl lahf imul mov add sub inc lret xor mov jnp adc dec in lahf add jmp mov sar pop mov (bad) out push popf and lods pusha add or add ss ljmp int3 pop iret (bad) dec xor lods lods hlt and xchg addl in add cmpl xor or shll xchg jp adc loop add jge cli (bad) lahf das lret or inc sarb cwtl mov pop pminsw push sub xorb xchg std or sbbl jg cmp fwait push pop mov pushf push je test jo lret add xor (bad) in and pop cmp fcmovbe fwait loope in push xor inc sbb add mov test (bad) push dec mov hlt sbb xor es jle shr aas dec outsb (bad) mov in or inc jl add sbb je out (bad) sbb (bad) pop cli call pop jo orl loope mov sbb pop (bad) lret jmp push and push jle add sbb jbe (bad) pop rcll addl add pusha sbb test jle insb scas inc jmp fstpl inc lods jnp inc (bad) jmp test mov aam (bad) jbe fisubl imul add cwtl push dec dec xor and movsb sbb push in mov or sahf rorl jle lea sbb scas (bad) dec cmp mov (bad) lods iret lret lret mov ss add stos gs (bad) jb insl jg inc xchg lahf sbb aam pop mov push and push sbb sub into int3 jne pop cld add cmove mov outsl imul movb sahf mov xor popa or fistl and addr16 (bad) mov or inc cld sub sub xchg mov push jmp roll movsl and negb clc jecxz adc dec push jge xor aad movsl adc mov lret pop push push fstl inc mov xchg cmpsb jo iret popf dec out shr or push mov test inc jno sbb xchg or jo out mov mov aas daa or sbb cmp nop mov and pop pop mov or or xor loop (bad) fldt loope or repnz xor push cmp and mov jb push out inc shlb gs jp inc sbb test movsb pop sbbb inc std mov mov add push mov xchg or xchg fwait add nop test pop fldcw or mov jb (bad) clc es repz mov sbb sbb adc call movsb out push fadd lcall and add cmpsl sub dec cmp lock es push aam (bad) iret inc gs lcall cmp lret loopne movsl outsl lds (bad) mov popa mov add pop push cmpl std sub mov jne mov xchg ret dec sbb mov or hlt repnz jge ljmp and lcall push (bad) sbb rclb jb out dec inc xor adc inc mov nop sub adc xor shl sti mov pop mov and cld or ret lods dec adc pop pop inc loopne sub decl aaa pop xor mov bnd cmp pop adc push (bad) out rcll and enter or shll mov or push inc mov js insl push (bad) loop ss cmpsl cs out dec lret (bad) (bad) je mov adc bswap cmp scas push add rolb inc pop inc out jl rcrl adc js adc and push and in dec sub adc lret rdmsr lods lret add push movsb jne pop push pop nop inc or int inc mov ja lahf xor lret add (bad) sti mov cmpsl sub cmpl pop adc mov cmp je mov jg scas add jle xchg inc xor aam (bad) mov add mov jb sar sbb leave mov je es aad nop (bad) scas mov inc mov ret jl addb rcrl pop jns mov sti pop mov in call or data16 lcall cmp and mov sbb jo cmpb xchg or and cli mov in in add mov jo jbe addr16 (bad) dec out mov lcall and icebp aam out cmp addl xchg jbe mov addr16 push mov inc pop or mov push roll jae lds movsl insb mov pop pop or inc lret cmpsl sbb lcall add loopne jno jg dec lock aaa ljmp mov pop mov inc xor dec aad dec test add mov sbb mov and dec xlat mov pusha jge in imul mov dec inc js (bad) cmp je (bad) xrelease in pushf cli inc gs (bad) sbb pop mov sbb repnz dec push add adc fdivrs add adc lods out jbe add gs jns sti fwait and xor clc xor xchg jo cmpsb ret jo and pop int xchg mov repnz es movsb sub stos mov std sbb je imulb bound adc mov ljmp add mov mov lea movsb aam mov aas rcr ljmp push cld ljmp test mov inc das adc mov inc mov stos cs sub (bad) and jl dec insl cmc popf sub push add hlt ficompl jp jne xchg inc mov dec aaa jbe sub lea xlat aas and test ja xchg adc test flds jecxz imul push fstpl gs mov jl xlat or enter leave push aaa int jmp in hlt sub mov push cmp mov adcb push cli imulb and adc push xchg or cmp mov pop sbb cld jl adc pop (bad) and xor insb jnp cmp mov repnz rcrb insb push stc frstor lds jle dec jbe (bad) mov inc fcomps jg pop es je mov push dec dec ret sub cwtl jno addr16 sbb jmp adc sub mov lret ljmp mov outsb (bad) and out xchg repz cmp aad cmp xor pop (bad) inc rol mov and or or cmc lret sbb fwait xchg mov insb xchg sub out call xor rcrb adc test decb add dec dec cmp push sub sub xchg and in lods dec cmp adc stc call mov mov pop mov fs rclb les pop scas lahf movsl das jg js cmp jg sub lea sbb (bad) or adc (bad) rolb shll in (bad) orl mov (bad) or nop xchg fnstsw in sti dec int repz and push and jnp sbb hlt pop and fisttp pop in lret mov daa incb popf dec in clc test imul pusha xchg add in enter bound outsb or mov insl mov add inc and loope cmp mov fnstenv pop mov mov add (bad) ds nop (bad) jge fldenv xor jnp cmpsl jge ss add mov das cmp pop inc dec mov in out call jle pop cmc (bad) xchg sti sbb xchg insb out sahf pop les (bad) out or or or stos leave mov cmp int3 mov je add popa mov mov push dec std ja in xchg cli mov in pusha dec stos mov mov pusha movsl clc call push (bad) push fidivl add dec mov jo rsqrtps push in das and (bad) repz mov (bad) lret jl push test (bad) jmp in mov jo mov les iret mov jbe add cwtl xchg in in jbe lcall pop fcomps dec pop adc data16 sbb mov sarb addl scas jnp movsb clc lcall fldt sbb mov loopne pop into pop push lock mov jge test mov data16 jp or sub dec or xor xchg or std add xor fwait loopne sub mov jg jmp fisubl popa pop pop aad push in pop dec adc inc int add inc lock or outsl gs xchg aaa aam or and seta push inc sub mulb lcall out push fsubr xchg jne lds icebp add add fwait call mov sbb push sbb pop inc ret hlt (bad) pop mov sub fildll fcompl jns subb jae and lods cld mov cmpsl dec sub cwtl sub movsb jb bnd nop jge mov jb cwtl pushf (bad) push lahf pop mov mov popa insb mov fistp mov lods out sbb int3 pop clc xchg pop add int fwait imul idiv jp scas sbb mov cmp xchg lds cmp or inc (bad) lcall outsl adc fsubrs inc mov cwtl dec add fild (bad) jl and decl pushf lret and mov shr sbb jp mov sub repnz test loopne cmp test ss fwait or dec data16 int3 je ret add data16 cltd add adc dec pop xor enter mov inc jnp push jle pop and push jno sub arpl jp mov cmp int3 jb icebp repnz xor sbb adc and mov mov lods cmp int3 gs rcrb push jo out mov add adc sub lds jns sub sbb shll jo sbb mov sti shrl or lret pop push lds ror jmp lds aam int adc or mov or imull fcom hlt loopne sahf pop mov jno out pop lea inc sarl inc jle outsl pop pop arpl cmpl loope pushf aam inc imul loopne inc mov (bad) testb sbb pop out pop stos jne test and ljmp jge iret lods jp cmp not rcrb xchg call or pop mov das jns gs aam dec jle je inc je arpl pop pop sub or xor cld movsl sub mov and add rorb aam sahf jb pop mov roll jns sbb lret out xor inc push inc dec push xchg xlat and cmp jno pop sub pop fucomip mov cmp sbb or pop mov or mov jg insb pop add out movsb mov (bad) enter (bad) jb mov ja jns lea nop mov adc clc in fisttpl idivl mov push jb fsts xchg outsb pop mov int3 add mov ret sbb xchg stos adc lret cmp mov pop in (bad) xlat jbe lods lds out ljmp aas cmp lahf test repnz and pop xchg outsl pop stos xor jb popf inc xchg fwait or hlt mov jp dec push rclb jmp cltd lcall jnp ret jl out cmp std int3 add icebp mov jb push fs nop pop mov (bad) cmp leave iret mov mov jne test cmp mov stc movsb push cmp push cmpsl mov loop mov jo std and in lret jl mov mov pop push and mov mov loopne mov clc (bad) int3 (bad) hlt jmp std dec and mov mov inc mov inc mov pop rclb movsb mov inc or xor pop dec ljmp push cmpsl addr16 jle mov mov jbe or dec jnp insb sbbl dec push inc psubusw pop mov xchg int3 cld and bnd or lea sbb lods add cmc orl and test dec sti pop iret andb loope jmp fsubl jp mov divl lods xchg xchg fwait sti mov in or (bad) mov mov mov jle pop mov sbb lock pop add rep lea dec out mov into inc fwait adc test dec cld pop jle clc (bad) pop cmpsl (bad) cmc jmp pcmpgtw daa aaa jp push cmp popa lahf mov repnz fsts or enter mov push add (bad) dec rcr push je cwtl fwait pop out and enter mov (bad) mov xchg mov or mov mov movsb icebp mov cli jnp outsl dec xor push daa outsb dec std xor inc or mov (bad) fstl adc xchg dec std jl (bad) fwait mov xlat mov jl add dec xchg dec faddl push push jnp out cmp out scas arpl jne iret lea int stos ret cmpsl sti shll insb clc andl (bad) data16 mov cmpsl xchg test iret dec push add and scas ret imul in xchg ret jle iret push jle sarb cltd fwait call fildl dec les rcll lods (bad) loopne rcl and push paddb mov dec mov mov inc xchg dec pop and jne pusha or mov mov push popl movsl imul test jle into jle lds fisttp push mov cmp cmp (bad) insl pop or jae sub jge jbe xchg xor hlt adc mov pop nopl mov jnp and xchg sub or mov jnp pop and mov add dec or push mov mov rol push je ljmp or out fild pop push add or in dec mov out push cmp inc mov (bad) xchg jge pop int cwtl adc in stos aam fsubr insb lahf jl mul adc cmp push jmp in movsb ss idivb cltd out mov (bad) cwtl outsl mov pop sbb icebp addr16 or cmp mov ds mov mov into fild ret pop mov push and (bad) mov sub mov sbb adc and mov add pop and sbb call nopl pop in arpl jl add xchg mov pop into mov int push insl or mov imul pop push or pop test push in push dec xchg cs mov (bad) sahf (bad) dec and (bad) dec add lret fmul mov clc fsubrp sti add cltd mov mov pop xchg movsb xor add xchg test pop push in inc shrb or ljmp mov mov into mov dec adc push data16 fmull mov imul mov insb mov (bad) testl pandn dec xchg mov mov push test insb insb mov mov sub stc xchg sti add and int3 pop fs imul stos stos test dec pop gs xchg xchg stc lret mov sahf xchg add movsb cmp push or (bad) dec into scas pop fxch sti gs lods (bad) ljmp push mov sub mov jle adc aam scas clc mov cwtl cli mov stc cmpsl xchg clc mov fisttpll mov movsl (bad) mov pop mov pop leave cmp test xor add fcmovne (bad) aas lcall es gs js imul testb cltd mov ud2 das icebp pop xlat test mov push clc loop mov cmp push (bad) inc std push stc jl xor jle and rorb jns pop adc or shr sbb push xor mov outsl push movb cwtl adc fcmovu aad jl sub pop adc jae jl and fistpl (bad) push addr16 ret xchg mov std pop pop lret cmp lcall (bad) out xor std sahf in lods addl mov inc outsl xchg sbb cmpsb stc cld je jnp jg inc add es mov pop stos js cwtl (bad) fwait testb cltd mov jae dec xchg jg sub adc iret in mov (bad) frstor mov sub jle jno cmpsb imul insb jl mov cmp push push rcrl lret idivb jb mov test mov stc inc mov popa pop aad addr16 mov fxch stos fwait push outsb sub lret js pop pop (bad) das int aaa xlat (bad) jmp call mov dec pop sbb mov fimul cmp fsubs into pop mov mov mov or jmp repnz add imul mov mov adc mov rorl pop pop cltd iret lret das shll inc orb or dec (bad) in ret test cmovp sti js add stos cmp jmp (bad) fwait imul push dec imul imul mov (bad) mov (bad) fidivr stc sbb jne fstl (bad) imul pop push or dec sahf adc addr16 in cld xchg xchg mov xor and notl sbb mov push xchg std lea stc jnp popf je cmp xorl cmp fcompl or inc pushf ret pop addr16 sub fsubr mov popf (bad) adc cltd leave pop jp xchg in mov or aas fst ds dec mov popf sub movsb aad jb mov mov inc pop jge aam add dec scas mov imul push jl adc dec jno in mov inc cs xorb stc mov shrb sub or add sti out mov (bad) and jnp iret clc mov out sbb popl addr16 test (bad) fwait jp jmp aaa pushf aas lahf inc mov rolb jmp inc mov repnz push mov push jnp (bad) stos or jae sub into adc scas mov jmp xchg stc pushf xchg stos addr16 push add mov push sbb in mov adc mov das test outsl andb mov lcall xor out push je xchg imul dec adc (bad) cli (bad) jecxz xor cmp xchg es inc orb cmpsl xchg pop fcomps add ljmp adcl cmp pop loope stc xor lret (bad) outsl in loopne gs aas cli xchg lea jne btc mov call movl mov pusha movb lea jmp pop stos out jnp sbb mov leave clc in (bad) leave repnz push cltd fnstenv js dec imul mov loope xor mov mov push icebp xor pop call push pop push js mov dec add int3 and pop dec sub rorb (bad) and adc mov inc sub adc cwtl jl jmp inc or xchg or (bad) movb push stos mov sbb mov mov lods (bad) mov cmp jge add or aas jecxz loopne cmpsl std cmp repz fdivrs mov (bad) jle mov mov sbb xor int3 add les and adc rclb cltd enter rcl subb add xchg pop adc mov outsb (bad) jg inc jl add popf xchg mov andl push or lea and mov xchg (bad) or push pop je pusha cmp inc pop sbb clc (bad) push ljmp mov dec pop pop push int3 shlb mov inc jle fmuls xor xlat jo arpl movsl mov sahf push leave dec imul xor cltd xchg cmp and xor add sbb aas mul fbstp xlat (bad) idivl cs cmpsl mov rorl loop or xchg push cs into xchg mov in jg cwtl in dec xor mov push dec push xorl pop stos mov call inc cmp xor insb xlat mov (bad) lret ds ljmp hlt lret pop insl cs xor jnp mov dec push outsb sbb sahf cmp gs inc add mov repnz roll push add lods xor dec rol mov inc popa pushf mov or addr16 jmp xchg mov sti dec jg xor movsb or loopne sbb push push adc push pop (bad) mov sar fidivrl or lret xadd leave lcall enter adc lcall imul adc jge fdecstp lods outsl sub jns jb gs into lea rolb pop jmp loopne or cmpsl push in or pop sti and jae rcrl pop fmul inc gs xor ljmp dec sbb pusha lea jb pusha lea call push lea jne lea mov pusha movw pusha lea jmp lret add lods test inc pop pusha lods add add xchg xchg add test or mov push sub addr16 (bad) das rclb inc mov push adc jp test mov data16 movsl and idivb add cmpsl pop add add cld xor mov and movsb pop cmp aad mov aaa ffreep adc outsb pop cld mov sbb mov jmp xorb lret dec bound add imul jo notb insb sti add mov popf nop ljmp in mov mov push in test inc (bad) lret js inc pop in or fdivr (bad) jg (bad) aas outsb addr16 (bad) push xchg push pushf int repz sbb adc sub (bad) adc insl loop cmp ja jb sbb adc enter shlb jnp pop fwait lods cmp sbb dec sbb (bad) (bad) pushl xchg jnp push inc dec push repz (bad) jae fs or add and sahf popf shufps sbb sub ljmp push lcall xcrypt-ofb cmpsl stos clc cli jno dec jb push lcall hlt adc stc cmp cwtl in mov clc inc gs out xor add xor push and jmp in mov and (bad) sti or jl xchg imul mov cmp or cmpsb inc pop mov pop fwait xor fs sub push jge ficompl rcll cli leave ljmp aaa xchg ljmp or jo out jns mov sarb add jmpw or das cmp lcall xor iret sub les xchg inc adc sub es data16 cmp (bad) mov xsha256 cmpsb xchg sbb pusha inc adc jno mov popa jl pop xor or lock test mul lret insb push inc jno ret push xchg cmp lret sahf test add movsl sbb in imul adc or cld test loope cmpsb scas mov aas stos rcrb jne cmpsw arpl or adc je add loope push jne dec sbb pop addr16 insl lea mov and fstps mov cs sub ljmp into xor cmp sub sbb mov outsb out xchg jb movl call pushl mov shrd clc xchg bsf bts mov lea mov stc pushf jmp movb jmp add add add add add add add add sbb add add add add add les add xor jno or mov movsb enter out cmp cmc loop jno in nop fs mov xchg loope xchg jbe jne jbe enter movsl add je xchg imul jbe mov lods push fimul sti sub fidivl mov hlt cmp jmp stc push mov push test in inc aaa xchg xor shrl mov fmul loope sti jb jns fcomps (bad) dec int cmp enter loop sub pop pusha (bad) mov cwtl call outsb inc sbb jnp push out sub and mov sub lret push adc sub inc arpl outsl add pop jp xchg bound push inc insl push mov inc xor push and pop mov inc clc (bad) mulb mov cwtl in loopne scas sbb test mov mov add insl or repz out sbb fidivl adc cmp scas sbb mov cmp or pop pop outsb or mov mov or scas movsl or jmp pusha inc es out inc push nop adc inc pop or lcall rdtsc mov lods dec cmp dec in pop sbb addr16 cli mov or and pop or jge (bad) xor and jmp mov sahf xchg inc test or and stc ret repz out aas movsl sbb xchg cltd cmp movsl repnz loopne aam sub ret movb dec aas mov ss cmpsb daa pop pushl pop enter fwait add xchg fs pop push mov dec pop (bad) add or fidivrl mov add mov sub leave aam sar push xlat xor leave iret lahf loop (bad) loopne mov out pop or cmpsl adc xor jns loop mov enter popf xor pop das dec stc xchg push push dec adc movsl push jl and pop ja cmp loopne xchg or ret fldenv mov loop lret popf icebp jp xchg fild sub into cmp ja jmp xlat je xchg xlat adcb clc or mov add std jb xchg stos cld jne jecxz mov inc cmp clc pop (bad) or jb popa scas mov push imull arpl (bad) aad in jae mov inc shlb int3 mov (bad) in push inc in mov dec call ret dec inc add imul popf and jb dec ret mov jno into inc dec or cwtl pop xor push push mov insl dec sub sub out pop adc xor test mov pop push cmp cmpsl push int3 bound add scas xchg xchg adc (bad) out mov cmpsl pop out sbb push add sti ds push pop inc mov xor movsb xchg test xchg out into push les arpl mov jae or sub shrl mov cmp mov mov aad popf mov addl out (bad) xor fnstsw sub inc incb popf bswap into mov into fsubrs cs jae dec cmp xchg dec in (bad) push out or and sub inc mov mov mov outsb loope lods repnz and mov inc jbe imul das push jo push imul popa fucom rolb loopne bnd sbb out sar push call in dec sbb mov dec shr adcl pop rclb fsubl lea iret and arpl xor dec les in icebp or aas (bad) movsb mov out jp xlat lahf ja orb jecxz jp sti inc pop mov jmp pop mov in in or lods rorl jo aaa xor pop outsl lret jle jo fs js xchg or or xor inc and push xlat int3 push (bad) xorl fwait lea push cmp lret jg pop addr16 pop nop cwtl inc jp fstps outsl lahf je add cld in fsubl adc pop aaa rorl cmp mov mov add jp lea xor jns out out int mov jb aam data16 sahf rol lods (bad) pop jae cmp sbb outsb mov xchg adc push jne or (bad) push mov outsl test push mov aas jmp push out push cmp imul mov jno jl xchg jns push sub cmp rclb adc mov stc lods insl cmp sbb cwtl mov cmpsl xchg inc (bad) mov ret cmc mov cmp push aaa adc loope sbb inc jmp sub pushf insb dec mov cmp and pop add cwtl mov int out pop fdivs mov inc in and mov adc incb push inc sti jnp outsl adc inc jne icebp xlat and imul xor (bad) mov pop push pop mov idivl add rcl sub (bad) mov in push inc insl or pop jnp and (bad) insb sub jne popa rclb scas lret fistl aam pop les push dec pop fdivl insl pop shrl adc int out sbb in sbb push xor daa aad aas and add ret push sarl cwtl lea inc add nop cmp clc das psrlw inc stos sarb pop adc scas fsubr repnz pop rorl popf mov ja ds out inc aas ficoml dec stos rorb mov xchg xchg pusha cmp scas outsb mov inc jno cmp bound ret jl jecxz xlat sub int dec sahf shlb imul push add lret cmp or lret lret bound loope fisubr mov fbld mov cmp mov mov lds mov mov cld mov enter push pop movsl fistp fidivr icebp cmc jnp outsb (bad) pop pop lods jge shll or mov bound loopne cmp mov cmp lods or imul mov fimul incb xchg mov popf lret cmp xchg imul imul xor push aas mov jae push clc mov enter jne repnz cli int dec dec jge pop pop mov cld jp sbb dec dec adc jmp or pop inc dec fnstcw aad std mov jbe popa sbb pop cmp sub inc jnp sub test xlat rclb adc mov cmp int (bad) mov xchg xor clc pop je push push pop xchg out push loope loope js or aaa cmc jmp push icebp sahf fdivr mov mov xchg outsb xchg in push cmp (bad) mov mov or cmp xchg in xchg jbe iret cs sbb sbb enter enter push pushf sub fs or push jp (bad) in ljmp sarl out stos xor clc push (bad) mov out xchg mov scas aas pop out out imul jbe xor xor mov rorb fimul movsb jge sub in sbb sub ds insl xchg into ds add xchg fstp xchg test addr16 jns adc popf or mov mov xchg jne push test mov mov sub cmpsb mov into arpl dec add sbb sbb dec pusha jmp and cli jns fs lock dec cmp mov inc push in pop or mov arpl dec jg fcmovnb arpl ds (bad) insb push test (bad) cmp daa pop jp jge (bad) repz xchg aam bswap pop jge or inc jae,pn lcall mov faddp push mov or popa test and sbb add test stc cmp cmp sub mov jb addr16 sub imul mov mov insl jb inc data16 lock test clc in push in jmp pop pop mov jae jno dec xorl sub leave fcompl (bad) mov std jbe hlt add mov rcll icebp jbe pop mov popf fcoms out (bad) dec sbb fldenv lods ss push xchg rorl sbb mov (bad) aaa aad pop enter jmp xchg imul fsubrl dec mov and cmpsb in sarl jne pop iret pop aam cmp jp into (bad) mov push mov data16 (bad) and push loopne pop push enter and jle jg ljmp add sbb fcmovnbe xor cmc cmp bt xchg xchg int jp dec mov xchg mov cs jno shrb lds stc aad nop sti and daa fwait and and cmp inc push shrb xchg (bad) scas out or lea and fistl mov xchg std add in (bad) lcall mov je or mov std scas and and js sub adc mov daa pop xchg mov cmp lret and cmp decb rcll (bad) stos enter fild test inc (bad) aam out xor pop xchg and pop dec mov push popf insl add icebp mov fsubrl test cmp gs lcall lret and arpl sbb add and int sbb push mov das adc repz arpl inc pop xchg orb ljmp nop (bad) sub (bad) enter push test popa mov dec andl inc repnz mov insl cmpsl stos xchg loope mov and idiv pop sub xor iret mov and mov xchg add pop ds call push daa jmp sub hlt aaa movsl inc imul jo mov pop mov es ret js or mov mov ds shll out cmp mov mov test mov inc jge pop (bad) movsb sub cwtl not pop aam and mov pop xorl fild xor popf mov rcrl mov lock std jge pop test cmp pop pop xor outsl jmp outsl xor inc pop clc dec push cltd cmpsl mov add aaa mov mull mov pop jmp mov ret lock push fdivl movsl lcall and stos jmp stos decb xchg nop xor add xchg sbb add xchg pop and add enter out ljmp shll push cmp cmp push pop lock sub in sbbl aaa jge (bad) je imul stc (bad) sub and add and cli dec mov nop dec cld cmp mov pop gs xorl aas mov repnz lods xchg pop xor gs ljmp mov cli das or mov out jb call loope sbb push xlat (bad) stos out lcall jge cmpsl or sbb push push (bad) int3 sbb adc hlt mov (bad) js sti dec jecxz push jecxz mov outsl xor rclb lahf ds jle cmp inc jle ss popl pop pop add sub adc loop lods xchg movsl cmp addb sub stos mov lret cmc mov adc push pop cmpl sbb pop xchg aaa mov push pop sub imul jle add cltd cmc mov dec dec cmp lea iret mov enter fdivrl adc aam lret stc xor imul les imulb dec (bad) popa cmp dec pop int3 pop add and lea stos push push add fnstsw (bad) mov not mov pusha inc pushf mov jmp push pusha lea jae pushf test mov add ja cmp call push xchg aam sbb pop adc cmp lods dec imul sbb in scas fistp push sbb mov js xchg and xor xchg adc jl sub mov mov sub jne sti scas pushf jmp (bad) les dec arpl in lahf sub (bad) pop das je cmp mov add xchg xchg mov cmpsb ja psubw enter dec fldcw hlt outsl cmpsb jo mov add add stos (bad) shll movsb or icebp xchg sbb sub lods and pop insb stos pop aas sub mov sbb lret lret adc in (bad) fldl mov mov bound bound mov (bad) rcrl xlat cmp xor dec xchg je sbb ret stos ja andl in pop cmp mov fstpl aad pushl hlt push and cltd inc insl popa inc scas and cmp push ds imul pop scas mov je pusha (bad) xchg dec mov xchg repz and xor sbb arpl mov or shrb cmp cmp cli out mov stos enter insl push or std dec stos cmp nop outsb out lock push jle cmp test jns inc mov push mov sub mov ljmp outsb jbe dec xor push sub into daa pusha (bad) push clc cmp inc aam lods and addr16 aaa mov jns (bad) icebp stc xchg dec outsb in dec pop fdivr sbb jne or inc pop rcl sbb push sub mov lret lcall adc (bad) mov jbe int outsb js mov lods mov sub loopne and ret mov mov ret mov rcl loopne xchg fs movsb mov or mov rcl inc cmpsb xor mov cld sub push lds xor add aaa push roll jp pop dec icebp jo cld movsb xchg dec test jnp mov or ljmp outsl dec lret fwait mov cltd and jo jp cmp jp pushf xchg cltd pop pusha pop xchg add lods gs mov sub js inc xchg addr16 (bad) push test aaa mov sbb frstpm(287 fisubl ds jmp jnp mov inc mov mov in inc test enter add push adc xor out into popf or fildll cmc xor gs xor push cmp out in add inc mov jns popf dec ljmp sbb dec xchg out and jmp mov pop or push call movsb sbb imul mov rclb sbb inc shlb daa movl and stos xchg test jbe mov fmulp in das or out out adc int ret xchg dec or add sub dec xchg jge int3 xor lea sbb xor add loopne dec push stos jne jo clc push fdivs xchg dec stos js and push (bad) push lahf jno repz call cmpl rclb in xchg mov mov inc mov cmc jmp dec pop cmpsl jnp sub mov (bad) lret leave push mov fstpl sahf pop cs xchg or xchg andl in fsubrs ret mov adc xor adc add pushf lea jmp iret or and pop cmpl (bad) fnstsw ljmp fwait inc (bad) xchg stos and notb out popf sub lods test or xchg xchg jno cmpsb js dec mov adc mov ss fcoml loop nop data16 push cmpsb mov pop arpl rorl clc adc push fadd inc es sarl js cmp xchg nop xor jb mov leave (bad) jle and xchg mov jb xor inc arpl mov setne cwtl xchg mov dec push lahf movsl cmp cltd push and jecxz fwait jnp pop lea dec fldcw les sti stos int mov xchg jbe inc push loop push sbb pop stos mov dec fcom xchg xorl cmp cmpsl xor sbb push xchg (bad) test std pop mov xchg out xchg mov cwtl faddl lock bound sahf inc dec pop pop (bad) and aaa xor ds popa push and pushf pop pop mov test inc jg test adc test fwait mov add adc inc outsl cli and pop idivb (bad) sti mov sub arpl sub pusha inc pop pop test ret and push cld movw push jmp cmpsb dec sub out lahf (bad) out mov mov aad sbbl popf cld add mov cmp dec mov pop or (bad) pop call iret mov cmp pop jle es cltd sub stc mov adc jp xchg dec xchg imul addr16 iret jge dec push repnz push mov (bad) push in (bad) mulb adc cmp and jnp mov bound popf sbb shr insb lcall test and mov sbb jmp adc add mov gs cmp jae sbb sbb stos aad inc mov cmpsl mov mov push jl inc mov inc or sub xlat mov stos in pop lds pop mov fsts popf nop mov inc cmp pusha in dec xor outsl jge or mov or (bad) (bad) ss cmp sbb add mov cmp mulb or scas dec (bad) cli sti lods mov dec pop sub negb xor pop pop dec cmovl sbb jne daa xor faddl fistpl fdivrs fwait addr16 mov rcr add dec hlt inc int fistl fwait lock jns adc mov scas pushl out jb andl dec cmc adc aaa mov pop push push sbb mov idivb xchg mov adc out mov xor (bad) (bad) psraw or jae add (bad) loop rcrl mov inc ljmp addr16 daa jle lods xchg loopne andl pusha sbb dec repnz xchg scas mov daa dec mov sbb jo stos and sahf sbb sub call lret mov out sti xchg insb imul or xchg ret stos (bad) testb roll out icebp lret jbe dec or add loopne inc mov shlb fs fisttp sarb repz inc ja xlat ljmp movsl add jbe cmp bound cmc inc je inc mov fsubrs hlt int3 cmp mov jg cmpsl arpl jo sub sub les pop enter int3 test sbb xor into xor nop push sbb loopne test std insl popf cld in adc aad sub mov jle aam xchg dec out rcr mov xor ja mov lret dec orl xor pop xchg sub pop dec rcl fldt adc inc addr16 loopne push mov xor and cmc jl icebp sbb addr16 mov shll mov imul sub js loop add push fdivrs js inc mov fucomi xchg push pop add outsl (bad) (bad) or leave outsb vunpcklps daa mov inc pop push dec mov fsubrs sub lds cwtl sbb sub dec stos lret add dec imul or js jo mov mov sub xchg rcll les into lahf outsb push lahf aaa sub sarb jg (bad) dec mov xor lods and pushf pushl mov adc cmp addr16 inc jp mov mov mov mov or push mov cmp dec daa xor pop das push mov push add sub ds mov xchg xor xor adc or divl mov xor and mov cltd sbb ljmp repz push inc mov push daa dec dec mov cltd cmp dec (bad) in and ss (bad) dec mov or sub cmc nop in aam mov cmp sbb push adc pop inc and xchg mov fmull call (bad) sbb aas icebp aam xchg (bad) adc xor lahf inc (bad) lret in imul mov add fstl mov xor and pop or jb loope cmp push aas inc push insb clc les xchg cmp jp rcrl push pop dec and xchg jne dec mov pop mov xor xor rorl loop insb popa adc mov cld xor lods pop cmpsb sub push fwait rorl adc inc sbb testl mov mov push (bad) mov ljmp inc mov test aaa test rcrl mov dec aad mov sub das mov std or in mov cmpsb lcall andl sbb cs ficompl sub ljmp lcall ljmp xchg mov dec cmpsb sbb adc jne xor stos imul fs cli in jnp cmpsl push mov imul xlat lods lret imul test cmp or cli inc insl test add roll fadds jb insl or mov out xor fisub inc add cwtl adc es test add cmp cmp mov iret mov leave sub xchg lods cmp sti iret popf bnd xchg mov (bad) pop pop out loopne mov mov movsl mov movb idiv adc sbb out mov (bad) xchg mov arpl sti push jge scas cmp push mov adc sti adc stos scas sti sti mov mov jbe (bad) mov pusha or (bad) push out scas mov sbb aaa sti jge dec dec dec or insl sti cmp (bad) pop xchg mov cwtl aad scas fwait sti mov mov mov mov mov mov addl sub sbbl ret mov (bad) scas stos adc rcll (bad) sbb inc and sti daa test sbb cmc push stos sti lahf test cmpsb jnp and out pop pop aaa (bad) (bad) sbb test data16 cld pop daa push dec cmp and add mov pop push stos stos sbb xor enter (bad) mov mov xchg xchg inc lcall cmp xorl movl cmp cli xor jle rorb add jno ret mov mov es mov (bad) or push popf inc mov and or mov mov push (bad) pop insl lea bound int3 sub or ljmp ficompl mov sbb push xchg inc test mov lahf mov pop mov insl (bad) or mov mov les test call jbe mov movsb mov jl movsb cmp incl lret push add aam sub loopne (bad) mov mov mov cmp (bad) and pop rcll pop add push jge fcompl xor test aas clc insl dec or lods jge sub xchg jge or aaa inc stos pop jno and add jg fisttpll or push shrb (bad) jae and shrb subl insl or mov cmp mov add in aam ror sub fcmovbe shrl add pushf aas testb insl push andb mov lea lea sbb xchg sbb inc sbb jbe sti inc cmp push sub xorb in das mov roll mov sar adc adc xor and les or mov (bad) ljmp inc mov or repz ds inc loopne fwait pop jge cmp fwait push jne roll inc jg and das idivl and push pop stos popa jno sbb add inc pop aam inc nop mov (bad) mov push movsb sbb add fidivl add fnstcw es leave cmpsb jnp testb cmp fadds push mov jp fwait js sti pop mov push lret adc jno nop mov mov sti rclb sarb movsl fistpl mov mov daa add and sti cs sahf fwait jle mov (bad) push sti loopne or cmp and xchg scas xchg loope inc xor cmp lcall mov push fimul dec mov sahf lds xchg fwait aad lods sti popf (bad) jecxz pop dec (bad) or sbb jle mov mov sahf fwait cli push shll cmp pop jbe inc repz in mov mov repz jmp (bad) dec daa mov pop xor stc adc adc dec (bad) dec js cmpsl std fwait sahf fwait push fwait jecxz fcomps push lret cltd into fwait std test sbb les pop mov repnz and inc cmp int3 push adc mov sti pop lret ds inc jnp or lret fcompl in cltd aas sti inc mov (bad) repz pop add data16 cltd sbb int3 jp inc or cltd insl je pop outsb jnp pop je cmpsb fwait repnz ret decl pop sub cli mov icebp mov sub bnd shll push aas fstps pop add xor enter mov or xchg mov loop repnz and jp xchg sub mov add dec aas jp push jge or mov (bad) imul cli lods sbb jns pop in inc xchg push cmp sti inc enter subb sbb jle jl fimul jge mov insl adc add roll incl mov (bad) roll scas sahf pop sarl dec sbb (bad) dec loop adc (bad) mov loopne pop cs mov popa xchg test sbb cltd push adc (bad) push mov push cmp ja and xchg test or add sbb xchg sbb mov addr16 iret fdivrl fistl (bad) mov stos add mov test pop sbb mov repnz sub aaa cli test (bad) pop xchg inc ds mul imul roll push ja and pop imul mov mov (bad) jl jg jb jns leave push push mov or aas fcoms pop divl push mov sbb jge add lea xchg aas test mov call int3 (bad) pop addr16 (bad) jge sbb aad xlat leave sar mov xchg inc pop add cmpsl ljmp mov (bad) (bad) cld or mov add and push int3 push dec lret (bad) jbe test xchg mov pop cmp or pop add (bad) orl sti pop jg loopne scas iret add cmp popa jle mov lock mov inc in pop cld mov sbb les push popf dec sbb jge inc mov pop divl icebp popa divb inc mov cwtl cmp int3 cld sti sbb rcrb xchg mov jae sar outsl (bad) mov sbb inc jno pushf mov cmp push ss mov mov mov sbb jle enter cmc mov jbe fwait or cmp sub testb jle xchg call test pop sbb cmp inc push push fucomip enter xchg (bad) mov dec daa cmc rorb fnop ljmp or xchg aad mov je movsb and cmp pushf imul inc idivb call push inc clc pop push sub shlb orl loop jl pushf lods mov ret cmp aaa xchg std (bad) jmp mov mov clc ss fnclex xchg mov fwait mov sarb (bad) jo scas outsl pop cltd lods mov ret sbb mov insb sbb xchg pop cmp (bad) and jle daa cmpsl sub jge fnstsw mov in repz cld jge clc and fs fldl (bad) xchg push jno es or int pop cmp mov cmp stos mov leave (bad) mov mov mov int3 (bad) lret lea and pop mov jg stos das rcrl and lods jg repz mov call and jb insl fistl sub and sbb jl pop (bad) insl and lock adc xor dec insb andb fstpl mov fwait push in xor or jl mov loope jnp add jge pop xchg sbb mov mov push cmp jge sub leave int3 mov push ror imul out mov idivb dec int inc jae inc imul inc cmp rcr jnp insb lock lea icebp mov aad negb ret dec ficom ret leave xacquire mov jno mov pop xor xchg mov inc mov cmp add push shrl (bad) loope out sbb jg push xor ret pop iret addb gs and cwtl sti test cmp mov jle push out xchg push pusha add adc jno mov xchg mov rorl out enter jl out inc dec mov mov js (bad) popa push jl jns or push pop gs pop push ret jno dec jmp dec and mov mov add pop ret pop xchg outsb ret pop test (bad) mov roll dec fstpl mov nop pop mov xchg pop sti push add fldl (bad) mov sti mov fstpl ret pop inc mov mov mov xor popl inc ret out mov jnp sti add nop add xor imul loopne les stos popa fbstp push (bad) not ret lcall repnz add sbb bound icebp loope (bad) sbb fistpll push or addb jg and pop mov cmpsb mov xchg mov mov xchg fiaddl mov test scas bnd jl xchg scas cmp or pop mov stos popf or and xchg rcrl adc pushf imul mov sub xor mov cmpsl xor mov jmp jnp (bad) sub enter fcomps jmp push scas xchg mov xchg jle stos pushf ds lret popf mov jmp cmp xchg or adc pushf cmp cmp cld xchg dec popf mov imul mov xchg lods jnp adc int3 adc pushf fdivrl dec popf cld mov pushf sbb mov sub dec popf cmp or pushf pop mov inc popf jl pop lea (bad) pushf popf mov inc popf mov inc pushf fnstsw test adc sbb xchg sbbl add xchg (bad) popf jge inc mov add xchg sbbl mov addb (bad) mov add push popa adcl adc and mov imul jnp int3 fwait or (bad) pusha xchg push mov shrl inc mov push xorl int insb mov ficomp sub mov sbb out mov pop scas mov jl add and xor jno mov or sub dec pop insb pop jl popf lods mov sbb pop cld and mov testb mov stos cld sbb fwait lods sbb cld cmp xchg fcmovne sbb test fwait jmp (bad) sti jg or sbb jl stos insb push or (bad) faddp jno xchg aam or xor jl cmp insl lea popf xchg aad jnp jecxz mov sbb cmp lea pushf (bad) sti mov aam cmp or lods int3 sbb lret or fwait (bad) cld fsub (bad) sbb sub lahf sbb or jge fwait outsb enter pushf mov (bad) dec mov mov insb adc ret fwait sarb jnp lret (bad) popf mov lods jnp std mov mov sub sbb sti vpaddsw pop mov sahf (bad) into std mov cmp dec stos out push sbb sahf xchg into or jg sti lahf lea leave sub lea dec ds scas or cld fwait pop cmp jle jge rorb ficomp (bad) fldt sahf ds mov daa cmp cmc jnp sub ds fwait out jl in fwait ja pop std sub sbb sahf push std out xchg fwait push xchg int3 fwait iret cs pop sbb mov insb dec insb pop push outsb sub mov mov sbb scas jnp insb sbb jmp jae sbb mov iret int3 inc fwait cld repz sbb rcr (bad) xchg cmp out jmp fwait out or fwait nop setne ret (bad) fildll pop (bad) dec sbb fwait pop cld loopne cmp das (bad) pop sti lods fwait cmpsl aas (bad) ret fisttpl pop sbb fwait outsl adc insb lret or lods std sbb out inc or mov scas sbb inc (bad) loopne fwait out mov sbb repz lea xchg (bad) dec cld adc inc sarb xchg fwait loopne mov or pushf adc fwait xchg and les or std pop sahf xor dec fs xchg inc (bad) inc cmp fwait pusha lcall or mov fwait mov lods mov mov xchg sahf add fwait mov shrl (bad) je xchg loope dec fwait enter mov jle adc sbb sub cmp (bad) sti add fwait sbb stos popa loop jne stos jno jnp lret addl or je adc fwait loop (bad) pop add icebp add adc lcall add fwait mov adc lret pop sbb enter inc inc sbb sbb push (bad) (bad) bound or jnp dec lea cmpsl sub mov fcmovnb sbb cmpsb cld jnp (bad) (bad) cmp fildll aam pushf insb in sahf or jge adc dec cmp push cmpl mov add sahf fwait inc and ret bound mov scas fwait push sub cld sub cmp arpl jae or push fwait int3 movsb pushf scas mov or lret fdivp je xchg cmp sub aam pop sub dec in jae pop pop sahf in std data16 scas dec pop out inc cmp (bad) add jnp adc push fwait leave sbb sbb (bad) dec into and cs int3 fisttpl rcll popf fwait fs sbb sbb cmp fwait sbb sbb mov dec fwait leave insb sahf or lds mov (bad) fisubr sti sbb addl adc fwait shrl adc imul popf sbb mov dec popa push std je out fwait push sbb gs jne cmp sub fwait cmpsb scas cmp lret cld stos cmp loope mov bound fidivr fwait jmp (bad) out insl outsl fwait outsb mov std mov push add push or inc jge leave into lds (bad) lret lea sub imul pop sbb cld cld es mov inc cwtl mov pushf or sbb push lock cmp pop insl orl pop add fwait testl andl xlat (bad) out jnp (bad) or roll lea mov daa out dec fwait mov fadd scas fwait cmp int3 fwait and xor xchg mov (bad) dec lock cmp popa enter mov fwait xchg in inc fstl pop insb sub call lea dec jge dec sub sahf add cmp insb ror or fiadd std pusha scas dec (bad) out adc mov (bad) or int3 scas lea cmp dec sbb sar cmp lods dec pop (bad) outsb outsb insb pop or cmp dec fwait pop sub sbb js and mov fwait sbb int3 push fwait lods imul rorb std fwait leave push (bad) fnstenv cmpsl jmp rorl dec sti sbb fwait test sub fwait cmpsb out into sbb jnp pop (bad) loopne pushf daa jns fistpll cld aas lret sbb arpl sahf sahf lcall mov mov sub mov (bad) sti aam fwait lea sahf cmp ret jno inc mov xchg cli (bad) adc sbb fwait lea rorl (bad) cld (bad) fwait sbb jnp cmp xchg sub or fdivrp cmp adc lea in xchg std inc dec arpl dec xchg dec (bad) add pop push (bad) loopne fwait outsb push sti popf jp in lea lret inc dec cld mov fwait leave jl rcrl inc mov mov or fwait lods out (bad) (bad) pop das fwait cltd mov pop test xchg sti leave or xor sbb lcall cmp fwait pop xchg lods int imul jnp xchg dec or or std fwait lods js and or mov rcrl mov fwait pop pop loopne out faddl mov movsl cld inc pushf mov mov mov sbb or ret fmull xchg sti cmp out fwait leave cld sbb lods mov fnstcw cmp aad fildll pop fwait mov inc mov jno add popf sbb sub popf xchg mov shr out lods add fwait lock mov (bad) mov xchg pop fadd jge dec scas mov lea fildll or sbb cld sarl jl hlt fwait push lods cmp jl insb jl popa dec cmp pop arpl mov dec mov sti sahf push cld pop pop cmp mov add mov insb push or fimul cmc pop dec insb fwait and mov push (bad) mov cmp push inc jl fwait xchg out or mov (bad) mov mov sbb mov dec cmpsl jle xchg sti (bad) cmp fwait and fwait mov in jle iret pop mov lods dec xchg sahf (bad) into sub mov mov ret cmp cmp xlat dec lret xchg pop cmp sub mov add mov mov dec dec cmp cmp sahf add fisubr int3 lods das mov imul jge fidiv cld dec popf pop cmp mov jl enter in dec out dec sub sub dec or jnp pop mov fidivr sti in mov arpl fucomi sbb inc hlt ds mov mov js inc ljmp into add pop jecxz js cmc xchg add test jge sub sub std fisttpl scas movsl pop xor push mov bound cmp push jg sub sbbl mov jg cmp or mov fwait ret add mov pop repz sbb sahf jmp fidivr jl leave sahf sbb std cmp lret pop dec dec mov cld popa loopne ret mov jl sahf jge cmp sub stos push pop adc insl mov popa std mov in cmp inc sbb sbb jnp sub out ret dec inc jl jnp pop dec mov nop xchg pop dec stos insb lahf dec jnp aas or sahf mov out sbb arpl (bad) popl or (bad) or dec pop enter ret ret fbstp add lods xchg mov popf cltd cld lahf inc stos pop movsl mov add popa add pushl or inc pop mov popa inc (bad) dec in mov mov ret and fcmovnu or insl (bad) mov push pop mov cmp fisttpll jmp mov or scas pavgb mov insl rolb xchg loop jmp int mov imul lea sub add fldt or insl (bad) xchg sti imul in add out lds (bad) out lea add cmpsb in loopne bound das sti in std lock test sti cmp add fwait ud2 std or sbb mov daa dec pop fwait rcrl and nop popa stos scas ds adc jge cmp fwait fs sub jecxz cmp mov dec roll fstpt les jle (bad) sti pop (bad) sti (bad) fdivrl fst jge sbb xor mov jg ret jle push or add push or add or add pop fwait in lea inc or add sub andl mov pushf add shll or jg ljmp inc fstpt addl dec rcll jae or test fwait test fstpt add sub adc inc dec cld mov mov inc cmpsb mov or mov (bad) or sbb xchg or sub mov cld xchg mov test and sbb jg sub push push cmp lret lea add mov arpl or in cmp cmp cmpsb adc inc xchg decb sti dec subl add or lret add cmpb enter mov fwait les inc or pushf enter pusha test xor dec cld ret nop add fildl cmp stos inc xchg lret cmp cmc fldcw mov (bad) or aam pushf or into xchg sahf or sbb popa cmpl mov std insl pop pushl inc andl add sub sub lahf sbb inc fwait or mov cld (bad) imul das fwait andl enter or fstps insb or xchg xchg and sti pushf mov sbb test add or jge jl dec sbb scas sarb sbb lea cmp enter movsl sbb or mov mov movsl inc mov sarb loopne movb pop or sub or loop mov es cmpsb dec std lods out fldt bnd cld cmpsl add (bad) stos iret leave sarl push mov xchg adc and mov or dec pop (bad) ret ficom mov test subl inc add mov dec push xchg or add sti scas imul xor inc gs mov sub movsb es sti add lea movsb mov popf mov (bad) (bad) (bad) cmp in xchg sahf mov test mov mov mov mov bound ret test mov in rcl and lcall or mov jecxz dec (bad) jecxz mov jecxz repz sub or xchg jecxz cmp cmp lods sub (bad) aas mov cmpsb or add mov sub in cld sub ret imul fwait jnp mov fsubl int ret movsl rcrl sbb lods scas fcmovnb jmp test sub inc mov out dec pop shlb aas sbb fistpll (bad) aam add (bad) dec add vpcmpgtd std mov movb pushf inc cmp or fwait adc nop es pusha aas add imul pop psrad lret frstor mov pop vcvttps2dq insb and inc (bad) (bad) sti push js in arpl dec pop sbb jnp out jle mov pop inc in fmull (bad) lods aas test cmp inc enter cmp (bad) cmc and mov addl je pop inc mov in inc aas dec and lahf jle,pt sub mov test jge push sub sub mov add or std lret in (bad) mov sub pop xor lcall fidivr roll cmp cltd jle jl and xlat xlat in (bad) cmp sti cmpsl out xchg les xchg in xchg movsb add (bad) jge cld sarl or xchg fldt ret sti add insl movsb xor loop movsb loopne (bad) loop sub mov mov leave enter pushf test (bad) mov addl enter les sbb daa xchg add (bad) and push in (bad) or mov sub dec lret int fwait sub sbb inc xor sub fucomi pop es mov jmp add xchg add cmp jg and mov (bad) adc fmulp cmp cmpsb add jge insb cmp mov sub fldl add jle cmp inc jb xorl jecxz xchg pop add add ret cmpsl fs mov and loop inc or movsb inc pop mov cltd les xchg ds fimul lret sub cmpsl and sbb sbb fcoml mov leave (bad) movsb lods inc jnp inc dec mov mov mov cmp add mov in in sub lcall or test xchg cmpsl sbb out popf bound mov mov cwtl mov add sbb pop ljmp xchg pop mov bound sahf std xor gs pop mov xchg mov leave (bad) add and mov sub push and xchg add mov adc sahf inc loopne les (bad) jmp stos cld sbb fisttpll mov adc or or dec enter mov mov and cmpl add faddp (bad) lods or ret inc xchg clc mov jge in sub fdivrp in mov push push jge push sub dec scas (bad) insb cmp mov lea pop test aad inc sti or pop test in mov pop aam faddl and inc pop popf mov or adc sub push insb sub into lds pushf les dec gs les lods add loope cmp and out inc scas jge ret sbb sti mov cmpsl in cmc cmp cmpb jmp mov xchg test inc mov xchg sbb int (bad) sti pop lcall test lods inc test and test rcrl test add movsl mov mov sbb gs into inc stos pop popa in add mov loope leave (bad) sti ret fwait push xchg pushf std mov or sti cmp cmp pop addr16 stos in xor (bad) dec cmpsb ljmp sbb popf lds xchg mov dec cld add sbb lcall cmpsb rolb pop sub inc loopne enter sti or sbb into addr16 mov sarb mov sbbl sub mov lahf mov push mov add inc sub and sub mov sahf gs lcall sbb lods cmp decl inc out aas and and inc jnp or cld sbb jne mov and aas sub in sahf popf add out cmpsb mov in add sti adc inc in mull cmp sti in and test repz lods scas mov jg sbb jnp sub sti dec sti cs mov pop jecxz add inc test lret lea gs fs sahf sbb inc dec cmp mov insb mov fbld ds in fdivl push cltd jmp sbb cmp or data16 jecxz ljmp mov cmp (bad) fildl lea (bad) loopne shll shlb ja in pop (bad) ffreep cmpsl les fwait dec (bad) lahf pop mov mov (bad) mov sbb jg push lds stos mov dec cmp pop mov sahf lret and jge xchg fldt pop and pop pop iret sbb sahf or fisttpl aas outsl push (bad) cld movsb cmpsl int3 mov imul pop or sub inc xlat subb inc mov cmp and sbb mov sbb adc mov dec daa mov scas mov aas insb mov and xchg jmp jge add inc cld les sarl (bad) mov jbe fldt ret mov fnstsw dec insb and or jnp or mov (bad) test dec mov jg xchg out pop nop mov add mov cmpsb test insl int3 cld xchg xchg push inc push ret cmp fwait pop cmpsl pop fsubp gs repz dec mov mov ret push jnp fs (bad) and add mov xchg add inc ret sbb add in nop ret inc lahf andl test repz inc loopne mov jnp addr16 ljmp inc sarl xchg (bad) sub stos inc ss outsb push or xchg and cmp mov inc mov jecxz inc ds enter (bad) mov enter sbb inc sti sub mov pushf imul clc mov inc xchg out in and insl xchg inc idivl std test out out push bound dec inc jle cmp xor cmp imul mov (bad) ret cmpsl fstpl lahf ret push lds mov in test aas int3 (bad) jnp mov addl aam and cmp or xchg push push std dec lods and pop aas xchg ds int3 pop (bad) nop jnp jnp into inc xchg fsubrl dec inc jno add pop dec (bad) inc nop imul pop cld dec outsl pushf jecxz cld push int3 mov or roll fdivrs lods pushf pushf xor dec inc frstor mov add mov addl mov xchg adc decb mov xor mov add pop add pop fidivrl inc das int3 popa cmpsl aas jg inc lods lods daa lcall dec (bad) mov mov ljmp mov dec in pop dec aaa cmpsl aas inc add movsb mov cmpsl jge leave leave aas aas sub pusha dec inc dec std cmp leave and test leave sub nop std enter aas lea sti dec ret call xor or pushf and cmp addr16 inc dec xor fcmovnb or in stos sub cwtl outsl rclb lahf cmp jge pop xchg mov in imul jg movsb jl enter mov aad mov cltd inc pop cmpsl dec in gs je jo mov pop aam (bad) cld mov cmp out cmp in mov mov inc add incl aas inc das mov jmp std adc add and fstpl hlt and mov lea inc xchg lods fstpl fucomi or and xchg cmp mov or jnp les cmpsb adc mov into in jge lahf enter sub or cmpsl pushf cmpsl sub sahf cmp call call fisubl jmp inc aas lea cmpsl push in (bad) stos add in push mov sbb or dec lea jecxz aad test adc leave test daa mov lds sti or sub or aas or add sub mov pop dec pop inc imul movsl inc inc ret dec aas cmp mov jecxz and jmp add or dec (bad) hlt arpl rorb mov sbb lods ret mov inc sub fwait adc cmp cmpsl fs mov out dec data16 leave push sarb sbb out cltd insl aaa int inc les add imul push dec std jg push js fstpl xor cmp (bad) fbld ljmp (bad) xchg sbb cmp inc cmc mov add movsl jecxz loopne lahf mov xor jl into test cltd mov fwait or and jle ds pop jge sub sahf mov mov (bad) aam xor dec jge ret sub or or inc mov dec adc xor inc arpl pop (bad) inc ret into pop or xchg push jle inc (bad) out or add push jl movsl sahf mov pop (bad) loop jmp sarb add mov pop push in pop iret (bad) or (bad) jmp int3 pop sub shl pop call insb or add inc ret or or adc shll and jle sbb push fidivr imul sbb or inc inc adc lds lock cltd imul ffree in mov popl mov mov mov sahf cmp les vmulpd add lods and sarl fiadd lds add test inc cmp inc lea mov or lods mov and std movl xchg or sti jnp and int lea mov imul mov movb push scas imul and sti mov jmp or test mov fwait ret mov fistpl aas fdivrl fisttpll fisub push sahf mov pop fwait subl into inc mov test imul add stos pop pop cmp add sbb out sti lcall dec inc lahf (bad) outsb cmp popf sbb push call fcmovne out fucomi jmp jge out (bad) and cld lods adc fistpl jg add cmp bound mov push or ljmp mov fldt jl dec lea push adc enter mov add adc dec lods lcall cmp sub cmp cld or mov lods cmp sti cwtl cmp test jmp dec (bad) sahf push arpl bound mov loope mov dec fstpt fisttpl add cmp sub mov fmulp aam fistpl pop dec popf ficomp call and clc dec fwait dec cmp dec pop and mov xor (bad) lret pop sbb mov lods in dec push jl out cmp or ds xlat test xor (bad) retw jge mov push dec outsb lea in jg sbb iret add mov fistl cmp cmp nop dec rcrl std mov push lahf add and mov or lahf into mov or rcrb dec lods fisttpl dec jge rorl (bad) fistpl sbb test idivl cld sbb jl mov cs or cld (bad) cmpsl xchg xchg and adc adc push mov dec cmpsl dec dec fildl dec lods cmpl sarb ret and cmp lcall jnp fisttpl ret in movsl inc popl das cmpl in movsl push add fldt or cmp ffreep pop or or in mov outsb mov les roll mov lods and cmp mov jnp dec lods dec ficomp sti loopne test sub test pop nop add (bad) (bad) outsl hlt inc mov aas dec (bad) in lahf mov mov dec cmp rorl or push inc daa fidivr cmpsb inc loopne (bad) ret mov sbb dec sarl mov clc or mov in mov test jge adc lcall add dec pushf orl into leave lods mov dec ds (bad) jl add lret dec cmp fisttpl ret dec or in in ja pop sbb dec dec test dec (bad) int3 sahf mov jle cmp sbb sbb pop or cli adc ret ret cmp in pop dec into dec xchg or sbb dec xchg or fsubp pop fiadd (bad) std (bad) dec mov mov bound pop sar pop ret lahf (bad) cmp adc mov fneni(8087 movsb add in cld (bad) xchg inc pop add popf mov cmp cltd sti imul pop jle fdivrl jne inc jnp jmp test fwait jnp sbb (bad) mov sbb lods (bad) cmp fisttpl out outsb cmp cli dec dec dec movsl sbbl js and mov jge dec sti sahf and mov test mov into pushf lods leave fs mov test sti fwait adc mov in or cmp fistp lods cmp jg fildl enter out fisttpl dec into aad pop or popf push mov ret inc sub xor add mov fs mov nop (bad) jecxz cmp dec jl mov int xchg fs arpl dec jnp int3 pop ret (bad) out jbe mov xlat cld pop sbb fistpll add dec fwait pop movsb lcall (bad) in gs adc dec and mov jl loop sbb xor mov jge cld in int std mov xor sbb sbb dec cmpsl pop (bad) (bad) cmp pop cmp add sahf loopne pop mov hlt add sbb mov pop pop mov int nop leave lods popf xor aas pop (bad) and mov mov mov mov movsb ret add mov (bad) call mov ret sub mov pusha dec aam stos and popf inc pop and add ret ljmp test test xchg call cld xlat add insb jnp (bad) movsb inc sub sarl sub aam mov inc lahf fldt movl inc invd arpl xchg ljmp inc xor nop or mov (bad) paddsw std adc or std mov cmp lea mov inc inc cmpb or pushf sbb movsl cmp gs in fwait adc add lahf pop mov xor mov fcompl pop enter vpaddb leave mov fsubrl adcb inc (bad) adc and xor fldl iret fwait mov pop aad mov adc sbb pop enter call mov das xchg ret add xchg jnp xchg jnp pusha sbb dec or push xchg and xchg or popf adc or popa pop mov das sbb (bad) loope or lcall dec add nop jl lods (bad) div dec jne dec cld es jno cmp scas repz fstpt nop adc mov mov and mov mov mov popa adc pushf sarl popf mov or mov gs lds ja xchg sub mov sbb mov push aam or ss insb data16 sbb inc xor loopne pop jo addb jl fist inc (bad) xor push mov cmpsb sbb jg push clc movsl leave call xchg jnp sub cvtdq2ps mov (bad) sub sbb pop mov out enter les or std mov mov add cmp mov imul pop shrl jecxz cmp movswl fmull xchg int3 popf add cmp aam in fisubr pop xchg data16 ret dec imul repz pop xchg ret in loopne test dec popf or (bad) jle (bad) pushf jge std (bad) jl cld popf jnp sti cmpsl popf or xchg mov adc popf add sbbl (bad) popf inc mov pushf inc mov sbbb jle (bad) mov jl cld iret cmp or dec xchg xchg adc inc xchg sbbl mov lret leave popf enter adc pushf test sti cmp pushf mov xchg out popf (bad) mov pushf aas mov outsl popf jg nop mov mov lock add in mov push shlb repnz imul adc mov sarb add cmpb sbb pop iretw stos insl xchg inc xor jo iret cmp leave jo sbb pop iretw stos insl xchg inc xor fistpll cmp popa add sub notl (bad) jnp insb lods jge push sti lcall inc into jae mov sahf pop mov cli sbb cmpsl fs cmc mov mov dec or cli sbb test scas jge push sti sar out push fidivr arpl mov sub icebp jo lock push ret out retw out gs in popf inc and sti rcll add lock arpl shrb mov push outsl cmp arpl dec lods aas xchg das pop pop leave cpuid decl out cmp arpl iret lods mov orl mov in jb jl adc adc imul rcrb fistpl pandn ret xchg shlb mov (bad) iret loopne mov rcr cli dec imul fcoml movsl cmp (bad) in cmp lea xor xchg daa mov fdivrs lahf pop test mov mov and iret cld xor jp sti rcll cmp or dec mov jle (bad) sbb xchg or jl cld pushf mov fmull psubq sarl pushf mov icebp or (bad) aaa pop andb jbe add adc scas not int3 mov mov sub test iret leave jmp scas pop fstpt scas mov push mov dec pushf (bad) mov sub adc pushf add ljmp lret mov stos jnp inc popf lcall jns xchg imul cmp or mov popf (bad) mov pushf jg jmp popf mov mov mov xchg inc popf mov pushf push xchg inc popf dec mov pushf sub decl or adc pushf add enter mov (bad) mov xchg jle addr16 pushf push mov inc popf aaa mov pushf pop mov mov out cld pushf xlat popf dec idivb mov dec mov pushf (bad) mov jbe test pushf add ss sarb std mov movl add (bad) mov pushf cmpsb mov sti popf test je lahf imul cmp pushf inc push xlat daa dec pushf jo pop dec xchg xchg ljmp lods addr16 push (bad) xchg cmp mov or jg mul imull clc (bad) mull ss dec (bad) jae and mov stos inc fcmovu mov test jns push imul outsl aaa mov inc add pusha push outsb cmpsb ja push xor incl cmp push out xchg pop xchg outsb stos incb fcomps jbe test xchg imull sbb dec leave cmpsl clc call int3 mov pop mov add in ljmp cmpsl cld in ljmp pop (bad) cmp mov mov je in bound mov sarl leave jnp frstor nop fs xor in movsl or bound push add add dec inc pop (bad) loopne jle ja imul orl les fisttpl fcomi lret ret clc mov lods sarl fst roll lds sub insb cmp std test mov inc sub mov mov cld mov (bad) or pop rcrl int3 add pop aad sbbl pop push rcrb fsubs adcl in mov pop or pop rorb mov ret push xchg ss loop cld mov and ret xchg sarb mov push sub mov aad mov fisttpl push inc mov mov test cmp mov ret jae fucom mov push orb incl cmp fldl jnp enter sarl lds mov inc push addl jg movsb negb and fs pop xor idivl add mov out leave aaa cmp mov cmp cmp mov inc js or incl xchg pop xor and pop enter fistpl mov daa fwait pop jnp call fistpll mov xchg jnp mov jl jl ror enter vcvttpd2dq cmp jl fimul ds pop aaa and mov push jl inc mov test (bad) xlat inc inc add lds dec sti cmp xchg cmpsb sub (bad) (bad) mov ss cltd mov ljmp aad mov jl movsl sub enter test es sbb (bad) cmp cmp xlat in add sbbb (bad) jl mov sbb cmpsb dec push cmp mov xchg mov testl dec push mov sub jle push jbe or cmp push pop inc mov mov and dec cwtl fcoms xor push push mov and mov xchg dec (bad) or (bad) fcompl cmp inc jge adc test pop sti jl (bad) and or daa pop adc pop pop (bad) (bad) es test mov jecxz sbb lds popf jmp mov int3 cli inc out jns call lret cmpsb jbe and ljmp dec jnp inc or test sbb movsb cmp test rep cld jl pop pop xor aad fsubs cwtl add mov fstps pop inc lea call jle outsl repnz xchg inc push and jno jge add pushf push inc mov iret sti pop mov cmc aas dec int jecxz jge sbb aas mov pop fcomps or insl fisttpl mov or mov loope (bad) mov xor sar add xor sub jl jl decb cmpsb test sbb int xor push pop xchg inc jl loop mov mov inc icebp jo and cmp pusha std negl not out mov icebp sbb sbb into xchg sub outsb clc ja or std imul pop fisub loop test add fidivr arpl mov pushf loope jno xor pop fwait mov or and mov pushf mov rcll add lcall rorl or leave icebp notl add out and mov fdivs loopne add outsl pop push sbb push ljmp roll daa and (bad) mov loope pusha push icebp sti test sarb sahf movsl ret test add rclb adc jae loop xchg (bad) mov mov sbb mov inc sarb leave daa push add mov jl incb and ds cld mov outsb (bad) int3 xor jb jb popf sub dec adcl sar sbb add xchg (bad) mov mov mov ja push dec or fstl ja icebp and (bad) lret pushf add inc or std loopne popa cmp rcrb add test stos mov sarl faddl push jp (bad) (bad) imul adc mov mov test adc fist pop gs test js aam xchg les (bad) push (bad) fstpl mov (bad) mov ret jg out add movsl fcoml adcl nop mov ds mov adc icebp pop xor mov inc jle loop jle pushf fisttpll mov mov mov mov xor nop das cmp cmp lds or scas dec mov or add pop jl mov sbb xor (bad) mov adc aad adc fdivrl shll add fbstp pop inc repnz jl je (bad) (bad) fldl jge adc xlat nop lods fdivr in fcmovb movsb out sub sbb add add mov mov adc lahf jno rclb pusha decl movl mov call ret int (bad) (bad) xor dec mov ror mov push shld outsb call lock pop xorl mov mov pop xor ret xchg mov rclb popa pop push sub sbbl or cmp in add lahf add lods jl lahf mov ja sar mov pop outsl adc add ds in mov pmulhw and loopne inc cwtl ret lds std jge arpl mov sbb aas xchg shlb out popa adc pop mov xchg lods ds adc mov aas ror (bad) jge jg cmp push shrb rcrb push rcll jle int push insl lods int3 mov jge (bad) cli adc mov xchg rorb xchg div (bad) jno xor (bad) in or sub rcr fs int dec mov cmp es decl jne pop jne adc mov ljmp pop sarb push sbb jmp sbb nop dec cmp add scas loope push fcomps in mov cmovg adc mov outsl push jle call std mov popf (bad) leave push mov jno test lahf and lahf xor xchg dec sub insb dec mov mov std adc mov mov adcl cmc xor mov mov aam add std add cld mov scas or or neg (bad) imul (bad) mov jg xchg pop adc add fidivl cmp imul push adc rcr or mov mov add sub xor push jmp fisttpll adc mov add xor mov (bad) jne (bad) xchg sub dec push jbe aas push inc pop (bad) ss mov out insl loop popa lcall insl pop enter dec jl enter add mov mov (bad) aas loopne rcrb pusha pop sarl sbb outsl ror aad arpl xor cmp (bad) mov das ret (bad) lret sub das or decb ds xchg and xchg add (bad) sub sarb push mov mov call pusha popf jo adcb nop or enter xchg adc incl push aaa mov (bad) add pop push js sti lea fwait aaa fiaddl sbb pushf mov mov pop jmp sub sahf cmp cmp mov hlt jge or sti nop (bad) test sti pop mov or imul sti sarl xchg mov fwait inc popf jnp popf test jp (bad) sti test xor mov imul sti sarl (bad) loopne pushf rolb jle jnp pop add sti add pop (bad) jl jp test pop xchg fdivrl jge mov decb leave jl dec dec fwait xchg (bad) adc adcl std inc (bad) test test adc test cmp sti xor addb lahf lret dec push es imul cwtl xchg mov ss idivl xchg add cmpsl inc adc clc jnp pop xor dec (bad) (bad) cmp jge lcall jle (bad) mov or jle cmp mov ret sti imul jnp cwtl push inc jnp cmpl (bad) xchg dec cmpb inc (bad) mov xor sbb sub test je sub imul call pusha sub addr16 dec sbb loopne cmp jl icebp lea sbb add xor cmp popf test pop sub inc pop iret mov cmp pop subps fwait outsl and mov hlt fldl adc outsl cld out mov fbld sbb mov imul jmp scas xchg into dec ds inc push xchg (bad) mov jle jg in and mov mov push adc loope add cltd pop mov sub add push pop sub (bad) cmp mov jbe dec dec cmp mov int dec enter dec enter mov (bad) in popa push les ds pop in test mov sbbl test xchg loope xchg xor cmpxchg pusha mov mov push dec ret (bad) jl mov sbb sarl push lods sbb les (bad) cmpsb inc cmovno es rcr mov lret sub repnz jmp dec pop (bad) shrl ds push ficom xlat pusha dec and dec inc out mov inc jb in pop and dec or leave inc cmpl mov int3 ret (bad) xchg imul push or mov mov lods jns xor rcll pop iret xchg sbb adc mov jecxz sbb cmp (bad) xor sbb movsb sub mov dec sbb vxorps (bad) aas outsl arpl outsl daa jnp push sahf dec add test inc adc mov dec inc movsb in xchg dec loop ret mov rclb inc pushf divps and lods jl dec mov mov lds cld movsb aad adc jo jo pop into pop imul sahf dec add mov fsubrl mov adc popa sbb push jns std aas sbb mov (bad) (bad) fidivr pushf xor mov lods (bad) fiaddl xchg or aad inc cmc and cmc push (bad) pop (bad) hlt push mov cmp ja cmpl sahf jle shlb mov iret insb xchg add icebp pop sbb das fdivrl mov cli mov pop faddp pop xchg sbb and test jp ljmp cmp hlt movsb in push jg inc cmp aam xor js popa push rcrb adc and fdivr in pop pop inc and fisttp xor test mov xchg lods mov xchg rcl cmpsb fdiv shll mov aad sub (bad) jo pushf inc push stos sahf add (bad) mov pop sahf mov aam lret pop roll lahf int sub jmp jg pop mov mov mov push outsl adc adc cmpsb push enter jmp pusha adc or dec loopne mov in std rcrl sub stos add cmc xor lahf movsb (bad) adc push mov aas jo js mov inc push fidivrl add pop leave std mov shlb in mull (bad) ret xor or xchg andl adc popa sets adc cmp lret adc sub sub jg arpl sahf mulb std mov adc popa mov mov jo les mov mov mov scas mov push mov lods jl outsl or loope adc (bad) repnz (bad) push or or repz inc aad xor in xlat add cmp stc or adc pop mov mov das and sbb popf and ljmp xchg ja fist push push (bad) cmpsb xchg aad and jecxz cmpsb xchg test xor lahf cli leave or dec dec das jbe popf roll inc icebp cltd pop cld push jl loop icebp cld xchg sub ret jmp fisttpl cmp lret pop sbb xor cmpsl or idivl int leave push (bad) addl and sbb std int dec fisttpl inc inc aam ret pop jg out mov fsts xor xlat (bad) adc dec or ja adc adc push push cmc ror test les jge mov mov fdivrl or mov mov jnp dec cltd fwait dec mov mov xor xchg xor pop dec sbbl xor jge rcr (bad) popa roll add sarl mov add sti out sarl inc cmp jmp add sti fstpt sti add rcrb sahf cld adcl inc imul arpl subb or jle rorl add arpl cs add nop mov std cmp in stc aas sti add (bad) jl mov leave mov gs out sub pop pop leave dec mov add ret or (bad) pop sti leave inc mov pushf sarb cmp mov xchg in pop inc leave cmp cmp sti inc arpl (bad) xchg stos pop mov mov out lods lods mov leave sub lds fwait lods mov imul cmp arpl push lods enter and sbb cmp arpl pop lods lret pop loopne fmull xchg push mov (bad) scas pop loop ficomp out imul leave (bad) dec arpl cmp arpl pop lods inc xchg mov (bad) leave pop mov popa arpl pop lods inc xchg pop pop arpl pop mov nop pop mov mov leave mov lods lea mov lods adc cmp arpl test adc or mov stos jae rolb int3 xchg jg fwait mov daa jae roll int and cmp arpl sub push leave dec mov lods dec xchg sub es dec lods push xchg dec pop sub mov lods out mov mov mov scas arpl out mov lods mov mov scas in push jmp sub in xchg xor cs call sub pop xor das mov (bad) in sbb cmp arpl addr16 icebp leave in mov repz out lods imul fs lods jb outsb pop push arpl lods imul mov xchg jae xchg jb cltd sbb xchg stos lcall sbb insb pop adc out sbb jp xlat sbb insb pop fldcw aam fsubrs (bad) dec fidivl push insb pop push push pop stos push outsb xchg pop dec push jae pop jb mov out mov mov mov lods mov xor xor leave cmp sbb insb stos imull cmc dec stc jae hlt jb clc sbb insb pop cli jp ja jne leave jns lods je js pop jbe mov test lock scas lods mov add xor insl xchg lea jnp popf sarb jle popf stos lahf add rorb mov fstpl add ss mov jle fwait (bad) pop xchg leave or cld inc lahf jmp fcmovnb xchg or (bad) mov cld dec rorl inc adc adc xchg notb sbb mov sbbl shlb lahf fcmove std lea adc repnz insb mov pop mov adc dec addr16 sub inc (bad) movb mov inc cwtl jl or jns stos mov cmp fldl cmpb mov imul pop lea push lods test mov mov cld and add cmp mov cld lods and ret push insb or inc push ss lahf orl and (bad) mov cltd (bad) ljmp or adc fwait es rcrb adc pop mov cmpsb jle (bad) pop (bad) pushf jl jnp push popf mov insb sbb jl jnp push mov or popf sbb sbb lods pop ficomp pop mov pop fisttpl dec int mov dec lret ds mov sub sti inc sbb mov in or cmp push jnp cmc cmpsb push mov mov jle jmp fistpl mov mov scas pop mov in sahf cmp mov out lea scas cmp add js or jnp cld pop mov iret int3 push jnp mov jl add mov jl add cmp xchg fild add in xchg nop inc lea outsb clc mov movb andl sbb add jl jnp or fs fiadd lcall lahf mov or xlat out xchg aas push (bad) or std mov sahf xlat fnstsw addl cmp jg add inc fistpll add in jl mov or lods xchg cmc xor icebp js dec scas mov std movsl cmp pusha jnp mov mov pushf cmp mov std jl mov ret cmp inc add (bad) mov jl cwtl push mov scas dec jo dec fisttp sub sti (bad) or lea cld int xchg xchg int test aad fistpll nop mov mov fsts leave aaa lret lahf ds dec aas or fisttpll pop aas and add inc call test mov repnz add addl pop inc or lahf data16 mov add cmp mov mov mov jle mov jg test inc dec jge cmp js ret add jle addl iret sbb cwtl dec inc or vsubpd adc mov aas std jnp sbb out pop ja sub lcall cld mov cmp movsl cmp call in lahf cmp pop cmpl xchg jg cmp add mov dec cmp std jecxz push adcl addl test sti add xchg mov sti mov inc (bad) cmp sti out daa cld ds stos iret xchg pop (bad) push fidivr je add rolb aas mov mov stos and sbb std mov add les cmp fisttpl add add icebp aas daa inc cmovge cld (bad) mov popa push or and sub jo adc (bad) stos cmpsb ret (bad) xchg loope add cmp add adc cwtl jle lds inc add mov or sbb sbb icebp cmp dec lods mov vmaxss jo add inc xor daa or das sub xlat add pop insb sti xchg push ds ficompl sarb andl sti add mov mov mov or cmp or ret pushf (bad) sahf orl inc cmp jg lods adc xchg mov (bad) mov inc mov jae inc lea mov pop aas lea sbb adc add lds orl inc jae ret leave sar leave pop mov cmp lcall arpl mov dec mov dec xchg addl pop out or (bad) or decb sbb (bad) fmul test inc xchg daa or popf xchg les les xchg push push ljmp or jae mov mov jle test lods jbe addr16 es sbb mov or ljmp out xchg ja push enter and (bad) aaa pop mov jbe pop notb mov cmc test mov (bad) xor addr16 push call mov cli fdivrs and insb mov add mov dec sbb scas clc or push (bad) jge mov aaa call cmpsb test or leave mov loop mov punpcklwd dec (bad) fwait sbb daa xchg lea (bad) mov cmp jecxz (bad) in mov cmp imul in scas xchg addl dec pop clc movb ficompl iret mov bound rcl add cld fldcw mov push loop lret andl mov add push cs inc or vhsubps ja inc add cmpsl (bad) stc jecxz inc mov loope mov jmp repz xchg ljmp jbe xchg inc xchg dec mov movsl cld mov test sbb out inc movsb jnp mov ds or xlat fcomps cld sbb sub pop pop enter cmp ljmp inc jl xchg inc sbb jge pushf mov test inc xchg pop popf test jmp mov ret xchg (bad) pop movsb pop stos in popa dec or call cmpsb bound xchg inc out mov decb adc jnp data16 movsl test jge pop mov div lcall dec jns std je pop call movsb outsl pop loope js inc das lret xchg ja jnp jle clc imul lds les xchg inc leave das lahf xchg lock rcr jle mov decl or popf rcrl inc xchg adc adc test sarl loop pushf mov (bad) fstl imull lret mov js pop iret jnp loope add pop jl arpl pop ret aad js jecxz loope add add inc test xor adc lahf mov std inc enter mov add cmpsl add mov mov (bad) fstl mov in mov test inc xchg aaa cmpsb pop adc mov mov cmp add sbb jmp sbb inc sbb cmpsl inc inc mov stos movsb push or or push aaa mov and mov (bad) idivb adc mov sbb sub add movsb add test xlat aad jecxz cmp (bad) and rcrb sbb fist (bad) incl popa pusha adc mov mov and incb xchg adc push and inc leave jnp rol andl ret (bad) xlat pop adc es test sub xchg and dec cli mov aas test mov cmpsl sahf or and and add aad lret movsb clc ficoml sub ss aas cmpsl popf sub sbb rcl hlt lds push or fdivr addl and (bad) cmpsb addr16 jbe movb out mov xor (bad) mov inc leave mov jbe inc mov mov pop gs xchg clc cli push add mov out roll and lods cmp sub fisttpll mov or jbe lds or and and cld mov loopne dec hlt or sub pop test rcl into leave xor andl and push ror jae sub addr16 call pop push lea xchg cld mov std xchg (bad) (bad) fnsave fcomps xchg jle pop cmp ret mov mov enter xchg xorb sub lret es jl pop cmpsb cmp jecxz in xchg mov add (bad) stos sbb (bad) das jo movsl movsb (bad) pop sbbl daa stos loope xchg mov rorb (bad) or mov mov stos sub test (bad) in es pop (bad) ret std ds inc sub add push int3 jnp popa (bad) jo mov jge std jg jl pop icebp ds add cmp bound int cmpsl cmpsb inc (bad) mov rorl sbb mov cli ror cmc inc pop mov (bad) inc xchg cmp and pushf mov push inc pop aas xchg or adc jge mov (bad) cwtl jnp int3 outsl inc shrl aad lahf mov rcrb adc push das imul cwtl jl xor (bad) fldcw or insb pop outsb repnz loop (bad) insl insl cld (bad) leave nop (bad) cs mov pop or pop repz cmc jp jmp xchg adc mov int3 add inc lahf mov rorb rcrb push inc lds mov adc mov test lcall sbb test push rol daa and cld pushf lock hlt addl jg rorb jge,pn mov cmp jg,pn sbb and or (bad) jo fild mov mov sub ret in aas adc adc mov push lahf (bad) rol pop or repz lahf rolb add iret orl repz dec add aas shld inc xchg xorb cmp loope add pop pop roll iret cli lods or jl mov mov (bad) sbb jl fild mov iret pop or mov jbe test push mov mov jl rorb xlat xor xor or jmp mov jle add stc and maxps mov sti popa jle sub sub pop adc int lret or mov jl cmp pop jle jl mov xchg rol nop jp mov lcall mov dec shll std xrelease cmp dec pop out mov (bad) (bad) or push jns mov (bad) into (bad) out mov sbb mov jno sub add pop inc ret adc inc outsl mov pop xor or mov nop lds xor jg fidivl mov or fisttp adc sbb mov xorl mov inc jp aam xchg mov mov jge add add adc arpl lahf sub test aad sti adc or lea flds scas popa movsb add out (bad) aaa mov push mov cmc sti adc nop inc or mov lahf shlb out pop xchg add mov or not add pop sub adc js shll adc add hlt mov cmpl ret adc aas adc sbb (bad) cld stos mov (bad) mov popf mov pop dec cwtl jg jl mov loopne mov mov pop aam push pushf mov and adc pop sub xlat sti pop jl int3 mov push mov cmpsb loopne mov mov ret std popf adc mov xchg scas decb push mov mov jl jno add mov mov and pop std mov push mov cmp addr16 mov es lcall inc cwtl add repnz inc add add icebp test push in dec push adc sti (bad) jae or shrl in or jae jl lahf (bad) mov inc mov outsl inc jle int dec cmpl mov xchg mov outsb inc subl ret push xchg in fdivl in sti outsb in add jnp dec sahf mov xor in arpl or pop mov and mov mov sti mov aas mov mov aad mov xchg jg fdivrl ds in mov pushf dec bound or jmp cmp jge in lcall pop mov ds inc inc dec fwait clc xchg jle lea into jnp (bad) xchg scas daa jg shll sti lock adcb inc mov cld popf push mov pushf mov jge gs mov sti or daa ret inc xchg decl xchg sbb sahf xor addr16 out clc mov ds sub jg fild roll inc xchg xchg adc incl xchg (bad) popf ret inc adc pushf sarl popf sarb mov xchg std or popf jnp sti dec jle lret or inc adc pushf test aam inc jg sti lds aam or in (bad) sti xchg aad xchg jnp mov jle (bad) or repz xchg mov mov xchg push sti jle (bad) das jge (bad) push out ja leave leave sbb (bad) mov push add nop lret or pusha fsts and push mov sbb mov aas jo mov cmp dec or push in popf push out sti lea jae xor xchg stos movsb pop scas mov sbb add add (bad) enter in addl lds loope jnp scas jl jnp mov add (bad) testl lods ret pushf ds sbb dec jo sub lds inc pushf add inc popf and pushf jp (bad) out iret js mov (bad) jp repnz fwait shl xchg xchg dec jle mov cmp or aam outsb stc test cmp fistl inc dec (bad) movsl mov jge add cmpsl add lea lahf icebp mov sti idivl push mov lahf lret xorl ds sahf orb jg lea pushf dec mov jge jnp std lret adc mov cld popf jl mov sub mov mov add mov pop dec jl fmul pop mov xchg inc popf popf mov pushf mov fsub pop or movsb or jns mov flds std jge pop mov or pop sbb sbb rclb scas sti shrl dec daa pop jmp inc mov and or and mov push push sbb xchg sbb jmp mov push mov pushf push (bad) sti in xchg mov adc pushl xchg fcomps jle fstl push pushf and bound adc push stos (bad) mov lahf popf loopne popa mov mov jmp xchg (bad) jg sub pop mov push jl add ja enter and sbb fwait jae cmp or cmpsb add negb popf or insl xchg mov pop cld jl,pt (bad) rolb pop decb sbbb outsl dec cmp mov pop leave cmp xchg mov shrl (bad) stos iret sbb add mov or (bad) das xchg or popf (bad) mov pushf sarb sub loope popf or xchg mov rcrl cmp daa mov mov inc or sti pop std add or rcll int3 sub pop ret pushf xor add xchg adc adc ljmp dec popf inc mov push push mov out out mov mov in inc dec jg mov orb xchg dec cld movsb jne sti out jnp jns adc std into mov stos fildl cld (bad) sti xchg jl jb (bad) (bad) out pop in xchg xchg mov pop xchg repz test lret pop jnp sti mulb mov test (bad) in fdivrl xchg arpl or or fs subl push pop int sbb imul mov xchg in aam stos pop lret push or jbe jmp pop xchg pushf jae mov fsub ja jp insb add mov mov out es add shr push stos push cli orl push cmp bound jmp or fnstsw push or mov cmp enter mov iret roll notl mov (bad) in cmp xchg jecxz loop mov dec add stos cs push cmpsb pop mov test push dec xlat stc lret pop movsb and in xchg jl rorb pop xor leave or cmp and in jbe pop or popa mov pop xor jl fwait mov sarb scas push inc lahf mov xchg dec sbb mov or shrl outsl push hlt popa pushf pop mov mov test cwtl lcall mov cmc imul push out jecxz mov and fadd jbe stc or xchg ret mov inc xor aas xor aam jmp mov sarb jne push push iret push pop xchg bnd mov inc mov mov rclb mov pushf ss clc mov push (bad) ror out cmp push inc in sub sbb leave inc rorl pop mov mov inc lods (bad) repnz xchg push xchg dec (bad) sub or mov scas mov adc hlt push mov cs add or mov ret iret lahf jmp adc mov cmp scas xchg cmp add andl in stos data16 sub mov mov mov idivb int leave dec mov mov xor adc cmpsl push cmp mov pop fs add lock mov jbe mov cld pop das pop shll fcmovnb push mov test sub fsubrp cmp dec lret aaa in in push insl mov (bad) mov subb lret push xorl jecxz adc mov pushf xor and lret ret popa outsl mov je mov aaa lret xchg fstpt mov dec (bad) mov movsb sub mov fs xorl mov inc add sahf es push adc outsl mov into es fild fisubr lret sub (bad) sti sbb out in (bad) jge in xchg dec mov mov (bad) mov mov or imul nop push les in lock rorl pushf mov inc lods lahf fadd jb dec adc (bad) pop or jnp cmp shrb ret adc cmpxchg in jno outsl xorl xor push xor cmp inc loopne aad cmp pushf (bad) movsb add mov xchg cmp rcll loope fistp ret cmp icebp lods out pop or popf add enter and pop jle mov repz or mov ljmp push xor and or lods shlb pop cmp cmp mov fsubrs lahf clc lods cmp mov mov dec jnp cmp scas pop pop or mov into sti sub mov and mov roll rcl mov insl dec mov je lret and je xchg sub stc movsl adc aam (bad) and (bad) jae jg jno cmc sbb insb das (bad) icebp int aam or out loope jl (bad) mov ret and mov lret mov mov sbb sub sti rolb jg mov jl jge movsb mov pop mov (bad) call repz add int aad push mov inc mov out push add adc xchg add pop inc lcall xor jecxz xorl sub aas int mov pusha das and inc push jg pop inc jnp movd inc jae dec scas lods xor jle inc pusha fist clc test jg les cmpsl mov sbb mov mov loopne outsl sarb add inc jo jnp in das sahf out hlt imul mov aas aad les lahf mov jle in xor les test dec bsf jmp ret hlt push sbb arpl push lahf pop pop mov push sub data16 sub sbbl sub and cmc aam ja pop cmpsl add out sub mov cmp push in mov mov addr16 sub mov jo push jae out addr16 fwait cmc mov xchg sub inc or sub xor xchg dec call push cmp fcomps push xchg xchg scas mov pop (bad) mov ljmp ja add jae or fstl loope into push mov ja add pop into negb outsb sub xchg addr16 out js dec mov mov idiv pushf mov adc sbb enter add out int cltd adc jns mov mov mov fwait dec dec cmp imull pop inc test aam aam aaa fwait je arpl mov xor out adc movsl sub sub pop in push mov mov mov cmp scas (bad) pop enter jle jae sub adc pop sub cmpsl sbb push inc fidivl icebp jbe cld movsl int3 sub push mov and add ja lea call clc sub jmp pushf not pushf xor bt cmc cmc call push sbb leave add adc mov sbb pop outsb pop xchg cmp repnz mov out lea arpl inc inc imul cmp ficompl mov repnz out push cld mov subb cld xchg jno pop shrl adc sbb icebp push jo lret sbb sbbl mov mov pop popf test xchg cmp mov (bad) imull aad and mov das lds idiv dec out pop int3 test pop int loop fldenv mov fisub cmp and and jne pop jmp lahf push push lea call mov jmp pop xchg pop mov sbb push sub movsb repnz (bad) mov inc jo sub lods sbb out repnz inc add mov ljmp xchg push insb dec dec iret add or jecxz cwtl or xchg dec enter jecxz icebp arpl popa ja (bad) enter (bad) inc and and addr16 je sub fistpll sub xchg mov mov jp clc mov fcmovbe adc mov rol cmp xor pop repz clc add test add loop mov mov mov ja ljmp add mov sub adc outsb (bad) add inc movsl pop jns stc cmpl add mov inc mov jo rolb mov pop cmp lahf jno stc test jns push add enter js xchg xor popa cmpb adc dec lcall out mov mov cld jo sub popf mov pop ret addr16 int3 pop sti addb lock ss sub leave (bad) fcomps push add fisubr sbb push push in popf add jle jns aas scas ret mov out mov jg xor (bad) out pop (bad) fisttpll lret ljmp jns ljmp inc adc ret faddl lods test fistpll rcrl lds fsubrs loopne fadd and inc push (bad) xchg cli sbb movsb xor mov (bad) mov fldl mov adc sbb ret or test xchg xchg test or movsl adc xchg out add in das jb jb rcrb sbb rclb fcomps int mov lds jl aas outsl addr16 mov popa dec call shlb mov clc mul (bad) push lds cmp fcoml xchg sbb dec jnp xchg (bad) int int push sub jmp (bad) into iret cmc cmp jae js fimul mov subb sbb (bad) or inc or mov dec loop in push ret inc in and insl push ret cmp cmp cmpsb xchg sbb xchg lea mov mov popf testb bswap sbb lcall xchg enter (bad) stc or les (bad) or aas (bad) xchg (bad) jo imul cld xor test lret or add sbb or (bad) cs bound push dec pop hlt loope sbb cmp mov leave sub rorl orb xor mov sbb test push stos movsb outsb ret lret movsl iret cmp test mov xor in fidiv xlat lcall cmp adc cmpsb cli test cmpsb insl in and in (bad) xchg mov jl lods mov test fwait xor mov mov xor pop xor movsl or mov mov cmp fmuls jb in repnz pop cmpsl es or adc das in movsl popa dec pop mov fmuls cs mov sbb (bad) das jge cmp int call out shrb sub sub xor inc push or orb jbe push cli cltd hlt or pop lods cmp xor addl xor pmaddwd (bad) test jecxz push movsl mov push pop mov inc je sub into gs pop xchg mov sarl lahf mov mov pop insl lods push xchg cld sub pop and fwait mov fildll xlat loopne jno dec and insb (bad) icebp (bad) iret in inc jns test std rcrl lcall add mov add es test push push gs push lcall inc and push add add sbb or mov enter pop out cmc sbb pop or in mov rolb gs mov mov adc or adc and pavgw xor clc xor pop (bad) out subb iret mov adc sahf adc jns (bad) fiaddl add xchg mov sub cmp dec sbb xchg jno pop xchg sbb int mov pop test outsl stos pop cltd pushf out sub popa cwtl sbb inc sbb int add pop lret test jno pop addr16 scas or xchg fs dec out xor add aam fldcw mov pusha adc push jge sub add leave push sub in cmp roll lea scas cmc or ljmp (bad) testb adc mov test adc mov and cmp and out daa push and jg outsb les inc mov loopne int loope xchg and ret sbb and mov icebp mov insb (bad) iret push das and dec test mov xor packsswb cs (bad) or test (bad) hlt jmp mov sbb adc outsb pop (bad) cmc std pushf das xlat fdivs pop je stos leave insb lds jmp fisubrl cmp lods xchg cwtl xchg leave inc lock fidivl mov es pop int sub push add jno std push mov (bad) ss push mov adc mov aas dec dec sub jnp lcall cmpsl scas aad jl mov mov add popf fmuls (bad) cwtl push ljmp cmp call jge (bad) pop dec lahf cmp xor mov les cmpsb sub addb pop mov ljmp add test add push call cmp sbb push mov leave out mov jbe xchg dec insb imul pop sub test and fcompl cwtl aaa cwtl pusha cmpsl xchg sbb pop and pop mov dec bound cmp push dec popf inc test jmp pushf cmp mov mov cmp (bad) xchg dec or sub pop xor sbb cmp rcrb adc out pop inc sub popa dec int3 (bad) xchg lods xchg pop loopne adc push ds xor into inc sub test or shrl cmpsb divb jbe sub dec jmp cld cmc rcll or jne sbb leave ficom cmp jge sbb jns jmp pop sub sub cmp sbb jne sub (bad) fsubrs pop ja cmp das mov test outsl inc lods adc loop mov cmpsb cwtl adc stc fldl nop cmc jne ficomp dec insb xor cmp xor cmp push decl enter sti (bad) das lahf jl stos mov aas inc test dec aas sub mov xor movsl xor xchg test scas test sbb add mov std fmulp ror (bad) fstps ljmp pop loop dec movsl hlt pusha mov es xchg push scas mov subl mov movl push lods les xchg jbe jle adc daa mov ret push out xor jp and clc call sbb test lret inc ficomp dec data16 ss mov xlat in mov or push sahf adc mov pushf das xchg xor xor jmp outsb addr16 adc sbb lret stos xor mov sub inc fucomp sbb push mov xor mov das rorb scas mov sahf arpl mov sti fmull fdivr test movsb inc mov in sub hlt pusha lret bound mov xor js leave jno pop jne pop sbb cmpsb pop (bad) repz in push push xorb mov jb jb aam push std push (bad) jge inc mov or xlat inc mov push cmp incl sub and rorb dec adc sbb lods cltd and xchg jno mov inc jo mov push pop lahf inc xor adc cmp int3 and (bad) repz movsb lahf mov arpl movsl aas jp repz mov jb jmp add and movsl out push adc xor scas popf hlt mov test push (bad) mov daa and in aad outsl shrb mov es and shlb xchg mov cltd ret std add cmp jmp mov and int cld imul adc pop sahf or mov sbb pop or fldz das repz inc leave mov sti or stos add or insl adc mov cwtl movsb aaa xor cmpsb movsb lods push dec lret or add aaa or jae push xor inc mov dec incb inc ja int3 rcr add or xchg lea jnp xor and pop cmp jo pushf dec push in push mov orl das pop mov icebp push into dec ds mov adc negl fnstenv insb mov mov jns cmp jge cmpsl ljmp mov sub sub dec push popf or xchg sbbl inc jae setle mov mov mov pusha not lea je inc pushf jmp lea je stc cmc push movw add movb pushl movb pushl lea jmp lods mov ss inc adc inc add out pop ret sub lock popf jno sahf in mov sub psrad fnstsw in cmp fisttpl mov ss in dec mov cmp sbb sub outsl pop cltd cmp mov std mov dec nop mov xor dec push add inc sub lahf or lcall das cltd and mov jmp mov stos or adc sub lret (bad) add test enter (bad) xlat in dec sarb add mov test xchg jne scas aas sub pop push ret jo add adc cmp mov dec mov sbb imul add sar or dec les jno ja fs lret enter push jns add cmc cmpsl xchg (bad) adcl inc fildll jl inc lods mov adc cmpsl xchg iret enter xor lret int inc loopne lcall repnz ja fcoms dec fucom inc imul pop in sahf lahf test (bad) dec stos and xlat inc sbb in push in push ss out sub adc inc data16 push cwtl push cmp mov adc test repnz mov loopne fucomi push in test mov jne bswap pusha stos xor addl inc push lahf popf mov rorb sarb mov divl sub bound into out fwait mov loop (bad) mov pop pop mov mov xchg push mov mov and dec lret jo mov aam mov and jg test inc sub mov push imul mov rcrb add mov mov mov push adc popf ds lock mov pop add out hlt mov outsl daa xchg jo mov imul mov lods mov sbb or jecxz mov in add std pushf pop inc mov mov push shl ljmp fwait sub mov pusha mov jmp outsb mov out mov push pop push mov adc and jmp jo repz test loope js lcall mov pop add inc or faddl in sbbl mov mov mov out jmp pop lock mov pushf sbb lret mov lahf and outsb in mov cs dec mov inc movsb aas xchg push pushf adc xlat sub push in (bad) das mov cmp mov mov lock or cli mov and stos mov inc mov mov pop mov movsl out and (bad) dec int3 hlt pop mov lds lods stos push pop out cmpsb inc dec cmc fwait and xchg das addr16 sub jge mov inc ja pushl loope std js mov repnz jg and mov std pop push xchg add cmpl cmp xor test (bad) cmp scas add test or mov mov cmp subl ret xchg mov cmp arpl mov cmp rol fadds mov fisttpll add subb out push and jno pop es add mov out inc (bad) add jmp xchg nop mull daa mov push lods into movsb mov sub mov in sbb inc insl rolb test mov mov rclb mov fwait mov (bad) enter cmp xchg or aaa stos cli inc das push mov add dec cmp inc mov sub mov ret rcr stos mov (bad) jp sub or insb mov ds stc fnstcw aam xchg mov mov imul shlb add cmp sarb mov and aam sbb mov mov ret jg lahf cmp lock and icebp leave mov fcoms dec xchg loopne decb or xor mov push fwait jb mov jbe push jmp pshufw icebp or xchg movsl pop or xor mov std ljmp pop pop sub mov jecxz stos mov pop loopne xchg insl xor sub mov pop fcompl dec cmpsb pop fisttpll call es and add mov xchg push fst fstpt pop or js addr16 inc adc xchg in orb in mov mov jbe aad orb cmp mov out push cld xor cmp and ret data16 pop push add add or push cmp jns cs mov jb pop icebp fisttp (bad) mov jle mov xor sub jl pop sahf (bad) (bad) mov adc dec bound xchg mov sbb or inc jge pusha or mov xchg repnz mov jno pushf jge (bad) or pusha out daa jbe mov sbb movsl (bad) xlat leave call mov add stos repz and mov cmc je pmullw lahf mov mov pop notb pop mov std mov cmp out jl inc scas (bad) xor xchg pusha or push out hlt loop std arpl cmc xchg (bad) outsl cmp mov jg movsb sub push jne mov inc loopne push std sbb psubsb dec dec lahf lahf sub pop ret jo cmc xor call dec jg xor add push mov mov dec push es mov iret dec adc and dec shl stc sub imul enter sub dec fildll cmp test pop mov fwait pop cmp addr16 (bad) xor or fsubrs mov ret cmp sbbb mov mov add lahf insb mov or (bad) jae mov mov mov sub ss push pop cmpsl (bad) mov jge jl or mov incl test xor sub sub mov insb js add iret pusha daa lcall ljmp cli push adc int3 mov push nop xchg test xchg mov inc ss mov mov sub jmp push sub add stos lret stos cmp scas icebp test movsb push stos pop rclb xlat insb pushf test mov mov add mov add ljmp jmp cmp sub xchg hlt mov xchg sub mov mov sub mov adc jp (bad) push cmp daa ret cltd jmp adc add inc aas push mov clc xchg mov jge xchg ret mov jo xchg je mov mov push data16 lods call out fdivr jne sub sbb push adc dec adc add imul mov add or lock popf jb sub clc pop mov jno pusha gs jge aas test inc stos jmp xchg into mov pop lret pop js mov mov popa sub cltd lods arpl loope jmp mov mov jecxz arpl sub add hlt jmp out cmp pop push or fnstsw sub inc cs std in push mov inc and fwait ljmp mov sub adc push aad sar lret (bad) mov xchg insl jae orl jmp xor xchg (bad) jg jo push mov push jmp cld mov cs ss push lcall pop ret sti cmp or mov or sbbl inc push add fwait cld lret push mov mov jle cmp or add aad in cmc incl mov pushf leave mov lret das mov or lods or mov pop popf and pushf and adc xchg xchg pushf daa mov push popf addr16 pushf push sbb mov pop popf out mov pushf xor loop (bad) mov pushf lds jbe pop mov pushf dec mov or dec popf fwait mov pushf insl mov mov rclb jb xor jbe push mov pop xchg int3 pushf lea outsl popf add pushf repz jbe addr16 mov popf fnstsw pushf push mov fs xor jmp jg xchg or popf push mov pushf lds fcomps add nop sbb mov rcrl adc ljmp jl mov sahf pushf outsb mov rcrb adc push mov ljmp insl mov popa jmp scas sahf pop shll (bad) adc dec pop repnz jo xchg movq aas push (bad) clc jbe mov inc rcll cwtl sub gs (bad) jg dec adc mov cmp and mov mov pushf das sbb inc xor cmp ret push or lock fs dec das pop xchg mov (bad) fmull in jecxz sub faddl adc stos add aad cmpsl scas mov (bad) jno xchg mov popa mov loop enter jns mov imul add bound push call pushf out insb mov shlb mov lret sbb adcb rcl inc pop mov bound push dec out inc inc jns adcl jo xchg dec (bad) jl imul pushl lahf (bad) icebp mul jno jno pop insb xchg inc lahf and iret add mov adc sub test daa lods mov mov adc shlb push test pop mov dec fbld lret dec rcl add and jnp imul or mov xorl mov mov icebp ljmp subl or lods mov sub popf nop inc (bad) mov jno jg (bad) xor add jno stos adc jnp popa jmp adc sbbl lock cs push shlb push xor rorb (bad) lock (bad) mov jno fist mov xchg out lock pushf mov mov loop sahf jg inc adc cld and push (bad) jne mov pop xchg (bad) and mull adc outsl loope ss imul ds mov mov loopne out xchg xor or ret in mov lea mov push mov or iret dec loop out loope into loopne xchg dec push add aas inc leave adc pop sub jno dec lock rorl ret in addr16 push into sbbl inc lock (bad) mov push movsb popa shll xchg mov pusha push sti adc cmp cmp (bad) sub add pop xchg push aam jb pop add jl lods mov in push sbb add (bad) mov or rorb rorl mov mov pop jmp pmuludq mov rorl cmp pop mov add aad (bad) mov sti cmpl lock add inc ret lock jle mov incl pusha mov lret jle out xor mov fdivrp lock jne xchg mov (bad) and int3 xchg jp mov sbb xchg mov lods jl test sub pop sti adc fldl (bad) repz sahf scas mov into push outsb and jp xchg div lret xchg out xchg xorl ja push mov aaa xchg cs test sbb pop sti jl inc loope or or jl loopne test jge cltd add mov add adc mov xchg jnp adc push xor or mov or mov adc rclb sahf (bad) jge mov mov lcall movsl jb (bad) mov or or cltd xchg mov add cmp or mov (bad) scas (bad) rcr pop mov push push outsb out push scas mov bound into fiaddl pop cmpsb sbb test sub fucomp dec jnp sbbl lock aas arpl rcrb sbb fwait iret mov mov addr16 xchg pop leavew jne mov into ficomp pop push push mov (bad) (bad) rcr sub scas jge addr16 mov stc fwait mov push in dec add jl xchg loope iret or fimul pop lahf cmpsl bound fwait jmp sub inc or test fstl (bad) mov paddw mov shll pop push lods sarl fwait loope decl xchg sub pushf add or lds sbb mov sti jns test jbe in repnz sbb mov cmp mov movsl imul lcall lret lahf cmp (bad) ss jg stos hlt std add lahf push mov jg imul cmpsb aaa (bad) adc and (bad) and xchg out ja pop mov jmp inc flds out popa sbb (bad) or dec push inc das push movsb mov (bad) cltd sub and test mov clc lahf xchg jnp xchg sti jl and lea jle mov mov or jl push mov xchg mov ds adc add inc sbb dec mov fist mov sahf mov jns pushf mov into jp iret fwait in sti lret sahf adc ficomp stc mov jp cmp jge ss jns cmp (bad) pop jge push arpl loope sbb adc lahf arpl scas ficomp scas dec jge scas call sahf rclb and push fiadd jl scas sub pushf dec hlt fwait jp ret push fidivr pop mov mov test jecxz scas pop lret and lcall push pop fistp jnp adc lds outsb (bad) out pop sti push ja pop jl inc or pop (bad) rolb int3 sub add cmpsl mov mov pop push insl jl mov adc add (bad) cmp iret addr16 and jg jge xchg and push jg iret mov rcrb out movsl sbb add dec jo ljmp fdivp adc and push jl adc retw leave fistp test mov ret jl iret pop add sub mov outsb push (bad) pop test sbb (bad) out and scas imulb inc pop (bad) pop xor pop loop dec and or adc lods out popa add shrl push mov sahf mov push jnp pop lea (bad) faddl ds popf and jl push fnstsw jge outsl push (bad) int and daa xlat popf (bad) mov mov dec inc sahf mov fldl fstpt adc test stc mov outsb out add mov pop (bad) movsb in mov mov shrl push pop pop add sbbl jecxz cld cs jae push into loopne mov dec pushf dec nop jmp fimul into sarb mov cmp notl cli scas fidiv pushf fs je or and scas mov mov sbb ss pop je out loop mov (bad) arpl inc das popf popf insb int scas push loop (bad) (bad) pop cli aad inc aad je mov xchg mov lds das icebp push lea popa xor add ret cmp (bad) nop aas fnsave ret jmp sbb mov and js jns sti mov shlb xchg test dec (bad) loope pop addb rorl cmp xchg lods test xlat adc into sahf and add push js dec mov xchg cmp je pop push mov lock aam ja sub xchg shrb pop pop outsl enter cmp adc icebp push (bad) push ret mov inc rol iret es mov adc insl mov imul (bad) lret sub scas cmpsb mov ficom out sub frstor dec inc mov sbb or (bad) xor pushf (bad) mov repz iret dec mov jns mov sti icebp enter cmp das mov dec pop outsl jg mov loopne add and mov icebp add and fwait inc push popa jno xchg rolb add and dec push mov rorb bound mov cmp adc fimul icebp dec lahf mov dec jno and mov jge pop std pushf cmp add adc mov femms fimul cmp jle pop shr int3 pop mov jns jg pop jl (bad) mov adc cli sbb fdivr mov sti in sub jl sub popa icebp sar jae mov and fidivl dec fucomi rcrb mov dec sbb jle add pop fsub imul js lock mov adc test dec mov mov jmp movsb ret sub pop add xorl pushl sbb and mov lds adcl lret insb add adcl cmp cmpsl sbb adc mov mov fbstp sbb jg (bad) sarb (bad) stc (bad) cmp mov sahf push loop inc mov out adcl mov roll push mov insb aas out sub arpl ds jne and clc and pop ret add pop ror or and rol dec dec addl xor sub loop add and and scas mov popf or push inc dec out mov sti sbb jnp jg iret jmp sarb or in arpl das mov lahf in inc mov std int sahf lahf jle roll jl dec push test fwait lock jp fdivrp inc mov jl cmp insb jmp dec (bad) sub rorb xor jl pushf insb js pop mov dec pop pop mov xchg lods std dec fdiv cld or add jnp push sbb sub or cld mov aam pop mov sti lahf mov imul cld mov mov int3 out inc jge jl stos insb xchg add les lods inc cld jnp adc ds mov decb or inc mov aad pop jnp je add enter mov xchg lahf sti xor mov mov cmp ret xchg leave cmp add cmp int3 dec xchg dec lea jg test sbb cltd sbb es std dec (bad) jmp popf lcall ss dec cmp insl (bad) in into sub popf jge aaa cmp mov mov insb jge int add push sti je cs loopne mov or in mov mov pop sub inc jnp mov loopne cmpsb xchg das add and fwait push lds jne cld jae jmp cltd cmp jnp mov lods mov popa (bad) fadd sti pop dec in (bad) cmpsb pushf jnp (bad) mov push or (bad) int3 jnp cld fdivr (bad) loop jg sbb sahf mov in or cmpsl (bad) outsl sar pop data16 imul mov and mov mov repz (bad) mov jno repz icebp clc inc xchg xor lds cld adc sti mov add (bad) jo jae add mov push and decb jo std inc es jge sti mov jle mov jnp xor cmp sub repz rolb fsts push jnp push cmp sbb mov xchg ret cmpsl (bad) pop xorb xor addl sbb or mov mov push xchg inc cmp inc jnp xchg adc mov cld out lock adc enter adc dec jle mov mov cmpl cmp cmpsl les jge stos sbb or dec lea fidivrl cltd sahf cmpl mov std int3 fdivp verw lret dec mov or pushf cmp scas cmp (bad) mov lret cmp jge cmp pop lea int3 mov jle or dec outsb ret int pop sti or dec incb (bad) or mov or scas scas mov xchg lds je std (bad) aam sti insb mov mov mov jle pop xlat or iret or pushf fwait enter test test mov lods push insl push mov inc add mov sub mov inc adc sbb pop enter push mov fidivl jnp sahf xor shrb dec sarb pop or fstps sub xchg fucomp jno sti dec pop (bad) xlat dec adc fmull pushf pushf sub xchg test sbb and jne or outsl add cmp sbbl je,pt dec mov xchg inc add adc (bad) sarl scas leave repnz cltd push mov scas inc ret sti fstl xchg jle sub fwait add xchg int3 popl add test dec dec xchg pop sbb and xchg mov mov (bad) jae lods rolb jl jl lret mov cmp pop imul lret push cmp xchg cld test test in xor fcomi jge sbb mov xchg dec mov mov mov rolb dec popf call jge mov lods add scas test in xchg lret mov out lds fisttpl in cmp dec jg pop sbb sbb js fcmovnu movsl cli add orl cld inc jl std dec cmp aas imul mov jg addl mov sub pop fimul fnstsw (bad) inc (bad) adc sub add mov sbb sbbl push mov xor xchg dec (bad) mov lods inc jge add cmp sbb add test cld or and std aad mov lret lods fistpll mov add nop mov test (bad) out mov mov mov or gs push test fsubr test jmp dec leave pop xchg (bad) aas xchg out std cmp popf mov jl lret mov xchg mov lret repz sub nop sbb in push adc pop lret int3 lods push dec lea in lret sbb (bad) mov loope add jle jl fstpl mov std mov mov or mov fstpt jg jg inc pop ljmp in ds stos sbbl sti fwait mov inc mov cld movsb inc addr16 dec sub pushf popl lret mov sahf adc adc xor dec mov push or out inc cmc lea fwait mov mov (bad) mov add sbb (bad) jae push mov dec sahf mov fstp mov jg int3 jnp jg lret mov rorb mov imul cli incb in lret mov outsb xor adc (bad) jl call jle (bad) jmp dec mov pop push xchg lea lret inc mov lea add decb (bad) into sti out or in cld aas mov xor leave lret jge xchg lret dec mov fildl sub or adc outsb adc int3 dec andl xchg push inc cmpsb jge das add inc orl test mov (bad) inc jmp jb cmpsl das dec mov mov insb xchg jb jae mov xchg sti xor gs pop das (bad) or xchg sbb hlt incl add mov dec jl xchg sbb adc (bad) loopne or hlt fiadd movsb shr cltd mov push sbb dec das (bad) cld jnp sub add orl inc mov stc test pop or mov add in push jecxz cmpps (bad) decb pop adc mov ret fist sti mov jle or sub sti andl test scas jl cmp mov test jg shrl call lahf mov scas cmp mov push mov cmpsb mov mov jnp xchg (bad) jge popf (bad) cld sti add mov fcmovnb cmp subl icebp add jnp pushf lock mov jge push mov test inc add pop adc ret xchg shll (bad) sti inc call repz rcrb cmp cltd std fldt decb lret adc mov je pushf xchg sti sbb addl mov pop mov sarl add ret hlt push (bad) dec in rolb dec fwait mov adc add sub xor cld fcmovnbe xchg and mov rorl mov ret add jl dec mov or add jae sub cmpsb dec inc or lret or cs in mov inc mov mov pop loope add dec adc sti adc sbb lods decb pop nop jecxz ret mov int adc lret fwait add test pop mov jge in popf dec fmull loopne xchg jecxz push mov decl lret jmp cmp ds inc orl mov add xchg aas pop dec loopne pusha icebp lea std inc adc mov add or rolb jle inc lock test jge mov cld lret std or aam pusha jnp dec (bad) cld push mov in loope jle mov loop mov xchg add cld cmpl add mov jnp outsb outsl lret pop cmp mov cmp lods lahf pop out into jg scas jo mov inc sti mov lds sbbb inc sbb loope or or adc (bad) ficom and (bad) rorb mov push mov lods pop insl hlt jge or inc mov sbb mov loope mov fcoml lcall mov push mov mov dec cmp inc iret test inc int roll or int3 cmpsb jnp or lods xchg (bad) imul sub pusha mov inc add or mov iret or dec add or arpl dec test outsl popa mov jecxz ret pop (bad) scas scas lea or and cmp (bad) sub xor ret imul (bad) push scas cmpsl mov dec xlat jl addb mov inc int jnp fwait int3 dec adc pushf cmp lock loope nop xchg or push mov mov mov mov les (bad) mov mov push dec sbb les pop or arpl fistp das pop mov cld cld jge dec rolb test dec out aaa jnp adc cmpsb mov sub inc shrb mov lret mov jecxz and mov inc mov mov mov (bad) pop cmp (bad) jge jl loop mov cs xchg add and sahf sbb or lahf cmp lret mov cld xchg aas push add sub adc scas loope mov gs mov pop sahf sbb fucomp mov dec or lds fdivrl fisub aas push xchg xchg movsl pop adc leave cltd lret mov pop sti pop pop test rorb mov sti cmovbe and push sti mov or call test lret mov jl mov adc pop or int3 rcll (bad) lods mov or xor cmp sbb aas mov daa jle outsb rcll or add add push or pop lret into xchg inc test and xchg sbb sub or inc lods dec fcmovne sti push das add cmp or (bad) cld mov std or dec jle lods mov jl xchg jle xor add mov test pop in push (bad) sahf fwait push or mov lods push xchg fsubrs or jecxz add and mov xchg jg or or add bswap rorl pop dec cmp or dec outsb cmp xor or insb inc aas or pop clc pop (bad) cld mov jmp sbb inc mov push mov mov mov add sti xchg movsb enter pusha ret xchg inc mov or xor subl enter or cld mov test lret add mov leave sarb sbb jl or (bad) dec popf adc lret arpl std add (bad) sti or andl das sub ds push lea bound dec lahf daa jg lds or pop (bad) cs add or shl or dec out mov test sbb cwtl mov loope add mov popf (bad) pushf int3 mov pushf std (bad) mov jb cmpsb inc add cmp sti repnz push andb pushf aad mov lret lods jnp shr insb add inc inc cmp ret cld in in (bad) test sub pusha xorb add cmp es pop std or or mov sub and std popa aas add inc cmp xchg mov into push jl dec loop or add imul fisubl out inc adc or or xchg stos repnz insl jle jg inc or ds xchg and rcr fldl insb jg ja sub (bad) sahf jge lds rolb fcomi imul mov sub or in jecxz mov cmp loopne add popa xchg sub test or leave movsb test jge mov mov pop (bad) lret mov insl (bad) lret or jnp jge xchg xor inc or dec pop sub or xorb enter test sbb or mov sub or mov test movsl cmpl andl rcrb call push cld loope xor inc xchg das popf outsl pop mov add mov mov jecxz dec ret lods faddl out loopne cmp adc (bad) push lods xchg mov cmp sbb (bad) mov pushf cli aad ficomp dec dec leave or inc stos jg and jg adc outsl inc or xchg sahf mov push and add or packuswb jg add jl (bad) jne pop sti es add or scas or ficom ret jb xchg and adc xor sahf arpl sti add xlat rorl jl jge dec jnp jnp sbb pusha test ficom add leave xchg cmp movnti sahf or fcmovnbe inc cltd movsb dec and or (bad) fmuls or mov sbb or aad mov jl push pushf add xor sub shrb cmp sarb add or or es (bad) fimull mov mov mov lahf (bad) xor jge or pop enter inc hlt mov add xchg inc jl adc outsl or jae jle or mov pop ds mov or cmp les or jge in inc push (bad) into or push or xchg rorl sub add mov enter mov push enter btc or pop xor (bad) in pop inc fwait subl pop jne add aad adc adc ds int jnp pop push test loope xchg inc or movsb jl pop cmp int3 push mov mov xchg movsb mov in cmpsl test jge in adc sbb popf mov arpl insl mov mov wbinvd mov (bad) add enter mov (bad) sbb je (bad) int3 mov xchg adc pextrw pop pop sbb decl lahf push imul or xchg cmp fs jnp pop insl ja inc adc mov inc cld lods adc and mov call mov add push mov or ja xlat mov or jno mov cmp pop sub inc fistpl std (bad) push dec std mov cmp std cmp std add dec leave fdivrl decb jg movsl or mov add add es pusha ret jecxz sub jnp mov in mov das mov add pushf mov inc in xchg mov cmp (bad) sar insl or ret mov cmpsb ret icebp test stos fisttpl add mov or jnp (bad) xchg push pushf add mov ds ds mov pop cld adc iret or call or jg mov add mov mov enter cmp mov xchg cmp inc (bad) std lret roll add mov ret jle int3 fcoml cmp jg mov dec int sub inc call mov inc stos popa add mov inc imul add adc les push clc jnp in and or inc (bad) aaa jle loopne or xchg mov std scas jge xor mov decl sti shrl (bad) push dec xchg mov sbb cwtl ss mov jl or iret rol decb fwait pop inc add mov in dec cmp jl push pop addb (bad) cmp dec inc mov xor lods add mov inc mov push jmp jle lods ja add mov cmp aas sbb icebp cmpsl inc dec (bad) adc mov enter add jle repnz adc mov aad test xchg mov popf lock (bad) cmp xchg jge jo add adc das inc iret adc and xchg loopne fidivl cmp push cli mov stc add (bad) jmp ret add push jge cmp pop aas sub lods dec mov lods pop adc xchg test xchg mov push xchg (bad) adc sbb inc adc sub ss adc pop xlat clts pop inc fs inc mov sub outsl es testl data16 fimul imul ljmp leave aad mov (bad) lea adc jnp jg adc jno (bad) aas jle mov ficomp imul (bad) mov mov add scas stc xchg dec xor out dec mov (bad) fsubl xorb pop jmp lea scas mov add in or or add inc addb sbb add pop and add pop adc add inc jl pushf movaps mov imul xor jge jne add mov popf jno loope out xchg (bad) nop cld sti mov mov xchg ret cmp inc popf call mov leave (bad) xor fisttpll mov mov pop repnz inc ret dec add cmp pop dec mov pop lahf mov xchg insl lods ds xor daa pop mov cmpsl or scas insl icebp sub mov cmp std pop dec icebp dec lock xchg in jg dec cmp push add or pop mov sbb dec imul xchg leave negb mov mov jae cld mov inc pop or or mov ret int3 out add adc js xchg push sub sti xchg test inc mov in push xchg lret int mov xlat rorb or cmp cmpsl cld cmp decb push mov xor push loopne mov dec pop push lret mov mov add jmp ret in add add stos test test pop dec pop lret roll rol scas das pop movl and mov add cwtl daa lea xchg gs fdivrl loop (bad) sub std mov pop lods mov or fdivrs scas xorl ret adc add int add or cmp cltd sbb (bad) xor dec hlt or aaa mov lods fbld pop jge ret ret add add jle fs gs cmp sahf cmc dec rolb lret iret add popf scas mov jge icebp mov pop (bad) or push mov lahf mov inc pushf sub imul aaa lcall push mov cmpl or popf sti sarl add mov enter (bad) pop pop out mov add je or test or dec mov inc adcl mov sub add cmp addl mov inc add aas xor sbb in leave std call in ljmp jge pop (bad) loope add insb repz xlat mov add cmp jmp jg jo xor xchg orl lret cmp mov ret inc cmp xchg sti push dec iret aas (bad) pop shll ljmp mov add cld xlat imul es mov test lcall popf cld mov mov call test jge pop xlat xchg movsb mov out movsl rcr fwait (bad) loopne test pop mov insb int std jmp leave mov xor xchg or push popl adc xchg or push insb icebp sub repz inc ret rorb pushf and insb rcl xchg or (bad) repz xchg sbb cmpb xchg or scas inc jl movsb xchg or xlat pop add inc rolb leave lret movsb stos mov mov insl or jecxz xchg cmpl mov jnp adc aas dec fs inc fcompl fwait jnp fisttpll out mov jge mov mov mov push xor add add push pushl mov mov cmpsl mov cld or xchg xor or in lds sahf aam dec repz bound pusha and add cmp (bad) dec inc mov mov stc jg lret sub in fild mov jge icebp inc push xlat cmpsb cmpl outsl std xchg mov cmp inc sbb sub jg out cld aam sar inc or jecxz cmp cmp in jmp sbbl daa push insb mov jg add dec (bad) sti lahf mov loopne lea mov add jl insl add cmp fidivr mov sti pop int3 sahf aad sahf lret add arpl in and mov add cmp xchg adc and aaa xchg (bad) xlat clc cmp fcomps sbb (bad) jle aad (bad) jo add mov in in push mov lret stos push leave mov imul sbb mov xchg jbe sub fwait jnp in loopne add rcrl dec (bad) or xchg jge mov inc sub fwait leave pushf or push in pop addl inc jnp ret out fsubrl lahf lret icebp cltd inc cli add push mov jecxz test pop inc add dec xchg xchg sub adc cwtl test std lcall sub or lret inc mov jb jge iret jmp or sti sbb (bad) jge push lret mov lds jecxz cmp or add orb jnp in lods in jg btc inc lahf sbb mov mov aad lods and das lea int3 inc (bad) mov push add aas sub mov sbbl push fcomi inc fild fnstsw inc leave test in inc add sbb inc hlt push cmp fild aas dec jnp or cltd mov out int sahf inc push std fs lods ret pop call lss and nop std fcmovnbe add mov into inc inc rorl and xlat xchg cmp fstpl neg mov dec and fcoml andl sbb jl js jmp aas jmp int3 les mov nop inc or hlt cmpsl pop and cld (bad) (bad) mov add pop enter decl ret in (bad) leave pop jno (bad) mov jge or (bad) hlt movsb ror jo inc jl fldl lcall ret rcrl adc mov andl loope nop popa or dec pop sti (bad) inc mov inc inc in ret ljmp sub and addr16 test movsl arpl leave adc sbb inc mov sti cmp fwait sahf xchg fldt aaa aas and les out mov popf lea inc mov pop or xchg stos imul leave jo movb push push mov add addl add movsb ret mov mov inc pop or pop cli pop cmp fnstsw stos jle mov jmp sub int (bad) aas xor pop movsb cmpsl (bad) daa xchg in and lret or pop outsb lds lret mov nop imul or pop mov dec add mov or (bad) mov mov fsub inc mov and mov cld push jb mov lea add or pop mov (bad) pop nop enter pusha and mov test dec dec sti in pop xchg jge insl sbb sub dec lods pop adc and add lret mov and stc sahf xor sti xchg call dec mov or mov adc ss pushf mov std pop jg mov xchg or mov add jo popf test xchg rclb pop stc in popf mov dec aas test jmp sbbb fcmovne fwait xor xchg push pop call or mov sbb push lock sbb mov sub fisubrl add xchg adcl mov jge sub lea (bad) fdivr (bad) xor jmp lret jmp test (bad) in insl add (bad) faddl pushf rcl jmp lods cmpsb daa mov scas lds xchg pop les ss inc mov dec (bad) cmp cld insb xchg nop add push and inc or shrb nop push mov xchg gs test (bad) mov in or addl pop (bad) movsl pop jecxz addr16 movb add jle cmp sbbl leave popl dec or jae sarb (bad) stos jmp dec sbb aam mov mov cmp mov add mov add jnp sbb adc in std inc or dec orl cmp aad repz (bad) lods jo lret (bad) cmp mov jnp lds pushf in dec add and xchg mov jl mov inc xchg adc cwtl jle std sbbl (bad) mov lret lods jl mov pop xor test or fdivr in mov push pop (bad) jl ds jnp fs xlat inc leave dec xlat or pop mov sahf mov jg addb or stos movsb test dec popf (bad) push cld push test add mov lret stos mov push in outsb dec jg (bad) sti inc (bad) (bad) push fsts or out (bad) mov jl dec mov movsl dec or subb xchg xchg (bad) test inc jnp lods cs test jbe std jo pop loope aas xor or mov cld or and cmp inc (bad) adc pusha add lods out mov add out fistp sahf mov mov daa mov jmp loopne std pop bound sti push and inc dec in int3 fidivrl cmp xchg dec sub cmp inc int jnp test lods sub (bad) rcrl pop out or cmpsl rol inc (bad) or mov dec and xchg js adc aam (bad) (bad) pop mov sub orl std les mov mov jle add sti pop iret fdiv fcmovnb and mov inc mov mov mov xchg dec movsb fisttpl push mov stc cmp lahf or out sub and inc scas decb mov into xor out cltd push jl insl loope mov sub test pop mov jecxz inc ret add pop inc ds pop push lods cwtl enter pop (bad) pop cmp lret pop icebp movsb inc xchg int jo xchg or and dec dec in dec (bad) jg pushf pop mov cmp (bad) ret jg out rorl fdivrp mov mov adc mov jge imul imul mov add rolb lods xchg data16 pushf (bad) sbb aas out stos orb mov dec inc mov std in jae cmp cmp popf xchg mov das lcall stc (bad) call sub jb in mov sbb (bad) mov popa sti or fwait mov call adc dec or paddusw jae mov adc js xchg jnp das xchg lods mov stos aam inc lret lods sub cld lret jg add int adc xchg or mov mov lea mov loopne,pt mov mov xchg mov in adc mov ja int3 sahf movsb cmc test or aas jg pop inc add outsb xor pushf sub cmp adc out dec mov push (bad) (bad) mov mov adc add inc (bad) clc sti aad mov aad stos stos lds jmp mov loop aaa insl adcl lods adc or mov mov ds cwtl pop add jnp and in cld and mov pop inc mov sbb dec stos mov insl iret or xchg lret dec (bad) sbb roll fwait leave jmp xchg inc inc (bad) jo cld lock jbe mov jo (bad) pushf subl pushf insb stos inc loope cmp std xor xchg imul cmpsb mov int3 int mov mov movsb jle mov mov cmp xor mov bsr movsb mov in xchg mov rol jmp or lret push cmp jns mov in adcl push lret icebp sub jle stos mov dec aad add sbb inc jle fwait inc mov xor lods scas dec lods lds pop imul sub in mov mov dec leave xchg cld cmp xchg test dec jmp or inc addb mov mov and or sbb or (bad) sbb mov cld lahf or xchg vorpd add jnp xchg inc adc insl rorl push push call shll jmp loopne enter inc les or test xchg or inc daa dec xchg enter add aas add sub sub cmp cmp and mov (bad) std imul inc fnstenv inc cld jnp jge outsl push jmp sbb mov mov stos jge sarl inc mov in push pop std sahf lods pop xchg mov pusha inc orb dec adc or lret pop dec test (bad) xor mov in jmp shufps mov sub repz or or imul movsb fisttp mov or (bad) sbb outsl das mov xchg mov mov cld (bad) movb scas mulb and inc sahf push and mov (bad) lock add sub jle sbb sarl mov int3 loopne (bad) mov and aas adc xchg push and lret jge xor lahf sub pop insb fistpll cmp sbb pop dec ds std insl cmpl mov jno mov (bad) cmp or jg pop sub cmp mov (bad) cmpsl add (bad) es aas mov pop pop sbb mov ljmp mov jmp adcl mov lahf loopne lods inc adc or mov mov push mov push les or dec in leave sarb sub mov test aas sahf adc fcoms dec jmp mov pop xchg mov movsl fwait cmp lds (bad) xchg cmp faddl adc adc lret push andb mov aam mov sub lret into mov movsl sbb pop lock cmp popa jge test sbb dec push dec sub pop ljmp sbb stos jnp xchg lods (bad) xor sub mov adc inc xor mov ret pusha xor push test add dec mov aas or stos jge rcrb or mov jl (bad) lods movsl xchg fldl jnp push jnp pop sub fimull dec lret push addr16 (bad) mov int or xchg aas cmp (bad) mov stos sti movsb cwtl sti (bad) xchg push dec xchg clc inc sub stos jb xchg inc (bad) jp std xchg loope cld mov shl sar in sarl (bad) pop mov xchg sub xorl iret mov roll mov shll (bad) dec cmp lret cld lods rorb and jnp inc mov int cmc addl inc dec (bad) sti or (bad) jl jl adc dec jne or cld mov (bad) jo and aas mov add cld fwait dec out add mov jge xchg inc push decb dec sub lods cmc cld or add pop push push rorl and mov sbb xor sbb dec mov mov and dec cmp jl inc mov mov mov rolb fbld jge les orl xor std sub test jl jnp ror pushf dec push mov loop cmp jge mov mov outsl dec test repz mov mov or mov add (bad) or (bad) loopne (bad) in out pop dec mov mov (bad) cld jae subb test pop lea jl jb xchg xchg je or mov xchg inc mov add rcll push or inc push add ljmp mov or xchg inc scas inc jge loope je cmovno adc lret mov xchg dec lea aas nop push add orl popl bound inc inc enter mov adc jg fnsave arpl jb ss dec stos xchg in inc or into les pushf sub movsb jno inc loope inc (bad) pop fwait pushf adc add add push dec inc cmpl call add xchg lret mov jmp push xchg xchg daa or test push push mov mov pop mov xor mov lret xorl jnp add inc mov cmp mov rorl mov xor adc add sti mov or daa sbb test cmp fcomp dec dec or popf or mov cmp adc inc sbb inc ds mov mov mov xchg mov and push mov mov outsb aaa add or insb xchg jbe or add sub fldpi inc pop fwait inc mov fwait (bad) stos imul std mov popf mov adc fist xorl pushf mov sub push movsb and cld cmc mov insb mov sub add std pop inc or and aas (bad) or sub test int3 pop ret mov adc fistl loope cld mov jnp cmc out andl (bad) mul dec in add mov xchg xchg int3 dec cltd call add lods jg fstpt push (bad) inc dec xchg inc push inc add adc inc cld mov mov sti add xchg (bad) jb inc jl push (bad) loop fsubrs mov scas mov and sbb pop xor popf fbld jbe jle std inc add pop mov movsl xchg xchg mov jno xchg incl pushf sahf pusha jecxz add jb out lss or test scas jg sbb sbbb aad adc pop sub movsl bound nop xchg loope jle cld insb sqrtps lret out mov push ret je andl xor (bad) loope jae ficomp test fs inc mov scas add mov btc insb fist jnp pop push cmp add jo idivl mov jnp scas xchg add incl or sub jg add cwtl out addl or push dec xchg ljmp add outsl ljmp add or adc adc das adc mov rolb orl inc insb sub add push lcall mov mov or or cmp orl cmp sti in pop dec push subl movsb xor jne jp (bad) xor enter mov ffreep lock adc pop loope aad sub jne mov cmc xor jne jns cmp (bad) inc cltd daa shll jp add mov ljmp daa (bad) imul lcall and stos and cltd iret (bad) mov jnp aaa mov xchg or sti pop jnp jnp,pn jle xchg xchg out lock sub add repnz pushf repz mov shll addl sti js push scas inc popf icebp cmp ret ss repnz (bad) push add add xor dec loopne sarb (bad) (bad) rcll inc int3 sub and dec mov adc fidivr pop mov ss stos dec jb or mov dec pop (bad) push push xchg popf jnp (bad) ja jo push cmpsl inc mov mov xor jne push adc ss lahf popa out xchg jg popa jmp cld jbe popa mov xor inc pop popa in sub add stos push xor in bound and xor mov dec fwait dec xchg imul mov xchg sbb fstl fsub fdivrl jb xchg adc in test stos (bad) jg push cmp mov jbe mov adc mov or mov icebp ret rorl jp aas cmp jae into or xor dec stos outsb in jae pop jl inc push das cmpsl pop adc cmp jbe ss cmp out ds das out lret xchg add scas daa (bad) int stos dec push cs cwtl mov lret xchg leave fisttpl or out insl test jbe push or out jb (bad) sti cmp sub ret adc adc nop lret int (bad) mov into mov xchg imul rol add mov and imul (bad) xchg cli xchg sar sarl mov int lret jl fwait aas in orb inc or cli pop or aas popf push jl or xorl jge bound pop inc dec mov decl aad (bad) and fst (bad) sti jg xchg (bad) adc jnp jl jge ret add jge xchg lret insb popf mov imul aas lcall cmp sub mov sbb aad je mov mov or push mov stos popf fnstsw out roll jge sahf inc lcall jge roll fs push jnp fildll pop jl adc jae mov xlat or jle add xchg xchg loop add xchg (bad) fldl cld cmpsb jl xchg sub jae mov mov dec aas test dec mov xorb xchg sti mov mov xor and js les pushf add add out cmpsl test out xorl xchg jle pop js push xchg nop decb adcl mov sti add sub lods sti leave in fisttpll std add mov mov jbe daa or add mov push mov pushf (bad) int3 in add (bad) pop jno popf jl jl test scas push xchg jnp imul test test (bad) xchg or incl in mov cmp sbb mov insl std jnp mov xchg xchg adc mov mov sbb add lods jae jg outsb mov xlat pop jl test inc test in sbb (bad) cld mov pop stos sbb mov xchg pop popf jg inc (bad) outsl add pop xchg mov xchg push test mov dec mov out addl test lret insb pushf mov jge jle xchg fwait lcall leave jmp add das dec incb mov fisttpll jg lods addl lods (bad) adcl test or jo cs int3 jnp decb addl mov loopne (bad) clc out mov or xchg test jnp push (bad) lock subl xchg cmp jg jg ja add bound sub pop orl cmc pop cmpsl jg insb sti jle inc lea xor sub jnp stc or sti insb mov jmp test jae jg out cld mov xchg pop jnp mov mov cmpsl orl jnp xchg cmc aad lahf xchg aaa insb sub xchg mov leave sbb ljmp push mov sti cmp or jl icebp add sub pop jnp test pop push sti cmp push (bad) or (bad) jle sbb cmp mov pop addr16 add sub lahf jnp out cmp mov jl ja (bad) sbb les add dec xchg add andl stos xchg mov add iret jge orl test test mov add cwtl xchg les add (bad) mov mov les jg mov lret mov mov add jle lret (bad) or xlat jle push jg jl (bad) (bad) push xchg inc sti leave dec pushf test sti xchg std test add subl mov (bad) cmpsb test mov mov ret pop sti outsb (bad) mov mov mov add push (bad) lods bound mov scas add or mov mov lahf inc or mov inc popf sub ret lea imul cld sti jge jnp jmp lea mov popf or je lods lea adc loope xor pop (bad) mov inc jg jmp inc adc mov jnp inc loope jnp jnp mov or test sti int cmp xchg sti (bad) out cltd push sti jl push mov adc mov and sub or out mov jnp or mov fcomi xchg mov fwait rcrl (bad) aam or sub mov aas scas push sti imul pop cmp out xchg test (bad) (bad) inc xchg add or fwait jge mov mov test cld xchg orl sarl xchg leave jno into jns fidiv mov call pop jnp gs mov nop cld or (bad) cld popf cmp xorl jl stos add push push xchg mov cld popf lods jl inc div mov jge lahf mov xchg mov or (bad) and or test insb popf fwait mov (bad) add jge (bad) rcl (bad) jae xchg or flds xchg addr16 imul (bad) cld jb cmpsb mov sti add add mov adc in jle adc xor (bad) aad int3 inc dec test cmp lret jg lcall leave pop or jmp or (bad) mov mov aam mov sarb inc inc inc fimull jns cmp add test (bad) jg (bad) fiadd mov aas pop or lods subl test or mov bound xchg jne xchg jge pop sbb sub imul xorb add add icebp call insl push test test sbb fwait push scas jno inc xchg mov mov test andl mov xchg mov (bad) fstpt sub nop jmp mov jge or mov push mov andl xchg scas sub scas jnp insl int3 fstpt mov cmp jnp scas std lahf inc mov jge mov (bad) out lea or and push scas fcmovb jle scas sub or ds stos add inc test dec (bad) (bad) inc inc (bad) in (bad) jge nop add dec add ret jo mov icebp sti leave pop ret pushf ja,pn out mov push inc sti jg jle lret outsb inc or out jle mov fstpt sti jl xchg xchg mov rcl add cmpsl add loopne (bad) stos (bad) insb add adc test inc mov sub pop xchg mov push jle enter cwtl or mov and add inc orb push add into xchg jge cmpl fwait in add sbbb add or cmp mov (bad) cmp pop mov cmp pop imul sti sbb sub into add cmp mov lds sub popa (bad) or cmp leave mov cmp mov leave pop xchg add add (bad) xchg jg mov test jl outsb ret data16 pop add add cmp pop test jge pushf push xchg jnp dec jg test xchg pop cld loopne jle lahf sbb jb adcl (bad) adc mov mov mov inc mov inc fadds inc rcrb pop daa dec mov jl stc inc or add pusha pop or in jmp jle (bad) jnp repz nop bound mov pop pop mov (bad) cld inc jg lds rcrb imul movsb push add inc fisttpll add es lea orl jl (bad) aas xor mov test (bad) imul xchg rol scas mov and out jnp mov pop jnp mov add mov mov add cmpsb in jnp inc roll inc push fwait mov mov fldenv mov push mov cmp addl pop add pop test jmp mov mov xchg mov pop jnp pop std ds mov lea sti imul xor mov cmp sbbl jnp add test stc add pop xchg popa xchg roll and adc (bad) mov sti inc jl ljmp mov mov push stc inc push sub fisttpl xchg rolb push (bad) sub sti ret mov mov mov mov fwait push ljmp (bad) scas cmp dec mov mov call dec xchg outsb sbb or mov or jne sub mov lods mov ss bound mov pop and adc fwait mov xchg cmp pop or subb scas loope mov add pop sbb lcall inc jl add jns mov mov push aas adc lock call rolb sub xchg mov (bad) cmp orl cmc jl mov cmp cmp mov mov in mov cld (bad) cmp jl push arpl ja imul les cmp fwait sahf pop lock aad outsl sbb mov xchg mov inc dec ljmp push cs pop insl (bad) mov jmp mov test or mov sbb pop fdivs stos test cmp leave jl dec add or pop inc pop imul jnp hlt mov add xchg adc int3 and int cmpsb orl cld cmp pop hlt test cmp leave aas push dec stos stos and mov jl pop lea lods sbb cmp rcr in cmp std xor sub and stos pop push insl int3 jge subl scas (bad) mov ficomp push sbb pushf mov sub jmp fistpl jle jle mov jge dec iret nop add mov inc call setbe ja das mov lods pop push outsl xchg mov nop push mov rorb add dec mov bound push or mov pop rcll inc adc mov xor push mov or pop mov xchg push adc and out jb adcb rorl mov (bad) xor jns subl jecxz sahf hlt test cmove adc cmpsl mov xor ljmp xor (bad) or jp stc pop inc test xchg aad inc mov aam movsb daa xchg inc les test enter mov mov cli dec mov mov hlt stc xchg imul lret scas sbb int push push (bad) fucomi dec mov lds cmp insb adc mov js cltd sbb mov scas lahf into incl std decb ds dec mov mov lahf imul and mov aam je aad push cmc dec ds mov jg nop adc (bad) jo or sbb mov mov adc inc sbb lds jno (bad) jo jl xor jmp mov mov fisubrl loope icebp int3 add jl adc and insl inc sbb or (bad) jno addl push mov repz mov xor aaa pop repnz mov pop repz pop jl xor mov es js out jo sub jecxz cmp mov xchg (bad) in ret xor cmpsb cmp jecxz repz repz lods push add (bad) out adc pop scas and test xor lea les dec arpl loop pop repz pop movsb mov hlt repz push in jns xchg aam pop scas in (bad) popa mov mov adc leave or fwait xor pop sub sub ror jns adc cmpsl pop sub mov test sbbl shll movsl leave mov mov push cmp lds mov test push cmc adc cmp add jo xchg js outsb push xor xor scas in push (bad) mov test push leave sub fisttp jne push push and inc mov test or mov push mov pop imul in push rorb testb push adc test cmpsb test es fnstcw cmc icebp ss test push test or dec pop push xchg push lret jbe pop cmp mov mov mov enter loop out in push mov push negb (bad) lock in ljmp test or xor push pop jmp rcrb arpl dec pop and leave inc or push aaa rcrb xchg cs pop incb pop xchg xchg mov test addr16 leave dec or push ja push es mov arpl mov test test leave hlt or xchg push push pop mov maxps add call pushf push clc adc je fstps or mov sbb mov test leave dec or mov cli pop ds (bad) pop xlat mov pop dec mov mov test inc leave test mov and push mov mov pop push arpl mov cltd (bad) mov test test aaa dec dec push mov test lods leave rcrb arpl mov fsts mov mov test inc leave push or dec push stc pusha push fs push push cs pop dec sbb inc arpl mov sub mov mov test cmp leave les test mov dec outsl push arpl inc pop sbb pop jecxz (bad) mov imul sbb xchg sbb sub or leave add fmuls push stos pop push and out stos mov idivb pop pop lret in cltd mov fiaddl mov mov test ljmp repz mov inc in in cltd xchg sub loopne sbbl outsb ret mov pop cmp sub repz cmp in xchg out ss lret dec loope test mov inc add cmp push push je clc repz (bad) in xchg das xchg scas ja fs xchg shrl xchg fimul pop dec sub in out (bad) mov lea jl insb xor dec test sub xchg or cld mov int3 cmp rorl pop in jnp or jae sub sbb or sti js jmp pop jmp lret cmp jl test fstp xor scas lds stos or and jns jp fwait mov mov jg push icebp (bad) mov adc lahf cmpxchg sbb sti and adc push mov notl sub jae leave call dec stos loope cmp sti mov sbb push jmp mov add outsb into pusha add mov out out sbb adc (bad) xchg add jmp ds jle mov std xchg test xchg lret jp cmpsb mov mov cltd ds and or ret pop iret or std pop push jg cld subb inc sbb jge jg cs push (bad) incl cld sti jl mov das cld popf mov les xchg leave xor xchg test and jne mov pop arpl andl mov jl cmc test or sbb xchg inc aas lret or xchg xchg or xchg mov push test std movl mov push mov sub jnp jo xor clc jno mov inc mov lds int mov dec popa pusha iret addr16 (bad) popa iret jle,pn iret hlt stc jge push jae jecxz and test or xor or stos pop mov mov test (bad) cmp xchg lret rcrb (bad) sbb aas mov push iret add lods or in jmp cmp es or (bad) push lret mov or aam shll pop lds insb dec adc mov aas mov or xchg (bad) jmp mov stc xchg dec jbe sarl mov xchg push mov ret push enter cmp pop push nop (bad) pop lret mov lods xchg sbb shll outsl inc mov (bad) dec imul dec sti push mov jl cs jnp aas mov popl movsl adc enter rorl sbb sub add lahf call jle inc inc mov inc mov ja call cwtl xor push xchg mov fcoml mov lea aam es aad push fs fwait std mov add jo sbb out mov inc jno mov xchg xchg mov loope orl cmp mov rcll out aad jbe scas enter movsl pop jmp mov arpl pop cltd mov dec and dec push sti mov inc rcll nop xor xchg aad or xchg mov aad sub lret mov (bad) imul sbb negb inc add dec js pop mov int3 mov aas mov cmp xchg cmpsb dec addr16 push add jge enter js clc aam (bad) mov cwtl lds lret and sbb fisttp push subb mov mov jo aas sbb ds xchg lret jg (bad) fwait in jnp sub mov int add mov (bad) jno or loope je xchg mov sbb add sbb or movb mov xchg dec test inc push mov push inc xchg mov mov and test xchg mov push out fsubrs jne leave push int3 mov cmp pushf mov mov ret cs jmp push dec add ja leave push jmp or fs push mov mov repz cmpsl fistl push mov mov (bad) xchg imul or mov popa loop enter sub sub icebp jno push xchg sbb data16 test call xchg (bad) cmpsl or outsl lcall mov pop fcmovnbe outsb das fisub dec or sub imul stos xchg loop push js dec icebp add adc mov inc mov aaa sbb loope inc test add inc stos out sub popf insl (bad) stos shlb xlat std or movsb mov (bad) sub cmc mov cmpsl mov (bad) xor gs mov mov mov sbb ljmp icebp jmp lods xor jbe mov gs out cmp test dec data16 inc lea outsb sub repz lcall mov insb push fsubl xchg xor push ljmp out idiv jmp and jp cs inc sub (bad) jae mov aas xchg xlat mov add test clc (bad) mov pop cmpsl mov icebp cmc cli lret faddl push cmp popa mov and mov loope js mov or mov inc adc jb ja out sbb jge (bad) stos push repz mov in mov mov test clc push or jbe sbb mov pop xchg (bad) fwait mov push les sub xchg arpl mov js mov dec gs test mov inc stos fidivr jge scas incl sub (bad) jg lret jle mov (bad) pushf sti mov mov popa mov cmp push jmp mov pop add jle je mov inc mov roll sarb mov clc inc cmp or mov ja pop inc clc mov sarl jle mov xchg test pop std add add mov add mov mov ror (bad) ror mov ret inc aas inc cmp cmp inc dec mov dec fwait mov movsl mov test mov pop daa sbb sbb and push mov and fninit (bad) fisttpll in call ljmp gs imul bound xchg (bad) xchg lea xchg nop cwtl mov mov lcall adc sbb push adc xlat int rorl fmul (bad) rorb push dec push push mov push push pop dec push push mov mov mov mov dec lods mov mov aaa sub mov cmp xor jmp repz imul cmc icebp stc in mov lock out div cli imul jno insb mov jbe xchg jnp addl jge test mov mov ret push incl pop cld add mov add or cmp inc dec mov inc inc dec mov nop xchg cwtl mov xchg xchg lcall rcl fmuls into rcl fimull or adc push adc adc mov mov pop dec push push pop mov push pop fwait lahf mov movsb test mov mov jecxz mov loopne call mov loop ljmp and sbb push and sub arpl pop pusha fs mov pushw scas mov mov mov mov out repz lret in lock clc in (bad) jb out repnz cli sub xor sub mov sub xor jae insb jo je insl jno jns jb jg mov jge jg addl subb mov xchg xchg xchg mov fwait pushf popf mov mov cmpsl test stos stos lods lods mov mov mov mov mov mov rol (bad) lds lret int into iret rcl rcl aam pop (bad) xlat jo fcmovu (bad) (bad) mov loope jecxz in out call in out out mov icebp repnz cmc div mov stc cli sti cld std (bad) decl add push pop mov or or adc adc sbb sbb lret and sub das xor xor aaa cmp cmp aas inc inc inc mov inc inc inc dec dec dec mov dec dec dec push push push mov push push push pop pop pop mov pop pop pop pusha popa bound addr16 insb insl outsb outsl jo jb jae jne ja jns aam test add mov adc es add cmp fild insb addl adc cmpsb pop imul xor sbb mov xor paddq jle jno (bad) cld (bad) sbb (bad) (bad) or scas fild jmp pop sbbb (bad) jbe jle pusha (bad) popa or jo pushf test mov sti mov jge sub cmp pop stos jmp (bad) sarb dec int shlb rcl pop aad mov xchg cmp icebp add jl test incb inc pop jno andl mov fbstp or jmp sub add jno cmpsb and out dec and (bad) push out popf jl movsl iret or pushf mov mov sarl sti sbb std bts pop mov add inc aad mov lods popf or (bad) std adc or movsb mov inc mov inc aam add or adc sbb adc push test rclb int cmp xchg cs mov sahf insb or push xchg ret into xchg or popf dec mov pushf pop mov jle mov adc jp ljmp pop popf or mov (bad) ljmp or or adc jle xlat add das mov sahf mov add xor mov iret sub inc cld (bad) cmp or shlb pushf in cmp (bad) cld cmp add sbb std mov jle push cmp mov mov push inc add pushf arpl mov jnp (bad) cmp mov jns call daa jno dec xchg gs lret mov pop mov mov jbe xchg mov jl xor nop cltd mov mov cwtl mov mov dec stos mov mov mov aas inc inc mov outsl jbe mov xchg lods mov insb js test mov mov mov sti pop mov or aaa mov cmp imul cli add mov add mov mov xor out div std or mov sub in stc in clc add vpinsrw xor hlt lock cmpsl mov push xchg mov pop mov arpl bound push dec push push popf test imul dec pop dec pop movsl mov popa fs xchg xchg mov sbb mov sub out ljmp xlat into fisubl pop mov and (bad) loop jp (bad) rcrb fucomp fsubr or int int3 fsubs in in adc aad aam mov adc inc and push je clc jns jle push sti sbb dec push sti mov dec icebp inc pop mov fldlg2 dec mov sub scas pushl mov pushf mov push inc mov xchg fwait stos stos pop out mov mov mov (bad) dec or jnp mov adc add mov pushf fstpt jnp cld mov pushf xor (bad) enter pushf fisttpl dec lds mov (bad) enter test inc (bad) dec fisubrl (bad) inc jnp (bad) pushf leave or mov lret sub sbb mov (bad) or pushf inc mov cmp inc mov pushf inc mov fwait popf mov popf pushf movsl mov pushf popf movsb mov pushf cmpsb mov sbb adc ljmp xchg sbb and and adc pushf es fistpl adc pushf in loope jmp mov pushf out loop ljmp adc gs pop popf fs pushf mov push mov adc lcall mov pushf xchg mov or adc lcall xchg or adc adc adc pushf push mov lret popf sarl pushf aad sar fsts fcoms into pushf (bad) mov dec popf push mov pushf push mov dec popf push mov pushf push mov lods cmpsl ret sti mov cmpsb mov sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb add pop or popf jnp jg adc (bad) std xchg add adc pushf mov xchg rcrl ret sahf (bad) mov scas mov mov mov mov aas daa inc cld or mov pushf popf sbb pushf pop mov mov fwait int3 popf or dec stos adc jmp in xchg mov stc call sti arpl or cmp dec jb pop push imul inc inc lods adc in cmp jae or sbb xchg sub cmp sbb push mov lds (bad) or sbb push sbb dec sbb jo mov xchg fsubrl stos or xor out inc out adc dec inc adc mov mov aas jne push inc (bad) sbb or test decb inc cmp loopne fnstcw rolb stos (bad) popl insb rorb repz mov xchg mov mov mov lea pop lahf testl je jno pop lahf js inc shll sbb jbe test mov test es xor and repnz mov or addr16 out cs jnp setge jnp lods dec mov out pop mov dec aas xchg sbb cld test mov jnp adc les lods xchg mov aam jg xchg cmc pop xchg (bad) inc dec adc sub add jg or jno cmp shrl cmc test fildll mov push insb cmpb pop xchg cmp iret cld dec insb pop cmp lret (bad) loop loopne adc inc test repz repnz out jg std ffreep sti sahf jge mov orl xchg dec jbe (bad) jmp (bad) xlat or push xchg mov add mov xlat fildll jnp or xchg or xor xor loopne fwait jge xor stos mov retw mov cmc cmp xchg cmpsb in mov es jnp dec jmp in mov xchg inc popf testb pop sub movsl cld (bad) jle mov jne xchg mov pop fildll mov add mov (bad) clc lret movsl sub jle int pop lock pmaxub fwait test iret or dec cld fidivrl jnp mov sti sub mov insl ret lods add in xchg cld scas pop jmp ret sbbl not cmpsl cmpsb pop scas (bad) or pop out rcrl (bad) sti das jge or gs in xor mov and jge or std or mov jle xchg add cli mov sbb incb es je sti gs loop jno adc bound add pop and cmpsb xchg sbbl mov vmovlpd mov inc add ret pop adc jb sbb add scas dec mov (bad) fidivrl mov sub pop adc (bad) popf jg out add outsl xchg jl lock cmpl out rcll scas repz add inc les std mov mov lods call mov outsl jl jg pop fcmovb ds flds (bad) std mov xchg mov mov mov jl lahf mov jle sarl sahf add or push push les fdivr xchg adc repnz mov je or js jg nop adc test jae call aas or andb add xchg xchg movsl adc addl lcall lret adc pushf xor mov xchg push jnp rcrl jle inc adc mov or pushf xchg sti push xchg adc lea out lcall lcall xor lcall add jle sti (bad) mov pop jnp jnp insl pop xchg dec mov add shll stc outsl or mov jnp jle fiadd add (bad) test jno inc mov in xorl cmp test mov push ja mov loope cld popf js jnp adcl mov or lock and iret idivl mov cmp leave test inc pushf adc outsb ja xchg xor leave cmp loop mov mov adcl stos adc scas jnp xchg decb or xchg sti mov popa sti jnp cmpsb bswap lds std pop scas pop jle test or (bad) cpuid insl push sbb cld cmpsb into insb cmpl outsb (bad) out sub flds jge add lahf and xor xchg xlat inc add fucom mov lret mov imul andl xchg insl inc cld fistl xlat pushf pop insb movsb mov jle add (bad) mov int3 jge lods rclb mov sbb sbb insl mov mov xor daa lcall movsb rolb leave pop xchg cmp sub (bad) loope outsl inc dec rcl es movsl mov shrl scas rclb es or dec jge fildll sbb lea outsl daa jbe or cmp (bad) xor add mov push mov mov sub or dec push jg sbb mov xor jns popa es and mov adc inc fwait jl stos jg aas (bad) adc andb mov dec icebp aas stos jmp cs or shrb das add push into add push jg call jg adc int stos push mov mov cld fistpll scas jnp lcall outsl xlat outsl dec cmpsl cmp lahf fdivp mov adc cmpsb push sbb loop inc adc pop mov pop push (bad) aas jnp adc popf xchg ret in imul add xor mov mov add mov dec or xchg movsl inc js inc cmc add xor pop add aaa add add in enter xchg je orl adc mov mov xor gs jg popf in aam sti add cmc pop cmovp or insl add insl insb cmc dec addb adc rorl insl popf aad movsl lcall cmc lea adc pushf xchg in xchg lret add xchg and pop dec addl sub inc (bad) jle out pop jp jnp mov or fldl2e jnp,pt adc sbb xor ljmp mov jp (bad) fcmovb jns (bad) cmp sbb sub js test adc nop mov (bad) stos add popf or mov loopne maxps mov popf mov mov dec sti (bad) imul mov pushf xchg lods push (bad) std (bad) popl or cltd mov les mov xchg jge mov mov xchg shl (bad) pop cs icebp dec mov pop mov cmp jg (bad) rclb add stc cmp lahf loope sub jbe (bad) adc cmpl roll xchg test xchg mov stc push js nop or lahf std (bad) or mov insb push dec ret jg ss sub or fisttp or fisttpl pop add pop cmc (bad) mov jl je lret repnz inc jp fistl xchg dec sub mov or loopne add adc stc cmc out xchg mov out jae mov movsl or (bad) (bad) sti mov pushf mov xchg pushf jbe inc gs inc std inc xchg loop xor dec xchg stos in add in aaa add rcrb imul adc sub dec push cmp cmpsl push inc xchg mov xchg leave add cmp xlat jg cmp adcl jge jnp add leave adc decl pusha inc pop sti xchg fcoml xchg add call in xchg std xchg lods mov add sbb leave lret jge push orl push addl pop (bad) pop jge adc or pusha dec jbe add mov jg mov cmp push mov fidiv inc icebp mov scas mov adc add xchg sub (bad) jmp cmpsb inc shrl inc push mov ja pushf sti int int das lahf jl jg adc add test dec xchg addl test dec xchg add std pusha dec rcll adc xor adc or mov mov mov sti dec call sti into (bad) aam push popf and push jmp mov pusha jmp jb rorb mov mov jo aad cli or std mov movb in mov cld stos cld mov push or or (bad) lret cli jp sub mov jle roll xor arpl jnp mov add cmpl dec adc jge mov mov dec add sub popf add jge adc jg xchg add xchg movsl out stc enter scas out repnz inc (bad) or add popf js cmp mov mov and jmp xchg fxch xor (bad) hlt inc sahf cld push or addr16 call incb popf or mov (bad) popf dec mov jmp cmp lahf or inc dec xchg jle mov pop inc adc pop or mov std sub lods adc pushf les mov xor pop xchg inc jg jl cld and int cmpsb adc int3 (bad) lea cmpsb mov inc les aad ret sub mov push popf (bad) cmp jge stc (bad) jl scas lcallw mov sub push lods mov mov or jae fdivrs jle add mov sbb inc fild mov shr dec jmp xchg push idivl dec cmp movsl mov mov inc push xchg pop maxps or jo jnp subb nop int jl fimul add or jl roll aam mov xor jo xchg repz das jnp cli mov lahf (bad) call rclb xchg cld jecxz lahf (bad) imul (bad) loope in (bad) mov add in orb daa (bad) or mov xlat xor ja or mov test and mov cld cmpsb or imul subb dec pop sarl mov jnp fwait popf (bad) sbb inc addr16 mov pop (bad) mov pushf push mov mov adc mov (bad) add xchg sti push lea mov jge xchg add fnstsw iret enter or jge push ss lea (bad) push mov sti enter pop sti rcll sub getsec xchg sbb inc jnp push scas (bad) adc sahf mov or jmp push xchg call inc jl jbe cld jecxz int cltd inc fcoms lods mov sti lret fimul or or add pop mov pop fwait mov jnp jp add sbb jae clc aam pop push aas add mov pop pop pop cmpl xchg popf add (bad) adc cmp (bad) stc mov (bad) fmull push inc les add scas push mov popf or iret hlt xchg jg jl loope lea or nop xchg lock popa stos cld mov add or (bad) jl cwtl ret rol icebp lea nop les es xchg or mov or or and shr mov adc xchg mov push jl enter add or ror add rep jbe xor cmp iret fist mov add int3 (bad) jnp xor test pop mov loopne inc jne pop lea push mov xchg repz icebp adc jno mov ret cmc sar or push or orl mov jmp inc pop or and adc or lods mov (bad) in adc fist sbb imul fdivrs add mov jl scas or outsl popf or ret jmp cmp addl (bad) in (bad) add mov lahf (bad) mov addr16 mov arpl arpl xor mov or sahf fcmovne mov mov data16 out cmp popa cmp cmp cmp in mov push mov mov imul loop mov mov push lock mov adc into cmp add sahf aad popf jecxz xchg mov movl mov xor lahf cmpsl orb fs push cmp or cmpsl pushf ds push cld orb rclb jp sbb ficomp cmpsl mov shll sbb movsl inc cmp dec adc inc int3 scas dec test mov mov pushf fimull mov inc pop es inc dec push cmp lods add cmp dec mov and inc xchg push popf mov cmp rolb or in inc adc pop or adc (bad) jge or or xchg enter std mov mov jo daa cmpb sahf jnp sti test mov add add std out cmp lcall ret popl lods call call inc nop std pop jmp add add pop lcall cltd test pop lret mov push mov lret mov loop (bad) push push mov test dec jle stos call cltd sbb in mov addr16 iret (bad) jl mov push jo imul sarb jbe add sub mov jecxz int3 mov icebp aam pop jno (bad) inc pop add popa rol (bad) or test jp or (bad) stos shlb dec sub rorb xchg adc in ret dec mov shr mov rolb fnsave addr16 dec or xchg add add (bad) (bad) mov (bad) jl add decl test repnz (bad) stos pop jo out aas outsl lahf (bad) sbb cmp (bad) cmc mov loopne mov mov inc cmp inc dec pop pop adc inc icebp ret mov pushf ljmp inc mov (bad) stos std outsl dec (bad) lahf fstpl (bad) out dec jl xchg dec cs in push lret mov mov (bad) popa jno (bad) inc sbb add scas loope inc xchg repnz push jo std or imul mov loop pop push test in mov jmp mov dec jo loopne add insl test xchg adc push adc pop cmpl (bad) (bad) jbe loop cmp xchg mov fadds (bad) out sbb inc xor or jge cld dec jecxz fldcw (bad) mov xor inc scas fdivrs int3 push outsb jg push lret mov xor mov sbbb jl nop loope and icebp mov sub mov and jns xor in xchg stc aas xor xchg push test mov in pushf iret lods imul push mov dec fwait mov cltd dec mov (bad) jmp mov mov xchg pop mov or roll ss das iret cmp jmp (bad) fldenv outsb jb into cmpsl add pop pop jle cmp jb and sti pop jle mov jno fdivrl adc sti mov inc mov sub jle jo adc jne lods sub rol pop outsb loope jg in jnp dec sbb jl xchg cmp pop ret inc out fisubr jnp xchg mov sub jnp lahf cmp jmp movsl insl sti cmpsl out mov sti rcrl repnz mov dec push jl pop ds test sti push or aaa movsb jnp adc dec cmp pop std scas mov inc aad (bad) sbb cld mov xor mov mov inc or jmp jmp fwait inc mov dec into jge xchg (bad) jmp jmp mov ja (bad) neg dec in pop addb stos (bad) pushf xor mov ds or xchg mov fbld lret jo into mov inc cmpl cmp (bad) icebp jp mov dec xchg rolb xchg vmread xor imul push pop fbld imul rcll mov loop (bad) pushf mov fisubr and aas push add sub pushf cmp mov adc insb mov loop jle lahf aaa jnp mov adcl mov ljmp jle in addr16 and loope or hlt jl test gs js xor loope xor dec mov scas bound cmpsl xorl cmovl insl outsl pop cmp inc clc xor lcall lret add mov add paddw add mov shrb add xor outsl push or sbb adc pushf dec rorb aad push lahf xchg sbb rcll jg adc jnp (bad) and xorl mov imul xorl in std iret add es sti xor adc pushf adc mov fwait adc and push iret push and das push and aas out xor jnp inc and xor mov popf pop adc sar sti icebp xchg or mov mov fs in adc mov adc mov cmp inc (bad) pop in adc mov inc or cmpl xor (bad) jg (bad) daa mov shl mov (bad) aam (bad) enter or sti out test lods cmp pop popl icebp mov repz (bad) mov (bad) xchg fdivs bound push sub or or popf jl roll sub xchg fsubrl cmp jg mov jne mov jl aas outsl pop sub push lods ja push and push loopne jnp test (bad) pop mov mov pop fwait mov mov cmp cmp les inc sbb mov cwtl push xchg (bad) jnp inc out mov xor jns jnp ret pop lcall or loopne jnp fwait jle lods xor jg jl nop ja mov (bad) mov stos (bad) ficomp push jge mov sbb gs jle out jg es push pushf jl ret xor mov addb out push mov nop test lahf cwtl and inc push jnp ret outsl jnp out std push mov aas xchg push mov repz fwait outsb lea lret bound cmp or leave sbb sub cmp dec bound cmpl insb sbbl (bad) int3 sbb imul bound sbbl add test sar orl leave stos outsb lea (bad) jmp pop dec shrl add ss fldcw lea mov in xchg xchg mov pop or pop movsl enter cld xchg aas (bad) aas mov add lret aas or mov jg fwait add xorl pop jge cld or add push jg mov pop jg test ret push push fwait mov outsl mov mov sti xchg pop mov (bad) test jle scas mov mov cmc jg xorl or test fisttp mov incl jle or add call lahf andb mov add lods test mov add mov or (bad) popf leave or cld outsl add jl xor ret (bad) mov fwait mov pop jg xorl in lcall int3 xlat or fwait aas mov xchg (bad) cld ret jge adc mov jae sar mov roll adcl mov int push (bad) cmpsl popf sti rorb or mov ret add mov add lcall add (bad) cmc xchg test sti loop mov jl jae mov xchg add sub mov out jnp add push add aas pop mov sbbl jge and int ret inc xorl or sbb mov mov stos add xchg add mov roll add or cmpl mov jnp lea xchg add fistpl or mov jl push cmpsl (bad) adc xchg mov cmc jg xorl add daa or fild mov (bad) fldl or and add add adc mov inc pop andb dec loopne jg mov (bad) jg test into mov pop jg sbb jg,pn fbstp cltd cld xor std in decl jle sti add push or addr16 jg bound sub mov add iret xchg xor adc aas mov cltd cld inc fldl cltd jge pop (bad) mov stos out cld out (bad) add inc ljmp jg push int3 mov jg mov xchg decl sti push mov cmpl push dec or pop rolb mov inc adcl inc iret test mov pop push testb mov adc std outsb mov mov std scas mov dec bound lds jg mov jg dec push push leave xchg mov pop jg sti jb mov sbb jg,pn add subl or mov jb sub jle or mov mov sti or inc and jg dec loopne addb jg dec sbbl or or cwtl rorl test jnp mov mov jg loope cltd add mov std scas sbb add or jg (bad) jle xchg mov in mov adcl test push jg or inc add mov push sub or dec fdivl cmpsl or sub sub sub lret mov push add push mov mov jg lret mov je add ret dec lods jl pop mov test or sahf xchg orl int3 test lret push mov jle mov in shl mov or xchg std psrlq cmpl jg add adcl test sbbb (bad) cmp xchg pop mov or test or mov icebp call and jl loopne mov xlat dec mov jmp or xchg fwait mov pop add andl repz (bad) repz mov cmc add xchg add xchg mov cmc jg or mov mov (bad) pop pop pushf std add or jle adc jle out sti xlat add add push xlat add push adc test pop mov jg mov or imul jge pop add adcb fwait mov insl push push mov rcl test fwait ds adc add insl inc mov jnp ds mov mov out in les mov (bad) and mov add mov xchg xchg mov xchg xor jnp mov or mov sub xchg (bad) sbb mov add xchg or in out mov xor jg mov in add inc rcl cld push mov mov mov lret jnp sub std mov jge mov jno jg add mov arpl xchg roll (bad) pop mov test cmpsb add les std xchg mov or add stos adc sub jl mov fisubr arpl jg and loopne jnp push ret xchg or inc aas xchg jg xchg pop push (bad) mov sub sbbl sbb sub or std mov sti test out cmp jae mov jge push xchg mov std lods add mov addl dec repz inc jge xchg mov repz orl pop jge out sbbl sbb add xchg cmp test mov pop (bad) pop ljmp leave cmp lahf pushf jmp dec sahf sti add mov cmp (bad) cmp test popf xchg arpl push fisttp lcall jnp shrb fnstsw sti les shll sahf (bad) sar cmpl push xlat (bad) cmp test out xchg xchg fild stos mov add in lock andl std xchg incb arpl and push and andb adc jl les pop test test pop or xchg es jle std adc sub jnp (bad) jg leave jge add jg test xor andl mov test roll add dec mov decl lods jle mov and lcall and sar sahf sti jl std cmp xor (bad) (bad) xchg test jge add mov add in out sbbl push (bad) push aas sti xchg push aam incb arpl push pop sti or jnp stos test stos imull adc test std hlt out mov jg jae pushf mov movsl popf mov pushfw fstpt sub adc pushf sbb lcall dec pop adc ds jnp add pushf ret jmp mov pushf inc mov cld popf pop mov pushf leave mov cmp jle dec adc pop mov incl ret jle mov (bad) incb push jge sbbb popf (bad) xchg mov test inc add inc add add add add inc add inc lods fcmovnu pop mov pop jge pop pop lods pop aas lods pop and loop pop ret lods pop movsb lods pop test inc lods pop daa lods pop or lret fwait ljmp out mov pushf (bad) mov pusha loopne mov mov pop and in lods jnp das mov loopne test pusha iret add and jne inc inc test mov push dec roll out lahf mov mov and xchg add xchg std aam mov or rorl add mov (bad) and pop jge sti iret incb mov lcall add call test addl push inc push xchg stos std and (bad) aaa cld ret mov pop decl adc rcll jnp mov cmp loopne add adc cltd jge cld cs and (bad) aaa mov add cltd lcall lcall in xchg jnp sarl xchg cmp adc push mov and xchg add mov mov bound or lahf (bad) push outsl std jl lods (bad) hlt lahf daa or sbb sub mov lods mov mov mov xlat stos jnp or call xchg loop cld (bad) in iret adc inc lcall cld jne scas add fs sbb add std daa mov sub or (bad) cld or add cwtl jg jle std test sti or shrl std push add xchg adc push aas std xlat adc pushf xchg sti popf jmp inc or jnp xlat jl sti std push cld mov dec rorl ljmp sbb sahf sti orl arpl cltd test mov and std call pop xchg rolb xor pushf sti dec adc cmp or bound dec mov jl xor (bad) mov add pop (bad) push adc test sub inc xchg mov sti cwtl movsl sub jnp pop add rcrl cld push mov outsl mov incl pop subl pop push push push mov lods mov push jg pop cmp scas test jge (bad) jle jg mov push or xor cmp fwait mov or mov scas scas sahf or repnz push xorb in xchg lcall mov and call or cmp and jmp xchg or xorl arpl inc jle jge aad push call (bad) call (bad) push mov xchg andl addr16 pop out cltd test mov les cmpsb or addl or jno test xorl add mov mov sbb add xor scas mov jno mov fs mov std mov (bad) in mov sti popf call mov and fild pushf add pop add addl push cmpsb or jle xchg cmp cld add std jle test incl push (bad) adc scas cmp arpl adc orl jge push lods push fstpl adc add scas icebp in fist push and add or and pop test adc ret push sub lods loope jl mov (bad) jl (bad) jge add xor out std sti andb xchg add std daa addb add cmp lock push lea adc add mov sbb mov xor pushf call std xchg xchg iret orl mov xor xchg sbbb inc jnp push pop fbstp popf mov jg xchg jl jle std btc push add add fldl add lcall xchg call xchg jecxz popf lods sti push addl add subl jle or mov push or xchg pop jno jge rorl gs jnp stos jle addl pop mov add lret push popa orb inc or test xchg or add lahf jne mov or cwtl inc xor add fcmovnu mov sub (bad) add mov mov popf jmp add adc lcall xchg adc adc mov (bad) popf imul mov cltd popf lods mov pushf int3 popf fwait jmp fdivr dec xchg in popf cld sbb mov in xchg jae ja pop lea scas ds add test lea adc inc xchg int jne frstor adc pushf xlat mov or jmp mov dec jb sti pop adc jge std popf mov scas clts out cld xchg out or xchg jnp mov add xchg lcall cld xor cld adc cld xlat lcall cld jns cld pop lcall fistpll in fistpll into fistpll scas fistpll nop fistpll jo ds fistpll xor ds mov cmpsb cmpsb out sbb add out negl idiv xor loopne jg jnp std movsl add cmpl xchg jle stos xchg pop inc andb mov and mul adc add lods mov cmpl xor adc jge test std xchg add repz (bad) inc mov xchg add add or jg mov push xor repz addl xchg dec xchg mov mov cmp or mov ds add sahf mov mov mov mov mov mov mov xchg jae mov mov test (bad) xor call add add pop add or push pop test adc jle lret lea mov stos test add sti daa push cld roll leave mov nop or add lcall xchg jl std in jno mov (bad) xlat or add add jge add leave arpl (bad) sahf cld (bad) adc jbe or cmp arpl mov lret pushf jnp mov push cmpsl jge mov das jge jg jg add xchg (bad) inc andl out subl leave test or xchg sti xchg add std push dec out mov add jnp adc jge adc add pop orb add mov sub cmpl add test es test adc and daa xchg sarl mov lcall jle jnp jmp lods cmc test xchg or repz dec out (bad) popf stos mov mov mov add sbb incb (bad) data16 jnp mov xchg mov mov cmp or leave xchg (bad) push out lahf ret movsb mov pop lcall lea mov jl add add dec xchg mov push jnp movsb jge,pt inc lods and pop addl iret sub std orl cmpsl (bad) push mov test ja pushf sub sbb leave leave xorb or test roll or mov or int3 data16 (bad) jg,pt xor and out sti loope jge ja pop mov inc inc jnp in mov jnp mov jl jl jnp in mov mov test xchg std xchg std inc mov xchg jg xchg lods pop lods add jl fwait adc mov push push test test xchg daa pop jge (bad) sub mov or sbb add lods jnp pop loopne mov jle jle mov ret cld xchg xor xchg daa add icebp mov pop mov roll (bad) jge test std fild in pop push or push lods int3 mov das std mov ret (bad) and daa jle sar sarb pop scas mov lcall mov lcall mov cmc pop inc jnp lcall jge cwtl pushf mov js,pt inc add cld cmp ds fistpll int inc jl lcall cld push lcall cld repz add mov test cld add cld xchg lcall cld cmp cwtl in cld int3 lcall cld outsb lcall cld adc rcrl xchg lcall cld aaa lcall scas push ret sti (bad) popa aas dec paddw cmp push jge jl sub int mov std lods add subl lods or test jnp push xchg xchg incb xchg std flds or jl adc jl dec mov daa jle rcrl xchg jnp or add (bad) xchg add add mov daa xor (bad) mov xor jmp pop std in in jge cld test inc (bad) add out cmpsl test mov std call or adc std adc sub jnp dec mov sbb (bad) adc loopne jge jg add add add add inc (bad) arpl xor jle inc lcall push decl cmpsb xchg cwtl sti sub jnp (bad) xor iret pop cmpsl cld pop mov test inc lods or out and cmpsb sti xchg (bad) pop or add add mov mov jmp cmp sysret or aam std or jl xor sub add jnp jmp addl (bad) mov (bad) (bad) (bad) fist lret add loopne jge test std fild pop push or and jg ds decb cmp push std sarl mov (bad) addl sub addl push out xchg test push jge or xchg or add fbstp test jle std adc ss push fs lcall dec mov je jnp std add push jg andl or jl xchg arpl in lods cld inc mov pop cmp jle jl fild stos jle fild pushf push out xchg (bad) jle add sbbl adc add push push xchg std xchg jge mov xchg add insb pop lods (bad) adc adc movsb sbb orb outsl add aam std inc test add push xchg fldt or mov mov push mov or mov iret mov jg jge jae mov mov mov adc (bad) lock (bad) jno or add roll leave pop mov add xchg mov or imul idivl cld mov jl fstpt mov out sti jg and std xchg orl or lock lods add add xchg xchg adc test iret sti adc insb dec adc xor out cwtl mov cwtl popa in jnp mov sbb (bad) jg jge jge icebp jnp add inc jg add push inc in fisttp stos test add push dec arpl mov mov inc cmp inc adc jnp mov jl add jl jge xchg lret sbb or incl add cld mov decl ret leave popa pushf add std adc add (bad) xlat repz jnp adc hlt lods push push arpl (bad) xchg mov jge mov push push push mov cmp cld fsubr jnp stos jle cmpl stos sub inc stos push out addl lcall jge pop inc adc sub xchg (bad) sub leave (bad) lods je ret add bound call mov add int addl pop subb pop mov std xchg jnp sbb add clc repz xchg nop and mov add repz outsl inc int or xchg add mov ds or out or push mov int mov (bad) leave subl sub jnp aas cs xchg or ret sbb std sbb mov ret add popa lods les add push incb test adc mov popf fwait (bad) sti sub lahf fdiv pmulhuw lock ljmp popa or xor subl push push cmp jg (bad) jno ror jno add mov roll (bad) cmpsb test lods std adc imul fwait (bad) push (bad) add jge cmp decb jl push jno mov adc mov add push xlat add inc ds subb in add orb pop (bad) dec mov daa push (bad) push inc add or jge xchg mov and inc and mov fistp add add std repz or arpl fwait xchg js add test jge call add ret pop (bad) push push push or dec popf leave jecxz dec in jnp sti out mov adc add mov mov (bad) cmpsb jl std fild or push movl dec stos out add add addl out addl out addl enter pop or fwait incl mov add subl (bad) cld sbb test push jle sbb arpl add fild push fwait jge pop les push mov xchg out out mov aam std inc inc or xchg mov add leave je in inc mov test xchg inc or jmp mov nop test jge mov loopne or pop std mov push cmpsl jge inc mov lea (bad) fxch or outsl xor (bad) stos jg stos pushf or mov mov pop mov or (bad) jmp jge push std roll test push std roll cmpsb add lcall pop jbe mov stc out mov pop dec test add adc xlat jg (bad) lods dec add lcall into jle jge fs stc add sbb sub sub mov int dec (bad) add or or push xlat jg pop (bad) fisttp subl push es sbb jns cli mov sub lcall add add test xchg out add sbb testb cmp addl sub jl jb (bad) sub or xor mov daa add call xchg lret push jnp out jnp stos (bad) out xchg jge stos xchg addb jmp aas xor lods add subl ret imul jnp push inc arpl lods inc ja cltd orb or out rcl mov add jae out adc inc or stc jge and daa cmp mov std scas or pop sub mov jne xor push jle mov jg inc mov jnp in les dec imul out mov imul jb subl out cmp test ror add or adc push sub lods call add adcl add call inc in fild stos vpsubq (bad) movl stos add lahf cmpsb leave adc dec xchg mov add mov out add mov mov out jnp and add sti lcall or add or sti xchg pushf fwait int sahf jnp mov jg sti iret push push cmp arpl in lods loope mov mov ret and mov jge enter jge lods or add aam mov and xchg xchg add jge mov jnp dec out mov mov ljmp mov sub addl jb push inc repnz or or jnp inc lea cmpsl jle mov insb movl in call add add test in (bad) cltd les lods fiaddl cmpsl jle xor ds cltd inc jge daa (bad) xchg sbb sub test push pusha lahf enter test mov popf repz and dec push aaa sbb mov jb pop mov mov push lock into or xchg mov sarb mov stos push mov jno mov push mov sbb (bad) sub mov arpl cmp ja outsb jl jge ret lea mov inc js repnz mov or testb test sbb cmp pop (bad) lods jne fwait (bad) ficomp push test add movsb xlat (bad) jbe xchg cmp inc mov es xor pusha roll inc mov in inc cmp arpl pop dec and pop jmp decl (bad) cld pop adc mov cmc or cmp fdivr mov aad xor mov bnd (bad) orl jbe loope xchg dec inc sub mov xchg outsb mov (bad) cmp sbb cwtl adc stc mov dec jl inc imul inc or pushf add (bad) sub sub jecxz (bad) cmpl mov inc jnp pop or mov pushf lahf mov jnp fwait jl sub pushf inc mov (bad) popf loop add adc push mov mov mov pushf inc int fldl mov in inc jmp mov or lcall xchg inc popf inc mov pushf or lcall adc mov mov cmp cmpb scas or or mov sbbl jl cmp push loope jnp pop or xchg jge cld mov sbb sbb ret mov xchg popfw and popa pushf loopne lahf mov xchg mov jge pop in or dec mov mov pushf in add popa xchg sbbb lret lods sti or fiadd sbb mov xchg call and mov rcrb sti lods push xchg pop or mov pushf ret mov mov mov jp mov mov movsb popf jecxz add int aas xchg pushf fistpll cmp jnp dec pushf mov pushf inc mov sbbl inc pushf pop mov jp or ljmp incw or adc pushf pop mov fs and xchg dec or pop pushf lods mov cld popf in mov pushf fwait mov aad xchg jl mov es or pushf push mov enter imul xchg jle or or add mov mov pushf pusha frstor (bad) mov pushf add push (bad) adc pushf sub or loope mov adc pushf pop int sti std in sti sbb or or mov pop popf inc mov pushf fs xchg add fistl sahf lcall mov pushf test jnp or adc pushf add xchg add adc mov popfw test pushf loope pop (bad) jle pop popf fdivrl mov fwait push int3 sti (bad) xchg inc popf sub fcoml pop (bad) ds aas popf and pushf es mov in popf pop mov pushf mov xchg add add mov jl rcrl mov in in es mov mov test add popa pushf mov xchg (bad) popf pop mov dec adc incl jge pop cli cmpsb dec sbb mov sti popf xchg (bad) popf pop mov pushf in in out out push in mov std mov ret stos cmp sbb jnp lret cmp movsl (bad) jb stos or or sbb lods dec jnp mov mov xchg test movsb or inc mov loopne or or cmpsl test dec push orl mov mov adc mov xchg cltd jo xchg test fmull movsb mov xchg jl sbb xor or add mov xchg pop cwtl (bad) cmc cmpl lods mov insb (bad) push rorl push sub mov pop mov dec repz mov add aam (bad) cmp lock in aas cmp pop mov imul mov cmpxchg8b push int3 add xor decl xchg je stos jecxz movsbl add adc mov movsl rorb outsb (bad) push (bad) scas mov arpl into cmp (bad) dec mov sub cmp pop push je dec jns xchg and xchg addr16 jl or mov push mov cmp and fwait dec xchg cmp mov cs andl mov xchg fild pop fcom (bad) mov mov add inc int push jp int3 addl je jmp fild pushf inc (bad) shl mov (bad) jbe mov lret daa adc test icebp add sub sub jmp (bad) sbbl sbb mov xchg add fbld jle cmpsl add push cmp dec idiv mov sub adc fidiv cmpl mov xor test sub fs clc or fs and mov push popf fistpll sbb (bad) mov jo pushf mov mov (bad) call ffree mov pusha adc in add sbb push orb lock stos lea pop call mov enter jg mov or pop loop std cs ljmp dec cld jns or dec icebp insb nop inc inc cltd dec imul popa sub cmc mov insl jnp xor pop jecxz cmp daa jne cmpsl sbb xchg mov sub lret push xchg mov scas lods mov or or clc (bad) or sub repz andl mov andb mov mov icebp cmp push add push cmp in test adc daa das (bad) and movl jo rorb fsubl scas mov in dec mov ss ja loopne sbb cmp sti and out int3 fwait incb sarb cmp jne sbb insb enter jp in in enter dec bsf cs cmc mov jmp dec fisttpl ja stos (bad) icebp jbe pop stc cmpl jmp sahf inc popf inc stos jae mov fxch or mov mov test mov or xor mov repnz xchg inc sbb jle sub repnz xchg mov movsb xor out in mov (bad) in cld adc jbe add xchg mov or leave (bad) fcoml jle and jmp (bad) shrl adc sbb push jmp sbbl cmpsl loopne cmp (bad) jb jle ds cwtl mov pop inc pop clc jno or sahf and aam in add mov imul sub mov mov lahf daa fdivl xchg hlt xor (bad) mov xchg jecxz dec and cmp jbe mov mov mov int sahf mov push ret cmp xchg testb cmp adc insl mov pushf xchg mov sarl jne xor sarl (bad) mov mov xchg mov cltd in xor cwtl movsb xchg popf test out lahf push xor pop push (bad) movsl stos ret imul add adc xchg (bad) ljmp mov or mov sti (bad) xor in popf icebp xchg jmp xlat and pop lret rolb sub lret insl dec ds mov test mov xchg sahf pop mov leave ror popa adc add push xlat mov or stc pop cli xchg mov cmp in pop or dec sbb and fstl aad mov sbb adc jb xlat decl leave or mov test dec mov lea jecxz or mov push out xchg data16 dec xchg ljmp cmp xor mov mov cmp pop pop mov or mov inc jecxz repnz ret pop mov mov mov xchg jl aad stos push outsb dec sub les push xchg scas movsb jmp (bad) dec mov xchg push sub mov mov std aam stos sbb test (bad) jp or cmp push ret arpl mov ret inc jnp pop mov xchg lret sub mov inc (bad) jge mov nop insl negb stos inc sahf rcr aad mov mov xchg dec js mov sbb outsb adc mov out loop pop scas mov mov mov add aad mov sbb cltd incl mov lds fstpl or add mov lret inc jne ds mov cltd repnz pop addr16 inc mov hlt das shr pop add xchg pop xchg sti sbb push and and or xchg mov std mov ret mov call fs mov dec js inc dec flds xorb mov sub into add movsl jle xor out mov sbb xchg popf mov jl gs repnz mov sbb cmp dec in cmp jmp sbb cld push xchg jg (bad) pop andl aas mov ffreep mov adc and inc mov arpl mov mulb sti jno dec inc mov or int3 popa sbbl cmp and add push mov xor add dec push sub mov xchg mov stos xlat rorb jecxz cli sbbl pop jp fwait test xor sub mov int cli push dec jnp inc imull push or dec in mov es stc push xchg aam inc loopne fwait andl jle jnp mov jb dec fmull dec mov push outsl (bad) cmc sub test adc arpl cmp adc sub (bad) mov pop inc push fistp pop lret inc jmp lret mov repnz inc mov push jns xlat sahf pushf mov imul xchg pop daa insb stos push sbb (bad) cmc mov push adc add sbb movsb add mov mov mov stos and (bad) adc jmp fs mov repnz int3 fisub pop (bad) aaa sub fdivs test dec dec popf mov call icebp addl (bad) in cmp stos mov adcl jns adc mov dec insl xchg mov cmp adc daa mov (bad) mov pop cmp out (bad) mov stc dec pop xchg mov rep rcrb test lods ds ss orl mov into push and (bad) jb xchg lcall sbb ss dec jmp hlt cmc rclb test test jecxz fsubrl pop sbb inc mov ja aaa pushl pop inc clc dec mov pushf inc mov fdivrs mov and int3 mov xor and into jmp iret leave xchg mov and push mov pop push ljmp xorb inc adc lods mov push in insb sahf scas xchg ja xchg pop faddl int sbb sahf xor mov mov cs xchg xor jno movsl mov ss pop or pop fs jle pop fcmovnu test mov mov add xchg lcall fiaddl pop adcl mov pop iret mov jle push orl movsb fimull mov sbb (bad) mov and test fstp dec jne pop mov inc aam jmp add iret stc adc xor dec stos inc (bad) jae ljmp stos insb cmp and movsb das mov adc je iret pop aaa jae ds dec pop xorb cmp mov xchg clc lock mov inc mov pop or fisttpl test sbb push int3 pop mov mov ret clc inc dec dec out fsubrs pop xor scas insb inc es jg adc sub and add inc xchg stc mov mov popa cmpsl fbld push adcl out lods imul fsubl mov lds iret les hlt mov lahf stc add cmp inc push lods cli dec stos sti rcr movsb add cwtl arpl sbb sti andl adc mov and outsl add loop je das and (bad) mov cs cmpsl dec xor ret xor sbb sub xchg mov add xlat jmp aam fs xchg ja xor scas adc mov fcoms lods pop rdmsr xor mov xchg cwtl sub mov mov lcall adc xor mov enter mov sbb or orl add inc mov cmp mov out add xchg bound mov or mov jge sbb shrl (bad) inc jmp clc stos mov mov xor fwait xor xchg ret test jae mov int mov xchg sub lock xchg mov lret je pop loope (bad) rcl repnz jmp jle mov jp (bad) mov push push inc test sub (bad) popa arpl repnz fbstp mov mov ds dec push push adc ja jbe test inc pop sbb pop in popf mov xlat das dec jp cmp lods pop rclb push lods cmp es jmp xchg fdivs mov mov dec (bad) shrl stos ja sbb and dec out ds or rcrl lret fwait sub movsl shr push xchg pop fmull sbb ss sub and bound pop jecxz lods addr16 addb stos cld mov out xlat dec les shr loopne rcrb outsl mov mov fcomi pop rcrb mov bnd sub sub dec inc lods xchg sub (bad) sub jne sbb scas pusha (bad) test xor mov scas mov bts xchg roll or insl inc sbb mov stos push in outsl jo mov pop push sub mov cld jb adc cmpsb arpl xchg mov cmp mov ss and xchg mov cmp cmp das ds mov cs sbbl or mov xor movsb lea loop inc jns dec sbb dec sbbl btr nop mov rclb sbb mov rcl mov fimul fcos mov xchg xchg adc and in out dec roll push add sbb fs adc ljmp (bad) lcall sub or test pusha imul cs cmp pop mov fwait mov dec xchg insl les or cmp mov jg push clc outsb xlat es xchg jno push bound xorl mov jnp xor jb mov into push movsb dec xor inc cmpsl mov stos add clc sti in jns xor mov sarb (bad) mov mov add adc (bad) mov cmp orl nop xacquire mov cmp out or adcb aaa out push mov bound sbb jns add xor nop fldpi adc aam jge aaa mov mov xchg stos (bad) fnstsw mov popl test in stos add stos xor sbb push sbb aam insb (bad) inc and mov bound jb imul and (bad) mov subps jl xor cmpsb aad cltd xchg inc mov ret rol adc cmp orb outsb xor xor pop les add dec push shrl mov push mov adc cmpsl dec sbb jmp (bad) bound jb pop lahf (bad) push negl xchg mov push xchg leave hlt sbb jmp ds (bad) test lret pushf push stos jo movsb xchg mov sarb aas in jne sub mov cmp inc xchg sbb imul fcmovnb imul xor mov enter mov inc std daa mov mov sbb mov pop fs jmp ret andb jge mov pop mov jno push data16 xchg insb mov (bad) jb addl cmp xchg lret adc push stos sbb test repnz pop dec (bad) pop xchg pop jne aaa sub jp ljmp ffree fisttpll faddl mov sbb mov mov xchg xchg fwait insb jns fwait pusha jnp and mov lret mov in mov fsubrs jge repz push mov jmp lret pusha push cld dec dec ret into loopne push mov fnstcw pushf pop inc push mov data16 push insl mov dec jmp lock jmp push push mov repnz mov mov xchg jns into lods mov jbe pop adc test pop mov (bad) arpl sahf push mov or rep mov mov and jae lds dec pop jmp and cmp outsb enter mov cmpsb test subl (bad) mov sbb test sub push rcll lock mov push arpl pop mov dec sub dec sbb mov cld xchg cli mov xor inc call sub lods or sahf push hlt mov push cmp insb scas testb es (bad) mov sbb xchg pop push (bad) cwtl movsl pop jg out sub lods mov mov mov add mov repnz xlat mov dec in aas roll fldenv adc scas (bad) sub mov cwtl cli lret jmp cmp xchg pop mov outsb dec push stos mov inc stos or sub mov dec iret dec fwait daa ss mov xchg or mov mov aam mov xor mov shlb pop (bad) mov hlt push out clc mov cmpsb jl cmp (bad) jle cmpsl or jnp test pop stos shrl test mov mov push nop test mov xchg clc sub outsb jmp xor adc mov sub int std xchg aas xchg or mov mov sub mov pop jmp mov mov int movsb gs lock outsb mov adc daa in inc xchg mov inc push mov sbb jo mov jp adc (bad) fs or fisubl cmp mov (bad) or mov xor (bad) push ret lds mov or aam jecxz dec (bad) lcall xchg add (bad) stos ljmp xor mov inc stos insb jo inc mov sub inc inc test xchg adc aas imul stos xchg incl inc lahf cmpb dec pop xor mov xorl mov dec movsl stc cmc addb xchg mov test and push data16 std pop mov jp pop pop push mov iret or push push jne ljmp out mov push pop adc in mov inc sbb or mov fldcw out aaa test aam shrl outsb setnp lods jno ret inc rcrl fs mov jg sub xlat pop xchg jno or fadds mov out insb sbb ljmp mov or pop jbe mov mov neg andb pushf cmp in inc ret lret jle stos and cltd mov nop or out jle mov mov push (bad) lahf dec (bad) pop outsl mov mov xor mul lods out xchg mov ret icebp xchg inc lret cli jp add mov call cmp and jbe mov sub pop dec mov xor fdiv test push sbb into pop mov cmpsb jmp adc popf mov aad sbb out fs cmp jns add mov in aaa mov xchg push mov cmpb fs push jbe sbb mov mov cli mov push and int out mov lods (bad) faddl fisubl cmp insl test xchg mov dec (bad) ljmp into mov push lret insb adc cmp cmp sbb call insl test or in mov icebp dec js fs mov add leave jmp push imul call jl cmpsl out xor popf sub mov das in ja lcall xchg mov add fcmovu insb mov jecxz inc roll lahf ret leave jle lds push rcr mov pop scas dec jl movsl pop test lea testb lods repz vmread mov xchg test dec cld pop jl jmp int3 fnstcw mov repnz pop dec mov fwait aad cwtl push mov daa pop mov and push pop jg (bad) inc hlt mov push push mov pop loopne (bad) sbb pop stos not out pop cmp (bad) push pop (bad) jbe jno cmpsb js clc in es mov out xor sbb je mov jge cmp sub cmp addr16 faddl loop mov mov mov movl mov add test mov or ret adc mov cmp je push sbb push xchg push mov xchg jo loop mov ja movsb xchg lret out pop ret sub (bad) stc jae (bad) push jle and mov xor subb push dec sub cmp stos add mov out mov rolb jecxz scas lea stos xor mov cmp or pop sbb mov sbb sbb or div adc mov push movsb add xor push sub mov mov std dec add clc pusha fstl mov xchg call and push stos fimul jmp mov mov loopne les mov (bad) mov aas cmc mov popf push (bad) or imulb cli mov repnz inc or cwtl mov mov sbb fldcw ds and add fwait push cltd rcrl and dec stos sbbb or dec push (bad) and mov scas mov lods lahf ret fiaddl int inc jno (bad) mov mov lods hlt fmuls es fwait cli lock jmp jge fild std aam int push xlat xchg mov leave rorl mov push adcl aam xchg cmp push cmpsb xchg sbb pop repnz fmull and xor cmp push cmp mov insl dec test test loop imul jg retw pop jmp mov rcll or stc inc cld sub mov in jo lods and sti loop cltd lahf mov dec dec or sub adc push adcl pop loop push cmp adc pop pop push jns xor clc addl (bad) and ds (bad) dec fidiv mov testl mov dec imul and jns dec les adc loope cmp es mov push int3 addl dec not test outsl mov xchg sub mov repz mov mov cmp es ret pop mov fildll mov sub (bad) in stos push xor cmpsl and sub in lret jg (bad) js sub jp or and mul cmc mov mov dec sub mov jl or popa mov mov and cmp mov cmp mov insb dec sub mov inc je or pop dec rcll int3 push ret mov ss mov jmp mov jne (bad) out mov mov lods out cwtl push mov inc int pop mov or dec mov test js sub mov movsl int cltd mov xorl xchg orb mov aam out icebp pop or es loope sahf xor cmp je fs mov mov into mov pushf movsl aad mov lret pushf dec test or sahf sarb dec stos enter adc sbb add inc fistpl idivl jge mov push pop mov popf mov cmpsb dec sub mov xchg sbb mov cs cmpsl dec fimull movsb push inc xchg jmp fistpll adcl mov sub add inc mov scas (bad) pushf jle xor sub jb push pop rorb push sbb pop mov dec rolb aad adc mov sahf mov decb pop sar lret repz lock out jg (bad) mov lret imul cmpl adcl mov aaa inc cwtl jne sub mov ss mov inc mov and add push lret call mov pop mov pop jecxz mov pop and lods (bad) mov into jl mov and mov mov lods mov repnz mov adc setp dec aad cmp lock lret mov sbb mov cwtl into cltd inc aas fstpt xchg jl,pn (bad) flds mov mov push (bad) mov mov jge add popf leave hlt or fmul mov pop push clc sub sbb dec inc mov mov out daa mov cwtl sub mov aad je test iret pop cmp icebp into cwtl push pop mov sbb cltd xchg mov fsubrl push lret imul std test sti mov int insb mov (bad) push inc movsb into adc sub xchg xor mov adcl jecxz cmpl inc mov loop mov test sahf lds mov xor xor jge setns call mov pop mov push mov je adc pop adc push test scas adc nop mov sub loopne test into (bad) mov ja (bad) fcoml cmp lods jl inc rolb mov mov adc shrl popf (bad) cld jl pop (bad) sub mov fnstenv loope mov inc leave inc add push mov popf jo jle dec add adc mov test inc dec mov jns popf mov adc lds push movsb mov mov xchg adc movsl pop add loop mov dec enter stos idivb adc adc inc and cli xchg dec mov pop xlat xchg sbb mov sub ja jmp push stos mov mov pop push hlt ljmp or push inc mov roll mov scas push or lret hlt (bad) xchg mov xor xor or inc inc xchg (bad) stos or nop leave stos push dec call (bad) lock mov (bad) fbstp jb int aam hlt imul push and cmp jns stos mov outsl cld cmp push lds inc xor daa jno sbb jmp (bad) dec (bad) mov xchg inc lret cmp (bad) push mov test push arpl clc mov mov xor push test xor outsb cli jns mov push jmp pop pop cltd addb xchg lcall pop sub test jnp xchg in dec sbb shrl xchg stos push ja,pn inc cmp push repnz fs stc xor dec in mov ret stc jg xor xchg dec mov cmc push js sbbl test xchg mov out test push mov add das sbb mov jmp sahf aaa (bad) and (bad) lret cmp pop xor mov rcll mov mov lahf jmp aad scas dec mov mov xor rcrl inc call mov mov loopne fidiv cmp lahf pop mov adc cmpb cmp cmpsl xchg mov add pushf pop leave mov jle jp lea fwait imul addb and jno mov es in sbb (bad) stc leave lret icebp dec adc dec sub test or js or mov pop jg dec mov addr16 inc ljmp ret and xchg xor (bad) push scas jbe movsl lods xchg mov push pushf xchg gs mov add lods push bound mov jae mov lock mov fs jne jnp push pushf mov push push pusha mov mov call lcall sti mov popf and iret cmpsb scas (bad) cmp or in mov sub hlt (bad) sbb push fstps (bad) lods sub lods test pop mov rcrl xchg mov sbb mov les pop pop mov out mov push inc mov js (bad) push add rolb sbb test stc push mov insb and pusha pushf movb pushl ret imul sbb lea int3 cmp sub test insl push imul pop shrb (bad) adc cltd aaa sub or fcmovnbe xchg out push jg inc mov xor or dec xor and adc (bad) int das fisttpl out dec in mov bound cmp mov icebp or movsl aad inc mov inc pop sti cs popf push sub sbb fisubl dec iret pop pop repnz das ret push fnstsw les push sbb scas jo pcmpeqw cmp movb insl dec lea and sbb test mov movsb js sbb inc mov push (bad) (bad) mov add jp daa add mov lock add adc xchg test cmp test mov fcoml jo aad lret mov push out inc and mov lret dec jnp xchg sbb or test xchg or fwait mov lret cmc fdivp test lea or into adc jg lods ficom and test push js xchg pop cltd mov sbb adc imul int3 xchg inc dec jbe adc lea not jmp jp arpl fcompl inc add push mov or pushf cli sbb sub jo push movsl dec cmp cltd insl sub jne mov sbb rcll mov adc push scas fwait ret aas aam xor daa stc add push dec inc rol test fsubrs jmp dec lcall in inc das push mov sub xor out mov and or xor stos xchg mov (bad) mov xor inc xor test jl mov repnz cltd jecxz iret cld sub push jmp xchg mov inc mov popa mov ffree daa daa stos repz or mov in dec mov cwtl push mov inc xchg hlt lea call push mov push lea jae stc cmp pushf pusha xor pusha lea jno pushf lea call pusha push lea jae pushf jmp cwtl mov sub sbb stos mov inc outsl es aas sbb jmp (bad) hlt pop mov add push ficom mov and lahf fcoml cmp je sub xor imul xor push ds dec mov mov pusha rcr push mov scas xor mov rolb jge sub je sbb scas stos cmp bound push sbb jl flds movsl hlt add rol xchg mov mov cwtl gs jb daa sbb ret mov leave test fstpl rcl sbb aad adc xchg cmp insb leave and mov mov dec in lods stos cmp pusha adcl sbb mov js out sarb fldl shlb orl jp mov notb fstpt sub adc or jb xchg sahf mov push mov sbb in inc nop leave loope mov bound je cmp dec test mov dec xchg ljmp popf cmp jecxz int3 call push je stos mov or cmc in xor pop inc (bad) jl cmp iret mov xchg mov xor cmpsl outsb lds inc adc pop shr mov cwtl jmp sub push (bad) dec cmp sbb sbb imul pop jge in es adcl addl loop js cmp dec mov mov lea xchg pop fwait stc in gs push jne sbb lock pminub sub dec or (bad) pop test rorl sbb push cmc inc pushf ficoml sub or lret stos adc (bad) xor repnz adc push out lock and fdivl push jne inc sbb dec sarl loop (bad) mov fs sarl jae test add jge adc faddl sbb fcomps inc xor test sub cwtl movsl les fadds mov jns cli arpl aaa jle mov push inc test mov rolb mov cmp ja mov gs fsub inc xchg ret jbe scas aas fsubrl rolb mov stc addl cmp shl adc pop lock fwait subl mov jnp clc nop sti pop jp and push loope mov cmp push test adc and xor mov fidivl and add idivl (bad) lods mov mov daa out sbb pop fisttp arpl or aaa mov in cmpsl sub scas mov (bad) mov push lea jne jmp movl call push sbb movsl fstps inc push and dec mov cmp mov call lea mov or jno xor jno sbb rolb sbb mov mov push sub mov push scas jns jae (bad) sub mov fsub xor loope lods xchg in ja,pt subb js rcll or jne cmc adc arpl jmp sbb scas xlat jno repz fstps inc cmp adc dec mov mull ja dec push ja inc jp push imul or repnz push push lock push lods push sahf xor movsl fmuls or fs dec push push ja sbb repz xchg jo dec (bad) xchg lea sarb testl sub add test add fistl (bad) in sahf dec xchg adc and ds outsl adc mov fiaddl insb je negl push pop mov jge pop sbb pop scas mov inc (bad) sbb inc lret lcall in dec cmp data16 sbb pop outsb dec push sub mov xchg inc bound mov push or push rcr push lods cltd (bad) xor (bad) lret test nop in adc mov adc movsb cltd sbb ss jge test adc jmp aaa jle push fdivl mov (bad) clc icebp xor adc (bad) scas jno or pop sbbb mov push pop repnz pop inc inc add imul mov das push push in pusha adc std pop cmc xor push cmpsb xor mov and mov sti sub adc cltd fs cwtl pop in jp movl call add push inc fistpl inc push mov add mov sti dec xlat inc mov cwtl pop xor in ss sbb mov movsl cmp aas rolb jbe mov std ret xor sub in push fwait sbb sub inc lcall add pop out mull iret cmp pop mov mov push xchg or mov out or mov sarb dec adc es lea (bad) jmp xchg fcompl mov ds gs outsb xchg test cmpsb and mov mov jle fs jae call lea jb cmp cmpb pusha jmp sti les sbb call fstpl mov in int int fstps and jne in out mov js mov out push stos xchg adc ret inc mov or sub fsts cs pop sarb or add adc inc jae popa push pop or (bad) cmpsb mov iret scas test mov and jb sub inc mov out jne cmp push aaa jmp test sti lods mov fldenv aaa jb add gs adc gs mov inc lcall outsb int cwtl lretw push jns mov sub mov stos push push push push inc push xor cs insb add stc jp in inc pushf fisttp cwtl out xlat jg (bad) ffreep repz push or fsubrl and push shl cwtl les sub add mov jne into sub xchg xlat xor fnstsw push (bad) (bad) (bad) mov nop adcb dec mov dec lret out je xchg int3 mov insb bswap jl jmp mov icebp cltd lcall pop (bad) cmp dec mov adc or in iret scas sub or fisttp je bound fbstp loopne es in inc sbb lret (bad) aam sarb daa lock lods xor pop jbe mov sbb lods popa mov mov cwtl in pop or add bound out mov div (bad) mov (bad) sbb xchg mov xchg int3 lods stos cmp pop jp adc sti imul movsl insl nop inc mov aaa push addr16 fidivl mov xchg gs xor ds adc push add mov enter mov sar jae add mov xorl and lret inc aas dec arpl sbb xlat fild xlat adc mov rclb or xchg pop mov or push arpl fildl xchg out scas pop xchg cmpsb or mov and ss call cs add lret push jnp add and add xchg mov fildll popf push push mov test sbb fldt movsb cmpb data16 out adc jl,pt in dec lods pop les jns xor nop dec (bad) sub fistp in pop cwtl pusha call pushf pushf movl push pushf lea jmp mov pushf lea jne aam daa xor (bad) lock cmc mov ror cmc add adc sub test mov jmp jmp sub inc daa push jae sub mov sub mov lock xchg or js loop adc xchg mov outsl push test cli movsl roll test call inc and mov rolb xor cli jg fstl xchg pop pop mov add dec subl pop lods xor jb mov ficomp dec mov pop out jae cmpsb adc bound xor fdivrs mov ret add repnz or loope idiv push and sub jb add out fimul sbb (bad) lret inc iret (bad) call stos cmpsl das sub cmp inc xchg cmpsb inc jnp mov lahf pop lods ja and ret sahf jbe daa push push jae daa cmpsl dec pop inc gs mov insl add jns movsb sub jae add inc jns mov loope mov pushf rorl movsl jnp jae dec je and sarb cmp cmp sub cmc das rclb loope pop jg sub ret or cld js push xor subl cwtl jnp icebp xor xor jae mov nop pop jae pusha mov adc shll mov out in ljmp pusha jae insl and in pusha mov cmp jae jno mov shlb fstpl mov in aaa mov (bad) sahf arpl cld test pop repnz dec cmp sbb icebp decl jmp insl (bad) int push and fmulp dec and popa lods and xchg data16 aaa (bad) mov test and repz jl xor ja mov cmp js push sarb fdivl jno popa ret inc xor xor lcall dec cmp (bad) dec cwtl gs add xor add cmp push repnz (bad) sahf js insl jno addr16 lahf mov test nop jl inc push jg inc daa cmc xor cmp repz adc out data16 fcmovnu ss pusha xor sbb repnz sub inc pop sbb in dec mov stos insl mov push jge aaa les xchg test cmp jbe xchg mov es dec aas lds int dec mov mov scas mov iret jge daa push jb mov xchg pop jb inc xchg mov jg pop jl test lods insl fwait xor mov or movb pop or mov or stos push ja jg scas fdivp xchg mov pop (bad) dec mov inc pop cmc pushf or (bad) loop mov add mov and xor sub xchg pop adc cmp sahf (bad) dec insl in pop push inc ficomp jns clc lcall sbb fist in das scas scas ficomp dec data16 (bad) in sahf mov adc sub inc test outsb test fildl clc ljmp sbb aaa push mov xchg nop (bad) adc dec leave loopne add in mov test cli out lahf shlb pop xlat movsl dec mov mov sub inc and data16 enter add aas mov rol data16 sub add lret jl sub (bad) inc xchg fistpll mov icebp add or pop in mov inc add and or add mov sbb (bad) jne sti inc push call mov clc and sbb dec mov adc add cwtl pop cmp sbb mov jg mov and adcl enter xchg mov in xchg pop jae loopne and fcmovnu xor mov (bad) mov push xor push mov pop test jne push push adc sbb icebp out jbe pop scas sbb adc popa fucom jb mov cmpb inc pop out sbb fcmovnb xchg into xchg fistl clc cmp cmc push add push jo adc cmpsb and mov call push xor in sbb jl stc fmulp shrb sbbl cmp fsub add push cmc fnsave add xchg jl inc jp or cmpsl mov pusha inc rcrl pop jge repz mov or jg in xchg cli add push pop add xor ret imul (bad) mov pop add jp test sub xchg lods stos rorb mov stos add cwtl adc cmp das jae or adc lret pop xchg in sbb inc xor mov test dec (bad) mov lahf cwtl dec add ret scas pop mov jb jnp js sbb sbbl sbb (bad) (bad) int (bad) (bad) dec or test call les rcrb mov xchg es fstpl iret inc or lods js arpl jmp push dec mov imul or pop sbb mov xor leave fldt or xchg in adc inc jp lds stos loop (bad) jle cmp lahf ds mov adc mov sbb es shr jne cmc call leave push lea jmp rol push movb call cltd ret out sbb insb outsl ja mov pop push cmp inc xor cltd inc (bad) jne inc hlt (bad) das loope movsb jne out mov mov and fisttp (bad) (bad) call cmovbe aam jg dec cs js jp scas movsb arpl mov fmull xchg adc xor jl ret xor push lds scas sbb mov les fsubr ljmp or sbb push loop sub (bad) jg push rcrb inc jmp movsl mov push jge movsb outsb pop jbe andl sbb push lds add pop mov mov fdiv sub push jp bound les xor fstpt xor cmpsb stos and xchg mov iret cmp push das inc andl popa jbe cwtl stos cmpsl cwtl pop pop inc or hlt cltd aam mov aaa lcall mov adc flds push fist in mov mov (bad) jns lock std std mov xchg pusha ja pop ret jg cvtdq2ps ret jg sub pushf mov pop dec ss decl mov rcrl dec inc push and aam push rolb xlat sub test inc ficomp add cmpsl xor xchg push movsb add les mov mov in sbb dec add add push add push add rclb aam pop add iret pop add add add push xchg aam sbb dec scas int mov jbe imul inc pop pop fcomps mov pop xchg mov sarb dec popa cmp push adc cwtl mov push mov and cmpsb dec repz insb xchg mov push adc scas mov movsb js push ljmp gs sbb repnz enter sbb xchg addl js aas mov mov cmpsl and add adc test or jb and pop in out add stos mov xchg cli pop mov sbb in sbb pop jge xor adc xorl and mov cmp xor jnp ja and out adc push test xor sbb jns,pt (bad) testb add int3 loopne in and in (bad) xchg call mov fisubrl inc pusha ljmp push fcoml ljmp orb xchg addr16 mov fist sub adc push jnp in lahf push add xchg je sbb hlt cmp xor xor in xor pop and lock xor test repnz push jmp movw cmp pushf lea jae neg bts mov push cmc bsf mov (bad) cmc add add test test xor mov call lea jmp clc cmc clc xor jmp add pusha pushf push lea jmp aam adcb inc xor shrl mov in aam dec mov fstps or clc lahf mov jl xor inc lods (bad) dec popa cwtl movsl dec (bad) pop inc fninit sbb cmpsb jecxz sbb fmuls test ss mul dec inc lods in sub lret sub cmp hlt xchg mov cmp aaa push xor sti and pop aam sbb orl fisttp (bad) xlat ss cmp jb insb inc cld adc movhps dec js and fsts std das mov sub into push movsl das mov fs movsb loopne out xchg xchg xor scas cmc insb mov fs push push mov call push aas mov ljmp pop dec fsub sub cmp or andl mov ret hlt jne push jne fmull xchg or jo int3 ss xor rolb xorl mov mov adc cltd repnz sub cld rorl (bad) (bad) jmp xchg mov push das test jae or inc (bad) ds push xlat adc insl ss adc jmp iret int pusha push mov xchg lahf fsubr dec loopne (bad) pop sti dec jae rorb nop stos test imul es pop popa loope lea pusha mov jg xor jg rcll pop dec xchg xor repz test aaa fs (bad) jne out pop bswap and sbb pop data16 or xchg stc adc (bad) test xchg fadds jg movsb outsl xchg (bad) outsl stos mov xor xchg cmp mov test xchg push xor mov inc bound cltd das in test js dec pop int jl stos xchg pop and and lea fimul call add xor and mov jb or push hlt sub mov push ss inc mov movsl mov add icebp adc punpckhbw addr16 cwtl fdivr and daa movl add jge movsl andl inc popa sbb sbb aad (bad) fcomi ljmp jne add jge leave movsb and mov sarl mov pop arpl pop adc or je in loope push dec sbb inc sub inc pop jge or cmp xor add cld sub decl cmp push ret iret add xor out (bad) add cmc aad mov and inc js sbb outsl andb sbb jb or fdivp stos jg pop out pop (bad) ljmp mov bound (bad) mov add popa jno movsl jp jne (bad) es jg inc idivb call insl in lds sub int enter fnstcw iret xchg mov sub aas inc sbb and pop dec cltd inc scas inc loopne loope in (bad) adc mov pop jo push sar jns int dec in ljmp popa insb inc jb gs rorb divl movb lods pusha cmp jmp or gs cmc sbb mov (bad) adc sbb dec sbb dec jns jne xor out jle iret xlat in sbb pop int xchg lods mov mov add js out andl mov adc ficomp inc push xor or mov gs movsb movsb test mov and movsb and loopne sti cwtl pop into cmp fs push rclb lock pop enter sbb mov push rorb dec stos add push ja mov sbb lahf xchg dec dec aaa sub repz stos test xor movsb and call div (bad) dec sub ret pushf cmc jae adc fwait mov jne mov sbb jne fwait mov lcall mov pusha pop movb insb sbb fild cmp lret (bad) dec add mov mov movsb cmp loopne and mov xorb insb inc or ja stos test adc clc cmp shr leave pop call cs pop mov pushf mov pushf pushf pushl ret jle in negb inc xlat sub pop (bad) push pop outsl jo cmp sub mov loopne lods push adc jp inc mov pop sub push cmpb repnz push cmp (bad) notb fcomip mov push imul dec loope mov imul sar fnsetpm(287 and movsl cs jae decb movb and stos lahf rcrl paddw cmpsl lret cmp js aaa nop or and fwait scas aad mov sub data16 jp pop mov inc and lahf pusha stc out into sub push or orl mov pushf cmp call jl add negl inc jecxz lods dec addl imul adc mov and or mov push xor gs lock loopne test push sbb and xchg aas jp cltd adc arpl inc mov cmc lret into in in js scas call dec jbe pop aas and cwtl mov sbb lret enter or mov call lock cmp fwait loopne fcoml hlt divb and cli jmp outsb rcrl dec push out or stos jo xchg push rcrl and dec pop sbb inc dec lods xor popfw pushf lea ja jmp in cmp es sti int3 negb pop push mov fnstsw outsl add in mov outsl enter sub inc lods mov pop dec mov daa xchg sbb imul aas hlt jb sub iret rclb dec out xlat add ss cmpsl nop das pop xchg mov imul jb xor arpl cmp mov jg cli push ja mov lock rcll (bad) sarb aad fiadd imul fwait sub jge into out cs fbstp cli mov pusha cmp outsb incb cmc inc xor popa or dec mov loope jnp sub fwait inc jb adc cmpsl push test sbb inc stc inc add xchg add ds shr mov in in repnz ss ds lcall inc jbe popa and mov fimull pop call mov or es dec leave mov push sti cmp jg cmpsl xor in aaa lret xchg cmp arpl jl cmp lret int fwait lcall adc cltd xchg jl pusha lds in js xor mov xlat add rorl negb cld push shr pop movsb xor push out dec and or std xor clc je in std aam dec mov push (bad) daa stos pop arpl and add mov xor sub jnp jne cmp sbb daa repnz std (bad) pop lcall imul repnz inc lret loopne dec xor test (bad) jo cmp and notb jle adc (bad) push inc imul lcall push jmp mov stc push js arpl inc xlat outsb mov ret xchg or jbe jge insb xorb xor cwtl cmp sti mov xchg loop jo les push loop mov stc and jmp xbegin lcall ficompl in dec xor test aaa mov and add xor or insb or stos fwait and outsb jae rdpmc add mov push sahf insb sub dec popf jno xor mov rorb popa repz jns adc sub cld leave js into gs push scas sbb xor sub pop (bad) cs jecxz addr16 xor repz fldt mov mov out ret push push test sub addr16 arpl xor negl jne stc sbb arpl enter inc push out sub das and frstpm(287 dec cmp cld jge pop and mov std xchg dec and lods adc sub aam adc fldenv sbb lds xor cmpl jne add pusha std or (bad) cmpsl mov inc lds mov ret shrb pop aad cld xor jo push cmp daa insl xchg mov mov ret sbb or mov aam aas push xchg jle fild or das fsubs dec push mov mov aam push xchg fisttpl cld (bad) aad roll in mov testb hlt into cmp dec xor inc shl out pop pmullw pop or mov mov imul or ret and sti out aad dec xor fdivs cmc inc test sbb js add sub ss pop call jo or dec dec dec dec cs insb add and cld sbb roll lods xor ss (bad) sbb xlat lahf test sbb sub sub imulb inc mov ljmp fwait mov jbe (bad) sti xor dec and pusha fsubs pop fldl add negb and sbb cmp out in and or in std aad push push ljmp mov adc dec imulb pop rol aaa xor xchg movsb xlat dec fdivrl cmp lret cli or nop pop imul popa (bad) iret icebp push xchg mov sub and je std mov (bad) dec cmpsb sub sbb sub jno,pt ljmp push cmp out xor movsl mov sbb sub add adc sbb scas mov lret xchg jmp add cmp and dec outsb mov and pop call adc jo jl sbb jl add xorl xor xor cmp dec dec neg push out add jns in outsl ljmp sub out (bad) call lahf in inc jmp inc pushf (bad) ja or pushf call cmpsb push loop xchg cmp je iret xchg clc dec jmp lret fadds dec mov sub mov mul das (bad) fdivrp stos aam and push xor or push pop jmp add bound pusha call test and mov ja xchg xor aam imul pop pop shrb inc add je lahf xor xchg adc jl lahf les fiadd push pop pop bound dec pop mov lea repnz (bad) (bad) push pop mov ret (bad) notl mov mov js cli xor (bad) xchg sbb adc cmp mov lahf xchg dec jb mov sbb fsubrs add adc add adc ror mov call xchg leave push mov sbb jg push hlt mov mov and cwtl (bad) jp sbb hlt icebp fmuls jecxz mov cmp aad jnp xchg in sub outsb addr16 push adc jnp mov sbb sbb clc jge inc cmp mov lret dec cs adc pop (bad) mov shl insl mov imul ret dec pop push adc adc sub lcall inc jb movsb repz shll mov mov (bad) notl test or into jl decb data16 fdivl xchg sbb fcom repz aaa notb ds addr16 xor or nop mov inc movsl adc rol sub xchg mov cmc cli fcom lock xchg sub sub stc push add inc in xchg lsl scas or xchg xor and in xor or sbb add (bad) mov inc ret push (bad) scas mov cmp mov lock (bad) rorl pop mov xchg rcl xor jle fist cs cmp (bad) cld xor enter leave mov scas je jae jo cmp push cmp lods popf lds (bad) fwait loope jle cmp daa pop inc mov fcom mov int3 xchg mov ja xor pop cmpsb pop stos shr add jns aam push push push adc fbld jb sub lds xchg ret push pop adc mov fcmovnbe imul jno push incl jns cmp out add cmc mov imul lea (bad) lea or lret dec clc cmp pop xrelease dec (bad) push movsl or rcrl sbb dec jns into pop in sahf mov lds add push pusha not call rolb subb cltd mov dec and (bad) lods shr adc push popf mov out into cs inc pop dec ret mov fwait orl das ret inc pop lcall mov add inc cmpsl mov xchg test jle js (bad) push mov cmp mov pop aas out lds push add cltd cmpsb dec aad cmp or in and adc ret bound mov sti sub inc or inc bound mov dec mov pop jmp fs pop cli sbb and in mov (bad) jle cmc pushf aad xor mov push add xor aam loop xchg adc pop push inc and popa js fnsave aaa iret cltd test outsl fldl add lock cmpsl (bad) push push (bad) sbb sets pushl jmp inc adc out adc outsl inc or or xchg jecxz out into or (bad) (bad) das or cmpsw pusha loope leave ret fistpll inc mov add ljmp ds or aam or repnz adc setns loopne or xlat mov add inc add pop rclb sbb loope (bad) into dec sbb push iret lock (bad) xchg ficomp jp and pop dec and (bad) cld leave mov cmpsb push lods add mov cs popf pop mov cmp lock mov inc pop inc cmpsb lret add sti sbb jo cld push mov repz sub js insb adc dec dec dec push pop lods adc das cld out les jo inc mov js mov mov mov fimul in push mov nop push mov adcl (bad) loope and roll (bad) in frstor sub sub push or cli js fsubrs lds add stos gs pop scas pop ljmp movl sbb mov push cltd icebp cli dec (bad) std imul (bad) in lret xor test in sub xchg and inc pop sti xor nop dec jl mov and fldenv stos sahf ja out dec ds dec jno in and pop into sbb insl xchg fldl movsl insl push push push (bad) fstpt or add push cld push adc sub aaa push pop rcr loop je fwait xchg ficomp shrb inc leave aad std sti insl nop mov sub shlb test xlat in dec shlb (bad) ja stc int3 dec dec andps lret fbstp fistpl es (bad) xlat jl add inc xchg arpl inc jp adc lret or push popf adc adc or (bad) idiv ret cld xchg insb cmp dec mov mov bound fmul sbb test les sub sbb push xlat jmp movsb lret dec xchg mov cld add loopne insl mov pop xchg aam inc cmp test pop inc mov add jne pop (bad) pop stos mov (bad) out cmp sub add inc xlat sub inc xlat (bad) sub repnz shrb sub mov in pop inc mov test cld dec int3 jecxz (bad) fdivrs adc cli sub jne sub mov repnz pop push sub stc pop cmpb sarb loopne jecxz int3 fistl mov out push and pop adc outsb mov pop adc (bad) inc test lahf mov je xorb aaa jmp sbb imul push xor subl flds jecxz jo aaa pop mov dec xchg mov out cmp imul xchg mov sub fistp shlb mov out fisttpll data16 (bad) je repz sbb lea aas adc xor or mov and lcall mov xor mov jmp mov sub dec push test test fsubrl js divb and xor shll mov sbb repnz test xor sub xor (bad) jns cmp add pop jge (bad) and sub inc sub (bad) dec ljmp (bad) lcall add les pop scas in out icebp pop sbb test xchg sbb mov inc pop test xchg loope dec (bad) pop (bad) test call into push inc cltd xor add shr push xchg (bad) testl enter jae mov (bad) (bad) sarb xlat (bad) icebp cmc adc leave sub mov mov add adc xchg dec (bad) cmc lahf aad lods inc adc mov pop lds movsl (bad) lret jle push aaa inc adc lock or out jge and hlt mov ficom mull mov in mov out fmull push bound adc fbld enter insl jge adcb mov jmp (bad) call xchg mov sbb mov iret inc push jae aaa ljmp pop rcl test jp dec cwtl jb dec adc push ss mov pop test inc outsb jmp mov fs repz sub inc push mov jae push or adcl out or int3 iret push lret push or loope gs and daa stos addb dec rolb and push jmp push insl push inc sbb cmp lods pop fs inc test (bad) and or jae xor dec pop push dec mov shrl das pushf not movb call movb call push cmc pushf sub stc cmp pushf movb pusha pushf lea jae push mov lea jmp jmp pusha jmp aaa mov inc lcall push subl in fnsetpm(287 andl (bad) int3 dec repz ds cmp pop out sub aaa test dec ret xchg fcoms sahf lock movsl insb cmpl mov (bad) rolb (bad) (bad) mov test aaa lahf repnz sbb (bad) inc pushf inc imul (bad) xchg mov pop repz aam jmp sub sbb push pop lret adc test jo mov xchg jo decl (bad) xor and loopne daa test push loop xchg pop fucomi icebp cmp xor sub fbstp cmp test ret jecxz or sbb jno dec pop push popf cmp popf xorl mov ret pusha jno inc jne mov mov sbb mov aaa mov cmpsl movsb cld ljmp bound in inc aad cmp dec xor inc dec imul mov stc push pop cmp rorb bound iret mov pop mov mov sbb sar das fwait jg (bad) hlt or fisubrl xor bound insl je jnp sbb push stc push ja pusha test cltd jae lahf inc inc packuswb clc and stc dec (bad) scas push icebp in sbb cmp out (bad) pop mov lock adc jp shll lahf pop sbb cmp add mov inc fstpl popf lcall (bad) lods push push mov (bad) ds lret fcmovnu es xor push (bad) mov adc jg mov or movsb sbb fsubs mov jle inc cmpsl leave mov repnz add sbb adc and not or int mov test int3 jg insb loopne mov mov mov clc cmp call pop fistpl les sbb jmp lahf mov in xchg lods lret adc lock (bad) ss adc mov adc pop jnp mov xor fisubl sbb xchg arpl ds inc add push push (bad) mov inc jge push (bad) push into lret addr16 push pusha aam mov xchg cmpsb insb test dec mov dec sbb mov insb negl hlt jns fildll sub in mov adcl pop loop xchg mov pushf insb je andb dec cltd sbb scas lds dec xchg add inc popa adc popf mov lods adcl sbb cld out pop pop pusha aaa or mov cmp imul sub adc jns mov in or into int3 aaa decb sbb ss aas fs xor cwtl cwtl outsl xor sub arpl inc mov add mov sarl sti icebp insl push sub rolb aam popa repz lock and and sbb fisttp bound arpl jl lcall jl jnp leave push incb dec ret adc in push (bad) lock inc imul out mov inc xchg es stc call jp dec fildl sbb add popa dec dec outsb jo int mov stos (bad) scas scas or out lods sahf jg push test into dec cltd lds adc push movsl rorl xchg aam cmpsb stos gs mov lea jae adc into lea (bad) pop roll mov mov cld jbe jp lret inc push xchg cmp pop xchg pop fwait jo xchg movsl out insb push outsl inc mov arpl push je ret out lea inc rclb inc cmp xchg (bad) dec xchg gs into xor das and mov (bad) loop jle iret xchg xlat adc mov push dec scas inc lods ljmp (bad) icebp inc mov (bad) jns pop xor imul and call push mov inc shll mov pop ja jg cmp fldl mov push div xor mov int3 xsave (bad) cli push imul icebp xchg pop and inc add test test inc ja inc jnp xor adc (bad) repnz addr16 jl adc push adc mov outsl inc mov jbe (bad) inc cmpsl arpl sbb add repnz lret test imul pop test xor inc add push xchg ja pop lock in iret sbb test sbb xchg lea cmp je mov inc pushf pushl call xor inc push or xor or outsb arpl add out mov add push outsl push inc jg adc dec mov loop das mov push test les mov aaa sbb mov dec adc sbb sahf push fwait inc das add adc cwtl xchg push mov (bad) lds jle jg ss cli aad jno jl cmp adc lret std fidiv movsb jle or mov mov daa inc and pop mov push negb mov push rcrb mov mov jp rcr pop jp sbbl mov (bad) cld or add int3 sub stc add call sbb inc scas push sbb (bad) lret add das fsubl adc lods ret or in xor mov insb subl loope and adc imul mov xor lods inc jle mov mov and push adc mov pop adc aaa mov ss paddw outsb addr16 mov push sbb dec dec sbb mov stc mov pop push out (bad) test xchg out pop push jge jecxz aad test scas shrb clc mov out pusha push adc push push push cli push std jl lahf sbb fstl in rdtsc movsb ror cmp add inc push bndstx in aad and cld mov mov ret out mov adc (bad) or scas mov outsb inc dec cmpsb xor out adc mov sbb cmp fs or jle pop inc mov js xor setnp ret das dec (bad) cmc push leave pop movsl adc cmp loopne jnp lock fiaddl out xlat or mov sbb cld xchg xchg in cli push shrl fsubl adc jmp mov sbb add cli xchg test fadd jae fsubrl xchg in rclb stc push lahf arpl loopne push push pop xchg dec dec mov (bad) jge enter pusha movl jmp pop iret mov inc mov inc mov pushf jecxz loop fwait test in pop test in popf adc xchg jge fiaddl mov movsl cmp mov jnp push mov out es (bad) (bad) aam (bad) cmpsb mov data16 hlt mov in cmp lret outsl ja sarb mov adcl stos mov aam dec push rolb cmp in fisttpll pop cmpsb push stos dec sbb mov outsb mov rcr fiaddl sub dec xor sub dec jns push push cmc dec push dec icebp and pop mov ss jns jmp jnp test sbb into pop dec lret rcl test jg out jbe es xor movsb adc lea rorb lds jmp push negl sub loop ret lahf inc roll lods ja dec into jnp jo cmp lock mov jne mov jge pop add (bad) test or sti hlt xchg mov insb (bad) push movsl cmpsb (bad) lea sub jg cmp mov xchg (bad) jle push (bad) lret and inc and lock (bad) or add sbb xchg in mov pop lret mov add add ja add dec add add mov cli ljmp and add pop add and or inc jmp sub adc cld jae dec insb jle and aaa out mov sbb bound jmp adc ljmp insb xchg add push pop orb inc test pusha or jg pop sti xor dec dec pushf dec icebp push cs popf and mov in jnp nop outsb sbb es daa dec pop adc lds mov add xor jl mov cmp dec js jnp insb mov fsubrl mov nop out insl les mov cmp (bad) adc inc repnz or inc int int inc mov push cmpsl pop or out sahf lret repnz cld mov add dec pop stos mov in fdiv inc cli and mov sbb pop mov fucom dec lea imul adc in lods and dec adc fistl sahf jge lock inc cmp adc xchg lods mov adc jb adc and call js lret fdivs fucomi lea push pop je cmc imul iret mov xchg lods movsl cmp xchg cmp jl inc add imull and or sti nop pop imul or icebp dec lret add sbb outsb push push push push mov lret sub pusha xchg xor (bad) (bad) neg mov dec mov xchg fsubl (bad) jge mov sbb mov xlat jp aaa dec jae add fsubs dec pop (bad) pop adcl mov xor and add int3 mov add sub pop pop ret add or data16 adc and mov outsb in xchg ss sar lods aad inc jp push xchg arpl xchg mov jno decl ret pop mov inc pop movsb mov cmpsb movb dec bound decb pop leave mov stos mov out (bad) (bad) fildl xchg inc scas or mov xchg nop lahf pushf adc cmp mov pop dec xor fcompl pop jbe cli mov cmc xor or jmp cmp xor lcall push (bad) loope repnz push (bad) in iret scas loopne clc push inc (bad) sbb jmp lea call pusha jmp jmp mov jmp lea call push jmp movl mov push pusha pushf lea jmp stos push jmp or or add sbb rorb adc push mov or (bad) loop fisubr jne sarl pop scas sub bnd mov sti lods call out add or ja jp mov sub aaa mov mov lahf mov lods mov inc fucomp out jns fs enter mov mov cwtl pop lret imul push call in cmp ljmp push leave xor out aas push push mov ds jl dec cmp sub (bad) push lcall mov push call lcall push cmp sbb sbb cwtl pushaw shr test add pop jge es xor pusha mov push fs lret ja popf imul xchg rorl inc cmp mov mov push sub xor fldenv mov imul mov test das hlt mov aas mov add (bad) lock jb adc mov popf xor xor and adc lods pop mov lock push into sub int and aad cltd adc fsubrs push adc movd ret mov push adc clc adc or mov xchg and sbb add jge cs (bad) in je cld cli jns xor test or andb jp push push cmc pop jns aad cmpsl pop insb mov mov push lret sub push inc fwait mov das adc mov das jecxz std mov gs pop gs sti mov xor inc inc cs mov lret cmpsb push aas sub cmpsl or inc mov movsl adc cmp mov pop je jge decl xchg gs repz sbb mov mov je pop sbb inc scas js mov jmp sti cmp in xor cmp popf sbb stos cltd fs mov stc vcvtsd2si mov fdivrl cwtl in adc mov test add pop jb dec fdivrs push insl fistpll lods cmp test sub sbb sbb pop nop pushf dec hlt push pop je pop pusha stos ss std and movsl jp inc fsubrl jno bound movsl fdivp or notl sbb sub push lock push push adc inc adc imul adc stc xor mov ss xor xchg inc (bad) bnd call dec inc jne mov (bad) ja inc loope lods movsb cltd push std fcmovb decb dec outsb insb bts fidivr dec adc insl sub sub je,pt pop push push (bad) mov sbb add fdivs pop sub lret hlt cli jno and cmp outsb cmc repnz enter aas mov cmp mov outsl mov jo pop js inc mov add pushf pushf mov push pushf lea jmp pushf stc movb pushl popl pusha cmp pushl jmp rcrl mov sub popf xor ljmp (bad) aad into xchg mov incb push mov fs addr16 push lcall ret sbb movsl pop fild insb std (bad) lock xor pop mov lock inc xchg add jnp add dec cli loopne testb arpl pop (bad) sub cmp and add or or sub mov mov ret jecxz shll (bad) lods mov mov andl push mov sbb push jae push mull inc mov mov add insl push pop cmp jbe jmp pop sub dec xlat jo sbb mov sahf jmp jecxz sbb sahf das ja dec xorb leave (bad) prefetch or jno mov sub insl xlat mov push push enter push mov dec push pop ljmp inc (bad) arpl sti cmp pop jno js orl mov lods lcall mov sahf push mov and push mov mov lea call mov sbb xor jns add lods insl std cli xchg ret cmp xchg sarb cwtl mov cmp push adc cli (bad) not inc enter mov mov lret sbb icebp jge repz loop mov inc push rclb popa cltd dec pop mov lds push push or cs (bad) cld stc pop mov sbb jb icebp fwait dec jp aas xchg fstpl divb or sbb out sub xor inc lea and cmp emms jnp das lret or cmc mov adc mov mov pop jmp iret add stos leave push mov repz xor rcl ret stos leave cmp push jge rorb data16 stos in popl xor add pushf lock loopne dec and jbe dec mov repz sub cwtl pop jns sbb push or fimull sbb inc fdivrs divl iret fcomps call lret hlt pop out clc dec xchg fnsave ljmp (bad) mov adc push xlat mov (bad) jo cmc mov cmpsb sub mov inc loopne int push pushf xchg icebp push pop lcall pusha mov lret in les or sbb dec fistpl pop jl jno rclb iret sbb sbb lods adc fstl frstor mov mov dec mov sahf mov fs and xchg lods mulb dec cltd test inc stos pop faddl shl enter enter xor jmp call movzbw jmp and sbb lret cli jo and push pop (bad) cmc add rcll dec cmp inc inc into cld sbb sbb call xchg inc or hlt add iret mov pop out into inc je or dec xchg sbbl es xor clc sbb jl push leave pop mov (bad) in pop xchg xchg fprem xchg gs adc lcall fsub sbb and sub dec (bad) rorb push enter mov adc fdivs mov sbb gs push in push mov lea ja pusha call sbb or sbb inc lock and dec push xchg out sub lret or mov mov or fnstenvs push jle dec ljmp sub out adc xchg jb ljmp hlt sbb or ret in inc divl mov add or jle nop aad jbe fcoml lds ror or mov cmp cmp lret je test icebp push fwait movsl mov mov mov lods cmp dec push pop fistpll sahf or add lea call jmp call mov add sbb rcrb out jbe inc popf mov mov int loope call pop lods add xchg dec into and icebp fmull lret cmp lock dec mov push mov sbb dec mov xchg addr16 and and lea out push movsl mov add pop dec das sub adc fsts int test fildl dec cmp mull jge or mov adc push movsb cmp xor sahf ret ljmp jmp cmpsl mov push sub mov pop jmp jo xchg sbb cmp and jmp mov repz call xchg cltd fiaddl je lahf fiadd mov aas inc insb dec jns mov imulb adc int jb pop pop imul test mov sbb or xchg das xor ss mov loope test mov xchg lods and jb sbb or add movsl loopne lcall or test push sbb sub das test (bad) popf mov lret inc or aam lds loope,pn stc int3 jno mov fcoms dec dec jne sub dec (bad) testb push lea xchg adc (bad) (bad) jg mov nop mov mov sbb dec push pusha adc mov call jmp cmc pusha lods aaa cmpsb jae lcall push negl sub jp cmc rcrb rcrb adc scas adcl das fistpl mov movsl dec stos mov pusha pop jne dec (bad) mov ret ror and mov adc movlps jle jno leave mov gs es mov and jb push stc test pusha cmp movw lea ja sub add or add sbb sub mov test test cmp push pushf movw call mov bt sar add add sbb pusha bt mov stc clc mov test call lea je test mov jmp jnp dec mov jnp dec jo or js clc outsb cwtl ficom sbb inc fimull adc scas in dec lahf pop lcall aas scas mov adc imul loope push pop ret fwait xchg mov cmp sbb je ret adc loop ret mov mov xor jbe aam push out fsubrs repnz inc mov pop xlat loopne inc add cmpsb pop fildl mov jg mov push in fsubrl and pusha test adc cmp loope rcrl into iret (bad) xor or push jbe or (bad) push faddl dec adc mov push push pusha mov lea jmp xor sbb insb xchg add andb adc mov fwait mov pop cmc sbb jmp jne in sbb popf faddp cmp jo adc or mov js aaa adc out in push push mov mov mov and push jp (bad) fdivrs xchg test mov ljmp ds pop loop or lret sub sub pop fisubr out stos sub das and push pop mov xchg sbb inc mov push out (bad) fistpl push pushf jmp cs fcomi xchg mov hlt ret and and into inc repnz adc push mov mov shrl mov xchg pop xchg cs (bad) jl cmpsl mov dec insl sub mov dec movsb insb pushf dec push ret jae mov in ret inc pop jmp jbe mov push cmp scas jo dec pop int3 pop enter xchg mov imul gs (bad) pop data16 aaa lcall dec out jb test cmp jne aam (bad) jnp shlb and call call pop lods pop (bad) sbb inc ja (bad) jl leave xor outsl pop outsl xor pop fs push popf xor into sbb push bound dec test lock ror negl jo shr jnp mov mov pop or xor adc mov ffreep push dec mov inc dec push lret adc stc xchg test fwait jl adc nop push adc sub jne xor and (bad) ds jle inc repz dec jne out stc or xor (bad) jb roll inc lahf push mov and insl or clc push push push pop jg icebp cmp jnp lds adc std mov cmc sbb pop jns mov dec jge and mov nop in lcall dec jge jno pop mov or push lcall call and std flds out js (bad) (bad) jno pop fldcw aad adc mov xor or pop push int3 mov loope mov dec nop jns out xchg sub call das mov cmpsl imul cmp ret fnstsw mov outsl in cmpsb out aad xchg jge insb mov cs ds jp pop mov sub xor xor leave push dec adc out lods xchg mov inc imul cmc or nop test test jle push jne js or movsb int enter cmp in loopne bound leave lret sbb insb cmpsb lret lahf fdivl clc (bad) scas mov xchg xchg mov popa mov mov divb jecxz mov push lcall push jecxz gs mov (bad) faddl jno push not in or inc scas mov mov andl and inc sbb js je pop sbb imul iret (bad) jmp xchg cli cltd (bad) cmc cli sbb mov push (bad) sbb ficoml xlat inc ljmp or stos or pop inc mov jecxz dec lods push fsubr xchg outsb cmpsl aam mov xchg test fistpl inc mov les inc imul mov mov and sub stos adc xchg imul inc push out sub sbb adc mov out and pop lcall adc or loope mov add xor jnp dec sub cmp and push test in xor fdivr mov (bad) (bad) int3 in in into inc pop push add inc mov movaps outsb int sbb push sbb inc or hlt and cmp lcall popf insl sar mov cmc aad inc test scas jo jbe xor insl enter fcompl xlat jns mov call push jecxz lock mov ja xchg test les jmp lods ss (bad) in inc mov enter dec jbe pop sbb jmp fldenv xlat xchg mov sbb mov ljmp lea call pushf push lea jae pusha push mov setne push inc movb inc not pushf mov call scas mov jno sbb dec mov cvttps2pi cmp push mov sbb imul pop and pop mov rclb ljmp cmp jo jl jmp mov and mov lcall push push stc jo ljmp mov xchg and and jae stc pusha clc pushl cmp pushf push mov lea ja not dec pushf inc lea inc setne jns inc add stc xchg sar push mov jmp pop outsl movsb js sbb std call adc pop bound xor mov xlat inc addr16 aas adc push or ja out insl call adc (bad) and in or xor pop xchg aam or inc scas sbb aaa and mov rclb out loopne push bound sbb or add divb mov dec mov mov jge (bad) stos out ljmp cmp imul pop xchg in ljmp into ss sub jp mov insl add dec push aad mov loopne fsubl xor scas xor lcall pop iret xchg mov inc jns fistpl movsl popf push add repnz and cs pushf imul (bad) dec push sbb sbb mov pushf gs fwait icebp loop mov xchg out enter adc mov negb rclb into fisubr das cmpsb sbb inc and pop push mov pop mov inc and jno and js aas jnp cltd leave cmpl xlat push mov addr16 mov mov (bad) xor pop and inc mov mov lret mov mov mov inc bound jnp mov scas add mov mov ds fsubrs mov cld add rsm push in cmpsl lods fistp fld1 jmp sbb aas and inc add cmpsb pop stos js pushf dec dec dec addr16 lock stos mov pop addl inc cmpsb jo gs jne and cmp or and xor fisubrl call push add ret iretw mov fstl xor mov pop inc scas pop repz mov dec jg nop daa sbb push data16 sbb xor mov inc (bad) into and gs push jl sbb xorl loopne ret stc cmp pop (bad) lock jnp jmp dec jecxz (bad) inc outsb lds and mov xor lea call fisttpll mov (bad) in xor faddl jae sub xchg sbb outsl nop add popf xor test adc and mov inc leave (bad) mov or sub jg add dec fdiv ficom and push pop aam fisttpl insb enter push repz fidivl into add aaa dec or loopne loope inc addr16 lret pop jge mov (bad) (bad) mov xlat cmpb sub clc aas lods sbb repz sbb fimul mov inc push cs leave shlb xchg push loop sbb bound aas inc mov and daa mov add push rorb sbb dec stos fcoms repz xchg or test sbb mov lods aad mov cli sti or mov int3 push sub pop xchg test es std mov comiss clc into inc pop adc (bad) cmp cwtl rcl gs stos fs push mov fimull subl dec sbb mov sub rcll clc pop add clc ss push sub sub shl scas (bad) xchg mov popa xchg lret cs mov enter sbb xor or test cmc ljmp pop cmp and jbe add pusha jne cmp jne adc bound and mov faddl pop and pop cmp or cmp ret icebp sbb xchg jmp sub test dec nop loop mov insl iret pop cmp std shrl (bad) add int3 xor leave sti push inc outsb cmp es out push shl jo pop cmp clc dec paddd ret popa pop mov push scas stos mov shll push in pop mov mov das test adc mov std and sbb sti in rol mull call xlat lock xchg add and add hlt push fs adcl mov jnp adc popa aaa lock (bad) idiv cpuid inc in jnp pshufw xor lds mov push mov aam jnp sub push mov xor cmp jg fmuls dec je sbb sbb pop cmpsb aad jnp add mov outsb push insb popa xchg push mov dec jmp inc cli push lds dec or nop in bnd movsl inc jl loop in (bad) push jmp icebp sub inc (bad) sub lahf fsubr xor or sahf pop push mov sti pop xchg (bad) repz add mov mov shrl pop sahf fcmovne pusha pop pop shll cmc cmp inc dec out mov inc add and or jae out out nop sbb movb gs xchg add call pop rolb mov jp cmc mov xchg fucomip sbb pop fs addr16 ficoml push daa mov ljmp dec mov jb fisttpl in and and stc fiaddl xchg insb dec (bad) mov or in sub mov xor xor and js pop lea xchg sbb jnp or sahf and rol int3 jbe pushf mov adc lret jnp notl gs insb into lahf (bad) cmp push pop (bad) add inc pop int xlat ljmp fist mov push sbb lret xchg lea (bad) popa adc adc lds inc sbb or aaa sysenter (bad) pop insl aam repz jo jle clc ret sub fcompl xchg int3 sbb movsb mov aam fsub ja stos sbb add decl xchg mov lcall clc ror dec add sub btc add bswap mov inc push xor mov stc call fwait imul sbb push bound gs pop cs mov bound jae and mov push mov pusha popf ret pop pusha enter enter or push imul adc add stos inc push inc movsb pop and mov arpl or (bad) (bad) adc repz jmp sbb sub ficompl pop cmp sbb sub daa iret pop push adc lods add jecxz sti push nop push outsl adc jns clc lsl pop xlat inc add scas pop add (bad) fmull mov xchg cmpsb stos leave je pop fs cld rcrl fidivrl adc mov inc fildl or jo lods subb mov je push ret sbb xchg (bad) aas (bad) das ret shl inc adc sbb scas xchg (bad) stos sub inc imul aam popa adc dec shr inc lret in xchg in push aas idiv pop notb imul jg mov idivl or sar repz sbb dec mov enter xor and aad insb cmp add ss or call mov les xor out inc mov (bad) test mov lea ja add sub sar or add push mov stc sub sub pusha mov movb bt bt test repnz pusha call xor push inc das sbb jnp adc stos cmpsl (bad) push jb pop mov cmp lret scas mul sub push xchg fbld mov mov lret lds mov mov mov mov or in ss loopne or stos xor rol insl lock cmp inc imul test dec ja sti mov repz sti xor mov lods movsb fstps mov xor pcmpeqw aad mov imulb dec lcall mov and shll pop movsb mov pop jmp pushl test cmp cmp setl jmp call sbb or mov and mov cmp aam xor test and jl and mov (bad) fbstp shrb adc mov popf inc and addr16 imul in out call sub cmc adc (bad) jecxz cmpsl dec mov mov push jl and inc daa sbb fbstp pop jmp cmp rcl aaa jmp mov inc in and mov jno jb adc jb jne sbb dec xor xchg es and lea pop and push mov sbb mov cmp xchg popa insl xchg xor (bad) dec cmpsb (bad) shr in pop and jno dec imul dec out cmp test shll add pushf push inc popf dec aad int3 or or xor roll cmc test leave test cmp iret cld out cltd js (bad) inc jp pushf dec fildl sbb and xchg ljmp push mov int3 pop out xor cltd ljmp mov popf xor nop rcr push mov (bad) pushf cmp mov xchg mov cwtl adc cmc out adc push test inc pop in sub inc add loope jmp in aad stos adc dec pop outsb hlt cs or popa xor jae pop xchg imul inc and pop pusha jl sub ficompl imul gs jge,pt jno add adc inc test sub inc sbb loop out lds rol dec adc inc fsubs jl in pop xor push (bad) or sarl test pop ds xchg pop mov imul and mov mov adc mov sbb mov movsbl imul outsb imul decl int3 add mov sbb inc fimul movsl cld fild jmp push (bad) push adc push xchg xor push push inc mov stos mov jb xor lret sub (bad) hlt jmp or out pop xor aas sub lcall push into mov vrsqrtss push repnz push xor jp rcll or xchg out add fcoms xor pop shr imul mov push cld ss out mov adc cmp mov sub pushf movb pushl mov lea jmp aad int sub inc aam mov xlat sbb mov (bad) in jl das mov ret wbinvd out ret in ss xchg jnp leave out push mov lods out adc mov outsl dec push dec jno test or stc jne fisubrl stc mov shufps mov pop xchg mov sub mov icebp imul rcll lods mov pusha fmul dec adc pop shr dec xchg in dec xor sahf and lret mov (bad) aas ret lds mov xor icebp into sub ret fdiv loopne cmp add xor inc add sbb popa xor pusha inc xor loope movsl (bad) mov dec sbb xchg mov call inc and (bad) mov jmp push adc clc (bad) and sbb add into jne inc dec enter out cmp add orl fidiv std mov outsb mov inc jns cli fisubr xor cmp pop add xor jmp aad test add fbstp sbb jmp dec mov push fistpll gs xchg sub mov aam sarl mov xor cs insb add sbb ja es and dec enter (bad) xor or jo add add lret fdivp pop inc mov sub iret addr16 hlt cmp pavgw add sbb mov scas (bad) sub push jg lock bound cs popf xor loope loope pop cs lahf repnz cmp sbb daa jbe in xor mov (bad) and mov je adc inc xchg dec push std sub inc sub push loopne dec cmpsb es pop cltd adc call sub mov sbb mov mov xor jbe test std insl jb push sub pop int jb pop mov je push xchg mov (bad) fcomps sahf mov add clc test dec dec loopne leave xor inc add mov sub or insb cmp cmc loopne mov cmp cld and (bad) lahf in ss (bad) sbb ds jle xchg test mov jbe fcompl bound out mov push lods cltd call cmp add in mov adc dec mov ja ret push outsl mov ret sub mov call outsb clc js jp (bad) rcrb scas xchg aam ret jl,pn movl cmp cmp (bad) xor xchg mov jbe sahf jo ljmp fwait je icebp sbb fdivrl cmc enter test or (bad) mov push xchg mov sbb fidivr add out or lea sbb daa out dec xor outsb jge mov sbb push sahf or mov std loop push and mov xchg test xor sahf cltd xlat pusha fist pop fwait xchg cld mov push loop jae mov push imul arpl mov pop fidiv call pusha shrl dec pop cs push ret add jecxz push (bad) ret cmp sub cmp dec adc and or or test sbb loopne and (bad) cmp pop mov fisttpll ds pop and jle pop inc in mov cwtl (bad) xlat enter dec or inc mov cmp mov dec into or aas pop iret aaa sbb (bad) mov dec (bad) (bad) cmpsb mov push mov sub push jae cmpsb (bad) mov push ffreep push outsl mov int3 jl lock scas sahf arpl sbb rcrb sbb add stc (bad) sub xor mov mov call out add cltd outsw (bad) bnd add sar dec cmp ret cmc jb fimul push push sub fsubrs notl lock add xor and fs xor lret out push lock out mov pusha rep jmp std ljmp fistp ja dec push repnz lretw jmp xchg sbb mov aaa or mov push pop sbb movsb cmp daa fsubrs push lea ret sti loopne insl in pop xchg jbe mov (bad) cmp (bad) or (bad) dec cld sbb in jbe and shrl xchg adc jecxz es fs ss scas fcoml ret into xor and mov inc lods add lahf or ret fbld sbb sub js push adc rorl hlt movsl push cli pushl cmp ljmp inc (bad) cli iret pop mov (bad) lcall int fstps mov cmp xlat xchg push sub jne jb imul nop mov sarb in mov inc lahf clc push sbb ja jle jns or mov mov in and push push mov cmp mov add fnstsw mov mov jl fcoms pop mov pop mov pusha sti inc push outsl out cmc cmp cmp adc ret test xchg imul ficompl (bad) cmp mov lcall push pop pand sub fcompl enter aad rcrb icebp test pushf lds cmp test in pop popa pop xchg dec mov int3 es das mov subl xor ja jl in out mov jae sbb popf push dec dec mov out xor sub mov sbb aaa adc stos mov mov pop jb icebp sub or ja mov cmp xlat call icebp and ds jmp nop loop leave mov mov sub rcll xor inc pop scas pushf and scas mov mov call or leave or dec sub lcall sub lods sahf les mov movsb lea (bad) xor fdivrp mov push mov fwait out lret rclb inc mov (bad) (bad) pop pop xlat xchg ficom ljmp (bad) sub dec in fsubp dec cld lds jge dec (bad) dec jno push jl stc cmpl and adc fdiv and repnz sbb stos stos jl mov or and xor (bad) or loopne push push in xchg xchg sbb xor inc dec fildl mov mov iret in andl loope mov inc ret push clc imul cmp aaa pop mov clc aam aaa int xlat push push jnp aas sbb xchg dec pop es popa pop shlb pushl mov adc cmc stc jne push or in dec jb sahf iret loopne sub cmp test mov cwtl movsb ss in js and add icebp push popl sub test push xchg ljmp pop xchg mov inc pushf inc xor inc addr16 aas mov into out mov das es jp push cmp mov movsb insl and mov inc (bad) xor push jnp push xchg add out enter fnstsw inc mov pop dec lret cmp inc xor push in jge push roll mov std or jbe movsb cmp mov xor fld test imul out data16 add in negb je add and outsb xor mov popa cmp inc pop sbb insl pop jle mov jno add push adc inc mov ror adc push mov or jg lret pop pushf adc ds xchg movsl clc mov add clc inc push jne mov push les mov (bad) leave and jno inc xor jge inc hlt sbb xor adc (bad) ss xchg addr16 loop pop pop sub jbe lahf pop gs enter adc jl inc repz jl dec mov jg mov (bad) cmp sub jge lcall stos jo add (bad) out jle ljmp fbld pop sahf mov (bad) jmp clc scas mov movb rorb pushl push inc xchg ljmp in mov add jo sahf in cs or push iret add cld jmp lret fisttpl or mov xchg les ret fidivl push sbb prefetch fmuls std push or mov mov dec (bad) mov je stos dec mov jp test cli mov pop (bad) push mov dec daa scas fs leave mov xchg lods or push insb bound sbb lahf dec nop sbb dec (bad) pop jnp sbb cmpsb cmp into push stos mov cmp popf xchg out mov inc pop (bad) push add test les ficoml (bad) mov jmp sbb and fisubl (bad) jne cli mull mov not inc popa call pmaddwd sbb adc or mov je or xchg andb ja sub mov fwait jnp jle out cmpb xchg cmc movb stos push push loop cwtl mov (bad) pushf in data16 testl addl sbb movb lea jne stc mov test pushf sub push pusha pushf lea jmp lea jae call pusha pushl mov lea jae push lea jne push jmp jmp push mov or sbb mov mov mov fadds lcall pmulhuw (bad) push jae fsubrl sar mov add (bad) cmp lcall pop push imul outsl lods jp and ret cmc cmp mov mov inc mov push test pmaxsw adc insl push repz mov or jns jp stos adc xor inc xor and pop push sbb roll jg std in inc gs add xor stc cmp sub inc mov popf xchg pusha xchg dec aas sbb cmp inc sub je xor int hlt mov das scas test (bad) jae mov cmc fdivs xchg stos push test cmpsb sbb stos mov mov add das mov inc ja fwait sbb cli or aaa lea lock sbb test mov lret pop fisubr or (bad) mov cmc and sub cmp test movsb adc popl and (bad) mov mov jnp and add jge out scas or mov imul cmp sub inc ds int3 adc sbb ret mov outsl pusha addr16 pop dec mov inc xchg inc xchg dec mov ret ffree ljmp add insb mov sbb cmc cmp jge hlt cmp into daa lods popa push stc push stos add or movsb jge cmpsb dec cmc cmp pop add cmpsl push pop push cmp mov mov in pop jo repz test ret or ret repz push inc add aas nop and pop jmp xor push mov sub dec xchg fiadd loopne andb dec cmp repz adc sbb imul outsb addr16 das cmp insb dec pusha into inc pop fs mov cmp enter fldcw fwait mov pop pop xchg or (bad) ret mov pushf divb cmpsl sbb fsts sbb push push pop repnz xchg push mov add mov flds jmp pop pop int3 sbb jecxz push arpl inc repnz mov lret cmp loop in fwait jg das insl call pop (bad) notb jle,pn daa mov jmp jb fwait int data16 in cltd (bad) sub mov sbb je dec jb (bad) add pop lds dec jge paddusb iret rorb push cwtl inc and cs sub into repz cs jg das sub jg (bad) add mov fiaddl sbb bound lcall or jl jae push or ja,pn push pop xchg jl gs mov cmp test jl ljmp ljmp and cmp adc sarb sbb or pop jbe pop mov inc jne and mov lods cltd shr mov jo xor xor ret sbb fst inc addr16 pop sbb mov xchg cltd or sbb xor pop in shll out fisubr pop sub popf sbb jmp rorl (bad) out mov fstps mov clc and mov and inc mov ret andb stos decb cmp lock mov jp popa int3 jno (bad) pusha call add jnp cmp inc mov pop and popf rorb cmp ret mov imull cli jecxz pop sub mov sub jo mov dec mov rol and mov adc sbb push sbb mov and cld jnp addr16 jle js out and add fidiv imul add call dec scas mov jo jae mov xor and loope adc sbb inc pop (bad) xor into loop dec push add inc mov ret inc inc fisttpll das xchg insb enter enter sbb mov stos xor subl sub fdivr movsl lret mov hlt or jns fistpll das xchg mov jbe cmp xchg jne push jne push or aad jge idivb xchg aad sbb pop mov sbb jmp push mov mov mov mov iret push sbb mov jg dec out pushf xor in nop dec jl cmpsb pop movsb mov stos mov cmp int3 jmp mov lods pop mov test cmp jge dec add and (bad) daa xchg leave mov xor movb pushf pusha mov mov pushl ret push lods sub inc sbb pop mov add clc daa call rcll insb pop imul add (bad) mov sahf adc lods stos or inc pusha addr16 dec pop das sbb aaa inc les cmpsl push and cmpsl in xchg arpl sub mov pop cld into movsl (bad) loopne cmpl movsb popf push lea call jmp mov push movsbw call jmp inc popl inc sbb imul dec cmpl push push adcl xor (bad) mov mov fsubs pop cmp dec pop subl mov cmp lcall xorl push pop inc pop ret xchg test cmp pop fnstcw addr16 and mov insb insb jp mov das lahf pop and (bad) fild hlt and iret rcll adc in lahf mov les xchg (bad) push scas inc aad and mov mov test lods lock sbb outsb xor pop loop xor pushf test movb push call repnz add in jmp and cli loope xor leave add push sub dec cmpsb jg outsb decb ja repnz jp inc mov js dec (bad) repnz mov rcrb cmp push inc rcrl rclb jl fwait bnd loope pop ljmp xchg (bad) out cmpsb xchg push les leave nop fcoml insb cwtl das les (bad) jnp dec cwtl lds and mov jl mov ffree mov lahf arpl mov les sbb sbb outsb in push insb jg sub jmp xchg fidivrl jmp fnop and sbb (bad) repz xchg jg loop mov and cmp jbe ljmp jl out data16 jae inc jg aaa push jg daa scas dec daa inc mov or mov lds cmp dec mov adc jge mov cmp pop (bad) xor cwtl xchg mov daa outsl xor inc fsts ja (bad) imul xchg mov mov xor or mov xor jmp inc stos cmp and push aas rcrb pop push gs jmp aaa push clc xacquire and sub push outsb int xchg dec inc mov xchg loop cmpsl inc jp pop push ret enter pop mov mov and loop sbb push lcall mov imul add adc js push pop push addr16 mov insb cmpsl cwtl mov test mov pop sub mov (bad) xor fnstcw and add loop adc fimull (bad) repz add es addr16 scas pop sarl mulb fadds dec inc mov jns jns lods in xlat mov push loopne out adc loopne lea xchg xor mov es test xlat les jg pop fmuls xor lea lds jb daa cs lahf (bad) pop mov sbb xor pushf fabs add dec jns ljmp popa push or mov lods xchg push aad xchg inc data16 idivb push mov inc mov scas mov wrmsr (bad) rcrb mov and lahf inc movsb or adc stc mov pop aam gs movsb popf fsubl out test inc repnz mov jl addr16 clc inc mov out cmpsb int repz push mov or dec push in lods arpl roll xchg cli jmp cld cmp jl jle (bad) jmp adc in inc sbb (bad) cmp mov lds inc sar mov roll mov dec xchg stc jmp adc call mov aad fildl cmpsb mov loopne std mov add outsl mov jno ss xchg test mov mov imul lret lock (bad) or (bad) imul xor aam enter sub ljmp mov or mov add add lret add nop std fsubp mov dec jp adc lea jae cmp setb mov shld clc xadd mov btc sub bsr cmp mov pushf xor jmp pushf call adc jmp sbb xchg (bad) (bad) repz mov mov push loopne cmp mov stos pop jo (bad) insb and int xchg pop mov mov cmpl mov or xchg mov int3 pop jnp,pt pop popfw mov cmp cmp jg addb leave adcl dec leave (bad) dec xchg imul orb dec lahf ss adc pop pusha idiv pusha rcll jnp ret inc dec enter mov jae sbb xchg loope adc aaa or dec and jno or mov clc xor stc movsl (bad) pop ret inc sbb jbe out inc scas and lahf sbb mov cmp idivb and (bad) dec scas cmpl je inc cmp mov push add ret lock clc out call pushf stos dec pop or mov mov fdivl add mov fldcw inc lods iret inc xchg inc mov jg cmp mov adc ret pop notb sub jp call pop lcall pop push mov xor or mov or adcl loop inc sbb push aaa in es scas (bad) mov xchg cmp sarl int3 sub dec loopne push mov push sub jno loopne mov inc pushf dec sbb std sbb shll imul dec push adc pop lock outsb aas mov jge pop mov xor push stc outsb faddl ds xor xchg dec mov ds push mov test push dec hlt adc and flds mov (bad) adc dec jp pop mov mov xor imul or test mov loop cmp and jne sbb jg in mov repnz and inc dec es aaa lahf mov jmp inc mov sbb mov loop scas xchg setbe dec lret loop pop repz mov mov or adc inc addb pop (bad) pop loope inc fwait outsw outsl mov fdivr jbe mov adc pop mov fadds cmp push push out mov xchg ljmp ja into push inc mov subl into lds mov mov sub cmpsl mov cmc mov jecxz add adc fldcw fwait sub (bad) jae outsl sub inc xor sbb xor sbb pushf clc jmp (bad) ss jecxz sbb add push sub mov leave lods jb cmp and jnp test das insl std dec jae inc mov adc inc aas cmpsl and lahf jae pop jbe mov insl mov sub mov xchg outsb in cmpsb dec je pop fisubrl add repnz out jle fdiv jnp insb arpl pop mov sbb sbb or sub xchg nop/reserved xchg cltd dec aaa popf push or and loopne aaa jecxz mov xor fdivr pop adc inc out scas into shll hlt mov insl std repnz (bad) in pop flds (bad) mov inc loope sbb jmp stc or push loopne mov hlt xchg mov cmpsl dec mov adc adc hlt sti add mov push negl shl mov pop scas ss jg dec je and (bad) cmc popf mov cli dec outsl push and mov das inc xlat test mov xorl mov fstps lds mov gs pop mov popf (bad) pop loop stos xchg dec lock dec and aaa xchg add loopne xchg test jge jecxz aaa inc fwait aas in inc push push sbb (bad) imul mov shl test or insb mov cmp and xor (bad) daa ret dec es fdivl push nop mov xor cld inc lods or push lods nop sbb ss jp hlt sbb push mov scas add inc gs gs imul mov sarl push mov ds mov scas in fadds lock mov pop insb xchg xor cmc inc in mov repnz dec call xchg sub ja pop jb adc aad lock ss and and cltd dec jae out test pusha dec pop add mov loope cs inc push bound pop fisttp out loope sbb clc or or and mov or subb pop mov dec iret cwtl fidivr loop pcmpeqd or mov scas int and mov popf cld mov out cmp imul xor jmp mov mov ffreep sbb stos and psrlq inc hlt or insl pushfw jp mov icebp pop rcrl xor cltd mov sbb insb push xchg call (bad) movsb sub unpcklps sub (bad) pop cmpsl xorb cmp mov dec int fstl inc push sub jecxz cli jle xchg cmp divb shrl mov mov mov loop inc pop mov mov inc xchg cmp fdivr mov ret test jmp push inc (bad) inc gs pushf jmp sub pop cmpsb xchg pop mov sub cmp inc stc pop sahf and rcrl outsl dec and pop push fs inc mov rorb add add mov xor add in repnz dec sbb (bad) fnsave and lods xchg gs adc andb or mov ucomiss sbb cmp push fist pop mov push data16 xchg jae stc dec fwait outsl aad mov push push test lds xchg popl sub and push cmp cmp adc dec leave lods sub mov sbb xor aas jle dec mov (bad) dec mov cmp sbb out or in sub xchg dec insb (bad) jmp not bswap jmp inc mov addr16 mov cwtl out xlat cld ficom jb pop jg push xchg mov jo arpl sub es sbb pusha inc pop inc adc hlt push lods jne or xchg cltd or in ja (bad) ja repnz add lods push cmc sysexit rcrl jae pop adc add popa psubb lahf mov xchg dec sub cmp lock push xor clc xchg mov out (bad) adc xchg mov cmp in sahf iret loopne enter outsl or js pop shlb dec jo pop int3 js xor inc mov int3 aad in pop xlat jbe sub femms add mov outsl mov enter pop shl movsb fldt adc ss clc cmpb push mov pushf pushf lea jne push pushf pushf lea jmp dec mov inc js addl dec cmp jle sub mov pop sub and inc arpl pop repnz jle dec cmp xchg (bad) int3 lcall mov sub gs bound jge push jb scas xor pop xchg lods shl add mov (bad) clc call in (bad) bound sbb push dec xchg xlat out cmp dec fs sbb xchg stos leave sbb xchg aas jbe nop loope mov mov pop arpl dec xor lret inc into add mov out das out rolb cmpb inc xchg inc cmp add and jb mov xor aad invd ret jb mov and je push lcall xchg cmpsb int popa mov push cmp mov leave repnz (bad) mov push (bad) movsl cmpsb outsb sbb xchg movl jp ljmp and sbb xchg sbb movsb adc enter bt movb neg jmp lret in lods inc push sbb jp sbb (bad) mov mov dec loopne call ja mov push mov sahf cwtl (bad) xchg mov jp jp jne ljmp roll scas hlt push ljmp or mov or mov outsl fimull out cmp cmp pop sub aam xchg inc fs popf push stc sbb shlb fbld push loope (bad) stc jnp pop jl xor adc inc mov xchg xchg fwait cmpsb cli pop lcall adc dec popa xchg mov and outsb cmpsl pop xchg scas adcl pop call push sbb cwtl mov or xor sbb pop arpl aaa push jae mov sub ljmp out xor push xchg xor mov test sti lods call sbb out fnop dec fldl fst fnstenv dec (bad) pop mov call (bad) aaa ficomp xchg sub shrb push or lods mov rcrl and xor int3 pop iret jge or push or test into dec out mov insl out outsb mov jae push mov fnsave fwait add repz dec jnp mov andl pop jae dec xchg mul mov rol jle daa adc fdivrl jle push sti enter jl gs cmp call (bad) xchg mov mov push loopne shrl or mov mov jecxz repz inc jge cwtl jbe add mov and jno and movsb mov push mov dec ret repnz pop mov les out cs bound pop add push mov imulb xlat mov dec mov push push ds aad lds mov rclb dec fisubr mov mov ja or arpl inc mov and sub push sbb cmp xorl sbb mov or mov out mov pushf popa cmp push mov jb push jge fist xor xchg int mov cmp sub cs jb inc rol or xchg test loop sub es push xor es sti loop sub lahf xor sbb out fsubr jecxz (bad) or sub sub lret sbb pop mov bswap mov add add popf mov cwtl test ds sub push out pop (bad) lock adc jb dec pop lea jle mov push pushf lea jmp hlt std ret sbb jae or subl outsl jbe xchg xor ja pushf movl sarb mov pop cmpsb mov mov dec jp dec xchg inc or mov cmp (bad) mov ljmp mov and mov rcrl jecxz hlt pop jp jnp outsl dec add pop jmp gs gs popa addr16 add in pop mov cmp call cmpsb jnp or inc das fcmovnbe mov push pop js add (bad) dec loope adc sbb mov lock mov push fcompl push std push (bad) dec fsts mov inc cld popa xchg mov inc ret and inc xchg adc lock rolb jo fnop call and jae cltd aam icebp rcrl ljmp pop pop xchg xlat pop pop dec mov jg dec mov lds nop push mov les add sbb (bad) clc push icebp xor adc mov fisubr xchg das clc popf int3 inc out je stos sbb mov out jne jo cmp cmp fiadd cmp inc adc xchg pop sub jno mov jmp fldcw push or mov addr16 add push out ret lret push daa sub mov cmpsl mov adc push pop mov cmp loop mov xlat jno dec add inc gs imul inc add mov inc test sbb mov xchg mov imul in popa push push adc xchg outsl push push insb lret daa push loop jecxz mov or (bad) ja mov and sub inc add fs lret inc pushf sti shll push test xlat pop jl pop lret add ficom out cmc push (bad) and out or dec ljmp mov stc in and xor xchg push loopne ja sahf imul pop bnd mov stc jle lea mov mul pop jge sbb aaa pusha lds xor (bad) xor cltd mov or mov (bad) fisttpll mov push test push pop mov sbb pop inc mov jl and and nop ficom enter jg xor imul and repnz jb and dec (bad) xor jmp gs sub mov (bad) mov dec sbb pushf (bad) cmp je fnstcw and fsubl (bad) cld aad mov aas fldt rclb mov adc pop imul inc push test lahf in push data16 or push call movb call push mov repnz pushf mov lea jne mov not lea call fwait int3 in add inc es xchg scas ljmp dec mov into mov xchg mov push inc jne es xchg pop add push fldt jecxz and in (bad) ss mov add in sub add dec xchg gs pop inc xchg test mov in lods cmp xchg popa sub rclb push fnsave mov adc pop jecxz,pt aaa daa and out jbe lds mov mov push jp loopne mov fisubrl sbb xchg push dec (bad) jae cmpsl push notb insb repz mov lret push lock cwtl inc inc hlt sub inc adc dec jl cmp jb paddsb lock enter mov and jne cmp arpl add ds outsb sarb jl dec test inc lahf (bad) movsl xchg jge into aaa cltd ja mov or xor aam lods insl mov ret rcr jbe aas xchg sbb xchg js mov pop sbb inc lret jno jns push inc pop jb cs cld mov jle icebp or and (bad) (bad) jb or add fcmovbe sub gs fmull add sbb mov scas push aas outsl jle pop pop xchg sbb or or addr16 negb sub bnd xchg (bad) sbb (bad) mov add mov and push std je test pop test xor leave pop mov mov dec pop push push mov ss out inc inc inc mov adc or push pushf jl scas hlt clc push movsl jno jno (bad) std inc xor sub mov dec jbe frstor sbb adc xor shlb aas add pop int mov lods lods fsin gs push test mov inc mov (bad) (bad) enter rcll repnz push mov pusha inc jge loope mov mov add pop addr16 pop add (bad) mov into test adcb icebp jo xchg testb and idivb xor hlt cmc sbb (bad) arpl pop xor cs add les and and inc sbb rorb mov call in data16 xor mov neg cmp jmp push insb sbb (bad) adc fsub xchg stos sbb mov mov adc pop ret sbb jle push mov adc dec sub subb ss lods repz sbb aad pusha in jae push and in lahf mov or xchg fsub dec out cmp test test mov lret rcr sbb popf stos mov cli xor call inc insl ret popa mov data16 test ret dec int3 cli dec loope fistpll dec cmp outsl popa mov push xor pop inc lea fldenv jmp mov sarl xchg lret (bad) jb jne sub cwtl in lods sbb sti cmp out call dec idivl int fidivl imul std lahf adc push mov ret adc hlt lret aam mov dec (bad) mov lret enter aad mov je mov mov mov imul arpl and sbb (bad) ja fmull xor insb or fidivl or notb mov mov jbe (bad) imull and adc in push ss xchg insl in jo test imul jle and popa mov jp dec fwait push movsl pop fcomi add in push std pop mov divb adc and sub mul mov push cld pop sarb (bad) cmp push mov ljmp ljmp jp push pop (bad) adc mov jns fiaddl (bad) out mov adc inc jo mov fstpl (bad) inc jmp outsb mov (bad) jmp leave pop fsubl mov es test adc js and xor (bad) and in mov fisubr push inc mov push push add mov (bad) and imul push pop xor mov mov iret shrl add jmp jmp cmp fimull sbb xchg mov shll cmc or add rclb adc call mov out dec lods xor cltd fs stos arpl push jge popa (bad) std or mov addr16 dec mov fs std sti or fistp mov mov (bad) lcall inc fwait dec inc push daa pop inc outsl int mov (bad) test icebp cmp ret sbb and mul xchg mov cld lods mov icebp and cwtl push cli pop repnz pop leave mov addl adc sbb xor cli inc and lds inc lcall or imul or jo xor ljmp mov mov lock mov xor inc stos mov fisttpl cmp fcom lock push addr16 xchg fwait in aam sbb cmp (bad) cli sbb mov mov pop xchg add xchg push push or cmp mov or inc cmp pop jecxz pop inc sub fstpt xchg or add jle push gs (bad) imul scas push sbb pop gs mov jns movsl sahf push dec loope fldl cli out add imul roll imul or xchg into in in cmp and xor inc popa lcall sbb js dec outsl xor inc sbb sbb inc dec jp inc outsb insb pop adc push out pusha (bad) loope pop jp inc mov xchg out fisubrl mov (bad) mov mov cmpb or and insb xchg mov mov mov dec adc mov xlat pop mov or imul pop out adc sub xor jge out icebp sub ljmp sarb add hlt ret add pusha lea call pusha pushl mov lea jae cmp test cmc sub pusha mov pusha lea call push call call cmp mov jno mov dec popa and mov ljmp xor idivb mov popf pusha imul stos xor sub in loopne add cltd fcoml rorl jmp add jb movsl xor jae lea icebp lcall xor lcall xor push mov test ret push mov pop test insl push insl bound jns jb push rcl adc test xchg cmp insl xchg and xchg lret ds icebp xchg jp sbb mov push je sub movsl xchg pop clc adc int3 ds jb scas lret dec sbbl fwait adc cmpsl mov sub rcr (bad) jne clc dec out fstl lods scas cwtl add das mov jns (bad) xor movsb das cmp dec js inc inc mov outsl pop fsubrs test movsb movsl divb in mov pop ret mov pop mov adc add aaa pop insb cmp mov xor std sbbl fs cli xchg popf aas xchg pusha call shrd lea test jmp cmpsl addb sbb mov imul or add add add pushf cltd jecxz stc sbb or xchg xchg push rorl pop cmp pop jg and lret or push (bad) jne push lods addr16 lret lods mov rolb inc cwtl cltd (bad) dec and xchg mov nop jmp mov js hlt negb fsubp (bad) (bad) dec mov lret push mov jb push lret xchg insl sbb jb inc adc arpl jo (bad) push int3 pop (bad) xor mov clc add or not mov call call shr mov clc pushf stc cmp pusha jmp mov lods mov push popf xor adcl jecxz cli mov dec mov cmp add add add (bad) push or imul aam xchg pop mov lret aas sbb int3 fbstp imul inc jo incb pusha ret popf prefetchw or jmp repnz push es jmp cmpsl mov jbe xor int3 sub lret jl jae mov insb pop mov fisttp xor or lods sbbl lea lds jg cmp mov icebp jo imulb inc mov fldenv mov pushf jmp push insb push xchg sbb test cmp or push arpl scas lahf xchg sub cmp repnz int jo and das adc xchg jne cmp repnz jecxz and clc das or pop inc xor ds dec or xor clc push pop mov jbe push enter test pop xchg or jne out adc pop (bad) mov mov or pop enter sbb sub xor sbb test or sbb std fadds jnp in inc jp jl testl sbb jns xor cld ret out add mov sbb jge jl pop popa xchg xor lret js pop stc (bad) enter jbe ljmp push icebp xchg sub sub das sub and add cli sbb (bad) mull sub test mov outsl jecxz cwtl in push aad dec mov stos fsubr xchg add scas and bnd pop inc cmp xor inc bound sub cmp fistpll or (bad) notb mov xor sbb jge sub sbb shl sbb fnstenv mov sbb xor xorl push clc xchg (bad) jmp mov push daa mov adc jno mov es adc add psllq into cmc or test inc jne dec and mov inc add mov push lods ss in mov std mov adc aas jbe popl push dec out insb xchg (bad) mov mov lea xor xchg std sbb dec lds pop test or inc and and push es loop js fiaddl sbb aad mov sbb icebp clc (bad) in xchg ljmp daa fcoml pushf ficompl cmp div in inc mov (bad) fdivrl test fdivp sub stos mov mov inc jge aad mov lods dec outsb sti mov les pop aad imul inc dec xor xor scas fcompl xor int3 or jp insl inc and jmp idiv iret (bad) inc in push or pop push pop inc icebp outsl dec fcmovbe add dec xchg sbb and xlat lock fdivp fdivrs cld out fcom into push jns pusha sbb dec jo or push dec mov iret xchg push jge out imul js or xor ret mov mov icebp add mov fadds stc push lcall (bad) push push mov mov stos jg mov dec push mov push popa mov cmp xchg loop xchg ljmp sbb or or enter lea xchg add push mov and ret mov cmc pop cmpsb imul or movsb ret aaa dec and dec test repz mov or addr16 in mov inc mov mov push pop insb ret mov clc push lods sti les repz loop movsb aaa dec out (bad) fisttp sahf movsl pop xchg aad ss lret inc aaa dec pop and xchg dec aas pop addr16 pop jg add andl inc mov mov push fdiv scas lea jb xchg and testl jle and xor and mov shrl xor push lods (bad) jne jmp (bad) lret inc (bad) enter hlt add je es lea popf and pushf dec dec inc inc push push xor cs insb add loopne hlt jmp sbb fs push jns pop jl pop gs xchg pop sub xchg sbb push fldt dec hlt addl pushf sarl scas push data16 dec icebp int3 add fidiv iret mov mov fstpl dec cs jns adc mov jne or out jp pop push clc mov push cltd adc push fisubl add or gs sub adc scas and jns inc add adc xchg xor int3 xor jne adc jo jnp inc fild mov outsl insb rcrl (bad) in test dec mov push int3 fnop sbb cmpb sub pop ss inc push lret pop imul lahf pop jp push sbb cmp call daa mov pop bound jo outsl ret pop pop pop imul cmp lahf mov fucomi loop xor push pop aas jp adc xchg mov xchg pop xor or cltd mov icebp add leave xor int fs add and repnz aad rclb hlt xchg inc popa inc cmp jno sbb mov sbb adc adc loope (bad) addr16 je cmpsb push popf pop stos and jecxz xlat ret mov sub daa xlat insb jmp pushf lea jae stc xor push call call imul push xor pop jl dec popa mov or lods mov adc pop gs js mov imul packuswb lock in clc xor std inc daa cmp rcrb std pop gs or mov cld jbe je push jmp fimull xlat (bad) imul xor inc dec mov inc out fwait mov fs dec inc xor lahf cs push outsl into push cmc dec ljmp mov push or stc pop (bad) repnz test clc rcrl (bad) mov jne push mov jb adc sahf or out pop in jmp aad sti aam aaa out mov cli sbb les push data16 inc inc and xor add in lea ja dec neg sub stc stc cmc add neg mov neg test neg mov call pop pushf pusha pushf jmp jne gs xor fs insb add mul insb sbb jnp (bad) ror fildll pop ja pop pushf jp inc jge or es push fmuls out test ljmp dec add rorb cmp repnz rcrl (bad) in push xchg mov js dec jmp sahf mov mov in (bad) sub scas aam sahf inc fimul lods aas int push cld jae cli lds inc cmpsl pop dec mov cwtl (bad) movsl (bad) and push int fcoml mov addb jmp or adc sub mov xchg mov sub mov mov xor inc push lods mov cltd sahf std (bad) pop mov push push mov fmulp fwait shlb sub jns inc mov fstps xor mov push cmp js fidiv mov add mov (bad) fistpl adc in mov lock mov cmpsl daa dec enter test jp cmpsl ja jp fsts inc xor rorl cltd sbb pop orb push pop fistl mov sbb bound cltd xchg mov (bad) push push and lret jmp inc ljmp mov adc inc imul adc int3 cs outsl pop cmp gs push dec cmp or fs mov mov (bad) mov (bad) inc jbe in sbb movsl aaa mov and lahf ja and pop gs xor popa js xchg fadds pop and cld (bad) mov out lea mov ret aad xor fcomp das adc pop sub xchg loopne (bad) in pop sbbl cmp mov insb jnp repz int3 out push sti clc pop fisttpl pop cmpsl mov leave outsl sbb repnz xchg aaa push daa or iret cmp lods and and pop jae or inc xorl push dec imul adcl in xchg imul orb xor bound xorl sti or gs pop inc xor fucom push xlat movsb lods jecxz push cwtl adc mov nop xchg (bad) mov sub push imul test cmpsl dec push notl push cmp in out les sti adc or test (bad) repnz ret mov (bad) (bad) push insb loopne in push (bad) push std sub pop aam cmc dec mov mov push arpl outsl dec add test ficompl out xor je push push bound sbb sbb mov xchg adc cwtl fisttpll push cwtl cli aaa mov fnstcw lds push cmp dec addr16 pop inc cmpsl fsubp sahf lahf andl movsl xchg test icebp aad xorb cmp sbbl sahf and inc call xchg cmp xchg jno sarl (bad) out stos je lret stc pop mov xor xor jns cs scas add test test fwait cli mov clc dec cmpsl push hlt or enter lods add jne movw jmp jmp adc or mov adc and shl push neg clc mov and sub movsbw bswap movsbw lea pushf mov jmp lea jne pushf pushl pushf lea jmp dec ret pop test inc jno dec popa mov push bound lds in fiadd hlt fisttpl sbb scas fnop inc pop bound or xchg decb fptan jmp dec pop lahf int3 and inc xlat popf loopne hlt outsb pop rcr and ljmp add push iret out out aad out mov outsl mov push cmp inc movsl loop inc in arpl int pop push jb xor testl jge jo int lahf dec jb daa (bad) cli mov jle jne push mov inc mov mov sbb movsb ret pop lods mov nop test inc xchg cmp cltd (bad) in rcl leave xor mov test pusha rorl push insl xchg daa jb jns scas in gs out ja int3 fwait cmpsb pop movsb test xchg adc pop dec jne adc jge jo xchg mov or cmp cld adc fmull incl jle negl movzbl into mov add add int es pop imul adc mov inc test mov jbe mov pop (bad) sub (bad) jne dec mov mov add add std pop sbb xchg pushf push call sub psrlq inc hlt or sub (bad) rcr cli das mov pop mov aas xor adcb xchg pop sub arpl push add sbb mov xchg mov xor adc in sub cmp sbb sbb je jnp bnd in (bad) fnstcw cmp jmp and (bad) sbb push mov (bad) or jge shlb cmpsb lea je pushf clc add stc cmp call pushf push cmp test sub cmc stc stc rol pushf pusha jmp add mov pushf cmc push mov jmp mov mov jmp cli xlat add imul incl cmp lock lods adc cmpsl js cld scas imul inc xchg dec (bad) pop mov cs ret push gs stos pop imul sbb lea test mov mov test adc push out adc push sbb aam aam and add mov inc sbbb lock jl xchg or int3 and mov test (bad) imul mov (bad) mov mov test popa mov (bad) lret test add movsb or iret rcrl sub movsl jb dec loop lds xor jbe xchg je inc mov (bad) mov jo mov addr16 add loop out or fsub pop in push jo lock mov stos cs dec fistpl loop cmpsl out fwait int3 repnz fstps frstpm(287 vsqrtps mov inc push adc and xchg lahf int3 inc popa and sbb add add gs leave outsb (bad) call jae jne inc lahf push and jle cltd push add incb stc lret add pop or jecxz jl imul inc scas push hlt jo fmul adc pop dec mov jno inc je inc jl daa mov (bad) (bad) (bad) cmpsl cs mov mov push push aas add sub xor scas mov lahf out and push mov lret popf fcoms lret add loope into inc add xchg (bad) jmp out jl ret ds pop lea inc sti fstpt push mov xor adc aad dec mov sbb iret dec push test sbb sub bound das lcall fcompl stc fs pop sahf insb sti and inc (bad) stos adc pushf pop lods mov stos xchg (bad) not sub sbb mov jmp neg aam lods cli sbb mov shr (bad) (bad) sbb mov stc mov sbb movsb pop std adc or jae xchg cmp adc mov movsb divb loopne nop insl inc push pop xchg push dec adc mov out jno and cmp lds jmp hlt jmp push push lock or jg cmp mov sub ret jo push inc aam inc gs testl add and jo jmp mov je pushf movl call cmp pushl sub pushf push lea jmp icebp fidivl cli jmp mov dec xchg loopne fmul add fnop in shll mov dec pop pop xchg cmp add or and jne adc in sahf movsl xchg shrb lods test push (bad) mov dec cmp lods mov pushf call stc push les add xchg push cld push nop pop dec rcrb push push mov sbb add cs pop xor loope xor clc cltd dec bound xchg adc lods pop (bad) gs mov roll mov dec mov adc jmp or or aas mov pop inc test push out add iret fs subl mov outsw cmp or les push shlb imul add sub mov loop leave push fiadd sbb or test inc add int3 cli push movsl stos mov inc in xchg pop cmp out and xor sbb orl xchg mov dec sbb inc in flds scas jb push mov in (bad) dec mov scas lock repz das (bad) ss inc inc arpl pop jge sub jne pop rcrl mov insl xchg les inc ja pop jge push (bad) in cmp insl cld adc arpl pop lock stc out (bad) inc lret xor jne or lds adc ljmp xor mov dec mov cmp jb fmul add les cwtl fstl aas hlt test pop sbb add cs je das mov orl icebp push fsubp lret xor fs ret cmc call aaa xchg push add jae enter jnp adc cmpsl pop adc pusha push loop cld push xchg add xchg rorb adc stc in mov addr16 xor shll out mov pop jecxz push xlat or inc sub std cmp dec gs or loopne and dec mov lret gs or jle ss scas pop fidivrl pop add dec insl lcall shll lret and xor and push mov cmovb xchg sbb popl push sahf (bad) clc stc add insb cmpsb sbb jge pop ss call pop fistpll add push jmp jg subb jno inc incl orl addr16 neg mov or and shrl push insl and dec roll sbb add lea push dec cld out adc sar push push fbld fdivs xlat inc stos xchg pop (bad) call push dec jno lods cli lcall adc fidivrl cwtl (bad) rorb add mov add cmp clc pop and (bad) je lock movsl int mov sbb dec or (bad) je inc push out xchg das xchg mov push xchg ljmp xchg cmp sub jmp movsb xor mov test js jae fadds add push jmp mov sbb pop xor pop imul enter divl imul iret or into lods cmpsb cmc sub or popa xchg xchg mov mov ss mov xor push cmp inc sahf jmp mov xor jecxz inc mov sub jae cmp push ret or cmpsb js pop mov shr (bad) cmp mov xor lahf ror xor add (bad) (bad) sahf push pop test sbb dec shrl xchg cld push dec in push mov imul mov fsubrs ret sbb mov jae inc (bad) cli ret mov jnp aaa xchg addr16 and push cmp pusha imul fisubrl xchg cmp outsb lea loope add xchg ret shr enter bound pusha enter rorl lahf inc je jns iret pop jl inc stos (bad) mov dec sub stos pop cmpb mov fnsave mov mov mov cmp imul aad add inc ficoml leave out ret ret outsb out push cld push or adc hlt cli dec cltd dec add adc jae inc jmp in xchg dec cmc and sbb pop test aaa jle lock jo jbe add popf (bad) or xchg cmpsl xchg test mov movsb inc movsl pop into loopne mov mov or jl scas sbb push jl xchg test lret pop ds fs mov mov mov dec mov (bad) sbb xchg movsl (bad) add pusha mov rcll mov jge pop fisttp push add mov lahf push clc inc or adc adc push in mov loop xlat jl inc and fidivrl dec and mov mov std jmp test pop cmpsb in sub pop jae (bad) inc jg mov movsb das (bad) es push in pop jbe inc test addl xchg (bad) sub out (bad) mov in (bad) pusha fist or sahf (bad) call pop arpl leave dec inc loope add mov lods add insb shr mov inc adc in mov jbe repz adc in cmp call incb mov lea jne push mov call movsl mov push jge inc jo sahf add pop sahf (bad) test (bad) (bad) adc fmuls dec sub sub and js lea inc movsb jbe mov inc mov loop fsubl and add cwtl lods mov push cmc sbb pop insl pop dec or leave mov jo scas int jnp hlt js inc rclb push les push sub loope cli ljmp sarl mov sub or ja and xor push lret xchg outsb cmc push imul or sub pop movsb lods xchg cmpl mov sub pushf or in (bad) jne inc lock lea jae xor bt movzbw stc mov shl bsf mov pusha bswap clc or mov call jmp push scas clc insb jle inc dec mov push daa (bad) cmpsl sub aaa aas pop xchg jl mov lahf (bad) out mull and cltd in mov add push inc outsl jae mov push jg lcall out lods adc and scas jl pop ret daa pop fistpl jg mov jg cmp fsubl aas cmpsb into jge ret sub mov (bad) fdivl xchg cmp jle,pn inc or and enter imul mov xchg lods jno insl push xchg sarl divl jp push jae dec scas mov jl push sarl (bad) idiv add xchg (bad) mov loop push xor loope pop jnp xchg ret push clc clc in lods ljmp jb loopne mov dec bound or adcb xchg or fsubrl (bad) sbb add jmp call mov cwtl dec and loope mov mov fnsave or mov jo mov and imul push jge sub mov sti in xor sub and jb cli add xlat fadd scas icebp mov pop mov mov jnp (bad) insb and push jno and mov rorb sub int fdivl cmp fs das aaa (bad) ss outsb xchg and push pop add push jmp dec bound push ja mov inc sbb int3 pop push pop repnz cmc jle dec sub int3 (bad) negb call js inc ds out xchg iret fisttp leave or ljmp inc outsb test dec cmp aaa ljmp nop inc xchg lds sub sbb insl sub aad pop jmp xchg (bad) mov push cmpsl lahf fsts arpl lret rol scas pusha test pushf sbb xchg lret ud1 cmpsb test cld pop or ja iret pushf push xor inc pusha mov outsb mov jb sub hlt cltd xchg (bad) mov xor test imul sbb int jo push cld push jg mov mov pop xchg cmp dec test mov jb bt shr shr bswap sub bswap pusha movzbw pusha mov pushf jmp jb lock sbb nop rcl movsb test adc dec xchg sbb jle cmp cmp or jg push jle push inc mov lret in movsl pop insl sbb pop push lcall in cmp (bad) cmp mov into hlt xchg imulb inc lret arpl outsb and iret jl jbe rcl arpl mov pop pop je mov lds lret je inc repz jl bound test xchg in (bad) enter sub add jmp sar and mov sbb cmp pop fiadd add pop mov test mov push dec int3 popf pushf movl jmp push jns mov inc scas mov sahf je cld jnp push push xor andl jo cmp loopne sbb jb xchg ljmp (bad) mov adc push cld repz cld add mov testl stos add jl add add call jle pop push das dec subl and sbb sub stc sahf or (bad) or pop cs cmpsb leave lea xchg sbb jno xlat mov (bad) xchg (bad) (bad) or cmp pop cltd out popf rcrl and pop xchg jecxz test stos rorl jne fbstp lea lahf pop lock add add push pushf pushf pusha lea jmp aaa sub sub test adc add insl pop andb xchg mov push sbb (bad) out scas andl orl popa test movsb cmp cmp lea stc pop subb mov ja xor pop mov cltd aaa je jnp leave mov fdivr lods jmp push xlat les mov test mov popa in rolb cmp movsl jp fimul (bad) es pop mov popa (bad) xor inc das cmpsb push out add xlat push push insl icebp or imul xchg fucom out pop cmpb jne sub jl sbb inc xchg or cwtl push test sub daa outsl ret mov jecxz call (bad) mov and jp shrl dec cmp dec pop mov cli ja lds stos cwtl inc xchg inc fsincos cmpl data16 jg in insl call jp mov pusha nop fmulp je cmp jge je xor mov js push insb aad jns dec ret cld es sbb rcr and aad stos loop (bad) mov frstor cmpsl (bad) lahf stc ror fisubl pop iret addr16 (bad) movsl sub call bswap not mov movsbl movsbw lea mov pop mov not mov pushf pushl ret lods cmc bt lea jae not cmc pusha pusha cmc xor bt stc ror call cmc fidivrl adc rclb mov scas into pop fsubp sahf lahf daa jmp hlt xchg xchg (bad) xor loope cli xor lods mov subb and dec subb jno out out sub dec mov jae mov mov or mov adc shrl xchg neg lods jb bound ss mov mov (bad) out cwtl xchg test (bad) jo aad daa push or mov inc fdivl dec push or push std stos xor ficomp call lods aaa shll pop fldcw repz addr16 xchg xchg mov lds xchg push mov ret and fs andl dec adc xchg mov outsl xor (bad) mov add (bad) sub stos lock mov pop js xchg sbb cs test lret insl jnp add int into mov in (bad) mov inc enter mov iret add dec mov cmc mov lods sbb shll stc popf out loopne cltd push mov imul rcr mov xor mov cmpsb cmp inc out cld arpl insb ja lret cwtl das sti xor adc (bad) call jle call (bad) mov or inc je xor jno add js gs push push inc push (bad) dec (bad) xchg fstpl mov loope pop mov stos inc add aaa jb (bad) (bad) fstl mov fiaddl push int3 int pop (bad) mov imul movsb int3 xor jo xor pop adc cwtl cmp int movsb xor pop pop pop cmp jmp mov cmc pop cmp int3 jp mov bound test jo int lahf push xor sbb cmp ds shrb lret xchg mov (bad) xchg jl push pop xor mov jnp ja cmp insb adc xchg loop aas fcmovnu adc insb adc sbb (bad) xchg addr16 pop insb jnp fisttp outsl pusha sub or fcompl push push cs xor int3 mov jbe and (bad) cmp movsl scas inc addr16 xor push fmuls sub mov cmp pop dec mov mov mov fldl2e (bad) or jo adc lret dec pop les inc push inc mov dec idivb pop sahf ss out dec shrb push pop and sbb xchg sti mov out push mov (bad) inc mov add adc nop ds js mov pusha pop pop insl sbb mov ret jae add push xchg adc xchg jecxz (bad) out mov int3 add imul iret repz cltd xor mov sahf jo push jnp jecxz imul mov mov pop push fldl (bad) pop or jecxz push or mov mov mov xor mov pop jns xor inc pop add pusha pop xchg and push push test xchg popa dec push xor jns adc xchg xchg adc idiv popf adc add fisubrl daa test mov sbbb (bad) (bad) pop mov xor mov pop mov cltd (bad) adc mov and je sbb jl fistpl pop (bad) fwait dec aad xchg jge les imul nop xor scas jmp pop repnz fwait push pop pop scas je insb iret test cmp lretw lcall mov pusha xlat sbb hlt pop cmovne lods fisub sbb jno aas fs enter loope jns mov fcompl cs js adc mov add stc inc test stc dec test add xor pusha lcall xor cwtl jo es inc aas dec outsl fistp mov imul pop clc fsubrp and push mov mov cld mov addb iret inc mov orb clc pusha cmpl adc dec jno mov sbb and loope push sti in repz sti repz das sbb adc mov xchg pop shll ret frstor clc cmc push stos mov outsb cld jo imulb stos (bad) jo xor lcall dec sbb mov sbb mov repz mov xchg ret scas sub lea jbe inc btc shr sub movsbw (bad) mull (bad) rcl mov sub mov dec cmc add data16 testl jmp neg or shld mov push rcr movzbw add pushl jmp bound inc ror push push pop ds mov fldcw sahf cmp sub lods mov retw mov add adc push lahf aaa or xlat cmpb mov in adc jbe aad jp xchg lock aaa clc mov out dec dec es repz add and icebp pop fwait arpl xor test imull imul stos push fsubrs push fildl iret lock idivl or push xchg lods inc ret in xor pop scas std je ficomp sub push aam (bad) sbb lds push repnz mov loope lods cmp xchg movsl sub jecxz daa mov out jb mov and mov es sahf xlat sbb cli aaa stos dec or rclb sti dec dec sub lahf (bad) add mov sarl push jecxz test fwait or xlat das mov sbb sbbl mov rcll cmc call rcll mov sub jle dec popa pushf sarl and pop test xor sbb dec in adc cmp outsb add mov xor setl xor pushl ret xor clc cmp movzbw pop pushl bswap lea push movzbw call lret add fnop scas pushf and xchg insb fisubrl outsl cmp pop fwait dec push repz addr16 sbb sbb pop in and jnp popf push lods (bad) jb sbb inc (bad) loope inc rolb rcll push ret dec (bad) xor andb dec push mov clc cmc or mov lahf mov imul add xchg mov jns mov (bad) adc out aas fistp pusha stc fwait push xchg mov int inc (bad) jge add push adc ret das (bad) inc insb das and dec mov pop jecxz fs sbb xchg mov pushf lods xor outsb insl dec push lcall das jo scas pop xor pop mov xchg and jbe jne lcall test (bad) hlt jns iret dec adc jb push stos inc pushf popf xchg push inc aad jae insl bound xor jle in adc lods xchg enter lahf dec jbe push cmp dec mov aas andb pop jg jecxz pop jmp xchg ljmp shlb cmc clc test repnz push jmp mov inc sub mov mov or cmp push jb bnd scas mov jns xor ret shrb adc fsubl add xchg jo inc push adcl stc mov push push call push jmp into stos inc lret repnz add loopne mov mov lret push dec in out ss mov and (bad) fldl2e movb push jmp in inc push aad sub les push icebp adc clc or cmc das xor mov in in hlt iret push sbb movsl popa add and xchg ss xor lea inc push mov sbb mov cs xchg sbb and (bad) lds popa adc ja popa dec lods push in or mov (bad) jbe or das mov sbb mov or jge cmc scas (bad) mov cmp mov inc xor xorb mov adc out and (bad) mov sbb push in sbb data16 imul insl nop loope stos push push fbld clc sub adc in xchg and std push pop xlat in je or mov inc mov repnz jo das loopw adc cs fcoms and cmp ficompl xchg dec cmp xchg mov sti loopne aam rcr rcr repnz push sbb test ds std mov fsts subl xor idivb outsb sbb pop cltd mov sub add xor push push ret aaa mov cmp xor xor jnp jle sbb imul movsl mov hlt js mov sub aad fwait test mov sub xchg push std pop mov or xchg lahf movsb sub sbb inc jnp cmp jge add xor test sub aad lods (bad) loopne sbb les cwtl out pushl call add inc gs outsl fs gs popa outsb fs gs add or xor xor cwtl test cld (bad) (bad) sub pop (bad) in test adcl mov xchg cmpsl in push sbb aas sub cmp movsl fdivrl mov push cmp stos push cmp insl loope or test cmp cmp mov xchg cmpsl ljmp cmp mov pop sti dec ret shr inc mov push outsb (bad) jne pop lahf popf xor movsb mov mov jmp add ljmp sbb pop cltd mov adc add lret enter sbb hlt mov cmp push cmp or mov (bad) out (bad) call inc and fucomip stc adc mov ss mov xchg rcll lock and addl movsb test data16 cld scas (bad) fdivrl and scas stc daa lds pop and mov inc out push sub inc xchg lcall inc cmp mov mov adc push imul lods inc lds inc lcall negl (bad) push fistpl les mov or mov (bad) into icebp jae,pt js dec sub push sub int3 push dec lods cmpl mov fwait jle push inc inc pushf not call pusha push lea jae jne jmp fsubr repnz inc out push insb xchg sub das insb xor adc cmp test mov dec mov out jne xor or adc scas xchg sub out ja scas xorb js pop fbld pop push outsl mov fsubrl xchg sbb inc adc imul (bad) xchg enter or mov cs mov sub mov out jns,pt aam add jns inc nop imul mov cwtl cmpsb sub dec es mov shr jae push mov mov aaa pop jl test fdivp jmp jns sub or test (bad) jmp mov fisttp cmc movzbw mov call leave ljmp cmp xchg xlat out mov jp cmc cmp xchg mov notl and int3 (bad) xchg js inc fdivrl mov imul pop adc jno push pop sub mov push jge loop and mov nop xor into inc pop mov pop or sub and sub xchg imul mov das outsb dec mov fadd pop cltd sbb dec mov call je js pop push in sbbb lcall mov fisubl push xchg xor push push lahf ljmp in (bad) xor xor xchg into inc in gs scas inc mov loope addr16 and jns mov inc pop pop sar push pop pop out bound fnop scas jl arpl cld mov into sbb and sbb mov cs add adc add outsb push jb outsb je jb add sar sub pushl rol cmp clc movb stc neg pushf lea call cmc cmp cmp call das sub lds in mov out mov (bad) lods xchg fldl mov shr loopne mov jmp cmp in insb push cwtl cmp or std add adc xor scas mov (bad) jbe adc add mov and dec lock xchg std adc pop mov push cmp xor and mov adc ja aam or mov cmpsb insb imul roll mov movsb bound sbb pop sub jmp fbstp add pop test movsb pop mov mov adc xchg cmpsb mov (bad) test test pushf bt movzwl cmc mov mov add cmp bt mov call adc ss pusha inc add repnz mov mov pop lret adc repz xchg ret push jne cmpsb cmp (bad) bound fs divps jb insl jge sub xchg insl loop mov out rorb inc inc fs adc mov sub out mov outsl add adc pushf fincstp add cmp ljmp push js pop jo lahf dec std xor loop sub mov sbb gs dec (bad) fsts stos roll cmc gs js aaa into mov adc fildll mov int (bad) test ret lcall dec (bad) cmp add or scas mov (bad) addl push pusha call jmp or sbb xchg andl arpl add rcr fdivrp (bad) int movsl stos and jns and push lcall xchg add dec lock test inc push and mov pop mov popf or xchg decl popa pusha (bad) pop jg out pop sbb (bad) fistpll cmp (bad) sub (bad) mov xchg xlat cli jns sbb sarl xchg mov adc pop sub arpl jp notl fs pushf clc or movb lea je movzbw movzbw movsbw mov mov movsbl push sete jmp xor sbb dec jge gs gs enter and dec mov adc pop dec xchg push xchg lods and (bad) jmp mov fldcw mov in push gs inc xor push pop cs js ret cmp add repz out mov mov (bad) mov jne out into insl pop popa mov sub xchg iret clc call mov jle outsb addr16 leave ret (bad) and mov xchg pusha int3 mov out (bad) cs aad (bad) sbb nop jmp pushf mov xor xchg sbb lahf lcall std or dec xor popa stc sub add outsl mulb das loope inc mov or or ss in sar cmp daa clc cmp mov mov insl sbbb ret mov xchg jno mov in dec inc fildll nop jb rolb loope mov dec aad test mov sub icebp push aas mov mov sbb aas out and add stos stc pop cmpsl jnp js sahf pop adc mov leave adc pop dec mov xor sbb mov sbb js lods push and insl mov (bad) je sub js je in stc xor fwait lods and repnz fcmovu mov and fcom mov mov pop push int lods (bad) xor lock jle jo fs cmpsb or dec or mov (bad) aaa aaa cmpsb cmpsl push adc jo mov jne test (bad) ljmp mov sahf inc stos cmp dec push je repnz mov mov loop mov push gs xor (bad) push xchg fnstenv xchg xor (bad) std aas mov jl xor sbb out test mov cltd xor nop sbb das and adc mov xchg xor xor test repz test mov sti or call mov loopne xor std jge movsb mov or and adc push cli pop add (bad) dec icebp inc lods sub push mov lods pop jbe push mov int3 leave rclb sub fdivs jns inc jle mov icebp nop (bad) shrl push jmp mov or push popf and push jno inc xor xchg addr16 scas gs pop jnp dec ss cltd pushf pop nop gs pop jmp js jo inc test cld cwtl sub lods or hlt lds adc mov pop inc xchg sub xchg sbb jp arpl lahf faddl cmp js iret mov push inc lahf xchg test outsb cmp out pop lods jmp dec test sbb adc into mov sar jge cld mov outsb test insl inc mov cmp lods cli aaa ljmp sub mov adc xor inc lcall mov fisttpl sub inc mov fsubl hlt sbb lea mov (bad) fs and jbe sbb adc adc push jecxz cmp lea repnz ret rcr mov jo outsl xor xchg mov add sub mov dec or push pop test jg xchg mov pushl cmc in mov cmpsl xchg sbb (bad) xor pop inc jnp push insb or adc int3 or xchg stos repz sti jp pop stos push mov jle dec (bad) lods aas aaa loop jl mov xlat xchg pop outsb popf sbb (bad) jb movsb push sbb test mov inc cli (bad) jno (bad) xor stos lds mov or out (bad) xor push test cmp or add or loop jno (bad) (bad) push mov sahf fildl aas jg adc (bad) push mov aam aad rorb add mov cmp cmpsb inc mov pushl and je push bt clc pushf cmp pusha call lea ja clc ja pusha bt imul movb cmc mov jmp mov dec mov inc jmp lea je bt stc pushf call test movb push jmp lcall sub xchg sbb push push and loop (bad) fstpl enter out mov sbb cwtl xorl popa mov int3 mov (bad) pop or xchg lods lahf dec jp (bad) lock mov cmp dec mov add xor push dec xlat (bad) out lods ja pop adc inc jns mulb inc movsl and adc or adc movsb movsl imul imul xchg jo out mov mov bound mov pusha inc cmp lea mov int3 and mov and xchg xor fadds mov mov insb gs cs insb add (bad) dec mov pusha cmpb call adc push xchg (bad) (bad) iret push xchg (bad) cmp insb add sahf push xor (bad) lret add sub xchg inc loopne mov cli loope jge mov sub inc add mov sar iret in sbb ljmp jb sarl add xchg cmpsb adc mov fwait loop mov pusha jo cmp ljmpw inc add rorl adc mov fwait mov (bad) jmp aad push xchg cmc jae and push mov not xor push out xchg add push dec ss push cwtl fildl add inc gs outsl fs gs imul add cmp lea je call xor mov mov shll mov dec lcall inc aas sub sbb aas sub mov divl xchg inc sahf lods mov push add in xchg mov in rclb mov (bad) cmp mov cltd in cmp lods std dec add xchg bnd jp rorb push adc add mov jg je pop repnz inc test mov pushl or in mov push fwait movsb mov fs jb test test cmp cmp push call xchg (bad) cmc popa sahf sbb sbb pop push jge pop je mov push fildl jl shrb pop fildl out sahf ror xchg leave jbe addl mov fadd pop mov dec or adc leave call inc sub into faddl cld or fwait call (bad) fmuls sub xor aas add cmp loope lds xor je mov or jmp sarb push in xchg push mov cmp jb jmp insl fdivrl jno je enter adc mov lea lea pop movl lahf lea call js inc rcrl jb inc nop jle outsb pop bound and sub mov and add (bad) fild xchg mov addr16 lods push pop stc push mov add cmp lds push test mov popf lret sar dec cs pop xor scas inc cwtl xlat in jne xchg stos xor clc push fisubrl jnp add and sbb inc (bad) repnz cli cmp dec lds add call cmp add ret pop pop cmp into sbb sysret ja add or outsl insb xor cs insb add sub sbb and fildl mov or mov inc addr16 pop jp stos outsl or or test pop inc xchg pop clc mov int3 stc rcl jle cld mov inc jae cmp sub test mov fwait dec dec inc mov adc sbb add subb jo xchg in jmp test in and mov popf rorb sbbb popa test icebp xor ficom dec jp jl leave cmp jle mov sub cld movb lea jb pusha pushf pushl ret or sbb mov nop (bad) and js mov or inc jg jle out ljmp shrl push xor dec int3 inc mov add push outsb jb push fsubr push xchg lods or add jg daa lods (bad) shrl in dec dec pop push ret aaa in xor sub andb pop mov jg adc mov xor xchg jbe push rorl pop scas add mov or arpl fs out mov loope sbb ljmp jmp xchg cmpsl jl cltd sbb jp push jae pop mov outsl xchg dec sub scas mov out xlat lock sbb loope loope aad aaa push test mov cmp (bad) mov lds xchg add pop (bad) cmp inc addr16 lcall lods pushf out les or les (bad) stos addr16 jge add std push leave mov gs mov mov mov xchg pusha aas dec jg or pop mov jae call pushl call xor sbb outsb cmp mov dec jl adc (bad) hlt loope jge add daa mov sub xor rcll lea mov gs jno mov or push dec leave adc (bad) sub (bad) mov sub fcomps fwait pushf mov iret and xor cli xlat inc fimul adc aam sbb mov mov je mov jp mov sub in test outsb cmp repnz aam fwait ljmp xchg sarb out (bad) add sub or sbb mov call out sub lcall sub movsl cmp popf (bad) fsts sbb mov ljmp pop pop or jmp jmp pop sub sub add and push outsb mov in and imul mov push sub ja xlat scas fsub xchg stc or aas nop adc mov sahf test cmp jnp mov sbbb pop sahf pop out lea mov or pop repnz jmp stos mov in popf test push imul add je gs imul mov xor push in mov pushl cmpsb xchg sbb cmpsl inc sbb push xchg cmp push add dec sbb cmp outsl or and xorl add fincstp mov jle je ja add adc mov dec incb or sub test in imul sbb xchg je mov inc int3 cmp sbb pop jecxz (bad) pop in adc jmp aas out test lret jp mov dec movsl iret (bad) mov add pop int3 lock frstor pop jge push data16 lret daa xchg jnp rcll add xchg xor push cmp sbb bound adc jnp or push outsl push daa inc xchg push xchg das mov xchg ljmp pop (bad) cwtl xlat aaa int3 add cmp iret dec fbld fstl (bad) in pop mov adc push fistp mov shll decl (bad) ljmp fisubrl popa jle jns cs lods jb inc ficoml push paddd cmpsl sti data16 pop jbe push scas push add adc dec fisubr int3 mov lods arpl adc xor inc pop pop cmpl xchg jmp clc add jecxz adc je sbb ds fistpll add inc in pop add loopne add pop add loope add loopne add pop add rcrl add loopne add pop add clc push add loopne add pop add loopne add pop add loopne add pop add mov sbb (bad) in pop add loopne add add add add add popw add sbb xchg in pop add iret sbb push loopne add add add add add pop add sbb mov add add add add xor add sbb stos in pop add adc push in pop add loopne add add add add add loopne add call xchg movsl lret fisub arpl sbb ljmp int3 fldenv dec and lahf push out mov addr16 mov pop mov in jbe inc cwtl cwtl mov xor adc jmp or add hlt (bad) test loop scas cmpsl or pop xor fiadd cmp pop sub mov mov cmp rcl push int rorb jae adc push add sbb (bad) das xchg sbb cmp or xchg loop mov into in in movb iret xchg ret cmpsl insb sub (bad) mov jecxz insb and or jl testb cld and movsl pop iret push jns hlt jnp mov adc aam jnp aam cmpsl sub mov mov add adc int3 dec or add jmp xchg stos or adc mov pop dec mov ja xlat icebp add push orl jne daa out dec (bad) cld aas mov and jmp push cld ja xor cmp jecxz int3 popf push or aam (bad) (bad) sbb clc insb ret dec sbb push add js scas notb add inc and movb mov pushl ret clc pusha xor pushf cmc test cmp repnz push pushf lea jne inc movsbw bsr bsr mov cmc call push pusha jmp call mov bt test test test pushl lea je call push jb sti cmpsl sbb insb test dec jg das mov push outsb cmp mov or inc inc push subl leave push xchg out mull icebp out int mov pop jp aas mov add cmc adc es mov xor popa clc leave fldlg2 es loop push pop cltd sbb sbb jle add inc or push int loopne cwtl mov int3 xchg jmp xchg jns ret rcrl jbe fwait xchg mov push test pop test pop pusha mov lds xchg insl mov push int repz dec cmp xor fcoms and jle lods clc cmc bt not clc xor bt pushf pushl ror jmp js std imul mov cmp int3 mov enter repz je mov add (bad) push imul movsb pop inc push pop pop enter xchg lahf inc dec (bad) push pop daa push ja lods es icebp xchg add push leave xchg add push in in sahf mov pop mov adc aad jnp in dec rorb add pop adc mov and imulb cmp mov xlat or (bad) scas dec movsl (bad) cmp (bad) fnstcw aaa fistp std loope mov push inc mov and push mov mov out mov mov xchg in lods popa and sbbb out daa mov jp xor orl je or adc or fstps fwait mov push jmp (bad) jno xor repz cli push sbb and icebp sub stc add (bad) mov aas jecxz (bad) mov iret cs (bad) pop cltd repnz ret shrl fnsave add or mov je mov fnstsw push pop icebp mov fldenv mov aad cmpsb xor loop test ljmp addr16 je test cmc pusha sub cmc pushl cmp pusha pushf lea jmp and mov sub pusha jmp in mov push mov or cli jmp into movsb mov sub test sbb push fildll mov rcrl stc add roll ljmp xchg repnz cmp scas add mov mov mov xchg mov push xor add push outsl dec aaa and dec mov mov cwtl jb adcl inc lea sub push out jp cltd out int lcall cltd fs popa fs xor mov cmp enter (bad) pop hlt cmp xor lods mov out jl and rclb out pusha pop dec ret cmp lods or in mov loop dec xorl mov jge push aaa mov decl sbb sbb push (bad) adc pop sub xchg test adc stc xor xor push ret fbstp lock mov sbb adc pop jp push test inc movsl mov sub inc (bad) jmp mov add lods cs dec repz popf int3 inc lret mov push inc dec jle (bad) or loopne mov clc out dec xor push jae pop sbb inc mov sub ja push or imul add test lret xchg inc cs mov scas xchg rorl aas sbb mov xchg out cmp add enter sar out jmpw xchg sub repz or (bad) cld mov mov mov test push mov jl fwait mov test popa sub int mov sub subl dec push test lret jmp decl dec outsb inc cmp push (bad) insb xchg dec cmp adc leave divb mov icebp pop (bad) jl bnd aam sbb fnstsw jg jae icebp add in xchg adc cltd in mov std add stos (bad) pop movsl (bad) (bad) sub pop insb adc mov daa xchg aad jne negb lea outsl fcom shrl xorl lcall dec mov nop add or add push lods add mov add pop clc pop add sbb lds inc xchg repnz aaa incb insb ret jne cmpsl push test pop popa ret aaa cmpsb js das jle clc pushf movb clc cmp call inc scas enter inc xor std (bad) icebp mov test xor sbb repz mov stos fdivrp scas test cmp and icebp hlt leave daa mov ljmp sub (bad) insl push mov leave cmp mov out incb push dec mov or lret (bad) and fimull push lock fcompl or cmp cmp and pusha les scas gs lea cmp in jae ja popa pop push jmp loop ljmp mov fsubr aas int test lods push mov jno inc pop movw push stos mov pushf push pusha lea jmp lea inc xchg and nop push rolb movsb jns stc (bad) cmc movsb movsl and mov xor or lods mov (bad) in (bad) or pop fsts (bad) xchg in jne popf cmp xchg and dec cmpsb jl pop das hlt jbe outsb add out jecxz pop fstps xor aaa pusha test cmpsb jns cmp lds cmc push std (bad) loop imul xor fs js lret fimul addl jg divb pop xor enter repz fsubl xchg cmp scas sbb into iret fistpl (bad) push cmp mov cli aad jmp pop jno mov (bad) xlat psllq cmp or jne push stos inc or pusha and pop stc mov sub push int sub jp fsubl daa fld adc iret or add jmp rcr into mov mov mov push mov mov sbb je lahf mov pushf imul into and sub sbb sub stc sbb data16 push fnstsw pop std daa xchg sub jge dec ret or jae xor (bad) lcall pop cmp scas sbb gs dec data16 push dec cmp dec lods and fucom icebp clc (bad) shrl (bad) setp cmp cwtl movsl push sub aas adc mov dec xchg fs stc repz pushf add rclb dec pop test jbe rcll sub jbe cli nop push sbb fidivr push movsb mov fstpt cmp repnz mov cmp push stos xor scas cmc pusha mov jne ja adc or push (bad) jle dec lahf jne fmull std outsb xchg fdivl repz and shrb (bad) cmc call cmp xchg add pusha lahf btr mov ror inc mov pushf cmc bt mov push not inc shl mov pusha sub pushf push push call push xor in sbb ds xchg ret ljmp not push push xchg xor leave loop jp ljmp outsl (bad) (bad) xor pop orb arpl mov adc inc mov ret (bad) mov jg sahf fistl nop (bad) xor adc fwait jbe,pn ficom fistp xlat test or mov xor sub gs and xor daa fimull stc hlt or sub bnd icebp dec mov lcall pop data16 inc jnp xor jns pop mov adc decl and push stos jge fmuls pop sub outsb jnp sbb inc (bad) hlt adc aam jne std add jns sbb or lret mov sub incl aas lahf xchg add jmp int3 mov cmc mov cld dec lahf bound aaa xchg adc insl cmpsb addr16 xchg push push dec pop mov hlt ja cli clc cmp jl dec sbb test (bad) (bad) sarl xlat push mov xchg xchg adc pop stos cwtl push repz insl pusha popf scas xchg lahf bound adc sarb jne stos pop pusha cmpsl (bad) pushf fyl2xp1 dec dec (bad) in inc pusha adc js sub jbe xor (bad) (bad) inc xchg xchg andl push mov lods ss je lret inc jo (bad) repz stos sbb (bad) mov sub mov mov jmp dec dec mov push (bad) pop push cmp xor cli jg xor aas mov and xlat adc fstpt gs cmp loope mov in neg icebp push pop sbb cmp aaa jge cmp imul pop xchg mov sbb ud2 or jns mov inc scas stos sbb xlat or inc mov mov aaa xor mov ret mov and cmpsb movsl xchg or ljmp mov mov pusha sub cmp xchg dec lcall out cmp (bad) hlt es sbb sbb xor xchg sbb decb push lea test cltd cli or arpl inc mov bound add leave ret clc outsl sbbl repz cmc push lea hlt vcvtpd2dq cmp out mov push fptan out and and cwtl jmp cmp or outsl mov xor repz adc mov call fisub inc stos fwait lret cmp inc test cmc sbb and dec int3 or cs xor xchg imul jmp add lret addr16 jnp xchg in stc cmpsb dec es call hlt pop lahf add dec mov fwait loop sub pop shrb fcom jge sub add rcrb pusha cwtl pop mov jle mov sar push jmp push repz jno (bad) out push push dec clc call (bad) mov mov jl int add cs push xor and test repnz jbe lea jne mov lahf movb push mov not mov push lea movw pusha movl pusha jmp add jmp sbb cmp dec imul gs mov cwtl jle inc pop push (bad) sub xchg mov adc cwtl xchg imul and test cli xchg fimull (bad) icebp or test ja add addr16 ss mov lods out ret inc (bad) in das mov xor fwait mov clc jmp inc aas aam mov cmp fsubs test jmp stos push pushf mov mov lea jmp pop mov mov add mov push out adc js lock cmp lahf shl mov xorl lret or popf fistl shrb (bad) ss jg ret sbb dec clc (bad) fs jbe test jp add inc fdivrl out add add clc pop aad (bad) lods jb and out and mov cmp in inc (bad) sahf (bad) pop fisubl ror test jmp push scas test mov pop into jmp addr16 mov out aas xchg jp sbb pop icebp pusha mov cmp ss pop outsb decb es lea jne movzbw push xor call push pushf pusha lea jmp pop mov sbb sbb (bad) pushl aam sub jae arpl sti (bad) iret out das ret sub xchg into (bad) or jp (bad) leave rclb daa fiaddl inc mov adc fsubr and pop adc aad std lret or jnp pop stos mov lret pop cmp add push cmp sub add push pop cld mov lea or sub aam mov push aam pop imul dec xchg jge sub sbb loopne sbb inc or jae jmp mov push mov call pushf lea jne clc movsbw or mov cmc xor data16 imulb (bad) stos out neg mov pushf push pusha sub pushl add jo pushl stc cmc cmp call mov jmp movl pushf movl lea jmp fucomi jns mov inc (bad) sahf cmpb (bad) int3 adc push je cld jae sub xchg shl in enter in test icebp xor scas lret out pushfw cmp mov subb gs mov (bad) jp xor push (bad) mov xor ret adc mov fstps pop rclb mov sbb mov mov dec lods jp and (bad) xchg dec mov inc pop repz in dec jne cmp jb pop xchg les xchg push imul mov in (bad) xor movsb mov jns xchg test cltd (bad) cmp push fwait sbb adc addr16 mov or xor les xchg xor push outsb test xchg shrb cltd cli pop dec adc fsincos mov sub and shrl repz sub and pop out cld movsl and repz push test inc shrl ds into pop sarl or shrl stos jno and xchg mov mov lock in shrb cmp pop lds jg iret adc push fldt test xchg dec into push call lea jae bt test jmp movsl jge scas mov inc mov sbb adc cmpsb stos adc dec mov push push jp stos pop xor dec mov and enter lods insl inc mov in add nop dec or (bad) out jmp inc sbbl jge leave repnz mov xchg fwait ss ret mov mov rorb out in in xchg in xchg dec or int3 inc scas jne jo jb mov pop stc or (bad) (bad) cli sti lods mov jns mov xorb xchg xchg fnstsw cs test push into iret mov stos stc or cmp stc test test call std sbb inc inc pop movsl aam mov or mov sbb mov adc mov xchg ret data16 in outsl stos xchg int mov popf je jno cltd add dec dec mov iret shrl inc aaa fldt mov cmp sub or cli adc xor repnz cmp lcall pushf popa outsb sub mov dec jns pop (bad) repz hlt jmp and loope (bad) (bad) dec add sbb mov cmp das xchg cwtl adc hlt inc cltd pushf pushf mov pushf pushf pusha lea jp ja jmp pusha mov call out insb mov sbb in or lea cmp xchg fisttp cwtl das clc decl mov popf xor sbb pshufw xlat mov mov xchg and fcomi mov div in lret lock dec jg aad int3 loope inc pop sahf cmpsl std mov fs dec roll cltd roll (bad) push add rolb mov xor lods cmp xchg or xchg aam xchg test into fdivrl pop sbb or sub jne leave push int3 mov sub jo adc pop popf imul lds pop shrl lahf mov cmp in adc out add jns into (bad) out xorl mov cs add lea (bad) xor gs pop adc push scas insl pop cmp sbb push dec sbb int3 rcrl or xchg inc xor adc mov imul ja call dec mov call mov aad cli jb das mov cmpb and movl pusha lea jae call mov inc shrb push fucomp lods cmpsl (bad) lret stos enter je fadds repz ret mov inc mov ja sub mov popa dec addr16 dec add jns inc add mov or fldl (bad) into pop into iret add cld incl sub test pop fsubrs movsb (bad) rolb lret lret jmp xchg mov nop insl dec push lods addl lahf sub pushf test mov fs inc jge inc stc adc (bad) mov outsl aad lods xchg and dec and ret pop hlt call mov (bad) call xor inc pop bound mov (bad) enter movsb or andb scas test cmp pop pop sbb fwait adc lods push sub xchg mov test inc mov cs xchg pop ljmp mov je das or pop inc iret adc andb dec aaa imul pusha push (bad) sbb cmpl xor enter inc lds movsl repz mov testb dec mov push or adc ud1 nop lock pop lock xor ljmp fidivr pusha xchg mov pushf sub das mov out lret adc fdivs in sti clc lcall scas aas daa cmp jge pop ds les (bad) mov sbb inc cmp push shrb xchg dec jae icebp cs notb jle mov push push mov push divb mov lcall sarb xchg adc sub mov aaa fild add xchg dec cwtl mov add inc cmpsl ret lcall jge jle stc sub in les cmp fcompl mov push enter xchg jmp js mov inc mov (bad) stc push popf in push shl subb lds rorb test xlat jb xchg jns push clc add sub pop pop into mov roll mov je insl inc outsl popw divb loopne push data16 lret aad (bad) jge ret addr16 or mov mov aam mov (bad) ja mov mov sbb sahf (bad) pop mov mov jnp push cmp mov movsl mov adc fs pushf mov fsubr mov mov lock out in push mov clc daa sti cmp mov inc adc sar and mov pushf lea jae pushf mov pushl pushf lea jne push call push dec inc dec dec xor cs insb add lods lret mov push jmp jae pushf inc mov sbb add cmp jl je and xor dec jae fst and (bad) int3 jmp enter inc cmpsb fwait jne ret mov jmp loopne insl or mov notl add in popl and xor and xor lods mov lock xor cltd adc jge jb push xchg xchg clc dec mov mov jl test adc enter push pusha std lahf or scas popa or jae and mov sar pop sub hlt jb jmp cmp outsl jbe mov xchg (bad) cmpsb in mov xchg cmc loopne sbb cmp sahf rorl xor sbb call pop roll inc xor (bad) les out jl ret repnz lds clc rolb mov mov jl xchg xchg pop sbbb xchg (bad) mov adc mull mov lret add (bad) jp jecxz into fistl pop dec aas bound pushf out mov mov mov outsb fstps mov call adc fmul jo sub jecxz scas or jmp movl push pushf mov lea jmp sti pop subb dec push mov cs mov xchg xor mov push push popa loopne insb inc jae jg fwait add popl adc test (bad) pop push das fwait sbb pop (bad) rclb pop xorl xchg xchg test in adc lods jno inc push stos or lcall cmp mov lcall mov scas addr16 sbb xchg mov stos mov xor mov lods (bad) addr16 cmp arpl or pop dec ret loopne out mov out loopne aam cld dec aam int3 mov or outsl push inc sti xchg movsb adc clc negb nop out jbe in pop or mov lcall arpl (bad) sahf cmp mov repnz cmp adc inc sbb add push fisttpl arpl arpl in sbb pop push push inc and lahf aam and add (bad) sarl sbb and (bad) outsl rcrl (bad) jo (bad) cmp cwtl aas adc and (bad) repnz sbb arpl jl (bad) jo pusha leave sahf sub and and lods push and popa popf int3 and sub cmc fildl add into and mov xor std dec xor repnz and lret cmp push jmp test sub loopne inc inc (bad) dec push or adc xchg (bad) in push test (bad) mov fldlg2 dec addr16 dec mov das cmp xchg (bad) jge xor mov mov pop sub adc add es call inc and movb pushl ret int imulb mov repnz in in rcl cmp mov scas cmc (bad) lods xchg loope sahf cmc test es and ret sahf js stos movl or mov add cmc jne outsl cmp inc and push xchg (bad) mov shl add push rorl and pop xchg fs dec cmp jecxz lcall pop (bad) dec pop mov into cmc xchg jl sbb (bad) movlps shlb mov (bad) or sbb idivb adcb mov loope adc pusha push pushf lea jae jmp pop mov movb mov movb lea jmp pop xor add xor je sub mov jns or cmp ss insl push xchg fnstcw jo fstpt ret ss xchg lret xchg js adc arpl pop mov xor (bad) ficomp xor sub mov jnp xchg dec setb enter mov je (bad) jecxz movsl jg and in jnp or dec into arpl scas ss inc lret and insl movsl dec mov repnz rcl ss lds mov (bad) cmpl fistpll addr16 addb mov mov test jp ror adc repz dec jns cmp test and stos (bad) pop adc jbe xor cmc int add in aas inc nop aas sub and mov out sar push cli and push test lcall pop push enter ret test push dec push fwait movsl mov or xorb sti mov into lds cmpl pop pop int (bad) cmpsl xchg add jge movzwl insb int sub shld movswl bnd sub popf (bad) dec fcmovne adc and cmp cmc push jge or jge jecxz add and data16 lds inc lret scas mov ficom push pop sahf scas (bad) or ficoml push stos adc xor mov in aaa cmpsb cmpsl outsl add mov (bad) roll pop adc lods in cltd pop ret outsb inc cmp push sub (bad) cmp loope out pop cs dec xlat (bad) repz cmp push in inc repz jnp out fs dec insb enter sbb push mov mov sub dec loopne xchg pop mov dec js aas jge aad sbb loop xor push test add push movl lea jne jmp pop fs cmp pop int3 ds mov pop dec enter popa outsb insl pop addb scas das lret cwtl lods rcr addb scas addr16 dec sbb inc mov cmc sub push mov push lret adc sbb mov rorb lahf fs icebp cs insl cmp dec push sub mov and jge jmp out daa jne push out sbb push iret xchg lret mov xchg mov mov nop cmp push jp mov mov rcl std mov dec and jne sbb inc frstpm(287 je adc mov (bad) mov mov shr clc not mov cmc clc sub jmp insb lods ljmp out aad lea stc divb (bad) test lds int push inc add mov fiadd push cld and fdivp ficompl js aad pop pusha cmpl and repnz cmc arpl scas mov insl xchg ja (bad) mov sbb add add jo in push pop xor (bad) in xor mov dec jg push lahf imul inc add mov sub pop sub cmp mov or push xor push and cmp fistp notl jno mov mov xor imul sbb jle cmp jecxz pusha (bad) sbb loopne loopne mov jmp test add lea or xchg pop add insl hlt stc aas and ret push pusha sahf or pop cs xchg mov lahf cmp aas movsl push subl in jg mov pop pop int3 rorb adc xor add or inc (bad) mov mov xchg lea (bad) mov adc out repz mov or inc xor test fxch lcall popa repz mov mov adc or sbb in stos bnd mov test imul repz add and add pushf mov lea jmp mov add add pushf stc or push push call lea jne jmp lock pop add sbb cmp add jb xor or clc (bad) pusha mov cmp dec pop lret pop adc jl lret add jge icebp cmp insb int3 pop inc daa lret xor notb jecxz hlt (bad) jb dec xchg dec push fwait stc loopne ret cli xchg scas xor pop push dec mov jle mov xchg and dec or aaa push fdiv es scas lods outsb out rcrl xchg mov lock outsl in adc aam pop push fs ljmp jae arpl sub out pushf adc call outsl (bad) pusha stc fwait cs in or fimul cmp mov rcrl ficompl dec mov test xor imul in fwait aam cld xor (bad) xor add loop pop fidivr jecxz scas daa jecxz mov xchg push cmp mov test arpl (bad) mov dec pushf pusha test mov repz pop (bad) int iret pusha sub les inc leave cmovl hlt leave out into xor push incl (bad) sub test cli out jg xor push fild and mov scas stos mov pop pop mov pop jp cmp and hlt aas aad aam icebp push lods cmp mov insl xchg inc in mov js adc lea sbb sub mov pop imul je mov xor add or fwait int3 and mov inc in push insb loop mov test mov pushf pop lret jae jl icebp bound daa in int3 xlat movsb stos push pop jne repnz jg and cmc and (bad) or mov pusha pop repnz into repz cmp dec ficoml dec fisubr daa mov mov jbe mov clc hlt push xchg xchg pop push imul add push bound pop test push push jno fdivrs inc mov scas divl xor inc int cmp andl and xchg pop and fnstsw test fldt es adc xor int and nop push pop mov es xchg pop and mov lods jae flds gs push push push (bad) pusha mov dec int3 daa jl sub jae mov or sti iretw out jnp aam jne add xor cmpsl and add ja loope (bad) repnz test sbb xchg (bad) jl out jecxz sbb arpl test and test mov arpl aad cli and xchg dec jle rclb and ljmp shll or packuswb in dec inc and jp jge jbe mov and pusha testl xor ja mov sbb mov push mov jp push xchg sbb into (bad) mov push mov das int3 xor insb ret sub imul (bad) idivl add add pop bound pop fcmovne mov cmp movsb sbb orl decb mov ds jl cmp js,pt jmp dec andl lret mov stos cs bound es xor stc loop out cmpxchg in push outsl fwait aam mov lods jle data16 lock jbe sub push int lret andl or (bad) mov sub mov inc pushf int3 sbb cmpsl inc pop sbb sub imul mov sub mov or mov or and jmp out pop xor nop mov push and pop pop fisubl mov jecxz idivl mov pop fimull subb loopne in adc pusha (bad) cli and fldl xchg scas rcl cmp imul mov pop in loope jmp (bad) aam pop pushf shlb sub addr16 lret aas and sub jecxz add lcall hlt decl xchg out stc push fcom loopne sti shr add cmc cmc bts clc mov inc mov jmp pushf repnz mov call lea je pushf cmc call push lock std std (bad) pop xchg fs aad xchg adc pusha icebp lret int bound mov pop push ss into dec pushf or orl leave add in fsubrl adc test popf nop rcl ds inc xchg stos je ljmp mov jmp adc inc push sbbb sbb xor mov push (bad) (bad) sbb push push and andl sbb (bad) jne icebp jb mov adc adc inc cmp mov enter rorb push adc jne and lods (bad) mov adc add in std or aam js pop pusha inc ds addr16 ficompl out faddl or xor xchg pop scas out dec test in (bad) hlt inc int in pop inc das icebp push repnz xor int mov pop iret cmpsl push mov xchg pop or inc jge insb mov cltd dec push ficompl leave out repz or mov pop sub mov enter mov in outsl mov pop xor sbb pop scas in rorb ljmp rcr leave repnz out add mov dec or mov jecxz lods test cli add bound in ret cmp mov cmp aad insl call or lahf xor cmp gs cli push xchg pop inc push andl fidivl aad pop rorb iret sbb add mov (bad) in cmp arpl (bad) hlt mov fstpt add lahf arpl push in jecxz mul arpl aas xchg ror inc cmc les pusha pop (bad) aas cmp cs adc pop repz arpl daa push lahf push cmp mov out lret cmp mov and cmpsl std jo daa mov pushf rclb push pop cmpsl push or pop push jmp dec imul les in cltd push mov dec pusha mov push cmp sbb js or lock (bad) push in test pop fnclex test lret or in add push ja pushf sarl decb sbb ds or lds jecxz push imul jecxz lods sarb je pop int orl pushf popf loop lds sub push (bad) insl std jmp push data16 (bad) adc lret jae mov jb push imul cmp jecxz dec mov (bad) out mov sbb mov push mov leave cmp sub imul adc pop movsl sbb popf jge and movsl cmp pop bound sub xor scas (bad) in push cmc test fwait sarb mov cmp int3 mov push mov dec jge std or pop decl daa cld fcompl mov adcl jecxz (bad) push mov sbb ret ja lret incl xchg cmpsl aam push pop scas (bad) mov repnz xchg and jb daa xchg sub xor or call xor add push ss test add leave sbb mov push popa xchg popa add pop pop cmp into add xor mov es mov jno mov add xchg outsb dec in inc hlt (bad) xor repnz add in insb addr16 ds push push popf (bad) out jecxz or inc das aas jmp ret mov (bad) es in into xlat leave fdivrl scas hlt leave jg test sbb mulb dec rcr mov loope loop xchg aaa xchg xor popl and mov pusha lea call jmp call imul lods lcall pop jbe ds xchg lods push mov adc sub addr16 push aaa gs mov xchg xor test cmc lcall call or popa (bad) mull mov cmc xchg in rcll jecxz js cld xchg cmpb sbbb subl mov clc pop dec xor adc lods scas xchg xor movsb ficomp aaa (bad) out aas test (bad) lret pop leave aad hlt mov jl movsb movsb pop dec iret sub js cmp adc fsubp push loop gs in mov sti fidivrl and adc mov lea adc mov stc pushf jmp lea jae lea mov (bad) icebp add xor cli decl xchg (bad) clc call jmp test neg jmp jmp test cmp lret sbb mov mov inc jae xor aam adc test sub sbb leave sub sbb stc clc lcall inc in mov (bad) loop jl movsl push inc repnz xchg mov in stc shr xor stos inc (bad) cld sarl pop imul push bound aas and shlb dec push repnz inc rcll mov lods aaa jns int scas loop ret mov scas in (bad) jmp out or mov adc cmpsb jo movzbl mov xchg xchg cmp popa hlt xor lea ja pusha call mov inc xchg mov aas cmp (bad) or (bad) mov pushl dec lcall arpl sbbl jle inc loopne mov cltd stos sahf (bad) add sbb out movsl mov cmp out repnz push (bad) mov mov stos cmp arpl inc mov or pop es ret xor mov fmull testb dec rorl movsb cwtl xor (bad) xchg rorl ljmp sub mov dec addr16 ret les xchg push scas or mov jne mov cmp lea adc mov pop inc les fild and aam inc ror dec insl dec push push mov cmp push mov lods imul mov out jle mov bound popa insb push jl cmp jnp jg jae push mov arpl and jne cli (bad) xor add xor mov adc and inc dec adc and stos arpl bound mov xchg outsb push loop inc sbb adc pusha addr16 imul rclb dec ja movsb cmp dec dec pop cmp fldcw mov mov imul mov pop and dec cmp fsubrl pusha jl inc rcrb mov outsl outsl fnsave or lds dec call arpl lds mov loopne ljmp int3 sbb cmc cmp outsl int repz or loope fxch out add dec jp sub nop or pushf pusha lea je push stc cmp lea pushf mov pushl ret inc inc dec xor cs insb add add addr16 jo outsb push je jb addr16 outsb dec dec outsl arpl jns gs lea jbe jmp inc int push (bad) sbb sahf pop and insl bound inc bound cmp es push enter cwtl js sub pop inc mov or in push xchg cmp (bad) ljmp push inc sarb les into unpcklps test popf cli pop add loop jecxz cmc repz push pop daa mov sub (bad) or fwait mov mov jns shll loop int3 cmp shlb sub into loop divb dec pop push push sub loopne into inc or mov ja icebp inc mov lahf cmc pop mov mov cwtl jb (bad) (bad) cmp inc arpl push sbb push push imul mov pop jl inc mov test jmp mov xor jno push lcall ficom or popl push dec or mov mov sbb mov adc (bad) cmp aad or jb inc jg and fisttpl out ret push stos inc in pop aaa mov mov or sub dec and mov xchg ret rclb dec in sub gs dec jle data16 jge xchg sarl outsl into cmp mov inc mov ret loopne pop test pop (bad) mov call pusha pushf movb cmpb call (bad) cmp in sbb pushf test shr mov add or repnz out mov int3 and xlat insl cs mov scas dec mov and dec jno jbe sti add test cmp cmp mov and xchg js sbb jg inc rcr pop pop rcr pop leave xor push into or ds jp sub out leave cmp loopne enter adc in stc pop add jns ret xchg cmpsb inc jg and decb shl shr sar inc mov (bad) jmp jmp imul jbe fwait cmp xchg dec pop cmp cmpsl mov (bad) dec inc cmp add loop lds xchg jo jmp adc jo xchg lcall xor movlps iret pop sbb inc ljmp ljmp mov lds bound iret push lahf sub pop jae cwtl call mov jmp cmpsl sub je pop or (bad) cmp imul stos arpl mov sbb cs cld test lea je push mov pushf call mov sbb push (bad) in jne push mov outsb cmp jbe mov loop les enter cvttps2pi mov and fistpl cmp ljmp pop lret mov loop cwtl sub dec lahf xor iret (bad) imul push sahf jmp rolb cmp in daa pop mov ret std pop stos fwait popf nop insl dec push loope (bad) fisttp mov push daa clc cmp insb xor cwtl mov lods adc in mov mov push pop icebp es fucom or add aas jbe sbb insl jno rcrl inc ret jae and jg inc nop cmpsb pop aaa sbb mov jnp ret fs adc lods dec dec add movsb and dec jae in (bad) dec push cmpsl (bad) out xchg aam pop in pop xor cld dec jnp jl inc outsl xor xor arpl dec movsb (bad) sti fisttpl sbb or loopne ror (bad) int3 cmp push icebp dec jmp mov adc pop inc (bad) xor out mov adcl popf test xlat inc (bad) mov sub ret jp loopne mov adc adc mov test shrb ret add sbb mov sbb imul sbb cmp cld push sub inc jl cld es adc std ljmp dec pop sub cwtl (bad) in mov add int sbb dec inc inc add pop in mov push repz lret fadds mov adc movsb jno mov test enter popa mov (bad) mov aad push cwtl jno (bad) (bad) push add jnp out mov test lahf fs xor inc in jno push int mov xor aad adc iret pop lret inc dec mov scas mov jno mov test xchg imul insl inc movsl insl rcrb adc in jne mov adc (bad) pop mov or lea xchg push adc xor movsb insb inc sti pusha and mov ljmp inc and leave inc sub fiadd xor mov js dec pop mov popa add adc xorl sbb jmp imul (bad) fcmovb jne add test test sbb int3 xor jno ljmp sbb (bad) jo xor pop das es sub ja fisttp or je mov stos popf cli add repnz push xchg pop push fistpll imul aam es jge mov leave out test sbb add fistpll jmp sbb in mov into or jge aam iret pop pextrw xor movsl jp xor test ret sub jne xor std pop pop or loop sbb mov dec pop sbb icebp mul inc fisttpll aad pop ficom jae test imul stc jns lcall or movsl cmc jns leave repnz xlat push in or pop out jns sbb push xchg jbe mov jnp sub fcompl in outsb js,pt fwait lret inc xchg insl mov aas lret lock cmp pop inc jbe lock aad mov imul xchg xchg stos cmp xchg out dec ja cmpsb fdivr callw fucomip xchg mov imul lret dec jae pop cwtl movsb aaa dec les fwait cmp inc stos rorb pop add or jmp enter xor adc cmp sbb jecxz push cwtl out in repz fistpl mov mov repz add mov lea ret dec dec (bad) lret cmpsb or add daa fistp add push inc xor (bad) cli push jp jnp and pop imul fucomi in leave cmp and xor cli cs js cmp mov rcll xchg ficompl push pushf lea jne setno jmp mov inc imul sbb (bad) clc xor jl clc (bad) loop or or mov inc imul lods out fsubs push jnp loopne inc pop pop cs mull sub sbb aad and add adc and add test or sbb xchg dec adc inc mov xor lret adc jmp xchg and fisub xor inc jge std (bad) push sahf and xlat xchg subl lret ficomp (bad) pop mov pop lret sub and call jmp mov sbb lcall aam clc fdivp inc popf int or test mov aam lret mov sbb lods gs adc push jp gs fwait arpl and ja adc outsl clc fisubrl inc push loop mov xor mov or imul ret jb fcoml pop or fwait stc inc mov adc test testb leave call jg test fistp inc (bad) not scas scas out pop mov out jmp sbb hlt sub mov add lahf arpl fldt push sbb hlt cmp les daa (bad) xchg test dec mov (bad) cld sbb movsb mov cltd in test push push fwait push mov rcrb or inc repz js inc aam test cli mov add mul or pop or sbb int dec (bad) in enter mov scas mov inc fwait push xchg (bad) xlat rorb pop jmp sbb pop roll xchg fidivrl nop shr push (bad) ljmp pushf pushf pushf lea jmp call stc cmp jmp lahf call (bad) mov inc mov es les and lods jbe out out mov repz inc test pop pop inc mov push out fcoml mov fcmovbe fcomps inc add lock sub maskmovq dec inc pop daa mov and xor xlat and cmpsb xchg stos add shrl je add inc mov sub jnp lds iret pop add xchg loope and dec xchg and iret js sub add fisub cmp mov pop push std push (bad) cmp cmp inc xor mov bt repnz call push pushf movl movb pushf lea jmp cmp pusha push lea jmp cmp push lea jp pusha lea jae sar inc rol cmp mov bts mov or or push mov clc call mov lea call call add inc cmpl jle and aad test dec (bad) lods adc mov add and stos rcll fs or or jns hlt sti popa jnp mov mov dec popa lret and xor cmp jno inc stos push ss jle sbb push (bad) xchg mov adc cmpsl int clc out adc jl xchg ret sub les push mov call in pop mov imul cmp push jne (bad) leave sub cs mov das ret jb and pop leave pop in call lret inc ficompl inc mov leave mov cmpsb add dec gs test scas lods and push jnp mov lret loopne adc xor push je dec sarb aad mov cmpsb lahf fisttpll leave cwtl jnp inc sub pop xchg scas mov ljmp and out cmp outsl adc inc add out xlat in inc loopne pop leave sub xor inc xor int3 shl sbb jne repz mov jl subl cltd cwtl mov xchg mov mov and push (bad) dec outsl jge sub aad pop stos sbb jl cs pop arpl js and dec jmp lahf or test inc insl in decb and add hlt decl test xchg (bad) (bad) (bad) mov sbb pop or push ret nop ss loopne lock lock pushf sti fdivs test fwait mov xchg les js test lods xchg test fcmove lock repz out imul mov int3 leave andb pop out popf mov sub xor push test push adc xor push add out inc mov sbbb lock mov pop xchg mov dec add stc pushf movzwl rcr movzbl mov movb add call not mov jmp pushf movl pushf mov pusha mov pushl ret jmp adc mov push pusha lea jae jmp xchg enter sbb aas xor je rorb push clc mov and add in mov mov out in jl,pt loop push movb cs and mov bnd xchg fbstp jbe xchg add dec (bad) fildl sub sub icebp pop inc es xchg pop mov es xchg fwait movsb in sub sbb dec push nop int3 outsl (bad) sbb mov xchg cs es sbb pushf and cwtl lcall adc dec movsb test lret arpl in jae ljmp in inc jmp xchg or mov out cmpsb test or mov pop push cmp mov stos or cmpsb dec lods mov out int fdivrs add sbb xchg jns xorl push insl mov push or push (bad) rcl enter mov mov dec mov adc adc popa (bad) repnz pop cmp push mov adc sbb xchg mov jnp in psubq and and cmc sub arpl pop repnz call lock mov in inc scas jecxz mov add jbe push push xor stos jo pop jb es and dec out iret xchg rclb xchg push sahf dec xchg mov jne lds das cmp jge nop xchg (bad) push cmp mov (bad) daa ffreep stos and pop mov inc int leave cli and xor mov test in fs cmp addl inc cltd inc push pop mov or mov xor mov push rolb and clc inc jae push mul sbb jbe cmp scas xchg and inc mov jecxz sub mov aam hlt adc stc nop (bad) cs jle pop sub sub hlt cmpsb xor push mov dec pop push call push push cmp jmp cltd icebp sbb mov mov mov mov lcall lcall xchg inc ret loopne add fidiv (bad) les and xor out inc sbb adc push inc jns dec andb sahf in sbb (bad) fsts stos test ficom das fbstp mov add pop add jl mov scas xchg xchg xor ret in out lret dec in mov add out sub pusha (bad) repz xchg pop xchg test sbbb jae jle fisubrl jbe adc xchg mov shlb xor cli sbb rorb mov pop xchg repnz mov call les dec jbe mov pushf jmp mov jmp or sbb outsb mov loop (bad) xchg shrb xchg mov arpl daa adc movsb lret adc xchg out lret loopne xchg adc push jg mov in lods push into inc clc or sarl or sbb jl fiaddl mov inc mov fistp push xchg pop lock ja inc loopne push fwait push mov sub int pop stos mov or out andl xchg and and push push adc pop sbb (bad) aaa push push rcl sbb (bad) lret push jnp ror ss lock jmp adc fs je cmc pusha sub cmc cmp movl pusha pushf lea jmp add push push js arpl gs add fmull sbb bound mov (bad) or jge xor mov addr16 inc jmp adc sbb aaa add (bad) aas nop add outsl popa movsl xchg sbb adc leave push jno std sbb cli loopne jbe xchg popf mov adc mov pop jno test je push xchg fdivrs mov outsl xchg fisttpll out jle pop push add mov sbb daa cwtl pushf movzbw movsbw lea movzbl mov call stc add clc pusha push mov cmp jmp push lea jne pusha jmp popf ficoml sti loope inc fadd inc cwtl pop adc pop cmp cltd push sbb fs mov mov and sbb mov xchg fs stc addr16 add xorl (bad) mov mov lea push sub xchg mov cld push jnp inc lods in ffreep jle int mov or mov dec ds jmp mov push insl cmp stos js negl sbb outsl clc mov or cld inc inc and pop push movsb dec push push ljmp insl mov xor setbe pop add mov insb ss mov movsb xchg adc adc add (bad) subb divb mov cmp jle test and pop xor pusha stos push fmuls in inc cwtl rcr cmpsl xchg xchg add cs mov push mov mov push mov mov cmpsb push cmpsl rcll lret dec lds ret ja (bad) in xor mov sub push jb mov addr16 in push cmc pusha lock ret adc loop inc notb rcr push mov bound cmp popa pop add jnp pop add (bad) jne sbb stc in insl jge jmp inc clc scas push sub dec sarb (bad) ja add scas or out les mov aam sbb and lea jg notb jg adc push xchg clc sbb insb push ss lods or clc xor mov push sbb dec cmc and scas imul aaa mov lret xchg sti mov nop add fldz push (bad) popf jnp (bad) daa fiaddl loope adc or mov pop dec fnstcw mov push lret cmp xchg nop movsb sbb adc fs jmp (bad) in xor mov sub dec ficompl rcrl ret dec jo add mov and js xchg pop or repz xchg (bad) mul in pushf sar adc pop pop jo mov call dec sti sti aas in dec stos jge aad mov outsb ret push push icebp fldcw repnz data16 pop nop cld push daa dec mov mov (bad) sti je pop lret outsb mov (bad) or sub mov (bad) jbe inc or inc (bad) scas jg xor nop adc or movsb hlt out or in and xor clc push test int3 int sahf jae inc fwait enter sbb ret adcl into or sti jnp push push mov push inc push ss push mov out fwait aam cld dec inc mov nop aaa test cmp sub inc jmp or mov mov ds (bad) pop and mov dec mov xor mov hlt ret and scas push mov mov incb lock or jae adc xor sub (bad) and jle sub mov mov pop mov cmpsb test pop xchg arpl out fwait or scas fdivs jl push mov mov adc push mov loope add sub (bad) mulb (bad) dec (bad) inc adc pop sub scas psrld (bad) call push lods ljmp (bad) sub mov mov rcrb test test test mov adc jno inc movb xchg in test in pop lcall cmp xor fistpll inc pusha mov ja fmull lcall int3 hlt push gs test mov pushl movb pushl ret push aaa int3 adc sbb lret call repz mov movsb dec addb dec lock jmp daa clc lea mov out jb rcrb jg in divb movsl andl adc movsb xor adc jnp mov std and lds mov insl dec xchg clc movsb lds xor push into repz dec cmpsb ja stos nop clc jno push fstl rorb test fildll cmp cmp jbe push test mov inc ja ds fsubrl mov jns sti and adc xor inc cmp (bad) fsubrl lahf into pop pop lea call pusha pushf adc call movb not mov pusha lea call cmc fiaddl fucomip sbb arpl lahf cmpsb aad mov stos stc lret or mov pusha jne cmp add testb (bad) pop loop (bad) jb xlat push xchg imul xchg call cli out imul andl sbb gs in add push sar fsts orl stos and movsl mov loope adc aas cmp aam aas xchg lock ja data16 pop or sbb stos mov push movsb outsb mov call call xchg shrb mov push cltd and cmp mov inc cld add fs jne call test pusha pushf mov jmp pushf mov call pusha dec movb mov jmp jmp sbb int3 sub or sub movsl jbe ret enter push xchg cmc or (bad) shrb mov gs insl fbstp fbstp arpl popf cmp (bad) es add pushf out nop mov mov fstpt or rol xchg jo pop (bad) leave xor aas ror inc rol dec cmp nop mov lock ret xchg (bad) fldt and sbb les mov bnd repnz nop out xchg es inc mov in jae and or and adc sub jns cli lret dec cmp in ja pop in cmpsb divb bound mov dec mov inc movsl mov push pop (bad) dec cld inc and dec lahf pop add pop add lds add add add push pop add add add lock add add pushl adc add add push add add add add in add add add rcrb add add add add addb add scas sub add add or add adc add push push pop add add add cltd pop add add add loop add push add mov add mov sbb sbb pop insl sbb push xor jne loope fs inc jge sub jle fistp pop adc mov xchg ljmp pop lahf idivl jge (bad) insb xchg mov jp ss jle and loope repnz sbb rcll mov cmp sub push aaa sub int3 lds push in xchg mov pop cmpsb popl movsb adc add xchg fildll jge cmp rcrl cli mov push aas insl cld add mov stos sub js xchg sbb push mov jnp (bad) mov call push xor push jmp and in jne adc cld in xor or icebp add dec fcoms and mov pushf jb adc test add push push (bad) ficomp inc fstpt and mov sbb inc cmp (bad) js cmc fs fdivrl fsubs lods (bad) repz jnp push subl pop mov imul repnz ds adc rol add aaa repz mov in adc lret push mov or inc shll push daa xor jae cmp call inc add jl inc sahf stc rorl lret ficoml out sarb scas mov pop imul mov sbb jmp cmpsb dec add sub mov shll lret ja push pop aaa mov xchg cld int jle rcrl repnz xchg mov inc jp (bad) or in imul dec push jo adc pop into xor mov push add out push mov (bad) mov into jns mov jmp xchg mov test push pusha mov bsf bt mov clc clc sub test pusha repnz jmp pushf lea jb bt call pushf call jmp adc pushf push mov jmp call mov jmp jae ja sete mov jns pushf inc inc mov pushf push pushf mov lea pusha movw pusha lea call call imull or jmp inc imul aas xchg (bad) adc and mov add ja pop mov ret pop cmp mov testb scas mov aas mov insb inc xor jo ss cmp mov cmp or icebp int3 les aaa frstor ljmp xor std xchg mov sbb push cmpl pusha in mov xchg jl in fmuls in mov jmp mov lock xor icebp das es cltd sbb and inc out outsb loope arpl inc pop mov inc mov sub je mov jecxz adc (bad) mov stos repnz xor hlt sbb insl cmp sbb add in (bad) in loop repnz movsl jbe adc ret dec or or sbb pop fstpt sbb lock xor mov jmp cltd pause xor jo sarb push pop cmpsl movsb insb jo inc subb mov aas aad push cmc ja lret mov ss daa int3 adc dec cmp mov ret lret outsb mov lock fbld (bad) pmullw or dec mov sti inc sbb dec les fwait cmp arpl add movsl into scas out sbb mov sub jg add xor lea jne or mov test pusha add stc movzwl neg shrd test bswap mov movb cmp stc add mov bt pusha bt mov pushl pushf bt test jmp lea jae shld inc movsbw bsf mov jmp and cmp sbb (bad) lods ret jbe std push (bad) decb cmp lock and hlt and xor xchg unpcklps and dec gs pop push sub mov dec les out aad pop out add scas rcr sbb ljmp xor outsb sub xchg daa dec jl jg jae lock test cmp cmpsb in loop je xor shlb popf pusha jne insb pop cmpl push and mov lds adc gs sub mov inc ficomp fadd or mov cmp pop lcall cs dec pop test xor ljmp test test add call mov call shrd movzbl sbb add rcr ror add bsf bswap lea not dec clc neg shl bts sar add lea test add mov or mov push clc sub call bsf mov (bad) (bad) mov pusha cmp add pushf mov movb pusha pushf lea jmp bswap jmp pushf pusha mov call jmp mov mov push mov jmp inc pushf clc bt add jmp jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp jmp mov push call pushl pushf pushl popl movl mov mov lea jmp push dec pushf jmp xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call bt movb add pusha mov mov push pushf pushf movw lea jmp pusha call stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call mov jmp pushf movb mov pushl mov pusha pushf lea jmp mov pushf pushf push lea jmp setns call btc lahf jp xor mov shr shld dec clc mov pusha add jmp mov mov lea jmp rcr sub bt adc mov bsr cmp ror shl mov bt stc jmp mov jmp push jmp setp jl not pusha mov lahf mov mov pusha pushf mov divl call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp bt xor movl jmp test btr sub mov add btc bts jmp pushf pushf mov pushf pushf pushf popl jmp xchg mov cmc shld adc mov cmc clc pusha add pushf call mov jmp aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf neg ror add add call pushl movb mov movl pusha mov pushf mov push mov push pushl ret pushl popl movb lea jmp pusha sub pushf movb mov movb mov mov lea jmp pushf mov movb pushl pushf lea jmp movb mov call cmc pushf add call pusha pusha add call pushf mov push call pushf call jmp mov pushf pushf popl movb pushf pushf call add mov pusha cmc xor cmp push push cmp neg call cmc movb rol push call mov push mov pushf jmp cmc cmp xor test test pushf stc sub cmp clc add movb movb mov push lea jmp mov pusha pushl push pushf lea jmp mov push mov lea jmp pushf call btc add adc and add push mov jmp mov jmp jmp push cld cld pushf pushf mov rep ror test rcr bsf mov or mov std jmp pushf popl jmp xor movzbl bt call mov pushf jmp mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp bt pusha sub cmp cmp pushf cmc and jmp mov pusha push push pushf lea jmp pushf popl pusha not mov cld jmp add jmp push cld jmp jmp pushf call mov push pop mov mov pushf mov call jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call mov call push jmp pusha pushl popl movb pushf push movb lea jmp pushf mov mov call mov pusha pusha sub test shr jmp bswap bswap mov lea pusha call jle cmc rol mov stc dec bsf bswap mov jmp mov lea cld cld bswap mov pusha cld push call mov push push mov movb lea jmp mov pushf lea jmp call add call bts mov sub test sar mov pushf call or call inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp pushf movb mov movb pushl lea jmp cmc sub test cmc add call push pushl mov movb push jmp pushl popl push push lea jmp call mov jmp mov mov push pusha pushf lea jmp call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp jmp pushf jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp push mov jmp shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call pushl popl mov pushl lea jmp ror add pusha mov mov call mov push call jmp lea jle pusha sub stc pushl cmp clc cwtl cmc sub movb mov movb lea jmp mov mov pushf movb lea jmp bt add call pushl popl push pushf pushl lea jmp mov pushf popl call sub call push call pushf push mov mov lea jmp pushf movb jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov jmp jmp stc clc pushl popf mov mov lea jmp pushf popl lea jo pusha pushl popl pushf push pushf lea jmp pushf pusha mov xor rcl stc mov jmp pusha call lea jo mov pusha pushf push lea jmp mov jmp mov mov lea jmp jmp lea jbe mov call add sbb mov bt test sub jmp mov push mov jmp daa aaa add mov sub sets call test sub jnp add push jmp pushl mov pushf lea jmp push call jmp mov movw pushf lea jmp pushl popl movb mov mov lea jmp stc shl shr test mov test clc cmc push add pushl pusha pushf lea jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp clc add push push mov pushl lea jmp rol movzbl push add pusha pushl inc call movb mov pusha pushl mov pushf call call call jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp add pusha pushf mov movl call xor bsr aaa shrd mov stc cmp sub call shrd not mov stc bt stc add pushf mov jmp movb pushf jmp mov pushf jmp lea call lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp lea pop pushf popl mov push pushf push mov pusha lea jmp jmp jmp call bts ror cmp and mov call and pushf cmc test cmp jmp mov call mov mov pusha mov push mov mov pushf mov call clc pushl popl pusha jmp jmp cmp mov cmp add stc clc stc movl mov movb sub call push mov pushf pushl mov mov push pushl mov pushf call jmp not mov pusha mov lea pusha pushl jmp cwtl das jmp pushf push pushf popl pusha push pushf pushl popl push lea jmp not push pusha pushf mov pusha mov jmp mov pushf movw push pushf lea jmp mov pushf pushl ret lahf shr mov lea not ror mov stc add pushf mov movw lea jmp dec mov jmp pusha mov pusha push lea jmp mov xchg movsbw movzbw call call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp ror cmc pushf cmp sub cmc call call jmp pusha pusha mov jmp bt cmp mov bt add cmc bt shld pushf jmp pushl popl pushf mov push lea jmp call push push push pusha mov movb pusha lea jmp jmp pushf pushf add bt call mov call pushf lea pusha mov pushl pushf pushf lea jmp mov pushf pushf mov pushf pushf mov lea jmp pushf rep rcr mov btr mov cmp cmp pushl popf mov mov lea jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr lea mov pushf movzbl adc cmp neg mov test pushf bt stc neg push pushl movl call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call call push mov pushf pusha mov push push pushf lea jb push jmp mov push movw pusha lea jmp shr aam mov xor stc rcr rcr mov jmp pusha mov pushl jmp bswap movsbw mov pusha call mov call pusha mov call push push xchg push pushf push movl pushf jmp cmp add push mov lea jmp push mov pushf pushl jmp pushl popl movb push lea jmp jbe add jmp push push movb movb mov pushl mov push jmp mov pushl push movl lea jmp mov movw mov pusha lea jmp call push mov call pusha sub cmc push cwtl jmp bt add pushf jmp mov mov movl lea jmp mov push mov push mov pushf call rol mov call inc push push mov pushf lea jmp movb jmp pushf popl call push mov pushf mov call mov mov pushf mov pusha mov pushf pushf jmp cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp pusha mov jmp mov pushl mov mov pushf mov pushf lea jmp stc pushf shr call mov push pushf lea jmp call xor cmc mov cmc cmp jmp inc clc shr mov sbb call pusha movb pushf mov jmp pushf mov mov movb pushl push mov lea jmp movb mov push movb movl push lea jmp push mov pusha pushf popl pushf pushl popl mov pushf pushf pushl lea jmp pushf jmp stc bsf cmp mov jmp pushf mov jmp mov mov movb pushf jmp pushf jmp cmp add push or incl mov dec out lahf lcall in lahf (bad) cmp repz (bad) jmp add push or jmp decl mov jmp icebp lahf jmp lahf incl stc lahf decl icebp lahf incl mov jmp push jmp mov ljmp mov inc add incl or lahf lcall out lahf (bad) (bad) lahf incl push mov (bad) cli repz (bad) cmp pop mov jmp lahf lcall in lahf decl lahf push in lahf incl mov (bad) out hlt lahf incl lock dec lcall incl mov push in lahf (bad) (bad) lahf jmp mov push jmp mov incl mov dec lcall push add incl lahf (bad) cmp lcall (bad) fiaddl mov (bad) fiaddl mov incl pop mov lcall repz push jmp lahf call lahf dec out lahf incl add decl lahf dec out lahf push in lahf incl or call lahf call or incl mov push or dec lcall pushl add incl lahf ljmp lahf jmp lcall mov lcall in lahf ljmp mov incl add lcall in lahf ljmp mov (bad) jmp add ljmp lahf lcall mov jmp mov decl or decl lahf lcall or incl push mov lcall push mov incl mov inc add ljmp mov incl add lcall or dec out lahf jmp mov incl repz lcall mov lcall add ljmp mov decl mov inc in lahf jmp icebp lahf incl add ljmp mov (bad) jmp pop mov decl lahf incl lahf (bad) jge mov (bad) cli repz lcall in lahf incl lahf incl lcall decl lahf call lahf inc add push or (bad) ljmp call add (bad) fiaddl mov (bad) stc push mov ljmp mov push add lcall add decl mov (bad) jmp push mov (bad) (bad) lahf decl lahf call add (bad) (bad) lahf incl push mov jmp (bad) ljmp (bad) jge mov (bad) flds mov incl mov push jmp mov pushl or (bad) (bad) lahf incl mov pushl hlt lahf lcall repz lcall call push stc lea inc add add and bsr rcl cmc lea sub call pushf mov pushl mov jmp sbb shl clc mov jmp not aam mov bt jmp pushf popl pushf pushl popl pushl push movb movl lea jmp sub pusha lea jne clc xor call push pushf lea jmp notl or shl mov jmp mov call ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp call call test sub pusha pushf mov push push lea jmp call not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp mov mov lea jmp not clc not cmp jmp mov pushl pushl jmp push pusha pushf mov movb mov call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp inc setb sub call mov mov pushl pushf mov lea jmp mov push mov push movb lea jmp call lea jne ja cwtl mov sar shrd shr lea bsf aad sub adc bt lea shrd data16 (bad) or out adc bsf data16 (bad) or enter add mov pushf movw mov push mov jmp pushl popl pushf pushf pushf movb lea jmp jmp call mov pusha jmp mov movb push lea jmp data16 repnz mov pusha call lea mov and test mov call pushl mov pushf pushf pusha mov jmp pushf lea jmp push pushl movb mov jmp mov pushf popl jmp pushl popl mov lea jmp call cld not mov jmp cmc cmc pushl popf pushf mov pushf lea jmp call mov mov movw pushf popl jmp call jmp mov mov jmp pushl mov pushf mov jmp push mov call movb jmp call stc stc stc shl movl mov pusha mov mov jmp pushf sub clc clc cmp mov xor stc sub jmp cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp pushf mov push mov pusha lea jmp pusha pushf pushl mov pushf pushf pushl lea jmp mov movzbw mov jmp test add push mov push mov pushl push pushf lea jmp add add pusha jmp pusha push sub jmp push pusha jmp jmp mov movb push pushl pusha lea jmp pusha pushf call mov push movw movb pushl ret not mov push divl jmp push push inc jmp mov pusha movb mov pushf pushf mov call movw jmp jmp lea jo push pushf mov jmp add btc sbb not sub neg call mov call push pushf mov call stc bsr mov mov pushf pushl call pushf mov jmp mov pushl mov jmp mov push mov pusha lea jmp rdtsc lahf mov jmp jmp pusha mov mov pushf pushf mov pushf mov call bt clc sub pusha mov push call or mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp stc movb add jmp jmp pushf pusha mov movb movb lea jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp mov jmp mov mov mov movb pushl ret call call jmp mov jmp movl pushf popl push call pushf mov push lea jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call cmp test shr pushf mov pusha pushf popl pusha pushl popl mov lea jmp call mov push pushl mov pusha mov push jmp call lea test cmp pushf movb jmp not inc bt stc rol not not mov pusha inc and ror add call rcl pushf pusha mov btc adc not data16 repnz cmp add jmp mov pushf call mov pushf pushl pushf pushf popl jmp (bad) testb aad push pushf sub dec neg sub adc add jmp xadd aaa bswap mov mov shl call mov jmp call rcr mov jmp pushf pushl pusha mov jmp mov mov movb pushf jmp xor neg movzbl cmc call pusha mov jmp shld mov jmp pushf call pushf mov mov mov pusha pushl lea jmp push pusha movb mov pusha pushl mov movw jmp lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret call mov push mov lea jmp call test push clc clc neg push ror jmp mov call mov call call mov pushf pushf lea jb push jmp pushf push pusha mov push lea jmp bswap call movb mov mov pusha mov mov pushf push mov pushf lea jmp mov call jmp jge pushf pusha mov pusha pushl mov movl pushf lea jmp push movb pushf movb pushl popl push lea jmp mov pushf pushf pusha lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf mov jmp pushf pushf mov call pushf pushl popl movb mov movw mov lea jmp bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call call stc sub pushf movb mov pushf lea jmp push push lea ja and cmc sbb mov bt lahf lea cmc or sub jmp push push movb pushf mov lea ja pushf mov pushf push jmp lea jge push mov mov jmp push push mov jmp jmp jmp mov movb call pushl lea jne xor mov cmc test call jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp jmp push call push jmp 