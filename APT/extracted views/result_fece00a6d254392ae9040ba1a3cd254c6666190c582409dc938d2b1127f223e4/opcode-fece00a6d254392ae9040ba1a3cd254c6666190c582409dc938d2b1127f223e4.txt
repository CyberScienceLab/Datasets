decl stos nop add add add push add push jge and cltd add psllq add push sub push inc jo jge into adcl jp pop orl pop fsubrl lcall push mov mov add in fmulp fnstcw das dec mov add aas aam fcmovnb pop inc xchg and push ret pop lds cmp enter (bad) iret leave (bad) leave inc into mov lret mov stos int adc and rcrb or pop enter xchg aad aad xchg xlat cwtl xlat pop inc into dec add aas cmp inc fistp notl cmovo dec pusha loop insl in push (bad) lock andl add pop in pop sahf mov jle cmp cmpsl insl je jg out call push push ss mov push pop gs push mov xchg in mov (bad) in dec enter out pop add inc icebp nop adc stos cli and adc or xlat popa xlat pushf nop std mov lods push pop jnp dec enter add add fdivs pop adc push push pop adc fdivs add dec add xchg push push outsb pop (bad) ja (bad) or adc test daa imul pop dec fistpl sbb test mov inc push pop mov testb and push jg or cmp sub sub sub data16 push sub sbb jmp jg xor in gs mov out cmp cmp pop in pushf fdivrs lahf fdivrs sbb jb fcomps in adc adc scas insl sarb push das scas jbe push lret imul mov inc js aam add pop dec push lea leave test pushf test out std call push in push sbb dec in cmp mov xchg mov mov sub mov push out push sbb repnz xor dec dec push lcall or xchg out inc sbb dec sahf movsb test daa int push pop xor iretw leave jae push imul in cmp fs jae cmp adc sub daa iret leave pop mov repnz jmp sbb xchg xchg out push push addl push insl lcall shrl push sub push pop mov lods xlat fsubr negb mov and daa repnz cmp push pop xchg mov xchg or pop and xor bound xchg sarb or and jae adc jb mov in jmp sbb add xor dec sahf xchg out gs xchg les in rcr jecxz pop rcrb pop nop daa iret leave jae ret and dec lcall out jae cmpsl aam or in sahf sbb sahf xchg pop xchg in ljmp daa iret dec push sbb jns lcall fsub cmp inc je add mov pusha es add fsubp adc push sbb es dec jns pop jge imul push push dec and insb arpl outsb mov outsl dec push xor stos dec repz mov jge lcall pop jae daa iret in sahf je sub jnp jns mov jp mov fsubs (bad) jge jle data16 jg push popl pop in mov cld add cmc inc enter or push xchg xchg xchg psllq push dec push ss test inc das sub adc notb push cld adc pop notb push js dec insl push pop test lea fistpl pushf add pushf fs loopne dec push pop icebp lcall scas xor cs lea pop mov push aas pop leave sarl add jbe jae lcall outsl std and imul mov fidivl inc xchg lret or jb pop mov sarb stc mov imul fs out bnd sbb movsb inc adc fdivr inc fcomip gs hlt js das rorb and imul xor out mov mov pop in pop mov mov fild sbb and (bad) idivl dec push cmp or xchg das repnz cmp inc lods out jb jl jo les out bnd in sub xor jl das lock cs push inc sarb iret cmp and incl push push and int3 adc adcb or pop xchg lock pop mov adc xor (bad) stc cs das cmp pushf or loopne loope or push or adcl in adc jb lahf loop add inc add adc jge out sti or or sbb negl or and test pop addr16 mov mov jo and push add fcomps mov add pop cmp fild enter jb mov and loopne das (bad) in mov fsub repnz mov push mov out push pop test aam sti sub mov das xor and sbb in ret and add jmp cmp pop in (bad) cwtl or pop movsb aaa jmp inc add adc pop pop movsl add adc pushl call or sub cli lds roll mov cmp arpl dec sbb mov (bad) (bad) (bad) jmp test test dec inc les adc jae dec mov pop out jb push add ljmp adc pusha rcll jge fild loopne adc push cmp cmp or (bad) jg ss push mov inc inc aaa cmp push pop add in jmp and add dec inc outsl jb sub int xchg push sbb add idiv jg add popa xor and sub adc add arpl push jl add jae add pop add pop sar push jle add loop mov xor and (bad) sbb push adc sub testl push orb jle push adc sbb inc add add add inc jb insl gs add or lods std ja mov adc adc add lds xor fs je in clc jae push (bad) fdivr loopne dec inc dec cmp cmp add loope xlat inc js data16 add test pushf outsb sti test sbb cltd bound sbb push out cltd or or daa cld test add xor (bad) lea out pop movsb push rorb cmovno mov outsl jmp push push or inc push and outsb sub subl aaa cmp xor and xor sbb xor lock mov mov out add add push add fisub push xchg add (bad) mov ja in add jg pop cmpsl pop inc dec inc out add sbb andb test (bad) jg or or or or or or adc adc lahf pusha fstpt add or lcall push adc adc adc inc add or sub pop add loopne inc add fst pop lock or les aas adc add add (bad) pop mov pop add mov fadds add adc push (bad) (bad) jg add add cmp cmp adc add and xor (bad) (bad) (bad) call mov adc xor (bad) roll and icebp arpl push mov (bad) (bad) incl fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test (bad) (bad) push movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc cmp add daa or pop add jno adc (bad) push lock rcll xor loope xchg loop cli roll push add es pop or (bad) adc je loop add push pushf (bad) daa add out add jp mov or cmp xchg (bad) (bad) (bad) jmp dec mov or mov push (bad) push adc add pop setp and ret (bad) (bad) (bad) call stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out ljmp sub mov lea mov push jo fldenv fcomp addr16 out idivl cmp sbb fs add mov mov cmp xor (bad) (bad) (bad) ficom shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos (bad) (bad) (bad) call (bad) pop sub add push xor scas jle stos cwtl movsl adc (bad) (bad) (bad) pushl nop add cld data16 sahf adc add and mov lea mov (bad) (bad) (bad) jmp pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad (bad) (bad) ljmp pop lea outsb loope std adc outsl mov xchg lds dec xchg sar (bad) (bad) (bad) pushl sarl adc jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push (bad) (bad) (bad) decl xor pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl adc (bad) in incl mov test push in lea push adc (bad) (bad) call shrb push insb fucomip fsubr xorl or jle cli add push (bad) cmp lret jle fsubp js fstpl xchg mov mov ja in fs (bad) decl (bad) ret repnz (bad) xchg cmp scas out sarl std push lcall test adc push xlat push xor mov rcrb jmp movsl mov inc fiaddl ret jmp in mov mov jnp gs fsubp arpl (bad) (bad) ljmp jge mov mov cli (bad) pop xchg es mov in pop add hlt rorl sbb (bad) (bad) (bad) (bad) cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov in sbb sbb sbb mov mov ficom jecxz outsb pop fidivl sub and pop into hlt mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec (bad) (bad) push dec jo aam cmp mov in jge idivl hlt jg imulb les xorl call inc mov das dec int scas outsb lret insl lea (bad) push xlat mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fsubl pop jns outsb leave sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl (bad) (bad) ljmp mov lcall xor mov (bad) xchg cmp inc sbb mov (bad) (bad) ljmp scas lret dec cwtl aad movsl rcrl ret (bad) sub imul (bad) (bad) repz cld out mov arpl fcmovnu inc cmpsl (bad) cmp add inc rcrl int (bad) (bad) (bad) jnp ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call out pop add vpshlb jbe into lret mov xchg inc loopne lock lret (bad) incl xchg push aas in inc divl (bad) cld aam aam loopne (bad) (bad) jmp in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov fcomip pushl sub divl jae mov or int3 insl add xchg add mov mov enter jle (bad) (bad) mov in push decl in xor aam pop dec xor rolb out fstpt add jecxz mov call call adc and sarl (bad) cmp es push jmp fs inc mov (bad) jg jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub das clc adc cmp mov add xor (bad) in (bad) lcall addr16 movsl xor (bad) cmp repnz rcrb rcrb stos sub fdiv (bad) cli jmp (bad) insb mov xor into movsb rcrb pop je (bad) (bad) lcall movsb out mov adc mov popf sbb cltd inc mov cmp ds rclb fldcw les xchg and xchg ja (bad) incl int3 jnp cmp mov sbb jmp add mov out push repz (bad) mov aaa inc mov cmc cmp call mov hlt xchg sub bound stos stos (bad) jne cmp imul cmpb (bad) hlt int3 sub lahf inc out lods nop xlat pcmpeqw hlt mov xor jle iret mul in (bad) jae (bad) jb lcall xchg mov jnp clc dec stc test pop sbb fs hlt cld (bad) (bad) jmp xchg mov cmc jae mov out popf nop out out xchg xchg out enter (bad) decl int3 push xor dec pop cmpsb je in stos xor leave mov sub adc xchg ds dec testb cmp idiv scas cmpsl push (bad) fist mov pop stos scas bound inc mov ljmp mov cs (bad) ljmp sbb cmp cli outsl inc inc mov idiv stc mov cmc jnp mov test std push and int cmc pop sbb stos notb ret mov or lods pop cltd (bad) mov or jp daa call gs xor lds out (bad) (bad) (bad) mov (bad) enter mov or fsts mov jle mov mov out xlat cs ljmp les mov ljmp mov (bad) push lcall and insb cmc sub lods test dec push ljmp jo (bad) incl gs outsl mov aaa inc or test push jge aas test loop inc (bad) jmp and mov stc sub loopne pop pop mov stos (bad) (bad) (bad) jmp xor jg aas lret xor sub mov testb rolb lock inc ljmp (bad) (bad) cmp sbb iret int icebp fisttpl lahf stos imul cli (bad) clc (bad) jg fcmove xor out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop (bad) (bad) ljmp or fistpll jo mov mov sti inc aas aad pop xchg (bad) (bad) (bad) call xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp (bad) decl lret sub sub cli arpl (bad) cmpsl ret push sub ljmp lds shrl sbb lds lods sahf xchg ficompl jg sti jmp mov insl adc mov inc into mov (bad) (bad) (bad) pushl sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa in mov sti mov mov std xchg jnp call sahf out ja in (bad) add jg (bad) cld loop pop call xchg cld jae lret push popf mov mov xor mov ja lock mov outsl stos (bad) scas jb loopne (bad) (bad) (bad) lcall pushf ss cmp inc sbb mov xchg fistpl inc cmp push out and jnp (bad) fistp es std inc xchg arpl adc outsb push movsb mov aaa cld (bad) jmp insl movsl into hlt sahf (bad) fwait inc ficom imul mov xor (bad) (bad) (bad) jmp imul add ret pop mov and push iret lods push (bad) jp inc hlt (bad) (bad) jmp mov push addr16 ss jne not test aad jle lcall fucomip into ret mov push (bad) fstpt adcl (bad) sbb push mov mov cmp das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp jle fstpt cs iret jge add mov pop push ljmp aaa push jmp lds inc insl and outsl fnsave xor mov jbe gs insl dec not mov scas jne or loope inc fsubr fistpl out addr16 aas dec push leave idivl gs std (bad) (bad) dec (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push (bad) jg mov es ds sarb jg jp insl add or leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov movb pop add imul or add inc and (bad) (bad) (bad) mov or mov (bad) mov insl push cld adc sub (bad) (bad) decl xor jl pop pop hlt pop sti push mov add fnstsw fisubl (bad) (bad) (bad) ljmp pop cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl rol in daa inc and movsb cmp add cmp shlb sub xor int stos (bad) (bad) (bad) dec fmulp sbb add imul mov jp idivl scas out cmp dec in pop ljmp (bad) fstps sub shll movsb xor int3 movb std das out (bad) frndint out movsl push cld aaa mov xchg lcall mov or ja ja inc and mov movsb xchg enter mov xchg das rolb xchg dec xchg ljmp and jno cld jg je xchg (bad) jo mov cmpsl and (bad) (bad) incl in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov mov mov jge movl es idivb push xor idiv (bad) mov push out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti (bad) (bad) (bad) (bad) mov jecxz jl mov mov (bad) cmp mov jmp mov sti mov cld scas inc cmpb (bad) mov mov adc (bad) (bad) jg dec out lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov (bad) fild cmp pop sarl sub jmp (bad) (bad) (bad) mov test sbb inc mov daa movntps ljmp ljmp popf dec pop stos mov mov int scas scas sub mov jge cmp (bad) pushl mov pop mov rcr pop call mov cwtl sub xchg mov xor (bad) (bad) (bad) fstpt pop scas scas (bad) pop inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or pushl aam or inc stos repz fsubrl lods rorl sbb (bad) (bad) (bad) std push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov mov cmp fldt (bad) aaa cmp test scas jmp (bad) pop stc lds (bad) mov xchg push or (bad) (bad) (bad) mov outsb mov aas jecxz mov sti xor (bad) xor push add or (bad) out arpl ds push jb push flds in cmp out push and xchg mov cld ljmp push test sbb jno lea repnz repnz jecxz fldt cmc sbb dec test jmp cli fucomip mov das clc aas (bad) lcall lock in mul lahf dec rcll mov inc mov push loope iret fidiv push push ljmp (bad) xchg mov (bad) (bad) (bad) call mov std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg (bad) (bad) (bad) lcall push outsb jo stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push (bad) (bad) (bad) (bad) fldcw lret enter call movsl xchg and push (bad) (bad) mov loopne (bad) sbb cmp notb push cwtl jl mov lock (bad) out lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs mov mov sub pop lock and out push sbb jge out ds stos push jne mov rcr push ror cmpsl gs fs lret enter sub out in (bad) (bad) (bad) mov in fwait xchg pop mov dec dec adc sub pop xor xchg (bad) decl mov jle aaa movsb jno cli inc inc imul inc mov cmp (bad) (bad) pushl jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv mov fldt test pop repz roll jg (bad) (bad) jmp jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov paddw (bad) (bad) in pop dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) fcos in push sahf sub aas inc mov xor cmp dec add fs jne or (bad) ljmp in push push aas test or pop js sbb stos mov xchg repz outsl add outsb dec lock sbb daa pop or mov add in das data16 mov or imul cltd lcall pop and jl clc jo add add sub aaa inc test inc cmp jp sbb or mov add cmp (bad) aas or push fstps outsb flds aaa push mov sub imul rclb std xchg cs add outsb sti loope add add jb gs xor xor add addl dec xchg insb insb ficompl jo and outsb fs bound aas roll adcl outsl outsb lea data16 inc outsb fsubr push jo pop inc ja push pusha lret insb imul jae add add dec inc mov pop sub pop addr16 jo push outsl jb imul (bad) insl sbb sbb loopne out popa jne cmp popa je fs jo cmp or cltd insl clc pop adc add insb push inc pop push and dec jae gs cmp jg popa insb je popa addr16 push je popa fisttpll dec jae push dec dec insb outsl insb xor sub pop or mov dec sub int3 pop fs rcrb bound out push push sub or inc cli fistl adc xor in or dec outsl mov mov cmp xchg or xchg push jo scas je insl or mov sub jne sbb aas lock adc add or mov inc punpcklbw adc pop and in inc sbb cmpb pushf and stos and inc cmp add movsb pop cmp or push jne nop push push enter fstl inc jb jle or and cwtl jl test dec pop xchg lods mov add or data16 lods or mov push setne cs bound sbb and jnp je jae jo adc inc popf mov decl xor je cmp das outsb jae popa (bad) (bad) jmp push arpl das js jo xor xor add js popa arpl je (bad) stos xor cmp daa and adc dec xor (bad) (bad) pushl gs gs jp push arpl arpl fs aas or cmp jo out xor push insb mov pop mov aas jmp das xchg imul dec push and add loop imul data16 mov pop (bad) ja jb and ss mov push inc inc fldt mov popf sbb ja ja,pn mov bound add xor das xor sub (bad) jnp mov sarb pop and outsl imul lods cs or aad gs sarb cmp outsl outsb and popa xchg loope add jne cmp arpl cmp cmp xor aaa fs mov xor xor sub cmp data16 cmp daa mov cmpsb and in lods jmp xor pop cmp cmp arpl gs and call js insb pop inc imul aaa dec cs pop xor pusha add fdivs cmp xor jo cwtl xchg sub sub sub sub push add cmp fsubs cmp jae jb bound mov sub xchg xor aam je cmp (bad) cmpsl mov fwait jmp jne aaa mov imul push inc daa push outsb faddl push outsb push sub pop (bad) jae stos pop ret xor push sarl shr push ds sbb es daa sub push adc jns imul shrl jns push xor int3 push jge pusha insl add sbb ds push aad push adc push hlt data16 adc sbb fidivr jne arpl and in dec dec jge insl (bad) push add mov gs jb cwtl jns outsl mov popa jb insl mov int rcrb xor mov jbe stc cmp arpl xor bound cwtl ja pop lods lea loop jne loopne pop and fadd bound mov leave cmc and and icebp mov mov cltd push andl cwtl in fbld das gs gs jae xor sub rcl push mov xchg imul pusha dec push mov inc fcoml fisub les adc push add addb add adc rorb outsb (bad) incl ljmp dec inc inc pop push push dec inc dec dec inc test mov push or dec imul (bad) jg outsb je push inc inc and pop and into or mov dec push inc push mov inc inc and xchg cmpb not shrl dec stos es arpl jle out or pop xor test insb xchg xchg pop in je lock adc imul jb movsb repnz inc push sbb inc out push popw inc fs fs push jl push lcall add cmp xchg gs and jne imul ja gs sub and arpl xor push push inc cmp sub bound je pop stc aaa cmp jo and arpl and scas push dec fisubrl sub dec pusha sub and outsb jns out cli not loope mov enter ss int3 andl add aam adc int3 daa add outsl mov cmp data16 cltd mov sbb and push push lock lahf push pop ret xchg fucom arpl mov add cmp in fildll ja inc or clc popa cmp test pop sbb js and mov imul gs xor sahf out aam lret fsubrl int3 sbb and sbb inc mov mov push scas add movsb (bad) lcall add iret adc in int3 inc adc push pop sahf dec aam popa jmp dec or and call push sbb inc fldl (bad) outsl inc push push mov pushf jbe add or cmpsb adc rcrb add add add ja test push xor aaa add inc rorb dec adc push pop add cld insl stos jo,pn xchg inc jl addl push incl nop add (bad) test mov sub roll add loop add add add add add fst pop or add js add add (bad) pushl push sbb add add add add dec add pop add addr16 (bad) (bad) incl outsb add jl addl add add add add add add add pop (bad) (bad) incl jmp add add adc sbb add add dec push add (bad) (bad) lcall add jp test mov cwtl add add add add add add add movsl (bad) out mov add add add (bad) decl add mov xchg add add add add add add add (bad) incl add add add add add add add add add add add (bad) (bad) (bad) incl add add add add add sub pop add xchg (bad) in incl aad in testb push push daa push aaa push dec push pop push push jnp mov popf (bad) jmp incl scas push rolb push jecxz cmc pop sbb sub cmp pop je xchg cltd pop (bad) (bad) (bad) ljmp in clc or or or or pop or (bad) or or or (bad) (bad) jmp or or or or or or or or or or or int (bad) cmp or or or or or or or imul decl cwtl or or or or or or or or or or or or or es je mov fimul cs dec push fs jg (bad) (bad) (bad) lcall push out wbinvd (bad) cmovno pop (bad) xchg btr iret paddsb (bad) (bad) call adc popa adc fwait adc adc adc adc insl adc call adc adc adc jecxz add and inc adc cmpl adc adc adc adc adc adc adc adc adc adc push adc decl mov mov or insb push (bad) push mov (bad) push cli (bad) (bad) (bad) call sbb pop mov scas pop rclb negl sbb inc sbb mov scas sbb sbb sbb sbb (bad) (bad) lcall imul sbb sbb sbb ja sahf sbb sbb sbb cmp arpl mov mov (bad) (bad) lcall ficompl sbb sbb sbb sbb sbb sbb sbb jo cltd sbb push push inc (bad) (bad) (bad) lcall push xchg push mov jb pop imul ljmp and (bad) (bad) (bad) jmp sbb dec and mov and and (bad) and and and xchg and lcall jmp lock and and and and push and xchg and daa es (bad) (bad) call xchg mov call daa jp stos daa fsubrl or sub sub sub (bad) (bad) ljmp popf sub sub sub sub sub sub sub popf sub sub sub sub sub (bad) (bad) jmp sub stos sub dec cs cs out das and pop das xchg das (bad) das (bad) (bad) (bad) (bad) (bad) xor xor xor xor (bad) xor xor fwait xor xor (bad) (bad) (bad) jg mov xor xor xor xor xchg aaa ss scas ss pushl test pushf aaa xlat cmp push cmp inc cmp mov cmp cmp (bad) (bad) (bad) out cmp cmp gs test cmp cmp mov ds mov jmp aas and popa aas mov inc fs cmpsb inc out sub inc lods inc out inc xor inc mov (bad) cmp push inc cmp inc rolb inc mov inc push inc lcall (bad) (bad) (bad) incl inc lock xor dec add dec xlat dec sbb dec lock aaa dec jge (bad) (bad) mov dec push dec lcall mov dec xchg dec fmull dec outsb dec (bad) lcall mov dec dec dec xchg dec fstl push jno mov push fwait push out (bad) (bad) (bad) pushl push jl (bad) push adc push stos push notb (bad) push fistl push jne ret push pop push test push push inc push xchg push loopne das pop jge lret pop sbb pop mov pop cmpsb pop cmc pop inc pop xchg pop (bad) (bad) (bad) jmp pop xor pop daa pop js leave pop sbb pop mov pop mov add pusha mov popa dec popa mov bound xchg arpl call xchg gs (bad) (bad) lcall cmp xchg addr16 fisubl xchg push imul dec push (bad) (bad) (bad) ljmp imul imul push insb scas insl or insl mov outsb les outsl js (bad) jo inc cld (bad) pushl jo jno jno jno jb jb jae jae jae je cwtl (bad) (bad) (bad) dec jne jne jne jbe jbe jbe ja ja js js js jns jns jns jp jp (bad) (bad) jmp jnp jl jl jl jge jge jle jle jle jg jg jg addb (bad) ljmp or (bad) hlt adcl test test stos (bad) (bad) (bad) incl xlat xchg xchg mov mov mov mov mov mov (bad) decl lea mov (bad) ss sahf nop push nop outsb nop (bad) xchg aas xchg test adc lds xchg and xchg leave xchg xor lahf xchg or (bad) (bad) (bad) decl cltd and nop cltd cld lcall scas pushf sbb mov sahf inc sahf scas lahf (bad) (bad) (bad) lcall mov inc mov xchg mov out push movsb (bad) movsl cmp (bad) lcall cmpsb mov loopne push test test sbb (bad) stos add lods mov (bad) incl scas sub scas mov ljmp mov mov mov mov mov adc adc jns lock mov mov mov mov lcall mov and or jp cmc (bad) jo in sar (bad) jmp jecxz pop ret pop ret aam push (bad) into lds enter ret movl mov (bad) cmp mov lret ss mov xor int into ss mov aaa iret mov sar (bad) (bad) (bad) cmp mov roll aam aam aad aad (bad) push (bad) fcom pop xlat loopne fs icebp (bad) (bad) (bad) (bad) fnop data16 sti fildl fstl fstl fildll fildll loope loope (bad) (bad) dec loop loop jecxz jecxz in in in out out out out call inc jmp (bad) decl in jo sti in xchg adc pushf out sub mov inc out int3 lock lock jb push mov (bad) (bad) (bad) lcall repz hlt xor ret cmc fdivp insl idiv (bad) mov sbb test cmp (bad) cli push cli out ja lods stos test pop cld cwtl std sub mov (bad) incl inc add (bad) xchg add bound adc add xchg adc and pop push mov aas test pop or add push cli pop fidivrl cmp pop add add add mov rcrb pop add add push push or sbb add adc add xor (bad) (bad) (bad) pushl and popa and pop push jno sbb and es or rcl daa loope ja call (bad) icebp xchg mov inc aaa inc arpl rclb (bad) (bad) jmp repnz mov sub data16 cmp dec dec dec decl mov push ja jns test xchg xchg xchg cwtl cltd lcall shll mov mov into leave lock cld dec aam (bad) xlat fcomp (bad) in out cmc jle div clc stc cli adc andl mov insl adc and das clc (bad) incl pop xor jno inc andl bound xor mov push inc jb pop (bad) incl jmp (bad) xor sbb icebp mov push ss fs or loopne lock jne aaa test xchg movsb aas mov lods mov xchg iret sub push sub data16 shrl pop push mov mov cli (bad) lcall jmp pop push mov ljmp test fs (bad) or or stos mov jo into lret or push inc sbb fisttpl adc xchg (bad) fisttpll mov inc dec es adc xchg incl (bad) call sbb lahf lock aaa imul (bad) lcall pushf mov lds rorl mov xchg sbb dec fidivr mov test inc jne (bad) push adc (bad) fldenv sub cmpsl mov xchg dec adc and add rcrl (bad) aaa cld (bad) call ret jns inc sub add xor mov xchg mov xchg and std (bad) ljmp loopne inc mov into ret adc cmp lods (bad) (bad) (bad) call rcll sbb push test and pop out (bad) outsl jns das stos dec out (bad) (bad) (bad) jmp adc jnp nop mov test sbb scas inc ficompl inc push (bad) push mov (bad) call cld lret mov std std or (bad) nop adc es test ret lods cmp ljmp and sbbb popa sahf fnop (bad) (bad) pushl mull pop aad fimull rclb stos fdivr add dec je push mov (bad) (bad) mov arpl dec cmp mov xchg xor xor dec dec mov loopne (bad) (bad) (bad) jmp sahf mov js flds (bad) or sti aas mov gs lods shlb or ljmp stos add fidivl mov test jp insb mov popf jbe lret sub (bad) (bad) (bad) decl adc jmp mov mov roll mov lea (bad) (bad) (bad) decl mov stos pop test xchg or and mov lret imul xor push (bad) (bad) (bad) incl dec and imul call js and jp jo decl (bad) decl ds inc test inc outsl jge shlb adc ss imul xchg sahf lahf (bad) in xchg shlb sub pop inc push jne xchg sahf loop movsl lock (bad) call (bad) xor adc pop adc aam jle push push cltd pop push (bad) and (bad) (bad) fisttp lahf pop push cltd daa xor mov mov mov pusha mov pop (bad) (bad) (bad) dec cltd mov ja push in cmp cmp sbb hlt mov push call push push push sar outsb xchg push or sub repz jp movsl inc jp (bad) (bad) jmp cmp mov sahf pushf lret incb sub cmp mov ljmp mov out push sarl mov cli insl dec icebp (bad) into mov (bad) push add xor out stc in cli xor movsb mov inc jmp cmp (bad) mov adc iret mov pop mov (bad) sbb mov (bad) (bad) (bad) incl test repz jle js,pt or mov xor cld mov inc (bad) enter ljmp xor scas push sub sub or sbb (bad) ljmp in and xchg test sbb xorl push aad xchg lcall decl inc sarb test pop xchg movsb push int3 push xchg int sub dec push (bad) (bad) (bad) jmp mov js fstps mov xchg mov mov fcmovne out xchg iret sub (bad) (bad) (bad) (bad) mov pop add dec negl fnsave loope add sub dec sbb push push add decl cmpsl cmpsl add xlat pop sbb mov push test (bad) (bad) (bad) (bad) decb test xchg dec mov cmp enter arpl sub dec and pmullw (bad) incl push xchg dec loop rorl or xlat or xor add bound (bad) jg lret adc cmpsb lods mov inc mov in clc jno lea fcomip cmp xor mov aam in ljmp jg pushl pop leave jp sbb xchg sbb cmp sub hlt (bad) (bad) (bad) (bad) decl cmc dec ljmp pop inc mov mov or mov inc popf cmp aam test mov pop daa test fwait stc (bad) adc mov adc incl and inc call out add (bad) (bad) call xchg fistl push xchg enter call addr16 jb (bad) and movl fsubrl add cmp push (bad) dec inc fdiv call dec xor fcomip xchg dec adc data16 xor inc cmp cmp outsb orps add and shll fcomip call jbe inc insl jge (bad) (bad) insb sbb decl push fs adc dec lcall rorl xor xchg dec imul lret lods fwait outsl loop lcall mov push addr16 inc scas xor jno and xchg pop inc out (bad) (bad) (bad) mov outsb idivb mov popf xor popa loop movsl or arpl lods mov incl int3 add out std xchg mov gs sbb xchg push fstl jb jo hlt call std sub call mov inc int sub pop popa lods leave mov pusha pop push lcall sbb lock arpl js das sar cltd ret add sub mov in inc sub mov (bad) mov fcoml add inc mov xor dec dec sub push adc (bad) (bad) (bad) lcall mov push ret fisttpl mov pop xor push sbb lcall push (bad) (bad) (bad) call (bad) call mov xchg movsb (bad) aad xchg push adc mov sbb out loop ljmp sar xchg mov xor test sbb hlt and pop loopne pushl xchg int3 sti mov je sbb mov push sbb (bad) (bad) pushl (bad) adc (bad) cmpsl (bad) ret ljmp (bad) loop fnsave (bad) (bad) (bad) decl enter push mov sub push inc sub es mov sbb jae (bad) (bad) (bad) ljmp fsubs imul push push test sub mov jbe test mov (bad) (bad) decl rorb cmp mov xchg xor inc scas jp stos ss push (bad) (bad) (bad) call mov (bad) mov sub push dec pop fcomps push inc adc dec addr16 (bad) jg je cwtl inc lcall lret sti pop mov shrb (bad) lcall test xor pop and push movsb xchg gs dec jle jp or mov int3 out cltd ljmp fdivrs jb mov cmp xchg sbb push test (bad) (bad) (bad) fcoml xor push sbb out lret arpl xor mov in push mov (bad) (bad) ljmp loop push jne cmp inc pop jns sbb push dec xchg bound or inc (bad) (bad) (bad) call cld cwtl pop mov fsubr div dec mov mov xor lret (bad) (bad) (bad) jg mov fwait mov pop insl idivb pop xchg inc cli mov je lods int3 or lcall clc and es mov sahf lds sbb xor fcomip (bad) decl mov mov rcl loop xchg popf jmp je mov fistpll and int3 out in mov mov (bad) incl ss pop (bad) std dec in jns sbb sbb and imul cs cli mov cltd ffreep jle fsubl mov and adc sbb cmpsb ss ss (bad) cmp into stos xor inc out cltd mov int adc add cmp cli (bad) (bad) (bad) decl loopne test in xchg nop push dec mov (bad) jecxz sub jne (bad) ljmp sbb lret push push add push and push mov xchg outsb sub (bad) (bad) (bad) ljmp in add push addl repz mov fstps outsl shll xchg (bad) cmp cmp mov aas dec cmp insb pop insb fwait xchg lcall insl js scas pop adc call xor xchg ret inc mov fisttpl jmp pop push adc sub inc int3 (bad) loope lcall xchg push xchg inc push es lahf (bad) mov cmp stos cmp dec cmpsb sbb cli mov and imul (bad) dec push push adc js mov adc mov adc inc movsb sub xor cmpsb fdivrl (bad) (bad) (bad) pushl sub test mov fnstsw rol pop inc push aad mov insb push mov lcall pushl imul mov lret inc add sahf fistp orl or test mov ret shlb (bad) (bad) (bad) ljmp test lret repz out aad pop ret jne aam in jns movsl aam bound push cld push mov mov sahf pop mov mov (bad) shr (bad) (bad) (bad) dec fdivp cmpsl mov (bad) jbe jecxz lods (bad) leave arpl push xchg aas mov sbb push pop cmp (bad) jmp sarb push pop mov push mov inc mov (bad) repnz in mov outsb pop mov out (bad) cli and pop out add push (bad) imul dec gs pop (bad) (bad) push out sub sbb cmp jns iret fdivrl jp sub cmc mov (bad) (bad) sti jne mov es push sahf frstor mov cmp (bad) aaa out (bad) dec adc mov cmp xchg insb pushf (bad) (bad) (bad) (bad) fsubr mov push xor mov (bad) mov loope aam push (bad) mov (bad) (bad) (bad) incl sub lcall fidivl out mov jne and ljmp (bad) (bad) (bad) ljmp mov dec in addr16 inc pop fwait lret cmp jl arpl adc add (bad) decl (bad) and xchg push movsl inc xor (bad) pop mov imul in negl in (bad) (bad) (bad) (bad) fcompl jecxz out outsb insl fmull loope mov leave inc cmp mov push jnp xchg out int icebp sbb jg push dec jo ds sbb insb pop or repz mov fdivp (bad) jg insb mov in (bad) es loopne scas cs push adc xor add pop fisubrl fwait push imul roll jge (bad) (bad) pushl fstp insl xor inc jmp dec mov xor mov mov sbb stos shrl scas (bad) (bad) jmp call xchg fidivr repz jae push mov push je (bad) (bad) pushl jnp add jne pop jp push and pop rcrb dec jl ljmp (bad) jmp xor (bad) or outsb data16 mov ja add movsb push lea cld (bad) (bad) js sub lea jmp sub je xchg fstpt popf xlat add stos dec pop push inc in sub cmp (bad) (bad) dec dec aam lea cwtl js bound mov jno stos cmp and jae decl sbb popf sub notb lret xor mov mov inc and outsl (bad) ljmp jle xor dec outsb dec das andb push rcll or sbb (bad) (bad) lcall adc imull ss ljmp pop add lds xor incl push or shrb rclb int3 or ret call jp cmc cmp ds sub and fxch ss (bad) (bad) jmp cmpsl je inc popa mov nop mov cli adc cmp jle out outsl add (bad) call orl scas sub mov mov loopne or sbb jmp sbb lret das cli mov and in and sbb sar stos sbbl pop pop or cmpsb xchg (bad) (bad) incl test or ja or out sbb into cmp push and inc (bad) add or test test pop jl out adc jno dec pop jmp xchg and inc xchg add and mov mov (bad) (bad) (bad) ljmp dec inc push add xor xchg xor mov cmpsb mov (bad) jp (bad) and rcr sub (bad) (bad) (bad) lcall push test cmp stos sbb aam pop xor sbb (bad) xchg adc cmp push (bad) (bad) (bad) dec in in dec je push sub addr16 in dec jno subb push and mov (bad) (bad) (bad) ljmp movsl lret push nop add stos pushf sbb sub rcl adc ljmp nop (bad) out mov push push xchg test inc xchg aad movsl add push xor ja fwait int cmpsb mov aaa adc aam adc (bad) (bad) call lcall or sub insl pop inc push mov adc xchg mov (bad) jmp jno add jp cmp pop inc loope jae int idiv cmp test nop out and (bad) (bad) ljmp dec lret sbb and xchg inc es imull idiv decl push sbb inc mov inc xchg inc cmp push and je xor pop sub pusha push fsubl pop into push aad dec bound (bad) (bad) dec add lcall iret sub mull push sub mov push (bad) (bad) ljmp dec mov shrl mov push xchg sub or (bad) jmp inc push dec sub das and dec out pop cltd xchg and dec test fisubrl cltd lcall ret call les jbe mov and inc (bad) cmc cmp (bad) (bad) (bad) jmp pextrw jo jge repnz xor in xchg into cmpsb xchg int3 into popa stos ja and mov or push xchg inc sub add xchg imul lcall sub mov pop adc cmovle push inc push loop mov jns pop push jp stc mov adc sar insl mov xchg cmovno lcall into lret in or decl cmp add mull les add (bad) (bad) (bad) jns pop add push aam jmp lea or repnz (bad) lock (bad) (bad) (bad) jmp inc add lret dec xchg xor xchg sahf mov pop pop test xor mov (bad) ljmp insl and mov lret (bad) je lcall mov shlb push sub push nop (bad) (bad) lcall jo add jmp pop inc leave (bad) xor xor inc lahf pop mov incl and push dec and repz loop push dec pop xor cmc xchg mov add (bad) (bad) incl ljmp add test sub xor insb out xchg shr or sar (bad) add daa loope add pop mov xchg push loop (bad) dec (bad) fcomip das mov inc push mov jmp mov idiv (bad) (bad) jmp xchg popa sub outsb mov push push insl push push or lods pop push stos or push out push (bad) (bad) jg sub pushf fwait inc jge in pop sub add loopne push shlb (bad) (bad) (bad) pushl bound cmp jge mov ficom jecxz fwait pop add es jno push mov mov clc pop std scas cli in adc mov in push scas bound jg jecxz jmp sti outsb fdivl xchg out ret data16 jbe push dec out cmpb jo or mov enter loop xchg test dec pop das fcompl inc (bad) call mov (bad) (bad) pop xor inc rcrl xor (bad) mov stos and dec aad hlt data16 lea push leave cs (bad) (bad) fcomip inc mov out mov sub imull aaa add add pusha dec out (bad) (bad) ljmp sahf repnz xchg mov jne int3 notl iret out test addr16 adc or mov mov ljmp mov xor cmpsl adc (bad) out cli jge fidivr sti nop test mov test sub out popa lea sub lds popf push out fs mov or popf leave repnz pop mov stos mov hlt fcomip aas cli pop sbb dec push push sti jns jmp adc mov (bad) ljmp adc xchg inc mov nop mov mov mov (bad) (bad) (bad) call xor out incl sbb andb inc cltd lock inc adc (bad) (bad) (bad) jmp daa je sub cwtl outsb es dec test push mov dec xlat and mov ljmp cli sbbb push adcl cmpsl jbe jmp and cwtl stos movsl mov (bad) lcall sub mov xor aam jl mov push adc pusha in or cltd mov (bad) ss ficompl lcall cmp icebp (bad) decl (bad) push inc clc int3 inc push xor sbb push outsb cmp mov (bad) (bad) mov test test cmpsb xchg jmp arpl xchg daa xchg insl std clc (bad) jg scas inc cmpsb sbb xchg xor inc test (bad) ljmp rorb jl into in or dec or mov mov mov loope (bad) (bad) (bad) (bad) fnop jae (bad) outsl xor and mov sub pop cld sbb mov add (bad) (bad) decl in push jmp adc js xchg in lods pop or out clc mov adc or repnz test (bad) (bad) jg jbe sbb arpl shr jno ja xlat test data16 push and (bad) incl cmp dec pop roll and cmpb fnop push jno (bad) mov jb and add xor dec sbb mov (bad) incl mov sub sub flds xchg xor out lcall test add (bad) lea and fwait inc mov sahf jmp outsb push push in pop cmc (bad) jg sub loopne xchg jo cmp dec xchg xchg pop inc es and adc and mov repnz rcr movsb (bad) out push (bad) dec sar (bad) (bad) mov cmpsl push and cmpsl pop mov xor mov out cld mov dec fwait pushf jg (bad) pushl pop mov xchg push ret sub mov (bad) add and loope cli (bad) (bad) dec mov lds dec ss aam sub dec pushf sti (bad) ljmp int3 lods sahf arpl and mov stos sub inc inc cmp push add lret mov jg vmovaps pop push lods cs imul adc movsl fdivs (bad) xchg sub loop stos xchg nop mov scas js (bad) jg std stos into push push fisubrl inc jae into shl daa lods bound push mov inc test cmp xchg pusha mov mov inc repnz jb (bad) (bad) call and xchg pop mov fcmovbe mov push loope pop ljmp dec call jae ror push and (bad) out sbb (bad) mov or (bad) xchg xchg mov jnp out (bad) (bad) (bad) mov lcall enter pop mov push and push imul xor sbb xor jmp and push pop not mov mov (bad) (bad) incl sub js adc pop sbb xchg add mov loope inc jp cmpsb cmp dec add xchg cmp pusha adc pusha fcmovb ror mov mov add aaa mov sub fnstsw adcb test mov sub inc fcomip stos (bad) aaa arpl loop jge inc mov pop lcall (bad) (bad) lcall push pusha inc sbb inc jb and lcall sbb add (bad) (bad) mov and mov pop pop das shrl movsl pop (bad) (bad) inc sub cmp ljmp sbbl dec mov xchg jae (bad) xor ljmp pop aas adc adc das and mov xchg je subl shl lds xchg insl int3 dec icebp movsb test cmc (bad) jg (bad) fdivrl fcmove jbe imul xchg jle pop notl pop repnz (bad) mov ja in xlat xchg popf ret lods push xor gs xchg insl pusha jno aas adc (bad) (bad) call push sub ljmp cli jnp sub movsb jb lods jl pop ret and mov js pop sbb dec mov (bad) sbb sti out (bad) jmp adc (bad) (bad) call daa pusha rcrl icebp je cmp lods leave cwtl loope mov xchg mov adc or out clc push mov cwtl inc inc inc add ds sti jbe lret mov add dec xor arpl inc inc sub dec sbb jns gs sub push test add push fcompl mov jb cmp jg mov imul inc adc push outsl jg add (bad) lcall rcr scas and leave jo cmp in cmp (bad) call mov popa imul cmp adc sarl ljmp lcall sbb addr16 insb adc test lea (bad) (bad) (bad) call adc xchg xor or pop mov ss pop jge (bad) lcall inc lea push dec ret lods xchg push imul push ljmp pop xchg mov dec (bad) mov imull bound add (bad) (bad) pushl clc pop mov jne dec jmp cmp dec mov or call inc xchg mov mov subl and or js ljmp lods inc xchg xor or push movsb push test cltd stc cmpsl arpl jle fidivr outsl mov ja sub and push push mov mov pop push sbb (bad) (bad) (bad) ljmp jnp fs jle jmp jge,pt ss dec mov cmp mov (bad) fcomip pop push data16 faddl outsb push stos sbb jae mov inc mov cltd rorb nop test fistl xor outsl pop aaa in jae push add lock lea pop into aaa fmul jb xchg jb push (bad) (bad) (bad) lcall fstpl insb mov jecxz iret pop xchg out arpl push fidivrl mov mov hlt (bad) (bad) ljmp sub dec shlb pop lods ret dec rorb dec jb push mov sbb bound dec push ja or push test (bad) push dec dec and (bad) push in (bad) (bad) (bad) ljmp mov imul dec imul out ss rorb cli (bad) (bad) (bad) fldcw lret xor adc lods lea cwtl sub or adc (bad) ljmp into shrl sbb cld inc or in mov ja add addr16 mov (bad) (bad) call lahf cmp mov push loopne push push aam xchg (bad) (bad) xor push sbb inc push (bad) dec push mov inc xor (bad) pop cmp and mov outsb xor inc mov (bad) (bad) lcall mov and stos (bad) icebp enter xchg cli in mov mov cld dec (bad) and call adc jne xchg fwait jae jno fisubl sahf xor movsl jl rclb mov dec push dec add xchg pop mov adc imul dec das test cs (bad) (bad) (bad) ljmp sbb xor xor xorb mov and dec pop lret call ror js jbe mov lahf clc sbb (bad) jg jmp cmpsl stos sti pop push or out nop lods or (bad) xor aad sub lods (bad) (bad) (bad) ljmp sbb fmul sbb fnstenv mov add and (bad) sahf jo stc int (bad) (bad) (bad) jmp sbb push dec inc xor ret push pop sub movsb scas jne insb ja inc (bad) jmp clc push pop push and mov orb add and mov hlt jns (bad) xor ret mov mov cld push (bad) (bad) lcall ss (bad) or lcall clc dec push mov cmpsb sbb pop hlt call xor scas sub fcoml mov sbb or adc (bad) (bad) inc push xchg dec adcl mov xchg imul pop movsb nop push lcall xchg (bad) (bad) (bad) pushl pop push inc jne ret push dec mov adc jb push inc data16 dec xchg out cmp (bad) (bad) (bad) cmp push jp pop mov and inc push imul mov lods dec push in js (bad) (bad) lcall jmp xchg loope pop cmp or adc pop test (bad) call mov stc or outsb adc inc fstps pop xchg push movsl and push pop lock (bad) (bad) call int in mov jge and enter inc xor mov test sub mulb enter push fsubs xchg xor pushf push cmpsl lea outsb mov clc (bad) (bad) jmp mov push inc and shrb sbb xchg mov push lret mov ljmp jl es lret ljmp arpl lods (bad) jmp cltd pop mov cmp push and shrb in ja push mov (bad) (bad) mov stos add lcall push (bad) aad or push push sahf cli js xchg out push or (bad) (bad) incl push and mov aad or adc jbe inc lret inc stos sub push popa jecxz loop jb mov (bad) (bad) lcall push fs inc or dec mov sbb jbe sub mov mov adc cmp lcall sbb insl mov adc xchg add bound (bad) (bad) (bad) fbstp jne or pop xchg mov rolb jo and pop add mov (bad) (bad) (bad) call xchg and sub aas (bad) lahf xchg cmp gs out les ficomp divl (bad) (bad) (bad) dec fcompl push bound cwtl dec mov adc setne sahf scas lcall pop or dec (bad) sbb dec mov jecxz adc jg repnz lcall inc movsb idiv cmc and nop and adc sbb (bad) pushl out mov int3 jnp sub (bad) (bad) sti (bad) jo into (bad) addr16 (bad) incl dec push (bad) sbb je sbb mov ja dec mulb out jne jge aam mov mov cmpsl cmp mov push aad pop fidiv (bad) push std mov lret in or ficompl inc mov outsb in sahf sub jl,pt cmp or incl dec hlt (bad) sahf js jo mov fdivr (bad) (bad) in fdivl loop mov cltd ffreep imul add rorl repnz movsl popa dec movsb mov jge fisubl loop fisubl ss ljmp lret loope stos loop cmp enter hlt in bound rcrl cmpsl test scas das sarb (bad) or dec fst ret ret mov (bad) (bad) (bad) cld add std xorl push setnp ljmp aad inc dec cmc xchg (bad) (bad) (bad) decl rorl into inc (bad) mov sub imul jecxz sbb mov cs and (bad) cmp jne (bad) loope xchg jae push int3 (bad) adc xor cmpl jbe xor cmp sbb stc scas js into sub mov lret xchg imul test mov mov nop lods dec inc stos mov jmp jp jb xlat insl ljmp mov cmpsb into out lods sarl mov xchg leave arpl cwtl enter dec outsl sub (bad) mov jecxz mov in ljmp sbb mov fidivrl pop cmc (bad) mov push fstl sub add and les (bad) (bad) (bad) call xor adc leave and cmp out or (bad) mov jg out in jno pop imul (bad) (bad) (bad) (bad) decl push mov in push mov mov jo jbe rol xchg test xor jg (bad) (bad) mov aad dec xchg xchg pop or imul mov add (bad) (bad) lcall jecxz pop pop fcmovu pop ret mov cmp mov push push xchg pusha stos mov div sub clc xor lret sbb (bad) les or and (bad) (bad) incl cwtl sub pushf stc adc popf jge lods fwait pop aam dec jno xor sub (bad) jnp xchg cmpsb sub or push arpl sbb cmp lcall test repnz xor pop clc jne (bad) jge mov (bad) (bad) (bad) dec out jle mov xchg mov imul lds fcompl inc sbb inc push cs (bad) (bad) lcall jns push out movsl and xchg jnp xor sahf outsl lods jecxz ljmp dec mov mov and add andb loopne pop inc insl outsb insl (bad) mov insb ror out mov pop (bad) (bad) (bad) pushl mov sbb cmp dec call insl and outsb ja (bad) (bad) (bad) (bad) fldt (bad) mov sbb xchg xchg pop (bad) pop subl sarb or sbb idivl movsb pop dec insl adc popf and jb lret mov int3 add (bad) (bad) push and cmpsl insb cmc aaa lret mov pop or into faddp xlat sarl das mov push xor jp push lods mov pop sub and mov aad and dec push or jge inc inc daa out pop sti lahf jnp mov (bad) fdivrl ss jnp ja enter cmp inc and mov xchg jb jb (bad) (bad) (bad) call dec mov cwtl cmp outsb jns xchg push pushf sub je mov fnstsw dec loop js (bad) (bad) (bad) inc lds je add out and call cmp cwtl clc icebp dec mov lret (bad) (bad) (bad) call push pop test jnp jb push (bad) adc inc cs das xchg mov (bad) (bad) (bad) ljmp mov inc dec sarl lds mov shrb sub enter jg cs fistpll (bad) jg scas dec push out add adc cmp data16 pop jl (bad) lock lock (bad) (bad) jmp mov sbb enter pop xchg mov push (bad) xchg cs clc ljmp iret sbb pop test movsb lahf cmpsl and mov std (bad) (bad) lcall fsts icebp or fiaddl (bad) jmp mov out push ja jmp pop mov sti xchg icebp mov fwait jecxz inc in mov (bad) jecxz out leave cmp arpl roll es and js (bad) (bad) (bad) decl jns out mov dec inc mov div inc out pop sahf in cmpsl sub mov sub mov les mov mov dec or sub scas sub (bad) lcall xchg outsl cli jmp mov sbb inc xor in push fisubl data16 mov cmpsb jg popa nop xchg imul jae dec ror outsb (bad) (bad) fcomip frstor divl lds fwait bnd jnp sbb (bad) (bad) (bad) (bad) fisttpll jo and popf xor cmpsl add jmp ror cltd lret repz mov mov inc push sbb dec push mov dec pop les xchg adc mov and mov jg (bad) and xchg outsl push cmp iret (bad) idivl (bad) (bad) (bad) decl mov std cmp aaa ss sub mov hlt mov (bad) push xchg inc mov fbstp out mov sub mov and (bad) (bad) dec dec cwtl (bad) push lods inc adc inc push jge rcl jns xor (bad) xor lds (bad) (bad) pushl mov sbb jns fcmove ss add push add aad insl sub push mov dec and (bad) (bad) (bad) std pop mov sub push push fisubrl pop sub mov push mov (bad) (bad) decl mov inc fs and sub daa rorl daa pop addr16 xlat pop mov ljmp shl jae gs out mov js ret testl outsl add push out insb insl push pop push icebp mov sub fcomip (bad) decl add hlt icebp push rorl in pushf xorl xchg xchg in pop (bad) jno (bad) (bad) jmp pop out ss dec jg in rorb lcall in jbe add sti push (bad) jg incl idivl (bad) lret (bad) pop outsb mov add (bad) (bad) fldenv xchg jns mov aaa or dec mov adc lcall jg mov fdivl mov lret mov fidivrl dec lea sbb hlt (bad) push cmpsl dec xchg or cmp aam lret dec stos inc push (bad) mov fmull (bad) fildll mov jae ds movsl mov mov pop imul (bad) jmp push out xor aaa orl and xlat fdivrl pusha fldcw fimul dec cltd scas std (bad) (bad) jmp mov sub add and xchg xorb fdivr sub aaa xchg stos mov mov mov insb sub mov xor idivl out cmp insl jl pop and inc pop mov inc dec aaa sahf (bad) fwait in jmp pusha outsl (bad) (bad) jmp adc push ret das xor pop insl push shlb fdivrl (bad) hlt (bad) (bad) call pop ret int3 adc inc repnz cmpsl push nop test nop mov out mov (bad) (bad) (bad) fisttp insl mov adc out and outsl or xchg dec xor and scas and xor (bad) (bad) (bad) incl outsb das mov sub inc popa ja imul cmpsl jmp mov lret (bad) (bad) (bad) pushl les stos lea sti lret outsl sub pop pop in hlt fidiv mov insl jp xchg cmp (bad) (bad) (bad) lcall lods push mov mov push mov adc xor dec jb (bad) (bad) (bad) decl divl push inc and push mov sarl int out in cmp (bad) (bad) (bad) cmp les mov shrl pop sub or jmp pop mov sbb push (bad) (bad) (bad) call fstps pop jp cmp mov imulb mov lds daa add mov (bad) (bad) (bad) pushl xchg xor nop scas lcall dec test aad cld mov insb jg (bad) (bad) call mov mov inc rcll add clc xor test push mov pushl loope push sarl xchg out pop mov and adc gs cmp (bad) ljmp (bad) test and mov sbb mov das jnp jmp cmpsb lcall mov data16 mov leave ljmp sub adc (bad) call std lds enter shll lcall sub push jnp jno repz lcall cmp add ficompl inc mov mov ljmp lret jb jno xor (bad) ffreep mov adcl fildl rcrl mov (bad) decl mov ds push cltd jl cmp mov mov decl jge data16 and loop push int pop jecxz pop inc (bad) call (bad) (bad) jle rcrb ja mov mov and add sub (bad) (bad) (bad) icebp movsb repnz ret inc sub mov add and add (bad) (bad) ffreep or mov mov movsb xchg cmpsl sbb sbb (bad) jmp lret ret mov bound sti popf mov sub jbe aaa mov hlt (bad) (bad) (bad) jmp pushf ret pushf xchg adc in dec cmp sub (bad) and nop xchg push push movsb das sar (bad) xlat and mov movsl fs or or (bad) (bad) (bad) (bad) decl push cmp mov sahf sub loope icebp bound dec sub xchg push (bad) (bad) (bad) incl cmp and lds mov into in stc out lret fwait add clc pop hlt (bad) jle inc mov jns jbe pop xchg push mov ds push shrl dec cmpsl cmp sub enter insb jb lret dec jb push icebp (bad) inc repz negb xchg mov xor push fwait (bad) (bad) lcall mov dec lods or lock cmp push jbe mov xchg sub (bad) (bad) lcall add les shll dec sbb shrb sub icebp inc jb jnp mov in fwait jb jno xchg xchg mov or push fidiv inc dec push repz movsb xor clc fcomip mov test push test pop sub inc dec pushl cld dec enter xlat xor popa jns sub sbb loopne adc mov shlb fidivl fxch jo add push ss mov arpl mov dec adc rorl inc test (bad) (bad) (bad) (bad) out adc pop icebp or push push jo or jecxz hlt (bad) jg incl mov jmp sbb repz push (bad) ljmp mov (bad) lahf ret push mov fwait dec out pop mov xchg dec arpl lcall outsl xor push xor dec push cmp lods aam jo inc int xor cmp leave popf into fdivrp push cld call fistp and lods and xchg rcll push dec xor out dec mov decl cmp test sbb mov enter mov pushl inc dec push pop inc xor sbb nop stc push jmp push adc push aam sbb jmp int sub out xchg cmp mov xor fcmovnu dec sub pop sub das clc (bad) sbb sub jne and popa dec imul adc (bad) (bad) (bad) jmp jg dec adc (bad) pop sub adcl scas cmpsb (bad) (bad) ljmp repnz xor xchg sbb sub xchg movsl cmpsl insb fs stos adc push push dec push (bad) (bad) (bad) incl or movsb sahf aaa xchg cwtl sub arpl ss imul mov (bad) sbb cmp and push in inc xchg adc and sbb leave imul shlb add mov divl mov loopne and inc pop inc es (bad) (bad) lcall mov or add stos push mov inc cmpsb test dec dec push test and mov (bad) xchg sub mov fcom inc mov imul std (bad) (bad) call into mov inc pop push adc pop push aad push pop pop sub int xor (bad) (bad) (bad) mov (bad) (bad) mov outsl fisttp sub sbb push mov jecxz ror sub mov pop mov mov and sub mov shlb loop out push addr16 (bad) in fild imul cmp mov mov mov sar decl stos test push aam loopne xchg and jle inc and dec inc (bad) (bad) mov push push sbb icebp iret mov jo lods cmpsl cmpsl xor (bad) (bad) (bad) dec roll std (bad) dec mov enter ss adc mov dec out andl or (bad) (bad) (bad) incl jecxz inc push imul (bad) idivl mov pop mov xor (bad) call dec sub mov push jbe inc cmp aaa (bad) gs push ss sbb add (bad) pushl dec and out scas mov xor inc loop push push pusha int3 xor (bad) (bad) call inc into cmp pop (bad) inc and stos test test (bad) (bad) ljmp push lods mov imul xchg icebp leave sub inc (bad) mov add mov repnz insb jecxz xchg cmp mov hlt (bad) fisttp mov sahf cld and mov jb mov or (bad) cmp cltd loopne cmpsb lret xor jle,pt pop test inc jns pushf mov je mov leave sub (bad) (bad) decl inc xchg fwait mov divb rorl jge fnstcw mov jg (bad) push sti scas lret ja icebp je pop jae cmp xchg mov xchg fisub notb fs cmp aam movsb jno mov fbld mov (bad) (bad) jmp test jl jmp ds outsb dec test pop push fst xchg xchg push out out je imul call in out mov out dec pop arpl imul pop mov push pop mov jmp imul or subl fs push add test inc into pusha adc mov xor mov (bad) (bad) (bad) fnsave stc loop enter mov loope and or movsb inc sbb lds (bad) (bad) (bad) call lds push fwait push jle outsl icebp cmpsl adc dec movsb jo jge test fstpl push leave out faddp (bad) (bad) (bad) inc ret mov dec es (bad) je dec add js ja cmpsl (bad) popa call pop (bad) jg decl dec in dec push fnstenv push push in xchg div mov cmp loopne pop (bad) (bad) (bad) call mov dec test lods push fist and dec daa dec mov idivl (bad) push (bad) jmp pop gs and fildl or popa outsb dec mov fistpl insl dec xor sar (bad) (bad) decl fs xor mov jae (bad) dec mov cmc push xlat fstpt xchg insb fwait divl cmp jecxz in in pop repz mov jbe fstpt jmp shr cs (bad) fcomip sbb cmp adc push lea (bad) inc sub mov dec jbe pop cli outsb inc (bad) fwait jb fldenv mov fiaddl jb loope (bad) (bad) js pop mov fnsave mov and pop in popf mov mov mov mov pop jbe insb stc fstpt scas or lock fildll mov fildl xchg jno sub push arpl into out js stos leave sbb mov adc add pop fs call push xlat in outsb cmpsb jmp jle (bad) (bad) (bad) (bad) lcall std push push outsb into ret (bad) in (bad) repz mov mov ret (bad) (bad) (bad) ljmp push inc mov jb stc mov rcrl jle cs into idiv divl (bad) (bad) (bad) dec jbe or push or (bad) mov cmpsb imul aam aad imul icebp pop js es (bad) push adc testl mov movsl mov call in mov inc mov mov ficompl mov push inc (bad) (bad) (bad) decl dec mov pushf fdivr stos mov lea dec imul int3 dec and ljmp outsl pusha frstor mov dec aas mov sub mov cli pop fldt lret cwtl loope cmc rorb pop das jmp mov clc (bad) ljmp mov mov xor fwait push add or adc cltd mov push push or (bad) (bad) (bad) (bad) out in repz icebp jmp mov imull ss dec mov fldt cld lea mov lods mov out fcompl mov xchg dec out mov decl inc xor xor mov arpl cmp repz mov int ss (bad) (bad) (bad) fdivp xor into and jno ucomiss xor loopne inc jae adc iret sbb (bad) (bad) (bad) mov mov insl adc sbb mov cld mov test fsubl lock push std ljmp sbb lret pop sbb xor add out (bad) (bad) lcall mov (bad) testb insb lret xlat add out insb pop fsubrl adc add loop (bad) mov dec or push dec xor (bad) ljmp clc push in jo add pop sub dec cld mov stos jg outsb jg pushf test call pop std xor adc stc adc xchg ficoml insb adc (bad) (bad) (bad) cmp lahf dec outsb lods inc in sbb repnz test repz scas loope jae out xchg jbe ljmp mov popf ret imul mov push dec insb in fcmovu (bad) (bad) (bad) incl ljmp (bad) or loope and negl inc mov loope cmpsl mov cmp adc adc inc and (bad) jg nop adc inc cli iret inc sbb mov xlat jecxz int (bad) (bad) (bad) push repz xor jg sub cmp ja (bad) jg cmp cmc out arpl xlat jae std (bad) (bad) (bad) cld mov (bad) push in mov inc mov sbb lret xchg and xchg xchg (bad) incl push aam push dec out in es out add in ja insb int (bad) (bad) (bad) ljmp xchg sub mov adc mov push sbb push bsf (bad) (bad) lcall dec inc aad push fldlg2 sbb fbstp mov loope or (bad) (bad) inc (bad) int pop jnp popf adc stos lods xchg adc sarb (bad) rcrb jmp inc (bad) lahf jne push sti jmp vpsubq and loopne (bad) (bad) fbstp in lods sbb sub rorl pop test test icebp (bad) (bad) call aad mov repz mov jae dec shrb fcoms mov (bad) lcall imull notl (bad) cwtl lret stos mov pop jge std fnop std movsb out popa out (bad) jg pushl pop mov int xlat es pop sub push xchg data16 (bad) (bad) lcall dec push push adc jne adc push mov xchg jmp mov mov jae (bad) (bad) (bad) (bad) faddp jmp mov mov jo pop mov outsl pop sarl xchg cmpsb pop loop inc push pop mov test pop gs xchg jge (bad) mov (bad) lcall or sbb (bad) jnp mov das lcall js int (bad) jg decl movsl lods dec int3 mov push xor outsb icebp fcmove adc cmp (bad) (bad) lcall ret iret mov rcrl shrb pop pop inc ss jo and (bad) (bad) sti mov icebp inc lods or mov and (bad) adc outsb jl stc (bad) mov (bad) (bad) (bad) jge pop lea imul cmpsb stc stc pop repnz mov ficomp decl xchg sub arpl rclb sub into iret inc dec aad lock and (bad) (bad) call inc pop (bad) sarl xchg negl ja jnp loope leave adc mov cmp pushl ss jb or cltd fldenv cmp leave sub das mov mov mov out mov xchg addb (bad) (bad) jg addr16 xchg xchg inc mov inc cltd (bad) cmp dec mov mov push (bad) (bad) incl icebp ret mov jmp mov pop mov push (bad) (bad) (bad) (bad) incl dec lahf mov cs push ror (bad) push dec xchg xchg jno push pop addr16 mov (bad) jge negl mov mov sti jae fisttp mov (bad) mov clc repnz cmp (bad) (bad) call imul (bad) (bad) mov sti fucomp pop ja pop (bad) lods mov (bad) call xchg push push xor cmp cltd lods rcll dec add inc loope popa ljmp out insb dec stos jmp xor cmp pop xlat fstpl (bad) ficomp lods push fldt jmp outsb out cmp out icebp push dec cs cli push std decl jno dec pop sub xchg data16 jl test sar scas clc and or xor inc mov push inc aad (bad) ljmp lret add sbb pop out jmp jns out push fmul leave pop lds mov insb fistpl popf int3 pop xchg in and push (bad) scas outsl jno xchg adc addr16 pop loopne xlat loop sbb jmp push mov inc xchg cld xor sbb sub sbb sbb arpl adc xchg push imul (bad) (bad) inc xchg (bad) popf xlat insb fbstp sbb dec nop fdivrl lods xor adc movsl or (bad) jmp pop sbb divb lahf fnstsw insb push xor cwtl jbe inc inc fcomip incl and xor stos sahf js inc xchg pop (bad) pushl cld mov mov hlt sbb stos popf ret sub xchg aaa dec clc mov push hlt aad icebp dec add js (bad) (bad) jmp xchg cmpsl sub and arpl fmull imulb cmp pop xor imul ja (bad) (bad) call ror mov sahf sti bnd xor test and sub pop nop inc push dec sbb call inc xor movl dec outsb lret mov out sbb aam fucomi and test mov (bad) decl xor fcoml dec cmp adc and repz or std stos pushl jns stc jle ret mov shrl call loope repz pop jecxz mov cs in sarl inc mov push fisubl pushl mov mov outsl sbb mov int3 insl and dec jl test in (bad) (bad) incl mov (bad) mov jg or out insb lods pusha movsb movsb rcl int3 es hlt ljmp adc mov nop fidiv sub xchg and ljmp fisub fldcw push mov xorl sub add decl jb inc sbb into jbe mov pop pop dec xchg cmp and dec and xchg and (bad) (bad) lcall in lea iret sbb out cmpsl dec out jae mov ret fnsave fistl (bad) decl imul call xchg sti stos lahf scas int3 in xchg test repnz leave in adc dec dec cmp ja jbe mov outsb xchg pop push pop inc je (bad) (bad) (bad) lcall mov dec mov push jb push je cld adc add dec mov iret imul (bad) (bad) jge jno push addr16 jle mov jecxz add fcmovnb adc push and lods (bad) (bad) (bad) lcall int3 xchg aad adc out pop xchg mov ds cmp cmc fst js mov dec dec cmc adc (bad) (bad) dec jno push aad roll or test test imul add pop mov imul pop loopne idivl mov add test push and and cltd pop push sub ja scas adc dec cmp sub dec dec add (bad) (bad) pushl push movsb adc cmpsl or pop daa mov ret dec pop and movsl data16 push addr16 (bad) (bad) call jns cltd fwait les pop add icebp insb out cwtl cmp jne push add sbb (bad) (bad) jmp int imul adc sbb jecxz pop pop in scas sbb subl sub je std push push negb xor (bad) (bad) jg test aas data16 jp mov cmpsl jge (bad) lods jne sarl (bad) call jns mov inc xchg loop mov ljmp xchg shll jbe test push rcl push shr jmp dec pop add mov xchg push aam lahf mov jnp (bad) (bad) (bad) mov mov cltd ss pop scas cli xor lea test mov sbbb add (bad) (bad) (bad) call aad sub jmp out mov cmp mov xor dec sbb out xchg incl sub int3 mov and (bad) jnp jnp xor mov (bad) (bad) (bad) ljmp jns xor aad cs aaa inc mov xchg sahf or repnz pop adc (bad) (bad) (bad) out mov jns in int sti fsubrp ja or xchg repnz pop add pop les dec inc (bad) (bad) ljmp bound pop pop push mov push icebp arpl mov popa sub adc inc and cmpsl cmc pop dec sub dec push xor decl in in (bad) cltd movsb pop (bad) imul push sbb or (bad) call data16 mov rcr cmp sub dec movsb mov inc xchg int xchg stc mov in mov mov (bad) or (bad) jecxz (bad) and (bad) (bad) (bad) ljmp sbb fnstenv lods mov dec pusha push xchg mov sub ljmp mov cld cmp jnp outsb lods rclb push and or (bad) (bad) ljmp gs mov pop xchg xchg popf sub push cmp fwait and (bad) jb fstpt (bad) (bad) inc mul divl jb outsb mov aaa xchg gs insl adcl ficomp push jne (bad) (bad) call sbb dec mov inc cld (bad) int3 ja lods int3 out jae sbb push xchg adc and add (bad) pushl mov mov out push and call push in imul sub (bad) jg popa (bad) mov paddusb push sub outsb lea insl inc mov loopne mov repz cmc lret jge push sub push or cli (bad) lcall (bad) lea sbb push aam scas pop jnp mov pop out xlat mov (bad) incl inc test test sbb pop imul enter and mov (bad) (bad) ljmp sbb ficoml cmpsb sbb stos fs dec aam imul mov mov push and pushf dec add fidivrl pop das (bad) (bad) (bad) (bad) fucomp loop and sub add inc sub icebp sub scas pop imul dec cs xchg dec add test bound adc sub leave dec sbb (bad) (bad) (bad) mov dec (bad) ficompl push les sbb and xor mov test (bad) (bad) lcall cld addr16 dec or fsubl jbe imul jbe xor push (bad) clc dec dec push cmp jnp add (bad) (bad) (bad) (bad) jle in lret (bad) pusha jae gs mov shrl mov rcrl cmp ljmp and imul push test xchg cmp sbb (bad) ljmp (bad) cmc stos adcl dec fisubr jecxz ljmp and and cmp adc jb out (bad) jne dec mov iret push repz dec mov incl dec push xchg lea lea xchg push lock sbb stos (bad) pop adc std mov mov xlat (bad) (bad) pushl sbb jne loope xor sub ret jbe (bad) mov mov cmp out lds int3 fs (bad) (bad) lcall in mov leave cld fucom lea aad rcll test cmp fwait ret (bad) ficom dec (bad) (bad) jg mov loopne push push cs arpl sub lock jb out pushf loope mov cld (bad) pushl mov rcrb rcll roll push fldenv movsl dec (bad) (bad) (bad) (bad) mov lret stc mov jbe dec loope (bad) (bad) pop xor push in sub cli (bad) decl leave add dec fdivrl scas xchg xor xchg cmp bound (bad) ljmp sub bnd pop mov fisub in (bad) ljmp cli and push mov arpl pop mov (bad) (bad) (bad) jmp in das jns jle outsl shrb fidivrl push (bad) shlb mov call inc mov (bad) (bad) lcall inc mov jne mov pusha sub pop pop jbe in xor out data16 call (bad) mov and data16 cmpsl dec outsl or push pop stc inc outsb in in (bad) (bad) (bad) call push orl sbb imull repz (bad) aaa xor cmpsb sti arpl (bad) jg and sub scas sti mov js popa and mov repnz sub mov inc cmp std (bad) (bad) decl pop jp fisubrl fdiv mov out mov dec lods adc aaa cld (bad) mov pop hlt xor sbb ret mov mov and out sub (bad) (bad) (bad) jl jnp fistp sahf fnstcw ljmp jmp out ljmp (bad) (bad) (bad) (bad) dec aam lods (bad) xchg push pop ret (bad) rcl mov dec xchg loopne lods (bad) sti (bad) or (bad) call sar jmp iret outsl jno inc jb (bad) mov (bad) in push xchg (bad) (bad) call pop sub sub cmp fsubp popa mov outsl clc adc imul and popa and push adc (bad) (bad) jmp inc cmp shll fnstsw mov cld test repnz gs sub push push xor dec clc (bad) (bad) (bad) out cld notl ss aam push sub (bad) fnop fsubs inc mov (bad) (bad) ljmp cmc loop mov (bad) fdiv cmpsl mov addr16 xor loop jo (bad) (bad) (bad) fisttpl (bad) movsl int3 jb mov daa mov sbb mull pop (bad) (bad) (bad) incl icebp (bad) jecxz jb mov aam sub call xor movsl fst rol cld (bad) (bad) pushl mov (bad) imul dec mov stos xchg and sbb out fnsave jl (bad) (bad) call mov stc mov jmp shr mov ljmp outsl int mov jns sarb pop mov lret mov (bad) call sub js scas addr16 out mov mov adc lcall mov jae fnsave adc movb je dec jb jno out sub xchg jg jmp popf lahf fstpl insb imul mov sbbl (bad) push ret outsl imul mov fisttp daa dec inc test lcall dec jb and rcr (bad) sub ljmp es (bad) (bad) call in mov insl ret les xchg mov mov cltd test push (bad) (bad) push gs inc testl mov sti andl dec jp ret loopne xor pmaxsw test cltd fldenv stos mov (bad) sub add xor mov cmp fdivr (bad) (bad) dec out (bad) leave cmpsb lods aaa xor add imul imul xchg jmp sbb sbbb push loop cmc xchg pop (bad) push (bad) jg (bad) ficomp mov fildll push in inc adc inc (bad) (bad) (bad) (bad) (bad) out or cmp into loop movsl ljmp outsb (bad) call je imul jnp sbb mov xor mov out mov mov cltd mov jns xchg in fwait mov pop out arpl sub jle movsb adc (bad) and cmc inc xor loope mov mov fisttpl inc and mov (bad) call sbb ret aaa pop insb xchg fldcw lcall cmp mov pop addr16 xchg adc pop add lret jnp mov dec mov negb movsb aaa jae dec out mov push inc mov (bad) jmp aaa out cmp es in dec rcll or push scas jle push mov (bad) (bad) (bad) jmp adc sti xchg outsb cld mov (bad) mov into sbb mov test pop loopne pop and pop inc push movsb int3 pop lods in gs ljmp add sub jg,pn xchg jo mov pop fsubrl cld pop mov loop and mov in mov test xchg rorl (bad) (bad) lcall pop ja enter icebp ja jl in call popf jae mov fcomps jmp arpl std imul pop cmp scas pop push jecxz xchg mov lahf setle stos (bad) mov cmp mov iret mov mov les (bad) (bad) (bad) call jmp stos imul sub lock inc mov (bad) decl ficomp fs fimull outsl jb,pt mov mov jne insl pop out outsl cs (bad) decl jb jmp xchg jmp push xor push xchg fistl mov (bad) (bad) ljmp aaa test inc test addr16 out add mov sbb lcall fdivp lock ficomp ja xorl outsb loope xlat sbb xchg inc ss lcall push dec or (bad) (bad) (bad) in stc pxor jbe fnstsw imul add mov adc inc gs pop icebp stos lcall pop popf mov add test andl mov in pop into in push jmp pop pop jl mov jb leave arpl adc jno (bad) mov pop ret dec arpl das mov shlb cmc (bad) (bad) (bad) (bad) lahf in add out jge push mov fcomps mov cmp decl pop pop xchg fstpl (bad) int3 insl pushf out mov repnz outsl pop repnz (bad) (bad) call sub xor push and xor sub in pop mov dec imul call xchg pop xor mov inc mov pop (bad) (bad) (bad) jmp sbb xlat out and insl in pop in fidivr mov mov mov cli enter lea lret imul je sub lcall idiv call (bad) (bad) (bad) jmp ja fimul ja pop cld pop fist addr16 pop mov dec enter (bad) (bad) call push cmp inc stc insl adc outsb mov mov (bad) jg inc int3 fdivrl adc xor aad jmp mov pop (bad) (bad) ljmp sub mov adc out bswap fist daa mov lret dec and (bad) (bad) decl mov popa mov cmc int pop jae ffree xchg jo fimul rolb push cmp jmp pop sbbb sub inc push lock fisubl (bad) sbb (bad) (bad) ljmp push mov push test push (bad) loope std inc and je addb fldt sbb dec sbb or movsb shr js popl lods inc sbb (bad) (bad) (bad) (bad) jge fsts cmp push sahf pop xor stos push inc pop jbe mov in into inc stos push push sub and pop icebp lcall sub lds in mov pop mov xor or (bad) (bad) lcall push fadd addr16 pop popf cmpsb fucomi push mov mov jl (bad) (bad) (bad) jmp cwtl (bad) or std repnz addr16 jns insl mov enter sub dec (bad) (bad) (bad) (bad) out outsb sub jns sub cmpsl leave jle pop jb aad jbe sbb int outsb (bad) (bad) mov cld lret jp movsl fdivr repnz orl and mov mov (bad) (bad) jmp add lds mov cs cmp movb fdivl (bad) ljmp cli lcall xchg cmpsb adc xchg leave ljmp lock cmp push mov jns cmovge jmp jmp and mov and jb pop (bad) mov mov (bad) (bad) (bad) decl les outsl sbb mov rcrl (bad) gs (bad) in push and push std decl or pushf jo es pop aam jno push mov fs in jg (bad) jmp (bad) push jg ficompl pop sbb fdivl std xchg or inc (bad) jg decb outsb sbb ret mov js (bad) (bad) mov clc push fidivl pslld int outsb loopne mov (bad) mov outsl mov xchg (bad) (bad) (bad) pushl pop mov in and inc loop pop pop and mov (bad) (bad) (bad) incl jecxz push and fs mov or int cmp mov (bad) lcall inc adc notb aas ja insl fnstcw in leave dec stc ljmp (bad) ljmp jns pusha dec jecxz out fidivl push dec fdivr sub add sti pop js cmpsl cmpsl or inc repnz (bad) mov jae out sbb (bad) dec daa mov and xor xchg rorb movsb icebp pop ljmp xchg enter decl sbb mov cld mov mov subb mov mov std (bad) decl in out in dec les popf out sti lcall adc (bad) (bad) mov cli cmpsb pop test popf sbb add clc or jo js jnp (bad) (bad) pushl cmp cmp push mov imul fs fcmovb sbb pcmpeqd cmp mov (bad) inc dec stc mov mov or loop mov sub push (bad) (bad) (bad) lcall xchg xor sub nop add inc jecxz aas mov insl sar (bad) cmp adc mov push mov cmp aam sub or aam cli mov fildll lahf lock jecxz sti jg sti push dec cld xor cld or loop cmp movb scas clc call push jge jge mov push hlt out jmp jmp je vminsd decl xlat stc jmp fdivs (bad) mov insb mov (bad) mov add stos xchg xchg cmp push mov or (bad) mov sarb adc push xchg push repz in div in iret aaa jb sub push fisttpll cmpsb mov mov stos adc sub test push std (bad) (bad) (bad) (bad) fxam fidiv je,pn mov sub inc pop ljmp sub push test pop cmp aam cmp fsubs lcall xchg inc sub (bad) jg jmp jae jp aad inc xchg in push pop call (bad) call lahf lds sahf pop in jbe div or xor sbb clc call mov mov sub sub lds mov (bad) jmp ret stos dec mov xchg xor movsb add nop add fnstenv (bad) ljmp sub push add xchg movsl bound mov dec dec xchg cs sar (bad) decl lods cmpsl les mov xchg outsb (bad) in xchg jge aad outsb sbb sub fistpl and (bad) (bad) ljmp mov and push pushf mov out ljmp gs ja (bad) (bad) pushl mov out cs and mov push or push or mov and mov in (bad) (bad) (bad) decl xchg scas test pushf (bad) mov jecxz add push adc fwait pop push jb or and (bad) dec (bad) (bad) out xchg stc int3 fwait inc into fnstsw push mov pop leave mov (bad) (bad) jg dec pop mov and pop call and adc (bad) (bad) (bad) out dec data16 sub inc pop mov pop xchg fwait scas jnp or mov xchg cmp fsubrl dec xchg sub pop loop leave adc mov mov dec lea push ds add (bad) incl int3 mov push fidivrl bound sti adcl (bad) (bad) (bad) jmp jmp sub jns adc (bad) xchg out cltd cmp loop jb (bad) (bad) jmp pop xorl outsl or dec xor sub pop loop (bad) (bad) (bad) call daa xchg ret out xchg fdivrl cmp push sahf scas adc divb or rclb (bad) ljmp popa in dec mov dec and sbb mov fnstsw fstpt in insb mov (bad) (bad) (bad) fsubrl and or fidivl popf frstor pop mov stos rcpps jmp mov mov mov pop jl push pop fs (bad) ficompl pop jns sbb push mov mov and pop std nop mov dec push adc imul gs (bad) (bad) (bad) lcall in lods jp inc pusha pop dec adc jns mov and ja mov arpl (bad) (bad) (bad) fisubr dec bound mov les cmp adc adc fisttpll cltd (bad) (bad) pushl data16 inc sbb mov cmp add jmp (bad) (bad) pushl fldl pop std pop push (bad) xor pop and sti insb mov (bad) lret negb dec cld xor mov fnop (bad) out cmpsl (bad) (bad) (bad) jmp repnz mov mov mov jecxz jns insl mov xchg fisttp mov fwait (bad) (bad) (bad) (bad) jge (bad) movsb pop (bad) xor and mov aas jne dec push inc pop inc pop cmp mov and out pusha mov jmp (bad) maskmovq idivl xlat xor out adc (bad) jmp mov sub or sbb dec out add imul int sbb cltd cmp test popa test fst ljmp mov fldt jp loop jp loop hlt (bad) jg jle add mov jge push mov testl (bad) (bad) fstpt fcoml xchg movsb repz lret pop iret outsl imul sti mov (bad) jg lcall dec (bad) in stos (bad) in fldenv pop sub js icebp lcall mov mov ja iret xchg addr16 dec (bad) (bad) fbstp adc imul idivl dec mov (bad) test in push (bad) (bad) (bad) decl ret aam addr16 dec jb inc cs daa or sahf js dec leave cmp insb jns (bad) (bad) (bad) (bad) (bad) fldt lods aaa or xorl imul fs and sbb (bad) call sahf stc jnp (bad) repz test aam mov cmpsb mov (bad) (bad) lcall inc outsl movsb lcall jmp sahf and push or sub (bad) (bad) fistp adc clc ficoml push lahf mov gs (bad) (bad) jmp arpl lcall mov mov xor int3 xchg (bad) (bad) mov clc sub fwait sbb pop sti mov cmp sub dec (bad) (bad) (bad) jg pop js mov push cmpsl test jno sub dec out mov std sbb scas jnp (bad) (bad) (bad) jmp cld movsl mov pop dec mov fs mov sti and sbb mov mov das clc (bad) fstpl sub out daa rol sub das xchg dec (bad) aam sbb pushl push xchg xacquire mov and add cld (bad) fdivrs dec pop xorl stos sbb in lret (bad) (bad) pushl xor lss jnp insl xor mov jmp lods dec mov stos add pop pop pop xchg adc popl jg out mov mov cmp or (bad) (bad) dec shrl jp popf mov mov pop hlt out push dec sbb (bad) pop jg fcomip jne pop addr16 mulb dec jno icebp jnp mov (bad) (bad) (bad) decl imul inc and inc mov cmp loop (bad) dec addr16 fwait (bad) ljmp jns pushf cld dec sub int push imul das cmp lds arpl fnsave movsb xchg cltd mov cmc (bad) decl cltd stc mov xchg jns je mov jnp or sub lcall ljmp popa lea lock mov cmpsl in fdivrp (bad) (bad) (bad) (bad) push cmpsl and ljmp mov mov cmp ret fistp ds xorl lret cmp into rep test out jp mov fdiv or or inc divl fistp (bad) (bad) in lds insl cmp test in pop test sub push (bad) dec outsl cli (bad) (bad) jnp adcl pop jecxz jecxz xlat push cmpsb (bad) into lret fistl jle mov (bad) (bad) incl dec jne mov or out mov pop xchg adc sbb xchg rolb xchg jl xchg (bad) jg pushl aad or mov and xchg adc lds call mov fwait pop test out inc cli mul decb (bad) dec pop jg cmc (bad) (bad) (bad) in xor fadds jmp add mov std sar arpl daa mov pop outsb mov push xlat cld outsb push inc dec in dec repz stos int test cmp mov inc (bad) push into std mov push outsl or jno in bound xchg add ljmp ds or test xchg outsb sahf iret fwait cmp cmc inc cwtl and aam (bad) (bad) call insl fwait push data16 inc sub add dec pop jg daa (bad) push test adc popf xchg clc incl (bad) fdivr addr16 inc pop and inc mov sub repz jge mov ljmp ljmp (bad) jecxz scas shr das in (bad) (bad) (bad) call jg call pop xor dec mov cs jns xor cli das cmp enter (bad) (bad) (bad) incl int out or (bad) xchg mov push loope jbe sub call mov adc loope xor add iret cmp fbld fnstenv sub pop mov int mov ss jno mov lea ficomp inc popa push mov mov add mov cmp xchg mov ret (bad) mov jae xor js daa xor sti movl loop (bad) ljmp sbb ss scas mov lods push inc roll mov (bad) (bad) mov push xor in jne jne xchg fiadd mov and jno mov (bad) incl cmp or xchg in lahf cmp cld (bad) aaa std (bad) lcall ficoml out lods sbb mov into ljmp test in pop icebp push daa and sub dec push test fiaddl jle bound jp (bad) jmp testl jmp out ret (bad) dec jne adc popf mov idivl mov imul mov mov fldcw imul incl gs int3 rolb arpl jnp imull or mov divb fdivrl or into or lcall or stos inc inc sbb and mov xchg mov fstl (bad) mov ljmp mov outsb imul insb lcall xor (bad) (bad) lcall pop imul cwtl fcompl fbld mov pop sbb add pushl std mov jae (bad) mov in (bad) fistpll aam in int mov ss sbb clc (bad) ljmp (bad) int3 (bad) in jge mov insl push jae jbe sbb inc or dec push ret (bad) (bad) decl nop mov jbe fnsave out sub fisub mov dec push faddl sub in cli pop (bad) adc jle jbe ret cmp adc gs scas imulb (bad) fcomip decl js sbb ret sub dec add lods movsb dec mov leave sub (bad) decl dec pop les fbstp ja jl aaa pop outsl sub scas add in or fidivrl addr16 rcr push sub mov idivl fidivr cmpsl jns or adc cli cld push jmp std mov jno fucomi mov jecxz push jecxz leave das mov dec (bad) (bad) pushl clc dec rcrb in dec mov test aas cmpsl xchg cwtl dec lods jecxz lea lret (bad) (bad) jg fmulp in out inc and mov jbe mov xor test (bad) (bad) incl push stos mov rcll pop dec mov mov scas inc aas popf push lock mov (bad) ljmp xor xor dec or lods stc paddusb outsb gs (bad) mov out je pop xor cmp mov dec jl mov and dec (bad) fistl nop push dec dec xchg add negb mov nop (bad) insb mov pushl and xchg inc push ja pop sub icebp (bad) hlt jo mov cli (bad) ljmp (bad) (bad) fwait xchg and fisub mov mov mov (bad) (bad) ljmp xchg push pop fwait (bad) sbb cltd arpl (bad) and hlt xchg and lea xchg mov out inc cmp (bad) (bad) (bad) clc adc (bad) cwtl (bad) sbb or loop test jns push mov add adc mov mov aaa cld call call lcall int3 inc xor (bad) jecxz mov (bad) jmp push mov jmp rol add or mov (bad) (bad) aas rcrb out fstpl nop push jo xor popf imul (bad) cmp out xchg push cmp sub outsb test nop push inc test pop call sbb dec lcall pushf xchg push (bad) push sar lcall lock mov in in mov mov xchg (bad) (bad) (bad) (bad) pushl sub adc mov mov sbb inc pop loopne xlat jae pop aam xchg loop jne sar (bad) (bad) jmp imul lret and and icebp adc dec test mov stc (bad) (bad) (bad) lcall cmp aam jp push sub xor push lahf cmp push pop push push add (bad) (bad) cmp stos cli sbb movsb movsl xchg mov (bad) mov arpl pop sub sbb pop (bad) (bad) (bad) ljmp inc push jge cltd gs jbe push inc lret add xchg or jne mov incl stos mov ffree mov push sub xor pop push jne frstor sar jmp mov insl lret insl int3 cmpsb je pop (bad) mov ljmp jg dec inc lock sti jae cs mov and (bad) mov xchg mov adc xchg dec ljmp (bad) (bad) (bad) fnop push cmpsb ds (bad) push inc shrl dec push lret movsl mov pop (bad) fsts (bad) lcall dec mov sti test jbe pushf xor xor xor adc (bad) push (bad) (bad) jg and ja pop cmpsb rclb sbb mov into sub lods call cld lcall or mov ds jp mov mov test adc jno (bad) (bad) jg inc sub mov fstpt fnclex xchg inc push dec mov jne gs (bad) (bad) (bad) ljmp mov cmpsb das jecxz mov jbe mov adc and stos or incl insw and ljmp fbstp xchg lock (bad) jg cmpb xor dec xchg sti jl lods scas movsl lahf in sub (bad) (bad) ljmp xchg dec sub adcb or jge stos outsb xchg shrl pop (bad) scas clc push test mov popa rep movsl pop inc inc add (bad) (bad) (bad) mov into dec rcrl adc clc mov push sbb (bad) mov or jmp xchg lea test inc nop pop xchg enter xlat cli jnp pop dec (bad) mov add data16 dec imul jmp hlt push (bad) (bad) ljmp (bad) std mov or push and adc sub inc sbb (bad) (bad) (bad) jmp pop (bad) add mov lock fcmove lcall lahf vpmuludq stos (bad) (bad) decl xlat std pop ds scas lret mov jb inc (bad) (bad) (bad) jmp inc sub jg loop and push mov iret cmc stc and or xchg rclb dec inc arpl (bad) (bad) call fs movsb mov cwtl or sbb dec ds pop imul fistpl (bad) incl dec test (bad) mov push mov mov repz xchg push push sbb mov outsl mov fs pop xor ljmp pop pop inc stos (bad) jmp mov hlt mov push mov jb xor push scas stos mov (bad) (bad) lcall nop cmp arpl adc push insl loope jecxz ljmp nop rcr (bad) (bad) call xor int cmp jmp add jmp cmp push and pusha inc (bad) decl insl push test pop movsb subl ja repnz sub (bad) (bad) call jne sub xor push mov xchg push test ljmp (bad) xchg loop (bad) (bad) lcall nop push (bad) mov les clc and lods jne push addb and jnp (bad) (bad) decl lret mov add and mov mov (bad) (bad) (bad) incl int3 mov or inc push xor xor ror jbe int3 nop cmpsb (bad) out ss or and adc inc fdivr das sar adc ss push xchg xchg inc or sarl jns (bad) (bad) (bad) (bad) cmp fcmovbe loope dec adc fdivl aad add dec add in lret cld adcb (bad) (bad) call leave push nop dec je adc xor lahf les adcb cmp sbb (bad) mov mov xchg adc stos scas movsl dec and xchg lcall sub mov adc mov imul and movsb sbb sar (bad) jmp or cmpb cs dec pop jns rcrb dec inc lret sbb mov cmp xchg or ror cmpsl jl adc out mov push dec xchg (bad) loope out mov cmp xchg (bad) (bad) dec jecxz js aam xor (bad) repnz adc stos fdivrs sbb jmp jo dec jmp mov inc mov (bad) incl add and inc push loope or and call pushl dec sbb mov (bad) (bad) xor pop subl (bad) (bad) incl mov and mov push mov ficompl mov outsb rcr aaa (bad) (bad) (bad) (bad) jnp outsb insb in scas dec xchg mov mov and (bad) shl test js clc popa (bad) (bad) (bad) pushl inc mov lods and scas out movsl out jbe mov sti inc fdiv add push cld jmp add mov push cmp outsb and mov pop dec in cltd (bad) (bad) (bad) jmp mov fistp scas outsl in fs ficompl out jmp mov (bad) (bad) decl das sti rorl imul push sbb rolb pop imul cmpsl ja push fsubrp sbb lds jne popf addr16 push in lret imul (bad) (bad) (bad) jg insl insb pop dec cmc mov in stos sbb arpl fwait lcall daa mov adc (bad) (bad) (bad) (bad) mov mov jnp (bad) fisub jo mov jmp sbb and (bad) ljmp rolb outsl and iret sub lret pop sbb daa daa fcomi ja jb fldlg2 rcrb (bad) (bad) (bad) call fs dec in int3 mov fdivs add xor xor (bad) ret mov call jne dec ja inc jbe data16 jmp mov (bad) dec scas mov addl (bad) (bad) ljmp jns into ljmp popf mov sbb sbb jmp (bad) (bad) call sub adc sti das out pop cmp (bad) (bad) cs mov jl adc pop scas mov cmpsb dec adc (bad) jae stos xchg add dec or lcall (bad) (bad) (bad) mov insl mov mov (bad) lds and outsb sub movsl mov loopne dec add sub jb cmp sbb incb das pop outsl pop movsb in dec (bad) (bad) cmp xchg cmp jl fwait pop js jge (bad) aas adc clc mov test (bad) out clc jmp xor mov sub add adc (bad) (bad) pushl xchg idiv idiv xchg jle pop cmp ror lret ljmp mov push or mov testb ds xor mov jmp mov jp icebp push scas fwait rcrb insb dec sbb and (bad) (bad) jmp cmpsb push ret iret jl stc insl icebp fbld test (bad) mov outsb fdivrp aaa fcomps sahf inc dec push jecxz cli call xor lock pop push mov fcoml (bad) (bad) (bad) mov lret test xchg lahf insl jbe in aaa cmp arpl jnp (bad) (bad) (bad) ljmp test les mov lock outsb movsb mov lcall (bad) add fidiv (bad) lcall xor pop lcall inc add dec sbbl imul inc mov (bad) mov lods mov addl js aam std jmp (bad) (bad) push scas and sub mov xchg jg cmp jmp mov pop mov xchg daa mov and adc fwait mov lret jnp (bad) mov fdivrl orl icebp aad mov andl mov dec xor xchg jnp fsubp sti mov int jbe (bad) dec jmp pop scas dec dec pop and mov adc push loop xlat or (bad) adc fbstp fidivl out push dec sbb mov addr16 movsb (bad) (bad) (bad) dec fs aam inc dec inc inc sub or orb jl fnstcw out jnp enter (bad) (bad) call (bad) or and lret mov sub add inc data16 mov adc cli stos (bad) (bad) (bad) ljmp pop xchg and sub (bad) lods jb and popa cld in arpl push (bad) (bad) (bad) jl out mov mov out push mov bound jno pop ret ss sub lahf clc (bad) (bad) (bad) jmp and std (bad) cmc push enter xchg jbe cwtl (bad) cmp sub insb pushf mov (bad) (bad) (bad) inc sub fucomi push leave loope addl jmp stos inc stos xchg jl out mov aas mov fdivrp mov fsubrl jle jo imul aam fs mov add paddsw jmp cmp (bad) ljmp shll sub cmp insl out (bad) jecxz,pt (bad) mov jnp (bad) (bad) call in dec rcrl push movsb (bad) pusha decb je movsb mov mov jl xlat mov cli loop (bad) popa aaa std (bad) pushl push fwait test pop outsb inc push (bad) mov xchg (bad) (bad) (bad) call mov out mov mov sub outsb mov cwtl out mov out roll push dec or sub nop test ss mov outsl dec aam pop xlat lcall outsb aam in es mov fcompp xchg loope (bad) (bad) fstps cmpsl test in popf mov ds lods test lea and sbb cmp (bad) jmp jmp jnp xor (bad) (bad) (bad) jg mov insl fcmovu addr16 adc enter mov mov xchg and jg outsl push mov inc in stos xchg (bad) imul out std (bad) ljmp push dec scas push adc sahf or push addr16 push jbe sub xchg pop inc test outsl jo out jle scas les pop lret in and jno jne push call cs imul xlat push ja push clc (bad) (bad) ljmp (bad) hlt hlt mov adc mov cmpsb (bad) dec jmp mov std (bad) (bad) mov push ret fcmovnb sbb fs mov faddl and mov (bad) (bad) incl jne sbb dec cmc cmpb xchg jbe jo out (bad) xor ja mov mov in lcall sub data16 rcl push inc sbb (bad) (bad) ljmp mov bound inc pop mov push std ficomp jge (bad) repz rcrl rcl neg (bad) jg ljmp inc arpl int iret leave fs subl cmpsl inc hlt out push in adc and (bad) call dec pop push xchg cmpsb int3 mov fsts fmuls mov xlat sti xlat (bad) (bad) (bad) ljmp fcomps mov dec jns fxch jno aad mov inc sub scas sahf mov pop add jge outsb add int jns imul fistpl pop in jecxz push fdivr (bad) pushl popa jl adc push in daa xchg dec out scas cmpsb or insl fist xor jg (bad) js fldl xchg in cli mov sub push je enter (bad) popf popa (bad) decl loope mov xor xchg dec inc inc dec mov jl jmp cli pop cld xchg lcall mov js movsl icebp loopne test insl imull jns sti cmp cmp mov (bad) sub (bad) (bad) ljmp aam mull lods gs adc push dec lahf nop mov (bad) mov (bad) fbstp repnz out xor aad out jns mov xlat ds lods jg (bad) lcall mov adc ds repnz cltd pop sub lcall (bad) jbe sbb cmp push mov (bad) (bad) ljmp rcr sbb jae sbb lock and push push aaa fisubr jns (bad) (bad) jmp jbe xchg lret add lea and xchg dec (bad) incl push ljmp inc fwait jb inc fsubs sbb loop pop inc mov mov inc ljmp add cwtl sbb push fwait lods jnp add (bad) jmp int (bad) push jbe arpl in cmpsb jb xor jmp (bad) (bad) (bad) jmp cmpl notl xor lea cli sbb fs sub sub mov aad inc (bad) (bad) in (bad) cmp jecxz scas je inc ficom inc or rolb lock movsl mov fucom pop js (bad) (bad) ljmp and xchg aad cwtl imul inc daa sbb iret sub push ret sbb inc jb std (bad) (bad) fildl mov pop or xchg and jbe xchg fsubl (bad) call sbb loope or outsb dec jmp (bad) out repz xchg lahf jmp (bad) fcomip fucomp cld push hlt aas mov in scas fstpt ss call adc (bad) push push push add out lock jns mov jecxz aam (bad) imul adc lcall jo jecxz xchg dec add rorb mov dec repz add jmp or sub jecxz mov cs ficompl or push sub (bad) call mov dec loope inc push cmovnp xchg fwait xchg test (bad) (bad) push adc decl pop or insb push loope lcall mov jg (bad) ljmp xchg dec pop jge push (bad) cmc ret insl je aad movsb jo pop (bad) mov js xchg or mov push mov notb (bad) (bad) dec divb push add pop mov xchg mov sub in and (bad) incl jbe idivb dec push or dec ja pop idiv lcall cltd pop out jl fmulp push push in jns mov add or leave push push (bad) (bad) pushl pop jp jbe dec dec loop out (bad) sub pop push inc lcall add scas loope cmp xchg mov xor loop pushl mov pop xor or and andl (bad) (bad) (bad) jmp mov sbb data16 jge xchg fmul or int mov xor mul add cmc xchg push pop ljmp scas push lods (bad) xchg int3 mov sbb fsubs xchg (bad) (bad) (bad) clc test (bad) fmull xchg pop mov cmpsb test fidivl shr imul (bad) pushl xchg imul xor xchg (bad) roll jge mov (bad) (bad) lcall sub mov clc sub sbb lods iret (bad) in das pop nop adc (bad) ljmp mov sbb dec jae lea lock imul inc jg mov rcrl mov inc rcr cli sbb icebp lret lods push push imul jge insl mov fstpl ss and sbb mov mov (bad) (bad) lcall ficompl mov (bad) test stos stos stos xchg mov movsl in lcall call inc or jge divb jae and (bad) (bad) (bad) jg adc push addl dec popf inc out dec daa sbb outsb adc xor loop (bad) call jle decb aad psrad sbb iret push and add xor fidivl mov push mov ss mov fnstcw xchg aam adc inc sub (bad) (bad) (bad) js mov ror xor aam add in rclb jp mov ret dec (bad) (bad) call push push inc sti cwtl cld jg push xor jp dec dec test mov fisttpl xor add ds or aaa mov icebp or rol clc sub lcall (bad) divl mov sub pop inc (bad) (bad) lahf push mov push (bad) (bad) (bad) (bad) mov jo test push cmpsb lcall mov sub jge jge jae insl call ljmp jg cld (bad) mov add jmp dec stc adc hlt mov inc jl (bad) (bad) (bad) dec lea mov dec in or jl lcall ljmp jp mov (bad) decl nop (bad) sbb fptan aam dec fistpll sbb lcall inc add arpl (bad) (bad) (bad) jmp lret sbb sbb dec pop ret add test xor jl sbb (bad) (bad) (bad) jmp iret xor shrb xchg ficoml sub pushf out lods xor les (bad) or (bad) (bad) (bad) pushl dec aam repnz or mov or push add imul mov (bad) (bad) jmp movsl outsb dec in push repz bound enter mov xor movsb (bad) (bad) (bad) incl rorb jge out fistpl pop dec sub scas dec mov adc adc lods add push jmp shll cmp jl xchg (bad) (bad) (bad) jns mov stos aam ret cld sub lock push adc jl add loope inc push lcall lcall add push cmpsl mov mov dec xor aad ret imul (bad) (bad) jmp pushf sub mov adcl sub mov jg push sbb (bad) (bad) ljmp insl aas jno adc push push push inc rol sub mov in lea cld decl arpl sbb push inc pop sbb cmpsb imul or in outsb repnz lret addr16 jl mov inc or subb ljmp insl fwait add dec add sti mov movsb aad shlb xchg pmaxub mov mov test inc xor sahf xchg out (bad) (bad) (bad) lcall call jmp pop or inc rcl mov (bad) fcompl or stc sar (bad) (bad) incl pop adc sbb inc and scas les xlat into xor dec (bad) mov add decl pop mov mov sub pop sub jno (bad) (bad) pushl inc adc in mov in add mov push cmp ja inc xchg jne mov (bad) (bad) pushl mov jne shrb (bad) (bad) fwait sub jne fisub add popa add (bad) decl adc jecxz lcall shll (bad) fisttp in js and ret sbb or mov into fs (bad) (bad) dec ret mov sub (bad) popf mov fildll cmp pop imul decl scas mov popf iret inc inc les data16 cmpsl mov js dec (bad) jg mov xchg lcall add enter jmp cmpsb adc pop movsb adc cmp pusha dec mov (bad) testb insl test lock adc mov inc mov jmp inc shrb cli (bad) call imul lock jne inc call dec decl push hlt lock fldl hlt (bad) (bad) (bad) (bad) clc out cwtl insl pop out dec pop mov inc fdivrs xchg insb jne js inc ret push je ja (bad) (bad) cld xor rcr cli jp mov jae decb or shrl (bad) call pop sub and stos cwtd sbb push mov std (bad) jg lds scas enter (bad) or pusha sti test push imul mov sbb lret movsb lea push mov jmp (bad) (bad) (bad) (bad) in sub add mov cmp inc aad lods add pop mov aas mov adc (bad) lcall mov (bad) ljmp cmc dec insb lds xchg in in insl cmp cmp jno and cwtl adc int push pop dec sbb popf push outsl clc call dec cmp mov adc test outsl jbe jbe ret enter (bad) (bad) (bad) inc and and imul (bad) sub pop sub ja or (bad) (bad) (bad) (bad) clc ss into and loope jno sub mov sbb push push stos sbb (bad) sbb sahf xchg (bad) aam lods in repnz cmp cmc fmulp inc inc dec gs loope (bad) fcomip adc rcll cmpsl xor popa ds (bad) (bad) pushl and dec fildll popf xlat (bad) fistpll mov xchg sahf mov push cmp cmp adc and in imul iret jae fsubl int lret adc sbb xor and and cltd aad adc or jecxz push dec push cmp test mov (bad) (bad) lcall out rcl inc add mov mov loopne cltd out in das fwait dec xor lcall and cmp mov sbb aam ret incl aas mov dec clc mov xlat fsub test movsl lcall fdivrp (bad) (bad) jg adc add lds test fwait cltd add xchg inc jne (bad) (bad) pushl mov das shrl push dec aam ret les je gs and mov inc test aam push add pop insl or push sbb clc mulb ret or hlt (bad) add sbb stos add fidivl je imul adc jge gs (bad) (bad) pushl jne test stos in pop gs pop dec mov mov and jne dec inc mov mov xchg mov call lcall inc jae sbb lods jnp (bad) (bad) (bad) jmp adc pop jle mul xchg aam dec push mov jb lret or cwtl pop mov or pop sub dec in mov push jns xchg inc into out adc (bad) jg stos shlb mov push test (bad) loope push stos mov xchg call xchg jns cli sub cmp adc (bad) test mov add stos in jp xor cld (bad) (bad) (bad) jmp mov js (bad) push sub fwait jp mov pop mov inc movsl jno mov fild mov inc sti mov dec adc jbe (bad) (bad) decl or xor les outsb (bad) aam testb test testb (bad) (bad) incl stos (bad) (bad) enter inc or enter inc mov sub sub (bad) (bad) (bad) pushl clc xchg pop and cmpsl loop gs mov or mov mov repz mov mov fsubrl push cmp movsb lods ret fs imul jmp and jbe decl jle sub ja push sbb jo movsb push xchg repnz (bad) (bad) jmp sbb mov arpl add scas lcall xchg jne (bad) (bad) fisttp clc test mov push insl hlt cli push and insb jl (bad) (bad) ljmp cmp xchg inc jmp js xchg jb movl xor lea popa xchg imul (bad) dec cmpl arpl mov gs sub xchg xor mov (bad) (bad) (bad) fildll mov dec insl xor pusha xchg test push mov lret inc push (bad) (bad) (bad) call and jb imul mov cmpsb out and scas insl loope sub lock ljmp dec adc aas shll push mov sbb (bad) jg and push (bad) mov (bad) loopne mov push inc mov push mov (bad) (bad) (bad) decl xchg ret mov xchg pop mov ret int3 (bad) lock dec shrb pop push pop jb (bad) mov fsubrl imulb mov add lcall lea adc scas lods pop add les stos jp outsb fstl ret mov (bad) (bad) inc in int3 push rcl aam aam cmp enter push (bad) push xchg mov push popa xor int3 iret (bad) (bad) (bad) jmp pop inc imul fucom mov in pop jecxz fsubrl and push add xor push xchg pusha (bad) (bad) jg dec cwtl and mov jmp scas or adc or add inc pop lret dec push push push movsb sub mov fcomps fnstcw jne jl fcomps fdiv cmc inc push cld (bad) (bad) jne xlat jecxz jne cld lcall ja cmp outsl dec roll outsb push cmpsl jnp lods xchg aam (bad) (bad) (bad) jnp daa nop fdiv jmp pop or cmp cmpsl sub lret push mov mov int3 jnp aad ljmp push notl rcr fistp inc xor xchg mov lock imul (bad) jmp into mov fwait push xchg lods cmpsl cwtl xchg je imul ja mov lret imul call std push jnp bound scas (bad) incl call out pop push (bad) out push ljmp jmp mov test ret fistpl xchg insb idivb fcompl hlt ss push (bad) (bad) incl mov cmp mov push outsb in fcompl xchg outsb popa cli pop stos mov mov incl (bad) outsl cmp jne fmul fmulp xchg sbb jnp enter push ss jno (bad) (bad) (bad) (bad) cmp xorl jbe into in pop leave imul mov scas push into imul ljmp cli shrb and inc cmp mov insb cmp jb cmp jb (bad) (bad) cmpsl xor (bad) sarl pop leave sbb inc imulb fistl js cs (bad) (bad) (bad) jmp ja cmpsl xchg arpl scas push jmp mov in cld in ljmp insb mov in or cmc (bad) ljmp add jg sahf adc fucomip dec shr into ss mov sahf cmpsl sahf insl rcll hlt (bad) lcall or adc outsl mov jae fcomi push scas cltd adc xlat test (bad) cmp (bad) sar jg sub mov sbb imul mov jbe pop (bad) (bad) ljmp push es xchg and in (bad) mov sub fwait mov test or push jb into and (bad) (bad) ljmp pop xchg ret xor jbe pop je rcrb les jg icebp dec idivl cwtl fcom in mov je rol lcall decl ret cmp ficoml enter gs test (bad) gs mov mov loope xor pop sub (bad) (bad) decl lds addr16 mov inc sub loop add sti xchg lret cmp inc je (bad) lcall (bad) jne fsubr sub pop inc outsl or popa xor mov (bad) mov test and adc outsb (bad) stc dec inc and idiv fwait ss (bad) (bad) (bad) out and addr16 jp aam mov iret fistp xlat leave in mov mov mov (bad) ljmp fldt notl push lods push scas insb inc test loop sbb in push mov push aad (bad) mov sub out popf xchg sbb xchg int xchg mov push (bad) (bad) (bad) (bad) fucom fs loop bound sub inc arpl pop das fmull imul cwtl push out (bad) (bad) pushl fucom cmp movsb xchg dec icebp jno mov dec mov ja push aad mov scas mov xor (bad) mov iret mov arpl punpckhbw fnop aad sbb pusha jbe (bad) aas mov jmp mov fsubl cmp jnp lahf jmp fistp stos jmp sbb push fs cli (bad) pushl movsb xor (bad) imul jl aad adc outsb cs ds repnz out pop add dec (bad) (bad) ljmp outsb (bad) idivl fcomps mov insb xchg insb xchg sti (bad) lret pop clc adc lcall sbb and jge jmp mov ret shl ja (bad) lcall cmp loop enter clc loope fidivr jecxz rcr sub repz lret mov aaa fsubp (bad) out push scas jmp mov pusha mulb aad cmp mov xchg sti mov xchg push arpl (bad) (bad) (bad) incl jmp out fidivr push push ret xchg xchg repnz movsl jp pop insl xor (bad) dec xor and (bad) push push out jge faddp mov iret into xchg fwait xor push aaa add popa mov xchg jae nop fmul lock (bad) (bad) (bad) ljmp loopne (bad) sub and and (bad) ljmp in sbb pop (bad) jecxz xchg enter mov sbb xchg es (bad) incl mov daa scas sbb (bad) push adc fwait dec and pop add decl jns sbb imull sub (bad) call popa (bad) imul xchg out xor sub arpl jns bound call add adc lret mov enter hlt mov cmp outsl clc faddl lods ds rcr lcall movsl pop pop call adc (bad) (bad) pushl pusha test popf push mov out add and in rolb in mov movsl cli js xchg scas pop lock aas xor ret dec lock dec mov sar cli decl adc out movsl jl imul test sbb clc stos (bad) (bad) cmp adc push enter xor fcoms (bad) jg add or add shl xchg pop pop scas sbbl mov dec and aam mov dec mov inc ficompl (bad) (bad) inc or jne js add jne and stos dec cmpsb jns pop (bad) (bad) (bad) ljmp xchg (bad) or push mov pop adc ret (bad) sarb push xchg stos (bad) (bad) (bad) pushl mov cmp mov inc icebp fwait pop or test mov std (bad) call mov cmc add push pop stos push xor xchg mov cld jmp sbb mov out mov push sub or or sbb pop push push call (bad) mov das and cli pop test imul (bad) (bad) (bad) call js movsb ds fimull sub dec pop inc stos insb lods cs (bad) (bad) (bad) mov sahf mov loope xchg mov sar mov push push stos int3 dec scas mov mov inc lods js sub loope sarb test lret call jnp mov and mov scas xchg stos inc push inc sbb lock cmp (bad) (bad) pushl fstps mov mov out and leave sub xchg lahf nop dec decl inc imul sti dec (bad) incl xchg add daa sbb jno fdivrp (bad) (bad) mov (bad) and sbb or xor fidivrl add insl xor idiv incl loop jb sbb icebp and jmp mov lahf fisttpll adc jg (bad) jle xchg sarb stos mov cmpsl inc lret aas movsl std repz pop cmp add (bad) (bad) (bad) decl xor aas add push call push xor mov cmpsb (bad) (bad) (bad) dec jge adc aad rorl aam daa test dec mov addr16 fstl cld (bad) call pop cmp push lcall mov adc in es (bad) mov clc mov sbb fwait mov mov or (bad) call push in mov cmc inc arpl add fimull out pop mov call test and ja lcall push movsb dec (bad) cli dec shll (bad) (bad) (bad) jmp sahf xor out push insb dec std fldt pand dec adc add imul cmpsl jno in xor inc (bad) cs sub lahf pushw sbb jp or out sbb arpl mov or insb xchg movsl ss aas aad sbb push dec dec (bad) (bad) (bad) call jg sbb mov sahf mov jae xor pop vmovlps pop pusha pop out sti test std decl test push cs mov inc repnz mov fdivr adc (bad) (bad) mov cmp cmp jb hlt icebp sub shrl dec push aaa or (bad) call adc sbb push lcall jge rcrl je cmp mov hlt gs leave popf fcomi xchg sbb xor xchg outsl mov insb test (bad) jmp lahf dec nop mov fcmovne pop xchg xor lcall cwtl lods jg dec and and (bad) decl ret cmpsb lahf or mov in (bad) lock das or jmp (bad) ljmp jge mov adc adc mov inc cmp sar (bad) (bad) mov lea dec sub push push test adc stos leave pop mov sbb clc incl (bad) rcr flds out mov mov stos push mov push jle push pop (bad) (bad) (bad) (bad) jp subl icebp mov stc or roll movsb out pop dec mov int mov imul or stos lcall and add or in (bad) stos (bad) fucomip jb les aam xor pop pop imul cli ds ljmp adc xchg dec aas or mov movsb scas stos scas xor inc dec mov and and and xor jns xor mov test (bad) call outsb push adc xlat mov xlat adc inc pop repnz clc sahf sub push loope sbbl push xchg lahf stc mov in xlat push scas cs mov cmpsl sub enter (bad) (bad) decl jnp inc and cmpsb xchg jae pop adc dec or js imul insl inc stos (bad) mov adcb cmc loop inc mov aaa lea dec test push es sbb jnp add (bad) lcall mov xchg (bad) jne out mov jcxz jg pop imul loop cld and (bad) (bad) ljmp jle jns xchg das in test xchg sti mov inc xchg in mov (bad) (bad) (bad) jmp ficom mov push lret mov arpl jle ljmp call out inc outsb mov push cmc sbb jmp (bad) mov call shrl imul cmp push insb xor or mov cmc inc adc (bad) (bad) (bad) lcall lret jmp enter add adc in mov jl fimull insb test (bad) lcall dec call andl and (bad) ljmp andb and jmp xchg movb les arpl dec sar (bad) (bad) incl xchg pop xchg lds ret divb out dec jp cs into cmpsl dec in pop jle push out addr16 (bad) (bad) in fstpl push dec jp push and ds xchg outsl out jo in test (bad) pop xor nop (bad) (bad) (bad) lcall loop xchg push lret addr16 in pop faddl cmp jge int sub or (bad) (bad) (bad) ds imul adc mov push pushf jb out cmp mov (bad) (bad) dec fdiv addr16 and dec adc jno and aas sbb pop cld lcall arpl cmp ss cli adc mov push pushf fcompl xlat je loopne,pt lret test in dec push sub xchg mov (bad) sbb ljmp xchg lods arpl pop (bad) stc or cli scas icebp mov iret mov aas (bad) mov and lea mov fnstcw pop xor dec adc or rorb or loope (bad) (bad) incl xor and pop fs mov jecxz (bad) cmp aas out and push sbb (bad) jg dec cld (bad) push xchg cmpb cmpsl sti jg sbb roll into pop pop pop bound decl sub jge (bad) jns les stos out cli (bad) incl insb pop lea cmc xchg (bad) (bad) xlat jmp daa call (bad) (bad) (bad) jmp cmp jmp xor sub aad ret sbb (bad) (bad) jmp xchg enter popa ror repz outsb cmp sbb pop lcallw (bad) dec adc mov dec (bad) (bad) clc rorb and push idiv jbe testl js adc (bad) (bad) decl adc mov xchg imul and mov jg movsl (bad) (bad) mov lahf dec inc mov jg xchg mov ds (bad) (bad) (bad) in adc lods (bad) sahf stc xchg dec jecxz fs loop jbe mov insl dec xlat stc lcall incl xchg mov aas xchg xchg mov clc int scas fdivr ja aam (bad) (bad) decl adc mov mov out sub adcl adc loopne bound add mov jle cmp hlt ret (bad) (bad) (bad) push mov ljmp and sub insl mov int3 fwait xlat xor (bad) (bad) (bad) pushl dec gs sbb js adc xchg clc and andl (bad) decl (bad) ja xchg push adc mov (bad) dec in cmove roll es addr16 (bad) (bad) jmp inc push jo xchg popa in aas xchg cmp push cmpsb adc cmpsb scas fcomip cwtl sbb (bad) push pop into loope int3 pusha repnz clc fwait inc xor out mov xor push (bad) (bad) (bad) call rcl cmp mov in loop cmpsb fst (bad) dec js xor insl add idiv (bad) mov mov push inc xchg fwait std xchg dec ja fsubs mov loope (bad) (bad) (bad) jnp push ja mov or mov mov (bad) outsl sub mov ljmp adc rclb arpl cltd pop mov pop adc je (bad) (bad) out fist mov (bad) std mov (bad) xor test (bad) (bad) in add jb mov outsl and mov shlb (bad) (bad) (bad) (bad) jp jp lret inc (bad) insl out sub fucomip (bad) outsl popa cmp dec add scas insl xor ljmp fcoml xchg movsb xchg sub xor fs sar or in inc cmp ss add sub mov lock shrl out cli (bad) decl gs sbb jns outsl mov data16 sub clc (bad) mov jnp lods into in (bad) in das shlb pop in jge fnstcw adc call std lcall (bad) cmpsl cmp pop sub pop push and (bad) pushl jl xor inc dec pop (bad) daa das fucomp data16 pop inc pusha dec stos sbb lcall lds outsl pop push xchg push lods sub sub (bad) (bad) jmp and jbe aam test mov pushf jge (bad) movsb out adc mov pop or imul clc lcall jno aad add dec in mov mov jae (bad) (bad) pushl aaa mov dec xlat sub mov lock mov (bad) (bad) (bad) in push jb sti pop movsl dec decb ficomp xor push (bad) repz ja lcall (bad) push lock and (bad) mov or insb fisttp (bad) jmp out mov mov fimull imul addr16 pop mov push call aam jo repz outsb jg data16 cs xchg jmp and test mov call xchg int (bad) fsubrs lcall or cmc scas dec and xchg inc aad decb sub leave icebp jo (bad) (bad) (bad) (bad) jnp insl (bad) in jg cltd iret loop push inc xchg lds ret push in push xchg ljmp mov lock sub mov fisttp xchg mov (bad) pushl sub (bad) lcall cmp insb lea xlat jbe (bad) in fidivrl sbb pop mov sub inc in fbld jmp dec negb mov sbb loopne (bad) lcall push cmc addb mov faddp ror push je pop mov (bad) (bad) mov sbb out icebp jae ss xchg mov in fsub inc jns (bad) (bad) push xlat mov sarl jb outsb add xlat jl test lcall (bad) incl ja xchg inc mov sti sarb mov cmpsl mov fwait sar (bad) (bad) (bad) pushl mov inc loope sbb lods adc mov sbb fidivr ss je fcmovu popf and (bad) call bound je sti dec jle push mov jns out test (bad) pushl or ja in mov xor jns jno jg stos imul aaa std loop ss dec in in mov adc insl icebp dec test pop cld (bad) (bad) pushl call dec push mov enter push push or adc pop sub sar (bad) pushl push fcompl (bad) or mov fs insb xlat jno mov fcomp inc xchg mov pop pushl dec xchg xchg fs inc xor jecxz jge (bad) movsl (bad) (bad) decl and pop maskmovq mull sub adc das (bad) clc push sbb sti jmp dec mov sub (bad) flds push inc add sbb call xor add aas xor add add dec outsb outsw add lock push (bad) xorps adc jbe das add dec add loopne xchg out dec sti xor push push and lea out jae push push xor pop out pusha inc nop adc adc jb gs add mov add sbb adc sahf testl xor xor lahf and das jl insb gs jp addr16 addr16 (bad) jbe or dec pop inc iret xor ss aaa ss add pop add cmp dec popa bound xor mov shlb or add fildll or push inc push inc inc push data16 pop sub (bad) js insb imul and faddl outsl leave lds add xor or es xor hlt jne shl push pop (bad) or push or or inc out cltd popa in pop xor data16 (bad) cmp ds sbb push inc adc sbb in xchg xor rolb inc sahf lret adc sysenter adc add xchg push pop cwtl pop adc xchg inc push adc repnz cmpsl pop nop push adc mov xor arpl iret daa fcoml pop add adc inc jecxz aaa jp enter mov dec adc sbb xor sbb push xchg or pushf jl or iret repz dec or push pop pop mov pop or pop scas sub push pushf cmp xor jb sbbl fucom or lahf and mov mov in mov add mov push sbb (bad) jae (bad) xor mov out cmp aam shrb add fwait scas sbb push push mov dec mov into ja xor bnd leave xor or sbb push inc jns stc jge popa outsb fs rclb sub in lea jo aad je dec and inc sti sub lret leave repz push pop sub xor xchg fldl push mov daa sbb gs cs orb or and stos push dec cs and push add inc divb inc inc fisub pop xchg and aas xchg push dec andb iret movsl cmp sub and jns nop ja jo pusha and fsubrl add and loop sub dec push lea ss pop pop xchg pop insb inc cltd ret add (bad) (bad) shlb and inc inc push add lods in popa insb inc or cmp lock sub cmp lds adc enter arpl sub leave shl flds ss (bad) adc gs dec cltd dec pop jno or dec lods mov insl cs add movsb fs ret pop sbb push nop sbb enter xor loop mov and dec xor mov mov mov xor push push xor push cltd lods sbb add push or jg fdivl adc add adc pop or jg fisttpl or or adc add or sbb adc adc adc dec gs sub jo or add mov add pop sbbb pop xchg les mov xor push add aam nop jge dec or adc push push lods sub pop xchg push and lock sar (bad) decl adc jb (bad) mov (bad) lock mov shl push pop and aaa inc push jg lock or xchg mov rcl mov inc arpl mov icebp and mov movsl es ficoml add adc rolb or (bad) (bad) aas add repz outsl mov adc jnp xchg int3 idiv and push jle mov add (bad) call out jge (bad) sub lock dec fcos (bad) (bad) ljmp mov jnp cld pusha cmp jb in lret lret dec jb push incl dec xchg imulb xchg sub in lahf jmp decl xchg cmp jnp std rorb cmp inc (bad) (bad) (bad) (bad) (bad) sti aas shlb jp sub addl enter cwtl in testb pop jns fldt sahf cmp out incl mov pop or iret int3 jbe and or (bad) push pop nop xor aas je pop add ss or and stos xchg subb mov mov pop aas cmpl prefetch push cs xor (bad) incl and and test mov clc (bad) sti lock sbb scas arpl lcall (bad) (bad) repz pop js (bad) fnstcw mov (bad) or jge iret inc pop pop int push pop cmp fcmovbe nop (bad) das xor sub clc ret test mov fucom ds xchg sbb dec fdivs mov ror out xchg (bad) mov inc sub repz iret jecxz jne dec lcall test icebp mov fdivp jg mov ja jbe or jne js aas fcmovb pop sbb icebp call jecxz clc (bad) jno in xchg daa pop shlb xchg scas pop (bad) (bad) decl addr16 pop in mull dec mov inc pop pop (bad) dec icebp pop fild mov sub xchg loop out sub push push addr16 mov (bad) out push inc pushf inc mov mov stc and outsl fisttp cmp loopne inc mov mov in clc aas cmpsb lds and es mov dec popf das fs roll fisttp inc cmp push imul psubsw in and mulb aaa cli cmpsl xchg push bound mov icebp push imull push add std pop inc add dec mov dec jnp and lahf pop aad cmpsl ja rolb and (bad) (bad) jmp mov dec cmp test ror xchg outsb out (bad) dec gs (bad) (bad) sti fwait pop push hlt scas push jecxz int3 sub xchg outsl icebp mov xchg mov inc fnsave mov aas sbb jge (bad) xor and (bad) incl jae xchg xor movsl xchg (bad) lods jle sahf repz lret lods into daa xchg lea (bad) (bad) (bad) xchg adc push jmp add sbbl mov std icebp mov divb cld jg sar mov pop sbb push jmp cmp aas mov and in xchg sub xchg test lcall lds cmp pop je (bad) cmp jg (bad) ljmp jmp hlt mov fmulp hlt cltd popa fdiv mov adc adc (bad) (bad) ljmp cmc mov aad adc aaa (bad) test mov fwait std xor mov lret push jae stos push test popa enter xor mov ficom pusha cmp sub mov clc mov push inc clc icebp cwtl or out and lods mov add addr16 (bad) out (bad) pushl out pusha stos arpl mov arpl rorb add sbbl pop lock ret jp and adc pop mov pop sar inc aas outsl mov dec outsb mov jl repnz (bad) push add push cmc jg hlt sub xor lock sti ror jle pop cmp mov ds incl fcomip cld scas xor dec jae ljmp lods cmpsb mov (bad) stc mov xor out aad or in aad in pusha sub cmpsl push sub pop xlat xchg add mov stc sub jnp mov (bad) cmpsl iret sahf fdiv jne pop jg mov loopne jle js cld mov (bad) fiaddl pop (bad) fsubrl cmc mov jge inc aas outsb mov hlt dec data16 into and jmp lret sub rcrl pop or notb push sub mov jne sarl hlt xchg insb pop dec xchg cmc insb fwait jl in xchg cmp mov icebp jae fcoml movsl lods cmc adc sub fchs pop std ljmp mov (bad) jmp hlt mov xchg mov aam inc int3 or inc and (bad) out mov pop push fildll add push orb jb (bad) (bad) pushl fs pop jecxz pop rorb mov push mov xchg out (bad) (bad) (bad) lcall pop jb rorb jae adc iret stos loopne js in sarl push mov jno pop std (bad) mov insl (bad) and add aam jne mov fcoms pop push hlt ljmp ret movsb and enter adc jmp sub js xchg sub (bad) sub mov push iret push lds mov (bad) (bad) incl pop add add bound popa leave pop (bad) aam push fldl pop lock leave (bad) stos addr16 xor jl stos mov or xchg or sbb and or mov pop je les push add rclb push outsb adc xor jno cmpsb sub cwtl fnsave and sbb (bad) (bad) (bad) lcall fsubl jno fdivp enter sub es daa jecxz lea repz xchg repnz (bad) jmp inc dec sub pop sbb xor loope ja xchg stos popa ljmp (bad) call sbb pop pop (bad) ljmp push push mov jecxz adc adc sub (bad) (bad) (bad) out and sub cmp loop push xchg (bad) jo or ficoml (bad) (bad) (bad) cmp add push in and and dec outsl pop lret (bad) aaa subl (bad) decl (bad) rclb loopne jp mov mov push xchg jb adcb jne or sub or mov (bad) decl ficomp loopne loopne fwait repnz ja and in outsl push xor pop jo incl push dec mov ja xor xor sahf ljmp fs cmp (bad) (bad) decl push sbb cmp cltd xlat cs fsubrl jg or (bad) addr16 (bad) cmc dec xchg or xchg stos cmpsb dec inc sub or out cld or stos lods sub stos pusha mov mov dec cld (bad) (bad) out iret pop jmp imul push inc lds add (bad) decl cld stos mov int3 (bad) loope fs jo fdivrl jecxz or loope lods aad incl out ret fsts inc in sbb and push pop (bad) (bad) (bad) push stc frstor aas sbb mov or pop mov rorl and int ja (bad) (bad) in std pop lods outsb leave mov jo (bad) loopne frstors xor shlb js (bad) call movsb xlat cmp and je jnp add test decl mov adc mov scas dec xchg mov xchg sub xlat leave sub adc rclb xchg jp ret ficoml pushl mov push adc mov ret movsl dec jmp scas clc ja popf jecxz mov stos cmp lea pop in (bad) (bad) (bad) jmp jecxz sub lahf add pushf mov jge push pop mov (bad) mov xor ds or stos cmpl cmp add clc cmp loop lods push stos (bad) (bad) (bad) mov loope xchg hlt and fnstsw jnp push sti mov mov (bad) (bad) (bad) decl inc (bad) mov movsl ret aad popa into cwtl push xor cs jne insb xorl jne mov adc lea mov lods scas mov (bad) (bad) (bad) incl dec shll test inc sub mov mov es popa mov dec sub jb jge test xor sbb xchg inc sub pop push cmc jp mov xchg mov bound dec mov stos sar pop lock cmp xchg mov dec ja shrb mov jmp sahf push xor jp out inc in sub inc (bad) cmp test pop or sub mov loope xor inc push dec sbb (bad) cmp mov pop adc cmp push js xchg add fiadd jmp jg (bad) dec cmp add movb add (bad) (bad) add sub push and jo and nop or (bad) (bad) xchg ss lods sub (bad) (bad) (bad) call jno int aam (bad) test and nop (bad) repnz call or test dec adc push mov (bad) int3 aaa shll scas mov or pop (bad) (bad) mov aam sub aad int adc stos and fmull xchg stos jecxz (bad) jg out xchg push ljmp insl inc jge lcall call ljmp pop xchg cmpsl push pop pop add sbb insl ja sbb pop sub lea pop inc lods pusha stos je (bad) ljmp sub dec int gs pushf aam jns (bad) lcall and or sbb outsl pushf popa mov or ljmp xor lahf loop test sbb fs pop xor das and pop or mov sub fdivs stc hlt enter int3 dec popf ljmp loopne push sti and movsl or jae add lds stos loopne cli (bad) cmp cltd mov movsl adc jo mov mov (bad) int3 mov addl add push or jg cmpsb gs xchg or mov push mov into xor inc adc (bad) or add aam xor inc and push inc mov test (bad) mov cltd xchg mov xor jl out adc scas sbb ss fistp outsb lods adc (bad) ljmp xchg pop jo lods xor push add push icebp inc mov (bad) call lods mov repz mov pop mov cmpsl dec out stos imul dec movb mov mov jns (bad) add (bad) in cmp hlt or notb inc push adc das dec enter push mov mov movsl push xchg scas add push enter out movsb inc adc (bad) incl sbb jmp xchg and or out pushl jge jp mov pushf mov testb xchg (bad) add pop aam (bad) adc dec sub jnp dec jp pushf out scas popa push jge scas bound inc daa clc (bad) (bad) fmuls in add bound call (bad) mov mov mov fisttp es push xchg (bad) out sub mov (bad) (bad) push sub movsl jae cwtl es fisubl fisub pop in add iret pop int out pop (bad) (bad) (bad) inc test arpl pop add ds xor mov mov scas call add pop dec fs push (bad) jne jge xor stos jmp mov mov fbstp sub mov outsb xchg (bad) (bad) (bad) incl xor mov xchg (bad) movsl jbe pop in nop fcoms pushl mov push dec ljmp push or popa jp jmp scas xor loope scas es cmpsb dec cmpps cmp in (bad) (bad) (bad) (bad) ljmp jb cmp inc lret mov pop icebp lds (bad) mov incb inc in dec mov sub cmp ret loopne sahf lods jne dec stos sub pop aam call sub (bad) mov lret push ja ret (bad) mov popf fwait mov popf and iret mov jbe stos pop decb mov (bad) (bad) sti scas sub sub cltd aad mov dec mov scas (bad) (bad) (bad) (bad) cld push imul out mov push fsts shll ljmp jbe (bad) (bad) lcall or outsb scas push inc mov inc into jmp xchg sub cs mov mov push push hlt iret ja push cld lcall arpl pop mov cmc adc fiadd xor icebp lcall pop stos mov push mulb cmp inc mov decl push jno cmp push jae insl sbb (bad) (bad) call sub dec sub dec flds pushf cmp int push adc ljmp rcrb or jnp mov jge pop mov mov cwtl xchg enter add fsubl dec aaa pop aad sub pop push sub sti (bad) fdivrl xchg dec push cmp fldenv bound mov ja add test sub imul sbb sub adc and rcll sahf push sbb (bad) pushl nop popl fidiv cmpsb les loopne mov sbb insb mov (bad) mov mov xor cltd cmpsb ds lret pop add and mov std (bad) (bad) jl ret (bad) into push outsb (bad) scas repnz adc add dec cwtl popa mov mov adc fidiv pop or aad inc scas adc (bad) (bad) (bad) call stc shlb adc jmp (bad) mov cmp sub (bad) mov cmpsb cli (bad) (bad) (bad) push test mov pop pop cmpsl pop rorb scas mov aas jno pushf (bad) (bad) (bad) jg dec outsl sbbl sets aam adc cmp mov aad inc rorl pop sarb bound movsl imul inc xchg and out add xor adc cmp xor add push rclb xor (bad) ljmp add cmp and adc call inc popf popl (bad) jo push roll popa mov inc lea cltd add jg (bad) decl lea jno sbb movsl ss int3 in add fs adc (bad) (bad) (bad) inc pop xchg das sub popf xchg outsl and aad test push test sarb sub jmp cmp (bad) adc mov int cmpsl into cs mov (bad) jg ljmp (bad) stos mov cmc inc inc push sub jb in (bad) jg repz jbe dec aad push mov add cmp or lods mov imul pop lea fiadd ret sbb or adc inc adc fistpll incb or xor sbb or mov out push call gs bound fs repz push (bad) (bad) (bad) (bad) mov inc lock out stc or sbb enter add decl push lds xchg and adcb fwait jns mov add subb (bad) aas pop xor push add and test add mov mov or in (bad) incl icebp bound xchg outsb movsl adc push xor bound sub mov adc pop inc pop popa inc adc and sbb add loope adc into add add (bad) (bad) jg les and xor inc es mov push adc add jno in lock (bad) (bad) ljmp idivb sub scas je stos adc test sbb dec sti mov ljmp or repz dec xchg inc add mov imul adc mov test enter add add xor lods push ljmp incl call push pop (bad) mov mov push cmp (bad) incl jl mov adc loopne fldl fmul outsb sbb movsb jae scas js adc lock (bad) das adc inc jne mov xor (bad) (bad) inc movsl stos push int3 push pop and lcall dec negl (bad) ficomp (bad) (bad) pushl xor pop jns pop ficomp jb stos imul stos out mov test (bad) (bad) (bad) mov jle push mov in (bad) lods sbb out sub js lret ret hlt sbb xchg cld ljmp mov gs lods popf push pop and into ljmp dec push mov mov mov add lret les (bad) mov in stos fs aaa mov test pop loope pop pop lret (bad) aas push mov fcomip (bad) cmp mov sub mov mov aad cmp sub inc mov or push mov stos addr16 test fstl (bad) (bad) out sub add or xchg mov (bad) push mov mov out (bad) (bad) (bad) jnp xchg scas mov mov ds das movsl (bad) jg or (bad) mov add gs adc mov stos jne inc imul mov outsl es call push stos bound in or test call (bad) (bad) (bad) incl stc or xor mov mov repz push xchg pop cmp cmp mov fisubrl repz pusha mov jnp icebp inc stos loopne (bad) (bad) jmp inc dec jecxz xchg jae cmpsb cmp fstl js jmpw mov rcr add outsl (bad) (bad) fidivr dec fldz pop out rclb pop popf lcall loopne fmul js outsl clc lcall in bound je int mov xor ja (bad) (bad) decl adcl jecxz movsl (bad) sub push pop lea jnp outsl test pop lahf ljmp lret and stos fucomp lcall xchg xchg push imul outsb sti fcomip jmp mov cmp push aam outsb mov je ljmp xor movsl jno iret fild (bad) int ret aaa mov cmp outsb ds dec jp sbb xorb (bad) ljmp push es (bad) (bad) lcall xor jns pushf inc mov in repz test fsts ljmp xchg test lods ret jb (bad) movsb push mov cmp imul dec sbb inc mov mov out lods jnp dec nop sbb scas aaa xchg (bad) (bad) (bad) pushl push xor push xor loop dec mov xchg not sbb lret rclb cli (bad) (bad) jns notl cld bound in insl push and loopne test sub (bad) (bad) inc pop outsl scas ljmp fcompl pop rolb repnz pop out adc inc movsl sbb sbb mov fiaddl lcall (bad) (bad) incl jb cli fldcw jmp lcall pop pop pop push mov pop cmc (bad) ljmp mov gs enter sub imul ljmp xor divl lods adc (bad) jo leave pop div (bad) (bad) jmp dec jne mov sub dec cli cmpsb xor push icebp std (bad) (bad) fist sub add mov inc and mov jp (bad) (bad) fist cs call out adc or mov je (bad) call testl out out stos dec sub hlt jl cmp cs sar push mov addr16 push out xor pop push lods mov jl push fs sub in (bad) (bad) mov sbb push loop mov call xor cmp cltd scas pop scas cli (bad) incl test movsb sub add outsb sti inc mov mov dec lock in out add frstor push jne inc adc nop sub mov aad stos cmp cmc pop jo ja sub icebp xor (bad) (bad) ljmp add pop adc xor std lret pop aad subb pop gs cmp mov call jne (bad) int3 (bad) pop rcll pop fs jl inc addr16 (bad) (bad) (bad) inc cmc in xor cld jo out sbb adc push int (bad) sti mov cmp jg icebp rolb imul je scas dec and cmp mov decl pop sub loopne push pop mov (bad) aad sbb mulb hlt cmpsl fwait sarb sub dec popa add or nop test push mov sarl (bad) mov mov pop fs lods xor sbb xor mov cli (bad) lcall movl jne ret adc sbb bound dec nop test add jne imul sub and test add inc andb mov fmull (bad) jg data16 test shlb mov out sub aas add cmp push mov add mov jae mov sbb push or cmpsb outsl xor scas sbb pop push icebp mov pop icebp sbb pop stos dec or jge into and jg icebp cmpsl cltd inc inc add movsl xor or dec mov andb daa ret adc push test cwtl imul sub inc pop cwtl cld nop das (bad) cmpsl cmpl jnp adc (bad) (bad) (bad) inc cmp pop or fisubl mull rcrb (bad) adc mov incl clc ret cmp mov inc add xchg inc lret jne adc ljmp jecxz xor js stos std nop xor imul mov jecxz push pop pop jp cmp (bad) pushf inc sar and sub (bad) (bad) pushl movsl xchg pushf jno fsubs andl sbb cmp inc inc loopne stos cltd in das inc sbb sub fdiv xchg stos push cltd add lcall (bad) jl sarl scas (bad) lods rcll push repnz mov repz lods sbb mov push ja xor mov cmpsl jbe push mov ljmp cmpsl (bad) lock sub (bad) mov inc mov outsl mov (bad) (bad) decl (bad) mov out inc shrb or xor cmp out jmp pushl call sub jae or sahf sbb ss in std adc push aad sar pop ja pop lods push (bad) sbb jns sti (bad) (bad) jg pop mov mov rcrl mov jmp push inc cmpsl fistp cmp (bad) (bad) jg orl cwtl movsl xor aaa flds fwait xlat pop push lret add cmp cmc sbb and aam dec inc cmp (bad) (bad) lcall xchg (bad) not or (bad) into stos pushf fisubr jecxz dec mov mov xchg mov sub lods (bad) pop lods xor lret mov push lods or fcomip push inc adc push sub mov jns (bad) (bad) (bad) sbb out aad add aaa pop pop xchg iret xor dec test dec mov call pop push in sbb add mov (bad) (bad) (bad) jg and xchg sbb test mov testb fwait mov (bad) ljmp shlb mov pop bound dec mov mov es sbb mov in fbld insb mov stos loopne xlat fwait out dec mov (bad) (bad) decl pushf sub xor pop stos mov jb adc mov cmp into xor pop cmpsb dec aad push fmuls loop loope je int push imul enter mov fcomi (bad) mov add iret arpl les aad pop xlat popa fidiv popf jno push jge (bad) (bad) call in mov cmpsl insb sub popf setle fnstenv repz (bad) decl lcall xchg jmp (bad) mov cmc push lahf pop gs sub (bad) (bad) mov jmp jmp mov test std daa cmp mov or decl cltd ret addr16 pop sub xor cmp pop jnp jp (bad) (bad) ljmp ficomp mov adc sarl cmp mov xor iret addr16 mov mov inc sub cmp or cmp sti test push das imul bound scas incl and sti es push insb mov xchg sub scas pop loop mov jmp sbb (bad) pushl lock bound scas xchg mov xchg scas sub (bad) (bad) (bad) dec mov fcomps mov pop stos cmpsb add jne lea (bad) (bad) (bad) cmp pop or jae xor push imul lods adc xchg jg (bad) mov scas mov push aam jbe push dec leave je jo or (bad) (bad) (bad) pushl jb xchg (bad) cmc or dec imul pop lods sub mov in jge push stos inc (bad) (bad) (bad) ljmp inc mov cmpsb insl push rorl xchg xor lods mov dec jbe vpsubb adc jbe mov mov rclb pop stos shrb lcall test mov mov (bad) call pop (bad) mov cmpsb stos test pop push xlat xchg push call imull (bad) fbstp test clc js or cmc mov mov mul cmp test xlat add cs (bad) mov insb fidiv rcll lcall sub or cmp call jne outsb mov pop mov (bad) mov jp xchg push push imul mov in sub jmp icebp incl lock stos loopne cmp ja bound test std sub mov sub push or pop movsb pop imul scas pop sub xchg lahf xchg lret mov ret push mov or sub mov out dec out adc das sar hlt iret stos add pop xchg jb sub loope (bad) xor aaa jmp aad adc loopne flds bound pushf into (bad) stos lcall (bad) jmp stos add faddl adc (bad) jg loop pop les or dec aam dec xchg mov out test movaps repnz js lds add mov rclb enter cld inc mov or cs insb ret xchg xchg (bad) mov push xchg dec pop (bad) mov xchg mov lret idivl popa lds clc jle roll cli lcall xchg push mov int ss fisubr fcmovb mov addr16 lods icebp dec push cli lds jo sbb mov subl push sub or add push jb jb popa in call lcall sbb cltd jecxz (bad) mov cli jno (bad) sub lret dec xor sar pop out aad xor (bad) inc sbb ljmp (bad) jmp dec adc push or or or pop sbbb sub int3 mov mov (bad) (bad) lcall scas mov or xchg gs cli or pushf pop and jge and call sub xchg sub and call aaa add mov movsb out or xor insb cmp vpmovsxwd push xor in inc roll lcall lahf push xor shrl push lcall xor mov mov mov fwait push (bad) (bad) (bad) ljmp mov arpl out jae xchg xchg mov sub js lret fsubrs (bad) call cmpsb inc pushf mov out inc nop scas cmp adc vpmaxub jb test jle (bad) (bad) (bad) (bad) mov mov arpl mov aaa imul pop (bad) push icebp cmp xor (bad) ret js inc push in pop imul dec enter (bad) jae pop into or inc std lods es cltd pop jne pushf jne test call or or add push repnz loopne std (bad) ljmp add stos sub inc jo movsl jae mov mov sub clc decl lock dec sub outsb imul pusha mov dec (bad) (bad) (bad) jmp dec dec mov orl jo out sbbl cwtl xchg ljmp mov cmc adc dec cmpsl add sbb mov inc arpl (bad) (bad) inc ret or pop sbb mov loop lods jae sub jno movsb dec push test ljmp xor scas loopne jp push sbb mov out sbb lods movsb push mov mov push mov imul mov inc cmp cmp push stos mov mov inc (bad) fldl (bad) (bad) ljmp jbe test inc enter sub test (bad) cmpsl js xchg ljmp pop or rorb mov cli add xchg push cmp mov (bad) dec cwtl jo stos call leave mov jbe mov dec push xchg (bad) lret and (bad) mov add mov (bad) (bad) push out fwait cmp mov fnstenv push shrb pop std ja in jno pop mov pop call inc mov mov push movsl push loope cld cmp mov push loopne clc adc repz (bad) bound adc cmpsb rorb outsl into cltd stc mov mov pop sub test addl jmp sbb and sbb movsb lods jns and stos incl xchg xor je,pn mov clc pop mov add test lods push (bad) ret xlat or jp insb ret mov (bad) (bad) ljmp lock lods ja shrb aam adc and out (bad) (bad) decl push cmpsl push call and sub push mov lcall cmc xor inc lods adc cmc mov fbstp jo pop adc jnp cmp out (bad) decl and int push xchg lock lock push mov imull sarb pop mov (bad) cmpsb mov push sarl push adc push sbb cli sub movsl jp loop mov in add repnz jo mov sub mov (bad) (bad) call (bad) pop inc repnz and cmpsl pop ja in (bad) lcall adc insb fstpl adc sub xor loope (bad) dec sub icebp mov xchg push adc mov xor sbb in xchg push out pop xchg adc fcmovbe aad xchg jmp pop clc fmull outsb js jmp je and dec cmp (bad) (bad) (bad) ljmp or dec imul xor xor (bad) lea scas mov incl ds xchg pop test mov push xchg clc dec xchg push xchg and divl (bad) (bad) jmp and test mov inc arpl sbb lret and mov and popf sti dec ret cmp (bad) decl jmp or out es popa xor rcrl (bad) loope dec mov (bad) (bad) (bad) (bad) (bad) cmp std pop lock ds fwait push cli insl es dec ficoml es (bad) (bad) jmp ljmp xchg dec push jns push and pop sub int iret scas mov dec dec mov out dec mov popa jnp and (bad) cmp hlt fildl cmpsl jl rcll mov pop in pop sbb adc incl dec test jae inc cltd arpl mov incb stos xlat ljmp sub std (bad) (bad) call fistpll add mov pop sbb gs ss pushf fdivl aad mov xchg push test cmpsb cmp dec outsl (bad) (bad) (bad) call outsb scas jne inc mov jne sarl fcmovu xor arpl les in jo (bad) (bad) (bad) mov (bad) mov mov stos gs dec aad sub dec movsl (bad) (bad) (bad) call ret jle mov imul arpl imul mov jp adc adc ret (bad) cs jbe in insl pusha sub mov js jno js (bad) fstl ret mov mov insb lock (bad) ljmp sahf lcall and dec loop loop shlb mov loopne sub out (bad) mov aad fwait (bad) xor cli fcomi mov movsl cmp fbstp mov push rorl (bad) inc push lds (bad) dec and hlt (bad) fcomip mov aad insb push add jbe lcall fisttp ds lods aad mov xor stos in imul mull test dec sub (bad) mov xor push ret test jp xor sub nop out imul jg call iret mov inc dec mov pop fsubs jbe dec mov decl js daa leave pop shrb (bad) ljmp ja shrb (bad) (bad) decl fisubr sub push mov popa iret push mov imul aad or incl jp mov push jae sbb mov outsl or pushf cwtl scas or dec inc dec movsl in adc rcll mov cli (bad) (bad) (bad) js testb push add mov xchg idivl lds jns hlt les (bad) (bad) ljmp xchg test jl and xchg (bad) in add jl adc and rorb mov cmc decl out stc (bad) sub inc mov add clc and pushl mov (bad) imul cli mov aam pop negl stos stos popf push pop (bad) jecxz jnp test (bad) incl (bad) jno shrb repz (bad) in aam out sbb pop cmc popf adc pop pop mov add popf add pushl and push (bad) dec xchg mov jbe ds popa adc push imul lock push or dec xor ja cmpsb or aad mov push sahf lock call shrb cmpsb push iret mov je sbb inc mov (bad) (bad) jg inc adc xor loopne mov sahf clc into (bad) shlb fsubrp sti (bad) jg call adc jecxz (bad) ss xchg push xchg sub outsl push add jle out xor incl (bad) fcomps add cwtl int3 or pop test les push adc and call or test ljmp push (bad) (bad) lcall lcall lods mov fstpl sub jmp ljmp (bad) (bad) (bad) dec popf stos cmpsb push mov out aad fwait mov ss inc pop pop bound jne inc stc (bad) (bad) (bad) decl in lret es push outsb xlat jl xchg push movsb les movsb js (bad) fisttpl (bad) (bad) (bad) (bad) call sbb cli cmp mov jns push xchg jo mov inc dec addr16 jne (bad) (bad) (bad) incl jbe dec xor cmp enter sub (bad) xor (bad) jmp xchg clc fwait bound imul mov cld pop insl into movsb dec imul ja mov xor hlt (bad) int dec (bad) (bad) incl and int3 pop cwtl out jl icebp loop cwtl lea sub jae (bad) movsb (bad) (bad) (bad) jmp jae cmpsl (bad) repnz sbb cltd imul mov ja add ljmp lret mov or data16 mov (bad) aas push loope or adc addr16 fs add jmp (bad) cli jmp adc sub aaa sub mov mov scas jo call pop aas sbb inc mov inc (bad) (bad) jg mov sub cmp xor fisubrl (bad) out pop sub (bad) (bad) (bad) incl aaa fs repz cmpl xchg int3 ljmp lcallw lods data16 cltd pop mov fst out add fldcw xorb jo push adc push adc adc lods mov mov in xor xchg ljmp mov inc std lcall sbb jmp fnstsw dec shlb (bad) (bad) pushl cmpsb xor out mov pop jle out xor xor mov (bad) (bad) cmp test dec mov push scas or scas cld rorb xor mov test cli call and jo or ja dec adc ljmp sbb fidivr xchg mov int3 pop pop sub mov int3 fldl imul das xchg movsb jmp in sbb out fidivl ret (bad) call cld dec out (bad) cli pop dec (bad) push outsb jnp jae push and mov lret dec jno (bad) push mov push adc sbb ljmp jno ficomp lret sub or jbe xor adc add pop push or je es xchg ss push jmp out push jmp (bad) (bad) xchg xchg push sub fsubrp stos sub movsl cltd scas mov dec cwtl in mov push or cmp scas adc movsl pop cmp (bad) (bad) mov call (bad) push jmp dec lods lds je int3 (bad) cs (bad) (bad) pushl push sbb out nop scas stos mov push aad xor fwait dec fnsave mov arpl or lods lods mov aas jb pop fisubl jbe outsb cmp (bad) ljmp mov aaa jne dec jp inc gs jnp mov cmc test rolb adc adc push lods push lods cmc jnp imul dec mov cmp divb cmp xor stos call sbb pop inc shrl mov stos cmp push jb pop and ljmp and xor cmp cmp mov scas fnsave (bad) (bad) incl stos lods int add imul add mov sub fisubrl inc (bad) (bad) (bad) decl pop std addr16 out orl in mov inc (bad) mov (bad) stos ja (bad) ljmp idivl pop or jns,pn cmc mov stos inc inc (bad) add movsb arpl stos cs cmp inc mov and (bad) (bad) call xchg push js in jb xchg jnp mov fdivrs fidivl insl lret (bad) (bad) ljmp insb lods cmpsl les jae and inc mov fs cmpsl in sar (bad) (bad) decl push (bad) movsb mov and cld mov imul lea push dec rorb jne lods insl cwtl xor jns in leave sar ds aad dec xchg and movsl jmp xchg pop imul ljmp mov xor ljmp (bad) lcall out out lea push push and call test adc (bad) jg lock mov clc jno (bad) arpl in ror jbe push adc outsb fbstp loope and popf ja jl fwait sub (bad) (bad) (bad) jmp jae sahf xchg sub js inc rorb pop repz (bad) (bad) (bad) decl or xchg cmpsl data16 mov and rorl sbb aaa xor in pop jae (bad) xor pop cmc jmp add mov cmpsl sbb pop ss xchg pop jecxz aad sbb pushl es addr16 flds lea jae sub push dec fimul fwait test cli mov out sbb pop mov repz pop call jg mov jne gs jp or sbb mov mov (bad) incl pusha cwtl arpl lods add mov fs lea push add (bad) mov (bad) (bad) lcall rcr push fimull lods cmp adc popa out mov sbb dec jp aas (bad) lcall les lds adc ljmp daa sbb (bad) pushf adc (bad) (bad) (bad) jmp mov imul xchg jne lret sub aaa pop xchg (bad) mov cmpsb pushf mov add jne mov cmp jbe push mov (bad) (bad) cmp in pop fdivp push sub (bad) mov jb cmp jno sub icebp jecxz mov gs jecxz sbb xlat jle adc (bad) inc inc pop inc loope (bad) and cmp das push sbb inc (bad) pop hlt popf sub jecxz (bad) mov jbe out lea jno mov (bad) lcall mov rcrb iret and push xchg (bad) imul sub jmp sti sahf push mov lods fwait cld push mov mov xorl stos in mov xchg (bad) jg fstpt fisubr xlat imul adc cmp push into xchg pop push fcos incl cmp mov aas mov pushf jbe stos sub mov inc (bad) (bad) (bad) ljmp int lods inc xchg sahf sti movsb add pop aad les dec dec inc (bad) in cwtl push in cmc sub jg ret mov or inc adcl test adc (bad) lcall out or or stc in xchg add sbb push add add rcrb inc xchg mov imul bound inc sub imul fwait cmp xchg or jae aad fstl pushl push add imul fisttp inc push xor add enter cltd outsl jmp (bad) jmp add mov scas addr16 das dec loope dec mov pop mov push cmp pop cmc cld (bad) (bad) mov outsl out mov or and imul loopne (bad) lcall mov dec outsl movsl loope,pt xor add mov pop mov dec dec lock ljmp jbe push or decl mov not fsubr jo std or (bad) (bad) mov jecxz imul mov mov push push pop inc and subb repnz or stc or ss sub push xor sbb jg icebp pop fcoms lret ret jl in xchg inc test stos lcall jge lods mov mov (bad) sub sbb cld (bad) (bad) clc shl fisub daa loopne mov out scas ss frstor enter pop inc (bad) (bad) fcomip lods mov dec pop jno xor imul shlb mov (bad) (bad) (bad) mov ja push xchg int sbb sbb ret andl pop push inc int (bad) (bad) ljmp dec inc fistpll cmp adc les (bad) out add (bad) (bad) incl mov sbb dec lods jne jmp sub xchg fsts in lods cmp sbb cmp insl inc test aad mov bound enter cmp push (bad) (bad) (bad) pushl icebp pusha les push in jae insb les mov pop ja lock push loop std rcrb pop hlt (bad) aas and mov loopne cmp or mov (bad) (bad) lcall sbb dec jb inc ret dec cmp adc hlt stos pusha xchg pop xlat stos fnsave stos push cwtl push (bad) (bad) (bad) cmp sub lret push das imul xchg sbb pop jne cmp decl (bad) ss adc lods pop lock pop cld and xchg test mov sbb mov jge and repnz ljmp fsubs push push push adc cwtl jecxz or cmc mov (bad) jle push fwait sti mov xchg in mov (bad) jb lds into cmc (bad) jg decl push mov jp enter jl adc push xor xchg scas jle (bad) (bad) call sub data16 out fnsave dec adc push pushf or cmpsb push jl (bad) mov idiv ljmp stos mov in or jno and push (bad) sbb xor lods xchg inc (bad) mov (bad) mov movsl push or jo pop sbb fsubrp lds cs stos mov in (bad) ljmp (bad) lcall mov test cmc adc and insb movsb sbb mov lcall or test mov mov push int hlt add xchg pop loop pop hlt imul mov inc outsl mov mov mov pop daa int outsb cmpsb in ljmp sbb cmp push pop sub decl lock (bad) aam adc mov ss mov (bad) (bad) (bad) js mov jp cmp jl mov dec cmpsl pop ja or jg ljmp jb sbb mov mov pop push or (bad) jg push mov push jae lcall push add arpl ret decl sub fistl push push mov mov cld pop (bad) (bad) mov mov adc sbb stc xlat dec push bnd incl (bad) or fwait mull or or mov mov gs dec ds sub stos ret push cld fwait lock sub sti (bad) (bad) lcall scas cmpsb xor stos add jb ja jmp pop inc pop jmp inc fstps into xor (bad) (bad) jg mov sub or repnz jne cmp inc stos push or mov mov js aaa sbb xchg (bad) stc mov pop xchg push push lret shrb lcall decl adc push mov dec outsl dec mov push in (bad) push fstl (bad) call dec cs push dec dec sub or pop mov dec icebp dec add cmc push xor lods cltd cmc shrb movsl fistp mov (bad) (bad) decl cmp aas cmp fnstsw enter xchg aam fucom cmp (bad) out jl pop mov int out or jno addr16 xchg leave push pop push outsl add lcall add (bad) bound pusha mov jle xchg pop jno (bad) mov mov push xlat push mov xor push mov mov xchg push clc (bad) (bad) (bad) ljmp fstpl adc dec sub adc in cltd or aad hlt sahf int3 sub mov push sbbb jb movsl repz sub inc insb push xor push push das pop or (bad) sti (bad) (bad) (bad) (bad) mov jecxz in sahf ret lods cmc cli (bad) int3 ss dec dec aaa or icebp imul pop dec jl sub xchg pop cmp nop lods dec pop cbtw mov daa movsl imul clc (bad) (bad) pushl mov fs and pusha bswap out pop stc push mov cmp cmp xchg xchg (bad) pushl push scas cmp mov mov xchg push mov xchg mov (bad) (bad) (bad) (bad) fstpl cmpsl ljmp nop leave (bad) data16 xor mov jnp xlat data16 xor repnz (bad) (bad) jmp mov cmp int int mov and sbb stos mov pop jo out push or and stos stos test lcall xor ret (bad) (bad) jmp add shlb insb sbb pop jecxz,pn pop and jg insl sub (bad) mov rcl adc mov (bad) dec lock cmp xchg out stos lcall adc aaa push dec (bad) repnz pop jae xor sarl movsl push pop mov and cmp (bad) (bad) call aaa imulb xchg aam cmp jbe push sub out mov pop lahf push (bad) (bad) mov insl cmp cwtl dec push mov stos jb and cmp cmpsl sbb (bad) (bad) mov add jns dec in test jbe sbb lcall cli es fstpl aad test es and mov cmp dec jne dec negl icebp adc dec push xor push inc iret pop xor cmp push imul mov loop push ljmp sub (bad) (bad) ljmp dec jne iret unpcklps movsl js lcall movsl ja xor loope sub (bad) push mov adc mov inc aad das gs and adc das (bad) mov aas out nop int3 pop mov movsl push push sahf mov cli (bad) in incl pop aad out lret mov mov lahf jne push xor jne mov popa hlt jo leave adc sbb mov je loopne pop imul fs jecxz mov rol ficomp fdivrs add add dec adc and sub (bad) (bad) lcall mov jl push aam xor cltd add inc (bad) ljmp out add push jo inc mov push and andb sub xchg sub or cmp cmp gs adc mov icebp int mov push movsb xchg mov js push and sbb push (bad) (bad) (bad) (bad) decl sub dec pop xchg hlt iret push push cs imul pop hlt jnp fnop inc push adc int mov push test inc lcall (bad) fsubrl mov (bad) push adc cmp imul mov add (bad) (bad) jb sbb lods ja xor stos mov push push push cmp rclb inc scas ret (bad) xor frstor call std xchg mov push outsl lods sahf xchg pop test shrb dec das xchg movb or adc int3 (bad) sub ljmp rcll popa in test add mov out call push out jg cmp fisttpll rcrl pop lock jmp inc (bad) mov inc pop mov cld push cld repz rcrl inc mov lds sub push (bad) mov daa sub imul test je mov bound test mov (bad) (bad) out inc mov add and sbb (bad) call sub (bad) xchg test sub ss loop scas (bad) (bad) (bad) jmp imul fsub lahf mov lahf xchg sub ror fwait bound clc lods dec pop (bad) (bad) (bad) call jp in ja add jbe ret jb pop push mov (bad) (bad) jmp inc jl push mov jnp mov ret cwtl mov or scas cli dec insl mov mov lods mov xlat mov push insl jnp jno (bad) jne (bad) (bad) (bad) out cwtl imul jbe cmp jae pop (bad) aaa mov (bad) fs addr16 outsb sub dec icebp or pop mov inc or dec jmp (bad) out add inc fcoml mov (bad) (bad) call loopne push cltd xchg mov in movsb dec or es (bad) inc mov xchg in fisubrl adc lcall (bad) (bad) (bad) jmp jbe dec mov dec cmp push lret out inc lds mov aad mov iret rolb sub push roll jge ja pushl out push rorb es push push add scas hlt push mov in sbb ss lods jb lret icebp in bound sub cltd xor sub inc loop mov xlat (bad) decl cmp stos gs cmc int3 sub xchg cmc scas add call bound and stos lock mov mov cmp (bad) (bad) call dec pop imul test stos mov lods mov incl enter inc and jl adc sub push or out push pop aam lcall dec stos and adc test decl dec dec aaa fiaddl xor xlat jne sbb fstpt jl mov call mov arpl lods dec mov and (bad) popf lahf (bad) (bad) mov xor imul pop gs inc in sbb inc lret idiv xchg out loope insl and cmp xchg sbb in adc dec out mov test aam out push cmp mov (bad) (bad) push dec pop push jo jns adc pop cli and add imul (bad) (bad) (bad) fistpll sub cmp pop fdivl mov lds rorl (bad) decl outsb mov (bad) int3 out cmp mov mov push push jp enter incl mov cmp loop (bad) lock jo nop bound inc iret imul (bad) push dec mov (bad) scas stos sub xor stos push pop mov imul xchg dec out add jmp scas cmp jno adc mov jnp fsts xor (bad) (bad) fcomip (bad) out sub dec push lret jne (bad) cmp dec (bad) arpl cmp ficom lock lds ja push and or and (bad) pushf inc xor (bad) (bad) (bad) decl inc (bad) out jl adc addr16 lock push (bad) push adc jne dec and pop sbb daa dec mov cwtl scas mov outsb (bad) (bad) (bad) mov adc adc xor in xorl jno outsl add (bad) fcomip in (bad) (bad) fsts mov pop into mov in bound (bad) (bad) (bad) jns pop jmp jp andl mov lods push jp pop add cmpl (bad) adc lock fnop (bad) mov jne xchg mov push mov sbb movsb (bad) (bad) (bad) (bad) mov and jp push dec outsl mov lds mov stos mov imul fnstsw lahf lret xor mov cmpsl ljmp cmp xchg lcall call dec pop lds mov (bad) (bad) in jo lods int3 jp test stos sub mov in jb out clc sbb imul (bad) incl xor jecxz pop mov in xchg jl mov xchg arpl sbb dec (bad) (bad) incl clc ficom cmp in jns inc mov cmp loop (bad) mov call pop fidivl (bad) pop stc add xchg inc pop dec xor stos jbe imull cmpsb mov cmp jmp shlb scas push adc xor jle es (bad) (bad) lcall loope je lods gs xlat mov push loopne stos shrl shl stos pop fsub push inc call add std outsl scas ret loop xchg outsb pop movsl sbb or (bad) pushl pop push clc shl arpl mov addr16 cltd outsb mov mov (bad) pushl fildl mov fcmovbe out test imul mov push pop test das test mov mov lods ja fstpl (bad) movsb inc xchg std ljmp movb xchg imul dec lretw add xchg push sbb dec into (bad) icebp mov push and (bad) mov push inc xchg imul in in jo imul pop and (bad) pushl pop jmp scas sub lret inc pop push adc mov fwait xchg mov (bad) jmp test jo jns lret inc cmpsl lcall pop icebp mov xchg and fwait ror daa pop mov icebp (bad) in (bad) imul mov jbe xchg andb loope add or push push roll jbe push pop ss push inc mov (bad) fild cli cltd je jge mov cmp popa inc movsl js push and (bad) jg ljmp push pop mov ja stos js mov stos push and sbb lods in mov pop and ror push out orl js lea rcrl ja xor out jo inc test clc (bad) (bad) jmp scas push cs xchg pop (bad) mov loope mov mov in xchg repz lock cmpsb or dec test cwtl adc pop test or or test (bad) incl dec mov pusha or or dec inc sub add or pop sbb mov or mov mov push and faddl sbb bound repnz hlt lret xor icebp outsl es lds test inc pop cs (bad) incl jge lcall pop leave push mov push xchg xor sbb cld sbb jbe popa push mov push and dec loope add or add mov add jo dec and stos ss clc (bad) sbb fyl2x (bad) in pop dec (bad) sahf push test fisttpl adc lods imul xor imul lcall push in xor gs xor aaa pop andb adc lcall xchg mov inc (bad) imul adc scas pop stos jge cmp dec sbb lds test (bad) les mov cmp mov sbb jmp push hlt cmpsl adc cld in mov pop je ss lods cmp (bad) (bad) (bad) ljmp insl insb mov sub enter fwait xchg decb insl xor pop sub mov ljmp (bad) dec xor push hlt mov leave lods jnp nop fiadd popf or (bad) push in ja mov mov loope mov adc movsl pop jge mov mov mov test adc (bad) inc inc inc insl in pop out sahf stos mov sub imulb push popf (bad) (bad) (bad) push movsl in lcall lods lret inc mov in clc outsb jb popa sub mov cli pushf cmp (bad) mov xchg sub or xlat fstpt loopne cs fstl dec push popf arpl or lret aaa xor icebp lahf or outsl cli sbb fist sub sub inc mov lds decl pop ljmp mov sub dec (bad) fwait popf cwtl fcomip (bad) (bad) jg push add push scas lods sbbl xlat add rcl lods clc push adc pop cmc incl (bad) adc xchg jle les lret inc mov (bad) jmp dec mov xchg sbb jbe lods mov repnz test fwait mov (bad) (bad) (bad) lahf xchg fs mov dec shll in out aaa cmp in pusha enter (bad) (bad) lcall push fwait (bad) mov mov push sbbl scas pushf lcall mov pop clc jmp sub inc js pushf stos (bad) test mov (bad) mov dec inc dec or leave idivl pop jmp (bad) call scas outsb inc inc sub mov (bad) enter ja,pt rcl or adc (bad) (bad) mov arpl loopne data16 xchg push fimull push sbb dec arpl add (bad) mov fcomps in jne incl call subl das (bad) mov ja test mov lcall fisub jl xor outsl mov mov ljmp loope (bad) fcmovnu ljmp xor jl test inc fcos mov lds mov jns push stos stos inc pop loopne inc lods push xor hlt fwait je cmpsb out aad push add mov lock (bad) jmp mov ljmp inc rol jb fisub (bad) fbstp jne dec mov push cmp xorb jnp mov les (bad) decl sbb push xor fidivl add mov (bad) cmp mov cltd outsl jmp xchg pop stos lcall inc hlt je dec imul cmp jnp dec and outsl add push mov stos lods push sbb (bad) pushl pop add ficomp dec mov scas in jmp push push cltd sti (bad) (bad) (bad) (bad) out lods jecxz aas sbb dec std (bad) aaa pusha xor sub in push and popf sbb (bad) (bad) jg mov (bad) jno add xchg clc mov lahf movsl or mov dec rcl jnp test js xchg or fstps jnp (bad) (bad) cmp (bad) xor mov cmp mov pop in pop fisubl jp push and adc out pop repz pop dec mov in xchg repnz dec (bad) cli stos cs out or dec inc fstl clc scas clc push jo push mov sub js negl and fdivr aaa pop nop adc cmp adc loopne pop xor (bad) pushl sub jbe jb out (bad) fwait mov insl add scas sub fcmovnu and pop cmp fdivl jae movsl adc (bad) mov (bad) repz pop (bad) lcall sbb arpl push stos cmpsb stos jne dec inc inc pop icebp dec rcrb (bad) (bad) call negl push in cmp push sub mov insl or rcll cld ljmp movsl push mov loop cli loopne fwait pop sbb test (bad) lcall cs call push adc dec jno jbe scas dec jb pop into and (bad) mov shrl lods pop (bad) push rcr scas stos dec imul leave lods jns jno (bad) cmpsb scas mov add xchg (bad) lods insl xor push fist jp ror rcll mov mov stos ljmp xchg xor adc jb mov push aaa fucomp ss (bad) ljmp stos (bad) pop sti xor scas mov mov scas pushl pop movsl sub cmpsb push mov xchg (bad) ljmp mov rcl inc mov test pop (bad) jne pop lods shr inc (bad) mov xlat mov stos mov push jbe pusha imul or mov xchg push (bad) pop push adc and das cmpsl mov or (bad) call xchg arpl ret lret loop mov cmp loopne decl push or mov aaa sub jb mov mov clc push sbb mov aad mov mov scas cli adc decb inc mov movsl mov hlt mov or (bad) jg mov scas fsub into push adcl pop out int pop (bad) (bad) (bad) call inc jnp jne jae ret jns mov inc sub xchg pop mov mov or mov in fidivr add int push xchg mov inc aas cmp call aad lcall icebp (bad) (bad) ljmp jbe sub fstpt and test daa sub inc xchg mov out test call or loope sbb sbb js dec in sbb (bad) (bad) fistp jecxz mov push xor mov jmp dec push scas sbb cmp bound jecxz cmp xor in cmpsb lcall dec xor pop xor push or (bad) (bad) (bad) decl fnstenv les in stos push mov popf jmp and sbb stos outsb dec test (bad) decl cmpsb push popf push jl add int add fisubrl mov inc cmpsb lret test mov jbe call std loopne and (bad) cwtl fcoms pop out jp out push fisubr mov mov jecxz (bad) jmp cmc mov pop sub clc (bad) dec mov xchg dec sub dec push push cli lcall movsl lock or dec lods enter mov (bad) jmp adc or add dec sub xchg push mov inc cli cs incl subps (bad) (bad) stos pop (bad) jns int3 xchg adc and jbe or add addb (bad) mov dec scas stc add push ljmp cmc fisttp xchg sub xchg faddl lds les inc adc inc das cli (bad) dec lds or add je xchg mov cmp cwtl sarl (bad) (bad) (bad) call xor les int dec ficompl sub and aaa pop (bad) not mov inc push enter clc lcall dec adc nop test inc cmpsl loop loop lcall in mov xor add mov (bad) (bad) (bad) ljmp js dec xlat cmp fistpl push bound cmp lret lea (bad) decl inc addr16 mov mov push mov (bad) (bad) (bad) incl lods inc push or stos pop push inc mov push mov (bad) xchg out fadds and push lcall mov fldt jne (bad) (bad) (bad) lcall test fcoml dec push xchg push mov push orl jmp push std cwtl cmpb dec mov jg icebp mov inc in sub test cmp mov (bad) std and imul push mov lock test jo jnp outsl (bad) (bad) pushl in insl xor enter dec (bad) mov aaa jge shlb out clc (bad) pushl fnstsw mov xchg fimul lods push mov and ficom xor push (bad) popf popf mov leave mov nop push test jge gs shrl or pop (bad) (bad) call insl fwait adc cmpsl out enter rorb (bad) (bad) imul push push cmp sbb push sub (bad) (bad) (bad) decl je mov jo daa dec and lods arpl dec int3 cs hlt bnd hlt mov mov decl stos int add bound lods ja lods mov pop xchg clc mov sbb mov xchg fisttpl fnstenv pusha push pushf les in mov int (bad) ljmp aas lds sahf jle add pop imul es xchg lcall lea adc sub mov ljmp fst bound jl jno lahf push insl mov and xorb push and jg mov repnz faddl (bad) mov jo lcall daa ret mov push ret clc sbb test test (bad) (bad) (bad) lcall mov sbb imul push push xchg gs bound out rcrb cli and stos (bad) (bad) (bad) incl sti push into mov xor sub call sahf sbb and mov sar (bad) (bad) decl gs shrl mov mov jns out pop inc lods or pop jg hlt mov sahf jl xchg (bad) outsl inc jne (bad) (bad) (bad) clc out imul pushf sbb gs dec sub ss sahf call mov insb in push mov int add (bad) call xchg lcall in mov rcrl jno fbld (bad) (bad) lcall int test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt (bad) mov cld (bad) jae sbb xchg push mov loop pop repnz cmp in xchg stos or (bad) (bad) (bad) inc icebp sbb aas xchg in push lods push data16 mov sarl fcompl jle (bad) (bad) pushl lea mov fwait sub test insb or (bad) (bad) (bad) (bad) mov mov jp xchg ds mov leave cmpsb lea adc sar xchg xor or (bad) push aas cwtl cli pushl pop repz xor add jg iret rol pop out aam lcall jecxz mov lcall cld add std sub imul cld daa ljmp ds xchg cmpb adc mov dec adc js out sub test inc inc pop hlt sbb push je xchg add shll cmp push outsl (bad) jg sub jge jg aas dec add pushf sub jb sub dec mov popf (bad) (bad) (bad) call outsl mov cmpsl cli jge cld call sub in ss mov mov pop call add and jl scas test cld (bad) rorl mov movhps add decl nop mov fcmovb push add sub sbb mov (bad) lcall imul mov push ljmp xor pop cmp adc and subb xchg pop lods mov mov cmp outsl lea sbb jg mov mov ret dec lret jg out xchg cs (bad) (bad) call xor fucomip xchg mov cmp push leave popf shrb push lahf jnp jmp pushf jg test lods dec scas mov mov cmp cld push (bad) (bad) (bad) pushl push aas xor xlat stc dec pop movsl jmp pop add mov jns cltd dec cld mov (bad) (bad) (bad) call mov leave and in repnz insl xor enter pop in mov (bad) into lret push rcr out and lret (bad) (bad) cmp or pop icebp pop enter jno jbe test dec and sti daa jmp pop insl (bad) ljmp clc jnp (bad) and ja fsubrs stc insl lret jge shrb enter mov push out into xchg imul cmp mov cwtl aad (bad) (bad) (bad) (bad) jge cs pop lret xchg arpl gs and mov push fldl inc cmp (bad) lcall cmpsl pushf insl xor pop push (bad) shrl push cs pop call (bad) (bad) (bad) dec dec inc (bad) jmp adc iret mov daa adc fnstsw icebp cmpsb dec dec fdivs mov mov data16 jmp aaa or nop mov jnp fcomip sub mov lock (bad) sub xor fstpt dec pop dec xor outsl fisubrl div mov insb xor xadd dec push pmuludq (bad) jmp cltd lahf fildl jle fisubl lods mov lahf into (bad) roll (bad) mov aaa movsb ss mov dec dec inc out push xor bound scas mov ret inc mov loop xor ds cmp mov test das jb push sbb or (bad) xor (bad) loope jp repz (bad) repnz push out das lods shr xchg pop xchg test fcompl test (bad) mov cwtl clc mov push push stc push mov (bad) (bad) (bad) jmp out xchg addr16 enter inc dec cmp imul dec push clc sbb mov (bad) dec stos jecxz xchg jae and mov arpl insb mov push idiv (bad) (bad) ljmp rcrw inc std adc xchg (bad) in scas mov mov jg fstps popf jno mov dec gs sti pop inc call sti pop outsl cli mov inc pop in enter push ljmp decl fcmovnbe adc sarl lret (bad) pushl or inc js call gs xchg xchg xchg xchg jp xor je mov push jnp fwait (bad) pop lock fstl cli cwtl push pop ret sbb jns dec fdivr scas clc (bad) jmp enter aas push shll stos popa xchg mov stos les jecxz loopne jnp jp movsl xor push jge in lods test fild mov pop push pop loope ljmp das sysenter (bad) stos mov (bad) (bad) call movsb add je xchg pop jle mov push movsb fdiv shrl ret or loop (bad) jmp imul sbb clc imul (bad) mov repz stos sbb (bad) mov pop fstps mov mov popf cli js call mov push dec in std decb inc xor pop jg sar mov in sti xor sar and out insb lea push (bad) repz push mov jno es pop add stc push xor mov ja shrb enter (bad) clc icebp aad (bad) mov xchg and in out fs mov push fs (bad) jg mov push mov jp xor lds inc mov push iret arpl out sbbl pop (bad) (bad) (bad) jmp test mov flds pop jg dec fistpl jg mov mov (bad) pushl xchg (bad) dec fxtract scas je ret cs je adc (bad) (bad) lcall aad fdivrl sbb dec add iret sbb mov insl pop test pushl enter into fs cmp das addr16 mov inc xchg mov mov mov xchg loop cmp dec (bad) fsubrs int fimul mov mov stos dec mov cmp mov (bad) fistl cmp stos sti mov dec addr16 (bad) mov dec (bad) (bad) (bad) call scas add outsl pushf pop cmp xchg mov push test pop cmc (bad) jb (bad) fcomip stos rclb ret inc test ret arpl (bad) rcll into (bad) (bad) (bad) incl xchg insb das add sub cmp cmp sbb push addr16 sub sub decl lds xor int3 rolb mov push sub adc mov jmp aas fnop lds sarl aad mov xlat jnp pop cmp and (bad) (bad) call pop pushf in (bad) mov ljmp mov xor repnz out std (bad) (bad) (bad) in jne mov faddl aaa mov popf jmp test add out jl hlt mov dec mov clc adc (bad) lock cwtl mov xor cmp out div (bad) es or and stos sbb sub pop mov arpl mov xor sar incl dec jmp (bad) icebp jecxz mov int3 jg push (bad) (bad) jg sbb push (bad) mov sbb inc mov mov sub mov in (bad) (bad) (bad) decl xchg popf push mov mov je jbe outsl les push fs push cmc xor mov pop fcmovne push pusha std jne incl cmp addl bound iret pop push mov push jle mov (bad) incl lods push bound jno or xchg fwait add push jbe mov data16 push sub cmp mov stos out loope inc jl int3 cmp das sar inc arpl lds arpl (bad) fmull mov (bad) (bad) inc sahf shll xor push rcrl dec les mov pop out stos lret mov popf mov (bad) cld mov mov cmp xchg fbstp add repz icebp test pop dec sbb dec mov inc bound call jg lock bswap insl and fldcw xor int3 (bad) (bad) (bad) inc jae jne jae lock stos flds mov rcrl dec jg (bad) jmp ret push pop adc ljmp movsb std (bad) sti xchg dec fbstp dec ret arpl mov sarb push mov repz jle jmp testl pop xchg je js aad xor mov (bad) pushl sub push mov push jmp fisttpll mov pop inc (bad) mov jg jmp cltd loope sbb into mov mov push fstpl xor (bad) ljmp ss push lds cmp xor xor jmp jle (bad) (bad) fisttp and dec or ficomp arpl pop add cmc mov adc adc decl add movsb push and mov mov cmp decl cmp gs popa (bad) scas sbb xchg (bad) incl mov jne cltd (bad) jno stos mov push dec mov add loope hlt test mov jne pop adc inc jge and add addl push xchg outsl dec jns fild dec and add or daa adc aaa adcl lds add (bad) (bad) aas in or and pop ljmp lret adc int3 lods stos es mov (bad) lcall xchg and push or imulb stos cbtw jp jno cmp lock mov sub rclb push mov mov pop mov dec push mov push lret iret outsb mov clc (bad) (bad) jmp jae int jo (bad) out hlt or scas cli cmpsb stos nop aam sbbl (bad) incl divb mov xchg push cmpsb push hlt seta (bad) (bad) ljmp out and dec inc (bad) fcmovu outsb rol int3 xor fs out jl mov lock pushf test lds cwtl sub sti addr16 (bad) (bad) ljmp inc sub xor cmp fldl sbb mov dec int stos jno idivb adc add push push sbb das cmp lea aad divl (bad) (bad) (bad) (bad) mov ljmp push pop add sbb ss mov pop idiv stos (bad) jmp dec add int fwait std rcrl out cld fisttp sub add out pop bound adc pushf sbb adc dec subl jnp das jp mov pop pop sub or adc rcll jmp hlt sbb imul cmp sub loop cmp insl pop (bad) (bad) (bad) call daa xor xor xor mov jno fwait lret mov ficomp (bad) (bad) (bad) lcall push shl insl dec js dec jne xchg mov aaa int hlt mov (bad) cmc aad jbe mov (bad) (bad) (bad) inc test push pop enter sbb lcall (bad) mov mov mov stos out (bad) (bad) (bad) jmp push sub imul je sbb in aad adc xchg fcomip mov push lods jno in cmp addr16 mov fcompl sahf popl (bad) (bad) (bad) push fidivl xchg (bad) mov popa mov sarb mov pop push jbe in (bad) (bad) call je xchg stc mov scas insb or dec dec hlt fidivr mov decb into cwtl mov test fiadd push adc out es rolb mov lret adc es adc push fidivl cmp out mov (bad) (bad) (bad) (bad) cli gs leavew inc lret jmp loop xchg add inc xchg push fcmovbe inc arpl or lock or lods imul and int3 mov and jmp xlat mov (bad) sbb aas or cmp mov mov and hlt outsb cmp lret scas dec dec dec stos xchg scas fwait popf jnp (bad) (bad) (bad) jle iret (bad) fisttpl lahf cwtl fimull dec fistl xchg int aas adc mov (bad) (bad) (bad) dec scas mov mov pop (bad) sbbb jnp add lret dec out jb (bad) (bad) (bad) jmp push into fst cltd jae lods sub jb es push push adc (bad) lcall cmp gs mov xchg push mov mov cmpsb dec lock (bad) (bad) call cs mov into rorl sbb or sbb lcall mov les adc sbb xchg mov cltd (bad) (bad) in lock or ret fidivrl xor cmp mov (bad) (bad) lcall bswap prefetch (bad) jns mov rcll jg xchg test sar cmpsb (bad) push repnz xchg mov mov pop into (bad) outsl ljmp (bad) scas clc jmp xor xchg cmp mov lcall push cmp (bad) decl clc popa jecxz hlt pop shlb insb cmpsl daa xor fwait clc ljmp xchg sub decb mov (bad) (bad) (bad) std adc mov rcrl mov push shr (bad) mov (bad) ljmp insl imul sub and ret or lock cwtl xchg les sub cmpsl in xchg sub pop fwait lcall stos pop fidivrl pop scas xor call incl das inc sbb aas push std cmp xchg mov call push inc gs sti inc (bad) cmp ss push fcom (bad) (bad) jg mov mull retw xchg adc push out dec decl in repz jne imul das adc (bad) (bad) (bad) pushl and pop cli faddl test push mov icebp lock pop push pop fsubrs cmp push jg jge xchg pop imulb mov movsb mov icebp (bad) (bad) (bad) pop (bad) pop jae shrl ja mov jmp jge popf add or lret outsb imul (bad) decl and (bad) int loop scas jge mov aaa int3 xchg (bad) adc int3 inc ret (bad) (bad) (bad) incl push mov andl push lds (bad) (bad) lcall ret jp xchg cmp shll fcoms lahf or pushf fwait dec (bad) (bad) (bad) lcall jle loop mov call or mov lret mov jg (bad) loop cltd pop lea pop cs in or (bad) jg insb ret lea xchg or push xchg dec xchg lods fldt add pop xchg xor ljmp movsb mov int out pop jno sub mov clc or jbe ret (bad) dec mov iret insb jg pushl adc xchg not ds inc movsl jg dec push (bad) pop stos cld sub (bad) (bad) (bad) jmp and mov add (bad) (bad) inc (bad) mov lock gs dec insl jmp cld movsb aaa jnp cwtl pop (bad) push or hlt pop xchg jnp popa std xchg and (bad) pushl adc in adc out mov scas xor rorb outsb pop incl cld pushl inc adc adcb mov bound mov sub jnp cltd outsl ficomp negl (bad) cmp mov jecxz push dec (bad) mov insl ds pcmpgtw (bad) (bad) jg pop loope sub push repz outsb add out push outsb pop (bad) jae cld cmp pop pusha mov sub pop cli xchg std lahf push mov out mov xor jns scas mov sbb stos je add (bad) (bad) incl push imul sbb dec pop fdivs int3 das pop scas mov scas push scas fsqrt (bad) (bad) js cld sarl xchg push repnz stos ja cmpsb cwtl pop test inc lods push cli call push sbb sbb ficoml xor (bad) (bad) out push in (bad) dec sahf dec lock (bad) stos push jl fwait sbb push pop mov int (bad) cmp test cld leave in iret icebp insl sub sub cmpsl lods sbb push inc aad dec sbb mov jge jb outsl xor ss mov loopne mov (bad) (bad) out jne insl pop xor pop imul cwtl inc stos mov ljmp dec cmc imul out xlat sbb fidiv sbb pop (bad) mov fcmovbe cmp (bad) (bad) stc loopne (bad) jge dec jno lods xchg dec pop push shll cli mov push add inc push pop or sub xchg rorb loope data16 (bad) call call ljmp insl test jle lea mov dec inc xor pop scas (bad) mov hlt mov in jmp (bad) xor pop sub lcall aas dec iret push js pop lea push (bad) dec mov enter jae imul fucomip sbb inc stos (bad) (bad) ljmp pop push cs jle repnz rcl jnp jno jp dec and das stc fcoms (bad) (bad) (bad) decl das mov pop cltd lret addr16 imul mov in pop add lahf xchg jb aas loop add lea scas mov mov xchg cmp sbb push xchg pop sub xchg xor hlt in push inc ret mov mov lcall adc cmc icebp cmp mov scas push jl fstps jae loope lock inc xchg cwtl test js arpl lods mov sub sub (bad) (bad) call movsb jae xor idivb mov pop enter xor loop push sti (bad) (bad) (bad) (bad) aas or mov test les lahf xor imul shr jp cmp in mov imull sti sarl sub push movsl adc (bad) (bad) (bad) ljmp push jae in out cmpl popf push xchg sahf mov (bad) mov pop jle sub (bad) (bad) jg stos push or mov js sbb cmp imul out int cmp pushf lcall (bad) lcall (bad) dec fcom mov sbb stc dec mov and pop xchg inc cmp jmp cmp ljmp xchg pop sbb xor sbb nop lods or adc mov lods mov out gs in (bad) (bad) jmp ds inc adcl loop outsl xor mov mov out sub sbb lret lock push repz mov pop movl test imul pop aaa cmc lcall jl cmp outsb (bad) sarl (bad) jg fidivr sbb out aaa daa and int3 jnp cmp dec icebp (bad) leave mov mov (bad) (bad) (bad) push je jnp pushf pushf cs insb mov mov mov push push xchg scas mov sbb out clc (bad) (bad) cld arpl push stos xchg push and aad xor xlat (bad) add push cmpsb dec push loopne call add nop cwtl dec movsl fisub mov (bad) in mov pop lock ja pop pop mov nop adc ret ja call sbb rcrl je test aad loopne push or dec xor (bad) decl in jg stos push adc sub in xchg jle push lods test and add rclb mov adc or std outsl mov inc (bad) dec push xchg addb inc adc sbb test xor xchg (bad) dec adc add scas push sar incl xchg xor and fsubrs cltd lods mov cmp mov pop lret sub mov push jle cmpsb out (bad) call stos mov jns mov mov sub dec loopne cs xor int (bad) jg icebp data16 xchg inc stos xchg scas dec or jb insl pop movsb jecxz mov (bad) jmp cmp pop fstl ss sbb shld (bad) jg jbe (bad) push mov xchg shrl mov popf pop cwtl push add pushl jbe inc ds jmp cmpsb cmp outsb lahf outsl aas sub test lahf cmp inc aad xor or dec sbb ret adc fisttpl add (bad) fcomip xor xchg xor lds and mov jb inc outsb mov mov pop add sbb xchg lahf ficoml cli (bad) lcall xchg and xor loop stos mov sbb xor call jmp in callw in adc (bad) enter cs xor call nop push stos jns ljmp mov into push je dec adc fdiv pop into xor adc sub pop xchg pop sbb dec test dec dec shl xchg sbb call sbb mov int3 pop adc push cmp add jmp in icebp (bad) es pop frstor mov mov aas cmp (bad) mov rcll cli pop push aaa pop sub gs lcall shrb mov lods fdiv sarl into into mov imul shrl hlt pop pop mov sub pop das mov mov popa add jbe mull and cmp jmp jp nop fdivr mov sbb fidiv fadds push pop push jo push aas (bad) (bad) (bad) pushl mov cmpsb cli dec adc lret cs pushf xchg mov fstpl leave (bad) mov (bad) popf push jmp (bad) (bad) (bad) (bad) out sbb (bad) mull insb (bad) fdivs out int3 dec daa aaa jno and (bad) jmp mov outsb push cld (bad) sahf or jno push rcl sub pop xchg mov (bad) (bad) push pop fs push cmpsb loopne fs xor fwait out mov ja,pt xchg rcl dec fisttp fdivs fistpl push inc push int pop fcmovb cwtl mov pushf push jne cmp pop stc xor pop bnd mov mov fcomps ret inc inc orl inc mov outsb dec addr16 add cld incl adc sbb mov mov (bad) cmp mov test add mov addr16 cmp sbb pop sub shll jae hlt cld mov aad (bad) jmp cld idivl insb pushf out cmpsl sahf adc mov mov popf ja xchg (bad) lcall xlat lahf jae sbb (bad) ljmp fdivrs fimul pop fs ror dec dec mov aam repz jmp hlt jmp fisubrl out lods (bad) jae in xchg cmc iret inc and dec (bad) xchg lods (bad) call mov movsb mov add std call push sub lods xlat inc xchg jo fimull scas or dec addr16 (bad) (bad) call push push lods xchg icebp sub imul jnp mov (bad) and pop std arpl xchg js jmp pusha pushf addr16 (bad) or das sbb cli lods pop cmc (bad) (bad) (bad) decl push cmp lahf lret cmpb mov jg xor dec or fwait push (bad) (bad) (bad) jmp xor iret xchg push shl insb cmp (bad) pop xlat lcall test int xlat or cmc pop das shrb dec js cltd stos sub fs pop fisttpl incl xor ljmp (bad) (bad) std push psubd jg clc clc test scas dec mov js enter xchg (bad) decl leave sub and call pop mov aaa cmp sar (bad) xor (bad) sub fadd stos in enter mov add pop dec inc and dec aam dec xlat (bad) lret in imul jae fcomip std ja mov in aam out (bad) cmpsl in movsb std (bad) (bad) decl push stos mov sti dec stos mov xchg ja (bad) clc pop jmp mov sub scas xor pop adc fisubrl xchg jbe hlt mov lock clc out cli fwait xor dec popf (bad) and in xchg pop addr16 in adc stos test xor mov scas insb (bad) (bad) ljmp les inc imul call pop rcrb leave orl cli pop jmp fadd jp jp add jg cmc mov and cltd mov adc sbb cli push (bad) aas and scas cmp cs adc repz fmuls insl call jae incl mov push cmp rcll lods ds add xlat and lcall insl xlat xor imul push cmpsl fnstcw call mov sbb jl stos fdivrp jmp or (bad) xchg or int imul mov iret fmul mov xor jg fst stc ljmp fwait scas daa adc outsb jmp dec push mov dec insb pop stos (bad) (bad) (bad) call pop xor fnstenv cmp rcrb sbb (bad) mov lock cld pop xchg (bad) fnstsw lcall pop clc push mov cmpps hlt push fisttpl repz out bound sahf push fs pop mov movd cli (bad) xbegin xor sbb (bad) (bad) fildl sbb inc xchg and inc sarl xor mov icebp mov nop cwtl adc shrb jnp add mov mov mov adc fdivrl leave pop cmp ljmp cs jo dec sub cmovbe mov dec lahf sbb pop call loope sub decl pushl push ror pop sub loopne and enter sub popa lret (bad) pop (bad) (bad) (bad) (bad) std push fdivrs and stc cs xor sarl mov cltd cmpsl lods popf bound mov scas js jmp or dec lret ret stos (bad) (bad) ljmp or ficom or frstor or xor (bad) (bad) pushl aaa scas std enter add iret lret arpl lea cmc mov outsl ret (bad) lcall pop ss jns xchg arpl inc pop adc ja (bad) incl cmp loope daa int3 repnz and mov jbe scas mov (bad) (bad) lcall in cmp loope addr16 pop sub mov and pop mov pop out (bad) (bad) mov dec lods jl daa inc imul adc jmp inc sbb (bad) (bad) (bad) lcall insb push inc std bound scas cmp jmp lds push add sahf in lock roll and lock fisttpl pop and (bad) leave mov out jg lahf call lea aam test rcll jb jo push pop mov stos mov int or loopne cmpsl xchg std test addr16 cmp add (bad) (bad) (bad) decl inc inc xchg inc cmp or lds sbb pop cld call lock shll stos and int out clc push (bad) mov (bad) (bad) call sbb fiadd dec testb adc sbb or sub (bad) (bad) (bad) decl stc daa mov in pusha cmp divb dec mov fcompl and xor popa stos aad cmc cmpsl sub ds pop int3 push stos and pop lcall (bad) pushl ret add (bad) ja jecxz sahf add mov cmp push adcl int3 inc sbb add rcrl data16 shlb ja (bad) lcall insb cwtl cmc inc insl cmp pop adc sti push mov mov jno pop jmp (bad) pushl iret push imul or and mov sub repnz aam jbe (bad) (bad) mov lret popf or xor call mov bound test mov (bad) (bad) (bad) lcall lcall mov icebp sbb mov gs xchg je lea xor inc pop ss jae div bound push inc out imul sub daa movsb (bad) cmp push or (bad) (bad) (bad) ljmp dec inc outsl out adc xor out in cld lock inc es pop ficompl (bad) (bad) pushf (bad) mov es jae mov outsl cmpsl inc std xor icebp (bad) (bad) cmp ret or arpl adc cmp xchg and sarl and (bad) ljmp rcrl and xor repz mov push inc leave outsb (bad) out xlat stos jb lds push into fwait mov push shll inc popl xor lds mov (bad) mov push addr16 pop cmp (bad) (bad) jg mov jmp sbb jp adc fsubs inc push ds (bad) (bad) jmp push mov sub lds push adc insb mov (bad) (bad) call mov pop and pop test xchg je fs jge sub lods out dec scas dec frstor dec aad sbb fistpl push jmp jno mov sub pushf lret ja (bad) lcall push mov test in mov es in in jno orl push (bad) (bad) decl xchg dec hlt mov adc ja ja inc add pop lods lcall cmp inc (bad) in and (bad) fild iret or adc add jns sbb (bad) jmp test add add add inc inc and fdiv jmp add push mov and inc add fimull clc addl add rolb (bad) jg hlt orb inc test jbe or imul cltd cwtl adc sbb adc scas cmc jne mov mov scas (bad) (bad) (bad) lcall shrl and (bad) leave adc inc pop cmpsl bound das outsl sbb cmpsb divb xchg dec inc xor mov and stos sbb mov cmpsb (bad) mov adc dec mov jmp adc cmp push pusha into inc in sbb cmp in add pop xor push (bad) jg cbtw into mov out ret fistp cmovge rcr repz in pop je push std mov lahf arpl and popf lahf inc fild repz (bad) (bad) pushl scas mov movsb cmc ret and lret jo movsl aad aad scas iret mov (bad) incl adc and add sub mov (bad) (bad) incl ds scas xchg sbb xor clc mov mov mov inc incl stos adc ds (bad) pop outsl inc inc pushf mov idivb (bad) (bad) ljmp fucomip clc lods pop cwtl iret imul push cmp rcrl pop pop fs (bad) call std repz std and loop jbe and fstpl (bad) mov ljmp imul jb push imul (bad) lcall mov sbb pusha dec (bad) addr16 inc lret sbb push in test adc cli cmp add nop imul jmp call mov fldl imul lods gs sbb data16 (bad) outsl mov or (bad) dec addl dec sbb jns (bad) (bad) dec jle sub sbb push or pop mov cmpsb (bad) (bad) jae or mov (bad) (bad) pushl iret shrb bswap or repnz ficomp pop ljmp mov add inc sti jle cld mov jg inc aas out push std ljmp outsl das adc mov xchg mov sar cwtl mov mov mov dec (bad) decl insl cmp out dec lret outsl pop imul stc inc sarl cld push out popa push negb cld imul cli xchg add jnp fnsave mov (bad) (bad) (bad) fdivs popf lea (bad) into fxch into dec repz insb mov mov (bad) xchg dec hlt jae loope loope ljmp (bad) mov (bad) (bad) mov mov rcll loopew std mov sbbl pop adc xchg cmpb mov imul dec xor or jge and incl (bad) pop push xchg rcr or (bad) call sub shlb xor scas je pop xchg popa mov movsl sahf mulb icebp jle cmp (bad) jle adc pop xchg enter icebp imul xchg pop jmp enter popf or xor aas inc (bad) pushl dec inc sub add xchg fwait xchg mov fwait xor xor cmp (bad) jle ret (bad) (bad) call mov jmp in shrl std inc popa std mov sub das cwtl (bad) (bad) in push mov repnz sub xchg or ficomp enter lcall mov in sbb lock lcall mov mov mov (bad) pushl ljmp pop pop mov divl mov hlt lcall or pop mov xor fs xchg xor (bad) jmp int (bad) sahf pop enter mov cld mov imul mov pop (bad) imul fiadd (bad) (bad) ljmp sub jl push push hlt (bad) mov imul lock inc ljmp jo (bad) xor cs lcall out push lock (bad) (bad) incl inc xor sarl imul mov cmp push mov sbb mov cmp inc fs std in (bad) (bad) pushl sbb cmpsb scas stos mov cmp push inc stos lods das bound sub xchg pop (bad) (bad) (bad) call (bad) mov test addl mov mov hlt aaa sub ja push (bad) (bad) (bad) (bad) cmp add xchg jecxz outsl mov aaa (bad) sub (bad) pop lcall test ror call xchg sub insb lods cmp in aam (bad) (bad) jmp jge pop stos dec jb test lds and fcompl (bad) (bad) mov inc push or add dec xlat mov ret (bad) (bad) (bad) jg pop js in out sbb pop mov pminub aad (bad) xor out (bad) (bad) aas or push push and mov mov pop in mov (bad) lcall decb bound pop int3 jae out outsb cmp mov mov incl loope cs lea pop jp cmp cmpsb out mov sar cwtl scas mov inc fisttp pop jp and dec xchg dec int3 (bad) push dec pushl data16 sbb scas jnp (bad) jne fsubrp push mov fsubr repnz mov nop movsl mov notb jmp jp rcrb jnp repnz shr mov fldt loop dec shlb mov js adc mov flds (bad) (bad) decl jno xchg in pop inc stos fistl bound mov sub roll xchg mov jb (bad) (bad) jg sub loop sbb bswap test mov and (bad) (bad) fisttp nop jmp xchg mov setge add (bad) (bad) (bad) fldl aaa lock imul idiv xor outsb pop adc lahf dec out faddp jb or mov incl mov cwtl and cwtl in add aad jecxz mov (bad) incl outsb or (bad) enter punpckhdq dec js inc sti xchg sub repnz (bad) call rcrl xchg aaa cs mov lds xor mov xchg ret mov dec pop out (bad) mov mov mov mov inc mov pop mov (bad) movsl lahf aaa xor and push cmp jb mov mov (bad) pop pushf dec enter jg jg stos ja addl push mov dec int aad js sbb data16 push iret (bad) (bad) jg jo xchg sti cs test push hlt lods push ss mov das stos es rorb pop dec call loopne ret dec mov pushf sbb pop cs (bad) mov jns outsb into and jg (bad) je cmpb mov pop and adc fcomip inc xchg xchg (bad) call fs scas inc data16 sub (bad) (bad) dec jbe jnp add push and push pop or adc sub (bad) (bad) pushl out stc xchg push cmp sub push (bad) inc stos (bad) sub (bad) (bad) ljmp loope lods stos push pop mov js pop adc push sahf fdiv repz dec dec rorb iret (bad) (bad) adc sub leave int3 ret mov pop in mov xor outsl mov lahf pushf (bad) aam iret in xchg arpl lret push push mov movsb sub out aad lret push mov jmp push pop in adc bswap imulb icebp pop mov ljmp mov jbe pop call xchg decl (bad) jg mov jge xchg aas push jbe or movsb inc les inc jne insl inc (bad) mov out mov mov (bad) insb push in stos mov (bad) hlt out inc fs dec inc in mov inc and xor int cmp dec ret insl add iret js,pn fincstp movsl in sbb scas movsb dec inc dec jg enter insb mov xchg cmp xchg dec (bad) call (bad) add adc push xor lret ds or sbb push out mov sub ret repnz fisubrl and leave (bad) (bad) (bad) incl sub ret xchg xchg subl push nop and ljmp lods in into loop (bad) jmp cli cs (bad) jge shrl fisttpl dec dec (bad) mov lds call out imul stos lea cmc jbe (bad) (bad) decl js dec cmp imul lods aaa ja dec mov ljmp dec xchg pop push in (bad) int3 dec dec dec ficoml inc pushf (bad) (bad) ljmp cmp inc mov sub ret xchg int push jbe in xacquire ss sub (bad) (bad) call fwait mov gs imull lcall sub cmp (bad) (bad) jae scas int mov (bad) pushl xchg fisubrl sar aas push sub jmp push xor mov push fcmovnbe outsl clc (bad) lcall jl add loope (bad) cmp lret cmp aam and xchg (bad) (bad) (bad) call scas aaa fistpll stos mov jmp leave jnp and xchg leave (bad) pushl xor push les jbe lods lea (bad) (bad) call sahf (bad) pop in in cmpsl jns mov insb sub or into (bad) int3 sub and or loop cmp jge push cmc jno int decl (bad) insl sbb jbe sub frstor xor in fisubr (bad) (bad) (bad) (bad) mov jb bound fs (bad) dec cmp pop fxch push pusha xor scas push fwait mov and in pop ja insl cmp in movsb (bad) pop stos (bad) decl adc std sahf cmp adc inc outsb sub (bad) and xor jl cs das stc and fistl imul mov (bad) xchg std (bad) (bad) lcall pop ret push dec sub sub mov sbb jno xchg xor scas (bad) (bad) pushl jl push pop xchg testl jp mov std mov es (bad) mov mov mov jmp imul out lahf mov ljmp fwait mov loopne lret adc mov aam test rcrl lods cmp iret rclb (bad) adc shl lods inc outsl fcoml (bad) incl int3 inc pop inc mov mov mov ficompl and outsl call inc dec movsb mov mov mov sar (bad) lcall fmull xchg mov xchg popa mov imul jb mov xor insb fbstp shll fdivr or xor jbe ss call js dec call mov fwait and adc insb jae dec jbe sar (bad) pushl lret fdivs sbb aad mov sub xor mov mov jb jae stos mov test scas nop mov xchg sar rorl ja add push push (bad) (bad) mov fnsave (bad) xlat ret pop clc (bad) xor (bad) xor bound (bad) (bad) (bad) ljmp stc pop mov sbb jmp xor mov fprem cmpsb dec pop dec ss (bad) (bad) (bad) (bad) jp imul push stos in int stos adc ja sbb jg out push jmpw xchg (bad) fild nop loop xor mov arpl popl (bad) (bad) pushl push lret xor push stos imul push sbb jecxz sbbl or movsb (bad) (bad) (bad) pushl outsl ficomp jg push mov (bad) mov add mov (bad) call call in inc pop ficoml add push in testl lcall add xor add mov daa xchg adc and je inc cmc dec add sahf push xor or add dec call add or inc jmp dec add (bad) (bad) jg mov imul mov test xor sar (bad) (bad) pop lahf inc movsb inc xlat fucompp adc sahf mov adc sub push or mov or (bad) out hlt nop pop fsubs xchg jno scas dec inc cwtl dec mov push (bad) jg scas or movsl mov jno pop jnp movsl mov push inc stos push jb out decl enter imul xchg js dec (bad) (bad) (bad) incl imul (bad) mov push adc lret (bad) es pop das outsb inc stos pop sahf mov (bad) mov js repz push cli (bad) aaa ljmp in xor xor pusha dec push jo and hlt das jl adc jmp movsb jb lcall mov (bad) idivl jb (bad) (bad) ljmp or or dec or hlt js jl and fsubrl ret repz call jmp lea test loope sti inc stc shr inc stc das xchg shrb xchg stos (bad) (bad) (bad) incl mov mov (bad) aaa push or sbb sbb js sarl call ljmp or or dec adc cltd int aad (bad) mov push scas inc fcmovne sub mov aam push out inc leave adc adc sbb xchg imul ljmp mov inc mov inc mov ret xchg xchg sub adc scas mov stc loope or out lret xchg loop push (bad) jle lret fcomip jmp lret xlat jae inc sub scas mov xchg out mov (bad) (bad) decl pop push sub stos jmp fdivrp cmovne (bad) fldt xor cmp pop mov pop repnz dec and cmp int (bad) jl dec mov stc mov lcall out xor into or rcr test mov ljmp sub std stos mov fs dec ljmp in cltd pop out pop pop jmp ljmp xor pop push scas lcall adcl pop cld mov (bad) or int3 pushf test movsl push incl movsb jecxz test insb sub out dec pop sbb (bad) call (bad) mov mov mov daa and sbb pop outsb rolb (bad) jmp sub inc mov inc outsb stos xchg dec mov sub sbb mov ljmp jg aad dec dec mov enter repnz dec std inc mov push std or sub lret popl cmc push ja lret push add out cli push (bad) jbe test mov imul outsb pop mov int3 lret (bad) fcoms (bad) (bad) (bad) fist and jnp jae mov mov fucomip dec cmp (bad) (bad) pushl cltd fwait nop mov shrb out mov push jle arpl and fwait pcmpeqb dec clc mov pop cmp dec pop mov xor pop test and push or int3 cmp int3 scas aam ror mov cld loopne incl in xchg (bad) cmp popa loopne leave std cmpsl mov (bad) ljmp and xor jno inc mov fisubl outsl push (bad) mov jnp sahf test (bad) jmp imul pop mov (bad) cltd dec ret stc fwait pushf (bad) (bad) (bad) out aaa into mov pop cmp aas cs aas sti jmp jge sbb loopne (bad) jmp mov fcoms les sahf stc push daa lds jns mov sarb aaa cld call lcall xorl int dec rcrb or sar incl test mov push test dec add ds std or call dec xor push and test jne mov sub mov xchg cmp or aam add mov cmp movsl data16 stos in neg lock xor out push mov std lcall dec movsb add push js jmp lcall enter (bad) call jg xchg (bad) jo mov or pusha mov (bad) out ret push test mov mov jg add cmp nop dec sti (bad) lcall jo stos fimul and lret jle xlat cwtl mov (bad) and jo (bad) (bad) (bad) jg dec mov scas cmp add scas xchg jge out fsts sub xchg mov sbb cmp (bad) decl insb cmp in adc das xorl fidivl rcr mov and (bad) lcall repnz ja push xchg test ds cmp and dec xchg arpl mov jno (bad) (bad) push mov mov imul mov int3 mov dec (bad) mov shrb popf imul sar (bad) inc push in mov (bad) jp stos outsl dec hlt ljmp jg loope mov and adc mov mov sti push sub nop jle or movsl lea push in ss cld (bad) lcall int3 mov xchg jns inc mov jle cmp (bad) cmp test pandn xchg push adc (bad) mov and lret cmp sub icebp sbb (bad) lcall pushf xchg xchg push and jb sbb sub cmp (bad) fild gs or imul cmpsb in (bad) (bad) mov xor xor jb lret push inc (bad) push pushf fs (bad) pushl std outsl lret mov push scas and fstpt inc xor stos mov (bad) (bad) (bad) jmp xor scas jp pop cmp inc (bad) cmc int3 (bad) lahf stos dec (bad) adc mov mov in fstps cmpsl insb and xchg cld xchg pop stos pop pop (bad) (bad) (bad) push cmpsl mov sbb mov gs lret stos jne test outsl ficomp es sub (bad) jg decl xchg adc pop (bad) sbb mov mov mov incl cmpsb hlt xchg aas leave xor sub add (bad) hlt lahf inc insl pop push or cli ljmp mov (bad) icebp js mov adc pop jp pop jl inc lods (bad) jg lock js cmpsl push sub loope aaa clc sub in (bad) inc jecxz incl dec mov sub arpl dec and rorb into xor mov inc loop cmc lods mov xor push int push pop lea fnstcw jmp pop and sti jp imul jp xor xchg (bad) jmp mov add ljmp data16 dec pop (bad) fincstp cmpb in (bad) aaa std call xchg jl mov lds bound inc arpl out (bad) mov (bad) (bad) pushl jmp daa adc stos insl mov and dec cmp add cld sub cmpsl jl (bad) (bad) mov (bad) sbb push leave mov daa sahf fisttpl jno and push popa pop or (bad) jmp lahf int push mov iret es gs mov dec adc xchg fidiv (bad) mov gs mov or adc imul adc mov jp ljmp push adc in jne push sub fwait cmp (bad) lcall push lods sub cmp mov (bad) (bad) jmp sar sub aam ret jl pusha ret cmp sub cmpsb pop mov imul sbb jmp repnz cmp add mov dec mov cmc fbld mov (bad) enter jg jp fist pop inc mov xchg mov in popa decl mov addl xor jp inc and jne test (bad) pushl or int mov aam int3 dec inc addl cwtl xlat (bad) (bad) (bad) (bad) ds jb,pt mov dec and cmpb push cli pop mov ja cld xor (bad) (bad) push jp mov add and pop mov or mov xor gs (bad) (bad) lcall cmp fs insl xchg dec push out movl lcall movsb adc mov pop cmp jl push and fmul and loopne (bad) jg jne xchg push rcrl testb test cmp bound lods cltd pop mov xor incl xchg mov or pop shrb dec xor lock cld pushl mov mov jp jbe outsl dec imul (bad) (bad) mov cs enter push (bad) pushf xchg xchg adcl adc push std iret test sbb pop jmp pop inc jmpw jmp pop js ret imul ja das clc decl pop fs imul jmp lock or js dec add imul pop frstor outsl mov insl jp lret sbb push mov sbb rorb outsl mov sub or (bad) (bad) call mov or jge int mov xchg mov xchg (bad) (bad) decl xor dec jo fdivp or push (bad) jnp pop aaa scas push cmp out into sub (bad) (bad) ljmp jl jb popa mov (bad) inc mov ror es lret int3 dec shlb (bad) jmp jmp and rcll cmp mov loopne mov sar lods push sbb pop xor clc xchg bound pushf scas sar (bad) (bad) cld in lods push sub sahf lret movsb in test lods add cmpsb ja add jnp cmpsb ljmp mov das push cmp mov sbb andb dec mov (bad) (bad) (bad) (bad) jge pop (bad) nop int xchg popf xchg jmp enter call jae iret ja cld mov sbb test (bad) hlt addb mov outsb pop adc bnd (bad) jg add push int3 lcall mov (bad) decl int pop xor push movsb push jge cld (bad) (bad) (bad) mov (bad) (bad) stos fadd ret rcrb mov xchg sbb je cmp ljmp mov mov inc sub hlt fsts mov cmp jbe mov xchg stos imul leave (bad) sbb (bad) mov movsl push stos sbb jle daa lods (bad) fdivr add in dec (bad) mov sbb mov bnd pop pusha cmpsb sub and dec sbb inc rcrb sbb mov xor sar (bad) jmp sti push add pop mov imul (bad) (bad) decl ret and test xchg cmp leave push cmp push clc (bad) ljmp je repnz mov cmc push mov jecxz xchg test (bad) inc sbb mov adc fsts sbb mov in insl (bad) decl inc inc dec cmp vcmpss adc loopne (bad) jg call and lret jno,pt and push leave and mov lds imul mov push push sbb adc gs xor insl iret cmp movsl sbb sar (bad) mov pop and test push int3 jle sub mov (bad) jg rcrl (bad) or pop xchg xor cwtl sub and pop adcb dec les ds (bad) (bad) (bad) add aam out pop je lahf and stos outsl inc movsb orb outsl cli and out imul add sub add rcrb jg adc add sub mov sub bound or pusha test bound (bad) (bad) (bad) incl test inc push test adc rclb (bad) add dec jns sbb (bad) (bad) jmp cmp lods js pusha push xchg movsl push ret int3 call mov mov es (bad) ja xlat push sub call pushl xchg sub cld ljmp add hlt jb adc (bad) pushl inc pusha mov pop jb jo hlt (bad) mov jle fs dec mov (bad) (bad) (bad) pushl mov popf jge outsb js xchg (bad) (bad) aad adc icebp pop pop pop fistl cmc (bad) inc aam xchg adc adc jg inc rcr lock push stc mov cltd scas outsl stos (bad) xor mov dec add orb add inc inc test mov nop pop sub fistp imul aas inc jl cmp (bad) (bad) call push nop cltd stc and cmp mov mov push jbe cmp loope (bad) (bad) call in sbb push jnp fistl push sub xlat daa (bad) into sub pop sarb xor xlat lahf pushf test das push popaw in test or (bad) mov sub hlt adc insl push adc in mov or in xchg sti loop push xchg adc (bad) mov popl dec mov push and (bad) (bad) (bad) (bad) incl xor (bad) lret xchg sub sub xchg popa xor in mov jmp popa mov jb adc jb adc movsl mov pop (bad) decl mov mov out jmp testb add (bad) (bad) (bad) lcall lea imull xor jmp mov adc repnz cmpsl jb aad imul pop xchg sbb rcrb clc lret bound out cwtl (bad) mov (bad) (bad) cmp (bad) into cmc fildll js clc dec js arpl jb adc cmp insb inc jae (bad) decl std pop ret fwait pusha icebp lea mov xchg out (bad) call bound aaa vpmaddwd add test (bad) (bad) (bad) (bad) call lret pop aad and loope push bound ja lods je into xchg push (bad) (bad) (bad) (bad) fimull (bad) imul fidivr push xor pop pop movsl mov jmp jle mov out mov xor fbld push fisub incb dec lods push (bad) mov into mov lahf lods xor or (bad) (bad) out popa jmp icebp jmp or jbe (bad) cmp lret and cltd js icebp (bad) (bad) incl ficomp out ret orl repz repnz lahf mov out test out mov pop call sti decl (bad) aas outsb jle (bad) stc inc cmp jne push and push hlt pop xchg (bad) (bad) (bad) (bad) cli imul aad fstps outsb lret fwait push data16 mov scas jmp (bad) jmp sub cli popa pop fidiv das clc call arpl inc movsl pop mov pushf push xlat and int3 sbb mov (bad) fnstenv push cmp dec sub pop xor sub mov xor and xor mov push sbb and ja sahf lds sbb cmpsl jmp push push dec outsl cld mov mov adc ljmp sahf jg sahf ja sub (bad) (bad) in cltd xchg sub ds xchg in jns pop mov xlat data16 lods decl lods push inc cli in in or pop cli jbe aas push fs (bad) (bad) (bad) ljmp add push mov add aaa data16 dec mov cmp hlt je,pt popa lret pop sbb (bad) lcall int3 arpl (bad) adc xchg push ret mov je xchg xchg jge rcrb mov mov (bad) (bad) call pop cmp jg mov jle sub mov mov mov (bad) gs sub mov pop lods int mov cmp cmpsl push int3 mov pusha dec push lahf addl fcmovu out xor (bad) (bad) ljmp sub mov inc stc and mov in fidivrl stos sbb xor aam and or (bad) (bad) (bad) jmp pop mov fcoml nop mov mov push mov sar mov dec mov stos push sbb inc fimul add xlat push sbb push insb pop xchg xor cltd test lods fyl2x push mov (bad) call (bad) xchg ret pop in hlt xor xchg mov js push ds lcall ljmp test sarl mov (bad) mov dec jl dec sub sahf in jo sbb pop rcll jb mov push inc (bad) jl aas rorb addr16 popf mov pop (bad) dec xlat inc in ljmp aas push in (bad) cmp sbb (bad) (bad) decl psubb in pop stos cltd ljmp pop aad inc mov cmp (bad) cmp outsb sbb ljmp push rcl cwtl rorl mov add lds inc dec (bad) mov jno inc dec jmp fimull xlat jp testl push sbb sub (bad) (bad) decl out fwait outsl fistp insb jp (bad) jne jp rcrb stos popa popf imul cmc jmp (bad) pushl clc cltd ja add and or subl aas aad out hlt clc incl js dec xchg dec lods adc mov movsl add dec lds xor outsl mov push (bad) mov push inc fsubl stos push mov addr16 mov (bad) call loopne adc dec movsl scas cmpsl xchg imul mov jecxz push dec mov popa inc pop scas jnp imul mov insl mov clc (bad) (bad) (bad) cmp sti push sub push divl xor mov jle dec in push sub (bad) insb in (bad) jmp add ljmp xor mov sub push test push out out jne test jb pop loopne jae (bad) (bad) mov js pusha dec into std mov js xchg jnp jmp pop hlt and sub jbe mov push mov mov stos jg cmp jmp decl ds imulb stos lods pop push dec lret push add das js out andl and mov scas dec enter mov leave pop xchg imul scas pop sysenter cmpsb dec (bad) (bad) dec sbb fs adcl sub scas imul jp cmc leave je adc mov (bad) incl imul or push rcrl mov mov nop inc rorl jge sar (bad) (bad) decl addr16 nop sbb push sub test (bad) enter jmp scas pop imul (bad) call mov push insb dec pop int3 dec iret inc xchg outsl (bad) and lcall je (bad) (bad) jmp test xchg adc and insl sbb sbb arpl scas incl int aaa xor (bad) ret cmpsb mov cs pop clc mov inc jbe (bad) iret inc into aaa std (bad) pushl and jp (bad) mov adc test pop mov (bad) out clc call pop dec lods frstor jae dec inc xor ja push push mov mov mov push mov jno (bad) ret add fadd lret mov aas xchg sub pop mov mov mov mov mov jl (bad) (bad) call mov in sar in rcrl or pop cs or mov ds cwtl ficompl insl imul mov cmp jge (bad) pop popa add (bad) jbe (bad) (bad) call hlt sahf enter or ficoml add push adc push dec fdiv jmp sub cs cmp (bad) (bad) jle mov sub xchg mov mov lock fnsave push and xlat popa (bad) (bad) (bad) pushl (bad) jne outsl cld fdivrl cmpsl push call fistpl cmp aas and (bad) pushl mov xor push mov fs inc push pop enter (bad) (bad) pushl in add dec xor das leave aaa and cltd jge int xchg in jle (bad) (bad) (bad) call mov sbb arpl aad stc jae pop xchg push mov adc cmp incl or sbb adc dec scas and jns imul mov push test mov add incl add mov repnz rolb pop cmp adc lret add add aam add inc lret and aaa dec add add cmp inc incl (bad) loopne mov add out popl sbb iret sub add dec outsb sbb arpl (bad) fbstp jae dec add xchg sbb inc xor mov jp lea add pop aad add jnp jle cmc dec push mov popf das pop or (bad) (bad) lcall sbb add xlat cli dec xchg cmpsb loop gs jge cmpsb jle (bad) negl cmp sarb call popa into push mov push and add in adc sahf jno and xlat jne out mov mov add push cs (bad) into mov jae xchg (bad) mov mov mov ds xorl call std inc cmp jno and mov lock cs decl pushf arpl (bad) xchg nop jg (bad) (bad) jle (bad) notl push enter nop xchg mov js stos xchg push lock (bad) pushl mov sarl dec xor ret xchg mov fstps into test adc fcomip lcall (bad) outsl push jmp aad in sbb imul lcall les adc sbb mov lcall int adc lods lods sub mov bound lods sub xchg jbe cmp sbb (bad) call repz inc xchg xchg mov mov inc xchg nop data16 movsb mov jbe cld push mov loop (bad) (bad) lcall xor (bad) adc and jnp mov out mov clc vxorps jge sub jae add xor rorl movsb sub push pushf mov (bad) (bad) lcall mov jge inc leave xorl in push add push adc in call scas aas jne jnp lcall hlt addl jg add adc push loope jno (bad) out sub cmp pop in test and mov leave test sar pushl mov adc rcll ds cwtl lods adc insl (bad) ljmp pop add xchg jmp push roll jb sbb js loop (bad) decl push adc dec dec into jl mov es inc (bad) (bad) je (bad) (bad) mov dec pop or xor push lock cmc sub ljmp loope lret mov inc pop popf xchg shr xchg ret mov mov scas in cmp (bad) decl push mov xor and mov daa cmpsl loopne mov (bad) jg mov push mov lock fs aas push and inc test and fmul dec push cs ret les fnsaves ljmp push lcall int xlat dec into jmp push out mov mov lcall (bad) xor mov mov enter add add mov sbb sub or pop sub sub sub aas sub fdivl imul iret and fisubr pop mov out add pop rcrb dec pop dec jl lcall or jmp add cltd outsb add (bad) call jb xchg mov fs push sub (bad) pop xchg push jg icebp lcall mov cmpsb jae sbb sahf xchg pop stos mov hlt std insl shrb or mov movsb lods or mov test jae cltd push jmp add hlt push mov aas xor sarw or mov mov push ficomp negb into mov jmp mov xchg stc and cltd repnz cmp (bad) incl lock lret pop mov pop jp das push jge dec sti sub call mov movsb sub xchg mov pushl push stos data16 jnp ret std push mov cmp xchg sahf pop (bad) jl clc pop cmp mov add lock push les cmp mov call pushf out repnz jecxz adc mov pop lcall add scas adc mov ja cmp sbb decl mov pop test loop (bad) (bad) ljmp les pop clc mov aad mov inc popf test (bad) imul inc dec pop ret das cmc adc nop mov sub push jle push imul call data16 push jne push std (bad) dec cmp jecxz inc rcrb rorl pop repz in popa jge incl ljmp insl jae imul xlat (bad) call mov ror sbb ljmp loope stos out mov sbb ss mov mov aad push jge or sbb xor sbb (bad) mov jle mov insb or dec push outsl cmp jmp in mov in es pop insl out xor ret gs sar fcomip jg iret add fistpll xchg insl leave inc enter jecxz adc cmp scas nop cwtl jg test mov in xor popa fcoml insb jmp lcall (bad) mov cmpsl and push insl in push ja pop mov add sti cmp sub clc lods loope out push mov mov (bad) (bad) dec nop lret sub push mov in fsubrs clc (bad) dec push fdivl ret in push rolb arpl stos lods mov call into jle mov std pop mov rolb imull dec mov scas popa pop cmc outsb (bad) push stc push call inc mov data16 imul (bad) call cwtl push xchg repnz clc cld test push cli dec addr16 cmc mov mov insl jno psllq out cli (bad) stc inc jle lds jp adc (bad) ja (bad) mov cmc es push outsl or mov cmp and fwait dec cmpsl pop adc pop mov xorl fnstsw mov sti pop inc lock fs mov cmp push or inc jmp div pushf sarl fmuls hlt pop std push mov mov mov outsb mov test cld das sub push mov popa push fbld add push jp notb int sub (bad) (bad) lcall std cmpsl pop movsl adc xchg mov xchg int inc stos pop mov jle xchg pop (bad) (bad) (bad) push sahf rorl mov mov (bad) cwtl out inc outsb sub call pop popa (bad) (bad) (bad) mov jb leave jne daa mov cltd daa sub inc mov (bad) decl pop mov mov gs int3 xor push or clc sbb adc imul jp jle mov sbb ljmp xchg cmpsl out mov lock dec hlt dec popa and mov or or xbegin sbb add jl lcall jmp (bad) lahf jnp fcoml or mov xchg lds lea xor add decl fmuls icebp cmp pop jmp mov movsl repz flds mov mov dec loop arpl out jmp mov cmp cli fldcw or (bad) (bad) (bad) jnp out lods (bad) lock sarl je orl jmp jmp lahf or lods mov lret or jp movsl xchg mov xchg cmpsb (bad) (bad) decl out stos inc in jnp imul adc lcall sbb popf fsubr movsb inc sti cmpsl pop pop ds test mov pop lahf mov (bad) (bad) (bad) pushl pop inc inc lock mov cmc jb fldt outsl pop je lods cmp enter (bad) ljmp adc jb jbe lahf stc mov outsl jg popf rolb dec sbb pop xlat flds icebp push push fwait add push ljmp aad loopne lea dec xchg enter jl lods (bad) mov daa icebp (bad) ljmp cwtl adc xor mov (bad) adc int xchg leave xor jp roll push xor lcall mov int push mov jg xchg add (bad) decl rolb dec pop popf jb or lea jg (bad) ljmp insb and test hlt loope pop add cmc xchg sarl mov mov sub sub clc adc sub or push (bad) call mov fldl xor mov arpl ljmp js and mov (bad) (bad) (bad) (bad) stc test xchg outsl out pop in push movsl (bad) xor adc ds hlt and lods dec (bad) pop (bad) (bad) (bad) (bad) sti imul scas leave int mov xchg mov repz rorb pop (bad) (bad) (bad) dec cmpsl or ljmp lret into push ficoml or pop stos mov (bad) (bad) (bad) sti (bad) js jmp jno ds movsl shrl add aad or mov (bad) jmp pop and push addr16 fiadd int3 mov rcrl out mov loope push or (bad) push add xchg or enter (bad) in outsb push nop dec fcompl and fsubs add push sub xchg in inc sub nop daa mov add mov push sub push add fs and js es jg les mov movb sub (bad) jmp sbb fs pop mov cs mov inc call ja fs cld movsb add xor xchg sub (bad) (bad) call mov inc cmpsb pop inc ret dec mov push or lock jb or or push jo jnp int add lcall int3 mov push (bad) int add out aad inc xor sub (bad) (bad) (bad) (bad) pushl push adc test fnstsw popf out fnstsw gs add add (bad) lcall and inc cmpsl mov fsts cld fmul out ss push cli (bad) (bad) jnp cmp pop outsb or mov mov dec dec inc xchg xchg fadds loope in jecxz xchg or mov (bad) pushl stos adc sub in push test in fidivl sub (bad) ds fisubrl mov mov outsl scas jmp jge and add mov mov lea in pusha jno mov cli lcall aam inc mov xor mov stos dec ud2 ficomp dec in iret je,pt mov sbb cmp shl sub mov (bad) adc repnz xchg insb fwait sar pop cld hlt inc (bad) mov push dec lds mov clc xchg test mov ret cli aad les inc mov mov xchg ds xchg in adc xchg imul in es mov cltd cmc fld (bad) mov cld into enter or and pop in int3 xchg xchg incl cmp pop xor repz add cmp xchg data16 test or sub pusha lods jg lods dec xchg lea inc or xor fsts sbb pop ljmp pop jmp daa cmp je lret xchg arpl pop fadds (bad) jg pop pop out mov cmp stos pop sbb scas mov stos push mov cli jle in dec xor ret xchg imul ljmp ret mov cld aaa paddq adc xchg bound cmpsl test xor hlt cmp xor inc sbb pop sbb sub (bad) (bad) pushl push adc data16 sbb aas mov in sbb outsb sar mov mov push js cwtl popf mov sbb jg (bad) lcall lea jp pop or out mov sbb movsl mov cli lcall xor into xchg xor (bad) lcall xchg push adc fidiv lret inc inc stos jge mov and (bad) mov test xchg cwtl cld (bad) (bad) (bad) (bad) (bad) xchg fistl push jb mov xlat iret sahf mov out and pushf js push fptan jno (bad) (bad) pushl insl aas stos (bad) aaa cmp mov int std int3 icebp pop (bad) xchg cs jmp mov push lret jns aaa xor dec jns inc dec (bad) lcall stos mov loope (bad) faddl ljmp mov xchg int3 hlt dec (bad) rolb jbe adcl (bad) dec aad jns (bad) incl cld cmp xchg ret sti out cli push bswap xor aad mov ljmp jge pop pop cli mov in sbb repnz cmp (bad) jmp inc movsb jae pop arpl fcmovbe movsb pop addr16 ficoml xor push inc sbb xor xor mov fdivrs setl (bad) (bad) (bad) pushl inc fldt aas dec jecxz lahf mov in lods movsl pop push and jae dec lock aas daa cmpsb and or lcall ret mov jnp sbb (bad) (bad) (bad) fbld fsub notb cld ret lock mov mov imul pop add inc (bad) (bad) ljmp mov test cwtl sbb test mov in jmp (bad) fildll lds inc inc movsl inc std sbb xor adc adc jge jae and lcall dec notl push and (bad) (bad) mov mov aam jl xchg jno jle dec push imul lahf addr16 fistpll das (bad) (bad) (bad) incl mov dec into ret enter stos cld push mov (bad) std push xchg lock jecxz scas sbb mov movsl sub lods lret mov sbb add mov or in pushf xchg cltd adc dec adc sub cmc into (bad) leave cli or mov (bad) mov pop and imul lret cmpsl rcrl mov cli pushf cmp cmp mov push push fadd or out rclb das bound mov push rcrb (bad) mov adc inc int jbe xchg pop (bad) (bad) (bad) ljmp lds shrl pop push cmp ss cs fdivp repz lret inc ret push or (bad) (bad) incl xor pop jb lea mov jne adc rcr jl (bad) (bad) decl mov dec inc push cmpl sbb fldenv lds or push outsb inc addr16 and hlt and adc call push roll xor lea push fdivr (bad) (bad) mov aas inc add cld mov iret and cmp imul adc adc vxorps mov out pop cmp popf mov pop js (bad) lcall cmp pop and xor iret imulb sahf adc ror (bad) (bad) (bad) jg jmp jmp sub ss in mov and in mov (bad) (bad) (bad) incl push and sub scas pop in jecxz sub ficomp lret sbb out cmp je int3 or mov mov mov adc scas arpl ss insb cld (bad) mov sbb inc out mov and es rclb cmp ljmp cmp data16 pop mov scas inc cmpsl jne pop lock mov (bad) (bad) (bad) lcall inc xchg lret jle call xor lods cmovl shlb loope lret dec (bad) incl mov xor inc jb in (bad) lcall std orl call inc pop pop jae inc xchg cwtl cli in pushf jg xchg sbb (bad) (bad) mov test push xchg mov movsl mulb mov jae jmp mov loopne mov push scas jle jmp inc jecxz inc mov sbb inc inc int3 mov repnz fdivrl (bad) jmp aas cmp xor mov lock pop sub lods mov (bad) (bad) call push fimul scas xchg cmp loope enter push fidiv xor test in lods fidivl (bad) cld repnz es insb in push cmp (bad) (bad) lcall jo xor adc xor push scas push cmp ret ret icebp sub ljmp add das mov push rcll (bad) (bad) inc mov es or mov les mov push (bad) (bad) (bad) lcall or adcb ret inc adc popf cltd add out divb aas mov hlt xorl popf test add mov hlt decl adc inc xor push lods add mov dec mov xchg push adc testb cwtl enter outsl aaa inc inc nop and mov xor incb stos jecxz adc mov fildll mov xchg mov (bad) out xchg ret call push fcmove or jl (bad) dec int3 (bad) mov (bad) lcall (bad) outsl mov mov xor push imul jae cli movsb jb (bad) fcomip sub mov (bad) scas imul pushf cmp stc and (bad) (bad) decl dec sub (bad) stc xchg or in cmpsl jg loope mov jno xor lods mov (bad) and lret xchg mov dec (bad) (bad) ljmp push imul into xlat cmp mov cmpb jg dec ret sbb ror xchg lret jb scas xchg mov popf (bad) cmp pop jno mov mov xchg jno sbb pop imulb (bad) dec cmpsl push nop and out mov ss inc jmp mov (bad) ljmp imul (bad) aam pop nop in stc sahf inc push out imul ljmp jbe (bad) (bad) pushl push pop xor cltd fwait cltd lea data16 (bad) lds mov jmp or xchg sub std adc lods imul aaa fcomip out clc push dec add inc dec dec pop mov out cmp or rorb daa (bad) (bad) mov sub xchg jns aam sub cs int cli jno mov mov jle jmp arpl imul (bad) decl mov test insb or cmp out fbstp (bad) (bad) (bad) (bad) out cli sub insb push cld jmp cmp insb in sub mov mov imul push incl mov mov cmp lea outsb rorb jecxz outsb fildll mov sbb imul dec mov lds xchg insl xchg xor add test aas cmp xor pop addr16 arpl jg ljmp pop mov dec inc decb jg add xchg sarb lahf cld and mov das in cmp add orb aaa pop in sub add subb sbb (bad) rcrb or pop add or xor mov repz push cmp std sub fs imul movsb movsb pop sbb xor mov (bad) mov (bad) loopne enter sahf inc pop movsl ss loop arpl ljmp lea pop scas ljmp out (bad) xchg push incl push nop dec xor loope mov xchg lock std aas inc sar fmuls add add xchg mov loope les enter (bad) aam lahf loope lea mov (bad) add incl flds movsb pushf repnz es fidiv cmp movsl cltd lcall mov out inc jnp inc std lcall sbb mov int3 ficoml call cld ljmp or imul clc mov jle popw mov (bad) push or mov lret mov in int3 xor negl mov push clc (bad) (bad) decl (bad) rcrb cmp jb les pusha ret fs repnz sub (bad) dec and addr16 mov pop fnstcw add faddl push std push pop pop in mov pminub pop push xchg test fwait xor push loopne (bad) (bad) incl in (bad) jne aad mov movsl aas clc add dec call insb add mov cli call movsl mov jge not jecxz divb (bad) (bad) mov cmp std (bad) lock sub or cwtl mov fnstcw push nop fs hlt fstps ss jae nop pop cmp mov (bad) (bad) ljmp inc test add dec xchg cltd test add sbb aaa jne or jnp out lcall pushl xchg mov mov push jns outsb sub dec inc fs lods jge repnz ljmp rcrl sbb imul addr16 loopne lods repnz sbb out ret dec incl push cmp call clc (bad) mov xor mov in imul data16 popf in mov ljmp ljmp dec xor inc iret mov out adc (bad) decl lret iret mov mull mov jl inc mov js (bad) mov std mov inc mov leave (bad) fcomps ret cltd (bad) (bad) (bad) jmp scas add pop mov inc je pop lret mov cmp in popf mov ds cmpsb mov iret arpl sub ljmp mov inc inc pop sub add mov call pop lock and adc push clc inc call scas cli and (bad) (bad) push loopne in and jb mov adc add in mov js (bad) (bad) pushl xchg push mov mov cmp not lahf (bad) pop xchg sahf mov xchg xchg mov loopne mov (bad) (bad) in nop jne in mov lods aaa clc and pop je jb popa std lods cmp cmp sbb jno js jg xchg dec jle lahf lret ret inc dec inc sti pop outsl lock jl xchg cmp jbe (bad) (bad) (bad) (bad) cli mov data16 mov ja sbb jns mov mov jmp loope lret sar decl mov lock es cmp clc mov and std decl xor mov jae dec jl,pn (bad) aad ljmp jae mov (bad) xchg pop mov jbe xor or in push push call cld jg sbb mov push and inc jle pop das notb fidivl testb (bad) dec xchg xchg outsl lods mov idiv adc hlt aas mov aas add subl sub in pop (bad) fistpll clc iret rorl lret test sti push test inc cmp repnz mov aad stc prefetch dec mov test movsb xchg mov jns iret xchg out call leave push enter jg sbb inc mov aas js dec gs aam nop cmpsl es mov out jmp lea inc loopne mov xor lock fcompl (bad) popa in xor pop jl pop fnsave pop push jle pop mov std (bad) mov xor pop pop out jmp mov xchg push mov (bad) (bad) inc mov aaa or lret (bad) inc pop xlat mov jp sbb ret insb adc or insl adc in push push lret pop pop jle sbb jmp pop push xchg xchg lahf andl mov (bad) aam ret incl push mov mov daa add jbe inc cld (bad) fnstsw lret roll pop test mov inc mov cwtl movsb int3 sub mov lods (bad) (bad) pushl loopne clc rorb mov fcmovu adc inc fstpt (bad) mov sbb (bad) (bad) lcall shrb (bad) cmp mov in cmp adc (bad) (bad) (bad) decl push pop test lods jnp lds mov mov cmc dec jmp (bad) (bad) jmp ret ret lret in xchg mov lea lea clc dec stc scas mov (bad) (bad) jmp test lret jle pop mov push nop ret dec inc mov dec iret xchg jg cmpsb loope std sbb xor and dec int push test (bad) rcrb push pop mov or mov (bad) imul scas (bad) jg sbb lret fnstsw mov rcll or mov xchg insb shrl adc jge cmp or (bad) jmp cmp ja (bad) (bad) xchg xlat mov in in stos push into and pop sbb pop ss les aaa cld cmp sti fdivrs push out mov mov inc insl call push ljmp cld sub and fnstenv push (bad) mov dec imul decl fcmovu cwtl stos cmpsb arpl test jne inc ss aam sub push mov scas (bad) (bad) call or and stos inc dec adc dec pop adc pop or xor imul daa in inc insb (bad) mov and push ret je out scas jg decl push insl test (bad) xchg dec fidivrl das push outsb cmp lcall xor jmp jo int xor popf xchg mov cmc mov pushl cmp mov sub (bad) ljmp xor in scas add jmp mov popf xchg ja fdivrp pop push decl sbb fstps xchg in sbb jne xchg xchg mov (bad) (bad) lcall scas popl psrlq je outsl cmp fs mov idivb mov mov xchg lods (bad) (bad) decl lcall imull mov test jmp out shrb jg jmp fs icebp jle add xchg fdivrs (bad) xor (bad) xchg loopne idiv sahf pop in or in mov mov in aad clc mov fiadd xor es sbb jbe int3 cmp (bad) (bad) decl xchg loopne test ja cld hlt movsl jae sbb cltd mov pop mov dec shr sar mov push (bad) jmp mov ljmp scas lock dec jl and popa dec jecxz jne aas add fidivr lods mov (bad) (bad) (bad) mov negb and pop das fs dec push xchg and cmp inc stos test push test fcomip (bad) (bad) jl jns cld mov cmp js xchg sub ret push xor aad (bad) (bad) (bad) call sub fadd ljmp xchg (bad) or cmp in sub call jmp pusha mov mov mov sahf dec cmpsb je fstpl cli dec (bad) jl mov dec pop (bad) jne jnp pop incl mov mov xchg loopne das pop or and inc cld pop loopne adc push fs jg inc adc cli aas lret pop add mov push ja push (bad) adcl clc jnp cmpsl push or add add add ljmp mov hlt xchg dec rcrb fcmovnb jb into push and mov movsl adc pop iret rorb (bad) es les mov js adc add insb jg mov mov push inc shlb test enter add inc (bad) movsb out test or mov inc popf jb cmc out or adc js test (bad) ljmp mov cltd cwtl mov outsb pop lea mov xchg mov sub scas cmp cld (bad) (bad) stc sbb mov sub daa cld (bad) out fidivl xor pop popa mov adc mov (bad) jb mov xor adc cmp xchg push sub jp movsb stos sbb jle (bad) (bad) (bad) ljmp lret jno in outsl pop ds mov jno gs in xchg push int test push (bad) out aad lock test adc lods loop subl call dec clc or notb cmp sar dec sbb decl in (bad) mov pushf hlt int3 ja jnp sbb (bad) loopne shld incl clc gs stc sbb mov (bad) (bad) call and ret jge mov popf adc fwait or fst add (bad) (bad) (bad) mov fnstenv pop jmp aaa sbb test inc imul or push cli call imul and push xchg adc pushf xchg jmp jg (bad) (bad) cmp dec cltd aad and std jle mov jbe inc cmc dec sbb lea mov lock outsl cli ja pop std push int out lods int3 mov adc std cmp and (bad) in (bad) shrl aas je push (bad) (bad) (bad) jmp hlt scas dec movsb insb sub sub xchg xchg (bad) xchg jl xchg mov sbb pop std (bad) (bad) dec dec push lock pushf cmc cltd (bad) fbstp or test (bad) fildll push push push test mov push in lock xchg sarl (bad) call in push dec into inc mov xor je cld mov cli push (bad) (bad) (bad) call or shrb push mov sub cmpsb mov (bad) mov clc jg lods push lods mov push faddl inc inc push push adc push mov rcr xchg ror and add mov or and pop ljmp cmpl mov call stos bound cwtl mov and call xchg inc mov push imul sbb mov xchg xchg dec ror push lods adc jne mov das sar out (bad) jb loop sti and sub sbb scas pop lods outsl push neg (bad) (bad) (bad) ljmp jne lcall push mov mov lods lds idivb dec pop jo leave lock fbld (bad) jb das mov pop movsl pop lahf xchg jne,pn push jg (bad) (bad) (bad) jmp jle ror xchg pop cmp inc in es bound and or xchg adc outsl (bad) (bad) ljmp scas cmc ret fs stos dec loopne sbb (bad) cs bound push cld repz in ljmp lcall mov cwtl mulb test insl jb mov scas sbb dec jmp loop adc scas je cmc iret imulb cli das or cli ljmp push mov leave or lahf jo mov inc pop mov ljmp scas imull and repnz dec dec pop or lret popa aaa sub (bad) (bad) (bad) lcall aad movsb loope fcoml mov pop movsb cmp xor mov and adc incl adc scas mov fcoml leave or test lret dec mov adc (bad) (bad) pushl mov ja push push in iret inc mov jmp pop mov mov (bad) mov push imul imul xor push into inc cmp (bad) (bad) ljmp lret mov or sahf nop rcr outsb pop xlat cmc (bad) incl fidivl movq cmp enter xchg lcall fisttp or and push mov mov into in dec pop (bad) fcmovbe mov (bad) decl mov aaa add stc or fdivrl rorl lods pop pop aad pop int pushl xchg xor aad lahf adc (bad) jnp ja in inc aaa rorb fadds xor popf cwtl cltd push popf mov repnz iret mov dec in xchg clc mov in out jo mov or sub js,pn pop je outsb sub into mov xor jp daa loop cli or and jp xor (bad) fcomip decl and repz jae test xchg leave push pop in xchg sbb pop (bad) (bad) (bad) lcall movsb mov idivl cs std dec xor dec (bad) dec pop call or dec jmp and adc jp stos mov mov ja hlt mov ret (bad) (bad) (bad) mov aad and jb or shrb sbb jg and push movsl dec insl js push call imul push lods mov push jne jne mov jne xchg lds (bad) mov mov aam pushf mov (bad) in cmp inc and sub xchg (bad) (bad) (bad) (bad) out (bad) movsl in xchg stos addr16 arpl arpl jmp fcmovnbe sahf call push cmp rorb push pop or xchg rorl sub mov jl lcall xchg imul adcl out cmpsb adc dec enter dec dec dec pop hlt sti mov jb ret and sub xchg das test pop fistp (bad) (bad) mov cltd inc ret pushf outsb fistpl dec mov ficoml dec inc and int (bad) (bad) jmp (bad) jmp cs xchg cmp mov xorl pop dec (bad) (bad) (bad) call mov dec imul push pop push daa sub sbb mov (bad) hlt aad imul inc fnsave dec lret mov jmp cs nop push xor mov pop (bad) cmp mov cmp mov dec xchg in mov ljmp rclb movsb out ds das add sbb push aad lock adc das sub (bad) (bad) (bad) inc jg adc test add movsl lock push andb adc pop push mov adc (bad) (bad) decl out push or out (bad) and hlt inc add in (bad) fcomip ja cmp dec push inc push nop sbb and insl ljmp mov jl scas ret push or jp mov xorl decl or xchg mov add js sub ljmp insl adc orl add and ljmp mov dec adc lock nop dec (bad) jmp lea mov neg add in pop adc mov sbb cmpsb inc ljmp push shr push push sub and int (bad) (bad) ljmp jmp sarl fmull sub test push (bad) decl or adc dec xchg and aad or (bad) (bad) push dec addr16 notl leave inc xchg xchg mov mov aaa ret push pop test xor lods sbb data16 lock mov popf xchg nop nop adcl stos jbe adc pop jns arpl decl push lods out stc lret xchg bound js jb sub jmp xor xchg lods cmp mov pop adc sbb adc jmp enter inc xor fadds mov xlat and cli jg ljmp fnsave cmp hlt nop or movsb mov scas cwtl mov and jmp loope test (bad) (bad) (bad) ffreep das inc adc stc cs cmp rcr sbb scas jnp cltd xchg xchg push fdivrl inc (bad) (bad) (bad) (bad) mov push cs xchg cld (bad) rorl lcall mov dec into (bad) je ja mov add lcall lods arpl fcmovb mov outsb in jbe cmp xchg mov fistpll (bad) call int and add mov ljmp xor push adc dec and enter orb sub add (bad) dec cs dec fwait jle sub and aaa jge and scas ljmp add mov add popa rorl in mov lea (bad) xchg cli rol (bad) ljmp xlat sar cmpsw (bad) mov cmp dec xchg adc (bad) pop sar aaa nop xchg and je scas cmp push (bad) dec clc (bad) pushl mov push cs mov call aaa shll mov movsb push pop fmuls jp xchg pop (bad) incl fdivr and sub add fnstcw push testb adc imul dec cld cmp rclb pushf adc mov ljmp popa xor fisttp (bad) mov je lds icebp sbb call (bad) xchg mov mov aaa imul xlat jle xchg cmpl mov test test fnstcw sbb mov dec add add mov push (bad) mov mov adc add mov pop imul das subb and and outsb mov (bad) (bad) pushl aam adcl mov mov push stos (bad) setp (bad) lcall sarb int3 or push jne enter test push addl jno sub xchg test arpl xchg dec negl (bad) mov jle decl xor lods fimull push ret or decl cltd pop and int sub xchg push add dec cmp sbb aam lods cmp cmp roll or (bad) call fsubl dec jp movsl sub xchg lods in fldcw (bad) push sub push mov loop ret jne push push in mov fnop sti jecxz mov sub (bad) (bad) (bad) jmp cmp mov add and fiaddl sahf inc xor fwait jmp pop cmc (bad) (bad) lcall js jle ss xchg inc and push popf cld inc popa xchg test (bad) lcall movsl add push sbb mov jl movsb ret push (bad) (bad) mov mov pop ffree push inc and in cwtl out sti cmpsb (bad) mov (bad) (bad) (bad) ljmp mov fwait repz mov jbe,pn dec movb cmpsb adc push inc mov xchg sbb fdiv sub in (bad) (bad) fnop xor imul cwtl fmulp cli (bad) int dec mov mov jge sub movsbl xor adc sub add sub jb add mov stos (bad) (bad) (bad) lcall imul insb clc xchg pop mov sbb xorl jmp decl sub inc in add ds stc inc xchg sarb mov test jecxz outsl jne mov sbb (bad) (bad) inc pop push jb out jns addr16 insb sbb int3 fwait xchg and and mov inc test pop fnsave (bad) (bad) lcall mov cmp push cli inc add lods jbe pop or aam (bad) (bad) lcall cld sub add mov sbb ret imul cmp xor mov imul incl dec cli cmp lcall xlat loopne rorl int3 mov ljmp sub aam xchg je push add dec in aad lret (bad) (bad) (bad) fisttpl call faddl xlat mov jb mov lods pop (bad) mov xchg int3 imul pop dec inc pop sub sbb push pop push xor (bad) jmp adc inc ret or add cwtl rorl clc sbb mov mov (bad) (bad) jmp das sarb xchg bound testb mov push cltd aas push xchg (bad) ss pop xor (bad) (bad) push loopne ja jo xchg inc out add (bad) (bad) ljmp and dec sarb dec and mov mov fdivrp shrl cmp fistl mov or fdivrl push jp xchg xchg xchg mov (bad) stc adc push cs pop xchg cmc mov mov outsl xlat sahf dec dec mov (bad) (bad) (bad) jg lcall imul push sub ret das xchg aas movsb push jno cmpsb (bad) (bad) (bad) (bad) jmp jns int fnstcw mov mov bound dec insl fbstp push mov cli inc sub mov (bad) (bad) (bad) mov mov stos inc pop adc test test jge add or (bad) (bad) ljmp pusha pop lret movsb cmpsb orl shrb loope js adc dec jbe mov sub (bad) decl cltd xchg daa or ds add push pushf nop data16 fldcw mov jo ljmp xchg mov pop enter dec lahf inc mov (bad) (bad) call sub add add mov nop dec lcall xchg inc push mov popa ja mov nop (bad) bound or add add mov (bad) (bad) jg pop mov pop sbb cmpsb pop fwait jb jge sbb rolb inc hlt ljmp loopne aad js mov mov and scas pop aaa cmp cltd pop inc mov (bad) ljmp xor mull aad inc movsb push and xchg insl pop cmp add movsl xchg in lret mov imull jbe sti mov leave cmp (bad) mov jns jle (bad) aaa aaa jge push icebp call fwait jp out (bad) (bad) insl ret fwait mov pop icebp (bad) mov in loope (bad) enter popa xor arpl mov mov (bad) xor xor in and xchg push push out sub (bad) ljmp push aad or mov lods fstps fildll (bad) (bad) (bad) call lock in lcall mov xor ss pop dec pop xor xlat cs leave mov decl ret popf sbb mov out jl sub and fidivl dec push sub (bad) (bad) pushl stos cs mov repz mov loope jo jmp adc aad lcall rcl cmp sub pop or sahf and cmp inc sbb lods stos (bad) (bad) (bad) incl sub inc sub pushf ja lahf adc enter test push cmp stc sbb sub into jnp (bad) (bad) ljmp mov cmp js mul mov fadd in push push xor lock mov dec outsl (bad) (bad) pushl fidivrl (bad) fucom ror je sahf imull sub cmp mov mov cld pop addr16 lret arpl lock sar mov mov push xchg sbbb pop (bad) cmp xorb (bad) (bad) (bad) ljmp sbb jne xchg mov repz pop std shr xchg int out insl sbb push jmp mov mov sbb mov adc sbb and (bad) dec sahf (bad) xchg adc and sbb jns fidivr and add inc inc sti pop xchg xor inc xchg inc add movsl daa (bad) mov and mov jo gs loop cmp pop dec jne jmp stc or jle,pn ds push jae xlat (bad) jecxz sbb (bad) cmp sbb cmp or dec mov mov ljmp pop dec rcl out cmp into and push or xchg and outsl pop inc push in mov pusha mov xlat jbe rorl lret call decl push aas (bad) fnstsw aaa sbb cmpsl sbb rcll cld decl xchg adc sub adc (bad) (bad) (bad) jg and fimul add dec andl dec hlt testl xchg push aad outsb and jns imul movsl ret decl and frstor outsl es inc push mov add and and xor int3 dec mov xchg clc or loope inc rorb inc sar (bad) (bad) (bad) pop cmp and add lock outsl orb mov push (bad) sahf in (bad) (bad) (bad) incl mov sub imul test ds or jo mov outsb xchg mov cs aaa inc (bad) cli dec mov cmpsb sbb sub push or aas (bad) lret and jle outsb loop mov mov mov mov outsb xchg adc and incl mov (bad) mov cmp or (bad) (bad) (bad) fbld jle sbb movsb mov jo mov push stos xchg test rcll jmp jne (bad) icebp pop add arpl idivb adc xor (bad) mov jg scas imul lea rcrb insb sub fisttpl adc (bad) lcall xor and lods jle aas out shrl cmp scas mov popf in enter ret popa pop jbe inc sub pop push daa loop call (bad) (bad) (bad) (bad) cmp std pusha cmp dec xor inc out (bad) fimul (bad) mov (bad) fcomip aas jno push sub sbb and push stos push push scas hlt sub add rolb sbb lahf sbb cmpb out mov (bad) (bad) (bad) fidivl xor scas ss jecxz jns mov arpl xor fs push je aam fs (bad) and fistp lods or cmp outsb inc xor pop mov cmp pushl push leave xchg pop xor gs add test jno iret pop (bad) jmp dec xchg jle call out or stos mov push or (bad) cmp or xchg mov call data16 push int3 jnp push faddp cmp mov psrld inc hlt cli push dec xor pop xlat xchg jae out bound mov xchg jmp mov (bad) (bad) jmp jae jnp xor test test mov inc enter pop xchg scas xchg incl push cli popf or pop loop loop pusha sub ljmp dec ret test testb or mov or push inc fwait xchg adc (bad) (bad) lcall dec xlat mov dec leave (bad) xchg pushf test bound or push sub bound decl aaa jl cmp xchg les (bad) call xor pop mov cmp call (bad) pop out jmp (bad) (bad) ljmp xchg xchg pop push ss fcmovb mov jae xchg sub ljmp ffree pop add icebp (bad) (bad) aas sub push lret into push fimull js adc pop out lock or jg das jle out cmp stc pusha sub inc loop fsts nop add xchg sub mov std (bad) xor xchg pop nop (bad) adc in ljmp pop jecxz testb (bad) (bad) incl int sub (bad) aam add inc mov enter (bad) (bad) (bad) mov lahf sub mov xchg idivl sbb data16 test push push es ljmp clc addl loope dec adc adc mov arpl imul fstpt add and btc pushl or pop loopne xchg (bad) repnz cmp bound cmp incl add inc and dec dec pop lret jo or movsb xor pusha inc xor push shrb mov add mov into or loopne mov xor and or sbb (bad) dec lock jnp cmp xor xor decl orl or push in lds (bad) push sub adc sub mov pop jge loop cli push inc (bad) (bad) (bad) jg jmp jne xor sub lods loopne stos pop xchg divb xchg stc int das cli (bad) pushl jae and fildll pop divl xor (bad) push repz daa popa dec pop push pushf mov addr16 out daa and or pop aaa popf jbe pushf out popa mov jnp dec aaa cld aad nop std adc add pop or and les cmp mov stos add jecxz popl jb (bad) mov lods stos add (bad) pushl sbb dec ret out aam jnp jl mov pop out push lcall imul dec ret sbb movsb pop cwtl lret test std (bad) ljmp push sahf cli xor mov scas jb pop aam cmp incl add in je fstpl pop xlat (bad) (bad) mov movsl (bad) popa aas xor jb jae roll clc jge sarl mov push jb imul pusha dec inc and (bad) (bad) mov pop jmp xor pop pop loopne cmp dec inc jo (bad) (bad) jg mov mov sbb sub sti rorl mov cmp and popf sbb xor push cmp mov pop clc mov test in or test into xor and jg aam push scas add jae (bad) (bad) jg es jbe fisubrl dec ljmp sub arpl je jg (bad) aas dec insl jmp push lret cmp add popa inc xchg icebp jae add (bad) (bad) (bad) (bad) or test (bad) mov xchg mov xor (bad) (bad) pushl idivl cli pop pop push loopne push imul (bad) (bad) out and stc dec ds into insb movsb movsl in push mov dec push sub (bad) mov xor or pop popf mov dec shll (bad) jmp (bad) mov test mov xchg cmp jnp xchg fdivp jb mov adc adc add inc and dec push daa out mov sbb arpl cwtl js or cmp pop jmp les add and pop mov (bad) daa mov jge (bad) (bad) (bad) lcall je and jae xlat cmp lods push outsb dec push inc into (bad) (bad) repz xchg test cltd jno dec aaa mov incl ds (bad) cmc push mov hlt push mov in out add and push sub mov sbb (bad) ljmp cli cmpsl (bad) cmc jnp xchg mov loop test sbb dec mov lods stos jmp (bad) fcomip mov mov sbb sbb push stos das jp cs (bad) or cmp decl lock jns repz in mov push xchg ror lods cmp cmovge fdivrl lcall pop push xchg sub xor stos movsl sub add dec mov inc inc data16 (bad) (bad) decl mov aaa shrl add out xchg push cld fcomps push cmp (bad) (bad) call pop sbb inc mov mov (bad) mov mov pop push rcl ljmp clc (bad) cmp gs in add xor adc sub mov inc (bad) outsb add xchg loop or mov pop xor push (bad) (bad) decl xor cmp sub cltd sbb cltd adc sbb or add fiadd pusha test (bad) push jo jno pushf adc (bad) dec scas inc push sbb jle xchg and push mov (bad) (bad) call mov add fnstsw aas out push mov ss pushl fiadd es mov insb xchg addr16 add xor lds mov loop decl out add daa sub push test mov inc sbb mov rolb shrb mov add jg add xorl (bad) sub xchg push mov fisttpl aad cmpsb idivb pushl call push fs sbb push (bad) xchg (bad) les loop frstor mov xor ds sbb pop cmpsl cmp pop sub mov dec fsts and pop mov mov inc and ljmp (bad) (bad) add xchg sub (bad) jg sbb xchg out sub jecxz pop popa mov mov (bad) (bad) ljmp fbstp js mov lea mov xor jae fistl (bad) cmp (bad) (bad) call out inc data16 ss stos lods ja addr16 jecxz push jge xor push pop xchg dec push int mov push icebp xor inc ret (bad) push ret sbb cmp sarl or (bad) jnp fwait dec aad mov ljmp xchg xchg xor in cwtl pop mov add clc (bad) (bad) (bad) ljmp test icebp pop lods mov cmp (bad) sbb insb daa scas mov fcmovnu push xlat jl neg aad xchg push repnz ja clc push pop popa lock ds outsl insb (bad) (bad) jg je push aaa mov cwtl idivb test hlt shll imul lea sti sub clc lret sub rcrb loopne jg sbb daa clc test andl inc lea (bad) (bad) dec kunpckbw fistl mov cld fnsave in mov daa (bad) (bad) lcall lret inc mov push or fnstsw popf jne jno hlt jns ret daa xchg (bad) sar mov gs jp mov push shrl cmpsb mov loopne imulb inc lock pop (bad) ljmp mov add xchg mov enter mov lcall ja mov clc pop movsb push (bad) loop rcr dec insl xor inc cmp xchg jo jmp lahf adcb outsb in fimul mov pop std fistpll xor stc ljmp ja stos in add xor movsl js in cmc inc rcrb xor les mov push mov (bad) mov sub es jecxz ret scas pop push stos pusha dec cmp add xor or push add lret xor xchg mov or mov notl (bad) mov das ja imul loop bound aam pop add fildll add gs xchg xchg or sahf lahf jl adc (bad) (bad) (bad) cmp in loop xchg pop sbb cs mov in and loopne imul push lret test imul adc ljmp pop scas sub subb sub mov (bad) call hlt rcrl into test into dec inc insb mov into (bad) (bad) pushl pop out aam (bad) mov mov push mov int mov mov sub in push (bad) fist dec imul divb movsb cmp ja and pop pushf adc stos xchg push mov fldl in stc mov pop jo adc imul pop push and (bad) mov mov out iret jae mov imul jbe jmp (bad) (bad) (bad) (bad) stc jge mov jnp jl (bad) lret inc movsb mov dec mov sbb and (bad) (bad) decl xor outsb stos cmp add xchg pop pop push xchg es daa mov jecxz jmp jae push xchg push add dec cmp xor aad mov jmp out fcompl inc addr16 inc icebp and lahf outsl (bad) decl push mov lcall dec pop bound push dec test pop or xor mov xchg ja push aas dec sar cmc inc imul (bad) call xor xlat cmp ret ja and xchg mov fmul xor scas (bad) (bad) cli jae sbb pop insb xchg scas int3 dec lods (bad) loope add (bad) jg out fistl mov outsb cmp in (bad) lcall scas mov adc (bad) (bad) jmp mov pusha stos lock xchg pop sbb pop xlat mov cltd in pop cmp push call aam mov cmpsb sub icebp xor loopne mov (bad) (bad) jmp dec mov das jo int add ficoml push imul fimul test clc pushl lods pop imul sbbl push (bad) xchg or adc push and and push ljmp dec or nop sub xchg inc repnz (bad) lock nop lcall mov mov inc pop test inc jb cwtl aam or repnz and (bad) mov insb inc jne adc cs outsl add out mov push stos dec push ficomp pop (bad) int3 sub das (bad) ljmp pop sub scas aad clc lds jns lods dec mov dec lret adc gs (bad) ljmp loope imul jae xchg dec xchg mov test xchg insl sbb lds (bad) (bad) call jge ds mov call loope inc clc jmp das cli fwait (bad) jnp aaa and jns (bad) mov adc inc mov (bad) (bad) inc dec mov jb cmp adc scas pusha jb push mov jb jecxz mov add (bad) ljmp fs lock in xchg inc sub out add adc pop sbb push mov pop mov out and movsl or or mov inc cld (bad) dec dec jmp push test (bad) loope shrl mov inc (bad) (bad) (bad) fbstp dec addr16 cmp jo out out mov cld pusha xor (bad) ljmp pop sub jp int das push adc cmpsb fs or jno and (bad) jmp mov xor pushf leave inc sub dec cltd pop icebp in (bad) stc nop out inc push imul pop insb icebp add push xor push lret outsl enter and jbe (bad) xchg push (bad) (bad) call sub mov faddp mov mov loope push mov cmp pusha inc xor popa dec js jbe inc popa pop inc sub sub sahf sbb inc fcmovbe adc mov push pop push push cli mov adc icebp fsubrl std dec sub cmp jmp imul sub sub pop mov dec pop aad cmpb cmp stos inc inc stos pop lds ja adc mov les and jb push dec sub ds push sbb xlat pop stos (bad) mov and push pop sub (bad) mov mov mov out pop clc (bad) (bad) jmp and xchg cmp push xor xchg xor icebp (bad) out jo sbb scas mov bound xor ja mov (bad) jmp sbb (bad) mov push push ljmp (bad) (bad) jg pop push push lods push pushf out popf xchg jge jle sub mov (bad) jmp adc mov imul sub adc fsubrl in dec movsl clc dec dec pop mov (bad) (bad) (bad) pushl push popa iret lahf sahf pop or incb mov sub pop xchg push jle loopne (bad) pushl dec pop std dec pop jno cmp das inc std or int xor (bad) jg mov add aas xchg pop pop xor mov test jg mov test mov sti movsl xchg jg (bad) (bad) (bad) jmp fdiv pop fsubr pop das push cli dec xlat mov cmpl mov xchg popl (bad) fbld fsubrl mov in cmpsb stos pop popf adc int (bad) (bad) (bad) pushl es dec into jb iret (bad) sbb xchg jmp and mov in sbb jmp cmp je pop jle mov pop movsb xor stc cmp sub xchg xor jae cld (bad) (bad) (bad) jg insb mov or stc dec mov out ficom lret sub push ret xor (bad) (bad) jmp mov push stos (bad) es pushf inc sub shlb xor dec data16 push jge mov add sbb add inc hlt in faddl push test pop cmp mov adc (bad) (bad) ljmp dec mov jns mov imulb jl adc repnz mov (bad) in xor (bad) mov add xchg stc rclb fistpl mov test xor lret jo inc ret pop jne loope gs (bad) jg dec mov mov fldl stos fbld xchg test outsb xchg mov sbb xchg dec hlt ret xorl adc cmpsl ret (bad) jg cwtl jnp stos popa mov fwait shrb sbb mov sub ljmp (bad) ret rclb cmc mov (bad) int3 in xchg cmpsb push inc sub (bad) (bad) jg and add adc mov pop dec inc mov (bad) incl mov sarl cld sbb and loopne (bad) decl mov inc enter aad mov push (bad) xor mov lods cmp (bad) (bad) (bad) mov mov scas jecxz cwtl bound fucom cmp out jnp push outsl xor add sahf clc push cmp push ror stos shlb sbb push or test clc dec add int3 cs mov (bad) jg jg hlt into fsubr nop icebp mov imul or (bad) (bad) jmp js daa aaa jns das jno fdivrs mov fidiv push stos (bad) add cli aas clc push loope loope cmpsb (bad) movsb cld mov adc and mov sub fwait adc imul dec insl call fwait test mov insw xor in sar (bad) (bad) ljmp icebp je sub jmp sub pop and fwait cmp (bad) jnp adc lcall leave xchg jle aaa fnstenv lahf or jecxz (bad) (bad) ljmp and and daa dec (bad) dec adc dec lds sbb fcomps stos sub cli pushf adc inc sbb fdivs sti fcmovu into mov (bad) (bad) mov sarb repnz imul jp daa int call jmp cld cwtl mov sub fnstenv pop jecxz mov adc adc aam mov pop push mov jae mov or lock (bad) (bad) decl jae dec dec mov out loope jp inc jp cli hlt cmp in (bad) cli (bad) (bad) inc (bad) enter jbe mov scas xchg js sarl shrb inc mov xchg adc rol add mov (bad) stos scas push call push divl add inc push cmp sub lcall xor cmpsl loopne test (bad) pop inc arpl ljmp addr16 xor mov fwait push jo push test aad aad jg mov dec sbb (bad) (bad) mov cltd pop into cmp cltd cwtl mov aad pop lock xchg je jbe xchg stos test cld cwtl mov mov mov test ret cmpsl nop or add or sub pop test push mov decl lds or mov mov xchg test mov cmp popa xchg sbb jg pop mov sbb das clc (bad) call adcl aaa push or movsl adcb mov cmp push movb (bad) stos lcall (bad) lcall mov and and ljmp test (bad) (bad) incl xchg jo jl push out fs fiadd jecxz mov xor pop xlat mov (bad) (bad) lcall mov push sahf mov inc xchg mov ret cmpsl inc or enter or xchg jae sbb (bad) (bad) (bad) jg scas outsl (bad) loop mov jne cmp outsl or lds pop lret rcrb ljmp mov movsb outsb iret add mov inc lret or jecxz (bad) jmp cltd pop push add cmp jbe mov rolb (bad) (bad) jg je jnp xor push mov (bad) lods add add es push jle lret cld mov cmp lcall movsl adc dec popa inc stos imul insl add mov fs pop xor adc (bad) (bad) call sbb pop call test loop xor jl sahf test cs mov (bad) lcall mov inc sub add inc and cltd shll and sar (bad) call pushf aad cmpsb loopne imul push xchg in pop pushf (bad) jnp cmp (bad) in push mov (bad) (bad) (bad) jns loope mov mov inc mov rcrl xchg and (bad) cmpsb fwait xlat (bad) (bad) (bad) lcall push ja popa scas jle les js adc mov pop sbb jnp push mov (bad) mov loopne jl subps (bad) (bad) dec inc popfw loop inc dec xor push adc sbb (bad) mov add (bad) jmp stc inc gs mov fwait mov not cmpl (bad) (bad) dec xor test push mov sub push repz fwait jns stos imull xlat and pop in (bad) lcall cmc mov pop enter cmp rcr imul jge xor or dec push lahf push iret mov mov into mov mov or cmp (bad) jnp repz enter mov std (bad) jg nop cwtl cmpsb pusha ss rorl jb lret pop xchg pop (bad) ljmp and test pusha xlat insb or and mov (bad) decl jne cmp lods fidivrl jae lahf inc in (bad) idiv mov add cmpsl loope enter mov (bad) mov scas aaa add (bad) (bad) decl (bad) dec inc and shll mov lret jmp mov loop lock mov ljmp data16 outsb stos cmp sahf jne mov dec inc (bad) lcall pop shrb add cmovge rorb sub mov mov outsb aad push adc jne and rcl (bad) (bad) jg test dec jl ljmp mov lcall xchg push movsl sub (bad) (bad) ja mov aaa lock daa leave mov (bad) pushl movsl push mov out cmc jo mov rorb fwait icebp ret mov dec jmp mov mov inc aam incl (bad) lcall neg and xchg inc adc add dec add push notl loopne jmp sub mov add xlat outsb out mov push ds or (bad) jmp cmpsb cmp sub xor ret adc dec jbe ret cmp rcll (bad) (bad) (bad) lcall out jne outsb test mov mov in je scas out aad mov decl stos pop jo stos adc inc inc movsl jo fldenv cli jg pop or push jbe loope lds xchg negb inc cmc dec movsl adc push ds jecxz mov (bad) popa mov adc inc insl xor sarb add sub xor das je movsl ror out (bad) (bad) (bad) cmp xchg mov cmp fnstcw mov (bad) jo push loop push adc dec call jecxz pushf fs xchg adc cmp movsb add or and (bad) and sahf add loopne mov popf push mov fdivs nop jne arpl pop data16 jne cmpsl (bad) (bad) (bad) lcall sub sub sahf lahf inc data16 pop icebp cwtl mov fistpll sbb dec in dec iret sbb ljmp js and add mov sbb insb xchg lods arpl fldt arpl sub dec popl pop in push push pop mov inc int push cli call sahf push lock xchg jmp mov xor std aaa mov (bad) (bad) incl push fisubr aas cmp xchg jecxz jmp jg (bad) ficompl (bad) (bad) (bad) ljmp inc in enter inc lds iret pop std dec imul push inc jg (bad) (bad) mov stos dec daa ret jns repz or mov (bad) (bad) (bad) jl xor ret icebp inc push ret into ja cmpsb and xor test movsl aam scas mov dec pop out mov les add incl ljmp mov stos dec mov scas mov lcall push xor mov jno adc mov jmp cmpsb cltd push lods push jle popf fidivr jns push imul xchg incb (bad) adc (bad) loopne aaa adc add dec loope aam xchg push mov jae mov sub imul outsb mov jne cmp jp cli ja cmpsb ret jecxz icebp insl in (bad) (bad) pushl sub cltd or jecxz jno leave inc inc and mov rcr (bad) sub mov test (bad) (bad) lcall dec inc movsl pop mov mov out push sbb scas inc loopne pusha pop jb xor fwait pop jmp add push sbb mov loopne jo std sub cmp imull (bad) (bad) aas add dec loope mov arpl mov mov pop loop mov jne int cmp jbe into ljmp lods aaa mov sub fstps in repnz (bad) call sbb pushf pop sub enter add jne (bad) mov (bad) decl push push mov pop jb enter mov test cmp arpl fstp (bad) loop and ret out or loop push mov loop jle add fcomip (bad) jns mov xor sahf loop add mov mov ret cmp mov xchg imul cld push xchg add inc xor push jno xor mov (bad) (bad) (bad) decl out das adc cmpsb push mov test mov lock or sbb push imul add push out inc stc cmc dec enter fcomps lret pushf add adc jae decl inc or (bad) mov xor mov and or (bad) (bad) (bad) pushl dec stos push sahf loopne xchg sub lret sbb pop jns inc fsubrl mov lcall sub lea data16 push dec pushf dec daa sbb mov (bad) (bad) ljmp cltd sahf mov fidivrl add rcrl icebp inc loop pop ficom jg ror sbb pop sarb je push cmp pop call bound mov or dec loop dec sub lds lock (bad) call test xor mov pop fild (bad) clc inc rorl scas or std decl push jae loopne ret mov mov mov arpl aaa sbbl fldenv push mov or (bad) (bad) inc sub ljmp call ffreep les dec push pushf add push push sbb aam xor in add sar adc xchg popa cmp mov mov pop or cwtl clc outsl arpl imul loopne lret (bad) (bad) fcomip rol dec xor cmpl fcoms push pop dec cmp std push repz mov (bad) push fidivl scas or inc cli call sbb push jb ret jnp movsl mov inc repz (bad) (bad) jmp int jmp rcll fnsave cmp sub xchg mov and stos mov cld mov sub imul xorl xor jns (bad) fisttp in cwtl lea cs aam aas sub sarb adc mov add fldl lcall add cmp lret aas dec cld and add mov sbb lcall push (bad) (bad) incl cld movsl pop (bad) (bad) ja data16 xor (bad) mov mov lea push sbb (bad) pushl fisubrl out or cmp mov sub test cltd sub fs icebp mov (bad) add mov xor cmpsb scas mov add out movsl adc jge push jb scas mov sub popa dec nop adc test push pop cli movsb cli sbb xchg jmp add jne lcall stos std mov xor rorl cwtl addl decl mov pop or pop jl mov js push arpl xchg xchg (bad) (bad) (bad) jmp cmp scas pushf sahf outsl inc sahf (bad) faddl adc sub repz push scas std (bad) (bad) pushl push lods loopne stos inc movsl aam push outsl data16 xchg cmp jno aad (bad) call jl or in fsubrl mov inc push mov cli (bad) ljmp cwtl mov xor stos push pop jno dec aaa mov clc call std or add adc xchg dec and xchg ljmp or mov icebp (bad) movsl jne stos (bad) pop jmp in pop cs fistpll ljmp sub pop rorl aaa sti and sbb sahf insl push add pushl jmp cmc jmp les (bad) (bad) jg (bad) popf sub mov adc mov stos lods (bad) loope jp push jg mov cmpsl (bad) (bad) (bad) lcall lcall pop sub ss mov jmp fildll stos popa (bad) outsl pop fprem or sub test (bad) (bad) pushl jmp sub jne clc xlat inc stos es jnp mov in pop xchg inc mov inc shrl pop cmp stos out fstpl lcall (bad) lcall add xchg dec int rcrb ss mov (bad) (bad) (bad) decl push xor cmp stos loope cmp fidivr pop mov sub cld call rolw in into (bad) (bad) mov and or push and jbe cld out (bad) mov (bad) lcall out in push in mov xchg add cmp pop mov insb mov or push fcom (bad) int3 add pushl ds jle adc stos pushf in push out mov mov push lods movsl adc mov sbb pop cwtl (bad) jg mov (bad) clc inc jb das mov push mov mov outsl dec pop jb enter cmp out hlt mov (bad) jmp outsb aas xor mov push and fmul push (bad) jl cld jg call jl jb xor movsb in cli (bad) ljmp xchg into insl fldcw cmp mov hlt xor pop cwtl das sub and clc aaa and cwtl fs sub adc push in xor pop push cmp pop mov jnp ja sbb xchg mov pop leave xchg (bad) test (bad) jg xchg xchg mov mov mov xlat popa aad jle in push hlt scas mov ret jg sbb cwtl outsb adc fildll les sbb call arpl popa int pop mov xor daa dec hlt mov in pop pop lret mov movsl cs scas (bad) (bad) stos in xor fstps mov int3 cs pop (bad) mov jg push int pop xlat mov add scas lahf cwtl inc jne add ja mov stos jge test pushf jb imul xchg cmp rorl (bad) inc lahf mov jl gs in lcall xchg fs scas out imull (bad) (bad) out clc add and adc sub shl mov aaa (bad) (bad) (bad) call mov and lea into mov and iret dec push fsubrp clc (bad) jmp mov and cmp xor sbb mov sbb js mov add (bad) (bad) pushl xor pop es addl jo adc iret mov incl xor data16 sub gs out dec mov cs mov xchg xchg dec jmp push repz and mov (bad) jmp popa lret jae in frstor mov out mov (bad) call cmp mov rcrl test mov bound stos push mov adc xchg rol push lds scas jns (bad) mov mov push xchg dec jp repz adc in push xchg xor clc push outsb ljmp (bad) aad sub imul lea pop iret inc frstor add mov push mov pop xchg xor jmp fistpll inc or dec push addl ret icebp add (bad) decl cmp jmp fisubr adc aad icebp outsl xchg hlt pop and xchg xor push (bad) lcall dec xor in and mov dec mov jmp fstpl mov mov fnsave cld (bad) (bad) decl out ds pop or ja sbb jno adc jno (bad) (bad) incl scas mov or dec push shlb xor jno ds cli (bad) call dec cmc fistp lret cmp int3 cmp das cs aad cmpsb mov and mov add xor inc test cli jmp (bad) xor cmp or mov js enter (bad) (bad) (bad) (bad) fild jp sub sbb sbb push mov push cmp xor lcall or pop aad (bad) sub cmp rcr in mull (bad) jg or or cmc dec xlat ficomp xor sbb (bad) jg rcll sub (bad) dec sub or add (bad) (bad) (bad) jg jp dec inc mov aam fmulp mov lahf xchg jge push insl and dec ds (bad) (bad) jmp dec pop pop xchg dec iret mov xchg pop and aad xchg push fwait (bad) mov adc ret incl loopne add sub int ret mov push cmpsb lock (bad) (bad) call push mov jp test xor in xor push std ljmp sbb push lods mull ljmp xor data16 inc cwtl cmpsb mov flds mov mov hlt cmp xchg movsl shrb dec (bad) mov cwtl push jae jne (bad) (bad) decl sbb in jp push jmp push dec xor jno jg hlt jg mov or xor pop stc decl (bad) mov mov int3 sub cmp (bad) (bad) (bad) pushl sbb xchg ret insl xor hlt xor repnz lret mov mov and jmp cld call dec lret fninit (bad) dec lods add fimul cli mov cmpsl jns dec sti mov sbb and sbb cmp (bad) (bad) lcall lds (bad) iret (bad) push sub out jne pop jp (bad) (bad) (bad) jg sahf into int and xor jbe sub fildll inc je aas (bad) or int push xchg clc and jmp cmc (bad) mov xchg dec jb inc or test (bad) (bad) out enter mov inc sub and pushf pop insb fwait push mov jb repz jg (bad) jnp or fadd hlt mov ss inc xor jb mov in jg push dec jle mov mov test js (bad) (bad) mov push mov scas xchg jb push movsl pop lds (bad) decl sub int sbb pop push adc popf dec (bad) (bad) (bad) inc cld flds pop scas push mov mov mov cwtl mov add lods cmp mov xor jp ret std (bad) decl jp mov and mov std test dec push mov fildll add pop daa push insl adc sub fcomip ja inc repnz clc (bad) (bad) cli fmulp fs sbb ja in push bound push sbb (bad) (bad) mov xchg xchg in jmp adc jo and rcl sub sub jecxz ljmp (bad) sub jns daa xchg jns push fdivrl cld scas mov (bad) (bad) bound test mov sub push aad push cltd negl mov daa and call mov fs mov data16 outsl (bad) (bad) xchg push cltd fiadd pop into (bad) (bad) pop xchg iret sub push (bad) (bad) (bad) (bad) out push push jne aad shrb lret in test mov test addr16 fstl cmpsl lcall or mov adc pop rclb xlat mov mov icebp (bad) cmp enter push int (bad) add dec (bad) (bad) (bad) incl loopne sti loop push pop popa (bad) mov out repz mov pop mov enter incb cmpsb jmp daa jp ds into push mov test xchg fidivr mov (bad) (bad) jg stos inc imul nop or mov mov adc aad mov sub dec stos mov jge xor mov aam (bad) (bad) dec jbe aaa outsb in cltd sub fist push addr16 insl jns adc adc icebp jecxz leave lcall dec pushl mov fnstenv rcrb (bad) test pushl std (bad) mov pop adc sbb or dec imul ljmp jbe pop fistpll iret into sub decb in data16 or push movsb mov adcl add enter cli lcall gs xchg jl lods test (bad) adc adc cmp cli pop arpl (bad) loop sub rcrl and or pop push sar insl clc sarl jbe xlat aam lea jl mov dec jb (bad) (bad) (bad) jle popf adc int je pop sarl pop jp fs mov xor push popa pop jne data16 (bad) dec ds addr16 das push sbb cmpsl jp (bad) (bad) decl mov pop xchg dec sub sub xchg pop mov jecxz and mov sbb push aam and jmp imul scas mov imul push inc dec rclw adc in mov mov out jmp pushf adc mov dec pushf cwtl repnz imul (bad) (bad) (bad) jmp call addr16 pop pop in lods dec mov mov arpl mov es (bad) pop pop (bad) and fdivrp sahf jmp pop xchg clc and xchg dec (bad) (bad) decl mov pop outsb jno pop mov aad mov out bnd mov (bad) (bad) call and stos jp (bad) mov insb fstps xchg adc rclb add and (bad) decl add lods xchg xor cmp cwtl ror in add mov inc lds lods xlat pop mov es popf shrb dec (bad) (bad) (bad) ljmp dec ds dec sub xor mov cli mov incl cld pop pop xor mov mov lea push (bad) (bad) (bad) ljmp lcall out outsl jno pop pusha jb lret mov rcll jg mov push jbe in fisttpll sbb or repnz (bad) (bad) dec std stos cmpsb repz push idivl push int jae push pop notb fstl vminps cld (bad) (bad) ds dec hlt cmpsb jp mov pop jbe int3 imul sar (bad) and dec int3 dec push sbb sub push mov push push jne fwait mov imul (bad) mov xor adc add jne push pop inc es push fiadd or mov leave xor add jg mov pop ljmp pop push test (bad) mov into pop (bad) out ret mov (bad) (bad) (bad) aas (bad) cmp ljmp mov xchg (bad) xor fwait std orb mov int (bad) hlt and and cltd mov (bad) ret ds shll ljmp data16 idivb pop stos xchg stos jl pop xchg jmp clc sti xchg (bad) ljmp fwait sar mov inc iret pop xlat lea add ror lcall add aas inc sbb push sub loop pop push jae dec pop (bad) (bad) call push (bad) xor push jb sub setbe imul and add stos pushl (bad) jge in lret xchg xchg cmp adc out std mov shrl (bad) xchg or xor mov sub mov int add add movsl add mov mov push inc add push sub push mov or or mov push sbb fbld adc cli add test sub pop (bad) (bad) jg xchg out jno gs sub lods pop enter into lret cmp decl aad push sahf hlt cli fwait shrl mov cli stc push clc sbb pushl loop jl movsb fisubl cwtl imul sbb dec mov cmp jg mov (bad) aaa cmpsb mov ljmp repz jmp sti test outsl test (bad) fbstp pop and popf stc and icebp adc mov icebp out icebp push decl fisttpl ret mov cs pop in pop (bad) sarb mov fs addr16 call cmp lahf inc dec xlat cmp int cmpsb daa push push lods pop xor into fimul lock push jae sbb std jmp lock outsb out dec mov int and (bad) (bad) dec imul ficompl jg (bad) mov rol jno pop xlat clc ljmp jmp pusha stos (bad) (bad) (bad) ljmp stos mov fistl cmp cs aaa jne add pop jo out dec jae outsb outsb (bad) fildll stos je movsl out mov sub fbstp jl in pop cld (bad) ljmp ljmp or lahf jge dec jp les (bad) (bad) (bad) leave and sub lret (bad) push outsb ret cwtl cmpsb and pop sub sub scas add (bad) (bad) (bad) pushl daa aam les dec push in xor mov stos jle movsl das (bad) (bad) (bad) decl xor cmpsl and jo fimull or cli daa mov push sarb test stos xchg pop add mov (bad) (bad) lcall incl stc mov sub push rcl adc (bad) (bad) (bad) jmp bound pop sub push stos cmpsl add arpl pop cs sub cmc (bad) jle insl lret dec clc xchg push imul pop cli dec hlt rcll mov pop outsb mov adc hlt fucomp xor (bad) mov xor shrl je stos adc std pushl sub pop inc mov (bad) fidivl lods push xor in pop (bad) call loopne push pop push jmp ljmp push lea mov bound (bad) aas inc cmp cld and insl and (bad) ss (bad) enter fidivr jge mov mov jno push sub mov (bad) jg mov jmp lods aad mov jae adc fucom (bad) pop mov aas (bad) inc push mov (bad) (bad) lcall int pop loopne loope adc in cmp lcall shll add push sub test (bad) (bad) (bad) jg mov jl sub or pusha mov lds inc cmp daa pop aam stos lahf add (bad) jmp imull popf sti fwait sahf je fsubrl cmp xchg in (bad) ljmp lock outsl inc in jge scas repnz scas rclb nop cmpsb in dec lret inc cs (bad) (bad) (bad) xor push adc das imul hlt mov int in inc in ret shrb (bad) (bad) (bad) lcall sub das aas or scas (bad) out push and mov mov in (bad) (bad) (bad) (bad) jmp pop das xor or jne or pop arpl in dec lret in or ja push sbb cmp ss or xchg lcall lcall dec cmp movsl mov imul dec dec dec dec imul xor (bad) fnstsw insb fsubrs xlat xchg sub outsl mov lret push push in test lcall inc imul popf adc mov and lock incl gs iret aas sub mov lods xchg fnsave mov insl sub mov popf adc clc ljmp xor jp mov xlat es mov lcall (bad) mov mov lcall xchg lea (bad) call mov inc shrb pop xchg or (bad) (bad) (bad) jmp inc nop mov iret icebp ja pop repnz test lea fcmovbe pop mov mov cli lcall jb,pt popa xchg push jae and jne insb pop test pop in cmp jg mov cli cmp in cmp sbb adc das sub (bad) int3 mov jg idiv (bad) (bad) jg pop mov das dec lods add push dec aad mov push push gs (bad) decl iret in add mov bound out dec scas data16 lret adc aaa mov (bad) jl daa outsb jmp hlt push sbb movsb fcom push pop loop pop out push (bad) (bad) (bad) ljmp call add scas cmp xchg jg lahf push mov ret mov (bad) cmp mov jge leave mov int lcall sub mov call es jno call fcoml adc das (bad) incl inc adc jne inc (bad) (bad) add fidivr mov inc or cwtl imul pushf popf inc repz fist inc mov pop lcall sti sub push mov in mov (bad) mov enter inc stos daa dec jo negb jp pushf fs fcompl popa cld outsb out orl mov (bad) (bad) cmp cwtl insl add leave add pushf sbb sub scas mov arpl (bad) decl xchg daa insl fisubl loopne inc xchg xchg cmpsl jbe and jg lea dec sub sarl mov stos mov loope test xchg mov outsl dec outsb aad inc call enter stc inc jmp lcall repnz xchg pop in loopnew ljmp adc push or call fdivp dec mov (bad) (bad) clc fdivrl lods fcmovnb xchg mov jno mov stos cmpsb jle sbb (bad) cmp sbb incl cmp inc and fwait xlat sbb push adc push jp idivl pop jmp setnp or inc pop (bad) incl add decb fcoml leave push sub lock and jg xchg push aad or loopne and outsl or iret (bad) (bad) lcall and xchg fwait inc jmp mov rclw out scas out lods mov xor jne rorb insb inc xor lods dec and jmp sbb cmp je popf addr16 cmp in inc xchg (bad) jmp outsl subb cld stos jb adc and inc mov fdivrp (bad) jmp mov sarl lods dec or mov add sbb (bad) jno cmp aam jne jne xorl lock les push arpl xchg cmp (bad) clc (bad) ljmp dec pop add dec int3 ret xchg (bad) clc rcr enter shll mov mov fadd aad (bad) ja push adcl dec je into rorl (bad) (bad) decl xchg data16 pop (bad) sub mov nop mov push stos rol adc lds sbb fs (bad) jmp inc xchg test jmp insl imul jbe imul (bad) add sub ja clc jmp fcomps pop je fwait imul out into loope jns (bad) test pop adc mov (bad) (bad) mov cmp jae cmp jae pushf cmpsb xor adc mov mov add inc adc je pop push push xor pop sbb cld mov outsl jg dec sub scas stc hlt mov int3 add leave lds insb jns scas je add dec fcmovbe mov push int (bad) (bad) icebp dec push cmp pop xor dec loopne and push xchg lcall and push push mov scas jl pushf inc fldt mov movsl push clc or out push mov add pop js scas pop cmpsl mov test pushf push xor and rcr xchg (bad) (bad) (bad) lcall lods mov add xchg pushw inc lods sub test pop jns (bad) stc mov lock push mov insb in pop dec fs sub je and mov adc fiadd mov jl cs dec bound negb push decl xor movsb cmp test jbe dec shll mov push decl jle repnz out outsb and mov add xchg adc sub pushf mov xchg add xchg push in sub sub add sub mov adc pop adc jo ljmp imul lea lret insl xchg pop (bad) (bad) decl test xor xchg mov fcmove cmp ljmp cli insl pop fbld cld and xchg clc xor faddl pop or inc sbb pop cmc and scas pop call inc rcrb mov mov cmp into int3 int (bad) (bad) mov cs adc (bad) jno jae jg cmp mov sbb mov add (bad) (bad) decl jle mov jb xor imul pushf mov aad xchg inc insl clc mov notl cmc (bad) (bad) (bad) lcall (bad) mov in int mov mov clc cmp xchg add (bad) (bad) decl std dec aad bnd cmp lret push (bad) lret fcomps insb fsts or leave leave dec lds outsl jo insb jbe div (bad) aad repnz ret dec rcrb dec lock mov adc or or das pop add adc ss cmp lahf sahf dec repz shrl loop pop push push loope mov push xchg jecxz inc cld pushl or jae lds fcomp test jnp repnz std imul adc push xchg nop in stc dec push cmpsb jg lock out inc jmp jg das xchg loopne jg lahf repnz aam mov mov ljmp jle cmp loope enter aas and adc pop xlat pop and jecxz cs add jle daa aaa scas or out xchg movsb (bad) (bad) incl sub cmc mov dec jmp mov outsb jmp inc fisubrl (bad) jmp mov aas xor fimul call scas xchg imul (bad) decl mov aam mov out mov cli cmp cwtl jnp lea outsl bswap jle push mov cmp cmpsb add pop fsubs push jns lock sarl lods push ret ljmp add cwtl ds aaa mov daa movsb push add sarb (bad) dec in fwait addr16 mov pop pushf pop movsb js imul (bad) mov adc jns sbb jae (bad) imul jl ficoml mov nop ljmp mov mov scas push add lcall push mov mov ljmp sar dec testb mov fdivs mov ret aaa mov lods insl aam mov repnz pop out lods fwait xor sbb mov push or fnstsw lock ljmp cli in stos pop push call mov addr16 inc xchg popf mov xchg (bad) int3 dec (bad) mov add dec jge,pt fistl inc loopne cli sub ret mov (bad) mov mov (bad) lcall push js xor push mov mov decl test stos movsb out mov cs out (bad) (bad) (bad) mov sar fwait push sbb pop jae ss aaa std lcall pop cmpsl sbb jmp mov fsubrs ficompl (bad) test (bad) jmp inc imul mov xor call mov pop lods fidivl mov xchg pop scas mov (bad) (bad) dec inc pop dec lods cli in pop mov pop lods push and stos js ret cmp dec sbb call ja arpl in cmpsl daa xlat in mov jmp loop mov stos mov and aam xchg inc cs push (bad) (bad) (bad) call xor popf push push mov imul cmp cmp inc mov aam std ja (bad) mov scas popa inc push scas or jbe sub cmp pushf decb int3 stc push xchg push shrl push pop pop fldcw xchg pop mov jmp lds xor (bad) ljmp loopne xchg dec sbb push arpl xlat mov (bad) cmc push test clc push sbbl lea (bad) (bad) mov jae pushf outsb lcall pop pop movsl dec xchg xor jp (bad) ljmp ret and sbb mov out mov (bad) (bad) (bad) (bad) cmp jmp push lahf sbb mov das iret mov cs (bad) pop in dec push mov cmpsb ljmp mov enter dec movsb jge cmp aad sub cwtl and add into mov bound cmp jbe sub mov in adc (bad) pushl ds arpl fiadd jmp out mov xor es add sub scas mov mov (bad) mov mov mov int js das sub sub cmpsl test cwtl (bad) jb dec push icebp cli cmpsb (bad) (bad) (bad) ljmp pusha mov push sub icebp enter push mov jmp outsl dec das pusha sbb mov int pop dec mov cmc mov sub sub and lcall shrl (bad) and lret scas aaa (bad) jecxz sub xor xchg lret in (bad) (bad) (bad) (bad) cwtl stos sub test jb jo out mov int mov or jmp jp ds ss (bad) fildll pushf aaa in cwtl dec scas sub adc pop adc xchg into add (bad) ja ljmp jmp xchg jno and sub mov fbstp adc pop hlt push dec and js or cwtl outsb adc hlt popa dec sti mov icebp (bad) incl cmpsb nop sbb ja out cli push xor loopne int inc jne (bad) scas adc add xchg push mov xchg cs dec sar lcall and ficompl sbb mov sbb jnp and push inc and (bad) out jnp outsb ret sti stos lods jnp xchg lods aaa cmc mov movsl (bad) int3 cli add xchg lea (bad) (bad) jg adc shlb jb inc pop in cmc sbb jmp fwait insl sbb gs (bad) push rcll mov divl xor mov pop stos sbb scas add popf lods sub dec dec fidivl jmp (bad) (bad) mov jp inc cmp pop pop in int adcb xchg into mov (bad) (bad) fcomip iret adc rol and xlat dec call in rorl lahf (bad) add ljmp sub cmp in (bad) (bad) (bad) jmp fdivs packssdw mov cmp pop repz fcos (bad) ljmp mov loop or and push jno inc insb inc stos pop or out or adcl and test xchg and (bad) (bad) (bad) jg mov cmpsb (bad) adc dec mov int jae hlt sub outsb xor in cld pop jp (bad) jmp stos fwait dec into dec jle cwtl mov mov lret sbb js mov in mov insb ljmp cmpsl lahf cmp cmp cld xchg dec sub xchg inc dec cmpsl xchg push jle add cmp pop mov call call std incl std adc aas sbb and jnp xchg scas (bad) and mov or sbb adc jp mov pushf pop lret test jg (bad) dec js pop das or push mov pop lret push cmpsb push testl (bad) (bad) (bad) jnp mov or xchg pop jp shrb or cs mov movsb xlat sbb (bad) call inc mov movsb cmpsl push sub mov push sbb xchg mov call cwtl cmpsl xchg mov jnp dec in sub je jno imul (bad) mov add in gs dec lock or fsubrl mov (bad) imul jge (bad) ljmp pop es mov sub mov and loope int outsb icebp (bad) (bad) (bad) mov repnz test repz je inc mov push jne dec push stos call arpl fs adc aad add cmpsb dec sarl push mov ljmp jo (bad) (bad) pushl or imull dec shrl pop xchg stos dec mov rcll inc jg (bad) jg jne fdivrp inc (bad) (bad) in xchg push data16 push push repnz push adc xchg jbe aaa add inc xchg repz xchg jb xchg ljmp cmp mov jmp adc cmp push xchg (bad) (bad) (bad) jg insl push lcall mov lahf sub jp push pop xchg jle (bad) decl mov (bad) aaa xchg ljmpw insb push add (bad) (bad) mov arpl stos dec cmp dec mov outsl cmpsb or mov (bad) jecxz out add cmp frstor sub mov (bad) (bad) ffree cmpsl cmpsb loopne lret jns mov fcmovne mov decl scas mov outsl pop pop pop xor inc (bad) (bad) (bad) jg arpl xchg sub les jmp pop xchg adc popf cltd mov mov aaa adc (bad) (bad) pushl stc sbb imulb jmp mov aas cmp data16 pop (bad) (bad) incl test popl sbb inc cwtl out fcmovnbe int3 fs inc popa mov cmp lods leave sub iret cltd gs fwait cmc mov (bad) mov adc lcall pop or sbb and mov cmp xor clc in xchg das adc mov cmpsl jecxz (bad) (bad) (bad) call idivl sbb cmp enter mov test push sub (bad) (bad) (bad) lcall insb aam jge pop cmp stos js fdivs daa arpl lcall incl mov xchg in mov push sub cmc ljmp (bad) repz scas sbb scas xor adc mov js sub push pop outsb dec add pop ret mov jp push sarb jle test add mov jmp addr16 cld push stos mov test out addl sbb sahf pop (bad) (bad) (bad) (bad) clc rorl push pop clc cs cmc push mov in mov insb cmc inc in inc fist (bad) (bad) (bad) pushl pop xchg xchg fdivrl push sbb add inc pop jno (bad) (bad) decl jecxz pushf xchg mov mov adc sub test mov sar adc push adc mov add mov xchg xchg pop mov (bad) incl mov cwtl cs into aaa in jae dec mov dec (bad) lcall xor pop jbe sub xchg pop push ret sarl fwait imul add dec jns iret jae ret xor inc outsb cli push mov sbb jb push cld (bad) ljmp xor aam pop sbb pop mov loopne loope pop sub push outsl xchg outsb fidivr ret (bad) fisttp int3 outsl cmp (bad) aad fsubl mov dec ss sarl (bad) (bad) jmp jmp adc test int3 sarb dec pop jno lcall mov cmp rorl cmp (bad) std push dec (bad) (bad) (bad) push (bad) fdivr mov ljmp mull aas lock mov xchg hlt dec aas mov add mov sar enter pushl rcr out adc cld push sbb sbb xchg js iret fcmovu pavgb into pop add sar stc jns aaa cli and adc mov pop jb xchg negb add lcall hlt jnp add xor fwait lcall mov xchg mov out jae mov push std (bad) (bad) decl pop icebp popf sub nop mov leave xor sahf mov fisubr or sarb scas cmp (bad) decl mov and (bad) hlt pop xchg and and xchg insl (bad) (bad) (bad) lcall pop dec fist pop fldt sub fwait mov pop iret into aas or lret cmpsb jmp cmpsl (bad) in cmp js lea mov out xor leave mov push mov out mov sbb pop inc mov (bad) roll repz rclb shr sub (bad) call out cli leave jecxz rolb cmp inc xchg inc fsubrs bound fstl push mov insl ret lcall pushf in cmpsb push loope jg hlt lahf pop mov pop shl cmc xor aam ret out inc lcall push pop out pop in or sbb imulb cwtl idivb scas pop loop les mov push (bad) (bad) (bad) inc lock in jp sar mov dec fwait out mov jmp dec mov jb pushf dec stos (bad) (bad) (bad) decl imul jnp push add lods in mov (bad) (bad) (bad) (bad) jns dec lods sub cmp jae mov push cmp mov lahf movsl (bad) pop push incl pop cwtl pop lea push mov in mov (bad) (bad) (bad) fsubrs cld rolb mov or fdivs lock sbb aas incl push std cs sar or pusha add ret push (bad) push pop dec daa mov mov data16 jb sub lods insl out mov pop jbe iret outsb (bad) jg decb hlt mov cltd rorb jnp (bad) dec inc xchg jns fcos inc (bad) pushl xor loop aad ror pushf pop cld arpl lods cwtl mov ljmp add fistl repnz push lret ficoml mov test (bad) lcall jns mov or test xor arpl outsl cli (bad) (bad) jle popf xor dec pop xchg push imul rcr mov ljmp icebp (bad) cmpsl cmp xchg arpl cmp ja sbb sbb loope std mov outsl out or sub (bad) xchg xrelease inc dec lods outsb mov in cmpsb icebp ljmp clc cmpsb cld cmp jmp test jne out (bad) (bad) (bad) cmp sbb (bad) jns xor push jl sti lds fucomp sub fsubs pop mov xlat jnp ljmp pop pop mov test imull mulb push mov in and test (bad) (bad) incl xor mov sub std shrl jecxz sbb aam xchg inc sarl jp sar push rorl push pop loope lds dec (bad) (bad) pushl or cmc rcrb imulb jl xor in test inc push cmpsl gs loope (bad) (bad) (bad) ljmp mov loope mov in fcoms cmp sbb lods std jb mov (bad) jg loop fldl jb repz xchg out add out mov mov sti into adc lret (bad) cli test scas xchg mov (bad) clc jno xchg cmp dec ja lret inc ljmp push push xor add push lock ljmp xchg stos mov (bad) loop push repz fildll les pop repz test in mov push sbb inc aad aad outsb adcl mov jg fsubl je fldl sub notl jmp stos dec mov sbb mov mov xor adc lea mov mov (bad) call loopne and fisubr cmp push add sub lret ljmp ljmp adc mov push mov xor (bad) xlat ret roll xchg jp jmp or pop fisubrl inc (bad) adc mov std fildl (bad) (bad) lcall adc adc jne xchg (bad) jnp xchg add cmp add xorb incl lret cwtl xor call cld pop hlt mov mov (bad) jmp insl mov icebp bound or add lret kmovb movsl es (bad) lcall decb lea push adc jo arpl add dec outsb lret fsts jns imul dec ret pop (bad) shl mov cli mov (bad) (bad) fistp leave (bad) movsl adc mov mov movsb lods sub lock and das dec xchg sub out das mov call test inc vucomiss (bad) (bad) (bad) jmp out je inc pop push enter pop push add or test iret fldcw dec (bad) xor add jmp test pop or pop xor cmc mov addr16 aam push lahf (bad) (bad) (bad) lcall sub les nop pushf mov int lds es test pusha mov jbe icebp int lahf mov ljmp mov (bad) (bad) lcall adc sub js lcall lcall or adc jp fldl loope cltd rorl xchg loop cmpsl rcrl ja (bad) pushl cmp mov inc mov mov call jne mov std (bad) decl das cs mov ffreep int stc popf aaa outsl incl (bad) je mov cmp jno cmp (bad) (bad) push mov stos mov pop sarl pop push sub push pop in jp jns cmp mov lcall jl hlt dec sub bound xor out inc movsl cmp int (bad) fwait scas data16 insl push movsb lcall push cmpsl movsb bound or dec cmp push push mov (bad) mov sbb mov adc test jne (bad) out clc call lods dec cmp jp outsb lods loop ret dec addr16 call in in pop std call push jb in (bad) mov nop mov rcrl cmc test sar jg stos mov dec sti (bad) inc and test or scas ss pop cs jmp mov sub icebp mov mov mov mov dec dec pusha cwtl ret scas fidivl mov cmpsb out ss imul call mov jo aam (bad) (bad) (bad) call outsb jae ja dec pop sbb pop pop xor push cs loope ja (bad) (bad) (bad) lcall pop fisubrl mov push xchg ja stos sub addr16 mov inc and ret jmp adc cmc mov mov mov adc stos cwtl out pop cli (bad) jns repz pop xchg or jne jl adc jge (bad) js and push call fsubrs xlat or imul jb lods adc mov mov pop fildl vmaxsd push outsl sub ljmp pop lea sbb outsb (bad) negl push dec mov mov pop lea lret push mov or icebp sub dec rol adc into sub mov std outsb (bad) loop sub ficom or fiadd in loope pop aaa dec inc test mov ds sbb and (bad) (bad) mov mov repz mov ds sub fcmovb popa (bad) (bad) incl jg stos imul sarb xchg mov pop sub xor test iret fistpll rolb pop mov inc cmp in lret (bad) call mov jmp sub add loope fcoms mov mov (bad) out clc pushl xchg mov arpl xor lret les adc cmpsl pop cmp (bad) ljmp push pop lock lock xor arpl neg mov and in aas push scas (bad) (bad) fcomip jmp test mov mov ret xchg dec push dec addr16 sub mov and xorps jle dec sub jge ret (bad) sub add mov (bad) (bad) (bad) aas jae data16 push xchg push sbbb js sub pop push add int mov and xchg mov and leave aad and jmp push cs jnp nop mov jge cmp (bad) (bad) jmp ror fwait inc outsb inc mov jl test jae out roll incl pop insl add ss dec rorb (bad) decl sbb loop sub lret jl inc aas aas xor outsl jg mov setg andl dec jge mov cld (bad) (bad) call pop and mov (bad) out ja leave inc ret jb xlat movsl repz or (bad) (bad) call cmp dec lods (bad) cmp push mov shrb sbb daa aad mov (bad) mov inc xlat jb mov (bad) std into xchg (bad) xorl pop (bad) addr16 outsl sbb stos ja dec int3 jecxz mov inc das insl or jbe jo mov (bad) call adcl jne,pn dec aad cmp cs (bad) inc xchg mov loope push or mov in xchg js hlt imul (bad) decl adc jecxz popf sub sub dec sbb fnop (bad) (bad) cld mov mov pop sub or sbbl mov or inc add (bad) jmp (bad) mov lahf mov jg ret add pop shll (bad) hlt push and add xchg (bad) mov fildl adc lcall call mov and cmp pop add repz add adc ret pop lret (bad) scas inc jae (bad) (bad) lcall xchg dec movsb in push je dec sub jae jmp pop jmp fstl (bad) cwtl lret loop dec sbb inc call outsl imul out mov mov sbb nop in rclb jg pop xchg incb fild loopne push iret lret iret or insl mov add dec mov add add (bad) jmp aad mov mov mov enter call popa dec push lea cmp mov inc mov mov shll (bad) mov mov add in dec xchg les jg icebp call sub inc out repz fildl (bad) push inc hlt jle mov insl mov jb fisttpll in insb aam outsb into bound icebp sar sbb test (bad) (bad) cmp popa sbb xchg sbb mov push les (bad) jg xor ds adc out (bad) mov std xor xor inc insl push std jle push lods sahf aas dec inc pop bswap adc cld in xor outsb fsubrs sbb cmp sub fstpt shlb pop jbe (bad) repz push je popa in sub xchg pop loopne pop aam popa sub hlt inc andb mov fsts mov pop add insb mov stc mov jg mov jns lods in pop mov cltd jae jmp cli add add inc loopne sub pop imul cmc lods out clc lods dec cmpsl in cli pop loope insl ss (bad) fdivrl cmpsb movsl loope dec dec cs (bad) push add (bad) (bad) (bad) mov pop sub clc or mov das loopne aas inc bswap jg scas roll idiv ljmp clc sbb data16 les std movsl fwait clc cmpsl bound sbb (bad) (bad) (bad) jmp lds repnz out fild mov cwtl lret leave inc mov mov mov out call lcall int mov and (bad) test adc xlat mov mov pushl shrb loopne push inc mov insl in push mov ja popf pushf mov (bad) (bad) jg mov les std jne ds and mov call dec stos xchg pop sub xor pop (bad) movsl (bad) enter lock (bad) ljmp clc repz stc xchg std call ret dec iret aas movntps mov movsb les (bad) jmp pop aad adc imul lahf dec or and sub xchg add add mov test cmpsl mov incb stos dec xchg sbb fisub aam loope (bad) ss cmp push stos into jo ljmp adc mov loopne sti and clc mov mov in fildl hlt pushf je ljmp (bad) fbld mov stc push xor xchg adc xchg stc mov int3 push pop lcall loopne div sbb out rcl inc pushf mov adc sub adc test pop mov int mov divb lcall outsl pop movsl pop mov push into cmp fisubl stos xchg cmp (bad) pushl (bad) xor mov out outsl push (bad) sub scas push hlt arpl mov fidiv sbb (bad) call xchg outsl push cmp inc mov dec mov sbb mov xor and (bad) xor in mov stos dec fucomp xchg (bad) out mov out mov es cmpsb into pop jge mov (bad) fcomip decl jp or ljmp inc push inc xlat jb inc mov pushl popf pop mov mov mov jp not enter dec ljmp inc jbe ja push loopne jecxz fild int3 lods addr16 pop adc sbb je dec adc (bad) jmp cmpsl xchg js mov dec pusha add stc push add les dec js (bad) (bad) (bad) cmp (bad) mov stos and sbb inc mov mov fs fstpl repz mov (bad) push inc fidivl push adc pushf push mov sbb out insb pop xor outsb push (bad) (bad) (bad) incl cmp dec aam sub fcmove dec je mov (bad) imul pushl rcrl dec pop jp cmp mov mov fsubrs in mov insb lret std mov cmpsl xchg mov (bad) (bad) xchg data16 fdivr ret push mov int3 dec repnz clc (bad) ljmp fdiv popaw inc cltd mov cmp mov inc (bad) into insb out out (bad) (bad) (bad) pushl (bad) fbstp lcall push test push cmpsl lods clc lock jecxz mov (bad) (bad) (bad) inc xchg jnp inc mov (bad) xor add ret setno mov xor lds lods mov clc or pop ja pop and aad xchg stos clc mov rcrl imul and stc cmp stos dec inc fcompl enter jns push jb dec dec bound stos jecxz lock pop icebp jmp rolb ljmp cmpsl stc jns (bad) call pop xchg out in gs shrb jbe insl (bad) dec jmp lock inc (bad) repnz (bad) mov cmp pusha fcomps xchg fist sub cmp xor mov fwait ljmp (bad) (bad) (bad) rorb movsl sahf jne das jl dec call jg push fs fwait dec pop or (bad) inc mov mov mov mov inc (bad) call pop or stc les push jne int sahf aas mov xor iret jg sbb movsb out push scas in nop movsl adc dec mov mov cli (bad) (bad) jnp inc jo lret xchg cmp repz scas insb jns sub outsl das cli pushl stos push pop xchg push scas ja xor fnstcw ljmp adc sbbb inc out mov call jp (bad) imul fisubr rolb mov in lock xchg inc adc mov pop hlt lcall aad out addb cmp and push out iret push pushl call jmp sbb pop add jb imul (bad) inc (bad) iret jo fcoml mov and mov jmp xchg fcmovnb outsb mov outsl (bad) ljmp clc mov nop mov sbb sarl lds adc pushl cmpsb hlt iret sti inc push add add out push inc dec push mov add inc in inc mov push push xor add roll and stos pop ja sarb lods (bad) (bad) (bad) push fcomp adc mov ljmp jae push jl jbe jecxz dec sub xor mov cmp lods outsb mov add loop fwait aad mov push adc sar lcall push sarb (bad) (bad) (bad) fdivrl or mov sarl hlt lret arpl and or xor aas cmc cmpsb je lock (bad) fsubs lcall imul mov std ljmp jge bound rcl pop pop inc or mov inc mov out lret cmp inc jnp push mov push clc add fs inc ljmp and push pop add or adc sbb fstl push sbb rcrl mov sub lcall enter ret cltd arpl cmp enter (bad) lcall insl aaa push icebp pop cwtl cmp scas iret cmp cmc cmp jbe test push mov (bad) (bad) jmp sbb adc pop scas jp mov addr16 mov (bad) ljmp cwtl sahf or dec sub test pushf (bad) mov xor inc arpl cld scas pushl add loop mov scas jnp xchg mov jnp out out (bad) jae (bad) out mov jg loopne add loop repnz xor or (bad) (bad) decl dec subb gs addr16 out outsb inc xchg cmpsb (bad) (bad) lcall loope out mov mov mov mov sbb xor or dec push xor pop icebp xor (bad) (bad) decl ljmp int shr add insb xchg mov push add (bad) (bad) call aam inc (bad) imul dec cmp test cmp (bad) (bad) (bad) mov vunpckhps pop insl xchg dec (bad) iret inc inc ret pop mov ds shld insl stc cmp mov push and mov xchg in (bad) jg sub xchg dec lock jne arpl in movsl lds adc stos fldcw fldcw call aas movsl out dec (bad) jno scas sbb lods imull out (bad) mov add or sub xchg nop inc mov jg pusha int3 or stos lods cwtl pop leave mov inc mov inc nop sub push sub rcl dec test cld pop push cmp mov pusha push add (bad) ljmp clc in push adc sbb testb fidivl ret dec push int and (bad) decl pusha add dec mov aad xchg shll negb rolb mov (bad) (bad) mov pop fwait hlt hlt cld push xor pop push sub (bad) daa popf (bad) jne cmpsb cmp lock push xchg (bad) ljmp fwait inc mov aas sub mov adc jnp shrl xchg or leave dec jns pmaxub (bad) (bad) call iret lret out mov push ret adc lods cmp mov sub sub test loop inc iret jbe mov (bad) push mov or cmpsl adc cld push cmp (bad) (bad) call xchg (bad) negb lahf pushf popf xchg pop cmp sub js outsl rep pop mov decl sbb imul out jle gs (bad) (bad) decl inc jb inc push jb in daa pop jmp in test push pop int xor (bad) mov das or push mov jecxz lahf xchg jnp xor adc je mov pop test pop in (bad) (bad) (bad) incl and mov insl lods ss imul lds dec les je dec mov jne arpl (bad) outsl movsl shld mov (bad) dec xchg xchg pop sub sbb test (bad) (bad) (bad) fsubrs lret repz jp lea jae negl sahf (bad) mov or sub adc mov adc push popf push cmp xor xlat cmp call popf or fcomip jmp inc pusha and addr16 ret shr pop cwtl iret push test cbtw lcall lahf mov add adc xchg in xchg sbb (bad) jg sub fcmovnbe setbe dec fs movsl je inc mov in enter mov jae push adc ds (bad) mov mov xor (bad) mov cmp pusha inc test mov mov xchg mov and cld (bad) cwtl data16 cltd sbb jb (bad) mov (bad) dec sub pop in jle mov xchg fsubrs repz nop decl cld jg sub jge,pn jl cmc cwtl hlt scas mov insb pop icebp pop loopne sbb out xor dec pop pushf push loop insl cmp (bad) ljmp push jbe fwait cmp (bad) jne cmp push and (bad) pushl cmp xor jne popf jle lcall mov (bad) decl push push pop fisttpll cmp sub ds stos cli loopne sbb mov inc mov aaa std ljmp int inc mov scas mov rorl jp movsl xchg pop mov (bad) (bad) (bad) call and ss and inc test xor or mov sarl shrl fistpl lock jmp dec cmp sub push rorb jp (bad) mov and mov fs jg jmp xlat mov cmp dec add (bad) (bad) ficoml cmp les mov inc xorl mov mov and (bad) (bad) (bad) pushl fdivr push mov cmpsl in mov add dec mov arpl or cmp adc add push push push enter incl cld incl ds pop mov ljmp pushf rolb jne sub (bad) (bad) (bad) jl push (bad) xchg popf pop adc xchg adc sub stos nop mov test (bad) (bad) jmp mov lods pop sub das jl fsqrt or mov aad (bad) ss mov sti mov and (bad) (bad) ljmp hlt lahf call sub aad mov sbb xlat pop mov hlt pop cld ss inc mov inc add sbb cli das clc (bad) lcall pop pop cmp or mov push adc or (bad) (bad) cmp imul sbb ret cmpsb stc adc or cmpsb push addl mov push mov popa mov mov cmc gs jg cmpsl mov mov lock or cmp scas mov and push loopne mov xchg movsl xor mov pushl std or and rcrb or cmp add in and andl and mov push sbb mov mov arpl pop ljmp scas ret in lods or lea jbe int xchg add (bad) call adc and mov jmp std (bad) (bad) (bad) lcall pop shlb jge cmovae das jb addr16 into iret dec lret mov (bad) (bad) lcall inc jae or loopne imul mov cmc bound cli sbb pop enter (bad) (bad) (bad) dec imul scas xchg (bad) clc mov or inc xor pop rcll adc cmp dec arpl xchg sub mov jnp jg (bad) jmp inc mov and jno adc cmp stos loop jne (bad) (bad) (bad) pushl sub dec out int3 mov gs stc dec cltd push inc jae mov pushl cld lock stc movsl lea mov jg sbb out fisttp icebp xor push jnp (bad) (bad) mov mov enter xor cmp pusha cmpsb in aam movl xor je jge mov mov (bad) (bad) (bad) pushl scas pop xor call xor aad cmp stos in jno ds (bad) (bad) ljmp arpl push cmp int adc cmpsl adc lods push jae or cs pop jns (bad) (bad) jmp xor sbb rcrb lea adc mov out sbb add mov xor push shlb bound lcall pop mov (bad) push ss loopne cmp cmp or lods (bad) cltd adc ja push mov lcall ljmp mov jp add scas xlat pop hlt lcall xlat add push fimull in jp push add ret or jg pop xor mov insb mov ljmp es sub sub dec push (bad) les ja push mov call push inc mov and sub and inc divl cmp test pop sub or rclb sti sbbb add jmp clc (bad) fsubl mov dec add dec cmp mov xchg push leave xor incl jl mov pushf adc incb xchg inc movsl adc push or sub mov (bad) ljmp aad sbb test mov inc (bad) mov mov imulb stos (bad) in ljmp push pop fsubr xchg outsb rorb (bad) in xchg lret dec inc out dec (bad) xor jnp xor (bad) (bad) dec inc jae jecxz scas int3 cld pop arpl cmc in xchg jnp dec in in mov push in imul hlt bound sbb call hlt aad (bad) out push mov mov jg (bad) pushl in subl (bad) mov jne clc dec aad mov in jbe and fcoml add inc sbb pop inc subl (bad) jmp sub inc dec outsb fcompl jmp mov fcomp stos in cmc fiaddl xchg pop leave mov repnz and fldt lretw add (bad) pushl cmp aam test mov arpl scas fsubrl dec push pop cmp fwait rorl jp fwait ss jl sub leave fnstenv cmp bound (bad) (bad) (bad) pushl (bad) pop inc stos outsl fldcw xchg xchg into dec movsl je rorl ja (bad) (bad) (bad) jmp out mov xchg add dec mov push mov insb mov hlt ja clc xchg (bad) loop cwtl mov out mov idiv sub call test cli jmp js xor loope cmpsb pop movsl fisubl cmc (bad) jmp xor mov cmpsb jne xor push pop and stc cmp (bad) incl fidiv out adc adc pop sub rolb std (bad) lcall loopne adc sub cmpsb scas iret pop mov dec shrb pop or jp movsl mov xor outsb insb push sbb popf push hlt stos hlt jno das xor sub frstor adc xchg sbb mov mov sub push fs ds fidivl out push (bad) cwtl pop fidivrl insl adc mov mov or jmp cmp shl (bad) (bad) (bad) jg pop push push sub push add jmp pop add xor aaa mov call data16 xchg in push sub add lcall push lods les fnstsw sub aad lret pop mov sub mov stos sub push jge push sti call dec scas or fisubl cmpsb stos mov jg mov (bad) jae mov jb dec call ljmp push pop cli out dec out inc mov pop repnz in ss or testl lock fisttp icebp addb je lds cmp cli (bad) pushl ds and pop adc notb pop mov ljmp mulb fcmovbe and (bad) (bad) ljmp std add aas in repnz mov inc outsl sar clc pop mov mov leave xchg mov fucomi clc inc js jg mov mov fbld lcall scas clc dec loopne aam push cmp cmpsb mov lret in pushl pushl fildll out mov add mov dec sub sbb sbb pop pop js mov stos popa inc test jg out call mov push int3 mov xchg mov (bad) pushl xlat sub loop cmc jmp jle jb lret std (bad) ljmp ss jle in inc inc xchg orl sub sar (bad) decl dec pop insl mov ds adc or rcrl xchg xchg dec mov (bad) enter (bad) (bad) decl (bad) cmc fnstenv mov stc jecxz (bad) xor mov jmp sub pop icebp and test es or mov adc sbb cli (bad) (bad) in xor sub aam mov (bad) cmp adc (bad) mov xchg ficompl popf out (bad) stc jge fidivr xchg (bad) jg dec sub mov repnz push movsl popf in sbb (bad) (bad) (bad) mov add cmc fwait mov fsts jne mov sbb sbb fisubr (bad) mov out ja out pop jb cmpsl std (bad) lcall shrl daa or call adc add (bad) call mov stos fsts out pop dec notb push xor adc (bad) inc cwtl dec leave sahf (bad) stos scas lret repz jns dec push sub inc pop cmp fisubr (bad) imul push test (bad) loope in dec jmp push ljmp cmc mov dec aaa add jne sub jp ljmp mov dec push aad scas loop xor js cs repnz call push rcll mov cs (bad) jmp stos out subl test in push scas mov push out mov outsb add (bad) (bad) jg push fisubrl hlt xchg inc out test rclb and (bad) (bad) call (bad) clc or adc pop sub inc lds dec push and (bad) lcall fstps push cmp ja and mov (bad) loope push in lds flds in xor rclb cmpsb bound imul push add sbb jecxz jb (bad) dec push loopne popf (bad) (bad) mov ja pop xchg pop lds xchg inc das adc mov jp,pt push pop cmc (bad) (bad) decl ljmp mov movb int3 jns int3 dec push lcall push sbb xchg (bad) test cmpsb and stos push sbb rcrb jecxz hlt ss shrb xbegin fs or dec mov iret mov sub push (bad) hlt fisubrl jbe mov mov cltd lock inc (bad) sbb mov pushl jmp mov xlat pop in pop sub xor pop std fild pop push jge mov lock std mov sarb pop jp idivb not jle decl cmp sahf xchg mov repnz push and lea bound in imul (bad) (bad) inc insl jp xlat push cld (bad) test call cld outsb (bad) add mov (bad) mov jnp sub das pushf sbb (bad) mov cld das jg pop and (bad) mov outsb xlat dec popf push pop mov xchg in incl aad div gs int lcall (bad) (bad) (bad) in mov or pop push jl inc mov jecxz ret aad es inc jae push notl (bad) (bad) (bad) pushl add jg push aad (bad) lahf lret leave and sbb lea les sub pop icebp fucomip cmp out ret (bad) (bad) (bad) push lahf ret insl (bad) imul (bad) rorb mov ss add ss pop xor dec rolb jp fisttpl push rcl lcall ret insl pop xchg rorb and inc lea push (bad) (bad) fcos mov cs cmpsl test (bad) movsl mov push (bad) push fsubl dec fnstenv repnz mov inc cwtl cmpl dec (bad) (bad) je dec scas jmp sar (bad) (bad) cli and into pop mov mov pop lret int fnstenv outsb mov outsb dec xor sarb pop popf dec loope cs (bad) jg (bad) mov out xchg int rcr lret (bad) icebp cmp nop aas xor idiv dec enter adc (bad) pop les aam mov pop shll outsb lea inc sbb xchg aas push pusha mov (bad) (bad) fdivs popf push and loop lods bound mov dec call lret mov mov (bad) lds inc (bad) mov bound pop fimull mov cmpsl push xlat outsl pop (bad) (bad) (bad) js (bad) (bad) and dec fldl in adcl mov scas xchg out repz xor xchg inc loopne pushl mov es sbb cmp imul out push (bad) lods aaa inc jae lods dec adc pusha jl ljmp outsl dec jmp (bad) cmp push and divb (bad) pushf std negl in pop mov clc and mov adc jg outsl mov stos call inc insb psrlq add pop aaa cltd out lret mov xor mov lea jbe push fldenv inc ror push gs mov les nop and es jns cmp cmpsb pusha (bad) (bad) (bad) or jmp xchg dec adc movsb imul arpl xor (bad) clc sub out jns call clc movsb call push int ja inc xchg xchg test (bad) call push mov mov sub int clc in (bad) rolb add adc in and jecxz jl jns sbb aas call push inc xchg test scas sub dec xchg hlt ljmp out jmp enter sbb add stos dec insl aas cmpsl adc push mov das add or (bad) jg sub dec and sub flds push out lods or incl mov dec xchg dec test or stos mov in mov add inc pop enter scas mov notb ljmp daa pop sahf test mov loop dec push scas dec aad (bad) (bad) (bad) jmp mov inc out sub stos lock mov add pop adc test add rol ds arpl das inc stc inc jg mov icebp mov xchg fstl test inc xor (bad) push (bad) (bad) (bad) (bad) call mov fist cmpsb cmp mov add xor cs mov sbb mov decl push push or jno push push outsl cmp incl push into sub fwait rolb imul sbb pop sub dec xor (bad) lcall push mov push cmpsb xchg jnp mov push fwait inc xchg lret out mov dec shrb cmp (bad) mov (bad) out scas enter scas add ljmp mov and cmp out nop push adc in xchg mov ret pop idivb and (bad) (bad) pushl pop scas imul clc cmp ss les jge and sbb push (bad) (bad) (bad) pushl sarb out mov xchg ret mov outsl sub push or add jle cmp inc insb pop (bad) (bad) (bad) decl dec outsl push popl lds aaa pop xor jle repnz popf mov xlat cmp mov outsb jp jl shll lock jne jb cld (bad) (bad) ljmp leave xor and lret jg cmp dec adc imul es incl inc movsb cmp mov popf imul and inc cmp xchg outsb mov pop in icebp adc xlat jle and add pop mov mov mov je mov scas imul xchg jnp inc in sahf mov ret in adc das cmp or mov hlt pop (bad) aas or repnz out push jae push pop lods out (bad) jp sarl dec lea xchg dec sbb and jl cltd pop hlt (bad) jmp jge jo in sahf push aad jne push jle cltd xor (bad) (bad) (bad) (bad) frstor push mov xchg fisttp mov negl lret cs mov in jbe testl inc jbe test mov (bad) pop scas dec test loopne call mov adc mov (bad) jno (bad) (bad) mov popf sub pushf mov push cs sub xor sti out clc lcall sahf ja in aad imul and push stos bnd (bad) jg pop xchg pop jg hlt push xchg push and and aaa cmp adc decl ja inc sub sarl ret xor xchg sbb jne cmpsb push (bad) pushl dec loope ret insl or enter xor test hlt leave aad (bad) (bad) jmp (bad) popa inc scas pop xlat scas scas inc leave inc fimull out xchg dec cmp mov fmull sub mov pop pop out ljmp cmp mov fsubrl push ja (bad) cmp inc (bad) mov pop push jl stos scas cli movsl xchg push (bad) int clc movsb aas stos hlt lcall test lods (bad) hlt mov pop aaa add (bad) call lahf add inc loop lods fisttpl arpl mov fidivrl (bad) (bad) pushl and cld faddp les dec (bad) enter push cltd pop shrb or call push lods pop and and pop cli std inc ficoml lret roll pop add xchg popa mov dec incl clc ja xchg pop (bad) mov ds mov mov (bad) ljmp mov push jo adc insb cmp fsub add ljmp (bad) sbb cld mov mov cmp mov inc xchg mov shrl aam nop cs ud2 mov sub and insb jge xchg inc (bad) ja push sub (bad) call gs popf int es dec sub ret clc lret cmpsl sbb jmp mov add cli dec push push call (bad) call test mov rorb push inc add mov (bad) call jp adc in sub repnz stos push or add fisubr push mov cli (bad) lcall jae push sbb sarl dec pop lds mov ja xchg aaa ja clc fmul (bad) mov (bad) decl cmp lods rcrb call scas xchg mov mov inc fdivr pushl out scas sbb fldt push or sbb jae (bad) (bad) (bad) lcall mov and or push repnz cmp rclb add (bad) enter xchg aam dec inc lcall shr sarl lcall adc sahf jb sbb loope add adc xchg decl aam imul enter insl sub cld jmp rorb fdivr ja and pop aam or mov or ja loopne rcrl insl or adc insb cwtl push dec scas jge and or and fisubrl mov cmpsb imul mov dec pushf ret cmc dec xor mov stos nop sbb mov adc fmulp and and pop xchg sub (bad) lcall xchg adc jns mov push adc and add sub leave pop jp aad pop lock scas hlt hlt dec dec cs fdivrl sbb (bad) jns (bad) pop pop loop inc push mov and stos inc cmpsb incb push int3 (bad) push or push loope jecxz or (bad) (bad) decl xchg (bad) xor or push inc clc cmp in out add lahf aaa loop adc cmp xchg inc dec jp cmpsl xchg ja push xor std mov push aam mov mov (bad) ljmp js cwtl sub outsb push mov out dec mov movsb xchg je (bad) jmp (bad) dec rcr cld jmp mov push ss cmpsl out jnp add xchg decb fbstp clc or loope fnsave inc pop cld cmpxchg fwait cld push insb lock cmc dec nop aas (bad) repz and fisttpll and stc pop jle jb cli push push add repz mov clc pop xor es cld pop icebp jg cmp lret xchg mov aaa das daa cs test mov out imul sbb inc sahf mov sbbl jmp out lret int (bad) (bad) aad lret ds dec (bad) jmp fs cmp cmp lret xor sub or lods dec adc dec inc mull inc fdiv aad fnstenv (bad) jg mov sub test add sarl mov xor out cmp (bad) (bad) decl pop in xchg pop outsl mov dec fstpt xor sub in lahf adc outsb fidivr inc jle xchg xchg clc das inc xor sbb popf lock (bad) ljmp cmp pop cmpsb pop outsb push inc mov sub aas mov fiaddl (bad) jmp cld cmp cld pop mov push (bad) (bad) (bad) decl loopne nop cvtps2pi sub sub jno lcall gs (bad) (bad) (bad) (bad) push loopne adc dec aas sar imulb cld mov ret dec bound xchg pop xchg in fildll sbb mov int3 fisub (bad) in lds (bad) mov pop iret fwait xchg xchg lock xchg or leave lock (bad) (bad) (bad) mov pop clc dec call lods dec sub das pop jmp scas icebp leave push mov lcall fcmovnu into jbe out xchg and push push sub test das mov (bad) decl ss push cmpsl mov mov enter hlt scas xor jo shr jg aas rcll jg mov or dec cld sbb sub pusha jle call outsl mov xor in daa or jbe lock in cli stos lret xchg adc aam cld pop negl jmp mov push xchg (bad) mov cmpsl out xorl (bad) jp xor push jge cmp cmp lcall ja icebp jecxz adc ljmp testb nop lods add arpl sub loop push in aad lods jmp push cli pop sar outsb int jmp fistl xchg pop dec fimull cmp mov sahf subl dec and shlb mov lods xlat ss xlat sub pop fadds imul (bad) incl jl sub pop (bad) mov sub dec les outsb repz (bad) (bad) (bad) call xor cld std lock dec mov (bad) mov and push movb enter (bad) in jae fs cld aam cltd mov (bad) pop or out sub fbstp out jnp scas jno sub adc test and dec pop mov dec aam xchg inc scas pusha gs ss or dec mov and rolb and mov mov out test cmp and sti lahf jp and (bad) (bad) pushl inc mov aaa jmp jmp in sbb sub call dec clc mov icebp (bad) cld pop arpl push jb jge shl sub scas pushf add push pop adc mov (bad) pushl in dec and popa andb test aaa scas popa je cmp adc data16 rorl inc aaa out faddl push es dec or (bad) jno into lds lock mov daa jg lods aad out push (bad) (bad) (bad) call pop cmp mov outsb push ret (bad) in xchg mov stc hlt mov mov (bad) mov nop pop adcl stos loopne lea push movsl jnp xor outsb xchg lock out repz jg xchg add aad (bad) (bad) (bad) fcomip pop fs pop sub cmpsb push loope mov mov pop imul ljmp cs mov (bad) pop lcall cmc cs (bad) mov xor fcmovne mov mov mov or push add dec inc es popf (bad) sti and data16 (bad) mov inc push fcmove popf insl pop outsl (bad) (bad) lcall arpl test ja jge es notb and ret (bad) (bad) call repz and push ret test (bad) stos xchg in fildll jl (bad) call pop lcall (bad) (bad) (bad) pushl cltd sbb inc jl jne (bad) gs xchg pop xchg imul jmp mov aaa add in sub bound xchg loopne cs das popw mov push (bad) mov pop or enter mov rcrb pop xchg call fcomip or inc add test in mov (bad) mov pop mov cmp (bad) jg add jl mov in mov aad push fnsave decb jle movsl pop (bad) insl jg pop push mov es lods push cmc and int3 mov and hlt fbld stos mov (bad) (bad) (bad) out cli push and mov cmpsb pop shll rorb pop sti ficomp cmp (bad) (bad) jp lahf push cld dec dec mov inc leave pop aad fstps iret xor mov jns cmpsl ret arpl sar gs testb scas sbb sub add fild cmp push add (bad) (bad) pushl adc mov stos lods pop fdivl push ljmp stos sbb movsb add (bad) (bad) pushl stos (bad) mov mov sub js dec jns mov aad ret cmp pop (bad) (bad) (bad) lcall mov les fidiv cmp faddl mov lret cli (bad) jmp movsl push mov sub lcall aaa mov xor mov sbb cmc inc xlat mov pop (bad) mov out cwtl jp jp add cmp pop jo and mov (bad) inc popa pop jae cld addr16 xchg pop push andl addr16 pusha xor sarl push mov cmpl cmpsb cmp outsb push mov lds ljmp mov loopne,pn test loopne sbb outsl cli mov insl push push sub leave mov sub leave test test pop sub (bad) insb mov pop scas (bad) fwait (bad) (bad) loop add faddl es cmpsb cli inc push int mov mov lods mov jmp negb decl cmp push popf andl dec enter mov push (bad) clc add cmp jp cmp xchg es es in jns jl mov hlt loop (bad) mov ret dec lcall mov (bad) adc sbb or adc dec out pop dec or iret dec and mov (bad) (bad) call cmp xchg mov mov jp lea inc clc lods je into (bad) jg dec cmp xchg lcall cmpsl adc (bad) (bad) pushl and fcomps fdivrs (bad) stc lds xor or and xlat pop mov pop mov adc sbb test mov pusha jo fstpl inc add inc mov (bad) (bad) fisttp sbb hlt pop mov push xchg scas mov push addr16 (bad) in (bad) aaa cltd clc test add push mov (bad) (bad) mov fdiv mov push inc cmp jnp jae iret inc push cmp (bad) call mov cwtl pop sub mov test mov push test sub pushl cld movsb insl ret xor sarl daa or (bad) xor inc sbb (bad) (bad) jg inc cmp scas xlat and enter push mov pusha stos popa cs jnp ficom loope sbb scas (bad) ljmp inc push adc ss les (bad) (bad) (bad) jmp cwtl imull adc loope pop fwait mov imul jbe (bad) mov movsb add das cli sub scas jnp cmc loop lcall jg add sub fidivr mov sbb adc mov decl and inc mov pop push enter jle mov sbb push mov jne loop jne push cmp out push cmp jecxz ljmp loope jecxz (bad) (bad) jmp mov fmulp mov pop adc imul scas outsb (bad) (bad) (bad) push xor xchg xor xchg ficomp dec scas mov ret stc aam ds cmpsl mov dec scas inc aaa mov inc lods aaa (bad) xor bound mov (bad) jmp lock jns cmc push out in std iret inc adc mov cmp mov data16 push addr16 push outsb adc cmp mov mov in xchg hlt add (bad) lea xchg sbbb pusha cmp inc sbb scas pop iret fidivl pop lods push mov jg push mov push stos sub cli pop and (bad) dec sbb in out idivl mov add jg lock pop dec add xchg out dec out (bad) push js mov in (bad) mov jns aas lds test jg ss idiv mov push les jg pavgb sti jl loopne test pop cmp xor in pop loopne shrd pop outsb jo aaa ret push shrb fnstenv pop std je fcmovu inc mov fcmovu sar mov aad movsb xchg or or pop out repz mov aaa (bad) (bad) sbb cmc (bad) (bad) lcall andb shll sbb xchg sub pop in mov and pushl dec adc in jo dec jmp mov (bad) jmp call dec inc xchg lcall sahf pop mov pop add (bad) (bad) decl jp mov aad outsb jge mov hlt out dec pop inc cmp mov lea mov mov fdecstp dec mov outsl jle push jl or (bad) cmc emms fdivrs push insl std jge xlat loope cmp (bad) call dec hlt inc pop fistpl dec repz loopne cmp test and ja mov jecxz cs mov adc mov sbb mov xor movsl pushl sbb loop repnz push pop mov shr out add outsb std (bad) jle mov cmp mov stos xor test mov insl (bad) decl dec ret mov ret aas inc jle repnz (bad) dec xchg mov stos repz cwtl jb mov loopne cli es clc jno std (bad) incl xbegin pop pop shll cmc aas pop (bad) call mov enter cmp mov jmp mov (bad) jmp cmp jp in pop daa dec jbe cli mov std sbb xchg repz imul (bad) dec mov pushf cld scas mov adc sti jns call add mov ljmp scas push mov lcall mov cmp aaa cwtl jnp ljmp mov decl push pop cmp rcrb mov iret (bad) (bad) (bad) jg (bad) push imul jmp enter fcmovu or scas mov leave fwait incb incl pushl jne mov inc nop sahf cltd xchg cltd insl leave mov neg cli pushf jns mov lret push (bad) popf xchg push xor push xlat ljmp aaa xor add (bad) mov inc orl loop jnp ret repnz sbbl imul sub (bad) (bad) (bad) mov xor call sbb sub (bad) lods ds ret das cli inc jno adc in or and pop jp ret loopne into pop cs and decl ret arpl or test and ficompl inc test push dec push mov xchg dec add (bad) loopne stos das push lock das stos adc test or mov clc jb inc adc (bad) (bad) movsl rolb adc and loop push or and jmp test mov loopne jo jne lods (bad) jg test into fwait (bad) push inc lds xor ret sbb loopne inc inc dec lret aad sbb je mov (bad) (bad) jmp rclb jp jecxz xchg add gs daa sbb fisubr mov ljmp (bad) lcall pop call or rclb fs in imul sub clc sub push sbb lods fstl cmp mov mov (bad) sti (bad) lcall shrl jmp or sub jg inc add adc xchg jp imul std (bad) cmp xchg cmp loop movsb xchg lret sbb hlt dec fisttpll shr and ja (bad) ljmp jo outsb cld (bad) xlat aas out mov add mov jbe sub lds and and sbb sbb sarl stos aaa push push push mov popf jne and adc add idiv out test ja stos repnz out jp jne inc push (bad) mov fnstsw clc (bad) mov insl sub je sarb adc (bad) jmp xchg xchg leave jno sub xorl (bad) lcall add adc mov shll push data16 popf mov mov sbb add in pop ljmp je xchg test or movsb jbe dec push in xlat ret jg call ljmp jo pop inc mov insl pop es jecxz aaa std call je (bad) js dec pushf aaa arpl sarl mov cmp icebp decl (bad) mov insb in xchg push scas push (bad) and sbb adc push stos push inc cld push (bad) cmpsb or add shr or xchg hlt pusha fwait xchg fbld cmp leave int mov ss jp pop dec fcomps lcall pushf rcr xlat push movsb enter or cmp push xchg in pop or lods fwait sbb mov cmp (bad) (bad) pushl (bad) dec in jae lock xlat pop out ret lods jne mov sbb push inc dec xor add pop jae cld ljmp (bad) fmuls xor mov aad mov mov ja ljmp mov test fiaddl aaa push fnsave js push sysenter fnop jg enter mov insl push xor leave (bad) (bad) out adc cltd jns,pn and pop fistl jge sub nop and lcall imul in mov stc pop (bad) lods pop cmp movsl (bad) (bad) jg pop xchg cmp lods xor cmp adc enter (bad) (bad) sub push pop popf out or push outsb scas mov sub fwait mov sub adc das clc pushl push adc or inc scas push ret test xchg mov in (bad) call push jo stos (bad) push or jnp fimul mov push popa cld (bad) call sub inc inc lahf dec es out test pop cmp sarl hlt (bad) cmp jl dec add cmp clc dec aas mov xchg mov xor inc into inc mov jo add popa ret (bad) shll mov (bad) call mov in push test or cmp sub loop jmp (bad) push pushl or in int dec mov pop clc adc push mov mov ljmp rolb push xor jns movq jl mov inc hlt sarb sbb (bad) xor nop popa cmp es xor (bad) incl rcll mov push mov adc in and (bad) cmc mov inc jg adc dec lods sbb out imul inc clc inc ficompl imul ljmp cmpsb mov dec mov jp jge idivb xchg aas pop dec inc out cs movsl cmc xchg cmc jmp and dec mov sbb sarb sbb icebp outsl mov in push iret lods incl xor int3 ds sub idivl add stos pusha fsubrp inc in pop in adc dec jecxz push adc sbb jo xorl fsubrl jg dec push loopne inc jle or dec shrb enter movsl test stos (bad) mov pop push cmp lcall lcall inc dec and dec test sbb dec jge cmp stos jl cmp (bad) mov std pushl dec sti push outsb fst add dec mov add dec pop cmp mov mov out (bad) das movsb lock in cmpsl sbb adc mov push (bad) fcomip call aaa xchg push xabort mov pop inc jg sbb dec cmp fnsave test push push push xor adc ss adc lods (bad) decl repz pushf je jnp iret dec xchg push in in mov add in aaa cld clc daa iret push leave or lret push pop mov sub pop xor dec sbb cmp mov xlat stos cwtl cmpsl mov (bad) pop inc pop arpl (bad) mov clc fwait (bad) sub sub lds out std (bad) mov rcl aaa and bnd dec push hlt insl push or and call les xlat cmp add dec push das jo cmc (bad) (bad) incl push jmp popf push and inc add sub sbb enter inc lret loopne lcall sbb dec mov push and cli xlat inc (bad) nop (bad) (bad) call cmpsb jle lods pop je sarl push mov je (bad) (bad) (bad) (bad) cmp fs adc add pop sbb fwait mov fisubr lret ret into (bad) (bad) jmp push leave fidivl insl outsl push sub enter jg in pushl ljmp adc mov sub stos cmpb sarb add incl jnp fnstcw mov adc test outsl (bad) call mov out repz sahf lock push (bad) rcrl repnz (bad) (bad) (bad) pushl das cmp outsl pushf mov popa out lock cmp push pop jmp hlt (bad) (bad) (bad) (bad) fucomi adc mov mov xchg mov add movl xchg call ficoml repz pop mov and sub xor (bad) mov out bound inc and pop call lahf mov (bad) aas and insl dec rcrb mov insb jnp (bad) (bad) (bad) call mov cmp aas (bad) sub decb jge cmp idiv (bad) (bad) (bad) jle divl inc sbb dec pop cmp pop push xchg cltd sbb lahf das (bad) lcall or and mov xchg mov pushl ret shrl enter jp int3 xchg xchg jle jge int3 (bad) fidiv popa outsl jge rep add jg ret mov push mov dec insl stos pop push daa cmpsb (bad) (bad) (bad) aas daa push imul adc sbb jae cmp xchg lock jg (bad) fchs imul (bad) push movsb popf fwait cmp leave inc mov mov xlat inc popl iret mov inc std jo cmp (bad) std aas jae lahf out data16 ds sti aas addr16 fstps psrld es (bad) jmp scas inc insl dec es (bad) outsb pop scas cmpl xor adc out clc ljmp mov not mov mov lods jle insb dec jmp outsb xor fwait clc jg (bad) (bad) (bad) cltd jne inc insb xor out pop pop mov hlt out aas in mov popa out sub jmp mov cli ljmp or jb icebp (bad) fpatan mov mov (bad) add out xchg lock aam mov add adc and and out fnsave pop bound pop mov push push fdivs lahf negb mov mov stos cld data16 fcoms les (bad) out cmpsb push (bad) mov out repnz cmpsl out and std mov pop push push xchg mov in iret loopne int3 push pop outsl js int repz insl pop insb or push (bad) ror fldcw sbb mov push pop hlt bound out int (bad) fisubrl decl jo or lret imul gs out fidivr movsl scas lods xlat cmp push jbe les call inc push lea xchg aaa xchg clc xor pop cmpsl dec pop (bad) movsl push ficom pop (bad) loope (bad) call rcrl ficompl das jns adc mov jno das arpl lcall idivb adc nop nop cmp push int3 arpl or in imul fcmovnbe ja sub pop sahf dec int (bad) (bad) sub (bad) (bad) (bad) (bad) (bad) xchg mov fs mov dec icebp pop cmp arpl mov ljmp inc add adc mov jecxz or mov lea adc push inc and pop stc pop jno xorl mov sub inc das pop clc (bad) fbld add in dec add cwtl stc or mov sub lock mov push dec add mov dec rorb dec jl (bad) (bad) (bad) ljmp or mov sbb nop mov movsb dec aas lret (bad) lcall cmp lcall add inc pop push enter pusha es outsl xor imul insl (bad) mov out cli or push sti jecxz xor test loope cmpsb xor pop jb (bad) (bad) push sbbb sub stos mov push add (bad) imul mov in mov repnz xor aad lret lret rorl aam ljmp add (bad) jp imul lods out pop push xor xor (bad) (bad) ljmp and int pop fidivrl scas imul pop push bound push lock fisttp jo fstl iret imul cmp cmp fstpl add (bad) out mov lcall cmp xlat push (bad) (bad) jo mov sub push cmp jmp das jb sar call rcrl cmc (bad) mov imul cmp jg out fnstenv aaa sbb mov ret dec pop mov dec adc jne xor push sti lcall push push jae sub leave ja add inc pop sub scas loop mov pusha test push aad pushf incl sub ja sbb fisubr pop sub cld (bad) decl popa (bad) out js push inc stos scas jnp jae and movsl (bad) in mov sarl shlb (bad) decl mov push movsb sub shl mov fcomp addr16 ret (bad) cmp sub pop xchg addr16 stos movsl jbe (bad) icebp fisttpll in mov mov jae or scas insl (bad) dec incl outsl enter cmp js push inc xchg lds pushl pop pop push ret lahf imul mov jmp test mov rcr adc cltd adc rcrl xlat aas ss inc jb (bad) (bad) pop add pop scas cli (bad) call adc es mov mov outsl imull (bad) mov aaa out cli push adc outsl and push xchg lcall mov aad sub sub stc and (bad) iret lods mov inc ja ljmp in (bad) fidivl (bad) jbe std push sbb sar scas lea outsb sub stos inc xor (bad) fcomip pop (bad) mov addr16 mov mov (bad) adc jnp fnstsw (bad) (bad) push jns sub test fisttp sub arpl cmpsl stos push cmp mov scas adc xchg dec ljmp lods pop std call mov sub xor mov sbb test jg out jbe jo notb or cld pusha xor (bad) (bad) (bad) (bad) jmp cmpsb std in cs push push push pushf mov cmp push xchg cmp pop xor and ljmp pop push jb fs dec push or gs in out sub insl js je cmpsl imul movsb loope es clc lds int adc add mov imul (bad) (bad) mov mov in fwait testb mov in out adc lcall movsl clc popa aad push outsl into mov add (bad) (bad) decl popa add cmp cmp inc insb ret xor (bad) mov (bad) (bad) (bad) ljmp pop (bad) pop (bad) mov jp mov xchg mov outsl jae push mov jns lcall mov and je lea pop fadds incl mov dec jg hlt mov leave sbb inc adc jns fildll ljmp add lcall aaa sbb push pop xchg inc rcll inc sub xchg push (bad) (bad) (bad) incl xchg xchg lret loope xchg mov loop mov pop stos xor mov imul push aad sbb cmp movsl in push fsubrl loopne pop in jnp out jmp jg inc dec iret sbb mov inc ja,pn cs and cmp hlt push call jae sbb mov cld pushl dec shrb mov sbb mov sub in lock dec ret scas mull aam ljmp sbb decl add js pop stc cmp decl or rol mov in sbb mov cmpsb lods pop pop push cmc ret pop sub nop xchg push mov xchg sahf xchg jle lods mov or stos (bad) pushf mov outsl call jmp ret rcll inc cwtl pop imul icebp lcall aam lea cs push adc add mov in xchg leave pop cmp add (bad) lcall inc push pop scas rcrb es adc sub cmp loope loopne cltd adc mov (bad) (bad) dec jne cmpsb mov arpl lahf inc lods pop push (bad) popa lea jno jne out add push mov cwtl sbb jp fisubl repnz cmpsl (bad) lcall imul jmp js lods jno (bad) mov xchg stos mov mov stos xchg lret xor xor incl (bad) adc aam jl inc fwait cmpsl popf mov and cmp insl repz outsl (bad) push insl subl call test fidivrl inc outsb idivl sub int3 push subl jg cmp inc jg sub xchg add loop (bad) (bad) (bad) lcall and inc idivl adc loope sub mov fcoml or decl sbb cwtl adc aam push ss jno dec push jg decl or and push jp sub cmc (bad) jmp xlat xor or repnz lods mov sub (bad) outsl jp jp jne mov stos cmp in pop cs out sbb sbb (bad) (bad) jmp lds jo lea adc sub sub and cmc dec ja mov fstpl cli ljmp jno xor iret pop push sbb xchg (bad) stos mov stos js hlt push mov xchg rol or sbb movsb cmc add mov fist jl sub add cwtl adc sub jecxz aam mov (bad) ljmp imul inc add cmpsb adc adc lds pop dec dec int3 inc in aaa cld (bad) decl push jl or lahf sub mov xor lods pop jo popf push (bad) (bad) fcomip lock inc inc inc xor imul repz mov (bad) ja inc sub dec fsts mov push push lods das adc pop loope mov fs adc ret addr16 fs and (bad) ss mov pop jnp movsb call cmc mov testl push inc adc mov cwtl pop inc stos (bad) (bad) ljmp es push push or cmp ror test aad in pop mov or call add mov cmpsb pop mov pop mov aam hlt (bad) (bad) mov sub or into (bad) roll add out insb mov cmp fst es push cwtl out (bad) mov (bad) (bad) lcall dec jmp mov lds push ljmp scas cmp cwtl arpl push mov sbbl mov push sbb mov ljmp pop fmulp fidiv ljmp out sbb push into out (bad) push cld pushl pop cmpsb ljmp ljmp or sub scas cld (bad) (bad) (bad) out out loop and inc scas jle pop insl bound jne fcompl or (bad) decl out sub ss inc xor (bad) (bad) call push scas call sbb aad lahf fldenv cltd and sub repz andb sbb mov inc ret sbb cmpsb mov test and scas shlb and sub cld (bad) (bad) call mov inc mov cmp jns pop nop dec mov pop imul notl ljmp adc loopne dec je pop cmc (bad) decl insl sti cmp les (bad) xchg sub popa les insl pop jg incb cmpsl xchg fcompl dec sub xlat das (bad) (bad) call sbb fcomp test test fiadd pop mov mov pop (bad) (bad) (bad) call fs ss mov popa shr clc nop sbb jbe gs fcomi dec mov jmp push inc jp and int3 ret rcrb ja pushf addb ret xchg push dec cmpsb xor fidivl mov pushf inc sub sub or imul dec lret mov mov repz xor incl adc (bad) aas dec jns shrb sub (bad) (bad) call jp in mov mov push dec imul inc repz dec mov outsl inc in (bad) (bad) jg imul int pop in mov lahf cli fs aaa adc push cmp push dec sub popf das xor rcll xor pop push test (bad) decl push xchg dec jmp pop into xchg fstl loope ud1 out (bad) lcall pushf notl adc mov xorl cmp (bad) (bad) jmp outsb mov testl push add push mov and push lret fist notl (bad) cmpsl js ret cli dec inc (bad) cltd or mov mov sbb adc nop loope call mov mov mulb (bad) and fucomp adc js fstl test ret mov or dec cmpsl add mov xor clc jne movsl imul (bad) (bad) (bad) aas jge cmp lods mov pop push popa cli icebp sbb sub imul incl cld int (bad) (bad) sti stos add sbb mov pop xor cwtl fwait cwtl lcall pop add sub hlt xchg shll (bad) cmp popa and sub rcrb fldenv add imull cli (bad) (bad) (bad) cmp and gs loope cmp cmp (bad) cmp cli jae xor mov call adc inc jmp icebp cmp repnz gs mov (bad) mov addl inc push (bad) loopne jp mov mov jns xor (bad) (bad) (bad) push mov mov xor sbb insb outsl dec into jno lahf or or popf and inc mov inc inc sti sub or pop xor in inc insb (bad) fbld (bad) push call xchg lods stc jb mov pop sbb aam jecxz push int mov mov scas lea pop into js (bad) jge xchg imul sbb mov jg jns test enter xor xlat pop (bad) cmp mov decb ret out cmc insb dec iret mov add jg mov fimul arpl popa pop pop in (bad) (bad) (bad) (bad) fsubrp push fdivl data16 (bad) inc inc pop sbb sarl je insl (bad) fist inc dec adc xorl ss or scas or fbstp fadds aam xchg jnp fadds sbb lcall fdivrp (bad) out mov inc test cld xchg (bad) in sub cltd jne (bad) (bad) (bad) (bad) loope,pt lods xor mov cmpsb push mov popa mov sbb fstpl jp fildl mov pop sbb cmp ret xchg (bad) mov push adc es add decl outsl inc loope je ret and adc mov cmp pop out inc mov lea and inc sub idivl and iret sar out adc or jb lret in dec mov jnp (bad) incl push sbb stos (bad) mov add mov xor pop ljmp sbbl (bad) call outsb (bad) lea mov sahf loopne sub lret (bad) inc mov incl ljmp sbb mov dec arpl mov out pusha mov xchg cmp mov shlb mov pushf rcrl hlt (bad) (bad) cmp in cmp jle sbb fild dec std cltd imul push jne mov push dec outsl push shrl ja push push push test push inc mov (bad) (bad) fildll dec movsb in xchg clc cli pop sbb (bad) int3 sbb das or rcrb out jmp aas inc dec xchg int3 mov arpl stc les push xchg mov stos aad xor (bad) jmp into push jb mov pushf pop dec xor mov adc (bad) (bad) incl jns sub pusha cmp inc stc push popf rcl pop push xchg lcall test mov je mov out jno xlat push mov std jo sahf stos clc (bad) ljmp gs xor aaa adcl into cltd pop fildll (bad) mov ljmp ja push and stos push adc pop dec mov xchg lds (bad) das pop jb xchg lcall (bad) sub pop rorl cmpsb lahf mov in test fiaddl aaa jl aad imul out lods mov cmpb imul adc inc (bad) decl data16 cmp jbe fisttpl sahf rorl in xchg pop movsb call lock cmp cmp std scas arpl xchg adc lret cmc adc mov cli mov fnop jmp inc push and popf cmp xchg shr and (bad) (bad) (bad) fbld dec inc (bad) xlat xor mov mov out std popa popf cltd insb or arpl (bad) call inc jp fs jle fimull inc leave inc dec dec int push inc imul nop (bad) incl cmp xchg xchg lock mov inc xchg pop in lock sub stos jge mov push push stos imulb sti push push or (bad) std ret sub es pusha js ljmp pop push push push dec mov gs jnp inc mov out (bad) sar (bad) inc gs xor jecxz and scas (bad) ljmp cmp jg mov xchg (bad) leave sub or cli dec movsb push std jg call sbb mov jecxz (bad) icebp data16 pop jae cmp cld (bad) call stos push in fstl decb pop mov jg mov and push mov sti aaa ds in rolb xchg or push push add out xchg lahf and test dec or int3 mov into das lcall add and movsl mov xchg add inc lods xabort mov xor mov mov int jecxz mov cmp (bad) jmp xor mov outsb push sub and fs sbb mov xor js xor imul les (bad) (bad) (bad) (bad) mov call sti xor jne push pop fistpl adc push and leave (bad) (bad) (bad) call inc shrb adc data16 mov shll jns (bad) or jp ljmp cli sub jmp push cld fs cli pusha pop mov (bad) aaa das add fadds push fnstsw (bad) cmp push ficom cs mov jmp bound popa xor mov mov (bad) jg iret dec inc xchg cmp pop movsl xor shll mov loope mov imul popa pop xor xchg fwait and cwtl jae jb bound (bad) pushl xchg stc int3 jge ss fnstcw aam cmpl mov sub (bad) (bad) cmp xor imul xchg mov mov repz (bad) (bad) (bad) decl int sub arpl or push and and addr16 jne (bad) (bad) lcall mov jns xor cmpsb and ds outsb mov (bad) outsb sar add sub incb jns in (bad) ljmp cld fisttpl xor faddl and xchg inc cld sahf sub add daa fildll inc mov inc mov inc mov push imul adc dec inc fs cmc data16 xchg sbb incl cwtl push and nop mov mov (bad) (bad) fnstenv inc test push adcb nop stos add (bad) (bad) (bad) decl xchg inc sub stc stc (bad) fwait rolb mov inc dec sub es lcall dec std aas jae push xor dec (bad) imul add loop (bad) (bad) lcall push xchg (bad) xor jge sbb sub mov dec lret push lods pop pushf outsb cmc mov daa pop sub scas iret or incl sbb outsl iret ja sarl xchg imul pop add loope,pt dec (bad) (bad) (bad) jmp das mov cs inc inc lds sub repnz fnstsw loopne (bad) ljmp out lcall push loopne std stos sub loop roll test sbb xchg mov imull es rorb dec mov sbb lea xchg dec sub adc imul sbb pop lods test (bad) (bad) cmp jbe sub rcl xor test loop and or or fisubrl cmp xchg scas mov imulb push push xchg jbe mov loopne (bad) jmp jne jns imul mov push in jmp (bad) pop mov mov mov mov jl cmc stos cmpsb cmp lods lods sbb xchg cli call push adc pushf dec and shr cmp in in xor stos stc ja push fsubs cmp data16 inc adc fbstp xor lods xor push and ret mov mov mov cmpsb sub in mov out mov idiv out mov jo test sar xor stos out cwtl into ds and (bad) (bad) ljmp dec aad add jne pop scas push lcall sub rclb mov sub adc and les test pop and push sbb shrb inc push xor mov loop out add pop inc cld and nop clc add rolb dec (bad) incl ja sahf jg and xchg cwtl pop js lret call (bad) jmp push movsbl sub xchg (bad) (bad) jmp inc arpl insb push xor (bad) incl in jbe jle and hlt xor (bad) sahf dec loope lret ret fstl ficoml gs repz addr16 rcrl in push shr push dec pop xor test mov std (bad) mov mov inc imul pusha xor (bad) (bad) (bad) fistp pushf xchg mov ret dec push or add insb in in and and mov icebp sbb fnsave adc jnp enter test clc cmpsl mov je insl dec ret sub xchg sbb pop insl (bad) lock or ficoml lahf jno (bad) call push out mov shrl xchg adc dec cmc imul lea (bad) ss in stc iret mov xchg xchg pop push enter mov bound (bad) (bad) jg outsb es (bad) repz push mov mov (bad) mov pushf comiss fmul mul mov lds sbb cld pushl fisttpll lcall scas mov (bad) (bad) call mov cld push ret out jnp adc add sub mov cmpsb call and cwtl movsl call shll push adc outsl clc ljmp pop das inc sti dec (bad) add rcrb push pushf jp cmc (bad) incl cs dec xchg jno sbb movsl adc (bad) call ret add jnp daa cmp adc adc mov stos lcall in jmp push scas inc mov (bad) out push adc clc rolb mov scas jp popa or add push xor mov (bad) lahf dec inc das sar loop mov mov outsb mull out (bad) (bad) jmp cli fldpi mov (bad) loopne enter jo mov cmpsl and out (bad) xchg xchg mov scas mov pop mov fcompl sbb sbb inc ret xor mov mov mov mov cmp aaa std (bad) jg clc inc clc push fisubr inc mov lods cmpsb mov xor (bad) out adc call dec mov and jb mov ret xor xchg adc jp into jae push sub cwtl mov xor adc jne popl jmp sbb out dec dec inc ror in pop insb icebp ljmp pop xor push and int3 (bad) jl (bad) mov dec je mov jne or (bad) jb,pn jp mov or xchg or lea sbb xchg add enter mov adc test add jmp (bad) call cmp (bad) pop scas aad pop mov and cmpsl lret (bad) (bad) mov adc lahf inc lds leave aaa sub xor dec push adc mov sbb sti cmc (bad) (bad) (bad) decl in out cmp pop pop xor inc push jno mov push mov (bad) (bad) mov or cltd (bad) push ss les outsb sbb sbbl pop (bad) (bad) (bad) fsubs pusha push stos ficoml push mov test sub popa mov (bad) (bad) mov test xor repz aaa push adc pop stc mov (bad) lcall mov add idiv (bad) (bad) push and mov xor (bad) fldenv (bad) mov lods fistp sbb mov sahf subl mov lea xor mov dec adc adc out mov (bad) (bad) call xor fs mov rcrl scas pusha pop inc push push arpl push pushl (bad) mov adc movsb cmpl sub ret rcrl (bad) (bad) (bad) (bad) xor mov cmpsl xor xor cs push scas lock insl xor push es mov in out xor inc jne mov insb ret mov nop (bad) (bad) (bad) decl clc sub leave stos mov outsb scas dec cmp fistl (bad) lock mov (bad) shr xor iret ret xor xor out bound test cltd jecxz punpckhdq xor cmpsl lcall inc pop jbe (bad) jmp mov fnstenv and lret fsubr daa xor sar jp or loopne mov notb mov lea and (bad) dec adc cmp dec jae pop jns and lret sub out jb dec push sbb imul pop add pop (bad) (bad) (bad) call push leave xchg jb pop push into xchg out mov pop fstpt cmpsl sub mov jno jle dec les xorb movsb cmp (bad) (bad) (bad) sti es ljmp add js je aad or lods popf (bad) cmp das xor sub loopne pop bound in les push (bad) cmp jo syscall inc cmpl add adc jns ss ret lods cmp lock test sahf mov sub lods insl fstpl (bad) daa sbb (bad) ljmp sub xor sub push mov ds inc dec and decl fxch pop cmc addr16 push das movl (bad) mov es popf and sub daa mov and cs pushf sub iret (bad) (bad) (bad) dec fmull sahf cwtl rcr cmp lret xchg pushf pushf mov push jl cmp dec repz insb lods pushf sub outsl cmp lret out push rclb push mov popf (bad) pushl inc xchg stos dec mov dec pop scas xchg das (bad) or icebp imul in push lcall fisttp push push mov xchg pop mov mov mov jbe xor dec addr16 data16 jle cmpsl fpatan call decl sbb xchg cmp aas (bad) mov leave cltd call clc mov jle lahf cwtl pop ja out cmpsb pop repnz push loopne insl xor inc xchg pop mov lret ss sbb (bad) or shrl mov push xorb mov adc (bad) (bad) (bad) (bad) mov dec inc pop lea imul mov lcall dec dec dec js fild (bad) js cs inc jne insl ret addl mov clc decl adc cs (bad) stos adc push out enter incl test push sahf dec popa fcoms sbb cmp fiaddl pop sbb lods subl das jmp das clc (bad) out inc fwait dec rorl or int sub dec or (bad) (bad) call sbb mov enter jnp jae ret cmc inc repz ror inc into arpl push (bad) call dec jp mov and frstor popf in mov movq pop adc add das ss inc lahf (bad) lock fwait pop adc (bad) ljmp in cmp cmp dec or je dec mov (bad) in (bad) mov and fwait pop xchg in lahf or mov jmp jne jg frstor arpl and mov cli jne fsubr lock fcomip push adc mov imulb cld xor stc sarb xchg aas or scas cwtl mov xchg clc mov lea xor pop dec mov insb pop mov mov push movsl (bad) cli mov add bound xor add sysenter pop fdivrs clc sub seta (bad) (bad) (bad) lcall adc adc cmp lods pop dec inc (bad) adc mov cmp jg mov bswap das sub inc lcall sub xor cld pushl test and fldcw pop mov jle add orl (bad) call sub xor movl mov sbb xlat and stos inc incl (bad) xor push add roll lcall xchg mov imul xchg sahf xchg jl inc cmpsb mov movsb inc das inc and inc mov mov (bad) jmp sti cmp mov sub cmpsl push cli (bad) je or gs add jmp jae xor sub lods out int iret mov dec data16 and insl jge test or pop aam adc fstp push jecxz pusha (bad) (bad) (bad) inc add mov sbb add stc xor inc icebp rorl imul lock jmp cwtl mov out xchg dec push mov daa sub ljmp sub and mov xchg pop mov sub lock (bad) pushl (bad) xlat or dec push adc fnsave pop xor ljmp cmpsb xchg add lahf aaa push imul push fildl (bad) (bad) (bad) ljmp aam cmp pop xchg push loopne inc les adc and push and and lods sub outsl push lret push test adc mov fwait mov lock fidivrl xchg cmpsb jns out jge mov fidivr fst jb lcall aad lods xor ljmp or in mov cmp (bad) cmp mov push pop loopne incl push mov movsl stos (bad) add in ljmp jg in ss dec cs arpl push mov xor aaa push sub (bad) (bad) (bad) mov sbb mov imul push lcall (bad) call out xchg aaa jp mull jb pushf pop lret ljmp push push add decl in cmpb xlat xor inc (bad) (bad) (bad) call sub fidivl and pop lock aad pop shrb int3 adc imul ljmp xchg mov or fwait test (bad) call push mov mov mov scas fistpll or mov inc arpl imul sbb (bad) daa add xchg inc clc movsl (bad) (bad) jg das jne repz xor scas ret mov lods cmp outsl adc and mov stos sub mov xchg sahf push cmpsb leave sbb (bad) pushl aad loopne pop xor je dec or add mov jbe rclb adc lcall aaa jle xor scas nop or in cltd fdivs je xchg mov push mov inc jne aaa mov out adc and data16 xor mov test sub jp push sub xchg mov aaa sbb pop test jb imul out cmpsl and in or adc inc cli sub dec dec mov out out jmp bound ja ficom out xchg out (bad) (bad) (bad) decl and mov mov addr16 movb xor xchg xor cmp jmp cmp inc inc adcl mov ret int3 jae jb stc xchg or jnp mov (bad) incl in jbe in jbe xchg (bad) ds stos ret jne,pt call add imul stos push aaa cld jle aaa movsb mov out loopne inc or sub mov mov or sub mov test (bad) jmp rcrl loopne,pn sbb jbe mov repz dec xor ret pop hlt decl jo jge (bad) inc sub mov pop push fsubrl mov (bad) popf jno inc fdivrl jle inc dec stos repnz fstpl inc add cltd cmpsb cli imul enter call pop lret inc push dec fisubr push pop pop mov lret add fcoms (bad) (bad) jg lods inc dec mov out push movsb sub (bad) add arpl bnd cmpsb jp add mov jne lods lea xor std inc (bad) (bad) (bad) decl xlat (bad) adc mov arpl mov int3 dec cmp xchg cmp (bad) (bad) dec int3 icebp cwtl mov insb test mov ss out (bad) rcrb (bad) out clc push mov gs shrl mov repnz jecxz es and (bad) (bad) pushl mov fwait jmp mov mov in jg jbe out mov adc (bad) jmp mov out arpl inc jl addr16 jb pop adc jb lret (bad) ljmp repnz les aam and movsb mov shrl inc sti (bad) ljmp fisttp (bad) loop mov push push dec scas movsb (bad) out or push call push sti (bad) dec push dec test inc loopne outsb imul dec inc xor and add out fistpll ja sub (bad) (bad) (bad) jg fiaddl out add rorb inc mov pop and xchg push pop push imul (bad) lcall push fisubl or pop mov xor rolb outsl inc mov mov (bad) (bad) jmp repnz xchg jmp insl xor xor movsl mov (bad) ljmp mov fmull push fsubs xchg mov mov mov insl outsb int3 ret adc add xor cmp (bad) and incl jmp mov push push jnp cmp cld es xlat sub cmp ja,pt repz out jae (bad) (bad) (bad) jmp addl mov dec ss inc shl mov (bad) (bad) (bad) (bad) cld fisubrl sub divb push xchg imul fistp xor xchg (bad) pushl cld xor adc xlat fcoml pop pop xchg mov fnsave adc push and (bad) (bad) call fist sbb jmp dec add xor push js int fwait dec cld lret loopne cwtl (bad) scas aas mov aaa outsb sub xchg (bad) (bad) jmp dec push lret aaa sbb push mov or ret xor ljmp hlt aam and xor xor xor js cmp pop loope adc clc push out push and notl fistl lcall and xor inc je push pop scas bound jae (bad) mov mov fnop cmpsl sub enter mov gs cmp cltd (bad) (bad) (bad) call sbb push or mov arpl loop sahf xlat jb sub lahf insb dec dec sub call pop gs mov pop test pushf add inc xchg test arpl loop inc push pop lds js (bad) ljmp pop adc dec mov adc pop sbb int outsb pop lods push das mov dec in (bad) fcomip sub cmp adc pushf (bad) fmull jle jb icebp (bad) dec xor sbb push movb mov cmc xor (bad) (bad) (bad) mov adc nop pop popf push ret jl cmp ficoml xorl pop adc es and (bad) call jbe sbb insb es or xor (bad) (bad) cltd icebp cmp fnstcw mov imul scas into cmp lods jg fmuls xor xchg cmc cli loop je cmp insb add (bad) pushl aam sbb test mov jp movsb loop fbstp xchg cwtl pop sar (bad) call daa bound push mov sbb xor or (bad) (bad) (bad) jg jp ret or pop fidivrl movsl lods push imul out mov and inc (bad) ljmp xor lahf sbb and test mov ret dec ljmp sbb mov repz lret add (bad) jg and jb insl jge rcr data16 and lcall adc fisubrl fstpl inc lcall std aaa in fcomps inc lods fwait inc test push add and push inc push xchg fcmovb int (bad) incl sar or xchg push dec lods push mov inc jne cs xor clc (bad) call mov inc inc popa in mov js rdtsc push xchg jmp xchg pushl in cmpb cmp ret xor pop fidivrl mov incl scas ror dec jg out hlt bswap fstpl mov lods jnp pop (bad) mov mov (bad) call hlt mov daa fnstsw fiadd inc mov ljmp ret in xchg dec mov and cwtl jne into fucom pop (bad) adc jl cmc cmp cli sbb lahf jmp add mov xor movhps xor sahf daa shrl outsb lds pop fdivl dec lret sub xor out mov dec pop mull jo pop inc pop (bad) in dec jg xchg add mov ds ficoml mov (bad) (bad) lcall dec bound test pop xor mov mov stos (bad) and push jge es call sbb mov xor push lret xchg push xchg fbstp (bad) ljmp mov pop in cmpsb (bad) cmp stc popa sahf mov roll cmpl daa dec mov cwtl mov (bad) call jl lret popf icebp js mov popf pop scas lds xchg adc mov xor mov sub addr16 and cwtl arpl push cmp (bad) decl sub rcll jbe xchg pop push int3 (bad) decl mov inc fs jae lahf add jb xor out out in call fnop iret mov insl and push addb lahf (bad) incl rcrl pop lahf loopne mov lock std sub (bad) pushl mov add pop mov sarb lea shrl mov adc pop leave and sub sub ret adc cmpsl call (bad) pushl cli daa call mov jmp paddb mov imul mov js jns push push lods (bad) fidivrl clc sub aas sub dec in or pop rcll cmpsl popa mov pop pusha int adc cmp jg idivb xor iret inc mov je pop int3 lds inc inc popf mov xor js (bad) (bad) mov stc lcall fsubrp insl aad push mov jno (bad) lock scas sbb lret pop idivb cli add add adc scas leave (bad) fcomip jmp test ret pushf xlat (bad) cltd nop test jmp dec (bad) mov sbb (bad) fcomi js mov cli and jb jb xchg cld mov mov jae inc call adc nop in jecxz subl (bad) (bad) (bad) pushl adc mov adcl push sbb (bad) mov sub sub bsr clc (bad) sti xchg mov or test subl add cmp andb decl inc sub and mov xor jmp lods inc pop clc sbb or and stos add lcall (bad) cltd addr16 (bad) (bad) (bad) mov xchg cmpsl push imul cmp sti icebp dec dec xchg mov idivl dec (bad) (bad) (bad) call cmp add sbb push xchg dec (bad) cwtl and push mov push mov push dec lods bound popa std (bad) ljmp dec pusha mov cwtl aad mov pop jg test jo xlat push and push movsl fidivr outsl incl xor jmp sub movsl mov adc sub fstl pop outsb mov (bad) (bad) (bad) (bad) lcall pop add mov out out (bad) out sti loop lock popa pop push data16 mov jo (bad) (bad) push mov sbb outsl movsl xchg (bad) sub mov popf mov mov mov cmp das mov or aam mov mov insl (bad) (bad) (bad) call mov cltd scas sub cmp xchg push cltd out jmp sbb mov sti stos pop scas dec jecxz sbb and test scas mov push adc (bad) fisttp pop imul enter mov (bad) outsb xor lock xor call ljmp insb imul mov mov popa xchg push (bad) (bad) ljmp mov arpl icebp mov test or lods aam lret out cli (bad) (bad) fiadd les lret lea dec aad daa pushf sub xlat insb mov (bad) scas clc mov mov or dec add (bad) lcall popa in test push jp push test sbb aaa mov decl scas add scas lcall pop push out loop stos mov je mov in (bad) mov cmp and dec es pop movsl push (bad) call lods loopne cmp jno xchg scas insb xchg ret lea aad inc mov and (bad) incl cmpsl jmp fimul push dec out test out call (bad) push popa mov xchg jge xlat jle outsb mov dec dec adc pop xchg jno ret pop lods push (bad) mov jbe hlt and arpl int in fnstsw jmp cld mov sbb jbe jl inc and fidivr dec or push out in sbb and in scas cli ljmp xor rorb dec insb aam and xchg ja mov xchg icebp mov test ja repnz test and sarl inc insl dec cs and mov lahf (bad) mov mov fsubrs xlat inc hlt lret adc call lret inc mov inc ja mov (bad) (bad) decl out push daa popa adc sti test xchg mov in cwtl inc hlt ss popf (bad) (bad) (bad) (bad) ljmp les mov push icebp movsb loop into mov jnp cwtl pop xchg pop push hlt cmpl or (bad) push mov inc jne inc sub lds xor ja pop mov cmp aam jge cmp pop mov daa mov push scas jmp xlat jg test sbb mov jle jp push cld (bad) jg dec sbb inc jmp dec push or add in call fidiv dec jo imulb push out jns je lods fildll loopne pushl pop jo stos add xor jb mov incl (bad) jle mov add popa dec (bad) pushf lods call push dec mov mov inc imul div scas cmp jae inc mov (bad) (bad) jmp lret in inc mov add fbld dec pop jno jne movsl testl incl repz xor sahf ljmp into jae jo (bad) (bad) jg icebp pop repz out mov jg xchg sbbl (bad) pop insl mov adc arpl mov imul xchg xor addl daa cmp xor imul cmpb shlb xor addb lahf std aas xchg pop add push addl subl incl iret lahf mov ucomiss cmp repz xor in dec (bad) fcomip (bad) fstpl mov sbb (bad) cltd pop add imul jae sub decl mov lahf cmp adc inc and push iret pop mov dec fdivrs xchg iret (bad) je cmpsb out and outsb pop pop pop mov push push pushf lods xchg out sbb hlt inc out mov cli mov fwait mov dec and mov in testl push or (bad) decl imul jb ja mov and pop mov xchg (bad) incl mov push jb push sbb xchg push pop daa cmpsl cmp (bad) (bad) mov sbb cmp test add cli or mov push or jnp sbb (bad) stos call ss pop test enter push push das jnp xor (bad) pushl cwtl fs and mov test (bad) lret loopne sub (bad) sahf xchg xchg ljmp inc cmpsb std flds lcall cld pop movsb loop (bad) call fmuls inc add push fimul hlt inc scas xchg or (bad) (bad) mov jb jns mov dec shrb dec mov cmp inc lock or test push mov out xchg inc out out inc in cmp add dec jl (bad) leave imul sbb push xchg pop push jbe push inc cmp faddl (bad) decl cwtl (bad) mov mov push repnz scas dec dec stc hlt or (bad) (bad) (bad) jmp inc sub cmp movsl cmp sub inc out push jb jecxz imul (bad) call ret loopne cmc out sahf mov mov sbb inc mov pop lret mov mov call outsb pop in es jge cmp arpl lods jg,pn push pop jl cld (bad) (bad) (bad) dec mov pop out lds mov pusha sub mov sub mov imul (bad) pushl clc push pop cld and stc rcr pop mov mov dec outsb mov daa or mov (bad) (bad) (bad) lcall cs jns inc insb or loopne sub push loope push popa mov jle pushf add (bad) and mov insb cmc cmpsb call cmpsb pop xor jg addl lea repnz stos mull fidivl lods mov insb pop dec inc outsl lcall add lret cmc lcall inc sbb pop fdivs sbb test fwait inc mov out mov std scas mov into mov sbb push (bad) (bad) mov cltd xchg jb adc in mov sub xor iret aas js (bad) adc lcall xchg rcrb hlt pop out je jp cmpsb add cmp test mov mov (bad) jmp nop popf jecxz sub movsb or push pushf xchg inc cs outsb out push stos xchg mov scas cli call xlat and mov out out test bound out nop test lock pop add pushf movsb dec mov lcall movsl incl fiadd and mov xlat std push in xor pop cld mov incb xor cmpsl bound pushf imul ret xchg lret stos mov jnp ss mov xchg (bad) call adc cmp jbe dec jnp fdivrs rolb fadd cld (bad) lcall xchg push ret cmp je inc into mov push lahf xchg mov aas adc mov xchg adc in (bad) (bad) lcall js fcmovbe cmpsb (bad) and jae gs xchg xchg adc mov out stc (bad) add dec or test mov test xchg xchg xchg xchg inc xchg incl iret mov sahf scas jae mov ret mov int insl mov jae jbe push fdivr (bad) dec aam push inc fwait inc cmp clc (bad) jno sar (bad) cmp dec pop lret sub or inc shrb clc dec fs push stos push les lcall mov in mov mov out and out jl (bad) (bad) (bad) (bad) mov imul outsl call movsb pop mov pop rcrl sbb (bad) mov jg into dec clc xor in xchg dec daa dec movsl in call sar nop inc jl push inc cltd (bad) sub push fdivl lods mov jae cli xchg je in je out out dec out add stos (bad) (bad) (bad) mov jge and jle jmp jns push stc mov pushl cli pop test cmp xlat jae cmp ret xlat (bad) call (bad) sar adc push std adc outsl (bad) lret (bad) mov aas pop pop push ret (bad) repnz or lahf lock (bad) (bad) lcall cmp cmp jg push (bad) in cmp pop xchg addb cmc hlt lods xchg adc fwait cmp and not int3 push imul or cmc incl add cmp fldcw mov pushf mov clc or jns inc mov mov and aaa add xchg pop jmp mov pop fcomip ljmp xchg scas iret sub in les mov xor mov gs sti xor or nop outsb mov insl adc adc push mov sub and sbb xchg adc sub out bound pop lcall mov repnz adc cli decl insb cmp or call pop xor movsl (bad) aad notb fidivrl mov bound jo ljmp (bad) (bad) aas ss repnz mov out adc mov xchg pushf sub popf aad (bad) jae jmp test movsb mov fisttp push sub or jle cltd mov sub (bad) mov jo sahf xlat fwait js rcll jg add imul xchg dec (bad) ljmp push jg mov scas add mov aad hlt (bad) incl (bad) jecxz hlt mov mov in je fstpt and push sub (bad) (bad) (bad) (bad) jnp rcrb dec push fisubrl test stos lds push test mov jmp push fimul (bad) inc pop push sbb dec mov (bad) decl outsb cmpsl pop mov xor clc fstpl pop mov int jne adc sub jmp mov ja adc lock add sbb (bad) (bad) mov jle aam in daa jne les mov inc fldl clc decl push adc scas or aad insl push fwait cmp mov (bad) ljmp (bad) mov jg out adc (bad) mov xchg in mov sbb xor insl jb icebp ja xchg xor dec (bad) push jg cmp push sub mov pop jo lods loope xchg roll fcomip xor mov cmp addb adc pop (bad) frstor (bad) jmp stos xchg mov sub enter push and decl stos dec movsl aam inc mov fscale mov push aad scas mov test cmpsb sub test clc nop push test dec sub lcall push jmp (bad) lea (bad) (bad) jmp mov dec push jp jne orl fst mov sti adc push dec fistp test mov (bad) ljmp pop mov or push mov fwait cwtl mov inc push xchg mov (bad) loop mov pop lret shl mov and hlt inc (bad) imul sub in (bad) lret les in (bad) (bad) ljmp jnp dec jnp xlat ja ret xchg loope cmpsb cmp push loopne adc (bad) jmp adc sub neg (bad) mov addr16 mov jmp leave jp (bad) (bad) (bad) (bad) in cmp dec je outsb les xor cmpsb xor aas hlt enter (bad) (bad) (bad) call inc mov xchg mov xchg iret xchg xchg fwait jb xchg cmp subl icebp push mov cs sbb ret push push pop loopne (bad) ljmp sar sbb push test ja cmc inc in xchg in inc sub scas pop push add enter fcompl int3 (bad) call dec lcall (bad) aas sbb mov leave sub (bad) (bad) (bad) jmp push out sbb icebp dec scas xor pop out sbb in lock dec fidiv dec loope dec push das sub in aad mov xchg outsl adc jge test loopne mov sbb jg mov adc push dec shlb stos push pushl mov cmpsb and jns lods lods cmp (bad) out nop icebp ss out pusha mov in push lods xor fldln2 xor (bad) lcall das sub cmpsl rcrl test inc mov scas sub pop jo call xchg mov aaa inc cli loopne ljmp jo mov mov adc ljmp daa adc or loop inc outsb iret mov (bad) (bad) (bad) decl movb (bad) sarl xor or pop lods inc sub (bad) xor stos mov decl popa jnp add sbb pop mov push clc push ror pshufw push cmpsb data16 jecxz pushl in and sbbl add popf cmpsb aad mov (bad) mov mov mov lds jne xchg test (bad) stos dec xchg mov (bad) (bad) (bad) decl pop add movsb push xchg add shll cmpsb inc das outsl js fucomi pop cmpsb lcall sbb pop sub repnz add ja xchg test inc std dec add icebp sahf es mov push das jb adc cmpsb sbb xor mov fisub arpl (bad) (bad) call push loop mov stos cmpsb hlt fiadd aaa scas jns fist (bad) mov ljmp in sar (bad) inc dec pop inc iret add jp inc xor mov adc dec imul mov (bad) (bad) (bad) (bad) clc sbb pop cmp cld negb hlt ss jnp inc jae xlat ret (bad) (bad) ljmp js shrl outsl inc imul mov dec mov setbe movsb sbb mov ja mov shr dec fisttp inc push pop lods xchg mov clc cmpsb jmp inc mov dec dec lcall (bad) (bad) mov lock out stos and jns push (bad) xchg loop popf test (bad) cmp and or mov (bad) (bad) (bad) jg pop rorb mull and dec mov pop adc xor popf push jle jg call sub out jge and pop out mov sub xchg (bad) call (bad) test xlat popf outsl enter jl xchg inc dec xchg dec arpl pop dec incl lock jbe push fcoms bound outsl gs mov or push add (bad) out add stos mov jnp adc loope imul xchg cmpsb addr16 (bad) mov inc insb push (bad) mov rep loop sbb inc cltd ror dec (bad) in imul cmp xor mov xlat scas lds jecxz jp divb inc rcrl jne sti adc (bad) (bad) (bad) aas fcomps leave cmp loopne (bad) sbb das (bad) sarb adc nop pop ret jb lret fiaddl cmp or jl out dec mov xor dec (bad) out mov sarb cmp fwait jbe hlt jmp adc in mov mov pop pop inc inc inc (bad) add pushl das sarb jmp cld imul lock decl sbb add cmpsb xchg lods subl mov outsl std and push xor adc pushf shll or mov out rorb cmpsb push xchg mov bound lock adc sub lea (bad) (bad) imul repnz test inc mov addr16 (bad) leave popf mov adc (bad) mov movsb jns adc xor pop add ja lods mov stos pop jle mov cmp adc mov sub scas lds aam adc jecxz jb pop bound in mov sub mov xchg add int3 rcll (bad) (bad) mov mov ret mov xchg sarl (bad) jg neg shl (bad) lock lock lods jns (bad) (bad) (bad) inc jnp in jge mov jns push jbe mov inc pop xor test pop fimull (bad) pushl cmpsl xchg mov cmp cld fmull rcll adc lcall dec push cmpsl in lods mov lahf push push lcall (bad) outsb adc mov lret out les and (bad) jbe dec adc cs out aad scas add std sbb and divb xchg sbb cmp add sub sbb sub dec imul (bad) ljmp mov xchg es dec out jge and mov pop popf add (bad) (bad) (bad) incl xlat mov movsl mov push push xor out mov hlt add (bad) jg mov bound jnp cwtl scas dec push dec sub cmc aad or xor jg inc push mov sub daa pushf popf sub movsl and lcall nop int3 push inc xor xchg add or add sti fnsave fdivrl outsb inc adc pop add jg push xor mov push (bad) (bad) inc leave (bad) mov mov mov test (bad) jmp mov lret xchg and shrl push push cli in movsl rorb icebp shr clc mov dec es sti loopne pusha mov push mov add aaa add xor aad (bad) (bad) (bad) mov hlt pop lcall add mov adc xor lcall add adc mov ljmp mov xchg pop sub ljmp ljmp lods pop xchg dec fisttp or mov mov outsb (bad) jne (bad) (bad) fild popf data16 pop je cs mov sub inc mov mov (bad) (bad) pushl bound push push adc sub mov adc xor pushf push inc jge scas hlt aad imul lds ja cli mov clc repz cwtl jne aad push pop lock jg movsl jne lods xchg or cmp lods jp push xchg aaa jne mov call (bad) flds loopne adc pop leave sarl push sbb mov addr16 scas jecxz je jno cmp (bad) in push mov mov movsl ljmp and (bad) notl loop clc data16 adc sub pop sahf dec (bad) mov clc xchg jg lcall int cmp add daa stos test push dec or mov mov faddp adc loop lods (bad) adc inc sbb (bad) fucomp xchg stos xchg adc and iret adc mov (bad) xchg sbb pop mov stos sbb xchg stos icebp (bad) aad sub test loop xor mov inc add (bad) (bad) jmp addl dec and adc adc mov (bad) sbb (bad) call rcrb movsb mov xchg movsl outsb stc mov (bad) jns aad je dec (bad) (bad) push (bad) rorl xor and dec repnz cli rcrb add mov in (bad) (bad) out push xor out sbbl dec in sbb icebp (bad) mov (bad) (bad) decl (bad) test mov pushf dec leave js addb inc sub push xchg das and pop sub pop jno es (bad) (bad) (bad) ljmp loop out add test fildll sahf xchg adc mov add test stc jbe (bad) (bad) lcall rorl mov int in bound rolb ljmp ss movsb and pop mov aad mov (bad) mov das mov (bad) or sub fsubp dec out and (bad) (bad) jmp push xor jp insb int3 into or fisttp rcrb or or mov and into movsl push stos dec pop call in outsb mov inc bound cld test mov adc popf inc sbb daa mov popa jge (bad) cltd mov out push ss movsl xor sti jecxz and push cmp lods push cwtl out add loope sti (bad) (bad) (bad) inc dec (bad) pop outsb inc xor jae xlat push dec sarb push adc (bad) jl cmp lods push pop icebp jb nop loop out js sub jmp sub push pop test sti mov and and out mov (bad) (bad) (bad) decl mov movsl add and mov jno xchg or adc decl pop repz scas dec push dec sbb cmpsb jle lret adc movsb les mov and outsl sub xchg dec sub je into push cmc (bad) (bad) ljmp loopne push xor jb mov xor (bad) popf roll jb jmp movsl lock jmp stos cld movsl xchg add pop testl (bad) push cmp sbb sahf movsl xchg fistpll (bad) rcrl stos cld loopne add ja sti cmpsb dec jmp scas (bad) mov xchg fldenv and aaa mov lds and ja lds rclb xchg (bad) dec subl sbb cmp lods mov add in (bad) lods fimul xchg mov icebp dec clc (bad) in fst ss sbb (bad) std out add inc mov clc cli add enter mov jmp sbb and push daa inc scas cli and lcall in cmovp dec cmp test jo adc lock sub test cli (bad) ljmp repnz pop repnz adc lcall mov sbb xchg fcmovbe xor sub scas sar loope mov mov (bad) pop fcoml mov pop dec iret mov xchg pop xor (bad) (bad) lahf push pop mov stos and out test add sub test push test hlt rcrb (bad) jg xor jb adc fmuls (bad) cmp adc and inc imul into and stos mov push call (bad) (bad) incl add popl sub push fxch pop adc jmp fist mov shr dec and (bad) (bad) (bad) call pop xchg xorl adc xchg add in xchg les mov xchg push ljmp lret cmp cmp mov mov lahf push je test (bad) (bad) (bad) cmp mov test test div loope in pop and stos adc (bad) (bad) call pop shll mov xchg mov cmp pop jne out aas divb jle jnp add add movsl je fimull scas mov cmpsl fstps sbb cs leave shr shrb push hlt inc cmp mov mov mov xor insl and sahf gs icebp cmpsl xor add xor fldt mov push pop fldt mov ret (bad) (bad) pushl jns shlb pop into mov push arpl insb sub (bad) (bad) (bad) jg (bad) jge cmpsl pop clc data16 xor in ret jg int3 lahf cmp imul (bad) (bad) (bad) (bad) sub cs ja in out (bad) hlt mov jle push insb and (bad) mov dec jnp pop in and jecxz or mov scas cmp iret (bad) jmp sbb push mov enter call daa mov outsl lods adc cmc (bad) (bad) (bad) (bad) mov lret adc je jp into dec rorb push xchg mov (bad) sbb fidivr and into cmp push pop popf fs pusha jnp call or pop add notb stos pushf decl add lods iret lock les mov dec clc cmp xor adc sbb test loopne xchg mov inc jmp jae lock push loope sbb lahf dec and mov xchg mov pop into dec dec int3 ret les push mov lea (bad) mov mov dec jnp les adc arpl fisubrl jg jnp shl js (bad) mov add mov cmp (bad) (bad) (bad) ljmp fnop and jmp and nop out fstl cltd loop and pop pop pusha (bad) mov dec or call clc pop ds and or insl dec fs incl out xchg sub fdiv cmp mov inc mov outsl dec inc mov std insb neg nop pop mov lret cmp incl xchg xchg xchg lea push and lea decl sbb imul jmp xlat add (bad) ljmp out iret cmp (bad) arpl (bad) pop addr16 pusha jo inc addl xor das mov call int3 add fwait adc push cld sbb sbb (bad) (bad) cld nop sbb pop jp mov insb movsl cmp mov aaa or push ljmp fidivrl mov (bad) push mov xor cwtl arpl fbld mov rcll fidivrl pop outsl clc or push jne jnp js dec das adc adc fwait lret dec (bad) call (bad) cmp fucom adc loope jne cwtl xrelease pop imul stc and stos (bad) (bad) ljmp push jo insb test dec icebp aad (bad) clc movsl xchg sbb pop mov push addl (bad) xor (bad) jg add out adc sbb loopne mov adc pop inc push (bad) (bad) jg mov fstl cmp mov mov jp mov push incb scas sub pop outsb lods hlt mov lods sub ss jb mov jne cmp ja shlb arpl (bad) frstor push fwait mov dec xchg jo shr ja ret mov mov (bad) (bad) decl inc rcrl rcll xchg dec out push sarl cld (bad) (bad) push (bad) xchg pop mov (bad) (bad) out adc sub cmp outsb loopne mov mov xlat lret xor mov jg jmp idivb inc inc dec mov lcall adc (bad) loope mov fwait xchg fidivl out push mov and add cmpsb mov push test mov leave push or dec jo insl cmp inc xor mov pop or (bad) (bad) (bad) xor sahf out mov (bad) pop addr16 push ljmp adc mov bound add addl and adc jnp (bad) xor fdivrs loope ja lret es pop jmp sahf or mov and push jb mov xchg fsubrl add xor mov lcall lcall (bad) (bad) mov stos push (bad) or dec pop cmp add aad testl mov sbbl push pop (bad) (bad) ljmp mov cmp cwtl pop sub dec and cs mov sub adc ds sub stos cmp (bad) (bad) jg pop jp movl mov inc jecxz or pop mov (bad) (bad) lcall mov decb fiadd lock call movsl adc iret popf roll pop mov push aad movsl bound repz jle push ljmp and push jno jl xchg mov inc jmp jb sub cwtl scas in js jmp sbb (bad) (bad) decl mov stos adc fwait lock lods push sahf lods pop inc sbb sbb inc mov leave pop sbb stos addb (bad) mov push rolb add cwtl push mov (bad) (bad) ljmp int3 mov imul pop add jecxz or xchg push push push stos push fldl add sbb ljmp cmpsl leave xor cmpsb pop imul dec ret jge rcrl lret push xchg decl movsl mov mov lods mov incl sub add adc pop movsl pop jae and fisttpl in popf mov jmp dec outsb and btc inc cs hlt jo adc (bad) (bad) cmp mov dec inc mov xchg pusha mov jg dec dec and lock decl stos push xorb jno xchg push cmpsl or push (bad) (bad) lcall int3 or mov pop adc cmp add notw inc jo sbb mov sub xor cwtl push into (bad) loop out icebp (bad) mov mov or nopl sbb dec incl (bad) fisttpl addr16 test (bad) xor pop outsl (bad) cmp pop test jae movsb dec enter xor sbb stos mov push hlt pop mov adc or adc jb cmp add movsb pushf mov jnp scas repz pop jnp test xor (bad) (bad) (bad) lcall sub popa sahf cmp push stos dec out jne xor jmp lock (bad) pushl (bad) jp mov test xchg dec push or int scas pop movsb mov mov lods xchg sbbb (bad) (bad) jmp mov mov xor cmc fdivl push push fcomip (bad) lcall mov aam out fs dec mov outsb inc jg jbe cwtl mov jl mov jbe sub xchg xchg xor (bad) incl call mov mov jns call decl and call test subl mov mov (bad) ljmp add leave (bad) hlt aaa sbb iret sbbl xor sub mov sbb mov mov ret rclb scas (bad) decl clc mov int3 jbe scas in adc push (bad) psubsw not arpl insb xchg ss xchg lods (bad) (bad) jmp sub pushf out sbb dec jae jbe push mov sub push xchg scas (bad) (bad) (bad) jg mov imul loop insb dec imul scas dec (bad) sub stos call lcall pop test push lods scas mov jecxz xchg dec shll (bad) (bad) (bad) (bad) (bad) mov jo stos jno push fcomps xchg jmp cmp sub fiadd (bad) mov xchg mov fdivs fnstsw ljmp add or add clc jg cli icebp adc in mov cmp loope mov addr16 fstps fnstsw pop jmp roll mov decl jecxz sub bnd mov and imul cmpsb int3 mov jg inc out in lds mov leave es aaa inc lods clc jbe loopne gs movl sti fidivr cmp rclb nop pop cmp dec idivb cmp cmpsb push xor (bad) ljmp (bad) add sti or into in and sbb addr16 mov jo dec fdivs fs movsb pop push aam lea ljmp sbb cmpb xchg mov cmp lods stc js (bad) (bad) call sub xor outsl inc mov dec push mov and mov ja les sahf push fcmovnb xchg imul vpaddd (bad) incl rcrl in push out cld daa push sbb push cmp loopne and and cmpsl xor stos call adcb stc push xchg xchg ljmp (bad) (bad) (bad) inc frstor cmp repz push std bound and jmp sarl (bad) (bad) (bad) ljmp cmp pop xchg push popa inc icebp xchg sub xor mov lahf xchg mov int3 rcrb jmp js xchg pop (bad) xor dec (bad) mov nop (bad) lds hlt stos (bad) dec lds mov addr16 aaa loope fisubrl sub jg loope je lock stc (bad) js (bad) incl sub add jmp sar sub add jbe test rclb mov mov pushf (bad) movsl out aas cmp pop data16 scas xchg adc inc hlt lret inc mov (bad) (bad) out clc (bad) cli pop out hlt into cld mov aad out pusha jbe fimull test cwtl adc fnop outsb mov push sbb je cld sar (bad) ljmp fadd bswap pop pop hlt add popf push sbb sub push (bad) jg fcom mov (bad) loopne lret sbb inc clc mov lahf pop fstps decl out iret repnz test gs xor stos ja xchg and bound (bad) ljmp sbb shrl int cli inc in repnz (bad) out add pop outsb popf sarl jg fbld shr gs sub xor pusha jl dec sbb ds andl jp ror add je inc aad sahf or push in xchg cmp push roll js sbb sti (bad) (bad) (bad) jmp insl jne lahf daa cmc cmp aas sub mov cmp lahf push into xchg (bad) xchg jle jg jnp xor jecxz or dec xor fdivs sub push mov xor (bad) mov pop cmpsl ds (bad) fnstenv loope (bad) decl xchg mov adc pop push iret mov adc out (bad) mov mov sti out jg dec clc mov inc js jle cli xor lds dec xor push movsl mov dec ljmp or adc lods jae fisubl add jg (bad) pushl pop push rorb daa sbb fwait mov lock loop cmpsb sar (bad) ffreep call (bad) and adc or negl push mov sahf (bad) decl xor int mov inc and xchg subl mov (bad) enter or aaa popa lcall ret mov inc jb and call adc nop (bad) pushl rcl xor or jnp stc shll (bad) ljmp test xor cmp push icebp and xor jecxz mov push xchg sbbb test xchg popf ficoml or lret mov les push adc iret (bad) jg decl jne mov mov mov xchg jbe dec repz idiv das (bad) xor mov (bad) push bound data16 push cmp (bad) popa out dec stos lods sbb leave cmp and (bad) (bad) pushl adc dec data16 mov mov loopne nop test (bad) mov nop adc cmpsb sbb ja test sbb sar pop insb mov imul (bad) ret fistpll mov cli imull pop in out mov ja (bad) (bad) mov cmp jne pop xchg (bad) or rcrb sub mov sub push jg (bad) stc outsb xlat mov dec adc mov push xor jp movsb fs (bad) lcall (bad) and xchg (bad) int aad mov xchg inc (bad) out stos and or (bad) decl or mov movsl push aas push lcall outsb or mov fisttp mov lret ret addb (bad) sbb popf imul mov jo sub jns addr16 ja (bad) (bad) decl incb imul les daa pop stos mov push push sub (bad) (bad) call sub jne ja cs pop repz jbe sbb mov (bad) (bad) jnp jnp stc push fwait mov (bad) lret imul (bad) sub aaa (bad) mov mov (bad) fisubr aad pop nop add pop and (bad) (bad) (bad) cmp fs cmp xor mov sub inc mov xor (bad) (bad) (bad) lcall push imul cwtl daa mov cmc test push inc stos notb (bad) (bad) (bad) ljmp stos stc add stos test in add cmp mov cltd (bad) (bad) incl sbb rcll adc mov mov cld bound (bad) (bad) (bad) jmp loope fstp dec cmp push mov pop jb shll jge jl call (bad) or push cwtl out (bad) adc push jne mov cld (bad) cld rclb add (bad) in mov pop mov cltd or std cs sbb repnz mov es (bad) loop mov (bad) (bad) (bad) decl cmpsb cmc fnstsw cld add iret int fildl pop mov jb and in (bad) out mov sub int3 push cmp adc pop cld (bad) icebp mov nop mov aaa add test xchg push jmp cld sbb mov jb cmp (bad) out mov sub fwait lcall cmpsb push orb outsl incl ja fst or mov mov scas mov enter cld (bad) (bad) jmp stos dec aas jle mov movsl push (bad) fnstsw push out pop imul ret mov mov xor pop loop xchg mov je aaa add (bad) jg ljmp (bad) cbtw push jno mov bound js test mov popa mov (bad) decl push mov (bad) and sbb inc xor andl sub (bad) (bad) (bad) mov addr16 sbb cmpsl outsb leave divl movsl jns imul cmp mov or ljmp repz mov push fdivrp (bad) (bad) jmp fdivrp mov mov rcrl stc add loop sub mov xchg adc pushl enter stos sub test mov stos ljmp add pop add ljmp and add xchg (bad) cmc mov (bad) (bad) ljmp push loopne jbe mov (bad) movb fwait jmp loop xchg or (bad) lcall push xchg xor sbb call loop pop loop xchg data16 (bad) cmp cmpsl cmp subb mov cmpsl mov (bad) mov mov inc dec cmpsb sbb mov xchg (bad) and (bad) (bad) inc pushf xchg add jge sbb dec xchg jge ficompl mov add movb push jle inc mov call sti ljmp push and mov inc jg jmp lret add cmp (bad) fcomip decl sbbl mov and mov das adc sub mov or idiv (bad) fcomip and lea xchg out xor cwtl xlat jle call ja dec scas inc xor outsb mov pop xlat xor mov (bad) call (bad) (bad) (bad) jg (bad) stos popf pop loope imul movb sub mov faddl test push lds (bad) (bad) mov xchg pop lea enter in mov add push (bad) popf dec lret cmpsl add inc (bad) (bad) ljmp ljmp xor sarb imull gs cli cli popa push (bad) jg sbb jbe mov xor mov mov push pop loopne incl cld aas inc push and loopne lea scas arpl add shlb js (bad) fisttp fcomip mov mov mov cmpb (bad) (bad) std lods cmp int3 in int3 rcrb mov scas jmp sbb push jbe dec sub or (bad) dec or lock dec imul cld push fs adc (bad) aas (bad) xchg dec lret or pop xor imul push js pop jp aas jg aam aas push pop hlt insb clc hlt (bad) jl jp ret jle push pop mov pop (bad) rorl imul (bad) push pop fcomip xchg lss stc enter xchg xchg add lds scas imul test mov push mov pop nop push mov jp bnd rorb push out adc jp lcall cld push addr16 sub push ljmp dec and pop (bad) (bad) (bad) lcall lock xor xor jmp stc inc addr16 les jnp jmp clc mov (bad) (bad) (bad) (bad) jp add jo dec (bad) lock xchg imul roll bound (bad) (bad) ljmp std shr dec mov in aad mov sbb stos int movsb pop mov add jle rcrb insl rcrl into mov or rol xchg fist jg mov mov mov lahf lahf negb (bad) stc pop test rcll dec lds (bad) push (bad) mov cmp frstor rorl mov popf jp call cld repz (bad) jo sbbb repnz clc mov mov cmp test or sbb ds ficom sbb lcall call repz (bad) dec in gs ja repnz adc std jle icebp (bad) (bad) (bad) (bad) jle pop mov leave lds int xchg cmpsb push push jmp jg loop mov sub lock inc sbb jp mov lret (bad) (bad) (bad) mov adcl jo push jecxz addr16 inc push pop mov lods push mov jnp jns sbb mov stos incl or int cmc jp inc jns mov push sub cld int3 pop scas jl les addr16 mov test xor xchg push data16 add mov pushl dec dec inc test hlt mov lahf popf lds data16 cmpsb push cmp negl out xlat adc jmp ljmp decl sar xor adc in mov mov pop push outsl mov mov lds ror sbb clc pop iret ficoml fildll mov mov and imul xchg ret insl pop ljmp fiadd aaa sbb cld inc out clc ficompl or push sahf out fwait loop lret push pop mov rorl adc push les push xchg dec adc dec cmpsl mov call mov or (bad) mov fildl (bad) cmp adcb xchg ss push push dec int mov out cmp ljmp call jb and (bad) cmp adc mull inc inc (bad) mov cmp push mov pop loop test push pop or (bad) incl icebp dec and push cwtl cmpsl dec push test ss ja jnp ss (bad) lcall es ljmp xchg out rorl test and xchg je (bad) xchg adc cmpsb cmp ja inc adc stos push cmp test imul add imul les call cld pushl inc inc fdivrl or aaa gs (bad) push push imul lcall arpl cmpsl mov mov inc loope das jbe jne mov adc (bad) outsl pop jbe icebp add (bad) fldenv ljmp sub das jno imul int3 enter mov js sub sub and (bad) decl lods ja pop xor (bad) aaa rol mov dec cmpsl push xchg push xchg fnstsw loope (bad) lcall lods sub call out inc sub dec shrb xor into xchg adc faddl push leave (bad) push pop jbe enter incl jg xor cmp je movsb roll jno mov (bad) (bad) fcomip (bad) cs cmpsb or mov rclb pop mov movsl incb or and lcall sbb ja push stos pop ret ljmp (bad) (bad) jmp call mov xchg jae lock inc movsl cmp jl sub cli adc es jl mov add bound mov ret jb push (bad) mov aas call cld pushl mov mov scas push ja mov lcall scas in jp (bad) (bad) decl insl mov push push mov popf push add ret jno pop clc and sub xlat fucomi cli outsl lds inc sub mov push (bad) das ss lock mov icebp int3 cs leave inc (bad) lcall testb jbe ficom mov sahf lahf cmp div stc mov loopne,pn xor mov cmp stos (bad) xor lock lcall mov inc mov aad mov mov (bad) decl and push test jnp cmpsb mov rcr push sbb loope push jno and cld (bad) (bad) call popf sub xor jmp fstpl adc (bad) push add mov dec mov int ss fidivrl call mov push icebp jb push negl cmp (bad) mov jp es scas sbb mov push ja mov lahf test fidivr inc cmc (bad) sti sbb or push add push inc push dec add cmp jmp sbb shlb xchg stos test xchg mov dec scas sbb outsb xchg inc xor pop icebp pop mov aas popl mov and (bad) jg sub daa push adc (bad) aas addr16 cs nop dec jo push (bad) (bad) lcall and cmpsl and dec fsub movsl push test sbb out sub loope mov inc sub mov in negb jne out sbb jbe jl mov xor jg jmp pop sub imul ficoml lret mov jb push mov nop mov mov fisubl test add cwtl xchg repnz push cmpsl add (bad) jg sub cwtl jecxz das sbb or cltd rcl add imul (bad) (bad) (bad) pushl push xor cmpsl push mov data16 repz popf jge loop in cmp dec test call and sub inc dec (bad) xor setbe cs adc mov mov push enter fsubrp fsubl mov add decl jbe xor cs ret dec (bad) (bad) mov (bad) mov dec das mov cli push push jns mov test fnstsw cli inc and les loop jo xchg les xor (bad) (bad) ljmp dec mov lock mov push arpl imul ds mov (bad) jmp stos sahf popf pop rolb in and sahf es call sbb or mov cltd scas mov dec (bad) in faddl fdivl and ljmp jge dec aad jnp addr16 (bad) (bad) ljmp negb arpl jo jnp and roll and add outsl cli (bad) (bad) pushl jo scas or cmpsl adc (bad) movsb sub mov push test jg mov stos mov jae jae push sub mov fs enter call out fmull ret add test shrl mov (bad) inc push out addb lods ficom xor out cwtl (bad) decl push mov ds cs loope decl lock (bad) scas inc cli xchg ja and test (bad) pop add sub rorb adc (bad) lcall iret dec jl stos ljmp int mov sub jo out orl call jb adc mov iret inc xchg fs sahf adcl call mov into sahf xlat dec aad adc xchg xchg cmpsb xor mov pop clc test out je xor lods pusha jns fisubl dec mov push jg loop in (bad) and enter int mov scas adc xchg push cmpsb imul push mov (bad) jno jnp pusha int3 fsts xchg sub fs jecxz fwait mov pop (bad) (bad) incl repz xchg sbb xor xchg pop cmp adc jl pop sbb sub lods pop test push push stc add mov stos decl push push mov and and push adc mov push cmp call movsl mov out out test jmp sbb std xlat inc and cli shrb pushl dec jg mov lock jmp out (bad) (bad) (bad) jmp insl inc outsb adc add pop nop push fs clc cli pop ds cwtl scas mul repz add call or push div mov cli xchg test cld jg inc and cmpsl mov push nop mov lds (bad) (bad) incl or icebp in pop cmp test (bad) fdiv lea jnp rolb lret (bad) (bad) (bad) ljmp pop cmp in mov sbb outsl sub mov lcall ficompl mov jg (bad) ds sub loopne jae jge gs out pusha cmp jg (bad) decl in nop (bad) ja rclb sub pop (bad) arpl pop aam paddw inc and and inc inc cmc inc aam push cmpsb ret jns in (bad) (bad) call rcrb mov fdivrs popf lahf cmp mov inc xlat pop inc cld outsl (bad) dec mov sub dec (bad) loop es mov jp push mov insl pop pop dec adc adc xor cmp les mov repz outsl xchg mov mov es popa movsl in push test lds and out lds je (bad) out cli mov push lock mov (bad) popa xchg shll mov mov cmp pop cmpsb jl cmc (bad) decl jecxz push mov adc push adc ljmp ds mov jg (bad) jp mov cmp adc jae loopne ret adc (bad) (bad) incl mov dec inc es xchg push add ret or inc pop scas das mov jge (bad) (bad) out clc int roll dec inc push add jecxz rolb scas push add xor (bad) leave inc mov mov test xchg jp mov sahf (bad) fwait mov adc mov mov cltd in sub mov ja (bad) mov push mov inc leave dec mov out and xor push sti mov je push pop mov rolb sub add (bad) outsb mov mov fisttp std pop lock xlat add cmp loope jmp mov pushl mov arpl mov mov cld pop cmp sbb and stos xchg dec pop scas pushf insb jl or (bad) (bad) pushl mov movsl xchg popf sub lcall sbb pop mov or test dec test lahf ds jg jg and mov dec sti inc mov lds insb fiadd mov pop mov mov (bad) mov cs and inc push mov movsl sbb jbe fs (bad) dec or jmp adc notb stc inc adc sbb stc cmp or test enter jne xchg add (bad) (bad) call pop sub mov sbb sub mov dec aas mov push sub sahf inc jecxz sub sub push fwait outsl test xchg cwtl lret fadds fiaddl xor (bad) pushl adc cmp jnp mov mov cmc dec popf scas xchg mov fdivrl mov ret pop loop fucomp mov dec lods dec push sarl cld arpl pop push push popf (bad) push test (bad) incl bound dec sbb das in mov dec mov xlat sub js or pop (bad) jg ljmp lods ficom pop es scas dec xor xchg mov mov cmp inc adc jp in add mov dec ret xchg dec sub adc dec jmp incl int3 int3 fcomi pop pop fstpl sbb inc jne repnz fwait stos push or lahf and xchg mov mov pop sub (bad) aaa std lcall movsl jle int3 leave ficompl jg jne inc imul stos adc (bad) (bad) jg pop sbb outsb inc cltd test sub sub cmp jg test jmp mov dec mov xchg cmc push lods push loop jp in pop dec xchg inc mov and sahf ret shrb xchg mov pop cld lcall shrl xchg cmp lret out xor and lret syscall stos xchg push inc test out or (bad) ljmp xor mov sub mov pop test pop clc add scas in das or loope or pop adc jbe fidiv mov fisubr lods lahf ds jle pop fcomip (bad) mov or mov sbb dec js lds (bad) (bad) call push add inc cmpsl xchg int mov imul xchg jge mov lock test mov adc ljmp shrb cmc inc inc in and test idiv (bad) lcall fs clc or subb dec mov loop addr16 loopne call dec push push loope mov push in add lcall dec mov push cmp lea iret (bad) fidivrl (bad) incl hlt pop dec mov pusha gs sub push or (bad) aaa cld stos inc inc dec dec mov scas pop (bad) jbe jg call lcall jns sub mov mov (bad) (bad) decl adc push mov in add arpl cmc fsubrl fmuls movsl sub cmc pushl movsl jecxz pop or rorb cltd je pop fsubrp in add lods sbb (bad) decl fdiv adc lea divb lret jb (bad) push cmp daa fistp jns push (bad) (bad) ljmp cmpsb insb lods push test jae fadds iret inc push xchg push cltd lock xor sub dec mov mov loope and (bad) dec push outsb (bad) (bad) (bad) cmp adc test sahf push rclb stos stos sahf loope clc pop xchg inc xor out add ret (bad) nop in popf lahf dec hlt (bad) jmp lret fldl scas push ret add movsb call jl fmull popa and add out repz rcrl outsl mov mov mov sbb and dec dec add fildl test add and pop stc push mov ljmp (bad) jbe mov mov nop xchg adc lds pusha inc (bad) pushl mov push inc and sub stos std pop (bad) (bad) (bad) mov pop mov push leave jae in outsb mov and cmp lock ljmp xchg ds repnz xchg cmpsb pop push or adc (bad) pushl and rcr xchg xor call in sbb rclb mov cmp decl (bad) or cmp cli daa and mov cmpsb (bad) inc jo nop in and (bad) test pushf fcmovu mov xor (bad) (bad) call mov mov xchg inc inc dec mov push cs dec rorb in std sarb cmp or test pushf jns inc xchg (bad) loopne hlt outsb test sub hlt rorb or call into or ljmp or outsb dec repnz and pop adc jl (bad) (bad) jg xor mov xchg jnp addr16 push shrl punpckhbw mov push outsl jnp sub mov js das inc mov or movsl adc call (bad) (bad) (bad) decl shll jmp mov xor out in sbb (bad) cmc (bad) sub cld (bad) fisubl pop jne stos mov push out pop cmp (bad) (bad) (bad) (bad) clc movsl cwtl mov clc fistpll mov das xor and xchg sub sub jp cmp dec cs add cwtl cmp out cltd call (bad) adc mov cmpsb rcrb xor (bad) scas push cld push ja je mov add adc ljmp push cmp rol add inc (bad) (bad) (bad) ljmp rcrb icebp cpuid (bad) aaa cs test test add mov add mov shlb out fimull (bad) (bad) (bad) jg mov jge stos mov sub cmp out xlat sub mov sahf mov incl jp (bad) cmp cs addr16 cmpsb cmp push jg (bad) (bad) jl adc inc push fcompl jne (bad) mov add sar aam xchg dec adc sbb dec or (bad) call add lods dec jbe mov dec push loopne ja mov adc repnz sub lret (bad) (bad) jl orl push loop adc and mov jb jl push sbb mov icebp pop aam gs in popa fidiv lods ret leave jp sbb mov xchg and mov adc mov pop je outsl jecxz mov out mov jns push (bad) fistpll cs inc movsl in in cmc jne mov cmp xchg mov cmp sbb jnp mov out (bad) ljmp xchg push mov hlt lret mov pop mov mov loopne xor int repnz aaa sbb sub xchg ret ret mov js lds mov mov testb (bad) or outsl mov cmp adc sub sub (bad) decl and imul cmc ret shlb ret mov cmpb pop adc add cmpsb fs (bad) (bad) lcall scas mov sbb inc int adc pushf dec push aaa fcomps jnp (bad) (bad) fisttp add nop mov pop mov xor xchg xchg dec out aad dec (bad) mov xlat xor fsubl aad imul mov bound or push inc shll sti movsl dec (bad) rcrb jo cs xchg decl add push (bad) jno das cmp adc mov dec (bad) ljmp xchg lods pop sub je fsubrs mov test mov xlat ljmp pop adc andb fs sub (bad) lcall and mov jmp cltd xchg (bad) mov xchg pop pop clc jg xor xchg add mov xor out (bad) decl inc cld fsub xor imul jecxz jae pop cmp idivl push jecxz adc mov rcr ficompl in gs pop (bad) (bad) (bad) push in push jp (bad) pop pop js rcll xchg movsl imul mov icebp (bad) jmp and lret sbb repnz test mov add hlt jl mov (bad) mov test nop mov test (bad) (bad) pushl sbb and inc dec call xor int3 aaa and (bad) stc jp or adc adc inc int3 clc enter pop insl jmp rcrb mov in dec clc sarb (bad) sbb mov movsl (bad) fbld add insb xor dec aam mov andl add jb cmp decl (bad) cs jo push lahf xor mov stos sarl jmp decl jbe mov in in (bad) shll (bad) call xchg pop test loop xchg push push mov gs mov jecxz mov (bad) (bad) fild test xchg inc lds enter cs int insb dec and int (bad) adc and push das mov cli movsl cltd insb cld or in lds cld and add or jle dec int xchg xor andl (bad) jo (bad) (bad) lcall pop jne fcomps hlt sbb addr16 pop sbb sub jg (bad) push data16 cltd notl pushf les cwtl mov stos test (bad) (bad) ljmp outsb mov lods mov and xor mov cld mov fs nop mov jl iret push jmp inc ret int3 inc mov ss repz outsb pop pop mov sahf scas je xchg mov push push outsb mov (bad) dec push and loopne lds insl push fidivr stc mov mov and cmpsl xchg add ja loop mov mov lods clc sbb and adc imul pusha testl inc xchg outsl sub mov (bad) (bad) (bad) incl sbb push rcll fs mov add lock incl push dec jge push push inc lret or jecxz pop pop decl push iret call xchg (bad) (bad) (bad) call or push icebp mov push xchg ret out pop push sub fnstcw pop or mov test xchg push (bad) lcall xchg cmp and push or pop and and addr16 test xchg ljmp (bad) mov and mov push or out pop adc add fdivrp (bad) incl and jl jns fs dec outsb movsb repz add (bad) insl mov lcall scas mov lahf jp add mov inc inc and xchg imul xchg mov ds rclb roll loop adc aaa lret (bad) (bad) mov popf adc inc test jg lcall sti (bad) leave pusha mov sarl leave mov (bad) (bad) ljmp dec mov mov cmovo adc (bad) ss or xor or or les ljmp stos pop jl sub (bad) jmp sub dec lcall add mov call adc push xor xchg jbe call (bad) decl out add xor cmp lods jnp push sub call mov decl pop fistl adc rolb sub (bad) push (bad) icebp dec ffreep subl stc rolb outsl cmpsb jge inc inc loop fdivrp add xchg rcrl jg pushf loope (bad) mov int stos add inc aaa adc jecxz (bad) and inc in and and xor shrb (bad) (bad) (bad) push pop popf repz mov daa jp ja stos arpl mov dec adc jg add loope sub scas (bad) sbb jnp adc (bad) jl lock mov std (bad) cmp scas adc add mov test cmp (bad) out icebp and (bad) loop jl popf leave fsts js pop jecxz xlat mov jmp out add cmp hlt incl test int3 sub mov (bad) xor jb (bad) (bad) incl lods adc imul cwtl stc dec rcll jo jmp cmp push jmp pop lock fild pop jle in xor pop adc or mov (bad) lcall ja (bad) push cld pusha std sahf sub aad mov push (bad) (bad) (bad) call pop outsb push je mov fldcw (bad) loopne pop imulb lret mov out mov call out out dec push pop fstps sub movsl jmp mov push jp (bad) (bad) std pop push xor outsb orl shrb xchg fstl stos je data16 push cli pushf adc add or mov add nop xor adc pushl push pop data16 cmpsb push lea mov (bad) stc add and dec inc pusha push aas xchg add cltd xchg mov test faddp and sub fildl sbb push (bad) (bad) (bad) (bad) mov repz jecxz adc adc cli dec iret jecxz in xor rolb and (bad) jmp add push cmp add mov pop (bad) and push mov incl data16 and xchg leave cmp daa push push jmp jecxz dec push push mov (bad) mov (bad) (bad) mov movsl jge nop pop pop or cmpsb in mov sub add movsb mov mov jge cmpsl cmpsl add mov push adc sub or inc scas addr16 int3 mov mov adc push ljmp test dec icebp xor sub (bad) aad pop (bad) cli scas pop mov add (bad) fcmovbe int xor cmpsl adc sub scas xchg sbb popf jns pop fs out pop (bad) decl out push es in bound sbb sbb pop push push mov add dec adc inc xor or hlt insb cmpsl inc or mov ljmp popa inc fcoms inc or push and xor imul incl adc loop es xchg (bad) mov jo add mov and add (bad) lcall dec repnz dec out jle addr16 (bad) outsb jb pop (bad) call xchg dec push push or les movb jb imul incl stc fnsave subb ret imul push (bad) (bad) out mov movsb and sbb pop lods shlb push test mov stos stos sbb ror (bad) (bad) xchg cmp in sarb (bad) (bad) fisttpll add xchg mov faddl fldcw fsubrs mov dec clc pushl lret clc loopne sub pusha mov inc ret out xor sub jmp rcrl lock push outsb cmpsb ljmp jecxz mov push cmp popa cld jmp add (bad) (bad) ljmp sarl and sarb ja mov sub adc out xor loop or hlt (bad) (bad) (bad) out push dec test loop add push jb inc subb clc mov test (bad) (bad) (bad) (bad) lcall out jns fcompl movaps sub push fisttpll jo hlt dec xor iret mov lahf lods jbe rcr out leave xor mov outsb (bad) scas jp ss jb pushl add mov push xor dec pop test icebp in loopne (bad) (bad) mov push test not mov out inc fldpi sbb fstl sub call mov in scas (bad) cmp mov aaa sbb call cmp inc mov mov insb ret (bad) jmp mov leave xor (bad) lahf (bad) (bad) (bad) mov fcmovb pop dec or xor and fwait xor mov and (bad) jp dec and shrb mov call fbstp dec cmp pop fistpl (bad) (bad) (bad) decl movsb leave jp out mov les test imul xchg xchg test call mov cltd add push out sub dec sbb fiaddl cmp sub fisubl xchg lods in mov mov mov push mov xchg imul bound xchg xor ljmp fwait aad popa mov mov mov shlb loope test cld mov dec cmp das clc pop std cmpsb or (bad) sarb adc mov enter hlt setne push xchg enter xchg scas push and (bad) fildll dec and pop xor pushf mov jecxz (bad) (bad) ljmp jnp mov pop lret or and xchg not push mov inc lret stos push adc (bad) (bad) lcall pop dec mov xor add mov mull lock pop adc jl inc int out xchg jle mov mov (bad) push jno mov pop adc cmc out test sub pop out push cmc pushl les mulb cld mov xchg mov mov mov (bad) incl cs cmpsl push aad sbb and stos loopne scas or fdivr (bad) (bad) pushl push cltd in xchg cltd lock lret sbb xchg cmp test push or mov dec sti mov pop mov mov add (bad) ljmp push fistl pusha mov ds push jno adc shrl sbb popa (bad) sahf push dec or loopne and mov pop sub add sub pop mov fiaddl ja icebp push mov cmpsl stos sbb out lock ja in (bad) pop mov (bad) lods aaa adc dec rcll in push inc fucomp xchg mov cld outsl adc xchg fiadd enter sub push adc rclb and dec (bad) mov xchg cmpsb addr16 mov imul mov scas jae mov push imul cmpsb (bad) mov xor xor jo mov inc push dec call push lret jns inc adc xor xorb pop loopne and add mov pop cmp lock (bad) stos sub loope neg shlb inc xchg jp dec push lods (bad) (bad) (bad) mov adc stos push push sbb mov jne mov mov dec adc icebp adc ja scas (bad) fcoml imul rorb repz inc rcll std add cmc rcl fs jecxz jo fsubrl in cmp fsts xor pop sub mov decl xchg sub sub test inc xor and pushl jae mov test inc bnd int (bad) push (bad) (bad) (bad) (bad) mov ret test test fs frndint xchg and cmp jmp adc leave ret loope aad js (bad) (bad) call push js mov fisubrl adc stos sbb add or and and icebp dec lret (bad) fadds or aad inc sub xor int3 inc inc lcall jp mov cmc inc sti or out ljmp or pusha inc in out dec fnsave lcall dec stos aad mov aaa cld std push sub fwait and (bad) call (bad) decl mov push inc jbe imul in mov or (bad) (bad) call rcrl in jle leave sub mov sbb faddl add stos sahf pop or mov in ljmp add cltd xchg sbb push mov mov or mov repz outsb sbb pop jnp (bad) jg cmp dec ja xor scas loop cwtl jns mov cltd sub sbb cmp fadds es out js aam push in push int3 jbe sbb ret stos jbe mov or adc xlat jg movsb pop fsubs pop pop ret add (bad) (bad) (bad) jg outsb ja add adc call ljmp cmp push imul (bad) call scas (bad) and loope dec out inc les xchg mov pop sub jae das or fdivrl je (bad) (bad) (bad) call jno jb jo push or jbe or mov inc jbe fsubl push or cmpsb cmp pusha movsl jb mov test jne sbb sbb pop fisttpl outsl pop test dec mov test fdivrs push pushl insb mov inc gs mov hlt sbb lock sub fcos (bad) (bad) pushl mov mov in push pop cmp repz or ljmp call mov push sub les adc xor fnsave sbb inc aam pushl insb xor sbb in add test sahf xchg sti daa sbb xchg call add push xor or loop and addr16 ficom mov icebp (bad) (bad) jmp insb hlt pop mov (bad) pop push int jno ja mov bound jb xlat icebp xor dec clc fbstp movsb in fs push leave stos mov sub mov sahf daa and push sub xchg lock or mov nop xor mov sub mov popa and shl push and lds xor mov mov or sarl cmp imul lods cmp das add movsb xor mov fisubl mov rcrl stos arpl sbbb xchg push mov cmp mov xchg out aaa popa rolb adc or cwtl ficomp sbb jo or bound jle ljmp jmp cld or mov push inc push push push push fs ljmp cmp mov xor out pop cmc repnz (bad) ss xchg inc repnz ss sbb mov jno sbb or clc add sbb cmp pop lcall add dec cmp pop mov (bad) pushl cmp jo test jge jge rorl punpcklbw outsl mov in lcall in jmp (bad) jmp fcmovu (bad) jne dec sbb push test cmp mov push mov jle dec mov dec xor dec outsb bound jge mov fbstp sub sub (bad) (bad) incl dec lcall call cli imul pop fstpt pop cmc call (bad) cmp jbe pop les or shll jg dec and imul xor roll stos lock ljmp or mov xchg lock loope stos pop jns aaa lcall add mov push mov jge sub cli fdivrp ljmp inc cli es ja and or sub jmp stc (bad) (bad) (bad) jmp mov movsl sub scas rclb inc adc popa dec out sbb inc cli (bad) (bad) ljmp stos ror lahf mov xchg mov pop mov loope andb sbb (bad) (bad) out movsb mov xlat jb push push inc sbb enter aad in repz xchg ljmp sbb push sub jo aad cmpsl pop jmp push adc ss sbb pop icebp leave cmp xor dec in call clc cmp iret mov jne or xor rorl (bad) push fucom into sub pop jno pop and adc (bad) incl mov arpl (bad) xor scas ja fwait icebp mov mov (bad) outsb sbb in sbb (bad) movsl or lcall outsl (bad) neg sbb stos xchg cld inc cmpsb les cli (bad) (bad) call shr pop mov movsb jno (bad) cs dec lret rol out scas mov push sub cmp (bad) (bad) mov jp xor cs sbb loopne add or (bad) decl push xor xrelease mov decl push jl addl xor test add cmp mov add xor std sahf shl mov or jg std mov or popa xor iret idivb data16 xchg (bad) out and inc add iret push jnp mov inc push or addr16 or cmp cmpsl (bad) ss jp lahf (bad) (bad) (bad) (bad) fsubrl inc dec (bad) js mov (bad) cmp cmp cmp mov xor insl (bad) (bad) xorb popa icebp sahf jp aas les mov push (bad) xor mov pop mov mov inc testl aas mov subl inc call (bad) fisttpl mov ds push mov ja std add mov mov imul push and add ljmp push fidiv aam call xchg mov (bad) jg hlt pop daa sti mov xchg add stos pop mov (bad) pop mov adc jle int mov cmp xor sbb xor jle mov mov sbb inc jecxz sbb push or dec push pop fldl add (bad) (bad) aam iret imul (bad) cli or mov mov pop jns movsl sbb mov jne mov (bad) (bad) (bad) call mov cmp cmpsb (bad) xor pop test ret cli out loop not mov (bad) call std mov dec xchg sub shrb scas (bad) and clc stos (bad) (bad) mov push pop fiadd in sti int3 mov xchg push pop cmpsb popf lcall (bad) fcomip or sahf stos addr16 aad rcl pop adc pop xchg (bad) jg (bad) in push repz sti iret loop shl inc scas mov (bad) and adc push int3 jmp bnd hlt incl pop hlt lahf ljmp in mov or (bad) aam dec inc roll xlat sub (bad) sti mov or (bad) (bad) (bad) idiv push sbb push fdivrl shr cmc in es pop xchg (bad) (bad) call vmovupd dec stos push les lret (bad) cmc fistpll xchg dec mov lock jge sub mov dec mull out outsl cmp jle inc jae xchg or incb xor clc xchg cld les sub push mov (bad) test leave mov in (bad) dec ljmp pop or jmp mov addr16 icebp jbe or scas cld mov imul jg add movsb mov (bad) mov lods jg lahf movsb jle (bad) movsb test popa jg or sar lods xor sbb pop lret pop mov mov (bad) (bad) jg lds jg out daa pushf inc stos aas sub pop fnstcw sbb lret cmpsb clc lds les jg stos mov sub repnz jg mov push std fwait sbbb cmpsl fisttpl aam fistl clc fstpt lea data16 jb dec repnz sub add fildll (bad) pop jmp aaa std mov mov test push xor scas stc cmp jns jne into out mov jle push movsl or cld mov idiv xchg push xchg cmpsl outsl mov (bad) decl mov daa push scas sub std fild leave inc (bad) outsb mov hlt and fisubrl jno stos repnz mov (bad) (bad) lcall popf lahf (bad) sti std dec sbb adc mov outsl lret jnp lahf (bad) jg out sbb cld or mov leave fucomip stos clc adc and repz decl sahf cmp repnz lock in cltd pop lahf out mov pop (bad) incl fisubrl sbb fmul negl std pop rcrb adc xor lret sarl jg sar sub cmpsl or dec (bad) pop xor and jg xchg aaa frstor jmp arpl sbb or mov adc sarl rorb stos inc movsl hlt jg mov mov xchg test pop hlt loopne xor lret fcmovnbe (bad) test fcomp mov jmp mov dec pop jo std pushl jo scas cld mov (bad) xor (bad) repnz out push sbb test mov xchg dec push enter (bad) jmp jb push cmpsl rcr imul or in stos pop movsl leave imul inc add sub std lcall loopne jb jp clc jge clc (bad) (bad) cmp push adc icebp enter lea popf pusha pushf test sar dec push adc mov cmp dec scas cli outsl mov mov ret fstpt ljmp dec jl jecxz gs dec out jg mov ja xor in xchg jmp xor sub jmp xchg cli pop lahf xor cltd adc ss cld idiv aas (bad) pushf inc out add xchg dec jbe repnz mov (bad) push fistpll stos mov xchg (bad) out insl or mov mov mov mov hlt xlat mov dec outsb jb xor loope stos popf dec psrad outsl stc xor neg popa xchg lahf in fcmovnu (bad) fbld cmp mov and cmp int3 cli mov jg das cs dec icebp lret imulb rorl outsb cmp push sub xchg push addr16 ja clc scas xor les inc mov (bad) mov fsubrs xchg lret enter loopne sarl loop jbe lret mov mov shlb out rolb ljmp (bad) stos mov imul push pop pop (bad) dec pop xlat in sub sbb sar fiadd adc (bad) (bad) (bad) pushl enter loope fstpl jle cmpsl out xchg cmp mov fist mov decb sbb mov pop cmpsb in ljmp imul jg sahf xchg sub leave loope (bad) sbb add negb cld (bad) xchg lock xchg test add inc mov sub stc psubd mov cld out mov std icebp pop out loop stc ficomp inc lahf xchg repz add test or sar (bad) sti pop mov pop out pop dec jge or sub adc sti (bad) fbld rorb int3 xchg dec out push xchg xchg (bad) sahf add jg loope ja cmp cli jb cli (bad) out cli xchg mov cmp cmpb pop ss in pop shlb shll cmp in dec (bad) ljmp inc les jae cmp jb and ds pop stos stos xchg test sti pop cld out sbb mov cmpps add hlt mov jmp lea daa das mov jg scas mov pop insb dec push jl sub lahf movsb gs mov push dec cld call xchg xlat push pcmpgtb daa clc inc dec and aas clc stos xchg adc cmpsb mov aam mov fld fildl xchg cmp dec jl jge loope pop sarl dec jle ljmp rcrb pop rorl pop lods xor (bad) push movl xlat adc gs mov roll push bound push mov dec cmp imulb (bad) fldt or cmpsb inc pop in idivl mov cmpsl cli dec cmc inc jae (bad) (bad) (bad) inc imul dec xchg out imul std es mov out aas loop (bad) mov push js sub bnd xor mov (bad) and adc add (bad) and popa sahf pop scas adc das popf js shrl lcall leave lahf (bad) fimul stos sub mov clc cmpb (bad) jno inc xor jg and test fisttp pop xor push xchg sub fidivrl in call adc icebp jl iret sahf dec xor pop out jg mov fdivs fnstcw out stos dec aad xlat sbb mov jmp arpl push cmp (bad) (bad) incl fnstcw clc scas stos loopne inc fldl2e pushf or mov jo dec fnstsw (bad) (bad) std and cli dec ss inc (bad) push push ja sub push pop mov aas ljmp aas pop mov push mov sahf pop mov aas jbe stc lret ja mov add out arpl jg inc std (bad) (bad) call dec mov jmp cmp loop lret mov mov jp sub test mov (bad) (bad) call aam sub jp ffreep sub sti cld xlat mov mov movsl dec scas mov push mov mov add mov jno dec sub stos ljmp mov push mov sarb fcoml push aaa std decl cmp push and (bad) repz cld push (bad) shrb xchg (bad) (bad) pushl and insl adc push subl adc dec dec outsb addb dec lds call sbb out out jmp lahf ds jge aas cmp les ficom test push adc sbb push push loope inc (bad) and notl adc xchg xchg mov xor add (bad) fistpll incl add pop rolb sbb dec clc add and outsl fs lcall add nop lock pop out ljmp outsb popa insb adc cmp and sub and js cmp out mov test leave (bad) ss inc clc push out add popa int add fcomps stc es xor or in push imul push fwait sub cld insb pop and lret sub pop jae push xor ss jnp fwait add pop sub jae aaa xor push jb cmp push adc cmp pop icebp loope adc ja les cmp out popa arpl add add es pop mov incl inc cmp insb outsl imul sbb add cmp push arpl outsb addr16 jae dec adc sbb popa loope ds add jae dec jb mov pop push shrb and bound gs mov cld out adc fs push mov sbb push gs jge push pop jbe adc sbb (bad) and jns popa jb inc xor sub and sahf imul (bad) and loop or mov mov add dec inc mov inc adc cld sbb inc insb sarb add sbb and jnp pop pop mov mov ja or inc jne jb arpl jbe and fdiv xor outsb push insb insb insl inc pop jl pop ficompl or loopne xor jb cltd push sbb inc subl fstps loop loopne jo je dec jl push adc fildll mov shlb lcall loope mov push pop dec push gs cmpsl pop pop fisubr dec inc bound adc pop mov mov dec insl pop jl into push pop cmpsb push lods and pop pop push or sbb dec dec pusha lock jo sub adc cwtl (bad) repnz sbb jno push sti inc adc push adc inc out es jo push or jnp dec inc dec lcall push in decb push add and popf push push gs insb (bad) mov push mov das push jb dec xor lea mov push test or push or stos adc push mov mov push test push adc pop adc sub lea inc push popa pop ret (bad) cltd pusha pop mov pop enter xor in lock mov test sbb and pop pusha leave out ss adc jb movsb sbb xrelease sahf je adc pop xchg xor fsts pop adc xor data16 xchg stos outsl repnz pop and xor jl jo jb mov ss outsl popa fs push cwtl or insb sub pusha mov popa jns inc mov mov int orl repz mov xchg or push fs xchg pop out gs inc sbb jae sbb or mov and jbe repnz fwait xor push enter and xor imul clc pop inc fs and jae sub cmp ja mov sbb rcrl in sub sub stos pusha lods sub rolb loope jo sbb and pop popa xchg (bad) clc or jg adc popa ss jo sub sbb adc shrl roll xor fidiv jbe mov es repnz pusha sbb int stos jmp jae ljmp sbb lcall xlat sarb fwait jne in sub inc jbe,pt cmp ja out fild fbstp js pop test mov out xlat jae mov das sti xlat daa jns repnz adc sbb mov inc add call push cmpsb add lds repnz clc add or enter add mul xor jg push adc sub aaa mov (bad) shr cmp add sbb mov outsl or lock enter mov sahf cmp and outsl in nop lret fadds xchg add pop movsb repnz clc push add add test ret in and iret jg je or dec in ja xchg mov or add test ja jle fistp pop incb movsb out add repz test or repnz in dec jmp xor push stc jbe ret push dec les xchg daa clc out fdivrl addb fwait pop dec gs mov shrl add jbe xor dec (bad) jecxz adc idivl mov add loopne sbb jns or insl hlt ror vmwrite out in test mov sbb mov out or cmp outsb and xor and fstl ljmp adc js cmp outsl pop mov push lahf pop xor cld add nop out push fmul add push nop mov pop notb mov xchg iret jnp jle sbb pop in jge push sbb lods cmp ds dec pusha xchg jle xor add dec add cmpsl jns mov outsl sbb in sahf push test inc fwait pop dec (bad) sahf push dec jo shll repnz clc clc add pop push or pop xchg jl out js dec or mov pop cmpsl insl add push add and imul fcomps sub sbb mov fmull or movb mov mov adc stc mov sub push js adcb bound xchg mov or and push add movl adc or fs sbb pop add or jl jge mov push daa test (bad) lahf int3 mov jle loope fiaddl cmp lcall into inc ljmp pop mov xor cmc push dec mov or cli xor add mov and out sahf out fnop out bnd add insb and jecxz clc daa out add rcrl add icebp or fcoms test (bad) pushl dec lahf dec add dec lods test loope xor cmc jmp or (bad) sub rclb test leave or das js or aas or (bad) decl mov (bad) adc sbb push adc sbb lcall cli mov roll outsl add aas enter and aam or pminub in out add pop or or repnz mov pop movsb sbb jb and push pushf sahf pushf mov add jns jb (bad) subps mov sbb lcall ja push push mov mov xchg xchg daa aam jl dec dec outsb fnsetpm(287 mov mov and mov sahf xchg andb daa jo shl rclb (bad) cli jp or push sub sti into cmp xchg outsl cwtl jne test ret dec pop mov fs scas cmp jns je xor fs sti fidivr push push jae jb fs jb gs imul push (bad) rolb inc mov push add xor outsl jbe ja aaa push push cmpsl sub scas jecxz jns aaa push (bad) adc dec mov dec push push mov dec xchg jp push mov ret arpl or add jo aad jo clc push mov or sub sarb out push (bad) ss adc aad push jg mov xchg adc les cld cmpl (bad) lods call nop cld decl push xchg int mov pop jne roll xchg fsub cmp incl scas and lahf jns mov enter mov or pop pusha add icebp adc in adc push or mull out ficoml push mov js,pn ret les mov gs bound ds push xor or (bad) xor inc push dec inc mov xor inc daa push xor inc adc push fidivr add inc push xor inc ss cmp fbld dec push push pop jae test xor pop dec push inc inc push push push push cs jg inc dec dec add ljmp push jne je imul inc dec imul add icebp inc inc pop add pop sbb xchg or ret pushf inc cmpsl pop or pop mov push pop test sti pop repnz add sahf mov jle addr16 add jbe push inc jb push mov ror enter inc mov iret mov aad adc call dec dec pop dec jnp adc sahf cmp jnp leave or in leave and jnp or movb push add out in adc inc xchg mov dec or jo lcall dec iret negb dec jl out fsubrs leave and or xchg pushf je xor dec push add mov sbb out pop or lods sbb das jns sahf sahf inc add sbb das lahf pusha pcmpeqw in sbb das inc inc fs repz out pop push adc pushf push out push dec push repnz je pop lcall sbb lock lahf jo pusha sbb mov dec sub mov bound out pop aaa mov mov cld (bad) and fwait sub inc aaa dec adc jg inc insb push scas pushf and add fadds xor push (bad) cmp adc and enter inc mov fsubrl popa (bad) nop add add leave test sahf pop pop sub cmp aas (bad) rcrb xor subl cmp popf adc iret cmp pop pop and jge mov xlat fcompl and (bad) jbe xchg ds push push jl pop test dec cmp sub push pop xchg dec dec dec cmp mov dec sahf pop push inc adc adc dec repz adcl dec adc dec adc je cmp jns dec pop or pushf pushf cmp sbbb and daa xchg push dec lcall enter fisub dec sbb dec in incl dec mov cmpsl fs add lahf add xor scas pusha es in (bad) inc es fs enter sub test pop push cld sub pop or jnp jl loopne lcall jo inc pop jb enter jae in je,pt dec in pushf cmp adc js dec sahf xchg xchg inc sub xor dec or pop or dec dec dec sbbb and sbb sbb daa iret leave fcompl mov les daa sbb xchg sbb xchg out ss xor clc (bad) in fidiv pop push cmp enter cs xchg xchg fwait aas pushf das les and das mov in das je movsb xchg out xchg or xchg test in repnz xchg xchg adc leave xor bnd movsb enter jp pop jb add rclb cmp mov xchg xchg xchg out rorb daa xchg xchg aaa repnz xor cmp xchg and xor xchg dec sbb sbb ficomp or daa fucom icebp jo das out enter in or in dec int3 iret leave and sub fcmove push jg add enter xchg inc ja dec aam ficomp pop dec xor das out fdivrs jae cmp clc out push test imul mov jae pop pusha pusha adc cmp loopne dec mov dec dec dec (bad) out call in out iret enter sub push in in xor daa xlat dec xor xor inc dec leave test push add imul js push or adc dec dec aaa cmp dec cld in xchg mov push pop mov sbb jb aaa jg fidivrl cmp cmp roll push bound mov repz xchg mov lcall or sbb cmp jnp push xor dec pop iret repz data16 lea cmp ror call mov pop sbb cmp nopl ss repz push pop push repz repz repz (bad) in stc push sahf out lcall jns out push popa outsb jnp out sahf out mov out sahf (bad) jecxz std or cmp repz xor dec pop repz repz mov cmpsb mov int mov sbb fs and lds enter mov add sub sub mov in or pop hlt addr16 push enter inc mov ljmp in or jbe in or inc and test jb enter pop test jns enter and or dec pop adc sub inc and test or enter push inc es or xchg cs mov (bad) or and mov scas jl movsb das (bad) stos pusha pop int3 mov mov das and sub mov or mov mov in or xchg mov or jl cmpl int3 sbb mov sbb cmp xlat pushf jns,pn imul xchg mov iret (bad) fisttpll repnz cld fistp cmp add nop loope sub pop xor in pop out or imul out in mov jbe scas sbb hlt insb sbb xchg mov adc cld add and add jl push in add insb pusha inc enter mov fwait ss push add dec jns rolb sbb mov jbe adc sbb das sbb orl dec rorb and mov nop xchg or pushf mov orl sbb sbb enter pop jmp and and nop xchg or and in rolb iret and repnz xchg fsubrl pushf sub push fs mov leave sub jl nop xchg mov dec jb rolb cmpl sbb add insb inc cmpsl or pop and cmp cld dec jo outsl loopne sbbb cmp test inc das test cmp dec push fildll hlt sbb dec loopne inc loope ds adc outsl dec lock rorb inc add push jae fcoml or inc sbb and xlat jl and sub push xlat and mov cmp cmp repnz daa pushf fs cwtl (bad) daa int3 and push or ftst and sbb das xchg mov aam xchg leave leave in nop push adc adc leave jae hlt push adc in jns adc push pop adc mov mov leave enter in push mov das insl dec push push or xchg je mov xlat dec ds in outsl dec aam enter push jl lock push cmp or push or jb dec inc or or xor clc xor push jb xchg xchg xor cmp push movl cld and inc add cmp in nop xchg pop add add or cmpsl test pushf fmull cmp nop push pop mov push cmp push aaa daa xchg pushf fmull ss loopew or push cmp and and cmp xchg pushf pop mov pushf pushf and sbb dec dec sahf cmp and dec dec sahf xchg js sub cmovle cvttps2pi enter cmp adc and cwtl and xor daa daa iret leave clc pusha push cmp xchg addr16 pop pop push xchg cmp mov xchg and sbb leave leave xor mov jb mov or dec add fcomps push sub fcompl leave leave in nop pop xor or leave jae mov sbb pop sbb pop cmp js in movsb pop push cs add push or (bad) pusha mov and enter add test loop jbe lahf push xchg pop dec sahf xchg dec fs jo xchg dec dec sub in sub adc dec je ja inc lcall add test jb test or fsubs pop mov addb cmp loope popa xor test sub mov repnz mov xchg mov bound das dec jae leave dec mov push push nop insl jl leave leave jae insl xchg push leave leave jae cwtl nop push cwtl leave jae leave outsb mov outsb jae leave leave pushf dec (bad) mov leave leave leave dec mov leave jae arpl or inc test cmp inc cmp inc in mov mov pop in in hlt popa mov xchg out cmp das dec mov gs sbb out xchg xchg mov xchg xchg xchg rolb xchg xchg out inc les iret fistl push jnp sahf cmp enter daa inc add push dec inc leave and and dec shrb daa iret leave cmp imul daa iret leave and iret leave and leavew and nop and imul leave lods mov sahf out jnp enter and cmp aas xchg xchg addr16 lods aas in jb repnz jl gs jbe lock lahf mov dec jb leave leave push hlt dec test leave leave jae dec clc jp leave jae (bad) fdivrs les leave loopnew addr16 xchg int3 scas incl dec cmp cld xor add aas pushf jl in data16 dec or mov xchg lahf or pushf pop jb push adc dec cmp insb and in in adc mov in cmp sbb in mov in mov dec cmp fsubl in cmp in cmp jno repnz repnz pop jb xor jb fs mov fs push test cmp repnz pop test pop jb mov jb inc js rcrb js pop fdivs repnz rcrb jb pushf pop hlt in dec jns pop jb adc pop dec cmp push dec sub mov dec push pop dec in in adc (bad) in cmp in mov cmp mov pushf inc mov fs in in dec jo inc in cmp in mov insb mov imul dec sub repnz mov push jb pushf pop inc xchg push jl pushf pop jb pusha movsb je pop jb sbbb pop jb repnz test cmp ja add mov add xchg pop dec pop mov jge jnp js mov add push sahf out in shrb xchg push scas mov jns lock std or push sahf out sahf and ds pop gs out jb mov out int dec loopne push mov aaa inc sbb add xchg fmuls (bad) sub daa jg,pt inc cs ja sub or inc and inc jo in js mov pop enter adc mov and test add enter inc pop adc loopne inc push enter aaa pop and lds sub repnz mov fwait sub adc inc jo pop test rolb mov fwait sub cmp pusha mov pop and enter into add mov xchg pop and fstpt insb add push jg push insb mov pop and sahf imul inc es js inc mov mov jb lock jl add inc aam lds mov xor mov mov xchg add mov ss mov mov mov or pxor cmp fs daa test test aaa clc and sub jo mov cmp outsl adc inc scas fcoms aaa pusha sub or lods nop fsubrs xchg and sub in mov scas nop enter test dec xchg pop mov fist and aaa or push enter in test dec inc scas nop sub sub or scas nop dec dec dec enter lcall aaa pusha pop and mov test dec sub nop sub sub or scas nop lock enter push push mov jns dec xor test add xchg mov ficompl jnp in stos addl mov fmull mov aaa and add mov imul sbb stos in xor scas jl pop scas sbb stc xchg lret ret add jae imul fmul mov imul in ret sub les dec (bad) int3 fwait dec int sbb in jb iret insb fwait sarb rcrb push dec xchg (bad) lcall pop adc dec pushf dec stos cmp jp stos es in add lock lods je push push add xchg cmp lea jae adc (bad) push jno rolb jb mov jmp pop das pop add mov or fwait dec pop jbe sub dec mov xchg out push fadds pop enter push mov push and xchg or js mov pushf mov (bad) in and mov fadds adc mov or add xor or fadds iret leave test lock xchg or sub sub in add or push pop cmp daa or or add and inc enter in xchg popa mov xor or jp dec push aad pop pusha cmp inc scas (bad) or in bound (bad) icebp inc je jo mov and xor push repnz in cltd nop push inc pusha add cmp scas rorb shrl scas in adc aas and inc mov je lock pop enter andb mov aam mov add or fist insb cmp aaa sbb fstl (bad) (bad) incl add outsl sbb jl lods mov cmpsb call mov (bad) (bad) incl pop mov mov fmuls aas flds (bad) jae sbb push fildll cmp in and jmp addl jbe js enter (bad) (bad) (bad) incl ljmp (bad) stc add mov push (bad) sbb dec xchg push mov mov aas movsb xchg adc dec inc pop mov jmp add adc xor (bad) in fsubr in loop cs sbb ja sbbl or and repnz iret lods out add sbb sbb add (bad) (bad) jmp cmp dec loope test test inc mov mov mov jg adc (bad) (bad) call sbb or inc lret repz pop mov stc mov fbstp iret and idiv (bad) (bad) decl mov mov or sub xor push add or dec mov mov scas inc add popf mov lds lret pop ret add dec movl call inc mov mov add ljmp loop out push (bad) (bad) (bad) ljmp xor insl lods lahf out (bad) ja xchg adc push xor jae cltd jbe (bad) (bad) (bad) decl divb popa repnz jmp (bad) sbb faddl pop jecxz adc xor cs incl ja out sahf scas in int je push or inc xchg int cmp testb xor (bad) (bad) lcall cmpsl icebp in xchg add dec push movsl lock mov push xor mov pop fldl insb fs scas jb add pushl popa fldenv inc mov xchg mov adc (bad) sbb loope xchg insl pop add fs mov add add test (bad) rcrb out aas and pop inc inc lret jbe insb pop add insl loopne jne cmpsl push test arpl jb mov mov into lahf arpl xor mov xchg sub push and inc gs je pop lock push xchg dec data16 neg out dec dec cs das int outsb and inc xchg jae sbb xchg dec mov daa (bad) add insb jb insl mov inc mov insb adc pcmpgtb push fs push sub inc ficoml std push dec dec xor xor xor popa repnz aad fidiv push sub and add scas or lcall inc jnp fcmovu arpl dec hlt fidivr add xor push scas pop push inc pop and outsl adc aaa add clc sbb imull (bad) fwait jb push add pushl arpl fidivr stos xor out sahf addl scas inc push pop dec sbb (bad) dec pop js rol pop mov imul jp push jns imul mov and jae adc mov es xor cmpsl bound inc adc enter dec mov aaa push outsb outsb outsl lahf jnp mov fs inc cli insb mov push jb lock pop and arpl outsb push jb mov push jne push out out fcomps pop jns lcall push pop inc mov inc insl rcr cmp insl xchg jbe mov je pop fs pop rol fwait gs popw addr16 pop inc inc adc bswap jnp jl insb scas jae imul jno (bad) xor outsb addr16 lds gs push outsl mov dec arpl pop addr16 sbb mov add dec movsl pop xor in xor fcompl jae mov fdivp fimull cmpsb jo dec jp jl je pop iret jnp insb push dec ja inc (bad) dec repz icebp sub sbb push jb mov push xchg inc punpcklwd gs lods loopne jbe sbb es repz jecxz jl,pn dec pop xor xorl cmc cmc inc je outsb pop jbe,pn push lock icebp lock push adc scas ret aad ja mov pop faddl mov or cmp or sub mov call addr16 pop xchg push lahf fisubr outsb adc adc call jg adc push fiadd and fwait or dec inc inc mov jno in adc sub fs cmp stos sbb or stos aas outsl mov mov imul cs inc jnp pop fiadd jo gs inc (bad) sbb sbb add add bound push insb inc pop inc fisubrl lock arpl sbb mov ja repnz (bad) jecxz jmp mov aas mov ljmp and or inc dec outsb (bad) xor daa xor add push mov mov cmc cmpsb add xchg fstl sub sub sbb ret (bad) jne sub cmp (bad) mov lds jns jne cmp ret xchg add sti push mov mov cmp push add das sbb imul mov sbb bound pop pop imul inc xorl sub bnd jmp mov ja fwait ja repnz or idiv push insb fistp or scas mov imul and loop outsl addr16 popa jae dec imul (bad) je jae popa insb (bad) (bad) sahf adc outsl pop push inc cmp or cs dec inc sub fidivr out enter or loopne ss int out sbb fisubl pop sbb out stos cmp mov sbb stos jecxz (bad) and daa outsl push cmp jmp sti jne in sbb jbe cmp mov add sbbl ljmp dec pop loope xchg xor ja dec or icebp fwait popa outsl sub out sbb xchg dec outsb mov (bad) jbe jbe (bad) je test push daa add adc pushf scas pop enter ss les lds pop aam adc sub sub aad mov xor push jmp push (bad) cs push add xor push daa daa push cmpsl xor xor add imul sbb (bad) mov aaa rol sbb shrl cwtl and jae inc or out push lods roll ret rep cmp cmp ds adc pop dec pop in lret push dec aad push pop fidivrl lods pop pusha or vmptrld dec push rcrb jb gs out mov mov jae dec cmp jge insb aaa out and (bad) mov fistp lahf je xchg js adc jg pop fidivr pop jae jne pop jle dec xorl mov es fwait addl ja ja repz sbb pop cmp mov mov test inc sti out jns loope icebp pop outsl repz mov aad shrl adcl lea pop mov push fwait daa pop popl insl xchg and push outsl imul (bad) jae jg xor jmp jo push mov push loop test jmp das jo jp outsb mov test je out sbb inc fwait mov js xchg (bad) push popa pop out xchg out inc mov push pusha mov mov (bad) jbe push or mov dec call cmp add mov andps or out mov cmpl pop fist aaa pusha adc out jno inc (bad) pop jl imul inc arpl sbb jo das (bad) xorl addr16 fwait loope jo cmovs xorl sahf lahf das inc (bad) ret xlat cs (bad) jb jg and jb mov aad pop push xor stos dec addr16 je test repz fbstp ret ja sub ljmp push fistp add ja mov btc ss xor mov fs pop cmp dec outsb aaa push add xor push xor xor mov sysexit xlat aaa and (bad) pushf negl ss into rol xor ss sbb aaa xor adc mov addr16 loop push pop jb or add mov add add data16 and test sub inc pop jmp imul add inc pop test jnp shlb pop jae movzbl (bad) aaa cmp xor sub ja add testb pop xor or in imul push cltd daa xor ret imul mov xlat push lea sub mov sub ja pop xchg jg sub leave push mov (bad) push cmp cmp xor arpl add test pop stc push icebp push daa jae lahf dec lds xor test in or ja aas and push xchg fisttp add pop daa test add mov aas xor cli lods jecxz xor and add dec bnd gs mov cs pop inc js movsl (bad) mov inc (bad) mov cmp push scas adc lcall (bad) je jmp push int3 and gs rcrb pop imul push dec outsb gs push inc rcrl inc imul pop jns pop mov test nop dec push mov or ss nop jo or inc (bad) mov mov enter test jae,pn ficomp inc inc push push enter es dec outsb jo mov or ror mov pop fwait adc push in in xor xchg jns sbbb lds mov dec push mov sbb dec leave add mov loop cmp lock xor clc dec lcall inc push dec or ja pop mov (bad) test cld and cmp add pushf mov imul jns push aaa aam or adc mov dec in cmp and jo mov and cmp xchg bound add adc add inc clc mov pop jl cwtl add in cmpsb or dec push loope pop add dec dec dec sub gs inc insb shufps push push bound push push add xchg mov xor and push call outsb in sbb scas add push mov pop or or leave sbb mov in lds dec inc dec dec loopne cmpsl and jl or outsb jae jae inc outsb inc fs or rorb push pop add shrl sub sbbl xchg adc popa adc mov inc pop inc or into sub cmp orb nop or mov push fsubs je add jns cwtl inc dec mov xchg mov les js cmp xor clc andl je loopne jmp add fisttpll mov retw adc dec in test jns dec pop jmp arpl sub add sbb mov mov jge ja dec xor mov cmpsb dec add test pop xchg pop dec sub push mov dec data16 inc aam mov mov add xchg push imul mov call inc stos sbb cmp pop testl cmc push sbb dec insb inc jae rorb push outsl cmp arpl fimull sti jne jecxz or je js rcrb mov std outsl dec out pop pop jbe popa dec or inc arpl jge test jg mov add ret inc js dec scas out mov stos aas loope cmp out aaa arpl sub mov ds and pop daa or (bad) fistl cmp icebp push add dec xchg xor push test imul fbld ffreep jbe lret xchg mov aas or push inc push inc add sbb or sahf std push adc decl ud2 (bad) and dec xchg (bad) lcall sub scas daa test fiaddl and pop out fdivrp add call into hlt out push roll adc xchg lds ljmp xchg push push je clc mov lret outsl fs push dec xor (bad) incl or (bad) cmpsl mov mov fistpll fbstp adc (bad) fcompp mov (bad) fistpll fidiv je sbb das push cs xlat lret sarl ss or ljmp jmp js xlat cs push xorb pop cmp sub aaa stos add inc mov jecxz push fistpl push dec mov ja xor pop mov ljmp mov fwait or shr pop adc rorl dec cmp inc sbb cli push je out push dec inc push mov test popa outsb enter xchg mov inc ss sub hlt add sub push pop pusha adc inc jp add or inc loope xchg mov loope jnp pusha adc xor imul or pop push pop sub xor mov (bad) sub fist mov pop inc jo and mov insl jo mov sub pop dec outsb inc push sbb add jp in popa pop inc outsb fs inc jb inc gs jne mov jb pop push arpl ja pop aas rcrl jg xor arpl fwait mov sbb jbe insb outsl ja add inc sbb xchg inc popa (bad) mov dec jo pop xchg frstor std inc scas cmpsl add push sbb daa or js daa daa pop pushf loope mov jg jne cmpsl dec xor shrl dec outsl jo and iret stc lea rorl mov inc pop dec pop or push jo lahf push mov mov or pop pop testb rcrl pop xlat mov add mov sbb test add jno js jp sub add aam and ds test mov insl cmp or pop call (bad) sub push push into add and dec lcall cmpsl sbbb lcall fisubr add nop dec jno mov rorb outsl outsb (bad) jne mov rcl jbe cmpb je or xor sbb add outsl sub adc and pop ret pop adc jb addr16 jns out or adc sbb sahf xlat popf and cs xor fdivrs xchg inc or dec push mov cmp add notb notb sbb mov pop rorb sub push lcall into jo dec and mov xor push jnp xlat mov (bad) mov daa push adc sub push adc cmp arpl inc ret bts scas test pop pop popa stos push push inc push xchg jb mov mov add or sahf push fwait sub popa cs fs (bad) popf pop or daa or add push add dec pop ffreep dec imul dec add or inc xor jp les push sub adc andb and dec (bad) xchg (bad) mov aas jmp inc mov push sti das push or push mov lea packsswb test push addr16 shl inc jnp dec and inc or inc mov inc iret rclb daa inc lcall pop push adc jo add or add sbb push ret (bad) test out cmp push (bad) jmp addr16 fstp mov daa jnp dec faddp push mov push aas jge cli and outsl lret vmwrite pop lret addr16 out fdivrs sbb sbb inc imul loop mov aas inc jecxz jmp mov lahf inc fildl das inc xchg mov movq jb outsl mov or lret arpl mov scas push bound and xor sub cmp fwait pop (bad) hlt je,pt je outsl push xchg mov stos add test out fs pop outsl pop imul (bad) sbb cmp scas jbe pop ljmp dec cmp jbe imul jg jbe or push js dec mov insb jg push dec sbb outsl xchg jge add inc push inc addr16 xchg ret cwtl dec cmova pop popa (bad) dec mov jb push cmpsl sub aam jg cmp push scas (bad) push pop push bound cmpsl sub addr16 pop pop imul sti adc dec mov sbb mov mov jae add sub das jl adcl dec mov mov add add test daa cmp test cmpsl sti mov xor sbb xchg push bound jno jne dec bound inc jecxz and mov inc sub mov aas call mov addr16 jmp stos push or xor push lods ljmp or aad rclb mov (bad) mov (bad) and mov ljmp daa fbld outsl imul add sarl inc adc xor sub push mov dec sub arpl add push push and jg pop cs das or sub add dec pop out add inc (bad) addl lea cmp aaa inc push sub mov or jbe (bad) pop xchg mov mov arpl push daa das push ret cmp and ss jae out mov add or xor pop int xchg orl loope sbb (bad) andl aas push aaa arpl (bad) sub mov inc psraw dec inc mov xchg mov daa insb mov jle and push mov mov mov pop and mov cmpsl daa inc mov add xorb xlat push jecxz das pop mov push fsts aas movl (bad) mov add lods xchg or fsts mov inc or psrlq xor xchg fistpll addr16 imul push cwtl test push and push inc jno jmp mov outsl add xchg dec fbld or push jg xorl and imul add dec gs push (bad) and inc outsb fs dec aaa mov mov in arpl mov insb dec adc or and data16 and test pop jbe sbbl xlat aas sbb dec adc add movsb dec sub push xchg movsl jbe insb aaa nopl mov jbe jne (bad) negl inc lret inc movsb pop ds jp stos cmpsb xor mov lret decb (bad) xchg jmp pop mov fisttpl dec push add insl repnz adc push das push iret ret iret xor xor and pop push ret xor inc das aas jb inc mov xor dec aaa cmp in cmp mov out push push mov rclb pop pop pop and enter fs push das xor test pop daa xor xor xor jb push jb xor push ss aaa and and jl pop jno mov sbb sub add outsb arpl es daa imul movb es fcmovb jae and add imul je inc or bound and shr inc mov add lods push js loop xchg or xchg pop fdivrs jo dec fidivr xchg xchg les cld pop or in push mov xor sahf push xlat in in dec andps dec (bad) in inc push inc aaa jnp jnp inc pop push dec pop push push mov push push xor inc dec xor mov sub loope or inc mov jmp xlat cmp je scas arpl (bad) jne arpl ds or xchg push add das or movl sti adc push sbb add (bad) dec mov test iret mov mov sbb adc pop add inc jp,pt mov ja and sbb cmp lods pusha xchg imul movl push popa lret outsl lods mov aam xchg push jmp cmpl in dec xchg dec (bad) adc lahf inc adc xor mov scas adc pop mov adc loop mov push mov adc scas outsb (bad) ja jb jmp inc mov mov fdivr sub lea add fwait pop sbb repz push sbb iret xchg mov mull sub mov jo psubq insl xor dec push jns push fs mov insl push pop arpl inc dec or xor sub nop adc or rolb mov mov imul xchg inc or cmpsb add lret pushf inc add dec mov test and xor inc mov stos aam lahf push push push imul adc mov push rorl out nop cmp push add outsl adc inc mov and loope push and adc dec stos mov popa jne repz adc jne bswap lea sub stos push cmp out dec and and adc mov or fistpll xchg pop (bad) dec aas dec adc or pop push adc lods andl and adc add add adc dec inc ret add movsl stos mov or mov fldl sub es and inc pop jo add sub popfw (bad) adc pop ljmp (bad) xor fldl frstor and rcll push and mov or push pop and mov movzwl mov mov (bad) jnp inc mov xor mov aaa mov mov adc mov ja movsl pop jp popa fwait pop add add outsl out push sub or push sbb adc add (bad) sbb inc adc jg test jg push int3 mov xchg scas push cmpl pop push pop (bad) ja push and punpckldq loope lds dec lods pop add push xlat shrb ja fisttpl daa pop out jns jae mov xchg ret inc not push jnp mov sbb inc pop mov iret outsl push rorb jbe push or sub jmp mov lock or add lods (bad) fiadd inc popl sbb popa scas cld adc adc fsubs jne idivl adc mov xchg pop and mov cmpsb pop jnp dec outsb adc xor mov pop in cwtl lea push pushf test push and inc sahf adc xchg inc dec cmpsb sbb sbb fistl jno icebp subl mov repnz adc aaa sub aaa loope lods mov pop jae sbb sub and ja icebp dec sbb mov dec clc movsl inc xlat inc mov and cs xchg rolb or scas inc fildl mov or and jne,pt add addl movsb and jmp push push adcb (bad) (bad) fidivr inc addl rorb xchg pop mov inc outsl pop pop xor jnp dec ret pop arpl push or xor bound lahf mov cmpsb xor pop repnz push and push push mov stos pusha dec and sbb neg pop push scas inc push out mov dec daa xor imul inc pop test pusha add or pop pop xor add add mov push mov mov and addr16 xor mov pop js push daa fiadd sub test add push rorl out inc cmp addr16 out inc or xlat push sbb outsb inc add xchg mov sbb push nop stos sub xchg cmp sbb mov cmpsl sub sub shrb and shl push loop adc mov and ja pop mov idivb sub pop cmpsb lods pusha and pop out push inc add jo add ret stos adc cwtl dec mov scas add push shrb movsb adcb cmp pusha aas pop and adc jmp or insl sbb les cmp arpl or inc pop stos sub addb mov movb mov (bad) ds lea inc mov mov imul movsl inc lret mov xchg xchg jl jmp jae sbb call jecxz mov or mov scas push sbb add push add and inc bound adc sahf sub jmp jae (bad) mov mov pop fdivrs scas loop loopne mov mov pop leave adc add or inc pusha scas movsb push xor stos cmp xor lds xchg push mull shlb dec nop fs mov adc cmp ss xchg and iret (bad) ljmp and mov mov mov sbb ret cmp stos xchg dec xchg add mov inc mov or inc roll push push mov add iret xor arpl (bad) into jecxz mov pop bound adc test push mov fldt mov or sub pop daa pop jns imul cmp and push or aam xchg mov and jb mov mov pop or outsl mov push adc inc sbb ficomp mov ffree fiaddl adc iret push push insb pop sbb inc imul imul mov mov loop stc add sub mov dec or mov es mov orl add push add sub scas cmp fmull faddl xor pop xor xchg xor imul je jbe data16 and out inc xchg (bad) sbb cmp inc or scas cmp xor cmp adc pop xor pop test inc mov mov dec call es loop push push jo cmp out outsb pop push js roll sub (bad) in sbb cs aam (bad) push pop push out jae push test ja bnd sub sarb jae es add imul mov popf lods (bad) mov inc insl xchg mov inc xor dec out inc fiadd pop inc imul push xchg push sarl dec popa xchg inc es xor mov dec sbb cmp push das fist dec mov loop sahf fldl sub pop fsubrp loopne mov je ret sub cmovnp mov push xor ret dec pop inc (bad) aaa mov pop scas arpl ja inc mov mov dec jno gs push in mov jp mov ljmp dec scas out rcrl mov fs dec lods inc and inc notl jnp or and dec mov pshufw test inc push jle scas pop pop hlt sbb dec mov inc mov dec outsl push pop dec sahf jbe in jl,pt dec pop xor inc mov ret mov ss loop jp lock ja push lret push test ret andl push push adc jne aaa int (bad) insb aaa dec mov mov jo imul push pop push push andl mov xchg imul cmp push push or popa jbe mov xor call (bad) push fs push xchg aaa pop dec add (bad) out push fild push sbbl outsb sbb sbbb or push lar insl cwtl (bad) movb mov jno js mov out add sub fistp jno ret ret ja insb repnz dec clc jnp das inc xchg dec aaa in test das imul mov rorl rorb or je loopne addr16 bound mov repnz push outsl jnp js imulb jae (bad) mov sbb jo xor xor push ret xchg or shrb dec jbe dec (bad) jp push mov xor xor jge out loopne outsb jbe lret imul fsubr loopne dec pop jbe aaa jp sub pop mov add push call jno add mov data16 mov push ss sbb jnp mov bound push ljmp aaa fbstp xor jne es mov mov dec adc imul (bad) outsb imul (bad) js (bad) push fimull jbe mulb dec pop lock iret jae pop cs aad popl push repz (bad) cmp cli dec pop sti xor pop das mov jae fstpt hlt sahf jb xchg sub fimull xlat es dec mov mov cmp push ljmp loopne push push daa ficomp loop push jbe push inc push cmp out scas xchg sbb inc scas imull mov lock shlb js gs insl sbb push push outsb push sbb mov lods ljmp jl out lret dec loopw pop xchg out repnz es aas dec cmpsl mov push outsb push push cmpsl insb into mov push mov dec push add stos insl out push arpl push push out inc (bad) mov mov push add imul inc cmp outsl outsb sbb sti jp pop repz dec dec add cmpsl iret cmpsl jo dec rorl pop pop xchg or (bad) gs inc adc jle pop shll aaa mov stos bound jno jp pop pusha aaa bound jp push out std sar push adc dec mov xor push fidiv popl lahf ss repnz add mov cmpsl insb ficomp mov or push bound js or fwait inc arpl fnsave imul push add jmp sahf add pop rorl pop mov (bad) dec imull sbb jne cmpsl mov enter arpl ja lds push pop ret or out xlat sbb fiadd lret rorl fbstp mov xor cli hlt mov lret jns push sahf jp mov push cs push fadds jmp test pop mov pop rcrl insl xor xchg cmpsl lret cmp ss fidiv pop aaa pusha and push cmp fbstp loope scas dec fild inc sbb inc inc xchg into sbb out mov outsb cmp call jecxz fmuls js addr16 jns aas pop mov and xchg push pop add sbbl cmp lock rcll pop loope dec jg (bad) divb mov inc dec xchg inc js dec jmp cli dec lcall jg or dec outsl dec pop mov movsl xlat dec sbb xchg lock decb es add jb je stos imul pop rcrb jno movl push popa dec pop data16 (bad) xor push xor in mov mov insl push andl dec repz bound dec jl xchg push pop cmp inc insl or shlb xor out jmp adc pop pop stos ds inc fs mull sbb es clc les cmp fwait push jge push mov xor jo dec cmp mov sub out mov sti inc and jmp mov loope pop incb inc mov das aaa push push loope jbe imul arpl add js loop iret push testl repnz cmpsb (bad) push ds xor out mov adc jb cmp mov or push xchg dec mov jae jo mov lea inc aaa bound ljmp lds sbb add insl cmp fdivrp out shlb ja push cs push inc loop mov ret inc cli xchg jo gs mov push mov pop jmp out ja outsl xor lds rorb jb xlat sbb aaa insl lcall ucomiss jbe pop fisubr jp push (bad) sbb pop lahf jae,pn jb popa ja ficom loop cmpsl inc aas push xchg dec bound push out movsb jecxz xlat arpl pop lea scas xor dec xchg push mov ja sbb dec movb out jbe fimull cmp dec add xor pop jo lcall in ficom xchg push ss push sbb cmc (bad) jnp jb js dec cli outsb jb push sbb punpckhbw in xchg sub push push loop add (bad) xor or add jnp mov jns adc imul mov dec dec out das dec fwait mov aaa lds loope inc arpl push jp add sbb mov data16 wrmsr pop add cmp (bad) xor add lret xor fs push sbb adc test jnp aas adc pop out jne ret dec cmp rclb clc add inc into adcl (bad) jns bound lcall das insl out push andb dec imul je lea clc icebp fisubr dec or push push inc outsl mov and addr16 daa icebp hlt cmp cmp jle xor mov adc inc inc xchg das insl or sub arpl scas inc jg imul aaa sbb push das dec cmp jo mov inc push (bad) and add cmpsb outsl xchg lea push push and les dec jecxz pop sub pop bound push cmp push pushf adc push fiadd or xchg xchg dec dec js and dec xchg daa push ja cmp lret (bad) cmp (bad) jo and jns loop xor ja push xor xor jle xchg (bad) xor xor insl xchg and xchg xchg push xchg cmp jecxz lret pop iret fistpl inc rclb sysret ljmp sbb dec mov outsb or subl idivl das push inc jl ja scas rolb or add add add add push mov idivl ss repz add out mov mov add dec (bad) xlat imul sti push mov out stos cli xchg sbb jecxz xchg mov cmpsl movsl cs inc xchg bound inc mov pop jmp add push xchg inc xlat stos or (bad) cmpsl ss leave dec in popa arpl jecxz cmp (bad) jecxz outsb pop mov mov push fisubrl mov cmc scas ret out or jmp xor dec gs data16 push pushf mov push insb out cli jp jae push mov jp inc inc hlt push outsb jg jg aam inc push cmpl test sub jne add dec ficom (bad) testb dec arpl mov scas inc xchg js inc jecxz adcl adc fmuls lahf movsl cmpsl ds push (bad) stos inc or outsl out imul lret xchg push out (bad) xor js push push sub mov mov push ffreep dec xchg outsl cmp ficomp push movsb inc pop inc add (bad) aad mov arpl push mov adc inc (bad) inc pop jno mov (bad) mov push add add xchg stos dec mov mov outsb addr16 and (bad) mov push (bad) xchg inc aam mov inc outsl xor incb add roll dec push mov ret pop pop js daa ficompl inc add pop dec jo (bad) rolb mov outsl push and lcall mov addr16 fs sub and dec outsl jbe add lret mov and push or inc mov outsb ljmp jns push push add outsl pop xor divb jge int3 or push push adc jle cmp push adc add inc add jo or inc sbb fsubrl or ss or das or pop pop ficom pop dec or dec or movl add fstpt jbe add imul or inc or pop jp xchg add pop pop cwtl push outsl push das movsb push rcr add sub scas dec outsb inc jecxz inc xor and add rolb push (bad) xor xchg mov pop push pop cs push insl pop mov add lahf mov lods pop xchg insl or or sbb pop lahf movsb negl mov scas fiaddl add int lds fisttp pop daa push and ret or inc push cmp pop addr16 cmpsb push cmc push insb pop xchg pop add mov out cmp sub in in aas and in in jl cmp ucomiss gs inc cmpsl pop and js test push insl and sbb test andl mov or (bad) jae and js pop cmpsl pusha insl insb pop xor ja xchg lret in push adc and or dec push jo fistp add enter jl,pn das add inc out popa fs popa jo adc xor dec or add sub lahf out or push mov test nop je mov fsts xchg add jne je add stc push push sub xchg pushf mov mov jae mov adc sub lock aas pop cmp dec test addr16 lahf mov push roll pop ret and add xchg mov push add pop dec inc fs add mov ja or test fwait lock cmp mov xlat inc pop sub gs dec gs js loopne mov add xchg or mov dec and leave sbbb es xor mov (bad) xchg mov shlb cld jne sbb fadd int3 push aaa in nop (bad) mov jne aaa mov addr16 or (bad) fs inc jle and rcr ror pushf pop add cltd movsl pusha jb jae xchg faddl in add scas jp (bad) mov in call lock pop xor push out xchg lods dec pop push pop lret imul xor pop bound and bound in daa (bad) push mov call mov push cld stos or and imul iret sub nop xlat jg iret fcompl push xchg or cmp adcb xchg add mov mov lahf test jo push inc push outsl imul imul jae mov and and dec outsl xchg jb xor popf inc lahf fmul and jb cmp push or pop adc add ficom and test insb in and mov and dec push and test (bad) or test mov cmpsl xor add pop sub pop enter mov pop out in xor (bad) jne inc fiadd sub push jb add iret pusha push adcl add test mov sub add xchg add xor mov aaa push faddl dec push dec dec jnp pop xchg mov jae xor jo adc imul hlt mov addr16 xor mov aaa outsb adc mov mov cmp mov (bad) notl insb hlt imul sbb loop stos pop pop mov (bad) sbb add lock xchg ja sbb outsb dec insb fbstp test xor and pop iret xor dec testl adc and jno lods loopne inc xchg xchg ror xor pminub sbb dec jmp push arpl into popw xor pusha call push pop xlat push push mov pop mov dec inc mov jae sbb out clc popa cmp addr16 add sbb bound or cwtl xor outsb outsl (bad) pop hlt xchg cmpsb loopne fild push sbb xchg pop mov mov lahf jbe mov cmp out xchg xor (bad) mov xor pop jb xor ss push imul sbb adc notb dec xor adcl cmp pop xor push ss xor fisubr popf push push xor pop ss mov pop xor jbe sahf pop jle mov lahf pop (bad) adc lcall rclb out cwtl arpl xor xor mov pop aaa pop inc outsl das xor dec addr16 (bad) mov xlat daa sysexit xchg sub outsb pop inc pop pop inc insl sarl das das mov roll push and outsb wrmsr (bad) xor sahf xlat pop scas adc scas iret (bad) xor pop mov (bad) aaa pop outsl ret push cmpb fistpl out xor (bad) push or fistp xor mov (bad) pop popa (bad) dec aaa pop ss xor or data16 jae (bad) inc fldt pop outsl xchg push in mov pop jle mov jg scas outsl out lods pop mov outsl push es or outsb daa cmp pop xor iret scas xor outsl fstl mov out (bad) pushl insb rcrl (bad) int3 push xor push xor xchg xchg jbe je xor or mov xor xor jnp out pop out xor cmp pusha lahf divl lods movhps scas mov data16 sub mov cs scas lahf mov lds (bad) pop aas test xor es dec mov divl adc or inc sarl scas dec push lds sub add push cwtl movsl popa aas mov insb rcrb inc inc insl add aaa mov (bad) xchg mov pop data16 pop aaa in pop and (bad) ss lods fcomps aas cmp (bad) jge pop lahf fistpl lock negb fistp aaa ja inc jo scas xor aaa (bad) push sub mov or pop outsl out cmp bound imul inc pop pop mov mov out pop ret push cmp popl xor pop fldt scas incl push mov lret push pop xor pop push jg ds xor lods sbb cwtl push mov and scas inc outsl fwait cmp pop lds cmp pop nop pop inc ja dec add add loop (bad) out pop inc andb (bad) add jecxz sysexit mov lds jno inc out jbe xchg mov push xchg xor imul shr lods mov ss ja inc adc test cmpl iret iret pop dec mov dec dec aas outsl ret adc add outsl dec popa lds rcl jg push xor cmpsb lahf xor xchg mov cmp push and ja push insl fldcw add jbe xlat xor adcl sarl pushl pop (bad) aas push or mov xor add pop aaa adc push push out outsl pop mov mov jno mov cmp (bad) sbb inc sbb lods pop xchg aam das pop pop mov sbb pop es inc xlat scas (bad) addr16 push aas dec push insb pop scas xor mov mov pop pop pop xor xchg push fisttp pop aas cmpsl fcmovnu xchg and addl fildll xor jg (bad) push mov lahf mov (bad) inc outsl scas fsubrl pop sub out push pop sti sbb rcl mov xor xor sub scas inc jg lods rolb inc sub jmp (bad) sbb enter xor xor mov pop ja mov pop test mov aaa mov pop pop mov outsl (bad) fidivr xchg inc mov pop inc mov add fdivs xchg pop jg jno pop addr16 inc dec sbb jg imul pop aas xor push sbb push xchg scas pop in add mov out fstpt aas ficom insl incl scas inc mov das adc outsl divl mov inc pop movzwl ja popl pop add lahf mov xchg mov imul add loope or xor aas mov adc pop inc (bad) push pop lods adc gs cs add pop arpl test movsl mov inc sub (bad) jg sub (bad) mov (bad) out push or aaa out iret aas cltd inc (bad) mov out dec sbb das in inc sbb dec inc pusha sbb pop dec mov out sbb push mov xchg and stos aaa scas outsl push orb mov jg jo sarb mov jp (bad) (bad) rclb push outsl (bad) and lcall sbb rorb out sub mov movsb xchg push add push add nop mov fild or lock mov add add les movzwl sbb mov mov aaa sub xor dec adc or out aaa mov pop neg mov pop bswap and je (bad) pop push pop rcll ss push insb xor scas jg imul xlat ucomiss or pop and scas (bad) idiv pop orb jnp xchg addr16 (bad) xchg pop roll js xchg outsb lahf xchg mov mov mov sub mull (bad) mov pop out (bad) push mov pop test dec mov stos (bad) jg jg insl insb fidivl rcrl ja insl pop adcl ret test pop mov insl sbb daa fidiv movb outsl (bad) mov ficompl out (bad) dec roll aaa sbb (bad) sbb (bad) xor jg pop or inc fistpll imul jecxz das jg xor lea push mov pop das (bad) lea das jg mov es (bad) out mov xor inc out (bad) inc pop incl inc pop xor or mov mov rol aaa inc pop lds xchg pop xchg subl push aas or pop aas mov pop xor scas lods mov mov (bad) decl lahf das dec ficompl pop lcall arpl xchg lcall push push add int3 and gs mov adc addr16 mov xor outsb arpl pop lcall xor cmp arpl mov gs dec ds arpl dec jae pushl or jmp in lods jnp push cmp pop je xchg inc aas out js mov addl push push dec loop inc sbb and inc cmp lahf pop inc cmpsb inc pop imul mov push xchg mov pop rorl daa ljmp pop adc dec (bad) jb jbe xchg cltd cmp push popf mov jmp fmull andl mov les aam leave pusha ja insb sub pop push lcall dec jecxz inc lods inc sarb fdivrs mov and je mov (bad) (bad) decl inc rorb mov jae lret fmuls (bad) in mov incl ljmp xor pop (bad) decl lods mov repz dec rcll das (bad) rol pop push push arpl ret in push aaa inc xchg jnp out fs rdpmc push pop dec sub jb repnz or rcr dec dec (bad) jmp cld aaa ljmp test cwtl mov insb sub push jno push scas lcall sarb lret jmp add adc arpl dec std insl add add add inc xor push push pop and rclb stos push push add sbb lss or pop (bad) mov xor mov push or add ds adc and xor dec nop clc mov aas pop adc sbb imul insb add clc push adc mov adc push push cmpsl (bad) and enter pop push imul sub cmpsl xchg sbb shrb adc sbb sbb add or sbb dec insb frstor icebp mov nop push enter pop ret movsl stos or mov sbb xchg neg repnz iret outsb mov add pop pop xor imul inc mov les add cmp fnop adc inc or xchg and (bad) add cmp or jg or push jecxz jle and test out js pop (bad) xor sbb pandn rolb mov ret add sbb fimul aam cmp mov lret ret adc aam test (bad) icebp mov cwtl xchg or dec pop shlb ja add and cs (bad) push add mov das pop sahf or or sbb dec out jno repz cmp mov sub data16 sbb pop mov cs push push and movb mov add aas xor adcb test or nop and inc and or jmp (bad) xor or add stc pop test push jecxz xchg (bad) into adc ja pop fldcw enter aas dec mov leave sub movsb sub sub mov aas pusha dec push adc movsb aas add push mov mov dec sub dec roll or stos mov mov fadds std and sbb adc test nop push add or inc adc fisubr inc cli in cmpl iret dec push add adc inc movsb repz or jle lods add or xchg out dec test loopne mov push and cmp bound stc fsubrp stc adc mov ja pop cli adc fdivr xchg dec inc inc or call dec out inc add jge dec or jns inc or dec pop sub jle and pusha cltd enter jno add sub mov push mov push es push cmp inc and push and cmp or sbb jns cmpsl imul js or or in frstor and xor add xor adc nop adc (bad) jae in add sbbl add fidivr add push xor push sub pop push dec cmpsb push nop xor xor dec int3 cmp xor gs mov outsb popa in popa insb cmp xchg movsl cmp or jne sub ja dec dec xchg in jae xor aaa arpl add es mov push xchg push std (bad) sti mov push dec sbb inc (bad) add or pop fldl aas ud2 or push addl adc adc (bad) sbb sbb sbb pop and push and push pop push mov push or push push adc adc add adc mov adc push lods fadds add (bad) push cmp pusha add cs mov push add xchg add dec incl inc adc xor dec jmp push jae xchg mov push xor rcll and inc bound push mov ficoml sub fisttpl fstl adc add push push dec push or add xorb push aam pop (bad) ljmp pushf adc jno mov xor loope push bound movsb push fdivl push mov jo add inc adc sub lods roll and push (bad) ret cmpsb push dec and push dec mov fstp (bad) (bad) (bad) lcall fstpl aam jb xchg lods dec lods cmp push test lds sbb out imul call inc loopnew pop pop or test adc mov (bad) jmp sbb stc stc xchg flds stos inc dec cli dec sub jnp (bad) xor (bad) (bad) jmp adc mov jecxz pop cmpsb jne inc dec pop out push cli leave fmuls jmp or stc cmp mov in sar (bad) (bad) jg cwtl push imul out jne sarl cmp gs mov mov (bad) (bad) ljmp cmp in test mov popa push clc adcl or call in jmp xlat pushf mov lcall fist mov fwait sub adc dec iret into xor outsl shrb (bad) mov push cltd sbb jmp adc aad jecxz call cmpsb mov or rorb mov sti push fstl xchg xchg jge lcall mov sub pop mov into nop add popa hlt cmc test pushf (bad) ljmp jne pop mov into es push push mov ret int3 outsl imul (bad) call pop lcall (bad) cmp faddl cmp repnz stos das pop gs das clc (bad) decl lcall mov fildll frstor cmp mov push ljmp xchg cmp push aam mull loopne jnp pop jno fsubrl push mov xor subl xchg mov inc dec icebp xchg xchg sbb mov stos sub nop add movsb sar mov xor jo mov enter add add inc pop push adc call dec push pop icebp (bad) inc (bad) out jle jmp ds fidivl test xchg insl jns adc clc inc jg or ljmp sahf xchg xchg jl cmp rclb jnp inc sub inc outsb cmpsl cmp mov and push rclb in adc jne movsb xor and call movsl lods imull rcrb (bad) (bad) pushl mov aam push fs (bad) mov inc and inc add cmp jnp (bad) (bad) (bad) pushl jno mov mov add (bad) das jb xchg cmp and lods aad lcall (bad) (bad) (bad) (bad) incl or fcoms mov aas adc mov std jae icebp xchg lcall xor adc xchg xorb cmp xor (bad) (bad) lcall add xchg xor pop jns inc pop jmp (bad) mov es test scas add cld (bad) (bad) (bad) call sub (bad) mov jmp xor icebp mov mov sar fisubrl (bad) icebp les xchg nop mov jg inc push sub shlb and xor xchg int gs (bad) incl and jne mov inc mov test shll out imul mov sub sahf mov dec xlat dec cltd xchg sbb rclb ret mov (bad) (bad) (bad) (bad) jmp adc cli jae je cmp xor mov dec loop mov aas (bad) xor cmp (bad) insb sub iret push jmp jge cmpsb mov test (bad) call sub sub cmp orl mov stos mov rcrl cmp push xchg and negl lret mov ljmp mov push in iret fs test jne cmp and inc add fcomip decl js mov nop push (bad) and cmpsb push mov pop cmc fild and push jb cmpsl es cltd mov mov decl mov cmpsl gs js test cmc and out fdivp mov (bad) mov pop mov (bad) (bad) lcall pusha push cmp dec cmc jb mov pushf int movsb hlt in rorl daa add jbe movsl add ja add and xchg dec (bad) fistpll mov xchg loop dec inc mov sbb outsl mov push adc call cld jb cs lret or (bad) pop pushf add or push fs jg (bad) mov stos add pushf inc inc jno push cmpsl mov stc mov (bad) pushl and xchg pop cltd pop dec (bad) xor xchg and outsl movsb cli dec (bad) (bad) ljmp bound leave loopne lods int push lods jmp out (bad) xor xchg ljmp jnp cmpb or jae cmpsl pop test test jbe in mov mov push iret cmp lret aad pop inc inc push in jo jle hlt cmp (bad) (bad) inc add pop mov add pop test insl adc dec mov mov (bad) (bad) cmc xchg pop push repnz in xchg xchg inc into add push in out clc (bad) (bad) fstpl xchg testl ljmp mov (bad) pushl mov dec sahf sahf popa mov (bad) icebp add and into bound mov pusha sub lcall sub pushf scas sub out jge int3 pop jg xchg cli out jecxz cmp xchg sub xor adc aaa mov sahf cmp iret ljmp xchg mov mov (bad) (bad) fidivrl pushf fldt jns andb push cmp sbb (bad) lods cmp dec mov pushl cmp stc dec push jle aaa (bad) (bad) lcall roll aad aaa lcall ret lahf mov popf pop inc mov cmp (bad) int3 divl (bad) (bad) dec lods dec jle inc mov out mov and pop jbe aad xlat add cmpsb dec sub (bad) (bad) dec out xor lods jo (bad) mov test push ret idiv lret and (bad) (bad) pushl cli pushf insl pop xor jo xchg cmp ds gs or (bad) lcall sub mov ret je mov mov (bad) aad faddl icebp (bad) ljmp je adc into add test adc (bad) call (bad) jns mov mov push cmp cwtl fldl jg test cmp and mov push cmpsl test dec (bad) push pop jmp adc incl lods cli xor lock mov mov lcall xchg or punpcklwd sbb push and les mov push stos (bad) (bad) (bad) jmp and or sbb and push popf movsb jmp push aaa add (bad) (bad) lcall in and sub cmpsb aam mov jmp dec sbb out (bad) (bad) (bad) mov push and and jae insb scas mov lret test (bad) (bad) lcall push test insb test out in mov jbe mov jp ret stos (bad) fcomip push mov push cmp push aas jp pop sub insl pop jp fildll inc cwtl xlat xchg mov lods xlat adc (bad) call sbb and sbb adc cmp sub xchg sbb lea mov call add cmp mov push pop in mov adc mov aaa je sti popa jnp cmp nop mov lahf push or lcall std sub xor call int lret mov cmpsl faddl jmp jno out sahf or mov sub imulb neg xchg cmp (bad) call or add sub jno sub jno add repz xchg std push adc mov ljmp gs (bad) (bad) (bad) mov (bad) rcl adc jne mov inc sub sub pushf cmp (bad) (bad) (bad) (bad) (bad) (bad) pop cmc stc sbb and ss bound and jae (bad) xchg movsb icebp mov or pop add xchg dec cmp (bad) jg lcall aaa fimul repz push mov out lds repz fcomps test hlt and sahf ret inc cmp cli lcall (bad) negb loopne incl leave jecxz and cld fs inc jns test (bad) decl fwait scas mov mov popf cmpsl ret ficompl pop jb adc adc lahf les mov mov (bad) (bad) (bad) jmp xchg pushf sbb (bad) in movsb insb les dec sub fbstp je mov aas sub outsl mov std fcmovnu es sub and stos in lcall (bad) (bad) fildll cli ljmp push je data16 das shl mov clc sbb cli (bad) (bad) mov (bad) cmp mov jne cltd pop xchg out pop adc test fwait (bad) (bad) (bad) pushl movsl dec cmp adc sub fstl dec je push sbb mov mov incl sub jnp add ja fistl push lcall and jae jae repz (bad) mov aas cs adc mov dec sub adc and sub (bad) (bad) (bad) cmp fstps clc and push add test (bad) push mov out sbb ret insb add std (bad) incl push xchg push popa sub cwtl dec fnsave movsl and adc repnz jb je scas (bad) (bad) (bad) (bad) cmp pop inc push dec and or loopne fcmovne dec out cwtl xchg sub movsb in add (bad) call into movsl popf lock xor or push inc add pop push sbb scas daa aam fdivp sbb mov sbb cs call jno jp adc pop ret mov arpl (bad) mov aam aad (bad) lcall cltd xchg jmp iret mov popf popf push mov add out mov sar (bad) (bad) lcall mov adc xchg mov cmp stos xchg cmpl (bad) (bad) (bad) decl push jecxz je or (bad) xor xchg pop sbb adc fadd mov fisttpll cmpsb jle xchg pop sbb cld loope inc out mov cmp ds ss or dec jle in jmp xchg std rcll xor dec jno fidiv xor mov daa stc lds mov jmp fs (bad) jne into (bad) (bad) (bad) (bad) js mov dec pop lret push jb bound cmpsb xchg mov inc mov jne or ret (bad) (bad) lcall jb adc jg jmp xchg add fwait and sub (bad) fcmovnb dec sahf leave lcall fcmovbe cmp (bad) jg jno outsb sub cwtl insl daa andl sahf adc je cs int fwait daa das (bad) (bad) (bad) jmp es popa xchg sbb test jo xor mov (bad) mov jbe xor call andl mov rol inc mov jbe sub (bad) fcomip push lret pop xor mov pusha das mov dec test out sbb ja bound in xor sbb (bad) in addr16 pop cwtl dec stos cmp in dec sti add cld ljmp xchg in push repnz cmpsb std (bad) outsl lock push es cltd pop (bad) (bad) (bad) jmp dec mov stc inc pop push pushf pop sub pop jmp pusha test dec and (bad) out mov (bad) xchg popf in xchg daa cmp dec inc xor stos lea test gs push cmp mov pop repnz repnz rcrl sbb out and mov popa (bad) fstpt frstor cs ret aas (bad) (bad) (bad) jmp jge outsb in sbb into test insb sub xor inc mov mov mov outsl cli lcall push sub daa push (bad) imul je dec xor jns (bad) (bad) (bad) (bad) jmp and outsb mov mov sub add push es leave dec jo and (bad) (bad) (bad) decl mov cwtl fmulp mov inc adc push stos mov or xchg or mov pushl mov mov xor je rorb lahf mov sbb dec add add outsb mov ja (bad) mov test insb jno cs cmp dec xor dec movsb mov xchg cwtl xchg jo add mov ret xchg (bad) (bad) (bad) push leave inc fdivrl and cmp mov test add inc sub sbb int imul adc daa add arpl or or es add pop dec jge pop mov (bad) xor subb je in push fwait mov enter scas stos imul jb xor jb aas lret lret pushf add aas frstor lods cmc add (bad) (bad) (bad) inc mov les dec hlt mov mov es sbb mov aam fcomip (bad) ljmp cmp add push jne or out jge lret pop jae dec ds stos (bad) pushl imulb stos es mov add cmp and test (bad) decl dec sub cmp sub xchg xchg shrl fbld insb lods (bad) mull cmp pop add add add and mov cmc inc dec js pop dec inc pop lahf imul call movsl sub add mov xchg sub lods dec mov js inc in (bad) (bad) call jmp pop push push loope,pt xchg push jno loopne inc std xchg popf adc mov xor pop mov push and adc pop cmp inc fidivl lods dec ret mov cmpsb xor and jmp in jbe divb and sahf mov data16 insl push cld in mov add mov lret push daa js adc ljmp bound adc push adc pushf fisttpl pop not (bad) (bad) incl xchg dec in and push push xor push fisubr shll jmp orl mov movsl out adc fwait aas xor mov (bad) cmp call int3 xlat lods sbb cmpsb stos dec jne enter mov adc (bad) decl cmp mov gs push cmp mov push xchg mov jne cmp sbb or ljmp (bad) and cld sbb out sbb (bad) (bad) mov push movb xor xchg sahf pop push out stos cmp cmpsb (bad) (bad) (bad) jmp pop gs inc add movsb inc cwtl mov pop jno mov mov xor (bad) (bad) jmp shll mov lret xor add pop xor dec pop jmp (bad) adc (bad) aam loope rcr (bad) ja (bad) (bad) incl sahf pop sub jnp mov sbb test repz jne sbb cmp xchg shlb push ljmp decl dec inc decb inc push xor clc sbb or movb movsb mov decl push cltd daa lahf in sub cmp inc push iret sub inc and inc pop lods mov (bad) (bad) incl mov cmp and popf dec add int3 lods sbb cmp adc lods jns (bad) (bad) (bad) jg cmp xchg mov les inc add push dec push or add loop push (bad) (bad) (bad) (bad) out mov in push dec stos sbb jo (bad) into adc test mov pop jne mov xchg ret (bad) cwtl test fstpt mov stos leave sbb test (bad) (bad) (bad) inc shll pop mov popa mov mov out add daa stos data16 (bad) (bad) (bad) incl clc mov ds cltd (bad) xor lcall dec scas leave in mov mov mov incl lods adc inc sbb sbb push sahf lret push in stc (bad) (bad) (bad) call xchg scas mov cli and cmpsb rolb fwait enter test xor out fwait sar inc movsb pop adc (bad) mov sub movsb loopne ret mov sub sbb (bad) in lods jp lcall dec mov dec test inc testl xor (bad) (bad) (bad) ljmp xchg jmp fcmovbe jno xchg dec int lock lods sbb mov mov ljmp mov jae stc push dec aam popf sub mov (bad) (bad) decl dec xchg jp mov cli clc adc push fcomps push popf mov mov dec push mov sub xchg sub push push mov repz cmp and cmp out cmc add xchg mov outsl cli jg test adc sti inc inc jl sub lret add or decl add mov stos es cmp sbb and mov inc jbe outsl and jno leave int3 mov (bad) cwtl (bad) sub (bad) (bad) incl rol pop xchg cmp mov mov into sti (bad) pop fisttpll stos xchg dec ljmp (bad) (bad) sub popl pop int3 repz mov (bad) (bad) pushl mov das inc aam shr xchg sbb mov push pushf adc cli push loop lahf ret mov push mov out stos popf stos xchg cltd xlat pop imul stc fwait mov pop lock out xor mov cld (bad) (bad) (bad) (bad) (bad) jmp pop xchg cmpsb xor or pop xchg (bad) fs mov sub (bad) (bad) (bad) jns add testl mov xor cmp inc es sub (bad) (bad) (bad) jg in out jecxz loopne mov pop sbb mov fucomi lock xchg dec lret nop jl (bad) (bad) (bad) jg xlat xor gs stc je mov push cwtl insl mov add clc (bad) decl in push xchg leave push and cmpsl pop fdivs fistl lcall in jae xchg js in pop push add mov adc adc stos mov jns,pt adc mov cmpb xchg lcall loopne mov push lods (bad) cli mov sub xchg ljmp (bad) jmp jmp add cmpsb (bad) imul dec dec (bad) sbb (bad) (bad) ffreep cmp pop sbb jnp leave aam xor outsb sub mov fs (bad) (bad) lcall cmp pop sub out mov in mov xchg mov testl xchg lock (bad) call rcrl push out sub jb push adc xchg cs xchg lcall in mov (bad) or xchg in adc in adc (bad) (bad) std shr int sub push push imul in jle push lahf fildl movsl mov insb and jns jmp push mov cmp lcall incl (bad) test mov (bad) out in push cmp lcall (bad) decl jo movsl mov je pop punpcklbw push std icebp aam mov ljmp dec jmp test mov (bad) out (bad) (bad) (bad) lcall mov inc arpl sti adc arpl inc mov cltd mov adc fldenv das cli jmp dec in sub sahf pop xchg push mov mov mov mov popf in (bad) frstor cmc loopne fidivl adc cld (bad) (bad) lcall (bad) repz inc xor push mov pop mov mov cltd sbb lock cld ja addr16 cmp xor out mov or (bad) (bad) fild push out cmp (bad) lcall movsb cmc sub sbb jbe (bad) (bad) ljmp dec mov jb outsl dec jb in negl sbb mov sub jp (bad) (bad) (bad) fnstenv dec push fs adc push ror int3 mov push mov sbb pop pop scas xor das clc incl (bad) and push and out ds sbb jbe push xor (bad) (bad) decl push xor ds (bad) xchg or ret (bad) jbe shrl xchg leave push and pop mov (bad) call std loopne orl push push dec adc les (bad) (bad) ljmp mov xchg insl test adc adc lock pop icebp cs (bad) (bad) pushl jecxz sbb iret loop fistp popa jmp mov mov xchg mov push xchg sbbb sub xchg pop pusha sahf cltd cmp xchg leave daa (bad) decl and es dec test (bad) jg jbe sbb pop inc cmc mov bnd sbb hlt lock cmp cmp pop sbb sti mov jecxz dec push (bad) int loop mov push aad mov lcall stc imul push xor (bad) (bad) (bad) call add popf std sbb aas mul mov shrl mov (bad) jnp imul pop outsl (bad) aas lret or fsts ljmp (bad) cmpsl pop test dec mov (bad) mov push push ret (bad) xor imul lds cmp cmp adc (bad) ljmp rcrb mov into or xor dec repz (bad) (bad) jmp jle fbld cwtl sbb mov loope jle es xchg pop and push jo jmp decl xchg jbe repz sbb testb sahf mov sub movsb cmp push scas jge sub adc out inc jne mov lods popf call out cmp sbb in cmp dec mov mov (bad) decl out lcall adc rorl call pop (bad) mov (bad) in (bad) jmp jae push cld dec sub push mov rcl arpl addr16 mov jg sbb add orl push in mov mov jbe aas dec test mov stos orl out addr16 (bad) (bad) (bad) call cmp cltd pop xchg push aad cmp into and jl cmpsl mov mov outsl mov dec mov and fwait (bad) fcomip adc pushf jmp add push mov xchg enter xchg or inc xchg adc (bad) ljmp jb cmc call mov (bad) cmp (bad) mov movsl dec dec adc bound movsl mov call scas mov cmp (bad) pushf sbbl out sub (bad) jae lcall sbb fiaddl cmp popa (bad) (bad) (bad) call or add jne les imul xchg jp sahf push out pop cli (bad) (bad) (bad) call or adc std adc addr16 test lret data16 mov (bad) ljmp mov cmp stc add (bad) xchg xor push jl cmp push cmp add cmc mov jnp fcoml (bad) out xor je gs pop xor fidivl (bad) (bad) ljmp (bad) sbb push lret arpl and (bad) mov push xchg cmpsb (bad) pop (bad) lcall xchg mov mov das mov imul cmc arpl (bad) (bad) mov and push add xor sub (bad) (bad) (bad) jg inc push lcall imul mov in push cmp push stos fs je lahf stos (bad) (bad) (bad) dec ljmp lcall jne add test mov xchg dec fwait dec jle (bad) (bad) jmp nop repnz and xchg outsb mov out cmp mov ljmp ret cs (bad) (bad) (bad) cmp test cltd pop jne fwait push rclb mov xchg cwtl jmp (bad) decl xchg or icebp mov xchg lret or testb jg pop imull or aas inc scas add jmp mov sti pop (bad) (bad) (bad) jns pop or jne pop out push negb jecxz jo cld daa mov push sahf add int3 outsb rcr bound lcall push loope (bad) into xor lret mov sbb fbld pop addr16 jge ret (bad) ljmp or test sbb pop inc call dec sbb (bad) (bad) decl push push mov cmp fstpl das inc es in mov push lcall and pop ja fwait sbb push sub adc ja dec leave lret and ss fs mov sub mov (bad) and mov ret test adc xor sub mov cmc jmp aam mov mov adc or ja (bad) mov cmp jmp cmp sahf jb jecxz call xlat sbb lea lcall sub (bad) cmp ljmp push ds lret fs dec cmpsl cmp insb jno cli inc xchg (bad) (bad) (bad) ljmp mov ret sbb pop lret add aas div ret xchg dec mov pop (bad) jno (bad) (bad) (bad) lcall icebp (bad) stos dec pop jno inc repz add mov adc mov data16 mov jnp (bad) (bad) (bad) lcall mov test xchg test out ds repz or mov jp mov push cli pushf jp (bad) mov pushf xchg in hlt dec sbbl push mov gs cwtl std adc sub pop (bad) (bad) (bad) jmp fwait xchg test es imul or push push lods aas jno cmp push lcall in pop mov cmpsb loopne mov pop idiv pop mov or lret loop sbb ret fmuls sarb (bad) (bad) incl inc cwtl cld push popa movsb mov rol insl mov dec cmp bound ljmp mov add ja pop and mov jmp or add inc pop pop out in jg inc stos cmpsb enter (bad) (bad) ds push int sub push push fildll xlat out sub decb mov (bad) (bad) (bad) mov dec or into cmp mov and fucomp leave out mov out stos adc lea cld (bad) (bad) call lcall mov pop sti push test lods sbb daa shrb jg dec mov call push sar dec movsb (bad) (bad) decl imul xor int3 push lock xor pop mov inc add (bad) lcall sbb adc fsubl (bad) xor lahf das and inc in stos pop (bad) (bad) mov lods xchg xlat test dec (bad) jnp cld and jbe or mov cmpsl bound and lds arpl ss inc fidivrl call ret cmp lret outsb jp add cmc (bad) mov sub hlt mov push mov push ret cmpsl push ljmp mov fcomps imul (bad) (bad) inc jae call sbb pop adc movsl inc movsl dec mov mov mov inc (bad) jmp mov jge (bad) push mov fist shrl xor jg and clc xchg popa pop adc rorl (bad) pushl push mov lret mov or shrl insl leave pop xchg imul add lcall mov movsl add pop jo pop (bad) (bad) test fnstenv mov (bad) (bad) (bad) lcall cmp (bad) xor push mov out push hlt xor test call fstpl out (bad) (bad) (bad) ljmp int test rorl lods sti jo mov jno jno cmp pop ljmp cmc and in push mov push (bad) test gs (bad) (bad) (bad) (bad) mov lret lds out add sahf jle lea inc dec enter call lret mov push in mov lock sbb cld mov subl rclb xchg test adc in push cmp imul adc sbb shlb dec rol les cs mov mov (bad) cs add insb incl jg cmp mov sub push and add or sub or test add (bad) negl sbb cmp mov testl and cmpsl ljmp add add add fildll lds stos add lret das ss aaa add js jl add add mov mov mov sub add out cmc add icebp hlt push jg outsl fwait repnz lock out jmp add jmp add out adc mov add mov fwait int adc mov push outsl lcall movl into int add into ror enter repz loopne mov mov add add insb ficompl add fildl aam (bad) dec enter cmpsb jns outsb rcl rolb rcl int into idiv ljmp rol mov mov mov mov lods lods scas add ja fiadd adc and lcall rcl xchg (bad) fadds (bad) fild (bad) jp imul in push in ja sub pop xchg xchg cltd es jbe inc sbb fistpll cld in (bad) (bad) dec push out out jmp jmp jnp in int3 int3 add add loopne ds mov dec scas scas mov (bad) dec xlat add imul add lock data16 mov add sarb fimul fneni(8087 (bad) ss leave mov ss (bad) dec aad roll jbe loope pop xor shl aam aad push test out ret into into lret out cmp mov lods push stos test in (bad) incl movsl add jp add mov pop fcompl ret mov in mov mov cli sub testl push insb (bad) into cld icebp add fidiv jno and cmpsb mov (bad) int jae dec mov jle mov pop mov movsb test in (bad) insl movsl scas mov stos mov scas push mov push add mov mov jecxz xor decb mov (bad) out shrl insb insl outsb add pushf into test test push lahf jbe mov push adcl push fwait lods xchg (bad) pop mov lods mov mov mov push mov sbb xchg jbe mov scas scas push pop mov jns,pn ss mov dec xchg sbb push pop cmpsl inc mov (bad) mov push and inc std push jno bound es out cmp xor aaa out cmp idivl outsb aaa mov cmp mov insb xchg aas sarl rolb inc fisttpl push pop rcll bound jnp ret pusha ja push rcrb jbe push es dec sub jecxz in repnz fidivl jle jp lods (bad) into mov mov aad sub incl xor or mov add add repz cmc div idiv outsl xchg movsb mov aas fsubr out push or ds out out sub repnz insl push dec rcl shrl fildl (bad) rcr ss fnstsw mov jecxz in popf out sub add lret dec xchg (bad) ss aas lcall add leave mov ret aas scas scas mov mov dec dec jg mov mov aas (bad) pop xchg adc fwait pushf popf sahf lahf mov mov pop cld jnp cmp nop xchg xchg xchg js pop jae add out add xchg mov add jnp cwtl mov repz jg addl popf push and xchg and add xchg jmp mov add stos push pop imul iret cs add add pop (bad) pop add pop hlt pop sub pop pusha inc aas dec push push push inc push push scas and xchg fmuls pop pop xchg (bad) call aas inc inc inc cmp inc inc dec dec dec dec dec dec dec dec cmp or and add push and in (bad) inc adc or aas sub lcall xor xor xor cmp cmp ds inc jg (bad) (bad) incl and sub sub pushl js add adc add push add add push and and dec (bad) jg mov adc sbb sbb push push (bad) push or push push jl push fcmovne movups in push pop call push dec imul pop lock (bad) imul incb jg out scas xchg add pop (bad) std (bad) mov enter lcall add add aaa adc cmp pop add inc add dec lahf inc adc rolb pop or aas loop repnz add sbb adc push add xchg and mov add pop movsb mov add test repnz jae add (bad) mov aaa adc or aam flds pop or pop or mov pop dec pop adc fsubrp push or nop adc mov xchg sbb lods mov pop mov mov jg test inc mov pop in cmp out (bad) and rolb pavgb pop rcrb pop loopne scas mov lock pop clc lock aas std loopne jg jmp mov stos add sub or lock lret xchg and aas cld jg jmp xor mov test inc in and inc mov lods movsb mov pop add add add or in add sbb jb add in push xor in and mov mov lahf xor (bad) (bad) inc cmp xor out mov cmp (bad) and (bad) cmc icebp mov push das jecxz add pop inc pop add or xlat pusha call push pop pop or cmp mov jae fiaddl adc or mov push divl inc or mov add and add add dec sbb push adc fidivl lret js add bound jge jg (bad) mov inc push adc pop and and or inc scas add pop or and bound or (bad) js pop jl push test xor inc inc inc je xchg xor rcll flds dec jne xchg or mov test test ret mov negb pop push xchg adc xchg dec adc scas pushf cmp adc jmp pusha and inc adc test add adc add lea inc mov or xor adc shrl icebp mov inc roll (bad) mov add negl scas (bad) mov rcll pop (bad) jne and (bad) decl or sbb mov sub js ja rolb push imul inc sbb jle clc inc (bad) negb fimul (bad) (bad) (bad) call mov shr cmp nop iret outsl in cli xor ja (bad) nop or ret lock stos icebp dec hlt out cmp movsb mov popf movsl in iret fldcw (bad) jg inc out repnz cmpsl bound pop or xchg (bad) jl icebp paddsb sti inc pop int pop pop fcompl js (bad) (bad) dec pop leave or add (bad) (bad) (bad) pushl sub sbbb xchg mov pop cs data16 cmc mov leave fnstsw hlt cmp lfs xchg mov mov jp mov mov cmp xchg jge ret ja pop dec (bad) lcall push adc dec and sub sub add pop (bad) (bad) (bad) push xchg mov loope int out pop dec fcompl and dec jb outsb jmp xor into adc out (bad) (bad) ljmp (bad) ds (bad) jbe push pop aam mov mov mov (bad) (bad) incl mov and mov fcompp xlat lock or daa push xchg fsin (bad) (bad) call movsl sub xchg inc jmp nop xor pop movsb add lahf adc cmp (bad) decl dec jns ja imul (bad) lahf ja out neg mov (bad) jle sub repz loopne (bad) (bad) (bad) jle loopne add hlt das mov cs and mov dec (bad) jne adc sub push mov sbb or loope pop (bad) (bad) (bad) fcomip clc cmp cmp pop test cmpsb (bad) ss in in sbb jo (bad) (bad) decl add pop inc call aas push aad xchg repnz ficompl jmp sbb pop pop repnz mov jbe sbb aas mov xchg lock (bad) (bad) (bad) ljmp div imul repz xchg ret mov push pusha pop cmp into cmp jno div (bad) (bad) (bad) pushl mov div mov (bad) cmpsb ljmp jo decb popl (bad) call push aad insl adc in xchg mov jg sti add ja inc sbb jg and cmp rol or adcl (bad) (bad) (bad) in jle jg sbb imul imul lods and pop test jp xlat scas inc loope (bad) (bad) (bad) (bad) ds cmp pushf mov jbe stos pop lds jne add inc popf xchg jg jo (bad) (bad) lcall jns inc jae popf sti insl dec mov or (bad) clc lahf lock mov mov aad (bad) (bad) (bad) (bad) jg jnp jbe lods adc out xchg jbe cmp rorl stc mov lahf ficompl scas test (bad) jmp int3 jecxz push push mov lret data16 (bad) (bad) (bad) call clc jmp lahf push das scas mov jmp loope xor cs scas sbb mov (bad) (bad) (bad) inc rcrb iret inc imul mov mov jbe cmp pop lcall jmp in push dec popf mov mov adc push pop pop rcrl (bad) jg (bad) clc adc outsl hlt int insl dec out xor scas fsubrs mov lret bound jne (bad) jg mov or lret adc ret mov cmp lea imul pop stos pop leave (bad) jg ljmp jb mov cmp mov jecxz xchg stos data16 or (bad) incl outsl inc stc mov jmp xchg in pop repz repnz (bad) xor je (bad) incl (bad) xor cs rcl jne and xchg rcll mov inc add mov loope mov sbb push cmp nop ljmp (bad) cmp lea jns sti fwait or lret fsub xchg push push push sarl and (bad) jecxz pop fbstp xor mov xor (bad) (bad) (bad) mov gs negl stos adc lea loope sbb push (bad) pushl fimull xchg outsl adc pop dec ficomp xor (bad) (bad) mov sub jb mov pop hlt sub cmpsl daa mov mov cld into sbb loope test and scas cmpsl xchg cld dec add in cmp repnz loopw jne sarb xchg add std and mov pop add jae (bad) (bad) decl adc outsl lds sarl insl cmp je mov fmull pop (bad) call js sbb dec nop jno scas jae cmp add pop or sbb pop hlt or imul movsb fcompl sbb (bad) jmp (bad) fildll or xor lods test test (bad) push jg clc loope (bad) xor jg mov mov mov sbb and out decl sarl iret jbe cmpsl xor mov and sti scas jmp jns sahf pop xchg arpl (bad) (bad) mov mov (bad) (bad) (bad) (bad) in aas pop mov lock ja jl jb les adc inc sbb rorb jg in add shrb pop cmpsl pop clc out lds xor dec test stos (bad) repnz sti insb mov sbb (bad) (bad) pushl add pop or loop cmpb loope stos jmp (bad) (bad) (bad) ljmp adc in insb push fwait and jno mov mov insb cld insl jb repnz pop adc cli decl xchg loopne ret fdivr pop cld das jb int rol push test mov lcall mov mov movsb lcall mov rcrb push aad sub ljmp in xchg fstpl (bad) (bad) (bad) incl bound (bad) movl jmp mov scas and push (bad) sbb cmpsb dec nop push cmp and push les jp clc outsl loope push xor mov (bad) jp scas stos stos dec addr16 movsl sbb xor sbb lea (bad) pushl iret cmp mov lods stc jbe mov scas pop xchg pop jb enter (bad) (bad) pushl add out xchg fildl repz in lahf jae cmpsl aaa ss xorb jmp cmp mov sbb (bad) (bad) pushl inc xor xchg sbb mov inc add mov in inc sub (bad) (bad) decl mov bound int loope es (bad) ret out xchg mov adc pushl dec or lcall arpl loop ds mov aaa std call push out pop std xchg mov dec clc lods xor loope pop inc pop popa mov (bad) (bad) (bad) jmp sbb leave push iret popf mov mov test popf xchg jnp imull fwait (bad) jmp adc test fidivrl push shl xchg sub inc ds and ja mov addr16 sti xor aam xchg sbb xchg pop mov (bad) (bad) jmp sti cmp int pop fs loop fistpll mov repz mov popa jge pop pop add and popa call das xchg xchg arpl fwait (bad) (bad) cmp addb add in mov js ret mov push ret and pop imul daa arpl in jbe pop push jns bound add dec imul decl outsl mov push cld sbb imul fs (bad) xchg mov (bad) mov mov outsb lret sbb ljmp lret inc lahf imulb adc jae pop dec loop push loop fnstenv in ret cmp mov les ja aas rcr pushf arpl lcall xchg jp jmp sub xchg sub xor fcos (bad) (bad) out (bad) pushf xchg sub sbb aaa xchg movsl (bad) fmul loop sbb jne dec pop lock jmp out insl jg xchg cmp mov cmp inc jo outsb insb (bad) imul xor imul cld call mov stos push scas or outsl xor xchg ret pop inc sbb movsl mov ljmp movsb xor adc xchg inc adcl fild (bad) (bad) jmp jl cmpsl mov lods push test test sub testb aad cli lock push enter icebp (bad) mov clc mov or adc into inc clc es pop or (bad) call mov or andb xchg jge jb cmpb jge lock cli (bad) mov aas adc fldt movsl mov cmpsb fsin jmp or out sub push push stc (bad) jp (bad) out clc mov lcall mov mov inc adc mov fidivr (bad) fcomip mov sbb test scas jno or loop and cmp (bad) (bad) decl add xchg je pop loope (bad) mov push lret lods imul gs in repnz sub sbb in add call fadd lds cmp sti (bad) pop adc dec mov arpl xlat rol xor (bad) xor (bad) aaa cld aas dec dec fidivrl (bad) fild outsl (bad) (bad) (bad) call jmp sbbl arpl mov in cmpsl mov (bad) movsb inc xor mov (bad) (bad) (bad) call fs dec adc out pop xor dec mov pushl sbb shrl cmc das or sub movsb jo mov (bad) (bad) (bad) lcall push mov inc cmp pop sbb cmp pop pop outsb add (bad) jmp pop pop jge mov xor or nop in fcomip jmp xchg daa and push lds lock loope or popf incl cld (bad) cmp es outsl lods lods adc cli in fldt (bad) (bad) (bad) pushl daa jo xchg imul aas pop jl clc mov mov sbb cmpsl fld movsl jmp scas (bad) mov outsb rcrb adc (bad) fist scas (bad) pop xchg xor lret mov ret icebp mov sub inc (bad) (bad) (bad) (bad) (bad) cli mov test mov (bad) mov ds arpl enter lea pop cmc dec pop push hlt das push jl icebp jbe loop mov xchg loop inc (bad) (bad) (bad) out movsb dec add call push mov aas mov lds data16 cmp xchg ja (bad) jmp icebp (bad) rcrb mov dec xor fs xor loope jg jne mov add cli xchg push shlb (bad) fcomip call outsl dec xlat push xor mov (bad) fstps cmp xchg ret lret daa pusha cld call test xlat leave popf (bad) mov jmp and ss leave dec mov sbb jp (bad) (bad) push scas mov hlt popf cmp mov movsl cmc xchg movsl mov and (bad) (bad) mov test inc ljmp sar adc sub inc clc dec mov aaa mov mov mov add pop loop mov aas test mov inc cmp mov lcall jne test push dec call cmpsl movsl push adc lcall or lods int3 xchg dec (bad) gs loopne mov mov shlb pusha imulb dec call mov fwait sbb int3 test pop add (bad) (bad) incl cmp cmpl mov outsb arpl je repz sti scas cli pushl ret jnp jle lock xchg lds mov rol (bad) (bad) jg pop stc cs lret fildll dec out xor stos sbb pop in sub pushl xorl push fldt or dec aad or xchg je nop leave (bad) sar incl andl sahf jnp inc loope sti (bad) push imul test cmpsb cmp mov into jns mov pop call cld out sub sahf stos loop sbb clc xchg mov dec enter or inc and xchg cmp stos jp lea (bad) decl xchg dec addr16 fs sub sbb pop xchg sub or add mov inc int3 rcl mov jmp imul sbb jge loopne mov in (bad) (bad) (bad) mov dec shl sti aam testb ficom xor xorb mov add inc pop aaa sub outsl add out js xor and jge test add lahf push call cmp sub mov cld lcall pop jns ja fdivrl ret xchg imul jg pusha jae out test mov lock xorl push fs repnz mov sub jb decl lock cli jnp rorl xor out sbb sti dec mov or (bad) (bad) inc iret pop pop imul (bad) jne add (bad) unpckhps lret xor xchg xor jmp sar popw cmp (bad) stos jmp insl sub idivb aaa cld ljmp pop push (bad) hlt in or mov pop pop jnp imul mov scas xor pop mov push mov out clc repz sub adc cmp sar mov jg popa pop cmp add push leave mov push inc mov (bad) fbld (bad) dec fdivrl mov test pop (bad) (bad) js arpl inc test jmp sti (bad) mov and (bad) imul jno scas (bad) (bad) (bad) decl push pop imul stos popa sbb je cwtl (bad) sub xor add addr16 (bad) (bad) incl sub and (bad) mov pusha xchg ret sbb push mov jno cmp repz sbb xor pushf loopne (bad) (bad) push jmp stos jecxz sbb ret in cli mov lret pop xchg or pop xchg or push aas (bad) (bad) (bad) pushl cmp xchg loopne (bad) xchg and add repnz in in and (bad) (bad) (bad) aas ss pop lahf jl in pop scas hlt lea lock xchg fcmovnb outsl and incl dec mov fdivrl clts mov dec xchg out cmp sbb lods call mov adc mov (bad) xchg aaa dec sbb aam test jecxz or inc or jmp adc sub decl pop ret sysexit cmp mov bound ss ljmp sar aad mov jecxz fsubr mov in sbb inc lds mov (bad) pop add daa push imul mov imul fistpl (bad) decl sub mov loop add add ss cmp (bad) (bad) call mov comiss imul test sahf es or pop (bad) ljmp push push xchg faddl inc pop mov repz hlt (bad) (bad) fisttpl inc lock xor push imul pop push mov repnz (bad) (bad) (bad) pushl lods and orl push cli xor sarb mov (bad) (bad) (bad) jmp std rcl cmc fucom movsb jno push icebp mov int3 mov in mov xlat cmp jl lods push ljmp (bad) out push pop xor cs outsl mov loopne ss adc mov or push dec push cmpsl push cli jg xor mov pop stos fistpl fimull pop mov (bad) mov inc adc out cmp sarb sbb mov and push std fidivl cmp push lret (bad) lret mov pop push mov fist mov icebp (bad) lcall mov and lods (bad) cltd mov xlat or mov sub clc mov (bad) jl loopne fwait (bad) fcompl rcrl inc (bad) (bad) out inc ffree lahf das sbb push dec (bad) stos cs push incl cld jmp ret fidivl push mov pop imul mov (bad) in (bad) (bad) jg nop sub ja in lret mov in sbb andb lcall jl neg aas or push mov xor ljmp push dec mov lret pop aam (bad) leave jne loop sbb jg dec mov sbb jo or call cmpsl call or cltd pushf jp lret adc mov jbe les scas (bad) jo das jb add hlt clc in ds shl ret jg out lock pop mov ja data16 xor in push in ja (bad) (bad) call test add daa mov mov pop xchg pop mov (bad) (bad) (bad) mov out xchg sti mov mov adc es popa out push clc cwtl fs pmaxsw popa cld cmp jne dec push imul cld (bad) push outsl xorl jg pop rcr js lods iret jne jg inc mov outsb inc sub (bad) sbb mov and xchg loop js mov pop mov mov clc (bad) pushl add sub add pop and push outsb mov xchg repnz dec cltd mov sbb mov (bad) mov push bound and pop iret push sbb call (bad) lcall jo push lahf cmpsb (bad) and fsub dec adc push out xchg xchg or (bad) (bad) jg out popa test dec sti ds jp cmp (bad) dec fistp jge pop (bad) (bad) (bad) (bad) jmp outsb mov sub fldt jmp repz sahf or (bad) (bad) pushl fadds and push mov xlat test loop fnsave pop mov jns out (bad) (bad) (bad) inc mov popf addl xor imull jbe cli mov arpl (bad) (bad) (bad) (bad) fimul xor in sub mov movsb pause js popf clc mov mov xchg cmp xchg lahf push (bad) push xor aad push jl (bad) (bad) (bad) call mov sbb sbb mov pop lret mov out clc adc pop xor (bad) (bad) mov loope jle ud2 fldl2e ror mov int cld push inc inc cld (bad) push xchg and repz nop ret fnstsw sbb imul cmc jmp (bad) jg dec xor clc stos fimul xchg es mov (bad) pop sbb adc test call sub push aad (bad) cld xor lahf xor jg sub mov mov (bad) ljmp (bad) (bad) call in fistpll adcl pop inc mov cli mov (bad) incl sarl and cld les jbe je loope xor addr16 xchg incl jmp mov movsl lret sub sti jp cmp add notb xchg les imul pop cli pop xor out aaa or lcall sbb cmp mov sub adc call jl (bad) scas je ss scas das sbb (bad) fist push add and sub lret and xor (bad) pushl dec icebp dec mov scas sbb pop js dec push mov (bad) (bad) (bad) jmp mov mov loope dec add ficom sarl cmp lods je stos (bad) (bad) (bad) call loope push shr movsb xchg imul adc lock jecxz push test (bad) incl lods mov ror test adc sub icebp das jp ljmp icebp pop cltd mov movsb mov cld (bad) ljmp iret imul lret in (bad) pop (bad) ss ja jns cmpsb push cmpps inc dec sbb insb outsb lods xor adc fwait out adc mov fcom sbb pop dec or fdivrl or jmp sub (bad) mov cmp cmc sbb out mov xchg lcall leave clc (bad) (bad) (bad) movsb mov xchg fmull and push repz inc xor xor cmp incl stos jle cld data16 pop stos js out add push cmp movsb (bad) out mov rcrl cmp loopne jge int sbb xchg (bad) call fistl cmp aad fs pop ss pop add adc (bad) (bad) pushl dec sub js in fimull lock jmp mov xor push repnz arpl and (bad) (bad) lcall pushf xor add cwtl xor mov test mov outsl sahf mov xchg xlat (bad) notb stc mov inc out out sub xor pusha pop icebp iret les cld ss adc mov dec fdivr lcall dec add (bad) (bad) (bad) jp jo inc push enter es cwtl adc pushf push dec jns xor sbb cmp out xor mov neg (bad) (bad) (bad) lcall test xchg add fdivrs push inc ds sbb pop adc mov cmp jecxz adc push sub (bad) jmp mov psubb sti (bad) in loopne add (bad) fistp into aaa inc les mov leave out mov jmp (bad) (bad) sub mov xor (bad) (bad) decl pop aam fcmovu or (bad) ja push (bad) fwait nop adc lea cmp mov clc (bad) jmp mov cmpsb mov ja sti ljmp out (bad) and dec (bad) call jmp lods (bad) repnz cltd out or pop stos jg jecxz mov js (bad) (bad) (bad) (bad) call or arpl sub push inc lea jns pop sbb or and lock (bad) (bad) sbb mov xchg lahf loop xor sub mov sbb js pop cmp jae aam mov jecxz lock das lock adcb jmp inc mov push fstl inc leave and adcb or push and ficompl dec ss sar cmpl inc (bad) ljmp inc lods in cs jno inc shrb test (bad) mov mov int3 mov dec inc sbb out inc pop cmp dec (bad) in push (bad) incb push popf pop jne xlat lret cmc pop jl pop dec push fsubrp mov ljmp push add je fwait inc aam jge loop pop lods out push loopne push sti ljmp mov mov bound or (bad) mov loope mov jl or sbb lds pusha ret sbb jp pop push dec loop andl fs int3 dec test (bad) incl cld pop je mov in addb scas test imul cmp (bad) out mov jns stos dec add jb lea pop fdiv dec dec mov (bad) cmp fs psubq ljmp (bad) (bad) (bad) (bad) mov push divb notl dec inc adc mov lods lds sub dec push (bad) (bad) (bad) call sahf mov ljmp ss mov dec cltd rcrl push mov (bad) (bad) ljmp pop scas fidivr (bad) pop add (bad) lret loope mov pop jl lock out adc leave stos fmuls push adc notb (bad) (bad) pushl cmpsb push ret push pop xlat lcall (bad) out (bad) xor push clc sub (bad) mov dec pop mov mov repz ds (bad) (bad) decl mov daa fidivr sub mov xchg lock ljmp movsl lea repz in adcl xchg stos sub or (bad) das cmp sbbl pop add push fwait pop and in addr16 ficompl call mov cli cmp inc popa lods mov in outsb loopne jo add pop test cmpsb mov cmp (bad) (bad) jmp sub sub and mov pop adc jle mov aad ja jne (bad) (bad) (bad) jmp jns jg hlt mov pop mov sub insl loop xor loope iret xchg loopne cld or icebp imul mov sahf clc ljmp mov into inc jb and mov (bad) incl xor (bad) lock adc arpl bnd (bad) (bad) (bad) pushl mov rcll and rcr test pop jecxz mov cli jg sub (bad) (bad) (bad) (bad) js pop xchg icebp push xchg gs xchg test and inc push fcompl in cwtl xlat or and sbb repnz mov ljmp push es ljmp or sti dec clc xchg movsb pop scas xchg mov sbb lea call push ret and test in ret loop stc jae and and (bad) (bad) (bad) (bad) fisttpl sbb push pop mov or push mov cli jl or sbb cli (bad) ljmp mov insb ljmp xor pop mov scas mov jmp cmp inc mov xchg shlb aaa pop daa xchg cmpsb insl fwait aad insl pop pushl pushl clc jnp scas ljmp or and xchg ljmp adc xor nop repnz in loop dec inc push jb lcall (bad) lcall (bad) xor add sahf movsl (bad) lcall loopne adc push push ffreep xor mov repnz rorl and (bad) (bad) lcall rclb push mov cmc outsl mov int aaa mov ljmp icebp (bad) lcall lods inc sahf pop cs jo pop inc or imul inc (bad) (bad) out cli cmp dec sbbl in adc xlat dec outsl push stos outsl (bad) (bad) (bad) pushl mov (bad) push or sub icebp xlat jecxz xchg stos clc test aam icebp (bad) xchg lcall es jg mov and add mov sub inc xchg lret mov inc ljmp mov sar push jg jmp mov stc pop sbb xchg inc mov jg fwait test sbb enter fadds imul outsb pop push shl xor call cld pushl or sbb (bad) xchg cmp cmc shrl and ljmp (bad) (bad) out mov push stos imul jae inc and bound lret (bad) (bad) mov sbb mov push jg pop add popf push inc imul xchg cltd pop fidivl xor pop in addr16 push sub out aaa sbb mov packuswb jmp mov jl hlt sub cmp imul (bad) (bad) jg shrl sub inc icebp gs es lret (bad) xchg mov push adc scas pop cmp (bad) jae push mov xlat sbb lods push test jg call ret (bad) popa pop into mov add jb sub aas xor rcll (bad) lcall xor mov psubusb je mov dec xchg inc sub ret sahf sub int3 gs mov ret in sbb std decl loope iret or cmp dec loop icebp adc sar stos cmp cmp pop arpl pop outsb adc (bad) in (bad) inc inc mov and int xchg dec pop (bad) xchg sti mov cmp mov jg jmp mov cwtl faddp int push lret lret add push subl (bad) lcall jp mov jg jle push insl std nop mov jle (bad) jg stos mov and lret (bad) adc popa and xchg insl test jno in je das cli lcall (bad) out lods lods mov jns mov addl mov loop ds loop add add ss imul push scas imul outsl and mov mov push ja enter (bad) lcall (bad) aam cld ss daa shlb pop push fdivrp sub inc lock imul aam repz aaa xchg sub inc std cmpsl adc cwtl aaa ret sbb push inc adc pop dec call jmp sbb das subl lds inc cs (bad) (bad) (bad) pushl inc and cmp pop aaa inc pop mov aam aas clc dec cmpsl clc pop ret cmp xor cmpsl loope incl ja loope sub ror xorb lds mov mov das loope in inc sti push ficom cmpsl xchg xor aas add and pop fmull sub (bad) (bad) (bad) (bad) jns mov aaa in fcomps outsb out mov popf cmp cltd repnz fcmovnbe jg sar decl mov dec cmpsl and xchg arpl pushf fcompl push lods cmp add push icebp push mov popf imul (bad) lcall push mov iret lret cmp pop xchg jp call sarb mov jl mov mov (bad) mov push popf es daa mov call xor leave enter aas mov in icebp stos fnop outsl roll gs sbb jecxz lahf lock lcall xor sbb rorl xchg jnp rorl pop dec in gs inc leave mov loope cwtl imul scas fwait outsl push (bad) (bad) (bad) lcall mov addr16 das lcall adc xlat push scas mov cli jg or pop pop mov insl (bad) scas mov push push sbb in mov pop ss in mov sti jl,pn lock push jle fbstp pop leave lcall aad orl (bad) (bad) fnsave mov out (bad) loop in f2xm1 (bad) out push sarb sti es xor xor mov lock sub popa std int3 popa into shl mov fdivrl pop loopne call adc cmc mov xchg iret pop jl (bad) sbb outsb mov xor xchg lret (bad) sub out and xchg (bad) inc iret dec lock clc lahf loope xchg popa jae cli fs pop imul gs inc scas adc sbb stos loopne repz test cltd in and movsb xchg fsub cli hlt and rclb mov jge icebp (bad) jecxz call cld inc aas mov ss je sub mov test mov xor repz jg jmp inc or (bad) repnz mov pop mov mov imul ds fisubrl decl or dec mov loopne cmpsb test jmp ds ret loop (bad) xor adc pop or (bad) (bad) ljmp dec pop pop jns shrb aaa xchg push (bad) enter inc ljmp sbb fidiv std (bad) ljmp jmp adc in sub mov adc (bad) ljmp push push test push pop jp xlat mov xchg xchg xchg (bad) std arpl jge xlat xchg jb ret (bad) (bad) cld dec xlat mov dec call data16 sbb iret dec test (bad) decl dec lock mov addr16 (bad) loop mov int pop mov cld add fildll jno ss xor cmp mov xchg xchg cmp mov xor into (bad) (bad) (bad) incl enter out sub jmp int loop fwait add pop clc daa les mov (bad) (bad) (bad) (bad) fdiv inc out jo xchg mov in arpl mov pop jmp jb int (bad) jg decl aas adc lcall test adc jne xor and xlat jmp mov je inc fwait jecxz (bad) push int xchg daa (bad) loope mov cmp or decl sti pop jp out sbb mov data16 push sbb mov cs inc sbb out into inc (bad) sub outsl mov and or sub xor lret adc (bad) (bad) jg xor mov jge mov mov dec clc std insl loop and push icebp ja jg (bad) (bad) decl ljmp insl in rcll (bad) cs rcll lahf sbb ret decl test pop pop imul and call jg xor jecxz hlt pop fdivrs mov fsubl cmpsl imul (bad) (bad) (bad) cmp iret ret xlat (bad) bound mov test inc fnop jge xlat or lret (bad) decl outsb movl mov loopne adc (bad) rcrl pop mov sbb push fcomip aaa adc xor jl dec and pop and cmp (bad) (bad) (bad) jmp (bad) in mov test jns loope cmc jg addb sahf or (bad) (bad) call shr out xchg jb aaa push lods jbe test jno scas jo jp xchg decl shll (bad) xor push das adc inc mov inc rolb lea (bad) jo loopne push out int3 in adc inc imul test mov scas lret insl gs lret data16 mov lods xchg into gs lcall mov icebp outsl xchg and xchg push ljmp xchg or inc (bad) mov xchg inc sub ficomp lock imul inc stos fcos decl (bad) push push cld pop repz mov pop dec movsb sti cmp dec pop inc rolb add cmc fisttp stos clc mov jle iret aas (bad) lcall and sub test pop xchg ds imul xor jb pusha cmp loopew mov test (bad) repnz add (bad) sub mov mov lds xchg cmp fistl (bad) xlat push sbb scas cmp adc fnsave (bad) ljmp std iret mov cld test mov clc fisttp mov jnp (bad) fldl sti fs (bad) incl arpl dec and shrb std das mov cmc decl decb fldenv inc mov ss adc dec out into test movsb incl insb mov lods outsb negl push and add sbb out xchg cmp sbb into xor (bad) (bad) call jl in popa mov (bad) aaa xchg xchg mov (bad) es jae icebp xchg aam (bad) (bad) pushl in in pop sar xchg cmpsl insl xchg fist sahf dec mov xchg pop pop aad inc andb inc adc mov xor mov stos mov imul xor decl arpl fdivs push pop (bad) (bad) cmp sub icebp lods cli mov int mov test andl jnp jp loope sub jb es (bad) lcall pop adc addr16 jo pop mov mov call push aam test and ljmp dec xor adc repz daa outsb cmp fldt (bad) dec xchg push xor repnz pushf xchg dec cmpsl sbb (bad) xchg cmpsb out dec out ret sbb pushf mov dec mov pop orl bound (bad) (bad) (bad) xchg leave push mov mov mov les (bad) es test inc lret repnz xchg outsl decl adc sbb stos cmp in lods jle dec and mov addr16 mov adcl daa scas sub jmp (bad) (bad) pushl mov iret dec sahf out jnp adc jg jns cmp and (bad) mov xor inc int sub (bad) fcomip dec movsb lods daa pop (bad) add stc inc lret and or mov lcall das cmp jge js rol aaa push (bad) (bad) (bad) (bad) (bad) (bad) push mov rcr xchg push pusha fs out push sbb popf movsl mull sbb clc stos adc jmp jmp xchg ja pop lea sbb jmp scas jg and dec orl cmp and ja sar rolb sub lret jo dec call loopne and or jae insl sbb movsb cltd repnz aas sbb xchg mov ret icebp insb push inc outsl add jb in decl xor mov sbb out cmpsb mov popa (bad) mov mov pop cmp mov (bad) mov xchg or inc push push mov mov das push cmp js loope mov (bad) clc mov (bad) mov insb mov mov leave xchg into sbb scas adc loopne inc add mov mov cmp shlb cmpsb icebp xor std mov test shl and dec mov mov (bad) repz (bad) push xor pop rcll sbb pop add insb mov xor (bad) (bad) (bad) (bad) lcall ss xchg scas addr16 test jg push je inc std xchg ficomp or pop sbbb (bad) ljmp mov xorb xlat hlt pushf pop ret jg sti dec clc pop loopne (bad) pushl push dec xchg jbe ljmp fwait notl out add dec stc cmpsb (bad) (bad) decl mov imulb jae (bad) mov mov ljmp adc ret mov leave pop out cwtl sbb enter js clc pushl sub fs outsl inc xchg and pop in cltd in movsl pop fstpl scas js pusha aaa adc push xor jbe mov jne pop mov (bad) (bad) (bad) (bad) clc jae lds std pop int3 call push imul fidiv stos test sbb (bad) incl movsl adc clc lret loop ret imulb xor (bad) (bad) (bad) pushl outsl or dec outsb mov xchg repnz out mov push cmc pop pop hlt inc shrb es xchg xchg add and (bad) ljmp inc and inc push sub into cmp loop (bad) fildll (bad) pop add (bad) fisub imul loope jbe leave hlt fs (bad) (bad) (bad) lcall xchg jg pop popa into and out and ja es rclb pop mov xor dec repz fwait js inc (bad) jg lods xor inc test gs cs push adc xchg add mov xor lock xchg mov out es (bad) (bad) (bad) call xchg add jns pop push int3 and cmp push xor rcrl mov cmpsl js (bad) push jle sar (bad) (bad) pushl lods hlt lret lea mov pop mov mov jns mov inc test icebp out (bad) (bad) mov jbe mov sbb cli jnp cmpsl lds xchg lea ds das xchg repnz daa in into sub sub jno push jg inc std sti mov mov mov or sub (bad) jmp outsb sub xchg jmp test stc cmp (bad) decl mov test cld cmp pop rclb loopne mov out lods and sbb add dec mov sbb and pop cli scas lea jmp sbb dec xor (bad) (bad) lcall cmpsb aam mov add inc jecxz adc clc push (bad) mov xor sarb insl loop adc inc imul decl aad push sbb cmp fidivl dec xchg push dec adc cld pop icebp (bad) jl and push lret mov into stos fs test mov fbld inc fwait test (bad) push or jno push out imulb dec or icebp outsb lea rcrl sbb fwait loope jl push aas idivb mov (bad) lcall mov cmp dec ja add cmpsl enter cmp pop push test into sahf add call pop (bad) lods clc adcb (bad) dec mov push mov jno sbb mov mov ror jno je sbb cld je inc sarl scas (bad) mov jecxz das clc pop imul out mov and sub in cmp jg mov arpl (bad) (bad) shlb outsb or into fidivl jmp (bad) incl jge jle (bad) lcall mov jg std popa inc lret out mov out lods scas mov mov cmp sub (bad) (bad) incl sub fs pop aas cmpb js ret push test fnstsw dec out xor pop loopne sbb mov mov sar sub rolb enter pusha xor xchg push jmp std lcall mov fldpi rol loope dec daa adc loopne push jnp cli (bad) mov fisttp or dec lods inc stos sbb lret leave fdivrl (bad) (bad) (bad) mov add lock lock adc jno pushf jle sahf pop mov (bad) decl js mov insl int mov loope pop push or mov jecxz hlt sub idiv (bad) (bad) (bad) cmp bound pop inc outsb and (bad) pusha ss (bad) jp push xchg popa mov cmp das mov js (bad) (bad) (bad) (bad) (bad) sti lds xchg mov aad mov mov int3 enter mov xchg mov mov inc mov sbb mov movsl std jle sbb dec pop push lds aas add lahf add jecxz jnp push cwtl sar (bad) jmp inc lea xchg mov insb mov scas rol mov jae imul (bad) jg (bad) push std fwait hlt jnp mov scas dec mov mov inc xor ffree decl loopne andl cmp and xor and cmpsl nop jmp (bad) jmp and pusha (bad) hlt fldt xchg pop mov (bad) inc and jl call or (bad) pop outsb sbb sub mov call (bad) mov push test pop insl dec loope in pop and pop and add (bad) (bad) inc (bad) xor insl mov imul es add pop add out xchg pop mov mov call pop js das sub addr16 sub lea (bad) (bad) (bad) pushl movsl xchg push sub sub and stc jmp aaa (bad) fild loop cmpl push jp jle jecxz cmp outsl stos inc cmp adc idivb xchg sbb hlt lcall (bad) sub dec loop add dec sarb data16 aas fnstenv xor pop (bad) (bad) decl aam adc test push and mov lret xchg push cld pushf out xchg lock lcall dec jmp clc pop dec icebp mov sbb dec clc ljmp imul jge mov sar dec mov in popf mov ds (bad) out mov jmp pop mov movsl push lods dec addr16 jp int3 cli sbb mov jge inc cmp dec divb sti jle (bad) jg cli mov xor sub cmp fcmovnb jns (bad) fldl cld loopne jg or jb in hlt clc push outsl push push sub jecxz,pt xchg (bad) ljmp xchg jg dec lods jne,pn outsb into call jb lcall pushl je int jno pusha int3 popa (bad) leave and js loope pushl cld inc pop (bad) idivb mov insb hlt mov mov fucomi sub (bad) loope jmp lcall jns ret into icebp repnz sub cmp icebp (bad) mov lock loopne sbb insl dec gs (bad) fldln2 scas cmpsb adc push xor insl addr16 mov ljmp dec call (bad) cli movsb divb sub sbb stos push in cmpsl call movq lds test jnp outsl (bad) (bad) (bad) cmp jl (bad) (bad) mov imul ja sub mov jg shll mov sar (bad) jmp pop cltd cmp icebp daa loop lds js loop mov aas or jmp jg xchg aam jns xor aad sti pusha imul jb repnz mov pextrw movsb icebp decl clc jae out (bad) and psubd scas xchg stos pop push (bad) ja xor adc loopne outsl add int3 mov imul stos test mov (bad) jmp std aas ret shlb insl or pop pshufw xor mov xchg (bad) jmp imul adc mov rcll fisubrl mov (bad) cli fcomip (bad) daa push pusha jmp std pmuludq ljmp scas outsl idiv (bad) (bad) lcall fsubr push push mov push fwait mov sbb lcall test and push jl and add icebp es ffreep inc adc pop rcr loope test (bad) (bad) in insb mov arpl push pop mov cs and bound mov scas ss add cmp loopne adcl mov (bad) (bad) (bad) pushl fadd jns (bad) lds xchg push aam lahf sub aad adc xor mov mov cmpsb icebp xchg shlb pop cmc pushl jbe fldenv and adc inc cs jae cmc call test (bad) daa stos jbe ja cli jp (bad) sbb rcrl pop dec xor lcall jle lock dec js add (bad) jg mov flds lea pop pusha mov pop es (bad) jg mov pop arpl mov inc out loope sbb push std and inc inc (bad) sub (bad) ljmp mov insb in adc adc or xchg iret mov imul jae scas loope cmp cs mov mov lcall cwtl inc add fsubl add xor ljmp js (bad) aam mov test fwait stc scas pop (bad) lcall sbb in add pop insl (bad) mov mov jle inc push popa cld (bad) sti cmp cmp shr mov and ja pop loope (bad) ljmp insl out mov adc xchg mov dec lods mov incl (bad) sub inc jo insb repz jle clc out std mov lock (bad) (bad) decl idivl insl lret loop imul mov push outsl mov ja mov (bad) ljmp lahf mov sub hlt fisttpll loop xchg cmp hlt fwait push sbb push lea jmp in pop stc mov stc pop lcall fwait push icebp inc (bad) fild inc stos imul jno jmp add dec xor (bad) incl lods popa xchg push push or ret xchg jne das (bad) (bad) (bad) fild stos divb movsb lahf sub xchg mov jmp xchg cmpsl cs dec or adc sbb (bad) (bad) push fldcw lods movsb es repz stos mov and roll ja or ljmp mov jb sbb mov shrb out fnstsw das mov pop ror push inc aad js test mov int clc stos dec mov ss mov (bad) (bad) (bad) (bad) cmp cs sbb icebp (bad) xor pop add imul pop mov mov xlat (bad) fild sbb cmc push (bad) cmp push popf ss cmp mov repz push xchg mov xorl cmp cmp movsb mov jmp (bad) push (bad) ljmp mov movsb ficomp cld inc xlat cli and (bad) (bad) (bad) (bad) aas pop clc push pop les mov mov jle xchg (bad) mov and pushf repnz mov cmc pop mov xor or mov fistpl fnstenv push push shl dec (bad) out clc add pop fcoms shrb jne (bad) (bad) (bad) call mov int push jns arpl es pop xchg pusha into call call push sbb jg and push clc jnp aam jl aas idiv inc (bad) call scas hlt int ret out xor mov les lcall (bad) das cwtl pop push inc inc add add xor hlt aad loope inc stos (bad) jge decl cmp jno mov dec mov (bad) sub call mov hlt xor sub cmpl enter popa cwtl loopne pop cmp add jmp iret cmpb outsl adc pop add lcall (bad) (bad) ljmp xchg adc push sub out (bad) insb (bad) int imul sar dec loope fildll insl in and test (bad) (bad) jg sbb in push push popa cltd sbb push mov aas in scas (bad) (bad) lcall jg fbstp aas sbb jle clc mov jns xchg insb hlt ret (bad) (bad) dec inc or sbb iret test lea bnd fbld clc fcomi ds adc das cwtl in and mov pop (bad) (bad) ja jne sarb mov mov xor call jae das je test push movsb mov jb sub mov and sbb scas cli ret lds adc pop hlt rcrb mov (bad) daa pop jns insl jae mov sti pop addb loope cmp test int3 push enter add aad (bad) jg inc pop add or adc repnz adc push aam cmp mov in (bad) pushl dec nop loope mov and xchg iret dec pop pop popf out imul xchg adc movsl cltd mov std std xchg aas popf cmp (bad) das mov scas sti mov cltd loopne jae (bad) (bad) (bad) in sti mov cld shrb push sar loope icebp into cltd std lods cmpsb std mov jle (bad) (bad) call inc mov idivb gs cmp nop sub out jne jnp mov mov shrl mov lcall sbb pop cmp loop sbb leave xor adc add decl mov negb test cmpsl icebp aaa les pop lcall lods lods fcompl insl movsl insb jae sub stc push push lret adc pop cmp test cli sahf arpl ljmp sub (bad) sbb and jg (bad) mov stos cmp fiadd (bad) cmpsb cmpsb mov in leave add (bad) incl mov mov and mov cmp sti pop dec push add cli testl (bad) (bad) call mov in and loope adc sbb fstpl popf add (bad) (bad) (bad) (bad) in out jecxz aaa rcrb sbb popa test jp xchg jmp (bad) loopne es (bad) lcall in rolb mov fistp rorl push mov std mov adcl fimul sub push xlat (bad) (bad) (bad) decl mov lret mov shr mov (bad) and xchg add rdpmc sar (bad) fisttpll (bad) cli cmp inc ljmp mov mov std (bad) das mov jbe cmp pop pop pop mov jne pop or out mov (bad) call jle fldt ficomp mov mov dec sub popf pop xor fsts std decl inc add iret sti dec clc mov cmp (bad) (bad) ljmp nop (bad) bound je (bad) xor js xor sti cmp enter jno int3 (bad) (bad) (bad) jmp ficompl jle jl mov sub (bad) sbb mov out pop in jo lods mov push (bad) (bad) jmp adc fisttpll fldenv mov paddsb adcb and fnstenv (bad) neg test (bad) (bad) fcomp lret stos clc jmp mov pop xor push push add and enter (bad) out and jno xchg xchg fwait jmp movsl cmpsb lcall hlt push cld dec mov insl outsl movsl lock push cmp pop jl jl lock mov fidivrl or xchg testb lds mov sub and (bad) mov inc cmpsb jmp lahf fwait push iret loopne sbb jg (bad) out mov xlat xor ds or cli sbb (bad) cmp ds popa movsl mov lods and fdivrs sbb int3 mov push or inc (bad) (bad) mov xchg push pop or pop mov xchg adc and ljmp jle and in xchg push push js out fimul clc sar cmp fbstp sbb scas pop clc daa (bad) ficompl popa mov (bad) (bad) (bad) (bad) fsubp sbb out cltd imul push xor arpl outsl ficomp xor sbb test cld (bad) mov push jle cs xchg lods std in inc iret lock hlt mov mov push cmp (bad) lcall mov jecxz jp fwait mov lock add fdivrl loop sar stos sub fldpi pop sbb outsb lods push loop add (bad) decl sub (bad) add jno and and lcall add push push mov pop mov aam (bad) (bad) jp loopne or push mov dec add pop lds push movsb negb aad jmp adc test jle pop pop jb or les fild jecxz push movsb xchg idivl jg lret lock lcall sub jl imul decl adc fwait jb insb mov or cmp mov jp mov sbb fcomip push es jns int dec sti or or xor mov scas push js divb icebp push je hlt call rep mov push inc insl jge mov (bad) mov int3 jecxz xlat test pop icebp push lea mov cmc sub (bad) (bad) pushl fldt xchg xchg adc xchg pusha cmp xlat outsb pop xor call loopne pop jno xorb xlat mov pop out test cmp out enter addr16 loopne mov rorb call push mov xchg dec sbb or shrl fldt ret cltd cld add (bad) (bad) inc ss jp xorl mov pop mov rolb cmp fstl fstpt lcall mov mov sbb xor fstpl cs ljmp clc ss add in push push xchg jne (bad) icebp mov sbb push pushl ja jecxz fs xchg push ret jae mov lahf xchg loope (bad) (bad) incl nop jns push fwait jecxz and push sar lret gs sbb pushl inc nop cmp push (bad) mov cmp mov mov ljmp mov fldcw es mov dec pop addr16 (bad) (bad) jmp pushf jl mov in test xor das adc xchg and mov xor or and xorl sub mov xor test or push ret jg (bad) decl sub dec fimull mov int3 (bad) or mov xchg or sub cmp mov adc and imul cmc (bad) (bad) incl mov test xor add adc mov (bad) (bad) cmp movsl loope movsl inc mov mov scas ret adc adc idivb stc mov xchg jecxz or (bad) (bad) jmp mov out xchg push fwait cmpsb (bad) pop jmp jb out cs xor lret (bad) (bad) jmp pop push clc push mov sti sbb loop mov insl sti aas dec cmp jne data16 call adc ret outsl xor int jle xchg inc xchg pop (bad) mov push ret sbb in or enter in push push icebp or movsb push imul sbb (bad) (bad) (bad) (bad) in je mov push lahf push lcall mov mov and (bad) (bad) (bad) (bad) pushl dec sbb cmp inc rcrl in xlat sub lahf adc adc das sbb xchg js pop aam push test (bad) xor gs push add pop xchg lock incl (bad) push hlt (bad) mov bound xor shr jne rcrl pop dec dec sahf call test mov out gs inc repnz rcr mov lock fnsave loope les lods (bad) (bad) (bad) (bad) fldenv fiadd lret sbb adc mulb adc dec repz pop stc (bad) jg (bad) mov xchg in fs es cmpb sbb (bad) (bad) decl and jnp psubb jmp fisubr mov xor lret stos pop aaa dec stc jge (bad) (bad) (bad) push sub bound push xor sbb jb inc pop jnp and mov ret jp lcall dec loopne mov int3 mov sub add lcall gs mov inc sahf rcr sbb lcall je jmp xchg mov enter in jl stos cs unpcklps pop std decl xchg adc pop hlt inc or cmpsl push and jb clc mov ja lds das in out xchg mov test mov mov jp stc xchg xchg orl xchg call or decb ljmp mov push sar cmpsb aaa adc ror jge xor loopne (bad) (bad) dec add pushf adcb xchg sub in jle sbb xor inc dec (bad) jmp call cmp inc in add sbb sbbl (bad) (bad) (bad) outsb mov xchg xchg shl ss ja repz cmp sub pop (bad) cld imul fcomip (bad) fnsave (bad) aaa ret in dec dec (bad) jne dec mov sbb and cmp sbb mov out push adc sti lcall aam adc jg mov ds (bad) lcall jl shlb aad out lods loop scas sub popl mov ljmp add push add fwait mov or mov lods popa push add adc stc hlt pop loopne mulb fimul enter out cmp mov mov clc addl xchg push or sarb dec loopne mov sbbb jl loope imul mov mov fisttp aaa mov pop mov int incl sbb sbb stos jo jae inc push cmpsb cld mov out (bad) add mov or xor aas aam movsl inc outsl or xchg pop lock pop mov jne incl mov cld fcompl lds push mov das cli (bad) pushl dec repnz fldpi (bad) pop push and lds pop aad hlt cmpsb push xchg mov aaa dec cld addr16 mov adc fistpl jbe in add push fidivr (bad) (bad) (bad) js ret not push dec out fmulp les pop hlt cwtl (bad) das nop sub icebp xchg cmpsl mov aam push std aad icebp mov cld inc mov iret mov imul mov inc xlat lods shlb stc cmp arpl lcall mov pushf mov cmp (bad) jmp sub idivb push sahf mov jecxz loope cmc pop mov push cs ret adc call std (bad) (bad) mov inc out and inc roll jb pop pop lock outsb mov je inc add dec loop (bad) in or aad int or (bad) (bad) decl mov or sub add jmp lahf (bad) test pop (bad) call jne arpl push pop sbb jg mov clc and sbb rcr mov lahf or loop lcall (bad) mov icebp sub scas test inc mov out in int stc pop (bad) (bad) (bad) jmp cmp dec lcall popf mov (bad) test jg jp clc aas (bad) aaa dec nop call enter (bad) lcall fiaddl loop xor xor cmp ret xor (bad) decl xor adc jmp dec (bad) mov or loop movsb incl jns imul and outsl xor pmaxub dec nop inc add ljmp lcall iret stos clc jle lret ret mov adc pop int xchg lret mov aas ja pop adc (bad) push mov push and sahf mov push pop (bad) cmc mov fld1 jmp push js movl inc ficomp cmp cltd dec sbb ds (bad) idiv xlat cld aas int3 jne mov (bad) fcomi xor jmp lock lea dec int3 mov test cld (bad) decl push push adc rorb into dec scas ja lock sti cmp rcrl (bad) jg pop and cmp scas jmp dec mov or in sti fdivr push (bad) (bad) fstl inc arpl and mov xchg lea adc lock (bad) xor push lahf addr16 leave ret add (bad) ljmp movsb cmp dec leave or repz mov mov (bad) adc (bad) jg aas or xchg and dec jle (bad) sub mov in add pop (bad) fwait (bad) (bad) incl (bad) lahf das mov fisubl mov into in imul dec xchg (bad) (bad) (bad) ljmp jmp outsl shr (bad) adc das paddd jg cld imul jecxz pop (bad) sbb (bad) (bad) (bad) incl pop adc mov xor pop test dec ds (bad) jle jge hlt idiv fildll (bad) mov cld insl xor cmp insl dec ss mov ret sub jns out in add (bad) outsb pop jl clc fnstsw loope sbb call cmpsb inc cmpsb out repnz lea js in subl and pop xchg cmp xchg les (bad) (bad) (bad) fildl lock movsb (bad) jp (bad) insl fildll push (bad) fcomps add dec xchg cmp lock push lods es sti ds sti mov xchg mov jecxz outsb fild lock cli pop push aaa test das adc inc (bad) xor pop jl mov sub addr16 and add xor pop mov les xchg pop or xor imulb (bad) jg xchg lcall aad (bad) dec fwait (bad) (bad) (bad) (bad) (bad) mov call sub cwtl jl jmp lret cmpsl fidivr or pop pop cmp aam aaa pop stos pop push ja jp iret mov jnp add in lahf push (bad) (bad) (bad) pushl xor push pop (bad) sbb bound pop cmp mov jl cld lcall dec or ficomp call mov out dec or lock insb in mov lret insb scas inc lret cld or fldl les sbb pop cmpl dec into fist lods push popa add ret adc loop cs mov push movsl into cld in (bad) dec fwait mov (bad) push clc lret imul pop add xor fstpl pushl and je mov or push push fidivrl imul scas iret dec xor inc pop pushf mov fsubl (bad) fbstp js adc push clc jnp and (bad) mov xchg pop sub js push mov mov (bad) fstl outsb pop dec aas idivb cld inc jnp dec sar and ret loop (bad) jmp lcall aad (bad) aaa mov or sub adc cld faddl (bad) pushf xor push sarb push lock cli push ret (bad) (bad) (bad) push notb mov out pop nop daa xchg (bad) push insl movsb add test mov sahf sub jl jbe mov fldcw lock aam (bad) (bad) (bad) ljmp jp cli sub jns pop jns movsb add into inc lds mov fnsave das pop hlt pushl jle je leave adc pop movsb mov decl adcl or movsb shl sar insl cmpsb (bad) dec and divb jno inc es pop push sub add cmp clc das les in daa lds (bad) (bad) lcall ret and mov (bad) ret jae mov and cld aaa sti xor sar incl and jbe insb mov and adc jno pushl dec xor jecxz mov (bad) pop dec in jmp add sbb push (bad) (bad) mov and cmpsl loop mov imul xchg xchg stos mov mov mov sbb mov gs fisubrl fwait jg pop cmc (bad) (bad) (bad) push pop data16 lret pop sti das int3 in xor out xchg push jecxz sti lret jnp arpl (bad) (bad) (bad) (bad) jp scas test fistpl mov xor or jo (bad) pop enter pop pushf add out mov (bad) (bad) incl mov sbb pop icebp stos ret jp mov daa mov sti sbb inc adc add pop cld decl sub sbb pop clc in mov mov mov (bad) jmp mov xchg idiv fs dec into cli gs inc push and sbb gs hlt (bad) decl rol nop pop js inc std pushf cmc xchg (bad) (bad) (bad) mov (bad) aad arpl sbb mov sub stc stos (bad) mov (bad) lcall pop loop xchg fnsave (bad) mov outsb out daa fsubl out mov call cmc ds dec sti ss imul mov icebp out add cmpsb js out lods inc dec xchg inc pop into push cmp jle (bad) pushl inc in fdivrl dec lahf push in mov xor sbb (bad) icebp inc push aad decl lock into mov and loop lea sub add fmul test and jle ret lcall ror jecxz and (bad) es adc cmpsl lods adc lret sub add pop xor (bad) (bad) (bad) pushl mov (bad) repz mov je mov pop (bad) das arpl (bad) (bad) (bad) pushl cmp jns adc mov adc jo mov jno mov (bad) (bad) (bad) push aas pop std in mov out pushf pop lret lcall aad (bad) ljmp (bad) sbb lahf mov cmp pop pop push ljmp and mov out (bad) (bad) (bad) incl (bad) mov stos mov (bad) int add scas cmp ds add loop add (bad) cmc iret cld (bad) (bad) lcall pop jmp clc (bad) test inc sbb loop repz inc sbb xchg jno fcomip incl lcall dec loop fisubrl sbb fwait mov lcall cmpsb repnz mov popf mov xor dec in ret lcall (bad) out xor (bad) out mov inc in rorl sbb adc ss cli (bad) incl cmp mov insl pop std cli mov aaa xor xchg pop inc (bad) (bad) (bad) (bad) std scas mov mov out mov pop cmp push cmp pop popf test fmul stos insl loope outsb popa mov mov jae (bad) (bad) (bad) call mov jecxz xor cmpsl clc adcl lods fs ss mov int3 das clc (bad) incl inc mov je mov iret mov daa xchg popl (bad) lcall mov sub outsb sbb pop and and push push out (bad) (bad) (bad) call xor add xor jbe adc xor inc inc icebp lahf les pop aad inc sar pop test (bad) lea fwait dec xchg icebp inc mov and xor data16 in lcall push or dec jb add jmp out mov mov std stos lods jnp (bad) (bad) (bad) ljmp jl clc cmp lock ret fild pop int3 fidivl ret movsl xchg push pop cmp sub jns daa pop shll test into mov add inc sahf adc incl jo mov test xchg dec push arpl and push dec xor pusha sbb pushl mov fisttp ret cmp jnp addr16 mov lea dec or pop dec mov inc xchg or repz push js lds (bad) call (bad) pop pop movb pop jnp mov lock call or pop jl cmpsb add xchg lods sbb rclb cmc and jbe mov jg xor sub push lcall and xchg (bad) (bad) (bad) jmp push xchg sbbl jo popa sbb xchg sub sbb sub adc xchg xchg (bad) push cmp pop lea clc xchg aam or pushl xchg imul xchg push xchg movsl mov mov adc pop dec add xor loop arpl push mov (bad) jg mov jl mov mov dec push aas mov lds inc dec je pop lahf aas test fadd jbe pop ja iret stos mov imul jecxz sub mov xor aam call mov out iret iret sbbl dec ret jnp or sbb std popf push cmpsl xor cli cmc shrl inc push mov cld into pop jmp pop test (bad) call loopne outsl push push out pop mov clc outsl loop mov mov xchg imul in push inc lea adc add int3 pop jno lea ficoml in clc (bad) (bad) (bad) mov pushf ret test lods hlt rcl hlt lcall push fdivr lahf ficoml and (bad) clc fdivl cltd insl mov loop (bad) jg es mov cmc das sbb push dec adc cld bound ds cld ljmp push inc jb pop and add add pop and mov add dec (bad) pusha cld xchg lock sbb loope bound dec mov (bad) (bad) decl pop xchg jecxz sbb lret insl adc fisub (bad) ja addr16 (bad) (bad) (bad) call cmp jecxz repnz (bad) mov mov out mov xchg pop dec mov cld ret jecxz jns nop xchg and sub dec lahf lock scas fsts and (bad) movsl push (bad) mov xchg iret sbb xchg or gs mov (bad) (bad) pushl aas xchg jl icebp (bad) jmp lcall mov adc call (bad) (bad) jmp aad add mov hlt (bad) ret push mov imul cld decl mov stc or lret cli xor aaa add lods iret xor sti dec mov push dec and or push movsl addr16 jbe mov push pop iret and loopne pop fiaddl stc sub movsb fwait test mov or push outsl (bad) divl aaa lds sub clc dec mov and lods loope (bad) (bad) fcomip pop pop fist pop outsl in es and xchg in adc mov (bad) (bad) (bad) jmp or scas scas adc pop xor cmpsl inc inc cmp lock out repz call (bad) mov loopne fbstp sub es movsb js cld js pop aad aaa mov jnp fidivrl sbb pop data16 (bad) jmp add xlat into divb in xchg decl bound lea or xor pushf in or (bad) inc aam sbb push in lods xchg cli stc mov repz jbe mov (bad) dec iret ror jg (bad) push gs ret scas imul clc dec dec shlb jne lods cld shrl mov inc xor sub jno lcall mov mov rcl icebp mov inc loopw adc das sar (bad) pop pop dec sbb xchg xchg xchg cmp adc mov movsl inc or mov add xchg sarl mov push push std inc sub push xlat mov xor in cmp xor enter (bad) and ret das adc lock pushf sti (bad) (bad) mov pop ret jmp lods push mov insl add or (bad) pushl rcrl push orb pop inc neg sarl pop mov (bad) fmul push fist negl mov jg aad mov js in cld inc jecxz jae (bad) (bad) jmp or jnp pop mov cs mov xor (bad) outsl clc out cli dec inc mov into test lea jecxz jl das sbb (bad) (bad) (bad) lcall lock cmpsl mov xchg pop adc push andl out mov std lcall jl push pop lahf loope repnz fidivrl icebp incb xchg icebp mov push aad fwait lods sub (bad) mov pop jnp mov xor push int3 (bad) jmp sub cmpsl in push sbb jne adc mov dec lcall lcall inc arpl and mov mov dec and jl sub xor lea sbb and int jle mov into stc mov (bad) jecxz xchg dec outsl mov sbb hlt (bad) (bad) dec mov ja jl clc jle addr16 mov cmpsl (bad) pop adc ja loop imul cld sub dec int bound int (bad) hlt in cwtl cmp in push cs ret xchg cmp incl inc sti psubb das mov ja fisttpl push jmp (bad) call mov cld aas cmpsl lods jno loop inc mov inc iret mull adc subb mov imul aam pop adc lret jp mov (bad) fbld out movsl aaa divb xchg inc adc add lea inc jbe pusha rorl ret mov stos loop jl aam pop mov cs push and xor lock xchg mov xor inc push xchg ss and stos push jge ljmp outsl inc (bad) test dec pop jp and imul cld cli fldlg2 lahf leave and (bad) sub test mov xchg leave icebp jg incb mov pcmpeqw pop push addb lea mov push lret cwtl add div mov pushl outsl (bad) sarl xchg push jne and inc push inc xchg decb (bad) decl dec sub xchg (bad) or cltd mov fs cld jo cmpsb jl loop sar xor mov mov sbb movsl lods sbb (bad) fs adc dec in data16 inc adc negb add jl clc jae out push fwait arpl inc loope add lock mov pop mov jo out add sub inc push mov mov mov mov mov mov (bad) (bad) pushl mov jle fild jg scas adc sub push (bad) (bad) jg xchg and idivb or scas jno popa sub loope insl loopne popa orb jle pop (bad) (bad) cmp dec test loope mov scas xchg imul xchg pop cmp jle outsl test sti clc xor add (bad) (bad) (bad) jmp out add dec jg xlat pop sub sbb jg lret xchg add pop icebp test pop xchg add cmc imulb clc ljmp jle cld pop clc jg mov in clc stos ret mov (bad) (bad) pushl adc adc lods int3 sbb idivb push xchg inc dec fisubr cli (bad) mov call mov jne (bad) push mov aas imul push (bad) (bad) (bad) push mov in insl pop sbb mov dec data16 test into push adc in pop (bad) (bad) (bad) incl pminub jns loope pop les xor mov jb lcall (bad) xchg (bad) jg push aaa dec inc push push pop cli add (bad) (bad) (bad) js rcr scas ret dec mov mov push fwait loope mov (bad) mov dec jno ja (bad) out push stc sbb nop xor sub mov icebp add or push sarb push jb shrb dec cld lea loop add in mov xchg push test jle movsb rcll mov mov push xchg imul push ljmp add loop ret dec icebp pop subl (bad) (bad) cmp lock (bad) sub adc fstps lock jbe xor push cmp das adc mov dec test xchg xchg mov je adc enter lods inc in jbe in jae dec xchg jle pushf and add mov pusha push ljmp (bad) (bad) dec inc mov pop cltd or test mov pop fild clc (bad) pushl push (bad) sbb clc mov jmp inc or sbb icebp xchg and lret cmp jae adcb sbb xchg arpl xor cmpsl icebp (bad) (bad) lcall inc (bad) test cli push mov xchg fldcw sbb sti adc lcall inc xor and pop mov lods gs aam (bad) (bad) ds pushl dec or fnsave push push dec cmp mov (bad) (bad) cmp imul fs pop vmptrst pop push add and adc mov scas add cltd and ljmp sti pop lds aam test (bad) lret enter mov pop or mov ljmp (bad) inc push xchg repnz xchg sbb fs adc cmp and xor jmp inc in pop cmp jmp cmc les mov push mov mov cmp mov and push (bad) ljmp sbb mov pusha cmc jmp ds ljmp mov jg pop dec les lcall and adc (bad) mov decl test push cmp iret pop cmp push cld call aas adc adc notl xor mov mov add mov xchg (bad) cli fistl test sub lods clc ds out lret inc adc wbinvd xchg or and repnz push dec jae xor xchg loope imul jle mov (bad) (bad) (bad) call loop mov ffreep jg jle xlat cmpsb icebp sbb ret mov xchg movsb std (bad) (bad) jmp xchg out inc cmc popa mov push faddl or push lds jg or jbe enter cld out (bad) call sbb leave and adc or push shr pop inc sti xor lods lock mov adc in outsb xor fldt sub jge fmull pop dec sbb pop ret mov push jns xlat ds (bad) (bad) (bad) jmp paddsw cmp (bad) sub sub fisubrl or lret fsts (bad) push ret jns sub mov aad inc sets into lcall aad xchg (bad) (bad) (bad) ljmp leave into xchg sub int3 pop das mov add in mov push jb push (bad) (bad) (bad) decl mov scas cmp or out mov es mov jg inc lods and (bad) (bad) (bad) (bad) (bad) cmp mov (bad) shr adc outsl lock ljmp in add (bad) (bad) (bad) mov (bad) add inc cmp jno jg add cmpl scas xchg or imul sbb ficoml add decl jno lcall rcr (bad) icebp das mov pop movsl fdivrp test fsub (bad) jmp ficoml mov and insb cmp push xchg push int3 aad ljmp stos cmp popf les icebp dec lret es ja clc fldl setl push stos aam push jp push pop add mov fsubp ljmp lcall jne mov mov gs jae or xlat pushf mov movsl cli jecxz gs das lcall mov decl add notl popf xor ret clc (bad) push fucom xchg mov jmp and mov xor arpl jne decl mov sbb or lcall mov outsb xchg into push add bound cld stc cwtl sbb mov repz (bad) (bad) (bad) lcall es lods fiaddl lea rcrb ret mov inc or (bad) mov mov inc cli outsl mov or lea cmp mov xchg mov and cbtw or imul stos (bad) stc or gs dec xchg arpl pop (bad) xor sbb xor or fwait decb lods (bad) mov scas push loopne jbe or jl clc (bad) (bad) (bad) jns jle lock xchg xchg mov negb ret xor push fwait push xchg (bad) (bad) ljmp sub xchg enter les dec ljmp std inc dec mov int sti mov loopne lea pop ffree xchg stos jae (bad) sarb enter pop outsb jl (bad) (bad) (bad) push les and adc pop cmp jecxz (bad) pop ficoml mov and mov (bad) pushl popl cmp movhps fldz in negl in jae add dec pusha lock (bad) cmp (bad) (bad) pushl dec notb xchg cs mov cmp mov test les (bad) cli mov (bad) (bad) (bad) cmp inc out xchg aam pop add clc jg jbe (bad) iret test sbb loop push (bad) (bad) (bad) incl cmc or lret pop pop leave xchg push sub mov cwtl push das sbb sub cmp ret jmp std sbb mov inc aas xor outsl hlt mov inc addr16 xor (bad) (bad) inc daa ficoml (bad) and cltd dec dec push iret xchg out mov fidiv adc xchg lds fidiv imulb (bad) inc outsl xchg adcl lods lret sub fs cmp pop inc inc (bad) ljmp xor pop sub aaa cld (bad) jl rep les clc jae clc in ja js repnz xchg (bad) (bad) (bad) mov sbb xchg sub add push pop add in loope mov mov (bad) ljmp cmp push mov ret jp pop ret insl out test repnz stos lcall and mov out and movsl (bad) (bad) decl ja dec loope popa mov iret in and movsl pop inc (bad) (bad) decl ds inc xchg push pushw rol sbb (bad) xlat loope scas jae pop ret mov (bad) cld aaa loope jmp int (bad) xor dec test stos enter push mov fmuls xchg stos sahf jp (bad) (bad) jmp cmp push xchg mov xchg fisubr icebp push mov dec sub jnp leave jns ja xor (bad) (bad) jg leave loope and ret jnp das (bad) (bad) push pop adc inc movsb mov mov sub (bad) call sub stos and mov stos adcl fwait sbb stos add xchg push xchg aaa fsubs sub in mov ljmp mov mov in out int3 mov (bad) call add fcmovnb push lock jns popf dec push mov imul into push and sub (bad) (bad) call sub add sbb outsb jecxz adc xor aas or imul ds pop cld mov pusha mov mov push and in (bad) jl pop inc sub sub lea mov cld lcall imul and repnz pop lahf loope inc and ljmp ret movsb mov dec out addr16 ljmp mov jg fisubl in mov (bad) fcomip sub pop rolb (bad) push inc mov lock test sbb mov cmc loopne mov pop or (bad) ljmp xor xor lds aaa repnz bound into cmp (bad) sbb sbb jle pop push push hlt mov and sub test xchg and ss sub (bad) cmc (bad) (bad) jg stos or adc cmpb xchg jl aad jmp imul ja (bad) (bad) ss aam sahf (bad) sbb ja push mov pop je (bad) (bad) ljmp xchg gs mov int xchg rcr pop jp ljmp jg in pop sub lock outsl sbb test jno mov cmp mov and adc fldenv outsb ljmp imul xor (bad) (bad) incl les (bad) push (bad) sbb sub pop (bad) ljmp cld mov sbb xor xchg bound das lds mov icebp (bad) (bad) (bad) ljmp test push (bad) int3 arpl in movsb xchg inc mov jge loopne leave lods jecxz ficompl (bad) push icebp (bad) (bad) pushl lahf jno adc inc outsl and lods push inc out insl iret test sub inc into sbb movsb mov sbb xchg and pop pop cmc pop imul sti stos dec out jg int3 cli pop (bad) jg inc add insl lock pop mov mov jmp pop lcall bound loopne out (bad) addr16 mov (bad) cmp (bad) clc mov loope xchg stos sub mov xor xor mov inc (bad) (bad) (bad) (bad) (bad) inc mov movsl push adc cmp lahf push test dec sahf push adc xchg (bad) fcomip (bad) (bad) (bad) decl cltd mov mov xchg mov in mov jl dec and and (bad) (bad) (bad) call shr int3 imul and aad psubsb das mov inc mov pushl std cmpsl lcall inc or and jmp rcrl fimul add (bad) jg or imul pushf mov js addr16 cmp inc addr16 dec ret cmpsb outsl clc pushl rclb sbb int (bad) stos jno sub (bad) dec lahf fldt jns pop stos pop add sbb cmp push fwait or xchg cmp idiv sar imul lret ljmp sarb xor (bad) mov push cmp xor (bad) and cmp (bad) (bad) (bad) jmp and or in sub fnstcw loope mov inc jl (bad) mov or (bad) (bad) (bad) inc pop push (bad) push inc cmpsb mov loope out outsl push push pop fldenv pop (bad) dec adc xor lods leave cld pop pushl cld push (bad) jae or adc (bad) sub lahf (bad) out mov nop push jno icebp lret and sub mov roll cs jecxz ds insb mov out lds mov (bad) xlat data16 imul cmp data16 insl dec ret fbld lret cmp or lock mov cmp (bad) dec lcall jge mov push mov xchg sti lods jb dec popf or jb mov (bad) iret in cmpsl icebp xchg (bad) incl cld fcmovbe ret or jae sbb psubb mov adc lcall call jbe insb lods sbb adc xlat adc (bad) lds or jl scas (bad) jl dec (bad) (bad) (bad) lcall das movsb mov xchg pop sbb and or in nop cltd push push jle push (bad) (bad) (bad) ljmp fwait inc mov pop mov ret ss imul jg lea lret pop into data16 (bad) (bad) call cltd pop lret add out or fimull pop ja loop mov (bad) (bad) (bad) call ss xchg fsubrl mov outsl or popf sbb shll or stos cwtl adc (bad) xor lret sti pop repnz and in push cmp xchg ja jle xlat ret lret dec sarl loope fiaddl adc fdivs add in mov scas outsb pop lahf mov (bad) mov and ret jae jl (bad) iret aad incb fisubl jle outsl cli call fisubrl hlt fcmovnu lea enter jge fld out add decl sbb daa movsb icebp idivb (bad) (bad) jge js test mov movsb sub mov push dec and popf mov xlat stos movsb xor mov iret (bad) jns cmp ret (bad) mov hlt pushl mov cmpsb inc (bad) cmp inc scas mov dec sbb decl sahf xor gs mov js insb stc outsb ficomp push sar (bad) ljmp mov (bad) mov jmp icebp roll std mov pop stos jl (bad) (bad) (bad) jg cli lds or inc stc test jo stos dec mov test mov clc xor icebp dec outsl cmpsb ljmp xchg mov pop pop inc cmpsb clc aaa dec jnp add xchg lods jo movsb lea cmp decl cld into (bad) mov out cmp icebp sbb fidivr lock les dec lcall mov push pop pop popf insb out cwtl push fimull inc pusha inc push mov add les sub out xchg mov into jmp mov insl push inc push pop sub (bad) (bad) lcall sub jae addb push sarl loope sub mov clc jg sahf or push div aam loopew ret ljmp sbb aaa sarb (bad) data16 fisubl roll dec jne lock das out popf fsubs mov in (bad) mov je and loop mov pop pop clc dec mov (bad) dec loope cmp lods std call fmuls loopne xchg lock and cmp mov pop sub pop sub cmc sub push popa cmp stc cmp cmp (bad) ljmp imul mov std mov sarb mov aad inc call out mov inc sub int arpl les mov pop icebp mov jecxz mov xor idiv scas xchg movsl jbe lret mov sahf test (bad) (bad) call lahf mov repnz out repz xorl mov push inc mov jmp call or ss cmp cmp pop lea (bad) (bad) (bad) (bad) mov clc lcall xor mov ljmp push push push lret lcall dec into fsubl sarl icebp xchg mov and pop (bad) (bad) (bad) decl ficomp xchg fcomp (bad) mov sbb ja lods inc xchg sub mov jbe (bad) incl sbb xor and fidivr lods adc cmp les push fcompl dec fs pop sbb call mov mov faddl test sbb test das cli (bad) cli les pop insl fisttpl lods or lret stos pop dec (bad) pop cli fdivr (bad) (bad) (bad) (bad) fdivr xchg xchg call mov (bad) cltd lods insl pop mov inc ja fs out lret imul pushl sub and jo bound adc mov push clc adc pop (bad) lcall mov repnz jno bound mov pop cmp or ljmp clc cmc test sbb xlat in cmp fidivrl andl movsb ret test (bad) (bad) incl test divl xchg cmp xchg jecxz out test mov in lods cmpsb jmp (bad) (bad) (bad) call dec ja pop pop icebp fimul es aam out pusha gs pop vmovupd (bad) decl jecxz pop push (bad) lea cmc in jne lock xor cs hlt xor aaa js loope (bad) dec dec inc or push rcl mov in (bad) (bad) (bad) decl dec mov add mov and and mov int mov icebp scas jo adc (bad) cmp sti aaa imul (bad) (bad) jg dec sbbl imul mov aam dec mov adc (bad) pushl nopl mov mov lock sarl cmp jge incl clc and ret dec popa (bad) jp int3 mov outsb dec cmpb mov jo bound test lods add outsb mov lahf mov in mov push hlt call imul cld jp ss decl bound jbe and push sub sbb lea pop xchg pop dec out dec mov pop sub jns fdivp (bad) (bad) ds cmp mov mov pop mov rcl scas and dec (bad) (bad) jecxz lds jg call add xlat (bad) hlt pop ljmp sbb ds (bad) (bad) jge iret xchg dec jl lock xchg ret jg je sbb pop leave loop,pt adc (bad) incl xor outsb frstor sarl out pushf xchg dec mov mov xchg into loop std ljmp (bad) mov pop fidivrl mov pop lds pop es lcall xor pushf push xchg dec sti stos cmp int mov (bad) pushl inc mov insl (bad) ss mov jg fnop data16 (bad) hlt test lods data16 (bad) (bad) (bad) call sub jns lret insl sbb fs popf sbb inc cmp notb push or fwait xchg fidivr add xlat push repnz jle les push fcom (bad) std (bad) (bad) lcall into pop std enter clc sub inc lea sub (bad) push test (bad) (bad) pushl lock pop push jmp sbb sti sbb jmp scas cld jmp sub mov mov outsl mov in dec fcmovnbe mov push jle jle lock mov aaa call clc and lods jmp mov aam xchg sbb or mov pop or and outsb inc jbe push loop lock mov clc jle pop out test dec and mov hlt lcall inc stos lret add daa mov mov icebp fisttp das clc dec loope and mov ljmp js movsl shl mov in clc jne push push mov add je popf or (bad) (bad) jmp or xor inc (bad) mov (bad) (bad) dec iret scas std fnstcw dec add out lock clc or mov pop jl lock add mov pop (bad) cmpsb mov std movsb sbb dec jnp inc cmp add sub pushf repz sti (bad) (bad) jg shl clc sbb divb or pop sbb inc aad (bad) ljmp arpl push mov inc mov shrb push dec rcrl lock (bad) (bad) jg test lcall mov fsts stc dec push cmp ret imulb or scas test (bad) mov lcall cmp lds cmp pop or cmc movsl out cltd imul jmp inc loopne mov fisubl arpl sbb outsl lahf cld add (bad) jmp lret push iret lock mov lret out cmpsl shr sahf push std stos ds jle call cld dec or negb loop cmp lea lahf or xchg call xor movsb and (bad) (bad) (bad) lcall mov aas mov int dec ret ds fisubr mov inc sub xor call (bad) loop inc mov shrb xchg insb or int adc push mov dec notl mov (bad) mov ds icebp pop xchg aaa imul or adc cmp jno imul jl popa fs cmp sbb out fsubs push std mov mov push loope outsl push mov mov loop adc xor fisttpl pop movsb fiadd xchg (bad) (bad) (bad) incl test mov shll adc xchg int3 test imul aad cmpsl add (bad) (bad) jle pop movsb mov (bad) (bad) aas mov in lahf lock mov std mov outsl and loopne idivl call inc cmp out and mov inc pop out or pusha add aaa (bad) lock cmpsl mov fisttp mov jne jmp sub cmp add (bad) dec int3 xchg xchg insl loopne mov lods inc movsb mov (bad) mov push mov (bad) incl stos push lock int3 aas pop data16 sub hlt lods dec loop jne pushl fdiv int cltd or sahf movsl xchg loopne fs lock stos inc loop fdivr xchg test sbb mov mov fnsave daa mov (bad) (bad) jne push lret (bad) (bad) (bad) incl std lcall xor or int3 or mov xor fmulp out div dec xorl inc insl hlt cmp pop sahf jl,pn cltd (bad) jg sbb jnp jg mov cmpsb clc ss mov xchg (bad) out clc pop push mov leave lcall xchg xor sbb int mov pop aam push fwait push mov fistp bnd call std loop inc lods icebp xchg xor lea adc adc sarb mov push inc mov (bad) (bad) lcall mov lock mov std jne xchg adc ret xor (bad) insl mov bound pushf sbbb cmp push ljmp ficomp mov cmp jmp mov xchg add (bad) lcall ss inc loopne push push sub ss pop mov mov jl aaa andl dec mov add push mov (bad) call or fwait jecxz out push pop pop pop fcmovnu scas xchg arpl out pop ljmp (bad) dec xor xchg sahf add pop sti inc ret and leave mov in cmp and (bad) push mov call test adc pop dec xchg addl push add add (bad) adc ja sbb std (bad) (bad) lcall push in ret mov xor push adc (bad) dec enter call dec in je outsb dec jge loop fnclex pop push pop or inc (bad) (bad) decl jl inc std test dec mov sarl adc mov adc push cli (bad) lcall pop mov xor mov negl test pushf jge or (bad) lret fs (bad) (bad) call (bad) ss or popa cmp std ret pop js dec fisub jle pop out xor movsl jl decl add pop sbb sarl add ret (bad) (bad) (bad) decl mov and (bad) (bad) mov ljmp push loopne arpl in outsl movsl pop lock mov lods jo jb mov cld cld jg (bad) cmp pop push mov or fidivrl push push sti scas mov lahf fisub or lcall hlt neg icebp xor iret xchg or cwtl lock fwait or (bad) fildl imul imul les outsl sar shlb cmp mov ss adc sbb (bad) mov aas add jns movsb jle ficom mov fistp cmp hlt mov stos push sar (bad) outsl cltd cmp nop aaa add enter idivb (bad) (bad) (bad) (bad) (bad) fcomps adc lret loope dec fstps lret les aad lods jcxz mov push ljmp incl inc in push xor xchg sti push imul (bad) fisubrl dec shrl std aas pop mov and (bad) or (bad) (bad) decl pusha dec mov lahf loope cli jns ret (bad) fidivr jle clc push dec sar or cmp lea mov out jne adc push xchg adc mov adc sub pop sbb dec or in stos cli sub popf xchg jae push push (bad) sbb lret icebp add xor sbb call icebp xor and ret or or add pop ret cmc in (bad) jmp mov mov scas test cli pop mov inc xchg in sbb xchg sub lea pop mulb xor sub sbb sbb mov add (bad) (bad) jg mov cmp xchg pop mov out xlat and sti xor mov (bad) (bad) jg gs mov dec outsl test jnp out insl in fist inc jl cmpsl push add fprem (bad) call stc xor ja (bad) pop adc lock pushw inc (bad) xor dec mov decl scas xchg negb test movsl jmp xor pop (bad) (bad) (bad) (bad) mov fmull mov push loop inc push xchg (bad) push cli push in jae ljmp lock push mov dec push cmp inc out jle (bad) call aas scas fidivl loope les fsubrl es out gs (bad) or fwait jecxz icebp (bad) js pop loop jmp push fstpt jge cltd mov (bad) (bad) mov imul out mov mov sub push icebp insb fstpl (bad) call xchg ja cmp xchg mov movsl pop dec mov fidivrl iret ret (bad) mov not lds cmp xchg inc dec (bad) (bad) jmp idivl enter xchg and pushf pushf add aas push mov dec gs xor cld outsb lock (bad) in ss dec in sbb mov jae cmp enter mov ljmp push shlb in xchg pop cli sbb xchg imul pop cmp ret jmp test xchg add insl or cmc mov lcall (bad) movsl scas fcomps and fnstenv mov outsb add push (bad) pushl mov pop fnsave sarl mov (bad) (bad) ljmp xchg jle js pop sarb out (bad) fild lret dec push in xchg lret xor jbe (bad) (bad) (bad) decl int inc adc push clc push jg cmpsb mov das push js dec imul inc (bad) sti and (bad) cld test loop gs cmp pop xchg (bad) (bad) mov and sahf sub cmp cli sub lods icebp (bad) jg (bad) mov insl enter dec jns xchg imul jecxz mov stos cmpsl idiv (bad) call mov inc into ficomp lods outsl add (bad) pop lahf cs pop (bad) (bad) cmp pop push cmp (bad) incl iret mov cmp jl hlt hlt out scas xchg and mov scas xchg (bad) sahf fyl2x ja xor sbb out icebp and clc jecxz xchg (bad) (bad) (bad) dec aad fucomi addr16 pop adc and pop clc mov addr16 mov icebp mov (bad) jmp sub xor pop pop push insb xchg cli or aaa cltd sbb adc sub (bad) (bad) (bad) (bad) dec (bad) dec xchg (bad) aas mov sarb sub imul loopne push cmc or in mov les jge jns jl in incl divb scas add pop lock inc adc (bad) xchg cmp (bad) push jb xlat push scas and push dec loop std rolb dec xchg jbe fcomip pop lock lods (bad) scas outsl and imul pushf in inc (bad) sahf (bad) (bad) (bad) jmp lock mov jge sub lods insb push jb imul dec push adc in dec cwtl faddp add (bad) pop out mov enter call adc (bad) idivb inc mov scas imul leave xchg bound scas and lcall jge add xchg ss fistp mov je ljmp pop cmc pop and sub xchg dec dec dec push pop out sbb and decl and stos jecxz adc (bad) and push xchg loope pop mov out fcmovu ljmp sub xor aaa adc jno mov push imul aaa push or out and hlt or cmpb inc mov pusha mov movsb dec lods xchg std scas popa cmp js mov xor js push fcmove loop (bad) fcomip dec xchg icebp pop or jl stos jg std xchg jp shl roll repz (bad) sti test (bad) (bad) lcall out outsb dec scas sub jl lods mov jecxz insl push push mov je pop sub sub lods out adc jo int mov imul mov clc inc (bad) ljmp shr insb fildll ljmp jg (bad) push push jle xor loopne sub in sub mov (bad) (bad) (bad) (bad) fimul js les icebp sarl les mov test (bad) mov cmpsb sahf sbb jne ss orl pop pop jecxz or mov (bad) lcall push outsl sub mov jno mov cmp cli jl (bad) (bad) (bad) jmp aad sbb enter dec jle mov fstl (bad) xlat add aas cltd (bad) dec jmp das (bad) (bad) (bad) lcall mov ss jg in fmull jmp push mov cmp rcrb fucomi ljmp nop test faddl jge jmp dec cld aaa cld cmc xor xor jne jmp push cmp cmp in lock (bad) loop fxch ljmp jmp sarl into out pop dec adc je mov mov cwtl jns repz in sar and icebp outsl bound jl clc sbb push js cmpsl loope dec cld fistp cld push shlb push idiv push adc stos ret jae fcomip (bad) decl lret outsb out repz sub sbb clc (bad) jecxz cmp jmp cmp xchg ja andl in lret (bad) jmp push aaa out push stc mov adc clc sub ret in jecxz,pn push mov idivb pop fwait (bad) (bad) ljmp in test push xor dec xchg aaa xor test jl inc dec adc adc mov inc outsl into incl mov inc or adc shr (bad) mov pusha sti fs cld inc std popf loope mov or jmp icebp incl mov cwtl scas and jae pusha incl stos xor loop mov xor fwait pop mov and pusha mov xchg fild jmp adc pop test sub pop ljmp sub adc call sbb mov imul (bad) ljmp imul xchg add ss icebp mov add mov sub incl movsl stos push jp xchg mov or bound roll (bad) (bad) call into cmp aaa pop in int3 aaa push jae mov lods test sub pop out out repz std xchg (bad) (bad) (bad) (bad) mov insb iret adc sub mov dec shr insl add fld jne subb adc and adc mov pop push divb lea lea pop mov mov (bad) decl lods in sub (bad) jb dec into mov inc mov decl pop dec mov dec icebp (bad) dec icebp ja cmpsl repnz inc mov ljmp aad mov adc (bad) jmp xchg cmp sub sbb imul push ret sahf es clc adc mov dec or dec lock imul call sbb fistpl (bad) pop stos dec divl pop inc outsl aas sbb fisubr mov fisttpll ja adc call jge jle idivl lock jns lcall or cld pop xlat push pop jge mov int xor cld (bad) (bad) ljmp loop mov adc mov mov ja push push sbb int and clc lcall xchg or mov lods pop cwtl cmc sbb out nop mov shll lret sub clc pushl xchg scas xchg loope xchg or je stos mov (bad) outsl cli jmp aam mov dec mov jne arpl add and pusha lcall (bad) decl nop lds sbb insl outsb loop adc pop or clc (bad) (bad) mov xor imul test (bad) into mov mov dec lock (bad) (bad) jg lret std adc jl clc daa loope push (bad) clc cmpsl mov movsb pop mov or (bad) jg pop mov stos cmpl push loopne mov lahf sub cmp cmpsb clc (bad) (bad) (bad) lcall sbb push mov push xor mov gs mov push xorb push jmp or inc (bad) mov mov xor (bad) aas mov jne sbb inc aam lret outsl sbb inc into aaa repz xor fstps mov add movsb xchg inc mov in jl loop fcmovbe inc leave test dec sub outsb adc ljmp inc mov dec sbb test jp frstpm(287 xchg incl (bad) decl cmc aam xor fldl ficomp loop das jb lret int in mov push xchg dec jecxz rcrl sub sbb (bad) (bad) jmp xlat mov loop test jmp insl jno (bad) ss test mov enter (bad) pushl sahf xor pop test mov cltd loope mull and jbe (bad) pushl ror imul jb push or and in or jg or cmp gs loop aam inc repnz addr16 ljmp xor cmp sbb pusha xor jb sbb das js outsl mov adc or inc dec lock mov mov (bad) pushl out and inc fildll fimull (bad) ljmp lods cmpsb mov pop push mov lods loope aam mov or nop lods or movsb decl inc mov jb xchg inc cmp xor imul gs fnstsw mov pushl fisttpl in int3 idiv inc (bad) push adc repz sbb (bad) cltd and lahf mov lcall test rcll mov adc sbbl mov idivb icebp mov dec dec push and lods fldt xor xchg inc cld or adc cltd iret pusha inc scas (bad) (bad) call pop jmp push out mov mov scas mov (bad) mov call loopne push gs cmpl push out ret (bad) jl clc sub push rol mov hlt fwait mov (bad) fisttpl das jecxz mov mov rorb mov pop in aad cmc ret arpl movsl sub decl mov jnp je jbe (bad) ljmp outsl fist dec and mov cmp movups sbb scas jle clc ret sar (bad) (bad) mov ret mov shrl and (bad) ljmp test (bad) jmp scas jae mov icebp fs in jmp ja js in in mov (bad) (bad) ljmp lret xor xchg dec xor pop or call shl add push mov fsubrp loopne xchg sub xlat jp lahf sbb pop mov add lock loope mov (bad) (bad) pushl mov fisubrl xor pop ss fwait iret mov sbb das lcall xchg ss or cmp clc adc repz push cmc (bad) (bad) in jge mov movsl int3 xchg mov std mov iret sahf or (bad) (bad) decl mov inc pop es push lock lds outsl push ss hlt fidivrl dec fwait dec data16 (bad) (bad) mov in shlb (bad) pop stos mov pop and out sbb hlt call scas adc pop mov and lds (bad) (bad) fild enter pusha (bad) cmp push loopne pop sbb (bad) cld push (bad) jg dec movsb jg cmp dec mov jmp xor ficompl pushf adc int movsl lods or push sbb in stc dec loopne add shlb cmc pop pop fs lock icebp push mov jge (bad) mov mov inc jl xor jecxz shrl fs shrl jg in arpl out mov pop fucompp mov and lahf jne xchg scas sbb aad jg jmp shl andb xchg push gs insl pop adc pop xor jg ljmp adc imul (bad) test imul pop sahf xor bound pop mov jns enter sbb sbb lock pop push push cli (bad) (bad) or jle (bad) cltd test push fild lcall mov loopne int3 addl mov or (bad) jmp aas scas clc daa cltd xchg (bad) xor jns jnp jp mov mov (bad) (bad) ljmp incb pop sbb lahf ret pop sub and pop imul imul push jmp popf add (bad) jl add daa in (bad) mov test dec ds mov (bad) cli sbb jno mov ret les loopne sbb fsts (bad) call xor (bad) fnstenv sahf (bad) (bad) (bad) mov dec or fbld (bad) mov outsl test mov (bad) cmc aaa cmpl pushl cli dec jb xchg mov jle dec addl icebp (bad) mov cmpsb insl iret std jnp pop jge sub test xor shrb rorl pop cs jg jmp cmp inc mov out mov cld mov pop lock sub xchg (bad) ljmp out loopw outsb lret xor inc mov xchg ret and pusha aaa mov cltd loop fldenv pop lods clc add mov or decl inc dec pop or cld pop scas jmp and (bad) ljmp add popa jp enter orb (bad) bnd jecxz mov cmc cmp (bad) movsb shrl loope mov negb cld movsb mov jnp orl pushl aam adc dec xlat mov mov pop ja mov add mov jmp adc (bad) (bad) cmp in pushf xchg shl stos or adc xor jnp xlat enter (bad) (bad) mov gs push sub aad fimull (bad) loope lock insb lods (bad) ljmp lods pop clc (bad) dec and out mov dec xchg loop xchg divl or add cmp add or xor into jg decb ljmp mov loopne push push shrb movsb xor jo sub mov adc divb int aad fimull pushf stos stc jl lock aas std pop mov push (bad) loope js pop test jge cmp (bad) pushl pop adc mov mov pop add jnp std (bad) (bad) (bad) fcmovu jg loope mov int3 xor leave push dec divl lods popf pushf jns div ja jle jl ljmp clc pop (bad) insb mov outsl or dec call mov mov std (bad) (bad) jg mov push mov sub stos pop sti lds xchg push jl push or lock aas in imul sbb inc (bad) sbb push mov jge dec popf addr16 gs dec inc mov insl ret push repnz xchg mov push cld jmp mov (bad) idivl push lods cld inc adc lret sahf stos jno inc enter das in lods cvtpi2ps jle inc in imul ret adc outsl jg (bad) (bad) ficoml outsb sub dec inc stc sub je sub xor xor popf (bad) (bad) (bad) (bad) mov sub push xchg add and pop add ljmp lea xor mov sbb pop pop lock ljmp mov lods jae mov add mov ss xchg cld jmp ret nop push loopne int adc ret loop test mov (bad) (bad) jg inc or dec lods imul test shl or xchg mov cltd sti cmp xchg faddl jg (bad) (bad) (bad) (bad) clc inc adc fcmovnbe je loope cmp sub repz cltd xchg imul aam mov (bad) (bad) call xchg insb arpl xchg imul jle dec pop enter adc jle cld adc (bad) lock loope mov (bad) jg cld sub aam xchg pushf lcall inc jmp call mov and pop inc sub in stos das mov bound push aaa sub pop insl adc add lods insl es loop int adc or jmp imull sub lea xlat repz (bad) add push push lahf fist pop (bad) ja dec (bad) cwtl rcll xor gs loopne ljmp and jbe scas popa andl repz push mov push pop enter sub stos lea mov mov lcall cmc scas xchg adc ds mov ret pop xlat (bad) call js in je fistpll xchg push push inc into out mov fs jae mov sub jl pop mov mov push std sbb or or jge dec xchg stc xchg ljmp or add daa testl jl (bad) dec daa cld decl mov inc outsl (bad) mov mov les (bad) fdivp lds sub int3 push shll repnz call into pop add pop icebp cli inc icebp or push ds ljmp sbb (bad) jecxz shr inc sbb iret and into in fstps cmp push adc pop adc stos inc mov mov dec scas or arpl ljmp sbb leave adc daa jge lcall mulb xchg movsb imul mov lahf in imul inc (bad) (bad) (bad) (bad) mov imul repz mov add jecxz sbb xlat testb pop call cmpsb aas sbb clc mov ret mov pop (bad) mov stos push les adc mov push mov lock (bad) jmp mov js call clc sub in (bad) icebp test push movsl fadd das ss movsl mov test and sub or notl xchg cmp (bad) ljmp adc (bad) pop clc inc ret jle lock cmpl jg ljmp in dec es mov cld nop inc and pop es call mov push ds int sarl pop push cmpsl outsl cli mov xlat mov out in xchg mov xorps (bad) repz mov in xlat cld jle (bad) (bad) out push inc fninit inc jnp test cmp cmpsl fnstcw lcall mov xchg inc stos pushf cld ret (bad) enter imul jle (bad) pop mov (bad) incl pop les push pop xchg pop lock test mov xchg pop jo in pop (bad) (bad) decl cs les and dec in sti cmp xchg fcomip (bad) ljmp arpl mov fwait test xor rorb out jb cld mov inc data16 int outsb (bad) push mov mov (bad) pushl in jo mov inc lds mov pop ds ret sub xchg mov xchg jge shrl sbb lods dec scas popf test inc movsb mov sti cli jle mov ret (bad) (bad) pushl scas lcall ret cmp cmpsl (bad) fdivr aaa rcrl jg mov lock (bad) dec push daa (bad) cmc or loopne andb add push sub daa adc incl test or cs (bad) (bad) aas adc ljmp push inc insb (bad) psubusb hlt lea in lods jg (bad) (bad) jns insl add xlat pop mov out (bad) jb pop xchg shr adcl fimul lock mov sti pop imul fnop ss (bad) pop cmp cmp pusha mov jecxz mov bound pop cld adc jl mov addr16 adc pop lcall push rclb cli pushl loop inc dec popf rorb lods add and dec sub (bad) (bad) call scas in stos rcr mov cwtl push lods add icebp mov imul pushl push fs clc and (bad) dec lock lea push jle aam fdivp (bad) ljmp fmull sub sbb stc push inc stos ss fwait sbb addr16 adc (bad) call jmp fildl loope xchg lods cld gs cmpsb shr lds fild outsl (bad) lcall lret add fucomp popf mov mov cmp jle ljmp xchg rolb cmpsl leave jne pop add (bad) cs (bad) jb pop mov sub mov cmp test inc ret add bound cmc mov stos ljmp pop push into adc iret fisubrl (bad) lcall stos fucomp data16 shl ficompl xchg jp mov outsl push clc (bad) out sar (bad) (bad) (bad) cld outsl loopne inc dec add push mov lahf jge jb mov mov push push enter add out mov sbb clc pop sahf and movsb clc das std xor ret push movsl sub (bad) lcall fidiv pushf mov ret jo jge popa cld ss jae cld push xchg (bad) (bad) std movsl cmp mov xchg loope es insb fsubrs sub lods and (bad) incl and je or stc aam dec scas sti loopne out rcrl das in add (bad) push lock dec icebp movsb sub mov jae cmc cmp loope fisttp bound or jo xor insl cmp xor dec fstl jg ljmp inc jecxz sub ljmp int3 mov iret (bad) lcall clc mov or mov (bad) fcomip dec jb adc pop scas es es fsub pusha mov pusha (bad) pop leave adc ret loopne jns aas or mov (bad) (bad) decl dec lea es das pusha sbb push and pop (bad) aas (bad) incl loope jl fmul test adc sub imul (bad) jmp pop pop aaa xor or jo or iret (bad) sub ljmp xor jle cld dec mov hlt xlat sbb repz cmpsb ljmp pop loopne fmull lea clc (bad) (bad) jmp fnstsw aas popa dec sub loope mov fs stos push xchg xchg insb dec push clc incl adcb mov into leave and inc mov notb (bad) (bad) pop (bad) (bad) call adc inc clc jnp sub jnp,pn inc sbb cmc push (bad) dec testb (bad) in xchg xor js daa push inc lock xchg out lret mov mov cmp pop xchg push push push or push jno (bad) (bad) ljmp sbb jecxz adc mov pop jmp push adc lods mov cli clc dec ljmp test jno loope decl mov movsl mov lea rclb cld pop (bad) xor dec inc movsb mov aaa std lcall idivl (bad) xor pop in cmp or dec mov xlat add sbb xor hlt push mov mov push sub lock lock incl jmp jbe stos insl cmp mov (bad) xor decl jo mov icebp sub mov jg in mov imul clc (bad) (bad) pushl sub xchg out dec jle mov sbb clc lahf decb repnz negb mov (bad) jg jl inc mov in and out outsb ja cmpsl add outsl and std push das push mov insb cmp xor pop inc (bad) jg inc fldl testl inc aam sub add jle repz mov addb push out (bad) (bad) (bad) call ljmp retw out ret ret mov sub icebp xchg cmp push popa mov jle,pt cmp mov cmc pop mov mov pop aad fnop hlt mov pop xchg xchg rcrb clc daa pop movsl or (bad) aas sub clc mov xchg (bad) (bad) jg ljmp dec pusha cmp cmc out jge lock or out add out (bad) pop icebp push mov cmp ljmp mov cmp (bad) incl jb push add sbb mov sub fisub ret (bad) (bad) call dec pusha push ror dec xlat test adc (bad) jbe push cmp scas jl aad negb jmp xlat inc shr mov mov out adc stos xchg push loop orl imul jp sub es ud2 inc mov loop into dec xchg push pop aad inc loop out icebp das mov icebp (bad) jmp nop sbb mov lock mov xchg mov (bad) jg xlat push ss mov pop dec adc dec push xchg stc ljmp lock adc out cld adc loopne (bad) repnz pop pop cld and pop mov (bad) (bad) (bad) call hlt pop jne ljmp andl or sahf dec das xchg inc and in ljmp (bad) outsl fmuls mov clc jecxz adc in sbb adc cwtl repz ljmp test clc sub lock imulb aaa lock (bad) mov orb int sbb movsb jae pop (bad) sub dec xor xor sub aaa cld cwtl bnd jl add xchg xchg pop fild ja adc (bad) (bad) cmp xor jno push jno mov scas out fild adc fisttp cmpl pop mov popl cmp je mov xorl (bad) inc outsb jns cmp inc mov mov mov (bad) (bad) mov mov mov loope popa mov lcall pushl inc pop cmc jnp outsl xchg ja pop std mov (bad) xchg inc push xor aaa (bad) (bad) (bad) (bad) ljmp pop mov dec fisubr aad inc jae sub push stos and mov sbb fs ljmp icebp jl cli xor ss cli sahf xchg sbb mov jmp sub dec jae xor dec push dec in scas mov pop mov sahf and call cmpsb jl lock std ds or pop fimul mov inc adc idiv pop insl dec cmpsb push pusha cli inc rcrl iret (bad) cmc popf pop (bad) (bad) (bad) decl paddsw sbb mov jle push (bad) inc mov dec imulb ret sub dec (bad) (bad) incl dec sub scas (bad) loope (bad) jg aaa pop icebp pop in mov cmpsb (bad) (bad) (bad) ljmp sbb xchg aam divb push jno inc out daa and push lret aaa lret pop (bad) sbb fwait mov rclb hlt xchg sub mov ljmp mov ljmp mov dec (bad) push mov xchg pop (bad) (bad) (bad) call dec jg fnstsw xchg mov gs loop aas (bad) jg pop ljmp or pop push aas sub neg ret aaa cld jmp inc cmp jno popa pushf jnp in cmp xchg pop clc mov (bad) (bad) jg pop mov aas outsl add repz (bad) imul mov cmp mov (bad) (bad) fildll outsl (bad) scas das cmp std lahf arpl xchg leave outsb mov pop in bnd push add (bad) ja in data16 dec jge insb test cmpsb (bad) frstor decl icebp icebp repnz mov push xchg daa add xor lret (bad) (bad) decl call lds gs lds mov sub mov std (bad) incl sub mov cwtl clc xlat decb aas icebp mov addr16 decl lcall add sub and xchg add fwait jl add jecxz (bad) (bad) sti cmp sbb popf lock clc xchg cmpsl fistpll cmp fadds push or add (bad) (bad) (bad) out daa fdiv sub pminub in xchg lock dec mov popf ss cli (bad) jg cltd insb lcall mov xchg repnz add inc pop and sbb dec push mov sbb sbb xor fisubr or cmc push ljmp add push jmp mov lods scas lret std call fidiv push call lcall add push js (bad) jmp je int lods outsl and fisttpl ret (bad) (bad) (bad) dec jns or dec add xchg jne inc (bad) fmuls (bad) imul (bad) jg fild (bad) je movsb lea in or push rcr orl lods xor daa mov icebp and jp and sarl loope fcomp dec fistl sarb mov fwait sbb or aam lahf mov jl loop stos pusha add stos loope inc xlat dec (bad) (bad) (bad) cmp mov icebp mov xchg pop cmp xchg (bad) (bad) (bad) lcall adc lods cld stc push xor adc (bad) sub lock movsb aad inc xor push mov xchg mov outsb mov pop test lock inc mov adc jbe mov (bad) jnp lock pushl jne mov and and call jmp jg (bad) lcall jno and cmp mov mov push sbb pop sub lahf popa in mov push out xor push or lcall adc push push sbb mov ljmp mov add pop loop ret int loop ret out (bad) sbb aad stc sbb xchg cmp insb call or (bad) (bad) (bad) inc jnp xor imul jne int push aam mov insb mov pop shl jg idivl aad ds jnp xchg clc fistpl aad cmp or pop xchg mov add inc dec insl inc pop in mov pop hlt (bad) clc mov lods out sub lds mov (bad) jg mov pop movsl xchg daa mov xchg fildll fdivrl insl loopne xlat push sarl (bad) (bad) sti arpl data16 mov je pop xchg into sbb mov (bad) mov dec xchg lcall cld call insl repnz push sbbl or rcrl adc (bad) lcall xchg mov (bad) xchg jle and or mov das repz push mov mov out pop xchg pop gs fs mov insl mov std (bad) mov mov add call pop cmpsb je pop rol ret ljmp jg aad (bad) cmp outsl test pop or mov mov cmp cmc pushl std jae add lahf adc mov lcall mov (bad) (bad) fbstp (bad) or jns sbb pop dec fadds and pusha jbe jge (bad) xor cld decl lds in shr xor xor gs inc jbe pushf xchg scas mov stos gs repnz (bad) incl jo fild popa lock push mov mov cwtl imul jg (bad) push inc fs sahf dec add lret loope (bad) pop sahf sahf pushf push stos lods ficompl cmc call mov xchg sti sbb cltd out cmp ffreep pop or mov push push (bad) call and (bad) je xor lcall lret out (bad) mov orl out jge rcrb pop icebp call mov arpl mov xchg (bad) ljmp clc std fsub in pop gs sbb cli pavgw les aam push mov pop sub push xor jb les (bad) (bad) (bad) decl sbb mov outsl and test or mov adc cld add stos (bad) mov xlat xor inc mov fsubl (bad) (bad) dec fxch adc (bad) incl sbbl imul stos lds rcrl pushf xor mov inc jmp jg jbe fisubr aam pop cld pop jo push (bad) iret lret and mov (bad) ljmp (bad) hlt lahf (bad) ficompl mov inc jno (bad) (bad) (bad) jmp cmp nop in jae xchg lahf insb push pop sbb fsubr cltd repnz fistl mov mov jecxz movsl add jae dec pop clc mov out je cli gs dec mov (bad) lret mov out ljmp int add les (bad) outsl sbb loope mov pop test xchg jmp mov in das hlt divb jo xchg push sbb or ffree daa incl adc pop sbb lahf ret mov outsl arpl jmp sub shrb (bad) (bad) (bad) cmp test ja sti fstpt test (bad) adc mov sub or jmp add cltd ret jbe (bad) (bad) (bad) mov mov outsb iret icebp mov xchg push jbe push aad (bad) addr16 lock (bad) sbb (bad) (bad) ljmp mov imul pop adc ljmp sti add sub (bad) (bad) (bad) jmp xor les cld pop icebp add addr16 xchg stos fucomi jmp ljmp adc add sbb fld add (bad) clc (bad) dec mov jl loop cmp jns shll int3 cmpsl adc outsb pusha inc jno insl call loopne jle push mov and lret mov icebp push (bad) (bad) (bad) incl lods sbb out and push pusha lahf xor sbb aas pop mov les adc mov cli insb push sbb (bad) jmp sbb dec data16 inc fwait lds cmp (bad) xor aaa push mov (bad) lcall ret nop adc jmp xlat sarb decl cmp movsl pop pop (bad) icebp call fildll aaa sbb jmp testl xor pop and jg cld push imul je pop std (bad) out mov push js jno in adc fadds sbb or push iret or std mov loop fs pop (bad) (bad) dec aad icebp inc mov fisubrl xor xchg push push das js (bad) mov jle pop or ja mov mov xchg xlat cmp ljmp push mov lret mov enter pusha lret (bad) (bad) fild cmpsb call fdivrp aas dec mov fldl (bad) mov xchg fs aaa arpl out repz clc mov cld adc ret dec aam in pop insl jne std (bad) (bad) call xchg xor ds ficomp jo pop dec mov cltd pop das pop rclb push aaa dec rol jb data16 mov xlat (bad) out cld aas xchg repnz (bad) mov aas fisubl push dec (bad) in (bad) (bad) mov cmpsl mov sub lods fidivrl xchg xor in jae test (bad) (bad) ljmp dec lahf push sti sti push jl std cltd jl aaa mov hlt mov pushl jbe in xorb popf into dec sbb pop xor icebp jg or ret mov jle pop and repnz pop xchg sbb mov imul addl cmpsb add sti push jl mov lcall or es stos cmp outsl fs je inc fldl add push xchg sbb pushf mov pop mov gs fcomip call icebp test xor jae ja push out inc and pop iret dec jne sub cmp (bad) mov mov (bad) fdivrs mov (bad) cmp ficomp mov jbe rcll xabort (bad) ljmp mov add and loop mov dec mov sub das sbb dec cmp cli xor cld js aam pop xchg cmpb out mov pop js (bad) dec stc mov jle xchg es mov sti call lcall inc dec rclb std add cmp gs fcomps pop lock fs pop xchg js test arpl (bad) (bad) pushl inc cmpsb sub xchg mov shl aam push pusha scas lcall fstp push ja dec loop cmc outsb in mov add (bad) incl paddsw test jae fimul shrl sub fcom ss mov xlat (bad) lcall sub pop cmc jb push add hlt inc mov mov jmp imulb xor fdivrl loope inc mov sub lret cltd cs mov push dec pop ret and xor mov or add into pop fstpt loopne jg dec fucomi fistpl aad pop jns dec das (bad) (bad) (bad) inc jp scas loop push jmp mov enter xor adc or fnstsw stos and aas mov (bad) dec xchg sub (bad) aaa sbb test movsw (bad) ljmp pop (bad) and int dec jno inc test add lock out (bad) xor movsb mov jne pop mov ss int ljmp pop mov mov rcr cmp push std out push xor xlat xor (bad) (bad) (bad) jmp mov scas lods mov repnz ret xchg jg pop xorl jmp jmp fisub aam enter popa sub jp jl mov (bad) jmp in cld or ffreep push xor (bad) je xor cli pop imul mov arpl inc xor loope test pushl xor cwtl into xchg mov mov stc lea jo enter or mov push add ds adc cmp sar lds aam mov scas ljmp lea sar aaa inc cmp adc lods mov push inc loope,pn mov (bad) lock jb pop dec sub sbb xor sbb jbe mov lock iret fcmove mulb (bad) (bad) (bad) mov movb push sbb and cmp sub movsl jp daa lret pop push (bad) (bad) (bad) pushl xchg ljmp popa jnp dec das out outsl cld lcall sti adc loopne and (bad) decl fbstp and (bad) stc movsb xchg fnsetpm(287 nop pop mov xor call add jmp jmp (bad) divb mov insl (bad) cli (bad) jg lods movsb pop sti mov push das incb lahf ret les sar inc clc (bad) dec add ret in push pop mov out (bad) xor pop loopne lcallw test push popl pop cli lcall jp scas scas pop jns jae xchg cmp inc sahf and sub ljmp jmp aam iret stc lahf out stc fdiv jno cmp (bad) jg push cmp aad (bad) je push fildll fisttpll mov mov test jmp je inc imul lock mov jg mov mov (bad) xor leave sar cmp pop pop push pop adc pop dec mov fldenv pop (bad) (bad) incl push adc pop dec jecxz in in test mov xchg lods pushl aaa aad call cli jns std loop fwait (bad) (bad) (bad) (bad) cld xor repz shll cmp cmpsl les shll (bad) push xchg sahf in (bad) (bad) (bad) decl mov (bad) (bad) adc mov out stos in (bad) xchg and fstpl add pop jmp xchg push nop jg xlat push repnz jecxz jle ja push lahf mov ret sbb loope jnp call test decl mov scas jl lock mov das or xchg pop jne xchg movsb (bad) mov adc pop into imulb lret (bad) (bad) call sub push mov insl sub jbe push in rcrb (bad) sub mov mov lock mov lock scas (bad) (bad) (bad) (bad) out in lock fsubl fnstcw je mov jbe call fcompl (bad) lcall mov or pop or mov or scas mov outsb sbb (bad) stos lock lcall pop lods jle inc pop mov in sub mov pop xchg inc cwtl mov (bad) (bad) lcall mov sub aam push cmp xchg in xchg sub arpl mov (bad) pushl and sbb cmp xadd ret hlt jno jmp out cli loopne sub jne popa icebp pop stc push mov dec push fstp dec xor test fiaddl aam jle cmpsb push add cmp addr16 (bad) (bad) (bad) decl jnp push sahf sub push cmpsl pop and cmp or pop sbb xor or inc clc xlat test loope les out loop (bad) (bad) decl outsl loop je and (bad) fcmovne lcall push clc aas cmp rol xor (bad) mov sti ja js add insb imul jle imul dec (bad) jl jno leave imul in les push enter mov movq (bad) mov sub (bad) (bad) jmp call imull bound cs in sti btc inc jle aaa xor dec std scas push outsb jmp divb leave and (bad) jg jo mov ljmp std xchg jle dec (bad) ljmp adc clc stos lods (bad) aad adc or cli ljmp cmp aam lret das int ds sbb aam fcomip call clc dec scas (bad) pop sbb push stos pop push mov clc (bad) jmp lods push xchg fcompl inc mov mov inc add data16 mov sbb sbb jl sbb xor fwait sti (bad) lcall dec fistl mov outsl push fcomps pop pop arpl in mov dec and jb mov (bad) (bad) (bad) jp pop jnp lret insl incb iret sahf adc mov dec push mov stos inc movsb (bad) (bad) lcall out ret jae inc sbb cwtl jmp mov lock (bad) out and test rcr mov sub shl mov sti mov cmpsl jl push cmp mov sub mov jo aas mov rcll cmp jnp out cmpl sbb mov mov xor push insl xor pop and aad mov add cld jg jg outsl cmp loope aad xchg repnz lret xchg and dec push cmp cmp cmp das lock jg cmp pop ret sarl xchg or dec das out sbb sar pop aam mov leave out pop sti dec shrb and fnstsw sahf sub cmp and pushf mov sub mov pop dec jae repz mov shrb jmp sub and xor out mov cmp mov cmpsb (bad) ljmp adc dec dec dec shl sub xor bnd mov add xor cmp (bad) incl push xchg sbb shrb push mov repz repz shr jne jmp movsb mov mov mov bound mov (bad) jg lret add lock popl xchg mov lea ljmp ljmp mov enter inc out in add sarb aas (bad) (bad) (bad) push dec imul int mov lahf loope arpl push repz mov lret jle lods pop fcompl addr16 dec pop icebp call cmp imulb mov or nop loopne jecxz cli lcall mov mov stos cmc fstpt sub sti ljmp or jae fwait in movsb mov sub faddl or xchg pop add sub sarb loop (bad) cmp (bad) or imul loope add and pop hlt (bad) pushl mov std pusha scas int3 pop fcmove decb icebp jecxz xchg js add dec loopne decl inc dec dec sarb xchg leave cmpsb mov (bad) (bad) fbld adc bound (bad) iret sub popf sub mov mov (bad) loop jmp cmp mov fcoms movsb push data16 ss fcmovu jmp mov mov stos testl cld add movsb ljmp (bad) (bad) decl sarl mov xchg fcomip push xchg inc sbb into dec cld (bad) (bad) (bad) cmp lret les scas mov cld daa xchg jns sub jns ja mov stc mov aaa std pop push sar js loopne xchg cs sbb mov xor push sbb (bad) cmp faddl sub cltd mov loop insl pop fs push ret add (bad) add fwait (bad) imull (bad) (bad) call mov daa xor dec sti test arpl add mov gs mov insl into push mov xchg imul lret jmp outsb in ja xchg add lcall pushf ds xor jge (bad) out push call addr16 lods adc pop inc or fstp mov adc mov in (bad) dec mov cmpb mov lods aas sub cwtl add ret dec mov lret lock push mov icebp (bad) decl fwait or lods enter leave add ret add jo jp clc imul ffreep inc pop fwait push shlb lock stos push andl (bad) int (bad) (bad) (bad) dec add lret sbb adc leave and sbb lcall xorl or out adc add add mov fs lcall cmp (bad) jg jmp std push ljmp xchg dec sbb aad mov sub aaa outsb push popa xchg lds sbb fstpt sub cmpsl outsl (bad) jle sbb ljmp adc addr16 icebp scas xchg (bad) in pop int3 popa xor xor (bad) (bad) pushl enter mov and clc xor fistl aad das es int3 inc aam fistpll dec ljmp pop xlat in scas adcb lds faddp adc and ljmp lods cmp mov xor add (bad) (bad) (bad) (bad) cmp lock int mov xor repnz or lods stos cs scas mov mov decl js xchg cld adc adc cmpsb fcmove arpl mov or sar pushl xchg mov ss or stc add mov gs jecxz push cli pop or (bad) lcall mov xchg jns mov jno gs outsb mov inc incb (bad) (bad) (bad) (bad) jg (bad) mov mov fildll cmc jmp clc push ficomp outsb xchg inc (bad) mov inc and cmp inc inc xchg pop pop lret push or test pusha mov dec add sbb pushf sub inc ficomp mov xor popf ss cwtl cmp (bad) xchg pop or (bad) lcall adc roll xchg fbstp ja pushf push pop sub dec ds inc xchg mov mov fistpll push mov leave mov and das adc stos jp in add imul daa pop std pushf xor add push dec push xchg fwait lret addr16 add icebp mov scas push stos rorb js ret into pop jb lds or ret inc stos pop push (bad) (bad) (bad) incl xor fsubrl xor lea inc in test js sub (bad) (bad) (bad) in jg mov mov gs dec push lods and jb xlat xchg roll xlat shl call xchg lock in (bad) lock inc outsb (bad) (bad) (bad) call cmp test test mov rclb js shr movsl push loop imul ljmp adc aaa mov or clc aas dec mov push lods mov arpl (bad) inc lahf mov ret (bad) fldt ds lea fldl xchg stos imul (bad) (bad) incl push shl cmp cmpsl dec aam mov lods jp push jp xchg xor xor mov pop pusha and adc mov push push jle hlt dec sbb (bad) lcall aam sbb nop mov cs cld stos sarl outsl int3 (bad) xor out (bad) (bad) incl loop lds jno in pop mov pushf ret ja (bad) repz (bad) (bad) ljmp stos scas adc loopne xor hlt scas lea mov ds mov ljmp fldcw xchg pop hlt cmp lds push jo add and cltd cmp aas pop adc das sarb dec jl sti or (bad) (bad) mov in fisubr push pop mov fmulp loopne fmull xchg pop (bad) pop nop aas clc add cli stc pop push dec cltd fcmovb das fcomip aaa lds (bad) adc mov push pop std jo (bad) decl adc or xor jae mov pop aam mov sub shrl sub ficompl push cs jno jmp (bad) mov fbld add decl xchg or pop notb dec jecxz fnstcw ret push push cs jbe or sarb cmpsb jecxz mov adc scas loopne pop lock gs (bad) mov std sahf cmp jno pop push sbb fstl (bad) (bad) jg pop enter mul xchg faddl (bad) jge inc insb cmp sti fyl2x fbld jge loope xchg pop in push lds cs dec sub pop hlt fcmovu jno cmpsb dec js les jmp mov (bad) (bad) (bad) fimul imul loope inc jg mov cld lods jns lret sub outsl or pop (bad) movsb lock (bad) incl xor out lods push cmp dec sub xor dec adc andl jecxz pop mov (bad) incl pop mov mov in loopew test push (bad) (bad) pushl int3 mov in mov (bad) les ljmp mov jle clc adc jnp enter (bad) (bad) cmp int inc (bad) out sub add pop clc sbb mov scas cmc call fcom arpl int3 mov fcoml sub jge outsb push jl adc std ja add test mov js lret aam cld insl (bad) ljmp and cmp dec psadbw movb jmp jbe push push xchg jecxz and fistpl divl scas mov mov dec jg scas in or push fsts ljmp sub sarb add stc (bad) jle or addb test jl ljmp hlt mov sub and sbb cmp jae cmpsb xchg insl pop hlt and mov adc xor ficom jae push stos sbb ljmp fld js idivb xchg push call pop sub jg fs fisttpll ljmp push inc mov sub and jmp fisttp mov ljmp jl (bad) hlt fwait mov cmp dec negb push or jo mov jo mov pushf rclb pop ds push (bad) (bad) (bad) (bad) fldt or sbb inc lea loop loopne fisttpll gs stc add inc cld pushl and (bad) std xchg jl fs jle and pushl sub mov adc orl (bad) int3 add push (bad) (bad) (bad) jmp fcom int3 arpl fwait jnp cs cmc fstpt stc mov subl xchg icebp sub gs loop ror xor add (bad) fucomip sub lahf fxtract pop jbe inc stos dec adc aam icebp scas cmp push and or icebp sbb jmp push mov cld or nop ss xchg dec push push xchg push and ds jns xor pop (bad) mov ret sub mov mov sub sub incl pop mov test data16 dec and (bad) lcall and cmpsl cmc (bad) mov mov unpckhps pop xchg pushf insb cmpsb mov sub mov imul mov popa pop dec jno xchg imul xlat (bad) cmp sbb std aaa ret std mov test jmp cli jns pop dec lock popa mov push lcall std lcall imul les push jp jns std decl add or mov add pop (bad) xchg dec mov mov (bad) (bad) inc popa xor adc nop ljmp push std push jne,pt (bad) scas outsl jge imul rcr push mov push arpl sar out jno and movsl enter add insl in (bad) mov mov scas sbb pop xchg ret (bad) (bad) dec add jp mov pop imul lret (bad) pop jae rcrl (bad) std mov scas cmp (bad) in (bad) out into sbb cli icebp movsb cmp sarb sub adc add pusha add loop repz shrb imul sbb mov outsl out ret fstpl push decl repz inc mov ret fildll ljmp jnp sbb scas cli jg outsl sub enter sar mov daa mov jbe ja fdivr call push loopne cmc jl cmp and mov mov mov xchg dec (bad) (bad) mov mov or sbb add aas cmp cld add inc in mov xor dec xlat push cltd push mov xchg push add push iret jne fmul jo xchg sahf mov cmc rcl jg (bad) (bad) (bad) (bad) (bad) jle dec cltd std in punpckhwd negb pop test mov arpl and jns lret (bad) in jecxz mov insl xlat (bad) cld dec push mov ret ja dec and cmpsb fcmovu inc cmp jnp jecxz in loopne popf mov into (bad) call data16 mov cli pop sbb (bad) repnz into (bad) (bad) (bad) (bad) jnp (bad) repz mov and sub and cmp xor arpl insl jb inc ja mov sbb and and mov imull (bad) decl sbb mov dec mov incb out mov aaa (bad) lock (bad) (bad) (bad) incl jmp jecxz movsl fwait dec mov mov xor xor mov mov (bad) call cli sti cmp add iret (bad) fiaddl add out fs sti imul outsl xor insb insl popa lea into sub orl loop lcall add test ljmp sbb arpl sub mov ja (bad) mov inc jae xor (bad) add mov pop test mov (bad) mov stos pop cmp pop fmul lret sbb in es bound xchg jecxz test clc (bad) mov sub cmp movsl cmp jge pusha imul jg clc mov (bad) aas mov test mov mov ja xchg xchg dec and lcall sbb sbb and push xchg int3 pop pusha or fldcw xchg add or xchg std adc pop je icebp push cld mov cld gs iret xchg cmc sti jg ljmp out clc inc mov push test (bad) in push repnz and leave mov mov aad jnp (bad) (bad) (bad) out (bad) pop cmc xchg lea mov sti dec (bad) jne mov lea fwait xchg dec (bad) jg mov sbb mov call xchg hlt outsl (bad) (bad) (bad) ljmp out pop xchg sbb aam lahf xor fwait lods ss std out pop inc (bad) call pop add out popf push jecxz (bad) mov xor lcall decl insb stos or xchg jl xchg pop push push mov jmp adc and (bad) leave and nop inc pop out push repnz cmpsb mov das dec std pushf jle clc mov push push shrl dec scas or adc inc (bad) xor sub (bad) decl xchg pop and (bad) loope mov loope mov (bad) (bad) pushl adc fcoms and or bound (bad) pop clc lcall dec cmpsl dec push dec jmp sti scas clc push jne scas pop inc fwait sub das inc movsl sbb push lods fdivrp incl lods imul scas xchg dec jl popl (bad) (bad) call lods cmp mov insb cmc and vmwrite loopne mov dec in mov (bad) mov or lcall (bad) (bad) (bad) (bad) incl test push lretw imul mov push push mov dec sbb ljmp fisttp dec idiv xor movsl mov outsl cli decl clc (bad) cli inc or mov inc cmp ja inc or jbe (bad) jle scas clc lcall fcomp clc mov lock fwait insb mov (bad) ljmp enter cmp fiaddl lods loope lcall (bad) (bad) (bad) fidivr mov sbb movsb xchg xchg fs xchg ret jge mov sub lcall js loopne (bad) dec mov jl cmpsb jmp jb gs add in daa pop fsub mov loop adc ret outsb icebp add add lahf mov cmp cmc scas in cli inc (bad) decl (bad) icebp jg jne cld daa fiadd mov mov movsl mov loop (bad) (bad) out push mov int3 xchg (bad) dec nop fs sbb and loop mov mov data16 and out fsubrp xor xor jecxz aaa and dec clc mov inc ds jge int ja mov xor stc xor jns cld mov ja int3 std dec jo jg adc cmp aam pop (bad) push decl aaa movsb xlat jo sahf es inc bound inc mov sub decb lock nop fs call lock and incl cmpsl push aad rolb cs insl out jb (bad) mov jo loopne push mov adc xchg (bad) jg cmp in add test mov call stos rorb jecxz lret nop xchg jno loop loopne mov cld pushl fist ds xchg fildl jecxz (bad) decl pop pop ljmp test mull je out int3 and and bound dec mov in pop dec mov (bad) (bad) decl ljmp mov dec in jbe insl mov fscale inc inc aaa adc add clc inc inc pop inc xor cld push jle dec lahf sbb mov fcmovu ret cmpsb clc (bad) incl (bad) cmc or push (bad) jno xor arpl mov fidiv movl push cmpsl push clc xchg icebp or adc and sti push pop mov test xchg stc pop cld (bad) pushl cmp call lds jp (bad) jne and cmp mov (bad) loopne repz sarb fcmovne jmp jecxz lcall xor mov ja rcr jbe pop and jg (bad) mov mov push sub jb mov sar loopne,pn jg outsl bndldx fldt lahf cld ds lcall (bad) icebp fdivrl insl add xor mov mov xchg imul lds pop test and out xor into (bad) (bad) (bad) jmp scas fsubr popf mov dec fisub adc rcrl repz fisttp dec inc inc clc popf jne aaa (bad) xlat sbb test (bad) (bad) call pop dec ljmp scas (bad) push push cld cltd push mov mov pop loopne outsl adc push aam sub xchg mov lcall cmp push mov lea add (bad) popf sti lahf aam cld sub pop cld sbb das nop cs push repz adc loopne (bad) jg lods dec xchg add ja les mov aaa std lret (bad) fistp cmp cmc (bad) (bad) (bad) dec mov mov cltd scas sbb ss js bound (bad) add lock jns test lret aad (bad) and inc mov push lcall mov pop xchg (bad) ljmp hlt cmp repnz fsubr adc es mov (bad) add (bad) jmp imul cwtl push mov adc sbb jmp jg sti addl add dec pop pop icebp pop in dec icebp push out lea mov jne leave test xor stc lock add ret mov (bad) (bad) ljmp (bad) aas jae or aam add aas jmp sub mov outsb add sar ja xchg mov pop ret test (bad) xlat repz cmp sub out xchg xchg dec mov cmp (bad) (bad) dec dec roll pop mov test inc and out fucomi out dec in incb imul xchg in (bad) (bad) (bad) fild push js (bad) cmp pop sbb fisttpl push insb mov insl lds nop inc (bad) pushl xor (bad) shrb jbe insb cmp hlt (bad) (bad) je cmpsl hlt lea (bad) pushl xchg xor mov ss movsl jnp jg lods scas not dec out (bad) dec das cli (bad) fucomip inc sbb lods xchg mov xchg mov dec mov xor les (bad) xor (bad) mov aam fidiv (bad) jmp xor pushf push not mov (bad) mov mov inc (bad) incl pop pusha adc xchg lcall mov aad (bad) incl mov lock jae add mov (bad) in repnz leave push mov cld icebp (bad) pusha std pushf cld or lcall call fnsave subl fildll pop in adc (bad) jo repz pop ja cmp dec arpl (bad) sti ds cmp aaa add sarb or (bad) (bad) call sub jno mov lcall vaddpd adc mov push cld sub ds mov pop mov out mov jb push mov mov xchg out mov and pushl push jmp xor jns mov ret fbstp (bad) std inc ljmp mov xchg aam sub dec jne clc (bad) push mov fmuls jbe xchg (bad) cwtl fnstcw inc (bad) inc int mov arpl ret popf jp push inc sti push pop mov (bad) fild bound (bad) mov add mov or adc fwait out mov add das clc sub jmp ficompl stos jl clc (bad) dec verr shrb aam mov leave jno pop or lahf pop add (bad) (bad) call jge ja (bad) mov sbb mov out push hlt xlat push sti cli cli imul sti (bad) (bad) (bad) (bad) cmp push jl sub fldcw sub sti push iret lock gs mov sub cmp (bad) call in out cld dec ja lods faddp loop xor inc fs ljmp inc andl les xchg jl push dec jg fiadd xor fistpll iret sbb pop xorb imul mov fstpl fsub adc pushl push push gs jg scas inc std xchg lods mov fistpl fisttp jle push icebp jge sub ja hlt int inc dec sub lea add in fcomip jmp frstor mov xlat mov out shrb incl loopne pop push repz lahf pop popf push adcl mov lock fisubr sub (bad) repnz sbb add fimull ret push lock insl add iret mov or (bad) fndisi(8087 mov sub inc push lods ficom xchg fisub daa movsl ja (bad) (bad) ljmp and or sub and (bad) je xor inc dec mov sbb cmc (bad) pushl and jns inc bnd cmp jecxz add inc push clc imul xor mov cmp jle jp cwtl mov ljmp fs and xchg and imul movl rorb cs (bad) mov in lock xchg out dec je aad mov js clc (bad) jmp xchg adc dec pop sbb aas sub xchg imul sub lcall xchg aad cmpsl insw jle sbb hlt popa dec rcrl xor fidivl cmp (bad) call hlt daa pop icebp xlat ret call cld jns dec imul stos (bad) (bad) pushl (bad) aam sub mov jl std nop mov jle lods js sti inc (bad) scas cli (bad) call lock ffree movsb ja push sub (bad) or enter mov shlb or mov mov das test pop dec les pop lds fs xor push jmp inc test movsl xchg jnp loope (bad) (bad) fisttp xor js loop ret aam jns in jo mov (bad) (bad) (bad) jge test jns inc jbe stc sbb sbb pop mov and push jg fldt std xlat in jbe lret cli adc xchg in (bad) aaa loopne mov cld and pop div ds clc inc test clc inc mov fstpl in icebp imul (bad) test or decl insb dec mov add cmp popf sub arpl cld dec cmpsl (bad) stos js pop (bad) (bad) (bad) pushl mov lret (bad) rcrl xor (bad) and scas (bad) dec icebp outsl les add pop in loop and out clc ljmp clc arpl aas inc mov mov pop dec test mov enter add fdivrp mov js (bad) dec loop dec out xor (bad) call cmpb popf or test mov pop mov dec lcall shrb xor shll scas (bad) mul jge sti (bad) jmp sub arpl lea jne add (bad) dec cmp ja dec dec mov (bad) icebp pop loop (bad) pop add enter (bad) call xor push cmp imul lret lods dec xchg insb ja shr (bad) mov mov inc mov scas test pop scas imul ffree sbb notl pop inc and sbb adc sub aas xor (bad) (bad) lcall sbb cld and loope scas jge loope jno fucomi imul int3 loopne and pushf adc mov pusha sub in lds dec jecxz clc mov scas pop xor imul sub lss (bad) jmp (bad) repnz add push out test sar (bad) cld sti jne hlt mov cmp pop mov imul xchg fstpt clc mov xchg dec out fwait dec lahf xor test std (bad) jle cld cmp mov cmp scas (bad) mov push std xchg leave add push popf pusha push syscall xchg sar push cltd sub loopne (bad) mov jecxz push jmp and cmp add xor dec outsl sub fwait sbb xor pop pushf push dec push mov push hlt outsl clc (bad) (bad) aas xchg cs sub dec ficompl jbe push ficomp aam and cmp xor (bad) (bad) call outsb gs repnz jb mov fs inc enter leave lock pop lock adc jle icebp loop in push mov push test lea loop,pn pop xchg cmp insl (bad) incl cld pop and xchg sti sahf arpl mov popf jns xchg stc das push iret daa cmp sub jmp das sbb sub jle sbb (bad) fild mov push daa shrl jg dec mov (bad) (bad) (bad) in inc insl les out cmp xlat iret clc pop pop or call aaa mov mov enter lock (bad) mov (bad) mov xchg xor int3 pop icebp (bad) call push xchg add pop in sbb fnstsw ret in mov jmp pop sbb aam cmpsl push cli push sub xchg jge (bad) call (bad) insb gs nop adc cmp mull pop ljmp mov shr lcall adc fistl sarl (bad) mov (bad) lcall xchg add loope ficoml (bad) jne lock rclb cli (bad) and shll in repz aam jne cltd sub push outsb xor clc lcall data16 or icebp mov (bad) pushl stc mov movsl cltd and dec jmp sbb xchg xchg cmp fs imul jle clc mov sbb out scas mov repnz out fildll jb inc or lret je push inc sub fcomip fucomp xchg pop (bad) push test std jne mov pop (bad) repnz pop stos ss mov mov pop push iret pop adc pop dec incb mov js dec dec bound pop inc (bad) mov mov push aad mov xor std mov aas loop pop les add (bad) adc hlt sti nop ljmp jg loope push jno lock lds dec pop ss clc (bad) out adc outsl xchg and fwait fs (bad) mov decl sahf or pusha or jne adc out movups out inc (bad) ljmp mov imul jns xorb in adc insb xchg pop std bound call clc test sub mov push xchg or and or fstp fisubrl aas xchg mov std mov (bad) jmp pop sbb fildll adc and sub xlat jb call mov and push (bad) (bad) (bad) ljmp pop bound imul cmp mov (bad) in push imul sahf (bad) popa stos hlt push cld incl ljmp xchg fist fcomip or (bad) fs push adc lcall (bad) lods and mov out mov jl (bad) cwtl jae into push in or incl mov cmpsb mov popa stos jmp and xlat (bad) lcall mov sbb adc push dec std les js out sbb clc (bad) (bad) jg test stc lods pop fisubr mov cmp mov mov mov cli jno (bad) (bad) jmp sub cmp js dec rcll inc popf cmpsl mov adc (bad) (bad) in (bad) jg push fcmove dec pop pop pop mov test pop lock outsl pop js (bad) pushl add pop scas mov cltd pop pop mov and pop jge and push leave in and push stos fwait (bad) pushl fmull sbb dec pop push imul cmp loop pop fdivl ljmp jecxz inc xchg imull sub popa and hlt fisttp cmp icebp aas lds or xchg lock fist out push jg jmp (bad) inc mov ljmp or dec sbb push mov mov lods jae (bad) push ja fist (bad) jg aad jp jp xchg outsl sbb in in out mov rol mov inc (bad) push and repnz lds xor popa shrl out ljmp xlat push jbe push inc adc pop add push push mov xchg adc pop cmp (bad) cmp push fwait (bad) ljmp out cmp jno or sub push inc (bad) (bad) (bad) incl stc movsb xor xor adc addb jmp mov ljmp stos inc xchg jo (bad) ror fnstenv out cld push fnop jg dec scas clc lods sti inc clc iret les cmp sahf fcmove pushl cld scas cmpb leave cwtd or pusha dec or xor outsl loope cmp mov lock in push mov loopne clc imul (bad) out xchg mov sarb pop sbb sub in ss arpl (bad) incl xor fbld cltd repz fmulp (bad) iret mov (bad) mov icebp ret idivb lock sub dec push mov jge push mov loope (bad) (bad) (bad) call gs aaa setl inc push flds insl sub pop mov or (bad) (bad) cmp pop dec mov int3 push mov imul stos lods (bad) (bad) decl std mov or cmpsb das mov push ljmp stos daa xchg or (bad) jmp inc fcomps and mov pop scas add push fistp pop xchg mov lahf adc clc dec icebp mul mov pop pop clc inc out mov inc imul jecxz fisub sbb cmp add and mov js mov or add mov sub nop jecxz scas int (bad) aas jecxz lods dec pop push (bad) pop lock leave cld xor cmp clc xlat cld dec loop (bad) (bad) (bad) in dec imul dec mov and mov (bad) shrb (bad) mov push adc xlat dec lret (bad) out clc inc adc test xchg sbb shr pop dec cltd pop and pop cld (bad) call out out gs mov (bad) fmulp mov fisubl clc div scas jb movsb aaa cmp dec push int loop jle sbb into add (bad) mov scas repz lods clc adc mov loope (bad) clc decl mov add ljmp addr16 mov jle imul lret xchg into enter sbb mov (bad) (bad) or (bad) (bad) lcall js sti dec sahf dec add push or xor push cli (bad) aad dec cmc les pop mov roll and and lcall or data16 test xor aaa icebp (bad) (bad) (bad) (bad) fldt fisubl (bad) out scas outsl jl and jmp divb pop mov xor cmp add rcrl jg xchg addr16 movsb mov xchg mul sti (bad) (bad) (bad) (bad) ljmp mov adc imul in out fwait mov in pop add mov decl popf dec cmp push mov xor fstpt (bad) (bad) (bad) jmp lret cmp sub push push shr and cmpsl mov shr xor xor ss push (bad) jmp xchg xchg fmulp loop xchg bound lods dec pop add sbb ss sub scas dec fdivrl les jae xchg mov mov inc int mov dec (bad) xor sub das fwait sub push inc pop (bad) mov jns (bad) dec add (bad) fcomip adc add cmp fistl jno insl xor xor xor (bad) mov sub add ja mov mov div inc cmpsl dec xchg pushf cmp dec xchg pushl loope push mov mov or mov (bad) (bad) (bad) decl sbb ljmp and pop xchg fwait inc (bad) lods and (bad) call notl (bad) push mov or stc jnp xchg sbb cmpl les inc mov xor mov ljmp js jmp nop pusha adc xchg jno adc add fbld xchg jb push paddw (bad) (bad) ljmp nop inc jno aas loope,pn add fcmovb jo cmp test add leave xor (bad) out clc aad xchg pop lods xchg iret mov cmp pop cmp neg adc pusha (bad) (bad) (bad) incl xor lret xor insb jbe mov sbb mov jmp adc cwtl jns and xchg imull data16 movl call mov pop fcomi xor xor lahf mov test adc xor out mov push mov fsubrp shl (bad) (bad) (bad) dec ret inc (bad) (bad) cmc mov fiaddl jno cmpsb or inc xchg and xor mov cld (bad) (bad) ljmp xchg mov cmp lods or out sub je jle lcall fcomip add adc sub jl jns adc call dec aas lea movsl jg int3 out je fstpt (bad) push das fldt dec xlat and inc std call sbb jb jne inc lods sub lock (bad) jg sarb in mov xchg addr16 lods add sahf jns push xor (bad) (bad) jmp lret add insb aas jl cmp inc add ret in xchg push pop sub ss (bad) inc ret jge in movsb jg hlt pop rclb js ret push mov push jmp xchg ficompl out movsb mov data16 adcb mov imul lahf out lcall xchg test sar pop jecxz sbb dec pop lds pop push (bad) (bad) call int3 jmp fistpll out mov sub xchg mov lea jns inc loop lea pusha (bad) push clc lahf sti dec pop cld je mov mov dec xor push (bad) adc sub and bound decl mov movsl jmp in stos jmp xor (bad) (bad) mov dec std (bad) lcall xchg popa xor add roll add test fistpl (bad) jg ss mov sahf mov push imul sub (bad) (bad) incl adc ss cmp lcall cld inc cmp in das push std push push xor xor xor imul dec clc xor stos outsl or jle push pop repnz scas sarb mov mov jmp or mov add popl mov sbb mov jo jo cmp icebp push push je cmp out or cmp loope jp shrb (bad) (bad) decl in ss and mov xor sbb rcll incl dec jne iret jl outsl dec mov subl (bad) repnz je cli (bad) decl sub fpatan push pusha ret cmp xchg in ja jmp (bad) (bad) call xchg pop cmc sti (bad) das adc std jle push jecxz mov data16 test adc pop sub add push int jg outsl pusha divb jge jo out and mov and iret pop (bad) (bad) jg mov mov (bad) imul jmp jmp xchg inc (bad) ljmp rolb adc or cli or xor push push pushl push scas test loopne je xchg out or cmp mov lea cmp or jmp jg push pop cmp lcall clc (bad) loop sbb pop sbb pop jb push aaa and pop jne rcrl lea push mov (bad) pop das out out aam (bad) decl mov out mov mov adc popa sti sub (bad) jecxz imul push inc clc jge in cmpsb mov fistl and (bad) ss jp add jg (bad) icebp std decl int3 fisubr shr adc sbb (bad) push inc (bad) jg sub cmp or fmuls (bad) call inc inc mov ret (bad) and aas sti cmp xorl (bad) (bad) ljmp mov jno mov (bad) inc xchg sub les or add ljmp stos lock push mov xchg push jno repz jno xchg icebp in adc adc pop sub fcoms xchg test decb lcall outsl rorb (bad) pop pop dec loopne adc and stos or (bad) (bad) mov les mov popa push mov loopne sahf cmpsb mov mov dec cld jle (bad) das lock hlt push sub mov adc pop dec mov shrb xor dec mov sbb xor dec inc jecxz scas mov sub jecxz scas mov and sar (bad) (bad) (bad) cld daa xor dec pop popa xchg jno add push out stos or sarl xor (bad) clc pop dec adc pop (bad) ljmp mov (bad) xchg out stc mov (bad) mov (bad) ljmp addr16 or shlb cmpsb mov xor xlat int (bad) jmp (bad) xchg pop fmull fisttpl arpl cld or stos mov das mov clc xchg into xchg out jp addr16 sub (bad) (bad) (bad) (bad) fxch gs add mov pop mov mov aad sub addr16 cld (bad) (bad) incl lock jno cmp dec mov icebp mov jo cmpb cmp aas add jle sar ljmp ret pop fidivrl in mov and (bad) decl fs push pop aaa pop pop std cltd cmp (bad) adc (bad) jg jg (bad) (bad) lcall loope imulb push cltd and inc dec stos sahf mov jmp enter push pop push pop cmp jg addr16 out jb popa jecxz ja push (bad) (bad) (bad) pushl int or in dec outsl xor sub and cs (bad) dec cld lcall js push jns mov mov cmpsb dec fcomip (bad) jl clc daa loop jae mov imul pop sbb push (bad) decl mov adc inc scas aas cmp test cli jge pop jg ret (bad) (bad) dec xor push fwait imul fisttpll aas mov in scas push push or lcall xchg lcall push xor in and and (bad) fs sub cld mov pop jecxz cmp push jne pop jg repnz (bad) (bad) mov xchg jecxz xor imul in aam sub enter mov clc pop mov pushl cld inc xchg out inc je insb lods sarb or out sbb jg mov aaa jl (bad) mov cmpsl lea shrb inc (bad) pop add push je (bad) mov dec mov pop fmuls mov and scas sarl xchg decl xor jmp cmp sarl dec xchg push xchg or push stos scas (bad) sbb sub movl (bad) mov pop stos push dec xchg pop ret jnp lods xor xor js lret stc add lcall push rclb inc pop push (bad) fbstp ret pop sbb jle adc jg fwait mov (bad) (bad) (bad) ljmp loop or dec icebp (bad) (bad) icebp mov aaa push mov in les xchg jne (bad) (bad) jmp xchg sbb imul mov mov jnp out mov adc (bad) pop insb lock inc (bad) (bad) ljmp adc orb and mov jae jo clc fbld in imul (bad) fisubr jno mov repnz pop shlb in mov pop xchg jmp push out aad jmp shrb adc shrl out pop lds fwait insl cmp cld arpl sub decl pop and xlat lods fs pop das push imul xor fidivl add mov insb (bad) cmpsl xchg pop mov int3 in jle mov mov dec adc push test cmc mov (bad) es decl clc push into or repnz pop test mov mov (bad) lcall in jne scas lret fnop sub sti imul (bad) lea in pop push jg cmc (bad) mov or arpl xchg insb xchg dec lods cmpsl cmp and jno idivb icebp add lahf adc fucomip aam mov dec mov fsubrl fwait dec aad ret fildll pop cmp inc xchg pop arpl sti imul cmp xchg mov jmp and loop and ret (bad) (bad) decl cs fstps add or stc imul (bad) mov test pop stos rcr (bad) sti mov jne pushl sbb add mov mov jecxz mov sbb mov js inc les int mov gs or nop mov mov (bad) mov iret ret mov dec rcrb mov push push test mov test mov rolb (bad) (bad) (bad) jl out mov in jg popf shlb jnp inc clc mov mov mov adc mov and dec mov or imul xchg fist xorb test mov mov iret ret das test ret pop rcrb cmp (bad) incl jp dec imul (bad) jne fwait cmp aad int3 sub pop cmc insb mov pusha pushf out (bad) (bad) jmp or pop stos push mov cld lods (bad) std cmp lret jae lods push mov lret ficomp dec (bad) (bad) (bad) push push iret jbe icebp xor jns mov xor lods mov push mov (bad) jmp roll (bad) jne cmp stos lock mov icebp jae jle mov pusha sbb push xchg cmp adc (bad) jb or enter dec xchg cmp loop incl test lea das in loopne xor lret jns outsl clc incl jae xor push xor jo sbb decb or (bad) (bad) pushl iret or xchg scas test out mov in add outsb push arpl xchg xchg sbbl pop js in cld pop sarl incl mov xchg stos dec loop mov jmp push (bad) mov mov daa xor stos xor inc sbb test clc (bad) lcall roll std pushf pop scas mov mov fist call jp int mov push (bad) stos xor sbb and mov dec or or les sbb cmpsb pushl sbb scas ss aam cmc jge (bad) dec mov decl imul cmpsl xor xchg inc popf or xor pand sub dec stos (bad) (bad) dec (bad) jb mov daa xchg jns sbb int popa dec pop xchg (bad) sub (bad) (bad) call inc sbb (bad) or lods in mov jnp scas fistpll xchg xor xor (bad) jmp ja cmpsl push bnd xor scas rcrl mov incl out jle js cli stc jle (bad) ja fildll dec xchg out mov sbb add xchg ret mov xor fist dec addb jne (bad) (bad) ljmp mov add outsl clc push jp mov mov jg mov fistpll lock lret or js pop pusha sahf jle dec clc (bad) (bad) lcall lods stos lds mov push fisub adc dec and icebp pop cld (bad) ljmp outsl ficompl pop cmp mov jg dec mov lea loope (bad) dec xchg call js xchg stc mov test lods test ret (bad) call shr dec clc cmc out sub pop dec divl cmp lcall ja out push lock xchg loope jbe (bad) (bad) (bad) jmp pop cmp jp cld ss les mov cmp mov (bad) pop sub lock sbb sbb mov (bad) (bad) call inc mov xchg lods and cs out sub xor sbb call aaa (bad) cmp mov iret pop adc outsl stos push pop (bad) fbld dec dec les inc jns lea lcall (bad) jg mov pop aaa mov pop mov (bad) push popa jecxz adc movsl in test (bad) pushl das loope mov dec xor cli out cmpsb stos dec sti and mov sub sbb movsl stos and (bad) (bad) pushl dec dec int jmp xchg std or gs ss lahf stc cld popf fimul decl icebp push clc loope imul fisub lock mov sahf daa mov jg (bad) (bad) (bad) (bad) js inc pop adc add jg fnsave lods ja and dec mov mov cld adc incl imul jge insl mov in shlb inc rorl and lret inc cmc incl push mov (bad) imulb jecxz mov mov (bad) fildll dec aad fstl movsl cli fcmovne adc cltd popf dec test and sub (bad) (bad) incl dec jecxz push call (bad) pop fwait push xlat cld push lcall dec jne cmp fbld inc fsubrl test movsl sbb repnz (bad) (bad) incl mov test stc std fistpl mov std aaa shl xchg out or cld (bad) (bad) sub jno icebp add insl popa jns leave cmp int3 fdivrp (bad) (bad) call stos adc mov sbb in lcall mov pushl xor pop cld inc clc cltd popa stos pop js push mov sub call lahf mov sbb test jb adc ds fdivl cmp imul js lods mov out xchg xchg push cltd xchg inc frstor (bad) (bad) jg push mov aam inc and out push and sub (bad) xor jp rorb icebp xchg (bad) aad shl push in popf loop scas out mov lret cwtl mov pop cmp (bad) (bad) jmp xor pop or jmp cmp pop jae ja stos or decl cmp mov sbb lret lock ljmp pop idivb cmp xchg scas fldcw (bad) (bad) (bad) fidivrl mov lods dec mov xchg pop jnp lods rorl (bad) pop mov jl push aam pop mov (bad) (bad) out and and cld sub pushl fistp in in je das (bad) negl rcl cmp jo and (bad) decl dec push xchg xchg pusha and mulb fidivrl (bad) decl xchg aas mov lods xlat push aam or frstor in inc leave dec cmp xor insl ljmp loopne pushl push or sbb in push lock pop push mov rcrl call mov fbstp fsts pop push mov sub mov or (bad) (bad) in pop xchg cmpsb and cmp lods pop insl cmc pushf dec insb cmpsb lods push (bad) loopne or push scas shll cmc cmp mov jecxz in imul aas or add out add cli mov icebp or jbe inc int mov mov ficoml loopne and mov rcrb mov test mov call push aaa lock icebp push xchg xor mov inc incl jmp pop lcall aaa testb lahf adc ret mov imul sbb pushf les call data16 fsubrl sbbl mov dec std mov lock (bad) mov add xchg mov push pop aam fistp push in popa jae jbe in inc in push ja fldt xchg push popf or jl imul cmp (bad) fild or mov jge fcomip out and call xlat xor mov mov cmpsl scas (bad) (bad) (bad) ljmp or pop dec les dec xchg xor pop xor fsub xchg ja (bad) fbld icebp jle addr16 fstps and (bad) (bad) (bad) (bad) jge std sahf out dec pop outsl out and cmp std add sbb (bad) (bad) pushl arpl add dec lock dec cmp aas mov insb xor (bad) (bad) mov lret js fidivrl cmp fmull sbb (bad) test pop sbb (bad) (bad) jle mov lahf add (bad) rcrl jge jo shl push shlb mov pop arpl jbe jbe pop mov add mov test inc push xor sub in in outsb mov cwtl shl int3 mov push adc sub xchg imulb lcall dec push lahf add adc lcall cld pminub loope stos fs pop mov test xchg xchg (bad) (bad) (bad) (bad) cmp mov sti pop xorl ds stos ret and (bad) ret in mov rcrl lcall push into or loope jl fidivrl lods outsl shlb sub (bad) call es mov lahf cmp jle stc dec iret or out lret pop clc sub ret popl pop loop sbb dec mov (bad) call scas jl cmpsl mov test xor xchg cs and or sub mov lea inc jecxz sub pop jnp cs and jmp inc sub mov xchg xor (bad) (bad) (bad) jmp movsl push xchg or fidivrl add jmp jnp bound mov aad jg stos repnz (bad) adc sbb cmpsb ret push stos mov jl (bad) inc pop (bad) cwtl cmp scas fs jge push push test xor sarb pop cli das cli aaa insb sti jp sub test movsl jns add icebp (bad) out pop aaa add sub ss in cld mov mov (bad) mov loopne cmpsb hlt lahf les faddl mov xchg data16 (bad) (bad) ljmp xchg or xlat movsl dec movsl sub xor sahf pop int aas mov push div clc pop and out mov push sub lds das sub mov and cmp jbe inc (bad) call in push mov sub jl loope mov xor jle jne add (bad) ljmp and cmc orl pop dec mov dec mov xchg or jbe stos adc mov jg (bad) (bad) in add mov in mov adc fs sahf inc xor and mov and add jmp scas sub (bad) sar (bad) (bad) (bad) js pop clc imul cmp cmp add push sti mov popf xor movsb (bad) stc (bad) out clc incl outsb in movsl push jmp mov inc mov jmp rcrb and rcrb icebp lahf mov std call mov test mov (bad) jecxz loop test and (bad) mov movsl xchg ret xchg dec ret adc orb fnstenv sahf mov je mov fst mov lcall stos inc mov lahf fwait int dec add lock xchg lcall xor sbb repnz and les push (bad) mov mov adc mov jg jmp push mov lcall test sti sub movsb daa sbb cmp add dec scas sub loope push pop (bad) imul arpl mov (bad) xchg sbb lret cli sub lock inc cli and inc gs sti (bad) call mov (bad) (bad) imul (bad) jl lods pop (bad) (bad) lcall sub pushf bound dec out mov xor cwtl lret (bad) fstpl mov mov icebp pop scas rcrl dec jno orl lcall fucomi adc xor sbb or in pushf into pop arpl lret clc mov data16 (bad) (bad) call xor jg fsubs or sub test lret dec sbb inc lret std lcall icebp out rorl iret inc clc lret outsb xchg mov cmpsl ljmp pop dec mov lds mov (bad) (bad) (bad) ljmp outsb jnp mov fwait dec in movsl mov (bad) mov jg enter jmp dec hlt cmp adc add ret negl pusha xchg (bad) (bad) (bad) (bad) cli xchg je xor repnz push jle fwait jnp pop imul aad pop mov pushl pop incl icebp arpl repnz sti cmp notl fldenv jmp and es out sbb and rolb lods out sbbb mov sarb js jmp (bad) xor mov (bad) js out mov xchg dec adc dec rcll (bad) (bad) mov ffreep jge ret mov adc jge into mov xchg pushl xlat jae in (bad) in xor xchg jo xchg pusha test je scas loop iret out movsl sahf xchg (bad) jg (bad) jle aas xor xchg xor jbe pop scas jmp jge lock (bad) into icebp dec (bad) iret mov (bad) (bad) (bad) jp ret std push (bad) pop adc pop shrl fnstsw not lods je cmp fcoms movsl push add (bad) decl dec adc test fcompl mov adc movsl lcall dec sarb sbb or dec pop (bad) mov inc (bad) mov sahf xchg xor dec mov and movsl mov jmp push dec add movsl mov jno addr16 mov pushl push mov cmp insl add das insl in scas fstps (bad) les cwtl (bad) jg or mov cs stc xchg xor push fildll (bad) (bad) call push imul dec and inc (bad) and pop xchg rorl add xchg add sbb pop fisttpl (bad) lock call mov int3 fistpl pop pop xchg mov sbb stos cmc inc mov sub rcll dec dec ljmp mov mov iret fsubrl inc popf and mov leave mov xlat int3 push popa adc dec popa xchg add xchg test sahf or int popf pop (bad) out testb (bad) jmp lcall inc dec add sbb lret push inc mov inc loop cmpsb (bad) (bad) (bad) incl mov jg lods push sub daa mov mov mov inc cmp outsl clc sbb sahf pop fdivp inc mov cmp (bad) (bad) (bad) cmp adc fs sbb jns sub jno in movsl ja jg mov jmp xchg mov aad and aam push std call iret cs xchg dec outsl imul xchg mov inc xchg idiv (bad) incl dec (bad) gs adc and mov sbbl mov dec sub test mov cmp jns sbb hlt das fimull lds cmp sbb mov incl adc cmp mov pop (bad) (bad) (bad) (bad) mov mov or jno mov push mov xchg pop push aam lock out sub or shll xchg xchg cmpsl push loopne sub jbe push movsl jle pop icebp (bad) (bad) jp int std pop out pop or lret mov xchg mov (bad) jg pop lcall mov adc shrb (bad) (bad) (bad) mov xchg push dec xchg or push loop xchg add sbb scas dec xor cmp (bad) (bad) jmp push lahf xor mov adc or je das ficomp jae lds push subl cs repnz mov outsl nop repnz dec in js (bad) mov mov (bad) (bad) decl mov xchg in jl stc mov xor dec (bad) mov sub inc (bad) cmp lods (bad) ljmp inc arpl arpl cmpsb push out push sub iret stos (bad) (bad) (bad) decl (bad) mov xchg inc cmp andl jo insl cmp push fsubl mov jg js cmp lods pop js jnp xchg clc and popa and es fs mov ret mov fwait (bad) test mov das jne mov mov dec dec push pop (bad) movsl pusha std decl fldcw fisttpll (bad) jp xchg inc js lock inc icebp pop mov ret jle mov and lcall cwtl test decl sbb jecxz bound mov (bad) mov les sub pop adc jns dec outsl jne mov mov call adc ja xchg push aaa add and (bad) clc pop push outsb lcall add xchg jb loop mov jmp shrb sub (bad) cmp mov adc data16 repz pop or mov aam incl jecxz jb int sbb andl dec adc idivb pop pop inc pop and mov (bad) insb insl (bad) (bad) jg mov out fimull addr16 stc xchg inc test mov (bad) (bad) (bad) decl into out outsl popf sbb aad das push les xchg pop jmp stos rorl scas push mov mov jecxz fisub push loope rcll shl repz mov push and ja jo push sbb aam jg pop jle add jne es dec out (bad) ljmp clc push xchg loop cwtl sub adc push lods out (bad) mov ja sbb (bad) (bad) (bad) decl lods (bad) push movsl or data16 outsb sahf ficompl dec jecxz test and ljmp jno dec scas adc mov aas adc inc jo sbb sub icebp mov (bad) (bad) ds (bad) arpl pop lahf fistp fimull xchg mov xor add push cli jg dec test ss int call je insl icebp pop ret xchg push mov mov (bad) (bad) (bad) (bad) ds jae out mov aam popf movsl jbe push sub xchg and push mov (bad) lcall jns pop fldt jmp (bad) js (bad) jae xchg or pop fistl insb ret add jp (bad) ljmp add (bad) or dec dec inc (bad) shrb (bad) (bad) in insb (bad) xlat jne (bad) in or cwtl (bad) ss or in xchg push test (bad) shrb jecxz push scas jl lock (bad) lcall mov xlat cmp jne das mov mov adc (bad) jmp pop push outsl insl adc jl popa sbb xchg pushf sbb movb imul lea outsb cmp sub xchg mov (bad) ljmp xor dec sub adc xchg cltd loop mov xor inc roll sbb (bad) (bad) (bad) stc sub dec or out fmull lods dec mov test mov das inc ret (bad) and mov sar scas or dec sbb or ret test xor push clc and call cmp cmpsl test imul aas push mov mov pop pxor jecxz lock mov leave stos inc mov xlat dec std sahf xor mov lahf lods pop pop cmc (bad) decl sbb out scas in daa or mov (bad) decl add xor (bad) dec mov (bad) fwait test cmc inc lret xchg in ljmp lcall or adc test inc rol insl jb xor cli (bad) ljmp (bad) rclb add add push loope xor jmp cmp (bad) ljmp jl xor cmpsl push rorl add in outsb xchg gs movsl push clc fcomip lods clc mul std js movsl mov cmp sahf xchg in sub pop lods es dec or inc sbb outsb cmp icebp je bound js jmp idivb mov fiaddl and (bad) (bad) jg and movsb push outsb rcrb stos jnp bound cli sbb xchg mov adc push ljmp push lock cmp cmp test dec loopne pop or (bad) fcomp in lcall and call push addr16 pop stos inc daa in aas sti pop push inc sarl mov push pop sbb fsubr in orb add jp cld adc pop lock popf loopne xchg adc (bad) (bad) (bad) inc stos sub mov outsb push sbb das and xchg inc mov out imul (bad) fild pop cld or push es psubq fimull (bad) (bad) lcall stos dec mov fdivs jge mov out sub xor (bad) lcall mov std jne outsl cmp stos xchg test int and std fisubr pop ljmp stc lods es xchg dec popa jmp add push cwtl sbb jmp mov mov loopne sbb xchg scas fstps inc (bad) inc xor pop cli xchg cltd insl insl stos inc inc lret insb stos push loopne mov xor (bad) in (bad) xchg pusha mov fisubrl cmp (bad) js (bad) fcomps dec sbb sbb stos lods icebp out push inc pop mov fsubr mov sbbl or loopne fwait pop (bad) (bad) (bad) call xor adc test sbb pop jno aad cmpsl sub imul insl sti scas (bad) (bad) (bad) dec pop jne sar insb mov mov and xchg fucompp sahf arpl sbb lods std mov imul aas mov push cld (bad) mov outsb lahf bound mov mov sub jo adc and loopne in (bad) fcomip out push add push (bad) mov ret (bad) xor xchg idiv inc loope mov dec sbb add adc pop push decl out sbb mov inc dec jno lret adc cmp call cmp (bad) (bad) lcall add insb test inc adc sbb lcall cmp pop jbe pop out mov out enter movsb fcompl sbb lahf add mov cmp jg pop loope (bad) mov pop lock pop bnd (bad) (bad) (bad) jmp bound aas cmp sbb jo outsb lock adc ret mov outsl clc dec sub xor jb idivb mov imul (bad) call test lods lret loop clc and in push stos (bad) sarl clc mov lcall pop mov ds add ret cmp push add jg (bad) clc sub incl test dec loopne mov incl out dec popa xchg les xor movsb (bad) loop ljmp xchg clc (bad) (bad) decl pop mov xlat lahf push or std hlt mov (bad) mov mov dec and sub stos pop mov cmp add out inc clc pop scas push hlt sbb clc dec bnd movsl fsubr stc rcl mov xor (bad) inc pusha add ljmp dec scas fwait xor sbb lahf lock fcmovnu pop test adc cli loope shl (bad) (bad) (bad) (bad) mov mov shrl and out add popa sub stos adc push lcall fldenv decb ret mov stc cmp dec (bad) out and mov mov mov mov mov and (bad) (bad) decl adc dec (bad) repnz xchg popf cmp sbb lods icebp pop inc pop sar fild repnz negb fist mov incl lret and insb cwtl andl nopl hlt push jnp sarl popf adc hlt (bad) jmp pop mov and lcall pop jp pop std mov add or mov xchg inc xor lods inc test xor jge cmp (bad) decl xor aam adc pop clc (bad) jg aaa xchg mov int3 cmpsl fnop stos dec aam jg dec or mov inc sbb enter mov push pop xchg clc sub add push push lahf fimull jecxz push rol jg (bad) call xchg cli testl jae ja es rolb cmpsl or ret jmp pop jno scas pop add mov mov jnp (bad) (bad) (bad) pushl loop xchg adc fldt pushf jle in iret push adcl mov (bad) jbe outsb lea imul sbb popa add cs lods jmp adc out pop outsl push mov pop (bad) (bad) (bad) mov iret pandn ljmp aam fdivp ret and rcrl cltd sbb pop insl fdivr dec mov pop repz xor aas or xor daa shl mov mov pushf pop popf mov stos arpl ret pop fmul adc fdivr lock mov (bad) pushl dec imul ret (bad) loope vcomisd jle clc subl call mov jp sub xchg cs outsb scas or test les fmulp incl lods push fiaddl outsl incb std cmpsl ds pop imul (bad) xchg mov (bad) sbb cmp mov (bad) (bad) decl (bad) fdivrl out and mov cmp mov mov movsl or sub mov in mov jge mov enter (bad) decl iret mov mov lods add pop add mov fsub sbb pop pop dec loopne xlat int3 lahf adc xor xor div sbb clc ja push cli add sub pushl cs out mov cmp daa add pop add pop sbb mov cs jg test mov mov imul (bad) sub add (bad) ljmp inc push ss or jns add (bad) (bad) push outsl out mov mov push mov outsl push fstp dec ljmp outsb pop pop daa or mov dec pushf fcomps enter cmp cmp lcall push inc scas scas cmpsb jnp push mov fildll data16 pop ret or sarb cmpsb push lahf sti arpl dec in pop movsl fcos fnsave loop mov adc push adc (bad) (bad) jmp mov dec pop jge lds imul lods cwtl in (bad) mov pop test ljmp adc adc xor xor cmp jge movsl icebp (bad) (bad) (bad) incl dec mov movl test and push lahf pop cld inc (bad) aas gs out mov sbb xor hlt push clc (bad) ja inc insb rclb movl sarb xor push insb sub mov das adc sub scas jmp out sarb add push shll lret in call xchg mov xor xor movsb out mov mov (bad) ljmp mov sub xor outsl pusha mov in add loopne loop add push hlt jns pop clc cmp imul hlt in inc inc adc dec mov rol dec add std ret dec scas jg add xchg ret jl clc cld aaa cld cmpsb aad xor ror dec pop jnp leave cmpsb (bad) jns icebp (bad) pushl lea push (bad) repz lock test loopne insl clc (bad) lcall ja stos jg mov fprem1 out pop jmp test stos mov sar ret mov enter xlat mov (bad) in mov jmp fidivl mov insb cmc dec mov pushl rorb mov (bad) sti mov (bad) dec jp pushf stos push mov dec mov cli mov movsl or pop rclb push ja add jle lcall jl inc sub xor pop enter ret lcall decl xchg popf add insb mov add add jecxz fildl (bad) mov testl and mov jl (bad) (bad) incl mov mov fs fcoml xchg cmp push daa cs es aad (bad) (bad) sti loopne punpckhbw clc imul std mov clc test decl lods cmp es xor xor pop icebp push cwtl cli adc imul sbb sbb jl lock mov jecxz mov cli (bad) jg push mov mov test sub dec xchg in in inc xchg sahf pop test out ret lahf xchg aad decb xchg xlat jae xor call scas mov mov aaa add aas (bad) jg outsb cld pop lock mov mov cmpsb jle shr insl jle jle push push mov cwtl push sahf (bad) dec cmp sub lock jmp lods dec sbb (bad) in jecxz jl movsb clc add mov (bad) jmp cmp test (bad) fisub das sub lcall in mov mov mov jbe xchg sub mov pop icebp scas mov cwtl xchg xchg loope fimull cmc or (bad) decl cli inc aam pop mov lahf insb lods dec insl sub nop add pop hlt and loopne nop add dec mov sti add cmp xchg aas ljmp call decl cmp cmp inc in mull movsl rorb or scas ljmp cmc pusha je mov in clc pushl std mov ja,pt mov jnp xchg xlat out pop jbe mov (bad) mov lcall js loopne sbb mov ret sbb (bad) aad pop stc xchg pop pop jecxz (bad) decl in jno jb out and mov mov ds lret fist (bad) decl dec and shl mov push rep jecxz insl mov (bad) push js and add add pop cmp xlat xchg sbb push incl adc ret imul pop pushl xor mov js xor fmuls scas adc push icebp add call pop pop sub in in or push (bad) mov iret aaa add add xchg clc mov pop (bad) mov push pop fsubs adc jne push mov mov pinsrw dec (bad) fcomip jg daa mov scas pop jle pop xor sahf test or adc sbb aad jecxz jnp ds ficomp push pop dec sarb outsl rclb in push (bad) mov mov (bad) pop mov les aaa pop (bad) incl or roll fs cltd and add loope clc xchg idivb jg cmp icebp rol aas push loopne (bad) lcall insl and out fldl mov inc aam aad bound xor (bad) (bad) (bad) jns out in lret inc xor push loopne push loope sub dec clc mov add adc cmp (bad) mov mov mov adc data16 and cwtl push popa sbb mov dec dec cmp mov mov (bad) hlt jnp ds jne (bad) (bad) jmp cmc jmp cli jbe (bad) mov mov push mov in fwait loope adc subl lcall sub mov loop sbb gs std call push and (bad) fildll push lods call roll movsl xor sub pop push cltd fdivrp xor lods (bad) inc pop push inc push xchg adc (bad) jg mov fiaddl imul jnp das (bad) nop xchg (bad) mov mov or sbbl fdivl or adc cmc mov jne pop sti pop dec shl mov lods mov pop addr16 pop stos push or cmp loopne adc fsubp mov popa xor lret gs (bad) (bad) pushl and int xlat into xor ret sarl shrl decb add out push mov xchg out jge dec (bad) jae xor xor mov mov in icebp dec movsb in mov inc mov repnz jae inc mov push sub (bad) (bad) mov mov push dec andb notl mov pop sahf cmpsl and pop jbe mov cwtl lahf add loop jl clc cmc sbb xor push sahf or push cmp add push sub adc push cmp (bad) decl add ret ficoml fisubrl cmp loope sub stos pop jbe sbb sbb ret jae test mov inc aas xchg lds sar jg push test mov iret jecxz setno push push pop ljmp inc scas clc jg and mov mov pop jbe (bad) push aam (bad) push mov xor test inc xchg (bad) dec scas xchg call mov fwait loop mulb stos pop pop fdivrl (bad) (bad) (bad) mov icebp push sub pop out nop bswap shl and sbb (bad) jg (bad) jne mov sbb loopne js out mov (bad) fcomip insl test into push dec mov dec nop js sbb jp cmpsl loopne mov jg lds aam push pop mov pop sub push dec xor or (bad) (bad) (bad) incl cmc jmp movsb mov pop mov scas js push test mov push pop jb adc pop inc jo fbstp mov decl ret push jp pushf xlat push dec jno push sub pop bound cwtl pop imul jg scas aas lds push stos jecxz ljmp sahf andl or imul sahf dec mov clc stos test xlat stc push movsl xchg xchg push mov inc adc lock mov enter rolb mov scas push inc aam jo xchg fmull add sbb and pushl or fbstp ret dec adc insl adc aaa aad scas loopne (bad) call sub ret dec loop bound insl lds push pop xchg pushf xchg sbb (bad) mov rcrl repnz dec aad pop push dec fstpt outsl addr16 (bad) call jns (bad) cld cmp or mov in mov inc mov xor (bad) lcall ja mov imul dec sbb sahf add lock (bad) (bad) (bad) mov lahf lods push insb jbe jbe movsl test jnp mov and sbb and (bad) decl sub pushf clc jns scas pop jl outsl xchg mov aaa mov outsb lcall sar decl or fwait test mov data16 out jmp pop sarl adc (bad) (bad) ljmp mov fisubrl mov fwait mov ja pop lret stos in leave loop push js insl cld xchg pop xor jne hlt fcos ja outsl nop mov jle mov push inc jne sbb mov lods insl (bad) (bad) mov xchg jl,pt lods mov pop lret mov and (bad) lcall dec dec icebp aaa xchg sarb or mov jge enter sbb (bad) decl das out or fisttp ds out cld jno mov mov (bad) push (bad) sbb jbe les ljmp loop testb jo adc jg xor bound leave in clc out loopne outsl pop add and jp push jb push mov mov pop or pop mov inc in add push (bad) (bad) (bad) mov in sti jb imull mov dec xchg pop mov mov popf decb mov (bad) (bad) fistpll sbb aas gs dec aad mov out out and pop mov jo ss leave in call mov sbb loop mov ljmp push sub fisub sbb outsb or mov jecxz push push xor jb sti push clc dec push (bad) ljmp js sub sbb dec das int push mov add jmp xchg rorl popa lock sbb jle ret push lods lods pop xchg (bad) (bad) (bad) fadd movsl imul inc xor dec scas sahf (bad) (bad) call xchg push push xor stos out std jle insb (bad) ljmp cld (bad) fucomi cmp fidivrl pop clc cltd lock loop mov adc ljmp (bad) pushl std pushl stc push xlat jae popf xchg and xchg insl dec daa push movsb push sub psubq cld mov lock (bad) out fnop test push push lcall fmul pop enter inc jl loop,pt (bad) (bad) (bad) ljmp or pop mov (bad) int3 fadd les outsb xorl je pop pop fs pop loopne decl and push inc shl xchg outsb push lods cmpsl scas jno and xlat dec (bad) pushl std lods jne dec fsubp lea mov (bad) push sub jae daa inc lcall add imul jle lret iret inc cld push lcall sti push test lahf or sbb call dec loope jmp ja lahf mov out mov xchg jge cmc out sub shrb add add dec mov sub outsb jae cld sbb out ret out insb je mov cmpsl mov mov mov in ljmp sub clc repz aas pop xchg inc icebp add (bad) cmp add call push push pushf mov insl pop pop mov ljmp sti pop ret inc mulb xchg movsb (bad) (bad) or je inc push add pop and pop insl mov mov les inc pop push cmp adc (bad) (bad) (bad) cmp fistpll jne out lods jne in ljmp adc je shr std setge cli jg test xchg dec mov push hlt xchg mov jns cmc fcomip ljmp inc (bad) into stos les sub ljmp (bad) out dec (bad) (bad) (bad) incl shlb rcl mov sub push addl add xlat (bad) cmc (bad) incl adc test sarb inc movsb jmp inc aad movsb (bad) jg int mov xchg insb stos daa out adc mov sbb fbstp arpl (bad) (bad) jl insl push xchg ss js int3 pop xchg xchg jne in mov push out pop xor sbb ljmp int3 jbe inc dec or pop lods in mov lcall pop xchg imul sti fstpl push iret and pop ffree jg push xchg (bad) jge lock js loop mov push sub jl cmp mov pop xchg (bad) call cmp cwtl lahf cmp std cmp jle test (bad) mov outsl pop js jmp xchg sti sub sub push pop sub cmpb (bad) (bad) (bad) (bad) pushl sbb dec cmp shrb push rcrb notb outsb bound sbb cld jg add xchg push ljmp xor (bad) jg pusha rclb pop push arpl leave xchg and sub and out shrb (bad) les mov movsb pop fadd or xor cmpsl push or or jbe sub adc fcomip jg sub aad jnp inc push out adc shl pop fsubrp test pop subl (bad) incl xor ljmp or pop xor cvtdq2ps imul pop jo fwait out fildll pop pop mov fisubrl mov mov adc adc ds lcall pop fisttpl (bad) fcomip sbb inc mov fsub jle fmull jo add jmp imul (bad) fidiv mov xlat mov pop stc mov lods jo adc or ss adc cmp popf sbb fs imul lcall pop add fdivrs push lock (bad) (bad) ljmp sbb js fiaddl nop mov or and test (bad) (bad) decl fistpll jbe loope adc (bad) adc pop mov aam xor mov and push sbb sbb lea stos inc ljmp sbb (bad) fstpt pop insb jno,pt pusha xor call sahf mov test push (bad) (bad) lcall insl popf aam out repz mov rcrb sbb shl aad jmp dec jmp or mov add mov jl mov adc mov stc call xchg pop pop adc paddusb mov pop pop pop push (bad) (bad) (bad) lcall dec out loope in mov push lcall cmp sbbl movsl (bad) (bad) (bad) jmp das mov ds mov pop xchg push aad lret imul xchg js jg (bad) and jp mov (bad) pop mov mov loope inc popa (bad) pushl ret pop lock sub jno fsubrl (bad) (bad) (bad) call push mov fcmovnu out jnp ret (bad) sbb pop hlt mov in add (bad) (bad) .byte .byte decl stos nop add add add push add push jge and cltd add psllq add push sub push inc jo jge into adcl jp pop orl pop fsubrl lcall push mov mov add in fmulp fnstcw das dec mov add aas aam fcmovnb pop inc xchg and push ret pop lds cmp enter (bad) iret leave (bad) leave inc into mov lret mov stos int adc and rcrb or pop enter xchg aad aad xchg xlat cwtl xlat pop inc into dec add aas cmp inc fistp notl cmovo dec pusha loop insl in push (bad) lock andl add pop in pop sahf mov jle cmp cmpsl insl je jg out call push push ss mov push pop gs push mov xchg in mov (bad) in dec enter out pop add inc icebp nop adc stos cli and adc or xlat popa xlat pushf nop std mov lods push pop jnp dec enter add add fdivs pop adc push push pop adc fdivs add dec add xchg push push outsb pop (bad) ja (bad) or adc test daa imul pop dec fistpl sbb test mov inc push pop mov testb and push jg or cmp sub sub sub data16 push sub sbb jmp jg xor in gs mov out cmp cmp pop in pushf fdivrs lahf fdivrs sbb jb fcomps in adc adc scas insl sarb push das scas jbe push lret imul mov inc js aam add pop dec push lea leave test pushf test out std call push in push sbb dec in cmp mov xchg mov mov sub mov push out push sbb repnz xor dec dec push lcall or xchg out inc sbb dec sahf movsb test daa int push pop xor iretw leave jae push imul in cmp fs jae cmp adc sub daa iret leave pop mov repnz jmp sbb xchg xchg out push push addl push insl lcall shrl push sub push pop mov lods xlat fsubr negb mov and daa repnz cmp push pop xchg mov xchg or pop and xor bound xchg sarb or and jae adc jb mov in jmp sbb add xor dec sahf xchg out gs xchg les in rcr jecxz pop rcrb pop nop daa iret leave jae ret and dec lcall out jae cmpsl aam or in sahf sbb sahf xchg pop xchg in ljmp daa iret dec push sbb jns lcall fsub cmp inc je add mov pusha es add fsubp adc push sbb es dec jns pop jge imul push push dec and insb arpl outsb mov outsl dec push xor stos dec repz mov jge lcall pop jae daa iret in sahf je sub jnp jns mov jp mov fsubs (bad) jge jle data16 jg push popl pop in mov cld add cmc inc enter or push xchg xchg xchg psllq push dec push ss test inc das sub adc notb push cld adc pop notb push js dec insl push pop test lea fistpl pushf add pushf fs loopne dec push pop icebp lcall scas xor cs lea pop mov push aas pop leave sarl add jbe jae lcall outsl std and imul mov fidivl inc xchg lret or jb pop mov sarb stc mov imul fs out bnd sbb movsb inc adc fdivr inc fcomip gs hlt js das rorb and imul xor out mov mov pop in pop mov mov fild sbb and (bad) idivl dec push cmp or xchg das repnz cmp inc lods out jb jl jo les out bnd in sub xor jl das lock cs push inc sarb iret cmp and incl push push and int3 adc adcb or pop xchg lock pop mov adc xor (bad) stc cs das cmp pushf or loopne loope or push or adcl in adc jb lahf loop add inc add adc jge out sti or or sbb negl or and test pop addr16 mov mov jo and push add fcomps mov add pop cmp fild enter jb mov and loopne das (bad) in mov fsub repnz mov push mov out push pop test aam sti sub mov das xor and sbb in ret and add jmp cmp pop in (bad) cwtl or pop movsb aaa jmp inc add adc pop pop movsl add adc pushl call or sub cli lds roll mov cmp arpl dec sbb mov (bad) (bad) (bad) jmp test test dec inc les adc jae dec mov pop out jb push add ljmp adc pusha rcll jge fild loopne adc push cmp cmp or (bad) jg ss push mov inc inc aaa cmp push pop add in jmp and add dec inc outsl jb sub int xchg push sbb add idiv jg add popa xor and sub adc add arpl push jl add jae add pop add pop sar push jle add loop mov xor and (bad) sbb push adc sub testl push orb jle push adc sbb inc add add add inc jb insl gs add or lods std ja mov adc adc add lds xor fs je in clc jae push (bad) fdivr loopne dec inc dec cmp cmp add loope xlat inc js data16 add test pushf outsb sti test sbb cltd bound sbb push out cltd or or daa cld test add xor (bad) lea out pop movsb push rorb cmovno mov outsl jmp push push or inc push and outsb sub subl aaa cmp xor and xor sbb xor lock mov mov out add add push add fisub push xchg add (bad) mov ja in add jg pop cmpsl pop inc dec inc out add sbb andb test (bad) jg or or or or or or adc adc lahf pusha fstpt add or lcall push adc adc adc inc add or sub pop add loopne inc add fst pop lock or les aas adc add add (bad) pop mov pop add mov fadds add adc push (bad) (bad) jg add add cmp cmp adc add and xor (bad) (bad) (bad) call mov adc xor (bad) roll and icebp arpl push mov (bad) (bad) incl fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test (bad) (bad) push movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc cmp add daa or pop add jno adc (bad) push lock rcll xor loope xchg loop cli roll push add es pop or (bad) adc je loop add push pushf (bad) daa add out add jp mov or cmp xchg (bad) (bad) (bad) jmp dec mov or mov push (bad) push adc add pop setp and ret (bad) (bad) (bad) call stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out ljmp sub mov lea mov push jo fldenv fcomp addr16 out idivl cmp sbb fs add mov mov cmp xor (bad) (bad) (bad) ficom shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos (bad) (bad) (bad) call (bad) pop sub add push xor scas jle stos cwtl movsl adc (bad) (bad) (bad) pushl nop add cld data16 sahf adc add and mov lea mov (bad) (bad) (bad) jmp pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad (bad) (bad) ljmp pop lea outsb loope std adc outsl mov xchg lds dec xchg sar (bad) (bad) (bad) pushl sarl adc jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push (bad) (bad) (bad) decl xor pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl adc (bad) in incl mov test push in lea push adc (bad) (bad) call shrb push insb fucomip fsubr xorl or jle cli add push (bad) cmp lret jle fsubp js fstpl xchg mov mov ja in fs (bad) decl (bad) ret repnz (bad) xchg cmp scas out sarl std push lcall test adc push xlat push xor mov rcrb jmp movsl mov inc fiaddl ret jmp in mov mov jnp gs fsubp arpl (bad) (bad) ljmp jge mov mov cli (bad) pop xchg es mov in pop add hlt rorl sbb (bad) (bad) (bad) (bad) cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov in sbb sbb sbb mov mov ficom jecxz outsb pop fidivl sub and pop into hlt mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec (bad) (bad) push dec jo aam cmp mov in jge idivl hlt jg imulb les xorl call inc mov das dec int scas outsb lret insl lea (bad) push xlat mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fsubl pop jns outsb leave sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl (bad) (bad) ljmp mov lcall xor mov (bad) xchg cmp inc sbb mov (bad) (bad) ljmp scas lret dec cwtl aad movsl rcrl ret (bad) sub imul (bad) (bad) repz cld out mov arpl fcmovnu inc cmpsl (bad) cmp add inc rcrl int (bad) (bad) (bad) jnp ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call out pop add vpshlb jbe into lret mov xchg inc loopne lock lret (bad) incl xchg push aas in inc divl (bad) cld aam aam loopne (bad) (bad) jmp in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov fcomip pushl sub divl jae mov or int3 insl add xchg add mov mov enter jle (bad) (bad) mov in push decl in xor aam pop dec xor rolb out fstpt add jecxz mov call call adc and sarl (bad) cmp es push jmp fs inc mov (bad) jg jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub das clc adc cmp mov add xor (bad) in (bad) lcall addr16 movsl xor (bad) cmp repnz rcrb rcrb stos sub fdiv (bad) cli jmp (bad) insb mov xor into movsb rcrb pop je (bad) (bad) lcall movsb out mov adc mov popf sbb cltd inc mov cmp ds rclb fldcw les xchg and xchg ja (bad) incl int3 jnp cmp mov sbb jmp add mov out push repz (bad) mov aaa inc mov cmc cmp call mov hlt xchg sub bound stos stos (bad) jne cmp imul cmpb (bad) hlt int3 sub lahf inc out lods nop xlat pcmpeqw hlt mov xor jle iret mul in (bad) jae (bad) jb lcall xchg mov jnp clc dec stc test pop sbb fs hlt cld (bad) (bad) jmp xchg mov cmc jae mov out popf nop out out xchg xchg out enter (bad) decl int3 push xor dec pop cmpsb je in stos xor leave mov sub adc xchg ds dec testb cmp idiv scas cmpsl push (bad) fist mov pop stos scas bound inc mov ljmp mov cs (bad) ljmp sbb cmp cli outsl inc inc mov idiv stc mov cmc jnp mov test std push and int cmc pop sbb stos notb ret mov or lods pop cltd (bad) mov or jp daa call gs xor lds out (bad) (bad) (bad) mov (bad) enter mov or fsts mov jle mov mov out xlat cs ljmp les mov ljmp mov (bad) push lcall and insb cmc sub lods test dec push ljmp jo (bad) incl gs outsl mov aaa inc or test push jge aas test loop inc (bad) jmp and mov stc sub loopne pop pop mov stos (bad) (bad) (bad) jmp xor jg aas lret xor sub mov testb rolb lock inc ljmp (bad) (bad) cmp sbb iret int icebp fisttpl lahf stos imul cli (bad) clc (bad) jg fcmove xor out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop (bad) (bad) ljmp or fistpll jo mov mov sti inc aas aad pop xchg (bad) (bad) (bad) call xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp (bad) decl lret sub sub cli arpl (bad) cmpsl ret push sub ljmp lds shrl sbb lds lods sahf xchg ficompl jg sti jmp mov insl adc mov inc into mov (bad) (bad) (bad) pushl sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa in mov sti mov mov std xchg jnp call sahf out ja in (bad) add jg (bad) cld loop pop call xchg cld jae lret push popf mov mov xor mov ja lock mov outsl stos (bad) scas jb loopne (bad) (bad) (bad) lcall pushf ss cmp inc sbb mov xchg fistpl inc cmp push out and jnp (bad) fistp es std inc xchg arpl adc outsb push movsb mov aaa cld (bad) jmp insl movsl into hlt sahf (bad) fwait inc ficom imul mov xor (bad) (bad) (bad) jmp imul add ret pop mov and push iret lods push (bad) jp inc hlt (bad) (bad) jmp mov push addr16 ss jne not test aad jle lcall fucomip into ret mov push (bad) fstpt adcl (bad) sbb push mov mov cmp das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp jle fstpt cs iret jge add mov pop push ljmp aaa push jmp lds inc insl and outsl fnsave xor mov jbe gs insl dec not mov scas jne or loope inc fsubr fistpl out addr16 aas dec push leave idivl gs std (bad) (bad) dec (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push (bad) jg mov es ds sarb jg jp insl add or leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov movb pop add imul or add inc and (bad) (bad) (bad) mov or mov (bad) mov insl push cld adc sub (bad) (bad) decl xor jl pop pop hlt pop sti push mov add fnstsw fisubl (bad) (bad) (bad) ljmp pop cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl rol in daa inc and movsb cmp add cmp shlb sub xor int stos (bad) (bad) (bad) dec fmulp sbb add imul mov jp idivl scas out cmp dec in pop ljmp (bad) fstps sub shll movsb xor int3 movb std das out (bad) frndint out movsl push cld aaa mov xchg lcall mov or ja ja inc and mov movsb xchg enter mov xchg das rolb xchg dec xchg ljmp and jno cld jg je xchg (bad) jo mov cmpsl and (bad) (bad) incl in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov mov mov jge movl es idivb push xor idiv (bad) mov push out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti (bad) (bad) (bad) (bad) mov jecxz jl mov mov (bad) cmp mov jmp mov sti mov cld scas inc cmpb (bad) mov mov adc (bad) (bad) jg dec out lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov (bad) fild cmp pop sarl sub jmp (bad) (bad) (bad) mov test sbb inc mov daa movntps ljmp ljmp popf dec pop stos mov mov int scas scas sub mov jge cmp (bad) pushl mov pop mov rcr pop call mov cwtl sub xchg mov xor (bad) (bad) (bad) fstpt pop scas scas (bad) pop inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or pushl aam or inc stos repz fsubrl lods rorl sbb (bad) (bad) (bad) std push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov mov cmp fldt (bad) aaa cmp test scas jmp (bad) pop stc lds (bad) mov xchg push or (bad) (bad) (bad) mov outsb mov aas jecxz mov sti xor (bad) xor push add or (bad) out arpl ds push jb push flds in cmp out push and xchg mov cld ljmp push test sbb jno lea repnz repnz jecxz fldt cmc sbb dec test jmp cli fucomip mov das clc aas (bad) lcall lock in mul lahf dec rcll mov inc mov push loope iret fidiv push push ljmp (bad) xchg mov (bad) (bad) (bad) call mov std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg (bad) (bad) (bad) lcall push outsb jo stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push (bad) (bad) (bad) (bad) fldcw lret enter call movsl xchg and push (bad) (bad) mov loopne (bad) sbb cmp notb push cwtl jl mov lock (bad) out lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs mov mov sub pop lock and out push sbb jge out ds stos push jne mov rcr push ror cmpsl gs fs lret enter sub out in (bad) (bad) (bad) mov in fwait xchg pop mov dec dec adc sub pop xor xchg (bad) decl mov jle aaa movsb jno cli inc inc imul inc mov cmp (bad) (bad) pushl jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv mov fldt test pop repz roll jg (bad) (bad) jmp jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov paddw (bad) (bad) in pop dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) fcos in push sahf sub aas inc mov xor cmp dec add fs jne or (bad) ljmp in push push aas test or pop js sbb stos mov xchg repz outsl add outsb dec lock sbb daa pop or mov add in das data16 mov or imul cltd lcall pop and jl clc jo add add sub aaa inc test inc cmp jp sbb or mov add cmp (bad) aas or push fstps outsb flds aaa push mov sub imul rclb std xchg cs add outsb sti loope add add jb gs xor xor add addl dec xchg insb insb ficompl jo and outsb fs bound aas roll adcl outsl outsb lea data16 inc outsb fsubr push jo pop inc ja push pusha lret insb imul jae add add dec inc mov pop sub pop addr16 jo push outsl jb imul (bad) insl sbb sbb loopne out popa jne cmp popa je fs jo cmp or cltd insl clc pop adc add insb push inc pop push and dec jae gs cmp jg popa insb je popa addr16 push je popa fisttpll dec jae push dec dec insb outsl insb xor sub pop or mov dec sub int3 pop fs rcrb bound out push push sub or inc cli fistl adc xor in or dec outsl mov mov cmp xchg or xchg push jo scas je insl or mov sub jne sbb aas lock adc add or mov inc punpcklbw adc pop and in inc sbb cmpb pushf and stos and inc cmp add movsb pop cmp or push jne nop push push enter fstl inc jb jle or and cwtl jl test dec pop xchg lods mov add or data16 lods or mov push setne cs bound sbb and jnp je jae jo adc inc popf mov decl xor je cmp das outsb jae popa (bad) (bad) jmp push arpl das js jo xor xor add js popa arpl je (bad) stos xor cmp daa and adc dec xor (bad) (bad) pushl gs gs jp push arpl arpl fs aas or cmp jo out xor push insb mov pop mov aas jmp das xchg imul dec push and add loop imul data16 mov pop (bad) ja jb and ss mov push inc inc fldt mov popf sbb ja ja,pn mov bound add xor das xor sub (bad) jnp mov sarb pop and outsl imul lods cs or aad gs sarb cmp outsl outsb and popa xchg loope add jne cmp arpl cmp cmp xor aaa fs mov xor xor sub cmp data16 cmp daa mov cmpsb and in lods jmp xor pop cmp cmp arpl gs and call js insb pop inc imul aaa dec cs pop xor pusha add fdivs cmp xor jo cwtl xchg sub sub sub sub push add cmp fsubs cmp jae jb bound mov sub xchg xor aam je cmp (bad) cmpsl mov fwait jmp jne aaa mov imul push inc daa push outsb faddl push outsb push sub pop (bad) jae stos pop ret xor push sarl shr push ds sbb es daa sub push adc jns imul shrl jns push xor int3 push jge pusha insl add sbb ds push aad push adc push hlt data16 adc sbb fidivr jne arpl and in dec dec jge insl (bad) push add mov gs jb cwtl jns outsl mov popa jb insl mov int rcrb xor mov jbe stc cmp arpl xor bound cwtl ja pop lods lea loop jne loopne pop and fadd bound mov leave cmc and and icebp mov mov cltd push andl cwtl in fbld das gs gs jae xor sub rcl push mov xchg imul pusha dec push mov inc fcoml fisub les adc push add addb add adc rorb outsb (bad) incl ljmp dec inc inc pop push push dec inc dec dec inc test mov push or dec imul (bad) jg outsb je push inc inc and pop and into or mov dec push inc push mov inc inc and xchg cmpb not shrl dec stos es arpl jle out or pop xor test insb xchg xchg pop in je lock adc imul jb movsb repnz inc push sbb inc out push popw inc fs fs push jl push lcall add cmp xchg gs and jne imul ja gs sub and arpl xor push push inc cmp sub bound je pop stc aaa cmp jo and arpl and scas push dec fisubrl sub dec pusha sub and outsb jns out cli not loope mov enter ss int3 andl add aam adc int3 daa add outsl mov cmp data16 cltd mov sbb and push push lock lahf push pop ret xchg fucom arpl mov add cmp in fildll ja inc or clc popa cmp test pop sbb js and mov imul gs xor sahf out aam lret fsubrl int3 sbb and sbb inc mov mov push scas add movsb (bad) lcall add iret adc in int3 inc adc push pop sahf dec aam popa jmp dec or and call push sbb inc fldl (bad) outsl inc push push mov pushf jbe add or cmpsb adc rcrb add add add ja test push xor aaa add inc rorb dec adc push pop add cld insl stos jo,pn xchg inc jl addl push incl nop add (bad) test mov sub roll add loop add add add add add fst pop or add js add add (bad) pushl push sbb add add add add dec add pop add addr16 (bad) (bad) incl outsb add jl addl add add add add add add add pop (bad) (bad) incl jmp add add adc sbb add add dec push add (bad) (bad) lcall add jp test mov cwtl add add add add add add add movsl (bad) out mov add add add (bad) decl add mov xchg add add add add add add add (bad) incl add add add add add add add add add add add (bad) (bad) (bad) incl add add add add add sub pop add xchg (bad) in incl aad in testb push push daa push aaa push dec push pop push push jnp mov popf (bad) jmp incl scas push rolb push jecxz cmc pop sbb sub cmp pop je xchg cltd pop (bad) (bad) (bad) ljmp in clc or or or or pop or (bad) or or or (bad) (bad) jmp or or or or or or or or or or or int (bad) cmp or or or or or or or imul decl cwtl or or or or or or or or or or or or or es je mov fimul cs dec push fs jg (bad) (bad) (bad) lcall push out wbinvd (bad) cmovno pop (bad) xchg btr iret paddsb (bad) (bad) call adc popa adc fwait adc adc adc adc insl adc call adc adc adc jecxz add and inc adc cmpl adc adc adc adc adc adc adc adc adc adc push adc decl mov mov or insb push (bad) push mov (bad) push cli (bad) (bad) (bad) call sbb pop mov scas pop rclb negl sbb inc sbb mov scas sbb sbb sbb sbb (bad) (bad) lcall imul sbb sbb sbb ja sahf sbb sbb sbb cmp arpl mov mov (bad) (bad) lcall ficompl sbb sbb sbb sbb sbb sbb sbb jo cltd sbb push push inc (bad) (bad) (bad) lcall push xchg push mov jb pop imul ljmp and (bad) (bad) (bad) jmp sbb dec and mov and and (bad) and and and xchg and lcall jmp lock and and and and push and xchg and daa es (bad) (bad) call xchg mov call daa jp stos daa fsubrl or sub sub sub (bad) (bad) ljmp popf sub sub sub sub sub sub sub popf sub sub sub sub sub (bad) (bad) jmp sub stos sub dec cs cs out das and pop das xchg das (bad) das (bad) (bad) (bad) (bad) (bad) xor xor xor xor (bad) xor xor fwait xor xor (bad) (bad) (bad) jg mov xor xor xor xor xchg aaa ss scas ss pushl test pushf aaa xlat cmp push cmp inc cmp mov cmp cmp (bad) (bad) (bad) out cmp cmp gs test cmp cmp mov ds mov jmp aas and popa aas mov inc fs cmpsb inc out sub inc lods inc out inc xor inc mov (bad) cmp push inc cmp inc rolb inc mov inc push inc lcall (bad) (bad) (bad) incl inc lock xor dec add dec xlat dec sbb dec lock aaa dec jge (bad) (bad) mov dec push dec lcall mov dec xchg dec fmull dec outsb dec (bad) lcall mov dec dec dec xchg dec fstl push jno mov push fwait push out (bad) (bad) (bad) pushl push jl (bad) push adc push stos push notb (bad) push fistl push jne ret push pop push test push push inc push xchg push loopne das pop jge lret pop sbb pop mov pop cmpsb pop cmc pop inc pop xchg pop (bad) (bad) (bad) jmp pop xor pop daa pop js leave pop sbb pop mov pop mov add pusha mov popa dec popa mov bound xchg arpl call xchg gs (bad) (bad) lcall cmp xchg addr16 fisubl xchg push imul dec push (bad) (bad) (bad) ljmp imul imul push insb scas insl or insl mov outsb les outsl js (bad) jo inc cld (bad) pushl jo jno jno jno jb jb jae jae jae je cwtl (bad) (bad) (bad) dec jne jne jne jbe jbe jbe ja ja js js js jns jns jns jp jp (bad) (bad) jmp jnp jl jl jl jge jge jle jle jle jg jg jg addb (bad) ljmp or (bad) hlt adcl test test stos (bad) (bad) (bad) incl xlat xchg xchg mov mov mov mov mov mov (bad) decl lea mov (bad) ss sahf nop push nop outsb nop (bad) xchg aas xchg test adc lds xchg and xchg leave xchg xor lahf xchg or (bad) (bad) (bad) decl cltd and nop cltd cld lcall scas pushf sbb mov sahf inc sahf scas lahf (bad) (bad) (bad) lcall mov inc mov xchg mov out push movsb (bad) movsl cmp (bad) lcall cmpsb mov loopne push test test sbb (bad) stos add lods mov (bad) incl scas sub scas mov ljmp mov mov mov mov mov adc adc jns lock mov mov mov mov lcall mov and or jp cmc (bad) jo in sar (bad) jmp jecxz pop ret pop ret aam push (bad) into lds enter ret movl mov (bad) cmp mov lret ss mov xor int into ss mov aaa iret mov sar (bad) (bad) (bad) cmp mov roll aam aam aad aad (bad) push (bad) fcom pop xlat loopne fs icebp (bad) (bad) (bad) (bad) fnop data16 sti fildl fstl fstl fildll fildll loope loope (bad) (bad) dec loop loop jecxz jecxz in in in out out out out call inc jmp (bad) decl in jo sti in xchg adc pushf out sub mov inc out int3 lock lock jb push mov (bad) (bad) (bad) lcall repz hlt xor ret cmc fdivp insl idiv (bad) mov sbb test cmp (bad) cli push cli out ja lods stos test pop cld cwtl std sub mov (bad) incl inc add (bad) xchg add bound adc add xchg adc and pop push mov aas test pop or add push cli pop fidivrl cmp pop add add add mov rcrb pop add add push push or sbb add adc add xor (bad) (bad) (bad) pushl and popa and pop push jno sbb and es or rcl daa loope ja call (bad) icebp xchg mov inc aaa inc arpl rclb (bad) (bad) jmp repnz mov sub data16 cmp dec dec dec decl mov push ja jns test xchg xchg xchg cwtl cltd lcall shll mov mov into leave lock cld dec aam (bad) xlat fcomp (bad) in out cmc jle div clc stc cli adc andl mov insl adc and das clc (bad) incl pop xor jno inc andl bound xor mov push inc jb pop (bad) incl jmp (bad) xor sbb icebp mov push ss fs or loopne lock jne aaa test xchg movsb aas mov lods mov xchg iret sub push sub data16 shrl pop push mov mov cli (bad) lcall jmp pop push mov ljmp test fs (bad) or or stos mov jo into lret or push inc sbb fisttpl adc xchg (bad) fisttpll mov inc dec es adc xchg incl (bad) call sbb lahf lock aaa imul (bad) lcall pushf mov lds rorl mov xchg sbb dec fidivr mov test inc jne (bad) push adc (bad) fldenv sub cmpsl mov xchg dec adc and add rcrl (bad) aaa cld (bad) call ret jns inc sub add xor mov xchg mov xchg and std (bad) ljmp loopne inc mov into ret adc cmp lods (bad) (bad) (bad) call rcll sbb push test and pop out (bad) outsl jns das stos dec out (bad) (bad) (bad) jmp adc jnp nop mov test sbb scas inc ficompl inc push (bad) push mov (bad) call cld lret mov std std or (bad) nop adc es test ret lods cmp ljmp and sbbb popa sahf fnop (bad) (bad) pushl mull pop aad fimull rclb stos fdivr add dec je push mov (bad) (bad) mov arpl dec cmp mov xchg xor xor dec dec mov loopne (bad) (bad) (bad) jmp sahf mov js flds (bad) or sti aas mov gs lods shlb or ljmp stos add fidivl mov test jp insb mov popf jbe lret sub (bad) (bad) (bad) decl adc jmp mov mov roll mov lea (bad) (bad) (bad) decl mov stos pop test xchg or and mov lret imul xor push (bad) (bad) (bad) incl dec and imul call js and jp jo decl (bad) decl ds inc test inc outsl jge shlb adc ss imul xchg sahf lahf (bad) in xchg shlb sub pop inc push jne xchg sahf loop movsl lock (bad) call (bad) xor adc pop adc aam jle push push cltd pop push (bad) and (bad) (bad) fisttp lahf pop push cltd daa xor mov mov mov pusha mov pop (bad) (bad) (bad) dec cltd mov ja push in cmp cmp sbb hlt mov push call push push push sar outsb xchg push or sub repz jp movsl inc jp (bad) (bad) jmp cmp mov sahf pushf lret incb sub cmp mov ljmp mov out push sarl mov cli insl dec icebp (bad) into mov (bad) push add xor out stc in cli xor movsb mov inc jmp cmp (bad) mov adc iret mov pop mov (bad) sbb mov (bad) (bad) (bad) incl test repz jle js,pt or mov xor cld mov inc (bad) enter ljmp xor scas push sub sub or sbb (bad) ljmp in and xchg test sbb xorl push aad xchg lcall decl inc sarb test pop xchg movsb push int3 push xchg int sub dec push (bad) (bad) (bad) jmp mov js fstps mov xchg mov mov fcmovne out xchg iret sub (bad) (bad) (bad) (bad) mov pop add dec negl fnsave loope add sub dec sbb push push add decl cmpsl cmpsl add xlat pop sbb mov push test (bad) (bad) (bad) (bad) decb test xchg dec mov cmp enter arpl sub dec and pmullw (bad) incl push xchg dec loop rorl or xlat or xor add bound (bad) jg lret adc cmpsb lods mov inc mov in clc jno lea fcomip cmp xor mov aam in ljmp jg pushl pop leave jp sbb xchg sbb cmp sub hlt (bad) (bad) (bad) (bad) decl cmc dec ljmp pop inc mov mov or mov inc popf cmp aam test mov pop daa test fwait stc (bad) adc mov adc incl and inc call out add (bad) (bad) call xchg fistl push xchg enter call addr16 jb (bad) and movl fsubrl add cmp push (bad) dec inc fdiv call dec xor fcomip xchg dec adc data16 xor inc cmp cmp outsb orps add and shll fcomip call jbe inc insl jge (bad) (bad) insb sbb decl push fs adc dec lcall rorl xor xchg dec imul lret lods fwait outsl loop lcall mov push addr16 inc scas xor jno and xchg pop inc out (bad) (bad) (bad) mov outsb idivb mov popf xor popa loop movsl or arpl lods mov incl int3 add out std xchg mov gs sbb xchg push fstl jb jo hlt call std sub call mov inc int sub pop popa lods leave mov pusha pop push lcall sbb lock arpl js das sar cltd ret add sub mov in inc sub mov (bad) mov fcoml add inc mov xor dec dec sub push adc (bad) (bad) (bad) lcall mov push ret fisttpl mov pop xor push sbb lcall push (bad) (bad) (bad) call (bad) call mov xchg movsb (bad) aad xchg push adc mov sbb out loop ljmp sar xchg mov xor test sbb hlt and pop loopne pushl xchg int3 sti mov je sbb mov push sbb (bad) (bad) pushl (bad) adc (bad) cmpsl (bad) ret ljmp (bad) loop fnsave (bad) (bad) (bad) decl enter push mov sub push inc sub es mov sbb jae (bad) (bad) (bad) ljmp fsubs imul push push test sub mov jbe test mov (bad) (bad) decl rorb cmp mov xchg xor inc scas jp stos ss push (bad) (bad) (bad) call mov (bad) mov sub push dec pop fcomps push inc adc dec addr16 (bad) jg je cwtl inc lcall lret sti pop mov shrb (bad) lcall test xor pop and push movsb xchg gs dec jle jp or mov int3 out cltd ljmp fdivrs jb mov cmp xchg sbb push test (bad) (bad) (bad) fcoml xor push sbb out lret arpl xor mov in push mov (bad) (bad) ljmp loop push jne cmp inc pop jns sbb push dec xchg bound or inc (bad) (bad) (bad) call cld cwtl pop mov fsubr div dec mov mov xor lret (bad) (bad) (bad) jg mov fwait mov pop insl idivb pop xchg inc cli mov je lods int3 or lcall clc and es mov sahf lds sbb xor fcomip (bad) decl mov mov rcl loop xchg popf jmp je mov fistpll and int3 out in mov mov (bad) incl ss pop (bad) std dec in jns sbb sbb and imul cs cli mov cltd ffreep jle fsubl mov and adc sbb cmpsb ss ss (bad) cmp into stos xor inc out cltd mov int adc add cmp cli (bad) (bad) (bad) decl loopne test in xchg nop push dec mov (bad) jecxz sub jne (bad) ljmp sbb lret push push add push and push mov xchg outsb sub (bad) (bad) (bad) ljmp in add push addl repz mov fstps outsl shll xchg (bad) cmp cmp mov aas dec cmp insb pop insb fwait xchg lcall insl js scas pop adc call xor xchg ret inc mov fisttpl jmp pop push adc sub inc int3 (bad) loope lcall xchg push xchg inc push es lahf (bad) mov cmp stos cmp dec cmpsb sbb cli mov and imul (bad) dec push push adc js mov adc mov adc inc movsb sub xor cmpsb fdivrl (bad) (bad) (bad) pushl sub test mov fnstsw rol pop inc push aad mov insb push mov lcall pushl imul mov lret inc add sahf fistp orl or test mov ret shlb (bad) (bad) (bad) ljmp test lret repz out aad pop ret jne aam in jns movsl aam bound push cld push mov mov sahf pop mov mov (bad) shr (bad) (bad) (bad) dec fdivp cmpsl mov (bad) jbe jecxz lods (bad) leave arpl push xchg aas mov sbb push pop cmp (bad) jmp sarb push pop mov push mov inc mov (bad) repnz in mov outsb pop mov out (bad) cli and pop out add push (bad) imul dec gs pop (bad) (bad) push out sub sbb cmp jns iret fdivrl jp sub cmc mov (bad) (bad) sti jne mov es push sahf frstor mov cmp (bad) aaa out (bad) dec adc mov cmp xchg insb pushf (bad) (bad) (bad) (bad) fsubr mov push xor mov (bad) mov loope aam push (bad) mov (bad) (bad) (bad) incl sub lcall fidivl out mov jne and ljmp (bad) (bad) (bad) ljmp mov dec in addr16 inc pop fwait lret cmp jl arpl adc add (bad) decl (bad) and xchg push movsl inc xor (bad) pop mov imul in negl in (bad) (bad) (bad) (bad) fcompl jecxz out outsb insl fmull loope mov leave inc cmp mov push jnp xchg out int icebp sbb jg push dec jo ds sbb insb pop or repz mov fdivp (bad) jg insb mov in (bad) es loopne scas cs push adc xor add pop fisubrl fwait push imul roll jge (bad) (bad) pushl fstp insl xor inc jmp dec mov xor mov mov sbb stos shrl scas (bad) (bad) jmp call xchg fidivr repz jae push mov push je (bad) (bad) pushl jnp add jne pop jp push and pop rcrb dec jl ljmp (bad) jmp xor (bad) or outsb data16 mov ja add movsb push lea cld (bad) (bad) js sub lea jmp sub je xchg fstpt popf xlat add stos dec pop push inc in sub cmp (bad) (bad) dec dec aam lea cwtl js bound mov jno stos cmp and jae decl sbb popf sub notb lret xor mov mov inc and outsl (bad) ljmp jle xor dec outsb dec das andb push rcll or sbb (bad) (bad) lcall adc imull ss ljmp pop add lds xor incl push or shrb rclb int3 or ret call jp cmc cmp ds sub and fxch ss (bad) (bad) jmp cmpsl je inc popa mov nop mov cli adc cmp jle out outsl add (bad) call orl scas sub mov mov loopne or sbb jmp sbb lret das cli mov and in and sbb sar stos sbbl pop pop or cmpsb xchg (bad) (bad) incl test or ja or out sbb into cmp push and inc (bad) add or test test pop jl out adc jno dec pop jmp xchg and inc xchg add and mov mov (bad) (bad) (bad) ljmp dec inc push add xor xchg xor mov cmpsb mov (bad) jp (bad) and rcr sub (bad) (bad) (bad) lcall push test cmp stos sbb aam pop xor sbb (bad) xchg adc cmp push (bad) (bad) (bad) dec in in dec je push sub addr16 in dec jno subb push and mov (bad) (bad) (bad) ljmp movsl lret push nop add stos pushf sbb sub rcl adc ljmp nop (bad) out mov push push xchg test inc xchg aad movsl add push xor ja fwait int cmpsb mov aaa adc aam adc (bad) (bad) call lcall or sub insl pop inc push mov adc xchg mov (bad) jmp jno add jp cmp pop inc loope jae int idiv cmp test nop out and (bad) (bad) ljmp dec lret sbb and xchg inc es imull idiv decl push sbb inc mov inc xchg inc cmp push and je xor pop sub pusha push fsubl pop into push aad dec bound (bad) (bad) dec add lcall iret sub mull push sub mov push (bad) (bad) ljmp dec mov shrl mov push xchg sub or (bad) jmp inc push dec sub das and dec out pop cltd xchg and dec test fisubrl cltd lcall ret call les jbe mov and inc (bad) cmc cmp (bad) (bad) (bad) jmp pextrw jo jge repnz xor in xchg into cmpsb xchg int3 into popa stos ja and mov or push xchg inc sub add xchg imul lcall sub mov pop adc cmovle push inc push loop mov jns pop push jp stc mov adc sar insl mov xchg cmovno lcall into lret in or decl cmp add mull les add (bad) (bad) (bad) jns pop add push aam jmp lea or repnz (bad) lock (bad) (bad) (bad) jmp inc add lret dec xchg xor xchg sahf mov pop pop test xor mov (bad) ljmp insl and mov lret (bad) je lcall mov shlb push sub push nop (bad) (bad) lcall jo add jmp pop inc leave (bad) xor xor inc lahf pop mov incl and push dec and repz loop push dec pop xor cmc xchg mov add (bad) (bad) incl ljmp add test sub xor insb out xchg shr or sar (bad) add daa loope add pop mov xchg push loop (bad) dec (bad) fcomip das mov inc push mov jmp mov idiv (bad) (bad) jmp xchg popa sub outsb mov push push insl push push or lods pop push stos or push out push (bad) (bad) jg sub pushf fwait inc jge in pop sub add loopne push shlb (bad) (bad) (bad) pushl bound cmp jge mov ficom jecxz fwait pop add es jno push mov mov clc pop std scas cli in adc mov in push scas bound jg jecxz jmp sti outsb fdivl xchg out ret data16 jbe push dec out cmpb jo or mov enter loop xchg test dec pop das fcompl inc (bad) call mov (bad) (bad) pop xor inc rcrl xor (bad) mov stos and dec aad hlt data16 lea push leave cs (bad) (bad) fcomip inc mov out mov sub imull aaa add add pusha dec out (bad) (bad) ljmp sahf repnz xchg mov jne int3 notl iret out test addr16 adc or mov mov ljmp mov xor cmpsl adc (bad) out cli jge fidivr sti nop test mov test sub out popa lea sub lds popf push out fs mov or popf leave repnz pop mov stos mov hlt fcomip aas cli pop sbb dec push push sti jns jmp adc mov (bad) ljmp adc xchg inc mov nop mov mov mov (bad) (bad) (bad) call xor out incl sbb andb inc cltd lock inc adc (bad) (bad) (bad) jmp daa je sub cwtl outsb es dec test push mov dec xlat and mov ljmp cli sbbb push adcl cmpsl jbe jmp and cwtl stos movsl mov (bad) lcall sub mov xor aam jl mov push adc pusha in or cltd mov (bad) ss ficompl lcall cmp icebp (bad) decl (bad) push inc clc int3 inc push xor sbb push outsb cmp mov (bad) (bad) mov test test cmpsb xchg jmp arpl xchg daa xchg insl std clc (bad) jg scas inc cmpsb sbb xchg xor inc test (bad) ljmp rorb jl into in or dec or mov mov mov loope (bad) (bad) (bad) (bad) fnop jae (bad) outsl xor and mov sub pop cld sbb mov add (bad) (bad) decl in push jmp adc js xchg in lods pop or out clc mov adc or repnz test (bad) (bad) jg jbe sbb arpl shr jno ja xlat test data16 push and (bad) incl cmp dec pop roll and cmpb fnop push jno (bad) mov jb and add xor dec sbb mov (bad) incl mov sub sub flds xchg xor out lcall test add (bad) lea and fwait inc mov sahf jmp outsb push push in pop cmc (bad) jg sub loopne xchg jo cmp dec xchg xchg pop inc es and adc and mov repnz rcr movsb (bad) out push (bad) dec sar (bad) (bad) mov cmpsl push and cmpsl pop mov xor mov out cld mov dec fwait pushf jg (bad) pushl pop mov xchg push ret sub mov (bad) add and loope cli (bad) (bad) dec mov lds dec ss aam sub dec pushf sti (bad) ljmp int3 lods sahf arpl and mov stos sub inc inc cmp push add lret mov jg vmovaps pop push lods cs imul adc movsl fdivs (bad) xchg sub loop stos xchg nop mov scas js (bad) jg std stos into push push fisubrl inc jae into shl daa lods bound push mov inc test cmp xchg pusha mov mov inc repnz jb (bad) (bad) call and xchg pop mov fcmovbe mov push loope pop ljmp dec call jae ror push and (bad) out sbb (bad) mov or (bad) xchg xchg mov jnp out (bad) (bad) (bad) mov lcall enter pop mov push and push imul xor sbb xor jmp and push pop not mov mov (bad) (bad) incl sub js adc pop sbb xchg add mov loope inc jp cmpsb cmp dec add xchg cmp pusha adc pusha fcmovb ror mov mov add aaa mov sub fnstsw adcb test mov sub inc fcomip stos (bad) aaa arpl loop jge inc mov pop lcall (bad) (bad) lcall push pusha inc sbb inc jb and lcall sbb add (bad) (bad) mov and mov pop pop das shrl movsl pop (bad) (bad) inc sub cmp ljmp sbbl dec mov xchg jae (bad) xor ljmp pop aas adc adc das and mov xchg je subl shl lds xchg insl int3 dec icebp movsb test cmc (bad) jg (bad) fdivrl fcmove jbe imul xchg jle pop notl pop repnz (bad) mov ja in xlat xchg popf ret lods push xor gs xchg insl pusha jno aas adc (bad) (bad) call push sub ljmp cli jnp sub movsb jb lods jl pop ret and mov js pop sbb dec mov (bad) sbb sti out (bad) jmp adc (bad) (bad) call daa pusha rcrl icebp je cmp lods leave cwtl loope mov xchg mov adc or out clc push mov cwtl inc inc inc add ds sti jbe lret mov add dec xor arpl inc inc sub dec sbb jns gs sub push test add push fcompl mov jb cmp jg mov imul inc adc push outsl jg add (bad) lcall rcr scas and leave jo cmp in cmp (bad) call mov popa imul cmp adc sarl ljmp lcall sbb addr16 insb adc test lea (bad) (bad) (bad) call adc xchg xor or pop mov ss pop jge (bad) lcall inc lea push dec ret lods xchg push imul push ljmp pop xchg mov dec (bad) mov imull bound add (bad) (bad) pushl clc pop mov jne dec jmp cmp dec mov or call inc xchg mov mov subl and or js ljmp lods inc xchg xor or push movsb push test cltd stc cmpsl arpl jle fidivr outsl mov ja sub and push push mov mov pop push sbb (bad) (bad) (bad) ljmp jnp fs jle jmp jge,pt ss dec mov cmp mov (bad) fcomip pop push data16 faddl outsb push stos sbb jae mov inc mov cltd rorb nop test fistl xor outsl pop aaa in jae push add lock lea pop into aaa fmul jb xchg jb push (bad) (bad) (bad) lcall fstpl insb mov jecxz iret pop xchg out arpl push fidivrl mov mov hlt (bad) (bad) ljmp sub dec shlb pop lods ret dec rorb dec jb push mov sbb bound dec push ja or push test (bad) push dec dec and (bad) push in (bad) (bad) (bad) ljmp mov imul dec imul out ss rorb cli (bad) (bad) (bad) fldcw lret xor adc lods lea cwtl sub or adc (bad) ljmp into shrl sbb cld inc or in mov ja add addr16 mov (bad) (bad) call lahf cmp mov push loopne push push aam xchg (bad) (bad) xor push sbb inc push (bad) dec push mov inc xor (bad) pop cmp and mov outsb xor inc mov (bad) (bad) lcall mov and stos (bad) icebp enter xchg cli in mov mov cld dec (bad) and call adc jne xchg fwait jae jno fisubl sahf xor movsl jl rclb mov dec push dec add xchg pop mov adc imul dec das test cs (bad) (bad) (bad) ljmp sbb xor xor xorb mov and dec pop lret call ror js jbe mov lahf clc sbb (bad) jg jmp cmpsl stos sti pop push or out nop lods or (bad) xor aad sub lods (bad) (bad) (bad) ljmp sbb fmul sbb fnstenv mov add and (bad) sahf jo stc int (bad) (bad) (bad) jmp sbb push dec inc xor ret push pop sub movsb scas jne insb ja inc (bad) jmp clc push pop push and mov orb add and mov hlt jns (bad) xor ret mov mov cld push (bad) (bad) lcall ss (bad) or lcall clc dec push mov cmpsb sbb pop hlt call xor scas sub fcoml mov sbb or adc (bad) (bad) inc push xchg dec adcl mov xchg imul pop movsb nop push lcall xchg (bad) (bad) (bad) pushl pop push inc jne ret push dec mov adc jb push inc data16 dec xchg out cmp (bad) (bad) (bad) cmp push jp pop mov and inc push imul mov lods dec push in js (bad) (bad) lcall jmp xchg loope pop cmp or adc pop test (bad) call mov stc or outsb adc inc fstps pop xchg push movsl and push pop lock (bad) (bad) call int in mov jge and enter inc xor mov test sub mulb enter push fsubs xchg xor pushf push cmpsl lea outsb mov clc (bad) (bad) jmp mov push inc and shrb sbb xchg mov push lret mov ljmp jl es lret ljmp arpl lods (bad) jmp cltd pop mov cmp push and shrb in ja push mov (bad) (bad) mov stos add lcall push (bad) aad or push push sahf cli js xchg out push or (bad) (bad) incl push and mov aad or adc jbe inc lret inc stos sub push popa jecxz loop jb mov (bad) (bad) lcall push fs inc or dec mov sbb jbe sub mov mov adc cmp lcall sbb insl mov adc xchg add bound (bad) (bad) (bad) fbstp jne or pop xchg mov rolb jo and pop add mov (bad) (bad) (bad) call xchg and sub aas (bad) lahf xchg cmp gs out les ficomp divl (bad) (bad) (bad) dec fcompl push bound cwtl dec mov adc setne sahf scas lcall pop or dec (bad) sbb dec mov jecxz adc jg repnz lcall inc movsb idiv cmc and nop and adc sbb (bad) pushl out mov int3 jnp sub (bad) (bad) sti (bad) jo into (bad) addr16 (bad) incl dec push (bad) sbb je sbb mov ja dec mulb out jne jge aam mov mov cmpsl cmp mov push aad pop fidiv (bad) push std mov lret in or ficompl inc mov outsb in sahf sub jl,pt cmp or incl dec hlt (bad) sahf js jo mov fdivr (bad) (bad) in fdivl loop mov cltd ffreep imul add rorl repnz movsl popa dec movsb mov jge fisubl loop fisubl ss ljmp lret loope stos loop cmp enter hlt in bound rcrl cmpsl test scas das sarb (bad) or dec fst ret ret mov (bad) (bad) (bad) cld add std xorl push setnp ljmp aad inc dec cmc xchg (bad) (bad) (bad) decl rorl into inc (bad) mov sub imul jecxz sbb mov cs and (bad) cmp jne (bad) loope xchg jae push int3 (bad) adc xor cmpl jbe xor cmp sbb stc scas js into sub mov lret xchg imul test mov mov nop lods dec inc stos mov jmp jp jb xlat insl ljmp mov cmpsb into out lods sarl mov xchg leave arpl cwtl enter dec outsl sub (bad) mov jecxz mov in ljmp sbb mov fidivrl pop cmc (bad) mov push fstl sub add and les (bad) (bad) (bad) call xor adc leave and cmp out or (bad) mov jg out in jno pop imul (bad) (bad) (bad) (bad) decl push mov in push mov mov jo jbe rol xchg test xor jg (bad) (bad) mov aad dec xchg xchg pop or imul mov add (bad) (bad) lcall jecxz pop pop fcmovu pop ret mov cmp mov push push xchg pusha stos mov div sub clc xor lret sbb (bad) les or and (bad) (bad) incl cwtl sub pushf stc adc popf jge lods fwait pop aam dec jno xor sub (bad) jnp xchg cmpsb sub or push arpl sbb cmp lcall test repnz xor pop clc jne (bad) jge mov (bad) (bad) (bad) dec out jle mov xchg mov imul lds fcompl inc sbb inc push cs (bad) (bad) lcall jns push out movsl and xchg jnp xor sahf outsl lods jecxz ljmp dec mov mov and add andb loopne pop inc insl outsb insl (bad) mov insb ror out mov pop (bad) (bad) (bad) pushl mov sbb cmp dec call insl and outsb ja (bad) (bad) (bad) (bad) fldt (bad) mov sbb xchg xchg pop (bad) pop subl sarb or sbb idivl movsb pop dec insl adc popf and jb lret mov int3 add (bad) (bad) push and cmpsl insb cmc aaa lret mov pop or into faddp xlat sarl das mov push xor jp push lods mov pop sub and mov aad and dec push or jge inc inc daa out pop sti lahf jnp mov (bad) fdivrl ss jnp ja enter cmp inc and mov xchg jb jb (bad) (bad) (bad) call dec mov cwtl cmp outsb jns xchg push pushf sub je mov fnstsw dec loop js (bad) (bad) (bad) inc lds je add out and call cmp cwtl clc icebp dec mov lret (bad) (bad) (bad) call push pop test jnp jb push (bad) adc inc cs das xchg mov (bad) (bad) (bad) ljmp mov inc dec sarl lds mov shrb sub enter jg cs fistpll (bad) jg scas dec push out add adc cmp data16 pop jl (bad) lock lock (bad) (bad) jmp mov sbb enter pop xchg mov push (bad) xchg cs clc ljmp iret sbb pop test movsb lahf cmpsl and mov std (bad) (bad) lcall fsts icebp or fiaddl (bad) jmp mov out push ja jmp pop mov sti xchg icebp mov fwait jecxz inc in mov (bad) jecxz out leave cmp arpl roll es and js (bad) (bad) (bad) decl jns out mov dec inc mov div inc out pop sahf in cmpsl sub mov sub mov les mov mov dec or sub scas sub (bad) lcall xchg outsl cli jmp mov sbb inc xor in push fisubl data16 mov cmpsb jg popa nop xchg imul jae dec ror outsb (bad) (bad) fcomip frstor divl lds fwait bnd jnp sbb (bad) (bad) (bad) (bad) fisttpll jo and popf xor cmpsl add jmp ror cltd lret repz mov mov inc push sbb dec push mov dec pop les xchg adc mov and mov jg (bad) and xchg outsl push cmp iret (bad) idivl (bad) (bad) (bad) decl mov std cmp aaa ss sub mov hlt mov (bad) push xchg inc mov fbstp out mov sub mov and (bad) (bad) dec dec cwtl (bad) push lods inc adc inc push jge rcl jns xor (bad) xor lds (bad) (bad) pushl mov sbb jns fcmove ss add push add aad insl sub push mov dec and (bad) (bad) (bad) std pop mov sub push push fisubrl pop sub mov push mov (bad) (bad) decl mov inc fs and sub daa rorl daa pop addr16 xlat pop mov ljmp shl jae gs out mov js ret testl outsl add push out insb insl push pop push icebp mov sub fcomip (bad) decl add hlt icebp push rorl in pushf xorl xchg xchg in pop (bad) jno (bad) (bad) jmp pop out ss dec jg in rorb lcall in jbe add sti push (bad) jg incl idivl (bad) lret (bad) pop outsb mov add (bad) (bad) fldenv xchg jns mov aaa or dec mov adc lcall jg mov fdivl mov lret mov fidivrl dec lea sbb hlt (bad) push cmpsl dec xchg or cmp aam lret dec stos inc push (bad) mov fmull (bad) fildll mov jae ds movsl mov mov pop imul (bad) jmp push out xor aaa orl and xlat fdivrl pusha fldcw fimul dec cltd scas std (bad) (bad) jmp mov sub add and xchg xorb fdivr sub aaa xchg stos mov mov mov insb sub mov xor idivl out cmp insl jl pop and inc pop mov inc dec aaa sahf (bad) fwait in jmp pusha outsl (bad) (bad) jmp adc push ret das xor pop insl push shlb fdivrl (bad) hlt (bad) (bad) call pop ret int3 adc inc repnz cmpsl push nop test nop mov out mov (bad) (bad) (bad) fisttp insl mov adc out and outsl or xchg dec xor and scas and xor (bad) (bad) (bad) incl outsb das mov sub inc popa ja imul cmpsl jmp mov lret (bad) (bad) (bad) pushl les stos lea sti lret outsl sub pop pop in hlt fidiv mov insl jp xchg cmp (bad) (bad) (bad) lcall lods push mov mov push mov adc xor dec jb (bad) (bad) (bad) decl divl push inc and push mov sarl int out in cmp (bad) (bad) (bad) cmp les mov shrl pop sub or jmp pop mov sbb push (bad) (bad) (bad) call fstps pop jp cmp mov imulb mov lds daa add mov (bad) (bad) (bad) pushl xchg xor nop scas lcall dec test aad cld mov insb jg (bad) (bad) call mov mov inc rcll add clc xor test push mov pushl loope push sarl xchg out pop mov and adc gs cmp (bad) ljmp (bad) test and mov sbb mov das jnp jmp cmpsb lcall mov data16 mov leave ljmp sub adc (bad) call std lds enter shll lcall sub push jnp jno repz lcall cmp add ficompl inc mov mov ljmp lret jb jno xor (bad) ffreep mov adcl fildl rcrl mov (bad) decl mov ds push cltd jl cmp mov mov decl jge data16 and loop push int pop jecxz pop inc (bad) call (bad) (bad) jle rcrb ja mov mov and add sub (bad) (bad) (bad) icebp movsb repnz ret inc sub mov add and add (bad) (bad) ffreep or mov mov movsb xchg cmpsl sbb sbb (bad) jmp lret ret mov bound sti popf mov sub jbe aaa mov hlt (bad) (bad) (bad) jmp pushf ret pushf xchg adc in dec cmp sub (bad) and nop xchg push push movsb das sar (bad) xlat and mov movsl fs or or (bad) (bad) (bad) (bad) decl push cmp mov sahf sub loope icebp bound dec sub xchg push (bad) (bad) (bad) incl cmp and lds mov into in stc out lret fwait add clc pop hlt (bad) jle inc mov jns jbe pop xchg push mov ds push shrl dec cmpsl cmp sub enter insb jb lret dec jb push icebp (bad) inc repz negb xchg mov xor push fwait (bad) (bad) lcall mov dec lods or lock cmp push jbe mov xchg sub (bad) (bad) lcall add les shll dec sbb shrb sub icebp inc jb jnp mov in fwait jb jno xchg xchg mov or push fidiv inc dec push repz movsb xor clc fcomip mov test push test pop sub inc dec pushl cld dec enter xlat xor popa jns sub sbb loopne adc mov shlb fidivl fxch jo add push ss mov arpl mov dec adc rorl inc test (bad) (bad) (bad) (bad) out adc pop icebp or push push jo or jecxz hlt (bad) jg incl mov jmp sbb repz push (bad) ljmp mov (bad) lahf ret push mov fwait dec out pop mov xchg dec arpl lcall outsl xor push xor dec push cmp lods aam jo inc int xor cmp leave popf into fdivrp push cld call fistp and lods and xchg rcll push dec xor out dec mov decl cmp test sbb mov enter mov pushl inc dec push pop inc xor sbb nop stc push jmp push adc push aam sbb jmp int sub out xchg cmp mov xor fcmovnu dec sub pop sub das clc (bad) sbb sub jne and popa dec imul adc (bad) (bad) (bad) jmp jg dec adc (bad) pop sub adcl scas cmpsb (bad) (bad) ljmp repnz xor xchg sbb sub xchg movsl cmpsl insb fs stos adc push push dec push (bad) (bad) (bad) incl or movsb sahf aaa xchg cwtl sub arpl ss imul mov (bad) sbb cmp and push in inc xchg adc and sbb leave imul shlb add mov divl mov loopne and inc pop inc es (bad) (bad) lcall mov or add stos push mov inc cmpsb test dec dec push test and mov (bad) xchg sub mov fcom inc mov imul std (bad) (bad) call into mov inc pop push adc pop push aad push pop pop sub int xor (bad) (bad) (bad) mov (bad) (bad) mov outsl fisttp sub sbb push mov jecxz ror sub mov pop mov mov and sub mov shlb loop out push addr16 (bad) in fild imul cmp mov mov mov sar decl stos test push aam loopne xchg and jle inc and dec inc (bad) (bad) mov push push sbb icebp iret mov jo lods cmpsl cmpsl xor (bad) (bad) (bad) dec roll std (bad) dec mov enter ss adc mov dec out andl or (bad) (bad) (bad) incl jecxz inc push imul (bad) idivl mov pop mov xor (bad) call dec sub mov push jbe inc cmp aaa (bad) gs push ss sbb add (bad) pushl dec and out scas mov xor inc loop push push pusha int3 xor (bad) (bad) call inc into cmp pop (bad) inc and stos test test (bad) (bad) ljmp push lods mov imul xchg icebp leave sub inc (bad) mov add mov repnz insb jecxz xchg cmp mov hlt (bad) fisttp mov sahf cld and mov jb mov or (bad) cmp cltd loopne cmpsb lret xor jle,pt pop test inc jns pushf mov je mov leave sub (bad) (bad) decl inc xchg fwait mov divb rorl jge fnstcw mov jg (bad) push sti scas lret ja icebp je pop jae cmp xchg mov xchg fisub notb fs cmp aam movsb jno mov fbld mov (bad) (bad) jmp test jl jmp ds outsb dec test pop push fst xchg xchg push out out je imul call in out mov out dec pop arpl imul pop mov push pop mov jmp imul or subl fs push add test inc into pusha adc mov xor mov (bad) (bad) (bad) fnsave stc loop enter mov loope and or movsb inc sbb lds (bad) (bad) (bad) call lds push fwait push jle outsl icebp cmpsl adc dec movsb jo jge test fstpl push leave out faddp (bad) (bad) (bad) inc ret mov dec es (bad) je dec add js ja cmpsl (bad) popa call pop (bad) jg decl dec in dec push fnstenv push push in xchg div mov cmp loopne pop (bad) (bad) (bad) call mov dec test lods push fist and dec daa dec mov idivl (bad) push (bad) jmp pop gs and fildl or popa outsb dec mov fistpl insl dec xor sar (bad) (bad) decl fs xor mov jae (bad) dec mov cmc push xlat fstpt xchg insb fwait divl cmp jecxz in in pop repz mov jbe fstpt jmp shr cs (bad) fcomip sbb cmp adc push lea (bad) inc sub mov dec jbe pop cli outsb inc (bad) fwait jb fldenv mov fiaddl jb loope (bad) (bad) js pop mov fnsave mov and pop in popf mov mov mov mov pop jbe insb stc fstpt scas or lock fildll mov fildl xchg jno sub push arpl into out js stos leave sbb mov adc add pop fs call push xlat in outsb cmpsb jmp jle (bad) (bad) (bad) (bad) lcall std push push outsb into ret (bad) in (bad) repz mov mov ret (bad) (bad) (bad) ljmp push inc mov jb stc mov rcrl jle cs into idiv divl (bad) (bad) (bad) dec jbe or push or (bad) mov cmpsb imul aam aad imul icebp pop js es (bad) push adc testl mov movsl mov call in mov inc mov mov ficompl mov push inc (bad) (bad) (bad) decl dec mov pushf fdivr stos mov lea dec imul int3 dec and ljmp outsl pusha frstor mov dec aas mov sub mov cli pop fldt lret cwtl loope cmc rorb pop das jmp mov clc (bad) ljmp mov mov xor fwait push add or adc cltd mov push push or (bad) (bad) (bad) (bad) out in repz icebp jmp mov imull ss dec mov fldt cld lea mov lods mov out fcompl mov xchg dec out mov decl inc xor xor mov arpl cmp repz mov int ss (bad) (bad) (bad) fdivp xor into and jno ucomiss xor loopne inc jae adc iret sbb (bad) (bad) (bad) mov mov insl adc sbb mov cld mov test fsubl lock push std ljmp sbb lret pop sbb xor add out (bad) (bad) lcall mov (bad) testb insb lret xlat add out insb pop fsubrl adc add loop (bad) mov dec or push dec xor (bad) ljmp clc push in jo add pop sub dec cld mov stos jg outsb jg pushf test call pop std xor adc stc adc xchg ficoml insb adc (bad) (bad) (bad) cmp lahf dec outsb lods inc in sbb repnz test repz scas loope jae out xchg jbe ljmp mov popf ret imul mov push dec insb in fcmovu (bad) (bad) (bad) incl ljmp (bad) or loope and negl inc mov loope cmpsl mov cmp adc adc inc and (bad) jg nop adc inc cli iret inc sbb mov xlat jecxz int (bad) (bad) (bad) push repz xor jg sub cmp ja (bad) jg cmp cmc out arpl xlat jae std (bad) (bad) (bad) cld mov (bad) push in mov inc mov sbb lret xchg and xchg xchg (bad) incl push aam push dec out in es out add in ja insb int (bad) (bad) (bad) ljmp xchg sub mov adc mov push sbb push bsf (bad) (bad) lcall dec inc aad push fldlg2 sbb fbstp mov loope or (bad) (bad) inc (bad) int pop jnp popf adc stos lods xchg adc sarb (bad) rcrb jmp inc (bad) lahf jne push sti jmp vpsubq and loopne (bad) (bad) fbstp in lods sbb sub rorl pop test test icebp (bad) (bad) call aad mov repz mov jae dec shrb fcoms mov (bad) lcall imull notl (bad) cwtl lret stos mov pop jge std fnop std movsb out popa out (bad) jg pushl pop mov int xlat es pop sub push xchg data16 (bad) (bad) lcall dec push push adc jne adc push mov xchg jmp mov mov jae (bad) (bad) (bad) (bad) faddp jmp mov mov jo pop mov outsl pop sarl xchg cmpsb pop loop inc push pop mov test pop gs xchg jge (bad) mov (bad) lcall or sbb (bad) jnp mov das lcall js int (bad) jg decl movsl lods dec int3 mov push xor outsb icebp fcmove adc cmp (bad) (bad) lcall ret iret mov rcrl shrb pop pop inc ss jo and (bad) (bad) sti mov icebp inc lods or mov and (bad) adc outsb jl stc (bad) mov (bad) (bad) (bad) jge pop lea imul cmpsb stc stc pop repnz mov ficomp decl xchg sub arpl rclb sub into iret inc dec aad lock and (bad) (bad) call inc pop (bad) sarl xchg negl ja jnp loope leave adc mov cmp pushl ss jb or cltd fldenv cmp leave sub das mov mov mov out mov xchg addb (bad) (bad) jg addr16 xchg xchg inc mov inc cltd (bad) cmp dec mov mov push (bad) (bad) incl icebp ret mov jmp mov pop mov push (bad) (bad) (bad) (bad) incl dec lahf mov cs push ror (bad) push dec xchg xchg jno push pop addr16 mov (bad) jge negl mov mov sti jae fisttp mov (bad) mov clc repnz cmp (bad) (bad) call imul (bad) (bad) mov sti fucomp pop ja pop (bad) lods mov (bad) call xchg push push xor cmp cltd lods rcll dec add inc loope popa ljmp out insb dec stos jmp xor cmp pop xlat fstpl (bad) ficomp lods push fldt jmp outsb out cmp out icebp push dec cs cli push std decl jno dec pop sub xchg data16 jl test sar scas clc and or xor inc mov push inc aad (bad) ljmp lret add sbb pop out jmp jns out push fmul leave pop lds mov insb fistpl popf int3 pop xchg in and push (bad) scas outsl jno xchg adc addr16 pop loopne xlat loop sbb jmp push mov inc xchg cld xor sbb sub sbb sbb arpl adc xchg push imul (bad) (bad) inc xchg (bad) popf xlat insb fbstp sbb dec nop fdivrl lods xor adc movsl or (bad) jmp pop sbb divb lahf fnstsw insb push xor cwtl jbe inc inc fcomip incl and xor stos sahf js inc xchg pop (bad) pushl cld mov mov hlt sbb stos popf ret sub xchg aaa dec clc mov push hlt aad icebp dec add js (bad) (bad) jmp xchg cmpsl sub and arpl fmull imulb cmp pop xor imul ja (bad) (bad) call ror mov sahf sti bnd xor test and sub pop nop inc push dec sbb call inc xor movl dec outsb lret mov out sbb aam fucomi and test mov (bad) decl xor fcoml dec cmp adc and repz or std stos pushl jns stc jle ret mov shrl call loope repz pop jecxz mov cs in sarl inc mov push fisubl pushl mov mov outsl sbb mov int3 insl and dec jl test in (bad) (bad) incl mov (bad) mov jg or out insb lods pusha movsb movsb rcl int3 es hlt ljmp adc mov nop fidiv sub xchg and ljmp fisub fldcw push mov xorl sub add decl jb inc sbb into jbe mov pop pop dec xchg cmp and dec and xchg and (bad) (bad) lcall in lea iret sbb out cmpsl dec out jae mov ret fnsave fistl (bad) decl imul call xchg sti stos lahf scas int3 in xchg test repnz leave in adc dec dec cmp ja jbe mov outsb xchg pop push pop inc je (bad) (bad) (bad) lcall mov dec mov push jb push je cld adc add dec mov iret imul (bad) (bad) jge jno push addr16 jle mov jecxz add fcmovnb adc push and lods (bad) (bad) (bad) lcall int3 xchg aad adc out pop xchg mov ds cmp cmc fst js mov dec dec cmc adc (bad) (bad) dec jno push aad roll or test test imul add pop mov imul pop loopne idivl mov add test push and and cltd pop push sub ja scas adc dec cmp sub dec dec add (bad) (bad) pushl push movsb adc cmpsl or pop daa mov ret dec pop and movsl data16 push addr16 (bad) (bad) call jns cltd fwait les pop add icebp insb out cwtl cmp jne push add sbb (bad) (bad) jmp int imul adc sbb jecxz pop pop in scas sbb subl sub je std push push negb xor (bad) (bad) jg test aas data16 jp mov cmpsl jge (bad) lods jne sarl (bad) call jns mov inc xchg loop mov ljmp xchg shll jbe test push rcl push shr jmp dec pop add mov xchg push aam lahf mov jnp (bad) (bad) (bad) mov mov cltd ss pop scas cli xor lea test mov sbbb add (bad) (bad) (bad) call aad sub jmp out mov cmp mov xor dec sbb out xchg incl sub int3 mov and (bad) jnp jnp xor mov (bad) (bad) (bad) ljmp jns xor aad cs aaa inc mov xchg sahf or repnz pop adc (bad) (bad) (bad) out mov jns in int sti fsubrp ja or xchg repnz pop add pop les dec inc (bad) (bad) ljmp bound pop pop push mov push icebp arpl mov popa sub adc inc and cmpsl cmc pop dec sub dec push xor decl in in (bad) cltd movsb pop (bad) imul push sbb or (bad) call data16 mov rcr cmp sub dec movsb mov inc xchg int xchg stc mov in mov mov (bad) or (bad) jecxz (bad) and (bad) (bad) (bad) ljmp sbb fnstenv lods mov dec pusha push xchg mov sub ljmp mov cld cmp jnp outsb lods rclb push and or (bad) (bad) ljmp gs mov pop xchg xchg popf sub push cmp fwait and (bad) jb fstpt (bad) (bad) inc mul divl jb outsb mov aaa xchg gs insl adcl ficomp push jne (bad) (bad) call sbb dec mov inc cld (bad) int3 ja lods int3 out jae sbb push xchg adc and add (bad) pushl mov mov out push and call push in imul sub (bad) jg popa (bad) mov paddusb push sub outsb lea insl inc mov loopne mov repz cmc lret jge push sub push or cli (bad) lcall (bad) lea sbb push aam scas pop jnp mov pop out xlat mov (bad) incl inc test test sbb pop imul enter and mov (bad) (bad) ljmp sbb ficoml cmpsb sbb stos fs dec aam imul mov mov push and pushf dec add fidivrl pop das (bad) (bad) (bad) (bad) fucomp loop and sub add inc sub icebp sub scas pop imul dec cs xchg dec add test bound adc sub leave dec sbb (bad) (bad) (bad) mov dec (bad) ficompl push les sbb and xor mov test (bad) (bad) lcall cld addr16 dec or fsubl jbe imul jbe xor push (bad) clc dec dec push cmp jnp add (bad) (bad) (bad) (bad) jle in lret (bad) pusha jae gs mov shrl mov rcrl cmp ljmp and imul push test xchg cmp sbb (bad) ljmp (bad) cmc stos adcl dec fisubr jecxz ljmp and and cmp adc jb out (bad) jne dec mov iret push repz dec mov incl dec push xchg lea lea xchg push lock sbb stos (bad) pop adc std mov mov xlat (bad) (bad) pushl sbb jne loope xor sub ret jbe (bad) mov mov cmp out lds int3 fs (bad) (bad) lcall in mov leave cld fucom lea aad rcll test cmp fwait ret (bad) ficom dec (bad) (bad) jg mov loopne push push cs arpl sub lock jb out pushf loope mov cld (bad) pushl mov rcrb rcll roll push fldenv movsl dec (bad) (bad) (bad) (bad) mov lret stc mov jbe dec loope (bad) (bad) pop xor push in sub cli (bad) decl leave add dec fdivrl scas xchg xor xchg cmp bound (bad) ljmp sub bnd pop mov fisub in (bad) ljmp cli and push mov arpl pop mov (bad) (bad) (bad) jmp in das jns jle outsl shrb fidivrl push (bad) shlb mov call inc mov (bad) (bad) lcall inc mov jne mov pusha sub pop pop jbe in xor out data16 call (bad) mov and data16 cmpsl dec outsl or push pop stc inc outsb in in (bad) (bad) (bad) call push orl sbb imull repz (bad) aaa xor cmpsb sti arpl (bad) jg and sub scas sti mov js popa and mov repnz sub mov inc cmp std (bad) (bad) decl pop jp fisubrl fdiv mov out mov dec lods adc aaa cld (bad) mov pop hlt xor sbb ret mov mov and out sub (bad) (bad) (bad) jl jnp fistp sahf fnstcw ljmp jmp out ljmp (bad) (bad) (bad) (bad) dec aam lods (bad) xchg push pop ret (bad) rcl mov dec xchg loopne lods (bad) sti (bad) or (bad) call sar jmp iret outsl jno inc jb (bad) mov (bad) in push xchg (bad) (bad) call pop sub sub cmp fsubp popa mov outsl clc adc imul and popa and push adc (bad) (bad) jmp inc cmp shll fnstsw mov cld test repnz gs sub push push xor dec clc (bad) (bad) (bad) out cld notl ss aam push sub (bad) fnop fsubs inc mov (bad) (bad) ljmp cmc loop mov (bad) fdiv cmpsl mov addr16 xor loop jo (bad) (bad) (bad) fisttpl (bad) movsl int3 jb mov daa mov sbb mull pop (bad) (bad) (bad) incl icebp (bad) jecxz jb mov aam sub call xor movsl fst rol cld (bad) (bad) pushl mov (bad) imul dec mov stos xchg and sbb out fnsave jl (bad) (bad) call mov stc mov jmp shr mov ljmp outsl int mov jns sarb pop mov lret mov (bad) call sub js scas addr16 out mov mov adc lcall mov jae fnsave adc movb je dec jb jno out sub xchg jg jmp popf lahf fstpl insb imul mov sbbl (bad) push ret outsl imul mov fisttp daa dec inc test lcall dec jb and rcr (bad) sub ljmp es (bad) (bad) call in mov insl ret les xchg mov mov cltd test push (bad) (bad) push gs inc testl mov sti andl dec jp ret loopne xor pmaxsw test cltd fldenv stos mov (bad) sub add xor mov cmp fdivr (bad) (bad) dec out (bad) leave cmpsb lods aaa xor add imul imul xchg jmp sbb sbbb push loop cmc xchg pop (bad) push (bad) jg (bad) ficomp mov fildll push in inc adc inc (bad) (bad) (bad) (bad) (bad) out or cmp into loop movsl ljmp outsb (bad) call je imul jnp sbb mov xor mov out mov mov cltd mov jns xchg in fwait mov pop out arpl sub jle movsb adc (bad) and cmc inc xor loope mov mov fisttpl inc and mov (bad) call sbb ret aaa pop insb xchg fldcw lcall cmp mov pop addr16 xchg adc pop add lret jnp mov dec mov negb movsb aaa jae dec out mov push inc mov (bad) jmp aaa out cmp es in dec rcll or push scas jle push mov (bad) (bad) (bad) jmp adc sti xchg outsb cld mov (bad) mov into sbb mov test pop loopne pop and pop inc push movsb int3 pop lods in gs ljmp add sub jg,pn xchg jo mov pop fsubrl cld pop mov loop and mov in mov test xchg rorl (bad) (bad) lcall pop ja enter icebp ja jl in call popf jae mov fcomps jmp arpl std imul pop cmp scas pop push jecxz xchg mov lahf setle stos (bad) mov cmp mov iret mov mov les (bad) (bad) (bad) call jmp stos imul sub lock inc mov (bad) decl ficomp fs fimull outsl jb,pt mov mov jne insl pop out outsl cs (bad) decl jb jmp xchg jmp push xor push xchg fistl mov (bad) (bad) ljmp aaa test inc test addr16 out add mov sbb lcall fdivp lock ficomp ja xorl outsb loope xlat sbb xchg inc ss lcall push dec or (bad) (bad) (bad) in stc pxor jbe fnstsw imul add mov adc inc gs pop icebp stos lcall pop popf mov add test andl mov in pop into in push jmp pop pop jl mov jb leave arpl adc jno (bad) mov pop ret dec arpl das mov shlb cmc (bad) (bad) (bad) (bad) lahf in add out jge push mov fcomps mov cmp decl pop pop xchg fstpl (bad) int3 insl pushf out mov repnz outsl pop repnz (bad) (bad) call sub xor push and xor sub in pop mov dec imul call xchg pop xor mov inc mov pop (bad) (bad) (bad) jmp sbb xlat out and insl in pop in fidivr mov mov mov cli enter lea lret imul je sub lcall idiv call (bad) (bad) (bad) jmp ja fimul ja pop cld pop fist addr16 pop mov dec enter (bad) (bad) call push cmp inc stc insl adc outsb mov mov (bad) jg inc int3 fdivrl adc xor aad jmp mov pop (bad) (bad) ljmp sub mov adc out bswap fist daa mov lret dec and (bad) (bad) decl mov popa mov cmc int pop jae ffree xchg jo fimul rolb push cmp jmp pop sbbb sub inc push lock fisubl (bad) sbb (bad) (bad) ljmp push mov push test push (bad) loope std inc and je addb fldt sbb dec sbb or movsb shr js popl lods inc sbb (bad) (bad) (bad) (bad) jge fsts cmp push sahf pop xor stos push inc pop jbe mov in into inc stos push push sub and pop icebp lcall sub lds in mov pop mov xor or (bad) (bad) lcall push fadd addr16 pop popf cmpsb fucomi push mov mov jl (bad) (bad) (bad) jmp cwtl (bad) or std repnz addr16 jns insl mov enter sub dec (bad) (bad) (bad) (bad) out outsb sub jns sub cmpsl leave jle pop jb aad jbe sbb int outsb (bad) (bad) mov cld lret jp movsl fdivr repnz orl and mov mov (bad) (bad) jmp add lds mov cs cmp movb fdivl (bad) ljmp cli lcall xchg cmpsb adc xchg leave ljmp lock cmp push mov jns cmovge jmp jmp and mov and jb pop (bad) mov mov (bad) (bad) (bad) decl les outsl sbb mov rcrl (bad) gs (bad) in push and push std decl or pushf jo es pop aam jno push mov fs in jg (bad) jmp (bad) push jg ficompl pop sbb fdivl std xchg or inc (bad) jg decb outsb sbb ret mov js (bad) (bad) mov clc push fidivl pslld int outsb loopne mov (bad) mov outsl mov xchg (bad) (bad) (bad) pushl pop mov in and inc loop pop pop and mov (bad) (bad) (bad) incl jecxz push and fs mov or int cmp mov (bad) lcall inc adc notb aas ja insl fnstcw in leave dec stc ljmp (bad) ljmp jns pusha dec jecxz out fidivl push dec fdivr sub add sti pop js cmpsl cmpsl or inc repnz (bad) mov jae out sbb (bad) dec daa mov and xor xchg rorb movsb icebp pop ljmp xchg enter decl sbb mov cld mov mov subb mov mov std (bad) decl in out in dec les popf out sti lcall adc (bad) (bad) mov cli cmpsb pop test popf sbb add clc or jo js jnp (bad) (bad) pushl cmp cmp push mov imul fs fcmovb sbb pcmpeqd cmp mov (bad) inc dec stc mov mov or loop mov sub push (bad) (bad) (bad) lcall xchg xor sub nop add inc jecxz aas mov insl sar (bad) cmp adc mov push mov cmp aam sub or aam cli mov fildll lahf lock jecxz sti jg sti push dec cld xor cld or loop cmp movb scas clc call push jge jge mov push hlt out jmp jmp je vminsd decl xlat stc jmp fdivs (bad) mov insb mov (bad) mov add stos xchg xchg cmp push mov or (bad) mov sarb adc push xchg push repz in div in iret aaa jb sub push fisttpll cmpsb mov mov stos adc sub test push std (bad) (bad) (bad) (bad) fxam fidiv je,pn mov sub inc pop ljmp sub push test pop cmp aam cmp fsubs lcall xchg inc sub (bad) jg jmp jae jp aad inc xchg in push pop call (bad) call lahf lds sahf pop in jbe div or xor sbb clc call mov mov sub sub lds mov (bad) jmp ret stos dec mov xchg xor movsb add nop add fnstenv (bad) ljmp sub push add xchg movsl bound mov dec dec xchg cs sar (bad) decl lods cmpsl les mov xchg outsb (bad) in xchg jge aad outsb sbb sub fistpl and (bad) (bad) ljmp mov and push pushf mov out ljmp gs ja (bad) (bad) pushl mov out cs and mov push or push or mov and mov in (bad) (bad) (bad) decl xchg scas test pushf (bad) mov jecxz add push adc fwait pop push jb or and (bad) dec (bad) (bad) out xchg stc int3 fwait inc into fnstsw push mov pop leave mov (bad) (bad) jg dec pop mov and pop call and adc (bad) (bad) (bad) out dec data16 sub inc pop mov pop xchg fwait scas jnp or mov xchg cmp fsubrl dec xchg sub pop loop leave adc mov mov dec lea push ds add (bad) incl int3 mov push fidivrl bound sti adcl (bad) (bad) (bad) jmp jmp sub jns adc (bad) xchg out cltd cmp loop jb (bad) (bad) jmp pop xorl outsl or dec xor sub pop loop (bad) (bad) (bad) call daa xchg ret out xchg fdivrl cmp push sahf scas adc divb or rclb (bad) ljmp popa in dec mov dec and sbb mov fnstsw fstpt in insb mov (bad) (bad) (bad) fsubrl and or fidivl popf frstor pop mov stos rcpps jmp mov mov mov pop jl push pop fs (bad) ficompl pop jns sbb push mov mov and pop std nop mov dec push adc imul gs (bad) (bad) (bad) lcall in lods jp inc pusha pop dec adc jns mov and ja mov arpl (bad) (bad) (bad) fisubr dec bound mov les cmp adc adc fisttpll cltd (bad) (bad) pushl data16 inc sbb mov cmp add jmp (bad) (bad) pushl fldl pop std pop push (bad) xor pop and sti insb mov (bad) lret negb dec cld xor mov fnop (bad) out cmpsl (bad) (bad) (bad) jmp repnz mov mov mov jecxz jns insl mov xchg fisttp mov fwait (bad) (bad) (bad) (bad) jge (bad) movsb pop (bad) xor and mov aas jne dec push inc pop inc pop cmp mov and out pusha mov jmp (bad) maskmovq idivl xlat xor out adc (bad) jmp mov sub or sbb dec out add imul int sbb cltd cmp test popa test fst ljmp mov fldt jp loop jp loop hlt (bad) jg jle add mov jge push mov testl (bad) (bad) fstpt fcoml xchg movsb repz lret pop iret outsl imul sti mov (bad) jg lcall dec (bad) in stos (bad) in fldenv pop sub js icebp lcall mov mov ja iret xchg addr16 dec (bad) (bad) fbstp adc imul idivl dec mov (bad) test in push (bad) (bad) (bad) decl ret aam addr16 dec jb inc cs daa or sahf js dec leave cmp insb jns (bad) (bad) (bad) (bad) (bad) fldt lods aaa or xorl imul fs and sbb (bad) call sahf stc jnp (bad) repz test aam mov cmpsb mov (bad) (bad) lcall inc outsl movsb lcall jmp sahf and push or sub (bad) (bad) fistp adc clc ficoml push lahf mov gs (bad) (bad) jmp arpl lcall mov mov xor int3 xchg (bad) (bad) mov clc sub fwait sbb pop sti mov cmp sub dec (bad) (bad) (bad) jg pop js mov push cmpsl test jno sub dec out mov std sbb scas jnp (bad) (bad) (bad) jmp cld movsl mov pop dec mov fs mov sti and sbb mov mov das clc (bad) fstpl sub out daa rol sub das xchg dec (bad) aam sbb pushl push xchg xacquire mov and add cld (bad) fdivrs dec pop xorl stos sbb in lret (bad) (bad) pushl xor lss jnp insl xor mov jmp lods dec mov stos add pop pop pop xchg adc popl jg out mov mov cmp or (bad) (bad) dec shrl jp popf mov mov pop hlt out push dec sbb (bad) pop jg fcomip jne pop addr16 mulb dec jno icebp jnp mov (bad) (bad) (bad) decl imul inc and inc mov cmp loop (bad) dec addr16 fwait (bad) ljmp jns pushf cld dec sub int push imul das cmp lds arpl fnsave movsb xchg cltd mov cmc (bad) decl cltd stc mov xchg jns je mov jnp or sub lcall ljmp popa lea lock mov cmpsl in fdivrp (bad) (bad) (bad) (bad) push cmpsl and ljmp mov mov cmp ret fistp ds xorl lret cmp into rep test out jp mov fdiv or or inc divl fistp (bad) (bad) in lds insl cmp test in pop test sub push (bad) dec outsl cli (bad) (bad) jnp adcl pop jecxz jecxz xlat push cmpsb (bad) into lret fistl jle mov (bad) (bad) incl dec jne mov or out mov pop xchg adc sbb xchg rolb xchg jl xchg (bad) jg pushl aad or mov and xchg adc lds call mov fwait pop test out inc cli mul decb (bad) dec pop jg cmc (bad) (bad) (bad) in xor fadds jmp add mov std sar arpl daa mov pop outsb mov push xlat cld outsb push inc dec in dec repz stos int test cmp mov inc (bad) push into std mov push outsl or jno in bound xchg add ljmp ds or test xchg outsb sahf iret fwait cmp cmc inc cwtl and aam (bad) (bad) call insl fwait push data16 inc sub add dec pop jg daa (bad) push test adc popf xchg clc incl (bad) fdivr addr16 inc pop and inc mov sub repz jge mov ljmp ljmp (bad) jecxz scas shr das in (bad) (bad) (bad) call jg call pop xor dec mov cs jns xor cli das cmp enter (bad) (bad) (bad) incl int out or (bad) xchg mov push loope jbe sub call mov adc loope xor add iret cmp fbld fnstenv sub pop mov int mov ss jno mov lea ficomp inc popa push mov mov add mov cmp xchg mov ret (bad) mov jae xor js daa xor sti movl loop (bad) ljmp sbb ss scas mov lods push inc roll mov (bad) (bad) mov push xor in jne jne xchg fiadd mov and jno mov (bad) incl cmp or xchg in lahf cmp cld (bad) aaa std (bad) lcall ficoml out lods sbb mov into ljmp test in pop icebp push daa and sub dec push test fiaddl jle bound jp (bad) jmp testl jmp out ret (bad) dec jne adc popf mov idivl mov imul mov mov fldcw imul incl gs int3 rolb arpl jnp imull or mov divb fdivrl or into or lcall or stos inc inc sbb and mov xchg mov fstl (bad) mov ljmp mov outsb imul insb lcall xor (bad) (bad) lcall pop imul cwtl fcompl fbld mov pop sbb add pushl std mov jae (bad) mov in (bad) fistpll aam in int mov ss sbb clc (bad) ljmp (bad) int3 (bad) in jge mov insl push jae jbe sbb inc or dec push ret (bad) (bad) decl nop mov jbe fnsave out sub fisub mov dec push faddl sub in cli pop (bad) adc jle jbe ret cmp adc gs scas imulb (bad) fcomip decl js sbb ret sub dec add lods movsb dec mov leave sub (bad) decl dec pop les fbstp ja jl aaa pop outsl sub scas add in or fidivrl addr16 rcr push sub mov idivl fidivr cmpsl jns or adc cli cld push jmp std mov jno fucomi mov jecxz push jecxz leave das mov dec (bad) (bad) pushl clc dec rcrb in dec mov test aas cmpsl xchg cwtl dec lods jecxz lea lret (bad) (bad) jg fmulp in out inc and mov jbe mov xor test (bad) (bad) incl push stos mov rcll pop dec mov mov scas inc aas popf push lock mov (bad) ljmp xor xor dec or lods stc paddusb outsb gs (bad) mov out je pop xor cmp mov dec jl mov and dec (bad) fistl nop push dec dec xchg add negb mov nop (bad) insb mov pushl and xchg inc push ja pop sub icebp (bad) hlt jo mov cli (bad) ljmp (bad) (bad) fwait xchg and fisub mov mov mov (bad) (bad) ljmp xchg push pop fwait (bad) sbb cltd arpl (bad) and hlt xchg and lea xchg mov out inc cmp (bad) (bad) (bad) clc adc (bad) cwtl (bad) sbb or loop test jns push mov add adc mov mov aaa cld call call lcall int3 inc xor (bad) jecxz mov (bad) jmp push mov jmp rol add or mov (bad) (bad) aas rcrb out fstpl nop push jo xor popf imul (bad) cmp out xchg push cmp sub outsb test nop push inc test pop call sbb dec lcall pushf xchg push (bad) push sar lcall lock mov in in mov mov xchg (bad) (bad) (bad) (bad) pushl sub adc mov mov sbb inc pop loopne xlat jae pop aam xchg loop jne sar (bad) (bad) jmp imul lret and and icebp adc dec test mov stc (bad) (bad) (bad) lcall cmp aam jp push sub xor push lahf cmp push pop push push add (bad) (bad) cmp stos cli sbb movsb movsl xchg mov (bad) mov arpl pop sub sbb pop (bad) (bad) (bad) ljmp inc push jge cltd gs jbe push inc lret add xchg or jne mov incl stos mov ffree mov push sub xor pop push jne frstor sar jmp mov insl lret insl int3 cmpsb je pop (bad) mov ljmp jg dec inc lock sti jae cs mov and (bad) mov xchg mov adc xchg dec ljmp (bad) (bad) (bad) fnop push cmpsb ds (bad) push inc shrl dec push lret movsl mov pop (bad) fsts (bad) lcall dec mov sti test jbe pushf xor xor xor adc (bad) push (bad) (bad) jg and ja pop cmpsb rclb sbb mov into sub lods call cld lcall or mov ds jp mov mov test adc jno (bad) (bad) jg inc sub mov fstpt fnclex xchg inc push dec mov jne gs (bad) (bad) (bad) ljmp mov cmpsb das jecxz mov jbe mov adc and stos or incl insw and ljmp fbstp xchg lock (bad) jg cmpb xor dec xchg sti jl lods scas movsl lahf in sub (bad) (bad) ljmp xchg dec sub adcb or jge stos outsb xchg shrl pop (bad) scas clc push test mov popa rep movsl pop inc inc add (bad) (bad) (bad) mov into dec rcrl adc clc mov push sbb (bad) mov or jmp xchg lea test inc nop pop xchg enter xlat cli jnp pop dec (bad) mov add data16 dec imul jmp hlt push (bad) (bad) ljmp (bad) std mov or push and adc sub inc sbb (bad) (bad) (bad) jmp pop (bad) add mov lock fcmove lcall lahf vpmuludq stos (bad) (bad) decl xlat std pop ds scas lret mov jb inc (bad) (bad) (bad) jmp inc sub jg loop and push mov iret cmc stc and or xchg rclb dec inc arpl (bad) (bad) call fs movsb mov cwtl or sbb dec ds pop imul fistpl (bad) incl dec test (bad) mov push mov mov repz xchg push push sbb mov outsl mov fs pop xor ljmp pop pop inc stos (bad) jmp mov hlt mov push mov jb xor push scas stos mov (bad) (bad) lcall nop cmp arpl adc push insl loope jecxz ljmp nop rcr (bad) (bad) call xor int cmp jmp add jmp cmp push and pusha inc (bad) decl insl push test pop movsb subl ja repnz sub (bad) (bad) call jne sub xor push mov xchg push test ljmp (bad) xchg loop (bad) (bad) lcall nop push (bad) mov les clc and lods jne push addb and jnp (bad) (bad) decl lret mov add and mov mov (bad) (bad) (bad) incl int3 mov or inc push xor xor ror jbe int3 nop cmpsb (bad) out ss or and adc inc fdivr das sar adc ss push xchg xchg inc or sarl jns (bad) (bad) (bad) (bad) cmp fcmovbe loope dec adc fdivl aad add dec add in lret cld adcb (bad) (bad) call leave push nop dec je adc xor lahf les adcb cmp sbb (bad) mov mov xchg adc stos scas movsl dec and xchg lcall sub mov adc mov imul and movsb sbb sar (bad) jmp or cmpb cs dec pop jns rcrb dec inc lret sbb mov cmp xchg or ror cmpsl jl adc out mov push dec xchg (bad) loope out mov cmp xchg (bad) (bad) dec jecxz js aam xor (bad) repnz adc stos fdivrs sbb jmp jo dec jmp mov inc mov (bad) incl add and inc push loope or and call pushl dec sbb mov (bad) (bad) xor pop subl (bad) (bad) incl mov and mov push mov ficompl mov outsb rcr aaa (bad) (bad) (bad) (bad) jnp outsb insb in scas dec xchg mov mov and (bad) shl test js clc popa (bad) (bad) (bad) pushl inc mov lods and scas out movsl out jbe mov sti inc fdiv add push cld jmp add mov push cmp outsb and mov pop dec in cltd (bad) (bad) (bad) jmp mov fistp scas outsl in fs ficompl out jmp mov (bad) (bad) decl das sti rorl imul push sbb rolb pop imul cmpsl ja push fsubrp sbb lds jne popf addr16 push in lret imul (bad) (bad) (bad) jg insl insb pop dec cmc mov in stos sbb arpl fwait lcall daa mov adc (bad) (bad) (bad) (bad) mov mov jnp (bad) fisub jo mov jmp sbb and (bad) ljmp rolb outsl and iret sub lret pop sbb daa daa fcomi ja jb fldlg2 rcrb (bad) (bad) (bad) call fs dec in int3 mov fdivs add xor xor (bad) ret mov call jne dec ja inc jbe data16 jmp mov (bad) dec scas mov addl (bad) (bad) ljmp jns into ljmp popf mov sbb sbb jmp (bad) (bad) call sub adc sti das out pop cmp (bad) (bad) cs mov jl adc pop scas mov cmpsb dec adc (bad) jae stos xchg add dec or lcall (bad) (bad) (bad) mov insl mov mov (bad) lds and outsb sub movsl mov loopne dec add sub jb cmp sbb incb das pop outsl pop movsb in dec (bad) (bad) cmp xchg cmp jl fwait pop js jge (bad) aas adc clc mov test (bad) out clc jmp xor mov sub add adc (bad) (bad) pushl xchg idiv idiv xchg jle pop cmp ror lret ljmp mov push or mov testb ds xor mov jmp mov jp icebp push scas fwait rcrb insb dec sbb and (bad) (bad) jmp cmpsb push ret iret jl stc insl icebp fbld test (bad) mov outsb fdivrp aaa fcomps sahf inc dec push jecxz cli call xor lock pop push mov fcoml (bad) (bad) (bad) mov lret test xchg lahf insl jbe in aaa cmp arpl jnp (bad) (bad) (bad) ljmp test les mov lock outsb movsb mov lcall (bad) add fidiv (bad) lcall xor pop lcall inc add dec sbbl imul inc mov (bad) mov lods mov addl js aam std jmp (bad) (bad) push scas and sub mov xchg jg cmp jmp mov pop mov xchg daa mov and adc fwait mov lret jnp (bad) mov fdivrl orl icebp aad mov andl mov dec xor xchg jnp fsubp sti mov int jbe (bad) dec jmp pop scas dec dec pop and mov adc push loop xlat or (bad) adc fbstp fidivl out push dec sbb mov addr16 movsb (bad) (bad) (bad) dec fs aam inc dec inc inc sub or orb jl fnstcw out jnp enter (bad) (bad) call (bad) or and lret mov sub add inc data16 mov adc cli stos (bad) (bad) (bad) ljmp pop xchg and sub (bad) lods jb and popa cld in arpl push (bad) (bad) (bad) jl out mov mov out push mov bound jno pop ret ss sub lahf clc (bad) (bad) (bad) jmp and std (bad) cmc push enter xchg jbe cwtl (bad) cmp sub insb pushf mov (bad) (bad) (bad) inc sub fucomi push leave loope addl jmp stos inc stos xchg jl out mov aas mov fdivrp mov fsubrl jle jo imul aam fs mov add paddsw jmp cmp (bad) ljmp shll sub cmp insl out (bad) jecxz,pt (bad) mov jnp (bad) (bad) call in dec rcrl push movsb (bad) pusha decb je movsb mov mov jl xlat mov cli loop (bad) popa aaa std (bad) pushl push fwait test pop outsb inc push (bad) mov xchg (bad) (bad) (bad) call mov out mov mov sub outsb mov cwtl out mov out roll push dec or sub nop test ss mov outsl dec aam pop xlat lcall outsb aam in es mov fcompp xchg loope (bad) (bad) fstps cmpsl test in popf mov ds lods test lea and sbb cmp (bad) jmp jmp jnp xor (bad) (bad) (bad) jg mov insl fcmovu addr16 adc enter mov mov xchg and jg outsl push mov inc in stos xchg (bad) imul out std (bad) ljmp push dec scas push adc sahf or push addr16 push jbe sub xchg pop inc test outsl jo out jle scas les pop lret in and jno jne push call cs imul xlat push ja push clc (bad) (bad) ljmp (bad) hlt hlt mov adc mov cmpsb (bad) dec jmp mov std (bad) (bad) mov push ret fcmovnb sbb fs mov faddl and mov (bad) (bad) incl jne sbb dec cmc cmpb xchg jbe jo out (bad) xor ja mov mov in lcall sub data16 rcl push inc sbb (bad) (bad) ljmp mov bound inc pop mov push std ficomp jge (bad) repz rcrl rcl neg (bad) jg ljmp inc arpl int iret leave fs subl cmpsl inc hlt out push in adc and (bad) call dec pop push xchg cmpsb int3 mov fsts fmuls mov xlat sti xlat (bad) (bad) (bad) ljmp fcomps mov dec jns fxch jno aad mov inc sub scas sahf mov pop add jge outsb add int jns imul fistpl pop in jecxz push fdivr (bad) pushl popa jl adc push in daa xchg dec out scas cmpsb or insl fist xor jg (bad) js fldl xchg in cli mov sub push je enter (bad) popf popa (bad) decl loope mov xor xchg dec inc inc dec mov jl jmp cli pop cld xchg lcall mov js movsl icebp loopne test insl imull jns sti cmp cmp mov (bad) sub (bad) (bad) ljmp aam mull lods gs adc push dec lahf nop mov (bad) mov (bad) fbstp repnz out xor aad out jns mov xlat ds lods jg (bad) lcall mov adc ds repnz cltd pop sub lcall (bad) jbe sbb cmp push mov (bad) (bad) ljmp rcr sbb jae sbb lock and push push aaa fisubr jns (bad) (bad) jmp jbe xchg lret add lea and xchg dec (bad) incl push ljmp inc fwait jb inc fsubs sbb loop pop inc mov mov inc ljmp add cwtl sbb push fwait lods jnp add (bad) jmp int (bad) push jbe arpl in cmpsb jb xor jmp (bad) (bad) (bad) jmp cmpl notl xor lea cli sbb fs sub sub mov aad inc (bad) (bad) in (bad) cmp jecxz scas je inc ficom inc or rolb lock movsl mov fucom pop js (bad) (bad) ljmp and xchg aad cwtl imul inc daa sbb iret sub push ret sbb inc jb std (bad) (bad) fildl mov pop or xchg and jbe xchg fsubl (bad) call sbb loope or outsb dec jmp (bad) out repz xchg lahf jmp (bad) fcomip fucomp cld push hlt aas mov in scas fstpt ss call adc (bad) push push push add out lock jns mov jecxz aam (bad) imul adc lcall jo jecxz xchg dec add rorb mov dec repz add jmp or sub jecxz mov cs ficompl or push sub (bad) call mov dec loope inc push cmovnp xchg fwait xchg test (bad) (bad) push adc decl pop or insb push loope lcall mov jg (bad) ljmp xchg dec pop jge push (bad) cmc ret insl je aad movsb jo pop (bad) mov js xchg or mov push mov notb (bad) (bad) dec divb push add pop mov xchg mov sub in and (bad) incl jbe idivb dec push or dec ja pop idiv lcall cltd pop out jl fmulp push push in jns mov add or leave push push (bad) (bad) pushl pop jp jbe dec dec loop out (bad) sub pop push inc lcall add scas loope cmp xchg mov xor loop pushl mov pop xor or and andl (bad) (bad) (bad) jmp mov sbb data16 jge xchg fmul or int mov xor mul add cmc xchg push pop ljmp scas push lods (bad) xchg int3 mov sbb fsubs xchg (bad) (bad) (bad) clc test (bad) fmull xchg pop mov cmpsb test fidivl shr imul (bad) pushl xchg imul xor xchg (bad) roll jge mov (bad) (bad) lcall sub mov clc sub sbb lods iret (bad) in das pop nop adc (bad) ljmp mov sbb dec jae lea lock imul inc jg mov rcrl mov inc rcr cli sbb icebp lret lods push push imul jge insl mov fstpl ss and sbb mov mov (bad) (bad) lcall ficompl mov (bad) test stos stos stos xchg mov movsl in lcall call inc or jge divb jae and (bad) (bad) (bad) jg adc push addl dec popf inc out dec daa sbb outsb adc xor loop (bad) call jle decb aad psrad sbb iret push and add xor fidivl mov push mov ss mov fnstcw xchg aam adc inc sub (bad) (bad) (bad) js mov ror xor aam add in rclb jp mov ret dec (bad) (bad) call push push inc sti cwtl cld jg push xor jp dec dec test mov fisttpl xor add ds or aaa mov icebp or rol clc sub lcall (bad) divl mov sub pop inc (bad) (bad) lahf push mov push (bad) (bad) (bad) (bad) mov jo test push cmpsb lcall mov sub jge jge jae insl call ljmp jg cld (bad) mov add jmp dec stc adc hlt mov inc jl (bad) (bad) (bad) dec lea mov dec in or jl lcall ljmp jp mov (bad) decl nop (bad) sbb fptan aam dec fistpll sbb lcall inc add arpl (bad) (bad) (bad) jmp lret sbb sbb dec pop ret add test xor jl sbb (bad) (bad) (bad) jmp iret xor shrb xchg ficoml sub pushf out lods xor les (bad) or (bad) (bad) (bad) pushl dec aam repnz or mov or push add imul mov (bad) (bad) jmp movsl outsb dec in push repz bound enter mov xor movsb (bad) (bad) (bad) incl rorb jge out fistpl pop dec sub scas dec mov adc adc lods add push jmp shll cmp jl xchg (bad) (bad) (bad) jns mov stos aam ret cld sub lock push adc jl add loope inc push lcall lcall add push cmpsl mov mov dec xor aad ret imul (bad) (bad) jmp pushf sub mov adcl sub mov jg push sbb (bad) (bad) ljmp insl aas jno adc push push push inc rol sub mov in lea cld decl arpl sbb push inc pop sbb cmpsb imul or in outsb repnz lret addr16 jl mov inc or subb ljmp insl fwait add dec add sti mov movsb aad shlb xchg pmaxub mov mov test inc xor sahf xchg out (bad) (bad) (bad) lcall call jmp pop or inc rcl mov (bad) fcompl or stc sar (bad) (bad) incl pop adc sbb inc and scas les xlat into xor dec (bad) mov add decl pop mov mov sub pop sub jno (bad) (bad) pushl inc adc in mov in add mov push cmp ja inc xchg jne mov (bad) (bad) pushl mov jne shrb (bad) (bad) fwait sub jne fisub add popa add (bad) decl adc jecxz lcall shll (bad) fisttp in js and ret sbb or mov into fs (bad) (bad) dec ret mov sub (bad) popf mov fildll cmp pop imul decl scas mov popf iret inc inc les data16 cmpsl mov js dec (bad) jg mov xchg lcall add enter jmp cmpsb adc pop movsb adc cmp pusha dec mov (bad) testb insl test lock adc mov inc mov jmp inc shrb cli (bad) call imul lock jne inc call dec decl push hlt lock fldl hlt (bad) (bad) (bad) (bad) clc out cwtl insl pop out dec pop mov inc fdivrs xchg insb jne js inc ret push je ja (bad) (bad) cld xor rcr cli jp mov jae decb or shrl (bad) call pop sub and stos cwtd sbb push mov std (bad) jg lds scas enter (bad) or pusha sti test push imul mov sbb lret movsb lea push mov jmp (bad) (bad) (bad) (bad) in sub add mov cmp inc aad lods add pop mov aas mov adc (bad) lcall mov (bad) ljmp cmc dec insb lds xchg in in insl cmp cmp jno and cwtl adc int push pop dec sbb popf push outsl clc call dec cmp mov adc test outsl jbe jbe ret enter (bad) (bad) (bad) inc and and imul (bad) sub pop sub ja or (bad) (bad) (bad) (bad) clc ss into and loope jno sub mov sbb push push stos sbb (bad) sbb sahf xchg (bad) aam lods in repnz cmp cmc fmulp inc inc dec gs loope (bad) fcomip adc rcll cmpsl xor popa ds (bad) (bad) pushl and dec fildll popf xlat (bad) fistpll mov xchg sahf mov push cmp cmp adc and in imul iret jae fsubl int lret adc sbb xor and and cltd aad adc or jecxz push dec push cmp test mov (bad) (bad) lcall out rcl inc add mov mov loopne cltd out in das fwait dec xor lcall and cmp mov sbb aam ret incl aas mov dec clc mov xlat fsub test movsl lcall fdivrp (bad) (bad) jg adc add lds test fwait cltd add xchg inc jne (bad) (bad) pushl mov das shrl push dec aam ret les je gs and mov inc test aam push add pop insl or push sbb clc mulb ret or hlt (bad) add sbb stos add fidivl je imul adc jge gs (bad) (bad) pushl jne test stos in pop gs pop dec mov mov and jne dec inc mov mov xchg mov call lcall inc jae sbb lods jnp (bad) (bad) (bad) jmp adc pop jle mul xchg aam dec push mov jb lret or cwtl pop mov or pop sub dec in mov push jns xchg inc into out adc (bad) jg stos shlb mov push test (bad) loope push stos mov xchg call xchg jns cli sub cmp adc (bad) test mov add stos in jp xor cld (bad) (bad) (bad) jmp mov js (bad) push sub fwait jp mov pop mov inc movsl jno mov fild mov inc sti mov dec adc jbe (bad) (bad) decl or xor les outsb (bad) aam testb test testb (bad) (bad) incl stos (bad) (bad) enter inc or enter inc mov sub sub (bad) (bad) (bad) pushl clc xchg pop and cmpsl loop gs mov or mov mov repz mov mov fsubrl push cmp movsb lods ret fs imul jmp and jbe decl jle sub ja push sbb jo movsb push xchg repnz (bad) (bad) jmp sbb mov arpl add scas lcall xchg jne (bad) (bad) fisttp clc test mov push insl hlt cli push and insb jl (bad) (bad) ljmp cmp xchg inc jmp js xchg jb movl xor lea popa xchg imul (bad) dec cmpl arpl mov gs sub xchg xor mov (bad) (bad) (bad) fildll mov dec insl xor pusha xchg test push mov lret inc push (bad) (bad) (bad) call and jb imul mov cmpsb out and scas insl loope sub lock ljmp dec adc aas shll push mov sbb (bad) jg and push (bad) mov (bad) loopne mov push inc mov push mov (bad) (bad) (bad) decl xchg ret mov xchg pop mov ret int3 (bad) lock dec shrb pop push pop jb (bad) mov fsubrl imulb mov add lcall lea adc scas lods pop add les stos jp outsb fstl ret mov (bad) (bad) inc in int3 push rcl aam aam cmp enter push (bad) push xchg mov push popa xor int3 iret (bad) (bad) (bad) jmp pop inc imul fucom mov in pop jecxz fsubrl and push add xor push xchg pusha (bad) (bad) jg dec cwtl and mov jmp scas or adc or add inc pop lret dec push push push movsb sub mov fcomps fnstcw jne jl fcomps fdiv cmc inc push cld (bad) (bad) jne xlat jecxz jne cld lcall ja cmp outsl dec roll outsb push cmpsl jnp lods xchg aam (bad) (bad) (bad) jnp daa nop fdiv jmp pop or cmp cmpsl sub lret push mov mov int3 jnp aad ljmp push notl rcr fistp inc xor xchg mov lock imul (bad) jmp into mov fwait push xchg lods cmpsl cwtl xchg je imul ja mov lret imul call std push jnp bound scas (bad) incl call out pop push (bad) out push ljmp jmp mov test ret fistpl xchg insb idivb fcompl hlt ss push (bad) (bad) incl mov cmp mov push outsb in fcompl xchg outsb popa cli pop stos mov mov incl (bad) outsl cmp jne fmul fmulp xchg sbb jnp enter push ss jno (bad) (bad) (bad) (bad) cmp xorl jbe into in pop leave imul mov scas push into imul ljmp cli shrb and inc cmp mov insb cmp jb cmp jb (bad) (bad) cmpsl xor (bad) sarl pop leave sbb inc imulb fistl js cs (bad) (bad) (bad) jmp ja cmpsl xchg arpl scas push jmp mov in cld in ljmp insb mov in or cmc (bad) ljmp add jg sahf adc fucomip dec shr into ss mov sahf cmpsl sahf insl rcll hlt (bad) lcall or adc outsl mov jae fcomi push scas cltd adc xlat test (bad) cmp (bad) sar jg sub mov sbb imul mov jbe pop (bad) (bad) ljmp push es xchg and in (bad) mov sub fwait mov test or push jb into and (bad) (bad) ljmp pop xchg ret xor jbe pop je rcrb les jg icebp dec idivl cwtl fcom in mov je rol lcall decl ret cmp ficoml enter gs test (bad) gs mov mov loope xor pop sub (bad) (bad) decl lds addr16 mov inc sub loop add sti xchg lret cmp inc je (bad) lcall (bad) jne fsubr sub pop inc outsl or popa xor mov (bad) mov test and adc outsb (bad) stc dec inc and idiv fwait ss (bad) (bad) (bad) out and addr16 jp aam mov iret fistp xlat leave in mov mov mov (bad) ljmp fldt notl push lods push scas insb inc test loop sbb in push mov push aad (bad) mov sub out popf xchg sbb xchg int xchg mov push (bad) (bad) (bad) (bad) fucom fs loop bound sub inc arpl pop das fmull imul cwtl push out (bad) (bad) pushl fucom cmp movsb xchg dec icebp jno mov dec mov ja push aad mov scas mov xor (bad) mov iret mov arpl punpckhbw fnop aad sbb pusha jbe (bad) aas mov jmp mov fsubl cmp jnp lahf jmp fistp stos jmp sbb push fs cli (bad) pushl movsb xor (bad) imul jl aad adc outsb cs ds repnz out pop add dec (bad) (bad) ljmp outsb (bad) idivl fcomps mov insb xchg insb xchg sti (bad) lret pop clc adc lcall sbb and jge jmp mov ret shl ja (bad) lcall cmp loop enter clc loope fidivr jecxz rcr sub repz lret mov aaa fsubp (bad) out push scas jmp mov pusha mulb aad cmp mov xchg sti mov xchg push arpl (bad) (bad) (bad) incl jmp out fidivr push push ret xchg xchg repnz movsl jp pop insl xor (bad) dec xor and (bad) push push out jge faddp mov iret into xchg fwait xor push aaa add popa mov xchg jae nop fmul lock (bad) (bad) (bad) ljmp loopne (bad) sub and and (bad) ljmp in sbb pop (bad) jecxz xchg enter mov sbb xchg es (bad) incl mov daa scas sbb (bad) push adc fwait dec and pop add decl jns sbb imull sub (bad) call popa (bad) imul xchg out xor sub arpl jns bound call add adc lret mov enter hlt mov cmp outsl clc faddl lods ds rcr lcall movsl pop pop call adc (bad) (bad) pushl pusha test popf push mov out add and in rolb in mov movsl cli js xchg scas pop lock aas xor ret dec lock dec mov sar cli decl adc out movsl jl imul test sbb clc stos (bad) (bad) cmp adc push enter xor fcoms (bad) jg add or add shl xchg pop pop scas sbbl mov dec and aam mov dec mov inc ficompl (bad) (bad) inc or jne js add jne and stos dec cmpsb jns pop (bad) (bad) (bad) ljmp xchg (bad) or push mov pop adc ret (bad) sarb push xchg stos (bad) (bad) (bad) pushl mov cmp mov inc icebp fwait pop or test mov std (bad) call mov cmc add push pop stos push xor xchg mov cld jmp sbb mov out mov push sub or or sbb pop push push call (bad) mov das and cli pop test imul (bad) (bad) (bad) call js movsb ds fimull sub dec pop inc stos insb lods cs (bad) (bad) (bad) mov sahf mov loope xchg mov sar mov push push stos int3 dec scas mov mov inc lods js sub loope sarb test lret call jnp mov and mov scas xchg stos inc push inc sbb lock cmp (bad) (bad) pushl fstps mov mov out and leave sub xchg lahf nop dec decl inc imul sti dec (bad) incl xchg add daa sbb jno fdivrp (bad) (bad) mov (bad) and sbb or xor fidivrl add insl xor idiv incl loop jb sbb icebp and jmp mov lahf fisttpll adc jg (bad) jle xchg sarb stos mov cmpsl inc lret aas movsl std repz pop cmp add (bad) (bad) (bad) decl xor aas add push call push xor mov cmpsb (bad) (bad) (bad) dec jge adc aad rorl aam daa test dec mov addr16 fstl cld (bad) call pop cmp push lcall mov adc in es (bad) mov clc mov sbb fwait mov mov or (bad) call push in mov cmc inc arpl add fimull out pop mov call test and ja lcall push movsb dec (bad) cli dec shll (bad) (bad) (bad) jmp sahf xor out push insb dec std fldt pand dec adc add imul cmpsl jno in xor inc (bad) cs sub lahf pushw sbb jp or out sbb arpl mov or insb xchg movsl ss aas aad sbb push dec dec (bad) (bad) (bad) call jg sbb mov sahf mov jae xor pop vmovlps pop pusha pop out sti test std decl test push cs mov inc repnz mov fdivr adc (bad) (bad) mov cmp cmp jb hlt icebp sub shrl dec push aaa or (bad) call adc sbb push lcall jge rcrl je cmp mov hlt gs leave popf fcomi xchg sbb xor xchg outsl mov insb test (bad) jmp lahf dec nop mov fcmovne pop xchg xor lcall cwtl lods jg dec and and (bad) decl ret cmpsb lahf or mov in (bad) lock das or jmp (bad) ljmp jge mov adc adc mov inc cmp sar (bad) (bad) mov lea dec sub push push test adc stos leave pop mov sbb clc incl (bad) rcr flds out mov mov stos push mov push jle push pop (bad) (bad) (bad) (bad) jp subl icebp mov stc or roll movsb out pop dec mov int mov imul or stos lcall and add or in (bad) stos (bad) fucomip jb les aam xor pop pop imul cli ds ljmp adc xchg dec aas or mov movsb scas stos scas xor inc dec mov and and and xor jns xor mov test (bad) call outsb push adc xlat mov xlat adc inc pop repnz clc sahf sub push loope sbbl push xchg lahf stc mov in xlat push scas cs mov cmpsl sub enter (bad) (bad) decl jnp inc and cmpsb xchg jae pop adc dec or js imul insl inc stos (bad) mov adcb cmc loop inc mov aaa lea dec test push es sbb jnp add (bad) lcall mov xchg (bad) jne out mov jcxz jg pop imul loop cld and (bad) (bad) ljmp jle jns xchg das in test xchg sti mov inc xchg in mov (bad) (bad) (bad) jmp ficom mov push lret mov arpl jle ljmp call out inc outsb mov push cmc sbb jmp (bad) mov call shrl imul cmp push insb xor or mov cmc inc adc (bad) (bad) (bad) lcall lret jmp enter add adc in mov jl fimull insb test (bad) lcall dec call andl and (bad) ljmp andb and jmp xchg movb les arpl dec sar (bad) (bad) incl xchg pop xchg lds ret divb out dec jp cs into cmpsl dec in pop jle push out addr16 (bad) (bad) in fstpl push dec jp push and ds xchg outsl out jo in test (bad) pop xor nop (bad) (bad) (bad) lcall loop xchg push lret addr16 in pop faddl cmp jge int sub or (bad) (bad) (bad) ds imul adc mov push pushf jb out cmp mov (bad) (bad) dec fdiv addr16 and dec adc jno and aas sbb pop cld lcall arpl cmp ss cli adc mov push pushf fcompl xlat je loopne,pt lret test in dec push sub xchg mov (bad) sbb ljmp xchg lods arpl pop (bad) stc or cli scas icebp mov iret mov aas (bad) mov and lea mov fnstcw pop xor dec adc or rorb or loope (bad) (bad) incl xor and pop fs mov jecxz (bad) cmp aas out and push sbb (bad) jg dec cld (bad) push xchg cmpb cmpsl sti jg sbb roll into pop pop pop bound decl sub jge (bad) jns les stos out cli (bad) incl insb pop lea cmc xchg (bad) (bad) xlat jmp daa call (bad) (bad) (bad) jmp cmp jmp xor sub aad ret sbb (bad) (bad) jmp xchg enter popa ror repz outsb cmp sbb pop lcallw (bad) dec adc mov dec (bad) (bad) clc rorb and push idiv jbe testl js adc (bad) (bad) decl adc mov xchg imul and mov jg movsl (bad) (bad) mov lahf dec inc mov jg xchg mov ds (bad) (bad) (bad) in adc lods (bad) sahf stc xchg dec jecxz fs loop jbe mov insl dec xlat stc lcall incl xchg mov aas xchg xchg mov clc int scas fdivr ja aam (bad) (bad) decl adc mov mov out sub adcl adc loopne bound add mov jle cmp hlt ret (bad) (bad) (bad) push mov ljmp and sub insl mov int3 fwait xlat xor (bad) (bad) (bad) pushl dec gs sbb js adc xchg clc and andl (bad) decl (bad) ja xchg push adc mov (bad) dec in cmove roll es addr16 (bad) (bad) jmp inc push jo xchg popa in aas xchg cmp push cmpsb adc cmpsb scas fcomip cwtl sbb (bad) push pop into loope int3 pusha repnz clc fwait inc xor out mov xor push (bad) (bad) (bad) call rcl cmp mov in loop cmpsb fst (bad) dec js xor insl add idiv (bad) mov mov push inc xchg fwait std xchg dec ja fsubs mov loope (bad) (bad) (bad) jnp push ja mov or mov mov (bad) outsl sub mov ljmp adc rclb arpl cltd pop mov pop adc je (bad) (bad) out fist mov (bad) std mov (bad) xor test (bad) (bad) in add jb mov outsl and mov shlb (bad) (bad) (bad) (bad) jp jp lret inc (bad) insl out sub fucomip (bad) outsl popa cmp dec add scas insl xor ljmp fcoml xchg movsb xchg sub xor fs sar or in inc cmp ss add sub mov lock shrl out cli (bad) decl gs sbb jns outsl mov data16 sub clc (bad) mov jnp lods into in (bad) in das shlb pop in jge fnstcw adc call std lcall (bad) cmpsl cmp pop sub pop push and (bad) pushl jl xor inc dec pop (bad) daa das fucomp data16 pop inc pusha dec stos sbb lcall lds outsl pop push xchg push lods sub sub (bad) (bad) jmp and jbe aam test mov pushf jge (bad) movsb out adc mov pop or imul clc lcall jno aad add dec in mov mov jae (bad) (bad) pushl aaa mov dec xlat sub mov lock mov (bad) (bad) (bad) in push jb sti pop movsl dec decb ficomp xor push (bad) repz ja lcall (bad) push lock and (bad) mov or insb fisttp (bad) jmp out mov mov fimull imul addr16 pop mov push call aam jo repz outsb jg data16 cs xchg jmp and test mov call xchg int (bad) fsubrs lcall or cmc scas dec and xchg inc aad decb sub leave icebp jo (bad) (bad) (bad) (bad) jnp insl (bad) in jg cltd iret loop push inc xchg lds ret push in push xchg ljmp mov lock sub mov fisttp xchg mov (bad) pushl sub (bad) lcall cmp insb lea xlat jbe (bad) in fidivrl sbb pop mov sub inc in fbld jmp dec negb mov sbb loopne (bad) lcall push cmc addb mov faddp ror push je pop mov (bad) (bad) mov sbb out icebp jae ss xchg mov in fsub inc jns (bad) (bad) push xlat mov sarl jb outsb add xlat jl test lcall (bad) incl ja xchg inc mov sti sarb mov cmpsl mov fwait sar (bad) (bad) (bad) pushl mov inc loope sbb lods adc mov sbb fidivr ss je fcmovu popf and (bad) call bound je sti dec jle push mov jns out test (bad) pushl or ja in mov xor jns jno jg stos imul aaa std loop ss dec in in mov adc insl icebp dec test pop cld (bad) (bad) pushl call dec push mov enter push push or adc pop sub sar (bad) pushl push fcompl (bad) or mov fs insb xlat jno mov fcomp inc xchg mov pop pushl dec xchg xchg fs inc xor jecxz jge (bad) movsl (bad) (bad) decl and pop maskmovq mull sub adc das (bad) clc push sbb sti jmp dec mov sub (bad) flds push inc add sbb call xor add aas xor add add dec outsb outsw add lock push (bad) xorps adc jbe das add dec add loopne xchg out dec sti xor push push and lea out jae push push xor pop out pusha inc nop adc adc jb gs add mov add sbb adc sahf testl xor xor lahf and das jl insb gs jp addr16 addr16 (bad) jbe or dec pop inc iret xor ss aaa ss add pop add cmp dec popa bound xor mov shlb or add fildll or push inc push inc inc push data16 pop sub (bad) js insb imul and faddl outsl leave lds add xor or es xor hlt jne shl push pop (bad) or push or or inc out cltd popa in pop xor data16 (bad) cmp ds sbb push inc adc sbb in xchg xor rolb inc sahf lret adc sysenter adc add xchg push pop cwtl pop adc xchg inc push adc repnz cmpsl pop nop push adc mov xor arpl iret daa fcoml pop add adc inc jecxz aaa jp enter mov dec adc sbb xor sbb push xchg or pushf jl or iret repz dec or push pop pop mov pop or pop scas sub push pushf cmp xor jb sbbl fucom or lahf and mov mov in mov add mov push sbb (bad) jae (bad) xor mov out cmp aam shrb add fwait scas sbb push push mov dec mov into ja xor bnd leave xor or sbb push inc jns stc jge popa outsb fs rclb sub in lea jo aad je dec and inc sti sub lret leave repz push pop sub xor xchg fldl push mov daa sbb gs cs orb or and stos push dec cs and push add inc divb inc inc fisub pop xchg and aas xchg push dec andb iret movsl cmp sub and jns nop ja jo pusha and fsubrl add and loop sub dec push lea ss pop pop xchg pop insb inc cltd ret add (bad) (bad) shlb and inc inc push add lods in popa insb inc or cmp lock sub cmp lds adc enter arpl sub leave shl flds ss (bad) adc gs dec cltd dec pop jno or dec lods mov insl cs add movsb fs ret pop sbb push nop sbb enter xor loop mov and dec xor mov mov mov xor push push xor push cltd lods sbb add push or jg fdivl adc add adc pop or jg fisttpl or or adc add or sbb adc adc adc dec gs sub jo or add mov add pop sbbb pop xchg les mov xor push add aam nop jge dec or adc push push lods sub pop xchg push and lock sar (bad) decl adc jb (bad) mov (bad) lock mov shl push pop and aaa inc push jg lock or xchg mov rcl mov inc arpl mov icebp and mov movsl es ficoml add adc rolb or (bad) (bad) aas add repz outsl mov adc jnp xchg int3 idiv and push jle mov add (bad) call out jge (bad) sub lock dec fcos (bad) (bad) ljmp mov jnp cld pusha cmp jb in lret lret dec jb push incl dec xchg imulb xchg sub in lahf jmp decl xchg cmp jnp std rorb cmp inc (bad) (bad) (bad) (bad) (bad) sti aas shlb jp sub addl enter cwtl in testb pop jns fldt sahf cmp out incl mov pop or iret int3 jbe and or (bad) push pop nop xor aas je pop add ss or and stos xchg subb mov mov pop aas cmpl prefetch push cs xor (bad) incl and and test mov clc (bad) sti lock sbb scas arpl lcall (bad) (bad) repz pop js (bad) fnstcw mov (bad) or jge iret inc pop pop int push pop cmp fcmovbe nop (bad) das xor sub clc ret test mov fucom ds xchg sbb dec fdivs mov ror out xchg (bad) mov inc sub repz iret jecxz jne dec lcall test icebp mov fdivp jg mov ja jbe or jne js aas fcmovb pop sbb icebp call jecxz clc (bad) jno in xchg daa pop shlb xchg scas pop (bad) (bad) decl addr16 pop in mull dec mov inc pop pop (bad) dec icebp pop fild mov sub xchg loop out sub push push addr16 mov (bad) out push inc pushf inc mov mov stc and outsl fisttp cmp loopne inc mov mov in clc aas cmpsb lds and es mov dec popf das fs roll fisttp inc cmp push imul psubsw in and mulb aaa cli cmpsl xchg push bound mov icebp push imull push add std pop inc add dec mov dec jnp and lahf pop aad cmpsl ja rolb and (bad) (bad) jmp mov dec cmp test ror xchg outsb out (bad) dec gs (bad) (bad) sti fwait pop push hlt scas push jecxz int3 sub xchg outsl icebp mov xchg mov inc fnsave mov aas sbb jge (bad) xor and (bad) incl jae xchg xor movsl xchg (bad) lods jle sahf repz lret lods into daa xchg lea (bad) (bad) (bad) xchg adc push jmp add sbbl mov std icebp mov divb cld jg sar mov pop sbb push jmp cmp aas mov and in xchg sub xchg test lcall lds cmp pop je (bad) cmp jg (bad) ljmp jmp hlt mov fmulp hlt cltd popa fdiv mov adc adc (bad) (bad) ljmp cmc mov aad adc aaa (bad) test mov fwait std xor mov lret push jae stos push test popa enter xor mov ficom pusha cmp sub mov clc mov push inc clc icebp cwtl or out and lods mov add addr16 (bad) out (bad) pushl out pusha stos arpl mov arpl rorb add sbbl pop lock ret jp and adc pop mov pop sar inc aas outsl mov dec outsb mov jl repnz (bad) push add push cmc jg hlt sub xor lock sti ror jle pop cmp mov ds incl fcomip cld scas xor dec jae ljmp lods cmpsb mov (bad) stc mov xor out aad or in aad in pusha sub cmpsl push sub pop xlat xchg add mov stc sub jnp mov (bad) cmpsl iret sahf fdiv jne pop jg mov loopne jle js cld mov (bad) fiaddl pop (bad) fsubrl cmc mov jge inc aas outsb mov hlt dec data16 into and jmp lret sub rcrl pop or notb push sub mov jne sarl hlt xchg insb pop dec xchg cmc insb fwait jl in xchg cmp mov icebp jae fcoml movsl lods cmc adc sub fchs pop std ljmp mov (bad) jmp hlt mov xchg mov aam inc int3 or inc and (bad) out mov pop push fildll add push orb jb (bad) (bad) pushl fs pop jecxz pop rorb mov push mov xchg out (bad) (bad) (bad) lcall pop jb rorb jae adc iret stos loopne js in sarl push mov jno pop std (bad) mov insl (bad) and add aam jne mov fcoms pop push hlt ljmp ret movsb and enter adc jmp sub js xchg sub (bad) sub mov push iret push lds mov (bad) (bad) incl pop add add bound popa leave pop (bad) aam push fldl pop lock leave (bad) stos addr16 xor jl stos mov or xchg or sbb and or mov pop je les push add rclb push outsb adc xor jno cmpsb sub cwtl fnsave and sbb (bad) (bad) (bad) lcall fsubl jno fdivp enter sub es daa jecxz lea repz xchg repnz (bad) jmp inc dec sub pop sbb xor loope ja xchg stos popa ljmp (bad) call sbb pop pop (bad) ljmp push push mov jecxz adc adc sub (bad) (bad) (bad) out and sub cmp loop push xchg (bad) jo or ficoml (bad) (bad) (bad) cmp add push in and and dec outsl pop lret (bad) aaa subl (bad) decl (bad) rclb loopne jp mov mov push xchg jb adcb jne or sub or mov (bad) decl ficomp loopne loopne fwait repnz ja and in outsl push xor pop jo incl push dec mov ja xor xor sahf ljmp fs cmp (bad) (bad) decl push sbb cmp cltd xlat cs fsubrl jg or (bad) addr16 (bad) cmc dec xchg or xchg stos cmpsb dec inc sub or out cld or stos lods sub stos pusha mov mov dec cld (bad) (bad) out iret pop jmp imul push inc lds add (bad) decl cld stos mov int3 (bad) loope fs jo fdivrl jecxz or loope lods aad incl out ret fsts inc in sbb and push pop (bad) (bad) (bad) push stc frstor aas sbb mov or pop mov rorl and int ja (bad) (bad) in std pop lods outsb leave mov jo (bad) loopne frstors xor shlb js (bad) call movsb xlat cmp and je jnp add test decl mov adc mov scas dec xchg mov xchg sub xlat leave sub adc rclb xchg jp ret ficoml pushl mov push adc mov ret movsl dec jmp scas clc ja popf jecxz mov stos cmp lea pop in (bad) (bad) (bad) jmp jecxz sub lahf add pushf mov jge push pop mov (bad) mov xor ds or stos cmpl cmp add clc cmp loop lods push stos (bad) (bad) (bad) mov loope xchg hlt and fnstsw jnp push sti mov mov (bad) (bad) (bad) decl inc (bad) mov movsl ret aad popa into cwtl push xor cs jne insb xorl jne mov adc lea mov lods scas mov (bad) (bad) (bad) incl dec shll test inc sub mov mov es popa mov dec sub jb jge test xor sbb xchg inc sub pop push cmc jp mov xchg mov bound dec mov stos sar pop lock cmp xchg mov dec ja shrb mov jmp sahf push xor jp out inc in sub inc (bad) cmp test pop or sub mov loope xor inc push dec sbb (bad) cmp mov pop adc cmp push js xchg add fiadd jmp jg (bad) dec cmp add movb add (bad) (bad) add sub push and jo and nop or (bad) (bad) xchg ss lods sub (bad) (bad) (bad) call jno int aam (bad) test and nop (bad) repnz call or test dec adc push mov (bad) int3 aaa shll scas mov or pop (bad) (bad) mov aam sub aad int adc stos and fmull xchg stos jecxz (bad) jg out xchg push ljmp insl inc jge lcall call ljmp pop xchg cmpsl push pop pop add sbb insl ja sbb pop sub lea pop inc lods pusha stos je (bad) ljmp sub dec int gs pushf aam jns (bad) lcall and or sbb outsl pushf popa mov or ljmp xor lahf loop test sbb fs pop xor das and pop or mov sub fdivs stc hlt enter int3 dec popf ljmp loopne push sti and movsl or jae add lds stos loopne cli (bad) cmp cltd mov movsl adc jo mov mov (bad) int3 mov addl add push or jg cmpsb gs xchg or mov push mov into xor inc adc (bad) or add aam xor inc and push inc mov test (bad) mov cltd xchg mov xor jl out adc scas sbb ss fistp outsb lods adc (bad) ljmp xchg pop jo lods xor push add push icebp inc mov (bad) call lods mov repz mov pop mov cmpsl dec out stos imul dec movb mov mov jns (bad) add (bad) in cmp hlt or notb inc push adc das dec enter push mov mov movsl push xchg scas add push enter out movsb inc adc (bad) incl sbb jmp xchg and or out pushl jge jp mov pushf mov testb xchg (bad) add pop aam (bad) adc dec sub jnp dec jp pushf out scas popa push jge scas bound inc daa clc (bad) (bad) fmuls in add bound call (bad) mov mov mov fisttp es push xchg (bad) out sub mov (bad) (bad) push sub movsl jae cwtl es fisubl fisub pop in add iret pop int out pop (bad) (bad) (bad) inc test arpl pop add ds xor mov mov scas call add pop dec fs push (bad) jne jge xor stos jmp mov mov fbstp sub mov outsb xchg (bad) (bad) (bad) incl xor mov xchg (bad) movsl jbe pop in nop fcoms pushl mov push dec ljmp push or popa jp jmp scas xor loope scas es cmpsb dec cmpps cmp in (bad) (bad) (bad) (bad) ljmp jb cmp inc lret mov pop icebp lds (bad) mov incb inc in dec mov sub cmp ret loopne sahf lods jne dec stos sub pop aam call sub (bad) mov lret push ja ret (bad) mov popf fwait mov popf and iret mov jbe stos pop decb mov (bad) (bad) sti scas sub sub cltd aad mov dec mov scas (bad) (bad) (bad) (bad) cld push imul out mov push fsts shll ljmp jbe (bad) (bad) lcall or outsb scas push inc mov inc into jmp xchg sub cs mov mov push push hlt iret ja push cld lcall arpl pop mov cmc adc fiadd xor icebp lcall pop stos mov push mulb cmp inc mov decl push jno cmp push jae insl sbb (bad) (bad) call sub dec sub dec flds pushf cmp int push adc ljmp rcrb or jnp mov jge pop mov mov cwtl xchg enter add fsubl dec aaa pop aad sub pop push sub sti (bad) fdivrl xchg dec push cmp fldenv bound mov ja add test sub imul sbb sub adc and rcll sahf push sbb (bad) pushl nop popl fidiv cmpsb les loopne mov sbb insb mov (bad) mov mov xor cltd cmpsb ds lret pop add and mov std (bad) (bad) jl ret (bad) into push outsb (bad) scas repnz adc add dec cwtl popa mov mov adc fidiv pop or aad inc scas adc (bad) (bad) (bad) call stc shlb adc jmp (bad) mov cmp sub (bad) mov cmpsb cli (bad) (bad) (bad) push test mov pop pop cmpsl pop rorb scas mov aas jno pushf (bad) (bad) (bad) jg dec outsl sbbl sets aam adc cmp mov aad inc rorl pop sarb bound movsl imul inc xchg and out add xor adc cmp xor add push rclb xor (bad) ljmp add cmp and adc call inc popf popl (bad) jo push roll popa mov inc lea cltd add jg (bad) decl lea jno sbb movsl ss int3 in add fs adc (bad) (bad) (bad) inc pop xchg das sub popf xchg outsl and aad test push test sarb sub jmp cmp (bad) adc mov int cmpsl into cs mov (bad) jg ljmp (bad) stos mov cmc inc inc push sub jb in (bad) jg repz jbe dec aad push mov add cmp or lods mov imul pop lea fiadd ret sbb or adc inc adc fistpll incb or xor sbb or mov out push call gs bound fs repz push (bad) (bad) (bad) (bad) mov inc lock out stc or sbb enter add decl push lds xchg and adcb fwait jns mov add subb (bad) aas pop xor push add and test add mov mov or in (bad) incl icebp bound xchg outsb movsl adc push xor bound sub mov adc pop inc pop popa inc adc and sbb add loope adc into add add (bad) (bad) jg les and xor inc es mov push adc add jno in lock (bad) (bad) ljmp idivb sub scas je stos adc test sbb dec sti mov ljmp or repz dec xchg inc add mov imul adc mov test enter add add xor lods push ljmp incl call push pop (bad) mov mov push cmp (bad) incl jl mov adc loopne fldl fmul outsb sbb movsb jae scas js adc lock (bad) das adc inc jne mov xor (bad) (bad) inc movsl stos push int3 push pop and lcall dec negl (bad) ficomp (bad) (bad) pushl xor pop jns pop ficomp jb stos imul stos out mov test (bad) (bad) (bad) mov jle push mov in (bad) lods sbb out sub js lret ret hlt sbb xchg cld ljmp mov gs lods popf push pop and into ljmp dec push mov mov mov add lret les (bad) mov in stos fs aaa mov test pop loope pop pop lret (bad) aas push mov fcomip (bad) cmp mov sub mov mov aad cmp sub inc mov or push mov stos addr16 test fstl (bad) (bad) out sub add or xchg mov (bad) push mov mov out (bad) (bad) (bad) jnp xchg scas mov mov ds das movsl (bad) jg or (bad) mov add gs adc mov stos jne inc imul mov outsl es call push stos bound in or test call (bad) (bad) (bad) incl stc or xor mov mov repz push xchg pop cmp cmp mov fisubrl repz pusha mov jnp icebp inc stos loopne (bad) (bad) jmp inc dec jecxz xchg jae cmpsb cmp fstl js jmpw mov rcr add outsl (bad) (bad) fidivr dec fldz pop out rclb pop popf lcall loopne fmul js outsl clc lcall in bound je int mov xor ja (bad) (bad) decl adcl jecxz movsl (bad) sub push pop lea jnp outsl test pop lahf ljmp lret and stos fucomp lcall xchg xchg push imul outsb sti fcomip jmp mov cmp push aam outsb mov je ljmp xor movsl jno iret fild (bad) int ret aaa mov cmp outsb ds dec jp sbb xorb (bad) ljmp push es (bad) (bad) lcall xor jns pushf inc mov in repz test fsts ljmp xchg test lods ret jb (bad) movsb push mov cmp imul dec sbb inc mov mov out lods jnp dec nop sbb scas aaa xchg (bad) (bad) (bad) pushl push xor push xor loop dec mov xchg not sbb lret rclb cli (bad) (bad) jns notl cld bound in insl push and loopne test sub (bad) (bad) inc pop outsl scas ljmp fcompl pop rolb repnz pop out adc inc movsl sbb sbb mov fiaddl lcall (bad) (bad) incl jb cli fldcw jmp lcall pop pop pop push mov pop cmc (bad) ljmp mov gs enter sub imul ljmp xor divl lods adc (bad) jo leave pop div (bad) (bad) jmp dec jne mov sub dec cli cmpsb xor push icebp std (bad) (bad) fist sub add mov inc and mov jp (bad) (bad) fist cs call out adc or mov je (bad) call testl out out stos dec sub hlt jl cmp cs sar push mov addr16 push out xor pop push lods mov jl push fs sub in (bad) (bad) mov sbb push loop mov call xor cmp cltd scas pop scas cli (bad) incl test movsb sub add outsb sti inc mov mov dec lock in out add frstor push jne inc adc nop sub mov aad stos cmp cmc pop jo ja sub icebp xor (bad) (bad) ljmp add pop adc xor std lret pop aad subb pop gs cmp mov call jne (bad) int3 (bad) pop rcll pop fs jl inc addr16 (bad) (bad) (bad) inc cmc in xor cld jo out sbb adc push int (bad) sti mov cmp jg icebp rolb imul je scas dec and cmp mov decl pop sub loopne push pop mov (bad) aad sbb mulb hlt cmpsl fwait sarb sub dec popa add or nop test push mov sarl (bad) mov mov pop fs lods xor sbb xor mov cli (bad) lcall movl jne ret adc sbb bound dec nop test add jne imul sub and test add inc andb mov fmull (bad) jg data16 test shlb mov out sub aas add cmp push mov add mov jae mov sbb push or cmpsb outsl xor scas sbb pop push icebp mov pop icebp sbb pop stos dec or jge into and jg icebp cmpsl cltd inc inc add movsl xor or dec mov andb daa ret adc push test cwtl imul sub inc pop cwtl cld nop das (bad) cmpsl cmpl jnp adc (bad) (bad) (bad) inc cmp pop or fisubl mull rcrb (bad) adc mov incl clc ret cmp mov inc add xchg inc lret jne adc ljmp jecxz xor js stos std nop xor imul mov jecxz push pop pop jp cmp (bad) pushf inc sar and sub (bad) (bad) pushl movsl xchg pushf jno fsubs andl sbb cmp inc inc loopne stos cltd in das inc sbb sub fdiv xchg stos push cltd add lcall (bad) jl sarl scas (bad) lods rcll push repnz mov repz lods sbb mov push ja xor mov cmpsl jbe push mov ljmp cmpsl (bad) lock sub (bad) mov inc mov outsl mov (bad) (bad) decl (bad) mov out inc shrb or xor cmp out jmp pushl call sub jae or sahf sbb ss in std adc push aad sar pop ja pop lods push (bad) sbb jns sti (bad) (bad) jg pop mov mov rcrl mov jmp push inc cmpsl fistp cmp (bad) (bad) jg orl cwtl movsl xor aaa flds fwait xlat pop push lret add cmp cmc sbb and aam dec inc cmp (bad) (bad) lcall xchg (bad) not or (bad) into stos pushf fisubr jecxz dec mov mov xchg mov sub lods (bad) pop lods xor lret mov push lods or fcomip push inc adc push sub mov jns (bad) (bad) (bad) sbb out aad add aaa pop pop xchg iret xor dec test dec mov call pop push in sbb add mov (bad) (bad) (bad) jg and xchg sbb test mov testb fwait mov (bad) ljmp shlb mov pop bound dec mov mov es sbb mov in fbld insb mov stos loopne xlat fwait out dec mov (bad) (bad) decl pushf sub xor pop stos mov jb adc mov cmp into xor pop cmpsb dec aad push fmuls loop loope je int push imul enter mov fcomi (bad) mov add iret arpl les aad pop xlat popa fidiv popf jno push jge (bad) (bad) call in mov cmpsl insb sub popf setle fnstenv repz (bad) decl lcall xchg jmp (bad) mov cmc push lahf pop gs sub (bad) (bad) mov jmp jmp mov test std daa cmp mov or decl cltd ret addr16 pop sub xor cmp pop jnp jp (bad) (bad) ljmp ficomp mov adc sarl cmp mov xor iret addr16 mov mov inc sub cmp or cmp sti test push das imul bound scas incl and sti es push insb mov xchg sub scas pop loop mov jmp sbb (bad) pushl lock bound scas xchg mov xchg scas sub (bad) (bad) (bad) dec mov fcomps mov pop stos cmpsb add jne lea (bad) (bad) (bad) cmp pop or jae xor push imul lods adc xchg jg (bad) mov scas mov push aam jbe push dec leave je jo or (bad) (bad) (bad) pushl jb xchg (bad) cmc or dec imul pop lods sub mov in jge push stos inc (bad) (bad) (bad) ljmp inc mov cmpsb insl push rorl xchg xor lods mov dec jbe vpsubb adc jbe mov mov rclb pop stos shrb lcall test mov mov (bad) call pop (bad) mov cmpsb stos test pop push xlat xchg push call imull (bad) fbstp test clc js or cmc mov mov mul cmp test xlat add cs (bad) mov insb fidiv rcll lcall sub or cmp call jne outsb mov pop mov (bad) mov jp xchg push push imul mov in sub jmp icebp incl lock stos loopne cmp ja bound test std sub mov sub push or pop movsb pop imul scas pop sub xchg lahf xchg lret mov ret push mov or sub mov out dec out adc das sar hlt iret stos add pop xchg jb sub loope (bad) xor aaa jmp aad adc loopne flds bound pushf into (bad) stos lcall (bad) jmp stos add faddl adc (bad) jg loop pop les or dec aam dec xchg mov out test movaps repnz js lds add mov rclb enter cld inc mov or cs insb ret xchg xchg (bad) mov push xchg dec pop (bad) mov xchg mov lret idivl popa lds clc jle roll cli lcall xchg push mov int ss fisubr fcmovb mov addr16 lods icebp dec push cli lds jo sbb mov subl push sub or add push jb jb popa in call lcall sbb cltd jecxz (bad) mov cli jno (bad) sub lret dec xor sar pop out aad xor (bad) inc sbb ljmp (bad) jmp dec adc push or or or pop sbbb sub int3 mov mov (bad) (bad) lcall scas mov or xchg gs cli or pushf pop and jge and call sub xchg sub and call aaa add mov movsb out or xor insb cmp vpmovsxwd push xor in inc roll lcall lahf push xor shrl push lcall xor mov mov mov fwait push (bad) (bad) (bad) ljmp mov arpl out jae xchg xchg mov sub js lret fsubrs (bad) call cmpsb inc pushf mov out inc nop scas cmp adc vpmaxub jb test jle (bad) (bad) (bad) (bad) mov mov arpl mov aaa imul pop (bad) push icebp cmp xor (bad) ret js inc push in pop imul dec enter (bad) jae pop into or inc std lods es cltd pop jne pushf jne test call or or add push repnz loopne std (bad) ljmp add stos sub inc jo movsl jae mov mov sub clc decl lock dec sub outsb imul pusha mov dec (bad) (bad) (bad) jmp dec dec mov orl jo out sbbl cwtl xchg ljmp mov cmc adc dec cmpsl add sbb mov inc arpl (bad) (bad) inc ret or pop sbb mov loop lods jae sub jno movsb dec push test ljmp xor scas loopne jp push sbb mov out sbb lods movsb push mov mov push mov imul mov inc cmp cmp push stos mov mov inc (bad) fldl (bad) (bad) ljmp jbe test inc enter sub test (bad) cmpsl js xchg ljmp pop or rorb mov cli add xchg push cmp mov (bad) dec cwtl jo stos call leave mov jbe mov dec push xchg (bad) lret and (bad) mov add mov (bad) (bad) push out fwait cmp mov fnstenv push shrb pop std ja in jno pop mov pop call inc mov mov push movsl push loope cld cmp mov push loopne clc adc repz (bad) bound adc cmpsb rorb outsl into cltd stc mov mov pop sub test addl jmp sbb and sbb movsb lods jns and stos incl xchg xor je,pn mov clc pop mov add test lods push (bad) ret xlat or jp insb ret mov (bad) (bad) ljmp lock lods ja shrb aam adc and out (bad) (bad) decl push cmpsl push call and sub push mov lcall cmc xor inc lods adc cmc mov fbstp jo pop adc jnp cmp out (bad) decl and int push xchg lock lock push mov imull sarb pop mov (bad) cmpsb mov push sarl push adc push sbb cli sub movsl jp loop mov in add repnz jo mov sub mov (bad) (bad) call (bad) pop inc repnz and cmpsl pop ja in (bad) lcall adc insb fstpl adc sub xor loope (bad) dec sub icebp mov xchg push adc mov xor sbb in xchg push out pop xchg adc fcmovbe aad xchg jmp pop clc fmull outsb js jmp je and dec cmp (bad) (bad) (bad) ljmp or dec imul xor xor (bad) lea scas mov incl ds xchg pop test mov push xchg clc dec xchg push xchg and divl (bad) (bad) jmp and test mov inc arpl sbb lret and mov and popf sti dec ret cmp (bad) decl jmp or out es popa xor rcrl (bad) loope dec mov (bad) (bad) (bad) (bad) (bad) cmp std pop lock ds fwait push cli insl es dec ficoml es (bad) (bad) jmp ljmp xchg dec push jns push and pop sub int iret scas mov dec dec mov out dec mov popa jnp and (bad) cmp hlt fildl cmpsl jl rcll mov pop in pop sbb adc incl dec test jae inc cltd arpl mov incb stos xlat ljmp sub std (bad) (bad) call fistpll add mov pop sbb gs ss pushf fdivl aad mov xchg push test cmpsb cmp dec outsl (bad) (bad) (bad) call outsb scas jne inc mov jne sarl fcmovu xor arpl les in jo (bad) (bad) (bad) mov (bad) mov mov stos gs dec aad sub dec movsl (bad) (bad) (bad) call ret jle mov imul arpl imul mov jp adc adc ret (bad) cs jbe in insl pusha sub mov js jno js (bad) fstl ret mov mov insb lock (bad) ljmp sahf lcall and dec loop loop shlb mov loopne sub out (bad) mov aad fwait (bad) xor cli fcomi mov movsl cmp fbstp mov push rorl (bad) inc push lds (bad) dec and hlt (bad) fcomip mov aad insb push add jbe lcall fisttp ds lods aad mov xor stos in imul mull test dec sub (bad) mov xor push ret test jp xor sub nop out imul jg call iret mov inc dec mov pop fsubs jbe dec mov decl js daa leave pop shrb (bad) ljmp ja shrb (bad) (bad) decl fisubr sub push mov popa iret push mov imul aad or incl jp mov push jae sbb mov outsl or pushf cwtl scas or dec inc dec movsl in adc rcll mov cli (bad) (bad) (bad) js testb push add mov xchg idivl lds jns hlt les (bad) (bad) ljmp xchg test jl and xchg (bad) in add jl adc and rorb mov cmc decl out stc (bad) sub inc mov add clc and pushl mov (bad) imul cli mov aam pop negl stos stos popf push pop (bad) jecxz jnp test (bad) incl (bad) jno shrb repz (bad) in aam out sbb pop cmc popf adc pop pop mov add popf add pushl and push (bad) dec xchg mov jbe ds popa adc push imul lock push or dec xor ja cmpsb or aad mov push sahf lock call shrb cmpsb push iret mov je sbb inc mov (bad) (bad) jg inc adc xor loopne mov sahf clc into (bad) shlb fsubrp sti (bad) jg call adc jecxz (bad) ss xchg push xchg sub outsl push add jle out xor incl (bad) fcomps add cwtl int3 or pop test les push adc and call or test ljmp push (bad) (bad) lcall lcall lods mov fstpl sub jmp ljmp (bad) (bad) (bad) dec popf stos cmpsb push mov out aad fwait mov ss inc pop pop bound jne inc stc (bad) (bad) (bad) decl in lret es push outsb xlat jl xchg push movsb les movsb js (bad) fisttpl (bad) (bad) (bad) (bad) call sbb cli cmp mov jns push xchg jo mov inc dec addr16 jne (bad) (bad) (bad) incl jbe dec xor cmp enter sub (bad) xor (bad) jmp xchg clc fwait bound imul mov cld pop insl into movsb dec imul ja mov xor hlt (bad) int dec (bad) (bad) incl and int3 pop cwtl out jl icebp loop cwtl lea sub jae (bad) movsb (bad) (bad) (bad) jmp jae cmpsl (bad) repnz sbb cltd imul mov ja add ljmp lret mov or data16 mov (bad) aas push loope or adc addr16 fs add jmp (bad) cli jmp adc sub aaa sub mov mov scas jo call pop aas sbb inc mov inc (bad) (bad) jg mov sub cmp xor fisubrl (bad) out pop sub (bad) (bad) (bad) incl aaa fs repz cmpl xchg int3 ljmp lcallw lods data16 cltd pop mov fst out add fldcw xorb jo push adc push adc adc lods mov mov in xor xchg ljmp mov inc std lcall sbb jmp fnstsw dec shlb (bad) (bad) pushl cmpsb xor out mov pop jle out xor xor mov (bad) (bad) cmp test dec mov push scas or scas cld rorb xor mov test cli call and jo or ja dec adc ljmp sbb fidivr xchg mov int3 pop pop sub mov int3 fldl imul das xchg movsb jmp in sbb out fidivl ret (bad) call cld dec out (bad) cli pop dec (bad) push outsb jnp jae push and mov lret dec jno (bad) push mov push adc sbb ljmp jno ficomp lret sub or jbe xor adc add pop push or je es xchg ss push jmp out push jmp (bad) (bad) xchg xchg push sub fsubrp stos sub movsl cltd scas mov dec cwtl in mov push or cmp scas adc movsl pop cmp (bad) (bad) mov call (bad) push jmp dec lods lds je int3 (bad) cs (bad) (bad) pushl push sbb out nop scas stos mov push aad xor fwait dec fnsave mov arpl or lods lods mov aas jb pop fisubl jbe outsb cmp (bad) ljmp mov aaa jne dec jp inc gs jnp mov cmc test rolb adc adc push lods push lods cmc jnp imul dec mov cmp divb cmp xor stos call sbb pop inc shrl mov stos cmp push jb pop and ljmp and xor cmp cmp mov scas fnsave (bad) (bad) incl stos lods int add imul add mov sub fisubrl inc (bad) (bad) (bad) decl pop std addr16 out orl in mov inc (bad) mov (bad) stos ja (bad) ljmp idivl pop or jns,pn cmc mov stos inc inc (bad) add movsb arpl stos cs cmp inc mov and (bad) (bad) call xchg push js in jb xchg jnp mov fdivrs fidivl insl lret (bad) (bad) ljmp insb lods cmpsl les jae and inc mov fs cmpsl in sar (bad) (bad) decl push (bad) movsb mov and cld mov imul lea push dec rorb jne lods insl cwtl xor jns in leave sar ds aad dec xchg and movsl jmp xchg pop imul ljmp mov xor ljmp (bad) lcall out out lea push push and call test adc (bad) jg lock mov clc jno (bad) arpl in ror jbe push adc outsb fbstp loope and popf ja jl fwait sub (bad) (bad) (bad) jmp jae sahf xchg sub js inc rorb pop repz (bad) (bad) (bad) decl or xchg cmpsl data16 mov and rorl sbb aaa xor in pop jae (bad) xor pop cmc jmp add mov cmpsl sbb pop ss xchg pop jecxz aad sbb pushl es addr16 flds lea jae sub push dec fimul fwait test cli mov out sbb pop mov repz pop call jg mov jne gs jp or sbb mov mov (bad) incl pusha cwtl arpl lods add mov fs lea push add (bad) mov (bad) (bad) lcall rcr push fimull lods cmp adc popa out mov sbb dec jp aas (bad) lcall les lds adc ljmp daa sbb (bad) pushf adc (bad) (bad) (bad) jmp mov imul xchg jne lret sub aaa pop xchg (bad) mov cmpsb pushf mov add jne mov cmp jbe push mov (bad) (bad) cmp in pop fdivp push sub (bad) mov jb cmp jno sub icebp jecxz mov gs jecxz sbb xlat jle adc (bad) inc inc pop inc loope (bad) and cmp das push sbb inc (bad) pop hlt popf sub jecxz (bad) mov jbe out lea jno mov (bad) lcall mov rcrb iret and push xchg (bad) imul sub jmp sti sahf push mov lods fwait cld push mov mov xorl stos in mov xchg (bad) jg fstpt fisubr xlat imul adc cmp push into xchg pop push fcos incl cmp mov aas mov pushf jbe stos sub mov inc (bad) (bad) (bad) ljmp int lods inc xchg sahf sti movsb add pop aad les dec dec inc (bad) in cwtl push in cmc sub jg ret mov or inc adcl test adc (bad) lcall out or or stc in xchg add sbb push add add rcrb inc xchg mov imul bound inc sub imul fwait cmp xchg or jae aad fstl pushl push add imul fisttp inc push xor add enter cltd outsl jmp (bad) jmp add mov scas addr16 das dec loope dec mov pop mov push cmp pop cmc cld (bad) (bad) mov outsl out mov or and imul loopne (bad) lcall mov dec outsl movsl loope,pt xor add mov pop mov dec dec lock ljmp jbe push or decl mov not fsubr jo std or (bad) (bad) mov jecxz imul mov mov push push pop inc and subb repnz or stc or ss sub push xor sbb jg icebp pop fcoms lret ret jl in xchg inc test stos lcall jge lods mov mov (bad) sub sbb cld (bad) (bad) clc shl fisub daa loopne mov out scas ss frstor enter pop inc (bad) (bad) fcomip lods mov dec pop jno xor imul shlb mov (bad) (bad) (bad) mov ja push xchg int sbb sbb ret andl pop push inc int (bad) (bad) ljmp dec inc fistpll cmp adc les (bad) out add (bad) (bad) incl mov sbb dec lods jne jmp sub xchg fsts in lods cmp sbb cmp insl inc test aad mov bound enter cmp push (bad) (bad) (bad) pushl icebp pusha les push in jae insb les mov pop ja lock push loop std rcrb pop hlt (bad) aas and mov loopne cmp or mov (bad) (bad) lcall sbb dec jb inc ret dec cmp adc hlt stos pusha xchg pop xlat stos fnsave stos push cwtl push (bad) (bad) (bad) cmp sub lret push das imul xchg sbb pop jne cmp decl (bad) ss adc lods pop lock pop cld and xchg test mov sbb mov jge and repnz ljmp fsubs push push push adc cwtl jecxz or cmc mov (bad) jle push fwait sti mov xchg in mov (bad) jb lds into cmc (bad) jg decl push mov jp enter jl adc push xor xchg scas jle (bad) (bad) call sub data16 out fnsave dec adc push pushf or cmpsb push jl (bad) mov idiv ljmp stos mov in or jno and push (bad) sbb xor lods xchg inc (bad) mov (bad) mov movsl push or jo pop sbb fsubrp lds cs stos mov in (bad) ljmp (bad) lcall mov test cmc adc and insb movsb sbb mov lcall or test mov mov push int hlt add xchg pop loop pop hlt imul mov inc outsl mov mov mov pop daa int outsb cmpsb in ljmp sbb cmp push pop sub decl lock (bad) aam adc mov ss mov (bad) (bad) (bad) js mov jp cmp jl mov dec cmpsl pop ja or jg ljmp jb sbb mov mov pop push or (bad) jg push mov push jae lcall push add arpl ret decl sub fistl push push mov mov cld pop (bad) (bad) mov mov adc sbb stc xlat dec push bnd incl (bad) or fwait mull or or mov mov gs dec ds sub stos ret push cld fwait lock sub sti (bad) (bad) lcall scas cmpsb xor stos add jb ja jmp pop inc pop jmp inc fstps into xor (bad) (bad) jg mov sub or repnz jne cmp inc stos push or mov mov js aaa sbb xchg (bad) stc mov pop xchg push push lret shrb lcall decl adc push mov dec outsl dec mov push in (bad) push fstl (bad) call dec cs push dec dec sub or pop mov dec icebp dec add cmc push xor lods cltd cmc shrb movsl fistp mov (bad) (bad) decl cmp aas cmp fnstsw enter xchg aam fucom cmp (bad) out jl pop mov int out or jno addr16 xchg leave push pop push outsl add lcall add (bad) bound pusha mov jle xchg pop jno (bad) mov mov push xlat push mov xor push mov mov xchg push clc (bad) (bad) (bad) ljmp fstpl adc dec sub adc in cltd or aad hlt sahf int3 sub mov push sbbb jb movsl repz sub inc insb push xor push push das pop or (bad) sti (bad) (bad) (bad) (bad) mov jecxz in sahf ret lods cmc cli (bad) int3 ss dec dec aaa or icebp imul pop dec jl sub xchg pop cmp nop lods dec pop cbtw mov daa movsl imul clc (bad) (bad) pushl mov fs and pusha bswap out pop stc push mov cmp cmp xchg xchg (bad) pushl push scas cmp mov mov xchg push mov xchg mov (bad) (bad) (bad) (bad) fstpl cmpsl ljmp nop leave (bad) data16 xor mov jnp xlat data16 xor repnz (bad) (bad) jmp mov cmp int int mov and sbb stos mov pop jo out push or and stos stos test lcall xor ret (bad) (bad) jmp add shlb insb sbb pop jecxz,pn pop and jg insl sub (bad) mov rcl adc mov (bad) dec lock cmp xchg out stos lcall adc aaa push dec (bad) repnz pop jae xor sarl movsl push pop mov and cmp (bad) (bad) call aaa imulb xchg aam cmp jbe push sub out mov pop lahf push (bad) (bad) mov insl cmp cwtl dec push mov stos jb and cmp cmpsl sbb (bad) (bad) mov add jns dec in test jbe sbb lcall cli es fstpl aad test es and mov cmp dec jne dec negl icebp adc dec push xor push inc iret pop xor cmp push imul mov loop push ljmp sub (bad) (bad) ljmp dec jne iret unpcklps movsl js lcall movsl ja xor loope sub (bad) push mov adc mov inc aad das gs and adc das (bad) mov aas out nop int3 pop mov movsl push push sahf mov cli (bad) in incl pop aad out lret mov mov lahf jne push xor jne mov popa hlt jo leave adc sbb mov je loopne pop imul fs jecxz mov rol ficomp fdivrs add add dec adc and sub (bad) (bad) lcall mov jl push aam xor cltd add inc (bad) ljmp out add push jo inc mov push and andb sub xchg sub or cmp cmp gs adc mov icebp int mov push movsb xchg mov js push and sbb push (bad) (bad) (bad) (bad) decl sub dec pop xchg hlt iret push push cs imul pop hlt jnp fnop inc push adc int mov push test inc lcall (bad) fsubrl mov (bad) push adc cmp imul mov add (bad) (bad) jb sbb lods ja xor stos mov push push push cmp rclb inc scas ret (bad) xor frstor call std xchg mov push outsl lods sahf xchg pop test shrb dec das xchg movb or adc int3 (bad) sub ljmp rcll popa in test add mov out call push out jg cmp fisttpll rcrl pop lock jmp inc (bad) mov inc pop mov cld push cld repz rcrl inc mov lds sub push (bad) mov daa sub imul test je mov bound test mov (bad) (bad) out inc mov add and sbb (bad) call sub (bad) xchg test sub ss loop scas (bad) (bad) (bad) jmp imul fsub lahf mov lahf xchg sub ror fwait bound clc lods dec pop (bad) (bad) (bad) call jp in ja add jbe ret jb pop push mov (bad) (bad) jmp inc jl push mov jnp mov ret cwtl mov or scas cli dec insl mov mov lods mov xlat mov push insl jnp jno (bad) jne (bad) (bad) (bad) out cwtl imul jbe cmp jae pop (bad) aaa mov (bad) fs addr16 outsb sub dec icebp or pop mov inc or dec jmp (bad) out add inc fcoml mov (bad) (bad) call loopne push cltd xchg mov in movsb dec or es (bad) inc mov xchg in fisubrl adc lcall (bad) (bad) (bad) jmp jbe dec mov dec cmp push lret out inc lds mov aad mov iret rolb sub push roll jge ja pushl out push rorb es push push add scas hlt push mov in sbb ss lods jb lret icebp in bound sub cltd xor sub inc loop mov xlat (bad) decl cmp stos gs cmc int3 sub xchg cmc scas add call bound and stos lock mov mov cmp (bad) (bad) call dec pop imul test stos mov lods mov incl enter inc and jl adc sub push or out push pop aam lcall dec stos and adc test decl dec dec aaa fiaddl xor xlat jne sbb fstpt jl mov call mov arpl lods dec mov and (bad) popf lahf (bad) (bad) mov xor imul pop gs inc in sbb inc lret idiv xchg out loope insl and cmp xchg sbb in adc dec out mov test aam out push cmp mov (bad) (bad) push dec pop push jo jns adc pop cli and add imul (bad) (bad) (bad) fistpll sub cmp pop fdivl mov lds rorl (bad) decl outsb mov (bad) int3 out cmp mov mov push push jp enter incl mov cmp loop (bad) lock jo nop bound inc iret imul (bad) push dec mov (bad) scas stos sub xor stos push pop mov imul xchg dec out add jmp scas cmp jno adc mov jnp fsts xor (bad) (bad) fcomip (bad) out sub dec push lret jne (bad) cmp dec (bad) arpl cmp ficom lock lds ja push and or and (bad) pushf inc xor (bad) (bad) (bad) decl inc (bad) out jl adc addr16 lock push (bad) push adc jne dec and pop sbb daa dec mov cwtl scas mov outsb (bad) (bad) (bad) mov adc adc xor in xorl jno outsl add (bad) fcomip in (bad) (bad) fsts mov pop into mov in bound (bad) (bad) (bad) jns pop jmp jp andl mov lods push jp pop add cmpl (bad) adc lock fnop (bad) mov jne xchg mov push mov sbb movsb (bad) (bad) (bad) (bad) mov and jp push dec outsl mov lds mov stos mov imul fnstsw lahf lret xor mov cmpsl ljmp cmp xchg lcall call dec pop lds mov (bad) (bad) in jo lods int3 jp test stos sub mov in jb out clc sbb imul (bad) incl xor jecxz pop mov in xchg jl mov xchg arpl sbb dec (bad) (bad) incl clc ficom cmp in jns inc mov cmp loop (bad) mov call pop fidivl (bad) pop stc add xchg inc pop dec xor stos jbe imull cmpsb mov cmp jmp shlb scas push adc xor jle es (bad) (bad) lcall loope je lods gs xlat mov push loopne stos shrl shl stos pop fsub push inc call add std outsl scas ret loop xchg outsb pop movsl sbb or (bad) pushl pop push clc shl arpl mov addr16 cltd outsb mov mov (bad) pushl fildl mov fcmovbe out test imul mov push pop test das test mov mov lods ja fstpl (bad) movsb inc xchg std ljmp movb xchg imul dec lretw add xchg push sbb dec into (bad) icebp mov push and (bad) mov push inc xchg imul in in jo imul pop and (bad) pushl pop jmp scas sub lret inc pop push adc mov fwait xchg mov (bad) jmp test jo jns lret inc cmpsl lcall pop icebp mov xchg and fwait ror daa pop mov icebp (bad) in (bad) imul mov jbe xchg andb loope add or push push roll jbe push pop ss push inc mov (bad) fild cli cltd je jge mov cmp popa inc movsl js push and (bad) jg ljmp push pop mov ja stos js mov stos push and sbb lods in mov pop and ror push out orl js lea rcrl ja xor out jo inc test clc (bad) (bad) jmp scas push cs xchg pop (bad) mov loope mov mov in xchg repz lock cmpsb or dec test cwtl adc pop test or or test (bad) incl dec mov pusha or or dec inc sub add or pop sbb mov or mov mov push and faddl sbb bound repnz hlt lret xor icebp outsl es lds test inc pop cs (bad) incl jge lcall pop leave push mov push xchg xor sbb cld sbb jbe popa push mov push and dec loope add or add mov add jo dec and stos ss clc (bad) sbb fyl2x (bad) in pop dec (bad) sahf push test fisttpl adc lods imul xor imul lcall push in xor gs xor aaa pop andb adc lcall xchg mov inc (bad) imul adc scas pop stos jge cmp dec sbb lds test (bad) les mov cmp mov sbb jmp push hlt cmpsl adc cld in mov pop je ss lods cmp (bad) (bad) (bad) ljmp insl insb mov sub enter fwait xchg decb insl xor pop sub mov ljmp (bad) dec xor push hlt mov leave lods jnp nop fiadd popf or (bad) push in ja mov mov loope mov adc movsl pop jge mov mov mov test adc (bad) inc inc inc insl in pop out sahf stos mov sub imulb push popf (bad) (bad) (bad) push movsl in lcall lods lret inc mov in clc outsb jb popa sub mov cli pushf cmp (bad) mov xchg sub or xlat fstpt loopne cs fstl dec push popf arpl or lret aaa xor icebp lahf or outsl cli sbb fist sub sub inc mov lds decl pop ljmp mov sub dec (bad) fwait popf cwtl fcomip (bad) (bad) jg push add push scas lods sbbl xlat add rcl lods clc push adc pop cmc incl (bad) adc xchg jle les lret inc mov (bad) jmp dec mov xchg sbb jbe lods mov repnz test fwait mov (bad) (bad) (bad) lahf xchg fs mov dec shll in out aaa cmp in pusha enter (bad) (bad) lcall push fwait (bad) mov mov push sbbl scas pushf lcall mov pop clc jmp sub inc js pushf stos (bad) test mov (bad) mov dec inc dec or leave idivl pop jmp (bad) call scas outsb inc inc sub mov (bad) enter ja,pt rcl or adc (bad) (bad) mov arpl loopne data16 xchg push fimull push sbb dec arpl add (bad) mov fcomps in jne incl call subl das (bad) mov ja test mov lcall fisub jl xor outsl mov mov ljmp loope (bad) fcmovnu ljmp xor jl test inc fcos mov lds mov jns push stos stos inc pop loopne inc lods push xor hlt fwait je cmpsb out aad push add mov lock (bad) jmp mov ljmp inc rol jb fisub (bad) fbstp jne dec mov push cmp xorb jnp mov les (bad) decl sbb push xor fidivl add mov (bad) cmp mov cltd outsl jmp xchg pop stos lcall inc hlt je dec imul cmp jnp dec and outsl add push mov stos lods push sbb (bad) pushl pop add ficomp dec mov scas in jmp push push cltd sti (bad) (bad) (bad) (bad) out lods jecxz aas sbb dec std (bad) aaa pusha xor sub in push and popf sbb (bad) (bad) jg mov (bad) jno add xchg clc mov lahf movsl or mov dec rcl jnp test js xchg or fstps jnp (bad) (bad) cmp (bad) xor mov cmp mov pop in pop fisubl jp push and adc out pop repz pop dec mov in xchg repnz dec (bad) cli stos cs out or dec inc fstl clc scas clc push jo push mov sub js negl and fdivr aaa pop nop adc cmp adc loopne pop xor (bad) pushl sub jbe jb out (bad) fwait mov insl add scas sub fcmovnu and pop cmp fdivl jae movsl adc (bad) mov (bad) repz pop (bad) lcall sbb arpl push stos cmpsb stos jne dec inc inc pop icebp dec rcrb (bad) (bad) call negl push in cmp push sub mov insl or rcll cld ljmp movsl push mov loop cli loopne fwait pop sbb test (bad) lcall cs call push adc dec jno jbe scas dec jb pop into and (bad) mov shrl lods pop (bad) push rcr scas stos dec imul leave lods jns jno (bad) cmpsb scas mov add xchg (bad) lods insl xor push fist jp ror rcll mov mov stos ljmp xchg xor adc jb mov push aaa fucomp ss (bad) ljmp stos (bad) pop sti xor scas mov mov scas pushl pop movsl sub cmpsb push mov xchg (bad) ljmp mov rcl inc mov test pop (bad) jne pop lods shr inc (bad) mov xlat mov stos mov push jbe pusha imul or mov xchg push (bad) pop push adc and das cmpsl mov or (bad) call xchg arpl ret lret loop mov cmp loopne decl push or mov aaa sub jb mov mov clc push sbb mov aad mov mov scas cli adc decb inc mov movsl mov hlt mov or (bad) jg mov scas fsub into push adcl pop out int pop (bad) (bad) (bad) call inc jnp jne jae ret jns mov inc sub xchg pop mov mov or mov in fidivr add int push xchg mov inc aas cmp call aad lcall icebp (bad) (bad) ljmp jbe sub fstpt and test daa sub inc xchg mov out test call or loope sbb sbb js dec in sbb (bad) (bad) fistp jecxz mov push xor mov jmp dec push scas sbb cmp bound jecxz cmp xor in cmpsb lcall dec xor pop xor push or (bad) (bad) (bad) decl fnstenv les in stos push mov popf jmp and sbb stos outsb dec test (bad) decl cmpsb push popf push jl add int add fisubrl mov inc cmpsb lret test mov jbe call std loopne and (bad) cwtl fcoms pop out jp out push fisubr mov mov jecxz (bad) jmp cmc mov pop sub clc (bad) dec mov xchg dec sub dec push push cli lcall movsl lock or dec lods enter mov (bad) jmp adc or add dec sub xchg push mov inc cli cs incl subps (bad) (bad) stos pop (bad) jns int3 xchg adc and jbe or add addb (bad) mov dec scas stc add push ljmp cmc fisttp xchg sub xchg faddl lds les inc adc inc das cli (bad) dec lds or add je xchg mov cmp cwtl sarl (bad) (bad) (bad) call xor les int dec ficompl sub and aaa pop (bad) not mov inc push enter clc lcall dec adc nop test inc cmpsl loop loop lcall in mov xor add mov (bad) (bad) (bad) ljmp js dec xlat cmp fistpl push bound cmp lret lea (bad) decl inc addr16 mov mov push mov (bad) (bad) (bad) incl lods inc push or stos pop push inc mov push mov (bad) xchg out fadds and push lcall mov fldt jne (bad) (bad) (bad) lcall test fcoml dec push xchg push mov push orl jmp push std cwtl cmpb dec mov jg icebp mov inc in sub test cmp mov (bad) std and imul push mov lock test jo jnp outsl (bad) (bad) pushl in insl xor enter dec (bad) mov aaa jge shlb out clc (bad) pushl fnstsw mov xchg fimul lods push mov and ficom xor push (bad) popf popf mov leave mov nop push test jge gs shrl or pop (bad) (bad) call insl fwait adc cmpsl out enter rorb (bad) (bad) imul push push cmp sbb push sub (bad) (bad) (bad) decl je mov jo daa dec and lods arpl dec int3 cs hlt bnd hlt mov mov decl stos int add bound lods ja lods mov pop xchg clc mov sbb mov xchg fisttpl fnstenv pusha push pushf les in mov int (bad) ljmp aas lds sahf jle add pop imul es xchg lcall lea adc sub mov ljmp fst bound jl jno lahf push insl mov and xorb push and jg mov repnz faddl (bad) mov jo lcall daa ret mov push ret clc sbb test test (bad) (bad) (bad) lcall mov sbb imul push push xchg gs bound out rcrb cli and stos (bad) (bad) (bad) incl sti push into mov xor sub call sahf sbb and mov sar (bad) (bad) decl gs shrl mov mov jns out pop inc lods or pop jg hlt mov sahf jl xchg (bad) outsl inc jne (bad) (bad) (bad) clc out imul pushf sbb gs dec sub ss sahf call mov insb in push mov int add (bad) call xchg lcall in mov rcrl jno fbld (bad) (bad) lcall int test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt (bad) mov cld (bad) jae sbb xchg push mov loop pop repnz cmp in xchg stos or (bad) (bad) (bad) inc icebp sbb aas xchg in push lods push data16 mov sarl fcompl jle (bad) (bad) pushl lea mov fwait sub test insb or (bad) (bad) (bad) (bad) mov mov jp xchg ds mov leave cmpsb lea adc sar xchg xor or (bad) push aas cwtl cli pushl pop repz xor add jg iret rol pop out aam lcall jecxz mov lcall cld add std sub imul cld daa ljmp ds xchg cmpb adc mov dec adc js out sub test inc inc pop hlt sbb push je xchg add shll cmp push outsl (bad) jg sub jge jg aas dec add pushf sub jb sub dec mov popf (bad) (bad) (bad) call outsl mov cmpsl cli jge cld call sub in ss mov mov pop call add and jl scas test cld (bad) rorl mov movhps add decl nop mov fcmovb push add sub sbb mov (bad) lcall imul mov push ljmp xor pop cmp adc and subb xchg pop lods mov mov cmp outsl lea sbb jg mov mov ret dec lret jg out xchg cs (bad) (bad) call xor fucomip xchg mov cmp push leave popf shrb push lahf jnp jmp pushf jg test lods dec scas mov mov cmp cld push (bad) (bad) (bad) pushl push aas xor xlat stc dec pop movsl jmp pop add mov jns cltd dec cld mov (bad) (bad) (bad) call mov leave and in repnz insl xor enter pop in mov (bad) into lret push rcr out and lret (bad) (bad) cmp or pop icebp pop enter jno jbe test dec and sti daa jmp pop insl (bad) ljmp clc jnp (bad) and ja fsubrs stc insl lret jge shrb enter mov push out into xchg imul cmp mov cwtl aad (bad) (bad) (bad) (bad) jge cs pop lret xchg arpl gs and mov push fldl inc cmp (bad) lcall cmpsl pushf insl xor pop push (bad) shrl push cs pop call (bad) (bad) (bad) dec dec inc (bad) jmp adc iret mov daa adc fnstsw icebp cmpsb dec dec fdivs mov mov data16 jmp aaa or nop mov jnp fcomip sub mov lock (bad) sub xor fstpt dec pop dec xor outsl fisubrl div mov insb xor xadd dec push pmuludq (bad) jmp cltd lahf fildl jle fisubl lods mov lahf into (bad) roll (bad) mov aaa movsb ss mov dec dec inc out push xor bound scas mov ret inc mov loop xor ds cmp mov test das jb push sbb or (bad) xor (bad) loope jp repz (bad) repnz push out das lods shr xchg pop xchg test fcompl test (bad) mov cwtl clc mov push push stc push mov (bad) (bad) (bad) jmp out xchg addr16 enter inc dec cmp imul dec push clc sbb mov (bad) dec stos jecxz xchg jae and mov arpl insb mov push idiv (bad) (bad) ljmp rcrw inc std adc xchg (bad) in scas mov mov jg fstps popf jno mov dec gs sti pop inc call sti pop outsl cli mov inc pop in enter push ljmp decl fcmovnbe adc sarl lret (bad) pushl or inc js call gs xchg xchg xchg xchg jp xor je mov push jnp fwait (bad) pop lock fstl cli cwtl push pop ret sbb jns dec fdivr scas clc (bad) jmp enter aas push shll stos popa xchg mov stos les jecxz loopne jnp jp movsl xor push jge in lods test fild mov pop push pop loope ljmp das sysenter (bad) stos mov (bad) (bad) call movsb add je xchg pop jle mov push movsb fdiv shrl ret or loop (bad) jmp imul sbb clc imul (bad) mov repz stos sbb (bad) mov pop fstps mov mov popf cli js call mov push dec in std decb inc xor pop jg sar mov in sti xor sar and out insb lea push (bad) repz push mov jno es pop add stc push xor mov ja shrb enter (bad) clc icebp aad (bad) mov xchg and in out fs mov push fs (bad) jg mov push mov jp xor lds inc mov push iret arpl out sbbl pop (bad) (bad) (bad) jmp test mov flds pop jg dec fistpl jg mov mov (bad) pushl xchg (bad) dec fxtract scas je ret cs je adc (bad) (bad) lcall aad fdivrl sbb dec add iret sbb mov insl pop test pushl enter into fs cmp das addr16 mov inc xchg mov mov mov xchg loop cmp dec (bad) fsubrs int fimul mov mov stos dec mov cmp mov (bad) fistl cmp stos sti mov dec addr16 (bad) mov dec (bad) (bad) (bad) call scas add outsl pushf pop cmp xchg mov push test pop cmc (bad) jb (bad) fcomip stos rclb ret inc test ret arpl (bad) rcll into (bad) (bad) (bad) incl xchg insb das add sub cmp cmp sbb push addr16 sub sub decl lds xor int3 rolb mov push sub adc mov jmp aas fnop lds sarl aad mov xlat jnp pop cmp and (bad) (bad) call pop pushf in (bad) mov ljmp mov xor repnz out std (bad) (bad) (bad) in jne mov faddl aaa mov popf jmp test add out jl hlt mov dec mov clc adc (bad) lock cwtl mov xor cmp out div (bad) es or and stos sbb sub pop mov arpl mov xor sar incl dec jmp (bad) icebp jecxz mov int3 jg push (bad) (bad) jg sbb push (bad) mov sbb inc mov mov sub mov in (bad) (bad) (bad) decl xchg popf push mov mov je jbe outsl les push fs push cmc xor mov pop fcmovne push pusha std jne incl cmp addl bound iret pop push mov push jle mov (bad) incl lods push bound jno or xchg fwait add push jbe mov data16 push sub cmp mov stos out loope inc jl int3 cmp das sar inc arpl lds arpl (bad) fmull mov (bad) (bad) inc sahf shll xor push rcrl dec les mov pop out stos lret mov popf mov (bad) cld mov mov cmp xchg fbstp add repz icebp test pop dec sbb dec mov inc bound call jg lock bswap insl and fldcw xor int3 (bad) (bad) (bad) inc jae jne jae lock stos flds mov rcrl dec jg (bad) jmp ret push pop adc ljmp movsb std (bad) sti xchg dec fbstp dec ret arpl mov sarb push mov repz jle jmp testl pop xchg je js aad xor mov (bad) pushl sub push mov push jmp fisttpll mov pop inc (bad) mov jg jmp cltd loope sbb into mov mov push fstpl xor (bad) ljmp ss push lds cmp xor xor jmp jle (bad) (bad) fisttp and dec or ficomp arpl pop add cmc mov adc adc decl add movsb push and mov mov cmp decl cmp gs popa (bad) scas sbb xchg (bad) incl mov jne cltd (bad) jno stos mov push dec mov add loope hlt test mov jne pop adc inc jge and add addl push xchg outsl dec jns fild dec and add or daa adc aaa adcl lds add (bad) (bad) aas in or and pop ljmp lret adc int3 lods stos es mov (bad) lcall xchg and push or imulb stos cbtw jp jno cmp lock mov sub rclb push mov mov pop mov dec push mov push lret iret outsb mov clc (bad) (bad) jmp jae int jo (bad) out hlt or scas cli cmpsb stos nop aam sbbl (bad) incl divb mov xchg push cmpsb push hlt seta (bad) (bad) ljmp out and dec inc (bad) fcmovu outsb rol int3 xor fs out jl mov lock pushf test lds cwtl sub sti addr16 (bad) (bad) ljmp inc sub xor cmp fldl sbb mov dec int stos jno idivb adc add push push sbb das cmp lea aad divl (bad) (bad) (bad) (bad) mov ljmp push pop add sbb ss mov pop idiv stos (bad) jmp dec add int fwait std rcrl out cld fisttp sub add out pop bound adc pushf sbb adc dec subl jnp das jp mov pop pop sub or adc rcll jmp hlt sbb imul cmp sub loop cmp insl pop (bad) (bad) (bad) call daa xor xor xor mov jno fwait lret mov ficomp (bad) (bad) (bad) lcall push shl insl dec js dec jne xchg mov aaa int hlt mov (bad) cmc aad jbe mov (bad) (bad) (bad) inc test push pop enter sbb lcall (bad) mov mov mov stos out (bad) (bad) (bad) jmp push sub imul je sbb in aad adc xchg fcomip mov push lods jno in cmp addr16 mov fcompl sahf popl (bad) (bad) (bad) push fidivl xchg (bad) mov popa mov sarb mov pop push jbe in (bad) (bad) call je xchg stc mov scas insb or dec dec hlt fidivr mov decb into cwtl mov test fiadd push adc out es rolb mov lret adc es adc push fidivl cmp out mov (bad) (bad) (bad) (bad) cli gs leavew inc lret jmp loop xchg add inc xchg push fcmovbe inc arpl or lock or lods imul and int3 mov and jmp xlat mov (bad) sbb aas or cmp mov mov and hlt outsb cmp lret scas dec dec dec stos xchg scas fwait popf jnp (bad) (bad) (bad) jle iret (bad) fisttpl lahf cwtl fimull dec fistl xchg int aas adc mov (bad) (bad) (bad) dec scas mov mov pop (bad) sbbb jnp add lret dec out jb (bad) (bad) (bad) jmp push into fst cltd jae lods sub jb es push push adc (bad) lcall cmp gs mov xchg push mov mov cmpsb dec lock (bad) (bad) call cs mov into rorl sbb or sbb lcall mov les adc sbb xchg mov cltd (bad) (bad) in lock or ret fidivrl xor cmp mov (bad) (bad) lcall bswap prefetch (bad) jns mov rcll jg xchg test sar cmpsb (bad) push repnz xchg mov mov pop into (bad) outsl ljmp (bad) scas clc jmp xor xchg cmp mov lcall push cmp (bad) decl clc popa jecxz hlt pop shlb insb cmpsl daa xor fwait clc ljmp xchg sub decb mov (bad) (bad) (bad) std adc mov rcrl mov push shr (bad) mov (bad) ljmp insl imul sub and ret or lock cwtl xchg les sub cmpsl in xchg sub pop fwait lcall stos pop fidivrl pop scas xor call incl das inc sbb aas push std cmp xchg mov call push inc gs sti inc (bad) cmp ss push fcom (bad) (bad) jg mov mull retw xchg adc push out dec decl in repz jne imul das adc (bad) (bad) (bad) pushl and pop cli faddl test push mov icebp lock pop push pop fsubrs cmp push jg jge xchg pop imulb mov movsb mov icebp (bad) (bad) (bad) pop (bad) pop jae shrl ja mov jmp jge popf add or lret outsb imul (bad) decl and (bad) int loop scas jge mov aaa int3 xchg (bad) adc int3 inc ret (bad) (bad) (bad) incl push mov andl push lds (bad) (bad) lcall ret jp xchg cmp shll fcoms lahf or pushf fwait dec (bad) (bad) (bad) lcall jle loop mov call or mov lret mov jg (bad) loop cltd pop lea pop cs in or (bad) jg insb ret lea xchg or push xchg dec xchg lods fldt add pop xchg xor ljmp movsb mov int out pop jno sub mov clc or jbe ret (bad) dec mov iret insb jg pushl adc xchg not ds inc movsl jg dec push (bad) pop stos cld sub (bad) (bad) (bad) jmp and mov add (bad) (bad) inc (bad) mov lock gs dec insl jmp cld movsb aaa jnp cwtl pop (bad) push or hlt pop xchg jnp popa std xchg and (bad) pushl adc in adc out mov scas xor rorb outsb pop incl cld pushl inc adc adcb mov bound mov sub jnp cltd outsl ficomp negl (bad) cmp mov jecxz push dec (bad) mov insl ds pcmpgtw (bad) (bad) jg pop loope sub push repz outsb add out push outsb pop (bad) jae cld cmp pop pusha mov sub pop cli xchg std lahf push mov out mov xor jns scas mov sbb stos je add (bad) (bad) incl push imul sbb dec pop fdivs int3 das pop scas mov scas push scas fsqrt (bad) (bad) js cld sarl xchg push repnz stos ja cmpsb cwtl pop test inc lods push cli call push sbb sbb ficoml xor (bad) (bad) out push in (bad) dec sahf dec lock (bad) stos push jl fwait sbb push pop mov int (bad) cmp test cld leave in iret icebp insl sub sub cmpsl lods sbb push inc aad dec sbb mov jge jb outsl xor ss mov loopne mov (bad) (bad) out jne insl pop xor pop imul cwtl inc stos mov ljmp dec cmc imul out xlat sbb fidiv sbb pop (bad) mov fcmovbe cmp (bad) (bad) stc loopne (bad) jge dec jno lods xchg dec pop push shll cli mov push add inc push pop or sub xchg rorb loope data16 (bad) call call ljmp insl test jle lea mov dec inc xor pop scas (bad) mov hlt mov in jmp (bad) xor pop sub lcall aas dec iret push js pop lea push (bad) dec mov enter jae imul fucomip sbb inc stos (bad) (bad) ljmp pop push cs jle repnz rcl jnp jno jp dec and das stc fcoms (bad) (bad) (bad) decl das mov pop cltd lret addr16 imul mov in pop add lahf xchg jb aas loop add lea scas mov mov xchg cmp sbb push xchg pop sub xchg xor hlt in push inc ret mov mov lcall adc cmc icebp cmp mov scas push jl fstps jae loope lock inc xchg cwtl test js arpl lods mov sub sub (bad) (bad) call movsb jae xor idivb mov pop enter xor loop push sti (bad) (bad) (bad) (bad) aas or mov test les lahf xor imul shr jp cmp in mov imull sti sarl sub push movsl adc (bad) (bad) (bad) ljmp push jae in out cmpl popf push xchg sahf mov (bad) mov pop jle sub (bad) (bad) jg stos push or mov js sbb cmp imul out int cmp pushf lcall (bad) lcall (bad) dec fcom mov sbb stc dec mov and pop xchg inc cmp jmp cmp ljmp xchg pop sbb xor sbb nop lods or adc mov lods mov out gs in (bad) (bad) jmp ds inc adcl loop outsl xor mov mov out sub sbb lret lock push repz mov pop movl test imul pop aaa cmc lcall jl cmp outsb (bad) sarl (bad) jg fidivr sbb out aaa daa and int3 jnp cmp dec icebp (bad) leave mov mov (bad) (bad) (bad) push je jnp pushf pushf cs insb mov mov mov push push xchg scas mov sbb out clc (bad) (bad) cld arpl push stos xchg push and aad xor xlat (bad) add push cmpsb dec push loopne call add nop cwtl dec movsl fisub mov (bad) in mov pop lock ja pop pop mov nop adc ret ja call sbb rcrl je test aad loopne push or dec xor (bad) decl in jg stos push adc sub in xchg jle push lods test and add rclb mov adc or std outsl mov inc (bad) dec push xchg addb inc adc sbb test xor xchg (bad) dec adc add scas push sar incl xchg xor and fsubrs cltd lods mov cmp mov pop lret sub mov push jle cmpsb out (bad) call stos mov jns mov mov sub dec loopne cs xor int (bad) jg icebp data16 xchg inc stos xchg scas dec or jb insl pop movsb jecxz mov (bad) jmp cmp pop fstl ss sbb shld (bad) jg jbe (bad) push mov xchg shrl mov popf pop cwtl push add pushl jbe inc ds jmp cmpsb cmp outsb lahf outsl aas sub test lahf cmp inc aad xor or dec sbb ret adc fisttpl add (bad) fcomip xor xchg xor lds and mov jb inc outsb mov mov pop add sbb xchg lahf ficoml cli (bad) lcall xchg and xor loop stos mov sbb xor call jmp in callw in adc (bad) enter cs xor call nop push stos jns ljmp mov into push je dec adc fdiv pop into xor adc sub pop xchg pop sbb dec test dec dec shl xchg sbb call sbb mov int3 pop adc push cmp add jmp in icebp (bad) es pop frstor mov mov aas cmp (bad) mov rcll cli pop push aaa pop sub gs lcall shrb mov lods fdiv sarl into into mov imul shrl hlt pop pop mov sub pop das mov mov popa add jbe mull and cmp jmp jp nop fdivr mov sbb fidiv fadds push pop push jo push aas (bad) (bad) (bad) pushl mov cmpsb cli dec adc lret cs pushf xchg mov fstpl leave (bad) mov (bad) popf push jmp (bad) (bad) (bad) (bad) out sbb (bad) mull insb (bad) fdivs out int3 dec daa aaa jno and (bad) jmp mov outsb push cld (bad) sahf or jno push rcl sub pop xchg mov (bad) (bad) push pop fs push cmpsb loopne fs xor fwait out mov ja,pt xchg rcl dec fisttp fdivs fistpl push inc push int pop fcmovb cwtl mov pushf push jne cmp pop stc xor pop bnd mov mov fcomps ret inc inc orl inc mov outsb dec addr16 add cld incl adc sbb mov mov (bad) cmp mov test add mov addr16 cmp sbb pop sub shll jae hlt cld mov aad (bad) jmp cld idivl insb pushf out cmpsl sahf adc mov mov popf ja xchg (bad) lcall xlat lahf jae sbb (bad) ljmp fdivrs fimul pop fs ror dec dec mov aam repz jmp hlt jmp fisubrl out lods (bad) jae in xchg cmc iret inc and dec (bad) xchg lods (bad) call mov movsb mov add std call push sub lods xlat inc xchg jo fimull scas or dec addr16 (bad) (bad) call push push lods xchg icebp sub imul jnp mov (bad) and pop std arpl xchg js jmp pusha pushf addr16 (bad) or das sbb cli lods pop cmc (bad) (bad) (bad) decl push cmp lahf lret cmpb mov jg xor dec or fwait push (bad) (bad) (bad) jmp xor iret xchg push shl insb cmp (bad) pop xlat lcall test int xlat or cmc pop das shrb dec js cltd stos sub fs pop fisttpl incl xor ljmp (bad) (bad) std push psubd jg clc clc test scas dec mov js enter xchg (bad) decl leave sub and call pop mov aaa cmp sar (bad) xor (bad) sub fadd stos in enter mov add pop dec inc and dec aam dec xlat (bad) lret in imul jae fcomip std ja mov in aam out (bad) cmpsl in movsb std (bad) (bad) decl push stos mov sti dec stos mov xchg ja (bad) clc pop jmp mov sub scas xor pop adc fisubrl xchg jbe hlt mov lock clc out cli fwait xor dec popf (bad) and in xchg pop addr16 in adc stos test xor mov scas insb (bad) (bad) ljmp les inc imul call pop rcrb leave orl cli pop jmp fadd jp jp add jg cmc mov and cltd mov adc sbb cli push (bad) aas and scas cmp cs adc repz fmuls insl call jae incl mov push cmp rcll lods ds add xlat and lcall insl xlat xor imul push cmpsl fnstcw call mov sbb jl stos fdivrp jmp or (bad) xchg or int imul mov iret fmul mov xor jg fst stc ljmp fwait scas daa adc outsb jmp dec push mov dec insb pop stos (bad) (bad) (bad) call pop xor fnstenv cmp rcrb sbb (bad) mov lock cld pop xchg (bad) fnstsw lcall pop clc push mov cmpps hlt push fisttpl repz out bound sahf push fs pop mov movd cli (bad) xbegin xor sbb (bad) (bad) fildl sbb inc xchg and inc sarl xor mov icebp mov nop cwtl adc shrb jnp add mov mov mov adc fdivrl leave pop cmp ljmp cs jo dec sub cmovbe mov dec lahf sbb pop call loope sub decl pushl push ror pop sub loopne and enter sub popa lret (bad) pop (bad) (bad) (bad) (bad) std push fdivrs and stc cs xor sarl mov cltd cmpsl lods popf bound mov scas js jmp or dec lret ret stos (bad) (bad) ljmp or ficom or frstor or xor (bad) (bad) pushl aaa scas std enter add iret lret arpl lea cmc mov outsl ret (bad) lcall pop ss jns xchg arpl inc pop adc ja (bad) incl cmp loope daa int3 repnz and mov jbe scas mov (bad) (bad) lcall in cmp loope addr16 pop sub mov and pop mov pop out (bad) (bad) mov dec lods jl daa inc imul adc jmp inc sbb (bad) (bad) (bad) lcall insb push inc std bound scas cmp jmp lds push add sahf in lock roll and lock fisttpl pop and (bad) leave mov out jg lahf call lea aam test rcll jb jo push pop mov stos mov int or loopne cmpsl xchg std test addr16 cmp add (bad) (bad) (bad) decl inc inc xchg inc cmp or lds sbb pop cld call lock shll stos and int out clc push (bad) mov (bad) (bad) call sbb fiadd dec testb adc sbb or sub (bad) (bad) (bad) decl stc daa mov in pusha cmp divb dec mov fcompl and xor popa stos aad cmc cmpsl sub ds pop int3 push stos and pop lcall (bad) pushl ret add (bad) ja jecxz sahf add mov cmp push adcl int3 inc sbb add rcrl data16 shlb ja (bad) lcall insb cwtl cmc inc insl cmp pop adc sti push mov mov jno pop jmp (bad) pushl iret push imul or and mov sub repnz aam jbe (bad) (bad) mov lret popf or xor call mov bound test mov (bad) (bad) (bad) lcall lcall mov icebp sbb mov gs xchg je lea xor inc pop ss jae div bound push inc out imul sub daa movsb (bad) cmp push or (bad) (bad) (bad) ljmp dec inc outsl out adc xor out in cld lock inc es pop ficompl (bad) (bad) pushf (bad) mov es jae mov outsl cmpsl inc std xor icebp (bad) (bad) cmp ret or arpl adc cmp xchg and sarl and (bad) ljmp rcrl and xor repz mov push inc leave outsb (bad) out xlat stos jb lds push into fwait mov push shll inc popl xor lds mov (bad) mov push addr16 pop cmp (bad) (bad) jg mov jmp sbb jp adc fsubs inc push ds (bad) (bad) jmp push mov sub lds push adc insb mov (bad) (bad) call mov pop and pop test xchg je fs jge sub lods out dec scas dec frstor dec aad sbb fistpl push jmp jno mov sub pushf lret ja (bad) lcall push mov test in mov es in in jno orl push (bad) (bad) decl xchg dec hlt mov adc ja ja inc add pop lods lcall cmp inc (bad) in and (bad) fild iret or adc add jns sbb (bad) jmp test add add add inc inc and fdiv jmp add push mov and inc add fimull clc addl add rolb (bad) jg hlt orb inc test jbe or imul cltd cwtl adc sbb adc scas cmc jne mov mov scas (bad) (bad) (bad) lcall shrl and (bad) leave adc inc pop cmpsl bound das outsl sbb cmpsb divb xchg dec inc xor mov and stos sbb mov cmpsb (bad) mov adc dec mov jmp adc cmp push pusha into inc in sbb cmp in add pop xor push (bad) jg cbtw into mov out ret fistp cmovge rcr repz in pop je push std mov lahf arpl and popf lahf inc fild repz (bad) (bad) pushl scas mov movsb cmc ret and lret jo movsl aad aad scas iret mov (bad) incl adc and add sub mov (bad) (bad) incl ds scas xchg sbb xor clc mov mov mov inc incl stos adc ds (bad) pop outsl inc inc pushf mov idivb (bad) (bad) ljmp fucomip clc lods pop cwtl iret imul push cmp rcrl pop pop fs (bad) call std repz std and loop jbe and fstpl (bad) mov ljmp imul jb push imul (bad) lcall mov sbb pusha dec (bad) addr16 inc lret sbb push in test adc cli cmp add nop imul jmp call mov fldl imul lods gs sbb data16 (bad) outsl mov or (bad) dec addl dec sbb jns (bad) (bad) dec jle sub sbb push or pop mov cmpsb (bad) (bad) jae or mov (bad) (bad) pushl iret shrb bswap or repnz ficomp pop ljmp mov add inc sti jle cld mov jg inc aas out push std ljmp outsl das adc mov xchg mov sar cwtl mov mov mov dec (bad) decl insl cmp out dec lret outsl pop imul stc inc sarl cld push out popa push negb cld imul cli xchg add jnp fnsave mov (bad) (bad) (bad) fdivs popf lea (bad) into fxch into dec repz insb mov mov (bad) xchg dec hlt jae loope loope ljmp (bad) mov (bad) (bad) mov mov rcll loopew std mov sbbl pop adc xchg cmpb mov imul dec xor or jge and incl (bad) pop push xchg rcr or (bad) call sub shlb xor scas je pop xchg popa mov movsl sahf mulb icebp jle cmp (bad) jle adc pop xchg enter icebp imul xchg pop jmp enter popf or xor aas inc (bad) pushl dec inc sub add xchg fwait xchg mov fwait xor xor cmp (bad) jle ret (bad) (bad) call mov jmp in shrl std inc popa std mov sub das cwtl (bad) (bad) in push mov repnz sub xchg or ficomp enter lcall mov in sbb lock lcall mov mov mov (bad) pushl ljmp pop pop mov divl mov hlt lcall or pop mov xor fs xchg xor (bad) jmp int (bad) sahf pop enter mov cld mov imul mov pop (bad) imul fiadd (bad) (bad) ljmp sub jl push push hlt (bad) mov imul lock inc ljmp jo (bad) xor cs lcall out push lock (bad) (bad) incl inc xor sarl imul mov cmp push mov sbb mov cmp inc fs std in (bad) (bad) pushl sbb cmpsb scas stos mov cmp push inc stos lods das bound sub xchg pop (bad) (bad) (bad) call (bad) mov test addl mov mov hlt aaa sub ja push (bad) (bad) (bad) (bad) cmp add xchg jecxz outsl mov aaa (bad) sub (bad) pop lcall test ror call xchg sub insb lods cmp in aam (bad) (bad) jmp jge pop stos dec jb test lds and fcompl (bad) (bad) mov inc push or add dec xlat mov ret (bad) (bad) (bad) jg pop js in out sbb pop mov pminub aad (bad) xor out (bad) (bad) aas or push push and mov mov pop in mov (bad) lcall decb bound pop int3 jae out outsb cmp mov mov incl loope cs lea pop jp cmp cmpsb out mov sar cwtl scas mov inc fisttp pop jp and dec xchg dec int3 (bad) push dec pushl data16 sbb scas jnp (bad) jne fsubrp push mov fsubr repnz mov nop movsl mov notb jmp jp rcrb jnp repnz shr mov fldt loop dec shlb mov js adc mov flds (bad) (bad) decl jno xchg in pop inc stos fistl bound mov sub roll xchg mov jb (bad) (bad) jg sub loop sbb bswap test mov and (bad) (bad) fisttp nop jmp xchg mov setge add (bad) (bad) (bad) fldl aaa lock imul idiv xor outsb pop adc lahf dec out faddp jb or mov incl mov cwtl and cwtl in add aad jecxz mov (bad) incl outsb or (bad) enter punpckhdq dec js inc sti xchg sub repnz (bad) call rcrl xchg aaa cs mov lds xor mov xchg ret mov dec pop out (bad) mov mov mov mov inc mov pop mov (bad) movsl lahf aaa xor and push cmp jb mov mov (bad) pop pushf dec enter jg jg stos ja addl push mov dec int aad js sbb data16 push iret (bad) (bad) jg jo xchg sti cs test push hlt lods push ss mov das stos es rorb pop dec call loopne ret dec mov pushf sbb pop cs (bad) mov jns outsb into and jg (bad) je cmpb mov pop and adc fcomip inc xchg xchg (bad) call fs scas inc data16 sub (bad) (bad) dec jbe jnp add push and push pop or adc sub (bad) (bad) pushl out stc xchg push cmp sub push (bad) inc stos (bad) sub (bad) (bad) ljmp loope lods stos push pop mov js pop adc push sahf fdiv repz dec dec rorb iret (bad) (bad) adc sub leave int3 ret mov pop in mov xor outsl mov lahf pushf (bad) aam iret in xchg arpl lret push push mov movsb sub out aad lret push mov jmp push pop in adc bswap imulb icebp pop mov ljmp mov jbe pop call xchg decl (bad) jg mov jge xchg aas push jbe or movsb inc les inc jne insl inc (bad) mov out mov mov (bad) insb push in stos mov (bad) hlt out inc fs dec inc in mov inc and xor int cmp dec ret insl add iret js,pn fincstp movsl in sbb scas movsb dec inc dec jg enter insb mov xchg cmp xchg dec (bad) call (bad) add adc push xor lret ds or sbb push out mov sub ret repnz fisubrl and leave (bad) (bad) (bad) incl sub ret xchg xchg subl push nop and ljmp lods in into loop (bad) jmp cli cs (bad) jge shrl fisttpl dec dec (bad) mov lds call out imul stos lea cmc jbe (bad) (bad) decl js dec cmp imul lods aaa ja dec mov ljmp dec xchg pop push in (bad) int3 dec dec dec ficoml inc pushf (bad) (bad) ljmp cmp inc mov sub ret xchg int push jbe in xacquire ss sub (bad) (bad) call fwait mov gs imull lcall sub cmp (bad) (bad) jae scas int mov (bad) pushl xchg fisubrl sar aas push sub jmp push xor mov push fcmovnbe outsl clc (bad) lcall jl add loope (bad) cmp lret cmp aam and xchg (bad) (bad) (bad) call scas aaa fistpll stos mov jmp leave jnp and xchg leave (bad) pushl xor push les jbe lods lea (bad) (bad) call sahf (bad) pop in in cmpsl jns mov insb sub or into (bad) int3 sub and or loop cmp jge push cmc jno int decl (bad) insl sbb jbe sub frstor xor in fisubr (bad) (bad) (bad) (bad) mov jb bound fs (bad) dec cmp pop fxch push pusha xor scas push fwait mov and in pop ja insl cmp in movsb (bad) pop stos (bad) decl adc std sahf cmp adc inc outsb sub (bad) and xor jl cs das stc and fistl imul mov (bad) xchg std (bad) (bad) lcall pop ret push dec sub sub mov sbb jno xchg xor scas (bad) (bad) pushl jl push pop xchg testl jp mov std mov es (bad) mov mov mov jmp imul out lahf mov ljmp fwait mov loopne lret adc mov aam test rcrl lods cmp iret rclb (bad) adc shl lods inc outsl fcoml (bad) incl int3 inc pop inc mov mov mov ficompl and outsl call inc dec movsb mov mov mov sar (bad) lcall fmull xchg mov xchg popa mov imul jb mov xor insb fbstp shll fdivr or xor jbe ss call js dec call mov fwait and adc insb jae dec jbe sar (bad) pushl lret fdivs sbb aad mov sub xor mov mov jb jae stos mov test scas nop mov xchg sar rorl ja add push push (bad) (bad) mov fnsave (bad) xlat ret pop clc (bad) xor (bad) xor bound (bad) (bad) (bad) ljmp stc pop mov sbb jmp xor mov fprem cmpsb dec pop dec ss (bad) (bad) (bad) (bad) jp imul push stos in int stos adc ja sbb jg out push jmpw xchg (bad) fild nop loop xor mov arpl popl (bad) (bad) pushl push lret xor push stos imul push sbb jecxz sbbl or movsb (bad) (bad) (bad) pushl outsl ficomp jg push mov (bad) mov add mov (bad) call call in inc pop ficoml add push in testl lcall add xor add mov daa xchg adc and je inc cmc dec add sahf push xor or add dec call add or inc jmp dec add (bad) (bad) jg mov imul mov test xor sar (bad) (bad) pop lahf inc movsb inc xlat fucompp adc sahf mov adc sub push or mov or (bad) out hlt nop pop fsubs xchg jno scas dec inc cwtl dec mov push (bad) jg scas or movsl mov jno pop jnp movsl mov push inc stos push jb out decl enter imul xchg js dec (bad) (bad) (bad) incl imul (bad) mov push adc lret (bad) es pop das outsb inc stos pop sahf mov (bad) mov js repz push cli (bad) aaa ljmp in xor xor pusha dec push jo and hlt das jl adc jmp movsb jb lcall mov (bad) idivl jb (bad) (bad) ljmp or or dec or hlt js jl and fsubrl ret repz call jmp lea test loope sti inc stc shr inc stc das xchg shrb xchg stos (bad) (bad) (bad) incl mov mov (bad) aaa push or sbb sbb js sarl call ljmp or or dec adc cltd int aad (bad) mov push scas inc fcmovne sub mov aam push out inc leave adc adc sbb xchg imul ljmp mov inc mov inc mov ret xchg xchg sub adc scas mov stc loope or out lret xchg loop push (bad) jle lret fcomip jmp lret xlat jae inc sub scas mov xchg out mov (bad) (bad) decl pop push sub stos jmp fdivrp cmovne (bad) fldt xor cmp pop mov pop repnz dec and cmp int (bad) jl dec mov stc mov lcall out xor into or rcr test mov ljmp sub std stos mov fs dec ljmp in cltd pop out pop pop jmp ljmp xor pop push scas lcall adcl pop cld mov (bad) or int3 pushf test movsl push incl movsb jecxz test insb sub out dec pop sbb (bad) call (bad) mov mov mov daa and sbb pop outsb rolb (bad) jmp sub inc mov inc outsb stos xchg dec mov sub sbb mov ljmp jg aad dec dec mov enter repnz dec std inc mov push std or sub lret popl cmc push ja lret push add out cli push (bad) jbe test mov imul outsb pop mov int3 lret (bad) fcoms (bad) (bad) (bad) fist and jnp jae mov mov fucomip dec cmp (bad) (bad) pushl cltd fwait nop mov shrb out mov push jle arpl and fwait pcmpeqb dec clc mov pop cmp dec pop mov xor pop test and push or int3 cmp int3 scas aam ror mov cld loopne incl in xchg (bad) cmp popa loopne leave std cmpsl mov (bad) ljmp and xor jno inc mov fisubl outsl push (bad) mov jnp sahf test (bad) jmp imul pop mov (bad) cltd dec ret stc fwait pushf (bad) (bad) (bad) out aaa into mov pop cmp aas cs aas sti jmp jge sbb loopne (bad) jmp mov fcoms les sahf stc push daa lds jns mov sarb aaa cld call lcall xorl int dec rcrb or sar incl test mov push test dec add ds std or call dec xor push and test jne mov sub mov xchg cmp or aam add mov cmp movsl data16 stos in neg lock xor out push mov std lcall dec movsb add push js jmp lcall enter (bad) call jg xchg (bad) jo mov or pusha mov (bad) out ret push test mov mov jg add cmp nop dec sti (bad) lcall jo stos fimul and lret jle xlat cwtl mov (bad) and jo (bad) (bad) (bad) jg dec mov scas cmp add scas xchg jge out fsts sub xchg mov sbb cmp (bad) decl insb cmp in adc das xorl fidivl rcr mov and (bad) lcall repnz ja push xchg test ds cmp and dec xchg arpl mov jno (bad) (bad) push mov mov imul mov int3 mov dec (bad) mov shrb popf imul sar (bad) inc push in mov (bad) jp stos outsl dec hlt ljmp jg loope mov and adc mov mov sti push sub nop jle or movsl lea push in ss cld (bad) lcall int3 mov xchg jns inc mov jle cmp (bad) cmp test pandn xchg push adc (bad) mov and lret cmp sub icebp sbb (bad) lcall pushf xchg xchg push and jb sbb sub cmp (bad) fild gs or imul cmpsb in (bad) (bad) mov xor xor jb lret push inc (bad) push pushf fs (bad) pushl std outsl lret mov push scas and fstpt inc xor stos mov (bad) (bad) (bad) jmp xor scas jp pop cmp inc (bad) cmc int3 (bad) lahf stos dec (bad) adc mov mov in fstps cmpsl insb and xchg cld xchg pop stos pop pop (bad) (bad) (bad) push cmpsl mov sbb mov gs lret stos jne test outsl ficomp es sub (bad) jg decl xchg adc pop (bad) sbb mov mov mov incl cmpsb hlt xchg aas leave xor sub add (bad) hlt lahf inc insl pop push or cli ljmp mov (bad) icebp js mov adc pop jp pop jl inc lods (bad) jg lock js cmpsl push sub loope aaa clc sub in (bad) inc jecxz incl dec mov sub arpl dec and rorb into xor mov inc loop cmc lods mov xor push int push pop lea fnstcw jmp pop and sti jp imul jp xor xchg (bad) jmp mov add ljmp data16 dec pop (bad) fincstp cmpb in (bad) aaa std call xchg jl mov lds bound inc arpl out (bad) mov (bad) (bad) pushl jmp daa adc stos insl mov and dec cmp add cld sub cmpsl jl (bad) (bad) mov (bad) sbb push leave mov daa sahf fisttpl jno and push popa pop or (bad) jmp lahf int push mov iret es gs mov dec adc xchg fidiv (bad) mov gs mov or adc imul adc mov jp ljmp push adc in jne push sub fwait cmp (bad) lcall push lods sub cmp mov (bad) (bad) jmp sar sub aam ret jl pusha ret cmp sub cmpsb pop mov imul sbb jmp repnz cmp add mov dec mov cmc fbld mov (bad) enter jg jp fist pop inc mov xchg mov in popa decl mov addl xor jp inc and jne test (bad) pushl or int mov aam int3 dec inc addl cwtl xlat (bad) (bad) (bad) (bad) ds jb,pt mov dec and cmpb push cli pop mov ja cld xor (bad) (bad) push jp mov add and pop mov or mov xor gs (bad) (bad) lcall cmp fs insl xchg dec push out movl lcall movsb adc mov pop cmp jl push and fmul and loopne (bad) jg jne xchg push rcrl testb test cmp bound lods cltd pop mov xor incl xchg mov or pop shrb dec xor lock cld pushl mov mov jp jbe outsl dec imul (bad) (bad) mov cs enter push (bad) pushf xchg xchg adcl adc push std iret test sbb pop jmp pop inc jmpw jmp pop js ret imul ja das clc decl pop fs imul jmp lock or js dec add imul pop frstor outsl mov insl jp lret sbb push mov sbb rorb outsl mov sub or (bad) (bad) call mov or jge int mov xchg mov xchg (bad) (bad) decl xor dec jo fdivp or push (bad) jnp pop aaa scas push cmp out into sub (bad) (bad) ljmp jl jb popa mov (bad) inc mov ror es lret int3 dec shlb (bad) jmp jmp and rcll cmp mov loopne mov sar lods push sbb pop xor clc xchg bound pushf scas sar (bad) (bad) cld in lods push sub sahf lret movsb in test lods add cmpsb ja add jnp cmpsb ljmp mov das push cmp mov sbb andb dec mov (bad) (bad) (bad) (bad) jge pop (bad) nop int xchg popf xchg jmp enter call jae iret ja cld mov sbb test (bad) hlt addb mov outsb pop adc bnd (bad) jg add push int3 lcall mov (bad) decl int pop xor push movsb push jge cld (bad) (bad) (bad) mov (bad) (bad) stos fadd ret rcrb mov xchg sbb je cmp ljmp mov mov inc sub hlt fsts mov cmp jbe mov xchg stos imul leave (bad) sbb (bad) mov movsl push stos sbb jle daa lods (bad) fdivr add in dec (bad) mov sbb mov bnd pop pusha cmpsb sub and dec sbb inc rcrb sbb mov xor sar (bad) jmp sti push add pop mov imul (bad) (bad) decl ret and test xchg cmp leave push cmp push clc (bad) ljmp je repnz mov cmc push mov jecxz xchg test (bad) inc sbb mov adc fsts sbb mov in insl (bad) decl inc inc dec cmp vcmpss adc loopne (bad) jg call and lret jno,pt and push leave and mov lds imul mov push push sbb adc gs xor insl iret cmp movsl sbb sar (bad) mov pop and test push int3 jle sub mov (bad) jg rcrl (bad) or pop xchg xor cwtl sub and pop adcb dec les ds (bad) (bad) (bad) add aam out pop je lahf and stos outsl inc movsb orb outsl cli and out imul add sub add rcrb jg adc add sub mov sub bound or pusha test bound (bad) (bad) (bad) incl test inc push test adc rclb (bad) add dec jns sbb (bad) (bad) jmp cmp lods js pusha push xchg movsl push ret int3 call mov mov es (bad) ja xlat push sub call pushl xchg sub cld ljmp add hlt jb adc (bad) pushl inc pusha mov pop jb jo hlt (bad) mov jle fs dec mov (bad) (bad) (bad) pushl mov popf jge outsb js xchg (bad) (bad) aad adc icebp pop pop pop fistl cmc (bad) inc aam xchg adc adc jg inc rcr lock push stc mov cltd scas outsl stos (bad) xor mov dec add orb add inc inc test mov nop pop sub fistp imul aas inc jl cmp (bad) (bad) call push nop cltd stc and cmp mov mov push jbe cmp loope (bad) (bad) call in sbb push jnp fistl push sub xlat daa (bad) into sub pop sarb xor xlat lahf pushf test das push popaw in test or (bad) mov sub hlt adc insl push adc in mov or in xchg sti loop push xchg adc (bad) mov popl dec mov push and (bad) (bad) (bad) (bad) incl xor (bad) lret xchg sub sub xchg popa xor in mov jmp popa mov jb adc jb adc movsl mov pop (bad) decl mov mov out jmp testb add (bad) (bad) (bad) lcall lea imull xor jmp mov adc repnz cmpsl jb aad imul pop xchg sbb rcrb clc lret bound out cwtl (bad) mov (bad) (bad) cmp (bad) into cmc fildll js clc dec js arpl jb adc cmp insb inc jae (bad) decl std pop ret fwait pusha icebp lea mov xchg out (bad) call bound aaa vpmaddwd add test (bad) (bad) (bad) (bad) call lret pop aad and loope push bound ja lods je into xchg push (bad) (bad) (bad) (bad) fimull (bad) imul fidivr push xor pop pop movsl mov jmp jle mov out mov xor fbld push fisub incb dec lods push (bad) mov into mov lahf lods xor or (bad) (bad) out popa jmp icebp jmp or jbe (bad) cmp lret and cltd js icebp (bad) (bad) incl ficomp out ret orl repz repnz lahf mov out test out mov pop call sti decl (bad) aas outsb jle (bad) stc inc cmp jne push and push hlt pop xchg (bad) (bad) (bad) (bad) cli imul aad fstps outsb lret fwait push data16 mov scas jmp (bad) jmp sub cli popa pop fidiv das clc call arpl inc movsl pop mov pushf push xlat and int3 sbb mov (bad) fnstenv push cmp dec sub pop xor sub mov xor and xor mov push sbb and ja sahf lds sbb cmpsl jmp push push dec outsl cld mov mov adc ljmp sahf jg sahf ja sub (bad) (bad) in cltd xchg sub ds xchg in jns pop mov xlat data16 lods decl lods push inc cli in in or pop cli jbe aas push fs (bad) (bad) (bad) ljmp add push mov add aaa data16 dec mov cmp hlt je,pt popa lret pop sbb (bad) lcall int3 arpl (bad) adc xchg push ret mov je xchg xchg jge rcrb mov mov (bad) (bad) call pop cmp jg mov jle sub mov mov mov (bad) gs sub mov pop lods int mov cmp cmpsl push int3 mov pusha dec push lahf addl fcmovu out xor (bad) (bad) ljmp sub mov inc stc and mov in fidivrl stos sbb xor aam and or (bad) (bad) (bad) jmp pop mov fcoml nop mov mov push mov sar mov dec mov stos push sbb inc fimul add xlat push sbb push insb pop xchg xor cltd test lods fyl2x push mov (bad) call (bad) xchg ret pop in hlt xor xchg mov js push ds lcall ljmp test sarl mov (bad) mov dec jl dec sub sahf in jo sbb pop rcll jb mov push inc (bad) jl aas rorb addr16 popf mov pop (bad) dec xlat inc in ljmp aas push in (bad) cmp sbb (bad) (bad) decl psubb in pop stos cltd ljmp pop aad inc mov cmp (bad) cmp outsb sbb ljmp push rcl cwtl rorl mov add lds inc dec (bad) mov jno inc dec jmp fimull xlat jp testl push sbb sub (bad) (bad) decl out fwait outsl fistp insb jp (bad) jne jp rcrb stos popa popf imul cmc jmp (bad) pushl clc cltd ja add and or subl aas aad out hlt clc incl js dec xchg dec lods adc mov movsl add dec lds xor outsl mov push (bad) mov push inc fsubl stos push mov addr16 mov (bad) call loopne adc dec movsl scas cmpsl xchg imul mov jecxz push dec mov popa inc pop scas jnp imul mov insl mov clc (bad) (bad) (bad) cmp sti push sub push divl xor mov jle dec in push sub (bad) insb in (bad) jmp add ljmp xor mov sub push test push out out jne test jb pop loopne jae (bad) (bad) mov js pusha dec into std mov js xchg jnp jmp pop hlt and sub jbe mov push mov mov stos jg cmp jmp decl ds imulb stos lods pop push dec lret push add das js out andl and mov scas dec enter mov leave pop xchg imul scas pop sysenter cmpsb dec (bad) (bad) dec sbb fs adcl sub scas imul jp cmc leave je adc mov (bad) incl imul or push rcrl mov mov nop inc rorl jge sar (bad) (bad) decl addr16 nop sbb push sub test (bad) enter jmp scas pop imul (bad) call mov push insb dec pop int3 dec iret inc xchg outsl (bad) and lcall je (bad) (bad) jmp test xchg adc and insl sbb sbb arpl scas incl int aaa xor (bad) ret cmpsb mov cs pop clc mov inc jbe (bad) iret inc into aaa std (bad) pushl and jp (bad) mov adc test pop mov (bad) out clc call pop dec lods frstor jae dec inc xor ja push push mov mov mov push mov jno (bad) ret add fadd lret mov aas xchg sub pop mov mov mov mov mov jl (bad) (bad) call mov in sar in rcrl or pop cs or mov ds cwtl ficompl insl imul mov cmp jge (bad) pop popa add (bad) jbe (bad) (bad) call hlt sahf enter or ficoml add push adc push dec fdiv jmp sub cs cmp (bad) (bad) jle mov sub xchg mov mov lock fnsave push and xlat popa (bad) (bad) (bad) pushl (bad) jne outsl cld fdivrl cmpsl push call fistpl cmp aas and (bad) pushl mov xor push mov fs inc push pop enter (bad) (bad) pushl in add dec xor das leave aaa and cltd jge int xchg in jle (bad) (bad) (bad) call mov sbb arpl aad stc jae pop xchg push mov adc cmp incl or sbb adc dec scas and jns imul mov push test mov add incl add mov repnz rolb pop cmp adc lret add add aam add inc lret and aaa dec add add cmp inc incl (bad) loopne mov add out popl sbb iret sub add dec outsb sbb arpl (bad) fbstp jae dec add xchg sbb inc xor mov jp lea add pop aad add jnp jle cmc dec push mov popf das pop or (bad) (bad) lcall sbb add xlat cli dec xchg cmpsb loop gs jge cmpsb jle (bad) negl cmp sarb call popa into push mov push and add in adc sahf jno and xlat jne out mov mov add push cs (bad) into mov jae xchg (bad) mov mov mov ds xorl call std inc cmp jno and mov lock cs decl pushf arpl (bad) xchg nop jg (bad) (bad) jle (bad) notl push enter nop xchg mov js stos xchg push lock (bad) pushl mov sarl dec xor ret xchg mov fstps into test adc fcomip lcall (bad) outsl push jmp aad in sbb imul lcall les adc sbb mov lcall int adc lods lods sub mov bound lods sub xchg jbe cmp sbb (bad) call repz inc xchg xchg mov mov inc xchg nop data16 movsb mov jbe cld push mov loop (bad) (bad) lcall xor (bad) adc and jnp mov out mov clc vxorps jge sub jae add xor rorl movsb sub push pushf mov (bad) (bad) lcall mov jge inc leave xorl in push add push adc in call scas aas jne jnp lcall hlt addl jg add adc push loope jno (bad) out sub cmp pop in test and mov leave test sar pushl mov adc rcll ds cwtl lods adc insl (bad) ljmp pop add xchg jmp push roll jb sbb js loop (bad) decl push adc dec dec into jl mov es inc (bad) (bad) je (bad) (bad) mov dec pop or xor push lock cmc sub ljmp loope lret mov inc pop popf xchg shr xchg ret mov mov scas in cmp (bad) decl push mov xor and mov daa cmpsl loopne mov (bad) jg mov push mov lock fs aas push and inc test and fmul dec push cs ret les fnsaves ljmp push lcall int xlat dec into jmp push out mov mov lcall (bad) xor mov mov enter add add mov sbb sub or pop sub sub sub aas sub fdivl imul iret and fisubr pop mov out add pop rcrb dec pop dec jl lcall or jmp add cltd outsb add (bad) call jb xchg mov fs push sub (bad) pop xchg push jg icebp lcall mov cmpsb jae sbb sahf xchg pop stos mov hlt std insl shrb or mov movsb lods or mov test jae cltd push jmp add hlt push mov aas xor sarw or mov mov push ficomp negb into mov jmp mov xchg stc and cltd repnz cmp (bad) incl lock lret pop mov pop jp das push jge dec sti sub call mov movsb sub xchg mov pushl push stos data16 jnp ret std push mov cmp xchg sahf pop (bad) jl clc pop cmp mov add lock push les cmp mov call pushf out repnz jecxz adc mov pop lcall add scas adc mov ja cmp sbb decl mov pop test loop (bad) (bad) ljmp les pop clc mov aad mov inc popf test (bad) imul inc dec pop ret das cmc adc nop mov sub push jle push imul call data16 push jne push std (bad) dec cmp jecxz inc rcrb rorl pop repz in popa jge incl ljmp insl jae imul xlat (bad) call mov ror sbb ljmp loope stos out mov sbb ss mov mov aad push jge or sbb xor sbb (bad) mov jle mov insb or dec push outsl cmp jmp in mov in es pop insl out xor ret gs sar fcomip jg iret add fistpll xchg insl leave inc enter jecxz adc cmp scas nop cwtl jg test mov in xor popa fcoml insb jmp lcall (bad) mov cmpsl and push insl in push ja pop mov add sti cmp sub clc lods loope out push mov mov (bad) (bad) dec nop lret sub push mov in fsubrs clc (bad) dec push fdivl ret in push rolb arpl stos lods mov call into jle mov std pop mov rolb imull dec mov scas popa pop cmc outsb (bad) push stc push call inc mov data16 imul (bad) call cwtl push xchg repnz clc cld test push cli dec addr16 cmc mov mov insl jno psllq out cli (bad) stc inc jle lds jp adc (bad) ja (bad) mov cmc es push outsl or mov cmp and fwait dec cmpsl pop adc pop mov xorl fnstsw mov sti pop inc lock fs mov cmp push or inc jmp div pushf sarl fmuls hlt pop std push mov mov mov outsb mov test cld das sub push mov popa push fbld add push jp notb int sub (bad) (bad) lcall std cmpsl pop movsl adc xchg mov xchg int inc stos pop mov jle xchg pop (bad) (bad) (bad) push sahf rorl mov mov (bad) cwtl out inc outsb sub call pop popa (bad) (bad) (bad) mov jb leave jne daa mov cltd daa sub inc mov (bad) decl pop mov mov gs int3 xor push or clc sbb adc imul jp jle mov sbb ljmp xchg cmpsl out mov lock dec hlt dec popa and mov or or xbegin sbb add jl lcall jmp (bad) lahf jnp fcoml or mov xchg lds lea xor add decl fmuls icebp cmp pop jmp mov movsl repz flds mov mov dec loop arpl out jmp mov cmp cli fldcw or (bad) (bad) (bad) jnp out lods (bad) lock sarl je orl jmp jmp lahf or lods mov lret or jp movsl xchg mov xchg cmpsb (bad) (bad) decl out stos inc in jnp imul adc lcall sbb popf fsubr movsb inc sti cmpsl pop pop ds test mov pop lahf mov (bad) (bad) (bad) pushl pop inc inc lock mov cmc jb fldt outsl pop je lods cmp enter (bad) ljmp adc jb jbe lahf stc mov outsl jg popf rolb dec sbb pop xlat flds icebp push push fwait add push ljmp aad loopne lea dec xchg enter jl lods (bad) mov daa icebp (bad) ljmp cwtl adc xor mov (bad) adc int xchg leave xor jp roll push xor lcall mov int push mov jg xchg add (bad) decl rolb dec pop popf jb or lea jg (bad) ljmp insb and test hlt loope pop add cmc xchg sarl mov mov sub sub clc adc sub or push (bad) call mov fldl xor mov arpl ljmp js and mov (bad) (bad) (bad) (bad) stc test xchg outsl out pop in push movsl (bad) xor adc ds hlt and lods dec (bad) pop (bad) (bad) (bad) (bad) sti imul scas leave int mov xchg mov repz rorb pop (bad) (bad) (bad) dec cmpsl or ljmp lret into push ficoml or pop stos mov (bad) (bad) (bad) sti (bad) js jmp jno ds movsl shrl add aad or mov (bad) jmp pop and push addr16 fiadd int3 mov rcrl out mov loope push or (bad) push add xchg or enter (bad) in outsb push nop dec fcompl and fsubs add push sub xchg in inc sub nop daa mov add mov push sub push add fs and js es jg les mov movb sub (bad) jmp sbb fs pop mov cs mov inc call ja fs cld movsb add xor xchg sub (bad) (bad) call mov inc cmpsb pop inc ret dec mov push or lock jb or or push jo jnp int add lcall int3 mov push (bad) int add out aad inc xor sub (bad) (bad) (bad) (bad) pushl push adc test fnstsw popf out fnstsw gs add add (bad) lcall and inc cmpsl mov fsts cld fmul out ss push cli (bad) (bad) jnp cmp pop outsb or mov mov dec dec inc xchg xchg fadds loope in jecxz xchg or mov (bad) pushl stos adc sub in push test in fidivl sub (bad) ds fisubrl mov mov outsl scas jmp jge and add mov mov lea in pusha jno mov cli lcall aam inc mov xor mov stos dec ud2 ficomp dec in iret je,pt mov sbb cmp shl sub mov (bad) adc repnz xchg insb fwait sar pop cld hlt inc (bad) mov push dec lds mov clc xchg test mov ret cli aad les inc mov mov xchg ds xchg in adc xchg imul in es mov cltd cmc fld (bad) mov cld into enter or and pop in int3 xchg xchg incl cmp pop xor repz add cmp xchg data16 test or sub pusha lods jg lods dec xchg lea inc or xor fsts sbb pop ljmp pop jmp daa cmp je lret xchg arpl pop fadds (bad) jg pop pop out mov cmp stos pop sbb scas mov stos push mov cli jle in dec xor ret xchg imul ljmp ret mov cld aaa paddq adc xchg bound cmpsl test xor hlt cmp xor inc sbb pop sbb sub (bad) (bad) pushl push adc data16 sbb aas mov in sbb outsb sar mov mov push js cwtl popf mov sbb jg (bad) lcall lea jp pop or out mov sbb movsl mov cli lcall xor into xchg xor (bad) lcall xchg push adc fidiv lret inc inc stos jge mov and (bad) mov test xchg cwtl cld (bad) (bad) (bad) (bad) (bad) xchg fistl push jb mov xlat iret sahf mov out and pushf js push fptan jno (bad) (bad) pushl insl aas stos (bad) aaa cmp mov int std int3 icebp pop (bad) xchg cs jmp mov push lret jns aaa xor dec jns inc dec (bad) lcall stos mov loope (bad) faddl ljmp mov xchg int3 hlt dec (bad) rolb jbe adcl (bad) dec aad jns (bad) incl cld cmp xchg ret sti out cli push bswap xor aad mov ljmp jge pop pop cli mov in sbb repnz cmp (bad) jmp inc movsb jae pop arpl fcmovbe movsb pop addr16 ficoml xor push inc sbb xor xor mov fdivrs setl (bad) (bad) (bad) pushl inc fldt aas dec jecxz lahf mov in lods movsl pop push and jae dec lock aas daa cmpsb and or lcall ret mov jnp sbb (bad) (bad) (bad) fbld fsub notb cld ret lock mov mov imul pop add inc (bad) (bad) ljmp mov test cwtl sbb test mov in jmp (bad) fildll lds inc inc movsl inc std sbb xor adc adc jge jae and lcall dec notl push and (bad) (bad) mov mov aam jl xchg jno jle dec push imul lahf addr16 fistpll das (bad) (bad) (bad) incl mov dec into ret enter stos cld push mov (bad) std push xchg lock jecxz scas sbb mov movsl sub lods lret mov sbb add mov or in pushf xchg cltd adc dec adc sub cmc into (bad) leave cli or mov (bad) mov pop and imul lret cmpsl rcrl mov cli pushf cmp cmp mov push push fadd or out rclb das bound mov push rcrb (bad) mov adc inc int jbe xchg pop (bad) (bad) (bad) ljmp lds shrl pop push cmp ss cs fdivp repz lret inc ret push or (bad) (bad) incl xor pop jb lea mov jne adc rcr jl (bad) (bad) decl mov dec inc push cmpl sbb fldenv lds or push outsb inc addr16 and hlt and adc call push roll xor lea push fdivr (bad) (bad) mov aas inc add cld mov iret and cmp imul adc adc vxorps mov out pop cmp popf mov pop js (bad) lcall cmp pop and xor iret imulb sahf adc ror (bad) (bad) (bad) jg jmp jmp sub ss in mov and in mov (bad) (bad) (bad) incl push and sub scas pop in jecxz sub ficomp lret sbb out cmp je int3 or mov mov mov adc scas arpl ss insb cld (bad) mov sbb inc out mov and es rclb cmp ljmp cmp data16 pop mov scas inc cmpsl jne pop lock mov (bad) (bad) (bad) lcall inc xchg lret jle call xor lods cmovl shlb loope lret dec (bad) incl mov xor inc jb in (bad) lcall std orl call inc pop pop jae inc xchg cwtl cli in pushf jg xchg sbb (bad) (bad) mov test push xchg mov movsl mulb mov jae jmp mov loopne mov push scas jle jmp inc jecxz inc mov sbb inc inc int3 mov repnz fdivrl (bad) jmp aas cmp xor mov lock pop sub lods mov (bad) (bad) call push fimul scas xchg cmp loope enter push fidiv xor test in lods fidivl (bad) cld repnz es insb in push cmp (bad) (bad) lcall jo xor adc xor push scas push cmp ret ret icebp sub ljmp add das mov push rcll (bad) (bad) inc mov es or mov les mov push (bad) (bad) (bad) lcall or adcb ret inc adc popf cltd add out divb aas mov hlt xorl popf test add mov hlt decl adc inc xor push lods add mov dec mov xchg push adc testb cwtl enter outsl aaa inc inc nop and mov xor incb stos jecxz adc mov fildll mov xchg mov (bad) out xchg ret call push fcmove or jl (bad) dec int3 (bad) mov (bad) lcall (bad) outsl mov mov xor push imul jae cli movsb jb (bad) fcomip sub mov (bad) scas imul pushf cmp stc and (bad) (bad) decl dec sub (bad) stc xchg or in cmpsl jg loope mov jno xor lods mov (bad) and lret xchg mov dec (bad) (bad) ljmp push imul into xlat cmp mov cmpb jg dec ret sbb ror xchg lret jb scas xchg mov popf (bad) cmp pop jno mov mov xchg jno sbb pop imulb (bad) dec cmpsl push nop and out mov ss inc jmp mov (bad) ljmp imul (bad) aam pop nop in stc sahf inc push out imul ljmp jbe (bad) (bad) pushl push pop xor cltd fwait cltd lea data16 (bad) lds mov jmp or xchg sub std adc lods imul aaa fcomip out clc push dec add inc dec dec pop mov out cmp or rorb daa (bad) (bad) mov sub xchg jns aam sub cs int cli jno mov mov jle jmp arpl imul (bad) decl mov test insb or cmp out fbstp (bad) (bad) (bad) (bad) out cli sub insb push cld jmp cmp insb in sub mov mov imul push incl mov mov cmp lea outsb rorb jecxz outsb fildll mov sbb imul dec mov lds xchg insl xchg xor add test aas cmp xor pop addr16 arpl jg ljmp pop mov dec inc decb jg add xchg sarb lahf cld and mov das in cmp add orb aaa pop in sub add subb sbb (bad) rcrb or pop add or xor mov repz push cmp std sub fs imul movsb movsb pop sbb xor mov (bad) mov (bad) loopne enter sahf inc pop movsl ss loop arpl ljmp lea pop scas ljmp out (bad) xchg push incl push nop dec xor loope mov xchg lock std aas inc sar fmuls add add xchg mov loope les enter (bad) aam lahf loope lea mov (bad) add incl flds movsb pushf repnz es fidiv cmp movsl cltd lcall mov out inc jnp inc std lcall sbb mov int3 ficoml call cld ljmp or imul clc mov jle popw mov (bad) push or mov lret mov in int3 xor negl mov push clc (bad) (bad) decl (bad) rcrb cmp jb les pusha ret fs repnz sub (bad) dec and addr16 mov pop fnstcw add faddl push std push pop pop in mov pminub pop push xchg test fwait xor push loopne (bad) (bad) incl in (bad) jne aad mov movsl aas clc add dec call insb add mov cli call movsl mov jge not jecxz divb (bad) (bad) mov cmp std (bad) lock sub or cwtl mov fnstcw push nop fs hlt fstps ss jae nop pop cmp mov (bad) (bad) ljmp inc test add dec xchg cltd test add sbb aaa jne or jnp out lcall pushl xchg mov mov push jns outsb sub dec inc fs lods jge repnz ljmp rcrl sbb imul addr16 loopne lods repnz sbb out ret dec incl push cmp call clc (bad) mov xor mov in imul data16 popf in mov ljmp ljmp dec xor inc iret mov out adc (bad) decl lret iret mov mull mov jl inc mov js (bad) mov std mov inc mov leave (bad) fcomps ret cltd (bad) (bad) (bad) jmp scas add pop mov inc je pop lret mov cmp in popf mov ds cmpsb mov iret arpl sub ljmp mov inc inc pop sub add mov call pop lock and adc push clc inc call scas cli and (bad) (bad) push loopne in and jb mov adc add in mov js (bad) (bad) pushl xchg push mov mov cmp not lahf (bad) pop xchg sahf mov xchg xchg mov loopne mov (bad) (bad) in nop jne in mov lods aaa clc and pop je jb popa std lods cmp cmp sbb jno js jg xchg dec jle lahf lret ret inc dec inc sti pop outsl lock jl xchg cmp jbe (bad) (bad) (bad) (bad) cli mov data16 mov ja sbb jns mov mov jmp loope lret sar decl mov lock es cmp clc mov and std decl xor mov jae dec jl,pn (bad) aad ljmp jae mov (bad) xchg pop mov jbe xor or in push push call cld jg sbb mov push and inc jle pop das notb fidivl testb (bad) dec xchg xchg outsl lods mov idiv adc hlt aas mov aas add subl sub in pop (bad) fistpll clc iret rorl lret test sti push test inc cmp repnz mov aad stc prefetch dec mov test movsb xchg mov jns iret xchg out call leave push enter jg sbb inc mov aas js dec gs aam nop cmpsl es mov out jmp lea inc loopne mov xor lock fcompl (bad) popa in xor pop jl pop fnsave pop push jle pop mov std (bad) mov xor pop pop out jmp mov xchg push mov (bad) (bad) inc mov aaa or lret (bad) inc pop xlat mov jp sbb ret insb adc or insl adc in push push lret pop pop jle sbb jmp pop push xchg xchg lahf andl mov (bad) aam ret incl push mov mov daa add jbe inc cld (bad) fnstsw lret roll pop test mov inc mov cwtl movsb int3 sub mov lods (bad) (bad) pushl loopne clc rorb mov fcmovu adc inc fstpt (bad) mov sbb (bad) (bad) lcall shrb (bad) cmp mov in cmp adc (bad) (bad) (bad) decl push pop test lods jnp lds mov mov cmc dec jmp (bad) (bad) jmp ret ret lret in xchg mov lea lea clc dec stc scas mov (bad) (bad) jmp test lret jle pop mov push nop ret dec inc mov dec iret xchg jg cmpsb loope std sbb xor and dec int push test (bad) rcrb push pop mov or mov (bad) imul scas (bad) jg sbb lret fnstsw mov rcll or mov xchg insb shrl adc jge cmp or (bad) jmp cmp ja (bad) (bad) xchg xlat mov in in stos push into and pop sbb pop ss les aaa cld cmp sti fdivrs push out mov mov inc insl call push ljmp cld sub and fnstenv push (bad) mov dec imul decl fcmovu cwtl stos cmpsb arpl test jne inc ss aam sub push mov scas (bad) (bad) call or and stos inc dec adc dec pop adc pop or xor imul daa in inc insb (bad) mov and push ret je out scas jg decl push insl test (bad) xchg dec fidivrl das push outsb cmp lcall xor jmp jo int xor popf xchg mov cmc mov pushl cmp mov sub (bad) ljmp xor in scas add jmp mov popf xchg ja fdivrp pop push decl sbb fstps xchg in sbb jne xchg xchg mov (bad) (bad) lcall scas popl psrlq je outsl cmp fs mov idivb mov mov xchg lods (bad) (bad) decl lcall imull mov test jmp out shrb jg jmp fs icebp jle add xchg fdivrs (bad) xor (bad) xchg loopne idiv sahf pop in or in mov mov in aad clc mov fiadd xor es sbb jbe int3 cmp (bad) (bad) decl xchg loopne test ja cld hlt movsl jae sbb cltd mov pop mov dec shr sar mov push (bad) jmp mov ljmp scas lock dec jl and popa dec jecxz jne aas add fidivr lods mov (bad) (bad) (bad) mov negb and pop das fs dec push xchg and cmp inc stos test push test fcomip (bad) (bad) jl jns cld mov cmp js xchg sub ret push xor aad (bad) (bad) (bad) call sub fadd ljmp xchg (bad) or cmp in sub call jmp pusha mov mov mov sahf dec cmpsb je fstpl cli dec (bad) jl mov dec pop (bad) jne jnp pop incl mov mov xchg loopne das pop or and inc cld pop loopne adc push fs jg inc adc cli aas lret pop add mov push ja push (bad) adcl clc jnp cmpsl push or add add add ljmp mov hlt xchg dec rcrb fcmovnb jb into push and mov movsl adc pop iret rorb (bad) es les mov js adc add insb jg mov mov push inc shlb test enter add inc (bad) movsb out test or mov inc popf jb cmc out or adc js test (bad) ljmp mov cltd cwtl mov outsb pop lea mov xchg mov sub scas cmp cld (bad) (bad) stc sbb mov sub daa cld (bad) out fidivl xor pop popa mov adc mov (bad) jb mov xor adc cmp xchg push sub jp movsb stos sbb jle (bad) (bad) (bad) ljmp lret jno in outsl pop ds mov jno gs in xchg push int test push (bad) out aad lock test adc lods loop subl call dec clc or notb cmp sar dec sbb decl in (bad) mov pushf hlt int3 ja jnp sbb (bad) loopne shld incl clc gs stc sbb mov (bad) (bad) call and ret jge mov popf adc fwait or fst add (bad) (bad) (bad) mov fnstenv pop jmp aaa sbb test inc imul or push cli call imul and push xchg adc pushf xchg jmp jg (bad) (bad) cmp dec cltd aad and std jle mov jbe inc cmc dec sbb lea mov lock outsl cli ja pop std push int out lods int3 mov adc std cmp and (bad) in (bad) shrl aas je push (bad) (bad) (bad) jmp hlt scas dec movsb insb sub sub xchg xchg (bad) xchg jl xchg mov sbb pop std (bad) (bad) dec dec push lock pushf cmc cltd (bad) fbstp or test (bad) fildll push push push test mov push in lock xchg sarl (bad) call in push dec into inc mov xor je cld mov cli push (bad) (bad) (bad) call or shrb push mov sub cmpsb mov (bad) mov clc jg lods push lods mov push faddl inc inc push push adc push mov rcr xchg ror and add mov or and pop ljmp cmpl mov call stos bound cwtl mov and call xchg inc mov push imul sbb mov xchg xchg dec ror push lods adc jne mov das sar out (bad) jb loop sti and sub sbb scas pop lods outsl push neg (bad) (bad) (bad) ljmp jne lcall push mov mov lods lds idivb dec pop jo leave lock fbld (bad) jb das mov pop movsl pop lahf xchg jne,pn push jg (bad) (bad) (bad) jmp jle ror xchg pop cmp inc in es bound and or xchg adc outsl (bad) (bad) ljmp scas cmc ret fs stos dec loopne sbb (bad) cs bound push cld repz in ljmp lcall mov cwtl mulb test insl jb mov scas sbb dec jmp loop adc scas je cmc iret imulb cli das or cli ljmp push mov leave or lahf jo mov inc pop mov ljmp scas imull and repnz dec dec pop or lret popa aaa sub (bad) (bad) (bad) lcall aad movsb loope fcoml mov pop movsb cmp xor mov and adc incl adc scas mov fcoml leave or test lret dec mov adc (bad) (bad) pushl mov ja push push in iret inc mov jmp pop mov mov (bad) mov push imul imul xor push into inc cmp (bad) (bad) ljmp lret mov or sahf nop rcr outsb pop xlat cmc (bad) incl fidivl movq cmp enter xchg lcall fisttp or and push mov mov into in dec pop (bad) fcmovbe mov (bad) decl mov aaa add stc or fdivrl rorl lods pop pop aad pop int pushl xchg xor aad lahf adc (bad) jnp ja in inc aaa rorb fadds xor popf cwtl cltd push popf mov repnz iret mov dec in xchg clc mov in out jo mov or sub js,pn pop je outsb sub into mov xor jp daa loop cli or and jp xor (bad) fcomip decl and repz jae test xchg leave push pop in xchg sbb pop (bad) (bad) (bad) lcall movsb mov idivl cs std dec xor dec (bad) dec pop call or dec jmp and adc jp stos mov mov ja hlt mov ret (bad) (bad) (bad) mov aad and jb or shrb sbb jg and push movsl dec insl js push call imul push lods mov push jne jne mov jne xchg lds (bad) mov mov aam pushf mov (bad) in cmp inc and sub xchg (bad) (bad) (bad) (bad) out (bad) movsl in xchg stos addr16 arpl arpl jmp fcmovnbe sahf call push cmp rorb push pop or xchg rorl sub mov jl lcall xchg imul adcl out cmpsb adc dec enter dec dec dec pop hlt sti mov jb ret and sub xchg das test pop fistp (bad) (bad) mov cltd inc ret pushf outsb fistpl dec mov ficoml dec inc and int (bad) (bad) jmp (bad) jmp cs xchg cmp mov xorl pop dec (bad) (bad) (bad) call mov dec imul push pop push daa sub sbb mov (bad) hlt aad imul inc fnsave dec lret mov jmp cs nop push xor mov pop (bad) cmp mov cmp mov dec xchg in mov ljmp rclb movsb out ds das add sbb push aad lock adc das sub (bad) (bad) (bad) inc jg adc test add movsl lock push andb adc pop push mov adc (bad) (bad) decl out push or out (bad) and hlt inc add in (bad) fcomip ja cmp dec push inc push nop sbb and insl ljmp mov jl scas ret push or jp mov xorl decl or xchg mov add js sub ljmp insl adc orl add and ljmp mov dec adc lock nop dec (bad) jmp lea mov neg add in pop adc mov sbb cmpsb inc ljmp push shr push push sub and int (bad) (bad) ljmp jmp sarl fmull sub test push (bad) decl or adc dec xchg and aad or (bad) (bad) push dec addr16 notl leave inc xchg xchg mov mov aaa ret push pop test xor lods sbb data16 lock mov popf xchg nop nop adcl stos jbe adc pop jns arpl decl push lods out stc lret xchg bound js jb sub jmp xor xchg lods cmp mov pop adc sbb adc jmp enter inc xor fadds mov xlat and cli jg ljmp fnsave cmp hlt nop or movsb mov scas cwtl mov and jmp loope test (bad) (bad) (bad) ffreep das inc adc stc cs cmp rcr sbb scas jnp cltd xchg xchg push fdivrl inc (bad) (bad) (bad) (bad) mov push cs xchg cld (bad) rorl lcall mov dec into (bad) je ja mov add lcall lods arpl fcmovb mov outsb in jbe cmp xchg mov fistpll (bad) call int and add mov ljmp xor push adc dec and enter orb sub add (bad) dec cs dec fwait jle sub and aaa jge and scas ljmp add mov add popa rorl in mov lea (bad) xchg cli rol (bad) ljmp xlat sar cmpsw (bad) mov cmp dec xchg adc (bad) pop sar aaa nop xchg and je scas cmp push (bad) dec clc (bad) pushl mov push cs mov call aaa shll mov movsb push pop fmuls jp xchg pop (bad) incl fdivr and sub add fnstcw push testb adc imul dec cld cmp rclb pushf adc mov ljmp popa xor fisttp (bad) mov je lds icebp sbb call (bad) xchg mov mov aaa imul xlat jle xchg cmpl mov test test fnstcw sbb mov dec add add mov push (bad) mov mov adc add mov pop imul das subb and and outsb mov (bad) (bad) pushl aam adcl mov mov push stos (bad) setp (bad) lcall sarb int3 or push jne enter test push addl jno sub xchg test arpl xchg dec negl (bad) mov jle decl xor lods fimull push ret or decl cltd pop and int sub xchg push add dec cmp sbb aam lods cmp cmp roll or (bad) call fsubl dec jp movsl sub xchg lods in fldcw (bad) push sub push mov loop ret jne push push in mov fnop sti jecxz mov sub (bad) (bad) (bad) jmp cmp mov add and fiaddl sahf inc xor fwait jmp pop cmc (bad) (bad) lcall js jle ss xchg inc and push popf cld inc popa xchg test (bad) lcall movsl add push sbb mov jl movsb ret push (bad) (bad) mov mov pop ffree push inc and in cwtl out sti cmpsb (bad) mov (bad) (bad) (bad) ljmp mov fwait repz mov jbe,pn dec movb cmpsb adc push inc mov xchg sbb fdiv sub in (bad) (bad) fnop xor imul cwtl fmulp cli (bad) int dec mov mov jge sub movsbl xor adc sub add sub jb add mov stos (bad) (bad) (bad) lcall imul insb clc xchg pop mov sbb xorl jmp decl sub inc in add ds stc inc xchg sarb mov test jecxz outsl jne mov sbb (bad) (bad) inc pop push jb out jns addr16 insb sbb int3 fwait xchg and and mov inc test pop fnsave (bad) (bad) lcall mov cmp push cli inc add lods jbe pop or aam (bad) (bad) lcall cld sub add mov sbb ret imul cmp xor mov imul incl dec cli cmp lcall xlat loopne rorl int3 mov ljmp sub aam xchg je push add dec in aad lret (bad) (bad) (bad) fisttpl call faddl xlat mov jb mov lods pop (bad) mov xchg int3 imul pop dec inc pop sub sbb push pop push xor (bad) jmp adc inc ret or add cwtl rorl clc sbb mov mov (bad) (bad) jmp das sarb xchg bound testb mov push cltd aas push xchg (bad) ss pop xor (bad) (bad) push loopne ja jo xchg inc out add (bad) (bad) ljmp and dec sarb dec and mov mov fdivrp shrl cmp fistl mov or fdivrl push jp xchg xchg xchg mov (bad) stc adc push cs pop xchg cmc mov mov outsl xlat sahf dec dec mov (bad) (bad) (bad) jg lcall imul push sub ret das xchg aas movsb push jno cmpsb (bad) (bad) (bad) (bad) jmp jns int fnstcw mov mov bound dec insl fbstp push mov cli inc sub mov (bad) (bad) (bad) mov mov stos inc pop adc test test jge add or (bad) (bad) ljmp pusha pop lret movsb cmpsb orl shrb loope js adc dec jbe mov sub (bad) decl cltd xchg daa or ds add push pushf nop data16 fldcw mov jo ljmp xchg mov pop enter dec lahf inc mov (bad) (bad) call sub add add mov nop dec lcall xchg inc push mov popa ja mov nop (bad) bound or add add mov (bad) (bad) jg pop mov pop sbb cmpsb pop fwait jb jge sbb rolb inc hlt ljmp loopne aad js mov mov and scas pop aaa cmp cltd pop inc mov (bad) ljmp xor mull aad inc movsb push and xchg insl pop cmp add movsl xchg in lret mov imull jbe sti mov leave cmp (bad) mov jns jle (bad) aaa aaa jge push icebp call fwait jp out (bad) (bad) insl ret fwait mov pop icebp (bad) mov in loope (bad) enter popa xor arpl mov mov (bad) xor xor in and xchg push push out sub (bad) ljmp push aad or mov lods fstps fildll (bad) (bad) (bad) call lock in lcall mov xor ss pop dec pop xor xlat cs leave mov decl ret popf sbb mov out jl sub and fidivl dec push sub (bad) (bad) pushl stos cs mov repz mov loope jo jmp adc aad lcall rcl cmp sub pop or sahf and cmp inc sbb lods stos (bad) (bad) (bad) incl sub inc sub pushf ja lahf adc enter test push cmp stc sbb sub into jnp (bad) (bad) ljmp mov cmp js mul mov fadd in push push xor lock mov dec outsl (bad) (bad) pushl fidivrl (bad) fucom ror je sahf imull sub cmp mov mov cld pop addr16 lret arpl lock sar mov mov push xchg sbbb pop (bad) cmp xorb (bad) (bad) (bad) ljmp sbb jne xchg mov repz pop std shr xchg int out insl sbb push jmp mov mov sbb mov adc sbb and (bad) dec sahf (bad) xchg adc and sbb jns fidivr and add inc inc sti pop xchg xor inc xchg inc add movsl daa (bad) mov and mov jo gs loop cmp pop dec jne jmp stc or jle,pn ds push jae xlat (bad) jecxz sbb (bad) cmp sbb cmp or dec mov mov ljmp pop dec rcl out cmp into and push or xchg and outsl pop inc push in mov pusha mov xlat jbe rorl lret call decl push aas (bad) fnstsw aaa sbb cmpsl sbb rcll cld decl xchg adc sub adc (bad) (bad) (bad) jg and fimul add dec andl dec hlt testl xchg push aad outsb and jns imul movsl ret decl and frstor outsl es inc push mov add and and xor int3 dec mov xchg clc or loope inc rorb inc sar (bad) (bad) (bad) pop cmp and add lock outsl orb mov push (bad) sahf in (bad) (bad) (bad) incl mov sub imul test ds or jo mov outsb xchg mov cs aaa inc (bad) cli dec mov cmpsb sbb sub push or aas (bad) lret and jle outsb loop mov mov mov mov outsb xchg adc and incl mov (bad) mov cmp or (bad) (bad) (bad) fbld jle sbb movsb mov jo mov push stos xchg test rcll jmp jne (bad) icebp pop add arpl idivb adc xor (bad) mov jg scas imul lea rcrb insb sub fisttpl adc (bad) lcall xor and lods jle aas out shrl cmp scas mov popf in enter ret popa pop jbe inc sub pop push daa loop call (bad) (bad) (bad) (bad) cmp std pusha cmp dec xor inc out (bad) fimul (bad) mov (bad) fcomip aas jno push sub sbb and push stos push push scas hlt sub add rolb sbb lahf sbb cmpb out mov (bad) (bad) (bad) fidivl xor scas ss jecxz jns mov arpl xor fs push je aam fs (bad) and fistp lods or cmp outsb inc xor pop mov cmp pushl push leave xchg pop xor gs add test jno iret pop (bad) jmp dec xchg jle call out or stos mov push or (bad) cmp or xchg mov call data16 push int3 jnp push faddp cmp mov psrld inc hlt cli push dec xor pop xlat xchg jae out bound mov xchg jmp mov (bad) (bad) jmp jae jnp xor test test mov inc enter pop xchg scas xchg incl push cli popf or pop loop loop pusha sub ljmp dec ret test testb or mov or push inc fwait xchg adc (bad) (bad) lcall dec xlat mov dec leave (bad) xchg pushf test bound or push sub bound decl aaa jl cmp xchg les (bad) call xor pop mov cmp call (bad) pop out jmp (bad) (bad) ljmp xchg xchg pop push ss fcmovb mov jae xchg sub ljmp ffree pop add icebp (bad) (bad) aas sub push lret into push fimull js adc pop out lock or jg das jle out cmp stc pusha sub inc loop fsts nop add xchg sub mov std (bad) xor xchg pop nop (bad) adc in ljmp pop jecxz testb (bad) (bad) incl int sub (bad) aam add inc mov enter (bad) (bad) (bad) mov lahf sub mov xchg idivl sbb data16 test push push es ljmp clc addl loope dec adc adc mov arpl imul fstpt add and btc pushl or pop loopne xchg (bad) repnz cmp bound cmp incl add inc and dec dec pop lret jo or movsb xor pusha inc xor push shrb mov add mov into or loopne mov xor and or sbb (bad) dec lock jnp cmp xor xor decl orl or push in lds (bad) push sub adc sub mov pop jge loop cli push inc (bad) (bad) (bad) jg jmp jne xor sub lods loopne stos pop xchg divb xchg stc int das cli (bad) pushl jae and fildll pop divl xor (bad) push repz daa popa dec pop push pushf mov addr16 out daa and or pop aaa popf jbe pushf out popa mov jnp dec aaa cld aad nop std adc add pop or and les cmp mov stos add jecxz popl jb (bad) mov lods stos add (bad) pushl sbb dec ret out aam jnp jl mov pop out push lcall imul dec ret sbb movsb pop cwtl lret test std (bad) ljmp push sahf cli xor mov scas jb pop aam cmp incl add in je fstpl pop xlat (bad) (bad) mov movsl (bad) popa aas xor jb jae roll clc jge sarl mov push jb imul pusha dec inc and (bad) (bad) mov pop jmp xor pop pop loopne cmp dec inc jo (bad) (bad) jg mov mov sbb sub sti rorl mov cmp and popf sbb xor push cmp mov pop clc mov test in or test into xor and jg aam push scas add jae (bad) (bad) jg es jbe fisubrl dec ljmp sub arpl je jg (bad) aas dec insl jmp push lret cmp add popa inc xchg icebp jae add (bad) (bad) (bad) (bad) or test (bad) mov xchg mov xor (bad) (bad) pushl idivl cli pop pop push loopne push imul (bad) (bad) out and stc dec ds into insb movsb movsl in push mov dec push sub (bad) mov xor or pop popf mov dec shll (bad) jmp (bad) mov test mov xchg cmp jnp xchg fdivp jb mov adc adc add inc and dec push daa out mov sbb arpl cwtl js or cmp pop jmp les add and pop mov (bad) daa mov jge (bad) (bad) (bad) lcall je and jae xlat cmp lods push outsb dec push inc into (bad) (bad) repz xchg test cltd jno dec aaa mov incl ds (bad) cmc push mov hlt push mov in out add and push sub mov sbb (bad) ljmp cli cmpsl (bad) cmc jnp xchg mov loop test sbb dec mov lods stos jmp (bad) fcomip mov mov sbb sbb push stos das jp cs (bad) or cmp decl lock jns repz in mov push xchg ror lods cmp cmovge fdivrl lcall pop push xchg sub xor stos movsl sub add dec mov inc inc data16 (bad) (bad) decl mov aaa shrl add out xchg push cld fcomps push cmp (bad) (bad) call pop sbb inc mov mov (bad) mov mov pop push rcl ljmp clc (bad) cmp gs in add xor adc sub mov inc (bad) outsb add xchg loop or mov pop xor push (bad) (bad) decl xor cmp sub cltd sbb cltd adc sbb or add fiadd pusha test (bad) push jo jno pushf adc (bad) dec scas inc push sbb jle xchg and push mov (bad) (bad) call mov add fnstsw aas out push mov ss pushl fiadd es mov insb xchg addr16 add xor lds mov loop decl out add daa sub push test mov inc sbb mov rolb shrb mov add jg add xorl (bad) sub xchg push mov fisttpl aad cmpsb idivb pushl call push fs sbb push (bad) xchg (bad) les loop frstor mov xor ds sbb pop cmpsl cmp pop sub mov dec fsts and pop mov mov inc and ljmp (bad) (bad) add xchg sub (bad) jg sbb xchg out sub jecxz pop popa mov mov (bad) (bad) ljmp fbstp js mov lea mov xor jae fistl (bad) cmp (bad) (bad) call out inc data16 ss stos lods ja addr16 jecxz push jge xor push pop xchg dec push int mov push icebp xor inc ret (bad) push ret sbb cmp sarl or (bad) jnp fwait dec aad mov ljmp xchg xchg xor in cwtl pop mov add clc (bad) (bad) (bad) ljmp test icebp pop lods mov cmp (bad) sbb insb daa scas mov fcmovnu push xlat jl neg aad xchg push repnz ja clc push pop popa lock ds outsl insb (bad) (bad) jg je push aaa mov cwtl idivb test hlt shll imul lea sti sub clc lret sub rcrb loopne jg sbb daa clc test andl inc lea (bad) (bad) dec kunpckbw fistl mov cld fnsave in mov daa (bad) (bad) lcall lret inc mov push or fnstsw popf jne jno hlt jns ret daa xchg (bad) sar mov gs jp mov push shrl cmpsb mov loopne imulb inc lock pop (bad) ljmp mov add xchg mov enter mov lcall ja mov clc pop movsb push (bad) loop rcr dec insl xor inc cmp xchg jo jmp lahf adcb outsb in fimul mov pop std fistpll xor stc ljmp ja stos in add xor movsl js in cmc inc rcrb xor les mov push mov (bad) mov sub es jecxz ret scas pop push stos pusha dec cmp add xor or push add lret xor xchg mov or mov notl (bad) mov das ja imul loop bound aam pop add fildll add gs xchg xchg or sahf lahf jl adc (bad) (bad) (bad) cmp in loop xchg pop sbb cs mov in and loopne imul push lret test imul adc ljmp pop scas sub subb sub mov (bad) call hlt rcrl into test into dec inc insb mov into (bad) (bad) pushl pop out aam (bad) mov mov push mov int mov mov sub in push (bad) fist dec imul divb movsb cmp ja and pop pushf adc stos xchg push mov fldl in stc mov pop jo adc imul pop push and (bad) mov mov out iret jae mov imul jbe jmp (bad) (bad) (bad) (bad) stc jge mov jnp jl (bad) lret inc movsb mov dec mov sbb and (bad) (bad) decl xor outsb stos cmp add xchg pop pop push xchg es daa mov jecxz jmp jae push xchg push add dec cmp xor aad mov jmp out fcompl inc addr16 inc icebp and lahf outsl (bad) decl push mov lcall dec pop bound push dec test pop or xor mov xchg ja push aas dec sar cmc inc imul (bad) call xor xlat cmp ret ja and xchg mov fmul xor scas (bad) (bad) cli jae sbb pop insb xchg scas int3 dec lods (bad) loope add (bad) jg out fistl mov outsb cmp in (bad) lcall scas mov adc (bad) (bad) jmp mov pusha stos lock xchg pop sbb pop xlat mov cltd in pop cmp push call aam mov cmpsb sub icebp xor loopne mov (bad) (bad) jmp dec mov das jo int add ficoml push imul fimul test clc pushl lods pop imul sbbl push (bad) xchg or adc push and and push ljmp dec or nop sub xchg inc repnz (bad) lock nop lcall mov mov inc pop test inc jb cwtl aam or repnz and (bad) mov insb inc jne adc cs outsl add out mov push stos dec push ficomp pop (bad) int3 sub das (bad) ljmp pop sub scas aad clc lds jns lods dec mov dec lret adc gs (bad) ljmp loope imul jae xchg dec xchg mov test xchg insl sbb lds (bad) (bad) call jge ds mov call loope inc clc jmp das cli fwait (bad) jnp aaa and jns (bad) mov adc inc mov (bad) (bad) inc dec mov jb cmp adc scas pusha jb push mov jb jecxz mov add (bad) ljmp fs lock in xchg inc sub out add adc pop sbb push mov pop mov out and movsl or or mov inc cld (bad) dec dec jmp push test (bad) loope shrl mov inc (bad) (bad) (bad) fbstp dec addr16 cmp jo out out mov cld pusha xor (bad) ljmp pop sub jp int das push adc cmpsb fs or jno and (bad) jmp mov xor pushf leave inc sub dec cltd pop icebp in (bad) stc nop out inc push imul pop insb icebp add push xor push lret outsl enter and jbe (bad) xchg push (bad) (bad) call sub mov faddp mov mov loope push mov cmp pusha inc xor popa dec js jbe inc popa pop inc sub sub sahf sbb inc fcmovbe adc mov push pop push push cli mov adc icebp fsubrl std dec sub cmp jmp imul sub sub pop mov dec pop aad cmpb cmp stos inc inc stos pop lds ja adc mov les and jb push dec sub ds push sbb xlat pop stos (bad) mov and push pop sub (bad) mov mov mov out pop clc (bad) (bad) jmp and xchg cmp push xor xchg xor icebp (bad) out jo sbb scas mov bound xor ja mov (bad) jmp sbb (bad) mov push push ljmp (bad) (bad) jg pop push push lods push pushf out popf xchg jge jle sub mov (bad) jmp adc mov imul sub adc fsubrl in dec movsl clc dec dec pop mov (bad) (bad) (bad) pushl push popa iret lahf sahf pop or incb mov sub pop xchg push jle loopne (bad) pushl dec pop std dec pop jno cmp das inc std or int xor (bad) jg mov add aas xchg pop pop xor mov test jg mov test mov sti movsl xchg jg (bad) (bad) (bad) jmp fdiv pop fsubr pop das push cli dec xlat mov cmpl mov xchg popl (bad) fbld fsubrl mov in cmpsb stos pop popf adc int (bad) (bad) (bad) pushl es dec into jb iret (bad) sbb xchg jmp and mov in sbb jmp cmp je pop jle mov pop movsb xor stc cmp sub xchg xor jae cld (bad) (bad) (bad) jg insb mov or stc dec mov out ficom lret sub push ret xor (bad) (bad) jmp mov push stos (bad) es pushf inc sub shlb xor dec data16 push jge mov add sbb add inc hlt in faddl push test pop cmp mov adc (bad) (bad) ljmp dec mov jns mov imulb jl adc repnz mov (bad) in xor (bad) mov add xchg stc rclb fistpl mov test xor lret jo inc ret pop jne loope gs (bad) jg dec mov mov fldl stos fbld xchg test outsb xchg mov sbb xchg dec hlt ret xorl adc cmpsl ret (bad) jg cwtl jnp stos popa mov fwait shrb sbb mov sub ljmp (bad) ret rclb cmc mov (bad) int3 in xchg cmpsb push inc sub (bad) (bad) jg and add adc mov pop dec inc mov (bad) incl mov sarl cld sbb and loopne (bad) decl mov inc enter aad mov push (bad) xor mov lods cmp (bad) (bad) (bad) mov mov scas jecxz cwtl bound fucom cmp out jnp push outsl xor add sahf clc push cmp push ror stos shlb sbb push or test clc dec add int3 cs mov (bad) jg jg hlt into fsubr nop icebp mov imul or (bad) (bad) jmp js daa aaa jns das jno fdivrs mov fidiv push stos (bad) add cli aas clc push loope loope cmpsb (bad) movsb cld mov adc and mov sub fwait adc imul dec insl call fwait test mov insw xor in sar (bad) (bad) ljmp icebp je sub jmp sub pop and fwait cmp (bad) jnp adc lcall leave xchg jle aaa fnstenv lahf or jecxz (bad) (bad) ljmp and and daa dec (bad) dec adc dec lds sbb fcomps stos sub cli pushf adc inc sbb fdivs sti fcmovu into mov (bad) (bad) mov sarb repnz imul jp daa int call jmp cld cwtl mov sub fnstenv pop jecxz mov adc adc aam mov pop push mov jae mov or lock (bad) (bad) decl jae dec dec mov out loope jp inc jp cli hlt cmp in (bad) cli (bad) (bad) inc (bad) enter jbe mov scas xchg js sarl shrb inc mov xchg adc rol add mov (bad) stos scas push call push divl add inc push cmp sub lcall xor cmpsl loopne test (bad) pop inc arpl ljmp addr16 xor mov fwait push jo push test aad aad jg mov dec sbb (bad) (bad) mov cltd pop into cmp cltd cwtl mov aad pop lock xchg je jbe xchg stos test cld cwtl mov mov mov test ret cmpsl nop or add or sub pop test push mov decl lds or mov mov xchg test mov cmp popa xchg sbb jg pop mov sbb das clc (bad) call adcl aaa push or movsl adcb mov cmp push movb (bad) stos lcall (bad) lcall mov and and ljmp test (bad) (bad) incl xchg jo jl push out fs fiadd jecxz mov xor pop xlat mov (bad) (bad) lcall mov push sahf mov inc xchg mov ret cmpsl inc or enter or xchg jae sbb (bad) (bad) (bad) jg scas outsl (bad) loop mov jne cmp outsl or lds pop lret rcrb ljmp mov movsb outsb iret add mov inc lret or jecxz (bad) jmp cltd pop push add cmp jbe mov rolb (bad) (bad) jg je jnp xor push mov (bad) lods add add es push jle lret cld mov cmp lcall movsl adc dec popa inc stos imul insl add mov fs pop xor adc (bad) (bad) call sbb pop call test loop xor jl sahf test cs mov (bad) lcall mov inc sub add inc and cltd shll and sar (bad) call pushf aad cmpsb loopne imul push xchg in pop pushf (bad) jnp cmp (bad) in push mov (bad) (bad) (bad) jns loope mov mov inc mov rcrl xchg and (bad) cmpsb fwait xlat (bad) (bad) (bad) lcall push ja popa scas jle les js adc mov pop sbb jnp push mov (bad) mov loopne jl subps (bad) (bad) dec inc popfw loop inc dec xor push adc sbb (bad) mov add (bad) jmp stc inc gs mov fwait mov not cmpl (bad) (bad) dec xor test push mov sub push repz fwait jns stos imull xlat and pop in (bad) lcall cmc mov pop enter cmp rcr imul jge xor or dec push lahf push iret mov mov into mov mov or cmp (bad) jnp repz enter mov std (bad) jg nop cwtl cmpsb pusha ss rorl jb lret pop xchg pop (bad) ljmp and test pusha xlat insb or and mov (bad) decl jne cmp lods fidivrl jae lahf inc in (bad) idiv mov add cmpsl loope enter mov (bad) mov scas aaa add (bad) (bad) decl (bad) dec inc and shll mov lret jmp mov loop lock mov ljmp data16 outsb stos cmp sahf jne mov dec inc (bad) lcall pop shrb add cmovge rorb sub mov mov outsb aad push adc jne and rcl (bad) (bad) jg test dec jl ljmp mov lcall xchg push movsl sub (bad) (bad) ja mov aaa lock daa leave mov (bad) pushl movsl push mov out cmc jo mov rorb fwait icebp ret mov dec jmp mov mov inc aam incl (bad) lcall neg and xchg inc adc add dec add push notl loopne jmp sub mov add xlat outsb out mov push ds or (bad) jmp cmpsb cmp sub xor ret adc dec jbe ret cmp rcll (bad) (bad) (bad) lcall out jne outsb test mov mov in je scas out aad mov decl stos pop jo stos adc inc inc movsl jo fldenv cli jg pop or push jbe loope lds xchg negb inc cmc dec movsl adc push ds jecxz mov (bad) popa mov adc inc insl xor sarb add sub xor das je movsl ror out (bad) (bad) (bad) cmp xchg mov cmp fnstcw mov (bad) jo push loop push adc dec call jecxz pushf fs xchg adc cmp movsb add or and (bad) and sahf add loopne mov popf push mov fdivs nop jne arpl pop data16 jne cmpsl (bad) (bad) (bad) lcall sub sub sahf lahf inc data16 pop icebp cwtl mov fistpll sbb dec in dec iret sbb ljmp js and add mov sbb insb xchg lods arpl fldt arpl sub dec popl pop in push push pop mov inc int push cli call sahf push lock xchg jmp mov xor std aaa mov (bad) (bad) incl push fisubr aas cmp xchg jecxz jmp jg (bad) ficompl (bad) (bad) (bad) ljmp inc in enter inc lds iret pop std dec imul push inc jg (bad) (bad) mov stos dec daa ret jns repz or mov (bad) (bad) (bad) jl xor ret icebp inc push ret into ja cmpsb and xor test movsl aam scas mov dec pop out mov les add incl ljmp mov stos dec mov scas mov lcall push xor mov jno adc mov jmp cmpsb cltd push lods push jle popf fidivr jns push imul xchg incb (bad) adc (bad) loopne aaa adc add dec loope aam xchg push mov jae mov sub imul outsb mov jne cmp jp cli ja cmpsb ret jecxz icebp insl in (bad) (bad) pushl sub cltd or jecxz jno leave inc inc and mov rcr (bad) sub mov test (bad) (bad) lcall dec inc movsl pop mov mov out push sbb scas inc loopne pusha pop jb xor fwait pop jmp add push sbb mov loopne jo std sub cmp imull (bad) (bad) aas add dec loope mov arpl mov mov pop loop mov jne int cmp jbe into ljmp lods aaa mov sub fstps in repnz (bad) call sbb pushf pop sub enter add jne (bad) mov (bad) decl push push mov pop jb enter mov test cmp arpl fstp (bad) loop and ret out or loop push mov loop jle add fcomip (bad) jns mov xor sahf loop add mov mov ret cmp mov xchg imul cld push xchg add inc xor push jno xor mov (bad) (bad) (bad) decl out das adc cmpsb push mov test mov lock or sbb push imul add push out inc stc cmc dec enter fcomps lret pushf add adc jae decl inc or (bad) mov xor mov and or (bad) (bad) (bad) pushl dec stos push sahf loopne xchg sub lret sbb pop jns inc fsubrl mov lcall sub lea data16 push dec pushf dec daa sbb mov (bad) (bad) ljmp cltd sahf mov fidivrl add rcrl icebp inc loop pop ficom jg ror sbb pop sarb je push cmp pop call bound mov or dec loop dec sub lds lock (bad) call test xor mov pop fild (bad) clc inc rorl scas or std decl push jae loopne ret mov mov mov arpl aaa sbbl fldenv push mov or (bad) (bad) inc sub ljmp call ffreep les dec push pushf add push push sbb aam xor in add sar adc xchg popa cmp mov mov pop or cwtl clc outsl arpl imul loopne lret (bad) (bad) fcomip rol dec xor cmpl fcoms push pop dec cmp std push repz mov (bad) push fidivl scas or inc cli call sbb push jb ret jnp movsl mov inc repz (bad) (bad) jmp int jmp rcll fnsave cmp sub xchg mov and stos mov cld mov sub imul xorl xor jns (bad) fisttp in cwtl lea cs aam aas sub sarb adc mov add fldl lcall add cmp lret aas dec cld and add mov sbb lcall push (bad) (bad) incl cld movsl pop (bad) (bad) ja data16 xor (bad) mov mov lea push sbb (bad) pushl fisubrl out or cmp mov sub test cltd sub fs icebp mov (bad) add mov xor cmpsb scas mov add out movsl adc jge push jb scas mov sub popa dec nop adc test push pop cli movsb cli sbb xchg jmp add jne lcall stos std mov xor rorl cwtl addl decl mov pop or pop jl mov js push arpl xchg xchg (bad) (bad) (bad) jmp cmp scas pushf sahf outsl inc sahf (bad) faddl adc sub repz push scas std (bad) (bad) pushl push lods loopne stos inc movsl aam push outsl data16 xchg cmp jno aad (bad) call jl or in fsubrl mov inc push mov cli (bad) ljmp cwtl mov xor stos push pop jno dec aaa mov clc call std or add adc xchg dec and xchg ljmp or mov icebp (bad) movsl jne stos (bad) pop jmp in pop cs fistpll ljmp sub pop rorl aaa sti and sbb sahf insl push add pushl jmp cmc jmp les (bad) (bad) jg (bad) popf sub mov adc mov stos lods (bad) loope jp push jg mov cmpsl (bad) (bad) (bad) lcall lcall pop sub ss mov jmp fildll stos popa (bad) outsl pop fprem or sub test (bad) (bad) pushl jmp sub jne clc xlat inc stos es jnp mov in pop xchg inc mov inc shrl pop cmp stos out fstpl lcall (bad) lcall add xchg dec int rcrb ss mov (bad) (bad) (bad) decl push xor cmp stos loope cmp fidivr pop mov sub cld call rolw in into (bad) (bad) mov and or push and jbe cld out (bad) mov (bad) lcall out in push in mov xchg add cmp pop mov insb mov or push fcom (bad) int3 add pushl ds jle adc stos pushf in push out mov mov push lods movsl adc mov sbb pop cwtl (bad) jg mov (bad) clc inc jb das mov push mov mov outsl dec pop jb enter cmp out hlt mov (bad) jmp outsb aas xor mov push and fmul push (bad) jl cld jg call jl jb xor movsb in cli (bad) ljmp xchg into insl fldcw cmp mov hlt xor pop cwtl das sub and clc aaa and cwtl fs sub adc push in xor pop push cmp pop mov jnp ja sbb xchg mov pop leave xchg (bad) test (bad) jg xchg xchg mov mov mov xlat popa aad jle in push hlt scas mov ret jg sbb cwtl outsb adc fildll les sbb call arpl popa int pop mov xor daa dec hlt mov in pop pop lret mov movsl cs scas (bad) (bad) stos in xor fstps mov int3 cs pop (bad) mov jg push int pop xlat mov add scas lahf cwtl inc jne add ja mov stos jge test pushf jb imul xchg cmp rorl (bad) inc lahf mov jl gs in lcall xchg fs scas out imull (bad) (bad) out clc add and adc sub shl mov aaa (bad) (bad) (bad) call mov and lea into mov and iret dec push fsubrp clc (bad) jmp mov and cmp xor sbb mov sbb js mov add (bad) (bad) pushl xor pop es addl jo adc iret mov incl xor data16 sub gs out dec mov cs mov xchg xchg dec jmp push repz and mov (bad) jmp popa lret jae in frstor mov out mov (bad) call cmp mov rcrl test mov bound stos push mov adc xchg rol push lds scas jns (bad) mov mov push xchg dec jp repz adc in push xchg xor clc push outsb ljmp (bad) aad sub imul lea pop iret inc frstor add mov push mov pop xchg xor jmp fistpll inc or dec push addl ret icebp add (bad) decl cmp jmp fisubr adc aad icebp outsl xchg hlt pop and xchg xor push (bad) lcall dec xor in and mov dec mov jmp fstpl mov mov fnsave cld (bad) (bad) decl out ds pop or ja sbb jno adc jno (bad) (bad) incl scas mov or dec push shlb xor jno ds cli (bad) call dec cmc fistp lret cmp int3 cmp das cs aad cmpsb mov and mov add xor inc test cli jmp (bad) xor cmp or mov js enter (bad) (bad) (bad) (bad) fild jp sub sbb sbb push mov push cmp xor lcall or pop aad (bad) sub cmp rcr in mull (bad) jg or or cmc dec xlat ficomp xor sbb (bad) jg rcll sub (bad) dec sub or add (bad) (bad) (bad) jg jp dec inc mov aam fmulp mov lahf xchg jge push insl and dec ds (bad) (bad) jmp dec pop pop xchg dec iret mov xchg pop and aad xchg push fwait (bad) mov adc ret incl loopne add sub int ret mov push cmpsb lock (bad) (bad) call push mov jp test xor in xor push std ljmp sbb push lods mull ljmp xor data16 inc cwtl cmpsb mov flds mov mov hlt cmp xchg movsl shrb dec (bad) mov cwtl push jae jne (bad) (bad) decl sbb in jp push jmp push dec xor jno jg hlt jg mov or xor pop stc decl (bad) mov mov int3 sub cmp (bad) (bad) (bad) pushl sbb xchg ret insl xor hlt xor repnz lret mov mov and jmp cld call dec lret fninit (bad) dec lods add fimul cli mov cmpsl jns dec sti mov sbb and sbb cmp (bad) (bad) lcall lds (bad) iret (bad) push sub out jne pop jp (bad) (bad) (bad) jg sahf into int and xor jbe sub fildll inc je aas (bad) or int push xchg clc and jmp cmc (bad) mov xchg dec jb inc or test (bad) (bad) out enter mov inc sub and pushf pop insb fwait push mov jb repz jg (bad) jnp or fadd hlt mov ss inc xor jb mov in jg push dec jle mov mov test js (bad) (bad) mov push mov scas xchg jb push movsl pop lds (bad) decl sub int sbb pop push adc popf dec (bad) (bad) (bad) inc cld flds pop scas push mov mov mov cwtl mov add lods cmp mov xor jp ret std (bad) decl jp mov and mov std test dec push mov fildll add pop daa push insl adc sub fcomip ja inc repnz clc (bad) (bad) cli fmulp fs sbb ja in push bound push sbb (bad) (bad) mov xchg xchg in jmp adc jo and rcl sub sub jecxz ljmp (bad) sub jns daa xchg jns push fdivrl cld scas mov (bad) (bad) bound test mov sub push aad push cltd negl mov daa and call mov fs mov data16 outsl (bad) (bad) xchg push cltd fiadd pop into (bad) (bad) pop xchg iret sub push (bad) (bad) (bad) (bad) out push push jne aad shrb lret in test mov test addr16 fstl cmpsl lcall or mov adc pop rclb xlat mov mov icebp (bad) cmp enter push int (bad) add dec (bad) (bad) (bad) incl loopne sti loop push pop popa (bad) mov out repz mov pop mov enter incb cmpsb jmp daa jp ds into push mov test xchg fidivr mov (bad) (bad) jg stos inc imul nop or mov mov adc aad mov sub dec stos mov jge xor mov aam (bad) (bad) dec jbe aaa outsb in cltd sub fist push addr16 insl jns adc adc icebp jecxz leave lcall dec pushl mov fnstenv rcrb (bad) test pushl std (bad) mov pop adc sbb or dec imul ljmp jbe pop fistpll iret into sub decb in data16 or push movsb mov adcl add enter cli lcall gs xchg jl lods test (bad) adc adc cmp cli pop arpl (bad) loop sub rcrl and or pop push sar insl clc sarl jbe xlat aam lea jl mov dec jb (bad) (bad) (bad) jle popf adc int je pop sarl pop jp fs mov xor push popa pop jne data16 (bad) dec ds addr16 das push sbb cmpsl jp (bad) (bad) decl mov pop xchg dec sub sub xchg pop mov jecxz and mov sbb push aam and jmp imul scas mov imul push inc dec rclw adc in mov mov out jmp pushf adc mov dec pushf cwtl repnz imul (bad) (bad) (bad) jmp call addr16 pop pop in lods dec mov mov arpl mov es (bad) pop pop (bad) and fdivrp sahf jmp pop xchg clc and xchg dec (bad) (bad) decl mov pop outsb jno pop mov aad mov out bnd mov (bad) (bad) call and stos jp (bad) mov insb fstps xchg adc rclb add and (bad) decl add lods xchg xor cmp cwtl ror in add mov inc lds lods xlat pop mov es popf shrb dec (bad) (bad) (bad) ljmp dec ds dec sub xor mov cli mov incl cld pop pop xor mov mov lea push (bad) (bad) (bad) ljmp lcall out outsl jno pop pusha jb lret mov rcll jg mov push jbe in fisttpll sbb or repnz (bad) (bad) dec std stos cmpsb repz push idivl push int jae push pop notb fstl vminps cld (bad) (bad) ds dec hlt cmpsb jp mov pop jbe int3 imul sar (bad) and dec int3 dec push sbb sub push mov push push jne fwait mov imul (bad) mov xor adc add jne push pop inc es push fiadd or mov leave xor add jg mov pop ljmp pop push test (bad) mov into pop (bad) out ret mov (bad) (bad) (bad) aas (bad) cmp ljmp mov xchg (bad) xor fwait std orb mov int (bad) hlt and and cltd mov (bad) ret ds shll ljmp data16 idivb pop stos xchg stos jl pop xchg jmp clc sti xchg (bad) ljmp fwait sar mov inc iret pop xlat lea add ror lcall add aas inc sbb push sub loop pop push jae dec pop (bad) (bad) call push (bad) xor push jb sub setbe imul and add stos pushl (bad) jge in lret xchg xchg cmp adc out std mov shrl (bad) xchg or xor mov sub mov int add add movsl add mov mov push inc add push sub push mov or or mov push sbb fbld adc cli add test sub pop (bad) (bad) jg xchg out jno gs sub lods pop enter into lret cmp decl aad push sahf hlt cli fwait shrl mov cli stc push clc sbb pushl loop jl movsb fisubl cwtl imul sbb dec mov cmp jg mov (bad) aaa cmpsb mov ljmp repz jmp sti test outsl test (bad) fbstp pop and popf stc and icebp adc mov icebp out icebp push decl fisttpl ret mov cs pop in pop (bad) sarb mov fs addr16 call cmp lahf inc dec xlat cmp int cmpsb daa push push lods pop xor into fimul lock push jae sbb std jmp lock outsb out dec mov int and (bad) (bad) dec imul ficompl jg (bad) mov rol jno pop xlat clc ljmp jmp pusha stos (bad) (bad) (bad) ljmp stos mov fistl cmp cs aaa jne add pop jo out dec jae outsb outsb (bad) fildll stos je movsl out mov sub fbstp jl in pop cld (bad) ljmp ljmp or lahf jge dec jp les (bad) (bad) (bad) leave and sub lret (bad) push outsb ret cwtl cmpsb and pop sub sub scas add (bad) (bad) (bad) pushl daa aam les dec push in xor mov stos jle movsl das (bad) (bad) (bad) decl xor cmpsl and jo fimull or cli daa mov push sarb test stos xchg pop add mov (bad) (bad) lcall incl stc mov sub push rcl adc (bad) (bad) (bad) jmp bound pop sub push stos cmpsl add arpl pop cs sub cmc (bad) jle insl lret dec clc xchg push imul pop cli dec hlt rcll mov pop outsb mov adc hlt fucomp xor (bad) mov xor shrl je stos adc std pushl sub pop inc mov (bad) fidivl lods push xor in pop (bad) call loopne push pop push jmp ljmp push lea mov bound (bad) aas inc cmp cld and insl and (bad) ss (bad) enter fidivr jge mov mov jno push sub mov (bad) jg mov jmp lods aad mov jae adc fucom (bad) pop mov aas (bad) inc push mov (bad) (bad) lcall int pop loopne loope adc in cmp lcall shll add push sub test (bad) (bad) (bad) jg mov jl sub or pusha mov lds inc cmp daa pop aam stos lahf add (bad) jmp imull popf sti fwait sahf je fsubrl cmp xchg in (bad) ljmp lock outsl inc in jge scas repnz scas rclb nop cmpsb in dec lret inc cs (bad) (bad) (bad) xor push adc das imul hlt mov int in inc in ret shrb (bad) (bad) (bad) lcall sub das aas or scas (bad) out push and mov mov in (bad) (bad) (bad) (bad) jmp pop das xor or jne or pop arpl in dec lret in or ja push sbb cmp ss or xchg lcall lcall dec cmp movsl mov imul dec dec dec dec imul xor (bad) fnstsw insb fsubrs xlat xchg sub outsl mov lret push push in test lcall inc imul popf adc mov and lock incl gs iret aas sub mov lods xchg fnsave mov insl sub mov popf adc clc ljmp xor jp mov xlat es mov lcall (bad) mov mov lcall xchg lea (bad) call mov inc shrb pop xchg or (bad) (bad) (bad) jmp inc nop mov iret icebp ja pop repnz test lea fcmovbe pop mov mov cli lcall jb,pt popa xchg push jae and jne insb pop test pop in cmp jg mov cli cmp in cmp sbb adc das sub (bad) int3 mov jg idiv (bad) (bad) jg pop mov das dec lods add push dec aad mov push push gs (bad) decl iret in add mov bound out dec scas data16 lret adc aaa mov (bad) jl daa outsb jmp hlt push sbb movsb fcom push pop loop pop out push (bad) (bad) (bad) ljmp call add scas cmp xchg jg lahf push mov ret mov (bad) cmp mov jge leave mov int lcall sub mov call es jno call fcoml adc das (bad) incl inc adc jne inc (bad) (bad) add fidivr mov inc or cwtl imul pushf popf inc repz fist inc mov pop lcall sti sub push mov in mov (bad) mov enter inc stos daa dec jo negb jp pushf fs fcompl popa cld outsb out orl mov (bad) (bad) cmp cwtl insl add leave add pushf sbb sub scas mov arpl (bad) decl xchg daa insl fisubl loopne inc xchg xchg cmpsl jbe and jg lea dec sub sarl mov stos mov loope test xchg mov outsl dec outsb aad inc call enter stc inc jmp lcall repnz xchg pop in loopnew ljmp adc push or call fdivp dec mov (bad) (bad) clc fdivrl lods fcmovnb xchg mov jno mov stos cmpsb jle sbb (bad) cmp sbb incl cmp inc and fwait xlat sbb push adc push jp idivl pop jmp setnp or inc pop (bad) incl add decb fcoml leave push sub lock and jg xchg push aad or loopne and outsl or iret (bad) (bad) lcall and xchg fwait inc jmp mov rclw out scas out lods mov xor jne rorb insb inc xor lods dec and jmp sbb cmp je popf addr16 cmp in inc xchg (bad) jmp outsl subb cld stos jb adc and inc mov fdivrp (bad) jmp mov sarl lods dec or mov add sbb (bad) jno cmp aam jne jne xorl lock les push arpl xchg cmp (bad) clc (bad) ljmp dec pop add dec int3 ret xchg (bad) clc rcr enter shll mov mov fadd aad (bad) ja push adcl dec je into rorl (bad) (bad) decl xchg data16 pop (bad) sub mov nop mov push stos rol adc lds sbb fs (bad) jmp inc xchg test jmp insl imul jbe imul (bad) add sub ja clc jmp fcomps pop je fwait imul out into loope jns (bad) test pop adc mov (bad) (bad) mov cmp jae cmp jae pushf cmpsb xor adc mov mov add inc adc je pop push push xor pop sbb cld mov outsl jg dec sub scas stc hlt mov int3 add leave lds insb jns scas je add dec fcmovbe mov push int (bad) (bad) icebp dec push cmp pop xor dec loopne and push xchg lcall and push push mov scas jl pushf inc fldt mov movsl push clc or out push mov add pop js scas pop cmpsl mov test pushf push xor and rcr xchg (bad) (bad) (bad) lcall lods mov add xchg pushw inc lods sub test pop jns (bad) stc mov lock push mov insb in pop dec fs sub je and mov adc fiadd mov jl cs dec bound negb push decl xor movsb cmp test jbe dec shll mov push decl jle repnz out outsb and mov add xchg adc sub pushf mov xchg add xchg push in sub sub add sub mov adc pop adc jo ljmp imul lea lret insl xchg pop (bad) (bad) decl test xor xchg mov fcmove cmp ljmp cli insl pop fbld cld and xchg clc xor faddl pop or inc sbb pop cmc and scas pop call inc rcrb mov mov cmp into int3 int (bad) (bad) mov cs adc (bad) jno jae jg cmp mov sbb mov add (bad) (bad) decl jle mov jb xor imul pushf mov aad xchg inc insl clc mov notl cmc (bad) (bad) (bad) lcall (bad) mov in int mov mov clc cmp xchg add (bad) (bad) decl std dec aad bnd cmp lret push (bad) lret fcomps insb fsts or leave leave dec lds outsl jo insb jbe div (bad) aad repnz ret dec rcrb dec lock mov adc or or das pop add adc ss cmp lahf sahf dec repz shrl loop pop push push loope mov push xchg jecxz inc cld pushl or jae lds fcomp test jnp repnz std imul adc push xchg nop in stc dec push cmpsb jg lock out inc jmp jg das xchg loopne jg lahf repnz aam mov mov ljmp jle cmp loope enter aas and adc pop xlat pop and jecxz cs add jle daa aaa scas or out xchg movsb (bad) (bad) incl sub cmc mov dec jmp mov outsb jmp inc fisubrl (bad) jmp mov aas xor fimul call scas xchg imul (bad) decl mov aam mov out mov cli cmp cwtl jnp lea outsl bswap jle push mov cmp cmpsb add pop fsubs push jns lock sarl lods push ret ljmp add cwtl ds aaa mov daa movsb push add sarb (bad) dec in fwait addr16 mov pop pushf pop movsb js imul (bad) mov adc jns sbb jae (bad) imul jl ficoml mov nop ljmp mov mov scas push add lcall push mov mov ljmp sar dec testb mov fdivs mov ret aaa mov lods insl aam mov repnz pop out lods fwait xor sbb mov push or fnstsw lock ljmp cli in stos pop push call mov addr16 inc xchg popf mov xchg (bad) int3 dec (bad) mov add dec jge,pt fistl inc loopne cli sub ret mov (bad) mov mov (bad) lcall push js xor push mov mov decl test stos movsb out mov cs out (bad) (bad) (bad) mov sar fwait push sbb pop jae ss aaa std lcall pop cmpsl sbb jmp mov fsubrs ficompl (bad) test (bad) jmp inc imul mov xor call mov pop lods fidivl mov xchg pop scas mov (bad) (bad) dec inc pop dec lods cli in pop mov pop lods push and stos js ret cmp dec sbb call ja arpl in cmpsl daa xlat in mov jmp loop mov stos mov and aam xchg inc cs push (bad) (bad) (bad) call xor popf push push mov imul cmp cmp inc mov aam std ja (bad) mov scas popa inc push scas or jbe sub cmp pushf decb int3 stc push xchg push shrl push pop pop fldcw xchg pop mov jmp lds xor (bad) ljmp loopne xchg dec sbb push arpl xlat mov (bad) cmc push test clc push sbbl lea (bad) (bad) mov jae pushf outsb lcall pop pop movsl dec xchg xor jp (bad) ljmp ret and sbb mov out mov (bad) (bad) (bad) (bad) cmp jmp push lahf sbb mov das iret mov cs (bad) pop in dec push mov cmpsb ljmp mov enter dec movsb jge cmp aad sub cwtl and add into mov bound cmp jbe sub mov in adc (bad) pushl ds arpl fiadd jmp out mov xor es add sub scas mov mov (bad) mov mov mov int js das sub sub cmpsl test cwtl (bad) jb dec push icebp cli cmpsb (bad) (bad) (bad) ljmp pusha mov push sub icebp enter push mov jmp outsl dec das pusha sbb mov int pop dec mov cmc mov sub sub and lcall shrl (bad) and lret scas aaa (bad) jecxz sub xor xchg lret in (bad) (bad) (bad) (bad) cwtl stos sub test jb jo out mov int mov or jmp jp ds ss (bad) fildll pushf aaa in cwtl dec scas sub adc pop adc xchg into add (bad) ja ljmp jmp xchg jno and sub mov fbstp adc pop hlt push dec and js or cwtl outsb adc hlt popa dec sti mov icebp (bad) incl cmpsb nop sbb ja out cli push xor loopne int inc jne (bad) scas adc add xchg push mov xchg cs dec sar lcall and ficompl sbb mov sbb jnp and push inc and (bad) out jnp outsb ret sti stos lods jnp xchg lods aaa cmc mov movsl (bad) int3 cli add xchg lea (bad) (bad) jg adc shlb jb inc pop in cmc sbb jmp fwait insl sbb gs (bad) push rcll mov divl xor mov pop stos sbb scas add popf lods sub dec dec fidivl jmp (bad) (bad) mov jp inc cmp pop pop in int adcb xchg into mov (bad) (bad) fcomip iret adc rol and xlat dec call in rorl lahf (bad) add ljmp sub cmp in (bad) (bad) (bad) jmp fdivs packssdw mov cmp pop repz fcos (bad) ljmp mov loop or and push jno inc insb inc stos pop or out or adcl and test xchg and (bad) (bad) (bad) jg mov cmpsb (bad) adc dec mov int jae hlt sub outsb xor in cld pop jp (bad) jmp stos fwait dec into dec jle cwtl mov mov lret sbb js mov in mov insb ljmp cmpsl lahf cmp cmp cld xchg dec sub xchg inc dec cmpsl xchg push jle add cmp pop mov call call std incl std adc aas sbb and jnp xchg scas (bad) and mov or sbb adc jp mov pushf pop lret test jg (bad) dec js pop das or push mov pop lret push cmpsb push testl (bad) (bad) (bad) jnp mov or xchg pop jp shrb or cs mov movsb xlat sbb (bad) call inc mov movsb cmpsl push sub mov push sbb xchg mov call cwtl cmpsl xchg mov jnp dec in sub je jno imul (bad) mov add in gs dec lock or fsubrl mov (bad) imul jge (bad) ljmp pop es mov sub mov and loope int outsb icebp (bad) (bad) (bad) mov repnz test repz je inc mov push jne dec push stos call arpl fs adc aad add cmpsb dec sarl push mov ljmp jo (bad) (bad) pushl or imull dec shrl pop xchg stos dec mov rcll inc jg (bad) jg jne fdivrp inc (bad) (bad) in xchg push data16 push push repnz push adc xchg jbe aaa add inc xchg repz xchg jb xchg ljmp cmp mov jmp adc cmp push xchg (bad) (bad) (bad) jg insl push lcall mov lahf sub jp push pop xchg jle (bad) decl mov (bad) aaa xchg ljmpw insb push add (bad) (bad) mov arpl stos dec cmp dec mov outsl cmpsb or mov (bad) jecxz out add cmp frstor sub mov (bad) (bad) ffree cmpsl cmpsb loopne lret jns mov fcmovne mov decl scas mov outsl pop pop pop xor inc (bad) (bad) (bad) jg arpl xchg sub les jmp pop xchg adc popf cltd mov mov aaa adc (bad) (bad) pushl stc sbb imulb jmp mov aas cmp data16 pop (bad) (bad) incl test popl sbb inc cwtl out fcmovnbe int3 fs inc popa mov cmp lods leave sub iret cltd gs fwait cmc mov (bad) mov adc lcall pop or sbb and mov cmp xor clc in xchg das adc mov cmpsl jecxz (bad) (bad) (bad) call idivl sbb cmp enter mov test push sub (bad) (bad) (bad) lcall insb aam jge pop cmp stos js fdivs daa arpl lcall incl mov xchg in mov push sub cmc ljmp (bad) repz scas sbb scas xor adc mov js sub push pop outsb dec add pop ret mov jp push sarb jle test add mov jmp addr16 cld push stos mov test out addl sbb sahf pop (bad) (bad) (bad) (bad) clc rorl push pop clc cs cmc push mov in mov insb cmc inc in inc fist (bad) (bad) (bad) pushl pop xchg xchg fdivrl push sbb add inc pop jno (bad) (bad) decl jecxz pushf xchg mov mov adc sub test mov sar adc push adc mov add mov xchg xchg pop mov (bad) incl mov cwtl cs into aaa in jae dec mov dec (bad) lcall xor pop jbe sub xchg pop push ret sarl fwait imul add dec jns iret jae ret xor inc outsb cli push mov sbb jb push cld (bad) ljmp xor aam pop sbb pop mov loopne loope pop sub push outsl xchg outsb fidivr ret (bad) fisttp int3 outsl cmp (bad) aad fsubl mov dec ss sarl (bad) (bad) jmp jmp adc test int3 sarb dec pop jno lcall mov cmp rorl cmp (bad) std push dec (bad) (bad) (bad) push (bad) fdivr mov ljmp mull aas lock mov xchg hlt dec aas mov add mov sar enter pushl rcr out adc cld push sbb sbb xchg js iret fcmovu pavgb into pop add sar stc jns aaa cli and adc mov pop jb xchg negb add lcall hlt jnp add xor fwait lcall mov xchg mov out jae mov push std (bad) (bad) decl pop icebp popf sub nop mov leave xor sahf mov fisubr or sarb scas cmp (bad) decl mov and (bad) hlt pop xchg and and xchg insl (bad) (bad) (bad) lcall pop dec fist pop fldt sub fwait mov pop iret into aas or lret cmpsb jmp cmpsl (bad) in cmp js lea mov out xor leave mov push mov out mov sbb pop inc mov (bad) roll repz rclb shr sub (bad) call out cli leave jecxz rolb cmp inc xchg inc fsubrs bound fstl push mov insl ret lcall pushf in cmpsb push loope jg hlt lahf pop mov pop shl cmc xor aam ret out inc lcall push pop out pop in or sbb imulb cwtl idivb scas pop loop les mov push (bad) (bad) (bad) inc lock in jp sar mov dec fwait out mov jmp dec mov jb pushf dec stos (bad) (bad) (bad) decl imul jnp push add lods in mov (bad) (bad) (bad) (bad) jns dec lods sub cmp jae mov push cmp mov lahf movsl (bad) pop push incl pop cwtl pop lea push mov in mov (bad) (bad) (bad) fsubrs cld rolb mov or fdivs lock sbb aas incl push std cs sar or pusha add ret push (bad) push pop dec daa mov mov data16 jb sub lods insl out mov pop jbe iret outsb (bad) jg decb hlt mov cltd rorb jnp (bad) dec inc xchg jns fcos inc (bad) pushl xor loop aad ror pushf pop cld arpl lods cwtl mov ljmp add fistl repnz push lret ficoml mov test (bad) lcall jns mov or test xor arpl outsl cli (bad) (bad) jle popf xor dec pop xchg push imul rcr mov ljmp icebp (bad) cmpsl cmp xchg arpl cmp ja sbb sbb loope std mov outsl out or sub (bad) xchg xrelease inc dec lods outsb mov in cmpsb icebp ljmp clc cmpsb cld cmp jmp test jne out (bad) (bad) (bad) cmp sbb (bad) jns xor push jl sti lds fucomp sub fsubs pop mov xlat jnp ljmp pop pop mov test imull mulb push mov in and test (bad) (bad) incl xor mov sub std shrl jecxz sbb aam xchg inc sarl jp sar push rorl push pop loope lds dec (bad) (bad) pushl or cmc rcrb imulb jl xor in test inc push cmpsl gs loope (bad) (bad) (bad) ljmp mov loope mov in fcoms cmp sbb lods std jb mov (bad) jg loop fldl jb repz xchg out add out mov mov sti into adc lret (bad) cli test scas xchg mov (bad) clc jno xchg cmp dec ja lret inc ljmp push push xor add push lock ljmp xchg stos mov (bad) loop push repz fildll les pop repz test in mov push sbb inc aad aad outsb adcl mov jg fsubl je fldl sub notl jmp stos dec mov sbb mov mov xor adc lea mov mov (bad) call loopne and fisubr cmp push add sub lret ljmp ljmp adc mov push mov xor (bad) xlat ret roll xchg jp jmp or pop fisubrl inc (bad) adc mov std fildl (bad) (bad) lcall adc adc jne xchg (bad) jnp xchg add cmp add xorb incl lret cwtl xor call cld pop hlt mov mov (bad) jmp insl mov icebp bound or add lret kmovb movsl es (bad) lcall decb lea push adc jo arpl add dec outsb lret fsts jns imul dec ret pop (bad) shl mov cli mov (bad) (bad) fistp leave (bad) movsl adc mov mov movsb lods sub lock and das dec xchg sub out das mov call test inc vucomiss (bad) (bad) (bad) jmp out je inc pop push enter pop push add or test iret fldcw dec (bad) xor add jmp test pop or pop xor cmc mov addr16 aam push lahf (bad) (bad) (bad) lcall sub les nop pushf mov int lds es test pusha mov jbe icebp int lahf mov ljmp mov (bad) (bad) lcall adc sub js lcall lcall or adc jp fldl loope cltd rorl xchg loop cmpsl rcrl ja (bad) pushl cmp mov inc mov mov call jne mov std (bad) decl das cs mov ffreep int stc popf aaa outsl incl (bad) je mov cmp jno cmp (bad) (bad) push mov stos mov pop sarl pop push sub push pop in jp jns cmp mov lcall jl hlt dec sub bound xor out inc movsl cmp int (bad) fwait scas data16 insl push movsb lcall push cmpsl movsb bound or dec cmp push push mov (bad) mov sbb mov adc test jne (bad) out clc call lods dec cmp jp outsb lods loop ret dec addr16 call in in pop std call push jb in (bad) mov nop mov rcrl cmc test sar jg stos mov dec sti (bad) inc and test or scas ss pop cs jmp mov sub icebp mov mov mov mov dec dec pusha cwtl ret scas fidivl mov cmpsb out ss imul call mov jo aam (bad) (bad) (bad) call outsb jae ja dec pop sbb pop pop xor push cs loope ja (bad) (bad) (bad) lcall pop fisubrl mov push xchg ja stos sub addr16 mov inc and ret jmp adc cmc mov mov mov adc stos cwtl out pop cli (bad) jns repz pop xchg or jne jl adc jge (bad) js and push call fsubrs xlat or imul jb lods adc mov mov pop fildl vmaxsd push outsl sub ljmp pop lea sbb outsb (bad) negl push dec mov mov pop lea lret push mov or icebp sub dec rol adc into sub mov std outsb (bad) loop sub ficom or fiadd in loope pop aaa dec inc test mov ds sbb and (bad) (bad) mov mov repz mov ds sub fcmovb popa (bad) (bad) incl jg stos imul sarb xchg mov pop sub xor test iret fistpll rolb pop mov inc cmp in lret (bad) call mov jmp sub add loope fcoms mov mov (bad) out clc pushl xchg mov arpl xor lret les adc cmpsl pop cmp (bad) ljmp push pop lock lock xor arpl neg mov and in aas push scas (bad) (bad) fcomip jmp test mov mov ret xchg dec push dec addr16 sub mov and xorps jle dec sub jge ret (bad) sub add mov (bad) (bad) (bad) aas jae data16 push xchg push sbbb js sub pop push add int mov and xchg mov and leave aad and jmp push cs jnp nop mov jge cmp (bad) (bad) jmp ror fwait inc outsb inc mov jl test jae out roll incl pop insl add ss dec rorb (bad) decl sbb loop sub lret jl inc aas aas xor outsl jg mov setg andl dec jge mov cld (bad) (bad) call pop and mov (bad) out ja leave inc ret jb xlat movsl repz or (bad) (bad) call cmp dec lods (bad) cmp push mov shrb sbb daa aad mov (bad) mov inc xlat jb mov (bad) std into xchg (bad) xorl pop (bad) addr16 outsl sbb stos ja dec int3 jecxz mov inc das insl or jbe jo mov (bad) call adcl jne,pn dec aad cmp cs (bad) inc xchg mov loope push or mov in xchg js hlt imul (bad) decl adc jecxz popf sub sub dec sbb fnop (bad) (bad) cld mov mov pop sub or sbbl mov or inc add (bad) jmp (bad) mov lahf mov jg ret add pop shll (bad) hlt push and add xchg (bad) mov fildl adc lcall call mov and cmp pop add repz add adc ret pop lret (bad) scas inc jae (bad) (bad) lcall xchg dec movsb in push je dec sub jae jmp pop jmp fstl (bad) cwtl lret loop dec sbb inc call outsl imul out mov mov sbb nop in rclb jg pop xchg incb fild loopne push iret lret iret or insl mov add dec mov add add (bad) jmp aad mov mov mov enter call popa dec push lea cmp mov inc mov mov shll (bad) mov mov add in dec xchg les jg icebp call sub inc out repz fildl (bad) push inc hlt jle mov insl mov jb fisttpll in insb aam outsb into bound icebp sar sbb test (bad) (bad) cmp popa sbb xchg sbb mov push les (bad) jg xor ds adc out (bad) mov std xor xor inc insl push std jle push lods sahf aas dec inc pop bswap adc cld in xor outsb fsubrs sbb cmp sub fstpt shlb pop jbe (bad) repz push je popa in sub xchg pop loopne pop aam popa sub hlt inc andb mov fsts mov pop add insb mov stc mov jg mov jns lods in pop mov cltd jae jmp cli add add inc loopne sub pop imul cmc lods out clc lods dec cmpsl in cli pop loope insl ss (bad) fdivrl cmpsb movsl loope dec dec cs (bad) push add (bad) (bad) (bad) mov pop sub clc or mov das loopne aas inc bswap jg scas roll idiv ljmp clc sbb data16 les std movsl fwait clc cmpsl bound sbb (bad) (bad) (bad) jmp lds repnz out fild mov cwtl lret leave inc mov mov mov out call lcall int mov and (bad) test adc xlat mov mov pushl shrb loopne push inc mov insl in push mov ja popf pushf mov (bad) (bad) jg mov les std jne ds and mov call dec stos xchg pop sub xor pop (bad) movsl (bad) enter lock (bad) ljmp clc repz stc xchg std call ret dec iret aas movntps mov movsb les (bad) jmp pop aad adc imul lahf dec or and sub xchg add add mov test cmpsl mov incb stos dec xchg sbb fisub aam loope (bad) ss cmp push stos into jo ljmp adc mov loopne sti and clc mov mov in fildl hlt pushf je ljmp (bad) fbld mov stc push xor xchg adc xchg stc mov int3 push pop lcall loopne div sbb out rcl inc pushf mov adc sub adc test pop mov int mov divb lcall outsl pop movsl pop mov push into cmp fisubl stos xchg cmp (bad) pushl (bad) xor mov out outsl push (bad) sub scas push hlt arpl mov fidiv sbb (bad) call xchg outsl push cmp inc mov dec mov sbb mov xor and (bad) xor in mov stos dec fucomp xchg (bad) out mov out mov es cmpsb into pop jge mov (bad) fcomip decl jp or ljmp inc push inc xlat jb inc mov pushl popf pop mov mov mov jp not enter dec ljmp inc jbe ja push loopne jecxz fild int3 lods addr16 pop adc sbb je dec adc (bad) jmp cmpsl xchg js mov dec pusha add stc push add les dec js (bad) (bad) (bad) cmp (bad) mov stos and sbb inc mov mov fs fstpl repz mov (bad) push inc fidivl push adc pushf push mov sbb out insb pop xor outsb push (bad) (bad) (bad) incl cmp dec aam sub fcmove dec je mov (bad) imul pushl rcrl dec pop jp cmp mov mov fsubrs in mov insb lret std mov cmpsl xchg mov (bad) (bad) xchg data16 fdivr ret push mov int3 dec repnz clc (bad) ljmp fdiv popaw inc cltd mov cmp mov inc (bad) into insb out out (bad) (bad) (bad) pushl (bad) fbstp lcall push test push cmpsl lods clc lock jecxz mov (bad) (bad) (bad) inc xchg jnp inc mov (bad) xor add ret setno mov xor lds lods mov clc or pop ja pop and aad xchg stos clc mov rcrl imul and stc cmp stos dec inc fcompl enter jns push jb dec dec bound stos jecxz lock pop icebp jmp rolb ljmp cmpsl stc jns (bad) call pop xchg out in gs shrb jbe insl (bad) dec jmp lock inc (bad) repnz (bad) mov cmp pusha fcomps xchg fist sub cmp xor mov fwait ljmp (bad) (bad) (bad) rorb movsl sahf jne das jl dec call jg push fs fwait dec pop or (bad) inc mov mov mov mov inc (bad) call pop or stc les push jne int sahf aas mov xor iret jg sbb movsb out push scas in nop movsl adc dec mov mov cli (bad) (bad) jnp inc jo lret xchg cmp repz scas insb jns sub outsl das cli pushl stos push pop xchg push scas ja xor fnstcw ljmp adc sbbb inc out mov call jp (bad) imul fisubr rolb mov in lock xchg inc adc mov pop hlt lcall aad out addb cmp and push out iret push pushl call jmp sbb pop add jb imul (bad) inc (bad) iret jo fcoml mov and mov jmp xchg fcmovnb outsb mov outsl (bad) ljmp clc mov nop mov sbb sarl lds adc pushl cmpsb hlt iret sti inc push add add out push inc dec push mov add inc in inc mov push push xor add roll and stos pop ja sarb lods (bad) (bad) (bad) push fcomp adc mov ljmp jae push jl jbe jecxz dec sub xor mov cmp lods outsb mov add loop fwait aad mov push adc sar lcall push sarb (bad) (bad) (bad) fdivrl or mov sarl hlt lret arpl and or xor aas cmc cmpsb je lock (bad) fsubs lcall imul mov std ljmp jge bound rcl pop pop inc or mov inc mov out lret cmp inc jnp push mov push clc add fs inc ljmp and push pop add or adc sbb fstl push sbb rcrl mov sub lcall enter ret cltd arpl cmp enter (bad) lcall insl aaa push icebp pop cwtl cmp scas iret cmp cmc cmp jbe test push mov (bad) (bad) jmp sbb adc pop scas jp mov addr16 mov (bad) ljmp cwtl sahf or dec sub test pushf (bad) mov xor inc arpl cld scas pushl add loop mov scas jnp xchg mov jnp out out (bad) jae (bad) out mov jg loopne add loop repnz xor or (bad) (bad) decl dec subb gs addr16 out outsb inc xchg cmpsb (bad) (bad) lcall loope out mov mov mov mov sbb xor or dec push xor pop icebp xor (bad) (bad) decl ljmp int shr add insb xchg mov push add (bad) (bad) call aam inc (bad) imul dec cmp test cmp (bad) (bad) (bad) mov vunpckhps pop insl xchg dec (bad) iret inc inc ret pop mov ds shld insl stc cmp mov push and mov xchg in (bad) jg sub xchg dec lock jne arpl in movsl lds adc stos fldcw fldcw call aas movsl out dec (bad) jno scas sbb lods imull out (bad) mov add or sub xchg nop inc mov jg pusha int3 or stos lods cwtl pop leave mov inc mov inc nop sub push sub rcl dec test cld pop push cmp mov pusha push add (bad) ljmp clc in push adc sbb testb fidivl ret dec push int and (bad) decl pusha add dec mov aad xchg shll negb rolb mov (bad) (bad) mov pop fwait hlt hlt cld push xor pop push sub (bad) daa popf (bad) jne cmpsb cmp lock push xchg (bad) ljmp fwait inc mov aas sub mov adc jnp shrl xchg or leave dec jns pmaxub (bad) (bad) call iret lret out mov push ret adc lods cmp mov sub sub test loop inc iret jbe mov (bad) push mov or cmpsl adc cld push cmp (bad) (bad) call xchg (bad) negb lahf pushf popf xchg pop cmp sub js outsl rep pop mov decl sbb imul out jle gs (bad) (bad) decl inc jb inc push jb in daa pop jmp in test push pop int xor (bad) mov das or push mov jecxz lahf xchg jnp xor adc je mov pop test pop in (bad) (bad) (bad) incl and mov insl lods ss imul lds dec les je dec mov jne arpl (bad) outsl movsl shld mov (bad) dec xchg xchg pop sub sbb test (bad) (bad) (bad) fsubrs lret repz jp lea jae negl sahf (bad) mov or sub adc mov adc push popf push cmp xor xlat cmp call popf or fcomip jmp inc pusha and addr16 ret shr pop cwtl iret push test cbtw lcall lahf mov add adc xchg in xchg sbb (bad) jg sub fcmovnbe setbe dec fs movsl je inc mov in enter mov jae push adc ds (bad) mov mov xor (bad) mov cmp pusha inc test mov mov xchg mov and cld (bad) cwtl data16 cltd sbb jb (bad) mov (bad) dec sub pop in jle mov xchg fsubrs repz nop decl cld jg sub jge,pn jl cmc cwtl hlt scas mov insb pop icebp pop loopne sbb out xor dec pop pushf push loop insl cmp (bad) ljmp push jbe fwait cmp (bad) jne cmp push and (bad) pushl cmp xor jne popf jle lcall mov (bad) decl push push pop fisttpll cmp sub ds stos cli loopne sbb mov inc mov aaa std ljmp int inc mov scas mov rorl jp movsl xchg pop mov (bad) (bad) (bad) call and ss and inc test xor or mov sarl shrl fistpl lock jmp dec cmp sub push rorb jp (bad) mov and mov fs jg jmp xlat mov cmp dec add (bad) (bad) ficoml cmp les mov inc xorl mov mov and (bad) (bad) (bad) pushl fdivr push mov cmpsl in mov add dec mov arpl or cmp adc add push push push enter incl cld incl ds pop mov ljmp pushf rolb jne sub (bad) (bad) (bad) jl push (bad) xchg popf pop adc xchg adc sub stos nop mov test (bad) (bad) jmp mov lods pop sub das jl fsqrt or mov aad (bad) ss mov sti mov and (bad) (bad) ljmp hlt lahf call sub aad mov sbb xlat pop mov hlt pop cld ss inc mov inc add sbb cli das clc (bad) lcall pop pop cmp or mov push adc or (bad) (bad) cmp imul sbb ret cmpsb stc adc or cmpsb push addl mov push mov popa mov mov cmc gs jg cmpsl mov mov lock or cmp scas mov and push loopne mov xchg movsl xor mov pushl std or and rcrb or cmp add in and andl and mov push sbb mov mov arpl pop ljmp scas ret in lods or lea jbe int xchg add (bad) call adc and mov jmp std (bad) (bad) (bad) lcall pop shlb jge cmovae das jb addr16 into iret dec lret mov (bad) (bad) lcall inc jae or loopne imul mov cmc bound cli sbb pop enter (bad) (bad) (bad) dec imul scas xchg (bad) clc mov or inc xor pop rcll adc cmp dec arpl xchg sub mov jnp jg (bad) jmp inc mov and jno adc cmp stos loop jne (bad) (bad) (bad) pushl sub dec out int3 mov gs stc dec cltd push inc jae mov pushl cld lock stc movsl lea mov jg sbb out fisttp icebp xor push jnp (bad) (bad) mov mov enter xor cmp pusha cmpsb in aam movl xor je jge mov mov (bad) (bad) (bad) pushl scas pop xor call xor aad cmp stos in jno ds (bad) (bad) ljmp arpl push cmp int adc cmpsl adc lods push jae or cs pop jns (bad) (bad) jmp xor sbb rcrb lea adc mov out sbb add mov xor push shlb bound lcall pop mov (bad) push ss loopne cmp cmp or lods (bad) cltd adc ja push mov lcall ljmp mov jp add scas xlat pop hlt lcall xlat add push fimull in jp push add ret or jg pop xor mov insb mov ljmp es sub sub dec push (bad) les ja push mov call push inc mov and sub and inc divl cmp test pop sub or rclb sti sbbb add jmp clc (bad) fsubl mov dec add dec cmp mov xchg push leave xor incl jl mov pushf adc incb xchg inc movsl adc push or sub mov (bad) ljmp aad sbb test mov inc (bad) mov mov imulb stos (bad) in ljmp push pop fsubr xchg outsb rorb (bad) in xchg lret dec inc out dec (bad) xor jnp xor (bad) (bad) dec inc jae jecxz scas int3 cld pop arpl cmc in xchg jnp dec in in mov push in imul hlt bound sbb call hlt aad (bad) out push mov mov jg (bad) pushl in subl (bad) mov jne clc dec aad mov in jbe and fcoml add inc sbb pop inc subl (bad) jmp sub inc dec outsb fcompl jmp mov fcomp stos in cmc fiaddl xchg pop leave mov repnz and fldt lretw add (bad) pushl cmp aam test mov arpl scas fsubrl dec push pop cmp fwait rorl jp fwait ss jl sub leave fnstenv cmp bound (bad) (bad) (bad) pushl (bad) pop inc stos outsl fldcw xchg xchg into dec movsl je rorl ja (bad) (bad) (bad) jmp out mov xchg add dec mov push mov insb mov hlt ja clc xchg (bad) loop cwtl mov out mov idiv sub call test cli jmp js xor loope cmpsb pop movsl fisubl cmc (bad) jmp xor mov cmpsb jne xor push pop and stc cmp (bad) incl fidiv out adc adc pop sub rolb std (bad) lcall loopne adc sub cmpsb scas iret pop mov dec shrb pop or jp movsl mov xor outsb insb push sbb popf push hlt stos hlt jno das xor sub frstor adc xchg sbb mov mov sub push fs ds fidivl out push (bad) cwtl pop fidivrl insl adc mov mov or jmp cmp shl (bad) (bad) (bad) jg pop push push sub push add jmp pop add xor aaa mov call data16 xchg in push sub add lcall push lods les fnstsw sub aad lret pop mov sub mov stos sub push jge push sti call dec scas or fisubl cmpsb stos mov jg mov (bad) jae mov jb dec call ljmp push pop cli out dec out inc mov pop repnz in ss or testl lock fisttp icebp addb je lds cmp cli (bad) pushl ds and pop adc notb pop mov ljmp mulb fcmovbe and (bad) (bad) ljmp std add aas in repnz mov inc outsl sar clc pop mov mov leave xchg mov fucomi clc inc js jg mov mov fbld lcall scas clc dec loopne aam push cmp cmpsb mov lret in pushl pushl fildll out mov add mov dec sub sbb sbb pop pop js mov stos popa inc test jg out call mov push int3 mov xchg mov (bad) pushl xlat sub loop cmc jmp jle jb lret std (bad) ljmp ss jle in inc inc xchg orl sub sar (bad) decl dec pop insl mov ds adc or rcrl xchg xchg dec mov (bad) enter (bad) (bad) decl (bad) cmc fnstenv mov stc jecxz (bad) xor mov jmp sub pop icebp and test es or mov adc sbb cli (bad) (bad) in xor sub aam mov (bad) cmp adc (bad) mov xchg ficompl popf out (bad) stc jge fidivr xchg (bad) jg dec sub mov repnz push movsl popf in sbb (bad) (bad) (bad) mov add cmc fwait mov fsts jne mov sbb sbb fisubr (bad) mov out ja out pop jb cmpsl std (bad) lcall shrl daa or call adc add (bad) call mov stos fsts out pop dec notb push xor adc (bad) inc cwtl dec leave sahf (bad) stos scas lret repz jns dec push sub inc pop cmp fisubr (bad) imul push test (bad) loope in dec jmp push ljmp cmc mov dec aaa add jne sub jp ljmp mov dec push aad scas loop xor js cs repnz call push rcll mov cs (bad) jmp stos out subl test in push scas mov push out mov outsb add (bad) (bad) jg push fisubrl hlt xchg inc out test rclb and (bad) (bad) call (bad) clc or adc pop sub inc lds dec push and (bad) lcall fstps push cmp ja and mov (bad) loope push in lds flds in xor rclb cmpsb bound imul push add sbb jecxz jb (bad) dec push loopne popf (bad) (bad) mov ja pop xchg pop lds xchg inc das adc mov jp,pt push pop cmc (bad) (bad) decl ljmp mov movb int3 jns int3 dec push lcall push sbb xchg (bad) test cmpsb and stos push sbb rcrb jecxz hlt ss shrb xbegin fs or dec mov iret mov sub push (bad) hlt fisubrl jbe mov mov cltd lock inc (bad) sbb mov pushl jmp mov xlat pop in pop sub xor pop std fild pop push jge mov lock std mov sarb pop jp idivb not jle decl cmp sahf xchg mov repnz push and lea bound in imul (bad) (bad) inc insl jp xlat push cld (bad) test call cld outsb (bad) add mov (bad) mov jnp sub das pushf sbb (bad) mov cld das jg pop and (bad) mov outsb xlat dec popf push pop mov xchg in incl aad div gs int lcall (bad) (bad) (bad) in mov or pop push jl inc mov jecxz ret aad es inc jae push notl (bad) (bad) (bad) pushl add jg push aad (bad) lahf lret leave and sbb lea les sub pop icebp fucomip cmp out ret (bad) (bad) (bad) push lahf ret insl (bad) imul (bad) rorb mov ss add ss pop xor dec rolb jp fisttpl push rcl lcall ret insl pop xchg rorb and inc lea push (bad) (bad) fcos mov cs cmpsl test (bad) movsl mov push (bad) push fsubl dec fnstenv repnz mov inc cwtl cmpl dec (bad) (bad) je dec scas jmp sar (bad) (bad) cli and into pop mov mov pop lret int fnstenv outsb mov outsb dec xor sarb pop popf dec loope cs (bad) jg (bad) mov out xchg int rcr lret (bad) icebp cmp nop aas xor idiv dec enter adc (bad) pop les aam mov pop shll outsb lea inc sbb xchg aas push pusha mov (bad) (bad) fdivs popf push and loop lods bound mov dec call lret mov mov (bad) lds inc (bad) mov bound pop fimull mov cmpsl push xlat outsl pop (bad) (bad) (bad) js (bad) (bad) and dec fldl in adcl mov scas xchg out repz xor xchg inc loopne pushl mov es sbb cmp imul out push (bad) lods aaa inc jae lods dec adc pusha jl ljmp outsl dec jmp (bad) cmp push and divb (bad) pushf std negl in pop mov clc and mov adc jg outsl mov stos call inc insb psrlq add pop aaa cltd out lret mov xor mov lea jbe push fldenv inc ror push gs mov les nop and es jns cmp cmpsb pusha (bad) (bad) (bad) or jmp xchg dec adc movsb imul arpl xor (bad) clc sub out jns call clc movsb call push int ja inc xchg xchg test (bad) call push mov mov sub int clc in (bad) rolb add adc in and jecxz jl jns sbb aas call push inc xchg test scas sub dec xchg hlt ljmp out jmp enter sbb add stos dec insl aas cmpsl adc push mov das add or (bad) jg sub dec and sub flds push out lods or incl mov dec xchg dec test or stos mov in mov add inc pop enter scas mov notb ljmp daa pop sahf test mov loop dec push scas dec aad (bad) (bad) (bad) jmp mov inc out sub stos lock mov add pop adc test add rol ds arpl das inc stc inc jg mov icebp mov xchg fstl test inc xor (bad) push (bad) (bad) (bad) (bad) call mov fist cmpsb cmp mov add xor cs mov sbb mov decl push push or jno push push outsl cmp incl push into sub fwait rolb imul sbb pop sub dec xor (bad) lcall push mov push cmpsb xchg jnp mov push fwait inc xchg lret out mov dec shrb cmp (bad) mov (bad) out scas enter scas add ljmp mov and cmp out nop push adc in xchg mov ret pop idivb and (bad) (bad) pushl pop scas imul clc cmp ss les jge and sbb push (bad) (bad) (bad) pushl sarb out mov xchg ret mov outsl sub push or add jle cmp inc insb pop (bad) (bad) (bad) decl dec outsl push popl lds aaa pop xor jle repnz popf mov xlat cmp mov outsb jp jl shll lock jne jb cld (bad) (bad) ljmp leave xor and lret jg cmp dec adc imul es incl inc movsb cmp mov popf imul and inc cmp xchg outsb mov pop in icebp adc xlat jle and add pop mov mov mov je mov scas imul xchg jnp inc in sahf mov ret in adc das cmp or mov hlt pop (bad) aas or repnz out push jae push pop lods out (bad) jp sarl dec lea xchg dec sbb and jl cltd pop hlt (bad) jmp jge jo in sahf push aad jne push jle cltd xor (bad) (bad) (bad) (bad) frstor push mov xchg fisttp mov negl lret cs mov in jbe testl inc jbe test mov (bad) pop scas dec test loopne call mov adc mov (bad) jno (bad) (bad) mov popf sub pushf mov push cs sub xor sti out clc lcall sahf ja in aad imul and push stos bnd (bad) jg pop xchg pop jg hlt push xchg push and and aaa cmp adc decl ja inc sub sarl ret xor xchg sbb jne cmpsb push (bad) pushl dec loope ret insl or enter xor test hlt leave aad (bad) (bad) jmp (bad) popa inc scas pop xlat scas scas inc leave inc fimull out xchg dec cmp mov fmull sub mov pop pop out ljmp cmp mov fsubrl push ja (bad) cmp inc (bad) mov pop push jl stos scas cli movsl xchg push (bad) int clc movsb aas stos hlt lcall test lods (bad) hlt mov pop aaa add (bad) call lahf add inc loop lods fisttpl arpl mov fidivrl (bad) (bad) pushl and cld faddp les dec (bad) enter push cltd pop shrb or call push lods pop and and pop cli std inc ficoml lret roll pop add xchg popa mov dec incl clc ja xchg pop (bad) mov ds mov mov (bad) ljmp mov push jo adc insb cmp fsub add ljmp (bad) sbb cld mov mov cmp mov inc xchg mov shrl aam nop cs ud2 mov sub and insb jge xchg inc (bad) ja push sub (bad) call gs popf int es dec sub ret clc lret cmpsl sbb jmp mov add cli dec push push call (bad) call test mov rorb push inc add mov (bad) call jp adc in sub repnz stos push or add fisubr push mov cli (bad) lcall jae push sbb sarl dec pop lds mov ja xchg aaa ja clc fmul (bad) mov (bad) decl cmp lods rcrb call scas xchg mov mov inc fdivr pushl out scas sbb fldt push or sbb jae (bad) (bad) (bad) lcall mov and or push repnz cmp rclb add (bad) enter xchg aam dec inc lcall shr sarl lcall adc sahf jb sbb loope add adc xchg decl aam imul enter insl sub cld jmp rorb fdivr ja and pop aam or mov or ja loopne rcrl insl or adc insb cwtl push dec scas jge and or and fisubrl mov cmpsb imul mov dec pushf ret cmc dec xor mov stos nop sbb mov adc fmulp and and pop xchg sub (bad) lcall xchg adc jns mov push adc and add sub leave pop jp aad pop lock scas hlt hlt dec dec cs fdivrl sbb (bad) jns (bad) pop pop loop inc push mov and stos inc cmpsb incb push int3 (bad) push or push loope jecxz or (bad) (bad) decl xchg (bad) xor or push inc clc cmp in out add lahf aaa loop adc cmp xchg inc dec jp cmpsl xchg ja push xor std mov push aam mov mov (bad) ljmp js cwtl sub outsb push mov out dec mov movsb xchg je (bad) jmp (bad) dec rcr cld jmp mov push ss cmpsl out jnp add xchg decb fbstp clc or loope fnsave inc pop cld cmpxchg fwait cld push insb lock cmc dec nop aas (bad) repz and fisttpll and stc pop jle jb cli push push add repz mov clc pop xor es cld pop icebp jg cmp lret xchg mov aaa das daa cs test mov out imul sbb inc sahf mov sbbl jmp out lret int (bad) (bad) aad lret ds dec (bad) jmp fs cmp cmp lret xor sub or lods dec adc dec inc mull inc fdiv aad fnstenv (bad) jg mov sub test add sarl mov xor out cmp (bad) (bad) decl pop in xchg pop outsl mov dec fstpt xor sub in lahf adc outsb fidivr inc jle xchg xchg clc das inc xor sbb popf lock (bad) ljmp cmp pop cmpsb pop outsb push inc mov sub aas mov fiaddl (bad) jmp cld cmp cld pop mov push (bad) (bad) (bad) decl loopne nop cvtps2pi sub sub jno lcall gs (bad) (bad) (bad) (bad) push loopne adc dec aas sar imulb cld mov ret dec bound xchg pop xchg in fildll sbb mov int3 fisub (bad) in lds (bad) mov pop iret fwait xchg xchg lock xchg or leave lock (bad) (bad) (bad) mov pop clc dec call lods dec sub das pop jmp scas icebp leave push mov lcall fcmovnu into jbe out xchg and push push sub test das mov (bad) decl ss push cmpsl mov mov enter hlt scas xor jo shr jg aas rcll jg mov or dec cld sbb sub pusha jle call outsl mov xor in daa or jbe lock in cli stos lret xchg adc aam cld pop negl jmp mov push xchg (bad) mov cmpsl out xorl (bad) jp xor push jge cmp cmp lcall ja icebp jecxz adc ljmp testb nop lods add arpl sub loop push in aad lods jmp push cli pop sar outsb int jmp fistl xchg pop dec fimull cmp mov sahf subl dec and shlb mov lods xlat ss xlat sub pop fadds imul (bad) incl jl sub pop (bad) mov sub dec les outsb repz (bad) (bad) (bad) call xor cld std lock dec mov (bad) mov and push movb enter (bad) in jae fs cld aam cltd mov (bad) pop or out sub fbstp out jnp scas jno sub adc test and dec pop mov dec aam xchg inc scas pusha gs ss or dec mov and rolb and mov mov out test cmp and sti lahf jp and (bad) (bad) pushl inc mov aaa jmp jmp in sbb sub call dec clc mov icebp (bad) cld pop arpl push jb jge shl sub scas pushf add push pop adc mov (bad) pushl in dec and popa andb test aaa scas popa je cmp adc data16 rorl inc aaa out faddl push es dec or (bad) jno into lds lock mov daa jg lods aad out push (bad) (bad) (bad) call pop cmp mov outsb push ret (bad) in xchg mov stc hlt mov mov (bad) mov nop pop adcl stos loopne lea push movsl jnp xor outsb xchg lock out repz jg xchg add aad (bad) (bad) (bad) fcomip pop fs pop sub cmpsb push loope mov mov pop imul ljmp cs mov (bad) pop lcall cmc cs (bad) mov xor fcmovne mov mov mov or push add dec inc es popf (bad) sti and data16 (bad) mov inc push fcmove popf insl pop outsl (bad) (bad) lcall arpl test ja jge es notb and ret (bad) (bad) call repz and push ret test (bad) stos xchg in fildll jl (bad) call pop lcall (bad) (bad) (bad) pushl cltd sbb inc jl jne (bad) gs xchg pop xchg imul jmp mov aaa add in sub bound xchg loopne cs das popw mov push (bad) mov pop or enter mov rcrb pop xchg call fcomip or inc add test in mov (bad) mov pop mov cmp (bad) jg add jl mov in mov aad push fnsave decb jle movsl pop (bad) insl jg pop push mov es lods push cmc and int3 mov and hlt fbld stos mov (bad) (bad) (bad) out cli push and mov cmpsb pop shll rorb pop sti ficomp cmp (bad) (bad) jp lahf push cld dec dec mov inc leave pop aad fstps iret xor mov jns cmpsl ret arpl sar gs testb scas sbb sub add fild cmp push add (bad) (bad) pushl adc mov stos lods pop fdivl push ljmp stos sbb movsb add (bad) (bad) pushl stos (bad) mov mov sub js dec jns mov aad ret cmp pop (bad) (bad) (bad) lcall mov les fidiv cmp faddl mov lret cli (bad) jmp movsl push mov sub lcall aaa mov xor mov sbb cmc inc xlat mov pop (bad) mov out cwtl jp jp add cmp pop jo and mov (bad) inc popa pop jae cld addr16 xchg pop push andl addr16 pusha xor sarl push mov cmpl cmpsb cmp outsb push mov lds ljmp mov loopne,pn test loopne sbb outsl cli mov insl push push sub leave mov sub leave test test pop sub (bad) insb mov pop scas (bad) fwait (bad) (bad) loop add faddl es cmpsb cli inc push int mov mov lods mov jmp negb decl cmp push popf andl dec enter mov push (bad) clc add cmp jp cmp xchg es es in jns jl mov hlt loop (bad) mov ret dec lcall mov (bad) adc sbb or adc dec out pop dec or iret dec and mov (bad) (bad) call cmp xchg mov mov jp lea inc clc lods je into (bad) jg dec cmp xchg lcall cmpsl adc (bad) (bad) pushl and fcomps fdivrs (bad) stc lds xor or and xlat pop mov pop mov adc sbb test mov pusha jo fstpl inc add inc mov (bad) (bad) fisttp sbb hlt pop mov push xchg scas mov push addr16 (bad) in (bad) aaa cltd clc test add push mov (bad) (bad) mov fdiv mov push inc cmp jnp jae iret inc push cmp (bad) call mov cwtl pop sub mov test mov push test sub pushl cld movsb insl ret xor sarl daa or (bad) xor inc sbb (bad) (bad) jg inc cmp scas xlat and enter push mov pusha stos popa cs jnp ficom loope sbb scas (bad) ljmp inc push adc ss les (bad) (bad) (bad) jmp cwtl imull adc loope pop fwait mov imul jbe (bad) mov movsb add das cli sub scas jnp cmc loop lcall jg add sub fidivr mov sbb adc mov decl and inc mov pop push enter jle mov sbb push mov jne loop jne push cmp out push cmp jecxz ljmp loope jecxz (bad) (bad) jmp mov fmulp mov pop adc imul scas outsb (bad) (bad) (bad) push xor xchg xor xchg ficomp dec scas mov ret stc aam ds cmpsl mov dec scas inc aaa mov inc lods aaa (bad) xor bound mov (bad) jmp lock jns cmc push out in std iret inc adc mov cmp mov data16 push addr16 push outsb adc cmp mov mov in xchg hlt add (bad) lea xchg sbbb pusha cmp inc sbb scas pop iret fidivl pop lods push mov jg push mov push stos sub cli pop and (bad) dec sbb in out idivl mov add jg lock pop dec add xchg out dec out (bad) push js mov in (bad) mov jns aas lds test jg ss idiv mov push les jg pavgb sti jl loopne test pop cmp xor in pop loopne shrd pop outsb jo aaa ret push shrb fnstenv pop std je fcmovu inc mov fcmovu sar mov aad movsb xchg or or pop out repz mov aaa (bad) (bad) sbb cmc (bad) (bad) lcall andb shll sbb xchg sub pop in mov and pushl dec adc in jo dec jmp mov (bad) jmp call dec inc xchg lcall sahf pop mov pop add (bad) (bad) decl jp mov aad outsb jge mov hlt out dec pop inc cmp mov lea mov mov fdecstp dec mov outsl jle push jl or (bad) cmc emms fdivrs push insl std jge xlat loope cmp (bad) call dec hlt inc pop fistpl dec repz loopne cmp test and ja mov jecxz cs mov adc mov sbb mov xor movsl pushl sbb loop repnz push pop mov shr out add outsb std (bad) jle mov cmp mov stos xor test mov insl (bad) decl dec ret mov ret aas inc jle repnz (bad) dec xchg mov stos repz cwtl jb mov loopne cli es clc jno std (bad) incl xbegin pop pop shll cmc aas pop (bad) call mov enter cmp mov jmp mov (bad) jmp cmp jp in pop daa dec jbe cli mov std sbb xchg repz imul (bad) dec mov pushf cld scas mov adc sti jns call add mov ljmp scas push mov lcall mov cmp aaa cwtl jnp ljmp mov decl push pop cmp rcrb mov iret (bad) (bad) (bad) jg (bad) push imul jmp enter fcmovu or scas mov leave fwait incb incl pushl jne mov inc nop sahf cltd xchg cltd insl leave mov neg cli pushf jns mov lret push (bad) popf xchg push xor push xlat ljmp aaa xor add (bad) mov inc orl loop jnp ret repnz sbbl imul sub (bad) (bad) (bad) mov xor call sbb sub (bad) lods ds ret das cli inc jno adc in or and pop jp ret loopne into pop cs and decl ret arpl or test and ficompl inc test push dec push mov xchg dec add (bad) loopne stos das push lock das stos adc test or mov clc jb inc adc (bad) (bad) movsl rolb adc and loop push or and jmp test mov loopne jo jne lods (bad) jg test into fwait (bad) push inc lds xor ret sbb loopne inc inc dec lret aad sbb je mov (bad) (bad) jmp rclb jp jecxz xchg add gs daa sbb fisubr mov ljmp (bad) lcall pop call or rclb fs in imul sub clc sub push sbb lods fstl cmp mov mov (bad) sti (bad) lcall shrl jmp or sub jg inc add adc xchg jp imul std (bad) cmp xchg cmp loop movsb xchg lret sbb hlt dec fisttpll shr and ja (bad) ljmp jo outsb cld (bad) xlat aas out mov add mov jbe sub lds and and sbb sbb sarl stos aaa push push push mov popf jne and adc add idiv out test ja stos repnz out jp jne inc push (bad) mov fnstsw clc (bad) mov insl sub je sarb adc (bad) jmp xchg xchg leave jno sub xorl (bad) lcall add adc mov shll push data16 popf mov mov sbb add in pop ljmp je xchg test or movsb jbe dec push in xlat ret jg call ljmp jo pop inc mov insl pop es jecxz aaa std call je (bad) js dec pushf aaa arpl sarl mov cmp icebp decl (bad) mov insb in xchg push scas push (bad) and sbb adc push stos push inc cld push (bad) cmpsb or add shr or xchg hlt pusha fwait xchg fbld cmp leave int mov ss jp pop dec fcomps lcall pushf rcr xlat push movsb enter or cmp push xchg in pop or lods fwait sbb mov cmp (bad) (bad) pushl (bad) dec in jae lock xlat pop out ret lods jne mov sbb push inc dec xor add pop jae cld ljmp (bad) fmuls xor mov aad mov mov ja ljmp mov test fiaddl aaa push fnsave js push sysenter fnop jg enter mov insl push xor leave (bad) (bad) out adc cltd jns,pn and pop fistl jge sub nop and lcall imul in mov stc pop (bad) lods pop cmp movsl (bad) (bad) jg pop xchg cmp lods xor cmp adc enter (bad) (bad) sub push pop popf out or push outsb scas mov sub fwait mov sub adc das clc pushl push adc or inc scas push ret test xchg mov in (bad) call push jo stos (bad) push or jnp fimul mov push popa cld (bad) call sub inc inc lahf dec es out test pop cmp sarl hlt (bad) cmp jl dec add cmp clc dec aas mov xchg mov xor inc into inc mov jo add popa ret (bad) shll mov (bad) call mov in push test or cmp sub loop jmp (bad) push pushl or in int dec mov pop clc adc push mov mov ljmp rolb push xor jns movq jl mov inc hlt sarb sbb (bad) xor nop popa cmp es xor (bad) incl rcll mov push mov adc in and (bad) cmc mov inc jg adc dec lods sbb out imul inc clc inc ficompl imul ljmp cmpsb mov dec mov jp jge idivb xchg aas pop dec inc out cs movsl cmc xchg cmc jmp and dec mov sbb sarb sbb icebp outsl mov in push iret lods incl xor int3 ds sub idivl add stos pusha fsubrp inc in pop in adc dec jecxz push adc sbb jo xorl fsubrl jg dec push loopne inc jle or dec shrb enter movsl test stos (bad) mov pop push cmp lcall lcall inc dec and dec test sbb dec jge cmp stos jl cmp (bad) mov std pushl dec sti push outsb fst add dec mov add dec pop cmp mov mov out (bad) das movsb lock in cmpsl sbb adc mov push (bad) fcomip call aaa xchg push xabort mov pop inc jg sbb dec cmp fnsave test push push push xor adc ss adc lods (bad) decl repz pushf je jnp iret dec xchg push in in mov add in aaa cld clc daa iret push leave or lret push pop mov sub pop xor dec sbb cmp mov xlat stos cwtl cmpsl mov (bad) pop inc pop arpl (bad) mov clc fwait (bad) sub sub lds out std (bad) mov rcl aaa and bnd dec push hlt insl push or and call les xlat cmp add dec push das jo cmc (bad) (bad) incl push jmp popf push and inc add sub sbb enter inc lret loopne lcall sbb dec mov push and cli xlat inc (bad) nop (bad) (bad) call cmpsb jle lods pop je sarl push mov je (bad) (bad) (bad) (bad) cmp fs adc add pop sbb fwait mov fisubr lret ret into (bad) (bad) jmp push leave fidivl insl outsl push sub enter jg in pushl ljmp adc mov sub stos cmpb sarb add incl jnp fnstcw mov adc test outsl (bad) call mov out repz sahf lock push (bad) rcrl repnz (bad) (bad) (bad) pushl das cmp outsl pushf mov popa out lock cmp push pop jmp hlt (bad) (bad) (bad) (bad) fucomi adc mov mov xchg mov add movl xchg call ficoml repz pop mov and sub xor (bad) mov out bound inc and pop call lahf mov (bad) aas and insl dec rcrb mov insb jnp (bad) (bad) (bad) call mov cmp aas (bad) sub decb jge cmp idiv (bad) (bad) (bad) jle divl inc sbb dec pop cmp pop push xchg cltd sbb lahf das (bad) lcall or and mov xchg mov pushl ret shrl enter jp int3 xchg xchg jle jge int3 (bad) fidiv popa outsl jge rep add jg ret mov push mov dec insl stos pop push daa cmpsb (bad) (bad) (bad) aas daa push imul adc sbb jae cmp xchg lock jg (bad) fchs imul (bad) push movsb popf fwait cmp leave inc mov mov xlat inc popl iret mov inc std jo cmp (bad) std aas jae lahf out data16 ds sti aas addr16 fstps psrld es (bad) jmp scas inc insl dec es (bad) outsb pop scas cmpl xor adc out clc ljmp mov not mov mov lods jle insb dec jmp outsb xor fwait clc jg (bad) (bad) (bad) cltd jne inc insb xor out pop pop mov hlt out aas in mov popa out sub jmp mov cli ljmp or jb icebp (bad) fpatan mov mov (bad) add out xchg lock aam mov add adc and and out fnsave pop bound pop mov push push fdivs lahf negb mov mov stos cld data16 fcoms les (bad) out cmpsb push (bad) mov out repnz cmpsl out and std mov pop push push xchg mov in iret loopne int3 push pop outsl js int repz insl pop insb or push (bad) ror fldcw sbb mov push pop hlt bound out int (bad) fisubrl decl jo or lret imul gs out fidivr movsl scas lods xlat cmp push jbe les call inc push lea xchg aaa xchg clc xor pop cmpsl dec pop (bad) movsl push ficom pop (bad) loope (bad) call rcrl ficompl das jns adc mov jno das arpl lcall idivb adc nop nop cmp push int3 arpl or in imul fcmovnbe ja sub pop sahf dec int (bad) (bad) sub (bad) (bad) (bad) (bad) (bad) xchg mov fs mov dec icebp pop cmp arpl mov ljmp inc add adc mov jecxz or mov lea adc push inc and pop stc pop jno xorl mov sub inc das pop clc (bad) fbld add in dec add cwtl stc or mov sub lock mov push dec add mov dec rorb dec jl (bad) (bad) (bad) ljmp or mov sbb nop mov movsb dec aas lret (bad) lcall cmp lcall add inc pop push enter pusha es outsl xor imul insl (bad) mov out cli or push sti jecxz xor test loope cmpsb xor pop jb (bad) (bad) push sbbb sub stos mov push add (bad) imul mov in mov repnz xor aad lret lret rorl aam ljmp add (bad) jp imul lods out pop push xor xor (bad) (bad) ljmp and int pop fidivrl scas imul pop push bound push lock fisttp jo fstl iret imul cmp cmp fstpl add (bad) out mov lcall cmp xlat push (bad) (bad) jo mov sub push cmp jmp das jb sar call rcrl cmc (bad) mov imul cmp jg out fnstenv aaa sbb mov ret dec pop mov dec adc jne xor push sti lcall push push jae sub leave ja add inc pop sub scas loop mov pusha test push aad pushf incl sub ja sbb fisubr pop sub cld (bad) decl popa (bad) out js push inc stos scas jnp jae and movsl (bad) in mov sarl shlb (bad) decl mov push movsb sub shl mov fcomp addr16 ret (bad) cmp sub pop xchg addr16 stos movsl jbe (bad) icebp fisttpll in mov mov jae or scas insl (bad) dec incl outsl enter cmp js push inc xchg lds pushl pop pop push ret lahf imul mov jmp test mov rcr adc cltd adc rcrl xlat aas ss inc jb (bad) (bad) pop add pop scas cli (bad) call adc es mov mov outsl imull (bad) mov aaa out cli push adc outsl and push xchg lcall mov aad sub sub stc and (bad) iret lods mov inc ja ljmp in (bad) fidivl (bad) jbe std push sbb sar scas lea outsb sub stos inc xor (bad) fcomip pop (bad) mov addr16 mov mov (bad) adc jnp fnstsw (bad) (bad) push jns sub test fisttp sub arpl cmpsl stos push cmp mov scas adc xchg dec ljmp lods pop std call mov sub xor mov sbb test jg out jbe jo notb or cld pusha xor (bad) (bad) (bad) (bad) jmp cmpsb std in cs push push push pushf mov cmp push xchg cmp pop xor and ljmp pop push jb fs dec push or gs in out sub insl js je cmpsl imul movsb loope es clc lds int adc add mov imul (bad) (bad) mov mov in fwait testb mov in out adc lcall movsl clc popa aad push outsl into mov add (bad) (bad) decl popa add cmp cmp inc insb ret xor (bad) mov (bad) (bad) (bad) ljmp pop (bad) pop (bad) mov jp mov xchg mov outsl jae push mov jns lcall mov and je lea pop fadds incl mov dec jg hlt mov leave sbb inc adc jns fildll ljmp add lcall aaa sbb push pop xchg inc rcll inc sub xchg push (bad) (bad) (bad) incl xchg xchg lret loope xchg mov loop mov pop stos xor mov imul push aad sbb cmp movsl in push fsubrl loopne pop in jnp out jmp jg inc dec iret sbb mov inc ja,pn cs and cmp hlt push call jae sbb mov cld pushl dec shrb mov sbb mov sub in lock dec ret scas mull aam ljmp sbb decl add js pop stc cmp decl or rol mov in sbb mov cmpsb lods pop pop push cmc ret pop sub nop xchg push mov xchg sahf xchg jle lods mov or stos (bad) pushf mov outsl call jmp ret rcll inc cwtl pop imul icebp lcall aam lea cs push adc add mov in xchg leave pop cmp add (bad) lcall inc push pop scas rcrb es adc sub cmp loope loopne cltd adc mov (bad) (bad) dec jne cmpsb mov arpl lahf inc lods pop push (bad) popa lea jno jne out add push mov cwtl sbb jp fisubl repnz cmpsl (bad) lcall imul jmp js lods jno (bad) mov xchg stos mov mov stos xchg lret xor xor incl (bad) adc aam jl inc fwait cmpsl popf mov and cmp insl repz outsl (bad) push insl subl call test fidivrl inc outsb idivl sub int3 push subl jg cmp inc jg sub xchg add loop (bad) (bad) (bad) lcall and inc idivl adc loope sub mov fcoml or decl sbb cwtl adc aam push ss jno dec push jg decl or and push jp sub cmc (bad) jmp xlat xor or repnz lods mov sub (bad) outsl jp jp jne mov stos cmp in pop cs out sbb sbb (bad) (bad) jmp lds jo lea adc sub sub and cmc dec ja mov fstpl cli ljmp jno xor iret pop push sbb xchg (bad) stos mov stos js hlt push mov xchg rol or sbb movsb cmc add mov fist jl sub add cwtl adc sub jecxz aam mov (bad) ljmp imul inc add cmpsb adc adc lds pop dec dec int3 inc in aaa cld (bad) decl push jl or lahf sub mov xor lods pop jo popf push (bad) (bad) fcomip lock inc inc inc xor imul repz mov (bad) ja inc sub dec fsts mov push push lods das adc pop loope mov fs adc ret addr16 fs and (bad) ss mov pop jnp movsb call cmc mov testl push inc adc mov cwtl pop inc stos (bad) (bad) ljmp es push push or cmp ror test aad in pop mov or call add mov cmpsb pop mov pop mov aam hlt (bad) (bad) mov sub or into (bad) roll add out insb mov cmp fst es push cwtl out (bad) mov (bad) (bad) lcall dec jmp mov lds push ljmp scas cmp cwtl arpl push mov sbbl mov push sbb mov ljmp pop fmulp fidiv ljmp out sbb push into out (bad) push cld pushl pop cmpsb ljmp ljmp or sub scas cld (bad) (bad) (bad) out out loop and inc scas jle pop insl bound jne fcompl or (bad) decl out sub ss inc xor (bad) (bad) call push scas call sbb aad lahf fldenv cltd and sub repz andb sbb mov inc ret sbb cmpsb mov test and scas shlb and sub cld (bad) (bad) call mov inc mov cmp jns pop nop dec mov pop imul notl ljmp adc loopne dec je pop cmc (bad) decl insl sti cmp les (bad) xchg sub popa les insl pop jg incb cmpsl xchg fcompl dec sub xlat das (bad) (bad) call sbb fcomp test test fiadd pop mov mov pop (bad) (bad) (bad) call fs ss mov popa shr clc nop sbb jbe gs fcomi dec mov jmp push inc jp and int3 ret rcrb ja pushf addb ret xchg push dec cmpsb xor fidivl mov pushf inc sub sub or imul dec lret mov mov repz xor incl adc (bad) aas dec jns shrb sub (bad) (bad) call jp in mov mov push dec imul inc repz dec mov outsl inc in (bad) (bad) jg imul int pop in mov lahf cli fs aaa adc push cmp push dec sub popf das xor rcll xor pop push test (bad) decl push xchg dec jmp pop into xchg fstl loope ud1 out (bad) lcall pushf notl adc mov xorl cmp (bad) (bad) jmp outsb mov testl push add push mov and push lret fist notl (bad) cmpsl js ret cli dec inc (bad) cltd or mov mov sbb adc nop loope call mov mov mulb (bad) and fucomp adc js fstl test ret mov or dec cmpsl add mov xor clc jne movsl imul (bad) (bad) (bad) aas jge cmp lods mov pop push popa cli icebp sbb sub imul incl cld int (bad) (bad) sti stos add sbb mov pop xor cwtl fwait cwtl lcall pop add sub hlt xchg shll (bad) cmp popa and sub rcrb fldenv add imull cli (bad) (bad) (bad) cmp and gs loope cmp cmp (bad) cmp cli jae xor mov call adc inc jmp icebp cmp repnz gs mov (bad) mov addl inc push (bad) loopne jp mov mov jns xor (bad) (bad) (bad) push mov mov xor sbb insb outsl dec into jno lahf or or popf and inc mov inc inc sti sub or pop xor in inc insb (bad) fbld (bad) push call xchg lods stc jb mov pop sbb aam jecxz push int mov mov scas lea pop into js (bad) jge xchg imul sbb mov jg jns test enter xor xlat pop (bad) cmp mov decb ret out cmc insb dec iret mov add jg mov fimul arpl popa pop pop in (bad) (bad) (bad) (bad) fsubrp push fdivl data16 (bad) inc inc pop sbb sarl je insl (bad) fist inc dec adc xorl ss or scas or fbstp fadds aam xchg jnp fadds sbb lcall fdivrp (bad) out mov inc test cld xchg (bad) in sub cltd jne (bad) (bad) (bad) (bad) loope,pt lods xor mov cmpsb push mov popa mov sbb fstpl jp fildl mov pop sbb cmp ret xchg (bad) mov push adc es add decl outsl inc loope je ret and adc mov cmp pop out inc mov lea and inc sub idivl and iret sar out adc or jb lret in dec mov jnp (bad) incl push sbb stos (bad) mov add mov xor pop ljmp sbbl (bad) call outsb (bad) lea mov sahf loopne sub lret (bad) inc mov incl ljmp sbb mov dec arpl mov out pusha mov xchg cmp mov shlb mov pushf rcrl hlt (bad) (bad) cmp in cmp jle sbb fild dec std cltd imul push jne mov push dec outsl push shrl ja push push push test push inc mov (bad) (bad) fildll dec movsb in xchg clc cli pop sbb (bad) int3 sbb das or rcrb out jmp aas inc dec xchg int3 mov arpl stc les push xchg mov stos aad xor (bad) jmp into push jb mov pushf pop dec xor mov adc (bad) (bad) incl jns sub pusha cmp inc stc push popf rcl pop push xchg lcall test mov je mov out jno xlat push mov std jo sahf stos clc (bad) ljmp gs xor aaa adcl into cltd pop fildll (bad) mov ljmp ja push and stos push adc pop dec mov xchg lds (bad) das pop jb xchg lcall (bad) sub pop rorl cmpsb lahf mov in test fiaddl aaa jl aad imul out lods mov cmpb imul adc inc (bad) decl data16 cmp jbe fisttpl sahf rorl in xchg pop movsb call lock cmp cmp std scas arpl xchg adc lret cmc adc mov cli mov fnop jmp inc push and popf cmp xchg shr and (bad) (bad) (bad) fbld dec inc (bad) xlat xor mov mov out std popa popf cltd insb or arpl (bad) call inc jp fs jle fimull inc leave inc dec dec int push inc imul nop (bad) incl cmp xchg xchg lock mov inc xchg pop in lock sub stos jge mov push push stos imulb sti push push or (bad) std ret sub es pusha js ljmp pop push push push dec mov gs jnp inc mov out (bad) sar (bad) inc gs xor jecxz and scas (bad) ljmp cmp jg mov xchg (bad) leave sub or cli dec movsb push std jg call sbb mov jecxz (bad) icebp data16 pop jae cmp cld (bad) call stos push in fstl decb pop mov jg mov and push mov sti aaa ds in rolb xchg or push push add out xchg lahf and test dec or int3 mov into das lcall add and movsl mov xchg add inc lods xabort mov xor mov mov int jecxz mov cmp (bad) jmp xor mov outsb push sub and fs sbb mov xor js xor imul les (bad) (bad) (bad) (bad) mov call sti xor jne push pop fistpl adc push and leave (bad) (bad) (bad) call inc shrb adc data16 mov shll jns (bad) or jp ljmp cli sub jmp push cld fs cli pusha pop mov (bad) aaa das add fadds push fnstsw (bad) cmp push ficom cs mov jmp bound popa xor mov mov (bad) jg iret dec inc xchg cmp pop movsl xor shll mov loope mov imul popa pop xor xchg fwait and cwtl jae jb bound (bad) pushl xchg stc int3 jge ss fnstcw aam cmpl mov sub (bad) (bad) cmp xor imul xchg mov mov repz (bad) (bad) (bad) decl int sub arpl or push and and addr16 jne (bad) (bad) lcall mov jns xor cmpsb and ds outsb mov (bad) outsb sar add sub incb jns in (bad) ljmp cld fisttpl xor faddl and xchg inc cld sahf sub add daa fildll inc mov inc mov inc mov push imul adc dec inc fs cmc data16 xchg sbb incl cwtl push and nop mov mov (bad) (bad) fnstenv inc test push adcb nop stos add (bad) (bad) (bad) decl xchg inc sub stc stc (bad) fwait rolb mov inc dec sub es lcall dec std aas jae push xor dec (bad) imul add loop (bad) (bad) lcall push xchg (bad) xor jge sbb sub mov dec lret push lods pop pushf outsb cmc mov daa pop sub scas iret or incl sbb outsl iret ja sarl xchg imul pop add loope,pt dec (bad) (bad) (bad) jmp das mov cs inc inc lds sub repnz fnstsw loopne (bad) ljmp out lcall push loopne std stos sub loop roll test sbb xchg mov imull es rorb dec mov sbb lea xchg dec sub adc imul sbb pop lods test (bad) (bad) cmp jbe sub rcl xor test loop and or or fisubrl cmp xchg scas mov imulb push push xchg jbe mov loopne (bad) jmp jne jns imul mov push in jmp (bad) pop mov mov mov mov jl cmc stos cmpsb cmp lods lods sbb xchg cli call push adc pushf dec and shr cmp in in xor stos stc ja push fsubs cmp data16 inc adc fbstp xor lods xor push and ret mov mov mov cmpsb sub in mov out mov idiv out mov jo test sar xor stos out cwtl into ds and (bad) (bad) ljmp dec aad add jne pop scas push lcall sub rclb mov sub adc and les test pop and push sbb shrb inc push xor mov loop out add pop inc cld and nop clc add rolb dec (bad) incl ja sahf jg and xchg cwtl pop js lret call (bad) jmp push movsbl sub xchg (bad) (bad) jmp inc arpl insb push xor (bad) incl in jbe jle and hlt xor (bad) sahf dec loope lret ret fstl ficoml gs repz addr16 rcrl in push shr push dec pop xor test mov std (bad) mov mov inc imul pusha xor (bad) (bad) (bad) fistp pushf xchg mov ret dec push or add insb in in and and mov icebp sbb fnsave adc jnp enter test clc cmpsl mov je insl dec ret sub xchg sbb pop insl (bad) lock or ficoml lahf jno (bad) call push out mov shrl xchg adc dec cmc imul lea (bad) ss in stc iret mov xchg xchg pop push enter mov bound (bad) (bad) jg outsb es (bad) repz push mov mov (bad) mov pushf comiss fmul mul mov lds sbb cld pushl fisttpll lcall scas mov (bad) (bad) call mov cld push ret out jnp adc add sub mov cmpsb call and cwtl movsl call shll push adc outsl clc ljmp pop das inc sti dec (bad) add rcrb push pushf jp cmc (bad) incl cs dec xchg jno sbb movsl adc (bad) call ret add jnp daa cmp adc adc mov stos lcall in jmp push scas inc mov (bad) out push adc clc rolb mov scas jp popa or add push xor mov (bad) lahf dec inc das sar loop mov mov outsb mull out (bad) (bad) jmp cli fldpi mov (bad) loopne enter jo mov cmpsl and out (bad) xchg xchg mov scas mov pop mov fcompl sbb sbb inc ret xor mov mov mov mov cmp aaa std (bad) jg clc inc clc push fisubr inc mov lods cmpsb mov xor (bad) out adc call dec mov and jb mov ret xor xchg adc jp into jae push sub cwtl mov xor adc jne popl jmp sbb out dec dec inc ror in pop insb icebp ljmp pop xor push and int3 (bad) jl (bad) mov dec je mov jne or (bad) jb,pn jp mov or xchg or lea sbb xchg add enter mov adc test add jmp (bad) call cmp (bad) pop scas aad pop mov and cmpsl lret (bad) (bad) mov adc lahf inc lds leave aaa sub xor dec push adc mov sbb sti cmc (bad) (bad) (bad) decl in out cmp pop pop xor inc push jno mov push mov (bad) (bad) mov or cltd (bad) push ss les outsb sbb sbbl pop (bad) (bad) (bad) fsubs pusha push stos ficoml push mov test sub popa mov (bad) (bad) mov test xor repz aaa push adc pop stc mov (bad) lcall mov add idiv (bad) (bad) push and mov xor (bad) fldenv (bad) mov lods fistp sbb mov sahf subl mov lea xor mov dec adc adc out mov (bad) (bad) call xor fs mov rcrl scas pusha pop inc push push arpl push pushl (bad) mov adc movsb cmpl sub ret rcrl (bad) (bad) (bad) (bad) xor mov cmpsl xor xor cs push scas lock insl xor push es mov in out xor inc jne mov insb ret mov nop (bad) (bad) (bad) decl clc sub leave stos mov outsb scas dec cmp fistl (bad) lock mov (bad) shr xor iret ret xor xor out bound test cltd jecxz punpckhdq xor cmpsl lcall inc pop jbe (bad) jmp mov fnstenv and lret fsubr daa xor sar jp or loopne mov notb mov lea and (bad) dec adc cmp dec jae pop jns and lret sub out jb dec push sbb imul pop add pop (bad) (bad) (bad) call push leave xchg jb pop push into xchg out mov pop fstpt cmpsl sub mov jno jle dec les xorb movsb cmp (bad) (bad) (bad) sti es ljmp add js je aad or lods popf (bad) cmp das xor sub loopne pop bound in les push (bad) cmp jo syscall inc cmpl add adc jns ss ret lods cmp lock test sahf mov sub lods insl fstpl (bad) daa sbb (bad) ljmp sub xor sub push mov ds inc dec and decl fxch pop cmc addr16 push das movl (bad) mov es popf and sub daa mov and cs pushf sub iret (bad) (bad) (bad) dec fmull sahf cwtl rcr cmp lret xchg pushf pushf mov push jl cmp dec repz insb lods pushf sub outsl cmp lret out push rclb push mov popf (bad) pushl inc xchg stos dec mov dec pop scas xchg das (bad) or icebp imul in push lcall fisttp push push mov xchg pop mov mov mov jbe xor dec addr16 data16 jle cmpsl fpatan call decl sbb xchg cmp aas (bad) mov leave cltd call clc mov jle lahf cwtl pop ja out cmpsb pop repnz push loopne insl xor inc xchg pop mov lret ss sbb (bad) or shrl mov push xorb mov adc (bad) (bad) (bad) (bad) mov dec inc pop lea imul mov lcall dec dec dec js fild (bad) js cs inc jne insl ret addl mov clc decl adc cs (bad) stos adc push out enter incl test push sahf dec popa fcoms sbb cmp fiaddl pop sbb lods subl das jmp das clc (bad) out inc fwait dec rorl or int sub dec or (bad) (bad) call sbb mov enter jnp jae ret cmc inc repz ror inc into arpl push (bad) call dec jp mov and frstor popf in mov movq pop adc add das ss inc lahf (bad) lock fwait pop adc (bad) ljmp in cmp cmp dec or je dec mov (bad) in (bad) mov and fwait pop xchg in lahf or mov jmp jne jg frstor arpl and mov cli jne fsubr lock fcomip push adc mov imulb cld xor stc sarb xchg aas or scas cwtl mov xchg clc mov lea xor pop dec mov insb pop mov mov push movsl (bad) cli mov add bound xor add sysenter pop fdivrs clc sub seta (bad) (bad) (bad) lcall adc adc cmp lods pop dec inc (bad) adc mov cmp jg mov bswap das sub inc lcall sub xor cld pushl test and fldcw pop mov jle add orl (bad) call sub xor movl mov sbb xlat and stos inc incl (bad) xor push add roll lcall xchg mov imul xchg sahf xchg jl inc cmpsb mov movsb inc das inc and inc mov mov (bad) jmp sti cmp mov sub cmpsl push cli (bad) je or gs add jmp jae xor sub lods out int iret mov dec data16 and insl jge test or pop aam adc fstp push jecxz pusha (bad) (bad) (bad) inc add mov sbb add stc xor inc icebp rorl imul lock jmp cwtl mov out xchg dec push mov daa sub ljmp sub and mov xchg pop mov sub lock (bad) pushl (bad) xlat or dec push adc fnsave pop xor ljmp cmpsb xchg add lahf aaa push imul push fildl (bad) (bad) (bad) ljmp aam cmp pop xchg push loopne inc les adc and push and and lods sub outsl push lret push test adc mov fwait mov lock fidivrl xchg cmpsb jns out jge mov fidivr fst jb lcall aad lods xor ljmp or in mov cmp (bad) cmp mov push pop loopne incl push mov movsl stos (bad) add in ljmp jg in ss dec cs arpl push mov xor aaa push sub (bad) (bad) (bad) mov sbb mov imul push lcall (bad) call out xchg aaa jp mull jb pushf pop lret ljmp push push add decl in cmpb xlat xor inc (bad) (bad) (bad) call sub fidivl and pop lock aad pop shrb int3 adc imul ljmp xchg mov or fwait test (bad) call push mov mov mov scas fistpll or mov inc arpl imul sbb (bad) daa add xchg inc clc movsl (bad) (bad) jg das jne repz xor scas ret mov lods cmp outsl adc and mov stos sub mov xchg sahf push cmpsb leave sbb (bad) pushl aad loopne pop xor je dec or add mov jbe rclb adc lcall aaa jle xor scas nop or in cltd fdivs je xchg mov push mov inc jne aaa mov out adc and data16 xor mov test sub jp push sub xchg mov aaa sbb pop test jb imul out cmpsl and in or adc inc cli sub dec dec mov out out jmp bound ja ficom out xchg out (bad) (bad) (bad) decl and mov mov addr16 movb xor xchg xor cmp jmp cmp inc inc adcl mov ret int3 jae jb stc xchg or jnp mov (bad) incl in jbe in jbe xchg (bad) ds stos ret jne,pt call add imul stos push aaa cld jle aaa movsb mov out loopne inc or sub mov mov or sub mov test (bad) jmp rcrl loopne,pn sbb jbe mov repz dec xor ret pop hlt decl jo jge (bad) inc sub mov pop push fsubrl mov (bad) popf jno inc fdivrl jle inc dec stos repnz fstpl inc add cltd cmpsb cli imul enter call pop lret inc push dec fisubr push pop pop mov lret add fcoms (bad) (bad) jg lods inc dec mov out push movsb sub (bad) add arpl bnd cmpsb jp add mov jne lods lea xor std inc (bad) (bad) (bad) decl xlat (bad) adc mov arpl mov int3 dec cmp xchg cmp (bad) (bad) dec int3 icebp cwtl mov insb test mov ss out (bad) rcrb (bad) out clc push mov gs shrl mov repnz jecxz es and (bad) (bad) pushl mov fwait jmp mov mov in jg jbe out mov adc (bad) jmp mov out arpl inc jl addr16 jb pop adc jb lret (bad) ljmp repnz les aam and movsb mov shrl inc sti (bad) ljmp fisttp (bad) loop mov push push dec scas movsb (bad) out or push call push sti (bad) dec push dec test inc loopne outsb imul dec inc xor and add out fistpll ja sub (bad) (bad) (bad) jg fiaddl out add rorb inc mov pop and xchg push pop push imul (bad) lcall push fisubl or pop mov xor rolb outsl inc mov mov (bad) (bad) jmp repnz xchg jmp insl xor xor movsl mov (bad) ljmp mov fmull push fsubs xchg mov mov mov insl outsb int3 ret adc add xor cmp (bad) and incl jmp mov push push jnp cmp cld es xlat sub cmp ja,pt repz out jae (bad) (bad) (bad) jmp addl mov dec ss inc shl mov (bad) (bad) (bad) (bad) cld fisubrl sub divb push xchg imul fistp xor xchg (bad) pushl cld xor adc xlat fcoml pop pop xchg mov fnsave adc push and (bad) (bad) call fist sbb jmp dec add xor push js int fwait dec cld lret loopne cwtl (bad) scas aas mov aaa outsb sub xchg (bad) (bad) jmp dec push lret aaa sbb push mov or ret xor ljmp hlt aam and xor xor xor js cmp pop loope adc clc push out push and notl fistl lcall and xor inc je push pop scas bound jae (bad) mov mov fnop cmpsl sub enter mov gs cmp cltd (bad) (bad) (bad) call sbb push or mov arpl loop sahf xlat jb sub lahf insb dec dec sub call pop gs mov pop test pushf add inc xchg test arpl loop inc push pop lds js (bad) ljmp pop adc dec mov adc pop sbb int outsb pop lods push das mov dec in (bad) fcomip sub cmp adc pushf (bad) fmull jle jb icebp (bad) dec xor sbb push movb mov cmc xor (bad) (bad) (bad) mov adc nop pop popf push ret jl cmp ficoml xorl pop adc es and (bad) call jbe sbb insb es or xor (bad) (bad) cltd icebp cmp fnstcw mov imul scas into cmp lods jg fmuls xor xchg cmc cli loop je cmp insb add (bad) pushl aam sbb test mov jp movsb loop fbstp xchg cwtl pop sar (bad) call daa bound push mov sbb xor or (bad) (bad) (bad) jg jp ret or pop fidivrl movsl lods push imul out mov and inc (bad) ljmp xor lahf sbb and test mov ret dec ljmp sbb mov repz lret add (bad) jg and jb insl jge rcr data16 and lcall adc fisubrl fstpl inc lcall std aaa in fcomps inc lods fwait inc test push add and push inc push xchg fcmovb int (bad) incl sar or xchg push dec lods push mov inc jne cs xor clc (bad) call mov inc inc popa in mov js rdtsc push xchg jmp xchg pushl in cmpb cmp ret xor pop fidivrl mov incl scas ror dec jg out hlt bswap fstpl mov lods jnp pop (bad) mov mov (bad) call hlt mov daa fnstsw fiadd inc mov ljmp ret in xchg dec mov and cwtl jne into fucom pop (bad) adc jl cmc cmp cli sbb lahf jmp add mov xor movhps xor sahf daa shrl outsb lds pop fdivl dec lret sub xor out mov dec pop mull jo pop inc pop (bad) in dec jg xchg add mov ds ficoml mov (bad) (bad) lcall dec bound test pop xor mov mov stos (bad) and push jge es call sbb mov xor push lret xchg push xchg fbstp (bad) ljmp mov pop in cmpsb (bad) cmp stc popa sahf mov roll cmpl daa dec mov cwtl mov (bad) call jl lret popf icebp js mov popf pop scas lds xchg adc mov xor mov sub addr16 and cwtl arpl push cmp (bad) decl sub rcll jbe xchg pop push int3 (bad) decl mov inc fs jae lahf add jb xor out out in call fnop iret mov insl and push addb lahf (bad) incl rcrl pop lahf loopne mov lock std sub (bad) pushl mov add pop mov sarb lea shrl mov adc pop leave and sub sub ret adc cmpsl call (bad) pushl cli daa call mov jmp paddb mov imul mov js jns push push lods (bad) fidivrl clc sub aas sub dec in or pop rcll cmpsl popa mov pop pusha int adc cmp jg idivb xor iret inc mov je pop int3 lds inc inc popf mov xor js (bad) (bad) mov stc lcall fsubrp insl aad push mov jno (bad) lock scas sbb lret pop idivb cli add add adc scas leave (bad) fcomip jmp test ret pushf xlat (bad) cltd nop test jmp dec (bad) mov sbb (bad) fcomi js mov cli and jb jb xchg cld mov mov jae inc call adc nop in jecxz subl (bad) (bad) (bad) pushl adc mov adcl push sbb (bad) mov sub sub bsr clc (bad) sti xchg mov or test subl add cmp andb decl inc sub and mov xor jmp lods inc pop clc sbb or and stos add lcall (bad) cltd addr16 (bad) (bad) (bad) mov xchg cmpsl push imul cmp sti icebp dec dec xchg mov idivl dec (bad) (bad) (bad) call cmp add sbb push xchg dec (bad) cwtl and push mov push mov push dec lods bound popa std (bad) ljmp dec pusha mov cwtl aad mov pop jg test jo xlat push and push movsl fidivr outsl incl xor jmp sub movsl mov adc sub fstl pop outsb mov (bad) (bad) (bad) (bad) lcall pop add mov out out (bad) out sti loop lock popa pop push data16 mov jo (bad) (bad) push mov sbb outsl movsl xchg (bad) sub mov popf mov mov mov cmp das mov or aam mov mov insl (bad) (bad) (bad) call mov cltd scas sub cmp xchg push cltd out jmp sbb mov sti stos pop scas dec jecxz sbb and test scas mov push adc (bad) fisttp pop imul enter mov (bad) outsb xor lock xor call ljmp insb imul mov mov popa xchg push (bad) (bad) ljmp mov arpl icebp mov test or lods aam lret out cli (bad) (bad) fiadd les lret lea dec aad daa pushf sub xlat insb mov (bad) scas clc mov mov or dec add (bad) lcall popa in test push jp push test sbb aaa mov decl scas add scas lcall pop push out loop stos mov je mov in (bad) mov cmp and dec es pop movsl push (bad) call lods loopne cmp jno xchg scas insb xchg ret lea aad inc mov and (bad) incl cmpsl jmp fimul push dec out test out call (bad) push popa mov xchg jge xlat jle outsb mov dec dec adc pop xchg jno ret pop lods push (bad) mov jbe hlt and arpl int in fnstsw jmp cld mov sbb jbe jl inc and fidivr dec or push out in sbb and in scas cli ljmp xor rorb dec insb aam and xchg ja mov xchg icebp mov test ja repnz test and sarl inc insl dec cs and mov lahf (bad) mov mov fsubrs xlat inc hlt lret adc call lret inc mov inc ja mov (bad) (bad) decl out push daa popa adc sti test xchg mov in cwtl inc hlt ss popf (bad) (bad) (bad) (bad) ljmp les mov push icebp movsb loop into mov jnp cwtl pop xchg pop push hlt cmpl or (bad) push mov inc jne inc sub lds xor ja pop mov cmp aam jge cmp pop mov daa mov push scas jmp xlat jg test sbb mov jle jp push cld (bad) jg dec sbb inc jmp dec push or add in call fidiv dec jo imulb push out jns je lods fildll loopne pushl pop jo stos add xor jb mov incl (bad) jle mov add popa dec (bad) pushf lods call push dec mov mov inc imul div scas cmp jae inc mov (bad) (bad) jmp lret in inc mov add fbld dec pop jno jne movsl testl incl repz xor sahf ljmp into jae jo (bad) (bad) jg icebp pop repz out mov jg xchg sbbl (bad) pop insl mov adc arpl mov imul xchg xor addl daa cmp xor imul cmpb shlb xor addb lahf std aas xchg pop add push addl subl incl iret lahf mov ucomiss cmp repz xor in dec (bad) fcomip (bad) fstpl mov sbb (bad) cltd pop add imul jae sub decl mov lahf cmp adc inc and push iret pop mov dec fdivrs xchg iret (bad) je cmpsb out and outsb pop pop pop mov push push pushf lods xchg out sbb hlt inc out mov cli mov fwait mov dec and mov in testl push or (bad) decl imul jb ja mov and pop mov xchg (bad) incl mov push jb push sbb xchg push pop daa cmpsl cmp (bad) (bad) mov sbb cmp test add cli or mov push or jnp sbb (bad) stos call ss pop test enter push push das jnp xor (bad) pushl cwtl fs and mov test (bad) lret loopne sub (bad) sahf xchg xchg ljmp inc cmpsb std flds lcall cld pop movsb loop (bad) call fmuls inc add push fimul hlt inc scas xchg or (bad) (bad) mov jb jns mov dec shrb dec mov cmp inc lock or test push mov out xchg inc out out inc in cmp add dec jl (bad) leave imul sbb push xchg pop push jbe push inc cmp faddl (bad) decl cwtl (bad) mov mov push repnz scas dec dec stc hlt or (bad) (bad) (bad) jmp inc sub cmp movsl cmp sub inc out push jb jecxz imul (bad) call ret loopne cmc out sahf mov mov sbb inc mov pop lret mov mov call outsb pop in es jge cmp arpl lods jg,pn push pop jl cld (bad) (bad) (bad) dec mov pop out lds mov pusha sub mov sub mov imul (bad) pushl clc push pop cld and stc rcr pop mov mov dec outsb mov daa or mov (bad) (bad) (bad) lcall cs jns inc insb or loopne sub push loope push popa mov jle pushf add (bad) and mov insb cmc cmpsb call cmpsb pop xor jg addl lea repnz stos mull fidivl lods mov insb pop dec inc outsl lcall add lret cmc lcall inc sbb pop fdivs sbb test fwait inc mov out mov std scas mov into mov sbb push (bad) (bad) mov cltd xchg jb adc in mov sub xor iret aas js (bad) adc lcall xchg rcrb hlt pop out je jp cmpsb add cmp test mov mov (bad) jmp nop popf jecxz sub movsb or push pushf xchg inc cs outsb out push stos xchg mov scas cli call xlat and mov out out test bound out nop test lock pop add pushf movsb dec mov lcall movsl incl fiadd and mov xlat std push in xor pop cld mov incb xor cmpsl bound pushf imul ret xchg lret stos mov jnp ss mov xchg (bad) call adc cmp jbe dec jnp fdivrs rolb fadd cld (bad) lcall xchg push ret cmp je inc into mov push lahf xchg mov aas adc mov xchg adc in (bad) (bad) lcall js fcmovbe cmpsb (bad) and jae gs xchg xchg adc mov out stc (bad) add dec or test mov test xchg xchg xchg xchg inc xchg incl iret mov sahf scas jae mov ret mov int insl mov jae jbe push fdivr (bad) dec aam push inc fwait inc cmp clc (bad) jno sar (bad) cmp dec pop lret sub or inc shrb clc dec fs push stos push les lcall mov in mov mov out and out jl (bad) (bad) (bad) (bad) mov imul outsl call movsb pop mov pop rcrl sbb (bad) mov jg into dec clc xor in xchg dec daa dec movsl in call sar nop inc jl push inc cltd (bad) sub push fdivl lods mov jae cli xchg je in je out out dec out add stos (bad) (bad) (bad) mov jge and jle jmp jns push stc mov pushl cli pop test cmp xlat jae cmp ret xlat (bad) call (bad) sar adc push std adc outsl (bad) lret (bad) mov aas pop pop push ret (bad) repnz or lahf lock (bad) (bad) lcall cmp cmp jg push (bad) in cmp pop xchg addb cmc hlt lods xchg adc fwait cmp and not int3 push imul or cmc incl add cmp fldcw mov pushf mov clc or jns inc mov mov and aaa add xchg pop jmp mov pop fcomip ljmp xchg scas iret sub in les mov xor mov gs sti xor or nop outsb mov insl adc adc push mov sub and sbb xchg adc sub out bound pop lcall mov repnz adc cli decl insb cmp or call pop xor movsl (bad) aad notb fidivrl mov bound jo ljmp (bad) (bad) aas ss repnz mov out adc mov xchg pushf sub popf aad (bad) jae jmp test movsb mov fisttp push sub or jle cltd mov sub (bad) mov jo sahf xlat fwait js rcll jg add imul xchg dec (bad) ljmp push jg mov scas add mov aad hlt (bad) incl (bad) jecxz hlt mov mov in je fstpt and push sub (bad) (bad) (bad) (bad) jnp rcrb dec push fisubrl test stos lds push test mov jmp push fimul (bad) inc pop push sbb dec mov (bad) decl outsb cmpsl pop mov xor clc fstpl pop mov int jne adc sub jmp mov ja adc lock add sbb (bad) (bad) mov jle aam in daa jne les mov inc fldl clc decl push adc scas or aad insl push fwait cmp mov (bad) ljmp (bad) mov jg out adc (bad) mov xchg in mov sbb xor insl jb icebp ja xchg xor dec (bad) push jg cmp push sub mov pop jo lods loope xchg roll fcomip xor mov cmp addb adc pop (bad) frstor (bad) jmp stos xchg mov sub enter push and decl stos dec movsl aam inc mov fscale mov push aad scas mov test cmpsb sub test clc nop push test dec sub lcall push jmp (bad) lea (bad) (bad) jmp mov dec push jp jne orl fst mov sti adc push dec fistp test mov (bad) ljmp pop mov or push mov fwait cwtl mov inc push xchg mov (bad) loop mov pop lret shl mov and hlt inc (bad) imul sub in (bad) lret les in (bad) (bad) ljmp jnp dec jnp xlat ja ret xchg loope cmpsb cmp push loopne adc (bad) jmp adc sub neg (bad) mov addr16 mov jmp leave jp (bad) (bad) (bad) (bad) in cmp dec je outsb les xor cmpsb xor aas hlt enter (bad) (bad) (bad) call inc mov xchg mov xchg iret xchg xchg fwait jb xchg cmp subl icebp push mov cs sbb ret push push pop loopne (bad) ljmp sar sbb push test ja cmc inc in xchg in inc sub scas pop push add enter fcompl int3 (bad) call dec lcall (bad) aas sbb mov leave sub (bad) (bad) (bad) jmp push out sbb icebp dec scas xor pop out sbb in lock dec fidiv dec loope dec push das sub in aad mov xchg outsl adc jge test loopne mov sbb jg mov adc push dec shlb stos push pushl mov cmpsb and jns lods lods cmp (bad) out nop icebp ss out pusha mov in push lods xor fldln2 xor (bad) lcall das sub cmpsl rcrl test inc mov scas sub pop jo call xchg mov aaa inc cli loopne ljmp jo mov mov adc ljmp daa adc or loop inc outsb iret mov (bad) (bad) (bad) decl movb (bad) sarl xor or pop lods inc sub (bad) xor stos mov decl popa jnp add sbb pop mov push clc push ror pshufw push cmpsb data16 jecxz pushl in and sbbl add popf cmpsb aad mov (bad) mov mov mov lds jne xchg test (bad) stos dec xchg mov (bad) (bad) (bad) decl pop add movsb push xchg add shll cmpsb inc das outsl js fucomi pop cmpsb lcall sbb pop sub repnz add ja xchg test inc std dec add icebp sahf es mov push das jb adc cmpsb sbb xor mov fisub arpl (bad) (bad) call push loop mov stos cmpsb hlt fiadd aaa scas jns fist (bad) mov ljmp in sar (bad) inc dec pop inc iret add jp inc xor mov adc dec imul mov (bad) (bad) (bad) (bad) clc sbb pop cmp cld negb hlt ss jnp inc jae xlat ret (bad) (bad) ljmp js shrl outsl inc imul mov dec mov setbe movsb sbb mov ja mov shr dec fisttp inc push pop lods xchg mov clc cmpsb jmp inc mov dec dec lcall (bad) (bad) mov lock out stos and jns push (bad) xchg loop popf test (bad) cmp and or mov (bad) (bad) (bad) jg pop rorb mull and dec mov pop adc xor popf push jle jg call sub out jge and pop out mov sub xchg (bad) call (bad) test xlat popf outsl enter jl xchg inc dec xchg dec arpl pop dec incl lock jbe push fcoms bound outsl gs mov or push add (bad) out add stos mov jnp adc loope imul xchg cmpsb addr16 (bad) mov inc insb push (bad) mov rep loop sbb inc cltd ror dec (bad) in imul cmp xor mov xlat scas lds jecxz jp divb inc rcrl jne sti adc (bad) (bad) (bad) aas fcomps leave cmp loopne (bad) sbb das (bad) sarb adc nop pop ret jb lret fiaddl cmp or jl out dec mov xor dec (bad) out mov sarb cmp fwait jbe hlt jmp adc in mov mov pop pop inc inc inc (bad) add pushl das sarb jmp cld imul lock decl sbb add cmpsb xchg lods subl mov outsl std and push xor adc pushf shll or mov out rorb cmpsb push xchg mov bound lock adc sub lea (bad) (bad) imul repnz test inc mov addr16 (bad) leave popf mov adc (bad) mov movsb jns adc xor pop add ja lods mov stos pop jle mov cmp adc mov sub scas lds aam adc jecxz jb pop bound in mov sub mov xchg add int3 rcll (bad) (bad) mov mov ret mov xchg sarl (bad) jg neg shl (bad) lock lock lods jns (bad) (bad) (bad) inc jnp in jge mov jns push jbe mov inc pop xor test pop fimull (bad) pushl cmpsl xchg mov cmp cld fmull rcll adc lcall dec push cmpsl in lods mov lahf push push lcall (bad) outsb adc mov lret out les and (bad) jbe dec adc cs out aad scas add std sbb and divb xchg sbb cmp add sub sbb sub dec imul (bad) ljmp mov xchg es dec out jge and mov pop popf add (bad) (bad) (bad) incl xlat mov movsl mov push push xor out mov hlt add (bad) jg mov bound jnp cwtl scas dec push dec sub cmc aad or xor jg inc push mov sub daa pushf popf sub movsl and lcall nop int3 push inc xor xchg add or add sti fnsave fdivrl outsb inc adc pop add jg push xor mov push (bad) (bad) inc leave (bad) mov mov mov test (bad) jmp mov lret xchg and shrl push push cli in movsl rorb icebp shr clc mov dec es sti loopne pusha mov push mov add aaa add xor aad (bad) (bad) (bad) mov hlt pop lcall add mov adc xor lcall add adc mov ljmp mov xchg pop sub ljmp ljmp lods pop xchg dec fisttp or mov mov outsb (bad) jne (bad) (bad) fild popf data16 pop je cs mov sub inc mov mov (bad) (bad) pushl bound push push adc sub mov adc xor pushf push inc jge scas hlt aad imul lds ja cli mov clc repz cwtl jne aad push pop lock jg movsl jne lods xchg or cmp lods jp push xchg aaa jne mov call (bad) flds loopne adc pop leave sarl push sbb mov addr16 scas jecxz je jno cmp (bad) in push mov mov movsl ljmp and (bad) notl loop clc data16 adc sub pop sahf dec (bad) mov clc xchg jg lcall int cmp add daa stos test push dec or mov mov faddp adc loop lods (bad) adc inc sbb (bad) fucomp xchg stos xchg adc and iret adc mov (bad) xchg sbb pop mov stos sbb xchg stos icebp (bad) aad sub test loop xor mov inc add (bad) (bad) jmp addl dec and adc adc mov (bad) sbb (bad) call rcrb movsb mov xchg movsl outsb stc mov (bad) jns aad je dec (bad) (bad) push (bad) rorl xor and dec repnz cli rcrb add mov in (bad) (bad) out push xor out sbbl dec in sbb icebp (bad) mov (bad) (bad) decl (bad) test mov pushf dec leave js addb inc sub push xchg das and pop sub pop jno es (bad) (bad) (bad) ljmp loop out add test fildll sahf xchg adc mov add test stc jbe (bad) (bad) lcall rorl mov int in bound rolb ljmp ss movsb and pop mov aad mov (bad) mov das mov (bad) or sub fsubp dec out and (bad) (bad) jmp push xor jp insb int3 into or fisttp rcrb or or mov and into movsl push stos dec pop call in outsb mov inc bound cld test mov adc popf inc sbb daa mov popa jge (bad) cltd mov out push ss movsl xor sti jecxz and push cmp lods push cwtl out add loope sti (bad) (bad) (bad) inc dec (bad) pop outsb inc xor jae xlat push dec sarb push adc (bad) jl cmp lods push pop icebp jb nop loop out js sub jmp sub push pop test sti mov and and out mov (bad) (bad) (bad) decl mov movsl add and mov jno xchg or adc decl pop repz scas dec push dec sbb cmpsb jle lret adc movsb les mov and outsl sub xchg dec sub je into push cmc (bad) (bad) ljmp loopne push xor jb mov xor (bad) popf roll jb jmp movsl lock jmp stos cld movsl xchg add pop testl (bad) push cmp sbb sahf movsl xchg fistpll (bad) rcrl stos cld loopne add ja sti cmpsb dec jmp scas (bad) mov xchg fldenv and aaa mov lds and ja lds rclb xchg (bad) dec subl sbb cmp lods mov add in (bad) lods fimul xchg mov icebp dec clc (bad) in fst ss sbb (bad) std out add inc mov clc cli add enter mov jmp sbb and push daa inc scas cli and lcall in cmovp dec cmp test jo adc lock sub test cli (bad) ljmp repnz pop repnz adc lcall mov sbb xchg fcmovbe xor sub scas sar loope mov mov (bad) pop fcoml mov pop dec iret mov xchg pop xor (bad) (bad) lahf push pop mov stos and out test add sub test push test hlt rcrb (bad) jg xor jb adc fmuls (bad) cmp adc and inc imul into and stos mov push call (bad) (bad) incl add popl sub push fxch pop adc jmp fist mov shr dec and (bad) (bad) (bad) call pop xchg xorl adc xchg add in xchg les mov xchg push ljmp lret cmp cmp mov mov lahf push je test (bad) (bad) (bad) cmp mov test test div loope in pop and stos adc (bad) (bad) call pop shll mov xchg mov cmp pop jne out aas divb jle jnp add add movsl je fimull scas mov cmpsl fstps sbb cs leave shr shrb push hlt inc cmp mov mov mov xor insl and sahf gs icebp cmpsl xor add xor fldt mov push pop fldt mov ret (bad) (bad) pushl jns shlb pop into mov push arpl insb sub (bad) (bad) (bad) jg (bad) jge cmpsl pop clc data16 xor in ret jg int3 lahf cmp imul (bad) (bad) (bad) (bad) sub cs ja in out (bad) hlt mov jle push insb and (bad) mov dec jnp pop in and jecxz or mov scas cmp iret (bad) jmp sbb push mov enter call daa mov outsl lods adc cmc (bad) (bad) (bad) (bad) mov lret adc je jp into dec rorb push xchg mov (bad) sbb fidivr and into cmp push pop popf fs pusha jnp call or pop add notb stos pushf decl add lods iret lock les mov dec clc cmp xor adc sbb test loopne xchg mov inc jmp jae lock push loope sbb lahf dec and mov xchg mov pop into dec dec int3 ret les push mov lea (bad) mov mov dec jnp les adc arpl fisubrl jg jnp shl js (bad) mov add mov cmp (bad) (bad) (bad) ljmp fnop and jmp and nop out fstl cltd loop and pop pop pusha (bad) mov dec or call clc pop ds and or insl dec fs incl out xchg sub fdiv cmp mov inc mov outsl dec inc mov std insb neg nop pop mov lret cmp incl xchg xchg xchg lea push and lea decl sbb imul jmp xlat add (bad) ljmp out iret cmp (bad) arpl (bad) pop addr16 pusha jo inc addl xor das mov call int3 add fwait adc push cld sbb sbb (bad) (bad) cld nop sbb pop jp mov insb movsl cmp mov aaa or push ljmp fidivrl mov (bad) push mov xor cwtl arpl fbld mov rcll fidivrl pop outsl clc or push jne jnp js dec das adc adc fwait lret dec (bad) call (bad) cmp fucom adc loope jne cwtl xrelease pop imul stc and stos (bad) (bad) ljmp push jo insb test dec icebp aad (bad) clc movsl xchg sbb pop mov push addl (bad) xor (bad) jg add out adc sbb loopne mov adc pop inc push (bad) (bad) jg mov fstl cmp mov mov jp mov push incb scas sub pop outsb lods hlt mov lods sub ss jb mov jne cmp ja shlb arpl (bad) frstor push fwait mov dec xchg jo shr ja ret mov mov (bad) (bad) decl inc rcrl rcll xchg dec out push sarl cld (bad) (bad) push (bad) xchg pop mov (bad) (bad) out adc sub cmp outsb loopne mov mov xlat lret xor mov jg jmp idivb inc inc dec mov lcall adc (bad) loope mov fwait xchg fidivl out push mov and add cmpsb mov push test mov leave push or dec jo insl cmp inc xor mov pop or (bad) (bad) (bad) xor sahf out mov (bad) pop addr16 push ljmp adc mov bound add addl and adc jnp (bad) xor fdivrs loope ja lret es pop jmp sahf or mov and push jb mov xchg fsubrl add xor mov lcall lcall (bad) (bad) mov stos push (bad) or dec pop cmp add aad testl mov sbbl push pop (bad) (bad) ljmp mov cmp cwtl pop sub dec and cs mov sub adc ds sub stos cmp (bad) (bad) jg pop jp movl mov inc jecxz or pop mov (bad) (bad) lcall mov decb fiadd lock call movsl adc iret popf roll pop mov push aad movsl bound repz jle push ljmp and push jno jl xchg mov inc jmp jb sub cwtl scas in js jmp sbb (bad) (bad) decl mov stos adc fwait lock lods push sahf lods pop inc sbb sbb inc mov leave pop sbb stos addb (bad) mov push rolb add cwtl push mov (bad) (bad) ljmp int3 mov imul pop add jecxz or xchg push push push stos push fldl add sbb ljmp cmpsl leave xor cmpsb pop imul dec ret jge rcrl lret push xchg decl movsl mov mov lods mov incl sub add adc pop movsl pop jae and fisttpl in popf mov jmp dec outsb and btc inc cs hlt jo adc (bad) (bad) cmp mov dec inc mov xchg pusha mov jg dec dec and lock decl stos push xorb jno xchg push cmpsl or push (bad) (bad) lcall int3 or mov pop adc cmp add notw inc jo sbb mov sub xor cwtl push into (bad) loop out icebp (bad) mov mov or nopl sbb dec incl (bad) fisttpl addr16 test (bad) xor pop outsl (bad) cmp pop test jae movsb dec enter xor sbb stos mov push hlt pop mov adc or adc jb cmp add movsb pushf mov jnp scas repz pop jnp test xor (bad) (bad) (bad) lcall sub popa sahf cmp push stos dec out jne xor jmp lock (bad) pushl (bad) jp mov test xchg dec push or int scas pop movsb mov mov lods xchg sbbb (bad) (bad) jmp mov mov xor cmc fdivl push push fcomip (bad) lcall mov aam out fs dec mov outsb inc jg jbe cwtl mov jl mov jbe sub xchg xchg xor (bad) incl call mov mov jns call decl and call test subl mov mov (bad) ljmp add leave (bad) hlt aaa sbb iret sbbl xor sub mov sbb mov mov ret rclb scas (bad) decl clc mov int3 jbe scas in adc push (bad) psubsw not arpl insb xchg ss xchg lods (bad) (bad) jmp sub pushf out sbb dec jae jbe push mov sub push xchg scas (bad) (bad) (bad) jg mov imul loop insb dec imul scas dec (bad) sub stos call lcall pop test push lods scas mov jecxz xchg dec shll (bad) (bad) (bad) (bad) (bad) mov jo stos jno push fcomps xchg jmp cmp sub fiadd (bad) mov xchg mov fdivs fnstsw ljmp add or add clc jg cli icebp adc in mov cmp loope mov addr16 fstps fnstsw pop jmp roll mov decl jecxz sub bnd mov and imul cmpsb int3 mov jg inc out in lds mov leave es aaa inc lods clc jbe loopne gs movl sti fidivr cmp rclb nop pop cmp dec idivb cmp cmpsb push xor (bad) ljmp (bad) add sti or into in and sbb addr16 mov jo dec fdivs fs movsb pop push aam lea ljmp sbb cmpb xchg mov cmp lods stc js (bad) (bad) call sub xor outsl inc mov dec push mov and mov ja les sahf push fcmovnb xchg imul vpaddd (bad) incl rcrl in push out cld daa push sbb push cmp loopne and and cmpsl xor stos call adcb stc push xchg xchg ljmp (bad) (bad) (bad) inc frstor cmp repz push std bound and jmp sarl (bad) (bad) (bad) ljmp cmp pop xchg push popa inc icebp xchg sub xor mov lahf xchg mov int3 rcrb jmp js xchg pop (bad) xor dec (bad) mov nop (bad) lds hlt stos (bad) dec lds mov addr16 aaa loope fisubrl sub jg loope je lock stc (bad) js (bad) incl sub add jmp sar sub add jbe test rclb mov mov pushf (bad) movsl out aas cmp pop data16 scas xchg adc inc hlt lret inc mov (bad) (bad) out clc (bad) cli pop out hlt into cld mov aad out pusha jbe fimull test cwtl adc fnop outsb mov push sbb je cld sar (bad) ljmp fadd bswap pop pop hlt add popf push sbb sub push (bad) jg fcom mov (bad) loopne lret sbb inc clc mov lahf pop fstps decl out iret repnz test gs xor stos ja xchg and bound (bad) ljmp sbb shrl int cli inc in repnz (bad) out add pop outsb popf sarl jg fbld shr gs sub xor pusha jl dec sbb ds andl jp ror add je inc aad sahf or push in xchg cmp push roll js sbb sti (bad) (bad) (bad) jmp insl jne lahf daa cmc cmp aas sub mov cmp lahf push into xchg (bad) xchg jle jg jnp xor jecxz or dec xor fdivs sub push mov xor (bad) mov pop cmpsl ds (bad) fnstenv loope (bad) decl xchg mov adc pop push iret mov adc out (bad) mov mov sti out jg dec clc mov inc js jle cli xor lds dec xor push movsl mov dec ljmp or adc lods jae fisubl add jg (bad) pushl pop push rorb daa sbb fwait mov lock loop cmpsb sar (bad) ffreep call (bad) and adc or negl push mov sahf (bad) decl xor int mov inc and xchg subl mov (bad) enter or aaa popa lcall ret mov inc jb and call adc nop (bad) pushl rcl xor or jnp stc shll (bad) ljmp test xor cmp push icebp and xor jecxz mov push xchg sbbb test xchg popf ficoml or lret mov les push adc iret (bad) jg decl jne mov mov mov xchg jbe dec repz idiv das (bad) xor mov (bad) push bound data16 push cmp (bad) popa out dec stos lods sbb leave cmp and (bad) (bad) pushl adc dec data16 mov mov loopne nop test (bad) mov nop adc cmpsb sbb ja test sbb sar pop insb mov imul (bad) ret fistpll mov cli imull pop in out mov ja (bad) (bad) mov cmp jne pop xchg (bad) or rcrb sub mov sub push jg (bad) stc outsb xlat mov dec adc mov push xor jp movsb fs (bad) lcall (bad) and xchg (bad) int aad mov xchg inc (bad) out stos and or (bad) decl or mov movsl push aas push lcall outsb or mov fisttp mov lret ret addb (bad) sbb popf imul mov jo sub jns addr16 ja (bad) (bad) decl incb imul les daa pop stos mov push push sub (bad) (bad) call sub jne ja cs pop repz jbe sbb mov (bad) (bad) jnp jnp stc push fwait mov (bad) lret imul (bad) sub aaa (bad) mov mov (bad) fisubr aad pop nop add pop and (bad) (bad) (bad) cmp fs cmp xor mov sub inc mov xor (bad) (bad) (bad) lcall push imul cwtl daa mov cmc test push inc stos notb (bad) (bad) (bad) ljmp stos stc add stos test in add cmp mov cltd (bad) (bad) incl sbb rcll adc mov mov cld bound (bad) (bad) (bad) jmp loope fstp dec cmp push mov pop jb shll jge jl call (bad) or push cwtl out (bad) adc push jne mov cld (bad) cld rclb add (bad) in mov pop mov cltd or std cs sbb repnz mov es (bad) loop mov (bad) (bad) (bad) decl cmpsb cmc fnstsw cld add iret int fildl pop mov jb and in (bad) out mov sub int3 push cmp adc pop cld (bad) icebp mov nop mov aaa add test xchg push jmp cld sbb mov jb cmp (bad) out mov sub fwait lcall cmpsb push orb outsl incl ja fst or mov mov scas mov enter cld (bad) (bad) jmp stos dec aas jle mov movsl push (bad) fnstsw push out pop imul ret mov mov xor pop loop xchg mov je aaa add (bad) jg ljmp (bad) cbtw push jno mov bound js test mov popa mov (bad) decl push mov (bad) and sbb inc xor andl sub (bad) (bad) (bad) mov addr16 sbb cmpsl outsb leave divl movsl jns imul cmp mov or ljmp repz mov push fdivrp (bad) (bad) jmp fdivrp mov mov rcrl stc add loop sub mov xchg adc pushl enter stos sub test mov stos ljmp add pop add ljmp and add xchg (bad) cmc mov (bad) (bad) ljmp push loopne jbe mov (bad) movb fwait jmp loop xchg or (bad) lcall push xchg xor sbb call loop pop loop xchg data16 (bad) cmp cmpsl cmp subb mov cmpsl mov (bad) mov mov inc dec cmpsb sbb mov xchg (bad) and (bad) (bad) inc pushf xchg add jge sbb dec xchg jge ficompl mov add movb push jle inc mov call sti ljmp push and mov inc jg jmp lret add cmp (bad) fcomip decl sbbl mov and mov das adc sub mov or idiv (bad) fcomip and lea xchg out xor cwtl xlat jle call ja dec scas inc xor outsb mov pop xlat xor mov (bad) call (bad) (bad) (bad) jg (bad) stos popf pop loope imul movb sub mov faddl test push lds (bad) (bad) mov xchg pop lea enter in mov add push (bad) popf dec lret cmpsl add inc (bad) (bad) ljmp ljmp xor sarb imull gs cli cli popa push (bad) jg sbb jbe mov xor mov mov push pop loopne incl cld aas inc push and loopne lea scas arpl add shlb js (bad) fisttp fcomip mov mov mov cmpb (bad) (bad) std lods cmp int3 in int3 rcrb mov scas jmp sbb push jbe dec sub or (bad) dec or lock dec imul cld push fs adc (bad) aas (bad) xchg dec lret or pop xor imul push js pop jp aas jg aam aas push pop hlt insb clc hlt (bad) jl jp ret jle push pop mov pop (bad) rorl imul (bad) push pop fcomip xchg lss stc enter xchg xchg add lds scas imul test mov push mov pop nop push mov jp bnd rorb push out adc jp lcall cld push addr16 sub push ljmp dec and pop (bad) (bad) (bad) lcall lock xor xor jmp stc inc addr16 les jnp jmp clc mov (bad) (bad) (bad) (bad) jp add jo dec (bad) lock xchg imul roll bound (bad) (bad) ljmp std shr dec mov in aad mov sbb stos int movsb pop mov add jle rcrb insl rcrl into mov or rol xchg fist jg mov mov mov lahf lahf negb (bad) stc pop test rcll dec lds (bad) push (bad) mov cmp frstor rorl mov popf jp call cld repz (bad) jo sbbb repnz clc mov mov cmp test or sbb ds ficom sbb lcall call repz (bad) dec in gs ja repnz adc std jle icebp (bad) (bad) (bad) (bad) jle pop mov leave lds int xchg cmpsb push push jmp jg loop mov sub lock inc sbb jp mov lret (bad) (bad) (bad) mov adcl jo push jecxz addr16 inc push pop mov lods push mov jnp jns sbb mov stos incl or int cmc jp inc jns mov push sub cld int3 pop scas jl les addr16 mov test xor xchg push data16 add mov pushl dec dec inc test hlt mov lahf popf lds data16 cmpsb push cmp negl out xlat adc jmp ljmp decl sar xor adc in mov mov pop push outsl mov mov lds ror sbb clc pop iret ficoml fildll mov mov and imul xchg ret insl pop ljmp fiadd aaa sbb cld inc out clc ficompl or push sahf out fwait loop lret push pop mov rorl adc push les push xchg dec adc dec cmpsl mov call mov or (bad) mov fildl (bad) cmp adcb xchg ss push push dec int mov out cmp ljmp call jb and (bad) cmp adc mull inc inc (bad) mov cmp push mov pop loop test push pop or (bad) incl icebp dec and push cwtl cmpsl dec push test ss ja jnp ss (bad) lcall es ljmp xchg out rorl test and xchg je (bad) xchg adc cmpsb cmp ja inc adc stos push cmp test imul add imul les call cld pushl inc inc fdivrl or aaa gs (bad) push push imul lcall arpl cmpsl mov mov inc loope das jbe jne mov adc (bad) outsl pop jbe icebp add (bad) fldenv ljmp sub das jno imul int3 enter mov js sub sub and (bad) decl lods ja pop xor (bad) aaa rol mov dec cmpsl push xchg push xchg fnstsw loope (bad) lcall lods sub call out inc sub dec shrb xor into xchg adc faddl push leave (bad) push pop jbe enter incl jg xor cmp je movsb roll jno mov (bad) (bad) fcomip (bad) cs cmpsb or mov rclb pop mov movsl incb or and lcall sbb ja push stos pop ret ljmp (bad) (bad) jmp call mov xchg jae lock inc movsl cmp jl sub cli adc es jl mov add bound mov ret jb push (bad) mov aas call cld pushl mov mov scas push ja mov lcall scas in jp (bad) (bad) decl insl mov push push mov popf push add ret jno pop clc and sub xlat fucomi cli outsl lds inc sub mov push (bad) das ss lock mov icebp int3 cs leave inc (bad) lcall testb jbe ficom mov sahf lahf cmp div stc mov loopne,pn xor mov cmp stos (bad) xor lock lcall mov inc mov aad mov mov (bad) decl and push test jnp cmpsb mov rcr push sbb loope push jno and cld (bad) (bad) call popf sub xor jmp fstpl adc (bad) push add mov dec mov int ss fidivrl call mov push icebp jb push negl cmp (bad) mov jp es scas sbb mov push ja mov lahf test fidivr inc cmc (bad) sti sbb or push add push inc push dec add cmp jmp sbb shlb xchg stos test xchg mov dec scas sbb outsb xchg inc xor pop icebp pop mov aas popl mov and (bad) jg sub daa push adc (bad) aas addr16 cs nop dec jo push (bad) (bad) lcall and cmpsl and dec fsub movsl push test sbb out sub loope mov inc sub mov in negb jne out sbb jbe jl mov xor jg jmp pop sub imul ficoml lret mov jb push mov nop mov mov fisubl test add cwtl xchg repnz push cmpsl add (bad) jg sub cwtl jecxz das sbb or cltd rcl add imul (bad) (bad) (bad) pushl push xor cmpsl push mov data16 repz popf jge loop in cmp dec test call and sub inc dec (bad) xor setbe cs adc mov mov push enter fsubrp fsubl mov add decl jbe xor cs ret dec (bad) (bad) mov (bad) mov dec das mov cli push push jns mov test fnstsw cli inc and les loop jo xchg les xor (bad) (bad) ljmp dec mov lock mov push arpl imul ds mov (bad) jmp stos sahf popf pop rolb in and sahf es call sbb or mov cltd scas mov dec (bad) in faddl fdivl and ljmp jge dec aad jnp addr16 (bad) (bad) ljmp negb arpl jo jnp and roll and add outsl cli (bad) (bad) pushl jo scas or cmpsl adc (bad) movsb sub mov push test jg mov stos mov jae jae push sub mov fs enter call out fmull ret add test shrl mov (bad) inc push out addb lods ficom xor out cwtl (bad) decl push mov ds cs loope decl lock (bad) scas inc cli xchg ja and test (bad) pop add sub rorb adc (bad) lcall iret dec jl stos ljmp int mov sub jo out orl call jb adc mov iret inc xchg fs sahf adcl call mov into sahf xlat dec aad adc xchg xchg cmpsb xor mov pop clc test out je xor lods pusha jns fisubl dec mov push jg loop in (bad) and enter int mov scas adc xchg push cmpsb imul push mov (bad) jno jnp pusha int3 fsts xchg sub fs jecxz fwait mov pop (bad) (bad) incl repz xchg sbb xor xchg pop cmp adc jl pop sbb sub lods pop test push push stc add mov stos decl push push mov and and push adc mov push cmp call movsl mov out out test jmp sbb std xlat inc and cli shrb pushl dec jg mov lock jmp out (bad) (bad) (bad) jmp insl inc outsb adc add pop nop push fs clc cli pop ds cwtl scas mul repz add call or push div mov cli xchg test cld jg inc and cmpsl mov push nop mov lds (bad) (bad) incl or icebp in pop cmp test (bad) fdiv lea jnp rolb lret (bad) (bad) (bad) ljmp pop cmp in mov sbb outsl sub mov lcall ficompl mov jg (bad) ds sub loopne jae jge gs out pusha cmp jg (bad) decl in nop (bad) ja rclb sub pop (bad) arpl pop aam paddw inc and and inc inc cmc inc aam push cmpsb ret jns in (bad) (bad) call rcrb mov fdivrs popf lahf cmp mov inc xlat pop inc cld outsl (bad) dec mov sub dec (bad) loop es mov jp push mov insl pop pop dec adc adc xor cmp les mov repz outsl xchg mov mov es popa movsl in push test lds and out lds je (bad) out cli mov push lock mov (bad) popa xchg shll mov mov cmp pop cmpsb jl cmc (bad) decl jecxz push mov adc push adc ljmp ds mov jg (bad) jp mov cmp adc jae loopne ret adc (bad) (bad) incl mov dec inc es xchg push add ret or inc pop scas das mov jge (bad) (bad) out clc int roll dec inc push add jecxz rolb scas push add xor (bad) leave inc mov mov test xchg jp mov sahf (bad) fwait mov adc mov mov cltd in sub mov ja (bad) mov push mov inc leave dec mov out and xor push sti mov je push pop mov rolb sub add (bad) outsb mov mov fisttp std pop lock xlat add cmp loope jmp mov pushl mov arpl mov mov cld pop cmp sbb and stos xchg dec pop scas pushf insb jl or (bad) (bad) pushl mov movsl xchg popf sub lcall sbb pop mov or test dec test lahf ds jg jg and mov dec sti inc mov lds insb fiadd mov pop mov mov (bad) mov cs and inc push mov movsl sbb jbe fs (bad) dec or jmp adc notb stc inc adc sbb stc cmp or test enter jne xchg add (bad) (bad) call pop sub mov sbb sub mov dec aas mov push sub sahf inc jecxz sub sub push fwait outsl test xchg cwtl lret fadds fiaddl xor (bad) pushl adc cmp jnp mov mov cmc dec popf scas xchg mov fdivrl mov ret pop loop fucomp mov dec lods dec push sarl cld arpl pop push push popf (bad) push test (bad) incl bound dec sbb das in mov dec mov xlat sub js or pop (bad) jg ljmp lods ficom pop es scas dec xor xchg mov mov cmp inc adc jp in add mov dec ret xchg dec sub adc dec jmp incl int3 int3 fcomi pop pop fstpl sbb inc jne repnz fwait stos push or lahf and xchg mov mov pop sub (bad) aaa std lcall movsl jle int3 leave ficompl jg jne inc imul stos adc (bad) (bad) jg pop sbb outsb inc cltd test sub sub cmp jg test jmp mov dec mov xchg cmc push lods push loop jp in pop dec xchg inc mov and sahf ret shrb xchg mov pop cld lcall shrl xchg cmp lret out xor and lret syscall stos xchg push inc test out or (bad) ljmp xor mov sub mov pop test pop clc add scas in das or loope or pop adc jbe fidiv mov fisubr lods lahf ds jle pop fcomip (bad) mov or mov sbb dec js lds (bad) (bad) call push add inc cmpsl xchg int mov imul xchg jge mov lock test mov adc ljmp shrb cmc inc inc in and test idiv (bad) lcall fs clc or subb dec mov loop addr16 loopne call dec push push loope mov push in add lcall dec mov push cmp lea iret (bad) fidivrl (bad) incl hlt pop dec mov pusha gs sub push or (bad) aaa cld stos inc inc dec dec mov scas pop (bad) jbe jg call lcall jns sub mov mov (bad) (bad) decl adc push mov in add arpl cmc fsubrl fmuls movsl sub cmc pushl movsl jecxz pop or rorb cltd je pop fsubrp in add lods sbb (bad) decl fdiv adc lea divb lret jb (bad) push cmp daa fistp jns push (bad) (bad) ljmp cmpsb insb lods push test jae fadds iret inc push xchg push cltd lock xor sub dec mov mov loope and (bad) dec push outsb (bad) (bad) (bad) cmp adc test sahf push rclb stos stos sahf loope clc pop xchg inc xor out add ret (bad) nop in popf lahf dec hlt (bad) jmp lret fldl scas push ret add movsb call jl fmull popa and add out repz rcrl outsl mov mov mov sbb and dec dec add fildl test add and pop stc push mov ljmp (bad) jbe mov mov nop xchg adc lds pusha inc (bad) pushl mov push inc and sub stos std pop (bad) (bad) (bad) mov pop mov push leave jae in outsb mov and cmp lock ljmp xchg ds repnz xchg cmpsb pop push or adc (bad) pushl and rcr xchg xor call in sbb rclb mov cmp decl (bad) or cmp cli daa and mov cmpsb (bad) inc jo nop in and (bad) test pushf fcmovu mov xor (bad) (bad) call mov mov xchg inc inc dec mov push cs dec rorb in std sarb cmp or test pushf jns inc xchg (bad) loopne hlt outsb test sub hlt rorb or call into or ljmp or outsb dec repnz and pop adc jl (bad) (bad) jg xor mov xchg jnp addr16 push shrl punpckhbw mov push outsl jnp sub mov js das inc mov or movsl adc call (bad) (bad) (bad) decl shll jmp mov xor out in sbb (bad) cmc (bad) sub cld (bad) fisubl pop jne stos mov push out pop cmp (bad) (bad) (bad) (bad) clc movsl cwtl mov clc fistpll mov das xor and xchg sub sub jp cmp dec cs add cwtl cmp out cltd call (bad) adc mov cmpsb rcrb xor (bad) scas push cld push ja je mov add adc ljmp push cmp rol add inc (bad) (bad) (bad) ljmp rcrb icebp cpuid (bad) aaa cs test test add mov add mov shlb out fimull (bad) (bad) (bad) jg mov jge stos mov sub cmp out xlat sub mov sahf mov incl jp (bad) cmp cs addr16 cmpsb cmp push jg (bad) (bad) jl adc inc push fcompl jne (bad) mov add sar aam xchg dec adc sbb dec or (bad) call add lods dec jbe mov dec push loopne ja mov adc repnz sub lret (bad) (bad) jl orl push loop adc and mov jb jl push sbb mov icebp pop aam gs in popa fidiv lods ret leave jp sbb mov xchg and mov adc mov pop je outsl jecxz mov out mov jns push (bad) fistpll cs inc movsl in in cmc jne mov cmp xchg mov cmp sbb jnp mov out (bad) ljmp xchg push mov hlt lret mov pop mov mov loopne xor int repnz aaa sbb sub xchg ret ret mov js lds mov mov testb (bad) or outsl mov cmp adc sub sub (bad) decl and imul cmc ret shlb ret mov cmpb pop adc add cmpsb fs (bad) (bad) lcall scas mov sbb inc int adc pushf dec push aaa fcomps jnp (bad) (bad) fisttp add nop mov pop mov xor xchg xchg dec out aad dec (bad) mov xlat xor fsubl aad imul mov bound or push inc shll sti movsl dec (bad) rcrb jo cs xchg decl add push (bad) jno das cmp adc mov dec (bad) ljmp xchg lods pop sub je fsubrs mov test mov xlat ljmp pop adc andb fs sub (bad) lcall and mov jmp cltd xchg (bad) mov xchg pop pop clc jg xor xchg add mov xor out (bad) decl inc cld fsub xor imul jecxz jae pop cmp idivl push jecxz adc mov rcr ficompl in gs pop (bad) (bad) (bad) push in push jp (bad) pop pop js rcll xchg movsl imul mov icebp (bad) jmp and lret sbb repnz test mov add hlt jl mov (bad) mov test nop mov test (bad) (bad) pushl sbb and inc dec call xor int3 aaa and (bad) stc jp or adc adc inc int3 clc enter pop insl jmp rcrb mov in dec clc sarb (bad) sbb mov movsl (bad) fbld add insb xor dec aam mov andl add jb cmp decl (bad) cs jo push lahf xor mov stos sarl jmp decl jbe mov in in (bad) shll (bad) call xchg pop test loop xchg push push mov gs mov jecxz mov (bad) (bad) fild test xchg inc lds enter cs int insb dec and int (bad) adc and push das mov cli movsl cltd insb cld or in lds cld and add or jle dec int xchg xor andl (bad) jo (bad) (bad) lcall pop jne fcomps hlt sbb addr16 pop sbb sub jg (bad) push data16 cltd notl pushf les cwtl mov stos test (bad) (bad) ljmp outsb mov lods mov and xor mov cld mov fs nop mov jl iret push jmp inc ret int3 inc mov ss repz outsb pop pop mov sahf scas je xchg mov push push outsb mov (bad) dec push and loopne lds insl push fidivr stc mov mov and cmpsl xchg add ja loop mov mov lods clc sbb and adc imul pusha testl inc xchg outsl sub mov (bad) (bad) (bad) incl sbb push rcll fs mov add lock incl push dec jge push push inc lret or jecxz pop pop decl push iret call xchg (bad) (bad) (bad) call or push icebp mov push xchg ret out pop push sub fnstcw pop or mov test xchg push (bad) lcall xchg cmp and push or pop and and addr16 test xchg ljmp (bad) mov and mov push or out pop adc add fdivrp (bad) incl and jl jns fs dec outsb movsb repz add (bad) insl mov lcall scas mov lahf jp add mov inc inc and xchg imul xchg mov ds rclb roll loop adc aaa lret (bad) (bad) mov popf adc inc test jg lcall sti (bad) leave pusha mov sarl leave mov (bad) (bad) ljmp dec mov mov cmovo adc (bad) ss or xor or or les ljmp stos pop jl sub (bad) jmp sub dec lcall add mov call adc push xor xchg jbe call (bad) decl out add xor cmp lods jnp push sub call mov decl pop fistl adc rolb sub (bad) push (bad) icebp dec ffreep subl stc rolb outsl cmpsb jge inc inc loop fdivrp add xchg rcrl jg pushf loope (bad) mov int stos add inc aaa adc jecxz (bad) and inc in and and xor shrb (bad) (bad) (bad) push pop popf repz mov daa jp ja stos arpl mov dec adc jg add loope sub scas (bad) sbb jnp adc (bad) jl lock mov std (bad) cmp scas adc add mov test cmp (bad) out icebp and (bad) loop jl popf leave fsts js pop jecxz xlat mov jmp out add cmp hlt incl test int3 sub mov (bad) xor jb (bad) (bad) incl lods adc imul cwtl stc dec rcll jo jmp cmp push jmp pop lock fild pop jle in xor pop adc or mov (bad) lcall ja (bad) push cld pusha std sahf sub aad mov push (bad) (bad) (bad) call pop outsb push je mov fldcw (bad) loopne pop imulb lret mov out mov call out out dec push pop fstps sub movsl jmp mov push jp (bad) (bad) std pop push xor outsb orl shrb xchg fstl stos je data16 push cli pushf adc add or mov add nop xor adc pushl push pop data16 cmpsb push lea mov (bad) stc add and dec inc pusha push aas xchg add cltd xchg mov test faddp and sub fildl sbb push (bad) (bad) (bad) (bad) mov repz jecxz adc adc cli dec iret jecxz in xor rolb and (bad) jmp add push cmp add mov pop (bad) and push mov incl data16 and xchg leave cmp daa push push jmp jecxz dec push push mov (bad) mov (bad) (bad) mov movsl jge nop pop pop or cmpsb in mov sub add movsb mov mov jge cmpsl cmpsl add mov push adc sub or inc scas addr16 int3 mov mov adc push ljmp test dec icebp xor sub (bad) aad pop (bad) cli scas pop mov add (bad) fcmovbe int xor cmpsl adc sub scas xchg sbb popf jns pop fs out pop (bad) decl out push es in bound sbb sbb pop push push mov add dec adc inc xor or hlt insb cmpsl inc or mov ljmp popa inc fcoms inc or push and xor imul incl adc loop es xchg (bad) mov jo add mov and add (bad) lcall dec repnz dec out jle addr16 (bad) outsb jb pop (bad) call xchg dec push push or les movb jb imul incl stc fnsave subb ret imul push (bad) (bad) out mov movsb and sbb pop lods shlb push test mov stos stos sbb ror (bad) (bad) xchg cmp in sarb (bad) (bad) fisttpll add xchg mov faddl fldcw fsubrs mov dec clc pushl lret clc loopne sub pusha mov inc ret out xor sub jmp rcrl lock push outsb cmpsb ljmp jecxz mov push cmp popa cld jmp add (bad) (bad) ljmp sarl and sarb ja mov sub adc out xor loop or hlt (bad) (bad) (bad) out push dec test loop add push jb inc subb clc mov test (bad) (bad) (bad) (bad) lcall out jns fcompl movaps sub push fisttpll jo hlt dec xor iret mov lahf lods jbe rcr out leave xor mov outsb (bad) scas jp ss jb pushl add mov push xor dec pop test icebp in loopne (bad) (bad) mov push test not mov out inc fldpi sbb fstl sub call mov in scas (bad) cmp mov aaa sbb call cmp inc mov mov insb ret (bad) jmp mov leave xor (bad) lahf (bad) (bad) (bad) mov fcmovb pop dec or xor and fwait xor mov and (bad) jp dec and shrb mov call fbstp dec cmp pop fistpl (bad) (bad) (bad) decl movsb leave jp out mov les test imul xchg xchg test call mov cltd add push out sub dec sbb fiaddl cmp sub fisubl xchg lods in mov mov mov push mov xchg imul bound xchg xor ljmp fwait aad popa mov mov mov shlb loope test cld mov dec cmp das clc pop std cmpsb or (bad) sarb adc mov enter hlt setne push xchg enter xchg scas push and (bad) fildll dec and pop xor pushf mov jecxz (bad) (bad) ljmp jnp mov pop lret or and xchg not push mov inc lret stos push adc (bad) (bad) lcall pop dec mov xor add mov mull lock pop adc jl inc int out xchg jle mov mov (bad) push jno mov pop adc cmc out test sub pop out push cmc pushl les mulb cld mov xchg mov mov mov (bad) incl cs cmpsl push aad sbb and stos loopne scas or fdivr (bad) (bad) pushl push cltd in xchg cltd lock lret sbb xchg cmp test push or mov dec sti mov pop mov mov add (bad) ljmp push fistl pusha mov ds push jno adc shrl sbb popa (bad) sahf push dec or loopne and mov pop sub add sub pop mov fiaddl ja icebp push mov cmpsl stos sbb out lock ja in (bad) pop mov (bad) lods aaa adc dec rcll in push inc fucomp xchg mov cld outsl adc xchg fiadd enter sub push adc rclb and dec (bad) mov xchg cmpsb addr16 mov imul mov scas jae mov push imul cmpsb (bad) mov xor xor jo mov inc push dec call push lret jns inc adc xor xorb pop loopne and add mov pop cmp lock (bad) stos sub loope neg shlb inc xchg jp dec push lods (bad) (bad) (bad) mov adc stos push push sbb mov jne mov mov dec adc icebp adc ja scas (bad) fcoml imul rorb repz inc rcll std add cmc rcl fs jecxz jo fsubrl in cmp fsts xor pop sub mov decl xchg sub sub test inc xor and pushl jae mov test inc bnd int (bad) push (bad) (bad) (bad) (bad) mov ret test test fs frndint xchg and cmp jmp adc leave ret loope aad js (bad) (bad) call push js mov fisubrl adc stos sbb add or and and icebp dec lret (bad) fadds or aad inc sub xor int3 inc inc lcall jp mov cmc inc sti or out ljmp or pusha inc in out dec fnsave lcall dec stos aad mov aaa cld std push sub fwait and (bad) call (bad) decl mov push inc jbe imul in mov or (bad) (bad) call rcrl in jle leave sub mov sbb faddl add stos sahf pop or mov in ljmp add cltd xchg sbb push mov mov or mov repz outsb sbb pop jnp (bad) jg cmp dec ja xor scas loop cwtl jns mov cltd sub sbb cmp fadds es out js aam push in push int3 jbe sbb ret stos jbe mov or adc xlat jg movsb pop fsubs pop pop ret add (bad) (bad) (bad) jg outsb ja add adc call ljmp cmp push imul (bad) call scas (bad) and loope dec out inc les xchg mov pop sub jae das or fdivrl je (bad) (bad) (bad) call jno jb jo push or jbe or mov inc jbe fsubl push or cmpsb cmp pusha movsl jb mov test jne sbb sbb pop fisttpl outsl pop test dec mov test fdivrs push pushl insb mov inc gs mov hlt sbb lock sub fcos (bad) (bad) pushl mov mov in push pop cmp repz or ljmp call mov push sub les adc xor fnsave sbb inc aam pushl insb xor sbb in add test sahf xchg sti daa sbb xchg call add push xor or loop and addr16 ficom mov icebp (bad) (bad) jmp insb hlt pop mov (bad) pop push int jno ja mov bound jb xlat icebp xor dec clc fbstp movsb in fs push leave stos mov sub mov sahf daa and push sub xchg lock or mov nop xor mov sub mov popa and shl push and lds xor mov mov or sarl cmp imul lods cmp das add movsb xor mov fisubl mov rcrl stos arpl sbbb xchg push mov cmp mov xchg out aaa popa rolb adc or cwtl ficomp sbb jo or bound jle ljmp jmp cld or mov push inc push push push push fs ljmp cmp mov xor out pop cmc repnz (bad) ss xchg inc repnz ss sbb mov jno sbb or clc add sbb cmp pop lcall add dec cmp pop mov (bad) pushl cmp jo test jge jge rorl punpcklbw outsl mov in lcall in jmp (bad) jmp fcmovu (bad) jne dec sbb push test cmp mov push mov jle dec mov dec xor dec outsb bound jge mov fbstp sub sub (bad) (bad) incl dec lcall call cli imul pop fstpt pop cmc call (bad) cmp jbe pop les or shll jg dec and imul xor roll stos lock ljmp or mov xchg lock loope stos pop jns aaa lcall add mov push mov jge sub cli fdivrp ljmp inc cli es ja and or sub jmp stc (bad) (bad) (bad) jmp mov movsl sub scas rclb inc adc popa dec out sbb inc cli (bad) (bad) ljmp stos ror lahf mov xchg mov pop mov loope andb sbb (bad) (bad) out movsb mov xlat jb push push inc sbb enter aad in repz xchg ljmp sbb push sub jo aad cmpsl pop jmp push adc ss sbb pop icebp leave cmp xor dec in call clc cmp iret mov jne or xor rorl (bad) push fucom into sub pop jno pop and adc (bad) incl mov arpl (bad) xor scas ja fwait icebp mov mov (bad) outsb sbb in sbb (bad) movsl or lcall outsl (bad) neg sbb stos xchg cld inc cmpsb les cli (bad) (bad) call shr pop mov movsb jno (bad) cs dec lret rol out scas mov push sub cmp (bad) (bad) mov jp xor cs sbb loopne add or (bad) decl push xor xrelease mov decl push jl addl xor test add cmp mov add xor std sahf shl mov or jg std mov or popa xor iret idivb data16 xchg (bad) out and inc add iret push jnp mov inc push or addr16 or cmp cmpsl (bad) ss jp lahf (bad) (bad) (bad) (bad) fsubrl inc dec (bad) js mov (bad) cmp cmp cmp mov xor insl (bad) (bad) xorb popa icebp sahf jp aas les mov push (bad) xor mov pop mov mov inc testl aas mov subl inc call (bad) fisttpl mov ds push mov ja std add mov mov imul push and add ljmp push fidiv aam call xchg mov (bad) jg hlt pop daa sti mov xchg add stos pop mov (bad) pop mov adc jle int mov cmp xor sbb xor jle mov mov sbb inc jecxz sbb push or dec push pop fldl add (bad) (bad) aam iret imul (bad) cli or mov mov pop jns movsl sbb mov jne mov (bad) (bad) (bad) call mov cmp cmpsb (bad) xor pop test ret cli out loop not mov (bad) call std mov dec xchg sub shrb scas (bad) and clc stos (bad) (bad) mov push pop fiadd in sti int3 mov xchg push pop cmpsb popf lcall (bad) fcomip or sahf stos addr16 aad rcl pop adc pop xchg (bad) jg (bad) in push repz sti iret loop shl inc scas mov (bad) and adc push int3 jmp bnd hlt incl pop hlt lahf ljmp in mov or (bad) aam dec inc roll xlat sub (bad) sti mov or (bad) (bad) (bad) idiv push sbb push fdivrl shr cmc in es pop xchg (bad) (bad) call vmovupd dec stos push les lret (bad) cmc fistpll xchg dec mov lock jge sub mov dec mull out outsl cmp jle inc jae xchg or incb xor clc xchg cld les sub push mov (bad) test leave mov in (bad) dec ljmp pop or jmp mov addr16 icebp jbe or scas cld mov imul jg add movsb mov (bad) mov lods jg lahf movsb jle (bad) movsb test popa jg or sar lods xor sbb pop lret pop mov mov (bad) (bad) jg lds jg out daa pushf inc stos aas sub pop fnstcw sbb lret cmpsb clc lds les jg stos mov sub repnz jg mov push std fwait sbbb cmpsl fisttpl aam fistl clc fstpt lea data16 jb dec repnz sub add fildll (bad) pop jmp aaa std mov mov test push xor scas stc cmp jns jne into out mov jle push movsl or cld mov idiv xchg push xchg cmpsl outsl mov (bad) decl mov daa push scas sub std fild leave inc (bad) outsb mov hlt and fisubrl jno stos repnz mov (bad) (bad) lcall popf lahf (bad) sti std dec sbb adc mov outsl lret jnp lahf (bad) jg out sbb cld or mov leave fucomip stos clc adc and repz decl sahf cmp repnz lock in cltd pop lahf out mov pop (bad) incl fisubrl sbb fmul negl std pop rcrb adc xor lret sarl jg sar sub cmpsl or dec (bad) pop xor and jg xchg aaa frstor jmp arpl sbb or mov adc sarl rorb stos inc movsl hlt jg mov mov xchg test pop hlt loopne xor lret fcmovnbe (bad) test fcomp mov jmp mov dec pop jo std pushl jo scas cld mov (bad) xor (bad) repnz out push sbb test mov xchg dec push enter (bad) jmp jb push cmpsl rcr imul or in stos pop movsl leave imul inc add sub std lcall loopne jb jp clc jge clc (bad) (bad) cmp push adc icebp enter lea popf pusha pushf test sar dec push adc mov cmp dec scas cli outsl mov mov ret fstpt ljmp dec jl jecxz gs dec out jg mov ja xor in xchg jmp xor sub jmp xchg cli pop lahf xor cltd adc ss cld idiv aas (bad) pushf inc out add xchg dec jbe repnz mov (bad) push fistpll stos mov xchg (bad) out insl or mov mov mov mov hlt xlat mov dec outsb jb xor loope stos popf dec psrad outsl stc xor neg popa xchg lahf in fcmovnu (bad) fbld cmp mov and cmp int3 cli mov jg das cs dec icebp lret imulb rorl outsb cmp push sub xchg push addr16 ja clc scas xor les inc mov (bad) mov fsubrs xchg lret enter loopne sarl loop jbe lret mov mov shlb out rolb ljmp (bad) stos mov imul push pop pop (bad) dec pop xlat in sub sbb sar fiadd adc (bad) (bad) (bad) pushl enter loope fstpl jle cmpsl out xchg cmp mov fist mov decb sbb mov pop cmpsb in ljmp imul jg sahf xchg sub leave loope (bad) sbb add negb cld (bad) xchg lock xchg test add inc mov sub stc psubd mov cld out mov std icebp pop out loop stc ficomp inc lahf xchg repz add test or sar (bad) sti pop mov pop out pop dec jge or sub adc sti (bad) fbld rorb int3 xchg dec out push xchg xchg (bad) sahf add jg loope ja cmp cli jb cli (bad) out cli xchg mov cmp cmpb pop ss in pop shlb shll cmp in dec (bad) ljmp inc les jae cmp jb and ds pop stos stos xchg test sti pop cld out sbb mov cmpps add hlt mov jmp lea daa das mov jg scas mov pop insb dec push jl sub lahf movsb gs mov push dec cld call xchg xlat push pcmpgtb daa clc inc dec and aas clc stos xchg adc cmpsb mov aam mov fld fildl xchg cmp dec jl jge loope pop sarl dec jle ljmp rcrb pop rorl pop lods xor (bad) push movl xlat adc gs mov roll push bound push mov dec cmp imulb (bad) fldt or cmpsb inc pop in idivl mov cmpsl cli dec cmc inc jae (bad) (bad) (bad) inc imul dec xchg out imul std es mov out aas loop (bad) mov push js sub bnd xor mov (bad) and adc add (bad) and popa sahf pop scas adc das popf js shrl lcall leave lahf (bad) fimul stos sub mov clc cmpb (bad) jno inc xor jg and test fisttp pop xor push xchg sub fidivrl in call adc icebp jl iret sahf dec xor pop out jg mov fdivs fnstcw out stos dec aad xlat sbb mov jmp arpl push cmp (bad) (bad) incl fnstcw clc scas stos loopne inc fldl2e pushf or mov jo dec fnstsw (bad) (bad) std and cli dec ss inc (bad) push push ja sub push pop mov aas ljmp aas pop mov push mov sahf pop mov aas jbe stc lret ja mov add out arpl jg inc std (bad) (bad) call dec mov jmp cmp loop lret mov mov jp sub test mov (bad) (bad) call aam sub jp ffreep sub sti cld xlat mov mov movsl dec scas mov push mov mov add mov jno dec sub stos ljmp mov push mov sarb fcoml push aaa std decl cmp push and (bad) repz cld push (bad) shrb xchg (bad) (bad) pushl and insl adc push subl adc dec dec outsb addb dec lds call sbb out out jmp lahf ds jge aas cmp les ficom test push adc sbb push push loope inc (bad) and notl adc xchg xchg mov xor add (bad) fistpll incl add pop rolb sbb dec clc add and outsl fs lcall add nop lock pop out ljmp outsb popa insb adc cmp and sub and js cmp out mov test leave (bad) ss inc clc push out add popa int add fcomps stc es xor or in push imul push fwait sub cld insb pop and lret sub pop jae push xor ss jnp fwait add pop sub jae aaa xor push jb cmp push adc cmp pop icebp loope adc ja les cmp out popa arpl add add es pop mov incl inc cmp insb outsl imul sbb add cmp push arpl outsb addr16 jae dec adc sbb popa loope ds add jae dec jb mov pop push shrb and bound gs mov cld out adc fs push mov sbb push gs jge push pop jbe adc sbb (bad) and jns popa jb inc xor sub and sahf imul (bad) and loop or mov mov add dec inc mov inc adc cld sbb inc insb sarb add sbb and jnp pop pop mov mov ja or inc jne jb arpl jbe and fdiv xor outsb push insb insb insl inc pop jl pop ficompl or loopne xor jb cltd push sbb inc subl fstps loop loopne jo je dec jl push adc fildll mov shlb lcall loope mov push pop dec push gs cmpsl pop pop fisubr dec inc bound adc pop mov mov dec insl pop jl into push pop cmpsb push lods and pop pop push or sbb dec dec pusha lock jo sub adc cwtl (bad) repnz sbb jno push sti inc adc push adc inc out es jo push or jnp dec inc dec lcall push in decb push add and popf push push gs insb (bad) mov push mov das push jb dec xor lea mov push test or push or stos adc push mov mov push test push adc pop adc sub lea inc push popa pop ret (bad) cltd pusha pop mov pop enter xor in lock mov test sbb and pop pusha leave out ss adc jb movsb sbb xrelease sahf je adc pop xchg xor fsts pop adc xor data16 xchg stos outsl repnz pop and xor jl jo jb mov ss outsl popa fs push cwtl or insb sub pusha mov popa jns inc mov mov int orl repz mov xchg or push fs xchg pop out gs inc sbb jae sbb or mov and jbe repnz fwait xor push enter and xor imul clc pop inc fs and jae sub cmp ja mov sbb rcrl in sub sub stos pusha lods sub rolb loope jo sbb and pop popa xchg (bad) clc or jg adc popa ss jo sub sbb adc shrl roll xor fidiv jbe mov es repnz pusha sbb int stos jmp jae ljmp sbb lcall xlat sarb fwait jne in sub inc jbe,pt cmp ja out fild fbstp js pop test mov out xlat jae mov das sti xlat daa jns repnz adc sbb mov inc add call push cmpsb add lds repnz clc add or enter add mul xor jg push adc sub aaa mov (bad) shr cmp add sbb mov outsl or lock enter mov sahf cmp and outsl in nop lret fadds xchg add pop movsb repnz clc push add add test ret in and iret jg je or dec in ja xchg mov or add test ja jle fistp pop incb movsb out add repz test or repnz in dec jmp xor push stc jbe ret push dec les xchg daa clc out fdivrl addb fwait pop dec gs mov shrl add jbe xor dec (bad) jecxz adc idivl mov add loopne sbb jns or insl hlt ror vmwrite out in test mov sbb mov out or cmp outsb and xor and fstl ljmp adc js cmp outsl pop mov push lahf pop xor cld add nop out push fmul add push nop mov pop notb mov xchg iret jnp jle sbb pop in jge push sbb lods cmp ds dec pusha xchg jle xor add dec add cmpsl jns mov outsl sbb in sahf push test inc fwait pop dec (bad) sahf push dec jo shll repnz clc clc add pop push or pop xchg jl out js dec or mov pop cmpsl insl add push add and imul fcomps sub sbb mov fmull or movb mov mov adc stc mov sub push js adcb bound xchg mov or and push add movl adc or fs sbb pop add or jl jge mov push daa test (bad) lahf int3 mov jle loope fiaddl cmp lcall into inc ljmp pop mov xor cmc push dec mov or cli xor add mov and out sahf out fnop out bnd add insb and jecxz clc daa out add rcrl add icebp or fcoms test (bad) pushl dec lahf dec add dec lods test loope xor cmc jmp or (bad) sub rclb test leave or das js or aas or (bad) decl mov (bad) adc sbb push adc sbb lcall cli mov roll outsl add aas enter and aam or pminub in out add pop or or repnz mov pop movsb sbb jb and push pushf sahf pushf mov add jns jb (bad) subps mov sbb lcall ja push push mov mov xchg xchg daa aam jl dec dec outsb fnsetpm(287 mov mov and mov sahf xchg andb daa jo shl rclb (bad) cli jp or push sub sti into cmp xchg outsl cwtl jne test ret dec pop mov fs scas cmp jns je xor fs sti fidivr push push jae jb fs jb gs imul push (bad) rolb inc mov push add xor outsl jbe ja aaa push push cmpsl sub scas jecxz jns aaa push (bad) adc dec mov dec push push mov dec xchg jp push mov ret arpl or add jo aad jo clc push mov or sub sarb out push (bad) ss adc aad push jg mov xchg adc les cld cmpl (bad) lods call nop cld decl push xchg int mov pop jne roll xchg fsub cmp incl scas and lahf jns mov enter mov or pop pusha add icebp adc in adc push or mull out ficoml push mov js,pn ret les mov gs bound ds push xor or (bad) xor inc push dec inc mov xor inc daa push xor inc adc push fidivr add inc push xor inc ss cmp fbld dec push push pop jae test xor pop dec push inc inc push push push push cs jg inc dec dec add ljmp push jne je imul inc dec imul add icebp inc inc pop add pop sbb xchg or ret pushf inc cmpsl pop or pop mov push pop test sti pop repnz add sahf mov jle addr16 add jbe push inc jb push mov ror enter inc mov iret mov aad adc call dec dec pop dec jnp adc sahf cmp jnp leave or in leave and jnp or movb push add out in adc inc xchg mov dec or jo lcall dec iret negb dec jl out fsubrs leave and or xchg pushf je xor dec push add mov sbb out pop or lods sbb das jns sahf sahf inc add sbb das lahf pusha pcmpeqw in sbb das inc inc fs repz out pop push adc pushf push out push dec push repnz je pop lcall sbb lock lahf jo pusha sbb mov dec sub mov bound out pop aaa mov mov cld (bad) and fwait sub inc aaa dec adc jg inc insb push scas pushf and add fadds xor push (bad) cmp adc and enter inc mov fsubrl popa (bad) nop add add leave test sahf pop pop sub cmp aas (bad) rcrb xor subl cmp popf adc iret cmp pop pop and jge mov xlat fcompl and (bad) jbe xchg ds push push jl pop test dec cmp sub push pop xchg dec dec dec cmp mov dec sahf pop push inc adc adc dec repz adcl dec adc dec adc je cmp jns dec pop or pushf pushf cmp sbbb and daa xchg push dec lcall enter fisub dec sbb dec in incl dec mov cmpsl fs add lahf add xor scas pusha es in (bad) inc es fs enter sub test pop push cld sub pop or jnp jl loopne lcall jo inc pop jb enter jae in je,pt dec in pushf cmp adc js dec sahf xchg xchg inc sub xor dec or pop or dec dec dec sbbb and sbb sbb daa iret leave fcompl mov les daa sbb xchg sbb xchg out ss xor clc (bad) in fidiv pop push cmp enter cs xchg xchg fwait aas pushf das les and das mov in das je movsb xchg out xchg or xchg test in repnz xchg xchg adc leave xor bnd movsb enter jp pop jb add rclb cmp mov xchg xchg xchg out rorb daa xchg xchg aaa repnz xor cmp xchg and xor xchg dec sbb sbb ficomp or daa fucom icebp jo das out enter in or in dec int3 iret leave and sub fcmove push jg add enter xchg inc ja dec aam ficomp pop dec xor das out fdivrs jae cmp clc out push test imul mov jae pop pusha pusha adc cmp loopne dec mov dec dec dec (bad) out call in out iret enter sub push in in xor daa xlat dec xor xor inc dec leave test push add imul js push or adc dec dec aaa cmp dec cld in xchg mov push pop mov sbb jb aaa jg fidivrl cmp cmp roll push bound mov repz xchg mov lcall or sbb cmp jnp push xor dec pop iret repz data16 lea cmp ror call mov pop sbb cmp nopl ss repz push pop push repz repz repz (bad) in stc push sahf out lcall jns out push popa outsb jnp out sahf out mov out sahf (bad) jecxz std or cmp repz xor dec pop repz repz mov cmpsb mov int mov sbb fs and lds enter mov add sub sub mov in or pop hlt addr16 push enter inc mov ljmp in or jbe in or inc and test jb enter pop test jns enter and or dec pop adc sub inc and test or enter push inc es or xchg cs mov (bad) or and mov scas jl movsb das (bad) stos pusha pop int3 mov mov das and sub mov or mov mov in or xchg mov or jl cmpl int3 sbb mov sbb cmp xlat pushf jns,pn imul xchg mov iret (bad) fisttpll repnz cld fistp cmp add nop loope sub pop xor in pop out or imul out in mov jbe scas sbb hlt insb sbb xchg mov adc cld add and add jl push in add insb pusha inc enter mov fwait ss push add dec jns rolb sbb mov jbe adc sbb das sbb orl dec rorb and mov nop xchg or pushf mov orl sbb sbb enter pop jmp and and nop xchg or and in rolb iret and repnz xchg fsubrl pushf sub push fs mov leave sub jl nop xchg mov dec jb rolb cmpl sbb add insb inc cmpsl or pop and cmp cld dec jo outsl loopne sbbb cmp test inc das test cmp dec push fildll hlt sbb dec loopne inc loope ds adc outsl dec lock rorb inc add push jae fcoml or inc sbb and xlat jl and sub push xlat and mov cmp cmp repnz daa pushf fs cwtl (bad) daa int3 and push or ftst and sbb das xchg mov aam xchg leave leave in nop push adc adc leave jae hlt push adc in jns adc push pop adc mov mov leave enter in push mov das insl dec push push or xchg je mov xlat dec ds in outsl dec aam enter push jl lock push cmp or push or jb dec inc or or xor clc xor push jb xchg xchg xor cmp push movl cld and inc add cmp in nop xchg pop add add or cmpsl test pushf fmull cmp nop push pop mov push cmp push aaa daa xchg pushf fmull ss loopew or push cmp and and cmp xchg pushf pop mov pushf pushf and sbb dec dec sahf cmp and dec dec sahf xchg js sub cmovle cvttps2pi enter cmp adc and cwtl and xor daa daa iret leave clc pusha push cmp xchg addr16 pop pop push xchg cmp mov xchg and sbb leave leave xor mov jb mov or dec add fcomps push sub fcompl leave leave in nop pop xor or leave jae mov sbb pop sbb pop cmp js in movsb pop push cs add push or (bad) pusha mov and enter add test loop jbe lahf push xchg pop dec sahf xchg dec fs jo xchg dec dec sub in sub adc dec je ja inc lcall add test jb test or fsubs pop mov addb cmp loope popa xor test sub mov repnz mov xchg mov bound das dec jae leave dec mov push push nop insl jl leave leave jae insl xchg push leave leave jae cwtl nop push cwtl leave jae leave outsb mov outsb jae leave leave pushf dec (bad) mov leave leave leave dec mov leave jae arpl or inc test cmp inc cmp inc in mov mov pop in in hlt popa mov xchg out cmp das dec mov gs sbb out xchg xchg mov xchg xchg xchg rolb xchg xchg out inc les iret fistl push jnp sahf cmp enter daa inc add push dec inc leave and and dec shrb daa iret leave cmp imul daa iret leave and iret leave and leavew and nop and imul leave lods mov sahf out jnp enter and cmp aas xchg xchg addr16 lods aas in jb repnz jl gs jbe lock lahf mov dec jb leave leave push hlt dec test leave leave jae dec clc jp leave jae (bad) fdivrs les leave loopnew addr16 xchg int3 scas incl dec cmp cld xor add aas pushf jl in data16 dec or mov xchg lahf or pushf pop jb push adc dec cmp insb and in in adc mov in cmp sbb in mov in mov dec cmp fsubl in cmp in cmp jno repnz repnz pop jb xor jb fs mov fs push test cmp repnz pop test pop jb mov jb inc js rcrb js pop fdivs repnz rcrb jb pushf pop hlt in dec jns pop jb adc pop dec cmp push dec sub mov dec push pop dec in in adc (bad) in cmp in mov cmp mov pushf inc mov fs in in dec jo inc in cmp in mov insb mov imul dec sub repnz mov push jb pushf pop inc xchg push jl pushf pop jb pusha movsb je pop jb sbbb pop jb repnz test cmp ja add mov add xchg pop dec pop mov jge jnp js mov add push sahf out in shrb xchg push scas mov jns lock std or push sahf out sahf and ds pop gs out jb mov out int dec loopne push mov aaa inc sbb add xchg fmuls (bad) sub daa jg,pt inc cs ja sub or inc and inc jo in js mov pop enter adc mov and test add enter inc pop adc loopne inc push enter aaa pop and lds sub repnz mov fwait sub adc inc jo pop test rolb mov fwait sub cmp pusha mov pop and enter into add mov xchg pop and fstpt insb add push jg push insb mov pop and sahf imul inc es js inc mov mov jb lock jl add inc aam lds mov xor mov mov xchg add mov ss mov mov mov or pxor cmp fs daa test test aaa clc and sub jo mov cmp outsl adc inc scas fcoms aaa pusha sub or lods nop fsubrs xchg and sub in mov scas nop enter test dec xchg pop mov fist and aaa or push enter in test dec inc scas nop sub sub or scas nop dec dec dec enter lcall aaa pusha pop and mov test dec sub nop sub sub or scas nop lock enter push push mov jns dec xor test add xchg mov ficompl jnp in stos addl mov fmull mov aaa and add mov imul sbb stos in xor scas jl pop scas sbb stc xchg lret ret add jae imul fmul mov imul in ret sub les dec (bad) int3 fwait dec int sbb in jb iret insb fwait sarb rcrb push dec xchg (bad) lcall pop adc dec pushf dec stos cmp jp stos es in add lock lods je push push add xchg cmp lea jae adc (bad) push jno rolb jb mov jmp pop das pop add mov or fwait dec pop jbe sub dec mov xchg out push fadds pop enter push mov push and xchg or js mov pushf mov (bad) in and mov fadds adc mov or add xor or fadds iret leave test lock xchg or sub sub in add or push pop cmp daa or or add and inc enter in xchg popa mov xor or jp dec push aad pop pusha cmp inc scas (bad) or in bound (bad) icebp inc je jo mov and xor push repnz in cltd nop push inc pusha add cmp scas rorb shrl scas in adc aas and inc mov je lock pop enter andb mov aam mov add or fist insb cmp aaa sbb fstl (bad) (bad) incl add outsl sbb jl lods mov cmpsb call mov (bad) (bad) incl pop mov mov fmuls aas flds (bad) jae sbb push fildll cmp in and jmp addl jbe js enter (bad) (bad) (bad) incl ljmp (bad) stc add mov push (bad) sbb dec xchg push mov mov aas movsb xchg adc dec inc pop mov jmp add adc xor (bad) in fsubr in loop cs sbb ja sbbl or and repnz iret lods out add sbb sbb add (bad) (bad) jmp cmp dec loope test test inc mov mov mov jg adc (bad) (bad) call sbb or inc lret repz pop mov stc mov fbstp iret and idiv (bad) (bad) decl mov mov or sub xor push add or dec mov mov scas inc add popf mov lds lret pop ret add dec movl call inc mov mov add ljmp loop out push (bad) (bad) (bad) ljmp xor insl lods lahf out (bad) ja xchg adc push xor jae cltd jbe (bad) (bad) (bad) decl divb popa repnz jmp (bad) sbb faddl pop jecxz adc xor cs incl ja out sahf scas in int je push or inc xchg int cmp testb xor (bad) (bad) lcall cmpsl icebp in xchg add dec push movsl lock mov push xor mov pop fldl insb fs scas jb add pushl popa fldenv inc mov xchg mov adc (bad) sbb loope xchg insl pop add fs mov add add test (bad) rcrb out aas and pop inc inc lret jbe insb pop add insl loopne jne cmpsl push test arpl jb mov mov into lahf arpl xor mov xchg sub push and inc gs je pop lock push xchg dec data16 neg out dec dec cs das int outsb and inc xchg jae sbb xchg dec mov daa (bad) add insb jb insl mov inc mov insb adc pcmpgtb push fs push sub inc ficoml std push dec dec xor xor xor popa repnz aad fidiv push sub and add scas or lcall inc jnp fcmovu arpl dec hlt fidivr add xor push scas pop push inc pop and outsl adc aaa add clc sbb imull (bad) fwait jb push add pushl arpl fidivr stos xor out sahf addl scas inc push pop dec sbb (bad) dec pop js rol pop mov imul jp push jns imul mov and jae adc mov es xor cmpsl bound inc adc enter dec mov aaa push outsb outsb outsl lahf jnp mov fs inc cli insb mov push jb lock pop and arpl outsb push jb mov push jne push out out fcomps pop jns lcall push pop inc mov inc insl rcr cmp insl xchg jbe mov je pop fs pop rol fwait gs popw addr16 pop inc inc adc bswap jnp jl insb scas jae imul jno (bad) xor outsb addr16 lds gs push outsl mov dec arpl pop addr16 sbb mov add dec movsl pop xor in xor fcompl jae mov fdivp fimull cmpsb jo dec jp jl je pop iret jnp insb push dec ja inc (bad) dec repz icebp sub sbb push jb mov push xchg inc punpcklwd gs lods loopne jbe sbb es repz jecxz jl,pn dec pop xor xorl cmc cmc inc je outsb pop jbe,pn push lock icebp lock push adc scas ret aad ja mov pop faddl mov or cmp or sub mov call addr16 pop xchg push lahf fisubr outsb adc adc call jg adc push fiadd and fwait or dec inc inc mov jno in adc sub fs cmp stos sbb or stos aas outsl mov mov imul cs inc jnp pop fiadd jo gs inc (bad) sbb sbb add add bound push insb inc pop inc fisubrl lock arpl sbb mov ja repnz (bad) jecxz jmp mov aas mov ljmp and or inc dec outsb (bad) xor daa xor add push mov mov cmc cmpsb add xchg fstl sub sub sbb ret (bad) jne sub cmp (bad) mov lds jns jne cmp ret xchg add sti push mov mov cmp push add das sbb imul mov sbb bound pop pop imul inc xorl sub bnd jmp mov ja fwait ja repnz or idiv push insb fistp or scas mov imul and loop outsl addr16 popa jae dec imul (bad) je jae popa insb (bad) (bad) sahf adc outsl pop push inc cmp or cs dec inc sub fidivr out enter or loopne ss int out sbb fisubl pop sbb out stos cmp mov sbb stos jecxz (bad) and daa outsl push cmp jmp sti jne in sbb jbe cmp mov add sbbl ljmp dec pop loope xchg xor ja dec or icebp fwait popa outsl sub out sbb xchg dec outsb mov (bad) jbe jbe (bad) je test push daa add adc pushf scas pop enter ss les lds pop aam adc sub sub aad mov xor push jmp push (bad) cs push add xor push daa daa push cmpsl xor xor add imul sbb (bad) mov aaa rol sbb shrl cwtl and jae inc or out push lods roll ret rep cmp cmp ds adc pop dec pop in lret push dec aad push pop fidivrl lods pop pusha or vmptrld dec push rcrb jb gs out mov mov jae dec cmp jge insb aaa out and (bad) mov fistp lahf je xchg js adc jg pop fidivr pop jae jne pop jle dec xorl mov es fwait addl ja ja repz sbb pop cmp mov mov test inc sti out jns loope icebp pop outsl repz mov aad shrl adcl lea pop mov push fwait daa pop popl insl xchg and push outsl imul (bad) jae jg xor jmp jo push mov push loop test jmp das jo jp outsb mov test je out sbb inc fwait mov js xchg (bad) push popa pop out xchg out inc mov push pusha mov mov (bad) jbe push or mov dec call cmp add mov andps or out mov cmpl pop fist aaa pusha adc out jno inc (bad) pop jl imul inc arpl sbb jo das (bad) xorl addr16 fwait loope jo cmovs xorl sahf lahf das inc (bad) ret xlat cs (bad) jb jg and jb mov aad pop push xor stos dec addr16 je test repz fbstp ret ja sub ljmp push fistp add ja mov btc ss xor mov fs pop cmp dec outsb aaa push add xor push xor xor mov sysexit xlat aaa and (bad) pushf negl ss into rol xor ss sbb aaa xor adc mov addr16 loop push pop jb or add mov add add data16 and test sub inc pop jmp imul add inc pop test jnp shlb pop jae movzbl (bad) aaa cmp xor sub ja add testb pop xor or in imul push cltd daa xor ret imul mov xlat push lea sub mov sub ja pop xchg jg sub leave push mov (bad) push cmp cmp xor arpl add test pop stc push icebp push daa jae lahf dec lds xor test in or ja aas and push xchg fisttp add pop daa test add mov aas xor cli lods jecxz xor and add dec bnd gs mov cs pop inc js movsl (bad) mov inc (bad) mov cmp push scas adc lcall (bad) je jmp push int3 and gs rcrb pop imul push dec outsb gs push inc rcrl inc imul pop jns pop mov test nop dec push mov or ss nop jo or inc (bad) mov mov enter test jae,pn ficomp inc inc push push enter es dec outsb jo mov or ror mov pop fwait adc push in in xor xchg jns sbbb lds mov dec push mov sbb dec leave add mov loop cmp lock xor clc dec lcall inc push dec or ja pop mov (bad) test cld and cmp add pushf mov imul jns push aaa aam or adc mov dec in cmp and jo mov and cmp xchg bound add adc add inc clc mov pop jl cwtl add in cmpsb or dec push loope pop add dec dec dec sub gs inc insb shufps push push bound push push add xchg mov xor and push call outsb in sbb scas add push mov pop or or leave sbb mov in lds dec inc dec dec loopne cmpsl and jl or outsb jae jae inc outsb inc fs or rorb push pop add shrl sub sbbl xchg adc popa adc mov inc pop inc or into sub cmp orb nop or mov push fsubs je add jns cwtl inc dec mov xchg mov les js cmp xor clc andl je loopne jmp add fisttpll mov retw adc dec in test jns dec pop jmp arpl sub add sbb mov mov jge ja dec xor mov cmpsb dec add test pop xchg pop dec sub push mov dec data16 inc aam mov mov add xchg push imul mov call inc stos sbb cmp pop testl cmc push sbb dec insb inc jae rorb push outsl cmp arpl fimull sti jne jecxz or je js rcrb mov std outsl dec out pop pop jbe popa dec or inc arpl jge test jg mov add ret inc js dec scas out mov stos aas loope cmp out aaa arpl sub mov ds and pop daa or (bad) fistl cmp icebp push add dec xchg xor push test imul fbld ffreep jbe lret xchg mov aas or push inc push inc add sbb or sahf std push adc decl ud2 (bad) and dec xchg (bad) lcall sub scas daa test fiaddl and pop out fdivrp add call into hlt out push roll adc xchg lds ljmp xchg push push je clc mov lret outsl fs push dec xor (bad) incl or (bad) cmpsl mov mov fistpll fbstp adc (bad) fcompp mov (bad) fistpll fidiv je sbb das push cs xlat lret sarl ss or ljmp jmp js xlat cs push xorb pop cmp sub aaa stos add inc mov jecxz push fistpl push dec mov ja xor pop mov ljmp mov fwait or shr pop adc rorl dec cmp inc sbb cli push je out push dec inc push mov test popa outsb enter xchg mov inc ss sub hlt add sub push pop pusha adc inc jp add or inc loope xchg mov loope jnp pusha adc xor imul or pop push pop sub xor mov (bad) sub fist mov pop inc jo and mov insl jo mov sub pop dec outsb inc push sbb add jp in popa pop inc outsb fs inc jb inc gs jne mov jb pop push arpl ja pop aas rcrl jg xor arpl fwait mov sbb jbe insb outsl ja add inc sbb xchg inc popa (bad) mov dec jo pop xchg frstor std inc scas cmpsl add push sbb daa or js daa daa pop pushf loope mov jg jne cmpsl dec xor shrl dec outsl jo and iret stc lea rorl mov inc pop dec pop or push jo lahf push mov mov or pop pop testb rcrl pop xlat mov add mov sbb test add jno js jp sub add aam and ds test mov insl cmp or pop call (bad) sub push push into add and dec lcall cmpsl sbbb lcall fisubr add nop dec jno mov rorb outsl outsb (bad) jne mov rcl jbe cmpb je or xor sbb add outsl sub adc and pop ret pop adc jb addr16 jns out or adc sbb sahf xlat popf and cs xor fdivrs xchg inc or dec push mov cmp add notb notb sbb mov pop rorb sub push lcall into jo dec and mov xor push jnp xlat mov (bad) mov daa push adc sub push adc cmp arpl inc ret bts scas test pop pop popa stos push push inc push xchg jb mov mov add or sahf push fwait sub popa cs fs (bad) popf pop or daa or add push add dec pop ffreep dec imul dec add or inc xor jp les push sub adc andb and dec (bad) xchg (bad) mov aas jmp inc mov push sti das push or push mov lea packsswb test push addr16 shl inc jnp dec and inc or inc mov inc iret rclb daa inc lcall pop push adc jo add or add sbb push ret (bad) test out cmp push (bad) jmp addr16 fstp mov daa jnp dec faddp push mov push aas jge cli and outsl lret vmwrite pop lret addr16 out fdivrs sbb sbb inc imul loop mov aas inc jecxz jmp mov lahf inc fildl das inc xchg mov movq jb outsl mov or lret arpl mov scas push bound and xor sub cmp fwait pop (bad) hlt je,pt je outsl push xchg mov stos add test out fs pop outsl pop imul (bad) sbb cmp scas jbe pop ljmp dec cmp jbe imul jg jbe or push js dec mov insb jg push dec sbb outsl xchg jge add inc push inc addr16 xchg ret cwtl dec cmova pop popa (bad) dec mov jb push cmpsl sub aam jg cmp push scas (bad) push pop push bound cmpsl sub addr16 pop pop imul sti adc dec mov sbb mov mov jae add sub das jl adcl dec mov mov add add test daa cmp test cmpsl sti mov xor sbb xchg push bound jno jne dec bound inc jecxz and mov inc sub mov aas call mov addr16 jmp stos push or xor push lods ljmp or aad rclb mov (bad) mov (bad) and mov ljmp daa fbld outsl imul add sarl inc adc xor sub push mov dec sub arpl add push push and jg pop cs das or sub add dec pop out add inc (bad) addl lea cmp aaa inc push sub mov or jbe (bad) pop xchg mov mov arpl push daa das push ret cmp and ss jae out mov add or xor pop int xchg orl loope sbb (bad) andl aas push aaa arpl (bad) sub mov inc psraw dec inc mov xchg mov daa insb mov jle and push mov mov mov pop and mov cmpsl daa inc mov add xorb xlat push jecxz das pop mov push fsts aas movl (bad) mov add lods xchg or fsts mov inc or psrlq xor xchg fistpll addr16 imul push cwtl test push and push inc jno jmp mov outsl add xchg dec fbld or push jg xorl and imul add dec gs push (bad) and inc outsb fs dec aaa mov mov in arpl mov insb dec adc or and data16 and test pop jbe sbbl xlat aas sbb dec adc add movsb dec sub push xchg movsl jbe insb aaa nopl mov jbe jne (bad) negl inc lret inc movsb pop ds jp stos cmpsb xor mov lret decb (bad) xchg jmp pop mov fisttpl dec push add insl repnz adc push das push iret ret iret xor xor and pop push ret xor inc das aas jb inc mov xor dec aaa cmp in cmp mov out push push mov rclb pop pop pop and enter fs push das xor test pop daa xor xor xor jb push jb xor push ss aaa and and jl pop jno mov sbb sub add outsb arpl es daa imul movb es fcmovb jae and add imul je inc or bound and shr inc mov add lods push js loop xchg or xchg pop fdivrs jo dec fidivr xchg xchg les cld pop or in push mov xor sahf push xlat in in dec andps dec (bad) in inc push inc aaa jnp jnp inc pop push dec pop push push mov push push xor inc dec xor mov sub loope or inc mov jmp xlat cmp je scas arpl (bad) jne arpl ds or xchg push add das or movl sti adc push sbb add (bad) dec mov test iret mov mov sbb adc pop add inc jp,pt mov ja and sbb cmp lods pusha xchg imul movl push popa lret outsl lods mov aam xchg push jmp cmpl in dec xchg dec (bad) adc lahf inc adc xor mov scas adc pop mov adc loop mov push mov adc scas outsb (bad) ja jb jmp inc mov mov fdivr sub lea add fwait pop sbb repz push sbb iret xchg mov mull sub mov jo psubq insl xor dec push jns push fs mov insl push pop arpl inc dec or xor sub nop adc or rolb mov mov imul xchg inc or cmpsb add lret pushf inc add dec mov test and xor inc mov stos aam lahf push push push imul adc mov push rorl out nop cmp push add outsl adc inc mov and loope push and adc dec stos mov popa jne repz adc jne bswap lea sub stos push cmp out dec and and adc mov or fistpll xchg pop (bad) dec aas dec adc or pop push adc lods andl and adc add add adc dec inc ret add movsl stos mov or mov fldl sub es and inc pop jo add sub popfw (bad) adc pop ljmp (bad) xor fldl frstor and rcll push and mov or push pop and mov movzwl mov mov (bad) jnp inc mov xor mov aaa mov mov adc mov ja movsl pop jp popa fwait pop add add outsl out push sub or push sbb adc add (bad) sbb inc adc jg test jg push int3 mov xchg scas push cmpl pop push pop (bad) ja push and punpckldq loope lds dec lods pop add push xlat shrb ja fisttpl daa pop out jns jae mov xchg ret inc not push jnp mov sbb inc pop mov iret outsl push rorb jbe push or sub jmp mov lock or add lods (bad) fiadd inc popl sbb popa scas cld adc adc fsubs jne idivl adc mov xchg pop and mov cmpsb pop jnp dec outsb adc xor mov pop in cwtl lea push pushf test push and inc sahf adc xchg inc dec cmpsb sbb sbb fistl jno icebp subl mov repnz adc aaa sub aaa loope lods mov pop jae sbb sub and ja icebp dec sbb mov dec clc movsl inc xlat inc mov and cs xchg rolb or scas inc fildl mov or and jne,pt add addl movsb and jmp push push adcb (bad) (bad) fidivr inc addl rorb xchg pop mov inc outsl pop pop xor jnp dec ret pop arpl push or xor bound lahf mov cmpsb xor pop repnz push and push push mov stos pusha dec and sbb neg pop push scas inc push out mov dec daa xor imul inc pop test pusha add or pop pop xor add add mov push mov mov and addr16 xor mov pop js push daa fiadd sub test add push rorl out inc cmp addr16 out inc or xlat push sbb outsb inc add xchg mov sbb push nop stos sub xchg cmp sbb mov cmpsl sub sub shrb and shl push loop adc mov and ja pop mov idivb sub pop cmpsb lods pusha and pop out push inc add jo add ret stos adc cwtl dec mov scas add push shrb movsb adcb cmp pusha aas pop and adc jmp or insl sbb les cmp arpl or inc pop stos sub addb mov movb mov (bad) ds lea inc mov mov imul movsl inc lret mov xchg xchg jl jmp jae sbb call jecxz mov or mov scas push sbb add push add and inc bound adc sahf sub jmp jae (bad) mov mov pop fdivrs scas loop loopne mov mov pop leave adc add or inc pusha scas movsb push xor stos cmp xor lds xchg push mull shlb dec nop fs mov adc cmp ss xchg and iret (bad) ljmp and mov mov mov sbb ret cmp stos xchg dec xchg add mov inc mov or inc roll push push mov add iret xor arpl (bad) into jecxz mov pop bound adc test push mov fldt mov or sub pop daa pop jns imul cmp and push or aam xchg mov and jb mov mov pop or outsl mov push adc inc sbb ficomp mov ffree fiaddl adc iret push push insb pop sbb inc imul imul mov mov loop stc add sub mov dec or mov es mov orl add push add sub scas cmp fmull faddl xor pop xor xchg xor imul je jbe data16 and out inc xchg (bad) sbb cmp inc or scas cmp xor cmp adc pop xor pop test inc mov mov dec call es loop push push jo cmp out outsb pop push js roll sub (bad) in sbb cs aam (bad) push pop push out jae push test ja bnd sub sarb jae es add imul mov popf lods (bad) mov inc insl xchg mov inc xor dec out inc fiadd pop inc imul push xchg push sarl dec popa xchg inc es xor mov dec sbb cmp push das fist dec mov loop sahf fldl sub pop fsubrp loopne mov je ret sub cmovnp mov push xor ret dec pop inc (bad) aaa mov pop scas arpl ja inc mov mov dec jno gs push in mov jp mov ljmp dec scas out rcrl mov fs dec lods inc and inc notl jnp or and dec mov pshufw test inc push jle scas pop pop hlt sbb dec mov inc mov dec outsl push pop dec sahf jbe in jl,pt dec pop xor inc mov ret mov ss loop jp lock ja push lret push test ret andl push push adc jne aaa int (bad) insb aaa dec mov mov jo imul push pop push push andl mov xchg imul cmp push push or popa jbe mov xor call (bad) push fs push xchg aaa pop dec add (bad) out push fild push sbbl outsb sbb sbbb or push lar insl cwtl (bad) movb mov jno js mov out add sub fistp jno ret ret ja insb repnz dec clc jnp das inc xchg dec aaa in test das imul mov rorl rorb or je loopne addr16 bound mov repnz push outsl jnp js imulb jae (bad) mov sbb jo xor xor push ret xchg or shrb dec jbe dec (bad) jp push mov xor xor jge out loopne outsb jbe lret imul fsubr loopne dec pop jbe aaa jp sub pop mov add push call jno add mov data16 mov push ss sbb jnp mov bound push ljmp aaa fbstp xor jne es mov mov dec adc imul (bad) outsb imul (bad) js (bad) push fimull jbe mulb dec pop lock iret jae pop cs aad popl push repz (bad) cmp cli dec pop sti xor pop das mov jae fstpt hlt sahf jb xchg sub fimull xlat es dec mov mov cmp push ljmp loopne push push daa ficomp loop push jbe push inc push cmp out scas xchg sbb inc scas imull mov lock shlb js gs insl sbb push push outsb push sbb mov lods ljmp jl out lret dec loopw pop xchg out repnz es aas dec cmpsl mov push outsb push push cmpsl insb into mov push mov dec push add stos insl out push arpl push push out inc (bad) mov mov push add imul inc cmp outsl outsb sbb sti jp pop repz dec dec add cmpsl iret cmpsl jo dec rorl pop pop xchg or (bad) gs inc adc jle pop shll aaa mov stos bound jno jp pop pusha aaa bound jp push out std sar push adc dec mov xor push fidiv popl lahf ss repnz add mov cmpsl insb ficomp mov or push bound js or fwait inc arpl fnsave imul push add jmp sahf add pop rorl pop mov (bad) dec imull sbb jne cmpsl mov enter arpl ja lds push pop ret or out xlat sbb fiadd lret rorl fbstp mov xor cli hlt mov lret jns push sahf jp mov push cs push fadds jmp test pop mov pop rcrl insl xor xchg cmpsl lret cmp ss fidiv pop aaa pusha and push cmp fbstp loope scas dec fild inc sbb inc inc xchg into sbb out mov outsb cmp call jecxz fmuls js addr16 jns aas pop mov and xchg push pop add sbbl cmp lock rcll pop loope dec jg (bad) divb mov inc dec xchg inc js dec jmp cli dec lcall jg or dec outsl dec pop mov movsl xlat dec sbb xchg lock decb es add jb je stos imul pop rcrb jno movl push popa dec pop data16 (bad) xor push xor in mov mov insl push andl dec repz bound dec jl xchg push pop cmp inc insl or shlb xor out jmp adc pop pop stos ds inc fs mull sbb es clc les cmp fwait push jge push mov xor jo dec cmp mov sub out mov sti inc and jmp mov loope pop incb inc mov das aaa push push loope jbe imul arpl add js loop iret push testl repnz cmpsb (bad) push ds xor out mov adc jb cmp mov or push xchg dec mov jae jo mov lea inc aaa bound ljmp lds sbb add insl cmp fdivrp out shlb ja push cs push inc loop mov ret inc cli xchg jo gs mov push mov pop jmp out ja outsl xor lds rorb jb xlat sbb aaa insl lcall ucomiss jbe pop fisubr jp push (bad) sbb pop lahf jae,pn jb popa ja ficom loop cmpsl inc aas push xchg dec bound push out movsb jecxz xlat arpl pop lea scas xor dec xchg push mov ja sbb dec movb out jbe fimull cmp dec add xor pop jo lcall in ficom xchg push ss push sbb cmc (bad) jnp jb js dec cli outsb jb push sbb punpckhbw in xchg sub push push loop add (bad) xor or add jnp mov jns adc imul mov dec dec out das dec fwait mov aaa lds loope inc arpl push jp add sbb mov data16 wrmsr pop add cmp (bad) xor add lret xor fs push sbb adc test jnp aas adc pop out jne ret dec cmp rclb clc add inc into adcl (bad) jns bound lcall das insl out push andb dec imul je lea clc icebp fisubr dec or push push inc outsl mov and addr16 daa icebp hlt cmp cmp jle xor mov adc inc inc xchg das insl or sub arpl scas inc jg imul aaa sbb push das dec cmp jo mov inc push (bad) and add cmpsb outsl xchg lea push push and les dec jecxz pop sub pop bound push cmp push pushf adc push fiadd or xchg xchg dec dec js and dec xchg daa push ja cmp lret (bad) cmp (bad) jo and jns loop xor ja push xor xor jle xchg (bad) xor xor insl xchg and xchg xchg push xchg cmp jecxz lret pop iret fistpl inc rclb sysret ljmp sbb dec mov outsb or subl idivl das push inc jl ja scas rolb or add add add add push mov idivl ss repz add out mov mov add dec (bad) xlat imul sti push mov out stos cli xchg sbb jecxz xchg mov cmpsl movsl cs inc xchg bound inc mov pop jmp add push xchg inc xlat stos or (bad) cmpsl ss leave dec in popa arpl jecxz cmp (bad) jecxz outsb pop mov mov push fisubrl mov cmc scas ret out or jmp xor dec gs data16 push pushf mov push insb out cli jp jae push mov jp inc inc hlt push outsb jg jg aam inc push cmpl test sub jne add dec ficom (bad) testb dec arpl mov scas inc xchg js inc jecxz adcl adc fmuls lahf movsl cmpsl ds push (bad) stos inc or outsl out imul lret xchg push out (bad) xor js push push sub mov mov push ffreep dec xchg outsl cmp ficomp push movsb inc pop inc add (bad) aad mov arpl push mov adc inc (bad) inc pop jno mov (bad) mov push add add xchg stos dec mov mov outsb addr16 and (bad) mov push (bad) xchg inc aam mov inc outsl xor incb add roll dec push mov ret pop pop js daa ficompl inc add pop dec jo (bad) rolb mov outsl push and lcall mov addr16 fs sub and dec outsl jbe add lret mov and push or inc mov outsb ljmp jns push push add outsl pop xor divb jge int3 or push push adc jle cmp push adc add inc add jo or inc sbb fsubrl or ss or das or pop pop ficom pop dec or dec or movl add fstpt jbe add imul or inc or pop jp xchg add pop pop cwtl push outsl push das movsb push rcr add sub scas dec outsb inc jecxz inc xor and add rolb push (bad) xor xchg mov pop push pop cs push insl pop mov add lahf mov lods pop xchg insl or or sbb pop lahf movsb negl mov scas fiaddl add int lds fisttp pop daa push and ret or inc push cmp pop addr16 cmpsb push cmc push insb pop xchg pop add mov out cmp sub in in aas and in in jl cmp ucomiss gs inc cmpsl pop and js test push insl and sbb test andl mov or (bad) jae and js pop cmpsl pusha insl insb pop xor ja xchg lret in push adc and or dec push jo fistp add enter jl,pn das add inc out popa fs popa jo adc xor dec or add sub lahf out or push mov test nop je mov fsts xchg add jne je add stc push push sub xchg pushf mov mov jae mov adc sub lock aas pop cmp dec test addr16 lahf mov push roll pop ret and add xchg mov push add pop dec inc fs add mov ja or test fwait lock cmp mov xlat inc pop sub gs dec gs js loopne mov add xchg or mov dec and leave sbbb es xor mov (bad) xchg mov shlb cld jne sbb fadd int3 push aaa in nop (bad) mov jne aaa mov addr16 or (bad) fs inc jle and rcr ror pushf pop add cltd movsl pusha jb jae xchg faddl in add scas jp (bad) mov in call lock pop xor push out xchg lods dec pop push pop lret imul xor pop bound and bound in daa (bad) push mov call mov push cld stos or and imul iret sub nop xlat jg iret fcompl push xchg or cmp adcb xchg add mov mov lahf test jo push inc push outsl imul imul jae mov and and dec outsl xchg jb xor popf inc lahf fmul and jb cmp push or pop adc add ficom and test insb in and mov and dec push and test (bad) or test mov cmpsl xor add pop sub pop enter mov pop out in xor (bad) jne inc fiadd sub push jb add iret pusha push adcl add test mov sub add xchg add xor mov aaa push faddl dec push dec dec jnp pop xchg mov jae xor jo adc imul hlt mov addr16 xor mov aaa outsb adc mov mov cmp mov (bad) notl insb hlt imul sbb loop stos pop pop mov (bad) sbb add lock xchg ja sbb outsb dec insb fbstp test xor and pop iret xor dec testl adc and jno lods loopne inc xchg xchg ror xor pminub sbb dec jmp push arpl into popw xor pusha call push pop xlat push push mov pop mov dec inc mov jae sbb out clc popa cmp addr16 add sbb bound or cwtl xor outsb outsl (bad) pop hlt xchg cmpsb loopne fild push sbb xchg pop mov mov lahf jbe mov cmp out xchg xor (bad) mov xor pop jb xor ss push imul sbb adc notb dec xor adcl cmp pop xor push ss xor fisubr popf push push xor pop ss mov pop xor jbe sahf pop jle mov lahf pop (bad) adc lcall rclb out cwtl arpl xor xor mov pop aaa pop inc outsl das xor dec addr16 (bad) mov xlat daa sysexit xchg sub outsb pop inc pop pop inc insl sarl das das mov roll push and outsb wrmsr (bad) xor sahf xlat pop scas adc scas iret (bad) xor pop mov (bad) aaa pop outsl ret push cmpb fistpl out xor (bad) push or fistp xor mov (bad) pop popa (bad) dec aaa pop ss xor or data16 jae (bad) inc fldt pop outsl xchg push in mov pop jle mov jg scas outsl out lods pop mov outsl push es or outsb daa cmp pop xor iret scas xor outsl fstl mov out (bad) pushl insb rcrl (bad) int3 push xor push xor xchg xchg jbe je xor or mov xor xor jnp out pop out xor cmp pusha lahf divl lods movhps scas mov data16 sub mov cs scas lahf mov lds (bad) pop aas test xor es dec mov divl adc or inc sarl scas dec push lds sub add push cwtl movsl popa aas mov insb rcrb inc inc insl add aaa mov (bad) xchg mov pop data16 pop aaa in pop and (bad) ss lods fcomps aas cmp (bad) jge pop lahf fistpl lock negb fistp aaa ja inc jo scas xor aaa (bad) push sub mov or pop outsl out cmp bound imul inc pop pop mov mov out pop ret push cmp popl xor pop fldt scas incl push mov lret push pop xor pop push jg ds xor lods sbb cwtl push mov and scas inc outsl fwait cmp pop lds cmp pop nop pop inc ja dec add add loop (bad) out pop inc andb (bad) add jecxz sysexit mov lds jno inc out jbe xchg mov push xchg xor imul shr lods mov ss ja inc adc test cmpl iret iret pop dec mov dec dec aas outsl ret adc add outsl dec popa lds rcl jg push xor cmpsb lahf xor xchg mov cmp push and ja push insl fldcw add jbe xlat xor adcl sarl pushl pop (bad) aas push or mov xor add pop aaa adc push push out outsl pop mov mov jno mov cmp (bad) sbb inc sbb lods pop xchg aam das pop pop mov sbb pop es inc xlat scas (bad) addr16 push aas dec push insb pop scas xor mov mov pop pop pop xor xchg push fisttp pop aas cmpsl fcmovnu xchg and addl fildll xor jg (bad) push mov lahf mov (bad) inc outsl scas fsubrl pop sub out push pop sti sbb rcl mov xor xor sub scas inc jg lods rolb inc sub jmp (bad) sbb enter xor xor mov pop ja mov pop test mov aaa mov pop pop mov outsl (bad) fidivr xchg inc mov pop inc mov add fdivs xchg pop jg jno pop addr16 inc dec sbb jg imul pop aas xor push sbb push xchg scas pop in add mov out fstpt aas ficom insl incl scas inc mov das adc outsl divl mov inc pop movzwl ja popl pop add lahf mov xchg mov imul add loope or xor aas mov adc pop inc (bad) push pop lods adc gs cs add pop arpl test movsl mov inc sub (bad) jg sub (bad) mov (bad) out push or aaa out iret aas cltd inc (bad) mov out dec sbb das in inc sbb dec inc pusha sbb pop dec mov out sbb push mov xchg and stos aaa scas outsl push orb mov jg jo sarb mov jp (bad) (bad) rclb push outsl (bad) and lcall sbb rorb out sub mov movsb xchg push add push add nop mov fild or lock mov add add les movzwl sbb mov mov aaa sub xor dec adc or out aaa mov pop neg mov pop bswap and je (bad) pop push pop rcll ss push insb xor scas jg imul xlat ucomiss or pop and scas (bad) idiv pop orb jnp xchg addr16 (bad) xchg pop roll js xchg outsb lahf xchg mov mov mov sub mull (bad) mov pop out (bad) push mov pop test dec mov stos (bad) jg jg insl insb fidivl rcrl ja insl pop adcl ret test pop mov insl sbb daa fidiv movb outsl (bad) mov ficompl out (bad) dec roll aaa sbb (bad) sbb (bad) xor jg pop or inc fistpll imul jecxz das jg xor lea push mov pop das (bad) lea das jg mov es (bad) out mov xor inc out (bad) inc pop incl inc pop xor or mov mov rol aaa inc pop lds xchg pop xchg subl push aas or pop aas mov pop xor scas lods mov mov (bad) decl lahf das dec ficompl pop lcall arpl xchg lcall push push add int3 and gs mov adc addr16 mov xor outsb arpl pop lcall xor cmp arpl mov gs dec ds arpl dec jae pushl or jmp in lods jnp push cmp pop je xchg inc aas out js mov addl push push dec loop inc sbb and inc cmp lahf pop inc cmpsb inc pop imul mov push xchg mov pop rorl daa ljmp pop adc dec (bad) jb jbe xchg cltd cmp push popf mov jmp fmull andl mov les aam leave pusha ja insb sub pop push lcall dec jecxz inc lods inc sarb fdivrs mov and je mov (bad) (bad) decl inc rorb mov jae lret fmuls (bad) in mov incl ljmp xor pop (bad) decl lods mov repz dec rcll das (bad) rol pop push push arpl ret in push aaa inc xchg jnp out fs rdpmc push pop dec sub jb repnz or rcr dec dec (bad) jmp cld aaa ljmp test cwtl mov insb sub push jno push scas lcall sarb lret jmp add adc arpl dec std insl add add add inc xor push push pop and rclb stos push push add sbb lss or pop (bad) mov xor mov push or add ds adc and xor dec nop clc mov aas pop adc sbb imul insb add clc push adc mov adc push push cmpsl (bad) and enter pop push imul sub cmpsl xchg sbb shrb adc sbb sbb add or sbb dec insb frstor icebp mov nop push enter pop ret movsl stos or mov sbb xchg neg repnz iret outsb mov add pop pop xor imul inc mov les add cmp fnop adc inc or xchg and (bad) add cmp or jg or push jecxz jle and test out js pop (bad) xor sbb pandn rolb mov ret add sbb fimul aam cmp mov lret ret adc aam test (bad) icebp mov cwtl xchg or dec pop shlb ja add and cs (bad) push add mov das pop sahf or or sbb dec out jno repz cmp mov sub data16 sbb pop mov cs push push and movb mov add aas xor adcb test or nop and inc and or jmp (bad) xor or add stc pop test push jecxz xchg (bad) into adc ja pop fldcw enter aas dec mov leave sub movsb sub sub mov aas pusha dec push adc movsb aas add push mov mov dec sub dec roll or stos mov mov fadds std and sbb adc test nop push add or inc adc fisubr inc cli in cmpl iret dec push add adc inc movsb repz or jle lods add or xchg out dec test loopne mov push and cmp bound stc fsubrp stc adc mov ja pop cli adc fdivr xchg dec inc inc or call dec out inc add jge dec or jns inc or dec pop sub jle and pusha cltd enter jno add sub mov push mov push es push cmp inc and push and cmp or sbb jns cmpsl imul js or or in frstor and xor add xor adc nop adc (bad) jae in add sbbl add fidivr add push xor push sub pop push dec cmpsb push nop xor xor dec int3 cmp xor gs mov outsb popa in popa insb cmp xchg movsl cmp or jne sub ja dec dec xchg in jae xor aaa arpl add es mov push xchg push std (bad) sti mov push dec sbb inc (bad) add or pop fldl aas ud2 or push addl adc adc (bad) sbb sbb sbb pop and push and push pop push mov push or push push adc adc add adc mov adc push lods fadds add (bad) push cmp pusha add cs mov push add xchg add dec incl inc adc xor dec jmp push jae xchg mov push xor rcll and inc bound push mov ficoml sub fisttpl fstl adc add push push dec push or add xorb push aam pop (bad) ljmp pushf adc jno mov xor loope push bound movsb push fdivl push mov jo add inc adc sub lods roll and push (bad) ret cmpsb push dec and push dec mov fstp (bad) (bad) (bad) lcall fstpl aam jb xchg lods dec lods cmp push test lds sbb out imul call inc loopnew pop pop or test adc mov (bad) jmp sbb stc stc xchg flds stos inc dec cli dec sub jnp (bad) xor (bad) (bad) jmp adc mov jecxz pop cmpsb jne inc dec pop out push cli leave fmuls jmp or stc cmp mov in sar (bad) (bad) jg cwtl push imul out jne sarl cmp gs mov mov (bad) (bad) ljmp cmp in test mov popa push clc adcl or call in jmp xlat pushf mov lcall fist mov fwait sub adc dec iret into xor outsl shrb (bad) mov push cltd sbb jmp adc aad jecxz call cmpsb mov or rorb mov sti push fstl xchg xchg jge lcall mov sub pop mov into nop add popa hlt cmc test pushf (bad) ljmp jne pop mov into es push push mov ret int3 outsl imul (bad) call pop lcall (bad) cmp faddl cmp repnz stos das pop gs das clc (bad) decl lcall mov fildll frstor cmp mov push ljmp xchg cmp push aam mull loopne jnp pop jno fsubrl push mov xor subl xchg mov inc dec icebp xchg xchg sbb mov stos sub nop add movsb sar mov xor jo mov enter add add inc pop push adc call dec push pop icebp (bad) inc (bad) out jle jmp ds fidivl test xchg insl jns adc clc inc jg or ljmp sahf xchg xchg jl cmp rclb jnp inc sub inc outsb cmpsl cmp mov and push rclb in adc jne movsb xor and call movsl lods imull rcrb (bad) (bad) pushl mov aam push fs (bad) mov inc and inc add cmp jnp (bad) (bad) (bad) pushl jno mov mov add (bad) das jb xchg cmp and lods aad lcall (bad) (bad) (bad) (bad) incl or fcoms mov aas adc mov std jae icebp xchg lcall xor adc xchg xorb cmp xor (bad) (bad) lcall add xchg xor pop jns inc pop jmp (bad) mov es test scas add cld (bad) (bad) (bad) call sub (bad) mov jmp xor icebp mov mov sar fisubrl (bad) icebp les xchg nop mov jg inc push sub shlb and xor xchg int gs (bad) incl and jne mov inc mov test shll out imul mov sub sahf mov dec xlat dec cltd xchg sbb rclb ret mov (bad) (bad) (bad) (bad) jmp adc cli jae je cmp xor mov dec loop mov aas (bad) xor cmp (bad) insb sub iret push jmp jge cmpsb mov test (bad) call sub sub cmp orl mov stos mov rcrl cmp push xchg and negl lret mov ljmp mov push in iret fs test jne cmp and inc add fcomip decl js mov nop push (bad) and cmpsb push mov pop cmc fild and push jb cmpsl es cltd mov mov decl mov cmpsl gs js test cmc and out fdivp mov (bad) mov pop mov (bad) (bad) lcall pusha push cmp dec cmc jb mov pushf int movsb hlt in rorl daa add jbe movsl add ja add and xchg dec (bad) fistpll mov xchg loop dec inc mov sbb outsl mov push adc call cld jb cs lret or (bad) pop pushf add or push fs jg (bad) mov stos add pushf inc inc jno push cmpsl mov stc mov (bad) pushl and xchg pop cltd pop dec (bad) xor xchg and outsl movsb cli dec (bad) (bad) ljmp bound leave loopne lods int push lods jmp out (bad) xor xchg ljmp jnp cmpb or jae cmpsl pop test test jbe in mov mov push iret cmp lret aad pop inc inc push in jo jle hlt cmp (bad) (bad) inc add pop mov add pop test insl adc dec mov mov (bad) (bad) cmc xchg pop push repnz in xchg xchg inc into add push in out clc (bad) (bad) fstpl xchg testl ljmp mov (bad) pushl mov dec sahf sahf popa mov (bad) icebp add and into bound mov pusha sub lcall sub pushf scas sub out jge int3 pop jg xchg cli out jecxz cmp xchg sub xor adc aaa mov sahf cmp iret ljmp xchg mov mov (bad) (bad) fidivrl pushf fldt jns andb push cmp sbb (bad) lods cmp dec mov pushl cmp stc dec push jle aaa (bad) (bad) lcall roll aad aaa lcall ret lahf mov popf pop inc mov cmp (bad) int3 divl (bad) (bad) dec lods dec jle inc mov out mov and pop jbe aad xlat add cmpsb dec sub (bad) (bad) dec out xor lods jo (bad) mov test push ret idiv lret and (bad) (bad) pushl cli pushf insl pop xor jo xchg cmp ds gs or (bad) lcall sub mov ret je mov mov (bad) aad faddl icebp (bad) ljmp je adc into add test adc (bad) call (bad) jns mov mov push cmp cwtl fldl jg test cmp and mov push cmpsl test dec (bad) push pop jmp adc incl lods cli xor lock mov mov lcall xchg or punpcklwd sbb push and les mov push stos (bad) (bad) (bad) jmp and or sbb and push popf movsb jmp push aaa add (bad) (bad) lcall in and sub cmpsb aam mov jmp dec sbb out (bad) (bad) (bad) mov push and and jae insb scas mov lret test (bad) (bad) lcall push test insb test out in mov jbe mov jp ret stos (bad) fcomip push mov push cmp push aas jp pop sub insl pop jp fildll inc cwtl xlat xchg mov lods xlat adc (bad) call sbb and sbb adc cmp sub xchg sbb lea mov call add cmp mov push pop in mov adc mov aaa je sti popa jnp cmp nop mov lahf push or lcall std sub xor call int lret mov cmpsl faddl jmp jno out sahf or mov sub imulb neg xchg cmp (bad) call or add sub jno sub jno add repz xchg std push adc mov ljmp gs (bad) (bad) (bad) mov (bad) rcl adc jne mov inc sub sub pushf cmp (bad) (bad) (bad) (bad) (bad) (bad) pop cmc stc sbb and ss bound and jae (bad) xchg movsb icebp mov or pop add xchg dec cmp (bad) jg lcall aaa fimul repz push mov out lds repz fcomps test hlt and sahf ret inc cmp cli lcall (bad) negb loopne incl leave jecxz and cld fs inc jns test (bad) decl fwait scas mov mov popf cmpsl ret ficompl pop jb adc adc lahf les mov mov (bad) (bad) (bad) jmp xchg pushf sbb (bad) in movsb insb les dec sub fbstp je mov aas sub outsl mov std fcmovnu es sub and stos in lcall (bad) (bad) fildll cli ljmp push je data16 das shl mov clc sbb cli (bad) (bad) mov (bad) cmp mov jne cltd pop xchg out pop adc test fwait (bad) (bad) (bad) pushl movsl dec cmp adc sub fstl dec je push sbb mov mov incl sub jnp add ja fistl push lcall and jae jae repz (bad) mov aas cs adc mov dec sub adc and sub (bad) (bad) (bad) cmp fstps clc and push add test (bad) push mov out sbb ret insb add std (bad) incl push xchg push popa sub cwtl dec fnsave movsl and adc repnz jb je scas (bad) (bad) (bad) (bad) cmp pop inc push dec and or loopne fcmovne dec out cwtl xchg sub movsb in add (bad) call into movsl popf lock xor or push inc add pop push sbb scas daa aam fdivp sbb mov sbb cs call jno jp adc pop ret mov arpl (bad) mov aam aad (bad) lcall cltd xchg jmp iret mov popf popf push mov add out mov sar (bad) (bad) lcall mov adc xchg mov cmp stos xchg cmpl (bad) (bad) (bad) decl push jecxz je or (bad) xor xchg pop sbb adc fadd mov fisttpll cmpsb jle xchg pop sbb cld loope inc out mov cmp ds ss or dec jle in jmp xchg std rcll xor dec jno fidiv xor mov daa stc lds mov jmp fs (bad) jne into (bad) (bad) (bad) (bad) js mov dec pop lret push jb bound cmpsb xchg mov inc mov jne or ret (bad) (bad) lcall jb adc jg jmp xchg add fwait and sub (bad) fcmovnb dec sahf leave lcall fcmovbe cmp (bad) jg jno outsb sub cwtl insl daa andl sahf adc je cs int fwait daa das (bad) (bad) (bad) jmp es popa xchg sbb test jo xor mov (bad) mov jbe xor call andl mov rol inc mov jbe sub (bad) fcomip push lret pop xor mov pusha das mov dec test out sbb ja bound in xor sbb (bad) in addr16 pop cwtl dec stos cmp in dec sti add cld ljmp xchg in push repnz cmpsb std (bad) outsl lock push es cltd pop (bad) (bad) (bad) jmp dec mov stc inc pop push pushf pop sub pop jmp pusha test dec and (bad) out mov (bad) xchg popf in xchg daa cmp dec inc xor stos lea test gs push cmp mov pop repnz repnz rcrl sbb out and mov popa (bad) fstpt frstor cs ret aas (bad) (bad) (bad) jmp jge outsb in sbb into test insb sub xor inc mov mov mov outsl cli lcall push sub daa push (bad) imul je dec xor jns (bad) (bad) (bad) (bad) jmp and outsb mov mov sub add push es leave dec jo and (bad) (bad) (bad) decl mov cwtl fmulp mov inc adc push stos mov or xchg or mov pushl mov mov xor je rorb lahf mov sbb dec add add outsb mov ja (bad) mov test insb jno cs cmp dec xor dec movsb mov xchg cwtl xchg jo add mov ret xchg (bad) (bad) (bad) push leave inc fdivrl and cmp mov test add inc sub sbb int imul adc daa add arpl or or es add pop dec jge pop mov (bad) xor subb je in push fwait mov enter scas stos imul jb xor jb aas lret lret pushf add aas frstor lods cmc add (bad) (bad) (bad) inc mov les dec hlt mov mov es sbb mov aam fcomip (bad) ljmp cmp add push jne or out jge lret pop jae dec ds stos (bad) pushl imulb stos es mov add cmp and test (bad) decl dec sub cmp sub xchg xchg shrl fbld insb lods (bad) mull cmp pop add add add and mov cmc inc dec js pop dec inc pop lahf imul call movsl sub add mov xchg sub lods dec mov js inc in (bad) (bad) call jmp pop push push loope,pt xchg push jno loopne inc std xchg popf adc mov xor pop mov push and adc pop cmp inc fidivl lods dec ret mov cmpsb xor and jmp in jbe divb and sahf mov data16 insl push cld in mov add mov lret push daa js adc ljmp bound adc push adc pushf fisttpl pop not (bad) (bad) incl xchg dec in and push push xor push fisubr shll jmp orl mov movsl out adc fwait aas xor mov (bad) cmp call int3 xlat lods sbb cmpsb stos dec jne enter mov adc (bad) decl cmp mov gs push cmp mov push xchg mov jne cmp sbb or ljmp (bad) and cld sbb out sbb (bad) (bad) mov push movb xor xchg sahf pop push out stos cmp cmpsb (bad) (bad) (bad) jmp pop gs inc add movsb inc cwtl mov pop jno mov mov xor (bad) (bad) jmp shll mov lret xor add pop xor dec pop jmp (bad) adc (bad) aam loope rcr (bad) ja (bad) (bad) incl sahf pop sub jnp mov sbb test repz jne sbb cmp xchg shlb push ljmp decl dec inc decb inc push xor clc sbb or movb movsb mov decl push cltd daa lahf in sub cmp inc push iret sub inc and inc pop lods mov (bad) (bad) incl mov cmp and popf dec add int3 lods sbb cmp adc lods jns (bad) (bad) (bad) jg cmp xchg mov les inc add push dec push or add loop push (bad) (bad) (bad) (bad) out mov in push dec stos sbb jo (bad) into adc test mov pop jne mov xchg ret (bad) cwtl test fstpt mov stos leave sbb test (bad) (bad) (bad) inc shll pop mov popa mov mov out add daa stos data16 (bad) (bad) (bad) incl clc mov ds cltd (bad) xor lcall dec scas leave in mov mov mov incl lods adc inc sbb sbb push sahf lret push in stc (bad) (bad) (bad) call xchg scas mov cli and cmpsb rolb fwait enter test xor out fwait sar inc movsb pop adc (bad) mov sub movsb loopne ret mov sub sbb (bad) in lods jp lcall dec mov dec test inc testl xor (bad) (bad) (bad) ljmp xchg jmp fcmovbe jno xchg dec int lock lods sbb mov mov ljmp mov jae stc push dec aam popf sub mov (bad) (bad) decl dec xchg jp mov cli clc adc push fcomps push popf mov mov dec push mov sub xchg sub push push mov repz cmp and cmp out cmc add xchg mov outsl cli jg test adc sti inc inc jl sub lret add or decl add mov stos es cmp sbb and mov inc jbe outsl and jno leave int3 mov (bad) cwtl (bad) sub (bad) (bad) incl rol pop xchg cmp mov mov into sti (bad) pop fisttpll stos xchg dec ljmp (bad) (bad) sub popl pop int3 repz mov (bad) (bad) pushl mov das inc aam shr xchg sbb mov push pushf adc cli push loop lahf ret mov push mov out stos popf stos xchg cltd xlat pop imul stc fwait mov pop lock out xor mov cld (bad) (bad) (bad) (bad) (bad) jmp pop xchg cmpsb xor or pop xchg (bad) fs mov sub (bad) (bad) (bad) jns add testl mov xor cmp inc es sub (bad) (bad) (bad) jg in out jecxz loopne mov pop sbb mov fucomi lock xchg dec lret nop jl (bad) (bad) (bad) jg xlat xor gs stc je mov push cwtl insl mov add clc (bad) decl in push xchg leave push and cmpsl pop fdivs fistl lcall in jae xchg js in pop push add mov adc adc stos mov jns,pt adc mov cmpb xchg lcall loopne mov push lods (bad) cli mov sub xchg ljmp (bad) jmp jmp add cmpsb (bad) imul dec dec (bad) sbb (bad) (bad) ffreep cmp pop sbb jnp leave aam xor outsb sub mov fs (bad) (bad) lcall cmp pop sub out mov in mov xchg mov testl xchg lock (bad) call rcrl push out sub jb push adc xchg cs xchg lcall in mov (bad) or xchg in adc in adc (bad) (bad) std shr int sub push push imul in jle push lahf fildl movsl mov insb and jns jmp push mov cmp lcall incl (bad) test mov (bad) out in push cmp lcall (bad) decl jo movsl mov je pop punpcklbw push std icebp aam mov ljmp dec jmp test mov (bad) out (bad) (bad) (bad) lcall mov inc arpl sti adc arpl inc mov cltd mov adc fldenv das cli jmp dec in sub sahf pop xchg push mov mov mov mov popf in (bad) frstor cmc loopne fidivl adc cld (bad) (bad) lcall (bad) repz inc xor push mov pop mov mov cltd sbb lock cld ja addr16 cmp xor out mov or (bad) (bad) fild push out cmp (bad) lcall movsb cmc sub sbb jbe (bad) (bad) ljmp dec mov jb outsl dec jb in negl sbb mov sub jp (bad) (bad) (bad) fnstenv dec push fs adc push ror int3 mov push mov sbb pop pop scas xor das clc incl (bad) and push and out ds sbb jbe push xor (bad) (bad) decl push xor ds (bad) xchg or ret (bad) jbe shrl xchg leave push and pop mov (bad) call std loopne orl push push dec adc les (bad) (bad) ljmp mov xchg insl test adc adc lock pop icebp cs (bad) (bad) pushl jecxz sbb iret loop fistp popa jmp mov mov xchg mov push xchg sbbb sub xchg pop pusha sahf cltd cmp xchg leave daa (bad) decl and es dec test (bad) jg jbe sbb pop inc cmc mov bnd sbb hlt lock cmp cmp pop sbb sti mov jecxz dec push (bad) int loop mov push aad mov lcall stc imul push xor (bad) (bad) (bad) call add popf std sbb aas mul mov shrl mov (bad) jnp imul pop outsl (bad) aas lret or fsts ljmp (bad) cmpsl pop test dec mov (bad) mov push push ret (bad) xor imul lds cmp cmp adc (bad) ljmp rcrb mov into or xor dec repz (bad) (bad) jmp jle fbld cwtl sbb mov loope jle es xchg pop and push jo jmp decl xchg jbe repz sbb testb sahf mov sub movsb cmp push scas jge sub adc out inc jne mov lods popf call out cmp sbb in cmp dec mov mov (bad) decl out lcall adc rorl call pop (bad) mov (bad) in (bad) jmp jae push cld dec sub push mov rcl arpl addr16 mov jg sbb add orl push in mov mov jbe aas dec test mov stos orl out addr16 (bad) (bad) (bad) call cmp cltd pop xchg push aad cmp into and jl cmpsl mov mov outsl mov dec mov and fwait (bad) fcomip adc pushf jmp add push mov xchg enter xchg or inc xchg adc (bad) ljmp jb cmc call mov (bad) cmp (bad) mov movsl dec dec adc bound movsl mov call scas mov cmp (bad) pushf sbbl out sub (bad) jae lcall sbb fiaddl cmp popa (bad) (bad) (bad) call or add jne les imul xchg jp sahf push out pop cli (bad) (bad) (bad) call or adc std adc addr16 test lret data16 mov (bad) ljmp mov cmp stc add (bad) xchg xor push jl cmp push cmp add cmc mov jnp fcoml (bad) out xor je gs pop xor fidivl (bad) (bad) ljmp (bad) sbb push lret arpl and (bad) mov push xchg cmpsb (bad) pop (bad) lcall xchg mov mov das mov imul cmc arpl (bad) (bad) mov and push add xor sub (bad) (bad) (bad) jg inc push lcall imul mov in push cmp push stos fs je lahf stos (bad) (bad) (bad) dec ljmp lcall jne add test mov xchg dec fwait dec jle (bad) (bad) jmp nop repnz and xchg outsb mov out cmp mov ljmp ret cs (bad) (bad) (bad) cmp test cltd pop jne fwait push rclb mov xchg cwtl jmp (bad) decl xchg or icebp mov xchg lret or testb jg pop imull or aas inc scas add jmp mov sti pop (bad) (bad) (bad) jns pop or jne pop out push negb jecxz jo cld daa mov push sahf add int3 outsb rcr bound lcall push loope (bad) into xor lret mov sbb fbld pop addr16 jge ret (bad) ljmp or test sbb pop inc call dec sbb (bad) (bad) decl push push mov cmp fstpl das inc es in mov push lcall and pop ja fwait sbb push sub adc ja dec leave lret and ss fs mov sub mov (bad) and mov ret test adc xor sub mov cmc jmp aam mov mov adc or ja (bad) mov cmp jmp cmp sahf jb jecxz call xlat sbb lea lcall sub (bad) cmp ljmp push ds lret fs dec cmpsl cmp insb jno cli inc xchg (bad) (bad) (bad) ljmp mov ret sbb pop lret add aas div ret xchg dec mov pop (bad) jno (bad) (bad) (bad) lcall icebp (bad) stos dec pop jno inc repz add mov adc mov data16 mov jnp (bad) (bad) (bad) lcall mov test xchg test out ds repz or mov jp mov push cli pushf jp (bad) mov pushf xchg in hlt dec sbbl push mov gs cwtl std adc sub pop (bad) (bad) (bad) jmp fwait xchg test es imul or push push lods aas jno cmp push lcall in pop mov cmpsb loopne mov pop idiv pop mov or lret loop sbb ret fmuls sarb (bad) (bad) incl inc cwtl cld push popa movsb mov rol insl mov dec cmp bound ljmp mov add ja pop and mov jmp or add inc pop pop out in jg inc stos cmpsb enter (bad) (bad) ds push int sub push push fildll xlat out sub decb mov (bad) (bad) (bad) mov dec or into cmp mov and fucomp leave out mov out stos adc lea cld (bad) (bad) call lcall mov pop sti push test lods sbb daa shrb jg dec mov call push sar dec movsb (bad) (bad) decl imul xor int3 push lock xor pop mov inc add (bad) lcall sbb adc fsubl (bad) xor lahf das and inc in stos pop (bad) (bad) mov lods xchg xlat test dec (bad) jnp cld and jbe or mov cmpsl bound and lds arpl ss inc fidivrl call ret cmp lret outsb jp add cmc (bad) mov sub hlt mov push mov push ret cmpsl push ljmp mov fcomps imul (bad) (bad) inc jae call sbb pop adc movsl inc movsl dec mov mov mov inc (bad) jmp mov jge (bad) push mov fist shrl xor jg and clc xchg popa pop adc rorl (bad) pushl push mov lret mov or shrl insl leave pop xchg imul add lcall mov movsl add pop jo pop (bad) (bad) test fnstenv mov (bad) (bad) (bad) lcall cmp (bad) xor push mov out push hlt xor test call fstpl out (bad) (bad) (bad) ljmp int test rorl lods sti jo mov jno jno cmp pop ljmp cmc and in push mov push (bad) test gs (bad) (bad) (bad) (bad) mov lret lds out add sahf jle lea inc dec enter call lret mov push in mov lock sbb cld mov subl rclb xchg test adc in push cmp imul adc sbb shlb dec rol les cs mov mov (bad) cs add insb incl jg cmp mov sub push and add or sub or test add (bad) negl sbb cmp mov testl and cmpsl ljmp add add add fildll lds stos add lret das ss aaa add js jl add add mov mov mov sub add out cmc add icebp hlt push jg outsl fwait repnz lock out jmp add jmp add out adc mov add mov fwait int adc mov push outsl lcall movl into int add into ror enter repz loopne mov mov add add insb ficompl add fildl aam (bad) dec enter cmpsb jns outsb rcl rolb rcl int into idiv ljmp rol mov mov mov mov lods lods scas add ja fiadd adc and lcall rcl xchg (bad) fadds (bad) fild (bad) jp imul in push in ja sub pop xchg xchg cltd es jbe inc sbb fistpll cld in (bad) (bad) dec push out out jmp jmp jnp in int3 int3 add add loopne ds mov dec scas scas mov (bad) dec xlat add imul add lock data16 mov add sarb fimul fneni(8087 (bad) ss leave mov ss (bad) dec aad roll jbe loope pop xor shl aam aad push test out ret into into lret out cmp mov lods push stos test in (bad) incl movsl add jp add mov pop fcompl ret mov in mov mov cli sub testl push insb (bad) into cld icebp add fidiv jno and cmpsb mov (bad) int jae dec mov jle mov pop mov movsb test in (bad) insl movsl scas mov stos mov scas push mov push add mov mov jecxz xor decb mov (bad) out shrl insb insl outsb add pushf into test test push lahf jbe mov push adcl push fwait lods xchg (bad) pop mov lods mov mov mov push mov sbb xchg jbe mov scas scas push pop mov jns,pn ss mov dec xchg sbb push pop cmpsl inc mov (bad) mov push and inc std push jno bound es out cmp xor aaa out cmp idivl outsb aaa mov cmp mov insb xchg aas sarl rolb inc fisttpl push pop rcll bound jnp ret pusha ja push rcrb jbe push es dec sub jecxz in repnz fidivl jle jp lods (bad) into mov mov aad sub incl xor or mov add add repz cmc div idiv outsl xchg movsb mov aas fsubr out push or ds out out sub repnz insl push dec rcl shrl fildl (bad) rcr ss fnstsw mov jecxz in popf out sub add lret dec xchg (bad) ss aas lcall add leave mov ret aas scas scas mov mov dec dec jg mov mov aas (bad) pop xchg adc fwait pushf popf sahf lahf mov mov pop cld jnp cmp nop xchg xchg xchg js pop jae add out add xchg mov add jnp cwtl mov repz jg addl popf push and xchg and add xchg jmp mov add stos push pop imul iret cs add add pop (bad) pop add pop hlt pop sub pop pusha inc aas dec push push push inc push push scas and xchg fmuls pop pop xchg (bad) call aas inc inc inc cmp inc inc dec dec dec dec dec dec dec dec cmp or and add push and in (bad) inc adc or aas sub lcall xor xor xor cmp cmp ds inc jg (bad) (bad) incl and sub sub pushl js add adc add push add add push and and dec (bad) jg mov adc sbb sbb push push (bad) push or push push jl push fcmovne movups in push pop call push dec imul pop lock (bad) imul incb jg out scas xchg add pop (bad) std (bad) mov enter lcall add add aaa adc cmp pop add inc add dec lahf inc adc rolb pop or aas loop repnz add sbb adc push add xchg and mov add pop movsb mov add test repnz jae add (bad) mov aaa adc or aam flds pop or pop or mov pop dec pop adc fsubrp push or nop adc mov xchg sbb lods mov pop mov mov jg test inc mov pop in cmp out (bad) and rolb pavgb pop rcrb pop loopne scas mov lock pop clc lock aas std loopne jg jmp mov stos add sub or lock lret xchg and aas cld jg jmp xor mov test inc in and inc mov lods movsb mov pop add add add or in add sbb jb add in push xor in and mov mov lahf xor (bad) (bad) inc cmp xor out mov cmp (bad) and (bad) cmc icebp mov push das jecxz add pop inc pop add or xlat pusha call push pop pop or cmp mov jae fiaddl adc or mov push divl inc or mov add and add add dec sbb push adc fidivl lret js add bound jge jg (bad) mov inc push adc pop and and or inc scas add pop or and bound or (bad) js pop jl push test xor inc inc inc je xchg xor rcll flds dec jne xchg or mov test test ret mov negb pop push xchg adc xchg dec adc scas pushf cmp adc jmp pusha and inc adc test add adc add lea inc mov or xor adc shrl icebp mov inc roll (bad) mov add negl scas (bad) mov rcll pop (bad) jne and (bad) decl or sbb mov sub js ja rolb push imul inc sbb jle clc inc (bad) negb fimul (bad) (bad) (bad) call mov shr cmp nop iret outsl in cli xor ja (bad) nop or ret lock stos icebp dec hlt out cmp movsb mov popf movsl in iret fldcw (bad) jg inc out repnz cmpsl bound pop or xchg (bad) jl icebp paddsb sti inc pop int pop pop fcompl js (bad) (bad) dec pop leave or add (bad) (bad) (bad) pushl sub sbbb xchg mov pop cs data16 cmc mov leave fnstsw hlt cmp lfs xchg mov mov jp mov mov cmp xchg jge ret ja pop dec (bad) lcall push adc dec and sub sub add pop (bad) (bad) (bad) push xchg mov loope int out pop dec fcompl and dec jb outsb jmp xor into adc out (bad) (bad) ljmp (bad) ds (bad) jbe push pop aam mov mov mov (bad) (bad) incl mov and mov fcompp xlat lock or daa push xchg fsin (bad) (bad) call movsl sub xchg inc jmp nop xor pop movsb add lahf adc cmp (bad) decl dec jns ja imul (bad) lahf ja out neg mov (bad) jle sub repz loopne (bad) (bad) (bad) jle loopne add hlt das mov cs and mov dec (bad) jne adc sub push mov sbb or loope pop (bad) (bad) (bad) fcomip clc cmp cmp pop test cmpsb (bad) ss in in sbb jo (bad) (bad) decl add pop inc call aas push aad xchg repnz ficompl jmp sbb pop pop repnz mov jbe sbb aas mov xchg lock (bad) (bad) (bad) ljmp div imul repz xchg ret mov push pusha pop cmp into cmp jno div (bad) (bad) (bad) pushl mov div mov (bad) cmpsb ljmp jo decb popl (bad) call push aad insl adc in xchg mov jg sti add ja inc sbb jg and cmp rol or adcl (bad) (bad) (bad) in jle jg sbb imul imul lods and pop test jp xlat scas inc loope (bad) (bad) (bad) (bad) ds cmp pushf mov jbe stos pop lds jne add inc popf xchg jg jo (bad) (bad) lcall jns inc jae popf sti insl dec mov or (bad) clc lahf lock mov mov aad (bad) (bad) (bad) (bad) jg jnp jbe lods adc out xchg jbe cmp rorl stc mov lahf ficompl scas test (bad) jmp int3 jecxz push push mov lret data16 (bad) (bad) (bad) call clc jmp lahf push das scas mov jmp loope xor cs scas sbb mov (bad) (bad) (bad) inc rcrb iret inc imul mov mov jbe cmp pop lcall jmp in push dec popf mov mov adc push pop pop rcrl (bad) jg (bad) clc adc outsl hlt int insl dec out xor scas fsubrs mov lret bound jne (bad) jg mov or lret adc ret mov cmp lea imul pop stos pop leave (bad) jg ljmp jb mov cmp mov jecxz xchg stos data16 or (bad) incl outsl inc stc mov jmp xchg in pop repz repnz (bad) xor je (bad) incl (bad) xor cs rcl jne and xchg rcll mov inc add mov loope mov sbb push cmp nop ljmp (bad) cmp lea jns sti fwait or lret fsub xchg push push push sarl and (bad) jecxz pop fbstp xor mov xor (bad) (bad) (bad) mov gs negl stos adc lea loope sbb push (bad) pushl fimull xchg outsl adc pop dec ficomp xor (bad) (bad) mov sub jb mov pop hlt sub cmpsl daa mov mov cld into sbb loope test and scas cmpsl xchg cld dec add in cmp repnz loopw jne sarb xchg add std and mov pop add jae (bad) (bad) decl adc outsl lds sarl insl cmp je mov fmull pop (bad) call js sbb dec nop jno scas jae cmp add pop or sbb pop hlt or imul movsb fcompl sbb (bad) jmp (bad) fildll or xor lods test test (bad) push jg clc loope (bad) xor jg mov mov mov sbb and out decl sarl iret jbe cmpsl xor mov and sti scas jmp jns sahf pop xchg arpl (bad) (bad) mov mov (bad) (bad) (bad) (bad) in aas pop mov lock ja jl jb les adc inc sbb rorb jg in add shrb pop cmpsl pop clc out lds xor dec test stos (bad) repnz sti insb mov sbb (bad) (bad) pushl add pop or loop cmpb loope stos jmp (bad) (bad) (bad) ljmp adc in insb push fwait and jno mov mov insb cld insl jb repnz pop adc cli decl xchg loopne ret fdivr pop cld das jb int rol push test mov lcall mov mov movsb lcall mov rcrb push aad sub ljmp in xchg fstpl (bad) (bad) (bad) incl bound (bad) movl jmp mov scas and push (bad) sbb cmpsb dec nop push cmp and push les jp clc outsl loope push xor mov (bad) jp scas stos stos dec addr16 movsl sbb xor sbb lea (bad) pushl iret cmp mov lods stc jbe mov scas pop xchg pop jb enter (bad) (bad) pushl add out xchg fildl repz in lahf jae cmpsl aaa ss xorb jmp cmp mov sbb (bad) (bad) pushl inc xor xchg sbb mov inc add mov in inc sub (bad) (bad) decl mov bound int loope es (bad) ret out xchg mov adc pushl dec or lcall arpl loop ds mov aaa std call push out pop std xchg mov dec clc lods xor loope pop inc pop popa mov (bad) (bad) (bad) jmp sbb leave push iret popf mov mov test popf xchg jnp imull fwait (bad) jmp adc test fidivrl push shl xchg sub inc ds and ja mov addr16 sti xor aam xchg sbb xchg pop mov (bad) (bad) jmp sti cmp int pop fs loop fistpll mov repz mov popa jge pop pop add and popa call das xchg xchg arpl fwait (bad) (bad) cmp addb add in mov js ret mov push ret and pop imul daa arpl in jbe pop push jns bound add dec imul decl outsl mov push cld sbb imul fs (bad) xchg mov (bad) mov mov outsb lret sbb ljmp lret inc lahf imulb adc jae pop dec loop push loop fnstenv in ret cmp mov les ja aas rcr pushf arpl lcall xchg jp jmp sub xchg sub xor fcos (bad) (bad) out (bad) pushf xchg sub sbb aaa xchg movsl (bad) fmul loop sbb jne dec pop lock jmp out insl jg xchg cmp mov cmp inc jo outsb insb (bad) imul xor imul cld call mov stos push scas or outsl xor xchg ret pop inc sbb movsl mov ljmp movsb xor adc xchg inc adcl fild (bad) (bad) jmp jl cmpsl mov lods push test test sub testb aad cli lock push enter icebp (bad) mov clc mov or adc into inc clc es pop or (bad) call mov or andb xchg jge jb cmpb jge lock cli (bad) mov aas adc fldt movsl mov cmpsb fsin jmp or out sub push push stc (bad) jp (bad) out clc mov lcall mov mov inc adc mov fidivr (bad) fcomip mov sbb test scas jno or loop and cmp (bad) (bad) decl add xchg je pop loope (bad) mov push lret lods imul gs in repnz sub sbb in add call fadd lds cmp sti (bad) pop adc dec mov arpl xlat rol xor (bad) xor (bad) aaa cld aas dec dec fidivrl (bad) fild outsl (bad) (bad) (bad) call jmp sbbl arpl mov in cmpsl mov (bad) movsb inc xor mov (bad) (bad) (bad) call fs dec adc out pop xor dec mov pushl sbb shrl cmc das or sub movsb jo mov (bad) (bad) (bad) lcall push mov inc cmp pop sbb cmp pop pop outsb add (bad) jmp pop pop jge mov xor or nop in fcomip jmp xchg daa and push lds lock loope or popf incl cld (bad) cmp es outsl lods lods adc cli in fldt (bad) (bad) (bad) pushl daa jo xchg imul aas pop jl clc mov mov sbb cmpsl fld movsl jmp scas (bad) mov outsb rcrb adc (bad) fist scas (bad) pop xchg xor lret mov ret icebp mov sub inc (bad) (bad) (bad) (bad) (bad) cli mov test mov (bad) mov ds arpl enter lea pop cmc dec pop push hlt das push jl icebp jbe loop mov xchg loop inc (bad) (bad) (bad) out movsb dec add call push mov aas mov lds data16 cmp xchg ja (bad) jmp icebp (bad) rcrb mov dec xor fs xor loope jg jne mov add cli xchg push shlb (bad) fcomip call outsl dec xlat push xor mov (bad) fstps cmp xchg ret lret daa pusha cld call test xlat leave popf (bad) mov jmp and ss leave dec mov sbb jp (bad) (bad) push scas mov hlt popf cmp mov movsl cmc xchg movsl mov and (bad) (bad) mov test inc ljmp sar adc sub inc clc dec mov aaa mov mov mov add pop loop mov aas test mov inc cmp mov lcall jne test push dec call cmpsl movsl push adc lcall or lods int3 xchg dec (bad) gs loopne mov mov shlb pusha imulb dec call mov fwait sbb int3 test pop add (bad) (bad) incl cmp cmpl mov outsb arpl je repz sti scas cli pushl ret jnp jle lock xchg lds mov rol (bad) (bad) jg pop stc cs lret fildll dec out xor stos sbb pop in sub pushl xorl push fldt or dec aad or xchg je nop leave (bad) sar incl andl sahf jnp inc loope sti (bad) push imul test cmpsb cmp mov into jns mov pop call cld out sub sahf stos loop sbb clc xchg mov dec enter or inc and xchg cmp stos jp lea (bad) decl xchg dec addr16 fs sub sbb pop xchg sub or add mov inc int3 rcl mov jmp imul sbb jge loopne mov in (bad) (bad) (bad) mov dec shl sti aam testb ficom xor xorb mov add inc pop aaa sub outsl add out js xor and jge test add lahf push call cmp sub mov cld lcall pop jns ja fdivrl ret xchg imul jg pusha jae out test mov lock xorl push fs repnz mov sub jb decl lock cli jnp rorl xor out sbb sti dec mov or (bad) (bad) inc iret pop pop imul (bad) jne add (bad) unpckhps lret xor xchg xor jmp sar popw cmp (bad) stos jmp insl sub idivb aaa cld ljmp pop push (bad) hlt in or mov pop pop jnp imul mov scas xor pop mov push mov out clc repz sub adc cmp sar mov jg popa pop cmp add push leave mov push inc mov (bad) fbld (bad) dec fdivrl mov test pop (bad) (bad) js arpl inc test jmp sti (bad) mov and (bad) imul jno scas (bad) (bad) (bad) decl push pop imul stos popa sbb je cwtl (bad) sub xor add addr16 (bad) (bad) incl sub and (bad) mov pusha xchg ret sbb push mov jno cmp repz sbb xor pushf loopne (bad) (bad) push jmp stos jecxz sbb ret in cli mov lret pop xchg or pop xchg or push aas (bad) (bad) (bad) pushl cmp xchg loopne (bad) xchg and add repnz in in and (bad) (bad) (bad) aas ss pop lahf jl in pop scas hlt lea lock xchg fcmovnb outsl and incl dec mov fdivrl clts mov dec xchg out cmp sbb lods call mov adc mov (bad) xchg aaa dec sbb aam test jecxz or inc or jmp adc sub decl pop ret sysexit cmp mov bound ss ljmp sar aad mov jecxz fsubr mov in sbb inc lds mov (bad) pop add daa push imul mov imul fistpl (bad) decl sub mov loop add add ss cmp (bad) (bad) call mov comiss imul test sahf es or pop (bad) ljmp push push xchg faddl inc pop mov repz hlt (bad) (bad) fisttpl inc lock xor push imul pop push mov repnz (bad) (bad) (bad) pushl lods and orl push cli xor sarb mov (bad) (bad) (bad) jmp std rcl cmc fucom movsb jno push icebp mov int3 mov in mov xlat cmp jl lods push ljmp (bad) out push pop xor cs outsl mov loopne ss adc mov or push dec push cmpsl push cli jg xor mov pop stos fistpl fimull pop mov (bad) mov inc adc out cmp sarb sbb mov and push std fidivl cmp push lret (bad) lret mov pop push mov fist mov icebp (bad) lcall mov and lods (bad) cltd mov xlat or mov sub clc mov (bad) jl loopne fwait (bad) fcompl rcrl inc (bad) (bad) out inc ffree lahf das sbb push dec (bad) stos cs push incl cld jmp ret fidivl push mov pop imul mov (bad) in (bad) (bad) jg nop sub ja in lret mov in sbb andb lcall jl neg aas or push mov xor ljmp push dec mov lret pop aam (bad) leave jne loop sbb jg dec mov sbb jo or call cmpsl call or cltd pushf jp lret adc mov jbe les scas (bad) jo das jb add hlt clc in ds shl ret jg out lock pop mov ja data16 xor in push in ja (bad) (bad) call test add daa mov mov pop xchg pop mov (bad) (bad) (bad) mov out xchg sti mov mov adc es popa out push clc cwtl fs pmaxsw popa cld cmp jne dec push imul cld (bad) push outsl xorl jg pop rcr js lods iret jne jg inc mov outsb inc sub (bad) sbb mov and xchg loop js mov pop mov mov clc (bad) pushl add sub add pop and push outsb mov xchg repnz dec cltd mov sbb mov (bad) mov push bound and pop iret push sbb call (bad) lcall jo push lahf cmpsb (bad) and fsub dec adc push out xchg xchg or (bad) (bad) jg out popa test dec sti ds jp cmp (bad) dec fistp jge pop (bad) (bad) (bad) (bad) jmp outsb mov sub fldt jmp repz sahf or (bad) (bad) pushl fadds and push mov xlat test loop fnsave pop mov jns out (bad) (bad) (bad) inc mov popf addl xor imull jbe cli mov arpl (bad) (bad) (bad) (bad) fimul xor in sub mov movsb pause js popf clc mov mov xchg cmp xchg lahf push (bad) push xor aad push jl (bad) (bad) (bad) call mov sbb sbb mov pop lret mov out clc adc pop xor (bad) (bad) mov loope jle ud2 fldl2e ror mov int cld push inc inc cld (bad) push xchg and repz nop ret fnstsw sbb imul cmc jmp (bad) jg dec xor clc stos fimul xchg es mov (bad) pop sbb adc test call sub push aad (bad) cld xor lahf xor jg sub mov mov (bad) ljmp (bad) (bad) call in fistpll adcl pop inc mov cli mov (bad) incl sarl and cld les jbe je loope xor addr16 xchg incl jmp mov movsl lret sub sti jp cmp add notb xchg les imul pop cli pop xor out aaa or lcall sbb cmp mov sub adc call jl (bad) scas je ss scas das sbb (bad) fist push add and sub lret and xor (bad) pushl dec icebp dec mov scas sbb pop js dec push mov (bad) (bad) (bad) jmp mov mov loope dec add ficom sarl cmp lods je stos (bad) (bad) (bad) call loope push shr movsb xchg imul adc lock jecxz push test (bad) incl lods mov ror test adc sub icebp das jp ljmp icebp pop cltd mov movsb mov cld (bad) ljmp iret imul lret in (bad) pop (bad) ss ja jns cmpsb push cmpps inc dec sbb insb outsb lods xor adc fwait out adc mov fcom sbb pop dec or fdivrl or jmp sub (bad) mov cmp cmc sbb out mov xchg lcall leave clc (bad) (bad) (bad) movsb mov xchg fmull and push repz inc xor xor cmp incl stos jle cld data16 pop stos js out add push cmp movsb (bad) out mov rcrl cmp loopne jge int sbb xchg (bad) call fistl cmp aad fs pop ss pop add adc (bad) (bad) pushl dec sub js in fimull lock jmp mov xor push repnz arpl and (bad) (bad) lcall pushf xor add cwtl xor mov test mov outsl sahf mov xchg xlat (bad) notb stc mov inc out out sub xor pusha pop icebp iret les cld ss adc mov dec fdivr lcall dec add (bad) (bad) (bad) jp jo inc push enter es cwtl adc pushf push dec jns xor sbb cmp out xor mov neg (bad) (bad) (bad) lcall test xchg add fdivrs push inc ds sbb pop adc mov cmp jecxz adc push sub (bad) jmp mov psubb sti (bad) in loopne add (bad) fistp into aaa inc les mov leave out mov jmp (bad) (bad) sub mov xor (bad) (bad) decl pop aam fcmovu or (bad) ja push (bad) fwait nop adc lea cmp mov clc (bad) jmp mov cmpsb mov ja sti ljmp out (bad) and dec (bad) call jmp lods (bad) repnz cltd out or pop stos jg jecxz mov js (bad) (bad) (bad) (bad) call or arpl sub push inc lea jns pop sbb or and lock (bad) (bad) sbb mov xchg lahf loop xor sub mov sbb js pop cmp jae aam mov jecxz lock das lock adcb jmp inc mov push fstl inc leave and adcb or push and ficompl dec ss sar cmpl inc (bad) ljmp inc lods in cs jno inc shrb test (bad) mov mov int3 mov dec inc sbb out inc pop cmp dec (bad) in push (bad) incb push popf pop jne xlat lret cmc pop jl pop dec push fsubrp mov ljmp push add je fwait inc aam jge loop pop lods out push loopne push sti ljmp mov mov bound or (bad) mov loope mov jl or sbb lds pusha ret sbb jp pop push dec loop andl fs int3 dec test (bad) incl cld pop je mov in addb scas test imul cmp (bad) out mov jns stos dec add jb lea pop fdiv dec dec mov (bad) cmp fs psubq ljmp (bad) (bad) (bad) (bad) mov push divb notl dec inc adc mov lods lds sub dec push (bad) (bad) (bad) call sahf mov ljmp ss mov dec cltd rcrl push mov (bad) (bad) ljmp pop scas fidivr (bad) pop add (bad) lret loope mov pop jl lock out adc leave stos fmuls push adc notb (bad) (bad) pushl cmpsb push ret push pop xlat lcall (bad) out (bad) xor push clc sub (bad) mov dec pop mov mov repz ds (bad) (bad) decl mov daa fidivr sub mov xchg lock ljmp movsl lea repz in adcl xchg stos sub or (bad) das cmp sbbl pop add push fwait pop and in addr16 ficompl call mov cli cmp inc popa lods mov in outsb loopne jo add pop test cmpsb mov cmp (bad) (bad) jmp sub sub and mov pop adc jle mov aad ja jne (bad) (bad) (bad) jmp jns jg hlt mov pop mov sub insl loop xor loope iret xchg loopne cld or icebp imul mov sahf clc ljmp mov into inc jb and mov (bad) incl xor (bad) lock adc arpl bnd (bad) (bad) (bad) pushl mov rcll and rcr test pop jecxz mov cli jg sub (bad) (bad) (bad) (bad) js pop xchg icebp push xchg gs xchg test and inc push fcompl in cwtl xlat or and sbb repnz mov ljmp push es ljmp or sti dec clc xchg movsb pop scas xchg mov sbb lea call push ret and test in ret loop stc jae and and (bad) (bad) (bad) (bad) fisttpl sbb push pop mov or push mov cli jl or sbb cli (bad) ljmp mov insb ljmp xor pop mov scas mov jmp cmp inc mov xchg shlb aaa pop daa xchg cmpsb insl fwait aad insl pop pushl pushl clc jnp scas ljmp or and xchg ljmp adc xor nop repnz in loop dec inc push jb lcall (bad) lcall (bad) xor add sahf movsl (bad) lcall loopne adc push push ffreep xor mov repnz rorl and (bad) (bad) lcall rclb push mov cmc outsl mov int aaa mov ljmp icebp (bad) lcall lods inc sahf pop cs jo pop inc or imul inc (bad) (bad) out cli cmp dec sbbl in adc xlat dec outsl push stos outsl (bad) (bad) (bad) pushl mov (bad) push or sub icebp xlat jecxz xchg stos clc test aam icebp (bad) xchg lcall es jg mov and add mov sub inc xchg lret mov inc ljmp mov sar push jg jmp mov stc pop sbb xchg inc mov jg fwait test sbb enter fadds imul outsb pop push shl xor call cld pushl or sbb (bad) xchg cmp cmc shrl and ljmp (bad) (bad) out mov push stos imul jae inc and bound lret (bad) (bad) mov sbb mov push jg pop add popf push inc imul xchg cltd pop fidivl xor pop in addr16 push sub out aaa sbb mov packuswb jmp mov jl hlt sub cmp imul (bad) (bad) jg shrl sub inc icebp gs es lret (bad) xchg mov push adc scas pop cmp (bad) jae push mov xlat sbb lods push test jg call ret (bad) popa pop into mov add jb sub aas xor rcll (bad) lcall xor mov psubusb je mov dec xchg inc sub ret sahf sub int3 gs mov ret in sbb std decl loope iret or cmp dec loop icebp adc sar stos cmp cmp pop arpl pop outsb adc (bad) in (bad) inc inc mov and int xchg dec pop (bad) xchg sti mov cmp mov jg jmp mov cwtl faddp int push lret lret add push subl (bad) lcall jp mov jg jle push insl std nop mov jle (bad) jg stos mov and lret (bad) adc popa and xchg insl test jno in je das cli lcall (bad) out lods lods mov jns mov addl mov loop ds loop add add ss imul push scas imul outsl and mov mov push ja enter (bad) lcall (bad) aam cld ss daa shlb pop push fdivrp sub inc lock imul aam repz aaa xchg sub inc std cmpsl adc cwtl aaa ret sbb push inc adc pop dec call jmp sbb das subl lds inc cs (bad) (bad) (bad) pushl inc and cmp pop aaa inc pop mov aam aas clc dec cmpsl clc pop ret cmp xor cmpsl loope incl ja loope sub ror xorb lds mov mov das loope in inc sti push ficom cmpsl xchg xor aas add and pop fmull sub (bad) (bad) (bad) (bad) jns mov aaa in fcomps outsb out mov popf cmp cltd repnz fcmovnbe jg sar decl mov dec cmpsl and xchg arpl pushf fcompl push lods cmp add push icebp push mov popf imul (bad) lcall push mov iret lret cmp pop xchg jp call sarb mov jl mov mov (bad) mov push popf es daa mov call xor leave enter aas mov in icebp stos fnop outsl roll gs sbb jecxz lahf lock lcall xor sbb rorl xchg jnp rorl pop dec in gs inc leave mov loope cwtl imul scas fwait outsl push (bad) (bad) (bad) lcall mov addr16 das lcall adc xlat push scas mov cli jg or pop pop mov insl (bad) scas mov push push sbb in mov pop ss in mov sti jl,pn lock push jle fbstp pop leave lcall aad orl (bad) (bad) fnsave mov out (bad) loop in f2xm1 (bad) out push sarb sti es xor xor mov lock sub popa std int3 popa into shl mov fdivrl pop loopne call adc cmc mov xchg iret pop jl (bad) sbb outsb mov xor xchg lret (bad) sub out and xchg (bad) inc iret dec lock clc lahf loope xchg popa jae cli fs pop imul gs inc scas adc sbb stos loopne repz test cltd in and movsb xchg fsub cli hlt and rclb mov jge icebp (bad) jecxz call cld inc aas mov ss je sub mov test mov xor repz jg jmp inc or (bad) repnz mov pop mov mov imul ds fisubrl decl or dec mov loopne cmpsb test jmp ds ret loop (bad) xor adc pop or (bad) (bad) ljmp dec pop pop jns shrb aaa xchg push (bad) enter inc ljmp sbb fidiv std (bad) ljmp jmp adc in sub mov adc (bad) ljmp push push test push pop jp xlat mov xchg xchg xchg (bad) std arpl jge xlat xchg jb ret (bad) (bad) cld dec xlat mov dec call data16 sbb iret dec test (bad) decl dec lock mov addr16 (bad) loop mov int pop mov cld add fildll jno ss xor cmp mov xchg xchg cmp mov xor into (bad) (bad) (bad) incl enter out sub jmp int loop fwait add pop clc daa les mov (bad) (bad) (bad) (bad) fdiv inc out jo xchg mov in arpl mov pop jmp jb int (bad) jg decl aas adc lcall test adc jne xor and xlat jmp mov je inc fwait jecxz (bad) push int xchg daa (bad) loope mov cmp or decl sti pop jp out sbb mov data16 push sbb mov cs inc sbb out into inc (bad) sub outsl mov and or sub xor lret adc (bad) (bad) jg xor mov jge mov mov dec clc std insl loop and push icebp ja jg (bad) (bad) decl ljmp insl in rcll (bad) cs rcll lahf sbb ret decl test pop pop imul and call jg xor jecxz hlt pop fdivrs mov fsubl cmpsl imul (bad) (bad) (bad) cmp iret ret xlat (bad) bound mov test inc fnop jge xlat or lret (bad) decl outsb movl mov loopne adc (bad) rcrl pop mov sbb push fcomip aaa adc xor jl dec and pop and cmp (bad) (bad) (bad) jmp (bad) in mov test jns loope cmc jg addb sahf or (bad) (bad) call shr out xchg jb aaa push lods jbe test jno scas jo jp xchg decl shll (bad) xor push das adc inc mov inc rolb lea (bad) jo loopne push out int3 in adc inc imul test mov scas lret insl gs lret data16 mov lods xchg into gs lcall mov icebp outsl xchg and xchg push ljmp xchg or inc (bad) mov xchg inc sub ficomp lock imul inc stos fcos decl (bad) push push cld pop repz mov pop dec movsb sti cmp dec pop inc rolb add cmc fisttp stos clc mov jle iret aas (bad) lcall and sub test pop xchg ds imul xor jb pusha cmp loopew mov test (bad) repnz add (bad) sub mov mov lds xchg cmp fistl (bad) xlat push sbb scas cmp adc fnsave (bad) ljmp std iret mov cld test mov clc fisttp mov jnp (bad) fldl sti fs (bad) incl arpl dec and shrb std das mov cmc decl decb fldenv inc mov ss adc dec out into test movsb incl insb mov lods outsb negl push and add sbb out xchg cmp sbb into xor (bad) (bad) call jl in popa mov (bad) aaa xchg xchg mov (bad) es jae icebp xchg aam (bad) (bad) pushl in in pop sar xchg cmpsl insl xchg fist sahf dec mov xchg pop pop aad inc andb inc adc mov xor mov stos mov imul xor decl arpl fdivs push pop (bad) (bad) cmp sub icebp lods cli mov int mov test andl jnp jp loope sub jb es (bad) lcall pop adc addr16 jo pop mov mov call push aam test and ljmp dec xor adc repz daa outsb cmp fldt (bad) dec xchg push xor repnz pushf xchg dec cmpsl sbb (bad) xchg cmpsb out dec out ret sbb pushf mov dec mov pop orl bound (bad) (bad) (bad) xchg leave push mov mov mov les (bad) es test inc lret repnz xchg outsl decl adc sbb stos cmp in lods jle dec and mov addr16 mov adcl daa scas sub jmp (bad) (bad) pushl mov iret dec sahf out jnp adc jg jns cmp and (bad) mov xor inc int sub (bad) fcomip dec movsb lods daa pop (bad) add stc inc lret and or mov lcall das cmp jge js rol aaa push (bad) (bad) (bad) (bad) (bad) (bad) push mov rcr xchg push pusha fs out push sbb popf movsl mull sbb clc stos adc jmp jmp xchg ja pop lea sbb jmp scas jg and dec orl cmp and ja sar rolb sub lret jo dec call loopne and or jae insl sbb movsb cltd repnz aas sbb xchg mov ret icebp insb push inc outsl add jb in decl xor mov sbb out cmpsb mov popa (bad) mov mov pop cmp mov (bad) mov xchg or inc push push mov mov das push cmp js loope mov (bad) clc mov (bad) mov insb mov mov leave xchg into sbb scas adc loopne inc add mov mov cmp shlb cmpsb icebp xor std mov test shl and dec mov mov (bad) repz (bad) push xor pop rcll sbb pop add insb mov xor (bad) (bad) (bad) (bad) lcall ss xchg scas addr16 test jg push je inc std xchg ficomp or pop sbbb (bad) ljmp mov xorb xlat hlt pushf pop ret jg sti dec clc pop loopne (bad) pushl push dec xchg jbe ljmp fwait notl out add dec stc cmpsb (bad) (bad) decl mov imulb jae (bad) mov mov ljmp adc ret mov leave pop out cwtl sbb enter js clc pushl sub fs outsl inc xchg and pop in cltd in movsl pop fstpl scas js pusha aaa adc push xor jbe mov jne pop mov (bad) (bad) (bad) (bad) clc jae lds std pop int3 call push imul fidiv stos test sbb (bad) incl movsl adc clc lret loop ret imulb xor (bad) (bad) (bad) pushl outsl or dec outsb mov xchg repnz out mov push cmc pop pop hlt inc shrb es xchg xchg add and (bad) ljmp inc and inc push sub into cmp loop (bad) fildll (bad) pop add (bad) fisub imul loope jbe leave hlt fs (bad) (bad) (bad) lcall xchg jg pop popa into and out and ja es rclb pop mov xor dec repz fwait js inc (bad) jg lods xor inc test gs cs push adc xchg add mov xor lock xchg mov out es (bad) (bad) (bad) call xchg add jns pop push int3 and cmp push xor rcrl mov cmpsl js (bad) push jle sar (bad) (bad) pushl lods hlt lret lea mov pop mov mov jns mov inc test icebp out (bad) (bad) mov jbe mov sbb cli jnp cmpsl lds xchg lea ds das xchg repnz daa in into sub sub jno push jg inc std sti mov mov mov or sub (bad) jmp outsb sub xchg jmp test stc cmp (bad) decl mov test cld cmp pop rclb loopne mov out lods and sbb add dec mov sbb and pop cli scas lea jmp sbb dec xor (bad) (bad) lcall cmpsb aam mov add inc jecxz adc clc push (bad) mov xor sarb insl loop adc inc imul decl aad push sbb cmp fidivl dec xchg push dec adc cld pop icebp (bad) jl and push lret mov into stos fs test mov fbld inc fwait test (bad) push or jno push out imulb dec or icebp outsb lea rcrl sbb fwait loope jl push aas idivb mov (bad) lcall mov cmp dec ja add cmpsl enter cmp pop push test into sahf add call pop (bad) lods clc adcb (bad) dec mov push mov jno sbb mov mov ror jno je sbb cld je inc sarl scas (bad) mov jecxz das clc pop imul out mov and sub in cmp jg mov arpl (bad) (bad) shlb outsb or into fidivl jmp (bad) incl jge jle (bad) lcall mov jg std popa inc lret out mov out lods scas mov mov cmp sub (bad) (bad) incl sub fs pop aas cmpb js ret push test fnstsw dec out xor pop loopne sbb mov mov sar sub rolb enter pusha xor xchg push jmp std lcall mov fldpi rol loope dec daa adc loopne push jnp cli (bad) mov fisttp or dec lods inc stos sbb lret leave fdivrl (bad) (bad) (bad) mov add lock lock adc jno pushf jle sahf pop mov (bad) decl js mov insl int mov loope pop push or mov jecxz hlt sub idiv (bad) (bad) (bad) cmp bound pop inc outsb and (bad) pusha ss (bad) jp push xchg popa mov cmp das mov js (bad) (bad) (bad) (bad) (bad) sti lds xchg mov aad mov mov int3 enter mov xchg mov mov inc mov sbb mov movsl std jle sbb dec pop push lds aas add lahf add jecxz jnp push cwtl sar (bad) jmp inc lea xchg mov insb mov scas rol mov jae imul (bad) jg (bad) push std fwait hlt jnp mov scas dec mov mov inc xor ffree decl loopne andl cmp and xor and cmpsl nop jmp (bad) jmp and pusha (bad) hlt fldt xchg pop mov (bad) inc and jl call or (bad) pop outsb sbb sub mov call (bad) mov push test pop insl dec loope in pop and pop and add (bad) (bad) inc (bad) xor insl mov imul es add pop add out xchg pop mov mov call pop js das sub addr16 sub lea (bad) (bad) (bad) pushl movsl xchg push sub sub and stc jmp aaa (bad) fild loop cmpl push jp jle jecxz cmp outsl stos inc cmp adc idivb xchg sbb hlt lcall (bad) sub dec loop add dec sarb data16 aas fnstenv xor pop (bad) (bad) decl aam adc test push and mov lret xchg push cld pushf out xchg lock lcall dec jmp clc pop dec icebp mov sbb dec clc ljmp imul jge mov sar dec mov in popf mov ds (bad) out mov jmp pop mov movsl push lods dec addr16 jp int3 cli sbb mov jge inc cmp dec divb sti jle (bad) jg cli mov xor sub cmp fcmovnb jns (bad) fldl cld loopne jg or jb in hlt clc push outsl push push sub jecxz,pt xchg (bad) ljmp xchg jg dec lods jne,pn outsb into call jb lcall pushl je int jno pusha int3 popa (bad) leave and js loope pushl cld inc pop (bad) idivb mov insb hlt mov mov fucomi sub (bad) loope jmp lcall jns ret into icebp repnz sub cmp icebp (bad) mov lock loopne sbb insl dec gs (bad) fldln2 scas cmpsb adc push xor insl addr16 mov ljmp dec call (bad) cli movsb divb sub sbb stos push in cmpsl call movq lds test jnp outsl (bad) (bad) (bad) cmp jl (bad) (bad) mov imul ja sub mov jg shll mov sar (bad) jmp pop cltd cmp icebp daa loop lds js loop mov aas or jmp jg xchg aam jns xor aad sti pusha imul jb repnz mov pextrw movsb icebp decl clc jae out (bad) and psubd scas xchg stos pop push (bad) ja xor adc loopne outsl add int3 mov imul stos test mov (bad) jmp std aas ret shlb insl or pop pshufw xor mov xchg (bad) jmp imul adc mov rcll fisubrl mov (bad) cli fcomip (bad) daa push pusha jmp std pmuludq ljmp scas outsl idiv (bad) (bad) lcall fsubr push push mov push fwait mov sbb lcall test and push jl and add icebp es ffreep inc adc pop rcr loope test (bad) (bad) in insb mov arpl push pop mov cs and bound mov scas ss add cmp loopne adcl mov (bad) (bad) (bad) pushl fadd jns (bad) lds xchg push aam lahf sub aad adc xor mov mov cmpsb icebp xchg shlb pop cmc pushl jbe fldenv and adc inc cs jae cmc call test (bad) daa stos jbe ja cli jp (bad) sbb rcrl pop dec xor lcall jle lock dec js add (bad) jg mov flds lea pop pusha mov pop es (bad) jg mov pop arpl mov inc out loope sbb push std and inc inc (bad) sub (bad) ljmp mov insb in adc adc or xchg iret mov imul jae scas loope cmp cs mov mov lcall cwtl inc add fsubl add xor ljmp js (bad) aam mov test fwait stc scas pop (bad) lcall sbb in add pop insl (bad) mov mov jle inc push popa cld (bad) sti cmp cmp shr mov and ja pop loope (bad) ljmp insl out mov adc xchg mov dec lods mov incl (bad) sub inc jo insb repz jle clc out std mov lock (bad) (bad) decl idivl insl lret loop imul mov push outsl mov ja mov (bad) ljmp lahf mov sub hlt fisttpll loop xchg cmp hlt fwait push sbb push lea jmp in pop stc mov stc pop lcall fwait push icebp inc (bad) fild inc stos imul jno jmp add dec xor (bad) incl lods popa xchg push push or ret xchg jne das (bad) (bad) (bad) fild stos divb movsb lahf sub xchg mov jmp xchg cmpsl cs dec or adc sbb (bad) (bad) push fldcw lods movsb es repz stos mov and roll ja or ljmp mov jb sbb mov shrb out fnstsw das mov pop ror push inc aad js test mov int clc stos dec mov ss mov (bad) (bad) (bad) (bad) cmp cs sbb icebp (bad) xor pop add imul pop mov mov xlat (bad) fild sbb cmc push (bad) cmp push popf ss cmp mov repz push xchg mov xorl cmp cmp movsb mov jmp (bad) push (bad) ljmp mov movsb ficomp cld inc xlat cli and (bad) (bad) (bad) (bad) aas pop clc push pop les mov mov jle xchg (bad) mov and pushf repnz mov cmc pop mov xor or mov fistpl fnstenv push push shl dec (bad) out clc add pop fcoms shrb jne (bad) (bad) (bad) call mov int push jns arpl es pop xchg pusha into call call push sbb jg and push clc jnp aam jl aas idiv inc (bad) call scas hlt int ret out xor mov les lcall (bad) das cwtl pop push inc inc add add xor hlt aad loope inc stos (bad) jge decl cmp jno mov dec mov (bad) sub call mov hlt xor sub cmpl enter popa cwtl loopne pop cmp add jmp iret cmpb outsl adc pop add lcall (bad) (bad) ljmp xchg adc push sub out (bad) insb (bad) int imul sar dec loope fildll insl in and test (bad) (bad) jg sbb in push push popa cltd sbb push mov aas in scas (bad) (bad) lcall jg fbstp aas sbb jle clc mov jns xchg insb hlt ret (bad) (bad) dec inc or sbb iret test lea bnd fbld clc fcomi ds adc das cwtl in and mov pop (bad) (bad) ja jne sarb mov mov xor call jae das je test push movsb mov jb sub mov and sbb scas cli ret lds adc pop hlt rcrb mov (bad) daa pop jns insl jae mov sti pop addb loope cmp test int3 push enter add aad (bad) jg inc pop add or adc repnz adc push aam cmp mov in (bad) pushl dec nop loope mov and xchg iret dec pop pop popf out imul xchg adc movsl cltd mov std std xchg aas popf cmp (bad) das mov scas sti mov cltd loopne jae (bad) (bad) (bad) in sti mov cld shrb push sar loope icebp into cltd std lods cmpsb std mov jle (bad) (bad) call inc mov idivb gs cmp nop sub out jne jnp mov mov shrl mov lcall sbb pop cmp loop sbb leave xor adc add decl mov negb test cmpsl icebp aaa les pop lcall lods lods fcompl insl movsl insb jae sub stc push push lret adc pop cmp test cli sahf arpl ljmp sub (bad) sbb and jg (bad) mov stos cmp fiadd (bad) cmpsb cmpsb mov in leave add (bad) incl mov mov and mov cmp sti pop dec push add cli testl (bad) (bad) call mov in and loope adc sbb fstpl popf add (bad) (bad) (bad) (bad) in out jecxz aaa rcrb sbb popa test jp xchg jmp (bad) loopne es (bad) lcall in rolb mov fistp rorl push mov std mov adcl fimul sub push xlat (bad) (bad) (bad) decl mov lret mov shr mov (bad) and xchg add rdpmc sar (bad) fisttpll (bad) cli cmp inc ljmp mov mov std (bad) das mov jbe cmp pop pop pop mov jne pop or out mov (bad) call jle fldt ficomp mov mov dec sub popf pop xor fsts std decl inc add iret sti dec clc mov cmp (bad) (bad) ljmp nop (bad) bound je (bad) xor js xor sti cmp enter jno int3 (bad) (bad) (bad) jmp ficompl jle jl mov sub (bad) sbb mov out pop in jo lods mov push (bad) (bad) jmp adc fisttpll fldenv mov paddsb adcb and fnstenv (bad) neg test (bad) (bad) fcomp lret stos clc jmp mov pop xor push push add and enter (bad) out and jno xchg xchg fwait jmp movsl cmpsb lcall hlt push cld dec mov insl outsl movsl lock push cmp pop jl jl lock mov fidivrl or xchg testb lds mov sub and (bad) mov inc cmpsb jmp lahf fwait push iret loopne sbb jg (bad) out mov xlat xor ds or cli sbb (bad) cmp ds popa movsl mov lods and fdivrs sbb int3 mov push or inc (bad) (bad) mov xchg push pop or pop mov xchg adc and ljmp jle and in xchg push push js out fimul clc sar cmp fbstp sbb scas pop clc daa (bad) ficompl popa mov (bad) (bad) (bad) (bad) fsubp sbb out cltd imul push xor arpl outsl ficomp xor sbb test cld (bad) mov push jle cs xchg lods std in inc iret lock hlt mov mov push cmp (bad) lcall mov jecxz jp fwait mov lock add fdivrl loop sar stos sub fldpi pop sbb outsb lods push loop add (bad) decl sub (bad) add jno and and lcall add push push mov pop mov aam (bad) (bad) jp loopne or push mov dec add pop lds push movsb negb aad jmp adc test jle pop pop jb or les fild jecxz push movsb xchg idivl jg lret lock lcall sub jl imul decl adc fwait jb insb mov or cmp mov jp mov sbb fcomip push es jns int dec sti or or xor mov scas push js divb icebp push je hlt call rep mov push inc insl jge mov (bad) mov int3 jecxz xlat test pop icebp push lea mov cmc sub (bad) (bad) pushl fldt xchg xchg adc xchg pusha cmp xlat outsb pop xor call loopne pop jno xorb xlat mov pop out test cmp out enter addr16 loopne mov rorb call push mov xchg dec sbb or shrl fldt ret cltd cld add (bad) (bad) inc ss jp xorl mov pop mov rolb cmp fstl fstpt lcall mov mov sbb xor fstpl cs ljmp clc ss add in push push xchg jne (bad) icebp mov sbb push pushl ja jecxz fs xchg push ret jae mov lahf xchg loope (bad) (bad) incl nop jns push fwait jecxz and push sar lret gs sbb pushl inc nop cmp push (bad) mov cmp mov mov ljmp mov fldcw es mov dec pop addr16 (bad) (bad) jmp pushf jl mov in test xor das adc xchg and mov xor or and xorl sub mov xor test or push ret jg (bad) decl sub dec fimull mov int3 (bad) or mov xchg or sub cmp mov adc and imul cmc (bad) (bad) incl mov test xor add adc mov (bad) (bad) cmp movsl loope movsl inc mov mov scas ret adc adc idivb stc mov xchg jecxz or (bad) (bad) jmp mov out xchg push fwait cmpsb (bad) pop jmp jb out cs xor lret (bad) (bad) jmp pop push clc push mov sti sbb loop mov insl sti aas dec cmp jne data16 call adc ret outsl xor int jle xchg inc xchg pop (bad) mov push ret sbb in or enter in push push icebp or movsb push imul sbb (bad) (bad) (bad) (bad) in je mov push lahf push lcall mov mov and (bad) (bad) (bad) (bad) pushl dec sbb cmp inc rcrl in xlat sub lahf adc adc das sbb xchg js pop aam push test (bad) xor gs push add pop xchg lock incl (bad) push hlt (bad) mov bound xor shr jne rcrl pop dec dec sahf call test mov out gs inc repnz rcr mov lock fnsave loope les lods (bad) (bad) (bad) (bad) fldenv fiadd lret sbb adc mulb adc dec repz pop stc (bad) jg (bad) mov xchg in fs es cmpb sbb (bad) (bad) decl and jnp psubb jmp fisubr mov xor lret stos pop aaa dec stc jge (bad) (bad) (bad) push sub bound push xor sbb jb inc pop jnp and mov ret jp lcall dec loopne mov int3 mov sub add lcall gs mov inc sahf rcr sbb lcall je jmp xchg mov enter in jl stos cs unpcklps pop std decl xchg adc pop hlt inc or cmpsl push and jb clc mov ja lds das in out xchg mov test mov mov jp stc xchg xchg orl xchg call or decb ljmp mov push sar cmpsb aaa adc ror jge xor loopne (bad) (bad) dec add pushf adcb xchg sub in jle sbb xor inc dec (bad) jmp call cmp inc in add sbb sbbl (bad) (bad) (bad) outsb mov xchg xchg shl ss ja repz cmp sub pop (bad) cld imul fcomip (bad) fnsave (bad) aaa ret in dec dec (bad) jne dec mov sbb and cmp sbb mov out push adc sti lcall aam adc jg mov ds (bad) lcall jl shlb aad out lods loop scas sub popl mov ljmp add push add fwait mov or mov lods popa push add adc stc hlt pop loopne mulb fimul enter out cmp mov mov clc addl xchg push or sarb dec loopne mov sbbb jl loope imul mov mov fisttp aaa mov pop mov int incl sbb sbb stos jo jae inc push cmpsb cld mov out (bad) add mov or xor aas aam movsl inc outsl or xchg pop lock pop mov jne incl mov cld fcompl lds push mov das cli (bad) pushl dec repnz fldpi (bad) pop push and lds pop aad hlt cmpsb push xchg mov aaa dec cld addr16 mov adc fistpl jbe in add push fidivr (bad) (bad) (bad) js ret not push dec out fmulp les pop hlt cwtl (bad) das nop sub icebp xchg cmpsl mov aam push std aad icebp mov cld inc mov iret mov imul mov inc xlat lods shlb stc cmp arpl lcall mov pushf mov cmp (bad) jmp sub idivb push sahf mov jecxz loope cmc pop mov push cs ret adc call std (bad) (bad) mov inc out and inc roll jb pop pop lock outsb mov je inc add dec loop (bad) in or aad int or (bad) (bad) decl mov or sub add jmp lahf (bad) test pop (bad) call jne arpl push pop sbb jg mov clc and sbb rcr mov lahf or loop lcall (bad) mov icebp sub scas test inc mov out in int stc pop (bad) (bad) (bad) jmp cmp dec lcall popf mov (bad) test jg jp clc aas (bad) aaa dec nop call enter (bad) lcall fiaddl loop xor xor cmp ret xor (bad) decl xor adc jmp dec (bad) mov or loop movsb incl jns imul and outsl xor pmaxub dec nop inc add ljmp lcall iret stos clc jle lret ret mov adc pop int xchg lret mov aas ja pop adc (bad) push mov push and sahf mov push pop (bad) cmc mov fld1 jmp push js movl inc ficomp cmp cltd dec sbb ds (bad) idiv xlat cld aas int3 jne mov (bad) fcomi xor jmp lock lea dec int3 mov test cld (bad) decl push push adc rorb into dec scas ja lock sti cmp rcrl (bad) jg pop and cmp scas jmp dec mov or in sti fdivr push (bad) (bad) fstl inc arpl and mov xchg lea adc lock (bad) xor push lahf addr16 leave ret add (bad) ljmp movsb cmp dec leave or repz mov mov (bad) adc (bad) jg aas or xchg and dec jle (bad) sub mov in add pop (bad) fwait (bad) (bad) incl (bad) lahf das mov fisubl mov into in imul dec xchg (bad) (bad) (bad) ljmp jmp outsl shr (bad) adc das paddd jg cld imul jecxz pop (bad) sbb (bad) (bad) (bad) incl pop adc mov xor pop test dec ds (bad) jle jge hlt idiv fildll (bad) mov cld insl xor cmp insl dec ss mov ret sub jns out in add (bad) outsb pop jl clc fnstsw loope sbb call cmpsb inc cmpsb out repnz lea js in subl and pop xchg cmp xchg les (bad) (bad) (bad) fildl lock movsb (bad) jp (bad) insl fildll push (bad) fcomps add dec xchg cmp lock push lods es sti ds sti mov xchg mov jecxz outsb fild lock cli pop push aaa test das adc inc (bad) xor pop jl mov sub addr16 and add xor pop mov les xchg pop or xor imulb (bad) jg xchg lcall aad (bad) dec fwait (bad) (bad) (bad) (bad) (bad) mov call sub cwtl jl jmp lret cmpsl fidivr or pop pop cmp aam aaa pop stos pop push ja jp iret mov jnp add in lahf push (bad) (bad) (bad) pushl xor push pop (bad) sbb bound pop cmp mov jl cld lcall dec or ficomp call mov out dec or lock insb in mov lret insb scas inc lret cld or fldl les sbb pop cmpl dec into fist lods push popa add ret adc loop cs mov push movsl into cld in (bad) dec fwait mov (bad) push clc lret imul pop add xor fstpl pushl and je mov or push push fidivrl imul scas iret dec xor inc pop pushf mov fsubl (bad) fbstp js adc push clc jnp and (bad) mov xchg pop sub js push mov mov (bad) fstl outsb pop dec aas idivb cld inc jnp dec sar and ret loop (bad) jmp lcall aad (bad) aaa mov or sub adc cld faddl (bad) pushf xor push sarb push lock cli push ret (bad) (bad) (bad) push notb mov out pop nop daa xchg (bad) push insl movsb add test mov sahf sub jl jbe mov fldcw lock aam (bad) (bad) (bad) ljmp jp cli sub jns pop jns movsb add into inc lds mov fnsave das pop hlt pushl jle je leave adc pop movsb mov decl adcl or movsb shl sar insl cmpsb (bad) dec and divb jno inc es pop push sub add cmp clc das les in daa lds (bad) (bad) lcall ret and mov (bad) ret jae mov and cld aaa sti xor sar incl and jbe insb mov and adc jno pushl dec xor jecxz mov (bad) pop dec in jmp add sbb push (bad) (bad) mov and cmpsl loop mov imul xchg xchg stos mov mov mov sbb mov gs fisubrl fwait jg pop cmc (bad) (bad) (bad) push pop data16 lret pop sti das int3 in xor out xchg push jecxz sti lret jnp arpl (bad) (bad) (bad) (bad) jp scas test fistpl mov xor or jo (bad) pop enter pop pushf add out mov (bad) (bad) incl mov sbb pop icebp stos ret jp mov daa mov sti sbb inc adc add pop cld decl sub sbb pop clc in mov mov mov (bad) jmp mov xchg idiv fs dec into cli gs inc push and sbb gs hlt (bad) decl rol nop pop js inc std pushf cmc xchg (bad) (bad) (bad) mov (bad) aad arpl sbb mov sub stc stos (bad) mov (bad) lcall pop loop xchg fnsave (bad) mov outsb out daa fsubl out mov call cmc ds dec sti ss imul mov icebp out add cmpsb js out lods inc dec xchg inc pop into push cmp jle (bad) pushl inc in fdivrl dec lahf push in mov xor sbb (bad) icebp inc push aad decl lock into mov and loop lea sub add fmul test and jle ret lcall ror jecxz and (bad) es adc cmpsl lods adc lret sub add pop xor (bad) (bad) (bad) pushl mov (bad) repz mov je mov pop (bad) das arpl (bad) (bad) (bad) pushl cmp jns adc mov adc jo mov jno mov (bad) (bad) (bad) push aas pop std in mov out pushf pop lret lcall aad (bad) ljmp (bad) sbb lahf mov cmp pop pop push ljmp and mov out (bad) (bad) (bad) incl (bad) mov stos mov (bad) int add scas cmp ds add loop add (bad) cmc iret cld (bad) (bad) lcall pop jmp clc (bad) test inc sbb loop repz inc sbb xchg jno fcomip incl lcall dec loop fisubrl sbb fwait mov lcall cmpsb repnz mov popf mov xor dec in ret lcall (bad) out xor (bad) out mov inc in rorl sbb adc ss cli (bad) incl cmp mov insl pop std cli mov aaa xor xchg pop inc (bad) (bad) (bad) (bad) std scas mov mov out mov pop cmp push cmp pop popf test fmul stos insl loope outsb popa mov mov jae (bad) (bad) (bad) call mov jecxz xor cmpsl clc adcl lods fs ss mov int3 das clc (bad) incl inc mov je mov iret mov daa xchg popl (bad) lcall mov sub outsb sbb pop and and push push out (bad) (bad) (bad) call xor add xor jbe adc xor inc inc icebp lahf les pop aad inc sar pop test (bad) lea fwait dec xchg icebp inc mov and xor data16 in lcall push or dec jb add jmp out mov mov std stos lods jnp (bad) (bad) (bad) ljmp jl clc cmp lock ret fild pop int3 fidivl ret movsl xchg push pop cmp sub jns daa pop shll test into mov add inc sahf adc incl jo mov test xchg dec push arpl and push dec xor pusha sbb pushl mov fisttp ret cmp jnp addr16 mov lea dec or pop dec mov inc xchg or repz push js lds (bad) call (bad) pop pop movb pop jnp mov lock call or pop jl cmpsb add xchg lods sbb rclb cmc and jbe mov jg xor sub push lcall and xchg (bad) (bad) (bad) jmp push xchg sbbl jo popa sbb xchg sub sbb sub adc xchg xchg (bad) push cmp pop lea clc xchg aam or pushl xchg imul xchg push xchg movsl mov mov adc pop dec add xor loop arpl push mov (bad) jg mov jl mov mov dec push aas mov lds inc dec je pop lahf aas test fadd jbe pop ja iret stos mov imul jecxz sub mov xor aam call mov out iret iret sbbl dec ret jnp or sbb std popf push cmpsl xor cli cmc shrl inc push mov cld into pop jmp pop test (bad) call loopne outsl push push out pop mov clc outsl loop mov mov xchg imul in push inc lea adc add int3 pop jno lea ficoml in clc (bad) (bad) (bad) mov pushf ret test lods hlt rcl hlt lcall push fdivr lahf ficoml and (bad) clc fdivl cltd insl mov loop (bad) jg es mov cmc das sbb push dec adc cld bound ds cld ljmp push inc jb pop and add add pop and mov add dec (bad) pusha cld xchg lock sbb loope bound dec mov (bad) (bad) decl pop xchg jecxz sbb lret insl adc fisub (bad) ja addr16 (bad) (bad) (bad) call cmp jecxz repnz (bad) mov mov out mov xchg pop dec mov cld ret jecxz jns nop xchg and sub dec lahf lock scas fsts and (bad) movsl push (bad) mov xchg iret sbb xchg or gs mov (bad) (bad) pushl aas xchg jl icebp (bad) jmp lcall mov adc call (bad) (bad) jmp aad add mov hlt (bad) ret push mov imul cld decl mov stc or lret cli xor aaa add lods iret xor sti dec mov push dec and or push movsl addr16 jbe mov push pop iret and loopne pop fiaddl stc sub movsb fwait test mov or push outsl (bad) divl aaa lds sub clc dec mov and lods loope (bad) (bad) fcomip pop pop fist pop outsl in es and xchg in adc mov (bad) (bad) (bad) jmp or scas scas adc pop xor cmpsl inc inc cmp lock out repz call (bad) mov loopne fbstp sub es movsb js cld js pop aad aaa mov jnp fidivrl sbb pop data16 (bad) jmp add xlat into divb in xchg decl bound lea or xor pushf in or (bad) inc aam sbb push in lods xchg cli stc mov repz jbe mov (bad) dec iret ror jg (bad) push gs ret scas imul clc dec dec shlb jne lods cld shrl mov inc xor sub jno lcall mov mov rcl icebp mov inc loopw adc das sar (bad) pop pop dec sbb xchg xchg xchg cmp adc mov movsl inc or mov add xchg sarl mov push push std inc sub push xlat mov xor in cmp xor enter (bad) and ret das adc lock pushf sti (bad) (bad) mov pop ret jmp lods push mov insl add or (bad) pushl rcrl push orb pop inc neg sarl pop mov (bad) fmul push fist negl mov jg aad mov js in cld inc jecxz jae (bad) (bad) jmp or jnp pop mov cs mov xor (bad) outsl clc out cli dec inc mov into test lea jecxz jl das sbb (bad) (bad) (bad) lcall lock cmpsl mov xchg pop adc push andl out mov std lcall jl push pop lahf loope repnz fidivrl icebp incb xchg icebp mov push aad fwait lods sub (bad) mov pop jnp mov xor push int3 (bad) jmp sub cmpsl in push sbb jne adc mov dec lcall lcall inc arpl and mov mov dec and jl sub xor lea sbb and int jle mov into stc mov (bad) jecxz xchg dec outsl mov sbb hlt (bad) (bad) dec mov ja jl clc jle addr16 mov cmpsl (bad) pop adc ja loop imul cld sub dec int bound int (bad) hlt in cwtl cmp in push cs ret xchg cmp incl inc sti psubb das mov ja fisttpl push jmp (bad) call mov cld aas cmpsl lods jno loop inc mov inc iret mull adc subb mov imul aam pop adc lret jp mov (bad) fbld out movsl aaa divb xchg inc adc add lea inc jbe pusha rorl ret mov stos loop jl aam pop mov cs push and xor lock xchg mov xor inc push xchg ss and stos push jge ljmp outsl inc (bad) test dec pop jp and imul cld cli fldlg2 lahf leave and (bad) sub test mov xchg leave icebp jg incb mov pcmpeqw pop push addb lea mov push lret cwtl add div mov pushl outsl (bad) sarl xchg push jne and inc push inc xchg decb (bad) decl dec sub xchg (bad) or cltd mov fs cld jo cmpsb jl loop sar xor mov mov sbb movsl lods sbb (bad) fs adc dec in data16 inc adc negb add jl clc jae out push fwait arpl inc loope add lock mov pop mov jo out add sub inc push mov mov mov mov mov mov (bad) (bad) pushl mov jle fild jg scas adc sub push (bad) (bad) jg xchg and idivb or scas jno popa sub loope insl loopne popa orb jle pop (bad) (bad) cmp dec test loope mov scas xchg imul xchg pop cmp jle outsl test sti clc xor add (bad) (bad) (bad) jmp out add dec jg xlat pop sub sbb jg lret xchg add pop icebp test pop xchg add cmc imulb clc ljmp jle cld pop clc jg mov in clc stos ret mov (bad) (bad) pushl adc adc lods int3 sbb idivb push xchg inc dec fisubr cli (bad) mov call mov jne (bad) push mov aas imul push (bad) (bad) (bad) push mov in insl pop sbb mov dec data16 test into push adc in pop (bad) (bad) (bad) incl pminub jns loope pop les xor mov jb lcall (bad) xchg (bad) jg push aaa dec inc push push pop cli add (bad) (bad) (bad) js rcr scas ret dec mov mov push fwait loope mov (bad) mov dec jno ja (bad) out push stc sbb nop xor sub mov icebp add or push sarb push jb shrb dec cld lea loop add in mov xchg push test jle movsb rcll mov mov push xchg imul push ljmp add loop ret dec icebp pop subl (bad) (bad) cmp lock (bad) sub adc fstps lock jbe xor push cmp das adc mov dec test xchg xchg mov je adc enter lods inc in jbe in jae dec xchg jle pushf and add mov pusha push ljmp (bad) (bad) dec inc mov pop cltd or test mov pop fild clc (bad) pushl push (bad) sbb clc mov jmp inc or sbb icebp xchg and lret cmp jae adcb sbb xchg arpl xor cmpsl icebp (bad) (bad) lcall inc (bad) test cli push mov xchg fldcw sbb sti adc lcall inc xor and pop mov lods gs aam (bad) (bad) ds pushl dec or fnsave push push dec cmp mov (bad) (bad) cmp imul fs pop vmptrst pop push add and adc mov scas add cltd and ljmp sti pop lds aam test (bad) lret enter mov pop or mov ljmp (bad) inc push xchg repnz xchg sbb fs adc cmp and xor jmp inc in pop cmp jmp cmc les mov push mov mov cmp mov and push (bad) ljmp sbb mov pusha cmc jmp ds ljmp mov jg pop dec les lcall and adc (bad) mov decl test push cmp iret pop cmp push cld call aas adc adc notl xor mov mov add mov xchg (bad) cli fistl test sub lods clc ds out lret inc adc wbinvd xchg or and repnz push dec jae xor xchg loope imul jle mov (bad) (bad) (bad) call loop mov ffreep jg jle xlat cmpsb icebp sbb ret mov xchg movsb std (bad) (bad) jmp xchg out inc cmc popa mov push faddl or push lds jg or jbe enter cld out (bad) call sbb leave and adc or push shr pop inc sti xor lods lock mov adc in outsb xor fldt sub jge fmull pop dec sbb pop ret mov push jns xlat ds (bad) (bad) (bad) jmp paddsw cmp (bad) sub sub fisubrl or lret fsts (bad) push ret jns sub mov aad inc sets into lcall aad xchg (bad) (bad) (bad) ljmp leave into xchg sub int3 pop das mov add in mov push jb push (bad) (bad) (bad) decl mov scas cmp or out mov es mov jg inc lods and (bad) (bad) (bad) (bad) (bad) cmp mov (bad) shr adc outsl lock ljmp in add (bad) (bad) (bad) mov (bad) add inc cmp jno jg add cmpl scas xchg or imul sbb ficoml add decl jno lcall rcr (bad) icebp das mov pop movsl fdivrp test fsub (bad) jmp ficoml mov and insb cmp push xchg push int3 aad ljmp stos cmp popf les icebp dec lret es ja clc fldl setl push stos aam push jp push pop add mov fsubp ljmp lcall jne mov mov gs jae or xlat pushf mov movsl cli jecxz gs das lcall mov decl add notl popf xor ret clc (bad) push fucom xchg mov jmp and mov xor arpl jne decl mov sbb or lcall mov outsb xchg into push add bound cld stc cwtl sbb mov repz (bad) (bad) (bad) lcall es lods fiaddl lea rcrb ret mov inc or (bad) mov mov inc cli outsl mov or lea cmp mov xchg mov and cbtw or imul stos (bad) stc or gs dec xchg arpl pop (bad) xor sbb xor or fwait decb lods (bad) mov scas push loopne jbe or jl clc (bad) (bad) (bad) jns jle lock xchg xchg mov negb ret xor push fwait push xchg (bad) (bad) ljmp sub xchg enter les dec ljmp std inc dec mov int sti mov loopne lea pop ffree xchg stos jae (bad) sarb enter pop outsb jl (bad) (bad) (bad) push les and adc pop cmp jecxz (bad) pop ficoml mov and mov (bad) pushl popl cmp movhps fldz in negl in jae add dec pusha lock (bad) cmp (bad) (bad) pushl dec notb xchg cs mov cmp mov test les (bad) cli mov (bad) (bad) (bad) cmp inc out xchg aam pop add clc jg jbe (bad) iret test sbb loop push (bad) (bad) (bad) incl cmc or lret pop pop leave xchg push sub mov cwtl push das sbb sub cmp ret jmp std sbb mov inc aas xor outsl hlt mov inc addr16 xor (bad) (bad) inc daa ficoml (bad) and cltd dec dec push iret xchg out mov fidiv adc xchg lds fidiv imulb (bad) inc outsl xchg adcl lods lret sub fs cmp pop inc inc (bad) ljmp xor pop sub aaa cld (bad) jl rep les clc jae clc in ja js repnz xchg (bad) (bad) (bad) mov sbb xchg sub add push pop add in loope mov mov (bad) ljmp cmp push mov ret jp pop ret insl out test repnz stos lcall and mov out and movsl (bad) (bad) decl ja dec loope popa mov iret in and movsl pop inc (bad) (bad) decl ds inc xchg push pushw rol sbb (bad) xlat loope scas jae pop ret mov (bad) cld aaa loope jmp int (bad) xor dec test stos enter push mov fmuls xchg stos sahf jp (bad) (bad) jmp cmp push xchg mov xchg fisubr icebp push mov dec sub jnp leave jns ja xor (bad) (bad) jg leave loope and ret jnp das (bad) (bad) push pop adc inc movsb mov mov sub (bad) call sub stos and mov stos adcl fwait sbb stos add xchg push xchg aaa fsubs sub in mov ljmp mov mov in out int3 mov (bad) call add fcmovnb push lock jns popf dec push mov imul into push and sub (bad) (bad) call sub add sbb outsb jecxz adc xor aas or imul ds pop cld mov pusha mov mov push and in (bad) jl pop inc sub sub lea mov cld lcall imul and repnz pop lahf loope inc and ljmp ret movsb mov dec out addr16 ljmp mov jg fisubl in mov (bad) fcomip sub pop rolb (bad) push inc mov lock test sbb mov cmc loopne mov pop or (bad) ljmp xor xor lds aaa repnz bound into cmp (bad) sbb sbb jle pop push push hlt mov and sub test xchg and ss sub (bad) cmc (bad) (bad) jg stos or adc cmpb xchg jl aad jmp imul ja (bad) (bad) ss aam sahf (bad) sbb ja push mov pop je (bad) (bad) ljmp xchg gs mov int xchg rcr pop jp ljmp jg in pop sub lock outsl sbb test jno mov cmp mov and adc fldenv outsb ljmp imul xor (bad) (bad) incl les (bad) push (bad) sbb sub pop (bad) ljmp cld mov sbb xor xchg bound das lds mov icebp (bad) (bad) (bad) ljmp test push (bad) int3 arpl in movsb xchg inc mov jge loopne leave lods jecxz ficompl (bad) push icebp (bad) (bad) pushl lahf jno adc inc outsl and lods push inc out insl iret test sub inc into sbb movsb mov sbb xchg and pop pop cmc pop imul sti stos dec out jg int3 cli pop (bad) jg inc add insl lock pop mov mov jmp pop lcall bound loopne out (bad) addr16 mov (bad) cmp (bad) clc mov loope xchg stos sub mov xor xor mov inc (bad) (bad) (bad) (bad) (bad) inc mov movsl push adc cmp lahf push test dec sahf push adc xchg (bad) fcomip (bad) (bad) (bad) decl cltd mov mov xchg mov in mov jl dec and and (bad) (bad) (bad) call shr int3 imul and aad psubsb das mov inc mov pushl std cmpsl lcall inc or and jmp rcrl fimul add (bad) jg or imul pushf mov js addr16 cmp inc addr16 dec ret cmpsb outsl clc pushl rclb sbb int (bad) stos jno sub (bad) dec lahf fldt jns pop stos pop add sbb cmp push fwait or xchg cmp idiv sar imul lret ljmp sarb xor (bad) mov push cmp xor (bad) and cmp (bad) (bad) (bad) jmp and or in sub fnstcw loope mov inc jl (bad) mov or (bad) (bad) (bad) inc pop push (bad) push inc cmpsb mov loope out outsl push push pop fldenv pop (bad) dec adc xor lods leave cld pop pushl cld push (bad) jae or adc (bad) sub lahf (bad) out mov nop push jno icebp lret and sub mov roll cs jecxz ds insb mov out lds mov (bad) xlat data16 imul cmp data16 insl dec ret fbld lret cmp or lock mov cmp (bad) dec lcall jge mov push mov xchg sti lods jb dec popf or jb mov (bad) iret in cmpsl icebp xchg (bad) incl cld fcmovbe ret or jae sbb psubb mov adc lcall call jbe insb lods sbb adc xlat adc (bad) lds or jl scas (bad) jl dec (bad) (bad) (bad) lcall das movsb mov xchg pop sbb and or in nop cltd push push jle push (bad) (bad) (bad) ljmp fwait inc mov pop mov ret ss imul jg lea lret pop into data16 (bad) (bad) call cltd pop lret add out or fimull pop ja loop mov (bad) (bad) (bad) call ss xchg fsubrl mov outsl or popf sbb shll or stos cwtl adc (bad) xor lret sti pop repnz and in push cmp xchg ja jle xlat ret lret dec sarl loope fiaddl adc fdivs add in mov scas outsb pop lahf mov (bad) mov and ret jae jl (bad) iret aad incb fisubl jle outsl cli call fisubrl hlt fcmovnu lea enter jge fld out add decl sbb daa movsb icebp idivb (bad) (bad) jge js test mov movsb sub mov push dec and popf mov xlat stos movsb xor mov iret (bad) jns cmp ret (bad) mov hlt pushl mov cmpsb inc (bad) cmp inc scas mov dec sbb decl sahf xor gs mov js insb stc outsb ficomp push sar (bad) ljmp mov (bad) mov jmp icebp roll std mov pop stos jl (bad) (bad) (bad) jg cli lds or inc stc test jo stos dec mov test mov clc xor icebp dec outsl cmpsb ljmp xchg mov pop pop inc cmpsb clc aaa dec jnp add xchg lods jo movsb lea cmp decl cld into (bad) mov out cmp icebp sbb fidivr lock les dec lcall mov push pop pop popf insb out cwtl push fimull inc pusha inc push mov add les sub out xchg mov into jmp mov insl push inc push pop sub (bad) (bad) lcall sub jae addb push sarl loope sub mov clc jg sahf or push div aam loopew ret ljmp sbb aaa sarb (bad) data16 fisubl roll dec jne lock das out popf fsubs mov in (bad) mov je and loop mov pop pop clc dec mov (bad) dec loope cmp lods std call fmuls loopne xchg lock and cmp mov pop sub pop sub cmc sub push popa cmp stc cmp cmp (bad) ljmp imul mov std mov sarb mov aad inc call out mov inc sub int arpl les mov pop icebp mov jecxz mov xor idiv scas xchg movsl jbe lret mov sahf test (bad) (bad) call lahf mov repnz out repz xorl mov push inc mov jmp call or ss cmp cmp pop lea (bad) (bad) (bad) (bad) mov clc lcall xor mov ljmp push push push lret lcall dec into fsubl sarl icebp xchg mov and pop (bad) (bad) (bad) decl ficomp xchg fcomp (bad) mov sbb ja lods inc xchg sub mov jbe (bad) incl sbb xor and fidivr lods adc cmp les push fcompl dec fs pop sbb call mov mov faddl test sbb test das cli (bad) cli les pop insl fisttpl lods or lret stos pop dec (bad) pop cli fdivr (bad) (bad) (bad) (bad) fdivr xchg xchg call mov (bad) cltd lods insl pop mov inc ja fs out lret imul pushl sub and jo bound adc mov push clc adc pop (bad) lcall mov repnz jno bound mov pop cmp or ljmp clc cmc test sbb xlat in cmp fidivrl andl movsb ret test (bad) (bad) incl test divl xchg cmp xchg jecxz out test mov in lods cmpsb jmp (bad) (bad) (bad) call dec ja pop pop icebp fimul es aam out pusha gs pop vmovupd (bad) decl jecxz pop push (bad) lea cmc in jne lock xor cs hlt xor aaa js loope (bad) dec dec inc or push rcl mov in (bad) (bad) (bad) decl dec mov add mov and and mov int mov icebp scas jo adc (bad) cmp sti aaa imul (bad) (bad) jg dec sbbl imul mov aam dec mov adc (bad) pushl nopl mov mov lock sarl cmp jge incl clc and ret dec popa (bad) jp int3 mov outsb dec cmpb mov jo bound test lods add outsb mov lahf mov in mov push hlt call imul cld jp ss decl bound jbe and push sub sbb lea pop xchg pop dec out dec mov pop sub jns fdivp (bad) (bad) ds cmp mov mov pop mov rcl scas and dec (bad) (bad) jecxz lds jg call add xlat (bad) hlt pop ljmp sbb ds (bad) (bad) jge iret xchg dec jl lock xchg ret jg je sbb pop leave loop,pt adc (bad) incl xor outsb frstor sarl out pushf xchg dec mov mov xchg into loop std ljmp (bad) mov pop fidivrl mov pop lds pop es lcall xor pushf push xchg dec sti stos cmp int mov (bad) pushl inc mov insl (bad) ss mov jg fnop data16 (bad) hlt test lods data16 (bad) (bad) (bad) call sub jns lret insl sbb fs popf sbb inc cmp notb push or fwait xchg fidivr add xlat push repnz jle les push fcom (bad) std (bad) (bad) lcall into pop std enter clc sub inc lea sub (bad) push test (bad) (bad) pushl lock pop push jmp sbb sti sbb jmp scas cld jmp sub mov mov outsl mov in dec fcmovnbe mov push jle jle lock mov aaa call clc and lods jmp mov aam xchg sbb or mov pop or and outsb inc jbe push loop lock mov clc jle pop out test dec and mov hlt lcall inc stos lret add daa mov mov icebp fisttp das clc dec loope and mov ljmp js movsl shl mov in clc jne push push mov add je popf or (bad) (bad) jmp or xor inc (bad) mov (bad) (bad) dec iret scas std fnstcw dec add out lock clc or mov pop jl lock add mov pop (bad) cmpsb mov std movsb sbb dec jnp inc cmp add sub pushf repz sti (bad) (bad) jg shl clc sbb divb or pop sbb inc aad (bad) ljmp arpl push mov inc mov shrb push dec rcrl lock (bad) (bad) jg test lcall mov fsts stc dec push cmp ret imulb or scas test (bad) mov lcall cmp lds cmp pop or cmc movsl out cltd imul jmp inc loopne mov fisubl arpl sbb outsl lahf cld add (bad) jmp lret push iret lock mov lret out cmpsl shr sahf push std stos ds jle call cld dec or negb loop cmp lea lahf or xchg call xor movsb and (bad) (bad) (bad) lcall mov aas mov int dec ret ds fisubr mov inc sub xor call (bad) loop inc mov shrb xchg insb or int adc push mov dec notl mov (bad) mov ds icebp pop xchg aaa imul or adc cmp jno imul jl popa fs cmp sbb out fsubs push std mov mov push loope outsl push mov mov loop adc xor fisttpl pop movsb fiadd xchg (bad) (bad) (bad) incl test mov shll adc xchg int3 test imul aad cmpsl add (bad) (bad) jle pop movsb mov (bad) (bad) aas mov in lahf lock mov std mov outsl and loopne idivl call inc cmp out and mov inc pop out or pusha add aaa (bad) lock cmpsl mov fisttp mov jne jmp sub cmp add (bad) dec int3 xchg xchg insl loopne mov lods inc movsb mov (bad) mov push mov (bad) incl stos push lock int3 aas pop data16 sub hlt lods dec loop jne pushl fdiv int cltd or sahf movsl xchg loopne fs lock stos inc loop fdivr xchg test sbb mov mov fnsave daa mov (bad) (bad) jne push lret (bad) (bad) (bad) incl std lcall xor or int3 or mov xor fmulp out div dec xorl inc insl hlt cmp pop sahf jl,pn cltd (bad) jg sbb jnp jg mov cmpsb clc ss mov xchg (bad) out clc pop push mov leave lcall xchg xor sbb int mov pop aam push fwait push mov fistp bnd call std loop inc lods icebp xchg xor lea adc adc sarb mov push inc mov (bad) (bad) lcall mov lock mov std jne xchg adc ret xor (bad) insl mov bound pushf sbbb cmp push ljmp ficomp mov cmp jmp mov xchg add (bad) lcall ss inc loopne push push sub ss pop mov mov jl aaa andl dec mov add push mov (bad) call or fwait jecxz out push pop pop pop fcmovnu scas xchg arpl out pop ljmp (bad) dec xor xchg sahf add pop sti inc ret and leave mov in cmp and (bad) push mov call test adc pop dec xchg addl push add add (bad) adc ja sbb std (bad) (bad) lcall push in ret mov xor push adc (bad) dec enter call dec in je outsb dec jge loop fnclex pop push pop or inc (bad) (bad) decl jl inc std test dec mov sarl adc mov adc push cli (bad) lcall pop mov xor mov negl test pushf jge or (bad) lret fs (bad) (bad) call (bad) ss or popa cmp std ret pop js dec fisub jle pop out xor movsl jl decl add pop sbb sarl add ret (bad) (bad) (bad) decl mov and (bad) (bad) mov ljmp push loopne arpl in outsl movsl pop lock mov lods jo jb mov cld cld jg (bad) cmp pop push mov or fidivrl push push sti scas mov lahf fisub or lcall hlt neg icebp xor iret xchg or cwtl lock fwait or (bad) fildl imul imul les outsl sar shlb cmp mov ss adc sbb (bad) mov aas add jns movsb jle ficom mov fistp cmp hlt mov stos push sar (bad) outsl cltd cmp nop aaa add enter idivb (bad) (bad) (bad) (bad) (bad) fcomps adc lret loope dec fstps lret les aad lods jcxz mov push ljmp incl inc in push xor xchg sti push imul (bad) fisubrl dec shrl std aas pop mov and (bad) or (bad) (bad) decl pusha dec mov lahf loope cli jns ret (bad) fidivr jle clc push dec sar or cmp lea mov out jne adc push xchg adc mov adc sub pop sbb dec or in stos cli sub popf xchg jae push push (bad) sbb lret icebp add xor sbb call icebp xor and ret or or add pop ret cmc in (bad) jmp mov mov scas test cli pop mov inc xchg in sbb xchg sub lea pop mulb xor sub sbb sbb mov add (bad) (bad) jg mov cmp xchg pop mov out xlat and sti xor mov (bad) (bad) jg gs mov dec outsl test jnp out insl in fist inc jl cmpsl push add fprem (bad) call stc xor ja (bad) pop adc lock pushw inc (bad) xor dec mov decl scas xchg negb test movsl jmp xor pop (bad) (bad) (bad) (bad) mov fmull mov push loop inc push xchg (bad) push cli push in jae ljmp lock push mov dec push cmp inc out jle (bad) call aas scas fidivl loope les fsubrl es out gs (bad) or fwait jecxz icebp (bad) js pop loop jmp push fstpt jge cltd mov (bad) (bad) mov imul out mov mov sub push icebp insb fstpl (bad) call xchg ja cmp xchg mov movsl pop dec mov fidivrl iret ret (bad) mov not lds cmp xchg inc dec (bad) (bad) jmp idivl enter xchg and pushf pushf add aas push mov dec gs xor cld outsb lock (bad) in ss dec in sbb mov jae cmp enter mov ljmp push shlb in xchg pop cli sbb xchg imul pop cmp ret jmp test xchg add insl or cmc mov lcall (bad) movsl scas fcomps and fnstenv mov outsb add push (bad) pushl mov pop fnsave sarl mov (bad) (bad) ljmp xchg jle js pop sarb out (bad) fild lret dec push in xchg lret xor jbe (bad) (bad) (bad) decl int inc adc push clc push jg cmpsb mov das push js dec imul inc (bad) sti and (bad) cld test loop gs cmp pop xchg (bad) (bad) mov and sahf sub cmp cli sub lods icebp (bad) jg (bad) mov insl enter dec jns xchg imul jecxz mov stos cmpsl idiv (bad) call mov inc into ficomp lods outsl add (bad) pop lahf cs pop (bad) (bad) cmp pop push cmp (bad) incl iret mov cmp jl hlt hlt out scas xchg and mov scas xchg (bad) sahf fyl2x ja xor sbb out icebp and clc jecxz xchg (bad) (bad) (bad) dec aad fucomi addr16 pop adc and pop clc mov addr16 mov icebp mov (bad) jmp sub xor pop pop push insb xchg cli or aaa cltd sbb adc sub (bad) (bad) (bad) (bad) dec (bad) dec xchg (bad) aas mov sarb sub imul loopne push cmc or in mov les jge jns jl in incl divb scas add pop lock inc adc (bad) xchg cmp (bad) push jb xlat push scas and push dec loop std rolb dec xchg jbe fcomip pop lock lods (bad) scas outsl and imul pushf in inc (bad) sahf (bad) (bad) (bad) jmp lock mov jge sub lods insb push jb imul dec push adc in dec cwtl faddp add (bad) pop out mov enter call adc (bad) idivb inc mov scas imul leave xchg bound scas and lcall jge add xchg ss fistp mov je ljmp pop cmc pop and sub xchg dec dec dec push pop out sbb and decl and stos jecxz adc (bad) and push xchg loope pop mov out fcmovu ljmp sub xor aaa adc jno mov push imul aaa push or out and hlt or cmpb inc mov pusha mov movsb dec lods xchg std scas popa cmp js mov xor js push fcmove loop (bad) fcomip dec xchg icebp pop or jl stos jg std xchg jp shl roll repz (bad) sti test (bad) (bad) lcall out outsb dec scas sub jl lods mov jecxz insl push push mov je pop sub sub lods out adc jo int mov imul mov clc inc (bad) ljmp shr insb fildll ljmp jg (bad) push push jle xor loopne sub in sub mov (bad) (bad) (bad) (bad) fimul js les icebp sarl les mov test (bad) mov cmpsb sahf sbb jne ss orl pop pop jecxz or mov (bad) lcall push outsl sub mov jno mov cmp cli jl (bad) (bad) (bad) jmp aad sbb enter dec jle mov fstl (bad) xlat add aas cltd (bad) dec jmp das (bad) (bad) (bad) lcall mov ss jg in fmull jmp push mov cmp rcrb fucomi ljmp nop test faddl jge jmp dec cld aaa cld cmc xor xor jne jmp push cmp cmp in lock (bad) loop fxch ljmp jmp sarl into out pop dec adc je mov mov cwtl jns repz in sar and icebp outsl bound jl clc sbb push js cmpsl loope dec cld fistp cld push shlb push idiv push adc stos ret jae fcomip (bad) decl lret outsb out repz sub sbb clc (bad) jecxz cmp jmp cmp xchg ja andl in lret (bad) jmp push aaa out push stc mov adc clc sub ret in jecxz,pn push mov idivb pop fwait (bad) (bad) ljmp in test push xor dec xchg aaa xor test jl inc dec adc adc mov inc outsl into incl mov inc or adc shr (bad) mov pusha sti fs cld inc std popf loope mov or jmp icebp incl mov cwtl scas and jae pusha incl stos xor loop mov xor fwait pop mov and pusha mov xchg fild jmp adc pop test sub pop ljmp sub adc call sbb mov imul (bad) ljmp imul xchg add ss icebp mov add mov sub incl movsl stos push jp xchg mov or bound roll (bad) (bad) call into cmp aaa pop in int3 aaa push jae mov lods test sub pop out out repz std xchg (bad) (bad) (bad) (bad) mov insb iret adc sub mov dec shr insl add fld jne subb adc and adc mov pop push divb lea lea pop mov mov (bad) decl lods in sub (bad) jb dec into mov inc mov decl pop dec mov dec icebp (bad) dec icebp ja cmpsl repnz inc mov ljmp aad mov adc (bad) jmp xchg cmp sub sbb imul push ret sahf es clc adc mov dec or dec lock imul call sbb fistpl (bad) pop stos dec divl pop inc outsl aas sbb fisubr mov fisttpll ja adc call jge jle idivl lock jns lcall or cld pop xlat push pop jge mov int xor cld (bad) (bad) ljmp loop mov adc mov mov ja push push sbb int and clc lcall xchg or mov lods pop cwtl cmc sbb out nop mov shll lret sub clc pushl xchg scas xchg loope xchg or je stos mov (bad) outsl cli jmp aam mov dec mov jne arpl add and pusha lcall (bad) decl nop lds sbb insl outsb loop adc pop or clc (bad) (bad) mov xor imul test (bad) into mov mov dec lock (bad) (bad) jg lret std adc jl clc daa loope push (bad) clc cmpsl mov movsb pop mov or (bad) jg pop mov stos cmpl push loopne mov lahf sub cmp cmpsb clc (bad) (bad) (bad) lcall sbb push mov push xor mov gs mov push xorb push jmp or inc (bad) mov mov xor (bad) aas mov jne sbb inc aam lret outsl sbb inc into aaa repz xor fstps mov add movsb xchg inc mov in jl loop fcmovbe inc leave test dec sub outsb adc ljmp inc mov dec sbb test jp frstpm(287 xchg incl (bad) decl cmc aam xor fldl ficomp loop das jb lret int in mov push xchg dec jecxz rcrl sub sbb (bad) (bad) jmp xlat mov loop test jmp insl jno (bad) ss test mov enter (bad) pushl sahf xor pop test mov cltd loope mull and jbe (bad) pushl ror imul jb push or and in or jg or cmp gs loop aam inc repnz addr16 ljmp xor cmp sbb pusha xor jb sbb das js outsl mov adc or inc dec lock mov mov (bad) pushl out and inc fildll fimull (bad) ljmp lods cmpsb mov pop push mov lods loope aam mov or nop lods or movsb decl inc mov jb xchg inc cmp xor imul gs fnstsw mov pushl fisttpl in int3 idiv inc (bad) push adc repz sbb (bad) cltd and lahf mov lcall test rcll mov adc sbbl mov idivb icebp mov dec dec push and lods fldt xor xchg inc cld or adc cltd iret pusha inc scas (bad) (bad) call pop jmp push out mov mov scas mov (bad) mov call loopne push gs cmpl push out ret (bad) jl clc sub push rol mov hlt fwait mov (bad) fisttpl das jecxz mov mov rorb mov pop in aad cmc ret arpl movsl sub decl mov jnp je jbe (bad) ljmp outsl fist dec and mov cmp movups sbb scas jle clc ret sar (bad) (bad) mov ret mov shrl and (bad) ljmp test (bad) jmp scas jae mov icebp fs in jmp ja js in in mov (bad) (bad) ljmp lret xor xchg dec xor pop or call shl add push mov fsubrp loopne xchg sub xlat jp lahf sbb pop mov add lock loope mov (bad) (bad) pushl mov fisubrl xor pop ss fwait iret mov sbb das lcall xchg ss or cmp clc adc repz push cmc (bad) (bad) in jge mov movsl int3 xchg mov std mov iret sahf or (bad) (bad) decl mov inc pop es push lock lds outsl push ss hlt fidivrl dec fwait dec data16 (bad) (bad) mov in shlb (bad) pop stos mov pop and out sbb hlt call scas adc pop mov and lds (bad) (bad) fild enter pusha (bad) cmp push loopne pop sbb (bad) cld push (bad) jg dec movsb jg cmp dec mov jmp xor ficompl pushf adc int movsl lods or push sbb in stc dec loopne add shlb cmc pop pop fs lock icebp push mov jge (bad) mov mov inc jl xor jecxz shrl fs shrl jg in arpl out mov pop fucompp mov and lahf jne xchg scas sbb aad jg jmp shl andb xchg push gs insl pop adc pop xor jg ljmp adc imul (bad) test imul pop sahf xor bound pop mov jns enter sbb sbb lock pop push push cli (bad) (bad) or jle (bad) cltd test push fild lcall mov loopne int3 addl mov or (bad) jmp aas scas clc daa cltd xchg (bad) xor jns jnp jp mov mov (bad) (bad) ljmp incb pop sbb lahf ret pop sub and pop imul imul push jmp popf add (bad) jl add daa in (bad) mov test dec ds mov (bad) cli sbb jno mov ret les loopne sbb fsts (bad) call xor (bad) fnstenv sahf (bad) (bad) (bad) mov dec or fbld (bad) mov outsl test mov (bad) cmc aaa cmpl pushl cli dec jb xchg mov jle dec addl icebp (bad) mov cmpsb insl iret std jnp pop jge sub test xor shrb rorl pop cs jg jmp cmp inc mov out mov cld mov pop lock sub xchg (bad) ljmp out loopw outsb lret xor inc mov xchg ret and pusha aaa mov cltd loop fldenv pop lods clc add mov or decl inc dec pop or cld pop scas jmp and (bad) ljmp add popa jp enter orb (bad) bnd jecxz mov cmc cmp (bad) movsb shrl loope mov negb cld movsb mov jnp orl pushl aam adc dec xlat mov mov pop ja mov add mov jmp adc (bad) (bad) cmp in pushf xchg shl stos or adc xor jnp xlat enter (bad) (bad) mov gs push sub aad fimull (bad) loope lock insb lods (bad) ljmp lods pop clc (bad) dec and out mov dec xchg loop xchg divl or add cmp add or xor into jg decb ljmp mov loopne push push shrb movsb xor jo sub mov adc divb int aad fimull pushf stos stc jl lock aas std pop mov push (bad) loope js pop test jge cmp (bad) pushl pop adc mov mov pop add jnp std (bad) (bad) (bad) fcmovu jg loope mov int3 xor leave push dec divl lods popf pushf jns div ja jle jl ljmp clc pop (bad) insb mov outsl or dec call mov mov std (bad) (bad) jg mov push mov sub stos pop sti lds xchg push jl push or lock aas in imul sbb inc (bad) sbb push mov jge dec popf addr16 gs dec inc mov insl ret push repnz xchg mov push cld jmp mov (bad) idivl push lods cld inc adc lret sahf stos jno inc enter das in lods cvtpi2ps jle inc in imul ret adc outsl jg (bad) (bad) ficoml outsb sub dec inc stc sub je sub xor xor popf (bad) (bad) (bad) (bad) mov sub push xchg add and pop add ljmp lea xor mov sbb pop pop lock ljmp mov lods jae mov add mov ss xchg cld jmp ret nop push loopne int adc ret loop test mov (bad) (bad) jg inc or dec lods imul test shl or xchg mov cltd sti cmp xchg faddl jg (bad) (bad) (bad) (bad) clc inc adc fcmovnbe je loope cmp sub repz cltd xchg imul aam mov (bad) (bad) call xchg insb arpl xchg imul jle dec pop enter adc jle cld adc (bad) lock loope mov (bad) jg cld sub aam xchg pushf lcall inc jmp call mov and pop inc sub in stos das mov bound push aaa sub pop insl adc add lods insl es loop int adc or jmp imull sub lea xlat repz (bad) add push push lahf fist pop (bad) ja dec (bad) cwtl rcll xor gs loopne ljmp and jbe scas popa andl repz push mov push pop enter sub stos lea mov mov lcall cmc scas xchg adc ds mov ret pop xlat (bad) call js in je fistpll xchg push push inc into out mov fs jae mov sub jl pop mov mov push std sbb or or jge dec xchg stc xchg ljmp or add daa testl jl (bad) dec daa cld decl mov inc outsl (bad) mov mov les (bad) fdivp lds sub int3 push shll repnz call into pop add pop icebp cli inc icebp or push ds ljmp sbb (bad) jecxz shr inc sbb iret and into in fstps cmp push adc pop adc stos inc mov mov dec scas or arpl ljmp sbb leave adc daa jge lcall mulb xchg movsb imul mov lahf in imul inc (bad) (bad) (bad) (bad) mov imul repz mov add jecxz sbb xlat testb pop call cmpsb aas sbb clc mov ret mov pop (bad) mov stos push les adc mov push mov lock (bad) jmp mov js call clc sub in (bad) icebp test push movsl fadd das ss movsl mov test and sub or notl xchg cmp (bad) ljmp adc (bad) pop clc inc ret jle lock cmpl jg ljmp in dec es mov cld nop inc and pop es call mov push ds int sarl pop push cmpsl outsl cli mov xlat mov out in xchg mov xorps (bad) repz mov in xlat cld jle (bad) (bad) out push inc fninit inc jnp test cmp cmpsl fnstcw lcall mov xchg inc stos pushf cld ret (bad) enter imul jle (bad) pop mov (bad) incl pop les push pop xchg pop lock test mov xchg pop jo in pop (bad) (bad) decl cs les and dec in sti cmp xchg fcomip (bad) ljmp arpl mov fwait test xor rorb out jb cld mov inc data16 int outsb (bad) push mov mov (bad) pushl in jo mov inc lds mov pop ds ret sub xchg mov xchg jge shrl sbb lods dec scas popf test inc movsb mov sti cli jle mov ret (bad) (bad) pushl scas lcall ret cmp cmpsl (bad) fdivr aaa rcrl jg mov lock (bad) dec push daa (bad) cmc or loopne andb add push sub daa adc incl test or cs (bad) (bad) aas adc ljmp push inc insb (bad) psubusb hlt lea in lods jg (bad) (bad) jns insl add xlat pop mov out (bad) jb pop xchg shr adcl fimul lock mov sti pop imul fnop ss (bad) pop cmp cmp pusha mov jecxz mov bound pop cld adc jl mov addr16 adc pop lcall push rclb cli pushl loop inc dec popf rorb lods add and dec sub (bad) (bad) call scas in stos rcr mov cwtl push lods add icebp mov imul pushl push fs clc and (bad) dec lock lea push jle aam fdivp (bad) ljmp fmull sub sbb stc push inc stos ss fwait sbb addr16 adc (bad) call jmp fildl loope xchg lods cld gs cmpsb shr lds fild outsl (bad) lcall lret add fucomp popf mov mov cmp jle ljmp xchg rolb cmpsl leave jne pop add (bad) cs (bad) jb pop mov sub mov cmp test inc ret add bound cmc mov stos ljmp pop push into adc iret fisubrl (bad) lcall stos fucomp data16 shl ficompl xchg jp mov outsl push clc (bad) out sar (bad) (bad) (bad) cld outsl loopne inc dec add push mov lahf jge jb mov mov push push enter add out mov sbb clc pop sahf and movsb clc das std xor ret push movsl sub (bad) lcall fidiv pushf mov ret jo jge popa cld ss jae cld push xchg (bad) (bad) std movsl cmp mov xchg loope es insb fsubrs sub lods and (bad) incl and je or stc aam dec scas sti loopne out rcrl das in add (bad) push lock dec icebp movsb sub mov jae cmc cmp loope fisttp bound or jo xor insl cmp xor dec fstl jg ljmp inc jecxz sub ljmp int3 mov iret (bad) lcall clc mov or mov (bad) fcomip dec jb adc pop scas es es fsub pusha mov pusha (bad) pop leave adc ret loopne jns aas or mov (bad) (bad) decl dec lea es das pusha sbb push and pop (bad) aas (bad) incl loope jl fmul test adc sub imul (bad) jmp pop pop aaa xor or jo or iret (bad) sub ljmp xor jle cld dec mov hlt xlat sbb repz cmpsb ljmp pop loopne fmull lea clc (bad) (bad) jmp fnstsw aas popa dec sub loope mov fs stos push xchg xchg insb dec push clc incl adcb mov into leave and inc mov notb (bad) (bad) pop (bad) (bad) call adc inc clc jnp sub jnp,pn inc sbb cmc push (bad) dec testb (bad) in xchg xor js daa push inc lock xchg out lret mov mov cmp pop xchg push push push or push jno (bad) (bad) ljmp sbb jecxz adc mov pop jmp push adc lods mov cli clc dec ljmp test jno loope decl mov movsl mov lea rclb cld pop (bad) xor dec inc movsb mov aaa std lcall idivl (bad) xor pop in cmp or dec mov xlat add sbb xor hlt push mov mov push sub lock lock incl jmp jbe stos insl cmp mov (bad) xor decl jo mov icebp sub mov jg in mov imul clc (bad) (bad) pushl sub xchg out dec jle mov sbb clc lahf decb repnz negb mov (bad) jg jl inc mov in and out outsb ja cmpsl add outsl and std push das push mov insb cmp xor pop inc (bad) jg inc fldl testl inc aam sub add jle repz mov addb push out (bad) (bad) (bad) call ljmp retw out ret ret mov sub icebp xchg cmp push popa mov jle,pt cmp mov cmc pop mov mov pop aad fnop hlt mov pop xchg xchg rcrb clc daa pop movsl or (bad) aas sub clc mov xchg (bad) (bad) jg ljmp dec pusha cmp cmc out jge lock or out add out (bad) pop icebp push mov cmp ljmp mov cmp (bad) incl jb push add sbb mov sub fisub ret (bad) (bad) call dec pusha push ror dec xlat test adc (bad) jbe push cmp scas jl aad negb jmp xlat inc shr mov mov out adc stos xchg push loop orl imul jp sub es ud2 inc mov loop into dec xchg push pop aad inc loop out icebp das mov icebp (bad) jmp nop sbb mov lock mov xchg mov (bad) jg xlat push ss mov pop dec adc dec push xchg stc ljmp lock adc out cld adc loopne (bad) repnz pop pop cld and pop mov (bad) (bad) (bad) call hlt pop jne ljmp andl or sahf dec das xchg inc and in ljmp (bad) outsl fmuls mov clc jecxz adc in sbb adc cwtl repz ljmp test clc sub lock imulb aaa lock (bad) mov orb int sbb movsb jae pop (bad) sub dec xor xor sub aaa cld cwtl bnd jl add xchg xchg pop fild ja adc (bad) (bad) cmp xor jno push jno mov scas out fild adc fisttp cmpl pop mov popl cmp je mov xorl (bad) inc outsb jns cmp inc mov mov mov (bad) (bad) mov mov mov loope popa mov lcall pushl inc pop cmc jnp outsl xchg ja pop std mov (bad) xchg inc push xor aaa (bad) (bad) (bad) (bad) ljmp pop mov dec fisubr aad inc jae sub push stos and mov sbb fs ljmp icebp jl cli xor ss cli sahf xchg sbb mov jmp sub dec jae xor dec push dec in scas mov pop mov sahf and call cmpsb jl lock std ds or pop fimul mov inc adc idiv pop insl dec cmpsb push pusha cli inc rcrl iret (bad) cmc popf pop (bad) (bad) (bad) decl paddsw sbb mov jle push (bad) inc mov dec imulb ret sub dec (bad) (bad) incl dec sub scas (bad) loope (bad) jg aaa pop icebp pop in mov cmpsb (bad) (bad) (bad) ljmp sbb xchg aam divb push jno inc out daa and push lret aaa lret pop (bad) sbb fwait mov rclb hlt xchg sub mov ljmp mov ljmp mov dec (bad) push mov xchg pop (bad) (bad) (bad) call dec jg fnstsw xchg mov gs loop aas (bad) jg pop ljmp or pop push aas sub neg ret aaa cld jmp inc cmp jno popa pushf jnp in cmp xchg pop clc mov (bad) (bad) jg pop mov aas outsl add repz (bad) imul mov cmp mov (bad) (bad) fildll outsl (bad) scas das cmp std lahf arpl xchg leave outsb mov pop in bnd push add (bad) ja in data16 dec jge insb test cmpsb (bad) frstor decl icebp icebp repnz mov push xchg daa add xor lret (bad) (bad) decl call lds gs lds mov sub mov std (bad) incl sub mov cwtl clc xlat decb aas icebp mov addr16 decl lcall add sub and xchg add fwait jl add jecxz (bad) (bad) sti cmp sbb popf lock clc xchg cmpsl fistpll cmp fadds push or add (bad) (bad) (bad) out daa fdiv sub pminub in xchg lock dec mov popf ss cli (bad) jg cltd insb lcall mov xchg repnz add inc pop and sbb dec push mov sbb sbb xor fisubr or cmc push ljmp add push jmp mov lods scas lret std call fidiv push call lcall add push js (bad) jmp je int lods outsl and fisttpl ret (bad) (bad) (bad) dec jns or dec add xchg jne inc (bad) fmuls (bad) imul (bad) jg fild (bad) je movsb lea in or push rcr orl lods xor daa mov icebp and jp and sarl loope fcomp dec fistl sarb mov fwait sbb or aam lahf mov jl loop stos pusha add stos loope inc xlat dec (bad) (bad) (bad) cmp mov icebp mov xchg pop cmp xchg (bad) (bad) (bad) lcall adc lods cld stc push xor adc (bad) sub lock movsb aad inc xor push mov xchg mov outsb mov pop test lock inc mov adc jbe mov (bad) jnp lock pushl jne mov and and call jmp jg (bad) lcall jno and cmp mov mov push sbb pop sub lahf popa in mov push out xor push or lcall adc push push sbb mov ljmp mov add pop loop ret int loop ret out (bad) sbb aad stc sbb xchg cmp insb call or (bad) (bad) (bad) inc jnp xor imul jne int push aam mov insb mov pop shl jg idivl aad ds jnp xchg clc fistpl aad cmp or pop xchg mov add inc dec insl inc pop in mov pop hlt (bad) clc mov lods out sub lds mov (bad) jg mov pop movsl xchg daa mov xchg fildll fdivrl insl loopne xlat push sarl (bad) (bad) sti arpl data16 mov je pop xchg into sbb mov (bad) mov dec xchg lcall cld call insl repnz push sbbl or rcrl adc (bad) lcall xchg mov (bad) xchg jle and or mov das repz push mov mov out pop xchg pop gs fs mov insl mov std (bad) mov mov add call pop cmpsb je pop rol ret ljmp jg aad (bad) cmp outsl test pop or mov mov cmp cmc pushl std jae add lahf adc mov lcall mov (bad) (bad) fbstp (bad) or jns sbb pop dec fadds and pusha jbe jge (bad) xor cld decl lds in shr xor xor gs inc jbe pushf xchg scas mov stos gs repnz (bad) incl jo fild popa lock push mov mov cwtl imul jg (bad) push inc fs sahf dec add lret loope (bad) pop sahf sahf pushf push stos lods ficompl cmc call mov xchg sti sbb cltd out cmp ffreep pop or mov push push (bad) call and (bad) je xor lcall lret out (bad) mov orl out jge rcrb pop icebp call mov arpl mov xchg (bad) ljmp clc std fsub in pop gs sbb cli pavgw les aam push mov pop sub push xor jb les (bad) (bad) (bad) decl sbb mov outsl and test or mov adc cld add stos (bad) mov xlat xor inc mov fsubl (bad) (bad) dec fxch adc (bad) incl sbbl imul stos lds rcrl pushf xor mov inc jmp jg jbe fisubr aam pop cld pop jo push (bad) iret lret and mov (bad) ljmp (bad) hlt lahf (bad) ficompl mov inc jno (bad) (bad) (bad) jmp cmp nop in jae xchg lahf insb push pop sbb fsubr cltd repnz fistl mov mov jecxz movsl add jae dec pop clc mov out je cli gs dec mov (bad) lret mov out ljmp int add les (bad) outsl sbb loope mov pop test xchg jmp mov in das hlt divb jo xchg push sbb or ffree daa incl adc pop sbb lahf ret mov outsl arpl jmp sub shrb (bad) (bad) (bad) cmp test ja sti fstpt test (bad) adc mov sub or jmp add cltd ret jbe (bad) (bad) (bad) mov mov outsb iret icebp mov xchg push jbe push aad (bad) addr16 lock (bad) sbb (bad) (bad) ljmp mov imul pop adc ljmp sti add sub (bad) (bad) (bad) jmp xor les cld pop icebp add addr16 xchg stos fucomi jmp ljmp adc add sbb fld add (bad) clc (bad) dec mov jl loop cmp jns shll int3 cmpsl adc outsb pusha inc jno insl call loopne jle push mov and lret mov icebp push (bad) (bad) (bad) incl lods sbb out and push pusha lahf xor sbb aas pop mov les adc mov cli insb push sbb (bad) jmp sbb dec data16 inc fwait lds cmp (bad) xor aaa push mov (bad) lcall ret nop adc jmp xlat sarb decl cmp movsl pop pop (bad) icebp call fildll aaa sbb jmp testl xor pop and jg cld push imul je pop std (bad) out mov push js jno in adc fadds sbb or push iret or std mov loop fs pop (bad) (bad) dec aad icebp inc mov fisubrl xor xchg push push das js (bad) mov jle pop or ja mov mov xchg xlat cmp ljmp push mov lret mov enter pusha lret (bad) (bad) fild cmpsb call fdivrp aas dec mov fldl (bad) mov xchg fs aaa arpl out repz clc mov cld adc ret dec aam in pop insl jne std (bad) (bad) call xchg xor ds ficomp jo pop dec mov cltd pop das pop rclb push aaa dec rol jb data16 mov xlat (bad) out cld aas xchg repnz (bad) mov aas fisubl push dec (bad) in (bad) (bad) mov cmpsl mov sub lods fidivrl xchg xor in jae test (bad) (bad) ljmp dec lahf push sti sti push jl std cltd jl aaa mov hlt mov pushl jbe in xorb popf into dec sbb pop xor icebp jg or ret mov jle pop and repnz pop xchg sbb mov imul addl cmpsb add sti push jl mov lcall or es stos cmp outsl fs je inc fldl add push xchg sbb pushf mov pop mov gs fcomip call icebp test xor jae ja push out inc and pop iret dec jne sub cmp (bad) mov mov (bad) fdivrs mov (bad) cmp ficomp mov jbe rcll xabort (bad) ljmp mov add and loop mov dec mov sub das sbb dec cmp cli xor cld js aam pop xchg cmpb out mov pop js (bad) dec stc mov jle xchg es mov sti call lcall inc dec rclb std add cmp gs fcomps pop lock fs pop xchg js test arpl (bad) (bad) pushl inc cmpsb sub xchg mov shl aam push pusha scas lcall fstp push ja dec loop cmc outsb in mov add (bad) incl paddsw test jae fimul shrl sub fcom ss mov xlat (bad) lcall sub pop cmc jb push add hlt inc mov mov jmp imulb xor fdivrl loope inc mov sub lret cltd cs mov push dec pop ret and xor mov or add into pop fstpt loopne jg dec fucomi fistpl aad pop jns dec das (bad) (bad) (bad) inc jp scas loop push jmp mov enter xor adc or fnstsw stos and aas mov (bad) dec xchg sub (bad) aaa sbb test movsw (bad) ljmp pop (bad) and int dec jno inc test add lock out (bad) xor movsb mov jne pop mov ss int ljmp pop mov mov rcr cmp push std out push xor xlat xor (bad) (bad) (bad) jmp mov scas lods mov repnz ret xchg jg pop xorl jmp jmp fisub aam enter popa sub jp jl mov (bad) jmp in cld or ffreep push xor (bad) je xor cli pop imul mov arpl inc xor loope test pushl xor cwtl into xchg mov mov stc lea jo enter or mov push add ds adc cmp sar lds aam mov scas ljmp lea sar aaa inc cmp adc lods mov push inc loope,pn mov (bad) lock jb pop dec sub sbb xor sbb jbe mov lock iret fcmove mulb (bad) (bad) (bad) mov movb push sbb and cmp sub movsl jp daa lret pop push (bad) (bad) (bad) pushl xchg ljmp popa jnp dec das out outsl cld lcall sti adc loopne and (bad) decl fbstp and (bad) stc movsb xchg fnsetpm(287 nop pop mov xor call add jmp jmp (bad) divb mov insl (bad) cli (bad) jg lods movsb pop sti mov push das incb lahf ret les sar inc clc (bad) dec add ret in push pop mov out (bad) xor pop loopne lcallw test push popl pop cli lcall jp scas scas pop jns jae xchg cmp inc sahf and sub ljmp jmp aam iret stc lahf out stc fdiv jno cmp (bad) jg push cmp aad (bad) je push fildll fisttpll mov mov test jmp je inc imul lock mov jg mov mov (bad) xor leave sar cmp pop pop push pop adc pop dec mov fldenv pop (bad) (bad) incl push adc pop dec jecxz in in test mov xchg lods pushl aaa aad call cli jns std loop fwait (bad) (bad) (bad) (bad) cld xor repz shll cmp cmpsl les shll (bad) push xchg sahf in (bad) (bad) (bad) decl mov (bad) (bad) adc mov out stos in (bad) xchg and fstpl add pop jmp xchg push nop jg xlat push repnz jecxz jle ja push lahf mov ret sbb loope jnp call test decl mov scas jl lock mov das or xchg pop jne xchg movsb (bad) mov adc pop into imulb lret (bad) (bad) call sub push mov insl sub jbe push in rcrb (bad) sub mov mov lock mov lock scas (bad) (bad) (bad) (bad) out in lock fsubl fnstcw je mov jbe call fcompl (bad) lcall mov or pop or mov or scas mov outsb sbb (bad) stos lock lcall pop lods jle inc pop mov in sub mov pop xchg inc cwtl mov (bad) (bad) lcall mov sub aam push cmp xchg in xchg sub arpl mov (bad) pushl and sbb cmp xadd ret hlt jno jmp out cli loopne sub jne popa icebp pop stc push mov dec push fstp dec xor test fiaddl aam jle cmpsb push add cmp addr16 (bad) (bad) (bad) decl jnp push sahf sub push cmpsl pop and cmp or pop sbb xor or inc clc xlat test loope les out loop (bad) (bad) decl outsl loop je and (bad) fcmovne lcall push clc aas cmp rol xor (bad) mov sti ja js add insb imul jle imul dec (bad) jl jno leave imul in les push enter mov movq (bad) mov sub (bad) (bad) jmp call imull bound cs in sti btc inc jle aaa xor dec std scas push outsb jmp divb leave and (bad) jg jo mov ljmp std xchg jle dec (bad) ljmp adc clc stos lods (bad) aad adc or cli ljmp cmp aam lret das int ds sbb aam fcomip call clc dec scas (bad) pop sbb push stos pop push mov clc (bad) jmp lods push xchg fcompl inc mov mov inc add data16 mov sbb sbb jl sbb xor fwait sti (bad) lcall dec fistl mov outsl push fcomps pop pop arpl in mov dec and jb mov (bad) (bad) (bad) jp pop jnp lret insl incb iret sahf adc mov dec push mov stos inc movsb (bad) (bad) lcall out ret jae inc sbb cwtl jmp mov lock (bad) out and test rcr mov sub shl mov sti mov cmpsl jl push cmp mov sub mov jo aas mov rcll cmp jnp out cmpl sbb mov mov xor push insl xor pop and aad mov add cld jg jg outsl cmp loope aad xchg repnz lret xchg and dec push cmp cmp cmp das lock jg cmp pop ret sarl xchg or dec das out sbb sar pop aam mov leave out pop sti dec shrb and fnstsw sahf sub cmp and pushf mov sub mov pop dec jae repz mov shrb jmp sub and xor out mov cmp mov cmpsb (bad) ljmp adc dec dec dec shl sub xor bnd mov add xor cmp (bad) incl push xchg sbb shrb push mov repz repz shr jne jmp movsb mov mov mov bound mov (bad) jg lret add lock popl xchg mov lea ljmp ljmp mov enter inc out in add sarb aas (bad) (bad) (bad) push dec imul int mov lahf loope arpl push repz mov lret jle lods pop fcompl addr16 dec pop icebp call cmp imulb mov or nop loopne jecxz cli lcall mov mov stos cmc fstpt sub sti ljmp or jae fwait in movsb mov sub faddl or xchg pop add sub sarb loop (bad) cmp (bad) or imul loope add and pop hlt (bad) pushl mov std pusha scas int3 pop fcmove decb icebp jecxz xchg js add dec loopne decl inc dec dec sarb xchg leave cmpsb mov (bad) (bad) fbld adc bound (bad) iret sub popf sub mov mov (bad) loop jmp cmp mov fcoms movsb push data16 ss fcmovu jmp mov mov stos testl cld add movsb ljmp (bad) (bad) decl sarl mov xchg fcomip push xchg inc sbb into dec cld (bad) (bad) (bad) cmp lret les scas mov cld daa xchg jns sub jns ja mov stc mov aaa std pop push sar js loopne xchg cs sbb mov xor push sbb (bad) cmp faddl sub cltd mov loop insl pop fs push ret add (bad) add fwait (bad) imull (bad) (bad) call mov daa xor dec sti test arpl add mov gs mov insl into push mov xchg imul lret jmp outsb in ja xchg add lcall pushf ds xor jge (bad) out push call addr16 lods adc pop inc or fstp mov adc mov in (bad) dec mov cmpb mov lods aas sub cwtl add ret dec mov lret lock push mov icebp (bad) decl fwait or lods enter leave add ret add jo jp clc imul ffreep inc pop fwait push shlb lock stos push andl (bad) int (bad) (bad) (bad) dec add lret sbb adc leave and sbb lcall xorl or out adc add add mov fs lcall cmp (bad) jg jmp std push ljmp xchg dec sbb aad mov sub aaa outsb push popa xchg lds sbb fstpt sub cmpsl outsl (bad) jle sbb ljmp adc addr16 icebp scas xchg (bad) in pop int3 popa xor xor (bad) (bad) pushl enter mov and clc xor fistl aad das es int3 inc aam fistpll dec ljmp pop xlat in scas adcb lds faddp adc and ljmp lods cmp mov xor add (bad) (bad) (bad) (bad) cmp lock int mov xor repnz or lods stos cs scas mov mov decl js xchg cld adc adc cmpsb fcmove arpl mov or sar pushl xchg mov ss or stc add mov gs jecxz push cli pop or (bad) lcall mov xchg jns mov jno gs outsb mov inc incb (bad) (bad) (bad) (bad) jg (bad) mov mov fildll cmc jmp clc push ficomp outsb xchg inc (bad) mov inc and cmp inc inc xchg pop pop lret push or test pusha mov dec add sbb pushf sub inc ficomp mov xor popf ss cwtl cmp (bad) xchg pop or (bad) lcall adc roll xchg fbstp ja pushf push pop sub dec ds inc xchg mov mov fistpll push mov leave mov and das adc stos jp in add imul daa pop std pushf xor add push dec push xchg fwait lret addr16 add icebp mov scas push stos rorb js ret into pop jb lds or ret inc stos pop push (bad) (bad) (bad) incl xor fsubrl xor lea inc in test js sub (bad) (bad) (bad) in jg mov mov gs dec push lods and jb xlat xchg roll xlat shl call xchg lock in (bad) lock inc outsb (bad) (bad) (bad) call cmp test test mov rclb js shr movsl push loop imul ljmp adc aaa mov or clc aas dec mov push lods mov arpl (bad) inc lahf mov ret (bad) fldt ds lea fldl xchg stos imul (bad) (bad) incl push shl cmp cmpsl dec aam mov lods jp push jp xchg xor xor mov pop pusha and adc mov push push jle hlt dec sbb (bad) lcall aam sbb nop mov cs cld stos sarl outsl int3 (bad) xor out (bad) (bad) incl loop lds jno in pop mov pushf ret ja (bad) repz (bad) (bad) ljmp stos scas adc loopne xor hlt scas lea mov ds mov ljmp fldcw xchg pop hlt cmp lds push jo add and cltd cmp aas pop adc das sarb dec jl sti or (bad) (bad) mov in fisubr push pop mov fmulp loopne fmull xchg pop (bad) pop nop aas clc add cli stc pop push dec cltd fcmovb das fcomip aaa lds (bad) adc mov push pop std jo (bad) decl adc or xor jae mov pop aam mov sub shrl sub ficompl push cs jno jmp (bad) mov fbld add decl xchg or pop notb dec jecxz fnstcw ret push push cs jbe or sarb cmpsb jecxz mov adc scas loopne pop lock gs (bad) mov std sahf cmp jno pop push sbb fstl (bad) (bad) jg pop enter mul xchg faddl (bad) jge inc insb cmp sti fyl2x fbld jge loope xchg pop in push lds cs dec sub pop hlt fcmovu jno cmpsb dec js les jmp mov (bad) (bad) (bad) fimul imul loope inc jg mov cld lods jns lret sub outsl or pop (bad) movsb lock (bad) incl xor out lods push cmp dec sub xor dec adc andl jecxz pop mov (bad) incl pop mov mov in loopew test push (bad) (bad) pushl int3 mov in mov (bad) les ljmp mov jle clc adc jnp enter (bad) (bad) cmp int inc (bad) out sub add pop clc sbb mov scas cmc call fcom arpl int3 mov fcoml sub jge outsb push jl adc std ja add test mov js lret aam cld insl (bad) ljmp and cmp dec psadbw movb jmp jbe push push xchg jecxz and fistpl divl scas mov mov dec jg scas in or push fsts ljmp sub sarb add stc (bad) jle or addb test jl ljmp hlt mov sub and sbb cmp jae cmpsb xchg insl pop hlt and mov adc xor ficom jae push stos sbb ljmp fld js idivb xchg push call pop sub jg fs fisttpll ljmp push inc mov sub and jmp fisttp mov ljmp jl (bad) hlt fwait mov cmp dec negb push or jo mov jo mov pushf rclb pop ds push (bad) (bad) (bad) (bad) fldt or sbb inc lea loop loopne fisttpll gs stc add inc cld pushl and (bad) std xchg jl fs jle and pushl sub mov adc orl (bad) int3 add push (bad) (bad) (bad) jmp fcom int3 arpl fwait jnp cs cmc fstpt stc mov subl xchg icebp sub gs loop ror xor add (bad) fucomip sub lahf fxtract pop jbe inc stos dec adc aam icebp scas cmp push and or icebp sbb jmp push mov cld or nop ss xchg dec push push xchg push and ds jns xor pop (bad) mov ret sub mov mov sub sub incl pop mov test data16 dec and (bad) lcall and cmpsl cmc (bad) mov mov unpckhps pop xchg pushf insb cmpsb mov sub mov imul mov popa pop dec jno xchg imul xlat (bad) cmp sbb std aaa ret std mov test jmp cli jns pop dec lock popa mov push lcall std lcall imul les push jp jns std decl add or mov add pop (bad) xchg dec mov mov (bad) (bad) inc popa xor adc nop ljmp push std push jne,pt (bad) scas outsl jge imul rcr push mov push arpl sar out jno and movsl enter add insl in (bad) mov mov scas sbb pop xchg ret (bad) (bad) dec add jp mov pop imul lret (bad) pop jae rcrl (bad) std mov scas cmp (bad) in (bad) out into sbb cli icebp movsb cmp sarb sub adc add pusha add loop repz shrb imul sbb mov outsl out ret fstpl push decl repz inc mov ret fildll ljmp jnp sbb scas cli jg outsl sub enter sar mov daa mov jbe ja fdivr call push loopne cmc jl cmp and mov mov mov xchg dec (bad) (bad) mov mov or sbb add aas cmp cld add inc in mov xor dec xlat push cltd push mov xchg push add push iret jne fmul jo xchg sahf mov cmc rcl jg (bad) (bad) (bad) (bad) (bad) jle dec cltd std in punpckhwd negb pop test mov arpl and jns lret (bad) in jecxz mov insl xlat (bad) cld dec push mov ret ja dec and cmpsb fcmovu inc cmp jnp jecxz in loopne popf mov into (bad) call data16 mov cli pop sbb (bad) repnz into (bad) (bad) (bad) (bad) jnp (bad) repz mov and sub and cmp xor arpl insl jb inc ja mov sbb and and mov imull (bad) decl sbb mov dec mov incb out mov aaa (bad) lock (bad) (bad) (bad) incl jmp jecxz movsl fwait dec mov mov xor xor mov mov (bad) call cli sti cmp add iret (bad) fiaddl add out fs sti imul outsl xor insb insl popa lea into sub orl loop lcall add test ljmp sbb arpl sub mov ja (bad) mov inc jae xor (bad) add mov pop test mov (bad) mov stos pop cmp pop fmul lret sbb in es bound xchg jecxz test clc (bad) mov sub cmp movsl cmp jge pusha imul jg clc mov (bad) aas mov test mov mov ja xchg xchg dec and lcall sbb sbb and push xchg int3 pop pusha or fldcw xchg add or xchg std adc pop je icebp push cld mov cld gs iret xchg cmc sti jg ljmp out clc inc mov push test (bad) in push repnz and leave mov mov aad jnp (bad) (bad) (bad) out (bad) pop cmc xchg lea mov sti dec (bad) jne mov lea fwait xchg dec (bad) jg mov sbb mov call xchg hlt outsl (bad) (bad) (bad) ljmp out pop xchg sbb aam lahf xor fwait lods ss std out pop inc (bad) call pop add out popf push jecxz (bad) mov xor lcall decl insb stos or xchg jl xchg pop push push mov jmp adc and (bad) leave and nop inc pop out push repnz cmpsb mov das dec std pushf jle clc mov push push shrl dec scas or adc inc (bad) xor sub (bad) decl xchg pop and (bad) loope mov loope mov (bad) (bad) pushl adc fcoms and or bound (bad) pop clc lcall dec cmpsl dec push dec jmp sti scas clc push jne scas pop inc fwait sub das inc movsl sbb push lods fdivrp incl lods imul scas xchg dec jl popl (bad) (bad) call lods cmp mov insb cmc and vmwrite loopne mov dec in mov (bad) mov or lcall (bad) (bad) (bad) (bad) incl test push lretw imul mov push push mov dec sbb ljmp fisttp dec idiv xor movsl mov outsl cli decl clc (bad) cli inc or mov inc cmp ja inc or jbe (bad) jle scas clc lcall fcomp clc mov lock fwait insb mov (bad) ljmp enter cmp fiaddl lods loope lcall (bad) (bad) (bad) fidivr mov sbb movsb xchg xchg fs xchg ret jge mov sub lcall js loopne (bad) dec mov jl cmpsb jmp jb gs add in daa pop fsub mov loop adc ret outsb icebp add add lahf mov cmp cmc scas in cli inc (bad) decl (bad) icebp jg jne cld daa fiadd mov mov movsl mov loop (bad) (bad) out push mov int3 xchg (bad) dec nop fs sbb and loop mov mov data16 and out fsubrp xor xor jecxz aaa and dec clc mov inc ds jge int ja mov xor stc xor jns cld mov ja int3 std dec jo jg adc cmp aam pop (bad) push decl aaa movsb xlat jo sahf es inc bound inc mov sub decb lock nop fs call lock and incl cmpsl push aad rolb cs insl out jb (bad) mov jo loopne push mov adc xchg (bad) jg cmp in add test mov call stos rorb jecxz lret nop xchg jno loop loopne mov cld pushl fist ds xchg fildl jecxz (bad) decl pop pop ljmp test mull je out int3 and and bound dec mov in pop dec mov (bad) (bad) decl ljmp mov dec in jbe insl mov fscale inc inc aaa adc add clc inc inc pop inc xor cld push jle dec lahf sbb mov fcmovu ret cmpsb clc (bad) incl (bad) cmc or push (bad) jno xor arpl mov fidiv movl push cmpsl push clc xchg icebp or adc and sti push pop mov test xchg stc pop cld (bad) pushl cmp call lds jp (bad) jne and cmp mov (bad) loopne repz sarb fcmovne jmp jecxz lcall xor mov ja rcr jbe pop and jg (bad) mov mov push sub jb mov sar loopne,pn jg outsl bndldx fldt lahf cld ds lcall (bad) icebp fdivrl insl add xor mov mov xchg imul lds pop test and out xor into (bad) (bad) (bad) jmp scas fsubr popf mov dec fisub adc rcrl repz fisttp dec inc inc clc popf jne aaa (bad) xlat sbb test (bad) (bad) call pop dec ljmp scas (bad) push push cld cltd push mov mov pop loopne outsl adc push aam sub xchg mov lcall cmp push mov lea add (bad) popf sti lahf aam cld sub pop cld sbb das nop cs push repz adc loopne (bad) jg lods dec xchg add ja les mov aaa std lret (bad) fistp cmp cmc (bad) (bad) (bad) dec mov mov cltd scas sbb ss js bound (bad) add lock jns test lret aad (bad) and inc mov push lcall mov pop xchg (bad) ljmp hlt cmp repnz fsubr adc es mov (bad) add (bad) jmp imul cwtl push mov adc sbb jmp jg sti addl add dec pop pop icebp pop in dec icebp push out lea mov jne leave test xor stc lock add ret mov (bad) (bad) ljmp (bad) aas jae or aam add aas jmp sub mov outsb add sar ja xchg mov pop ret test (bad) xlat repz cmp sub out xchg xchg dec mov cmp (bad) (bad) dec dec roll pop mov test inc and out fucomi out dec in incb imul xchg in (bad) (bad) (bad) fild push js (bad) cmp pop sbb fisttpl push insb mov insl lds nop inc (bad) pushl xor (bad) shrb jbe insb cmp hlt (bad) (bad) je cmpsl hlt lea (bad) pushl xchg xor mov ss movsl jnp jg lods scas not dec out (bad) dec das cli (bad) fucomip inc sbb lods xchg mov xchg mov dec mov xor les (bad) xor (bad) mov aam fidiv (bad) jmp xor pushf push not mov (bad) mov mov inc (bad) incl pop pusha adc xchg lcall mov aad (bad) incl mov lock jae add mov (bad) in repnz leave push mov cld icebp (bad) pusha std pushf cld or lcall call fnsave subl fildll pop in adc (bad) jo repz pop ja cmp dec arpl (bad) sti ds cmp aaa add sarb or (bad) (bad) call sub jno mov lcall vaddpd adc mov push cld sub ds mov pop mov out mov jb push mov mov xchg out mov and pushl push jmp xor jns mov ret fbstp (bad) std inc ljmp mov xchg aam sub dec jne clc (bad) push mov fmuls jbe xchg (bad) cwtl fnstcw inc (bad) inc int mov arpl ret popf jp push inc sti push pop mov (bad) fild bound (bad) mov add mov or adc fwait out mov add das clc sub jmp ficompl stos jl clc (bad) dec verr shrb aam mov leave jno pop or lahf pop add (bad) (bad) call jge ja (bad) mov sbb mov out push hlt xlat push sti cli cli imul sti (bad) (bad) (bad) (bad) cmp push jl sub fldcw sub sti push iret lock gs mov sub cmp (bad) call in out cld dec ja lods faddp loop xor inc fs ljmp inc andl les xchg jl push dec jg fiadd xor fistpll iret sbb pop xorb imul mov fstpl fsub adc pushl push push gs jg scas inc std xchg lods mov fistpl fisttp jle push icebp jge sub ja hlt int inc dec sub lea add in fcomip jmp frstor mov xlat mov out shrb incl loopne pop push repz lahf pop popf push adcl mov lock fisubr sub (bad) repnz sbb add fimull ret push lock insl add iret mov or (bad) fndisi(8087 mov sub inc push lods ficom xchg fisub daa movsl ja (bad) (bad) ljmp and or sub and (bad) je xor inc dec mov sbb cmc (bad) pushl and jns inc bnd cmp jecxz add inc push clc imul xor mov cmp jle jp cwtl mov ljmp fs and xchg and imul movl rorb cs (bad) mov in lock xchg out dec je aad mov js clc (bad) jmp xchg adc dec pop sbb aas sub xchg imul sub lcall xchg aad cmpsl insw jle sbb hlt popa dec rcrl xor fidivl cmp (bad) call hlt daa pop icebp xlat ret call cld jns dec imul stos (bad) (bad) pushl (bad) aam sub mov jl std nop mov jle lods js sti inc (bad) scas cli (bad) call lock ffree movsb ja push sub (bad) or enter mov shlb or mov mov das test pop dec les pop lds fs xor push jmp inc test movsl xchg jnp loope (bad) (bad) fisttp xor js loop ret aam jns in jo mov (bad) (bad) (bad) jge test jns inc jbe stc sbb sbb pop mov and push jg fldt std xlat in jbe lret cli adc xchg in (bad) aaa loopne mov cld and pop div ds clc inc test clc inc mov fstpl in icebp imul (bad) test or decl insb dec mov add cmp popf sub arpl cld dec cmpsl (bad) stos js pop (bad) (bad) (bad) pushl mov lret (bad) rcrl xor (bad) and scas (bad) dec icebp outsl les add pop in loop and out clc ljmp clc arpl aas inc mov mov pop dec test mov enter add fdivrp mov js (bad) dec loop dec out xor (bad) call cmpb popf or test mov pop mov dec lcall shrb xor shll scas (bad) mul jge sti (bad) jmp sub arpl lea jne add (bad) dec cmp ja dec dec mov (bad) icebp pop loop (bad) pop add enter (bad) call xor push cmp imul lret lods dec xchg insb ja shr (bad) mov mov inc mov scas test pop scas imul ffree sbb notl pop inc and sbb adc sub aas xor (bad) (bad) lcall sbb cld and loope scas jge loope jno fucomi imul int3 loopne and pushf adc mov pusha sub in lds dec jecxz clc mov scas pop xor imul sub lss (bad) jmp (bad) repnz add push out test sar (bad) cld sti jne hlt mov cmp pop mov imul xchg fstpt clc mov xchg dec out fwait dec lahf xor test std (bad) jle cld cmp mov cmp scas (bad) mov push std xchg leave add push popf pusha push syscall xchg sar push cltd sub loopne (bad) mov jecxz push jmp and cmp add xor dec outsl sub fwait sbb xor pop pushf push dec push mov push hlt outsl clc (bad) (bad) aas xchg cs sub dec ficompl jbe push ficomp aam and cmp xor (bad) (bad) call outsb gs repnz jb mov fs inc enter leave lock pop lock adc jle icebp loop in push mov push test lea loop,pn pop xchg cmp insl (bad) incl cld pop and xchg sti sahf arpl mov popf jns xchg stc das push iret daa cmp sub jmp das sbb sub jle sbb (bad) fild mov push daa shrl jg dec mov (bad) (bad) (bad) in inc insl les out cmp xlat iret clc pop pop or call aaa mov mov enter lock (bad) mov (bad) mov xchg xor int3 pop icebp (bad) call push xchg add pop in sbb fnstsw ret in mov jmp pop sbb aam cmpsl push cli push sub xchg jge (bad) call (bad) insb gs nop adc cmp mull pop ljmp mov shr lcall adc fistl sarl (bad) mov (bad) lcall xchg add loope ficoml (bad) jne lock rclb cli (bad) and shll in repz aam jne cltd sub push outsb xor clc lcall data16 or icebp mov (bad) pushl stc mov movsl cltd and dec jmp sbb xchg xchg cmp fs imul jle clc mov sbb out scas mov repnz out fildll jb inc or lret je push inc sub fcomip fucomp xchg pop (bad) push test std jne mov pop (bad) repnz pop stos ss mov mov pop push iret pop adc pop dec incb mov js dec dec bound pop inc (bad) mov mov push aad mov xor std mov aas loop pop les add (bad) adc hlt sti nop ljmp jg loope push jno lock lds dec pop ss clc (bad) out adc outsl xchg and fwait fs (bad) mov decl sahf or pusha or jne adc out movups out inc (bad) ljmp mov imul jns xorb in adc insb xchg pop std bound call clc test sub mov push xchg or and or fstp fisubrl aas xchg mov std mov (bad) jmp pop sbb fildll adc and sub xlat jb call mov and push (bad) (bad) (bad) ljmp pop bound imul cmp mov (bad) in push imul sahf (bad) popa stos hlt push cld incl ljmp xchg fist fcomip or (bad) fs push adc lcall (bad) lods and mov out mov jl (bad) cwtl jae into push in or incl mov cmpsb mov popa stos jmp and xlat (bad) lcall mov sbb adc push dec std les js out sbb clc (bad) (bad) jg test stc lods pop fisubr mov cmp mov mov mov cli jno (bad) (bad) jmp sub cmp js dec rcll inc popf cmpsl mov adc (bad) (bad) in (bad) jg push fcmove dec pop pop pop mov test pop lock outsl pop js (bad) pushl add pop scas mov cltd pop pop mov and pop jge and push leave in and push stos fwait (bad) pushl fmull sbb dec pop push imul cmp loop pop fdivl ljmp jecxz inc xchg imull sub popa and hlt fisttp cmp icebp aas lds or xchg lock fist out push jg jmp (bad) inc mov ljmp or dec sbb push mov mov lods jae (bad) push ja fist (bad) jg aad jp jp xchg outsl sbb in in out mov rol mov inc (bad) push and repnz lds xor popa shrl out ljmp xlat push jbe push inc adc pop add push push mov xchg adc pop cmp (bad) cmp push fwait (bad) ljmp out cmp jno or sub push inc (bad) (bad) (bad) incl stc movsb xor xor adc addb jmp mov ljmp stos inc xchg jo (bad) ror fnstenv out cld push fnop jg dec scas clc lods sti inc clc iret les cmp sahf fcmove pushl cld scas cmpb leave cwtd or pusha dec or xor outsl loope cmp mov lock in push mov loopne clc imul (bad) out xchg mov sarb pop sbb sub in ss arpl (bad) incl xor fbld cltd repz fmulp (bad) iret mov (bad) mov icebp ret idivb lock sub dec push mov jge push mov loope (bad) (bad) (bad) call gs aaa setl inc push flds insl sub pop mov or (bad) (bad) cmp pop dec mov int3 push mov imul stos lods (bad) (bad) decl std mov or cmpsb das mov push ljmp stos daa xchg or (bad) jmp inc fcomps and mov pop scas add push fistp pop xchg mov lahf adc clc dec icebp mul mov pop pop clc inc out mov inc imul jecxz fisub sbb cmp add and mov js mov or add mov sub nop jecxz scas int (bad) aas jecxz lods dec pop push (bad) pop lock leave cld xor cmp clc xlat cld dec loop (bad) (bad) (bad) in dec imul dec mov and mov (bad) shrb (bad) mov push adc xlat dec lret (bad) out clc inc adc test xchg sbb shr pop dec cltd pop and pop cld (bad) call out out gs mov (bad) fmulp mov fisubl clc div scas jb movsb aaa cmp dec push int loop jle sbb into add (bad) mov scas repz lods clc adc mov loope (bad) clc decl mov add ljmp addr16 mov jle imul lret xchg into enter sbb mov (bad) (bad) or (bad) (bad) lcall js sti dec sahf dec add push or xor push cli (bad) aad dec cmc les pop mov roll and and lcall or data16 test xor aaa icebp (bad) (bad) (bad) (bad) fldt fisubl (bad) out scas outsl jl and jmp divb pop mov xor cmp add rcrl jg xchg addr16 movsb mov xchg mul sti (bad) (bad) (bad) (bad) ljmp mov adc imul in out fwait mov in pop add mov decl popf dec cmp push mov xor fstpt (bad) (bad) (bad) jmp lret cmp sub push push shr and cmpsl mov shr xor xor ss push (bad) jmp xchg xchg fmulp loop xchg bound lods dec pop add sbb ss sub scas dec fdivrl les jae xchg mov mov inc int mov dec (bad) xor sub das fwait sub push inc pop (bad) mov jns (bad) dec add (bad) fcomip adc add cmp fistl jno insl xor xor xor (bad) mov sub add ja mov mov div inc cmpsl dec xchg pushf cmp dec xchg pushl loope push mov mov or mov (bad) (bad) (bad) decl sbb ljmp and pop xchg fwait inc (bad) lods and (bad) call notl (bad) push mov or stc jnp xchg sbb cmpl les inc mov xor mov ljmp js jmp nop pusha adc xchg jno adc add fbld xchg jb push paddw (bad) (bad) ljmp nop inc jno aas loope,pn add fcmovb jo cmp test add leave xor (bad) out clc aad xchg pop lods xchg iret mov cmp pop cmp neg adc pusha (bad) (bad) (bad) incl xor lret xor insb jbe mov sbb mov jmp adc cwtl jns and xchg imull data16 movl call mov pop fcomi xor xor lahf mov test adc xor out mov push mov fsubrp shl (bad) (bad) (bad) dec ret inc (bad) (bad) cmc mov fiaddl jno cmpsb or inc xchg and xor mov cld (bad) (bad) ljmp xchg mov cmp lods or out sub je jle lcall fcomip add adc sub jl jns adc call dec aas lea movsl jg int3 out je fstpt (bad) push das fldt dec xlat and inc std call sbb jb jne inc lods sub lock (bad) jg sarb in mov xchg addr16 lods add sahf jns push xor (bad) (bad) jmp lret add insb aas jl cmp inc add ret in xchg push pop sub ss (bad) inc ret jge in movsb jg hlt pop rclb js ret push mov push jmp xchg ficompl out movsb mov data16 adcb mov imul lahf out lcall xchg test sar pop jecxz sbb dec pop lds pop push (bad) (bad) call int3 jmp fistpll out mov sub xchg mov lea jns inc loop lea pusha (bad) push clc lahf sti dec pop cld je mov mov dec xor push (bad) adc sub and bound decl mov movsl jmp in stos jmp xor (bad) (bad) mov dec std (bad) lcall xchg popa xor add roll add test fistpl (bad) jg ss mov sahf mov push imul sub (bad) (bad) incl adc ss cmp lcall cld inc cmp in das push std push push xor xor xor imul dec clc xor stos outsl or jle push pop repnz scas sarb mov mov jmp or mov add popl mov sbb mov jo jo cmp icebp push push je cmp out or cmp loope jp shrb (bad) (bad) decl in ss and mov xor sbb rcll incl dec jne iret jl outsl dec mov subl (bad) repnz je cli (bad) decl sub fpatan push pusha ret cmp xchg in ja jmp (bad) (bad) call xchg pop cmc sti (bad) das adc std jle push jecxz mov data16 test adc pop sub add push int jg outsl pusha divb jge jo out and mov and iret pop (bad) (bad) jg mov mov (bad) imul jmp jmp xchg inc (bad) ljmp rolb adc or cli or xor push push pushl push scas test loopne je xchg out or cmp mov lea cmp or jmp jg push pop cmp lcall clc (bad) loop sbb pop sbb pop jb push aaa and pop jne rcrl lea push mov (bad) pop das out out aam (bad) decl mov out mov mov adc popa sti sub (bad) jecxz imul push inc clc jge in cmpsb mov fistl and (bad) ss jp add jg (bad) icebp std decl int3 fisubr shr adc sbb (bad) push inc (bad) jg sub cmp or fmuls (bad) call inc inc mov ret (bad) and aas sti cmp xorl (bad) (bad) ljmp mov jno mov (bad) inc xchg sub les or add ljmp stos lock push mov xchg push jno repz jno xchg icebp in adc adc pop sub fcoms xchg test decb lcall outsl rorb (bad) pop pop dec loopne adc and stos or (bad) (bad) mov les mov popa push mov loopne sahf cmpsb mov mov dec cld jle (bad) das lock hlt push sub mov adc pop dec mov shrb xor dec mov sbb xor dec inc jecxz scas mov sub jecxz scas mov and sar (bad) (bad) (bad) cld daa xor dec pop popa xchg jno add push out stos or sarl xor (bad) clc pop dec adc pop (bad) ljmp mov (bad) xchg out stc mov (bad) mov (bad) ljmp addr16 or shlb cmpsb mov xor xlat int (bad) jmp (bad) xchg pop fmull fisttpl arpl cld or stos mov das mov clc xchg into xchg out jp addr16 sub (bad) (bad) (bad) (bad) fxch gs add mov pop mov mov aad sub addr16 cld (bad) (bad) incl lock jno cmp dec mov icebp mov jo cmpb cmp aas add jle sar ljmp ret pop fidivrl in mov and (bad) decl fs push pop aaa pop pop std cltd cmp (bad) adc (bad) jg jg (bad) (bad) lcall loope imulb push cltd and inc dec stos sahf mov jmp enter push pop push pop cmp jg addr16 out jb popa jecxz ja push (bad) (bad) (bad) pushl int or in dec outsl xor sub and cs (bad) dec cld lcall js push jns mov mov cmpsb dec fcomip (bad) jl clc daa loop jae mov imul pop sbb push (bad) decl mov adc inc scas aas cmp test cli jge pop jg ret (bad) (bad) dec xor push fwait imul fisttpll aas mov in scas push push or lcall xchg lcall push xor in and and (bad) fs sub cld mov pop jecxz cmp push jne pop jg repnz (bad) (bad) mov xchg jecxz xor imul in aam sub enter mov clc pop mov pushl cld inc xchg out inc je insb lods sarb or out sbb jg mov aaa jl (bad) mov cmpsl lea shrb inc (bad) pop add push je (bad) mov dec mov pop fmuls mov and scas sarl xchg decl xor jmp cmp sarl dec xchg push xchg or push stos scas (bad) sbb sub movl (bad) mov pop stos push dec xchg pop ret jnp lods xor xor js lret stc add lcall push rclb inc pop push (bad) fbstp ret pop sbb jle adc jg fwait mov (bad) (bad) (bad) ljmp loop or dec icebp (bad) (bad) icebp mov aaa push mov in les xchg jne (bad) (bad) jmp xchg sbb imul mov mov jnp out mov adc (bad) pop insb lock inc (bad) (bad) ljmp adc orb and mov jae jo clc fbld in imul (bad) fisubr jno mov repnz pop shlb in mov pop xchg jmp push out aad jmp shrb adc shrl out pop lds fwait insl cmp cld arpl sub decl pop and xlat lods fs pop das push imul xor fidivl add mov insb (bad) cmpsl xchg pop mov int3 in jle mov mov dec adc push test cmc mov (bad) es decl clc push into or repnz pop test mov mov (bad) lcall in jne scas lret fnop sub sti imul (bad) lea in pop push jg cmc (bad) mov or arpl xchg insb xchg dec lods cmpsl cmp and jno idivb icebp add lahf adc fucomip aam mov dec mov fsubrl fwait dec aad ret fildll pop cmp inc xchg pop arpl sti imul cmp xchg mov jmp and loop and ret (bad) (bad) decl cs fstps add or stc imul (bad) mov test pop stos rcr (bad) sti mov jne pushl sbb add mov mov jecxz mov sbb mov js inc les int mov gs or nop mov mov (bad) mov iret ret mov dec rcrb mov push push test mov test mov rolb (bad) (bad) (bad) jl out mov in jg popf shlb jnp inc clc mov mov mov adc mov and dec mov or imul xchg fist xorb test mov mov iret ret das test ret pop rcrb cmp (bad) incl jp dec imul (bad) jne fwait cmp aad int3 sub pop cmc insb mov pusha pushf out (bad) (bad) jmp or pop stos push mov cld lods (bad) std cmp lret jae lods push mov lret ficomp dec (bad) (bad) (bad) push push iret jbe icebp xor jns mov xor lods mov push mov (bad) jmp roll (bad) jne cmp stos lock mov icebp jae jle mov pusha sbb push xchg cmp adc (bad) jb or enter dec xchg cmp loop incl test lea das in loopne xor lret jns outsl clc incl jae xor push xor jo sbb decb or (bad) (bad) pushl iret or xchg scas test out mov in add outsb push arpl xchg xchg sbbl pop js in cld pop sarl incl mov xchg stos dec loop mov jmp push (bad) mov mov daa xor stos xor inc sbb test clc (bad) lcall roll std pushf pop scas mov mov fist call jp int mov push (bad) stos xor sbb and mov dec or or les sbb cmpsb pushl sbb scas ss aam cmc jge (bad) dec mov decl imul cmpsl xor xchg inc popf or xor pand sub dec stos (bad) (bad) dec (bad) jb mov daa xchg jns sbb int popa dec pop xchg (bad) sub (bad) (bad) call inc sbb (bad) or lods in mov jnp scas fistpll xchg xor xor (bad) jmp ja cmpsl push bnd xor scas rcrl mov incl out jle js cli stc jle (bad) ja fildll dec xchg out mov sbb add xchg ret mov xor fist dec addb jne (bad) (bad) ljmp mov add outsl clc push jp mov mov jg mov fistpll lock lret or js pop pusha sahf jle dec clc (bad) (bad) lcall lods stos lds mov push fisub adc dec and icebp pop cld (bad) ljmp outsl ficompl pop cmp mov jg dec mov lea loope (bad) dec xchg call js xchg stc mov test lods test ret (bad) call shr dec clc cmc out sub pop dec divl cmp lcall ja out push lock xchg loope jbe (bad) (bad) (bad) jmp pop cmp jp cld ss les mov cmp mov (bad) pop sub lock sbb sbb mov (bad) (bad) call inc mov xchg lods and cs out sub xor sbb call aaa (bad) cmp mov iret pop adc outsl stos push pop (bad) fbld dec dec les inc jns lea lcall (bad) jg mov pop aaa mov pop mov (bad) push popa jecxz adc movsl in test (bad) pushl das loope mov dec xor cli out cmpsb stos dec sti and mov sub sbb movsl stos and (bad) (bad) pushl dec dec int jmp xchg std or gs ss lahf stc cld popf fimul decl icebp push clc loope imul fisub lock mov sahf daa mov jg (bad) (bad) (bad) (bad) js inc pop adc add jg fnsave lods ja and dec mov mov cld adc incl imul jge insl mov in shlb inc rorl and lret inc cmc incl push mov (bad) imulb jecxz mov mov (bad) fildll dec aad fstl movsl cli fcmovne adc cltd popf dec test and sub (bad) (bad) incl dec jecxz push call (bad) pop fwait push xlat cld push lcall dec jne cmp fbld inc fsubrl test movsl sbb repnz (bad) (bad) incl mov test stc std fistpl mov std aaa shl xchg out or cld (bad) (bad) sub jno icebp add insl popa jns leave cmp int3 fdivrp (bad) (bad) call stos adc mov sbb in lcall mov pushl xor pop cld inc clc cltd popa stos pop js push mov sub call lahf mov sbb test jb adc ds fdivl cmp imul js lods mov out xchg xchg push cltd xchg inc frstor (bad) (bad) jg push mov aam inc and out push and sub (bad) xor jp rorb icebp xchg (bad) aad shl push in popf loop scas out mov lret cwtl mov pop cmp (bad) (bad) jmp xor pop or jmp cmp pop jae ja stos or decl cmp mov sbb lret lock ljmp pop idivb cmp xchg scas fldcw (bad) (bad) (bad) fidivrl mov lods dec mov xchg pop jnp lods rorl (bad) pop mov jl push aam pop mov (bad) (bad) out and and cld sub pushl fistp in in je das (bad) negl rcl cmp jo and (bad) decl dec push xchg xchg pusha and mulb fidivrl (bad) decl xchg aas mov lods xlat push aam or frstor in inc leave dec cmp xor insl ljmp loopne pushl push or sbb in push lock pop push mov rcrl call mov fbstp fsts pop push mov sub mov or (bad) (bad) in pop xchg cmpsb and cmp lods pop insl cmc pushf dec insb cmpsb lods push (bad) loopne or push scas shll cmc cmp mov jecxz in imul aas or add out add cli mov icebp or jbe inc int mov mov ficoml loopne and mov rcrb mov test mov call push aaa lock icebp push xchg xor mov inc incl jmp pop lcall aaa testb lahf adc ret mov imul sbb pushf les call data16 fsubrl sbbl mov dec std mov lock (bad) mov add xchg mov push pop aam fistp push in popa jae jbe in inc in push ja fldt xchg push popf or jl imul cmp (bad) fild or mov jge fcomip out and call xlat xor mov mov cmpsl scas (bad) (bad) (bad) ljmp or pop dec les dec xchg xor pop xor fsub xchg ja (bad) fbld icebp jle addr16 fstps and (bad) (bad) (bad) (bad) jge std sahf out dec pop outsl out and cmp std add sbb (bad) (bad) pushl arpl add dec lock dec cmp aas mov insb xor (bad) (bad) mov lret js fidivrl cmp fmull sbb (bad) test pop sbb (bad) (bad) jle mov lahf add (bad) rcrl jge jo shl push shlb mov pop arpl jbe jbe pop mov add mov test inc push xor sub in in outsb mov cwtl shl int3 mov push adc sub xchg imulb lcall dec push lahf add adc lcall cld pminub loope stos fs pop mov test xchg xchg (bad) (bad) (bad) (bad) cmp mov sti pop xorl ds stos ret and (bad) ret in mov rcrl lcall push into or loope jl fidivrl lods outsl shlb sub (bad) call es mov lahf cmp jle stc dec iret or out lret pop clc sub ret popl pop loop sbb dec mov (bad) call scas jl cmpsl mov test xor xchg cs and or sub mov lea inc jecxz sub pop jnp cs and jmp inc sub mov xchg xor (bad) (bad) (bad) jmp movsl push xchg or fidivrl add jmp jnp bound mov aad jg stos repnz (bad) adc sbb cmpsb ret push stos mov jl (bad) inc pop (bad) cwtl cmp scas fs jge push push test xor sarb pop cli das cli aaa insb sti jp sub test movsl jns add icebp (bad) out pop aaa add sub ss in cld mov mov (bad) mov loopne cmpsb hlt lahf les faddl mov xchg data16 (bad) (bad) ljmp xchg or xlat movsl dec movsl sub xor sahf pop int aas mov push div clc pop and out mov push sub lds das sub mov and cmp jbe inc (bad) call in push mov sub jl loope mov xor jle jne add (bad) ljmp and cmc orl pop dec mov dec mov xchg or jbe stos adc mov jg (bad) (bad) in add mov in mov adc fs sahf inc xor and mov and add jmp scas sub (bad) sar (bad) (bad) (bad) js pop clc imul cmp cmp add push sti mov popf xor movsb (bad) stc (bad) out clc incl outsb in movsl push jmp mov inc mov jmp rcrb and rcrb icebp lahf mov std call mov test mov (bad) jecxz loop test and (bad) mov movsl xchg ret xchg dec ret adc orb fnstenv sahf mov je mov fst mov lcall stos inc mov lahf fwait int dec add lock xchg lcall xor sbb repnz and les push (bad) mov mov adc mov jg jmp push mov lcall test sti sub movsb daa sbb cmp add dec scas sub loope push pop (bad) imul arpl mov (bad) xchg sbb lret cli sub lock inc cli and inc gs sti (bad) call mov (bad) (bad) imul (bad) jl lods pop (bad) (bad) lcall sub pushf bound dec out mov xor cwtl lret (bad) fstpl mov mov icebp pop scas rcrl dec jno orl lcall fucomi adc xor sbb or in pushf into pop arpl lret clc mov data16 (bad) (bad) call xor jg fsubs or sub test lret dec sbb inc lret std lcall icebp out rorl iret inc clc lret outsb xchg mov cmpsl ljmp pop dec mov lds mov (bad) (bad) (bad) ljmp outsb jnp mov fwait dec in movsl mov (bad) mov jg enter jmp dec hlt cmp adc add ret negl pusha xchg (bad) (bad) (bad) (bad) cli xchg je xor repnz push jle fwait jnp pop imul aad pop mov pushl pop incl icebp arpl repnz sti cmp notl fldenv jmp and es out sbb and rolb lods out sbbb mov sarb js jmp (bad) xor mov (bad) js out mov xchg dec adc dec rcll (bad) (bad) mov ffreep jge ret mov adc jge into mov xchg pushl xlat jae in (bad) in xor xchg jo xchg pusha test je scas loop iret out movsl sahf xchg (bad) jg (bad) jle aas xor xchg xor jbe pop scas jmp jge lock (bad) into icebp dec (bad) iret mov (bad) (bad) (bad) jp ret std push (bad) pop adc pop shrl fnstsw not lods je cmp fcoms movsl push add (bad) decl dec adc test fcompl mov adc movsl lcall dec sarb sbb or dec pop (bad) mov inc (bad) mov sahf xchg xor dec mov and movsl mov jmp push dec add movsl mov jno addr16 mov pushl push mov cmp insl add das insl in scas fstps (bad) les cwtl (bad) jg or mov cs stc xchg xor push fildll (bad) (bad) call push imul dec and inc (bad) and pop xchg rorl add xchg add sbb pop fisttpl (bad) lock call mov int3 fistpl pop pop xchg mov sbb stos cmc inc mov sub rcll dec dec ljmp mov mov iret fsubrl inc popf and mov leave mov xlat int3 push popa adc dec popa xchg add xchg test sahf or int popf pop (bad) out testb (bad) jmp lcall inc dec add sbb lret push inc mov inc loop cmpsb (bad) (bad) (bad) incl mov jg lods push sub daa mov mov mov inc cmp outsl clc sbb sahf pop fdivp inc mov cmp (bad) (bad) (bad) cmp adc fs sbb jns sub jno in movsl ja jg mov jmp xchg mov aad and aam push std call iret cs xchg dec outsl imul xchg mov inc xchg idiv (bad) incl dec (bad) gs adc and mov sbbl mov dec sub test mov cmp jns sbb hlt das fimull lds cmp sbb mov incl adc cmp mov pop (bad) (bad) (bad) (bad) mov mov or jno mov push mov xchg pop push aam lock out sub or shll xchg xchg cmpsl push loopne sub jbe push movsl jle pop icebp (bad) (bad) jp int std pop out pop or lret mov xchg mov (bad) jg pop lcall mov adc shrb (bad) (bad) (bad) mov xchg push dec xchg or push loop xchg add sbb scas dec xor cmp (bad) (bad) jmp push lahf xor mov adc or je das ficomp jae lds push subl cs repnz mov outsl nop repnz dec in js (bad) mov mov (bad) (bad) decl mov xchg in jl stc mov xor dec (bad) mov sub inc (bad) cmp lods (bad) ljmp inc arpl arpl cmpsb push out push sub iret stos (bad) (bad) (bad) decl (bad) mov xchg inc cmp andl jo insl cmp push fsubl mov jg js cmp lods pop js jnp xchg clc and popa and es fs mov ret mov fwait (bad) test mov das jne mov mov dec dec push pop (bad) movsl pusha std decl fldcw fisttpll (bad) jp xchg inc js lock inc icebp pop mov ret jle mov and lcall cwtl test decl sbb jecxz bound mov (bad) mov les sub pop adc jns dec outsl jne mov mov call adc ja xchg push aaa add and (bad) clc pop push outsb lcall add xchg jb loop mov jmp shrb sub (bad) cmp mov adc data16 repz pop or mov aam incl jecxz jb int sbb andl dec adc idivb pop pop inc pop and mov (bad) insb insl (bad) (bad) jg mov out fimull addr16 stc xchg inc test mov (bad) (bad) (bad) decl into out outsl popf sbb aad das push les xchg pop jmp stos rorl scas push mov mov jecxz fisub push loope rcll shl repz mov push and ja jo push sbb aam jg pop jle add jne es dec out (bad) ljmp clc push xchg loop cwtl sub adc push lods out (bad) mov ja sbb (bad) (bad) (bad) decl lods (bad) push movsl or data16 outsb sahf ficompl dec jecxz test and ljmp jno dec scas adc mov aas adc inc jo sbb sub icebp mov (bad) (bad) ds (bad) arpl pop lahf fistp fimull xchg mov xor add push cli jg dec test ss int call je insl icebp pop ret xchg push mov mov (bad) (bad) (bad) (bad) ds jae out mov aam popf movsl jbe push sub xchg and push mov (bad) lcall jns pop fldt jmp (bad) js (bad) jae xchg or pop fistl insb ret add jp (bad) ljmp add (bad) or dec dec inc (bad) shrb (bad) (bad) in insb (bad) xlat jne (bad) in or cwtl (bad) ss or in xchg push test (bad) shrb jecxz push scas jl lock (bad) lcall mov xlat cmp jne das mov mov adc (bad) jmp pop push outsl insl adc jl popa sbb xchg pushf sbb movb imul lea outsb cmp sub xchg mov (bad) ljmp xor dec sub adc xchg cltd loop mov xor inc roll sbb (bad) (bad) (bad) stc sub dec or out fmull lods dec mov test mov das inc ret (bad) and mov sar scas or dec sbb or ret test xor push clc and call cmp cmpsl test imul aas push mov mov pop pxor jecxz lock mov leave stos inc mov xlat dec std sahf xor mov lahf lods pop pop cmc (bad) decl sbb out scas in daa or mov (bad) decl add xor (bad) dec mov (bad) fwait test cmc inc lret xchg in ljmp lcall or adc test inc rol insl jb xor cli (bad) ljmp (bad) rclb add add push loope xor jmp cmp (bad) ljmp jl xor cmpsl push rorl add in outsb xchg gs movsl push clc fcomip lods clc mul std js movsl mov cmp sahf xchg in sub pop lods es dec or inc sbb outsb cmp icebp je bound js jmp idivb mov fiaddl and (bad) (bad) jg and movsb push outsb rcrb stos jnp bound cli sbb xchg mov adc push ljmp push lock cmp cmp test dec loopne pop or (bad) fcomp in lcall and call push addr16 pop stos inc daa in aas sti pop push inc sarl mov push pop sbb fsubr in orb add jp cld adc pop lock popf loopne xchg adc (bad) (bad) (bad) inc stos sub mov outsb push sbb das and xchg inc mov out imul (bad) fild pop cld or push es psubq fimull (bad) (bad) lcall stos dec mov fdivs jge mov out sub xor (bad) lcall mov std jne outsl cmp stos xchg test int and std fisubr pop ljmp stc lods es xchg dec popa jmp add push cwtl sbb jmp mov mov loopne sbb xchg scas fstps inc (bad) inc xor pop cli xchg cltd insl insl stos inc inc lret insb stos push loopne mov xor (bad) in (bad) xchg pusha mov fisubrl cmp (bad) js (bad) fcomps dec sbb sbb stos lods icebp out push inc pop mov fsubr mov sbbl or loopne fwait pop (bad) (bad) (bad) call xor adc test sbb pop jno aad cmpsl sub imul insl sti scas (bad) (bad) (bad) dec pop jne sar insb mov mov and xchg fucompp sahf arpl sbb lods std mov imul aas mov push cld (bad) mov outsb lahf bound mov mov sub jo adc and loopne in (bad) fcomip out push add push (bad) mov ret (bad) xor xchg idiv inc loope mov dec sbb add adc pop push decl out sbb mov inc dec jno lret adc cmp call cmp (bad) (bad) lcall add insb test inc adc sbb lcall cmp pop jbe pop out mov out enter movsb fcompl sbb lahf add mov cmp jg pop loope (bad) mov pop lock pop bnd (bad) (bad) (bad) jmp bound aas cmp sbb jo outsb lock adc ret mov outsl clc dec sub xor jb idivb mov imul (bad) call test lods lret loop clc and in push stos (bad) sarl clc mov lcall pop mov ds add ret cmp push add jg (bad) clc sub incl test dec loopne mov incl out dec popa xchg les xor movsb (bad) loop ljmp xchg clc (bad) (bad) decl pop mov xlat lahf push or std hlt mov (bad) mov mov dec and sub stos pop mov cmp add out inc clc pop scas push hlt sbb clc dec bnd movsl fsubr stc rcl mov xor (bad) inc pusha add ljmp dec scas fwait xor sbb lahf lock fcmovnu pop test adc cli loope shl (bad) (bad) (bad) (bad) mov mov shrl and out add popa sub stos adc push lcall fldenv decb ret mov stc cmp dec (bad) out and mov mov mov mov mov and (bad) (bad) decl adc dec (bad) repnz xchg popf cmp sbb lods icebp pop inc pop sar fild repnz negb fist mov incl lret and insb cwtl andl nopl hlt push jnp sarl popf adc hlt (bad) jmp pop mov and lcall pop jp pop std mov add or mov xchg inc xor lods inc test xor jge cmp (bad) decl xor aam adc pop clc (bad) jg aaa xchg mov int3 cmpsl fnop stos dec aam jg dec or mov inc sbb enter mov push pop xchg clc sub add push push lahf fimull jecxz push rol jg (bad) call xchg cli testl jae ja es rolb cmpsl or ret jmp pop jno scas pop add mov mov jnp (bad) (bad) (bad) pushl loop xchg adc fldt pushf jle in iret push adcl mov (bad) jbe outsb lea imul sbb popa add cs lods jmp adc out pop outsl push mov pop (bad) (bad) (bad) mov iret pandn ljmp aam fdivp ret and rcrl cltd sbb pop insl fdivr dec mov pop repz xor aas or xor daa shl mov mov pushf pop popf mov stos arpl ret pop fmul adc fdivr lock mov (bad) pushl dec imul ret (bad) loope vcomisd jle clc subl call mov jp sub xchg cs outsb scas or test les fmulp incl lods push fiaddl outsl incb std cmpsl ds pop imul (bad) xchg mov (bad) sbb cmp mov (bad) (bad) decl (bad) fdivrl out and mov cmp mov mov movsl or sub mov in mov jge mov enter (bad) decl iret mov mov lods add pop add mov fsub sbb pop pop dec loopne xlat int3 lahf adc xor xor div sbb clc ja push cli add sub pushl cs out mov cmp daa add pop add pop sbb mov cs jg test mov mov imul (bad) sub add (bad) ljmp inc push ss or jns add (bad) (bad) push outsl out mov mov push mov outsl push fstp dec ljmp outsb pop pop daa or mov dec pushf fcomps enter cmp cmp lcall push inc scas scas cmpsb jnp push mov fildll data16 pop ret or sarb cmpsb push lahf sti arpl dec in pop movsl fcos fnsave loop mov adc push adc (bad) (bad) jmp mov dec pop jge lds imul lods cwtl in (bad) mov pop test ljmp adc adc xor xor cmp jge movsl icebp (bad) (bad) (bad) incl dec mov movl test and push lahf pop cld inc (bad) aas gs out mov sbb xor hlt push clc (bad) ja inc insb rclb movl sarb xor push insb sub mov das adc sub scas jmp out sarb add push shll lret in call xchg mov xor xor movsb out mov mov (bad) ljmp mov sub xor outsl pusha mov in add loopne loop add push hlt jns pop clc cmp imul hlt in inc inc adc dec mov rol dec add std ret dec scas jg add xchg ret jl clc cld aaa cld cmpsb aad xor ror dec pop jnp leave cmpsb (bad) jns icebp (bad) pushl lea push (bad) repz lock test loopne insl clc (bad) lcall ja stos jg mov fprem1 out pop jmp test stos mov sar ret mov enter xlat mov (bad) in mov jmp fidivl mov insb cmc dec mov pushl rorb mov (bad) sti mov (bad) dec jp pushf stos push mov dec mov cli mov movsl or pop rclb push ja add jle lcall jl inc sub xor pop enter ret lcall decl xchg popf add insb mov add add jecxz fildl (bad) mov testl and mov jl (bad) (bad) incl mov mov fs fcoml xchg cmp push daa cs es aad (bad) (bad) sti loopne punpckhbw clc imul std mov clc test decl lods cmp es xor xor pop icebp push cwtl cli adc imul sbb sbb jl lock mov jecxz mov cli (bad) jg push mov mov test sub dec xchg in in inc xchg sahf pop test out ret lahf xchg aad decb xchg xlat jae xor call scas mov mov aaa add aas (bad) jg outsb cld pop lock mov mov cmpsb jle shr insl jle jle push push mov cwtl push sahf (bad) dec cmp sub lock jmp lods dec sbb (bad) in jecxz jl movsb clc add mov (bad) jmp cmp test (bad) fisub das sub lcall in mov mov mov jbe xchg sub mov pop icebp scas mov cwtl xchg xchg loope fimull cmc or (bad) decl cli inc aam pop mov lahf insb lods dec insl sub nop add pop hlt and loopne nop add dec mov sti add cmp xchg aas ljmp call decl cmp cmp inc in mull movsl rorb or scas ljmp cmc pusha je mov in clc pushl std mov ja,pt mov jnp xchg xlat out pop jbe mov (bad) mov lcall js loopne sbb mov ret sbb (bad) aad pop stc xchg pop pop jecxz (bad) decl in jno jb out and mov mov ds lret fist (bad) decl dec and shl mov push rep jecxz insl mov (bad) push js and add add pop cmp xlat xchg sbb push incl adc ret imul pop pushl xor mov js xor fmuls scas adc push icebp add call pop pop sub in in or push (bad) mov iret aaa add add xchg clc mov pop (bad) mov push pop fsubs adc jne push mov mov pinsrw dec (bad) fcomip jg daa mov scas pop jle pop xor sahf test or adc sbb aad jecxz jnp ds ficomp push pop dec sarb outsl rclb in push (bad) mov mov (bad) pop mov les aaa pop (bad) incl or roll fs cltd and add loope clc xchg idivb jg cmp icebp rol aas push loopne (bad) lcall insl and out fldl mov inc aam aad bound xor (bad) (bad) (bad) jns out in lret inc xor push loopne push loope sub dec clc mov add adc cmp (bad) mov mov mov adc data16 and cwtl push popa sbb mov dec dec cmp mov mov (bad) hlt jnp ds jne (bad) (bad) jmp cmc jmp cli jbe (bad) mov mov push mov in fwait loope adc subl lcall sub mov loop sbb gs std call push and (bad) fildll push lods call roll movsl xor sub pop push cltd fdivrp xor lods (bad) inc pop push inc push xchg adc (bad) jg mov fiaddl imul jnp das (bad) nop xchg (bad) mov mov or sbbl fdivl or adc cmc mov jne pop sti pop dec shl mov lods mov pop addr16 pop stos push or cmp loopne adc fsubp mov popa xor lret gs (bad) (bad) pushl and int xlat into xor ret sarl shrl decb add out push mov xchg out jge dec (bad) jae xor xor mov mov in icebp dec movsb in mov inc mov repnz jae inc mov push sub (bad) (bad) mov mov push dec andb notl mov pop sahf cmpsl and pop jbe mov cwtl lahf add loop jl clc cmc sbb xor push sahf or push cmp add push sub adc push cmp (bad) decl add ret ficoml fisubrl cmp loope sub stos pop jbe sbb sbb ret jae test mov inc aas xchg lds sar jg push test mov iret jecxz setno push push pop ljmp inc scas clc jg and mov mov pop jbe (bad) push aam (bad) push mov xor test inc xchg (bad) dec scas xchg call mov fwait loop mulb stos pop pop fdivrl (bad) (bad) (bad) mov icebp push sub pop out nop bswap shl and sbb (bad) jg (bad) jne mov sbb loopne js out mov (bad) fcomip insl test into push dec mov dec nop js sbb jp cmpsl loopne mov jg lds aam push pop mov pop sub push dec xor or (bad) (bad) (bad) incl cmc jmp movsb mov pop mov scas js push test mov push pop jb adc pop inc jo fbstp mov decl ret push jp pushf xlat push dec jno push sub pop bound cwtl pop imul jg scas aas lds push stos jecxz ljmp sahf andl or imul sahf dec mov clc stos test xlat stc push movsl xchg xchg push mov inc adc lock mov enter rolb mov scas push inc aam jo xchg fmull add sbb and pushl or fbstp ret dec adc insl adc aaa aad scas loopne (bad) call sub ret dec loop bound insl lds push pop xchg pushf xchg sbb (bad) mov rcrl repnz dec aad pop push dec fstpt outsl addr16 (bad) call jns (bad) cld cmp or mov in mov inc mov xor (bad) lcall ja mov imul dec sbb sahf add lock (bad) (bad) (bad) mov lahf lods push insb jbe jbe movsl test jnp mov and sbb and (bad) decl sub pushf clc jns scas pop jl outsl xchg mov aaa mov outsb lcall sar decl or fwait test mov data16 out jmp pop sarl adc (bad) (bad) ljmp mov fisubrl mov fwait mov ja pop lret stos in leave loop push js insl cld xchg pop xor jne hlt fcos ja outsl nop mov jle mov push inc jne sbb mov lods insl (bad) (bad) mov xchg jl,pt lods mov pop lret mov and (bad) lcall dec dec icebp aaa xchg sarb or mov jge enter sbb (bad) decl das out or fisttp ds out cld jno mov mov (bad) push (bad) sbb jbe les ljmp loop testb jo adc jg xor bound leave in clc out loopne outsl pop add and jp push jb push mov mov pop or pop mov inc in add push (bad) (bad) (bad) mov in sti jb imull mov dec xchg pop mov mov popf decb mov (bad) (bad) fistpll sbb aas gs dec aad mov out out and pop mov jo ss leave in call mov sbb loop mov ljmp push sub fisub sbb outsb or mov jecxz push push xor jb sti push clc dec push (bad) ljmp js sub sbb dec das int push mov add jmp xchg rorl popa lock sbb jle ret push lods lods pop xchg (bad) (bad) (bad) fadd movsl imul inc xor dec scas sahf (bad) (bad) call xchg push push xor stos out std jle insb (bad) ljmp cld (bad) fucomi cmp fidivrl pop clc cltd lock loop mov adc ljmp (bad) pushl std pushl stc push xlat jae popf xchg and xchg insl dec daa push movsb push sub psubq cld mov lock (bad) out fnop test push push lcall fmul pop enter inc jl loop,pt (bad) (bad) (bad) ljmp or pop mov (bad) int3 fadd les outsb xorl je pop pop fs pop loopne decl and push inc shl xchg outsb push lods cmpsl scas jno and xlat dec (bad) pushl std lods jne dec fsubp lea mov (bad) push sub jae daa inc lcall add imul jle lret iret inc cld push lcall sti push test lahf or sbb call dec loope jmp ja lahf mov out mov xchg jge cmc out sub shrb add add dec mov sub outsb jae cld sbb out ret out insb je mov cmpsl mov mov mov in ljmp sub clc repz aas pop xchg inc icebp add (bad) cmp add call push push pushf mov insl pop pop mov ljmp sti pop ret inc mulb xchg movsb (bad) (bad) or je inc push add pop and pop insl mov mov les inc pop push cmp adc (bad) (bad) (bad) cmp fistpll jne out lods jne in ljmp adc je shr std setge cli jg test xchg dec mov push hlt xchg mov jns cmc fcomip ljmp inc (bad) into stos les sub ljmp (bad) out dec (bad) (bad) (bad) incl shlb rcl mov sub push addl add xlat (bad) cmc (bad) incl adc test sarb inc movsb jmp inc aad movsb (bad) jg int mov xchg insb stos daa out adc mov sbb fbstp arpl (bad) (bad) jl insl push xchg ss js int3 pop xchg xchg jne in mov push out pop xor sbb ljmp int3 jbe inc dec or pop lods in mov lcall pop xchg imul sti fstpl push iret and pop ffree jg push xchg (bad) jge lock js loop mov push sub jl cmp mov pop xchg (bad) call cmp cwtl lahf cmp std cmp jle test (bad) mov outsl pop js jmp xchg sti sub sub push pop sub cmpb (bad) (bad) (bad) (bad) pushl sbb dec cmp shrb push rcrb notb outsb bound sbb cld jg add xchg push ljmp xor (bad) jg pusha rclb pop push arpl leave xchg and sub and out shrb (bad) les mov movsb pop fadd or xor cmpsl push or or jbe sub adc fcomip jg sub aad jnp inc push out adc shl pop fsubrp test pop subl (bad) incl xor ljmp or pop xor cvtdq2ps imul pop jo fwait out fildll pop pop mov fisubrl mov mov adc adc ds lcall pop fisttpl (bad) fcomip sbb inc mov fsub jle fmull jo add jmp imul (bad) fidiv mov xlat mov pop stc mov lods jo adc or ss adc cmp popf sbb fs imul lcall pop add fdivrs push lock (bad) (bad) ljmp sbb js fiaddl nop mov or and test (bad) (bad) decl fistpll jbe loope adc (bad) adc pop mov aam xor mov and push sbb sbb lea stos inc ljmp sbb (bad) fstpt pop insb jno,pt pusha xor call sahf mov test push (bad) (bad) lcall insl popf aam out repz mov rcrb sbb shl aad jmp dec jmp or mov add mov jl mov adc mov stc call xchg pop pop adc paddusb mov pop pop pop push (bad) (bad) (bad) lcall dec out loope in mov push lcall cmp sbbl movsl (bad) (bad) (bad) jmp das mov ds mov pop xchg push aad lret imul xchg js jg (bad) and jp mov (bad) pop mov mov loope inc popa (bad) pushl ret pop lock sub jno fsubrl (bad) (bad) (bad) call push mov fcmovnu out jnp ret (bad) sbb pop hlt mov in add (bad) (bad) incl adc ljmp cmpsl mov arpl ja lea (bad) (bad) incl and dec nop dec cmp mov sbb xchg or in imul (bad) (bad) fnstsw pusha ficomp ja idiv mov out addr16 inc dec xor add mov adc (bad) jl,pn cs mov (bad) jg push scas popf push sbb out loope fucomp gs adc (bad) or or xchg add pop jg es push jae ja sti dec (bad) (bad) (bad) fstl pop fild fwait sub popf lods out pop sub pop icebp jmp xchg xchg xor outsb dec sbb das inc mov jge (bad) or (bad) fidiv test xchg fdiv cmp (bad) (bad) incl mov jg js push (bad) cmc or ja iret cmpsl fstp inc rcll loope lcall xchg gs mov lret add (bad) in adc cld add sarb int cli cs jg (bad) pushl call dec xchg push xchg mov sbb lock clc mov loop xchg lds (bad) mov insb (bad) je (bad) ljmp sub loope mov sbb ljmp leave ljmp outsb dec pop in or dec pop adc ret (bad) lcall pusha push lods pop dec jnp xchg push fcmove test test out and ss jae loopne xlat xor cmp pop fdivrp stos mov pop mov push fwait sub das clc (bad) ljmp push jmp jnp mov mov push imul mulb gs pop xchg bsr dec or cld sbb and lahf mov jae cmpsl int jge (bad) (bad) jmp test enter adc inc sbb fcmove shlb xchg dec pop scas dec jecxz adc ds ljmp xor push mov inc aad pop sbb lods mov adc cld mov add (bad) mov mov aaa js pop mov mov mov xchg mov inc fs call xchg xchg sysenter pop mov repnz jecxz test ja fisubrl int enter loope mov lcall ja lock (bad) movlps jp adc neg dec cwtl ret pushl inc jne xchg (bad) mov mov lret sbb mov pop (bad) call ret fwait mov dec loope push pop fxch idivb (bad) (bad) (bad) (bad) ljmp int3 int3 mov bound jno dec jl mov sysexit jg js add fldl insl lods hlt lods inc dec ss (bad) (bad) mov nop inc ret cmp fs add mov test and push sbb lea cmp (bad) call daa shrl adc jecxz cmc (bad) cmp xchg mov div call ljmp mov rolb stc int3 fptan sti cmp ffreep and (bad) call loopne imul mov xchg adc push mov mov jns adc mov leave iret sbb dec cmp (bad) fidivrl aam cmp fstps lods lahf sub inc sbb push and cmp inc jp out lock xchg mov test pop pop clc xchg dec mov arpl xor jg add jle mov negl (bad) (bad) (bad) mov imul mov rclb sti push clc out cmpsl or ret mov mov nop jno mov lods (bad) dec add (bad) (bad) (bad) lcall and mov imul cmpsl scas (bad) scas ljmp popl dec stos fcompl xor pop pop ret mov mov mov mov mov adc mov test push sub clc pop adc or (bad) ljmp outsl mov ret inc rcrl out ret shrl mov adc fs insl (bad) jg add pusha mov fs sub pop fstl mov cmc loop or addr16 mov aaa or lcall mov inc cwtl xor nop mov pop add ret jb or pop mov mov pop cld xor mov mov mov stos pop xchg (bad) (bad) dec into sahf xor mov repnz das cmpsl test (bad) jg aad xchg and mov icebp mov cli out je (bad) jg lcall mov jne or adc push xchg (bad) jg ja out ds ror and inc lock jae jg xor cmpl (bad) hlt outsl bound push int (bad) pop je add dec jno out (bad) (bad) decl dec xchg dec mov fildll jmp aaa (bad) adc outsb mov jge jns sbb mov and mov mov dec or jge sbb xchg sti popa cld pop icebp std push jmp cmpsl in or pop mov (bad) mov push imul inc and inc sub divl (bad) (bad) lcall fiadd outsb and mov xlat fdivrl cmpsl xchg in pop movb mov mov shlb or mov sbb lods (bad) int dec or clc iret push jae lcall hlt clc fnstcw shlb xchg aas jmp xchg adc sbb scas mov loope push (bad) (bad) pushl adc push xchg mov das ret out or inc test xchg xchg insl (bad) les mov ret dec pushl clc jmp scas jae and aaa cld xor fnop push mov mov lods outsl sbb (bad) pushl sbb xchg je and or enter mov mov dec (bad) call cld pop (bad) repz xor in or std fsts dec in lahf sub add es scas pop mov and jp dec jle lcall (bad) cli popf test add push outsl push mov pop clc cmpsl ljmp push (bad) loop fidivrl loop mov jo (bad) (bad) xor pop fidivl lea lock fs je aad (bad) lcall cmc mull adc loopne cmpsl lock jne lods cmc (bad) (bad) (bad) pushl shll ljmp push js int3 dec inc jo sbb fcmovnb mov sub (bad) pop aam ja call mov sar mov je or push jecxz (bad) (bad) mov jo mov fdiv jno xlat xlat fistp (bad) sub loope in sub (bad) (bad) call insb movsl clc dec aas or dec jecxz out pop xor sbb daa adc adc xor xor adc sub lret dec ds icebp repnz (bad) in and pop cld push mull repz jp push cmc icebp push dec daa jg mov fucom cld jge jmp (bad) (bad) ljmp xchg inc das fstps ljmp inc cmp mov int3 test and ljmp adc lds mov xchg mov ljmp (bad) ljmp push xchg adc in out (bad) sub push xor dec xor (bad) jg dec push jecxz adc jge pop mov mov (bad) jne or xor mov bound lret enter adc addl or cmp sbb mov cmp mov loope mov fwait add addr16 cmp cltd mov pop push scas dec ljmp sub ds jl in cmovg pop mov pusha adc clc mov cld insl fclex insl jg jl,pt push mov mov or cmp and mov je lret incb fiadd cvtps2pd cmp addr16 inc mov jmp push movl shl mov pop insl lods xchg jle mov (bad) decl cmp or rcrl scas je add pop xchg mov decl mov add sub adc lret icebp mov in xlat sbb in mov (bad) sahf es add sbb inc js sbb jbe (bad) (bad) (bad) incl (bad) rorb nop cmp lret mov out jno mov stos mov imul fldt cld add sbb icebp fwait jb fnstcw xor fstpl (bad) inc pop insb jl lock loopne mov (bad) (bad) out inc inc xchg sub lcall mov sbbl add stos push dec xchg jmp cmpsl (bad) pop pop fadd loopne mov dec test mov je in popf enter ret rcl mov scas movl rcrl fidiv clc jg fstpt and and push sbb outsb (bad) (bad) lcall jg mov jge loopne sbb repz (bad) xor fistpl xchg and (bad) out mov sub dec mulb mov jg jge rorb jne jmp jne sbb mov mov loopne loop or jg mov inc add jl imul int mov lret mov cmpsb repz in push fs jg lock pushf add mov jg pusha pop mov icebp iret (bad) push fwait decb pop sub mov (bad) cmpsl fimul mov out (bad) add (bad) jg jns push xor out ret xor bound iret (bad) int jl fisttpll dec mov mov (bad) jg pop ror nop mov fstps lea or lcall mov adc sub pop lock cmp out out std (bad) jg call cmpsb call lods cld xchg sbb adc das adc pop bound or cwtl pushf imul jmp lods gs jle sub out stos mov xor ljmp mov out xchg fucompp jle jl ds repz js outsl or ljmp (bad) hlt mov adc arpl dec and int3 (bad) (bad) jno (bad) mov ja clc pop ss add movsl fnstsw ret jne (bad) (bad) (bad) out in or mov dec sub mov popf out pushf jecxz,pn vpmacssww dec jg mov clc and fisttp cld and inc loope rcl loop mov cmpsl dec xchg jns mov jg fcoml scas pop test (bad) add dec dec pop icebp pop mov mov inc adc pop or cmp (bad) (bad) (bad) pushl fidiv and enter sub (bad) and shl mov shlb (bad) lcall mov scas push xor dec jae fwait xchg mov jne sub add jl movsb push hlt daa lock rcl repnz (bad) ljmp dec cmp jmpw push outsl mov mov add nop ret jg mov sub pop subl js jo sahf ss push (bad) decl cmp lods fidivrl dec test mov or cli stos decl mov arpl (bad) pushl popa scas js push shlb in xor sbb dec jns into divl inc adc or adc add femms (bad) mov mov jl xor sahf cmp das nop push lret and xor sbb lods mov sub shll xchg scas movsb fidiv pop dec movsl inc or shrb ds sub (bad) (bad) call mov cli fisttpl mov hlt sub ret mov pop cld lcall push aaa xchg mov and mov inc cld mov (bad) (bad) cmp (bad) in rcrb sbb dec (bad) aas fs lods (bad) notb icebp cs jnp pop inc cld outsl orb dec jecxz (bad) mov sbb scas fildll sbb sarl andl je mov add sti push pminub testb int pop imul ja pop sbb pop pop ret cwtl ficompl (bad) lret bswap lods add (bad) pushl dec mov cld push and mov arpl fnstcw lcall pop mov push out adc out pop insl loopne push push inc sar jg cwtl add dec add xchg imul mov push mov add lahf mov les lret out mov std scas mov negb sbb or jnp (bad) sub lock js sti push and scas outsl sub (bad) jmp stc mov fisubrl add scas test push js pop fsubrl (bad) out sbb cs (bad) aad dec jnp fimul pop fstpt jmp lods lcall mov adc or call jle jle push xor mov or pop scas sarb push sub xchg dec das pop shrl insb les inc clc std out test add inc repz jle xor dec push pop mov mov sub fs (bad) jg lods inc mov les scas xor mov pop jge outsl (bad) (bad) jmp mov cmp cmc aad lods cmp shrl jge adc hlt inc lahf xchg popf clc scas xchg movsb jge fsub loopne andl into xchg (bad) (bad) ljmp (bad) pop push mov outsl add jmp adc cld aas stos das fidivl repnz mov push incl add push mov jge push dec stos dec add mov loope adc push les push fnop cmpsl push push cld (bad) ljmp pop pop out das pushf adc stos test add push push xor loope jle test xchg jecxz mov cs pop dec lahf push (bad) jg jmp cmp xor repz xchg outsb push cmp (bad) out mov lahf mov cld pop sbb das icebp hlt sbb (bad) (bad) pushl icebp lahf lds das xchg lds lods out dec mov shrl adcb ds (bad) jg ret popa pop or bound dec into xor mov int3 mov hlt pop mov pushl dec (bad) repnz pop sbb bound push das fmuls adc pop fisubl mov sbb imul popa std stos jmp or sub (bad) jg in test push adc jb jb repz jns lahf sbb (bad) fiaddl and push jns pop (bad) dec stos sbb push push into pop add aam jmp out clc sub xchg lock ret aas push (bad) (bad) jg in imul xlat ljmp xor sahf pop lea cmpsb fcmovu inc lock xlat jno jb jg (bad) (bad) (bad) call out mov (bad) inc cld mov mov fwait stos cmp notl mov jg mov js cld mov fdivr shr ret (bad) lcall lock in fisubr xchg jno and sbb sub dec jg (bad) xchg fidivl mov (bad) (bad) call (bad) lock decb (bad) sti inc jle (bad) adc cmpsl sbb shrl scas in pop jecxz jmp and and xlat mov ds je dec add (bad) jg pushl cwtl into scas jg xchg jge sbb in mov in decl jmp call ds std xchg xor inc test jmp or outsb jl imul cmpsb dec sbb xchg adc faddp enter (bad) push into imul enter sbb cmpsb ret ds repz sbb mov pop repz je xchg push add test cmp out or in push mov push ss adc clc shl mov and jg imul mov push mov bound shlb pop (bad) xor aaa (bad) mov xor dec std (bad) fist jmp mov int jno in outsl sub cld (bad) jg push add mov sbb in add clc xchg (bad) incl and push inc (bad) (bad) mov jecxz outsl cmp fisubr lods call ss jne cmp or test shlb adc fldl2e pop or jl test sbb sahf pop lds lcall pop push sbb push dec jnp mov divb les xor dec (bad) (bad) pushl jo movsl mov pop shll pop mov inc cmpsl js ret xchg iret or (bad) (bad) (bad) call leave jbe sti jmp lods fdivrl andb xor leave mov fcmovne (bad) sbb imul stos pop mov sarl ficoml int fs call inc sub xor add pop cld dec (bad) (bad) (bad) fistpll xchg mov mov or mov cltd cs iret out nop int3 int lret lcall ljmp push add and mov mov and (bad) (bad) (bad) (bad) mov mov push adc cli cmpsl out fs lods lock pop cmp adc (bad) (bad) (bad) (bad) fnsave sub stos aad mov fcomip jae (bad) xor pop icebp inc dec xlat sub (bad) (bad) pushl imul outsl je outsl mov js mov iret xchg or in jl lcall (bad) fisttp xchg cld jne,pn sub lods and mov adc pop sbbb insl (bad) data16 xchg notb cld push clc mov dec pop loopne dec aam cld cmp ja pop lahf fisubr lods mov push icebp mov dec daa or or stos xchg and adc sub clc mov and jle xchg push out xchg dec es imul gs fidivr push push leave adc aad imul fimul dec leave aam jbe decl hlt mov add mov fiadd mov pop jae sub xor mov inc and mov and aam sub out shlb clc xchg mov xor pop fadds jns mov in push imul sbb or leave sbb jae mov push clc cli scas mov xchg push mov movsb cld (bad) (bad) (bad) fsubrs aas fidivl mov sbb xchg add pop pop pushf jecxz mov jle js loop lds in out (bad) jg mov dec pop mov fwait lods in lea xor and in dec pusha xor cltd (bad) incl fxch ficompl push jg pusha xchg in movsb lahf push cmp jmp scas sar push jbe mov ljmp repnz outsb add or jl dec dec xchg cmp (bad) jmp es xchg les dec push testl nop sub (bad) out (bad) (bad) incl mov lock loopnew xlat test cmc cmp sahf sub (bad) mov sbb jae nopl ret inc in stos mov cmp pop push icebp cs lds adc (bad) (bad) lcall sti add or xlat cli inc int3 inc push or xor jbe inc and add push lahf fidivrl jp int3 (bad) xor in dec ljmp cld push pop lock (bad) (bad) mov leave dec pop ret pop push ret xlat jl repnz repz mov call in mov das punpckhdq cmp push sar lcall jne xchg add in sbb mov inc mov lcall sbb pop mov inc (bad) xor aam jg jmp rcr clc (bad) (bad) fbld xchg cmpsl ljmp jge sub (bad) push inc mov jb hlt (bad) (bad) (bad) pushl dec cmp (bad) cli or in sbb out and (bad) cmp mov dec (bad) (bad) call sbb and and (bad) scas int3 cmc repnz cmp stos dec sti (bad) (bad) (bad) (bad) cli stc sbb push daa lock mov inc xchg adc or test clc add cs adc mov rorb ret add subb xor aas cmp xor (bad) (bad) (bad) lcall mov insl sub pushf jle divb cld jb out ret iret (bad) pop aas xchg cmp lcall jae mov pop sub and lret and adc add enter (bad) jg decl (bad) xchg sahf push or test (bad) cmp ss (bad) incl cmp mov xchg adc sub cmc rcl pop iret jge scas outsb movl jbe jge cld (bad) (bad) dec xor scas bound adc cmp outsb inc cmovb xlat pop stc xchg (bad) mov (bad) leave scas cmp jbe sub add daa test sub mov mov es mov fidivr in pop (bad) (bad) (bad) decl (bad) mov push insl out xor sbb mov jmp aad test xlat mov (bad) (bad) pushl lea jne es add out pop rolb xchg sbb or (bad) (bad) (bad) jmp nop shrl lcall sarb jae fs pop call inc shll mov or xchg sub sbb xchg inc pop pushl std pop je cmp jmp sti dec pop daa frstor popf out (bad) cmpsl mov pop and mov lcall mov mov jne (bad) jo push (bad) (bad) (bad) jg loopne pushf insl stc or inc adc or cld cmp pop fcmovb js sbb xor lret jno lods sbb adc jbe loop daa lds (bad) (bad) (bad) mov adc xchg cwtl dec jno ljmp ret std ss movsb add lods rol js enter lcall (bad) (bad) (bad) (bad) (bad) ljmp adc or sbb sti mov jae insb jo xchg xchg pop inc repz scas (bad) (bad) (bad) jmp btc mov aad adc repz loop imul fist rolb xchg jecxz xchg rcr cmpsb pop (bad) jmp inc je mov sub xor push cld (bad) decl (bad) inc fmull push mov jl clc imul xor pop add dec mov mov call mov mov ljmp and pusha ja mov or daa mov pop negl jns lock idiv (bad) (bad) call movsl jecxz pushf sub ret es jmp or or pusha pushf (bad) jp fildll mov (bad) jge idivl sbb scas sbb mov iret add (bad) or ds sar jbe stc ja xchg enter sbb in mov movups and scas ret dec outsl and insb mov mov push repnz jecxz add pushl dec xor or cmp out cs jg cs or mov aad jne in test ja xchg sbb imul sub sub pop xchg jp,pt in inc pop pusha loope add loop sub das loop dec out (bad) (bad) (bad) (bad) jl mov push xorb insl cs sbb cmp mov push jge pop xchg fwait sti negb aaa cs jbe pop mov mov cld ja push mov inc jne push (bad) (bad) (bad) ljmp sub pop idivb mov cmp ja inc push sbb addr16 pop mov vmaxsd fisubr xchg push mov in popf popf test push aad pop xchg aam std (bad) jg mov push jno add popa mov jno (bad) sar push add enter mov adc and pop dec (bad) (bad) lcall mov jne std cs adc gs pop add xchg (bad) mov lods sahf lahf jnp fwait dec arpl je pusha xor (bad) decl dec adc push in pushf inc sub mov outsl mov sub sar cmc cmp (bad) ljmp mov lcall out adc xor dec mov sar incl cld sti ss out adc (bad) aas jno add pop mov lahf mov (bad) incl scas mov push (bad) mov ja xor jnp cmc pop loopne bound mov adc adc push jl sbb fwait rcrb (bad) jg lahf xchg outsl ja cmpsb mov push inc sub cmp add add inc mov pop jg (bad) push push out lahf add mov mov sub pop in shrb fwait int3 insb xchg movsb icebp outsl clc xchg add lret sub add mov lea outsb int jle inc fstpl addr16 cmp push jl gs pop inc jl mov (bad) decl dec arpl call push rolb push ret repz ret incl sub in inc (bad) mov paddd shl cmp xchg fcomip (bad) (bad) cmp mov lods sbb loopne repnz and pushf sub sbb fcomip js notb test xchg (bad) (bad) (bad) jg lcall outsb subl push ficompl out and lea sarl mov fisub loop mov pop movsl xor lods pop (bad) (bad) ljmp jp xchg sbb (bad) es and jbe mov and rcll call insb xor jg xor mov lea aam sbb lods push (bad) (bad) ljmp fucompp mov jecxz pop inc push inc jo cmp sbb aaa fsubl loop xor xchg cs mov jbe mov dec jno,pn mov xchg es das mov es mov imul (bad) (bad) (bad) sbb cmp insb pop test add push repz jb jns add mov cli sub push mov jbe js enter jmp push int3 fsubrs xchg xchg es aam enter cmp ljmp pusha adc jp mov push push push jmp lcall pop jg repnz lea ja pop mulb (bad) inc fisttp cmp aaa cmpl sub and inc xor orl sub cli pop mov add lcall add shll imul cmc xchg or mov adc inc data16 jmp or xor enter rclb xchg lock dec daa imulb sbb or push xchg cli decl incl or xor add js ret les or xchg and pop lock jmp pop adc das test jmp and mov mov jnp loope xchg idiv pop mov jge shlb mov push in mov (bad) aas clc sub mov imul lock decl add jp hlt lret pop mov daa mov mov les xchg and mov mov icebp or xchg rcrb inc das (bad) dec mov sti push jecxz (bad) pushl push jne test xor fimul pop notl cltd loope add (bad) mov aad ss popf mov fmul les xchg jg sub jmp push mov (bad) (bad) mov dec fmull adc cmpb into xor stc cmp adc or (bad) mov pop lds and out scas (bad) decl xor xor sar scas (bad) pop fistpll ffreep jno pop lods incl in cmp and and imul and xor mov sbb leave lcall (bad) (bad) (bad) lcall lods int and movsb dec repnz les xor jl std xchg lock in cmp incl jl test xor xchg push mov lcall hlt mov pop cmp cmp pop push pop lock outsl mov cmp (bad) (bad) jmp clts inc fimull mov clc arpl mov out loopne sub pop clc inc test scas xlat sub cmp lcall popf add sbb ja (bad) (bad) (bad) call pop or loopne add jae cmpsl sub mov mov jmp lret sub mov mov pop idivb (bad) (bad) (bad) decl les insb aad frstor push push xor xchg jns xchg out inc (bad) mov (bad) lcall cmpb jg dec aas andb sub mov (bad) (bad) decl ret out mov jbe add arpl xor pop fs pop sbb dec cli lcall ds cld adc push (bad) sbb call in adc mov push adc pop leave push jbe dec add rorb pop pop inc pop data16 and mov leave cli das rcrb pop pop ret sti sbb icebp daa mov jge ljmp test ljmp mov jle jns push push xchg jo cs (bad) lcall out lret fcomi cld std push ja cmp xor jbe xchg lahf int mov inc jg xor ja push push (bad) in (bad) cmp jmp inc mov hlt jg js push shll (bad) daa inc sbb mov ret push jl cs (bad) (bad) incl or mov and stc sub or sti insl clc pavgw in or mov in xor or loopne inc jecxz xor clc ljmp jl mov add push and mov and jb add movsl aas xchg mov lcall jg lret mov loop jbe xchg (bad) mov pop ljmp jle (bad) ret loopne lret cmp mov pop dec shr insb in xchg loop hlt (bad) (bad) dec addr16 mov mov (bad) cmp outsl xchg loopne leave mov ljmp adc imul xor mov mov popf scas lods daa fnstenv xchg push cmc (bad) stos jg repz jno (bad) sub call sub int3 lret mov xchg dec sub sbb popf add cld ljmp mov mov mov mov cld xor xor cli (bad) (bad) out adc addr16 mov and popa mov outsl xchg scas loop mov inc xlat iret das and cmp test js rorl (bad) incb pop dec loope adc imul pop ficompl mov dec jmp sub add loopne cltd test (bad) (bad) (bad) mov mov dec leave lods lods inc push and test xor jae sbb pop push sub mov mov js or push (bad) nop fstpl ret js test in outsl cmp out repz mov (bad) (bad) (bad) pushl icebp imulb mov enter mov aaa xchg jb cld xchg aam or int3 or pusha mov (bad) call jle cmpsb xchg dec mov loop ret push mov loope dec inc inc loop or xchg scas lcall and cmp popfw nop adc repz add icebp sahf (bad) (bad) (bad) fistpll sbb xchg adc data16 addr16 data16 jmp push jb or jp fsubrp pop loopne movb cld stos mov mulb lods jl aam or or pop lock fwait iret add lods xchg push push pop dec (bad) xor stos sub pushl inc pushf add jmp in jo mov std fs jmp aas test push scas jbe xor cli das add cmpsb pop jle js xor dec adc (bad) jmp inc lcall mov imul xor movsl in outsl sar push mov movsb jno and cmp outsb jle enter cmp (bad) (bad) mov nop fmul addr16 and aad adc mov cwtl in in cmp (bad) (bad) jg (bad) test inc jne mov or add pmullw xchg push fwait dec aam add (bad) incl or lret mov mov orb xor jg icebp inc xchg test fadd jne mov adc add outsl mov and (bad) (bad) pushl pushf pusha mov adc out movsb pop push mov lahf pop popf cmc movsl sub je mov decl cmp lahf ret outsl fmul dec sarl aas mov stos stos pop cmp into (bad) (bad) mov int3 inc push mov inc ds mov add (bad) (bad) (bad) decl push popf push lock in rcll xchg pop jg lahf adc stos inc mov imul and jl cmp sub cmp sub fidivl adc fcompl aaa (bad) (bad) (bad) lcall pop insl aaa push dec sbb sbb imul mov js push (bad) xor (bad) (bad) ljmp dec out ja lahf add fmull movsb stc rol sub sbb movsb inc lretw push lcall pushf out push pop xchg loope pop fiaddl (bad) decl mov xchg lret cmpsl lahf scas loop out into das or cmpsb sbb inc mov imulb pop addb iret out cmp xchg lahf (bad) (bad) (bad) decl push sahf sbb insl in imul sbb loope jle xchg in push push jo or lods cmc inc test sbb mov les sub shr jmp sahf adc ret fadds rcrl (bad) jg test jo cld inc mov sub fldlg2 jne outsb (bad) (bad) (bad) jmp mov sbb cmp imulb jecxz mov add or imulb mov ds sub (bad) xor push imul mov xor push xchg sub inc lods imull mov jo (bad) hlt das test jne pop imul cld dec add (bad) (bad) lcall in clc mov mov pop mov xchg mov (bad) into inc sti dec push pop loopne (bad) ficomp mov fnsave fbstp das sahf int jno (bad) fistp mov mov lock ret push icebp xchg fwait jecxz sub and and xchg nop xchg adc loopne imul in fwait sti push cld push incl jmp jmp int3 test jnp push iret pop (bad) (bad) (bad) decl scas outsb in mov dec xchg loop repz enter (bad) icebp loopne mov ljmp fnstcw ret (bad) ret mov gs sub not subl pop (bad) jbe (bad) adc dec lret pop fdivs inc mov out add fwait gs xchg das js mov incl push mov mov sti sub pop clc cli aas sbb push mov (bad) out adc addr16 pop std (bad) ljmp loopne out sahf addl mov movhps or insb push mov or ss (bad) je cmp mov jmp pop fist data16 push push into rcrl out aaa nop clc call sbb iret in jae mov (bad) mov mov loope add inc ret ja sbb (bad) pushl lret push (bad) lock mov lds gs jo cmp fimull cmp push mov mov pop ret loop std outsl clc sbb test cmp (bad) hlt insl sbb (bad) (bad) pushl and cmpsl int and push jne pop pop mov push stc cmp (bad) (bad) (bad) incl mov das jmp addr16 mov fldt loop subl ret mov mov mov movl (bad) fild xchg fisub push clc fsubrl cld adc negb pop (bad) (bad) clc pop icebp xchg negb lock pop jge das stos cld (bad) (bad) call ss mov push mov cs jae (bad) jecxz js cld push das int sbb fistp addr16 jle jl rolb sub js out mov adc (bad) incl lods (bad) pop sub pop mov loope jno inc sarb xor les movnti (bad) (bad) (bad) (bad) (bad) jl stos push inc mov in push cmp insl outsl or clc js jae inc add mov (bad) lcall in adc repnz fstl mov lret cmpsl mov add jbe cli cld (bad) (bad) lcall loopne pop sbb cld xor jecxz std xchg mov mov jge (bad) insl cmp clc (bad) pushl and int stos xor ret ror jbe loop cs clc xchg loope scas adc push (bad) pop push xchg dec dec loope fidivl jb nop cmc push add dec test xlat push or in out lock pop cmp (bad) (bad) (bad) jg (bad) imul pop lahf xchg jno jbe mov aaa jae jno mov lret mov and int fwait popa insb add (bad) pop cmp outsl add (bad) (bad) (bad) lcall imull xor pop out arpl fcmovne sbb and push stos jne mov insl fcmovb pop fadd dec out les xchg movsl je or (bad) push ds jg cld push lods jmp or lock fildll xchg idiv cmp int3 sahf and pushf xlat (bad) jne jmp fistp adc sbb push inc jbe (bad) (bad) pop pop in (bad) scas mov (bad) xor aam xor (bad) (bad) lcall flds aam popf je add fdivrl jg ds lcall das es and jge ljmp adc and clc ja lahf (bad) or std jge lret (bad) mov call or loop (bad) movsb fcmovu fsubrl pop ret (bad) (bad) decl scas mov les pop mov add adc cmp sub jmp scas pop pop cli sub negl dec push int sub cld cmp std fcoms cld inc dec cmp in sub cmp std (bad) jmp sbb xor inc or cli cmpsb ljmp or fwait jns xchg stos lods addl add clc cltd mov clc mov fstpl xchg sahf mov inc pop and shrb sbb sbb pop sti (bad) ljmp loope mov or in mov xorl (bad) lcall decb pop mov mov insl and (bad) loop push lds jae (bad) (bad) jmp sub jb adc sahf dec pop mov icebp imul sbb push icebp dec mov js rcl decl addb mov bound mov inc (bad) (bad) (bad) push cmp jecxz xchg lahf mov jo mov scas mov mov mov jg js jg push out push xchg dec in cmpsl jae (bad) (bad) (bad) jg cmp outsl ret adc mov and push pop fidivr (bad) (bad) jg neg lcall (bad) (bad) (bad) (bad) jge dec inc sbb mov mov cmp mov out push aas push mov xchg jnp incl fnsave jns xor xlat adc adc jbe pop mov popf xchg (bad) (bad) (bad) decl sbb lock (bad) jnp jnp mov outsl (bad) mov ficompl jb es test (bad) (bad) (bad) stc mov cltd enter and inc adc lea xor xor inc mov mov lds jb dec (bad) xlat pusha rol mov ja add jne loopne repz call or jno (bad) xor and pop push in cld adc push std fdivr (bad) (bad) jmp add mov and push cs pop jne data16 (bad) push mov bound add xacquire in mov jl mov adc sbb cmc (bad) sbb add fcmove push cwtl out xchg movsb xchg inc dec test inc pop cmp dec loope xchg lret aas push (bad) (bad) (bad) lcall jae imul jle or dec outsb sub out mov (bad) (bad) (bad) ffreep out sbb daa lock subl cmp push aad mov setle dec sbb ljmp push adc lock pop sbb icebp dec inc gs in imul aas mov dec mov movsb jp in iret jp loopne (bad) (bad) ljmp mov sub pop mov sarb ljmp xorb lret sub (bad) decl push pop jb loope and xchg loope (bad) mov mov sub int add cli fmulp jmp lock (bad) (bad) (bad) mov dec adc dec iret out mov fadds xchg xor mov push clc cmp (bad) inc mov out (bad) lcall int int aam or in adc and sub ret icebp pushl and hlt pop jl lock lock stos sub xchg jl gs (bad) (bad) fist sbb mov cmpl movsb add pop xchg mov cmpsl jnp fstp dec cld pushl jecxz and sbb cmp pop outsl mov loop mov rolb fisubr push lcall sub inc notl int xchg movsb adc lahf xor mov adc mov and inc sar (bad) (bad) (bad) out lods insb add adc or fldenv mov mov imul clc movsl cmp (bad) mov dec cmpsb xchg ret leave mov roll push push addl pop sbb ret and (bad) mov mov pushl test ja push insb arpl (bad) sahf cmc in dec jnp jo jecxz cli cld dec ds lcall sbb ds sahf sub out jne loop (bad) (bad) jnp sbb fucomi jne sub frstpm(287 outsl bound push ds sbb or pushf inc add pusha (bad) mov push push add jmp das mov push dec cmp dec je add jno cmp dec lcall jecxz in clc daa gs or push (bad) xor push xchg cmpsb push and faddl fisttpll sub (bad) mov (bad) mov sub ss enter add inc adc (bad) (bad) (bad) (bad) fcmovu stos fcomp jl mov pop stc outsb arpl cs sbb xor cmp (bad) (bad) decl jl test jmp je lret addr16 push daa (bad) mov cmp cmp sbb ss (bad) (bad) call hlt aad pop xlat in jno mov and fmull sarb imul lock jmp scas xchg popf push dec mov jmp and xchg (bad) (bad) ljmp inc adc test pop (bad) xor push insl stos into in fdiv repnz in pop scas push inc mov (bad) (bad) (bad) (bad) in aad pop pop mov (bad) jmp xchg inc push (bad) notl jo or inc add xchg int3 mov nop (bad) popa repz add outsl (bad) repnz loop ret dec lock xchg jecxz pop insb pop ja sbb mov mov fnstsw and mov xor sub mov (bad) ljmp cmc mov inc mov aad add inc inc jno pushl js add jne cmp pop lock ret sbb ljmp (bad) test mov jl fsubrl push lahf ficompl mov mov lods push daa mov mov and sbb cmp pushl sbb push mov ljmp adc das add cmp (bad) sub dec (bad) (bad) (bad) incl sbb (bad) imul pushf add sub dec adcl cmp icebp inc pop icebp adc lcall mov addr16 int3 push rcrb xor and sub sbb mov andl sar dec push pop (bad) pop imul out outsl cltd inc xor sbb aaa aam dec lock and pop mov dec lret sti int iret and xor (bad) lcall dec mov (bad) fmulp (bad) repnz arpl fisttpl cmpsl cmpsb pop adc test mov xchg cltd loope cmp and xchg sarl jge fwait insl (bad) cmp (bad) (bad) (bad) jmp add xchg jbe (bad) cmp les sbb stos popa aas negb dec jne (bad) (bad) jmp insl sub data16 out mov movl out cld cmpsl (bad) lcall mov mov iret dec mov xor inc (bad) (bad) (bad) fldl loop mov mov leave call mov pusha faddl pop dec loope jle js stos aaa (bad) sub loopne (bad) fcomip repz out ljmp les mov add mov clc (bad) jmp jmp insl test insl sub lea (bad) test mov push lds sbb or or pushl sbb aam gs out call outsb je rorl ja shrb pushf movsl negl ret incl (bad) in outsl das pop js scas mov inc fistp mov dec mov leave dec push fidivl in add sar or cmp lds imul inc movsb subb in xor lods cli xchg mov adc (bad) mov fnstsw or aam lret and imul adc and lahf add out cli jmp loope or push cli test shll iret int fbld hlt jle xor clc cmpsb cmp push ljmp (bad) repnz lock cltd and xchg sbb stc dec fs mov out fs pushf xchg mov clc sub addl jbe std sahf shlb insb mov jg (bad) jae cwtl loope movsb or push push jo inc stos outsl dec xor cmp and (bad) (bad) (bad) clc jns inc push ret adc pop cmc aad testb insl pop sub mov loopne daa mov cmp add rcrl fidivr sar fwait and cs es in mov idiv imul cmp or push imul jl xchg add (bad) call out dec insb mov test mov mov fldenv mov mov pop icebp sub icebp das xchg push push loop in pop pop js jmp (bad) (bad) incl mov or and sbb push jb (bad) dec (bad) dec jae xchg imul (bad) insl mov (bad) jmp cmp mov push (bad) call pusha outsl imul (bad) mov dec pop ret sbb imul std (bad) (bad) jg mov push xchg add fcompp and mov sti mov xchg (bad) sub (bad) incl iret xor jo sub (bad) (bad) call inc push in outsl fwait jb and xor mov xchg sbb push pop fadd (bad) mov es push cli jmp and mov cli jns fcmove (bad) cmpsb pop fs push xor push pop and jmp sti sbb loopne daa jbe lock push (bad) (bad) fistp sub mov imul inc xchg cmp ret mov mov jl cmpsb ljmp aam cmp je leave insl arpl push push xchg xor (bad) (bad) (bad) (bad) jle inc mov pusha add nop jp sbb inc ds xlat mov rcrl cmp cli decl add and stc inc pushf leave xchg nop cli pop mov xor xor push adc mov cld mov mov mov jbe pop out movsb icebp lcall rolb mov mov in push ja movsl inc sti pop adc je jmp mov cmp (bad) decl sub xchg dec xchg or jge xchg pop xor and aaa (bad) sub enter mov scas mov pop jmp das or jg mov psllw lods (bad) (bad) jbe popa imul mov adc push cmpsb lock or test jecxz sbb mov dec xor (bad) (bad) (bad) jg (bad) sub mov mov pop fdecstp adc or fistpl xor arpl cmp repz add xor pop ja test loop ret js mov xor (bad) out mov mov adc ror nop scas loop sbb sbb dec icebp sub mov pop push add pop push std xchg sbb ja dec adc repnz mov xor (bad) das sar xor pushf adcl stos lret out repnz fbstp adc dec jnp (bad) (bad) lcall fidiv xlat loop mov clc sahf sti sti sub push dec mov loope lods (bad) jg sbbb inc xor sti mov cld dec mov mov fisttp or adc shl leave les int and jnp (bad) (bad) lcall fldcw sub add enter enter icebp ja jo ds push (bad) lock inc (bad) sub or push mov mov sub cli (bad) fild mull xchg cmp mov pop sub dec clc lods jecxz (bad) incl (bad) pop mov lock (bad) subl in ds ljmp dec mov outsb adc cwtl and sbb mov pop (bad) ljmp pop aam cmp adc adc push cmc rcr mov es std test call sub jnp aam aam mov adc ljmp (bad) (bad) xchg sub dec xor test (bad) (bad) (bad) push popa mov mov mov mov (bad) xchg (bad) and outsb mov mov test inc xchg popf rclb adc (bad) cmp les in xor ljmp add mov cmp jb push sub xor negb push xor sbb subl push (bad) decl jecxz mov jg loope imul inc sub leave (bad) (bad) mov xchg jnp inc jo shrb dec ds mul ljmp clc mov adc int3 lock dec rclb cmpsb scas adc mov ret ja (bad) mov jmp mov cmp nop add fisubl and add scas popf movsl cltd fcmovu insb fdivp (bad) fcomi or inc add lods jnp lahf cmpl pop icebp cmpsl loop ret outsl push fyl2xp1 mov sub sub out xchg xchg (bad) (bad) (bad) (bad) (bad) mov pop xchg sub sub popf push outsl in xor aas call aas lock loopne mov shr mov mov mov jns sti inc int3 adc jbe push arpl push sbb (bad) call movsl cmp dec stc push mov mov icebp mov idiv mov addl bound hlt pop or pop pop (bad) (bad) call icebp jb jl lahf les addr16 into sar and fbstp clc pop inc dec jp jno sub and adc out rorb insb (bad) sbb inc aad sbbl (bad) icebp popf test mov or (bad) (bad) incl mov pop lret lcall js in addr16 push push cmp jmp lret testb (bad) sub (bad) pushl jbe movsl (bad) jecxz jg and sbb adc mov iret and mov sbb ss movsb mov (bad) incl and jl jmp add ja enter in outsl or lods lods mov inc test shl or dec or xor pop mov (bad) (bad) pushl mov cmc jbe in out mov jo adc sti push cmc jge ja xor add sahf ljmp (bad) fdivr push add std aaa les dec jecxz (bad) (bad) (bad) jmp daa lea sbb repnz nop cmp jnp cmp pop sbb sbb std (bad) (bad) jl sarb mov pop cmp cmp xchg clc out xchg adc inc xchg out mov jae jno adc add adc shlb sar pushl mov out mov push xor movsl nop mov stos cmp jg mov (bad) mov loopne,pt nop clc sub in mov sar (bad) jecxz scas ret sbb lock repz mov jg hlt pop mov or imul dec and (bad) leave daa inc jp pop lods dec (bad) dec adc fnstsw aad push lret (bad) cmpsb mov decl loopne (bad) lods inc jecxz (bad) pop sbb pop adc lcall jecxz out outsl stos js into xor add out pushf cmpsl pop lods sbb push push loop (bad) jg (bad) mov mov fwait push lock test push sbb pop sub mov inc adc adc scas xor and das shrb test xor outsl loop and ja les xor add pusha inc adc fbstp and jg jns mov pop or mov jmp lds lea jne inc mov repnz ljmp mov pop pop cli std dec mov das push mov push adc push pushl mov idiv sbb and xchg jmp into aam sub sbb and mov sub repnz out dec xchg shrb mov ret lock je lcall aaa xchg fistp imul test adc mov pop cli ja push mov adc js add add test icebp enter sub xor fucomi xchg clc jle clc (bad) (bad) push push mov or insb mov lods mov decb jecxz fdivrp pop aaa sbb aam fimul ret imul rorl push ss mov loope les (bad) call clc ljmp in xor xchg ret loop jmp mov sar repnz mov ffreep iret adc (bad) (bad) mov fldenv jno jmp push mov xchg mov decl jns in aas mov xor sbb mov mov xor mov push pushl lds or push pop in xchg in mov imul scas mov adc push out lock adc je scas clc dec adc outsb mov lods (bad) mov mov fsubrp fist loopne ljmp and lock xor and jnp mov add icebp scas push sbb gs adc add insl pop xor xor std (bad) (bad) (bad) incl mov jno sbbl data16 (bad) fistpll pop call pop mov shrb mov movsb jb push jg outsl xor fidivr js repz ror ljmp mov inc xor (bad) pop dec mov out bound gs xlat push cltd sti pop js dec (bad) (bad) lcall (bad) loop lret rorb or pop add mov popa cwtl sub call mov aas mov cmpsl loop mov push call incl adc loopne mov cmp movsl std lods inc fisubl repnz fdivl push fcomip (bad) pushl cmpsb and or in lock cmp bound jmp inc std incl mov sbb (bad) add (bad) (bad) in add cmp imul mov iret pushf push popf testb sub aam stos (bad) in xchg push clc lock (bad) lcall lods test fcmovb push cmpsl xor dec mov dec push add cmp jno frstor pop mov mov (bad) arpl es mov sbb (bad) ss sbb pop outsb sbb adc inc add (bad) pushl in xor clc ret dec (bad) aas fsts mov jmp pop mov xchg (bad) xchg and add jb inc mov out mov pop das pop xchg aaa xor mov mov mov cli stos adc (bad) mov addl inc fxch in (bad) ja (bad) jmp mov adc arpl sub outsb out mov xor jg int rcl sub (bad) lcall mov popa mov pushf aam cld decl nop sarb sbb lea or add mov std mov jp in popf lods ljmp fnop fildl out insl (bad) (bad) jg loopne ret (bad) lahf clc and in mov ret lock inc mov clc jae inc pop xlat cld lcall cwtl cmp ja mov and insl int mov movsb jo sbb push (bad) lcall add jl mov mov cmp jl mov (bad) (bad) (bad) js aad lcall push pop mov xorb jnp lret pop cmp mov (bad) (bad) (bad) (bad) imul pop mov shl (bad) dec hlt ja out sti test (bad) lcall icebp or xlat pop gs mov ljmp gs cwtl dec (bad) (bad) jle stc popa pop pop and enter ljmp daa mov dec sub mov jg rorb fucom sti or adc ljmp ss test setle (bad) xor jecxz push loop sti ljmp sub xchg or (bad) ficoml pop pop xchg push dec (bad) jne insl mov xor add and push jp mov pop (bad) (bad) out add pop sbb mov xchg pop ss jge fld (bad) (bad) (bad) pushl mov sub and les add in pop jl js mov ja scas popf outsb or (bad) cmp iret stos push sti xor (bad) out xor int3 add (bad) lcall sbb xor jl loopne (bad) decl (bad) ja popa adcl mov dec mov lods or (bad) (bad) (bad) lcall mov xchg (bad) lea ret loope out (bad) lret stos dec sbb (bad) (bad) (bad) clc pop pop aam (bad) cmp push mov les inc fstpl mov cmpb inc push xor clc cmp test push test mov push loope enter notl pop (bad) (bad) pushl sbb clc (bad) nop je mov or sub fistpl add mov (bad) (bad) (bad) pushl outsb loope (bad) out outsb sub lret sbb stc insl addr16 mov outsl in push les (bad) mov mov lea lods mov mov int ficom out (bad) leave pop add pop js or fldt ss inc sbb and sub add in adc ds icebp negl (bad) incl ss pop mov xchg sti push cld sbb aam popl aad into leave cmpsl mov (bad) dec (bad) out dec std mov adcb sub ss fcompl loopne pop ret sti and ljmp adc dec das outsb lcall dec xor and (bad) (bad) pushl and repnz xchg push pop cmpsb ds ja cmpl pop push lock (bad) decl in mov push xchg sbb mov or add (bad) mov pop mov rcrl fwait outsl out mov insb jnp cmpsl or (bad) lcall dec cmp xchg inc mov aaa pop push sbb gs add and pusha inc mov and push outsb shlb pushl arpl xchg pop in push pop addb jle cmpsl stos jl nop jnp (bad) (bad) ljmp insb fdivrs in pop leave or es inc out add nopl inc pop movsb (bad) sbb jg call daa mov mov outsb (bad) test mov inc lock jne cld fistpll lock sbb pushf cmpsl repz divb jl xlat sub in es add mov scas scas and cmovno in mov sbb push sbb bound jmp sbb popf ss fildl push std mov sar and pop cli cli scas fidivl xor xchg jg lret jno jecxz fdivp xor mov mov ljmp jne xchg imul sbb xchg iret dec sub sub test icebp ret loopne ret (bad) adc call mov jno push insb lret jo int3 mov lret fild sub movsl mov xchg dec pop jo imul xchg pop or xchg ret fidivrl idiv (bad) in sbb das (bad) cmpsb aad sub jns fbld imul stos (bad) fisttpll rol jno lcall or cmp xchg mov adc pop fcomp (bad) (bad) lcall js (bad) sbb push mov fwait je xor push daa mov sub xor mov push (bad) aas sub movsl std insb jb jo mov outsl lods pusha lods jbe je jb jmp loop cltd xor xchg push sar cli aas adc cmp punpcklbw fbstp push rep movsb mov xchg pop lock sub and cld add push adc stos lods dec aam das and int (bad) jg cmp test adc clc (bad) pushl aad addr16 sbb out adc xchg (bad) or pop js pushl dec dec pushf jg xchg rcll cli call push lret (bad) pushl andl sub ja mov lock in and mov pop fldcw jp and f2xm1 sbb sbb (bad) jg sub stc pop lret or mov push cmp mov cwtl loope sbb cmp jle ljmp clc outsb lahf gs ja je ljmp out pop sbb (bad) sar (bad) pushl lea cli dec das inc xchg push imul (bad) std (bad) mov sub xchg add mov daa (bad) jle mov loopne mov (bad) cmp fldl inc jnp test sub loope xor movsb lcall out cmp movsb iret fist mov ficoml leave adc das adc xor imul arpl cmc scas adc push push mov mov cs aas add dec fst xchg int fmull (bad) (bad) ljmp ret sub repz and ret sub adc jmp adc out or stos movsb jg xchg dec pop jle imul xchg push loope fnop incl sbb mov insb lcall or sub pop sub (bad) jg cmpsb out or fwait sarb decb jmp push mov (bad) lcall jp mov jl imul test sub mov (bad) out adc sbb sub jle shrb je push daa mov ret ja in addr16 ret cli fnop ss jl adc nop push sbb scas cmp (bad) pushl aas (bad) pop imul loope fwait decb mov call cmp jle arpl jg add mov mov (bad) dec icebp repz mov jg rcrb push icebp out ret js loopne (bad) (bad) decl dec test sub loope js insl outsb cld ret adc test lcall (bad) pop inc lret lcall mov jge movsl loope cld (bad) (bad) mov inc mov ss in aaa fisubl stos mov xor push fdivs xor push ds mov pop or rcll lods push cmp cmp loope outsl insb ret jmp mov pop push test test into cmp pop ret test loope push push lock adc stos mov (bad) pop add add lods sbb popf add les fnstenv dec fstps repz stc jbe jle push ror push mov pop xlat loop pop (bad) pop xorl iret incl rcr or lcall ds negb inc out push and scas jecxz mov or dec sahf sub pushl xchg mov push cmp pop fisttpl insb pop sbb adc xlat leave mov outsl clc jg arpl sub call rclb icebp decl dec sbb outsb xchg incb fidivrl (bad) ja jp (bad) (bad) lcall nop push call outsb out out lcall stos sub repz mov mov pop loope fwait mov jge pop (bad) xchg and inc insl pop pop (bad) les adc (bad) (bad) (bad) ljmp loope add ret movsl lods ret jbe fcompl xor or xchg push loopne lret push hlt lahf (bad) cli outsb mov test (bad) (bad) ja shll sbb sub scas outsb or enter decl jp data16 xor je mov mov imul nop fistp inc into jecxz lea push aaa out add and mov dec adc push dec mov cmpsl jl loopne mov fcomi mov fsubrl or frstor xchg in fwait mov cld (bad) (bad) (bad) (bad) fstps cmpsl in ljmp lret mov stos mov xor mov lret jmp out movl ret cli stos (bad) fbld pop fimul pop bound inc lret ljmp call pushf lahf and stc cmp and stc std into out push (bad) lcall mov or rorb fsts jl sub jmp (bad) (bad) out hlt repz fsub (bad) fist jne or (bad) stos inc loop sahf dec cmp dec xchg outsl or (bad) (bad) (bad) ljmp bound inc and cltd mov mov push jg sub mov and (bad) (bad) (bad) jns and inc or add out repnz mov popa pop cmpsl (bad) test pop sub add (bad) call ja into int3 fs sbb xlat pop out (bad) (bad) icebp jg hlt mov pop hlt or or popl pushf (bad) cmp jb (bad) mov jg or push ja ret add pop ss lods in pop lock jmp mov into dec outsb jne pushw fidivl fiaddl mov xchg enter mov xchg idivb outsl (bad) (bad) call cmp sbb scas sub sub inc in repz xor iret jle aas incl data16 mov mov imul push call adc or call pushf jae dec lahf sub mov ret (bad) (bad) (bad) cli repz lcall insb jmp loopne jge (bad) push (bad) (bad) (bad) jg push sub das push pop outsb enter in in inc jno mov hlt ror adc enter call repnz cltd minps and sbb jno fsubrp out cmp pop or (bad) jmp mov lahf push mov inc sbb sar cld call lock iret pop in mov in sub dec lods pop xchg (bad) sub (bad) (bad) ljmp inc loopne ss jns mov ret push rorb mov mov inc sbb jno push sbbl adc jl jge dec jo jg,pn ljmp lock sub popf cmp outsl cmpsl leave sahf push call pop imul loope incl cmp mov cs xchg jno and sub mov fmul pop dec (bad) (bad) jp push push loope or cmp xor mov test aad aam adc cmp mov inc pop jnp pop (bad) out cld jnp int3 mov call mov xchg lods jo mov push or sub (bad) pushl icebp cmpb jmp clc test add jp mov js push pop outsb pushl xchg lret push mov or lret stos jbe adc call push xchg mov inc cli insl call sbb push mov fwait inc clc jns cmp (bad) mov imul std mov cmp sbb jnp mov mov sbb pop pop mov or xor push xchg bnd xor lret out xchg fs icebp lea (bad) (bad) jmp sbb fldt cmp push cltd lret mov and call xor dec (bad) fisttp pop mov sub xor lds test aas sub adc cwtl nop inc ljmp fsub mov cwtl sbb lret adc and push movsl movsb js mov fist jno test sub xor pushl test add lahf add pop data16 cld cmp jmp mov mov dec fcomip (bad) lcall fwait pop stos pmaxub sbb jg in mov fistp in fwait pop (bad) pushl mov fidiv xor ss lods (bad) fs xrelease leave stc pop nop inc scas cmp inc loope xor inc ss (bad) (bad) out data16 sarl mov add add mov (bad) (bad) fucomp push pop sbb fsubr xchg cmp pop sbb enter (bad) mov jbe outsb mov sub jnp outsb in sbb test in xor inc jg mov pop cmc sub (bad) cmp (bad) (bad) call insl jle pop imul jmp inc xchg or or movsl aad lock (bad) jg xor mov pop loope mov lcall (bad) (bad) (bad) push sub inc js adc jle pusha pushf xchg or or xor push (bad) push adc loopne (bad) jg jl clc outsl outsl test lahf arpl les ljmp sbb (bad) mov sbb loope in int3 cmp repz pop data16 mov cmpsl call (bad) jmp cmp scas lods sahf lahf xlat jae cmp mov (bad) (bad) jg adc mov xchg push mov lods ds add pop and daa scas and (bad) js or ss scas xor clc lock lds decl ret idivl jmp hlt jg or sbb (bad) ljmp popa mov xor mov sub (bad) inc mov (bad) (bad) fbstp in pop icebp pop (bad) pop adc cwtd mov sbb (bad) (bad) (bad) flds lods das sub or jo aaa xor xchg mov add jl xchg push xchg incb (bad) imul (bad) lcall mov sahf inc mov push xchg jae sbb jge imul jbe (bad) call ja imul mov dec rcll aas mov scas icebp es pop rcrb pusha sarl push lock mov add (bad) mov cmp cmp sbb pandn pop std cmp dec push dec je sub xchg mov push mov jecxz imul orb dec jl ds jne fcoml inc (bad) repz ja (bad) sbb mov lahf mov add mov sbb lcall sbb mov stc xor pop xchg mov insl mov lcall adc lahf and push mov or or mov inc mov les pop jo jno dec sub out cli (bad) jmp push fwait aam dec fdivl fbstp fdivrl (bad) fbstp (bad) icebp insl and sbb fnstsw arpl xchg push lret and daa test or cmp in sarb add into cmp cmp pop cmp inc test lret jg lcall push fistpll inc adc bound fsub mov xchg pop mov (bad) mov push fiadd mov xchg mov (bad) loopne push fs (bad) (bad) jg cld dec cmpsl outsl test xchg in xlat adc sub cwtl pusha fbstp jne mov pop (bad) (bad) fnop pusha or setns inc js sarl dec adc xchg mov scas js pushf dec lds fs add clc xor push xor jmp xchg lock cmp loopne leave push ds leave pop cmpsl push icebp ljmp fisubr insb div cmp adc pop clc (bad) ljmp mov hlt fs xchg stc mov or mov add and and cli pushf xchg (bad) sbb in cmc loop mov xchg je (bad) stos sahf and inc xlat movsb aam (bad) (bad) (bad) (bad) fucomip push stos lds and mov and dec fmull jge (bad) lahf or call (bad) (bad) (bad) decl addr16 fadds movsl bound dec push dec enter mov (bad) (bad) (bad) (bad) ds lcall xchg loope mov loopne add mov dec icebp pand test sarl mov mov or hlt adc je (bad) fcomip and js in xchg and jl fcmovne mov xchg xchg mov clc xor jmp iret jb pop cmc (bad) sub incl xchg in (bad) clc fwait dec clc popa mov xchg xchg xor pop pop stos pop inc xor inc shll sete es xchg xor out das (bad) fnsave das mov lahf or clc stos inc xlat and das mov mov insb fs mov push nop rcll dec ret cld adc idivb inc out mov mov outsl addr16 cli (bad) jg sahf loope xchg cmp mov (bad) cmp loop jbe sub cmp flds decb adc (bad) out clc std mov xor test dec test fsubp sbb sub je mov ja das cli mov push xchg je in movsl pop sbb pop repnz hlt stos (bad) jmp jno sub pop not push lods push xchg inc pusha (bad) or fidivrl (bad) (bad) ljmp fiaddl dec sbb add pop shr dec scas mov (bad) jne dec or lcall sub pop sub cmpsb or movsb cmp jb push push add dec (bad) (bad) mov inc aas addr16 pop mov ret int dec lcall rorl loopne mov jb push jo add ljmp clc incl adc jecxz les jle cld sbb (bad) (bad) lcall and (bad) (bad) adc mov jns dec or lret aad or and sti cmp std pushf loop or je xchg push or cmp dec mov in outsb (bad) mov xor sbbb js jb (bad) fbstp and cmpsb aam cld sub pop in mov jmp sbb iret outsl imul into out test mov cmp add ljmp in icebp add (bad) jle mov je jae mov or js dec mov adc cwtl xor sub ljmp push leave inc (bad) (bad) mov sub xchg sub jo std les dec sub hlt scas ficompl fisttpl aas gs mov add sub xlat push mov adc xor das ja ficoml in jns cmp sub mov bound sbb or push cwtl shll xchg (bad) (bad) (bad) lcall int3 sbb andl lods insb jo into loope fs inc xchg (bad) (bad) (bad) (bad) jge stc insl std jle es scas mov ds mov out jne cld daa jle das and mov insb xchg xor xor sub psubsw add jmp add pushl pop adc shll cmp scas lea pop mov pop sahf cmp adc and fadd add and (bad) sarb stos xlat xchg in pop aaa xorl lods hlt clc (bad) pushl mov adc sub es push and mov icebp sahf sub mov mulb push clc imul insl imul call cmc (bad) decl xchg outsb jb dec sarb lods mov mov adc cld (bad) jg cmc in xchg loopne dec movsl dec rcr in jmp in dec inc inc jne cmc (bad) jg pop loopne xor lcall mov mov fdivp push (bad) ljmp dec and (bad) mov dec mov rcr (bad) (bad) rolb cld imul clc and cmp or xchg adc lock (bad) pushl ja inc mov pushf (bad) fldenv rclb ds out sub mov cli pushl out pop lds rorb icebp in in scas xchg and or std (bad) ljmp dec test add stc leave adc sti inc xchg (bad) (bad) cmp stos in sub mov fwait imul sbb (bad) jg gs not es push jmp fildll (bad) (bad) call sahf sarl outsl mov jbe loope (bad) idiv mov cmc mov or scas xlat ficomp cld or sbb jl add mov sbb outsb dec jmp (bad) aaa jle jl (bad) (bad) (bad) (bad) in in jl sar sbb iret test cli push mov iret mov lret ret or cli daa mov movsb jg push sub dec into imul xchg (bad) (bad) ljmp aad pop movsb pop clc cmpsb push and fldcw inc loop dec fldenv sbb xchg ss cmpsb inc xchg lods xor mov insb notl cld pop mov (bad) stos sbb test (bad) jmp lcall lds fdivl popl push fcoml in cmpsl mov mov pop (bad) int3 push cli frstor pop push mov push pop test aas push frstor imul ss push lcall dec arpl mov (bad) pushl rcrb mov push fwait mov fnop jg pop mov mov push sbb dec insl jne aam xchg push or sub std pop dec push mov div clc arpl pop mov fwait mov push push mov clc in out leave das cmpsb jae sub sbb mov adc sbb fdivr (bad) decl adc sbb sahf xor scas imulb lods jl arpl (bad) (bad) lcall test pop (bad) push insl mov fs jno push stos pusha test dec loope push xor std ljmp out lods lahf stos in clc fwait repz cmp adc fs xchg jge icebp jae ds clc dec lock mov (bad) fidivl (bad) (bad) cmp jne xchg mov adc and lret or popl int3 mov inc add pushl cld fs mov (bad) (bad) push jg inc bound jecxz push lock scas sbb add push and push mov insl fsubrs hlt mov adc xor jmp (bad) repnz xor decl xchg fstl (bad) rorl xor (bad) (bad) mov and imul bound xchg lea mov jo xchg jg jecxz (bad) push js xor aad pop cs jne dec pushf pushf fidivl clc outsl mov mov aas sbb push sbb and cmpsl clc outsb in fildll cmp fmuls jg (bad) ljmp mov js shrl cmp mov jl mov inc push xchg xchg in cmp mov sub sbb and outsl stos mov xchg xor shrb jnp cmp mov test push rcrb mov or icebp (bad) jmp dec mov stos (bad) (bad) aam add push push enter imul ljmp iret xlat sub (bad) jne pop popa shrl test pop mov rclb mov out add adc addb push ja push pop lcall scas mov lret call loope outsb into lret outsb gs cmc aas dec push or pop mov (bad) iret sbb (bad) call int jecxz xchg xchg jle out cmp (bad) in int3 dec pop (bad) mov (bad) adc ret scas es ss mov (bad) sbb popf call hlt lea mov xchg imulb ss scas lods cmp mov and inc loopne (bad) negb xor add pop mov out cmp (bad) fbld mov aaa shr sub jl jne fcmovnu pop dec out int xor mov pop dec jle into jle mov (bad) sbb jecxz lahf aas sar call pand dec icebp lea loope jge pop sbb (bad) (bad) jg xchg xor and and fmull pop repz jne lret (bad) sub sar (bad) jmp and into aas jae mov mov xchg xlat out mov lahf loopne jg inc mov dec push aaa lds std (bad) (bad) ljmp mov sbb imul ret std mov mov adc adc cmc lcall push scas dec jecxz adc loopne fild cmp add (bad) pop xchg fistl pop xchg mov inc pop out push add push push outsb jo mov insb (bad) mov (bad) (bad) pop adc lock jg aaa pop jb inc cmpsb mov adc movsb or xchg mov xchg sub inc push ljmp and scas pop lret bound cld adc das (bad) ljmp (bad) jle clc ja lods (bad) je xor sub pushl pop add and xchg xor shrl dec xchg shlb mov mov mov addr16 jge push cmp sarb and inc out vcvtpd2dq test insl pop or push (bad) pushw lods outsb aam or xor test bnd dec add in ljmp inc out jg lahf xorl adc ret data16 lcall (bad) mov pop fwait cmp insl xor mov lods addr16 ljmp (bad) out ss mov scas pop jg jl mov adc mov (bad) (bad) jg cmp push pop leave jg ss (bad) jle or sbb pusha push stos dec daa xchg pop and jecxz push ret xor insl adc dec mov lcall mov sbb nop inc rorb js out xor xchg push addr16 std decl ja fidivr icebp sbb push sub dec and inc call insl out out (bad) fldl mov aas add clc fimul scas or mov sub sti push jnp out aaa mov add call dec scas in jl jnp xor (bad) jl in push or addl sub (bad) jle pop idiv decl push inc inc dec das jno add mov adc sbb (bad) call loop mov fisttp mov (bad) mov mov mov mov in jle es nop cltd mov jg inc clc scas (bad) ss in pop push push (bad) jg std lock lods cmpsb mov ljmp in lods sub movsb nop ja (bad) out xorb adc ljmp adc xchg movsl dec or or in sarb in jae add ljmp jae fisubl scas popf scas jmp in subl call and fild loope movq inc cmpsb jmp inc adc ffree (bad) (bad) (bad) jmp push inc adc sahf jg test scas sbb pop aad mov pop (bad) repnz mov xchg scas xor or popfw in mov clc xchg (bad) arpl incl cld dec inc adc stos mov dec ja mov (bad) frstor imul pusha cmpsl xchg jno dec mov out daa sbbl add frstor mov clc repz ds shlb pop pop pop shlb push adc xchg cs push sbb add (bad) (bad) (bad) ljmp xor dec dec call bound das pop es bnd out cmc jg cmc ds (bad) fcomip incl repnz in popf mov mov mov loop mov ret jmp pop jno pop push xlat pop pop xchg popa mov fs adc jg in pop pop mov jnp orb clc fsincos add leave les xorl xchg dec imul sahf pop lds mov lret cmpsl mov insb cmp out cli (bad) fdivrl loope mov sbb push (bad) (bad) mov aad (bad) incl ljmp and fdivs rolb xor mov cmp lcall cli dec xchg fidivl das (bad) jmp sbb loop sub lret jo mov mov cmpl add pop cmc push dec pop dec stos das jp xchg neg dec neg inc cld push push mov pop xor mov lea xor cs stos (bad) pushl sub and stos jbe (bad) notl scas pushl jo and hlt fist lcall and in int3 lea fcmovne bound mov add cmp or mov mov pop inc pop mov out loopne adc pop pop jmp mov sahf fstps xchg (bad) call mov xchg pop out mov fimul jg jmp (bad) (bad) (bad) lcall mov (bad) lret out cmp and cmp les shr cli (bad) (bad) call (bad) mov pop jmp sub pop imul out pop (bad) dec mov (bad) (bad) mov gs adc pop mov iret jae add insb cld and jmp clc cmp idiv (bad) jg es fcmovne (bad) cmpsl pop imul shl inc mov xchg test jb (bad) sbb jns ret imul stos imul cmc sub mov sub insl (bad) mov sbb repz cmpsl push inc ljmp cmp loope adc ficomp (bad) mov pop cmp fdivr cld push (bad) jmp lret xchg bound mov sub jg loop std idivb imul mov mov pop cmp push dec loope lods cli (bad) (bad) mov hlt cmp sub dec sbb outsl push pop mov or (bad) mov lahf lea push aam mov out int cmp (bad) ljmp gs xchg lret mov jle push jns aam leave and fisttp ds fwait add (bad) decl lods mov sub jge sbb jl addr16 out iret mov icebp mov outsl mov sub aad inc lcall rol pop inc pop and mov sub inc or mov imul pusha out push movsb arpl mov mov push (bad) (bad) mov ret mov movsl (bad) mov gs mov js jns dec test (bad) jmp jp lds int clc out push les pop push sub pop movsl mov dec xlat push icebp (bad) loop stc inc (bad) fcomip jmp loope cmp aam jno lahf lock (bad) js ret negl loopne lret push (bad) (bad) (bad) pushl popf dec pmuludq mov adc add fwait pop adc lea push add cmpsb sub clc ja das ret mov ljmp jo imul adc test dec scas cmp adc mov push mov cld incl lods push pop outsb mov aas xchg gs xor pop push xlat jg lock sub adc or out jecxz inc mov imul (bad) pop mov adc mov jb lods movsl jo inc pop test inc add or inc jge jecxz cmp xlat jle lahf sbb pop cmc sbb jne mov push sahf mov js (bad) sub fbld mov lods addb jecxz mov or lock cmc fwait (bad) fidiv mov addl cmp xorl mov fcomp arpl pushf pushf push push xor scas (bad) (bad) ljmp sarb jecxz pop add mov and int call movsl (bad) push (bad) aas sar out cltd mov xchg dec sub push mov icebp xor push xchg mov scas sbb jmp (bad) mov sbb ja out clc ljmp push jmp cmpb jge mov icebp cmpsb cwtl mov mov push dec (bad) sub roll xchg and push add nop inc jo (bad) mov (bad) lret scas cmp daa test xchg lock mov (bad) int dec mov mov test imul and or inc xchg mov in aas sbb jl mov in imul (bad) (bad) call jp lahf sbb scas loop mov sbb fstpt loop mov idivl sub (bad) in hlt (bad) adc loop out scas scas pop cmpsb (bad) (bad) call popa and xor bswap fmuls fidivl add daa sbb (bad) (bad) (bad) pushl leave sub lret cmc cmp jb cmc dec int mov jecxz das pop lock mov dec insl cmpsl out mov mov inc (bad) (bad) decl leave sbb xor xor lcall jno test lods (bad) mov adc dec inc daa jp xor loopne mov sub fwait (bad) (bad) (bad) sti int lret dec ss push push (bad) xchg add hlt fdivl sbb jns dec std (bad) inc cmp (bad) lcall idivb mov mov jg jle add imul inc cltd sub mov mov ficomp mov jmp (bad) jg clc add ss in out cmpsl cmp inc arpl sbb (bad) (bad) call lret (bad) cmpsb nop xchg adc sbb mov jae mov imul push leave mov mov rcr dec jnp cmp out mov incl aad and imul mov out push inc dec insb push add or jnp sbb xor and (bad) jbe or das jae xchg push iret xor pop shll cs jp push lahf js bnd loopne fisubr cmp gs (bad) jg hlt leave or mov dec or push shrb lods (bad) call jp mov faddl dec in outsb test nop add (bad) (bad) jmp mov lods popa jl dec pop mov mov mov mov mov out lods aad clc int aaa sbb adc aaa push pop movsl ja adc pop (bad) and mov vmread adc shll sti pop std (bad) (bad) incl in test cmpsb dec push or sbb adc push (bad) lods lea add mov ja shr pop outsl clc (bad) cli mov mov add jb push loopne fwait insb cld (bad) fcomps sub and lods arpl sub (bad) (bad) jmp jmp push movsl mov lret rcll test jb xorl (bad) jg movsl out int3 aaa lahf adc fwait outsl outsb mov lcall mov sbb jle dec fimull and in sbb pushl jne xor es adc fnstenv iret xchg xor fcomip call aaa add sti mov je in test (bad) dec xlat inc mov loope popf gs mov xlat ret loope enter (bad) jl (bad) inc (bad) cli insl std les lcall mov inc adc mov loop mov out mov lcall mov jnp dec arpl mov mov sbb mov (bad) mov xchg sub push fsts pop js loop xchg loop or mov push dec mov arpl or lds xor xor mov inc push jge jecxz test (bad) (bad) decl mov jno push sub rcrb testl xor (bad) mov xchg frstor jl mov jecxz scas pop mov aam pop cld ss (bad) (bad) (bad) ljmp das out mov test jno and xchg iret int3 lret fadds lods jl (bad) ljmp cld jecxz sbb ret sti mov jno jmp pushf xlat nop lds (bad) fild pop jb push push das repz mov and (bad) (bad) fildl cmp jns clc inc loope xchg es xchg mov lods xchg fisttpll std (bad) decl mov push ffree add loope test jmp (bad) jg call xchg andl pop pop mov adc (bad) jmp inc addr16 mov js mov jbe fmulp pop popf mov adc sub mov (bad) cmp inc or add cld dec mov (bad) xor ljmp (bad) sbb bound int3 scas mov lret (bad) jo into pop in cli (bad) (bad) mov aaa sarl es icebp popf xchg pushf push fcompl js inc aam out cwtl ret call mov jp fwait lock pop sub aas fisubrl ror fbstp push sbb dec lock sti xor (bad) das add inc imul adc jnp (bad) and (bad) ljmp fidivl mov outsb dec pop and cmpsl arpl stc mov jg addr16 xchg ljmp in lret xorl sub xor sbb nop into jbe sbb fsub les in cmp fsub sub bound repz frstor mov das js loop jnp nop lods dec push push pop mov or fs push imul dec lcall inc movsb repnz mov test (bad) mov iret shll xchg das es ja and push (bad) cwtl inc inc xchg sbb scas es (bad) rcrl xlat jne pop rcrl inc xchg paddd shrb stos pop les pop cld outsl inc adc pop cmp leave push add fwait scas clc (bad) mov mov ja (bad) ljmp lahf jge movsl fcmovu jmp fisubrl cmpsb xchg insl loop fs lods xchg or fcmovnb ljmp sbb mov jbe stc (bad) fild xchg scas (bad) out mov mov insb (bad) mov inc imul fcompl inc ja loopne jecxz addr16 inc xor addr16 leave and xchg imul mov push push sbb jmp pusha mov (bad) cmpsl or out sub xchg fstpl mov pop cld cmpsb loopne (bad) hlt lea push stos (bad) out cmp xor clc inc or mov js call repz sub out adc js dec (bad) cld push aaa pop cli pop fidivr (bad) sbb adc push mov add and mov mov mov xchg (bad) sub (bad) jmp push xchg cmp and mov sti idiv mov int3 cmp (bad) aam jge sti jle mov (bad) (bad) lcall mov neg ljmp mov test sbb add sbb pushf cli pop shll pop imul mov test js mov (bad) (bad) (bad) (bad) out mov mov mov jecxz sbb loopne fidivrl inc (bad) cmc mov std (bad) jmp mov fcmovne popa mov dec mov in out mov les call loopne stc cs call mov (bad) and ret jne or inc scas jo mov (bad) cmpsl xchg das or rorl ljmp or jl mov and int ss fistpll or ficomp mov mov or loop stc mov sub ret (bad) jg lcall push and xchg (bad) (bad) dec (bad) mov xorl mov enter imul add orl (bad) insb pop sub add ret sbb sub (bad) decl mov lock pop or and arpl pop fildll mov call std loope adc sub fsubrl jg sub js sbb (bad) lret loopne cltd add xchg pop fs into or fnstsw les scas lcall xor inc and das xchg leave fwait popa fstpl popf cmp dec fistpll (bad) ja sub idiv push stos add js xlat mov dec decl mov jecxz mov mov mov adc sti mov (bad) scas mov ret pop adc or fisttp loopne mov sar pop inc jo (bad) dec dec int mov nop lea gs jb out inc movsb add jecxz (bad) (bad) mov sarl jmp lock mov fdivr lock xchg cmp inc (bad) ljmp mov pop fnsave dec sbbb pop push dec pop loop,pn loop repnz lcall sub (bad) xchg inc dec sbb xchg lahf sti fisttpll pop lcall test jg inc mov pop cmp and or push cmpsb das xchg pop xchg (bad) add repz (bad) (bad) mov ljmp aas call and arpl add add jno clc jle decl jnp mov mov dec xor adc scas xchg inc int3 or jns inc and mov jo jge loopne cmpsl mov (bad) (bad) (bad) lcall imul mov (bad) ljmp sahf push xchg pop bound jecxz (bad) lret rol ja iret sbb loop or clc push (bad) std pop inc call pushf jb stos cltd jl add ficom jmp jns xchg nop xchg push fcmovu movsb dec (bad) mov mov sbb (bad) clc cld pop cmc inc lds pop pop pop push xor das and jns jg inc js in mov add arpl ret mov (bad) (bad) jg int3 inc cmp fnsave iret pop pop pushf push test xor xchg mov mov mov clc fstp sbb lahf dec rol cli fstl cmp pushl ljmp ds loopne enter sar inc cld jp mov les adc ja mov lods mov fldenv popf push out (bad) aad out push addr16 or nop outsb push (bad) (bad) jle icebp inc popf scas in cmp mov inc (bad) fisttp mov push fs shl lcall pop jnp push adc incl and jecxz sbb cmp adc jecxz (bad) (bad) call xchg mov lahf fldcw mov scas sub push loopne jnp stos or je ss xchg outsb add imul leave jg mov pop cmpsl aad insl leave ljmp mov cmp popf xorl clc stos or inc mov inc add jle adc pop and (bad) jl icebp cs arpl lret jo mov rcrb cmp mov lret mov jecxz out pusha dec sbb mov or push xchg push and mov rcrl sbb inc push xchg int pop subl cmp xchg add mov test mov mov or add or dec pop ljmp mov iret and cmpsb mov in pop xor cld in xor leave push jns fldt and adc ds iret and fwait (bad) ss xchg mov and mov arpl jg decl pop sbb jecxz sub pop imul aaa mov xchg lods insb (bad) mov push pop mov sti mov std in movsb (bad) (bad) mov push xchg (bad) mov sub push lods xchg inc cld lcall in sbb test notb adc push data16 xor (bad) cmp lret scas or mov inc movsl add sub dec mov jg clc (bad) call faddl mov leave sbb out mov fnstenv mov loop jne dec ljmp les rcr adc sub lret ljmp cli pop mov add jnp arpl xchg push pop loop in mov test jns clc and mov aam push clc lds (bad) mov inc insl loope fnstcw divl lds (bad) movsb ret decl adc jle insl or mov (bad) sub jecxz pushl pushl xor js mov stc mov test dec (bad) mov pop ljmp lret mov jge in sbb cmc (bad) jg lods pop bound ret jp sahf mov lcall jo (bad) (bad) inc shrb repz fsubrl out pop movq mov xchg hlt push sub (bad) incl (bad) hlt xchg cld adc mov push std nop jl jecxz dec loop mov pop push dec outsl xor xchg (bad) (bad) call push cmp inc cld stos clc cltd jecxz or lret pop inc mov or jae daa mov mov fs push jno and (bad) or cli (bad) (bad) je (bad) lcall adc loop pop ret icebp cltd cs and mov (bad) ljmp mov jb lret adc stos push loop mov cmc jg mov (bad) cmp jmp (bad) (bad) (bad) (bad) jg arpl jae jae iret out in push mov push mov fiadd repz (bad) (bad) dec mov hlt out testb rorl lock call (bad) out cmpsb lcall sti sarb mov mov aaa (bad) lcall insb cld dec xchg mov lret sub add (bad) incl aas pop jnp dec dec popf inc out in das sti lods aaa pop mov call mov scas mov (bad) lods inc adc push adc mov jns xor fistl cmp jbe lcall adc bound xchg adc dec push push xchg xchg (bad) (bad) incl fidivl mov add scas push (bad) ret aam decl jb outsl in lea sub jnp clc xchg mov ja mov int3 std (bad) push push ffreep pop mov mov mov jg dec push inc jno and mov mov pushf sbb pop daa push frstor mov dec stos ljmp decb in xchg mov cmp or movsl pop out adc std and inc push or (bad) imulb iret in pop lock jno push pop shrl (bad) (bad) (bad) out cmc gs test inc sbb bound lret xchg xchg into js xor bound sbb mov xlat ds push (bad) ja mov jg sahf scas addr16 (bad) (bad) jmp outsl mov pop (bad) test sub add cmp sbb sbb jl push mov pop (bad) lcall cmpsb ljmp xor jne fnsave mov cmpsb (bad) fldl loopne (bad) ds push xlat push xchg insl aad call sbb jne xor inc xchg dec jne jecxz (bad) ss repnz xor xchg (bad) (bad) decl sub test dec iret rolb dec aam cmp imul mov (bad) (bad) (bad) decl imul inc add mov inc mov and push pop lcall loopne in sar ljmp and cmp mov xchg movsb clc dec repnz out and mov in inc jns and add push add or dec clc sub leave loope add mov hlt stos fs jl imul (bad) (bad) ljmp mov cmp std stos push cwtl jno cmp adc repz jmp movsl (bad) (bad) (bad) call std cmp sbb lret inc sbb sbb lods xchg pop mov xchg lahf mov inc adc pushl cs out sub sbb test (bad) ljmp inc (bad) jno ret add inc cmp (bad) xchg movsl loope sbb mov test mov pop lds in and mov (bad) inc or pusha push (bad) daa add ds lock divb clc mov out sbbl and loope mov (bad) scas pop xorb cwtl sub mov pop mov inc mov jl jns xor hlt incl jle lahf push aas fs fsubrs or jmp clc mov pop pop push mov (bad) mov out mov in inc and leave in mov push xchg and (bad) (bad) pushl (bad) fwait lods fisttp fstps sub mov mov mov stc or jmp pop mov in lods jge jl mov adc jp mov in mov jnp call jns inc loope xor xchg rcrb or adc mov out cmp mov (bad) (bad) pushl jecxz aad mov mov pusha jno xchg jne pop aas jae out inc mov outsl inc add incl clc aaa jecxz fistp loope (bad) stc ds sbb fisubr aam std xchg cmpsb mov call or push and sbb lock pop lock stos loopne push test int mov (bad) not (bad) cmp dec sarb pop sub enter iret sbb sub jo mov push (bad) pushl jge in push sub es movsb mov (bad) arpl xor cmp lcall mov jge movsb jns mov sub jge dec push ljmp jae (bad) (bad) (bad) ljmp lret inc jb xchg lods jae add add push fsub repz fisttp (bad) xor lods cld (bad) mov (bad) decl lahf fcmove (bad) cmp imul cmp mov clc dec inc out aad clc movsl outsb pop clc insl loopne clc (bad) (bad) fisttp (bad) clc xchg cli mov (bad) aam nop pop dec and int3 nop cs ljmp cmp and xchg or sbbl xchg loop dec jne or (bad) (bad) (bad) js (bad) fistl inc inc loopne ss mov add mov push sbb mov test cmp lcall push call mov sub in stc popf xlat in dec mov jg aas insl lret iret sbb ret pop mov stos fbld out fisubr sbb xlat sbb jbe ret mov push add lahf loopne insl pop cmpl push call test imul shll mov or call xchg mov cmpl cltd cli clc cmp fistp cmp mov push dec inc lods stos (bad) lcall cwtl imul dec outsl in jb pop cmp (bad) out shrl hlt mov decb mov repnz (bad) mov in lret inc lea ret lods leave adc pop mov sub push js jb aaa call in scas lcall jb,pn imul xor jg incl cmpsl icebp mov push or push mov (bad) (bad) out add dec cwtl push sbb sub mov xor decl jo pusha ds test movsl int imul (bad) (bad) jmp and cs sub ds pop pop pop movsb adc cld or (bad) (bad) (bad) pushl dec push clc ja jle mov cmc stos jnp xchg repnz lea adc xorb sub in jbe pop cmpsb arpl pop sarl cmp loope gs pop fistl (bad) (bad) mov in and bound pop or cmp fisubl or (bad) (bad) jg push mov cmp cmpsl aad mov pop xor fnsave sahf push sti mov (bad) (bad) cmp mov or repnz icebp push xchg add decl nop cmpsl out inc add dec loopne lcall fs push rcr shlb mov (bad) (bad) fildll lods sbb cmpsl ret fidivr and pop sbb add (bad) (bad) call pop (bad) pop jbe lods cmp inc mov cmp inc fwait and mov sti jno (bad) add add inc mov dec ja sbb (bad) (bad) ljmp gs les inc arpl syscall arpl xlat mov jb fnstenv scas and jne into popf cmp mov (bad) (bad) (bad) js pop lock pushf pop iret pop fldenv ret insl jbe push inc jo mov xchg mov mov adc notb mov inc outsb (bad) (bad) jg cmpsb insb les pop fs test mov in leave add decl scas (bad) and xchg or pop xchg (bad) mov insb leave pusha (bad) (bad) (bad) inc loope sub mov jle inc cld or scas in cmp or aaa ror test cmp in insl add (bad) pushl pusha sarl nop les outsl cwtl dec das push jecxz jmp lock push inc jg push mov add mov mov js xor lcall xor stc jle scas rol inc out sub and orb (bad) mov (bad) mov loope cld cmp mov (bad) (bad) (bad) pushl aaa push or sub push mov xor enter mov (bad) (bad) xor in mov push stos (bad) (bad) scas inc cs dec and mov or mov xchg loopne jmp mov scas rcl sarl push mov fldenv insl cs insb (bad) (bad) lcall sub and dec sti mov xor inc fabs test push mov sahf mov fistpll push icebp (bad) daa (bad) push cmc push mov daa push shrb mov add or loopne stos out push loop adc (bad) (bad) dec push push test adc jecxz hlt xchg push sbb jnp dec push mov scas add jmp push gs push fchs xor (bad) loop (bad) fistl std roll xchg jg push push dec out jne loop movsl adc jmp fcomip dec mov and jne jmp paddb pop roll cltd inc (bad) (bad) (bad) jle sub xchg insl xchg aaa jns fstpt insl mov mov ja mov (bad) aad fnstcw and xchg dec scas push fnstcw push lock sahf sbb fist clc jbe cmp pop sbb imul adc jbe pushf sbb inc mov cli mov jae jle clc mov (bad) out nop dec imul fidivl push repnz movsb insl inc jne cmp gs hlt arpl (bad) fildll push cs or xlat les lock (bad) (bad) (bad) incl addr16 dec ss sub push mov insb movsb fs and cmp jecxz fstl (bad) stc mov ljmp andl mov cmovg scas insb mov lcall out cmc addr16 cmp mov rcr (bad) test (bad) je mov (bad) (bad) (bad) lcall fidiv repnz sti sbbl dec adc stos dec into sub (bad) jmp lea (bad) je adc or test ds aam add clc push popf inc pusha dec push negb (bad) mov inc (bad) aaa std sti sub testb adc inc adc (bad) call fsubrl dec push mov mov xor jl lods faddl mov scas clc (bad) (bad) mov sub add sbb (bad) pushl mov jle into pop jnp push mov stc ja jb mov sbb sub jecxz (bad) (bad) (bad) (bad) jmp jnp mov cld cmp aam xor addr16 cmp adc inc mov (bad) (bad) decl lods (bad) outsl mov lcall ret adc mov pop mov ljmp pop sahf fdivp popa add repnz into dec aaa bound jo cmp mov (bad) (bad) mov ja in gs les scas jge pop dec movsb pop inc dec jmp xchg loop cltd loope mov (bad) fcomip or jg xor cs push outsb xor xchg mov mov cli ja rclb jl add xchg cli (bad) incl out mov addr16 inc movsl jmp cmp mov hlt (bad) ljmp and adc notl in mov and shl cmp sbb loop (bad) (bad) lcall aas ret lock xchg pop pop inc mov cli es hlt les rol cmp inc mov nop (bad) jmp jl inc nop mov sahf mov aad fcomps (bad) (bad) (bad) lcall lods add scas outsl lods mov dec and sbb mov fisttpll xor out incl cld les xor ja test and (bad) ljmp fdivrl mov jg (bad) or adc addr16 inc repnz dec cmp (bad) pushl push rcll fwait cmp lods jns xchg cmp (bad) (bad) (bad) mov push scas or inc sbb stc dec sbb sub inc mov sbb cmp jmp jmp mov pop jp mov (bad) push or push notl add xor sbb fildll mov mov mov add out mov xor mov (bad) call (bad) (bad) sub mov bound mov popa addl sbb call sahf mov cmpsb and jg out mov std add mov and sub adc pop in popa xchg arpl pop or jmp (bad) clc ret push (bad) clc jp (bad) jecxz lods lock push lock loop movsb jbe push stos test fndisi(8087 and js sub into xchg jo sbb rclb adc adcl call mov hlt lcall mov mov jl repz xchg and xchg vandnps cmp cmp ljmp cs ljmp lods jbe cmpsb ljmp (bad) stos ljmp (bad) incl push test nop dec xor mov xor divb jg test dec lods cmp mov outsl push (bad) (bad) jmp lret jg jg sub and int fadd jnp or fsubr add iret add hlt scas mov inc std cs cmp jg aaa pusha loop popa mov ss fwait inc std (bad) lcall pop mov test fisttpll mov fidivl push repnz cli js add outsl sbb (bad) push pop lods es lcall ljmp mov xlat xor outsb rol cmp movsl dec push pushf js lds jl xchg (bad) neg cli decl scas es jge movsb mov xchg cld mov (bad) int3 or or xchg adc xor cmpsl sub and lods scas fwait mov in cld xor mov loope pushl jmp cmpsl movsb pop fidivr out mov js hlt pushl les int mov sbb pushl sub jmp (bad) sbb enter cmp (bad) (bad) dec mul pushf sahf imul xchg cli out push xorl iret in inc sbb out (bad) (bad) dec add loope xor scas inc les mov mov cmc leave in cmp pop cmp adc mov push ja sarb sti jae inc xchg ss jg ljmp cwtl jecxz repz dec lock mov xchg (bad) call jbe fiadd (bad) int3 cmpsb add dec cmp add push xor cmpsl ds loope add jle pop paddd push fisttpl in cmp xchg mov (bad) outsb insl ja adcb stos jmp pushf (bad) or int les dec test insl lock (bad) ljmp cmpsl mov lahf fnstenv mov push and push decl (bad) adc dec data16 fcoml sub mov and clc fsubrs (bad) (bad) loope stos leave (bad) (bad) jg push fcomps shrb lds mov movsb mov (bad) (bad) xor jae (bad) (bad) (bad) fidivl lods test push push imul jle fisttp clc (bad) call cwtl gs pushf jp pop xchg in jo dec jg les mov lea sub jmp test enterw jmp push inc push push out popa and cmp call ss sbb xchg lcall call push in cli aaa dec decl loope in je out out xchg (bad) (bad) (bad) call js push aad or mov pushf fimull xor xchg int mov aam movb out mov xchg fidivl data16 int mov int push cld (bad) (bad) pop sbb jns cmp cld cmp jae sbb movsl mov cmc pop ljmp subb bound jae clc cmp cmp decb aas jg imul lahf (bad) (bad) pushl ret fstps or mov push push pop push or adc decl push adc lcall push mov or popf add sti data16 jmp inc std mov popa mov pop or (bad) (bad) jg cmpsl adc adc out pop and out mov xor lds sbb imul scas xor pop cld inc ss fsubs repnz (bad) (bad) jmp ficomp stc inc and adc pop rcll out jnp mov mov (bad) (bad) in mov lods loopne cmpb das adc jns ljmp outsl and jne push (bad) pushl xchg sub add lds jmp lahf (bad) iret loopw xchg pop aaa or mov cmp sub jb add (bad) jg,pn (bad) cmp mov ja in fadd or icebp mov ret dec fcompl leave push xor outsl (bad) leave jl cltd sar sbb fcoml sahf inc ljmp cmpsb call (bad) (bad) (bad) ljmp outsl push loope sti fcomps repz fcmovnbe xchg jne imul insb push cmpsl dec xor ljmp out dec mov (bad) sub dec xchg hlt pop fwait sbb (bad) mov mov inc add cmpsb clc sbb rcll jge cli (bad) lcall jae out outsl inc inc fsubrl and sahf pop inc data16 or (bad) call cld push loope call jecxz lret sub xchg jbe lcall or sub adc push cmpsb mov das cli decl (bad) out adc popf outsl (bad) lret jae test fstp mov lods ljmp add adc adc pop ljmp out jg (bad) jmp fist fcmovu and mov fmul xor cmp lret jno loopne mov pop mov push inc sbb lods arpl addr16 jmp out and sub mov jg lcall cmp xor pop jge loop inc mov cld inc shrl lea test out xchg aas adc xchg pop out xor or (bad) push jne ljmp pop or pusha (bad) mov mov xchg lods fucomip jbe leave test and daa pop xchg adc cmpsb adc sbb dec push in and mov inc lcall (bad) pushl arpl scas lahf inc mov jp dec or cmp int3 xchg xchg adc (bad) fmull xchg mov mov push mov xor or aas push mov xor xchg pop hlt jg pop push rol push int3 (bad) ret mov push and scas pop (bad) (bad) (bad) call inc ficomp cld das cld std jns,pn fsubrl mov lret ja push fnstcw outsl nop icebp jle dec sbb mov aaa in (bad) clc inc (bad) jo inc or clc arpl test inc (bad) (bad) (bad) lcall xchg inc or jl inc jb daa xor dec (bad) rcr sbb mov and ret inc (bad) dec mov insb out sbb cmc mov mov (bad) incl mov jno sbb jle push paddw fldcw (bad) lahf push sbb (bad) jge fs pop xchg mov loop sahf xor jb (bad) (bad) ljmp fs fnstsw loopne xlat iret pop sbb add fisub add dec in jnp xor sbb and and pop int3 or sbb (bad) (bad) frstor mov aas adc call out mov int icebp shrb in xchg mov (bad) (bad) (bad) lcall test mov out loopne jne stc jno aas pop aam sub out cwtl mov mov pushl xor sub jae push fst addr16 ljmp pop adc push sti dec std lcall cmp and jae ljmp cli pop dec push xchg xor xchg loop inc nop frstor sbb jecxz data16 mov ficoml (bad) (bad) jmp lea js push mov shl mov sub stc daa mov loope scas and fwait xchg and aas lret pushf jbe sbb in jmp mov fwait or dec (bad) incb arpl push data16 xchg sar mov ror sbb cmp adc push fdivrl cli imul mov ret push pop out mov imul dec test add jge sti add rcrb or or xor (bad) jg jbe cmpsb (bad) jecxz lea pop adc fistpl (bad) call jb enter adc or mov mov xchg inc test and (bad) aad fdivrl lcall pop (bad) or data16 (bad) (bad) mov pop mov pop push js dec push inc dec mov add pop and das and (bad) (bad) (bad) inc outsl adc jmp jg bound inc std sahf lret les inc daa cmp xlat in (bad) sti sbb add pop xchg jae jle pop adc sti inc add fbstp fldenv (bad) aam ljmp or fsts das clc xor cs push push rcrl mov adc insb pusha test or std pushl cli ficom xor xchg scas push and mov add and ljmp inc movsb mov lds inc (bad) pop lea mov mov adc out sub inc push jg movsb adc xchg pop xlat (bad) mov movsb mov xchg mov and fs (bad) out xchg push jae fist inc in fwait inc mov lock mov push (bad) pushl out lret push imul jb (bad) cmp out cmp lcall lods mov in das adc int jbe push int stos pop hlt jnp jecxz (bad) jg or outsb dec mov lds into sub jnp sbb mov fs fsubr loope incl or adc imul (bad) (bad) out rol neg and push push push fs xchg mov das adc cwtl xor test rcl sbb jp ja push fisubrl es (bad) hlt and dec jecxz mov sub sahf lea (bad) decl and jns lock push jns pop inc in lds push push (bad) in incl xchg add cmp jle lea or lcall lock (bad) call or stos int3 imulb sbb and fcoml in sbb pushf push clc outsl push test clc inc loop jp mov pop push jmp jge mov fucomip mov ret jae cmp mov lret jle scas (bad) sar ljmp xor cmpsl loope fwait lock lds fsubrs dec xchg (bad) (bad) (bad) call leave out jne jmp xchg dec ret jbe jae or test scas inc add ljmp add mov je aas rcrl popa cwtl gs ror aas xor hlt lock call stc mov arpl or sti jae push std jbe pushf ficompl (bad) lcall stos movsb jmp pop inc mov pop lcall mov mov test and aas lock das adc pop (bad) pop xor aas or imul mov sahf lcall imul repnz pusha test cmp (bad) pop cld stos imul test jbe rorl (bad) mov sbb add out xchg cmc xadd and mov cmc jg cld dec push test decl mov (bad) jns jge cmp sub mov out (bad) es sbb (bad) (bad) cmp scas cli cwtl pop push push jb push push jle daa jne scas sar ja aam or push popa mov aad scas mov pop xchg inc dec test jg mov arpl sbb (bad) rorb hlt fisttp jp mov jmp repz (bad) (bad) fisttp (bad) scas mov (bad) loope or ljmp and mov or xchg push cmpb dec inc (bad) (bad) jmp jnp lret pop add ds loop lds xchg cmp xchg rol jecxz dec ret je (bad) stos (bad) xchg nop pop and pop mov (bad) incl mov test push imul fimull mov addr16 xchg and and es pop mov sub sub and sar jg jnp nop out in xchg lret in jmp adc incl push rcr mov call push mov ds push xor mov ss clc push hlt psubusb dec insl movsl subb (bad) mov lock (bad) jg dec add enter cmpsb cltd sbb sbb sbb enter (bad) out mov adc mov cmp pop and ret inc push or imul shlb mov insb imul dec xor idiv out cli ljmp clc fnop repz aam or loopne mov xchg clc andl pop in mov int3 inc mov dec or add lret (bad) incl xchg loope mov add dec sbb arpl lods outsl test sub and and (bad) (bad) decl xchg xor mov mov shrl imul call adc sub cmpsl sub xchg aaa pop push mov push jmp mov hlt pop mov push dec psadbw fcomp pop shrb lahf and xor enter push (bad) (bad) jg xchg sahf mov or sbbl clc jmp imul mov div (bad) lret pop add pushl stc and xor cs push mov std (bad) (bad) fild mov and mov push or sbb mov (bad) jl rclb mov push inc stos jp mov adc (bad) mov jno movsl push out (bad) (bad) (bad) ljmp ret inc mov add push jns and and add inc arpl fcmove mov add call cld into out arpl shll stc mov (bad) scas mov adc insl jg sbb pop inc adc ret push mov pop mov repnz int3 lcall clc push (bad) lret daa cltd test and test ja ja add jl icebp es pop (bad) stos lret lock jp (bad) lcall and js xchg add aas outsb sub or mov push pop sbb fs sbb arpl repnz std (bad) insb mov fild inc add inc cltd mov xor loop aam popf mov pop push cli (bad) (bad) loop xor mov push xor mov scas push dec loop in ljmp dec (bad) dec pop jge sti mov (bad) int test push cmp test ficoml pop mov mov jle das push std xchg push mov jp out xor push mov test call mov int sub cs data16 push ljmp jle (bad) fild cmp lods out fistp and insb movsb ljmp or nop jmp outsb sarb les mov out fwait lret lret out clc (bad) lcall shrb lds loopne jg cld or arpl test jle loopne cwtl push lock mov add xor cmp cmp gs push movsb jbe ja outsb pop adc inc or mov ljmp pop lahf into jmp push fdivr mov mov jecxz push push mov sbb out clc call cmp mov das ja jg mov hlt mov mov cld pop sbb divb adc push xchg cmc sbb jmp adc mov outsl mov mov fcoml les ss push and loope mov adc scas adc fwait lock loop sar xor mov jmp (bad) (bad) (bad) jg lcall xchg sub mov cmp and loope fisub mov les pop inc (bad) out sarb push adc aas sbb in (bad) (bad) call sahf insb in out sbb and fnstenv or or jl rorl sbb loopne sbb pop mov jbe add lock mov andl push cmp (bad) (bad) decl dec into icebp cwtl cmp inc fmuls flds push mov movsb lods hlt jmp pop clc pushl mov imul int scas ss loope jnp clc mov out scas dec jns loop je in (bad) incl mov js pop mov arpl push xchg repnz push clc (bad) fild out cmp push lock or sbb fcomip aaa adc sbb push aam int pop mov dec (bad) (bad) (bad) fst stos loopne sbb pop xor pop call add stos dec (bad) jmp insl inc arpl sub sahf adc lcall nop pop ror and repnz (bad) mov xlat (bad) (bad) (bad) inc mov cmp ror repnz sub mov inc dec repz adc cltd xor (bad) inc mov push xor push lods inc jmp xlat lock jbe xor xor (bad) (bad) call unpckhps ja sub hlt scas test pop (bad) lea pop (bad) (bad) ljmp xchg mov sub int push inc sti aam fisubrl das dec rclb loopne mov in mov movsl shll lea cld push leave (bad) mov ret adcl aaa mov mov nop lcall jno xlat xor and or incl (bad) and mov xchg in bound mov ret popa int ret push (bad) (bad) (bad) (bad) fisub mov (bad) ficomp xlat sub loope iret mov dec sbb add dec xor push (bad) jg decl sub mov imul scas fisubrl push ds out mov mov xchg (bad) sahf cmp jg ss push fsubr push mov pop mov jl push sub mov mov jg mov and ja pop nopl ret mov cli inc xor push and add jmp in push sub in xor (bad) sub dec clc push cmp mov mov out loopne jbe pop mov inc es push xor pop sub jle iret cmp mov (bad) jmp ss mov jg jecxz (bad) std jae mov into (bad) (bad) (bad) pushl repnz jno lea push ds aad jnp pop jnp cld int push xchg movsb lcall cmpsl ja loop and iret jge fwait jnp scas (bad) (bad) (bad) incl sub in mov test mov mov mov or ss push jg jb insl aas pop test xchg (bad) lcall sub or mov and lret lcall (bad) cmp cld lcall mov nop stos cld mov jnp aaa int3 inc add cs (bad) clc or cld daa movsb jle mov arpl (bad) jg xor xchg std (bad) inc xchg scas adc (bad) jo iret mov push inc or cmpsl cmpsl stos fucomi sub (bad) decl insl xor mov cmc pop in jb xor push flds popa sbb popf xchg mov jo (bad) sbb mov pop push jge inc mov mov push push dec (bad) jmp mov ss xchg pop mov cmp push mov (bad) (bad) (bad) mov sub fwait int3 sub xchg inc daa dec sub and les (bad) fisttp jmp clc lahf call out stos clc outsl jg pop repz xchg cli daa out sbb mov xor pop adcl jmp xchg jmp lret shrl sbb cs loope (bad) cmp fbld pop shrb outsb jne and mov in add js rcll shlb sahf or jb jg jg movsl adc and into in stos ja in (bad) (bad) incl sahf xor jne imul pop sbb sbb (bad) (bad) (bad) ljmp push dec cmp in dec cmp jno fadds add mov push mov mov incl cmc jmp addr16 lcall loop cltd push inc test std xchg jnp pop sub out inc xchg xchg stc pop (bad) (bad) dec out arpl pushf pusha jecxz icebp stos add inc inc scas (bad) jmp cli xchg mov nop mov cmp gs (bad) fcomip lcall shl jno or push mov cld jmp sub lods or (bad) (bad) incl xlat sbb jp rorb mov imul add decl sbb fscale jle mov outsb (bad) push fwait scas cwtl jecxz xchg inc xchg mov cli jecxz pushf mov arpl mov jmp movsl fisubr mov imul jo dec outsl mov ljmp jle imull dec movsl imul sti outsl fstpt (bad) pop mov mov jl mov mov loopne outsb dec adc popf (bad) (bad) (bad) (bad) cmp fsubp inc sarb pop mov sbb mov gs xchg icebp enter (bad) (bad) fist rol pop and sub mov mov imul mov mov mul pushf in mov xor fimull pop cli pushl orl mov in pop loop push mov das insl (bad) ljmp bound repz pushf lock cmp (bad) push sbb cld or (bad) notl push mov sub (bad) inc xchg jo pushf out daa mov sahf adc mov sbb ficompl jb stos adc push addr16 xor sbb adc (bad) inc mov insl xor lea mov rclb (bad) incl (bad) jp mov stos jns aas xchg int3 jecxz xchg sti cld lea (bad) jg insl adc cmc adc xchg lea mov or pop negl repnz imul dec scas jl (bad) jecxz xchg insl and aad mov (bad) cmp pop nop (bad) and inc mov jo test incl xchg cmpsb js mov push pop (bad) xor inc cli incl jecxz lock clc enter pop sbb cmp imul jmp mov sub dec imul dec insb ret adc jns add out fild mov (bad) (bad) lcall push cli lods outsl cmpsl cld aaa jae inc xor fcomip mov loope adc notb (bad) (bad) mov jno scas sbb arpl adc loop inc cmp sub dec mov aad in ror mov incb imul int (bad) jmp push mov jb stos rdmsr sub jo idiv (bad) lock mov imul orl gs es lock repnz cmp sbb fcoms xchg loop dec xchg add xor je cli repnz (bad) ljmp push jle,pn cmp sbb hlt loopne pop jae iret sub pushf xchg xchg scas cmpsl pop repz jns or mov sbb mov pop loopne xchg (bad) (bad) (bad) cmp fisubl imul out sub pop fsubl add or sbb (bad) (bad) jg cmpsl and (bad) insl xchg pop mov pop test mov cmp sbb pop popa add adc scas cmp push mov pop enter loope jg mov mov aad mov sbb negl incl std push (bad) jge (bad) mov rorb stos test sub cli outsb ljmp mov dec push (bad) cmp (bad) (bad) mov imul jg out mov loopne xor inc jmp xchg cli cmpsb faddl addr16 hlt loope test cli mov sbb sbb mov (bad) mov aas pop dec mov inc push mov mov fsts jnp sub repnz rorb into mov loop (bad) je and xchg out sbb inc and jle stc xchg jb (bad) (bad) (bad) jg arpl push negl lock mov jns cmp fildl (bad) ljmp sub jl adc dec sub (bad) adc cwtl jnp cli fcomps cld xor pop ror dec mov sbb jno jo add fist std (bad) (bad) ljmp test (bad) je adc imul xor int addl adc xchg fcmovnbe jae aaa fcompl xor pop cld inc inc mov cwtl ficomp and dec or lcall ds std inc out imul jecxz mov icebp inc xchg inc arpl mov (bad) (bad) decl sub mov adc mov cmp insb aas sub lahf hlt out imul out outsl jmp popl jnp dec add (bad) cltd imul xor (bad) js imul mov add jg mov inc jno push iret add in in or (bad) jg cmpsb xor clc push xor das mov xor sbb jecxz or pop icebp or (bad) lcall add mov push repnz popa bound pushl test out mov push daa mov idivl incl inc int3 ret mov movsl ret es jecxz out xorb test push fcmovu outsl data16 jmp mov sbb dec mov push dec adc call lods hlt inc test outsb cmp int xchg loop or sbb in mov (bad) mov daa ret mov pop fadd loopne cmp pop (bad) push inc (bad) (bad) (bad) call sbb repnz add in jno outsl mov jmp mov dec aam adc ss sbbl mov out or push rorb jle popa xor dec fwait adc insb and scas cwtl push (bad) (bad) jg negb and mov cmp mov jl sar (bad) fcomip jne adc push sbb jns sub pop ja and or xchg push js lock sbb pop and xor add mov mov (bad) (bad) (bad) mov jge push mov dec cs jle movsl mov xor xlat ret (bad) mov loop test cmp ss ja std mov adc imul push cmpsl mov dec pop jmp push pop fisttp cmp and mov test (bad) adc popf enter (bad) (bad) (bad) jmp fnsave pop push ret aad and pop lods cmpsl aaa fisubr shrl (bad) (bad) (bad) jg dec mov sub int fist movsl mov mov out (bad) push (bad) (bad) call stc in add push (bad) pushf arpl sbb hlt mov (bad) ljmp (bad) dec (bad) scas lcall rolb pusha lods mov pop ja shrb sub push mov jecxz (bad) incl mov movsl movsl fcmovne insl jno je mov sar inc inc and fs sub (bad) (bad) (bad) push dec mov push sbb ret or fist enter inc xchg xorb xchg and (bad) incl jae xor cmp movsl js fsubp jne pop loopne movsl (bad) (bad) incl iret xorl xchg loopne das cs ret pop lret xchg (bad) call xchg mov cmp insl cmpb lock (bad) (bad) ljmp loopne sbb mov iret or lcall outsl addr16 mov pop adc (bad) (bad) pushl pushf fs pop (bad) aaa idivb mov mov mov add mov mov sub add icebp mov inc (bad) lcall ret aas adc xchg in mov leave jae aam pop (bad) mov int pusha cmc fisttpl mov push rorb aad sar call mov xchg (bad) out pop push insb jge shl ja pop cmp (bad) (bad) fisttp int3 sti dec in (bad) mov movsb aaa jo test int3 push call loopne xchg out mov xchg jmp mov cs jg jne fnstenv test (bad) sti neg mov out nop cmc (bad) pushl and sub out xor scas xchg fcomip call sbb sub fcomps pop dec addr16 push (bad) pushl jle pushf call and mov (bad) (bad) ljmp mov (bad) je or fmul jne jns rorl xor addr16 xchg lock repz ret adc popf mov pushl lods test mov popl test cmpsb sub (bad) (bad) lcall pop int push xchg test or inc and inc sub jae lcall push or pop clc mov das loop inc idiv pushl das mov mov call mov cmp outsb sbb or inc (bad) jmp mov pop cmp clc repnz ss (bad) ljmp inc std outsb (bad) popf lret dec mov test cmc cmp pop push cmpsb add out test sbb sarl movsl cmp mov mov sub and mov pop pop movsl mov mov fsubl fsubrs (bad) push push outsb scas mov (bad) (bad) (bad) pushl xchg scas mov sbb cmp mov orl stc xchg rorl push pop (bad) jne adc je (bad) loop enter sub mov push aad test xchg iret in pop jecxz fldpi aaa cld lcall mov lds mov fsubrl call push fdivrl (bad) add lahf lcall dec dec lea aas clc dec jmp call mov push icebp leave jno xchg imul (bad) xor jmp cmp stos sbb xchg not xchg cmpsb jo pop imul stc out (bad) pop sbb push mov (bad) (bad) jmp lret mov xlat pop outsb dec cltd (bad) xor sahf inc cmp scas (bad) lock fcompp incl out sti shlb in cmp (bad) adc mov data16 (bad) decl sti mov sbb (bad) mov test sar inc dec push push dec shr popf outsl add pop xchg in dec das add push movsl jo (bad) mov jg scas hlt (bad) mov cli decl lahf adc shrl out jge ret (bad) (bad) mov stos aaa cltd xor clc push lods aaa add movsb pop or xlat test pushl push out jns pop stc les pushf mov cmpsb out inc (bad) jmp add add loope lea (bad) call movsb or lods (bad) mov sahf or test sub sbb stc popa pushf je aam (bad) pushl jg psubb (bad) in fwait jg jl std lods jbe ljmp mov cmpsl mov push lea pop (bad) jecxz push (bad) sub or jae pop es mov and dec cmp js push mov ljmp mov mov or add push dec imul mov decl cmc dec add das fisubl pop cld mov xor ljmp popf dec imul sti mov popf adc cmp cmc cmp outsl cmpsb repz push mov popa cmpsb cmp pop fsts in add sub insl iret inc (bad) push cld jg mov lods jmp sbb aas in stos lret mov rolb xchg andb add xor inc push divb adc test xchg std pushf push notl dec daa test cli (bad) fist mov inc jl inc lea mov fdiv cmp (bad) (bad) (bad) pushl xchg fsubrs scas push mov push and inc nop (bad) hlt or (bad) jecxz movl (bad) mov icebp push mov jg and or jns aaa nop push les insb pusha test add cmp xor (bad) (bad) cmp jp (bad) hlt cmp loope push mov std (bad) mov (bad) in out sbb (bad) xor fistpll insl pop mov cmp xchg lds lcall (bad) fwait cmp xor fistp shr ret les leave stos fisubr clc (bad) inc das pop xlat in xor sbb in insl fcomps addr16 mov mov mov xchg aas sub (bad) sub pop add push pop sbb jo repz (bad) (bad) incl pop add inc shrb cmc push repz into and daa outsl and lods (bad) (bad) (bad) lcall dec ret sbb mov pop lcall js ret into mov lock mov (bad) (bad) pushl jb ljmp sbb (bad) sbb mov (bad) dec (bad) loop pushf ds hlt cli outsb subl pop or in lods mov fild mov push jb ret into imul decl es inc pop (bad) jne mov mov cs dec pushf jge ss jmp xor cmp jmp xchg into cmp aas scas jl shr cmc cld (bad) (bad) incl lret div adc pop mov (bad) data16 mov inc sub cwtl (bad) lret imul inc add out xchg lret cld lods jp (bad) incl scas test loop std pop ss in sbb dec mov xchg bound ljmp sub mov cmpsl (bad) mov sbb dec mov pop dec push nop lcall (bad) mov fsubp dec rclb (bad) imul stc inc sbb jnp add and jg pushl push mov or mov cld sub (bad) call sahf jp int3 cwtl imul jmp loopne mov incl mov gs imul (bad) (bad) (bad) (bad) lcall mov push movsl mov xor cmp test shl out popa cmpsl and and mov jmp fild xchg jmp lods inc (bad) push stos cmpsl mov repz loope lcall dec fwait loopne ffreep sysret aaa xchg or and je sub (bad) (bad) (bad) incl push stc dec and or push fs loopne lcall jne pop (bad) (bad) lock test cmc sub fcmovnb clc shrl mov pop push push xor mov jle adcb jle jp push aad pop loop stos jecxz xor js mov mov pop in fwait (bad) scas ss (bad) or pop sbb aaa mov in mov and (bad) (bad) sti inc clc shl pushf xlat pop adc scas fdiv int push fcom ss mov scas inc xor (bad) out mov nop lds (bad) call sub mov or pop (bad) cmp sub cli insb sbb mov jg into lea orl mov mov pop mov sbb xchg xor mov cmp fisttp clc gs dec notb fidivr (bad) ja cmpsb movsl out clc (bad) fbld ja fucomi fild adc mov push cltd xor pop js (bad) jp cmc imul fidivrl push hlt (bad) (bad) jmp mov jl lods pop dec loop push in jae fsubr and xor incl adc push push mov rcr mov push call (bad) xchg in xchg mov pop dec shr mov iret pusha fs into dec xor xor (bad) (bad) decl out out adc jl cli insl aam sbb movsb loop mov out xchg (bad) repnz ja (bad) (bad) stc adc and and mov sub inc pushf icebp (bad) decl jbe (bad) popf into loopne mov xchg jecxz popf daa dec lock adc lcall sbb jns movl jns mov decl fidivl cltd ja jno lds mov sub and mov sbb xchg sbb mov (bad) or mov mov jg and loopne call pop ja dec ss daa (bad) push loop jmp mov push cli jno dec sbb adc inc (bad) jo mov jo push sub mov adc push pop shrb lret jmp xor test push lcall mov push add cmp xchg std jmp out (bad) pop (bad) push icebp imul insl (bad) stos fs (bad) (bad) pushl pop mov cld cli add lds adc std xor imul pop hlt lcall xchg xor mov jno fidiv inc inc jge lods xchg pop (bad) fildll and lret jmp mov icebp (bad) pushl ja fcmovnb in (bad) cwtl pop cmpsl fisttpl fisttpll rclb jl jg pop insl jl jno clc jb dec sbb loope mov add decl stc dec pop cmp mov imul push bound ja ret clc arpl lock imul lcall ss push push (bad) (bad) (bad) call push out outsb jo nop js inc insb mov mov repnz ljmp (bad) mov sbb xchg fsub icebp dec imul mov (bad) pop mov cmp and adc in arpl add ja cs ret (bad) (bad) mov in test push stc adc cmp (bad) (bad) decl aas push push pop push aas lret pop jb test sbb movsb lods (bad) pop mov sub push mov icebp cmp or mov out repz jmp inc xchg data16 cmp fistl mov iret test or clc jge (bad) (bad) pushl jle (bad) mov adc or push stc and add fisttpll cli fbld ficompl push shr out hlt jmp push mov outsb and cmp dec test in sbb outsl sub and (bad) (bad) push cmpsb adc scas adc add jns mov lahf adc lret mov lods mov push cmp jg (bad) mov aas sub fs test test fmul jb mov (bad) (bad) ljmp mov mov fnstsw mov jne fwait mov popf lret (bad) (bad) jmp les sbb dec jecxz or jb loope jp in stos push and lock jg sbb adc dec add js (bad) (bad) out mov in fstp (bad) xor xchg int3 (bad) inc mov stc out dec scas mov ljmp int3 dec (bad) push dec inc sub pop (bad) mov sbb and test frstor pushl push scas (bad) jo or jno add lea mov dec call inc loop loop outsb mov mov fcmovb (bad) (bad) jns int stos add stc sbb in int (bad) (bad) (bad) mov scas mov sbb sbb dec jle jae pop subl fiadd aaa sub sbb sbb clc pushl (bad) call outsl sbb sbb loope jns cs mov call xor (bad) test mov sarb xchg (bad) (bad) cmp mov lahf xor or decl pusha out test sub mov (bad) jae mov add jbe out (bad) mov xlat pop in jg sbb mov out dec je insl fadd (bad) jmp mov push fsubr aas adc push movsl pop fcmove jl shrb movsl fstpt mov out push jp jle pushl sbb dec lahf inc mov mov dec cs mov (bad) mov cli icebp push pop imul insl push xchg jnp stos notb inc lock dec dec imul lds sar decb xchg add mov lret or (bad) dec cli pop ret push cld (bad) mov cmp repz imul lds daa insl negb cmc mov mov and lret stos sahf sbb ja adc mov (bad) rcrb dec data16 ret aam stc insb loopne call test outsb xor lret sbb jbe movsb add mov ljmp xchg xor out call (bad) movsb mov paddb push sub mov gs pop push inc (bad) (bad) (bad) mov mov xor jbe lea orb out scas xor mov (bad) (bad) ljmp mov jmp (bad) jne fdivrl inc (bad) lock lods jns sub (bad) push scas sub in imul dec call aam imul mov cmc sbb add push aas mov xlat (bad) jb jmp imul lcall les push sti dec xchg outsb adc inc (bad) pop xchg iret mov (bad) outsl xchg in (bad) aas jmp jg xor sub fwait add lods jg adc clc lcall adc and push adcl (bad) dec adc adc jle and out pop ret mov test jne or cs push into shlb add in (bad) sti or fdivr in jg mov inc cmc test (bad) mov mov xor pop sub jae outsb (bad) (bad) mov push push dec cli in cmp mov mov mov push dec inc (bad) ljmp cmp in jbe cmpsl imul std (bad) cli ljmp enter roll jae jg,pt incb sub push xchg and addl fildll xlat or pop (bad) xchg scas and into dec dec test and dec (bad) (bad) call adc shrl addr16 mov mov dec sbb and out ja das sbb repnz inc (bad) stc push jmp add test das xchg pop imul cmp push sarb mov (bad) (bad) mov inc in mov xchg std in loopne lods jp mov (bad) mov shrb out js fsubl test scas pop xchg xchg outsl dec xor test add idivb (bad) incl dec sarb push fist (bad) lcall xor (bad) mov jle int jnp pusha adc mov lock lcall (bad) fistp sti shl sbbl sbb loopne mov mov imul loopne call stos ljmp dec cmpsl out jle xchg outsb lahf cmc call (bad) lcall mov lock mov mov insb and and add xchg fisttpll (bad) (bad) incl adc addr16 out clc inc xor popf add mov (bad) dec push lret xchg in mov sub xchg pop jb test push sub hlt rol stos push enter incl cwtl fsubrp ljmp (bad) mov rcll mov out xchg iret mov lret cli (bad) in xor int3 pop aad stos adc test (bad) mov arpl (bad) fisubrl hlt (bad) jg gs sub mov push lret adc mov (bad) push inc hlt (bad) (bad) call xor cld int jl xchg pop daa std mov imul fs std ljmp push (bad) xchg xlat (bad) mov jl test jmp pop inc arpl fdivrp lcall inc mov jp inc stos push imul outsl out inc aad nop lods repnz inc ss add stos lods dec pop cmpsl cmp add decl or jno ds in jg sub or jae cli adc rcl aaa xor push ss popf inc (bad) (bad) (bad) inc mov adc mov jl cmp hlt ljmp ds mov scas in mov inc imul xchg ror push pop sbb pushf das pop push decl repnz std jnp push mov pop out or (bad) mov iret push aad sahf dec (bad) (bad) (bad) fbld stos pop clc mov sub xchg cltd leave ljmp pop out insl adc clc (bad) (bad) call js jnp mov xlat adc xchg out sbb inc jbe nop jb dec fcmovnbe movsb adc in push lcall ffreep les stc cs dec pop sub pushf mov pop cmc (bad) (bad) pushl adc push mov gs lods aad lods ffree add (bad) out jl and add out test popf lahf aaa jno test insb fild jg xor leave repnz jle xor add push test xchg pop add xchg mov (bad) lcall jmp pop mov jne jbe or mov sbb cs pop hlt pop adc dec dec hlt (bad) and mov fidivl stos add (bad) mov sti scas cmpsb shlb xchg (bad) xchg clc jmp sahf mov outsb and mov (bad) out xor or ss daa scas jmp das cld (bad) cmp hlt xchg decl outsb sbb int push mov mov mov mov ljmp outsb mov addr16 in cwtl xor mov scas incl lods sbb fcomps push clc lods movsl push xor fucom (bad) incl stc lret in push sbb add enter pushf loopne (bad) (bad) mov or jg pushf pop cli sub cld jle aas (bad) or daa or jg pop sti cmp jno lods pop std (bad) pushf sar mov call push aam in aaa fisubrl lds aaa (bad) adc inc daa cmpsb ds pushf arpl mov mov pop les lds mov cli ja add inc mov and mov adc in nop incb cmc int dec jmp into cli and aas repnz cld das into fisttp push mov stos jnp cmpsb xchg cmc push or (bad) (bad) (bad) cld mov jl (bad) jle push mov mov adc dec mov xchg enter out imul or (bad) pushf xlat aaa sbb fldenv pop cmp outsb enter bound push push in cli push adc decl cwtl ret mov aas stc push (bad) outsl adc ljmp call outsb movsb lcall jmp add mov xchg loop cld xor ret xor (bad) pushl dec lret xchg xchg daa sbb adc (bad) les xor sbb (bad) pushl lahf and lods sbb jmp fcomip xor std cmpsb pop lock push stos jmp cmp push sarb lret stc xchg add lahf (bad) (bad) (bad) (bad) jg scas insl loop and dec mov frstor cmp lds call adc fs push subl clc cld outsl xchg push ljmp jnp cltd dec imul mov xor jnp in repz loopne clc cli pop clc pop incb pop fldt cmc fnstenv sub ja (bad) jg mov ret js dec sarl xchg leave and mov int3 mov decl es dec jecxz mov scas (bad) mov in sbb jp mov xchg adc jo loop push add arpl and xlat (bad) cmp xchg pop pop jle mov cld (bad) decl mov mov aas lea xor jmp mov popa std lcall and or push ljmp jmp (bad) lcall lods sbb mov pop fsubl cmp ljmp scas cli les cli je and lea test js jnp jp (bad) cmp pop je inc xchg imul mov scas add cmpsl add decl ret pop repnz jg aas jmp outsl std daa jg (bad) fsts mov inc loope cli stos dec push jbe mov icebp mov dec and sbb jno pop idivb inc cmp push rcl cmp fist cmc xchg mov hlt insl into fwait imul mov rcll decl in repz xor lcall (bad) mov or inc movsb (bad) icebp sti (bad) (bad) (bad) fstp mov add adc int scas cwtl dec sbb xlat jg push ds mov nop mov xchg stos not xchg lret loop (bad) ljmp inc and lods jne sub mov stos cmp add lods mov dec lock jp pop cmp (bad) ljmp repnz vpaddq mov or repnz mov pusha fs out (bad) or xor dec lock in mov sti (bad) lcall sbb gs and pop mov cltd mov mov cmp test xchg and and hlt aaa cld xchg push incl jl mov or icebp addr16 xchg leave aas xchg test (bad) ljmp dec test jmp fisub jbe rcl stos inc push or adc add aas fwait (bad) (bad) decl mov test cmp test jg xor xor fwait lret pop in decl add adc push lods lods sahf add icebp and iret adc jmp pop sbb setae lods lret (bad) (bad) mov outsb addr16 in lods jg cmpsl enter add (bad) mov adc (bad) (bad) lcall in jecxz aam ficoml fstpl xchg mov imul enter push test sub call lds lock sbb xchg push mov ljmp jmp jo dec add movsb icebp decl negb loope inc sbb ja (bad) cmp mov mov mov leave outsb (bad) push and (bad) jmp (bad) imul sti adc fs cmp scas pop push dec stos fsts xchg ds (bad) mov in push ljmp fdivrs test frstor (bad) cli aam icebp fcmovnb dec jae (bad) (bad) mov pop mov ja mov cwtl xor mov push mov push and sbb scas stos loope mov dec ret int movsb je mov ss push (bad) (bad) (bad) out inc mov ljmp xor pop inc stos arpl dec push push (bad) xlat sbbb inc pushf jb push mov dec orps jg jbe mov std out adc call sti cmp xchg scas lock sub lods sub sbb dec fnstsw int lods clc add mov adc push xlat mov mov pop sbb popa add cwtl xor (bad) (bad) (bad) cmp add cmp insl std std (bad) lods jns cmpsb mov int push int3 gs mov push xor (bad) (bad) decl dec lods data16 out add incb (bad) mov je cwtl (bad) or pop rcr jecxz pop icebp fnop in int mov dec jae outsl and dec test ss (bad) cmp push lds xchg ret lret out or xor mov int nop loopne add cltd xor ja adc popa call push sub fwait jg adc lock jmp scas (bad) decb mov fidiv mov ret and xchg inc nop cld (bad) (bad) (bad) out cli clc out xor adc pop xlat sub pop enter xchg leave or dec lahf mov mov and fist int3 ljmp or and pop subb jp or (bad) pop scas (bad) (bad) (bad) (bad) cmp insl ja and js leave out data16 mov mov ret adc (bad) (bad) (bad) decl and pop repz popa xchg lcall xchg jge repz cmp das mov cld lea (bad) mov (bad) mov ficom popf adc cmpsl mov xchg je mov inc adc lcall mov dec xchg icebp (bad) mov adc seto orl roll sub lret xchg jl or subb arpl push and pop loopne dec lret dec inc add or and inc sub push jb pop lret setno add adc pop jb sbbl (bad) adc imul adc fwait (bad) and add adc adc aas push aam xor pop adc pop adc xchg int3 jg adc sbb pop and or popf sbb adc jne pop sbb cmp add arpl daa or sbb hlt (bad) nopl and movsl aam rolb or and ss or push orb push and mov sbb xchg and stos in shll push repnz inc mov (bad) in add xchg fsts sub nop (bad) test jns mov cmp in in dec sahf push xchg xor movsl outsl sbb sub in icebp jp and (bad) dec ds js inc push dec push or test or mov stos in imul pop mov or and jmp arpl and jne test dec xor push cmp push sub push xchg mov mov cmc test push fmull aas cmp cmpsl sub test sub mov cmp test clc or and movsl and dec ds or add push (bad) dec or shl mov sarb mov out and les and jns xlat dec mov mov mov in jne aam inc inc and and in or jne and sahf and add xchg jle xchg lods out sahf and hlt insl scas add or in mov mov cmpsl add mov test out pop and les pusha lds je scas or inc mov mov cmpl adcb inc mov mov lds sbbl nop daa mov sub jbe scas in in pop push or stos stos xchg jp jns stc mov jns in dec and lret insl dec test stc sub mov xchg pop or ljmp xchg scas or jp add dec jg,pt mov cmpsl inc sahf jle jno les in dec fstl xor inc or sub icebp add pop inc or cs xorb adcb iret add mov sub movsl outsb jecxz roll stc and orl push dec and mov jns js adc xor in pop jmp push sbb add mov jl jl test pop add dec or dec pop mov add pop fiadd pop es add pop adc mov add cs xchg adc mov cmpsl xchg jl repnz mov push adc enter (bad) repnz (bad) or cmp add mov and or inc enter add (bad) mov dec xchg add enter dec adc adc mov leave push and inc pop popa push dec fisttp enter pop jns cmp repnz and out cmp and jno jb push push orb dec xorb enter xchg adc push mov jb and out mov imul xchg ljmp fs loopne mov jb jb inc repnz test cmp jl getsec sbb sbb add adc inc repnz mov pop mov pop add lahf flds loope and jl and xor pop and lea adc push adc sub stc sub add push cmpsb jge fldl das and add xor repnz repnz and jl enter insb ret pop mov jmp or repnz out in mov cmp leave pop shlb push add (bad) enter jl arpl add and and add loop cmc gs bswap int fldt push insl jecxz jne add inc and stc mov adc push inc insb add mov or mov mov (bad) add mov pop (bad) in or jge sub and aaa dec mov andl sarb inc mov or inc pop sbb jns stc mov sahf push seto and lahf daa nop xchg xor lea inc push test fs mov pop data16 jns dec stc lods mov lea outsl pushl add stc inc sbb xchg fdivrp lret adc jle es xchg cmp in push decb dec pop jle gs pop add add add pop jecxz cld mulb mov push push jmp mov in xchg (bad) jmp dec sahf inc ja movsl and inc dec (bad) es inc and inc pop adc repnz cmpb jb xchg jle repnz add pop add jne sub add stc push push add das jns sub inc sbbl andl bnd (bad) jb sbb scas adc xchg jl shrl jg and and jae push and jne inc mov popf jns inc xor mov out dec mov lods frstor sub les dec cmp test fcmovnu orl add inc sahf jb cmpsl jo lcall cmp stc add js and inc in or mov fs stc and sti (bad) mov inc ds pop mov (bad) nop pop inc shrb dec mov or sub mov xchg xchg xchg stos sub lods and leave mov repnz jl and push pop sbb cmp adc or push repnz subb xor push and dec add and inc inc inc and nop dec dec sbb in dec shlb xchg add je jl sub xchg adc fstpl stos fildll and inc repnz or subb dec or add das pop pusha add outsb dec xor orb int pusha or jbe inc xor js push sbb adc pop jmp cmpsb rcll or popa or push jb sbb pop xchg xchg push repnz or cmp pop add push or cmp xorb call dec orb mov add icebp push inc and jnp or mov and dec jle sub xor xor insl (bad) or or inc xchg mov mov movq sub and xchg push cmp xor push shll (bad) xor push lret incb push or fsubrp lahf push xchg or or add adc nop insl sti fisttp movups push or adc push sbb add mov add adc or rclb arpl aaa dec (bad) mov inc jle shll cs les lret sub add rcll cmp add pop sbb shlb jl and pop decb and aas sub mov add adc push (bad) (bad) (bad) jmp loope xor xchg icebp inc mov push arpl and xor mov jecxz je add cld (bad) (bad) (bad) inc push jl or inc loop enter mov mov inc dec xchg mov gs (bad) nop or rclb xchg rcl mov (bad) (bad) jmp addb in push add mov jle out orl add jge push and (bad) (bad) jmp pop fcoms lret pop adc mull and mov les xorl xchg lock sub das push ja data16 sbb mov incl call and mov test adc mov sbb fmuls sti (bad) (bad) out js add dec pop xchg jo inc xor ds cltd lahf aaa std (bad) mov sbb in fildl faddl mov (bad) mov clc (bad) (bad) test and add call push or jae adc jo jecxz cli and (bad) and cmp mov adc sbb inc dec mov cmpsl push hlt or rolb push pop mov mov scas add das repnz mov (bad) xor dec rorb insl sbb add ret xchg stc (bad) flds xor call jl (bad) and repz push xchg or inc into fild (bad) pop mov jmp add pop dec es dec push or xor (bad) (bad) mov sbb xor inc add dec int3 daa leave push (bad) jne dec push insl fadds add dec pop xor (bad) and inc (bad) ljmp pop into dec mov mov call jbe in (bad) incl into sbb aaa and cld push cmc cwtl inc and jl (bad) out (bad) and not mov (bad) (bad) cld fimul jbe push rcr fs andb lcall jl mov shrl fist lds fdivp mov (bad) (bad) cmp sbb hlt sbb cmp pop nop cmp shl rorl ljmp call clc das pop cmpsl roll clc (bad) int3 stc and push mov inc mov (bad) (bad) pushl cmp sbb (bad) scas mov lods sub sbb (bad) lcall lret mov mov call (bad) std xor rolb pop int (bad) (bad) (bad) mov adc sub or mov mov mov mov cmp (bad) (bad) (bad) call add or rclb dec xor js inc gs rol fucomip (bad) (bad) pushl mov call mov xor dec jmp in ljmp out loope mov hlt jo lock icebp rclb insb loope call sbb mov mov inc mov (bad) shrb ret or push mov in pop fwait xchg fldt loope cmp test sbb and jbe add pushl es repnz and sub add inc adc pop nop and xor (bad) pop jns xchg cld or inc or je ret push cwtl lcall xchg es lds iret out subb in xchg leave sbb fimul sbb jmp jl mov mov imul xchg scas incb mov les daa scas andl stos (bad) (bad) inc js push xchg mov sbb and and cmp pop pop (bad) (bad) (bad) call mov aam iret mov lods ret cmp jnp and mov ds testb lods stc mov push or xor or imul sub ret lret cs mov loop cmc push xlat cmp (bad) (bad) call jnp mov or mov test imul xchg sbb shlb mov fisubr lahf and and or mov ljmp pushf and pop popa jb mov lds call faddl mov sbb mov movsb inc fsubr inc dec xor (bad) (bad) mov gs (bad) inc lcall jnp pop pop cmc ljmp loope out hlt inc mov adc dec pop and xchg adc in cmp add sbb popf (bad) cmp (bad) (bad) (bad) out cli call mov das mov imul call mov pop outsl rclb cmp into sti call push (bad) (bad) ljmp adc pushfw mov ljmp sbb jle sbb cs push sbbb lahf xchg push jns cmp outsl fs push (bad) insb push pushl cld jmp leave fcoms es cmp dec cmp xlat cmp xchg or inc stos loope loop (bad) ljmp outsb sbbb fwait cmp add fdivl sbbb sbb pusha cmp mov sti mov idiv scas clc lcall mulb repz cmpsb jl push inc shlb dec push cbtw loop addr16 (bad) (bad) (bad) fist and mov ss mov aam dec adc inc sar lret rcrl pop jle push push lcall cmpsl ss lds lcall jnp push add push or (bad) lcall loopne push and dec fwait inc arpl lcall std lcall ljmp lret (bad) add insb (bad) call dec add movsb ljmp mov push ss insb inc add jle (bad) (bad) jg add sbb mov jne add push and cmpsl (bad) (bad) incl imul dec sub dec jno int push hlt add pop jno jo lcall or lcall outsl inc int lea icebp out test push cmpsl mov jb jo xchg adc pop loope (bad) (bad) cld pop jmp ret mov clc adc aad sbb pop and inc scas int sbb lds addr16 sub (bad) jl cmp mov push dec (bad) mov andl cmpsb jb jno cltd fwait mov rclb fdivrl (bad) incl push out ds mull les mov test ficom push and mov (bad) addb lcall lock test es in push xchg repz mov add add pop mov prefetcht0 sbb jmp sub xlat pop movsl add ja aam push fucomip mov lods fstpt adc ja inc ret ja fsubr cmp dec xor mov movsb jnp data16 xor xorb movsb hlt (bad) jp jecxz push ret dec test inc mov or sbbb and sbb sbb ja add aad cltd adc pop mov xor mov inc mov mov mov inc sub mov pop stos clc mov aas inc add mov in pop adc sbb hlt repz xor fcmove adc mov and sub shrb pop sbb add movsb jne mov pusha dec push repz lock xorb int mov ret adc adc (bad) lock jg insl dec sbb clc jns lret pop inc pop push mov or xchg jl jno dec add mov sbb cmc mulb sbb (bad) (bad) mov ds jbe into jle pop cs fildl or (bad) mov loop add aad fildl push push mul (bad) add add fidivl pop jp daa jbe lcall sbb sub loope sbb (bad) (bad) (bad) incl jecxz inc xor cli (bad) xor dec inc push and adc lret and adc js test mov daa and insb lock clc popf mov push std (bad) (bad) out dec or and sbbl shll shr in fstp subb (bad) outsl insl (bad) add fcomip pop push popa icebp insb popa push aad adc in push jb roll pop jnp (bad) decl aaa pop inc or out mov mov dec sub std in pop mov pop add adc in inc lcall inc aaa call (bad) fdivrl nop push mov and cmp lods faddl or (bad) push leave clc mov cmp arpl jecxz repnz sar jg mov lds lcall movsbl imul jg or fsubs xchg or cmp out leave push push aad cmp sahf sbbl ja hlt (bad) lcall push sbb push pop mov add push lds std or dec xor stos movsb out mov clc cmpsb fcomip add sbb push add je cs add cmp push or (bad) (bad) lcall jnp xor or shll or aaa inc ja test fcomp xor jo cli (bad) jg jg cmp mov inc and jp add and inc mov iret les mov movsb (bad) (bad) (bad) jg jbe xor pushf and or rcr addr16 push test movsl mov int3 mov and fsubrs mov cmc (bad) mov push push (bad) cld repz lea loop lcall bound (bad) inc cmp sbb (bad) call cmpsl rorb mov outsb iret jbe movl and push adc movsl pop mov outsl xchg cmc outsl test fimull loopne mov pop call xchg cmp or mov inc inc inc imul and cmp aaa cld xor call popa movsl ror xor data16 bound rorl ss notb (bad) (bad) mov (bad) xor data16 inc mov xor faddl ds cli stos (bad) jbe inc and iret or scas clc popf mov pop into mov std pop add popf aad inc ljmp cli ljmp out mov jns or stos cld xor pop js int xor gs (bad) inc jbe add sub push aas ret nop popf enter mov (bad) pushl rolb push call les push xlat push adc lret mov jle sbb mov jge sbb dec jecxz,pn (bad) lret (bad) jg jmp leave add pop jno adc in movsb cli (bad) (bad) decl adc or or and or mov pop or add inc xchg andl add pop xor jmp js hlt stos incb add inc mov imul jmp orl (bad) incl adc adcl jbe sahf jae inc sbb adc mov cld cld nop pop mov jne (bad) dec adc ret (bad) or (bad) pushl mov mov jp enter sub inc and (bad) (bad) jg (bad) inc jae cmpsl and mov int3 mov pop mov stos mov jmp sub les jno or push pop pop ret lahf push pop push xor or pop std add cmp flds shlb or (bad) call mov inc lods test mov mov outsb dec xor adcl sbb std push int inc (bad) rcll mov (bad) call pop cmp xor mov or cmp enter negl (bad) (bad) (bad) fist fsub (bad) daa sbb xor scas into enter adc add mov fdivrs xchg jb ret inc fist shlb mov call (bad) sbb test mov xchg mov cmc dec aas xchg and xchg lods js pop scas ss addr16 loop fcomip jg dec jl add sub (bad) sub sub cmc inc mov fbld sbbb mov mov or pop stos fs add shrb mov sbb mov iret cmpsl xor rcrl push icebp (bad) pushl xchg jp xchg adc in aad fs (bad) (bad) je pusha outsl xor inc adc or sti out adc repz mov das sar (bad) push dec or push adc mov push mov pop (bad) incl loopne sub je fwait std aam push cmp fwait jle jecxz clc add mov into (bad) incl cld mov cmp xor or sbb aam mov fs js mov mov int mov rolb add daa add sub incl mov aad add fstpt (bad) jg dec adc stos dec xor imul nop xor push mov fiaddl les ss dec ficom sbbl jmp (bad) pushl ret rol std iret lret push sub dec mov cmc (bad) jmp int jnp and fwait inc add push insl xor int ja cmp hlt mov daa fstl (bad) jmp xor xchg inc xchg and push cmpsb call cmpsb jnp add (bad) (bad) call movsb sti test jb jl adc add dec add push test out dec int pop xlat or jge pop cld rorb adc add push xchg jp ljmp cld push xor addr16 pop leave add mull (bad) xchg or test or daa scas icebp pop fiaddl lods push nop mov mov cltd sahf xor push movsl push mov jecxz or cmp fdivs mov les (bad) call outsb hlt add sub pop data16 and insb push xorl sahf fdivl lgs cli dec incl and fimul je sub sub inc (bad) jmp call test loopne test xchg into vpunpckhbw test jae jne mov fsubr mov mov add sub (bad) (bad) (bad) dec nop inc adc add mov or sub mov mov ljmp sbb out pushf and pop pop repnz push push adc (bad) (bad) cmp daa and pusha mov or mov (bad) (bad) jmp add inc cmp imul add xorl jle iret jmp (bad) fcomi mov mov insb dec fmull into push sbb mov xchg jo adc je lods rolb cmc inc (bad) mov cmp out sbb push or (bad) (bad) jg adc cld enter mov (bad) repnz inc mov enter sub daa jns xlat mov sbb cli shrb decl call xchg (bad) fwait dec xorb scas pushf (bad) ljmp push cli out mov subl cmpsl fstpl test cmp (bad) call arpl xor mov xor int3 lcall fstpl incl push xor fs adc add mov xor (bad) (bad) ljmp clc mov or rcrb jbe bound ja ret sbb add add dec pop loopne pop pusha cmp int sbb mov pop (bad) lcall mov out dec mov adc mov loop cmpb inc sbb or aad lods mov pop add xor mov stos inc out inc movsb or mov sti mov ret xchg xorl repnz inc addb (bad) incl hlt sub in dec imul in or into clc ds push pop mov sub fnop cmp scas xor adc jnp add push jo cmp clc (bad) (bad) out in aam push popa ret push mov rolb movb adc inc and loopne sti out fcoml cmpsl mov fst cmc inc xchg xchg addl loopne decl scas call repnz dec movsl lods cld fistpll xchg (bad) inc add xor cmp scas daa repnz mov or rcr mov rcll add and cmp mov mov inc cmpsb ljmp (bad) (bad) sub jmp jae (bad) bound (bad) (bad) decl ss add pop fcomi dec add icebp inc int3 (bad) push mov (bad) (bad) fcmovnu add push xchg cld lds xlat in inc aam aam jne fnstenv mov jg and inc inc aaa outsb push std sarb cwtl cmp scas jp dec jmp sub sbb push addr16 dec mov add popl push mov jnp fstl pushf push in test mov call out cmp ret aam repnz pop loopne call movsl outsl mov jno dec pop test pop iret cs scas inc cwtl push std jg (bad) jne mov dec stc inc (bad) or loopne test fdivl cmc (bad) jmp push sbb sub jl inc fisubrl cmp fs shll fdivs (bad) (bad) (bad) (bad) out inc or iret mov jbe popa mov add push xor pop in jne mov inc insl push (bad) sbb and sbb rcll (bad) lcall mov sahf mov adc mov inc jns add daa (bad) jg ljmp loope and imul pusha jmp cmp sub dec xchg lds (bad) (bad) in daa stc addr16 lahf cld mov (bad) pushl lret (bad) sub pushf rclb inc cs or test xor ficom sbb xchg stc decl push xor out inc iret mov push cli pushl cmpb loop scas push scas xchg dec pop pop aas and pop adc aaa cmp shrb inc aad sahf lret mov (bad) fstpt dec pop lret aad (bad) mov mov loopne out cli mov xor (bad) div inc inc pop xor pop scas jecxz inc pop mov insb jbe mov mov loop stos andl icebp out (bad) daa jae hlt cli xchg mov (bad) (bad) ljmp aam dec dec dec ja ds fnstcw (bad) (bad) pushl test lds scas aad pop xchg loopne sub or xor xor out iret and sar or jmp push jb jmp sbb xor cmc xchg add mov jge decl (bad) pop insb mov mov fldl sub (bad) push cld (bad) incl inc xchg int imul ljmp mov decl js push xor adc push imul jmp idiv push jmp cmpsl fidiv rolb sub mov leave add mov pop ds push push lock xchg test call sbbb (bad) out mov xor mov inc dec aaa push vpsubb pop mov mov les fwait dec cmp xor push aaa jno xchg push rcll mov lahf mov cmp mov (bad) (bad) incl nop xor rcrl and pop ret mov rolb push jecxz xor inc stos dec test rclb fsqrt mov test ror mov lea ljmp sub add nop and in add dec push btc outsb cmp (bad) (bad) call and cld push mov cmc (bad) sub pop xor shrl and fsubs add (bad) (bad) pushl xor push add mov inc lcall mov lods (bad) loop (bad) mov or enter fwait add sti xor xor add mov jp lret add mov mov adc inc (bad) aaa dec ljmp cmp xor std inc add shll insl js mov fcomip outsb inc add pop mov cmp popf call mov xor mov push xor fstpt popf mov mov pop test mov dec add jbe (bad) (bad) (bad) out push jle fcoml imul sbb (bad) dec in xor dec stos xorb ja shll out or lock arpl push xor js ret lods (bad) (bad) (bad) jg subl sub lods arpl test sbb into adc sbb sub mov jl add inc pop add icebp jno insl pop mov clc add or je jl add test and iret sbb (bad) call test fldcw and and out add aad in outsb dec movsl in mov (bad) (bad) fild bound mov add lds popa push push mov push pop out andps outsb call and xorb sub rorb or repnz lret inc mov pop jp mov ljmp decb adcl in xor add and ss and push lret xor or push (bad) lcall push jne cli (bad) cmp mov mov andb popa fstpl fsubs and jmp add xchg or (bad) call (bad) fcomip lcall push xchg insl sbb js (bad) sbb cmp adc (bad) pop lock lods nop xor fstps fsubl lods jl insb cli mov dec cmp inc jge or sbb imul and ljmp je fstl insl cmp inc pop push mov jecxz cmp (bad) ljmp jge (bad) aaa jae push imul dec push arpl jg incb jae test mov mov sbb inc call jg push imul je sti push insl jge loopne mov test adc xor add imulb punpcklbw push xlat in pushf fisubr es mov or push mov or mov sbb xor cmovne lahf mov or lcall or js mov add (bad) (bad) (bad) fstpl or outsl sbb es nop cmpl dec jno add mov push lret inc loopne jg (bad) out push jnp and outsl cmp sub add and jmp js fs or (bad) jg sbb hlt push pop xor xchg push popf popf mov mov mov mov outsl test push xor mov inc (bad) (bad) (bad) mov stos add pop ja add loop dec cmp scas fcoms rcrb std (bad) decl aaa loop int3 jp aaa xor sbb cmp mov cmp or rorl sbb call xchg (bad) mov and (bad) cmpsb push inc enter in test (bad) (bad) fisttp inc push mov dec lret data16 cmova dec test into aas jp lcall sahf ret mov int3 xorl fisubl dec les jecxz pop mov rclb pushf sub loopne daa and dec jl pop pop sarl (bad) mov push inc ljmp repz aas or jb (bad) (bad) (bad) (bad) jnp dec inc inc lea xor lret add pop add (bad) aam (bad) decl out addl test sub std incl mov mov dec mov dec outsb out sub pop cmc pop cli insb andb (bad) (bad) (bad) lcall xchg subl sar fisttpl jecxz repnz add rcrl push (bad) mov sbb aam call pop cmpl cli nop pop mov ja or ds mov mov cld jmp emms push mov nop xor js jb xor and and pop aaa subl xchg (bad) (bad) add sub (bad) mov scas ss adc movsb dec cmp je inc sti mov inc mov add aad les cmpl mov imul and loope lock xchg js (bad) (bad) (bad) (bad) test rcrb in sbb add dec shrl add mov mov out ja cmpsl push pop lods push inc mov (bad) (bad) (bad) decl in xchg pop cmp rorl mov push inc add (bad) pop mov cli (bad) out clc inc (bad) fstl lcall repnz (bad) jmp nop cmp jno leave add (bad) xor dec rdtsc (bad) cmp packuswb adc xor test inc add mov stos mov ljmp scas (bad) iret cmpsl push jl inc popf adc add adc roll pop adc mov shlb lcall sbb insl lea lods adc mov rolb pop lds test shrl cld (bad) lcall ja mov jnp mov sub rcll mov xchg scas or les xchg and jp testb (bad) incl jo sub loop push inc xlat fmuls add insb dec mov cmp xchg out aam sahf ficomp push adc dec pop cwtl inc mov pusha sbb fistpl stos inc push sub xor nop js fisubl xor add adc mov inc (bad) pop hlt jmp xor lods es inc dec data16 adc dec sub mov push dec or jae in (bad) lea jmp sub mov enter mov shrl fisubrl decl daa inc jmp dec cmp negb jno stc sub jg scas push jnp mov or sbb std rorb int jb push (bad) incl cltd push loope push xor xorb lahf pop xchg add movsb subl cmp pushf cmp pop call (bad) (bad) (bad) stc add or aas push shlb aam cmp and lds (bad) push js sbb push sarl mov lock cmp mov mov ljmp cmpl pop pop jbe ljmp fmul fild loope (bad) pushl mov mov pop push fnsave inc mov test mov pop insb xor pop mov pop dec fdiv aaa (bad) (bad) jg cmp (bad) dec mov jecxz mov jge fisttp inc lods jp sbb (bad) (bad) lcall divl xchg sahf cmp cmp push leave inc sub adc popf pushf call push lcall adc stos pusha xor in and xchg add out xor dec or (bad) fdivl addl (bad) (bad) (bad) mov mov rclb clc daa jl or mov loope in movq push shrl push inc call (bad) mov jo jmp mov ljmp pop push imul jl add push loopne lret popa repz push std outsl and dec fadds adc mov inc test out hlt (bad) pushl sarb adc push movsb dec fstps (bad) (bad) jg xor xor push je add mov mulps xor ficoml xor cmp or stc sbb xchg ss and inc push fstpt addr16 (bad) ljmp lea in add in out xor add push mov loope adc js dec jl call mov decl insb mov cmp lcall (bad) xchg pushf lock jg lret test xchg cmpsb std sahf mov popa lds add pop adc sub idiv (bad) decl ret icebp adc (bad) repz test pop cmp cmp adc nop jb mov dec loop and sbb inc dec push in jg push mov and xchg or mov (bad) cmp (bad) int dec ss (bad) call mov add ret push adc cmp test inc fsub xor les arpl les (bad) out inc mov mov (bad) decl cmp jne sub jno gs push pop and clc out clc ljmp and add test or xchg jg popa js jg mov (bad) or adcl insb dec fcomip decl or push and jbe pop push mov push add pusha inc pop test cmp inc (bad) sahf and lock cmpsb add mov fsubs lcall mov adc test imul ror dec mov repnz insb mull mov imul cld out js rcr sbbl jmp call pop pusha fsubr pop inc or pop pusha lcall and gs mov lods lcall fadd test fmull stos or cmpl add fmuls mov add (bad) jmp jnp mov push inc psraw jg nop xchg cmp int add rcr test cmc decl aad ret and subl sahf and nop push dec pop sahf inc mov sub pop inc adc hlt xchg adc call (bad) jg inc fnsave fwait lea add cmp sahf inc jmp enter cld mov incl push mov mov push mov push (bad) push arpl adc mov mov and in sbb jae aas fisttpll nop jg cld mov cmpb outsb es (bad) cmp movd or mov or push shrl ret xchg lds subl dec push jo and clc incl sub and add dec leave (bad) sbb lcall in dec cld sub roll cmp sar call cli insl lods (bad) ffree xchg (bad) (bad) mov fwait sbb gs test inc inc inc jle fdivrp (bad) (bad) call out adc dec push rolb lahf and adc adc sub imul (bad) (bad) out xchg iret mov (bad) add sbb xor fnstcw add mov aad jmp xchg rcl add imul jae adc das cli mov sub aaa push loopne (bad) out sbb xchg (bad) (bad) lcall dec sub adc lds mov xor add ljmp xchg ja xorl (bad) cmc inc push push aad sarl dec cmp adc fcompl inc push pop (bad) stos lock data16 push jg (bad) jg push inc lods aaa pop sbb add xchg (bad) mov mov daa adc (bad) decl bound inc mov andl inc inc stos insl and push insb xor test ret (bad) int add js movsb push or in sarb xchg fst jb sub mov dec je lcall jns xor das sbb fwait dec add sbb sbb lcall mov jb or (bad) decl pushf sbb fwait enter push fcom xchg pop push sub insb mov call in nop out xchg or outsb fstps xor je push xchg lcall clc loop enter mov dec jno shll (bad) push inc inc imulb ss sbb sahf pop jmp push add (bad) decl adc cmpsl lahf loope lret roll fwait push jg push pop mov int repnz scas push mov addb ljmp clc enter pop add sub mov scas (bad) push mov cli jg (bad) adc add or test into pop cs (bad) dec adc and add jle aaa arpl jp ret ds cmc jle das rcl arpl (bad) jb pop push daa jne lock (bad) (bad) jg addr16 js or mov repz push clc dec loopne sbb les mov loop pop xchg or adc aaa mov cmpsb ljmp (bad) (bad) (bad) (bad) decl xor push scas aas push jge sbb (bad) jle pop arpl mov add push cmp icebp lret add push (bad) std enter push and sbb or repnz jb (bad) decl (bad) pushf xorl or xor icebp sbb (bad) jp rolb mov icebp mov insb sahf or sub jle jle test mov (bad) decl xor rorl aam (bad) sbbl jo scas cli cmpsb adc das pop cmp mov faddl mov mov das rclb xor (bad) xchg sbb daa jp push lods fadds cs aaa lds jle push imul add jg clc pushl bound push addl adc cmp jl add pop jmp mov fstpt mulb inc mov out lret loop jle inc cmpsb (bad) shrb mov or mov xor or cli xchg sar lcall clc mov mov sub mov enter cltd loop push dec mov xchg add call sub les and cmp movsb push add test mov jbe out rcrl out fiaddl or and iret aas ret mov xor mov and mov and movsl bound sbb cld (bad) paddusb mov imul das fiaddl cmp (bad) fildll lock xchg aas adc push test movsl js popa loop xor xchg sbb fdivr ja incl mov leave jg add jl sub pusha mov stos (bad) (bad) out clc push xor iret and dec and sbbb (bad) pop mov and popf repnz lret aaa std scas clc add mov je xor pop addr16 (bad) (bad) (bad) call add xchg push dec gs out inc mov inc adc adc push or (bad) call rcll sub add js fcoms or jecxz sub jmp cli adc add sub test sarl xchg jecxz pusha cmp mov sub loopne and cmp mov inc dec lods sbb adc lods aam scas sbb dec into sub add jb scas int rcr loopne icebp imul in inc add je jle sbb and lods cmc mov cmp jb and push mov popf lcall (bad) out clc lcall or inc aad push xor sbb mov jb (bad) (bad) incl add mov inc sub icebp inc push mov add inc cmpsl (bad) mov add (bad) cmp clc incl pop inc sahf ss call jmp cmp mov dec lret mov add test (bad) cmp out sub add nop sub inc and lea push pop mov xchg lea xor adc xchg pusha mov cld ss mov cltd enter (bad) incl cwtl inc push add ds or mov dec and adc inc lcall clc push xor pop adcb andb mov (bad) addr16 pusha loopne add (bad) lcall inc mov cmp std test fwait pop xor les cmp stos lcall sbb jne mov jge fcomip (bad) mov push in mov sub pushfw add das inc adc mov ja inc and mov stos inc inc fisub mov add (bad) decl faddl jno xor pop (bad) (bad) mov jl movsl sbb (bad) out push (bad) insb adc xor jae sbb xchg (bad) (bad) lcall mov jns repz test scas mov jno push stos pusha ljmp mov push les int3 fildll cmpsb push fcomi or (bad) mov adc jb ficom add sarl mov (bad) (bad) jg pushf jge mov pop sbb or jno lods inc xor mov cmp addb mov das adc loopnew outsl inc out hlt and adc xor xor (bad) jg (bad) fcmovnb push mov adc pop out (bad) adc jb and std outsl dec imul add and inc in mov (bad) inc xchg xchg mov ret hlt (bad) call js and mov test inc rolb mov or loop xor out xchg (bad) sub sub xchg pop cs mov cmp enter fcoms inc cld call and push inc inc add (bad) adc jnp int3 stc dec addb cli in inc inc push or add xor mov loop ss inc movsb dec shl repz lcall or fimull or ljmp jmp mov push incl sub lods sub enter inc (bad) decl es lock int lods pop outsb scas (bad) rorb inc mov (bad) (bad) jg jge es or inc popf xor mov lods (bad) sbb sub adc ret inc jmp test decl adc sub adc clc jp jno in test lahf mov call cmp jmp push push lret jo (bad) sub inc mov push clc hlt inc inc mov enter test mov addr16 in outsl js add add mov pushl lret stos daa outsl clc test ljmp rcl mov mov (bad) mov sbb xchg or jle pushl lods lcall ss push fwait imul mov decl inc inc imul loope or int3 inc inc cwtl mov xchg push movsb (bad) jg (bad) fbstp pop adc mov xlat in add mov jbe jne (bad) (bad) decl mov lods adc push cmp mov dec push fcmovne mov or dec sbb decl xor movb or mov push das and subl cs jg fist aas mull cmp test inc xchg or (bad) in xorl add push leave add and jo ss popa and jp cmpsb sbb jns (bad) (bad) (bad) frstor cmp xchg fildll in and arpl push pusha cmp data16 (bad) out cli pusha in mov dec test jl adc or push sti out or mov jle jg jmp add (bad) push dec cmpsb (bad) arpl xchg adc fs sbb cltd lods loop mov out test and adc movsb cmc inc dec imul (bad) out add imul dec mov loope sti mov mov clc sub cltd mov push sahf rorb and sbb mov mov add out (bad) repnz sti (bad) ds call mov add movsb mov inc mov outsb and jg shll subb sbb pop xor in mov pop mov mov add rolb cmp adc mov sub sar pop (bad) dec lock sub adc sarb xchg inc ljmp xchg jne mov shlb inc mov sbb mov pop mov mov sub popf nop push push movl pop adc add jb (bad) cmp and ja add mov cmp (bad) (bad) (bad) cmp fstpl add mov mov mov cmp or pop jle xor inc bound rolb mulb mov xlat stos (bad) (bad) pushl mov orl adc lcall roll mov jge das cli (bad) incl cmovne lods and xchg cmp cmc sub add mov outsb inc (bad) lcall jns gs in imul fstpt inc sub es cs push dec cmpsb mov out mov xchg inc or dec jecxz ljmp ret mov jge sub imul cmp sbb rcrb bnd shlb adc and adc out sub lock cli xchg mov xchg leave aam mov and dec test imul and shrl fst cld cmp push sub rol std mov decl or xor mov int3 mov fcoms inc fdivs ds fcom (bad) es dec sbb and movsb out (bad) ljmp or pusha push fnop fs call mov decl out sub in lahf inc add sti jg fnstenv (bad) or (bad) aam add nop sub inc xchg in clc pusha adc ja and ret xlat mov subl fsubr in mov jns fwait scas clc (bad) (bad) jge add mov sbb sub (bad) cmp add sahf mov sub dec or jmp (bad) jg and and sub std shrb inc clc adcl stos flds cmpsb aaa push adc je ror ret cmpsb cwtl jns,pn pop push loopne inc in sub shrl fnstsw push es flds subl jae lahf cmp mov scas (bad) dec jl sub inc xor push pop ret cmp andl or mov (bad) movl ret test push mov cmp into push dec or es popf xchg cmp dec enter jg jmp cli loop (bad) cmp iret lcall stos (bad) jmp loope loopne movsb fucomi shl gs pop inc out inc lods adc pushl (bad) jbe dec ja push mov mov xor nop (bad) incl xor sbb ja push and adcl inc pop ja (bad) dec fiaddl repz nop dec push test xchg ja (bad) in loop add or jp xor call mov add jg in cmp cmpl es mov xchg addb inc sarb pop push mov jmp push (bad) push repz inc jmp adc rcrb sbb mov (bad) (bad) jl lock inc pop jo scas je push clc addr16 add mov (bad) ljmp ret mov cmp ds adc aam ss add fdivp (bad) sti sti dec fmuls in sbb dec mov or add mov (bad) (bad) (bad) incl xchg adc jo js sbbb insl test stos push jmp and (bad) jne aam push in dec fcomip inc cmpsl sbb mov xor out xor scas mov dec incl or std shr push jno pushf adcl out xchg aas cmp ja lret iret or adc lods (bad) sbb xchg or in (bad) in mov outsb hlt scas xchg inc push sbb push mov dec out cmpl sbb (bad) (bad) mov or sub (bad) icebp aaa and adc aas and test mov (bad) dec or popf xor add or addr16 in movsl dec or hlt (bad) (bad) mov mov or stos gs pusha mov dec ds es out cmpsl xchg cwtl loopne (bad) fisttp xor cmp mov or mov inc popf sbb icebp mov push fisttpl push xor push push cld fcoml xor ja in mov mov scas je bound sub dec ror stos (bad) pop bound pop inc adc add ja shrl bound sub jbe cmpl (bad) (bad) decl mov or test imulb push outsl xor (bad) (bad) incl xor loope aaa xchg in in sbb inc daa and jecxz inc mov sarl incl cld push mov add sbb or adc adc mov cwtl in call adc inc cmp dec mov pop jp sahf ret loop mov fmulp icebp fwait (bad) cmp push subl adc dec outsl add roll dec and outsl sar pop mov dec xor imul mov (bad) hlt jmp mov cld movlps clc ror push or fs fcomip mov sub or xchg lock std inc xchg xchg sbb dec add loop jmp push loop sub mov (bad) (bad) ljmp les out inc sbb les dec repz jg or inc loopne das clc (bad) ljmp sub movsl (bad) pop add xor rcrl mov add sub mov fcoms dec adc dec mov incb push sahf xor xchg mov (bad) fwait (bad) pop lods rolb cmpsl hlt mov add pushf fidivrl add sbb (bad) (bad) jg push dec sbb pusha add pop mov andl mov inc rorb pop cld mov xor push jbe add mov jg ficompl and inc and pop sub add add call cld (bad) adc ret mov xchg mov fistpl repz fistpl jle fbstp and pop mov movsb push roll jp (bad) (bad) call jne xchg add xchg bound inc imul push push add sbbl hlt cmpsl push sarl or fimull cmp mov sti xor clc (bad) lcall pop sbb lods and aam push bnd push dec add cld pop or sbb repz mov (bad) incl sub pop cmpsb pop push in fisub outsl cld push sbb (bad) call fidivr imulb xchg or pop pop (bad) inc push imul test sbb push cs adc das sarb cmp xchg pop push and or inc pop inc test adc lcall mov out and shr lods sub je loope cmp loope imul test (bad) jmp mov push pushf insl daa and or (bad) and iret cmc in das mov cld pop push sbb nop lock das iret jp (bad) out test jns xchg jg iret (bad) mov cmp scas jle mov clc push cmp inc jl cmpsl je push cmc jg lea jecxz cmpl add pop (bad) aas aad inc inc xor adc push mov dec push pop push pop inc ret stos dec add add insb mov aam pushf push aaa std (bad) jmp sbbl clc lods jp cmp (bad) fisttp les sbb sbb jl and and and sbb cld fbld iret push push and std sub xchg mov cld lcall ret inc or and jb daa data16 inc push sbb jno outsb pop pop adc cmpl call push into clc xorl popa add lods lds push mov inc rorl adc sub je adc jo inc jg add int3 sub in lret dec mov mov rcrl lea cmpl enter push outsb and push ss inc (bad) (bad) pushl aad call mov outsl stos push cmpsb loop nop cmp std lcall ret cmp xor aad add jmp aaa pop mov inc ret leave sbb (bad) fist cmp popf rclb and fdivrp scas xorl sub fcoms add ljmp fcomip sbb inc faddl inc mov xchg fidiv popf into inc int sbb ljmp in or inc hlt push iret xchg out into sbb adc (bad) aad lock mov scas sbb sub jnp inc (bad) decl jle xchg push insb adc jle add js xor dec sbb sub lret mov adc cli push sub pop addl sbb lock (bad) jg mov out fdivr stc and (bad) sbb rolb dec inc fdivs xchg add popa cmp call or or inc mov sbb outsl pop sbb negb sbb mov push cmp (bad) jg xor shll xchg inc aam push push andb xor pop or xor test sbb inc dec cld jg sub add incb xchg or scas cmp pop (bad) pushl ror adc orl fisubr icebp sbb andps jne jl jns lock mov ljmp sub xchg adc test push int sbb lahf (bad) jg icebp mov shrb ljmp daa lcall xchg mov movsb sbb adc jle stos out fcoms cmp ret fldl add ffreep add lret mulb or pop push (bad) (bad) pop outsb sti aaa daa jb dec sbb jl mov push aad or das push test inc stos add icebp mov pop sbb push out js xchg sbb ret std dec sub loopne outsb test (bad) (bad) (bad) jmp mov pop rcl mov sub cmp arpl sub in inc fwait into pop test test sbb jp or out cli loop dec or cmp outsl push decb loope jle sub mov mov lcall push and dec test sahf mov xchg mov cli (bad) incl add lods cmp idivl mov pop jp cmp (bad) mov ret shlb push dec inc stos sub and lock aaa std pop bound mov sti push cmp rorl add mov push inc pop add inc rcrb js xor das cli dec inc mov andb (bad) mull jnp or push mov (bad) (bad) cmp (bad) cmpsb sbb adc xchg pop inc add cmp mov add hlt mov decl add or mov ss inc insl scas jg clc (bad) (bad) fist mov fiadd adc int add push imul ljmp pop sbb fdivs ss cmpsl ss data16 loopne dec cli outsl mov call es repz inc scas (bad) (bad) mov rolb hlt adc (bad) std xchg mov sub xlat dec xor call nop pop mov xchg mov sti (bad) (bad) jg push nop jp jecxz repnz cs add sahf hlt add pop jno ljmp and flds ds and loope ret fldcw mov in in sar into outsb mov daa dec bound push aas dec (bad) (bad) lcall adc aaa movsb jae les add orl (bad) jg (bad) ljmp sub (bad) nop pop cmp dec in mov ret or sbb icebp aam jb push mov mov jmp dec out faddl (bad) mov jae setbe or inc push clc mov pop (bad) mov call icebp (bad) incl dec mov test enter sub icebp fcomip sbb xchg (bad) cmp xor into imul jecxz clc inc (bad) (bad) add fwait mov mov stc mov (bad) mov aaa scas adc jp or loop jno sbb lcall jmp adc sbb sbb add mov inc pop mov cltd hlt inc (bad) (bad) (bad) (bad) ljmp or loopne xlat dec rorb dec xchg test push fcoml fbstp iret adc xor inc jmp fsubl sub (bad) incl inc pop sbb jecxz sub bound (bad) pushl test mov (bad) cmp sbb outsl stos clc imul jnp ret (bad) ljmp lods add pop dec jge daa dec add adc insb (bad) out cli sub push mov jg add lahf (bad) fist popa sbb std in in add and lret pop mov clc es xchg nop adc (bad) (bad) call and movsb out jno cmp prefetchnta cs add mov sub (bad) aas out mov jg incl adc shlb iret push and mov fadd or xchg popf mov pop cmp push sub int popf popf outsb hlt push movsb pop push into mov pusha shrl cmp cwtl outsb lock push (bad) incl test adc call cmp out cli decl pop movb mov sub push dec add (bad) ljmp xor (bad) sub xchg cmpl push (bad) mov mov (bad) std jp and pop repnz (bad) (bad) incl mov out inc xchg lock iret leave add fstps iret movb pop ret into mov dec (bad) out repnz mov and pop fimul (bad) (bad) (bad) ljmp inc or orl xchg push stos inc arpl mov std (bad) xor and (bad) call inc std es jecxz les xor adcl cld ljmp test xor rclb and ljmp je pop outsl addb cmpsl xor imull add mull mov repz into cwtl jg aam adc outsl or cwtl mov add or sub jp jbe and mov inc push cs shr lds iret mov or inc ljmp out mov sbb aad sbb clc inc mov outsl lcall sbb xor add push inc pop mov lret push sbb (bad) lahf rcrl add and sarb decl int dec sbbl arpl out cli test and mov fisubr cltd jp mov bound jmp sbb sbb add add push into mov sarb mov adc aaa xchg je and (bad) add push xchg add in cmp or das adc adc imul dec add inc loope je icebp call ret add icebp hlt xchg or popa sbb enter call cld or adc jg fmuls and mov (bad) ljmp repz sbbb push movsl add xchg add dec sbb xchg movsb xchg mov inc pop push hlt scas clc adc ret outsb inc or mov push mov mov rcll xchg push cmp mov or std mov mov pop aad es and sbb fnsave (bad) adc mov loopne and dec daa (bad) shrb loop mov mov cld out cli add sbb lods iret xor or pushf push xor shrb jg jg jle mov push jns sbb cli add dec or jg (bad) cmp and pop jbe jns mov mov loop pushf mov das ret ljmp js mov test stos (bad) jg and fcoms cmp or jno mov pop push mov cld mov ret je pop or test mov dec in incl jns jge mov add mov fcoml sub inc jge mov lahf mov mov lods faddp or xchg (bad) push jne idiv mov fsubp push fstp pop push push fld int sub lret cmp testl cmpsl test lcall int3 mov jmp pushf sbb fs jl xchg and shll or add fdivp rcrb push jecxz cmp or popa ret mov inc and repz sbb outsl mov xchg nop mov cmp add add rcrl gs ljmp xor fwait out or push loope aaa inc lcall mov loop (bad) call loop push add sub sbbl lcall dec or shrb insl xor vmwrite inc xor aad inc out lret xchg cmpsb data16 (bad) icebp cmp jle (bad) (bad) jg add addb cld shlb mov xchg (bad) aas and fmull nop and adc mov push (bad) pushl push cmp ficoml sbb (bad) gs (bad) call cmp push mov push sub mov aas cwtl push hlt adc sbb mov jmp fnop das inc inc dec mulb shr push cld fdivr (bad) (bad) decl popa (bad) mov sbb in bound ds aam nop lret fs ja xor (bad) ljmp mov mov and mov mov push jge call enter frstor xor xorl jg (bad) (bad) (bad) lcall sub dec push or sbb or push push sub add jo sub sti lods mov (bad) lcall loope popf mov jmp movsb sbb lret loope hlt pop pop adc fwait test and scas std mov hlt lods add fwait cmp xor ficom shr xchg add jp paddw mov out nop inc mov push fs push pop inc pop lret (bad) (bad) fbld mov add popa jecxz and pop sub add pop dec sub add mov lock push out pop (bad) (bad) in lcall and out adc loopne js into jo cmp es mov hlt xchg and (bad) mov repnz xlat mov sbbl les nop loopne les sbb mov in sub dec out (bad) decl hlt lods in push cwtl insb cmp lock sub test xchg sub popa cmp fdiv mov nop jno (bad) out clc jg adc or outsl rcrl lret or fdivrs jp inc cli popa mov incl mov sbb adc lahf or push cmc jns adc adc pop lcall pop js outsl data16 nop pop movsl or aaa push sar add jmp xor flds push cmpl pushl fdivl shl sbb sar enter (bad) int xorl add lahf int int3 shlb xor ja sbb out imul mov (bad) (bad) incl sbb scas cmc loopne test or sub push sbb loope (bad) xchg sub dec adc in enter (bad) mov icebp lcall lock push (bad) in enter std nop cmp fcomip mov fist inc mov ss fadds push and mov lcall cmp mov (bad) sub dec dec jg push pop mov cld rolb mov jbe das add (bad) ljmp je addb enter add pop mov std in or mov nopl cmp jp mov (bad) cmp dec (bad) aaa lock dec jne jbe add hlt mov outsl call in and ljmp (bad) push and add ret push iret decb jg icebp addl cmp ja and push fisttpl push mov inc xchg or iret ljmp mov ja sbb jns mov test pop rolb sbb dec jae add lcall fimull xchg loop cmp or inc test mov xchg jmp or andb dec divb sbb sub fsub add pusha cmp mov pop cld (bad) (bad) jg adc xchg sub push cs pusha jnp cmpsb pop aaa pop inc decl pop fs jnp (bad) push fwait popf (bad) (bad) lcall aaa int out cwtl inc (bad) xor sti and ret mov cmp (bad) ljmp (bad) fst or fnstsw sbb xchg or mov mov icebp ljmp sub inc xchg xor pushl (bad) fmull movsb push repz cmc (bad) adc mov lcall cmpsl add push dec push lods xchg test sbb (bad) mov xchg mov in call mov pop out push jg pop mov loop or or in xchg push cmp loop xchg mov xor test std jg (bad) nop adc mov fbstp add out (bad) and sahf sub call or ljmp test add arpl loopne pop loopne (bad) pushl ror shr pop add fstps cmp add aad or push adc adc jno xchg sar ja jo outsb daa pop cmc and scas insb mov js adc (bad) jg into mov adc jbe gs incl pop lods cmp (bad) in clc xchg sbb and stc xor lock mov (bad) sub sbb jno xchg notb and pushl inc scas mov outsl jg pop mov fidivr ud1 add nop enter add ficoml pusha xor nop push movsb jne mov stos mov cmp jbe arpl pop pop xchg aam repnz add rcrb incl outsb jno fbstp fsts push test ffree addr16 outsl and or and pushf push xchg xchg add lock mulb sbb adcl sbb mov ss cmp incl mov ds aaa iret xchg push lods and add orl (bad) lcall add loop jno insl sbb sbb fiadd int (bad) or cmp mov (bad) ljmp mov adc or inc lcall sti mov ljmp mov add add add fldl xor test cld mov inc scas mov mov fisubl sbb push pop aam fmuls adc dec inc add hlt in inc push mov enter sbb inc loop (bad) std into and jecxz add (bad) sub or add add out mov fnstcw mov sub movsb loope dec pop jp pushf adc loopne inc cli or sar inc fnstenv mov sar fisttpll push push dec mov adc fcomip or (bad) jbe pusha sbb imul std add das inc ret mov pop jb aad data16 mov (bad) roll (bad) call inc rcl sbb clc pop pop add jbe add and jg hlt cmp cs popf sbb inc inc test jmp out popf mov in adc push dec idiv jg rclb mov scas cs fistl ret pop loope sub or xchg inc rcrl sbb gs aas btc jae clc add mov mov cli jnp pop loopne rorb insb (bad) fnstenv out ja stos insb sub pop js mov incl xchg pop push inc gs popf mov (bad) jg add or ds nop inc jecxz and (bad) jg push add mov push mov jg xorl nop push mov mov out xor mov sub mov cmpsb cmp xor lods outsl (bad) pushl rorb mov inc or fmuls sti les adc (bad) jl adc xchg push or repnz mov jmp ljmp aas or xor add stos cld (bad) out cli incl xorb loop ss or ds hlt packssdw mov mov incl push into scas dec mov fisubr dec jnp (bad) lcall test loop push std nop push inc jno popf inc mov push inc std push adc sub (bad) cmp mov push jno mov aad lock push lahf loop push lcall (bad) cmpl and and sub hlt push cmp es mov sub push add (bad) jg jmp add repnz nop insb popaw push cmp xchg es les sub (bad) (bad) decl ja imul pusha fmull fwait jge and ret dec aaa std mov dec outsl mov add cmp bound cli lcall jnp stos mov data16 push insl faddl daa rorb mov xchg ret adc sub cmp dec (bad) jb insb sti insl ss (bad) (bad) fbstp js and popl sub lcall insl ffree ja or cmp (bad) (bad) (bad) pushl (bad) data16 out push push dec jno xchg mov cwtl mov stos xor rolb (bad) out fcompl (bad) decl mov daa std test pop pop repz fbstp fldl cmp mov ljmp cmp je add sbb xchg or in stos push imul clc (bad) jg jle cmp nop or sbb sarb in stc mov outsl xor sahf jno and (bad) fcomip and cmp sbb (bad) adc stos jge aas pop hlt (bad) mov je pop aad xchg mov adc mov adc pop jbe (bad) ljmp cmp sub push iret ss cmpsb arpl jle das xchg add outsb pop nop inc push adc jnp nop les inc jb inc (bad) (bad) ljmp gs dec out or cmp loop dec xchg add jb push aas int sbb cwtl out xor mov outsb push jge hlt (bad) lcall push aam repnz jge ret movsb pusha push mov cmpsb and (bad) (bad) ljmp sbb add in scas xchg adc in or mov fsts jno in lock pushf dec arpl or inc sbb add mov loope push cs fsub and cwtl inc pop (bad) xchg push (bad) sub lcall mov out fdivr dec call jns inc cltd push pop xchg (bad) cmc test pushf adc fucomip sbb sbbb inc fwait dec adc in jp sub sarl jb pop mov xchg leave xor mov (bad) jg jg (bad) xorb adc push cmp in fistp push (bad) aaa lods (bad) xor mov ret inc mov lret dec andl mov imul iret fnop mov (bad) ljmp imul jns pop and jb pop push dec xorb inc fldl cwtl push daa insb mov ret incl lods out cmp outsb add scas sbb (bad) ljmp push mov push mov xor pop sahf xor push pop push stos xchg sbb nop das dec mov add in sbb divb sub fadds and movl pushl in (bad) in mov mov mov cs push test je popa (bad) (bad) cmp jne in jmp inc add and sub dec add jl (bad) (bad) call dec movsb xor ror mov pop je loop sahf outsl dec sti test bound iret mov aaa cmp lods lahf add decb in hlt icebp adc (bad) jmp mov pop stos faddl ret mov cmc inc arpl push addr16 mov push push xor push movb fisubrl loopne (bad) (bad) (bad) call inc into enter adc xor jp push jae pop push inc daa lahf int3 and sarb cld mov repz sbb jae ds push call inc mov and and cld add and stos add mov ret jecxz int into xor aas adc and stos lcall or or lret ss daa cmp (bad) incl leave mov mov add mov and push js cmovb js push adc js outsb jle stos or std mov push add dec and push pop inc push dec mov (bad) fild into je adc sbb add jmp jb ficompl aaa call xlat add fwait mov lds push inc xchg repnz loopne jo rcll xor fbld and push cwtl pusha cld fbld fmuls call inc mov ret daa mov dec icebp (bad) ljmp jge xor hlt lods bound mov push push jmp fucomi xchg or mov (bad) mov stos inc mov pop mov and addl call sbb (bad) (bad) add mov lcall or adc bound mov nop jae (bad) jl inc in xchg nop add jno dec jbe add add and in clc test sbb or das pop iret mov jecxz adc test loope cmp lcall xor dec scas cli (bad) out mov xchg inc push xor subl dec call rcr rorl cltd sbb test push setg aas test ljmp mov push mov add xor xor mov ret (bad) mov bound int lods aam mov or dec jo (bad) (bad) fbstp inc inc xchg jnp arpl xor adc mov lds dec lahf add movsl (bad) (bad) mov mov lods inc mov jmp or add cmp dec sbb mov (bad) jg or mov xchg add cmpsl mov daa (bad) adc (bad) push mov outsb ljmp pop jl in jecxz ja add sub ficoml xor pusha loop cld jg shl xor test sub jno push es clc (bad) pushl js sbb add adc imul jno inc cmpsl iret (bad) (bad) incl or add fwait sub fildll add cmp dec xor adc (bad) (bad) cmp repz jmp add lahf je add jbe test in pop lock push sahf sub add add (bad) (bad) (bad) pushl lds dec push push push pop mov xor lahf insl mov mov (bad) (bad) incl ss pop pop push add out inc mov dec ret (bad) push imul lock aam push dec xor std decl mov aad pop xchg add mov out (bad) jg decl pushf xor enter xor je xor jnp dec push jg (bad) decl adc or inc out jo nop outsl fisubr inc push into adc adc loopne negb out fidivrl push push xchg lock mov adc pop sub sar ljmp add jb pushf jp dec or std fisttp sub or adc scas and into add ja add pop popa and pop jne in xchg mov call imul inc pop adc outsl clc (bad) jg or xchg test pop mov lcall rolb outsb sbb pop bound pop lcall jge or inc cli (bad) ljmp mov adc cltd test imul adc mov adc daa mov xchg dec clc outsl mov dec loop push loopne and (bad) (bad) out mov and cmp jge into lahf inc sbb hlt (bad) shll iret add (bad) das mov sbb inc pop add jnp dec jae movsb jbe fs xor mov test fadd decl popl lret push icebp je push lret (bad) call pop and mov add imul xorb call pop loopne pusha mov jmp rorl icebp sub (bad) mov out mov inc jbe pushf ss (bad) testl cli insb loop adc jle icebp and gs jnp fwait jbe mov rolb (bad) out cli cld cmp dec cmp adc mov inc inc pushf pushf in xchg aaa in incl pop (bad) in ds loope iret aad push mov inc in and xchg outsb xor mov dec iret mov (bad) (bad) call inc or add adc push sbb gs push (bad) lcall inc inc dec movzbl adc decl pusha push testl lds push pop in mov (bad) into jns imul je test sahf int3 or call cld cmp fsin ret out je ret fiadd decl add pop call cmp jp (bad) dec jb ss imul stos decl cmpsb testl lret mov test push push daa jno push ficompl jg add push mov (bad) or push mov (bad) (bad) (bad) mov and fcompl push dec fistl scas jno and rcrb sldt sub and rcrb or lcall sbb (bad) (bad) ljmp add jno (bad) cmp or add outsl push call ljmp mov add and add lahf xor jmp bswap push cmp cmpsb ret inc jo or mov jg mov mov scas pop enter movsb lock and shrb or mov test pop enter movl xchg aas mov jg,pt cmp cmpl rcrl mov loop cmp pop push push ljmp dec ret adc cmp fdiv icebp mov mov mov cmp mov and and daa stos sbb imul cmpsl aad dec mov rclb (bad) xor xchg mov (bad) (bad) call (bad) mov fwait std aaa sahf or lods cld test mov dec pusha add push cli jl or mov sub pusha (bad) xchg dec insb mov in inc cmpsb xchg je sbb lock jg push loop les cmc inc cmp push sti sti loope adc mov test mov adc (bad) (bad) decl loop rol ret jge pop movsb sbb cmp in std shrb jmp ss into pop mov and push movsb lock std push pop out push scas bound pop inc add add inc sbb mov hlt jbe hlt scas shrb sbbb mov mov jae cmc stos ljmp es pop push (bad) imul push data16 std cmpsl add inc ja inc pushw ja add cld lcall fs xchg mov mull daa cmp cmovbe cli fbld inc and pop lret adc lods mov mov (bad) dec (bad) (bad) (bad) ljmp add jnp add mov push je in and sbb sbb mov pop insl pop clc (bad) inc add mov pop dec (bad) arpl mov js and scas mov daa mov push insb or add xor cld dec cmc push pop mov or (bad) add push (bad) decl xchg dec call cmpsb aas stos dec adc (bad) fcomps and mov add add adc test icebp mov stos in jb mov inc add xchg pop jbe adc cmp (bad) incl hlt inc lods mov ds inc (bad) idivl cld nop ds push mov fwait dec popa adc pop jb call pop mov out push cli cmp clc (bad) ljmp addl inc xlat enter lret pushf and fildll out jb out inc fisttpll es mov out sbb (bad) call fimul ret sub xor mov pusha popf pop roll mov jae das clc incl popa cltd aas movsb mov pop mov (bad) aaa (bad) (bad) (bad) mov mov mov xchg (bad) and or xchg lahf int scas in mov bound les inc (bad) lock xorl push cld lds cmp imul lcall dec repnz push lcall sbb cltd (bad) and mov into adc (bad) sahf push dec xor lock (bad) fist stos add mov ret dec mov les or push stos lock call push or mov cwtl loop inc pop push cld decl push push js (bad) cmpb push mov fsubl and addr16 insl cmc mov mov pop loop sub jbe push mov push insb iret imul mov das fdivrs mov loop popa inc mov or les orl mov adc cmp adc xor aad insl es push ret ja (bad) mov cmp push jae aam pop das js in cmp jmp cmpsl and inc mov cmp sbbl cld roll fidivr in mov add push call (bad) insb (bad) jno jnp dec cmp xchg or push cmp aas movsb or (bad) jge push xchg and lret adc cmp (bad) (bad) (bad) (bad) mov call jno iret bound mov cmpsb jno cwtl (bad) (bad) (bad) call add popa push mov (bad) cmc lcall ljmp rorb jg xchg bt out nop outsl in das inc ljmp (bad) scas xor jle cmp cmp sub cwtl sbb nop adc in inc mov mov ljmp arpl pop (bad) subl jge fcompl mov std add test (bad) mov mov icebp scas ljmp loopne mov cmc (bad) fildll push sbb or aas mov xchg clc nop aaa or (bad) ljmp add inc add or pop lea lods (bad) mov and repz and roll push arpl loop adc rorb jp jno or cli (bad) decl lcall add rcrb pop xor subl (bad) mov outsl ret pop sbb mov scas nop sti mov inc dec insb out inc push lcall jbe pop dec sub pop dec add dec sub std push or pop mov fcmovu dec adc push mov xchg int3 cld icebp (bad) pop std test out jg xlat sbb jnp inc loope jp aam cmc (bad) ljmp inc leave ja outsl add rolb cmpsb les movsl aam pop adc mov in (bad) jg fistp mov pop dec gs inc lods fsubrl imul push cld decl add loopne lea mov ror push add or and (bad) (bad) fisttp lods or mov (bad) mov out cmp fldl inc xchg mov (bad) (bad) (bad) lcall push in (bad) dec xchg subl sbb mov and in rcrb test aad cwtl nop xchg or sub dec out nop dec push push jbe xchg add pushf nop xor push (bad) sbb (bad) fcomip push inc (bad) push rcrb testb jle dec dec les (bad) (bad) (bad) cmp nop inc das xor popa sub insb (bad) movsl add in mov ljmp lcall mov xchg fwait mov pop pushf movsb and mov mov iret adc mov (bad) inc mov jg sahf aam ret cmp out ja cli sbb sub cmp or in enter (bad) mov jbe in sbb fisttpl xchg xor ret scas pushf mov or lock dec movsb (bad) mov jo xor mov pop (bad) (bad) jg bound jle sbb imulb jg leave add adc adc incl push push xchg mov mov int3 add jne (bad) jmp je or lcall clc inc inc mov inc outsb pop jmp sti sarb imul pop loope (bad) (bad) pushl fldt or shrb mov int3 mulb cmp push jg insb das sar jmp add aas cmpsb popa add jbe or ja inc add (bad) call cmp inc inc test xor inc enter ret ss shrb lods cmp ret std (bad) (bad) pushl pop push test mov imul inc hlt lods pop aaa outsb inc sub je (bad) ljmp mov push cmpl jg mov lock inc fcomp out and scas adc stos out dec sbb sbb fcomip nop push mov push mov push xchg cld xchg mov or cmpsb (bad) mov jp out inc xchg pushf icebp sbb (bad) pop popf push imul inc add inc loop add jmp cmp mov pushl pop fisub test push push lods popf mov mov and pop inc (bad) (bad) incl (bad) xor inc in mov push cmp pop and mov loope xchg lahf (bad) les lods push cmp sar mov jno adc in and adc call pop fimul pop fs mov sbb cmp jns das clc inc or popl imul sub and jne (bad) mov test imul jae lock and mov adc mov pop mov inc movl mov stos out mov test pop xor mull or rcl daa mov xchg fdivrs push loope cmp sub negl add in mov mov inc shl xor cmp sbb mov out clc (bad) decb movsb popf dec lods enter jno fdivrl aaa (bad) fcoml cltd sbb sbb sar (bad) (bad) push xor sbbb loope push addr16 pmaxub sbb and mov mov sbb scas push std add outsb dec mov fsub and mov (bad) (bad) ljmp mov testl (bad) jb push push mov push scas and lods cld mov sub mov add cwtl loope jns fwait pop mov (bad) (bad) (bad) inc add xchg add hlt or adc and into xchg push mov pop push jg jg adc xor mov add aas mov outsb pop pop (bad) xor xor cmp fwait xor loop cmp test mov mov das cmp imul outsb fldcw xchg mov bound nop cs negl pop add daa mov push and je fadds (bad) out adc adc adc imul xor (bad) incl pop cmp insl pusha sbb and clc jge add enter lcall xchg cmp arpl pushf rorl in mov mov sub pushl pushf xchg cmp jl push jo stc (bad) mov fdivl add cli int outsb and popa add call outsl aas mul jnp and and stos push shrl xor je pop inc push mov or jnp add call push aam je sbb xor pop and subl insb cmpb adc mov (bad) call push loopne or jbe mov in (bad) (bad) fiaddl add sbb push outsl fsubrl or sbb mov cmpsb lcall jne fdivrl push scas in (bad) add ds xor jg mov cmp out fbstp shr or pop leave daa pushf and push add loope lea push out adc orb add (bad) push pop mov dec fnsave mov xor mov jg ret mov aas or xchg sbb adc add daa xchg pop ljmp test sarl insb inc out push xor notl mov in cltd outsl cli (bad) jmp or mov (bad) rolb subb loop mov ds pusha std decl adc idivl outsb xor test add rolb repnz rorb jae (bad) out mov pop or jno aaa test rclb loope xor xchg (bad) out xor sarl push pusha pop orb add or xchg mov mov out inc (bad) incl xchg insb or rorb (bad) pusha (bad) (bad) mov sbb lods sub fnsave cli mov movsb cmpsb pop cld sbb mov pop cmp xor cmp jmp out pop out ret stos push or sub sbb push inc dec sub adc pusha pop sbb push and jb bound test lret cmp pop xchg cwtl cmpsb fbld mov or jg (bad) (bad) sti popa popf xchg repnz int3 add xor mov sbb push test inc pop repz push out adc push daa jae mov aad fildll jmp and and adc cmp inc pop xor pop mov repnz insb mov fisttpl lcall sarb dec movsl cld and push dec mov fidivl cli test stc (bad) (bad) (bad) (bad) (bad) incl aam (bad) mov sub xor inc cmpb out (bad) mov (bad) call or dec pushf clc add imul xor xor jo (bad) (bad) (bad) mov test push mov xor pop add cmp push add ret cld (bad) (bad) mov xor sbbb outsl sbb lea data16 leave add mov (bad) fisubr (bad) (bad) mov faddl cmpsl cmp lods (bad) cmc test add in sahf hlt or in repz (bad) ljmp cmpsl push test adc add das pushf ljmp addb mov mov xor and (bad) jg cs inc ffree pop mov ret or or cli movsl int inc cmp ljmp popa inc mov and fldl mov push stos sub out faddl (bad) (bad) jg sbb and sarb adc push mov xor clc sti and into push mov sbb cli call pushf cmp cmp clc jl or xchg orl add xchg aad mov cmc inc fs (bad) jmp lea jmp or lock incb mov test (bad) lcall mov jmp es (bad) flds mov (bad) stos cmc repnz cltd fiaddl ds test cwtl (bad) (bad) (bad) (bad) incl xlat sbb mov xchg push xor xor popa and out mov or cmp in pop (bad) sub loopne shlb (bad) push shrl mov fldenv mov xchg movsb push pop (bad) (bad) (bad) decl (bad) in mov hlt cmc mov fwait and adc je sbb mov mov pop cmpsb inc lods add andb dec js xchg xor jbe addr16 (bad) out (bad) dec or dec xchg push push jg nop shrl ja mov xor (bad) repnz add hlt sub xor jo hlt sub cmp je (bad) (bad) (bad) (bad) jg mov sub roll pop add adc sbb imul sbb outsl std nop xor andl jecxz icebp (bad) (bad) fstl pushf iret imul cmp out inc mov pop notl in add decl adc and (bad) sbb dec out stos mov shrb sbb jg fsts in mov add or add xchg or pushf js clc mov (bad) (bad) call ret cmpsb jge jmp cmp aad movsl fist pop (bad) jge add dec stos cmp in push inc cwtl popf add (bad) (bad) mov cld movzwl and jae add inc or test fucomip mov inc add jmp iret mov or imul add pop xor adc lods mov leave add or dec lcall ret shlb inc xor loope bound outsl (bad) jmp popf movsb std pop add popa loopne sbbl mov cld loopne ljmp insl mov outsl sahf test add cwtl leave ret add icebp call or rclb out xchg inc mov add mov mov lahf ljmp stos lods popa ds add sbb dec add cmp (bad) call mov ja inc pop arpl mov mov sub rcr lock dec push les xorl enter pushf in push jnp aad cli ljmp jmp ja lret inc or mov sbb cs jg jg orl rol cli inc mov out inc xchg stos call addr16 outsl cmp out inc stos es rolb (bad) (bad) call pop or push adc dec ljmp mov mov movsb or sub xchg jne (bad) (bad) mov mov mov jg jg lods adc xor lret push repz aad (bad) call push ljmp or icebp inc lods insl mov and test mov ljmp clc and sbbl enter xchg cli faddl fs loopne (bad) jmp (bad) bound xchg cmp mov mov cmpsl mov jg push adc mov pop adc sbb pusha add fcmovnb add mov jge inc shll add loopne (bad) jle xor mov mov leave cmp sar (bad) incl out add push shrl add bound pop mov push js (bad) (bad) jmp jge or aaa cwtl mov mov cmp cmp std incl arpl movsl inc or stc and cwtl sahf dec sub jae lods inc push (bad) les fisttp sbb fisttpl push outsl pop call loopne sti and cltd push pop nop and mov add pushf mov (bad) outsl lcall (bad) leave add les loop cld cmp jmp mov ljmp (bad) fbld sbb aaa push mov or sti or sar push outsb or (bad) sbb es call popa push cmc xchg nop pop sbb jp mov jg roll int subl or imul push xor adc jg movb popa je pop fnsave fistp stos (bad) cli mov and ret insb jmp mov call mov jl lcall (bad) lahf test outsb (bad) sahf aam mov aam cli fisttp sub and and jbe outsl clc (bad) mov mov xchg push aaa and jmp aam lods pop xchg pop add xchg cltd jno (bad) (bad) (bad) out dec (bad) jbe out out sbbl adcl or xchg (bad) lcall out xchg mov add adc stos lock (bad) fbstp xchg add faddl popa mov cli cmp (bad) ss mov iret mov cmc mov adc nop adc push mov xor outsl das jl clc push push mov or fnstcw lea popa add ljmp js cld incl sahf jns sbb sbb dec sub dec (bad) sar push push add shrl in imul out cli mov (bad) daa jne jbe pop xchg cli xchg testb jp mov jbe and mov dec mov and fist inc xchg adc or lds (bad) jge daa cmp add xor (bad) cmpsl inc inc dec ss mov add call cld imul mov shrl test add adc dec (bad) outsb mov push aad iret jnp inc or or in adc iret add fbld in mov pop loopne sub roll cltd test pusha ret clc and (bad) pushl add repz sbb xchg cli add ret xorb (bad) xchg rol in dec hlt ss (bad) (bad) lcall xchg pop inc sti adc xchg dec or outsb mov stc in loop mov incl inc das int sti mov loope out jmp pop subl mov fldcw fs test movsb jmp addr16 cli pop mov hlt push adc dec dec adc dec ljmp pushf inc int3 add mov stos pop sbb sbb ret lcall inc or inc popf sub or jbe inc push scas ror inc add imul xlat ss les mov inc fmuls mull or ss xor int (bad) fucomip sub imul stc roll and push or add out xlat int3 jae inc pop ljmp mov jge pop inc pop push inc cwtl shrb fcmovbe jg mov mov (bad) call adc add addb add add adc push cs mov lods (bad) decl xor fsubr ss dec movsb push mov add imul or out and and cmpsl wrmsr sbb mov in scas inc sbb jp or loopne hlt or push mov and push loop or mov dec nop aam (bad) lcall (bad) shrl js mov jge xor int pop sbb push jae rcrb (bad) (bad) fistpll fiaddl mov or das and cs mov inc aaa pop mov (bad) (bad) jmp outsl push adc inc int cmp adc inc sbb ficompl and call or pop push push in aas addr16 ja pop or jbe aas jb push mov sbb lock clc jno (bad) pop mov cltd push test in sbb movsb jg push out inc sahf imul call mov dec dec cmc dec leave fld xor sbb inc jp insl xchg lods cmc or dec mov cld ljmp push ret fs xor add sbb cmc mov jo (bad) mov xchg inc iret (bad) div imul incl addr16 add ret mov fidiv out ja incl lret add in add ja out flds leave popf adc lcall cmp das jne imul pop xchg sbb (bad) (bad) (bad) decl and aaa jns fisubl data16 loope in push push loope xor inc mov (bad) aaa loopne adc adc (bad) nop shrb ss fisttp icebp (bad) aam loopne bound and leave push (bad) lcall inc mov xchg push call and xchg ljmp adc mov rcrb fsubrs dec or hlt ret push mov and dec lds sti inc test (bad) (bad) dec repz das xor arpl xchg into inc pop dec and lret roll outsl mov push loopne push lcall pop push mov fadds inc mov mov cs push mov iret notl test std jno mov hlt loope fxch add jg out lods mov in mov div incl add movl (bad) lcall dec dec add orl jle adc push jecxz add jno xorl clc push popa and cmpl fcomip ljmp out (bad) subl enter js add mov in idiv mov fidivr cli jno stc cmp xchg push ficomp (bad) (bad) lcall loop xor cmp push adc insl lea and jno (bad) (bad) (bad) jmp popa rcll enter imul mov out ret or cmc (bad) jge add imul addr16 xor rolb mov pop (bad) (bad) (bad) ljmp sbb cmpsb sub outsb xchg jno cmpsl stc mov jmp dec push mov sbb mov jne sub mov fisttpll jbe sti push push dec rorb jae cmp jmp cmpl rclb sub orl (bad) lcall dec rorl mov or xor xchg inc cmpsl dec jp add fnsave sbb cmpsl push push inc repz hlt jmp (bad) push mov or stos push push add pop or sbb xchg or mov add push std (bad) pushl arpl dec push icebp int inc lea insb data16 mov (bad) mov (bad) in and mov lcall ljmp (bad) (bad) jg clc pop fadd stos or push addb sbb inc or (bad) (bad) ljmp add test adcl (bad) (bad) lds roll in jb or ljmp lahf sarl or fcompl xor jg (bad) mov lret mov or in loop jl mov pop mov (bad) incl mov fistp push ret mov das and in push adc clc (bad) xchg pop or cli (bad) mov push jecxz add cmp sub (bad) fdivr pop and repz or fnsave (bad) push cld call sub faddl or adc jae jge add push sbb or mulb int fs jg incl (bad) lret into dec pop dec outsb mov addb sbb loope inc mov scas shlb mov xchg addr16 add cwtl inc adc add cld fldt mov mov cpuid jne fcomp data16 adc xor (bad) xor (bad) pushf out (bad) inc insb dec ljmp out addl and jne in xchg add movsl mov (bad) xor aaa icebp out test add icebp or sub jbe add pop and mov jl jno add and insb cmp mov cmpl push push cmp inc pusha pop test aam (bad) mov or subl mov jl or les xor ljmp push insl mov xchg sbbb jnp push (bad) (bad) jg clc pop mov mov pop fistl in and add mov inc les jmp jl aad xor enter lret lods jg inc lcall pop mov and adc mov inc mov outsl fstpl in (bad) call subl sbb mov sub or mov icebp sub inc jecxz (bad) xchg add xlat pushf fldl push and (bad) in test pop pop mov inc (bad) jo jle add out sbb scas adc sub sub lret add out outsb mov (bad) ja int add push ja mov testl icebp sub (bad) or add out adc pop add out pop cltd inc ljmp fnstcw add mov mov xor xor cmp add pop std (bad) (bad) fadds mov subl jns add mov inc and or push lcall icebp cmp (bad) mov and les pop add imul push (bad) out dec add test mov xor sbb (bad) (bad) mov cld add je adc mov icebp and sub gs and push pop pushl xorl ja xorl shlb mov cli ljmp cmp scas mov scas rcrb fcoms loop mov xchg (bad) loope jb jg (bad) lcall cmp dec sti xchg cld loop rolb or aaa lret xchg xor mov lahf xor mov movsl dec sbb out hlt sub jmp js dec in aas movsl inc adc ret call sbb (bad) jp mov mov (bad) (bad) (bad) (bad) mov push loopne fwait xchg cmp hlt mov push inc mov push or cltd cmp push pushl add fs arpl ret xchg jb cltd (bad) lcall sub pop xor mov jmp sub adcl dec add inc jmp sbb add pop mov push arpl add mov (bad) lahf int xor nop arpl jnp jbe aam or shl adc popf sub mov mov out (bad) lcall fs dec mov pushf adc cmpsb shl mov or xchg loop dec leave xor xor lods movsb xchg shlb mov adc arpl lock jno fmull cmp push dec inc popf and adc mov in mov jo int push xchg and mov xchg fisub push xchg sti jl dec mov (bad) jg mov mov xor (bad) or push (bad) jmp movsb lahf push cmpl mov sar (bad) mov or cmp sbb outsb aam mov push dec pop push jo js sbb test das add jae cmp lcall decl sbb dec out loop and or pop lock jns cmpsb pushf sarl or xor insb pop lret inc push mov imul cmc xor mov pop sahf shl subb movsb test daa adc call incl les inc lock inc fisubl icebp mov aas adc clc (bad) pushl out stc and jbe inc rorb jmp cwtl jo test mov outsb push cld inc ss cmp arpl in pop negl test incl outsb aad mov rolb lock inc aaa mov pop movsb mov ljmp hlt push hlt leave inc lcall mov or aaa divb add loope call into out sbb cmpsl inc xor les mov mov clc fsts cltd jl sbb or push sar sub mov loope push adc jg repnz sub inc sub fldl sbb sarb inc pop add hlt push std add ds pop mov jl mov xchg ficoml cmp (bad) jmp rsm enter je xchg push pusha inc and ret jg insl dec int3 je test xchg adc cltd inc inc xchg sub xchg fisttp incl subb insb and push fs push jo sub scas mov enter or pop adc inc in cmp (bad) (bad) ljmp (bad) sbb je test movsb sbb mov (bad) jg ss cmp push jbe jmp pop cmp sub inc mov jp je mov push ljmp or xchg loop je mov add mov sbb mov or lods jns pushf leave mov dec into in push mov xchg jb xor mov pop sub pop mov ljmp (bad) and test imul pop push lcall test push pop and lcall sti cmp push or (bad) stos ficoml fwait subl (bad) pop fildll mov mov adc std daa dec aad aad inc jo dec mov add es (bad) mov pop or rolb inc lret push int3 (bad) dec clc out or jmp add (bad) mov add or aad outsl dec push sbb dec mov jnp dec shl inc fisubl jno xor (bad) (bad) cmp sbb sub add xor fadd iret cmp jp fs (bad) icebp and std cli (bad) decl sub mov dec pushf dec loopne mov lods aam fldl jg test sarl pop adc insl cmp fimul jge imul pop aas lcall fwait jl or and hlt lods adc mov (bad) (bad) (bad) lcall loopne movsl add cmp inc xchg aaa adc sub or ljmp lcall pop nop push pop out out jnp or ret sarl dec cmovae into add fcomip nop (bad) inc out int loop rcl xor aaa mov jle jle test add ficomp fwait mov xor push xchg pushl or sbb mov lahf dec mov fdivl add call clc and scas (bad) sbb xor scas loop mov lock nop enter (bad) pop (bad) (bad) jg cli jmp popa sub loop pop lock add xor jg cmpl dec hlt pop roll aad pusha into or sub rcl incl cld punpckldq xor out outsb xchg stos xchg inc cmp stos adc lret roll (bad) xor subl pop sub aad and jbe icebp mov idivb decl jmp rclb daa out sbbl call scas sub call sbb aaa enter pop ljmp and adc cld fcomip adc aad cmpsl mov stc arpl (bad) jg fs (bad) popf lret cmp or push lods enter stos call add jo int push cmp mov notb cmp cmp mov jl (bad) incl mov push jmp inc and push inc mov aaa insb mov mov lret push jp (bad) out mov negb dec cmp (bad) or ljmp mov inc xor and (bad) ljmp ficompl jns sbb into loop arpl into sti adc push scas xorl inc add ljmp in (bad) jg push sahf in shrl add add or adc and test ret cmp xchg int imul ss out adc push ss pop inc sbb pop (bad) lock sbb jg xchg test data16 imul das xchg adc cwtl test and clc (bad) (bad) jmp mov cmc inc lea jae dec rcll mov jnp sub dec (bad) ljmp pop insb aaa out inc xor aaa dec (bad) add lret and push add jnp jg ljmp pop mov (bad) sbb popf xchg call push incl jo push nop add aam aaa in adc test xchg cld mov add add inc and xor cmp aaa inc lock or push jae les add testl (bad) out test adc aad push mov sub jmp (bad) (bad) (bad) (bad) (bad) out andl mov mov inc enter ja xchg or call loop push jb or (bad) sbb hlt (bad) jmp lock mov sbb push cmp cmpb (bad) jae mov mov outsb int3 inc add je pop or cmp push inc dec loopne cmp mov jae (bad) mov or stos mov pop ss dec loope sbb std inc (bad) push fdivrl outsb or mov mov cmp incl mov fcompl push adc xor (bad) decl add call sub mov jle jg jb jmp sub mov pop mov (bad) (bad) (bad) decl or and divl (bad) icebp (bad) outsl and (bad) xor loop (bad) mov push lret das inc add ds sub out mov mov lcall pop push insb and push clc and or (bad) ljmp dec lods stos ds add arpl shrb mov ljmp icebp (bad) mov loop and int3 daa popf rcrb imul icebp lcall mov cld shlb push mov lds pop dec mov int3 or inc mov mov loopne push adc add (bad) (bad) fidiv jmp add in inc ss cmpsb sbb and pop inc xchg sbb and fadds push xchg mov in adc arpl lret outsb int pusha lds out imul (bad) mov adc (bad) jo sarb inc ljmp and push pop ret jg mov pop (bad) (bad) (bad) pushl rep in inc mull xor enter inc mov xor int3 sub lock out add out or mov (bad) xor (bad) cwtl push and and mov aam adcl pop sarl test or add stos fadds sti (bad) jg inc dec inc push enterw xor notl (bad) (bad) jg mov sti mov inc call fdivrl cmp dec inc or xchg (bad) fcomip call cmp cwtl ja and out std (bad) or or shll ret and inc inc or test xchg repnz (bad) jg arpl mov and and push dec mov js (bad) (bad) jmp add faddp sbb mov or dec shll add sbb xchg inc xor mov inc (bad) (bad) jg xor xlat dec fldenv push sub subl cmp and pushf inc jbe ja cmp sti mov popa mov fs lcall inc inc xor test add sub lcall ds in inc lret pop iret (bad) inc scas xchg or inc xchg lcall scas cmp mov ljmp out fisub inc xchg add in xchg adc (bad) jb outsl lcall ret (bad) std sbb cs aaa (bad) (bad) mov mov out sbb push or cwtl cld outsb (bad) movsb push imul popa jo jb add pop xor in stc les dec lock cld outsl sub add cwtl cli clc fs pushf rcll lock xchg sbb sub (bad) outsl fsubs loopne xchg jle imul sar lock aad fs gs pop xchg fdivr mov xor packuswb dec jb inc pushl scas mov jg ja or sbb mov add inc pop ljmp mov xlat leave mov sahf nop xchg mov adcl sub (bad) cltd jmp loopne adc lds push jns loopne loop pop adc add (bad) jmp mov stos insb xlat in aas fiaddl loop jge call clc incl inc outsb mov or mov (bad) incl pop ljmp ret mov adc or mov out mov push fiaddl inc jg mov jg cmc push loop inc mov xchg clc jb inc jl (bad) jmp and ret fistl inc xor push dec adc mov out cli pop ja jge in nop (bad) add das xlat (bad) add push ljmp (bad) jl add inc pop mov add pop std push push loopne fnstsw xchg nop es sbb or rclb fs fs and push xchg dec pop inc add ljmp mov mov js (bad) xor cmc pop aad mov mov cwtl dec (bad) or mov pop loopne lods mov cmpsl mov ljmp fisubr xchg jecxz mov int loope or jbe movsb (bad) decl xchg or pop sub (bad) sbb lcall jb add (bad) pushl imul xchg (bad) incl (bad) std nop dec pop jmp in inc jmp jnp xchg jg or cmp xchg nopl dec (bad) insl pushf insb push inc sbb (bad) mov dec inc (bad) push jp pop sub cmp fcom stos (bad) call cltd mov rolb test movsl jle andb lods pop sub xor add xchg (bad) enter mov les (bad) lcall ret push inc outsl jo test jmp cli adc mov pop cmp into lcall jo decl fcoml lret arpl adc or cmp sahf call jl stos inc in and push inc mov (bad) ljmp andl cmpsl inc sbb testl std (bad) jg (bad) cld (bad) xor (bad) les and mov pop imul lods addb xchg cmp add test or (bad) repz xchg inc lods mov jg jno push movsb add es sub inc lcall aam inc lods enter sub les decl (bad) add add mov push jp mov adc (bad) adc xor mov sbbl sarb call inc aas mov insb adc (bad) mov pop sbb ffree sbbl (bad) jg outsl in imul adc push fadd jmp add (bad) (bad) mov pusha pop imul subb stc push sub (bad) pop mov add xchg pop enter sbb add int3 push les sub or inc mov enter aas movsl pushl inc push push loopne,pn pop xor call xorl ret push push jp fidivl pop ljmp inc mov sbb mov imul xor outsb stc inc out pop and add mov call out icebp push xlat sti mov xchg push pop cmp movsb cld cmpsb scas nop xorb cmp ljmp and mov shlb or jo or jmp orb (bad) xlat pop and cmp insb pop add inc mov add jae or rol mov or imul aad xor in cmp insb jl mov push rcll cs (bad) (bad) jg dec (bad) cli xor cli fiaddl aas sarb push sub popa xchg cmp mov add mov jg out sbb pop popf mov push cmp cmpsl hlt repz out clc incl addr16 cmp (bad) add mov jmp imul push mov int3 (bad) xor nop dec add sbb sbb pushl imul ss out jg pusha jge loope addl lock push inc cwtl sub (bad) jmp (bad) adcl mov add mov dec jg outsl and xor popf pop std cs push decl negb mov sbb xlat jp js pop fwait jl xor mov decl mov fbstp std and loop lods xor mov out clc (bad) pushl adc rolb pop mov insb push xlat inc ds xchg jle lock or mov ss xor xorl fbld add sub sub sbbl mov ret fwait imul mov ja clc jg cltd fist in inc push or mov or imul adc inc jle loopne add subl add imul int std lcall das rorb repnz aaa adc test repz (bad) mov ljmp adc xor testl jl ja loop jp cmp ljmp daa push inc arpl aad lock cli dec xchg out imul (bad) (bad) lcall rcl adc pop mov imul inc out movsb movsb and mulb jmp jmp xchg (bad) sub ss lcall movsb scas cli (bad) jbe lock and fcom cmc xor ficom lds insl adc ss mov out add sub fisubrl daa sbb (bad) ljmp fisttpll cmp out adc out xchg adc (bad) jbe jmp jmp add shrb in lret pusha dec mov rclb std pop jge es rol add les push sbb lcall incl mov sahf sar xor and add int mov shlb jno or jbe outsl outsl decl adc nop fiadd mov mov (bad) aas adc ret sbb aam inc or dec or cmc (bad) call (bad) pop jp cwtl mov loope repz sub rol pop sbb push std cmpsl lcall mov mov add (bad) fnsave (bad) (bad) aas insb jp test stc mov sahf test push bound cld ja jg xchg push sbb add dec jnp jge mov je cmpsl and or or inc push loop loop clc and fdivrs push ja pusha ret jbe sar inc cmpsb push out sti fsubrs xchg add sbbl pop fnstenv clc inc lcall adc scas call jg mov int3 roll push pop jmp inc push outsl in inc cltd lcall jg mov cmpsl sbb mov (bad) aam push mov sub popf mov push (bad) (bad) (bad) ljmp bound push lret cld and into aaa jno (bad) in rcrb (bad) mov cwtl and and sahf or cmp dec jp mov jg fwait add push cmpsb out adc push and (bad) sub cmpl mov fld push or pusha cld inc sbb cs fwait add pop jge inc dec ficompl data16 gs ret pop cli mov les xchg add dec rolb ret dec xchg call lret jmp out inc or fstpt push add insl xor lds push aam jecxz test jg jle mov cmp dec or jmp add jg ja lock rolb into dec xor je out lcall lea lahf ret mov mov mov test outsb nop loope adc sbb sbb mov in add stc loope push push xchg mov (bad) (bad) (bad) cmp ret mov aaa or mov movq fiaddl icebp mov out outsl cli aaa fimull inc inc mov aam int mov jecxz cli push leave inc mov fldcw pop jne fistpll call (bad) incl scas in fmull or and sarl out jge (bad) mov pop inc cmp punpckhbw call mov imul dec popf icebp outsb les outsb pop add (bad) dec cs repnz aam frstor push popf test out clc aaa fmuls add push fstpl int3 sbb fsubs (bad) push sbb fcompl clc (bad) (bad) fild inc in inc push mov jmp push imul mov es les pop jp (bad) push dec jmp shrb popf call fwait (bad) popf and call (bad) mov data16 test jbe (bad) fstpt (bad) and xchg adc and add fcomps dec daa cmpsb sub cmp (bad) (bad) lcall aas lret sbbl jl das jnp mov jg (bad) data16 (bad) mov fwait outsb loopne or sub xor (bad) pop icebp or jg or loop pop dec std out push jns movsb mov movsb cld ds lods daa sarl xchg stc or (bad) jmp xor and cmp jno sub xchg sbb xchg xor jl cmp repz inc cmpsb push cmc push stc xor jle es lea inc cmp push mov sahf mov xchg fnstcw call andps push fbstp push nop icebp pop (bad) cmc add (bad) idivb mov loopne int3 inc xchg or xchg or jg gs cmp mov ljmp adc test movsl ljmp hlt adc fnclex push lock jno add mov sahf lods mov cmp mov fadds movsl nop pop clc mov std sub xchg add daa mov in push shrb out mov mov mov jbe add rorl cld idiv daa and sbb test or push (bad) cmp inc (bad) jg stos pop or cwtl hlt (bad) cmpsb (bad) jmp clc push dec mov insb sysenter xor imul push xor sub dec jmp cld pop mov sbb push gs jno add cmp inc mov mov (bad) (bad) inc lret leave add add sbb and insb inc ljmp dec xor cmc decl push sub es cltd (bad) movsb sbb bound pop pop mov xor movsb dec mov jbe jns jne sar out mov adc popa lcall testb into les push jo clc (bad) incl adc mov test std push mov add sbb pop dec or imul aam movb nop addl sti stc movsb inc das ja test pop movsl ret (bad) decl cmp (bad) pop jo pmullw push push ljmp pop cmpsl mov cmp mov xchg adc jg ss int sub test mov insb or mov jne fnop sub andb es (bad) lcall shr sbbb mov ss and adcb add icebp flds leave add scas jno repz mov loop in mov stos add sbb push add push mov incl cs jbe mov sarl inc add sub sarb adc inc mov enter (bad) (bad) cmp adc nop out xchg into ret mov insl bound adc inc jecxz mov sub insl mov pop push clc dec inc adc call dec lock lods jp in lahf and push inc jmp mov pop inc xchg das es cltd out inc int ljmp xor lods pop push mov fwait lock jnp adc incl call fistl inc and test loope push pop test mov mov cmp scas xchg aaa or jg in out daa cmp mov ljmp add enter xor xor mov outsl ljmpw daa lds insb mov scas push in test rorb ret incl inc mov mov cmpsb jp ja add loope inc cmp jge ss mov mov jo fwait mov adc mov and inc push inc xchg cmc or nop jb and xchg add es icebp cmp test loopne (bad) aaa cld xor pop and or ficompl test movsb xor or (bad) fdivs pusha nop fcmovnbe pusha lret pop dec bound mov pop mov push outsb fiaddl outsb adc push jns sbb mov or mov fcmovbe insb std (bad) decl cmp test and xor cmc mov mov (bad) fbld push add cwtl add jns push loop (bad) lcall push stc mov adc jo outsl adc xor (bad) decl loop or xor xchg aaa fiadd leave or add xchg (bad) loopne cmp fnstsw (bad) das fsubrs leave movsl mov (bad) pushl inc int3 add lds cmp pusha (bad) push adc lret mov adc ret ret outsb loop cmp les jo (bad) jmp mov outsl int3 mov ss or insb arpl repnz ret call (bad) jmp nop jg mov in jae shlb dec or cltd jo call call adc loop adc add jecxz icebp out and dec jo mov and and (bad) jg cli int3 mov inc pop cmpsb pop jnp mov and inc push or jg pop mov movsl (bad) call or inc push mov push jp ljmp cmp adc (bad) xchg rclb xchg xor imul mov inc int3 xchg jge inc inc dec jecxz subl and jg xchg mov xchg mov es fsub js (bad) jg pop fidivr outsb fdivr icebp sub dec push popf out je sub lods cmpsb (bad) (bad) mov push jp (bad) mov inc cs and dec and push or inc stc push jle decl cld test mov test or or jl stos jle mov or ss add lcall mov adc or lods xor jle push out mov cwtl cmp (bad) mov pop loopne rclb js mov push data16 orl xchg pop xchg lods inc or dec pop insb sbb add (bad) and fsubl or (bad) (bad) pushl add cmpsb outsl imul insb je and adc inc clc dec (bad) (bad) (bad) (bad) jg push mov xchg gs inc mov out insb mov rorb or ss clc data16 mov fsubrl je lret ds movsb jnp das clc decl roll loopne fldt mov or or dec cmp cs fmull outsb cmp adc (bad) jmp add jnp je rcrl or inc push or incl adc mov shrb mov mulb ljmp xchg mov and and add mov dec sbb add (bad) (bad) mov inc pusha ja lret int3 enter xor ss fcoms cmp fimul aaa arpl iret mov xchg clc (bad) mov add into scas jmp sbb mov movsb dec inc sbb jae ret in add (bad) fisttp add ret cmc call int3 loop (bad) (bad) (bad) cmp ficoml push add stos add xchg push imul pop outsl lcall mov xor or mov add fcmovne sbb jmp call sbb dec push jmp cmp jle jno push or (bad) jg icebp aaa fimull aam rcll mov insb cwtl sub movsl sbb adc or mov push stos aas stc and out mov adc push sub aam inc mov je adc into xor xchg xor ret loopne sbb xor adc cmc mov mov sub adc add mov repz (bad) decl fisubr cmp (bad) or les rcr leave clc jg jmp fadds int3 mov stos push jg jns mov mov data16 xor sarb mov push (bad) (bad) (bad) incl mov daa push std (bad) into inc std enter and cmp cs xor leave decl subb dec lea sbb test xchg adc add push ja ret pop ljmp sub (bad) cld mov add adc mov cmp (bad) (bad) fidiv jg push xor aas sub xchg adc push dec das cli scas rorb dec mov ja and or inc lcall inc push push nop jge mov imul call mov bound jle inc push push push dec jecxz test or and jge data16 out sbb cmp insb test test mov dec pusha sub mov mov adc sarb arpl jg cs inc iret leave add hlt mov ss xchg add add xchg sbb pusha inc aam (bad) dec pop cmp push or lahf hlt cli mov or pop lcall dec mov das in pop xor std aaa push cld nop add and lret pusha push (bad) out add pop pop icebp test push xchg push and mov incl push aam jno out xchg sbb adc cmp xor (bad) jmp push and mov scas cli fcomip mov adc fldl push jmp into test sar lock dec (bad) and add push fnsave inc push mov adc xor stos roll outsl add (bad) mov push popa daa mov mov inc cld (bad) (bad) (bad) call cmp adc jns inc inc ficom orl data16 and add push push ds out cmp in sarb (bad) jno (bad) (bad) in sbb cwtl lcall add mov jnp fcoms std pop daa arpl pop xlat outsl pop add sahf xchg icebp out arpl pop jl jbe gs jnp jo pop xor lea (bad) mov movsb sbb jl cs ja or mov dec jg push outsl les ljmp xchg outsl loop pop jge (bad) hlt or add or cld cwtl pushf (bad) (bad) or nop inc movsb aad subl add in data16 mov leave mov imul pop or fcoml pop mov jbe jp (bad) (bad) decl stos inc imul xor cwtl lock and bound (bad) scas les sbb addr16 jp cld fimul or cltd mov cmpsb inc pusha xchg cwtl cmpsb mov lea sbb ljmp mov fmull pop cmp fdivrs jle out mov push mov ja adc (bad) (bad) incl out ss (bad) pop test push xor adcl pop cmpb inc inc lcall imul daa out mov mov clc xchg xor inc sbb lods cmp mov add lods push jbe sub or dec or mov mov jmp jge and mov stc cli or cli (bad) (bad) cmp sbb lret lds cmp push jae ret push mov loope aaa inc xchg ret jne and jl and les sbb (bad) mulb ljmp jmp push push mov enter shrb icebp inc mov pushl mov rol xchg fnstenv rcrl add flds adc (bad) (bad) call or or test push sbbl sbb mov subb (bad) inc mov or sub je mov add or xchg sbb fiadd std mov cmpsb cmp jmp mov sbb pushf push mov loop jp mov int3 ss lcall cwtl and cmp outsb jle es out pop lcall incl mov push add pop pop fsubrs fstps jnp push dec xchg pop in (bad) jecxz add (bad) (bad) ljmp mov scas in test inc cmc fstpl cwtl js enter xlat lock jecxz jg in popf inc push push sahf cmc mov pop je (bad) (bad) decl or call mov xor cli jle scas jge pop add xchg adc cld (bad) (bad) mov inc mov (bad) jg in fbld cmp ret sbb clc (bad) incl pop sbb out mov mov pop rorl icebp je sbb movsl mov in (bad) mov adc jle (bad) (bad) decl mov jne shr and out jbe iret xchg or pop icebp rep aam fidivl push sbb inc push dec push pop mov data16 sbb pusha add ds hlt pushf add out fisttp pop mov daa dec ljmp pop and incl add mov add inc mov push add (bad) insl push fildll fcompl or xchg jbe add stos pushf sbb inc and push jp sbb fimull adc les cld push add rorb sti dec (bad) loopne (bad) lcall xor mov cltd inc gs cmp in (bad) loop push and sahf (bad) aam cli (bad) jg xchg sub imul aaa adc in jo imul push test cli (bad) mov roll or xchg cmpsl dec xchg mov in (bad) ljmp out (bad) mov enter je adc dec mov dec movsb subl pop lock int3 adc sub sarl (bad) (bad) fbld (bad) mov daa int cmc daa movsl jae sbb inc in sar add repnz cmp xchg pop ljmp dec daa stos jecxz rcrb cmp mov mov mov (bad) jg nop push cmp imul imul (bad) (bad) (bad) decl sbb mov add jae xor test ss nop dec mov or (bad) decl cmp or aas addr16 mov sarb jmp cld mov xor loop int3 insb inc std sahf loopne insb mov or test pop or mov cmp inc ljmp inc mov arpl incl sarl xchg ja cmpl jmp dec (bad) (bad) incl rcrl xchg push xchg jge mov adc js pushf and lods loopne (bad) pushl jnp cmp lock (bad) cmp push cmp jg sub pop ret das clc mov mov (bad) cmc outsl mov jnp es (bad) pushl inc jmp adc gs je jbe icebp jecxz add add clc adc pushl std sbb inc popf sbb sbb xchg adc add push frstor ljmp mov nop imul js movl inc xchg push lods call cmp pop cmp call test lcall cli inc fnstcw inc (bad) inc int sahf stos add mov sbb fcomip outsb xchg mov lret cwtl call cmp inc push add or aaa loope fldt cli incl loop clc mov (bad) xchg cmp cpuid push fprem1 or add shr jg ljmp xor jno push std call movsb adc xor inc cmp add movq (bad) out mov sub inc aad add push popa mov and add dec daa sbb (bad) clc and push in jbe mov inc or jmp fadds pop xor adc xor xchg xchg and decl pop dec loop loop aas add dec mov lea mov faddl daa mov movsl das sar aad shl adc sbb xor xor xchg lock ljmp cli adc inc (bad) sub jb pop jp pop cmc inc jmp mov push test cmp lcall add clc in addb pop lret cmp pop pop fsubl int dec push loop (bad) fistpll and push pop push sbb sbbb nop inc push xor add adc test lods sub add push (bad) cmp jb pop sub mov sbb pop popf rcrb (bad) (bad) incl add adc xchg add add xchg sbb mov xor icebp ljmp mov sub call lcall (bad) incl popf inc mov inc mov cmp sbbb and and shr lock ljmp pop jnp mov or sbb cmp and mov mov push jle adc (bad) inc inc or out mov and das xor inc jae les pusha sarl aaa jmp xor and inc xor out mov call push and fxch dec ja add test push nop and or lods push dec or (bad) call jg fadd xchg testb movsl add sbbl ja xchg pop (bad) mov jle shrb sbb mov dec sti lret push mov sbb leave lcall dec enter add cmp int jbe push push and stos out push cmp popf mov lds ret xlat push (bad) (bad) incl dec adc or fucom fadds pop loopne or dec lret js (bad) call inc jg jecxz aas mov dec xor adc into (bad) mov cmpsl lds hlt or push in inc fwait dec iret pop stos and mov (bad) push add jmp mov sbb inc ficomp adc (bad) incl in mov sbb enter xor (bad) lcall clc push js les outsb fsubrl iret xlat loope je sti sarb jne add inc iret in mov ds rcll lock je push cwtl loope add mov ds cld sbb xor dec adc int3 (bad) cmp sub repz fsubl dec (bad) mov adc dec push or loopne add testl xor out or ljmp push and ficoml scas sbb imul sbb fidiv into xlat cmpw mov lcall cmp std enter mov clc push push pop in or add (bad) and testl dec add cmp xor mov addr16 subb outsw adc push cmp cmpsb fwait mull xchg inc mov (bad) (bad) mov int xor loop sub (bad) scas add jmp mov (bad) jg fcomip lea adc mov fadds inc sar push orl lods nop insl xor mov insl dec mov loop xchg pop stos sbb push jo xor inc push bound int3 (bad) ljmp push fldcw inc dec push lods push mov jge sar enter adc or inc jnp dec js sar lods mov and xchg imul mov test aaa push xchg add mov (bad) imulb fcomip (bad) pushl je and faddl ljmp shr pop sub decl icebp inc jbe or fs pop jge mov lods aad (bad) (bad) (bad) lcall adc jno lret xor jne aam lds cmp or shrb orl decl xor pop xchg cli add fucomi fistpll pop mov popf (bad) pushf dec enter mov xor or cmpsb dec and adc push mov inc (bad) and (bad) xchg data16 outsl lds xchg and testl insl push lock cli xchg loope (bad) bound mov and insl nop inc in sub sub mov fnstcw inc les scas lods dec (bad) mov push pop fstpl out cmp mov pop adc rcl or push cmpsb insl push dec mov adc testl mov lcall push std xor rorb lahf adc mov loope leave in jb cmp std sahf cmc (bad) cmp stos inc ja sahf iret stos mov dec mov test fdivs (bad) (bad) mov andl ss aas cmpl add or sar pop lock cmp fisttpll xor incb push movsb pop xor out cld pop and rclb sub mov jmp push mov adc in in cli add jg call roll pop les daa popa pop aad xchg js test jge jg (bad) incl xchg nop xchg cmp cmovbe fs adc (bad) cs subl ljmp adc inc (bad) (bad) decl mov comiss cwtl das xor mov imul idivl lods adc in adc xchg fisubl sub hlt repnz aaa outsb leave add (bad) (bad) fcomip into data16 mov (bad) ja inc lods and pop xor call add pop call xor adc ds clc mov call cmp aas movlhps and pop jg push aaa or jge (bad) dec and mov je mov je arpl (bad) (bad) lcall cmpsl stos mov or xchg fildll or jmp fild iret mov mov add repz sahf add out fnstenv aad call add jns push mov sub jp pop and fcmovne mov test sub pushf out mov out cli scas jg sub xorl mov out cwtl push push xchg adcl mov idivb cmp incl add imul decb adc push (bad) pcmpeqb mov call add lea (bad) mov in mov iret flds ljmp inc (bad) (bad) in jmp loope stos outsb (bad) gs rorb mov sbb mov data16 pop hlt fwait js inc mov in jbe (bad) jg jge xor insl mov pushf adc mov push pop movsb push fisttpl ljmp lods aad (bad) and js xor pop jo push push test movsb fdivrl push push or push out xchg dec loopne sahf orl outsb bound mov jne inc nop jbe push or lea sbb lret jb ja outsl outsl cltd inc xchg adc cmc aam (bad) lcall mov (bad) jae mov and (bad) aad xor test xor mov aad sub (bad) mov std rclb ja sub cmp push rolb inc and cwtl stos add (bad) decl or mov idivl or xchg mov loop int cmc sub cmp adc mov push push push pushf push jbe inc cmp call leave add (bad) jmp cli jb (bad) xchg add adc iret mov jae cmpsb pop arpl icebp xor dec mov bnd pop imul (bad) popa loop sbb mov jo add jnp rorb rcrl call lcall (bad) add (bad) cld jg les lock pop push insl mov ja mov imul idiv pushl repz nop push adc imul or pop add enter inc push push sub fs jl sub sub xchg fmull push sbb push loopne sbb inc out clc es fs jns fs add inc outsl jb cltd sub scas cli cmpl jg bswap xchg add adc test scas clc pushl mov mov fiadd jae sbb cmp adc sbb push incb (bad) push cld loope (bad) fstpt in mov mov nop xor cmpl adc mov mov nop mov dec ret test inc les cmp mov hlt sbb fs push jp (bad) pop ret cwtl mov adc xor push ret cmp add negl jg lods dec ja or ljmp sbb arpl outsl cmp pop addr16 pop mov add enter jle pusha jp inc decl decl jl or push cmp pop xor clc pop adc pop and call (bad) sub insl insb dec or xor (bad) fxch flds (bad) outsl push aas or stos mov mov outsb inc int cmp xchg push (bad) jmp mov sbb pushl push out xchg inc sub imul add fnop sbb lret mov sub lahf je xchg (bad) (bad) cmp or out add and add sub mov jg nop jmp idivl cltd in or dec add (bad) jmp xor movb add push daa repnz (bad) add pop mov call imul mov ret cmc popf jge cmp (bad) (bad) (bad) mov mov or call add outsl and push jg mov repz xor sub jnp roll scas inc cld or clc dec loop (bad) ljmp pop mov shll cmp and inc loop call add ljmp adc (bad) ljmp add inc inc inc inc pop aas sti and and cmc (bad) jmp inc mov sahf lods adc push aaa jo dec cmp mov and (bad) jg mov lods lahf mov jp idivb cmp lock subl std xchg mov paddb decl mov mov insl mov rclb pop cltd std (bad) decl and cmp push inc inc mov repnz jl fidivl jmp jns add xor adc mov inc pusha add cmovb sub js or es add shrb mov xchg xor rorb and or and imul xchg cmpsl pop pop loopne cmpb lock or lea mov jae dec cld les (bad) fwait sub mov ds (bad) inc clc add dec mov movsb dec sti notb adc (bad) or aad test mov (bad) (bad) jg rclb (bad) sbb fldt jne sti push jbe into adc or or jp call dec ds clc (bad) (bad) clc andl (bad) mov jge fist sub cmp mov push pop mov jmp ja jns dec es pop jmp (bad) (bad) (bad) jp (bad) aam pusha es dec cwtl imul or je sub scas insb fildl repnz movsl inc in add sub adcb or or stos (bad) (bad) (bad) decl repz xor mov repz fdivl in fwait in cmp (bad) mov adc je stc addl andl ret (bad) sbb (bad) jmp mov pop inc push shr pop imul mov sar pop or (bad) pushl jne cmp cmpl mov mov sbb push and icebp inc xchg sub mov (bad) (bad) incl or push push cmp mov add pop je inc frstor sbb lcall xchg popf mov jmp jo mov pushl clc mov enter and hlt add (bad) lcall ljmp mov dec add lea push std pushl sub ja add rcl js cmovge cmp pop sub (bad) xchg fisttp sub out and push js fyl2x (bad) (bad) (bad) push lret in pop ret jecxz cmp (bad) std dec pop pop fucomp and jmp (bad) push or mov push push ds into add in iret lods sti mov scas in jae add (bad) jg cwtl xchg test sub pop fs test add (bad) (bad) in es cltd repnz cmp inc mov adc inc popf xchg xor loopne ljmp jg fiaddl fstl and (bad) cmc push test and inc mov (bad) incl add ss lcall lock push pop mov scas add (bad) mov or aam and inc clc stc (bad) mov adc dec xchg adc sbb xchg push mov iret jno out xchg pop dec nop out cmpsb test in repnz sahf hlt or add xor jle pop pushf ss jge nop dec hlt jg lock inc adc mov loop incl pop in addr16 (bad) es and mov movsw add add mov mov pop cli mov xchg test cmpsb fcomp out popf and popa loop mov pop std dec add push mov push push inc in je outsl js cmc out mov xor stc pop push pop icebp mov in scas jg ljmp cmc and mov mov push sti das adc (bad) jnp int3 dec jecxz jl ss add xor jae add push cli add (bad) lret mov jae xchg sbb ljmp sbb sahf clc inc aam add (bad) jmp inc fdivr mov fucomi les mov or (bad) jg push mov or scas sahf out repnz (bad) call lods dec push into hlt adc test fimul aam jmp or pusha sbb shll sbb loopne add lock dec je sbb repz add ljmp add inc cld ds notb mov and jp fs inc stos add (bad) (bad) jg fiadd daa jge dec inc jne movsl daa jnp in call fiaddl clc or roll push mov add (bad) decl or repz pushf loopne arpl lcall mov add jle loope or dec loope jo (bad) (bad) jmp cmp cmp es sbb or inc popa or repnz ss (bad) (bad) mov out inc insl adc jns outsb (bad) mov inc xor dec sub xchg pop inc std and scas inc or adc (bad) cmp bound (bad) leave jecxz inc or jbe in sub call lcall in mov jnp pop push inc iret lret xor (bad) (bad) call loope lcall dec stos cmc lds push or pop scas cmp loope das clc fadds pusha sti mov pop mov or sub mov and dec or lock gs pop cwtl cmp lock mov mov or mov mov xchg les outsb mov sub pushf and jne fcoms add test add (bad) (bad) (bad) jle inc jae ja push test jg and dec pop mov mov mov (bad) (bad) (bad) jg jne inc fistpl dec ja push jno aaa jp ret arpl inc add testb notl mov clc ja mov mov jle cmc pop sub (bad) ds decl cmp ds cmp inc xchg daa cmp mov mov in lret mov mov scas inc js and in inc in push xor js mov (bad) (bad) (bad) jg mov push imul andb stos lock ljmp scas loopne (bad) inc inc je call loop adc push or sbb pop mov test test add inc and call and sbb inc out popa mov clc (bad) cmp ss fcompl sbb mov sbb icebp add outsb bound stos add or mov incl mov or jecxz (bad) ret testl pop xlat inc mov jnp xor aas cmpb pop out pop aam jle mov ljmp adc lret mov cmp nop xor ret xchg add smsw mov sub pop mov dec and add out sub inc and ss cs (bad) adc pushf pushf jecxz adc (bad) (bad) decl fstp (bad) rclb pushf lret xchg mov aaa jne cmpsl in adc xchg jb aaa push mov std scas fs mov scas dec aad cmp cmp add addr16 jbe add adc or (bad) jno rcrb lock or nop das fiadd pop lock or scas clc jo int stos mov jo clc call and ljmp sub pushl cs push hlt mov aad inc mov and (bad) cmp fsub (bad) lock cli out es pop or mov sar (bad) mov add adc (bad) mov xor pusha js in xor adc (bad) push pop or (bad) out push imulb in sbb jo (bad) push cmpsl cld and out aaa punpcklwd (bad) adc or leave inc (bad) mov inc mov sar out nop xchg andl push ja or push repz (bad) (bad) incl rcl repz sbb sbb clc mov mov mov (bad) testb decl mov call in and out sub or insb popa data16 repnz mov mov cltd aaa shlb arpl rcrl mov icebp (bad) fisttpll mov clc cld (bad) lcall sub mov call push and insb and add (bad) or fwait inc push mov inc jl mov xlat mov popf movsb movb inc (bad) sbb inc sbb add cmpl (bad) jge rolb dec cs cmpsb xor fild sahf inc call int3 xchg dec or pusha mov and outsb add decl and dec mov addr16 jge push lods or aaa mov and mov pop cmc (bad) incl and push sahf rcl push sbb mov aam pushl dec mov nop nopl rorb out add shll xchg lock movsl mov jp icebp sub jle movsb mov push cmp xchg fwait out pusha test mov loopne sbb icebp iret xor pusha cmpsb (bad) push inc push test add notl add aas push sbbb ficompl roll orl roll push aaa mov mov pop adc adc add dec loop adc stc dec out dec (bad) lock stc and xor cmp repnz xor jle sub hlt outsl cmp (bad) mov jecxz ja and arpl jmp push adc jl xchg popf adc rorl (bad) mov sub (bad) (bad) lcall push pushf xorb daa xor and ss lahf jp call inc xchg cmc lcall pop call sbb in in movsb lods push std popa loop out rcrb cmpsl inc test jg fidivl push cmp pop (bad) aaa add (bad) incl nop and add rorl xchg insb inc pushf jae mov mov jmp repnz arpl flds rol fsubl test clc scas cli jmp jbe stc outsb inc xchg pop (bad) fisttp sbb and push bnd ljmp cld nop pop add mov test push data16 pop lock and mov bound add call icebp (bad) jg sub ficompl imul sub dec pop shr or mov inc nop addr16 (bad) (bad) jmp in inc xchg nop jne das push stos add or mov movsl (bad) xor divb movsl push mov pop shrl rorb (bad) decl in sub testb push ror xor mov std jg loop and push mov add sbb jg fild jecxz and (bad) jo mov mov (bad) mov or add stos test or popa add popa xchg adc push loopne sub bound inc cmp (bad) pop imul daa imul (bad) mov fsubl lock or mov in cmp push dec ret je mov andps sarb and xchg mov out jo pop mov mov cmp aas cwtl mov inc add fistl mov adc aaa inc test pop and jne lcall loope in inc movnti or ja dec iret ljmp std (bad) ss mov lds xchg mov sub pop dec divb int xchg test mov shrb outsb cld jo mov adc sub (bad) and pop xchg (bad) subl fsubl clc dec pop movsb lahf loope (bad) incl cli sbb fadds add and jl ret push fadds data16 test jno mov (bad) (bad) decl jp fwait loopne sbbl sbb sbb nop stc in icebp inc sub cli scas mov adc xchg aas lock sub leave mov imul (bad) aaa js xor arpl xlat decl sub cmc and dec push mulb std out add addl and jg push (bad) mov arpl mov mov xor inc insb xchg push (bad) or bound ret sbb mov sub loope fs mov sarb xor incl (bad) mov fwait add adc ljmp cmova cmp push cmp (bad) (bad) (bad) jmp and (bad) or mov sub psubusw mov xor and push js popf les add (bad) loope out sbb daa mov mov push lods (bad) add pshufw jo aad (bad) incl lea mov add mov xchg aam mov cwtl jne in pop xor add jg push add (bad) jmp cmpsl cmp dec in ljmp clc outsl mov popa in loopne sub subl inc lret sub call int3 call adc inc (bad) push dec add mov mov ljmp mov adc shlb (bad) lcall or outsl sbbb insb ss or pop push rcll inc movl scas ljmp js jp xchg xlat pop mov add and pop or lds and sar int3 and cmp enter xchg loopne push nop push add mov inc outsb jbe cmc ljmp nop sub inc adc adc jmp cmc outsl lock cli orb mov gs mov mov pop or lea or xorl adc cmc inc add addl pop inc mov adc jne addr16 (bad) (bad) jg cmp test add cmpsl adc and add ljmp lds (bad) (bad) mov xchg in or sub xor outsl ret in (bad) pushl or nop push out in inc lods inc lock push (bad) sbbl jg cli decl sarb (bad) call add andl adc cli (bad) (bad) inc cli fadds cs test loopne xor scas sbb xor sbb (bad) (bad) ljmp or test insl add dec cmp add call nop gs (bad) jg sbb bsr subl into adc pop inc add cmp ficoml xchg sti nop xor mov sti push adc ja (bad) pop or pushf and test pushf or sbb and and dec (bad) std call adc (bad) out nop sub mov inc add lcall std call call sub mov insl bndldx mov (bad) outsl je addr16 push push cmp shrl test push dec jl push (bad) and scas sbb aam shrl clc mov mov mov sbb insb fwait movl xor in sbb mov test add bound ss sub stos mov fwait sub lcall mov roll dec dec ljmp std mov add out fcomps shrb xor les sub jno in mov mov nop inc fimull dec fildl inc sbb push mov add pop or fldl arpl cs (bad) (bad) pushl mov sbb mov inc mov mov mov inc mov pop cli jmp and inc out fcmovbe add or xchg and mov das mov adc xchg (bad) aas cmp (bad) jg fsubs mov mov pcmpeqb cmc mov cli sub (bad) (bad) lcall mov out loope pop or dec pop enter inc jp ja std nop adc xor adc xor jbe,pn mov jbe add add movsb dec add aaa dec add dec add pushl mov fisttpl or out mov aaa insl xchg (bad) (bad) (bad) std push and stc lahf inc rsm xor test jle xchg lcall cs push mov insl push jb popf adc inc cld (bad) mov les testb (bad) (bad) jg lcall test fcoml xchg mov mov push pushf (bad) jmp mov (bad) decl frstor pushf rorb and sub cwtl fmull push lds rcrb icebp add mov iret das pop icebp (bad) fbstp loope into scas mull ss arpl mov adc (bad) jg lock sub push sbb (bad) adc dec jo cmp clc dec inc (bad) jle and sbb or (bad) decl subb cmp cld mov (bad) aaa sahf loop mov pop outsb add push dec sar mov mov mov inc mov mov jmp cs mov stc enter repnz sbb popa add adc push test sub add jnp callw inc xchg push dec in rcrl dec add ss inc xlat cld ja cli jb jecxz inc hlt mov rcrl ljmp xor jecxz sbb and fimull je out stos add add aad mov (bad) (bad) (bad) push xchg in xorb js (bad) add add (bad) adc add xchg jp fcmovnb adc xchg (bad) (bad) mov clc (bad) hlt or test mov out repz xchg les dec les popl data16 xor jg cld cmp mov push sbb ljmp outsl stos pop ja cmp nop dec in out pushf (bad) out hlt ljmp mov aaa adc add fisubrl cli dec add (bad) fiaddl sub sar sbb les mov dec cmpsl add adc ljmp mov push rol mov cmp xchg mov pop (bad) (bad) (bad) incl pop ds stc add jl inc jo sbb jnp mov push (bad) dec cmp mov pop or (bad) dec cmpsb xchg pop sbb stc clc mov (bad) (bad) incl in or ss mov loop int popa aad (bad) fldt cmp cld sbb adc xchg push out insl clc rcll aas mov mov scas loopne xor inc xor and mov inc insb cmp or popa daa cwtl xor (bad) or (bad) jmp jnp rorb and call or outsb adc fldenv jle loopne or jg loop daa xor bound mov or cmp cmp ja dec mov and cs mov (bad) push xor mov dec jo xlat pop pop lcall add daa sub popa sbb dec or (bad) (bad) inc sub jae lods cmp daa or push adc mull sbb cmpsb cmp nop jns add bndstx or dec and pop mov or (bad) pcmpeqb fs mov mov xchg lcall out adc and push in mov xor (bad) incl mov je scas add adc mov bnd sub or test and add ret cmp adc out jp sub mov fnop (bad) out jp adc lock loop (bad) sbb inc fbstp add adc data16 (bad) xor dec and pop fcmovu mov or push into std mov jmp inc lds pop push imul insl (bad) lcall dec and sbb in and aaa jnp jg outsb nop or mov lcall xor cmp jo test (bad) mov dec sti cmp mov mov xor popa lahf xor stos dec xchg dec dec por jns pop fildll push fs sub js mov adc dec ja push fwait sbb push or sbb and std call or or pop aam sbb jo insb loop push cs sbb mov sbb mov cmp out xchg (bad) lcall (bad) mov jmp mov mov or jae sbb add out ret cmp ja pop popf mov mov or adc or lret cmc mov push pop or xchg fldt sub test mov adc xorl js js (bad) mov or bound adc and and cmp xor jne lock xor orl cmp (bad) jg in andl and ja mov sub test in mov cvtps2pd mov lock aam pop jge ficomp xchg jmp or add fbld pop pop push (bad) jl push cli jo xorl or jb mov jg sbb clc decl loop sahf push push jo pop dec push mov sarb or or pusha lret loope xchg stos jecxz sti (bad) ljmp nop and (bad) jmp cmp push add pop cwtl iret push cmpsb jo scas sar (bad) (bad) (bad) jle sbb jbe pop leave cmpsb ss and mov insl (bad) and and add clc outsl and cmpsl push mov jl mov cs mov (bad) out add cmp adc (bad) jae cs ljmp and xlat jg cmp add mov sbb aas scas in clc sbb mov (bad) fcoml pop adc loopne push mov gs loope dec jecxz mov mov pop add push add sbb xor inc rclb cmp (bad) (bad) fild pop inc add mov add inc mov or jno mov insl stos sbb jnp leave xor inc dec add (bad) rcll test les (bad) pop addb (bad) mov outsl (bad) dec adc adc pushf scas subb adc fs mov push or out or (bad) ljmp fdiv inc scas adcl bound enter incl dec pusha inc or xor xchg add jge icebp (bad) jp insl sub ds cs adc (bad) call or pop or imul mov push mov xchg push rorl rorb mov xor insb xor fcoml mov out dec ljmp je leave faddl cmp jb jbe incb cmp pusha mov mov (bad) ljmp adc clc pop pop fisubr push jmp lcall lcall dec loop mov rol sub and add pop add cs inc (bad) frstor push cld xlat xchg push fadd arpl sar sbb cmp pop xor (bad) push nop mov adc jle jbe pop test mov call dec (bad) fsubp adc pushf js push into pop jmp add pop jb (bad) ljmp push inc rolb fimull add mov (bad) pop ret lea xchg cmpsb das (bad) fsubrp jo outsb in sti (bad) jg cmp sbb add sbb cmp out stos and pop std loope roll arpl sbbb jb (bad) pushl push cmp inc lea out inc fcoml pop push push shrb push cmp fcomip incl lret jbe sbb cwtl sbb leave add and ljmp sub sarb mov mov jmp cli or test mov adc push xchg jle fiadd inc bound jge add (bad) jmp js clc fadds bound and sub pop (bad) (bad) mov ja cli push push rcl (bad) mov test xor jo in arpl jnp fs mov pusha mov jle push outsb cli (bad) (bad) cmp orl sarl fistl bound push gs pop push lcall or out or pushf daa mov (bad) call js lret xor mov iret outsb push add clc jg (bad) sbb loope sti das mov (bad) mov ljmp cs push faddl insl shrb mov dec xor jmp loopne int3 daa shll ss xor mov cmp push cld aaa push mov nop inc movsb mov dec sbb ljmp mov or int xchg add sbb lea pop outsl add xchg mov cmpsl mov inc add aaa add out fneni(8087 mov jge je and pushf xchg push cmpsb dec ficompl xor ja (bad) incl xor cltd pushf (bad) mov stc mov mov pop iret and decl scas clc pop int dec xchg push subl sub sarl es out lahf lret adc add aaa std ds pop jl nop loopne inc mov mov sub lret dec push bound mov push cmp leave add adc jno je or cmp stos arpl sbb xchg sub sbb rdpmc data16 fsubs das jbe jae fiadd pop mov ljmp dec cmp pushf cld shlb or mov xor or ljmp pop mov sbb mov test (bad) jmp mov mov and pop xor outsb test pop rolb clc (bad) (bad) call mov mov mov arpl pop out cmp jbe jo lock sub pop rcr ljmp sub mov shlb loop and add add mov pop mov mov jp pop cld call sub (bad) xor dec push lret add push jecxz mov jmp and popa test pop repnz cs lock int fiaddl mov aaa adc enter lret xor push call aaa ret movsl scas adcb ja sbb sub jge or (bad) lcall insl push mov mov pop push (bad) mov scas ret adc imul push push cli pusha sbb rclb push mov ja clc imul ss aad fs incl cli das xchg out in rolb xor rclb mov sbb pop fistp and pushl add or add pop push enter leave inc loop fldenv dec (bad) push (bad) (bad) fisttp sub pop ds sarb shlb mov in inc imul mov xchg jns (bad) cmpsb sub add fcoml mov (bad) icebp inc or mov push cmp cs pusha sub jo or mov inc cli loopne push or fidivr fistpll outsb pop jg mov mov mov leave cmp lds sbb inc clc mov and stc popl jae ljmp dec pop call incl add out cli push jecxz flds sbb inc in jb divl cmp sbb loope xor in sub xor and (bad) bound sub xchg decl mov cmp sti sub rclb out (bad) mov xchg xchg sbb loopne sbb adc dec xlat jbe cmp sahf and iret enter dec xchg fisttpl mov pop mov push cmp and dec sbb nop add cmpl add push sub incb and mov imulb test adcl in stos enter (bad) or dec add insb pop cld scas cli dec pop mov fistl push add add fadd sbbl stos xor or jb mov lcall mov pop xor mov pop fiadd call mov testb sbb insl inc mov aaa mov imul jg cmc inc jnp pop push or jae pop add fidivl ljmp mov cmp mov xchg inc push repz sbb xchg or incl push outsl pop xor adc fnsave jl cmpsl out andl sbb xor pop loopne call ficoml or dec push cld fstl sbb xor (bad) pushl xchg or push add nop setp mov mov loopne xchg leave mov pop (bad) out iret lods (bad) add negl movsb mov mov inc outsl cli or mov fcoms xor cli and das inc aad sub sbb sar (bad) (bad) ljmp rolb lods call add (bad) adc sub sbb and add mov out xchg orl incl mov mov inc cmp dec jno loope or js or and ds and pop and mov cmpsb jbe mov out mov cmp push call jno jns jae xor ficompl jp cmp test jno mov jle popf lds inc (bad) decl das loope sbb (bad) call push xor jg mov and repz roll mov sahf (bad) dec mov xor xor inc mov sbb fadds add mov aad (bad) (bad) (bad) decl mov in jge or popf roll xchg in xchg call popa and (bad) ljmp lret jbe or mov fwait push es xchg outsl xor pop inc lods ljmp dec adc push loop add add xchg arpl xor xchg pop fcmove sbb in test ficomp add and pushf cmp (bad) (bad) lcall int3 mov and dec cmp inc jno push jmp push (bad) push add add (bad) mov push add jmp xlat in inc jp sar rcll add adc fisttpll sbb ss mov push mov add popa cmp jb cmpl js push mov push push divb popf nop sub push lea push xchg (bad) jl movsb inc (bad) loop dec lods (bad) mov mov mov jmp xchg mov inc sbb (bad) jmp hlt sbb insb jnp xor push mov mov add jns subl push pushf inc add inc jg add jp xchg lret add icebp mov push add pop enter (bad) call or add hlt jp aam pop add xchg sub dec sub cld cmp enter inc sti mov into pop sbb xorl mov or sarl mov jmp or dec aaa or pusha inc out lods dec in xchg out sbb add sub imull clc out mov mov or or (bad) fimul xchg xor fwait pop in push pop cmpsb sbb out cli jmp shrb fistl sbb subb xchg add div pop pushl cltd push lahf adc out lods jl jne jbe and repnz aaa (bad) ljmp mov ja lret mov outsl out add inc (bad) push inc mov sti cmpsl and sbb (bad) mov faddl jl xor jae mov fild pusha in loop sbb mov or dec pop icebp (bad) ljmp pop icebp inc adc adc jae push sub jbe fmulp add xchg cld (bad) mov (bad) mov lods dec sbb or fidivl daa pop (bad) (bad) incl push or into fmuls adc xor adc cmc sbb (bad) or inc lea mov jo mov push dec push fbld sbb int lcall (bad) lds mov sbb mov (bad) out and sbb out jnp and xchg push daa dec (bad) jae adc lcall (bad) je (bad) pop in daa push add and cli mov (bad) mov ljmp (bad) and mov inc inc lock cmp clc add adc xor enter cli (bad) incl (bad) and push jp mov or xchg jbe pop adc lcall xchg push push jae cwtl xorb and fmuls xor rcl test adcb sahf pop (bad) ljmp push and hlt leave out inc and and or pop insb xor xchg test add hlt jmp mov popf fildll push or fidivr pushl pusha add push mov aam btr sbb (bad) cmp and shlb fs in or cmpsl scas mov mov ja clc mov dec and sbb es (bad) in jmp in add xor sbb fldl and pop ljmp jecxz (bad) adc es in (bad) scas clc xor inc mov mov mov aaa cs lock pop push xchg (bad) mov cmpsb jl enter outsl adc add ficompl leave cmp inc ljmp cmp movsb repnz or or addr16 scas adc or mov cmp call lock fild push fisttpl and xor push clc inc decl nop clc xor je and pop mov mov aaa cmp add mov sbb cmp (bad) (bad) incl dec pop push (bad) shr (bad) dec xor jle daa push (bad) rolb and or and sarl ljmp imul cmc int push sbb loopne lds push push mov insb inc hlt pop adc (bad) lcall out call aaa addr16 jl and rclb fidiv add mov or nop cld (bad) jg xorb cmc aaa jecxz test push and clc arpl or dec sbbl lock rcr cmp repnz roll push add mov nop insl popf mov ret lcall jb (bad) jns ds jg test imul cmp (bad) les add sti outsl xor jmp out hlt sub push fldl xor loope (bad) decl les jnp imul or leave sbb mov adc mov hlt push dec addr16 or incl sub xchg cltd mov std pop cmp test push (bad) push or (bad) (bad) cmp add imul fsubrs loopne pop ja or (bad) int3 ljmp cmpl mov stos fnstsw fsubs and (bad) (bad) aas fcompl outsb test mov (bad) lret inc push adc rclb scas js ret pushw push rorl (bad) (bad) decl ja xor fadds out fiadd stc and into lcall lods decl mov out pop sbb jbe sub sbbb push enter inc dec outsb ficomp pop xor out sbb cmp fistpll (bad) mov (bad) xor test mov outsl das (bad) decl dec pop lds sbb aam (bad) jnp or movl dec sbb shll fs cli push inc (bad) rcrl lahf pop cmp insl pop or rsqrtps sub decl sbb ret cli loopne lahf mov outsl sbb (bad) scas inc adc or cmc (bad) or add push mov xchg adc (bad) (bad) incl sbb sbb aas (bad) addr16 cltd cmp and ret mov fiaddl adc nop pop icebp out lea (bad) and (bad) decl xchg or test aaa test inc lcall lcall sbb or push int xchg fs mov and sub mov (bad) fstpl es cmp xchg jb (bad) ss ja cmp rolb fs nop jo push xchg ljmp cmpsl pop jp insb rcrb lret sbb mov shrb das js fstpt or push xchg add outsb sbb incl add cs add or dec jb fnstcw pop mov pushf mov bound mov add inc (bad) in mov and mov stos loop mov outsl mov inc inc mov sub call jmp add sbb xlat inc jp repnz je mov or test xchg cld aaa mov mov dec xchg mov jmp clc addr16 aad gs sbb ficomp adc (bad) ljmp and movsb insl (bad) sub or outsb in push and (bad) pop (bad) lock in push fld1 jl sub ret mov xchg daa fsubr mov cmp mov lea clc inc fcoml divb aaa mov inc pop fcoms fs add fild sbb std pop test ret bound push cwtl or mov and pop mov and incl nop sbb inc pop bound pop and (bad) (bad) ljmp sbb sbb (bad) sbb das pop mov std push fs mov or adc mov jbe pop ret inc xor inc clc adc (bad) (bad) inc add inc mov jmp mov loop cmp arpl lcall jae pop incl adc lcall leave sar push jae fcomps xchg pop ds int3 jmp ljmp lcall lcall aad fs push add and mov lahf stos mov sbb lret (bad) mov inc xorl or and aas scas adc cmpsl sbb add decl inc fisubr ja hlt inc or mov jg (bad) call pop loope or dec mov das je xor mov aaa mov jge test pop stos arpl cli or (bad) (bad) mov mov ficompl fwait pop test (bad) jne cli inc sbb scas sub (bad) sub jl sbb jns jae daa (bad) add call push cltd je adc mov inc outsl clc (bad) jg cwtl xchg or push xchg mov add cmp movsbl xchg (bad) or sbb out add ljmp push mov clc adc push aad inc loope pop imul pop sar push test sub lret jg lock adc pop cwtl cmp sarb sub mov xchg fadd jno and cli inc push dec insb inc cmc daa mov stos bound stos lods (bad) (bad) inc imul punpckhdq sbb into addr16 or mov or movsl mov addl xor or out test xchg pop test dec call cld rcrb pop fldl stos and mov ret out insb inc xor lcall cmp imull fcoml mov cmp clc stos test add xor add inc pusha cmp push mov outsb repnz stos jecxz ds lahf outsb (bad) mov add fsubrl sbb enter add mov mov es cli (bad) jg mov enter pop sbb and addl sbb ss out cli pushl inc or iret loope adc bound jns flds cmp (bad) (bad) mov jmp inc adc pop mov dec mov lret xor adcb addr16 hlt lret addr16 nop pop dec (bad) jg sbb push add mov dec or mov mov push mov (bad) xor inc nop dec in adc add pop ja and push adc cmp jmp jae mov pop ds inc add addl xchg aam imul inc (bad) mov fwait clc pop mov xlat out mov stc add or pop lret cmc incl sbb xchg push xlat sbb xchg cld adc lcall es sbb and inc mov cmp insl inc fstpl loope sahf and das les mov mov inc sbb clc push and or cmpsl roll stos in lods pop icebp decl popa mov xor jo inc inc fwait mov fimull (bad) lcall (bad) mov push lret push adc sub dec jmp test pop lcall sub add (bad) test dec loopne fcomip mov in push dec dec fcomp ja fwait jge icebp lcall movsl stos push outsl mov scas sti and mov xchg inc sub jmp cmpsb fidivl jno inc pmuludq xchg inc aam and jmp cmp cmc fwait fwait or cmp (bad) aaa jbe push sbb ljmp rcr add mull dec mov pushf push arpl mov std insl icebp xor add into cmp jge add xchg ljmp or inc nop bnd inc int3 mov (bad) pushl mov ja adc push or into lds sbb std enter jp clc movsb (bad) jg mov mov cmp and dec cli add pushl push (bad) jmp push into adc xorl (bad) pushl push les jbe or bound pop sub loope add dec lods dec hlt mov enter adc repz inc or or js cmp xlat cwtl (bad) pop mov pcmpgtb push sub aam stos (bad) lcall mov adc outsb dec adc dec and mov lock or int3 (bad) jno test in jecxz lock cmp dec popf loop scas and jmp sti mov pop test mov pop cmp fs sbb ret imul in (bad) push push mov fsubrs xchg mov ja add fs lcall (bad) adc cmc sbb xchg fcomip pop push pop mov les xor pop std ljmp add shr (bad) mov rorb add adc mov (bad) incl jg nop push pop lds insl xchg xchg push outsb xchg cld fwait mov push daa fldenv pop cmp mov fcomip call adc xchg scas enter pop arpl int3 pushf sti push jae sbb mov nop rcl test push cwtl lahf pushl cmp cmp inc cmc test outsb (bad) gs jmp std add out lret mov push mov bound imul outsb sub scas jle int mov inc add movsl add sbb lock jmp hlt pop jl iret adc adc dec clc (bad) insl pop out and jne and pop je sbb lar cmp jbe sti lods fisubl incb mov push mov xchg sub dec jp mov and xor push inc call add das fldl or test repz ja incl aas cld nop add sahf out out cmp pusha cmp jg cld xchg or adc mov pop fimull leave add popa adc mov push xchg xchg pop (bad) xor and push arpl xchg test dec jg jae cmp add sbb aas shr lcall clc je lock sbb adc xchg ja imul rcr and mov push push inc lea ljmp xorl pushl pushf mov call test test or dec adc das cli jg pop out test xorb jle and cmp sbb jg jg mov push push push add push cli and xor wbinvd std (bad) jmp jp mov jo adcb add ret aad xchg jp (bad) (bad) mov fiadd call fsubrs push test cli (bad) incl popa (bad) jecxz fiadd mov out add mov (bad) jg scas push mov jbe ljmp inc dec and mov lds sar sti cmp arpl lcall jg jle adc in lock int stc push adc mov aas add pop push sbb dec cwtl (bad) mov outsb hlt or mov push shr pushf push fistp cs fimull push repz cmp xor jbe pushl adc mov loope mov sahf ss add out mov outsl sub cltd push mov rol mov nop push pop add clc adc jg lock insb jle inc add mov ret push std jg cld mov movsb loope push je and sbbb pop push sub notl pop mov sar inc aas or or jge mov das clc fbstp pop and adc les outsb jae iret (bad) popa pop adc (bad) (bad) (bad) fstp inc add lahf and mov adc sub test and xchg rorb push lcall xchg mov andps cmp clc incl cld decl into jbe or ds ficomp test or xor outsl add mov hlt adc roll pop sub ljmp inc lods cld mov and fldl sbb cwtl (bad) call pop ja inc lods sbb xchg das pop and fdivl enter sbb aaa cld dec cmp mov loope jbe dec pop add pop inc adc js xchg xlat (bad) or out add jl fimull mov jp push outsl in sub add inc enter and fs and ljmp int3 pop loopne call fdivrs in (bad) (bad) (bad) fbstp push in sbb into or cltd sub fcoms orb insl push ja das (bad) (bad) pop add pusha cltd sbb dec pop mov scas sbb jo mov push cwtl mov jbe,pn jnp (bad) mov jmp push sarl out cli sbb and cli loopne xor xchg add jo dec loop xorl jnp pop adc clc adc aaa sti lcall std shl andl push dec mov insb popf enter stos lret in push jnp dec mov notb popf jbe adc fbstp mov clc push or and pop mull add mov aaa std dec lcall cmp ret ret (bad) mov inc out or sahf pop and ljmp or xor ja mov int3 out dec fisttpl cmp ljmp push cmp in add mov clc movsb pop jno adc add (bad) jg fimull mov push dec push push sbb adc js sbb mov sbb or ds jmp cmp or (bad) xchg dec stc lock test repnz enter lcall sub sbb rclb das push pop faddl add shr inc loop je loop call ljmp mov jb cli (bad) (bad) dec inc insb int3 sub and push (bad) mov sbb xchg (bad) aam call das pushf pop mov shlb mov cmp sub enter add push ret or outsb into nop cmp push add mov loop fs test ss outsb mov cmc sbb xor repz frstor clc push scas lcall rclb sbb jge or jle mov mov adc outsb fdivrs cmpsb (bad) (bad) (bad) call cwtl iret daa xchg adc imul push addb xor ret or lcall jo bnd sbb nop imul or xor sarb push push adc add adc cld mov orb cwtl out add movsb mov cmp or icebp stos dec loop mov jbe stc jle out (bad) (bad) incl cmp hlt mov in xchg push in nop xor dec sahf sub (bad) fidiv insl inc (bad) mov add add dec cmp aaa cld cmp js adc jb jp (bad) sub ja and sub je fsub pushf adc icebp pushl push cld loop pop scas mov cmp jo mov das clc (bad) call addl sbb in call leave fwait dec cmp jl lcall std and roll xchg insb mov and pop ja rsqrtps cmp ljmp dec das and push jecxz inc pop addb cmp xchg xchg (bad) mov xchg mov loop mov (bad) cmc inc aad (bad) lcall (bad) (bad) adc cli outsb lahf add icebp (bad) (bad) jg in imul pop imul or pop mov jmp cmpsb mov xor push decb lcall fdivrl int3 xor cmp (bad) jmp sar sbb (bad) outsl addr16 mov es ljmp ss add cmp scas jl lea add sbb inc adc add out jmp (bad) xlat faddl add loop inc pop mov outsl push adc loope cmp add sub shlb scas xor les in sbb mov xchg pop lods jbe sbb test es lock cli inc xchg add aas (bad) call int (bad) cmp jo pop push call popf xlat mov jge dec push sub mov sbb xchg jg adc xchg push and nop jg add fwait cmp mov mov (bad) push inc call and push mov adc xchg xchg sarb cld int fadds fcmovnu sbb cwtl pushf arpl leave cld mov ljmp or mov add inc push jl enter mov ja pushl add aaa adc imul clc fmuls jg adc adc dec (bad) orl dec or rcrl jne es (bad) (bad) decl lret jb adc pop push xchg into xor cmp test hlt gs enter (bad) (bad) mov cli sub sbb and dec jns mov dec jno std sub pop sub lds leave daa subb repnz out cmp repnz sbb adc inc and incl cmp sub lds lods outsb sbbb mov mov add (bad) mov das pusha sar mov roll jno adc xor adc xchg cmp mov insl std (bad) add or scas popf outsb ss fdivrs lcall pushl ljmp ret jno mov inc bound mov leave add ds fdivr (bad) (bad) incl sbb add icebp inc dec cwtl cmovns sub mov mov aam inc xor outsb cmp or pop jle or cld jg add xor sub int3 xchg pop xchg (bad) jg mov int shll dec repz pushl mov push ret push push cmpl xor inc dec scas (bad) mov pop fsubl repz or rol popf mov sbbl jno (bad) stos adc lods mov lret lcall dec sbb sub add mov xor cmp dec cmp xor mov ljmp test xor in inc xchg insl fucomi loopne add js and (bad) (bad) fbld shlb mov loopne lret ljmp inc lret mov loope es incl adc mov jg mov add andl inc add xor popa cld (bad) call arpl fmuls cmp bound push fldl lods (bad) add mov pop in add pop add aad cmc fs cmp pop fsubrl clc add (bad) sbb shr std shll add sbb push loope jmp inc jecxz xor lock in mov jl add add aaa lock inc mov dec xchg sub test inc (bad) mov cmp cmp and adc (bad) (bad) ljmp mov fimull cmp jae add roll ljmp jl xchg or pop aam push mov idiv jg mov jmp outsl mov ret xlat cmp shrb sti int3 add push inc into ljmp fcmovnb push xchg int3 fldl pop mov push push pushf inc aaa hlt fnsave aaa out loop ljmp popf inc adc stos or add test loope shrb pop add mov pop jmp leave sbb cmp add mov pop popa notl (bad) (bad) lcall rcll cmp out movsb pop cmp sbb pushf scas into dec add jo cmp mov add aam into sub addr16 sarb xchg inc sub stos in fsts ja clc test cmp cmp cmp aaa repnz jle repnz ret testb mov push ret ret xor (bad) (bad) aas test jb out push and lock cs je jae adc clc stos (bad) dec mov out push sub mov daa leave add sbb aaa or mov push inc push push and daa sbb inc decl cli icebp pop xlat call push mov iret dec lcall inc xchg cs xchg lock mov sbb mov cmp mov cmpsb pop decb add add sub or mov or or mov inc jbe (bad) decl in cmp fiadd sub enter mov pop (bad) pushl gs dec mov inc ret std decl jb inc sbb sub sbb popa inc pusha inc nop mov fldl inc mov add into (bad) (bad) (bad) jmp cmp insb pop jle mov bound dec aad push push insl insl push (bad) (bad) call mov movsb push jne aas and out mov or jp out dec in push fsubl xchg mov or mov imul outsb mov inc sbb int or popa fnsave push sub inc sarb (bad) mov mov mov into out out xchg jg sbb (bad) int jns scas pop cmpsl ljmp test lock pop sbb (bad) mov adc (bad) incl dec jo pop xchg test adc imul pop mov arpl (bad) jg mov orl inc and (bad) repnz ret mov push mov adc push mov cld fcomip cmp clc mov mov scas jle mov jg rcrb arpl jbe rclb sub (bad) (bad) ljmp sarb xchg movsb xor or add xchg shlb mov (bad) (bad) (bad) mov mov add movsl cmp inc mov push xor stc (bad) (bad) cmp or sarb movsb hlt les sbb inc (bad) in adc or mov fidivrl insl dec push fnop and xor or push add loope arpl and xchg jecxz inc xor mov pop repnz rorb movsb pop into or lcall insb scas ljmp rcrb sahf ret test cmp sbb mov out das jle push add jmp add xchg mov decl xchg jecxz or in jg jnp inc in fdivs roll adc mov (bad) dec ret lods sbb sti xor mov and xchg xlat jno push imul (bad) decl addl inc pop cmp imul gs or jo xchg ja fwait sub call mov das or fcomi inc mov push (bad) (bad) (bad) fild inc lcall dec (bad) das push in (bad) faddl fnstsw out jnp dec cmp dec orb xor es push (bad) (bad) sbb mov cmpsb mov stos pop loope mov fucom adc jb adc mov mov (bad) pushl std xchg sub not sub call fist mov cmp cmp loopne das inc jae decl (bad) hlt test arpl adc subl shrl or mov rcrb push imul incl push mov pop out loop ss loopne and pusha xchg adc scas cli jbe mov inc fisubrl (bad) paddusw cmp xor jnp mov jmp ljmp pusha inc mov (bad) add int3 or (bad) fcmovnbe add outsl clc call (bad) lods clc mov lcall (bad) outsl mov pop and cwtl loopne or xchg call pop push xor orl adc or lcall in ss jmp mov sbbw push jle lcall insl aaa stos aam std (bad) inc sub push call insl xchg or les loopne insl outsb out sub push push xlat lcall nop aas inc sbb insl cwtl (bad) into push mov inc inc outsb adc cmp or sub jne fistpl lcall inc or xchg f2xm1 dec and (bad) lcall rorb add sbb insl leave (bad) sbb call loopne imul ja inc popa mov js inc push mov or inc pop sbb inc cmp and jnp xchg push inc out jle and cld cmpsb and jne cmp sbb or ja sbb push test sub inc imul jg jg mov mov adc fwait jo data16 (bad) ss jg mov (bad) call insb cmp add (bad) mov iret (bad) sbbl inc jecxz add loop popf lea mov pop icebp jmp push mov sahf pushl inc xchg inc movsl add aas push jle adc dec std xchg push rcl jae push repnz fildl dec cmp push and lock nop mov test cmp mov mov sbb jmp jnp (bad) jmp rcr pop imul mov jmp sbbb loop push pop cli dec int add iret jecxz js mov jne push sub cmc inc insl sub pushf mov (bad) (bad) fildll add imul fadds mov jno (bad) sti mov andb lcall cmp in cmp js pop loopne pop jmp jb test pop mov pop loopne mov hlt out jge or adc push popa (bad) pop mov xchg (bad) (bad) jmp jle push stos in xor gs jl dec dec clc push (bad) (bad) ljmp inc ja imul js in pusha xorl xor or inc aad les mull test bound jae data16 xchg mov stos mov (bad) cmp and mov inc repz faddl mov xor sbb sub pop or sbb lea jo ja ja jp cmp fdivr and and lcall pop push les repnz or jge js outsl (bad) bound mov imul outsb mov push adc or push mov (bad) ljmp xor incl fmul sti nop push xchg cld stos sub call outsb push test mov mov (bad) out (bad) and daa dec pop pop rclb (bad) xlat fiadd (bad) dec (bad) (bad) decl aas fs jo mov subb (bad) rorb mov dec decb pop mov (bad) xchg push mov js sbbl adc or sbbl adc (bad) fbstp add cld adc add ret jg outsl dec setg out push je adc sti icebp and dec dec lcall test jbe shlb add mov decl cmp xor add ret cld lcall add inc adc cs (bad) fcoms jecxz mov and aam and sub out xchg mov pusha mov jnp mov (bad) jmp push xor cmp jecxz pop push xor ljmp cli mov (bad) push test and jns cmc std shrb mov outsl mov xlat iret or fildll cmp (bad) call mov inc lock aam ss mov out inc rcl inc xor rolb or loop outsl inc in inc inc loope (bad) out cli push jb je scas jo popf adc add rcll dec repnz js je call int stc mov sub in jo add push ret sub cwtl ja xor into sbb add pop sbb arpl add and inc dec mov add cld inc and std sub cmp aaa sar (bad) incl dec imul cmp es and stos mov fnsave loop das je push stos aas push push (bad) ljmp inc mov push fbstp dec pop mov jl sahf scas pop mov pop adc xchg cmc sbb xchg mov call add pusha call (bad) (bad) jg inc add cli xchg add bound xor cmp (bad) (bad) fld add jbe jmp int3 add popa xorl pop mov xor mov add push sub (bad) push std (bad) pushl jns or add mov mov jne xchg call jbe hlt sahf sub mov pop inc loopne add pop roll inc push mov pop jp pop into lock (bad) incl (bad) sbbl inc mov push push mov daa jnp cmp push or jbe cmp fsubs cmp enter mov insb sahf and (bad) call xchg xchg xchg lret or fmull or push cli lods call jb into add mov icebp ljmp incb jl rolb outsb inc loopne ret mov test adc call (bad) pushl sbb pop jl lcall mov sbb sti mov lret loope xor rclb cltd in sbb test divl pop inc call mov jg (bad) pushl aad jno inc bound je xchg xlat (bad) (bad) inc or xchg js sbb or mov fild or daa and in movsb dec (bad) lock (bad) dec (bad) and fwait or dec or dec or lcall sbb xorb or mov inc cmp mov pop pop lahf xor mov (bad) jmp dec add cmp call fstpl js mov sbb fs push adc call cld loopne arpl cmp xor sub dec movsb loope xchg inc jecxz clc incl movsl inc int3 jns jo jmp push (bad) push lcall mov jnp adc cs cmp add (bad) pushl outsl les push mov into out push adc arpl dec ja adc xor (bad) out and jb fistpl je xchg jge (bad) mov arpl cltd (bad) or adc aas adc ja sbb (bad) jmp push mov call inc sti mov jp dec idivl xchg ret ljmp pop loop and mov (bad) pushl or rcll pop std outsb mov add cmp (bad) icebp lods cmp addr16 and jg pushl pop push mov lods shl xchg rcrl mov les mov fwait incl jae out sbb mov xlat push fistl mov (bad) (bad) (bad) sti ss lcall mov imul icebp xchg or cmp push fdivr (bad) (bad) call inc in mov adc aam jmp xchg vminss icebp lds pop negb jmp call fiadd sbb push ret je (bad) call fdivrs daa insb jo addr16 add nop cmpsl xchg push cld add (bad) pop cmp sahf rcrl test (bad) (bad) jg push arpl sahf sarb cmp xchg fstpt and mov or mov je add iret (bad) add xor (bad) decl mov in mov add pop (bad) leave mov add xor (bad) (bad) ljmp inc xchg leave lret push cmpsb pop mov or sbb adc iret adc jg test sbb dec sbb jmp das inc adc cld push jns push pop sti xor popf loop (bad) jg lea or outsl stc out mov add nop sbb cld push jmp or pop ss fnop decl push js sbbl or add add xor jp pop sbb pop mov insb push cmp mov mov andb cltd add push dec (bad) nop jecxz enter dec sar or popaw movsl add mov add lcall adc pop rcll aaa mov das push jns mov sub decl mov inc repz cmp push cmp and cmp xchg test rorb xchg jge,pt and xor cmp jg call ljmp xor inc (bad) jg mov (bad) jne mov addb stos lods mov (bad) push mov push cmp jmp xlat das jle fdivr out mov aam sbb cmp sub scas enter cs rcr rol (bad) pop inc ljmp mov mov icebp ljmp daa (bad) or pop stos clc sbb xor aaa mov sarb mov jmp mov (bad) (bad) mov stc addl jns or push stos push fstpt mov cli pusha loope out sahf insb cs cmpsl shlb pushf xor (bad) out cwtl int js loopne jg jbe cmp pop ds roll outsb bnd aam jnp mov je sar and movsb pusha and fdivr pop imul cmpsb xlat aaa inc js ret mov in ret inc jecxz incl incl inc xchg mov adc jg add push popa ss pop popa add pop aaa std and aaa loop out dec hlt outsl fwait mov loop out (bad) adcl or (bad) xor mov cmp stos gs int jne incl lock inc ret fidivl xchg stos (bad) mov and sbb inc nop stc xor insb inc ds mov movsl mov fnsave (bad) (bad) (bad) jmp xor movb out cmp add imul addl inc push sarb cli out rorb (bad) repz ljmp es iret lahf (bad) (bad) jg jbe xor test outsl dec fstl outsl mov mov jae adc imul pop test pop les jl arpl (bad) lcall or mov loop mov xor or pop cli cmp push add cmc hlt call (bad) or xchg outsl loop nop or jne push xchg rcr (bad) jg dec scas (bad) aad inc inc cmp into push push xchg and mov lods cmpsl mov mov mov call jl jge dec pop into int inc (bad) ret push cld dec push sub cmp out enter add outsl loope outsl cli outsb add lahf pop ret xor scas or mov push andl add (bad) or idiv and sbb add xchg pusha test sbb sub inc lret je xor callw mov and ds adcl mov xor add push push mov add mov pop mov and add jge mull scas adc jbe mov xor lcall push loop fwait add dec push mov jecxz mov push cs dec add pop jle or loop call jp out lds sbb bound xor push or ja dec (bad) clc es mov gs inc cmp scas clc push pop adc push pushf and sub lods adc int3 fidivr mov and icebp mov ret mov add add push scas lahf sub add push push jnp add aaa mov lret mov cmp in scas scas aas mov jmp or int icebp hlt inc cld inc add imul insb inc dec outsb sub jecxz cmp pop icebp pop cs icebp mov imul aaa inc clc fbld shrb ss outsl and add push jle ffreep add outsl push std fistp inc (bad) scas push popa mov mov mov add decl ror cmpsl add cmp xchg adc jbe aad test popl jle pushf (bad) (bad) (bad) jg cmpsb iret aam push or test stos enter or jg mov and push movsl (bad) lret aad push fild arpl scas (bad) cmc fisttpl adc jno inc cmpb inc popa or sbb push adc cmp adc or aaa sub sarb and xchg mov inc (bad) incl cld jne mov xor or inc push std call add call jecxz or xorb insl mov push ret or js sbb add adc in out adc dec jne int3 nop push push mov cli call or cwtl test sbb or add movsl inc (bad) push jle adc add dec fs cltd lock js subb (bad) and das add jns clc pushl cmpsb outsb ja jo ficomp movsl stos repz daa andb js jg add push dec xor int3 jbe mov or mov push sbb ss (bad) mov sub dec push test ret inc or xor xor cld jmp inc (bad) jg push mov (bad) out nop push push mov test sar (bad) lcall bound in sub sbbb cmpsl in stos inc (bad) clc in cmp xchg mov loop add popa push mov push add inc mov inc push xchg mov fcompl (bad) push pushf push fnstcw dec bound pop pop insb push out cmp inc mov push push out stos jbe xorl hlt xor mov (bad) (bad) (bad) pushl dec push fiaddl (bad) enter mov mov (bad) incl cld cmp lods pop lret cmp push loopne push clc das xor push adc daa testb adc lcall xchg and xchg jg stos movsl mov dec cmovg jg or add xorb or test scas clc adc pushf jecxz and ljmp pop push (bad) ss cmp repz test mov and push std enter clc (bad) jmp cmpb es (bad) lea loope addr16 mov mov push jbe adc cmc inc ljmp jge lods (bad) fcomip push mov gs mov cs (bad) loop pop addr16 insb pop or xchg (bad) (bad) (bad) (bad) ljmp mulb sub insb add imul inc add jecxz push iret sbb or stos imul and mov add leave inc (bad) call (bad) cmp (bad) mov and mov das push lea lods jnp mov xor dec popf clc inc mov push mov sub jnp sub jge jg in mov fdivl xor and xor sbb push arpl insb cld (bad) fistp jb imul les add rcrl lret add andb jg push repnz lcall add mov add das inc arpl or mov dec cld outsb test pop shrb adc fnsave jno and mov insl xor scas fnsave push add test test fnstsw gs (bad) jg lods testl push arpl nop push mov sti mov mov inc pop clc mov int3 (bad) jbe and ror adc jne xchg aaa dec outsl sub and dec cmc mov xor mov add mov cmp pop mov (bad) daa ljmp arpl pop fbstp pushf lahf (bad) (bad) fcomip jae sub inc in and test and dec clc mov out inc call ss mov adc arpl lods inc ja push jnp cld mov lret xchg mov and jne or in mov jo in dec fiadd aam dec icebp stos jae ss push (bad) (bad) (bad) call xchg xchg jnp je pusha cmp (bad) or fistl rcr push scas push mov lret out xor xchg or mov (bad) or cmp aas std mov call inc push xchg inc shrb je adc sarl sbb aaa std ljmp loop imul mov shlb jns aas sub (bad) outsl hlt pop add jmp fmuls es inc loope xor cwtl add xor push outsl in and adc mov or insb lds or sub out (bad) in lock call push sbb inc pop xor mov adc lret ja cmc jg pop jb push out inc dec xchg cwtl xor xchg or (bad) jmp loope sbbl add cmc push lret (bad) rclb sbb es mov jg mov std movsl add pusha push dec lcall pop sub sub fiaddl outsl outsl jo cltd (bad) mov or roll hlt mov les push or fmuls cli scas xor add jle xchg add jecxz test js pop inc insb test mov test fsts mov adc popa lods push adc outsl adc (bad) out sbb enter add icebp dec lcall out mov (bad) jmp mov flds push iret stos and fisttpl pusha faddl pusha into jns jb jp (bad) (bad) mov or repz mov call repz add (bad) jl xchg out cmp daa dec pushf push xchg adc jmp add cmp mov scas loop xlat xorl pop inc cmpsl dec nop in and (bad) mov rcr jg adc push aas lods clc leave push push enter int jns out mov cmp stos pushl inc lahf or daa mov add and dec sbb hlt sbb add pop xor fstpt stos or adc adc cmpsl jmp or pop cld inc sub adc mov arpl test test pop cmc jmp mov in inc cmp push cmc pop mov mov enter add pop sbb add mov std lcall jecxz loop call int stc std pushl mov add (bad) or pop aam dec mov pop imul mov mov add outsl add aas jle cs add (bad) inc or inc out dec jp mov push or ljmp sbb mov stos scas xor push subl fs sub xor pop outsb sub (bad) (bad) lcall fcomi xorl mov orl sarl inc cld (bad) in adc sti dec ds add and add stos lcall addb mov sar mov push fildll ffree cli mov cmp sarl ret (bad) stos lock jle mov cmp das sar sub cmpsl mov sub push jbe or inc mov popa cli incl insb add push push movhps pop out or idiv jmp gs sbb mov cmp push ret outsl push push outsl push into pop or stos add (bad) mov cmp sbb loope adc xchg fwait and enter rcrb cld pushl clc cs mov hlt sub je lock adc jge fbstp cmp mov (bad) fwait clc jne lock pop hlt xchg sahf subl and (bad) (bad) (bad) fildll gs (bad) dec jo and (bad) or or outsl pop cmp jns lcall xlat in or ret push ret xchg pop (bad) aad sti ljmp gs sub pop dec cmp or or mov loopne sar add int3 sti inc nop pop cli mov mov jg call fiaddl jg aaa (bad) push adc and xlat jb ljmp mov mov add mull push xchg pusha xor (bad) fstpt mov sbb ljmp test mov mov fimull add adc pushf lock (bad) lcall mov pushf mov sbb out pop fcmovbe sbbl jns (bad) decl enter fdivl movsl aad les push inc mov (bad) sub jp lock inc ret (bad) (bad) mov xchg pop insl nop jp imul insb xchg inc nop dec push mov sbbb in out clc in adc jecxz or add (bad) decl jmp mov push inc add cmp push and inc aas clc test (bad) or les sbb std incl in das les inc push add or push jbe fwait dec (bad) adc mov sub push xchg cmp xor cmp test insb lods clc and add inc test mov orb push xor scas js lcall subb push push lea fiadd cmp sar and fstps pushf arpl pop subb pusha (bad) sbb cmp sub pop sbb adc mov lock cli adc in fbstp sbb out orl or movb or ret icebp and loope xor data16 mov jmp xchg fimul push adc xchg push xor xor push sarb push push add push dec imul es pop stc mov push rolb jo orl adcl (bad) (bad) (bad) decl hlt inc es (bad) nop out test xchg sub inc pop mov inc loope imul clc jmp popa int fprem1 jb dec mov dec sub aad daa (bad) (bad) inc ss adc inc stos push or pop loope outsb loopne dec cmp mov xchg aas ja lcall and in in push pop clc mov dec push test mov jbe mov pop add call sbb add jnp or cmovnp or (bad) dec cli rorb ror pop mov test and xchg lock repnz pop push mov aas fnsave pop cmp (bad) pop je imul jge inc cmp cmp in lcall xchg add lods addr16 inc jg jg add pushf sarl push pop jle decl adc push dec jnp cmp outsl add enter mov (bad) incl push imul pusha inc mov call sbb mov ficompl mov cld (bad) lcall popf mov pushf cs mov cmp rcrl jp sbb cmp sbb test (bad) insl mov pop cmp js rcrb add das fistpl mov lock std fisubrl xor ljmp pop aam mov xor mov call add mov fadds dec loopne mov xchg pop xor std xchg nop cmp sarb xlat cs sbb xchg xchg add (bad) ljmp xor xchg cwtl jo cmp hlt sbb test mov loop sarb mov (bad) cmp mov hlt std fsubr lahf push sbb dec out outsl jmp aaa mov rcr pusha nop ss mov cmp test sub pusha push xchg and fwait sbb and outsl inc cli stos cmc jg hlt enter enter mov test js (bad) inc js fidivr pop (bad) mov faddl jg jl test mov adc into add add (bad) (bad) faddl bound push jp imul (bad) (bad) (bad) incl mov xchg mov pop mov gs adc (bad) call dec jg jo rolb xchg xchg fldl stos pop lods rcrl data16 decl lock pop ret xor add arpl inc add xchg push pop imul cmp addr16 cmc mov mov mov jmp pusha sub mov push dec pop int pusha out sahf push mov jae (bad) (bad) (bad) incl pop xor (bad) push adc popa add fucom add sbb add aam sarb push sbb pop stc adc jg les scas jg mov xchg es and mov mov popf mov subl mov sub or ja (bad) cli push dec movsl xorb std mov and pop movsl mov cmp dec or jno add pop outsl add and push or inc (bad) lcall daa roll loope push push mov out sbb aam dec popa rolb (bad) out cmc dec pop outsb mov paddsw dec shlb xchg or jle and or lret cld (bad) (bad) pushl lret pop or sbb fs add sub xchg xchg daa pop int3 cmp out mov and cmpsb loopne (bad) in adc jne ljmp dec sub xchg jmp (bad) sahf inc mov cs (bad) (bad) fisttp into inc mov adc test adc adc or pop dec cmc mov push aad cmc lock in nop push movsl push lcall mov lcall jb les cmp cmp insl and jecxz push dec adc test (bad) mov hlt arpl mov push cmc sbb dec out sub std push (bad) (bad) (bad) decl jae mov and jns dec inc adc and xchg mov and mov adc leave rclb sbb mov jae (bad) add in std rclb test inc (bad) movsl nop es jge (bad) in mov jo out xchg das clc add or sbbw aas ja clc decl mov lcall neg adc mov jmp pop je sarl mov cli push jne das imulb dec clc xor cmp dec or mov pop add and xor cmp ret incl jecxz hlt ror xor jns pop mov xchg (bad) (bad) (bad) inc inc inc dec cmpsb addr16 loopne cmp inc xor mov mov rcrl popa cmpsb lock dec sbb insb and imul mov cs adc lock fcomps loop sbb inc mov lock (bad) inc ja and test add or jmp je mov (bad) cmp mov std sub adc xchg cld sbb popa adc mov xchg adc or cwtl xchg dec sbb or aad cmp pop call cli inc pop js mov in ja adc sbbl cmp dec test (bad) cmp loopne repz rolb std sbb mov inc cli lcall xchg sbb mov and sub adc out push push dec (bad) sub push pop in icebp mov bound (bad) popa mov (bad) lock (bad) ljmp inc push popa adc nop imul out fisub cmp mov cs pop gs icebp (bad) ljmp nop pop (bad) fiadd jmp mov or scas mov xchg mov inc mov ja nop (bad) clc push xchg add cwtl rorb jg jbe add add (bad) mov jno sub and dec pop mov xchg (bad) jg orb jl aaa cmp les jns pop sub jg mov outsb fwait lock sbb notb shrb pop ds fbstp imull or inc js (bad) ljmp movsb mov insl pushf adc insl fistl add cmp inc cmp mov sbb sub (bad) icebp ljmp outsl push push outsl push outsb jae jo (bad) pusha loope inc or mov clc jae jle sar pop hlt loop cmp rorb sub sbb sbb sub jl pop ret xor jp dec cmc pushl pop ds dec and and xor mov call push add test (bad) test cmc cs jmp sahf pushf xchg test insl pop xor (bad) pop ss push test test bound test xor mov mov jle mov inc jl arpl test (bad) push add or add push stos inc loop ja jl xchg jno xlat (bad) ljmp adc sbb js cmp aas loop lcall pop gs jp adc add out fcomi and sbb inc dec mov nop cmp inc mov push xchg adc push stc push aaa cmp inc insb clc call js xchg mov imul add movsb fcoms jb cmpb ret ds (bad) add das and mov add std bound adc into hlt dec add jae aad fcmovnbe sub xor sbb sbb repz add cmpsl adc mov mov loopne mov (bad) flds sub jo add in cli (bad) call xor mov popa out inc push push jno sbb call (bad) (bad) clc je popf push (bad) add inc adc hlt inc adc adc sub (bad) out nop fidivl inc xchg out iret pop movsb xchg clc jl (bad) (bad) push add push orl ret and adc (bad) nopl mov mov jb lcall (bad) call mov mov xor sbb jg cwtl std sub inc fistpl dec xor cmpb aas cmp (bad) xor (bad) out cli (bad) adc pushf sbb jnp je out loopne xchg insl cltd and das add jmp push mov aam int3 dec (bad) jg test cld push (bad) cmpsl bound jge sbb mov (bad) ljmp imul or jmp push (bad) (bad) mov dec js (bad) insl das test sbb or jp pop fwait add call push roll aas add fwait add (bad) lcall sbb imul sti stc add pop add push subl (bad) decl ljmp fcomps negl push (bad) mov lcall push sub sub rcl pushf enter daa adc sbb lret inc pushl (bad) mov (bad) inc fisttpll adc idiv or mov jmp lods cmp mov add das test in fs cmp std push frstor cmp roll jge sbb pop out cmp mov add roll jae das jp or rcr mov (bad) (bad) ljmp mov rolb outsb fcmovne sarb xchg (bad) jae lret cmpsb pushl dec mov pop jb call cli (bad) (bad) (bad) (bad) mov jecxz and stos inc adc sbb (bad) in paddd and push add sbb cld pop pop sbb or pop aas ljmp call add decb rcll jb mov pop div add push rcrb jg fcompl add xlat jo and (bad) (bad) pop push (bad) jnp mulb pop inc jne jnp fisttpl call (bad) jg (bad) inc push push pushf sub mov mov les adc push adc nop pop mov fs add pusha testl fild (bad) jns inc xchg or cmp push arpl and mov xchg test lods jae (bad) mov je mov push repz arpl pushl lret push daa test mov sub xchg add fisttpl lea insl stos fs outsl or popa add xchg outsb sub push ljmp cmp mov data16 push add mov adc or sub xor fiadd inc jg jecxz roll aaa or lret jle cmp aad dec (bad) (bad) outsl adc xor dec ret mov adc mov stos incb push push pop outsl scas dec adc in pop mov cmp cmpsl sarl fs push xlat (bad) fadd jge and stos sbb mov rcrl (bad) (bad) mov gs es lock or outsl adc dec pop call (bad) jnp inc mov adc in sub jne outsb sti and or in shr mov mov inc addr16 jns (bad) lock pop adc (bad) dec or test (bad) dec cmp fcomps std fwait in dec movsb dec mov mov jle cld bound (bad) or (bad) (bad) ljmp mov call clc inc out xorb out inc insl pop jmp mov adc push and dec pop iret mov (bad) ljmp fisubrl or insb popa stos dec call add jo shl mov sahf jae inc aam icebp call adc clc es cld aas bound hlt push loop lret aam enter sahf lret je mov dec insb push xor mov insb frstor into mov lods test cld scas inc sbb and fwait cmp clc rorl (bad) fcomip mov sbb add shr daa decl xlat outsb enter mov lock or mov jecxz,pn (bad) out cli xchg mov and in test dec orb sbb daa xor (bad) ljmp ret push (bad) jbe and mov jo mov iret (bad) hlt adc xor test mov rol inc outsb jae cs xchg ljmp add dec mov addl (bad) stc mov push sub das adc cmp dec icebp addl push cmp out jmp mov mov jno lret addb test (bad) sub aam shrb fiadd sbb out clc mov push add stc addb push cli scas outsb int3 push dec or mov fistpl ds pop lahf mov dec sbb inc mov and mov xchg mov and insb mov clc mov mov xchg call test int push push dec adc mov pop (bad) incl out fsubs xchg jmp adc test ljmp lea leave mov rcll and xor out test out flds (bad) jmp or mov std rcll ret mov xor ds inc idiv (bad) (bad) jmp add int and enter or sbb pop lea (bad) mov jp imul xchg mov xchg jno lock mov or cmpsl push mov sub mov dec pop mov movsl push std outsl push push ljmp or dec add and pop (bad) cmpl cld pop rol jg ja cmpsl cli nop xor pop inc inc lea push sbb je mov jg mov dec popf les bts mov and sbb sbb arpl pushl test cmc pop sbb mov pop xor mov jns shl cmpb scas cmp adc inc mov cs lock rcrb in loop fimul insb lods and jbe loope outsl adc ret cld dec ret jl and dec and clc sub mov inc xor stos push inc add (bad) imul xor aam mov jecxz out add int ret xorl dec mulb sbb cli or outsl and add aaa dec pop ret gs ja xor pop pop or xor sbb mov pop mov pop sub imul xor mov mov test mov jg ss outsb repnz push shr (bad) adc sbb pushf mov inc fsubs adc mov mov (bad) frstor jl mov in jne inc or (bad) jmp add add xchg inc pop rolb icebp outsl push dec xlat jb cmpsl ss jb mov mov int3 mov sarb pop adcl cmp bound outsl and bnd push and mov jle mov ds scas jg unpcklps push ljmp lcall pop adc aaa std incl pusha cli pushf es push aam cmc rcll cmp (bad) jg ss je fild enter inc pop out lcall dec mov cmp aad decl jae (bad) imull push lret outsb xor add and loop and pop divl adc (bad) or leave add adc std mov push sbb pop imul xor repz lds push push (bad) mov mov fiaddl sbb fcoml inc and iret rclb and iret xchg int arpl daa movsl (bad) cmp and imul cli popf xor imul sbb adc (bad) (bad) fbld adc dec sbb xor loop xchg adc je insb xchg lcall add loopne shrb (bad) decl push sub xchg fwait mov (bad) hlt div arpl std jg mov pop add pushf les fsub mov loopne mov push cmp sbb cmp pop ja add pop mov inc adc mov or aam mov sub and add lea add popf les pop sub test xor or lret push pop (bad) xor lds inc insb or cmp std mov stos (bad) (bad) (bad) jg aaa adc test fs dec test stc or mov (bad) mov roll mov pop repz add xchg lcall rclb inc lcall cld (bad) mov cmp cmp imul (bad) (bad) pushl xor ss cmpsb outsl stc push mov jnp jbe dec (bad) dec mov dec iret mov fsub (bad) decl scas mov push push (bad) push ret fiaddl ss (bad) (bad) decl arpl inc fnsave push mov mov dec mov lock sub mov adc nop push ret hlt iret and (bad) (bad) out pop and xchg adc dec (bad) pop insb inc aas mov dec fwait pop push inc call mov enter movsb (bad) mull sub sarb ss int3 adc push mov popa sti scas sub ficompl call fs les xchg xor fwait scas sbb test jbe popa fsubl cmc fcomip aaa xchg add int mov lea (bad) (bad) lcall and int3 cltd and xchg or and push sbb pop outsl jmp movsl clc xchg mov out lea mov stos jg ss clc xor adc mov push rcrb (bad) incl leave add pop push les push (bad) jl jbe js ja jmp inc andb test insl ja insl sub (bad) (bad) (bad) inc (bad) pop dec inc out pop shlb and in inc fidivl sbb cmp xor inc inc sar cmpsb add data16 mov pushf or in add (bad) out add pop mov int cmpl int3 rorb mov das enter sbb mov aam loopne loope cld (bad) jl sbb dec jnp ja lcall mov das (bad) (bad) mov (bad) mov push inc lcall cmp mov rcrb mov popf pop insl inc push hlt (bad) (bad) add movsb (bad) and rorl add mov cmp sbb js add fucomip fistpll imul xor lret and push push pop dec mov rcrb push sar incl imul daa push or mov gs roll into inc mov (bad) incl cmpsl xor fsubl pop push stos push arpl (bad) (bad) (bad) mov loope data16 add sbb clc sbb pop (bad) or cmp inc test jl jae movsl add mov sar pop dec insb xorl push mov jne shlb insl mov sub movsl push out mov call cmp les lock into cld (bad) loopne (bad) (bad) (bad) mov fisttpll testb add out popl arpl pop dec add adc in (bad) mov mov lods inc or inc fsubl sbb adc push or hlt test rorb pop enter (bad) xor push stc test pop mov mov gs dec or (bad) je mov addr16 aam sub add dec sbb inc out test aam add lcall scas les sub shll dec outsb and ret jno add iret je ss jg incl andl imul cmp out icebp lcall popa push push push loope test es test daa push call (bad) push into sahf fdivp fbld mov call mov mov add xor out add mov inc test add mov subb cmp clc pop clc cmp cld hlt (bad) and roll mov pop xor cmp push in mov outsl pop popa xchg rcrb iret mov cld pop sub bnd inc rorb mov push fnstsw jle rcrb idiv dec (bad) notl or jno loopne loope pushf mov cld xlat jmp sub add (bad) fisttp jle inc (bad) (bad) lcall (bad) xchg subl rolb (bad) push fwait mov (bad) jns test (bad) sahf nop testb sub inc les xchg dec cmovbe push lcall ds cmp flds jp,pt add dec xchg add daa inc loop (bad) (bad) in inc xchg (bad) jle in sub pop inc mov or pop pop pop loope jle test mov sub xor cmp xchg hlt mov fsubs sbb clc fisttp ja shll in xor gs push push push nop jo pop cmp jg mov pop in nop es int3 insl mov adc add lcall lea (bad) popf and adc or mov lock out rorb pusha xor dec lahf scas hlt or imul (bad) (bad) fisubrl mov xchg sub in sbb jle mov lcall lock add loopne push pop mov pusha lahf das fcos outsl mov cmp in rcrl inc jnp jg mov call jmp push mov inc mov adc inc sbb ja cmp sub xchg (bad) fucom cmc incl pop in out ds add mov inc dec push or loopne sub jno or jecxz lret xor (bad) in push cmc out and in or dec lods andl (bad) dec pushl add cmp pop call jp outsb (bad) out xchg mov sbb je push jnp or xchg sbb mov aam adc lcall adc mov insl nop add and stos jp into and clc call ljmp call sbb pop in rcrb jns sub mov (bad) test popf sub in push push fsubl push movsl jne and or fist (bad) xor inc test sbb jmp mov incb fcoms pop (bad) xchg dec aam jg (bad) decl xor inc or xchg add aad (bad) cmp in inc sub lcall sbb (bad) in dec int3 outsl sub cmpsb cld add (bad) call call popa add jp popa add incl cmpsl cmp or out and in dec repz aad add call mov lods mov daa (bad) jg test ljmp adc enter repnz outsl lcall adc mov lcall std dec fildll jle and jns xlat (bad) mov hlt ret push xor (bad) cli push inc or jl sbb mov (bad) push aad nop push mov mov mov adc cs inc int jne push les pusha mov adc push jbe (bad) (bad) (bad) incl adc or cwtl fwait insl pop roll cmp push xlat mov add mov inc roll push mov insb std (bad) (bad) aas lret addr16 jb push sbb test add pop (bad) clc bound out mov sahf scas ret mov mov push dec icebp or (bad) (bad) push adc mov icebp outsl add jne addl add int3 out jnp sbb mov sbb aas movsl add jne fldt cltd add ljmp push push (bad) divl andb lret std mov mov imul add icebp cld mov xor jne pop loop inc pop add inc pop fnstsw lea lahf js push mov cmpsl jl ret out (bad) xchg bound fstl (bad) lds (bad) and dec fs stos jg pop xchg jle cmp mov jmp adc push insb and push mov out enter push jnp mov (bad) xor popw scas xor scas and xchg jg cmp inc dec mov push decb mov sub insl loop incl daa xor out and (bad) roll nop add pop push jo pop add xchg (bad) or pushl stc xchg or ret or stc inc fsubrp imul push ret lret jg adc outsb sbb dec adc mov inc pusha aaa jp insb pop mov or or cmp pop je push es jecxz clc xchg lds movsl dec cli daa cs jmp cmpsb add or pop lret pop repnz add ljmp jnp add sub aaa ret and push mov add and and or jnp xchg scas mov mov out inc and ret int3 cwtl cmp loopne ljmp push adc mov mov hlt push gs test adc arpl adc sarb adc int3 (bad) decl fildll hlt pop add popf mov add jg mov cld (bad) out clc mov or fdivr dec inc add pusha add dec in xorl mov subl test (bad) (bad) fildll sub aas or movsb cltd cmpsb push pop mov je loopne mov insb mov ss cmp jg xor mov sbbl loopne hlt push cmp decb (bad) mov sbbl in dec mov dec xchg adc popa add scas mov pop faddp mov fwait dec ficompl jle or xor xchg or jecxz (bad) sbb adc jmp mov or (bad) mov (bad) dec (bad) bound out and cmpsl movsb mov push cwtl cli (bad) inc xorl mov push cmc clc mov lahf idiv mov out sbbl lock mov int3 cld (bad) (bad) lcall ljmp cmp pop lds rol shll lea aad push mov sub lds repnz push adc sub xor ss or or sbb push (bad) or fs xor jmp mov push mov push xchg sbb inc adc cltd push (bad) incl daa adc xchg pop push pop mov (bad) dec or inc sbb movsb cmpsb push mov lods mov ljmp jae nop adc jmp repnz jp pop sub nop jle rcrb fcmovnu mov outsb push mov out xor push push bound pusha clc mov insb cwtl aas in aad aam mov mov ljmp call ficom in lock or dec add (bad) fist inc nop int3 and in in fiadd rclb inc mov fiaddl (bad) and jmp inc mov adc pop iret jae sahf lods mov mov adcl jecxz outsb cmp ds imulb ljmp pop add pop xchg jnp inc movsb dec inc fstl lds cmp pop call stos sub imul add jg mov sahf mov adc push jmp dec addl hlt inc pushfw jo fisubrl in data16 in cld push add xchg test ljmp mov ret (bad) push gs test xor push mov push push mov fwait subl or std outsl incl cmpsb (bad) xor insl xor orb jmp arpl int3 incl pop mov fstpt mov mov add mov ret jg (bad) mov lret out sub movsl xchg (bad) inc xchg fstps incb inc ret (bad) out loopne mov jl and mov movups ss in testb jle push mov fsubp jbe les (bad) lock sar pop insb ret cmc mov push int3 out test jmp cmc test xchg lcall std nop xchg inc ftst out aas pop (bad) jbe pop lock mov xor popa adc mov and ss jmp sbb or pop mov dec push std inc call sarb pop jb and mov in in jmp (bad) je sbb add jbe jl mov cmc or (bad) jmp jb out mov mov dec dec add pop push scas das pop inc add jg lea inc or or inc insl aaa or into pushf cwtl add test jo aas faddl mov (bad) mov lods mov xor outsb shrl inc mov sbb (bad) (bad) (bad) in pop xor sti cmpsl lret push cli faddl push js div aas es mov stos int3 add test (bad) lret dec andps aas sub out xchg call cwtl mov push incl dec sbbb lret fidivr lods jne sub scas pusha (bad) xor imul mov (bad) cli decl jle stos test lods icebp lock data16 jbe dec dec jmp insb pop and out push popa aam dec inc (bad) aad or mov punpckhbw push pop or scas push cmp jno fildl mov xor pop xorl jp pop mov sbb pop cmp incl mov repnz ret cmp ficompl rcrb mov (bad) inc jbe hlt add enter insl fnop (bad) pop test mov nop dec mov enter in lret cmp dec hlt aaa push jbe,pn push and loope (bad) out ret sbb sahf push cmpsb jno mov fbld push mov ss cli sbb pop loopne sbbl ja lcall sub fcoml cs push adc sar pushl lea jecxz lods cmpb outsl mov call adc dec or cmpsb dec outsl repnz add pop cmc add jnp clc (bad) ljmp ja loopne xor shrl int les dec ds das pop push data16 ds add xchg (bad) pop ret sbbl shl add test int3 sbb mov (bad) (bad) mov stos jl or je mov mov fcmove sbb cli fisttpl pusha sub pop cld data16 addl and das sub pop clc mulb xchg sbb mov (bad) jo mov (bad) scas mov ret es jno test loopne (bad) sbb sbb xor fidiv xchg (bad) pushl (bad) jae imul les enter adc add movsb (bad) ljmp rorb lahf jmp sti adc mov inc das mov mov loopne popf outsb xor (bad) pop into loope inc xchg add inc in inc sub lods in (bad) fbld es stos xorl dec cmp sub test push in jbe inc push iret cmp inc lods jno add lock aaa or dec sbb push call push jno and mov xor and mov dec cmp pushf les clc and and outsl in call sub sahf dec cmp (bad) sbb sub pop mov xor xchg pop fidiv xor cld inc mov push int3 ja ljmp ljmp mov call std jecxz xor (bad) (bad) cmp loope inc push add add push insb loop sbb add sbb dec push push sub push insb ret cwtl cmpsl pop jno lret stos lock push jnp loope dec jmp pop cmp pushf mov mov aaa (bad) (bad) (bad) pushl mov cltd popa cmp lcall mov sbb ja jnp jbe or inc dec cmp outsb ret imul ret aad adc stos add inc in cmpsb ja pop or jl mov inc mov ljmp data16 lcall and mov addr16 adc dec in call clc push mov rolb sbb int mov (bad) and ja jmp or inc mov into sar mov bound or add sbbl rcrl sbb mov (bad) fildll push outsb out mov adc mov pop push out rolb loopne xchg scas cld mov cmp out and (bad) insl and (bad) out mov fidivrl (bad) fimull clc jbe or push inc stos pop cmp fdivr (bad) pushl jbe (bad) push sbb push sbb insl popf out hlt orl data16 xchg sahf (bad) or (bad) (bad) (bad) dec or fldl sahf dec dec lret pop pop in shrl inc daa insb xor and add pop jno mov nop and fscale lods pop mov mov incl loope xchg add and jbe xlat adc lock mov mov mov shl and pop adc jecxz pop pop and (bad) mov lea (bad) negb pop push sar decl push int3 ljmp into pusha js je outsl (bad) (bad) (bad) lcall lret xor jbe add ss xor inc inc lcall push lcall dec dec and push pop xlat inc addr16 mov inc mov icebp ret in pop sub decl adc fmuls push mov dec pop push loopne inc call rolb add xchg mov push daa sub xor inc outsl cmpsb icebp scas jl jns ret movsb enter cmpsb hlt (bad) call andl mov js add outsl push push rorb mov (bad) pop sbb icebp adc fidivl iret xor insl hlt data16 add lcall stos rcll add xor push jge add std mov fbstp jo sbb or fmull into jmp outsb cld push add sub mov pop mov inc cmp mov jg add sbb sbb xchg cld and sbb lret xchg (bad) lcall int3 cmp sbb sub add mov out xchg add inc dec pop xchg js add pop in sub mov jne cli cmp in inc mov flds int or add shrb sbb sbb iret cli nop adc decl inc xor ja push jno fisttp jmp inc je cmpl adc (bad) add push dec pop fimull (bad) push jp aaa sbb (bad) (bad) (bad) pushl dec ja js or push add lods add or adc cmpsl inc pop outsb or lods or pop jmp lock sahf inc jbe jmp dec loopne (bad) icebp out xor push sub fwait (bad) (bad) (bad) fistpll loope (bad) adc mov pop sbb mov sub (bad) sahf in lods xor mov push fisubr (bad) cmpsb xor mov cmpsb push xchg adc fldcw bound je cwtl xor lea jae dec adc (bad) fbld mov mov test lods movsl inc clc lcall ss inc fsubrs mov mov inc cld and and push inc cli cmp in cwtl shlb lcall jmp popf sbb jne cld movsl add (bad) (bad) (bad) mov mov imul cmp cmp ds and xor loope (bad) (bad) call in repz outsb and movsl sbb sub repnz sub add packssdw clc add sub stos push cmp mov mov sbb sub (bad) fildll mov clc repnz je dec mov jns mov clc mov popa or aas fiaddl (bad) out push bnd nop sub icebp mov dec adc mov outsl sub (bad) mov arpl adc push xchg push jb (bad) lcall imul in sub inc sahf fwait xchg scas lret dec (bad) pop sti nop dec mov push pop (bad) (bad) ljmp inc jno xor inc fiaddl jbe pop ljmp dec or mov cmp adc adc lods popf jecxz add frstor dec stos or push adc (bad) adc cmpsl xor mov pop test inc pop rorb add (bad) ljmp fldl inc scas or call test roll sbb cmp or dec add mov nop adc adc daa mov mov pop inc lret adc cmpsb xor sbb lcall pusha add inc mov xor data16 clc in ja mov push les push (bad) (bad) lcall movsb push mov shlb call imul rolb dec fsubs cmpsb and movsl push inc cli push pop xor and jg mov loopne mov mov sbb cmc pop leave add inc aaa or mov dec xor and fiadd popa jmp idiv (bad) cmp lds test jg andl pop hlt pop mov fimull in pusha mov cmp or in add div push int ds loopne pusha aas dec stos adc aam mov sbb dec jne std add (bad) fbstp mov pop mov std cwtl out mov pop imul dec sub (bad) (bad) (bad) incl shrb decb sub add dec push sahf sub adc fmulp adc sbb sbb and mov jp cld (bad) pushl pop add sub imul pushf rorb fistp clc int pop mov mov insb out pop dec push outsb inc ss addr16 add loop lods pop stc mov push jg jmp test arpl add std test dec xchg sub aaa aad fimul pushf and mov mov ja xor imul push jp subb adc inc nop xor mov leave lock aam cltd leave push push aad sbb add pop cmp or mov sar test (bad) xlat add cld mov cmp repnz sbbb adc lds push scas aad adc data16 stos push ret pop jecxz xchg sbb popf fildll sti adc cli (bad) fildll sbb push fidivrl lea jo js call xchg pop lret jl in repnz (bad) pop ret jno sbb call mov repnz xor sbb ficompl (bad) cmp es aaa adc test mov dec (bad) mov test xlat popf call inc (bad) (bad) (bad) jmp push mov inc int3 outsl mov test xor push outsl push and sbb aas sub jae push incl dec ljmp loop inc mov mov (bad) mov ljmp adcl loope es call mov bound ja sbb jno ret ljmp bound adc loope scas test int sbb rcrb incl in ret pushf insl sbb arpl fildll or data16 roll call pop bound pop jg (bad) pushl cmp shll inc pop cmp cmp mov std ljmp mov imul adc ret je scas fsubs fs pop or mov xor mov fimul dec sahf sub ret cmpsl (bad) (bad) jg ss inc mov into push or add scas movb out inc or xchg jbe mov xchg sbb or icebp (bad) incl xor imul mov lret mov rsm fimul xlat push sbb mov lret enter (bad) incl dec and fisubl out fiaddl jb stos cld pop and sbb cs jae loope or sub (bad) ljmp pop into dec cmp insl sbb fiadd jl insb push mov fs add push clc cltd dec out std dec ret adcl (bad) push xor sub mov jle shl push je movsb jb enter sbb push fdivl add (bad) jg test jnp outsb addl mov fildll cmpsb aaa in into xlat inc lock xor call nop add push jmp mov jno aaa push push adc xor js mov lock scas push call jp out or cmp mov mov aam outsb rorb add mov sub or cli aaa js pop cld stos mov add jmp jmp fildll or lahf dec adc mov mov xchg xchg lea pop jo pop nop inc (bad) outsl cs cmpl push adc or sbb stos popa pop xor xor and mov stos aam les inc incl pop les push xchg add outsl xor aam mull sub add ficom xor dec and pop push (bad) cmp fistpl mov dec shll mov (bad) (bad) (bad) decl cmp ds (bad) mov addl cmp fwait or in into into jo pop es rolb stos cmp xchg lahf adc inc cmpsb cmpsb stos popa js fsubl fwait movsl pop insb cmpsb or sub pop mov adc addr16 rolb and dec push xchg push xchg clc (bad) fbld js ljmp fiadd sbb push inc cwtl (bad) (bad) mov fcoms and inc or das mov sbb xchg inc (bad) insl (bad) pop cmc (bad) jmp icebp push push sbb or add insb cmp cmpsl mov (bad) (bad) mov jnp addr16 outsl push xchg push sub jno mov bound test jl dec (bad) dec iret mov mov adc push dec pop or add inc xor (bad) incl ss or pop repz sbb sar add xor je fistpl inc mov in lcall shll es cs (bad) ja mov getsec fsub pop sar decl fwait jle push stos ljmp mov sub add in stos (bad) popf (bad) (bad) out adc dec mov (bad) lcall xchg mov dec imull outsb shr adc hlt mov jg jmp (bad) ja adc les cmp shlb mov fs call xchg stos mov pop int3 insb adc nop in (bad) jmp cmp ljmp popa fiaddl pop das jg (bad) (bad) jg jno aam or jbe or and pop dec ljmp inc je sti add mov sbb rorb in xor lcall ror into push jnp jns lds or inc rolb cmpsb jg ja xor (bad) mov call pop dec jb popa (bad) push insl push aam popl fwait inc sub inc sti into mov pop rorb cwtl jp or fwait nop or sub dec in push and pop lret pop outsb mov jbe in push mov xor add (bad) jp jbe incl popf pop in lret inc insl nop cmp aam pop je or mov jle dec inc sbb ret lret push pop or sar and cwtl pop je cmp lea notb sbb mov jge hlt (bad) fbld xor gs scas add sub cld (bad) decl fiaddl in iret rcrl pop ja (bad) (bad) decl sbb mov lods jo cmp mov (bad) adc leave xchg jmp data16 and cmp (bad) (bad) mov mov bound loopne sbb sub dec jbe mov test inc cmp lret jl lcall mov faddp add movsb cmp mov daa jne inc je mov aad cmpsb dec pop sub aas push mov lods loop clc incl call mov aaa stc outsl pop cmp mov xchg push adc jno fcmove mov adc or cmp outsl fdivp pop lock in or cli es dec sbb push xchg mov mov and push dec in or mov rcrl push fcomip push jno mov add out (bad) ljmp call fsubrs add mov hlt flds scas (bad) jmp jl push dec bound pusha fucomp push call les ret mov add fidivrl aam push test xchg (bad) mull ss mov aam int add jo adc ss lahf arpl pop test scas ja ljmp sbb (bad) and ds icebp xor push and (bad) jns (bad) add test dec and out iret stos jno (bad) (bad) (bad) jg inc lret out cmp jl jne pop inc out sahf push mov cmp mov (bad) (bad) (bad) call stos add push sub (bad) mov inc (bad) mov push adc outsl cmp jo xor les sbb mov mov mov (bad) (bad) mov add sub xor imul sbb test fildll out push cld sub int3 cwtl imul mov clc call or inc cwtl inc jecxz sahf pop and adc mov xor push aam ret lods test (bad) dec sar (bad) mov mov and sub daa jmp rcl adc das push push outsl cli pop hlt push rol test lret xor mov dec mov psrlw loopne pop out jbe add andl les loopne (bad) ret jmp or das cwtl out xchg das fidivrl shrb loop sbb sarl cwtl les adc cmp fmull shrl movsb popa test into and jg inc xlat jne pushf pop int mov cld lret aaa cld (bad) (bad) mov rcrb lds roll in inc les ret push js in or test inc ljmp test or mov jnp (bad) fbld jno jl mov pop push sbb xor jg lds sahf test int ret xlat jg das push int3 mov add cmpl xchg gs loope fadds hlt loope cmp lea scas decl (bad) bound mov pop cmp push jnp jno sub lock (bad) (bad) ljmp int3 push pop xor popl inc cmp mov fistpl aas lret lcall jo movsb push xchg jo incl jg popf xchg xorl lods ror push xor fs (bad) (bad) cmp testl cmc jb je cmp mull or (bad) jg notb mov mulb sbb adc sahf ljmp add xchg in lret addl in fwait push ret sar jmp push adc xchg insl sbb sbb adc pop add dec xchg mov xchg cld sub es arpl lods push sub mov pop jo aaa or ret (bad) stc push (bad) xor repnz popa ret decl sbb fwait dec add mov mov ds sub or sahf nop pop bound pop insl push fidivr jl in decl icebp xchg sub or cmpl lahf xor int3 cmp incl pop push push push or int sbb inc fsubrs jmp ds rol push mov (bad) pop dec lea pop adc inc xor add cmp aaa loop (bad) fstl mov scas (bad) andl (bad) pop xor mov push sbb cld incl daa xor push xor sbb (bad) sub call jbe xor push shll pop xchg add cmpsl mov sbb sbb adc fbld test mov mov (bad) ljmp push add inc mov mov lcall test shrb gs jbe (bad) pushl add add adc addr16 je (bad) (bad) (bad) incl push repnz out daa inc int xchg dec sub test mov pop inc insl dec and fildll mov flds popf stos sbb push push adc mov mov push enter dec outsb mov inc sub add pop and (bad) jmp dec test outsl repnz aas xchg jns push pop pop inc mov outsl cmp scas mov mov sub ljmp enter sub test adc add ret loop xor push pop pop sbb outsb fnop dec loop scas subl fsubl popf xorl test in inc and and mov inc add out movl cs cmp xchg insb mov stos dec fsqrt mov in insl sub cwtl lods pop daa out jae ja mov in and in sbb jg lock inc movsl xor mov (bad) adc (bad) nop subl mov imulb mov sbb sbb pop sbb (bad) fwait cmp push push (bad) or push pop adc and mov fildll dec adc cmpsl dec scas xchg sub gs lcall mov mov into dec push daa pushf jl add (bad) jmp mov or xor outsl jo int hlt dec adc cmp inc int3 enter ljmp lahf adc leave sub cmp adc push fsubrl add and test adc aam pop and add mov mov (bad) mov lods lods insl lea stos xor nop cmp add call or mov and shr dec aaa jmp sbb adcl mov cmp add sub sbb incl push mov pop mov sbb sbb lcall lds (bad) (bad) jbe mov into dec cmp test aam mov (bad) add (bad) adc and incl clc sti sbb pop inc lret scas (bad) hlt ja aas (bad) fcomip ljmp adc mov roll mov pushf pop aaa outsl jb hlt push xchg jmp (bad) incl or cmp vunpcklps pop dec fidivl sub dec incl decb fs push arpl cmpsb xor shll rolb mov cmc xchg in xchg push call fldt (bad) push test jae push fiaddl movsl enter mov test pop sbbl outsb cmp adc rclb jmp lds ret pop inc je movsb pop add xor std (bad) jmp jle push push (bad) push loop add rorl pop mov pop jmp dec sti bnd cli fmuls shrb (bad) call push and pop adc push mov ss aam lcall call cwtl subl xor fistpll sbb dec jmp adc inc and ja clc out hlt ret je add dec sub scas xchg leave (bad) mov popf fwait push jnp dec sub cs add rcrl call daa push sub jno mov cmp flds sar outsl jmp dec xchg dec xchg add loop fiadd pop cmp in lcall mov push (bad) ljmp mov jle sbb (bad) xor jns cmp add fnop (bad) cli push icebp ljmp cs les add sarl sub xor xchg lods push xchg adc xor jmp repz rcrl dec jb decl add jne data16 scas ja dec lods mov cli pushf adc jge (bad) mov sbb cwtl cmpsb sbb and add call fadds in test jle jo mov lods add (bad) (bad) ljmp or jbe (bad) jno adc add xor (bad) cld nop jne xchg inc cwtl adc mov lods out cli decl dec jp cmpsl insl push movsb in jno jno xor (bad) mov push insl and pop xchg lds call stos je jmp mov xchg daa xchg jp push rcll adc loopne test and and stos or jo mov cs sbb sti (bad) ljmp xchg in sub adc insb or mov push les add cmp mov je inc (bad) mov adc negl ljmp inc insl shlb mov jmp push cmpsl push push inc (bad) (bad) (bad) pushl imulb or in inc xlat sbb and loope je dec in mov lea mov ret jbe mov decl insl sbb inc jb cli stc add jg jmp or mov add pusha andl cld and (bad) (bad) jg rorb jge and dec repnz mov adc lret clc push repnz pushf mov jge int mov pushl adc aaa and fmuls shrl add jg inc ljmp mov push inc cltd icebp add incl jp loop sub sbbl cld (bad) decl loop sahf dec jns pushf aaa out inc fdivl cmp add inc insl repnz mov inc incl push inc jbe imul cli ds pop (bad) or movsl mov inc nop daa fisubl jge es xchg or sbbl add ss xchg sub mov jae mov enter cmpsb (bad) incl add repz dec mov mov cld (bad) (bad) js cmp xlat aaa push bswap jle ret fstl popa incl pop xchg push leave int or sub dec clc sbb idivl push and sbb popf add push ljmp dec aas pop stos nop xor dec (bad) jnp icebp (bad) lcall test insb orb mov or jbe jle cli and dec dec jbe and and inc jg sub sub cmpsb sbb mov add ja repnz cmpsb push arpl shll adc (bad) incl inc push adc mov pop add jle out push or push subl out inc lret or inc nop (bad) incl mov test xchg sbb cmp mov outsb mov (bad) (bad) jmp sti and jne stos fs lods and call subb ljmp js push lock lcall orl imul fisubr mov xchg sbb into or fld1 clc jge pop adc fsubs mov int sbb out lock mov imul andb or lret mov aas xor dec sub xor mov jae (bad) lcall (bad) aad add sbb scas sub adc orl rolb gs dec mov (bad) or or (bad) (bad) (bad) in xchg lret cmp imul or fistpll xchg push ss and pop push add lret in xchg mov mov dec out pushl cld pop or sub dec call outsb push shrl jns and pop loopne inc add ss fstpl incl imul mov xor inc mov je aaa fprem imul repz jge enter data16 jne mov (bad) call int3 ss hlt xor aam subb inc jae xor push cmp add jmp push (bad) cmp mov mov daa out mulb outsl les or jne and (bad) or jg pushl movsl sub mov cmpsl stc (bad) add jecxz dec out and pop push mov cmp ret xchg add xchg (bad) (bad) (bad) call push adc cli movsl (bad) sbb xchg adc hlt inc xchg jbe xor sti adc das js jl and push test push (bad) sahf xor ljmp sub std test repz lock or jle insb mov mov in cld xor jl (bad) std dec sbb jnp xchg jo cld inc inc jae (bad) daa xchg inc or dec inc push imul and test popf insl dec std in sbb scas add or sub jle sbb mov inc add dec or ljmp pop stos or mov aas movsl fisubr scas lock orl fisub pop lret cld sbb popa dec push pusha mov jecxz sti (bad) out adc sub (bad) nop addl (bad) (bad) jg add scas and dec or mov fadds das clc push mov cmp inc xchg xchg movsb jmp lods fstps sti push pusha pop cld add inc mov pop insl cmp inc (bad) call jnp aaa push mov add int3 cmp sub inc mov sub cld push push lock incl rcrb leave (bad) nop (bad) fiaddl and push ljmp dec cwtl daa insb inc nop sub cmp cmp xchg sar mov xor cs shr aas xchg (bad) loop (bad) cmp xor inc in xor fprem1 outsb xor mov mov pop xor or (bad) xor sarl repnz and std aad push push (bad) hlt jg mov ljmp sbb jl fbstp arpl (bad) mov xchg adc fdivr cld adc movsl ret iret testl ss jne shlb and (bad) (bad) jg popa stc pop inc out test xor sbbl push ljmp dec rclb add push inc insl xor fcmovb fdecstp les in mov cmpsl imull outsl cli decl or mov cmpsb sti enter or sahf data16 xor and idivb (bad) ljmp test mov movsb fistp fldt arpl incl loop out out push bnd outsb negl out lahf incb pop fdivrl inc inc push out pop and mov add mov add (bad) (bad) cmp loopne add jp jnp (bad) sahf xchg xor fsts mov out adc clc loopne dec movsb negb xchg fwait and fcmovnbe (bad) outsb stos pop dec int mov sbb (bad) mov clc fldl fadds lds fnstsw (bad) incl mov popf int mov ljmp ljmp test pop inc sbb scas daa xor in cmp (bad) (bad) call ljmp xchg mov xor cmp inc pop and lea mov loopne mov in xorl xchg or cmpsb in push sub mov bound dec cltd iret addr16 sar pushl push (bad) cmp inc and cmp fwait inc sbb ret daa cmp jle (bad) mov insl pop jle xchg push loopne inc and inc mov fnstenv int dec cli aad adc mov (bad) (bad) (bad) mov cli dec add inc sbb and fsubrs imul inc jmp jecxz mov push das cmpsl mov xor mov hlt mov nop xchg jno (bad) (bad) call sub dec enter aas mov leave push aam jmp rorb inc xor mov cs and dec pop push mov (bad) ljmp pushf sbb fwait inc fistpl call fs xchg jns lahf pop inc sbb es (bad) mov sahf pop add (bad) xor or int3 xor pushf cmp inc pop imul in sbb mov (bad) ret in testl add sti pop adc mov mov inc push cmp push sahf xor mov inc sub or nop fstl call lds (bad) into sti (bad) jne std adc sbb in enter inc and ret jb or popf in or test (bad) outsb or mov int3 gs mov (bad) (bad) inc push or data16 adc jno ret sbb subb jecxz es mov stc aam movsb outsl pop push inc test scas mov add push or dec clc dec loope or lea mov and out add rolb mov adc xchg dec pop movsb sbb jle jg (bad) call and clc mov inc ficoml add loopne adc clc incl sub or push loop pop inc fdiv (bad) fwait popl add cwtl in movsb loopne xchg or jg xchg and cld in and icebp add add dec xchg mov outsl and das jb pop xor iret xor add clc add jl sub hlt fs sub sarb sbb push fstp or (bad) stos outsl (bad) jg add jl push test ret push bswap shr pop add adc adc (bad) decl pop mov les hlt sbb bound scas call dec push mov sarl inc adc stos hlt and xchg sar add ljmp shrl or xor pushl inc cmp or dec pop mov enter inc loopne int add fldt mov lret pop pop test jp out sarb sub call pop jno and loope mov test push lsl fs (bad) mov fsts xchg loop pop (bad) hlt inc mov and fldt test dec push shl subl fldenv ds sbb (bad) (bad) cmpsb enter pop jg subl or (bad) and rcll ja mov ret push sbb in sbb (bad) lcall inc cmp inc xlat cwtl imul outsb sbb insb (bad) jnp pop adc xchg popa xchg cli xor enter shrl (bad) (bad) xchg xchg cmp test inc lds in (bad) (bad) mov inc inc hlt out mov fisttpll adc bound int3 stos mov loopne push shll add aad cmp data16 xor mov inc cs add out shlb hlt mov sub lea xor repz push inc mov and sub pop pop inc std mov stos pusha push cmp (bad) ljmp ljmp pop add fs push mov push lret mov lock or push fsubl mov insl mov das inc ljmp push pop movsb adc push sub sbb adc out stos ja pop call in add cmp mov mov jmp arpl dec aam jo ficom popa out add xchg gs and mov aaa sbb outsl pop in ljmp loopne in inc pop or dec movsb insb inc add insb rorl sbb add dec mov test cli mov movsb lock je popf mov iret ja jbe jno and (bad) (bad) jge ljmp jp pusha add add pop pop divb mov jge mov push jmp mov sarl insb fadds mov sbbl test cmpsb sbb stc arpl cli push (bad) fildl and mov lea cmc add loop lods adc mov scas mov jg fdivrs or inc (bad) adc mov sbb xor cld mov pop into dec xchg or mov ss or mov add jecxz cmc jns cmp ret les jno jge or dec lea lods in (bad) cmc fiadd and or (bad) jb push add (bad) cmp fs fcomip mov jl push push fwait mov aas lcall decl (bad) arpl ljmp mov add push inc (bad) rolb (bad) in or call jbe add out mov ds dec xchg mov fdivrp test js fildll cmp mov (bad) fild lahf (bad) (bad) ljmp scas pusha mov inc add ror mov adc imul or stos mov cmc (bad) (bad) inc jo cwtl xchg sbb cmpsl xor or xchg (bad) mov push (bad) mov scas add xchg mov and das add mov mov jge mov fwait (bad) leave xchg push lock (bad) jg in mov push in dec xlat mov sbb (bad) scas xchg add insl aam or or aaa in mov add ja popa into inc push mov xchg hlt (bad) scas xchg (bad) rolb mov adc push mov push and jae (bad) call mov (bad) sub in xchg enter push data16 decl or or adc (bad) xchg testb adc xor das rclb jnp ds xlat inc mov fnsave loopne fidivrl out cmp mov ficom or in repz pop pop adc shll pop imul fidivrl inc decl inc pop ret pop int cmp movsl mov cmpl sbb push push ret data16 ljmp xor lret and repz jmp xor iret flds shlb std incl xchg and in pop mov dec (bad) (bad) (bad) mov jbe mov (bad) test pop test in add dec cmp sahf (bad) (bad) (bad) push or sbb pop mov mov sbb add outsb mov sub push jnp mov pop loopne push jecxz subb pusha sbb fs dec push fwait xchg sbbl sub js inc mov (bad) mov shll adc push subl sbb (bad) (bad) (bad) pushl fsubrs push hlt or mov xchg push sub dec fmuls push popa add (bad) std inc roll outsb pushf sbb enter jns clc sub (bad) std push aaa inc push cld or lcall adc (bad) or mov popf sarl scas jne call fs add jmp and pop ss punpcklbw mov add dec test cmp fimul mov (bad) incl push xor add iret int (bad) adc adc (bad) (bad) call push cli lahf js fwait cmp addr16 loop or jo or pop jne xchg dec stos lock xchg dec ljmp jae mov cltd out or mov nop (bad) pop cs fwait push fbld or popa insl mov mov cwtl js xchg mov loope jecxz decl mov push pop int imul pop sbb push mov mov xor gs adc dec test mov sbb imul add ret fwait mov push cmpsb and adc aam cmp cli mov cltd xchg mov std je scas cmp sbb cmp cmp sub jecxz js dec or pop mov scas ljmp add mov inc and mulb mov mov add inc add cmc sub jbe,pn mov push sbb sbb jp mov or jecxz mov or cmp pusha cmp sbb sar inc jne sti push (bad) stos mov rclb out outsl cld (bad) jg test out ds mov mov imul and push decb inc mov rcll mov pop or add pushl or mov call jnp mov sahf and imul adcl mov fs call out ret adc enter push xor cld push xor sub data16 mov (bad) (bad) (bad) ljmp arpl cli add adc shr pop sub mov aaa (bad) mov lods ret daa movsb add nop pop movsb xchg push insb dec xchg cmp (bad) mov pop stc or sahf or add loop lret scas cld stos decl mov lock jne jp cmp mov out cli or in mov adc or cmp iret mov mov lods dec enter pop jnp xor or (bad) cmp out xor rcl cltd and jg (bad) sbb sbbl lcall hlt inc cmp aad sar or int3 pop imul icebp cmpsb test xchg sbb test and add pop push and adc lret jns faddp pushf (bad) (bad) (bad) out push mov jl push bnd sbb loope in adc inc cmp ds shrb push mov outsb adcb in imul inc add sbb xor add data16 in add jno sub jae insb imul cmp cmpsl mov (bad) lea and inc pop lock mov pop jge mov cmp lock gs add pop xchg and lcall roll push ror ljmp push push inc mov add mov ret push test inc jno sub sub mov lcall or lahf jle orl movsb add push sub cwtl push sti idivl adc jb adc aad int cli cmp adc repz add ljmp or aad mov out sub ror pop clc (bad) decl xchg (bad) (bad) push fcoml imul sbb pop or add ja,pt adc popa lcall call dec add into dec pop mov shrl arpl push or adc bound and gs icebp lcall lock fidivl and lahf les jae push and mov into cmp inc cli (bad) ret fisubl push js and pop xor inc jne mov out sbb adc add clc push pop subb cmp orl cmc jae jmp mov int3 fwait stc popf push dec sub and cmp rcrl sub adc inc ficomp adc or cld and ljmp ljmp addr16 faddl ret adc (bad) or pop mov movsb jae push inc (bad) pop shr adc adc mov repnz xchg dec or shrl popf jmp sti int add popa jno adc and xor in pop roll test loop and lock push or cs mov sbbb pop jp lea aas mov add push inc ja outsl rcl push (bad) push pushf and fs xor cli pushl scas xchg xlat mov add insl fsts cld (bad) ljmp xor ret adc jp mov mov aam test lock popf test cmpsb les add mov mov mov inc ret and xchg sbb pop mov test cli lcall imull je dec or xor lods daa or (bad) adc pop or dec ljmp (bad) decl pushf and or push imul push pop dec mov (bad) lcall loopne js cmp insl and jbe notb lret mov inc inc push ficoml pop xchg pop lds (bad) aaa rcrb push cmp or (bad) ja sub call insl jb xor (bad) mov dec push subb cltd scas jo dec mov (bad) mov jge fneni(8087 mov (bad) mov and push cld (bad) jg mov outsl jle add xchg or loopne pop pushf in subl cmp test cs popf xchg (bad) ja or inc sbb xlat cmpsb call mov out popa add out and push aas aaa xlat scas and ljmp push dec push icebp xor push jbe shrb add data16 cmpsb inc lds push adc pop mov xor cmpb add lahf inc sbb adc push aaa mov xchg jae (bad) (bad) mov test inc dec das ret out adc or inc gs dec adc mov dec fsubrl dec inc je sbb cmp cli push push mov out js mov insl adc (bad) imul sbb pusha jbe call les into sbb add loop pop or (bad) (bad) mov add cmp hlt fcoml mov xchg popf movsb (bad) jg sbb mov inc mov jae mov sbb fs or cld inc push pop xchg sbb cmc and pop jbe nop inc sub inc js (bad) je lret cmp (bad) testb dec or xor xor dec out push subb inc add mov jns (bad) ljmp adc (bad) xchg xchg outsb and or mov lods mov pop (bad) fdivrs addl pop clc push (bad) push (bad) (bad) (bad) in (bad) mov push pop call push leave push push pop icebp inc or lods jo loope (bad) mov stos dec out inc sbbl sub pusha cli pop add jns (bad) mov clc mov mov add in dec loopne cmp dec jne jecxz xor pop popf sbb (bad) lcall fnop cli lods aam (bad) fidiv jl ss subl sbb mov or pop cmc loope mov enter dec aaa push cli ja jg xchg sub aas pop lcall nop imull sbb mov addl rcrl ss adc sbb push and rolb xchg in and jge add (bad) xor scas (bad) ljmp mov data16 shll fwait push push jnp es cmp (bad) (bad) jmp paddusw aam dec in jns xor xchg in push cmc sbb mov sbb sar ljmp pop xchg cmp adc and or (bad) xchg sbbb dec push push mov add loop and clc xchg add push insl (bad) fwait add fistpll outsb push ljmp (bad) mov cmp cmp adc sbb call add es (bad) repz fildll mov shr (bad) out nop push int enter std aad aaa inc in stos int inc icebp cmp sar cmc cmp aad cld jns in xchg std das sbb add orl inc adc push sahf mov pop mov icebp xlat ret ficoml jne (bad) xchg cmp in arpl in or repnz fadds sub jno ret or sub out lahf push sbb (bad) (bad) decl or jecxz and xor iret pushf lahf lcall mov jbe (bad) (bad) (bad) (bad) (bad) fstps rcrl (bad) stc test mov xchg jmp loop nop daa inc insl pop jp sbb test sbb es inc lea xchg nop inc out jge push mov or xor sti ja (bad) mov leave add mov mov dec imull or bound xchg sbb (bad) jg icebp icebp lea cmc lods aam idivb sub arpl cmp incl and xor lret xchg nop and pop in cld xchg xchg cs lea dec out mov (bad) mov jnp lock enter pop push out imul outsl clc test sub in lret movsb arpl int3 sbbl int3 and mov lret neg add push ficompl (bad) call sbb xor cli and fs pop push xchg loop insb loopne mov mov lods popf and (bad) fisttp das rcrl inc sbb lods adcl fwait insb and loopne push imul fcoml decl loopne addl insl and fs adc in movsl pop adc out test fldenv mov push in pop sub ljmp pop mov xchg mov pop cmp std pop and and sbbb cmp (bad) sub sahf push test test test inc jo (bad) out sbb cmc (bad) push mov fisubrl or jne mov fildll jmp and mov and add inc fistpl arpl sub dec dec cmpsl mov adc jle pop clc push mov ficom cmc mov jg push or cld incl dec lods or out imul cmpl xor pop push fsts ret cs int rolb (bad) ja shlb inc mov adc stc mov rcl call or out pop sub (bad) sbb add jmp insb pop push pushf pushf (bad) (bad) mov dec mov cmpsl ret imul sbb pop (bad) jb cmp ljmp or arpl jno out add pop push push pop push and outsl sub jp push adc xchg loop dec or stos fidivl fwait and iret mov gs daa js pop cmp add ret or (bad) inc aas loop add cmp cltd into fiadd pop cmp dec mov jg cmc push adc popf or xchg or imul cmp js nop (bad) ds fwait cmc sbb decl fmull xor xor push fildll xor xor outsl cmp mov outsb out nop ret js sbb mov sbb add incl aam popa and adc shrb cmc mov (bad) fs or mov jg call pushf xor xchg stos or ss mov sub je push mov (bad) jae gs loope dec sub test (bad) xor xor push jne nop stos gs leave inc in mov (bad) xchg xor icebp push push adc js andl sbb mov jo or sbb push mov lcall mov sub and push or lcall mov jl flds inc mov iret aad call add ret sahf lret mull in out imul lods ljmp cli fiadd fdivr (bad) (bad) fistp and arpl js sahf and ja ficoml pop mov roll xchg (bad) pop test outsl xchg hlt (bad) jge dec clc jl adc (bad) and adcl (bad) pushl sub dec cmp popa sbb or add rorb lret (bad) pushl movsb jne sbb and sbb jmp xorb xchg (bad) (bad) mov insb cmp adc add sub loopne mov and mov push loopne push xchg decl adc icebp (bad) in das mov push rclb mov sbb cmpb cld push cmp pop cmp xor (bad) jo pop loopne decl ds add fcmovu xor loop and clc mov rolb sbb addb sbb (bad) mov pop orb and cmp call test xchg mov pop test mov inc add rolb or push or jl add add (bad) (bad) call xchg xchg mov pop add push push mov jae add test fcoml imul andl fwait sbb (bad) jg adc xchg and pushf mov mov ljmp or sub mov add jmp sbb fs std push inc jne jno shlb cld add sbb xchg icebp xchg sysenter sbb or es cmp enter cwtl jp jne lods icebp cmc sub push pop pop mov popa into mov jmp adc jns adc mov xor cmc lea sahf inc or jae (bad) jg ret andl iret mov adc roll int3 xchg hlt (bad) (bad) mov dec call or shlb out or scas mov lock sub ret add (bad) lock mov lods test sub ja mov icebp adc add sbb dec mov jg mov xchg pop dec cmp xchg xchg nop es mov mov cli (bad) mov pop add sbb add adc pusha adc adcl outsb or mov fmul push je push sub psraw call pop nop inc xchg ja mull adc jecxz pop lock mov push jecxz jp inc xchg aad clc ljmp mov sbb xor sub nop cmp adc mov add out dec jb cmc stc mov jle inc (bad) xor inc (bad) lcall adc push push mov add or add pop out sbb subl mov in adc add xchg push cld (bad) jg scas clc rclb repnz xor je inc test push inc add lock xor push push stc inc and fwait or cmp (bad) decl jg mov or cmc inc xchg lock in in outsl adc jmp mov add xchg pop fcomi repz cwtl mov fbld jmp notb and gs popf imul mov lock mov cs loop sub inc push adc scas add push xchg inc inc icebp ret fs call cmp or add das loop popa mov adc loopne pop pushl call mov test scas inc inc inc fldlg2 (bad) mov mov cmp cld (bad) sti inc cmp ljmp and cmp or ss sub push or out outsl js lcall xor test iret es insb into xor ja std pop hlt out insb cmp lahf push repnz les or xor sbb add inc outsb sub stos or stos ss ret (bad) call sub lcall mov insb mov int (bad) pop and push inc jno or dec stos (bad) incl fldt dec pop sar or jmp aam roll nop add jmp mov gs or xchg adc pop ss loopne leave dec les pop js outsb mov cmpsb cmp das (bad) jmp jg ljmp cltd add jne pop xor inc ret jle add (bad) jg mov insb (bad) adc aaa or push mov or jp js push lcall loop and cmpsl inc sahf cltd int daa mov add rcrb pop ret (bad) ljmp adc pop jnp sti outsb inc mulb ja sbb dec mov loopne inc sti lock cwtl xlat adc push sti mov pushl nop push mov mov je in push xor (bad) pcmpgtd fcmovnb mov icebp stc movb pop imul jbe and mov mov fstpt inc jg outsb sbb jae cmp roll cli decl popf rolb stos fcoml dec push inc ljmp mov in out daa or test decl into notl mov cmp aam xchg jmp push lret scas les imul xchg push (bad) bound cmpsb jmp push bnd ret and cmp inc enter (bad) btr pushl mov outsb daa mov pop cmp lahf mov adc (bad) (bad) mov loopne inc xchg or bound dec xchg test mov mov (bad) mov push in adc lea imul add icebp pop cmc jmp xlat sbb xchg or popa rorb add or jne push aam (bad) mov stos (bad) incl push xchg idivl (bad) xor pop mov mov lcall cmp lcall xorl clc push dec data16 sbb pop xchg pop rcl ss inc sahf shlb enter mov and fiadd mov mov inc mov push xor cmpl sub daa movsl and int3 nop out and mov cmc push sub loop (bad) fstpl or xor mov jmp xlat mov mov fwait cmp (bad) fild fld pop jb push (bad) mov xor dec jl add push jne fisub ss sbb inc in (bad) mov xlat mov pop inc add mov imul cmp (bad) or add mov aam sbb push sbb and hlt sub add push adc scas cli add mov cmp fist arpl mov mov cmp pop lods cmp adc inc or or mov mov or leave out mov add idiv add and adc jbe pop push mov aas je push add (bad) incb decb and enter pop rol jmp mov push dec pop jnp jae loopne (bad) inc push dec pop jbe mov push push push leave fistp ljmp fidiv add inc jp or mov push xchg add aam (bad) (bad) hlt add cmp or and sbb out dec inc clc das test add pop hlt shr push and jg cmp icebp (bad) dec cmpsb inc xchg (bad) jb inc push jmp ljmp mov inc xchg in jle iret dec lahf pusha adc jg xor dec jp movsb (bad) jno negl sbb pushl clc cmp adc mov int3 popl lock ss sub pop (bad) mov xor cmc (bad) (bad) (bad) fisttp and mov test ret (bad) (bad) dec mov mov mov jg pop loopne inc push sahf or sub sbb mov mov dec push fdivr (bad) lcall mov imul icebp inc jmp in push rcrl jno and add arpl sbb or loopne cmpsb push push xor es push sub leave daa in and (bad) (bad) decl insb mov cmp cmpsb and and mov sbb jmp fistpl push in cli (bad) incl cmp adc mov and jo test ret (bad) scas out call clc dec std and xchg and int loop (bad) pop push insl jno inc bound mov cmp insb pop call je or sbb in pop loop mov jmp incl or cmp add sbbl std add stos sbb icebp mov mov insb mov jg gs mov fiadd std scas clc mov pop jne bound cmp or jae and add cmpsb (bad) or push cwtl jmp testb leave rolb dec pop jns (bad) jg and xor stos jne (bad) rolb or test sbb (bad) lcall js icebp xor fmull std (bad) mov add cmp mov push jnp sti mov jp xchg cs add sub pop cmp nop cli push or xor je and pop outsb push pusha add imul fsubs mov je rolb and clc adc bound jle jno xchg (bad) jae roll pop cmc add fdivrs jl mov adc mov or cld fwait add or cmp and pop loop push test cmp mov das clc (bad) in mov pop inc mov add enter popa roll xor push mov adc pcmpeqd mov mov stc mov sarb rorb add in (bad) sub mov ja,pt iret mov mov lret (bad) jg test mov pop xor inc xor push mov (bad) incl dec mov jge inc mov into mov fcmovnbe and xchg loop jno loopne inc pop lcall add mov jmp sbb cmp dec mov or cs faddl (bad) js arpl dec mov ds movsb inc xlat (bad) incl push pop jno sub (bad) dec dec push subl mov (bad) ljmp cmp aaa or mov inc sarb cmpsb dec sub int mov cs (bad) lret push push mov les fwait rclb aaa adc lds add add xor pop or (bad) call mov insl fstp cmp sarl add insl jmp shrl std pop inc addl mov inc sahf stos fucompp push sub mov sar mov jl sbb insl out or push lahf ljmp sar mov add je rorb adc mov add (bad) (bad) (bad) (bad) cmp push mov dec xchg dec popa daa xor push andb add das add pushl cld xor xchg pop add pop fidivl clc sbb mov decl sbb push test fisubrl mov ljmp pop mov nop aaa mov push neg orl and roll add xchg out sbb (bad) add leave aas jp sub sub out pop and int3 es cs mov jp sbb xchg hlt testb outsl xchg adc es ljmp dec mov out fbld push popf push (bad) jmp int nop sarb data16 mov cs add scas enter xor lret in (bad) jmp cmp rorb arpl daa mov sarl ja add push fldenv jbe sbb (bad) ljmp pop inc jno sbb dec pop jmp call test outsb mov lret fildll cmp jp (bad) shr xchg inc stos pop insb cmp hlt mov pop adc cwtl jg (bad) mov mov dec out and inc sbb mov pusha aas xchg roll add xchg bound lret jle or nop xor xchg cld jg mov sahf in je ja aas inc add roll jg cmp and insl sbb mov mov jb outsl cmp inc lret (bad) (bad) in pop sbb test xor pop mov and xorl sar sbb mov dec mov in push cmpsb sbb (bad) cmp adc enter xchg mov fsubr mov adc jl aad call xchg cmp inc (bad) jo mov imul inc cwtl jne icebp insl ret incl mov hlt mov inc mov mov sub push imul popa jo ljmp hlt call and std push sarl pusha jne addl (bad) sbb pop jmp inc je mov daa gs in (bad) fisttp lret (bad) jg dec stos arpl dec xor pop sub xchg jae shl (bad) push mov inc fdivr push push aas mov and test sub sbb or inc lahf add call (bad) imulb fdivp sbb pop mov push jo test ljmp hlt fbstp imul mov or mov scas cli push jle add sub std decl mov pop enter push cmp fisttp aaa pop clc jae aaa mov leave add fildl xchg setp cli (bad) mov push das pop inc jmp lahf xlat add aas jecxz popf mov test (bad) out push mov movb pop inc push cmp and loop adc fcoms jge jb dec mov dec (bad) outsl add mov ret pop or bound rcrl (bad) call sbb mov roll ljmp repz push mov jp push sbb mov out mov test mov pusha frstor and hlt mov sub mov arpl inc pop loope lret mov std (bad) mov jg stc (bad) notb push cltd mov test dec add fild xchg dec es cmpsb xor push jg mov or fldt fwait stc jg jmp mov push push jnp add cmp xor xor add lds pop pop (bad) hlt movl fidivrl inc inc clc js rol rcl mov (bad) (bad) pushl pop or xchg mov fisttpll daa movsb cld sbb pmaxub movsl cwtl cmp dec outsl jmp sbb inc jne add fisttpl insb push sbb adcl inc (bad) add mov insl into adc (bad) (bad) lcall fs mov pop push adc push pushf (bad) popa inc das mov pop inc into jbe pop call lcallw scas cli fcomps add in faddl imul loope repnz push mov lods inc cmp sti adc inc shrb lods ret pushf frstor lret or xchg aad add adc (bad) lcall ljmp dec hlt push fist xchg bound jmp and cli lds notb sub (bad) pop call cmp or aam adc (bad) ja aam andl mov cmp mov notb mov jp test jl add (bad) incl push xchg cli jnp decb sub push mov outsb push push das push loop mov cld mov hlt (bad) (bad) jge pop cmp inc adc cwtl fstl xor (bad) sub sbb dec mov adc xor std and movsb mov arpl (bad) pop hlt jnp add push jae insl shr cli pushl xor sbb add lds adc adc sub fwait mov rcr add mov or mov test lds adc xchg and adc sbb mov pop (bad) decl lds and adc adc andl jns movq ja in xor adc fbstp mov jg incl sbb pop fucomi daa xchg std rorb pop pop or inc cld mov mov icebp enter and aas shrb and fcoms scas mov mov out andl outsb das sub add add movsb fstpt push jmp pop ljmp push push in pop xchg xor push mov add ljmp cld cmp and int3 and dec add lcall cmp push mov lret (bad) or dec dec iret aam incl cwtl popa aad lds dec and xlat pop push and test cs jg mov cltd mov xchg cltd pop xchg pop cmp jmp leave ret decb mov test repnz add push (bad) ljmp fld cltd lcall cld add add lods mov or decl (bad) mov push lods lahf rclb aam or (bad) hlt push dec inc mov mov shll pop call sbb mov xchg iret mov adc sbb cmp mov cs mov jo lahf mov xor fcmovu mov push adc add and mov push adc lret mov lahf test cld adc adc out add (bad) fild cmp mov lds cmp arpl mov (bad) inc (bad) pop rcrb incb sbb pusha jecxz outsb sti test mov add cwtl stos jl dec es jg lea mov test daa aam jns push jno push inc push mov (bad) mov loop stos inc rcr rolb push and nop push cmp inc or xchg sar mov cltd out sub lds iret push js movsb (bad) mov ret jo sub cli jbe xor jno aaa add ret js sub add das ret fldt and leave aas pop mov bound push jne les or jbe cs dec jecxz sub jbe mov xorb mov sub shll or cmp add (bad) call call cmp cmp or cld mov push xor jecxz (bad) (bad) jmp and insl inc scas sbb inc testb daa or nop and aaa std fwait sub mov mov cmc inc (bad) (bad) mov dec push cmp xor and notb icebp jmp (bad) add mov (bad) mov xchg mov mov pop adc inc test aam lods test movsb pusha mov ljmp int add je xor jo pushf add cmpsb lea int rcl push es or xchg mov loop sbb pop jge popl mov jno nop xor (bad) (bad) call data16 push int cmp xlat stos or shl xorl bnd ja (bad) mov adc adc sahf and lahf and lret mov incl das dec lret cwtl hlt fsubrl push jae and stc cld aad decb cmc xchg add subl xor fdivrs jns (bad) push outsb rolb ljmp pop jg or or into pop add add mov add or enter jmp movsl fbstp int3 popf pusha adc dec (bad) fisttp mov sar popa xchg (bad) jno aas orl or psubusw (bad) jg addb rcrb mov pop sbb shrb testb sub push stos adc xor pop cmpl int3 mov (bad) (bad) out or movsl sbb test xchg test inc or out je pop cld (bad) jg into test dec cld sti (bad) add and sbb and nop pop decl pop xchg dec inc dec pop push sbb pop (bad) jo mov (bad) (bad) mov stc mov cmp in push xor push pop and mov enter fiadd or cli lret lods jmp jecxz and call (bad) (bad) jg push jecxz fistpll add dec xlat bound dec in pop jnp add dec jne adc fldl rcll pop dec fwait add pop mov mov push sub pop hlt mov sub iret cld adc mov add cmp add (bad) jg mov pop xor push or pop pop inc mov mov dec xchg dec cli (bad) cmp shlb test fcomip dec mov jnp shrb cmpb xor stos push xchg iret cli mov icebp mov es and das adc xor dec loop,pn in hlt rol mov lock in fwait pushf out imul mov out fmull cld lcall add jl mov xchg sahf ds pop pop push and mov push arpl aad sbb dec xchg negl or or incl das mulb int mov cld aaa pusha xchg mov (bad) inc pop lahf mov stos cvtps2pd fnstenv sub mov ljmp lods sub add loope repz add push xchg jnp push dec jg jecxz shll sub cmp pop jmp sub mov out inc mov push pushf jle pop cltd cli aaa xor fs lea pop pop pop sub test fildll cs push (bad) (bad) incl and insl push push push (bad) lcall scas jne cmp xor cmp sub scas cmp pslld (bad) (bad) incl in jb roll add dec daa cmp cmp sbb es hlt (bad) call (bad) decl mov push aas dec outsb sub cltd (bad) (bad) ss cld (bad) decl xchg aaa add jg inc push xchg pop fimul (bad) fcomip (bad) cmp cmpsb cmova cmp sti xlat pushf cmc dec call lods icebp out xchg jbe enter push mov mov xchg ds pop cmp aaa xor mov insb out mov inc rcl popa push jg nop sub pop ret push std mov push or aas xor sbb jns outsl mov sbb sbb lcall out pop roll jecxz xchg test xchg pop inc idiv xor and hlt add pop and mov push rcrb fs push or add pop sbb push ror test push dec and mov repz in aad push addl jg clc dec cmpsl mov stc push (bad) mov (bad) roll and dec mov int mov xor and fbld sbb mov cmp add (bad) (bad) lcall xlat dec les adc inc pop jmp repnz test and adc inc push xchg das xchg lock js rclb lods mov add sar outsl (bad) decl addr16 call cmp mov jae mov out adc lock mov sarb jae pushf loopne jg mov ss push xchg insl enter popf jecxz add push xchg mov (bad) jb aam mov test adc insl cmp or inc scas movsb pop sbb out or movsl xchg stos (bad) (bad) (bad) fistp cltd (bad) xchg add insb bound mov push or aaa xchg push cmp imulb aad in cmp mov adcl dec xchg sbb mov inc inc pop push nop sbb dec test push xor mov and int3 pop and cmpl pop and sbb xlat (bad) (bad) (bad) sti xchg mov or pop (bad) xlat pop decb inc or (bad) (bad) call or stos (bad) je scas cld mov dec or xor xor (bad) jno out mov or fsubr aas mov (bad) mov xchg loop jae sahf int3 rclb xchg fldl jne push lds add lcall popa inc mov out cmpsl dec xor in push inc sbb enter xor push lcall inc adc int3 les xchg jg cmpsb dec data16 decl push push ljmp cltd test cltd ss xchg pop (bad) (bad) decl rcrb fs push in push jb push out push aas ficoml dec inc add cmpl add push sub add insb pop pushf push mov or or loope adc (bad) lcall lahf cltd inc xor cmp imul cmp jp or mov inc lcall ret stos or addb (bad) incl sub pop imul mov and inc out loopne push cmc (bad) jecxz add stos pop cmp xor sahf mov push jecxz popa mov cmpsb fwait (bad) (bad) (bad) ljmp rorb xlat (bad) add ljmp fsubs arpl push cmp push ljmp mov pop xor mov push inc mov fdivrs lods mov sbb lock lcall orb scas pop mov hlt sbb cmp fbld loop sbb inc faddl add scas cmp addr16 aam pop icebp enter sub addr16 addr16 push add decl test jg mov cld push outsl stos or mov lcall bound packuswb mov lods fdivs xlat or add subb sub jno aas (bad) (bad) (bad) jg movsl lods xor int cmp std xlat cmc inc iret aad aaa add dec repnz fcmovnb mov fdivs mov mov ljmp fimul rorl xor lock sarb pop jne sbb repz add js mov pop jo xchg (bad) out mov dec sbb fildl fsubp insb cmp pop clc add mov data16 (bad) decl fisubl std inc cli and pop aad dec push sbb jmp sbb cltd std shrb rcl xor hlt mov push mov mov lret xor mov scas stos and cmp mov shr aad mov pop or and cmp incl sbb aam (bad) ja sub out daa sub clc jg js and or push push cs mov gs (bad) (bad) jp aam mov push mov cmp and mov mov sub sahf cmpl ss add jg (bad) (bad) lcall pop lods adcl js inc add in inc sub mov inc iret mov sbb sbb and jg je out ficom xor and cmp out add insl mov pop cmpsb lock jg push pop pusha bound subl idivl gs dec cld ljmp int mov xor std call xor sbb sahf mov xchg sar out movsb icebp inc popf push xor adcl loopne and xor add bound inc pop push pushf jl out pop lds fdivs loop fistpll push pushl pop or xchg into add dec hlt inc mov clc mov loopne mov es (bad) mov lcall mov (bad) (bad) dec mov cli aas add inc sbb push loop cmp adc pop and hlt inc jo or pop lods jl add lods xor lret mull dec jle jns pop aad incl (bad) cmp cmp jmp cmp jae push mov flds push sti xchg adc and lods ljmp fiaddl pop add jmp cld sti nop pop faddl loop sbb in out ss and repnz jle push push mov je add cmpsb mov mov testb xor mov and (bad) (bad) (bad) lcall mov push sti mov adc pop (bad) cmp jne xor mov sarb sbb in (bad) push xchg loope ret xchg xor ljmp mov push inc dec push xorb jl pop jg cmp mov jp xchg insb mov pushl jmp popa mov fimul inc fist dec stos jecxz imul (bad) mov add aam adc adc cmp gs (bad) (bad) mov imull leave outsl cld scas subb push insl sub (bad) mov or hlt outsb insb data16 adc push rcrl sbb bound jb pusha popf mov (bad) call mov iret lock sahf sub dec je insb (bad) sbb xchg adc mov popa pop mov (bad) cmpsb mov call mov sub pop out cli xchg jl shrb mov arpl cmc push test dec rcrl nop xchg fcompl subl incl cwtl sahf and and bound add sbb (bad) lds jecxz jl dec add dec push aam cmpsb mov into push xlat adc cmp je into mov call outsb out mov adc hlt cmp mov iret mov (bad) inc loop adc push xor stos rorl jmp outsb or or mov aad ljmp push mov push mov cld (bad) add (bad) decl mov push sub jmp or mov shlb pop sar mov inc inc mov jae fildl dec mov push in das xchg fisubr rorl outsl pushf divb jbe stos sub nop dec cmp out mov mov out (bad) mov cmp jae std enter cmp int and (bad) (bad) jg popa and pushf and ss jge call mov outsl adc jg mov jb clc (bad) mov das adc mov push movsb cmp mov (bad) idivl loop add lcall xchg jo or in inc je icebp (bad) decl sbb popa add paddq fiaddl (bad) xlat (bad) ljmp (bad) fldenv mov sbb sahf aam pop xchg test fdivrl roll mov (bad) (bad) clc sbb ret push jmp or xchg pop addr16 loop sarb psraw push imul sub mov adcl mov or cmp push cmp cmp decl push inc push pop rclb mov mov scas (bad) mov xor cltd mov jmp or fs xchg dec cmp ljmp fwait xor pop inc dec inc ds sahf pushl add xor stc dec jmp add jno mov cld mov xchg xlat jae call in xchg test (bad) ret pop notb inc mov jg mov add test push jno jle dec lret aaa pop mov jl movsl mov push gs add incb add jp push imul stc addr16 out inc push xchg jno add (bad) (bad) out xchg push out mov push inc cmp insl fildll adc xchg mov ja cmpb inc fnstsw hlt or mov ja pop loopne xchg fisttpll (bad) es pop das loop outsb stos outsl mov ljmp hlt rcrl ficom sarb ds daa push mov xor out push icebp stos adc mov outsb and (bad) call or dec (bad) xchg cmp sbbl xchg or call and pop je pop cmp fucomp fs aad lock xor imulb jle (bad) jg lods ret mov push pop or dec mov cld stc lcall or inc rclb sbb out adc insb (bad) (bad) out mov cwtl push es inc push into adc mov xor and xor lods lock aad mov mov popf pop pushf mov fildll jne mov or arpl ljmp jmp inc loopne int sti pop sub ja les xchg push jns call pushl imul add and lcall lcall mov loop mov imul es inc les push xchg jno lcall sub sbb jp jge lahf (bad) nop push lock ljmp mov scas push sub dec push aaa inc mov (bad) jmp jle cwtl inc inc rorl cmc test mov push lods outsl xchg lock sbb mov out mov sti das cmc (bad) incl pushl les pop push xchg dec mov mov sahf sbb sarb pop sar mov cwtl daa push sahf repz lret sbb (bad) (bad) incl rcrb ja push inc lods inc jmp or sub sub dec lods pop je inc imul rolb dec jg jl (bad) sbb add fs (bad) insb je in ja (bad) call cs mov push es mov or fwait outsl inc add aaa std and jge sbb dec mov dec (bad) mov (bad) aaa fnstsw xor inc stos jmp mov gs mov push or pusha icebp incl ficomp pop inc push movsl dec into ret pop add fldl lock call cld mov mov xchg push mov imul or adc jae (bad) jg jmp frstor (bad) fdivrl sbb pop add push inc add cld dec (bad) test movsb ret aaa and cmp orb outsl mov ficoml add (bad) jg loope sbb xchg std nop dec dec mov (bad) sti nop sbb test (bad) jle sbb sub adc mov pop xchg clc pop sbb sub add ljmp pusha js pop pop ss (bad) ljmp mov les int fs pop rolb add pushl (bad) sbb xchg ret aad je sti dec std inc std test rol (bad) cli rclb cld mov xchg mov xlat add fbstp fcomi ljmp sbb jns xor (bad) lock cmpsb dec dec push popa mov rcrb fisttp pop dec decl push (bad) cmp nop hlt inc lret xchg imul repz fnop lcall jle mov add je (bad) jbe (bad) (bad) pushl out rcll inc adc (bad) xchg dec rcr dec push mov (bad) xor xor or jno cmp cld push and cmp xor fidivl loope fidivr xor mov or cmp loop (bad) pop cmc sbb clc (bad) lahf lea nop inc das xor clc add inc mov mov and test jge orl sbb inc cmp add (bad) ds inc inc xor ljmp sbb mov lcall sub (bad) (bad) pushl jne out inc cli push arpl lock into adcl fstpt outsb pop enter clc or ljmp inc sbb pop imul sarl (bad) pop cld scas outsb int3 loop je push orl cmp mov lds sbb sbb scas imul and fcmovnu sbb icebp test jmp (bad) fcomip pop sbb sub (bad) inc int3 es cmp and mov rol lcall inc and dec daa xor jg imul pop es mov or pop add cld (bad) out (bad) cmp imul mov add movsl ds out inc mov decl sub ljmp mov icebp pop or inc (bad) ljmp decl insb sbb jmp xchg cmpsb (bad) into es ja pop jmp mov call into mov inc pop cmp adc jg mov dec lock out mov (bad) cmp sar incl or test sub idiv mov dec loope das rcrl adc iret mov out (bad) jg adc movsb mov or mov xor dec movsb ljmp std dec and subl or inc clc dec lds and cmp ret aas mov sub addb inc aaa es (bad) incl pop aam lret mov push push sub lcall (bad) sbb add xor add cld push data16 je test (bad) mov jbe push ja pop pop ljmp push lock fsubl adc and clc mov pop cwtl lock pop lret xchg sar push dec notl nop cmp lcall mov xor in cmpl and or xor sub hlt es js roll mov out add js pop in push aam vaddsd outsl mov mov adc and xor aaa adc push fimull jne stc fwait call (bad) xor ficoml les xor dec add insl push das into rcll sbb (bad) out and adc stos js ja nopl outsb fs xchg out or insl mov addb scas scas ret cmp loopne or dec mov mov dec and adc push movsl jb ss icebp sub jmp cltd (bad) outsl mov lea and fptan mov (bad) inc jecxz sbb add sub pop or jp mov or xchg mov loopne test fisttp lahf jns outsb addr16 cli pop ficomp out icebp mov push sub test hlt push into neg and inc adc (bad) ljmp add mov jbe out add xor sar ljmp mov dec and insl addr16 mov sbb ds inc cmp ss xor decl mov dec movups aam inc sbb (bad) (bad) (bad) (bad) (bad) stc sbb ljmp je add (bad) or or jmp mov ss adc cltd (bad) (bad) xor (bad) mov (bad) (bad) jmp adc pushf (bad) in xor sbb imul mov (bad) (bad) (bad) (bad) mov or add pop movsb push adc fadds sti test xor pusha add add decl sub out sbbl cmpb jae stc cmpsl test add cmp sub dec std jg or mov out add (bad) call cltd (bad) in les cwtl enter or in stos ss add xor lret sub add mov imul imulb add (bad) add add add xchg mov dec cli call int3 inc shll (bad) mov pop cmp insb xor add inc mov hlt pop cmpb add inc inc out add arpl test jg add lock testb cmp cld gs sbb (bad) jmp insb inc and fist outsb add pop sbb out push bound cmpsl xor or jns inc (bad) out add daa mov inc cmp aad int3 jl mov adc push test cmpsb rorl adcb fidivl pop add (bad) jecxz lret mov mov dec pop lock dec std adc xchg or ss fiaddl js out aam lods push outsb sti (bad) (bad) (bad) (bad) fdiv inc dec imul out push xor jne (bad) test dec into insl jb cmp icebp (bad) incl xchg mov pop jno negl or push push mov test outsb mov cmp incl inc lahf mov fnstcw js idivb std xchg rcl add decl adc pop js push xchg out cmp pop add and out shl xchg xchg dec lret inc adc sub ljmp (bad) incl xor outsb mov and enter jp mov icebp (bad) cmp jle arpl sub cmp push loope (bad) (bad) out clc mov pushf mov scas fwait cmp xor pop mov loopne xor push pop cli mov out sbb addl and clc arpl cli and daa mov push mov cwtl (bad) call add test pop popa je leave pop (bad) ja fldz out fcoms push or mov xor mov (bad) (bad) (bad) jmp je outsb xor and ja dec shrb sbb fnstcw popf test mov aas and mov shl addr16 inc fistpll push sbb jg stos cmp pop jle adc cli popa ja push adc imul pop ljmp cmpsb add icebp test jmp or adc pop stc aaa mov xor inc sbb loopne mov dec ljmp in bswap sbb cmp and iret jg lcall in jb cmp je aam test jbe es insb pop or add lock push pop outsb inc dec push inc sbb data16 sbb jae insb leave add aam ss fstl inc ret push cmc jecxz cmpl xor cmpl cmpl stos aas (bad) jg sub mov inc test mull subb cmpw push adc and xor gs jmp aam clc in mov and (bad) lock loop inc xchg or movsb into mov inc sub mov xor out push clc dec notb (bad) mov xor enter adc std decl loop push mov mull cltd cmpsl pop inc fmul bound mov pushf (bad) lcall call sbb popf in mov call sbbl dec pop dec dec repnz xlat bound outsb adc (bad) pushl out int shrb imul cmpsb es jne ljmp push ljmp dec insb sbb pushf daa ljmp leave out or push dec pop ror ds pop (bad) ljmp movsb xchg ss add loopne es addl stc inc lcall lods xorl out or popa int3 push or or scas jp (bad) cmp (bad) and lcall je push shr dec and add ljmp jp popa and jle insl pop sbb jle dec fmul fldl mov and cmc outsl xchg out stos inc mov mov push cmp mov sbb loope outsb jbe out adc sti adc outsb add (bad) mov or xchg and (bad) xor inc add mov inc sbb xor adc int cs neg loop jp mov faddl fs mov cli das movsb add ja adc cmp bound (bad) cli nop adc adc xchg sbb push cmpsl sbb xchg jge pop mov (bad) dec nop cmp call mov enter mov add out dec add divb (bad) xchg push pop lods mov popf js enter cwtl popf fstps and sti add cmc inc or xchg aas cwtl sahf fild rolb inc enter sbb pop lret bound ss jnp popl cmp pop sbb push test jae pop (bad) out lahf bound push xchg xchg sbb add fcoml pop add sbb lret cli mov scas mov inc xchg jl jge mov jb inc sbb mov loop mov push lret mov jne inc xchg mov sbb pop test add push cmpsl nop push fbld mov mov ss loop (bad) cmc mov dec sub cmp add ja mov les ds add loope outsl (bad) or sbb mov add jbe clc pop cmp sti pop fldl inc ljmp clc xor and push or lcall mov sbb xor xchg fidivr sbbl fucomp in ss (bad) mov pop lock inc xlat mov cli arpl add push xchg add cmp xchg xchg loop pop dec lds (bad) pop sti scas (bad) imul push inc sub rolb sbb inc lea push cld fsubs push shrl ja push mov inc push cmp add xor mov sar jg loop fxch sub test dec imul xor sbb jge (bad) mov movsl sbb hlt or lock mov cli mov xlat (bad) les or add movsb fdivrp add mov les loop mov fst or push pop aad (bad) (bad) fcomip mov jge pop sub jb cmp sti nop aaa and ss cmp or cmpsb mov test aad test int pop aam fdivl nop lahf je push inc (bad) jg sbb or push call inc (bad) jge aaa into pop dec mov (bad) test andl outsl pop (bad) decl inc js test xor (bad) rolb clc mov inc inc (bad) pushl add cmp jo dec out fmuls lock ret (bad) jne sar incl and inc sti pop cmpsl aaa adc mov xor xor pop push fidivrl daa (bad) mov add push mov or pop jbe loop xchg clc scas add dec jno add push and xor sbb orb test arpl add push pop jns cmp or sub clc add pop lods (bad) sub add bound mov add (bad) xlat (bad) decl testb pop lock and hlt cmpsb loope pushf cmp inc mov (bad) decl jle lea dec mov jmp xchg cmp push mov adc mov adc rcll adc pop mov data16 adc fbld cld and nop xor lret mov (bad) ljmp cmp out stos cmp jns cwtl inc js,pn loop sub pop mov loop sub cmpsb cwtl or and (bad) (bad) mov test rcr rorl sbb cmpsb cmp ja sbb pop shrb inc sub dec push push cld mov inc pop aad (bad) decl popa and jp out pop jp shll mov hlt push std das (bad) lock jbe sbb inc out push mov jmp (bad) lock xchg push xor nop adc mov sbb lods xor out adc divl rolb testl js (bad) insl add iret out (bad) aas imul cmp out stc (bad) jg pop adc int3 xor mov out push xchg jecxz (bad) addr16 lods std enter jmp jg (bad) call xchg jge cld rclb mov sub sub adc fbld add (bad) addr16 inc inc dec mov (bad) decl std outsl inc push push imulb adc sbb add decb push loopne dec xchg dec icebp jmp fistpll mov (bad) jne mov sahf dec cli lock mov cs push adc test shl jmp (bad) mov add stos leave add int push in sbb (bad) (bad) ljmp jecxz cmpsl adc fs scas dec cmp pop (bad) mull fabs movsl mov or aam dec jg (bad) jmp scas shll sarb test mov adc mov pop jl int sarb mov mov and (bad) (bad) lcall and lahf or push lea outsl jle in and mov out (bad) inc mov arpl fdivrl xor jmp mov stos inc insl inc movzbl pusha cmp (bad) ja cs add push stc dec mov mov in jmp pushl fdiv imul insl mov sahf cli mov cmp fild jmp inc jb cli jne imul je lods (bad) mov mov cmp mov pop push or das pop adc xchg (bad) (bad) (bad) (bad) mov (bad) inc and sub xor adc push or stc pop dec jae or jno mov popa mov out (bad) sub daa xor rorl or fidivl loope movsb jle mov cs (bad) mov xchg adc les lcall daa or sbb hlt test dec mov inc inc lea cltd jmp push in jnp mov int arpl and out stc mov loop decl cbtw int repnz jp mov mov mov imul jmp inc mov inc or pop pop lock lahf jmp fcomps outsb outsb mov sub xor mov mov cmp fs add xchg int3 mulb cmc and mov adc ret xchg jge enter xchg incb dec and push sbb jae cmp call addr16 push add daa push lea call add lods das stos pop jno (bad) jg decl add out jo (bad) mov sub int cmp (bad) (bad) incl (bad) enter and cmp xor jge jg xlat mov ret mov lcall dec push sub jg (bad) in push (bad) dec adc mov sbb and dec add ja inc fucomip mov stos pop and in inc loop fnstcw stos idiv (bad) fiaddl inc in push call lret inc xchg jl push mov xor jmp sbb je pop inc pop rolb sub cld fbld out ljmp stos and addb add mov rcrl (bad) pushl bound icebp sub lea fwait iret fist jle call int3 sbb lcall cmpsb pop mov mov addr16 push lea xchg leave ret stos (bad) (bad) (bad) jb,pt mov shrb in out ret cmp add int jbe hlt jbe add (bad) push push addr16 (bad) decl sbb rdtsc (bad) mov idivl adc pop adc (bad) ja jnp cli and (bad) fist (bad) rol mov and adc push xor lds (bad) sub (bad) cmpsb imull sbbl outsl xchg dec mov add arpl ficoml cli sbb dec or sbb loopne addl (bad) (bad) xchg rcrl and sub stos jo mov cli mov fimull jno jle pop movsl xor mov decb clc bound in scas push pushf and mov or adc and hlt idiv pushl in push mov push dec fs (bad) call sbb mov jle ds insb and mov jne adc mov (bad) sbb notl pushl adc xor inc cmp ret in stos fidivr mov xchg sub push adc xchg loope mov aaa rorb pop add scas loope or jmp lock fild cmp jnp add inc cs cwtl adc sub mov (bad) jg inc dec sub (bad) insl adc idivb mov call cld xor arpl int or pushf lods ljmp frstor loop or mov jbe push jno sbb and fldt xor and mov fistpl jg scas dec clc mov cmp jno push pusha mov scas cmp decl nop sbb add dec in push pusha movsl test add adc mov lea je mov popf into sbb inc (bad) (bad) out insb push sub pop mov xor push mov ss or pop push out lret ljmp inc shrb arpl dec test jmp cld and stc push sub cmp ret in inc dec call dec sbb ljmp jp or ret push dec pop pop outsl bound xor sbb repz or adcl jnp pop cmp aaa std stos sub or add inc mov ljmp les mov adc into sbb movsl (bad) jg dec and pop xchg jo mov jp xchg out cmpsl push or pushf inc push or loop dec push cs arpl ljmp pop xchg mov int in jno inc enter pop insl jmp sbb addr16 jo adc pop or dec mov loop or push mov das mov push (bad) jae mov rcrl and (bad) incl sbb cltd or into add ljmp mov and outsl pop out (bad) xor fucomip jp js add mov cmc fiaddl lcall sbb stos mov test dec negb scas ljmp add test cmp in sahf add (bad) aaa ss pop mov cmp mov xchg sbb test sbb lcall cld and movb inc clc inc push daa jnp add push cwtl inc je cltd out push sarb add lret sbb jg aam inc sbbl cmpl push into mov jb sar test gs pop loope inc ljmp adc (bad) dec test addr16 int aaa sar fwait (bad) mov std (bad) jge rorl mov or xor (bad) je incl cld popf and scas ss in inc push (bad) push push xchg outsl pop icebp out push add loop mov dec sbb add decb insb xchg push sub stos add ljmp into push sbb pop inc add outsl lcall rcll push add push add sbb or mov in sub call dec mov sbb and addr16 clc es scas js jo out push pop icebp mov xchg cli lods testb inc inc and (bad) push or dec jg jbe or jns lds push cmp aaa jne jne and pop inc mov ret mov pushl ror pop cld popa (bad) mov push xchg das cmp outsb sub pop rclb mov les (bad) and icebp sub movl nop loop mov cmc mov cmp or or out bound scas fsubrl sub push shlb pop mov adc xchg ds mov inc jg xor or cmp ret (bad) (bad) (bad) fucomip fucomi pop leave xorl sbbl jne pop mov aaa iret dec icebp sbb lret lahf mov dec in add fwait in xor xor lock fbld jo loopne (bad) fs sbb lea mov (bad) lcall jle cld (bad) movsb pop movsb adc ret stos sbb pop dec ljmp dec xor je sbb (bad) pop inc loope add inc movsb and sbb pop inc cld sub jae daa mov cmpsb xchg mov (bad) call mov sbb xor jp hlt imul fbld fidivrl xor (bad) das push jecxz icebp dec inc add cmp in in ja ljmp mov mov sub add jecxz or jl push clc or loop cwtl cmp std fistl jmp clc lcall push (bad) sbb int3 orl xor lcall (bad) jmp (bad) sbb cmp pop inc dec fcomps pop movsb xor (bad) mull pusha test (bad) aad adc or popf in adc dec adc inc outsl ss mov and (bad) mov jl (bad) (bad) mov mov lock xchg nop outsb xchg push inc pop mov call jne cmpsb outsl movb in push mov (bad) (bad) (bad) (bad) in cmp int cmp jmp mov imul rolb fwait push mov push mov mov inc push pushl or popa mov jb jo sub mov loopne push push mov jbe insb std cmp inc fwait pop lahf mov cli pop mov hlt inc cmp lcall cmp aas lock lahf dec pushf nop push push cwtl insl sub jno hlt incl sarl inc and je jg out add sub mov lods sub push (bad) fdivl sub sbb fadds push (bad) (bad) jmp or shlb jae sbbb sbb push nop leave (bad) and add cli dec (bad) xor add mov xor pop xchg pop mov pop test shrl mov inc or (bad) incl mov loope add inc jo cwtl imul lcall lock pop stos mov je shrl sbbb (bad) push adc sbb decl movsb ret push out movsb or cmpsl dec icebp stos (bad) and (bad) fbld aad pop cmp ja add xor adc pop hlt (bad) mov xor jae adc outsb adc mov cltd js (bad) push xchg hlt add xor xchg jp bswap jns inc mov jno inc pop pushf fisttpl data16 decl push xchg das (bad) xlat fisubl mov aas clc je (bad) (bad) jg lret in aad push inc decb adc adc mov inc inc pop pop bound push je movsb popa jo mov (bad) (bad) inc jl inc (bad) decl push hlt fsubl inc mov or stos push mov mov decl xor dec je or enter jge add inc int cmc (bad) incl or cltd sub push xchg (bad) hlt xchg or ds cmp das icebp jmp cmp add push xchg fdecstp insl xor add imul outsl xchg jle mov push lret out sar aaa add imul or add pop add xchg adc dec sub aam jecxz adc cli mov (bad) add mov les shrl xor test and (bad) jg jmp sub outsb nop daa lock call cmp lds fwait mov pop push adcb dec or (bad) mov cmp mov div outsb ret cltd pinsrw movsb jle,pn jno scas sub (bad) scas out xchg (bad) ja push mov mov xchg ljmp xorb xchg push loop or xchg orl sbb loopne sbb mov push movsb iret mov mov repz out notb xchg mov or cmc and inc fs pop push jne insl lret loope loopne dec ljmp insl jns mov aaa test je (bad) stos aaa ror (bad) call inc inc inc daa inc movsb cld cmp (bad) push adc add (bad) clc lock jmp push or mov inc or jp fs cmpsb (bad) push mov lods dec stos fxch adc mov shll loope test ret scas sbb (bad) (bad) out mov (bad) sbb add xchg outsl cmp mov add jae (bad) mov sub sarl and ljmp rcrl je push cwtl lret xorb adc cmc or sbb ss ss sbbl outsl mov adc insb mov adc daa adc jo outsb in push aaa push into mov aam lods jp (bad) pop mov in pushf and out or or lea roll adcl iret sub or and mov pop xor pop iret cmp mov sub and clc (bad) or pop inc dec and inc in fsubr mov push adc inc add rcrl and (bad) pop add lock (bad) jecxz fwait cmp pop loop clc mov mov arpl pop std popf xlat imul pop clc (bad) incl div mov pushf mulb dec inc sahf adc aad push dec pushf mov and test pushl adc inc enter dec mov inc mov sub add outsl and popf call push lock dec in daa stos jae outsl call sub mov jle add cmp mov push xor cld je or lcall stos in mov in movsb jmp mov push cs outsb (bad) (bad) decl mov push fnstcw scas jmp jmp cmpsb xor xor outsb xor inc (bad) (bad) dec aam bound outsl jbe adc outsl mov test cli inc ljmp test ljmp mov xchg or test adc daa lcall push aaa (bad) call frstor and mov cmp inc mov (bad) ja (bad) or and loope dec dec sbb add sub lcall jecxz adc pop cltd ficom mov ja jb and addb or mov sub sti pushf insl (bad) (bad) (bad) decl lods aam pop (bad) cmp pop add cmp fwait insl cmc inc (bad) cld ss (bad) add or and pop subb (bad) rclb shll shl mov je sbb and loope pop icebp pop addb lea es enter xor insl mov mov ficompl dec mov sbb mov mov arpl jmp adc test cli push mov das flds pop (bad) jo fwait lret insl es movsb or mov jmp out add jae and or cmp jbe add fildll lds orl inc adc (bad) or movsb xchg mov xchg sub aas mov cmp sub inc clc out pop push insl loop popl inc mov popf (bad) fild jmp sub xchg add call lea add roll cmp mov movsb or dec mov pusha push and sbb lock push insl cmp mov push mov inc add add hlt cmp fisub out push adc (bad) lock in ja jmp xor rolb mov add cld mov fisubrl test (bad) lcall add fstpt jns dec and fs sbb inc outsl cli mov gs loopne ror pop clc out fidivl xchg push cld lcall cmpsb push pop cli mov movsb lcall popf ss and (bad) pop out mov sbb xchg js fcmovnbe xor idivb adc cmp fcomip out jbe add mov jg dec pmaxub adc or mov cmpsb sbb add sbb lock fcmovb lahf and cmpsl adc fwait outsl clc aam movsb push adc pushl cmpsb fisttpll stc mov jns mov push (bad) int incl cmp bound test xor hlt sbb push subb lock daa jl mov outsl xchg mov outsb inc dec shrb ss jp ljmp fadds cmc ss push divl (bad) pushl pop add inc (bad) daa in pop cmpsb fwait insb cld jb jne test push or sar (bad) (bad) call cmpsl sbb pusha mov push cltd cmp negb or (bad) (bad) mov scas xchg xchg sub inc imul mov xlat or in mov mov pushf dec (bad) (bad) mov jmp cs rclb stos mov mov (bad) pushl jne and mov and shll add cwtl mov leave xor adc (bad) (bad) (bad) call lods insl mov in mov inc push js inc ret jl (bad) xor pop dec jno js hlt cmp jno insb and sbb add jb popa (bad) icebp or jg jmp push (bad) popf and adc aaa or nop cmp in inc in aad mov cs adc mov sbb outsb and pop leave pop xchg mov xor jp icebp dec in (bad) mov mov sbb fsts xchg (bad) mov dec cli mov ret nop in pop cli lods mov leave and (bad) lcall xor lahf or jp imul imul cli xlat in xchg adc call dec jg ror mov popa enter das xor xor add sbb mov fildll ret xor (bad) (bad) mov jbe inc (bad) sbb sbb jae inc out fwait mov outsl loopne mov dec xor mov cmp sbbb pop (bad) pushl lds add adc mov mov ret mull xchg int3 shrl ss decl (bad) and test dec (bad) jo pop aaa push mov call inc xor pushf in or cmpsb cmp mov mov dec push decl sbb js mov js fwait scas and push lret shrl pop data16 add pop inc leave mov dec pop pop (bad) sub (bad) (bad) (bad) pushl iret outsb mov and movsl sti loope imul mov add repz insl rcrl lock xor push or call das xchg pop xor cmp repz adc jg sub (bad) into sbb inc aas xchg test negl test std jbe dec xchg fst cld int pop fs xchg imul adc mov dec pushf mov xor js aam cld lret fidivl mov xchg fildl std pop or inc xchg addb loope loop jo jmp sub cmc add into adc mov xor call or cmp cmpsl push xor ja sub push inc pop adc dec dec mov incl adc lcall in mov fldl stc stos test ss sub outsl xor xor out (bad) ljmp call cwtl out inc lods sbb stc popf (bad) or ret (bad) decl mov nop arpl imul or pop adc mov sbbb test inc pop popa inc in dec cs rorl (bad) decl int xchg (bad) jno sbb sbb sub pop insb add xor (bad) je push or sbb push (bad) (bad) mov call dec push and add jecxz pop push push pop jo sbb and pushf pop rcrb and cs (bad) (bad) mov cltd push adc (bad) in add sar das cli rcll loope addr16 cmp popf into lds pop (bad) pushl cs xchg or popf adc psrld subl (bad) (bad) push push aam scas sbb inc inc mov aaa inc ficoml xor jg inc iret hlt lret insb outsl out jmp jg ret je jecxz push mov xor popf cld mov pushl pop pop in in loopne xchg jl mov add (bad) incl push adc clc jp jle movsb adc aam in and xchg loopne and es je jo lock add mov dec fimull sbb dec out aad push aas stc inc aas xor dec dec (bad) lcall adc outsb arpl addl pop (bad) (bad) (bad) jmp pusha fucomi xor fcomp inc out mov cs push sub adc shlb jg mov out jae xor leave push mov cmpsb inc push jl outsl add sbb pop addb cmp mov lahf movsl add test popa cltd sbb pop add push cmpl jecxz insb (bad) out and xchg lcall xchg sbb aaa mov (bad) jg hlt cmp push fisttpl out xchg push loopne push aaa or mov scas (bad) sub lea jnp or push push xor loopne cltd (bad) (bad) (bad) push movsb (bad) ss add inc xchg mov ss add inc pop cmp in lcall loopne mov mov sarb mov clc test (bad) mov cmp or cmp xchg cmp pop dec xchg fiaddl cmp pop sub (bad) or loope fwait mov incl dec and mov out sub and mov addr16 pop dec jmp daa movsb xor cmp hlt push (bad) int cltd (bad) (bad) fstl (bad) cld and xor int sbb xchg (bad) fcomip (bad) in jp popa imul rorb inc popa push xorb pop inc xchg mov fwait mov add jb (bad) mov out push push sarb shrb stos std jmp mov sub std aad pop cmp inc lods stc inc pop inc mov popa xor and add shll jo mov add lea mov (bad) incl push sbb insb test jno mov lea push sub dec rclb mov imul addb (bad) ljmp hlt adc xor add test mov loope std bound mov pop popa (bad) cmpsb (bad) mov sub sbb or sbb pop mov idiv ljmp test insb cmpsl (bad) call mov rorl push sub arpl fmull mov add movsl push sub xlat orb add and cs ljmp fucomip inc cli dec cmpsb adc movsb and or outsl cli xchg push mov pusha mov jg sbb jp or xchg les cwtd jbe ret adc or adc mov add jo cltd ja inc insl fcomi (bad) out mov adc sarl std inc xor call mov in cld (bad) ljmp mov dec adc add xorl cmp inc int3 js test je push and adc and in dec arpl add and jecxz xor cmp push shlb inc repnz insb (bad) adc sbb fs sub scas (bad) (bad) cmp or inc fisub xor (bad) inc push push jbe sbb push fimul xor (bad) or insb scas cld bound scas es xchg add sbb mov jo jnp push sbb fmuls or mov mov xlat cmp divb ja cs inc dec loope (bad) les cmp dec xchg mov nop insl push mov pop pop and pop (bad) (bad) mov in fiadd (bad) sbbl in clc lds lock ds mov cli mov mov dec in mov je add and scas outsb sbb inc fcmovu inc add xchg out test (bad) cmp out mov hlt outsb mov jnp mov push nop add dec or (bad) lcall or les add and add mov mov and fcoml imul adc loope hlt cmp cmp push lret jle or mov fwait and shrb mov das das push adc cmp cmp mov mov jns sti mov pushf jmp adc js lcall and imul mov leave cli add outsb test int add push mov pop sbb test push pusha add push aas arpl or jg xor mov jge add xor push repnz fucomp jnp test insl dec jbe dec ja mov arpl push dec test decl jge repz pop je xor pop cmpsb mov jbe push dec popf nop push dec xor pop andb mov mov dec andb cmovp jge sub dec sub xor xor or aaa test push sub push aad (bad) cmp ljmp mov pushf push pop pop add sbb xor (bad) or cld nop xor das mov mov jge insl into add add cs aam and inc sar inc cld xor cmp inc shrb stos (bad) dec sti into lahf add cmpsb arpl xchg dec cmpsb loope lea add clc jo out fcmovnu bound lods std push cmp test xchg in ss (bad) (bad) call ljmp and pop cli adc lcall mov (bad) cmpsl xor jle or adc cs popa add mov push push sarl add lods popf jecxz fidivr adc xor or sahf aas jnp add and lods incl stos mov lahf cmp pop pop adc mov mov ja ljmp mov sbb pop push and insb (bad) (bad) fisttp xchg lcall aaa cmp divl xor inc adc jl adc out clc mov lret sbb add jno repnz insl push jecxz pusha jae pop ds mov xor cmp in add and outsl aas jno icebp pushf xor pop call (bad) fldenv add jecxz sbb mov repz fmuls or add add movsb fnstcw xchg dec mov loopne inc push fidivl sbb popa mov idivl push decl push jg je or insb sub pop out mov mov and push not xchg out rcrb jg dec xor cmp ja movb pop or (bad) rdpmc dec clc cwtl bound in mov rol xchg push add push mul pop cmpsb (bad) sbb std fistpl cmp call ds popa outsl aam inc loop scas sub in ljmp add jno cmp push xchg xor mov cmp xchg mov outsl mov add dec int3 pop add outsb (bad) addr16 push xchg and pop lock lods xor mov icebp adc xor fxch (bad) dec dec or push roll daa aaa aaa push (bad) cmp xorl xlat inc lret sarb popa ljmp enter (bad) jg daa inc out (bad) cmc mov outsl mull xchg in inc aaa mov sbb lods ja or (bad) mov inc mov iret and mov popa cld ret dec xor jl call cli and mov mov pop rorb cmpsl adc push add jg out add or dec int3 stos sarl inc sub sahf mov les test es xor incl xchg lcall popa add and cwtl movsb out aad jmp mov loope add and push xchg jb insl popa mov stos cld mov dec mov add or cmpsb sbb mov cld sarb sbbl cwtl imulb and (bad) decl clc mov and aas scas add push outsb mov lcall or (bad) lock xchg or cmp in jne push lretw (bad) (bad) mov notl adc or (bad) mov (bad) mov bound movsl loop sbb jno mov ljmp adc add pop push (bad) cltd ja add pop jo sub adc (bad) adc inc mov xor jnp pop or out mov gs es (bad) aas inc jbe js (bad) xchg xchg xor aad mov adc cmp dec mov js inc subb hlt push jle dec jg daa mov cmpsl into enter xor (bad) (bad) mov (bad) dec fisub mov mov inc pop fwait push imul cmpsb pushf push pushf ss aaa add mov fistp pop aad cld aaa cld pop cmp stos sahf clc sub push push aas push into add sbb mov jge gs adc arpl pop (bad) ljmp mov pushf add mov mov push xor cmp lret (bad) jno fcoms xor inc jne mov jg pop lock sbb or or inc and fisub inc jp and decb inc (bad) fstps stos cs fcomip stos mov (bad) lods imul sbb cmp cld pop add mov push jns cs and pop sbb pop pop test inc lcall sbb lods das mov insl pop (bad) fsubrp push test sub sti loop into xor jle cmp cwtl mov fmull mov pop or pop mov pop and cwtl or mov jg ljmp jno lds mov (bad) mov popf jmp add stc push sbb xor sub rorb cwtl les add ja (bad) (bad) (bad) (bad) call fwait std add add dec dec mov pop ljmp xchg push mov enter ljmp push out (bad) sbbl pop ss ljmp jle inc jbe add divl outsl (bad) add add clc popf es adc cmc addr16 inc popa fstl inc jno mov jns add pop loopne ljmp push or add dec cmp xchg out stos adc (bad) jmp sbb je mov arpl cmpsb or and add sbb roll sbb (bad) or dec xchg (bad) mov mov mov mov outsl xor xor sub sbb aaa cmc inc add movsl xorb jecxz aaa std (bad) adc mov cmp je push in lahf add (bad) decl xor xor cmpsb rolb mov sti mov fcompl adc cli lcall mov notl loop add shrw scas push push and mov xorw rcrb mov subb mov and jge lock sar mov in mov cli pop add add ja xor out ret inc pop ljmp call jmp (bad) test jo or (bad) xchg push dec and mov mov iret and addl mov mov inc ret bsf stos and push jp addr16 clc mov mov cmp dec loopne aam (bad) cmp out dec bound pop std add gs adc xor mov jp (bad) ret cmp ret sbbl add scas fcom fistpll loop pop and add mov jmp lcall push push out das fmuls loope or (bad) cmp add pusha xchg lcall mov inc mov jb sub andl cwtl fcmove outsb outsl mov icebp push fwait or out mov rcl jp jg mov aaa popa daa and dec mov or movsb mov pop in les stos inc ret outsl popf rorb pop std scas (bad) (bad) fdivl pop pop bnd fcompl aam mov incl xor mov mov or add fstpt movsb mov mov pop ret (bad) or andl add aas xchg incl inc mov mov pop scas mov mov pop std cs add ds xor dec xlat (bad) (bad) ljmp xor push inc cmp mov sahf sbb and cmc test icebp stos or outsl call loope xchg inc ss and frstor sub mov mov mov clc sbb mov dec ret inc add mov mov inc pop dec emms fnop (bad) in add js adc lds decl rcrb xchg sub addl sbb jne jae cli inc dec or pop mov call dec pop iret scas out dec loope (bad) mov aaa cmp push int popf pushw cld out addl mov lea (bad) ja es aaa ljmp add sbb push cmp (bad) ds aaa ljmp stos push mov push (bad) js outsb out (bad) (bad) (bad) jmp sub or rcll psadbw add mov shrb in or call out jge,pn or mov out sub rolb (bad) jg sub fwait jb sbb inc or (bad) fcoml mov lret mov arpl scas (bad) or sbb fcoml cmpsb fprem1 lea lock divl xor cltd jp test hlt xadd inc mov xchg mov mov imul push clc mov mov adc adc add jmp mov int3 pop loope (bad) add adc (bad) cmp adc mov cmpl hlt sbb or jle mov jp or jg mov jbe xchg adc bound xchg shrl (bad) insl and ret test sub inc popa mov outsb out and mov cmp pushf sti mov sub pushl adc mov jbe xchg sbb jmp (bad) call mov adc out cli inc mov dec aaa std (bad) mov xchg push add pop dec jno mov loopne (bad) sar pop cld call sbbl mov cmp imul fadds das inc xor push dec push fs test jmp lret inc sti fnsave dec xchg aad mov loop xchg xchg adc ficom cltd out imul pop sub sbb sub int3 mov xchg mov jg jecxz,pn ret sbb rolb jae add pop in ljmp adc fmuls flds scas jg or lcall pusha mov mov xor sbb sub (bad) (bad) (bad) incl cmpsb jle enter push arpl ret pusha sbb jo (bad) mov (bad) (bad) (bad) incl inc adc xor (bad) sbb and xchg idivb pop bound fnsave into xor push sub cmp jle loop mov push pop adc dec mov dec (bad) ljmp cmp icebp mov test shrb loopne insl test fisttp jle jg cmp xchg push bound push push lock cmpsl sbb cmpsb out (bad) push jle test pop inc out das add lea fimul dec in addb pushl inc sbb add rcl pop xor pushl mov and mov inc cmp call xchg mov stos call sbb or into pop xor (bad) insb outsb mov xorl lret add fsubs loopne cmp ja les push jo,pt cli inc push clc lcall and xchg fild mov (bad) out dec push and push xor dec add pop dec sbb (bad) mov mov lret lcallw add fiaddl xchg pop decl mov popf std adc loopne sbb push jae sti (bad) in subl adc jne bound cs add cmp aam int push roll mov (bad) ljmp push push movl adc nop jmp (bad) jno lcall cmp push cltd dec push inc jecxz iret lcall push sbb push (bad) jg incb ds paddsw hlt push leave insb mov aad sbb lock decb lods int3 sbbb jg movsl mov (bad) test pushf and orb dec or clc iret xor out pop std decl data16 ljmp es loop les and mov xchg mov lret pop (bad) fbstp ficoml ret nop add call cmc ss incl xor fnstenv jl mov std push mov mov es sti cmp xchg add sub or mov pop xor mov cmp or mov roll add rorb popa int lcall (bad) jmp mov movl push xor xchg test lock mov (bad) jno pop arpl pop sarl add (bad) ljmp inc cmp (bad) mul mov mov push pop loopne push ds ret or (bad) (bad) (bad) incl ljmp xor sbb push notl push xorb mov xchg jg aad or jno into lods inc push stos pop mov fwait pop mov cmp scas cmp incl mov inc mov (bad) dec jmp cmpsb jg movsl out adc dec icebp sbb sar incl inc mov insb decb roll cmp into inc pop pop (bad) ljmp mov adc aas jb dec aam shlb cmp push jo nop cmp fsubl fimull dec addr16 push mov push ret test ds adc imul jp and xor in fprem lcall loopne icebp sbb mov in dec sbb and add cmc ljmp push and call or sbbb js sub incl xlat rolb xor xchg mov jae push push in psllw mov or jecxz popa pop push mov pushf push or fxch mov and pushf mov aad xchg call insb pusha jg (bad) push adc fidiv or jg adc fcompl loope sub cmp xor (bad) (bad) fild xchg pop fcmovb flds jbe bound pusha pusha cmp imul es add jge push rolb mov out test decl (bad) (bad) lea xor and xchg or jecxz add hlt repz mov push lret js or pop js shrl xor lock add jo loopne mov push ret add cli mov (bad) insb push je sub dec fdivs mov add pop (bad) and gs loop subb jae add outsl clc ret lods cmp or xor mov sub arpl ja icebp and mov or cmp mov push jbe and xlat push xchg push xor xchg push add enter add sbb push lea dec push or frstor push stos lods aad fstpt sbb lahf inc push jb das in test faddl and clc jge and inc push sbb jg jo js pop adc push mov lock ret sbb adc fbstp fsub incl and int subl jl stos mov out xchg jle dec loope adc and cmp jmp and or insb inc (bad) (bad) call jo vandps add (bad) sub sbb mov mov sbbb mov jno sbb push ds sbb pushl and outsb in mov mov cmp mov enter scas cli subb xor pop add lds (bad) mov pop push (bad) pop jp cmc lcall fisubr cli (bad) incl jb test outsb lea cmp aaa mov xchg outsb dec into es xor add mov icebp sub push sbb or repz mov fbld and test mov add or stos mov mov pop sti mov pop cltd xchg nop pop mov out fadds push adc push and or xchg movsb or or push xor pusha (bad) lret test and mov loope xchg mov and (bad) adc sbb add add jecxz das fdiv xor sahf in xchg and and push data16 (bad) std add pusha xchg jge call add jg pop cld add les xchg dec dec (bad) les dec arpl subl mov lcall nop jge and in push cmp pop mov not (bad) outsb dec sbb (bad) popf int3 xor in insl dec (bad) (bad) (bad) (bad) fstpt adc or into cmp push push xchg push js xor sub mov popa jno dec stc adc fdivr lcall inc jo in adc xchg and negl pop mov incl popa sti cmp (bad) add (bad) mov or sub mov (bad) call sbb xchg or mov data16 mov cmpsl cli lcall hlt ficompl sbb mov push fwait lea out jns push lock pop test setl ljmp mov or mov inc or fcmovbe cmp push addl decb insl pop mov sub call (bad) decl or ja mov xchg xchg pop (bad) mov mov and push pop dec pushf cld sbb cmp adc adc push jle dec fwait push loopne orl sub jmp and push cmp mov mov mov jg lret iret sub and in inc jp jnp movsb jno out mov mov insl jo and mov dec (bad) xor jg test and add (bad) jo pop mov xchg int3 pushf inc xchg testb bound adc (bad) out or test in add dec ss xor decl pop mov xor cmp out fdivrs pop push (bad) sub inc and cwtl jmp cmp xchg aam dec enter addb loop jnp and xchg push push lcall mov cmp adc scas mov enter nop dec push cmovb icebp sbb jecxz int3 jge subl sbbb add insb icebp mov sub int3 loopne ljmp ljmp std aas xor push lea inc mov lea xor out loop and out ss (bad) in aaa inc push sbb decl jae (bad) imul sahf in (bad) (bad) (bad) mov adc mov loop xor inc data16 mov sti inc sub jbe ss (bad) jmp sub dec or pxor arpl addr16 and popf js imul push je clc (bad) (bad) ljmp mov inc jmp test repnz daa inc stos pop mov jg insl call loope sbb and push mov lcall out xor push sahf xor pushf cmpsl cmc fcmovnbe incl xor test fcos lea mov arpl inc and cmp rol pop je (bad) fcomip or sbb hlt mull sbb add insb into push inc je jg add (bad) or fs add sbb push and imul cli (bad) out mov jbe inc xchg or pusha or xlat sbb rol decl movsb pop repz pop jecxz call pushf cli hlt (bad) cmp mov and mov cmp sbb or jnp ja clc or ljmp jg push adc and int mov popl cmp lcall push cli (bad) jae ja mov sub adc sbb (bad) (bad) (bad) jmp aas mov xchg test divl sbb mov js sub pop sbb jle or and ja inc ret sub sub cmpsb nop jmp jmp cmpl mov inc mov scas sub sbb ljmp rorl mov inc or test jg call sti or in imul outsb adc pop mov (bad) ljmp push jle pushf or ret insb push jae xlat cmp mov sar (bad) (bad) lcall mov inc lahf mov popa cli (bad) movsl add sbb xchg dec popa inc dec (bad) pop hlt call jo dec xchg std and ljmp in add scas outsb fs fnstsw cmc scas clc mov xor mov (bad) arpl push call das sar sbb mov addr16 mov dec cmp sbb jg push mov (bad) test lea jb call mov inc mov pop or loope mov push sub pop in inc std mov pop push nop/reserved movsl movsl ret shll cmp call jo in jl inc (bad) (bad) jg push out inc popf in add notb mov test movsl inc ljmp push pop gs aaa sub jecxz sbb jb mov jb (bad) jg es pcmpeqb lahf and loope add fild lcall adc mov mov jno fwait pop loopne incl imul or dec mov cmp (bad) in outsl mov sbb mov mov (bad) cmc imul fcomps push pop inc mov (bad) mov inc mov (bad) fisubrl pop pop hlt push enter test pop std push xchg sbb test roll sahf push or test fistp xor push adc sub fidivrl pop xor adc cld shrb inc mov stos mov int3 inc mov pushl arpl cmp loopne fnstenv mov add mov (bad) ljmp xchg mov xor adc (bad) dec outsl push sbb inc mov (bad) dec imul test push clc push sub incl adc jl mov mov dec and jp or subl cltd ljmp xchg cmp sti or loop add push jnp,pn xchg jp push dec dec jae (bad) jbe popa jmp and test data16 fbstp jbe (bad) mov stos sub add add out lods nop arpl add mov dec (bad) ljmp enter mov scas insb jbe or push or sub int xlat insb in mov inc (bad) incl cltd dec int or icebp fiadd add push loop shrl (bad) decl sbb or inc or mov mov jmp xor stos cmp call or inc ljmp pushl add pop mov lret add adc adc mov and (bad) stos (bad) pop cld pop xchg mov mov (bad) incl ss cmp std fnop or sbb or mov cld cmp or fbld bound mov outsl jp adc inc das xor push mov data16 divb pusha mov sub inc rep push mov sub pop cmp add pushf cmp push imul adc mov outsb inc mov add xchg fwait mov xor mov scas cmp fsubrl or (bad) ljmp sar xor enter add jg nop adc and aaa push incl or cmpsl (bad) insb mov lods push sbb aad mov adc (bad) (bad) je or stos and incl cmpsb xor in inc xchg mov arpl (bad) (bad) jmp pushf mov ljmp sub (bad) outsl outsb mov push mov mov add rclb xchg je mov das push (bad) fildll sbb jp daa loope mov ja out sbb sbb inc (bad) jle dec ds in movsb (bad) mov xchg dec rcrl cmp add xchg mov sarb (bad) std les cmpsl lock jl pop pop clc pop cwtl popf les aaa or or aaa add jmp out call or sub loop fldcw ss repz nop xchg add push xor xor stos fcoml or xchg dec je (bad) (bad) mov (bad) enter push adc orl sbb mov test or data16 (bad) jno jg lods fisubl repnz inc pop push and mov (bad) (bad) (bad) fistp inc roll cmc inc or stos and sbb outsb test mov mov lods and or jne sbb adc loopne xchg aaa je mov or out sbb mov movsb loop mov xorb negb aaa movsl movsl cmc inc scas dec inc adc adc fildl jmp pop jg mov test je in cwtl (bad) jg ljmp jbe iret jp mov aam jb test dec popf mov pop cmc jge xor mov pop and push cmp jns or bound jle dec add outsb mov cmp push (bad) cli (bad) jg movsb ret jo add aas mov lahf lock mov inc pop in cmc fstps push dec push dec fwait push int3 je push data16 ljmp rcll cltd out dec add sbb cmp ljmp ss adc stc scas jnp dec movsb imul call lcall push out jo sbb inc jmp inc out push dec sbb mov rcrb and inc shlb rolb lcall je mov pop mov pop xchg std (bad) (bad) call rcrl mov mov aas dec jns push inc cld sti into dec add jno and cmpsb out cmp or jg test add imul orb mov cmpsl loope inc xor add mov jmp inc sarb ja ret jno mov xor lods es cs out decl inc jg add push movsb mov lods xchg dec cmpsl andl cmp mov stos je lock (bad) fnsave jo scas push nop pushf and movsb xor inc test fsubrp and push insb loope mov jbe out loopne xchg ljmp bound xor push gs pop mov pop rclb dec xchg push mov vpandn and fbld jbe ret jle jge repnz (bad) lcall jne arpl xorl mov sub dec xlat shll test (bad) stos invlpg (bad) test sbb ror add mov cmp in aas (bad) pop cmc (bad) mov test xchg inc cmp (bad) push pop inc cmpsb xlat es (bad) jle sbb dec fnstsw or sub rcrl enter inc cmp sub js outsb jmp js fiadd add jb cwtl shrl andl xchg or mov pop push sub xchg jne adc mov pushf push (bad) testb lea test push or cmp (bad) out (bad) dec (bad) dec or ljmp sub es dec sti adc pop mov push sarb daa pop dec in cmp lcall hlt out fistl test add (bad) (bad) inc sarl mov adc pop push imul push loopne les (bad) repnz jae and add in xchg push sbbw cmpsb and dec and sbb mov fidiv ljmp push add fdivl je push xchg aad cwtl insb mov mov sbb xor out in (bad) jg ds stos insb std push dec add xchg xchg push fsubr inc fisttpl xchg test ss xor inc fwait inc int lock bound clc add cmp mov clc ljmp adc ja and stos inc xchg into sbb pop add push inc rorl sbb push (bad) mov push push divl mov out mov repz into cmp push jecxz repnz cld ljmp or push pop adc ljmp cmp and mov sbb cld test inc fsub or mov (bad) or cmp jl add hlt add add test ss fsubl push enter lock push mov xor mov mov hlt lcall jne pop into push cs adc xchg rdpmc dec mov shll mov cld lcall inc stc jo in outsl mov nop cmp ljmp jae pop cmp jl imul dec psraw push popf ljmp pop pop cmp sub add js decl rcrl pop add cmpsl enter jne jb ljmp xor cli push js add dec fistpl inc pop lea fstpl cmpsl out sbbl pop (bad) or out cld inc mov or cmp lods xor inc cmp pop xchg in adc pop mov xchg rcrl add mov mov cld push test les into sbb std (bad) call sbb cltd mov mov jmp (bad) adc scas cli mov xor cltd sahf pusha jns insl dec pop ja lock xor idiv insb ss icebp mov jbe jbe je adc fstl insl hlt mov lcall call ret and adc push push std decl mov andb (bad) push ss inc inc mov je int incb (bad) loopne iret jbe cld sub rorb or cmp inc in call adc idiv add ljmp xchg lahf movsl mov and imul ret (bad) (bad) lcall call ret mov cmp jmp in in imul jmp in jnp jmp int3 ret fs lahf lds add int jo bound or je mov cli mov inc call in jo arpl jo stos xchg adc fadds ljmp js ljmp mov popa lret sub cmp (bad) xor inc adc adc add pop es or add loope imul mov shrl mov je aam insl cmp sbb (bad) pop (bad) (bad) (bad) (bad) frstor ja call sub jnp insl outsl loope inc push stos push xchg mov test rolb loopne (bad) fsts popa sti mov inc imul stc lret fwait mov cld (bad) ljmp add inc sarb test push fwait psrlw into mov cmp (bad) call cwtl je ds arpl xchg adc fist shr pop rolb (bad) push mov push in pop imul adc mov pushf les lods decl cwtl addr16 dec or mov lcall mov enter sub (bad) sbb roll push xlat mov test enter movsb fwait loop and fild imul cltd add out rcrb push push popf aas adc mov pop out sub push repnz (bad) icebp push pop out xchg in push mov sbb sbb (bad) out mov mull cmp enter (bad) dec inc xor adc jae mov enter test lods jae lret orl inc push fistpll and jb xchg (bad) call (bad) ljmp in jmp mov stos jecxz mov xchg jg sbb inc add and insb loop lds jg test add add sbb mov mov xor sbb (bad) push jno sbb out fist or jge add nop icebp cmp jno test es inc fsubrs adc icebp call gs enter mov je (bad) fistl outsl push test jecxz jp push or mov sbb cld mov push xor inc fildll hlt or xor pop pop hlt in or push xor insb test test out add sarb sbb call enter mov fcmovnb xchg or adc cmp pusha add mov push mov (bad) loop push cmp (bad) movsb loop xor inc jl xchg lret push mov (bad) js dec (bad) dec push (bad) (bad) jg repz imul loop hlt sbb mov xchg out (bad) ljmp in shlb add cmp cmp sbbb hlt inc xor cmpsl mov nop insl add scas xchg adc (bad) (bad) (bad) jmp cmp pop imul std add jnp cmp or xchg mov (bad) incl pop xchg add push mov and pop (bad) ljmp test fnclex cmpl js test jp addl test sub test cmp adc decl shl je (bad) aad ffree add stos xchg fsubrp cld mov je (bad) or pop stc pop sahf adc mov bnd shlb fcoml pusha jns fs lcall cmp and add adc adc ljmp xor mov inc mov add je fmull push xchg fdivs lock loope sarb jbe loop adc xor (bad) pop xor adc dec push cmpsb jnp icebp out xor fmull jae arpl data16 (bad) out push adc in mov sbb ljmp mov ljmp in push fmuls mov lcall mov push adc lock jle movsb mov lods cld mov mov inc push fsubs sahf sub sbb fcomps enter cmp mov inc xor jb push xor clc cld push pop push jg call xor stos or jo hlt cli mov pop das lods cmp add mov bound or sbb mov mov sub movlps test and vxorps sbb loope ror sub jecxz mov (bad) nop btr lods inc in and jg and xchg push das inc test movsb mov or (bad) out mov add jno push pushf mov clc adcl outsl cld into and (bad) jg pop or test cmpsl inc dec shrb push adc add out xor sahf test pop lods mov or cmp mov cmp incb pushl enter mov or decl sbb mov jnp orl pushf sub add push sbb rcrb ret pop (bad) ja (bad) pop pop mov xor test pop std decl sub jae daa (bad) add jo add test leave add data16 push lcall xchg cmp dec (bad) lock (bad) call lahf lock inc dec cmp mov fdivl aam or xor (bad) ja (bad) mov jo cwtl inc xchg xchg cwtl outsb or sarb cs (bad) xchg adc loopne jb xchg int push lock (bad) push add lock test cmp jne cmp int data16 mov push sbb ljmp jl xor fisubl (bad) sbb push adcl mov push dec test mov mov pop sub pop and movsb shll orl cmpsb icebp (bad) incl insb mov mov ss rcrb inc frstor sub cltd or xchg (bad) jg decl decb fcmovb or add mov inc jo in popf sub dec repnz mull inc push xchg mov sub mov lods js inc test or mov xor add mov sbb jno pop push ja mov pop icebp inc lcall push enter inc flds push hlt das clc (bad) mov popf in call (bad) call incl jle aaa out push push fsubr stos sub ljmp xor lahf xor cmpsb out mov adc jmp inc cli push (bad) mov jmp in mov mov loop into sub ja adc jmp (bad) cmp cmpsl cmp inc dec loop es sahf (bad) push fbld shrl or daa cmp (bad) mov xchg dec mov push andl pop hlt or insb or sbb adc sarb ss in mov rcr movsl (bad) ljmp mov int xor pop sbb jb or loopne loope notb fwait int3 bound ret xchg mov xor test imul (bad) (bad) cmc xor mov xor push fbld add add mov adc xchg cmpl jnp aam fldenv xor aas test cld sbb add xor rcr mov arpl (bad) mov rorb lahf xchg stc and dec arpl pop jl subb push loop fisub xor fdivs roll clc mov and add add sbb or jnp pushf xchg cmc fs in dec call lds push fs sar (bad) ljmp jmp jecxz ret movsb lds outsl outsl cmpsl in (bad) sbb cmpsb in cld enter dec jg lret mov aad shrb scas push test fist jne cmovl nop or ret xchg cwtl push outsl push decb (bad) je inc test inc and sar dec or and ret jnp ret mov int3 in jmp dec add mov add mov cmp (bad) ja int3 jmp pop and jg aad (bad) pushl les sti aas test pop inc pop stos rcl and pushf sbb cmc insl lods jb outsl push add mov lods enter xchg fild std pushf add mov inc mov sbb jne (bad) ljmp je mov pop push cli in and xchg (bad) or call pop mov xor mov cmp movsl enter add inc clc cwtl aas or cmovge xor and pushl mov dec sbb scas (bad) xchg fwait add xchg adc das clc (bad) jns jge fiaddl add xor sbb fiaddl lret xor shl mov das push mov dec xor push in jo or add pop sbb sar mov pop roll push loopne rcrl jmp dec out cmp push lahf sbb les movsb cltd notl lret adc subb nop sbb cmc add inc lods data16 rolb mov push insb add sarl ljmp fiadd lahf dec push (bad) push shrl jmp pop sub xchg (bad) outsl jp jmp add mov xchg mov pop (bad) fisttp loop jb jle adc push mov out lock (bad) dec nop pop loope adc imul jg cmp loop push xor aam xorps (bad) scas arpl add xor mov rol das sub mov outsl pushf popa icebp inc cltd or jle dec inc cmc push rorl enter ds lock cmc mov xchg rorb sbb rorb jl lcall cs es push stos or hlt lods inc repz int (bad) cld (bad) fisttp pop out fdivl arpl cmp mov pop shrb daa aas xchg (bad) sbb rcr cmp mov cli aaa inc push push jp lods icebp sbb dec mov in add add (bad) jg and cmpsl lahf jo mov daa jb test ret out lods jnp aaa pop call std cmpsb jns or mov cwtl stos dec lret or aaa lret lcall push hlt (bad) mov and (bad) mov dec ret movsb imul std daa jmp orl xchg jle movsl fistpll mov add scas clc int lock or std data16 mov cmp lcall sub loopne and push test fwait sub jp outsl aam cwtl pop mov xor add add ret sub pop push in in dec pushf orl jle dec cmp jecxz fdivrl cmp jg add bound mov aas push (bad) (bad) (bad) lds jo outsb push or sub xchg and jg scas in dec xchg mov push imul mov adc loop push mov jg outsb add sbb inc adc adc inc cmpsb test loopne ss pop inc sbb loopne jmp sahf cmp hlt xchg test xlat cmc pop cmp jo adc xchg sar jbe xor ret roll sub jg imul mov aas adc jecxz sub xchg stc mov fist cld or mov adc mov inc adc (bad) (bad) ljmp sbb inc fsubs mov jbe (bad) ljmp inc dec pop push lcall ss outsb mov jb pushl ljmp pop gs cs sub into xorw aaa inc int add add out push (bad) lods incl or data16 mov mov add cmpsl sbb (bad) (bad) lcall sub fs cs inc jp jge mov insl mov jb pop adc aam dec cmc int enter ret adc leave mov stos in popf ret (bad) mov jl pop push (bad) inc xchg fucomi pop les and jns pusha inc lods mulb (bad) cmp insb and mov mov scas lahf stos or in or push nop cwtl cli test push mov inc push pop and add (bad) lcall movsl sbb flds jg flds mov push xor sub fidiv jbe cmc mov sbb and out mov add jp psrad mov pop pusha cmpsb mov sub jb rorb lods jno add popa xor pop nop jmp mov out inc xchg nop (bad) jnp and pusha das mov pop test add (bad) decl in fs lret call nop jo add cmp lret mov loop push cli pop add xor je push add mov mov ja ljmp inc es sub adc push ss xchg mov pushl cld incl xchg pop mov popa xor cmc or fiaddl mov dec adc sbb icebp mov dec push push mov shrb mov mov pop subl mov (bad) cmp adc sbb xor push clc pminsw pop mov jnp (bad) sarl or ja dec or xchg push imul or pop adc add cld lcall pop mov mov cmpsl mov fildll andl incl cmp adc jne lds enter out xor or decl or arpl cmpsb (bad) or mov jecxz xor lock mov jecxz pusha arpl (bad) mov scas fiadd call ljmp sar pop adc adc or (bad) out mov dec inc addr16 fildl shrb xchg arpl sub (bad) pushl inc call (bad) adc sub mov fstpl rcrb mov sbb cmp xchg cld cmp mov out faddl (bad) (bad) lcall cs shrl adc popf sbb out rorb stos or gs sti mov imul cs or xchg jg add jg or sarb xor (bad) leave push popf negb (bad) (bad) incl lahf mov adc lcall and or fild add add test cltd pusha inc adc lret faddl cmp (bad) jmp push outsb jno push sub sub jbe or popa cs xor scas call out jge cmp cmp dec lods out or outsb add adc mull fildll fidiv loope in (bad) (bad) (bad) sti aas ss lods mov ljmp loope push hlt lods jae dec lods addr16 jg lock push popf adc add sbb cmp lea fdivs sar adc pop push mov outsb test (bad) fisttp dec add push into push (bad) lret add movsl mov push cmp call mov push idivb push xorl dec rorb cmp add push insb out dec jae and mov jnp lods inc (bad) outsb jbe ret dec ljmp clc fcomip test inc cwtl pop mov cmp movsl sbb inc xor fcmovbe sbb rcrl mov data16 cmp fcmovne pop lods push hlt inc repz (bad) sbbl inc cmpsb inc mov aam ss ret mov stos popa loopne std inc mov (bad) (bad) jno loopne fisttp cli jge push rclb add mov dec xor mov fwait and in xchg xor (bad) decl mov mov bnd add inc inc sbb into dec sbb decl or and iret aad adc adc ja divl or pop nop loopne push data16 mov lahf in (bad) mov mov and add inc pusha mov fwait lret dec mov imul cmp insl daa mov mov mov add in sub jo xchg dec push fmuls inc fisubl imul mov scas fnop cmp loopne jbe mov push xchg jp and test jecxz pop mov adc mov or hlt xor mov inc sbb add das sbb pop imul stc push push testb fild jmp out pop inc push inc aam call mov xor or ret jmp jg inc loope ja cmpsb add clc out mov mov jo pop addr16 (bad) mov pop lahf scas add rcrb xchg scas cmp pusha or mov js add mov pop flds pop mov out (bad) (bad) lcall dec shlb mov loope cmpsb sbb add cs adc movsl push xchg outsb mov mov xor jns (bad) xchg mov ljmp out cmp push jecxz dec std mov test in cli (bad) decl xorl pop add add shr and dec andl dec add or shl stc jbe and and stos incl pop jno ret clc flds push dec mov sahf loopne mov ljmp cmpsl sbb sub sbbb mov pop leave adc xor das test push add movsl ret push dec mov outsl decl mov (bad) lock push aam ret (bad) leave push (bad) clc push insb loopne mov sbb sar ja sub int3 pop pop daa bound hlt ret out pop aam dec sbb xchg lock loop out subb pushf lret in pop or and icebp cmpsb (bad) mov ret lahf les mov mov add out outsb and xor jmp (bad) (bad) jmp lock jmp in loope sbb xchg push lock (bad) ss jno and cmp push les notb dec xor inc pushl sbb jbe les and and pop adc mov cmp adc add mov fsin loop mov stos mov fimul shr and lcall call mov or (bad) movsb sub or mov inc mov cmp lcall push mov loop cmp xlat sbb jmp pop cmc addr16 dec xchg mov icebp xchg add loop movsb pop loopne adc loop cli xchg jb loop xchg push data16 dec xchg (bad) incl stos cmp pop and xchg add pushl fisttpl and repz push rcl pusha mov in (bad) jg hlt test push xchg lcall and mov or ret xchg mov lods adc fs add es das and xor push int3 jp or jmp inc int repz adc fisubl into or stos pop mov add lods jno mov fistpll mov decl into (bad) std addl pop push out (bad) and (bad) std out fiaddl jb or fwait cli or arpl push call clc test xchg (bad) cld lcall mov add fadds cli into cmp push fcoms inc out or push std call (bad) mov mov and aad lds je insb adc sub enterw outsl inc std adc add ja mov mov add mov sahf sub movsl ljmp cmp or adc test sbb adc je xchg lcall and push fs in mov hlt add cmp sti clc add daa or jl fiadd sbb mov add mov and sbb adc adc add movsl test xor mov and push add in (bad) out fcomp jae cs iret sub pop jmp adc stos push dec and inc loopne lret loopne nop cmp sub fsubl aaa je lret inc mov sbb test and decl sub testl inc or jg and aam lock adc pushl mov mov popf sub in push add pop hlt jo (bad) sti daa lret inc xchg mov scas mov int sub mov adc inc subl mov push sbb loop ljmp out and loope (bad) jnp out ljmp or lock dec xor or and mov push mov lock outsl fiaddl loopne or in xchg sbb fidiv jbe je imul icebp fwait inc sub inc cs (bad) lahf or xor mov mov inc mov xor and and mov roll fsubs test (bad) xchg out enter add pop imul sbb push push cli (bad) jg adc adc jg icebp add xor clc ja scas (bad) int cmpsb imul xor cwtl mov rcrb push nop pop dec (bad) lock sti mov aaa lods ljmp adc ror fstl push es mov jg xchg fnsave or push adc (bad) jmp insl push jnp sbb gs mov sahf push iret or test movb decb test test jb inc jge inc mov (bad) call add and std xor call jb rolb in and xchg es ljmp test xor jge mov jg outsb sub popf data16 (bad) dec ss mov dec or das lds sbb sbb (bad) sub (bad) or stc (bad) jecxz call sbb pop mov (bad) xor adc add push dec jle fwait lock jl and or daa mov cld pop cli call shr push push sub inc in fdivrp and scas pushl jns (bad) push pop pop fimull xchg repz pusha in mov js xchg jns mov sbb (bad) fcoms push in cld dec into xlat les or test lret add ss jg movsb out cli dec xor fcmovbe cli adc repnz loopne cli (bad) cmp adc dec mov (bad) (bad) mov dec lods xor std mov cs mov push cmp pushf jbe mov (bad) pop add adc outsl std shll and pop jg adc out xchg pop mov ds sbb jecxz rolb (bad) call outsl cmp mov jne and je arpl mov iret je mov mov (bad) incl outsb and add pushf rorl cmp inc mov loop mov mov incl mov ret cmp xchg mov (bad) push cld cmpsl lods imul xor andl jp xor cld (bad) jnp add outsl lods je mov inc mov sar jg daa inc ljmp fidiv outsl fisubr in clc mov and xchg pop push jmp pop (bad) pushl leave outsb add ljmp inc push add ja sub les dec xchg xor pop cltd sub test adc and cmp call movsb sbb sbb inc call test mov in jge push add pushf xor lds jle div (bad) cmp aaa test jno jne jno pop lret push rsm add inc (bad) jmp cmpl lahf push (bad) (bad) jbe cmpsl dec sar ret pushf ljmp icebp cs cmp out shll rcrb int int3 cmc sbb or into push adc call mov push adc mov std pop sub jp sbb mov sbb inc push xchg jge pop in dec xchg (bad) mov sbb inc mov sub leave dec add shll (bad) in (bad) mov popa sbb fiaddl jmp aad jp aaa xchg cli lock mov push mov xlat (bad) cmp in shll ja sbb sarb aas pop sarb cmp imul test (bad) jmp ds jae pand test cli push add mov push pop flds mov incl outsb fild cmpsl inc lea xor lret das adc clc mov out dec inc or andl jle mov outsb jbe add lds out mov (bad) (bad) (bad) std cld push jne push sub xchg jne sub dec fucomip (bad) xor xor push sbb fcmovu jno aaa push clc mov pop xchg call xchg fldenv out jl add sti daa (bad) (bad) decl out sbb dec or loope sbb xchg (bad) cmpsb inc jp inc mov es jb sbb push imul clc fildll loope jae mov movsb xlat sti popa insl mov add (bad) xchg jp mov mov xor cwtl (bad) mov xchg or add push imulb xlat bound sub inc push fcoml int3 dec js push xchg adcb mov jge cld and jg outsb adc fs cmp fdivs mov fisttp aaa push call test and jb aam mov popf add sar lods xor mov rcrb std pop mov stc pusha xor pop push ds (bad) repz xor movl add cmp repnz shll rcrb add aas pop dec insb stos (bad) (bad) decl jbe xchg mov lahf xchg add lcall imul ss and lea or cmp jmp sbb jne add jo rcrb (bad) cmp insl hlt inc cmpsl (bad) xor add and jle rcrb fsubrp test mov call add fstpt push xchg psrlw mov add pop ret decl mov and cwtl (bad) pop repnz xor leave dec mov push fdivs gs lcall mov ja stos dec jl jne int3 in loopne add xor (bad) (bad) jg fs pop jg pop pop mov lahf mov dec add (bad) mov lods jo scas mov loopne int ret ret mov aas (bad) scas push test mov movsb arpl xchg xor ja call mov mov in pop push in dec insl dec jge popl in decl add inc or jp jl bound das cli jp fidivl xor es lock ds jne pop dec add incb add xor (bad) ljmp insb pop jne popa cli inc or jns xor mov pop cmc ljmp pop lret loop sbb mov test pop (bad) ljmp ss sbbl fmull test gs pop inc xor ljmp or subb inc js xchg call cli dec fisttpll and subl push out adc call in pop mov jmp sub divl xchg sbb insb pop hlt decl movsb mov sub ss cmpsb add cld mov fs insb adc mov sbb rcl inc push ret mov cmc sbb divb decl and mov lock call inc dec dec fnstcw mov dec add or outsl inc jae jp pop and pushl fisubr stos jp mov cmp inc scas add ret ret add pop shr xorl push fsubrs xchg sarl jmp cmp (bad) cmp fdivp adc aaa mov cld out (bad) sub dec into push sbb jbe add pushl cmpsb cmp sbb insl jnp xchg or (bad) jne pop xor ss test pushf ljmp arpl pop add inc sti rcrb pop hlt dec mov andb sub pop (bad) add jbe fbstp nop fs push (bad) (bad) out hlt adc sub cmp adc inc jg icebp test sbb mov test push (bad) jbe xor std lcall aas inc or mov push push fsubl int3 leave add push ret jnp inc adc push lds push mov mov aaa ss xor ret int mov dec mov add xor jg ss ffree inc jb shrb pop and movsl pop mov sbb add test (bad) pop test (bad) ja add dec mul jbe add ret in inc dec outsl mov push rcr lods pop pop mov loopne mov cmp add and clc xchg lret jl (bad) (bad) mov jae fild pop cli popf xchg pop call loop subl pusha push xor lahf lret inc sbb add dec ljmp mov sub movsl (bad) ljmp repz int fisttpl push jae orl fs and roll add or sbb sbb jmp pop jo jns adc (bad) push mov cltd in mov add jb pop inc push xchg jg rolb add lds clc in pop outsl xlat and push mov clc (bad) (bad) clc and imul fwait ja inc jp add sub lock adc out cmp jge call fdiv sbb mov mov (bad) mov add scas int3 dec push sbb jno in enter sbb add mov ds cmp (bad) pop std pop les test out mov (bad) out pop jp sbb push fwait test cmp (bad) decl lods and lahf int3 push inc push loop or mov cmp in insb mov sti jo lret jg mov out xchg jns pop xor add pop jbe jg (bad) add xor fs dec inc xchg mov cmp aam rclb les rorb jae xor push mov ss inc shrb mov (bad) or xor incl sti rorb test (bad) nop pop pop fwait insb std rorb add jg mov pusha fdivl les cmp push mov inc imul mov pop fwait push (bad) mov xchg jno inc mov xor xor sbb xor jmp push inc inc xor adc enter jo push lcall or sbb mov mov sub (bad) lcall pop aam sbb test mov test mov (bad) (bad) inc inc movsb std xlat adc movsl cmp into call or jne in (bad) xlat cmp lock jg outsb fldl xor (bad) jge sub inc sbb or push pop (bad) incl addb xlat mov mov dec cs out test jg lock and in (bad) fisubr cmp and arpl mov pop adc mov mov inc aam jp mov (bad) jg call pop lods or mov outsb sub fsub (bad) jg xorl xchg xchg sbb mov pop outsl test mov imul xor imul or fst xchg xchg faddl insb add (bad) jmp add cmc add ds adc mov dec outsl lahf (bad) cmc ljmp scas sbb stos lock add (bad) jle mov sub sub xchg fdivr or mov push pop mov mov mov fsubrs and (bad) call sub rclb or imul loopne imul inc test sbb fldt jle pop aam iret inc sbb cmp mov fsubrs (bad) (bad) call sbb adc repnz add dec cmp cld lods lahf push sbb cmp push popa push (bad) (bad) (bad) push ljmp lcall jnp mov pusha cltd xchg sti dec pop sti cmp sti jae mov fnop jnp dec jne (bad) decl inc mov jl jmp rcrl cld popa cld mov aas dec (bad) jg pop je cmp iret pusha push push sbb inc pushf sub inc jmp sar and mov enter cwtl (bad) es out mov das mov jnp mov arpl xchg pusha jo test (bad) mov imul std nop cmp xchg int3 mov stos fistl pop (bad) jg xchg nop hlt push adc mov xor call mov pop sbb (bad) lcall test in sub inc shrb or fbstp or push mov rcl pop xchg or or inc push insl and imul ljmp fisubr outsb je (bad) roll and sti (bad) (bad) (bad) incl ret push imul push (bad) testb sbb ljmp lcall push and add inc mov mov sti mov add dec arpl and sbb cld fcomip mov ljmp ds jne (bad) mov testl out es decl dec xchg popf inc sbb sub outsl cli push mov mulb add xchg sbb lods push xor inc add loopne cld mov and repnz mov mov dec pushl add (bad) (bad) scas cli fistpll adc add sub shlb mov movsl cld mov mov cs mov xchg hlt cmc sbb adc mov insl ljmp pop cmpsl xchg add (bad) (bad) ljmp jb lods daa adc add inc xor loop fsts pop jne addr16 faddl sbb das pop push dec pop jg push lods aas xchg int3 repnz cld lcall xchg mov sarl pop pop mov sbb push jmp (bad) (bad) mov (bad) cmc dec iret jne jne cld push mov add ljmp insl cld dec test jo fcomps jne cmp ror mov das jmp mov out push incb sahf jle data16 hlt mov xchg std dec jecxz out mov cs push push (bad) pushl push int3 dec (bad) pop or loop call es out mov add pushl adc fdivp ret fs xchg (bad) (bad) (bad) fnstsw dec dec rcrl adc enter xchg or dec out stos or test xchg (bad) out (bad) jecxz xor (bad) inc ljmp push xchg xchg inc (bad) fdiv cmp call adc lock xor imul nop pop cli decl xor push test sbb lret repz add adc jb dec adc hlt jg lcall mov (bad) ljmp gs push add xor mov lret lcall mov sahf add adc sbb jp mov jmp lret jbe inc stos je pop adc push clc add cltd and sahf mov call pop xor dec insb sbb stos push fst (bad) in (bad) (bad) aaa push js ss sub mov jns cmp call (bad) jg int3 sub enter mov fcom push popf mov cmp inc cmc (bad) incl mov pop aaa inc (bad) (bad) pop jle mov add (bad) xchg (bad) adc inc xchg inc xor xchg lea insb jl (bad) jp mov outsb and ja scas adc sti jo xchg rorl add (bad) out cld push loop add (bad) push pop sub roll mov js and testb push cmp cmc in stos subb addb sarb cmp (bad) outsl call test shrb mov fs int xchg loopne (bad) cli nop adc sahf mov cmpsl (bad) mov pop inc mov lahf movsb inc xor sbb dec inc add xor jle dec xorb aam pop inc lcall mov mov fsubl fbld std scas rolb les addr16 nop sbb and call adc movb (bad) add xlat push insb mov cmpl incl add insl mov insb enter jno push fst (bad) cli mov fisttpl bnd lds test or mov int3 mov push cli mov xor mov clc push add add xchg (bad) ss std incl sub cmp xor add dec mov and decb addb push out and ljmp and and add fistpll imul push jp sub dec fnsave (bad) (bad) js test (bad) inc in loop mov in dec loopne or rol (bad) mov add pop fstl rolb ret push or add mov scas and xor addr16 add ret push int3 outsb inc out repz push inc mov mov push es testl mov inc push call xchg inc sbb pop mov lret (bad) test dec add in ljmp mov push inc lahf mull mov aad test aas fs adc xchg xor push orl addr16 icebp mov lret (bad) enter or insb dec xchg sarl fs adc mov and or and addr16 mov lcall jg sbb ficom sub sub push (bad) adc push sbb push add sbb js mov cwtl jl pop jbe cmpb xchg pop daa sbb xchg add into mov mov (bad) lcall jecxz push movsl or jge cmpsl hlt pushf nop outsb daa adc hlt (bad) jg sbb int loope mov pusha jae cmc xor push dec jne push movsb (bad) sbb inc mov xor fnsave cmpsb add subl mov pop or inc xor inc pusha (bad) xor add fisubr (bad) mov jae fmull out sbb push mov or add mov adc mov in clc fs bound jae and adc jg or stc addr16 inc call or inc cwtl (bad) int inc cmpsb lock adc fcmove int3 into clc mov add sub lcall push add lahf lods fldenv sahf or incl push mov sub mov out cli (bad) jmp cltd sbb (bad) add mov mov mov movsb xor dec int3 inc or ljmp dec jb adcl inc mov jg and or ljmp cmpb push adcl mov mov push xchg mov jecxz inc mov adc dec outsl push out out inc cmp xlat lock mov pop cld pop add stos and (bad) mov inc adc pop dec or and adc arpl bound call add cmpsl add and (bad) mov (bad) fstl std jg enter orl sbb mov (bad) (bad) mov std faddl cld and out insl mov adc inc (bad) ljmp (bad) idivl adc cmp dec movsb add xchg add fdivs mov mov mov (bad) out pop or mov (bad) in adc sbb mov sbb or test dec (bad) lcall dec xorl icebp rclb addl fldenv mov stos int3 inc cmp and push pop cmp xlat xor sar (bad) (bad) jmp icebp sub dec dec dec (bad) aam and mov call ja iret das push push sbb mov (bad) add xchg xlat xchg mov mov notb cltd ljmp rcrb lret xchg (bad) push inc insb mov or lcall call into gs cmpsb clc mov jmp stos (bad) test jne shll inc mov (bad) mov outsl (bad) pushl xchg xchg or mov js add jae loop or push dec cli incl cmp popa pop test xchg clc pushl ret xor inc cmp out sbbb mov mov or (bad) lds mov or icebp cmp jle sbb mov sub jecxz test incl mov dec mov cmp fisubl (bad) (bad) lcall fmul out into cmp jmp mov pop cli fnop cmp sbb sbb mov mov mov fsubs mov or add pop push pop gs (bad) (bad) (bad) ficom pop (bad) inc out loope xor push jnp push cmp or mov and mul pop pop sub (bad) mov iret sub inc lock xor ljmp cmp or fstl push shl xor clc mov fisub adc dec mov mov into sbb rclb arpl lcall das mov lea xor pusha insb push pop outsb mov add fstpl mov push xor movl add adc (bad) fst out xor insb (bad) fstps mov push dec pop lahf adc fldcw (bad) mov fcoms addr16 dec sbb sub mov (bad) lcall (bad) sbb mov adc sub xchg inc adc sahf int3 adc cld enter push pushf sbb pop jae sbb jno push cltd push mov and mov xor sbb mov (bad) jo jle or insl dec sbb roll rol ficoml push lcall outsl cli ljmp mov ja add mov lcall mov incl pop dec sbb mov pop mov (bad) pushl push cld int3 repnz test cmpsb bound mov ss inc jmp add pop loopne xchg xchg mov mov mov aaa in out xor fldl mov ljmp (bad) lcall cmp fwait mov adc mov push jmp pop pop in mov (bad) and (bad) (bad) jp pop cmp adc mov (bad) pop loop xchg out xchg cmc and sub jg incl scas faddl (bad) mov jmp les sbb cld add xlat data16 pop outsl clc sub mov jbe lcall add pop mov les aaa or lods cli out cmp rclb jg and mov je (bad) (bad) jg fdivs and jle add sub dec outsb jne enter and packsswb jle (bad) pushl dec push or popa imul out jl sbb and (bad) push mov adc inc rolb dec pop or cmp add aaa or (bad) ljmp dec xchg mov inc js or sbb and loopne sbb out push nop flds push fcmovb jns pop fcmovbe (bad) (bad) (bad) jg out aas xor jle mov pop sarb inc leave add sub dec jno and add aam add and js mov inc or rcr adc and push or jl pop movsl call xor pop pop mov (bad) cs das sarb fiadd in pop fsubs (bad) (bad) mov test dec imul add int sahf dec and sub popf push (bad) ljmp cmpsb cmp or cmp push rcrl test adc add icebp decl pop aam sbb mov pop mov cs lcall inc lods inc cmpsl sub mov jle add inc fs addr16 (bad) decl jecxz and push shll (bad) sbb (bad) int3 mov (bad) (bad) incl pop stos into cs insl out mov mov pop ja mov incl jg int3 cmp fldt ror loop ljmp mov cmpsb das test jmp out ljmp push sbb and xor nop lock jg dec fs lret adc mov and imul sub lret mov cltd out push xor fdiv jg or mov imul mov jb leave add or out sub movsb int3 and add in xchg (bad) stos rolb (bad) cmp fwait push sub jne pop add mov sbb or pop pop mulb add das js jg stos dec sarb pop pop pusha or ret outsl cwtl and cmp movsb add push call or in aaa or sbbl jmp xchg add dec cld jmp add xchg incl pop mov add sbb mov cmc scas mov fldl push int3 outsb mov ret aam push sbb rclb jns xorl (bad) (bad) incl jmp sub jl add jge inc add and lods adcb mov mov cmpsb cmpl inc add ljmp outsb rcrl subb jecxz lods aas aam fidivr or popf enter or subb or sub push fs call push aam fadds inc fs push adc insb or mov push mov call xchg mov in cmp inc dec xchg jg rcr pop add mov das rclb add insb sti fdivrl ja mov inc mov insl push push (bad) ljmp pusha ss fiaddl inc cmp sahf (bad) cmp mov jno repnz sarl dec xor sbb jge pushf inc es push adc jle jecxz decb xchg scas xchg add stos (bad) cli adc test cld fiaddl adc loopne push mov or in cld nop arpl xor inc lret xchg sbb call push lods dec in sbb fbld in inc cmp sbbl jbe lods pop pushf inc and fldl rcl je sbb mov adc sbb ljmp pop inc testb jo pop andl or test mov popf (bad) fwait jb pop (bad) xor orl arpl mov mov adc pop push insb xchg frstor adc out xchg inc pop popa pop pop (bad) mov or out lret (bad) push adc mov fnsave jbe mov xchg cmp pop lea mov lock pop or sti inc jge out dec cmp xor push or mov mov lock xor daa (bad) or popf jb insb inc data16 jg or pop xchg xchg ret push repnz aam popa loopne mov popf mov stos push push add insl lcall pop out cli mov inc enter cmp int ja add push or aam add cmp loopne in daa and pop push test jbe int (bad) jg and stos or push cltd pushf pushf roll inc fwait and (bad) (bad) (bad) insl es dec cld dec push push mov movsb call mov dec mov mov stos test call xlat insb addb in das out dec mov lock xor mov iret popa add push push cltd sbbb pop (bad) idiv jg arpl data16 loopne add cltd xor std movsb pop pop rcl mov mov sbb cmc aad mov pop cmp pop push stc dec (bad) js dec push pusha cs ljmp repnz or add (bad) ljmp imul add test aad jno (bad) and sahf loopne and xchg clc inc es inc push dec xlat jp rorb call sbbl inc pop cmp jmp mov andb fs jo adc pop and sub call jmp (bad) psrlw or dec rcrb faddl gs push sbb iret and sar in inc clc jg mov jecxz mov (bad) (bad) (bad) mov sahf inc mov pop lahf mov xor (bad) sbb arpl push stos (bad) cmpsb shrb or jmp xor mov inc ret add scas xchg das es popf mov dec cmc xor or outsb (bad) hlt jno mov sahf test in test jo pushl mov not sbbl or pushf cltd mov inc push (bad) lock decl daa pop and pop mov imul mov test and addr16 or dec sti repnz pusha jbe jae sub in clc cmp adc xchg sub mov mov (bad) lds hlt and mov xchg aam jl jge xorb push jbe cli insl and ljmp jb sbb mov imul add sbb inc dec repz xchg cmp sbb dec rol movsb push lcall loopne push mov mov pop (bad) pushl or or jnp std inc mov ss mov stc andb std cmp mov add mov js pop pop mov lret shlb jb or call lcall xchg (bad) jge imul enter bound subl xchg (bad) jae xchg (bad) jg enter or ret push loope jecxz cmc pop arpl (bad) mov sbb sbb movsb pop fucomip jb mov jo pop cmpl jae push subb inc or les lea mov (bad) (bad) jnp popa es sub adc mov fwait push pop in repnz jl test fs lcall mov std frstor (bad) add call (bad) (bad) (bad) incl mov ficompl mov out mov (bad) add sbb aas add lcall mov (bad) aam dec pushl clc inc sub mov fcoml or sub inc lcall sbb rclb jle add push mov movsl push push unpcklps push mov mov xchg adc push mov dec add cmc lcall cmp test mov inc cli (bad) incl mov pop jl jl ds rcr sbb cmp jmp loop fmull mov jg and jns cmp or (bad) fcomip lahf int3 fsubr mov add xchg lods adc (bad) inc xor or push xchg pop divb mov nop jg hlt das mov and loopne lods je pop mov inc ja jg test push (bad) mov (bad) xchg test push ss (bad) stos cmp sub pop pop inc jnp mov call or movsb xchg in divb cli outsb (bad) mov clc ja pop leave and or data16 test movsb in loop jbe cmp push pop fdivrs dec or mov roll adc (bad) mov fwait jle inc mov pop push lcall aas sarb mov and xchg xorl clc test sar incl insb nop dec adc xchg arpl push jmp lods outsb fs sbb das pop sbb add bswap roll mov aas jmp orl std test in and xor mov (bad) mov outsl insb xchg std jno (bad) popf sbb rolb nop lock xor cmp sbb movsb iret loop cmp mov ret (bad) incl and sti dec cmp pushf mov aas or jle sbb add clc incl (bad) mov sub (bad) in clc cmpsb fdivrs loopne icebp push sbb push jp add cld xchg pushf push insl les shrl cmp dec xor (bad) rcl and pop dec jecxz addl cmc in es jno mov pushf sbb dec notl jle test sub adc fdivs inc shlb out dec lds or inc jle adc pop xor (bad) and sub int xchg leave mov pushf pop push loopne cltd cwtl fs in out test addr16 xchg xchg xchg (bad) (bad) jg adc jp outsb adc push inc add rcrl mov pop push inc pcmpgtw dec lods sub js es add xchg jl push xchg mov push ret outsb or faddl or xor jo jns cld outsl xchg or and in scas add push mov adc jns (bad) or xchg loop bound inc jmp xor mov leave mov lods test clc push adc cwtl popf es or ljmp movsb push cld mov sub loopne popf addb pop pop sub arpl (bad) out adc mov xor cs and cmp clc mov add iret mov nop hlt mov subl sahf xor xor mov adc fisubrl ljmp fbstp popf pop mov imul xlat dec push (bad) mov jmp or mov clc fwait inc pusha orl scas push sbbl jg xchg ss psllw add in xor outsb jg hlt lcall xor aad mov (bad) cmp xchg lret aaa cwtl (bad) adc test inc stos or das int3 mov adc fs pop dec ficompl pop nop mov rcl lock mov sub das mov fdivl add mov sbb dec inc mov push mov idivb fcoml push cld xor cs adc and cltd (bad) fildl loop xor jmp mov (bad) decl arpl ret or cmp je insb and int3 popa xchg clc add push pop (bad) btr sbb insl add decl and cmpsl nop push xor adc icebp out test in xchg add sbb enter pop enter or inc add test adc ljmp sbb and (bad) ljmp loope rclb or mov mov fs popf movsb (bad) jecxz in mov jp testl (bad) adc or inc test cmp popa loope adc inc test push add fistp cwtl and sbb or jecxz mov adc pop fs dec adc lcall dec cmp jmp (bad) jne mov mov pop xor decb jg pop xchg bound sarb not add daa adc rol call and mov arpl dec mov loopne (bad) pop mov push dec or or inc stos mov sbb test sub clc pop inc dec cmp in push cmpsl mov call cmp sub xor and (bad) dec add push cmp pop pop scas call dec inc loope (bad) or xchg inc or xchg jmp jns inc clc inc fmull jg jo iret xlat adc push fdivs fcmove imull xchg (bad) stos les fisttp xor sbb xor jl xor xchg js xchg jne cld decl sbb shlb adc rorb popa add jg faddp mov popa cmpsl or cmp dec and or movsl (bad) (bad) mov sahf xchg xchg (bad) ret add push mov jge xor clc jg dec lcall sbbb cld test loope sbb out lcall mov xchg aaa paddb stos dec pop dec loopne decl sbbb push pop pop inc mov adc cld pop cmp push adc cld mov lods es jg or adc (bad) adc rcrb add ret in mov adc cli subb mov sbb pusha push dec lret ja rcll cmp loopne xchg in (bad) push aad jnp dec test mov xchg ret cmp cmp jecxz inc sbb cltd (bad) mov push add adc sbb (bad) (bad) lcall lods dec add fdivs lock into clc call es lcall fadd jb cpuid or sbb add imul cs mov inc gs cli test outsb inc mulb (bad) fbld mov int3 dec xchg int aad xchg or or outsl adc (bad) cmp fs mov sbb push push (bad) arpl xor test ljmp movsb out add and xor icebp inc jecxz add pop (bad) bound xchg pop (bad) mov sbb repnz fldcw or ds inc sar into and call cs bound mov in outsl imul aaa cld (bad) fistpll movsl sbb pop divb lods push mov cmpsl push mov adc and push push roll clc (bad) mov mov pop and out aad cmp jecxz sbb jne (bad) (bad) lcall cmp or iret lock out pop jo sti rorb popl mov in sub (bad) bound clc add aas js in in jecxz int cmp outsb push movsb loop add cmpl pop dec repnz add sub stos and adc push push cmc insb (bad) (bad) (bad) incl lcall faddl dec xor out jo add mov aaa pop orl inc add fdivr loopne in ljmp sbb sbb mov sti pop loope (bad) pushl js and je or push test or push fdiv lea mov or cmp in das mov mov (bad) lock in (bad) xchg or xlat movsl orb insl icebp pop lock mov inc pusha pop outsb jb outsb pusha cmpsb loopne clc mov rcrb and pop lock (bad) fnsave jmp outsl dec xchg (bad) daa cli sbb add into je xlat push ret mov mov and shll cmp repz ret jnp and dec add xchg sbb mov add aam ror and std mov lds (bad) fcomip popf inc sahf ret xorl inc mov (bad) jg decl fdiv loop xor test pop (bad) out or add (bad) lcall nop dec mov mov test std push sar (bad) fisttp mov les push jo dec icebp cmp rorb xchg (bad) cmpsb incl hlt adc and test loop clc (bad) sub fidivr xchg jbe push sub adc mov xchg (bad) (bad) (bad) enter adc bound mov adcb inc push and lahf mov pusha stos mov in adc outsb or dec sar fistp ss add cli xchg or pop mov push adc xchg pusha cli test sti cmp sub xor (bad) (bad) fist xchg cli (bad) (bad) lea cwtl call adc test test les mov subl outsb lea mov lods cmp fdivl sahf mov mov pop inc shrb cmpsl add mov daa addr16 (bad) data16 adc ja loop or std test sbb ret ljmp int3 sbb add mov out dec mov sub aaa dec xor sbb mov sub sahf pop pushf adc ljmp ss inc and pop or fidivrl cmpsb shrb ret dec sub es incl xor inc in dec inc iret adc and mov (bad) (bad) ljmp and lods faddp add mov test hlt or cmpsl or push pop push push (bad) xor icebp mov ss sub mov mov cmp mov adcl inc mov int3 (bad) mov mov out pop roll inc fadds out adc lods aas jecxz int3 dec push adc xchg mov jae sahf sar out popf pop inc lds pop inc sub movsl mov push add xchg (bad) clc cmpb ja out mov xor fdivr (bad) (bad) mov stos mov mov add lret pushf sbb (bad) divl or mov sbb stos pop decl add test mov test inc mov dec jge cmp insb dec mov mov dec test pop ret xchg fimul and jle jle lahf jecxz or (bad) push mov jmp sbb rol adc je xchg jecxz (bad) (bad) repnz inc or imul rcr adc push sbb stos daa dec mov call mov mov andb fildll mov inc rcrl inc movb mov pop (bad) aas mov movsl (bad) incl sarb mov push ret sub sub or aad insb les jae outsb pop cmp mov arpl or mov and or hlt das hlt rcrb lret dec lock and jae mov cmp dec cmp pop js es cmp addr16 (bad) popf rcrb xor mov mov mov dec mov dec xor and pop inc andl (bad) lcall lcall and icebp mov and pop ret mov popf mov in test dec enter cli loop sbb gs es int in mov sub cmp addl int3 data16 lock les xchg pop aaa mov stos xchg je cld decl pop xchg push mov fcomi mov pop mov std (bad) (bad) mov out cwtl cmp aaa xchg mov adc inc ret cmp jecxz jns (bad) adc sbb incl add add mov lock inc movsb in sub enter inc (bad) cmp push mov insb inc push mov ret push cltd xchg clc cltd xchg (bad) (bad) mov or jnp je imul mov arpl inc xchg dec inc (bad) push lock mov (bad) nop out inc inc (bad) cmp mov pushl dec xchg insb imul sbb mov mov std (bad) ficompl xchg inc cmp (bad) lcall mov enter or ret les mov mov js das (bad) (bad) or dec (bad) out inc es jp ja pop inc or mov jmp test and mov adc or and rcl add push (bad) push adc les xor xor sbb icebp mov push daa jbe adc cli sub loop pop dec fild fiaddl fisttp pop cli pop icebp and xchg xchg add sbb test (bad) mov arpl xchg or ret lock fstps bound sub gs decb dec js xorl mov xor jle push das xor inc loope fbld icebp sbb add cmp jg loop test ds push dec push loopne jbe (bad) xchg (bad) add (bad) ljmp int mov fucomip dec (bad) push sti nop dec dec roll pop sub inc jg mov or (bad) jg push add push aam fisubr in stos mov cmpsb addr16 (bad) (bad) call rcrl lock mov fldcw add ror incl cmp cltd popf pop pusha dec mov push in xchg mov jl sahf movsl ljmp arpl push sti inc rcr inc out shrb std cs or jg fwait inc test clc test sbb xor lock mov rolb fadd and pop imul sbb pop lds cwtl xor adc or scas pop (bad) idivb lods enter loopne outsb or mov adc push add pop push mov cwtl inc int adc (bad) (bad) mov xorl xor nop add mov lods inc lea insl mov (bad) fcomip incl movsb lock js btc (bad) xor xor (bad) inc scas and into rcrl cld outsl in sbbl sbb push mov dec pushf mov xlat pop pusha loopne jmp in and dec add rorb (bad) mov stos cs add add pop imul adc (bad) fisttp (bad) movsb loop cwtl push test popa aam inc inc push flds sbb pushl ljmp xor push push shr jno divb jbe or jmp test adc (bad) fbstp mov nop les push int3 ret sub cmp cld ja sbb mov mov fcomip pop adc push dec adc cmp inc jns inc push add outsb sbb test push out push jae xchg call lds sbb (bad) (bad) out mov fcom xorb fldenv jns add test loop sbb sbb imul cmp add icebp outsl xchg lock outsl inc fcmovnbe lret mov mov idivl (bad) hlt pop int3 scas add fisttp adc jp mov in add mov mov cli or sbb jbe mov js add addr16 push dec or out mov cmp mov ljmp ljmp cli push inc std (bad) incl popa jg js or imul dec fadds (bad) mov xchg out pop idivl es das mov in xchg and lcall push fiadd mov push lock mov xor mov add cwtl iret and dec lock jo sbb cmpsl jns push cmp lods pop add fild and or sbb push mov decb mov outsl or push add jno inc mov inc and lcall cmp cmp popl adc (bad) fwait (bad) scas or and cmp fwait pop cmp (bad) call and imul push test lock int3 call popa jecxz sahf stc sub inc test mov in (bad) ss clc pushl mov cmc xor xchg bound mov popa (bad) jo mov jg sbb cmp sbb push cs outsb leave insl cld call dec pushf out xchg cltd es popa sbb jae push popa cltd aad (bad) jmp loopne xchg jmp xchg stos cmp sbb out in dec sbb ret inc sbbb movsb lock mov in push mov popf xchg mov sub mov (bad) ljmp jg add out data16 bound sbb lock mov mov inc pop lods xlat pop in push (bad) jg or add push mov and fist and inc std xchg inc mov (bad) (bad) cmp out inc cmpsl and fldl or jnp mov mov mov xor mov push adc or test rcrl dec (bad) ss xchg jb out cmp cld les push imul mov push mov out cmp subb jne cmp out (bad) std push std das clc jmp faddp push ja dec mov mov jg adc lds movsb and sbb or std (bad) (bad) (bad) fist dec mov xor pop popf cmc fwait stos inc adc pop aad shrb outsb inc insb leave pop xchg call lods dec mov ljmp shrb sti out (bad) pop cmp or (bad) mov xchg rcll lds ret cmpsl aaa cmp cld jae sub pop xor out jg or cld (bad) jg adc sub jmp int3 jne dec insl and loop rcrb jl add or rol ljmp add pop mov mov popl (bad) jecxz insb xor and (bad) jmp add shl enter es (bad) (bad) (bad) mov pop sbb and insl sbb cmp mov jmp (bad) fst jecxz sbbl pusha insl or push arpl stos pusha push insb out imul (bad) fcomip std and aam xlat mov mov mov loope mov push daa and sbb ljmp sub into or (bad) call in dec adc pop add push push fsubr and and inc outsl std and outsb (bad) sub cmpl pop mov mov adc xor and push and (bad) (bad) ljmp push mov imul mov ret mov cmp ss dec push xchg pop insb loope rorb xor cld push mov popa jns sub (bad) xor movsb mov add pushl rorb mov mov stc fwait sub or and jle xchg xchg dec adc jg mov mov jo incl or std or out push std aad xchg popf test imul lcall pop xor inc push add jae in (bad) xchg js and jg mov mov (bad) jmp sub adc jg test je subl adc mov mov dec mov jmp mov ss mov movsb jg movsl add dec pop rcrb xchg (bad) ljmp mov out das loope ljmp incl add ja and adc mov pop (bad) xor stos inc rorb xchg sbb pop insl mov std push sub pop lahf cld daa add jb das cld (bad) (bad) ljmp sub sarb push xor loop push hlt add pop cmp loop dec pop jle inc jle mov lea mulb dec sahf and add in pop (bad) cmp and ja or mov and cmpsb loopne out cmpsb (bad) lcall jno pop mov int std fnstcw gs (bad) sti shrb mov (bad) adc subl add pop js cwtl adcl notb outsb cmp hlt psubb adcl sbb daa jns push adc (bad) jg cmpsb popf add in adc outsb and push lods aad outsl sti (bad) out push cltd js fdivl ljmp xlat add lds enter push and pop xor ljmp cmp test sub xchg icebp inc ljmp cmp js inc je sbb cwtl mov ja cmpsb nop jae outsb sbb incb or hlt push cltd lock mov (bad) jg fdivs nop jnp das mov std ret push ja push hlt add (bad) outsb adc mulb pop pop jae pop inc mov in ret outsb jbe lea (bad) stos fcmovne mov add mov push inc out (bad) js sbb push xor out mov jl push inc stos popa add pushl mov call inc mov or and int3 out bound idiv (bad) incl mov jp mov mull call inc fiaddl mov jecxz enter sub out clc incl dec mov out inc cmp lahf mov aaa add mov add lock sarb ljmp arpl xchg xchg into or sub imulb (bad) jmp sbb std dec add or ss popf outsl (bad) pop mov pop push mov dec pop inc cld (bad) (bad) jg mov popf ljmp (bad) mov in sbb bound (bad) xor popa sti adc pop mov arpl mov bound fwait add (bad) out xor subb movb mov push incb das int stos sahf push dec lock addr16 xorb cli (bad) call mov adc push push test fwait aaa mov les nop arpl lock mov (bad) mov xchg adc rcrb int3 lcall pop or (bad) add ljmp inc fldl (bad) xchg popa dec mov lods int3 insl out (bad) jg ficom xchg or lcall shrl cltd mov lock add sbb jmp add sahf dec sbb or outsb sbb repz fcom clc jb ret mov adc jmp dec pop xor cmp je dec and and xchg repz ret lods push xor jp leave pop aaa sub (bad) fistpll add dec in mov pop add push sub mov in add jle sbb aam icebp outsb mov and mov ds sbb xchg adc in jp hlt mov mov inc imul sbb and pop ljmp sub jnp or js xor cmpsb (bad) jmp jmp cwtl jne pop push mov dec or and inc cmp add inc add shrl jnp je push mov push xchg or jae sub xorl add fsubl sub push ret decl insl shlb and ret xchg mov jb (bad) cmp std push inc push xor sbb aaa mov (bad) jmp dec clc xchg sub insb add adc (bad) lock adc pop dec pop out or or or repz sub mov out add ret fcomip mull push push ja add jecxz pop icebp lcall outsb sbb add fwait ss test decl pop in inc pop adc jge in sub (bad) or mov (bad) (bad) dec call or cmpsl fldl (bad) mov adc pop xor les cltd sub add cld cmp dec or ret push lcall sarb inc and pop mov mov fbld push xor add test mov xor lock pushf adc aas ds inc or sti test ljmp xchg stos cwtl and cmp out fcmovnu add xor ljmp rcll or mov cs jg (bad) xor mov push nop outsl jl data16 xor inc mov lcall repnz fs decl push and xorl and decl lea push jmp ja jg add in mov or sub out cmp or mov stos cmp lds jo fiaddl (bad) mov xchg push pop jnp mov dec cmp sub sarb les push pop dec add rclb jmp add dec sti outsb sub xchg mov pop cld std fadds mov inc add jnp inc int movsb dec jnp,pn sbb adc xor push sahf pop popa lret and loop add add xor or hlt in fist mov fldt adc test bound and mov jne (bad) jmp xor jge decl ljmp jns xchg or or orb inc ret adc mov jg pop sbb mov (bad) dec les push test xlat xorl dec add scas mov call jmp cmc (bad) fistpll sbb xchg or or leave ss or pop (bad) call mov sahf jmp mov lcall and pop popa loopne and popf mov into sbb (bad) mov jbe xlat pop ss cmp call push adc mov and xchg lds pop push in mov and and cmpsb mov out jl lret (bad) lea cld cmpsl cli lcall js pop inc mov cmpl lods and inc sub test sbb push (bad) pusha sbb sbb dec aam (bad) jg lret sbb xor fcoml sti rolb jg ja lods xor pop rclb daa movsb jecxz mov (bad) mov push insl xchg test jmp sbb and cltd inc cwtl rcll (bad) repnz (bad) (bad) jg cmp (bad) mov repz mov inc mov cmp adc pop mov (bad) lcall and imul dec addr16 push in pop add pop mov fwait mov (bad) xchg out mov pop sahf icebp fsubl jbe (bad) (bad) (bad) fldt and or in cltd cs fcom push sti lahf inc push in mov bound hlt lret push push int3 sub jnp (bad) decl pop dec dec add adc mov add mov push jns xchg ret rcl jmp stos dec xlat pop bound mov outsl movsb jbe es hlt (bad) mov sbb cwtl rol in or or iret test mov mov in out add dec out aam add and gs insl cli aam push pop add cmp and jbe (bad) (bad) call rolb loopne jecxz pop cld rolb jle int3 or fmuls dec insb inc xchg adc repnz lcall xchg jp inc xor mov pop add push sbb mov push mov mov insb ljmp and mov mov jbe xchg xchg pusha push lea xchg xchg add mov pop add jmp jl add ja clc cmpsb push adc mov lods imull call add mulb xorb adc imul sub and (bad) imul push xor sub (bad) lcall js lcall pop mov sbb and inc sbb pop je out repz es push pop into inc (bad) xchg push and int3 fdivp (bad) call cmp inc xchg push in fistp int3 jns mov pushl popa insb repnz fcmovnbe or aam add test inc fldcw inc jo into xor imul (bad) and sahf in cs mov test (bad) (bad) push push (bad) push lret jbe mov pusha stos loop pop add add (bad) push add jg adc jae push xchg roll inc loope cli dec sti add mov hlt sub fdivr (bad) lcall (bad) rorl mov cmpsl imul loop leave add add stc jae add and push pop xor sbb jne and (bad) fwait test in mov mov mov ret push rolb vxorps push inc push mov testb sbb divb (bad) jmp (bad) add add negl lcall pushf add pop repnz out cli outsl shlb add xchg sbb orl loop or insl sub aaa pop jmp aam (bad) mov fcomps stc inc data16 icebp pop jbe push fisub mov lret cmpsl adc fidivl clc scas sbb cmpb add add sbb (bad) mov (bad) outsb cmpsl mov push int sub movsb xor das or mov std mov inc push jae fist add and pop or ret pop xor xchg shl mov call add xchg xchg cmpsl test jb es xchg in or cwtl add or or shrb out dec push mov loop (bad) jae iret das sub mov call sbb jecxz scas push aam mov add pop add inc adc cmp (bad) (bad) mov xor adc clc add cmp ds dec adc out mov push pcmpgtd loope lahf ljmp mov outsb jns (bad) xchg sbb or ljmp int inc and xchg mov enter fsubrs or scas xor nop push sub add (bad) ja fsubrl pop popa add xchg lods mov adc jg pop pusha xchg das sahf into hlt or or xchg (bad) cld jne mov in sbb enter push mov je sub xchg (bad) cmc add mov ljmp loop stos shll dec sub loopne testb stc movsb and mov inc jbe (bad) ljmp mov in test iret inc push repz call inc scas pop sub call repz movsb (bad) (bad) fucomip pop mov loopne pop shl xrelease xchg dec dec mov mov fiaddl pop ret (bad) mov jg cmp pop mov pop (bad) (bad) mov js push sbb pop insb leave inc mov ss sti (bad) dec movsb sahf mov mov mov or test sbb sbb cmpsl mov add pusha xchg (bad) inc inc out movsb jb bsf ljmp (bad) neg add and fldl (bad) enter sar xor mov sbb adc rcrl xchg xchg add adc pop roll pop xor pop lock xor hlt or sbb push inc loop testb add mov out int3 add adc inc add clc (bad) dec outsb xor test cmp or (bad) or ret out cmpsb call mov xchg inc ficoml or or ljmp push ljmp cmpsl out fwait xchg sub addr16 stc adc jecxz add add rol iret jl or xor aam subl je xchg sbb mov jne sahf xchg cmp pop push dec mov jg mov sbb ds test mov daa sub xlat pushl sbb jp xchg data16 xchg or (bad) pushl push jnp (bad) jae mov inc mov mov movsb ss push or and lds ss mov (bad) enter divl loope mov ljmp (bad) xor repnz sub mov xlat imul mov popa div or cld xchg fucom sbb loopne test fnsave fbstp js add cwtl fs aam (bad) incl push and pop pop adc icebp mov or jns or sbb mov lock mov mov rol loopne push sbb call mov xor mov cmp xchg or inc dec lds bound cld (bad) jg adc or push cmc fs punpcklqdq push mov nop daa (bad) ljmp and mov pop jnp inc stos mov ss movsb faddl movsb subb shrb rolb lcall mov sbb adc or (bad) jmp mov xor pop test dec add add and ss adcb cli lock cld test out mov or adcl fs xorl (bad) rcrl loop lock dec or (bad) cmp ljmp dec insl imul xchg mov xor push mov (bad) push fcoms fwait cld shrb dec jnp sub jg sbb add nop xor push push jg lods pop jo movsb inc ret in shrb (bad) add add aam sub and inc and cmpsl sub (bad) mov push loopne subb lods lods inc mov cli (bad) (bad) (bad) sti pushf cmp xor cmp mov fdivl cmpsl imul mov outsl xor cmpsl ret adc mov (bad) pop push movsb dec push subb pop jge rorb popf mov stos pop imul sbb push push pop call ljmp xchg negl gs jg movsb xchg fwait outsl (bad) call or mov insb pop inc jle add andl adc add sbb cwtl fisubr sub clc cs sub lods loopne sbb cmpsl dec xchg shlb inc lret insl pop inc mov inc dec je and sarb mov push je adc push roll aad pop in add stos jge add xchg jg (bad) (bad) lcall adc lcall push stos std cwtl add lret sbb mov mov mov dec sar nop sbb or repnz add cmp xor cmp (bad) incl leave iret addr16 sbbl cmc popf nop sbb (bad) faddl sub les into hlt out rcrb cmc add dec ret sar fwait cmpsb and cmp mov (bad) and cmp test (bad) mov (bad) (bad) (bad) jg jg lahf adc stos sbb (bad) add lcall sub (bad) (bad) (bad) cmp sbbb add mov add mov leave xchg cmp daa movsb mov inc mov mov adc inc popf sbb adc push and mov push mov cmp push cmp repnz (bad) (bad) (bad) jmp xor adc roll push call cmpsl adc adc (bad) (bad) call jne lcall add push or pop jmp out and xor and add lods pushl jg rcrb ret (bad) fnop xchg into jno or sub into js sar jno (bad) lcall rcl movsb pop mov xchg mov sub inc xchg mov mov es nop out mov les icebp out cmp mov stc xor hlt rol mov or (bad) (bad) mov ror push dec push mov xchg test ret mov aas scas (bad) (bad) mov sbb add add aam movsl and inc inc stos cmp cmp mov loopne add mov ds ffree int (bad) shr movsb bound xor sub push add decl lock (bad) mov stos jg (bad) das bound cmp movsb push sarl mov mov (bad) je test lods inc outsl ds jecxz jne mov mov mov cmp fidivl adc pop hlt dec add inc sub add xor (bad) mov nop rolb fucom add pop rcl xor int3 cmp mov xor inc add movsb adc mov inc dec loopne sbb mov rcrb mov (bad) (bad) mov jo into jg push pop xor mov mov inc js inc xchg push addr16 ds push inc pop add idivb cli call lds popf mov mov and xor das clc mov push shlb cli leave add pop or jmp dec dec mov sbb jae cmp lods sub and ljmp loope xor or dec gs arpl (bad) insb xchg sbb int3 (bad) (bad) (bad) aas clc fwait jg pusha xchg sbb iret and jmp sbb mov dec call repnz xorb std dec and mov rcr push mov loop push cltd sarb sbb fbld push les add push dec lcall cmc jo iret xchg loopne add (bad) call pop inc sbb add push and bound cmp or enter xlat sub iret leave gs clc xchg or jp mov lock fistp in nop jmp push jp pop and ret int sub lea decb and es (bad) mov popa stos fistpll xchg movsl mov add aad insb js mov mulb out jb fbstp (bad) push sub imul fcomps scas xchg mov (bad) jg test sbb pushf cmpsl cwtl or add adc push mov std fs shlb fidivrl cmpsb sub or pop xor mov or addl cli (bad) pushl je cmpsl or lahf (bad) pop pop out mov aas js pop jb aaa loopne adc jl mov lods pop adc mov call jno aad adc add pusha sar and into sbb and inc enter jo push dec ret inc (bad) sub jmp sbb shrb icebp xor cmp pop cld or sbb or (bad) out es out push inc clc adc cmpsb dec push or jmp mov sahf push sbb push or pushl out lret (bad) or jmp xlat cmp pop and sbb inc mov ljmp and repnz cmp es ja push cmp mov push mov push cmp ja xchg or (bad) decl ret sbb and ficomp add mov mov or andl (bad) xor les imul into call dec call insb (bad) lea mov ljmp xor mov or incl xor stos add outsb orl push (bad) or cmpl xor imull loope sar pop xor enter mov xchg adc or dec jl mov popf xchg push jmp enter daa jp ss inc rcl sarl jmp push push pusha xor mov mov sub faddl cld sarl jmp movsl xor mov ret mov sub or (bad) pop adc lock ds adcb (bad) loopne mov decl dec test in (bad) dec int clc in pop imul sbb mov dec fsubs and into (bad) decl ret inc sbb dec sbb (bad) into sub mov jae stc adc shll or add rcrb and dec mov and negl add je scas insl sarb (bad) lcall outsb push pop sbb or mov push fiaddl call add fimul outsb jno ja ret dec rolb pusha (bad) push insb mov pop ret and push mov cmc xchg push jmp clc xchg out rolb xor out add sbb fisttpll push pushaw inc adc fdivs decl push pop cmp imull or in xchg in cmp nop addb (bad) (bad) mov mov shr cld (bad) jg or mov out push jbe xchg or outsl xchg aam rcl loope loopne cld fwait cmp cmp movsb outsl and pop xor fistl sub pop cwtl mov std (bad) incl ljmp imul mov dec and test (bad) jg shrb mov or mov inc aam cmova sub incl add xor aam lock add or clc cld dec sbb pop dec xchg fistl sti jle adc xchg (bad) decl sub cli nop xor ficom add call jg lock (bad) cmc loop sbb xor jne jecxz sar add adc adc fcoms push (bad) movsl (bad) or pop sub cmp mov add jg or (bad) mov dec xor sarl lods adc adcb or pop fs js (bad) mov in decb mov xor int cmp xchg cmc fistp cli add (bad) enter (bad) pushf (bad) out xor xor test lock and sbb inc jno clc (bad) mov mov insb mov orb or dec xor bound dec ljmp inc jae int3 mov daa push add cmp (bad) jg dec std int push andl out outsl ja fsubs push and roll test cld ljmp or add test les inc pusha xchg cld fcoms call mov popa or jl add mov inc cld cmpsl or imul icebp fbstp arpl hlt frstor jo ljmp pop fidivrl or mov mov push pop ret rclb sub fcmovbe cmp (bad) jmp xor jo push cs adc out icebp or imul mov fcomip jmp add fnstsw stc nop out mov call pop or negb lods mov ja clc mov and mov fisttp or and shrb push es outsb scas adc incl mov push add fsub test repz sub push fcoms (bad) jg push mov xchg sbb cmpsb (bad) xor pushf enter ljmp sub scas outsl mov sti push sbb sbb pop dec inc loopne rol aaa fwait ret sub je lock decl pop and loope xlat not imul je inc hlt std pop cmp pop (bad) xchg mov sbb int adc popa push pop aas pop (bad) into adc xchg mov lret xor (bad) jg andl adc mov je add mov (bad) xor mov inc mov into and enter add pop mov jp xchg mov inc push xor hlt fwait mov jg xchg fdivs or lods xlat and push add push (bad) (bad) ljmp or cs jle mov jns jnp scas ret (bad) mov (bad) hlt push pop arpl enter dec pop xor (bad) lcall call push cmpsb insb inc pop outsl pop fisubr and pop test push into cld cmpsb cld nop aas dec jae (bad) (bad) pushl mov sbb out out sub mov fisttpll jo (bad) xor xor push movsb pop das jp and adc inc je rolb xor popa jne out loop outsb fist mov dec faddl (bad) lcall les xor add jecxz push cmc mov (bad) push (bad) ljmp dec dec sbb mov adc iret jb mov loopne (bad) out push mov mov cli or jg and xor in ds sub dec sbb scas ret push fildll cwtl mov into xor jg sbb outsl (bad) push orb dec (bad) inc push jecxz cli mov dec data16 mov mov sub add (bad) jb adc loopne repz movsl pop xor xor pushl addb sarl (bad) aam dec inc sarl mov xchg in out (bad) (bad) lcall (bad) sbb jbe or insl add int3 ret add mov movsb dec std (bad) sbb mov dec out mov push push clc push mov aad lock and mov pushf in (bad) mov out pop jns inc sub or mov pop ret and lock jecxz jae xor mov lcall mov adc (bad) dec sub ss rcl (bad) cmp inc push sbb cli mov std (bad) fild mov sbb cmp mov or xor push adc imul or addr16 daa sbbl cli jmp aam int3 (bad) mov mov or dec fstps mov loopne icebp jbe or ljmp jecxz mov imul lock dec xchg push addr16 adc loope jmp insl jbe xchg pop sbb clc (bad) incl (bad) lds rorb cmp jne je cwtl rcl push push lahf mov jb pushf leave jns jp pop cmp xor add mov rorl adc adc imul aam das mov cltd xor mov and pop cltd mov and xchg loopne pop aaa lret int lock (bad) pushl repnz arpl xlat adc (bad) mov push and mov inc gs loopne jns push pop ds aas mov js mov mov jg cmp and inc fcomps xor pusha loopne hlt sub xor pop pop lock (bad) lcall xor repz mov pop jl push lahf dec or pop or sub int3 inc loop dec jo pop adc inc cmovbe pop cld pop push mov push js sbb cmp xor push sbb (bad) pushl dec sbb sti and (bad) pop sub (bad) decl das jo or xchg pop addr16 fdivrl stos stos push pop mov push ret cli cmp sub sub ret mov jmp mov jno (bad) (bad) mov icebp ret movsl (bad) pop std mov inc inc dec mov inc adc or inc adc pop std call test mov mov (bad) sub dec (bad) and mov int3 xor or (bad) loopne data16 dec mov (bad) pusha sbb jnp lret and jo outsb stos push jmp or jg inc mov (bad) xorb aaa xor loop dec rorb xor (bad) (bad) jg adc cwtl push xor adc pop fild test inc jae outsb nop push add scas and in aad mov ljmp push insl ret adc movb aaa mov inc (bad) ljmp adc mov jnp sti les sti xor fs mov cli (bad) es mov mov pushf cmp pop popf dec loope xchg or aas out add inc cmc add push sbbl sub insb mov or mov (bad) int3 mov ljmp xchg jo lods sbb pop adc je and aam sbb or stos jne outsb jo scas jp or or mov pop add lcall push dec cmpsl movb loope cs data16 mov sub push xlat add jbe call (bad) push in cltd inc pop lahf pslld lods push iret mov lcall adc cmp mov pusha cs add push jmp movsb mov (bad) mov nop je mov add dec xor xor test sbb ret and aaa test jbe push addr16 push cmpl cld cmpsb mov xchg or cmp (bad) xchg mov ds lret incl cmc mov inc (bad) or xor and decl xchg movsb jmp inc dec sub call fisubl sarb or addl dec push clc inc rol fcmovnb jg mov sub nop dec fild lea and loopne jmp sbb sbb cmp insl fsubrl or dec cli es sbb subl push leave outsl add lock push mov jae enter js add popf xor sbb (bad) fild xor mov jle xchg mov ljmp jno push and xlat xor mov inc icebp pop push mov (bad) pushl push inc je xor inc imul popa and dec xchg aam mov cmp jnp stos (bad) aaa inc mov pop popf mov lret (bad) xor push mov and popf repnz adc fbstp add movsb or nop imul push push insb daa xchg add jnp inc scas and adc sahf mov hlt sbb (bad) out ja mov jnp mov sarb add popf rorb push mov and dec iret mov jnp stos popf push dec add aaa sub add and es ja dec cmp mov mov les mov xor xor jnp adc fildll loopne push mov inc add mov gs pushl ljmp ja or jb int flds (bad) clc test insb bound jp rol xor mov and hlt jae push mov add fwait shrb std sub pop inc (bad) cmc ljmp loop je mov gs sub outsb call mov clc xchg into push dec dec loop movsb inc and aam (bad) fisttpll aaa or jl and (bad) mov pop pop adc dec mov lret mov adc mov or (bad) in xchg add insl lock push imul ret jg (bad) pushl pop mov je push sub dec or push outsl jl sub mov movsb lock daa and (bad) ljmp in or inc cmc cmc je insl inc les out in fmull push cmp stos fwait cmc imul jmp stc ret popa jno sbbb ds mov test outsb pop xor cmpl pusha mov or xorb clc (bad) ljmp fldenv ss sbb aad out inc int3 mov ljmp sbb mov cmpsl and jg andl jmp inc dec cmp out add push lds adc ja ret dec je mov shll aam cmc jno movsb (bad) pushl (bad) lods xorb xor mov outsb cli (bad) push dec add dec xchg inc mov and xchg xchg cld add dec add (bad) decb push jg add clc popf es or fldl mov data16 xchg lock xor insb and out jno fild stos in jno dec fisubrl (bad) (bad) lock cs inc js out mov mov dec mov mov inc cmp mov sarb or std dec add (bad) mov add mov dec ds int3 fmull (bad) lock adc cli jne shr out add sub and inc jg add dec icebp dec dec pop dec (bad) dec (bad) jge loop adc and jo rcl adc jg lock (bad) pop push mov imul fcomip aas and (bad) decl mov (bad) cmp adc in and dec adc fildl incl int sbb and mov or pop ret aam lock mov pop movsb mov jno,pn aad sbb je out addr16 adc repnz test test pop mov mov gs mov sub sub (bad) frstor sbb (bad) decl mov out jbe out sbb and rcrb outsl movsb and xor mov xor out adc pusha arpl push cld pop sbbb std push lock xor jge jne mov rcll jns rolb int3 push adc outsl mov ds (bad) (bad) adc std xor ret (bad) jmp and mov leave clc dec adc (bad) ss shrb jge mov and (bad) decl jmp (bad) mov sbb ret aad addl enter decl push jnp ljmp add adc sbb sbb je xor not mov rcr xor adc imul cmpb sbb dec popf push notb or ret jl or out imul dec cmp int3 imul jo sbb mov sub movsb lcall rclb in cmp add mov and xlat adc mov icebp dec pop push mov cmp add cld sbb add aam sti adc (bad) insb ljmp mov jb movsl daa adc sbb mov cmpsl add or call fldl lock data16 jg in xor out les stos out and jge into enter subl adc rcr pop bnd add loope adc mov ds push popf and popf xor or dec in sar call lcall and mov inc stos pop xor aad xchg cmpsb and cmp push lds clc jge sti lea sarb ja push mov xchg xchg sub roll (bad) push jo sbb add pop mov loopne insl loop pushf or dec dec adc mov (bad) pushl mov cmp cmp add aaa fldenv (bad) jmp (bad) insl or imul adc insb cmp mov (bad) jg adc je cmpsb bound add lods jns pop push mov rorb enter fwait dec push outsl mov or pop add je arpl mov adc stos and cmp (bad) (bad) fistpll (bad) jbe (bad) (bad) cwtl and in loopne mov xchg push into jle pop add movsb xor mov pop cmpsb sub fstl jecxz add cmpsb dec test mov pop jg lods mov dec xor jbe test daa add ljmp sub lods pushf and nop les cltd or or jne outsb push cli lcall pop enter bound xchg xchg inc jmp add jno sbb xchg dec jne int3 jns pop inc pop (bad) fbld ret ds sarl mov jmp in jns sti mulb xchg cmp push stos scas jp add ds negb sub sbb (bad) xor jb test mov push xchg push call or int3 add pop ss int push mov les sub cld and aas inc ret mov rorb jg incl jl add popf mov sbb test cwtl sub dec popa xor hlt ja repz bound out add mov les addr16 mov push out mov fwait fs sbb enter cltd mov dec sbb inc cmpsb push test rorl lock jg adc es (bad) decl in push sub repnz insl test adc dec ja jae mov mov sbb ss (bad) (bad) pushl pop arpl test and int mov push mov adc mov sbb sub jb jmp cmpsl test out roll push cld das cli fcoml mov ds bound mov mov adc mov mov mov mov push test adc lock out ss mov or test adc (bad) aad arpl cld sbb aas dec jge inc push (bad) mov decl clc test shll or add pop mov shrl (bad) fnstenv mov loopne outsl cmc pusha inc repnz inc add add inc leave push fwait pop shrb jnp mov dec std push push inc cli fidivrl inc in mov ret fnstenv stos mov adc lock xor sbb pop data16 roll pop cmpsb dec pop clc pushl mov jl mov ret push clc add jmp test inc cmp jne outsl js (bad) ljmp and movsb aaa xor jmp outsb xor je addl scas adc push std ja adc repnz push inc aas adc jmp add test and std sub push out inc adc minps and mov cli enter fwait leave fmuls sub std sbb imul push add xor cmovs push lcall incl jbe in sahf hlt sbb adcl ds scas clc scas xchg into scas loopne push je mov call pop lock or fimul xchg ret clc nop xor push push xor xchg add inc (bad) out mov mov (bad) mull daa shlb test ljmp jl add ja jne dec decl loope adc (bad) mov das mov and int3 jno xchg xchg (bad) and jg and xor fwait sahf fildll push lcall fdiv xchg inc hlt sbb fistp add (bad) (bad) ljmp shr jo subb add iret ficomp ret adc loope call std incl repz push (bad) dec aaa stos ja enter dec mov mov mov test add or or jg jb loop pop js add test aam push sbb aas xchg cmp out cmpsl data16 jo gs cli pushf or mov cli int and popa les outsl je pop stos cmc mov bound sbb or xchg jp lods sbbl mov pop jbe out test xchg push push or call lods aad mov adc loop stos out mov ret loope pop out adc mov adc sbb lret dec or or mov dec or pop ja mov or add sub or fsubrl xchg pop (bad) sbb mov mov lahf mov mov les jp aad add or popf xchg ss add (bad) xchg in or or out mov cmp adc dec xor (bad) xor inc dec je xor sub jp xor (bad) daa xchg add imull push data16 (bad) mov pop loop add dec jmp rolb jmp jecxz popf mov or cmpsl adc sar pop insl loopne lcall mov pop ret push out add mov pop (bad) ljmp enter fwait lea or gs add pop test cmc sub call adc stos cs fisttpll fwait lods mov push icebp pop xchg inc add (bad) mov hlt xor pop insb add lock fsts mov add mov clc (bad) out cmp outsb dec (bad) hlt sbb mov and dec cmp test add mov adc (bad) rorb or rcrb loopne nop push adc dec push push push fld fcomip pop and adc and xchg pop add rcll inc cmpsl (bad) jns inc mov inc cmp pop push sti cmpsb jno cmpl sub outsb mull dec addr16 (bad) xor sbb mov call stos inc sub dec pushf jp ljmp sar subb les cmc xor scas stos (bad) lcall xchg cmp or sub sbb push jns sbb add push insl sbb xchg inc pop fsubs outsl jp jmp mov adc das adc (bad) add les data16 dec mov add addr16 jg test push jo adc push sub mov ret sar (bad) mov lds lahf mov ja fbld push mov fmuls rorl inc daa test call inc xchg or push sub shr inc decb mov fs adc iret sbb (bad) ljmp xor (bad) hlt sbb scas adc push cmp mov sub scas pushl jne xchg push sub loope inc sbb push in mov es sbb sub lcall mov (bad) jns insl add mov inc fs std pop mov mov or (bad) (bad) (bad) in dec sti xor ljmp lcall dec pop cli mov or lret add xchg add ja pop push inc lahf int3 jecxz jmp add into out adc (bad) jle repz add sub xchg xor push jae xchg lcall ljmp mov iret lods call add sbb into repz popa mov lea and xchg mov lret lcall mov orl lcall andl data16 mov dec and int scas fxch or shrb ja popa or mov lahf in mov pop stos mov (bad) jmp pop aad test or jge sub sbb into pop addr16 (bad) pushl inc adc mov mov jmp iret xchg rolb lods jge inc sbb sarb rol mov clc pop dec dec test mov push sbbb into ret mov sbb rolb mov adc imul fidivr nop cmp ja adc nop sbb cli ljmp pop inc add popa xchg sbb push push push mov or jmp mov sub xlat outsb sbb mov push dec pusha jbe cmpsb adc fisttp outsl mov cs shlb insb cs call iret pushf pusha adc cli test jp add mov out gs ljmp push loopne fs test dec fsubrs sbb fcomip call cltd out les mov faddl in push std sbb inc hlt call push inc cli dec call sbb lret and xor call mov jl fdivrl lods push or jecxz imul ja and xchg pop mov scas sub decl push div mov inc fs leave daa mov faddl adc (bad) pushl fucomi mov test xchg mov aaa mov loopne mov mov mov mov mov mov icebp popf xor add (bad) les pop mov das adc sub pusha mov popf inc int3 mov dec pop mov add mov lahf inc adc inc call mov (bad) stc and adc lock pusha loope jb cli shrb daa stos pusha out (bad) (bad) mov (bad) (bad) ret addb sbb (bad) jne lock std mov imul movsb inc cmp fs pop mov push movsl xchg bound clc das fcoml jecxz inc sbb scas xor inc xchg mov pop adc (bad) scas sub repnz pop pushf outsb jbe and inc (bad) pop lock add sbb int call test in mov mov fsubrs (bad) push mov or pop jns dec imul std fild dec push add incl int3 add adc push sub cmp decl jmp in scas sbb std dec lods loope shrl imul insb and jp add loopne cmp fdivrp inc add mov fstpt mov fwait adc pop aad jo mov pop cmp push cmp xor push daa daa pop push aas loope xchg (bad) xor add pop insb cld or dec mov enter jecxz loopne fidivrl xor inc or call std es push xor add lcall push mov sarl rorb ss test sbb bound jg and or pop ret and pop push adc notb pop or push test movb sbb inc mov mov clc jmp pop in inc aam mov lahf ljmp xlat imul sbb push cmc movsl movsb mov (bad) push or pushl insb xchg call loop fnstcw mov dec or xchg stc or lret out cmpsb test lret push cmpsb jno pop jbe mov std stos inc cmp pop inc in loop rcrl (bad) add out and test sbb sbb add repnz test jg ret in jae popa add push inc and dec push mov shrb stos jecxz and or xlat add imul mov mov shll mov inc arpl loopne mov xor (bad) cmp sbb mov ret cwtl cmp jle dec push int mov add add pop call fldl ljmp mov ret add jmp ljmp repnz add int pop lret ljmp jnp cmp ljmp push mov fisubr sbb sub into cmp push and (bad) jg popf cld in xor mov aaa sahf aam push in movsb in dec or push dec cld outsl xchg bound sti mov and frstor jbe insb scas add fild xor (bad) rcll je fmull cli dec inc lcall sysenter add pop (bad) loop int3 add pushl dec movsb (bad) insb in sbb sbb outsl xchg das and push mov js inc ljmp pop (bad) into push in or sub scas clc decl nop jb (bad) push xor mov mov mov jnp iret xor loope mov test mov ret xor roll add popa rorb jno outsl sub and std ja mov adc lret mov and add or sbbb adc inc mov mov pushf cmpsl mov cli popf inc lea lcall push mov jae aad mov xchg (bad) (bad) test ret test xchg imulb (bad) out push icebp lcall cmp test (bad) ss hlt lahf push movsl cmp loope out fucom jo aas and jg xor xchg inc popf pop fadd lcall lahf lret cmc call mov loopne mov cwtl lcall (bad) (bad) cmp sbb or or (bad) xor push xchg mov (bad) fist push sbb xor sbb xchg mov test cmpsl aam js mov dec cld and mov int lock xchg cmp or (bad) jmp sti and je inc jns adc sbb (bad) lcall pop cmp fcompl addl mov push add cmp sbb jg add enter or pop push addl mov loopne jb call push jl nop inc fimull mov outsb ss lret repz adc lcall push ss pop ljmp push es jmp sub or xchg movsb mov jg sar and adc mov push push sub loope ja add (bad) jbe (bad) or popa notl push and inc scas lcall insb aaa inc lea popf ljmp mov ret or pusha cmp or subl mov cmpsl push jns sbb lcall movsb test stc fadds insb fdivp mov push mov pop idivb add mov (bad) aam sbb push aas xchg dec sbb or dec stos jns cmp jle,pn (bad) jmp push scas mov lret xchg dec adc jecxz (bad) mov xchg (bad) cli (bad) push dec roll inc fisttpll jp mov adc insb pop cmp jp mov jp mov or (bad) (bad) mov inc xor and out out mov cmp xor mov adc xor into adc int enter or loop pop mov add or pop aas outsb cmp mov or fs add loopne inc pop add decl imul add mov mov sar call (bad) fisttpl imul scas pushf cmp mov push incb fcoms add cmp push cld (bad) push sbb cmpsb lock jge dec sbb and sub sti (bad) push mov mov xchg (bad) jbe dec mov jns scas hlt aam add dec repnz aad mov pop and std movsl (bad) (bad) jg add add js sbb ss int3 adc lods in xchg (bad) (bad) ljmp mov adc inc or ficomp and push mov cltd inc pop scas cmp jae lods and sbbb pop mov jbe push loop cld pop icebp ljmp daa aaa inc icebp or cmp ljmp sbb push xchg int js sub jge fwait jge ja cs add sbb sbbl cmpsb inc (bad) mov jmp pop ret outsb in push mov rorb movsb icebp push shl ljmp mov or mov add or lea incl dec fadds lods push sub pop insb (bad) pop lock add fbld into es xchg aam fcoms jo nop cmp add sbb inc in sub clc sahf lock ljmp jne cld inc add loop fiadd sub sbb mov cmpsb pop jo ss mull cmpsl movsb jg mov add rcrl cltd mov jle ss cli pop jg mov es pop push addr16 mov cli es arpl orl pop mov xchg add xor jbe mov or ret add inc xchg inc lods xor addl push and xor (bad) call cwtl (bad) jp std cltd repz es jns int3 jmp hlt mov fs sbb mov (bad) lcall push and cmpsb sub test imul gs sbb iret roll pop dec or push movsb jae dec xlat cmp stc inc decl cmc cs repz ret mov (bad) xchg adc repnz (bad) (bad) mov add pop xor push into sub sbb data16 mov scas test inc dec jo xchg (bad) incl push rorl mov adc ror jne iret lcall loope std and mov cmp out movsl push mov call adc loop iret leave xor mulb and insl sbb aad cwtl add int3 sbb inc (bad) jmp dec mov cs (bad) or mov addb (bad) jmp sbb push pop test sbb and mov insb adc push leave sti cmp iret arpl outsb cld pop or pushf ljmp gs cmp (bad) (bad) incl mov add sub imul pop pop push (bad) sti pushf mov cmp jo (bad) jbe mov fwait hlt adc insb xchg repnz adc push daa fdivs mov ja sar rclb loope xchg stos or cmp xlat cmpl fisttp data16 int3 inc (bad) pop lea lock ja ljmp int sbb xor jg fdivs or or pushl out inc adc cmpsl pushf jp mov mov add sub cld push les lcall out lea push xchg dec pop cmp rcrl or fs leave (bad) mov fcomp stos push (bad) cmc adc dec (bad) sbb xor popa and mov jecxz stos adc (bad) (bad) fcomip mov push cmpsb inc cmpb xor lahf mov sub popf test inc mov iret pop and inc adc push andl jecxz sub add or popw xchg mov ljmp cmp mov pop ja inc fiaddl cli mov mov sub mov add mov fisubl add popf xchg cmc sub sub fs cli (bad) mov je push test pop and (bad) sahf js jae mov jp and or sub movsl add push std (bad) ljmp mov (bad) lcall mov (bad) enter sbb incl xchg mov clc mov int mov inc out or mov int3 decl incb ret fistp cmc xorb shrb fcomps fdivp jno rcl (bad) pop (bad) xor inc mov cmp fwait ds inc sub fnsave mov mov leave out iret cli (bad) mov sbb dec pushf lcall mov gs int ja dec call loopne fdivs xchg cltd in cmp add push test ljmp jb call sub cmp add ret dec stos cmp mov loopne mov (bad) (bad) (bad) (bad) (bad) mov and adc les insb mov xchg add and (bad) (bad) fldl push add mov jbe aam push out (bad) hlt mov lock test js lcall pop addl inc mov mov jo push mov inc mov ds mov psubb outsb cmp sbb mov cs add gs sub (bad) call jnp imulb push pop inc inc xchg rorb sbb jg aaa push fsubr xchg mov push mov mov pop pop mov add adc pop shr sarb add mov (bad) scas mov mov call jg sbb pop sbb and push outsb test repnz and jg jl test mov push mov sarl test int3 or xor in lock int3 roll (bad) jg push xor (bad) mov fisttpl adc jno mov cmp jb jmp cmp mov outsb jo (bad) dec and int3 idiv push sub jg push aaa mov mov adc jns and imulb jae orl pop adc aaa loopne and xor pushf add test (bad) iret lock hlt sbb fbstp jg lock pop jp,pn dec push pop rol movsl test clc adc data16 cwtl mov inc dec add fnstenv jp pop mov sti and popf popa add pop mov stos lret jbe and test jno jecxz pop ret pop (bad) mov call clc pop fs aaa mov add pop or adcl rorl adc mov in inc mov cmp mov sti mov jle push add insl sub sub dec ret xchg mov pop sbb mov mov lods test xlat inc mov stos (bad) (bad) lcall loopne and and add clc mov mov into divl scas aam loop cmc (bad) decl popf fsub or mov and inc jmp fistpll jo out jne rcll (bad) push mov scas repnz inc mov mov call incl push dec cwtl mov fiadd push nop popf repz (bad) xor inc mov repnz popl xchg mov push mov mov lods cli lcall cmp insl stos or repnz mov (bad) call pop cmp jg inc xor into cmp cmc (bad) or mov pop xchg xchg nop sub rclb sti lcall (bad) (bad) jmp mov fld add aad or jl and aam pop sub xor adc aaa adc ret push adc (bad) call (bad) jb addl mov sbb cli pop test shr es mov push fld outsl add clc addr16 sbb mov out hlt add sub mov or sub cmpsl sbb dec adc popa add push add pop mov or adc ljmp sub cwtl xchg mov (bad) pop je (bad) ljmp ss (bad) push add mov dec test or jge adc add adc fs push (bad) mov outsb test inc icebp outsl xchg inc cmp dec stos outsl clc pushl add inc sub sbb jno add shlb jp or mov sahf add rclw (bad) jo push adc das mov sub jnp leave test sbbb fwait repnz cmp lcall popf lahf jle or (bad) (bad) mov clc std (bad) sub push inc sbbl jp push fdiv sub mov sbb movsl (bad) xor retw cli fild add add add outsl stos push ds in call ss or inc ljmp ljmp xor and nop aas inc ds (bad) mov add sbb cmpsb cmp cli ljmp fs adc loope ljmp cmp mov adc loop out and push insl lret stos push and xchg mov nop and mov fisttp sbb scas add inc out mov cmp add xor push pop stc jl cs fwait mov dec mov sub test out shlb loope (bad) push movl aas add and xor call inc jno cli sbb inc mov push sbb mov das xchg xorb test imul nop cli decl push push inc pop jae fwait pop je add sub or pop imul outsl mov inc fidiv mov adc mov imul je bound aaa cld (bad) jg mov xorb (bad) jmp rcrb mov xor mov aas (bad) leave (bad) jg add (bad) bound jo scas dec xchg dec call jb enter xor pop jb mov call mov out pop jbe add xchg add xor addr16 call mov cmp mov aad xor jmp out mov test jnp push push aaa js ret mov (bad) (bad) lcall imul cmp or outsl les push cs dec sbb iret (bad) (bad) mov sub adc imul rcr or mov jmp andb mov (bad) or jo into fdivs hlt adc or (bad) jg pop pop push ja out (bad) push int int push lahf xor add sub (bad) mov sti mov mov enter scas cmp pusha pushf jg cmp notl cmpsb push mov stc xor ljmp mov xorl xchg add or lcall je (bad) sbb dec pop jo xchg jo mov loope sahf xor ljmp and (bad) xchg xchg mov aas lret dec mov jne jmp jg sbb push jg mov daa cmp cmp jno ljmp xchg insl sbb das imul pop jmp add ljmp add incl pop sarb in lods (bad) (bad) decl bound and lods push cltd pop sub pop mov dec sub xor aam daa out hlt outsb cmpsb xor sbb sub mov test out daa mov ret rcr push xchg sbb mov int in mulb lcall or lahf push test pop jecxz scas outsb sbb mov or inc jns add pusha or call mov push shrb push xor cltd mov mov or (bad) jmp or hlt jne leave mov sahf jg hlt dec cli mov int jne jnp test fisttpl inc or adc in test jnp aam (bad) (bad) call push js lret (bad) or cmp push ret or enter rcrb pop outsb adc sbb lcall sahf cwtl sbb inc sbb push fwait (bad) xor sbb cmp adc ss push out call push mov addr16 aam cmpsb aas (bad) decl and xchg add dec movsl fnstenv sbb ficompl mov jno and jg incl push lea andl dec xchg ds int shll test mov push (bad) lret out es push les mov clc jp arpl jge jecxz (bad) decl mov jmp xor js xor mov add nop jg fild sub dec js xchg in sbb fildl dec push rcr test movb adc or aam cmp pop mov rorb cld pushf or fistp sub xchg xor cwtl cli (bad) jmp and jno jbe add mov mov aam mov (bad) cmp arpl roll mov push call outsb cli (bad) (bad) jg push roll mov push loop or cmc sub divb bound scas shlb (bad) jge imul (bad) (bad) jge mov cmp push mov hlt (bad) lcall pop arpl jnp les in popl mov xchg and pop xchg fstpl (bad) lcall jo mov jmp pop mov add ja clc add (bad) arpl xor cmpsb jbe cmp pushl std incl clc nop jae fcoml inc int in imul and pusha les add iret lock pcmpgtb xor push (bad) decl mov hlt gs int push fistl cmc add (bad) jecxz sub decl inc (bad) mov es inc inc cmc (bad) jae (bad) aaa sbb fs cmp pushf fild (bad) mov and aad stos xchg push xor (bad) sarb les jns push call (bad) jne outsl pop xor jmp sahf aam cmp (bad) pushl std test dec jo cmp and mov ds jo and ret cli sbb or pop out mov std das shrb inc sbb inc inc xchg clc (bad) mov inc or or sbb arpl std inc xor stos incb sti je jecxz mov aas shll dec jecxz scas adc add mov js mov testl call adcl aas jne and jg cmc cmp test test cld shlb cmc arpl inc add jg mov xor je xlat aaa sbb inc pop push add or cmp outsb mov scas push mov sbb sbb or sub aaa loop fcomip outsl or sub (bad) into push movsl mov cli mov fs imul add cs faddp inc push enter cli or rcrb lods sub fwait imul jns fs cmp jae dec stos lcall gs or (bad) mov xor jbe ret (bad) mov jg test orl sbb jle ljmp mov jmp loop icebp ret pusha ljmp pop nop dec dec ror dec repnz push add ljmp shlb incl scas popf lods in fdivrl xchg imul ja lcall push xor jae cld xor pop or mov incl push add cmp or sub mov arpl ja jle add jb adc aam shrb mov test push push push imul adc mov dec (bad) ljmp add inc pop jle insl pushf jg jp pop dec mov xor push fcompl jle xor int (bad) xor dec test insl ret inc adc push bound mov jl mov mov xchg push flds or wrmsr jle pop and roll popa cld adc icebp inc loopne adc flds (bad) (bad) mov and enter mov popf aaa std incl mov aam imul and insb dec cwtl or pop jo int3 jbe inc nop cmp leave inc xor cld pop sbb cmp xor xor sub mov and jp test dec dec xor pop insb add push pop test call (bad) sarb test ret sbb add and test ret sub rcll ret and pushf les jbe lock inc or imul sbb call ss and xchg inc (bad) mov push xchg mov inc dec pushf mov dec into xchg ror push mov or mov sbb fsubrp cmp loopne dec cmp ja rcrb packuswb mov or xchg pop mov imul dec cmp ljmp mov add (bad) aam loope push lock add (bad) ljmp pusha xchg pop jo lds push imul inc xchg dec roll xchg mov (bad) sbb in lret out test ret out mov mov xor jl outsl push mov sub mov rcr or mov mov mov in mov in dec arpl pop lcall pushw add sbb mov ljmp mov xlat popa cwtl xchg dec xchg unpcklps cld cmpsl decl pushl inc dec xchg dec pushf or adc push xor insl ret jg mov popf dec into call (bad) int3 dec pop cld jg popa fnsetpm(287 and mov cmp inc outsb pop jp ljmp add push nop cmc sbb addr16 xlat (bad) (bad) fimul cmpl add cwtl sub es mov xlat cmp (bad) (bad) (bad) fucomp add add notl sbb sbb push sbb rolb dec mov and and imul std in xchg mov mov mov aaa sub aaa cwtl insb push (bad) (bad) incl js xchg adc mov mov outsb loop add xchg adc clc (bad) jg sti rclb aam mov or repz push imul notl loope sub lock cmpsb in lret hlt aad dec xchg xor (bad) mov cmp and leave pop adc daa adc flds data16 jg push je jp cmp ljmp adc pop cwtl inc push fwait dec std or mov dec push or (bad) xchg cmp mov add subb outsb jns outsl and cmpsb loope icebp (bad) js call call push test adc in (bad) cmp out out jne cmp cmp cmovbe ds (bad) ss loope jle adc decl movsl push sbb add sub push enter mov or ficompl ds add cs push xchg (bad) (bad) mov lret arpl rcrl mov and faddl mov dec test pop jne mov outsb into xor loope decb aam xlat push adc push add jb inc std sbb jb xchg loop jno lock mov inc sub inc adc jle add int3 pop inc es incl xor push jmp cltd mov mov sbb pusha pop xor out cs pop fdivrp pushf add xor fildll test mov jle mov fidiv stos loope sub xchg dec movsb mull (bad) jae jg or sub int into daa movhlps (bad) out push repnz shl fbstp push sti inc mov pop jg or aad (bad) ds (bad) es loope cmc jg mov pop data16 (bad) fs loop (bad) (bad) lcall xchg test mov sarb pusha (bad) orl xor cmp arpl (bad) ljmp sub push or mov sub cmp cmpl jl pop lds (bad) (bad) clc inc jb add rcrl pop lret add cmp mov sub loopne lods push pop ficoml jbe aam push inc movsb push jo sbb shrb push mov shrl adc add decb aam inc mov js xchg mov xchg sub test mov jmp mov adc jbe push sbb incl inc mov xchg pop add push mov add (bad) jo ljmp insb std inc dec or dec jo sub sbb sub addl dec xor ja ljmp push jo test lods add push lea dec call mov push mov idiv das cli incl push ret insb xlat loop cmpsb dec testb into dec jg sbb out int aaa jnp fldl outsl in stos add test cmp ja clc decl xor lret adc or or movsl jmp (bad) das and cmp pusha cmp cwtl ja leave sbb dec loop add dec lahf dec mov imul decl icebp push xorps inc int3 std pop icebp outsl shl push outsl icebp punpckhwd pop sbb outsl mov fwait dec movsb in nop pop dec scas in aaa call dec pushf faddp ljmp push jnp push cs mov ret (bad) mov dec test add inc in xor pop inc lea push jecxz jo sub in decb xchg xchg add dec xchg cmp xor and push enter xor inc cld (bad) fnstcw jns hlt call sbb xor fcomip (bad) jmp push push ja ljmp (bad) push aas adc out adc fildll decl ds fild sbb faddl add (bad) cli xchg or cmp insb mov adc inc incl out sahf fsts sbb in push push jbe inc mov (bad) sbb inc or jae in mov loope imul je mov fcompl aaa out sub int icebp outsl test loopne dec loope pop pusha jecxz popa daa mov rorl sar ljmp sbb sub ja sbbl lea push xchg cmpsl sbbl mov push push push les add insl pop nop (bad) xor (bad) cli mov add imul lahf mov test inc or idivb dec subb or (bad) orb pop inc sar js call mov inc das ljmp push dec adc adc cld or fs mov mov shlb dec mov dec pop xchg add sti (bad) (bad) call imul fsubrs ret mov push outsl pop jp push mov push push cmpsl dec nop iret pop ds (bad) (bad) decl dec sbb dec mov push ljmp or inc mov and stos and inc out and cmp xlat ret adcl lcall popf addl pop mov xadd pop (bad) jbe scas add mov (bad) cs call cmp dec sbb out fistpll jp inc mov hlt or imul or pop push or sub popa loope sub rol sti dec mov pop sbb dec not dec fdivr mov in pop adcb out push inc pop mov je shrb and pop repnz add imul add outsl (bad) (bad) jmp or inc popa loop in push dec mov fs mov shrb dec inc out jmp inc insl std cmp loope adcl movsb clc mov and adc add aam into add lock sbb decl add cli cld pop xchg fadds pop push test loopne push jl (bad) adc addl xchg (bad) ljmp test out in cmp jae sbb add lock sbb mov inc addl jmp add adc mov xor adc add icebp mov mov add pop or fstpt fs aam push out and inc incl add pop cs enter lods insb loop scas jge sbb (bad) ja pop and inc or fdivrl cwtl scas xor pop sahf cmp push push add pop dec loope ja addl cmp loopne mov cmp mov sub popf mov mov cmp lock adc mov ljmp push test pushf fadds adc mov sbb in sub dec mov add fstpl lea scas (bad) jno jp movsb mov hlt jmp popf push adc dec ds pop sub xchg scas cmpsl repnz jg and sbbb sbb int sub (bad) cmc ja rorl ss outsl out pop push or mov xchg inc dec jnp aaa mov call insl cld incl cmp cmpl and pusha add or unpcklps xchg in push (bad) fistpll xchg shll aaa pop fwait jns and icebp adcb sahf cmp in subl mov sbb cmp and repnz enter lock inc cmp jmp xchg inc stc mov sahf mov mov sbb (bad) adc push jno das clc mov fildll into and call jbe mov push ret (bad) jbe fwait jbe icebp jg (bad) and push jge mov test inc add popa cld outsl xor jno and inc nop pusha adc or mov int3 je jb outsb adc jo aam (bad) movsb subb test addb ret pusha xchg ja inc (bad) ljmp mov pop fistl mov cmpsl lods and daa jo cld decl dec in shll movsb daa mov lock jp or loopne scas add roll add js pop or mov xor jae rclb dec pusha push pop fwait inc incl popf inc cmp and mov push (bad) hlt mov pop pop hlt xchg dec inc je nop cmp adc loopne loop dec mov incl sbb in es je (bad) jg repz cmp cltd in inc xor in outsb jno mov fbld cmp jno bound insl loope (bad) jl faddl inc add pop push inc into cmp and stos or or das mov incl icebp push call (bad) mov loope decl adc outsb nop in enterw jne sub adc mov mov pop xor cli ja call insl xor pop hlt inc or push gs (bad) fist jle sbbb shrb fadds bound aaa mov sbb xor or jle jns mov mov sub fmuls dec loope or cwtl cwtl rcrl rolb clc xor sbb or xor popf in and inc loop jg jle sarl pop jo add stos jmp std sbb in add mov xor add outsb mov lds mov adc (bad) (bad) dec es loope loope add xor push jns xor ja or cmp test push jg ret lcall outsl push pop add sbbl cmp add mov (bad) out cwtl or ja xchg xchg dec mov mov push in aaa rol call cmp cmp test lods aaa or clc aaa (bad) fimull add and loopne adc sub ja sub mov ret mov out test xchg ret xchg sub pop pop scas loopne add gs jo,pn add imul push in push std xchg call cld mov or adc pop mov insb mov add jg cmc cmp bound clc pop outsb leave leave or mov rorw movl dec (bad) mov aaa sbb fcmovu sbb fisttpll xor push jmp push xchg cmp cmp fildl sub ljmp add jno cmp fiaddl cld popf in je daa arpl nop jp and add aas mov and es mov ret mov xor mov push bound fldl push mov cld cmpsb dec pop insl push adc adc (bad) fsts incl lret popl enter mov fcompl mov push pushl xchg testb or mov cmp and lret mov pop shl ljmp add push jmp imul mov lahf mov fadds stos mov (bad) decl aas fmul lcall mov (bad) mov mov out repz sbb jmp mov ljmp dec add add out push pop xor je pop xor jge mov iret addr16 inc mov sbb aaa out pop push or int3 push sub aam je pop add dec cld or mov adc adc mov subl pop adc inc adc inc mov mov dec sbb loopne test mov jmp idiv pop mov mov in sub shrw (bad) jb jp (bad) mov cmpsb fs sub lea push cmp fmulp in (bad) hlt (bad) push (bad) xor movb inc adc movsl popa cld add and int3 outsl xor pop outsb sub inc aam push push (bad) mov add adc lods mov lea cmp popf aam sar jae inc fldt inc lds jl (bad) (bad) ljmp adcb cmc jp insl test pop lods mov rdmsr lahf repz and or adc mov or andl mov jo cmpsb jmp (bad) stos push lock mov dec sub lock clc call mov jbe loopne loopne and out pop (bad) leave cs sbb xor das add cmpsl outsl xor sub jmp push das sbb imul cmp fdivl mov lock pop ficompl inc xchg (bad) fisttp mov xorl cs pushf xchg mov fnop adc push fwait test dec aaa lret jb inc mov mov jns lods clc jmp sub rcrb enter push lods flds inc sarb aas orb and inc mov mov mov jno incl fidivrl or test ljmp push repnz mov ret pop add ss xor fldl sub dec dec test sbb out fbld push es lcall mov sarl jb xchg fisttpl xchg push add xchg cli sub ja pop mov (bad) fildll and leave add pop outsb (bad) popf pop pop inc stc (bad) (bad) out (bad) mov cmp add sub push das jmp mov jecxz lods bound pop daa mov enter xchg cmpsb xor jb ss and push test add (bad) out lea or fisubrl cwtl cli mov lods repnz inc jg inc xchg or or pop lret push and popf xchg (bad) sbb nop lds pop dec loop mov call inc out xor decl (bad) lock xor sahf fidivrl rcrb popa dec lods fld ljmp je mov inc sbb or lods outsl imul push or clc (bad) fstl xor pusha pop insb mov adcl lock xchg push fiaddl xor mov std lock push in (bad) decl ja fnstcw pop inc inc call xchg sub in xchg pop inc or (bad) (bad) ds insl cmpsl shlb sub cmpl and call cmp pop jns sbb emms outsl lds adc add imul dec pop cld (bad) (bad) (bad) add sbb addr16 push mov scas mov cmpsb insl es add and pop in cmpl loopne js push pop and dec mov movsb outsl fiaddl repz cmp inc sub out push sub xchg movsb cs and enter int3 pop test lea addb sub pusha cld sub test repz lcall (bad) cmpsb adc call ret imul insl ds dec add decl es xor ds rclb cmp pop out mov pop fldl idivb (bad) (bad) lcall rol call testl data16 xor (bad) jle mov push ljmp pop fiadd jno pop in fisub sub aam clc mov push into pushf dec (bad) std mov dec in (bad) decl pop mov mov sub mov rcr add adcl lcall dec inc test or jnp aaa xor sbb and add push dec push mov je cmp add sbb gs adc cli ljmp jmp movsb or jae push xchg jp or lds sub mov lret in fs cmc ljmp xorl es xor (bad) incl jo out fcmovbe adc or insl (bad) mov add gs or xor lcall xor or loopne or jp fwait dec inc lcall push gs mov pop sub divb and or pop cld insl push clc pop icebp (bad) mov fs sahf or mov dec in pop test cmpsl xor pop lock jb adc or push mov mov sbb cltd dec cmp addl loop add and gs or (bad) fidiv loope add push push ret in jecxz push lods aad xor mov and sbb sub repnz and inc mov imul dec out mov or test shrl jl (bad) decl add mov sub dec jo js loope cwtl js addb push orl test call add xor pop mov fcomps mov loopne mov jns inc or inc (bad) pusha popf int inc xor lock jle xorl (bad) decl popf (bad) jb inc adc pop adcl inc nop push shrb dec mov aaa pop fcoml ret leave add bound faddl cmpl hlt add clc les in clc pop push mov ja cli add inc ror xor mov icebp es add fldl (bad) ljmp das jbe inc or mov es adc loop (bad) lock xchg sbb cmp mov fildll pusha aad adc stos jno mov lea stos test cwtl mull scas adc xchg add loope adc inc xor push xor cld pop cwtl outsb cmp pop lds sbb mov subl int3 pop jl mov out add mov repnz and push ret sub lods shr daa lock sti cmp fdivr dec push add fildll sbb cmp xchg jne sub pop insb subl (bad) mov (bad) pop lods jg add mov cli fwait add add gs add je mov outsl adc cmpsb add cmp (bad) (bad) incl insb in xchg add fs icebp out test (bad) jl or sbb dec mov pop cmovp mov push call jmp add popa in adc pop outsl sbb fisttpl xor movsl mov das insb sub mov mov addb xchg xor jnp inc mov test enter loope insb xchg je jnp out push cmp fs mov das sbb sbb (bad) mov mov xor cmpsb andb adc testb mov jo sbb inc cmp mov (bad) fbld adc hlt pop pop push add mov or jmp or or xchg pop xor jb pop adc aam ja pop (bad) out arpl and jle sub jae (bad) sahf rol sub popa ret push loop punpckhbw outsl insb faddl sub sbb adc add test call mov (bad) inc ljmp adc mov jg adc das movsb mov lret test mov fild or (bad) mov and add push (bad) mov or inc sub sub push mov (bad) mov call push xchg pusha adcl ficoml cs lcall call mov fwait mov ds mov imul dec aam or cmp mov sahf jns scas xor fwait repnz arpl (bad) je sub repnz gs popf jo and adcb mov cmp divb xchg test fprem jg fldcw dec pop cmp push (bad) jno pop das adc ljmp sub addl (bad) ss dec cld inc (bad) daa inc pop mov jmp push in xor pop dec or sbb and add ljmp int adcl xchg mov ja push std or push dec popf movsl iret push cwtl inc (bad) sbb and clc lds jg insb out sub in (bad) jmp inc roll pop cmp iret fs hlt inc js,pn or loop in out sbb inc es pusha test pop inc jb outsl mov jbe sub or cmp shrl pop repnz ljmp add jmp sbb push shlb mov pop adc sub jmp (bad) dec push sbb dec in pop or call sar pop sahf mov mov jmp push jmp test mov push bound mov arpl (bad) push adc scas out dec inc mov fnop popf adc and jo push fisttp (bad) adc pushf rolb es cltd lods (bad) (bad) push xchg push jmp (bad) mov mov inc ja or rorb cld and aam dec mov or pop jl and mov inc fucomip incl in or rolb or sub hlt lcall xchg add dec or inc push movb pop outsb push cmpsb mov stos out cltd xchg add fs pop (bad) jge xchg mov pusha xchg es or imul or add call push aam imul enter outsl inc lahf insl psraw ja call mov mov mov inc out lret inc imul aaa out add cmp pop popa sahf or dec xchg jl (bad) push jns push jp lcall leave or pop cmp jle pop das xor ja push imul pop cli rdpmc inc test in out nop jb addl faddl aaa mov mov adc pop push daa mov movsb mov pop cmp mov xor (bad) mov push jae (bad) mov or icebp int3 mov cs xchg test (bad) (bad) lcall addr16 out push ss mov cld cmp popl ficom mov sar mov xor cmpsb stc (bad) add inc dec clc or je cmp sbb mov das fs pushf insb mov xor xor fwait pop jl or mov lods std sub lea add pop jno jne jl add je (bad) (bad) fild jp outsb or (bad) jae xchg sbb loopne add xor xorb in outsl jo clc mov nop dec int3 pop lret jbe add rcl dec jg in dec add xor push or std adc inc jbe cwtl mov (bad) (bad) mov xchg jg cmovno adc pop mov cmp aam mov bound or cmp fwait mov loope cmp or rcrb dec (bad) int test push sbb pop xor scas xor sub adc movsl push mov xchg pop sti cmp jmp mov sbb outsl mov inc insl or and mov fistp (bad) in (bad) jae pop and insb push lea outsb in push test ss or (bad) aad (bad) (bad) mov (bad) mov test mov sbb xor or push addr16 ljmp mov pusha imul add sbb icebp (bad) (bad) fstpt add fisttpll sub cmpsb sbb cld (bad) out push xor repnz adc loop cmp cmp incl or out cld nop push divb push push bound adcl inc sar mov xorb out inc fstpl paddusw insb mov ja jg mov addr16 inc xor xchg gs dec lea mov mov cmp cmp (bad) rolb cld or out inc inc xor inc int3 inc aas sbb cld mov fwait pop push pop adc sar ds ret movsl add jl rcll (bad) out outsb ficompl sub jl je fcoms (bad) (bad) jg jno in xor xchg jmp in mov sub outsb les (bad) ret and mov insl and inc jbe mov sahf out enter hlt jg inc and (bad) aam rcrl les jbe cmp xchg jbe (bad) push or lods unpcklps je sub adc mov and icebp or sarb mov call sarb ret mov and stc ret jnp inc sar icebp jb aas adc xchg dec outsl push inc sub add push add rorb (bad) outsl xchg and jg (bad) cmp iret inc jns cmp dec add in xchg mov xchg (bad) sbb sub add jg fcoml and cmp outsb flds add push mov rcr imul jl cmp dec bndstx popf movsb xchg dec pop inc cmpb adc mov ja shr sbb inc jb aas inc and (bad) jg inc cmpsb fsts sub mov test imul ret lock cmp sub mov call add test add pop sbb lret adc sbb rorl clc mov sub cwtl adc jo stos mov add and jecxz add jmp (bad) cli movsl add jbe (bad) pop pusha adc sbb sbb sbb push mov loope add lahf add sahf fsubl (bad) in xchg xor mov stos or mov jb add stos adc sbbl sub mov sbb (bad) (bad) mov cmpsl and fsubr jmp std popf call add add mov add inc idiv ficoml sub jge in cmp decl mov add enter pop bound jo mov (bad) decl push iret pop cmp insb jne call sbb xor decl mov inc test push (bad) mov adc dec jae push ret mov sbb fldt loop addr16 loop loop fdiv ja sbb sub or (bad) or mov loopne jge cli mov and in ds jmp pop mov movl or aaa cmp add and rclb or cmpsb icebp pop sbb lcall in cmpsb jne xor pop mov and push cltd inc sarb inc mov clc (bad) (bad) decl pop repz dec lret jmp or movsb (bad) (bad) fs add xor sbb mov mov test mov data16 call push mov cwtl jb imul inc cli pop lock aam jae pop xchg pop cs fimul ret cmc incl out stc jp iret dec into jl leave add fidivl mov or pop movsb popf pop mov dec and stos test xlat add add sbb mov inc loopne cmp lds xor lods lock mov (bad) mov mov add adc mov and inc add or fdivl xchg jg push (bad) in mov sbb out xor incl add and fisub les jns (bad) sub adc (bad) aam lcall popa adc adc ss enter fstl push icebp rcl xor jae (bad) scas xor mov or aaa fstpt dec push mov cltd push mov (bad) jo sbb xchg mov cmp (bad) call sbb (bad) fsubrp mov jo and mull xlat gs neg clc arpl sti js movsl fistpll fimull xchg xor lret or mov push jns lock call mov loope mull mov inc lock xor push add fldenv add adc sub cmp push inc mov nop outsb cs sub sbb hlt pop sub adc inc sbb loop rcrl clc mov xor pop mov mov les cmpsl repnz xchg fwait pop fs divl dec ret movsb add outsb jne push pop mov xlat in (bad) add hlt xor les (bad) incl (bad) (bad) xchg movlps (bad) (bad) fstpt sub sbb lods rcr dec pushf xor mov test mov xchg push test aam or (bad) loopne sub xor lods xor mov cld mov test lock shl adc pop fs lock cs ret adc scas xchg out adc and dec (bad) add (bad) jmp sub push punpckhwd addl cmpsl out bound test mov jo outsb xchg or push jbe xor push incl (bad) jnp sbb or (bad) push pushf add stc scas or mov lods cmp xchg (bad) jg js outsl shll xor xor sub out jb pop inc jbe orb sar (bad) out lods jno pop sbb lcall push jno add inc cmpsl leave xor and pop test mov insb adc adc fimull clc and cmp fbstp (bad) xchg add lea cld (bad) mov or push movsl pop (bad) lea add test int3 sti jmp fdiv (bad) (bad) ljmp (bad) (bad) and pop adc or rorl or int3 data16 rorl mov sahf movsb sbb add jmp aam sbb sub lea mov sub icebp jns pushf mov pop idivb cmp sbb push fldt push inc fidivrl jecxz mov sub ret (bad) (bad) (bad) incl push (bad) fldenv mov (bad) mov adc das mov pop push jmp and ljmp mov fcmovb adc jb aam (bad) incl mov adc add fstl int add in xchg clc (bad) rolb push in add rcrb pop xor or daa pop pop adc push rorb divb or mov xor outsb loopne stos loop aaa cli (bad) jno sbb xor and inc test sbb test jns lds out movsb cmc (bad) in mov in or mov iret or or sar mov in hlt lcall pusha add fbld shrl add mov push jae idivb push icebp fwait inc cli arpl inc sub call cmp xor mov es je loop ret cmp sub test push fwait addr16 push fs mov lea jbe and enter outsb (bad) jg push jno mov loopne (bad) lcall cmp add in ud2 cwtl divl push pop mov fisttp into jo jmp mov or outsl stos or jb das aas outsb push ret cwtl jg cmp xchg icebp or (bad) pop nop test or push pop movsb fbld mov cmpb jle idivb xchg fwait mov sbb dec subl and das add stos mov pop bound (bad) fild std add pop cmp insl adc mov inc mov jb sbb out mov xchg mov jmp insl es cmpl testb cmovae sti add sub xchg (bad) pop inc pop and in (bad) xchg pushf xor out out addb xchg mov push sub add jp xchg daa adc sbb fisttpll sub gs xor ljmp dec or movl adc inc push or xor cmc push pop ja or (bad) lcall jb add data16 mov sub pop test (bad) lcall jbe dec pop dec xchg imul sbb into (bad) dec and cmp (bad) fildll sub (bad) movsb xor sbb mov mov pusha lds stc inc lods jb pop or inc stos in fiaddl jae inc pop nop jp jge add std ljmp xor std outsl fldl fidivrl xchg enter mov push push fidivr bound inc mov loop js jle add dec or sbb pushf inc int add add push shrl xor jg ljmp dec (bad) incl mov inc adc xchg ja nop sbbb dec in inc decl push mov cmp cli inc jg test out sbb inc push ret xchg call lock sti xor ret sbb cmp into jb push es (bad) decl mov sub inc out push cmpsb loop cmpsb outsl xchg mov push add dec jg ljmp or pop ror dec fcmovnbe mov or or xlat jae push or pop mov push pusha add call sub inc into insb mov dec mov je cmp xor shrb cs (bad) fmulp xor jbe mov mov pusha pushl lods mov or das xor adc stc sbb jbe sbb dec add dec fildl cwtd adc nop aam lds fwait add cmp fild add sbb jo cmc fsubrl lods sub ljmp in add cltd lahf hlt mov mov push cld rcrl pop daa adc mov push pushf dec cmpsl jge cmpsb pop andps mov lea cli mov decl push cli fiadd adc push pop ret sub aaa jbe pusha inc jg (bad) jmp add mov orl aad (bad) decl out std cmp add push jmp jmp std jmp (bad) (bad) jg imul cmp mov mov xor jl push cmpsb inc enter inc sarb fmull cmp cmpl dec nop subl mov add les sub movsb aaa mov popa inc jecxz mov into inc imul scas xchg call push inc xchg push mov dec cmovp enter les enter lcall jl clc lods std jg inc push jb lcall sbb push mov pop pop sub data16 pop lds or and push (bad) call sub insb lret cwtl sub mov mov mov add or fwait gs (bad) mov fcmovb push mov and xor cwtl fadds dec sar push jl jnp xor popa ret outsb push pushf loopne add aam mov jo clc push sarb pop fcoml add sbb mov jae sti mov out sub data16 (bad) outsl fdivrs cltd sub fldt fwait (bad) mov push int sub in add fldl2e sub fcoms xor in loopne arpl out mov movsb adc sahf inc inc add jo sbb inc add push icebp xor mov sub dec imul add cmp mov in aam ss (bad) flds (bad) jne rcr andl and ss push iret (bad) (bad) mov jle cld bound int mov cltd mov test dec jmp add mov nop dec mov (bad) cmp inc (bad) cmp or pushf and mov pusha fidiv jns ret mov xor add out mov cmpsb mov hlt jg mov orb push push sub subl inc and fimul fmuls lret add scas mov inc adc sarb out out push aaa jecxz aaa outsl xor mov inc fmulp pusha or loope aam pop shl mov and scas mov sub int inc jl lea sub or jle out sbb sbb cmp cs test data16 decb add cmp inc cmpl bound sub sub scas mov mov mov cmp leave adc sbb in arpl adc insl fild xchg loop scas into rol jl lcall or dec fisubr loop or icebp outsb ret lock stc (bad) jle sbb mov das adc lods in xchg or dec sbb jo xor inc add fisttpl mov lods es paddw scas and mov cs add pop add and ljmp xchg jne out jge push inc hlt add dec push pop arpl icebp jg or and (bad) dec or (bad) call and dec and or je add test cmpsb rcll (bad) ljmp jge add push add cmp sub push mov or inc rcrl out dec push lcall xchg mov adc mov lock hlt nop jp mov dec test or or mov inc imul cmp cmp xor sbb mov nop xchg arpl adc add (bad) bound incl push decb hlt push inc cmp cmp xchg test mov stc test push inc daa mov test or mov jp les movups cmp push adc pop jno mov jmp inc out insb jne (bad) cmp pop and ret mov in imul sub sbb decl push push push inc in and mov mov jbe aad incb cltd jae mov or (bad) fwait in jmp (bad) cmpsb mov mov cld mov pop cmpsb mov pop sub inc jmp ret test (bad) adc ss neg mov out repz divb mov fwait sarb fcoml push popa pop cli pop adc or push mov mov ret mov daa lds dec lahf mov inc sar fisttp jp sbb jne out jl adc andb adc cli adc std dec mov sub pop fstps cld inc rcrb (bad) icebp (bad) cmp jg call push push xchg xlat pop sbb xor push (bad) es imul lds clc inc dec cmp and jge stos jne and jae lds movsb or dec je sbb mov outsl push mov jl pop imul dec fsubrl scas jae sub std sub (bad) or inc mov mov xchg mov mov mov lock and aad addr16 aaa cmp xor sub jge push pop sub subl mov (bad) ljmp jmp sub mov in mov mov jle mov (bad) jmp mov jno cmp add outsb mov inc xchg add outsb adc lock test push add and loopne pop jmp add inc add movsl hlt jg and jb mov mov adc push out lods loope or fwait out mov sub fwait xor out push es cmc jmp mov mov adc add lret addr16 pop call mov adc aaa inc or jbe dec lods push xchg mov push sbb aaa (bad) mov out gs push mov test iret outsb sub fbstp test negb ret aas ljmp mov in jnp fldt pop xchg pop xor jne cmp sar push movsl movsb hlt xchg and mov push cmpsl add scas xchg mov add hlt add push mov (bad) std (bad) ljmp pop movsb jnp in add ret testl inc xlat adc clc cmp fadd out (bad) sbb ja push mov cmpsb pusha cmp xchg int3 xchg dec imul sarl (bad) push outsb inc jo pop adc (bad) (bad) mov aam xor mov push popa add jo xor cld pop in jge (bad) mov (bad) int cmp xor inc (bad) mov inc rcrl jae test or (bad) frndint xlat lahf mov (bad) pop sbb ljmp in and add push imul or scas ja mov inc inc xchg mov xor call leave (bad) nop dec pop pop cmp lcall movsl aas std lods (bad) jns imulb (bad) fimul sar outsl and cli push sub cltd incl pushf xchg pop inc or sti aam (bad) jg jecxz jbe (bad) je xor cwtl rolb decl sbb rol movsb (bad) fimull sar fsubs mov or or inc or adc call std push (bad) xchg loopne or sti and xchg rclb mov out (bad) cltd cld pop (bad) lock inc push (bad) fcomip ljmp pop mov pop inc out xchg push repz push in rcrb fistpll push sti test pop jl pushf les fcoms sbb pop (bad) jg shr jbe dec outsl icebp inc push jo adc mov orb (bad) addr16 (bad) lods sbb in pop mov ja push add inc push add movsb in pop push or (bad) ljmp mov inc fildll pop pushf mov add out cmp scas das aas adc imul ss add inc push add cld call dec wrmsr sbbl stos inc pusha pushf clc sarb adc push ja fiaddl xor std mov (bad) (bad) (bad) call or insl lods lock scas or out dec icebp push mov add gs adc testb leave cmp fisttpll in (bad) rorb loope fcomip je fxch into xor pop sti out sub mov inc add scas mov sbb test adc insb movsb dec sub pop loop dec insl nop pop sahf xchg pop add cmp push je or enter stos iret loope nop (bad) mov rorb decl js sub dec es adc mov fldl mov jne lcall (bad) ljmp mov push mov sub dec jbe lret jp fnstsw cmp add decb incl mov div ds andb hlt sub sbbl xor push or fstl pop xchg scas jp push lcall adc (bad) (bad) xchg or sbb imul das les dec in pop mov jnp stc xchg in pop ljmp int jg push pop push out sbb mov daa inc sbb pop bound jae (bad) mov incl lea daa xchg (bad) xor mov dec push inc sub cmpl dec mov jle xchg inc adc outsb popf dec mov das mov mov fisubl fisub adc into mov sub pop add loopne icebp push or jg (bad) incl js scas xchg adc adc mov jle icebp sbb data16 scas insl ret mov sbb jg mov and xor daa aas scas or mov lcall call and or pushf data16 cmpb ljmp mov jo lcall sub int3 xorb es push pusha cmp push mov popf push sbbl and lds cmc and push adcl adc (bad) jg jl add adc ja aaa xchg ljmp es rorb lods or xchg push push mov inc (bad) xchg jp mov scas add (bad) mov in inc (bad) push outsl aas push push sbb (bad) cli push inc add cli test push loope pop dec mov cwtl stos push cmp sti aaa or xchg daa loop mov ret xchg push mov and daa out imul test inc mov pop outsl pusha add inc adc pop pushf cmp xor adc sbb pop add mov xor sub fbstp mov add mov pop inc mov push mov movsb push add pop adc sbb or xchg and sar lret mov jno out mov jae mov xor inc in xor mov xor insl push negb add cmp clc pop push add cmc pop les xlat add fwait loope xor pop mov push outsb mov add pop mov dec (bad) jae cld (bad) pop shr test and ljmp xor cld mov in cmp clc (bad) (bad) sbb adc inc mov cmpsl and jmp mov add inc mov addr16 adc mov or or loop push fisubrl inc and jbe add or insl xor fstps adc mov (bad) push nop ret adc (bad) das add sbb mov pushf mov and mov adc sbb aad mov adc ljmp sub jmp (bad) push add push pop and or (bad) pop jmp popa add out mov and int push call insb pop add mov lods sbb (bad) out (bad) (bad) lcall jo dec (bad) imul sbb popa out inc call daa pusha outsl clc scas xchg adc popa les xor sbb inc rcl mov test cmpsb (bad) test cmp lods decl fdivrl sub (bad) ljmp push ja pop pop adc push add sbb jp aaa sub mov (bad) ljmp (bad) xor adc je loope mov and (bad) rcrl (bad) bound dec daa mov (bad) push adc pop jge pop inc mov outsb int3 fcmovnu data16 jle xchg shr in push mov loop pop ja dec push push cmp pop sub dec lods daa test dec movsb mov es in adc test lods (bad) (bad) test mov cwtl add mov xor push push outsb test stos cmp fldcw (bad) push mov mov adc out in movsb add rcr inc push mov mov push cld jg rolb clc add cmp lods sub or dec pop hlt add push xor orb push hlt and pop mov mov out sub bound (bad) push jno xchg sarb push cld pusha dec mov xor push negb cmpsb add or mov cld (bad) mov or jnp jo (bad) jmp (bad) loopne ljmp mov sbb (bad) pop ljmp test add lods decl and imul mov add decb out adc mov lods adc imul push push adc dec pop mov ret fs pop sbb in xchg adc scas add ja ds pop cli lret sub iret jp mov xchg mull ret cld stos dec int3 or mov dec mov imul sahf inc sti xor sbb flds (bad) ljmp fsubrl mov ret std inc addb faddl dec lods jbe push inc decl (bad) ja mov push pop jmp and push dec fistpl pop sub jmp mov arpl lcall sbb inc pop imul add add cmp movsb dec adc xor fisttp repnz mov push xor bound dec cld aaa add mov pushf mov aas js clc neg add imul fstpt int3 sbb lock ret push or dec ror sub sbb xchg gs aaa inc int (bad) sbb repz sub je mov pop push shll shrb dec cmp and (bad) incl add ficoml je loop fs outsb mov push xor fwait sbb cmp push pop cmp or incl insl fiaddl or aas mov push push mov jg outsl fsub dec int pop fs and jo cmp mov and scas (bad) popf and add add movsl out shll xor mov jg pop dec popf mull shll out aaa sbb pop repnz pop mov shrb fisttpl aam jbe lcall rcrl test mov inc or lods sar (bad) jg or sub or roll add icebp aaa sbb mov negb loop fistp mov ljmp mov in cmp cmp test inc test stos mov popl (bad) push or jg mov mov repz pop (bad) (bad) decl or add loop fwait xchg cli inc pop cmc inc shlb (bad) mov imul mov push push sbb stc sbb bound sub icebp xchg sbb out xor sub mov pop cld cmp fnstsw cmpl (bad) fsubrl sahf out cmp call enter (bad) cld das fisubl mov fstpl adc vxorps add je lcall jecxz or pop data16 call (bad) xor rol jmp sub (bad) jbe add (bad) jo (bad) ljmp es lock sub push or push loop sbb (bad) (bad) jmp iret jp push int stos push aad ja jg cld mov scas fstpl dec xchg mov decl xor int xchg and or sub or fstpt pop xchg mov jmp imul lahf dec adc and push test inc cld (bad) call sbb push lods fldl aas stc lret xor jg fiaddl mov jle dec or mov xchg lock dec push cvtps2pi xor pop jecxz sub clc outsl xor xor fcmovu pop inc out pop andb iret (bad) and and lds push sbb fcomip loop jge lcall xor inc (bad) gs es lock sti add fcomps daa xor popf push aam push dec and inc ret adc jge mov jae push xor out xor inc jmp int pop (bad) or ss xor sub movb mov rolb jb jnp dec cli (bad) pushl pop mov mov das cmp cmp nop hlt ljmp mov addr16 xor pusha lods jmp adc inc mov out and mov or mov mov push (bad) fild fmuls iret gs push and pop or (bad) (bad) cld add jb stos dec fiadd (bad) roll push sar bnd pop push orl shrb push xor push cmp rcl out ret jle (bad) mov pop scas movsb hlt out nop push aad adc (bad) jmp mov hlt cmp jne into jle pop adc and xor bound jne (bad) fsubrs lret add rorb mov fsubs sub decl mov mov loop mov and (bad) lock lock add enter dec lahf mov insb or hlt ljmp sbb adc add lods push (bad) clc pop push add fiaddl add mov sub cltd ret or inc loope ss popa add in cmc fdivr mov mov fld aas das stos pop cmp mov incb xchg cmp loopne jg ja arpl decl lock (bad) xor mov roll xchg out ss (bad) lcall test mov lcall notl dec out jbe js icebp dec adc in imul cmp or cmp mov fild push mov loop fist test push inc cmp out adc dec inc add cmpl (bad) pushl jmp ss add movsb push (bad) icebp popa or jo sbb aad lcall std loop cmp loop jb hlt add jno ljmp dec jbe fwait icebp sub lods jecxz fimul add out movl push ja in inc icebp xchg ds adc mov push in in stos jne mov inc or (bad) (bad) in jmp mov inc stos in movb or inc out add mov xor hlt xchg inc cmp xor shlb cli or pop (bad) cltd xchg (bad) fidivrl push das and das inc gs pushf xor call mov lret mov shr cmp cld fwait sbb test push xor dec jmp les sbb aad and push push sbb out sbb mov cmpb fnstcw push inc (bad) mov movsb pop fbld lock or pop pop (bad) cmp outsb stc jo jecxz pop ljmp fiaddl jecxz lods pop or fcmovbe add or (bad) sub arpl shlb add clc incl dec fwait cmp lods shlb xor sbb decl push fcmovbe dec push imul les lret mov jmp or pop adc inc or xchg xchg (bad) jle enter mov mov push ds mov pop mov xor dec inc cmpsl fdivrl pop fstpl mov (bad) dec xor vmovdqu add ret and adc pop cmc jmp fcompl add pushf pusha xor stos into lcall pop adc aaa dec clc dec and push add xchg and adc mov fisttpl push sbb jno dec (bad) aaa jle mov das jmp lcall cld aaa push or fldenv pushf out jbe adc mov hlt sbb xchg inc outsl fcomip (bad) out inc mov push xchg pop pop mov enter jmp jecxz jmp push cmp and sub sbb dec shrb bound sub cld pop in xor cmp popa call (bad) repz cmpsb je (bad) enter (bad) decl sub (bad) andb frstor jb pop rcl (bad) (bad) lcall je xor jecxz pop and push jae test or loop sbb push pushl xlat and mulb sbb (bad) fwait shll mov andl aas loope sub sbb ret test (bad) sub clc in mov imul push add adc clc cmpsb stc fs fdivs cmc pop shrb pushf imul lea adc jne (bad) call movb add cmp mov pop (bad) ja mov or ret call or mov jge sub xchg cmp scas cmp mov (bad) in rclb dec sbb jae (bad) jp stos and sub (bad) subl jmp inc rorb out loop dec cmp imul mov mov add xchg adc ljmp add incl out out stos mov xor and dec iret (bad) sbb xchg mov movsb lock push ss dec lcall jg inc insb (bad) push pop dec mov dec popl int3 xor clc (bad) fisub sbb ljmp mov lock popa adc (bad) (bad) ljmp call pop out sbb sarb dec mov into pusha shll jbe pop imul lock fsubs xchg jl mov mov inc mov sbb or mov lods call cld sbb iret push and loope mov jge movsl lock jnp popf cld xor aam insl icebp and cld or popa popa ljmp popf push js mov aaa fidivrl std mov sbb push pop pop sbb inc xchg mov data16 mov pushl and insl xor jge popl (bad) aam inc pop andl ljmp aas pushf mov inc jp mov sbb xor test adc enter imull push cld mov insb aas aas inc sbb insl and mov adc scas popa int addr16 dec xchg (bad) cmp popl sarb loope mov ljmp pop inc mov lods mov lcall lods and faddl add (bad) loope jg push hlt dec add cmp xor in jns roll pushl mov cwtl xlat push sahf xchg mov in lods jno mov add ja inc incl jle push lods enter jo ret imul mov cld adc jle shlb dec xchg clc xor pop or ljmp cmp cld pop push inc dec push mov pop insl call in popf dec add add movsl sub pop in outsl adc popa test jmp fwait int3 addr16 mov add mov cmp (bad) inc or rcl inc jne add mov dec loop xchg rolb pop mov bound clc decl or std orb mov adc jl int andl jg hlt (bad) cmp cmp xchg fild xchg lods loopne fdivrs (bad) (bad) (bad) fistl dec push jecxz mov jns adc les out (bad) loopne clc ljmp inc mov dec cmp aas es mov pop adc push mov and incb mov push cmpsl mov ljmp shrb xchg fldt in pop lahf mov divl cli fwait aaa or sti (bad) xor mov push or inc sahf fldenv movsl ss rcrb mov mov xor loope popf clc xchg mov sub idivb aaa insb push (bad) cmc and mov or push (bad) icebp or pop (bad) fldl pop dec repnz cmp outsl hlt mov std dec push push pop (bad) mull iret push lods inc dec (bad) out es rcrl dec inc js adc (bad) incl sub xchg mov pop (bad) xchg push imul in mov cmp sub cs daa push idivl dec sahf sbb cmp leave inc sub push and sarw (bad) (bad) lcall aam lods dec ficompl add lcall and fldl jne call xchg cmp xor cmpl lock sbb jbe (bad) ficom (bad) jmp push mov xor rol bound scas pop fs loopne int3 sbb cmp inc pop add xchg pop pop ficoml mov cmp add mov stos sbbl ja js stos cmp lcall shlb loope or (bad) (bad) jmp adc movsl cmp fwait std call cwtl loope add shrl das cmpsb out inc mov (bad) or pop ljmp jb mov test push jo (bad) scas adc lahf or cmp sti mov sub push sub subl insl insb test hlt out jo (bad) loope push fnop or mov push xchg icebp (bad) repnz mov loopne popa mov mov or inc adc clc push xchg push and cmp xchg bound xchg lds cmc inc mov jl dec mov mov ficoml andb (bad) (bad) fildll push add add insl push push lock add jno jmp call mov jg (bad) mov js imul in jb add inc rcrl ljmp mov mov add or sub dec jns popf aad push lcall cmp sbb (bad) add jmp (bad) insl jo jno sbb dec dec jbe jmp inc or (bad) clc lock mov mov mov ds dec addr16 fsubs xor inc outsb inc popa fnsave std and pop ljmp (bad) adc fisubrl mov fsubl pop sahf int3 (bad) mov jns repz bound inc dec jnp in add cmp inc add mov xor lcall xorb mov in inc pop clc push xorb xchg lcall test sahf idiv roll dec dec push test ret test sbbl mov mov dec (bad) fdivl add mov add into in push and mov test scas mov test das enter lds iret aad andl pop jbe pop pop push test jae push pop add pushl add add (bad) in out cmc rclb (bad) adc push sar mov or xchg mov imul stos mov arpl (bad) ljmp lock inc enter jmp lret pop adc mov push mov adc mov arpl push fild push (bad) mov les je cmpsb pop in dec add (bad) ss xor rol inc jl jle pop mov dec (bad) or fidivr punpckldq mov (bad) nop mov sahf push lret cld push xlat mov push ret clc incl (bad) mov cmp push loopne jg (bad) inc sbb sbb out jno (bad) out and jbe add and aaa stos pop xchg addl out cs jo,pn ss enter test inc lea outsb mov outsb aad sub or adc mov adc and add xor insb xor call arpl inc test out xor sbb bound ljmp push mov and jg sbb mov mov leave mov cmc add fwait dec mov or lods daa add cld and out std push add (bad) add in add and testl pop inc adc jle mov sbb mov push jb sbb cli adc pop pop clc mov xchg call lcall jle cmp lcall rcrb cld jg sbb inc inc mov xor mov or and sahf sbb push inc ljmp pop jo cmp call jo sbb aaa cltd rolb inc (bad) jg adc lret pop lods or (bad) jg outsb es jbe cmpsb sbb or pop or dec fucomi push sbb daa push mov or ret fwait sahf or pop lock mov insb loope or decl int3 cmp sbbl push pop in cli scas inc nop addl inc ret dec loope loop divb fild push loop add leave (bad) cmpsb (bad) ljmp adc xorl push push in ljmp inc flds and sub aaa movsb push push popa cli fbld (bad) mov mov lock dec clc push scas adc jno pop (bad) clc mov aaa jbe call jmp aas sar pushl push loopne mov mov clc sahf cwtl mov mov cmp popa jo adc loopne imul jns lret mov sbb fmuls in mov sub mov clc hlt pop pop push and inc (bad) decl and xor sbb (bad) mov movsl fdivrs add sbb inc pop gs nop out icebp insb (bad) mov out pop mov rorb xor adc call jo lcall in cmpsl adc dec mov lcall fdivrl or jae pop mov fwait insb (bad) dec ds jns subl push adc add call fcompl sbbb jmp push aaa dec xchg mov (bad) repz push push out push adc test pop or ret inc fisub hlt incl cld sub sbb jg and enter jge xor das xchg lods orl sub adc dec pushf rcl iret push fistpll call sbb (bad) jne add inc std dec roll dec xor test (bad) jno jbe,pn jbe ret xchg (bad) call aam iret adcb add and xchg aaa sbb jmp push test push xlat stc adc cmp jge dec push push rcl and fbld (bad) lock mov lea in add jmp or xchg dec xor sbb sub les (bad) push mov (bad) lock mov je (bad) scas adc cli in sbb cmc (bad) loop shr aas jb mov pop jnp inc fidiv jb or in data16 push (bad) pushl inc inc iret shl out cmp lods out mov push jnp cmp sub sub add jmp ret mov testl scas lods fadd aad xor mov mov es sbb aaa out mov sbb xor pop xchg jge push clc ljmp pusha loop jns pop push adc adc jle roll jecxz sbb and shr xchg rolb xchg sbb ljmp fwait push cmpsl lret and fildl push cli (bad) xor or cmp enter in aad pop xor adc je es adc std mov ljmp jbe ss xchg call jae arpl sub jmp push pop or mov or ljmp (bad) (bad) add xchg sub jnp push iret jmp inc and fwait xor or sbb dec flds sub lds out unpcklps pop cmpsb clc or jg clc mov dec in pop push outsb xchg jge sub inc or mov pusha xor stos ja pusha sbb add imul (bad) out adc cmp mov mov fsubrs or shlb ljmp jns frstor and inc cwtl scas fbstp or lock add out pusha jge (bad) push push test in (bad) mov ds and (bad) lods push lcall xchg add push add fistpl inc fsubrp push ffreep jnp and fcomip dec and jnp imul fldt dec cli fwait insl jbe xor outsl aad mov dec (bad) icebp jg jp aad and icebp push pop add push loope add int popa cmpsb jnp cmc ljmp xchg jnp imul dec adc xlat sahf mov leave rorl test arpl inc lock add cmp and es sbb jle dec sub mov jmp jecxz dec xorl push mov mov aaa mov dec testl aam cld (bad) (bad) in or cld push mov add sub add or add (bad) cmp or add xchg in mov xor mov pusha call decb pop fnop and inc cld push sub repnz push add (bad) sbb push ja push int outsl sub lods cmp mov rcr pop xchg push ret stos add xchg cmpsl fdivrl xchg mov scas add daa cmp adc xchg mov fs (bad) jg lods (bad) sub adc mov adc cmp sahf arpl mov pop int3 outsb cmp js pop icebp (bad) cmp and push jmp iret cs mulb mov (bad) lock movsb adc jb test jmp mov fcomp leave sarl jl jne call xor (bad) pusha aam fsubs mov mov xor outsb add xor enter add pop lret push clc jge xorl cmp add out xor inc or ss (bad) mov sbb lock pop jb add cmp mov lcall and or outsl mov adc sub (bad) jg ror fsub sbb fcmovbe or (bad) and cld dec stos mov dec loopne (bad) popa mov testb fmuls (bad) (bad) jg (bad) cmp cmp or mov fcomip inc adc add xchg pop push (bad) jno xor pop add clc dec push dec cmpsb movsl or insb sarl mov insb and push push xor or fild jg std ds push pop jp pop fdivrs mov cmp das or push mov sarl imul les push aaa movsb loope or sub insb push lock dec mov jbe cwtl in mov inc stc jle incl int3 add inc dec dec call outsb arpl aad decl and rolb push mov fsubr mov add in mov mov fstps sbb call add or (bad) cmp in add addl pop cld ljmp mov out push push jns orl (bad) popa and mov outsl ss jg push je adc mov pusha dec addr16 (bad) (bad) (bad) incl in pop into enter xor push sar mull sbbl adc pop (bad) (bad) lcall enter xor subl dec xor loopne mov aas or cmc pop dec int3 push pusha mov inc sbb dec mov js pop jae dec xchg in lret std (bad) mov push sbb push and mov fsubr std (bad) mov (bad) cmp push je adc xor dec inc outsb clc inc push sar icebp (bad) (bad) incl test sti aas scas adc call sbbl lock dec adc or (bad) jp sbb (bad) loopne or mov mov mov add sub dec adc sbb mov jo cmp add js mov call cmpsb into push lret (bad) ja add and scas (bad) (bad) lcall adc add mov inc xchg enter push stos add fwait and xchg sbb pushl mov aaa mov or mov ret add or cmp ss roll or mov inc and negb inc loopne push cmp or gs pop push outsl pop sarl fwait (bad) pushl xchg into xor xor in or enter add mov sub push adc jl into mov jg notl lahf rcrb xchg mov or mov add mov and (bad) inc xor sbb (bad) (bad) (bad) jmp dec es dec enter lahf sbb mov adc mov or insb adc clc stos cld pop xor decl aaa inc (bad) mov sar push fprem iret mov pusha fadd jle sahf ljmp mov push (bad) dec jnp cmp adc icebp sub or sbb aas (bad) sub das mov fimul adc scas les pop cwtl and pop mov mov std mov pop fildll adc ljmp dec loopne test or pop xor (bad) mov std mov dec out mov aaa popf insb fwait add test mul imul push fisubr sub ficompl push outsb ret sbb or nop (bad) add lcall lods dec push aam mov in (bad) or push fimul stc decb ljmp jecxz jnp or cld push jns mov add or jne (bad) and xchg and cmp lds pop testb jmp decl loope iret jno cmpsl aas push or push jg pusha inc cli gs imul sub adc (bad) rclb mov loopne call xor jne insb push decb inc mov insb in cld mov dec loopne and mov (bad) out (bad) decl gs mov cmpsb sub inc iret out mov arpl mov js xor pop mov clc incl lahf xor idivl xchg xor leave dec mov ds xchg adc xchg mov icebp inc inc mov adc mov (bad) mov js push pop popf ds xor xchg push adc inc (bad) in push popf xchg popf insl pop aad jmp pushf jl jecxz scas adc mov fisttp loop inc mov dec std into push (bad) lea jns rclb ret mov mov inc (bad) lock dec dec mov aaa faddl and les inc inc sbb mov push insb ljmp mov imul out rolb stos push and rorb insl divb sbb jbe shlb sbb mov sbb dec std mov lock call sbb inc cmp jb mov xor sarl cmp dec lret pop in xor push mov outsb jecxz add mov push push and into jl push pop xchg xor add test pop hlt pushl inc jno and lds ss add and icebp cmp mov pop in (bad) (bad) call loope stc and sub push mov xchg cmp adc xchg fbstp (bad) fdivr popl mov es incl enter mov jl sbb cmp sbbl or inc add test jo xorb jg jbe pop lret das lcall pop cmp aam fildll jnp in mov sub mov sub lret loop fidivl sahf lret sahf call ror add scas incl lret mov dec pop out cld (bad) (bad) mov xor mov aam dec cmp hlt mov sti push fstl xchg sbb (bad) jg or data16 pop jnp xchg or lock incb mov stc sub cmp call and mov fwait lcall jno les call mov adc or sbb push adc (bad) (bad) ljmp aam mov pusha mov add mov pop mov in icebp cmp imul call (bad) mov insl mov fbstp pop test sub sbb daa adc (bad) xchg inc scas xor int3 lea outsb sarl mov pushl cmp adc outsb sbb addl insl mov or and ret or xchg popf inc cmp int mov inc je jnp cmp movsl (bad) mov pop imul hlt lret int aas hlt jecxz dec (bad) incl data16 ljmp fnstcw mov popa mov addr16 (bad) jae dec push ljmp cld insb mov adc or and pop (bad) (bad) mov sub push sbb lret inc add imul bound call popf popa sub into cltd xchg sbb lods sbb rorb cmp loopne adc mov xor stos fdivrl lea ret dec sarb (bad) jbe add mov add push je add xor cmpl clc pop (bad) lock icebp out out sbb outsl bound push mov cmc test out out dec insl xor loop es sbb mov cmp adc mov cli packsswb inc insl or movsl sbb pop aas js sar decl aam sub arpl sub insl or mov (bad) aam xlat mov sub or (bad) lcall shl stos mov jmp mov pop nop or mov xor and (bad) mov fidivl aad mov popf mov test add aaa mov lfs cmp push mov inc mov pushl dec adc sti cmp test sbb std pop dec and jbe mov push mov jg enter ja push daa aam cmp fmuls idiv pushl imul pop push inc enter lret stos xor dec mov sbb lea sbb push inc sub xor arpl mov pop pop sarb call (bad) jp adc and or jl dec std add in xchg pop in stc int3 push insb (bad) mov or shll and std or push cmp xchg ljmp or sub int popl add fisttpl cwtl push adc pop push xor addl out xchg mov cmp fldl (bad) push out sub les (bad) xor fisubrl xor (bad) xlat pop mov ret pop cmp vmovaps dec fs popf lret mov out jmp sub (bad) and rcrb pushf insb call push jne lods cmpsb pop call add inc adc pop (bad) push xlat add or mov ljmp (bad) mov jg lcall pop or loope add notl sbb faddl lock jl mov pop and inc and inc pop fbld (bad) sub ja and mov pop push adc add xchg mov fistl fcompl (bad) aaa jnp js xchg cld mov sbb pushf sub dec inc mov seto (bad) mov iret in loopne inc inc adc (bad) shlb xchg sbb test std ljmp and xchg (bad) adc (bad) and add cmp cmpl mov aam jae dec add cmpsb jg adc je add dec cmp or xorb xchg add and outsl mov (bad) and stos cmp pop repnz dec jmp incl xchg xchg push or mov jl cmp xor aam ss fs loope daa and jmp add mov clc push (bad) (bad) jle das inc sbb cli mov jp es in popf enter lret and dec (bad) clc mov outsl adc fild sub stos dec or insb lret loop sub bswap aas inc out test and cmp xor pop in pop cmovs mov jo pushl mov mov out (bad) out dec sub clc jg add in and pop mov insl arpl xlat xchg mov push loope add ror insl lods cmc stos jno clc arpl adc pushl lahf gs pop daa loope push mov and cmp lods aad hlt fadds flds push xchg pop push add add lret ret add imul mov es or or aad hlt pop adc inc ljmp mov jb or mov xchg (bad) ljmp push xchg push fiaddl inc lcall bound mov push lods add sbb add in inc fwait inc (bad) push cmp insb std pop pop cmp enter (bad) adc pop jmp mov add push mov sarb add jnp lcall mov push ss sbbl aad jle ss or ret data16 scas icebp mov ljmp jo neg pop repz fcomip ficom dec ret xchg add adc add das fldl popf scas xchg test out loopne scas test xor mov outsl mov fildll xchg popa iret rol leave xchg inc mov pop in inc dec mov fildll xchg ja fildll rolb sti push dec push aam jge hlt jg mov lcall mov ja push decb out dec or lcall mov leave push xor and jo in mov dec out hlt cli mov in inc mov in push inc mov or and sti pop outsb nop nop les aad push jb push mov jnp sbb sub sub pop aas or (bad) test out popf mov andl insl cmpsb mov outsl inc cmc hlt inc ss subl sub push clc pop push push or faddp out xor ljmp pop (bad) (bad) mov aad pop cmp sbb push aas rcll in gs incl lods lahf in pop test xor mov mov arpl in loop movl xor jle aas movsl outsb push pop (bad) lock in mov dec and (bad) pop fs and cli int3 sbb adc mov or dec push sbb pushl std jecxz in outsb imul inc sbb dec lret mov jae cmp xchg (bad) or xchg xchg inc outsl adc movb sbb add (bad) mov in or add insl scas aad pop inc lret rcrb js xor push arpl sbbb sbb jg cmc and cmp aam divb icebp and popf cmp xchg lods pusha xlat adc push push sti cmp xchg fild (bad) (bad) aaa popa and jmp mov mov mov dec mov ja mov gs outsb (bad) mov and pop sub lock pop mov push pop inc outsl notl or call mov arpl shrl bound clc or (bad) mov mov loope imul imul or call sbb (bad) (bad) ljmp sarb add and int add mov dec es out xchg mov fnstsw insb loopne xchg push push daa dec mov loop jo ss lods add std cli les jne jmp sbb jg fcoml out jo sbb xchg movsl add lea pusha mov test mov mov xchg out sti mov stos cmp cs mov rcl add add push ss or xchg mov mov inc mov (bad) pop add or sbb add jmp mov out movsl pop mov (bad) inc mov lock inc jnp and insl mov inc dec and in or repnz cmp les mov (bad) decl mov (bad) imul inc cmp xor jl dec or jns es cmp es dec cwtl xchg add push cld mov dec pop jle (bad) jecxz mov add mov ja (bad) pop gs rol flds pop mov loope pop ret (bad) int adc xor pushf mov and (bad) mov mov dec pop jo std push cld inc cld mov negb push pusha push dec lea mov pop rol cwtl aas into arpl push into add jbe xor lcall leave add dec or ss pop clc mov outsb (bad) (bad) (bad) lcall sarb push ja ljmp mov popf inc fcmovb xor outsb and adc dec (bad) jb test lock call mov push (bad) int3 popa push cmp fs or ljmp js fiadd xor jl cli mov aaa std jmp cmpsb es push and mov call adc mov (bad) (bad) ljmp jmp ret jno rorl addl inc adc nop incb aam lret movsl push (bad) (bad) (bad) incl dec aaa xchg add add and push cs mov dec sub out cmc das adc xor dec mov mov ljmp push test mov clc fisub (bad) fbstp (bad) fisubl cmp insl lods (bad) dec imul sbb in adc jp in (bad) inc das sti cmp adc and push xor or cmp jno and mov xchg xor push pushf pushf or pop adc sarb (bad) sbb xchg sub (bad) (bad) incl push pop mov mov jle clc inc and popf (bad) icebp (bad) mov xor std push adc shrb test loop fdivl mov outsb xchg push cmp or daa sbb pushl std sub fs testb sub icebp add sbb pushl mov fmul xchg jge cmp push xor fdiv (bad) (bad) ljmp pop rclb inc xchg fiadd lcall pop push call mov jns fsubl push jmp loop (bad) jo pop hlt or inc fstps (bad) mov call rep icebp out push js add push mov (bad) (bad) out push rorl cmp push xchg and loope ficom fwait jo imul cmpsl dec jno aaa hlt call xchg jbe les arpl je gs nop xchg or popa or pushl fcoml imul out mov (bad) (bad) push dec jg pop subb and fstl cli (bad) out hlt sub incb add fmull sti mov mov cmp push fucomi add adc mov adc sub inc enter sbb movsl scas test and (bad) (bad) lcall push enter rolb cmp cmpsl add int3 push loope out xchg cmp repnz lcall loopne push mov push jno or out outsl xor sbb add mov jmp leave fdiv pushf jp in cs sub fnstsw imul test sbb insl fisubl fdiv jno mov in cmp loopne push pop xchg test inc out stos push mov inc sbb sbb bound outsb (bad) ffreep mov mov sbb lds cmp push leave ja daa cmp mov bound rol xor jo pop fimull add mov cmp fs std xchg hlt push fcom pop aas push and clc (bad) jg leave pop mov insl xchg imul pop xor cmp add jmp ljmp cmp jo lcall in gs das push jo lods ljmp cmpsb add fiaddl movsb and add scas sbbb bound inc push test pop sub lock inc test add push (bad) (bad) mov mov addb push jp jo cmp rolb das jge ss push push push mov (bad) jg and pop addr16 fisub push insl cmp out xchg cwtl (bad) push cld inc in mov xchg ljmp push aam fisubr jle jp push jmp addr16 movsl mov movsb lock bound mov inc xchg mov (bad) neg pushw outsl clc das bound pop sbb and loop clc lretw in mov out jbe lock mov mov pop enter or mov rcr out adc incl or jnp xchg xor mov pop dec add addr16 and xor mov pop aaa dec cli scas sahf or mov sahf into rcr loop sub jecxz mov int jnp test or inc xchg push push add inc adc or rolb or pushl clc jb sbbl inc ret cmpsl push xchg mov cltd mov dec fstp ljmp call aas insb sub lahf add mov sub mov out and bound push add cmp hlt or inc ds mov sbbl decb xchg sahf clc inc mov sbb pop mov aad lret fmull mov adc lcall inc (bad) jbe sbb gs fcomps decl or add and jg lock inc mov inc insb mov xchg add jg dec adc nop sbbl and xor ja push (bad) scas das ret out or data16 es cmp (bad) (bad) pop (bad) jbe or mov add xor enter pop das test sub enter sub loop inc pop out mov xchg or jb pusha push xlat outsl mov subb les push sar les hlt push outsb sahf test pop rorb pop fsin dec mov repnz rolb inc es mov cmpsb cmp mov lock push daa cmpsb add mov rcrl ret addr16 adc call sbb xchg or sbb fwait insb mov fwait cld insl xchg cli stos fnop sbbl data16 test jg,pn dec cld shll adc fcoml pop mov adc pop mov sbb (bad) mov cs adc roll inc cmp push cmp into dec and adc cmp ret mov mov (bad) mov loopne aam and ljmp sbb push out (bad) and ret test jns mov loope loop inc rorb pusha xlat (bad) rolb shrb arpl (bad) sahf jnp (bad) adc or sbb adc dec movsb shrb jle orl (bad) mov and add ljmp xor sub sub or dec rorb sub divl jo fsubl (bad) jmp lods lds popl xorl add or inc int mov inc out ret cwtl push inc in stc daa jno ja sarb faddl int imul mov fdivr push (bad) mov icebp mov push fwait xchg fdivrs jbe repnz pop pop adc sub sub outsl or inc call pop mov and mov adc xchg (bad) (bad) ljmp sbb aam or rorb sub cli test pop jnp push repz es mov fildl inc inc jb push cwtl (bad) lods (bad) (bad) dec lock sub incl mov ljmp lods stos and dec push mov xor cld (bad) (bad) mov and sahf mov (bad) add sbb outsl inc push add movb add fstps clc es hlt cmc test adc jmp fdivr test dec or cwtl mov add and pop fbld jmp mov sbb xchg inc push add and je cmpl loopne (bad) aaa sbb addr16 inc sahf fdivrs ja or mov dec (bad) lcall pop fcoms mov cmp pop insl push aaa fimull xor loope popa lret dec add pop inc fwait shrb push fldt dec loope xor cld inc push pushf in push (bad) cmp bound lock ret and pop addl xor stc adc enter cwtl fiadd and clc (bad) (bad) lcall add push rorl insl lods add sti mov or xor sub ljmp and fs sbb jecxz inc lea incb adc stc push or xchg lret or decl inc rclb pusha dec rcrb shrl gs pop les mov das dec (bad) lock push popa sarb push es mov jmp popa movsb xor fistl dec lods push push dec (bad) ljmp add int3 jb ss nop outsb scas movsl iret out (bad) ljmp mov data16 mov ret mov jg add fistl not (bad) (bad) (bad) sti out xorl push lret mov xchg mov jae or mov jg adc js sbb or outsb and (bad) jg insb and test jae jg sub ror imul mov jg scas fiaddl mov divl mov adc out mov sub dec jge xor inc mov lcall fsubrl mov in xchg cmc sbb jg push jmp ja js scas jle rol jle (bad) lcall test xchg gs or mov jge lahf push in (bad) in inc cmp push into movsl insl cmp sbb dec int (bad) jg mov roll adc cmp aas out mov mov (bad) call add mov pop lods jg mov cmp adc inc push lea xchg xor clc out divb mov dec mov movsb mov sbb xlat mov dec ss xor sub cmp inc jp imul mov orb in (bad) sarb inc stos or pop add test sub fwait inc mov loope (bad) pop mov inc out inc loope nop push and lahf int3 outsb mov sbb int3 cmp cs leave add xchg aam mov xlat add (bad) call or insl cmp or data16 test test jg repnz xchg adc jnp pop ret clc addr16 movsl cltd or push ret sub inc (bad) pop cwtl mov fsubs cld mov repz mov cld jg adc loopne push aad jns mov and jg pop sub daa pop mov fidiv rcl fild pushl cmp out add pop xor jmp or clc aas dec ret movsb jne popf insb pop jbe mov adc or (bad) (bad) incl loop inc push add inc jo addl pop sub mov sar out mov enter or (bad) jmp ret das jmp add inc out push ret xor sbb adc xor jbe pop mov jae in sub (bad) pushl push adc mov mov pop jp movsl stos dec mov scas and cmp sbb or jmp movsl (bad) and xchg mov mov or jp jbe repnz nop xor sub (bad) fistp ljmp push sarb adc push fs jo (bad) cltd mov xchg pop pop ret (bad) cmp xchg push mov cmpsb cmp mov dec in jle sub test push xlat inc jo aad mov cmpsb fs (bad) mov mov (bad) mov test cli scas adc push xchg dec xchg pushl mov cmpsb sti mov cmp int cmp xchg (bad) cs icebp push (bad) (bad) jmp roll stos push std es adc xor jno mov mov icebp dec sub (bad) repz movsb jo add and mov bound stos pop ret je sti lea cmc aaa std repnz outsb mov sbb jmp lahf xor in xchg rcrb mov jg push push cli aad mov mov fdivs (bad) (bad) mov movsb mov popa inc sti jge test ds rcrb add xor (bad) pop out xchg dec dec cmp xor fsubr mov or dec jmp nop std mov push sub out mov sahf int3 and cld lods xor movsb add adc fwait and jo call rorb and add lds imul nop outsl stc inc lcall and sahf (bad) mov dec rorl scas aad lret cli (bad) js scas lret cwtl inc ljmp inc jecxz adc (bad) (bad) dec mov pop nop or fxch mov jnp sub in xor jg std call jns lcall outsb push cmpsb pop cmp mov stos jmp cli imul adc test sub daa movsl ss push push jbe ljmp add scas inc adc and jno xchg faddl dec pop mov je enter mov inc lret pop xchg and cmc jg jmp popf ds push push mov cmp ret sbb jb lret pop mov push xor add popa fs in xchg mov int3 out jp cmpsb sbb mov sbb lds es fstpl mov pop fsubrs scas testl mov js jle mov add xchg push sahf mov mov or decl adc jle dec sbb cli ja mov gs add mov adc lcall loope aas popf lcall adc jle fst lret sahf push dec and lea stos arpl and std inc les in push stos xlat ljmp sbb scas pop lret fisttpll out inc mov mov jmp shlb hlt inc add mov dec (bad) add add or and add inc add xchg cmp in mov jl fisubr xor (bad) push int out inc inc loopne push inc mov lods push mov cmp add add jp add jb loop pop in movsl xchg jmp mov and fisttp pop mov pop outsb in adc inc jmp push push ret (bad) es sbb sbb push mov xor add sbb mov aad mov xchg icebp call bnd or add mov add jne out sub (bad) scas jo sub outsl int inc int cwtl xlat fdivl lods inc (bad) lcall cmp fimul pop push fnstsw fmulp push adc and pop pop mov jno xor mov xorl jle or leave add rorb and stos js gs out scas scas bound scas mov arpl add imul sahf sbb (bad) fcomip (bad) sti shll inc pop add shlb imul sbb mov insb pop mov dec jl or (bad) jmp icebp ficoml sub (bad) int add popf icebp jecxz or outsb fmull adc ss sub insb cli loope cmc insl jno,pt lods lea adc lcall inc pop (bad) xor loope jne and fbstp mov fwait cs in add adc dec sbb inc or fdivs sub addl out xor cld int push (bad) sahf cltd mov jg outsb into or pushw dec aad add subb andb rorb mov aas add adc xor or cwtl inc ljmp or pop xor (bad) mov ds add lret out mov xor mov push lcall ret mov mov add or add jae and sub orps sbb enter xchg gs daa pop cmp or push mov in shrl xchg jge adc inc cld adc (bad) cld add jmp subb aaa cld add aaa push lea cli mov addr16 or fnop jbe fsts or lcall rcrb mov push cmpsl cmp and xchg insl xor jg,pn (bad) subb hlt inc or sub pushf (bad) lcall cltd and loopne rorl xchg xlat (bad) mov dec (bad) ljmp test sbb adc test push jp jae aaa inc (bad) iret (bad) (bad) (bad) (bad) clc inc cmpsl mov cld inc ds out inc adcl fstps adc cmp add mov mov ja push inc (bad) pop or dec decb pop cld pop dec loope sbb mov sbb (bad) jg inc mov jbe or xor jo call push arpl (bad) push mov mov inc mov push mov xor push les mov jno sub xchg hlt adc pop imul sub nop pop dec cmpsl mov xor (bad) decl adc fidiv mov mov sub fild cmp flds mov xchg outsl (bad) incl xor icebp fdivrs ret nop out pop push insl pop mov clc (bad) (bad) incl icebp sub nop ja sub lods rclb nop cmp jl mov xchg mov (bad) aam cmpsb (bad) ficoml sbb sub push sub mov pop outsb pop mov xchg fwait mov sbb orl loopne push xor (bad) jg sub imul int3 jae sahf push in mov fwait jle pop aaa pop adc add push xchg dec push lret aam shlb icebp stos jne inc out cld add cmpsb cld sub xchg jg das es das sbb stos movsb outsb cmpl cmpsb mov cmp xchg and jmp mov xlat mov cwtl push mov rorb xor bound mov (bad) lcall add lret call push fsub out bound das mov fmul jo int (bad) sub shrb mov add and and or push inc add jg cmc in xor xchg out (bad) fwait or cmp cmp (bad) (bad) call movsl jno mov addr16 fdivs (bad) mov mov adc push (bad) cld pop mov lods enter loop stos idivb (bad) call vmovntpd leave ja push xor pop (bad) lret mov mov sub pop rorb pop cwtl jno out das add fisttp sbb mov in mov pop push mov push outsl pushl movsl nop inc mov (bad) out jne fimull lcall (bad) mov scas adc sbb (bad) sub frstor adc (bad) (bad) fcomip divb loop jecxz ss inc jbe cmp fs adc mov loope test divb ja cli fildll test fisubl jmp push and sub sbb mov imul shrl fs inc fmuls adc dec inc jno jg (bad) cmp fistl fidivl jp mov cmp push mov mov pop xchg push (bad) pop nop inc in stos ljmp mov adc notl add inc sub mov jae (bad) mov xchg add mov and out jmp (bad) (bad) (bad) jmp jns ljmp and stos (bad) dec (bad) lods movsb xor frstpm(287 cmc lcall pop mov pop int3 inc add pop ds push pop clc inc loop push fsubl mov in sbb pop rolb pop icebp mov fiaddl (bad) icebp mov mov call icebp dec (bad) loopne mov enter adc adc add fadds out add cld cmp xchg ja lds mov call cltd les lods cld sbb push xchg aaa dec mul inc fisubl (bad) (bad) cmp lcall adcl clc mov cmp loopne (bad) outsb sub jnp call sbb mov sbb shrl mov jbe shrl xchg (bad) loope sbb es mov repz mov (bad) mov (bad) dec (bad) xor dec or shlb bound pop xor incl cld in imul mov loope imul idivl cmp or and mov fcomps push (bad) jmp loopne xor jb mov add adc xchg call idiv (bad) jg xor sub inc gs or fnstenv pop inc call adc (bad) mov push js and xor clc ds jns (bad) sub or (bad) bound lret xor sbb ret push cmp shl xor dec lret cmp or scas xchg bound and hlt je xchg nop pop aaa inc cld decl jge dec push popa les lock pop mov sbb mov sarl fs idiv (bad) jmp test fisttp stos push mov in loopne pop and ljmp adc inc add jmp es pop jbe mov inc in jecxz inc stos lahf and and sub mov shll jae inc in push dec bound aaa or jle pop inc or fiadd (bad) incl imul add (bad) jno jne or add mov (bad) fcomip push push test mov (bad) xor int push ror call pop out jl sub gs push cmp xorl rol call or rol or cmp dec mov sahf push mov out push adc jbe dec cmp push or cmpsl (bad) mov mov lcall (bad) jmp sar aam gs xor pusha (bad) (bad) aas decb rolb jne mov or pop xlat xchg cmp aad mov pushl jmp push mov jo cmp nop mov xchg and ljmp ret jb push xchg test aaa and push gs stos outsb gs int (bad) decl cmpsl push sbb dec pop cmp (bad) cld and xlat loopne rcl inc dec data16 and sbb data16 inc or push (bad) int3 xchg and inc lock bound mov movsl add out push psrlw mov jns sahf std into bound loop pop mov insb jnp subb mov roll jmp lahf xor imul fisttp mov call lds xchg mov sarl adc mov cmpsl jb inc cmpsb lods ss (bad) fwait xchg outsl mov pop push aaa sbb mov nop push (bad) jge mov adc xor aaa and inc cmp addr16 xchg mov incl clc xor push mov adc sbb int (bad) jns pop push mov jle cmc decb sub mov mov and mov sub fnop adc enter mov fimull cmp cwtl sbb cld sub (bad) jg sbb enter je fs add outsb mov adc (bad) decl das add and mov xchg inc inc es (bad) out cld inc out daa push xchg adc imul adc ffree cld nop pop xor (bad) rorb out test push cld cmp int mov adc and sbb repnz aaa inc daa pop xor (bad) call dec dec cmp jae xchg or ret ret movsb ret sbb insl or inc aam mov and adc nop and outsl mov in mov add test bound mov or add inc (bad) add sub mov scas sbb dec clc out adc xor xchg cmp push push push clc incl mov (bad) icebp inc nop jp adc xor test test int3 mov jo or jg cld mov hlt or addr16 int ret ja clc jg (bad) roll xchg rcrb sbb lret (bad) push xchg test dec jecxz enter fadds es push fadd shrl sar or shrb or std push call mov (bad) incl insb push cmp xor frstor paddsb lcall cld iret cmp stos inc mov fcoms mov add sub dec mov jbe and push repnz push jno xor mov aaa insb cmp xchg xor jp mov pop insl sbb (bad) mov scas mov pop out and int ret jmp or ja or loop dec into dec push cmc scas xchg test in jp inc cmc mov mov add adc movsl jg push pop push jne (bad) jb push inc lea aas jns aas mov push addl adc hlt (bad) sbb lock push incl mov gs sub stos jg mov sahf addb dec mov add add xor push movsb or (bad) jmp or movsl add ret inc push loop mov mov pop adc cmp lahf jno mov nop addr16 mov fisubl dec jl les inc mov jmp (bad) (bad) pushl mov inc into pop inc add sbb cld and jge (bad) jmp push add inc inc push test adc or iret sbb cmpsb and dec lock outsb push aam cli inc sti ret push in cmp scas and (bad) mov jns or mov pusha addl sbb call inc push push imul mov inc mov call mov cld or dec inc in shl adc loopne inc repz jae mov push (bad) ljmp add addr16 andl insl adc (bad) or add mov nop pop in adc enter test call or pop push mov mov (bad) arpl call test sub xor xor lock sub pop pop outsl daa adc lock lea js test ljmp inc push inc (bad) jmp movl (bad) jg rcrb int3 les sbb mov loop ljmp ljmp cmc xor addr16 mov out mov sub jmp jb repz sbb push ja pop frstor loop (bad) (bad) (bad) jmp popf pop je int test push arpl shll mov xchg lock and sti (bad) int addr16 in mov xor test inc dec mov mov sub (bad) mov dec inc mov roll call sti into iret jle fld (bad) jmp shll stos stc cld xor sbb push mov mov bound mov pop das ja lcall sub inc xchg push dec insb pop sub icebp cmp sub add ja les mov add jl pop icebp dec outsl xchg sti jb ficoml mov decl loop sahf adc mov sub fnsave movsb bound cmp add fdivrl scas outsb ljmp sub mov jnp out dec push icebp lret sub or or xor das aas sar ljmp push fmuls sub push cmp add mov (bad) pop popw sbb xorl popa imul in mov sbb mov scas pop test (bad) cltd and outsb dec (bad) jne call mov lahf sbb xor adcb test sbb gs stos addl (bad) (bad) decl cs in or xor and add fwait mov pop push loopne lcall rolb lahf (bad) fsubrp je xor repz loopne xor push cmp push pop incl or out lret cmp leave clc jmp xchg mov mov roll mov es dec lds xchg lret xchg cmp mov shll sub sbb mov add int aaa or loopne inc xchg or pop orl mov out and sbb fucomp or inc loopne (bad) decl cmc faddl push arpl jae (bad) lods lea dec fbld adc sbb mov sbb inc inc pop popf call jmp and mov xor pop push (bad) (bad) (bad) fbld push and adc sbb mov pop cmp in push imul nop lock add xor (bad) ljmp inc and cmp mov ret popf adc shrb rorl cmpsb adc cmp push rcl adcb aaa (bad) decl in cmp lahf lret dec int sub sbb dec inc mov flds mov stos adc or pop xchg aam jmp push add xorb (bad) pushl leave pop sbb cwtl jae into mov adc dec ret (bad) lcall inc push pushf add add divl mov mov adc dec inc insl sbb scas mov mov push outsb sbb add lcall (bad) cmp test mov test push cmp add mov mov mov dec jb movsb and (bad) cmp xlat jno cli jle adc (bad) push pop lea fdivs xor add mov insl mov das add scas pop adc (bad) ja rcll jo imul movsb lcall mov xchg repz and push rol lahf push or xor (bad) fistpll inc sub ljmp xchg inc mov test popa xlat scas cmp mov clc (bad) pushl (bad) (bad) call outsb ss add into sar inc in adc dec pop push xchg loopne add and loope data16 mov mov adc adc fsub shrb dec clc or test lock xchg stc sub push test and mov dec decl push push mov mov dec sahf adc pop lock leave mov std (bad) ljmp mov pushf adc imul imul aas cmpsb adcl (bad) and sub mov (bad) ljmp (bad) pop and cmpsl mov sub (bad) push jns add add mov pop dec int3 push out jg aaa out lcall jns daa adc pushw test push leave (bad) xlat aaa add jbe mov clc dec inc cmp jo rcll push out dec mov inc ljmp mov sbb sahf inc in fsubrs mov or sbb rclb sub (bad) and pop jge rorb mov (bad) mov xor mov fild xor rclb call jbe test icebp pop add lds rolb jge pop je sbb jne ficomp pop lods dec xchg sbb cmpsl aas decl jo add dec mov sbb imul dec lret addl insb outsl adc push lcall aaa out xor fild xchg insl sti add test ljmp pop dec insb icebp pop add mov jl mov xchg adc jne and es or sahf mov sbb mov pop lcall inc or push dec das stos aad xor and clc stos dec loop inc pushf inc cmp cwtl jbe test xchg movsb inc xor adc (bad) es inc popf and (bad) incl js and mov sbb outsb fstps jg repz dec pop jno xchg adc test loop nop dec add or ret insl ljmp jge push sarl out repz arpl xchg in mov aaa in pop ret (bad) and dec cmp inc cltd lret lock fs or lret (bad) repnz add xchg mov ss (bad) out adc sbb daa ljmp std add adc stos cltd mov addl push xor scas call jge dec inc sub (bad) mov (bad) incl dec popf jecxz mov or jl jb daa test (bad) sbb mov lea mov add mov mov xchg push jecxz push cmc or sar lcall popf cmpsl xor push into mov or shrl adc and iret sbb movsb jle sti adc mov push mov jb mov loop shlb (bad) (bad) ljmp and bound jmp (bad) nop inc inc mov out (bad) jp and pop sub mov (bad) mov add sub lods pop xchg mov ljmp mov push mov shrl adc call hlt cwtl xor pop fucomip cmc inc and dec scas gs int jg sbb mov out addr16 (bad) movsb mov aam cli xchg add stos ljmp mov and push sahf mov fwait add scas xor or jbe push clc mov adc jge jl add clc pushl adcb (bad) inc push pop adc inc bound push gs sub fcoml cmp enter pop inc adc push ja in cmc mov push cmp out stc sbbl or movsb (bad) pushf jl (bad) out fidiv push xchg ja packsswb inc test sub mov mov push scas ja pop sub cmpb fwait jge push ret (bad) lcall push push xchg mov dec sbb pushf jns and sbb (bad) mov jmp add mov aam aaa out cli push pop int3 or fstpl sbb (bad) mov popa imul testb adc into gs subb inc inc nop add hlt ja mov sar ljmp int lock jmp add aaa lods fstpl repz decl scas push jb fs jmp ss xchg jge outsl rorb mov pushl cwtl inc dec add mov inc je mov (bad) mov xchg xlat mov das lds jo add js lahf cwtl out push add xor or add push out xchg add lock fsubrl xchg xchg mov ljmp add fs lcall push xchg push arpl xor inc and andb xor nop sbb xor mov jp mov pop clc pushl fs subb mov pop pop inc loope xor aaa cs xchg in sbb mov dec mov add dec into test clc incl mov psrlw jg sbb pop gs out jl loop (bad) repnz push push jp stos or pop push pop cmp mov out loopne pop in pushf or jo sbb prefetcht2 cmp fbld cmp (bad) pop mov repz sub imul xor jg push rcrb xor adc stos xor mov mov stc and adc xor popf sbb (bad) hlt addb or jg insl pop and jno sub rolb fwait outsl ljmp (bad) mov mov mov nop sub pop stos shrl loop popa cld push loopne test inc pop out mov arpl cld lcall call ds pop add jbe pop orb and das inc add xor ret out xchg test sub stos ds push popl and loop test mov jne mov sbb cmp mov aaa sbbb stc movsb inc (bad) (bad) (bad) incl les push mov mov cmpsb inc ret or sbb idivb in out push ss insb (bad) mov jp xor jo lret movzwl stos orb mov adc push jg cli outsl pushl jnp dec sbb sbb sub mov xchg lods (bad) and mov xchg inc nop push mov fld outsl mov dec and notb add stos (bad) xchg mov jmp mov cmpl mov and mov mov loop or icebp stos (bad) push push icebp inc mov jge call or scas mov sbb sbb fsubrl adc sbbl test and push xchg iret jnp (bad) sbb jbe out jnp pop shlb popa ret movsb push int fcmovnbe xchg fcmovb push andl (bad) call xchg call aad stos call sub out fcmovnbe jae push and cld (bad) (bad) pushl push xor sub and push add mov shrl sbb and daa dec pusha sub add jg jle cs loope pop mov pop adc out fbld faddl xchg or pop push push or scas stos dec xchg dec test dec or pop test cwtl fadds lds add out clc lret lret sub cltd lods dec fnop xorb (bad) add mov inc in cmp data16 subb loopne jnp mov arpl jne sub aaa rcrb sbb push pop cmpsl aas xor cld mov adc leave or xchg mov jg out imull jge inc fisttpl das clc loope xor fnstenv out fiaddl es jg jg mov jecxz mov hlt push dec movsl and cwtl les lret push mov (bad) call ret mov out loopne push mov test mov push pop clc cli mov mov lods jl mov push ljmp in andw inc int lock jmp cmp popf push cmp imulb lcall and push imul scas fs sbb sar mov mov frstor mov cmc ja int3 (bad) pop sbb push jmp std int into push cmp les push hlt outsb mov inc enter aad clc inc mov sti cmpsb add clc pop icebp das (bad) scas movsl mov push int3 mov and push mov shr dec imul jnp shll stos pop sub ja sub mov xchg mov pop clc (bad) cmp imul (bad) jne aas adc in add adc rorl pop mov das test fidivl xlat dec jge fwait idivl mov xchg mov xor loopne sbb hlt or pop (bad) ds add add add cmc or xor inc adc mov cmp sar (bad) (bad) (bad) lcall outsl push push imul frstor xchg add insl mov mov xor (bad) jmp jg add outsl loope mov adc inc mov (bad) sarb (bad) ret cmp mov fwait jle jl adc pop nop lods daa and or aaa ret mov fstpt cmp int (bad) lahf jge xor adc cmc fwait stos lods (bad) fdivrl dec sub call jg jb and add xchg out add cli mov mov or mov push push lock sar scas jg es (bad) jne inc adc aas cmp decb add sysexit loopne icebp mov mov push add out loope,pt es pop mov mull movsb inc xor loop pop sbb outsl cmp sbb pop jbe mov mov and cmp repnz fcompl mov cld mov or xor pop lock xchg sbb and pop push mov (bad) (bad) mov adc mov pop inc enter cmpsb jl push cltd cwtl loope mov fcmovb adc mov ljmp lcall inc push mov sbb or or loopne pop sarl cld add push cld cmp jmp ss mov inc inc mov arpl incl outsb push movsb cmp loopne std jae loope sbb ret jl dec cmp fcoml xchg (bad) jg mov or sahf push lods mov rol mov lock xchg pop call mov pop ljmp sbb decl mov or mov out add (bad) (bad) mov add add and and dec js pop aam incl std dec daa lds push movsb pop jle inc jp stos dec loop les into daa cld and (bad) pop push cmp ret sbb add stos les clc (bad) mov and in lret mov jg lock mull int3 scas pop nop mov jg adc adc push in leave add or out lock adc ds inc lcall (bad) ljmp sbb cli scas or inc and mov add aas les push push dec loopne or dec cmc push loope and data16 and sbb cmpsb sbb out sbb sbb loope mov ja or aam push inc add jb inc fnstcw add (bad) pushl xchg add add jno mov cli jg push sub fldenv pop les inc sti call daa and cmp lret add inc pop mov and inc mov rolb loop (bad) push sbb (bad) cmp rcrb dec xchg push loop je cwtl jae cwtl ret xor mov daa hlt dec popa lds sbb xlat cmp adc or mov movsb or xchg movsb jo mov fisub fsubrl les cmp mov or mov (bad) mov es jle sbb ret cmpsl lds pop sub (bad) fwait dec push test xor loope sub dec ljmp data16 jmp enter add fwait or push jl mov cld push jnp cmovb out std add out mov sahf daa sarl pushf push addb sti and or lret loopne mov pusha and test mov push push ljmp lock mov enter iret sbb lods (bad) cltd (bad) add adc xorl ss (bad) fbld push and rorb (bad) rcrl cmc decl adc outsb (bad) or mov movsb das imul inc mov cli idivb mov std mov xor int3 xchg jb orl outsl fxtract xor jmp jae mov add add mov in ds (bad) jae add fwait (bad) lret out adc mov dec fcomps iret sti movsl pop push ss or inc cmp dec stos xor and imul pop mov adc adc cmpsl jl lcall orl push jnp dec adc (bad) ret sar (bad) dec add inc mov xor imul jnp,pt mov ja (bad) push adc in je xor daa ss jle sbb mov dec lret lcall dec insb mov enter mov popa push push cmp pushl loopne sbb testb aam inc loop cmp in push mov ret das xchg mov in sbb scas mov pop and mov or call dec rolb std cld mov faddl outsl fwait jmp subl mov lods push (bad) cli (bad) (bad) jmp fsubrl pop push mov mov jmp repnz test push mov add sbb inc scas fidiv mov cmpl loop and subl cmpsb popa (bad) mov fcomip repnz (bad) mov push ret add dec insb ja (bad) (bad) call aaa (bad) int3 call add lods mov test imul (bad) dec sti ja cli ljmp add loopne cwtl pop or xor leave fdivr pop lcall std mov push decl nop fdivs bound arpl dec sbb mov scas add mov decl out dec imul int3 or test (bad) add fwait dec test daa inc clc jg test inc call pop and xor pop lock loopne add lock scas fimull imul xchg popf jo cmp sbb decl mov lcall lahf ja scas clc ljmp outsb jb sub minps imul xchg pop inc fsubl (bad) lcall scas rorb (bad) mov addl loop sbb clc inc lcall sbb cmpsb sti adc mov insl cmp or mov mov add in add lcall jge sub push mov xchg loop or (bad) lcall or and add inc (bad) or xor stos xor add out ss add rorb (bad) cwtl rcrb and jg mov mov mov adc call push dec dec mov sbb adc stos lret test in sub push ret bound hlt insb sbb xchg sbb pop lock mov scas (bad) jp sar dec sub ljmpw pop add jg scas (bad) shlb out insl push (bad) das addb or pop gs push ret or add (bad) fistpll cmpsl cld xchg jmp (bad) xor mov (bad) decl lea pop push cwtl mov lar sbb imul push jne jg add xor pop add add mov ret cmpsb in cwtl rorl repnz jg lods (bad) mov adc out push lea or popa sahf xor (bad) ljmp pop mov fwait mov fsubrs cld lcall xor data16 and (bad) jg or push push js imul insl nop push adc outsl mov xor jne push lcall mov into sub push stos ja (bad) sub add sar jg dec xchg je mov pop aaa testb je mov mov rolb or test push sar mulb xor aaa mov xor mov jnp std ja push add jp sbb rcl aam les fadds adc imul jl jg inc sub std push std in inc arpl push pop mov sbb ljmp mov fwait pop cwtl in ss call ret xor mov mov cmp adc (bad) jg add hlt adc lock sahf pop inc (bad) (bad) fcoms (bad) cmp sub lods fcom les call sub push cwtl jae pop xchg int3 mov bound xchg cmp mov mov add and enter fdivr outsb pop incl clc inc sbb fsubrp (bad) lret adc mov lcall fisttp sbb rol jo xchg loop (bad) mov fwait loop push cmp nop inc lock ljmp xlat (bad) xchg cmp push shrb inc lret xchg cmp test movsl push dec sub aad jne (bad) stc sbb divl rcrb subw push sbb or mov inc push daa (bad) scas xor mov dec jbe cs loopne mov (bad) pushl inc fcomps pop mov imul mov mov xchg add fwait and icebp popf sbb cmc mov (bad) xor adc lret inc lcall mov int3 mov and (bad) jmp sbb xchg or imul js cmp or cmp test nop xor xchg inc add add rorb addr16 (bad) out push fsubp cli xor std (bad) (bad) inc mov cmp cmp cmp sahf bound (bad) adc fistpl adc xor cld mov mov ja cltd mov les test push pop mov cmp add add dec push sbb push mov dec cmp cmp add pushf inc jo mov push cmp lock adc inc jl or stc mov aaa cmp in cmp pop adc movnti adc movb sbb cli push les cwtl add and fbld push dec or cltd popf sbb je mov lods (bad) lock cmp (bad) loope dec and mov movsb or int3 add and pop xchg mov jle ljmp test sub inc sub cmp fadds gs pop cld sub cmp and out nop enter xchg and insl xor (bad) dec inc call dec sub mov roll lcall stos pop mov aaa mov sbbb mov incl push les shr clflush popf nop and mov movsl clc ljmp nop dec stos into inc pop mov inc sbb and pop dec (bad) and fildl mov decb mov dec add adc mov pop mov push ss pop data16 jmp add pop pop sbb pop in mov sbb pushl std push inc movsb outsb add xor mov jae icebp or push xchg lcall (bad) addr16 aas daa xchg clc scas and ds push and push dec clc bound xchg mov bound (bad) jmp xchg roll and dec inc pop and outsb add loopne mov aas aam imul es jg ljmp xlat mov cmp push lret inc loope cmc or pop push adc outsb pop imul pop lcall and clc jl mov cmpsb iret inc jl mov push xchg xor xor pop mov push sbb sbb inc pushl mov jo movsb mov xchg inc mov pushf arpl outsl cli inc add loope sbb outsb push sti xor adc dec daa jmp push xor push fild jmp adc pop sbb mov adc incl or test in fs roll xchg push and push int3 dec or addl ljmp (bad) call fildl pop test lods jmp aaa test and xor leave inc in cmpsl addb aad dec push insl xchg xchg test (bad) xor or into sbb cli incl adc add outsb mov xorl mov js mov or inc cmpsl ficom ljmp jb ja or dec ret push dec loope mov dec daa add fist loop inc stos lret sub fstps push sbb das push add cmp sbb and or mulb or cmp push cmp incl sbb add push inc mov leave mov and data16 shrl push mov nop mov fnsave mov mull out mov push (bad) pushl ficomp push sbbl shlb push ja decl call fldenv cmc notl ret inc clc add outsl adc cmpsl sbb sub (bad) adc inc nop and mov pop in mov (bad) loop lret lock jbe (bad) adc lcall push orl xor in inc daa test leave cmp adc mov aaa cmp push (bad) stos inc int3 pusha jmp pusha xor or sbb rol mov push test cmp sub out lock shr sbb jns cmp xchg mov xchg jo add pushf mov dec test lods in adc fbstp jp stos xchg pop fsub pop push loope adc xor (bad) (bad) aas in mov pop cmp in lret (bad) adc or addr16 push cli add popf and (bad) push jbe insb mov ret mov inc js shll add movsb jp sbb dec mov mov pop jbe mov loope (bad) add mov pop inc gs js mov xlat testb iret add shlb aam add and and cmp gs sti daa xor ja mov cmp cmp push in clc (bad) out cli dec cmc add iret xchg jb mov loop fisubl add jno in mov test xchg insl jecxz push outsb mov inc aad cli incl xchg xor mov xchg sbb jbe lcall xor cmp pop orb dec aas imul clc cs jge orb incl cmp fcomp jecxz and cld sbb adc aam dec call (bad) xchg push test ret hlt push push jle std mov sub loopne lret clc push mov test cmc cmp lcall jne push sub fcmovne pushf sti cmp push incl add scas arpl fwait in test frstor lock flds or cmp dec popf test sub mov out or cli outsl pop in push sbbl nop ds je xchg insb pushf (bad) sbb (bad) xor (bad) jmp adc add adc sbb cwtl sub adc lret add or lcall pushl or xor pavgb arpl add add (bad) std push push les insb rcrl sbb add jo insb inc insl loop cmc (bad) call push mov sbb test neg mov or inc fisubrl iret (bad) sub adc imul (bad) je dec cld and cmp sarb adc mov int3 shr mov mov cmp jg or mov mov mov gs cmc mov mov jae push cld xchg loope insb aam jmp jg repnz jg cmp xor int xchg xchg outsl (bad) (bad) lcall sbb scas xchg pop sbb mov arpl pop sub scas in ret xor bound jo ja ret mov mov adc jmp call inc hlt popa test fisubl or test inc dec mov xchg movsl into mov mov pushl pop ret (bad) (bad) bound mov cmp lcall dec std ds add les cmp fs jnp mov push fiadd adc int3 int loope movsl ds add (bad) dec leave mov sbb push push ss test jno arpl xchg add sbb fcmovb mov into mov inc stos add mov movsl mov cli mov pop xchg fcom fsubr jmp push cwtl fcomip (bad) incl push stc out mov lahf fldt cmc popa movsb jbe mov cwtl sti sub lcall fcomi out in inc ss (bad) idivb inc fdivs aad popa test (bad) sub fldenv sub repnz xorb addr16 pop ljmp shrb adc mov cld dec mov adc mov dec xchg idiv aaa fldcw and packssdw adc incl fs inc lret shll pop mov adc jbe mov mov dec loopne mov inc mov in insb xchg gs incl sbb jns push imul in mov (bad) push popf lahf rolb movsl mov xchg (bad) incl inc and mov or movsl push stc xchg mov fbld adc (bad) jb cmp pushl xchg mov cmp push outsb xchg or mov (bad) out movsb lock xlat inc (bad) (bad) fbld xor sbb popf push mov fldenv lcall shlb mov xor add add add (bad) push pop dec mov outsb sbb sbb cli sub jle enter add jo jnp sbb sahf sbb scas (bad) sbb outsb sub pop loop ds push xchg loopne data16 inc and or (bad) addr16 call cmp lods xor mov (bad) xor ds jg add inc xor data16 loope adc add xor dec jae lret (bad) push (bad) dec push std movsb int3 pop iret test mov stos xchg sbb data16 mov dec ja (bad) ljmp sbb sbb xor rcrl test decl dec mov std dec outsl cmp (bad) lods loop clc scas push or xchg mov outsb out push add fild inc dec orl int3 add or push cli pusha push and jle lea test or add fisttp je mov or mov inc loop mov add call cmc mov jg or das rcl push (bad) pop dec popa loope clc xor (bad) jns rcll and jg hlt inc inc mov clc jnp aaa and (bad) jns cmp add dec dec movb lea jg fisttpll add fisttpl mov mov jnp (bad) lcall jecxz fstpt movsb lea fwait push push stos out adc mov dec clc (bad) je dec scas sub rol jmp (bad) mov cmp cwtl inc xchg nop dec (bad) dec sub std pop shrb das push rorl xor imul faddl (bad) sbb sbb mov subl xor add xchg (bad) inc cwtl jmp adc pop push mov or mov outsl xchg xchg add scas clc stos ds mov dec ret pop mov imulb (bad) push ret in add mov out rolb test jne insb in adc and add mov es jp (bad) (bad) (bad) (bad) cmp fwait mov jbe les scas sbb out cmp xor inc fiaddl outsb add inc push nop add and xor add (bad) mov pop movsb mov loopne adc pusha mulb outsl xor rol ret pop xor or cmpsl cld fwait dec pop ret cmp mov shlb jl xor push (bad) cld pushl mov subl mov dec pop (bad) decl jmp cmpl iret mov (bad) (bad) ljmp adc test add xor mov push stos pop inc xorl sub rorl sbb jb pop andb push mov test loop cmc and sahf mov in sbb (bad) and xchg push lret pop adc mov pop mov cmp movl scas jbe add fstpt inc dec push aaa cmp (bad) (bad) mov rcr add int loopne pop ss roll pop pusha (bad) in adc and incl incl rclb movsb adc insl faddp roll movsb or (bad) insl add test adc outsb repnz data16 js sarl pop xchg (bad) (bad) fucom and xor js add (bad) dec inc mov xor cltd mov les in rsm adc je xlat mov sbb sti mov fildll mov arpl mov pop mov shr lahf inc add mov loope cmp xchg fsubl mov pop adc cmp loopne push sub rorl (bad) fildll lret out and or bound inc xlat into lcall stc insl int3 jg repnz lcall call pop dec in pop cs scas add (bad) (bad) ljmp (bad) sbb jns jge add jecxz adc ss hlt pop loop inc jge test push sbb and cmp xor (bad) incl cmpsb jmp adc test inc mov sbb and sbb stos sub and adc out loop rep and sub jmp pop jne or push fsubrs in push das jbe xor orb dec lea add or call cmp cmp cld imulb dec add pop call sbb pop inc loopne clc mov add call scas sbb (bad) insb shrb rolb lret pusha inc mov sub mov clc jbe loopne (bad) and and es inc ljmp xor push add push repnz call sub (bad) mov mov aam lds adc outsl out sbb jno mov mov push inc inc aaa insl cmp push fs repz sub aaa add test add adc and and call out pop sbb add incl enter les dec fbld push pop (bad) rclb loop dec cld push pop jb lea aad popf ss lock xor pop xchg ret mov and roll adc jno dec add dec mov push jno lods (bad) jo pusha fdivrs add jp ss pop xchg push (bad) leave inc es inc or enter inc cmp dec das xor inc clc or lret push add ret loop xor push pop adc adc sbb xchg dec inc sbb (bad) cld sub pusha loop dec aas push mov fidiv movsl inc cmp dec out fldenv adc sub inc call mov icebp lret stos mov test cmp ss std push adc xchg adcl pop xlat jg ja rclb popa (bad) dec ficoml jmp dec add mov data16 out mov repz icebp test and scas orb pop add mov test push in inc mov pop addr16 pusha fwait add outsl adc je call xor adc aaa adc mov gs dec pop stos inc ret (bad) add mov push xchg cmpsb notl (bad) ljmp mov jle pcmpeqb mulb mov xlat insl imul mov enter (bad) jmp daa xchg mov xchg or inc int sahf pop push jmp add inc aad jle inc inc dec insb ja cwtl (bad) fstl decb push rol push push ljmp dec mov (bad) dec mov cmp push push movsl jl arpl js xor popa (bad) lock jg inc movsb adc inc dec hlt inc jg call enter pop popf cs (bad) or aad inc xor ret sar sub jnp add xchg add jmp roll call int3 adc xchg call mov (bad) movsl cmp cmp (bad) call lret sbb das inc insb mov sti mov xbegin cmp dec popa mov mov rcl pushf mov sbb pop iret adc or gs pop sbb ja (bad) mov sub or rcrb clc mov sar ja cli imul sbb sbb mov push sbb mov mov lcall mov dec dec (bad) adc mov pop jnp mov gs in adc mov xchg stos in mov push mov lcall icebp cwtl and enter cli pop mov gs test jp outsl xor mov add (bad) call fsubp outsl or mov aaa cwtl ret dec pop jmp mov pop cmc (bad) pushl xchg (bad) lea (bad) adc ss mov fdivrl adc mov pushf es enter add push rcrb (bad) dec ret mov sbb js sub sub sub sbb lods xorl pop je pop stc push stos mov or add (bad) push xor (bad) fcmovnbe rcll out punpckldq loope add inc fildl cmp sbb out test xor loope repz ljmp addr16 mov je movsl pop mov scas fsubrl mov psubusb mov and ljmp rorb pusha mov out and (bad) fadds add push mov js sarb or bound int3 aas or (bad) mov mov push xchg xchg call (bad) call gs mov mov pop push es jl cmp sub icebp scas add xorl (bad) jno sub mov cli outsb xchg inc mov enter (bad) incl call outsb popa adc inc fidivl sbb add cmp push xchg push push cmpsb push popa pop pushf jbe mov adc std and aad inc mov dec (bad) ljmp adc hlt lcall jmp pushl hlt repnz or or dec jnp das xor adc dec jg in sbb jmp sti mov fidiv pop cli pop xchg dec xchg pop mov call push icebp mov popa pop dec xor cwtl fistpl nop jle push mov adc jg xchg (bad) jmp dec xor fsubr les es inc xchg mov (bad) ljmp mov cwtl ffree lods cmp (bad) fcompl (bad) jecxz flds pop push xchg mov nop mov adc scas clc (bad) out add inc dec lods imul in mov dec enter call cmp call adc fidivrl adc ljmp adc xchg les scas add or ljmp or add ss sbb or xchg xor dec clc cmp bound push sub lds fsubs insl and inc jmp jg dec jge or mov jp sbb outsl decl ljmp mov mov add call js (bad) xchg loop jp dec iret imul sti xor sub push arpl shrl insb loopne aaa push out dec outsb dec sbb insl push int3 (bad) sub and xchg dec mov movsl mov std fidiv cli jg mov add enter pop icebp (bad) cmp pop flds pop imul std cltd in mov loopne mov (bad) sbb cmpl pop jg les mov mov sahf mov (bad) cmp (bad) in dec cs push insl std pop enter (bad) mov push fldl push decl push clc xor loopne adc sbb nop rorb push (bad) sarb outsl cli dec test bnd (bad) xor or xchg jne inc xchg hlt pop inc push mov cmp popl pop jo cmc pop mov xor cwtl mov (bad) sbb push sub fidivl roll (bad) xchg adc cltd outsb jns or jnp pop mov rorb (bad) call push add es loop sbbb jle pop imul inc push pop and in push jmp fidivrl scas push dec cld (bad) fisubl mov bound pop inc test insb pop add (bad) push inc sub cmp mov ja dec cmp push pop in insl out outsl mov inc test push insb shlb imul xchg jecxz (bad) idiv (bad) insl add jno scas and xor test lea (bad) (bad) out cmpsb xchg clc (bad) or lods or or inc adc push call dec dec and pop add movsl int dec xchg mov dec loopne dec repz push outsb sub ljmp cmpsl dec jle jo insb inc adc pop call inc shrl add mov inc ljmp ja or mov lahf inc or or scas (bad) mov fwait and ror and (bad) sbb xchg lcall (bad) mov sbb imul shrl push inc aas jmp mov shl or test add cli (bad) lcall mov mov ss jne scas pop xchg add and addl nopl stos pop adc out mov pop ret inc push mov enter (bad) (bad) sbbl xchg lcall dec mov xor add lods pusha or add adc (bad) out clc pop mov inc cmp ja adcl jl mov call ja icebp pop scas adc dec cltd push sti xchg outsb les jmp clc pop imul mov xor dec mov lahf popa mov es xor or jne into mov (bad) inc es and test gs inc sub push cmp lock mov adc addr16 inc adc lods sbb push pop (bad) mov popf int3 fbld cs push fdiv add mov or fbld and fprem1 out inc mov inc clc fbld ss imul movsb jno or mov sub sbb add outsl clc scas pushf dec add mov stos push icebp les pop mov ss add cmp push mov in add call or xchg test sub cmp pop ljmp sti lcall mov pop divb pop xor inc (bad) or mov xchg mov sub incb insl ja push fidivr (bad) decl xor or sahf stos push add and fwait pop adc insb imul (bad) aaa jge mov sahf push inc mov into xor dec dec pop and xor ja imul add sbb and test dec adc add sub adc fs cmp (bad) call pop mov mov aam sbb mov xchg sbb (bad) incl adc sbb sahf aam cmp adc loope lcall add sbb push into cmp clc ret popf mov adc push mov jbe sahf fistpll jmp pop les xchg adc add sub aad push push and sub test inc xor lea sbb push icebp or fadds mov xchg xchg jg clc scas sar ret lods out add iret sarb int3 lahf dec mov ficom add add pop mov addr16 cli lock pop xor push xor cmp jg (bad) das fcompl sub jle sbb and aaa loopne cld xchg push or add cmc in mov cmp cmp fstpt outsb aas scas aad sbb inc js mov (bad) ljmp loop jge xchg aam mov sbb movsl shrl leave add and mov andb mov add adc outsb cltd lock mov jnp (bad) (bad) xchg or push pop or xor shr sbb mov pop fs (bad) imulb jecxz mov in mov or (bad) incl cmp adc sub lea rclb lock or push mov mov aas push or jns mov das inc outsb inc aad in aas rcrb mov sub cld nop xchg or ja inc ficoml pusha mov pusha adc sub (bad) fwait jo arpl push fcoms lods stos lods jg pop xor imul add cltd es hlt or jp inc sti lods ret scas (bad) fstl mov xorl fwait sub add mov scas jecxz push adc (bad) incl adc call xor xchg sahf mov aaa mov lock xchg mov push add adc subl cmp int3 xchg mov push jbe jle sarb lea (bad) and adc adc jnp mov mov fildll dec test mov (bad) lahf mov adc lcall insl call movsl mov into pop inc loope outsb sub out xor (bad) call cmp dec ss push push test int scas outsb fldl xchg faddl dec jae xchg repnz jo mov mov push shll add aas mov dec xchg (bad) bound rcr (bad) scas and aad es out inc jb xor pushl dec insb lcall mov shrl fcomi lods cli jg repnz rorl inc jmp adc sbb add sub and repnz in (bad) jg mov into mov scas sbbl jno jecxz rolb stos shlb fisttpl mov in push lret loop ficompl and xchg adc sbb add (bad) lcall cmp (bad) or xchg or xchg jbe mov mov cmp pop adc or imul xor xor aaa sar insb xor jg add lret sub mov outsl mov pushl push clc arpl mov adc lock notl pop (bad) std add bound lret mov sub mov or jmp add jl mov or and dec sub jg xor mov (bad) pop inc mov clc or mov and jbe insb negb (bad) cmp push or pop loope jno fstpl lret add push sbb mov data16 pop cld fldl test xor mov push mov pushf add stos mov (bad) xor shrb (bad) pushl sbb fiadd ljmp sub das adc insb dec cs jg jo lods mov mov idivl les jp cmp push mov mov lods outsl loope (bad) ljmp js out roll in call pop lahf and push jae and cmpsl dec add cli mov cmp or cmp ss (bad) out clc arpl add dec jmp movl cli notb lea sbb into pop stos mov std aas adc sub popa push pushl jmp adcb (bad) and adc push les lcall sarb jecxz cmp inc mov in and push push sbb adcl sub rol ljmp (bad) sti rolb push rep and daa in test mov adc and rorb xor in jno mov mov inc iret les fdivrl cld pushl sbb sbb sti adc dec pop pop pop pop repnz jmp add es jecxz mov xchg push xchg lods (bad) (bad) movsl popf mov jmp mov fcomip cmp (bad) lcall popf mov fsubrs add adc mov cmpsb adc negl push inc mov jae aaa sbb test das adc movsb test adc movsl and dec lcall lock stos inc enter lods cwtl ret negb pop fmul jbe sbb inc push mov test lcall mov lahf mov and and das xchg mov inc lds js adc rcrl fmull js cmpl fwait inc jb test dec (bad) inc mov (bad) (bad) jmp fidivl or add jmp minps mov inc push adc outsb xorl mov mov ffreep jne,pt dec cld ljmp out (bad) xchg fs popl rcrb je loopne in mov xchg pop fdivs sbb loopne icebp mov xchg jmp sub push test xchg ljmp (bad) jmp (bad) lcall pop push pusha push shrl xorb test mov pop push (bad) xlat lea jg popa cmp fs popf adc add shll jmp enter mov add mov push stos subb in movb loope mov pushl in icebp sub rcrb add movsb dec mov (bad) stos mov jle sbb frstor decl push mov xor in xor (bad) jmp lret lcall insb call test mov or jmp add lock or dec das xchg jns mov xchg and in stos add inc xor icebp (bad) (bad) out dec push (bad) in cmpsb std mov or jo adc fisubl ljmp jle cmp xchg push mov jno repnz fadds adc cltd add (bad) outsl inc cmp mov fsubr mulb std (bad) xor call mov fldenv and mov imul (bad) lcall jae xchg stc pop fist out xchg pushf push fwait movsl add and pusha int3 (bad) ljmp add cld push sbb jno push les loop add mov pop in fcmovbe orb sub push rolb ljmp es aas cmp and call mov fidivl pop fidivl jnp data16 pop iret mov lcall in mov adc lea dec shll loopne ja pop add cmp and xchg sub jne lods call divb stc out and repnz (bad) mov loopne mov pop fsubrl aaa jl add xor lods cli push dec mov push push inc movsl cmp call sbbl leave add (bad) jg or cltd rcrl mov lcall dec fldenv sub das mov fs cwtl xchg push fsqrt fwait cmpsw jge mov out (bad) mov and mov or je mov pushl add or (bad) out xchg sar call call into dec js push imul psubsw fsubl aas xchg add add repnz (bad) (bad) (bad) in (bad) call inc adc xchg adc or shlb xor push js push ficomp cmc inc cld jle xor push in pop cmpl das xor mov dec in icebp inc into pushf pusha mov aaa les icebp inc lea mov and out (bad) lea or in cmp mov inc push xor imul test popf loope into inc add xor out sbb cmp daa popa inc clc das add popf test mov popa add mov pcmpeqw das or xor mov push dec movsl push (bad) (bad) decl insb sub cmp xlat data16 and cmp (bad) andb test cld dec (bad) lcall divb sbb cltd ljmp ret dec and and cs dec mov pop test sar out or dec fildll jns addl jp jnp cmp add jbe lret ret mov js push stos arpl js fs mov insb insb loop mov (bad) jmp aam (bad) mov add or mov add ret cmp mov bound (bad) call xor jmp push jae std xchg fisttp (bad) and loopne sbb add into mov or ret fnop sbb pop pop cmc mov mov lcall or shlb adc push pop (bad) adc scas mov mov add fnop inc imul aas adc mov ret mov jo imul jg and cmp or gs jmp xor sub call arpl inc enter (bad) les push and push inc push xor test or mov insl and adc mov rolb mov inc aam lcall cmp xchg add gs add xchg xor xor cmp movsl and pop inc mov or subl adc daa cmp roll in loope mov mov xchg in repnz pushl (bad) or push dec sub mov cmp je int in push nop pop xchg cmp loop sub xchg daa mov addb adc scas mov sub adcl fidivr push inc cli ja les shlb add add add repnz (bad) incl (bad) movsb je ficoml push jp add mov pushl adc mov (bad) cld rcrb sbb sbb shrl jg xchg add push cmp pop xor scas nop mov jmp inc cmc pop mov dec jg mov dec mov mov je or mov mov cmp inc jns and mov decl sub lds add cmp arpl (bad) ljmp clc (bad) imul add cmp and jmp into (bad) mov xor outsb sub fild and (bad) jb arpl mov rolb popf mov dec loopne inc cs ret decb inc sub cld push bound out add stos or lock lods mov mov mov fcoms lock ljmp push sub jle sbb out lcall pop pop mov xor shr dec loopne cmp rclb jnp insl popf popa subl lock (bad) (bad) cmp inc mov jmp jo mov or mov cmp add movsl (bad) jo pop outsb or jp or call jno rcl push icebp add xchg lods int dec add inc jae push (bad) adc cli (bad) ljmp mov arpl add lahf jnp shrl xchg out pop (bad) push leave inc sti mov push inc pushl ret bound push roll shr inc add mov in or push push xchg out cmc nop das adc push cmp mov push adc dec or icebp sbb dec push into fdivr int std adc sbb adc incl mov inc mov add xor fdivrp out clc adc or pop mov (bad) fs and idiv inc inc notb es adc add sar fistl mov clc ja (bad) cmp iret jb inc sbb push sbb sahf lcall test push and or or (bad) cwtl in stos incl std and imull fwait add in cmpsb jbe jmp dec or fwait arpl inc inc mov loop lods mov cmp jg test adc inc dec jmp mov pop rcrb (bad) mov fidivrl bsf (bad) out mov push add add xchg xor push (bad) xor sbb dec roll mov fsubr mov adc testl cmp fsubr call adc pusha flds aaa cmc aaa int3 and sub mov sbb ljmp incl pushf adc sbb or outsl lahf or and ret push dec jp jae imul fwait (bad) (bad) (bad) push or pop and mov loop xchg cltd mov flds scas cli or cmp lods stc and data16 add add mov stos jle inc clc (bad) jmp dec scas cmp fs sub data16 or dec inc ret test inc push cwtl (bad) or int (bad) mov rorb and sahf (bad) (bad) cld mov (bad) (bad) mov and (bad) (bad) mov mov sbb cmp or stos insl inc stos mov mov mov and and in add fmull inc call xchg xor mov add imul out ss jmp add and mov call dec sub insb cmp mov rcrb xor (bad) (bad) ss test jp loopne add fildll sbb jge add sub (bad) ljmp into stos rcl (bad) push out cmpl jae (bad) ss lea adc fstl lret jle mov mov and ss inc jecxz add pushf mov dec (bad) jg inc out call fs fidivr or mov xor decl sub and or (bad) rolb fildll int and jg fsubrp push lahf push std sbb testb cld sub imul inc push dec cli (bad) jg sub or ficom (bad) andl jae add ljmp cmp lock jae jo mulb push inc jge int dec mov popa pop stos cmpsl mov clc int adc sbb loopne bound xor or movsb (bad) or ljmp sbb aaa rcr js ret jg fstpl pop pusha jl mov das int pop mov pushf pop mov (bad) dec cmp mov xchg in xchg adc in rorb aaa in and xchg mov mov dec in fildl cwtl cwtl fcompl (bad) cmpsl jl call call es inc ljmp mov mov cmp imul sarb push lcall or hlt cmp sbbl xor xor rol icebp cli lods std movsb and pop clc scas add stos mov das fdivs jg inc lahf cs clc aas movsb and push js xor (bad) xchg mov cs sbb shlb mov push ret outsl push shll rorl popf popf or into mov inc ret cwtl mov mov shlb pop pop sub (bad) mov jg ja sbb mov mov mov sbb sub cs jle mov les jnp xor sbb xchg inc add mov js cld add fwait in loope sbb mov dec mov mov cmc decl inc movsb pop xor adc push push es addr16 cmovle sub xchg add pushf mov push outsl and mov ret cli idiv ljmp test out jo std in inc mull enter sub decl jns loopne movsl mov test cmpsl inc mov xor push gs cmc xchg xor mov pop sub adc stos or add cmp jecxz mov out mov daa roll push das cli (bad) jg xchg jo push jp and pushf insl mov push inc sbb test dec jbe mulb jmp add int test pop add fldl lock pusha jo std sbb cmp stos pusha cld sbb dec xchg pusha mov std push je (bad) (bad) (bad) decl jle add sar add add or add in lcall mov movsl jbe lock std popf lock pop mov in dec pop inc pop stos outsl (bad) jmp test mov test sti mov subb pop mov fwait dec fiadd mov stc loope mov dec hlt mov outsl mov jb (bad) (bad) mov repnz xchg adc mov add loop cmp (bad) icebp mov mov adc xor sub fldl mov sbb jg out repnz or incl (bad) aad or ss bound push aaa mov aaa cmp enter xor ret mov jne ljmp adc mov and sbb pop test inc aas adc push lcall mov sub lret insl js jle inc and ret loop add push or insb add sbb mov icebp or pop fstp pusha add or cltd mov push adc enter sub mov mov cs ss aas into test outsl push inc aam pop add cmpsb cmc mov add and sbb outsb mov mov call lods cmp daa sbbl fisttpl mov shr adc mov mov subl sub popf pusha arpl test (bad) andl stos lock inc arpl adcl push push xor mov add dec dec and add insl mov push insl push mov mov ja repz das dec inc jecxz leave fs mov popf incl mov (bad) jge adc in jb dec cld testb sbb jae sub xor (bad) sbb jg (bad) jg cmp daa mov or lcall jmp imul mov cmpsb (bad) and incl add sub xor (bad) cld ds sbb xchg jns loop cwtl fs addl popa fnstcw push mov inc xor addr16 (bad) call xchg dec int call aaa sbb fildll call or loope ljmp cmpsb sub jae xor shr or adc pop xchg ret mov aaa in xchg ljmp loop rolb xor loope pusha mov std outsb adc inc lods xor mov or mov dec xchg push inc fildll sbb lret inc xchg push pusha in (bad) (bad) xor (bad) jmp xchg xchg aaa mov insb jp pushf cmp sti repnz jg das push divl mov test xchg or lret clc dec xchg adc popa mov adc aaa enter add and xchg sbb mov mov or cmp adc incb add pop mov xor pop ss (bad) ljmp js inc call test stos pop test jmp pop sbb sbb cmp jns mov cmp xchg fdivr mov pusha mov and (bad) ljmp mov jecxz xor nop xor push (bad) orl or fmull mov lcall roll cmpb popf push aaa pop push mov pop cmc das mov aas addr16 (bad) jg movsb repnz jnp pusha inc (bad) dec test movb mov xchg push push daa add insb cld decl loope rclb xor adc sar sbb push mov out out aad aam pop xlat mov or lods cwtl daa mov xchg lds add incl add movsl lods inc aas jmp out incl sar mov jne dec push xchg and cmp das xor add add adc and dec mov and mov das push or pushf add push in adc outsl add out cmp movsb or cmpl inc or (bad) (bad) adc jecxz jg loop xchg sub inc inc inc (bad) mov adc add test clc fwait add mov decl adc (bad) jo stos mov push sbb xchg ja jb clc (bad) (bad) call lods sarl fstl or ret fimull scas add test sbb ja mov xor and test aad (bad) ljmp inc lahf fildll mov cmc fwait orb pop cmp adc pop scas sbb (bad) dec sub lahf sub jnp pop xlat mov push push sub add xchg ret sbb mov test daa sbb ret (bad) (bad) (bad) incl add and cmp cmc push add mov cmp add sti imulb mov hlt (bad) cmp int sub clc xor xchg jl es lcall clc sbb xchg (bad) in cmpsl outsb hlt adc sub subl sar (bad) mov xchg loope stos or sbb hlt pop sub jmp adc popa movsb rol mov pop loope cmp scas xor fbstp js mov daa lods out push mov (bad) mov (bad) mov dec sbb push mov mov dec pop int mov (bad) jmp out (bad) and outsl sbb fiadd (bad) insl stos ret lcall lea aad popf dec sahf fild ljmp pushf xchg mov in (bad) rcrb (bad) (bad) lcall es in mov inc repz cmpsl push sahf inc mov mov popf sbb pop lock into std daa (bad) sub or icebp aaa roll mov out decl add sets shrl repnz inc jmp jmp dec ss mov in mov mov push jecxz call pop movsb xor xchg imul fsts sub dec sbb add div fcoms xchg lea pop xchg pushaw pop push cmpsb jmp mov dec rcrb rcrl inc (bad) (bad) decl sahf add mov out mov add jne mov sub cld ljmp jle cmp xor mov outsb adc loopne xchg stos gs pushfw pop inc sub inc testb ret pop insl pushf pop fsub pop leave ljmp call loope sub (bad) cmp push inc pop popa in popf (bad) mov mov jp test outsb push sub cli pop push (bad) lock xor out (bad) or push xchg cwtd shlb fiaddl mov ljmp (bad) popf hlt lods daa loop rorb jecxz enter xchg jmp push test jg lods xchg fnsave (bad) ljmp cmp in test push cmp js dec push aam xor daa push mov cmpsb enter push es cld sub repnz decl in bound mov pop iret js and push mov pop and (bad) pushf push (bad) bound stos pop roll (bad) (bad) (bad) pushl daa xor cmp push cmp inc in mov cmp ret (bad) (bad) (bad) jmp test insl cli inc mov pop lock insl nop lods (bad) fdivrl mov mov cld pushl push imul add cmpsl movsb mov scas cli mov imul ljmp sub dec sar rcr mov sbb sarl xor imul cmp xchg adc ret fs es jp mov aas mov sub jmp icebp push pop cmp adc add sbb and jg aas mov ret stc sub bound push decl inc pop xor inc or pop scas mov mov mov (bad) incl jp lds xorl sbb popf mov aam pop mov call push fistpl insl sub out loop or lret sahf xchg adc ficoml or jmp add inc or shlb rcl mov mov gs sub adc (bad) sti sub inc mov fimull les js pop and jg dec cld lcall cmp rcrl sti lods (bad) cld mov nop insl je or pop push rolb decb sub data16 jne dec jo jbe (bad) (bad) (bad) jg (bad) mov jg clc inc fwait int3 data16 dec leave add adc xlat fwait jp (bad) call cmp push add inc or inc sahf leave out xor movsb stos cmp mov or cs and pop dec push (bad) mov decl mov in sbb mov in pushf push das inc adc decl negb repz sub (bad) fisttp stos inc jecxz call cmpsl aad sbb shrl ljmp sbb mov (bad) mov out ss mov mov inc adc (bad) xor xchg movsb enter idivb adc idivb xchg inc lcall js sbb in or mov sub test je repnz dec iret insb cld lcall pop cmp testl pop scas stc cld nop push inc pop insb mov inc rorb adc fiaddl adc or fcmovb add mov ja add test sbb dec int (bad) loope fidivl mov stos das xor rol cmp (bad) push test icebp mov mov into hlt push (bad) xor in sub cld add push jecxz (bad) cmc cld das xchg lcall cmp sbb pop cld cmp xor mulb ucomiss xchg fnstsw ss pop nop les addr16 add out adc dec push push out orl xchg loopne add add in ss adc inc sub orl call (bad) daa bnd imul cmp jg lcall dec addr16 xor xchg pop pop cmp pusha sbb icebp mov fcom sbbl lahf add rcrb rclb xchg repnz and adc dec sbbb mov pop xchg jge out and ja jle cmp es pop sbb out adc or int imul fcompl ret inc mov xor push stos ficompl pusha mov (bad) lcall jl ss inc lea inc loope and mov fldt dec add jae ljmp mov orl fbld pop cmp pusha aaa xchg add fiadd (bad) aas xor mov (bad) negl (bad) into and mov mov pop mov push or or add sub inc lock stos and pop adc and mov mov (bad) rol mov rcrl ljmp pop je test mov mov add jmp aad push ret das std cmp (bad) (bad) fnstsw sub faddl jmp sbb sbb cli fdivrs je movsl jg fisttp sbb int inc inc sbb es sbb nop xor inc mov call sub js sub mov rol (bad) out cmp mov lds push mov cmp pop mov sub and lret fbld (bad) cli lods and leave mov ss ret push dec bnd fistp imul enter push mov or mov jle into aaa dec sub (bad) mov dec sahf lock push jne mov add sbb cld cmp dec inc fadds push push sarl add pop add jae shr leave push rolb and or xchg or ret roll push pop test push cwtl xchg imul add lret inc jnp (bad) jg or dec lahf pop data16 push je outsb (bad) jg push add cmpsb icebp outsb andl xchg (bad) (bad) mov popa and add cmc sub push movsb out or pop lock mov sbb in pop pop mov in add inc xchg dec or lcall jno clc incl add data16 leave inc pop inc ret fnstcw das frstor lock jge bnd xchg icebp push dec or pushf sarl push jne inc mov push out jmp jns fisub clc stos mov enter or and sbb fwait cmpl mov outsl out adc inc bound loop sbb bound adc fidivrl frstor mov xchg mov pop clc das (bad) das pushf jge aas xchg movsb pusha push xchg hlt mov cs cs idivb sub xor mov cmp je sub dec adc scas (bad) repnz push in mov adc decl adc ds lret and cmp sbb inc pop rclb popa (bad) pop or cmpsb cmp add (bad) (bad) inc lcall pop or mov inc sti jae xor sbb or ds xchg xchg aad jg cmp jae leave sets inc xchg xchg sub push outsb test mov pop ljmp cli xor pusha cmpb sahf push gs xor mov sbb lea mov push jle jle jge and cmp pop sti jne sub mov aam je pop cmp idivb or push add mov dec ja out mov ss add (bad) call sarb mov push lret into sub mov cmp enter test push mov cmp xor jg add jnp ljmp or mov cmp sub xor loopne call mov fidivr xor xchg add sti mov xor data16 xor outsl mov pop mov divb cs mov and (bad) dec jmp test imul ret stc pop popa adc adc and sbb dec pop outsb sbb fisub pop pop dec notb sub jle sbb testb ljmp mov int sahf fimul (bad) outsl mov out add xchg (bad) xor mov (bad) popaw xor inc inc std lds test cld incl push mov mov mov sahf cs cld mov mov insl popa mov stos pop mov xchg or and imul sub jno stos dec je lock pop test add test and das xchg push (bad) cmpsl add (bad) (bad) (bad) jg mov clc enter ss inc jl imul cmpsl inc faddl xor fsubl inc enter cs pop dec ret (bad) cmp and cmpsb cmc push (bad) imul xchg mov pop add decl mov (bad) (bad) movsb ss jg pushw es xor dec or jg jl jae frstor mov push cs std mov or sbb jp jge fmul popa jecxz dec adc cli pop inc pop inc cmp enter sahf sub movsb dec (bad) ljmp dec inc jle inc scas pop xor inc sti mov call jmp pop lcall cld mov out and pop call (bad) push into fdivrl push jge in and add orl lods lahf clc jbe out outsl and sti pop pavgb jg mov and lret cmpl cmp sbb sbb (bad) lcall les cmp or ds lcall dec cld stos test enter ret jbe adc jg cmp repnz hlt or push xchg push lock mov or xor enter test out outsb clc mov (bad) incl xor jl pop adc lock mov (bad) dec adc nop test mov outsb movsb loope loope es push ret push add dec adc aas je jnp mov cmp int3 xor xchg inc (bad) (bad) or lods jg imul jo in mov int jbe (bad) and mov lcall inc add pop nop addr16 loope lcall stos pop jle rcrl push lret shrb hlt dec bound mov xor fwait popf push (bad) iret sub movsl mov fcos add aam fcmovbe ucomiss movsl (bad) jg push (bad) mov frstor xchg push scas into add in mov arpl cld call push int testl xor in cli add xorl test and outsl mov movsb xor xchg pop clc and dec mov call ljmp ret nop jno cmpsb mov xor add leave pop jae pop outsl add rolb xchg add mov (bad) mov mov sbb jne es xchg sbbb pop mov add cmp loope push jmp (bad) jne cmp dec jecxz ljmp jg adc dec jnp sahf shrb pop cmp out push mov add (bad) jae mov das fisubl popf aam repnz push (bad) xchg push rcr enter inc mov xchg dec pop adc mov pop dec fbstp sbb mov push pop jmp imul in or cmp es sti ror pop call xor movsb xchg cmp cli inc add divb popf enter and add fldenv lock (bad) fbstp sbb xor jle (bad) decb jo or jne lods jge sbb add fwait push push mov incl mov addb xchg addb repnz lea std (bad) decl xor cli outsb (bad) mov cmp add lcall lods in mov dec insb dec lods inc mov add (bad) xchg xchg in lock clc mov mov ja sbb (bad) in add push fimull inc add arpl in cwtl into add and adc add mov cmp cld push add mov xchg dec mov fwait inc loop ds (bad) pusha (bad) (bad) adc jnp and inc push scas daa cmp mov xchg lock cmpsb and fwait mov ret jl int pop push mov insb test setns and test lcall sti mov leave mov ds mov xchg out test dec mov xchg add icebp outsl ss loope (bad) or push pop adc lcall mov lds lahf les cmpsb lock test sahf pop mov sbb cltd mov xchg nop add in in loope or out ds orb xchg or add adc ss pop lahf flds shrl push (bad) sti xor pop push cs cmp pop mov ljmp adc inc mov sbb iret adcl mov cmpsb pop ror add push outsl xor dec adc xor add inc cmp rclb rolb js pop (bad) jg call inc and add mov cli stos and lock aad aad add sub add and add ljmp dec adc or dec out movsb cmp pop nop icebp aaa adc xorl (bad) jg lds push add adc push xor and sbb fnsave sub test pop (bad) (bad) ljmp add adc mov xchg or adc (bad) fistl xor or (bad) or pop mov mov cmp mov xor cli jbe fmulp push daa xchg test loopne imul cmp pop mov (bad) (bad) (bad) jg call and cmpl lods nop adc aam add out inc add mov xchg (bad) pop or cmp arpl (bad) outsl ljmp sub cmp movsb xchg or xor inc leave xor pop out rcrl (bad) in (bad) in dec (bad) call sbbl push jp je sbb add fisubl fistp data16 mov sub ljmp inc inc mov arpl pop cmc adc xor push test ret xor push mov test xchg (bad) mov in (bad) loopne jp add adc jae add xor inc jo test ss mov push (bad) icebp loop js imul pop das xchg add and push lahf pop adc xchg lock (bad) pop lcall add jne mov nop push mov mov incl lea inc pop mov mov inc add pusha inc inc jle das es (bad) clc lahf in addl into and and push pop lods mov jnp mov test sub push jne xor sub jns add mov adc out fstpt popf call push and xchg fcomps clc icebp aas add xor outsb sbb dec jbe mov ljmp adc sub cmpsb decb test cwtl sub mov inc cwtl cmp xor cmp inc jecxz ljmp insb adc fs push xor add add jne adcl iret (bad) add (bad) incl jmp xchg or mov add push pushf inc clc or pop add lcall cmpb (bad) pop pop sbb adc loop sahf dec divl icebp sbb sbb scas cmp or mov sbb testb rcr pop mov sbb mov dec (bad) pushf inc mov jg call or mov mov leave pop inc cld pop pop cmp and or rorb (bad) fisttp or mov pushf mov ds and add adc fs out dec add stos pop push lods inc into incb movsb sub test cmc stos mov or sbb les cmp icebp fs or data16 nop mov pop ret push (bad) cmp sub xor jg mov sahf mov xchg fwait test adc pop lock mov jmp pop push insb cmp jmp sarl cmpsl xchg out jg pop xchg push es push daa mov adc movsb ficompl adc mov dec shlb out call or insb loopne adc in pop lret mov pusha in inc rorb (bad) (bad) iret jg lcall mov mov xchg jbe fsubl mov loop aam jns mov lcall add push add pop test mov jne xor fs mov dec roll cmp sahf test sbb idivl std call int3 pop es xor adcb shlb mov xchg inc xchg out or mov xchg xor shl cmp outsb cmp mov out (bad) jmp call outsb sub inc push xor movsl sbb jno test das xchg hlt or (bad) (bad) call mov les pop (bad) xor aas fisttpl pop dec adc jo mov loop cld nop gs mov cmp cwtl subl pop add add stc xor dec stc push gs mov lock or int3 pop mov push push adc aaa cltd sar inc fucomp cmp cltd dec dec pop push add xor push call add mov push and pop in mov mov mov loopne mov inc andl mov sub les repz cmpb xchg and imul pop jp pop rcl inc pop push (bad) ja dec (bad) lods jge mov dec and data16 mov loopne push xlat adc jbe hlt inc cmp mov and lock or in push sub adc jecxz orl addl leave mov add xchg outsl test and mov jle clc insl scas adc ja sub imul repz fcmovbe cmp sti mov jle adc jl popa (bad) aam aaa mov cmp cli mov lea or mov ret jmp lcall push inc pop scas sahf test cld in sbb inc hlt lret mov push jmp xlat xor cwtl fs xor sbb adc cld sahf (bad) (bad) (bad) jg lock mov gs rcrl lods jno mov (bad) add addr16 xchg je lcall insl ret mov push shll xlat sbb enter test cli sbb adc add (bad) ljmp aas jmp test mov xor insl sarl aas mov in pop ljmp cmpsb jg scas ja adc push xchg icebp mov or inc loope rcl sub inc xchg inc lds (bad) cmp jecxz int and jae mulb mov decl lock xchg add cli and lods jns (bad) (bad) (bad) fildll ljmp mov jmp mov mov pop inc jbe imul xchg xchg and lahf rolb aaa xchg push push shlb pushf iret jns jno (bad) ljmp repnz imul cmpl pop ss call daa repz dec jbe imul movsb and fdivl or bound push shll lods sbb push dec cmp dec cld movsb pop sub nop cmpsb scas dec push movsl (bad) incl dec ficom cmp (bad) flds mov ljmp push arpl cwtl sbb pop std (bad) fs jmp inc mov lods or mov decl nop sarl cli iret mov fidiv int3 (bad) call outsb dec dec in rolb mov inc mov cli jg fisttpl stos mov ret mov sbb dec fwait inc loop lds daa fldenv (bad) adc pop shlb add in inc ljmp std paddsw sar ja daa ret cmovg sbb decl mov (bad) mov adc and fadds into pop es inc loopne loope nop push xchg test mov loopne,pt fmuls push (bad) pop rcl insb fcompl or test dec cmp (bad) (bad) out xor inc mov add add out pop test sbb jae mov call (bad) inc adc push pop outsl mov mov decl ror (bad) loopne mov (bad) fnstsw pop or repz xchg jo das mov (bad) fiaddl sub shll leave add adc mov (bad) cmp cmp pop rcrl xor xchg pushf (bad) mov dec lea lock sub adc cmp hlt inc test or out pushf ss dec ret xchg in sbb push mov ret (bad) (bad) (bad) cmp and mov cmc int mov adc mov pop mov addl mov xchg or bound adc mov xchg ljmp dec sbb cmc mov push pop push subb into and fcos add pop push fild jo lahf mov iret mov jg nop testb (bad) pop inc pop inc ja pop fs mov jo lds (bad) incl adc inc mov pushf je insl arpl fisttpll outsb mov dec inc test add lret call mov fdivp (bad) jg mov cmp mov sbb mov xchg lea pop nop clc mov sub xchg movl pop test in popf movb or sub mov and xchg xor negb clc int3 jg xchg outsl daa mov and mov or popf xchg in fisub and push lea out mov fs fwait add inc dec add pop ret int icebp dec addr16 or add lock inc cs insb push popf xor inc mul push push sbb in add inc icebp jg cmc cwtl sub loop cmp lea inc xor fsubl inc adc fwait rcl leave jno add dec push loop (bad) lcall or sti mov ffreep subl cmp and dec ja jne fldenv jg push pop insl or or mov dec fistpl movl insl stc idiv scas movsb inc sbb push xchg xor mov mov sub mov rclb sbb xorl jl (bad) mov push mov inc lock jp and sbb repnz lds jno mov cli inc outsb push in aam (bad) (bad) ficomp mov jle add add ss int3 (bad) ljmp push scas call xchg stc mov add lcall sbb xor sar mov outsb adc adc lds mov ss and imul push pop inc dec mov popa (bad) bound xchg mov or icebp call mov test add xor loope mov out inc sub mov xor mov out clc mov popa (bad) push dec mov xor xchg xchg mov aam cld pop popa inc ss mov jle jns mov mov ds cmp xor xor lods std ljmp push jbe add sbbb xchg jbe sub dec mov divl xchg paddb subl (bad) (bad) jmp or adc push push mov inc cmp add sub adc daa sbb sbb mov mov add inc outsl add fistp int3 add lret cmp lock int3 insb xchg insb xchg sbb mov stos ljmp insb (bad) fild and pop xchg ds adc cmp or jno mov mov or sbb loop fstl sbb movsl mov mov mov mov push shrl sarl xchg or stos or jl pop inc adc or sbb aad inc jecxz (bad) les mov push mov pop rolb sub adc jp (bad) cld cmpsl (bad) out add out sub xchg add test pop sahf or jg or jl jnp xchg fxch adc test (bad) jg mov pop and mov and sbbl inc push and test push xor out sbb xor push mov pop inc clc aas imul or jmp les push mov pop cmpsb dec xor stos jb mov xchg in xor cmp xchg add push aad pop (bad) fstpt jle or jp pop mov or jg icebp test cltd (bad) (bad) ljmp sub hlt xor in dec push jg inc pop ds das sub insl sbb jg ljmp sbb jns aam or lea mov outsl cli call dec push sbb stc cmp xor mov sub (bad) xor (bad) mov mov jle insb mov ljmp mov loopne out jp aas test xor imul push mov test insb stos andl hlt pop jne data16 insb sbb psubusb outsb jl jp sub pop lret in (bad) (bad) out push mov mov jl jmp inc push int (bad) adc jg push jae sub xlat ja daa mov add add fs cmpsb push (bad) es arpl fiadd mov mov lcall xchg push das inc push call sub flds inc popa roll sahf add jle jg fsubs add dec add hlt and fsin aaa dec clc (bad) (bad) pushl pop xchg shlb nop push stos push mov dec sahf jno inc or and pop or insl cmp mov inc int3 xchg movsb ljmp xor push shll lea push outsl clc stos test aam (bad) in divl dec mov push xchg imul push cmp lret cmp push movsb cmpsb jecxz mov inc mov insb mov addr16 roll mov inc adc jg (bad) lcall mov or pusha xor cmp loope sbb loop scas sbb mov inc adc mov or fsubrl fild and add pusha jge fs cmp mov pop sbb (bad) orl outsl (bad) lcall add fbstp jl mov int3 mov fs loope xchg sbb push mov pop pop sbb jo or pop add xchg mov shll aad pop rorb or mov mov (bad) pushl fadds sub jle sbb addr16 add or fidivr clc push jbe out das std dec sub (bad) cmp mov dec out xor sub imul add lahf jge xchg je add (bad) xor sub inc dec jbe cmp jb ss push jne (bad) cmp cmpsl lods in sbb inc add cli mov loope popa adc (bad) imul loopne inc (bad) jo mov jbe cmp lcall inc push xor (bad) jns shr nop sbb pushl sbb fbld xchg sbb insl add and fdivrl std and fsts leave fadds lcall push jp (bad) sti xor and sbb or mov add cmp xchg pop add jo mov loop mov negb mov cmpsl incb cld fisttp xchg pop (bad) xor sbb sbb out sub jbe ss (bad) lcall dec leave insl sub pop sarb adc inc adc sahf push mov jg pop jb push push (bad) fwait ss adc orl clc pop outsb addr16 lods sbb mov pop cmp mov test sarl adc cmpsl test xchg (bad) in std dec push call mov mov mov mov jge sbb pop mulb mov adc pop test xchg xlat adc jle test es pop sbb lods clc xchg pop (bad) ss aas mov packssdw (bad) das pop lret mov call xchg dec out push and (bad) mov je,pn jb js je int3 mov push insl xchg adc mov movsb pop mov es jae (bad) sti rcrl int or xor inc pop sbb sbb fst mov xor enter aaa xor push inc (bad) neg inc pop add rclb (bad) (bad) (bad) out clc call sbb daa dec jo loope rcr mov mov aaa ret pop adc pushl pusha sub inc jo sbb mov mov sar or sub test lret sbb ja (bad) pop jg mov ret lock stos push stos ds cmp cld loopne (bad) (bad) lcall aaa mov xor xor fbstp dec push popa into popa mov iret sub push (bad) push sub decl rcrl es jle and jnp fbld cmp inc jno dec xor or xor mov cmp ret out push mov inc mov and mov lea rcr mov mov test ret rorb fs push pop dec mov and xchg adc fst pop xor inc push push pushl loope es xor or outsb mov nop xchg add lock clc (bad) dec (bad) (bad) jmp call movsb daa cmp inc mov dec fdivs pop out jp decl insl cld add (bad) mov out cmp add pop sbbb jge cld fwait stc mov loop (bad) jnp push bnd or js jl (bad) mov dec sbbl push or and ss test je add adc fild fisttp mov jnp add (bad) pop lret add pop js lods dec rorb loop out imul popf das fisubl push jae das ret (bad) jg add adc add or mov idivl rol call and and xchg fisttp rcrb lock shrb mov dec insb dec lcall push cmovbe (bad) sub cmpsl push xchg xchg fwait (bad) pop sub xchg pop jle repz imul hlt je fisttp enter mov ffree insl ss mov daa or mov jge mov add push jg insl adc adc jo decl adc mov lea xor adc push pushl push fdivl push test mov dec (bad) push or lock jg inc add mov movsl mov rorl xchg jge popf mov adc sub sub push fnsave fwait push les (bad) jo inc cmp pop push insl call cmpsl adc mov scas (bad) fbstp inc inc call (bad) push inc push mov sbb test in jle jmp adc loopne sub jg (bad) (bad) inc xor subl (bad) cmp sub je mov xlat cwtl ret pop sub ffree fwait movsl sub add and scas adc adc sub cmpsl jg clc xchg pusha mov insl xor and sub clc and fbld frstor fildl adc rorb icebp lea xor xor pop popa push pusha pop das (bad) ljmp push xor adc ss mov sbb xchg out xor mov sub add dec pop inc adc adc scas push sti lock sbb inc ss xor sbb jp sbb outsl (bad) (bad) (bad) pushl or mov add mov mov or sar out cmp (bad) cvtps2pi or outsb clc lret aam sbbb (bad) fwait mov loop test sar sub jp sub popf push sbbl or dec jae adc imul lret ss in (bad) addb jp pop stos cmp dec dec outsl and insl daa movsl jbe loop add add (bad) cmp cld mov popf mov push insl xor cmp scas jp mov mov add or pop fdivrs out mov (bad) or xchg (bad) fbld aam je stc and cmp jg mov and push addl fadd jg mov cmpl mulb lds jmp inc (bad) jp imul clc test add outsb mov test pop xor icebp add push hlt pop icebp inc sbb scas mov lret cpuid add lret pop incb xor xlat xchg inc fs xor fucompp ljmp push xchg sub ljmp and and call xchg or xor (bad) fcomip add push pop dec ja sbbb test inc (bad) int cmp sar adc nop add ret cmpsb (bad) (bad) incl insl ret lods push es add and scas mov outsb scas pop sbb cmp test fstl test ja mov sti push push (bad) cmp aam lret (bad) jnp sbb add sbb bound hlt push cwtl inc loope mov (bad) (bad) enter or push sbb mov and inc cli imull (bad) out (bad) fcomip xchg push inc and cwtl jo lods xchg or add jbe mov pushl clc mov push mov sub xor ret mov jecxz in mov shll (bad) push loop add stos es ljmp iret mov shl in dec popf test call movsb js stos mov cmp fbstp fwait clc jmp or xchg jno dec out mov mov inc add scas mov and icebp pop xchg push mov jae sti cmp pusha popf std imul mov sbb jbe add outsb jg cli cmpsb incl xchg repnz int fdivrs lds cwtl jo push mov (bad) lcall (bad) mov mov mov mov cmp xchg inc jl stos cli pop aas push popl push lock lock aad lods cmp pop (bad) mov gs mov addr16 jle cmc decl into pop nop (bad) pop xchg (bad) ljmp movsb cmpsb clc mov jmp pushf sbbb in sti sbb sbb xor mov (bad) (bad) pushl out dec movsl mov adc cld wrmsr cmp add or mov sbb imul loope xorb popa and add loopne jge pop mov xchg push jns (bad) lcall xchg shll mov or mov mov imul rol decl jmp adc inc test adc scas cli (bad) mov insb fs push ficoml push mov icebp das mov cli add (bad) mov push outsb mov add idivl pop cmp movsb sub inc xchg dec cmpsl xor fisubr (bad) (bad) or inc cltd fsin fcomip pop dec stos jl aas xchg mov lds je sub movsb adc inc or ja pop ds ret or ljmp fndisi(8087 xchg imul push call addr16 (bad) (bad) fbld jecxz sbb sbb xor rcrl mov insl mov xor dec inc popa adc and andl insb sbb and jle pop sub js push call fdivr xchg data16 in (bad) mov mov pop or ljmp fdivrs jmp jg mov mov pop and push dec add pop js lods push popf push dec add inc jmp dec dec jmp arpl jle movsb test sbb aas sub push mov push lock mov sbb (bad) jg or pop pop push mov daa push repz (bad) divl jge adc mov outsl notb sub sbb stos shrb adc xchg (bad) mov sub mov mov (bad) mov divl pop pop push aas shrl sub addr16 add (bad) (bad) out jae in addr16 ret fidivl insl movb add jae outsl add mov push shll adc jmp push imul std mov in orb das inc mov pop fdivrs into scas push hlt jmp loopne punpckhwd mov mov or (bad) out (bad) imul pop push jg mov and or popa add pcmpgtd test aam (bad) xor cmp aad scas inc jmp jnp xchg mov loope add gs push ret xchg inc ljmp push (bad) frstor mov pop (bad) ja in mov bound sarl mov loopw test push lock jl cmp sub fnstcw or ja out cmpsb loop or fidivrl mov fild mov mov fs (bad) (bad) call insl cmpsl push add leave jbe jns xor mov push es mov mov cs mov or mov mov mov movsl mov mov sti xor je add and mov ja ljmp or decl je push cmpsb xor (bad) incb bound xorb (bad) jg inc in andl ror xchg ds add add incl add mov push mov aaa mov iret mov jge mov add imul aaa push add aad dec jmp push (bad) in outsb ret xchg cmp or mov xor cltd mov (bad) decl pop mov dec mov xor (bad) mov mov popf push sub in in (bad) adc or cli mov lds call cmc push sbb nop fiadd pop cmp fdivp fwait or cs jno,pn push dec adc cmpsl adc lret sub ss or fbstp jae xchg sub sbb cmc add (bad) (bad) (bad) fild xor pop dec add (bad) or push push das inc popa add cmp push (bad) mov mov (bad) mov xchg add (bad) mov cwtl nop inc in pop call mov jle jle jg hlt test fadds and test outsl lock cmp stos push popf jge mov shr or mov add push jnp in lods jns add add lret or aas (bad) aaa and pushf mov iret adc stc mov inc cld daa xchg and xorl int pop mov call lahf cld mov mov adc dec cld xchg push insb fwait jl pusha call and xchg je sahf add sub fwait sbb xchg jle scas and xchg xchg scas enter pushf mov test lcall inc push arpl fstpl push cmp pop call out jbe mov mov and mov cmp adc pushf fcompl popa jns add je add sbbl add mov out or jg (bad) call (bad) mov cwtl sbb lock xchg pop mov adc cmp std mov jp fcmove mov int3 add (bad) mov std sahf scas jmp inc mov add (bad) call xor pop roll jbe push cmp fnstsw dec (bad) (bad) (bad) call pusha daa call addr16 les cmp pushf iret xchg pop push nop cli fwait xorl sti les push dec divb inc and shl sbb movsb (bad) mov add pop xor sbb push insb xchg add jle jne (bad) sbb mov pop cmp cltd or push (bad) (bad) (bad) inc adc fbld push imul cmc dec xchg and jbe je mov push cmp xchg pushf jmp adc jnp mov pop add ficoml sub ret scas or and or (bad) pushl jge push xchg and rol add test jge gs fmulp hlt inc xor adc jmp xchg jg inc lcall enter fstpt bound jnp loope mov or loopne sub pop push popf (bad) iret outsb flds jp and (bad) loop nop rcl into aaa push add mov es pusha or shrb les fs add jg pop sti in or mov nop js mov mov hlt out adc mov sti adc sub mov inc add fdivs pop mov cmc xchg or mov mov sub add orl push jo (bad) jge rclb add mov push fidivrl fldenv sarb mov stos pop (bad) mov and aaa rol cmpsl adc mov cmp mov aam sbb mov pop inc popf arpl inc mov add dec mov push sub icebp aad jbe push rcll cld dec sbb outsl mov popa lods roll add (bad) ficom repz mov push decl or jp fs ffree xor sbb lcall pusha mov pop sub jge add inc movsb insb ret adc add (bad) into jae cmp mov pop idivb sbb decl psrad fisubl inc pop addr16 ss cmp inc dec bound call inc push pop (bad) mov mov add jbe or les and (bad) flds add push mov dec and or fldcw fbld cs pusha xchg push jo push ret int3 dec dec loop dec sbb jecxz (bad) jmp negl nop jae in mov adc fiadd pop insl push into mov dec lock insl sub or scas xchg pop dec out fsubl sar mov fdivl lock leave outsb lock sbbb add xchg or pop cmpsl mov jg xchg add test jo lock in lock outsb and repnz mov sbb dec cmp add cs mov mov mov sbb fildll add push sbb sbb scas out cs movsl test sub or pop jg mov in jb rcl xchg xchg gs clc outsb or cmp mov adc xor cmp les cld stos cmpb lahf and xor repnz inc dec mov dec pop movl (bad) (bad) (bad) in ffree add jle inc pusha sti ret in (bad) push cbtw jmp inc mov sarb mov pusha xchg jns mov pop popa loop (bad) fist out add call fs stos insl mov or adc xor mov cmpsb xchg adc (bad) pushl dec lcall adc shrb (bad) call addl lea inc ja or scas das xchg push jmp movsb push or adc push into popf mov loopne insb aaa (bad) mov sub ret ja movb pushf (bad) (bad) adc das xor add lcall mov stos jg xchg in mov push out mov mov pop gs fmuls fwait cltd mov fcmovbe scas int3 add jge and add (bad) pop cmp popf sbb mov ja arpl sbb sbb pop daa or adc cs xchg fsubp sbb jnp ljmp sub repnz inc inc dec sti pop lcall clc or add lea ds and mov incl aas in adc mov or test out jo in cmp mov adc incl add xchg sbb adc push xor sbb jns push shrl ljmp roll jecxz xor loope mov call std xlat mov adc aad xor out pop dec lahf add mov jl adc mov clc xchg test lea jae inc in out adc jmp sbb lret xchg imul (bad) fmul addr16 fisubrl jbe lods insl in xchg mov shrb mov stc out and xor cmp mov jmp movsb sbb in adc (bad) out pop add push adc ljmp std ja mov lret stos inc add imul imul push jl fisubrl cmp mov das mov cs fnstenv fimul fisttpll out cmpsb clc push mov out popa cli (bad) (bad) pushl sbb shrb (bad) add pop addb jge (bad) rclb sbb adc popa movntq ret pushf xbegin lds mov inc out inc ficompl clc pop out xchg stos dec push in jno fisubl fmull xor xchg add xor (bad) das clc (bad) sti enter int3 dec jl or pop insb (bad) cmp sub inc lock sub fdivl insl mov mov mov stc stos mov sbb pop push mov js or sbb or push cmp pushf (bad) loope mov rcll mov cltd mov mov aaa cmp mov jbe addr16 xchg push jno jl and (bad) and (bad) or sub mov in or mov add inc lcall cltd (bad) jg mov xor pop dec dec popa mov mov gs hlt mov scas push pushf sbb (bad) (bad) (bad) pushl pop cmc pop push jnp das adc imul outsl mov insl mov je (bad) popa (bad) jo incl aaa jbe dec xchg push (bad) mov insb int3 mov add (bad) (bad) shr adc (bad) push into in adc ret daa std mov inc push push sbb pop cwtl movsl add loope ss aam fs (bad) xlat add push loope add dec loope adc fild pop test push aas subl (bad) or jg arpl jo,pt iret push hlt or daa pop (bad) ljmp lcall add pop xchg out cmc sbb or fdivr push dec (bad) jg fistp cmpsl push int bound mov mov aas (bad) mov or ljmp (bad) out into fwait icebp call (bad) (bad) mov sbb jge jp adc ffreep pop adc call xchg popa decb lock jg adc inc sbb push inc repnz inc fnsave sub jecxz lods jmp (bad) decl mov iret or jg dec or stos jnp scas xor lea or mov adc sbb push scas clc scas push mov adcb lds outsl dec cld mov jl (bad) push push push push aad ja inc xor cmpb pop sbb cmp or mov lock mov push repz pop or mov arpl popf dec xchg mov inc outsl mov and mov outsb cwtl mov add inc mov or (bad) push or mov cmp cmp push and cmp movsb fdivs or je cmp cmp decl mov xor daa (bad) idiv lock fisubl xchg jo,pn shrl add jmp lea xor and sbb jge jmp adc clc (bad) cs ljmp popf lret aam (bad) bound incl cmp cmp fmull push push xchg (bad) call ror mov std mov mov lahf lret scas cld scas push dec inc fdivrs pop adc cmp cmp sbb sar xor sti cmpsb inc clc sarb (bad) decl sbb pop inc movsl adc sub inc popa outsl dec xor das cli call push rcl push popf cltd push dec test fildll les imul add xchg mov pop cwtl (bad) sbb jge imul (bad) outsl mov incb sub cmp pop into lock sbb pushf scas out sub jb jo ficoml mov jmp push lret mov lahf pusha mov cs in dec loopne sbb dec pop loopne and cmpsb sub sub mov dec decb aas loopne cli sbb ret mov cltd sahf stos sub outsl jle pop mov adc dec lcall jecxz inc mov dec out aas in fidivl adc dec (bad) pop mov lret sar sub or test int or jnp mov jbe pop inc xchg lock mov es (bad) or xchg push inc fwait inc jmp ret sbb ret jnp jle add popf (bad) fcmovnu hlt pushl xchg sbb mov add lret test sbb insl inc cld push add lret push test jg mov jns jb mov stc outsl inc mov mov sbb sub dec xor adc rcll sbb pop jo and js cli adc inc inc popa xchg ss les insb lcall shlb add das cli adc bound lock inc sub lcall unpcklps inc test fldt inc xchg inc add pop and jg mov out and rcl xchg push dec cli (bad) mov (bad) lea mov xchg adc insl sbb pop push pushf push pop cs out stos push cmpb jl es and fs adc jg test fbld jge inc and daa mov movsb mov fcmovbe jbe lock or movsb ja or outsb hlt mov mov add icebp cmp outsb fcomip (bad) inc add stos mov sbb xlat and push inc lods ljmp jle xchg add popl (bad) sub mov (bad) pop mov (bad) in add in aaa rcrl or cmpsb in idivb into xchg popa aas xchg test push hlt jno xor cld dec mov dec lods popf inc cli push (bad) push ja cmp insl push bnd cs (bad) adc movsb pusha add cmpsb mov js push dec mov push add add sarb mov xchg mov das inc fidivl sub lea pop arpl mov loope inc lret js gs lds and or (bad) jge or mov movsb outsb fdivrs jb mov jmp inc lock push nop ja sub and add xchg jne cmp dec jne xor clc fbld add or bound jae dec dec rorb xchg cmp je adc mov nop fadds sbb or cmpsl lods mov (bad) mov ja jecxz cmpl push inc add mov push lret decl fwait cwtl addl outsb xor hlt or gs add (bad) ljmp mov inc int ret imull pop jl icebp xor stos cmp pop mov outsb sbb into push jne jecxz jno jno pop cld lret and mov les xor adc xor ret push dec insl lock adc push out (bad) xor mov fwait sub insb mov dec push mov (bad) and push cmp loopne aam xchg mov lcall mov cmp and sub cmp (bad) (bad) dec push ljmp dec mov dec fisubrl cmp jne jg ficomp sbb and inc nop loop mov lea (bad) std movsl rorb js mov dec jecxz mov lret sub inc sbb iret mov mov rcr (bad) lock cld xlat cltd jo jg inc loopne ret push imul inc loopne fmulp dec mov sub pop nop adc enter outsb pop jnp js ss outsb push push xchg or xorl sub pushl mov xor fdivrl push mov out adc push pop (bad) sub push and or arpl (bad) push ret push in lods (bad) ja aas xor mov cmp loopne sbb push sti (bad) pop sub les sbbb inc fist sub hlt cmp push dec jnp insl sahf jno shrb cmp (bad) add sbb sbb sub dec (bad) jmp xchg cmp repnz ljmp sbb add inc movsb lcall dec loope lods pop int3 jb cmp fisttp orl (bad) cmp jecxz fwait cmpsb jns enter rclb icebp shrd rcl xchg (bad) je mov add mov push movsl cmpsb sub (bad) pushl add cmc mov push adc lock ficomp dec js lods or xchg loope inc loope (bad) lods lret std xchg mov popf mov imul adc pusha pop push or jecxz lcall or push ja mov mov push test and rcll loop push out pop pop lea cmp lret xchg or push mov jle dec add pop clc in fiaddl push dec xor call loopne mov cmp adc mov dec pushl adc mov mov ja (bad) data16 push in aaa (bad) paddw enter pop and dec sub addl cmpsl insb mov fldl push (bad) cli cwtl movsb xchg insb mov dec incl sbb ljmp imul sbb outsl add add outsl jmp add adc push addr16 add cld sahf fild jg test jecxz push dec mov hlt push adc add les inc in add add icebp ss sbb or data16 inc int add stos lock cld and sbb cmp adc xor jg and test or lods lock xchg pop or dec (bad) xor and hlt pop lock movd test sahf and int3 mov cs cld ret pop ss je push (bad) (bad) mov out les jl or cmp icebp fs mov pop push int loop fwait adc push cli and jns das cmpsb mov and xor cmc adc xor push jl mov adc aam test cmc stos or pusha outsl mov cmp incb inc out insl inc enter sub sub push xchg (bad) pop rcrb pop mov inc lcall std (bad) dec dec lods cld inc pop sbb pushf in pop jg repz subb loopne and es popl sarl jno aad incl arpl arpl bound dec cmp sbb sbb in (bad) ja add imul les mov mov sbb xlat cmc inc dec movsl aam xchg sub lcall push leave xor insl mov xchg in lret sbb cmp inc xchg leave arpl adc sbb (bad) loopne nop in fwait ss int cmp div icebp mov mov mov icebp fdivrs push cli (bad) (bad) fnsave jne push int xchg xchg mov call ret mov inc fmuls popf xchg jbe xchg add and pushl and mov mov jo mov stos lea or sbb fistpl xor and xchg jno inc add idiv mov jb outsl xchg or repnz mov cmovb xchg bound (bad) call jmp fstpt ss mov test jbe clc bound (bad) sbb loop lock les cld (bad) pushl pushf cmpsl xor jp enter fidivl push mov and sbb (bad) mov mov sahf fs decl divb jp fwait (bad) lret cli adc push icebp pop adc (bad) mov xor sub jge lock xor sbb dec ds (bad) lcall jmp lret rcr dec scas cmp (bad) dec push leave cmpsl data16 xor ljmp push mov lret andl xor cmp std adc cld sbb jnp repz add dec mov ljmp mov push and mov pop pop push mov xor pop movsb fidiv popf sti nop dec dec push imul sahf dec and insl lods push sbbl std fist add hlt mov mov cld aas cmpsb mov inc movsb ljmp into das insl (bad) mov cmp fs pop call dec outsl in sub test mov or in xchg mov or lds insl pop ds jmp and mov fild cmpsl cmp jl sub testb pop insb sbb js lret (bad) push (bad) (bad) incl xlat sub xchg xchg push inc cmpsl mov imul xor fucomp movsb and jle push jle cmc movsl mov (bad) mov stos (bad) mov xchg jo,pn add add add sbb jns pop andb (bad) cmp dec loopne sar xchg mov insb xchg sbb ret mov decl hlt fwait mov push xor push test pop test add ret xlat aaa push jmp add adc subl aad dec and pop cmc mov and sbb sti fsubrl or stos dec rorb mov sub push add or data16 pushf addl dec into enter ja outsl jg jno jle adc jecxz andb jl hlt xchg int3 add outsb jmp icebp inc xchg mov (bad) mov mov jae push push dec sarb lahf sbb pusha (bad) lock mov push xor clc decl inc push ret arpl or push add cmp stos dec mov inc add and push stos pop out pop or push push fmull bnd and (bad) enter ljmp pop dec scas sub sbb push lods add in mov test es (bad) (bad) ljmp stc std inc mov aam or lcall mov sbb movsb call (bad) jmp outsb test pop or cltd and xor aad call std sub xchg adc rcrb aad push cld inc xlat inc in mov outsb inc bound lock loopne fmul (bad) mov push lods mov outsb lock mov xchg xor push inc xchg push call jl jg (bad) jl or test pop cmp cmp fs xlat jnp lds jecxz sbb xor shrb mov xchg outsl xchg loop fisttpl repz pop (bad) outsl les pusha mov mov or cli (bad) cmp out test mov jnp (bad) call imulb push inc mov sarb decb repz sbb fistl push adc pop insb push leave in dec out cld inc jl mov cmpsl clc xchg sbb jg cmp outsb fimul push repz ljmp aaa and pop jg lea sub imul lock dec inc rcl fidivl cmp mov lret dec lcall ret mov jns aad jo into fs out fisttp or sbb mov rolb psrad jns or rolb or lcall inc and aas je out insb mov cmp cmp les orl fidivl cli ficom and mov adc mov ss (bad) adc lods and insb loop cmpsb gs loope xor dec and mov dec mov mov test adc cmp inc rcr and push cs and xchg sbb pop lcall sbbb std stos push roll loop jl dec ljmp mov test add cmc mov push dec pushf notl mov aaa cltd inc mov arpl xor add hlt (bad) ret mov sti push adc cmp push push mov adc and adc inc sbb sub dec (bad) mov pushf xchg insb pop xchg mov cld movsb add mov add inc lods lret mov aaa lock push (bad) in (bad) imul aam sar sub inc and sub in fild jne lahf sub push mov xchg cmc jg repz aam shr pop int3 pop push cmp in scas and jg jg aaa mov mov repnz push pop inc lcall inc cmp call ret push pop xor dec xor (bad) ficompl std fwait sub xchg in pop les jg (bad) lcall xchg push adc cld inc nop loopne pop sar push test add pop sbb inc call into adc ja inc mov add fstpt in into stos xor mov sbb sbb clc (bad) pushl mov add mov andl cmpsb test fmull outsl push aaa dec sbb cmp fcomip or cmpsb add sbb inc out lcall xchg fiaddl imul and aad inc icebp xor stos or jle (bad) lods or cs notl aaa push cli das cmp sbb mov pop hlt push pusha mov xchg xchg cmp jle push fisttp sar push out (bad) icebp test loope jno (bad) call js mov xchg or mov sbb and addr16 je push or dec pusha das clc pop cwtl add fcomi jb mov je scas and xor jo insl inc movhlps arpl cmp enter hlt and or lahf push push test xchg lock cmpsb or cmp sbb mov add cmp int3 repnz xchg mov loope les mov xchg cli aad inc jne loope loope std or pop mov jo add and data16 mov jns outsb pop push dec insl leave push sbb and (bad) lds subb jne fisubrl lea mov inc aad mov bnd aad and add fwait cmpsl inc cmp inc cmp jle in ja mov mov insl push mov stos ret sub jge fmull clc sub imul jbe add jp and std cmpsb jg out mov lock or fwait push leave ss lcall xor pop xor adc sbb mov pop lahf call cmp add jmp and and out and addb cli dec dec jo push das inc ja add add mov add sub push sti cmp jle test stos (bad) call sbb jbe hlt xor movsl xor cmpl and add aaa dec cld adc jbe mov or jle sahf insl xor xor push adc or jge adc dec jo adc mull ret rolb clc outsl mov int3 mov lcall ja fs mov outsl dec cmp sub setns cs mov pop loopne out sub mov repz test lcall adc jae (bad) mov push test lods imul inc mov pop xor mov sbb rcll cmc inc sub ret dec push aaa pop push jb test insl mov or ret decl movsl adc jns lea stc sbbl pop and xlat je sti mov test cmpsb push xchg sbb (bad) (bad) jmp enter hlt not xor (bad) jle xchg mov add das fldl or loope dec push inc (bad) sbb es subb jmp (bad) push (bad) pop fdivr push cli rsm cwtl fcom xorl imul xor fs movsl jne cmpsb xchg xchg xor ss (bad) (bad) ljmp in orps mov jno add imul cmpsb rcrb adc adc pop cmpl cwtl dec xchg add (bad) call pop jp and mov ja inc mov push (bad) decl pop mov inc dec test push imul jno adc loopne sbb ljmp pop (bad) (bad) (bad) inc add mov divl push jo jne popf ret imul add test scas cld dec loopne test and (bad) sbb jnp fimul je jmp incl ret adc dec rcrb iret loopne jp arpl xchg sub loope mov (bad) mov nop cmpsb or jg out daa scas and cli rolb arpl cmp decl pop ljmp lods sbb cmp (bad) js pop or addl aad adc mov xor dec xchg testl loopne or sub jg pop cld mov lret clc mov jnp ljmp lcall outsb insl cmp push pop lods dec popf inc (bad) jnp add cld jmp out cltd inc je push ret and pusha imull xlat aaa in rclb dec sahf das (bad) cmc call adc icebp push lods cs rolb cmp adc (bad) lcall or enter js sub inc add mov (bad) fucom inc sbb cltd movsb or decl fisttp fwait xor adc (bad) jg jmp jmp cltd int3 sub jmp test ret sbb imul add mulb clc decl frstpm(287 add mov fsubr dec in nop jbe sbb pushl out adc sbb fsubrs loopne cli xchg cmp out inc inc dec sub sbb (bad) (bad) pushl cld pop or pushf mov out enter aaa cmp jb push test shrl ljmp sub lods add push inc dec sbb push sub pop cld xor clc ja mov ficom pusha add int3 js pop test or fstpl mov arpl mov clc and mov mov ds and (bad) jge inc insl mov xor shr insl add or lea or or mov push test push sub mov cld adc cwtl mov cmp push cs xor and adc (bad) jbe aaa or rcr fsubl add lcall (bad) jg fidivrl out data16 sbb or incl push nop rcrl lods sbb cmc pop lods jmp mov imul daa hlt out hlt jg add xchg mov sbb dec push mov sarb jge stos sub imul mov (bad) jge mov jmp xor (bad) fcomip clc push jno add nop jp (bad) pushl movb xchg add notl cmpb jmp pop mov jge into jg cmp out out lds jle rcr xor lahf lret mov pop jg mov fadds gs or loop ljmp mov js (bad) addl popa mov pusha push inc pop cltd ret imul imull in (bad) jg jp jle std nop sbbl jl or ljmp dec xor rolb mov add testl mov sub (bad) jecxz lcall push out aaa movsb popf clc movsl add rolb pop (bad) mov xchg cmovb sar ret sahf hlt adc loope (bad) jmp js sub (bad) or fist or arpl call dec shlb scas and inc int3 xchg push in test mov icebp or decl loop adc fs or dec sbb push loope xor jp fstl jge cmpsb add cli mov pop sbb sti fwait insb (bad) lcall inc and mov and mov mov mov dec decl mov lock add (bad) xchg addr16 pop gs sbb stos or icebp outsb (bad) stos (bad) call lahf jb movsb fsubs cmp loopne stos aaa mov jns lahf in or scas popf sbb bound subl insb inc lcall fist xchg data16 adc nop (bad) decl not mov xor and int3 jo xor and or mov xor add lds mov call ljmp push jae pop lds cmp mov add sub cmp xorl call nop push xchg aad lock es lea out loop inc adc je sbb pop inc fs push add and jns ja (bad) pop inc add repnz sub pop lcall adc ds push movsb jne ljmp inc lods (bad) mov or movsb cmc or lods mov pop inc ret sub dec outsb add lcall sub in frstor add ja mov xor push mov (bad) mov and std xchg mov fnop pop hlt out mov ss xchg rolb fcmovbe lcall pop xchg and sbb aaa mov ss fs sbb or (bad) or add push sub push hlt (bad) ljmp cmp or add xchg and adc add inc dec fsubs sub add out jmp (bad) pop push or dec (bad) mov rorb sbb mov rcl dec jle,pt scas sbb loopne aam clc dec call dec mov ja incl pop das jo or sub mov mov pop (bad) (bad) mov mov fimull in add jmp xor push test cld popa push cmp lea and sarb xchg add and aam test fbld pushf or or mov sbb nop cmpl jecxz clc adc xchg xor jbe inc js aam fild es ss mov cmpsb das xchg mov dec adc lea idiv sbb push xor aaa pop mov sbbl call insl pushf scas sub clc jae or js mov imul insl out inc (bad) jg imul push (bad) xor jae sbb xchg ss fisttpll jae adc jmp mov test dec sti xchg out (bad) jo ljmp inc aaa pop movsb dec out dec hlt stos pusha cld stos push insl repnz outsl int3 push xchg pop stc mov mov popf dec les out push sbbl (bad) incl dec adc testb sbb jbe adcl into aas je mov cld lcall mov stos enter cmpsl dec lret notb inc (bad) sbb mov cmpl or (bad) jg scas mov repnz xor ds or (bad) insb in (bad) dec in clc (bad) mov pop aaa in aad mov popa ret test dec cmp lcall popa in push or roll or add dec or outsb xchg (bad) fisubl adc notl mov cmp aad xor and cmpsb sbb (bad) inc xorb sbb jb sub xor (bad) jp into int (bad) jo test fdivrl dec sbb sbb pushf pop and call cmp pop cwtl adc push mov dec sub mov push xor inc jecxz fbstp mov shlb dec adc daa pop mov mov (bad) sar cld or int cmp dec jmp ja clc ja xchg lds ja ljmp mov fstl cmp xchg sbb cld lds mov fst dec dec and cld pop or dec ret int test (bad) cmp or mov int outsb adc frstor xchg clc dec es mov dec or aas inc std xchg testb stos jb orl out add flds clc arpl or sub lret (bad) inc in mov in test jo imul imul hlt test lds pop xor mov cmp sub adc jg sahf hlt pop mov frstor frstor mov mov push es (bad) fs dec nop (bad) mov jnp scas (bad) mov pop inc add shrb outsl (bad) call cmp lcall daa int push daa sbb dec iret incl (bad) xor jns repnz lock adc push lcall lock push cwtl and sub jne roll out mov xchg loopne jge jns ret aas jl aaa sub inc in mov inc push bound mov add push and pop (bad) xor mov call (bad) jno and push fld cmp xchg (bad) lds decb adc (bad) fcmovu fistpl std (bad) (bad) pushl mov mov test and fiaddl imul in fwait icebp xor (bad) mov shr adc imulb fimul sbb or sbb arpl mov gs push sbb adc mov add and ds add fisub mov add ljmp cmp cmpsl bnd ss lock pop ret fiadd pop xlat stos mov sbb sbb push xchg ret dec push lret xor inc cmc mov dec sbb push ljmp and out (bad) sub fstl movsb sub test mov mov adc or push add ds inc pop pop or pop movb in (bad) xchg add push mov cmp fdivs push inc jecxz dec hlt dec and (bad) inc xchg or and fbstp push sbb cmp mov cmp sbb in ret int3 (bad) jmp dec adc movsb js jg lcall mov sbb divl nop imul jb int (bad) mov sbb (bad) in inc jle fcomip (bad) ljmp and outsb in mov dec dec sbb xchg push loope ss (bad) fcomip mov sahf iret clc js ret les inc xor mov (bad) dec dec push (bad) jmp cmp insl enter (bad) jmp (bad) xchg pop decl add inc xor decl (bad) jne clc pop jg outsl adc add imul ljmp (bad) fmull jae and or outsl push sbb (bad) sbb aam or (bad) je gs ret (bad) incl outsb sbb sub or add adc mov sub pop mov mov sbb cmp mov xchg in jg mov xchg in xchg push je or mov (bad) jnp aaa aas mov cmp ljmp cmp test arpl sbb jb mov inc test lock inc clc pop cmovs (bad) fildll jmp adc cmpsb loop addb cmp shrb (bad) pushl pop mov int ret mov push gs mov in cli mov mov rol push pop movsb push adcl adc jp outsb jnp (bad) aaa rol push enter daa cwtl (bad) call add pop mov cs pushf adc fcmovne aas push (bad) out cli incl cld xlat in cltd icebp inc jne loope push hlt jae fildll fildll pushl ja xchg hlt out mov iret dec push test sahf inc pop mov sbb cli (bad) and fiadd ja pop loopne lahf leave add mov cmp loop loop mov add test cmp dec push pop cmp mov or pop enter push fdivrl mov (bad) jmp (bad) pop sub pop sub or out sub (bad) fistpll fcoms mov cmp fsts mov aaa sbb adc ljmp (bad) les out push mov lds mov jg clc loope inc addr16 lcall call ss negb xor out mov dec jmp cmp adc movl out sbb pushf stos jg les push mov pop jno mov mull inc push js rol or sbb daa add xor movsb lcall rorb cwtl fsubs and jno xor shrb xor in inc mov push fimull movsb push frstor int mov cmc mov add testl push fisubrl (bad) loop push or jmp sub or push outsl neg js nop clc inc sub push dec adc movsb fld mov pop cli or stc mov pop ret and addb jo push or aam ss pop jmp nop jno popa testl pop mov lods and loopne xor lods test stos rclb (bad) iret (bad) decl fnsave mov push clc push fistpll rolb jae outsb adc xor mov inc jae (bad) sub jg sub mov mov loope inc mov nop clc test popfw xor into sub cmp pop (bad) jg shlb imull or lds je push dec fsubl mov cld jg sub iret mov mov pop mov push (bad) jg out dec push imul fistp js mov (bad) mov inc jmp push add or add sbb xor pop xor add push int3 cwtl or xchg add sub sub inc push aaa loop call adc rclb sub add jae push insb inc ja fild or push mov shrb stos inc insl (bad) mov shll cld int (bad) in daa les incl push fsubrp cs jb jb call std or cmp or mov and test mov fiaddl icebp pop inc lods clc mov dec pop sub mov es sbb imul fdivrp das dec mov sbb mov fldcw lea js ret (bad) add jmp sbb int3 xchg mov outsb mov sbb xchg inc adc dec sbb (bad) decl and or repnz mov jl outsl push inc mov nop subb mov add push xchg cli mov add popa or les insb in xchg or inc into movb data16 inc xor mov xchg (bad) sar aam or xor cmp cmp push or adc imul xchg pop dec inc loope push mov int3 and or pop xor pop dec int3 loop cltd sub cmc lahf mov cmp mov sbb sub repnz add jecxz ficompl sahf inc xor xchg mov xorl or pusha mov inc mov mov inc adc sbb or out clc dec or lods ds sti dec mov cmp stc and mov (bad) jns sub loop add add inc xchg or pusha push (bad) pop clc incl (bad) aad sub leave xchg adc lahf mov leave sbb add ja mov les push movsl add std jg jne,pt pop (bad) ficomp adc das dec cmp mov shrl and pop movsl push xor add (bad) aaa insl ljmp rcrb jp xchg shrb cld les sbb push sbb sub inc dec mov frstor imul mov lcall insb mov fcmovb out shlb stos sbb or popa push xchg adc xchg cmp ja pop jp push or cmc adc add lock mov jae arpl dec data16 sbb (bad) push leave and (bad) xor mov pop and add jne pop sub iret (bad) ljmp fadds xchg rcrb icebp mov sub cs aaa mov jmp pop push dec mov ret lock mov insb pop add fistpl pop mov lea aad pop inc push (bad) and loopne fnsave dec mov inc cmc fwait movsl call clc adc mov mov add mov mov mov andps sub ljmp in jmp adc cmp lcall nop clc into push jle andl cmp add sbb pop loopne mov and in dec cmpb rcrb incl lods xor daa mov imul (bad) pop lea lock mov adc dec cli cltd add inc shrb xor sub mov adc mov cmp test insb cmp xchg pop scas xor push push in outsl pop adc (bad) fild loope hlt arpl xorl cld out cmp adc sub (bad) pushl add and es ret arpl in xchg pop imul mov lcall xlat mov cwtl xor iret inc subl popa sti cli pop call inc stos in imul (bad) cwtl mov roll sub dec cltd adc mov xor lcall pop adcb jne mov int3 pop call cld (bad) call (bad) loope sbb dec int3 add cwtl out ja clc aaa cmpsl and orl xor mov iret or cld sub sbb fiaddl or adc stos inc sub xor xor decl or call pop movsl add add mov lcall orl imul or jecxz outsl call lret pop push sub mov mov ficompl adc imul shll xor adc mov outsb add push das outsb add mov sbb cmc pop cmp icebp orl fiadd repz push xor dec lcall push pop fcmovbe jmp neg add (bad) pushl and addl sbb pop out scas dec add jmp push (bad) (bad) (bad) pushl jnp test enter xchg push xchg gs pop ja outsl and cmpsl jp iret (bad) out es add mov rclb xchg fs out sub leave imul add pusha fstpl fild lret jae clc aaa rcrl cmp pop fcompl mov (bad) jne jbe add push mov icebp inc sbb clc ret daa cli inc and pop fstp add insb cmp push hlt decl notb add test sub pusha arpl jbe lods (bad) adc mov test popf es vmwrite xor adc in test dec insl dec rorb cs adc daa ljmp jmp movntps sub (bad) lcall or xchg add aaa pop leave pop cmp pop adc jg ret lret and cmc add (bad) mov add xorb dec (bad) int3 repnz xor pop xchg loope and add scas enter flds and decl loopne out std cwtl sub fs and pop adc cmp pushl std sarl dec pop mov imul dec sub mov mov or push dec push mov sarl std pushf (bad) and pop pusha aad test cmp inc push or (bad) das mov rclb inc add mov out arpl sub sub add pushf rolb ret (bad) (bad) jg sti mov mov test fwait sarl (bad) (bad) (bad) jmp out test stos pop mov mov sbb repz inc and push test cmp fwait popf pushf push jnp lret stos rcl add push and jg inc cld inc stos mov (bad) mov cld scas aas pusha cld sub push fisubl mov inc hlt jecxz jnp mov inc mov mov push pop outsb in xor xlat out mov jmp subl pmaxsw arpl jg loope inc add bound addb mov (bad) out pop adc aam fwait js mov mov out xchg sbb (bad) decl sti xor aas jmp out ffreep xchg xor cld jg mov inc pop push push cltd push or add sbb dec adc les clc pop or repnz scas gs ss arpl cmp dec sub hlt jle push adc jbe and out and andl or ljmp add cmpsl sbb cmp inc jnp add sub call cmp jbe jmp xlat pop out (bad) xchg rcll lock nop jnp and adc outsl (bad) or (bad) sub addl adc jg,pn inc sbb (bad) out cmp add push iret data16 adc aas fs push xlat movsb jg mov pop xchg clc pop adc (bad) lret inc jbe int popa out cmp das loop and ret pop sbb sbb jge or sub lea dec (bad) (bad) ljmp int3 (bad) mov or jl xor call xor pop fimull ret clc aad push cmp dec jne out inc (bad) pushl push cmp dec cwtl fisub push adc (bad) (bad) incl pop stc and (bad) hlt add cmp jbe or lcall mov mov xchg je les mov dec shrb fidivrl lret sub adc or bound cld mov xor lret bound fwait mov sub bound fisub (bad) pop push cld mov cmp sub (bad) lock sbb cld add (bad) ss popa sub xor pop add outsb pop jnp mov sub out sub mov mov mov mov add cmp jg sbb sbb xchg (bad) mov aam nop jmp loope inc subl sbb aaa mov outsl jg jbe dec mov dec sbb stos out into pop push or mov nop lea inc inc push or in les xchg fsubl xor inc mov inc bound dec jmp mov sub cmpsb jp pushf and incl adc push mov adc int3 or adc jp push dec les rorb adc add loop ja (bad) or push je fisubrl test jae sbb lea fs js insb insb shrl rorl cmpsl (bad) decl dec ljmp nop push pop or adc and incl mov dec test pop add mov push addr16 jmp dec mov pop lret cmp mov enter ss les xchg xor rcpps out xchg dec mov jbe adc jl aad and inc (bad) lahf es or rcrb inc sub jp inc cli lcall adc movsb cmp rolb cmp and push ret mov (bad) mov jo cltd inc and popf xchg outsl pop jbe clc roll xlat fildll add or clc (bad) jg bsf sub fstpt add adc add inc dec or in adc pop dec push xchg mov lock push push (bad) mov inc add push jae add fwait or push insl daa and incl add adc push jne les and outsl daa push fucomi pusha cld sub sbb mov sub push xor lea pushf add jae loope sub into ret lock lods cmp lcall call xchg enter sbb adc add dec cld add lcall mov mov mov imul (bad) nop push ljmp inc je call in gs call insl push fwait dec fmull scas imul sarl xchg jns (bad) cmpb and mov xor push sbbl or ljmp push push and or adc pop loop sbb (bad) jmp pop adc add add out (bad) cmp dec push cli cmp inc add outsb fdivrs rclb xchg outsb mov or lahf cmc pop cld add cmpsl push (bad) (bad) adc push daa push adc dec adc push test outsl stos (bad) and mov or lods into lret (bad) adc push mov insb pop mov jg inc sti xor add js add (bad) lock dec fldt test cwtl or add xchg ljmp pop testb or loop rorb and inc cli addr16 hlt cwtl mov jl loope xor je fiadd imul jae add xor mov push push repz mov outsb jno or (bad) sbb subw pusha mov xchg mov ret adc and loop movsl mov cltd sti scas je mov fwait add out lea jle (bad) ljmp popa jns out test jns loope out adc outsl mov cld stos add lods and outsl (bad) mov jbe sub (bad) incl xor cld rolb mov out push or sarb das aam mov cmpl inc jecxz add pop mov dec fidivl or jmp shr test dec jno jmp shlb pop pushl adc and push out xchg mov dec mov inc fcmovnbe pop orl mov sbb loopne adcb push xchg ss ror push adc sub je pop ficompl xor mov aam mov pushl sbb movsl add mov jnp and outsb cld mov xor push xchg or xchg sub jge incl dec jo cmpsl icebp les cmp cmp cmp push jo or and cmp inc pusha gs sub push fdivr sub push js leave movsb jno inc jg xchg lds lods jne loop pop cmp lods jns adc mov xor movsb fsincos int je mov je pop or movb cli add jg movsb pop adc cmp pop inc push sahf sbb mov loope sbb insl in (bad) ljmp cmp (bad) (bad) decl imull mov clc outsb inc xchg push (bad) lcall jmp mov bound cmp (bad) (bad) mov jg test je lods rol jle push inc sbb push xor outsl jge ret ficompl and jge mov stos mov insb sub cli adc adc in inc aad (bad) (bad) mov cmp shrl jecxz cli jecxz daa add movsl arpl ljmp js push add enter and movsb rcrl mov lea wrmsr mov stos mov dec dec sbb ljmp rcll pusha out (bad) pushf nop inc in mov mov out and dec or jg (bad) push mov dec popa ret mov mov xchg xlat xchg fiadd dec clc sbb fwait pop loop ret and sub imul pop js inc jae dec hlt frstor fsubr pop or adc pop fisttpll fbld fndisi(8087 ficom mov das cli (bad) decb insl bound (bad) (bad) xor (bad) lcall cmp push data16 mov es hlt out inc data16 fwait sbb mov pop cwtl fnop add (bad) (bad) decl cmp xlat or clc dec comiss xchg je out imul call pop (bad) mov jne loop (bad) icebp fwait add cmp loop aam leave and mov sarl mov cmove out xchg push es (bad) (bad) (bad) fcmovne mov sti cmp or addb add das add in (bad) mov in mov js rcrl cmpsl and call nop push mov jl mov (bad) mov push xor (bad) inc fstps pop mov ss test push jecxz sahf jns imul bound mov bound es (bad) incl scas mov pushf idivb cmp popa inc fimull push mov sbb push dec add pushl aad cmp lret jns xchg adc stos (bad) mov das xchg inc xor jmp loope add cmp mov pop test sub push fwait jl and mov bound std lea addr16 nop insl cli dec or jbe xor andb cld roll sbb cwtl mov add xchg add mov cmp clc xchg sbb fdivl dec ret data16 shrb pusha cld pcmpgtw jae jecxz lds cwtl loope cmp aaa mov adc into call sub add push fimul sub mov cmpl inc int3 std scas xor arpl dec sub les (bad) push (bad) lcall lret mov mov push dec jo mov cmp pop adc sbb mov xor pusha subl mov shrl std cmpsb mov jo inc je jmp xchg jae inc xchg dec outsl cmp mov (bad) dec test sub ret sbb int push btc in loopne fsubl mov in out inc dec jecxz (bad) sbb push imul mov fisttp das mov sbb sbb movsb xor out add scas or les call jle stos add aaa lret ss push shlb xchg pop negl dec adc sub xchg scas shrl in repnz jne pop push loop (bad) mov cwtl loopne jns add je sbb inc add or add mov dec (bad) (bad) incl (bad) push or in hlt out cli mov add sbb jbe jg and (bad) mov fsubr or (bad) (bad) push mov call or mov xlat add pusha cld and sbb int3 add mov push sbb inc xchg clc std jmp mov aam jno fiaddl sbb call sarb es jns or dec sub lods (bad) or cltd mov icebp lcall or lods fsubrp sahf adc loopne jbe pop pop mov lock xor fsubrs mov subl sti out mov outsl andb and stos iret lret repnz lds (bad) roll xor adc repz mov out test bound in movsb push push lods mov push nop add mov jp in lret xor cwtl stos repz pop adc (bad) mov (bad) mov push fsts stc lcall arpl push (bad) ds fstps popf cs pusha push sbb push fwait pop and data16 std data16 out xor iret xor sub or or cmpsl xchg clc mov push sahf xchg push jb ss andl adc mov add cmp mov test into sbbl pop movsb mov adc sbb adc and or enter jg mov adc inc pop icebp dec sbb cmp pop push xor (bad) jae rol lcall mov add pop test jecxz (bad) dec fildll jge sbb hlt bnd mov mov pop sti push and jo pusha sub mov ss stc xchg add mov aam lcall mov fcmovnu pop lcall rclb pop xlat xor inc sbb clc push std pop (bad) add fdivs call xchg sarl mov push nop lcall (bad) insl dec stc and dec sbb aad push cli pop cs mov mov push aaa pop mov popa inc jbe ss sbb push cltd xor aad add cmp das stos ljmp cmp jnp inc ljmp (bad) testb adc mov enter pusha mov push andl enter (bad) jmp ljmp popa fisttp ret cwtl (bad) andl mov shrb add mov stos xor inc cld data16 or loope idivl shll (bad) pusha daa std fadd sub or mov xchg (bad) push stc inc lods cmp loope adc ss repnz sub (bad) mov scas pushf addl sub movsb mov or push jle loopne add inc js (bad) jb sbb lcall push dec imul std rolb lcall jo ds (bad) stos push scas push add jnp mov jbe fldl xchg xchg insb sahf sbb mov mov call insb clc out loop outsl fcomps xor pusha mov push les cld hlt jg push fadds pop mov das (bad) sbb nop mov xor mov (bad) or xchg cwtl sub icebp fistp jb xor adc addb out es sbb cmpsb pcmpeqd pop and mov aam ret sub jg cmc inc shlb adc inc (bad) inc dec xchg iret ljmp mov lcall inc or adc and inc mov clc outsl adc push js push popa mov clc mov push out lahf mov aas or enter inc movsb add loopne pop add pop inc (bad) cmc push jnp icebp in outsb add push fwait mov and pop (bad) ljmp pop or mov push bnd out mov lret xlat cmp jno (bad) mov and aam adc pop jo loopne decl push cmp icebp cmp dec mov aaa lret dec insb (bad) int and ljmp sahf test insl mov push xchg inc movsb inc pop add mov lcall mov push sub jge add mov mov xor push movsl mov adc pop xchg adc pop popa fs (bad) pop movsb fcomip jae data16 imul dec mov push push mov mov fs pop inc adc aad sbb out inc add add mov lcall loopne add (bad) pop jb inc sahf lret and je mov ds insb lea xchg or lcall mov call mov lret pushf xor cld jle (bad) (bad) jmp sti dec add push mulb inc jmp popa mov (bad) decl mov sbb push scas sbb arpl adc ljmp clc lds ss jnp rcll jns mov rorb (bad) fnop sub ret adc fbld sbb pop sar push int3 push test clc mov test jnp sub xor mov das sar aad rcrb jp sbb lahf inc push call addr16 ljmp lock mov dec push (bad) pop ja or es push cmp imul cmp clc icebp xchg sbb insb mov fs inc in fcomip mov mov and xor out imul pop idivb add adc inc in cmp (bad) jg and mov cmp push add shl fbld int3 sub mov pop sar sbb movsb mov sahf aam mov add sbb xchg pop add int std shlb enter push push insb sbb clc scas movsb mov lock and ss aas sub clc cmp mov sub incl sbb stos pop mov nop or ret cmp sbb out push incl xchg lods mov std mov sti mov mov push in sbb inc andl ret shrb adc mov sbb pop fs ficoml imul dec rcrb out sbb insl clc pop add je adc add call mov cmpsl mov (bad) incl and shrl dec arpl add inc mov lock cmpsb adc sbb loopne and mov (bad) ljmp adc loope ret aam aaa mov jbe cmp dec sub push inc sti mov into pop in jnp in insb out cli sub jbe imul cmp dec das mov ret pop sub adc lret lahf jbe (bad) xlat sbb aam pop (bad) incl faddl cmp cmp out je sbb call rol jbe loope mov decl fimul lret outsb loope (bad) fildll aam cmpsb loopne (bad) (bad) push xlat (bad) test mov dec dec sahf mov fcoml int3 fsubl cmpsl mov or dec xor xor jb xchg mov xchg pushf xor jp movsb xor mov push pop into pop test (bad) jno std decl push clc das jmpw test sti insl mov rcl into mov nop mov pusha out jb ja test movsl insl and xchg mov call dec imul push push aam adc jecxz mov cmpsb xchg jge insl mov pop cmpsl dec pop mov mov cmp scas jne pop mov mov add cmp xor cmpsl popf (bad) or mov aaa push mov nop sbb incl pop (bad) jae lds (bad) jl xorb pushl (bad) (bad) je jmp sub mov es popf mov jae push add mov or aas dec clc jle add out push adc scas add das fdivrs (bad) xor pushf xchg in loop or (bad) jmp addr16 les iret mov ficoml add and mov jg inc movsb and push sbb sti movsb push sub je or add repnz aam mov or outsb jbe pop orl and pusha addr16 daa add pop cld dec jno or add fistpll fistpl cmp (bad) ljmp mov sbb jle adc pop add mov mov or add sti cwtl push push pusha jno,pn outsl cld dec or or jle pop mov sti pop inc xor cmp pop push shrb ror pop shrl pop inc sub or mov mov arpl xchg xchg lods push fwait pop lock sub dec mov test cld push ja mov sti cmc popa add sahf test inc add cmpsb lcall and es fildll ret test mov aaa add inc insb xchg loop adc das test adc or sahf cmpsl sub add pop int push mov cld fcomip call jmp rorb pop nop pop loopne (bad) jb push loopne loop pop add add jle cld and dec fdivrl pusha xor jge inc jmp dec aam (bad) fildl sarb cmpsb decl or xor insb add xchg imul aas or jg icebp adc jge sahf fimul aam sbb fcmovnu xchg dec dec push int mov pusha adcb std (bad) (bad) clc or es lea and call lds mov repnz sti adc mov and pusha ja inc pmaddwd out xchg arpl and hlt adc nop out fild and in inc add jno cs sub jne push stc pushf mov loop pop int sub int stc mov or pop mov xor jb adc je ret test sar (bad) add fisubrl popf rcr testb arpl push xchg pop ret lahf loopne push sub loopne fs lds into adc add dec std or push jbe les mov (bad) bnd cs and mov push adc lcall fisubr cmp out hlt add pushf lock arpl hlt jbe ja les pop push jecxz out nop (bad) lret jg ljmp cmp inc jo outsb hlt add cmpsl jmp (bad) je and cmp scas mov cmp mov mov jecxz adc insl rolb lock mov aam (bad) mov ja fnop lea in dec push lock hlt mov lahf test pop fadds dec add mov cli (bad) cmp xor test add pusha mov (bad) das frstor cmpsb js xchg fcomps dec and imul (bad) decl fnstenv test mov aad sbb std rolb jnp data16 subl clc sub js dec loope mov aad mov cmp clc (bad) decl into adc pop or out dec les dec loope nop lock push sbb int3 mov or insb adc cltd incl cmp lods pop aaa pop lock stos mov mov dec test mov lds add dec push out in jp sbb (bad) ss mov call mov int3 mov (bad) sub pushf mov mov or insb and add inc fadd adc ret sbb and xor popf outsb xor dec push jmp pop imul repnz es cmp sub dec cld sbb xor dec inc add adc sub push das dec jo hlt pop dec xlat fs jl inc and out lea std inc and jmp mov mov loopne mov mov (bad) lcall xchg loop mov cmpps rorb (bad) pop push loope cwtl ret ljmp into mov (bad) out cli ljmp mov lea rorb or loope adc out mov lea cld ja jle or jnp inc sbb idiv leave ret mov call sub push inc pop add jbe outsb adc adc cwtl loop xor gs sbb aad pop (bad) incl insb inc or ret ret lds inc subl push outsb jge add push int push xor fmul jbe fcmove jmp add sub imul lcall pop mov xor sub add fisubr add dec mov punpckhwd (bad) jg add and add divl jbe nop fdiv and mov das (bad) (bad) call inc or (bad) pop sub les mov jb mov inc adc hlt cli es (bad) decl cmpb pop dec sbb push arpl enter fcoml out (bad) ffree out out mov inc (bad) xchg iret rcll lods pop pop lcall xor pusha inc cmp sti push insb push (bad) push or xchg add loopne adc pop sub jno jnp pop in loop das (bad) sbb std test mov lcall decl cmp aaa je ret add or data16 movsb ljmp pusha je (bad) pusha and loop lea or js insb lds add je cmp and or jmp sbb jns insl imul cmpsb cld daa sbb fildll mov mov pop bound xchg (bad) lock bound cld adc test pop mov mov xor mov arpl jg xchg inc ret xor xchg jnp push (bad) std add pushl insl insb out cmpb or sub mov ljmp sbb push lret loopne sbb mov outsl call lret fadds cmp mov mov mov or adc push mov rcr push cli jns out add imul movnti testb or js subl xor jg jbe dec mov cld xor sub adc ficomp ret jb out cmp xor shrb das add inc (bad) lcall pop and addr16 lock jbe xchg lods sbb insl mov mov aam push (bad) (bad) adc inc clc xchg add lahf repnz adc xchg push pop xor adc lock rorl call or sbbl pop in push add sarl das nop cli ja frstor out inc dec adc add adc loope inc and (bad) fbld cmp popa jno out lahf in sub scas repnz add out inc jle aam cli mov outsl fimul ret push and (bad) incl lds jne in adc (bad) mov push adc and sbb sub (bad) xor (bad) ret mov mov inc je mov fsubl call daa stos repnz and cmp js mov mov cmp sbb fwait pusha add inc add xor dec add and dec xlat retw (bad) ljmp outsb xor rorl nop shlb jno xor call fisttpl ja or mov add pop adc dec movsb adc cmp xchg cmpb pop aam outsb and mov je sar cmp add cmc mov (bad) or clc sub insb dec and pop js insb cld pop xlat mov fidivrl and outsb adc notb or lcall adc sbb rcrb jmp mov cli mov incl scas lock mov fbstp push adc movsb aaa mov inc xchg or dec mov add scas push mov mov cmp test fistpll xor add das das (bad) stos (bad) movsb add sub clc dec imul mov or (bad) cmp fdiv mov cmpsb loopne lods xchg leave fcomip push sbbl cmp push xlat adc xor mov push mov je xor cmovno sbb ja cli es or loope hlt adc inc inc int ljmp and cmpl int3 mov in dec push adc imulb pop clc push cli mov sub rcr iret jp std xor pushl (bad) jbe dec lret out ss dec cmc jno cmp inc (bad) ljmp incb stos and or in mov and in inc adc adc inc sarb imul xchg pop mov adc (bad) (bad) decl loope push jnp jp inc mov pop outsl cmpsl mov dec or dec (bad) repz insb mov aad mov pop dec adc inc rcll (bad) jg lcall loope adc ret ffree sub (bad) bound mov xchg or test pop scas or out adc lock insb shrb (bad) (bad) jg adc xchg inc push xchg sbb pop cmp fldt and fs lods repz xchg in mov ljmp mov and (bad) pushf fidivrl sub dec xchg push push in mov mov sti xor cmc lret and mov push push ret inc sar insb pushf aas loop movsl add shr addr16 pop xchg and addl xchg jl mov mov cmpsl mov cmp fcmovb and fldl test jae pusha push inc mov mov jecxz add mov xor and std xchg xchg in sbb sub testl rolb (bad) xor mov jg push shlb or sub lods push call cmpsb sahf mov mov push jmp adc mov outsb mov cmpl pop mov pop or out add xchg (bad) mov jg inc cld fistpl mov pop ss sub jo pop ret insb adc or xor xor loop jecxz (bad) data16 sbb enter (bad) (bad) incl xchg inc into rcrl int mov mov cmp jp sub inc je bound pop in sbb adc cli adc repnz ljmp push imul cmpsb xlat jo bound aas imul dec lock rcrl or dec sti jno mov out add daa in adc push add std in into (bad) scas and ret add (bad) (bad) (bad) fisttpl (bad) dec cmp mov imul add and nop (bad) jbe shll mov in jno test imul aad or fwait cmp xor cmp xor nop push dec or std pop pop dec js cld mov fcomp icebp (bad) jns (bad) stos push (bad) decl mov aam fadds popa mov mov and shrl call ficoml push and and pop jb lahf imul dec dec out push xor test jg pop adc inc fmull mov sub test ja clc cmp fs incl xor jae push into stos fistl cmc lcall push mov mov scas ja les jl nop dec adc (bad) incl xlat and mov ret (bad) sub fsubrl aas popf repz mov ljmp inc hlt call push inc sbb jle add fst mov jp int3 mov jg jg cwtl jbe sar int3 (bad) lods clc inc mov mov pop icebp fcmovnbe adc (bad) jne dec or (bad) jmp mov (bad) and add fwait mov and or inc add or js cs lock (bad) incl xor movsb pop add ficoml inc shrb mov jno or xchg push sbb lods insb test xchg pop xor addl xor xor scas out stos dec push (bad) jl divb pop cmp (bad) sbb xchg fwait mov mov dec inc dec inc adc inc cld mov or jno and stos (bad) (bad) jg mov or lods ret sbb pop andb movsl fmull cld pop xor sbb mov jp push mov xchg jp fsubl add xchg sahf xor call sub mov test or test outsb or movsb data16 dec insb mov xchg xchg lret scas (bad) cmpsb (bad) out add mov add notb scas sub loopne push imul cs jmp add mov aas inc (bad) bound mov inc (bad) or stos and (bad) mov inc dec pop sahf and inc and dec ret jo popf pop lret divb test mov mov icebp aaa shrl mov stos add or add fist xchg inc push (bad) aam rclb and test stos mov adc pushf pusha scas insb mov out and xlat shrd pop mov mov movsb in and xchg fisubr rcrl cmp cmpsb inc push clc (bad) decl inc fistpl sbb test dec inc pop dec rorl adc out loop xor cli lods pop sub aas aam xchg popa insb mov cwtl aam incl jae sub leave cmp sbbb (bad) cmpsb add or mov (bad) out push imul sti (bad) fild aas inc subl loop add les repnz mov sbb dec mov xor insb rclb cmpsb adc pushf repz ljmp les sbb xor inc jecxz xor add xchg xor push rol pop inc add popl mov xchg mov xchg (bad) in hlt mov bound daa mov xor jo add cmp add push add or js,pn push test cmp cwtl outsb (bad) aad in fdivrs add mov les mov cmp add dec outsb clc stos or inc mov or movsb ds mov cmp add add aas aam cld mov cmc jl ret pop imul adcb imul (bad) imul xchg cmp sub jg lcall mov and pop and mulb lods ljmp mov rolb (bad) call fsubs dec xor jnp add data16 mov popa mov pop (bad) outsb data16 std pop or sub push je adc cmc lcall jbe pop or icebp fnstsw mov cmp adc jbe dec inc adc jl cmpsb outsl loop (bad) (bad) call sub adc adc and inc ret pop test cltd inc sub sbb rolb cltd in aas pop sub mov ja dec clc mov dec hlt popf stos fwait mov enter mov hlt dec loope and push movsl hlt mull or push cpuid add add outsb lret fwait add fist scas dec xor lods sub mov mov (bad) sarb mov xchg xor iret test pusha jecxz cltd bound xlat (bad) (bad) lcall push movsb push add add notl inc or pop addr16 (bad) cmpsb movsb lea inc lea lds loope jecxz push stos adc ljmp and and sbb ljmp lods and pusha or test addl imul mov push xchg push subl in mov xor loope or jge dec sahf push or lods mov cmpsl (bad) xchg aas js aam xchg enter push aam inc or cld lret int3 popf scas mov jge addr16 push icebp ljmp xchg and ret leave jno sub inc cs xchg sarb pop mov loopne cwtl clc xchg xor cli jg pop inc cmp pop rolb mov ljmp mov cmp fcomip das in int mov clc lea mov jae lock mov add and outsb push sbb sub fistpll push adc and sub push lcall insb xor jg (bad) out cs test push xchg push add mov push inc pop in and jmp add sbb dec sbb jmp xor out pop insb loopne mov ja adc xor push xchg mov decl mov ja mov push jb add (bad) hlt and (bad) jg ret jge and in (bad) and pop mov xchg inc pop sbb popf push cmp and clc (bad) aaa lret aaa hlt shll sbb cwtl and jge test lods stos push mov cld push push rolb mov iret jmp sbb push cmp push dec mov sbb sbb inc xchg int3 push cmpsl hlt js jg or pop mov push jmp xor loop xchg lock insl cmc (bad) lcall js mov mov cmpsl mov test dec aaa cmp sarb popl adc dec dec mov xor popa ljmp cld mov sti and push adc jb int jecxz bound orb gs jg (bad) incl push clc fiaddl mov inc cmpsb (bad) (bad) mov mov push pop dec cmp gs push add (bad) jp jns pop loop lods arpl int3 out js loope cld adc sbb jl dec jnp aas add hlt ljmp ja fisttpll mov nop testl inc pushf cmp xlat adc add ja dec cmp lahf daa pop mov dec dec adc inc js jle adc (bad) jg ret insb lock outsb jbe push divb and adc add div (bad) hlt fdivrl insl fiadd mov fcomi mov imull push mov xor mov mov leave ss pop push imul xchg insl pop pushl or jmp xor in sub (bad) fild jge cwtl and int3 and sar sbb pusha and scas cli fwait sub loope je insb pop bound aaa sbb sub hlt out and mov sar decl (bad) call jp jle xchg mov mov push in fstpl xor push outsb imul les stc cmp push jg test imul jae add jg mov add jg mov fadds shrl adc mov stos cmpsb fildll pop (bad) in orb int3 arpl lahf aam add mov cmp hlt (bad) mov (bad) loope sbb dec pop imul in push mov dec dec cmpsb push mov add decl outsb xchg dec mov (bad) dec call push xchg xlat stos inc fidivr and push loope sbb inc sbb loop lcall inc lea in lea xor pop add insb cmp push je out dec call xchg popf sbb fist dec lret cmpsb jno ljmp icebp fildl sbb arpl cmpb clc push out push mov pop call cmpsb mov or aaa loopne push imul les mov nop inc jo in sbb dec pop xlat push insl adc scas ljmp cmp push xchg xchg mov ret (bad) (bad) (bad) call mov call mull pusha outsb mov lret cmp (bad) loop xchg jno hlt lea pushl cld pop nop fisubl xor pop gs xor cmp hlt push ljmp xchg push cmp pop lods out repnz clc scas cli stos cs or adc je jmp push (bad) decl add loope cmpsl jnp mov aam loopne adc aaa std sbb fdivp xor lret or push cmp push jb pop sub fwait enter ret je (bad) mov test jle stos mov add addr16 out jbe push and les fbld cld nop cmp js cmp or iret cmp pop hlt das xor (bad) mov out movsl adc mov pop outsb mov sbbl out mov arpl dec sbb (bad) adc cmp rcrb or in repz mov imul (bad) fistp mov mov push sbb call (bad) lock add fwait dec lret test xor jmp cmp jmp das or pushw mov mov inc cmp xchg lahf add sahf aaa repz sub call loop insb mov sbb mov add jo mov testl (bad) (bad) (bad) mov jge dec movsl mov pushf movsb mov xor push inc add add pop mov sahf sbb cmpsb cmpb dec scas std sub les loope mov lock ljmp (bad) fisttp inc sub imul fbstp (bad) ds and mov outsb pop mov call flds inc adc (bad) out xchg mov lds xor cmp clc add stc in sbb cs js lret jp arpl (bad) int3 clc incl push adc push pop jns lock sub cmpsl pop or mov ror mov aam (bad) pop cli cwtl stos push sub sbb pop cs mov jmp xchg ljmp mov inc fs movsb pop pop iret loop inc adc mov fwait (bad) dec cmp and xchg cld push idivb (bad) scas add sub xchg std pop cs xchg (bad) in pop push shrb out push xchg or adc insb lods cmpl ljmp dec mov pusha sbb out out mov and pushl jo xor push (bad) insb push lcall or and pop inc add sbb std fdivr mov lcall jmp shlb hlt sahf lock xlat cmc xor in add popa xchg sar adc (bad) cmc imul fild (bad) jg roll add ss sub cld shlb sbb adc out sbb adc jbe sub ja int3 inc mov cmp inc cmpsb icebp pop sbb dec mov mov add loopne ret mov or faddl mov pop xor pop (bad) loope adc outsl mov nop orb sub test arpl pop push les imul or mov mov addr16 cltd adc sub aaa adc mov jp les (bad) lcall enter push xchg add jle and sub or sub es inc clc mov (bad) cmp enter adc je (bad) fildll dec mov mov push push push fwait addr16 nop pop aad add rcr lahf pop pop dec cmpsb jmp jg cmc dec outsb mov add sarl enter push popa add bound into mov popf lock mov mov xchg add inc inc cld (bad) ljmp adc add sub stos es sbb or xchg repz nop push adc (bad) fistl ss int sarl nop or mov cmp inc sahf js mov (bad) jns adc xor mov lret mov jg test roll adc xchg aam jge sarl ljmp xchg push test rcr and addb test subl dec daa je add cwtl jae xor ljmp int lock inc sbb adc (bad) fstpt push in cmp sbb pop popf shlb (bad) jo ds add adc xchg jno pushf push inc gs sbb (bad) rol testl ja inc pop adc jbe sub out fisubrl subl cmc aaa (bad) outsl push sbb call add andl jmp dec add adc std add adc mov into or fimull add fiadd mov cmp mov add bound cld xor mov mov sbb pop mov xor dec mov jne push or mov mov (bad) lcall clc cmp outsl loopne mov sahf mov cmp xor enter mov gs inc cmp inc jg cmp hlt in jb mov fidiv jae jle sub lcall mov sti push and imul add or lret les cld (bad) fbstp fldcw call (bad) and call fimul mov inc adc insl inc or xchg sbb cld mov xor int3 jb cltd enter pusha out and jg das push xchg pushf int3 icebp sbb or or decl mov into push in mov ja nop outsl cli (bad) jg inc push aam push mov call dec (bad) pop cld inc popl pop addr16 fwait fs or movsb int3 cmp add push movsl add cli in imul imul dec jecxz adc outsb in pop fcmovnu hlt fwait xor push mov mov push push inc push loop cli mov push cmp insb ss cmp out mov ja outsb adc sub lahf cld (bad) cmp sar (bad) cmp cmc nop daa push mov test icebp out sub and dec (bad) jg ss mov pop cmp mov cwtl mov aas inc sahf mov (bad) mul call movsb outsb cmp mov pop mov jmp out lret sbb jbe,pn loop mov push loope fcmovbe lock bnd cmp fs imul ja or pop (bad) les out (bad) cmp xchg (bad) mov sbb push cmp out scas cmpsb mov or mov push mov xchg out outsb mov fstpl ret out cmpsb aam or frstor xor aaa adc cld fdivrp add ja sub add ja and (bad) xor adc pusha repnz inc (bad) mov pop cmp sbb dec push sar pusha fs sub mov out adc movsl dec cld call xchg mov mov push outsb icebp fcomip jg xchg push pop popf rclb and popf clc scas dec dec jmp enter (bad) call movsl mov into dec adc cli push add imul sahf ja cmc jnp rcrl sub int cmp mov lds hlt cld mov dec add ret cli imul pop lock mov mov add (bad) mov inc fcomps inc das mov push in aas mov pop sbb push into add mov loopne xchg inc adc cwtl clc scas xchg mov xlat fiaddl ret cwtl rcl in adc (bad) mov pop loopne inc xchg icebp inc lea scas mov stos dec jecxz sbb fisttpll push jbe pop (bad) es mov call sbb adc bound jno add jecxz mov push nop push aad inc daa sub outsb cmp shr mov ficomp push push mov in add and cltd rcr xor in aam pushf je or loopne repnz push fistp fmuls push into cli inc out hlt sbb loop cmp add fwait mov jae jg icebp jbe sahf fdivl dec (bad) jmp inc ljmp lret fldcw add je gs fild call fwait push mov jg sub mov (bad) ljmp xchg cs or mov sbb jg add rep push mov jmp sbb outsb jecxz dec (bad) jmp aaa push sbb jle lret cs mov push (bad) mov call and incb xchg adc (bad) incl sbb fwait mov sahf or sbb outsb addr16 popf mov roll subl jp mov (bad) out (bad) fcoms mov (bad) sbb lods ret sahf push xor mull shrb mov mov inc shrb cmpl mov dec stos pushf cltd cmpsb fisub (bad) cs mov xor inc mov push xor cmp rolb lock push daa mov mov push mov mov mov pop sahf out (bad) jg test jae mov mov mov sar ljmp (bad) in fimull js daa test dec pushf xchg pusha add push jg add mov mov sub test (bad) (bad) mov adc fimull orl mov sub dec jbe pop mov std pop xor lcall aam int inc mov adc push sbb sub decl add mov pushf rcrb mov test enter out adc mov inc movsb sbb xchg (bad) lods xor adc (bad) repz and adc mov add push outsb cs push mov or jle faddl insl sbb les andl (bad) pop pop sub add movsl iret xchg push cmpl pop stos movsl cmp (bad) lcall outsb stos inc out fcmovne pop je loopne daa add and mov les mov pop out and and les push xchg dec lea nop les jg gs aaa aam and das mov fucomip fdivr pop test dec cmp push hlt decl sub (bad) lahf ja cltd cmpsb ss adc add fs inc cmpsb inc or cmp pusha pushf repz imul jb std mov mov dec ret xchg roll popf push int clc aam and mov aas arpl jnp cmp inc dec std inc inc xchg sub movsl popf xor loopne dec or mov jo sbb test mull test arpl negl mov xchg in sbb and jg add fstpt or add and ss jg ret jbe xor mov fcomps (bad) test lahf cs repnz out test mov and addl aaa testb mov mov decb cmp xchg sbb aas out je mov jecxz inc clc sbb add or lock sar incl aaa xor inc push ja mov xchg icebp jg lds stos mov ficoml ja or leave and xchg dec sbb pop inc inc fmull sbb add into pop lcall loop mov push inc mov cli xor fsubs and js and rorl cli pushl mov insl inc mov or popf outsl push lea aaa sbb cmp mov es lcall push lcall sub popa sub movsb push cmp push ret clc xor andb es mov inc mov dec rcrb push in sub mov add mov mov inc popl int3 mov jae push add jge add (bad) sbb ja push pop cmp cmpsl and push add into sarl subl mov jb imul push fildll adc push dec stos inc fcomps sbb add iret aas sahf dec lret mov or cmpsl repz (bad) lcall clc test loopne orb subb movsb or add jae inc pop dec subb adc lock sbb mov cmp arpl add sbb hlt aas insl std fisttp (bad) or add sub adc dec loop fimul inc (bad) (bad) (bad) fucomip push aam add cmp dec rcrl ja inc in inc outsl lock fwait inc add pop sbb clc push push add inc dec ds scas es cltd cld mov ret fisttpll pop fdivs push lea xor call loope push mov in test jno (bad) or call push (bad) adc loopne gs (bad) aaa and pop and or dec or mov inc push add popa imul dec out inc cmpl inc push or dec xchg add (bad) decl mov add adc xchg data16 shr lret or aas mov lods mov and jl add and or push fbld pop (bad) cmpsb xchg pop cli outsl iret test sub js (bad) dec xor and pop icebp shlb push inc outsl (bad) insl mov popa nop incb inc pusha mov incl nop div negl sub add cmp or mov roll mov fildl sarl movsb add outsb mov jbe cmp test adc out xor je add mov adc cwtl and mov shlb leave add insb loop ret outsb sbb dec mov push push adc jmp pop push stos lret rorb test outsb (bad) aas sbb push sbb mov jne inc stos aas fnstsw sub mov (bad) sub dec mov and add and and outsb pop cmpsb pop push in pop cmc aad dec pop mov pop adc jmp jb push hlt out clc sub (bad) xor or mov les add call push or add or mov movl negb ljmp (bad) cld inc aas sub inc pop sbb and dec and xchg inc dec or out (bad) xchg sar add jo or ss movsb mov ja test lret insl rolb lock lcall push (bad) stc xchg adc xor and fs pop adc push fiadd pusha jecxz loope (bad) mov arpl (bad) cmpsl ljmp mov xor scas xchg adc dec loope sbb (bad) js jne sbb loope adc add cld cmp cmp or xchg imul (bad) fnstcw cmpsb fimul stos scas mov and add jg jmp (bad) jg adc mov cs xchg sahf fcoms inc cld or les inc mov mov (bad) jg popa cmp pop outsb ja outsl clc mov (bad) movsb idivl incb lea xor jae mov pop adc das cli inc jg inc mov or in cli or xchg roll ljmp test pop mov add fild mov cmpsl push mov addl xor rcrb push mov mov ljmp icebp outsl jnp out test add mov (bad) xor jl pusha add into cmpsl add lock dec inc lcall jmp sub or dec call adcl add outsl xor mov rol mov lret inc cld push pop mov stc xchg adc outsl (bad) pop dec dec push dec add loopne jae in and rol dec loope adc mov jne (bad) lcall incb test mov add fwait sbb shlb or ljmp and xor mov test adc iret cld dec or imul stos jb (bad) popf rolb ja xchg push shrl (bad) lock mov mov insl loopne je test cwtl imul push shr xorl mov mov test jbe (bad) jle sbb pop (bad) mov mov mov inc push and pop sar (bad) (bad) out mov jge sub sti mov imul test outsb popa adc adc in mov ljmp jb shr jge sub sbb jno lahf aad add xor std aaa mov fwait cltd xchg out int3 pop mov cmp stos (bad) inc fimul fbld loopne lea insb mov jb movsb icebp insl repz xchg (bad) (bad) ljmp jno fisub mov cmp sbb dec mov ja and cmp daa gs out (bad) dec std cmp enter (bad) (bad) (bad) in xor inc sub jne or push cmp (bad) or arpl pushl repnz inc inc and adc jg mov cmp imul in pop clc sbb insb jo pop aad addr16 incl push outsl mov popf cmpsl adc sub (bad) jg sub mov fs mov es in and (bad) sub inc (bad) xor and add (bad) call push rcrl mov xchg cli rcrb sub mov ja jmp add aaa xchg inc lock (bad) (bad) mov push daa dec cs arpl push dec inc fdiv popf push icebp imul adcl (bad) mov icebp jg ds fsts les ret cmp outsl in cmp add fadds out mov cli mov xor rcl jge xor or inc cmp scas clc pushl clc and xchg rcrl lcall ljmp adc inc test lea mov and push pop ficomp and shrb xchg cmp call mov or fnstcw rolb (bad) mov insb xchg pushf out (bad) inc decl lret jno lcall pushl sbb (bad) sub insl mov jg test jecxz (bad) es push ss add (bad) lcall and outsl mov xchg add popa (bad) sbb mov inc xchg (bad) sti push and and push lret fbstp mov pop pop pop push inc push push jg mov cmpsb or pop (bad) cmp xchg xchg fisttp sbb test sub fldl fbld add divb adc std movsb xor pusha je mov ljmp scas pop daa cmp (bad) (bad) fdivl xor imul mov sarb or xchg mov insl xchg (bad) movsb pop sbb loope es lea (bad) ja xchg insb pop outsb daa not decb (bad) mov in enter pushf (bad) lods jnp mov or (bad) icebp add lret test jge or mov daa push push xchg push sbb icebp add rclb lods sub incl pop not jmp xor mov cmpsl and and add cmpsb or pop fwait loope lahf mov cmp mov test ds cwtl enter aam (bad) (bad) cmp test inc inc sub dec and cmp or add or sbb adc xchg clc jg cmp push cmc adc mov movsl sbb pop add aam xlat (bad) (bad) jmp sbbb rorb rorb adc faddl and out push cli dec mov mov xchg lahf cli rcrb cli mov mov loopne pop jle dec fsubrs sbb lahf jmp inc decb js,pn mov loop popa lods and in mov or roll inc (bad) jg xchg add mov mov or jbe leave lock (bad) mov aaa dec xor lods mov sbb jl push jns or cld (bad) fist lret rsqrtps cmp lcall or xchg in adc and clc xchg push jle call dec jmp mov shl daa or push pop es push mov add mov jg test repnz or cmpsl jb xchg add ret cmp mov call jmp push push push jl mov js ljmp imul daa (bad) enter bound data16 or push imul mov flds push add jb test (bad) jmp add adc leave push mov add (bad) mov pop fldcw aas inc add sbb cld mov nop sbb (bad) lcall jle push pop mov push mov es movsb mov mov add lret dec ret mov xchg pop mov dec fimull popf dec sbb and and sahf (bad) push enter lds cli sbbb inc gs (bad) imul add jmp bound ljmp dec (bad) cltd popf cwtl mov shr cltd insb ja clc fildll cwtd jp (bad) fwait sarb push stos aad icebp mov push pop scas frstor or mov ds push fwait xor cmp dec jl sti pop adc movsl aad loope inc adc add decl fisubl lock out jnp mov pop shrl (bad) ljmp xchg mov mov aas jbe jno insl (bad) or add push inc int3 or or jno add pop insb and out loope gs cmp popa ja les mov in fwait lock push jns push jne jge rcrb (bad) jo outsl push add adc (bad) outsl aad inc inc and pop lret call mov mov add xor inc jae mov aas (bad) fild faddl ds test pop add int xchg or pop rol adc sub dec cmp es sub les movsb pop add lret jmp cli mov xor dec and (bad) (bad) decl push sbb push nop or xchg loopne outsl mov mov adc adc xchg scas dec sahf mov xchg mov les lcall adc js or adc mov rorb cmp push lds cwtl adc dec or mov xchg mov loop (bad) dec lret in jp adc lds or add cmp scas (bad) pushl or add pushf movsl pop pop mov (bad) sbb jge enter and icebp and clc hlt mov add enter ret sbb dec adc loopne jne and fstl jo push xor cmpsb jo scas mov fidiv xor bswap sti decb xchg xchg xor rclb dec fsubp cmpb jle xor xchg loopne pop outsl and sub mov clc pop dec push loope lods sub mov aaa inc cld sti or pushf pop sar xchg mov push sbb scas (bad) sbb jle movsb adc lea add in jbe (bad) sbb and add subl fbld das lock cmp (bad) push dec out out or (bad) cmp loop mov or add add add and fisttp mov fwait jns inc cld dec or sbb fucomi push negb jg mov mov movsb fbld ret aam inc cmc and xor stos sbb adc xchg fsin or dec mov cmp es push mov cwtl shr mov pusha movsb pop enter fwait (bad) cs data16 lock cmc xor cld cmp push dec stos pop rcrb fwait ret out pop cmp out lret pushf repnz or ss (bad) mov inc inc mov inc sbb ret cmp outsb in mov pop xor sbb dec (bad) or pop mov or (bad) cli and inc in pop pop sub in mov push adc mov cld jg sti sbb pop test xchg or (bad) jg xchg pop mov adc adc mov stos call add push fiaddl jg clc aaa (bad) dec dec dec icebp inc jo fsub int (bad) push xor inc mov (bad) mov sub loop and (bad) cmp es dec cwtl inc mov call aas movups pop jo mov (bad) clc sbb mov mov dec pop rcll push test mov adc xor es (bad) pushl cld inc (bad) adc or add mov xorb or lcall sete mov xor mov inc jbe mov push cld outsl sahf push lea mov push inc mov xor or or loopne dec cmp out lahf inc call decl mov pushf mov imul cld out clc push stc les repz or ljmp inc roll jo sub ds push insb adc xchg mov es mul (bad) decl xor add mull loop ja leave xchg stos add dec incl mov mov pusha call cltd loope push incl add les pusha jno mov mov repnz and lds aad hlt (bad) lcall mov ss sarl ss pop cmpsl pop adc es (bad) or dec imul outsb add faddl cmp imul push decb das inc clc aam cmp cli cmp adc outsl sub cmp adc push lods and cmc add sbbl in cld lods or xchg out sub fbld mov xor or decl push mov dec (bad) loop and hlt call mov push in imul cmp mov ljmp mov test xchg dec dec data16 adc (bad) out inc insb mov jo subl mov mov add inc enter mov imul fistl or pushl or push loope decl cmp sbb inc addr16 and inc adc mov or sar mov je sbb mov add push lret pop decl dec loope xchg mov mov pop or int3 and lcall test (bad) outsb pop clc pop push das pop dec dec lea (bad) lret lock lea mov movsb jge mov fwait bound mov stos orl enter lcall pop in push (bad) imul pop bound lods push xchg and sbb (bad) cwtl or fsubs call pop jo out cli sbb or fucomip add incl add pop jbe inc pop sub call lods ja test ret pop lcall push ret stc pop or mov pop mov push mov int loopne scas jp xor mov jnp in outsb mov add inc decl jmp and xchg scas fildll lret push mov repz pop sbb sti lret pop mov sti sub push fdivrp or test or lahf mov subw xchg and jbe cmp mov mov (bad) dec in mov xchg cwtl shlb mov (bad) jg sbb loopne mov xor das clc pop add inc add or repnz aad int decl adc push adcl mov jns cmpsb xor mov jp (bad) movsb push lods adc add (bad) jnp (bad) cltd push add mov outsb les mov (bad) ss movsb or (bad) mov mov test xor popf cs (bad) mov mov dec cwtl sub and (bad) jnp int3 xchg push les sbb xor fcomip fstpt in pop jns imul adc nop insl cmp (bad) dec mov (bad) mov pop xor pop sub push hlt dec int aaa adc sbb rcr test icebp jg repz xchg popa mov ret insb sbb push fild movl cmpsb pop cli mov lock fadds pop in (bad) jae mov push (bad) cmp rcrl mov push icebp ds sbb cvtps2pi pusha mov lock xchg cmc fnop push (bad) mov divb xchg bound push jne mov icebp add std pusha pop cld or jg lret fcomp insb aas sub add mov cmp ljmp adc pop rcl jb rcrb loopne stos es repnz push test icebp sub in dec pop mov lds stos or cmp cmp lea cmp (bad) jbe outsl adc mov lcall mov (bad) subl fs pcmpeqb jmp jne xchg fs xchg arpl pushf and loopne je and or jo in xchg cmp xchg jg pop push lds add test clc aaa lret cmp mov int3 jnp popl lock inc pop lahf fist decb push xor stos cmp add mov add sbb cmp mov fbld push xchg jo push iret js loop es repz pop repnz mov mov ss push xchg mov sahf ds lahf xor xchg mov mov mov jg nop xorl addr16 cwtl push and and add sbb (bad) call adc fnsave pop mov cmpsb xlat or jp nop push (bad) mov repnz sahf sub xlat push lock ss aam push dec sbb inc (bad) int loop and pop sbb push jl ljmp and imul push xlat adc loope pop dec lret cmp pop pusha sbb lods or fnstcw xor adc jg pop push fdivs les (bad) decl xchg divl (bad) xor or sub sbb push lods push and bound (bad) fcomip rorb jle dec mov or jae scas push enter sub es lods insl xchg lret mov add inc jecxz outsb mov in andb fsub and in dec adcl test aad popf es aaa mov data16 (bad) jg cmc movl jb addl (bad) xchg fadds mov lea repnz loopne xor sub loope xchg mov movsb enter test jmp inc sub inc add push paddusb xor xchg jp int3 mov aaa adc ficom add out xor arpl cli ljmp mov push dec sub or scas (bad) out push int dec ret out sbbl jmp lock push push cmp jno imul or push stc cli and aaa fisub inc push dec or ss in out adc stos ss inc dec loopne mov clc push sub xor jl ljmp cwtl clc mov test jbe or rep xor loope jl add adc mov incb jns iret imul nop sub aas ret cmpsl mov xor add inc insl add push jo xchg or sbbb frstor shlb into sbb cwtl test icebp cmpsb mov xchg inc jns incb adc and subb andl mov push fisttpl sub xchg adc push add add sbb popf mov add and mov pop in dec fmuls add jns (bad) jg push rcrb (bad) cmpsb outsb add dec sar mov and or mov cli jbe js mov (bad) rorl pop cwtl add jns arpl cwtl decb cmp jne sub mov ss call add adc mov mov inc fbstp insb popa and mov clc dec lcall jnp,pn cmpsl popa inc dec insl cmpsl mov mov lcall outsb sbb and aad nop mov sbb sub cmpsb movb push push popf push mov dec mov call out fnop test add aas scas mov cmp bound sbb dec fdivl add xor ja inc lret push fdivrs mov push lcall mov jnp fcoml xor push xchg stos dec pusha (bad) jp push cmp loop (bad) (bad) incl inc fstl out prefetch cwtl clc and (bad) dec jg pop mov aam outsl add jp inc enter stos push push lcall lock push stos push jp nop rolb sub out xlat mov or dec or pop in xor sahf (bad) push (bad) (bad) decl inc push (bad) into sbbl cmpsb and hlt pop push jno fnop arpl les (bad) (bad) out cli mov push jb pop mov test (bad) inc nop pop ror mov jge insl call sub test and sti sub jmp mov xor mov mov insb mov push sub adc (bad) sbb dec std sbb clc call xchg adc jmp jns repnz mov scas sub add xor (bad) fstps or aam int jbe call loopne push aam sbb lret and push movb and rol mov fildll xor flds scas fisttp or les fbstp in dec cmpsb icebp (bad) decl sahf push or or fld pop xchg js lods xchg test mulb test cwtl cmp and fwait decb divb lahf jbe sbb xchg sbb inc inc sbb daa hlt pop and cmpsb cs sbb and push loop fcomps stc ret mov mov add loope popa std ljmp adc sbb inc lods adc popf pop push mov fidivrl insb call sbb sbb call out cmpsb scas xchg (bad) jp jns scas push or dec adc adc and out fisttp xchg ljmp in in mov aas adc shl aas pop gs push (bad) fcomip cmp vpminsw jo push jge jo (bad) lcall mov lea xor sbb fcompp (bad) lcall jb ret notl addr16 aad (bad) mov insb (bad) ss cltd test jge cmc dec loopne mov pop dec jmp pop mov mov int3 in inc sbb fwait js hlt cli outsl jg dec fidiv pop lahf adc popf data16 loopne negb xor push cmp lret scas xor (bad) sbb (bad) je cmove pop inc loop xchg (bad) add out sarb in xchg mov jmp xlat mov sub mov ja mov mov pop pop les lcall add cmp outsl dec inc xchg adc dec int or lahf pop std cmp lahf sub cmp in out jae (bad) (bad) (bad) inc pusha lret shrl sbb popf sub popa push push xor ja jae inc pop or sbb inc data16 mov jbe xor lea xor xlat mov jle and sub sahf pop cs mov mov std pop std decl cmp adc ret and mov mov adc xor xor imul pop and jle divb xchg js fisub or paddusw sbb (bad) sbb mov jg mov std scas (bad) aas fisttpl xchg mov fidiv (bad) xor call sbb movb fcoml sbb movsl popf mov lock int3 jno jo,pn add (bad) call nop imul roll bnd rol movsb cli jg movsb adc test dec call in push or shrl sbb jbe push enter (bad) decl enter mov cmp rcr aam ret add arpl pusha or test out call fiaddl xor shl loopne repnz loope mov dec xchg (bad) and mov jg cld decl dec dec push xor fs xchg in jbe cmp sub loope (bad) push fidivr push decl dec aam mov loopne mov adc popf in push addl add xor mov loop and (bad) ljmp out (bad) fild aaa mov ja adc mov roll incl in push jg and repnz aas mov gs shrb shrl add fbld or inc incl hlt hlt mov inc (bad) lcall push je scas mov aaa inc or dec daa pop bound sar fisttp push rcrb push lcall xchg add xchg pusha cmp das mov or (bad) mov jl inc adc pop movsb enter mov dec cmpb enter sub cmc hlt cmp testb ret mov lea mov push xor jb sub ljmp mov and pop sub pop fiadd xor lret jns inc (bad) es leave sbbb adc cld movsl xor pusha or call lds dec movsl rcrb and (bad) (bad) mov xor mov data16 ret mov scas sbb dec push je (bad) lret xchg inc hlt or test xchg rorl sub cmc cmp dec jo fisttpll add or pop pop cltd mov (bad) jmp pop scas (bad) fucomip push in lock cwtl or jmp jae or xor scas imul ss or pop lret daa dec lods pusha jns inc stos push cmp mov ss dec add dec pop mov std mov mov or push pop call jp xchg pop push cmp jg xchg cli aaa mov (bad) mov cwtl sahf add push loopne inc pop insb pop xchg pop js jg inc jg (bad) aaa mov mov sub insb outsl iret outsl push pop jg or dec push (bad) mov lock pop mov push pop fucomp and cmp jbe push and insl mov mov sbb push pushf or in (bad) and insl ret add ljmp lret pusha jae in jnp mov (bad) inc pop ret (bad) push mov (bad) adc (bad) (bad) mov stos (bad) negl lret fisubrl inc insl mov roll jne push sahf popa js movsl incl ljmp jl jno cmp xchg loopne sbb or cmp add gs dec and data16 (bad) hlt lcall insl outsb es dec cmc mov stos or inc std popf xchg (bad) cld mov add jo test and or cmpsb incl lcall icebp cmc sub pop dec pop (bad) dec mov lock call sub clc mov cmp jb sub lds pop xor cmpsl popa and out (bad) cmpsb xchg je xor adc jg popl cli and test mov mov lcall sbb (bad) shrl adc sub rcrb icebp jg dec rcr or and cmp mov mov xlat xor addr16 push adc push ljmp jmp lods ficom ficompl popf sbb pop mov (bad) dec ja dec (bad) insl mov and out cmp scas nop mov mov or sub push mov test xchg xchg mov es mov sbb movsl pop inc out jl xchg (bad) (bad) fcomip in jo sub lahf (bad) les jg inc adc nop icebp adc test and into inc imul inc xchg dec nop xchg adc mov inc jne fwait sub mov idiv xchg icebp jg and xchg pop mov push sbb (bad) jg xor mov xor pushl sub add dec push or mov or sbb inc pushf mov (bad) jp dec mov out rclb stc ss es clc jmp push cmp jmp ss mov mov aaa adc xchg sbb cmp lds mov jg (bad) ja (bad) push dec sub pop dec jl movsl inc in push push adc pushl inc icebp mov xor sbb or mov sub sbb fwait mov outsl into cmpsb cwtl gs or pop lret aaa stos and inc or add ja add sbb pop rcr arpl cmp inc and xchg add dec mov cmp mov into or push shll add add sbb mov xchg fdivs fisttp jge or insl xchg faddl inc sbb data16 (bad) jmp inc and or into sbb lret mov cmp outsb call test test and jns inc jg and (bad) jb sbb std pop sub sti test adc sbb sbb sbb ret pushf pop cmp or add shlb sbb imul fdivs jmp mov jno ds decl rcr pop popa add leave movsl add xor insl adcl cmp in sbb inc inc xchg stos mov cmpsl or sub cltd mov lahf mov add mov cld sbb movsl outsl mov insl jecxz jne fadds mov (bad) decl push ss mov add repnz xor test mov push dec pop mov (bad) push mov push clc fbld or inc mov inc jo fldcw add dec mov adc xor andb popa mov push inc mov cmp xchg mov call fs jmp push aas cmp xor mov daa and aam arpl lock dec mov scas insl popa les add pop mov je jecxz jle or sbb das rcr enter pop sbb or xorl add adc js and movsl sbb icebp xchg mov cmpsb pop cld jg mov insb sahf pop push subb imul push fwait lcall inc mov aas (bad) (bad) fildll arpl mov out call fadds or jg lods fisttpl sub lret les or jmp jo adc push in pusha cmp jle negl sub (bad) sub push shll jp pop ja ljmp or dec cmp and imul jl mov push mov xor fcoml sbb ss outsl dec xor (bad) lock add jns leave add ret (bad) out xchg jle fwait loop addl fs enter sbb add or jo sbbl mov adc cmp jge loope or outsb outsb xchg (bad) jb mov loope xchg mov dec push and lcall es lcall clc or xor or rorb jg inc mov fnstcw std add inc ds outsb push lea or dec clc xor inc push pusha push add cwtl push std pushl (bad) hlt (bad) shl cmp mov or dec or out cld (bad) (bad) call dec stos icebp cltd xor mov mov fild (bad) xchg imul jmp mov popa test ficompl lret mov mov or xchg loop mov mov adc sub ljmp out push into ret fwait sbb pop je or push pop das mov push lret inc push or dec push je cld fcompl jmp push loopne mov fcomip in xchg ja push fisttpll ja (bad) decl clc adc push adc jp (bad) iret sub jge aaa std ljmp push and jecxz nop sbb repnz rolb movsb outsl xchg cmc inc sbbl pop add or inc push mov int cmp jp and dec mov hlt ret mov mov pushl jb std ret jp imul lds fs lds fisttpl fwait push push xor lcall or or les gs ljmp (bad) and rol (bad) enter push stc (bad) js pop in push adc sar loopne out nop inc pop lds cld or fisttp cwtl sub ja cmp pop fidivr jg movsb pop mov dec ds sub inc sbb int3 cmpsb nop cmp jg mov rolb push mov pop lcall or into mov dec dec movb (bad) (bad) adc inc outsb (bad) ss xor div in mov add and jne (bad) cmpsb shr (bad) (bad) push fwait je les imul mov nop adc lcall cli stos popa loope int repnz pop add cwtl and cld fnstcw jo das add jg adc mov shld adc cmp cwtl in aaa outsb arpl dec cmp cmc or and jnp cmp cmp mov fisubrl lods (bad) jl xor mov mov into mov or dec jecxz and sbb ret xor inc test outsl sarb sbb insl mov test adc inc pushf mov push outsb subb add pop push mov (bad) mov mov mov in cwtl sub into fimul rclb mov xor mov lds push add decl (bad) inc fcompl push cltd and mov mov jns,pt dec cmp jbe addr16 insl inc das mov and sub loop adc mov cmp inc sbb cmp inc cld (bad) fbstp leave push jmp pop imul ror sbb popa pusha add pop (bad) mov in int3 rcl (bad) call xor test adc pop push cld or mov inc sub dec aaa paddw out test (bad) fildll repnz sahf and and mov aam adc pop call cld xor iret je and bound inc pushl (bad) xor or or fist jnp js (bad) and imul lods cli xchg pop or ja pushl pop xor fimul mov out (bad) lcall ret mov pop adc jb js mov dec into sbb pop jmp add scas sbb cmp cmpl out adc adc sbb cld nop shll xchg scas pop repnz jno arpl pop cmc aaa inc mov mov sbb pop mov dec (bad) mov sbbl inc sahf mov fdivs inc int3 or call xchg (bad) xor dec dec jmp add (bad) xchg lods mov incl enter cmp lock xor (bad) scas inc out add jge stc mov sbb hlt add fcmovb lret je adc pop cmc pop inc jo mov int scas dec mov mov inc in outsl test aas imul call mov fisttpl pop clc push xlat cltd fwait sbb inc cmpsl mov cmp or pop flds sub popa outsb es (bad) sbb jg cld lods orl lock sub iret frstor ljmp mov bound inc sahf adc out xor bound js fsubs loop and dec jno ret add xchg sub cs jg fwait mov jbe jo sub (bad) sbb call add and mov pop popa jae loop pushf sti lcall inc loope xor mov je sbb clc addl mov std je dec imul adc push sub pop iret movsl pop cwtl in int3 mov cmp add push dec fbstp mov xor xchg icebp ja jge (bad) dec lods in xchg cmovns (bad) pushl dec mov mov loopne xchg imul stos and jp sbb or mov add mov dec jo mov or mov lock (bad) jg adc cmpsl mov call sbbl dec add fisttpl fnstenv mov fwait insb leave push xor xor aaa nop lcall inc pop mov stos mov mov js (bad) shll out and push cli pop (bad) jecxz ds sub adc dec mov cli cmp cmpsl mov (bad) jg pop into outsb in lahf fdivl mov paddusw push adc ss pop movsl jle or outsb and jge js adc rcrl hlt das imul cmp roll and pusha (bad) or ds ss les aad xchg jl and and inc ret clc fcmovb push hlt lods jge mov mov inc pushf idiv or les jl pop lock jg mov dec es adc xor rcl push cwtl les ljmp jp push push sbb es cmpsl xchg clc stos jg or rorl cli pop cmp cmc sub cs lods loope xor or pop push loop mov push je dec sar fsubr mov jp or lods shr mov in fidivr jp inc sbb mov jbe sub add dec pop cwtl push or mov outsl test test int cli jg fs sub xor sbb or push leave jp mov dec mov xchg pop dec adc cmp jg jle pop and jb loop fiaddl cmp es (bad) decl lcall and push rcrl dec fsubrl ret sub or fwait cld aaa jbe or xorb pop cli test push add aas and andps lods mov je or out test sub dec mov inc xlat sbb das dec ljmp add add lahf mov and sbb xor inc push adc push dec jl mov add jbe aas out sbb sbb jg push jno pushf addb sbb jg lods mov add insb je in inc (bad) clc jg movsb daa inc stos pop jne mov inc lds sbb aad jb sbbb push cmp icebp call imul xor and cmc subl dec je pop mov push mov repnz inc (bad) jne in lods sub adc sar mov cmpsb popf adc or icebp and add jo inc mov aam add cmpsb in stos cmp inc push cmp push lock dec sahf mov sar mov jnp push xchg push mov fsubp mov and pop rolb and mov repz add add push push sub sbb add lods in imul mov scas xchg icebp daa add jmp adc out sbb scas cli jg sbb or subb cmp and (bad) dec inc xor je in mov insb cld ja ja or rclb loope lcall and mov xor ja push mov loope push jbe out inc push push jg rorl mov jne stos (bad) lcall jb sbb insb mov xchg (bad) xor nop dec mov cmp add mov imul clc call push stos out pop (bad) and sub insl push adc add mov push cwtl mov or jl (bad) sbb or rorb add fs ljmp (bad) pop ljmp cltd and and cmp cmc jg test stc inc repnz inc lods add movsb movsb mov test sar mov rorl pop lret push cwtl xchg outsb ljmp mov call sbbb mov sbb or aas cmpsb (bad) mov mov cs sbb (bad) dec das test cmp dec mov and mov (bad) rolb nop jle hlt mov push fdivs dec jl and ds dec in xchg mov (bad) jg sub popa (bad) testl sbb fstpl (bad) decl or push mov mov inc inc jo std xor add jo push (bad) pop or xchg push jae lods push xchg icebp pop lods jbe loope cmpb test dec (bad) cmp es (bad) fist out sub push aaa inc sar test sbb sbb fnstcw dec adc mov sahf inc aam jbe lea (bad) jg mov jle pop pop and xchg bound pop xchg jmp sbb sub mov scas pop decl xchg (bad) pop cltd or lcall (bad) (bad) call adc rolb add lret pop dec (bad) gs pop fwait addr16 push arpl nop lock sti xchg cmp loop push pop xor push test jmp fbstp xchg add sbb popa (bad) outsl add push push mov jmp inc and addb incl mov (bad) rcrl xor xchg imul mov das or adc pop (bad) add fild cmpsl adc push jno scas jbe xchg sub push and jge bound out adcb call xor cmc or ja mov cmp mov movsb sahf rolb push pop sub lcall jo jecxz jp insb fwait mov call rcrb dec mov imul inc ljmp mov or or lea pushl test neg cmp (bad) add mov cmp sbb ljmp adcl push fcom aad aaa add mov sbb or pop test push adc aas addb (bad) push pushf lret add (bad) icebp lcall mov push sbb scas jns hlt inc inc js pop ljmp ja inc and inc sub (bad) je movl and (bad) fild mov stc test or inc mov mov cs xor loop arpl dec push jg or and cmpsl fidiv xor push mov sub push push enter push cmp inc mov lcall cmp dec mov sbb cwtl ljmp mov pop ficoml cmc jg addl js jbe add lcall jmp mov xchg mov fnstsw js push cwtl mov loop fildl jge sub or dec sub outsb sub fcoms (bad) and incl dec lahf dec inc jmp ljmp aam andl pop (bad) (bad) pop mov cmpsb test nop pop shl into push fnstcw cmpsb xor ja imul aaa (bad) aaa clc xchg add idivb xor mov (bad) mov pushfw repz adc and mov jae lds mov js mov cwtl sub adc add repnz out in xor pop sbb dec test inc mov lea (bad) ret or (bad) cmp out mov mov subl in (bad) jl leave xchg xchg push out push xor outsb push ljmp inc popf in fdivr xor bound pop hlt jae inc rorb inc pop insl mov pop imul outsl ret mov mov lock add add xor ljmp adc fiaddl cmpsb sar mov mov into dec push lret sub push aaa add ja (bad) jae xor dec fldl add pushf std (bad) pop mov data16 scas aam jg ret out out inc inc scas cmpsb push leave jnp sub pop add jnp outsl bound xchg sbb add sbb in mov aam insb push xchg (bad) jg lea sbb sarb push jp xchg and hlt xchg mov ds mov push cmp add (bad) incl outsl adc inc in add push add adc das cmp mov jecxz aas push mov loopne xor mov mov and xchg add lcall popf fiaddl stos lods or mov (bad) jg (bad) lds cmp xor jp mov jecxz mov repnz ds mov jbe dec and sarl sbb cmp cld mov stos subps cwtl and (bad) (bad) (bad) pushl fldenv fstpl adc lods sub add pop (bad) into clc jo inc lods (bad) (bad) outsl pop insb loope adc jb lods ret and js jbe mov pop mov xchg jle add mov dec mov loopne jg lods outsb xor push icebp subl mov xor jp xor mov sub (bad) shlb (bad) (bad) fcomip call (bad) xor push subl rorl or and aas inc aaa mov mov mov mov lret fld adc aas roll xchg push nop mov push (bad) (bad) dec xchg pop xchg mov dec lock jl jge xlat push aaa jmp (bad) cmp nop xor mov insb sbb rcrb or mul or in add repnz sub jne mov inc fldcw in sbb fcom decl mov push (bad) ret inc cltd das xchg push std incl push enter and add adc lret cs lret call dec pop out pop pop test mov sahf leave in push push daa or addl push dec cmp sbbl cmp or sbb lea sub lods cmp mov ret mov add outsb (bad) out test jnp cltd or shr push sahf in lds pop clc mov (bad) rcr adc or out and lcall mov (bad) (bad) pushl jp xchg jecxz mov aaa imul movsb cmp wbinvd pop pusha sbb jl push add sub push cmpsb rol pop lock xor das jmp push pusha out push xor xchg add ja ds mov sbbb adc cli loopne mov cmp push nop cs cs xchg mov push cmpsl cli jmp sbb sbb lea sar pop fs adc mov subl dec cmpsb or outsl and mov dec sbb and xchg pop js xlat cmc ret mov xchg ljmp mov pop mov fisttpl inc pop sub inc into cmp loope mov add frstor sub and int inc call ljmp loopne xchg hlt sub stos xor insb cli mulb int3 popa push out jno pop cmp ja or mov adc inc mov adc imul cld inc inc insl loope dec adc ret stos and lock add adc add clc mov dec push in xchg arpl or cmp mov xchg or test pop mov cmp ljmp clc sub (bad) inc lods jo daa mov hlt ja ret ficomp nop adc rcrb push ss mov or jl (bad) cld add fs sbb adc push ljmp add cltd jnp cmpsl push ds mov xchg adc iret add mov scas into xchg scas xchg fdivl or mov loopne in aaa adc mov clc outsb cmp aaa cld insb sub imul pop push sbb adc aas inc add sbb movsb std outsl inc cmpsb (bad) (bad) call lret xchg adc sub sbb sub ds and jecxz cmp add mov or cmpsb and aam xchg pop pop insl mov sbb sbb jbe in incl push lcall ret stos dec xchg fisubr jecxz loop stos adc or dec mov test ds fdiv (bad) lcall jbe lock sbb in add push adc xchg jo sub hlt call mov xchg (bad) sub xchg mov out xchg fmull sub insl into adc or js mov add popf cmp pushf out lcall sbb mov out and add (bad) xchg cmp mov push xor jne cmp xchg into loop loop std outsb dec js cmp notl inc outsl push mov inc xor lock xchg mov mov lret (bad) (bad) out adc test nop jbe pop je movsl dec imul (bad) (bad) (bad) lcall call andl jne testl mov fisub add pop inc loopne xchg outsb pop mov sar dec into loopne stos popa loope sbb xchg pushl cli add (bad) add mov ss repnz mov stos dec int3 int3 daa clc push jb popf push jne call mov adc mov inc add cwtl fiadd add clc mov inc inc mov fsubs pop add scas in loop addr16 mov xor inc cmpl pop repnz jecxz xchg inc jb les pop sti xchg inc in add jle jg (bad) loop jbe xchg (bad) je mov bound cwtl push lea push jo lock into fcomip sbb mov lods cmp and xor aad lock xor adc sub dec mov push pop pop aad mov mov (bad) jmp es call jg pushf push sbb aad lods or lods inc icebp inc xchg loope aaa cmp leave xor inc sbb jle adc lcall pop or jno addb addr16 cli jmp cmpsb sti or aad pop mov add push jne cwtl (bad) and mov pop (bad) mov add (bad) decl mov (bad) mov cmp dec lock adc pop mov xor mov inc xlat dec push (bad) repz ljmp jnp or cltd jmp add jno jbe fs stos (bad) (bad) (bad) pushl into jge jge gs xor hlt ja fldcw aas or mov rcll clc mov inc decl add (bad) notl bound add ret out mov loop pop push jle inc and cmp mov loop cmpsb xchg outsb inc hlt popf in lahf mov scas xchg mov push mov add fbld cmp mov test inc inc adc (bad) jnp dec clc mov push or loopne mov adc insl jl inc or or nop hlt pop xchg or xchg mov rol add (bad) (bad) decl lahf dec jb add fidivrl cmp repz cmp mov cli (bad) jg jl sbb vmovsldup dec add xchg pop fsts cmp dec std pop add and (bad) ficompl out pop test and fidivr pop lcall clc inc xor imul xor inc push movl jmp into (bad) push shrl mov mov add inc xor incl pushf test sbb notb adc cmp adc cmp out jae call (bad) add inc cmc stos mov mov cs mov mov jle mov cmp or stos mov cli (bad) in mov sti or mov jo jl bound push adc add mov jg mov stos mov in mov mov jp andb adc ret (bad) inc call or test test mov lock push xor fcmove cmpsl inc loop hlt mov aas jmp out inc in std dec add lea das mov ret imul (bad) cld movsl cmp daa adc mov rolb push lea sbb cmc ljmp cmp es ja fiadd pop cwtl ret rcl out mov test cmc jg mov sarb xor (bad) sbb pop les daa mov mov mov cmovbe jmp sbb pop and insb into les fwait gs sub outsb out imul or pop mov bound mov mov (bad) cs (bad) xchg jbe ror sbb (bad) mov add addr16 mov iret addr16 (bad) jns pop imul jmp mov add inc mov sbb push lcall or (bad) inc int out cmp out jae inc std or sar sub jb std add lcall ss stc and stos dec ljmp enter nop or dec adc inc jp scas push imul xchg andl ds push add cs push pop std mov push jmp pop clc add nop jp test add lock es (bad) (bad) mov fadds ds shrl loope mov jo inc data16 and inc mov mov cmpsb out je je cwtl adc bound add cmp (bad) fucomi adc push jb sub out (bad) addr16 jg mov in dec jae loope cld mov es rclb hlt clc inc or push mull sub push xchg dec push in out mov shrl iret insb test xor rorb nop enter xchg fisttp cmpsl push icebp and cmpsb divl push push pop jp pop fs mov sub popf into mov pop sbb in xchg dec sbb cld (bad) decl je adc mov add outsb sbb inc xor xorl pop call and mov or fucomip mov daa pop pop cld outsl mov jmp add jle jo,pn lock jg adcb cmp in in fstpl sarb bound add shlb xor test pop stos ss cmp stos adc and jmp push push xchg adc mov sub (bad) call aad daa add push rcrb cld dec xor inc cmp or and test insl sbb add push xchg push es inc or pop jbe roll and mov popf push lock (bad) jecxz add or repz clc insb rol fisub push cmp xor (bad) fistpl mov (bad) mov fmull mov (bad) pushl loopne scas imul fisttp mov sub xor movsb shrb push icebp rolb (bad) decl ljmp cmp mov hlt (bad) outsb push dec and test (bad) fwait pusha loope pop lods jae imull pop lea imul ret movq decl dec lods cmc fs sbb mov jge adc sti sbb stos (bad) fbstp adc in in cmp or inc sub data16 mov in (bad) les xchg adc xchg cli pop fisttpll mov rclb popa insl pop out xor je adc fsubrs imul dec out decl inc sbb popf fwait insb adc pop insb jno dec repz push out jbe scas mov pop xchg fimul icebp inc fsubrs xchg push cltd je pop bound add xor jl lds mov or insb ds ljmp scas (bad) fwait xchg inc jb pusha out sub pop or cs mov mov (bad) lods or fsubl gs sub jae adc xor sti leavew fadd out mov sub push jle clc pop ljmp pop gs std fst sub sub subl bound push jo aam scas mov cmp popf hlt dec fstpl xor xor mov rcrb (bad) cld rolb dec add or xchg mov rcr (bad) add inc add dec je fldl cwtl and add ret or scas out fs mov pushf cs fsubs or scas and out hlt test mov push mov mov les shlb adc mov mov ljmp (bad) scas xchg mov movsl daa into lods jge sar lahf aam adc or (bad) div mov sbbb mov add cwtl incl fcomp pushf and fdivs or cs test push push jp insb out imul cld push push pop test clc (bad) in movsl push mov add movsb cmpl or jae mov cld jno sar fwait sub daa push fdivrl jb adc pop adc jg test mov sbb roll mov mov dec in scas aam adc out push leave add movl arpl inc test repnz push adc mov push rorl push xchg test mov jmp lds add mov iret pop mov mov loope sbb mov ja and push ja push xor cs pop decl daa adc xchg inc mov aad ret sbb incl aam leave aas rolb das addb pop jle sub (bad) and mov stos or mov adc push inc and mov jp push pop push mov sbb mov xor fs (bad) js mov mov pushf hlt xor mov sbb mov sub stos cmp inc stos push cld fisubrl cli jb int (bad) pop inc sbb mov xchg call cmp subl pop fldenv xchg outsb dec test xchg inc divl inc cld outsl lock adc and cmp add into (bad) cmp sahf in or or cmp sub push adc push sarb movsb les das add pusha cmp clc mov aaa mov fisubrl adc cmp sub (bad) pop cmp aad xor fdivrl add and out out mov out jns adc add (bad) incl mov adc test lret add mov js fcoml mov incl aaa in inc in in and divb fdivs mov sub add xchg cmp sbb jmp add cmp mov outsl mov sar (bad) notb ret popf (bad) fild rolb pop orb ljmp fucom gs pop jmp outsl add add scas fbld dec stos dec push pushf xchg insb push dec icebp ljmp cmpsb ret cmpl add roll fs mov xchg out rclb fcompl push je xlat or fistpll pop pop push repnz pop mov lcall adc mov push or sti out adc pop and mov pop stos clc cmp push inc ljmp sbb dec test xchg pop test dec (bad) fild cltd (bad) arpl add inc in pop (bad) rcrb mov mov lock add (bad) (bad) out or adc cmc jno jecxz add adc pop dec lds inc inc push bound xchg xchg push test stos mov subb (bad) mov lock inc and sub insb jg sti rcrb mov je lcall ljmp ss pop je js mov (bad) pop xor sub sbb lea sar scas xchg lock in xor xchg inc or fnstenv push popa test int mov pop insl in xchg inc xor inc pop mov mov cld and cmp (bad) (bad) lcall mov sub hlt movsl xchg pop push add xor aad sbb and out sar call inc mov insl xor sub int cmpl das cmp imul xor mov aaa add test cmc (bad) call loopne les fild add sbb es sbb ficoml sbb adc sub fnstsw popf jo dec inc loope in inc lgs cld cmp push mov call mov sub mov ss daa xor cmp ret ja (bad) mov mov decl adc jo mov xchg xor lock cld or xchg adc xchg mov addl push (bad) sbb mov sub (bad) incl xor divl cmp arpl out add fbstp rclb xchg dec inc adc mov (bad) mov out add (bad) xchg cmp sarl mov dec loope andl insl pop adc mov xor inc rclb in loope add (bad) (bad) mov cmp into daa and repz aas fiaddl rcrl mov rcl in test push mov dec aam aaa or add sub push mov push jmp jb sarb (bad) imull sbb inc lock stos mov dec lea aad mov pop imul aam xor push add or fsubrs cmp pop shrl out add mov (bad) lcall sub inc add push mov (bad) call mov sbb les in loop insb dec mov xor (bad) outsl je in xchg mov add into fs add sbb mov cmp call jecxz fildl (bad) call sbb in dec movsb in cmp clc (bad) out sub in jae (bad) cld scas jno push push sbb lcall decl inc dec sahf jne daa pop inc fsts jmp addr16 loop jae xchg mov or test imul jmp hlt decl inc inc adc mov mov ljmp adc mov pop (bad) pop push (bad) es ja add pop push test pop (bad) mov (bad) sar or test inc lock or and xchg es clc dec ret outsb cmpsb adc mov or div fcmovnbe push jbe sbbl mov mov push arpl or int and pushl inc repnz sbb popf mov jl cmp sbb insb es (bad) xor incl jo add mov lock (bad) repnz pop lock sti sbb inc dec sub push pop std mov adc loope sub das and cmp repnz sub es fisubrl and add test push lret xor lods insl fimul push or dec push jae mov sarb lcall inc sbb mov mov fwait push (bad) rolb (bad) lcall mov hlt or mov cld idivl ja stos inc sbb fdivs daa pop jge das xchg std mulb (bad) xchg inc fcomps stos inc adc (bad) call or std mov jl mov and out (bad) dec cli scas mov xor jecxz lock (bad) fnstcw fild mov fwait lds call (bad) (bad) decl push xor push cmc or js or testb lods (bad) lcall lret mov imul dec daa mov inc nop fdivs fldl push push ljmp push incl inc inc pusha sbb loop je mov aas dec out mov fisubrl aam xchg add cmp call xchg das scas pop sub scas sbbb or add mov test or pop or daa sub adc pop push adc enter stos imul cltd aam inc cwtl nop enter jle mov movsl and dec mov mov and decl pop xchg repz es jne push pusha iret and lcall push bound xor sbb pop ss (bad) cmovo negl les insl fnsetpm(287 (bad) sbb mov or cltd fs stos stos inc dec das dec mov scas xor or add (bad) mov enter decl popf repnz cmp inc test stos and xchg jb push adc pushf int pop and adc adc push cmpsb into rcrb fs jl hlt inc mov int ffreep push xor mov xchg (bad) mov jge or push mov sub enter cmp cmp notl int3 inc mov hlt out xchg out sbb outsl add adc pop adc test stos push int3 mov dec xor fldl sbb and cmp mov inc and insl fwait add ljmp ss aaa loope sub sarl (bad) dec sub sbb jns xor jg fs mov mov jb add pop nop push icebp outsl adc xchg adc sub xchg mov out insl jae lock (bad) pop xchg pushf sub sbb add xchg or mov das (bad) lret (bad) mov (bad) sar cmp fstpl lods add sub pop sub pushf lods aas xor lods push ret dec outsl mov mov add add xor jmp jbe lock aas xchg test loope ret mov mov dec mov insl jbe or orb inc aad paddd push push dec (bad) jnp sar mov movsb cmp popa add mov (bad) and aad xor dec dec xor (bad) (bad) fistpll xchg cwtl mov mov jmp mov int lcall lret mov push push sbb insb call add jo add push dec mov mov mov pop ret adc push sbb es (bad) mov movsl mov inc sbb lods scas es (bad) ss das mov call or mov sbb inc adc mov mov push xchg inc shlb es out add aaa sahf push add lea out je add add cmp jg scas ss sbb add mov inc flds imul and scas adc outsl enter push (bad) cmp push std mov (bad) mov adc add lds or mov insl adc or inc or iret dec cld aaa flds mov sub clc das jp in sbb test addr16 xchg leave push or cmc outsb mov mov das mov push pusha jge jae mov pop adc lcall pop mov push or enter iret aam sub jo add popf ret xor bound adc push jo jbe or in mov fisttp mov cwtl add inc sub and jp sahf into mov xchg cmp dec js out sbb jle call jo sti and pushf or add mov xlat pop popa mov nop inc pop idiv (bad) push cwtl and test movsb dec arpl jge sahf cld add ss jno adc rcll jae xchg mov fs jns and pop loopne leave add mov jge mov mov add in or cmpsb mov add cli push scas and push ja test ljmp mov loop fstpt adc ss sbb push adc mov jge mov and and mov (bad) push adc popa pusha shlb pop inc stos dec dec jg (bad) btr sbb test (bad) fcomip sub shll and int3 adc fs jo ljmp aam test das je aam mov dec inc xchg jne dec popf clc mov add xlat jae ret jmp jle insb (bad) in or shlb ljmp xor fdivrs (bad) cmp xchg sbbb push clc sbb and lcall ret clc dec xchg pop and jnp xchg cld mov mov notl mov cltd or mov insl int3 jg lock or insb xor sbb jecxz push add (bad) lcall mov pop dec fwait outsb in (bad) pop mov lret push or adc mov mov pop push vandnps push movsb divb (bad) lcall mov jecxz aaa iret movsb inc addr16 das ljmp xor cld das clc roll jp das xor add inc ljmp js sbb popf rorb cmp jp fwait adc cli inc insb or decl data16 sbb faddl out enter jg xor xor (bad) int3 out es add fnstenv or lret xorl adc push stos lods push and cltd ja pop inc loop and pushf jo jne je inc adc mov adc fstl sub jecxz rorb jo sbb lcall mov orl xchg subl je inc loopne mov add inc dec inc clc es lcall (bad) mov push mov xor cld mov or cmpsl cmp ret pop or sbb pop jae mov shrb xor or fdivs lret add (bad) incl mov xchg (bad) sbb (bad) sub aaa dec cs sbb nop sub iret push aam adc mov inc mov call mov add sbb out in pop stos sub outsl inc stos rcr loopne jne add clc mov cmp (bad) rorl ss pop mov or ljmp or fdivp ret mov fcos adc lcall lds test rol sub adc dec cs mov sbb dec dec (bad) decl ret cmp insl aas jge push cmp dec fild cmp std sub and addl add xor les (bad) decb push sbb (bad) sbb pop (bad) incl fdivrs je xchg aaa or faddl mov scas mov clc (bad) movsb es xor dec (bad) ja adc decb rcll jb inc pop or pusha lret dec out test (bad) clc popf and imul icebp decl aas mov push dec or fcmovu popf and lds mov fwait sbb (bad) call ret sbb or cmpsb jbe lahf repnz adc pushl or stos dec cld xor imul mov fnstenv mov sub dec mov dec pop inc mov test ljmp inc jecxz jg cwtl test adc xor push subl jecxz cwtl add incl inc mov sub jmp dec (bad) push incl insl ja int3 (bad) js das scas into shlb add in pop mov xor (bad) loop incl cld pop les push xchg push push rolb movlps aam and push ljmp movsb sahf (bad) cltd (bad) mov stos push mov cmp add subb popa mov (bad) add mov cli cs push dec sub fcomi cmpb cmp daa cmp lcall mov dec nop add adcb pusha pop std pushl in scas icebp adc test xchg fcompl pop inc jecxz (bad) mov ljmp cmp cmp mov aad and push scas outsb mov cmpb mov pop dec pushf jle sub ret add mov inc out jbe mov mov into clc mov push jbe insl sbb mov mov pop stos push hlt mov push arpl dec mov cmpsb out hlt fstp gs imul dec or mov rcrb xor mov js leave and aad cmp mov out adc mov leave mov ss jecxz scas mov fs lods push push test (bad) sarb test and (bad) (bad) pop in and and mov (bad) pop push std incl sbb push cmp add fwait inc scas jecxz mov decl xor js lahf mov outsb outsl mov (bad) pushl add ret pop and scas lods inc aaa rorl (bad) (bad) (bad) out sahf push add aad idivl lret jl add mov mov iret (bad) cli fmuls call pop pop rol cmp call adc xchg mov mov xor xchg int jne add pop das cmpsb aas xor icebp add (bad) lcall nop pop mov dec bound push mov mov into inc add dec inc dec mov (bad) lcall lret mov sbb mov or mov ret movsb sbb std dec loop lods pop xor push xor leave in add test cmp jp xor aaa jl mov mov mov movsl (bad) (bad) (bad) call sub ss mov out sbb stc inc imul insb loope fs adc push mov into sub aam je cli (bad) out adc or out cmp xchg stos xor (bad) pop xor das clc pop dec loop jge push fcoml jmp std inc call roll pushl mov clc addl mov sbb cmp imul push cli fisttpl mov out fistpll push std decl out dec js out int3 repz inc loope rcrl ja test std sbb or outsb mov sbb rolb or pop lock outsb ds std icebp add ds pop pop push (bad) fisttp mov nop idivb insb dec cld adc pop cmp jmp inc jnp mov lret xor xchg rolb cmpl add stos xchg sbb dec pop js cwtl (bad) push pop jle aaa inc add jp sub clc lcall lock cltd idivb push inc dec xchg inc leave fist jo clc scas inc add fadds movsb or pop icebp pop push mov fimull loopne push mov (bad) int adc lock push jl mov cmp test cmp fwait mov mov outsl xchg ds lock or sub mov mov push pop insb imul cmp loop shll dec or mov add inc cmp mov pusha hlt in imul in push nop (bad) mov cmp insb incl sti rclb and adc dec add xchg es sbb shl jno (bad) jo (bad) jg or icebp xchg or dec fcmove data16 jg loopne mov cmpsb popf jecxz test scas in loopne mov nop js mov pop cld sub xor push (bad) incl andl adc pop add scas cmp push repnz in sbbb jae pop lret sti xor call or or aaa adc dec adc fldcw outsl add adc (bad) cs sbb xchg adc mov add negb ss (bad) mov rolb sbb adc sbb and jbe int3 out inc (bad) mov hlt adc clc outsb vmovsldup out clc inc push push (bad) dec cmp cwtl (bad) pusha std and fiadd sub decl adc out int3 and push ja bound int3 imul loop inc gs and cwtl xchg mov (bad) mov mov lcall jecxz xchg or mov dec (bad) loopne sbb (bad) incl cmpsb (bad) sub xchg mov xchg cmp cld ljmp call push sbb js push stos cwtl fisttp jge or pcmpeqw andl or (bad) (bad) jle push vmwrite inc je and nop sub jle subl add jnp inc adc jb into pop mov adc xchg out cmp lock imul adc mov mov mov fadd mov cmp decl std insb xchg pop jg (bad) mov xor bnd pop mov movsl movsl das movsb mov scas pop lods sbb add data16 adc out ret jg cmc jg pushf sub xchg mov mov mov cli sbb imul imul sbb lock adc js and jge mov mov push enter scas daa outsl enter adc inc ljmp test xchg dec pop mov mov jp hlt cmp mov push movb call and rclb data16 pushl rol sub ja jp rorl in inc add add movsl lds pop inc test xchg xor movb mov mov add or xchg incb adc push sar add incl adc cmp pusha cwtl add repz xchg or xchg iret add loopne into negl lcall (bad) sti add cmp sahf fbld pushl (bad) rclb imul pop pushl shll lret fcmovu pop rcrb adc xchg mov inc call out notb push push xchg adc pop loopne cmp sahf sbb fisubl mov fs jb adc stos dec inc test js or rolb fidivl adc decl fnsave cmp aas jp push sbb subl cmp mov pop mov negb loop dec ret xchg sub mov ja push rcrl inc inc pop mov lcall jge (bad) popf pop les lret cmp clc fbld call inc data16 and orl bound sahf loopne (bad) mov popa into aam pop in cmpsb or pminub inc mov (bad) mov jg mov cs sbb inc ljmp jl test pushf repz inc test ljmp sub or std inc inc jbe lds lock (bad) (bad) (bad) cmp dec xchg cmp add xor sbb lock or mov ficom jb lock sar pop add and dec stc into (bad) je lock mov xlat cmp jg flds test add lea jne out add outsb fsubr icebp mov fnstcw loopne add and incl push iret lcall sar xchg fwait clc lcall pop aaa jne icebp add jo mov mov mov mov lods fildll or (bad) js sar add sbb nop push in xor daa lods leave xchg clc mov pop adc push (bad) jmp jmp (bad) xor hlt adc dec mov pop insl stos and mov jo out subb add bound adc sti movsl sarb mov adc mov leave xor int3 sub in push cmp loope sahf enter pop clc mov les lret ja cmpsl mov fisttpl cmp sub (bad) jmp out pop nop pop mov sbb sub fild add popa mov xchg sbb mov ret add cmpb add cld pop (bad) idiv aaa std decl insl pop and call clc inc out and test mov pop lahf mov (bad) call in fsub add jo push lahf dec outsl sub mov idivb jmp push xlat cmp (bad) repnz inc subl pop or and xor outsl fild orb jle scas lahf jb cmpsb es dec lret mov stos xor lcall punpcklbw or dec popa jmp mov aad cltd in sti inc xchg pop pusha sbb adc stos xchg push and insl scas push int3 loop cmp arpl icebp fild in sarb aas jnp cld decl or jae lahf fs fnstcw ret fwait pop cmp jg or data16 dec sahf (bad) or cmp xor pop mov xchg sahf mull cmp jae ja fisubrl or fstpt ljmp popf rclb in jecxz cmpsb xchg add cld push jae cld and addr16 jno dec mov dec das cli jmp fprem1 sub xchg cmp fdivrs bnd mov inc mov push mov es fdivrl add test mov adc jmp shll jle (bad) jg out pop sahf push out adc bound fdivs out sbb cmp (bad) imul std add mov idivb (bad) out adc sbb sub aad lcall jg nop sbbl fcomps popf push ja mov (bad) pop jns xchg mov rclb sub adc mov sbb dec inc test stos insl sbb (bad) sub inc or jns or cmp adcl insl or sbb daa mov xchg mov or add fadds jg test adc je cmp fdivrs pop hlt jg (bad) mov icebp mov movsb cmp mov add mov xchg mov or inc push or add in mov cs push loope rol into or xor loope mov pop rol fistpll push cmp sub fwait insl loop adc sub push loope call jo daa pop rcrl mov daa insb cmp sub hlt (bad) cmpsl dec ja mov mov test stc pop in shl insl xchg or push cmp divl cli (bad) fisttp aad (bad) sub aaa je and mov adc jmp push mov int icebp cld inc out test jl int (bad) (bad) cmp lahf test inc fs ja hlt inc sbb (bad) int3 xorl pop add aas mov dec add mov mov add jno aas adc push psubb imul xor (bad) ss push inc lcall bound pop sbb out inc stos add inc xor pop fwait in push or push or sahf xor aaa xor adc (bad) lcall and repz pop jns jo insl mulb dec fistp jne sbb mov or int3 lahf push lret setl add add call fcoms or push int3 cmp jo adc stos cwtl ficompl mov mov jno push or inc es mov push mov mov (bad) fcomip decl addr16 jg adc pop ds rcl jl jmp (bad) cltd cmc pop push add jp mov push icebp cmpsl push fist jbe cli (bad) lcall lock pusha sbb jns inc sub pop insb pop (bad) push mov dec push cld outsl fild jmp out sarl sub inc andb in push orl bsf xchg scas xchg sbb repz or shr out sbbb jge aad decb int fwait mov mov leave push scas xchg sub sub jmp sbb jne out cmp loope loope sub in cmp xchg mov pusha (bad) (bad) mov out push cmp repnz and incb lcall xchg sbb cmpsl and and pusha ja jbe sbb cmp or and xchg fisubr jp inc ds sar mov addr16 xchg add jmp xchg lock mov and pop clc test jns push xchg out (bad) push xchg cmp inc test jae jl mov loop popf (bad) clc outsb test inc adc lock test insl xor sbb test inc cmpsb cli push mov xchg lock push jle jg inc dec int3 mov (bad) (bad) (bad) jg,pt mov xor loope pop mov push rolb cltd cmpsl dec icebp mov adc ljmp and push ss xor outsl push fisubr fcomps inc ret lahf nop mov lcall adcb jl movsb out test jae mov orb mov clc push vpaddusb outsb scas sbb int3 pop cli inc or orb pusha dec or pop (bad) mov clc dec loop mov xor jno iret jbe pop lret fisttp adc mov mov enter push adc mov or add lret inc in lock bound add int3 add lret push movsb lahf stos adc lret mov gs jge inc pop aaa xchg (bad) (bad) icebp (bad) mov lods or clc pusha outsb or add mov xchg scas mov mov cmp imul sub jge adc (bad) fbstp add add das (bad) pop adc cmp arpl in insb mov adc incl fistpl js adc insl loop xlat lcall ljmp xchg add mov stos push movsl mov aad and push jle mov dec clc push mov sbb lahf mov and push data16 inc pop pusha mov ljmp fist cltd or mov sbb fisubrl fs xchg fadds ficoml jbe (bad) add or bound xor pop xor lock hlt ret or shl (bad) out imul xchg xor sarb dec and insb inc movsb sti shl (bad) pop push sub (bad) sbb or sub dec fs loop pop addr16 push mov (bad) lret int3 (bad) mov xor sbb call ljmp ljmp roll xor add or loop aam xor mov (bad) sbb je or in push fbld subl decl sbb xchg lret inc out lea roll mov nop sub clc in jbe add decl insl hlt aaa (bad) shlb dec je (bad) hlt push sbb je in xchg data16 mov pop mov or loope mov mov test sbb jg icebp sub (bad) rcr into faddl inc in lea mov mov push add in sbb mov pusha xor call fs push inc cwtl add or cmpsb push push test imul cmp cwtl adc (bad) cmp or inc sarb loope loopne mov pop inc mov lcall fwait pop cmpsb mov loop lcall cmp mov (bad) cmp adc or xchg cmc and int inc (bad) ljmp cmp mulb es or dec pop sub mov mov push adc mov push or inc add dec cmp mov mov fldlg2 loop adcl jle cmp aaa icebp ss movl pushf aam clc mov lret mov sub sub ds cs mov mov rorb fildll dec lods cmp mov adc mov push leave mov mov clc pop lret imul aad mov inc loopne jno lret aam jbe out push (bad) jg and lds push mov addr16 jle movsb mov push jno jo lcall inc push xor pop push mov add or pop lds inc mov or or cs fs xchg jae fwait sub ror cltd test shr test mov xchg scas and add addr16 movsb and test fmull mov ret inc xchg std push repnz or push adc mov mov xlat or decl je mov xchg iret jl inc imul jp xor aaa sbb nop cmc or test icebp push sub loopne call sbb pop inc int3 sbb mov or stc movsl push (bad) jo and or lret movsb daa cmp mov insb or (bad) ss enter (bad) lods adc movsl sbb loopne loop jle ror add (bad) dec sbb pop dec dec pop adc sub notb mov ret mov pop dec cmpsb pop push sbb test lea mov sbb insl test andb inc mov inc cld insl cmp fldl mov mov test arpl fstl jmp (bad) xor jl nop test push dec (bad) cmp and divb je flds mov shrl mov pop xchg in sahf push add (bad) stos inc loopne std rclb adc mov jno or mov out scas lds icebp aaa sub pop pop pop jne lcall cmpsb xlat cmp pop cmp push mov out pop (bad) incl add push adc fstpl fwait in inc orl dec xchg mov mulb add adc dec sti ret ret xor ljmp xchg hlt (bad) outsb cs std outsb loop repnz pop insl (bad) fldcw aad sarl push xchg xchg inc sub mov push mov mov cli pop mov push and xor adc stos cmp or xchg (bad) (bad) incl (bad) push mov fimull loopne add push dec fidivl jecxz mov clc fcmovnu insl jbe sarb lret xchg or incl lock mov aam sti push nop leave sub (bad) ljmp iret add push js or ret std out push (bad) cmp jge pop pop or hlt pop mov cmp test xor test (bad) sub and xchg hlt push cmpb lock xchg mov mov repnz fcom and nop (bad) bound jbe inc xchg push les fildll fildll data16 jnp push ret mov cld or sahf std mov sarl xchg or dec fimull cmpb mov enter sbb imul mov test outsl aad add xchg lret sub jge pop push xor ficom and in es jae cmp shlb xchg clc ficomp and adc addb and ljmp sbb popf (bad) push icebp mov xchg jg mov mov push mov xchg add push test cli fbld mov fs popf push xchg adc ja cli outsl xchg xor mov out (bad) call std dec mov rcrb ja jnp jnp jb hlt ss scas sbb mov outsb sbb test subl arpl (bad) fisttp int imul ret data16 sbb (bad) mov cmp mov lods pop xchg dec (bad) lcall repnz inc pop pop stc cmp in push sub fsubrs (bad) mov inc rol insl add or jb jnp sbb or sbb aas repnz lcall mov addr16 sarb ds fadds leave adc mov xor call sbb ljmp fmull les inc daa sub jmp xchg ret js call cs lcall insl std push pusha data16 push fisttp clc pop icebp inc jnp leave pop mov testl mov add sub and mov push cld push xabort add enter cmp out adc ljmp (bad) data16 mov mov lods cld mov and dec (bad) pop incl cld inc mov enter pop out or repz adc ds mov jnp jp insb sub jle ret insb sbb add cmpsl push sbb jge cs (bad) incl jl pop inc mov (bad) pop xor fisubr lret push add shll push aas inc int3 pop add push xor sbb mov mov xchg cmp or inc jno scas adc mov pop cmp cli dec insb fisubr and push scas dec ret (bad) jbe jmp cltd mov sbb cwtl push sub je xchg sub or jg into stos pushf pop jl push inc pop pop sbb das fiaddl out fidivr in and and insl mov jno xor in push mov decb movsb ljmp add iret scas sti (bad) and cmpsb daa fildll mov insb rorb fdivp or pop int3 popl mov and andl sbb or lret sbb (bad) (bad) (bad) decl pusha orl push int cvtps2pi imull jne add es and arpl push fadds mov pop ret les fldlg2 inc test mov sbb pusha adc mov (bad) sub pushf pop sub (bad) mov leave mov push cld in fisub sub cmp dec jmp cmp pop iret adcl mov gs mov mov jg mov mov out push insl aad xor xchg push insl add (bad) (bad) (bad) mov dec xchg sbb out popf xchg adc or and ror cmp ret clc or pushf loopne (bad) push or add dec adc jl (bad) mov adc hlt out es sbb nop dec cld dec jbe mov jmp pop mov mov inc loop and or xor xchg out mov sarb and (bad) sbb aad lcall mov je mov test or cmp nop sbb (bad) push mov cmp or dec push loope sarb xor jg and sub push push jle fwait dec dec icebp rcll mov xchg mov (bad) incl jmp push and fdivrs pusha xchg push lds aaa ret xor push lcall inc cli incl xorl sbb mov cs cmc sarb add jbe or adc fbld xor or sahf rcrb addl sub fsubr sahf pushf scas incb or or jle xor out data16 pop and mov lret loope mov push mov jle sub adc and sub xor aad pusha xor insb dec (bad) push sub rclb or add lock jmp sbb mov (bad) call pop mov mov arpl pop jg je fsubrl dec adc test mov fisubr inc xor pop dec fadds mov inc cmp insl cmc inc inc les mov mov dec sbb sub fwait mov cmpsb hlt adc in movsl and add enter pusha loope adc jecxz mov addr16 ja repnz ss or inc loope jle or ja mov fldenv decl shrb push les inc andl (bad) sti rcrl jg mov insb mov sbb push jmp xchg mov cwtl fs push rcrl scas (bad) mov inc nop ss js das add ljmp adcl pop dec shrb cmpsl add loop (bad) cltd push (bad) call loop xchg ja xchg or pop and mov dec sub rcr test (bad) bound and push rorb shrl dec dec cli sbb arpl inc cs hlt leave out and rolb insl jg movsl pop mov cltd fldt or xchg jo (bad) (bad) mov add test lds call sbb dec cli or mov jbe or fldenv incl sti lret into fldln2 mov scas or dec or jg mov xor call aad call add cmp push cmp cmp (bad) loopne push aam loop jns jnp add les inc in push mov add inc push mov popa or fsubrl pop xchg add add arpl mov mov inc sub mov mov cmp mov jecxz add jecxz pop out pop fcomp or mov fwait dec fisubrl stos pop fisttpl cltd fistpll std jmp scas pusha loop andl bound or jmp xor sbb inc pop in adc add loope lods xor or cmp pop dec (bad) sbb adc pop cli mov cld push push cmp mov fcomps je cmp lcall sahf inc add mov sbb cmp cmpsb sbb or or scas ljmp loop or ss xor ds and jg mov inc frstor and (bad) pop hlt das cld das call daa rcr sub adc add jno lret mov popf aam mov or imul adc xchg orl aas inc loope jmp sbb xorl mov imul fiaddl add xor (bad) push adc std push mov loopne jecxz outsl mov (bad) into add movsb jbe adc mov loopne add aaa lods test stc movsb icebp inc push imul fnop cmp shlb call jb pop sub add or or mov jbe clc mov mov or cmp insb in pusha mov fbld adc push cmp sbb (bad) xor dec lcall lock sbb adc inc push xor insl insb push push sbb pop mov mov sti int mov xor enter enter ret adc rolb or xor adc cmp ds mov jmp lods dec cmp add xor les xor mov sub pop cld (bad) jbe addr16 shlb xor nop adc outsl leave movsb ljmp cli add jbe out mov sub dec and push sbb cli and push pop mov pop cwtl mov pop mov xchg fwait aad movsb imul mov cmp data16 dec insb ljmp test fdivl dec sub mov and ljmp jne es or in out (bad) mov sbb cmpsl jge push out (bad) out add js cmpsb sbb jmp sub (bad) incl cli cmp cmpsl mov pop (bad) mov xchg jle aam mov or (bad) mov mov push xchg sub (bad) pop lcall ret jo dec and into push xchg mov jo (bad) aaa jge jno mov cmp xchg xchg decl or mov fwait mov ret fldenv xor adc fwait mov in push add jg (bad) ja movsb mov fwait sbb pusha and xchg xchg decl icebp loope fistl out ret inc mov or cmc (bad) call das fsub mov or and jnp insl xor scas fidivr mov (bad) ljmp (bad) sbb add xchg jo (bad) push and sbb push pop xchg fs imul scas and mov push cmpl dec sbb pop cmpb cmp sub (bad) cmp (bad) sub cmp or js fldenv pop cli sub (bad) testb push mov mov and adc adc jmp dec lcall inc jmp or mov rolb rcrb mov pusha push xchg sbb pushl adc jecxz xchg dec lods mov popl sbb jmp stos cmp (bad) insb add sbb fldcw mov pop or xchg inc jle push ljmp push hlt xor push pop pop icebp (bad) call shrb test xlat and adc gs and xor or lcall shll adc fwait push or push pusha mov or ss dec jecxz ljmp inc or test adc mov pop and pop push sbb mov add xor repz fdivrs lock add push loopne jecxz sbb cld sbb dec xchg dec out xchg push lods mov aaa (bad) pop xchg cmc sub jb mov lahf (bad) scas sub sbb mov scas inc aad mov into test iret shll jg and cmp imul lret pop jns (bad) pop rol jno loop icebp push cmpl ss in fistp adc enter lcallw fldcw pop inc or movb sub push push fmull inc mov add jns mov ja jle jno push mov scas cli mov jbe or lret jg sub aam lods insb inc roll sbb jg cld inc ljmp sub insl add mov out adc test addr16 pop mov rorl and js jg mov xor sar add sub (bad) mov pop push pop lret xchg jb mov push cwtl clc aaa pusha or mov pusha inc pop mov and push push pop sbb sub dec test xchg mov pop or loopne shrl aam jbe in daa (bad) (bad) (bad) call shr push cmp daa mov les dec adc les fwait test fwait popa jl (bad) lret rol mov inc std mov lock sbb xchg cltd mov mov lea out push and xor mov arpl cli push mov inc fidivrl ljmp subb shlb or sub cmpsb dec (bad) (bad) incl add fs adc mov pop stos inc shrb mov add pop adc dec mov icebp jg sub cmp sahf dec lret add and cmp cltd mov mov sbb je and push lcall iret loope cld jmp das clc dec push gs cmpsb fdivs (bad) xor mov jg jb adc (bad) loope mov cltd pop add push (bad) (bad) ljmp call adc leave fdivrl fidiv idivb fst outsl das les and inc out into repnz fildll fwait rcr sbb jg dec dec pop mov test push sarb stos and incl pop loop sbb je push cwtl aaa mov aaa cld rcrl in inc test xor adc inc adc add fstl pushf pop mov cmp imul mov sbb js push clc push stc xchg arpl mov cld inc shll (bad) ss jbe sub std lcall shlb sbb pop and cmp and fwait sbb lcall iret ficompl les outsl sub decb mov mov mov or aaa add jmp lods push loopne (bad) bound adc nop adc pop mov fdivrl jl (bad) stos jg das push int fild and call mov pusha push sahf nop repz jo roll push lret int add dec sti xchg hlt pop inc inc fdivrp and or pop stos (bad) decl and fidivl test lret xchg mov push (bad) push mov test pushf jo arpl and or jge bound das and and xchg and sbb and test mov sub sub xor enter dec sbb jp cmp dec lahf cli push sbb out aaa out movsb scas xor sub push push scas mov loopne fwait mov and lea pusha pop icebp roll mov mov pop jbe push jbe in push scas pop mov loopne cmp cli mov mov dec sub xchg add incl adc movsb xchg adc dec jmp mov add mov xchg ds or ret or dec pop pop jl inc sbb arpl insb lods pop inc mov cmp in fs outsl add aam push pop pop je push adc sbb aam outsb je adc pop popa sbb ror mov outsb andl xchg enter cmp movsb inc mov mov or sbb xor cs and add iret adc dec cmp je cmc jg lods (bad) cli mov mov cmpl push in mov stos lods imul (bad) faddl xchg js inc (bad) (bad) jp add (bad) fildll xorl loopne cmp test sub fisub (bad) fcomip xchg fidivr xor cmp push rcr cli fcomip or mov into js js mov adc lock inc daa cmp and mov cld mov push lahf add sub call roll add add dec or sahf (bad) (bad) mov hlt sub jo ja xor mov and loope and sahf mov mov lock decl mov decb xorb test shrb fildll movsl (bad) aas or add fistpll adc adc (bad) push std cmp mov shll add in test pusha clc and cli pop adc cmpsl mov mov fs or push xchg adc not repnz or mov (bad) sub push mov enter ss xor out sub cld (bad) inc cmpsl mov sahf xchg imul and pop xor jo aad ret cmp xor or add mov (bad) (bad) lcall add fcoms fs std pop add (bad) imul (bad) (bad) cmp add mov jl dec sub sqrtps push clc (bad) decl xor mov pop push mov cmp add jg imul push dec lcall lea in decl dec clc sub in ss scas mov inc or jg inc fisub cs (bad) lcall and cmp ret or stc (bad) or jmp sbb (bad) dec hlt inc dec push cmp scas lea popf sub test sahf aam aam pop push into or mov stos inc ret pop mov pusha std push mov pop cmp (bad) in insb pop sbb inc loope pop mov jnp imul (bad) loop mov xchg xor (bad) mov lahf cmp aam add rcrl imul sahf or xor testb lea pop (bad) (bad) (bad) incl mov add pop arpl or lea cltd and dec mov lret xchg test dec dec cltd jl aas mov push adc mov xor incb jmp mov mov inc add mov test int3 popa jae jns or daa addr16 clc fwait daa add dec cwtl js cmp pop mov das xor int3 adc sbb xchg popf decb mov test mov imul mov aaa cld mov (bad) je mov shl jns cmp rcr ds (bad) cmc add int fs (bad) sbb xchg dec loope fstl cwtl lcall push or sbb scas adc in mov jg mov push sbbb outsb cli scas data16 push push and mov adc clc sub (bad) fisttp push pop pop std test pop dec enter movsb or or mov inc clc outsl test jne xor (bad) (bad) (bad) jmp push lods mov add push mov xchg daa cwtl sub ja (bad) inc push add push and adc and stos insb mov (bad) scas inc adc push jae cmpsb mov (bad) and mov rolb aas stos cmp push xchg mov insb decl pushf js sub jbe sub mov jp pop add ss (bad) xor xchg push mov (bad) xchg mov idivb out and push clc fnstsw mov mov xor jnp inc mov or popa sbb sub decl mov sbb call cmc mov (bad) (bad) fistp push pop les push fwait pop add faddl jl mov clc or dec push ljmp in inc hlt fstpl push sbb mov pushf adc (bad) mov out push dec and insb adc jnp mov mov rcrl add dec or mov jnp repnz mov and lcall xchg call pop into and negl rorl push movsb fs stos mov aas sarl fcmovne aas cld cmp mov clc incl jbe bound js and jmp mov cmp (bad) aaa adc sub push push scas andb aam rcr inc inc stos mov push nop mov adc nop rcrl iret sub add push adc push sar pusha ds adc jl popf sub std fstps icebp cwtl fistpl pop xchg jl xor sub clc das and mov rcr push int3 sub inc adc lcall pop test mov adc push adc or mov add mov ret sahf outsb push loope mov add jmp cmp cltd outsl xchg mov mov inc (bad) incl pop sub adc push mov sbb loopne xorb repz jne push clc fs pop jae xor rol xor mov loopne jle test adcb movsb sbb push mov or fimull jmp notb ficom out mov xchg adcl mov add adc mov ds (bad) lret decl cmpsb (bad) pop mov (bad) ljmp jle or cmp push adc std jmp adc mov lahf sub call pop cli ret mov movsb or test addl add fbld loopne mov add imul xchg fcmove and (bad) das xor jae push dec xchg outsl imul cld cmp add inc ret lods movsb or add push out mov adc stos mov add int roll jne ficompl jae stos fs xchg ret mov push xor cmp (bad) (bad) decl add scas (bad) rol insl inc cmpsb xor push mov mov das xchg pop pusha jmp ds or test fcmove decb fwait pop icebp add iret xchg jnp push mov dec popa cmp xchg fcomps inc (bad) call mov push push mov adc dec mov (bad) pop dec cli pop test sub scas adc mov les jmp and adc out fadd decl cltd cmp in mov jo mov and adc mov lahf (bad) lock fs repnz push stos mov out rcrb dec push imul ret push mov test pop int xor mov sub cmp fsubl in les cmp xchg pusha mov pop insb bound sbb mov dec imul movsb cmpl bsr lcall jle xor (bad) decl pop adc sub and test ljmp push rorb mov addr16 icebp mov or lea xor push clc pop xor jecxz dec frstor ja dec sbb lods adc or mov and jg pop divl inc stos add insl call inc outsl hlt xchg cmp lcall fistpll lds push mov sbb fsubs xor sub jmp and adc and decb push flds add dec mov stos add outsb test jne push lea and mov aaa dec ret out jge ja ret pop ret aam inc inc std push ret cmc mov lret sub imul popf xchg rolb jp pop and mov sar push jle and ljmp mov mov push push adc pop sub daa dec mov sub bound xchg out xchg push pushf or out decl lock sbb nop ret cmp or rorb loop or int3 mov adc cli sub cwtl xor or test xchg adc dec icebp sahf incl shrb sbb (bad) (bad) iret inc incb sub sar ja jne jg xorb jae jp sub scas cmp or fs cli jg (bad) jo push shrb push dec mov (bad) repz xor pop test shrb leave xor add jbe in aam adc (bad) call cmp movsb in mov and int3 int lock or fdiv stos push push sbbb xor inc cli jo (bad) int3 mov popa es add sub pop shlb inc out inc clc aaa sub jle pushf testb pop pop jae and ja cmp and inc sub jecxz mov mov std lcall fimull rcrl lahf push adc loope mov jecxz outsl lock ret ret inc mov xchg or leave cli stos add mov bound add sbb in xor adc push xchg sbb aam mov add call mov mov pop add (bad) adc push int3 mov mov repnz add add stos fs cmp nop jle add bound imul push lret xchg pop (bad) cld scas inc jecxz push (bad) push jg xchg roll pop fistpl roll cmp pop pop lock push add pop lods cmp jns rolb in pop push clc pushf lret mov repz pusha call cmp dec jo jl mov xchg shrb hlt addr16 js sbbb and jbe,pn push mov adc lock test add cmp and dec insl adc cli popa jne sbb les lcall mov fimul cli push (bad) int or insb mov rorb xchg jno scas outsb fcmove mov xor fdivrs stos inc popa fst sahf inc xor (bad) ljmp jp (bad) out sub cltd (bad) mov adc adcl sub mov pusha cld ss (bad) (bad) lahf jns es pusha (bad) inc iret mov cmp xor into sub (bad) sbb add mov mov jg insb cwtl sbb adc and call jne dec mov pusha jo xor mov dec test xchg jg hlt lcall mov sbb mov icebp ja rorb mov fldl mov and jbe jo js push repnz sbb xlat sahf mov xchg clc jno cmp out sbb lret xlat ja jmp push jo sbb (bad) ja add loope je cltd fcmovb jle add mov mov mov mov xchg inc pusha jne cmp clc aad hlt add mov les or add sub dec cli fwait xchg sub data16 dec add xlat add pop lea aam enter rcrl icebp incl xlat loope into jnp aaa or jne femms mov push loop add stos repnz sub (bad) jmp mov loop add mov (bad) nop fisubl mov cmp jmp jge insb cld xor cmp loop xchg mov cmp dec dec push cltd sti lds xchg aaa xchg insl aaa bound pop mov sub pop dec loop jg sbb dec mov fisttpll (bad) lcall or pusha fstpt add cld pushl mov fs leave adc xlat mov sbb (bad) (bad) lcall mov jno mov mov nop inc test xchg sbb cmp sar ds fist push xchg inc ret push pop lock xchg aaa mov adcb lds xchg les mov dec and jl div lea inc icebp outsl push cmp pop cvtdq2ps imul push pop lret or add lds subl jnp out mov xchg mov imul (bad) dec and and cltd jl xchg (bad) sub and pop and cli jo sub sbb or xchg mov jne enter push imulb hlt ljmp in cmp loopne es pusha loop testb inc pop (bad) ljmp push in cmp push mov (bad) (bad) mov inc (bad) fstpt mov dec test es pushf add pop lcall in insl inc clc pop jnp and (bad) mov les ret mov pusha cld inc scas dec fstpl lds mov out mov mov inc and push cmp lock push pushf (bad) (bad) test inc fdiv aaa add test cmp je fwait push or xchg in loopne addr16 hlt and (bad) jmp js mov loope stos nop or adc (bad) (bad) xor mov adc out pop push inc (bad) aaa xchg and das enter test mov mov fnstsw pushf fiadd cmp pop fdivl fdivl ret jl jnp xchg jne (bad) call js int xchg cld adc loop or xchg je cs and mov mov (bad) sbb jne test lods sbb cmp push dec js mov iret sub cmp push pop movsl ds lahf and adc sbb loopne mov (bad) xor sbb sbb (bad) je cmp loopne loopne add test sub stos mov out mov and xchg push mov push xor stos imul mov out out inc loopne and test xchg insb jae dec cli sub pop cmp or push xor adcl scas cmpsb xor sti ss nop jl inc out test outsb push js lcall mov (bad) jg inc fistl mov pop push pop sbb lret je repnz pop dec mov or cmpsb ja les ss inc cmp (bad) outsl xor mov fadds in (bad) (bad) sub push push jno popf (bad) lods fs push orl cld sub outsb mov adc adc push int icebp adc fmuls push (bad) jbe xchg sbb cmp nop pop arpl popa jge dec inc clc adc mov mov push sbb pusha pop mov cmp cmpsb loope pushl jle xchg adc sbb aaa jbe mov sar bound or mov out cli xchg xchg sbb (bad) rcrl inc sub xor mov cld ss faddl push (bad) or enter cwtl jle add add cmp xchg insl je dec mov xchg add adc add clc add pushf int3 add cmp aad cs imul xchg ror push call addr16 cmpsb icebp mov xor dec cmpl lds cmp inc popf xchg test decl push in xor sbbb mov mov enter outsb incb and imul mov mov test sub lret movlhps das mov and sbb mov mov or mov pop cmp mov rclb jmp sarl movsb call push and call clc es cli inc in sahf nop ret nop lock inc adc fs lods jnp shr (bad) pushl lea int jle sbb loope mov push cli outsl (bad) jg inc scas imul popa lret xchg ss sbbb (bad) js sub ljmp aaa sbb sub shrl sub mov insb lret pop or sub cmp call pop (bad) (bad) ljmp daa imul int3 fmulp loop or cmp xor mov sar outsb and xor sbbb xor mov test mov adc incb dec mov ds pop out enter sbb mov push xchg mov mov (bad) (bad) mov loope pushf sbb sbb mov js cmpsl add mov or fs fdivl add ret dec lock mov (bad) mov roll mov cmp xor in clc cmp cmp cmp jne idiv ljmp and xchg dec lds push jbe or call test dec scas sub inc das repz xor int3 jl test sub cwtl or nop add xchg incl pusha jo pop push jl sub test jmp inc cli xor cmp hlt adc in ljmp adc sub push push mov (bad) cmpsb mov lds nop xor sbb call pusha cli or rol scas and je clc outsl fildll sub out icebp mov cmpsb int aaa jp pop push cwtl pop xchg or or adc fwait mov fldl or call data16 pop inc push mov (bad) decl adc or aam adc xchg mov clc das cmpsb inc add std loope jmp add lods incl mov into rclb sub in push std imul pop push sar popa outsb cmp and and lcall push outsb push push xchg add xor and test inc (bad) and lods sbb cld pop mov loopne mov jge test test lcall je mov or inc outsb stc pop loope (bad) mov or mov pop push push add push add inc cltd and mov dec inc adc add fcomps mov mov add cmp nop fsubs mov xor (bad) cwtl and inc add loope jl sub rclb sarb adc cli incl jns xchg sbb cmp (bad) mov and adc mov sub add outsl lret xor scas movsb mov sahf clc (bad) rcl into mov or push sub xor les adc fnstcw fs mov subb stos pop subb mov and sar sbb rorb (bad) les out push sbb incl fadds mov cmp out adc cmpsl add sbb rcr sbb add dec loop insb movb xorl sbb ret jecxz cmp cld pushl outsb pop jg sbb mov xor xor movsl jg mov stos lret int3 mov xchg ffreep decl (bad) (bad) mov mov add lods inc lea pushf iret mov mov cwtl mov mov ficompl sahf cld pushf aaa inc sar pop lods ret movsb hlt inc js cld mov jg (bad) jmp aaa lea (bad) call negb insb rclb and add adc adc dec (bad) jg mov mov push loopne cmp jp sbb mov subb xor insb cld (bad) aaa jbe les fs push fdivr sub fbld jne pop adc (bad) fbstp mov out in test dec sub testb mov inc adc sub popa add mov pop mov cs sbb dec push out (bad) clc adc decb sbb xor test popf sbb inc cli add daa and push add adc (bad) call mov mov divb outsb pop add into and sbb loopne add out sbb adc mov std decl inc cmpsb sbb les dec xor fs inc sbb inc xchg repnz idivl data16 add sub mov cltd lds add loopnew,pt mov pop xor sub push mov icebp mov fistl and cs cmp test cld and cmpsb (bad) lcall add (bad) adc push in and std pop mov pusha cli jg test sti ficoml sar ss loopne leave pop faddl mov clc mov mov cmc repnz (bad) jg lcall and xor and jo pushf in outsb imul push jg jmp out xor test push xchg pop or clc jmp and push aad stos adc cmpsb push mov adc das cmp mov push les sti push jnp mov mov cmpsb out clc outsl xchg add test (bad) aaa popa jecxz enter mov adc inc int test fdivs sub pop mov rorl add fdivrs dec mov loopne sarb xor ljmp sub loop sub lds xor mov add cld push push inc xorl push incl or sbb dec mov jecxz sbb (bad) and mov movsb aaa in or push pop hlt dec pop mov mov jne push lods int aad fs push adc push mov cmp mov jne (bad) (bad) incl fidivr fimull jo fstpl add pop mov mov in xchg je push scas clc (bad) out pusha adc xchg mov mov ffreep fstpt aaa mov pushl mov mov cli cmp sub xor iret rcr sub sbb adc clc mov aad xor mov sar (bad) out call and int3 ja sahf pop rclb push and imul mov xchg testb scas decl mov sbb clc dec movsl movsb add adc xchg out in adc ljmp pushf mov std jg jo icebp clc incb mov mov aam jno and jecxz inc std (bad) incl push mov xor add sbb addr16 ss std pop (bad) decl mov mov sub hlt pop dec jecxz xor pop mov fnstsw sbb and cmpl (bad) (bad) pop mov sub adc enter decl mov push adc (bad) jo in sahf (bad) (bad) incl popa mov and popf arpl xchg adc pop add data16 push xchg add test and (bad) call pop jl add mov imul dec fisubr dec (bad) and scas sub or popa cwtl jmp jg movsl dec loop inc mov jb pop gs gs cmp or dec mov aaa les jne jle mov mov fwait aaa add adc sti into xchg jg add pop lcall test push cmp fbld fistpl mov repnz data16 decl adc rorb xor setle dec imul cmpsl je mov (bad) mov mov stos dec sub or dec fisub cli jg and lcall mov add (bad) (bad) ljmp (bad) jge in outsl dec or data16 sbb test jbe xchg cli jg pop nop pop imul insl mov mov mov imul (bad) cmp or in (bad) fist add mov pop adc cli scas xchg mov xchg in rcl (bad) (bad) dec (bad) pop aaa lret mov mov (bad) stos cvtpi2ps (bad) adc in bound sbb cmp push imul sbb in (bad) pop ret mov sub shrb out or popf cmpsb cmp adc mov inc cmp dec inc std cmp out mov xor imul cmp call mov jae inc (bad) ja fdivs jge rcrb (bad) fdivl imul xor popa lods lock mov sbb addl mov pop fwait or inc ljmp add mov or push movsl std mov ljmp fisubl iret xor dec fisubl mov xor loopne rolb mov jecxz lods out sub push cmp xchg xchg stos cld adc pushf add lcall xchg lds lock cli jg pop pushf popf fwait or fs loop sbb enter gs hlt aad ss fdivrs fildl adc popf push (bad) out les (bad) lcall inc popf cmp cmp rolb andb rorl fidivl xchg and or outsl xchg mov push jns fnstcw cmp and addr16 add (bad) and inc fwait loop pushl add insl cmpsb sbb fdivs inc sbb in bound clc inc daa xor push cmp ret fadds xlat pushl xor jae bound mov popa lea xlat ljmp and jmp subl pop xor inc cli add cmp mov xchg mov lea add pop xor lcall jle push sub mov mov or and lret mov xorb ss pop out xchg xlat mov bound scas cmp sub das push and inc jmp ja fwait outsb xor repnz out sbbl cmp xchg les xchg pop cltd add (bad) scas dec cmp pusha jo cwtl sub es mov call xlat outsb add xchg int sbb inc loope and cmp push in rcr outsb jo pop and mov lds xor or loope dec rolb fnop lahf test stos sub loop adc jmp (bad) lcall cld mov inc add or push pop test scas and sbb in subl (bad) fistpll outsb loopne push (bad) sbb inc cli outsl sbb push add mov fildll jmp adc adc in out ljmp dec add fnstcw dec dec mov or (bad) mov add sbb lret jp push mov cmp pusha stos jae inc ljmp mov (bad) cmp lret add sbb (bad) (bad) mov or (bad) call jnp sbb adc and inc call js inc add stos outsb mov loop add or lahf and pop roll mov mov cmc lods out cld enter repz out mov pop cmp test or mov fcomps and lret aam std outsl mov add lock push sub and clc fstpt sbb sub pop dec pop pop xchg xchg dec fldenv xor call jmp sub ret mov inc mov mov adc xchg in popf adc and loopne xor leave pop into out add sarl pop movsl fdivs and fwait (bad) inc ret jmp callw mov sub ss clc incl or mov lds xchg dec jno aaa out cmp add push mov jmp sbb or ja lcall xchg cmp mov xorb shll mov xchg jbe outsl xchg bound bound cwtl test movsl xor sub dec lds jl jl or orb mov adc mov nop add mov pushf das jno mov subl and pop arpl sbb jle inc add mov int mov mov hlt sub mov push xor or mov or mov in jg mov pushf (bad) and cmp push xchg push and mov fcoml mov repz sbb shrb popa fiadd push js and jg lcall jb jo or jle lock rcl pop adc das popa cld popf cltd dec add or test (bad) cmp dec cmp xchg int push sti sub mov inc cmc out sbb ljmp out pop pop popa jo es insb ret insl sub scas fcoml push cmp jmp imul mov or push mov add js mov icebp incl cld sahf mov dec js xor inc sub fimul bound daa or scas xchg pusha xor mov mov (bad) popa aas imul pushf loop mov call sbb mov mov xor jb std pop adc xor jge fsts lret xor insb test mov push push sbb cs mov inc add loop popf nop inc or cld out push shrb inc push fsub sbb dec adc sarl insb out jp (bad) sti loopne and repnz shl cmp scas sbb adc dec dec fisttpl xchg aam sbb mov pop (bad) lahf mov sbb jae fiadd cmp jle in scas das outsb stc pop mov or push mov mov xlat in or ret or insb and std (bad) or jg sub enter outsl xor jns lcall test and enter rdpmc inc xor jne ret inc push xor daa das cli mov lods jbe ret mov sar lret xor (bad) jg xor iret push loopne lea pop sub pop push cmpl pop sar mov int pop xchg mov movsb out xorb ja sub fs fcoml inc stos pusha test arpl xchg (bad) (bad) push std pop mov mov test adc (bad) sbb inc pop mov fldenv pop std pushf mov sbb clc mov scas xor xchg mov (bad) mov jo or scas or fldl std push inc or in jb sbb cltd fisttp push addr16 adc outsl xchg lahf lret push mov inc fs mov les (bad) and sbb jno mov call stos test out sbb daa imul cmp mov xchg or pushf out (bad) inc pop je insl cmp aaa int3 or les lock ss adc bound cld fwait mov stos cmpl and inc mov loopne sbb xchg ss cwtl outsb pusha js dec std or or (bad) fs inc or sbb and push clc addl cs and and fiaddl lds pop int3 mov mov cmp ja add pop (bad) lahf cld (bad) mov sbb add mov icebp jle push lret adc mov cld ljmp xor dec out mov testb sbb insb inc lcall rorl nop rorb out pop pop nop mov fisubl incb sbb iret mov xchg pushf xchg out add aaa fnstenv cmp ss decl das push cmpl push push (bad) int3 or xchg sbb jmp xor dec addr16 adc xchg inc mov sbb ja ljmp cltd scas pop xchg fisubrl in sbb into jne mov cs (bad) fisttp push in jbe call iret test inc aas mov fwait sub and mov cmp sbb pop add jmp jp and and pop pusha and cltd sub in sbb lds stos jle scas imul xor inc xor pop sbb add popa sbb push les push mov (bad) jg test cmc inc in scas or std cmp or lds inc dec (bad) pop andb dec mov call mov stos mov fiadd lods (bad) aad (bad) mov inc mov push les mov push sbb orb nop add popa mov add push mov dec test xchg pop sbb outsl pop mov (bad) pushl cmp (bad) dec jo loop sbb mov jge push xchg lcall push sbb lcall stos out pushf nop fcoms inc in pop jp daa pop adc lret bound mov ret (bad) ljmp out jno mov pop xor push adc dec andb mov and jmp mov lahf push adc mov ret jmp fidivr std (bad) (bad) lcall sub sarl mov xor jns sbbl add mov mov inc add mov pop rorl (bad) xchg inc pop jmp movsl sbb dec dec pop addr16 pop lret (bad) (bad) decl nop xorl mov pop xor mov sub lret aaa pop clc mov arpl mov mov mov or cmp xchg dec sub inc inc dec movsb std mov int3 cmp pushf lods (bad) lods in test push cmpb pop add mov mov andl sbb pushf mov xchg fst int3 testl outsl cs mov ficompl add sbb pushf in add sbb lcall mov mov mov (bad) cld in lret lret mov adc jge out imul and in jnp in nop fwait and push lcall std push add or adc xchg xchg mov lock pop movsb sub scas and (bad) stos les fidivl punpckldq sbb jg add icebp rcl imul fiaddl lcall xchg xlat mov aad inc sti xchg jl in subb clc fwait sub (bad) push xlat into pop (bad) push adc lcall orb xchg pop or add mov xor and inc mov nop js imul xchg mov fiadd xor dec jbe mov jbe cmp mov add inc cmp scas jmp loope pop mov sbb xor aad icebp mov cs xor pop dec or ficom test lock push and ljmp int3 add inc mov sub rorb xchg es mov hlt mov inc clc sub mov mov or adc (bad) (bad) pushl push lcall push jb mov and (bad) (bad) jns add out in outsl adc push inc or enter testb sbb or loopne dec fs lea (bad) out mov add out cs test mov mov jae pop push push clc sub (bad) jg mov jp icebp pop adc xrelease jo inc enter sub jmp cwtl inc popa jnp or nop jl lcall jmp mov or add std stos cmpl mov pop dec jge sub cmpsb cmp mov lock aas lds movsb out mov scas es push adc jmp and sub jle aad ficompl ljmp jl dec dec add mov lods int3 pusha cmp push dec add dec push loope pushl cmp xorl and hlt mov and pop pop jbe dec pop test mov mov jno cmp add push add mov mull push mov lds shrb sbb aaa and pop stos jnp (bad) aam rcr dec push lods (bad) mov or xchg fcoms dec sbb push cmp jae adc sbb add add and adc aad imul cmc sub dec and aaa adc add xchg sbb pop xor pop imul jge adc ret dec es adc imulb das xor sbb xchg mov pop push orl xchg lret jp sub pop push insb (bad) notl cmpsl fistl js pushf cmp (bad) icebp xchg scas pop ret jnp subl and jmp (bad) mov push sbb out push sbb aas shrb call cld test push stc adc into xor add jmp (bad) and pop loope sar sbb lret push sarb lea dec aaa or mov dec cmp or inc push adc add imul popa jl xchg arpl inc fcomp fbld imul dec inc xor insb repnz add call (bad) aaa data16 adc pushf lock bound fbld cmp cmp (bad) add popa movsb dec je or (bad) incl mov cmp decl push mov scas ret stos enter or loope jno lds insb mov sbb mov setno push inc outsl loope cwtl sub hlt int3 incl or les mov fbstp les lcall and loop out mov push rcr pushf xor retw push dec and scas lock std pop fild fwait cmp jp or outsb xor mov xchg jo mov test lock mov adc cmpsb cs mov pop or dec lcall jmp fisttp or sbb (bad) pop mov fwait mull (bad) stc (bad) sbb js movsb xchg push gs rcrb es or iret and nop sbb add push das clc subl inc xor inc addb scas xchg mov or xchg ss into or mov lds or sub sub cmp xchg ss pop pop clc inc mov mov fxch add fxch test cli sbb push mov sub mov les or sbb lock rorb es repnz add les clc sbb push push and adc pusha fbstp (bad) jl jnp stos add pushf daa leave ljmp lock (bad) or xor cmp cmc test (bad) sbb fyl2x fistpll pop shl jl movsb lcall cmp (bad) out (bad) hlt or xor or fstps cmp cmp push fsub mov xchg jne cmp (bad) (bad) (bad) call test jmp fwait dec enter subl xor inc mov in and push inc cld (bad) (bad) mov (bad) pusha jge mov imul movsb or lcall in or add call xchg push out add mov jnp sbb push sti xor test adc cmpsl stos inc xchg inc inc int3 lret fwait xor cmp jg jle adc mov push inc inc jg cmpb add xchg mov dec fisttpll rolb sub loope daa (bad) adc xchg pusha stos out pop incl and dec gs mov inc out in sub std inc and adc sbb out dec push mov mov out clc or sti cld adc xchg mov sbb mov jbe ss dec sub mov inc jae (bad) xchg dec mov in outsl ret xchg jle inc mov mov pusha std pushl aam mov sub ret jg inc int or movsb inc sub int js shr jns mov daa push adc arpl or or (bad) jo sar pushl mov loop push leave lds scas andb cltd jne xchg jg sbb (bad) incl and insb jnp repz stos and (bad) sbb mov xchg fild mov (bad) sahf ror mov rcrb dec push scas lods cli data16 clc pop dec xlat into xor mov lcall ret fsub xchg rorb cmp cmc push jbe inc cmp negb (bad) or cld imul (bad) decl dec and jo jbe (bad) adc cwtl adc icebp aas lret sahf js inc loop inc add (bad) loopne push cs cli pop (bad) mov in ds jg mov xor add pop xor stos jbe sub inc dec dec je sub add scas stos or (bad) es pop fisubrl xchg imul xchg fxch aad sbb js hlt adc or out mov push cmovns add mov (bad) push xchg (bad) xchg dec jle loopne and mov xchg fidivr les mov add ret sbb mov adc (bad) jg test dec iret outsb hlt push (bad) mov push sbb aad (bad) decb in js mov jbe lret push (bad) mov pushf out mov xchg stc jg xchg inc mov call jo gs dec jae cmp nop outsb lcall (bad) jg ljmp dec (bad) push mov or add stos fld xor shlb outsb ds pop dec out jbe cmc inc adc loopne sbb sub (bad) jo jp mov (bad) mov imul loope add hlt lds imul test call aam dec cmpsl jmp xor pusha ja mov mov imul je,pn jg or push jno adc dec cwtl iret xchg repnz shll (bad) sarb xor and or push in cmp sub in das sar je inc rorb cmpl and xchg or outsl xchg adcl sub adc repnz push pop inc sbb mov pop inc push loope enter lret outsb hlt scas out lcall out loopne cmp das xor iret flds iret dec jmp sti cmp or ljmp test lcall xchg sbb cli pop lcall cmpb cs push icebp mov ficoml pop push cmp cmp xchg flds jbe jmp mov xchg pop sub jae add fidivr rcrb mov clc adc imul call dec pushf pop test or cli test arpl inc incl aam rcrb lods push outsb in or mov inc mov in push mov cwtl jg mov push adc cmp adc pop pusha or pop aad loopne subb ret fadds rcrb push clc enter insl inc shl (bad) incl mov call ss aaa es add loope cmp cld incl orl in rcr out or and subl ss mov or cmp stc xor sahf push mov loopne sub loope or xchg adc fcoml push sbbb gs popa leave add cmpsb lret test (bad) (bad) add int3 sysenter or fild ljmp cmp add into lcall jmp lods mov xlat add out jmp cwtl adc inc (bad) out bnd sbb aam stos xor fadds (bad) sbb mov or xchg add mov lock mov lcall inc sbb ss pop ret adc add add addr16 mov pop fsubl das (bad) mov xchg dec pusha nop dec mov (bad) shrd pushf pop cs mov pop sub mov out pop push mov movaps push test bound dec sbb int3 out lret lcall fwait repz add cmp mov push dec (bad) dec mov sub fcompl stos test lods mov or dec clc daa xchg ret decl call pop fldcw or mov cwtl mov cmp out add mov mov call jno add adc jns lock shrl add out int3 pop and (bad) lcall mov ret test mov sar sub stos pop inc (bad) push push and and loopne (bad) insl xor mov and sub and hlt fwait in cmpsb aam stos jo dec mov xchg mov dec icebp inc out in push pop xchg (bad) lahf sarb fistpl (bad) or rorb xchg adc andl sub mov pop imul pop imul fadd push rclb ret cwtl push jmp insb inc sub andb dec addb js xchg dec jbe loop ret add call push or sub (bad) sub (bad) mov mov add inc data16 lea push mov lods daa sub inc dec lret mov pop loope mov adc jbe and jae dec xchg (bad) push std inc pop mov pop xor mov jns fdivl xor mov pop stos add ret mov sbb loope push movsl fs pop fdivs push mov xlat sub cwtl insb jecxz mov movsl xchg pop mov (bad) fcomip add mov push dec push xchg aaa icebp ja push jne lds ret ljmp loop push and mov sub xchg inc stos and mov and add or mov sbb bound push addr16 or inc into or pusha sbb inc push cmp push lret mov pop cltd (bad) imul in mov pop aad and dec sbb add lods and push inc (bad) ja imul adcb adc stos inc test movsb xor ret pop (bad) jae mov jl lahf aaa loope pop ds fildll jbe sbb cmp sub dec push popf popf xchg lock repz xor les clc aaa cmp lods lcall mov hlt and push cmp bound and out add lock insl nop inc js data16 in mov stos xchg sbb movsb jne (bad) decl test icebp jns add jp adcl jmp push cmp data16 lods (bad) jg mov lea and push push dec xor mov nop and (bad) lds jg xlat dec jb mov loopne outsb mov push hlt scas les adc (bad) jl cmp imul rorl into aam pop subl pop jp cmp in dec push jl jg incb out in repnz cli ljmp mov aam sbb inc scas adc ljmp cld inc cmpl std mov mov in lock dec mov dec rcll push sbb pop sbb mov xor aam push jg popa xchg stos pop mov aam mov outsb inc jno xor mov movsb (bad) and jmp out fwait (bad) dec add or sbb pop cld jmp mov push mov outsb punpckhbw sub hlt pop inc push addr16 outsb xchg dec dec inc fisttpl aaa clc xchg and push js out jp mov fs mov push bound dec pop insb and add cmp (bad) outsl ljmp aad jg cmc or inc dec insb mov mov out iret movsb pop fstl inc movb pop mov int3 adc js sbb test push jl mov arpl push hlt adc cmp inc lea stos psubd shrb (bad) (bad) fldt and add icebp aaa in sbb dec hlt loopne fildll (bad) (bad) icebp lock cmp fstpt pop push mov ss shl jbe inc fnstcw xchg mov ss arpl add cmp add divl inc std sub cmp clc mov and (bad) dec fsqrt xor lahf sbb add ficompl stos mov ljmp lock push adcl aas inc mov cmp sub pushf sbb testl push sub (bad) mov hlt (bad) jg adc xchg dec shrl popa adc aas push popa add jne jecxz jle aad add loopne lahf jnp enter aam dec ljmp or fwait pop js mov insl loope mov jecxz into fsts add stos out jge mov add mov sbb push (bad) (bad) (bad) fnop pop inc lret mov mov adc orl push arpl cmp icebp fild add not iret call (bad) aad push mov inc stos or mov ss (bad) (bad) hlt scas cli or xchg insl mov ds xchg imul lcall aam inc popf addr16 stos sahf dec sti mov (bad) mov dec xchg lods rol clc mov mov or imul dec or arpl cmp arpl das stos (bad) call ret inc pushf inc ds enter inc mov roll add pop mov rorb push jbe cmp push call sti lods mov test lods repz popf sbb inc or js lods popa loopne dec es pop movsb jmp std and mov jnp nop scas add out add adc jg inc adc or shrb or cmovge push sub fs fs pushl sbb dec subl mov xchg cmpsb push (bad) (bad) (bad) jg or ret roll call std ljmp sub add xor cmp loope jg add lds mov mov aaa popa lahf test push sbb jg hlt fidivr aas jge (bad) jbe sahf lock lcall (bad) sti outsb test mov xchg sbb mov pop inc jle call and test and out fdivrs mov imul repz ss adc jle and pop push outsl data16 inc fsubl xor test dec sbb imul leave (bad) (bad) (bad) cmp jb mov mov loop or mov pushl mov iret aad add add outsb sbb stos hlt xchg fisub sahf fsubr xchg mov and mov sub je lock xlat mov or mov (bad) jmp int fmull push sbb in and xchg fbld and adcb fcmove inc xor xchg or les push loop hlt (bad) out ds jnp clc inc cli inc push mov inc cmpsb (bad) incl outsb xchg sahf push jge xor jle rcl jg cld dec inc mov sub xchg push dec lock lods fsts sub xor (bad) sub popa cmp dec sahf mov leave rcrl out sub mov jg push inc stc cli mov (bad) out xchg sub push dec fld1 inc jnp int3 ljmp pop hlt sti ss lock pop popf cs out xchg enter mov dec or or push and jns mov or pop sbb mov (bad) ljmp add adc inc or pop mov mov inc popf sub pop xchg mov sub cmp push mov cwtl jbe jg add iret in ljmp aaa push sub or arpl push outsb nop dec test pop mov push jbe xchg lss inc mov fstps cmp xor (bad) fisttpl sbb or rcl call mov sub add push fisttpl xor icebp pushl stos fcmovnu xor test push jg mov mov xor sahf popf push clc (bad) (bad) fxtract (bad) sti mov add lcall pushf fdivl xchg aad inc push in ret ds fimul scas and fisttpl sahf push clc rcr add out dec stos cmp cmp adc xchg mov cmp jecxz adc lds xor and xchg in add lods cmc dec in inc xchg fiadd push xor imul enter sbb jae aam sub sbb cwtl movsb cmc fisttp popf or xchg xchg or sub and shlb jns test mov scas sahf adc (bad) jg mov jmp add in adc stos cmp and cli popf inc fdivrl pop xchg sahf and sbb sahf jmp sub dec fldl2t incl and in loop das flds mov sub (bad) icebp sub icebp pop cld mov ss call aam add das mov push mov rcl dec mov jno insb outsb push push sub jbe xchg mov loop inc es lock mov test (bad) in add xor push orl sbb stos dec add ja imul into call jp into js (bad) add test or mulb dec push cmp jmp pop cmp cmp lahf int3 je mov xchg and clc add shrb jo sub dec xor mov mov jne gs subl inc dec jp mov sbb jg (bad) pop loop cmp mov popa add mov adc scas lahf enter aaa mov les mov inc fnop call inc lock push cmp mov sarb adc dec add lcall pop ficoml xchg aad (bad) std or adc or push jecxz iret aas xchg add call push push inc test leave decl les fsubl pop xchg sub pushf cmp and cli incl ljmp pop push adc outsb sub jmp adc repnz mov mov test ja push add mov adc or push mov inc xchg scas add and push lock je xor std scas sub daa insb inc nop insb cmp imul loopne scas cmpsl bound xchg jb sahf scas add mov xor dec lret dec (bad) lcall imul bound subl pop cmc outsb addl xchg ret jae jo pop or adc xor cmpb or daa decb (bad) arpl xchg loop inc popf insl (bad) xchg add and inc into pop call sbbb sbb add ficom std jmp sbb xlat lret xchg or inc (bad) pop and mov test rcrb cmpsb fidiv scas clc aaa ret ds add xchg add cld (bad) mov mov fwait pop and (bad) (bad) outsb ljmp add test ret call cmp sub (bad) je pop mov pop inc push jg or imul lretw leave cld jle jl inc cld fidivl and ss sub jg push lret lea cmp decl jbe mov inc mov cli int dec pop xchg jle mov fcoml jb rolb mov popf and sbb pushf movsl add outsl mov hlt (bad) (bad) jg jb dec cs ljmp movnti mov loop jmp sbb int3 xor xchg imul pop or in inc cmpsb ds fwait mov sub add xchg aam push sbb (bad) int test add fild sub je xchg mov pop pop mov cli (bad) mov cmp sub mov mov add xchg xor fisttp pop call cmp sbb movsl xchg push or (bad) dec addr16 test add lods hlt adc cld (bad) jg push push int3 dec sarl add xor sbb shl sub jmp mov testb jne fldenv xlat and out cli or outsb enter dec push cld (bad) or rolb sub mov ljmp je cmp scas push aas cmp fdivrp or lds out pushl mov sahf jb dec sbb pop add add decl dec scas in or ljmp dec cmpsb xchg cs or push arpl sub pop fwait mov sarl scas and fildll je mov push mov popa cmp addb mov rolb in inc sahf rcrb shlb movsb iret inc loop xchg xor cmp fist icebp push sbb sbb adc sbb adc scas test sbb jae jle jle decl test push aad outsl (bad) aaa add (bad) nop loop fldt rorb mov pop jmp pop dec jecxz in pop pop inc stos fiaddl inc fsubrl (bad) adc jle push out iret hlt dec or xchg xchg mov adc popf pop or mov sbb cmpsb jb mov sbb mov mov (bad) lcall notb mov pushf fs or jg test sbb push xor pop sub shl int sbb out add aam (bad) (bad) fildll incb adc lcall mov in jmp add sub add mov shr test movsb mov es (bad) jb hlt ljmp insl insb sarb pop sbb ret xor mov xor add call jmp dec mov dec mov outsb mov adc jg (bad) xor fwait cmpsb imul vpaddd mov (bad) xchg sub sbb call test jp xchg adc inc dec sarl test cmpsl xor lock loop cmpsl inc (bad) sti lods jnp aaa xchg mov data16 out call jl jp shrb dec imul je loop sti fisttpl add mov mov out mov (bad) fisubrl (bad) pushl lods idivl and int3 fldcw jp sub incl and cs pop arpl and fwait inc pop and sti push pop movsb xor inc fisttpl mov icebp fsubrs and stc stos lods add xchg add imul jo dec (bad) call movsb jno insl popf mov fdivl aad mov push fisubl decl mov cwtl sbb insb or or lods (bad) mov and sbb push enter and cmp (bad) cmp rorb mov xchg into add test fwait mov and sbb aam in shl jl cmp jge cmp (bad) pushl hlt jle jno pop mov in (bad) testb cld dec fs in mov mov jnp xchg push jg cs les add call dec dec sub cwtl js aam inc in jne xchg scas mov mov lods sbb pushf pusha cmp adc test rclb (bad) out adc and sarb mov bound decb daa out jmp pop or iret gs out mov sbb int3 mov ds and push popf mov ds mov decb dec das mov (bad) push cli ret add sbb xchg sbb mov push fistpll outsb adc ret jmp sub (bad) sub adc fild in cmc sub call in pop pop jp int cmp cli (bad) mov pop insl fcmovu nop ja and jmp xchg mov (bad) ljmp mov imul insb testb je pop adc sti rolb xchg xor decb pop cmp daa and mov jbe mov js fisubl and lds cmp pusha jae push or scas pop (bad) jge jg or sbb and aaa out xor fwait into (bad) lcall or movl and sub dec out add cmpsl sti dec pop lock mov add cmp jbe and imul das ja jne loop xor fadds cltd mov mov adcb (bad) cmp fimul ss xor jne aas and std pushl mov call or xchg pop push outsb sbb xchg insl add pop xor push sub sub ds bound push lods or ret xchg cmp pushl or repnz push mov sbb (bad) ljmp adc dec push cld icebp lret lds add xchg int3 adc sbbl jns push inc clc das push lret mov (bad) sar (bad) and push xchg insl adc movsl mov mov rcr inc and pop add or dec mov lcall add push sbb rorb fistpll inc das sbb push sbb mov and pop out lea push pop mov popf inc fdivrs push (bad) mov pop mov sar or movsl inc mov ret cmp lds rclb je (bad) loopne sbb (bad) add clc or incl mov add aam jl je cli pop std call cmpsl mov sbb xchg rorl sbb xor loope rolb out sbb inc xor or mov pop int3 push insl aas in popl cmp cmpsb fist add jg out aaa (bad) jge cli cmp cmp lcall iret sbb aaa adc aaa add pop (bad) and cmp sbb sub aam ljmp mov mov mov and pop test mov dec jbe (bad) decl out and and gs lock adc arpl add inc loop arpl ljmp sbb pushf jnp pop pusha or popa pop enter cld pop or (bad) push (bad) aad xchg lea pop mov push cmp outsb call jle cmp mov or je lods dec gs clc sti mov cs push js mov stos rcll rclb adc cmp push and cltd cld (bad) fildll notl cmp push orl aaa dec or or pop mov add pushf in cmpsb sub stos test out cli ret adc fcmovne push inc mov loope and mov pop pop inc push add and and je mov and mov mov xchg add (bad) into xor pop shlb add mov je fs loop (bad) (bad) lcall inc fiaddl jecxz es add (bad) insl cli inc inc insb mov (bad) lcall dec inc mov xchg xchg fnstcw mov add xor xchg sub inc inc mov xlat mov scas subl mov and add (bad) out push xor mov sbb aaa ret sub (bad) xor stos add xor cld ja test (bad) jno mov stos jo rol sub les test or repnz (bad) ljmp add test dec jne fist es add fbld push lea add add lea outsl add (bad) xor out xor add ds ret das pop (bad) ja add add dec or xchg ds adc sbb mov (bad) outsl int3 adc cmpsl xor addl cmpsb jne jmp xor js and and sbb sbb xor sarl pop cld shlb add repz test ror inc mov (bad) xchg fiaddl push rclb jae not testl sbb sbb cld cltd xchg push mov roll xchg sbb xor pop fs xor and xor pop pop sub sbb lret push in push pop sub pop xor cmpb cmp pop add add ljmp jmp shlb mov cmp inc cs rdtsc push pop or (bad) in jecxz xchg fimul adc mov (bad) loope lds (bad) adc and lock push call rcrb adc pop loop or outsb adc lods in in and fidivl call gs fcomip lcall adc sbbb xorb mov rclb fs test xor jbe cli aad aaa fwait loop rcrb cwtl (bad) inc cmp xorps mov adc lcall (bad) fild add repnz arpl jo daa mov or push add and stc lret adc dec cli or sbb ja jbe dec adc insl (bad) mov mov mov bound dec push or aaa pushf inc cmp sahf and rcrb test cmp cltd mov fistpl mov cmp jb add ret in and das and cmp push cld pop outsl clc sub pop xchg icebp jg and add call jnp sub call dec cld aam jge addl add fwait cmc mov loop insb dec mov sahf gs inc sbb fimul sub fwait push rorb pop sbb (bad) jg inc lcall push stos inc sbb fbld dec xlat loop pop insl push xor or mov mov jae psubusw mov aaa test cmp sbb mov outsb mov movsl dec jmp mov lcall xchg cld sarb (bad) fbstp dec mov divl jns lea data16 cltd mov mov fiadd add adc sti xlat mov pop mov adc out or test sbb and (bad) (bad) jg xor xor inc ss dec (bad) popf xor mov add sub mov shr outsl insb (bad) repz cmpsb mov std outsl sahf push mov sub call mov es push add jle jle and out adc jbe add scas add mov into out xchg sub sbb fcmovne decb out aam dec cmpl les dec adc daa or xor int3 ss jae (bad) fstpt jp daa insl xorl mov dec movsl or cli mov int cmp push call (bad) in and cmp aam pop call cmc sbb outsb push inc sbb adc dec loop inc or sub rorl or mul ret mov dec (bad) cmp (bad) fstl xor in cmpsb aad mov cmp rorb dec cltd into cwtl sbb (bad) fwait (bad) aaa push or rcr aad jns push jmp xor stc pop bound pop xor fnsave mov jne mov mov cld mov divl insl sub and mov pop arpl popa add fwait xchg in pop add sbb or sbb hlt sbb (bad) inc orl push ret fiadd dec mov add (bad) test (bad) jmp sbb stc mov push ja int les (bad) ss push inc incb negb and (bad) frstor sti cs jo pop pushf or sti bound or push inc fidivl push mov pop (bad) popf xchg outsl fldl push xor imull xchg cmp mov push shl (bad) clc jmp sbb add add mov sub push cld mov les lock test daa add and xor mov pop sbb cs in inc repz add dec cld lahf mov pop xor cmpl sub decl les inc mov popf cmp lcall mov add int3 lods out orb pusha jmp sbb xor inc andb pop mov divb cmp popf decb (bad) (bad) mov sahf jbe int fsubp orb mov jp jo inc out mov and inc mov cmpsb fcomip fnstcw (bad) out iret insb adc into enter aad orb pop xlat (bad) call aam cmc fdivr addr16 test cwtl cmc mov int sar mov inc stc sbb fstps mov mov or sub mov cmp rcpps sbb jmp xchg movsl aad lods imul mov cli aam dec outsl (bad) jmp jp stos notb jg inc decl jge inc mov sbb pop mov (bad) xlat sbb pushf es pop gs in jae int lds es jo push dec sbb ret or xchg xor bound inc (bad) (bad) jg dec push pop jne clc div in sbb mov (bad) or mov imul ljmp mov and or inc pop (bad) pushl (bad) adc je add dec cmpsb sbb dec pop jg inc cld decl pop aad cltd fnsave (bad) addr16 frstor fnstenv jno jle insb rcrb xchg and hlt and int jg pop sub xor xor push pushf inc cmovno (bad) adc sbb push or insl in cld scas and fild and sub aad into add loopne jp xchg push mov mov es loopne nop pop or inc int mov stos add loope cmpxchg insb ret imul mov push adc dec mov aas (bad) (bad) frstor pushf sbbl sbb out clc aaa mov sbb mov and adc and jg dec mov push jb mov fs decl push and xchg mov lcall shrb mov mov mov cwtl or (bad) js mov iret xchg add incl testb getsec inc push pusha loop inc mov cmp xor pop fwait inc fisubr mov daa xchg scas add (bad) std fmull pop jecxz fwait inc fstps push mov mov mov mov sub lock fiadd adc cli push lret mov or out loope push xchg adc daa cmp fbstp or sub jns lret pop inc in cli lret push (bad) outsb into push pushf icebp outsb clc mov sub adc jle fistp cwtl add cmpsb lret or mov pop fsubrl les call jbe pop mov mov sub insl ficom pop jne or loope sbb sarb jnp cli push lcall (bad) mov pop (bad) roll mov mov sbb (bad) outsl mov xor aaa ret rcrb sbb enter xor jmp push adc sub lcall outsb cmp push xchg test fwait and pop add sahf rcr call cmp icebp jmp or mov ss xchg push mov icebp add cmp stc sbb adc hlt mov lcall or or loope addl sbb adc sar push or cmpsl je shlb sbb loope or or and cmp adc (bad) mov and aas mulb aas inc sub test cmp inc adc jg mov in inc out fidivl fsts sub fnstenv (bad) inc adc imul test lea add pop add out lcall in icebp inc mov lds nop fdivrl cmp es pushl add inc add fidiv insb shlb (bad) pop and jmp call les dec cmp dec adc cli push imul sbb xor mov gs test mov sbb stc add ss loop sbb fcmovnbe fbld (bad) xor test add ror mov mov and inc push cmp adc dec adc add push fsts xchg xchg cmp adc add cmp pop xor pop lods sbb (bad) cld inc mulb clc insl inc pop xchg pushf sbb nop (bad) cmp lret xchg or mov (bad) mov or sbb nop dec (bad) vpcmpgtb bsf and add add push cmp loopne xchg mov insb xor call (bad) decb sbb mov inc (bad) hlt push lea adc jns adc decb sbb mov out and (bad) and orl adc mov jae fwait add dec into add lcall cmp fcmovnbe or movsl es fwait das movsb movsl ja dec leave ret popa add rorl call pop clc jae inc adc jge lahf mov lods subl xor push fdiv call push mov dec add push test lods subb lret loopne sahf clc jg incl add scas pop (bad) pop fstpl mov xor push jmp mov shlb fldt dec (bad) fbld fwait inc lcall adc sub fiaddl mov pop push pop mov fs sbb (bad) out (bad) testl mov xchg xchg pushf jl dec clc pop push push loop cmpsl add and inc sti adcl cs js pop hlt inc dec add sbb push out xchg lcall mov jnp jle nop inc dec mov movsl push push and (bad) clc push imul es push repz mov sarb sbb lods lods mov inc ljmp movsb icebp aas hlt cmpsb jae add negl ss inc stos (bad) pop sbb adc adc pop pop insb call jae xchg iret xchg je out sbb add sbb test (bad) pushl ret pushf xor mov mov add shlb and (bad) pushl mov rcl mov mov ljmp add lret xchg testb (bad) or and inc (bad) (bad) (bad) call loope xor aam enter dec mov push cltd mov cmp or push dec les idiv (bad) rcll push cmpl jnp mov je xchg mov pop sbb mov lahf mov sbb (bad) xchg out xlat ret jo lret aaa movsb mov cmpsb nop (bad) data16 push test loopne (bad) jg mov jg mov push clc inc jbe (bad) lret mov imul and insb mov mov jp and sub cli ja push jo sub inc cmp push loope pop adc popf test cld push fadds scas xor mov scas jae insb dec rcr push push int jg pusha in mov dec bound ljmp stos push sahf mov push or inc xchg pop fucomp cli sub push lods iret pop add das test lea push push stos jno bound xchg repnz sub cmp push xorl je push loop push push aas ret cmp xorb out xor hlt add push ljmp sbb dec lahf pushf sub stos mov sub lret nop (bad) cmpsb dec push test jo movsb in mov ss sbb mov push adc mov jo or lret (bad) jg movsl into jbe mov cmp (bad) sbb imulb pop mov or ss cmpsl fstl pop shld scas mov fistl push push mov jae decl mov sar ret sbb add jle movsb adc ret jp pusha jno dec (bad) (bad) lcall fisub imul insl scas dec stc sbbl adc xchg addr16 and test sub (bad) sarb test clc sbb daa jge sbb (bad) mov xchg arpl std xor inc xchg push arpl call mov mov xor push mov cmp pop jbe dec mov pop loop cmp pop cmc insl std xchg or mov (bad) (bad) or mov nop dec or sbb adc (bad) xchg push cli push xchg dec and mov in dec pop cltd xor cmp out insb bound inc (bad) loope push clc (bad) lcall clc fisttpl or call xor in sub inc inc xchg (bad) and ja shrb xor fcompl popa loope mov jbe test inc jle int3 nop jle add faddl aaa or out mov jg flds sbb in pop cmpl aas adc sub and mov cmp or xchg jno ja jns je add add ljmp xor xchg es scas call xchg notb add ljmp xor add movsb aas adc jmp mov out adc and rclb push test jg inc fstl inc cmpsl popa push out dec mov jmp xor push iret mov ret push out xor jae icebp scas add dec xchg cli iret lds pop mov test lret (bad) jg mov cwtl adc sahf hlt push xchg stc int and or jmp (bad) xchg jg stos icebp aad inc jge or push adc xchg mov jno mov rcrb lea outsb call lahf xchg mov add sub mov (bad) jg inc or call pop jno push or imul (bad) fisttp jg sub dec leave shl jle mov inc jmp scas inc xchg je outsb adc jle push not mov jbe ja ret nop repz (bad) (bad) sub decl jns out jo stos or std inc mov push ljmp leave icebp (bad) mov cmpsl in loopne popa sti and dec cmp outsb xor dec dec xchg into and call or insl rcrl nop push adc add cld lods push rorb clc or cmp notl add call decl or sahf xchg xchg mov push jno pop int3 scas dec mov mov (bad) call (bad) and inc mov sbb std (bad) mov jne and test pop sarb gs int3 out in clc mov mov shll hlt rcll jg or decl cmpsl inc ja and mov push jae call cli jp pop mov mov lcall or call or (bad) lcall adc push add pop (bad) loop mov mov (bad) (bad) (bad) call fidivr cmp xor jmp mov addb nop rcrb test decl faddl dec sub imul mov jne mov xchg pop xor inc add cmp and jg sub and cmp lret cltd or inc push mov xor xchg push ret add test pop inc push cmpl pop inc push mov jg fs imul iret xor xor into dec push incl aam xlat cmp cwtl pop aam add pop sbb jg pop sarb mov lock fcompl lea xchg es (bad) outsl js call aaa or ret ja ljmp inc add outsl xor ljmp lret ljmp rorl dec and mov clc das mov dec inc repnz call std sbb imul nop hlt mov mov adc push sub inc push mov xor (bad) (bad) fldt stos add adc mov mov add popa mov mov lds jmp mov fdivl xor ljmp pminub addr16 xor int3 sbb cmpsb xchg and stos jbe push fiadd mov (bad) jg xchg mov cmp push mov jg hlt pop add or cld addl fadds dec sub inc (bad) mov jg clc popl dec or jo (bad) ljmp pop inc pop sbb insl cmp aaa mov mov or sub or mov xor cli (bad) lcall std inc mov adc les fs out xor jl mov mov data16 pop add jo cmpsb cmp xor pop cli test popa pop dec inc sbb adc sub pop jmp dec cmpsb out push les mov push add mov call fsubs or fsubp inc loopne rclb mov and decl in out and je repnz mull cld mov lods cmp mov ss push add jbe movsl mov (bad) stos in jmp popa push mov or sbb cld popl pop mov ficom push inc cmp repnz and jp ja push adc das mov cmp aaa mov dec rolb jo clc inc xor add xor jg sub mov leave xchg cmp jp xor lds ljmp arpl xor loope xor faddl push xor add or sbb rolb mov gs mov loop,pt sarl xor mov (bad) pop mov scas nop test iret push repnz mov into mov mov add and outsl aas pop add mov and imul dec stc mov pop je hlt in ret push xor add in mov pusha jle ja xor jno xor cld lcall push xchg mov or or ja mov inc or push hlt sbb out in loopne push push dec mov daa push add jp subl cmpsb scas add adc stos aam xor mov je cmpsl or fld or daa or push scas xor jbe sbb mov mov xchg push outsb inc fistpll mov mov sbb sbb or and ror shlb pushl sahf popa add insb sub sbbl sbb test fnop and or test call and mov cmp pusha xchg aad inc faddl add es push rcr (bad) or cli jg les xchg jle out outsb shrb ret cmpsb xor les pop ret ljmp inc adc aam cltd aad sub add jp fsubs (bad) ljmp push inc mov in add les mov cmp addr16 mov stos (bad) or in out call arpl clc fldcw cli push dec push dec cmp repnz pop cmc inc adc jl mov mov add mov pop mov lret mov mov aas rorb call cmp out fstpl mov sbb jnp mov sbb xchg bound xor lea (bad) test (bad) in (bad) xchg (bad) (bad) mov xchg loop call push fwait fwait cmp loop cmpsb mov outsb or or fs add jno mov (bad) pop pop push outsb mov pop add mov icebp inc aas jne (bad) fild (bad) dec sbbb and fdivs xchg mov dec xchg fs icebp dec sbb cmpsb push adc inc es in repnz loop test out push and ds aaa pusha inc xor mov push and add jb or andl enter and imul sbb inc movsb pop outsb leave xchg dec add sub test pop pusha test rclb movsl cmp pop or outsl mov test and loope cmp xchg shrb pop lcall in leave mov enter mov add stos (bad) call mov pop push add movsb int std mov jge inc lock movsb fmull jns fist dec cmp cmp mov insb mov lds pop add xchg adc arpl mov or xchg xor jg mov imul lret cmpsl mov movsl adc dec cwtl fs push imul ljmp pushw call cmc inc cmpsl lret pop xchg inc add pop call fild mov xchg inc ljmp outsl daa add lods (bad) pop jmp add mov mov mov int3 mov push push rcrl icebp cmpsb lea data16 pusha cltd mov sub rolb dec rorl rorl push jecxz xor mov out and or repnz loope mov mov int3 and fcoms mov out repnz inc mov or add addr16 mov adc xchg shll dec addb mov adc fildll psllw out enter lcall jge (bad) jg in pop cli ljmp xchg dec ret divb adc out and rcrb cmp cld sub jne inc xchg lea ss test jb mov std decl sub popl out push jg lcall mov scas adc add adc push inc call or add outsb mov aaa fldl xchg (bad) (bad) ljmp pop aaa and jbe,pn data16 mov (bad) out xchg lock push mov jae or sti fildl and jecxz cltd push jo sbb xchg (bad) jg adc outsb (bad) fimull xlat add push adc cmp mov pop fs mov call hlt lret lcall xor xor aaa je jne cwtl sbb je dec fidivl loop fiaddl dec push jne sbb inc pop clc testb loop or add add xchg sub (bad) adc mov pop or mov (bad) and jbe lods mov (bad) jns jmp das adc in jecxz (bad) stos push sbb xchg pushw inc xor es outsl movsb into insl leave jbe lea mov pushl daa aas lods (bad) jne adc data16 push add sbb lret call sub push ljmp fwait inc jo push inc insl sbb mov and outsl push rcrb xor and adc xor in xchg dec mov mov fmull jb cmpsb iret jae sbb std dec pop sbb arpl sub sub push push repnz and (bad) call xlat mov pop inc ficom pop test clc test stos out mov fwait jecxz push cld popf shr ret mov mov into add call sbb call ss jbe dec mov or pushl mov pop addl dec cld fst jg stos jbe xchg sahf sbb jnp popa mov decl jae sub pop ret fldt sti add add push jmp test or mov pop mov ss cmpsb dec clc pop inc inc mov lods sub fldt sar lods sub sub fild sub pop fistpll lcall (bad) arpl sbb ror inc fildll bound imul fs sub ljmp cmc stos ret jmp std cli pop popa std cwtl outsb sub jl cmpsb pushf jmp pop into in jmp jbe sbb or mov hlt dec insl cmp (bad) lea pop cmp (bad) pop dec dec push std call ret shrb adc stos insb mov loop bound mov mov stos icebp ja aam fwait push push pop mov fsubs out xchg mov aaa dec or pop leave lods ret faddl or adc ljmp andb cmpsl int xor adc (bad) mov mov not test mov ljmp inc ret mov sub arpl pop or (bad) jg inc (bad) fwait jno pop jbe jno shrb ficoml out dec mov adc xchg shrl mov jne pop add pushf and inc (bad) pushl push movsb dec inc hlt fs imul aaa inc movsb pop xchg testl jbe rcll push push dec dec mov sbb pushf push inc adcl cmp outsl (bad) call adc test jp movsb sbb outsb gs dec (bad) loop sbb ror sahf jge or pop cmp (bad) clc jne pop ret cmp (bad) aaa jl into (bad) push dec pop dec dec mov outsl mov incb mov add mov and ret mov push mov jns nop cmp xor call ret jbe sub cmpsl and jge jo sar inc add jle,pn in push push ret mov pop xor stc mov ljmp jecxz imul push gs lea mov fbld or jge call call mov add ficompl cmp mov insl and loop popa add scas mov in xorl mov test push cmp or xorl lods fldcw or mov lret faddp or add xchg movsb sbb bound push mov push ljmp testl movsb rorb push pop out rcr dec adc mov mov add fbstp push mov hlt jns xchg shlb jecxz mov xchg jo pop xor adc incl out (bad) loop add aas stos enter or or scas jb or cs mov insb cltd add adc outsl push and xor mov mov mov pop popa inc push pop cmp call push js test lret faddl push pusha inc add leave add fbld inc lcall and and lock mov aas or add cmp cs inc (bad) mov (bad) lcall inc pop int cmpl je jp pop fiadd add rcl and mov xchg mov ds add push ss int3 cmp xchg int sub jl sbb outsb repz mov adc sbb xchg test and pop jmp std (bad) popf inc lret inc aad dec adc popf push dec push (bad) mov les jo pushf lret imul cmpl (bad) push or loopne outsl in rclb sti mov mov rcrb sbb les test lret ror push jne lods ja sub and clc push cli ficom movsl jge (bad) pop adc mov dec mov sarl jno loopne add or mov pop cltd mov fs (bad) ret push cli cmc mov jbe inc jmp lcall cs push sbbb cmpb xor sub scas stos xor sub (bad) sbb fcoml sub mov idiv (bad) mov test dec les andl push sub mov mov jo call fildll sbb sub xchg (bad) add cmp lods ret imul push mov and je sbb push lods (bad) (bad) call lods shrb dec clc push inc popf or pushf testb xchg js cmpl stc out clc aaa fisubl inc lea pop ffreep and lcall test add ss ja enter fiadd jno mov inc mov lret movsl mov pop push fs mov stos (bad) (bad) les sbb or decl add mov clc fcmovu inc push jne adc add (bad) call add mov or (bad) out cmc adc jbe daa nop or (bad) fild loopne aad inc or jae pop cmp add xlat add (bad) daa mov (bad) cli outsl push pop icebp outsl or insb add xor sbb fnop xor add hlt (bad) pushl mov inc in push sbb ja fwait add inc mov xchg fwait adc sahf int3 mov mov outsl ljmp int aas adc ret and lret xchg sub mov jb push jmp push in (bad) idivb (bad) cmp call shrb adc inc pop in push (bad) (bad) mov and sub add mov adc push ss cmp sahf mov sbb pop add add mov test jnp leave cld cli sub ljmp or push psubb or cmpsl pop dec mov cld cltd sarb popf sub aas xchg mov (bad) out jmp or in dec test cwtl cmpsl pop aas or in movsb popa mov (bad) out jb and outsb nop push xchg push cmp (bad) add in andl cmpsb mov or fistpll inc repnz dec das out push add nop cmp sbb dec and or (bad) dec sub jge (bad) jb in test sub jg mov (bad) fcmovb (bad) jg popa adc cmp adc dec aas loop sbb or stos push add (bad) and incl fldz pop fwait mov push push ja sar movq int sbb movsb inc inc loopne inc cli dec fidivl (bad) mov xor jle lods or pop pop aam pushl jne enter inc jne jp pusha fisub movsb mov fmuls stc out adc jge mov push cli pushl les outsl mov incl mov xor mov dec xor (bad) cld lcall pop cmp sbb cwtl outsb out inc (bad) dec add int3 (bad) mov mov fldt xchg mov (bad) pop dec in jbe shr jle cmc add clc mov pop mov sbb push inc jp lahf xor addr16 pop cmpsb jno cld fisubr std mov jo ds cmp ljmp ror jle xor scas sbb movhps xchg pop aam sbb call loop jo sarl lret add scas fsubs les dec mov loope inc popa sbb fisttp rorb fwait mov cwtl data16 xor (bad) call cmp mov and lock fs mov jle ja sar test push or adcb sarb jle arpl repnz adc dec mov rcll cmp mov mov aas (bad) jg pop and or xchg mov stc (bad) jns pop push in stos sar das rcr mov shrl dec lret rol fadds add xchg mov shll ljmp jno ror add dec and or scas cltd jg mov pop (bad) dec out (bad) fs test xchg sub das add adc movsb lock (bad) cmpsl sbb (bad) jmp cli adc popa shl popa lret pop mov ljmp push xor inc sbb jnp adc or xchg out cwtl cmp mov mov fdiv sub fwait inc mov outsl add outsl mov test mov pop in lods jg (bad) and dec dec loop pop insl jo mov xchg movsb jle jl call or sbb inc inc jg iret sbb aaa inc es out fisubrl mov pop mov mov pop in mov xor insl aad lock rcrb sbbb sub mov xchg inc imul xor outsb pop cltd add xchg andb (bad) mov jg add out xchg leave sub lcall add (bad) or lods popf push addr16 pop lock pushl fcomip sbb dec and lock or and xchg push (bad) ja xor lea xor cld mov cmp inc xor jp hlt mov mov data16 cmc mov std (bad) out subb icebp fwait dec sbbb outsb aas aam inc mov cmp sbb xchg popf xchg mov add adc in les les fsincos sbb cmc jg fs and out ret push jno loope das ljmp and pop lea mov fadd cmovb xchg jo pushf mov lahf cmp pop or (bad) dec fisubrl dec (bad) push push test imul mov inc xor xor mov daa cmp mov adc adc add push in insl notb sub movsl push lea xor inc mov mov pop sub incl mov fcmovu enter fistp and push mov sbb test loopne xchg cmpsb daa mov add jo mov adc mov mov sarl push lock xchg inc xor xor cltd dec es jmp sub cltd (bad) es daa test loopne mov mov cmpsl (bad) jg inc mov aam xor mov sub test xor shll sbb call sub pushaw or cld jne add and adc adc in dec push rclb (bad) (bad) jmp jo mov pop cld jle daa shrl fisubl (bad) cs je sub mov lock cld je jbe fs (bad) call push cmp mov jae xchg and mov pop xchg dec adc sub (bad) fcomip aad call adc mov jecxz xchg or lods mov lock pop enter mov test lcall or sub add incl mov insb rcl push fs mov push or or jmp mov (bad) incl sbbl sti add push inc outsb mov ljmp outsb cmp sbb and test movsb lods inc cmp mov lods xchg adc xor gs pop add rolb nop jno daa adc mov sbb xchg or (bad) jg out inc add sti mov add (bad) sbb push mov mov sbb jg dec inc dec in cmp jb push push in movsl add adc push into inc bound cmp inc sub outsl mov mov leave add loopne lret cld daa cmc and fisttpl cmp and dec test cmc sahf pusha std (bad) fucomip into and push xor jno add jo dec pop decl and or or mov mov outsb sbb jmp pop fbstp (bad) mov mov push mov aaa and cmpxchg movl mov mov jns cmp lods sbb push sbb pop rorb rcll mov inc loope jns (bad) pop add add loope shrl add xor outsb mov add push push xor adc jae scas insb cmpsb test push cmp fs dec dec stos sub jo mov lock sub orb jb lcall rcll pop add adc clc push sbb mov jg (bad) mov subb xchg aam mov js pop aam or and mov loop inc xchg int3 add (bad) in cmp mov xchg clc loop fwait jnp cs pop pusha push pop mov inc or test fisttpl push add pop (bad) ja cmp faddl add add pop add sbb mov mov arpl cmp out cli in call dec cmp xchg dec xor sbb icebp std dec call mov fisttpll xchg dec sti das clc mov leave pop or movsl mov cmp push fdivl jmp push test xchg pop xor cld cs movsl sahf rolb jg int3 adc out push fbstp mov mov les imul lret inc adc lock lock jo dec aad sarl push adc dec loopne dec loopne js pop (bad) jbe mov xchg adcl push or or jl lds test dec push fdivs imul dec call insl push inc and push mov fcompl das je mov and xchg (bad) jmp push ret and inc lods call addb xor fbld pop es lea push mov test bound xchg xor fmuls call inc mov bound push roll add cmpsb (bad) incl das jbe es sub pop out ret loop fisubrl and lret add in push dec or jae pop sub nop ror sub cli es jbe and mov clc sbb iret pop lock movsb (bad) jg cmpsb pop adc dec leave iret int3 cmp dec mov hlt jle es repz test leave add sbbl add das loopne push cmp icebp push lahf icebp fstl icebp mov out loop sbb std sbb pop inc xchg push sbb (bad) lcall imul cmp pop inc cmpsb dec dec push loope add cpuid divl inc jbe jno mov idiv (bad) out clc mov fnstsw xchg fstpt cltd jo fwait (bad) mov enter mov push mov mov push or xchg mov mov dec or jl push mov bound dec aad mov cld cmp sbb mov (bad) jg popa mov es adc adc rolb movb pminsw ja push adc ficoml add push sbb negb mov push aam inc cmp shrl mov push daa fcmovb mov or push cmpsl cmpl sub xor sarb aaa fcmovbe out pop mov jle mov jbe and scas push add push and out jnp (bad) ss scas loope or fwait push sub out mulb test lods push jnp mov inc scas xchg or sbb jmp adc jle aas data16 cmp call fldcw dec mov and movsb push push mov xchg dec adc cwtl fwait (bad) call push add push dec jbe std or cmp pop mov pop dec sbb mov add or jmp cmp popa cmc or push mov and clc mov add addr16 push add xchg pop push int hlt fild loope imul loop adc stos dec lret mov and outsb inc aam (bad) scas scas fimull loopne sub dec mov int (bad) ljmp fs cmpsb icebp test dec cmp xchg add outsl adc enter and dec xchg mov xchg xchg mov or mov pusha push rcr icebp mov arpl neg pop je insl sbb nop dec dec inc xchg mov (bad) (bad) call clc dec movsb insl jecxz and pop icebp add push inc pusha faddl pusha movsl lods xor jbe sbb lods pop je mov or mov out cltd xor and test pop xchg roll push jb add lret inc mov add add les ljmp sbb fst jecxz jne scas xor in mov pop add sub mov insl mov mov pop pop movsb xchg clc scas and int lcall or pop test (bad) loope mov data16 add in cli dec and mov jmp jo push loop add lds jl mov repz lahf add lods (bad) mov fdivrp or mov jmp cli lcall pop imul mov mov inc sbb push in in pop popa rorb aam push (bad) (bad) ljmp jmp outsb sub or popf nop test mov xor or adc xchg outsb jecxz jg dec push push (bad) loop push fstl sbb push (bad) aaa adc iret jl push enter mov (bad) mov in loop mov mov sub rcrb test or fisub mov mov add popf jp adc push push inc sub or mov (bad) (bad) in sub add std mov sbb mov add push inc xor xlat lods adc inc mov cs (bad) incl inc jne int3 (bad) aas andnps push movsl push aam (bad) js loopne and ja rclb or xchg and (bad) out xchg movsl push addl xchg int3 gs mov pop (bad) pusha pop outsb and adc call ja add mov jb adc jg stos outsb add ljmp cwtl adc and cli inc fstpt rcl mov mov addr16 and jne lds int std mov popa shrb (bad) (bad) mov popa or out cmp cmp cld or (bad) incl add lods fcoml mov adc nop mov fwait mov dec into cmp xor outsl in dec fs ja mov sub and decl pusha je dec pusha mov fnop and in pslld jg add and test pop cmovs cmp fidivr mov imulb ljmp lods jle pop call loopne jl xor inc jbe (bad) sbb sbb outsl dec aam sbb and jbe add push nop ljmp (bad) les loop dec notl test cwtl pop cld fwait and les sbb ja inc insb mov inc jp jo ljmp inc (bad) push imul mov call lret int3 pop popa mov adc xchg (bad) lcall stos aam ret imul in loop or xchg js cltd cmp mov jg scas dec or push inc cwtl jb cmpsb data16 xchg iret (bad) mov aam adc pop aad push xchg faddl and jecxz or inc sbb dec mov lods popa (bad) ja aam popa xchg or mov aad clc ja enter push jg (bad) (bad) (bad) pushl jp lea push cmpsl jecxz push and add pop lds or mov into rclb ficom sbb addl inc cmp inc push xorl (bad) imul mov imul push insb xchg and inc cld imul rcr mov test rcll (bad) mov mov adc xor xchg les and push insb xchg xchg sub push sbb xchg (bad) jae pop xchg push add call rorl xchg xor aas clc jb fsts pop adc lock js insl jb dec rolb les cs (bad) dec loop fs lods arpl add cmp cmp pop jg add inc je arpl inc add outsl movsb sahf pop inc aam (bad) pop push xorb or sub jo sbb push jnp push push jno mov sbb les je xor lret cli push sarb inc inc cltd cwtl sar push (bad) jne or andl fwait mov faddl in cs adc dec (bad) sbb fsts xorl rcll les clc decl es aaa add mov cld or mov jae cli ljmp nop xor inc push imul les xchg and cltd call (bad) adc lcall jae and fmull push test push orl mov enter xchg cmp and (bad) mov sub or push fwait or jne pop psubusw adc push mov incl mov cmpsl pop hlt jno or jmp pop loop or cmp (bad) jg (bad) pop cmp out add cmp xor or adc pop sbbb inc adc push adc push sbb mov jno (bad) call add mov pusha outsb fwait mov mov adc ret adc cmp lret pop in push movsl pop loopne js (bad) das cli or (bad) cmp jbe sbbl js aad or mov mov mov sub xchg xchg adc push cld push mov xchg mov and shrb data16 test scas test incl adc lret add (bad) sbb mov into sub outsl xor xor mov jb mov mov mov inc mov daa sub sub adc imul sahf and pop into pop cltd ja mov pop in rcrb dec into (bad) daa jge mov lock pop pushl fcomps inc notl mov (bad) mov shll push insl mov pop test push add jecxz xchg aam mov mov ja ret clc lods fbstp fsubrs and ja mov add sarb xor ljmp jae subl xlat fisttpl ss sbb (bad) sub lcall subb add test dec mov inc (bad) fld out xchg mov das jae mov mov xchg arpl and lds movsl pop sbb das and sbb push movl add (bad) cld sub das xor mov ja cmp or ja out xchg cmp sbb xor lret adc outsl imul adc lcall stos mov mov lsl ficompl inc mov test dec scas in loop pop cld jg inc sub inc fistpll pusha xor lock dec mov (bad) (bad) fbld cmp or stos dec pop push hlt add dec mov jb cld mov movsb ja pop popa rorb jbe in in insl pop test les sub pusha mov add loopne (bad) (bad) out incb cmp dec cmpsb jmp iret and and pushf das std xor or mov xor popf rol movsb fsubrs xorl mov sbb int3 sbb loopne in cltd mov mov cli das test mov ja lcall hlt dec sbb push loopne dec out inc dec ljmp sbb xchg inc mov add (bad) push mov xor dec inc push repnz dec clc lcall mov push jg inc and sub and sub push sahf pop fnstcw mov or cmp lods ror nop (bad) or (bad) fidiv jp fcomp dec je xor xor pop icebp (bad) lcall jle mov lret pop sbb pop fwait pop push inc inc iret lret jl pop fs ret adcb fiadd (bad) xor icebp fs es xchg inc jl mov hlt shlb pop push or xchg ret cs dec xchg nop and decl sbb in fbstp adc dec inc into aad lret mov mov xchg js cli test aad cmc sahf out addb cmp inc addl sbb xor inc aaa std fbld clc push pop lret lds add mov add jae jle cmc outsl cwtl push cmp dec mov lcall add lcall sbb bswap adc or hlt mov fcmovne pop cld lcall shlb add or sub (bad) (bad) mov clc dec mov outsb cmc add (bad) mov and pop daa nop (bad) inc and das sar push (bad) xchg ja rol lea xor cmc mov jne dec sahf ja sbb or stc in int3 ret fisubl outsb mov (bad) fldl mov popf rorb add sbb ss lods scas jo dec mov add xchg (bad) jmp (bad) (bad) outsb adc adc fwait mov imulb adcl push test lea call lea cli nop fdivrp (bad) (bad) (bad) clc sub inc sbb enter jecxz pop sbb idivb add dec cwtl dec pop dec icebp les movsb decl aad jne out frstor mov (bad) (bad) jmp (bad) cmp xor jle push les jae fldt sub xchg inc dec scas dec aad dec lea dec lcall or add movsl mov cmp and cmp cli insb add xor aaa mov sarb dec cld sbb outsl xor add ficompl fldln2 xchg cwtl fwait jle dec mov sub sub adc mov sti aam xor ja sarb aas (bad) jbe fild dec mov stos addr16 nop and lcall rcrb icebp add or dec dec add subl pop outsb xchg loopne xor jae fadd mov adc or fs push push and mov iret shrl mov push rol jno out dec ret movsl xor lret xchg and and xor into in imul imul fdiv fwait in mov sti push lcall js dec cmp test jp int add (bad) cmp adc mov test sub addr16 xlat dec push cmpsb xor pop and pop scas adc (bad) mov adc adc lcall int3 enter aad jne (bad) jp jg add pop lods pushf addr16 js ret insl push ljmp sbb push add inc or divb pop cld aaa adc (bad) imul cmp sub push je and dec mov fistl adc cld test fsubs (bad) pop pop mov dec test lock call bound xchg mov (bad) dec jnp rcrl mov ljmp push xchg jne (bad) pushl or rolb aaa adc cmp adc mov xchg jmp ret cltd push jb ret (bad) jg add and jp jg xor adc xchg push cmpsl jnp mov jg mov stc ficom iret stos roll repnz lret out xchg mov (bad) jb (bad) mov push xor loopne xor les jle aad xchg subb loope outsb xchg sbb aaa rolb inc xchg mulb jp or sbb adc (bad) (bad) incl jb fiaddl popf mov lds cltd out daa xchg add push movsb sarb jle dec scas ss jg mov or lock and mov jo call or call mov dec ljmp xor inc mov add mov ljmp loopne jno push loop in xor ss fimull aad jle call dec mov mov (bad) lea fidivrl int jle ljmp inc dec lcall mov and dec adc insb arpl lea or call test sar push clc lcall inc into cmp xor mov or dec or and faddl outsb mov loope pop xchg lcall mov or adcl scas mov dec scas dec scas stos (bad) arpl jnp loopne aam mov jecxz xchg mov pop and mov and in fcmovnb adc inc call xor loope and (bad) ret test outsb xchg cmpsl and icebp and mov imul (bad) cmp stos push sbb push mov dec loop jo movsl and or cmp repnz xchg or rcrl cli out mov lods inc sbb imul fwait decb mov or test pop daa push (bad) push clc mov cli fiadd int3 mov add adc sarb jne mov andb add popf sbb lret notl push stc notb (bad) mov into (bad) (bad) xchg cmc cmpsb pushl sahf dec sbb cmp icebp cmp mov nop jno ja mov mov leave mov lret imul pop movsb data16 xchg xor push (bad) outsb aas sub les pop add cmp lods fcmovnb aaa js xor push cmp sbb sub sahf mov je lahf lds push sarb decb add mov mov pop adcb popf push aam pushf inc ds mov pop mov loopne rcr jmp add pushf adc lcall pop push xorl fisttp lods mov testb and and mov add push push xor icebp dec fnstcw inc lea adc push ss stos mov adc clc and xchg mov mov rcll lea incl jg sub push shr jnp insl (bad) jne xchg fiadd sbb aad imul sarb add push jnp sbb cltd inc sbb mov dec push cmp mov lods add (bad) imul push popa adc inc xchg sub pushf adc add shrb adcl test push add (bad) cmpsb bound sub mov (bad) jg mov inc lcall fisttpl or sub stos add std decl (bad) mov xor shrl ret xchg add sbb enter and push pop outsl movsl mov add add inc sahf push sar cmpsb jns fisub ss dec sahf out leave add adc cmp xor adc jmp in (bad) jo xlat sbb fidiv jl call shrb out les imul jl xchg or pop xchg outsl cmp mov cmovb sub cli or out add adc cmpsl nop or clc pushl cmpsb clc xor inc call or add mov call dec loopne js stos (bad) lock mov pop pop and mov cmpsb inc pop lock push cltd cli add mov fwait cmp das clc push sbb movsb (bad) xchg sbb push add fdiv pop or in cmp enter sbb sub mov add pop mov or fwait mov add mov dec sub sbb add mov cli shrl rorl adc sbb idivb add push clc mov add pop mov xorl and fcmovne loope adc jo sbb jg addl dec or mov dec (bad) pushf cli (bad) decl add adc adc push xchg mov je es and mov sbbb scas out jnp jl outsb les fnstsw out add inc mov push adc clc in fnsave or jns repnz xchg pop push repnz xor jle aaa mov add cwtl jge loop cli int3 (bad) out xor arpl inc sub pusha sbb xchg hlt add xor std es dec fcmovb or push push clc stos mov insb or pushl sbb inc sub jl sbb clc outsb aad and add ljmp sbb dec ret jg push mov mov pop das flds iret clc outsl (bad) pop lock stos ja pop push push adcl xchg mov out mov add mov push or xchg mov xchg das mov pop lea (bad) jo sahf fmull jmp inc out in sbb or sahf scas mov call dec fistp aam out inc add jo mov xchg cmc mov jne mov add pop dec push adc mov rclb mov mov es xabort push jne popa mov sarl pusha jae inc call adc dec cmc test rclb nop pop push lcall xchg loopne mov fs dec repnz inc out fildll lret inc jae and fs mov enter mov loop (bad) (bad) (bad) mov xchg jecxz movsb pop pop or (bad) sti adc or cmp cli mov mov inc adc xchg (bad) lcall dec sbb xor add lds lods sbb test jge push inc aaa (bad) add mov add subl pop pop fidivr pop rcrl mov cmp xchg and push test add bound mov rcrb adc (bad) decl mov mov test mov loope cmp (bad) (bad) fisttp pusha sti mov jb lret jp sub imul push adcb dec sar xor add mov scas push (bad) incl mov or (bad) mov and mov lret and rolb in mov sbb or mov mov inc outsb adc jb jbe aam ljmp adc mov iret inc mov adcl mov cmpsl inc sub ja add stos push (bad) fmuls jo and and sahf pop hlt (bad) lcall dec sub in int xor ljmp (bad) insb push and or mov dec (bad) jle add fistpll lcall pop outsl ja addl or inc scas jne jb or adc fnclex out jp sub (bad) (bad) dec repnz jmp pop call rorb rolb sub xchg dec cld mov ffreep fiaddl pop fisubl std call xor loopne inc push test loop or cli add inc dec and sub sbb sub mov sbb loope cli jg hlt cs cmp cmp imul or inc add fdivrp and rcrb sbb sub faddl cld aaa pushf or shr dec (bad) cmc clc (bad) mov lcall add inc jne stos das adc call xor (bad) jle in aad sbb in std mov sbb cld cmp sub fist xor xor pop int cmp in add dec push inc ret (bad) shrb les loope pop cmp mov (bad) jmp lret fucomip fadd jne rcr sar imul je mov fistl xor lds (bad) (bad) jg call imul enter push sub pop pop dec sar movsl movsl push mov sbb les testb in or ret add scas stos insl mov test sub dec xchg ss push sub aad xor lock and in push jo or jne gs xchg je movsl push shll (bad) (bad) inc es xchg push movsl (bad) and lret mov movl adc mov xor cmp mov pop rclb addr16 pop inc push int xor inc or clc incl aas movsl add aaa push cwtl xchg sbb (bad) (bad) ds dec cmpsb fs insb xor jns jl (bad) mov sub pusha data16 or mov fisubr cmp push mov mov xchg xchg xchg test enter mov loop dec xchg addr16 pop push (bad) and fsubs insl in dec pop sahf mov xchg icebp outsl push (bad) daa mov mov inc inc popf and ret mov std fbld push loop pusha (bad) pop enter (bad) jp (bad) jg int3 mov pop lods pop xor (bad) fs test (bad) mov adc fmul addr16 and add inc mov shrl in popa loope (bad) in mov cmp notl hlt stos (bad) push mov ss mov shr xchg (bad) stos lods imul scas lret scas jns lret daa push daa test rolb loopne pop push sbb add or sub loopne cmpsb (bad) mov sar add or sbb fs cmpsl fdivr hlt pushl loopne inc sub rcrb (bad) cmp in into dec ret fistpll mov (bad) testb mov cmp fbstp push mov cmp pop xchg addl push mov jbe movsb sub (bad) inc inc inc pop mov xchg cmpsb sbb aas jmp (bad) adc mov sarb rclb (bad) cmpsl xchg push pop sahf fiaddl loop cmc das rolb enter xchg in sbb fwait sub xor xchg xor clc inc cltd mov jns pop out (bad) xchg mov inc push jg test add and xor cmp sbb mov insl imul add js sub push push bound push sbb or mov or out ja push les cmp add loope sbb pop icebp lock fsubrp cmp movsl add push cld and push sub cltd jns nop loopne and (bad) xor ljmp lret fwait add int lods add sub rorl lahf fnstenv mov (bad) jno cmp movb mov mov pop cld or jnp push roll cli push jle pop clc push or (bad) mov xlat jmp hlt dec lahf mov or and push cmp decl cmp lock in (bad) adc stos addr16 add mul mov jle (bad) call fwait mov into fisttpl leave add subb loop in clc adc cmpsb sbb outsb nop js inc mov out aam (bad) incl jp and inc add lods je icebp (bad) clc push incl or nop sbb ss lahf inc pop les outsb mov add jg jl add test pushf inc mov jg arpl lods pop add arpl outsb mov clc ja add jmp pop clc or adc lock outsl cli xlat jae pop and pushf and add (bad) fucomip jnp inc inc dec mov enter call adc cltd sahf xchg ljmp insl mov rolb mov frstor add xor dec mov jecxz cmpb jg adc dec sbb push (bad) and push and or stos mov adc mov insl jbe das and mov inc push sub sbb inc jae das adc inc push xorl or bound dec loope les ficomp push lcall addb clc and clc sub daa and outsb push pop adc daa sub shrb and je sub mov inc jp popa fstps xchg xor sbb fisubrl inc sbb sub dec pop xor and out clc pop or dec cmp mov dec jg dec cmpsb call (bad) sub imul and (bad) mov add call and popa jg mov lock push cmp or mov movsb dec imul cld push (bad) mov jne (bad) xchg add pop dec jmp out and enter push mov jg inc cld rolb popa sbb or sbb sub sub hlt (bad) aas subb sub dec bound adc xchg xchg add add xor mov es ljmp jae sub mov aam test inc rclb add enter push pop add jle pop mov mov daa (bad) outsl outsb push xchg aam or mov add imul push jne (bad) out push sbb or in outsb sub icebp jg popa test add jnp or jg call cli xor and dec xor decb and cmp and imul (bad) insb shlb push sbb lods out or cmp cmp aaa dec xchg xor popa arpl jmp leave fs stos nop mov testb add stos loopne adc sbbl jl sbb sahf inc pop fisttp fiaddl and int3 (bad) sbb cmpsb (bad) sub out cs push inc loopne stos and cwtl adcl push or movsb xor les xorb popa (bad) pop repnz push ja clc data16 aas ja ljmp cmp stos shlb or fbld adc aaa adc std mov xchg push lcall les (bad) out test xor inc fsubs and jg inc cld push lcall jl or pop dec push dec and mov pushf test sub pop cmp mov (bad) pushl jbe sbb xor inc xchg in sbb scas add and test mov mov pop loope jg dec repnz sbb js insb divb cmp fs hlt aaa pop xchg jp cmpb adc and notb mov dec divb pushf push adcb aaa adc pop push js mov arpl rclb movsl inc aas dec subl xchg imul mov mov data16 cmp sarl les mov test sbb xchg pop xchg gs call jg (bad) sti (bad) push cmp sarb pushf sar dec sub mov insl pop cmc mov pop or aaa std inc inc mov xchg into adc dec pop jg cmc inc and push out xor insb pop jne jg mov add xlat xchg cwtl and inc (bad) push inc adc sahf or decl fidiv or sahf clc cmp push fdivrs js lods imul pop loope movsl pop sub xchg notb cmc ljmp cld cmpsl mov dec pop mov xor jg sub mov cli push dec sbb or pop adc cld mov das ret or mov int jp aas mov mov push inc dec insl or call fwait outsb aas mov (bad) xor adc push (bad) mov (bad) jg movsl inc or or xchg jno idiv (bad) fistpll gs adc (bad) mov ds es jl lds jo insb xor and (bad) call cltd fmull add xor (bad) mov ljmp push pop cmp fisttp xchg pushf mov or pop hlt inc in iret in aaa push pushf sbb inc shl mov sub pop mov push cs (bad) ljmp or sub mov mov mov cli cmp (bad) or push dec mov rclb push movzbl lcall mov xor pop mov push rorl ljmp xchg arpl mov ret push mov dec mov iret mov rorb jge loop (bad) mov into (bad) scas les xchg pmulhw jns repz or stos out cltd add sbb inc mov jle mov mov fsubr jae mov mov call xchg pop push pop add sbb add das cli jg adc jb dec jp push test imul dec outsb pop sbbb adc dec inc aaa and dec xchg mov ja mov pop imul jle mov jl cmpsl push (bad) dec vminps jo cmp pop push (bad) decl movsb ljmp daa push lods bound xor int3 ret lcall (bad) mov mov movsb xor and out rorb lock jo lahf push cltd adc pop mull test mov call mov in inc lcall shrb int sub (bad) mov movsb jl mov mov hlt pushf sbb mov mov xor inc or and imul xchg std out (bad) cld movups aaa dec mov adc push or and jo in aas pop movsl add pop pop cmp repnz jp sbb pop and fsub (bad) mov sub jo xor (bad) jo add mov sbb ret in dec add or sbb outsl fldt sarl std sti mov or push pushf (bad) pop lock or inc clc and arpl dec (bad) mov pop and dec roll orl add dec mov adc xor add inc sti cmp arpl rorl add les jb jmp xor add xchg push cmp sub jge inc pop jne dec pushf adc mov xchg dec push dec ret inc adc mov mov sbb test imul lds cli out jl cmp fwait ret or andb pushl flds outsb or std mov xchg sbb stos js dec sti (bad) sahf inc (bad) and cmc add xchg insb jbe (bad) ljmp adc pop push mov leave (bad) fldl lahf in pusha jo test clc pop sbb add rcr inc jmp fs dec inc push sub movb fild push push cmpsb dec shrb sbbl push mov bound (bad) mov cwtl pop mov fwait insb jmp orl in in lock ret sbb sbb mov adc cmpsb decb sbb ds fiaddl add hlt addr16 ds in cmp cmp mov adc cmp es mov pop or andb dec in inc or pushl daa sbb ljmp cld push sbb mov andl int3 and sbb pop jl mov sub loope dec dec outsb cmp adc push fimull int3 add daa or mov fdivrs js scas add sub fcmovne (bad) hlt cmc pushf outsl adc incl jo cmp sbb inc mov imul (bad) test xchg add pop mov inc sar mov xor add push mov insb cld mov jbe mov std mov cmp test test daa andps (bad) (bad) fbld mov inc inc out cmpsb mov ret add xor out fs cli cltd xor mulb dec sbb sbb dec (bad) (bad) cs hlt jb (bad) insl adc mov adcb stos jl mov add loope imul inc xchg test fisttp popa in sub shl mov enter mov xchg out jge,pt scas xchg lock loope pusha sbb or jecxz xchg pop pop mov jae icebp aas xchg mov popa loopne popa pop add add stos call jb jg hlt push shr jg push pusha cmp cmp add (bad) push xchg jbe pusha and mov xor std (bad) mov loope jnp test xchg test sarb iret fisttpl sbb cltd xchg jl sbb or or subl xchg pop ljmp test insl cwtl (bad) decl jb jle into es add mov test roll aam xchg push and jmp popa aad fnstenv mov pop jp aam mov sbb jae push lock ja xor ds daa ja sar frstor xchg add call push dec pushl fistl lock enter addl mov pop ss sub dec nop enter dec ljmp or inc pop sbb dec add test in inc outsl sbb test jo sbb out test pop dec sbb (bad) mov or pop and scas cmpb cltd fild rcrb arpl cli mov jb adc sub pop xor ret mov fsubr inc sbbb roll shll adc adc fwait jle xchg leave push orb sbb fiaddl sbb test adc ret enter push xor mov xchg sbb dec das adc add fbld loopne xor into je bound add scas push jecxz (bad) mov push xor loope (bad) pop inc in jge out aaa dec xor pop pop lret pop (bad) jg dec sar leave add dec aam cmp test test fwait cli icebp out in jbe xchg lods (bad) xor push lcall icebp dec mov pop cmpsl pusha and out (bad) frstor jne popf dec (bad) mov ficomp jns adc ljmp aaa inc rcrl xchg and iret mov sub cmpsb int sbb pop shrb cmp and add push in xor cli int loop mov xor adcl or rorl (bad) xor sbb jecxz dec pop dec out and aas fwait shlb pop xchg js xchg add jl dec sbb lcall movsb fisub and movsl ljmp push sbb loope jl les loope inc push cmp (bad) jmp scas rcrl xorb mov aaa jge add inc jge xor push div xor jle je enter lahf jne xchg hlt andb scas es xor or sbb jge mov imul in rol pop (bad) jb loop push mov imul mov xor and outsb std inc add dec xchg lahf out es jg push sbb out mov xor imul push jecxz push bound pop push les xor cmp push inc dec push jg cmp pusha outsl out ds dec add push inc pop sbb fildll cmp insb inc cmpsl push mov cmpsl lret fildll aam jp into add stos cmp add jns into mov push mov fisubl out nop daa stos mov das xor movsb mov and dec mov ljmp sar xor inc rolb imul imul xor pushl add (bad) incl mov pop dec scas cmp add cmp push popf movsb dec repnz push fisubr adc daa cmpsb mov stos loope cmp sbb mov int sbb adc mov push push pop sti dec cmc sbb insl add repnz (bad) imul outsb ss movsb xchg or dec fdivl sbb incl outsl lods enter imul push pushf js cmovge or ror das mov push (bad) cmc pop sbbb xchg (bad) out insb pop mov aad inc shrl pop or cltd cs daa cmc fbld and das lds loop fs test ret sbb leave pop mov pop mov testb or and cwtl push jae clc cmc pop lcall incl cmp cmp js adc jnp push shlb into movsl xor imul adc jae mov leave mov ljmp ret pusha add inc out imul pop sub fbld imul sbb sbb test mov mov (bad) push sbb or incl les inc loop and jl movsb out adc in call adc (bad) sub jg inc loop sbb lock mov cmp mov daa mov fidivl imul jg mov cmpsb aaa cmp mulb inc mov lods inc (bad) ffree push xchg add inc bound ss xor pop in jg sub mov ret lahf cli fdivrs pop ds loope xor rcrb out jmp incl sahf push loop lret add cmpsl mov add mov mov ss sarb outsl std push bound bound fcomps or jns popf add out jge mov mov xor mov mov sbb mov dec out nop cmc scas cli (bad) cs xor ds mov decl ljmp cmc insb xlat inc in shrb push lods dec push clc adc aas ret dec cld ja out dec and jns bound out (bad) aaa js and scas fbstp std aad add int3 sbb mov and push cli shl subl mov pop enter lea push pop hlt cmpl push inc in add shrb xchg xchg xchg scas mov shlb jp xor sub movsb jle lods mov xchg inc stos out jno inc pop mov dec and cwtl lcall shll mulb arpl test (bad) out clc sbb loop cmp sbbl cltd pop rclb pop enter popf xchg or test mov repz loop (bad) cmp es pop aam mov daa add mov pop jmp int3 pop and push (bad) decl daa daa push or adc pop dec shrb jecxz es lock repnz (bad) jl xor icebp add mov rcrb jo outsl ljmp mov fs loopne incl lock push fs inc hlt ret sarl mov (bad) ffree cmp sti push jo hlt arpl jbe sub push pop adc out cmpsb (bad) gs jb xor sub fnsave data16 daa in xchg divl dec ret mov dec jl xor push sar (bad) (bad) lcall testb adc movsb ljmp add ja test addr16 dec and clc xchg rorl mov fild jg aas push cmp ds mov fwait (bad) les xchg (bad) ljmp loop xor rcrb (bad) add lds jb pop cmc pop lcall mov pop inc je icebp cli ret and xchg dec cmp xlat in sbb or jg gs adc sbb imul push mov js aaa lea xor add push mov js inc adc cmp push scas jae (bad) mov call icebp inc mov cmp xor sub es icebp xchg (bad) fildll mov push hlt sbb in pop ss xor cld or push cmp nop fisttpll mov and push jae movsl push (bad) xor pusha lcall insb ljmp jno mov lods and aas push push aaa pop mov xchg add sahf mov and in or std mov mov jo push mov mov lcall adc sbb stc pop push mov push cmp scas adc adc es mov leave jne out enter add repnz test loopne pop clc mov push scas ljmp adc (bad) fcomip ljmp mov inc or adc jne fcompl roll mov ljmp mov inc jecxz cmp (bad) mov orb decb adc aaa std sbb dec mov mov sbb dec clc icebp stos ljmp (bad) ret outsb adc adc stos (bad) add cld loopne dec leave mov push lods add jb daa (bad) cltd les pop (bad) xor daa xchg inc cld ja jmp cmp sbb stos (bad) and inc loope out enter inc test and adc dec cli mov add adc rcrb sub and std adc push (bad) mov cmp (bad) bswap jl add (bad) loopne test cld js data16 ret mov mov and cwtl out cli lcall dec repnz movsb push xchg jbe aaa adc push or mov (bad) cli test add (bad) (bad) (bad) pushl mov pop cmp xchg js add mov mov leave mov add and sub jmp fmull es es mov pop mov push mov and lock jge mov ja inc or sub inc enter test outsb xor and mov dec lcall jecxz jo inc and add dec push cli clc aas mov daa and gs mov jae ja sbb lcall push mov popf cmpsb out dec (bad) push mov xchg frstor cmp push (bad) pop push cld call addr16 xchg or (bad) and add mov or add push lods push add lcall enter push mov lahf sbb inc incl sbb inc or loope dec insb xor adc cmp fsubs dec dec push xor outsb loope add ja dec and arpl into fwait mov adc jecxz or aaa pop jle jmp sub mov add sbb es cmp cmpsb xchg xchg xchg popf test mov loopne decl into cwtl inc mov sub je outsl pop divb xor out adc cmp pop and popf out mov pushl lds jge addr16 mov imul insb xor mov imul add or js inc in repnz fistpll aas lahf mov sbbl jo add fwait inc aam xchg jne (bad) and xchg pushf push inc sub fimul popf cmp or and roll dec addl or adc cmp imul inc decl mov imul push push mov int3 daa outsl ret adc add pop jne dec mov xor xchg mov push add shlb sub leave (bad) jecxz push imul scas popa cmp xor out (bad) sbb (bad) adc mov loope xor xchg clc dec or or mov imul add pop sub jle call (bad) mov adc arpl add sub mov push out popa std in call pop inc dec js popa rolb movsl mov or imul scas jbe push xor add (bad) call push shr aam fwait or add push xor (bad) scas mov sarb mov (bad) xchg xchg and mov stos ret cli fstl jle inc insb (bad) incb mov lock mov insb ljmp rcrl ss es pop test sbb leave mov das mov repz add daa push pop repz incl and mov inc mov pop out fsub (bad) push or decl jo xchg inc fwait mov int lret lcall push pop lea pop outsl mov (bad) cmp jae repnz jp inc fucomp dec scas jb loop push ljmp pushl dec aam jno xor lret insl lret lahf xor mov (bad) dec mov xchg mov cld ja lcall push add (bad) jg sub ret mov (bad) and out popa pusha icebp push sub fadds popf mov jp dec mov lcall (bad) cwtl gs (bad) mov mov sbb (bad) movsb (bad) jg push ljmp int3 adc rcrl dec icebp das and push adc ret lock gs and push pop test dec nop or mov jg cld sub pushf shr das push clts mov int3 loope std sub mov sahf dec inc cmp fldl fild jno mov bound add inc cmp clc aaa mov popf xor fwait sbb add ret clc mov jnp jnp scas mov pop lock fisubr in pop push cmpsb pusha nop popa fucom mov les dec cmp push push jg dec sub outsl loop imul sbb fisttp dec (bad) out and dec mov nop jne cmc cmp mov cld xor ffree insb adc (bad) incl dec leave loope ja or inc enter idivb rol xchg adc scas and cmpsl and add sti scas cli icebp inc ret jbe push mov xlat les mov pusha fiaddl inc scas cli and jg sahf imul cmc jmp sbb arpl (bad) adc push out xchg in xchg adc or scas add push daa push jne rorl sti lods jno dec int3 sarb push pop pusha add sub sub icebp (bad) inc mov xor push inc jmp xchg mov push lock out jb add push pop add xchg mov pushf mov movsb jmp pop cld ja xchg inc fidivl push xor addl push sbb mov ret xor sub pushl mov mov mov xchg jmp add insb sar add jp jo dec push cwtl or lcall movsb ljmp push push mov inc and aaa lcall test (bad) aas test roll ss shr xlat sbb nop inc scas mov mov pop cs test dec inc mov inc inc xchg lock add xor andl mov sbb dec sub outsb or or pop rcrb lods mov mov xor dec and cli cmp jno sbb push sti pop xor mov inc clc or lahf xchg loop mov cld call jl pusha mov cmpsl je stos pop dec mov insl ret mov dec jbe loope mov mov clc scas cli out push xor fisub aaa js movsb cmp dec xchg es jp sbb shlb mov or ljmp ss sarb (bad) cmp inc sbb test and xchg popf nop (bad) das add jae test mov popf inc adc cmp lock mov pop jns and ja int inc pop shlb pop add hlt loopne inc lret mov test in mov out jl jo cmp loop enter lret dec and call js cmpsl jl jns,pt push (bad) cmp jl in sbb loop,pn inc mov lock cmp mov push shrb (bad) (bad) inc inc inc push adc push push push insb jecxz enter sbb jmp aad cli adc enter mov or clc jmp mov mov jo mov sbb adc add out push fisub (bad) imul rol jecxz leave cmpsl jg inc test lds leave pushf cmp (bad) and fdivrl (bad) sarb xor inc jb inc add (bad) call mov inc or (bad) and jbe inc (bad) mov mov in (bad) aas cmpsb jl pop add test jnp dec xchg mov inc sub push decl je imul dec lds mov mov push (bad) out and int3 je lods stos jno insb mov movsb insb push pop push test sub mov insl cmpsb dec enter sub or sbb mov out xchg stos paddb (bad) (bad) cs sahf pushf pushw (bad) fildll test (bad) aas outsb xor lods inc pushf pushf shl cli jg rolb add ljmp jbe addr16 movsb (bad) fnstcw mov push push pop in jge outsb popa mov push jecxz test jge mov outsb incl fwait dec mov mov push pushl cli xchg dec aaa sbb cmpsb lock jl cmp jbe (bad) (bad) decl das and cmp cmc fs call push pop loope cld incl and mov xchg cltd in (bad) icebp in mov dec add xchg mov les push pushf mov lods inc fcomps or clc (bad) mov into loop push into jg push (bad) xor jno add (bad) adc mov scas mov push cli mov and iret mov into sub sbb push mov loop mov ljmp fisubl fnstcw movsb movl imul xchg mov mov inc xor jmp clc push inc outsl cmp mov xchg jg fcomip add jae sub dec mov inc gs loope clc sbb cmp test (bad) lods loop add mov sub mov jbe sub and nop bound mov frstor (bad) jns jp xchg lcall pop pop xchg sbbl ds js cmp or inc sub inc adc xchg dec adc inc es pop repnz add fdivl mov gs insl (bad) idivb jp enter or into pop (bad) mov ss mov cmp popa push or sub pushf jmp mov jmp xchg fdivs fldcw lock out sub test cmpsl add nop xor and push and inc mov cmp pop in fdivs jg mov lds sbb shrw fstp aaa adc clc add pushl dec push mov jbe mov adc mov lds (bad) and pop aad lock orb push fcomps cwtl call adc mov fnstsw mov inc repz jecxz aas lea add insb jmp imull inc scas mov (bad) sub push fadd (bad) fisttp loop add pop xchg (bad) ret add push xor out gs sbb orl jno outsl pusha inc lods jbe icebp fidiv sub mov loope sbbb sbb and and cld fiaddl roll add sbb loop clc push iret adc push pop subb lods roll or mov xor in loope push pop or iret jmp je adc pusha add adc cmp insl xor mov xor clc mov jno push pop lcall sahf mov out test push sbb ljmp shrb outsb subl jae add xchg mov cmp lcall ss call sbb mov flds negb outsl xor out jo fimull fldl mov call (bad) jo mov subl out dec pop pop add cmpsb adc inc cld ss fadds push ret push sbb fstl jne aam cld ljmp cmpsb push ret ljmp jo mov xchg mov mov out push out dec imul adc pop jne push out dec icebp ss add out (bad) mov adc data16 cmpsl pop frstor push dec jns sub add dec shrb decl (bad) lods pop adc enter shrd push ljmp sbbb sahf push jbe decb and push repz mov adc fs dec pop mov mov add jo movsb xor loope lcall aam enter inc mull arpl mov mov arpl xchg shrb adc popa dec repnz mov cmp pop fsubs pop movl sub dec mov push push cmp shr aam rol fnop or mov outsl and mov and xorl clc add aam jne xor mov jae faddl mov fstps adc test subb hlt sbb ja pop sbb cmp inc pop xchg push fs orl and push jmp xchg push push cli jg push fsts pop leave add cmpsb lods mov (bad) (bad) (bad) incl or cli test in cmpsb cwtl outsb repnz aas xchg sub (bad) xor or outsb or mov (bad) js imul mov jmp pop test lock push cli lea cmp add inc (bad) cmp and push jns (bad) mov inc (bad) mov pop mov (bad) (bad) decl push add rolb imul add mov adcl mov adc movsb push dec sub cmp sbb adc fs sub (bad) jmp inc scas pusha xor inc push rcrl jns pushl fadd fwait es scas dec add and push jo loope lock jnp cltd mov pop stos adc clc addr16 add dec mull fsubrp das sar loope out arpl (bad) mov icebp adc lea lock mov mov sub mov mov out pushf pop add adc fnstsw inc xchg and mov sbb jmp cmp leave icebp or inc inc jns pusha pushf je js (bad) (bad) sbb jnp imul incl fisubrl aam adc add mov ret sbb xor xchg movsb (bad) cmp sub enter data16 jg cli push jmp xorb sub (bad) imul or movsl mov or out loop (bad) or inc std pop cltd scas cmp (bad) test ds clc pop (bad) cmp lds pop dec loop pop or xchg shrb adc loope incl scas mov mov les push push xchg mov loopne or shrb aam mov (bad) jg mov hlt addr16 pusha loopne cmp imul dec rolb or (bad) das arpl ja cli ja cmpsl or addr16 mov push xchg and add mov js adc dec (bad) (bad) decl xchg les mov mov loopne add sub xchg cli scas pusha fdivl or aad ljmp mov aaa das add sar lods idivl inc xchg es in dec in test es jle or add aas mov jmp mov sub ret cmpsb aad fstpl mov setb mov popf adc cld inc dec das cli mov lods loopne pop or std lea mov mov (bad) mov out mov push movsl jecxz arpl repnz cs jmp orl clc aaa push clc (bad) (bad) pushl mov hlt imul or fisubrl mov subl enter popf push or (bad) jg icebp pop data16 adc jp scas pop loope fistpll xchg push cli aaa std or or popl icebp and bound (bad) and lcall inc adc arpl and jmp js in loopne or divb in dec sbb (bad) jmp bound rclb sbb call pop int shlb mov clc insb fyl2x pusha jb outsl das clc pushl jae jns cmp pop add loope mov adc or clc roll (bad) out xor and fisubrl or inc cmp aaa inc (bad) (bad) cmp cltd and insl (bad) push pushf mov push cmp sub and mov mov pop dec sub cmp cmp mov incl shrb push xchg into fisttpl sub in imul sbb clc push iret and cmpsb cmp mov pop ljmp fisubl mov and cld add mov jecxz scas std jg hlt sbb shrl je int sarl sti popf push dec js je pop out lock mov and sub dec pop cmc ja rorb pusha xchg add lahf pop std add ret and pop ss or xchg in test jg sbb and inc dec dec out jbe imul fxch jp (bad) das (bad) ds call les ss loopne pop pop pusha jmp stos cwtl es hlt push aad cli push push frstor icebp jmp dec cmp ja lret add gs add pushl sbb dec jp jb mov incl arpl mov outsb es pop bound mov pop sub ljmp lds push inc inc movsb mov sarl (bad) (bad) mov inc push (bad) les inc mov lret xor jae incl icebp cmpsb daa lretw outsb test mov imul cmpsl pop jl push xlat cwtl and mov imul inc inc out xchg adc mov dec outsb inc (bad) popa outsb repnz icebp (bad) (bad) out jb pop stos negb mov pushf das fadds xlat addl fidiv sub (bad) jo scas xchg aam mov and inc and mov mov inc pushf dec adc add adc enter fisttp out pushf lods xchg rolb inc fnop mov sub insb cmp (bad) jg jp ret addr16 (bad) sbb jl ljmp jae mov rcll flds cmc cwtl ret repnz insl pop test jl dec pop dec test aad cmp sbb jnp inc pusha mov jge das lock push inc jl aad jg (bad) push adc inc aam mov sbb mov push or (bad) sbb ljmp aam mov dec mov or mov scas jo stc loope loope xchg mov scas sbb repnz pop mov inc into sti jbe ja (bad) jmp xor pop test cld jg call clc dec jno jl bound es jg mov aaa in and or pop or mov and bound sbb xor jg mov lret js subb add push sbb add jl mov mov int3 in add ret loop ss (bad) aad stos mov or hlt pusha insb mov cmpsl fdivrs pop mov lea hlt fcoms outsb into stos cmp jo (bad) jg cmp xor mov shll fidivr adc push lret int3 dec rcrb cli addr16 jno ss (bad) and xchg aam xor sti adc or xchg rolb jg and xchg (bad) rcrb insl addl ret mov or mov adc (bad) lcall lea int push cmp aam or addr16 sar insl rol sbb lods xor adc ja decl jge and push cli inc loopne (bad) ljmp lods std or je aaa sti mov outsb in cmpsl inc cld jmp or adc mov nop jne inc ficom xor mov push jmp test sbb (bad) (bad) (bad) mov loope or sub je shrl sub rorb xchg xor mov rcl outsl dec xchg dec jl and ret fmuls aas xor dec fstl jbe add xor push jbe fstl lock inc mov fcoms arpl or add lds out test popa mov or pop jg icebp jp movb xchg ficompl mov dec pushf add out test ljmp cmp pop movsl lock inc jmp cmc jg xor jo daa inc xor ja inc sbb test mov inc push (bad) mov or popa (bad) lock movsb mov ret push into into jle movsl call ljmp mov xchg cld dec cmp loopne test cli in scas mov mov (bad) add push or clc fimull jg cwtl xor xchg push cs xchg xor add (bad) aad hlt mov sub dec dec cmp xchg lock mov or in fmuls sbb jp mov push lret fldl orl mov out push andb in xor inc add pop pusha mov cmc call test lods sahf dec les mov dec pop into hlt (bad) inc push lcall and sub in aaa dec ds fcmovnb and jge movsb sub inc jl and out mov cli mov lock push js fidivl pushf jne mov dec cli test mov xor mov and sbb js (bad) (bad) call jno xor ja xchg or (bad) loopne inc loope mov sub jb inc mov jecxz mov pushf jns es arpl jns jmp cmp pop xchg push stc addr16 shll (bad) popf and faddl pop test (bad) fimul sbb test aam pop inc xchg mov shrb xor jg jo clc push adc sbb icebp aad clc sub mov xor sbb or cmc xchg add mov adc adc in push sbb je movsb (bad) jg fimull sub mov add pop cs lods sub dec jbe test or (bad) jbe inc mov adc inc loop xchg cmp inc cld push rorl cmc pop mov (bad) out imul jmp and leave inc push inc adc pop push push push xchg mov imul out mov aad rclb push lea (bad) fild lcall das push sbb sbb xchg icebp pusha outsb sub or cmp (bad) cmp rclb xchg aam dec jnp addr16 (bad) aas add dec dec inc dec or mov subl icebp ret fnstcw cmpb xchg adc sbb ljmp inc jmpw sbb jo cmp xchg inc repz mov ljmp cmpsb fnstenv and enter ljmp loop aaa inc pop call lods and push imul (bad) jmp cmp cmp ret insl scas (bad) iret cbtw jae (bad) cmp dec (bad) mov push inc loopne cld or imulb (bad) in cmpb cmc aaa std sbb mov into rcr add push pop dec loopne add xor (bad) stos and mov popf divb xor (bad) jg rorb mov dec lock xchg and inc adc mov pop pop insb addb movsl into bound cld xchg sbb lret xlat (bad) in sbb lret loop loope in adc dec js cmp (bad) in outsl data16 inc jg test scas cld inc inc imul jle xchg add cltd push jno xchg sbb es mov jecxz clc mov and and push (bad) lcall hlt daa btr lahf unpcklps mov imul cld pop insb lods jns mov xlat mov xor jle sbb jg test and mov jl or jp and in outsb outsb dec adc cwtl pop test jge mov sub push push (bad) sahf push pushw xor xor mov pop fs std (bad) call xchg fsub adc mov pop sub or push pop push pop mov insb fadds fist out divl icebp std lahf data16 pushf (bad) (bad) cmp dec xchg mov in lds and cltd repz ss adc test lock add stos lock or shr cmp cmp hlt clc sbb jbe add xor or clc outsl pushf push fwait iret fisubr aaa push sar aas mov ret lods sbbb adc push mov xor (bad) jne rcrb loop iret sub stos cmpb das adc dec les lock lods cmp loopne cmpsl cltd and test sbb fistl or daa add fwait aas adc jnp push test pop add (bad) push sbb add adc sub jo (bad) (bad) ljmp sbb lcall in xchg push push js ret mov loope mov pop ljmp or (bad) cmp insl cmp imul adc popa xchg sbb xor push jmp scas cmp pushl dec pop sahf cli or push sub pop mov test push dec loopne jb fadd (bad) incl jb mov mov into mov das jle movsl pop sub adc mov int3 cmp mov das fdivrs sub add ljmp dec cmp xchg scas mov mov or loop dec dec (bad) pop sub and pop (bad) xor (bad) (bad) call or mov and mov pop cli js fnstcw xchg test out jno clc mov cld sub sahf dec daa jo fcoms (bad) into sar jg insl into or jl jb push push pop or mov pop xor (bad) push fisttpl sub inc loopne aas rcll mov mov rcll aaa testb imul inc xor cmp cmp mov daa mov ss cmp std stos mov mov pop cmp std inc xlat aaa adc xor inc (bad) in (bad) incl call add and adc insl icebp push sub stos xchg mov ljmp cmp (bad) ljmp push push popa lahf vmaxss cmp repnz aas mov (bad) mov sbb jmp les std mov pop mov inc pop push adc cld mov sbb aas or hlt mov sti mov cli outsl adc fucomp pop les int (bad) call or mov sbb adc cmp mov lock mov (bad) mov xor push xor mov hlt sub pop sbb xor ja ficompl mov lcall xchg movsl (bad) push enter mov jle outsb add xchg jle std fcomip lods aas push push jl js xor or xchg mov orl sbb mov out mov insb or push and repnz fstpt sub pop dec subl or inc push in push clc outsb adc loop xchg test adc imul or inc xchg incb mov and hlt jne pop dec pop inc aas or inc clc cmp bound pusha push pop ja stos dec call or lahf gs out in stc pop push out movsb jo add pusha subb dec ds adc push xor scas dec adc dec mov mov ja stos inc sbb add aaa cwtl ret pop in adc cmp pop mov pop daa sar pop (bad) jl add push jle cli cld jno imul mov test leave in jle jge mov jle (bad) pop inc lcall add aaa out adc mov mov cmp cmc sbb mov cmp add or stos xor mov push jge and in rorb adc ljmp adc mov inc xchg or mov (bad) loope arpl sarb into lcall cld mov inc and inc pushl sbb lods or rcrl (bad) lcall and ret popa push push pinsrw (bad) cmc xchg loopne pop sub ficompl cmpsb sbb cmp jge dec mov sbb mov add clc aad add lcall xchg xor add ret inc lea nop cmp divl xor add sbb insb pop cmp xchg mov std adc shll pop add mov jbe xchg sbb add push dec push pop add fildl lds aam in mov out (bad) adc fistpll lods aaa rorb adcl sti mov dec cmpb cmc or cmp dec dec cmp lods scas test inc scas cli pop in push fwait push pop stc or and push dec fld fiadd out mov lcall dec mov cmpsl jo iret add subb and and std mov mov ret subl inc mov jbe and std push sbb outsl add ret add addr16 js mov (bad) xlat imul adc mov scas mov xchg add add ret or (bad) jg sahf mov and test ja loopne jbe pusha lcall mov cmp testl fsubrp dec cmp mov inc pop pop sar xchg lea mov or (bad) mov aaa mov mov sbb mov loopne xchg negb inc jmp ret sub or pop call sub stos jbe ss add adc scas cmpsb or lret mov mov xchg popa int3 cwtl cmpl mov es je mov test ss adc fstpl pop insb or mov xchg rolb sbb out sbb jg add popa loope push xchg or fldl xor add xor cmpsl jne dec aam mov cmc sbb xchg pop and and scas das fcomps (bad) (bad) mov icebp inc insb add xor push stos add (bad) call loopne pop popf js jle decb scas rorb pop imul jg mov cmc xchg (bad) xchg or sub inc ljmp add lods mov fdivrs test (bad) and sarb push and mov xchg and lds and sub fwait (bad) lock cmp dec orl out (bad) icebp ljmp in jl fstl mov fistpl mov push pushf xor cwtl cmpsb pop sub mov out repz mov push mov mov je adc or int3 je mov in jle pop and mov fsub sbb xor (bad) aaa lcall nop jmp sub push test and add addl ljmp orl mov es aaa push mov or icebp lods divb int sti adc xor mov inc push in add dec test sub push xchg js push cmp sbb mov scas test cltd sbb clc push out insb mov lea movsb loope inc outsb jb jbe fdivs divb xor jecxz or and popf (bad) sbb dec cs adc jmp nop mov inc int dec xchg mov adcl mov or adc inc int3 (bad) leave clc dec mov mov or dec mov pop (bad) lcall test pushf pop pop outsb insl add cmp cmp in mov push sarl mov inc adc (bad) cmp fstps push insl into cmp sub pop (bad) jmp xor (bad) jg mov xlat push test sar pop aad xor and or inc add jmp add pop dec add pop push fldt and (bad) incl popf out ret mov fimul dec imul pop and adc adc cmp (bad) in pop jae ja ret movl xchg and orl adc in (bad) ljmp mov inc out push adc loopne neg add jae mov sbb push mov dec in adc (bad) fistp in pop mov mov outsl adc (bad) fadds cwtl mov call xor fsubrs (bad) or push loope and (bad) jg inc jns mov add push lods daa or xchg mov into js cmpsb push call xor scas inc sbb jle inc scas (bad) xor cmp jmp insl add pop sbb xor inc sarl jmp cmp imull sbb (bad) cwtl inc push mov inc dec cmp incl push and mov mulb mov lret out (bad) call or aas inc pop dec arpl loop pop fsubp pop add data16 ret add (bad) jg lock jmp inc cmp and or mov lods push fcomp ror fwait xchg cmp sub in and iret jecxz js mov fwait cli rorb push and cli xchg dec xchg push test dec insb add or pop sbb icebp fcomip ljmp dec pop insb leave ljmp test xchg or sub out ds xor lcall stos pop stos jbe jp fs xor mov inc push std jmp pop ljmp js sbb je out pop and ja cli andl imul int3 inc add dec adc xlat icebp pushl xor or sti jb pop data16 in mov pop fcomip outsl adc daa sbb sub pop mov (bad) mov (bad) push dec movsl arpl insl push jae fmull jmp mov das xchg mov aaa mov mov (bad) aaa outsb fucomi push in mov js test cld icebp arpl decl ficompl adc mov mov fistpll cmpsb test jg ja addps jg and xor cmpsl push test pusha fwait loop mov xchg shl (bad) (bad) push sub insl ljmp (bad) or cli cmp mov dec or inc test ja inc (bad) push pop cmpsb and jg (bad) jmp mov je cld and call and cmp xor xor cmp push mov and aad or and int xor sbb mov mov stc data16 nop rcrb stc add mov ljmp femms test inc dec and adc mov (bad) jbe pop push pop sbb sub pushf int pop sbb loop mov loope inc popa mov (bad) decl call pop adc push in js and push jo popa stos mov mov js push imul and inc and jne lcall (bad) sbb iret sub enter inc sub fldt insb xchg add (bad) cmp fdivrs inc xchg mov add push push sbb clc cmp sti push popf jp dec cld dec stos repnz adc subl das bound lret test shrb mov xchg cli aaa cwtl inc into or mov dec clc incl into popl or out movsb out adc sbb push sub in mov fild dec or fisubrl or or xchg xchg add mov mov in cmp and fprem lcall inc lret pop jo inc scas sbb dec mov xchg mov fnstcw arpl push and xlat or pusha dec jle (bad) xchg (bad) into pop dec std inc sbb sbb pop jbe test lods andl test enter faddl inc insb jb and stos inc mov lret inc sbb (bad) shl dec clc fwait gs and (bad) gs mov sub push push cmp les xchg or (bad) jns add les cmp push xchg std popf rcrl or mov and jmp das ss sbb adc cmpsb loop iret fdivs cmc push stos loope mov add add push push cmc or mov into (bad) dec aas test dec mov out dec mov xorl mov push aas dec mov out in shlb je icebp (bad) cli scas orb jbe out in inc or mov add pushl xor stc lret or or fs mov fimull test add rep jecxz movsb stc mov (bad) (bad) sti (bad) jg fs mov sbb loop,pt xor (bad) pushl add dec repz xchg into sbb inc cld pop nop pop pop xchg imul mov (bad) fimul dec sub std enter test (bad) xchg sub das les mov jmp rcl mov sub lret (bad) and or or lods icebp inc nop and mov mov push imul sub ret shll push jnp les sub sbb ret ljmp mov cmpsb in out adc dec bound push icebp inc xchg add jl push mov pop mov subl jl daa stos jnp dec (bad) adc inc (bad) (bad) call cmp push adc add test pop out mov and cmp flds pop lcall pop or pop cmpsl or xor mov push push fildl mov in shll sar mov aam push lods incl jecxz rorl movsl (bad) dec pop clc mov lods pop aaa push lret xchg add add xor push subl pop fs stos mov and pop lret mov and ljmp lcall push adc fimul mov add in into es (bad) or pop ficom faddl cmpsl stos mov sbb jle and fbstp jb or out and and and insb imul lea add sbb mov push inc dec dec add pusha push mov push aas mov out es add aam (bad) jmp (bad) out andl adcl mov test pusha test add arpl fadds cs in inc sub clc push pop and adc push lret dec jg or mov in js or mov jnp push adc inc mov add ret pop inc orb jg mov pop mov add out xor insl (bad) mov cld add mov mov push outsb call or pop jge inc in in sbbl inc test das push out inc rolb pop and out inc pop mov xor (bad) mov mov dec int3 lock sbb adc push push cmp (bad) pop sub clc xor push (bad) jg jns inc mov imul je aaa adc das mov enter xchg add pop mov es (bad) (bad) ljmp movb stc orl lcall movsb in out mov jo cmp (bad) aam (bad) (bad) jg pop popf mov lret inc movsb ss negl dec and dec aaa inc std dec and (bad) out adc fs (bad) repz pushl pop aas sub dec call loopne sbbl (bad) mov je loop or fmulp lds mov add (bad) cmp xorb pop js adc sbb (bad) push push and iret decb pop or adc cmp mov rclb les push int ffreep addl jne push push inc sub adc fcomps pop mov adc mov clc pop sbb fisubl test (bad) scas test jb jo int3 adc (bad) fbstp popa push push sub push mov scas add jp arpl dec std scas cli lock sti mov leave mov bound jnp mov roll mov cli decl (bad) and mov add mov mov jge mov xchg loop cmp jmp xchg mov push mov decb stc jp mov negb int3 les and gs push fisttp pop dec xchg jno mov ficoml aam std outsl jo imul cld (bad) out fiaddl imul sbb arpl fwait xchg push sbb and fimull cmp jae (bad) fsub daa gs and dec stos sbb jp mov lcall movsb pop lcall and mov xchg scas xor inc in push popa mov nop mov test adc and mov outsb xchg je lock inc pop fsubrp scas ss push int cwtl icebp test add out push mov ror gs popa rcll push lcall bswap mov sbb imul cmp dec push fsubr inc adc les cwtl inc sbb inc adc dec mov adc fcoml movsb and mov jmp pop xlat or and adc inc dec adc loop,pn fwait cli scas btr sbb fucomi jbe lcall cld out jbe arpl shr stos fwait add aad scas cli push pusha cmp cmpsb jnp psubusw jg mov bndstx mov scas push or jnp out mov pop lcall jg jnp pop (bad) jae mov das dec std (bad) call imul pop lods lods cmp or pavgb ret adc inc in js pop ljmp pop rclb or cmp sbb adc or ljmp mov pop push mov cmc sbb fimul std mov mov adc or arpl sbb (bad) mov mov and test jg inc cli push mov lea adc sbb (bad) pop incl test sub fcmovne or cmp or clc int3 outsb dec dec sbb push pop mov fcomip out popf cmp xchg adc dec out (bad) adc cmp sbb shlb clc mov mov rorb cltd loopne xchg sarb in lds loope mov int aas inc loop test push sub mov fisttpll inc aaa dec xchg xchg (bad) ljmp sub or out lret cmpsl xchg sti and std xor scas dec loope mov mov xchg cs mov lcall (bad) ljmp xchg sbb je les dec fwait pop jno add add sbb or mov ss add ljmp xlat or call stc mov clc ja xor js and dec stc add or push dec ljmp sar mov insl inc mov (bad) dec cltd jbe movsb fisubrl movsl cmc push loopne xchg hlt push sbb mov or add lock repnz std mov frstor mov or jns js (bad) cmp add cmpsb sub fmul aad std push push rcrb cli inc and mov pop test hlt pop aaa jg,pn inc pop add ret enter loop shlb add test fdiv adc lock xor scas dec out adc outsl jb,pt (bad) mov xor adc sub cmp insb subb push ret loop fstps in push lcall dec push xlat rorb inc daa mov test mov iret sarb pop pop imul rol pop fs adc add ljmp inc push xchg xor push inc js mov pop jle xchg xor movsb or sub cmpsb mov inc int3 or ljmp mov push xor test scas jge out pop hlt in out cmp and pop add out sbb add cld mov mov shlb cs cmp adc out addr16 inc push jb test stos or dec pop test xchg lcall sbb mov jl mov ret mov cmp flds sahf mov cltd jp mov or mov xchg add push cmp add push ds aam pop stos cmp dec insb and (bad) push dec testb aam add adc and xchg mov jge lock int sub mov jae xor or (bad) jg or cld mov lcall xchg push jae std adc mov push xor xlat mov sbb ds sub rcr sub enter iret cmp sbb cs add (bad) jmp adc insl (bad) arpl inc je imul cmp lcall xor inc mov test stos dec shrb mov data16 inc stc sahf and (bad) scas xor jmp pop (bad) pushf and add sub and dec adc mov or repnz inc rcl das and jae mov inc ret shr in jbe aam jb add es (bad) push out mov or push mov ficom jg loop pushf scas dec adc loop (bad) push sub add sub push cwtl js jo loopne dec mov jg xor cmp bound xor das xchg mov enter push (bad) or ljmp push sarl sub lcall (bad) out pop cltd adc xchg sarl dec pop or inc or sahf jb jae rol mov jecxz xchg inc push jae cmp push adc sub loop lcall or jb imul pop outsl and adc int3 jge adc sbb mov das push sbb inc xchg xor nop sub popa add movsl mov loopne test fbld sub xor xor or mov and or xchg test lcall imul xchg jecxz cmpb (bad) (bad) mov mov and inc and cli fild jbe xchg pop push mov push cmc pop fwait push cmc subl sub add pop dec or aam push cwtl decl mov inc push call aaa les mov inc add scas inc test ja push xorb or sbb mov shr adc (bad) (bad) mov mov adc or pop mov cmp and sti cmpsb fisubr push shrb mull ret push jle cli inc mov fistpl pop loop (bad) mov or call cmp loopne and sbb push mov add xor cli or adc add insl divl je jecxz mov in sub mov sub jmp sub push push rorl xchg int3 popf mov dec mov idiv push std dec mov je fisub cwtl fadds (bad) decl rcll jae pop add les hlt jg add pop inc inc mov jle mov cmp (bad) push cli pop and (bad) je fwait xchg pop insb dec jo xor pop js mov lock pop sti daa (bad) lcall bound lret pushf dec in pushf and push push cld clc or pop or sub jl lds (bad) stos (bad) enter push mov imul mov fcomps cmp and insb fwait icebp les outsb (bad) add (bad) call add xchg xchg adc lcall je jo jge repz aad dec std incl push out sbb and lods adc sbb mov xor or sub jmp add je sbb outsl inc into cs out je (bad) inc push inc lcall mov ret outsb sub push add and pop (bad) lods sti sar xor pushf lds aad call bound enter xchg dec std xor xchg push dec outsb push orl mov lods sahf out mov cmc push lea dec ja xchg or or pop in clc and mov shl dec jns pushf arpl xor lock mov aaa lods xor hlt sbb call push aas xchg addr16 (bad) mov aaa push adc mov pop pop add aam mov std add xor mov pushf xlat xor gs adc and scas inc test (bad) mov or sub inc test hlt movsb mov out xor add ss js in sahf sub aaa jle xor popa lds jbe mov add lret dec into fsubl psadbw loope (bad) mov add or cmp dec ret dec idivb test (bad) fistl into mov or sbb cmp sti or push pop aam lcall mov shlb ret xor ljmp call shlb into std nop pop add (bad) xlat data16 push out or xorb clc mov adc xchg mov (bad) and or sbb cli xor mov sbb loopne lods mov cld jmp clc repz mov cmp faddl inc addl std adc add pusha jo ror fwait mov push icebp cmpsl fneni(8087 xor lret popa aad push std inc ret inc leave shll loop xchg adc or add pop std add pop lock cmp pop mov sbb sub ja push push repnz aas mov push mov fdivr mov sbb popa jae xchg icebp (bad) lcall add cmp dec es cmp xchg inc add int3 bound or (bad) ret push jno iret push das or jge xor push fisttp ja sbb sbb push fildll mov jg lods ss imull adc fild test es data16 push in call jl cmpsl push dec add adc xor and mov out pop add adc pop insl bound xor xchg sar dec shrb add pop divl dec add inc or dec test jnp inc pop sahf outsl fildll adc fsubrs hlt push mov je xchg call outsl ss inc outsb mov cmc push xchg push shl sbb and ffree fldenv ds incl xchg dec movsb in fs sbb ret or insl cld and mov xchg les mov xor sub int3 xchg mov pusha jno cmp pop dec jmp sbb mov mov mov add adc xchg popa lret cmc ss pop inc add pop xchg rcrb (bad) fist ret cmp (bad) lods sbb enter sbb xor stos jne ss mov (bad) (bad) jmp or ja jecxz adc (bad) mov lods gs cmc (bad) fildll fcomps or test test push repz and mov clc jae adc aad sbb dec divb push clc popf mov xor xchg adc cmp test clc ret das and push pushf jge cmp xor ja push sbbl les or fiaddl repnz pop call inc sbb lret lods shlb (bad) dec call out pop cmp popa mov pop dec ret dec and xor xchg inc into sbb push fildll in mov cmpsb rcll mov xor push inc mov mov call imul outsb dec call fild or loope xchg and insb add jne jle sbb insb mov (bad) incl cs cmpsb and nop xchg sbb jecxz xchg cmp mov mov sbb xchg ss aam loopne add push cmp cld sahf xchg sbb insb outsl adc adc push sub xor xlat xchg cmp push push pop cli fucomi jb cmp mov push les mov out xchg cmc jmp mov jmp pop and movsb (bad) xchg push leave add push pop (bad) loopne (bad) (bad) mov fisubrl lock push call (bad) mov adc mov jl sbb sub add or mov addl mov repnz incb add cli xlat test icebp lds push add lcall add xchg adc gs push fs popa xchg sbb adc cs cli sbb mov mov push mov cli sbb fldenv push popf cmp out clc adc jecxz pop jbe,pn pop mov and and in cs das es lcall add inc (bad) in pop dec and sbb decl and push jo test or xchg cld push cli lods jne or and and push ret pop adc jae stc in push pop insb sbb inc ret imul call xchg mov pushl in push and mov and and lea insb daa insl mov fnstsw lcall xchg cmc ja mov inc shrb add nop subb or (bad) cmp push rcll ficom or sbb cmc push test xor les mov icebp push or pop mov dec (bad) or in push das mov scas in cmp or in sub mov sub add sbb sbb lds add fs mov ret or xor cmp lods std out adc xchg outsb and (bad) call lcall inc je and fldl into mov scas je movsb cmovo cld (bad) jmp mov cmp adc (bad) mov imul cltd aam clc fistpll pop cmp pop xchg inc fldenv mov or dec nop mov in pop xchg or (bad) rolb (bad) jg cmp imul mov add jle loop dec ss add xchg bound and push jbe,pn ja cs pop clc sbb fnstenv enter std outsl cmp leave inc xchg add mov test jbe mov icebp fisttp mov xchg sbb xchg (bad) test push incl incl sub out or out xor adc fisttp adc mov xchg inc shlb ret dec (bad) ljmp hlt inc mov fildl sarl adc adc nop jne push (bad) insl inc js push sub adc jg or jae inc ss xchg pop lret pop sub (bad) xor cli cli or (bad) decl and in mov push inc xchg ret or mov roll jne fbstp ljmp cmpsl (bad) (bad) push adc vpaddusb fmul mov mov les dec fwait insb push add and push adcb daa addr16 pusha aaa lock push adc sbb jp inc test pop lods push ja test inc cs jle shl pop dec mov mov pop dec popf pop loope sbbb mov mov lcall sub out movsb std call mov sbb sbb mov fwait popa je jnp imul fidiv add stos jle test pop nop cmp mov (bad) fbld ds ficomp jmp cmp jmp xchg mov mov test sar lcall ret and enter mov adc arpl arpl enter dec in jle xor lock xorl mov ret int3 add or pop mov imul dec dec in jp or mov in test cmpsb mov ja cs push (bad) pop push aad mov rcrb js push add into and test insb std push (bad) push (bad) jno loop dec ljmp cmp inc fdivl pusha insb adc mov push icebp mov cltd jns and loope dec inc xor loope lods test push sub incl in aaa push test push jne ret and ficompl pop cmc add jo adc (bad) fisttpll jecxz (bad) das xchg imul ss jle push inc or sub xor cmp pop sbb scas insl fwait incb stos mov adc out pop mov inc test jb mov bound jb out das cmp repnz lds mov (bad) mov pop or mov shrb inc push (bad) mov imul nop daa fimull pushf in lock shlb mov xchg outsb lock sub scas and mov pop pusha adc int sbb jno popa outsb add sub ljmp sub adc fs lcall sbb or or outsb sbb lods adcl jg xchg mov lcall cltd outsl cli xchg add fdivrs lea imul out je popf pusha data16 sti dec scas xor cmp jbe orb add jg add sarl dec or pop jne xor out dec jge mov aaa rcl call ret mov movsb cltd out jge ljmp cmp lcall das and movsb sbb in addl jb loop and xor push dec jle jg cmp pop xchg add xchg push pop sarb test or lds mov aas fcoml aas (bad) test das pusha xor std xor clc int3 lock dec lods or mov std sahf cmpsb push lea jne leave and add sbb subl xchg pushf movsb lea add pop shrb and xchg stos inc xor cmp aaa cltd aam xor push jmp adc sub sti mov out xor mov nop mov ds push push and outsl test adc sbb jbe mov xor in imul adc or dec shr cwtl dec jecxz inc inc xchg fs xchg cwtl jo xchg call mov repz inc dec outsl xchg and cmp cmpsl mov xchg xchg (bad) (bad) mov mov xchg or rolb mov jns fildl mov lods jp jg or xor mov mov mov or xor std (bad) ljmp pop mov push outsb inc fisubrl xchg mov std fildl fidivrl and mov scas pop adc mov add (bad) cs clc xchg add popa jo inc xchg jge,pn test test fdivrl xor dec mov lock pop and mov sbb ja mov cmp pop mov add rcl fstl clc mov hlt or aaa enter cmc sbb push mov push pusha gs rolb cwtl mov adc add adc mov clc mov clc ja out or pusha cwtl insl add jle ljmp cmp jno push mov or push lahf flds cli stos push loop sub outsl or mov xlat (bad) jmp jne ja,pt add jg nop sub pop pusha adc xchg std pushl jbe sub fisubl pop mov mov push call nopl or mov es or (bad) pop dec mov mov or loop push (bad) (bad) pushl inc sbbl loopne (bad) ja or sbb xchg pop adc sub pop je inc (bad) mov (bad) es sbb xchg cmp ja call add flds test jnp mov fcomps shrb push iret sub xchg pop dec push aam pop es mov sbb lcall loope or mov pop xchg or es push add fwait xchg jo (bad) rolb (bad) (bad) (bad) fbld orl stos aad dec (bad) and add ljmp mov jb pop mov push int3 add clc inc inc decl stos mov mov (bad) jno insl xor fsubs sar or lock xlat jns cwtl xchg mov adc inc lcall push into dec (bad) pop andl sarl into and daa fldl mov cs pusha out shlb mov clc decl add ret sarl (bad) xor push (bad) lea or mov push lock inc ret (bad) mov cli mov adc xchg jmp pushf push mov inc jecxz jb loopne aad pop js mov mov pushl cmp jp mov out lea dec adc jnp fisub bound jmp nop cs mov call push std lods lock and ljmp fcomps sub scas push xchg ficompl mov or test (bad) pusha add mov push inc mov push sbb out ljmp add adc inc pop pop (bad) int3 cmp mov test jbe test nop sub sub inc lods ljmp popa cld xor lret sub jle lahf push add or mov jmp (bad) orb cli mov xchg (bad) push addr16 or mov fiadd mov push loope cli aas je (bad) lret lret repz mov mov lcall adc xor aam ffree jg fs dec ficompl nop out (bad) mov sub rorl jno incb mov add dec cld cli popa ret jmp xchg adc cmpsb jo sar icebp (bad) cmp cld ret add ljmp lds or nop dec fiaddl aas ret out fiadd push push cwtl push lahf adc nop cli dec stos or pmuludq mov push xor jne fbstp inc jnp aam pop or sbb lock (bad) aas pop add unpcklps fcompl sahf mov inc jmp xlat push sbb aas lret mov cpuid addl xchg ss inc add dec xchg adc xlat je test and (bad) (bad) inc jl int3 jb push adc mov mov sub jo dec mov jg push lea xor cmp mov (bad) faddp mov arpl xor inc fisttp aaa or test mov arpl add cmc ja (bad) mov in (bad) mov call push pusha cmp (bad) adc test scas push push sbbl loope (bad) xor je aad fiadd gs pusha out or dec push into adc sarb ds data16 mov xchg (bad) jg lock mov fildl mov and pop lds xchg les pop mov mov fimull jnp xor cmp into mov outsb mov mov repnz les int aad js inc jecxz push mov fmul (bad) add mov inc cmpb pop rolb push push decl outsb sbb (bad) inc in and aaa faddl lahf ret movsb int jb mov xor push pop add mov add scas js inc and fiaddl dec scas mov outsb adc add push add add cs cs mov add add das push sbbb lods pop cmp pop adc xor or hlt xor dec dec adc xor clc push cli nop cmp out jmp rorb pop cmc js aaa fnstenv mov enter lods pushl (bad) popf mov inc mov int3 fcmovnbe inc add int3 or jl add and repnz sbb mov rorb daa into rolb jg add sub fistpl lock (bad) out cmp mov out sbb fsubrl cmpsb cmp addb lods jg dec adc jne ss inc xchg mov sarb outsl adc mov xor adc movl je js cmp (bad) (bad) pop jecxz scas push push mov inc push jb cmp stos sbb data16 in outsl incl ret push fdivl add popf lds push ljmp clc mov in popa fsubs fnstenv addr16 lods loope mov fwait (bad) push inc inc xchg es std jb dec divl add in pop push rol loopne or (bad) and jecxz mov mov ja insb std or pop rol mov adc rcl jbe fbstp sbbb mov cmp call mov repz xor mov xor pop push cmovo data16 ss add push ja test add mov xor call es dec std aaa out and cmp mov sarb push aaa icebp inc clc pop push jmp jbe jp add mov add lods loop adc lahf jb fwait dec dec mov sub int3 (bad) lods lcall push data16 call bound (bad) testl sbb aaa pop mov xor or mov and add mov cld and mov lret xchg leave push aam ds add dec pop cwtl loop xor (bad) les xchg outsb movsb jo bound add movsb push (bad) ljmp rcrl mov outsl faddl loope dec pop enter xor les enter pop xchg inc rcrb clc stos dec (bad) adc jno cld push and sbb mov jns lds hlt lret orb (bad) out es push jae insb jmp adc push fbld jnp popf pop inc add rolb mov add jbe push aas xchg cmpsb or mov sub idivb jle in ret hlt nop or loopne shrb push push into push and xchg ret or mov cmpsl popa cld dec pushf sub cmp adc clc pop jmp aaa or es lcall mov xor divb pop dec popf inc add mov inc lcall inc rcrb repnz push stc ret xchg test inc sbb rolb add mov mov mov arpl popf data16 (bad) fsubrl or push sahf pop movsb into cmc jmp rcll jmp lret outsb cld dec add mov mov or test push fisub loope in clc or push pop movsl int loop xchg dec mov sbb mov rcl and icebp mov ss decl mov dec inc fstl inc or push sbb xchg cmp cmpsl movsl (bad) mov fs sbb push insb arpl scas pop sbb pop fidivr jbe inc jg test fmuls push faddl ljmp sbb into dec nop sub jl sti enter mov test lahf adc mov sbb sbb rorb das test sbb les out push jnp pop decl insb std int3 cmp lcall jno in sub sub mov inc lods into xchg les jbe loopne adc scas adc sahf pop push push jle popa (bad) aas mov pop call cld arpl or outsb pop mov sbb mov addr16 xor or or push push clc mov or (bad) decl or mov addr16 call jne and imul lcall dec loope into add xchg sub fsub jnp inc dec mov xchg mov xchg (bad) (bad) (bad) out out push mov lock fcoml and pop pop cmp shr imul push test loopne mov dec sarl xchg loop (bad) movsb or inc call stos in cmc pusha outsb ss clc test mov or mov xchg arpl xor test stc lods outsl in mov jle mov dec stos jmp push mov fnstsw gs sbb out inc add mov mov jmp pop jl subb (bad) call and (bad) adc adcl mov icebp addl jmp movsb out add ficompl dec adc cmp stos inc in cmp push mov (bad) decl dec fmul and cmp xchg scas inc push das cli clc inc dec jno inc push and ja fcomip pop adc nop jnp xlat inc mov xchg je lea andl roll mov mov mov lods and iret insb inc shrb cld xor lahf enter ficoml out add mov lods or push cmc mov mov das or (bad) out nop lea enter push push (bad) mov pushl into les dec outsb mov push int sub add std fldt gs movsl push jnp add loop (bad) icebp push pop js pop cmp mov or push sub lea stos repnz sbb lea cli jg int3 sbb dec in push push sub into mov ljmp loop idivb fimull in (bad) outsl bound stos push inc jo jbe sahf and xlat fimul inc inc rcr les les ljmp cmp pushf (bad) clc (bad) add dec adc jg sbb jge mov sub nop addr16 mov xor iret push cs pop push incl (bad) pusha mov lds fucom lret xor data16 call or xchg fnstcw adc std mov (bad) mov push xlat ss fldl mov lahf (bad) (bad) (bad) mov or add xchg pop pop arpl and mov push lret cld push aad jmp mov adc sbb (bad) jg andb cs ja mov and adcb call jns jl fimul stos add jmp in enter pop fisttpl jo inc mov sub push xchg data16 ljmp sbb sub es push adc in xchg mov mov xchg cmpsl sbb (bad) jae fimul rcrb addl shll cmp daa sti jo decl pop xor xlat add add xchg roll mov mov std hlt adc push rcl or aaa cmp sub sub mov in notb call in pop (bad) fisttp sbb ret movb xchg fcmovb add inc ljmp fiadd push mov mov shrb inc les fimull sbb es cmp cs jb cmpb push jl fidivrl or push in push fstpt cld fnop xchg test pop (bad) fnstcw je aaa inc (bad) sub add ljmp push (bad) mov je int lock inc clc fcmovnb call je cld subl sahf les xor out push inc aam clc decl loopne cmp nop add or adc or (bad) loopne inc cmp push add bound fmulp xor fadds loop xor pop movsb jecxz adc hlt mov inc jb adc frstor adc out pop mov push fild stc inc sub lods mov insb and jg mov xchg (bad) cmc jno or or cltd test js xchg cli out xchg popa cmpsb cmp daa sbb movl frstor inc ljmp mov dec insl into inc inc jp cmc or pop and pop loop or mov xor ret inc (bad) xchg mov movsb sub jo sub push fs fwait imul arpl sbb into clc out add mov es loop add in inc fs jns aas aas std and (bad) jno mov cmp sbb fistp xchg loope push nop adc inc or jae push out xor add inc lods (bad) xchg add ret xor arpl lods add loope jl jmp inc mov je mov shr (bad) and sarb adc mov cs mov sbb scas nop sub out sbb rolb dec imul mov (bad) int3 jbe clc (bad) fisttp sbb xor fsubrl jp enter scas nop test inc arpl shll inc add mov mov out lods fbstp mov hlt sub mov adc (bad) or push xor fsub sub cmp in cltd inc cs call xlat mov mov nop je aaa and mov ret mov push loope or loopne and test cmp jae or loopne les xchg xchg cmpsl insl and push xchg sbb inc sbb pop add aaa inc or add cmp mov pop pusha out sbb xchg cwtl dec xchg ja lcall outsl ret sbb xchg push push mov push sub push jmp aas lcall add jno adc lea dec pop and mov out inc fs cmpsb iret pop test mov or mov imul imul add xor dec jne sub cs rorb loope dec movsb repnz jge adc (bad) ljmp push jo aaa cmpsb in in mov shrl push adc (bad) pop sbb sub aam mov jbe ja pushf add clc dec adc fiaddl and das ss xchg js cmp lahf jne outsb inc ljmp jg aaa adc (bad) mov push add or (bad) cmp (bad) (bad) mov ss push push addr16 ss inc (bad) cwtl data16 sti sbb cmc jmp mov xor add cmpsb (bad) lahf mov pusha inc sbb sub in incl dec mov mov dec jbe out fdivrl or add add jl test fisttpl and and mov (bad) ja incl jge pop ret fisttpl or repnz add xor rorb adc lahf adc push xchg xor push sbb (bad) das (bad) jle mov push adc lret adc mov mov rcrl inc pop hlt das pop dec pop sbb mov rcll lock je jge dec jae add add mov insb in mov fmuls mov sub pop dec cmp dec dec mov push lods and adc fucomp adc xchg insl jl sbbl lock adc pop mov and xchg pop mov ja pop sbb pop jbe int3 sbb fcoms cli (bad) decl dec enter mov inc mov push mov cwtl and iret bound pop ljmp add and in loopne (bad) mov inc orl ss mov (bad) incl les and jl jnp int3 (bad) jecxz ljmp cs and mov rolb cmp mov and mov (bad) xor popf nop insb (bad) dec arpl jmp (bad) ljmp push not cmp movl push fildll push cld (bad) jb mov or and mov push dec jae cmp mov inc out jg or cmpsb lods rolb sub pusha sbb decl push pusha push pop mov adc ds fnsave (bad) fildll cmp imul insl ljmp push lcall add jle sub mov (bad) cvtps2pi mov xchg jb hlt std jl sti (bad) pop imul push add int sub (bad) pushl cmp adc cmpsb inc cmp pop push pop in jno mov lcall sub inc movsl mov sahf sarl call ds and cmpl inc jb cmp adc jp ret mov stc repnz mov cmp and inc mov sub or movsb fldt sarb movsl push adc sbb or dec and outsb ja jno jge mov lock jb cmovno enter push (bad) ljmp adc xchg mov (bad) rcr outsb sbbl add xor ljmp mov and iret push sbb push push loope enter or adc sahf (bad) mov out pop xor cmc mov out and enter sbb push lock add push outsb rcr negl pop xlat cmp xor pop test push ds xor loope,pt imul pop sti (bad) incl mov inc jg ljmp mov (bad) cmp cmpsb enter push (bad) addb sar loope mov mov xchg dec loop daa cmp xor inc ds aaa in lret adc add inc add xchg inc cld jg dec and jmp daa mov call xchg cld mull imull in loopne or sub nop hlt xor enter push cs fnstsw fstl and jl (bad) pushl add loopne xor ret stos clc pop pop push (bad) mov cs rclb xchg rcr inc push (bad) das cmp cld (bad) or add inc inc adc xchg inc mov sbb icebp aad dec jmp hlt in test jmp sub add imul adc mov or fs and cmc dec into shrb sbb xchg pop inc (bad) cld jb add mov pop adc jg or lret ret loope decl push outsb sub shrl ret and incl pop and pushf adc pushf mov ficom insb popf mov jp mov push enter pop add test xor repnz jmp fcomps xchg es sbb cmp sbb lcall mov mov add pop sbb and sbb pop jg dec popa adc sbb (bad) xor dec mov jl sbb fild push aad xor sbb sti fistpll loopne test mov cmp inc adc dec sub add xor lret jmp sub ja rorb lret movsb xlat les (bad) inc (bad) pop push fucomip or inc hlt add lock dec sbb xchg mov inc xlat sbb xor rolb adc test mov sbb cmpsb pop ret jae insl push call rclb xor adc pop pop inc cwtl dec sub push dec inc push popf sub add std aaa leave cli cmp mov jo push je mov add (bad) mov or adc shr push xor (bad) fidivl xor aam jbe pop mov fdiv (bad) cmp popf sbb cmpl fwait mov ss js mov fstl std sub add adc (bad) bound fwait js fsubrp cs (bad) add insl repz mov adc inc push push jo ds pop (bad) push int clc hlt mov mov xlat cmp and fcomp addr16 sbb rorl pop sub push ss jns adc ds adc hlt aaa inc pop ret xchg push jp outsb jb lods pop cmp add mov ret iret std mov call daa and cltd lea and imulb push out mov call hlt fcmovbe adc insl xchg xorb jle xlat mov mov push aaa xchg and test pop test aad inc shrb imul nop fcomp inc fdivrl lods sub or lods add mov in hlt addr16 mov push and adc sub pop jnp sbb hlt ret jb dec mov mov enterw mov clc pusha mov push stos and jno sbb test roll push movb int lea shrl xchg dec cli ficoml push ja cmpb fs push pop inc fmull icebp popf xchg rcr dec aam xor int test add jle ror fwait cmp fisubl dec loop push rcr or add add inc add out cmpw xchg jge lds fdivrl mov movsl shlb inc inc lds stos dec icebp inc dec (bad) pushl jo adc xlat inc mov jo inc pop mov dec push std ffreep add add ret fwait pusha aaa pop and clc cmpsb push test jle bound sahf ja test mov or adc test pop mov pushf add and push xchg in stos enter dec xor mov add mov sbb add cmp aas adc xor ljmp das mov aam add dec fistpl push adc pop rorb add rclb sub add es mov push pop bound and mov sub pop add mov and or jmp (bad) mov inc test sub daa jl sub jp inc loop cmpl cli ljmp or (bad) ljmp and and decl inc dec or dec loopne sbbl decl inc loopne lcall mov add (bad) aas test inc add loop in mov sbb into push xlat insb (bad) incl or in push pop and call ja test ror aaa mov pop ljmp xor sbb mov incl mov loopne jmp (bad) decl lock inc nop cmp push adc movsb (bad) mov out sub nop fcompl mov mov out stos push pop cmp mov rcrb fisubr add add out xchg or sub inc push inc pop or gs lock lock icebp fldl mov movsl xchg sbb add int jo mov mov pop adc insb xor pushf pop scas push xchg std call pop xchg hlt push outsb and sbb pop and (bad) push (bad) (bad) jg insb mov add mov adc rorl pop rcl and aam call test cli popa inc sub or loopne lods or pop mov (bad) aam fildl lcall ss jae pop ljmp xchg and sbb call jne fcmovnbe mov nop addb ss shll lock and int inc fisubrl sbb out and lea mov and pop cmc out mov test data16 sahf push mov xchg hlt add js jg ja stos jno mov lods pop jg stos or add sub call (bad) xor (bad) pop pop pop sub mov test push movsb mov push dec (bad) sbb xchg mov rclb xchg imull lods pop mov add out and jg lods inc cs pop mov xor pop rcr adc les xchg cmp insb and or out imul out mov mov loope hlt and xchg aas push adc fstpt mov add cltd outsb aaa loope dec int adcb push lock or and sub adc cmp ret popf cltd inc pop inc sar flds lds push jge or pop dec inc sahf and and inc and enter mov mov lods or mov jne xor scas addr16 xchg or push cmc loop aaa ret pusha ss arpl sub pop add mov idivb mov mov push add mov jmp adc pop mov or jmp test jg mov iret xor movsb fbstp dec in sub shll dec (bad) neg adc dec mov fbld push adc mov stc mov in rcrl inc mov int cmc data16 aam in dec xlat fwait or xchg into or cmp (bad) (bad) mov and add outsl subb mov pop push mov sar subl shrl mov mov adc jle dec fild sub ret pushf adc loopne jecxz fisubr les in inc lock mulb jmp mov jmp movsl mov aad pop mov add stos sub add (bad) mov cmp cli xor enter xchg mov mov (bad) xchg inc sbb add ret bound loop ret push mov das clc fisubl cwtl les xchg test xor or push cmpsb fs icebp push or pop int3 mov (bad) dec insl jg popf xchg ds cmpsl pop (bad) mov and sbb aam pop sahf dec inc loop jp orb mov mov out lret add fldcw xchg mov mov je pop stc xchg ret mov xor popa std (bad) jg push xor add xchg add mov and xchg mov repnz (bad) push test lea test lahf dec shll clc or jg sub (bad) sbb jbe (bad) sbb adc aam jae push mov (bad) (bad) lcall (bad) in pop ret les sbb ljmp and push inc pop add cmp flds dec ficompl pusha daa xor stc pushf jns ss fcoms (bad) (bad) lcall clc cmpsl mov mov pop in rcr inc or in add bound xlat xor insb jl lods fstpt test decl pop movsl or ret (bad) and mov jge lea cmpsl cmp rcrb push mov daa sub and leave cs icebp fbld push js test cmp pop lods (bad) (bad) call push pusha sbb call inc xor in mov jnp dec lea (bad) aas xchg clc cmpsb push out lds sbb mov adc adc call nop ret dec mov imul adc cmp cld sbb lahf xchg js mov pop aaa xor adc lret into in cmpsb add dec jbe pop hlt fwait add flds outsb aaa or sub fnstcw fwait dec imul clc xor pushl les sbb mov inc in dec ja push decl pop cli (bad) cli mov sub inc nop lahf mov fbstp jmp mov aas sarb jnp ljmp js jmp jecxz add push sti (bad) (bad) mov enter rcl add sarl xor sbb das jne subb ret cld add cld jg push sub xchg pop cwtl out and call push inc cmp inc or int3 popa pushf sti (bad) or fild xor jmp cwtl daa dec imul cmpsb push fdivrs push dec insl xchg outsb pop sbb pop push je push xchg in and mov inc mov out add or frstor insb outsb cs jns lcall push inc mov add cmp jecxz fdivs xchg mov iret push mov adc les add clc (bad) aaa inc aam and sub mov jo cmp cmp push shrl sti hlt incl (bad) cmp sub pop adc cmp and add cli sbb and sub fsubp jmp sar pop push call dec fimull enter test roll stos pop je adc mov inc cld dec pop inc adc pop mov je test cmp mov loop inc adc icebp (bad) (bad) jg cmp aam fwait sub dec cs add ljmp jle jb movsb (bad) jno fistl sbb pushf cmpb jecxz rol jb fdivl inc pop pop int3 mov xchg insl push out add adc fbstp push inc and dec or lcall loopne add push insb lods dec out mov adc (bad) xor inc push jne cmp dec add call hlt jnp add test enter mov aaa sbb inc jae jmp gs aam mov mov add xchg add push and adc xor (bad) mov add ljmp jno test out xor and or cmp mov and test fild push inc mov in ret dec adc xor add les pusha push popa movsb and lcall hlt sbb insb (bad) out cs arpl jo adc daa insb fimull or insl add adc mov dec mov inc cli aad inc rolb push dec js test dec sarl movsb dec inc push lcall test rolb out and mulb out fnop xorb mov (bad) cltd or dec fisttp incl jns jo mov and xchg sub ret out repnz adc adc (bad) mov adcl cltd mov ret sbb ss jmp in outsb add mov push aam lock insb addr16 (bad) aaa mov cmp and js fs push or inc mov flds inc add push sbb sub fbld ret inc fimull inc sub or mov dec xchg sahf push inc cmp cwtl mov inc pop (bad) ljmp mov sbb fs push xchg add adc push jp sub icebp ss (bad) aas (bad) bound jg rorb nop pop loope out xor pop push ret loope leave push out lods dec pop clc mov or xor cmpsl icebp aam fwait out fidivrl nop aam push jns lret aad loopne imul xchg popa sarl xor (bad) aaa in fiadd jmp mov sbb fdivrl sbb ret xor cli mov pop mov push push xor mov mov test fsubs pop or pop dec push push or inc outsb ret (bad) mov (bad) jmp ret std enter stc adc mov jb (bad) xor add add int pop or xchg sar sti sbbl stc (bad) jp push mov push in add push mov (bad) notl add std sbb (bad) dec aas xor xchg inc out nop add icebp ljmp ficomp sbb test cmp scas out or movsb sbb add mov or jmp adc aaa popf dec xor jg bswap xchg pop inc mov xchg fstps insl inc mov and or adc rorl dec sarl mov or pop add push aas dec nop dec (bad) fwait sub push (bad) push push sbb ret inc mov (bad) jg ss sub sbb or shr rcll ljmp push orb sti add push out cld (bad) jmp inc pop (bad) mov adcl jae adc pusha call and enter push dec dec jns das mov outsb cld push lock outsb adc jno mov mov xchg sahf inc divl cmc jmp mov sbb ret insl cwtl lock loopne inc mov rorb xchg and cmp nop add cld and scas mov mov inc mov ret pop jl xchg (bad) sbb jo jae outsb lcall mov cli xchg (bad) push xchg add sahf xchg aas js aaa add dec out push cmpsb cmp rolb pop lock clc pop and cmpl or mov mov xchg aaa xchg rclb (bad) xor mov mov pop or mov xorl jge,pt xorl sub mov movsb insb call rorb insl mov inc jmp sub (bad) cmp or sub js bound ljmp cmp jle popa mov add mov jmp inc cmpsl test sbb push (bad) jg cwtl (bad) jae xorps pop and xlat fisub call cmp mov inc (bad) cld jp ret mov add call mov pop rclb push push jbe (bad) adc call jl test aas movsl add cmpsb sub daa jle ljmp mov inc cld pop ret lcall outsl (bad) mov adc jne xchg pop mov dec xor mov stos movsb pop xor arpl xor outsb push ret dec pusha push mov ror jg xlat push addl out xchg sbb test dec inc and in inc cmp xchg movsl std clc xchg or enter ja inc lahf mov iret cld (bad) (bad) ljmp pop mov into push sub popf insb outsb insl xorb or pop lss mov cmpsl popa cmp loopne sbb jmp cs mov lock push inc dec imul fstps sbb cmp mov push popf dec or rcll mov clc in lds mov add mov xchg inc inc aad pop daa jl add cmpsb movsl ja sbb cmp mov hlt ljmp xchg jecxz mov (bad) cmpsb (bad) enter (bad) lcall outsl push mov jge popa mov mov mov (bad) (bad) jle sbb insb gs dec ret lea aaa sub xchg adc sarb outsb rorl scas dec rorl (bad) icebp dec outsb adc (bad) cli adcb dec or sahf inc clc (bad) lret fs (bad) ljmp call (bad) loop repz pop pop movsb pop shrl jno push insl (bad) push fdivr fwait or or cmc sub push mov lods inc fbld test enter hlt xor clc stos dec sti xor xor sahf fwait mov dec scas mov fcmovbe xorl sub mov fisttpll pop cli jg out xor inc inc ljmp pop cld and outsb or and jmp loopne add shrb pop rcrb aaa cmpsb jl mov fmuls stos xor mov (bad) cmp outsb jo mov pushf (bad) xor and xchg out aam cld xchg add jmp insl and mov jo outsb add je loopne (bad) call (bad) fistp cmp push jo popf test or add inc cmp mov in fdivs jge sub sub idivl mov mov inc (bad) sbb es jmp pop dec lret push pop xchg pop imul inc xchg dec je ss dec pop aaa (bad) cli call jo add sbb call mov mov outsl adc or jbe test inc cmp cwtl stos mov (bad) adc pop fcom and xchg outsl jle or dec (bad) xor pop jae in lcall fnstcw fwait cmp inc fisttp adc adc sub decb aaa fadds sbb mov hlt and aad rcll mov adc cmp sub push jecxz cli pushl jecxz and push fwait inc test test or xchg sub push movsl adc mov sbb xchg (bad) xor xchg mov adc movsb xor (bad) fcomip lea mov (bad) loopne add aas int mov mov pushf adc jle fs push loope popa fcomps adc and jecxz stos lock pop sahf xchg addl outsl and (bad) jg xchg xchg dec arpl xor cli decl mov or incl clc data16 cltd mov roll addl add cmpsl add into notb jp into inc jg insl add daa mov add ror mov mov les test imul (bad) test fstps mov loopne push inc pusha xor ss lahf dec and sub or das xchg lods xor pop sahf addr16 or pop pusha sub inc jnp mov cltd mov les lock rcll dec hlt jmp or push mov mov push or add (bad) mov (bad) pushl xor adc lods or add add pop mov push lods xor mov iret mov or add and sbb lds sti ret mov adc popf outsl and call sahf sbb jmp lock and cmpsb jge or lahf stos shlb cs aad (bad) cmp push mov nop pop push gs jle mov cmp in and es gs lret xchg push rorl mov or lahf fistpl jb (bad) jg push add cmp (bad) mov add cmp adc fadds xlat das cmp adc aam pop pop lahf in cmpsb or and or fsubr lcall in xor adc dec fcom sbbl and or js jmp inc mov mov insb add mov mov adc fs cmp (bad) outsl push pop adcl push das push (bad) imul push inc mov sbb lods lcall mov adc sbb sbb adc adc sub (bad) sar and mov mov subb xor call lods jb cmpsb out push add neg or leave imul or or jbe inc inc add xchg and cwtl in fwait (bad) fiadd xor mov fstpt dec inc fsubrl stc mov pop pop mov xor sub cltd mov add dec loop in movsb ret mov daa add or xchg cmp pop cmpsl jb xor xchg add xor (bad) imul sbb cmpl std lds movsl add mov mov mov dec in loop sar mov xchg fcoms xchg jae inc pusha xchg or (bad) mov lods test fwait mov xor xchg mov stc int adc push nop sbb lods inc add mov and fidivrl addl mov adc pop dec cltd and into pusha (bad) call jb pop outsl js scas inc aas add dec das mov pop sbb push dec (bad) and or sub pop ja aam into stos mov les idivb outsb nop andl cli inc mov and loop jbe sbb add add lcall and (bad) jmp (bad) hlt pop adc (bad) and idiv push gs ljmp jmp jp imul adc movsb adc push cmp aas push lock mov pop sub leave incl popf out in shlb call cmp pop push lock mov inc popf call add mov ljmp gs and dec into (bad) pop xchg adc stos fwait pop test mov aaa stos inc fimul loop and mov (bad) mov cld adc jg mov lcall sti (bad) mov add rcr jbe xor stos inc aam test cmp push aas addr16 test (bad) lcall iret adc adc iret aas mov roll in sub andl add mov pop push lcall mov ds sub mov rcr loopne std call enter insb sbb sarl mov daa mov sbb xor repz lock imul sub cs fiadd clc push fbstp negl dec add rclb dec add mov mov test mov call xchg xchg pushf fcmovnb fiadd mov jmp les jge nop mov sub shl (bad) lods ss sub adc jg je cwtl outsb jmp mov sbb incl fsub orl (bad) stc add movsb push aaa or pop es loope jmp orps (bad) les pop data16 hlt sub es (bad) lret cmp in xor out sbb cmp jg dec cld and pop or mov imul outsb bound push pushf out jo icebp (bad) jg xchg sub call cmp sub dec scas xor in mov clc nop cs je js (bad) and fwait pusha dec pusha sbb mov decl (bad) out ret sub add xchg lcall push aaa rolb adc ss push mov mov jb adc fldenv inc std mov adc dec mov pusha mov add push andl (bad) outsl adc push loop pusha psraw pop clc stos test mov push mov cwtl xor jne in mov mov add arpl fild das inc shlb or bound xchg sub bound in les mov into cltd fwait mov icebp ss pop xchg cmc push adc and mov fldenv fildll mov mov mov ret hlt mov push stc popf (bad) adc pusha jae adc lfs leave inc sub xchg mov push xchg addr16 xchg stos mov cmp cmp mov inc ss xor cli jge push nop pop mov arpl and mov fiadd arpl clc out xchg or das ss sub sub inc push cwtl sub fist and out (bad) imul mov dec lcall dec jle decl jmp hlt movsl sarb mov cmpsb mov push mov incb mov (bad) (bad) mov imul loope push jne ret test subl and clc (bad) mov (bad) jle or shrl xchg call clc (bad) jg daa cmp jp and mov lret mov add es (bad) mov loopne idivl scas mov loope adc pusha inc cmp out xchg test or scas jmp push jns stc push xchg push inc orl sbb mov or mov sbb decl pop mov (bad) cltd xchg sub (bad) pop je jbe in imul rorb ljmp adc adc std aaa shrl rcrb xor jmp sbb cwtl cmp mov test inc xchg fdiv pop (bad) inc pop insl je fistp das mov xchg push inc jp adc into mov or adc xor outsl xchg push adc mov les fmuls pop imul push mov (bad) push sub std je push insb mov pop jbe add xchg lock pop rorl (bad) push pop cli lds enter in pop cwtl in push lock push ret add push xor ja (bad) pop sub repnz sub imul xchg cmp pop lret shrb in rcll in aas sbb sbb fcomip or pop popf lods mov lahf int3 jl add adc or push xor pop push (bad) popf sbb mov shrl mov xlat push outsb adc lcall mov jb jl sbb fldl jp out sbb scas rep ds (bad) mov sub or cwtl and sbb icebp call pop jne fsubs xor jns push lret cwtl fildll push pop cmp jnp ljmp mov fstpt movsb xchg jg in jge jle (bad) packuswb jbe dec (bad) fs dec add adc leave ret adc sub mov movsb pop xchg and aaa cmp jp movsb in xor or jecxz add sub data16 aaa cld int3 inc out ds ret push aam jbe cmp or (bad) xor in adc (bad) hlt inc pop addr16 test pop mov pop int pop dec push pusha mov inc addb pop aas or sti pop and lcall and or push fcoml adc fcompl xchg xor dec movsb cltd jnp insl pushf enter ja cmp rorl jbe rcrb hlt nop xor lret leave pop out jo sub popf ret call les loopne pop (bad) xor clc push xchg loope fucomi or clc jmp or add mov inc sbb mov out inc mov pushl repnz cmp (bad) jno mov or push push test pop and leave add ret lcall jg cmp inc test (bad) push cmp cmp mov (bad) jle cmpl insb mov nop mov mov push iret sub xor retw in je iret je int cmpsb push add rcrb sub ja inc hlt pushf fstpl or dec mov jno mov fcmove (bad) ja cmp shll fcomip sub inc push (bad) cli cmp push (bad) pop and dec or dec sub in sbb pop out adc imul dec pusha imul mov inc mov inc sahf and scas and mov pop inc adc add add shr out decl pcmpeqd and hlt and inc jmp ljmp pop or mov loop fcomp pop sbb fbstp ss sub dec int3 sub icebp movsb out and lret je push aas add add loope lahf mov call add mov (bad) push jbe test (bad) lock mov loopne (bad) adc adc pusha std push add addl jo pop push es aad inc rolb fidiv inc push rcll les mov ja ss cltd aas (bad) sbb imul add pusha pushf adc scas es ja daa outsb hlt push or xchg add lahf jo adc push dec sbb mov fisubr addb cmpsb lret mov and jns mov add xchg sub pop arpl stos cli decl inc outsb clc jb fidivl sbb ret js out lock push push fstps mov imul (bad) scas and inc adc cmp pop (bad) and mov test (bad) in popf int pop test dec sub (bad) out js push adc (bad) (bad) lcall jle fwait mov inc xchg or leave sbb popf call mov in pop add mov js decb mov push dec mov fnstsw push cmp mov mov call (bad) das jp bound mov push push nop enter dec inc lcall sti pusha jbe (bad) lock aam dec insb pop gs xchg aad pop orb mov dec insb mov test mov ljmp mov (bad) xor lcall mov cmpsb icebp outsl lock arpl clc dec les xchg add or cmp mov pushf popf inc int je nop or and incl fsubrs xor cmp cwtl mov les scas mov push loope cld cs xor dec ljmp xchg sbb (bad) mov jmp ss jge rcrl push loopne ja push mov mov loope and and outsb lret stos or cwtl and adc dec cld (bad) inc cmp push test sbb je outsl out idiv scas adc aam repz push hlt pop and lea pop adc mov adc imul es je hlt jne in cmp and (bad) mov and push aad sbb je push (bad) fisttpl mov fbld dec ds push dec mov jns xor stos decl and in adc das mov rcrl test adc add mov call cmpsb aaa sbb mov cmp mov jl pop xor loop call dec sub dec call popf sub insl cmp rclb mov push fnstenv (bad) sbbl incb sbb jne inc inc loopne push pop (bad) sti or icebp mov pop sbb lods or stos mov jno aas dec pop cwtl xchg pop or xchg mov incl push int push mov adc jg fdivs adc inc inc pop ja loope ss (bad) push fcoml add push push (bad) fwait add dec mov mov sub inc cmpsb pop cli sar and jge call test sbb clc jg dec popa mov mov fnstenv jmp (bad) xor movd pop aad jmp mov add pop fdivl ret mov gs push jo in fucomi adc int3 jno call sub scas pusha (bad) jb xlat lret push pushfw inc and icebp sbb divb popa std sbb inc outsb pop jae fisttp jg fisttpl or punpckldq iret addr16 push xchg lods push repz (bad) and sbb mov push out adc jno loopne mov add jl sbb push xchg fcoml jg std pushl addr16 cmp inc (bad) adcb (bad) jg sar movsb jge sbb mov fstl inc push enter in int std dec add sbb xchg push add mov add mov xchg pop test in dec (bad) jno lods or frstor pop lret mov fsubl ret mov fcomp mov fwait ss in sub pop xor inc ljmp daa fcoml pop movsb mov jp sbb or sub (bad) incl lret aam sti or pop std pop and mov push out xchg pop push jno lcall mov sbb (bad) (bad) jg fidivrl test or sub and data16 ret (bad) fwait sub sbb mov pop mov stos xchg pop fdivs jecxz lret mov push out js or pop push popa cwtl cli mov jo dec lods or popa (bad) xlat or clc push mov imul sub pop in insl adc mov add clc cmpsb (bad) (bad) cmp dec stc insl lods roll mov aad add repnz cld cmp ja lds mov bound cmpsb (bad) sub scas push push sub jecxz pushf pop rolb lcall les outsl mov mov push into dec clc add lret test lds mov movsb and pop sbb daa add push and mov xchg popf xor mov adc jp sub lcall cmpsb mov insb sbb adc sbb dec rorb mov sbb fcomi mov mov inc std dec pop mov fucom outsl cmpsb movsb inc cmpsb mov push in int3 xchg clc ja hlt cmpsb pop push cmp aaa dec nop cli call add inc add cltd loope fdivl add mov pop in cld pop add mov sbb ljmp in and fmull pushl insb lret jg cmova jge add outsb cld add jl or xor and xor js inc test loope mov fdivr mov cwtl mov stos mov pop jg pop repz outsl add es xchg jb das jbe stos mov cmc push fnstcw int3 jne les jecxz (bad) fmuls push add loopne xor dec fbstp add mov adc movsb cmc dec mov mov mov inc ds popa insl sub sbb mov dec nop loopne xchg inc jb sarb decl (bad) sub push xor pop mov inc (bad) out add mov addb or pop pusha cmp cmpsl mov out fldl fistpll jno dec or lcall add jmp hlt loop out push test inc jno in ret (bad) cld mov into sub insb pop cmp pop sub or aas rcl pushf or nop push xchg cmpsb add cmpsl std mov jns test popa xchg fdiv aas inc mov mov cmp ret (bad) or mov push cld lods mov mov adc clc or add push popf jl add es mov fbld mov push mov push lcall inc sahf fisttpl (bad) xor (bad) ficom loop (bad) cmpsl sbb (bad) outsl stos imul mov adc das add int adc hlt cwtl aad fdivp or mov sbb fistpl (bad) fimul (bad) decl mov ret cld push sbb movsb push push mov out jns push sti outsb sar fsubp add xchg xchg pop aad ljmp xchg (bad) xor pop pushl hlt rorl xchg jecxz or lcall in stos clc mov push lock stos test cltd push call (bad) fbld rcr mov jmp int3 lret ret mov inc loope rcll xor cmp pop (bad) xchg imul jmp aam cld test rorb xorl and out mov icebp rolb mov in repz inc or icebp dec in xor mov dec xchg xchg sbb mov jns stc sbb loope and xchg cli sbb add lock jecxz (bad) jmp clc push sbb jmp add jmp xchg or xchg pop outsl js (bad) aaa ljmp lcall ret lahf fstpl outsl movsb mov pop orl pop adc loope insl (bad) loope cmp xor jg clc add or outsl adc cmp xchg mov mov push lods add incb nop sbb das aaa push adc cmpsb mov adc sbb xchg cmc lea jbe rol xchg push icebp mov mov call mov jmp mov lret out or arpl inc inc xor inc sub adc pop adc mov sub stos test int3 aas sub pop (bad) ret push adc jg es dec mov sbb hlt adc mov add add adc pop rcrl cmpsl mov push adc sub sbb into sbb dec or test aaa (bad) sub push outsb into pusha stc add imul mov shrl (bad) fsubs dec pushf dec cmpsb jg inc notl test aam popa lret je inc stos add lods jecxz sbb outsl movsb hlt xchg lcall (bad) out outsl lcall fbld dec (bad) xor jb loope or jne out (bad) out scas cmp rol sbb data16 jp pop jbe into mov jmp ja sbb push ljmp int jo sahf or lock push mov push xor or xchg rcrl (bad) das add addb cmpsb lock mov rorl pushf ljmp inc call push mov pop call outsl pushl or int3 mov movsb sbb sarl fistpll jecxz add scas add (bad) ljmp mov mov loopne cmpb out jne sub aas cmpsb add pop je pushw mov inc mov sub mov push push jp dec jae dec pop bound hlt lds mov rcrb addl mov mov push ret and dec movsl test mov lods pop or fstpt insl mov into (bad) fadds jo (bad) (bad) (bad) jg (bad) sbb insl pop sahf sub cmc sbb int3 mov inc sbb inc arpl and and insl or out jge bound loop inc movsl iret (bad) adc cld xchg les stos cmpsb mov mov arpl jp xor jno adc gs repnz mov sub push popa call or (bad) jg mov icebp inc shrl ret ret sbb mov ja loope out inc rol dec sub mov stos cmp or jg (bad) mov (bad) xor fisubr out mov aaa or cld xor mov jp and add pop push mov or push pushf fildl xor mov xor mov inc (bad) xor xor fsubr sbb lret lcall ror aaa roll rcl faddl ret fist jge or cs addb jge rolb and (bad) (bad) mov or add sbbl or push mov lret (bad) fldln2 mov sbb outsb das ja and scas int bound adc xchg clc sbb fxtract (bad) js insl adc inc nop insb jae (bad) incl int cli lods jo mov cmpsb loop cmp push and mov add and insb enter jl or in (bad) call mov cmp cltd sbb dec movsl shlb pusha imul mul mov inc push cmpsb (bad) mov iret adc popa insb add cvttps2pi fwait push dec (bad) repnz (bad) (bad) movsl mov stc xchg inc jl data16 rcrl add jg or cmp jae jbe std test nop call js insb pop inc es mov fdivrs and (bad) (bad) ss push adc inc insb push adc movsb mov cmp fistl insb std ljmp mov cmp cld pop sbbl xor dec dec jecxz js (bad) mov mov xchg jmp cmc mov ret push or mov mov sahf and mov inc jnp mov push jbe cmp (bad) mov ja rol testb (bad) int3 sub cli mov lea dec mov adc xor xchg andl jecxz push call dec cld sbb xchg cltd movsl mov add mov ret cmp inc jae (bad) mov gs aam mov outsb cmp loope add into test xor or xchg or js hlt or shrb push ret jg shr (bad) cmpsb loope or dec imul clc das push shll cmpsb je incb cli xchg sub push pop mov adc popa ljmp or mov jo test sarl (bad) (bad) jmp negl or cmc adcl and xor gs jecxz or sbb push (bad) lds fisubrl hlt lahf (bad) sbb mov jnp push test jne fisubr lods (bad) in fistpll sbb jo xchg inc jge ds (bad) (bad) stos pushf pop mov xchg loopne xchg adc push add aam mov mov jnp add (bad) (bad) mov maskmovq negl (bad) std mov push adc in cmp in adc mov mov stos mov fstpl addr16 je ljmp adc xor iret (bad) xlat aas out or inc dec mov in es add popa mov mov hlt add sbb dec jnp inc lret jecxz hlt pop outsb (bad) push sti mov dec rolb xchg (bad) enter or mov push add mov push jno fstpt sar (bad) jg sarl push icebp pop sub ret loopne or std fmuls aam shr xchg in (bad) (bad) dec das and jbe fwait dec ljmp cmc push add inc and shrb mov push cmc xor (bad) mov jmp pop cmc or ret sub mov test add or call fmuls loope or sub pop nop ret jmp int andl (bad) push xchg mov xor ja dec push stos or popa std inc pop clc inc clc jo jno (bad) add inc inc mov scas xor pop icebp aaa (bad) jo fwait addr16 (bad) fsts xor aad (bad) stc sbb ds and mov cmpsb sub test inc pop daa pop mov sar (bad) out rolb cmpsb shr push fs mov mov jecxz jle lock stos ss (bad) jne jbe xchg sbb aam test push sbb fadd mov (bad) pushl xchg fdivrs out std lret js or test ja sar scas test test xchg popf nop inc inc adc cld scas jg sbb dec jle pop (bad) xor aas mov aaa adc mov ss adc imul add aas dec mov call jbe dec mov stos scas into push jnp xchg push xchg (bad) cmp pop mov and outsb mov scas movsb movsl mov das or inc stos call fisubr loop dec push and push arpl dec adc repnz xor add push cmp sbb inc aas aam sub sahf (bad) and xor adc js fs rorl sub (bad) pushl or push push jnp pop xlat ljmp rcrb fnstsw scas cli jecxz aam jmp test stc ret lea pop outsl add pusha mov add mov je mov (bad) mov inc or add loop pusha arpl (bad) cmp mov repz pop mov pop fsub pop mov call insb and inc mov mov push iret xor jl dec cld rolb iret dec push pusha cmp jp add cmp jge mov inc inc test (bad) or movsl inc add or (bad) mov js (bad) jmp addl sahf xor loop add sub insb push lcall mov or push imul repnz incl imul xor or call cmp or mov xor pop aaa add sbb xor es imul out pushf mov inc dec mov cmp mov adc decl lock sub (bad) jno add mov (bad) movsb es cld inc cmp aas push (bad) ljmp sbb jbe fiaddl loope pop fisub mov mov mov fisttp xor int3 add lods jge std (bad) pop xor or (bad) jg mov fsubrs sbb mov les loop sbb pop push dec lock fistpl cmpl out push loopne test mov adc out mov add jg cmc das mov outsb iret cmc outsb leave mov pop mov lret sub scas and push and (bad) leave cli scas or mov enter gs outsb cltd aad aas lock jb fimul xor xchg movsb rolb mov and and pop jp or decb (bad) fsubrs or clc test wbinvd inc dec pop push (bad) sbb andb pop adc ret (bad) push add nop pushf (bad) aam hlt lcall insb (bad) ja inc pop xor pop pop cmp dec ficompl ja push xor and mov and dec xchg xchg cmc add fisubr adc push dec ret ss sbb fcomps adc sub lock xor (bad) mov std (bad) jg insl jl lret popa (bad) (bad) movsb add inc and (bad) and mov mov add sub dec push roll test pop and jl pop inc and shll sbb cli sbb stos pushf ret pop and jb cld xchg mov fidivl pop adc mov insb dec add (bad) xchg push data16 xchg mov add jg mov pop fwait inc cmp out ret add mov sbb (bad) sub sahf push fld jge jbe add in loop and fadds in lds inc shlb dec ret bound adc loopne push int3 daa aam mov fidivr lea dec das cli in or push enter je pop xchg aad or cmp adcl adcb adc pusha mov add inc jne xchg fdivrl sbb movsl adc enter push ja in push xchg sub dec mov mov cmpsl push xchg cwtl les and and (bad) aam adc aaa adc (bad) mov dec imul aam icebp fst xchg insl mov and lods mov mov dec cmp fs adc (bad) jg mov push inc jmp cwtd add inc add cmp xchg xchg sbbl jbe ja (bad) jg xor add ss (bad) mov dec mov rolb pusha mov add ret pop ja hlt mov shlb (bad) jmp pop push xlat inc pop push mov sbb jl cmp (bad) mov mov pop mov out lods push lahf or pop cmp sbb sbbb es lods jmp cmp sti sbb push adc xchg and pop clc adc sbb sbb lcall or test adc pop (bad) pushf out decb inc jl mov xor and fcomip sbb pop (bad) cld mov or pop (bad) aaa ret mov roll mov push mov stos insb sub sbb (bad) push mov adc (bad) xor fdivrp inc sub ljmp outsl pop lcall inc repz or cli push jg (bad) cmc fadd popa jns add sbb or lods sub ja pop testb dec mov add sub cmp and ret pop or (bad) and inc imul mov popf cwtl subl lcall xor adc pop fs arpl fdivr adc popfw icebp lahf add adc xor cmp incl xchg mov push fst push aaa fistl (bad) mov loop in inc push pushf in xor outsl mov aaa mov cs lods dec push mov stos or mov cmp subb ljmp imul inc push decl ds push mov icebp dec into out aad stos call add (bad) pop out fwait mov loop mov pusha push idiv decl popf and (bad) or (bad) in sahf rcrb loopne push add pushf or hlt push adc ljmp cwtl lret pop std aad (bad) mov dec inc or sar (bad) jns push aas test inc nop insb lock inc and mov call nop jo mov mov inc or ljmp adc js cmc xor ret clc mov pop and ljmp or sbb dec stc (bad) and adc dec fidiv les arpl ss mov jp (bad) inc inc inc ffreep fisubl imul ljmp lds fs cwtl aas subl sbb out hlt jl lahf ret mov aaa loope fs push imul jne ljmp dec stos (bad) addr16 mov loopne jecxz inc or cmpsb (bad) pop xor (bad) adcl push mov xchg sbb pop add mov gs inc dec scas sbb sub sahf adc xlat xor nop jg sahf loopne add sbb lcall mov jbe (bad) lcall divb out xchg dec sbb xchg or mov mov mov dec mov idivb mov jecxz pop aaa fstps mov loop jno loopne rcr out pusha adc mov add int jge push dec mov cmc dec cmpsl jbe inc mov aad xorl push or push push out les cld (bad) mov lods mulb or loope rcl in jg or pop xchg xor ljmp (bad) imul adc pop sar ja les dec fmuls push mov and and inc pop jmp pop or sub dec dec push inc ljmp inc adc insl dec test pop sbb mov sub loopne push ficompl fildll pop test jno and jmp nop or push and jne jl xor cmp clc sbb push (bad) jae inc popf push pusha mov mov and push inc push pop mov cs (bad) cmp dec cmp adc imul mov shrb loopne sbb imul lret xchg push mov sbb lds lret inc jp dec std dec ret pushf mov fsubrl jns (bad) aaa sbb jbe sbb push and es loop daa mov pop test mov mov insl push sahf call inc (bad) (bad) fbld out ljmp fs adc pop xorb ror je push jno das decl lcall shr ret xchg out clc ljmp jg in out js cmp stos adc pop dec cli lea sbb mov mov push es sbb (bad) decl mov jecxz adc test bound shl inc out push inc add jno stos lock loopne add or (bad) aaa mov shr jge (bad) sbb cmc sbb mov xchg pusha les idiv fisttp adc dec ljmp (bad) loopne cmc lcall jo mov popl dec xchg (bad) xor sub je es sub add decl dec js lea psubsb enter shlb lahf xlat and pop adc loope (bad) lret adc movsl cmpsb pop push outsl mov sti (bad) outsl cli scas add pop addr16 jp jne jle cmp jp out xchg mov out push int3 xchg inc mov or repnz jbe (bad) jg das xor (bad) imul or cmp out test jbe adc loopne mov xchg out cmp dec adc and rcrb push inc in jbe lods (bad) fcmovnu hlt adc xor cmp lea sbb sub or or sbb rolb sub dec int3 xchg sbb xchg mov mov std mov sbb push fs fdivs iret pop lock jg sub jge push and fmuls add or inc xor fnsave pop popa mov cmpsb out or ljmp lods mov push cmp lret cli scas jb in add add cmc inc mov decl xchg leave add add or cmp pop push or ret (bad) (bad) clc test mov inc sbb mov ret inc jmp decl mov andl inc xor and and das cli movsb clc cmpsl sbb xor jae jbe clc and shrb mov (bad) fcomi and outsl scas mov jecxz aas scas ret popa xchg insl leave mov call out iret nop and mov pop and xchg (bad) push sub pop add movsb jne pop and stos push jle rorl inc movsb leave shrb pop nop mov xchg popa jbe test jbe js lret mov sbb arpl push gs (bad) dec (bad) lret (bad) (bad) cmp repz sarb in inc mov pop xor lret jbe fistp sbb imul jns xchg adc mov mov rcr push scas push jmp sar cmpsb test jl repnz gs pop icebp int3 cmp loope add and add pop sub stos test xchg sub icebp jmp bound add sub mov fucomi repnz mov cmpsb xor jne add test or mov dec js jns inc xor or movsl push jno test ret testb outsl mov mov pusha arpl je int notb mov or or and (bad) sarb ss push nop jne shrb sbb call (bad) jne xor icebp inc dec stos pop inc int3 (bad) arpl lea cli outsl cmpsb or and fdivs flds test outsb sbb and outsb ljmp sub pop add hlt or std add xor xor jmp mov mov insb les cmp and insb (bad) sbbb or mov xchg (bad) pop mov xorb outsl add xchg dec jo cmpsb mov movsb nop jbe push sbb lea sbb inc aaa imul aaa cwtl test cs ret popa mov (bad) ljmp scas xchg fstpl rcll pop lds fs or ret or sti pop addl sbb ljmp movsb push cld dec (bad) push nop arpl das adc cltd cwtl loop jg aaa sbb (bad) adc shr pop int3 insb rorl sti into movl pop aaa sub xchg imull push adc dec sub loopne xchg leave push (bad) scas cli add pop mov int mov popa or cli fmulp pop clc jg xchg (bad) xor cmp sub nop (bad) call and and shld inc add add das call push ja into sbb jmp les inc (bad) rorb aad lahf jp outsl jg dec dec das aas (bad) inc dec (bad) jecxz call pop (bad) and add imul ja xchg into roll xor fisub add xor cmpsl pop (bad) sub rcrb mov aam lock inc jnp sub inc pop or and pushl mov loopne cmpsb das sbb je dec popa and xchg pop adc pop cmpsl adc push inc dec and (bad) or add repnz insb fisubl mov mov and inc les hlt pop xor push cmp jecxz movsb es mov dec dec pop mov cmp arpl cmp push mov add call pushf std incb fistpll pop int3 aas lea cwtl dec cmp rcl negl cmpsb mov inc mov jmp push call sub xchg push ja pop icebp jg mov mov fcmovnb jbe loopne pop push sbb dec or loopne sub jecxz dec out sbb jmp mov cmp xlat outsb push mov cmp (bad) jmp ljmp or xlat xchg enter imul (bad) (bad) (bad) (bad) fmull rcll xchg loope dec jp arpl flds push (bad) dec add ja int3 stos cmp (bad) mov (bad) cmpsb mov fwait js fiaddl push push repz test add cmp mov outsl mov (bad) shrb xchg cltd fcomip jg sbb pop call into mov add mov rclb outsl add test xor hlt mov imul dec ficomp (bad) sbb cmpb add dec jl sbb cltd sub dec jecxz repnz cmc dec ljmp dec inc lods add push xchg (bad) jg hlt icebp gs jae test or jg pusha pop sub or rorb lret push mov int3 push dec inc mov inc inc push xor xchg or dec (bad) cmp jb std scas xor rolb outsl cmp incb aam sbb dec cld mov mov and (bad) jg and sbb or pop inc fnstcw (bad) (bad) decl xor mov test loope test test mov push (bad) call sub push pop pop nop pop testl and cmpsl repz incl dec xchg add les (bad) and xchg dec (bad) call loopne adc adc andl hlt popa test in add (bad) shll mov mov lret pop xchg pop sbb incb jae jmp mov call insb inc scas dec iret xchg or push mov movsl popf jp push xor pop xchg mov mov adc (bad) shrw out and addl add popf test inc and push (bad) jge push addl test xchg aam fisub into aaa pop jb test adc sarb mov pop or push xor aas inc xor push sti in lods mov lea arpl es add dec mov adc lock pop bound fcomps jecxz fdivrl (bad) jmp sti (bad) ret pusha loopne or leave adc imul (bad) pop imul outsl jbe ucomiss fisubr xor leave pop sahf rcl xchg loope mov cli (bad) xchg mov les cs mov aam loop sbb mov or cmpsb hlt jg pop sub je in inc jl cmp mov cmp enter jg mov inc das push sub pop push mov pop (bad) aas pop psrld (bad) js inc sub inc pushf lock dec cli jge repnz in bnd daa jbe or pop dec lcall hlt mov and dec lret mov or (bad) pop pop cs out xchg and data16 ficoml jmp mov movsl mov lret pop dec std push dec sbb subl adc mov mov imul adc call cwtl fdiv sbb mov or sub push add pop push xchg adc and or int3 jge loope cli movsl mov sbb xor shll mov outsb sbb shll inc or push push loope and lret lret mov fisttp push in test aaa inc aad mov clc aaa xchg cmpsb mov sbb pop adc adc push fimul and jnp clc jnp fstl dec (bad) aas rcr out mov into imul (bad) lcall add fstps push fstl jnp and jmp add fnstcw mov jg mov cmp pop idivb dec adc (bad) cwtl add xor nop (bad) mov loop stc jbe loope mov mov sarl adc adc in nop nop sar pop rcr xchg out or mov lea pushl idivb xor inc ljmp rclb sub adc cmp push push js xorb fadds adc jmp es dec mov out xor leave mov loope add pop fldl lods incb mov cmpsb sub cli push call loop cmp xchg jo leave push call xchg add pop add mov jb sub mov mov mov pop mov mov push popf test clc scas adc in jae loopne rcll das dec mov inc mov movsb fstpt iret stos pop aad orb (bad) mov loope mov call mov (bad) sbb scas popf bound mov pop xor push sti cld push pop mov dec mov fisttpl in mov cwtl cmpsb outsb and dec or gs js fidiv mov cmp mov jmp dec sub adc xchg int mov mov and or roll ljmp std (bad) cmp jmp jno (bad) bound insb inc sahf mov inc xchg pushl pop push pushf sahf jmp jns sbb xchg pushf inc mov sbb imul (bad) mov insb push push xchg mov outsb (bad) dec pop cmpsl (bad) movsb push pop icebp decl jl xchg arpl inc loopne and xchg fcmovnbe call out sbb daa push push clc das out mov decl mov inc imul sbb xor (bad) jbe psubsb inc jecxz into (bad) xor or addr16 add popf mov jo decl cwtl and cli nop push pop hlt lcall adc ret add ja cmc sub mov sbb movsb dec cli roll hlt fs test lret mov add adc stos pop cmp xchg (bad) sarb or jle mov lods out push adc add dec pop and mov and fsubrs sbb inc les mov add mov jmp inc stos fnop jg gs mov fidivl add mov sbb fimul es mov sahf sbb push nop inc clc adc arpl pop test lcall es mov push pop lods or insb sub aam and fwait fs jns push or jns icebp scas xchg je or mov ljmp sub clc dec scas stos or mov notl xchg iret stos dec mov jg sbb lahf lretw mov enter fadd mov mov add lds jno push scas mov (bad) js pop mov mov push pop ljmp and shr xlat inc pop jmp cmp cmp push add fnstcw popf lea je (bad) (bad) out fwait cmp fwait dec loop (bad) fbld jp nop jo inc (bad) cltd pop add (bad) fisttpl into xchg push xor pop mov shlb sub adc popf sub add jbe inc ljmp ss loope xor pop bound jmp mov lock nop mov sub add jg icebp inc out in loop mov outsl xchg lock and in mov das rolb enter clc daa sar push pop mov cld ret enter pusha adc into adc cld push or fildll mov xor into jae js pop adc fs inc cmc or cmp shrb jg xor push (bad) sarb dec or jno test ret mov mov rorb dec xor xchg xor lea inc icebp bound call loope lahf ret int sub or rcll int push and pop mov xor xchg mov rcrb int3 lret movsl ficompl jae mov cli ljmp xchg cld mov sbb pop push repnz mov testl xchg inc jae sub aas fst outsl pop or xchg clc add mov ljmp roll je fstpt (bad) imul into xlat int3 adc jns pop or jl imul (bad) das xor frstor rorb hlt (bad) movsl clc call addr16 and push pop les jle mov lock cmp loopne clc push add mov fwait shrb clc test cmp and popa std scas xchg (bad) mov fadds push add push mov les test dec rcl shll fisttpll stos xchg popf ss jae xor pushl rcl fisttp jns sbb push cld fild out mov mov nop imul add push frstor push enter cmpsb hlt ljmp mov mov sbb push xor sub mov mov xor mov aas loop sbb movsb lock sar (bad) jp (bad) adc imul cmpsb (bad) (bad) aaa (bad) push or cmpsb add pusha pop icebp das mov fidivl and pop data16 in (bad) inc mov pop dec outsl mov mov rcrl shl or addl in jg daa push outsb sub mov call rorb sub iret arpl (bad) incl sbb scas mov arpl mov or das (bad) inc movsb cmp sahf (bad) jo mov test jecxz inc dec fstl (bad) lcall hlt jns xor add mov inc (bad) in inc cld mov xor mov dec or jno insb ljmp cli sahf dec mov inc (bad) (bad) inc or jbe pop push mov or ret lahf aaa push dec sbb in clc pop cmc decl stos or push push xchg fstpl das xorl sti add in inc test popf shrb jmp fisubr cmp aad jnp sar roll jp into fisubl sub aam cwtl inc loope inc (bad) aam add add add out or (bad) scas xor jne adc pop (bad) (bad) lret jne sub mov add loope outsb pop pop adc int jge inc pusha mov repnz push data16 mov or jo les test mov xor jg dec jle (bad) (bad) insb (bad) (bad) jmp or roll and lods adc inc rolb fdivl out ret aad (bad) pushl pop jp push mov (bad) divl cmc lcall mov scas lahf bound data16 loop jno jp clc in jg lahf mov jle (bad) test jo (bad) dec mov jecxz jbe mov sub dec int3 push test cmp lods sbb lcall cld inc (bad) out imul sarl call cmp call aam sub sub pop sub sub outsl xchg pop mov jno inc (bad) cmp cwtl xor mov aad sahf and clc call add aas dec or imul mov (bad) sbb imul push jno xchg pop xchg std decl cwtl add mov pop or in pop cwtl sbb gs and sbb call xchg lock loopne push jne inc into mov ljmp cmp adc pop pop movlps add mov pop ja push outsb (bad) popa ja jl pop mov shr dec fistpl je cltd push iret mov outsb sub add mov movsb nop push ficompl loope nop jns les int fisubr icebp push mov movsl cmp adc fsts cmp adc cli inc (bad) cmp or lahf in adc lahf int3 or adc push xchg xchg or fisttpl pusha and lds cld mov cmpsl js insl sbb movsl lret dec inc (bad) ljmp sbb xchg (bad) andl xchg sti nop outsb jbe leave cltd je stos mov fmuls pop mov pop cli sub dec (bad) push ret pusha cmp pop test push inc lret mov pusha or icebp adc cmp adc subb push and mov sahf add imul jle add sahf pop in pop sub cmpsb (bad) es pusha cmp leave aam cs xlat cmp mov outsb insl dec mov lods aas mov xchg mov outsl test dec pop scas or and test int3 push out adc pop movb sahf shrb sub flds add dec sub testb cmp and in mov loopne adc push mov icebp push insb dec push addr16 test sbb sbb gs dec push rclb xchg mov dec and pop add aas mov (bad) repnz mov jmp pop lea jns xchg xor mov emms dec inc mov insb in xor mov movsb jae int dec dec mov out push ret adc pop int3 inc and mov push ss push cmp pop mov mov cmc mov lcall add shlb ret inc stos add test dec sbb call cwtl jmp jb fmull mov inc mov mov cmp jbe andps dec rcrl lcall dec xorb dec or mov ja fbld shl ret insl pop cmpsl aaa dec add mov ja orb and push fistpll inc std jno and mov cs sub adc (bad) (bad) leave cmpsb out push sbb nop push or sbb xor rcll mov mov push dec add daa or mov add lods sbb jge inc ss mov in jmp mov mov decl outsl popa fisttp fsubl jg test int3 sub adc sub cli adc stos (bad) jg movsl mov push unpcklps jo iret aam push leave shrb sar xchg cmp std fisttp int3 inc ret or and and or mov lret and push stos ss (bad) das lock mov lcall mov xor ss (bad) xchg and push shll or int3 mov mov push addr16 adc inc add insb adc sbbl inc insl int sub push loopne add ret mov mov mov in cmp and xchg aas aam cwtl inc adc outsb subl lret cli ljmp push jmp sbb dec (bad) xor lea scas add int enter pop (bad) ret push pop cs inc or inc and mov cwtl mov mov dec mov and mov inc mov push nop ret jle mov (bad) pop sbb sbb mov clc mov dec fadd jnp pop push ljmp dec sub rolb mov sahf mov jg or loope stc pop and incl add inc or inc fsubrs rsm add cltd inc call std push jp push outsb jnp aam pop outsl mov mov mov (bad) cmp add push aam and xchg dec sub out rolb xor inc pop mov popa xor push pusha jb andb sbb inc addb mov jbe and and ljmp pusha sbb mov cmc incl mov add hlt inc mov xchg xor jl xor mov push sub arpl jbe mov add lock pop mov and sub cli add in out scas bound scas jp in or loopne xchg add cmpsb subb gs lock or lock mov enter jmp fcomps bound mov lret mov pop mov sbb (bad) jg inc jl stos ss ds or push pop or pushf mov add fildll mov mov ljmp pop std es out scas es sbb push pop insl (bad) xor (bad) jb or jmp cmpsb adcb fisubrl or incl aam fldt mov lcall adc out mov xchg inc std inc in (bad) js push xor add (bad) loopne add test ret pop push aaa or mov cli push adc xchg xor inc out pop dec add add arpl pop and scas xor (bad) inc je js into fcmovnbe sbb inc adc xchg inc push movsb out inc test lahf fimul loop mov or cmc and and mov dec insb sub out sbb inc sbb ljmp clc pop jne push push (bad) jnp add mov scas ljmp outsl push pop test (bad) mov outsb cmp loop hlt add insl pushf cmpsb decb lea inc mov add mov and xchg test loope out xchg xchg clc pushl outsl jmp add add mov or push push mov mov jbe daa sbb outsl idivb adc add enter lret loop xor lret popf add aad std or cli pop pusha in shl and les subl test dec inc or es das shrl xlat insl add xchg outsl adc pmulhw das xchg sti in hlt mov sub jmp push inc ret mov out xor cmp test test addl imul pop sbb aaa loope mov int3 sar adc add mov test (bad) mov adc add sub dec xchg sub sbb jecxz cld push xchg sbb adc mov jl loop into test aas mov fsubrl sbb insb bound fadd lcall pop pushf cwtl aad dec add and popf out icebp ja aam mov xor rcr test jno adc dec mov fisttp push mov inc adc mov push ret test xchg push xchg xchg ja (bad) (bad) out add mov push (bad) sbb idiv jg (bad) daa pop or or sbb sub push pushf add push jl incl pushf in lock mov mov cmp mov jae pop and (bad) dec jo mov test push out sub ljmp xchg push (bad) pop ljmp adc (bad) xor (bad) push mov test adc xor mov inc jle dec and sahf outsl xchg or mov adc inc pop cmp sbb pop inc pushl ret pushf cwtl dec cmpsb out data16 or xchg sbb adcl fwait ret mov jecxz dec clc push or or push popl ficoml push sbb inc es sbb sarb jmp jp rcl mov subl push cli sbb rol cwtl jg add popa push mov sbb das mov mov sbb addr16 (bad) lock movsb jecxz fcomps cli push loope cwtl dec cmovno test adc clc add decl lret clc pop roll loop sbb hlt jae cld cld jg (bad) mov aad mov push pop cmc inc mov outsb es stos dec cld push push jg sti (bad) jae sti xor (bad) (bad) (bad) decl mov mov cmp or inc test inc inc repnz xchg dec jecxz sahf pusha inc cmp (bad) out mov fs or rcrl inc sbb mov nop jne lret pop lock add jns gs orl cmc mov outsb xchg lods dec ljmp (bad) cmp cld jle mov pop sub push inc and or insb or pop push pushf push popa add cli fbld push inc sbb add dec es pop aas imul xor outsb dec (bad) dec sbb and jmp lods ljmp pop cmp addr16 das dec mov (bad) test pop (bad) mov rorb call or cmp (bad) jp aad decl sbb inc rolb pop (bad) adc cmp aas adcl add push (bad) and pushf scas clc notl out fmuls dec in mov ror adc mov cs pop test inc ds aas call movsl iret push push add inc scas xor xor jg decl ficoml fxch enter sbb dec iret scas adc jp mov aam push push sahf mull jg dec into jnp fldt dec push fadds sub aaa mov shrb mov and add mov in gs sbb dec sbb dec int into movsl mov pop cli jecxz mov pop repnz mov push loopne insl incl clc adc ficompl into mov sbbb and xor insb fs and adc in outsl mov stos jg push (bad) popa sbb ret inc add cmp test mov loope subl push push add scas jp jge call and xor adc shlb mov imul mov (bad) and (bad) aad rcll mov repz aas xchg push pop repnz xchg sarb mov jns and mov push je insl aad data16 xor clc pop jg cltd xchg xor sbb sbb pmaddwd fs jle ljmp int cmp add clc add icebp jp xor mov jp nop loopne mov sub dec stos aaa jl pop inc xchg sub in add pop shrl shrb (bad) mov dec or andb fcoms test sub jle lock fbstp xor insl mov stc out pop xor rolb sbb lcall mov jnp sbb inc and pop inc mov push (bad) test adc fisubr in fwait mov or aad cmp into dec sub jo enter xchg or inc ljmp dec loop (bad) lahf jne adc cld push sbb sbb aad movsl add mov fldt jg push outsl lock sub js xchg mov subl ss les lods add je mov push add mov push and xchg or insl in add call decl outsb mov pop ljmp decl nop daa jp cmpsb inc (bad) add (bad) out or xchg iret lods mov push and push or sub jp aam jbe sar dec fwait cli adc and push add out mov fwait rolb cmpsb inc rcl add pop cld out subb jle mov flds inc dec xorl sub insl cmp pop inc or sti mov add fbld fwait js loop orl fmull cltd js push dec call cmc push pop xchg std jo arpl outsb inc adc dec loope jmp cmp or cmp add decb fcoms std or mov dec mov sub add pop jg insb push or shlb jg sub pop or es pop xor movsb cmc fild data16 ret xchg or and mov cmc pushf (bad) adcl int3 hlt popf push inc dec push or inc xor add sub lods clc int shrl and stos pushf fcmovne add fdivl ret mov dec mov stos sub and push push inc pop clc push ror push jae mov pop add pushl mov imul les mov adc push ja sub std mov (bad) jg push xchg inc mov or or arpl mov add or (bad) jecxz test icebp lcall fidivl mov jns aas sub fadds xor pop std ja (bad) bound js push adc ja or pop add xchg jge mov ss test push (bad) decl dec sbb hlt (bad) (bad) and adc jno cmpl inc loop das je fld fidivrl mov lret cmp sbb das dec push clc or mov cwtl add mov sub std pusha or dec loope push call mov add cli outsl cli daa push mov lea int3 inc dec inc push lea adc lea inc rorb push inc inc call inc into add fbld in cmp bound xor ljmp ffree jle outsb (bad) jno dec in push jmp (bad) (bad) mov push sarl (bad) jg clc mov clc mov inc sahf callw or pop dec push xor cmp adc fcompl xchg jg movsl fnop jb pop loope add dec inc mov add dec pop xor pushf sub int gs inc in xchg or sub ss dec sbb ss fadds lcall cmp (bad) xchg icebp pop jno das clc aaa or inc inc js jo iret jp xchg mov pushl jae xor test dec lcall call push rorb sub test ficoml (bad) push cli jns (bad) fmuls lods mov aad dec adc push mov mov ret mov ret call movsl xlat jle sub fcomi mov or outsl push lods leave shrb loope sub mov dec pop (bad) divb mov sbb dec nop stos mov div add jbe xor jle cltd fs jg test inc in pushf je icebp sbb aam xor push cli daa xchg push pushf and pushf pop (bad) mov out mov not xchg push stc or cmpsl cmp mov das cmc fwait lods push or fisubr push cld scas mov stos mov ret ror push mov dec inc (bad) dec dec mov (bad) mov xchg (bad) mov movsb adc push mulb les add jb iret ss (bad) (bad) out xchg cmp pop sbb dec and fndisi(8087 cmpsb lock lea lock aad and add movsb leave mov in jle fsubrs inc outsl test mov popf (bad) leave push adc out call dec cli loope mov dec fnstsw es ja jg add add stos and mov inc cmc hlt push push pop cli mov fisubl ss int3 xor es decl push jbe mov (bad) fbld xchg adc mov or mov mov push cld fwait test aam negb mov mov xor push cmp inc inc (bad) mov mov imul push xchg cltd push scas enter (bad) pop sub jne or add jg inc or cmpsb idivb pop fisubrl fwait dec mov add xor icebp mov in ljmp pusha cld xchg push dec (bad) das nop out (bad) ja pcmpgtd jmp jmp mov push (bad) mov fild mov jo (bad) icebp shll pop sub mov adc adc mov cmc je shll inc cwtl (bad) scas es dec push sti out jno (bad) call sbb push lock shrb pop leave cs mov call insb loopne gs mov mov pop and out add adc aad lock cld or xchg clc jmp fs je ljmp nop and cmc mov xchg test aad jne insb scas dec jb sub movzbl cmp cmp pop and out dec sbb (bad) mov adc lds jge push ficom pop int3 addl jne iret addr16 ljmp dec inc scas movsb dec jge (bad) mov pusha and enter adc fdivrs test arpl inc ret dec stos pusha mov ficompl lret sbb mov mov xchg jg mov popa movl cli pop or add sub adc sbb (bad) decl enter in inc lahf mov arpl in lds or incl pop test std add incl lock jb movzbl xchg pop jecxz cld lods decl xor das popa cmp xchg jo cmp jno ljmp cli stos lcall xor sbb negl cmp inc mov cmpsb repz js lock sbb (bad) push inc cltd mov clc and inc lods js (bad) fildll push inc adc dec or dec inc mov clc (bad) movsb cld pop dec inc sarl movsb pop movl mov cmc pop cmp inc xchg xor into adc mov inc pop cltd fsts add jmp sahf stos xorl shlb icebp sti les xchg stos fcoms dec adc inc xor loopne (bad) dec in hlt (bad) decl fwait sub add pop fdivl add in sub fild or fsubl xor cmp hlt jns mov mov daa sarb lds mov xor rcr (bad) jo xchg into xchg and lods fwait mov leave in sbb jecxz (bad) ja (bad) mov lods (bad) sub cmc mov insb jo sbb orb mov xor in mov push mov mov addr16 mov inc es push dec xchg push inc sub pop pushf xlat (bad) mov jp mov stos jge adc rcrl (bad) (bad) fild cmp mov or addr16 mov mov hlt inc dec lcall sbb inc jmp sarl std pop cli push enter mov stos inc lods leave (bad) adc mov push lods mov mov mov adc jns mov push mov sar popa and and adc push xchg jae (bad) mov or lea out or mov lock ffree outsl mov fadd lods nop push or ja pop insb in cld (bad) lret popf sbb incl insl and adc or testb mov int3 dec mov fcompl lock and aam scas out and out push push sbb ja cmp fsubrs adc pop cs daa je jg inc out fcmovnu jle adcl jno push (bad) ret inc movl nop dec sbb aam fwait (bad) lods roll or xorb and pop or mov push jo loop rol push popf sarb xor lret jle pop sbb xor sbb lcall incl (bad) jne or sahf cmpsl and fs adc std jb inc inc aam fs or test roll push sbb jnp ret inc outsl lcall or xchg cmc mov (bad) cmc dec outsl cmp push out lea out xchg inc sbbb inc cmpl call xor sub lcall dec push cld scas jae sahf xor xor add or inc adc out or inc pop jg fmulp nop sub fildll xchg sub das mov mov cltd xchg (bad) insl add enter hlt stc xchg push and int3 sub scas lds mov pushf ja xchg push jbe dec cmpsl push add add mov xor scas mov test or aaa dec xchg js sar jge dec std inc les out dec adc aaa jge mov adc leave xor cmp push sub sub jmp jg fadds fdivl jle or movsb push and rol stos outsb inc inc dec jmp xchg dec adc repz sbb call aam push or dec jo jne inc push adc dec push sub push xchg dec mov cs mov push pop loope push jg dec jp dec mov shrl adc jecxz xorl (bad) decl jbe outsb das loope cld movb rcll hlt imul pop mov pop inc in add cmp jae inc shll add call nop cmp xor lock mov mov pop ja cmc and jae sub push (bad) fistl imul mov add add aam enter mov scas lcall mov notl (bad) stos dec sbb (bad) in fwait and pop imul jp loop fdivl call jnp int3 mov loop pop xorl mov jg mov add mov sub dec idivb sub fidivrl mov ss (bad) jmp rcrb (bad) fucomp rclb inc mov sbb outsl mov (bad) call inc ret stc dec clc aaa mov sub out mov cwtl mov fldcw push shl dec dec std cmp cmc icebp sbb sub pusha daa sbb stos out mov aad jecxz outsb inc cmp ljmp fs hlt xorl sub mov cmpsl repz sbb dec mov loopne bound sbb sbb add push aam mov shll ret xor lret xor xor ja jmp out inc outsl cmp jmp mov enter lock daa sub cli xchg xchg add lock or cmp cmp cs mov cli int3 dec jl test lcall pop inc daa fucomp addr16 and mov pop adc push (bad) std fadd jg dec std and xchg call lea jle cmp lods jae insb xchg ljmp and in or jae push ret cmp sarb xlat es fwait mov lret test mov (bad) pushl (bad) outsl xchg lock push mov cmp sbb pusha inc int3 mov cwtl mov add lahf sbb cmp add fistpll cmp ss adc mov add inc jp (bad) dec pop les scas jmp mov adc cmpsb cmpsl cmp cmpsb jb aas arpl clc mov mov repz ja (bad) ljmp les (bad) mov mov inc and sti shlb push sbb or adc movsb mov out nop es pop aam or leave into fldenv add cli aad outsb cwtl push fistp cmp cli jg lret push mov ret ret movsb xor dec xchg add push adc cmp mov mov pop jnp clc mov mov xor inc leave mov lret scas sahf jb dec pop (bad) (bad) inc xchg mov dec cmpsb push xor movsb (bad) mov je jno sbb aas addr16 xor dec adc jl adc push inc push mov inc ljmp (bad) out or pop and fs xorl mov sti (bad) fistpll add sarb pushl loopne into negb dec cmp pusha mov xchg sub loopne mov jg lret imul mov cwtl frstor sbbl cli add ljmp push data16 stos in shrl iret sub cmp push push outsl xchg sub negb outsl cwtl lcall push pusha aam mov pop mov push insb cmp xchg xchg sbb add (bad) add lods (bad) sbb mov push test pushl xchg cmp rorl push pop mov fsubs add popa ret (bad) mov loope inc mov sub jno pop and xor push dec shr pushl or cmp call jle enter scas jmp sarb and fcompl cmp xchg incb ss (bad) cmp (bad) ret scas jo sub in adc ficomp (bad) pushf rcrb sub pop decl mov and pusha roll or jle dec xchg jb ds lods ja xchg mov dec inc add pop mov or pushf scas add test pop mov sub mov outsl sti mov dec add ljmp add xor jno jbe pop xor fwait (bad) call std (bad) repz repz negb negl shl inc or mov push adc fsubs or rol add sub inc xor cmp test xchg dec in sbb (bad) scas (bad) mov jmp jge notw enter (bad) mov mov mov xchg data16 pop incl mov adc addl test lret xor push adc pusha push dec sbb fdivr add and sub xchg (bad) out or pop lea cld leave fisubl mov xor mov shrb insl ljmp push nop jp loope mov jmp push push mov xorb mov add dec lock icebp pop fsubl test push jne dec cmpsb jg inc incl loopne mov sub add mov pop xchg cmc mov pusha xor adc fdivr (bad) (bad) incl in outsl xor mov mov add adc cmpsl sbb mov jne sbb dec dec mov mov inc ljmp mov (bad) enter nop add data16 fldl inc (bad) das sub test fcomip xor push test jne fild or rcrb pop mov in push xchg or or push and adc scas mov (bad) out mov jbe inc fwait imul pop pusha aas arpl or add cmp lcall and xlat add aam aaa inc mov sbb push clc mov mov sahf dec cmp sbb sbb sub and popa fsts lock (bad) hlt imul nop test or xor rcrl mov push push cmp and dec push sub ss sarl stos and fadds movsl mov or mov mov and (bad) negl jge adc mov fcom bound lods cmpl lcall push stos cmp add lock cmp sti adc movsl sub mov es ffree push arpl outsb pop cli pop (bad) hlt dec sbb add push ljmp pop push fs or and cld mov mov mov cli dec sbb jbe repz int outsb add jno jecxz mov stos pop xchg mov ret ljmp xlat mov stos adc (bad) call bound outsb push inc iret add sbb jp pop call push cmpsl dec mov push xchg inc fdivrl enter dec (bad) pop shll outsl mov or (bad) pop and dec inc test jp test cmp mov jg xchg sbb out cmp or daa or ja push cmpsl stos mov or clc push imul mov call push jmp add sbb into scas xlat adc outsl pop mov push scas pop sub fimul fwait rolb clc mov mov lds (bad) jmp jo push mov push mov loope xor rcl inc fstl jle jl push dec and shr dec insl icebp mov addl add mov inc mov mov movsl push mov out out out pushf dec call inc (bad) arpl or rcr je push add jne mov pusha dec dec into inc add (bad) dec fstp icebp dec fisub out bound xchg cmpsb jo gs rol fisttpll inc xchg dec xchg adc inc cwtl push sbb imul mov aam pop in test test cmpsb cwtl jno mov mov into push jnp popa sahf xchg jb jae daa pop data16 out inc sbb mov mov mov or push mov imulb mov mov pop loopne dec cli dec mov into mov adc mov lock insb cs (bad) (bad) sub or pusha lret hlt or lock stc inc je add or outsb arpl cmp sbb rclb jo and jg push jo push add mov js nop ret int imull push inc xchg sub ja (bad) (bad) lcall decl cld hlt test xor mov flds sahf fsubs fbstp es inc sti xchg xor cld ss pop cmc lds js aas (bad) and fdivrl xchg adcl das jb sbb int3 out in (bad) mov and lret sbb mov sbb mov jmp dec mov cmp (bad) test add lock jl les mov rorl sub mov incl add mov out mov lods jge add jmp sbb popf pop push shr xor adcb sbb add je (bad) enter movb cmpsb inc and or dec clc iret xchg mov lods les fild jnp add add mov popf lea scas push xor movsl outsb cmp std movsb mov cli pushl sub adc inc jbe xor stos popa push ret negb inc divb hlt insl cmp xor jg adc arpl jo pop lock pusha fisttpl out push or mov lret pushf mov das xchg add rolb adc xchg (bad) ljmp aad nop and or (bad) fmuls mov push mov (bad) jmp cmp psubsw (bad) fisubrl scas jno add call cwtl pop mov ljmp pop inc (bad) bound mov pop fs dec adc (bad) push inc je (bad) mov add pop and jmp jo pop push shrb dec or lods push and or call inc or dec push pusha mov lret or incl nop push mov jle ja popa push stc mov lcall sbb dec xor out sub lock test inc andb add (bad) bts inc cmpsb cmp or int3 neg hlt dec pop or ss jg in or mulb ret ret cmp loop add test jb std inc add mov dec das insb pusha lods jb ret mov or jne sbb and jo inc push shrl mov jb andl and jg dec popa es gs dec jle clc test aaa push les fdivs dec fwait mov and jae es or hlt pop popa sbb mov popa cmpsb aad loop fdivrl lods test fidiv mov pop add add pop add in sbb jl inc in xor nop cmc sub inc jno fisubrl adc imul xor pushf fs mov dec ss add mov inc lods icebp (bad) mov xor adc pop pop adc ljmp and (bad) je jo jo addr16 outsl adc je (bad) iret fidivr enter (bad) fisttp fstpt fcoms jg or (bad) fiaddl shll sbb mov mov rorb lea out enter call jge movsl das xorb outsb add mov pop and std ss jmp xor movsl jle dec and add je xchg pop in cli pop push mov popf pop fwait incb testl and cmp loope (bad) mov out addl adc sbb call jnp cmpl add xor xchg pop xchg gs xchg test sbb dec and cwtl push mov (bad) (bad) shrb movaps popf or and xor es xor movsb adc loopne push push pop std aaa aam notb aad fstp (bad) ret sbb or jb sbb jb fsub decl dec call cmp or cwtl (bad) cmp jg inc out (bad) mov add into jnp cli and outsl lea les or sbb (bad) dec mov outsl mov sub add xchg nop pop dec pop fstpl cltd inc fidivl xor test stos fildll inc pop inc mov leave aam ja das fadds sub or sub ficoml push inc bound arpl movsb (bad) (bad) lcall or jo (bad) test arpl cwtl jae add mov xor aaa push mov inc mov fisttp ret ret popa test imull sti loopne and lcall sbb or in mov fdivl add pop (bad) loopne sbb loopne sbb mov dec insb imul fbstp add cmp dec pop int3 jae jno fisttp es cmovge (bad) xor adc cs btr or inc or (bad) cltd inc pop push mov and imul sbb outsb pop movl aam push jae lcall pop jg jbe aad ds xlat push dec or scas es and push pop lcall ret dec mov out fimull push les xchg mov inc adc mov jne jp sbb scas loope mov xchg nop test pop sub lock jae and arpl jb inc add xor fcoms inc sbb xchg and or lds or ss mov andl scas sbb es clc (bad) rolb es decl pushf int3 xchg out fs add jmp repnz enter sbb sarl jg inc jne sbb lods sarl adc pusha jmp xor rorl push fwait push cmp std insb xchg and testl xchg insb or outsl cli or add imul stos insl subb jbe push std mov outsb out fyl2xp1 mov add sbb push pusha mov cs xchg out mov push cli aam lods mov fs add jecxz push shlb fistp ss xor ret or and push jmp pushf loop int3 and mov es cmp cli cli data16 aam mov rolb and test pop cmp pusha jbe (bad) out jbe and fwait lea adc clc mov sti cmpsl xor mull das adc pop push xor inc gs out dec fdivr stos fdivp adc inc mov movsb push xor setb jae nop clc mov mov fildl dec push jp jae mov inc dec cmp jg push sbb or sub addr16 addr16 call jmp (bad) mov jecxz cmp insb test fs mov (bad) pop add sbb inc add mov insl or loope inc adc pushf xor fsubrl inc inc add ret mov sbb or mov inc push enter mov inc or mov ss mov test (bad) fbld stos fs shll cmp mov jl xor pop jbe or dec inc or inc dec cli inc or mov addr16 loopne js clc (bad) sub lretw (bad) mov les push clc scas mov aaa push pop pop and test lret je jae mov je push mov jge paddusb std icebp fiadd add jb icebp jg fdivs push ret mov cmp lea inc andl mov in cs mov sbb xchg movsb test mov clc cmp add movsb (bad) ret dec xlat ja je mov rol add mov or dec add into (bad) mov notb je xchg xchg dec add mov mov pop mov pushl aaa mov adc xor cmc in out icebp mov add (bad) mov repnz mov adc inc pop cmpb pop roll mov js add sub push rolb decl mov pushf add sub lea adc sub jmp lcall pop mov mov xor sbb jge maxps mov or mov xorl xor push jl enter lahf and mov test jg,pt pop push pop and movsl xchg out rclb sar or cmpsl mov cmpsl repnz cmp addr16 push push incb cmpsb in and int3 test and mov adc int lret mov cmc iret and add adc add xchg bound adc enter pop or leave adc scas inc mov push xchg decb sbb push xchg pusha inc and push fisubr aam popl push (bad) adc dec dec or push les (bad) ljmp popa push pusha mov mov popa call pushw test fild add aad cmp xchg in inc lock call gs or lock (bad) sar mov mov out es cmp insb test push push in push aas fildll adc or negb mov mov jmp mov lock jecxz js (bad) notb add xor (bad) mov mov sub fcomps sub pop ret adc jo sbb sar mov inc pop add jne push lcall test jo adc setbe mov ss mov dec mov or mov pop push mov or mov cvtdq2ps ds inc bound push pavgw outsl fsubrs xchg xchg call sbb jg or push sbb dec cld (bad) and xchg mov push or xchg push mov xchg jno aaa pop lcall inc or fiadd cs enter pop out cmc pop inc clc insb loopne rcll mov stos paddq jmp mov addr16 jb repz (bad) jmp cs mov ret ja inc cmpsl loopne xor mov push aam fmul andl adc adc inc loopne push pop add xor aam mov xchg daa cwtl push (bad) out and jne jmp test sahf and clc fdivs mov xchg add (bad) push aam inc or jg je mov jns add pop cld rcrl int3 pop push loopne repnz pop xor ret jb cltd (bad) jo sbb (bad) jg mov ret sbb adc or and lds add inc clc ficomp test xchg mov mov lahf or add lods jno std cli (bad) ljmp sbb and push mov mov dec jg adc repnz add add loopne or lds mov inc js ret ret adc loopne pop pop push xchg or scas fidivl clc xchg nop pop mov cmp sub shrb mov jmp scas sbb push add jbe lret sub jae dec int3 (bad) icebp mov adc addr16 incl testb popa divl and xor push jno dec mov movsb jle xor shrl pusha pop pop or adc into cmp push mov rolb push jp jg outsb mov (bad) repnz or jmp in sub scas nop nop jae cmpsb mov stc jo or pop cmp sbb dec push call cmpsl dec dec out fimul dec inc or jo fwait out xchg push pop int3 sbb mov stos out add lcall cmpl push (bad) jbe mov xchg adc jge mov cmc sbb jp int pop inc inc pop out lcall add ret (bad) adc subl into pusha xchg scas adc jno lea pop push fist push cwtl cli push mov gs mov in mov pusha call mov lods mov inc in sbbb cs mov mov xchg ljmp sbb fldl (bad) or out xchg push jo mov cmpl subl add jnp in (bad) lret pop repz or call and and push bound je sti mov add cli mov sub mov ss jnp or outsb xorl push lret adc loop inc add sti dec lea push xor inc mov adc inc or incl mov xchg jle add mov add dec (bad) cmp cs push (bad) cmp xchg xchg cmp in ret xor std xor cmpsl movsb add scas xchg outsb sub add outsb cmc mov fsub std inc jmp xchg and add out xor add out push dec lret sub or pop mov xor pop add call clc inc push pop js dec test dec dec (bad) incl mov loope pop and sub fisttp mov sbb push fadd es scas jg outsb aam xor push insb (bad) sahf decb dec cld mov sbb divl fisubl mov rcrb cmp das dec mov add insl add xchg outsb mov fisttp testl push xor mov dec xchg inc add sbb (bad) mov pop jns or pop jmp (bad) adc mov (bad) hlt push add clc add and hlt push push rorb outsb lret jb sti dec jg inc inc pop or nop repz add loopne dec nop mov movsl fild insb insb and into sub mov xor mov addr16 jg jo fnop sbbl stos test popf fdivrs pop add inc jp lcall add mov icebp or test test mov out and (bad) and or push loop imul jbe sar sub inc mov dec (bad) push out ret xchg mov push (bad) (bad) jg jecxz xchg cmp cmp mov xchg or js mov add pop inc mov inc xchg and xor jle jbe mov or lods (bad) in jnp add jmp lock lcall and (bad) nop cmp imul mov pushf fcmovb clc clc imul xor jno xchg testb cld pop and jle lahf test stos arpl mov and xor mov inc in xor adc push icebp ljmp into cs mov mov fdivp sbb ss test mov xor scas or lcall jbe mov mov sbb (bad) outsl mov sub bound int3 ss or popa mov into sbb ljmp (bad) jp and aaa inc inc cli jb add sbb decl shrb stos jmp ret jp rcr sar or fwait cmp xor add aas push push or loop inc adc inc stos (bad) (bad) sbb in ret cs enter add cmp sbbb (bad) enter inc je mov mov sbb (bad) pop popa test dec ljmp cmpsb fdiv jecxz xchg or cmp cmp (bad) mov movsb xchg les pop mov cmp (bad) mov in xor out sub inc push stos inc outsb or sub xor pop imul call fstpt and ljmp mov rorb pusha inc mov (bad) decl or sub cltd jmp push sub xchg add xor bound test mov in enter cli lcall sub aaa xchg or popa std dec xchg sbb cmp add int3 add adc or mov jle gs daa or adc iret add lock push movl imul adc xor inc jo fisub inc mov sbb mov loop cmpsl idivb jbe jb or je insl insl and lds mov (bad) jg mov lcall push sub or outsl mov sahf rolb ret imul call int jno pop pop mov add insb sbb jns add inc mov and pop pop push mov sbb push or and sbb imul jg nopl lods jo jle ljmp sub xchg sub inc xchg jo test mov aaa jl jg mov js test icebp sbb aam adc cmc add or cmp push inc in ret sub push sbb dec sbb sar add mov repnz js push jl mov mov movsb and decl mov mulb sahf pop mov sub std fisub jmp cmpsb jbe ret insb jno rcr cli jbe jle mov nop and jge jae sub xchg test inc sbb mov pushf push jg push add inc adc inc int3 sar inc sbb andb loope mov or movsl fbld enter in xor push jl loopne ja push sbb mov call lock xchg push rcll loope push mov cli out add test ret mov or je rolb adc sub mov icebp fucomip push mov xchg das sti (bad) cltd mov (bad) jg xchg rcrl movsl mov cwtl mov dec push sbb mov in sbb movsl dec xor std xchg test int3 (bad) in mov rcrb xor std stos and mov repnz pop sub les (bad) gs insb pop outsl mov xor ds popf or xlat popa jecxz pop push adc iret add mov xor dec mul cwtl loopne jnp jg or (bad) cmpsl ds sbb ret or dec pop cmc inc push out dec mov clc cmp imul cmp mov jae and dec and movb mov mov (bad) lods ljmp pushl add sub sahf cmp jbe pop push cli mov psraw pop push out (bad) mov rorb ljmp dec xor call pop dec inc cs std cmp ljmp and sub xchg mov xor inc lret test hlt inc fdivs icebp push or dec adc inc sahf xchg push stos shrl call lods outsb push insb pop jmp xorl xor adc add fs fdivr rcr and sbb adc mov rclb dec movsb les (bad) or jmp and lock psrld scas in inc inc aad and sbb add test pop lds (bad) push (bad) ljmp add push add je sbb push add jge fmulp inc push stos gs push xchg cmc fildll (bad) mov sar lds adc jge adc clc push fs scas in mov (bad) jg fs test push daa (bad) mov cmpsl mov add mov aam cltd mov fnstenv fdivrl pusha jns out pop mov sub (bad) ja ret adc in rolb mov data16 test negl sti pop lahf xchg or ja cli or out dec not pop fisubl cmp outsl xchg and arpl (bad) gs (bad) (bad) fwait sub sbb out mov xchg adc aaa push (bad) jo adc jmp inc mov mov rcl cltd imul mov aam jbe std and int3 mov or sahf test mov add scas es inc jne jbe sub das xor les add pop repz shrl leave dec push or or xchg shrb mov call sbbb sub or mov roll jmp jae dec adc cli inc sarb cli callw or xor lcall push sub fisttp xchg mov ret and and inc or (bad) inc daa in arpl jne cli cmp mov lock pop xor or push popa add loope inc loop fs add jg pop cld shrl (bad) cmp cmp inc sahf sahf dec sbb lds mov loope mov (bad) hlt jae sub stos or fstps fisubrl hlt test in push sbb loope test jg test mov mov push jno mov test jmp into xchg fld outsl cli lock or pusha sbb hlt mov inc mov or xor push or pushl mov xor jg push ret inc jbe inc mov xchg loopne adcb call mov push mov inc fistpl movsb mov shll int3 jg and test xchg and push push cmc les cltd call (bad) jecxz rclb or mov in inc cli push jae in pop mov or aam mov enter jg ljmp sub addr16 insl or xchg (bad) push or aad mov mov cmp sti mov inc or sar clc sbb mov wrmsr xorl add jne mov xchg sbbb nop ja loop ljmp jbe push hlt sub pop rorl xchg jg test adc orb xor pop loopne cmp mov and or lods cmp and add (bad) addr16 lods dec push (bad) out xor cltd (bad) fstpt push mov stos dec insb sarl mov or (bad) push mov mov adc mov enter in mov daa mov loope xchg cmp cli aaa mov arpl pop and outsl test ljmp dec fimul les dec orl dec and add das in int3 ja out xchg arpl lea fwait (bad) (bad) dec loopne aad push outsb lcall sahf sahf sub fdivrs mov mov push mov mov and rclb popf aam flds xor call dec sarl gs and lock xchg bound ss call mov ljmp lds mov xor (bad) fbld xchg xorl inc or sub roll sub shlb cmp lret cmc popf ret enter clc dec cli pushf rclb roll push jno dec or outsb xchg adc mov sbb pop shl lahf js push icebp dec loopne sbb cs in outsb mov ljmp (bad) or aam mov add xor inc lret mov movswl mov arpl push adc or add fdivr jno cmp add sbb out scas add sbb push cmp add popa add dec or mov sub and jp dec adc imul cmc add aas xchg es out (bad) call jmp xchg xchg jo stos add jo jmp add scas orl mov lock adc sub push jo rol ss dec inc sbb decl adc and in cltd inc shll enter jle sbb and and in jg sbbl and nop jg pop mov mov stos xlat adc pop ret loopne fisubl adcl or or mov cli inc inc adc out repz xor lock shl ja (bad) mov lds xor xor mov mov outsl add int loopne add out push sbb and test mov adc xchg ficompl inc xchg pushf xchg sar das scas add push xlat mov les sarb mov call mov imul jecxz xor and inc icebp jp into enter sub in xchg add adc mov cwtl jo iret inc or dec and fbld or jns std xor pusha jge (bad) dec dec adc cmp ljmp mov call push mov sarb (bad) stos add lds xchg mov movsb icebp call sahf mov loopne enter or (bad) mov lcall or insb ljmp xor aam (bad) add xor ljmp cmc sti xor bound imul hlt or clc (bad) mov (bad) mov push sub (bad) dec (bad) xor push sbb ret ficomp (bad) lock xor adc fistpl mov popa inc mov add movsb mov shlb inc adc rcl add clc rorb jle lock ffree dec enter inc dec aaa pop clc ret jbe or adc cs adc mov addr16 mov enter xorb mov (bad) mov adc out imul movsb outsb dec jg dec std ret mov (bad) mov sbb cmp adc les add jle aas or mov mov sahf push (bad) mov cld loop mov leave out or adc pusha mov cld lods shrl or pusha and cmp sarb dec mov rcrb push je icebp gs sub jb xchg gs outsl cmpsb nop int3 hlt add bound aad add inc and pop and inc (bad) aam add outsb outsb or das je push and mov cmp cmp fidivl add mov (bad) push ret (bad) sub fsubs push leave xor (bad) push cmp fildl fistp jno mov arpl xchg movsb test sbb int xor add or lds rorb xor (bad) mov ja and push push xor mov test inc push popf sub mov insb mov xor mov es adc dec fimul mov enter dec xor mov mov cli mov (bad) push mov pop out in sbb (bad) aaa pop sub dec ficomp fs adc or cmpsl std mov insb pop inc mov inc mov iret mov bnd xor (bad) jg sahf and shll xor mov add pusha (bad) xchg cmp (bad) jmp repnz sbb or and scas inc aam sbb push shll outsb xor (bad) mov lret mov lock icebp mov sub ds mov lcall out lahf mov sub inc insl je pop mov popa add push mov insl xor jg fstpl jb fucomip popf push jle dec xor xchg xchg jnp cmpsb (bad) jg xor sbb iret loopne hlt scas clc out xchg repnz nop push inc adc idiv int in sahf call inc iret add cmc lcall lahf jle or adc add bnd lea add mov cmpsl pop outsb adc enter cmp mov fldl (bad) (bad) int3 jbe pop out js sub mov lds cli xchg push or push and adc ret xor repnz add iret add inc loope and jo ret test rol test out into mov incl jecxz add jl (bad) fstps mulb in xchg shrb aas icebp sub cmpsb ss out pop adc or (bad) call push dec (bad) je sti (bad) call mov loope inc sub add out test xor (bad) faddl pop adc fistpll imul fsubrp adc mov vpmulhw dec xor je push mov data16 lea xchg jg scas xchg cmc jg push push imul jmp (bad) sbb daa or pop jmp arpl mov lret mov inc idiv add pop (bad) clc xor add sarl push clc xchg in mov je or sarb pop fcoms add pop ljmp xor sbb ret aaa fldt mov ja cli je xchg jno mov push je idivb sbb xchg jp xchg and fiadd jle (bad) aas in dec jne pop insb inc or dec jne mov test jne hlt into stos pop pop and or push clc dec xchg leave cli (bad) fsubl sbbb aas mov pop hlt pop stos and popa mov and (bad) jg mov adc adc scas adc or into or cli nop rorl pop jbe insl inc mov (bad) (bad) call mov and push neg in pushf dec adc xchg dec jo jno pop sbb repnz sub jae cld (bad) xchg dec sbbl scas ss sahf (bad) (bad) mov xor push push ret xchg add mov loopne add pop lcall sub push sti sbb in jb pop icebp cmpsb fwait and jp dec in outsb lret ljmp or pop pop push lods (bad) enter je pop fild jg pop push ds sbb frstor pop mov mov inc pop jo add test outsb es cld or mov pop or sbb decb sub push cmp jmp or xor shrb pop popf mov sub out mov mov dec add mov insb push dec std int test lcall lods sub jns lcall test jle mov in inc jnp shrb mov sub ja dec pop pop pop inc lock std xchg fiadd jmp pop jnp les je stos inc push mov data16 enter mov clc ljmp mov adc adc adc jo,pn jge je xchg bound hlt xchg pushf nop ret ja inc xchg jge roll sub mov ss add mov mov fisttp les mov mul xchg or mov fildll daa cmpsl js add ja gs (bad) decl clc jbe inc cmpsl out push ficoml push xor and xor cmpl mov inc cltd xchg push jo xchg in (bad) pop push (bad) pushl dec inc mov push in stos jbe sbb adc fisttpl loop jo inc (bad) (bad) xchg or push icebp mov cmc frstor mov lret outsb jbe mov cmp push jno xchg arpl add push pop dec cmp cli pop or rclb leave add outsb scas and icebp xchg add jbe lods fimul sbb jns push xor cmpsl pop fwait ret sbb ja (bad) jmp pop mov dec cmp add call mov or mov test ret sub (bad) insl pop xchg pop test pop xchg adc mov das and mov sub add mov stos push out orb xchg vcmpsd xchg jo inc scas jecxz mov (bad) out movsb sub outsb inc mov ret pop mov movb add clc jl out mov mov add mov jmp pop jl stos xor pop or lcall add fwait dec cli sarl sbb push cld mov jecxz (bad) out adc mov cs pop sbb cmp jmp pop fisubr sbbl sahf mov mov es or lds cmp mov mov mov mov hlt push andb (bad) (bad) (bad) jle or aam add shrd sbb fucom daa adc push incl xchg or test lds adc mov dec mov mov cld and out xchg add (bad) xchg (bad) mov adc cwtl pusha inc or mov andb psrlw pop push clc push sbb add push pop push fsubrs mov mov shll cmpsl lea mov or outsb mov and sbb repnz insl imul js (bad) (bad) enter clc (bad) push sarl or ret out ret iret sub call xchg xchg add js pop pushf mov pop cmpsl sbb out outsb (bad) fs sbb out mov xchg inc scas mov sbb lea sub mov ret cwtl xchg rolb sbb push in clc mul ret pusha and sub mov outsb adc mov in bound xchg pop in aam xchg hlt fstpl mov inc mov (bad) xor outsb out (bad) mov dec pushf fsub dec xchg stc pushf xorl icebp inc (bad) rolb mov add ljmp lea loop xor push inc fsubs push lahf mov loopne lcall sub mov dec int in mov cld pop xchg ror jecxz andb push xchg (bad) pop ss or sbb or cmpsb ljmp rcrb cmp loopne outsb push xor dec mov idiv call xor sbbb sti rorb lea jg push out or jl (bad) (bad) ficoml lcall aam add inc dec sbb or lock add decl sub sbb jecxz adc push lret pop push push inc push and (bad) stos insb loope (bad) cmp and xchg cmp (bad) pop lods or mov mov jo sbb outsl add pop sub jecxz mov mov jb cwtl loope and ds sbb xchg bound into sbb in fild mov xor loopne pop in dec insb jecxz mov dec arpl dec mov cmc mov into mov jle sarb and xor cli adc dec or mov xlat aam xor and mov insl call pop ret iret sbb mov movsb add jns inc adc popa mov adc popf mov call jno test outsl roll xor rclb and xchg bound sub mov inc gs or or dec or or addr16 idiv pop push add xchg (bad) aam gs outsb (bad) fcomip push or xor flds xchg subl fildll ss ficompl ret rorb pushf scas jg mov (bad) in jbe add daa movsb lahf (bad) ds stos decb mov lcall sbb add mov sbbl mov insb sub mov pop lock dec fiaddl cmpsl sub mov push fwait (bad) dec add in sub int3 pop jl sub sbb cmp nop xor mov (bad) sbb call (bad) nop dec fiaddl adc xchg incb testb or mov cwtl pop pop or outsl scas decl cmp mov ja push adc lea sti (bad) (bad) ljmp mov insl fistl lock sete xchg dec dec inc fucomp push pushf lahf aam ret and push pop insl call cmc fsubp and mov mov pusha or or inc inc dec ljmp clc lds xchg lock popf push test xchg ljmp or scas int3 sub test inc in movsb pushl subb out dec dec xchg insb in push inc arpl mov std popa xchg negl mov pop and push dec aas dec gs rol fstpt mov xchg cmp data16 inc mov xor mov jo push incb xchg popa les stos ljmp xchg dec pusha je lods pop enter fwait cli mov mov sbb add aaa inc js sub xor incb mov es mov jp ja clc das add test jge jle fldcw (bad) or (bad) dec add lcall (bad) sti lret dec jmp or outsl (bad) outsb cmpsb lea add fwait adc mov mov xor pop (bad) jg data16 mov cwtl ds pusha inc sub incl cmpsl cmp inc les movb jmp test (bad) jg aaa or mov sub pop mov lods pop cmp dec or fsubl cmp mov mov pusha or imul lods data16 dec mov sub pop notl (bad) decl cmp push sbb (bad) or test in dec out add das test loop xor lahf je pop sub add in xchg add fbstp arpl or push jns lret test js sbbb xchg add push out pop pusha push incl xchg pop arpl mov cs mov mov or inc ljmp or stos push xlat out xchg icebp sub into inc rcl dec push pop mov mov pop les mov cmp ljmp mov add xchg sti mov adcb xor lea loopne outsb (bad) mov mov xor and pop ss add add dec mov mov lea pop (bad) push (bad) in loope sar xor mov dec and and push (bad) aaa push sub data16 add rcll lods or push or push xchg jecxz sbb lret pusha jge push adc in mov dec outsl mov stos fisubrl pop sbb xor loope inc sbb lcall shrl nop jae mov dec ret outsl mov cld fildll add out xchg push ljmp ficom add pop xor inc clc (bad) aas jno mov dec insb imul int lock inc mov push dec les mov sbb push mov xor adc add add dec mov (bad) (bad) mov ljmp sub notl (bad) (bad) jg das fidivr mov xchg fidivrl add cmpsb dec (bad) lock xor (bad) lock xor inc movsb icebp fwait out adc or (bad) sbb pop mov inc or sub test mov add sarl mov je inc (bad) sbb pusha or pop xchg aas (bad) (bad) add add mov ljmp popa and sbb (bad) jg push or lahf (bad) xor mov add cmp cli add mov (bad) push xchg push lods call std sub or xor mov jbe add arpl add mov jmp inc out cmc les mov (bad) ds loope decl addr16 add into and stos shlb loope lods fwait dec jle (bad) pop or jg je dec mov aaa jl inc sbb fisttp repnz pop mov fistl jno dec cmp add pop imul mov and push sbbl jl je lds sbb test jmp dec adc add ljmp outsb jg sub or dec dec mov decb imul stc jecxz push aad aad (bad) loop or cmp adc push xchg (bad) ss out or dec xchg mov adc mov jg loop stc shrb add sahf pushl or adcl aad sbbl or jbe sbb popf rolb mov sbb (bad) (bad) jae orl jmp sbb add mov orl pop xchg dec fcoms mov lret je cmc fsubl movsbl outsb xchg pop mov data16 (bad) fsts out sub outsl enter or dec les mov (bad) lock les imul pop std sub add sub push cltd (bad) adc cmp clc lods mov add lret orb pop and mov es add into push add and dec mov sbb jmp es into mov xor sub je lahf decl push sti mov pop pop test inc clc std test aaa std jmp sbb xchg cld push (bad) sbb pop imulb cmp in loop and mov sbb jp dec dec clc dec sbb outsb mov jmp push mov xchg mov seto fiaddl les enter add aaa inc rcll cli incl icebp sbb loope sbb xorl (bad) call xorl sub lods test inc daa adc inc cld fbstp stos cmp inc and adc xor or push pop pop pop xchg mov xor leave nop sub (bad) jg jo lret sti ljmp mov and into daa mov mov xchg and add scas inc or fwait adcl cli push mov fmull push and lds rorb loopne mov xchg daa add adcb pushl add outsb adc push (bad) push shrb jmp jmp push mov xor xor cwtl (bad) cmp push (bad) sub mov sub mov (bad) pop dec inc pop loop push cs add mov sbb add jmp mov lock movsl push or adc iret aad shrl insb pushf pop cmp in mov push les lock cli insb faddl jg or movsb (bad) lock sub sub mov popa rolb cmc incl sub mov mov popf xchg cmc add jecxz xchg cld dec jecxz sbb outsb dec add xor shl repz (bad) jg insb nop dec dec aam loopne or inc movsb mov fmuls or or (bad) jg clc xorb outsb jo mov jb fmulp les push push push cs xchg and push hlt jbe loop cwtl pop jb imulb or mov xor insb fldt call fdivl or je push sbb shr sbb sti push xchg add mov push add adc (bad) (bad) decl dec inc add cmp jmp andps jmp call pop icebp dec and or out add cmc inc pop xchg mov sub add sahf push inc mov daa loop push icebp and push and into mov cs fadd popf xchg or cmp std push mov sbb push push add pop jg sub sub sub push mov lods (bad) fdivrp inc mov mov or dec sbb (bad) scas and mov add rcrb jg incb sarl mov sbb repz add adc inc (bad) in sbb out mov push js xor (bad) dec loope pop mov xchg ja push jns iret xchg dec outsl ret call dec or mov rorb ss outsl rclb incb xchg cmp add and mov dec or xor cmc imul sub sarb pop add push mov sub clc aad divl std or xchg stos dec mov xor add out int3 inc adc in rcl movsl sbb (bad) (bad) cmpsb bound je enter mov mov insb add (bad) std lcall jge mov imull and icebp call addb jle mov pop add lds xchg hlt sbb mov into outsb (bad) ja cli (bad) push mov prefetch cmp jb inc xor push test dec xor scas stos xor sbb fisttp adc xchg pop jbe xor push ret rol ret bound push sbb (bad) (bad) (bad) ljmp aad icebp dec in mov push (bad) mov sbb inc enter and cmpsb xchg or or std call xor mov pop inc dec and add out jg sub and outsb pop adc adc sbb lret xchg nop repnz ret arpl push (bad) ljmp (bad) fwait dec (bad) (bad) inc (bad) mov or inc sbb mov mov nop insl lods mov testb dec ss jne fstl dec nop (bad) dec outsb cwtl bound (bad) mov enter inc fcoml in pop sub or (bad) fisttpll (bad) (bad) (bad) fld add out jb stos dec daa into pop andb lahf fldl mov sti and (bad) mov andl add jbe or idivl and pusha mov (bad) repnz add or xor and pop pop popa add pop ja mov sbb xchg push jge sbb inc xor ret adc adc add je xor mov or (bad) sbb sbb (bad) pop aaa and sbb mov add or in lcall cwtl imul (bad) (bad) out cmpsb jle jp xor or push lods (bad) popa (bad) mov mov cmp mov push push cwtl fmuls hlt sbb fstpl jecxz fidiv cmc and (bad) (bad) jmp arpl outsl out sub push and pop (bad) hlt outsl out cmp inc jle insb dec cld sub inc (bad) ljmp (bad) jmp aad add mov out jb clc push cld jno mov cld dec (bad) xor push fwait shrl js dec fisubl bound dec in cmp incl leave clc jae movsb jb shr sbbl sarb inc sub pop (bad) test subb pusha int inc mov and pop cltd cwtl add adc xchg xchg xor cmpsb smsw dec push ret mov andb dec cmc jle mov add or dec pop (bad) mov and test cld pop lret popf (bad) or mov pushf dec andl pop movsb (bad) fbstp add inc dec dec (bad) out inc dec sub test mov in fwait insl mov cltd cld and rclb and popf xor mov ljmp sub addr16 or decb or push sub jecxz cli sbb and cmpsb cmpsb inc in cmpsb mov and add fdivrl sub xor (bad) pop mov adc xchg das mov or jmp mov test add or inc decl sar int jns inc inc arpl loope inc test mov add push (bad) pop and jecxz mov loope (bad) xchg pop jno xor movsb push (bad) in jmp and sbb into add pusha fsubrl push movsb mov xlat outsb fiadd clc add lock mov dec adc rcl adc mov mov mov outsb outsl mov sbb cli or clc data16 cmpsl nop (bad) ljmp scas or lds scas push push icebp (bad) mov daa pop shll (bad) mov cmp test daa (bad) and sbb inc std shl lods dec jbe dec inc ret dec bound xlat (bad) (bad) push add and pop ds dec sub add out mov and xchg pop cmp sbb cld rolb cld lret xchg sub ret or jp sub inc push test pusha popa loopne aas nop push mov mov loop mov add out xor pop aas inc mov cmc (bad) cmc mov mov aas mov incl fstpt nop sub adc (bad) mov mov js std pop aam add sub stos push sti rolb add sub out mov mov test fstl inc lock sbb divb adc movsb adc or les fcomip inc push cltd ss sbb xchg divl or shrb sub push sub inc add test lea lods push pop test das loope jl or outsl lret pop cmp dec std pop fs mov dec in fistp xchg insl pop jle mov incl cmpsb es lock (bad) xchg sub add outsl xor ret int pop pop and loopne add insb adc (bad) xor add pop push fcoms or and addl (bad) stos ret add mov jmp sbb push sbb fwait and jb testb mov shrl imul arpl sbb xor out icebp and inc jo push js loop add cmpsb add or push mov mov test jb sbb repnz or ret lret les fwait xchg sub add pusha jle adcl and mov ljmp imul mov mov cmp xchg (bad) lds fs sbb (bad) mov pusha jecxz inc jb dec mov ss es (bad) xor (bad) out push mov cmp lods dec jmp inc loop mov cmp cmp (bad) fiadd push inc daa movsb and or int es faddl (bad) fildll inc outsb mov popf test lods idivl jl cld xchg in hlt insb fildl addl mov fs ror decb incl cld lret scas adc mov ljmp popf mov in push mov mov dec popf icebp cmp inc xor jno and mov inc lahf mov shlb jb iret jo addl pop ret push fstpt fisubrl test call mov clc jnp inc in add xchg (bad) iret and sbb (bad) fisttp sahf (bad) mov mov add push dec imul add inc inc and jle pop fsqrt mov pushf out xchg movb loopne add (bad) xor test js push jl mov leave cs outsb mov sar push stc call mov dec jle pusha or push adc sahf sbb jmp jmp jmp jbe out je rol push jle mov fldln2 sbb inc xchg mov add mov imul pop outsl cmpsl xor je bound lret or cmp xchg dec cmp fistpl mov ljmp insl std ljmp jmp cmp and aad pop xchg cli mov inc cmp xor lds incl or and cmp fwait dec test ret lea adc pop daa push or pop pop pop mov cld xchg add orl (bad) in sub movsb xchg xor imul mov shl adc add decl lock add xor leave push sub ljmp mov sbb xor (bad) cmpsl stos inc cld push stos mov sub and (bad) call fsubr and xchg mov lret jbe (bad) add jno inc mov ret outsb outsl lock in sar aad xor push je xchg cwtl fadd flds out movsb push outsb inc pushf inc sbb call outsl stos daa jle adc outsl mov insb stos mov stos lcall pop inc (bad) ljmp xchg sub movb mov in ds (bad) push mov mov nop negl or jnp jns iret mov (bad) jg pop sahf call icebp fsubr jns pusha ret xorl xor enter lcall ret push xchg adc ret imul or mov aam (bad) (bad) jg add hlt xchg fwait rcl xor (bad) pop and loop (bad) je add (bad) sub push pop cli mov ljmp rorb sbb jle ficompl jg jmp adc and fidivl in add jb mov shrb out and int3 push je int hlt sbb addr16 sti dec loopne (bad) push pop and push cmp ffreep (bad) int inc shlb cmp cmpsl xchg (bad) aaa or mov xor lret es sub or push add xchg sbb lahf (bad) cli push push movsb dec or jle icebp fbstp xchg fcomi inc loopne sub jae std frstor or jae rcl jg test pop xor data16 add mov sbb es dec outsl xchg lock adc jl out nop addr16 mov pop jmp outsl xchg mov mov jecxz add mov dec cmp jnp cmp jbe mov or call jge xchg jns call pop in imul dec dec pop pop pop push dec mov or push test xor or pop icebp mov and mov sub jbe push repnz mov ret dec lods data16 cs lock adc dec mov incl jmp mov dec hlt add aaa inc outsl lcall dec mov or out (bad) jg test popa and mov mov ds and test mov inc loopne test or das push and ljmp shrb jno loop and mov fwait clc cmp jae popf mov test mov rcll push mov (bad) sbb loopne (bad) lods in es clc xchg fldt enter pop ret and push fistpl or stos pushf mov (bad) and ja push stos pop dec popf sub mov inc fisttp mov pop jmp das clc pusha xor mov test outsl dec out add addr16 daa push dec sub add lea or mov and aaa jns sbb add inc daa jl and stc adc incl inc fisttpll push sti sarl jae push sbb mov ja mov cmp mov pop jp add fwait dec or aad lahf lock add call (bad) adc mov push ljmp xor xchg xchg mov push stc outsl std mov push mov or pop or sub fs sbb shr (bad) rcrb shlb pop (bad) in xor jg sbb sbb and lahf jp pusha lea sbb loopne mov and dec or xchg aam pusha add pop (bad) fwait (bad) cmc fwait test loope push mov cmc push sarl test sti out add mov mov clc jg popa ss jne dec out xor (bad) cmp sti xor lahf mov add hlt pop popa ret (bad) shrb add and sbb pop sahf or dec dec push jl cmpsl ljmp sbb inc hlt or sbb std (bad) (bad) mov in xor add fimull or cs mulb (bad) pop push push add add push xor or jge mov mov popf xchg add dec loopne mov and ljmp fstps sbb sbb (bad) pop sahf scas orb inc faddl in xchg daa mov outsl push rcr aas push mov test pusha and fdiv mov hlt data16 or out add ss sahf sbb inc stos pop xor or adc pop repnz test add or cmpsb sbb fsubrl pushf inc jb cs inc call loopne or mov pop pop add xor add nop incb gs mov out add loope mov (bad) add jp mov adc pop ljmp adc pusha jle adc decl fnsave xor lahf cmp add xor or movb int3 mov adc inc mov lock inc fucomi or cmc (bad) sbb repz pop adc (bad) lock mov movsb mov inc xchg push addr16 push xchg rolb lcall cmp addr16 cli xor ljmp push rorb jae pop (bad) aaa push ret add pop push xor add push iret jl in cmp std stos add fsub int3 and push jo js jg gs jb xchg add cmp insl pop pusha adc movq mov dec mov add mov xchg pop sbb mov cmp add jno sarl aam jo daa add mov xchg mov incb sbb addl push xchg inc fdivs fisub loopne dec jge or mov sub xchg and addr16 hlt repz rclb (bad) xchg sub (bad) inc aam mov (bad) xor and leave insl inc insb (bad) out jl daa jle (bad) rcl push push fwait out lds arpl int pop stos add pop mov scas adc imul cmp mov (bad) adc ret decb mov adc push mov mov push mov int fildll pop or push roll incl ljmp inc out in push inc add and mov ja add xchg push adcb lds ret call adc cmp jmp push mov shr imul jle dec xchg dec xchg nop sub scas mov jg call or cld and (bad) add daa xchg into push (bad) ret fcoml add lods ja (bad) bswap dec mov aaa fwait rcrb rcll mov lret out mov aad sub outsl dec fdiv dec mov jge fwait hlt outsb and stos mov (bad) ja (bad) add sbb xor sbb mov rorl mov call cmpsl pop repnz into ja cmp aaa inc cmp js mov or icebp lods dec je test daa push ret iret xor jg lock dec xor jo lock aaa push (bad) sbb or ja ljmp or mov fsubl js inc or sbbl lock xchg add cmp test xlat aas or dec ljmp inc les cwtl xorb sbb pop mov mov ja sar mov scas pop stos bound (bad) mov pushf inc jmp cld sub out aaa out enter (bad) push test push sub xor fbstp mov das jb fisttpll data16 adc insl push xchg out ja nop push cmpl out lock sbb or rolb adc bound push jg repz mov rorl push xchg pop lret (bad) outsl mov fs jge loopne adc inc cs xchg shlb insb div rcll std in xchg or sbb mov push jle inc mov xor sbb outsl (bad) mov jo cmp (bad) and pop and or orb adc arpl shll arpl outsb adc mov fldl icebp sub pushf sub es idiv push incl cli xor subb (bad) jae xchg fildll sbbl into add mov cli inc push stos jo gs jg cmp lret xchg sbb out pop cmpsl pop je mov test fildll jb in inc inc ds add outsl movsb xchg in lods sbb pop dec imul pop in pop lods jae loopne xor ljmp mov int3 fldenv pop (bad) shrl (bad) (bad) fild push xchg jl sbb ja jo lods aam and sbb push xchg test xchg mov notb push add push outsl icebp cwtl ja mov cli fisttp nop inc rcr jmp nop ss aaa add inc xchg clc and and loopne sub sub pushf mov jl fwait mov sub dec mov cmp adcb cmc popa or jg into add ret aam scas in das adc outsb or lahf in out sar cmp push sub inc ret mov into and ja cs ds mov adc jg jbe inc pop or fcmovb pop add call jmp (bad) pusha lret sarl (bad) or loopne push mov test sbb cmp call sub int mov das add das push inc rcr jo leave adc mov movb arpl xor mov aad bndstx out adc dec imul pop pop inc add imul sub dec outsl xchg lret pop or jle sbb icebp pop ret lods add stos dec fstpt mov cmc outsl adc mov or rol mov xchg sub xchg mov ja adcl movsb push icebp rcr in and sar scas mov mulb insl sub dec loopne pop lock xchg mov or loope ret add inc incl ficomp sbb out sub mov add sub dec add fsubr or push sub push (bad) decl mov icebp ret stos dec (bad) and ljmp movsl jns int jbe jmp inc cli fs sub fwait dec push cwtl int sub xor lea xlat sbb pop cli add pop cmp and mov (bad) sub push xor lock xchg add in mov cmc fistp xor mov das aas cmp ret outsl xchg shll fs pushl pop enter pop lods enter mov push outsb xchg sub decl sbb nop jmp mov sahf dec pop lcall inc pop test push add add fild call imul mov mov out sbb clc enter pop mov add sbbb (bad) ja and scas adc mov (bad) aaa fwait (bad) fistpll aas dec sub push std out (bad) mov adc add pop nop or pop sub (bad) adc (bad) call mov cmp inc xor bound js and mov popa inc (bad) mov xorl dec ss or dec out xchg xchg ficoml or fistl xor out xchg mov lcallw out sti adc les cmpsl mov sub pop xor gs jp jecxz sub mov outsb insb fnstenv push lret mov push mov or dec pop scas mov jle cmp clc dec loop cmp lea (bad) sahf dec add mov or mov jmp jmp das sub jmp in (bad) dec cmp jbe pop rcrb adc xchg lock imul cmp lods adc ljmp pop mov add add jno mov mov jmp sahf rorl inc jmp loop pop jae dec mov bound (bad) dec adc jo xchg xchg lcall fidivrl mov lock dec add or fwait inc shl cmovl sub test ljmp (bad) ficoml pop fiadd jg mov (bad) lock sbb sarl push push subb in test das rorl das push loop stc pop add roll or dec adc stc nop mov xchg mov mov add ds addb jo (bad) sub push popf sub add aas pop sub mov js scas test fcomps inc rcr pop aad jg dec and inc cld add pop add out mov add testl iret ljmp cld lea mov push popa add mov nop xor cld push loopne mov xor pop sbb mov data16 jg mov and mov mov jmp adc dec or aam pusha xor (bad) and (bad) cmp aaa dec cmp cmp mov push mov shll adc das mov sbb push xor (bad) leave push lret push and push mov jecxz lea mov push add add ljmp sbb push ret xchg adc sub or or test cmp cli loop lret xor pop cmp inc inc mov cmp dec push jae cld aaa jl,pn ret jecxz enter jnp xor les mov mov mov mov add mov les sbb je fnstcw icebp ja pop inc cli and pop mov lods and mov fbld jg jbe cld les sub push mov test inc loop sbb dec inc ja adc pop sub mov pusha aaa (bad) testl jmp push hlt in pop add rclb mov sub pop jecxz ret or out xor sbb (bad) pop cli mov es pusha (bad) es sub mov pop push ss add clc jg imul pop lods pop xor mov cmc jecxz jbe mov inc sti popf mov clc mov inc nop sbb fcomps les cmp out faddl push dec ja aam aad mov dec add sub aaa inc nop sahf jl xchg adc ljmp mov xor push sbb mov inc inc lret decl movsb cwtl loopne int3 xor int or fist in dec cmp cmpsl roll mov and jns sbb (bad) ljmp pushf and rcrb lock cli outsb push sub push inc ss das push inc dec data16 pop sub jg inc adc call in adc lock pop push mov xchg (bad) sbb loope mov mov sbb es pop mov push xchg loop insb repz add stos xor into sbb lods lcall lods cmp repz sbb cli lds xchg sub or mov addr16 xor shlb adc mov and or xor jle or sarb das daa push rcrb mov lods and test or sar and fimul ds sbb xor mov (bad) adc jbe inc jle in subl (bad) pop bound sub or fsqrt ljmp mov xor loop adc inc daa add push test aam shrb inc ljmp ljmp addr16 js pusha ret rcr jo ret outsb insb pop add jg lods incl es inc add movb lcall push cmp les (bad) aas sbb dec rcl test pop xor rolb stos inc adc push xchg sarb movsb lods call pop insl in aaa add sahf je and and fsts mov xchg dec shlb dec jecxz xchg fs shll jg ret pop fnstsw push jae daa mov cmpsl cmpsb dec loope decl aad push mov jne dec hlt add movsl mov aam (bad) lods dec loopne (bad) fildll test mov add testb inc (bad) dec adc mov sub jo pop pop dec sub lock cld jg sbb (bad) add frstor fwait jbe cwtl mov fildll decl or hlt push loop adc push mov call rep cld aad pushf jp cwtl sbb dec maxps jmp std pop enter xchg xchg pop jg lods mov adcb int ljmp jbe sub dec jge jnp add je ffreep xor pushf inc idivb fild push repz movsl nop xor mov cmp aad push xchg stos mov call out ficomp insb ljmp sub cmpsb sbb (bad) pop push jmp adc pop adc ret mov fisub jle (bad) rorw orl jbe bound (bad) dec push jno mov sbb sbb and push adc js movswl mov add icebp inc inc ds dec loopne push hlt sub xor js es cmp pop movaps (bad) adc cmc sbb pop es (bad) imul andl cmp dec adc fs mov dec fnstenv dec mov popa mov jbe push test iret jbe mov shll outsl fist mov sbb (bad) mov int3 sbb or mov or sbb or cli xchg (bad) aas adc sbb xchg mov test jnp dec pop mov stos sub aaa cmp mov mov ljmp or xorl inc mov push je pop out pop add sbb mov fstps xor out (bad) push sbb adc data16 (bad) (bad) fcmovnbe push add aas adc mov jno cmp incb pop sub mov (bad) dec sub lahf movsl (bad) jg inc nop lock cmp and out ljmp dec ret stc outsl into inc add sbb push adc mov dec inc sub ret xchg (bad) jg sub movsl xor jmp mov and and push mov out addr16 ret scas (bad) mov mov mov mov frstor out pop imul cmp clc inc xor or js cmpsb aaa cld outsl mov cmp test out push test out lds mov push dec mov add dec dec or push push cs leave (bad) out repz lods jl movsb pop pop cmp mov mov int3 movsb adc cwtl inc test add rcrl xchg add or (bad) jmp movsb sahf inc in ficomp les fidivl incl and jnp adc cmp xor das mov mov lock test jbe (bad) jecxz repz add pop jo push mov andl xchg adc pop and bound nop and lods pop je pop xchg lds hlt int ret stos dec jge mov jecxz xor movsl add addr16 repnz loopne fsubrp mov sub sbb and fiaddl mov in add mov xor dec aas cmpsl fs sbb xor xor mov or clc adc mov sbb jle adc or ljmp dec mov scas mov or fwait dec shrl (bad) (bad) pushl mov hlt or aaa fimul cmpsl push sbb adc push outsl (bad) pop testl test aaa cltd rclb sbb (bad) imull mov (bad) scas xchg sbb pop (bad) pushl sbb dec jmp add dec icebp sbb sbb inc fisubl add or adc push dec stos test lods jb scas pop pop jp jmp cmc or push or adc lock pop loopne icebp mov jle jbe in xchg push lcall lcall (bad) out aaa or subl addr16 sub adc or in dec int3 roll dec or jg jle pop (bad) or insl xchg mov cmp xchg aas pop cmp mov pushf push add push fwait or frstor sub mov test lods jne pop jbe xchg shll pop mov divl movsb add mov dec idivb sti dec sbb cmp push shlb adc pop je sbb cmp xchg dec lock dec mov scas jo rorb add xor push into insb xchg (bad) mov add bound cmp mov push and scas xor mov or push xlat push push (bad) mov loope mov jnp adc or (bad) cmp and inc add data16 cli pop lods inc adc xchg sbb lcall hlt xchg shll and sbb sbb insl adc rorb xor addl cs jmp incl sub or jne cmpsl xchg lea decb fcomps push aas aam or cmpsl nop push shll popl mov adc outsb push movsb bound jecxz mov les add xchg (bad) aaa jle ja shlb lret adc xor or cmp imul jne popa jmp sbb test stos lods mov lcall inc dec mulb push aad xchg inc data16 pop rorb fiaddl pushl loope and mov inc call xchg pop pop mov ljmp cmc (bad) out gs jmp (bad) cwtl sahf dec push jp jl pusha ljmp pop addr16 movsl insb sahf aas sbb insl je push mov push imul sbb adc ret dec subl push push mov add push and and push insb (bad) int3 (bad) cmpsb pop test jmp addr16 or dec ss dec call je jp pop cmp mov inc push jmp push cmpsb (bad) sbb cmp and imul inc sub and cmp xor add mov mov jo ss int3 mov jp pop mov loope inc mov sbb (bad) (bad) cltd mov aaa roll (bad) pop std aaa xchg hlt stos cmp jne int xchg imull pusha push dec jns xchg hlt stos pushl inc popa or xchg jb adc inc or cmp jb fwait mov (bad) aaa xchg xor jae push adc lds hlt pusha out aam in lock sub sub and lcall lret xor nop les xor xchg (bad) call jmp ffree mov cmpsl sub mov je mov lea cs push jg jp dec fs jo mov fcomi icebp sub cli das mov xchg lea dec mov jecxz mov adc xchg sub cmc lods das and dec push loop jae (bad) lock cmp in add sub xor add repz cmp std push pop sub mov add or jo push decl adc and int dec rcrb (bad) or inc dec add sar mov mov aam loope xor jg and and adcl inc in bound movsb xchg jne cli and dec xor push mov pop aam add or out pushf sbb cli xchg jp cltd add loopne das mov push push insb and mov jecxz push or sub dec call pop (bad) mov fldl2t leave adc mov call decb pushf cmp push add cmpsl fs insl ret xchg fcomip ja nop dec dec jo enter jae mov cmpl call cmpsb (bad) je pop and (bad) push push sbb cmp xor out (bad) jl test and lret inc mov arpl test (bad) jg sub cmc sub inc mov pop repnz cmc add int pop dec nop repnz pop and movsb fiadd pop dec sbb (bad) f2xm1 add idiv cmp fistl loop cld ljmp push pop mov sbb jle and push jo mov es scas sub jne pop xchg mov mov out mov mov or xchg xorl dec adc jno les pushf dec jno cmp lcall aaa jb stos cld mov sahf call clc iret mov daa push mov dec xor fld add dec push and mov in rorb mov push push sbb and cli dec sub pop and xchg into or popw movsb cmp xorb mov cmp loop mov pusha (bad) out pusha jno sub xlat add mov mov or jb aad xchg scas scas dec pop pop test out jl and fwait push lods mov jmp loope mov lds sbb cli push pop loopne ljmp scas mull sub (bad) (bad) cmp mov mov pop push ret sbb sub (bad) mov (bad) cmp jno stc pop add inc mov add adc aaa add xchg or daa cli nop dec and xor mov mov sub fs rorb xor add sbb jmp cmpsb popf xchg push nop push add call cli insb pop enter sbb cld fildll push ret ficompl add jae jnp mov movsl mov cmp xor ja hlt je mov insb les (bad) (bad) jmp mov out mov jbe dec scas icebp xor push xchg mov mov xchg xor mov jl imul fnop add jae out scas data16 mov jmp push mov (bad) mov outsl clc sti mov out in xlat bound mov mov mov xchg sarb notb cmp shrb repnz jae (bad) push fsubs sub (bad) pushl xlat mov adc rcl pop lea sahf not into shr mov (bad) xchg sbb xchg (bad) pop (bad) call aam add dec das mov sarl lea inc dec test pop loopne ds (bad) fabs rcrl test jmp loop es sub call (bad) lcall push cwtl sbb add ljmp push push add (bad) aaa pop mov xor leave push cwtl ror dec fstpl adc adc xor mov jbe adc das adc ja cmpsl and inc push sbb cmc out pop in stc and sub xchg fidivrl imul lret loop or jmp cli je cmp ret push jl stos mov lods add mov pop mov push es cmc jg loopne push cmpsb int3 pop jno cld lcall xchg xor mov or mov adc (bad) lds mov cs scas cmp outsb hlt add cmp (bad) mov cli push and cmpsb push pop dec xor sbbl mov or inc inc pop addb mov cmpsb mov or scas xor add or lahf ja mov rcrb push mov pushf (bad) inc loop pop adcl mov xor xor test sub cli lcall fbstp xchg add (bad) sub (bad) ss mov loopne das rcrb sti inc lret mov addr16 ret pop mov test or rol rorl cli sbb sub nop cmp in push cli jmp push cmp int mov sbb test mov or (bad) cmp daa inc jne or xor addl and call fistpll in fdivrl pushf push xor ss add shl (bad) pop jmp cld outsb testb jno imul cmp aaa fwait mov sub mov pop jbe arpl (bad) add or add cmp jle fwait cli incl xor out sbb sub add and xor hlt pop mov fucomip ja push pop sbb add sub mov loope fild pushf ljmp inc pop pop or cli jbe cmpsb inc pop inc sarl bsr (bad) outsl xchg test in xorl or pusha and mov jg cmpb push add sbb (bad) decl arpl andl ljmp rorl dec and test out pop jecxz aad pop jne imul push xchg adc daa sbb cmc je mov sub call (bad) sbb fdivrl sbb js sub push dec mov leave imul lcall mov icebp insl rorb jmp sbb pop roll mov jp (bad) cmp (bad) mov sub (bad) mov inc jne cmp roll outsl decl rorb mov add xchg pop add aaa std push pop adc inc ror add test imul adc mov ljmp gs (bad) sub pop ss icebp add mov lock push lret add mov pop push push fdivs jno lcall and shrl mov fistpll iret (bad) dec or cmc fwait or mov xchg xchg mov dec mov pop daa mov mov or mov xchg arpl ret and fadd aas cwtl and ss lds inc add sarb popf push cmp or mov (bad) sbb fstps test and aaa pop (bad) inc inc enter (bad) cmp std jmp dec shll sub rcrl and lcall jo je xor pop daa add ljmp sbb xchg inc jecxz jne mov add fldcw push or fnstenv cmp dec cli mov or mov jmp push dec dec bound rcrl test mov mov (bad) jbe sub cmc pop fcmovbe (bad) (bad) jg sbb mov xor pusha loope add popa jne stos dec mov std fildll push test mov xchg clc xor mov jo jg into sub sar das mov outsl rcl mov (bad) (bad) lods lret incl sub in inc xchg or and jmp jb ja cli jg push mov flds adc mov ficompl sarb mulb out push sahf dec sbb add (bad) fildll add mov ds adc xchg loop inc mov inc pop test shr jbe ret push pusha push or mov lret add push cli xor inc xchg and mov mov (bad) ljmp inc clc cs push test jae dec fnop dec add (bad) shl mov ljmp inc mov sti data16 or test xor adc inc jmp cmp jo pop aad ss data16 shrb jg ljmp aas pop ss mov enter cmp loopne xchg push scas (bad) or (bad) popf sub rorl push fnstcw pop jb bound mov (bad) or push lea pop ror (bad) sti add mov sbb cmp xchg push loop (bad) call mov add icebp push insb cmp clc ja lcall mov inc fisttpl mov or adc pushf pusha in aad decl (bad) imulb mov enter mov sbb jno lock pusha cmpsb loope pop fstpt add cli mov movsb (bad) int mov xor push cli push clc cmpsb negb inc decl mov cld aam push fldcw inc fsubp pop push inc repz lea jno aas std and (bad) push in stos and add xchg hlt divb jp add in fild rorl or je sti cmpsb mov sti push dec lds orl je jb adc ljmp mov ss and or dec dec int3 sar (bad) lcall out xchg cmp push pop (bad) movsb mov sti mov jne cmpsl mov xchg cmpsb lock or int3 repnz (bad) call adcb xchg popf mov call popa out xchg (bad) aaa cmp cmp pop hlt push cld pop sbb pop xchg jp adc stos or out and mov sbb jl out ljmp push mov sbb add js icebp cmp dec adc pushf shrb (bad) mov cmc adc inc xchg subb mov sbb dec icebp mov cmp push (bad) mov test add pop das rclb hlt sbb (bad) aaa sbb cmp fisub in (bad) sbb imul ss call adc (bad) cmp data16 into dec inc pop mov lock shrb bound sbb cmpsl jg xchg ja xchg insl daa inc pop out sbb dec in cltd mov mov pop je adc test das mov loopne xchg or loopne fimull add ss and and aaa push or xor lea pop inc out jmp mov pop insl loopne mov jne jb sar movb mov testl ja push inc mov rclb pop cmp negl adc mov (bad) mov xchg scas pcmpeqw inc xor cli and mov pop cmp (bad) decl mov daa lea inc inc leave lret xlat scas sbb xlat ret xchg sbb or mov sub jl sub std sub sbb lret and jbe fidivr push inc sahf popf (bad) loop jecxz (bad) call xorb (bad) ljmp jle and jae insb push aam mov mov mov add loop mov push jno mov sbb mov int3 ret mov push cwtl xchg dec mov inc (bad) pushl add test movsb lahf addl xor incl (bad) (bad) pushl inc adc cmp jno dec and cmpl cltd and gs jg (bad) test mov add out test (bad) jnp sahf movsl test xor pusha pop mov sub (bad) (bad) ljmp cld pop mov outsl mov inc adc pop pusha inc mov pusha dec sbb (bad) pop pusha cmp or push sbb rorl inc fs xor adc push (bad) test negb xor inc inc aad push jno scas aam mov pop mov repnz insb clc and in push mov mov or adc fmuls dec sbb adc mov shll cli dec mov cli xchg sbb in or fwait subl mov sbb push (bad) adc dec (bad) sbb ja xchg scas sub adc cmpsb ja loopne gs mov cltd mov (bad) jmp push xor call cmp hlt jne sbb loop incl inc sub jo dec sub mov pop outsb mov (bad) decl insl push adc cmc lods imul push inc mov das adc lock repz subl lock mov cmp loopne (bad) ljmp test (bad) fmull fs les inc ss xor lret insb inc add mov add inc mov test dec pop sbb sbb sbb aas dec lods fucomi (bad) std and mov pushf lock cmp cltd pushw cltd fsubs dec add (bad) cmp mov adc cmc xchg or mov aaa mov pop add lock out and fimull ret cmp dec add add pop and xor sbb js push mov dec mov (bad) mov les icebp cltd add stos addr16 push xchg subl pop add inc jmp inc dec cmp dec dec (bad) jg inc fimul fadds fcom out pushf cld scas pop add test mov in jno push xchg pop add stos xchg lods xor nop pop mov and rorb push icebp mov (bad) decl cmp or adc sub mov mov jecxz sub cs xchg ss jne test xchg lock lcall les mov cmp (bad) arpl das push andb shrb ret dec fs jg or jge add movsb loop inc push (bad) mov inc std into sub loope push jae mov mov popf rol test push lea adc sar call cmp test inc cmpsl sbb insb aad ret xchg xchg mov test mov cs cmpsb outsb cmp popf adc les adc leave xchg adc mov nop xor cwtl pop ja mov push std pop and daa stos in roll pop pop jecxz xchg pop sub jbe pop cwtl ljmp outsb mov cmpsb test ret jecxz mov push xor imull clc inc sarb or push pop cmc or dec jecxz lret sbb fidivrl sar mov xchg sbb bound jbe movl add add sub add test cmp loope mov xor (bad) aas imul fldl add pop ljmp mov add fnop push shrl ljmp cmp aaa mov mov into jecxz fcmovnb mov dec pop push lock (bad) incl (bad) lds adc push imul xorl inc mov dec loop pusha pop jle (bad) clc mov adc push scas push sbb and ljmp stos arpl add xchg mov leave xor ss ss bts mov fsubp loope or das sahf sub dec adc mov jp movsl decl push cs jmp aad mov or pop dec adcb cmpsl push jp push (bad) loope add arpl shll jge mov add add scas cld scas out insl cli nop or sub loop and fstpt (bad) sbb add lock mov cmp call xor mov into stos sub jg or ja lock and push sbb jmp scas xor and jg adc and (bad) mov ja (bad) and lea aad push aaa xor mov jle adc and or faddl cmp mov roll jo addr16 add (bad) (bad) jg in sti sub mov iret adc jg std pop cmpb sbb sbb jp inc fbld xor add mov rorl jbe (bad) fisttp inc pop jno mov push in std mov ret xor push or xor mov mov movsl xor mov std bound jl lcall lock jmp out iret or dec push popf ss ret pushf pop inc data16 out mov fs or fcmovu (bad) mov lahf inc sar (bad) mov mov jle mov dec pusha inc dec ss fucomi test fs mov xchg adc xchg dec ljmp into inc jbe xchg into or call hlt adc sub (bad) pxor jne movb cmp addb out pushf hlt outsl mov stos aad enter xchg or fucomip mov out mov xor repnz (bad) fmuls jnp ja rcrb push inc dec dec jae prefetcht2 mov dec loope inc dec fistl int sbb or je nop lahf xchg fldl xor loope push jnp loopne mov cli fbld or aam movsl pop mov out xlat incl xchg cld pusha mov fwait sbb jmp or push (bad) adc iret add mov sub xor loope xchg fisubl and mov mov jp bound leave loope push cld call jecxz,pn sbb repz mov inc arpl push dec scas (bad) js fisttpll push movsb jne dec in mov add xchg add xchg mov xchg (bad) inc lock adc mov (bad) cli insb dec sub cmpsb incb push jo inc pop loopne pmulhuw cmpsb ljmp in cwtl mov cwtl repz jno or mov (bad) loop test call movsb cmp adc xchg adc mov ds inc cmp sti in int3 jg std in fwait (bad) hlt inc and (bad) hlt (bad) push xorb mov cli add ja mov and sbb inc test mov out sbb imul cmpsb xor or mov push sbb push add and dec push cwtl xlat jmp xchg cmc outsb or testl jno fwait (bad) (bad) lcall mov cmp movsb xor push push mov push cld ret inc ljmp dec jmp mov mov or popf popa dec (bad) fcompl clc in and xchg mov xor daa into push loope mov decl mov stos pop dec cmp fstpt std ja mov and adc mov add fisub lods push cld fstl insl sahf jo cmp jno push sub mov mov cmp mov jmp test add cmp inc jne xchg and scas lock mov jl adc add jg dec mov test lds aaa dec sub enter push jge sar cmp test xor insb mov icebp lcall push in into std mov push mov lods mov (bad) frstor mov add mov loopne xor call fildll cmp loope shrb (bad) (bad) in cmp jecxz loopne push gs mov (bad) popa mov adc sbb lahf jmp es add es xchg jge sbb (bad) scas decl dec pop mov and dec iret pop mov add adc add decl xor (bad) in mov or mov in fsubrs test dec xchg pop cli scas push inc xchg fwait ss call add or repnz xor and push xchg dec sub pop test xchg icebp dec push addl test push fadd stos xchg mov add inc jp lock lods pop add in dec popf lds icebp outsb push push mov in or (bad) xchg loope pop cmc lods insb and out call dec in shlb sbb loopne sub (bad) xor mov cmp loopne lods and xchg jl jg hlt jl jg test jmp xor decl inc (bad) jno out mov out jl xchg push fsubl and cmp cmpb push fistpll lcall sbb cmp into gs cmp out aam adc jle out mov mov xchg ds sar push cmpsb dec (bad) adc mov pop fstps add adc xchg cmp or leave out sahf stos add inc les aaa out mov mov xor xchg lahf fistl add (bad) cld and imul add jb mov xor dec (bad) or cmc jp push in roll aas gs mulb adc clc sub adc pop add gs scas fcomip mov or (bad) notb cmpsl jne cmp xchg push or (bad) add and mov pop gs fwait cmpl xor pop lods dec jmp sbb fidivr adc fild jmp (bad) shlb adc add or dec or adc aad rolb in clc sbb movsb loopne sub jno mov pop repz push icebp push loop lods xchg lret xchg test cmp mov mov in adc dec out cmpsl adc negl pop int mov std dec sub mov cmp leave mov aad mov into add inc nop sub lods push cmp pop jbe push int sbbb add mov or jb fnstsw mov xchg mov fildll aad cmc sti lahf push pop cmp imul sbb dec mov stos insb loop sub test jg mov cltd pop les xchg ljmp push inc jno pop add mov mov push gs pushl jnp and xchg push call add repz mov es imul stos or in (bad) (bad) fisubr lds jg sbb adc ss in sub lds lock add ffree test dec push sub push cs or jno add cmp out lock stos test jmp in inc and mov mov leave or cmpb mov lahf sub jns adc cmp repnz xor sahf adc aaa jge ficom (bad) push push outsl adc push jo xor nop decb dec cli insl das mov mov pop cmp adc (bad) cld (bad) or ds mov add adc sti fdivr jg jle out and mov and je add hlt sbb mov nop cmp xchg mov push mov mov pop lahf pusha pop push test orl lret scas (bad) jo jle mov add mov adc xchg xchg mov adc inc add sbb mov mov lods divb cmc adc jb adc in add mov dec sbb fwait inc jmp pop sbb add inc lcall sbb cmp out andl inc sbb mov dec jge sub cmpsb or in sub fscale loope jg sub mov mov cltd add cld (bad) cmc lcall mov inc and imul shrb mov cmp dec add pushf push (bad) sbb inc xchg mov jl push insb int ds or adc sar decl dec jle inc int3 cmp dec inc lods push in std (bad) mov jp aaa pop xor sbb aas cltd add sarl cltd lock push or mov inc orl mov cmp test pop leave lret cli mov push mov push mov jp scas pushf sbb dec in test fisttp call icebp mov daa jnp mov sbb or fcmovnbe (bad) adc fnstcw mov mov rcll ficomp inc (bad) fucomip xorl sub sbb add jbe stos icebp scas jne jo cs ret popf fadds incl inc (bad) inc cmp sahf nop (bad) sub (bad) mov test mov or pop xchg cmp pop rolb repnz mov rorl dec mov or je jno xor dec mov mov outsl fistpl inc adc cmp push pop add xchg mov sarb and mov jmp jge test and or jnp mov mov cmc mov sahf xchg mov lods push mov push dec mov sbb adc add lcall pushf lcall dec ja (bad) mov test mov fcomip mov jg xor push aam js push sbb icebp xchg push icebp testl or and out xchg out js loope pop dec call sbb aaa xor inc idivb pop xor dec xchg ja (bad) jp (bad) mov cli inc sbb pushf inc xor push dec and hlt sub insb test mov pop jbe jo fwait call movsl dec xor and add cmp push rcll push sub cmp add in and lods push enter xor ja push cli (bad) lcall jo (bad) fidiv jmp or pushf cmovno call xor push xchg shrl (bad) mov jg mov sbb pop sbb fnstenv pop or mov lret (bad) jb and insb lahf mov lock mov outsl inc push ja je sbb rolb popf add mov std mov mov loop aad adc xchg scas adc ljmp or cmp in push ret shrl or cmp xchg sub sbb and xchg jg leave xor decb dec pcmpgtd pushf or test je int3 sbb (bad) jecxz std out adc popa cs jbe jnp or dec cli fdivs and mov sbb pop test shrb sahf dec mov test shll iret mov scas mov sahf test inc stos sub fwait (bad) cmp push or jns shr mov popa idiv (bad) popa push add aad jecxz lea add dec scas xor dec (bad) sbb popf pop insb inc jmp or or push xchg adc (bad) jg lock sbb call or loopne (bad) into addr16 fild adc xchg cmp aad cmp test push dec ret add lea addl flds (bad) mov stc xchg push inc es gs inc dec shrb add adc movsb aas or add std frstor (bad) cmp divb cmp cmc aaa adc fsubs aam lret xchg test cmc lcall mov pop popa add add sbb cmp pushf imul fs repz inc push mov jle inc jecxz sbb (bad) cmp mov cmp add fbld xchg hlt stos sbb movsb add cmc cwtl sub xchg and outsb jbe or (bad) hlt cmc sbb mov subb sbb (bad) bound and mov outsb add scas mov sbb pmaddwd xchg inc jle inc ret std das sub sbb pop fisttpl inc cld fwait test sub les (bad) lock icebp lcall lods popf push push out xorl push aad cli jo sbb into adcl and std cmpsb decl imul adc stos add inc cmpsb fisttpll push pop es jns lea mov cmpsb lods (bad) fiaddl mov int3 dec aad mov mov inc std dec sbb mov lock adc cmpb mov cli mov or loope sub xor enter aam add lea int3 inc xor lahf lret dec pop (bad) jo dec pop ffree outsl sbb addr16 xchg outsl clc iret or mov xorl or sub jno jo in bound ret mov xor in adc xchg imulb loope icebp incl and xlat (bad) add fbstp (bad) mov aad setg (bad) enter inc cmpsl shr out (bad) dec aad (bad) jg and addr16 mov cmp push and fsubl mov mov imul or leave cmpsl repnz mov out sti cmp mov (bad) (bad) out mov fsub inc in aaa gs fistl xor cs out push aad into lock mov (bad) sbb ja xchg clc lret mov dec and lods dec cmp mov mov pop stos add fwait sbb aas dec jno add jge (bad) dec inc outsl (bad) mov push and mov xchg xlat xchg insl andl inc sub cmp das test movsb push imul fwait (bad) xor or push mov call andl cmc shrb cmpsb cmc leave add sahf xchg and incl pop jb inc movsb sbb dec fimul dec rorb (bad) call dec add jl test pop push push lret out (bad) lock mov jp jg adc inc popf add shrb sarb jp or xchg dec pop loopne pop enter mov cmp aam jle (bad) ljmp add mov movsb cli inc and movsl add xor ret adcl call push and pushf pop pop loopne sarb or call push icebp out or push adc (bad) jb les testb jmp xor jl icebp sbb mov call and imulb push inc int3 pop inc fwait sub and gs xor or add sbb insb sbbb or cmc inc lock clc mov mov push dec jmp sahf popa xor fdiv add into sub or call arpl cmp lods jmp xorb push (bad) les cmp push stos lods out lods mov and sahf fisubr mov sub ficom cmp push enter mov mov outsl clc push push and scas cmp jne inc mov and sbb cwtl inc lods mov cltd cwtl ficom dec clc aas add mov add test pop add (bad) mov rcrb xlat js ljmp decl cmp lds mov mov test dec xor (bad) inc pop xor outsb pusha aam sbb cmp decl (bad) mov mov (bad) or jo roll popf (bad) stos test clc cmp sbb (bad) jnp mov out add lahf push add out adc (bad) int3 (bad) (bad) popf and cmp aaa pop or jns xor enter add test mov and out push cli cltd ss mov and push inc and mov outsb inc sbb rolb pop dec or roll inc call das xchg mov (bad) (bad) fcmovbe call jmp rolb jnp pop out mov das adc pop cmp pop and (bad) (bad) gs xchg add sub fnstenv sahf lea (bad) pop and scas pop pop outsb sub sbb js mov mov repz mov add fwait (bad) cmp and call mov call (bad) cs pop insb loop (bad) or jmp add test adc dec cmp pushf add fldl pop loopne mov scas xchg insb add rcll cmc mov rcll cs add and pop in push push repnz iret add pop jp fcompl sbb pop push mov add mov or dec loop inc shrb les sbb pop push pop mov sub dec sbb jae into mov fist adc mov and fs jle lods outsl cmp or pop mov and jl data16 outsl adc or pushf sbb dec mov outsl inc ljmp cli push jmp adc jg push in arpl clc loopne sub clc (bad) (bad) gs loopne aaa (bad) jmp and icebp sarb sbb push in subb push xorb mov and inc push xchg mov arpl pop inc push cmpb mov push sti or std fnsave xor mov cmp mov fidivl fimull inc pop icebp push mov push push mov out les mov mov ljmp (bad) insl add sarb call cli test (bad) jne xchg enter or movsl sahf sbb sarb push xchg fs xorb in cmp vaddsd sbb push ret or pushf pop cli push sub inc jmp out xchg test jg roll push cmp pusha cmc (bad) decl xor inc dec lcall (bad) shll insl (bad) or add dec in insl rolb test dec xchg pop inc popl out pop dec imul mov and add (bad) (bad) (bad) mov (bad) cwtl jmp push arpl mov cmp or gs dec mov js pop or inc inc adc push pushf mov nop xor xabort les jecxz nop xor pushf fs (bad) in xchg or fwait mov lret add pushf mov cs adc pop decl enter leave or popl xlat cmpsb jp pop dec enter std and int3 pop sbb dec lea xor dec xchg lock add adc sbb xchg mov movsb pop ss add int3 pop ja dec push mov mov mov (bad) mov add sbb andl adc scas add push mov bound flds pop dec das jbe mov shrl gs mov mov mov out ljmp jo (bad) cs loope int3 and (bad) mov mov pop fwait rcrb ret mov outsl cli lcall loopne sbb and shr (bad) (bad) cmp and sar jg hlt fsubl cld (bad) mov jnp enter xchg xor push add xor mov mov or xchg pop cld xchg scas scas outsl cli lcall xor push jg and mov (bad) je and scas xchg cmc lcall (bad) xchg mov and popa jo jbe xor ret dec (bad) jg hlt insl ja pop fs sti ljmp adc cli (bad) jmp aad xor sbb dec imul inc rolb push (bad) rcr dec mov out pushf sti push xor loope rcrb sub mov lods xchg jnp cmpsb ja pushf mov adcl add xchg or lcall or cld nop push add je test sahf (bad) fwait lds lock icebp jmp lods sub in orb adc cmp lods cmpsb in mov pop (bad) mov arpl mov sub loope stos cmp inc xchg jb repz into xorl xchg xchg call add hlt (bad) push jl or lods aam dec push mov cmpsb (bad) ljmp ljmp insb jae push add cwtl adc cmp mov scas rorb inc sar nop push mov mul mov xchg std mov sbbb cli xchg inc add dec sub or inc movlps mov scas add cmp clts outsl (bad) mov (bad) dec mov enter fwait mov movsb mov ret (bad) je adc pop pushf cs mov adc mov push adc movsl in mov cli mov cmpsb test stos inc dec lcall mov out adc loopne fistpl mov jbe bound xchg sbb mov lret push and cmpsb jmp mov adc mov mov fild xor xchg and push xchg icebp ds inc jns dec dec aam (bad) imul dec mov sbb push js cli push mov ret rolb inc (bad) jae xchg adc add movsb push jno insl and lahf js dec sar decl gs add orl mov adc push (bad) mov or ljmp imul push add stc xchg jl loopne (bad) mov xchg loopne push sub ljmp jp sbb pop test (bad) sbb cli out add xchg dec outsb fisubr call roll jl fisub orl enter push mov or (bad) push jae or jl pushf sbb mov adc add fiadd in (bad) pop and ljmp xor (bad) (bad) inc rol in cmovge cmp pop cwtl mov sbb loopne xor and lods leave add push mov cmpsl in dec mov pop js sbb repz and push adc or repz and push stos and inc mov fwait imul xchg xor shrb test xchg in inc (bad) inc cmp cltd and and add push loop push std push or (bad) (bad) out mov xor lods subb mov shr (bad) aas and dec mov add (bad) push cld fstp mulb sbb or sar jmp sbb pop mov xor inc test mov fucomi popf (bad) push push xchg (bad) (bad) out and cmpsb or add test inc add popf stc or fdivrs mov fbstp je or iret ret ljmp js add sbb or nop inc mov xor and je (bad) aam jne popa inc sbb inc stos lahf js popf push into jge sti into fadds mov (bad) fistpl add push int imul xor add ret add mov sbb outsl mov aam fxch fsubrl js ljmp adc cmc bound adc aas repz mov xor dec pop in or bound es jbe add cmpsb cmp repnz pop (bad) jbe add push in insb push dec cmp and or push or imul pop sub push daa xor test and subl mov or (bad) outsb push fnsave aaa mov (bad) adc mov xchg call mov xor xor or hlt pop or addr16 test add das les pushl cli je movsb cmc nopl rcrl or (bad) into rolb pop push test movsl mov or xchg aas insb add loopne xor je sbb jg lods jno movl into jne jns pop loope mov rep enter add inc and cmp ja fld mov mov dec sub push pop inc cs xchg (bad) jg xor push pop xor push je scas mov push xchg iret mov pop imul mov lret or (bad) (bad) insb mov ljmp mov add mov rorb mov test rcll xor into test pop das add xchg dec pop dec push rcrb mov mov popa inc pop in shlb bound movsb scas mov icebp aad hlt push push loope ret push ret adc add aam mov inc jmp icebp mov adc mov xor ret mov add push in sbb (bad) lret es test cs in je out or sub add jb mov sub call ret ffreep (bad) mov fst xchg push call in insb cmp add (bad) mov or add imul add push cwtl ret sub fstpt and fildl cwtl (bad) mov push test stos or push dec sub int3 fcmovnu cli inc pop lock fwait (bad) jecxz jle mov xchg adc jle je inc daa insb xor movsb push hlt mov mov aad jae dec rorb lock dec inc mov in popf push pop add (bad) call fimull (bad) jg dec js xor data16 add lret lods or loop jo dec test and nop fildll decl ret jecxz lods mov ret call pop xchg ret lahf push lea sub (bad) fbstp or fwait add xor mov incl mov fwait imul outsb and jmp ljmp inc sbb or mov jns lahf pusha mov lods test dec push in pop xor vxorps rolb add (bad) mov push fbld jl jnp mov inc pushf mov lock decb and dec xchg jnp lock call rcl arpl mov insl cmp or sbb icebp mov movsl mov popa fisubr loopne loopne mov xchg cmp mov pusha or inc sahf push cmpsl sub inc sar or (bad) test pop daa mov iret (bad) cmpsl (bad) and push lods jbe aam rcr add mov int jle sar dec pop or icebp dec (bad) in dec push inc movsl cli pop sti cmp cwtl clc push into movsb std push jecxz xchg aam inc les add push lock mov aad or mov stos and inc push add inc cli incl shll inc or setae sbb fisubr sbb xor sbb or std cmpl sahf daa pusha fmull lret cmpsb pusha in (bad) add in lret jg mov push (bad) and lods jno dec cmpsb xor push imul add sub jbe stos push cmp pop test scas mov (bad) or cmpsl dec cwtl inc mov pop (bad) jg (bad) jo cs decl ret lea inc fldt add ljmp int3 or inc mov mov mov aaa addb idivb aaa inc (bad) jne xor insl or add or popa les (bad) mov and sbb mov andb sub xchg jae addr16 cwtl je out push outsb xchg daa inc mov pop mov cs or mov lea into cmp lds (bad) call fcomi stos mov ret or rcr mov sbb (bad) mov jg mov add rclb sbb adc add xchg outsb pop (bad) stos aaa inc adc sahf mov sbb inc mov and (bad) xchg arpl inc in sub dec dec jb pop loopne push jmp (bad) fisttp shrb pusha ja or xor and sub popf aam xchg and xor ljmp and imul pop in xor orl out ljmp es sti rorb jle imul (bad) jge sbb pusha (bad) mov mov inc pop clc data16 jo cli (bad) jno mov and call or ljmp xor push mov aas ficompl loope lcall jno sub pop loopne add int3 jae pusha (bad) mov xchg add xchg outsb repnz mov rorb lret lods cs mov pop inc adc pop mov js mov sbb sub cld add call subl add cld jmp xor cwtl jnp in mov sbb dec call lods mov lods adc lea int3 ss adc pop js sub xchg aam stos pop and mov or rcrl add jecxz ljmp movsb movsl pop test push test or hlt test clc dec push cmc ret dec (bad) xor cmp mov incl bound pop (bad) (bad) sub jo jbe sarb lret int3 mov call dec xchg inc lea (bad) cmp jp jno push and test cmc fs ss push inc aaa cwtl fdiv ljmp mov and call mov add jg je lods test in xor mov das popa out or lock add mov add jns je sbb imul xor adc mov fadd mov inc scas add enter xchg or adc pop mov cmpl out adcl fmull cld pop popa dec lock adc xchg inc sbb das outsb add out inc jno aas repz cmpsl inc dec mov out test push xor popf mov inc lods add repz xor insl sub repnz jb dec xchg pop pop outsl add pop cmc push lcall mov jbe mov aaa (bad) cltd xor pop out sbb loopne adc (bad) mov rolb inc and inc (bad) nop xorl (bad) jp mov and stc sub aaa sub (bad) cmp sbb andb jg xchg imul adc pop (bad) frstor mov sbb add dec jo or inc (bad) insb clc and pop sub call jecxz add shlb dec enter adc fwait pop xchg scas es and dec (bad) mov ljmp xchg add push insl sbb pop lret stos ljmp jle js scas outsb jae mov xor push lahf adc (bad) notb and lods stc imulb pop fsubp inc or call ljmp incl add shlb (bad) aas pop (bad) dec movsb jg enter sub scas sbb fwait jmp inc decl enter inc loopne cmpsb pop hlt fisttp das mov xor sbb add sbb and push adc lret fsubrs mov les push les sbb adc out aam icebp push fstps icebp sub daa test add divb xchg cmp (bad) ja stos xchg cli fwait and mov pop mov decl sub adcl sbb das xchg lock int sbbl pushf outsb sbb and pop and jmp xor add sahf push and loope iret xchg mov sbb adc cmp pop ss rcll mov int3 int3 cs cmp insl cwtl in jo ljmp sarl icebp or ret mov das fiadd adc lret into jmp jmp lds or decl pop fistp sbb mov push movsb mov jmp addr16 sub add and mov cmp inc repnz js test sbb repnz jecxz ret int3 mov jae fistp mull fldl jle fwait push call shrb stos cld negl push lods pop mov (bad) pop sbb loop mov (bad) movsb jns or cmpsb xchg adcl sub sbb inc mov popa inc mov inc lret imul pop movsl test movsb clc fbld mov pop daa mov add add sbb pusha cmp rclb mov ja inc jbe mov ljmp xor sub rclb or ja cmpsb enter scas mov push mov int cmp cli mov and pop loopne fidiv dec sarb pusha rcr andl inc loop mov push push sar push mov insl or or mov adc lock sahf add lods rol xchg and sbb ja push add js xor jle add xor dec inc je in dec mov add jge (bad) repz mov std popf movsb (bad) jne xchg movsb cmp sub ja or (bad) jg inc and aas popa mov cmp push stos jbe (bad) aas lret add jmp jbe (bad) aam imul call mov sti lret jp mov xor or lret jns adc push add dec add push and or sahf scas sar sub mov std mov scas es inc mov sbb mov cmpsb ret das cli jo,pn cld enter call adc mov mov fstl add enter lds lahf add insb and pcmpeqb pop or inc jg cmpb cmpsb sbb fisttpl outsb clc adc adcl (bad) daa jne test aaa xchg inc dec jl (bad) dec dec outsl cmpsb jnp xor pop inc xor test or or jle fistpl cmp lock xor mov mov (bad) mov pxor adc repnz xor xor aaa sbb xor push add int cmp int or pop cli or lret fwait mov lock xchg loopne push mov das mov dec cmp sub (bad) push jp incl lods clc push pop mov pop and pop inc enter mov cmpsl jg or mov inc add test jbe sarl xor xor sbb rcr js inc gs mov jg pushf in movsb addb lock (bad) jg inc jbe pop pusha and sub push jmp mov (bad) push sbb shrb cmp sub dec aaa and mov xor push cltd cld rcr aam std ffree loop ret ret jle jno lret xchg adc icebp (bad) mov ss pop xchg or stos push xor ficomp ljmp enter es dec clc rorl scas push (bad) mov ds jo movsb dec cmpsb lock jno inc loope movsb sbb xor inc pop pop pop lcall outsb adc adc pop inc loopne add lods ja nop mov push mov sub pusha test jg fbld iret js sti mov lock clc (bad) cmp dec mov dec jo cmp adc pop mov test int3 inc flds sbb push andl or frstor rcll cmc pushf (bad) loope clc mov mov inc xor jmp xchg jp add imul mov clc scas mov int mov lds je dec adc aam mov fisttp movsb iret jo inc mov mov push mov mov enter popa jo cmpsb mov decl add out lret inc mov add je dec pop outsb loope andb mov adc loope fwait test fiadd das andb scas fucomip ljmp popf jge mov cmc les inc sbb mov fiaddl mov dec sbb sbb ds (bad) add test pop imul jbe push adc pop jne mov lods in add dec cmc shr xchg push adc mov jg cs jg sbb cmpsl mov mov or cwtl aaa shr mov fidivrl ds aam sub xchg loopne cli sbb ss mov sub or cmpsb inc lahf mov inc xchg fwait out add jp mov dec lret (bad) fild sub or cli sarl mov sub mov aad pusha loopne cld sub pop xor mov fsub pop addr16 jge inc dec sbb (bad) pop bound dec sbbl mov out icebp xchg push cmp jg jo jbe sub push in push pop fs mov lret loope add pop adc push dec sti push pop ja mov ds dec mov in push lcall jg (bad) lahf inc sbb fwait pop add xchg pop fmul or fisttp bound stos pop lea call inc push out sub cmp push mov int sbb dec mov jg out inc dec sbb pop cmp add mov add xor mov (bad) xor ljmp pop es fnop adc cld dec push not ljmp ljmp jnp adc loop push adc js add (bad) and outsl mov adc lcall jge imul movsb mov in pop ljmp cmpsl sbb (bad) add push dec stos mov xor dec cmp jl and (bad) lock add add or xor stos testb jbe pop cmc mov cmp imul adc cld daa lea mov aaa movsb pushl adc mov inc cmp add fstl jne (bad) mov iret pop rolb add lods cmp jno call mov inc imul fucom dec add out pop ljmp xchg xor (bad) ljmp loope mov adc mov enter addl mov add outsl mov xor jp jbe addb aad fs or and mov pop push pushf and adc or adc xchg in lock (bad) xchg or (bad) jl add pop lcall rcl dec lea xor cli pop dec mov dec ffree mov in sub sbb mov incl lds cld push scas inc ret push push shrl loop mov call mov pusha fldl sbb mov xchg mov add lcall rcrb dec mov inc stos inc lods int3 ret rcrb outsb mov xchg or dec sar and or pop xchg mov outsb add lods call push mov ret popf xchg xor shrb pushl and repnz mov inc cmpsb jo mov or mov mov xchg or pop cmpsb or push pop add std and nop popa ds lods lods addl sub sub repnz cwtl (bad) ljmp ljmp js outsb ljmp dec lret aaa lahf mov xchg (bad) dec mov adc pop es (bad) into cld inc cmp mov fbld cwtl in or ja xchg imul adc dec xchg ret sbb (bad) data16 and mov call (bad) cwtl inc push (bad) aaa shlb sub sbb lods push pop sbb loopne je mov popa femms into or decl sbb mov add cmp (bad) pop add outsl in xchg xlat and (bad) mov call repz std (bad) loop lcall xchg sbb sub bound jb inc lods lret mov je fnstcw gs movsl mov mov test push test repnz push sar (bad) ficoml push test pop lcall loope mov push cmp dec sahf add call sbb dec push imul sub push cli pop iret push test mov xchg xchg sahf mov stos xchg dec pop xor cltd and lock (bad) xchg add mov cmc outsl incb fbld add pop imul divb (bad) (bad) jg lret mov add mov fnstsw test cltd dec mov addl xor add inc lea push mov pushl add fstl mov movsb stos test jmp cmp dec fimull js mov fidivl jno pusha mov push ret pop orb dec movsb cwtl in fild mov inc mov jne sbb fisttp stos or lcall sub inc je sbb push adc mov xchg lret fsubrl aam mov into sbb mov in icebp inc scas mov pop sub cmp cmp repz push mov sub xchg nop cmpsb (bad) into jbe ds add call inc pop leave and add inc sub add (bad) mov add aas xchg add outsl outsb in (bad) mov ret ss std or sbbb mov sub ret sub rclb pop sub mov (bad) mov test lods test xchg int or pop sbb into sub (bad) mov jo icebp push stos mov mov jnp imul clc xorb mov inc inc ljmp mov or dec mov incb pop dec iret push aas adc sbb outsl push rcrb pop pop out mov fwait sub arpl dec push mov mov or shlb jle inc out sahf add leave mov cltd add sbb in mov inc inc pop mov sbb fisttp ja jp leave pushf mov into inc out sub add arpl xchg jmp xchg mov push add negb dec inc mov mov mov (bad) adc add xchg idivb icebp mov and jmp push push ljmp inc inc dec cs sub xor inc fild jnp sub (bad) ret faddp jo test int3 push xchg lcall cmp ret or jb fildll inc shll jbe sbbb inc mov ds push xchg xchg mov (bad) xor jae or ficomp out incb out pop mov xchg mov inc jecxz dec jl jno mov cmpsb repz or orb or mov dec mov mov xchg roll fs xchg movsb hlt push sbb inc jecxz mov (bad) fcomip xor push data16 add jmp cmp dec stos cmpb rol (bad) lcall push pop cwtl stos imul aas test icebp jg mov sub adc push (bad) mov out (bad) jmp adc pushf jmp and hlt movsb pop orl outsl lret mov xchg cmc push add test adc iret inc cmp jg popa jl xchg lods (bad) mov roll rol jg test inc cmp (bad) jo imul leave mov jbe cld ja aam mov push mov lret adc aaa bound (bad) mulb mov clc jmp movsb in jge xor (bad) xor decb add xorl icebp mov xchg pop jo lods pop cmp dec and mov mov add scas or mov cmp pop mov (bad) lcall mov adc (bad) lcall pop inc and cli xchg pop push ret notl pusha cmp mov int test iret or xor dec cld dec jne lret push dec out mov jp push addl repnz test rcrl lcall push xchg mov jle mov test rcrb inc lcall hlt mov adc mov cltd es aad call imul (bad) or aas lea hlt add inc fsts popf inc jmp nop cwtl jl push cmp sub and mov or pop pop push pusha movsl mov leave add stos jb mov mov fstl js popf test lock mov decb pop leave cli inc fwait push lods fs sub lock es mov js bound xchg movsb leave push cmpsb pop test jno add mov lock mov arpl adc imul lea lock (bad) imul in cmp sub add sar int mov loope push mov dec fcoms fxrstor inc dec aas ss and mov nop mov adcb (bad) insl xchg cmp adc sbb adc scas (bad) cmp cmpsb js mov ljmp popa out sbbb popa jge pop into push lahf int push pop shll add test lock xor push add lahf ret sbb dec xchg js push push dec in loope pop adc sbb popf push (bad) repnz pop rorb int xchg lds ret ret cmc inc xchg aas in sbb (bad) lcall push mov sbb adc (bad) or or push sbb jno or fwait jg sub cmp subl popa mov icebp decl (bad) int3 lret inc mov jns insl cmp push xchg push add cmpsb andl dec push outsl shlb add xchg or cs sub je dec jns scas xchg fldl mov ljmp pushf test mov pop dec mov adc movsb aam sbb inc sbb clc inc dec aaa pop sub add push out add fmulp inc mov mov jle movsb xor mov (bad) xor add shr lock call jl mov add loopne loop add jbe jmp mov sbb lds push int3 jge xor test dec cmp add cmc fs lods add loope mov outsb push add mov subl (bad) rolb sbb orl mov cld mov lahf lret push sarl hlt enter cld cwtl popa mov add das push adc (bad) jns (bad) (bad) dec dec nop lret les rolb imul popa sahf push in ret jne jmp fdivs jo xor sub sbb test jo adc cltd mov pop dec inc xor sub cmpsb ljmp (bad) gs xchg mov (bad) hlt push (bad) xor or ret cltd xchg sbb int and fbld mov inc cli add ljmp mov jp dec jmp inc cmpsl add add sbbl aad and ret clc negb inc (bad) out mov aas push test iret sub adc test pop out xchg dec push jg push scas fsubrs ljmp sbb je cmp sbb mov mov push dec xchg mov pop (bad) jmp add pop jge dec pop push (bad) fistpl inc mov subb leave lds push pop mov adc lret data16 mov decl rorl sbb cs push push mov cmp pop adc fistpll adc test in test iret in sbb xlat ret mov mov movsb (bad) xlat jno xor cmp and ja clc aaa sbb pushf xor jp xchg push ret mov adc add insb in sub fbld cli mov xor cmp mov int cld cs sar or adc and mov outsl mov push aam mov or das xchg mov mov lret or mov sbb aam add std out cmpsb pushf aaa fisttpl jecxz and imul in rcrb popf lahf in cmpsl adc int3 xor or push jmp pop mov add outsl inc jne mov dec and call xchg xchg fsubrp dec and sbb insb push mov int cli or mov dec push incl ja fcomp dec sbb fldl (bad) jg xorb arpl bound dec pop adc sbb inc out ds pop add ficoml loopne mov call pop or or push inc movswl (bad) imul movsb jbe pop push pushfw sub sarb scas xchg or pop jmp inc pop xor sar das inc add pushf add gs jnp xor mov or mov nop or xchg (bad) fldl xor mov fmull adc lcall ljmp mov loope pusha push (bad) sbb pop enter les (bad) jmp (bad) imul or mov pop add repz pop inc dec sub or pop test stc inc sar jmp addl pop or jl sbb sub ljmp clc add pushl cli jne push es push add mov pop and push mov and mov lds icebp stos inc inc mov test stos aam sub test cmpsb lcall outsl add inc faddp icebp (bad) jne rcr add repnz loopne and aaa mov pusha jae jl (bad) (bad) jg fs xchg std clc jl (bad) xchg pushf loope test and sti iret mov add lods inc xor push das sar add negl gs icebp xor jo js fwait xchg (bad) in pop pop aad clc cmp jo cltd ret inc insl mov pop push mov aad mov ja aas add mov sbb xchg fidivl jle sub fisttp sub call pusha add cmp mov lcall ljmp xchg mov pop xor (bad) mov rcrb inc jl es lods mov lods fcomps into and ja shrb (bad) and mov (bad) ljmp les cmpsb pop loop add mov loop adc mov and loope fisttpll (bad) fwait jno loopne mov cmpsb clc incl test icebp decb cli idiv rolb and cmpsl cmc push jecxz test xchg lret add out pop inc add cmp dec adc cltd repnz hlt stos and lret test or (bad) (bad) fbld cmpsl lods push test call mov movsb daa jne ljmp clc iret daa adc sbbb or sbb jp jge (bad) (bad) loop inc fisttp pop jmp bound imul or outsb int3 pop aad sbb mov or out add cmp pop sub mov popf and insl adc add in cmpl cmp (bad) (bad) jg loop (bad) into stc xor subb aas inc push push jno pop lahf fstp cli outsl mov addl aaa lcall jnp mov pop dec clc or jnp xchg fdivrl cmp cmc dec cld inc push test fwait adc out les jg dec add mov sbb popa (bad) lahf xor or xchg sbbb pop ficom (bad) fwait xchg jg or call sub mov jno outsb lea and fwait inc and cmp in sub mov mov jp mov test clc push cwtl cli clc nop dec movsb pop and push sub loope dec shr push and and cwtl cmpsl push stc or insl stos push scas dec push jp and pop loopne mov adc out jp sub cmc fistp pop lahf adc repnz xchg (bad) data16 sub pusha sbb lods outsl add cs pushl and pusha testb cmp imul jle or cmp xorl sbb cmp ss (bad) repnz xbegin (bad) lcall xchg jg aas mov xchg test movsl mov and mov movsb icebp adc lods clc push add inc mov dec ds cmp jl je sar add (bad) ljmp cltd xor sbb mov shlb pop out adc aad lods jno sub dec test ss std frstor orb and mov dec arpl push jp lods cmp dec test add ret add aad jle cld and inc inc mov fisubl mov (bad) mov roll sbb mov xor icebp (bad) or sub fstpt hlt sbb jb adc cmc push xorl push jnp push mov inc push pop and loop fwait pusha pop lock jg,pt add sub out add lcall rcl xor popa es loope push lret ss sub mov sub mov hlt movsb std je or xchg cmp sbb stc dec test mov stos enter mov add cmpsl add fild sbb sti pop jl add pop or mov hlt sbb stos mov and dec data16 sbb cld mov xchg lods stc loope sbb push xor and shr in loop and adc js add jno dec out data16 sbb scas insb cmp xor fbstp scas mov or adc xchg out push rol lret cld xchg adc inc dec mov rcrb jle loopne cld sbb scas jmp inc lods mov ret cmpsb or lods int3 add ljmp add stos lcall mov inc xchg stos (bad) pop xor decl inc mov mov fildll inc ljmp imul pop jp or ds (bad) jp pop lahf xchg ljmp pop push movl arpl adc cmc movsb lret fnsave cmp cmp add mov aam outsl rcrl stos dec mov adcb xchg mov clc mov cmp rcl lea cld ja test lea xchg fcompl push xchg aad dec xor push dec inc dec loopne mov push mov dec xchg (bad) (bad) (bad) jmp daa aad mov and or ljmp rolb sub rorl (bad) adc daa pop push mov mov jmp (bad) sbb mov add insl xchg je stc lahf inc sti jecxz rol test xor adc stmxcsr pop sbb mov mov int3 test sti jg sub cmp xchg lcall fidiv (bad) sahf xor adc (bad) sbb ljmp (bad) incl inc jo or push push mov call mov sbb push in aaa mov sbb ret adc add sub jns jne jge or shr or and adc push data16 adc les mov mov insb xor push test sahf lock mov push test mov imul jmp loope sbb es add pushf iret stc ds mov push test inc mov jle adc jbe push pop mov jne outsl ret nop jle mov pop ret adc movsb pop mov dec adc add sbb mov jno cwtl sub jbe adc push mov add pop shlb inc aam pop mov jp loope xchg (bad) pushf rclb dec iret aas pop jg fwait dec push adc mov jbe inc sbb push sar movsl nop sub pop flds ljmp (bad) jl sbb mov incb push mov mov loopne jp lret jmp jl outsl les pop out cmp jl push push mov call pop push rcrb int3 loope add call add iret xchg mov sub rolb popa cld repz mov outsb cmp jge xor dec mov leave sbb sub add sbb sti mov mov cli push nop dec cmp test inc cld push inc call imul scas cmp je xchg or inc adcl out push fwait out lea inc movsl lock loop mov negb insb call adc mov push inc ljmp inc mov xor mov inc je mov test pusha dec aas push adc pop pop je inc outsb ljmp sbb insw mov push ret stos repnz xchg cmp mov lret mov hlt je aas mov daa movl mov rcrl push mov mov lods mov mov bound nop jae into out add or jmp and addr16 mov jno dec rcrb insl xor xchg outsl out sub std nop fcomps pushf mov clc xchg loop inc mov cmc inc add es hlt pop or inc mov jnp hlt xchg push cmpsb mov (bad) adc dec dec stos jno mov mov xchg push loopne lahf sub lds int3 repz enter (bad) loopne push mov add sbb cmp dec xor (bad) out subl xchg push mov lcall testl inc add shll push pop rorl mov sub mov or pop mov add and test sbb cld or ret push outsl scas cli lcall (bad) in faddl (bad) ss adc sub jno add or xor mov cmpsl inc push out adc jbe sarb (bad) sub dec pop stos or mov bound ss and popf outsl (bad) fild movsb push stos cmp jle jns or aam cmc pop clc ljmp push xor mov inc jle repnz and cli imul aam cmp (bad) mov sbb js dec mov aaa es stos or ljmp xorl dec loopne lea push cli decl subb cmp cmp push rcr adc cmpsl inc nop leave int adc mov mov aam inc push xchg addr16 inc xor dec mov addb adc (bad) call lock or mov jns pop adcl pop int3 jns mov std stos mov pop mov jmp jle icebp mov hlt cmp adc dec imul jg out clc incl pushf adc negl stos xchg (bad) lcall mov add push popa add lods (bad) in (bad) push jae inc leave ss push (bad) xchg jmp sbb movsb cltd push (bad) data16 adc sbb std mov fsubrl (bad) (bad) jnp mov imul and cmpsb vmread jge mov xchg icebp add cli test sub xchg data16 cld push adc add orb mov and idivb daa ret push mov dec fsubl push inc pop iret pop dec hlt pop mov and lahf mov lock push incb add pop cmc or and or rorl adc mov jnp lea testl clc sarb ds add sbb jne loop mov inc xchg mov cli das movsb inc jne fdivp cmp mov rorb inc icebp mov adc and fnsave and ja cli inc adc pop pop push fimull loop sti loope insl xor ja pop lcall loop or fild fidivl lcall xchg pushf bound lds mov jbe pushf sahf or inc mov mov mov jg out or lret hlt (bad) enter sbb and sbb sbb inc push xlat movsl pop test push add jg mov pop iret loop decb lods ret fdivl xchg or add sub lea clc mov dec jg jo ss dec xor mov add fisubr (bad) xchg movsl decl push jp sahf test ret and sub mov das mov mov ror mov loop adc aaa cmp aaa mov pop pop fmul fcompl cmp adc out mov fisttp cmp xchg (bad) (bad) pop outsl lret testl (bad) lret xchg push cwtl inc xlat pushl dec add sbb or shr lock mov das insb inc xchg loop push add sarb or popf cmpsl scas or sbb add cmp mov into cmp call sarb dec xchg push stos inc arpl shrb and jo sub aaa or mov push fmul adc xor fs aam fs cwtl mov mov add add lahf xor adc ljmp and push fisubl nop psrad add sbb cmp push rcrb or inc js inc xor stos jmp flds push add sub inc sub add inc mov addl dec enter sbb add jle cmp and dec push add das xor insl fcmovnbe outsb mov jno in cmpsb hlt cmc inc xchg fldcw mov sbb (bad) fisttp lcall xorb sub aad add dec ret push mov xchg adc arpl add mov add fs fs lcall mov outsb call sbb movb ret mov (bad) roll mov (bad) add fistpl outsl (bad) mov xchg add add and mov inc or bound loope and dec (bad) cwtl jne mov inc lret xor or jmp (bad) jecxz mov dec add hlt jmp les cmp mov pop jbe or les sub lock add xor aam push je adc outsb ds push (bad) cmc pop xor sbb cmp or xchg xchg dec fwait cmp jl mov bound outsb sub int3 and popa inc cmp movsb and or mov lahf jo roll push jl mov in pop push mov fwait dec ret mov xchg popa popa xchg ja in test or xor dec push mov mov test mov aad jp ret add sbb inc or add inc pushf or sbb sbb lods les lods or dec add lock popf adc ja dec push cmovb sbb std jmp (bad) das (bad) scas jmp call dec imul inc call jo sbb (bad) iret hlt inc cmpsl lock loop inc cmp push xor (bad) aas add hlt ja or or mov jg,pn lret cli call out movsb dec movsb jns add std int cmp xchg mov add xor push mov stos adc jle or cmovno push (bad) icebp inc insl mov std jne shrl jbe push inc lock fs mov xchg and adc adc lcall lret loop aas in jne (bad) cmc dec add jmp neg ficoml add add insb call dec jg jmp or inc dec and rcrb xchg loopne movsl out (bad) outsl or push push sbbl repz mov mov hlt (bad) mov jle nop or mov push js addl cmpsb mov push jo pop divl xchg out mov scas stos adc pusha std fsubl in aam push mov outsl sahf jb dec jb fildll push cld daa cmp dec nop jecxz lods decl inc loop into add (bad) pop sbb repnz add pop xchg sub rclb push rorl mov add ss rcll aad mov scas data16 push nop and inc sbb or push jg dec push add mov mov fidivr pop mov (bad) js ret js sbb lea test call test inc push (bad) (bad) (bad) (bad) cmp fsts fdivrl jnp jle stc inc or (bad) jne jp jle (bad) pushl (bad) aaa inc jmp aas pop or je loopne and pop or mov repnz mov sbb push pop sub or cltd icebp pop push aad xchg aaa arpl pop incl add int3 stc sbb add xor sbb (bad) jg cltd cmpsb ss aaa (bad) popa pop test dec mov rorl pop out sub sub adc nop aam popa lret mov adc mov repz xchg fcomps sub scas pop popa aad mov ret aam shlb dec data16 fprem call add pushf inc and xor sbb jg or and cmpsb addr16 jnp pop fildll fwait mov call data16 dec les mov mov incl xchg int aam (bad) mov xchg pop sbbb (bad) repz sbb setp xchg (bad) ljmp sbb rorb daa data16 punpckhwd iret std mov mov sub inc nop in into push pop adc fildll roll inc aaa stos jmp jnp (bad) decb sbb daa (bad) shll xchg push adc push add aam mov out mov (bad) rcrb add movsl adc cs mov xchg pushf ljmp dec or pop (bad) ja push je sub fdivr push cmp ret sti daa mov aam das cli call xchg fldcw inc out push mov sbb adc sbb pop inc xor mov pop icebp pop ret push push xor mov or cli mov cmpsb inc inc rcr jg and cli xor and std decl pop insl pusha jmp jmp frstor jp mov push imul mov or jmp je movsb push pop ret xor mov rorl out add sub jno ds fcomip imul dec add stos incl sbb add sti fcmovu mov cs adc pop rorb jg das and mov add lock cmp es insl repz fild sbb adc xchg mov dec outsl adc test mov pop addr16 aam pop ror (bad) (bad) mov add xchg mov iret inc arpl dec or lods aaa sbb mov daa mov shlb sarb pop mov scas mov xor mov mov arpl mov jne jp insb or scas dec mov or ja rorb mov mov hlt mov cli xchg test mov dec aad xchg or lods fcomip dec xchg mov jp add adc loopne cs aam jbe xchg mov int3 ss inc lcall aaa out adc sub lods scas mov push adc sub lods ja les jle xchg cmp mov sar das cmpsb mov jne mov fild jno mov push push lods pop outsl lock mov loopne inc nop js nop or pusha in mov decl pop js mov insl in cmc stos push mov add dec into cmp or mov decl sbb and jns pop mov or mov mov (bad) or push jmp mov mov pop fcomps mov lods int cmp push cmp cwtl andb lods rcr mov jo es pop inc jmp (bad) int3 mov decl lods push jnp test add stos cmp rcl outsl add fistpl dec add mov fsub jne mov ja fbld scas data16 push mov fnstsw add rolb sbb outsb mov mov into lea inc mov and add push adc jl cmp ljmp mov mov sub push mov ds std lods ljmp xlat cmp orl sahf add call mov scas out dec pop in (bad) or aaa lahf inc loop jns dec pop xorl pop loope imul jae inc and hlt outsb add loopne adc out andb or jne enter inc sbb stc ljmp push jne mov les push hlt inc push cmc adc mov ret xchg xor xor add mov adc mov adc jae movsb xchg in mov pushf in andl adc (bad) flds lds sbb movb add pop mov popa (bad) les sar fist cli xchg cmpsb jp push cmp push add outsl push jne movsl pop mov aam pusha jp mov add xor dec sbb inc sbb mov xchg xchg fwait mov arpl (bad) jg mov adc (bad) (bad) xorl mov fsubrl push outsb sbb or jae dec rcrb jae js adc mov enter pop sbb or push mov cmp into movsb jle insl adc popa loope pop add and out jnp les and jmp dec cmp xor jne (bad) push jo lret (bad) (bad) cmp mov sub loop pop (bad) sub loopne xor mov sub movsl jmp push add cmc out aaa (bad) aam out cld outsl xor jmp add or mov daa and and inc or and inc decl dec and add cli pop sub inc push iret mov decb mov add mov mov ljmp xchg adc push ja (bad) (bad) mov pop xchg add or lods loope push fs clc (bad) bound lret aam nop cli repz mov aam pop mov jmp push bound lahf lds ja sbb pusha xor inc fadds adc dec aaa or imul dec shlb sbb sbb adc inc jmp push (bad) lahf or inc add pop (bad) fst mov jb ja inc lret fstpt mov faddl mov es mov xor jge insb lahf scas add sbb pop inc jp fnstenv jp inc jp icebp adc add (bad) mov out cmp in mov ss test adc sub dec push cmp and push sbb mov sbb ja mov (bad) movsb push inc cmpsl lock out jl adc mov pop (bad) addl out test (bad) mov jo lods test sbb dec ret and mov push mov ljmp xor outsb ret inc xor jmp ss int3 lret sbb push adc (bad) cmp loopne (bad) push pop fwait loopne (bad) out mov pop inc rcr cld sbb jnp call cli adc mov flds or sbb test mov xchg cmp cmp xor inc outsb jo and push cltd xchg and in or jbe incl daa test xchg xchg call xchg stos push out pop negl add decl ret loopne in inc cmp insb std out nop ss leave mov jo jno imul insb aad adc cmp cmpsb hlt call mov cld push push nop push pop incb cltd pusha arpl fwait xor (bad) mov cwtl cmp sbb lods xor add lds mov pop stos rclb lock or bsr std inc jmp jbe (bad) xchg outsb and dec inc loope cmpl mov xchg cmpsb rcpps out loopne jbe adc mov fisubrl inc and xchg and lods push addr16 jmp movsl adc inc and mov xchg ljmp mov pop popa call fnstcw mov cmpsl dec pop les fiaddl adc xchg mov repz roll cmp ret mov faddl es ret adc mov dec mov int3 das jl xor or lods pop dec popa mov jo mov xchg mov inc out inc xor cmp fildll jge or pop pop aas push shlb lcall ret jnp inc mov add sbb xor (bad) cli inc or (bad) call inc add xor inc stc sbb lods cmp push lock mov rorl mov add ss cs cli jmp xor and decl pop sbb jo and push lods daa out jp call out cmp out (bad) outsb sarl sbb (bad) push (bad) xor mov inc aaa ret xchg push (bad) test push cld cmp sarb inc loop add jns movb add add pusha push popa ret push and inc xorb dec jo inc adc aaa adc scas mov test (bad) jg cmp mov jbe adcl adc pop pop stos ss push add jbe cli lcall test movsl adc pop fdiv call mov push sub mov loopne sub pop mov cmp cs mov inc mov pop bound pop mov decl add cmpsb (bad) jae cmpl push je daa cmp leave rcr test sahf mov cmpsb fwait mov mov mov aaa adc ret ja imul cmpsb clc mov insl push icebp aad jp push sbb pop inc mov (bad) sar fwait mov adc loop add (bad) hlt adc and negl add fnstsw dec xchg inc xchg (bad) ret outsl aaa xchg ljmp jnp add clc lods int roll sbb int bound mov jnp roll ljmp popa cld add push cmc xor mov jg jp jo inc int3 adc adc test addr16 cmovno lcall mov movb fbld (bad) repz clc push inc mov (bad) add outsb push and mov fcoms pop mov aad mov xchg (bad) popf (bad) adc or mov andl (bad) out lods xor push rorb xchg outsb adc mov cmp (bad) lock mov test mov iret js movsl (bad) lcall add dec mov adc sbb and push cmc push jl inc mov jl sbb (bad) jg mov (bad) cld ljmp jbe jp cmp addr16 sub psraw pop out xor jo fdivrl adc std fwait and jno xor sub jmp push adc imul (bad) ja mov and adc sbb out push sbb push and adc rcrb loopne (bad) (bad) jg adc pop inc inc inc fild mov adc pop hlt mov inc mov sub cs andb dec xchg push xor mov ss sbb rcll xchg aad sub jg mov add inc call loope sbb bound jp addl nop ret jo xchg adc push mov es sub push jecxz fcom push or dec test pop mov shrb dec cltd cli mov (bad) mov push daa dec cmp lock fmuls pop inc mov xor push (bad) adc mov xchg sub pop rorl jge or dec xchg or aas pushf dec xor pop int3 push scas jo adc ja (bad) jae pushf pop push je lds dec push test aad jecxz xor jecxz unpcklps dec addr16 or jno adc pop decl mov sbbl int3 ds adc cli and pop test dec and mov (bad) or nop inc lret xor mov fldl push push ret cwtl inc xor add add cmc (bad) and lcall out cmc xchg push push mov (bad) sbb pop mov fsubrs (bad) pop in jl jno dec adc nop lock cmp flds enter (bad) out and mov inc xchg adc mov adc test xor xchg add outsl hlt aad push or (bad) or (bad) push inc xor into lret incl (bad) xor adc callw hlt mov icebp push mov outsl xchg lret je mull cld push das daa or jmp fldt sub inc add jmp imul lods sbb and mov pushf pop pop jnp loope pop je adc sbb or push (bad) lock adc repnz cltd jmp add sahf into daa aad fmull stos jecxz data16 loopne dec push mov mov and cmpsb ljmp out sub frstor ss cmpsl inc jl subb pop cmpsl xchg mov outsb out hlt sub lods and sub xor pusha les dec bound xor lock int fdivp xchg into and xor push mov jno inc popf mov into mov push jae jl scas jp insl and sub push ret clc pushf push xchg loop dec int3 cs mov (bad) sahf mov add lcall arpl rcrl aas xchg test inc sub dec sar xor subl test icebp xchg cld push cmp push imul sbb stos and inc push add add dec (bad) jb sub repnz pop cmpl inc lea push inc sbb lahf lret jle xor fistpll sub push mov dec xor in add xchg psrld pop std lds adc jbe lahf adc ss push inc es cli andl xlat scas mov shr push jg jnp and pop mov adc ljmp outsl ljmp adc es pop mov pop inc mov pushf lea push sbb sarb dec cmp fisttp mov mov push inc js mov cld out je mov mov jle icebp das push sub mov es push fmuls push lock xor mov and test ret in xor std mulb push rolb push loop or in (bad) into sbb inc (bad) ja xor test arpl mov cld popa jno test mov lods cmp repnz repnz cwtl pop sbb jl sub push imul push add js jle lods fildll sub (bad) jecxz pop dec loop movl (bad) sbbl jp test test dec jmp lods mov cmp push fisubl or insb and inc mov call cmpsl (bad) in mov sbbb into pusha rorb inc or or stos pop mov inc aam out test std pop jae ljmp pop push sahf ret mov imulb scas push test adc out or or mov cmc mov push call cmc dec sbb xlat mov mov xchg cld adcl test mov lret outsl mov pushf sub pop sub pop (bad) fildll xor mov inc adc jbe adc int nop jp lahf add sbb sahf int3 or xchg dec cmpsl (bad) xchg sbb sbb in and mov mov cmp inc jmp outsl push fwait in jno arpl push cmpl dec mov (bad) jg add jnp jbe add jns xor outsl mov jns std cmp mov mov inc lds fcomip push (bad) push jno or icebp int3 xor pop or mov pop cmp mov out ja jg sbb gs cmp inc aaa cmc add in loopne lods jg je jmp mov aam es dec std pop pop inc sahf (bad) cmp jg (bad) fist int sahf mov pop add add mov rorb mov imul bound inc or mov aaa push (bad) jg icebp jg jg (bad) movsl (bad) (bad) lcall sahf mov xor xchg mov push inc fcoms js (bad) and icebp pop push ret xchg or fstpl fisttp adc (bad) int3 shlb je stos adc es sbb inc gs pop mov mov daa xchg lea pop popl (bad) (bad) call (bad) insl ds daa push push insl or fwait sub sbb sub pop or sub xlat mov test mov ret lcall mov test jne mov stos dec ds inc adc mov lcall jp fadds cmpb aad inc lcall ljmp fucomp inc cmp fild incl loope xchg iret dec les push sbb push les mov rcr dec and pop or and sbb (bad) pop ret cmpsb mov pop and pop mov pop push inc mov and (bad) (bad) lcall ret mov out push add pop mov faddl cmpsl aaa imul jb xchg mov jmp cmpsl out push icebp aad call cmc push pop xor push (bad) (bad) out loopne pop call xchg adc or (bad) mov jg cmp and or mov movsb mov push inc push mov sarb subl mov inc hlt xchg pusha inc fnstcw fiadd decl (bad) pop clc lahf jmp fcmovne mov mov cwtl test mov outsl xchg mov popf mov orl xchg sub sbb xchg jp jg insl jge (bad) mov aad std push and es rcr or sbb push and outsl mov push push or stos jae icebp jg mov dec cmp lret xor jo mov dec or bnd cmpsb push mov mov mov push push add andb adcb cmp adc cli sub dec aaa xchg cmp inc es (bad) incl bound mov push test jo ret (bad) decl push lahf int3 gs jne test mov adc fwait push jg std out aam enter dec rcl dec adc jb stos xlat (bad) mov icebp jno leave mov sbbb stos inc outsb cmp ficomp loop jge lods cmp jge mov lods dec xor or imul or push mov je xor adc jle dec pop and adc xor mov mov mov lret and mov (bad) jp sbb mov (bad) jg pop cmp jp shrb jo sbb xlat sbb je pop dec (bad) mov cmp aaa pop cmp pop nop xor add mov or lahf jg fs aas push mov push stos mov (bad) pop xchg add add mov and aad mov (bad) int3 fs les hlt ljmp dec and (bad) xor or mov fwait cmc dec sbb imull loope sub add pop ss aam std test dec or stos pop inc xchg cmp mov cmp aad sbb dec fimull test dec dec mov and pop rclb daa out testl cmp push ss xor sbb cmp mov pusha pop imul insl std mov add add mov xchg cmp in mov mov lods notb jg pop pcmpeqb lods inc cmp je mov jge add mov adc push xor lret add cmp add popf (bad) rcll jle add lret shlb add int enter add jg jb dec mov sbb (bad) xor lcall and xchg add imul and pop dec add bound es enter cltd insb loop outsb add or fcoms loopne lret nop pop and cmp out xchg sbb xchg (bad) lock outsb std sub mov mov mov lret or adc dec adc jecxz (bad) (bad) xor ffreep push jnp mov adc jg fisubrl jp adc or hlt pop gs sub mov pop sub sub push (bad) pop push addl in add inc imul iret mov sbb stos pushf push adc (bad) rolb xlat inc loope mov push jb imul push clc (bad) xor mov xchg sub dec pop jae or dec cmp inc lret jbe mov sbb pop aad jne jno sahf mov and sahf mov incl test sbb and cmp add dec popa je movsb dec or inc cmp mov aas xchg add sbb jb,pn pop add pop push adc cmp divb ret and ds mov stos dec ljmp loop iret pop mov cmp sub fisubl push pop hlt xor cld or jbe inc mov ds (bad) sbb pop lahf inc jb fimull movsb mov and cmp jo out nop loopne ljmp inc sub pop in es push and (bad) (bad) fbld adc mov out sahf arpl (bad) subb and loopne,pt hlt pop cltd fidivl mul dec jne sar pushl (bad) push lds ja xchg ljmp mov add cmp (bad) dec add daa push jno jmp fild sbb sti mov pop mov aad xor int (bad) mov hlt jmp in xor (bad) (bad) out cmp lea inc outsb popa or mov sbb insb or out push mov rorb dec adc jp jb call sbbl pop inc or clc ljmp or rolb jae idivl ficompl addr16 aad sub mov out enter mov jle dec lahf lods jae outsb fidiv or and das push movsl jmp pop add cmp cwtl xor int stos inc repz out xor jecxz pop jg mov or dec push lock mov or in pop sbb cli pushl or push pop scas jae in mov add mov and js mov std mov movsb icebp rclb pop insb es clc pop test lcall jo aas dec les mov ss cmpl sbb mov jmp inc pop test enter mov mov mov pop mov adc fwait mov testb push das mov lock (bad) decl addl call mov jb add shlb shll push xchg mov cmp jecxz xchg mov mov rol push (bad) xchg cmp lock aad out add ss mov adc out dec mov push dec mov cmp push lock outsl pop movsb cmp mov pop mov xchg cld push mov lods sbb inc mov test mov lods mov xor jmp insl lcall adc sarb (bad) aad lcall and ja ret adc inc rorb mov pop dec loopne bnd xor sub push nop and cmp xchg lret push cmp xchg ljmp push ret jge dec int3 xor aas fsqrt adc out loopne xor mov add popa mov clc pushl sub std mov ss andl jae,pn pop dec imul aad push or push mov out hlt jge and dec or test xchg imul jg pop das nop lea out mov enter loop (bad) inc mov ret cmp and loope (bad) pop jge hlt push stos push test dec mov shlb (bad) (bad) mov push lcall insb shrl mov add lcall mov fwait insb cli fcomip (bad) incl les enter popa mov mov inc shrl test add arpl mov dec in enter jno mov jp sahf mov or mov inc push xor bound jl jle scas cmpsl cmp inc out inc loopne sub insb dec mov subl stos test and mov pop sub ds pop ja xchg add cli sbb mov xchg fs out add dec test mov subb ret jno or stos (bad) jg insl jecxz and aas aam lods es (bad) jl pop insl loop and repnz test repz mov mov jmp shll push xchg bnd jbe and aam xchg mov fnstcw adc int aam (bad) ficom pop dec add cmp arpl or push pusha (bad) lret insb jecxz or mov gs testl leave mov out sbb mov mov pop cmovs jbe mov icebp mov call adc mov icebp dec sbb aad pop lods cli mov outsl fxch adc jbe lret ds mov gs (bad) ljmp aam data16 mov inc outsb pop nop sub jne je inc daa add hlt in adc iret or and fsubl stos jno add andl (bad) mov fbstp (bad) decl mov fldl (bad) pop dec dec cmc addl cmp nop add (bad) sub dec stos pusha ljmp int push adcl mov fstpt testl mov pop and push mov hlt lods (bad) jae ja test call in xchg push test rcr std mov push jne popa movsl add mov fbld xor out and push xchg insb and scas inc cwtl push imul and loop mov mov inc and or push mov aad jg mov ljmpw stos cmp xor lods daa jg xlat sub cli out xchg popl cld aad cmp fs adc xor adc dec push or mov mov pop dec jecxz repz or jmp adc mov inc ds sub pop push inc ljmp pusha sub test insl and add cmp in xor pushl sar sahf aam ss pop xchg push rclb ret rol or in pop out fbstp bnd mov mov fdivrl add push rorl pusha subb jg sbb pop fcoml test add mov jp into cmp pushf clc sbb ds (bad) movsb mov out repnz cmpl addl sbbl fbld mov dec je sbb or jne and cld sbb scas inc scas outsl bound mov sub into insl pop mov (bad) push cmp lods jg popa mov pop mov pop hlt mov dec adc cmp and hlt insl jbe xchg (bad) decl mov mov add inc loopne or add add inc daa add cmpb adc jo imulb push fbstp adc adc outsb ret (bad) into ret (bad) daa cltd fisubrl mov cmp mov test xchg xchg add push loope push and or rorb dec out cmc mov jnp ss ret call adc out inc or jmp (bad) add mov pop sbb cmp jmp stos adc xchg insl push push mov or das xchg jb jnp insb jmp mov or aam inc push xchg lods ljmp or and push movb push fmuls ds aad loope mov mov xlat fs jns pushf int mov mov xchg inc daa lret sub jl adc sbbl cli xor shll jne sub cmc das adc sub sahf sub ja cltd xor es adc sarb cmp push mov imul sar mov mov jmp movsl or je es fs pop and pop push mov (bad) xor decl jle mov mov sbb mov and xchg incb sbb (bad) mov mov mov xor jo lret insl push shll dec sub pop push test fild (bad) adc test xor mov add and in and or sbb insl insl add test (bad) fdivl sub popf cmc mov jno test xchg cmc add test or cli or push or cwtl cli fdivrs fwait les mov jl sub add scas mov (bad) xor push pop lret inc push pop loopne fnstcw cli mov leave int3 lock mov sbb dec scas mov jb clc mov xchg in lock or pop call rolb and std scas movsb or and and xor ljmp xor and inc mov (bad) (bad) stos gs dec std xor or mov pop push testb fisttp jmp and pop inc xchg pop out shr (bad) push and repnz test adc (bad) rol add ds mov xchg shrl ret jp pusha iret mov xor xchg and outsl cmp (bad) pushl andb adc repz insl fildl (bad) es mov cmp sub push (bad) fwait inc repnz adc add popf call pop popa pop sub insl pop aam lods in das lret ss scas nop mov jge lock bound xor xchg insl adc add std sbb xor fdivrl jmp and sub insb or mov inc sbb adc lcall mov loopne mov bound (bad) repz aaa lahf fcos loope incl imul cli out cmp (bad) movsb or icebp ret icebp cmp ret adc sub inc pop mov (bad) mov enter xor mov pop mov push pop add push clc mov pushf pop dec cld push adc sar xchg xor sti addb push mov dec mov loope stos sub loope push (bad) fildl cld ret mov cmp sub sbb out gs push adc (bad) (bad) adc pop cmp (bad) adc push push inc inc out xor cs sub loopne (bad) lcall adc cmpsb jne or xchg adc icebp sub xchg push fdivs sbb xchg jle or push jle in out dec jbe daa xor push inc ficoml mov sahf pop pusha (bad) mov js dec mov rorb ret into jne bound push mov cmpsb (bad) jnp stos push (bad) shll hlt std mov jnp (bad) call ficompl mov repnz cmp mov bnd test rcpps add lcall std (bad) mov fmuls pop mov (bad) jg sbb scas mov int jle adc lahf cmp das fnstcw lcall shlb jmp dec bound ljmp or fcompl or lds (bad) ffreep popa jo sbb push bound sbb in and orb jecxz loope orb maxps sub out mov outsl mov insl jmp insl mov data16 dec or sbb mov inc add xor aaa adc inc push push xchg ss lds test cltd test iret mov (bad) mov lcall add mov sbb cli ja mov int cmp pushl add test mov fs inc dec push xchg lock sbb cmp dec aaa add ret mov nop lea or jge sahf jmp mov (bad) arpl inc ljmp (bad) (bad) cmp stos fcompl out insl mov gs lahf inc test jg add xchg je xchg xchg mov or (bad) or push or inc sub sarl test pop movb push scas testl sub xor fidivl dec cmc push fdivrs imul call or mov (bad) les cmp sbb sbb repnz lret clc (bad) aas push adc (bad) dec sub je lret leave sbb ja lods ja loope and push jp ja lods xchg pop iret add hlt pop subb add std and or mov pop in (bad) xor cld xchg (bad) test mov gs out pushf out sub add add movsb dec jb (bad) jg add adc mov jg and pop fmuls test or adc jbe cmc xchg loopne sbb scas addr16 imul incl insl push ljmp add push adc mov outsb push or ret fcmovnb loopne aad sar outsb loope xor jge xchg xor inc addl and cmp push movsb js or rcrl sar idiv pop nop nop arpl enter mov into lods jmp movsb add adcl sbb mov movsl scas cli push loop sub dec daa sub dec xor push rorl movsl (bad) movsb mov popa add mov and jecxz mov add cmp lcall jecxz mov push sub dec xor sub mov insb cld sbb sub dec movsb mov add xorl jg inc andl mov je dec shrb inc nop lahf test call stos inc outsb jle jo in clc sub xchg jl xor ss sbb push (bad) cld pop mov mov dec fnop add out pushf pusha mov push dec mov push pop push add pop imul in dec jo pop mov push push rorb mov xchg sbb sbb insb push (bad) and iret mov push outsl cmpl jg jmp bound call sbb (bad) mov aad and push push sub jle push (bad) lock sbb frstor or fild fisubrl pusha add fild decl jge sbb add add xor pushl popa fsubl scas ds push cli aaa dec pop into int lock jmp mov push pop dec pop cli daa (bad) sti nop sub mov sbb (bad) mov sti mov mov ja dec jecxz jb sti aaa lock pusha inc push mov add aad shrb and aaa fcomip jmp subl fld1 jae cmp mov and (bad) pushl (bad) sbb add inc pop int add in inc mov adc ljmp push mov xor add push push mov inc (bad) mov aam lcall arpl xchg jb or cmp dec add fwait cmpl sub ja dec or (bad) (bad) mov incl in adc outsb jbe add add add add sbb cmpsb push fs jb pusha jle sbb or into jne add or outsb cmpl cmpb push push ds mov and outsb pop cli outsl lret mov push in dec mov mov sub add jne pop dec mov ret mov xchg outsb mov dec daa adc cld jl jno add cmp or int dec mov xchg push push or mov decb mov xchg aad (bad) push xchg jae aas inc sbb cmp add incl cs cs jno les sbb aad imul mov add lahf mov es cmp xchg out jecxz push test (bad) jmp shll inc popf sub lret roll call imul shrb mov dec out outsl add les dec jb jo jle (bad) fbld imul cwtl dec pushf cmp cmc (bad) mov mov sub enter outsl and mov sub out aaa insl push call push cs insb and icebp sbb adc mov mov add sbb dec in popa mov xchg inc mov adc and push add xor nop sbb mov pop sub hlt sub push loop push clc mov ret pop mov fdivrs dec repz ja or mov xor (bad) popa xchg jp movsb push add add adc lahf fwait inc stos xor sbb mov mov push inc lds adc or or cmp sbb stos insb call leave xchg mov popf mov mov mov push aam clc push jg add jne pop fidivl inc sub nop in add ja mov adc pop mov dec jno push push jg (bad) cmp ja and cmpsb int3 cltd inc movsb push mov popf jo pop mov out popf and inc icebp xor sub loop std jp out jo xor xlat add jmp pop pop dec or push call cmp loop jg movsl mov ss cmpsl nop les insb cmpsl add jg push stc xor mov mov test xchg mov adc out mov rolb cmc (bad) in cmpsb aas sub xchg mov xor sub decl mov (bad) jg sbb sbb mov cmpsl xchg sarl sub loopne inc ljmp repnz es mov mov cld push sbb and push sahf (bad) loopne (bad) (bad) jg sub mov jge push cmpsb dec push adc or fstpl mov das push ss mov xor adcb sub flds mov daa fbld jg icebp sbb adc fwait cltd xchg shll inc call clc aaa out mov enter jp lcall sub aaa adc jp pop nop lds cmp push cmp cli adc es mov jg faddl iret punpckhbw sbb push std pop scas adc mov aam jl or cmc sbb (bad) incl mov jecxz les adc mov or cmpl loopne push ja or ljmp sub xor loope xchg mov insl ds (bad) cmp test andl rolb jbe jg test lods fildl dec jmp mov cs movsl je sbb cld lcall and dec jbe cmp jno xchg adc xor fist sti fcoms xchg (bad) (bad) (bad) fistpl stos in lcall push (bad) ss popa lock std (bad) mov scas sub out mov movsl mov push shlb iret pop idivl notb test adc outsl mov (bad) in call pop dec sub into popf lcall popa push sub rclb sbb clc inc mov aam (bad) fnop out shrl pushf mov (bad) mov jo je pop mov sub lds xchg (bad) cmp xchg jg or cmp push fadds pop enter mov aas dec movsb out adc ret lds sbb jb loop xor das add loopne outsl fdivrs inc add mov pop pusha inc cmpsb push lea cli fist push or rolb std incl inc pop je cli aas and jne xchg push push cmp mov xchg mov inc jl push mov fmuls nop shl xchg mov cmpb clc rcrb (bad) (bad) decl nop add (bad) jns add mov clc adc xor jl leave decl clc in das lret mov (bad) (bad) xlat std fdivrs xchg inc mov pop std movsl cmp mov push mov mov xchg repnz pop cmp push push loope sar jl decl fwait enter ss stc sti loopne (bad) and mov sti mov (bad) in or cmpsb inc je mov je xor pop hlt roll clc xchg lcall std mov cmp addr16 out add decl push sub loop and aas xchg push mov scas and jge in mov push lods in push fcoms adc pop mov jg enter and mov jg enter adc int push push sub ja jns dec push out push jl xor and imul inc data16 cmpsl enter adc mov js adc aad hlt call inc push mov nop dec shrl call fldt mov xchg test mov cmp test test mov stos and cli jg jmp jbe roll (bad) outsb push ror dec xor mov push lahf (bad) pushf add mov (bad) (bad) call cmp out inc pop lock cli xlat lret bound jl and mov push add test and lds jg sbb loope test pop mov ljmp jo lahf stc and cmp sahf icebp ljmp sarb mov mov or and inc loope push insl or dec add add movsl fisubl adc cmpsl mov decl adc ds std nop dec pusha xor xchg push clc jmp push push shll cmpsb adc cmp insb arpl jno jle xchg dec sub push sahf leave inc add fidivr xor in jbe (bad) ja add aas js shlb out (bad) mov jmp subl sbb popa and mov jbe clc pop test add pop push mov mov pop ja jo scas inc sahf push inc sahf outsb lret adc add push push rol clc jo sahf jno movsb add cmp pop xor daa lret loop inc adc jo lcall pop or int3 and ret roll adc (bad) ljmp mov inc xor jg inc adc cmp pop mov pop enter (bad) int3 (bad) jae movsb and jmp sar aaa add add adc imul lods repnz cmpsb mov cmc adc call orl dec mov add rorb aaa jl test scas mov sbb and add or int inc adc push sar or add pop mov rcrl sbb mov sub dec loopne cwtl push mov dec cs sbb or jne and mov xlat jg mov fisubl or or das insb sbb cmp push xchg sbb loop xchg pop and xor lock ret dec add sbb add movsl xchg outsb mov out nop test push ret ljmp jnp gs je es adc ja shlb push adc mov aam lcall scas sub cmpsb decl out sbb insb pop dec inc out jne fild jg mov jae lahf jbe and cmp jb inc mov ret test sub faddl mov sub dec push (bad) xor (bad) call flds cmove or sbb in jnp (bad) dec loopne sarl xchg dec cld gs push push imul mov sub jp int sbb inc pusha xor xchg jmp fisttp sar sbb stc add inc ljmp orl cmp adc mov pop in mov std push loop std lods adc decl cld loopne add xor xchg ds adc pop push ret out xchg and push aas xor add push fstl add or aas jns push movsb mov out mov pop dec pop in or push aaa inc std mov fldenv and mov stos inc adc pop hlt int sub jb mov movsl mov in out jns pop out pop sub add imul loop sahf shll xor mov or sub lock inc aas pop push leave push pop (bad) jbe call mov dec mov mov sub lcall sbb fiaddl sub cmp xor hlt js jmp or jl sbb dec and gs add add dec jnp push cmp jge or dec movsl xor arpl ds fldl mov pop and dec push cli dec mov ja outsb shrb push rorl cmp or std push or add sbb movsl cmp sar push mov insl jmp movsb pop inc sub decl mov ljmp cltd int3 xchg sbb add add popf inc and fildll negl fucomi push or out mov pop in int loopne les xchg shr and push dec outsb and dec les inc mov inc lcall loopne add mov (bad) daa fildl subb (bad) mov and ljmp pop cmp and sbb inc lods ljmp lcall notb dec test mov and fiaddl mov sub inc stos jge inc imul xchg lret rorl cli jg or ret cmp xchg sbb cmp push fnop mov or test std adc xor aaa dec mov fistp in call add (bad) imul pop (bad) mov in mov inc cmp add pop je pop pop push sbbl std add pop add shrl cmp sub mov negl syscall xchg jb (bad) pushf lahf mov or shlb and out xor add (bad) push adc cmp add dec movsl mov adc out mov outsl jb mov sbb adcl push add push imul aas inc inc sbb (bad) push test and cmpsb ss sub outsb xor andb dec mov xchg out or sbb sbb scas cmpsl add nop dec lret add incl cld mov outsb outsb push xor dec add scas call outsb fisttp movsb dec notl jl lods jo mov icebp or fidivl (bad) movl jb xchg push mov lahf push sar inc jg fsubp std mul xor xchg std sub test ss mov adc sub insl pop pop mov lret pop and hlt pop cld adc fdivrs add dec outsb (bad) sar out fdivr mov and and aas mov cli nopl shlb outsb mov mov sub repz pop add mov pop xor orl addl notl push jb xlat (bad) jg push add pop in or sarb (bad) fdivl inc inc or push mov hlt das xchg mov fsts mov mov pop in push lcall cli mov les mov lret loop or or aaa or inc cld fwait pushf sbb push add fstl jle loopne mov add xor pop jl mov mov cmp lahf mov mov in test in sub scas mov rorb fldenv call outsb and cmp jae mov mov pop adc push cmp daa stos pushf in push xor push push sub sar sub nop addb cmp sub les out sbb and bound addr16 inc pushf adc or imul add mov rolb fs arpl xlat adc cmc das mov cmpsl mov push lock cli orl rolb sbb fisttp cmp push loope js mov cld fdivs sbb mov jnp inc xor into fcompl (bad) fcomip incl imul nop adc push jle ja aas add push int3 fs mov mov fisub inc movsl nop xor add xchg out (bad) jecxz adc pop fildll (bad) in push jo adcl ss cltd fdivl sbb aas loop mov sbb fdivrl and (bad) fisubrl or adc inc nop xor sbb jg or mov and push sti push inc inc jle sub cmp push cmp outsb clc decl jl or or loop sbbb or jo mov cltd cmp daa xchg and stos cli fs cmc fldl xlat cli or mov push push add js mov cmpsl mov xchg add testb fsubrl lds (bad) sbb adc or adc mov les push push call or adc mov add scas je into ja jno fisttp push popf cmp je js xor mov mov jno adcl in mov adcl (bad) and jl mov add sub pusha mov loopne jmp cltd pop and mov pop lcall xor outsl nop jno scas lcall hlt sti mov test push add mov lock outsb adc popf xchg (bad) jg and popf enter faddl jmp ret jle out cwtl cwtl inc shrb cmpsb lods push and xor or mov push xchg add es mov adc inc sub lahf mov and push adc jb ss add xchg insb jbe mov cmp dec jae fs mov lods add enter pop cmc ja idivb in pop (bad) cmp shr test push pop sub jmp out sbb pop adc aaa (bad) incl xor push (bad) jne inc mov add cmp out jle adc add ja sub insl loopne sbb pop (bad) (bad) cwtl jo js fs mov (bad) inc aaa dec add add (bad) pop in sbb clc and lods out subb fwait js or bound jno jno movsl aaa mov or (bad) ljmp or pushf inc inc stos out cld movl dec inc dec jp adc lahf cmp inc push inc divl xor test ljmp int gs arpl push push lcall xor out jne xchg test push mov adc mov ss loopne mov in hlt inc push sti dec add aas or xchg pop mov sbb xor jns sbb fisubl and inc scas shlb adc ja push cs push test shll add mov shlb jg mov add push into insl negl jg scas mov ljmp int hlt fstl sar add pop dec into pop roll push xorl lret push popa int3 sbb ljmp scas dec gs jnp mov mov sbb (bad) lods push daa inc adc xchg (bad) sub js mov push mov incl mov mov lock (bad) push xchg (bad) ja adc lods and outsb inc mov test fs xor push sub xor in setle sbb mov add jp int3 jecxz das movsb or aas ret or test add mov in mov popa mov mov outsb inc scas adc and and adcb data16 lock xchg pusha scas or push dec adc xor out (bad) call mov scas aam stos xchg je stos add mov out push test add shrb ljmp mov movsb outsl aad mov lret shld scas sub mov jmp stos aam stos leave mov fadd add sub sbb lret mov add add lods dec jmp andl add xchg and or in into mov aam mov jmp push inc test and dec jb push out lods into nop mov and sub or clc cs cli cmp add gs push mov xchg adc xor test jb add pop inc mov xchg jbe pusha jae or pushl fiaddl rolb ficoml lods js loop mov call daa or daa popa xor (bad) xchg inc jns (bad) sar nop cmp neg xchg cmp cmc push rol push or mov ds lods aad adc nop movsl scas scas sbbl mov call xchg fcom or mov xchg jp pop (bad) add loop sbb mov mov add pop ret xor loop inc ret jl ret dec inc sahf adc cmc push std cmp enter xchg pop dec fs sbb insb push std sbb cmp pop mov push popf sarb (bad) xchg push xor lods ficomp xchg enter inc and pop out lods daa and push push push out fisttpl sbb scas nop mov orl cmp aaa push movsl push push incl dec xchg ljmp cmc jbe sub mov add sub push pop cltd push mov aad xchg sbb ljmp mov out cmp (bad) or test or push inc or sbb mov push sbb lock fildl cltd xorb xchg and xor aaa and (bad) ds orb es (bad) lcall xchg mov test stos rolb mov mov xorl inc sub jb pop orl adc popa lds mov movsb roll dec (bad) push fdivrs mov loopne mov inc lods movsl sbb add outsb (bad) bound das adc out sbb push jmp cli shrl gs mov sahf ret push (bad) repnz mov nop and jb pop sub cmp or mov xor dec mov mov sarb les sar push and xor mov push movsl insb je sub and mov or aaa mov pop cmp clc mov sti dec jmp add ret incl inc clc push jns cmp adc mov mov pusha int mov xchg bound clc and pop (bad) mov out pop xchg or fldl jno icebp mov mov cmp call add scas pop sbb jge gs clc (bad) out into sub mov sahf dec mov dec sar dec cltd push xor iret cli add test call or dec xchg xchg gs xchg shrb push and xchg call out mov add pop add mov scas add ljmp cld ja xor jle add fstp xor das cmp int rcrb aaa insb xchg int3 mov pop mov mov lret sbb es adc inc mov jle cwtl cmp out loope push pushf outsl adc mov xchg add es jb sbb adc popf ret hlt dec mov decl (bad) or sbb mov outsb data16 and (bad) aad jmp shl call jl orb notb adc push xchg mov (bad) das and insb out dec insb dec loop dec sub push inc clc lahf lods and fstl in dec mov sbb add push push mov jg lock pop imul jl ss jg mov mov pop fildl push insl jne je cmp test stos incl sbb or insb shrb ror es aam adc mov dec push clc xchg xchg imul xchg lods push dec xor lods (bad) out clc dec ss loope shl dec dec pop loopne ds out adc add (bad) mov or mov fptan mov mov or inc and nop jbe push mov in je jo or xor fwait mov insl pop pushl mov insl adc cld push cmp add cmc ret and inc xchg push outsl add push outsb xchg loopne or fildll outsb sbb fs lahf and lds arpl fisubr sbb jge cmp lods lea cmp popa ja sbb fisub jmp sbb add mov dec jo ljmp nop mov inc insl (bad) (bad) ss out loopne or push pop sub inc ljmpw push mov xchg pop (bad) mov mov imul adc mov jne or dec (bad) xor adc inc lahf nop adcl pop mov scas push cltd sbb subl (bad) lcall insb (bad) cmp inc cli das lcall jle pop enter push into dec jl cmc add nop clc adc shrb mov inc adc mov dec jbe adc inc repz pusha ljmp adcl xorb addr16 add push mov xor aaa fldl2e mov in (bad) jno loope jg or outsb dec sbb or std decl pop cltd fadds mov out (bad) mov xchg push sbb pushfw lock shr or xchg cmp mov aas std and push ja ss fisttp push (bad) clc insl lea andb hlt xchg xor or cmpsl mov subl decl mov dec addl and pop inc or push mov cmp mov es jecxz or sub inc es (bad) mov movsl xchg or adc inc or add or inc clc dec sbb paddq xchg inc lods mov push imul fs jg dec push jge pop add lds xchg aam xor fsubp add and sub out dec sbb push cmp sar arpl pop mov enter pop inc fisubl gs adc pop (bad) add rcrb mov test mov rcl mov push fsubs sub add or sub pop pop xor jne ffree pop sbb icebp cltd idivb add dec inc dec mov orl pop sub hlt cld xor dec jg dec inc cmp jmp outsw clc decl or xor call ljmp xchg mov add fild scas push inc call jecxz adc push (bad) fcoml sub sub mov mov sub jns or mov rclb out in loop adc das orb adc fcoml mov scas mov daa lcall cmpsb or out enter call inc mov scas and imul jge fs rclb nop add sub sarb insl xchg mov addr16 add clc add clc sbb sahf sbb fs decb addb ret mov outsb mov rorb or or mov push in (bad) decl mov fisub lods pop adc add (bad) dec arpl mov push dec or (bad) jmp xlat inc das daa in js xor cli scas (bad) (bad) mov rclb mov or dec mov xor bound test cld sub dec fcoms lods sahf pop nop pop inc sbb pop xchg cmc mov mov mov sbb cmp ret shlb add dec adc or das push push xchg push loop into add pop dec es (bad) xchg mov fidivrl or test (bad) call fisttp stc and pushf lcall mov add and stos xor clc lea mov adc incl ds pop scas xchg (bad) mov push scas loope dec jno mov test cmp mov push add sbb ss test mov into push call pop xchg add test push clc cmp fmul lret xchg (bad) jl sub inc insw lahf ja adc adc xchg xchg in (bad) mov cwtl (bad) imul mov (bad) mov mov pop mov mov and jne jl imul inc cmpsb lcall jmp rclb mov daa adc cmc ljmp adc mov or push test aam rcrb fisubl out add or jne iret rclb jmp cld (bad) (bad) addr16 push push lahf in (bad) mov mov clc and xlat stos cld inc cmpb aas or xchg sahf fsubrl shrb ljmp leave xlat dec add push mov inc pop sbb cmc jg inc inc js push mov sbb fprem lds mov adc int3 xor ja sbb shrb push sbb cs clc sbb lahf icebp push sbb mov clc (bad) mov jae mov (bad) ficomp insb addb or adcb jg pusha jge push or lcall cmp rorl test jecxz stos inc cs in movsb push cltd cmp jecxz add stos and or jle xchg rcrb test cmp fsubr push notb cmpsl mov (bad) loope (bad) push pop push jbe mov fcmovbe mov out push lahf pop lcall xor pop pop dec fpatan inc xor push jae mov lret adc pusha aad dec adc adc fmull fs mov or xchg or push mov in pop dec dec push cmp push push test jns jns sub xchg jle mov in fld insl pop and inc lret and lcall push mov insb xor daa popf mov rcrb outsb add mov adc push sbb sub dec ljmp push lea mov jbe es imul add push mov add pop (bad) dec les xchg sbb push inc fmuls incl rclb loope loopne ror xchg sbb cs clc stos rcr das mov clc (bad) lret cli mov fsubr add mov (bad) bound mov loope int mov mov (bad) cmc ljmp bound into adc xchg pop (bad) add ror mov insl add in mov add cmc jg shr dec fist jmp (bad) aas ja or outsb test ret movsb pop insl adc dec cmpsb jg (bad) cmp xchg push xchg xchg or fsubl xchg cmc (bad) ljmp inc js adc imul mov aas fdivr cs (bad) xor sbb sub mov imul sahf iret fiaddl imul push icebp aam out in arpl or bound or dec pop jp sbb fwait outsl outsl clc psrad jae in dec lds dec jbe popa pop or ja aam fcomip ss (bad) mov jg add sub add shlb xchg je mov lret dec add add jmp out imul add dec inc test inc cld ljmp mov pop cmp and sub aaa mov stc in add (bad) jg pop cmp cwtl aaa (bad) adc and mov sbb cmp inc inc ret dec hlt test mov pop dec and adc lock xlat ret add push add out pop or xor mov cmp and xchg add data16 or nop aam mov mov negb (bad) inc mov or or ljmp mov push sbbl rcr cmpsl sarb adc aam loopne sbb popf pop mov cmp inc bnd sbbl ljmp and repz xor es mov pop insl cmp mov adc add mov rcrl loopne,pn and push xchg aas mov fildll cmp adc std dec scas pop mov fidivr fwait sbb add inc clc subl sar dec mov push icebp add sahf dec dec arpl ja push xchg pop (bad) jg or aam (bad) fadds pop into fcoms adc ds push xor add int3 push dec or add cli out hlt dec jo add fcomi or cmpsb inc sbb and push dec ret jno nop lock and pusha popf call cmp push dec mov mov push mov (bad) cs lcall fldl imul lret fistpll dec cmp inc mov roll sub movsl (bad) call movsl test jb,pn aaa lods pop adc dec jmp lods cmp jp bound fldt dec subl adc orl fiadd mov xchg mov scas mov xchg ja inc mov clc mov and cld and jae xor push sbb push push inc fdivr sub ja push and mov mov das add mov repnz push sbb ret bound sbb ja mov insb mov mov add jge insb std aaa inc shlb mov mov jg xor fcoml pop fmulp add or aaa fwait rolb mov das xchg xchg (bad) sbb enter mov or adc or cmpb add pusha sarl cmp aad shrb dec cmpsb push cmpl pop and movsb and inc adc test stos cmp into mov sbb insl pop and outsl and ss and les sarb jae and mov cmp dec adc add cmp cmp imul xor ja clc movsl push xlat sti shrl mov insl push out mov mov mov pushf (bad) fisttp dec pop sub js imul ds jmp adc jp out sarl mov sarb leave stc mov pop add lock dec jb add fbstp rcrb xor ss leave jns push inc (bad) xor imul pop dec inc add jecxz and (bad) jns,pn jp daa in test mov cmp test jno lock xchg push int mov jle scas xchg sub sub add hlt xchg adc fwait cmc fnsetpm(287 clc outsl adc jg insb mov push xor inc cmp call (bad) lcall mov ljmp mov cs cli lret inc xchg ret xchg cmc fwait and mov stos div call cld mov mov (bad) aas push mov jo rorl adc out cwtl movsb jae pop fsts (bad) pop mov and loop sbb icebp sbb (bad) and push fildll scas adc rorb pop xor outsb sub xchg cmp or call mov data16 les pop cli movsb ja gs std dec push ss aam (bad) push hlt inc out push adc lods and cmp mov xor gs test xlat pop pop outsb adc fwait mov jb enter (bad) mov push or popf in dec jno sbb push push xor inc pop mov push mov sbb (bad) jmp push fist (bad) (bad) out and fwait vmovhps popa (bad) or xchg pusha jne imulb lret (bad) (bad) jg sub in pushf pop aaa (bad) aam enter adc inc xchg (bad) jg (bad) out adc xor adc repnz dec or imul (bad) out nop inc jl (bad) call push fucomi add imul pop or ljmp cli (bad) cmp mov icebp or cld fs sahf les mov rolb or (bad) pushl pop push jmp leave cmpsb dec sub pop xor jle dec fdivrl mov sti daa out outsb fidivl bound mov out mov jg and jbe mov jle mov mov dec adc mov pop adc dec ja xchg (bad) pushl les std adc add pop sub hlt popf in add mov mov pop push adc xchg add mov jno pop scas mov mov lds shll mov stos dec cmp jmp cmp push push mov (bad) push push inc lock xlat push mov xchg aam mov jg adc std mov js inc xor daa add jbe inc push or loope mov lds (bad) outsl je jno add lcall pusha and and jg nop sbb outsb addl dec fidivl or lods cs mov in pop test loopne and mov out clc jg jne mov mov dec or and push xor dec mov cs xchg pusha xchg andl lds add push adc jne pop cmp rorb jmp insl movb cmp mov mov or mov adc adc fidivl and xor xchg mov scas lret or or dec xchg cmp (bad) incl jmp push lret xchg jecxz cltd fdivs hlt pop je inc cli push lods hlt mov sub cmc xchg mov call xchg fcmovbe data16 and xchg inc push shr fbld adc xor adc call jo insb mov fdivr (bad) and push daa xor mov xor mov std lea jns call sub aam mov ja xchg mov xor negl pop and inc adc clc sbb cmp cmp pop js punpckhwd aas mov or test xchg fwait ret lcall (bad) push call lahf cmp mov (bad) cmc push fs stc aas or add pop fistpll fwait dec cmp and ljmp mov inc sbb push call pop sbb mov cmp cld or push cmpl mov add cli je shll incb ljmp adcl mov pop test insl pop push scas sub push ss fild loop aaa pushf cs cld xor outsb or cmp or aas pop call jbe jns sub pop outsl (bad) adc outsl fucomi in cmp clc xchg pop popa cmp dec out push gs dec cmp adc push jecxz (bad) sub jne pop jne stc adc ret fistpll xorb aaa mov inc xor inc jnp and out sbb shl and icebp fnsave jbe jecxz and js and jle push fcompl and lahf clc pop es (bad) cli or and lret mov xchg sbb mov addb sbb (bad) mov pop mov jno adc pop xorb add cmp dec add jnp xchg fwait inc sti mov jg inc insb je les mov add imul gs stos test mov mov jns clc push pop add inc in xor dec rolb ljmp lods sbb mov add dec xchg inc scas add inc or mov ss cltd fadd daa push xchg ret cwtl jb fidivl and or adc pusha subb in gs sub jl sub rcll test sti ss and nop inc push mov popf movsb insb pop iret shlb cmp cmpsb aam cmpsb push or mov insb add daa adc int3 or inc pop aad mov and inc inc (bad) out adc enter leave xchg jge add jmp ret sahf jecxz loopne sahf push xor or add nop sbb jbe insb aas pop pop xorl pop dec aam addr16 pusha fidiv mov cs mov cmp or mov out jb adc xchg push pop ljmp xchg addl fisubl adc addl jp lods sub mov sbb mov sbb mov das scas or push (bad) push (bad) test cmp movsl mov mov loop cmp sbb cmp icebp jnp les add inc push pushf shll jp addl pusha insl mov movsb push or add inc js inc es (bad) fnstenv cmpsl cmp les add int3 insb pop jmp dec add (bad) ret xor outsb pop lret adc (bad) decl fs mov test mov mov mov int shlb (bad) jbe and push cmp jle sbb inc stos mov gs and jl mov jmp mov push inc fsubs bound std dec sbb jbe inc fmuls pop xor das and jg lods shrb fisttpll inc das xchg (bad) xor dec adc gs insb inc out and sub inc in or mov pop cmp add (bad) mov cmpsl sub jne mov sbb test subb xor or pop or pusha jle add cmc (bad) out cmp ljmp outsb sbb pushf mov bound and in add int3 je test pop addr16 jg add cmpl scas and jecxz sbb imul xchg push stos icebp push cmp sahf and je or lea mov dec jl xor fistpll mov pop jb out xchg mov popa mov fwait jb dec js jl push imul jecxz inc or fbstp insb jl (bad) int3 test xor shlb test pusha roll outsb push nop mov push mov pusha ja scas mov lcall outsl test pop ljmp outsb sbb dec xor or fstps clc test arpl cli popa xchg popl imul pop jg pop inc add (bad) out or mov adc in jns dec lock idiv fild adc fmull cs mov push cld add jo sub dec pop aam push xchg cmp dec frstor or loope aaa sbb pop xchg pop outsl inc sbb insb mov int cmp (bad) lea mov sbb adc inc pushf sarb (bad) nop ljmp sbb les mov jge outsl cli sub stc fsubl das outsl dec arpl cld pop lock fdivs add sbb popf xchg addr16 xchg loop sbb leave stos adc xor rcll lock sbb inc mov or pop push pop mov in pop (bad) data16 pop lahf push inc out or decl mov push negb repnz loop pop dec mov mov ss push scas jecxz adc mov pushw inc xchg mov push cwtl xor and bound or lret and add iret or jp mov push loop fcomps and xchg (bad) loop xor test mov inc loopne push pop movsb add lock loop add call insb adc xchg aaa jle pusha cld mov mov movsb in lcall cmpb idivb shrb mov (bad) loop (bad) std (bad) lcall loop mov or fwait or cli inc inc int aas push (bad) jno sub pusha add je mov popa mov jmp xchg xor push test xlat and sbb xchg packssdw add fs std mov push pushl sub movsb jg pop sub call test (bad) cmp inc sub add add arpl mov sub movsb ffree (bad) icebp (bad) out push xor lds lods inc xchg dec push mov icebp lret outsl adc pop mov sbb pop iret xor ljmp sub mov jo xchg das pusha loope adc cmp daa and lock and insb push jecxz push in mov adc sar das into mov cltd fnstsw add inc (bad) aaa ljmp stos xchg loope outsl sbb xor mov mov cltd subl adc add xchg xlat add push les cmc jmp xchg cs pop loopne mov pop xor inc imul inc out mov les mov test rol push xor je arpl xchg mov jp xlat mov inc xchg ret jg lods aad loope icebp mov mov push fdivrs cld pop mov fsubr adc mov sub sti jae mov push jl xor fildll pop out mov push pop decb clc mov stos stos adc cltd sbbl std orb pop je jecxz sbb cmp out xor sub (bad) in fabs clc jg pop jp or or out ja or test dec data16 mov inc add icebp int cmc add and test mov mov insb cs out sar sbb into dec test mov mov add push fdivs mov subb mull push cmp pop xchg or push orl or push mov sub (bad) dec sub push inc pop int jg xchg jecxz add jmp xor dec mov ret into pop dec pop sbb in gs xlat pusha js mov jmp cmpl shrb cmc sbb cltd xchg (bad) pop pop mov fcmovbe pusha jae pop fstp jbe subl cmp adc mov int3 std roll xchg dec ret nop sub fwait mov sbb adc lock and mov lcall cld push sbb add enter in inc (bad) pop and xchg cmp loope mov inc ja cli test cmpps push ljmp aas pop mov fs and push insb pop xor jae jno add adc loope jg (bad) fdivs outsb push xchg pop jb jg push push adc pop gs inc loope cltd movsb das cltd insb in mov jbe pop jno dec (bad) pop nop out bound sub dec js and push push push cwtl inc (bad) ljmp and inc pushf outsb cmp push arpl or sar fwait test xor dec jae push cmp pop jb nop shrb fidivrl xor cmp mov mov mov rcrb out das cmc mov sub cld rcrb pop pop mov push in mov in cli inc xor push cs mov mov add sub cld push add jp and and push sbb ds push popa pop test cmpl sbb loope in sub xor push mov cmpsb icebp pushl shlb adc adcl add xor sub in outsl mov mov mov outsb xorl sbb je test sub jbe mov sbb lea mov add enter loop repz testl in test in xchg xchg push addr16 in mov sahf mov and mov test cmp xor adc push outsb dec test les mov inc add in les std insl add jg add xor pop std inc push push clc mov mov push cs test aam icebp pop dec push addr16 and cltd ret andb push push daa fcoml adc lock lock sub (bad) xchg es scas cmp into mov push fisub pop jmp or jns (bad) jecxz push cld inc fldl xchg xchg fnstenv (bad) out pop xchg ja (bad) inc inc push adc imul lret inc sbb push inc mov std xchg out (bad) scas xor cld incb and mov xchg sbb (bad) loopne (bad) mov xchg test aaa sub pop sub xor push insb jb int (bad) ljmp in add xchg or or fidiv push mov add adc lods sbbb push repz fdivr stos movsb ffreep mov in es out push xlat xor rorb (bad) jg xchg xchg nop push adcl inc xchg sub cld pushf mov dec cmp pushaw cmpsl and movsb push out popa lods lcall imul sbb and pop jp xchg (bad) adc outsb das and add clc outsl xchg mov sbb and stos pusha adc ret lods sub lret outsl nop lock out mov or inc xor and jge and stos xchg and adc xchg stos inc ljmp push fcoml dec push mov fcomi fcmovnbe mov or lea (bad) mov sbb lods jno cmp pop inc lcall cmc stos inc jge sbb mov xchg jp ds lcall adc jns or cmp les clc aas addr16 inc add xchg cmp push loope mov dec inc push xchg add aas push (bad) mov sub mov mov pop ret imul xor mov lock incl out gs test sti movsl add jle push cmp pause ret mov loop sbb mov call push sbb loope add cs movsl gs ret xor lock jo pop test lods ljmp sub xor sub lods and test fucomi loopne dec clc xor hlt fwait and or cmp fs pop incl adcl icebp jmp adc jae jno dec push mov sbb frstor ret jg sbb mov or ds test pusha pop push loopne dec push jp push mov push insl pop mov or mov cwtl popf (bad) sahf lret fisubrl pop movsl iret mov rcrb stc xchg sbb (bad) or loopne adc mov clc iret hlt mov lret xor dec inc cld adc cmpsl mov jle pop mov sbb data16 clc (bad) aam cmpsb push mov fwait bound inc (bad) pop or inc pop (bad) jg lret pop (bad) and or rclb push xchg sub mov out iret pusha mov incl scas and shll inc dec je imul lcall inc xor (bad) decl std push sahf jg add pop (bad) ljmp pop iret jmp mov rcll adc mov scas cmpsb dec loope jle jo mov inc fwait and add sbbl inc push out fadds mov test sbb dec cli outsl push out les jno test sub adc lcall popf xor in stos enter xchg xor xchg dec lret cli aaa dec xor cs inc xchg push sub mov pop dec xchg xchg fchs or push or sub and cmp int in roll pusha fimul addb pop data16 push aaa sbb jp (bad) xor (bad) fbld mov xchg add mov inc lcall push cld fstpt (bad) adc mov mov lock jbe call daa test or or jnp repnz into inc xor out or test sbb (bad) xchg mov mov test xor (bad) sbb jo loop mov add mov pop inc sarl xor addl cmp fsts dec inc lret jmp dec lcall mov clc mov out mov or addl adc push inc js (bad) pusha ss out jnp repnz mov lcall sub imul outsl mov (bad) lods jg sbb jbe mull pusha mov mov and cmp add jae out mov ljmp rolb sbb jb adc ja cmp jo ljmp shr aaa add ds lret pavgb test sub mov and push push (bad) cmc inc mov cli xor pop mov jnp inc fdivrs xchg mov adcb mov repnz into push mov jl and mov stos and pop sub sub out mov es cld jmp cmp pop xchg sbb mov jbe sarb roll enter or pop rcll add xor mov fs daa inc and cmc aaa leave orb inc pop pop icebp imul (bad) xor push mov jbe pop inc cmp add div mov mov push out dec fnsave movsl gs jp rol sbb shr ret mov ficom ss mov decl adc mov imul fsubs (bad) ss (bad) jge ret sbb (bad) inc add cmpsl rol movsl pop cmp mov fildl aaa pop cmpsb pop cmp sub data16 pop push outsb pop in bound push fildll lahf mov add add jnp movb mov cmp sbb add aaa add (bad) mov les rorb xor cld and icebp pop inc mov jnp in jge mov xchg adc xor add xchg dec ljmp inc pop gs add lret out xor pop and lds jle xchg jo push add lret subl popa xor mov (bad) cs cli repz add fcoms jmp jl aam push in in jle xor adc and decb mov popa jmp mov mov jbe cmp lret (bad) and jl dec dec push (bad) (bad) out adc jg and mov push frstor jmp inc cmpsb mov cltd mov in test (bad) aaa mov xchg xchg mov sti mov xor dec cmp cmp push and xchg call js test mov add pop add aas jbe pop inc push enter push rorl push (bad) (bad) (bad) call sar xor add lcall sub test repz test mov arpl jg sbb fistl roll push inc add cwtl mov (bad) or mov jo sub ret loopne jae mov mov (bad) mov inc (bad) movsb out movsl mov cmp mov push jb fsqrt inc shr iret adc inc push fcomip data16 and jg inc mov daa xchg xchg (bad) pop sub test jmp add sbb xor add adc js (bad) call aam push fs call mov or dec push dec adc into mov daa mov int (bad) cmp and cltd inc and in mov and pop and add add xchg push pop movsb cld ds sub decl repz iret push (bad) pusha (bad) mov push xchg and mov xor push lods cmp dec inc mov insb jmp sbb jne add inc lret (bad) addr16 push jo loopne (bad) mov or jns and sub insl push stos or or adc sbb hlt sub push cmp add add es mov push in push xchg aam cmpsb dec inc daa jg nop adc cmp (bad) incl xchg lds rcr sbb clc push in cmpsl popl lods jecxz cmp cmp xchg insb and outsl xor movl sbb repnz mov pop addl add push cmp mov aam or sub scas rcrb ljmp sbb push cmc stc jle adc jne or xor pop and cwtl pop or leave xor daa mov add rorb mov mov lea icebp adc aaa dec pop add jo xor pop outsl add sahf adc or dec mov imul add xchg push fstpt pop (bad) push (bad) lahf stc inc aad sbb call test dec faddl mov and roll dec in (bad) (bad) shrb dec cmpsl outsl les fcmovb xchg and inc dec ljmp lcall (bad) cmp aad cltd xor nop push fsubl xchg jg inc sbb fcoms push or sbb (bad) add out clc dec sub cmp xor jbe or incb mov sub mov sub xchg popa outsl (bad) ljmp cwtl cmp mov imulb add aad mov add cmp ja xchg add popf push mov ret scas cld pop out gs fdivrl leave (bad) into arpl fimull adc xchg push and xchg aaa gs mov ja das xorb inc (bad) cmc mov loopne dec cli popa clc (bad) lcall cmpsb std dec or and loope xor xor mov inc mov push jno pop mov or lods mov xchg lret push decb push adc arpl mov sahf ss cwtl dec pop sbb (bad) (bad) in outsl mov pop sarl add pop aaa fsubs cmpl pop and incl and mov and pop mov test sahf push jg test xor jae pop add adc (bad) andb xor dec lods (bad) inc out push ds insl jne loop cmpsl outsb push xorl movsb xchg sbb lods bound dec xchg sbb mov cld mov into outsl pop pop xchg and enter ljmp popa (bad) ljmp xor cmp loop (bad) adc sub fistpl jo call pop cwtl mov cld sub jmp inc (bad) pop cld cmpsl lds push mov push call (bad) aad and std sbb mov jl jle icebp call movsl (bad) sar or fwait insl inc outsb imul mov (bad) out lock insl (bad) out add xor lea xorl mul or pop in fisubr fisubl sbb push clc and pop ds pushf std in inc jb jo push mov push fcomip and sbb cld popf add into or out and jnp jle rcll jb stos push int3 ss mov shrb xchg inc mov jp add cwtl test sbb (bad) xchg lods outsl adc and mov shrb jg ss es ss jmp add sub mov into fisubr (bad) ja call out lods push dec pop jle loopne test gs (bad) hlt pop pop push mov imul mov insb push into jnp push fwait and mov lods and inc add hlt test inc mov data16 jbe mov xchg mov mov xacquire or mov out fldt sti ljmp (bad) mov popa sbb adc mov and iret pop les jno (bad) mov sub je sub arpl sub pop and push inc mov (bad) pushl sub xchg jg inc inc pop jo loope inc cmp (bad) fisub xor (bad) test (bad) sbb (bad) xorl cli scas push cltd js dec repz push push test mov lock rcrl fisttp jp mov cmp out fcoml mov daa insl in clc pop imul bound sbb sub jne data16 mov inc clc push cli aaa push and lret nop and and cmp daa pop popa ret pushl les test or int3 icebp rorb outsl pushf roll push inc xor sbb andl xacquire pop and ret and and jnp scas stos add adc (bad) jmp pop dec arpl fldl out aas sarl mov ljmp push push lcall pop icebp cmp mov adc xchg les cmpb cmc add mov daa pop movsb inc negb shl dec out aam sub clc mov subb imul adc pop ss dec sub insl adc arpl push lock fcmove push ficomp sarb xchg call sar jo pusha sti out pop imul cli incl xchg mov sub dec xchg je cmp jmp lods les movsl (bad) roll aas add mov cmpsb cltd jl inc es lea pusha insb pop out xchg js fcoms test fwait cli or popf add aad (bad) out push dec jbe out cmp xor insb cmpl fcomip mov inc push lea int push jg outsb sub push jns adc fwait cmpsb pushf pop imul inc notb xchg out clc je mov push (bad) (bad) dec clc lock sbb jmp pushf jp add out adc adc popa (bad) loopne (bad) jb mov mov inc cld outsl mov and pop mov test xchg clc lea and arpl enter es aam popa icebp sub enter add mov ror std mov sbb inc daa adc jecxz icebp call (bad) in add in mov sub or xor fidivrl push push adc out cli mov push xor mov icebp cmpsb je pop and adcb mov lds inc dec adc test in mov les xchg (bad) cmp cmc aaa inc ds and add mov (bad) lret mov jl pop push xor or pop (bad) jne cmp (bad) (bad) out inc adc les dec mov jns add (bad) dec in ror cmp or jno clc pop sub fmul dec add add add mov cmpsl daa icebp push jmp popf test pusha in clc jmp push and xchg xorb sub mov aad adc out pushf ja hlt xchg in inc sti mov ret mov aaa or ficom in dec sub pop addl fimull ljmpw add aaa dec push xor sub test cmpsb call xor mov stos es add cmpsb xorl mov call mov call fcmovbe adc sub jbe fistpll and xchg push jle mov pop mov ret pop fcmovnbe imul sbb jecxz loopne addl jno and add push (bad) stos add in xchg mov stos sbb sub insb inc xchg or cmp stos push sbb jno xor rorb sbb cmp ljmp fiadd cmp pop test repnz subl shlb jns mov pop call inc dec jae adc pop and cld andb dec int3 cmpsb in inc push outsl xor add ljmp in mulb xor js push inc adc and push outsb ja (bad) (bad) xorl fstpt adcl mov loope xorl push push js cmpsl jne loopne movsb mov adc ljmp jle push cmc stos sub sbb add gs adc testb or decl adc add push xchg pop inc cli ss das ja mov cs cmp jp fild out dec sahf xchg (bad) outsl xor jp iret imul xchg and iret pop xchg and pop test inc xchg dec dec outsb imul pop addb mov mov andl inc ret loopne lahf call pop jb cmp jg sub mov cmpsl or aaa dec ret xor (bad) xchg xor jecxz (bad) call std dec adc (bad) loop or xchg push scas movsb cmp push push addl popa lods pop adc add in add stos daa mov ss mov pop psraw pop cltd add pop or jge sbb dec aaa rcll or push mov dec icebp in adc (bad) int3 xchg sbb pushl fwait adcb out insl (bad) clc jl sub jae mov in dec push cs insb into call cmpsb xor jnp (bad) je pop jge cmc clc popa adc pop call dec popf pop int3 dec in and push js outsb in cmpb mov js pop pop sbb jg les mov inc push xchg testl xor mov push stos insb call pop arpl addb (bad) mov jbe and sub mov or fbld adc dec dec pop push sbb xor inc sbb sub fs push add aaa and xchg or dec pop mov jle test add shr jmp out hlt and or sub (bad) pushl jmp adc addr16 std add (bad) pop dec std rorl dec adc pop ljmp adc movsl push dec mov or ror inc (bad) (bad) mov enter or mov std pop push das daa mov push add insb outsl adc sub xchg inc test icebp jg adc and ss mov (bad) adc mov sbb ja sub add jp out es jg popf into push jle aas ret mov pop and and out pop or ss rcl cmp mov cmpl add rolb (bad) pushw fsubrp add das nop cmp ljmp xor aaa mov and or mov cmp rcl jo loop (bad) call jmp jb jge pop fdivs inc jmp out dec test pop fstpt mov add inc out cltd jo mov aad adcl stos cmp push mov adc and inc in lods mov pop outsb mov shll cltd pusha loope jnp or incl cli and mov scas push or jnp insl iret outsl mov mov lret aam cmp imul sbb inc sbb aas stos cmpsb add incl adc dec rcr inc stos jecxz (bad) sbb shrb stos enter out xchg dec insb xor (bad) sbb sbb cwtl mov (bad) ja sub or push mov sar jmp arpl test les mov ja adc mov dec outsb dec in popa xchg popa or (bad) cmp sub into ret shlb mov ds out jno addl xor inc addb adcb or es clc gs or mov or push add aas test sbb add mov mov aam aad jmp mov nop out pop sarl (bad) add push inc (bad) into pusha lock repnz lcall push jnp bound adc fldenv jg idiv fucomp jne insl dec divb sbb mov jg out jae imul andb and cmpsb mov bound test aam loopne push sub arpl fsubrs add ja pop lds fdivr mov pop dec dec ret lcall std nop pusha lods test dec movsb jg les adc stos pusha (bad) xor jne adc and push fcmovb das pop add add cmc (bad) decl shrb sub add mov imul mov (bad) fisubr xchg (bad) or and sub and mov push outsl mov mov adc das inc add movsl add out adc pop enter jl cltd adc and insl mov mov insl pop jg ret add out les push jae scas mov dec js xor aad jb es push mov xchg ss outsb fsubrs xorb insl pusha (bad) sub xchg mov (bad) ljmp sbb or mov xchg cmp or out fwait imul sub add and or push sbb add or std bound mov and dec iret cli mov inc pop mov dec movsb lret les int3 or dec and xor out mov fistpll xor dec xor ss mov mov loope add aam push push inc sbb (bad) pop dec cwtl sbb ljmp pop push and lds inc out pop lret cli cld enter repnz faddl outsb les sar sbb (bad) dec and cli pushw adc (bad) xchg (bad) jbe xor push (bad) and inc fdivrp scas mov add mov mov jne xorl movsl cmp loop or xchg jbe adc cmpsb fldenv add jo push dec mov (bad) pusha jecxz lock sahf sub (bad) decl dec ds popa cmp in (bad) in sbb mov insl aas mov inc leave mov inc outsl xor clc inc nop and xor sete pop (bad) push mov ljmp mov cld out add arpl push ss pop dec bound sbb or es nop sbb movsl inc ret xor xchg mov or fwait bnd xchg jge push jne ja aam xor ficoml dec pop or in or fidiv lds gs push jbe sub cli mov cli iret cmp or cmp sbb cs add (bad) xchg daa jae imul incb inc stos in and shrb mov (bad) jg cmp nop pop push mov loope popf xlat xor fbld ja je call test (bad) adc lret subl xorl inc fild pop (bad) jns sbb adc fucomp into xor outsl mov xor jo add xor ljmp mov addl clc cltd aad cltd (bad) sbb add xchg push sbb lods out add dec cmp pop xchg dec jmp or insl pop (bad) and hlt pop (bad) jno lret and mov adc cmpsl or int and xchg gs pop jb xor xor mov outsb push cli xor je mov xor jne mov mov or subb test inc cltd divb mov pusha cld inc sbb (bad) dec fbld push aaa ja fucomi lods roll outsl cli mov mov cmpsl jne jo test (bad) les sahf mov mov rolb arpl das xchg mov fs pop rclb pushf or les daa jb in imul add pop fwait les repnz (bad) lret dec orl out pop jno,pn adc ret adc ljmp dec ljmp pop lock aad arpl loope inc mov push adc jne ja mov sbb dec jbe or push cmc pop sub (bad) incl jp or inc mov add xchg xchg and adc (bad) dec cmpsb fist ljmp sbb lds add inc fildll lods mov add sbb mov out add aaa int3 add add xchg or mov imul sbb cmp adc std mov or repnz cwtl mov test cmc add dec bound gs sbb inc jecxz (bad) mov es xchg xchg test (bad) out into inc push aam test lcall jl test push lret sub sbb mov dec or push lock js jle cmpsb mov bndldx mov out dec add test sbb sub inc (bad) push add sbb dec dec inc jmp decl (bad) mov fildl jecxz std pop cmc incl fld1 mov and mov in jo jle inc repnz sti mov dec adc dec imul loope les add mov int ja les push mov (bad) mov pushl loop jo daa scas pusha mov mov fstps mov aam mov pop pushf jle jbe push icebp jno mov into les cmp cmpsb pop andl pushl ret xchg fsubs insl push jp mov cmp fwait mov decl aaa sbb or cs inc add aaa cld and cmp or les pop pop push sub iret cld lcall ret sar add push cmpsl push mov stos push sbb cmpb push cmp dec push ljmp sbb inc xsha256 cmpsb adc adc test fsubr adc inc mov jle cmpsb mov push dec imul (bad) popl dec bound jg sub repz jno cmpsl sbb aam imul out push nop xlat (bad) lods shrb mov rcrl ss xor int3 movsb xlat or addr16 jp test decl jmp xor loope xchg insb and xchg (bad) scas fadds pop shrl (bad) dec popa push add clc inc ljmp mov add decb inc (bad) mov sahf mov mov mov ret xor outsb ret add push test outsl inc xchg xor xor (bad) aad pop inc jmp sub mov pop es dec std pop fdivrs shrb aad inc push mov adc (bad) je jno ljmp jae xor or pop adc and mov stos cmpsb cmc std scas mov cmp or mov sub pop js fs scas lods pop sbb dec dec push mov sar push in xchg pushf ret dec mov outsl clc incl xchg aas xchg jmp pushf fdivrl lahf rorb mov push test int3 fistl in mov sub negl xor dec lods getsec mov inc lcall call lods pop and cmp popa inc push xchg push pushl lret mov insl mov cmp (bad) lea sbb jecxz add adcl mov cmpsb icebp call ss popa sub push int mov xchg dec ret ljmp mov or push lahf pop pop jg popa jge mov add dec cmpl ljmp adc mov push jmp popa daa (bad) enter iret sbb push lcall push loope inc lock mov mov jo sub xor pop inc test and xchg loop sbb sbb push out jmp adc sbb (bad) incl (bad) loope cwtl in cld nop push jb mov jmp call add incl inc repnz call mov pop sbb and xor mov movl arpl pop gs jp shll pop nop and adc push sarb in or bound inc inc mov dec push dec mov xor pop (bad) (bad) jp inc push add inc pusha or push pop and (bad) and sub (bad) xor ror pusha inc add lret and stos inc pop aam cld mov mov into xor jg fs cmp inc lcall stos xchg in pop mov mov push test inc nop lcall add pop mov loopne push (bad) fucomp popf scas adc das ljmp push lds incl clc pop imul xor hlt outsb dec cli xorl push xor dec mov sbbl lds cli dec cli fcmovne add cmpsl add out pop push insb push jl xchg sbbl rolb pusha or outsl mov pop pop es (bad) ljmp mov xor xchg outsl adc leave add cmp rcll sahf aas adc repnz (bad) jg or and mov in cmp inc fnstsw outsl adc pop dec push xorl push movsb xor jbe nop loope mov cmp xchg push hlt call mov (bad) xlat (bad) aad dec cltd push js scas mov ljmp (bad) jg mov and inc cmp push test icebp push test cmpsl ficom adc nop aam cli push repz mov or inc or outsl ja dec loopne fiaddl lcall aaa fcmovnb (bad) mov push rcl (bad) add inc mov in push inc jg lods pushl (bad) cmp mov aam scas pop ficoml sbb outsb sti push push adc pop push sbbl mov and (bad) fs es cmp rcl jo add into push cmp lret mov in fistpll sbb cmp insb outsl push add jg sahf dec add push std cs sbb mov jbe enter push ret (bad) cmp xor dec mov sub adc pop xchg pop xor hlt or arpl decl xor inc inc inc fwait cli mov xchg cmp pop inc sbb adc nop and cmpsb jne nop jae mov (bad) mov ret in inc outsb cmp cmp lea ss mov xchg mov and push sar fildll or xor ret lock pop add (bad) jg (bad) dec scas sbb lds mov ret pusha pop lcall mov (bad) cmp mov and cmpsb ret les mov imul imul and pop inc inc add inc add add mov inc adc fildll pushf outsb and mov dec push sub cmp lcall pop or mov mov push in bound mov test add cmp mov (bad) test cmpsb fs pop mov rorb sbb pusha ret jg push xorb ret sbb ss (bad) (bad) out push pop andb ja pop add cmp jno call aaa and mov push sbb sbb lods push mov sub adc cli jg loopne mov and pop (bad) and inc ret dec fwait (bad) pop cmp sbbl outsb push ss test inc xor imul push mov mov aaa test iret mov mov (bad) dec pop movsl fs xchg movsl adc mov stos outsl mov or hlt enter mov mov fadds loopne adc push pop (bad) jmp push xor aam je cmc jg popa in scas mov dec ret neg ss pop xchg movsl ss outsb dec inc ljmp daa stos xchg push sub div add ss xchg mov and pop loop sbb fildll out faddl movsb xchg mov lods mov lcall fnsave adc cld and or loopne pop cli addr16 push mov jmp pop mov and in aam aaa fs ss sub cltd test (bad) sbb dec nop and jno movsl (bad) sub rcl lahf inc xor inc inc adc pop inc bound je pop push (bad) outsl scas add sub mov popa lcall adc ror sbb sub cmp dec (bad) mov je xor push add mov notb (bad) fcoml pop inc sub add fmuls cmp mov cmpsl adc insb jmp xchg sbbl mov call mov gs gs jl mov cmp and or xor push push sub fbld xor dec mov xor add cmp sub aaa imul jg pop incl add (bad) shlb xchg xchg or mov xor cmp (bad) repnz cs mov xchg sub cltd xorl outsb (bad) dec movb add xchg icebp (bad) ljmp shlb int bound lock stos stos jbe mov inc jne lods fnsave jle es push fsubs hlt mov sbb (bad) push xor sahf (bad) gs add roll rorb icebp mov mov fidivr lock nop jno,pn pusha test out cmp (bad) hlt mov mov rol sti loop andl xor cltd push (bad) inc sbb or sub inc (bad) jo call push add xor jmp loopne subb add pop aaa std decl cmp xchg pop mov push ret mov test pop mov scas push adcl push dec sbb xchg mov pusha mov xchg inc cmp scas aam push and or mov inc aad test xor jmp pop cmpsb mov bound mov mov sub (bad) push mov call ss dec out jmp cwtl inc call xchg mov mov mov fldl mov lret lahf test cwtl or sbbl or lcall (bad) mov addl es ss jg mov sub push sbb xor jmp lock push nop ss adc mov add sbb jle mov inc out (bad) mov data16 aad mov pop fs imul sub aaa mov mov cmpl dec out imul and mov sbb push sbb rcll lahf push cs push cld ljmp cmp sub (bad) fdivrs fsub into jge or xor mov decl popa mov inc adc lret aad mov hlt fsubs mov push jo imul sbb pop jbe mov loop es mov lods lahf mov dec loope push mov xor repnz add js cmc fucomip test repz pop jg push cmpsb push cmpsb or mov pop scas and inc lock sti mov push (bad) jp pop xchg push cmpsb dec mov inc push ss cltd adc aaa and faddl (bad) stos insl loopne sub icebp or sbb cli mov test cmp lret in xchg push pop jbe mov inc inc mov add sbb lock sub cmp sub clc inc or in push inc xchg push hlt into push int3 pop enter (bad) xchg and adc sub or loopne scas jge ljmp adc mov sbb cmp pop jg (bad) aas mov subb ret or (bad) adc mov decl mov or add pop cmp sbb std (bad) sub les push roll pushl mov push psubb hlt pusha xor andb test jne mov aad inc inc les stos xchg or lods inc xor or jge xor out lret inc rcrb out sbb dec ret (bad) jg add xor fimul inc mov addr16 pop xchg je xlat sbb mov out mov stos hlt popa movsl cmpl mov jne cmp (bad) aaa push pop push lds dec ja push test mov dec push mov xchg aam mov push enter imul jbe push (bad) nop push sarb (bad) mov fcoms inc fistpl (bad) mov cmpsl mov (bad) hlt push or (bad) pop sub or bnd les pusha (bad) loop inc cwtl fidivr insb ret push push mov sti xor rclb adc jp add sbb test push pop fadd push cli xchg add dec frstor lock nop sbb adc lds test inc add insb jl xor sti stc or js and fstl inc jge mov add pop dec push xchg mov sbb das adc sbb pop in sub adc cmc bound mov push and fwait push mov or or ja mov out ja (bad) divb dec mov inc or fwait insb ljmp pop aaa xor cmpsb shll xchg test adc push pop inc iret in inc aam xchg pushf mov xor aaa jbe xor inc inc or or push std mov and mov cmp (bad) mov jecxz sub adc cmc (bad) pop xchg mov push add dec mov push cmp mov push cs test mov jmp pop xor and adc xchg call or mov mov mov in mov mov xor imul inc ret jbe inc jae leave push push pop outsl inc (bad) or mov out mov cmpb xchg or pop pop mov sbbb mov test hlt add (bad) mov xorb test sbb xor push call xor dec push inc cmc roll ja loope pop xchg jne push xor pop push sub or movsb in cwtl aad push faddl inc mov imul ja add loop xor and pop mov mov popa mov es fs add jecxz mov mov cltd jmp ljmp dec mov xchg cmc or mov or (bad) stos and add je mov dec xor pop fsubs sti mov mov add fldl2e addl inc rolb cwtl mov xor aas dec add sub pop inc mov and gs sub mov add mov enter mov push jle je fcmovbe out movsb jae pop cmc mov pop mov pop push fcmovb stos rclb sahf and cmpl sub add add jo xchg and cmp cli jmp ljmp pusha adc rolb hlt sbb (bad) jae cmp inc fidivrl mov lods xchg jbe and fstl fdivr xchg add adc (bad) lock cmp push pop pop mov mov mov add pop sti cwtl lahf mov jne xchg xchg push fs and loope (bad) (bad) cmp out and or xchg sbb pop inc sbb add aaa push (bad) dec add ss pop mov jo push jnp imul jmp arpl mov (bad) decl dec jno push mov imul mov push sbb pop movsb adc sbb ljmp lock pop enter push je cld push and and mov out push dec jp fdivrl add push sbb inc aas push adc aas cmp fstl shrb loop rorb insl xor xlat fbld sahf push push mov ror hlt fwait test test (bad) incl and pop sbb data16 roll fisubr scas cmp inc inc cs (bad) out and mov jecxz xchg mov call loop push cmp out aad sbb popa add insb js xchg fimul mov dec mov out sarl inc add or lea sub lahf enter out fwait mov stc adc outsl push into inc aad or sub pop ljmp inc cmp sbb add (bad) outsb jg test es int3 mov call and cmp xor movsb inc jnp inc cmp int3 fldl (bad) (bad) (bad) ljmp add inc sub push popf push (bad) pop movsb mov sub je (bad) add movsl shll aam and movsb movsb jg loopne aad mov dec je jmp call int pshufw loop pop data16 (bad) imul andb sbb push or sbb std test mov dec or nop jle mov jns cld loopne punpckldq (bad) adc jae adc sub (bad) mov mov pop data16 hlt int inc fstpl adc push hlt or movsb mov ljmp (bad) mov enter ret xchg aaa js outsb xchg xor fprem1 push adc adcl subl xor cwtl pop dec mov mov jnp test bound ljmp inc rorb add mov (bad) adc xchg adc xchg and push dec xor mov lods push pushf cmp mov aam jmp xchg push fidiv xor nop pop xchg mov (bad) mov fisttpl inc jns insb pop jmp push mov loop out lock orl inc or mov (bad) mov mov js inc jo mov cltd lahf ja rolb insb push sub imul push test enter repz cld push pop adc xchg push sti add inc pop lock mov insl stc pop dec add mov mov jno sub cmpsl (bad) in in inc cld lcall xchg ret or jbe jmp mov mov loop std (bad) icebp pop (bad) xor push push mov scas mov add ljmp pop (bad) lcall and lock cmp outsb int3 xchg aam cmpsl sbb xchg inc jle jnp or cmp mov rcrb insb cltd rolb or fs pop mov mov jecxz lahf lcall pop (bad) fincstp and xchg call push jmp sub int3 sbb dec jno jp ljmp mov sbb cmp fs sbb (bad) dec adc mov adc out and jno hlt sahf add (bad) push push fistl or adc dec or push (bad) pop push ja cmp or dec inc and shlb into sub fdivl push dec lock sbb dec inc (bad) enter stos gs fmuls mov cmpsb adc xchg jle add mov mov aaa shlb lret aad jae adc jecxz (bad) and decl shl nop ds mov scas xor xchg and inc jnp,pn pop dec or pop pop adc test and push rol rorl xlat pushl or add add add and dec fcomip inc int3 lea jno rcr mov mov aam xor adc ss xchg mov mov loope cs jmp lret sbbb cmp or xchg pop push fcmovne or push mov shlb sar int hlt or pusha adc or and cli ror fnsave inc into (bad) pop rcr pop stos in test push mov or push push ljmp xorb cli gs hlt sbb jg xchg add jno arpl in add (bad) bound xchg inc es decb xchg and cmc aaa adc sbb push xor xlat fldt aad or and xor ret pop mov std inc dec ljmp jo mov jle push cli fmul leave add adc push jg add popw es repnz add cmpsb jnp dec dec mov data16 (bad) xchg adc mov dec jmp push push (bad) cmc cmp lcall inc jg add sbb adc and ret push pop repnz add jg inc push mov push pop add dec pop push jecxz add cmpb mov jo xchg jg jne insb std inc ficoml enter int3 aaa stos nop add (bad) mov test mov jb (bad) push or push push jne sbb outsb leave or add daa dec cwtl bound ret add loope inc and and and and stos fisub call fmuls lock pop or fiaddl mov add cltd mov mov jb les orl push dec jp ljmp mov mov cs call jno subb push push aam movl negb mov adc mov shrl rcll push ljmp out in decl and insl test sbb pop push mov sbb inc cli test ds es add mov xor mov imul movsl (bad) fiaddl jb xchg das cmpsb jbe push dec add and mov or inc sbb jbe dec cmp add push xchg popf xchg sbb fs mov test fadd mov outsl mov into push dec inc jbe add and mov adc xorb inc inc movsl add (bad) jo and fstps adc mov mov mov sbb cld test inc mov sub mov imul popa cmp ret mov (bad) mov fisubr das fdiv mov xor mov inc cmp or movsb lock mov inc out bound or lock out ljmp adc mov adc xchg aaa adc incl push addr16 inc addr16 mull cwtl aam (bad) rcl insl inc lcall (bad) enter pop mov pop clc mov stos daa ret test xchg clc pop orb ret and arpl lret icebp pop inc add pushf (bad) or jmp xor lret fmuls or push clc mov into mov das inc std inc fnstcw pop loopne cmpl mov mov fs sarl jb mov push es (bad) xor scas incl fisubl fistp pop fs xor jbe jecxz hlt lea pop sub decb add and mov cmc push (bad) mov fidivrl adc mov or (bad) sub dec out dec outsl clc and push test fsubs and outsl adc js dec (bad) sbb movsb or fdivs fwait or call mov xchg cwtl mov faddp rclb clc pop xchg lret inc fwait mov sub push sbb mov adc mov xor popf es loope shrl (bad) idivl mov test push std popf mov add xor loopne gs (bad) jg cli and cmp mov ds or jbe cmc jg mov dec pop test cmp sti pop or add mov in outsl (bad) add sub out movsl jg insl std incl xchg sbb es jg add imul test mov mov push enter push cs and cmp mov lods ret cltd add je (bad) add std pop xchg xor add push pop ret fwait dec jecxz repnz das test je xadd adc and ficoml mov adc lods (bad) mov (bad) hlt aas add adc push ljmp jbe cld scas andb inc push xor lret xor and jg aaa adc jl int imul dec pop sti add pushl inc sub faddp and inc sub aaa adc push push sub aad mov hlt (bad) jg jl sbb push xlat (bad) inc loop cs inc clc jne or incl xor xchg fistl mov aaa pop add enter jp xchg dec and push dec mov pop imul fcomps adc jp dec adc imul push dec lods cmp in add aaa dec cwtl imul push test int add std dec and lret outsl std sbb mov or rcrb sub std (bad) fildll sbb sub xchg insl lock in stos or cmp and addb aaa xor add or and mov add mov mov lods test mov xor cmp push jmp pop and and call add jo fdivrs or mov or jne fisubrl adc and andl pop lea scas hlt xchg outsl (bad) decl dec (bad) cmp call mov or decl je stos pushf imul or loop mov mov hlt sub inc or shld clc inc inc inc pop aaa push pop stos out xchg and (bad) (bad) fisttp les jae into clc std rcrb xchg gs cmp pop cmc addr16 mov inc push decl sbb jecxz adc ret vcvtsi2sdl push cld imul ror call adc lcall xchg outsb xchg shr sbb rcrl and test mov jg and xor pop add adc fidivrl js dec and jne mov clc stos repz les xor (bad) icebp adc or inc fcmovb popf (bad) cmc push sbb fild push cmp cmp add ret jmp push es clc imul xchg ret xor cld jg or lock ja out into push or test test scas adc cmpsb ret nop fsubl push inc jg lahf les pop aas xchg pop xor scas dec sbb int adc add (bad) fcoml mov and lret push push push add fnsave jmp adcb mov sbb sti inc or lea mov jns xlat bound loopne adc flds mov add std fldenv pushf test mov mov mov popf aad (bad) (bad) or mov adc loopne stos jmp cmp (bad) js add enter fimull push loopne adc xor imul test fwait and addr16 add aad (bad) es hlt mov push je fmull xor (bad) or das ss pop int3 pop mov movsb mov add and imul cli pop adc mov push inc cmp call mov jns and (bad) cmp xchg mov add out iret in jecxz sbb and lods mov and addb mov add popa mov xchg mov (bad) adc xor xor cmpsl push cmc gs (bad) call iret int pop xchg or test pusha mov mov push pop inc lcall or pop and sbb mov xor inc cmpsl data16 pusha ljmp ljmp lea mov push adc and lret mov mov sbb testb jo icebp pop cmpsl (bad) mov (bad) aas pop push test jecxz mov cmp or pop sbb push je xchg pop cmp cli mov sub inc mov and (bad) cmc and pop add loopne leave pop fs lds outsb fldl and sti mov fdivrs mov sbb fisttpl jbe cmp rcr push fmull mov fsubs dec and add jne adc in sbb xchg shrb jbe dec add jmp outsb (bad) jno repnz aad push sbb mov xor push mov mov sbb mov into lcall mov jb push push push jns jmp addr16 xor add push inc out loope test inc jo push sbb dec (bad) fwait add xchg das adc fs or arpl or xchg and lret and or test icebp pop push or mov out test push (bad) adc movsb push dec pop dec hlt pop insl dec inc jl insb imul gs cmp out out sub pop sbb jbe sub xchg (bad) subb das inc andl mov dec ljmp pop mov xchg (bad) adc mov inc pop mov dec mov mov push push cltd aad mov inc int mov and mov jle xchg ret rcr push lcall fs push mov popa push xor lods loope pop orl lcall add mov mov pop add pop nop fs mov sub pop add mov (bad) lock jg sub ds ret hlt push andb lods out inc mov and call fsubp jnp mov sbb sbb xchg bnd sub or dec pusha inc adc leave daa xchg lods pop fs shlb pop jge ljmp fs sub jne cli pop scas mov ret sahf loop inc push xchg fs aaa adc test (bad) push push dec das insl mov mov aam or and daa or mov adc xor mov lahf int push shrl xor clc sbb ljmp pusha cwtl lahf dec fmuls jg movsb loop push push mov pop sub pop mov clc outsl in dec push mov push mov outsl (bad) test xor sub call cmp pop mov enter dec jmp sbb push insb lds repnz add mov (bad) cmp call call and inc pop loopne aam imull cmpsb jmp mov lcall pop and ficom xor add xor inc adc incl test and ficompl jbe pop push jns mov cmc sub (bad) popf ss repnz jbe cmove add inc hlt les sub pop loop mov add push add lods sahf js movsb loop rorb icebp scas adc cmp ja cli inc add mov jne roll (bad) sub loopne popa mov (bad) sti (bad) jg add sub fsubrl jmp mov dec sbb out jno mov adc mov enter popf inc add lds cmpsl es call jl xchg mov sub outsl and cmp imul xor das shrb cwtl js jg stos inc cmp adc aaa or outsl lods outsl mov repnz pop fucom outsl mov sahf fstpl push popa andl mov (bad) pop push or pop out mov clc addr16 mov test jnp jg xchg dec adc fcmovne es pusha lock std or iret adc sarb inc jg out xchg add push mov push (bad) incl add fwait xchg mov xlat arpl nop test (bad) adc add movsb pop lds maskmovq (bad) nopl jmp sub in jae or rol les jmp cmp add and push orl movsl xchg rorb push test xchg mov adcb sbb or cli outsl adc or (bad) (bad) repz ljmp stos fs add cmp imul and outsl subb jb test dec lahf mov mov or mov adc push das mov sarb daa cmp mov mov mov push sbb jb xor cld inc jo inc fnsave bound or mov (bad) call movsb test call or jno out popa insb orl sub inc int3 push ret cli sub arpl inc pop clc mov pop mov decl popf mov xchg jmp push ret aas fstl icebp pop xor rcr fldl pop dec inc push test cli clc lods shlb jle enter call inc outsl mov (bad) clc or dec sbbl cmp (bad) adc or cld and daa sar pcmpgtd sbbb fprem fbstp push mov addb and test pushf test movsb (bad) jbe (bad) in and in jo add pop or mov (bad) das pop mov jg and adc cld nop ds and loopne cmp xor in stos popa xor movsb mov jg mov mov mov sbb jo sub ss xchg push les add fbld sub jg aam nop lahf adc mov ds xchg testb fwait lret push (bad) in and and insb rcr enter mov outsb pop mov test mov lret sub inc inc mov sahf (bad) sbb outsl xor add test mov xchg outsb pop add pushf or mov movsb std sarb xchg es cli (bad) mov ret xor push and ror mov pop ja popf xchg cmp adcl mov cmp lcall (bad) jno lret addr16 add loope incl push (bad) xchg push int3 pop jnp pop cmp lahf xchg rcr (bad) mov mov aam jb lods adc jmp push mov fs cmpl je add and addl (bad) je push sahf and cmpl mov or mov in rol scas xchg repnz pop data16 (bad) mov push mov push cmp in in cmp arpl nop je rcll enter mov (bad) jg popa sbb add xor fdivl ljmp lea (bad) xor loop outsl cmpsb and fstps cli incl mov push nop jno and inc adc dec cli sub and dec call mov mov mov xor daa sub out push mov and or ljmp xchg ja iret ret jl or daa aaa insl mov aam and call sub dec mull imul pop ret xor gs ficoml cmp sub ret outsb sub push mov sahf test dec xchg pop icebp xchg imul imul loopne subl pusha std (bad) call add mov push jno mov fdivs mov sbb mov and dec mov sub lock or push lret clc cmpsb dec ljmp sub loop in mov mov (bad) ret sub mov mov add mov mov test push add (bad) push adc adc mov adc mov fnstenv xor push mov outsl and mov sti inc popf push mov jbe sbb stos xchg add mov xor clc das mov arpl (bad) lock sub push adc std adc in jp and aaa nop or and push imul pop sti mov stos adc xchg cmp xchg imul xor and pop ja (bad) and xchg std fisttp add clc call movsl sbb cmp mov push clc pop data16 push xchg cmp jo sbb jb ficompl icebp add lret es xor inc divb leave ret call test pop mov jmp push adc ss adc or mov add pop sbb or test lods cmp pop cmpsl ljmp jg or xor push inc addb push call sar ficoml int3 add dec mov es dec sbb adc jmp jl or mov loop jb push cli mov pop cmp xchg fs pop cwtl sbb adc in mov xor xor ja xorl aam clc into loope push or mov sub mov nop ljmp add shll shlb decl mov mov push mov xor cmp ret lods inc push cli loop add mov push pop cmp imul mov and ss rcr clc jl jmp inc mov push aad ret (bad) push decl decb add fidiv clc movsl loope pop and or das add imul pop push mov ss xor jg movzbl subb loope push push (bad) lods and lret dec inc mov pop dec push pusha imul sbb (bad) cmp gs (bad) rcl add pop das test mov jo or add adc mov or mov push xor inc dec push mov call pop mov xchg inc sub inc pop inc mov and xor cwtl push stos sbb mov jg jmp mov dec je into ljmp push cmp jbe test out mov mov mov mov out inc push xlat mov inc lods mov ror xchg stos sub movsb xchg jno adc in xchg and shlb and mov lods pop stos aaa mov xor test nop xchg dec pop and call icebp push bound mov ljmp sbb sbb add ret and pop pop dec xchg push push sbb jle push mov dec cld or (bad) mov xor jo in pop insl loope (bad) push push inc mov negb (bad) call in int push repz pop dec dec sti and pop js subl out clc incl (bad) push arpl popf push out in mov (bad) sub ret inc mov pop xor lcall jle and (bad) xor jbe dec xchg nop jg cwtl sahf cltd xor clc mov or cmp ret js sar mov int3 orb dec in (bad) jl mov add pop movsb jbe sbb inc mov aam and cmp jo and call add mov in inc pop movsl pop cltd inc stos mov pop loope jecxz or ljmp jnp add inc jno push outsl push icebp aaa inc mov jp outsl xor or cmpsb ror or mov or sbbl cwtl add push xor mov adc pushf add cld inc nop xlat popf cmpb dec cli add mov pshufw or mov ljmp in mov mov cmp ret adc (bad) aaa inc pop negb loope sbb add inc mov int cld adc pop fs mov popf push stc mov test pop movsl push outsb out (bad) (bad) scas (bad) (bad) mov ja cltd into psrld testl mov sarb (bad) jmp sbb rolb imul inc sub push clc cmp adc loopne fdivr fwait add fsubr (bad) adc and rol xor pop sbb fisubl dec inc xor popa mov flds rol mov xor lcall xchg cmc xchg inc in and jg mov xor pop xchg (bad) outsb add push mov shlb (bad) fisttp popa adc (bad) push sbb sub mov clc fcomps xor lods fadds sub fcmovu movsb aas push and jecxz pop (bad) (bad) dec lretw cmc bound lcall iret inc pop das xor cmp hlt fisttp insl insb add push xor jo dec inc jg add mov outsl (bad) mov js je inc push (bad) clc pop pop sbb outsl inc dec loopne into aad hlt decl cmp les in xchg mov cmpsb mov (bad) jmp fimull add dec cld push (bad) xor inc call in std fwait dec shll inc dec cmp jg lds fnstsw mov call gs jo rolb cmc pop and mov and sbb shrl scas or pop xlat adc jp data16 adc xor push push (bad) lcall inc jl mov lods mov jmp or or jo into push jmp int ret lods ljmp (bad) push adc call aaa adc pop xchg (bad) xor sub xchg test push aad add imul ret add adc jle jae aas in cmp ds mov pushl push push fldenv inc xor aad dec test push jnp push pop js inc (bad) call fsubrs sbb adc add mov sub cli mov mov gs test mov cmp add inc and push data16 mov jle dec fsubr enter scas push cli or cmc xor shlb cmc inc lret or out sbb pop icebp stos pushl iret or xchg out sbbl test (bad) mov lock aas aam pop (bad) mov test push or mov stos jg sar sub mov aam and lret fwait lock hlt dec or dec mov int and int3 sti int repnz ret jp jg push das dec cli push lods push popa sbb mov adc sub or mov add inc mov sub jne dec fsubp add sahf adc aaa add sub jns dec adc dec inc dec cld mov mov xchg rolb das or mov loopne cld pop mov mov xchg pop popf arpl sbb test scas (bad) jmp (bad) fwait inc mov call jne call add sbbb (bad) out push add out xchg or pop inc pop pop cld dec lcall sbb or in inc and pushf inc fisub mov bound popf xchg lods int3 or stos pusha jecxz mov fimull inc add std add push pop je inc pop gs sbb outsl mov mov mov cmp add ss jne test mov decl clc ja push popa xchg xor aaa or push outsl mov pop pop (bad) fbld inc (bad) or (bad) push sub push mov (bad) ja (bad) xchg cli mov push std or add jg rolb sbb and imul push cmp sbb jbe mov les mov jl push lods mov cwtl cmp (bad) lds fs loope mov cmpl in sbb sbb mov stos mov xor sbb adc mov adcb dec leave test cmp insl inc pop es (bad) mov (bad) repnz adc aam rolb and ljmp into scas ljmp ljmp jno inc mov add outsl mov dec popa jne,pn add arpl mov inc cld push xchg loope adc add adc jo movsb pushl rorb lcall insl fpatan sub scas bound inc sbb rcl popf cmp xor inc jl je ret mov lods mov bound xchg pop jle xchg push inc addl aaa fisub or or sbb xor je jno inc sar aad or aaa jg nop add dec pop test cwtl lock mov adc aam in ss mov mov or and add dec jmp dec es push mov into inc aad sbb mov repnz dec xor sub fsubr imul add test enter adc cmpsl jge insl adc dec xchg outsb test mov scas cli fisttp sahf mov test push pop sti cmp mov stos or ret fsubrs mov push in xor dec pop jmp arpl push outsl test mov (bad) xor mov sbb add cmp (bad) imul hlt dec inc cmpsb in sti repz add dec add fbld cmp jne loope dec rol and push test scas lock (bad) ljmp xchg lds sub xor fisubr lcall addr16 or mov cwtl ds sbb das mov in fwait or jl arpl mov call in jge or pusha inc dec mov fstpl mov or xchg iret pop pop flds fisubr mov and sbb sti insb fisttpll add iret orb pusha sbb or loop,pn mov xor sti movsb (bad) pop popa test push jmp iret sti nop adc orb add jecxz js jno cmpsl inc jge sbb subl add add jo cwtl pop mov faddl push movsl sbb sub or fnop lcall and inc loope loopne jnp std rorl and push jp cmp pop add js shlb mov cmp pop mov movsb mov aaa bts dec fs fadd add xchg pop gs jo idivl enter mov mov fiaddl mov ljmp mov cmp add mov mov cmp mov jae iret and popa loop push xchg and adc and push decl mov addl insl mov (bad) push jg aad lock loopne fisub jo test adc call and hlt mov rcl into (bad) push push mov repnz addb aaa and insb movsl mov mov sub int3 pop sub aam (bad) dec roll mov dec and daa cmpsb dec pop packsswb lret dec scas gs push lods rcrb imul dec mov push xchg popa mov dec inc sub fild aas pop xchg pop add xor mov (bad) fldenv sbb or pushl lods lret fnsave dec push test iret popa cmp push xor inc stc addl fist dec imul xor sbb decb cli test fdivl jmp scas ja sarb inc sbb loope aas mov out lods sbb mov push cmp push and test cli inc lods fisub mov push enter jg idivb cmpsl xchg mov (bad) mov or cmpl sbb leave pop xchg push imul out mov sarb push rolb insb push sbb (bad) pushl mov xor fmulp lcall sbb loope mov cmc ljmp mov mov js mov (bad) dec push xlat add adc clc int cmpsb arpl scas xorb jecxz mov leave idiv jmp adc inc adc cli (bad) sub inc mov js popa data16 (bad) sub data16 loop pop ss push dec push and sbb fisubr sbb jecxz xchg loopne or int3 cmp and dec cmpsb mov sub inc loop add or fmul popa mov sti mov jg nop push push cli lcall mov stos fwait mov cmpl aad aaa (bad) mov icebp add sti and call sub inc fnstsw mov sbb int or jge inc pusha in es jmp nop dec adc add xchg fxch push sbb fstpl push sarb add inc idiv bound (bad) fisub (bad) mov and inc push dec divl clc movsb lods (bad) ret call and adc add mov cld inc (bad) bound mov mov mov fildl fucomi fistpll pop repz test mov jle fs clc stos out (bad) out aad std bnd dec push daa (bad) sar inc or mov ljmp jp je push fbstp adc mov add fisubr test dec mov mov push decb adc sbb or rclb mov fidivl fldt xor mov inc sbb cmc sbb adc xor les outsb ljmp mov mov std (bad) ljmp dec call sbb dec (bad) fiadd or jmp fcmovb cmp (bad) cwtl mov and sbb out push mov xchg outsl data16 fistp push push and dec ja and out jbe xchg pop jbe or push mov add sbb in jp sub daa or popf ret pop movsl icebp mov lock adc and adc inc orb es jb mov pushf scas cmp int imul es subl (bad) out adc mov jp (bad) mov int3 mov mov and add inc sub mov push mov dec cmp cmpsb ja sub or out cli imul sarl cmpsl mov mov cld out test and cs xchg pusha xor pop pushl sbb fsts (bad) jmp je paddb push xchg (bad) cmpsl cmp mov hlt sbb (bad) dec jge or mov repnz (bad) mov mov (bad) icebp das and and add inc daa dec aam cmpsb or cs ja dec ja cli push notb popa int inc (bad) xor ljmp xlat adc inc push adcl shrb lret addl cmp test sahf dec adc push sbb in cmpsb mov fnop pop mov ret loop aaa or (bad) scas adc and add sbb mov cmpsb or mov outsl and orl scas and dec stos sbbb sub (bad) int push mov xchg lock sub or movb pusha ret mov outsb insb cmc (bad) out fdivrl lcall rorb dec mov or push dec stos adc pop insb aas adc enter jge xorl sbb movsb sbb inc scas pop xor push dec jp ds aad push push push or push outsb lods mov push jg xor mov insb adc jbe xor fdivl inc mov cmpl ljmp push arpl pop in les sbb sub ret pop xchg insb ret sub or sub mov aam call pop push and pop je lcall xchg sbb stos aam cmp adc add sub mov fwait cmp add push ffree movsl cli inc xchg (bad) cmp clc and cwtl (bad) in mov add pushf dec jno nop stos add and popa mov ret (bad) fcomip fwait push out mov inc add inc jns out arpl push adc add mov add popa push cmp mov fiadd inc lret fninit cmp outsl xchg mov ja add add pop sbb adc stc or pop mov clc enter mov sub sub and cmpsb (bad) dec inc xchg decb xor xchg movsb jnp fstl and pop stos insl mov ss xor inc mov ret mov imul cwtl sbb sbb mov lahf add and (bad) cmp sub gs lcall das adc jg cmp add lcall mov inc dec nop xlat mov add add ljmp test jg cmp iret icebp adc inc aas adc ja mov clc fiaddl icebp (bad) ljmp or in imul jne insl mov inc push data16 push mov mov push (bad) or cli ljmp ss jg cmpsl jl mov push and cwtl dec sub dec leave (bad) cmp shr in push mov (bad) sub or add into mov call push xor add dec (bad) push in shrb pop dec movsb out lahf push mov call sbb or into jecxz stos dec inc popa ficompl sahf into ret movsb fstps leave lahf jle lods decl mov xlat dec loop dec pop (bad) sbb rolb push call mov in push cwtl jecxz sbb (bad) pop imul jnp xor sub jnp xor or sub jns idivb inc aam adc in call mov test mov fsubrl cmp mov ret mov stos int3 jae int (bad) pop or cmpsl cmp xor (bad) add mov test sbb outsl out test outsb mov call inc loop adc fdivrl jecxz nop icebp mov data16 btc popa std iret jbe xchg sbb or mov sarb mov push xchg push add int mov push jbe push push mov cld daa xor lret mov dec fs fidivrl fnsave (bad) cmc sub inc (bad) aaa sub mov xor je cmpb lahf inc mov sbb mov xor (bad) sub pushf (bad) (bad) frstor ljmp inc add (bad) mov and lods nop test push dec in mov imul mov ja test push xor cmc ljmp lret enter lods or das xchg sbbb ljmp jl,pn imul xlat cmp jb pop sub push bound mov push ret dec adc sub cli (bad) (bad) mov push dec sbb imul pushf test imul lret pop pop add pop mov mov push (bad) mov jae push mov add push insl cmc or pop popf sbb push (bad) fnsave add pushl test ror call push pop ror ljmp pop faddl imul pop sub pushf and mov imul or or nop xor lcall xor push add dec add pushl es xlat xor das mov (bad) jg aad adc int nop inc xchg or push xchg adc repz scas dec icebp mov cmc pop fcompl insb push lret mov (bad) pop pop movsb push jno pop sbb pop roll inc cs es sub les aad adc mov sti add (bad) inc adc inc inc loop sbb push cmp push jmp fcomps sarb mull stos push data16 push outsb xor mov or mov xchg pop test mov lahf mov cmpsb subl mov lock mov mov xchg xchg jg int inc (bad) push (bad) ja push xchg lock add sub pop fdivs cld inc jb stos pop imul mov mov fiaddl mov cmpsb push add subb call adc bound pop call cli or (bad) repnz jne xor ja iret add ja push notb fbld push fcoms push dec xchg adc cld push push push rcl fcmove xor test movsl mov pop xlat int3 (bad) addr16 sub push leave (bad) enter ss jae shrb mov jg mov jg loopne adc rcrl add lahf test adc add cmp dec jecxz mov jmp shrl and dec jge mov frstor mov fstpt clc add test xchg (bad) ja ret and out push jle adcb sbb mov test and mov rcrb je cmp mov lock jo out in mov sbb add lds dec inc jl push enter push ss jl stos jb hlt sub das xor mov testb lock xor dec je ljmp lock test xchg push cli cmpsb jp aaa xchg add cwtl inc cld add push js sub icebp (bad) (bad) fidiv sub mov test int3 cli cmp in jl xor data16 cltd mov cmpsb sbb aam dec push das add mov xor pop fnop push pusha sub or jno scas mov and lods inc cld add (bad) mov inc movsb inc dec or or repnz (bad) aaa rcr mov mov mov fistpl out mov jne loop or push sbb in cmp lods outsl adc fwait sub inc subb jb popf call jmp push rclb jno addr16 mov and lods test andl ret mov inc add or pusha inc jg mov (bad) repnz sbb es pop cmp xor or inc or lret es and xor in mov fmull push push and xor mov fwait push scas mov (bad) fild lods clc addl and pop cmc fcomip cltd jge ret mov pushf jge mov mov mov mov (bad) fldl cmpsl std inc mov push nop sbb mov ss mov add ret and cmpsl adc push mov test (bad) pop or shrb xor or addl push cwtl rolb sub int call loop pop sbb lods js (bad) xor loopne sbb and add ret adcl cltd je in cmpsb insb jle lock inc je cmpl adc loop cmp xchg xor jmp sbb imul or cmp lods (bad) fistpll inc pop fstpt or mov mov lea stos add rolb ret push and divb fidivl fidivrl mov sub xor mov rolb jmp lea and add rclb fcomps and fs call mov adc ljmp shr sbb xchg push push cmp rcl (bad) (bad) je fs lret jbe and (bad) dec mov ret sub in lcall adc lcall or push inc clc jmp (bad) je das push push fildll pop inc pop test (bad) ljmp mov add pop cmp popl test cli inc dec xor xor mov sub xchg pop outsl fisub in jnp (bad) mov (bad) mov mov cmp aam and mov cmpsl or cmp in mov (bad) mov adc and and imul lahf lock jae push xchg push enter xchg add mov aaa pusha ret call (bad) lcall call jno or xchg mov or scas mov adc je fstps push ja mov pop fadds mov (bad) ficoml rcll mov inc cs aaa mov jae xchg cs js mov jno mov or int3 xorl or inc mov mov ret sbb cmp mov cmp dec dec dec out pop mov or mov xor and lcallw pusha inc les aaa lcall mov arpl sub jle inc jne xchg hlt mov xchg push inc insb mov cli dec mov mov mov sub cmp or pushf cmp enter add loope jae add jge popf mov xor pop sahf or nop pop decl imul (bad) jae out scas push insb ds xchg pop loop jp pop sub or inc push xor outsl pop mov pop adc test push mov mov push lods and in fs dec mov dec aas or mov cs fbstp nop sub (bad) cmp sbb and add push int3 sub mov (bad) aad jle lea popa (bad) dec mov add scas jg cmc mulb insl xor push pop dec sub scas nop lods sub aad xchg outsb jmp mov mov xor jg fcompl lods jl cwtl pop inc lods fucomip add cld jmp insb adc xor test loopne dec iret decb cmpsb decb (bad) clc into hlt xchg jo push add adc dec das pusha xor mov inc sbb pop add jg and adc jle sahf loopne (bad) fisttp pop test and leave add jecxz jb sbb jl inc negl jl fisttp incl loopne mov test adc loope mov mov inc mov xchg (bad) mov sub (bad) jg cmp sub mov inc xor js ret mov sub les shrb mov pop inc imul rcl or bound or aas leave js inc cld inc arpl xchg in insb add mov scas jb pop fimul loopne dec lods (bad) icebp insl and ljmp xchg add add fwait dec nop dec js mov cmp mov sbb mov mov sbbl add mov scas cli aaa mov mov dec push insl iret cmp xchg push in xchg cmc fisttp pop int3 cmp insb ret incl jb arpl das insb cmp mov push int add pop pop and pop sub pop mov decl xchg fmul sbb inc jl sub addb (bad) mov loop jp outsb mov jle pop push stos js push aad inc cld cmp or decl mov in repz or push pop scas xchg sub gs inc sbb cmp lcall imul mov pop push adc insl clc mov and mov fwait pop add adc rcr frstor jle push ret push jge mov cli pop ret cmp xor adc lea sub mov or mov inc rcl daa lock out xor jbe and add pop (bad) push lea inc repz xlat xor (bad) ret (bad) push add (bad) dec inc push mov imul (bad) or ljmp xchg inc or inc add lcall insb daa mov and pop pop es stos jae test inc cmp frstor and or daa js and es add and pop xchg (bad) das xorb push clc mov mov in add fistp or clc insb loopne pop add insb mov (bad) (bad) (bad) lcall and xchg inc shl pinsrw mov lock iret mov mov adc add mov xchg lahf mov inc ja jmp sub jbe addr16 adcl lcall xchg enter stos bound or inc sub cs fmull push (bad) mov shrb hlt ljmp js push stc test dec orb mov push mov fistpll pushl add jns add insl jbe mov add mov inc pop mov les and cltd mov ficoml add push jecxz ds stos or xorb mov test outsb adc hlt xchg lock cmp push dec mov pop push push cltd out (bad) scas jno (bad) fldl cmpsb cs sub pop push and (bad) call (bad) mov sbb sahf sub mov and push and cmp mov repnz test dec out xor pop insl fcoml test add fadd add icebp fbld je or xchg mov jnp inc add mov addb lcall jb push rolb jg pop int3 pushf jo insb and add mov adc mov push stos in mov xchg pop cmp jle dec adcl mov ja aam push pushf mov hlt push repnz into inc push mov mov bound pop sbb out in pop (bad) decl in mov fldl fist (bad) inc dec mov les cwtl xor call loopne popf sbb sub stos dec (bad) jb orb sbbb add (bad) (bad) in clc or aam dec insb fimul sbb lret arpl adc sub xchg and sbb (bad) fwait (bad) pop mov loope xchg call jae pushf nop add dec mov ss xchg bound rorb mov adc add popa pop mov and aam (bad) (bad) pop pop xchg inc xchg mov mov xor add inc mov les mov (bad) pushl cmp sub (bad) mov es jbe adc mov xchg mov or xor push out out int3 cmp pop and (bad) push nop jne xor andps pushl enter fsubs or std nop mov xchg andb jle pop nop cmc fistpll pop fidiv hlt add pushl push cmp and popf rclb adc sub cld (bad) pushl lret lcall xchg add call ret pop xor sbb mov mov mov jle nop mov out add xchg inc inc jno or dec mov adc mov fwait push and push into pop mov ret fiaddl popa xchg cmp sbb insl les pushf mov mov das es sahf orl pop or adc lock or notl es adc outsb icebp mov out jne sub add fimul stos dec or les fbld test adc mov mov xor dec (bad) in and or cs and push loopne test gs mov xchg call inc int3 xor mov (bad) dec (bad) test (bad) mov ret out add movsb mov push mov incl jg cmc iret cmp test sar adc mov xchg popa add outsl push mov ljmp mov push outsb jle mov ficoml or jle cmp shlb daa std enter ja insl add stc mov sub call push jle pop push or mov push push mov test pop cld and notl xchg movsb (bad) jns sbb lods je sbb mov mov test addl xor push inc mov pop sarb out hlt jb sbb outsl (bad) mov int3 xchg lock xor (bad) jmp aas lret (bad) jae shr sti add or insb ss dec xchg add fwait test or jmp movsl insb andl sahf mov movsl push mov popf leave (bad) (bad) incl add lcall jg dec aaa lods imul dec inc pop (bad) jo pushf test cld (bad) out dec mov pop add cmpsb das push movb and adc add incb push fwait xchg adc in fs jnp mov push cli or sbb sub sbb sub (bad) pusha ret add cwtl add loope add in push clc les push int sbb das and jo cmp jl xchg popf aas stos xor pusha add sbb sub jecxz jne push xor nop and push xchg jge test scas xchg mov and add insl hlt out ljmp ja stos push frstor (bad) sub mov scas js ds inc mov fsts mov cmp mov xchg jbe add decl inc shr xchg add sub decl mov movsb loope jns sarb mov sbb jb lret push lcall push (bad) dec arpl mov out bound leave sbb lods (bad) aaa xchg (bad) adc testb hlt mov movsb mov mov fcmovu hlt out outsb dec (bad) mov inc xor loope lret cmp cld jmp inc fistpll les popf jnp ljmp or push sub or lret add jge adc sbb inc nop dec pop lods push mov cmp inc test inc adc std sbb push dec mov (bad) xchg cli push mov push in int3 dec mov idiv add sbb in or and in inc les dec xlat (bad) mov mov pop mov or out sbb jg push sub and (bad) mov sarb (bad) (bad) adc adc (bad) aaa std out mov mov fs ja ljmp cli mov push and sahf adc cmpsb lcall xchg scas mov daa and int in pop jl and xchg inc jne or add mov sub (bad) fldl2t (bad) xchg push sbb cmpb or mov dec sub out xchg int3 test call adc popf xor xchg xchg push xchg call lcall mov movb les push adc mov aam cmp icebp jge pop out in fwait add (bad) lock dec movsb adc xor cwtl or into iret adc jae in and mov mov cwtl dec or (bad) sub clc aaa pop or int loope add roll lock rorb daa insl (bad) decl pop stos inc loop and jp xor or mov sbb lea fwait add movsl cs lcall rclb dec lods iret (bad) xor xor sbb mov push xor push sub jg add jl std inc jne jae xchg clc cmp lcall push sbb or stos add adc xchg addr16 (bad) enter (bad) sub (bad) push xor fisttpll push sbb and jl nop sarb xor stos mov xchg jno enter fiaddl ljmp test lret push mov add out pushf cmpb sub push in or or rolb arpl or adc add push sahf push inc mov cld dec repnz inc add push insl es js stos push dec push ds daa sub or push add add ds clc sbb addr16 jp inc cld mov js fcoml movsb xchg gs or push mov xor cli and ja lret sub or sbb rcrl adc xor push icebp mov push aam clc (bad) add movsl icebp aas xchg outsl pusha dec or jg mov sbb cs or push lea fisubrl imul mov (bad) pop mov dec pop hlt and pop adc decl add je mov mov test jns daa leave fisubl jbe mov pushf push xchg pop clc aaa cltd (bad) lea sahf and inc sub mov or adc add pop sub call inc sbb xor pop jmp jmp les push cmpsl nop outsb fadd addr16 push add sbb push pushf shlb pop fsubs or les adc incl push mov dec jle xor xor lcall add add out sub jecxz add xchg movsl sub js push gs sub scas loop loop inc ljmp cmp xchg rolb call push sti sbb xchg push add jmp outsb cmpsb rcll cmpsl pusha scas fiadd pop outsl sub sub fiadd mov (bad) or cmc or and sbb xor fcmovnb imul xor adc xchg mov mov jg jl jp int or jae adc xlat or (bad) mov pop outsl aam mov fs dec mov into pop push push pop cli lock shrb or mov (bad) or (bad) cmc dec sbb and xor sub mov cmp out adc and pop push cli sub xor bound fsubrp dec negb outsb mov xor sub (bad) scas xchg pop and or or fsts sbb mov lcall dec loope add addl fdivp dec adc aam insb loopne negl cmp aas inc cmp div mov lods and lds adc arpl cmpsb mov jns test sti daa leave inc cld sbb xchg mov loopne mov pushf cmp into add std adc les rcll mov inc push pushf pushf call rclb ret xor push ja mov inc pop mov push loop (bad) jg enter mov sbb outsb repnz lcall or (bad) pop and test out sub inc loope adc mov push mov push push or jno jge sub add std outsl and ljmp cld rcrb mov pop adc push loope mov add push cmp sbbl fsubrl icebp jg sub adc cmp xlat (bad) mov sub jle add and std xlat inc push das jbe xor mov add mov push mov (bad) fnstcw mov je jl xchg mov jmp data16 test (bad) inc cltd cmp fsubr xorl fcomps and imulb sbb inc sarb or and cmpsb mov mov or sbb and inc sbb lods push icebp pushl shlb into mov jp jno addb dec cli enter pop inc adc dec test orb (bad) (bad) jae mov cli adc bound add out adc rcrl lock cmp sub hlt push in xchg xchg xor or ss add fwait mov mov rolb or sbb ret mov inc mov test int mov mov add pushl mov xor or mov icebp sub xchg stos lock add sub test hlt fdivr (bad) out xchg nop jecxz and adc insl cmp or sub lds jg fs mov jae sbb add sbb scas or movsl (bad) pop cmpsl insl jl ja jbe jae aaa fcomps test insb dec xchg sub mov lea sar sbb inc inc out arpl inc aad dec lds push test push cmc pop mov jg sub sub pop sbb rol ret addr16 inc mov ret lea xor loope scas mov aam ljmp pusha pop and clc pop xchg fistp xor in test dec mov sub xchg jmp repnz rcrb imul xor dec inc jg add push pmulhw pop pusha enter pop cwtl inc dec xchg jl addr16 jae mov inc loope fistp push leave rorb bound sarl cmp ljmp jmp test in adc repz cmp xchg mov mov inc xlat and out mov sub sbb addr16 inc loopne xor call mov mov xlat test jg dec rol loopne ljmp xchg (bad) pop andl ret jae jbe inc jmp mov inc (bad) jle push pop mov (bad) mov mov jp jbe mov pop and hlt xor mov jge movsb mov xor jp push sahf add in imul mov imul pop fimull pop add arpl dec (bad) jecxz test (bad) jmp int jp dec aad ret cmp inc int3 cmp pop loopne mov sub or (bad) lcall mov mov das push sbb cmp jns fsubrl in pop push lods sub cmpsb fstp and pushl jns test push adc insl std arpl pushf inc xchg jne fldl enter and call add cmp outsb sub rorb dec loop sti pop pop push ja rolb dec pop rolb xchg js mov and push mov lods lock sbb pop cmc mov mov xor popf subb fmuls inc dec fsts (bad) xor and dec pop sbb jns mov push mov leave or inc jge and ds lods decl popf mov lahf pop inc pop mov inc adc pop and lcall sbb sub in aas scas aam (bad) test mov lods rcrb push sub scas push mov dec mov clc add cmp xor frstor sub test adc inc jmp adc and jecxz out mov push add pushf cmp loop cmpsb loop or pop add mov cld clc les xchg fwait lods or add jmp ret or (bad) lcall jle insb mov and jns mov jo fbld int3 or ret push insl idivl xor movsl dec call bound fistpl or adc jle push pop roll popa aaa add add rorb rol je jo adc (bad) add mov out jae lret ljmp add jae inc fidivl adc dec insl std mov add sub lock fistp icebp jg cs xchg add pop loopne int jl lods int mov xchg add loop pop ficomp inc sahf jle mov xchg mov add inc pop fistp insl das test into int arpl or cmpsb sub mov and fcmovbe je cli in dec xchg cli xorl icebp jmp test cmp mov sbb jp sub (bad) mov xor add cmp push or adc fistpl inc mov mov jno test insl push xor mov decb mov push (bad) mov nop mov (bad) adc nop adc pop repnz je rcr push clc jg add pop andb ret mov mov xchg or pop and cmp ljmp (bad) ss fdivl subl pop add ret cmp xchg mov cmpsl insl xchg adc push roll xchg xchg sbb push nop popa sti and or jae inc xchg les cmp sti jns cmpsb sbb cmpsb cmp push cwtl mov push test es ja sahf jno pop push mov dec mov and shrl addb out test clc cmp insb popa les sbb in sar ljmp nop ds aad iret roll push pop subl mov cmpsl fisubr int3 divb pop add mov insb in jnp testl mov push ss test dec clc cmp popa jle clc mov pop test xchg fwait insl fimul add xchg xor adc add add dec (bad) jl push or dec out or mov jmp inc rolb addr16 dec (bad) push sar scas aaa cltd adc popa out leave fisub cmovbe lock xchg xchg or (bad) ljmp imul pop call call mov movsl inc (bad) sub lcall cmpb (bad) aaa dec ret fstpt pop push push loope push adc test or fsubrs loopne mov into push cmp ret cmp enter or add fldl xchg scas xchg lods stos repnz xchg lea or (bad) call imul adc adc adc pop repnz mov lods mov lahf rorb jne add xchg push hlt push sbb in ja cli adc scas stos sbb fs mov repnz subb xor dec mov jne mov lods inc push xchg decb sbbb mov mov mov fcoms clc stos mov sbb stos sbb jp fsts add fdivrs and loop cmp sub outsl lods cmp push push out into lods mov fdiv popf mov les clc ljmp jle aad push sahf in decb mov or cmp (bad) (bad) push inc in and or out xchg mov push stos mov bound sbb mov add adc cltd inc scas jns xor out add outsl jbe out jbe loop pop mov or push pop xchg push hlt outsl xor mov enter push or loop and cmp loop xchg test mov sub mov das dec shl jp lods push (bad) dec shrd clc (bad) aas dec rsqrtps div je inc push nop sbb leave pushw in aaa xor (bad) xchg andl mov mov lret mov pop dec adc jne aaa mov repz adc or push mov loopne add xchg pusha pop call push mov sbb sub xchg or mov xchg xchg jno push int3 mov clc stos ss hlt fiadd mov cmp lock jns fldl sub sarb mov cmp cmc scas push test push (bad) fs ljmp xchg jge popa arpl andl loopne sbb ljmp adc int xor mov adc movsb ja (bad) or cmpsl adc (bad) fnstsw nopl aas xchg jl jbe pop mov fcomp (bad) (bad) stos jnp les mov sub cld add adc mov out dec fdivr or push dec jb in and add inc xor fstl and jns add cmp mov ret outsb dec adc cld call dec xor lfs xchg and sbb or adc outsl adc repnz aaa pop or pop xchg and push pushl inc addr16 sub inc sbb jl pusha jnp jmp clc das dec (bad) push out push cmp arpl idivb xchg add push lcall cmpsl fisttp roll mov xor fwait mov mov std call mov or in mov daa pusha lret jle mov and dec and (bad) push clc mov imul xchg add ljmp push leave mov sub imul push dec add cmp clc daa stos fmul das fsubrl lcall shrb sub andl push or pop add aaa mov pop dec loop inc inc or out push push jg cmp mov subl sbb mov push (bad) popa movsb and repnz xchg or mov dec in out add jb jo add mov mov cmpsl mov in (bad) jno add push and push or jno dec lret outsb lds xchg (bad) (bad) mov dec cld inc shlb sub movsl inc pushf mov (bad) lret xor add or test push fidivr adc imul jmp mov push mov sbb movsb stos adc lahf dec insb dec mov pop mov jg add (bad) pop scas sbb pop fsubrl inc sub movsb xor mov je decl add xor cwtl push clc pop dec adc sub xchg stos xchg or and xchg nop jbe jmp inc into pop shlb dec shlb sti mov out cmp pop mov xchg mov icebp (bad) ljmp cmp (bad) mov or sbb push inc mov test loop (bad) in fs rcll or scas mov outsl stos pop jle pop insb adc push fstpl aad call mov (bad) dec mov and dec inc and pushf lret mov les fldenv sub mov pop dec sbb and mov push mov xor pop std jg es mov mov ret mov inc jo clc add div cld and icebp incl icebp lods loope mov bound jbe xchg cld (bad) scas push loopne xchg addr16 les xchg aad fadds stos jg and fsubrs pop outsl mov cmpl and popa aaa inc or aaa pop mov mov insb lcall mov or nop loopne in dec pushl xchg sbb or adc xchg jge,pt jg test les mov xor xchg inc and ja (bad) int sub jnp dec ret adc js scas jbe jecxz inc scas hlt xchg jae gs dec jp dec lret pusha pop je add loop test fcomi mov xor fadds inc insb xchg les insl pushf jl cmp loope jle jecxz je insb lods xchg adc jg movsl mov and rcl mov pop fimul xchg nop sbbl fimull push fisubrl adc ret stc mov mov int sub xor sbb pop push nop and nop push std ja outsl das inc subl sbb push push rcll mov xchg mov xor mov add orl (bad) mov jg loop dec outsl (bad) add call cmp add jbe adc push mov mov xchg add insb cmc (bad) inc xor push push mov mov fild fs sbb popf fs push ja adc mov fs inc inc enter fs ss xchg push xor (bad) xchg push add loop test enter incl popf popf mov sarl daa call cmpsl icebp (bad) inc dec add cli (bad) sbbb sahf (bad) decb cmpsl lcall dec mov or jp adc stos addr16 xchg adc test inc push cmc and mov js (bad) or stos out push (bad) int sub push push shlb ss insb (bad) mov les push andnps aaa cmp sbb int3 iret jmp orl push sub push mov and or ss nop dec adc mov lea pop inc add lcall pop sub call lock dec add xor fs xchg ret dec push sub fnstenv jp adc push jo movsl or cli jno or push mov inc ljmp jno icebp notl ret fildll adc dec (bad) mov or sub icebp or (bad) cli (bad) ljmp pop loopne insl ret inc rcl cmpl call fs pop xor cld ljmp cmp and sbb push add js outsb sbb es pop xchg sahf test xchg cmp jg and lea inc sbb (bad) xor xchg jae fisubr clc ficoml mov mov adc mov cmpsb push jns pop cwtl push test ljmp dec sbb jns into out and sub jmp inc scas aas xchg dec fprem adc (bad) adc sub adcl xchg or xor xor enter (bad) aad mov fs sub sahf mov adc (bad) rol mov push dec or mov mov sub pop loope ss and mov ja sar mov scas sbbb sub nop sbb jg sbb mov mov dec or fsubl decb aam inc jmp shrd xchg push fsubrp bound add jns les lock mov out mov dec inc mov adc push in mov (bad) fmulp jbe xor adc (bad) fbstp xor xchg add dec pop dec loope and cmp pop sahf (bad) enter icebp test cmpsb insb ss (bad) sbb adc dec mov pushl roll clc arpl dec sbb movsb ja jg mov adc lahf mulb out jno xor and dec pop lds (bad) or in or icebp or mov je add ja insb hlt and pop repnz or xor dec mov push aam dec dec je pop lods (bad) jno mov rcrb jle (bad) pushl iret dec push imul mull pop mov call les jnp frstor dec xchg inc jle test cli push adc in mov adc xchg in dec xor jmp lds ret push cwtl aas test mov insl cld mov cmp inc fist sub hlt adc push xchg and inc int3 and imul bound jg fdivs imul mov cmp daa jae mov movsb push ret loopne adc lcall lea mov cmp je sbb inc push dec adc sub mov push xlat and sub mov mov test xchg add jp xlat jge sbb inc push cmpsl cs mov mov inc mov dec daa subl xchg push (bad) pop push pop mov and aam pop jnp pop pop xchg lea inc out and outsl out inc sbb add sbb test loopne push sub nop cmc fucomip lahf mov stos movsb xchg adc out ljmp cwtl and aas xchg xor xlat xchg and mov pop insl and enter cmp fildll cmp rorb push jle jbe lods movsb lea and call jne push sub or dec push cld mov cmp dec ljmp sarl adc xor or pop push pushf je call (bad) xchg adc and cmpsl stos add pushf pop lea call adc mov (bad) jg mov mov mov inc push shlb or inc cli shr outsb js mov pop push xchg (bad) in add or es outsl jg inc int out jb nop adc sbb add jl pop mov jns aaa or push sub aaa nop (bad) aaa dec jmp inc ja jo bound fsubs xchg or push lods mov out movsb sbb (bad) xor sbb sub sub insb pop test push sbb xlat cmc mov add mov xchg ljmp mov cmp addr16 faddl inc and sub dec mov aad pusha pushf outsl pop sahf and mov and andl std call test sbb ss in xor enter mov mov or push in data16 push add and sbb bound jle fs inc jl and loop stos test cmpsl push popw mov mov mov loop aad mov or and mov aas push das and stos fs cmp incl sbb in inc mov imul pop push xchg lahf jl add inc roll dec cmp mov popf lret jnp out sbb adc rolb test fmull test mov add and mov xor imul pop data16 mov jg and jae cld imul xchg lods rorb mov and push fistp arpl jmp cwtl aaa std cmpsb add fistpll xchg jecxz js dec and dec mov in ds out pop fs aaa mov mov les cmpsl pushf mov sbb jg add xor clc push stos mov push adcl stos pop outsb fisubrl jge xchg adc dec inc cmp mov int jecxz jne dec mov mov pop movsb adc ficomp fs jne jp ret xchg add jmp jg cld adc cmpsl adc dec sbb or (bad) andl xchg sbb or xor sbb or enter bound call fsubs and push push insb (bad) outsb dec push mull cmpb addb call std cmp ljmp or mov dec push daa add call cli mov sub in shll sbb add inc enter fsubs dec loope popl dec mov xor add xchg mov icebp push icebp sbb out and leave sbb add jecxz (bad) enter pop mov xor loop xor js sbb pop and mov push inc add jl jns (bad) clc clc pop sub cmp fimul dec inc insb adc out (bad) hlt outsl cmp cmc sysenter adc aaa movsb std call xor pop int (bad) (bad) and imul dec int3 mov jp addr16 mov addr16 cmp jmp dec jle or cwtl inc (bad) mov cmp pop inc enter out jp (bad) faddl add ja rorb test ljmp arpl fcmovnbe test sbb or int3 xchg xor add cltd les insl mov cmp cmpb push cmp mov sahf and dec outsb adc rcrb jle sbb or xor adc rcr cmpsb cmpb xor add pop stos cld or lret ja and mov rorb xchg xor inc pusha (bad) das cli add jo sub jl (bad) jg movsl cmp xor lock adc cmpsb lea cmpsl add push jecxz in in pusha adc jg jmp inc mulb nop pop fmul loope fldl or xor jb inc enter cmp push popa add call xchg pop sbb jg xchg sbb aaa enter sub pushw mov iret and and pop mov or add jecxz mov das mov mov lods clc mov sbb cmp jmp push std add push sarl xor mov dec dec fsubrs insb cmp mov or aam pop add inc jge and mov xor les test pushf sub add dec mov mov cmp mov add cli es arpl arpl sub fdiv ljmp inc mov test imul and and mov insb fsubs mov hlt stos in cli mov pushf cmp mov pop push xchg fisub inc and call cld inc cmp insl cmp inc pop mov aaa add fdivl inc sub loope cmp ss pop lock pop or ljmp and and ret ja insl jmp pop jno (bad) movsl das and pushf dec dec int cli push push out adc add sahf push aaa xorb (bad) xchg icebp pop xor sub divb ret pop mov mov mov outsl (bad) fild push sbb mov dec add mov dec (bad) outsb add out xchg rolb loop pop xchg inc inc adc jnp popa shrl faddl stos enter stc in jne add lock jmp sub sar inc rorb test std es sarl (bad) (bad) shll fbld loop adc xorl std outsl push pusha sbb nop pop and je insl test add movb push push movsb jg mov je rsm mov push test hlt push scas mov rolb push call stc mov fcoml jmp xchg (bad) ror cmpsb adc leave mov and lods es sbb mov adc or insb push lods enter pop sahf and cltd lcall xchg cs push sbb (bad) (bad) cld insb andl push jno adc push movsl stos popf (bad) cli lcall and jo xchg orl push ss mov loopne inc loope enter (bad) pop mulb dec (bad) insl pop pop insl cltd mov jbe mov and rorl cmpsl icebp test pop cs push cld jbe fs sbb bound jns lcall pop (bad) into gs cmp mov sbb add mov add loop test loopne mov cltd jl faddl pop jg out hlt arpl adc (bad) stos sub lcall xchg mov rorb inc cld push test lret push int call vxorps dec (bad) (bad) (bad) fucomp xchg push das cwtl cmp pop pusha bnd pop aaa into push mov popa subl (bad) xor cmp (bad) test xor cs adc add mov es dec imul popl ss ret inc imul stos or push rorb jae inc push xchg and push sbb fimull insl jecxz jbe (bad) aaa add (bad) cmp pop test add (bad) insb (bad) pusha les push ljmp inc add addl in roll or pop in cs xor or add nop test mov rcrb ret sbb ret incl push push imul inc inc cmp dec icebp ljmp jb and lds mov mov gs scas fiaddl xchg decb mov add dec sbb nop push dec push enter jne insb sub push lods push imul fbstp rolb jbe mov cmp pop or add mov push es pop mov xor push sub mov out xor fstp nop dec movl dec movsb xchg stos (bad) push inc outsl mov or push popa stos inc loopne out sbb sbb movsl fxch pop call mov xor add enter or inc cld sub cmp stos or inc adc sub cli push (bad) jo or inc add andl inc leave hlt incl shrl cmp inc por loope inc popa (bad) and or jecxz xchg or mov adc (bad) lcall fbld sbbb mov into dec adc add adc mov adc add xor add clc lcall xchg in pop fstpt add add mov push sahf sbb hlt (bad) (bad) jmp pop mov (bad) sti sbb adc popf push outsb (bad) mov gs cli icebp clc gs push jb inc xchg push or aas xor sub fldl and nop sub fimul test xchg mov push push lods movsb addb into pop add adc lock test mov cld add gs sti push pushf fwait xchg orb ljmp call ljmp lret fcoml mov add push xchg jl mov xchg xor negl insb inc or (bad) aaa sbb loopne dec faddl aam sub add push jmp xlat aas mov or out mov (bad) das add lcall jbe out or (bad) pushl loopne adc sub insb sbb mov push pop jb es lahf jp sti lea (bad) aaa sub sbb push inc shrb std mov jl mov cmp and bound push cld jne xchg pop and push das call icebp lock stos in mov cmp push push sub jecxz les jno adc or icebp lds add cwtl subl std cmpsb push mov fcmovne sub mov jb lods ret (bad) divl jl add jo add push subl push push fs mov xor iret xchg mov mov icebp (bad) call mov dec and in inc popf enter (bad) cmp cmp xchg stos arpl (bad) fdivrs sub or or or jg incl or push jmp loope sbb and adc push xchg in int3 andb add push je dec in das adc mov inc fidivl (bad) ret (bad) hlt xlat xchg xchg loopne rcll adc call sub ja xchg sbb xchg bound pop dec ss push dec cltd hlt dec les ljmp fidiv and jecxz xchg (bad) mov or (bad) sbb rorl inc mov fsubrs cmp iret and subl je ret pop jo aaa insb cs dec mov ret clc pop and mov (bad) xor ret andb cld inc cmp and sub inc mov ja inc and (bad) outsl mov movsbl push add fs jecxz jg jp,pt lret fwait xor lock jns shrl pop inc dec pop (bad) in rcl inc out int3 cmp push pop add mov push (bad) pushl fxch jne or shrb push lahf adc ds sub clc ljmp rorb jp add repz push addl jle ret rorb push ret xor inc mov (bad) mov fucomp les shr pop lods cmp mov pop add xchg adc (bad) xlat hlt sbb ret adc dec add (bad) aas mov push fildl inc cli push testl int pop ljmp (bad) jmp fsubrp jo inc ss and add dec popf ret test mov push aas inc ret push lret (bad) cli lahf aam cmc add jno xor jnp loopne jmp sti xchg sbb pop push icebp mov arpl aas fst decl cli leave add or inc imul jecxz out enter test xor test lods push fwait add imul je mov or adc sahf (bad) pop popa cld push mov gs xor push xchg lock andb mov mov fstl and (bad) decl jle fstl out (bad) cmp out (bad) mov rcr and xor push push mov mov add ss (bad) call fimull push sub sub pop add jl mov (bad) mov add ret (bad) sarb ret clc lcall shrl xor dec jmp adc mov in cmp jle test rcrl xor fbstp sahf push ljmp cmp mov les adc fidivr es inc mov add (bad) scas js pop mov mov addl mov fldt add je (bad) or push fs (bad) or lcall mov in inc (bad) icebp (bad) fisttpll jmp add adc jno pop cli push scas sahf mov jo xor in arpl and cmp adc fildl (bad) and dec into sub mov sub pushf sbbl (bad) rcl outsb in data16 movl fnstcw push adcl lea sti (bad) mov test dec xor adc add inc fcompl cli cmpsb loopne sub sarb mov or and daa fs mov pop adc out add icebp sbb fisubr inc pop and add sbb ficom (bad) jo inc icebp (bad) call or xor mov dec mov sub in movsb pop cmp cld das mov rorb mov (bad) push sbb test jl inc sub fdivl ss ss es and xchg data16 sbb pushf sbb adc add ret loopw and repz inc push outsb fsts sub fmul sbb mov add fcompl cmp push push lret and or mov stos int (bad) in or push cmpsl xchg addr16 or aas loope push hlt inc mov mov push lea movsb jbe xlat add cmp or (bad) jle mov jmp sahf pushf adcl add (bad) xchg int inc sbb out xor fiaddl mov mov lock adc or mov jbe push push outsb lea fsubrl das jbe pop adc and jne imul mov dec inc push cmp sbb lcall dec dec add ficoml cld decl pop js pop push aad mov cmp and call jo add cmp add dec adc es insl dec mov inc rorb pop sti dec sti mov xor int es add (bad) lds add ret mov test (bad) pop and inc fbstp fdivl popa xchg inc add add add std pop (bad) sub cmp (bad) pop popf mov jno adc in xchg dec imul sub adc pop clc xor mov jno clc add lock sbb adc xchg inc in xor mov mov dec and mov cli add addr16 adc repnz mov push inc je outsb mov push (bad) loopne es push call and pushf pusha out movsl notb out data16 adc cmp movsl add cmp outsb (bad) repz inc scas mov loop dec loop (bad) fcompl scas sti and add fdiv scas xor subl stos push push adc fisubrl popf jae cli cmp ret loope jo sub pop fistl sub jbe inc push rcrb sbb xor adc je push insb loopne adc mov xor aaa mov lret or pop sub sub nop mov pop (bad) pop and sbb test add ret add mov sbb push movl rcrb repnz add cmp std out pop enter inc lods subb xchg ljmp (bad) enter cmp add pop sub clc sub and push cli or add inc fs sti and and (bad) aam pushf lcall dec inc pop jmp mov loop inc imul mov xor dec mov mov xchg mov add scas sub adc mov jne inc test or (bad) push out roll sbb and (bad) inc loopne clc repz push (bad) jne repz icebp xchg cli add xor aam dec je fstl sbb mov sbb decb push cli (bad) jmp imul nop jae xchg int3 js loopne pop push lods cli data16 or sbb adc pusha enter das subb into pop dec fcomip jg adc ljmp into mov adc rcrb jmp sar sub inc fadds loopne scas (bad) insb or out pop pop fmull mov gs inc sbb jns lds mov inc pop scas addb (bad) xor add xchg loopne fidivr adc mov nop or or neg pop (bad) or jg mov adc jae and mov sbb fucomip clc scas and popf aam push mov push clc pop in cmp cld arpl ja clc aad jb js rcrl jne popa xchg fistpl lods daa mov push sbb push cmp (bad) cmpsl jns add sbb xchg pop je popf xchg pop add push dec xchg loop sbb data16 mov (bad) ljmp xor test das adc int nop jbe call ds jg push and inc dec fdivrs lock shll adc pop lock daa adc fildl pusha loop add lods shl sbb dec xchg inc enter mov loope testl xorb (bad) xchg loope jbe and (bad) jg inc and imul xchg cmc je jae fisubrl sbb adc mov test fdivr sub mov inc popf mov aaa insb lods scas mov xor sbb mov loop xor fnop pop cmp or fsubs sti pop mov movsb and xchg daa ret push dec int xchg jo cli rcr sbb pop cli imul dec mov clc push or sbb int3 or ficompl and jp (bad) xor sub or std jnp dec or mov sub mov xchg add decl xor es dec inc add test cli scas sbb lods pushf testb icebp fnstcw inc aam lods ret out sbb inc lret rolb mov mov inc inc mov icebp cmp push (bad) dec adc sbb and add push (bad) pusha inc rcrb in and data16 and icebp stos jl cmp xchg cwtl inc adc and pop imul enter lahf xchg (bad) jg add ljmp adc jo imul (bad) (bad) jg sahf add or in mov (bad) add adc in pop push out cli ljmp dec add repz and push movsb insl or pop imul orl adc push mov mov addr16 sbb js mov lods loop ds mov push mov dec jmp lcall pop scas add mov add rorb stc cmpsl enter fiaddl fdivs insb imul dec xchg insb add adc pop mov clc sbb insl cwtl out push orl fstpt pop std punpcklbw and mov fs and mov sar or add mov mov movsl mov ja aaa shlb pusha int3 inc or ja out mov aam lret ljmp push repz mov movsb jbe inc enter jns or out jae sub clc add adc mov or scas inc sub adcl sub orl test das (bad) mov (bad) es cmp or mov push adcb fstpl pop (bad) and out and outsb sub mov shr dec cld cmp pop and roll aam pop call sub cmpsb inc sub std dec repz loope mov subb into jbe push sub fs and and mov lods fdivrp jg dec push add (bad) lret arpl mov dec inc sbb and sub sub inc pop add out cs sub loope jnp add mov pop dec mov push lock test and incl inc mov outsb sbb xchg inc mov je push into test (bad) mov and movl sbb push cltd popa and jns adc je ret xchg ss or mov sub aam cs daa fist nop xor test test ret popf les (bad) ja or lcall insl dec or xchg pusha sbb xor sub mov test jecxz mov cld mov enter and test sub ret (bad) mov mov int mov shll jp cmp push clc dec add add ret lods adc inc adc rcl call or (bad) repz dec loopne mov add jl inc aaa in test ret fcoml roll add or rcr and out sub lock pushf jmp push xlat arpl and pop adc out xchg sbb push inc push inc call cld ljmp hlt (bad) xorl push mov insb or jmp outsl lods shl jmp pushf sbbb cmp mov xor ljmp rorb in (bad) cmc mov lcall add gs pop dec add leave pop adc cmp adc jg pushf add (bad) jo and or mov out and call clc add (bad) cmc sub fs test shll mov imul jle inc popa or cmp jno pusha and pop enter or ss loop cwtl push mov mov loopne fs ja xchg add (bad) aas adc mov cmpsb les rclb rcl fldt xchg mov add in (bad) ror pop pop loopne jb xor cmp sub cmp cmp in sbb out enter incl cli add adc jo cmpsb adc cmpsb (bad) adc xor (bad) mov cmpsb cmc jmp adc cmpsl outsl adc sub xorb inc ret frstor insb insl sub adc mov mov sbb idiv or adc mov (bad) lock ret std add add sbb add lret lods inc inc rcrl mov jp loopne jg push arpl loope outsl lock fwait les sar mov mov mov test cmc jmp ljmp inc mov add aas (bad) out inc cmp and add (bad) mov xor dec je xor stc mov jno adc add jmp (bad) pop test aam pop enter (bad) sub pop or inc mov cltd add mov sub (bad) mov sbb loopne sbb mov xor add out mov mov inc outsb dec ss rclb mov sbb jg lock outsl inc sbb adc jg call jo inc fs andl insb jge test cltd mov or sar cmpsl push addl cs lcall (bad) push add xor pusha nop in lcall dec ret push and push popa in add fs mov lahf push add stos dec ljmp mov dec lahf out lock sbb xchg adc aaa mov fs adc ret js js mov and lods adc lret mov inc test jb (bad) or mov rolb icebp add mov jo add inc sbb adc sbb sbbb cmc mov addl adc sub cmp push jns (bad) ja or (bad) repz leave sub gs scas stos sub or pop sbb imul shrl jo dec hlt out lock test test pop xchg pop (bad) (bad) incl loopne xor dec and imul jbe push call mov jmp out add pop push cs or sbb testl jne lods aad xor ds pop aas add pop add mov pop sahf lea sbb add jmp push aam fdivl cli test movsb mov ret pop or movsb add enter das push cmp dec test inc enter scas imul (bad) pop out das push jmp pop push test clc add sbb (bad) and fcomps inc lock scas push test (bad) pop dec mov inc mov sbb add jmp mov in and sbb xchg jmp vphaddubw aaa xchg (bad) jg mov and leave insb add mov mov pop fstpt sub mov jl mov shl fldlg2 push add js push mov cli ja (bad) push xor mov push xchg pop adc (bad) lret addr16 aaa mov iret testl fwait inc xor cmp sbb ficom loop or (bad) xor popf movsl push aad jecxz xor inc out es pop stos sbb jg fwait insb mov int push pop add loop dec aaa dec je inc (bad) jge,pt (bad) xchg xor and add mov xchg push jle pop inc xor pop pop mov fst mov jbe pop adc insb push movsl pop jbe scas or cs aas movsb or and pop fbld and dec inc aaa mov dec (bad) push repnz mov pop and outsl xchg ljmp dec insl mov call push lds mov adc mov inc adc or cmp outsl add push inc hlt sti pop add rorb loop fdivs jae outsl adc mov mov or jmp popa cld sbb jo inc lcall pop loop insb sbb mov cmp sub lcall push push fs out pop mov push adc inc pop stos rcrl sub adc incl fbstp lcall xor sbb pop push int mov outsb ljmp pop mov sti scas mov icebp add sub sub mov ljmp testb mov mov pop cmpl repz cmpl or je test push es mov fs ss rclb mov mov (bad) or mov mov xor push in fs or sub add jbe arpl or lds (bad) mov dec cld and imul cmp mov int3 jnp cli mov inc cmpsb cmp or jnp xor (bad) fistpl xor xchg adc or pop jg dec in cwtl adc push stos icebp sbb sbb lods xor (bad) adc and or fcompl adc mov (bad) (bad) dec (bad) incl movsb jo adc adc sti (bad) in sbbl inc xchg lock push scas enter mov leave (bad) js inc mov push push push add call popf xor dec cmp (bad) jbe popf loop add mov test lods mov mov xorl in pusha add pop stos pop mov pop dec push mov push jle cwtl fistl into or add xor dec push inc pop mov enter push adc pop xchg add andl insl shrb mov pusha iret adc xchg int dec pop nop jbe jne or push add sub iret (bad) sbbb or (bad) xlat jno iret jle pop lock push xchg rclb rcl add xchg dec xor cld add push in jo cld outsl sub pop dec popf push inc (bad) out xor jbe xor mov orb mov or daa dec loopne outsb inc xor push mov sbb or adc mov mov popa bound fsubr jb add mov dec rolb adc cmp push std jmp push inc push cmp push stos insb inc push (bad) xor jg popa inc push inc movb sub jo or mov mov movsb xchg mulb sbb data16 or rorl sbb xor lcall imul mov mov lcall pop add roll js xlat shll push mov (bad) hlt sbb mov cmp cmpsl or mov add add inc or fdivl sbb and jne mov sbb inc pop es cmpsb ret rcrb mov movsb outsb decl mov insl daa push adc inc push pop pop clc (bad) cmp adc jl dec xor inc push rcl daa mov or js inc pushl jo gs out sbb cmp hlt mov jmp ljmp clc mov push mov jne,pn je add imul fwait xor sub sbb dec cwtl inc (bad) sbb aaa std incl mov call push pusha mov popf xchg hlt insl sub nop or and pop cmp (bad) mov (bad) aaa inc (bad) ljmp fstpt sub inc sub daa xchg inc mov adc push enter jo xchg pop cmp rcrb or mov mov adc dec inc adc jge movsl sub pusha fsubr mov mov sbb lahf ret cld test sbb popa add and loope cmp add mov mov dec ljmp mov fiadd sbb insl ljmp jbe dec sbb loopne mov dec or imul idiv (bad) mov sub pop and mov cld leave rclb dec add leave aad adc pop or ds incl xchg xor das sbb inc rclb addb jl push add mov sub add cld decl mov push imull jg adc jbe push imul pop cmp dec leave dec jmp mov ljmp lcall jo popl (bad) add push jae aad fcomps cmp push cmp jbe cli fidivl xchg cld mov std sub (bad) addr16 rcl cld popa mov cmp xchg add in mov in sbbl loope dec in cs xchg dec inc push sbb lcall test cmpl pusha cld lea jmp fildll push mov jbe sbb add je pop icebp and push push cmpsb pop sub jmp mov pop mov (bad) mov adc or add mov dec push or mov fadds push popa test (bad) nop orb cmpb out adc and adc gs ret adc adc and mov sub pop push jg jnp pop cmp add pop mov jl cs ljmp jle or mov push outsb lods jecxz inc shrl cli (bad) out lahf pop mov hlt test popa cli mov lcall add jae and movsb in imul push rorl decb or mov add inc mov mov rcrb and sbb loop jg adc fidivl inc mov sbb loop xchg mov mov push and push and jmp mov lock fwait inc jecxz enter or sbbl adc cmp adc lock divb or or pushl cld push adc loop sbb and andw loope repz (bad) jne add cmp push cld mov pop mov repz nop out adc add push or xor ljmp xor dec (bad) rorb fwait add (bad) sub (bad) ds (bad) push mov (bad) ljmp inc clc cmp mov sahf fsts or pop ljmp insb jl or fdivl sbb test (bad) int3 into cmpsb out addr16 pop inc icebp sbb test shl xchg and aaa fistl adc or fldl push call cmp jnp or add js fstps jo fildll data16 inc mov jmp or repz incl arpl faddl ret mov lret enter lds test cld out push sub sub sub iret mov arpl rcr repnz cmp sub (bad) (bad) in xor push (bad) pop dec sub or and or adc xchg sbb jg aam cmp fcomps (bad) xchg jle adcl ljmp and or sbb pop pop fisubl divl sbb or inc std (bad) jg dec (bad) cmpsb dec scas add cmp push fsubr jo jnp clc pop jbe xchg rclb xchg mov xor jle and or cwtl fwait (bad) lock (bad) (bad) movb or ljmp scas mov mov mov insb jb push pop add (bad) or dec mov sbb xchg pop sar bound into xchg mov lret push sbb push mov fist lock cmp push cld push popa mov sbb push cmc test (bad) jle jo nop push imul rolb add xor pop ljmp xor lcall out cld outsb xchg and ja scas pop push shrb int3 ds sub cli mov nop and fildl sbb ret into push jg movsl mov popl jo in xchg addr16 pop test dec cmp outsl dec out push pushf push out xchg dec push hlt or xor test test aas xchg into xor ja mov jg (bad) (bad) mov pop (bad) jp cmp aam gs dec mov or add pop mov (bad) sti (bad) pop ret data16 outsb dec xor call mov add cmp cld ja push outsb sub (bad) push lods inc and adc or inc aam inc sbb xor lahf xor cmpsb cmp sub insl adc pop dec sbb aas jmp jo mov and aam daa cmpsl imul sbb or cmp pop xchg mov enter inc pop jecxz or into test adc mov mov fisttp arpl enter adc (bad) mov push pop cmp movsl pop cmp xor push xor sub es or mov mov xchg cld and sar lea hlt sbb iret push lcall arpl fistpl popa pop movsb push adc inc xchg inc loopne add les inc loope jae cmp mov stos cltd mov incb (bad) mov (bad) (bad) mov loope ljmp loop mov (bad) adc cli fwait push in fcmovnu adc push xor inc and dec scas loop and cmp cmpsl xchg (bad) fwait sub shrl push jecxz add push jmp adc adc lds sub test push sbb jle dec out mov ljmp sbb sar push add in push stos icebp pop insl nop and fmull mov sub mov into adc jae xchg xor mov mov jo pop leave add lcall mov xor or adc xchg jbe or adc inc int jmp (bad) adcl mov dec in push loopne and std in call inc (bad) ja int jecxz ret pop jae lods fstps jle add orl loopne or aaa sahf or cmp adc xchg cwtl adcb pop inc aaa sub add es mov xor or cmp out mov call mov nop xor pop inc sbb pop aam insl cmc cmp lock ffree fisubl mov scas fisubr fdivrs testb jecxz pushl inc scas fs jg out popa mov jne pop pop fs fstpl fwait popa test inc add and jmp arpl mov mov add mov ljmp add rcll add adc or pop aaa mov mov lcall test divb sti mov push xchg add (bad) dec jnp add leave into mov cmc decl mov fnstsw push mov fucom dec leave push dec add ja ljmp decl stos push mov jg pusha call fistpll imulb test hlt dec jg sub lahf or ljmp jae test les inc insb pusha lea dec (bad) outsl jl lcall xor sub ja daa xchg into sub lret mov bound dec test xor out mov enter ss std or imul popf xchg pop xor inc pusha pop inc adc loopne sti mov xchg add push stos mov rcll fwait sbb xchg test (bad) loop (bad) add push mov stos dec stos cs fist adc addr16 inc mov aam movsb adc dec je pop mov cld stos inc push (bad) jmp and lcall pop lods mov punpcklwd fs arpl jg or mov add ja push xchg and insl push (bad) lret cli push push push stos mov adc cmc xor fdivrl jmp (bad) fstpt data16 mov (bad) push xchg nop (bad) mov lods cmpsb sbb andl pop jbe (bad) add push inc dec pop xchg cmp add out pop js (bad) test or xchg sub rolb adc fist push xchg mov mov cmp (bad) sub call mov mov xchg nop adc lret jmp xchg clc push mov jno cmp fidivr stos mov std mov mov ret call or test or (bad) (bad) jb incl jmp jb cs sbb cli cs cli je ror out xor inc xchg (bad) ja push das insb aam mov mov xchg (bad) repnz test data16 and or scas test (bad) fistp push push push faddp sbb ljmp cmp cmp jbe or push mov in fidivl and jg mov mov adcb lock cli sub push mov and cmp fiaddl dec fcom mov mov sbb ret cmp inc (bad) int3 xchg mov test aam inc shrl xchg int3 adc mov inc dec stos lea aaa ret jns inc xchg loop push xchg mov cmp push dec out clc jg mov add enter sbb or pusha cld imul inc sbb push xchg mov add push dec repnz sub addr16 jge scas push and xor push (bad) clc (bad) loop out sarl call aad incb sbb and jbe je stos mov lods aam loope inc cli (bad) mov mov jns ficom imul dec pop cmc inc ret outsb sbb subl pop dec dec (bad) mov outsb movsb outsl or ljmp add (bad) adc scas xor inc pop or call lret inc (bad) ljmp out sbb add xchg lret fwait inc or adc in xchg mov xchg dec jo inc add loopne or mov mov fisubrl xchg add loop sub insl inc pop pop pop mov pop pop xor insl fistpl or push pusha or sbb cmpsl lds lret and mov sub aaa xchg dec or add pop mov ret fcmove cmpl roll stc inc push andps add jb add test pop push ljmp push pushf (bad) xor mov push stos add mov cmpsb (bad) (bad) lcall stos add lods loope mov imul add sahf add sub mov mov pop dec fcomip das add (bad) and lods mov cmp mov subl push cmp cmc jl lods or jle add jl push pop or ljmp ljmp pusha adc es clc jne cmc jno push ret dec pop jns js pop dec add or addb sub add xor inc out sahf sub int3 adcl subl sbb or aaa and ret jp adcl push jne cld call cmp cs jae hlt or inc lock xor mov cmp cmp (bad) jbe ficomp inc mov loopne daa push mov test mov mov or dec mov ss aam adc in push shr mov jle add insb imul lock stc sbb lcall mov int xchg lea (bad) push outsl xor (bad) (bad) and movsl lods pop in add sub fistp mov sub sub mov xchg fwait out inc add sbb push push adc or pop stc add cmp inc push sbb pop and adc jno push repnz and loop leave pop xchg cmp mov leave inc repnz nop cltd test repnz in lcall push inc push xchg and jns or movb cmp pop aaa sub pop sbb nop cmp xchg repnz nop js add adc test or cmpsb inc adc sub cmp or jo repz enter dec mov jo enter fsub sub inc adc jb out xchg adc dec add xchg aam repnz xchg sub call add mov sub and dec ja fs repnz leave cmp movups pop negl rcll and xchg or aam mov adc pop repnz cmpsl out dec adc push ret or cmove lahf xor pcmpgtb push enter pop pop jl enter xchg aad cmpsl push and addr16 mov cmp repnz stos inc ds in leave inc sti data16 fsubp jmp scas dec mov push ret das inc ds scas pushl and mov int3 push addr16 mov call stc or pop (bad) mov into or mov das dec jle lods movsb (bad) sbbl in xchg ret mov movsb adcb inc cmp jno subl sub pop test inc pop inc enter adc ss enter div fldenv dec pop adc cld (bad) hlt xchg inc enter cmp cmpb push repnz and test sbb andl enter xchg dec adc jbe enter aad rcrb lldt nop jl mov xchg mov pop in cli lea add adc (bad) xchg fwait xchg roll or dec aam push push test scas mov xchg into dec (bad) and sub sar or les mov adc mov fsubrl mov and mov push cmp testl dec push inc add cmpl push and and add jno push adc inc mov push cmpl ret xchg dec jo repnz enter push inc push inc repnz cmp add aam ret decb add inc xchg rorl cmpl pushf jnp leave push and (bad) cmpl mov cmp inc mov adc and xchg cmova sub outsb rorb mov inc push jp dec pop and push sbb cmpl gs mov pop sti repnz enter int3 add cmp adc inc add jp jge jno push cmpb or adc cmp das les inc push leave inc inc in loop repnz leave inc repz pop (bad) scas fwait adc pop add cmp shrb adc add adc andnps addl pop inc leave inc icebp int3 das ds nop sub xchg add jns lahf pop les repnz rolb jns push add adcl mov jge pushf stc or sub xor aaa int3 or add pushf outsl nop pop and mov adc xchg pop jns jbe jne cwtl fiaddl sub pop adc pop pop sarl mov pop stos stos jl repnz (bad) mov jo mov (bad) cmpsl repz cmpsl add fyl2xp1 and jns test sub sub and in dec push repnz add rorb pop push pushf mov cmp jae adc shl push adc repnz jns pop sbb and call mov pop scas leave adc pop sub push cltd cmp nop cmp in jg repnz (bad) xor inc ljmp in sahf call int3 jge mov add sub iret inc add in mov enter push adc repnz sub pop xor pop push adc dec inc or adc xchg sbb loopne add adcl inc lcall sahf test js xchg scas dec sahf mov adc dec mov (bad) push leave daa lods dec (bad) mov push mov aas jns xchg (bad) push mov enter jg cli inc xchg xchg jl repnz int3 dec push sbb and test cmp pop dec stos add int3 push jo xchg setne dec movsb mov push and and scas xchg jl repnz test push shr jp push add jnp mov repnz and push enter xchg imul inc enter fwait cli cmp and and setno (bad) mov mov and pushf dec repz or cmp jns cwtl jmp mov xchg jl inc sahf jo lea jl jb (bad) pop lahf in int3 add adc add aam pop sub fs or add pop jo das sub xor push in or addl call or shr lods sub andnps jbe hlt mov xchg cmpb jecxz cmpl jnp cmc jns in psubd scas nop das add adc nop mov or push jp dec test cld daa inc cmpsl (bad) jmp leave push inc repnz mov lods in leave adc test outsl stc addb pop test mov jns add lahf sub nop popa mov inc sahf orb jae and movsb add mov sarb pop lret mov leave push sub sub push mov decb inc rcr test stc and sbb mov push xchg push scas inc ds cmp and stos nop iret lods mov inc repnz or inc enter or aad sub in or hlt fildl add jne sbb jbe add adc ljmp in lods adc nop (bad) test dec ds outsb inc sar aaa dec enter xorps inc mov fsubrs jns nop xchg in mov stos xchg daa add mov dec mov cmp jecxz mov repnz xchg popl stc rorb push rorb in fisttpl mov daa and inc loope repz stc or push xchg movsl mov xorb repnz pusha mov mov (bad) icebp repz add sub mov cs mov stc test in in or sub xchg pop in in in pop ss xchg mov mov push ds xchg das outsb leave adc into orl negl roll notb pop cld in in std lods out mov fiadd xor adc cmc cmc cld xor add xchg pop faddl fs inc leave inc sub and adc gs xchg leave add mov lret xchg daa or push and inc cli cmc and dec enter mov xor inc repnz mov daa and inc leave mov jl dec std gs and push pop js stc stos in mov imul mov xchg xchg jns dec cli mov out add (bad) arpl jns in ljmp ljmp adcl test sahf jge repnz xchg inc repnz add cld adc push repnz push dec adc add and je pop in add call jg ja nop scas sbbb in or sbb (bad) push cmpsl add test fdivr dec xor jg imul mov lahf dec nop daa sub sbb or sarl xchg popa movsl sbb nop das mov stos in and bound mov cld or add mov fs xchg nop aam push mov in mov sub xchg movsb leave ja shll pushf gs sub fnstcw or jl jl ljmp dec push adc add repnz or repnz jle adc xchg scas pop jge push cmpl cmpl mov repnz in in and and pop adc lea add lock push repnz cwtl push cmpsb push mov enter mov lods ja jo add adc jnp addr16 push adcl add enter add and cmp faddl push repnz xchg mov and imul cmpb adc cmpl in push and (bad) popf repz cmc mov test or mov or (bad) mov in in sbb and add push xchg pop stos in xchg (bad) arpl out nop pop lcall add out inc xchg adc add inc test jmp push jno dec adc imul or adc adc add insb or (bad) inc (bad) cmpsb add adcl add add adc test xor mov add add xor pop add das push or loop addb cmpl jecxz xchg iret and add fldl pop jl or sub fistpll mov int3 pop or sub out push inc repnz subl push les xchg cmp repnz jp and leave push insl push inc test inc and fisub add adc or mov add test repnz dec aas scas inc inc repnz and leave xor in push mov mov in in mov sahf add fiaddl das stc mov test xlat xor or mov das stos xor sahf aas adc xchg cmp lea inc enter rolb jmp jl and sbbb inc xchg dec addl add test fnstcw (bad) mov push ja lcall xchg pop test jmp sahf mov or jp jmp xchg hlt xchg push sub stos fcomps rcl pop in sahf sub repnz sahf and mov push mov xchg invd in jo push jne mov sub stc into scas mov sahf and inc inc pop (bad) test test mov out or dec std pop (bad) in add aas mov sub and mov stos inc sbb or and (bad) push std push (bad) cmpsl inc push test jl call in or loope or mov in xchg fwait popl dec cmp sub mov addr16 sub insl pop sahf mov je xor and sub outsb inc push or or and in pop test repz mov jle cmpsl inc mov inc or repnz and sbb mov orl es cmp repnz ss adc push and inc call mov leave addl addr16 sbb and xlat clc imul cmp repnz popf pop (bad) out xor (bad) add movsb testl pop xor sahf inc pop adc or leave pop and sub push cmpb incl inc adc push loope jnp pop adc ret mov add addb add in sub adc mov test mov mov repnz push loopne cs int add inc pop (bad) cmpsb enter lret cmpsb popf sbb push ficom add mov cmp xor add pop inc jno leave fild adc xchg sbb nop scas int3 mov and sub pop xchg cmovb xchg dec and jns fcmovnu out sub (bad) in repnz movsb in nop (bad) mov inc add jns jne xor pop cmp fwait mov jns dec (bad) fimull and mov xor sbb add jns nop emms inc and sahf loope repnz orl dec enter xchg in nop popa push nop jl push push lds stc mov cmpsl push xchg push pop stos add add mov push fstpt dec repz mov jl add sub mov xchg xchg in push je in mov sub jns pop dec in and sbb push les xor or inc cmp xchg scas add push cmp sub rclb daa or jns xchg scas and stos stos jno add sub push jmp adc mov orl cli nop pop (bad) in mov ds and cwtl sub inc out addb push xor mov ret lods adc adc add pop and jnp inc adc dec add enter mov adc push inc jns lret repnz jbe sbb aas xchg cmp adc push jecxz pop jmp in jns,pt mov jl xchg xchg lods std mov push cmp pop nop std in adc jne cld jl test jmp sub push jnp and inc and add cmp movsb push xchg add adc outsl cli in jns lret test cmpsb sub or mov jns lods aaa je addb pop cmpl movsl and and lcall stos inc push stos out insl outsl loop nop scas test data16 daa add mov cmp loop or pop leave pop adc test lret jg pop enter daa ss mov leave inc push and js cmpsl add add pop mov cmpsl mov ds mov mov scas in dec cli cmc gs add push leave jbe cmpsb (bad) cltd repnz inc rclb jo scas stc in adc daa push inc sub push cmp or jnp out dec mov dec push dec mov and mov addr16 cmp add je or add xor sub shll dec xchg mov repnz pop mov add add push mov fidiv in dec mov insb stc mov jg push add and out jns in cltd mov xchg das add mov mov and pop inc adc repnz loope mov cwtl pop icebp jl leave push inc add and adcb cmp xchg inc mov sub scas dec mov data16 and mov lds or scas sbb dec mov push mov xchg sbb pop test fs xchg das or lods cmc cmp mov mov aam sahf add outsb adc sub adcl dec add push popl add and add ljmp (bad) fwait outsb in repnz repnz out dec xlat adc (bad) out adc add push sbb inc mov popa stc stos dec sahf daa inc dec xchg inc jb jns add loopne adcl dec mov repnz jl xchg leave out jb stc inc enter roll add add jae cmc call push and adc mov cmp jle (bad) loopne add and xchg xor addps lock adc adc or incl push or out adc xor add or or add add pop ds cltd rcll icebp std fwait and call jg add or out add cmp daa fstp inc add cmp xor and int3 sub daa imul add in mov adc xchg xchg xor push in xor add sbb jns add mov andb add add add push adc push add dec dec outsb pop add cmpb add xor daa xor add cltd xchg movsb adc adc hlt mov xchg push push xchg jnp jnp push fcoml call adc cmpsb insl jl inc xchg or std push adc aaa insb sub add nop xor xor xchg cmp and xorb xchg cltd jbe inc pop xchg adc arpl enter sahf and je mov (bad) sbb mov hlt cmpsl xchg (bad) mov addr16 fidivl pop jg (bad) in cmpsb mov and dec popf in repnz fiaddl (bad) jl jg and jb or out add loopne sbb gs dec lret ret add ja or pop mov adc mov cltd leave cmpsl pop or aad aam js mov das inc jge idivl (bad) iret push pop push mov pop sub addb jns test jns enter mov jae cmp xchg ds cmp mov arpl dec inc push inc jle fbld lea sar pop loopne mov dec dec inc dec dec push dec inc dec inc inc (bad) (bad) (bad) pushl push jbe jo jae push jae inc dec js je dec ja inc imul js pop inc insb inc idivb push sahf idiv cli repz xlat or cmc cli or div push outsb (bad) jle adc sbb cmc repnz div or inc repnz repz xlat or jle scas jl in lcall sarl leave jae pusha lods pop sbb inc mov (bad) cmp pop mov stos int3 add sub push mov sub push aaa testl and push push mov movl mov cmp and mov and push mov call mov mov xor sbb mov add jge call add jge push notb decl (bad) cmp adc push cmpsl std lahf imul mov lea pop fwait xlat mov int3 fistp (bad) push push call test mov push in push mov pop notl clc popf subl push fmuls repz dec loopne or xlat adc lea in sbb mov push ds ficom bound add or iret fwait loopne (bad) hlt jmp sbb dec fcoms sub lods cmp add jmp push nop mov cwtl push push push push sahf and push and daa sbb js in add mov imul cwtl jmp negl rol movsl sub adc or push sub dec in pop pop jle pop mov scas fcos loop ret adc push and push or jg out jnp add mov adc les ret and sbb pop fucomi add mov rclb inc in lock loopne hlt or or lret xor sarb add inc push push outsb lcall mov add int3 mov (bad) (bad) mov push dec hlt pop call lret (bad) mov cmp or test jbe es add cld rorb out rclb push sbb sub cmpl jge push push imul cmp int3 xorb movsl jbe xor push aam xchg (bad) neg mov out loope or push negl fistl fwait ret adc ret or cwtl xor es es andl mov sub inc adc aas flds (bad) cmc or cmpsl xchg rclb flds mov push (bad) jmp sbb push and xor cmpl or xlat sbbl inc mov ds push push xor push add call jnp call push pop fsubrl jne push pop mov mov push push pop dec in testb fdiv cld push push mov jp or cmp mov jl movsl push bound xchg add call aam adc xchg push cmp (bad) mov fsubp push add js dec int mov loopne mov or push adc or add enter pop outsl lcall mov in or xor xchg mov adcl (bad) roll fdivrl mov add sbb push mov call dec les push push call jo sub dec enter xchg lea fild aad push xchg cwtl adc sbb adc xchg add sbbl and push pop add mov push push idivb movsb or test jmp push adc loopne clc push adc adc ret push pop clc add dec mov cmp lahf mov mov loope repnz lret inc push xchg pop (bad) pop push push lret adc or add (bad) leave and (bad) dec add fs dec push clc rcll mov pop decl repz push adc out add sub xchg out mov add (bad) (bad) push aad xchg push inc mov test (bad) xor adc movsb insb notb mov push je fucom rcll xchg push mov and dec push add mov and loope icebp push or cwtl push push sbb push test mov les xor sbb push lahf loopne mov sbb imul repz cwtl movl xor adc out leave pop adc jne ret inc ret jb pop psraw xchg mov arpl add xorb mov pop jb push lock pop or mov push aad lock in dec cmp jmp mov pop int3 out sbb pop call push mov dec adc jmp push mov pop mov addl mov sub lret pop call testl test push mov xchg xchg test push and movsb mov adc fwait test popa in addl cltd inc mov cmp or dec test mov sbb out adc add adcl call out fsubrp xchg sbb mov pop adc aad adc (bad) mov (bad) xchg (bad) sub cmp pop pop sub jb in scas sbb repnz and xchg or push xchg je and arpl sbb fdiv bound push dec es adc leave test mov push enter (bad) fmuls sub rorb mov les scas add and sub inc ds int3 adc jns cmpsl loop push fcmovbe aam push fcomp mov cmp lcall or mov push xchg das adc add jo add mov das insb xor adc sti xchg decb pushf add push sbb movl in adc pusha mov inc cltd ret push push pusha sbb adc push insb (bad) inc and pop je mov movw jg or mov arpl mov mov mov push bound es cmp sbb loopne insb adc inc push mov (bad) add jo sub xlat sbb push dec adc dec mov aad add cmp mov mov sbb adc ficoml xor pop xor add adc pop and fcoml sub dec cwtl xor sbb adcb jmp xor bound pop adc lods lcall dec int3 les aam push ds leave cmpsb lods in push dec mov and xchg pop cmp inc push xor push ret test mov aaa inc cld xchg push aas sub pusha jne lods outsl xor mov sbb adc clc adc ss mov mov cmp and cmc lea pop or cmp mov mov mov mov or mov mov mov mov lods loop or mov test jae in mov adc push cmp mov in arpl loop hlt sbb movsb stos fnsave sub in aad lock cld dec xlat nop insl dec push sub inc cmp notb pop loop push jp lods and mov fsubrs iret cmpsb jl push or dec in in xlat push fcompl adc mov adc adc jg leave and cmpsb insl scas push sti in in pop faddl dec mov pushf mov xor popf pop cmp enter ret push lods add add movsb cmp (bad) push push xchg inc xchg and add sbb nop sbb sub pop leave call nop sbb push xchg daa xchg (bad) cmp mov dec push pop jno test push or repnz sbb push aad pop inc es orl dec inc and dec push inc and orl pop insl movsb add mov mov fiaddl stos pop pushf add aam js or xor adc or mov shrb adc ds (bad) loop add loope scas push bound sahf sbb cmp dec pushf add cmc adc test dec lods and sub (bad) ljmp dec inc adc repnz mov mov push jb addb adc cmp cmpsl push xchg pop and xlat sub mov test jl jb cmp sbb add adc and test push jb lods dec mov mov movsl fadds push mov stos fdivr stos push fisttp push movsb pop shr fist imul mov inc out and leave inc addr16 push push push dec add adc out cmp adc dec movsl fisttpl inc push insb push daa push xchg xchg push sub sub jge add mov xchg into scas cmpsl dec pop aas add xchg lret mov outsb mov jne das insl push jno jmp xchg sbb add test add nop add or xchg dec push mov insl mov add sbb into lods test xchg les push lods and push (bad) pushf stos je push dec enter adc jno loopne cmpsb cld sub and adc (bad) jmp dec stos adc cmp and push push lock das hlt enter mov and push mov adc sub outsl push xchg stos xor fist adc or push inc (bad) jmp aaa shrb mov lods or push dec sub insb js dec jp push in hlt movsb push pushf and jl pop pop je inc or add mov xorb sub andl clc call adc push dec iret xchg outsb dec mov iret adc js inc enter mov in lods xor enter nop xlat lahf cmpsb (bad) lock (bad) xchg call nop push adc ss xor pop or clc cld cwtl adc inc pushf xchg mov loopne push dec push call sbb inc in (bad) out add mov fdivrs adc sub xor sub jg xor xchg test data16 inc je scas lret jg and aas repnz lds cltd in add movsb inc xchg pushf pushf add pop xchg jnp daa pop and xchg scas inc leave mov lock mov mov and test out mov fnstsw inc adc or fild rcpps mov enter mov pcmpgtb or xchg out shrb add push mov xacquire adcl sahf cmpl enter pop adc xchg cli pop leave inc sbb enter and in enter les btr xchg repnz sbbl dec lea inc push (bad) mov cmp js pop sbbl cmp add jns mov nop xchg (bad) lcall (bad) jl fimul (bad) push mov pop mov xor popa inc arpl sbb and js inc les test iret mov xchg jmp push mov stos popf sbb push pop pusha packssdw mov xorl xchg rorl or pop push or jae cmp add rolb add push xchg xchg jnp cltd insl int3 pop adc sbbl orb and aad sbb jl outsl pop and je jno cwtl jno leave fwait push sbb add sub lahf sub clc sbb jae pop mov and daa inc clc je sbbb (bad) mov or mov ljmp cmp mov push xor orl sbb lahf (bad) lds inc push repnz iret fsubs push (bad) xchg clc mov adc jge stos clc ds xchg pop pushf pop push rolb in jne clc jecxz in daa inc mov in add xchg pop xchg pushf pushf add xor sbb mov leave pop xchg jae adc cmp lret add mov or mov ss lcall je aad cmp mov test out mov cmp and std jo arpl xchg lcall mov xchg fiadd lds adc clc and (bad) cmp mov (bad) xor sar cmp add mov fidivl jmp nop orb jp add adc inc pop add or sbb jno adc dec push fcomip xor or sahf sete neg mov pop data16 (bad) adc sarb je cmpsl test or gs inc mov out mov mov nop dec and jae inc and pop aas shrb popa cs mov add pusha rcl jne sar xor mov push xor in jns imul insl push xchg mov decl adc adc call mov nop jmp xchg push dec in xchg fwait adc adc mov fildl xchg sub insb mov sbb mov fmuls mov adc loopne pop loopne es dec push push lds xor mov loopne sub mov rorb sub in ja cwtl xchg cmp pop loop pminub inc or loop jmp xchg mov jl inc movsl jge push push cmpsb cwtl lea dec js push js nop nop jmp mov sti mov dec add cmp lea push inc sub js and jae or sub fcoms into add fcompl push inc inc test mov pushf or xchg inc xchg imul mov xchg arpl adc sub inc cld add cs pop mov or inc test lods insb cmpb fstp push push fldl push (bad) xadd repz push jns call and lock mov int3 fwait push outsl sbb push std sbb inc push push mov (bad) (bad) dec roll ds rcl pop fnstsw ret pop stos subb and lcall push in fcompl pop mov sbb ucomiss sbb push and lds lret push xchg jl mov or hlt or cmpsl repnz neg sbb push add push fdivl test je mov adc shrb scas cmp sbb mov inc jno movsb mov test les dec dec ret ljmp loopne adc jbe mov les jnp dec jb fildl cwtl data16 cmp add inc xchg movsb out add inc adc ficomp dec repnz push repz inc popf mov fcmovbe dec fcmovnbe sub andb daa push push arpl decb xchg rcr cmp iret push or push xchg lcall jle pop jb add sub es and dec and mov fwait add inc pop mov push jle pop enter mov mov cmp lcall sub pop movsl divb add xor rolb dec pop cmc call pop rolb enter dec (bad) mov xchg test adc jne cwtl je (bad) in xor xchg js adc nop sbb loopne loopne inc fmuls push jp fsub xchg or inc push lret adcl clc (bad) cmp sub mov pop roll decl test outsl mov pushf lods lea sub fidiv test xchg test test sbb xor je xchg mov mov not add xchg mov mov push push adc cmp add add sub loopne test add out test push mov dec cmpsb mov imul cld adc in fstpl sbb fcoml loopne or sbb mov scas cmpw push loop movsl clc mov xchg (bad) mov rorl add cmp (bad) mov lea inc nop pusha not lds (bad) xchg js adc (bad) dec xor push test stos push mov cmp into push push sub dec mov mov jmp cmp inc jb mov sub nop fimull push lock push pop mov push neg cmp mov push add fiadd mov mov das lcall shrl sbb inc cmpsb loop xor js add mov jp popf repnz push sbb mov xor scas lea mov outsl imulb mov mov mov adc add jns xor cs xlat inc popf adc or xchg dec cmp adc or mov push add lahf mov test mov or nop test adc aad mov jb nop into push addr16 add repz jns xor and and test cmp js cmp int mov iret adc aam mov and push xchg jo inc dec in push fs clc or push or jo out cmp add sub test jg or cmp mov dec stc xor cli pop mov pop sub jg call push push sub mov pop mov call int mov into sbb out lock xlat lods push cmc es addr16 or call mov test jne fdivs mov or (bad) movsb mov lock nop mov inc loopne jmp jne sbb sbb push enter push enter int addr16 sbb sti cmpb add sub pop ficoml cwtl ret adc jmp sbb jecxz (bad) daa je pop (bad) jae xchg cmp loop call adc xchg pop mov pop gs inc push xor jmp inc cmp jmp xchg fistpll mov aam dec xchg movsb data16 (bad) sub add jo or and repnz xor pop test inc adc pop or push inc push sarb iret lods mov xor mov or xor lock xor stos push xchg and sbb ljmp adc jg shlb push jb pop ret inc fnsave and je xor push xor add sti pop and aad fwait nop add pop jmp xor jo xor dec and push in xchg jmp enter pop and dec mov lock or sub test sti aam add add jl jo jae or and xor mov jae and out loopne and ret cmpsl repnz loop or loop fwait icebp pop pop pop call add mov jecxz dec inc dec or jne push and jae aas sbb pop nop xchg adc (bad) and aad mov (bad) rcr mov fsubrl adc out jp push push into pop (bad) add (bad) and adc xor enter and push faddl nop faddl push cld xor dec jmp flds mov aas xor xchg cmp adc xor jb adc enter movsb lret dec lcall xchg (bad) push (bad) aam xor pop int3 cld (bad) movsl aam and stos das fcompl mov aas inc enter fdivrl mov fsub in add push sbb lcall les fs into aam pop mov (bad) cmova jge or not push pop les aam enter leave int3 sarb and test mov (bad) jo mov cbtw iret je shrb ret fcomp in aad (bad) lock mov aas jo push test cmp lock add cs fimull sbb imul lret add mov sub push icebp ja push aam aas and pop add inc xor xchg mov pushf mov mov std (bad) sar and add mov mov xchg dec repz or inc xor jb pop and add (bad) cs lret movsl loopne (bad) mov pop fidivr (bad) dec in mov in cs (bad) (bad) std or lock lahf lret shrb cltd loop movl jbe popf mov cmp mov in adc jecxz cli cmp leave insl nop nop dec mov mov cmp and outsl inc pop dec mov lods in adc adc xor loopne and mov in dec pushw sub jno mov (bad) push cmp stc dec pusha mov fs sub orb pop gs mov mov push fucom (bad) cmp cs sti pop std cmp in sahf mov inc es call sub mov cmp idivb addr16 pop push test enter fcoms jnp cmp dec sarb inc and arpl push sub xchg fldt js js enter mov ja movl jl setns mov dec mov shrb pusha lods xchg or decl and loop xchg (bad) out pop (bad) jno lcall call adc push mov call lcall add stos jle fs call xchg sbb shlb lock push add mov stc imul pushf or fwait mov cmp inc sub test enter push dec sbb ljmp ljmp imul call add sti aas cmp lcall add sti sbb rclb sarb rorb (bad) mov nop fldl pop test xchg pusha daa daa daa daa push inc xor ds daa adc dec jb jb push loopne (bad) mov imul nop insl (bad) xchg xchg xchg xchg (bad) (bad) (bad) (bad) xchg xchg xchg xchg (bad) (bad) (bad) decb xchg std (bad) sarb push das dec fisttp lods je pushf mov dec dec add aad cld or inc sbb xor faddl mov mov mov dec popa out cwtl out out call aas xor jg call cld mov lods aad xchg add push fs push xchg insb rorb ljmp loopne std xor inc sub orb pop fildll std xor stos cmc xor (bad) mov mov mov add dec sahf (bad) in rolb xor cwtl cmpsl mov jo insb xor inc outsl shl push push pusha jl mov in outsl pop pop int3 (bad) jmp and inc loopne ljmp dec cmp xor add arpl add loopne in and fsubl and out inc clc sbb ret mov int or loopne mov add jg mov fcomp and push xor push leave xchg jl ret fadds mov sub or enter rclb enter sti sbb or (bad) mov push xchg pushf sti cltd sbb outsb dec mov les add xor xchg rolb xor add rcl jnp faddl xor nop nop jg adc test int3 int3 rorb pushf pop aam and enter aam xchg inc jb jecxz arpl sbb push push daa lock lock stos and xchg push mov push gs aas pop test movsb or das inc cmpsb mov mov sub sbb ljmp push adc test adc sub (bad) loopne add in jbe pop call in mov mov int or dec dec movsl push test test (bad) in fmul mov test mov push test cmp jb dec movsl sbb clc std in outsl sbb notl or sub and or push push js (bad) mov (bad) (bad) out sub cmp movsb in sarb jmp cmp and sub pop pop or mov mov in cwtl int3 pop lods in pop in cmp and pushf js out popf xchg inc cmpsb or cltd jno fidiv in mov fs faddl sub dec jo push hlt in enter cmp mov in imul cmp test push dec outsb jne repnz dec rorl cmpsl jbe lods jbe push mov adc fnstcw jmp jb fs adc shrb lock je sub pop xchg push push xor fildl and lea jnp in ss in (bad) xor pop insb inc xor fsubs rcrb sbb push es pop fstpt scas push sub push loop sub and inc mov pop jo leave cmp inc xor inc push sub and jo jne sub dec mov push xor pop es inc out jp fwait sub add or (bad) icebp imul add adc add lock and and sub pop push sbb adc dec sbb pop or or xor loope aas aad dec fsub in call xchg insb adc push push fldl xchg test int3 or pushf mov in xor subps in in sbb xchg dec dec dec mov mov test mov dec dec dec push dec dec dec sub or mov add clc fcoml popa mov pop adc sti cmp sti ret rolb push or cmp mov mov mov lcall sub add test sub mov jne sbb and test mov or sti adc loop rolb xchg decb jae call add test and addr16 add nop fstl pop jb imul arpl mov push mov pop lcall loopne cltd adc fbstp inc jo mov or aam and (bad) je aam add loopne shll sub xchg mov imulb cmpsb addb mov mov cmpsb sbb push mov mov adc enter rcll and adcl push push adc imul pusha sub push and adc push adc inc cbtw movsb sub sbb pop mov sbb lock pop pop out (bad) fdivrs sbb mov mov wbinvd jle and fbstp (bad) testb insl mov stos imul cmc or lock mov loope pop adc pop mov add andl jg jne (bad) add imul lock inc xchg imulb pop pop push mov loope dec dec or inc rolb mov push cltd repnz pop xchg xor sbb scas ficoml pop jle or or lock (bad) cmpsb loope push iret into jo mov jmp lds cs xchg sar or and sbb shlb leave shlb mov mov jecxz jg rclb mov dec outsb (bad) cmp nop push lahf es mov pop dec jno lahf int3 mov mov sbb mov es push int3 push subl dec movsl dec dec inc inc cmp aad inc jge test lcall add and sub and or cmc (bad) xlat sbb mov daa mov inc inc aaa inc xor mov mov inc pop pop (bad) lods jno xor sub sbb (bad) loopne push imul ljmp add xchg mov push repz ja gs out pop insl adc mov lods sub xor mov sti push dec into cmp push ja imul fs and and inc pusha ja enter lock or fstl enter mov fdiv cwtl mov and scas in sub mov cmp mov mov dec mov fs in mov enter xchg int3 pop icebp and jb loopne or inc pop rclb and fildl sub pop fs and jae fnstenv adc pop cld dec gs sub mov sub sub movsl imul sbb in sub add nop stos sbbl and or stos aaa data16 (bad) insb mov ret adc lds push mov sub push sbb push push (bad) mov xchg in in dec movsl lahf int3 add push mov test adc pop mov out or or aam dec test and test xchg mov and leave adc dec jae pop cmp xor inc pusha sub leave mov add or leave push mov dec ret push imul and add inc imul mov fildll mov push stc rorl xchg out enter push pop and xchg fbstp add aam dec mov in dec xor in mov pushl pop mov ret nop add es fimull jns arpl js (bad) std cmp arpl or (bad) dec nop mov jns (bad) dec mov mov sub rcrl push out inc push addb push mov test imul popf dec mov mov das push adc (bad) xor shrb dec push pushf xor or xor aas insl sub fwait pop cli sub jae push fs das and test mov and push adc sbb pop push mov inc mov jmp add or xchg jg je mov into push das push stos and addb (bad) fmull jo in adc and mov push lahf mov lahf cmp cmp cmp imul and pushw lods jg push sub jno and int3 sbb and loopne add mov inc cmpsb mov loop cmp rol aaa and enter mov dec fsubr imul adc inc sbb jb pop adc adc adc fs mov cmpsb add cs rorl push and pop sub and lock aaa or push ds push mov push sub add add and pop dec pop mov pop and mov and and or aaa lods or sub and jg inc cs sub sbb sub inc push sbb pop stos aad pop movsb and jg jb popa or and aaa jno adc push popf fild test cwtl fist bnd add fisttp ret xchg xchg add mov das ret jmp mov cwtl cwtl rolb push pushf jnp xchg cltd add sub push or nop jg sbb pop and cltd fdivrs and test loope mov std icebp les loopne add adc loopne je mov leave add fildll sbb pusha pop (bad) add mov xlat lods mov leave adc arpl lret push add ss divb or xchg js adc nop pop and and adc xor add cmpsb in pop push mov or or xchg or xor jmp mov xchg mov or sub inc mov xor movsl rcrb data16 jbe xchg xlat lods (bad) pop push push dec in ss adc js aas lock jb insb mov pop fs xchg adc in dec int3 jmp push xor inc xor out and sbb aad add sub pusha pop jae inc lea ret inc or add test rcr push xor fisttp or inc mov loopne test mov pusha or mov (bad) or xchg jg push clc add pop or push nop sbb clc adcl fs push imul pop rcr or lea sub push push push clc jecxz jae test js sbbl sub jo sub insb clc or lahf sub sbb into fdivl and xchg imul cmp mov cmp pusha pop and jo inc add adc mov je,pn jo (bad) sub push jp xchg pop andps mov inc hlt cmpsb sub lcall sbb movsl rcrb test or pop pop sub sar ja mov mov in stc or aam int3 mov (bad) sarb mov test jb pop mov xchg lret in mov mov inc pop push push repz insb loopne lret inc subb cli (bad) pop jge sbb sbb sbb cmpsb mov jmp lea adc je sub pop and jo sub scas nop xchg popa inc ror mov mov fsubl mov lods pop rcrl lds repnz dec aaa jns scas sbb sub or insb aaa je sarb aaa outsl dec insb and daa add add jb pusha push and dec push push daa add jb dec dec dec jb and inc inc and add cmp jns xor and pop sub xor add and xchg orl cmp nop xchg inc adc push xchg xchg add or inc xchg out adc jne add mov push inc es sbb aaa hlt lock sbb inc in inc inc fisubr xor outsb push in enter push fnop leave orb enter enter orb enter dec mov and inc inc dec push test movsb push fs mov inc inc dec jbe nop dec push fs mov inc test dec js or push jmp push shrl enter xor enter cmp inc dec enter dec push push pop push inc fcmove pop neg sub fs sub aad pop push mov and push andl lods jns cmp mov sbb sbb sbb (bad) enter sbb sbb fcomp loopne and dec fwait xchg xchg cmpsb mov push in lock adc repnz and add sub xor xor adc fldcw orb and jp inc pushf mov sub in inc add push mov movsb cmp aaa sub enter test xchg fxch xchg cwtl push pushf mov movsb test mov xchg xchg xchg mov mov xchg (bad) enter xchg xchg xchg aam fsub movsb stc xchg in push adc add lock hlt clc add add sub mov xchg out in push and and xor and and cmp inc dec and and dec push push pop and and pop pusha fs insb jo js lds sub or cmp adc adcb add add test shlb pushl fsubs dec adc (bad) cmp adc ja xchg add aas xor inc enter inc pop pusha mov mov test dec push and xor or add cs lods add or mov jge lds pushf add stc add (bad) add lods and lock jne add std dec push inc imul pop int3 es rolb pop sbb andb sub mov add popa sub adc sbb bound jns inc sahf dec or jbe dec push les mov test mov or outsb addr16 mov cmp sarb cwtl notb mov sbb sbb sbb mov sub (bad) out push nop inc sahf dec push fsubrl inc and inc sahf sbb enter sbb cli or jecxz and pop lock mov push sub fpatan mov lret test push xchg and aas dec and dec push and std cmp adc and and loope cmp jmp push ja sbb les add dec incl xchg out add inc imul cld sub or repz push dec mov and inc test xor mov xor insl dec lret adc cmpl jae mov xlat or mov dec mov lahf fucomp mov xorb and fstpl add icebp pop mov sbb scas inc (bad) dec sub in ds jb xor push arpl inc nop pop mov jmp push inc and enter loopne enter bound das pop pop add sbb sub dec and enter sbb jns inc xlat mov jo repnz sub out adc insb inc jae faddl adc fcoms cmpl pop push xchg or faddl repnz nop inc jge pop repnz scas and fs repnz enter sub insl movsl xchg sbb push arpl cmp jns int jo out fcoms pop imul inc jmp jo xchg enter insb inc pop bound enter mov xlat and js lcall test test mov add add scas sbb xchg xor icebp push lahf cmpw into sbbl rolb push cmp cmp in cmp mov mov add push adc (bad) shl scas cmp sbb adc jbe out and mov fbstp xchg sbb mov mov aam adc sub ror repz pop movsl push divl js cmpsb and add sbb adc inc xor js movzbw addl inc cmp push nop cmpsl pop aaa insl or inc dec (bad) jle nop popl mov je adc (bad) sahf push mov mov inc addl loope lock add mov repnz add mov test xchg mov cmp and xacquire test xchg nop lcall imul cld fidiv arpl inc es inc and fiadd dec and test push nop inc cmp or dec jl pop mov or add bndldx mov nop mov ds pop test mov cmp out addr16 aad dec cmp (bad) and hlt les dec mov nop sbb jb xchg subl push cli add movb push call popa into push cld xor jl aas and mov pop enter dec and test in in and lock arpl fnstsw iret sbb sbb mov aaa adc mov daa cmp sub ja pop sbb jo add or mov add jo dec sahf and dec or fiadd cmp sahf ljmp xchg sbb sbb mov jmp jb xor sar push and daa mov xchg push pop add in ja dec cmpsb xchg adc push xlat pusha add xor movsb dec push lock stos pop dec xchg mov add fdivp sahf inc and push aad dec mov sub daa cmc pop add mov les in cmp jne cltd les dec dec xchg pop pop add pop lds inc push lds sbb pop mov xchg adc adc (bad) and add xor push fcmovnu ss and dec adc add stc pushf inc push inc js aam or fmull dec and lds lea sbb xor and sbbl scas mov sbb (bad) mov or es xor mov notl jno add cmp cmpsb or cli add cmp add lahf sbb stc mov clc out add inc dec add xor or jnp xchg cmp std sbb nop out enter adc add sbb dec orb adc xchg sbb mov xor sbbl rorl inc dec hlt (bad) repz and xchg pop pop xchg cs adc orb cmp push jb pop jae or jmp inc and pop sbb sbb and cmpl lcall or jo loope push add inc or in jmp popa inc lcall push inc adc call rcll cmpsl (bad) mov xchg (bad) mov push mov xor and xor orl adc addr16 jb dec cmp sbb arpl and pop jb in les push cmp pushf dec mov jl in dec cs dec cmp sbb arpl lock std popf std mov fstps fildl int3 insb movsb loope rorl icebp inc pushf or mov lret sbb mov adc jmp xchg (bad) jle pop adc pushf loopne add inc pop fcoml dec jb jno arpl inc or adcl mov push (bad) js jbe xor jmp pop mov lret pop push leave mov mov xchg scas into pop push call pop and add lods mov push mov push fidivr mov pushf jmp mov shll cmp push lds xchg or fwait push push xchg push cltd sub es push xchg xchg inc cs push nop push lret and mov sbb lret in xchg dec dec push mov mov dec test test enter lds push inc cs add loopne xchg push aaa jo and js fs dec xchg sub nop sub dec jnp sbb push nop dec adc push aaa inc or adcl ss or dec mov clc add adc mov pop mov push adc cmp (bad) mov adc xor loop comiss in (bad) adc movsl mov cmp sti nop push or movl pand nop inc (bad) jge call push shlb (bad) lret push sub inc push or pop mov repz cmpsb pushf push pop mov xor dec cmp cmp dec adc stc xor faddl adc pop lcall or in (bad) (bad) (bad) les cwtl pushf les cmp sbb mov xchg adc pop loope pop cwtl push hlt mov les ret jo nop nop popf mov rclb and nop xor movsl loope mov out xchg aam sub or cmp mov xchg out mov sbb movsl dec sub outsb adc push or xor jo (bad) cmp iret add cmp sbb add inc test and dec xchg push and cmp test and jo or or movsb cli rolb je (bad) push push add xchg dec xor mov nop lret sbb sbb xchg sbb sbb mov adc call fstps jb xchg outsb jne inc or add adc adc or stos add jne or push movl scas lahf in mov add mov mov or cmp or cmp xor sahf add and add fistpl jge fiadd jecxz enter or daa fdivrs ret mov hlt push or xchg pop xchg mov mov inc or add lds sub cmpsl jle push repz xor sub cmp sarl mov or outsl jo aaa push push or push cmpsl cwtl test inc (bad) cmpsl sub scas in add jae cmp lods andb mov xlat shll inc mov popa loopne xorl clc loopne and or cld pop adc shrb dec pushf push mov cmp adc adc pop (bad) dec pushf sti adc test and nop and add cld std sub xchg sbb pop dec adc jne push sbb enter jl mov or sub mov hlt sub jp fcompl mov jecxz pop sub sbb loopne les adcl sbb mov sbb dec push shlb xchg lret (bad) rclb push or xchg cmovp imul mov sub arpl enter sarb aam rcr rcrl xor movsb dec dec mulb or fcomp cmp inc out out enter inc push cmp pop and mov arpl xor xchg and lds or xchg or lock or std lar and test and cmpb movsb add adc dec push loopne push dec out jle mov adc cmp test push test add andl inc cmpsb test and mov xchg pop fstpl std loope,pt imul lret enter push mov inc fist jno inc pop add push les hlt mov cmp cwtl in lea fist xchg push dec push fmuls (bad) nop sub aam aam leave leave enter nop nop pop das les sbb xor rcl push jb jb mov mov sbb sub push in xchg pushf or test int3 leave and enter xchg xchg xchg lret orb pop enter cmpb add dec leave leave enter js or in je js (bad) jb nop je (bad) dec and mov xorl cmpsl and inc xchg mov xchg push das imul pusha push add and xchg test nop mov pop aam scas mov movsb and push jo je in es or sub dec add es add push es add jecxz test cmp out stos jo sbb mov pop and mov push sbb xor (bad) mov dec test inc sub inc xchg mov mov or add mov leave gs adcl orl (bad) sub cmpb les inc sbb cmp pop adc cmp dec jbe cmp and push movsb push and mov xchg dec mov push or push xor xor pushf std pushf xchg or mov adcb cwtl mov xchg sbb pop test nop lds sbbl mov push mov or jne push pop push adc xchg push push xchg or dec getsec test sbbb test test push mov xor popl sub and or pop enter jl enter js sub pop inc jb mov pop and adc mov push cmc cmp inc push rol sbb popf icebp mov imul cmp cmp and aad or xor je xor or and pop add inc outsl (bad) xor inc pop dec mov dec imul xor dec mov call loopne outsl je adc inc xchg insb insb push push inc cmp and das cmp adc xchg push cltd andl sbb fldl sbb in pop push lret and add and addb aaa insl adc mov add fs sbb daa xor sarl fcom dec inc cli push push es cmp jno xor inc jb pop pop adc and clc or mov adc cmp xchg sub jb pop sbb jge dec in ss insl (bad) inc sub xchg out adc (bad) in (bad) daa sbb push cmp mov popf js jo,pn (bad) inc sub cmpsl fldl push sub out daa push fwait push orl add or adcl and stos jno fdivrs mov pop cmp dec push mov inc inc movsb bound dec push push push and inc push dec ret pop mov scas and push jae jnp mov jecxz cmp insb fdivs jno adc xor pop xchg cmc xor adc add icebp mov push lcall jl mov (bad) fstps mov and adc push or dec adc mov cmp and nop (bad) ss scas scas sbb out add decl jg,pn call mov xchg pop push fdivs out in or adc adc and adc shll dec mov xchg sbb out sbb cmp sbb or test pop sarb xchg push sbb push add inc or push cmp pop (bad) fsubr mov (bad) fsubrs loopne and xor pop xchg ret push imull pop mov insb mov (bad) cmp mov xlat mov jle sub adc inc jae pop les shlb hlt ss imul imul or add inc mov nop dec push and push mov jge daa inc pop pop mov jae test stos mov (bad) in loope pop cmp arpl mov mov dec mov adc xor (bad) ja sub xchg fs in das test mov dec pop sbb cmp leave sub xor sbb sbb mov int3 fs push call fisttpl cmpsb and scas add dec pop jp mov jmp (bad) mov push push push sub lods test or add cltd lods mov push rcll inc pop andl mov dec mov xor imul mov or std adc push int3 ds dec sbb idivl lcall jle push fcomps sbb fidivrl add jg xchg call lcall int3 enter xor ss daa addb mov pop push fld add or sub sub inc insb div jecxz loope jae aam insb dec add enter xchg xchg enter push push (bad) iret push sti fwait in add cmp je (bad) sbb mov or push push mov or pop pusha adc stc cmp xor divl mov lods (bad) push mov cmp pushf mov neg inc lods lods push jbe push push push jns pop sub leave shrl jo adc mov lds cltd push ljmp stos (bad) push nop pop mov rcrb lods (bad) jecxz mov lahf ss push rol mov orl jo gs pop lods out out fmull les cld push movsb push fstpl (bad) enter mov fwait mov scas imul dec mov test (bad) stos sub clc add pop loopne ficom pop mov addr16 inc popa pushf mov in icebp mov lods leave add and clc mov xor in lods ret xor jnp pop aas jbe addr16 push add and add loopne rcr inc ret sbb fldl gs repz lcall mov fsubl add or pop add add dec pop popa fisubrl jo push or mov repnz jne inc lcall (bad) xor add movsb xchg nop mov dec enter pop pextrw sub enter in stos sbb (bad) push test sub es popf or or xor lea loopne bound lds outsb imul xor jno push jp and aam int3 or xchg je popf jge (bad) icebp push pusha repz ret jns cmp sub fs jo stos cs dec stos xor mov xchg xlat or test ss push loope xchg lret xlat add divl rcr pop and push dec jecxz fst and jl sbb fnstenv stos call shll andb mov xor sbb push int3 inc lcall aam es or push rolb sbb es call adc (bad) call mov cmp outsb mov les dec leave clc sbb fistp decl inc pop test sub sbb sbb enter mov popa hlt jo in pop mov xor push fadds call xchg xchg mov push xchg dec mov addl adc adc jno nop scas sub add add push addr16 fcomps push int3 push adc cwtl inc dec jns mov cmp sbb mov inc jl mov aad jae ret nop lcall in cs or push inc pop adc jb mov sarl fsubl pushf stos xchg or in xchg test xor jle push mov test pop movsb lock pop and jle jo mov es sub and add or pop insb jl push subl divb fistl fcomps push push pop call (bad) int3 addr16 and push dec add xor mov fs cmpsl nop pusha inc push testb mov outsb bound or je mov les jecxz xchg dec lods cld les fdivrl lea stos loope sub cmp or sub mov xor rolb fdiv mov rcrb mov clc iret rcrb rolb mov mov jno add add inc mov (bad) xchg inc mov shlb xor andb adc dec test jle (bad) xor cmp xor repnz mov rclb add sub cmp sarb jmp clc pop xor mov pushf in mov mov mov and push clc jne push dec repnz dec mov add pop dec dec cwtl rol inc sbb je daa dec prefetch or sbb jmp insb push test roll mov mov dec add int3 or and jl mov pop push aas mov leave xor jo or or or mov mov sub dec or push inc or cltd push xor push sbb adc dec and inc dec out roll push pop aam fwait (bad) aad iret push mov push into push or sub cmpsl mov adc mov push cmp push sahf and mov adc sub cmp out inc nopl sub push test pusha cmp movsl mov test add aaa xchg dec xchg add xor or sti sub pop lock mov es push adc xlat add xor mov (bad) mov rcll xor popf or xchg mov pop mov aas and sub (bad) pop xor mov or inc inc test pushf adcb push or sub add test add test fs and fcomp and (bad) or pop add ret mov test rol push dec test inc xor push or stos inc faddl push pop aad jg cmp or call xor push imul adc mov dec add addr16 repz adc in test movsb or push shrb (bad) fsts adc dec or inc (bad) adc add or xlat sbb or adc xor inc add inc push push and xchg fstl push inc testb mov imul sbbl jo cwtl add mov je push fmulp inc add pop sahf imul popa cmp dec and push test push inc cmc insl call or xor mov or add sub jnp push ja or lds push leave mov iret ret data16 sbb clc fimull iret pop jns jns jns leave data16 add mov adc or int add cmp adc dec sbb mov inc push or addr16 cmpsb std or xlat push jl inc cltd ss lret mulb nop add fwait and int3 cmp mov and pop into divl movsl int mov push lds pushf out aad ds das lods orb mov test nop les cwtl dec and push clc add sbb ljmp inc inc int mov xor add mov in pop fisttp pusha push inc lret in mov mov (bad) outsb lea icebp dec lcall ret dec mov push xor in inc push hlt cmp int3 leave jb xchg pusha nop push lea movsb loopne jae inc cmp mov or test loopne test gs or subb sub push and adc pop or xchg mov jmpw or popf xchg leave arpl mov jo roll nop mov cld add adc push lret lods xor (bad) sbb add or xor data16 adc sbb sub faddl ret xchg lds push xchg pop (bad) loope pop lea and enter pop addr16 addl push inc aam fcomps add add outsl cmp inc jb cmp and loope inc add je leave and mov push mov sbb xor in imul sub mov sbb push mov cmp push jne test nop xchg xor sbb loopne fdivrl add dec test inc ror sub add dec add sub das insb ret push dec rorl cmp mov push dec mov loopne jg mov inc xchg xchg push xor sbb pop dec sub xchg fwait xlat fcom xor xchg int3 xchg adc xchg and adc lock add adc xchg mov rcll ljmp sbb adc add cmp sarb mov jg dec and sbb pop mov jle mov cs pop mov aaa push dec (bad) ds lret and rol (bad) mov leave inc enter mov xchg (bad) add pusha adc mov test push pusha int3 outsl fstps lods xor (bad) jno stos push mov mov enter mov pop adc mov inc cli xor adc rorl (bad) push imul inc mov add dec add jb mov sbb xor or lea sub adc add dec test add jge mov jge shlb mov mov pop shrb mov (bad) jne mov xchg sbb fwait lcall in xor xchg pop add and adc adc xor jo jae popf mov lock push jo pop cwtl add mov subl sarl adc pusha jle mov or inc popa add stc insb inc pop add add mov or jns es pop hlt popa pushf pusha dec mov pop xchg cs cli out mov mov mov neg nop (bad) fcomp mov gs std popa mov push jmp add cld movsl mov rcl push (bad) call daa push xchg repz push push push inc add push ss mov push mov sub xchg dec jl lds xor adc inc scas adc sub sbb mov sbb fcomps imul sub pop das rclb stos add or movsb imul mov jecxz sbb addr16 mov cmp ss ficompl mov push test or add mov pop adc push movsb xchg jg lcall mov jp popf rorb mov xchg roll mov sbb lea and pop pop in test out or fs fadd insb arpl fwait outsb mov insb lock jo dec and and aaa or xchg outsl roll movl outsb in xchg pop cld or fdivs or lds test inc lcall jo xchg lret xor dec pop or loop and sti and push xor xchg jo mov mov je test sarb pop inc sub movsl or in add (bad) pop mov adc xor jno inc pusha inc in sbb add cmp push inc mov mov repz and movsl and cld call int3 jmp insb xchg ljmp adcl test jb push mov imul mov lcall cmp adcl push movsl cmp mov hlt lcall in inc sti dec cld andb cmp mov js inc add cmpl sub add dec adc popa shl adcl mov jle add jmp lcall push fs aad negb push bound xchg jl stos int in fild or in in jne push push pusha push xbegin jb and leave in movsb fnop or nop adc sub xor mov aad push (bad) mov xchg data16 lahf xor or lea cld fwait push pop lock test je xchg inc xor movsb push aam sbb add ret lds (bad) adc adc dec scas mov dec push aam xor sub inc inc pop dec pop push (bad) repz cwtl add fmuls fsubs (bad) ret ret sti sub test clc iret mov mov (bad) aam sub outsl push dec and or pop fmuls sbb fmuls mov je iret push fisttpl lock lock cmp dec or sub add sub subb ret push or fdivrl icebp cmp or jns add daa cmpsb mov add imul mov mov or xor sahf add mov adc xor inc push inc dec push xchg add lcall dec dec dec pop inc gs inc jae dec push roll and add pushl add fwait push aaa in jg inc dec arpl popa fs data16 popa outsb add xor xor add xor mov add or xor jmp imul ss and mov and mov inc adc and (bad) xadd cmp insl ss xor (bad) pusha or jbe imul push add push and add and or xor and sbb lds and inc popa sub add sub push pop jg xchg add or jnp scas mov lcall cmpsb fnstsw fwait pop outsl insl bound loope hlt es out adc dec test cmpl or and inc cmp push dec pop dec or and or mov call jno imul popa inc and rcr jb test loopne andl (bad) jns dec aas and inc rcrl add dec lahf mulb jae outsb push arpl inc pop cmc mov xchg xor js or or sub mov push dec adc adc arpl lds mov xor push xchg andl jno stos or pop push arpl nop xor fildl nop mov inc adc roll gs mov mov dec in das cmpsb add or loope pop inc arpl push cmp sbb push dec jl add xor jno imul xchg jbe sbb jns outsb sbb icebp xchg add push outsb xchg cmpsb mov fdivs (bad) enter inc pop xor fwait push xor pop xchg mov mov add (bad) mov fadd (bad) dec jbe pusha add pop add int3 add dec rcll sbb add cs shl int jmp add dec shrl call pop add mov push sbb adc add mov cmpl es cmp sti dec adc nop (bad) (bad) mov mov lcall cwtl or insl and adc xchg jp fdivs not pusha repz lahf (bad) xor sbb xlat lock push sub les xor xor cs mov cmp or xchg cmp sub aad add xchg subb xchg cmp push push sub cmpsb mov sub mov stc ss mov pop pop jge ljmp push lcall cli dec sub imul stos lahf mov insl jne std aad jge xor add and jp jmp dec rol xor repz insb push js mov incl xchg or cmp icebp outsl push dec sub add int xor and xchg xor sahf ja pop push adc and adc add cli out sub adc fistpl lgdtl das jle push ret popf not pop sbb movlps push mov xor lock add cmp div mov call lahf lock mov adc mov dec and cs loope (bad) lock testl add jb,pn jb xchg ja and je das out clc adc xchg test add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja mov mov xchg rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 